<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="TraceModule">
<!-- 
		############################ DOC ACCEPTANCE LIST :: START ::
		######################################
	-->


	<select id="isValidCarrierCode1" parameterClass="map"
		resultClass="java.lang.String">
		SELECT to_char(COUNT(1))
		FROM MAST_CARRIER
		where upper(code) = upper(#CODE#)
   	</select>
   	
	<select id="invPcValue" parameterClass="cargo.cms.trace.bo.AbandonedCargoBO"
		resultClass="java.lang.String">
		select decode(sum(ai.locn_pcs),null,'',sum(ai.locn_pcs))||'/'||
		decode(sum(ai.locn_wt),null,'',sum(ai.locn_wt)) invPcWt
		from awb_inventory ai
		where ai.awb_no = #awbNo#
		and ai.awb_date = TO_DATE(#awbDate#,'DDMONYY')
   	</select>
   	
	<select id="CARGO_ABN_SRCH" parameterClass="cargo.cms.trace.bo.AbandonedCargoBO"
		resultClass="cargo.cms.trace.bo.AbandonedCargoBO">
		select
		SUBSTR(awb.awb_no,1,3)||'-'||SUBSTR(awb.awb_no,4)
		awbNoDisplay,to_char(awb.awb_date,'DDMONYY') awbDate,substr
		(awb.awb_no, 1, 3) as awbPfx, substr (awb.awb_no, 4) as awbSfx,
		awb.awb_type as awbType, awb.awb_no as awbNo, awb.orig as origin,
		awb.dest as dest,
		ec.shpr_name as expShipper,
		ec.csgne_name as expConsignee,
		decode(ic.shpr_name,'',ec.shpr_name,ic.shpr_name) as impShipper,
		decode(ic.csgne_name,'',ec.csgne_name,ic.csgne_name) as impConsignee,
		awb.content as content,
		decode(awb.spl_code1, null, '', awb.spl_code1)
		|| decode(awb.spl_code2, null, '', ',' ||
		awb.spl_code2)
		|| decode(awb.spl_code3, null, '', ',' || awb.spl_code3)
		|| decode(awb.spl_code4, null, '', ',' || awb.spl_code4)
		||
		decode(awb.spl_code5, null, '', ',' ||awb.spl_code5)
		||
		decode(awb.spl_code6, null, '', ',' || awb.spl_code6)
		||
		decode(awb.spl_code7, null, '', ',' || awb.spl_code7)
		||
		decode(awb.spl_code8, null, '', ',' || awb.spl_code8)
		||
		decode(awb.spl_code9, null, '', ',' || awb.spl_code9) as shc,
		decode(awb.pcs,null,'',awb.pcs)||'/'||
		decode(awb.wt,null,'',awb.wt) awbPcWt,		
		Decode(Awb.Awb_Type,'I', Decode(Ics.Flt_Key,Null,'',Ics.Flt_Key  || '/' ||  To_Char(Ics.Flt_Date,'DDMONYY')),'') AS impFltNoDate
		from awb awb
		left join exp_car ec on ec.awb_no = awb.awb_no	and ec.awb_date = awb.awb_date
		left join imp_car_awb ic on ic.awb_no = awb.awb_no and ic.awb_date = awb.awb_date
		left join imp_car_shp ics on ics.awb_no = awb.awb_no and ics.awb_date = awb.awb_date
		left join exp_pmanifest_awb epa	on epa.awb_no = awb.awb_no	and epa.awb_date = awb.awb_date
		where (awb.spl_code1 = 'ABN'
		or awb.spl_code2 = 'ABN'
		or awb.spl_code3 = 'ABN'
		or awb.spl_code4 = 'ABN'
		or awb.spl_code5 = 'ABN'
		or awb.spl_code6 = 'ABN'
		or awb.spl_code7 = 'ABN'
		or awb.spl_code8 = 'ABN'
		or awb.spl_code9 = 'ABN')
		<isNotEmpty prepend="AND" property="carr">
			awb.carr_code = #carr#
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="awbType">
			awb.awb_type = #awbType#
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="catalog">
			awb.catalog = #catalog#
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="awbNo">
			awb.awb_no = #awbNo#
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="agentName">
			awb.AGENT_NAME = #agentName#
		</isNotEmpty>
		
		<isEmpty property="carr">
			<isEmpty property="awbNo">
				<isNotEmpty property="loginCarrier">
				   AND ( awb.carr_code= #loginCarrier# OR  awb.carr_code IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE  = #loginCarrier#))             
            	</isNotEmpty>
            </isEmpty>
        </isEmpty>	
            
            
		<dynamic prepend="ORDER BY ">
			<isNotEmpty property="sortOrder.sortField">
				$sortOrder.sortField$
	           </isNotEmpty>
		</dynamic>
	</select>
	
	<select id="CARGO_ABN_CHK_AWB" parameterClass="cargo.cms.trace.bo.AbandonedCargoBO"
		resultClass="java.lang.Integer">
		SELECT COUNT(1)
		FROM AWB
		where AWB_NO = #awbNo#
		<isNotEmpty prepend="AND" property="carr">
			CARR_CODE=#carr#
		 </isNotEmpty>
	</select>
	
<!--	Queries for Inactive/Old Cargo List Starts-->
	<select id="CARGO_AWBT_SRCH" parameterClass="cargo.cms.trace.bo.InactiveOldCargoBO"	resultClass="cargo.cms.trace.bo.InactiveOldCargoBO">		 	      	    
			SELECT  awb.AWB_TYPE  awbType,
	        substr (awb.AWB_NO, 1, 3)||'-'||substr (awb.AWB_NO, 4) as awbNo,
	        substr (awb.AWB_NO, 1, 3) as awbPfx,
	        substr (awb.AWB_NO, 4) as awbSfx,
	        awb.ORIG  origin,awb.DEST  dest,
	        awb.CONTENT  content,
        	awb.SPL_CODE1  awb1,
		    awb.SPL_CODE2  awb2, 
		    awb.SPL_CODE3  awb3,
		    decode(awb.spl_code1, null, '', awb.spl_code1 || decode(awb.spl_code2, null, '', ','))
               		|| decode(awb.spl_code2, null, '', awb.spl_code2 || decode(awb.spl_code3, null, '', ','))
               		|| decode(awb.spl_code3, null, '', awb.spl_code3 || decode(awb.spl_code4, null, '', ','))
              		|| decode(awb.spl_code4, null, '', awb.spl_code4 || decode(awb.spl_code5, null, '', ','))
               		|| Decode(Awb.Spl_Code5, Null, '', Awb.Spl_Code5 || Decode(Awb.Spl_Code6, Null, '', ','))
              		|| decode(awb.spl_code6, null, '', awb.spl_code6 || decode(awb.spl_code7, null, '', ','))
               		|| decode(awb.spl_code7, null, '', awb.spl_code7 || decode(awb.spl_code8, null, '', ','))
               		|| decode(awb.spl_code8, null, '', awb.spl_code8 || decode(awb.spl_code9, null, '', ','))
               		|| Decode(Awb.Spl_Code9, Null, '', Awb.Spl_Code9)  AS awb,
	        awb.PCS awbPc,awb.WT awbWt,
	        decode(awb.PCS||'/'||awb.WT,'/','',awb.PCS||'/'||awb.WT) awbPcWt,
	        awbinv.LOCN_PCS locpcs,awbinv.LOCN_WT locwt,
	        decode(awbinv.LOCN_PCS||'/'||awbinv.LOCN_WT,'/','',awbinv.LOCN_PCS||'/'||awbinv.LOCN_WT) locnPcWt,
	      sp.FLT_key impFltNo, TO_CHAR(sp.FLT_DATE,'DDMONYY') impFltNoDate, 
          Decode(Awb.Awb_Type,'E','', Decode(sp.Flt_Key,Null,'',sp.Flt_Key  || '/' ||  To_Char(sp.Flt_Date,'DDMONYY'))) AS fltNoDate,	   
          Nvl(Ic.Shpr_Name,Ec.Shpr_Name) As expShipper,
          Nvl(Ic.Csgne_Name,Ec.Csgne_Name) As expConsignee
          From Awb Awb 
          JOIN Awb_Inventory Awbinv On awb.awb_no=awbinv.awb_no and awb.awb_date=awbinv.awb_date
          Left Join Imp_Car_Awb Ic On Ic.Awb_No = Awb.Awb_No And Ic.AWB_DATE = Awb.AWB_DATE And (AWB.AWB_TYPE = 'I' Or AWB.AWB_TYPE ='T')
          Left Join Imp_Car_shp sp On sp.Awb_No = Awb.Awb_No And sp.AWB_DATE = Awb.AWB_DATE And (AWB.AWB_TYPE = 'I' Or AWB.AWB_TYPE ='T')
          Left Join Exp_Car Ec On Ec.Awb_No = Awb.Awb_No And Ec.AWB_DATE = Awb.Awb_Date And Awb.Awb_Type = 'E'
          where 1 = 1 	     
	     <isNotEmpty property="movmentdays">
	      And (Awbinv.Awb_No,Awbinv.Awb_Date) Not In 
            (         
              (Select Awb_No,Awb_Date From Awb_Mov Where Mov_Date &gt; Sysdate - #movmentdays# And           
              nvl(Mov_From,'*') Not In (Select Code From Mast_Wh_Loc Where Wh_Group In (Select Wh_Group From Mast_Wh_Group Where Wh_Type='MHS')) AND 
              nvl(Mov_To,'*') Not In (Select Code From Mast_Wh_Loc Where Wh_Group In (Select Wh_Group From Mast_Wh_Group Where Wh_Type='MHS')))          
            )        
		 </isNotEmpty>
	     <isNotEmpty property="awbType">
			AND awb.AWB_TYPE=#awbType# 
		  </isNotEmpty>
    	  <isNotEmpty property="carr">
			AND awb.CARR_CODE=#carr# 
          </isNotEmpty>
		 <isNotEmpty property="splCode">
			And ( ((#awb1#) In (awb.Spl_Code1,awb.Spl_Code2,awb.Spl_Code3,awb.Spl_Code4,awb.Spl_Code5,awb.Spl_Code6,awb.Spl_Code7,awb.Spl_Code8,awb.Spl_Code9)) Or 
				  ((#awb2#) In (awb.Spl_Code1,awb.Spl_Code2,awb.Spl_Code3,awb.Spl_Code4,awb.Spl_Code5,awb.Spl_Code6,awb.Spl_Code7,awb.Spl_Code8,awb.Spl_Code9)) Or 
				  ((#awb3#) In (awb.Spl_Code1,awb.Spl_Code2,awb.Spl_Code3,awb.Spl_Code4,awb.Spl_Code5,awb.Spl_Code6,awb.Spl_Code7,awb.Spl_Code8,awb.Spl_Code9))  )
         </isNotEmpty>
         <isNotEmpty property="agentName">
			AND awb.agent_name = #agentName#
         </isNotEmpty>
         <isNotEmpty property="loginCarrier">
				   AND ( awb.CARR_CODE = #loginCarrier#   OR  awb.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP  WHERE GRP_CARR_CODE = #loginCarrier#))             
          </isNotEmpty>
	     <dynamic prepend="ORDER BY ">
	            <isNotEmpty property="sortOrder.sortField">
	                $sortOrder.sortField$
	           </isNotEmpty>
	    </dynamic>
	    
	</select>
	
	<select id="CARGO_AWBT_SRCHCOUNT" parameterClass="cargo.cms.trace.bo.InactiveOldCargoBO"
		resultClass="java.lang.Integer">
	 SELECT COUNT(1) AS totalRowCount FROM (	      	    
		 SELECT   awb.AWB_TYPE  awbType,
	        substr (awb.AWB_NO, 1, 3)||'-'||substr (awb.AWB_NO, 4) as awbNo,
	        substr (awb.AWB_NO, 1, 3) as awbPfx,
	        substr (awb.AWB_NO, 4) as awbSfx,
	        awb.ORIG  origin,awb.DEST  dest,
	        awb.CONTENT  content,
        	awb.SPL_CODE1  awb1,
		    awb.SPL_CODE2  awb2, 
		    awb.SPL_CODE3  awb3,
		    decode(awb.spl_code1, null, '', awb.spl_code1 || decode(awb.spl_code2, null, '', ','))
               		|| decode(awb.spl_code2, null, '', awb.spl_code2 || decode(awb.spl_code3, null, '', ','))
               		|| decode(awb.spl_code3, null, '', awb.spl_code3 || decode(awb.spl_code4, null, '', ','))
              		|| decode(awb.spl_code4, null, '', awb.spl_code4 || decode(awb.spl_code5, null, '', ','))
               		|| Decode(Awb.Spl_Code5, Null, '', Awb.Spl_Code5 || Decode(Awb.Spl_Code6, Null, '', ','))
              		|| decode(awb.spl_code6, null, '', awb.spl_code6 || decode(awb.spl_code7, null, '', ','))
               		|| decode(awb.spl_code7, null, '', awb.spl_code7 || decode(awb.spl_code8, null, '', ','))
               		|| decode(awb.spl_code8, null, '', awb.spl_code8 || decode(awb.spl_code9, null, '', ','))
               		|| Decode(Awb.Spl_Code9, Null, '', Awb.Spl_Code9)  AS awb,
	        awb.PCS awbPc,awb.WT awbWt,
	        decode(awb.PCS||'/'||awb.WT,'/','',awb.PCS||'/'||awb.WT) awbPcWt,
	        awbinv.LOCN_PCS locpcs,awbinv.LOCN_WT locwt,
	        decode(awbinv.LOCN_PCS||'/'||awbinv.LOCN_WT,'/','',awbinv.LOCN_PCS||'/'||awbinv.LOCN_WT) locnPcWt,
	      sp.FLT_key impFltNo, TO_CHAR(sp.FLT_DATE,'DDMONYY') impFltNoDate, 
          Decode(Awb.Awb_Type,'E','', Decode(sp.Flt_Key,Null,'',sp.Flt_Key  || '/' ||  To_Char(sp.Flt_Date,'DDMONYY'))) AS fltNoDate,	   
          Nvl(Ic.Shpr_Name,Ec.Shpr_Name) As expShipper,
          Nvl(Ic.Csgne_Name,Ec.Csgne_Name) As expConsignee 
		  From Awb Awb 
          JOIN Awb_Inventory Awbinv On awb.awb_no=awbinv.awb_no and awb.awb_date=awbinv.awb_date
          Left Join Imp_Car_Awb Ic On Ic.Awb_No = Awb.Awb_No And Ic.AWB_DATE = Awb.AWB_DATE And (AWB.AWB_TYPE = 'I' Or AWB.AWB_TYPE ='T')
          Left Join Imp_Car_shp sp On sp.Awb_No = Awb.Awb_No And sp.AWB_DATE = Awb.AWB_DATE And (AWB.AWB_TYPE = 'I' Or AWB.AWB_TYPE ='T')
          Left Join Exp_Car Ec On Ec.Awb_No = Awb.Awb_No And Ec.AWB_DATE = Awb.Awb_Date And Awb.Awb_Type = 'E'
          where 1 = 1  	     
	     <isNotEmpty property="movmentdays">
	      And (Awbinv.Awb_No,Awbinv.Awb_Date) Not In 
            (         
              (Select Awb_No,Awb_Date From Awb_Mov Where Mov_Date &gt; Sysdate - #movmentdays# And           
              nvl(Mov_From,'*') Not In (Select Code From Mast_Wh_Loc Where Wh_Group In (Select Wh_Group From Mast_Wh_Group Where Wh_Type='MHS')) AND 
              nvl(Mov_To,'*') Not In (Select Code From Mast_Wh_Loc Where Wh_Group In (Select Wh_Group From Mast_Wh_Group Where Wh_Type='MHS')))          
            )         
		 </isNotEmpty>
	     <isNotEmpty property="awbType">
			AND awb.AWB_TYPE=#awbType# 
		  </isNotEmpty>
	     <isNotEmpty property="carr">
			AND awb.CARR_CODE=#carr# 
          </isNotEmpty>
		 <isNotEmpty property="splCode">
		    And ( ((#awb1#) In (awb.Spl_Code1,awb.Spl_Code2,awb.Spl_Code3,awb.Spl_Code4,awb.Spl_Code5,awb.Spl_Code6,awb.Spl_Code7,awb.Spl_Code8,awb.Spl_Code9)) Or 
				  ((#awb2#) In (awb.Spl_Code1,awb.Spl_Code2,awb.Spl_Code3,awb.Spl_Code4,awb.Spl_Code5,awb.Spl_Code6,awb.Spl_Code7,awb.Spl_Code8,awb.Spl_Code9)) Or 
				  ((#awb3#) In (awb.Spl_Code1,awb.Spl_Code2,awb.Spl_Code3,awb.Spl_Code4,awb.Spl_Code5,awb.Spl_Code6,awb.Spl_Code7,awb.Spl_Code8,awb.Spl_Code9))  )
	     </isNotEmpty>
	     <isNotEmpty property="agentName">
			AND awb.agent_name = #agentName#
         </isNotEmpty>
         <isNotEmpty property="loginCarrier">
				   AND ( awb.CARR_CODE = #loginCarrier#   OR  awb.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP  WHERE GRP_CARR_CODE = #loginCarrier#))             
          </isNotEmpty>
     	)
	</select>
	
	<select id="CARGO_AWBT_SRCH_ALL" parameterClass="cargo.cms.trace.bo.InactiveOldCargoBO"
		resultClass="cargo.cms.trace.bo.InactiveOldCargoBO">
		WITH AWBMOVE as(
		      Select Awb_No,Awb_Date From Awb_Mov Where Mov_Date &gt; Sysdate - #movmentdays# and    
		              nvl(Mov_From,'*') Not In (Select Code From Mast_Wh_Loc Where Wh_Group In (Select Wh_Group From Mast_Wh_Group Where Wh_Type='MHS')) AND 
		              nvl(Mov_To,'*') Not In (Select Code From Mast_Wh_Loc Where Wh_Group In (Select Wh_Group From Mast_Wh_Group Where Wh_Type='MHS'))
		  )
 		SELECT  awb.AWB_TYPE  awbType,awb.AWB_date  awbDate,
                substr (awb.AWB_NO, 1, 3)||'-'||substr (awb.AWB_NO, 4) as awbNo,
                substr (awb.AWB_NO, 1, 3) as awbPfx,
                substr (awb.AWB_NO, 4) as awbSfx,
                awb.ORIG  origin,awb.DEST  dest,
                awb.CONTENT  content,
                        awb.SPL_CODE1  awb1, awb.SPL_CODE2  awb2, awb.SPL_CODE3  awb3,
                decode(awb.spl_code1, null, '', awb.spl_code1 || decode(awb.spl_code2, null, '', ','))
                         || decode(awb.spl_code2, null, '', awb.spl_code2 || decode(awb.spl_code3, null, '', ','))
                         || decode(awb.spl_code3, null, '', awb.spl_code3 || decode(awb.spl_code4, null, '', ','))
                         || decode(awb.spl_code4, null, '', awb.spl_code4 || decode(awb.spl_code5, null, '', ','))
                         || Decode(Awb.Spl_Code5, Null, '', Awb.Spl_Code5 || Decode(Awb.Spl_Code6, Null, '', ','))
                         || decode(awb.spl_code6, null, '', awb.spl_code6 || decode(awb.spl_code7, null, '', ','))
                         || decode(awb.spl_code7, null, '', awb.spl_code7 || decode(awb.spl_code8, null, '', ','))
                         || decode(awb.spl_code8, null, '', awb.spl_code8 || decode(awb.spl_code9, null, '', ','))
                         || Decode(Awb.Spl_Code9, Null, '', Awb.Spl_Code9)  AS awb,
                awb.PCS awbPc,awb.WT awbWt,
                decode(awb.PCS||'/'||awb.WT,'/','',awb.PCS||'/'||awb.WT) awbPcWt,
                awbinv.LOCN_PCS locpcs,awbinv.LOCN_WT locwt,
                decode(awbinv.LOCN_PCS||'/'||awbinv.LOCN_WT,'/','',awbinv.LOCN_PCS||'/'||awbinv.LOCN_WT) locnPcWt,       
                sp.FLT_key impFltNo, TO_CHAR(sp.FLT_DATE,'DDMONYY') impFltNoDate, 
            Decode(Awb.Awb_Type,'E','', Decode(sp.Flt_Key,Null,'',sp.Flt_Key  || '/' ||  To_Char(sp.Flt_Date,'DDMONYY'))) AS fltNoDate, 
                 Nvl(Ic.Shpr_Name,Ec.Shpr_Name) As expShipper,
                 Nvl(Ic.Csgne_Name,Ec.Csgne_Name) As expConsignee
          From Awb Awb
          JOIN Awb_Inventory Awbinv On awb.awb_no=awbinv.awb_no and awb.awb_date=awbinv.awb_date
          Left Join Imp_Car_Awb Ic On Ic.Awb_No = Awb.Awb_No And Ic.AWB_DATE = Awb.AWB_DATE And (AWB.AWB_TYPE = 'I' Or AWB.AWB_TYPE ='T')
          Left Join Imp_Car_shp sp On sp.Awb_No = Awb.Awb_No And sp.AWB_DATE = Awb.AWB_DATE And (AWB.AWB_TYPE = 'I' Or AWB.AWB_TYPE ='T')
          Left Join Exp_Car Ec On Ec.Awb_No = Awb.Awb_No And Ec.AWB_DATE = Awb.Awb_Date And Awb.Awb_Type = 'E'
          where 1 = 1
         <isNotEmpty property="movmentdays">
	      And (Awbinv.Awb_No,Awbinv.Awb_Date) Not In 
            (         
              (Select Awb_No,Awb_Date From AWBMOVE
              union all
              Select Awb_No,Awb_Date From Awb_Inventory Where cr_Date &gt; Sysdate - #movmentdays# and 
              not exists(Select null From AWBMOVE WHERE awb_no=awb.awb_no))    
            )
		 </isNotEmpty>
          <isNotEmpty property="awbType">
			AND awb.AWB_TYPE=#awbType# 
	      </isNotEmpty>
       	  <isNotEmpty property="carr">
			AND awb.CARR_CODE=#carr# 
          </isNotEmpty>
		  <isNotEmpty property="splCode">
			And ( ((#awb1#) In (awb.Spl_Code1,awb.Spl_Code2,awb.Spl_Code3,awb.Spl_Code4,awb.Spl_Code5,awb.Spl_Code6,awb.Spl_Code7,awb.Spl_Code8,awb.Spl_Code9)) Or 
				  ((#awb2#) In (awb.Spl_Code1,awb.Spl_Code2,awb.Spl_Code3,awb.Spl_Code4,awb.Spl_Code5,awb.Spl_Code6,awb.Spl_Code7,awb.Spl_Code8,awb.Spl_Code9)) Or 
				  ((#awb3#) In (awb.Spl_Code1,awb.Spl_Code2,awb.Spl_Code3,awb.Spl_Code4,awb.Spl_Code5,awb.Spl_Code6,awb.Spl_Code7,awb.Spl_Code8,awb.Spl_Code9))  )
	      </isNotEmpty>
	      <isNotEmpty property="agentName">
				AND awb.agent_name = #agentName#
	      </isNotEmpty>
	      <isNotEmpty property="loginCarrier">
				   AND ( awb.CARR_CODE = #loginCarrier#   OR  awb.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP  WHERE GRP_CARR_CODE = #loginCarrier#))             
          </isNotEmpty>	      
	 	<dynamic prepend="ORDER BY ">
	         <isNotEmpty property="sortOrder.sortField">
	            $sortOrder.sortField$
	         </isNotEmpty>
	    </dynamic>
	</select>
	<select id="CARGO_AWBT_SRCH_ALLCOUNT" parameterClass="cargo.cms.trace.bo.InactiveOldCargoBO" resultClass="java.lang.Integer">	       	    
      SELECT COUNT(1) AS totalRowCount FROM (
      	With AWBMOVE as(
      			Select Awb_No,Awb_Date From Awb_Mov Where Mov_Date &gt; Sysdate - #movmentdays# and    
	              nvl(Mov_From,'*') Not In (Select Code From Mast_Wh_Loc Where Wh_Group In (Select Wh_Group From Mast_Wh_Group Where Wh_Type='MHS')) AND 
	              nvl(Mov_To,'*') Not In (Select Code From Mast_Wh_Loc Where Wh_Group In (Select Wh_Group From Mast_Wh_Group Where Wh_Type='MHS'))
      		)
	    SELECT  awb.AWB_TYPE  awbType,awb.AWB_date  awbDate,
                substr (awb.AWB_NO, 1, 3)||'-'||substr (awb.AWB_NO, 4) as awbNo,
                substr (awb.AWB_NO, 1, 3) as awbPfx,
                substr (awb.AWB_NO, 4) as awbSfx,
                awb.ORIG  origin,awb.DEST  dest,
                awb.CONTENT  content,
                        awb.SPL_CODE1  awb1, awb.SPL_CODE2  awb2, awb.SPL_CODE3  awb3,
                decode(awb.spl_code1, null, '', awb.spl_code1 || decode(awb.spl_code2, null, '', ','))
                         || decode(awb.spl_code2, null, '', awb.spl_code2 || decode(awb.spl_code3, null, '', ','))
                         || decode(awb.spl_code3, null, '', awb.spl_code3 || decode(awb.spl_code4, null, '', ','))
                         || decode(awb.spl_code4, null, '', awb.spl_code4 || decode(awb.spl_code5, null, '', ','))
                         || Decode(Awb.Spl_Code5, Null, '', Awb.Spl_Code5 || Decode(Awb.Spl_Code6, Null, '', ','))
                         || decode(awb.spl_code6, null, '', awb.spl_code6 || decode(awb.spl_code7, null, '', ','))
                         || decode(awb.spl_code7, null, '', awb.spl_code7 || decode(awb.spl_code8, null, '', ','))
                         || decode(awb.spl_code8, null, '', awb.spl_code8 || decode(awb.spl_code9, null, '', ','))
                         || Decode(Awb.Spl_Code9, Null, '', Awb.Spl_Code9)  AS awb,
                awb.PCS awbPc,awb.WT awbWt,
                decode(awb.PCS||'/'||awb.WT,'/','',awb.PCS||'/'||awb.WT) awbPcWt,
                awbinv.LOCN_PCS locpcs,awbinv.LOCN_WT locwt,
                decode(awbinv.LOCN_PCS||'/'||awbinv.LOCN_WT,'/','',awbinv.LOCN_PCS||'/'||awbinv.LOCN_WT) locnPcWt,       
                ic.FLT_key impFltNo, TO_CHAR(ic.FLT_DATE,'DDMONYY') impFltNoDate, 
            Decode(Awb.Awb_Type,'E','', Decode(ic.Flt_Key,Null,'',ic.Flt_Key  || '/' ||  To_Char(ic.Flt_Date,'DDMONYY'))) AS fltNoDate, 
                 Nvl(Ic.Shpr_Name,Ec.Shpr_Name) As expShipper,
                 Nvl(Ic.Csgne_Name,Ec.Csgne_Name) As expConsignee
          From Awb Awb
          JOIN Awb_Inventory Awbinv On awb.awb_no=awbinv.awb_no and awb.awb_date=awbinv.awb_date
          left join (select a.flt_key,a.flt_date,a.awb_no,a.awb_date,Shpr_Name,Csgne_Name
          from imp_car_shp a,imp_car_awb b
          where a.awb_no=b.awb_no and a.awb_date=b.awb_date) ic
          ON Ic.Awb_No      = Awb.Awb_No
          AND Ic.AWB_DATE   = Awb.AWB_DATE
          AND (AWB.AWB_TYPE = 'I'
          OR AWB.AWB_TYPE   ='T')
          Left Join Exp_Car Ec On Ec.Awb_No = Awb.Awb_No And Ec.AWB_DATE = Awb.Awb_Date And Awb.Awb_Type = 'E'
          where 1 = 1
         <isNotEmpty property="movmentdays">
	      And (Awbinv.Awb_No,Awbinv.Awb_Date) Not In 
            (         
              (
              Select Awb_No,Awb_Date From AWBMOVE
              union all
              Select Awb_No,Awb_Date From Awb_Inventory Where cr_Date &gt; Sysdate - #movmentdays# and 
              not exists(Select null From AWBMOVE WHERE awb_no=awb.awb_no)
              )          
            )        
		 </isNotEmpty>
          <isNotEmpty property="awbType">
			AND awb.AWB_TYPE=#awbType# 
	      </isNotEmpty>
       	  <isNotEmpty property="carr">
			AND awb.CARR_CODE=#carr# 
          </isNotEmpty>
		  <isNotEmpty property="splCode">
			And ( ((#awb1#) In (awb.Spl_Code1,awb.Spl_Code2,awb.Spl_Code3,awb.Spl_Code4,awb.Spl_Code5,awb.Spl_Code6,awb.Spl_Code7,awb.Spl_Code8,awb.Spl_Code9)) Or 
				  ((#awb2#) In (awb.Spl_Code1,awb.Spl_Code2,awb.Spl_Code3,awb.Spl_Code4,awb.Spl_Code5,awb.Spl_Code6,awb.Spl_Code7,awb.Spl_Code8,awb.Spl_Code9)) Or 
				  ((#awb3#) In (awb.Spl_Code1,awb.Spl_Code2,awb.Spl_Code3,awb.Spl_Code4,awb.Spl_Code5,awb.Spl_Code6,awb.Spl_Code7,awb.Spl_Code8,awb.Spl_Code9))  )
	      </isNotEmpty>
	      <isNotEmpty property="agentName">
				AND awb.agent_name = #agentName#
	      </isNotEmpty>
	      <isNotEmpty property="loginCarrier">
				   AND ( awb.CARR_CODE = #loginCarrier#   OR  awb.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP  WHERE GRP_CARR_CODE = #loginCarrier#))             
          </isNotEmpty>	       
	 	)
	</select>
	<select id="CARGO_AWBT_OLD_SRCH" parameterClass="cargo.cms.trace.bo.InactiveOldCargoBO"
		resultClass="cargo.cms.trace.bo.InactiveOldCargoBO">
	    SELECT AWB.AWB_TYPE awbType,
			  SUBSTR (awb.AWB_NO, 1, 3)
			  ||'-'
			  ||SUBSTR (awb.AWB_NO, 4)  AS awbNo,
			  SUBSTR (awb.AWB_NO, 1, 3) AS awbPfx,
			  SUBSTR (awb.AWB_NO, 4)    AS awbSfx,
			  awb.ORIG origin,
			  awb.DEST dest,			  
			  awb.CONTENT content,
			  awb.SPL_CODE1 awb1,
			  awb.SPL_CODE2 awb2,
			  awb.SPL_CODE3 awb3,
			  decode(awb.spl_code1, null, '', awb.spl_code1 || decode(awb.spl_code2, null, '', ','))
               		|| decode(awb.spl_code2, null, '', awb.spl_code2 || decode(awb.spl_code3, null, '', ','))
               		|| decode(awb.spl_code3, null, '', awb.spl_code3 || decode(awb.spl_code4, null, '', ','))
              		|| decode(awb.spl_code4, null, '', awb.spl_code4 || decode(awb.spl_code5, null, '', ','))
               		|| Decode(Awb.Spl_Code5, Null, '', Awb.Spl_Code5 || Decode(Awb.Spl_Code6, Null, '', ','))
              		|| decode(awb.spl_code6, null, '', awb.spl_code6 || decode(awb.spl_code7, null, '', ','))
               		|| decode(awb.spl_code7, null, '', awb.spl_code7 || decode(awb.spl_code8, null, '', ','))
               		|| decode(awb.spl_code8, null, '', awb.spl_code8 || decode(awb.spl_code9, null, '', ','))
               		|| Decode(Awb.Spl_Code9, Null, '', Awb.Spl_Code9)  AS awb,
			  awb.PCS awbPc,
			  Awb.Wt Awbwt,
			  DECODE(awb.PCS ||'/' ||awb.WT,'/','',awb.PCS || '/' ||awb.WT) awbPcWt,
			  I.Inv_Pcs Locpcs,
			  I.Inv_Wt Locwt,
			  DECODE(I.INV_PCS ||'/'|| I.INV_WT,'/','',I.Inv_Pcs ||'/' ||I.Inv_Wt) locnPcWt,
			  A.FLT_KEY impFltNo,
			  TO_CHAR(A.FLT_DATE,'DDMONYY') impFltNoDate,			  
			  Decode(Awb.Awb_Type,'I', Decode(A.Flt_Key,Null,'',A.Flt_Key  || '/' ||  To_Char(A.Flt_Date,'DDMONYY')),'') As Fltnodate,	 
       		  Nvl(Ic.Shpr_Name,Ec.Shpr_Name) As expShipper,
        	  Nvl(Ic.Csgne_Name,Ec.Csgne_Name) As expConsignee
			From Imp_Car_Awb B
			Join Awb On Awb.Awb_No    = B.Awb_No And Awb.Awb_Date = B.Awb_Date
			Join Imp_Car_Shp A On A.Awb_No = B.Awb_No And A.Awb_Date = B.Awb_Date		
     		Left Join Imp_Car_Awb Ic On Ic.Awb_No = Awb.Awb_No And Ic.Awb_Date = Awb.Awb_Date And (Awb.Awb_Type = 'I' Or Awb.Awb_Type ='T')
      		Left Join Exp_Car Ec On Ec.Awb_No = Awb.Awb_No And Ec.AWB_DATE = Awb.Awb_Date And Awb.Awb_Type = 'E'
			JOIN CUST_COMPANY COMP ON COMP.CODE_DESC = B.APPNTD_AGENT
			Join  (Select Awb_No,Awb_Date,Flt_Key,Flt_Date,Sum(Locn_Pcs) Inv_Pcs,Sum(Locn_Wt) Inv_Wt, Min(Seq_No) Seq_No,Count(1) Inv_Count
      		From Awb_Inventory  GROUP BY Awb_No, Awb_Date, Flt_Key, Flt_Date) I On A.Awb_No = I.Awb_No And A.Awb_Date = I.Awb_Date And A.Flt_Key = I.Flt_Key And A.Flt_Date = I.Flt_Date			
			WHERE 1 = 1 
 		 <isNotEmpty property="movmentdays">
	      And (Awb.Awb_No,Awb.Awb_Date) Not In 
            (         
              (Select Awb_No,Awb_Date From Awb_Mov Where Mov_Date &gt; Sysdate - #movmentdays# And           
              nvl(Mov_From,'*') Not In (Select Code From Mast_Wh_Loc Where Wh_Group In (Select Wh_Group From Mast_Wh_Group Where Wh_Type='MHS')) AND 
              nvl(Mov_To,'*') Not In (Select Code From Mast_Wh_Loc Where Wh_Group In (Select Wh_Group From Mast_Wh_Group Where Wh_Type='MHS')))          
            )         
		 </isNotEmpty>
 		<isNotEmpty property="awbType">
			AND awb.AWB_TYPE=#awbType# 
		  </isNotEmpty>
 		<isNotEmpty property="carr">
			AND A.CARR_CODE=#carr# 
          </isNotEmpty>
 		<isNotEmpty property="splCode">
			And ( ((#awb1#) In (awb.Spl_Code1,awb.Spl_Code2,awb.Spl_Code3,awb.Spl_Code4,awb.Spl_Code5,awb.Spl_Code6,awb.Spl_Code7,awb.Spl_Code8,awb.Spl_Code9)) Or 
				  ((#awb2#) In (awb.Spl_Code1,awb.Spl_Code2,awb.Spl_Code3,awb.Spl_Code4,awb.Spl_Code5,awb.Spl_Code6,awb.Spl_Code7,awb.Spl_Code8,awb.Spl_Code9)) Or 
				  ((#awb3#) In (awb.Spl_Code1,awb.Spl_Code2,awb.Spl_Code3,awb.Spl_Code4,awb.Spl_Code5,awb.Spl_Code6,awb.Spl_Code7,awb.Spl_Code8,awb.Spl_Code9))  )
     	</isNotEmpty>
      	<isNotEmpty property="agentName">
			AND awb.agent_name = #agentName#
     	</isNotEmpty>
 		<dynamic prepend="ORDER BY ">
              <isNotEmpty property="sortOrder.sortField">
                 $sortOrder.sortField$
              </isNotEmpty>
       </dynamic>
	</select>
	<select id="CARGO_AWBT_OLD_SRCHCOUNT" parameterClass="cargo.cms.trace.bo.InactiveOldCargoBO" resultClass="java.lang.Integer">
	    SELECT COUNT(1) AS totalRowCount
			FROM (SELECT AWB.AWB_TYPE awbType,
			  SUBSTR (awb.AWB_NO, 1, 3)
			  ||'-'
			  ||SUBSTR (awb.AWB_NO, 4)  AS awbNo,
			  SUBSTR (awb.AWB_NO, 1, 3) AS awbPfx,
			  SUBSTR (awb.AWB_NO, 4)    AS awbSfx,
			  awb.ORIG origin,
			  awb.DEST dest,			  
			  awb.CONTENT content,
			  awb.SPL_CODE1 awb1,
			  awb.SPL_CODE2 awb2,
			  awb.SPL_CODE3 awb3,
			  decode(awb.spl_code1, null, '', awb.spl_code1 || decode(awb.spl_code2, null, '', ','))
               		|| decode(awb.spl_code2, null, '', awb.spl_code2 || decode(awb.spl_code3, null, '', ','))
               		|| decode(awb.spl_code3, null, '', awb.spl_code3 || decode(awb.spl_code4, null, '', ','))
              		|| decode(awb.spl_code4, null, '', awb.spl_code4 || decode(awb.spl_code5, null, '', ','))
               		|| Decode(Awb.Spl_Code5, Null, '', Awb.Spl_Code5 || Decode(Awb.Spl_Code6, Null, '', ','))
              		|| decode(awb.spl_code6, null, '', awb.spl_code6 || decode(awb.spl_code7, null, '', ','))
               		|| decode(awb.spl_code7, null, '', awb.spl_code7 || decode(awb.spl_code8, null, '', ','))
               		|| decode(awb.spl_code8, null, '', awb.spl_code8 || decode(awb.spl_code9, null, '', ','))
               		|| Decode(Awb.Spl_Code9, Null, '', Awb.Spl_Code9)  AS awb,
			  awb.PCS awbPc,
			  Awb.Wt Awbwt,
			  DECODE(awb.PCS ||'/' ||awb.WT,'/','',awb.PCS || '/' ||awb.WT) awbPcWt,
			  I.Inv_Pcs Locpcs,
			  I.Inv_Wt Locwt,
			  DECODE(I.INV_PCS ||'/'|| I.INV_WT,'/','',I.Inv_Pcs ||'/' ||I.Inv_Wt) locnPcWt,
			  A.FLT_KEY impFltNo,
			  TO_CHAR(A.FLT_DATE,'DDMONYY') impFltNoDate,			  
			  Decode(Awb.Awb_Type,'I', Decode(A.Flt_Key,Null,'',A.Flt_Key  || '/' ||  To_Char(A.Flt_Date,'DDMONYY')),'') As Fltnodate,	 
       		  Nvl(Ic.Shpr_Name,Ec.Shpr_Name) As expShipper,
        	  Nvl(Ic.Csgne_Name,Ec.Csgne_Name) As expConsignee
			From Imp_Car_Awb B
			Join Awb On Awb.Awb_No    = B.Awb_No And Awb.Awb_Date = B.Awb_Date
			Join Imp_Car_Shp A On A.Awb_No = B.Awb_No And A.Awb_Date = B.Awb_Date		
     		Left Join Imp_Car_Awb Ic On Ic.Awb_No = Awb.Awb_No And Ic.Awb_Date = Awb.Awb_Date And (Awb.Awb_Type = 'I' Or Awb.Awb_Type ='T')
      		Left Join Exp_Car Ec On Ec.Awb_No = Awb.Awb_No And Ec.AWB_DATE = Awb.Awb_Date And Awb.Awb_Type = 'E'
			JOIN CUST_COMPANY COMP ON COMP.CODE_DESC = B.APPNTD_AGENT
			Join  (Select Awb_No,Awb_Date,Flt_Key,Flt_Date,Sum(Locn_Pcs) Inv_Pcs,Sum(Locn_Wt) Inv_Wt, Min(Seq_No) Seq_No,Count(1) Inv_Count
      		From Awb_Inventory  GROUP BY Awb_No, Awb_Date, Flt_Key, Flt_Date) I On A.Awb_No = I.Awb_No And A.Awb_Date = I.Awb_Date And A.Flt_Key = I.Flt_Key And A.Flt_Date = I.Flt_Date			
			WHERE 1 = 1 
 		 <isNotEmpty property="movmentdays">
	      And (Awb.Awb_No,Awb.Awb_Date) Not In 
            (         
              (Select Awb_No,Awb_Date From Awb_Mov Where Mov_Date &gt; Sysdate - #movmentdays# And           
              nvl(Mov_From,'*') Not In (Select Code From Mast_Wh_Loc Where Wh_Group In (Select Wh_Group From Mast_Wh_Group Where Wh_Type='MHS')) AND 
              nvl(Mov_To,'*') Not In (Select Code From Mast_Wh_Loc Where Wh_Group In (Select Wh_Group From Mast_Wh_Group Where Wh_Type='MHS')))          
            )         
		 </isNotEmpty>
 	 	<isNotEmpty property="awbType">
			AND awb.AWB_TYPE=#awbType# 
		 </isNotEmpty>
 	 	<isNotEmpty property="carr">
			AND A.CARR_CODE=#carr# 
          </isNotEmpty>
 	 	<isNotEmpty property="splCode">
			And ( ((#awb1#) In (awb.Spl_Code1,awb.Spl_Code2,awb.Spl_Code3,awb.Spl_Code4,awb.Spl_Code5,awb.Spl_Code6,awb.Spl_Code7,awb.Spl_Code8,awb.Spl_Code9)) Or 
				  ((#awb2#) In (awb.Spl_Code1,awb.Spl_Code2,awb.Spl_Code3,awb.Spl_Code4,awb.Spl_Code5,awb.Spl_Code6,awb.Spl_Code7,awb.Spl_Code8,awb.Spl_Code9)) Or 
				  ((#awb3#) In (awb.Spl_Code1,awb.Spl_Code2,awb.Spl_Code3,awb.Spl_Code4,awb.Spl_Code5,awb.Spl_Code6,awb.Spl_Code7,awb.Spl_Code8,awb.Spl_Code9))  )
     	</isNotEmpty>
      	<isNotEmpty property="agentName">
			AND awb.agent_name = #agentName#
     	</isNotEmpty>
 		)
	</select>
	<select id="OLD_CARGO_AWBT_SRCH_ALL" parameterClass="cargo.cms.trace.bo.InactiveOldCargoBO"	resultClass="cargo.cms.trace.bo.InactiveOldCargoBO">	    
	   	 Select Awb.Awb_Type awbtype,
		  SUBSTR (awb.AWB_NO, 1, 3)  || '-' ||SUBSTR (awb.AWB_NO, 4)  AS awbNo,
		  SUBSTR (awb.AWB_NO, 1, 3) AS awbPfx,
		  SUBSTR (awb.AWB_NO, 4)    AS awbSfx,
		  awb.ORIG origin,
		  awb.DEST dest,		  
		  awb.CONTENT content,
		  awb.SPL_CODE1 awb1,
		  awb.SPL_CODE2 awb2,
		  awb.SPL_CODE3 awb3,
		  decode(awb.spl_code1, null, '', awb.spl_code1 || decode(awb.spl_code2, null, '', ','))
               		|| decode(awb.spl_code2, null, '', awb.spl_code2 || decode(awb.spl_code3, null, '', ','))
               		|| decode(awb.spl_code3, null, '', awb.spl_code3 || decode(awb.spl_code4, null, '', ','))
              		|| decode(awb.spl_code4, null, '', awb.spl_code4 || decode(awb.spl_code5, null, '', ','))
               		|| Decode(Awb.Spl_Code5, Null, '', Awb.Spl_Code5 || Decode(Awb.Spl_Code6, Null, '', ','))
              		|| decode(awb.spl_code6, null, '', awb.spl_code6 || decode(awb.spl_code7, null, '', ','))
               		|| decode(awb.spl_code7, null, '', awb.spl_code7 || decode(awb.spl_code8, null, '', ','))
               		|| decode(awb.spl_code8, null, '', awb.spl_code8 || decode(awb.spl_code9, null, '', ','))
               		|| Decode(Awb.Spl_Code9, Null, '', Awb.Spl_Code9)  AS awb,
		  awb.PCS awbPc,
		  awb.WT awbWt,
		  DECODE(awb.PCS  ||'/'  ||awb.WT,'/','',awb.PCS  ||'/'  ||awb.WT) awbPcWt,
		  I.Inv_Pcs Locpcs,
		  I.Inv_Wt Locwt,
		  DECODE(I.INV_PCS ||'/' || I.INV_WT,'/','',I.Inv_Pcs ||'/' ||I.Inv_Wt) locnPcWt,
		  A.FLT_KEY impFltNo,
		  TO_CHAR(A.FLT_DATE,'DDMONYY') impFltNoDate,		  
		  A.Flt_Key || '/' ||  To_Char(A.Flt_Date,'DDMONYY') AS fltNoDate,
		  Nvl(Ic.Shpr_Name,Ec.Shpr_Name) As expShipper,
      	  Nvl(Ic.Csgne_Name,Ec.Csgne_Name) As expConsignee
		From Imp_Car_Awb B
		Join Awb On Awb.Awb_No = B.Awb_No And Awb.Awb_Date = B.Awb_Date
		Join Imp_Car_Shp A On A.Awb_No = B.Awb_No And A.Awb_Date = B.Awb_Date 
		JOIN CUST_COMPANY COMP ON COMP.CODE_DESC=B.APPNTD_AGENT
		JOIN (Select Awb_No,Awb_Date,Flt_Key,Flt_Date,Sum(Locn_Pcs) Inv_Pcs,Sum(Locn_Wt) Inv_Wt,Min(Seq_No) Seq_No,Count(1) Inv_Count    From Awb_Inventory
		   Group By Awb_No, Awb_Date, Flt_Key, Flt_Date) I  On A.Awb_No    = I.Awb_No  And A.Awb_Date = I.Awb_Date  And A.Flt_Key  = I.Flt_Key  And A.Flt_Date = I.Flt_Date
    	Left Join Imp_Car_Awb Ic On Ic.Awb_No = Awb.Awb_No And Ic.Awb_Date = Awb.Awb_Date And (Awb.Awb_Type = 'I' Or Awb.Awb_Type ='T')
    	Left Join Exp_Car Ec On Ec.Awb_No = Awb.Awb_No And Ec.AWB_DATE = Awb.Awb_Date And Awb.Awb_Type = 'E'    
		WHERE awb.awb_date &lt; Sysdate - Nvl(#movmentdays#,10)
			 AND (awb.awb_type = 'I' OR awb.awb_type = 'T')		
 		<isNotEmpty property="awbType">
			AND awb.AWB_TYPE=#awbType# 
		  </isNotEmpty>
 		<isNotEmpty property="carr">
			AND A.CARR_CODE=#carr# 
          </isNotEmpty>
 		<isNotEmpty property="splCode">
			And ( ((#awb1#) In (awb.Spl_Code1,awb.Spl_Code2,awb.Spl_Code3,awb.Spl_Code4,awb.Spl_Code5,awb.Spl_Code6,awb.Spl_Code7,awb.Spl_Code8,awb.Spl_Code9)) Or 
				  ((#awb2#) In (awb.Spl_Code1,awb.Spl_Code2,awb.Spl_Code3,awb.Spl_Code4,awb.Spl_Code5,awb.Spl_Code6,awb.Spl_Code7,awb.Spl_Code8,awb.Spl_Code9)) Or 
				  ((#awb3#) In (awb.Spl_Code1,awb.Spl_Code2,awb.Spl_Code3,awb.Spl_Code4,awb.Spl_Code5,awb.Spl_Code6,awb.Spl_Code7,awb.Spl_Code8,awb.Spl_Code9))  )
     	</isNotEmpty>
      	<isNotEmpty property="agentName">
			AND awb.agent_name = #agentName#
     	</isNotEmpty>
     	 <isNotEmpty property="loginCarrier">
				   AND ( A.CARR_CODE = #loginCarrier#   OR  A.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP  WHERE GRP_CARR_CODE = #loginCarrier#))             
         </isNotEmpty>
     	UNION
     	<![CDATA[	
	    	 SELECT a.AWB_TYPE awbType,
			  SUBSTR (a.AWB_NO, 1, 3)  ||'-'  ||SUBSTR (a.AWB_NO, 4)  AS awbNo,
			  SUBSTR (a.AWB_NO, 1, 3) AS awbPfx,
			  SUBSTR (a.AWB_NO, 4)    AS awbSfx,
			  a.ORIG origin,
			  a.DEST dest,			  
			  a.CONTENT content,
			  a.SPL_CODE1 awb1,
			  a.SPL_CODE2 awb2,
			  a.SPL_CODE3 awb3,
			  decode(a.spl_code1, null, '', a.spl_code1 || decode(a.spl_code2, null, '', ','))
               		|| decode(a.spl_code2, null, '', a.spl_code2 || decode(a.spl_code3, null, '', ','))
               		|| decode(a.spl_code3, null, '', a.spl_code3 || decode(a.spl_code4, null, '', ','))
              		|| decode(a.spl_code4, null, '', a.spl_code4 || decode(a.spl_code5, null, '', ','))
               		|| Decode(a.Spl_Code5, Null, '', a.Spl_Code5 || Decode(a.Spl_Code6, Null, '', ','))
              		|| decode(a.spl_code6, null, '', a.spl_code6 || decode(a.spl_code7, null, '', ','))
               		|| decode(a.spl_code7, null, '', a.spl_code7 || decode(a.spl_code8, null, '', ','))
               		|| decode(a.spl_code8, null, '', a.spl_code8 || decode(a.spl_code9, null, '', ','))
               		|| Decode(a.Spl_Code9, Null, '', a.Spl_Code9)  AS awb,
			  a.PCS awbPc,
			  a.WT awbWt,
			  DECODE(a.PCS ||'/' ||a.WT,'/','',a.PCS  ||'/'  ||a.WT) awbPcWt, 
			  ai.LOCNPCS locpcs,
			  ai.LOCNWT locwt,
			  DECODE(ai.LOCNPCS  ||'/'  ||ai.LOCNWT,'/','',ai.LOCNPCS  ||'/'  ||ai.LOCNWT) locnPcWt,  ai.FLT_key impFltNo,
			  TO_CHAR(ai.FLT_DATE,'DDMONYY') impFltNoDate,
			  '' AS fltNoDate,
			  Nvl(Ic.Shpr_Name,Ec.Shpr_Name) As expShipper,
      	  	  Nvl(Ic.Csgne_Name,Ec.Csgne_Name) As expConsignee			  
			From Awb A
			Left Join Awb_Owner O On O.Awb_No     = A.Awb_No And O.Awb_Date  = a.awb_date And O.Carr_Code = A.Carr_Code And O.Pcs > 0 
			Left Join (Select Awb_No,    Awb_Date,    F.Carr_Code,    Sum(Pman_Pcs) Pman_Pcs,    Sum(Pman_Wt) Pman_Wt  From Exp_Pmanifest_Awb P 
			  Join Flt_Opr F  On P.Flt_Key   = F.Flt_Key  And P.Flt_Date = F.Sch_Date  And F.Flt_Type = 'D' 
			  GROUP BY awb_no, awb_date, f.carr_code  ) pman ON pman.awb_no = a.AWB_NO AND pman.AWB_DATE = a.AWB_DATE AND pman.carr_code = NVL(#carr#,a.CARR_CODE)
			Join (Select Awb_No,    Awb_Date,    Flt_Key,    Flt_Date,    Sum(Locn_Pcs) Locnpcs,    Sum(Locn_Wt) Locnwt,    Min(Seq_No) Seq_No,    Count(1) Inv_Count  From Awb_Inventory
			  Group By Awb_No, Awb_Date, Flt_Key, Flt_Date  ) Ai On A.Awb_No = Ai.Awb_No And A.Awb_Date = Ai.Awb_Date 
			Left Join Imp_Car_Awb Ic On Ic.Awb_No = A.Awb_No And Ic.Awb_Date = A.Awb_Date And (A.Awb_Type = 'I' Or A.Awb_Type ='T')
    		Left Join Exp_Car Ec On Ec.Awb_No = A.Awb_No And Ec.AWB_DATE = A.Awb_Date And A.Awb_Type = 'E'  
			Where A.Awb_Closed_Yn = 'N'			
			And ((A.Car_Yn = 'Y' And Nvl(O.Pcs,0)-Nvl(Pman.Pman_Pcs,0) > 0) Or (A.Car_Yn = 'N'))
			AND (A.rcl_pcs >= 0 AND A.awb_type = 'E')
			AND A.awb_date < Sysdate - Nvl(#movmentdays#,10)
			]]>	
	 	<isNotEmpty property="awbType">
				AND a.AWB_TYPE=#awbType# 
	    </isNotEmpty>
 	    <isNotEmpty property="carr">
			AND nvl(o.carr_code, a.carr_code)=#carr# 
        </isNotEmpty>
	    <isNotEmpty property="splCode">
			And ( ((#awb1#) In (a.Spl_Code1,a.Spl_Code2,a.Spl_Code3,a.Spl_Code4,a.Spl_Code5,a.Spl_Code6,a.Spl_Code7,a.Spl_Code8,a.Spl_Code9)) Or 
				  ((#awb2#) In (a.Spl_Code1,a.Spl_Code2,a.Spl_Code3,a.Spl_Code4,a.Spl_Code5,a.Spl_Code6,a.Spl_Code7,a.Spl_Code8,a.Spl_Code9)) Or 
				  ((#awb3#) In (a.Spl_Code1,a.Spl_Code2,a.Spl_Code3,a.Spl_Code4,a.Spl_Code5,a.Spl_Code6,a.Spl_Code7,a.Spl_Code8,a.Spl_Code9))  )
       </isNotEmpty>
       <isNotEmpty property="agentName">
			AND a.agent_name = #agentName#
     	</isNotEmpty>
     	 <isNotEmpty property="loginCarrier">
				   AND ( nvl(o.carr_code, a.carr_code) = #loginCarrier#   OR  nvl(o.carr_code, a.carr_code) IN (SELECT CARR_CODE FROM MAST_CARR_GRP  WHERE GRP_CARR_CODE = #loginCarrier#))             
         </isNotEmpty>
	     <dynamic prepend="ORDER BY ">
	           <isNotEmpty property="sortOrder.sortField">
	                $sortOrder.sortField$
	           </isNotEmpty>
	     </dynamic> 
	</select>
	<select id="OLD_CARGO_AWBT_SRCH_ALLCOUNT" parameterClass="cargo.cms.trace.bo.InactiveOldCargoBO" resultClass="java.lang.Integer">
	 SELECT COUNT(1) AS totalRowCount FROM 	(
	    Select Awb.Awb_Type awbtype,
		  SUBSTR (awb.AWB_NO, 1, 3)  || '-' ||SUBSTR (awb.AWB_NO, 4)  AS awbNo,
		  SUBSTR (awb.AWB_NO, 1, 3) AS awbPfx,
		  SUBSTR (awb.AWB_NO, 4)    AS awbSfx,
		  awb.ORIG origin,
		  awb.DEST dest,		  
		  awb.CONTENT content,
		  awb.SPL_CODE1 awb1,
		  awb.SPL_CODE2 awb2,
		  awb.SPL_CODE3 awb3,
		  decode(awb.spl_code1, null, '', awb.spl_code1 || decode(awb.spl_code2, null, '', ','))
               		|| decode(awb.spl_code2, null, '', awb.spl_code2 || decode(awb.spl_code3, null, '', ','))
               		|| decode(awb.spl_code3, null, '', awb.spl_code3 || decode(awb.spl_code4, null, '', ','))
              		|| decode(awb.spl_code4, null, '', awb.spl_code4 || decode(awb.spl_code5, null, '', ','))
               		|| Decode(Awb.Spl_Code5, Null, '', Awb.Spl_Code5 || Decode(Awb.Spl_Code6, Null, '', ','))
              		|| decode(awb.spl_code6, null, '', awb.spl_code6 || decode(awb.spl_code7, null, '', ','))
               		|| decode(awb.spl_code7, null, '', awb.spl_code7 || decode(awb.spl_code8, null, '', ','))
               		|| decode(awb.spl_code8, null, '', awb.spl_code8 || decode(awb.spl_code9, null, '', ','))
               		|| Decode(Awb.Spl_Code9, Null, '', Awb.Spl_Code9)  AS awb,
		  awb.PCS awbPc,
		  awb.WT awbWt,
		  DECODE(awb.PCS  ||'/'  ||awb.WT,'/','',awb.PCS  ||'/'  ||awb.WT) awbPcWt,
		  I.Inv_Pcs Locpcs,
		  I.Inv_Wt Locwt,
		  DECODE(I.INV_PCS ||'/' || I.INV_WT,'/','',I.Inv_Pcs ||'/' ||I.Inv_Wt) locnPcWt,
		  A.FLT_KEY impFltNo,
		  TO_CHAR(A.FLT_DATE,'DDMONYY') impFltNoDate,		  
		  A.Flt_Key  || '/' ||  To_Char(A.Flt_Date,'DDMONYY') AS fltNoDate,
		  Nvl(Ic.Shpr_Name,Ec.Shpr_Name) As expShipper,      	
      	  Nvl(Ic.Csgne_Name,Ec.Csgne_Name) As expConsignee          
		From Imp_Car_Awb B
		Join Awb On Awb.Awb_No = B.Awb_No And Awb.Awb_Date = B.Awb_Date
		Join Imp_Car_Shp A On A.Awb_No = B.Awb_No And A.Awb_Date = B.Awb_Date 
		JOIN CUST_COMPANY COMP ON COMP.CODE_DESC=B.APPNTD_AGENT
		JOIN (Select Awb_No,Awb_Date,Flt_Key,Flt_Date,Sum(Locn_Pcs) Inv_Pcs,Sum(Locn_Wt) Inv_Wt,Min(Seq_No) Seq_No,Count(1) Inv_Count    From Awb_Inventory
		 Group By Awb_No, Awb_Date, Flt_Key, Flt_Date) I  On A.Awb_No    = I.Awb_No  And A.Awb_Date = I.Awb_Date  And A.Flt_Key  = I.Flt_Key  And A.Flt_Date = I.Flt_Date
    	Left Join Imp_Car_Awb Ic On Ic.Awb_No = Awb.Awb_No And Ic.Awb_Date = Awb.Awb_Date And (Awb.Awb_Type = 'I' Or Awb.Awb_Type ='T')
    	Left Join Exp_Car Ec On Ec.Awb_No = Awb.Awb_No And Ec.AWB_DATE = Awb.Awb_Date And Awb.Awb_Type = 'E'    
 		WHERE awb.awb_date &lt; Sysdate - Nvl(#movmentdays#,10)
			 AND (awb.awb_type = 'I' OR awb.awb_type = 'T')		
 		<isNotEmpty property="awbType">
			AND awb.AWB_TYPE=#awbType# 
		  </isNotEmpty>
 		<isNotEmpty property="carr">
			AND A.CARR_CODE=#carr# 
          </isNotEmpty>
 		<isNotEmpty property="splCode">
			And ( ((#awb1#) In (awb.Spl_Code1,awb.Spl_Code2,awb.Spl_Code3,awb.Spl_Code4,awb.Spl_Code5,awb.Spl_Code6,awb.Spl_Code7,awb.Spl_Code8,awb.Spl_Code9)) Or 
				  ((#awb2#) In (awb.Spl_Code1,awb.Spl_Code2,awb.Spl_Code3,awb.Spl_Code4,awb.Spl_Code5,awb.Spl_Code6,awb.Spl_Code7,awb.Spl_Code8,awb.Spl_Code9)) Or 
				  ((#awb3#) In (awb.Spl_Code1,awb.Spl_Code2,awb.Spl_Code3,awb.Spl_Code4,awb.Spl_Code5,awb.Spl_Code6,awb.Spl_Code7,awb.Spl_Code8,awb.Spl_Code9))  )
     	</isNotEmpty>
      	<isNotEmpty property="agentName">
			AND awb.agent_name = #agentName#
     	</isNotEmpty>
     	 <isNotEmpty property="loginCarrier">
				   AND ( A.CARR_CODE = #loginCarrier#   OR  A.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP  WHERE GRP_CARR_CODE = #loginCarrier#))             
         </isNotEmpty>
     	UNION
     	<![CDATA[	
	    	 SELECT a.AWB_TYPE awbType,
			  SUBSTR (a.AWB_NO, 1, 3)  ||'-'  ||SUBSTR (a.AWB_NO, 4)  AS awbNo,
			  SUBSTR (a.AWB_NO, 1, 3) AS awbPfx,
			  SUBSTR (a.AWB_NO, 4)    AS awbSfx,
			  a.ORIG origin,
			  a.DEST dest,			  
			  a.CONTENT content,
			  a.SPL_CODE1 awb1,
			  a.SPL_CODE2 awb2,
			  a.SPL_CODE3 awb3,
			  decode(a.spl_code1, null, '', a.spl_code1 || decode(a.spl_code2, null, '', ','))
               		|| decode(a.spl_code2, null, '', a.spl_code2 || decode(a.spl_code3, null, '', ','))
               		|| decode(a.spl_code3, null, '', a.spl_code3 || decode(a.spl_code4, null, '', ','))
              		|| decode(a.spl_code4, null, '', a.spl_code4 || decode(a.spl_code5, null, '', ','))
               		|| Decode(a.Spl_Code5, Null, '', a.Spl_Code5 || Decode(a.Spl_Code6, Null, '', ','))
              		|| decode(a.spl_code6, null, '', a.spl_code6 || decode(a.spl_code7, null, '', ','))
               		|| decode(a.spl_code7, null, '', a.spl_code7 || decode(a.spl_code8, null, '', ','))
               		|| decode(a.spl_code8, null, '', a.spl_code8 || decode(a.spl_code9, null, '', ','))
               		|| Decode(a.Spl_Code9, Null, '', a.Spl_Code9)  AS awb,
			  a.PCS awbPc,
			  a.WT awbWt,
			  DECODE(a.PCS ||'/' ||a.WT,'/','',a.PCS  ||'/'  ||a.WT) awbPcWt, 
			  ai.LOCNPCS locpcs,
			  ai.LOCNWT locwt,
			  DECODE(ai.LOCNPCS  ||'/'  ||ai.LOCNWT,'/','',ai.LOCNPCS  ||'/'  ||ai.LOCNWT) locnPcWt,  ai.FLT_key impFltNo,
			  TO_CHAR(ai.FLT_DATE,'DDMONYY') impFltNoDate,
			  '' AS fltNoDate,
			  Nvl(Ic.Shpr_Name,Ec.Shpr_Name) As expShipper,
      	  	  Nvl(Ic.Csgne_Name,Ec.Csgne_Name) As expConsignee		
            From Awb A
			Left Join Awb_Owner O On O.Awb_No     = A.Awb_No And O.Awb_Date  = a.awb_date And O.Carr_Code = A.Carr_Code And O.Pcs > 0 
			Left Join (Select Awb_No,    Awb_Date,    F.Carr_Code,    Sum(Pman_Pcs) Pman_Pcs,    Sum(Pman_Wt) Pman_Wt  From Exp_Pmanifest_Awb P 
			  Join Flt_Opr F  On P.Flt_Key   = F.Flt_Key  And P.Flt_Date = F.Sch_Date  And F.Flt_Type = 'D' 
			  GROUP BY awb_no, awb_date, f.carr_code  ) pman ON pman.awb_no = a.AWB_NO AND pman.AWB_DATE = a.AWB_DATE AND pman.carr_code = NVL(#carr#,a.CARR_CODE)
			Join (Select Awb_No,    Awb_Date,    Flt_Key,    Flt_Date,    Sum(Locn_Pcs) Locnpcs,    Sum(Locn_Wt) Locnwt,    Min(Seq_No) Seq_No,    Count(1) Inv_Count  From Awb_Inventory
			  Group By Awb_No, Awb_Date, Flt_Key, Flt_Date  ) Ai On A.Awb_No = Ai.Awb_No And A.Awb_Date = Ai.Awb_Date 
			Left Join Imp_Car_Awb Ic On Ic.Awb_No = A.Awb_No And Ic.Awb_Date = A.Awb_Date And (A.Awb_Type = 'I' Or A.Awb_Type ='T')
    		Left Join Exp_Car Ec On Ec.Awb_No = A.Awb_No And Ec.AWB_DATE = A.Awb_Date And A.Awb_Type = 'E'  
			Where A.Awb_Closed_Yn = 'N'			
			And ((A.Car_Yn = 'Y' And Nvl(O.Pcs,0)-Nvl(Pman.Pman_Pcs,0) > 0) Or (A.Car_Yn = 'N'))
			AND (A.rcl_pcs >= 0 AND A.awb_type = 'E')
			AND A.awb_date < Sysdate - Nvl(#movmentdays#,10)
			]]>			
	 	<isNotEmpty property="awbType">
				AND a.AWB_TYPE=#awbType# 
	    </isNotEmpty>
 	    <isNotEmpty property="carr">
			AND nvl(o.carr_code, a.carr_code)=#carr# 
        </isNotEmpty>
	    <isNotEmpty property="splCode">
			And ( ((#awb1#) In (a.Spl_Code1,a.Spl_Code2,a.Spl_Code3,a.Spl_Code4,a.Spl_Code5,a.Spl_Code6,a.Spl_Code7,a.Spl_Code8,a.Spl_Code9)) Or 
				  ((#awb2#) In (a.Spl_Code1,a.Spl_Code2,a.Spl_Code3,a.Spl_Code4,a.Spl_Code5,a.Spl_Code6,a.Spl_Code7,a.Spl_Code8,a.Spl_Code9)) Or 
				  ((#awb3#) In (a.Spl_Code1,a.Spl_Code2,a.Spl_Code3,a.Spl_Code4,a.Spl_Code5,a.Spl_Code6,a.Spl_Code7,a.Spl_Code8,a.Spl_Code9))  )
       </isNotEmpty>
       <isNotEmpty property="agentName">
			AND a.agent_name = #agentName#
     	</isNotEmpty>
     	 <isNotEmpty property="loginCarrier">
			 AND ( nvl(o.carr_code, a.carr_code) = #loginCarrier#   OR  nvl(o.carr_code, a.carr_code) IN (SELECT CARR_CODE FROM MAST_CARR_GRP  WHERE GRP_CARR_CODE = #loginCarrier#))             
         </isNotEmpty>
	 ) 
	</select>

	<select id="inactiveOldCargoImportTranshipment" parameterClass="cargo.cms.trace.bo.InactiveOldCargoBO"		resultClass="cargo.cms.trace.bo.InactiveOldCargoBO">
		 Select Awb.Awb_Type awbtype,
		  SUBSTR (awb.AWB_NO, 1, 3)  || '-' ||SUBSTR (awb.AWB_NO, 4)  AS awbNo,
		  SUBSTR (awb.AWB_NO, 1, 3) AS awbPfx,
		  SUBSTR (awb.AWB_NO, 4)    AS awbSfx,
		  awb.ORIG origin,
		  awb.DEST dest,		  
		  awb.CONTENT content,
		  awb.SPL_CODE1 awb1,
		  awb.SPL_CODE2 awb2,
		  awb.SPL_CODE3 awb3,
		  decode(awb.spl_code1, null, '', awb.spl_code1 || decode(awb.spl_code2, null, '', ','))
               		|| decode(awb.spl_code2, null, '', awb.spl_code2 || decode(awb.spl_code3, null, '', ','))
               		|| decode(awb.spl_code3, null, '', awb.spl_code3 || decode(awb.spl_code4, null, '', ','))
              		|| decode(awb.spl_code4, null, '', awb.spl_code4 || decode(awb.spl_code5, null, '', ','))
               		|| Decode(Awb.Spl_Code5, Null, '', Awb.Spl_Code5 || Decode(Awb.Spl_Code6, Null, '', ','))
              		|| decode(awb.spl_code6, null, '', awb.spl_code6 || decode(awb.spl_code7, null, '', ','))
               		|| decode(awb.spl_code7, null, '', awb.spl_code7 || decode(awb.spl_code8, null, '', ','))
               		|| decode(awb.spl_code8, null, '', awb.spl_code8 || decode(awb.spl_code9, null, '', ','))
               		|| Decode(Awb.Spl_Code9, Null, '', Awb.Spl_Code9)  AS awb,
		  awb.PCS awbPc,
		  awb.WT awbWt,
		  DECODE(awb.PCS  ||'/'  ||awb.WT,'/','',awb.PCS  ||'/'  ||awb.WT) awbPcWt,
		  I.Inv_Pcs Locpcs,
		  I.Inv_Wt Locwt,
		  DECODE(I.INV_PCS ||'/' || I.INV_WT,'/','',I.Inv_Pcs ||'/' ||I.Inv_Wt) locnPcWt,
		  A.FLT_KEY impFltNo,
		  TO_CHAR(A.FLT_DATE,'DDMONYY') impFltNoDate,		  
		  A.Flt_Key  || '/' ||  To_Char(A.Flt_Date,'DDMONYY') AS fltNoDate,
		  Nvl(Ic.Shpr_Name,Ec.Shpr_Name) As expShipper,
      	  Nvl(Ic.Csgne_Name,Ec.Csgne_Name) As expConsignee
		From Imp_Car_Awb B
		Join Awb On Awb.Awb_No = B.Awb_No And Awb.Awb_Date = B.Awb_Date
		Join Imp_Car_Shp A On A.Awb_No = B.Awb_No And A.Awb_Date = B.Awb_Date 
		JOIN CUST_COMPANY COMP ON COMP.CODE_DESC=B.APPNTD_AGENT
		JOIN (Select Awb_No,Awb_Date,Flt_Key,Flt_Date,Sum(Locn_Pcs) Inv_Pcs,Sum(Locn_Wt) Inv_Wt,Min(Seq_No) Seq_No,Count(1) Inv_Count    From Awb_Inventory
		   Group By Awb_No, Awb_Date, Flt_Key, Flt_Date) I  On A.Awb_No    = I.Awb_No  And A.Awb_Date = I.Awb_Date  And A.Flt_Key  = I.Flt_Key  And A.Flt_Date = I.Flt_Date
    	Left Join Imp_Car_Awb Ic On Ic.Awb_No = Awb.Awb_No And Ic.Awb_Date = Awb.Awb_Date And (Awb.Awb_Type = 'I' Or Awb.Awb_Type ='T')
    	Left Join Exp_Car Ec On Ec.Awb_No = Awb.Awb_No And Ec.AWB_DATE = Awb.Awb_Date And Awb.Awb_Type = 'E'    
		WHERE  Awb.awb_date &lt; Sysdate - Nvl(#movmentdays#,10) 	
			 AND (Awb.awb_type = 'I' OR Awb.awb_type = 'T')		
 		<isNotEmpty property="awbType">
			AND awb.AWB_TYPE=#awbType# 
		  </isNotEmpty>
 		<isNotEmpty property="carr">
			AND A.CARR_CODE=#carr# 
          </isNotEmpty>
 		<isNotEmpty property="splCode">
			And ( ((#awb1#) In (awb.Spl_Code1,awb.Spl_Code2,awb.Spl_Code3,awb.Spl_Code4,awb.Spl_Code5,awb.Spl_Code6,awb.Spl_Code7,awb.Spl_Code8,awb.Spl_Code9)) Or 
				  ((#awb2#) In (awb.Spl_Code1,awb.Spl_Code2,awb.Spl_Code3,awb.Spl_Code4,awb.Spl_Code5,awb.Spl_Code6,awb.Spl_Code7,awb.Spl_Code8,awb.Spl_Code9)) Or 
				  ((#awb3#) In (awb.Spl_Code1,awb.Spl_Code2,awb.Spl_Code3,awb.Spl_Code4,awb.Spl_Code5,awb.Spl_Code6,awb.Spl_Code7,awb.Spl_Code8,awb.Spl_Code9))  )
     	</isNotEmpty>
      	<isNotEmpty property="agentName">
			AND awb.agent_name = #agentName#
     	</isNotEmpty>
     	 <isNotEmpty property="loginCarrier">
				   AND ( A.CARR_CODE = #loginCarrier#   OR  A.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP  WHERE GRP_CARR_CODE = #loginCarrier#))             
          </isNotEmpty>
    </select>
	
	<select id="inactiveOldCargoImportTranshipmentCOUNT" parameterClass="cargo.cms.trace.bo.InactiveOldCargoBO"		resultClass="java.lang.Integer">
	  SELECT COUNT(1) AS totalRowCount FROM 	(
		Select Awb.Awb_Type awbtype,
		  SUBSTR (awb.AWB_NO, 1, 3)  || '-' ||SUBSTR (awb.AWB_NO, 4)  AS awbNo,
		  SUBSTR (awb.AWB_NO, 1, 3) AS awbPfx,
		  SUBSTR (awb.AWB_NO, 4)    AS awbSfx,
		  awb.ORIG origin,
		  awb.DEST dest,		  
		  awb.CONTENT content,
		  awb.SPL_CODE1 awb1,
		  awb.SPL_CODE2 awb2,
		  awb.SPL_CODE3 awb3,
		  decode(awb.spl_code1, null, '', awb.spl_code1 || decode(awb.spl_code2, null, '', ','))
               		|| decode(awb.spl_code2, null, '', awb.spl_code2 || decode(awb.spl_code3, null, '', ','))
               		|| decode(awb.spl_code3, null, '', awb.spl_code3 || decode(awb.spl_code4, null, '', ','))
              		|| decode(awb.spl_code4, null, '', awb.spl_code4 || decode(awb.spl_code5, null, '', ','))
               		|| Decode(Awb.Spl_Code5, Null, '', Awb.Spl_Code5 || Decode(Awb.Spl_Code6, Null, '', ','))
              		|| decode(awb.spl_code6, null, '', awb.spl_code6 || decode(awb.spl_code7, null, '', ','))
               		|| decode(awb.spl_code7, null, '', awb.spl_code7 || decode(awb.spl_code8, null, '', ','))
               		|| decode(awb.spl_code8, null, '', awb.spl_code8 || decode(awb.spl_code9, null, '', ','))
               		|| Decode(Awb.Spl_Code9, Null, '', Awb.Spl_Code9)  AS awb,
		  awb.PCS awbPc,
		  awb.WT awbWt,
		  DECODE(awb.PCS  ||'/'  ||awb.WT,'/','',awb.PCS  ||'/'  ||awb.WT) awbPcWt,
		  I.Inv_Pcs Locpcs,
		  I.Inv_Wt Locwt,
		  DECODE(I.INV_PCS ||'/' || I.INV_WT,'/','',I.Inv_Pcs ||'/' ||I.Inv_Wt) locnPcWt,
		  A.FLT_KEY impFltNo,
		  TO_CHAR(A.FLT_DATE,'DDMONYY') impFltNoDate,		  
		  A.Flt_Key || '/' ||  To_Char(A.Flt_Date,'DDMONYY') AS fltNoDate,
		  Nvl(Ic.Shpr_Name,Ec.Shpr_Name) As expShipper,
      	  Nvl(Ic.Csgne_Name,Ec.Csgne_Name) As expConsignee
		From Imp_Car_Awb B
		Join Awb On Awb.Awb_No = B.Awb_No And Awb.Awb_Date = B.Awb_Date
		Join Imp_Car_Shp A On A.Awb_No = B.Awb_No And A.Awb_Date = B.Awb_Date 
		JOIN CUST_COMPANY COMP ON COMP.CODE_DESC=B.APPNTD_AGENT
		JOIN (Select Awb_No,Awb_Date,Flt_Key,Flt_Date,Sum(Locn_Pcs) Inv_Pcs,Sum(Locn_Wt) Inv_Wt,Min(Seq_No) Seq_No,Count(1) Inv_Count    From Awb_Inventory
		   Group By Awb_No, Awb_Date, Flt_Key, Flt_Date) I  On A.Awb_No    = I.Awb_No  And A.Awb_Date = I.Awb_Date  And A.Flt_Key  = I.Flt_Key  And A.Flt_Date = I.Flt_Date
    	Left Join Imp_Car_Awb Ic On Ic.Awb_No = Awb.Awb_No And Ic.Awb_Date = Awb.Awb_Date And (Awb.Awb_Type = 'I' Or Awb.Awb_Type ='T')
    	Left Join Exp_Car Ec On Ec.Awb_No = Awb.Awb_No And Ec.AWB_DATE = Awb.Awb_Date And Awb.Awb_Type = 'E'    
		WHERE  Awb.awb_date &lt; Sysdate - Nvl(#movmentdays#,10) 	
			 AND (Awb.awb_type = 'I' OR Awb.awb_type = 'T')		
 		<isNotEmpty property="awbType">
			AND awb.AWB_TYPE=#awbType# 
		  </isNotEmpty>
 		<isNotEmpty property="carr">
			AND A.CARR_CODE=#carr# 
          </isNotEmpty>
 		<isNotEmpty property="splCode">
			And ( ((#awb1#) In (awb.Spl_Code1,awb.Spl_Code2,awb.Spl_Code3,awb.Spl_Code4,awb.Spl_Code5,awb.Spl_Code6,awb.Spl_Code7,awb.Spl_Code8,awb.Spl_Code9)) Or 
				  ((#awb2#) In (awb.Spl_Code1,awb.Spl_Code2,awb.Spl_Code3,awb.Spl_Code4,awb.Spl_Code5,awb.Spl_Code6,awb.Spl_Code7,awb.Spl_Code8,awb.Spl_Code9)) Or 
				  ((#awb3#) In (awb.Spl_Code1,awb.Spl_Code2,awb.Spl_Code3,awb.Spl_Code4,awb.Spl_Code5,awb.Spl_Code6,awb.Spl_Code7,awb.Spl_Code8,awb.Spl_Code9))  )
     	</isNotEmpty>
      	<isNotEmpty property="agentName">
			AND awb.agent_name = #agentName#
     	</isNotEmpty>
     	<isNotEmpty property="loginCarrier">
				   AND ( A.CARR_CODE = #loginCarrier#   OR  A.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP  WHERE GRP_CARR_CODE = #loginCarrier#))             
        </isNotEmpty>
     	)
	</select>
	
	<select id="CARGO_AWBT_SPECIAL_SRCH" parameterClass="cargo.cms.trace.bo.InactiveOldCargoBO"	resultClass="cargo.cms.trace.bo.InactiveOldCargoBO">
  		<![CDATA[	
	    	 SELECT a.AWB_TYPE awbType,
			  SUBSTR (a.AWB_NO, 1, 3)  || '-'  ||SUBSTR (a.AWB_NO, 4)  AS awbNo,
			  SUBSTR (a.AWB_NO, 1, 3) AS awbPfx,
			  SUBSTR (a.AWB_NO, 4)    AS awbSfx,
			  a.ORIG origin,
			  a.DEST dest,			  
			  a.CONTENT content,
			  a.SPL_CODE1 awb1,
			  a.SPL_CODE2 awb2,
			  a.SPL_CODE3 awb3,
			  decode(a.spl_code1, null, '', a.spl_code1 || decode(a.spl_code2, null, '', ','))
               		|| decode(a.spl_code2, null, '', a.spl_code2 || decode(a.spl_code3, null, '', ','))
               		|| decode(a.spl_code3, null, '', a.spl_code3 || decode(a.spl_code4, null, '', ','))
              		|| decode(a.spl_code4, null, '', a.spl_code4 || decode(a.spl_code5, null, '', ','))
               		|| Decode(a.Spl_Code5, Null, '', a.Spl_Code5 || Decode(a.Spl_Code6, Null, '', ','))
              		|| decode(a.spl_code6, null, '', a.spl_code6 || decode(a.spl_code7, null, '', ','))
               		|| decode(a.spl_code7, null, '', a.spl_code7 || decode(a.spl_code8, null, '', ','))
               		|| decode(a.spl_code8, null, '', a.spl_code8 || decode(a.spl_code9, null, '', ','))
               		|| Decode(a.Spl_Code9, Null, '', a.Spl_Code9)  AS awb,
			  a.PCS awbPc,
			  a.WT awbWt,
			  DECODE(a.PCS  ||'/'  ||a.WT,'/','',a.PCS  ||'/'  ||a.WT) awbPcWt,
			  ai.LOCNPCS locpcs,
			  ai.LOCNWT locwt,
			  DECODE(ai.LOCNPCS  ||'/'  ||ai.LOCNWT,'/','',ai.LOCNPCS  ||'/'  ||ai.LOCNWT) locnPcWt,
			  ai.FLT_key impFltNo,
			  TO_CHAR(ai.FLT_DATE,'DDMONYY') impFltNoDate,
			  '' AS fltNoDate,
			  Nvl(Ic.Shpr_Name,Ec.Shpr_Name) As expShipper,
      		  Nvl(Ic.Csgne_Name,Ec.Csgne_Name) As expConsignee
			From Awb A
			LEFT JOIN awb_owner o ON o.awb_no = a.AWB_NO AND o.AWB_DATE  = a.AWB_DATE AND o.carr_code = a.carr_code AND o.pcs > 0
			LEFT JOIN (SELECT awb_no,    awb_date,    f.carr_code,    SUM(pman_pcs) pman_pcs,    SUM(pman_wt) pman_wt  FROM exp_pmanifest_awb p
			  Join Flt_Opr F  On P.Flt_Key   = F.Flt_Key  And P.Flt_Date = F.Sch_Date  And F.Flt_Type = 'D'
			  GROUP BY awb_no, awb_date, f.carr_code) pman ON pman.awb_no = a.AWB_NO AND pman.AWB_DATE       = a.AWB_DATE AND pman.carr_code      = NVL(#carr#,a.CARR_CODE)
			JOIN (Select Awb_No,    Awb_Date,    Flt_Key,    Flt_Date,    Sum(Locn_Pcs) Locnpcs,    Sum(Locn_Wt) Locnwt,    Min(Seq_No) Seq_No,    Count(1) Inv_Count  From Awb_Inventory
			   GROUP BY AWB_NO, AWB_DATE, FLT_KEY, FLT_DATE  ) AI ON A.AWB_NO = AI.AWB_NO AND A.AWB_DATE = AI.AWB_DATE
			Left Join Imp_Car_Awb Ic On Ic.Awb_No = a.Awb_No And Ic.Awb_Date = a.Awb_Date And (a.Awb_Type = 'I' Or a.Awb_Type ='T')
    		Left Join Exp_Car Ec On Ec.Awb_No = a.Awb_No And Ec.AWB_DATE = a.Awb_Date And a.Awb_Type = 'E'
			WHERE A.awb_closed_yn                 = 'N'		
			And  A.awb_Date < sysdate - Nvl(#movmentdays#,10)
			And ((A.Car_Yn = 'Y' And Nvl(O.Pcs,0)-Nvl(Pman.Pman_Pcs,0) > 0) Or (A.Car_Yn = 'N'))
			AND (A.rcl_pcs >= 0 AND A.awb_type = 'E')
 	]]>
 	<isNotEmpty property="awbType">
			AND a.AWB_TYPE=#awbType# 
		  </isNotEmpty>
 	 <isNotEmpty property="carr">
			AND nvl(o.carr_code, a.carr_code)=#carr# 
          </isNotEmpty>
	 <isNotEmpty property="splCode">
			And ( ((#awb1#) In (a.Spl_Code1,a.Spl_Code2,a.Spl_Code3,a.Spl_Code4,a.Spl_Code5,a.Spl_Code6,a.Spl_Code7,a.Spl_Code8,a.Spl_Code9)) Or 
				  ((#awb2#) In (a.Spl_Code1,a.Spl_Code2,a.Spl_Code3,a.Spl_Code4,a.Spl_Code5,a.Spl_Code6,a.Spl_Code7,a.Spl_Code8,a.Spl_Code9)) Or 
				  ((#awb3#) In (a.Spl_Code1,a.Spl_Code2,a.Spl_Code3,a.Spl_Code4,a.Spl_Code5,a.Spl_Code6,a.Spl_Code7,a.Spl_Code8,a.Spl_Code9))  )
     </isNotEmpty>
     <isNotEmpty property="agentName">
			AND a.agent_name = #agentName#
     	</isNotEmpty>
     	 <isNotEmpty property="loginCarrier">
				   AND ( nvl(o.carr_code, a.carr_code) = #loginCarrier#   OR  nvl(o.carr_code, a.carr_code) IN (SELECT CARR_CODE FROM MAST_CARR_GRP  WHERE GRP_CARR_CODE = #loginCarrier#))             
          </isNotEmpty>
	 <dynamic prepend="ORDER BY ">
            <isNotEmpty property="sortOrder.sortField">
                $sortOrder.sortField$
            </isNotEmpty>
    </dynamic>
	</select>
	<select id="CARGO_AWBT_SPECIAL_SRCHCOUNT" parameterClass="cargo.cms.trace.bo.InactiveOldCargoBO"
		resultClass="java.lang.Integer">
		SELECT COUNT(1) AS totalRowCount FROM (   
		   	 <![CDATA[	
	    	 SELECT a.AWB_TYPE awbType,
			  SUBSTR (a.AWB_NO, 1, 3)  || '-'  ||SUBSTR (a.AWB_NO, 4)  AS awbNo,
			  SUBSTR (a.AWB_NO, 1, 3) AS awbPfx,
			  SUBSTR (a.AWB_NO, 4)    AS awbSfx,
			  a.ORIG origin,
			  a.DEST dest,			  
			  a.CONTENT content,
			  a.SPL_CODE1 awb1,
			  a.SPL_CODE2 awb2,
			  a.SPL_CODE3 awb3,
			  decode(a.spl_code1, null, '', a.spl_code1 || decode(a.spl_code2, null, '', ','))
               		|| decode(a.spl_code2, null, '', a.spl_code2 || decode(a.spl_code3, null, '', ','))
               		|| decode(a.spl_code3, null, '', a.spl_code3 || decode(a.spl_code4, null, '', ','))
              		|| decode(a.spl_code4, null, '', a.spl_code4 || decode(a.spl_code5, null, '', ','))
               		|| Decode(a.Spl_Code5, Null, '', a.Spl_Code5 || Decode(a.Spl_Code6, Null, '', ','))
              		|| decode(a.spl_code6, null, '', a.spl_code6 || decode(a.spl_code7, null, '', ','))
               		|| decode(a.spl_code7, null, '', a.spl_code7 || decode(a.spl_code8, null, '', ','))
               		|| decode(a.spl_code8, null, '', a.spl_code8 || decode(a.spl_code9, null, '', ','))
               		|| Decode(a.Spl_Code9, Null, '', a.Spl_Code9)  AS awb,
			  a.PCS awbPc,
			  a.WT awbWt,
			  DECODE(a.PCS  ||'/'  ||a.WT,'/','',a.PCS  ||'/'  ||a.WT) awbPcWt,
			  ai.LOCNPCS locpcs,
			  ai.LOCNWT locwt,
			  DECODE(ai.LOCNPCS  ||'/'  ||ai.LOCNWT,'/','',ai.LOCNPCS  ||'/'  ||ai.LOCNWT) locnPcWt,
			  ai.FLT_key impFltNo,
			  TO_CHAR(ai.FLT_DATE,'DDMONYY') impFltNoDate,
			  '' AS fltNoDate,
			  Nvl(Ic.Shpr_Name,Ec.Shpr_Name) As expShipper,
      		  Nvl(Ic.Csgne_Name,Ec.Csgne_Name) As expConsignee      		  
			From Awb A
			LEFT JOIN awb_owner o ON o.awb_no = a.AWB_NO AND o.AWB_DATE  = a.AWB_DATE AND o.carr_code = a.carr_code AND o.pcs > 0
			LEFT JOIN (SELECT awb_no,    awb_date,    f.carr_code,    SUM(pman_pcs) pman_pcs,    SUM(pman_wt) pman_wt  FROM exp_pmanifest_awb p
			  Join Flt_Opr F  On P.Flt_Key   = F.Flt_Key  And P.Flt_Date = F.Sch_Date  And F.Flt_Type = 'D'
			  GROUP BY awb_no, awb_date, f.carr_code) pman ON pman.awb_no = a.AWB_NO AND pman.AWB_DATE       = a.AWB_DATE AND pman.carr_code      = NVL(#carr#,a.CARR_CODE)
			JOIN (Select Awb_No,    Awb_Date,    Flt_Key,    Flt_Date,    Sum(Locn_Pcs) Locnpcs,    Sum(Locn_Wt) Locnwt,    Min(Seq_No) Seq_No,    Count(1) Inv_Count  From Awb_Inventory
			   GROUP BY AWB_NO, AWB_DATE, FLT_KEY, FLT_DATE  ) AI ON A.AWB_NO = AI.AWB_NO AND A.AWB_DATE = AI.AWB_DATE
			Left Join Imp_Car_Awb Ic On Ic.Awb_No = a.Awb_No And Ic.Awb_Date = a.Awb_Date And (a.Awb_Type = 'I' Or a.Awb_Type ='T')
    		Left Join Exp_Car Ec On Ec.Awb_No = a.Awb_No And Ec.AWB_DATE = a.Awb_Date And a.Awb_Type = 'E'
			WHERE A.awb_closed_yn                 = 'N'		
			And A.awb_Date < sysdate - Nvl(#movmentdays#,10)
			And ((A.Car_Yn = 'Y' And Nvl(O.Pcs,0)-Nvl(Pman.Pman_Pcs,0) > 0) Or (A.Car_Yn = 'N'))
			AND (A.rcl_pcs >= 0 AND A.awb_type = 'E')
 		]]>
 	<isNotEmpty property="awbType">
			AND a.AWB_TYPE=#awbType# 
		  </isNotEmpty>
 	 <isNotEmpty property="carr">
			AND nvl(o.carr_code, a.carr_code)=#carr# 
          </isNotEmpty>
	 <isNotEmpty property="splCode">
			And ( ((#awb1#) In (a.Spl_Code1,a.Spl_Code2,a.Spl_Code3,a.Spl_Code4,a.Spl_Code5,a.Spl_Code6,a.Spl_Code7,a.Spl_Code8,a.Spl_Code9)) Or 
				  ((#awb2#) In (a.Spl_Code1,a.Spl_Code2,a.Spl_Code3,a.Spl_Code4,a.Spl_Code5,a.Spl_Code6,a.Spl_Code7,a.Spl_Code8,a.Spl_Code9)) Or 
				  ((#awb3#) In (a.Spl_Code1,a.Spl_Code2,a.Spl_Code3,a.Spl_Code4,a.Spl_Code5,a.Spl_Code6,a.Spl_Code7,a.Spl_Code8,a.Spl_Code9))  )
     </isNotEmpty>
     <isNotEmpty property="agentName">
			AND a.agent_name = #agentName#
     	</isNotEmpty> 
     	 <isNotEmpty property="loginCarrier">
				   AND ( nvl(o.carr_code, a.carr_code) = #loginCarrier#   OR  nvl(o.carr_code, a.carr_code) IN (SELECT CARR_CODE FROM MAST_CARR_GRP  WHERE GRP_CARR_CODE = #loginCarrier#))             
          </isNotEmpty>
		)
	</select>
	
	<select id="validateAgent" parameterClass="java.lang.String" resultClass="java.lang.String">
		Select COUNT(1) From Cust_Company Where Code_Desc = #codedesc#
	</select>
	
<!--	Queries for Inactive/Old Cargo List End-->	
<!--	Queries for Inventory Check(Desktop & HHT) Starts-->
	<select id="CARGO_INVENT_GROUP" parameterClass="cargo.cms.trace.bo.InventoryCheckBO"
		resultClass="cargo.cms.trace.bo.InventoryCheckBO">
		SELECT WH_GROUP whgroup,WH_AREA groupArea FROM MAST_WH_GROUP WHERE WH_GROUP= #whgroup# 
   	</select>
	<select id="CARGO_INVENT_LOC" parameterClass="cargo.cms.trace.bo.InventoryCheckBO"
		resultClass="cargo.cms.trace.bo.InventoryCheckBO">
		SELECT CODE groupArea,WH_GROUP whgroup FROM MAST_WH_LOC WHERE CODE=#groupArea# 
   	</select>
   	<select id="InvChkValidateLSP" parameterClass="cargo.cms.trace.bo.InventoryCheckBO"
		resultClass="cargo.cms.trace.bo.InventoryCheckBO">	
		select lsp_no lspno from lsp_inventory Where lsp_no=#lspno# 
	</select>
	<select id="InvChkValidateULD" parameterClass="cargo.cms.trace.bo.InventoryCheckBO"
		resultClass="cargo.cms.trace.bo.InventoryCheckBO">
		select uld_key uldkey from uld_inventory Where uld_key=#uldkey#
	</select>
	<select id="CARGO_INVENT_GROUP_SRCH" parameterClass="cargo.cms.trace.bo.InventoryCheckBO"
		resultClass="cargo.cms.trace.bo.InventoryCheckBO">
		SELECT ainv.SEQ_NO seqno,ainv.AWB_NO awbno,
		substr(ainv.AWB_NO, 1, 3) as awbPfx,ainv.AWB_DATE awbdate,
		ainv.CARR_CODE carrcode,ainv.CATALOG catalog,ainv.CC_CODE cccode,
		ainv.SRF_NO srfno,ainv.TRM_NO trmno,ainv.CDIF_NO cdifno,ainv.SCH_COLL_DATE
		schcolldate,ainv.LSP_NO lspno,ainv.LOC_CODE loccode,ainv.LOCN_PCS
		locnpcs,ainv.LOCN_WT locnwt,ainv.RTRV_DATE rtrvdate,ainv.RTRV_USER_ID
		rtrvuserid,ainv.STRG_DATE strgdate,ainv.STRG_RMK strgrmk,ainv.DAM_IND damind,
		ainv.PPK_IND ppkind,ainv.BULK_WT bulkwt,ainv.BUP_WT bupwt,ainv.FLT_NO fltno,
		ainv.FLT_DATE fltdate,ainv.FLT_TYPE flttype,ainv.FLT_KEY fltkey,
		ainv.ULD_KEY uldkey,ainv.CR_USER_ID cruserid,TO_CHAR(ainv.CR_DATE,'DDMONYY') crdate,
		ainv.LM_USER_ID lmuserid,TO_CHAR(ainv.LM_DATE,'DDMONYY') lmdate,ainv.REF_LSP_TR_TYPE reflsptrtype,
		ainv.REF_LSP_TR_EVENT reflsptrevent,ainv.REF_TR_NO reftrno,ainv.REF_TR_TYPE reftrtype,
		TO_CHAR(ainv.REF_TR_DATE,'DDMONYY') reftrdate,ainv.REF_DOC_LINE_NO refdoclineno,
		ainv.REF_LOC_FROM reflocfrom,ainv.REF_TR_EVENT reftrevent,ainv.REF_RMK refrmk,
		ainv.REF_MOV_FROM refmovfrom,ainv.REF_AWB_EVENT refawbevent,ainv.DAM_PCS dampcs,
		ainv.DAM_WT damwt,ainv.WH_DAM_IND whdamind,ainv.DAM_TYPE damtype,ainv.SAFE_HAND safehand,ainv.DLV_YN dlvyn
	    FROM AWB_INVENTORY ainv
	    <isNotEmpty property="whgroup">
	    	WHERE ainv.LOC_CODE in (select code from  MAST_WH_LOC  WHERE wh_group=#whgroup#)
	    </isNotEmpty>
	    <isNotEmpty property="groupArea">
	    	WHERE ainv.LOC_CODE=#groupArea#
	    </isNotEmpty>
	    <isNotEmpty property="lspno">
	    	WHERE ainv.lsp_no=#lspno# 
	    </isNotEmpty>
	    <isNotEmpty property="uldkey">
	    	WHERE ainv.uld_key=#uldkey#
	    </isNotEmpty>
   	</select>
	<insert id="CARGO_INVENT_INSERT_DETAIL" parameterClass="cargo.cms.trace.bo.InventoryCheckBO">
		INSERT INTO TRC_WOS_INV_DTL
		(COD_GRP,COD_LOC,ULD_KEY,LSP,AWB_PRFX,AWB_NUM,INV_PCS,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE)
		VALUES (#whgroup#,#loccode#,#uldkey#,#lspno#,#awbPfx#,#awbno#,#locnpcs#,#cruserid#,sysdate,#lmuserid#,sysdate)
	</insert>
	
	<insert id="CARGO_INVENT_INSERT_MASTER" parameterClass="cargo.cms.trace.bo.InventoryCheckBO">
		INSERT INTO TRC_WOS_INV_MST
		(COD_AREA,COD_GRP,COD_LOC,ULD_KEY,LSP,STRT_TIME,end_time,cr_date,CR_USER_ID,LM_USER_ID,LM_DATE)
		VALUES
		(#groupArea#,#whgroup#,#loccode#,#uldkey#,#lspno#,
		to_date(#startTime#,'dd-mon-yyyy hh24:mi:ss'),
		sysdate,sysdate,#cruserid#,#lmuserid#,sysdate)
	</insert>
	
	<insert id="CARGO_INVENT_INSERT_COMPLETE_DETAIL" parameterClass="cargo.cms.trace.bo.InventoryCheckBO">
		INSERT INTO TRC_PHY_INV_DTL
		(COD_GRP,COD_LOC,ULD_KEY,LSP,AWB_PRFX,AWB_NUM,INV_PCS,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE)
		VALUES (#whgroup#,#groupArea#,#uldkey#,#lspno#,#awbPfx#,#awbno#,#physicalpcs#,#lmuserid#,sysdate,#lmuserid#,sysdate)
	</insert>
	
	<insert id="CARGO_INVENT_INSERT_COMPLETE_MASTER" parameterClass="cargo.cms.trace.bo.InventoryCheckBO">
		INSERT INTO TRC_PHY_INV_MST
		(COD_AREA,COD_GRP,COD_LOC,ULD_KEY,LSP,strt_time,END_TIME,CR_USER_ID,cr_date,LM_USER_ID,LM_DATE)
		VALUES (#groupArea#,#whgroup#,#groupArea#,#uldkey#,#lspno#,to_date(#startTime#,'dd-mon-yyyy hh24:mi:ss'),sysdate,#lmuserid#,sysdate,#lmuserid#,sysdate)
	</insert>
	
	<delete id="CARGO_INVENT_DETAIL_CANCEL" parameterClass="cargo.cms.trace.bo.InventoryCheckBO">
			  DELETE FROM TRC_WOS_INV_DTL 
			 <isNotEmpty property="whgroup">
			 	 WHERE COD_GRP = #whgroup# 
	    	 </isNotEmpty>
	    	 <isNotEmpty property="groupArea">
		      	WHERE COD_LOC = #groupArea# OR COD_GRP IN (SELECT WH_GROUP FROM MAST_WH_LOC WHERE CODE = #groupArea#)
	   		 </isNotEmpty>
	   		 <isNotEmpty property="lspno">
		     	 WHERE LSP = #lspno# 
	    	 </isNotEmpty>
		     <isNotEmpty property="uldkey">
		      	WHERE ULD_KEY = #uldkey#
	    	 </isNotEmpty>
	</delete>
	<delete id="CARGO_INVENT_MASTER_CANCEL" parameterClass="cargo.cms.trace.bo.InventoryCheckBO">
			DELETE FROM TRC_WOS_INV_MST 
			 <isNotEmpty property="whgroup">
			 	 WHERE COD_GRP = #whgroup# 
	    	 </isNotEmpty>
	    	 <isNotEmpty property="groupArea">
		      	WHERE COD_LOC = #groupArea# OR COD_GRP IN (SELECT WH_GROUP FROM MAST_WH_LOC WHERE CODE = #groupArea#)
	   		 </isNotEmpty>
	   		 <isNotEmpty property="lspno">
		     	 WHERE LSP = #lspno# 
	    	 </isNotEmpty>
		     <isNotEmpty property="uldkey">
		      	WHERE ULD_KEY = #uldkey#
	    	 </isNotEmpty>
	</delete>
	<delete id="DEL_TRC_PHY_INV_DTL" parameterClass="cargo.cms.trace.bo.InventoryCheckBO">
			DELETE FROM TRC_PHY_INV_DTL 
			<isNotEmpty property="whgroup">
			 	 WHERE COD_GRP = #whgroup# 
	    	 </isNotEmpty>
	    	 <isNotEmpty property="groupArea">
		      	WHERE COD_LOC = #groupArea# OR COD_GRP IN (SELECT WH_GROUP FROM MAST_WH_LOC WHERE CODE = #groupArea#)
	   		 </isNotEmpty>
	   		 <isNotEmpty property="lspno">
		     	 WHERE LSP = #lspno# 
	    	 </isNotEmpty>
		     <isNotEmpty property="uldkey">
		      	WHERE ULD_KEY = #uldkey#
	    	 </isNotEmpty>
	</delete>
	<delete id="DEL_TRC_PHY_INV_MST" parameterClass="cargo.cms.trace.bo.InventoryCheckBO">
			DELETE FROM TRC_PHY_INV_MST 
			<isNotEmpty property="whgroup">
			 	 WHERE COD_GRP = #whgroup# 
	    	 </isNotEmpty>
	    	 <isNotEmpty property="groupArea">
		      	WHERE COD_LOC = #groupArea# OR COD_GRP IN (SELECT WH_GROUP FROM MAST_WH_LOC WHERE CODE = #groupArea#)
	   		 </isNotEmpty>
	   		 <isNotEmpty property="lspno">
		     	 WHERE LSP = #lspno# 
	    	 </isNotEmpty>
		     <isNotEmpty property="uldkey">
		      	WHERE ULD_KEY = #uldkey#
	    	 </isNotEmpty> 
	</delete>
	 <delete id="InvChkResDelLocDetailsWosDtl" parameterClass="cargo.cms.trace.bo.InventoryCheckBO">
			 DELETE FROM TRC_WOS_INV_DTL
        	 where cod_loc in (select code from mast_wh_loc where wh_group=#whgroup#)
	</delete>
	<delete id="InvChkResDelLocDetailsWosMst" parameterClass="cargo.cms.trace.bo.InventoryCheckBO">
			DELETE FROM TRC_WOS_INV_MST
      		where cod_loc in (select code from mast_wh_loc where wh_group=#whgroup#)
	</delete>
	<delete id="InvChkResDelLocDetailsPhyDtl" parameterClass="cargo.cms.trace.bo.InventoryCheckBO">
			DELETE FROM TRC_PHY_INV_DTL
      		where cod_loc in (select code from mast_wh_loc where wh_group=#whgroup#)
	</delete>
	<delete id="InvChkResDelLocDetailsPhyMst" parameterClass="cargo.cms.trace.bo.InventoryCheckBO">
			DELETE FROM TRC_PHY_INV_MST
      		where cod_loc in (select code from mast_wh_loc where wh_group=#whgroup#)
   </delete>
  <select id="GetStartTime" parameterClass="java.lang.String" resultClass="java.lang.String">
		select to_char(sysdate, 'dd-mon-yyyy hh24:mi:ss') from dual
  </select>
	
<!--	Queries for Inventory Check(Desktop & HHT) End-->
<!--	Queries for Inventory Check Result Starts-->
	<select id="InvChkResValidateGroup" parameterClass="cargo.cms.trace.bo.InventoryCheckResultBO"
		resultClass="cargo.cms.trace.bo.InventoryCheckResultBO">
		SELECT WH_GROUP cgroup FROM MAST_WH_GROUP WHERE WH_GROUP= #group# 
   	</select>
	<select id="InvChkResValidateLoc" parameterClass="cargo.cms.trace.bo.InventoryCheckResultBO"
		resultClass="cargo.cms.trace.bo.InventoryCheckResultBO">
		SELECT CODE clocation FROM MAST_WH_LOC WHERE CODE=#location# 
   	</select>
   	<select id="InvChkResValidateLSP" parameterClass="cargo.cms.trace.bo.InventoryCheckResultBO"
		resultClass="cargo.cms.trace.bo.InventoryCheckResultBO">	
		select lsp_no csdbin from lsp_inventory Where lsp_no=#csdbin# 
	</select>
	<select id="InvChkResValidateULD" parameterClass="cargo.cms.trace.bo.InventoryCheckResultBO"
		resultClass="cargo.cms.trace.bo.InventoryCheckResultBO">
		select uld_key uldbt from uld_inventory Where uld_key=#uldbt#
	</select>
	<select id="CARGO_INVENT_CHK_RESULT_GROUP" parameterClass="cargo.cms.trace.bo.InventoryCheckResultBO" resultClass="cargo.cms.trace.bo.InventoryCheckResultBO">
			 select  a.AWB_NUM awbno, Sum(a.Inv_Pcs) invpcs, nvl(b.INV_PCS,0) phypcs,a.COD_GRP cgroup,
			 decode(substr(a.AWB_NUM,0,3)||'-'||substr(a.AWB_NUM,4),'-','',substr(a.AWB_NUM,0,3)||'-'||substr(a.AWB_NUM,4)) as awbDisp
	         from trc_wos_inv_dtl a join trc_phy_inv_dtl b on a.awb_num = b.awb_num and a.inv_pcs != b.inv_pcs 
	         where 1=1 
	        <isNotEmpty property="group">
			    and a.cod_grp=b.cod_grp and a.COD_GRP =#group#	
		    </isNotEmpty>
			<isNotEmpty property="location">
			   and a.COD_loc=b.COD_loc and  a.COD_loc =#location#
		    </isNotEmpty>
			<isNotEmpty property="csdbin">
			   and a.LSP=b.LSP and  a.LSP =#csdbin#	
		    </isNotEmpty>
			<isNotEmpty property="uldbt">
			   and a.ULD_KEY=b.ULD_KEY and  a.ULD_KEY=#uldbt#
		    </isNotEmpty>
		    <isNotEmpty property="formdate">
			   and a.CR_DATE between to_date(#formdate#||' 0000','DDMONYY HH24MI') and  to_date(#toDate#||' 2359','DDMONYY HH24MI') 
		    </isNotEmpty>
		      GROUP BY A.Awb_Num, NVL(b.INV_PCS,0), a.COD_GRP
              UNION ALL
              select  a.AWB_NUM awbno, a.INV_PCS invpcs,0 phypcs,a.COD_GRP cgroup,
	          decode(substr(a.AWB_NUM,0,3)||'-'||substr(a.AWB_NUM,4),'-','',substr(a.AWB_NUM,0,3)||'-'||substr(a.AWB_NUM,4)) as awbDisp 
	          from trc_wos_inv_dtl a 
	          where  1=1 
             <isNotEmpty property="group">
			     and  a.COD_GRP =#group# and a.awb_num not in (select awb_num from trc_phy_inv_dtl where COD_GRP =#group#)
		    </isNotEmpty>
			<isNotEmpty property="location">
			    and  a.COD_loc =#location# and a.awb_num not in (select awb_num from trc_phy_inv_dtl where COD_loc =#location#)
		    </isNotEmpty>
			<isNotEmpty property="csdbin">
			   and  a.LSP =#csdbin#	 and a.awb_num not in (select awb_num from trc_phy_inv_dtl where LSP =#csdbin#)
		    </isNotEmpty>
			<isNotEmpty property="uldbt">
			   and  a.ULD_KEY=#uldbt# and a.awb_num not in (select awb_num from trc_phy_inv_dtl where ULD_KEY=#uldbt#)
		    </isNotEmpty>
		    <isNotEmpty property="formdate">
			   and a.CR_DATE between to_date(#formdate#||' 0000','DDMONYY HH24MI') and  to_date(#toDate#||' 2359','DDMONYY HH24MI') 
		    </isNotEmpty>
              UNION ALL
              select a.AWB_NUM awbno, 0 invpcs,nvl(a.INV_PCS,0) phypcs,a.COD_GRP cgroup,
			  decode(substr(a.AWB_NUM,0,3)||'-'||substr(a.AWB_NUM,4),'-','',substr(a.AWB_NUM,0,3)||'-'||substr(a.AWB_NUM,4)) as awbDisp 
        	  from trc_phy_inv_dtl a 
        	  where 1=1 
			<isNotEmpty property="group">
			     and  a.COD_GRP =#group# and a.awb_num not in (select awb_num from trc_wos_inv_dtl where COD_GRP =#group#)	
		    </isNotEmpty>
			<isNotEmpty property="location">
			    and  a.COD_loc =#location# and a.awb_num not in (select awb_num from trc_wos_inv_dtl where COD_loc =#location#)
		    </isNotEmpty>
			<isNotEmpty property="csdbin">
			   and  a.LSP =#csdbin#	and a.awb_num not in (select awb_num from trc_wos_inv_dtl where LSP =#csdbin#)
		    </isNotEmpty>
			<isNotEmpty property="uldbt">
			   and  a.ULD_KEY=#uldbt# and a.awb_num not in (select awb_num from trc_wos_inv_dtl where ULD_KEY=#uldbt#)
		    </isNotEmpty>
		    <isNotEmpty property="formdate">
			   and a.CR_DATE between to_date(#formdate#||' 0000','DDMONYY HH24MI') and  to_date(#toDate#||' 2359','DDMONYY HH24MI') 
		    </isNotEmpty>
	</select>
	<select id="CARGO_INVENT_CHK_RESULT_GROUP1" parameterClass="cargo.cms.trace.bo.InventoryCheckResultBO" resultClass="cargo.cms.trace.bo.InventoryCheckResultBO">
	  	     <![CDATA[		
			select a.AWB_NUM awbno, Sum(A.INV_PCS) invpcs,nvl(b.INV_PCS,0) phypcs,a.COD_GRP cgroup,
			decode(substr(a.AWB_NUM,0,3)||'-'||substr(a.AWB_NUM,4),'-','',substr(a.AWB_NUM,0,3)||'-'||substr(a.AWB_NUM,4)) as awbDisp 
			from trc_wos_inv_dtl a left join trc_phy_inv_dtl b on a.awb_num= b.awb_num
			where a.inv_pcs<> b.inv_pcs and b.COD_GRP is not null
		]]>	
		<isNotEmpty property="group">
			    and a.cod_grp=b.cod_grp and a.COD_GRP =#group#	
	    </isNotEmpty>
		<isNotEmpty property="location">
		   and a.COD_loc=b.COD_loc and  a.COD_loc =#location#
	    </isNotEmpty>
		<isNotEmpty property="csdbin">
		   and a.LSP=b.LSP and  a.LSP =#csdbin#	
	    </isNotEmpty>
		<isNotEmpty property="uldbt">
		   and a.ULD_KEY=b.ULD_KEY and  a.ULD_KEY=#uldbt#
	    </isNotEmpty>
	    <isNotEmpty property="formdate">
		   and b.CR_DATE between to_date(#formdate#||' 0000','DDMONYY HH24MI') and  to_date(#toDate#||' 2359','DDMONYY HH24MI') 
	    </isNotEmpty>
	    GROUP BY a.AWB_NUM, NVL(b.INV_PCS,0), a.COD_GRP
	    UNION
	         select a.AWB_NUM awbno, 0 invpcs,nvl(a.INV_PCS,0) phypcs,a.COD_GRP cgroup,
			 decode(substr(a.AWB_NUM,0,3)||'-'||substr(a.AWB_NUM,4),'-','',substr(a.AWB_NUM,0,3)||'-'||substr(a.AWB_NUM,4)) as awbDisp 
             from trc_phy_inv_dtl a where a.COD_GRP is not null
            <isNotEmpty property="group">
			     and  a.COD_GRP =#group# and a.awb_num not in (select awb_num from trc_wos_inv_dtl where COD_GRP =#group#)	
		    </isNotEmpty>
			<isNotEmpty property="location">
			    and  a.COD_loc =#location# and a.awb_num not in (select awb_num from trc_wos_inv_dtl where COD_loc =#location#)
		    </isNotEmpty>
			<isNotEmpty property="csdbin">
			   and  a.LSP =#csdbin#	and a.awb_num not in (select awb_num from trc_wos_inv_dtl where LSP =#csdbin#)
		    </isNotEmpty>
			<isNotEmpty property="uldbt">
			   and  a.ULD_KEY=#uldbt# and a.awb_num not in (select awb_num from trc_wos_inv_dtl where ULD_KEY=#uldbt#)
		    </isNotEmpty>
		    <isNotEmpty property="formdate">
			   and a.CR_DATE between to_date(#formdate#||' 0000','DDMONYY HH24MI') and  to_date(#toDate#||' 2359','DDMONYY HH24MI') 
		    </isNotEmpty>
	</select>
	<select id="CARGO_INVENT_CHK_RESULT_LOCATIONS" parameterClass="cargo.cms.trace.bo.InventoryCheckResultBO" resultClass="cargo.cms.trace.bo.InventoryCheckResultBO">
	 		 select a.COD_LOC location,a.AWB_NUM awbno, sum(a.INV_PCS) invpcs,nvl(b.INV_PCS,0) phypcs,a.COD_LOC  clocation,
			 decode(substr(a.AWB_NUM,0,3)||'-'||substr(a.AWB_NUM,4),'-','',substr(a.AWB_NUM,0,3)||'-'||substr(a.AWB_NUM,4)) as awbDisp 
             from trc_wos_inv_dtl a join trc_phy_inv_dtl b on a.awb_num = b.awb_num and a.inv_pcs != b.inv_pcs 
             where 1=1
       		<isNotEmpty property="group">
			    and a.cod_grp=b.cod_grp and a.COD_GRP =#group#	
		    </isNotEmpty>
			<isNotEmpty property="location">
			   and a.COD_loc=b.COD_loc and  a.COD_loc =#location#
		    </isNotEmpty>
			<isNotEmpty property="csdbin">
			   and a.LSP=b.LSP and  a.LSP =#csdbin#	
		    </isNotEmpty>
			<isNotEmpty property="uldbt">
			   and a.ULD_KEY=b.ULD_KEY and  a.ULD_KEY=#uldbt#
		    </isNotEmpty>
		    <isNotEmpty property="formdate">
			   and a.CR_DATE between to_date(#formdate#||' 0000','DDMONYY HH24MI') and  to_date(#toDate#||' 2359','DDMONYY HH24MI') 
		    </isNotEmpty>
		    GROUP BY a.COD_LOC, a.AWB_NUM, NVL(b.INV_PCS,0)
	        UNION ALL
	        select a.COD_LOC location,a.AWB_NUM awbno, a.INV_PCS invpcs,0 phypcs,a.COD_LOC  clocation,
			decode(substr(a.AWB_NUM,0,3)||'-'||substr(a.AWB_NUM,4),'-','',substr(a.AWB_NUM,0,3)||'-'||substr(a.AWB_NUM,4)) as awbDisp 
	        from trc_wos_inv_dtl a where 1=1 
       		<isNotEmpty property="group">
			     and  a.COD_GRP =#group# and a.awb_num not in (select awb_num from trc_phy_inv_dtl where COD_GRP =#group#)
		    </isNotEmpty>
			<isNotEmpty property="location">
			    and  a.COD_loc =#location# and a.awb_num not in (select awb_num from trc_phy_inv_dtl where COD_loc =#location#)
		    </isNotEmpty>
			<isNotEmpty property="csdbin">
			   and  a.LSP =#csdbin#	 and a.awb_num not in (select awb_num from trc_phy_inv_dtl where LSP =#csdbin#)
		    </isNotEmpty>
			<isNotEmpty property="uldbt">
			   and  a.ULD_KEY=#uldbt# and a.awb_num not in (select awb_num from trc_phy_inv_dtl where ULD_KEY=#uldbt#)
		    </isNotEmpty>
		    <isNotEmpty property="formdate">
			   and a.CR_DATE between to_date(#formdate#||' 0000','DDMONYY HH24MI') and  to_date(#toDate#||' 2359','DDMONYY HH24MI') 
		    </isNotEmpty>
	         UNION ALL
	         select a.COD_LOC location,a.AWB_NUM awbno, 0 invpcs,nvl(a.INV_PCS,0) phypcs,a.COD_LOC  clocation,
			 decode(substr(a.AWB_NUM,0,3)||'-'||substr(a.AWB_NUM,4),'-','',substr(a.AWB_NUM,0,3)||'-'||substr(a.AWB_NUM,4)) as awbDisp 
	         from trc_phy_inv_dtl a where 1=1 
	        <isNotEmpty property="group">
			     and  a.COD_GRP =#group# and a.awb_num not in (select awb_num from trc_wos_inv_dtl where COD_GRP =#group#)	
		    </isNotEmpty>
			<isNotEmpty property="location">
			    and  a.COD_loc =#location# and a.awb_num not in (select awb_num from trc_wos_inv_dtl where COD_loc =#location#)
		    </isNotEmpty>
			<isNotEmpty property="csdbin">
			   and  a.LSP =#csdbin#	and a.awb_num not in (select awb_num from trc_wos_inv_dtl where LSP =#csdbin#)
		    </isNotEmpty>
			<isNotEmpty property="uldbt">
			   and  a.ULD_KEY=#uldbt# and a.awb_num not in (select awb_num from trc_wos_inv_dtl where ULD_KEY=#uldbt#)
		    </isNotEmpty>
		    <isNotEmpty property="formdate">
			   and a.CR_DATE between to_date(#formdate#||' 0000','DDMONYY HH24MI') and  to_date(#toDate#||' 2359','DDMONYY HH24MI') 
		    </isNotEmpty>
	</select>
	<select id="CARGO_INVENT_CHK_RESULT_LOCATIONS1" parameterClass="cargo.cms.trace.bo.InventoryCheckResultBO"  resultClass="cargo.cms.trace.bo.InventoryCheckResultBO">
	  		<![CDATA[		
		select a.COD_LOC location,a.AWB_NUM awbno, a.INV_PCS invpcs,nvl(b.INV_PCS,0) phypcs,a.COD_LOC  clocation,
		decode(substr(a.AWB_NUM,0,3)||'-'||substr(a.AWB_NUM,4),'-','',substr(a.AWB_NUM,0,3)||'-'||substr(a.AWB_NUM,4)) as awbDisp 
		from trc_wos_inv_dtl a left join trc_phy_inv_dtl b on a.awb_num= b.awb_num
		where 1=1
		]]>
		<isNotEmpty property="group">
			and a.cod_grp=b.cod_grp and a.COD_GRP =#group#	
	    </isNotEmpty>
		<isNotEmpty property="location">
		   and a.COD_loc=b.COD_loc and  a.COD_loc =#location#
	    </isNotEmpty>
		<isNotEmpty property="csdbin">
		   and a.LSP=b.LSP and  a.LSP =#csdbin#	
	    </isNotEmpty>
		<isNotEmpty property="uldbt">
		   and a.ULD_KEY=b.ULD_KEY and  a.ULD_KEY=#uldbt#
	    </isNotEmpty>
	    <isNotEmpty property="formdate">
		   and b.CR_DATE between to_date(#formdate#||' 0000','DDMONYY HH24MI') and  to_date(#toDate#||' 2359','DDMONYY HH24MI') 
	    </isNotEmpty>
	    UNION
	        select a.COD_LOC location,a.AWB_NUM awbno, 0 invpcs,nvl(a.INV_PCS,0) phypcs,a.COD_LOC  clocation,
		    decode(substr(a.AWB_NUM,0,3)||'-'||substr(a.AWB_NUM,4),'-','',substr(a.AWB_NUM,0,3)||'-'||substr(a.AWB_NUM,4)) as awbDisp 
            from trc_phy_inv_dtl a where 1=1 
            <isNotEmpty property="group">
			     and  a.COD_GRP =#group# and a.awb_num not in (select awb_num from trc_wos_inv_dtl where COD_GRP =#group#)	
		    </isNotEmpty>
			<isNotEmpty property="location">
			    and  a.COD_loc =#location# and a.awb_num not in (select awb_num from trc_wos_inv_dtl where COD_loc =#location#)
		    </isNotEmpty>
			<isNotEmpty property="csdbin">
			   and  a.LSP =#csdbin#	and a.awb_num not in (select awb_num from trc_wos_inv_dtl where LSP =#csdbin#)
		    </isNotEmpty>
			<isNotEmpty property="uldbt">
			   and  a.ULD_KEY=#uldbt# and a.awb_num not in (select awb_num from trc_wos_inv_dtl where ULD_KEY=#uldbt#)
		    </isNotEmpty>
		    <isNotEmpty property="formdate">
			   and a.CR_DATE between to_date(#formdate#||' 0000','DDMONYY HH24MI') and  to_date(#toDate#||' 2359','DDMONYY HH24MI') 
		    </isNotEmpty>
	</select>
	<select id="CARGO_INVENT_CHK_RESULT_BY_GROUP_AND_LOCATIONS" parameterClass="cargo.cms.trace.bo.InventoryCheckResultBO"
		resultClass="cargo.cms.trace.bo.InventoryCheckResultBO">
	  <![CDATA[		
			select distinct a.COD_LOC location 
			from trc_wos_inv_dtl a 
			where a.cod_loc is not null
		]]>
		<isNotEmpty property="group">
			 and a.COD_loc in (select code FROM MAST_WH_LOC where wh_group=#group#)	
		 </isNotEmpty>	 	
	</select>
	<select id="CARGO_INVENT_CHK_RESULT_LSP" parameterClass="cargo.cms.trace.bo.InventoryCheckResultBO" resultClass="cargo.cms.trace.bo.InventoryCheckResultBO">
	    select a.COD_LOC location,a.AWB_NUM awbno, a.INV_PCS invpcs,nvl(b.INV_PCS,0) phypcs,a.LSP lsp,to_char(a.cr_date,'DDMONYY') lastCheckedDate,
		decode(substr(a.AWB_NUM,0,3)||'-'||substr(a.AWB_NUM,4),'-','',substr(a.AWB_NUM,0,3)||'-'||substr(a.AWB_NUM,4)) as awbDisp 
        from trc_wos_inv_dtl a join trc_phy_inv_dtl b on a.awb_num = b.awb_num and a.inv_pcs != b.inv_pcs 
        where 1=1
           <isNotEmpty property="group">
			    and a.cod_grp=b.cod_grp and a.COD_GRP =#group#	
	    </isNotEmpty>
		<isNotEmpty property="location">
		   and a.COD_loc=b.COD_loc and  a.COD_loc =#location#
	    </isNotEmpty>
		<isNotEmpty property="csdbin">
		   and a.LSP=b.LSP and  a.LSP =#csdbin#	
	    </isNotEmpty>
		<isNotEmpty property="uldbt">
		   and a.ULD_KEY=b.ULD_KEY and  a.ULD_KEY=#uldbt#
	    </isNotEmpty>
		    <isNotEmpty property="formdate">
			   and a.CR_DATE between to_date(#formdate#||' 0000','DDMONYY HH24MI') and  to_date(#toDate#||' 2359','DDMONYY HH24MI') 
		    </isNotEmpty>    
        UNION ALL
        select a.COD_LOC location,a.AWB_NUM awbno, a.INV_PCS invpcs,0 phypcs,a.LSP lsp,to_char(a.cr_date,'DDMONYY') lastCheckedDate,
		decode(substr(a.AWB_NUM,0,3)||'-'||substr(a.AWB_NUM,4),'-','',substr(a.AWB_NUM,0,3)||'-'||substr(a.AWB_NUM,4)) as awbDisp 
        from trc_wos_inv_dtl a 
        where 1=1  
        <isNotEmpty property="group">
			     and  a.COD_GRP =#group# and a.awb_num not in (select awb_num from trc_phy_inv_dtl where COD_GRP =#group#)
		    </isNotEmpty>
			<isNotEmpty property="location">
			    and  a.COD_loc =#location# and a.awb_num not in (select awb_num from trc_phy_inv_dtl where COD_loc =#location#)
		    </isNotEmpty>
			<isNotEmpty property="csdbin">
			   and  a.LSP =#csdbin#	 and a.awb_num not in (select awb_num from trc_phy_inv_dtl where LSP =#csdbin#)
		    </isNotEmpty>
			<isNotEmpty property="uldbt">
			   and  a.ULD_KEY=#uldbt# and a.awb_num not in (select awb_num from trc_phy_inv_dtl where ULD_KEY=#uldbt#)
		    </isNotEmpty>
		    <isNotEmpty property="formdate">
			   and a.CR_DATE between to_date(#formdate#||' 0000','DDMONYY HH24MI') and  to_date(#toDate#||' 2359','DDMONYY HH24MI') 
		    </isNotEmpty>
        UNION ALL
        select a.COD_LOC location,a.AWB_NUM awbno, 0 invpcs,nvl(a.INV_PCS,0) phypcs,a.LSP lsp,to_char(a.cr_date,'DDMONYY') lastCheckedDate,
		decode(substr(a.AWB_NUM,0,3)||'-'||substr(a.AWB_NUM,4),'-','',substr(a.AWB_NUM,0,3)||'-'||substr(a.AWB_NUM,4)) as awbDisp 
        from trc_phy_inv_dtl a 
        where 1=1  
	    	<isNotEmpty property="group">
			     and  a.COD_GRP =#group# and a.awb_num not in (select awb_num from trc_wos_inv_dtl where COD_GRP =#group#)	
		    </isNotEmpty>
			<isNotEmpty property="location">
			    and  a.COD_loc =#location# and a.awb_num not in (select awb_num from trc_wos_inv_dtl where COD_loc =#location#)
		    </isNotEmpty>
			<isNotEmpty property="csdbin">
			   and  a.LSP =#csdbin#	and a.awb_num not in (select awb_num from trc_wos_inv_dtl where LSP =#csdbin#)
		    </isNotEmpty>
			<isNotEmpty property="uldbt">
			   and  a.ULD_KEY=#uldbt# and a.awb_num not in (select awb_num from trc_wos_inv_dtl where ULD_KEY=#uldbt#)
		    </isNotEmpty>
		    <isNotEmpty property="formdate">
			   and a.CR_DATE between to_date(#formdate#||' 0000','DDMONYY HH24MI') and  to_date(#toDate#||' 2359','DDMONYY HH24MI') 
		    </isNotEmpty>
	</select>
	<select id="CARGO_INVENT_CHK_RESULT_ULD" parameterClass="cargo.cms.trace.bo.InventoryCheckResultBO" resultClass="cargo.cms.trace.bo.InventoryCheckResultBO">
	       select a.COD_LOC location,a.AWB_NUM awbno, a.INV_PCS invpcs,nvl(b.INV_PCS,0) phypcs,a.ULD_KEY uldbt,to_char(a.cr_date,'DDMONYY') lastCheckedDate,  
		   decode(substr(a.AWB_NUM,0,3)||'-'||substr(a.AWB_NUM,4),'-','',substr(a.AWB_NUM,0,3)||'-'||substr(a.AWB_NUM,4)) as awbDisp
	       from trc_wos_inv_dtl a join trc_phy_inv_dtl b on a.awb_num = b.awb_num and a.inv_pcs != b.inv_pcs 
	       where 1=1
       <isNotEmpty property="group">
			    and a.cod_grp=b.cod_grp and a.COD_GRP =#group#	
	    </isNotEmpty>
		<isNotEmpty property="location">
		   and a.COD_loc=b.COD_loc and  a.COD_loc =#location#
	    </isNotEmpty>
		<isNotEmpty property="csdbin">
		   and a.LSP=b.LSP and  a.LSP =#csdbin#	
	    </isNotEmpty>
		<isNotEmpty property="uldbt">
		   and a.ULD_KEY=b.ULD_KEY and  a.ULD_KEY=#uldbt#
	    </isNotEmpty>
		    <isNotEmpty property="formdate">
			   and a.CR_DATE between to_date(#formdate#||' 0000','DDMONYY HH24MI') and  to_date(#toDate#||' 2359','DDMONYY HH24MI') 
		    </isNotEmpty>
         UNION ALL
        	select a.COD_LOC location,a.AWB_NUM awbno, a.INV_PCS invpcs,0 phypcs,a.ULD_KEY uldbt,to_char(a.cr_date,'DDMONYY') lastCheckedDate,  
		    decode(substr(a.AWB_NUM,0,3)||'-'||substr(a.AWB_NUM,4),'-','',substr(a.AWB_NUM,0,3)||'-'||substr(a.AWB_NUM,4)) as awbDisp
	        from trc_wos_inv_dtl a 
	        where 1=1  
       <isNotEmpty property="group">
			     and  a.COD_GRP =#group# and a.awb_num not in (select awb_num from trc_phy_inv_dtl where COD_GRP =#group#)
		    </isNotEmpty>
			<isNotEmpty property="location">
			    and  a.COD_loc =#location# and a.awb_num not in (select awb_num from trc_phy_inv_dtl where COD_loc =#location#)
		    </isNotEmpty>
			<isNotEmpty property="csdbin">
			   and  a.LSP =#csdbin#	 and a.awb_num not in (select awb_num from trc_phy_inv_dtl where LSP =#csdbin#)
		    </isNotEmpty>
			<isNotEmpty property="uldbt">
			   and  a.ULD_KEY=#uldbt# and a.awb_num not in (select awb_num from trc_phy_inv_dtl where ULD_KEY=#uldbt#)
		    </isNotEmpty>
		    <isNotEmpty property="formdate">
			   and a.CR_DATE between to_date(#formdate#||' 0000','DDMONYY HH24MI') and  to_date(#toDate#||' 2359','DDMONYY HH24MI') 
		    </isNotEmpty>
        UNION ALL
         	select a.COD_LOC location,a.AWB_NUM awbno, 0 invpcs,nvl(a.INV_PCS,0) phypcs,a.ULD_KEY uldbt,to_char(a.cr_date,'DDMONYY') lastCheckedDate,  
		    decode(substr(a.AWB_NUM,0,3)||'-'||substr(a.AWB_NUM,4),'-','',substr(a.AWB_NUM,0,3)||'-'||substr(a.AWB_NUM,4)) as awbDisp
	        from trc_phy_inv_dtl a 
	        where 1=1 
	        <isNotEmpty property="group">
			     and  a.COD_GRP =#group# and a.awb_num not in (select awb_num from trc_wos_inv_dtl where COD_GRP =#group#)	
		    </isNotEmpty>
			<isNotEmpty property="location">
			    and  a.COD_loc =#location# and a.awb_num not in (select awb_num from trc_wos_inv_dtl where COD_loc =#location#)
		    </isNotEmpty>
			<isNotEmpty property="csdbin">
			   and  a.LSP =#csdbin#	and a.awb_num not in (select awb_num from trc_wos_inv_dtl where LSP =#csdbin#)
		    </isNotEmpty>
			<isNotEmpty property="uldbt">
			   and  a.ULD_KEY=#uldbt# and a.awb_num not in (select awb_num from trc_wos_inv_dtl where ULD_KEY=#uldbt#)
		    </isNotEmpty>
		    <isNotEmpty property="formdate">
			   and a.CR_DATE between to_date(#formdate#||' 0000','DDMONYY HH24MI') and  to_date(#toDate#||' 2359','DDMONYY HH24MI') 
		    </isNotEmpty>
	</select>
	<select id="CARGO_INVENT_CHK_RESULT_DATE_RANGE_LSPULD" parameterClass="cargo.cms.trace.bo.InventoryCheckResultBO" resultClass="cargo.cms.trace.bo.InventoryCheckResultBO">
	     <![CDATA[		
			select DISTINCT a.COD_LOC location,a.AWB_NUM awbno, a.INV_PCS invpcs,nvl(b.INV_PCS,0) phypcs,a.ULD_KEY uldbt,a.LSP lsp,  
	      	NVL(a.LSP,a.ULD_KEY) as lspUld,to_char(a.cr_date,'DDMONYY') lastCheckedDate,
	      	decode(substr(a.AWB_NUM,0,3)||'-'||substr(a.AWB_NUM,4),'-','',substr(a.AWB_NUM,0,3)||'-'||substr(a.AWB_NUM,4)) as awbDisp
	      	from trc_wos_inv_dtl a left join trc_phy_inv_dtl b on a.awb_num= b.awb_num
			where a.inv_pcs<> b.inv_pcs and (b.LSP is not null or b.ULD_KEY is not null)
		]]>
		<isNotEmpty property="group">
			 and a.cod_grp=b.cod_grp and a.COD_GRP =#group#	
	    </isNotEmpty>
		<isNotEmpty property="location">
		   and a.COD_loc=b.COD_loc and  a.COD_loc =#location#
	    </isNotEmpty>
		<isNotEmpty property="csdbin">
		   and a.LSP=b.LSP and  a.LSP =#csdbin#	
	    </isNotEmpty>
		<isNotEmpty property="uldbt">
		   and a.ULD_KEY=b.ULD_KEY and  a.ULD_KEY=#uldbt#
	    </isNotEmpty>
	    <isNotEmpty property="formdate">
		   and b.CR_DATE between to_date(#formdate#||' 0000','DDMONYY HH24MI') and  to_date(#toDate#||' 2359','DDMONYY HH24MI') 
	    </isNotEmpty>
	    UNION
	        select DISTINCT a.COD_LOC location,a.AWB_NUM awbno, a.INV_PCS invpcs,nvl(a.INV_PCS,0) phypcs,a.ULD_KEY uldbt,a.LSP lsp,  
	      	NVL(a.LSP,a.ULD_KEY) as lspUld,to_char(a.cr_date,'DDMONYY') lastCheckedDate,
	      	decode(substr(a.AWB_NUM,0,3)||'-'||substr(a.AWB_NUM,4),'-','',substr(a.AWB_NUM,0,3)||'-'||substr(a.AWB_NUM,4)) as awbDisp
            from trc_phy_inv_dtl a where (a.LSP is not null or a.ULD_KEY is not null) 
            <isNotEmpty property="group">
			     and  a.COD_GRP =#group# and a.awb_num not in (select awb_num from trc_wos_inv_dtl where COD_GRP =#group#)	
		    </isNotEmpty>
			<isNotEmpty property="location">
			    and  a.COD_loc =#location# and a.awb_num not in (select awb_num from trc_wos_inv_dtl where COD_loc =#location#)
		    </isNotEmpty>
			<isNotEmpty property="csdbin">
			   and  a.LSP =#csdbin#	and a.awb_num not in (select awb_num from trc_wos_inv_dtl where LSP =#csdbin#)
		    </isNotEmpty>
			<isNotEmpty property="uldbt">
			   and  a.ULD_KEY=#uldbt# and a.awb_num not in (select awb_num from trc_wos_inv_dtl where ULD_KEY=#uldbt#)
		    </isNotEmpty>
		    <isNotEmpty property="formdate">
			   and a.CR_DATE between to_date(#formdate#||' 0000','DDMONYY HH24MI') and  to_date(#toDate#||' 2359','DDMONYY HH24MI') 
		    </isNotEmpty>  
	</select>
	<select id="CARGO_INVENT_CHK_RESULT_NONCOVEREDLOCATION" parameterClass="cargo.cms.trace.bo.InventoryCheckResultBO"
		resultClass="cargo.cms.trace.bo.InventoryCheckResultBO">
		select  DISTINCT t1.cod_grp cgroup,t2.cod_loc clocation,t2.cod_loc location,t1.awb_num  awbno,t1.lsp csdbin,t1.uld_key uldbt,
		decode(substr(t1.AWB_NUM,0,3)||'-'||substr(t1.AWB_NUM,4),'-','',substr(t1.AWB_NUM,0,3)||'-'||substr(t1.AWB_NUM,4)) as awbDisp
		from TRC_PHY_INV_DTL t1 left join trc_wos_inv_dtl t2 on t1.awb_num=t2.awb_num
		where t2.cr_date &lt; sysdate-#movmentdays#
		<isNotEmpty  property="group">
			t1.cod_grp=t2.cod_grp AND t2.cod_grp=#group#
		</isNotEmpty>
		<isNotEmpty property="location">
			t1.cod_loc=t2.cod_loc AND t2.cod_loc=#location#
		</isNotEmpty>
		<isNotEmpty property="csdbin">
			t1.lsp=t2.lsp AND t2.lsp=#csdbin#
		</isNotEmpty>
		<isNotEmpty  property="uldbt">
			t1.uld_key=t2.uld_key AND t2.uld_key=#uldbt#
		</isNotEmpty>
		<isNotEmpty  property="formdate">
			and t2.CR_DATE between to_date(#formdate#||' 0000','DDMONYY HH24MI') and  to_date(#toDate#||' 2359','DDMONYY HH24MI')
		</isNotEmpty>
	</select>
	<select id="CARGO_INVENT_CHK_RESULT_LASTCHECKEDDATE" parameterClass="cargo.cms.trace.bo.InventoryCheckResultBO"
		resultClass="java.lang.String">
		select to_char(max(cr_date),'DDMONYY') lactCheckedDate from TRC_WOS_INV_DTL
		<isNotEmpty property="group">
			where cod_grp=#group#
		</isNotEmpty>
		<isNotEmpty property="location">
			where cod_loc=#location#
		</isNotEmpty>
		<isNotEmpty  property="csdbin">
			where lsp=#csdbin#
		</isNotEmpty>
		<isNotEmpty  property="uldbt">
			where uld_key=#uldbt#
		</isNotEmpty>
		<isNotEmpty  property="formdate">
			where CR_DATE between to_date(#formdate#||' 0000','DDMONYY HH24MI') and  to_date(#toDate#||' 2359','DDMONYY HH24MI') 
		</isNotEmpty>
	</select>
	<select id="CARGO_INDESCREPENC_CHK_RESULT_GROUP" parameterClass="cargo.cms.trace.bo.InventoryCheckResultBO"
		resultClass="cargo.cms.trace.bo.InventoryCheckResultBO">
		select awb.AWB_NO awbno, awb.AWB_TYPE awbtype,awb.ORIG orgin,awb.DEST
		dest,awb.CONTENT content,
		awb.SPL_CODE1 spcode1, awb.SPL_CODE2 spcode2, awb.SPL_CODE3 spcode3,awb.PCS
		awbpcs,awb.WT awbwt,
    	awb.SPL_CODE1  awb1, awb.SPL_CODE2  awb2, awb.SPL_CODE3  awb3,
    	awb.SPL_CODE1 || DECODE(awb.SPL_CODE2,NULL,'',','||awb.SPL_CODE2)
    	|| DECODE(awb.SPL_CODE3,NULL,'',','||awb.SPL_CODE3)  AS shcDisp,
		decode(substr(awb.AWB_NO,0,3)||'-'||substr(awb.AWB_NO,4),'-','',substr(awb.AWB_NO,0,3)||'-'||substr(awb.AWB_NO,4)) as awbDisp
		from AWB awb where AWB_NO=#awbno#
	</select>	
	
	<select id="CARGO_INDESCREPENC_CHK_MOVMENT_GROUP"
		parameterClass="cargo.cms.trace.bo.InventoryCheckResultBO"
		resultClass="cargo.cms.trace.bo.InventoryCheckResultBO">
		select distinct to_char(t1.MOV_DATE,'DDMONYY HH:MM') movDate,t1.AWB_NO awbno,
		decode(substr(t1.AWB_NO,0,3)||'-'||substr(t1.AWB_NO,4),'-','',substr(t1.AWB_NO,0,3)||'-'||substr(t1.AWB_NO,4)) as awbDisp,
		t1.EVENT_ID eventId,
		t1.MOV_FROM orgin,
		t1.MOV_TO dest,
		t2.PCS awbpcs,
		t2.WT awbwt,
		t1.TR_TYPE trType,
		NVL(t1.LSP_NO,t1.ULD_NO) lspUld
		from AWB_MOV t1 join awb t2 on t1.awb_no=t2.awb_no
		where 
		t1.MOV_DATE between to_date(#startTime#, 'dd-mon-yyyy hh24:mi:ss')
		and to_date(#endTime#, 'dd-mon-yyyy hh24:mi:ss') 
		<isNotEmpty prepend="AND" property="cgroup">
			((t1.MOV_FROM IS NOT NULL AND t1.MOV_FROM in (Select code From Mast_Wh_Loc Where Wh_Group=#cgroup#))
			OR (t1.MOV_TO IS NOT NULL AND t1.MOV_TO in (Select code From Mast_Wh_Loc Where Wh_Group=#cgroup#))) 
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="clocation">
			((t1.MOV_FROM IS NOT NULL AND t1.MOV_FROM = #clocation#)
			OR (t1.MOV_TO IS NOT NULL AND t1.MOV_TO = #clocation#)) 
		</isNotEmpty>
		
	</select>
	
	
	<select id="CARGO_INDESCREPENC_CHK_MOVMENT_GROUP_1"
		parameterClass="cargo.cms.trace.bo.InventoryCheckResultBO"
		resultClass="cargo.cms.trace.bo.InventoryCheckResultBO">
		select distinct to_char(t1.MOV_DATE,'DDMONYY HH:MM') movDate,t1.AWB_NO awbno,
		decode(substr(t1.AWB_NO,0,3)||'-'||substr(t1.AWB_NO,4),'-','',substr(t1.AWB_NO,0,3)||'-'||substr(t1.AWB_NO,4)) as awbDisp,
		t1.EVENT_ID eventId,
		t1.MOV_FROM orgin,
		t1.MOV_TO dest,
		t2.PCS awbpcs,
		t2.WT awbwt,
		t1.TR_TYPE trType,
		NVL(t1.LSP_NO,t1.ULD_NO) lspUld
		from AWB_MOV t1 join awb t2 on t1.awb_no=t2.awb_no
		where 
		t1.awb_no = #awbno# and 
		t1.MOV_DATE between to_date(#startTime#, 'dd-mon-yyyy hh24:mi:ss')
		and to_date(#endTime#, 'dd-mon-yyyy hh24:mi:ss') 
		<isNotEmpty prepend="AND" property="cgroup">
			((t1.MOV_FROM IS NOT NULL AND t1.MOV_FROM in (Select code From Mast_Wh_Loc Where Wh_Group=#cgroup#))
			OR (t1.MOV_TO IS NOT NULL AND t1.MOV_TO in (Select code From Mast_Wh_Loc Where Wh_Group=#cgroup#))) 
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="clocation">
			((t1.MOV_FROM IS NOT NULL AND t1.MOV_FROM = #clocation#)
			OR (t1.MOV_TO IS NOT NULL AND t1.MOV_TO = #clocation#)) 
		</isNotEmpty>
		
	</select>
	
	
	
	<select id="CARGO_INDESCREPENC_CHK_MOVMENTEVENT_GROUP"
		parameterClass="cargo.cms.trace.bo.InventoryCheckResultBO"
		resultClass="java.lang.String">
		select EVENT_DESC eventDesc from REGISTER_TR_NO_EVENTS 
		where TR_TYPE=#trType# AND EVENT_ID=#eventId#
	</select>
	<delete id="InvChkResPurgeWosDtl" parameterClass="java.lang.String">
			 DELETE FROM TRC_WOS_INV_DTL where cr_date &lt; sysdate-14
	</delete>
	<delete id="InvChkResPurgeWosMst" parameterClass="java.lang.String">
			DELETE FROM TRC_WOS_INV_MST where cr_date &lt; sysdate-14
	</delete>
	<delete id="InvChkResPurgePhyDtl" parameterClass="java.lang.String">
			DELETE FROM TRC_PHY_INV_DTL where cr_date &lt; sysdate-14
	</delete>
	<delete id="InvChkResPurgePhyMst" parameterClass="java.lang.String">
			DELETE FROM TRC_PHY_INV_MST where cr_date &lt; sysdate-14
  	</delete>
  	<select id="SqlGetStartTimeFromWosDtl"
		parameterClass="cargo.cms.trace.bo.InventoryCheckResultBO"
		resultClass="java.lang.String">
	  	select to_char(strt_time, 'dd-mon-yyyy hh24:mi:ss') as startTime 
		from trc_phy_inv_mst where 
		1=1
		<isNotEmpty prepend="AND" property="clocation">
			cod_loc = #clocation#
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="cgroup">
			cod_grp = #cgroup#
		</isNotEmpty>
		 and ROWNUM = 1  
    </select>
    <select id="SqlGetEndTimeFromPhyDtl"
		parameterClass="cargo.cms.trace.bo.InventoryCheckResultBO"
		resultClass="java.lang.String">
	  	select to_char(end_time, 'dd-mon-yyyy hh24:mi:ss') as startTime 
		from trc_phy_inv_mst where 
		1=1
		<isNotEmpty prepend="AND" property="clocation">
			cod_loc = #clocation# 
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="cgroup">
			cod_grp = #cgroup# 
		</isNotEmpty>
		 and ROWNUM = 1
  </select>
  <select id="SqlGetNonCoveredLocFromLoc" parameterClass="cargo.cms.trace.bo.InventoryCheckResultBO" resultClass="cargo.cms.trace.bo.InventoryCheckResultBO">
		select t1.loc_code location,
		awb.awb_type awbtype, awb.awb_no awbno, awb.PCS awbpcs, awb.WT awbwt,awb.PCS||'/'||awb.wt awbpcs1,
		decode(substr(awb.AWB_NO,0,3)||'-'||substr(awb.AWB_NO,4),'-','',substr(awb.AWB_NO,0,3)||'-'||substr(awb.AWB_NO,4)) as awbDisp
		From Awb_Inventory T1
   		Join Awb Awb  On T1.Awb_No = Awb.Awb_No And T1.Awb_Date = Awb.Awb_Date
		Where T1.Loc_Code = #location#
   		 And Not Exists (Select Null From Trc_phy_Inv_mst   Where Cod_Loc = #location# And Cr_Date &lt; (Sysdate - #movmentdays#))
    	 And Exists (select null from mast_wh_loc  Where code = #location#)
		<dynamic prepend="ORDER BY ">
            <isNotEmpty property="sortOrder.sortField">
                $sortOrder.sortField$
            </isNotEmpty>
        </dynamic>		                      
   </select> 
   
   <select id="SqlGetNonCoveredLocFromLocCOUNT"
		parameterClass="cargo.cms.trace.bo.InventoryCheckResultBO"
		resultClass="java.lang.Integer">
		SELECT COUNT(1) AS totalRowCount FROM ( 
			select null
			From Awb_Inventory T1
   			Join Awb Awb  On T1.Awb_No = Awb.Awb_No And T1.Awb_Date = Awb.Awb_Date
			Where T1.Loc_Code = #location#
   			And Not Exists (Select Null From Trc_phy_Inv_mst   Where Cod_Loc = #location# And Cr_Date &lt; Sysdate - #movmentdays#)
    	 	And Exists (select null from mast_wh_loc  Where code = #location#)
	   )
   </select>                  
   <select id="SqlGetNonCoveredLocFromGrp"
		parameterClass="cargo.cms.trace.bo.InventoryCheckResultBO"
		resultClass="cargo.cms.trace.bo.InventoryCheckResultBO">                  
		select t1.loc_code location,
		awb.awb_type awbtype, awb.awb_no awbno, awb.PCS awbpcs, awb.WT awbwt,awb.PCS||'/'||awb.wt awbpcs1,
		decode(substr(awb.AWB_NO,0,3)||'-'||substr(awb.AWB_NO,4),'-','',substr(awb.AWB_NO,0,3)||'-'||substr(awb.AWB_NO,4)) as awbDisp
		from awb_inventory t1 join awb awb  on t1.awb_no=awb.awb_no
		where t1.loc_code in (select code from mast_wh_loc  Where wh_Group = #group#) 
		 And t1.loc_code not in (Select cod_loc From Trc_phy_Inv_mst Where cod_loc in (select code from mast_wh_loc where wh_group=#group#)  And Cr_Date &lt; (Sysdate - #movmentdays#))
    	 And Exists (select null from mast_wh_loc  Where wh_Group =#group#)		
		<dynamic prepend="ORDER BY ">
            <isNotEmpty property="sortOrder.sortField">
                $sortOrder.sortField$
            </isNotEmpty>
       </dynamic>
	</select>
	<select id="SqlGetNonCoveredLocFromGrpCOUNT"
		parameterClass="cargo.cms.trace.bo.InventoryCheckResultBO"
		resultClass="java.lang.Integer">                  
		SELECT COUNT(1) AS totalRowCount FROM ( 
			select null
			from awb_inventory t1 join awb awb  on t1.awb_no=awb.awb_no
			where t1.loc_code in (select code from mast_wh_loc  Where wh_Group = #group#)  
			 And t1.loc_code not in (Select cod_loc From Trc_phy_Inv_mst Where cod_loc in (select code from mast_wh_loc where wh_group=#group#)  And Cr_Date &lt; (Sysdate - #movmentdays#)) 
    		 And Exists (select null from mast_wh_loc  Where wh_Group =#group#)
		)			                                       
	</select>
		<!--	Queries for Inventory Check Result End-->	
	<!--
		############################ DOC ACCEPTANCE LIST :: END ::
		######################################
	-->
	<!-- Create Cargo Tracing Start -->
	<select id="fetchCargoTracingTRCAWBdtls" parameterClass="cargo.cms.trace.bo.CargoTracingBO"
		resultClass="cargo.cms.trace.bo.CargoTracingBO">
		SELECT SUBSTR(AWB_NO,1,3)||'-'||SUBSTR(AWB_NO,4)
		awbNoDisp,AWB_NO awbNo,TO_CHAR(AWB_DATE,'DDMONYY') awbDate,AWB_TYPE
		awbType,
		CARRIER carrCode,ORIG orig,DEST dest,PCS pcs,WGT wt,
		shpr_name shprName,
		SHIPPER_CODE shprCode,
		cnsgn_name consgnName,CNSGN_CODE consgnCode,
		IMG_TRANS_ID imgTransId FROM TRC_AWB
		WHERE AWB_NO=#awbNo# AND AWB_DATE=TO_DATE(#awbDate#,'DDMONYY')
	</select>
	<select id="fetchCargoTracingAWBdtls" parameterClass="cargo.cms.trace.bo.CargoTracingBO"
		resultClass="cargo.cms.trace.bo.CargoTracingBO">
		SELECT SUBSTR(AWB_NO,1,3)||'-'||SUBSTR(AWB_NO,4)
		awbNoDisp,AWB_NO awbNo,TO_CHAR(AWB_DATE,'DDMONYY') awbDate,
        AWB_TYPE awbType,CARR_CODE carrCode,ORIG orig,DEST dest,PCS pcs,WT
		wt,NVL(SHIPPER_NAME,'') shprName,NVL(SHPR_CODE,'') shprCode,
		 CASE
		    WHEN awb_type='E' 
		    THEN (SELECT csgne_name FROM exp_car WHERE awb_no=t1.awb_no AND awb_date = t1.awb_date AND rownum=1)
		    WHEN awb_type='I'  OR awb_type  ='T'
		    THEN (SELECT CSGNE_NAME FROM IMP_CAR_AWB WHERE AWB_NO=t1.awb_no AND awb_date = t1.awb_date AND rownum=1)
		  END consgnName,
		  CASE
		    WHEN awb_type='E'
		    THEN (SELECT code FROM cust_company  WHERE code_desc = (SELECT csgne_name FROM exp_car WHERE awb_no=t1.awb_no AND awb_date = t1.awb_date AND rownum=1))
		    WHEN awb_type='I' OR awb_type  ='T'
		    THEN (SELECT code FROM cust_company   WHERE code_desc =   (SELECT CSGNE_NAME FROM IMP_CAR_AWB WHERE AWB_NO=t1.awb_no AND awb_date = t1.awb_date AND rownum=1 ))
		  END consgnCode
	    FROM AWB  t1
	    WHERE AWB_NO = #awbNo# AND AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
	</select>
	<select id="fetchCargoTracingImpFltDtls" parameterClass="cargo.cms.trace.bo.CargoTracingBO"
		resultClass="cargo.cms.trace.bo.CargoTracingFltBO">
		SELECT FLT_KEY fltKey,TO_CHAR(FLT_DATE,'DDMONYY')
		fltDate,substr (FLT_KEY, 1,length(carr_code)) carrCode,substr
		(FLT_KEY, length(carr_code)+1) fltNo,'A' fltType
		FROM IMP_CAR_SHP WHERE AWB_NO=#awbNo# AND AWB_DATE =
		TO_DATE(#awbDate#,'DDMONYY') AND AWB_NO NOT IN (SELECT AWB_NO from
		TRC_FLT
		WHERE AWB_NO=#awbNo# AND AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') AND
		FLT_KEY =IMP_CAR_SHP.FLT_KEY AND FLT_DATE= IMP_CAR_SHP.FLT_DATE AND
		DCRPNCY_TYP=#discType#)
	</select>
	<select id="fetchCargoTracingExpFltDtls" parameterClass="cargo.cms.trace.bo.CargoTracingBO"
		resultClass="cargo.cms.trace.bo.CargoTracingFltBO">
		SELECT FLT_KEY fltKey,TO_CHAR(FLT_DATE,'DDMONYY')
		fltDate,substr (FLT_KEY, 1,length(#carrCode#)) carrCode,substr
		(FLT_KEY, length(#carrCode#)+1) fltNo,'D' fltType
		FROM
		EXP_PMANIFEST_AWB WHERE AWB_NO=#awbNo# AND AWB_DATE =
		TO_DATE(#awbDate#,'DDMONYY') AND AWB_NO NOT IN (SELECT AWB_NO from
		TRC_FLT
		WHERE AWB_NO=#awbNo# AND AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') AND
		FLT_KEY =EXP_PMANIFEST_AWB.FLT_KEY AND FLT_DATE=
		EXP_PMANIFEST_AWB.FLT_DATE AND DCRPNCY_TYP=#discType#)
   		union 
		SELECT FLT_KEY fltKey,TO_CHAR(FLT_DATE,'DDMONYY')
		fltDate,substr (FLT_KEY, 1,length(#carrCode#)) carrCode,substr
		(FLT_KEY, length(#carrCode#)+1) fltNo,'D' fltType
		FROM
		EXP_PMAN_TARMAC_AWB WHERE AWB_NO=#awbNo# AND AWB_DATE =
		TO_DATE(#awbDate#,'DDMONYY') AND AWB_NO NOT IN (SELECT AWB_NO from
		TRC_FLT
		WHERE AWB_NO=#awbNo# AND AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') AND
		FLT_KEY =EXP_PMAN_TARMAC_AWB.FLT_KEY AND FLT_DATE=
		EXP_PMAN_TARMAC_AWB.FLT_DATE AND DCRPNCY_TYP=#discType#)
	</select>
	<select id="fetchCargoTracingLocnDtls" parameterClass="cargo.cms.trace.bo.CargoTracingBO"
		resultClass="cargo.cms.trace.bo.CargoTracingLocnBO">
		SELECT LOC_CODE locCode,LOCN_PCS pcs,DAM_PCS
		dmgPcs,NVL(LSP_NO,'') lspNo
		FROM AWB_INVENTORY WHERE AWB_NO=#awbNo# AND AWB_DATE =
		TO_DATE(#awbDate#,'DDMONYY') AND AWB_NO NOT IN (SELECT AWB_NO from
		TRC_LOC
		WHERE AWB_NO=#awbNo# AND AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') AND
		DCRPNCY_TYP=#discType#)
	</select>
	<select id="sqlCountTrcAWBExists" parameterClass="cargo.cms.trace.bo.CargoTracingBO"
		resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM TRC_AWB WHERE AWB_NO=#awbNo# AND
		AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
	</select>
	<insert id="sqlInsertAWBTrcDtls" parameterClass="cargo.cms.trace.bo.CargoTracingBO">
		INSERT INTO TRC_AWB
		(AWB_NO,AWB_DATE,CARRIER,ORIG,DEST,PCS,WGT,SHIPPER_CODE,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,AWB_TYPE,IMG_TRANS_ID,CNSGN_CODE,CONTENT,SHPR_NAME,CNSGN_NAME)
		VALUES
		(#awbNo#,#awbDate#,#carrCode#,#orig#,#dest#,#pcs#,#wt#,#shprCode#,#crUserId#,sysdate,#lmUserId#,sysdate,#awbType#,#transactionId#,#consgnCode#,#cont#,#shprName#,#consgnName#)
	</insert>
	<insert id="sqlInsertAWBTrcFltDtls" parameterClass="cargo.cms.trace.bo.CargoTracingFltBO">
		INSERT INTO TRC_FLT
		(AWB_NO,AWB_DATE,DCRPNCY_TYP,AWB_PRFX,FLT_TYPE,FLT_KEY,FLT_DATE,DCRPNCY_PCS,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE)
		VALUES
		(#awbNo#,#awbDate#,#discType#,#carrCode#,#fltType#,#fltKey#,#fltDate#,#irrPcs#,#crUserId#,sysdate,#lmUserId#,sysdate)
	</insert>
	<insert id="sqlInsertAWBTrcLocDtls" parameterClass="cargo.cms.trace.bo.CargoTracingLocnBO">
		INSERT INTO TRC_LOC
		(AWB_NO,AWB_DATE,DCRPNCY_TYP,AWB_PRFX,COD_LOC,LSP,LOC_PCS,DCRPNCY_PCS,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE)
		VALUES
		(#awbNo#,#awbDate#,#discType#,#carrCode#,#locCode#,#lspNo#,#pcs#,#irrPcs#,#crUserId#,sysdate,#lmUserId#,sysdate)
	</insert>
	<update id="sqlupdateAWBTrcDtls" parameterClass="cargo.cms.trace.bo.CargoTracingBO">
		UPDATE TRC_AWB SET
		SHIPPER_CODE=#shprCode#,ORIG=#orig#,DEST=#dest#,CARRIER=#carrCode#,PCS=#pcs#,WGT=#wt#,
		LM_USER_ID=#lmUserId#,LM_DATE=sysdate,CNSGN_CODE=#consgnCode#,CONTENT=#cont#,CNSGN_NAME=#consgnName#,SHPR_NAME=#shprName# 
		WHERE AWB_NO=#awbNo# AND AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
	</update>
	<select id="sqlCountTrcFltExists" parameterClass="cargo.cms.trace.bo.CargoTracingFltBO"
		resultClass="java.lang.Integer">
		SELECT COUNT(1) from TRC_FLT WHERE AWB_NO=#awbNo# AND
		AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') AND FLT_KEY =#fltKey# AND
		FLT_DATE= TO_DATE(#fltDate#,'DDMONYY') AND DCRPNCY_TYP=#discType#
	</select>
	<select id="sqlCountTrcLocExists" parameterClass="cargo.cms.trace.bo.CargoTracingLocnBO"
		resultClass="java.lang.Integer">
		SELECT COUNT(1) from TRC_LOC WHERE AWB_NO=#awbNo# AND
		AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') AND COD_LOC =#locCode# AND
		DCRPNCY_TYP=#discType#
	</select>
	
	<delete id="sqlDeleteTrcFltDtls" parameterClass="cargo.cms.trace.bo.CargoTracingBO">
		delete from TRC_FLT where AWB_NO not in (SELECT AWB_NO from TRC_FLT
		where NVL(DCRPNCY_STS,'*') not in ('Close','Void')) and lm_date&lt;sysdate - #configPurgingDays#
	</delete>
	<delete id="sqlDeleteTrcLocDtls" parameterClass="cargo.cms.trace.bo.CargoTracingBO">
		delete from TRC_LOC where AWB_NO not in (SELECT AWB_NO from TRC_FLT
		where NVL(DCRPNCY_STS,'*') not in ('Close','Void')) and lm_date&lt;sysdate - #configPurgingDays#
	</delete>
	<delete id="sqlDeleteTrcAWBDtls" parameterClass="cargo.cms.trace.bo.CargoTracingBO">
		delete from TRC_AWB where AWB_NO not in (SELECT AWB_NO from TRC_FLT
		where NVL(DCRPNCY_STS,'*') not in ('Close','Void')) and lm_date&lt;sysdate - #configPurgingDays#
	</delete>
	
	<!-- Create Cargo Tracing End -->
	<!-- Maintain Cargo Tracing Start -->
	<select id="sqlSearchCargoTracing" parameterClass="cargo.cms.trace.bo.CargoTracingBO"
		resultClass="cargo.cms.trace.bo.CargoTracingFltBO">
		select awbNoDisp,awbNo,awbDate,discType, fltKey,
		fltDate,fltType,irrPcs,crDate, orig, dest,
		cont, pcs, wt,carrCode,awbType from
		(select SUBSTR(a.AWB_NO,1,3)||'-'||SUBSTR(a.AWB_NO,4) awbNoDisp,a.AWB_NO
		awbNo,
		TO_CHAR(a.AWB_DATE,'DDMONYY') awbDate,a.DCRPNCY_TYP discType,
		TO_CHAR(a.flt_key) fltKey,
		TO_CHAR(a.flt_date,'DDMONYY') fltDate,TO_CHAR(a.flt_type) fltType,
		a.DCRPNCY_PCS
		irrPcs,TO_CHAR(b.CR_DATE,'DDMONYY') crDate, b.orig orig, b.dest dest,
		b.content cont, b.pcs pcs, b.wgt wt,b.carrier carrCode,b.awb_Type
		awbType
		from trc_flt a
		left join flt_opr fo on fo.flt_key = a.flt_key and fo.sch_date=a.flt_date, 
		trc_awb b 
		where a.awb_date= b.awb_date and a.awb_no=
		b.awb_no
		<isNotEmpty prepend="AND" property="loginCarrier">
                    (b.CARRIER = #loginCarrier#
                     OR b.CARRIER IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE= #loginCarrier#))
        </isNotEmpty>
		<isNotEmpty prepend="AND" property="awbNo">
			a.awb_no = #awbNo#
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="carrCode">
			b.CARRIER = #carrCode#
		</isNotEmpty>
		<isNotEmpty property="crDateFrom">
			<isNotEmpty property="crDateTo">
				AND to_char(b.CR_DATE,'DDMONYY')
				between to_date(#crDateFrom#,'DDMONYY') and to_date(#crDateTo#,'DDMONYY')
			</isNotEmpty>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="status">
				<isEqual property="status" compareValue="Initiated">
				    (a.DCRPNCY_STS = #status# or a.DCRPNCY_STS is null)
				</isEqual>
				<isNotEqual property="status" compareValue="Initiated">
					 a.DCRPNCY_STS = #status#
				</isNotEqual>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="discType">
			a.DCRPNCY_TYP =
			#discType#
		</isNotEmpty>
		<isNotEmpty property="fltKey">
			<isNotEmpty property="fltDate">
				and a.flt_key = #fltKey# and a.flt_date = #fltDate#
			</isNotEmpty>
		</isNotEmpty>
		<isEmpty property="fltKey">
			<isNotEmpty  property="fltDate">
				and NVL(FO.ACT_DATE,NVL(FO.EST_DATE,FO.SCH_DATE)) = #fltDate#
			</isNotEmpty>
		</isEmpty>
		<isEmpty property="fltKey">
			<isEmpty  property="fltDate">
		UNION
		select SUBSTR(a.AWB_NO,1,3)||'-'||SUBSTR(a.AWB_NO,4)
		awbNoDisp,a.AWB_NO awbNo,TO_CHAR(a.AWB_DATE,'DDMONYY')
		awbDate,a.DCRPNCY_TYP discType,'' fltKey,'' fltDate,''
		fltType,a.DCRPNCY_PCS irrPcs,TO_CHAR(b.CR_DATE,'DDMONYY') crDate,
		b.orig orig, b.dest dest,
		b.content cont, b.pcs pcs, b.wgt wt,b.carrier carrCode,b.awb_Type awbType from
		trc_loc a, trc_awb b where a.awb_date= b.awb_date and a.awb_no=
		b.awb_no
		<isNotEmpty prepend="AND" property="loginCarrier">
                    (b.CARRIER = #loginCarrier#
                     OR b.CARRIER IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE= #loginCarrier#))
        </isNotEmpty>
		<isNotEmpty prepend="AND" property="awbNo">
			a.awb_no = #awbNo#
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="carrCode">
			b.CARRIER = #carrCode#
		</isNotEmpty>
		<isNotEmpty property="crDateFrom">
			<isNotEmpty property="crDateTo">
				AND to_char(b.CR_DATE,'DDMONYY')
				between to_date(#crDateFrom#,'DDMONYY') and to_date(#crDateTo#,'DDMONYY')
			</isNotEmpty>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="status">
			<isEqual property="status" compareValue="Initiated">
				     (a.DCRPNCY_STS = #status# or a.DCRPNCY_STS is null)
				</isEqual>
				<isNotEqual property="status" compareValue="Initiated">
					 a.DCRPNCY_STS = #status#
				</isNotEqual>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="discType">
			a.DCRPNCY_TYP =
			#discType#
		</isNotEmpty>
			</isEmpty>	
		</isEmpty>
		)
		<dynamic prepend="ORDER BY ">
			<isNotEmpty property="sortOrder.sortField">
				$sortOrder.sortField$
		           </isNotEmpty>
		</dynamic>
	</select>
	<select id="sqlSearchCargoTracingCOUNT" parameterClass="cargo.cms.trace.bo.CargoTracingBO"
		resultClass="java.lang.Integer">
		SELECT COUNT (1) as totalRowCount
		(select SUBSTR(a.AWB_NO,1,3)||'-'||SUBSTR(a.AWB_NO,4) awbNoDisp,a.AWB_NO
		awbNo,TO_CHAR(a.AWB_DATE,'DDMONYY') awbDate,a.DCRPNCY_TYP discType,
		TO_CHAR(a.flt_key) fltKey, TO_CHAR(a.flt_date,'DDMONYY')
		fltDate,a.DCRPNCY_PCS irrPcs,TO_CHAR(b.CR_DATE,'DDMONYY') crDate,
		b.orig orig, b.dest dest,
		b.content cont, b.pcs pcs, b.wgt wt,b.carrier carrCode from trc_flt a, trc_awb
		b where a.awb_date= b.awb_date and a.awb_no= b.awb_no
		<isNotEmpty prepend="AND" property="loginCarrier">
                    (b.CARRIER = #loginCarrier#
                     OR b.CARRIER IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE= #loginCarrier#))
        </isNotEmpty>
		<isNotEmpty prepend="AND" property="awbNo">
			a.awb_no = #awbNo#
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="carrCode">
			b.CARRIER = #carrCode#
		</isNotEmpty>
		<isNotEmpty property="crDateFrom">
			<isNotEmpty property="crDateTo">
				AND b.CR_DATE between to_date(#crDateFrom#,'DDMONYY') and to_date(#crDateTo#,'DDMONYY')
			</isNotEmpty>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="status">
			<isEqual property="status" compareValue="Initiated">
				     (a.DCRPNCY_STS = #status# or a.DCRPNCY_STS is null)
				</isEqual>
				<isNotEqual property="status" compareValue="Initiated">
					 a.DCRPNCY_STS = #status#
				</isNotEqual>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="discType">
			a.DCRPNCY_TYP =
			#discType#
		</isNotEmpty>
		UNION
		select SUBSTR(a.AWB_NO,1,3)||'-'||SUBSTR(a.AWB_NO,4)
		awbNoDisp,a.AWB_NO awbNo,TO_CHAR(a.AWB_DATE,'DDMONYY')
		awbDate,a.DCRPNCY_TYP discType,'' fltKey,'' fltDate,a.DCRPNCY_PCS
		irrPcs,TO_CHAR(b.CR_DATE,'DDMONYY') crDate, b.orig orig, b.dest dest,
		b.content cont, b.pcs pcs, b.wgt wt,b.carrier carrCode from trc_loc a,
		trc_awb b where a.awb_date= b.awb_date and a.awb_no= b.awb_no
		<isNotEmpty prepend="AND" property="loginCarrier">
                    (b.CARRIER = #loginCarrier#
                     OR b.CARRIER IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE= #loginCarrier#))
        </isNotEmpty>
		<isNotEmpty prepend="AND" property="awbNo">
			a.awb_no = #awbNo#
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="carrCode">
			b.CARRIER = #carrCode#
		</isNotEmpty>
		<isNotEmpty property="crDateFrom">
			<isNotEmpty property="crDateTo">
				AND b.CR_DATE between to_date(#crDateFrom#,'DDMONYY') and to_date(#crDateTo#,'DDMONYY')
			</isNotEmpty>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="status">
			<isEqual property="status" compareValue="Initiated">
				     (a.DCRPNCY_STS = #status# or a.DCRPNCY_STS is null)
				</isEqual>
				<isNotEqual property="status" compareValue="Initiated">
					 a.DCRPNCY_STS = #status#
				</isNotEqual>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="discType">
			a.DCRPNCY_TYP =
			#discType#
		</isNotEmpty>
		)
	</select>

	<select id="sqlFetchCargoTracingDtls" parameterClass="cargo.cms.trace.bo.CargoTracingBO"
		resultClass="cargo.cms.trace.bo.CargoTracingFltBO">
		select SUBSTR(a.AWB_NO,1,3)||'-'||SUBSTR(a.AWB_NO,4)
		awbNoDisp,a.AWB_NO awbNo,TO_CHAR(a.AWB_DATE,'DDMONYY')
		awbDate,a.DCRPNCY_TYP discType, TO_CHAR(a.flt_key) fltKey,
		TO_CHAR(a.flt_date,'DDMONYY') fltDate,TO_CHAR(a.FLT_TYPE)
		fltType,a.DCRPNCY_PCS irrPcs,TO_CHAR(a.CR_DATE,'DDMONYY') crDate,
		b.orig orig, b.dest dest,
		b.content cont, b.pcs pcs, b.wgt wt,a.FULT_PRTY partyAtFlt,a.REMARKS
		remarks,NVL(a.DCRPNCY_STS,'Initiated') status,NVL(a.reason,'U')
		reason,b.carrier
		carrCode,decode(a.DCRPNCY_TYP,'DMGD','Y',decode(a.DCRPNCY_TYP,'UNLO','Y',decode(a.DCRPNCY_TYP,'UNK','Y','N')))
		dtlYN,
		(select MSG from EDI_MSG_LOG_IN where awb_no=#awbNo# and awb_date=#awbDate# and
		msg_type='TLX' and rownum=1) telexMsg ,b.SHPR_NAME shprName ,
		b.CNSGN_NAME consgnName,b.SHIPPER_CODE
		shprCode,b.CNSGN_CODE consgnCode,b.IMG_TRANS_ID transactionId 
		from trc_flt a, trc_awb b where a.awb_date= b.awb_date and a.awb_no=
		b.awb_no and a.awb_no=#awbNo# and a.awb_date=#awbDate#
		UNION
		select
		SUBSTR(a.AWB_NO,1,3)||'-'||SUBSTR(a.AWB_NO,4) awbNoDisp,a.AWB_NO
		awbNo,TO_CHAR(a.AWB_DATE,'DDMONYY') awbDate,a.DCRPNCY_TYP discType,''
		fltKey,'' fltDate,'' fltType,a.DCRPNCY_PCS
		irrPcs,TO_CHAR(a.CR_DATE,'DDMONYY') crDate, b.orig orig, b.dest dest,
		b.content cont, b.pcs pcs, b.wgt wt,a.FULT_PRTY partyAtFlt,a.REMARKS
		remarks,NVL(a.DCRPNCY_STS,'Initiated') status,NVL(a.reason,'U')
		reason,b.carrier
		carrCode,decode(a.DCRPNCY_TYP,'DMGD','Y',decode(a.DCRPNCY_TYP,'UNLO','Y',decode(a.DCRPNCY_TYP,'UNK','Y','N')))
		dtlYN,
		(select MSG from EDI_MSG_LOG_IN where awb_no=#awbNo# and awb_date=#awbDate# and msg_type='TLX' and
		rownum=1) telexMsg ,b.SHPR_NAME shprName ,
		b.CNSGN_NAME consgnName,b.SHIPPER_CODE
		shprCode,b.CNSGN_CODE consgnCode,b.IMG_TRANS_ID transactionId
		from trc_loc a, trc_awb b where
		a.awb_date= b.awb_date and a.awb_no= b.awb_no and a.awb_no=#awbNo# and a.awb_date=#awbDate#
		and
		a.awb_no not in (select awb_no from trc_flt where awb_no=a.AWB_NO and
		awb_date= a.awb_date and DCRPNCY_TYP=a.DCRPNCY_TYP)
	</select>
	<select id="sqlFetchCargoTracingTlxDtls" parameterClass="cargo.cms.trace.bo.CargoTracingBO"
		resultClass="cargo.cms.trace.bo.CargoTracingFltBO">
	SELECT MSG_ID,telexMsg,telexMsgDate,telexMsgType, MSG_DATE from(
	SELECT MSG_ID,
	(STRAGG(STRINGDELIM((SELECT RECIPIENT FROM EDI_MSG_RECIPIENT_IN
	WHERE MSG_ID = EDI_MSG_LOG_IN.MSG_ID  AND MSG_SEQ_NO = EDI_MSG_LOG_IN.MSG_SEQ_NO AND ROWNUM=1),',')) || chr(13)||chr(10)
	|| '.'|| SENDER_ID ||' '|| TO_CHAR(MSG_DATE,'DDHH24MI') ||
	chr(13)||chr(10) ||
	MSG) AS telexMsg,to_char(msg_date,'DDMONYY hh24:mi:ss') telexMsgDate, 'Incoming'
	telexMsgType, MSG_DATE
	FROM EDI_MSG_LOG_IN WHERE (awb_no=#awbNo# or awb_no_2=#awbNo# or awb_no_3=#awbNo# or awb_no_4=#awbNo# or awb_no_5=#awbNo#) and msg_type='TLX'
	GROUP BY MSG_ID, MSG, SENDER_ID, MSG_DATE
	union
	SELECT MSG_ID,
	(STRAGG(STRINGDELIM((SELECT RECIPIENT FROM EDI_MSG_RECIPIENT_OUT
	WHERE MSG_ID = EDI_MSG_LOG_OUT.MSG_ID AND MSG_SEQ_NO = EDI_MSG_LOG_OUT.MSG_SEQ_NO AND ROWNUM=1),',')) || chr(13)||chr(10)
	|| '.'|| SENDER_ID ||' '|| TO_CHAR(MSG_DATE,'DDHH24MI') ||
	chr(13)||chr(10) ||
	MSG) AS telexMsg,to_char(msg_date,'DDMONYY hh24:mi:ss') telexMsgDate, 'Outgoing'
	telexMsgType, MSG_DATE
	FROM EDI_MSG_LOG_OUT WHERE (awb_no=#awbNo# or awb_no_2=#awbNo# or awb_no_3=#awbNo# or awb_no_4=#awbNo# or awb_no_5=#awbNo#) and msg_type='TLX'
	GROUP BY MSG_ID, MSG, SENDER_ID, MSG_DATE)
	order by MSG_DATE desc
	</select>
	<update id="sqlUpdateAWBTrcFltDtls" parameterClass="cargo.cms.trace.bo.CargoTracingFltBO">
		UPDATE TRC_FLT SET
		DCRPNCY_PCS=#irrPcs#,remarks=#remarks#,reason=#reason#,DCRPNCY_STS=#status#,FULT_PRTY=#partyAtFlt#,
		LM_USER_ID=#lmUserId#,LM_DATE=sysdate,TR_TYPE='TRCFLTSTS' WHERE AWB_NO=#awbNo# AND
		AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') AND DCRPNCY_TYP=#discType# AND
		FLT_KEY =#fltKey# AND FLT_DATE= TO_DATE(#fltDate#,'DDMONYY')
	</update>
	<select id="sqlFetchCargoTracingLocDtls" parameterClass="cargo.cms.trace.bo.CargoTracingBO"
		resultClass="cargo.cms.trace.bo.CargoTracingLocnBO">
		select SUBSTR(a.AWB_NO,1,3)||'-'||SUBSTR(a.AWB_NO,4)
		awbNoDisp,a.AWB_NO awbNo,TO_CHAR(a.AWB_DATE,'DDMONYY')
		awbDate,a.DCRPNCY_TYP discType,a.DCRPNCY_PCS
		irrPcs,TO_CHAR(a.CR_DATE,'DDMONYY') crDate,
		b.orig orig, b.dest dest, b.content cont, b.pcs pcs, b.wgt wt,a.COD_LOC
		locCode,a.LOC_PCS pcs,NVL(a.LSP,'') lspNo,b.carrier carrCode,
		b.SHPR_NAME shprName ,
		b.CNSGN_NAME consgnName,b.SHIPPER_CODE
		shprCode,b.CNSGN_CODE consgnCode,TO_CHAR(a.CR_DATE,'DDMONYY') crDate from
		trc_loc a, trc_awb b where a.awb_date= b.awb_date and a.awb_no=
		b.awb_no and a.awb_no=#awbNo#
		and a.dcrpncy_typ=#discType#
	</select>
	<update id="sqlUpdateAWBTrcLocDtls" parameterClass="cargo.cms.trace.bo.CargoTracingLocnBO">
		UPDATE TRC_LOC SET
		remarks=#remarks#,reason=#reason#,DCRPNCY_STS=#status#,FULT_PRTY=#partyAtFlt#,
		LM_USER_ID=#lmUserId#,LM_DATE=sysdate,TR_TYPE='TRCLOCSTS' WHERE AWB_NO=#awbNo# AND
		AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') AND DCRPNCY_TYP=#discType#
	</update>
	<update id="sqlUpdateAWBTrcLocPcsDtls" parameterClass="cargo.cms.trace.bo.CargoTracingLocnBO">
		UPDATE TRC_LOC SET DCRPNCY_PCS=#irrPcs#,LSP=#lspNo#,LOC_PCS=#pcs#,
		LM_USER_ID=#lmUserId#,LM_DATE=sysdate WHERE AWB_NO=#awbNo# AND
		AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') AND DCRPNCY_TYP=#discType# AND
		COD_LOC=#locCode#
	</update>
	<update id="sqlDeleteAWBTrcLocPcsDtls" parameterClass="cargo.cms.trace.bo.CargoTracingLocnBO">
		DELETE FROM TRC_LOC WHERE AWB_NO=#awbNo# AND AWB_DATE =
		TO_DATE(#awbDate#,'DDMONYY') AND DCRPNCY_TYP=#discType# AND
		COD_LOC=#locCode#
	</update>
	<select id="shprNameValidate" parameterClass="java.lang.String"
	resultClass="java.lang.String">
	SELECT count(1)
	FROM CUST_COMPANY
	WHERE ACTIVE = 'Y'
	AND SHPR_YN = 'Y'
	AND CODE_DESC = #PARAM#
	</select>
	<select id="cnsgnNameValidate" parameterClass="java.lang.String"
		resultClass="java.lang.String">
		SELECT count(1)
		FROM CUST_COMPANY
		WHERE ACTIVE = 'Y'
		AND CONS_YN = 'Y'
		AND CODE_DESC = #PARAM#
	</select>
	<!-- Maintain Cargo Tracing End -->
	<!--
		Added by swapneswari for Maintain ADM Record for Agent Request:Start
	-->
	<select id="maintainADMRecordList" parameterClass="cargo.cms.trace.bo.MainADMSearchBO"
		resultClass="cargo.cms.trace.bo.MainADMSearchBO">
		select
            substr(a.AWB_NO,0,3) as awbNoPFX,
            substr(a.AWB_NO,4) as awbNoSFX,
            a.AWB_NO awbNo,
            a.ORIG org,
            a.DEST dest,
            a.PCS pc,
            a.WGT wt,
            a.TR_NO trNo,
            (select content from awb b where b.awb_no=a.AWB_NO and b.awb_date=a.AWB_DATE) content,
            (SELECT CODE_DESC FROM CUST_COMPANY WHERE CODE= a.AGENT_CODE AND AGENT_YN =
            'Y' AND ACTIVE = 'Y' AND BLACKLISTED='N') agent,
                 a.shc1 
                || DECODE(a.shc2,NULL,'',','||a.shc2)
                || DECODE(a.shc3,NULL,'',','||a.shc3)
                || DECODE(a.shc4,NULL,'',','||a.shc4)
                || DECODE(a.shc5,NULL,'',','||a.shc5)
                || DECODE(a.shc6,NULL,'',','||a.shc6)
                || DECODE(a.shc7,NULL,'',','||a.shc7)
                || DECODE(a.shc8,NULL,'',','||a.shc8)
                || DECODE(a.shc9,NULL,'',','||a.shc9)
               shc,
            a.REQ_TYPE request,
            UPPER(a.REQ_STS) status,
            TO_CHAR(a.AWB_DATE,'DDMONYY') awbDate
            from TRC_ADM_REQ a where a.AWB_NO is not null
		<isNotEmpty property="awbNo">
			and a.AWB_NO=#awbNo#
</isNotEmpty>
		<isNotEmpty property="agent">
			and (a.AGENT_CODE=(SELECT CODE FROM CUST_COMPANY WHERE CODE_DESC =
				#agent# AND AGENT_YN = 'Y' AND ACTIVE = 'Y' AND BLACKLISTED='N')
				 or a.agent_name = #agent#)				
</isNotEmpty>
		<isNotEmpty property="request">
			and a.REQ_TYPE=#request#
</isNotEmpty>
		<isEqual compareValue="CLOSE" property="status">
			and a.REQ_STS = 'close'
</isEqual>
		<isEqual compareValue="OPEN" property="status">
			and (a.REQ_STS is null or a.REQ_STS ='open')
</isEqual>
		<isNotEmpty property="fromDate">
			and TO_CHAR(a.CR_DATE,'DDMONYY') between TO_DATE(#fromDate#,'DDMONYY')
			and TO_DATE(#toDate#,'DDMONYY')
</isNotEmpty>
<isNotEmpty property="loginCarrier">
	AND (SUBSTR(a.AWB_NO,1,3) IN (SELECT CODE FROM MAST_AWB_PREFIX WHERE CARR_CODE = #loginCarrier#) 
                  		 OR SUBSTR(a.AWB_NO,1,3) IN (SELECT CODE FROM MAST_AWB_PREFIX WHERE	CARR_CODE IN(SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE = #loginCarrier#)))
</isNotEmpty> 
	</select>
	<select id="fetchMaindetails1" parameterClass="java.lang.String"
		resultClass="cargo.cms.trace.bo.MainADMSearchBO">
		select AWB_NO awbNo,ORIG org,DEST dest,PCS pc,WT wt,CONTENT
		content,AGENT_NAME agent,TO_CHAR(AWB_DATE,'DDMONYY') awbDate,
		spl_code1 shc1,spl_code2 shc2,spl_code3 shc3,spl_code4 shc4,spl_code5 shc5,
		spl_code6 shc6,spl_code7 shc7,spl_code8 shc8,spl_code9 shc9 from awb
		where awb_no=#awbNo# and awb_date = (select max(awb_date) from awb where awb_no = #awbNo#)
</select>
	<select id="fetchMaindetails" parameterClass="java.lang.String"
		resultClass="cargo.cms.trace.bo.MainADMSearchBO">
		select shc1 as shc1,shc2 as shc2,shc3 as shc3,shc4 as shc4,shc5 as shc5,shc6 as shc6,
		shc7 as shc7,shc8 as shc8,shc9 as shc9,AWB_NO awbNo,ORIG org,DEST dest,PCS pc,
		CONTENT content,TO_CHAR(AWB_DATE,'DDMONYY') awbDate,TR_NO trNo,WGT wt,AGENT_NAME agent from trc_adm_req where
		awb_no=#awbNo# and rownum=1
</select>
	<select id="fetchMaintainADMRecord" parameterClass="java.lang.String"
		resultClass="cargo.cms.trace.bo.MainADMSearchBO">
		select REQ_TYPE request,UPPER(REQ_STS) status,REMARKS
		rmk,TO_CHAR(AWB_DATE,'DDMONYY') awbDate,TR_NO trNo,awb_no awbNo from
		trc_adm_req where awb_no=#awbNo# 
</select>
	<insert id="insertRequestDetail" parameterClass="cargo.cms.trace.bo.MainADMSearchBO">
		INSERT INTO
		TRC_ADM_REQ(AWB_NO,AWB_DATE,ORIG,DEST,PCS,WGT,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,AGENT_CODE,AGENT_NAME,REQ_TYPE,REQ_STS,REMARKS,TR_NO,CONTENT,
		shc1,shc2,shc3,shc4,shc5,shc6,shc7,shc8,shc9)
		VALUES
		(#awbNo#,nvl(TO_DATE(#awbDate#,'DDMONYY'),sysdate),#org#,#dest#,#pc#,#wt#,#crUserId#,sysdate,#lmUserId#,sysdate,(SELECT
		CODE FROM CUST_COMPANY WHERE CODE_DESC = #agent# AND AGENT_YN = 'Y'
		AND ACTIVE = 'Y' AND
		BLACKLISTED='N'),#agent#,#request#,#status#,#rmk#,TRC_ADM_REQ_SEQ.nextval,#content#,
		#shc1#,#shc2#,#shc3#,#shc4#,#shc5#,#shc6#,#shc7#,#shc8#,#shc9#)
</insert>
	<update id="updateRequestDetailMain" parameterClass="cargo.cms.trace.bo.MainADMSearchBO">
		UPDATE TRC_ADM_REQ SET shc1=#shc1#,shc2=#shc2#,shc3=#shc3#,shc4=#shc4#,shc5=#shc5#,shc6=#shc6#,
      	shc7=#shc7#,shc8=#shc8#,shc9=#shc9#,
		ORIG=#org#,DEST=#dest#,PCS=#pc#,WGT=#wt#,AGENT_CODE=(SELECT CODE FROM
		CUST_COMPANY WHERE CODE_DESC = #agent# AND AGENT_YN = 'Y' AND ACTIVE =
		'Y' AND BLACKLISTED='N'),AGENT_NAME=#agent#,
		LM_USER_ID=#lmUserId#,LM_DATE=sysdate WHERE
		AWB_NO=#awbNo# and AWB_DATE=TO_DATE(#awbDate#,'DDMONYY') 
</update>
	<update id="updateRequestDetail" parameterClass="cargo.cms.trace.bo.MainADMSearchBO">
		UPDATE TRC_ADM_REQ SET REQ_TYPE=#request#,REMARKS=#rmk#,
		LM_USER_ID=#lmUserId#,LM_DATE=sysdate WHERE AWB_NO=#awbNo# and
		AWB_DATE=TO_DATE(#awbDate#,'DDMONYY') and TR_NO=#trNo#
</update>
	<delete id="deleateRequestDetail" parameterClass="cargo.cms.trace.bo.MainADMSearchBO">
		Delete from TRC_ADM_REQ where AWB_NO=#awbNo# and
		AWB_DATE=TO_DATE(#awbDate#,'DDMONYY') and TR_NO=#trNo#
</delete>
	<select id="validateawbNo" parameterClass="java.lang.String"
		resultClass="java.lang.Integer">
		SELECT COUNT(AWB_NO) FROM AWB WHERE
		UPPER(AWB_NO)=UPPER(#awbNo#)
	</select>
	<select id="validateawbNo1" parameterClass="java.lang.String"
		resultClass="java.lang.Integer">
		SELECT COUNT(AWB_NO) FROM TRC_ADM_REQ
		WHERE UPPER(AWB_NO)=UPPER(#awbNo#)
</select>
	<select id="chkawbNo" parameterClass="cargo.cms.trace.bo.MainADMSearchBO"
		resultClass="java.lang.Integer">
		select count(1) from trc_adm_req where awb_no=#awbNo# and awb_date=#awbDate#
		and TR_NO=#trNo#
</select>
	<update id="updateStatus" parameterClass="cargo.cms.trace.bo.MainADMSearchBO">
		UPDATE TRC_ADM_REQ SET REQ_STS='close' WHERE AWB_NO=#awbNo# and
		AWB_DATE=TO_DATE(#awbDate#,'DDMONYY') and TR_NO=#trNo# 
</update>

	<select id="validateCarr703" parameterClass="java.lang.String"
		resultClass="java.lang.Integer">
		SELECT COUNT(CODE) FROM MAST_CARRIER WHERE UPPER(CODE)=UPPER(#carr#)
</select>
	<select id="validateport" parameterClass="java.lang.String"
		resultClass="java.lang.Integer">
		SELECT COUNT(CODE) FROM MAST_ARPT WHERE UPPER(CODE)=UPPER(#port#)
</select>
	<select id="validateagentreq" parameterClass="java.lang.String"
		resultClass="java.lang.Integer">
		SELECT count(CODE) FROM CUST_COMPANY
		WHERE UPPER(CODE_DESC)
		= UPPER(#agent#) and AGENT_YN='Y' AND
		ACTIVE = 'Y' AND BLACKLISTED='N'
</select>
	<select id="validateOriginreq" parameterClass="java.lang.String"
		resultClass="java.lang.Integer">
		SELECT COUNT(CODE) FROM MAST_ARPT WHERE UPPER(CODE)=UPPER(#org#)
</select>
	<select id="validateDestinationreq" parameterClass="java.lang.String"
		resultClass="java.lang.Integer">
		SELECT COUNT(CODE) FROM MAST_ARPT WHERE UPPER(CODE)=UPPER(#dest#)
</select>

	<select id="validateSHC" parameterClass="java.lang.String"	resultClass="java.lang.String">
		SELECT code from MAST_SPL_HAND_CODE where CODE= #shc#
	</select>
	
	<delete id="deletemaintainADMRecord" parameterClass="java.lang.String">
		delete from trc_adm_req where cr_date &lt; sysdate-14		
	</delete>
	
	<!--
		Added by swapneswari for Maintain ADM Record for Agent Request:End
	-->
	<!-- Added By swapna for Update Hawb Cargo Discrepancy:Start -->
<select id="fetchUpdatehawbRecord" parameterClass="cargo.cms.hawb.bo.UpdateHawbDiscBO" resultClass="cargo.cms.hawb.bo.UpdateHawbDiscBO">
select 
a.HAWB_NO hawbNo,
a.AGENT_CODE agentCode,
(SELECT CODE_DESC FROM CUST_COMPANY WHERE CODE= a.AGENT_CODE AND AGENT_YN =
		'Y' AND ACTIVE = 'Y' AND BLACKLISTED='N') agentName,
a.AWB_NO awbNo,
substr(a.AWB_NO,0,3) as awbNoPfx,
substr(a.AWB_NO,4) as awbNoSfx,
TO_CHAR(a.AWB_DATE,'DDMONYY') awbDate,
a.HAWB_PCS hawbPc,
a.HAWB_WT hawbWt,
a.RECD_PCS,
a.RECD_WT,
a.DISC_PCS discPc,
a.DISC_PCS_TYPE discPcType,
a.DISC_WT discWt,
a.DISC_WT_TYPE discWtType,
a.RECD_PCS invPc,
a.REMARKS remark,
a.RECD_WT invWt
from ASV_HAWB a
where a.HAWB_NO=#hawbNo#
<isNotEmpty property="awbNo">
and a.AWB_NO=#awbNo#
</isNotEmpty>
<isNotEmpty property="agentCode">
and a.AGENT_CODE=#agentCode#
</isNotEmpty>
<isNotEmpty property="agentName">
and a.AGENT_CODE=(SELECT CODE FROM CUST_COMPANY WHERE CODE_DESC= #agentName# AND AGENT_YN =
		'Y' AND ACTIVE = 'Y' AND BLACKLISTED='N')
</isNotEmpty>
</select>
<update id="updateHawbDiscrepancy" parameterClass="cargo.cms.hawb.bo.UpdateHawbDiscBO">
update ASV_HAWB set DISC_WT=#discWt#, DISC_WT_TYPE=#discWtType#, DISC_PCS=#discPc#, DISC_PCS_TYPE=#discPcType#, REMARKS=#remark#,TR_TYPE=#trtype#,DISC_PROC_USER=#lmUserId#,DISC_PROC_DATE=sysdate,LM_USER_ID=#lmUserId#,LM_DATE=sysdate
where HAWB_NO=#hawbNo# and AGENT_CODE=(SELECT CODE FROM CUST_COMPANY WHERE CODE_DESC= #agentName# AND AGENT_YN =
		'Y' AND ACTIVE = 'Y' AND BLACKLISTED='N') 
</update>
<select id="validateCountHawb" parameterClass="java.lang.String" resultClass="java.lang.Integer">
  select count(1) from ASV_HAWB where hawb_no=#hawbNo#
  </select>
  <select id="validateahawbAgentName" parameterClass="java.lang.String"
		resultClass="java.lang.Integer">
		SELECT count(CODE) FROM CUST_COMPANY
		WHERE UPPER(CODE_DESC)
		= UPPER(#agentName#) and AGENT_YN='Y' AND
		ACTIVE = 'Y' AND BLACKLISTED='N'
</select>
<select id="validateaAgentCode" parameterClass="java.lang.String"
		resultClass="java.lang.Integer">
		SELECT count(CODE) FROM CUST_COMPANY
		WHERE UPPER(CODE)
		= UPPER(#agentCode#) and AGENT_YN='Y' AND
		ACTIVE = 'Y' AND BLACKLISTED='N'
</select>
		<!-- Added By swapna for Update Hawb Cargo Discrepancy:End -->

		
 <!--     Added by Shilpa for Retrieve Cargo STARTS-->		
	<select id="ext_fetch_cargoInfo" parameterClass="cargo.cms.hawb.bo.RetrieveCarBO" resultClass="cargo.cms.hawb.bo.RetrieveCarBO" >
		   SELECT t2.hawb_no hawb, t2.AWB_NO awbNo, t2.AWB_NO awbNo1,
 			decode(substr(t2.AWB_NO,0,3)||'-'||substr(t2.AWB_NO,4),'-','',substr(t2.AWB_NO,0,3)||'-'||substr(t2.AWB_NO,4)) awbDisp,
  			(SELECT CODE_DESC FROM CUST_COMPANY WHERE CODE=t2.AGENT_CODE) agentname,  t2.AGENT_CODE agentCode,
  			t2.HAWB_PCS hawbPc,t2.HAWB_WT hawbWt,t2.RECD_PCS invPc,t2.RECD_WT invWt
  		   FROM ASV_HAWB t2 where 1=1  
	    <isNotEmpty property="hawb">
				and t2.HAWB_NO=#hawb#
		</isNotEmpty>
		<isNotEmpty property="awbNo">
				and t2.AWB_NO=#awbNo#
		</isNotEmpty>
   </select>
   
   <select id="ext_fetch_cargoInfoChild" parameterClass="cargo.cms.hawb.bo.RetrieveCarBO" resultClass="cargo.cms.hawb.bo.RetrieveCarBO" >
	 	   SELECT distinct t2.hawb_no hawb,
			t2.AWB_NO awbNo,t1.LSP_NO lsp,t1.ULD_KEY uld,	
      (SELECT CODE_DESC FROM CUST_COMPANY WHERE CODE=t2.AGENT_CODE) agentname,
      t2.AGENT_CODE agentCode, 
      nvl(LSP_NO,uld_key) lspUld, t1.LOC_CODE locCode,t1.LOCN_PCS locnpc, 
		  t1.LOCN_WT locnWt 
	   	FROM ASV_INVENTORY t1 JOIN ASV_HAWB t2 ON t1.hawb_no = t2.hawb_no and t2.agent_code=t1.agent_code where 1=1	 
	<isNotEmpty property="hawb">
		and t2.HAWB_NO=#hawb#
	</isNotEmpty>
	<isNotEmpty property="awbNo">
		and t2.AWB_NO=#awbNo#
	</isNotEmpty>
   </select>	
   <select id="sqlValidateLspLocked1" parameterClass="java.lang.String" resultClass="java.lang.String">
			select LOCKED from lsp_inventory
			where lsp_no=#lsp#
		</select>
		<select id="sqlValidateULDLocked1" parameterClass="java.lang.String" resultClass="java.lang.String">
			select LOCKED from uld_inventory
			where uld_key=#uld#
		</select>
		
		<select id="sqlHAWBValidationForRetrieveCargo" parameterClass="cargo.cms.hawb.bo.RetrieveCarBO" resultClass="java.lang.String">
			select hawb_no as hawb from asv_hawb  
			where hawb_no=#hawb# and rownum=1 
			<isNotEmpty property="awbNo">
				and AWB_NO=#awbNo# 
			</isNotEmpty> 
     
		</select>
 <!--     Added by Shilpa for Retrieve Cargo ENDS-->	
 

		
	
	<!-- Added By Bala for Amend HAWB Storage:Start -->
	<select id="checkHAWbinAgtInventory" parameterClass="cargo.cms.hawb.bo.RestoreHAWBBO" resultClass="java.lang.Integer">
	  SELECT COUNT(1) FROM ASV_HAWB WHERE HAWB_NO=#hawbNo#
	  <isNotEmpty property="agentCode">
			and AGENT_CODE=#agentCode# 
		</isNotEmpty>
		<isNotEmpty property="agentName">
			and AGENT_CODE=(SELECT CODE FROM CUST_COMPANY WHERE CODE_DESC= #agentName# AND AGENT_YN ='Y' AND ACTIVE = 'Y' AND BLACKLISTED='N')
		</isNotEmpty>
	</select>
	<select id="fetchAmendHAWBStrgHdrInfo" parameterClass="cargo.cms.hawb.bo.RestoreHAWBBO" resultClass="cargo.cms.hawb.bo.RestoreHAWBBO">
	  SELECT HAWB_NO hawbNo,AWB_NO awbNo,FLOW flowType,HAWB_PCS hawbPcs,HAWB_WT hawbWt,SUBSTR(AWB_NO,1,3)||'-'||SUBSTR(AWB_NO,4) as awbNoDisp,
	  #agentCode# agentCode, #agentName# agentName,#awbPfx# awbPfx,#awbSfx# awbSfx FROM ASV_HAWB WHERE HAWB_NO=#hawbNo# 
	  	<isNotEmpty property="awbNo">
			and AWB_NO=#awbNo#
		</isNotEmpty>
		<isNotEmpty property="agentCode">
			and AGENT_CODE=#agentCode#
		</isNotEmpty>
		<isNotEmpty property="agentName">
			and AGENT_CODE=(SELECT CODE FROM CUST_COMPANY WHERE CODE_DESC= #agentName# AND AGENT_YN ='Y' AND ACTIVE = 'Y' AND BLACKLISTED='N')
		</isNotEmpty>
		<isNotEmpty property="lspUld">
			and AWB_NO= (SELECT DISTINCT AWB_NO FROM ASV_INVENTORY WHERE (LSP_NO = #lspUld# OR ULD_KEY = #lspUld#) and HAWB_NO = #hawbNo#)
		</isNotEmpty>
	</select>
	<select id="fetchAmendHAWBStrgDtlsInfo" parameterClass="cargo.cms.hawb.bo.RestoreHAWBBO" resultClass="cargo.cms.hawb.bo.RestoreHAWBBO">
	  	SELECT ai.SEQ_NO seqNo,ai.HAWB_NO hawbNo,ai.AGENT_CODE agentCode,ai.AWB_NO awbNo,SUBSTR(ai.AWB_NO,1,3)||'-'||SUBSTR(ai.AWB_NO,4) as awbNoDisp,to_char(ai.AWB_DATE,'DDMONYY') awbDate,ai.LSP_NO lspNo,ai.LSP_NO oldLspNo,
		ai.ULD_KEY uldKey,ai.ULD_KEY oldUldKey,ai.LOC_CODE locCode,ai.LOCN_PCS locnPcs,ai.LOCN_WT locnWt,ai.DAM_PCS damPcs,ai.DAM_WT damWt,
		(select cc.CODE_DESC from cust_company cc where cc.code=ai.agent_Code) agentName,po_no poNo
		FROM ASV_INVENTORY ai
		WHERE ai.HAWB_NO=#hawbNo# AND NVL(DLV_IND,'N') = 'N'
		<isNotEmpty property="awbNo">
			and ai.AWB_NO=#awbNo#
		</isNotEmpty>
		<isNotEmpty property="agentCode">
			and ai.AGENT_CODE=#agentCode#
		</isNotEmpty>
		<isNotEmpty property="lspUld">
			and (ai.ULD_KEY=#lspUld# or ai.LSP_NO=#lspUld#)
		</isNotEmpty>
		<isNotEmpty property="agentName">
			and ai.AGENT_CODE=(SELECT CODE FROM CUST_COMPANY ccc WHERE ccc.CODE_DESC= #agentName# AND ccc.AGENT_YN ='Y' AND ccc.ACTIVE = 'Y' AND ccc.BLACKLISTED='N')
		</isNotEmpty>
	</select>
	<select id="checkForLSPorULDinCPCTInv"  parameterClass="java.lang.String"  resultClass="java.lang.Integer">
		select count(1) 
		FROM AWB_INVENTORY
		WHERE LSP_NO = #lspULD#		
		OR ULD_KEY = #lspULD#
	</select>
	<select id="sqlgetULDShpmentsHAWB"  parameterClass="java.lang.String" 
		 resultClass="java.lang.Integer">
		select count(1) from asv_inventory where uld_key = #uldKey# 
	</select>
	 <update id="sqlUpdateEmptyUld" parameterClass="map">
		 UPDATE ULD_INVENTORY
		   SET EMPTY_FLG       = 'Y',
			LM_DATE   		   = SYSDATE,
			LM_USER_ID		   = #lmUserId#
		 WHERE uld_key = #uldKey# 
	 </update>
	 <update id="sqlUpdateHAWBStrgDtls" parameterClass="cargo.cms.hawb.bo.RestoreHAWBBO">
		 update asv_inventory set 
		 		lsp_no= #lspNo#, 
		 		uld_key=#uldKey#,
		 		loc_code=#locCode#, 
		 		lm_date=sysdate, 
		 		lm_user_id=#userID# 
		 where seq_no=#seqNo#
	</update>
	<update id="sqlUpdateHHTHAWBStrgDtls" parameterClass="cargo.cms.hawb.bo.RestoreHAWBBO">
		 update asv_inventory set lsp_no=NVL(#lspNo#,lsp_no), uld_key=NVL(#uldKey#,uld_key), 
		 loc_code=#locCode#, lm_date=sysdate, lm_user_id=#userID#, 
		 LOCN_PCS=#locnPcs#, LOCN_WT=nvl(#locnWt#,LOCN_WT), DAM_IND=decode(#damPcs#,null,DAM_IND,'Y'),
		 DAM_PCS=#damPcs#, DAM_WT=#damWt# where seq_no=#seqNo#
	</update>
	 <insert id="sqlInsertLspInventoryHAWB" parameterClass="cargo.cms.hawb.bo.RestoreHAWBBO">
	 	 insert into LSP_INVENTORY
	 	 ( LSP_NO ,EMPTY_FLG,REF_TR_TYPE,LOC_CODE,REF_TR_NO,REF_TR_EVENT,REF_TR_DATE,REF_DOC_LINE_NO,REF_MOV_FROM,REF_LOC_FROM,REF_RMK,TARGET,STRG_DATE,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,LSP_TYPE)
	 	 values(#lspNo#,'N','HA',#locCode#,#lspNo#,'',SYSDATE,'1',#locCode#,#locCode#,'INSERTING FROM HAWB','',SYSDATE,#userID#,SYSDATE,#userID#,SYSDATE,substr(#lspNo#,0,1))
	 </insert>
	 <update id="sqlUpdateEmptyLspHAWB" parameterClass="java.util.HashMap">
	 UPDATE LSP_INVENTORY
	   SET EMPTY_FLG       = 'Y',
		LM_DATE   		   = SYSDATE,
		LM_USER_ID		   = #lmUserId#
	 WHERE LSP_NO = #lspNo#
	 </update>
	 <select id="chk_shc_exists_Restricted_loc_HAWB" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		SELECT 
			COUNT(1) 
		FROM 
			ASV_HAWB A, SHC_RESTRICT_LOC B 
		WHERE 
			(A.SPL_CODE1=B.SHC OR A.SPL_CODE2=B.SHC OR A.SPL_CODE3=B.SHC ) AND B.LOC_CODE=#locCode# 
			AND A.HAWB_NO=#hawbNo#
	</select>
	<select id="sqlgetLSPShpmentsHAWB"  parameterClass="java.lang.String" 
		 resultClass="java.lang.Integer">
		select count(1) from asv_inventory where LSP_NO = #lspNo# 
	</select>
	<delete id="sqlDeleteAsvInventoryDtl" parameterClass="cargo.cms.hawb.bo.RestoreHAWBBO">
		 delete from asv_inventory where seq_no=#seqNo#
	</delete>
	<select id="sqlgetlspUldCountASVInv"  parameterClass="cargo.cms.hawb.bo.RestoreHAWBBO"  resultClass="java.lang.String">
		select SEQ_NO seqNo from asv_inventory where hawb_no=#hawbNo# and agent_code=#agentCode# and  
		loc_code=#locCode# and (lsp_no=#lspNo# or uld_key=#uldKey#)  and NVL(po_no,'*') = NVL(#poNo#,'*') and NVL(DLV_IND,'N') = 'N' 
		<isNotEmpty property="awbNo">
		 and awb_no=#awbNo# and awb_date=#awbDate#
		</isNotEmpty>
	</select>
	<update id="sqlUpdatelspUldASVInv" parameterClass="cargo.cms.hawb.bo.RestoreHAWBBO">
	 UPDATE ASV_INVENTORY
	   SET LOCN_PCS       = LOCN_PCS+#locnPcs#,
		LOCN_WT   		   = LOCN_WT+#locnWt#,
		LM_USER_ID		   = #userID#
	 WHERE SEQ_NO = #seqNo#
	 </update>
	<insert id="insertInventoryDetailsHAWB" parameterClass="cargo.cms.hawb.bo.RestoreHAWBBO">
		INSERT INTO ASV_INVENTORY (	 SEQ_NO,
									 AGENT_CODE,
								     AWB_DATE,
								     AWB_NO,
								     DAM_IND,  								     
								     HAWB_NO,
								     CR_DATE,
								     LM_USER_ID,
								     LM_DATE,
								     LOCN_PCS,
								     LOCN_WT,
								     LOC_CODE,
								     LSP_NO,
								     ULD_KEY,
								     PO_NO,									
										CR_USER_ID)
											
						 VALUES (#seqNo#,
						 			#agentCode#,
						 			to_date(#awbDate#,'DDMONYY'),
						 			#awbNo#,
						 			'N',
						 			#hawbNo#,
						 		    sysdate,
						 		    #userID#,
								    sysdate,		 		
						 			#locnPcs#,
						 		    #locnWt#,
						 			#locCode#,
						 			#lspNo#,
						 			#uldKey#,
						 			#poNo#,
						 			#userID#)
		</insert>
		<update id="sqlUpdateNonEmptyLspHAWB" parameterClass="cargo.cms.hawb.bo.RestoreHAWBBO">
	 UPDATE LSP_INVENTORY
	   SET EMPTY_FLG       = 'N',
		LM_DATE   		   = SYSDATE,
		LM_USER_ID		   = #userID#
	 WHERE LSP_NO = #lspNo#
	 </update>
	 
	<select id="asvInventorySeqNo" parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT NVL(SEQ_NO, 0) + 1 AS SEQ_NO FROM (SELECT MAX(SEQ_NO) AS SEQ_NO FROM ASV_INVENTORY)	 
	</select> 
	
	 <update id="sqlRestorePoInvDtlDelete" parameterClass="cargo.cms.hawb.bo.RestoreHAWBBO">
		update asv_pick_order_locn
		set LOCN_PCS = NVL(LOCN_PCS,0)-NVL(#locnPcs#,0),
			LOCN_WT = NVL(LOCN_WT,0)-NVL(#locnWt#,0)
        where 	PO_NO = #poNo#
          AND   HAWB_NO = #hawbNo#
          AND   AGENT_CODE = #agentCode#
          AND   NVL(LSP_NO,'*') = NVL(#lspNo#,'*')
          AND   NVL(ULD_KEY,'*') = NVL(#uldKey#,'*')
		  AND   NVL(LOC_CODE,'*') = NVL(#locCode#,'*')	
	 </update>
	 
	  <delete id="sqlRestorePoInvDtlDelete1" parameterClass="cargo.cms.hawb.bo.RestoreHAWBBO"> 
		delete from asv_pick_order_locn   where 	PO_NO = #poNo# and NVL(locn_pcs,0) = 0
	 </delete>
	 
	 <update id="sqlRestorePoInvDtlUpdate" parameterClass="cargo.cms.hawb.bo.RestoreHAWBBO">
		update asv_pick_order_locn
		set LOCN_PCS = NVL(LOCN_PCS,0)+NVL(#locnPcs#,0),
			LOCN_WT = NVL(LOCN_WT,0)+NVL(#locnWt#,0)
        where 	PO_NO = #poNo#
          AND   HAWB_NO = #hawbNo#
          AND   AGENT_CODE = #agentCode#
          AND   NVL(LSP_NO,'*') = NVL(#lspNo#,'*')
          AND   NVL(ULD_KEY,'*') = NVL(#uldKey#,'*')
		  AND   NVL(LOC_CODE,'*') = NVL(#locCode#,'*')	
		  </update>
	 
	 <insert id="sqlRestorePoInvDtlInsert" parameterClass="cargo.cms.hawb.bo.RestoreHAWBBO">
		Insert into asv_pick_order_locn (PO_NO,
										 HAWB_NO,
										 AGENT_CODE,
										 DOC_LINE_NO,
										 SEQ_NO,
										 LSP_NO,
										 ULD_KEY,
										 LOC_CODE,
										 LOCN_PCS,
										 LOCN_WT,
										 DLV_PCS,
										 DLV_WT,
										 CR_USER_ID,
										 CR_DATE,
										 LM_USER_ID,
										 LM_DATE) 
							     values (#poNo#,
							     		 #hawbNo#,
									     #agentCode#,
									     NVL((select max(DOC_LINE_NO) from asv_pick_order_locn where po_no = #poNo#),0)+1,
									     #seqNo#,
									     #lspNo#,
										 #uldKey#,
										 #locCode#,
										 #locnPcs#,
										 #locnWt#,
										 null,
										 null,
										 #userID#,
										 sysdate,
										 #userID#,
										 sysdate)
	 </insert>

	 
	 
	 
	
	 
	<!-- Added By Bala for Amend HAWB Storage:End -->	


		
	<!-- Added By Surendra Gollapalli for Create Issue HCL for HAWB : START 16 SEP 11-->	
	<select id="issueHCLAwbLocnLspTareWt" parameterClass="java.lang.String" resultClass="java.lang.String">
		select to_char(nvl(tare_wt, 0)) from mast_csd where code=#lsp_no#
	</select>
		<select id="issueHCLAwbLocnUldTareWt" parameterClass="java.lang.String" resultClass="java.lang.String">
		select to_char(nvl(tare_weight, 0)) from mast_uld_type where code=substr(#uld_key#,1,3)
	</select>
		<select id="issueHCLvalidateUldOwnInv" parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT NVL(COUNT(1),0) FROM ULD_INVENTORY WHERE UPPER(ULD_KEY)=UPPER(#ULDKEY#)
	</select>
		<select id="issueHCLvalidateLspNo" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT NVL(COUNT(1),0) FROM LSP_INVENTORY WHERE UPPER(lsp_no)=UPPER(#lsp#) AND UPPER(loc_code)=UPPER(#locn#)
	</select>
	
		<select id="getValHCLNo" parameterClass="java.lang.String" resultClass="java.lang.String">
		select lpad(HCL_NO_SEQ.nextval,9,'0') from dual
	</select>
	
		<insert id="insertIssueHCLHeaderDetails" parameterClass="cargo.cms.hawb.bo.HAWBAccptBO">
		insert into ASV_HCL_HD(AGENT_CODE, DC_IND, DEST, DLV_BY, DLV_BY_HKID, HAWB_NO, HCL_DATE,
                       HCL_NO, HCL_PCS,HCL_RMK, HCL_WT, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE,SPL_CODE1,SPL_CODE2,SPL_CODE3)
       values(#agentCode#, #dutCommodity#, #dest#,
                                  #dlvBy#,#hkid#,#hawbNo#, sysdate,#seqHCLNo#,
              #totalLocPieces#,#rmk#,#totalLocWeight#,#userID#, sysdate,
                                 #userID#, sysdate,#splCode1#,#splCode2#,#splCode3#)
		</insert>
		<insert id="insertIssueLocationDetails" parameterClass="cargo.cms.hawb.bo.HAWBAccptBO">
		insert into ASV_HCL_DTL(DMG_IND, DOC_LINE_NO, FSCALE_WT, GROSS_WT, HCL_NO, LOC_CODE, LSP_NO,
                       NET_WT, PCS,TARE_WT, ULD_KEY,CR_DATE,CR_USER_ID,LM_DATE,LM_USER_ID)
       values(#damInd#, #docLineNo#, #flrScaledWt#,
                                  #grossWt#,#seqHCLNo#,#locn#, #lspNo#,#netWt#,
              #locPc#,#tareWt#,#btULDNo#, sysdate,#userID#,sysdate,#userID#)
		</insert>
	<insert id="insertIssueDimensionDetails" parameterClass="cargo.cms.hawb.bo.HAWBAccptBO">
			insert into ASV_HCL_DMN(DOC_LINE_NO,
									HEIGHT,
									LENGTH,
									HCL_NO, 
									PCS,
									WIDTH,
									CR_DATE,
									CR_USER_ID,
									LM_DATE,
									LM_USER_ID)
								values(#docLineNo#,
											 #height#,
											 #length#,
											 #seqHCLNo#,
											 #dimPc#, 
											 #width#, 
											 sysdate,
											 #userID#,
											sysdate,
											 #userID#)
		</insert>
		<select id="getHCLAWBDetails" parameterClass="cargo.cms.hawb.bo.HAWBAccptBO" resultClass="cargo.cms.hawb.bo.HAWBAccptBO">
			SELECT EDI_FHL.TR_NO AS TRNO,TO_CHAR(EDI_FHL.AWB_DATE,'DDMONYY') AS AWBDATE, EDI_FHL.AWB_NO AS AWBNO 
			FROM EDI_FHL, EDI_FWB  WHERE EDI_FHL.AWB_NO = EDI_FWB.AWB_NO AND EDI_FHL.AWB_DATE = EDI_FWB.AWB_DATE 
			AND EDI_FWB.AGENT_NAME = #agent# AND EDI_FHL.TR_NO = (SELECT MAX(TR_NO) FROM EDI_FHL_HAWB WHERE HAWB_NO = #hawbNo#)
		</select>
		
		
			<insert id="insertIssueLocInventoryDetails" parameterClass="cargo.cms.hawb.bo.HAWBAccptBO">
		INSERT INTO ASV_INVENTORY (	 SEQ_NO,
									 AGENT_CODE,
								     AWB_DATE,
								     AWB_NO,
								     DAM_IND,  								     
								     HAWB_NO,
								     CR_DATE,
								     LM_USER_ID,
								     LM_DATE,
								     LOCN_PCS,
								     LOCN_WT,
								     LOC_CODE,
								     LSP_NO,
								     ULD_KEY,									
										CR_USER_ID)
											
						 VALUES ((SELECT NVL(SEQ_NO, 0) + 1 AS SEQ_NO FROM (SELECT MAX(SEQ_NO) AS SEQ_NO FROM ASV_INVENTORY)),
						 			#agentCode#,
						 			to_date(#awbDate#,'DDMONYY'),
						 			#awbNo#,
						 			#damInd#,
						 			#hawbNo#,
						 		  sysdate,
						 		#userID#,
								sysdate,		 		
						 			#locPc#,
						 		#netWt#,
						 			#locn#,
						 			#lspNo#,
						 			#btULDNo#,
						 				#userID#)
		</insert>
		
		
			<insert id="insertIssueASVHAWBDetails" parameterClass="cargo.cms.hawb.bo.HAWBAccptBO">
		INSERT INTO ASV_HAWB(	     AGENT_CODE,
									 AWB_DATE,
								     AWB_NO,
								     DEST,
								     FLOW,  								     
								     HAWB_NO,
								     HAWB_PCS,
								     HAWB_WT,
								     ORIG,
								     RECD_PCS,
								     RECD_WT,
								     SPL_CODE1,
								     SPL_CODE2,
								     SPL_CODE3,									
									 CR_DATE,
								     CR_USER_ID,
									 LM_DATE,
									 LM_USER_ID,
									 TR_TYPE)											
						 VALUES (	#agentCode#,
						 			to_date(#awbDate#,'DDMONYY'),
						 			#awbNo#,
						 			#dest#,
						 			'E',
						 			#hawbNo#,
									#totalLocPieces#,
									#totalLocWeight#,
						 		    'HKG',
									#totalLocPieces#,
									#totalLocWeight#,
						 		    #splCode1#,
									#splCode2#,
									#splCode3#,
								    sysdate,				 		
						 			#userID#,		
								    sysdate,					 		
						 			#userID#,
						 			'HCLIS')
		
		
		</insert>
		  <select id="checkHCLHAWBNOExist"   parameterClass="cargo.cms.hawb.bo.HAWBAccptBO" resultClass="java.lang.Integer">
				   <![CDATA[
				    select COUNT(1) from asv_hawb where hawb_no=#hawbNo# and AGENT_CODE = #agentCode#
				   ]]>
		 </select>
		
		<update id="updateHCLHAWBStatus" parameterClass="cargo.cms.hawb.bo.HAWBAccptBO">
					UPDATE asv_hawb SET RECD_PCS = RECD_PCS + #totalLocPieces#,HAWB_PCS = HAWB_PCS + #totalLocPieces#,HAWB_WT = HAWB_WT + #totalLocWeight#,
			RECD_WT = RECD_WT + #totalLocWeight#,AGENT_CODE = #agentCode#,SPL_CODE1=#splCode1#,SPL_CODE2=#splCode2#,SPL_CODE3=#splCode3#,LM_USER_ID=#userID#,LM_DATE=sysdate
			WHERE HAWB_NO=#hawbNo# AND AGENT_CODE = #agentCode#
		</update>
		
		  <select id="checkHAWBNOInInvExist"   parameterClass="cargo.cms.hawb.bo.HAWBAccptBO" resultClass="java.lang.Integer">
				   <![CDATA[
				   select COUNT(1) from asv_inventory where hawb_no=#hawbNo# and agent_code=#agentCode# and  loc_code=#locn# and (lsp_no=#lspNo# or uld_key=#btULDNo#)
				   ]]>
		 </select>
	 	<update id="updateInvPcWtHCLHAWBStatus" parameterClass="cargo.cms.hawb.bo.HAWBAccptBO">
				UPDATE asv_inventory SET LOCN_PCS = LOCN_PCS + #locPc#,LOCN_WT = LOCN_WT + #netWt# ,LM_USER_ID=#userID#,LM_DATE=sysdate WHERE hawb_no=#hawbNo# and agent_code=#agentCode# and loc_code=#locn# 
				and (lsp_no=#lspNo# or uld_key=#btULDNo#) 
		</update>
		
	<select id="checkLspNoIsExitInInventory" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT NVL(COUNT(1),0) FROM AWB_INVENTORY WHERE UPPER(lsp_no)=UPPER(#lsp#) OR ULD_KEY=#uld#
	</select>
	
			<select id="hawb_hcl_fetchAgentCodeDesc" parameterClass="map" resultClass="cargo.cms.hawb.bo.HAWBAccptBO">
		SELECT
			CODE_DESC as agent,CODE as agentCode
		FROM 
			CUST_COMPANY
		WHERE 
			AGENT_YN = 'Y'  AND
			CODE = #code#
			
	</select>
	<select id="hawb_hcl_fetchAgentCode" parameterClass="map" resultClass="cargo.cms.hawb.bo.HAWBAccptBO">
		SELECT
			CODE as agentCode,CODE_DESC as agent
		FROM  
			CUST_COMPANY
		WHERE 
			AGENT_YN = 'Y'  AND
			CODE_DESC = #codeDesc#
	</select>
		
		<!-- Added By Surendra Gollapalli for Create Issue HCL for HAWB : END 16 SEP 11 -->	
		
	<!--     Added by Shilpa for Dismantle HAWB STARTS-->		
	 <select id="DismantleHawbList" parameterClass="cargo.cms.hawb.bo.DismantleHAWBBO" resultClass="cargo.cms.hawb.bo.DismantleHAWBBO" >
		   select distinct 
        t2.awb_no awbNo,
        decode(substr(t1.AWB_NO,0,3)||'-'||substr(t1.AWB_NO,4),'-','',substr(t1.AWB_NO,0,3)||'-'||substr(t1.AWB_NO,4)) as awbDisp,                                  
        t2.hawb_no hawb,
        t2.hawb_pcs  hawbPc,
        t2.hawb_wt hawbWt,
        t2.recd_pcs invPc,
        t2.recd_wt invWt,
        (SELECT CODE_DESC FROM CUST_COMPANY WHERE CODE=t2.AGENT_CODE) agent
         from ASV_INVENTORY t1  
        join asv_hawb t2 on t1.hawb_no= t2.hawb_no and t1.agent_code=t2.agent_code  
        where t2.hawb_no=#hawb#
        <isNotEmpty prepend="AND" property="agentCode">
           <isNotEqual property="agentCode" compareValue="">
           t2.agent_code=#agentCode#
           </isNotEqual>
       </isNotEmpty>
        <isNotEmpty prepend="AND" property="agentDisp">
            <isNotEqual property="agentDisp" compareValue="">
             t2.agent_code=(SELECT CODE  FROM CUST_COMPANY WHERE CODE_DESC=#agentDisp#) 
             </isNotEqual>
         </isNotEmpty>
   </select>
   
    <select id="DismantleHawbList1" parameterClass="cargo.cms.hawb.bo.DismantleHAWBBO" resultClass="cargo.cms.hawb.bo.DismantleHAWBBO" >
    			  select 
                  awb_no awbNo,
                  LSP_NO lsp, 
                  uld_key uld,
                  nvl(LSP_NO,uld_key) lspUld, 
                  loc_code locn,
                  locn_pcs locnPc,
                  locn_wt locnWt
                  from asv_inventory
                  where HAWB_NO=#hawb#	
    </select>
    
     <update id="UpdateHawbforDismantleHAWB" parameterClass="cargo.cms.hawb.bo.DismantleHAWBBO" >
	    update asv_hawb
		set recd_pcs=#newInvPcs#,
		tr_type=#trtype#,
		lm_user_id=#userId#,
		lm_date=sysdate 
		where hawb_no=#hawb# and 
    	recd_pcs=#invPc#
	</update>
	
	<update id="UpdateInventoryforDismantleHAWB" parameterClass="cargo.cms.hawb.bo.DismantleHAWBBO" >
	      update asv_inventory 
          set locn_pcs=#newPcs# 
          where hawb_no=#hawb# and 
          locn_pcs=#locnPc# and locn_wt=#locnWt#
	</update>
	
	<select id="validateHAWbForDismantleHAWB" parameterClass="cargo.cms.hawb.bo.DismantleHAWBBO" resultClass="java.lang.Integer">
	  select hawb_no as hawb from asv_inventory
			where hawb_no=#hawb# and rownum=1
	</select>
	
	<select id="sqlValHAWBForDismantleHAWB" parameterClass="cargo.cms.hawb.bo.DismantleHAWBBO" resultClass="java.lang.String">
			select hawb_no as hawb from asv_inventory
			where hawb_no=#hawb# and rownum=1 
		</select>
	
	<select id="validAgentForDismantleHAWB"  parameterClass="cargo.cms.hawb.bo.DismantleHAWBBO"  resultClass="java.lang.String">	
	 SELECT code FROM cust_company 
			 where agent_yn='Y'  
			 and code=#agentCode#
	</select>
	
	<select id="validateagentForDismantleHAWB" parameterClass="cargo.cms.hawb.bo.DismantleHAWBBO" resultClass="java.lang.String"> 
			 select code_desc FROM cust_company 
			 where agent_yn='Y' 
			 and code_desc=#agentDisp#
	</select>
   	
   	
 <!--     Added by Shilpa for Dismantle HAWB ENDS-->	

<select id="getHAWBAcceptanceHCLList" parameterClass="cargo.cms.hawb.bo.HAWBVoidHCLBO" resultClass="cargo.cms.hawb.bo.HAWBVoidHCLLstBO">
		
				select 
			      t1.hcl_no as hclNo, t1.hawb_no as hawbNo, t2.code_desc as agent, t1.dest as dest, to_char(t1.void_date,'DDMONYY HH24:MI') as voidDate,     
			      to_char(t1.hcl_date,'DDMONYY HH24:MI') as acceptDate,
			        t1.hcl_pcs as pc,
              		t1.hcl_wt as wt,t2.code as agentCode from  asv_hcl_hd t1,CUST_COMPANY t2 where  to_char(t1.hcl_date, 'DDMONYY') between to_date(#dateFrom#, 'DDMONYY') 
						AND to_date(#dateTo#, 'DDMONYY')  and t1.agent_code=t2.code 
					<isNotEmpty property="agentName">
						and t1.agent_code=(SELECT CODE FROM CUST_COMPANY WHERE CODE_DESC= #agentName# AND AGENT_YN ='Y')
					</isNotEmpty>
					<isNotEmpty property="hclNo">
						and t1.hcl_no=#hclNo#
					</isNotEmpty>
					<isNotEmpty property="hawbNo">
						and t1.hawb_no=#hawbNo#
					</isNotEmpty>
					<isNotEmpty property="agentCode">
						and t1.agent_code=#agentCode#
					</isNotEmpty>
		</select>
		<select id="getVoidHCLDetails" parameterClass="cargo.cms.hawb.bo.HAWBVoidHCLBO" resultClass="cargo.cms.hawb.bo.HAWBVoidDtlBO">
			select hcl_no as hclNo, hawb_no as hawbNo, to_char(hcl_date,'DDMONYY HH24:MI')  as accpDate, hcl_pcs as pc, hcl_wt as wt, dest as dest, spl_code1 as shc1,#agentDtl# as agentName,
					spl_code2 as shc2, spl_code3 as shc3, dc_ind as dcInd, dlv_by as dlvBy, dlv_by_hkid as hkid, hcl_rmk as accRmk, AGENT_CODE as agentCode
					from asv_hcl_hd where hcl_no = #hclNoDtl#
		</select>
		
		
		
		<select id="getVoidHCLLocList" parameterClass="cargo.cms.hawb.bo.HAWBVoidHCLBO" resultClass="cargo.cms.hawb.bo.VoidHCLBO">
		   select t1.PCS as pc,t1.GROSS_WT as grossWt,t1.NET_WT as netWt,t1.FSCALE_WT as flrScaledWt,t1.TARE_WT as tareWt,t1.LOC_CODE as locn,t1.LSP_NO as lspNo,t1.ULD_KEY as btULDNo 
					,t3.seq_no as seqNo from asv_hcl_dtl t1
          join asv_hcl_hd t2
          on t2.hcl_no = t1.hcl_no
          join asv_inventory t3 
          on t3.hawb_no = t2.hawb_no
          and t3.agent_code = t2.agent_code and (t3.lsp_no = t1.lsp_no or t3.uld_key = t1.uld_key) and t3.loc_code = t1.loc_code
          where t1.hcl_no =  #hclNoDtl# order by t3.seq_no
		</select>
		
		<select id="getVoidHCLLocList_ACCEPTANCE" parameterClass="cargo.cms.hawb.bo.HAWBVoidHCLBO" resultClass="cargo.cms.hawb.bo.VoidHCLBO">
		    select t1.PCS as pc,t1.GROSS_WT as grossWt,t1.NET_WT as netWt,t1.FSCALE_WT as flrScaledWt,t1.TARE_WT as tareWt,t1.LOC_CODE as locn,t1.LSP_NO as lspNo,t1.ULD_KEY as btULDNo 
					 from asv_hcl_dtl t1          
          where t1.hcl_no =  #hclNoDtl#
		</select>
		
		
		<select id="getVoidHCLDimList" parameterClass="cargo.cms.hawb.bo.HAWBVoidHCLBO" resultClass="cargo.cms.hawb.bo.VoidHCLBO">
		
				select HEIGHT as height,WIDTH as width,LENGTH as length,PCS as dimPc from ASV_HCL_DMN where hcl_no = #hclNoDtl#
		</select>
		
		<update id="updateAsvInvforVoidHCL" parameterClass="cargo.cms.hawb.bo.HAWBVoidHCLBO">
		  update asv_inventory set LOCN_PCS=LOCN_PCS-NVL(#strPc#,0), LOCN_WT=LOCN_WT-NVL(#strWt#,0) WHERE seq_no = #seqNo#
		</update>
		<delete id="VoidHCLRecord_Delete" parameterClass="cargo.cms.hawb.bo.HAWBVoidHCLBO">
		  DELETE FROM asv_inventory WHERE seq_no = #seqNo# and LOCN_PCS=0
		</delete>
		
	<update id="sqlupdateVoidHCLDetails" parameterClass="cargo.cms.hawb.bo.HAWBVoidHCLBO">
		UPDATE asv_hcl_hd SET
		VOID_DATE=sysdate,VOID_RMK=#voidRmk#,VOID_USER_ID=#logInUserID#,
		LM_USER_ID=#logInUserID#,LM_DATE=sysdate
		WHERE HCL_NO=#hclNo# AND HAWB_NO = #hawbNo#
	</update>
	
	
	<update id="sqlupdateASV_HAWB" parameterClass="cargo.cms.hawb.bo.HAWBVoidHCLBO">
		UPDATE asv_hawb SET hawb_pcs = hawb_pcs-#recdPc# , hawb_wt = hawb_wt - #recdWt#, recd_pcs = recd_pcs - #recdPc#, recd_wt = recd_wt - #recdWt#,		
		LM_USER_ID=#logInUserID#,LM_DATE=sysdate
		WHERE agent_code=#agentCode# AND HAWB_NO = #hawbNo# 
	</update>
	
		
		 <select id="checkSplCodeExitsInMasterTable" parameterClass="map" resultClass="java.lang.String">
				  SELECT to_char(COUNT(1)) 
				  FROM MAST_SPL_HAND_CODE 
				  where upper(code) = upper(#splCode#)
		</select>
		 <select id="checkAgentNameExitsInMasterTable" parameterClass="map" resultClass="java.lang.String">
			  SELECT to_char(COUNT(1)) 
			  FROM cust_company
			  where upper(code_desc) = upper(#agentName#)
		</select>	
		
		<select id="checkDestCodeExitsInMasterTable" parameterClass="map" resultClass="java.lang.String">
			  SELECT to_char(COUNT(1)) 
			  FROM MAST_ARPT
			  where upper(code) = upper(#dest#)
		</select>	
		
		
		<select id="checkAgentCodeExitsInMasterTable" parameterClass="map" resultClass="java.lang.String">
			 SELECT to_char(COUNT(1)) 
			  FROM cust_company
			  where upper(code) = upper(#agentCode#)
		</select>	
		
		
		<select id="checkLocnCodeExitsInMasterTable" parameterClass="map" resultClass="java.lang.String">
			 SELECT to_char(COUNT(1)) 
			  FROM MAST_WH_LOC
			  where upper(code) = upper(#locnCode#)
		</select>	
		
		
		<select id="Void_hawb_hcl_fetchAgentCodeDesc" parameterClass="map" resultClass="cargo.cms.hawb.bo.HAWBVoidHCLBO">
		SELECT
			CODE_DESC as agentName,CODE as agentCode
		FROM 
			CUST_COMPANY
		WHERE 
			AGENT_YN = 'Y'  AND
			CODE = #code#
			
	</select>
	<select id="Void_hawb_hcl_fetchAgentCode" parameterClass="map" resultClass="cargo.cms.hawb.bo.HAWBVoidHCLBO">
		SELECT
			CODE as agentCode,CODE_DESC as agentName
		FROM  
			CUST_COMPANY
		WHERE 
			AGENT_YN = 'Y'  AND
			CODE_DESC = #codeDesc#
	</select>
		<!-- Added By swapna for  Hawb Enquiry :Start -->
<select id="fetchHawbEnqList" parameterClass="cargo.cms.hawb.bo.HAWBEnquireBO" resultClass="cargo.cms.hawb.bo.HAWBEnquireBO">
select H.HAWB_NO as hawbNo,
(select code_desc from cust_company where code=H.AGENT_CODE) as agentName,
H.AGENT_CODE as agentCode,
H.FLOW as flow,
H.AWB_NO as awbNo,
SUBSTR(H.awb_no,1,3)||'-'||SUBSTR(H.awb_no,4) awbNum,
SUBSTR(H.AWB_NO,1,3) as awbNoPfx,
SUBSTR(H.AWB_NO,4) as awbNoSfx,
TO_CHAR(H.AWB_DATE,'DDMONYY') awbDate,
H.ORIG as orig,
H.DEST as dest,
H.ORIG||'/'||H.DEST origDest,
E.CONT as cont,
H.HAWB_PCS as hawbpc,
H.HAWB_WT as hawbwt,
H.HAWB_PCS||'/'||H.RECD_WT hawbpcWt,
H.RECD_PCS as invPc,
H.RECD_WT as invWt,
E.SHPR_NAME as shpr,
decode(H.SPL_CODE1, null, '', H.SPL_CODE1 || ',')
		|| decode(H.SPL_CODE2, null, '', H.SPL_CODE2 || ',')
		|| decode(H.SPL_CODE3, null, '',H.SPL_CODE3)  spl,
E.CSGNE_NAME as csgnee
from ASV_HAWB H
left join (select A.AWB_NO AWB_NO ,A.AWB_DATE AWB_DATE ,B.HAWB_NO  HAWB_NO,B.SHPR_NAME SHPR_NAME, B.CSGNE_NAME CSGNE_NAME,B.MANIFEST_DESC CONT from EDI_FHL A JOIN EDI_FHL_HAWB B ON A.TR_NO = B.TR_NO)E 
 ON H.AWB_NO = E.AWB_NO AND H.AWB_DATE = E.AWB_DATE AND H.HAWB_NO = E.HAWB_NO 
 WHERE H.HAWB_NO is not null
<isNotEmpty property="hawbNo">
and H.HAWB_NO=#hawbNo#
</isNotEmpty>
<isNotEmpty property="awbNo">
and H.AWB_NO=#awbNo#
</isNotEmpty>
<isNotEmpty property="agentCode">
and H.AGENT_CODE=#agentCode#
</isNotEmpty>
<isNotEmpty property="agentName">
and H.AGENT_CODE=(SELECT CODE FROM CUST_COMPANY WHERE CODE_DESC= #agentName# AND AGENT_YN =
		'Y' AND ACTIVE = 'Y' AND BLACKLISTED='N')
</isNotEmpty>
  <dynamic prepend="ORDER BY ">
<isNotEmpty property="sortOrder.sortField">
$sortOrder.sortField$
</isNotEmpty>	           	           
   </dynamic>
</select>
<select id="fetchHawbEnqListCOUNT" parameterClass="cargo.cms.hawb.bo.HAWBEnquireBO" resultClass="java.lang.Integer">
 select count(1)
from ASV_HAWB H
left join (select A.AWB_NO AWB_NO ,A.AWB_DATE AWB_DATE ,B.HAWB_NO  HAWB_NO,B.SHPR_NAME SHPR_NAME, B.CSGNE_NAME CSGNE_NAME,B.MANIFEST_DESC CONT from EDI_FHL A JOIN EDI_FHL_HAWB B ON A.TR_NO = B.TR_NO)E 
 ON H.AWB_NO = E.AWB_NO AND H.AWB_DATE = E.AWB_DATE AND H.HAWB_NO = E.HAWB_NO 
 WHERE H.HAWB_NO is not null
<isNotEmpty property="hawbNo">
and H.HAWB_NO=#hawbNo#
</isNotEmpty>
<isNotEmpty property="awbNo">
and H.AWB_NO=#awbNo#
</isNotEmpty>
<isNotEmpty property="agentCode">
and H.AGENT_CODE=#agentCode#
</isNotEmpty>
<isNotEmpty property="agentName">
and H.AGENT_CODE=(SELECT CODE FROM CUST_COMPANY WHERE CODE_DESC= #agentName# AND AGENT_YN =
		'Y' AND ACTIVE = 'Y' AND BLACKLISTED='N')
</isNotEmpty>
</select>
<select id="fetchHawbHeaderDetail" parameterClass="cargo.cms.hawb.bo.HAWBEnquireBO" resultClass="cargo.cms.hawb.bo.HAWBEnquireBO">
select H.HAWB_NO as hawbNo,
(select code_desc from cust_company where code=H.AGENT_CODE) as agentName,
H.AGENT_CODE as agentCode,
H.FLOW as flow,
H.AWB_NO as awbNo,
SUBSTR(H.awb_no,1,3)||'-'||SUBSTR(H.awb_no,4) awbNum,
SUBSTR(H.AWB_NO,1,3) as awbNoPfx,
SUBSTR(H.AWB_NO,4) as awbNoSfx,
TO_CHAR(H.AWB_DATE,'DDMONYY') awbDate,
(select img_name from asv_hawb_img a where a.hawb_no=#hawbNo# and a.AGENT_CODE=#agentCode# and rownum=1) transactionId,
H.ORIG as orig,
H.DEST as dest,
H.ORIG||'/'||H.DEST origDest,
E.CONT as cont,
H.HAWB_PCS as hawbpc,
H.HAWB_WT as hawbwt,
H.HAWB_PCS||'/'||H.RECD_WT hawbpcWt,
H.RECD_PCS as invPc,
H.RECD_WT as invWt,
E.SHPR_NAME as shpr,
decode(H.SPL_CODE1, null, '', H.SPL_CODE1 || ',')
		|| decode(H.SPL_CODE2, null, '', H.SPL_CODE2 || ',')
		|| decode(H.SPL_CODE3, null, '',H.SPL_CODE3)  spl,
E.CSGNE_NAME as csgnee
from ASV_HAWB H 
left join (select A.AWB_NO AWB_NO ,A.AWB_DATE AWB_DATE ,B.HAWB_NO  HAWB_NO,B.SHPR_NAME SHPR_NAME, B.CSGNE_NAME CSGNE_NAME,B.MANIFEST_DESC CONT from EDI_FHL A JOIN EDI_FHL_HAWB B ON A.TR_NO = B.TR_NO)E 
 ON H.AWB_NO = E.AWB_NO AND H.AWB_DATE = E.AWB_DATE AND H.HAWB_NO = E.HAWB_NO  
where H.HAWB_NO is not null
and H.hawb_no=#hawbNo#
and H.agent_code=#agentCode#
</select>
<select id="fetchHawbHeaderDetail1" parameterClass="cargo.cms.hawb.bo.HAWBEnquireBO" resultClass="cargo.cms.hawb.bo.HAWBEnquireBO">
select HAWB_NO as hawbNo,
(select code_desc from cust_company where code=AGENT_CODE) as agentName,
AGENT_CODE as agentCode,
FLOW as flow,
AWB_NO as awbNo,
SUBSTR(awb_no,1,3)||'-'||SUBSTR(awb_no,4) awbNum,
SUBSTR(AWB_NO,1,3) as awbNoPfx,
SUBSTR(AWB_NO,4) as awbNoSfx,
TO_CHAR(AWB_DATE,'DDMONYY') awbDate,
(select img_name from asv_hawb_img a where a.hawb_no=#hawbNo# and a.AGENT_CODE=#agentCode# and rownum=1) transactionId,
ORIG as orig,
DEST as dest,
ORIG||'/'||DEST origDest,
CONTENT as cont,
HAWB_PCS as hawbpc,
HAWB_WT as hawbwt,
HAWB_PCS||'/'||RECD_WT hawbpcWt,
RECD_PCS as invPc,
RECD_WT as invWt,
USER_CSGN_SHPR as shpr,
(select (decode(SPL_CODE1, null, '', SPL_CODE1 || ',')
		|| decode(SPL_CODE2, null, '', SPL_CODE2 || ',')
		|| decode(SPL_CODE3, null, '',SPL_CODE3 || ',')
    || decode(SPL_CODE4, null, '',SPL_CODE3 || ',')
    || decode(SPL_CODE5, null, '',SPL_CODE3 || ',')
    || decode(SPL_CODE6, null, '',SPL_CODE3 || ',')
    || decode(SPL_CODE7, null, '',SPL_CODE3 || ',')
    || decode(SPL_CODE8, null, '',SPL_CODE8)) from edi_fhl_hawb a where a.hawb_no=#hawbNo# and rownum=1)  spl,
(select code_desc from cust_company where code=CSGN_CODE) as csgnee
from ASV_HAWB where HAWB_NO is not null
and hawb_no=#hawbNo#
and agent_code=#agentCode#
</select>


<select id="fetchEventList" parameterClass="cargo.cms.hawb.bo.HAWBEnquireBO" resultClass="cargo.cms.hawb.bo.HAWBEnquireBO">
	SELECT
	TO_CHAR( A.CR_DATE, 'DDMONYY HH24:MI' ) AS eventTime,
	A.CR_USER_ID AS user1,
	( select des_tag from his_mst_itm where
	cod_his_seq_num=b.cod_his_seq_num) AS eventName,
	DECODE(B.cod_act,'A','ADD','U','UPD','D','DEL') as event,
	B.DES_HIS_DTS as eventdesc
	FROM HIS_HAWB_EVNT A,HIS_HAWB_EVNT_DTL B
	WHERE B.hawb_no= A.hawb_no
	AND A.COD_TRA_SEQ_NUM = B.COD_TRA_SEQ_NUM
	AND A.HAWB_NO =#hawbNo#
	and a.agent_code=b.agent_code
	and a.agent_code=#agentCode#
	AND A.MODULE = 'W'
	AND A.COD_HIS_TYP = 'E'
	group by a.hawb_no,
	a.agent_code,A.CR_DATE,A.CR_USER_ID,A.COD_FUNC,B.cod_act,B.DES_HIS_DTS,b.cod_his_seq_num
	order by A.CR_DATE       


</select>
<select id="fetchFlightListforHawb" parameterClass="cargo.cms.hawb.bo.HAWBEnquireBO" resultClass="cargo.cms.hawb.bo.HAWBEnquireBO">
select Distinct to_char(a.FLT_DATE,'DDMONYY') fltDate,
 a.FLT_KEY fltNo,
 a.RECD_PCS fltPc,
 a.RECD_WT fltwt,
 b.FLOW flow,
 PKG_COMMON.get_flt_ata(a.FLT_KEY, a.FLT_DATE, 'A') ata
  from imp_car_shp a,asv_hawb b
 where a.awb_no=b.awb_no
and a.awb_date=to_char(b.awb_date,'DDMONYY')
and b.HAWB_NO=#hawbNo#
and b.AGENT_CODE=#agentCode#
</select>
<select id="fetchHclList" parameterClass="cargo.cms.hawb.bo.HAWBEnquireBO" resultClass="cargo.cms.hawb.bo.HAWBEnquireBO">
select to_char(HCL_DATE,'DDMONYY') accptDate,
HCL_NO hclNo,
HCL_PCS hclPc,
HCL_WT hclWt,
DLV_BY dlvBy from ASV_HCL_HD 
where HAWB_NO=#hawbNo#
and AGENT_CODE=#agentCode#
</select>
<select id="fetchLocationListForHawb" parameterClass="cargo.cms.hawb.bo.HAWBEnquireBO" resultClass="cargo.cms.hawb.bo.HAWBEnquireBO">
select LSP_NO lsp,
LOC_CODE location,
LOCN_PCS locPc,
LOCN_WT locWt,
ULD_KEY uld,
DAM_PCS damPc,
DAM_WT damWt,
#userID# userID
from ASV_INVENTORY
where HAWB_NO=#hawbNo#
and AGENT_CODE=#agentCode#
</select>
<select id="fetchPackList" parameterClass="cargo.cms.hawb.bo.HAWBEnquireBO" resultClass="cargo.cms.hawb.bo.HAWBEnquireBO">
select a.PO_NO divNo,
to_char(a.PO_DATE,'DDMONYY HH24:MI') dlvDate,
a.TRUCK_NO truckNo,
a.DLV_TO dlvTo,
a.DLV_TO_HKID,
a.STATUS status,
b.DLV_PCS dlvPc,
b.DLV_WT dlvWt
from ASV_PICK_ORDER_HD a left join ASV_PICK_ORDER_LOCN b
on a.po_no=b.po_no
where b.HAWB_NO=#hawbNo#
and b.AGENT_CODE=#agentCode#

</select>
<select id="fetchExpFlightListforHawb" parameterClass="cargo.cms.hawb.bo.HAWBEnquireBO" resultClass="cargo.cms.hawb.bo.HAWBEnquireBO">
select AWB_NO awbNo,
To_char(AWB_DATE,'DDMONYY') awbDate,
FLT_KEY fltNo,
to_char(FLT_DATE,'DDMONYY') fltDate,
FLT_TYPE flow, 
PKG_COMMON.get_flt_ata(FLT_KEY, FLT_DATE, 'D') ata,
PMAN_PCS fltPc,
PMAN_WT fltwt
from exp_pmanifest_awb where
awb_no=#awbNo# and TO_CHAR(awb_date,'DDMONYY')=#awbDate#
and flt_type=#flow#
</select>
<select id = "fetchHawbImageTrnsId"  parameterClass="cargo.cms.hawb.bo.HAWBEnquireBO" resultClass="cargo.cms.hawb.bo.HAWBEnquireBO">
select IMG_TYPE imgType,IMG_NAME imgName,PATH path from ASV_HAWB_IMG where HAWB_NO=#hawbNo# and AGENT_CODE=#agentCode#
	</select>	
	<!-- Added By swapna for  Hawb Enquiry :End -->	
	<insert id="sqlInsertAWBTrcDtlsCIR" parameterClass="cargo.cms.imprt.bo.CarShpBO">
		INSERT INTO TRC_AWB
		(AWB_NO,AWB_DATE,CARRIER,ORIG,DEST,PCS,WGT,SHIPPER_CODE,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,AWB_TYPE,IMG_TRANS_ID,CNSGN_CODE,CONTENT,SHPR_NAME,CNSGN_NAME)
	(SELECT awb_no,awb_date,carr_code,orig,dest,pcs,wt,shpr_code,#userId#,sysdate,#userId#,sysdate,awb_type,null,(select code
			from cust_company where code_desc = (SELECT CSGNE_NAME from IMP_CAR_AWB where AWB_NO=#awbNo# AND AWB_DATE=TO_DATE(#awbDate#,'DDMONYY')
	    and rownum=1)) consgnCode,content,SHIPPER_NAME,(SELECT CSGNE_NAME from IMP_CAR_AWB where AWB_NO=#awbNo# AND AWB_DATE=TO_DATE(#awbDate#,'DDMONYY')
	    and rownum=1) 
    from awb where awb_no=#awbNo# and UPPER(AWB_DATE) = TO_DATE(#awbDate#,'DDMONYY')) 
	</insert>
	<insert id="sqlInsertAWBTrcFltDtlsCIR" parameterClass="cargo.cms.imprt.bo.CarShpBO">
		INSERT INTO TRC_FLT
		(AWB_NO,AWB_DATE,DCRPNCY_TYP,AWB_PRFX,FLT_TYPE,FLT_KEY,FLT_DATE,DCRPNCY_PCS,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,TRF_WOS_YN)
		VALUES
		(#awbNo#,#awbDate#,#irrType#,#carrCode#,'A',#fltKey#,#fltDate#,
		(SELECT NVL(CIR_PCS,'0') from IMP_CAR_SHP where AWB_NO=#awbNo# AND AWB_DATE=TO_DATE(#awbDate#,'DDMONYY') AND FLT_KEY = #fltKey# AND FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') and rownum=1) ,
		#userId#,sysdate,#userId#,sysdate,'Y')
	</insert>
	
	<select id = "checkAWBCatalogCIR"  parameterClass="cargo.cms.imprt.bo.CarShpBO" resultClass="java.lang.Integer">
		select COUNT(1) from AWB where awb_no=#awbNo# and awb_date=to_date(#awbDate#,'DDMONYY') and CATALOG = 'TM'
	</select>
	
	<select id = "sqlCheckCIRTRCCount"  parameterClass="cargo.cms.imprt.bo.CarShpBO" resultClass="java.lang.Integer">
		select COUNT(1) from trc_flt where awb_no=#awbNo# and awb_date=to_date(#awbDate#,'DDMONYY') and dcrpncy_typ=#irrType# and FLT_KEY = #fltKey# and FLT_DATE = to_date(#fltDate#,'DDMONYY')
	</select>
	<delete id = "sqldeleteCIRTRC"  parameterClass="cargo.cms.imprt.bo.CarShpBO">
		delete from trc_flt where awb_no=#awbNo# and awb_date=to_date(#awbDate#,'DDMONYY') and dcrpncy_typ=#irrType# and (dcrpncy_sts is null or dcrpncy_sts='Initiated') 
		and FLT_KEY = #fltKey# and FLT_DATE = to_date(#fltDate#,'DDMONYY')
	</delete>	
	<select id = "sqlCheckCIRTRCAWBCount"  parameterClass="cargo.cms.imprt.bo.CarShpBO" resultClass="java.lang.Integer">
		select COUNT(1) from trc_awb where awb_no=#awbNo# and awb_date=to_date(#awbDate#,'DDMONYY') and awb_no in (select awb_no from trc_flt where awb_no=#awbNo# and awb_date=to_date(#awbDate#,'DDMONYY'))
	</select>
	<delete id = "sqldeleteCIRTRCAWB"  parameterClass="cargo.cms.imprt.bo.CarShpBO">
		delete from trc_awb where awb_no=#awbNo# and awb_date=to_date(#awbDate#,'DDMONYY')
	</delete>
	
	<insert id="sqlInsertAWBTrcDtlsDIR" parameterClass="cargo.cms.imprt.bo.MaintainDirBO">
		INSERT INTO TRC_AWB
		(AWB_NO,AWB_DATE,CARRIER,ORIG,DEST,PCS,WGT,SHIPPER_CODE,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,AWB_TYPE,IMG_TRANS_ID,CNSGN_CODE,CONTENT,SHPR_NAME,CNSGN_NAME)
	(SELECT awb_no,awb_date,carr_code,orig,dest,pcs,wt,shpr_code,#lmUserId#,sysdate,#lmUserId#,sysdate,awb_type,null,(select code
			from cust_company where code_desc = (SELECT CSGNE_NAME from IMP_CAR_AWB where AWB_NO=#awbNo# AND AWB_DATE=TO_DATE(#awbDate#,'DDMONYY')
	    and rownum=1)) consgnCode,content,SHIPPER_NAME,(SELECT CSGNE_NAME from IMP_CAR_AWB where AWB_NO=#awbNo# AND AWB_DATE=TO_DATE(#awbDate#,'DDMONYY')
	    and rownum=1)  
    from awb where awb_no=#awbNo# and UPPER(AWB_DATE) = TO_DATE(#awbDate#,'DDMONYY')) 
	</insert>
	<insert id="sqlInsertAWBTrcFltDtlsDIR" parameterClass="cargo.cms.imprt.bo.MaintainDirBO">
		INSERT INTO TRC_FLT
		(AWB_NO,AWB_DATE,DCRPNCY_TYP,AWB_PRFX,FLT_TYPE,FLT_KEY,FLT_DATE,DCRPNCY_PCS,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,TRF_WOS_YN)
		VALUES
		(#awbNo#,#awbDate#,#docDisc#,#carrCode#,'A',#flightNoKey#,#flightDate#,'1',#lmUserId#,sysdate,#lmUserId#,sysdate,'Y')
	</insert>
	<select id = "sqlCheckDIRTRCCount"  parameterClass="cargo.cms.imprt.bo.MaintainDirBO" resultClass="java.lang.Integer">
		select COUNT(1) from trc_flt where awb_no=#awbNo# and awb_date=to_date(#awbDate#,'DDMONYY') and dcrpncy_typ=#docDisc# 
			and FLT_KEY = #flightNoKey# and FLT_DATE = to_date(#flightDate#,'DDMONYY')		
	</select>
	<delete id = "sqldeleteDIRTRC"  parameterClass="cargo.cms.imprt.bo.MaintainDirBO">
		delete from trc_flt where awb_no=#awbNo# and awb_date=to_date(#awbDate#,'DDMONYY') and dcrpncy_typ=#docDisc# and (dcrpncy_sts is null or dcrpncy_sts='Initiated')
			and FLT_KEY = #flightNoKey# and FLT_DATE = to_date(#flightDate#,'DDMONYY')	
	</delete>	
	<select id = "sqlCheckDIRTRCAWBCount"  parameterClass="cargo.cms.imprt.bo.MaintainDirBO" resultClass="java.lang.Integer">
		select COUNT(1) from trc_awb where awb_no=#awbNo# and awb_date=to_date(#awbDate#,'DDMONYY') and awb_no in (select awb_no from trc_flt where awb_no=#awbNo# and awb_date=to_date(#awbDate#,'DDMONYY'))
	</select>
	<delete id = "sqldeleteDIRTRCAWB"  parameterClass="cargo.cms.imprt.bo.MaintainDirBO">
		delete from trc_awb where awb_no=#awbNo# and awb_date=to_date(#awbDate#,'DDMONYY')
	</delete>
	<!-- Added By swapna for Picking Order Action List:Start -->
<select id="fetchPickOrderList" parameterClass="cargo.cms.hawb.bo.PickingOrderActionBO" resultClass="cargo.cms.hawb.bo.PickingOrderActionBO">
select A.PO_NO orderNo,
TO_CHAR(A.PO_DATE,'DDMONYY HH24:MI') orderDate,
A.PURPOSE purpose,
A.TRUCK_NO truck,
A.DLV_TO dlvTo,
A.DLV_TO_HKID  dlvToHkid,
A.STATUS status,
A.ULD_KEY uld,
A.DOC_REF_NO refNo
from ASV_PICK_ORDER_HD A
where TO_CHAR(A.CR_DATE,'DDMONYY') between TO_DATE(#fromDate#,'DDMONYY')
			and TO_DATE(#toDate#,'DDMONYY')
<isNotEmpty property="hawbNo">
		AND EXISTS (SELECT NULL FROM ASV_PICK_ORDER_DTL WHERE HAWB_NO=#hawbNo# AND PO_NO = A.PO_NO)
</isNotEmpty>
<isNotEmpty property="awbNo">
		and EXISTS (SELECT NULL FROM ASV_PICK_ORDER_DTL DTL 
							JOIN ASV_HAWB HWB ON DTL.HAWB_NO = HWB.HAWB_NO AND DTL.AGENT_CODE = HWB.AGENT_CODE 
							WHERE HWB.AWB_NO=#awbNo# AND DTL.PO_NO = A.PO_NO)
</isNotEmpty>
<isNotEmpty property="agentCode">
		AND EXISTS (SELECT NULL FROM ASV_PICK_ORDER_DTL WHERE AGENT_CODE=#agentCode# AND PO_NO = A.PO_NO)
</isNotEmpty>
<isNotEmpty property="agentName"> 
		AND EXISTS (SELECT NULL FROM ASV_PICK_ORDER_DTL WHERE AGENT_CODE=(SELECT CODE FROM CUST_COMPANY WHERE CODE_DESC= #agentName#) AND PO_NO = A.PO_NO)
</isNotEmpty> 
<isNotEmpty property="purpose">
		AND A.PURPOSE=#purpose#
</isNotEmpty>
<isNotEmpty property="status">
		AND UPPER(A.STATUS)=UPPER(#status#)
</isNotEmpty> 
<isNotEmpty property="truck">
		AND A.TRUCK_NO=#truck#
</isNotEmpty>  
</select>
<select id="fetchCompleteList" parameterClass="cargo.cms.hawb.bo.PickingOrderActionBO" resultClass="cargo.cms.hawb.bo.PickingOrderActionBO">
 select HWB.AWB_NO awbNo,
	    to_char(HWB.AWB_DATE,'DDMONYY') awbDate,
		SUBSTR(HWB.AWB_NO,0,3) as awbNoPfx,
		SUBSTR(HWB.AWB_NO,4) as awbNoSfx,
		HWB.HAWB_PCS hawbPc,
		HWB.HAWB_WT hawbWt,
		(select code_desc from cust_company where code=DTL.AGENT_CODE) agentName,
		DTL.AGENT_CODE agentCode,
		DTL.HAWB_NO hawbNo,
		(select code_desc from cust_company where code=HWB.CSGN_CODE) csgnee,
		#userID# userID
	FROM ASV_PICK_ORDER_DTL DTL  
		JOIN ASV_HAWB HWB ON DTL.HAWB_NO = HWB.HAWB_NO AND DTL.AGENT_CODE = HWB.AGENT_CODE
	WHERE DTL.PO_NO = #orderNo#
</select>
<select id="fetchLocationList" parameterClass="cargo.cms.hawb.bo.PickingOrderActionBO" resultClass="cargo.cms.hawb.bo.PickingOrderActionBO">
select distinct (select code_desc from cust_company where code=A.AGENT_CODE) agentName,
A.AWB_NO awbNo,
A.SEQ_NO seqNo,
A.AGENT_CODE agentCode,
SUBSTR(A.awb_No,0,3) as awbNoPfx,
SUBSTR(A.awb_No,4) as awbNoSfx,
A.HAWB_NO hawbNo,
A.po_no orderNo,
to_char(A.AWB_DATE,'DDMONYY') awbDate,
A.LSP_NO lsp,
A.ULD_KEY uld,
A.LOC_CODE locn,
A.LOCN_PCS pc,
A.LOCN_WT wt,
A.DAM_PCS damPcs,
A.DAM_WT damWt,
A.DAM_IND damInd,
#userID# userID
from ASV_INVENTORY A left join ASV_PICK_ORDER_LOCN B
on A.SEQ_NO = B.SEQ_NO
where A.HAWB_NO=#hawbNo# and
A.AGENT_CODE=#agentCode#
and A.DLV_IND = 'N'
</select>

<update id="voidDeliveryList" parameterClass="cargo.cms.hawb.bo.PickingOrderActionBO" >
update ASV_PICK_ORDER_HD set status='VOID',VOID_USER=#userID#,VOID_DATE=sysdate where po_no=#orderNo#
</update>

<update id="voidDeliveryList1" parameterClass="cargo.cms.hawb.bo.PickingOrderActionBO" >
update ASV_INVENTORY set DAM_PCS='0' where po_no=#orderNo#
</update>
<delete id="deleteCompleteList" parameterClass="cargo.cms.hawb.bo.PickingOrderActionBO" >
delete from ASV_INVENTORY where po_no = #orderNo# and NVL(dlv_ind,'N') = 'Y'
</delete>

<update id="updateCompleteStatus" parameterClass="cargo.cms.hawb.bo.PickingOrderActionBO" >
update ASV_PICK_ORDER_HD set status='COMPLETE',COMPL_USER = #userID#,COMPL_DATE=sysdate where po_no=#orderNo# 
</update>

<update id="updatePickorderList" parameterClass="cargo.cms.hawb.bo.PickingOrderActionBO" >
update ASV_PICK_ORDER_LOCN set DLV_PCS=#dlvPc#,DLV_WT=#dlvWt#,LM_USER_ID=#lmUserId#,LM_DATE=sysdate where PO_NO=#orderNo#
and HAWB_NO=#hawbNo# and AGENT_CODE=(select code from cust_company where code_desc=#agentName#)
</update>
<update id="updatePickOrderImage" parameterClass="cargo.cms.hawb.bo.PickingOrderActionBO" >
update ASV_HAWB_IMG set IMG_NAME=#transactionId#,LM_USER_ID=#lmUserId#,LM_DATE=#lmDate# where HAWB_NO=#hawbNo# and AGENT_CODE=(select code from cust_company where code_desc=#agentName#) 
</update>
<insert id="insertPickOrderImage" parameterClass="cargo.cms.hawb.bo.PickingOrderActionBO" >
insert into ASV_HAWB_IMG (HAWB_NO,AGENT_CODE,IMG_NAME,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE) values(#hawbNo#,(select code from cust_company where code_desc=#agentName#),#transactionId#,#crUserId#,#crDate#,#lmUserId#,#lmDate#)
</insert>

<update id="updateDlvPcsForPickOrder" parameterClass="cargo.cms.hawb.bo.PickingOrderActionBO" >
update asv_pick_order_locn
set DLV_PCS = NVL(DLV_PCS,0)+NVL(#dlvPc#,0),
 	DLV_WT = NVL(DLV_WT,0)+NVL(#dlvWt#,0),
 	LM_USER_ID = #userID#,
 	LM_DATE = sysdate
where hawb_No = #hawbNo# and agent_code = #agentCode# and NVL(LSP_NO,'*') = NVL(#lsp#,'*')
AND NVL(ULD_KEY,'*') = NVL(#uld#,'*')
AND NVL(LOC_CODE,'*') = NVL(#locn#,'*')
</update>


<update id="reduceAsvInvDlvPcs" parameterClass="cargo.cms.hawb.bo.PickingOrderActionBO" >
update asv_inventory
set LOCN_PCS = NVL(LOCN_PCS,0)- NVL(#dlvPc#,0) ,
 	LOCN_WT = NVL(LOCN_WT,0) - NVL(#dlvWt#,0) ,
 	DAM_PCS = NVL(DAM_PCS,0)- NVL(#damPcs#,0) ,
 	DAM_WT = NVL(DAM_WT,0) - NVL(#damWt#,0) ,
 	LM_USER_ID = #userID#,
 	LM_DATE = sysdate
where seq_no = #seqNo# 	
</update>

<update id="deleteAsvInvIfZero" parameterClass="cargo.cms.hawb.bo.PickingOrderActionBO" >
delete asv_inventory where seq_no = #seqNo# and NVL(locn_pcs,0) = 0 and NVL(locn_wt,0) = 0
</update>

<update id="updateAsvInvDlvPcs" parameterClass="cargo.cms.hawb.bo.PickingOrderActionBO" >
update asv_inventory
set LOCN_PCS = NVL(LOCN_PCS,0)+ NVL(#dlvPc#,0) ,
 	LOCN_WT = NVL(LOCN_WT,0) + NVL(#dlvWt#,0) ,
 	DAM_PCS = NVL(DAM_PCS,0)+NVL(#damPcs#,0) ,
 	DAM_WT = NVL(DAM_WT,0) + NVL(#damWt#,0) ,
 	LM_USER_ID = #userID#,
 	LM_DATE = sysdate
where HAWB_NO = #hawbNo#
AND AGENT_CODE = #agentCode#
AND NVL(AWB_NO,'*') = NVL(#awbNo#,'*')
AND NVL(AWB_DATE,'12JAN01') = NVL(#awbDate#,'12JAN01')
AND NVL(LSP_NO,'*') = NVL(#lsp#,'*')
AND NVL(ULD_KEY,'*') = NVL(#uld#,'*')
AND NVL(LOC_CODE,'*') = NVL(#locn#,'*')
AND NVL(PO_NO,'*') = NVL(#orderNo#,'*')
AND NVL(DLV_IND,'N') = 'Y' 
</update>


<insert id="insertAsvInvDlvRecord" parameterClass="cargo.cms.hawb.bo.PickingOrderActionBO" >
Insert into ASV_INVENTORY (SEQ_NO,
						   HAWB_NO,
						   AGENT_CODE,
						   AWB_NO,
						   AWB_DATE,
						   LSP_NO,
						   ULD_KEY,
						   LOC_CODE,
						   LOCN_PCS,
						   LOCN_WT,
						   PO_NO,
						   DAM_IND,
						   DAM_PCS,
						   DAM_WT,
						   CR_USER_ID,
						   CR_DATE,
						   LM_USER_ID,
						   LM_DATE,
						   ASV_INV,
						   DLV_IND) 
					values ((SELECT NVL(SEQ_NO, 0) + 1 AS SEQ_NO FROM (SELECT MAX(SEQ_NO) AS SEQ_NO FROM ASV_INVENTORY)),
							#hawbNo#,
							#agentCode#,
							#awbNo#,
							#awbDate#,
							#lsp#,
							#uld#,
							#locn#,
							#dlvPc#,
							#dlvWt#,
							#orderNo#,
							#damInd#,
							#damPcs#,
							#damWt#,
							#userID#,
							sysdate,
							#userID#,
							sysdate,
							'N',
							'Y')

</insert>

<delete id="completePickingOrder" parameterClass="java.lang.String" >
delete from asv_inventory where NVL(po_no,'*') = #orderNo# and NVL(dlv_ind,'N') = 'Y'
</delete>

	<select id="getInventoryForPickUoOrder" parameterClass="cargo.cms.hawb.bo.PickingOrderActionBO"  resultClass="cargo.cms.hawb.bo.PickingOrderActionBO">
		select lsp_no as lsp,uld_key as uld from asv_inventory where  po_no = #orderNo# and dlv_ind = 'Y' and (lsp_no is not null or uld_key is not null)
	</select>
	
<update id="removPickOrderNo" parameterClass="java.lang.String" >
update asv_inventory
set po_no = null
where NVL(po_no,'*') = #orderNo#
and NVL(dlv_ind,'N') = 'N'
</update>

<update id="updateHAWBClose" parameterClass="cargo.cms.hawb.bo.PickingOrderActionBO" >
<![CDATA[
	UPDATE ASV_HAWB
	SET CLOSE_YN = 'Y', CLOSE_DATE = SYSDATE,
	    LM_USER_ID  = #userID#, LM_DATE = SYSDATE
	WHERE
	   HAWB_NO=#hawbNo# and AGENT_CODE=#agentCode#
     			]]>		
</update> 
<select id="getHAWBCountForClose" parameterClass="cargo.cms.hawb.bo.PickingOrderActionBO" resultClass="java.lang.Integer" >
	<![CDATA[
    	SELECT count(1) FROM ASV_HAWB HWB
      		join (select DTL.HAWB_NO, DTL.AGENT_CODE,  sum(LOCN.DLV_PCS) DLV_PCS, sum(LOCN.DLV_WT) DLV_WT 
	                    from ASV_PICK_ORDER_HD HD
	                         join ASV_PICK_ORDER_DTL DTL on HD.PO_NO = DTL.PO_NO 
	                         join ASV_PICK_ORDER_LOCN LOCN on LOCN.PO_NO = DTL.PO_NO and LOCN.HAWB_NO = DTL.HAWB_NO AND LOCN.AGENT_CODE = DTL.AGENT_CODE 
	              		where HD.VOID_DATE is null group by DTL.HAWB_NO, DTL.AGENT_CODE ) HD ON HD.HAWB_NO = HWB.HAWB_NO AND HD.AGENT_CODE = HWB.AGENT_CODE 
	      	where DLV_PCS = RECD_PCS and DLV_WT = RECD_WT 
	      	and HAWB_PCS <= RECD_PCS + case when DISC_PCS_TYPE is null OR DISC_PCS_TYPE not in ('SP', 'SL') then 0
	                                  when DISC_PCS_TYPE = 'SP' then DISC_PCS 
	                                  when DISC_PCS_TYPE = 'SL' then  - DISC_PCS end 
	      	and HAWB_WT <= RECD_WT + case when DISC_WT_TYPE is null OR DISC_WT_TYPE not in ('SP', 'SL') then 0
	                                  when DISC_WT_TYPE = 'SP' then DISC_WT 
	                                  when DISC_WT_TYPE = 'SL' then  - DISC_WT end 
	      	and not exists (select null from ASV_INVENTORY where HWB.HAWB_NO = ASV_INVENTORY.HAWB_NO and HWB.AGENT_CODE = ASV_INVENTORY.AGENT_CODE)
	      	and HWB.HAWB_NO = #hawbNo# and HWB.AGENT_CODE  = #agentCode#
	]]>		
</select>


<update id="removePoNoAfterVoid" parameterClass="java.lang.String" >
update asv_inventory
set po_no = null
where NVL(po_no,'*') = #orderNo#
</update>


<select id="sqlGetVoidPoInvList" parameterClass="cargo.cms.hawb.bo.PickingOrderActionBO"  resultClass="cargo.cms.hawb.bo.PickingOrderActionBO">
	SELECT SEQ_NO seqNo,
		   HAWB_NO hawbNo,
		   AGENT_CODE agentCode,	
		   AWB_NO awbNo,
		   to_char(AWB_DATE,'DDMONYY') awbDate,
		   LSP_NO lspNo,
		   ULD_KEY uld,
		   LOC_CODE locn,
		   LOCN_PCS dlvPc,
		   LOCN_WT dlvWt,
		   PO_NO orderNo,
		   DAM_IND damInd,
		   DAM_PCS damPcs,
		   DAM_WT damWt,
		   #userID# userID
	FROM ASV_INVENTORY WHERE PO_NO = #orderNo#
</select>






<delete id="sqlDeleteVoidPoInv" parameterClass="cargo.cms.hawb.bo.PickingOrderActionBO" >
	delete from asv_inventory where seq_no = #seqNo#
</delete>


<update id="sqlUpdateVoidPoInv" parameterClass="cargo.cms.hawb.bo.PickingOrderActionBO" >
update asv_inventory
set LOCN_PCS = NVL(LOCN_PCS,0)+ NVL(#dlvPc#,0) ,
 	LOCN_WT = NVL(LOCN_WT,0) + NVL(#dlvWt#,0) ,
 	DAM_PCS = NVL(DAM_PCS,0)+NVL(#damPcs#,0) ,
 	DAM_WT = NVL(DAM_WT,0) + NVL(#damWt#,0) ,
 	LM_USER_ID = #userID#,
 	LM_DATE = sysdate
where HAWB_NO = #hawbNo#
AND AGENT_CODE = #agentCode#
AND NVL(AWB_NO,'*') = NVL(#awbNo#,'*')
AND NVL(AWB_DATE,'12JAN01') = NVL(#awbDate#,'12JAN01')
AND NVL(LSP_NO,'*') = NVL(#lsp#,'*')
AND NVL(ULD_KEY,'*') = NVL(#uld#,'*')
AND NVL(LOC_CODE,'*') = NVL(#locn#,'*')
AND NVL(PO_NO,'*') = NVL(#orderNo#,'*')
</update>


<insert id="sqlInsertVoidPoInv" parameterClass="cargo.cms.hawb.bo.PickingOrderActionBO" >
Insert into ASV_INVENTORY (SEQ_NO,
						   HAWB_NO,
						   AGENT_CODE,
						   AWB_NO,
						   AWB_DATE,
						   LSP_NO,
						   ULD_KEY,
						   LOC_CODE,
						   LOCN_PCS,
						   LOCN_WT,
						   PO_NO,
						   DAM_IND,
						   DAM_PCS,
						   DAM_WT,
						   CR_USER_ID,
						   CR_DATE,
						   LM_USER_ID,
						   LM_DATE,
						   ASV_INV,
						   DLV_IND) 
					values ((SELECT NVL(SEQ_NO, 0) + 1 AS SEQ_NO FROM (SELECT MAX(SEQ_NO) AS SEQ_NO FROM ASV_INVENTORY)),
							#hawbNo#,
							#agentCode#,
							#awbNo#,
							to_date(#awbDate#,'DDMONYY'),
							#lsp#,
							#uld#,
							#locn#,
							#dlvPc#,
							#dlvWt#,
							#orderNo#,
							#damInd#,
							#damPcs#,
							#damWt#,
							#userID#,
							sysdate,
							#userID#,
							sysdate,
							'N',
							'N')

</insert>

<!-- Added By swapna for Picking Order Action List:End -->				

<update id="completeDeliveryList" parameterClass="cargo.cms.hawb.bo.PickingOrderActionBO" >
update ASV_PICK_ORDER_HD set status='Complete',COMPL_USER=#lmUserId#,COMPL_DATE=sysdate  where po_no=#orderNo#
</update>
<update id="updateInvForPickOrder" parameterClass="cargo.cms.hawb.bo.PickingOrderActionBO" >
update ASV_INVENTORY 
set LOCN_PCS=#pc#, 
LOCN_WT=#wt#,
LM_USER_ID=#lmUserId#,
LM_DATE=sysdate  
where HAWB_NO=#hawbNo# and AGENT_CODE=(select code from cust_company where code_desc=#agentName#)
</update>

<select id="fetchcomplHeader" parameterClass="cargo.cms.hawb.bo.PickingOrderActionBO" resultClass="cargo.cms.hawb.bo.PickingOrderActionBO">
select A.PO_NO orderNo,
TO_CHAR(A.PO_DATE,'DDMONYY HH24:MI') orderDate,
A.PURPOSE purpose,
A.TRUCK_NO truck,
A.DLV_TO dlvTo,
A.DLV_TO_HKID hkid,
A.DOC_REF_NO refNo,
A.STATUS status
from ASV_PICK_ORDER_HD A
where A.PO_NO=#orderNo#
</select>
<select id="checkImageForPickOrdr" parameterClass="cargo.cms.hawb.bo.PickingOrderActionBO" resultClass="java.lang.String">
	select IMG_NAME as transactionId from ASV_HAWB_IMG where hawb_no=#hawbNo# and agent_code=(select code from cust_company where code_desc=#agentName#) and rownum=1
	</select>
	<select id="checkImageForPickOrdr11" parameterClass="cargo.cms.hawb.bo.PickingOrderActionBO" resultClass="java.lang.Integer">
	select count(IMG_NAME) from ASV_HAWB_IMG where IMG_NAME=#transactionId# and hawb_no=#hawbNo# and agent_code=(select code from cust_company where code_desc=#agentName#)
	</select>
	
<!-- Added By swapna for Picking Order Action List:End -->
			


<!--  Added by Surendra Gollapalli on 31st Oct 2011 for Update HAWB Damage Records START -->


	<select id="checkHawbNoExitsInASVInventory" parameterClass="map" resultClass="java.lang.String">
			        SELECT to_char(COUNT(1)) 
			  FROM asv_hawb
			  where upper(HAWB_NO) = upper(#hawbNo#) 
			  <isNotEmpty property="agentCode">
			 	and AGENT_CODE=#agentCode#
			  </isNotEmpty>
			  <isNotEmpty property="awbNo">
			 	and awb_no=#awbNo#
			  </isNotEmpty>
			 
		</select>
		
		
		<select id="getHAWBDamHeaderDtl" parameterClass="cargo.cms.hawb.bo.UpdHAWBDamRcdBO" resultClass="cargo.cms.hawb.bo.UpdHAWBDamRcdBO">
			select a.hawb_no as hawbNo,
			 substr(a.awb_no, 0, 3)||'-'||substr(a.awb_no, 4, 11) as headerAwbNo,
			A.hawb_pcs AS hawbPc,
			a.hawb_wt as hawbWt,
			a.recd_pcs as hawbInvPc,
			a.recd_wt as hawbInvWt,
			c.code_desc as agentName,
			a.AGENT_CODE as agentCode
            from ASV_HAWB a,cust_company c
			where a.agent_code= c.code and a.hawb_no=#hawbNo# 
			<isNotEmpty property="awbNo">
			and a.awb_no=#awbNo#
			</isNotEmpty>
			<isNotEmpty property="hdragentCode">
			and a.agent_code=#hdragentCode#
			</isNotEmpty>
			<isNotEmpty property="hdragentName">
				and a.AGENT_CODE=(SELECT CODE FROM CUST_COMPANY WHERE CODE_DESC= #hdragentName# AND AGENT_YN ='Y')
			</isNotEmpty>
		</select>
		
		<select id="getHAWBDamLocnList" parameterClass="cargo.cms.hawb.bo.UpdHAWBDamRcdBO" resultClass="cargo.cms.hawb.bo.UpdateHAWBDamBO">
			 select a.agent_code as agentCode,
			 a.hawb_no as hawbNo,
			 a.awb_no as awbNo,
			 a.lsp_no as lspNo,
			 a.uld_key as btULDNo,
			 a.loc_code as locn,
			 a.asv_inv as asvInd,
			 a.locn_pcs as locPc,
		     a.locn_wt as locWt,
	      	 nvl(a.dam_pcs,0) as damPc,		  
        	 nvl(a.dam_wt,0) as damWt,
		   	 a.seq_no as seqNo
			  from asv_inventory a ,cust_company c
				where a.agent_code= c.code and a.hawb_no=#hawbNo# 
			<isNotEmpty property="awbNo">
				and a.awb_no=#awbNo#
			</isNotEmpty>
			<isNotEmpty property="hdragentCode">
			and a.agent_code=#hdragentCode#
			</isNotEmpty>
			<isNotEmpty property="hdragentName">
				and a.AGENT_CODE=(SELECT CODE FROM CUST_COMPANY WHERE CODE_DESC= #hdragentName# AND AGENT_YN ='Y')
			</isNotEmpty>
		</select>
		
		<select id="getHAWBDamConditionList" parameterClass="cargo.cms.hawb.bo.UpdHAWBDamRcdBO" resultClass="cargo.cms.hawb.bo.UpdateHAWBDamBO">
		 SELECT A.CODE_DESC as itemName,A.CODE as itemCode,B.HAWB_NO as hawbNo,B.DAM_COND as damConInd,B.DAM_PCS as damCondPc,B.LM_USER_ID as lastModUser,
   		 to_char(B.lm_date,'DDMONYY HH24:MI') as lastModDate,B.DAM_PCS as oldDamCondPc,B.agent_code as agentCode FROM MAST_CODE_DTL A
            LEFT JOIN ASV_HAWB_DAM_DTL B ON A.CODE = B.DAM_COND AND B.HAWB_NO = #hawbNo# 
            <isNotEmpty property="hdragentCode">
			and B.AGENT_CODE=#hdragentCode#
			</isNotEmpty>
            WHERE  A.CODE_TYPE='HAWB_DAMG_CONDITION' ORDER BY A.CODE_DESC
		</select>
		 <select id="checkHAWB_Agent_Is_Exist"   parameterClass="cargo.cms.hawb.bo.HAWBAccptBO" resultClass="java.lang.Integer">
				   <![CDATA[
				    select COUNT(1) from asv_hawb where hawb_no=#hawbNo# and agent_code=#agentCode#
				   ]]>
		 </select>
		 
		 
		 <select id="damage_hawb_fetchAgentCodeDesc" parameterClass="map" resultClass="cargo.cms.hawb.bo.UpdHAWBDamRcdBO">
		SELECT
			CODE_DESC as hdragentName,CODE as hdragentCode
		FROM 
			CUST_COMPANY
		WHERE 
			AGENT_YN = 'Y'  AND
			CODE = #code#
			
	</select>
	<select id="damage_hawb_fetchAgentCode" parameterClass="map" resultClass="cargo.cms.hawb.bo.UpdHAWBDamRcdBO">
		SELECT
			CODE as hdragentCode,CODE_DESC as hdragentName
		FROM  
			CUST_COMPANY
		WHERE 
			AGENT_YN = 'Y'  AND
			CODE_DESC = #codeDesc#
	</select>
	
	<update id="sqlupdateHAWBDamageRecordDetails" parameterClass="cargo.cms.hawb.bo.UpdateHAWBDamBO">
		UPDATE asv_hawb_dam_dtl SET
		dam_pcs=#damCondPc#,LM_USER_ID=#lastModUser#,LM_DATE=sysdate WHERE hawb_no=#hawbNo# AND
		agent_code = #agentCode# AND dam_cond=#damConInd#
	</update>
	
	<insert id="insertHAWBDamageDetails" parameterClass="cargo.cms.hawb.bo.UpdateHAWBDamBO">
		 insert into asv_hawb_dam_dtl
	 	 (hawb_no , agent_code, dam_cond, dam_pcs, cr_user_id, cr_date, lm_user_id, lm_date)
	 	 values(#hawbNo#,#agentCode#,#itemCode#,#damCondPc#,#lastModUser#,SYSDATE,#lastModUser#,SYSDATE)
	</insert>
	<update id="sqlupdateHAWBDamagePcsWtInASVInv" parameterClass="cargo.cms.hawb.bo.UpdateHAWBDamBO">
		 UPDATE asv_inventory SET
		dam_pcs=#damPc#, dam_wt=#damWt#, dam_ind=#asvInd#,LM_USER_ID=#lastModUser#,LM_DATE=sysdate WHERE seq_no = #seqNo#
	</update>
	<insert id="insertHAWBDamageImages" parameterClass="cargo.cms.hawb.bo.UpdateHAWBDamBO">
		insert into asv_hawb_img
	 	 ( hawb_no , agent_code, IMG_NAME,cr_user_id, cr_date, lm_user_id, lm_date)
	 	 values(#hawbNo#,#agentCode#,#imgPath#,#lastModUser#,SYSDATE,#lastModUser#,SYSDATE)
	</insert>
		
		<!--  Added by Surendra Gollapalli on 31st Oct 2011 for Update HAWB Damage Records END -->
	
<!--     Added by Shilpa for HAWB Discrepancy starts-->		
	<select id="fetchHAWBDiscrepancyList" parameterClass="cargo.cms.hawb.bo.HAWBDiscDamageRptBO" resultClass="cargo.cms.hawb.bo.HAWBDiscDamageRptBO" >
	 select   distinct  t2.hawb_no hawb,       
    t2.awb_no awbNo,      
    decode(substr(t2.AWB_NO,0,3)||'-'||substr(t2.AWB_NO,4),'-','',substr(t2.AWB_NO,0,3)||'-'||substr(t2.AWB_NO,4)) as awbDisp,   
    t2.flow flow,   
    (SELECT CODE_DESC FROM CUST_COMPANY WHERE CODE=t2.AGENT_CODE) agent,   
    (SELECT CODE_DESC FROM CUST_COMPANY WHERE CODE=t2.AGENT_CODE) agentDisp,
    decode(t2.hawb_pcs||'/'||t2.hawb_wt,'/','',t2.hawb_pcs||'/'||t2.hawb_wt ) hawbPcWt,
    decode(t2.recd_pcs||'/'||t2.recd_wt,'/','',t2.recd_pcs||'/'||t2.recd_wt) invPcWt,
    decode(t1.dam_pcs||'/'||t1.dam_wt,'/','',t1.dam_pcs||'/'||t1.dam_wt ) damPcWt,
    decode(t2.disc_pcs||'/'||t2.disc_wt,'/','',t2.disc_pcs||'/'||t2.disc_wt ) discPcWt,
    t2.dest dest    
    from ASV_INVENTORY t1,asv_hawb t2 where t1.hawb_no= t2.hawb_no and t2.agent_code=t1.agent_code  
    and (t2.disc_pcs>0 or t1.dam_pcs>0)       
       <isNotEmpty property="agentDisp">
        	<isNotEqual property="agentDisp" compareValue="">
			      and t2.AGENT_CODE=(SELECT CODE FROM CUST_COMPANY WHERE CODE_DESC= #agentDisp# )
			</isNotEqual>
		</isNotEmpty>
        <isNotEmpty property="flow">
        	<isNotEqual property="flow" compareValue="ALL">
					and t2.FLOW=#flow#
			</isNotEqual>
        </isNotEmpty>
         <isNotEmpty property="awbNo">
         	<isNotEqual property="awbNo" compareValue="">
            and t2.AWB_NO=#awbNo#
            </isNotEqual>
        </isNotEmpty>
        <isNotEmpty property="agentCode">
        	<isNotEqual property="agentCode" compareValue="">
            and t2.AGENT_CODE=#agentCode#
            </isNotEqual>
        </isNotEmpty>
        <isNotEmpty property="hawb">
        	<isNotEqual property="hawb" compareValue="">
            and t2.HAWB_NO=#hawb#
            </isNotEqual>
        </isNotEmpty>
        <dynamic prepend="ORDER BY ">
            <isNotEmpty property="sortOrder.sortField">
                $sortOrder.sortField$
            </isNotEmpty>
        </dynamic>	
   </select>
   
   <select id="fetchHAWBDamageCondition" parameterClass="cargo.cms.hawb.bo.HAWBDiscDamageRptBO" resultClass="cargo.cms.hawb.bo.HAWBDiscDamageRptBO" >
   		select decode(t1.dam_cond,'BL','Bundle Loose','IC','Indicator Changes(w/remarks)',t1.dam_cond) descr,t1.dam_pcs pc,t1.lm_user_id modUser,
		to_char(t1.lm_date,'DDMONYY') uptDate  
        from ASV_HAWB_DAM_DTL t1 
        join asv_hawb t2 on t1.hawb_no= t2.hawb_no and t1.agent_code = t2.agent_code where t1.hawb_no=#hawb1# 
    </select>
      
   <select id="fetchHAWBDamageLocation" parameterClass="cargo.cms.hawb.bo.HAWBDiscDamageRptBO" resultClass="cargo.cms.hawb.bo.HAWBDiscDamageRptBO" >  
        select LSP_NO lsp, 
        uld_key uld,nvl(LSP_NO,uld_key) lspUld, loc_code locn,locn_pcs locnPc,locn_wt locnWt ,dam_pcs damPc,dam_wt damWt  
        from ASV_INVENTORY 
        where HAWB_NO=#hawb1#
    </select>        
    
     <select id="fetchHAWBDamageDetail" parameterClass="cargo.cms.hawb.bo.HAWBDiscDamageRptBO" resultClass="cargo.cms.hawb.bo.HAWBDiscDamageRptBO" >
    	select distinct 
        t2.hawb_no hawb1,
        t2.awb_no awbNo,
        decode(substr(t1.AWB_NO,0,3)||'-'||substr(t1.AWB_NO,4),'-','',substr(t1.AWB_NO,0,3)||'-'||substr(t1.AWB_NO,4)) as awbDisp,  
        t2.flow flow,
        (SELECT CODE_DESC FROM CUST_COMPANY WHERE CODE=t2.AGENT_CODE) agent,
        (SELECT CODE_DESC FROM CUST_COMPANY WHERE CODE=t2.AGENT_CODE) agentDisp,
        (select img_name from asv_hawb_img  where hawb_no=t2.hawb_no and rownum=1) transactionId,
        t2.hawb_pcs  hawbPc,
        t2.hawb_wt hawbWt,
        t1.dam_pcs damPc,
        t1.dam_wt damWt,
        t2.dest dest 
        from ASV_INVENTORY t1 
        join asv_hawb t2 on t1.hawb_no= t2.hawb_no and t2.agent_code=t1.agent_code 
        where t2.HAWB_NO=#hawb1#     

    </select>  
    
    <select id="fetchHAWBDiscrepancyListCOUNT"
		parameterClass="cargo.cms.hawb.bo.HAWBDiscDamageRptBO"
		resultClass="java.lang.Integer">
		SELECT COUNT(1) AS totalRowCount FROM ( 
		 select   distinct  t2.hawb_no hawb,       
    t2.awb_no awbNo,      
    decode(substr(t1.AWB_NO,0,3)||'-'||substr(t1.AWB_NO,4),'-','',substr(t1.AWB_NO,0,3)||'-'||substr(t1.AWB_NO,4)) as awbDisp,   
    t2.flow flow,   
    (SELECT CODE_DESC FROM CUST_COMPANY WHERE CODE=t2.AGENT_CODE) agent,   
    (SELECT CODE_DESC FROM CUST_COMPANY WHERE CODE=t2.AGENT_CODE) agentDisp,
    decode(t2.hawb_pcs||'/'||t2.hawb_wt,'/','',t2.hawb_pcs||'/'||t2.hawb_wt ) hawbPcWt,
    decode(t2.recd_pcs||'/'||t2.recd_wt,'/','',t2.recd_pcs||'/'||t2.recd_wt) invPcWt,
    decode(t1.dam_pcs||'/'||t1.dam_wt,'/','',t1.dam_pcs||'/'||t1.dam_wt ) damPcWt,
    decode(t2.disc_pcs||'/'||t2.disc_wt,'/','',t2.disc_pcs||'/'||t2.disc_wt ) discPcWt,
    t2.dest dest    
    from ASV_INVENTORY t1,asv_hawb t2 where t1.hawb_no= t2.hawb_no and t2.agent_code=t1.agent_code  
    and (t2.disc_pcs>0 or t1.dam_pcs>0)        
        <isNotEmpty property="agentDisp">
        	<isNotEqual property="agentDisp" compareValue="">
			      and t2.AGENT_CODE=(SELECT CODE FROM CUST_COMPANY WHERE CODE_DESC= #agentDisp# )
			</isNotEqual>
		</isNotEmpty>
        <isNotEmpty property="flow">
        	<isNotEqual property="flow" compareValue="ALL">
					and t2.FLOW=#flow#
			</isNotEqual>
        </isNotEmpty>
         <isNotEmpty property="awbNo">
         	<isNotEqual property="awbNo" compareValue="">
            and t2.AWB_NO=#awbNo#
            </isNotEqual>
        </isNotEmpty>
        <isNotEmpty property="agentCode">
        	<isNotEqual property="agentCode" compareValue="">
            and t2.AGENT_CODE=#agentCode#
            </isNotEqual>
        </isNotEmpty>
        <isNotEmpty property="hawb">
        	<isNotEqual property="hawb" compareValue="">
            and t2.HAWB_NO=#hawb#
            </isNotEqual>
        </isNotEmpty>
	   )
   </select>                        
 	<!--     Added by Shilpa for HAWB discrepancy ends-->	
 	
 	<!--  Added by Surendra Gollapali on 9th Nov 2011 for HAWB Dwell Time START -->
 	<select id="fetchHAWBDwellTimeRecordList" parameterClass="cargo.cms.hawb.bo.EnqHAWBDwellBO" resultClass="cargo.cms.hawb.bo.EnqHAWBDwellListBO" >
	select t1.hawb_no as hawbNo, t1.agent_code as agentCode, decode(substr(t1.AWB_NO,0,3)||'-'||substr(t1.AWB_NO,4),'-','',substr(t1.AWB_NO,0,3)||'-'||substr(t1.AWB_NO,4)) as awbNo,to_char(min(T2.SRF_DATE),'DDMONYY HH24:MI') as firstInTime,to_char(max(T4.cr_date),'DDMONYY HH24:MI') as lastOutTime,
			date_diff(min(T2.SRF_DATE),decode(max(T4.cr_date),'',to_date(to_char(sysdate, 'DDMONYY HH24:MI'),'DDMONYY HH24:MI'), max(T4.cr_date))) as finalDwellTime,t1.flow as flow,decode( t3.hawb_no,null,'N','Y') as invFlag  from asv_hawb t1 
			left join imp_srf t2 
			on T2.AWB_NO = T1.AWB_NO
			left join asv_inventory t3 
			on T3.HAWB_NO = T1.HAWB_NO and ((t1.agent_code = t3.agent_code) or (t1.awb_no = t3.awb_no))
			left join asv_pick_order_dtl t4
			on T4.PO_NO = T3.PO_NO and T4.HAWB_NO = T1.HAWB_NO and t4.agent_code = t1.agent_code
			where  T1.CR_DATE BETWEEN TO_DATE(#startDate#, 'DDMONYY') AND to_date(to_char(sysdate, 'DDMONYYHH24MISS'),'DDMONYYHH24MISS') AND T2.SRF_DATE IS NOT NULL
			<isNotEmpty property="agentName">
			      and t1.AGENT_CODE=(SELECT CODE FROM CUST_COMPANY WHERE CODE_DESC= #agentName# )
			</isNotEmpty>       
	        <isNotEmpty property="awbNo">
	            and t1.AWB_NO=#awbNo#
	        </isNotEmpty>
	        <isNotEmpty property="hawbNo">
	            and t1.hawb_no=#hawbNo#
	        </isNotEmpty>     
			GROUP BY t1.hawb_no, t1.agent_code,t1.awb_no,t1.cr_date,T4.cr_date,t1.flow,t3.hawb_no	
			union 
	select t1.hawb_no as hawbNo, t1.agent_code as agentCode,decode(substr(t1.AWB_NO,0,3)||'-'||substr(t1.AWB_NO,4),'-','',substr(t1.AWB_NO,0,3)||'-'||substr(t1.AWB_NO,4)) as awbNo,to_char(min(T1.cr_date),'DDMONYY HH24:MI') as firstInTime,to_char(max(T2.rcl_date),'DDMONYY HH24:MI') as lastOutTime,
			date_diff(min(T1.cr_date),decode(max(T2.rcl_date),'',to_date(to_char(sysdate, 'DDMONYY HH24:MI'),'DDMONYY HH24:MI'), max(T2.rcl_date))) as finalDwellTime,t1.flow as flow,decode( t3.hawb_no,null,'N','Y') as invFlag  from asv_hawb t1 
			left join exp_rcl_hd t2 
			on T2.AWB_NO = T1.AWB_NO
			left join asv_inventory t3 
			on T3.HAWB_NO = T1.HAWB_NO and ((t1.agent_code = t3.agent_code) or (t1.awb_no = t3.awb_no))
			where  T1.CR_DATE BETWEEN TO_DATE(#startDate#, 'DDMONYY') AND to_date(to_char(sysdate, 'DDMONYYHH24MISS'),'DDMONYYHH24MISS') AND T1.cr_date IS NOT NULL
	        <isNotEmpty property="agentName">
				      and t1.AGENT_CODE=(SELECT CODE FROM CUST_COMPANY WHERE CODE_DESC= #agentName# )
			</isNotEmpty>       
	        <isNotEmpty property="awbNo">
	            and t1.AWB_NO=#awbNo#
	        </isNotEmpty>
	        <isNotEmpty property="hawbNo">
	            and t1.hawb_no=#hawbNo#
	        </isNotEmpty>      
        GROUP BY t1.hawb_no, t1.agent_code,t1.awb_no,t1.flow,t3.hawb_no           
     <dynamic prepend=" ORDER BY ">
			<isNotEmpty property="sortOrder.sortField">
			$sortOrder.sortField$
			</isNotEmpty>	           	           
   </dynamic>
   </select>
   
   <select id="fetchHAWBDwellTimeRecordListCOUNT" parameterClass="cargo.cms.hawb.bo.EnqHAWBDwellBO" resultClass="java.lang.Integer" >
	 SELECT COUNT(1) AS totalRowCount FROM (select t1.hawb_no as hawbNo, t1.agent_code as agentCode, decode(substr(t1.AWB_NO,0,3)||'-'||substr(t1.AWB_NO,4),'-','',substr(t1.AWB_NO,0,3)||'-'||substr(t1.AWB_NO,4)) as awbNo,to_char(min(T2.SRF_DATE),'DDMONYY HH24:MI') as firstInTime,to_char(max(T4.cr_date),'DDMONYY HH24:MI') as lastOutTime,
			date_diff(min(T2.SRF_DATE),decode(max(T4.cr_date),'',to_date(to_char(sysdate, 'DDMONYY HH24:MI'),'DDMONYY HH24:MI'), max(T4.cr_date))) as finalDwellTime,t1.flow as flow,decode( t3.hawb_no,null,'N','Y') as invFlag  from asv_hawb t1 
			left join imp_srf t2 
			on T2.AWB_NO = T1.AWB_NO
			left join asv_inventory t3 
			on T3.HAWB_NO = T1.HAWB_NO and ((t1.agent_code = t3.agent_code) or (t1.awb_no = t3.awb_no))
			left join asv_pick_order_dtl t4
			on T4.PO_NO = T3.PO_NO and T4.HAWB_NO = T1.HAWB_NO and t4.agent_code = t1.agent_code
			where  T1.CR_DATE BETWEEN TO_DATE(#startDate#, 'DDMONYY') AND to_date(to_char(sysdate, 'DDMONYYHH24MISS'),'DDMONYYHH24MISS') AND T2.SRF_DATE IS NOT NULL
			<isNotEmpty property="agentName">
			      and t1.AGENT_CODE=(SELECT CODE FROM CUST_COMPANY WHERE CODE_DESC= #agentName# )
			</isNotEmpty>       
	        <isNotEmpty property="awbNo">
	            and t1.AWB_NO=#awbNo#
	        </isNotEmpty>
	        <isNotEmpty property="hawbNo">
	            and t1.hawb_no=#hawbNo#
	        </isNotEmpty>     
			GROUP BY t1.hawb_no, t1.agent_code,t1.awb_no,t1.cr_date,T4.cr_date,t1.flow,t3.hawb_no
			union 
	select t1.hawb_no as hawbNo, t1.agent_code as agentCode,decode(substr(t1.AWB_NO,0,3)||'-'||substr(t1.AWB_NO,4),'-','',substr(t1.AWB_NO,0,3)||'-'||substr(t1.AWB_NO,4)) as awbNo,to_char(min(T1.cr_date),'DDMONYY HH24:MI') as firstInTime,to_char(max(T2.rcl_date),'DDMONYY HH24:MI') as lastOutTime,
			date_diff(min(T1.cr_date),decode(max(T2.rcl_date),'',to_date(to_char(sysdate, 'DDMONYY HH24:MI'),'DDMONYY HH24:MI'), max(T2.rcl_date))) as finalDwellTime,t1.flow as flow,decode( t3.hawb_no,null,'N','Y') as invFlag  from asv_hawb t1 
			left join exp_rcl_hd t2 
			on T2.AWB_NO = T1.AWB_NO
			left join asv_inventory t3 
			on T3.HAWB_NO = T1.HAWB_NO and ((t1.agent_code = t3.agent_code) or (t1.awb_no = t3.awb_no))
			where  T1.CR_DATE BETWEEN TO_DATE(#startDate#, 'DDMONYY') AND to_date(to_char(sysdate, 'DDMONYYHH24MISS'),'DDMONYYHH24MISS') AND T1.cr_date IS NOT NULL
	        <isNotEmpty property="agentName">
				      and t1.AGENT_CODE=(SELECT CODE FROM CUST_COMPANY WHERE CODE_DESC= #agentName# )
			</isNotEmpty>       
	        <isNotEmpty property="awbNo">
	            and t1.AWB_NO=#awbNo#
	        </isNotEmpty>
	        <isNotEmpty property="hawbNo">
	            and t1.hawb_no=#hawbNo#
	        </isNotEmpty>      
        GROUP BY t1.hawb_no, t1.agent_code,t1.awb_no,t1.flow,t3.hawb_no)           
     
   </select>
   
      
   <select id="fetchHAWBDwellTimeRecordInvList" parameterClass="cargo.cms.hawb.bo.EnqHAWBDwellBO" resultClass="cargo.cms.hawb.bo.EnqHAWBDwellListBO" >
	select t1.hawb_no as hawbNo, t1.agent_code as agentCode,decode(substr(t1.AWB_NO,0,3)||'-'||substr(t1.AWB_NO,4),'-','',substr(t1.AWB_NO,0,3)||'-'||substr(t1.AWB_NO,4)) as awbNo,to_char(min(T2.SRF_DATE),'DDMONYY HH24:MI') as firstInTime,to_char(max(T4.cr_date),'DDMONYY HH24:MI') as lastOutTime,
			date_diff(min(T2.SRF_DATE),decode(max(T4.cr_date),'',to_date(to_char(sysdate, 'DDMONYY HH24:MI'),'DDMONYY HH24:MI'), max(T4.cr_date))) as finalDwellTime,t1.flow as flow,decode( t3.hawb_no,null,'N','Y') as invFlag  from asv_hawb t1 
			left join imp_srf t2 
			on T2.AWB_NO = T1.AWB_NO
			join asv_inventory t3 
			on T3.HAWB_NO = T1.HAWB_NO and ((t1.agent_code = t3.agent_code) or (t1.awb_no = t3.awb_no))
			left join asv_pick_order_dtl t4
			on T4.PO_NO = T3.PO_NO and T4.HAWB_NO = T1.HAWB_NO and t4.agent_code = t1.agent_code
			where  T1.CR_DATE BETWEEN TO_DATE(#startDate#, 'DDMONYY') AND to_date(to_char(sysdate, 'DDMONYYHH24MISS'),'DDMONYYHH24MISS') AND T2.SRF_DATE IS NOT NULL
			<isNotEmpty property="agentName">
			      and t1.AGENT_CODE=(SELECT CODE FROM CUST_COMPANY WHERE CODE_DESC= #agentName# )
			</isNotEmpty>       
	        <isNotEmpty property="awbNo">
	            and t1.AWB_NO=#awbNo#
	        </isNotEmpty>
	        <isNotEmpty property="hawbNo">
	            and t1.hawb_no=#hawbNo#
	        </isNotEmpty>     
			GROUP BY t1.hawb_no, t1.agent_code,t1.awb_no,t1.cr_date,T4.cr_date,t1.flow,t3.hawb_no
			union 
	select t1.hawb_no as hawbNo, t1.agent_code as agentCode,decode(substr(t1.AWB_NO,0,3)||'-'||substr(t1.AWB_NO,4),'-','',substr(t1.AWB_NO,0,3)||'-'||substr(t1.AWB_NO,4)) as awbNo,to_char(min(T1.cr_date),'DDMONYY HH24:MI') as firstInTime,to_char(max(T2.rcl_date),'DDMONYY HH24:MI') as lastOutTime,
			date_diff(min(T1.cr_date),decode(max(T2.rcl_date),'',to_date(to_char(sysdate, 'DDMONYY HH24:MI'),'DDMONYY HH24:MI'), max(T2.rcl_date))) as finalDwellTime,t1.flow as flow,decode( t3.hawb_no,null,'N','Y') as invFlag  from asv_hawb t1 
			left join exp_rcl_hd t2 
			on T2.AWB_NO = T1.AWB_NO
			join asv_inventory t3 
			on T3.HAWB_NO = T1.HAWB_NO and ((t1.agent_code = t3.agent_code) or (t1.awb_no = t3.awb_no))
			where  T1.CR_DATE BETWEEN TO_DATE(#startDate#, 'DDMONYY') AND to_date(to_char(sysdate, 'DDMONYYHH24MISS'),'DDMONYYHH24MISS') AND T1.cr_date IS NOT NULL
	        <isNotEmpty property="agentName">
				      and t1.AGENT_CODE=(SELECT CODE FROM CUST_COMPANY WHERE CODE_DESC= #agentName# )
			</isNotEmpty>       
	        <isNotEmpty property="awbNo">
	            and t1.AWB_NO=#awbNo#
	        </isNotEmpty>
	        <isNotEmpty property="hawbNo">
	            and t1.hawb_no=#hawbNo#
	        </isNotEmpty>      
        GROUP BY t1.hawb_no, t1.agent_code,t1.awb_no,t1.flow,t3.hawb_no    
     <dynamic prepend=" ORDER BY ">
			<isNotEmpty property="sortOrder.sortField">
			$sortOrder.sortField$
			</isNotEmpty>	           	           
   </dynamic>
   </select>
   <select id="fetchHAWBDwellTimeRecordInvListCOUNT" parameterClass="cargo.cms.hawb.bo.EnqHAWBDwellBO" resultClass="java.lang.Integer" >
	SELECT COUNT(1) AS totalRowCount FROM (select t1.hawb_no as hawbNo, t1.agent_code as agentCode,decode(substr(t1.AWB_NO,0,3)||'-'||substr(t1.AWB_NO,4),'-','',substr(t1.AWB_NO,0,3)||'-'||substr(t1.AWB_NO,4)) as awbNo,to_char(min(T2.SRF_DATE),'DDMONYY HH24:MI') as firstInTime,to_char(max(T4.cr_date),'DDMONYY HH24:MI') as lastOutTime,
			date_diff(min(T2.SRF_DATE),decode(max(T4.cr_date),'',to_date(to_char(sysdate, 'DDMONYY HH24:MI'),'DDMONYY HH24:MI'), max(T4.cr_date))) as finalDwellTime,t1.flow as flow,decode( t3.hawb_no,null,'N','Y') as invFlag  from asv_hawb t1 
			left join imp_srf t2 
			on T2.AWB_NO = T1.AWB_NO
			join asv_inventory t3 
			on T3.HAWB_NO = T1.HAWB_NO and ((t1.agent_code = t3.agent_code) or (t1.awb_no = t3.awb_no))
			left join asv_pick_order_dtl t4
			on T4.PO_NO = T3.PO_NO and T4.HAWB_NO = T1.HAWB_NO and t4.agent_code = t1.agent_code
			where  T1.CR_DATE BETWEEN TO_DATE(#startDate#, 'DDMONYY') AND to_date(to_char(sysdate, 'DDMONYYHH24MISS'),'DDMONYYHH24MISS') AND T2.SRF_DATE IS NOT NULL
			<isNotEmpty property="agentName">
			      and t1.AGENT_CODE=(SELECT CODE FROM CUST_COMPANY WHERE CODE_DESC= #agentName# )
			</isNotEmpty>       
	        <isNotEmpty property="awbNo">
	            and t1.AWB_NO=#awbNo#
	        </isNotEmpty>
	        <isNotEmpty property="hawbNo">
	            and t1.hawb_no=#hawbNo#
	        </isNotEmpty>     
			GROUP BY t1.hawb_no, t1.agent_code,t1.awb_no,t1.cr_date,T4.cr_date,t1.flow,t3.hawb_no
			union 
	select t1.hawb_no as hawbNo, t1.agent_code as agentCode,decode(substr(t1.AWB_NO,0,3)||'-'||substr(t1.AWB_NO,4),'-','',substr(t1.AWB_NO,0,3)||'-'||substr(t1.AWB_NO,4)) as awbNo,to_char(min(T1.cr_date),'DDMONYY HH24:MI') as firstInTime,to_char(max(T2.rcl_date),'DDMONYY HH24:MI') as lastOutTime,
			date_diff(min(T1.cr_date),decode(max(T2.rcl_date),'',to_date(to_char(sysdate, 'DDMONYY HH24:MI'),'DDMONYY HH24:MI'), max(T2.rcl_date))) as finalDwellTime,t1.flow as flow,decode( t3.hawb_no,null,'N','Y') as invFlag  from asv_hawb t1 
			left join exp_rcl_hd t2 
			on T2.AWB_NO = T1.AWB_NO
			join asv_inventory t3 
			on T3.HAWB_NO = T1.HAWB_NO and ((t1.agent_code = t3.agent_code) or (t1.awb_no = t3.awb_no))
			where  T1.CR_DATE BETWEEN TO_DATE(#startDate#, 'DDMONYY') AND to_date(to_char(sysdate, 'DDMONYYHH24MISS'),'DDMONYYHH24MISS') AND T1.cr_date IS NOT NULL
	        <isNotEmpty property="agentName">
				      and t1.AGENT_CODE=(SELECT CODE FROM CUST_COMPANY WHERE CODE_DESC= #agentName# )
			</isNotEmpty>       
	        <isNotEmpty property="awbNo">
	            and t1.AWB_NO=#awbNo#
	        </isNotEmpty>
	        <isNotEmpty property="hawbNo">
	            and t1.hawb_no=#hawbNo#
	        </isNotEmpty>      
        GROUP BY t1.hawb_no, t1.agent_code,t1.awb_no,t1.flow,t3.hawb_no)    
     
   </select>
   	<update id="sqlupdateHAWBDamagePcsWtInASV_HAWB" parameterClass="cargo.cms.hawb.bo.UpdateHAWBDamBO">
		 UPDATE ASV_HAWB SET
			DAM_PCS=#damPc#, 
			DAM_WT=#damWt#, 
			LM_USER_ID=#lastModUser#,
			LM_DATE=sysdate,
			DAM_PROC_USER=#lastModUser#,
			DAM_PROC_DATE=sysdate 
			WHERE HAWB_NO = #hawbNo# 
			and AGENT_CODE = #agentCode#
   
	</update>
	
		<select id = "checkimageExit"  parameterClass="cargo.cms.hawb.bo.UpdateHAWBDamBO" resultClass="java.lang.Integer">
		select COUNT(1) from asv_hawb_img where agent_code = #agentCode# and hawb_no = #hawbNo# and img_name = #transactionId# and rownum = 1
	</select>
	
	<select id = "transID"  parameterClass="cargo.cms.hawb.bo.UpdHAWBDamRcdBO" resultClass="java.lang.String">
		select img_name from asv_hawb_img where agent_code = #hdragentCode# and hawb_no = #hawbNo# and rownum = 1
	</select>
   <update id="updateImg" parameterClass="cargo.cms.hawb.bo.UpdateHAWBDamBO">
		UPDATE asv_hawb_img SET img_name = #transactionId#  where agent_code = #agentCode# and hawb_no = #hawbNo#
	</update>
	
	
	 <select id="checkLocationIsEmptyOrNot" parameterClass="java.lang.String" resultClass="java.lang.String">
	 
	 SELECT ((empty_flg)||','||(loc_code)) as tempStr FROM lsp_inventory 
				   where lsp_no = #lspNo#
		</select>
		
	<update id="updateNewLocnCode" parameterClass="map">
		update lsp_inventory
		set EMPTY_FLG       = 'N',
			loc_code = #locnCode#,
			LM_USER_ID = #userID#,
			LM_DATE = sysdate
		where lsp_no = #lspNo#
	</update>
        
 	<!--  Added by Surendra Gollapali on 9th Nov 2011 for HAWB Dwell Time END -->
	<select id="sqlCheckLspInventoryEmptyYN" parameterClass="java.lang.String" resultClass="cargo.cms.hawb.bo.RestoreHAWBBO" >
		select loc_code lspLocnCode,decode(empty_flg,null,'N',empty_flg) lspEmptyYN from LSP_INVENTORY where LSP_NO = #PARAM# 
	</select>
	<update id="sqlUpdateLspInventoryEmptyYN" parameterClass="cargo.cms.hawb.bo.RestoreHAWBBO">
	 UPDATE LSP_INVENTORY
	   SET EMPTY_FLG       = 'N',
		LM_DATE   		   = SYSDATE,
		LM_USER_ID		   = #userID#,
		LOC_CODE = #locCode# 
	 WHERE LSP_NO = #lspNo#
	 </update>
	<insert id="sqlInsertLspInventoryHCL" parameterClass="cargo.cms.hawb.bo.HAWBAccptBO">
	 	 insert into LSP_INVENTORY
	 	 ( LSP_NO ,EMPTY_FLG,REF_TR_TYPE,LOC_CODE,REF_TR_NO,REF_TR_EVENT,REF_TR_DATE,REF_DOC_LINE_NO,REF_MOV_FROM,REF_LOC_FROM,REF_RMK,TARGET,STRG_DATE,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,LSP_TYPE)
	 	 values(#lspNo#,'N','HA',#locn#,#locn#,'',SYSDATE,'1',#locn#,#locn#,'INSERTING FROM HCL','',SYSDATE,#userID#,SYSDATE,#userID#,SYSDATE,substr(#lspNo#,0,1))
	 </insert>
	 <select id="sqlGetContAndSHCForMainCargoTracRec" parameterClass="cargo.cms.trace.bo.CargoTracingFltBO" resultClass="cargo.cms.trace.bo.CargoTracingFltBO">
	    select content as cont, 
    			spl_code1 
    			|| DECODE(spl_code2,NULL,'',','||spl_code2)
                || DECODE(spl_code3,NULL,'',','||spl_code3)
                || DECODE(spl_code4,NULL,'',','||spl_code4)
                || DECODE(spl_code5,NULL,'',','||spl_code5)
                || DECODE(spl_code6,NULL,'',','||spl_code6)
                || DECODE(spl_code7,NULL,'',','||spl_code7)
                || DECODE(spl_code8,NULL,'',','||spl_code8)
                || DECODE(spl_code9,NULL,'',','||spl_code9)
     	 as shc  from awb  
    	 where awb_no= #awbNo# and  rownum=1
    </select>
    <select id="sqlSelectCountoFTRCAWB" parameterClass="java.util.HashMap" resultClass="java.lang.String" >
    	select count(AWB_NO) from trc_awb where awb_no=#AWB_NO# and awb_date=to_date(#AWB_DATE#,'DDMONYY')
    </select>
     <select id="sqlSelectAwbTypeForCreCargo" parameterClass="java.util.HashMap" resultClass="java.lang.String" >
    	select awb_type from awb WHERE awb_no=#AWB_NO# and awb_date=to_date(#AWB_DATE#,'DDMONYY')
    </select>
    <insert id="sqlInsertINtoTRCAWBIMP" parameterClass="java.util.HashMap">
    	insert into trc_awb(AWB_NO,AWB_DATE,CARRIER,ORIG,DEST,PCS,WGT,CONTENT,SHIPPER_CODE,AGENT_CODE,CR_USER_ID,
		CR_DATE,LM_USER_ID,LM_DATE,IMG_TRANS_ID,AWB_TYPE,CNSGN_CODE,SHPR_NAME,CNSGN_NAME)
		select AWB_NO,awb_date,(select carr_code from awb where awb_no=#AWB_NO# and awb_date=#AWB_DATE# and rownum=1),awb_origin,awb_dest,Bulk_pcs,bulk_wt,content, 
		(select code from cust_company where code_desc=shpr_name and rownum=1), 
		'',#USER_ID#,sysdate,#USER_ID#,sysdate,'',#AWB_TYPE#,
		(select code from cust_company where code_desc=csgne_name and rownum=1), 
		shpr_name,csgne_name from  imp_car_awb where awb_no=#AWB_NO# and awb_date=to_date(#AWB_DATE#,'DDMONYY') 
    </insert>
    
    <select id="chkImportCarAvilable" parameterClass="java.util.HashMap" resultClass="java.lang.String" >
    	select count(1) from imp_car_awb where awb_no=#AWB_NO# and awb_date=to_date(#AWB_DATE#,'DDMONYY') 
    </select>
    
    <select id="chkEportCarAvilable" parameterClass="java.util.HashMap" resultClass="java.lang.String" >
    	select count(1) from exp_car where awb_no=#AWB_NO# and awb_date=to_date(#AWB_DATE#,'DDMONYY') 
    </select>
    
     <insert id="sqlInsertINtoTRCAWBEXP" parameterClass="java.util.HashMap">
    	insert into trc_awb(AWB_NO,AWB_DATE,CARRIER,ORIG,DEST,PCS,WGT,CONTENT,SHIPPER_CODE,AGENT_CODE,CR_USER_ID,
		CR_DATE,LM_USER_ID,LM_DATE,IMG_TRANS_ID,AWB_TYPE,CNSGN_CODE,SHPR_NAME,CNSGN_NAME)
    	select  AWB_NO,AWB_DATE,carr_code,origin,dest,pcs,wt,content,SHIPPER_CODE,AGENT_CODE,
		#USER_ID#,sysdate,#USER_ID#,sysdate,'',#AWB_TYPE#,
		(select code from cust_company where code_desc=csgne_name and rownum=1),
		Shpr_name,csgne_name from exp_car 
		where awb_no=#AWB_NO# and awb_date=to_date(#AWB_DATE#,'DDMONYY')
</insert>

<select id="CARGO_INVENT_CHK_RESULT_GET_GRP_DATE" parameterClass="cargo.cms.trace.bo.InventoryCheckResultBO" resultClass="cargo.cms.trace.bo.InventoryCheckResultBO">
	select distinct cod_grp cgroup from trc_phy_inv_mst where cr_date between to_date(#formdate#||' 0000','DDMONYY HH24MI') and  to_date(#toDate#||' 2359','DDMONYY HH24MI') and cod_grp is not null
	UNION
	select distinct cod_grp cgroup from TRC_WOS_INV_MST where cr_date between to_date(#formdate#||' 0000','DDMONYY HH24MI') and  to_date(#toDate#||' 2359','DDMONYY HH24MI') and cod_grp is not null
</select>

<select id="CARGO_INVENT_CHK_RESULT_GET_LOC_DATE" parameterClass="cargo.cms.trace.bo.InventoryCheckResultBO" resultClass="cargo.cms.trace.bo.InventoryCheckResultBO">
	select distinct cod_loc clocation from trc_phy_inv_mst where cr_date between to_date(#formdate#||' 0000','DDMONYY HH24MI') and  to_date(#toDate#||' 2359','DDMONYY HH24MI') and cod_loc is not null
	UNION 
	select distinct cod_loc clocation from TRC_WOS_INV_MST where cr_date between to_date(#formdate#||' 0000','DDMONYY HH24MI') and  to_date(#toDate#||' 2359','DDMONYY HH24MI') and cod_loc is not null
</select>

<!--  Hawb Module Bug Fixing :: Ranjith :: Starts-->

<select id="sqlGetHawbFlow" parameterClass="cargo.cms.hawb.bo.AssignHAWBBO" resultClass="java.lang.String">
	SELECT FLOW FROM ASV_HAWB WHERE HAWB_NO = #hawb# AND AGENT_CODE = (select code from cust_company where code_desc = #agent#) AND ROWNUM = 1
</select>
<select id="isHawbImportAwb" parameterClass="java.lang.String" resultClass="java.lang.Integer">
	SELECT count(1) from awb where awb_no = #awbNo# and awb_date = trim(sysdate) and awb_type in ('T','I')
</select>

<!--  Hawb Module Bug Fixing :: Ranjith :: Ends-->

	<update id="updateLspEmptyFlagHawb" parameterClass="java.util.HashMap">
		UPDATE LSP_INVENTORY SET EMPTY_FLG = 'N',LM_USER_ID = #USER_ID#,LM_DATE = SYSDATE WHERE LSP_NO = #LSP_NO# AND EMPTY_FLG = 'Y'
	</update>
	
	<update id="updateUldEmptyFlagHawb" parameterClass="java.util.HashMap">
		UPDATE ULD_INVENTORY SET EMPTY_FLG = 'N',LM_USER_ID = #USER_ID#,LM_DATE = SYSDATE WHERE ULD_KEY = #ULD_KEY# AND EMPTY_FLG = 'Y'
	</update>
	
	<select id="chkInventoryExistsForULD" parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT COUNT(1) FROM DUAL WHERE EXISTS(
    	SELECT NULL FROM AWB_INVENTORY WHERE ULD_KEY= #uldKey#
    	UNION
    	SELECT NULL FROM ASV_INVENTORY WHERE ULD_KEY= #uldKey#)
    </select>
    
    <select id="chkInventoryExistsForLSP" parameterClass="java.lang.String" resultClass="java.lang.String">
    	SELECT COUNT(1) FROM DUAL WHERE EXISTS(
    	SELECT NULL FROM AWB_INVENTORY WHERE LSP_NO = #lspNum#
    	UNION
    	SELECT NULL FROM ASV_INVENTORY WHERE LSP_NO = #lspNum#)
    </select>

	<update id="updateLspEmptyFlgToEmpty" parameterClass="java.util.HashMap">
		UPDATE LSP_INVENTORY SET EMPTY_FLG = 'Y',LM_USER_ID = #USER_ID#,LM_DATE = SYSDATE WHERE LSP_NO = #LSP_NO# AND EMPTY_FLG = 'N'
	</update>
	
	<update id="updateUldEmptyFlgToEmpty" parameterClass="java.util.HashMap">
		UPDATE ULD_INVENTORY SET EMPTY_FLG = 'Y',LM_USER_ID = #USER_ID#,LM_DATE = SYSDATE WHERE ULD_KEY = #ULD_KEY# AND EMPTY_FLG = 'N'
	</update>
	
	
	<!-- Create SSPD -->
	
	<select id="getBuildupUldListForSSPD" parameterClass="cargo.cms.trace.bo.CreateSSPDBO" resultClass="cargo.cms.trace.bo.CreateSSPDBO">	
	  select 
	      pua.flt_key as fltKey,
		  to_char(pua.flt_date,'DDMONYY') as fltDate,
		  pua.awb_no as awbNumber,
		  SUBSTR(pua.awb_no,1,3)||'-'||SUBSTR(pua.awb_no,4) as awbNumberDisp ,
		  pua.unldg_pt as unladingPnt,
		  pua.uld_bt_no as uldKey,
		   pua.assigned_pcs + NVL(td.assigned_pcs,0) as buildUpPcs,
		  pua.assigned_wt + + NVL(td.assigned_wt,0) as buildUpWt,
		  case when (select COUNT(1) from EXP_PMANIFEST_ULD_AWB_UN where tr_no  = pua.tr_no ) > 0 then 'Y' else 'N' end  AS dgInd,
	 	  case when (select COUNT(1) from EXP_PMANIFEST_ULD_AWB_TAG where tr_no  = pua.tr_no ) > 0 then 'Y' else 'N' end  AS tagInd,
	  	  case when (select COUNT(1) from EXP_PMANIFEST_ULD_AWB_HAWB where tr_no  = pua.tr_no ) > 0 then 'Y' else 'N' end  AS hawbInd,
		  td.ASSIGNED_PCS as sspdPcs,
		  td.ASSIGNED_WT as sspdWt,	  
		  pua.TR_NO as trNumber,		  
		  pua.UPD_PMAN_PCS as updPmanPcs,
      	  pua.UPD_PMAN_WT  as updPmanWt,    
      	  pua.ENDORSED_DC_BY as endorseDCBy,
      	  to_char(pua.ENDORSED_DC_DATE,'DDMONYY')  as endorseDCDate,
      	  pua.PPK_TYPE as ppkType,
      	  to_char(pua.AWB_DATE,'DDMONYY') as awbDate,
      	  case when nvl(td.ASSIGNED_PCS,0) > 0 then 'Y' else 'N' end as sspdCreateInd		  
		  from exp_pmanifest_uld_awb pua
	      join exp_pmanifest_uld ui on ui.flt_key = pua.flt_key and ui.flt_date = pua.flt_date and ui.uld_bt_no = pua.uld_bt_no
	      left join TRC_DISC_DTL td on td.flt_key = pua.flt_key and td.flt_date = pua.flt_date and td.uld_bt_no = pua.uld_bt_no and td.awb_no = pua.awb_no and td.awb_date = pua.awb_date
	      where pua.flt_key = #fltKey# and pua.flt_date = to_date(#fltDate#,'DDMONYY') and pua.awb_no = #awbNumber# 		
	      and ui.ppk_type = 'B' and ( ui.hdlg_mode is null OR ui.hdlg_mode NOT IN ('NBK','PPK') ) 
	      AND EXISTS (SELECT NULL FROM EXP_CHKOUT_DTL WHERE chkout_date IS NOT NULL and flt_key = pua.flt_key and flt_date = pua.flt_date and uld_key = pua.uld_bt_no)
	      
	</select>
	
	<select id="getHAWBBuildupListForSSPD" parameterClass="map" resultClass="cargo.cms.trace.bo.CreateSSPDBO">
		select hawb.tr_no as trNumber, hawb.wt as hawbWeight, hawb.pc as hawbPcs, hawb.hawb_no as hawbNo,
		th.PC as sspdHawbPcs,th.PC as sspdHawbWt from  exp_pmanifest_uld_awb_hawb hawb
		left join TRC_DISC_HAWB th on th.tr_no = hawb.tr_no and th.hawb_no = hawb.hawb_no
		where hawb.tr_no = #trNumber#
	</select>
	
	<select id="getTagBuildupListForSSPD" parameterClass="map" resultClass="cargo.cms.trace.bo.CreateSSPDBO">
		select tag.pc as tagPcs, tag.tag_no as tagNo, tag.tr_no as trNumber, tag.wt as tagWt, tg.PC as sspdTagPcs,tg.WT as sspdTagWt 
    	from  exp_pmanifest_uld_awb_tag tag
		left join TRC_DISC_TAG tg on tg.tr_no = tag.tr_no and tg.TAG_NO = tag.TAG_NO
		where tag.tr_no = #trNumber#		
	</select>
	
	<select id="getDGListForSSPD" parameterClass="map" resultClass="cargo.cms.trace.bo.CreateSSPDBO">
		SELECT un.tr_no  AS trNumber,
		  un.doc_line_no AS docLineNo,
		  un.overpack_id AS overpackId,
		  un.apio_id     AS apioId,
		  un.un_tr_no    AS unid,
		  un.load_qty    AS loadPkg,
		  dun.LOAD_QTY   AS dgSSPDPcs
		FROM exp_pmanifest_uld_awb_un un
		LEFT JOIN TRC_DISC_UN dun ON dun.tr_no = un.tr_no AND dun.doc_line_no = un.doc_line_no
		WHERE un.tr_no= #trNumber#
		ORDER BY un.overpack_id,un.apio_id,un.un_tr_no desc 
	</select>
	
	<select id="getDGUNIDBuildupListForSSPD" parameterClass="map" resultClass="cargo.cms.trace.bo.CreateSSPDBO">
		select tr_no as trNumber, doc_line_no as docLineNo, un_tr_no as unid, un_tr_no as overpackApioUnid, load_qty as loadPkg, wh_ind as wgtInd from  exp_pmanifest_uld_awb_un 
			WHERE TR_NO= #trNumber# and un_tr_no is not null and apio_id is null and overpack_id is null
	</select>
	
	<select id="getDistinctApioUnidListForSSPD" parameterClass="map" resultClass="cargo.cms.trace.bo.CreateSSPDBO">
		select distinct apio_id as apioUnid, apio_id as apioId from  exp_pmanifest_uld_awb_un WHERE TR_NO= #trNumber# and un_tr_no is not null and apio_id is not null and overpack_id is null
	</select>
	
	<select id="getOverPackListForSSPD" parameterClass="map" resultClass="cargo.cms.trace.bo.CreateSSPDBO">
		select distinct overpack_id  as overpackApioUnid, overpack_id  as overpackId  from  
		exp_pmanifest_uld_awb_un WHERE TR_NO= #trNumber# and overpack_id is not null and overpack_id like 'OP' ||'%'
	</select>
    
    <select id="getOverPackApioListForSSPD" parameterClass="map" resultClass="cargo.cms.trace.bo.CreateSSPDBO">
		select distinct apio_id as apioUnid, apio_id as apioId  from  exp_pmanifest_uld_awb_un  WHERE TR_NO= #trNumber# and overpack_id = #overpackId# and apio_id like 'API' ||'%'
	</select>
	
	<select id="getAPIOUNIDListForSSPD" parameterClass="map" resultClass="cargo.cms.trace.bo.CreateSSPDBO">
		select tr_no as trNumber, doc_line_no as docLineNo, un_tr_no as unid, un_tr_no as overpackApioUnid, load_qty as loadPkg, wh_ind as wgtInd
			from  exp_pmanifest_uld_awb_un WHERE TR_NO= #trNumber# and apio_id = #apioId#
	</select>
	
	<select id="getOPAPIOUNIDListForSSPD" parameterClass="map" resultClass="cargo.cms.trace.bo.CreateSSPDBO">
		select tr_no as trNumber, doc_line_no as docLineNo, un_tr_no as unid, un_tr_no as overpackApioUnid, load_qty as loadPkg, wh_ind as wgtInd
			from  exp_pmanifest_uld_awb_un WHERE TR_NO= #trNumber# and apio_id = #apioId#
	</select>
	
	<select id="getOPUNIDValues" parameterClass="map" resultClass="cargo.cms.trace.bo.CreateSSPDBO">
		select tr_no as trNumber, doc_line_no as docLineNo, un_tr_no as unid, un_tr_no as overpackApioUnid, load_qty as loadPkg, wh_ind as wgtInd
			from  exp_pmanifest_uld_awb_un WHERE TR_NO= #trNumber# and overpack_id = #overpackId#
	</select>
	
	<select id="findSSPDDGDtls" parameterClass="map" resultClass="cargo.cms.trace.bo.CreateSSPDBO">
		SELECT OVERPACK_ID AS overpackApioUnid, APIO_ID AS apioUnid,  UN_TR_NO AS unid,  LOAD_QTY AS loadPkg
				FROM TRC_DISC_UN WHERE TR_NO = #trNumber#
	</select>	

	<select id="getDiscSeqNumber" resultClass="java.lang.String">	
   	 	select TRC_DISC_HD_SEQ.NEXTVAL from dual
   	</select>

	<select id="chkSspdAlreadyCreated" parameterClass="cargo.cms.trace.bo.CreateSSPDBO" resultClass="java.lang.String">
		select DISC_NO from TRC_DISC_HD where AWB_NO = #awbNumber# and  AWB_DATE = to_date(#awbDate#,'DDMONYY') and  FLT_KEY = #fltKey# and FLT_DATE = to_date(#fltDate#,'DDMONYY')
	</select>
	
	<insert id="insertSSPDHD" parameterClass="cargo.cms.trace.bo.CreateSSPDBO">
		INSERT INTO TRC_DISC_HD (DISC_NO,AWB_NO, AWB_DATE, FLT_KEY, FLT_DATE, DISC_TYPE, DISC_PCS, DISC_WT, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE,TR_TYPE)
		VALUES(#discNum#,#awbNumber#,to_date(#awbDate#,'DDMONYY'),#fltKey#,to_date(#fltDate#,'DDMONYY'),'SSPD',#totSspdPc#,#totSspdWt#,#userId#,SYSDATE,#userId#,SYSDATE,'CSSPD')
	</insert>
	
	<update id="updateSSPDHD" parameterClass="cargo.cms.trace.bo.CreateSSPDBO">
		update TRC_DISC_HD set DISC_PCS  = (DISC_PCS + NVL(#totSspdPc#,0)), DISC_WT = (DISC_WT + NVL(#totSspdWt#,0)) , 
				LM_USER_ID = #userId#, LM_DATE = SYSDATE, TR_TYPE = 'CSSPD' where DISC_NO = #discNum# 
	</update>
	
	<insert id="insertSSPDDtl" parameterClass="cargo.cms.trace.bo.CreateSSPDBO">
		INSERT INTO TRC_DISC_DTL (FLT_KEY,FLT_DATE,UNLDG_PT,ULD_BT_NO,PPK_TYPE,AWB_NO,AWB_DATE,ASSIGNED_PCS,ASSIGNED_WT,UPD_PMAN_PCS,
			UPD_PMAN_WT,TR_TYPE,ENDORSED_DC_BY,ENDORSED_DC_DATE,TR_NO,DISC_NO,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE)
		VALUES(#fltKey#,to_date(#fltDate#,'DDMONYY'),#unladingPnt#,#uldKey#,#ppkType#,#awbNumber#,to_date(#awbDate#,'DDMONYY'),#sspdPcs#,#sspdWt#,#updPmanPcs#,
			#updPmanWt#,'CSSPD',#endorseDCBy#,to_date(#endorseDCDate#,'DDMONYY'),#trNumber#,#discNum#,#userId#,SYSDATE,#userId#,SYSDATE)
	</insert>

	<insert id="insertSSPDHAWBDtls" parameterClass="cargo.cms.trace.bo.CreateSSPDBO">
		INSERT INTO TRC_DISC_HAWB (TR_NO,HAWB_NO,PC, WT,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE)
		VALUES(#trNumber#,#hawbNo#,#sspdHawbPcs#,#hawbWeight#,#userId#,SYSDATE,#userId#,SYSDATE)
	</insert>
	
	<insert id="insertSSPDTagDtls" parameterClass="cargo.cms.trace.bo.CreateSSPDBO">
		INSERT INTO TRC_DISC_TAG(TR_NO,TAG_NO,PC,WT,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE)
		VALUES(#trNumber#,#tagNo#,#sspdTagPcs#,#tagWt#,#userId#,SYSDATE,#userId#,SYSDATE)
	</insert>
	
	<insert id="insertSSPDSHCDtls" parameterClass="map">		
		INSERT
		INTO TRC_DISC_SHC
		  (
		    TR_NO,
		    SHC,
		    SHC2,
		    SHC3,
		    SHC4,
		    SHC5,
		    SHC6,
		    SHC7,
		    SHC8,
		    SHC9,
		    DOC_LINE_NO,
		    BULK_ULD_YN,
		    PCS,
		    REMARKS,
		    CR_USER_ID,
		    CR_DATE,
		    LM_USER_ID,
		    LM_DATE,
		    WH_IND
		  )
		SELECT TR_NO,
		  SHC,
		  SHC2,
		  SHC3,
		  SHC4,
		  SHC5,
		  SHC6,
		  SHC7,
		  SHC8,
		  SHC9,
		  DOC_LINE_NO,
		  BULK_ULD_YN,
		  PCS,
		  REMARKS,
		  CR_USER_ID,
		  CR_DATE,
		  LM_USER_ID,
		  LM_DATE,
		  WH_IND
		FROM EXP_PMANIFEST_ULD_AWB_SHC where tr_no = #trNumber#
	</insert>
	
	<insert id="insertAllSSPDHAWBDtls" parameterClass="map">
		INSERT INTO TRC_DISC_HAWB (TR_NO,HAWB_NO,PC, WT,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE)
		select TR_NO,HAWB_NO,PC, WT,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE from EXP_PMANIFEST_ULD_AWB_HAWB where tr_no = #trNumber#
	</insert>
	
	<insert id="insertALLSSPDTagDtls" parameterClass="map">
		INSERT INTO TRC_DISC_TAG(TR_NO,TAG_NO,PC,WT,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE)
		select TR_NO,TAG_NO,PC,WT,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE from EXP_PMANIFEST_ULD_AWB_TAG where tr_no = #trNumber#
	</insert>
	
	<insert id="insertSSPDDGDtls" parameterClass="cargo.cms.trace.bo.CreateSSPDBO">
	INSERT INTO TRC_DISC_UN(TR_NO,DOC_LINE_NO,OVERPACK_ID,APIO_ID,UN_TR_NO,LOAD_QTY,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,WH_IND)
		VALUES(#trNumber#,#docLineNo#,#overpackId#,#apioId#,#unid#,#dgSSPDPcs#,#userId#,SYSDATE,#userId#,SYSDATE,'')
	</insert>
	<insert id="insertALLSSPDDGDtls" parameterClass="map">
		INSERT INTO TRC_DISC_UN(TR_NO,DOC_LINE_NO,OVERPACK_ID,APIO_ID,UN_TR_NO,LOAD_QTY,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,WH_IND)
		select TR_NO,DOC_LINE_NO,OVERPACK_ID,APIO_ID,UN_TR_NO,LOAD_QTY,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,WH_IND from EXP_PMANIFEST_ULD_AWB_UN where tr_no = #trNumber#
	</insert>
	<insert id="insertforSSPDDGDtls" parameterClass="cargo.cms.trace.bo.CreateSSPDBO">
		INSERT INTO TRC_DISC_UN(TR_NO,DOC_LINE_NO,OVERPACK_ID,APIO_ID,UN_TR_NO,LOAD_QTY,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,WH_IND)
		select TR_NO,DOC_LINE_NO,OVERPACK_ID,APIO_ID,UN_TR_NO,LOAD_QTY,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,WH_IND from EXP_PMANIFEST_ULD_AWB_UN where tr_no = #trNumber# and DOC_LINE_NO = #docLineNo#
	</insert>
	<update id="updateSSPDDGDtls" parameterClass="cargo.cms.trace.bo.CreateSSPDBO">
	update exp_pmanifest_uld_awb_un set LOAD_QTY = (LOAD_QTY - #dgSSPDPcs#) where tr_no=#trNumber# and doc_line_no=#docLineNo#
	</update>
	<update id="updateforSSPDDGDtls" parameterClass="cargo.cms.trace.bo.CreateSSPDBO">
	update TRC_DISC_UN set LOAD_QTY = #dgSSPDPcs# where tr_no=#trNumber# and doc_line_no=#docLineNo#
	</update>
	<update id="updateSSPDExpFltULD" parameterClass="cargo.cms.trace.bo.CreateSSPDBO">
		update exp_flt_uld
			set man_pcs = man_pcs - NVL(#sspdPcs#,0),
				man_wt = man_wt - NVL(#sspdWt#,0),
				LM_USER_ID = #userId#,
				LM_DATE = SYSDATE,
				gross_wt = gross_wt - NVL(#sspdWt#,0),
                net_wt = (NVL(GROSS_WT,0) - NVL(TARE_WT,0))                				
			where  flt_key = #fltKey# and flt_date = TO_DATE(#fltDate#,'DDMONYY') and uld_key = #uldKey# 
	</update>
	
	<update id="updateSSPDPremanifestULD" parameterClass="cargo.cms.trace.bo.CreateSSPDBO">
		update exp_pmanifest_uld
			set 
				GROSS_WT = gross_wt - NVL(#sspdWt#,0),
				LM_USER_ID = #userId#,
				LM_DATE = SYSDATE                				
			where  flt_key = #fltKey# and flt_date = TO_DATE(#fltDate#,'DDMONYY') and ULD_BT_NO = #uldKey# 
	</update>
	
	<update id="updateSSPDPremanifestAWB" parameterClass="cargo.cms.trace.bo.CreateSSPDBO">
		update exp_pmanifest_awb
            set pman_pcs = pman_pcs - nvl(#sspdPcs#,0),
                pman_wt = pman_wt - nvl(#sspdWt#,0), 
                bulk_pcs = bulk_pcs - nvl(#sspdPcs#,0),
                bulk_wt = bulk_wt - nvl(#sspdWt#,0), 
                assigned_bulk_pcs = assigned_bulk_pcs - nvl(#sspdPcs#,0), 
                assigned_bulk_wt = assigned_bulk_wt - nvl(#sspdWt#,0), 
                LM_USER_ID = #userId#,
				LM_DATE = SYSDATE                 
            where  flt_key = #fltKey#
            and    flt_date = TO_DATE(#fltDate#,'DDMONYY')
            and    unldg_pt = #unladingPnt#
            and    awb_no = #awbNumber#
            and    awb_date = TO_DATE(#awbDate#,'DDMONYY')
	</update>
	
	<select id="checkForAnyActiveAWB"  parameterClass="cargo.cms.trace.bo.CreateSSPDBO" resultClass="java.lang.Integer">
		 select COUNT(1) from   AWB where  awb_no = #awbNumber#  AND awb_date != TO_DATE(#awbDate#,'DDMONYY') AND  AWB_CLOSED_YN  = 'N'
	</select>
	
	<update id="updateSSPDAWB" parameterClass="cargo.cms.trace.bo.CreateSSPDBO">
		UPDATE AWB
			SET PMAN_PCS     = PMAN_PCS       - NVL(#sspdPcs#,0),
			  PMAN_WT        = PMAN_WT        - NVL(#sspdWt#,0),
			  NON_PMAN_PCS   = NON_PMAN_PCS   + NVL(#sspdPcs#,0),
			  NON_PMAN_WT    = NON_PMAN_WT    + NVL(#sspdWt#,0),
			  PMAN_BULK_PCS  = PMAN_BULK_PCS  - NVL(#sspdPcs#,0),
			  PMAN_BULK_WT   = PMAN_BULK_WT   - NVL(#sspdWt#,0),
			  BLDUP_BULK_PCS = BLDUP_BULK_PCS - NVL(#sspdPcs#,0),
			  BLDUP_BULK_WT  = BLDUP_BULK_WT  - NVL(#sspdWt#,0),
			  LM_USER_ID     = #userId#,
			  LM_DATE        = SYSDATE			 
			WHERE awb_no     = #awbNumber#
			AND awb_date     = TO_DATE(#awbDate#,'DDMONYY') 
	</update>
	
	<update id="updateSSPDAWBClose" parameterClass="cargo.cms.trace.bo.CreateSSPDBO">
		UPDATE AWB
			SET LM_USER_ID     = #userId#, LM_DATE = SYSDATE, AWB_CLOSED_YN  = 'N'
			WHERE awb_no     = #awbNumber# AND awb_date = TO_DATE(#awbDate#,'DDMONYY') AND AWB_CLOSED_YN  = 'Y' 
	</update>
	
	<delete id="checkAndDeleteSSPDPmanAWB" parameterClass="cargo.cms.trace.bo.CreateSSPDBO">
		delete exp_pmanifest_awb  where  flt_key = #fltKey# and  flt_date = TO_DATE(#fltDate#,'DDMONYY') and   
		 unldg_pt = #unladingPnt# and    awb_no = #awbNumber# and    awb_date = TO_DATE(#awbDate#,'DDMONYY') and PMAN_PCS = 0		
	</delete>
	
	<delete id="deleteSspdPmanULDAWB" parameterClass="cargo.cms.trace.bo.CreateSSPDBO">
		delete exp_pmanifest_uld_awb  WHERE TR_NO = #trNumber#
	</delete>
	<delete id="deleteSspdHAWBDetails" parameterClass="cargo.cms.trace.bo.CreateSSPDBO">
		delete exp_pmanifest_uld_awb_HAWB  WHERE TR_NO = #trNumber#
	</delete>
	<delete id="deleteSspdTag" parameterClass="cargo.cms.trace.bo.CreateSSPDBO">
		delete exp_pmanifest_uld_awb_TAG  WHERE TR_NO = #trNumber#
	</delete>
	<delete id="deleteSspdDG" parameterClass="cargo.cms.trace.bo.CreateSSPDBO">
		delete exp_pmanifest_uld_awb_UN  WHERE TR_NO = #trNumber#
	</delete>
	<delete id="deleteSspdSHC" parameterClass="cargo.cms.trace.bo.CreateSSPDBO">
		delete exp_pmanifest_uld_awb_SHC  WHERE TR_NO = #trNumber#
	</delete>
	
	<insert id="sqlInsSSPDExpPmanUldAwbDel" parameterClass="cargo.cms.trace.bo.CreateSSPDBO">
		insert into EXP_PMANIFEST_ULD_AWB_DEL
			(FLT_KEY, FLT_DATE, ULD_BT_NO, UNLDG_PT, AWB_NO, AWB_DATE, 
			ASSIGNED_PCS, ASSIGNED_WT, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE, PPK_TYPE)
		values(#fltKey#, NVL(TO_DATE(#fltDate#,'DDMONYY'),sysdate), #uldKey#, #unladingPnt#, #awbNumber#, NVL(TO_DATE(#awbDate#,'DDMONYY'),sysdate), 
			#sspdPcs#, #sspdWt#, #userId#, sysdate, #userId#, sysdate, #ppkType#)  
	</insert>
				
	<select id="getSSPDInventorySeqNum" parameterClass="map" resultClass="java.lang.String">
		SELECT seq_no FROM awb_inventory WHERE 
			awb_no = #AWB# AND awb_date = TO_DATE(#AWBDATE#,'DDMONYY')
			AND NVL(LOC_CODE,'*') = NVL(#LOCATION#,'*')
			AND NVL(LSP_NO,'*')   = NVL(#LSP#,'*')
			AND NVL(ULD_KEY,'*')  = NVL(#ULD#,'*')		
	</select>
	
	<update id="updateSSPDAWBInventory" parameterClass="map">
		update awb_inventory
		            set locn_pcs = locn_pcs + NVL(#LOC_PC#,0),
		                locn_wt = locn_wt + NVL(#LOC_WT#,0),
		                lm_user_id = #USERID#,
		                lm_date = sysdate		              
		            where SEQ_NO = #SEQNO#	
	</update>
	
	
	<insert id="insertSSPDLSPInventory" parameterClass="java.util.HashMap">
	 INSERT INTO LSP_INVENTORY
			(LSP_NO, EMPTY_FLG, LOC_CODE, STRG_DATE, LOCKED, STATUS, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE,
			LSP_TYPE,ref_tr_type,REF_TR_EVENT)
		VALUES (#LSP#, 'N', #LOCATION#, SYSDATE, 'N', 'STORED', #USERID#, SYSDATE, #USERID#, 
			SYSDATE, SUBSTR(#LSP#, 0, 1),'CS','CSSPD')
	</insert>
	
	<update id="updateSSPDULDInventory" parameterClass="map">
		update uld_inventory
		            set loc_code = #LOCATION#,
		                lm_user_id = #USERID#,
		                lm_date = sysdate		              
		            where ULD_KEY = #ULD#	
	</update>
	
		
	<insert id="insertSSPDAWBInventory" parameterClass="map">
		 INSERT INTO AWB_INVENTORY
			(AWB_NO, AWB_DATE, CARR_CODE, LOCN_PCS, LOCN_WT, STRG_DATE, PPK_IND, LSP_NO, LOC_CODE, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE, SEQ_NO, ULD_KEY) 
				VALUES 
			(#AWB#, TO_DATE(#AWBDATE#,'DDMONYY'), (select carr_code from mast_awb_prefix where code = substr(#AWB#,1,3)), 
				#LOC_PC#, #LOC_WT#, SYSDATE, #PPKTYPE#, #LSP#, #LOCATION#, #USERID#, SYSDATE, #USERID#, SYSDATE, AWB_INV_SEQ.NEXTVAL, #ULD#)	
	</insert>
					
	<select id="getSSPDTracingRecord" parameterClass="map" resultClass="java.lang.String">
		select count(*) from TRC_FLT where AWB_NO = #AWB# and AWB_DATE = TO_DATE(#AWBDATE#,'DDMONYY') and
  				DCRPNCY_TYP = #D_TYPE# and (FLT_TYPE = 'E' OR FLT_TYPE = 'D') and FLT_KEY = #FLTKEY# and FLT_DATE = TO_DATE(#FLTDATE#,'DDMONYY')	
	</select>	
			
	<select id="getTracingAWBRecord" parameterClass="map" resultClass="java.lang.String">
		select count(*) from TRC_AWB where AWB_NO = #AWB# and AWB_DATE = TO_DATE(#AWBDATE#,'DDMONYY') 	
	</select>
	
	<insert id="insertAWBSSPDTrcRecord" parameterClass="map">
		 INSERT INTO TRC_AWB
			(AWB_NO,AWB_DATE,CARRIER,ORIG,DEST,PCS,WGT,SHIPPER_CODE,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,AWB_TYPE,IMG_TRANS_ID,CONTENT,SHPR_NAME,CNSGN_CODE,CNSGN_NAME)
			(SELECT awb_no,awb_date,carr_code,orig,dest,pcs,wt,shpr_code,#USERID#,sysdate,#USERID#,sysdate,awb_type,null,content,SHIPPER_NAME,
    			(select code from cust_company where code_desc = (SELECT CSGNE_NAME from EXP_CAR where AWB_NO = #AWB# AND AWB_DATE = TO_DATE(#AWBDATE#,'DDMONYY') and rownum=1)) consgnCode,
    			(SELECT CSGNE_NAME from EXP_CAR where AWB_NO = #AWB# AND AWB_DATE = TO_DATE(#AWBDATE#,'DDMONYY')  and rownum=1) 
    				from awb where awb_no = #AWB# and UPPER(AWB_DATE) = TO_DATE(#AWBDATE#,'DDMONYY') ) 	
	</insert>
	
	<insert id="insertSSPDFLtTrcRecord" parameterClass="map">
		INSERT INTO TRC_FLT
		(AWB_NO,AWB_DATE,DCRPNCY_TYP,DCRPNCY_STS,AWB_PRFX,FLT_TYPE,FLT_KEY,FLT_DATE,DCRPNCY_PCS,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,TRF_WOS_YN)
			VALUES
		(#AWB#,TO_DATE(#AWBDATE#,'DDMONYY'),#D_TYPE#,#D_STS#,(select carr_code from mast_awb_prefix where code = substr(#AWB#,1,3)),'E',
			#FLTKEY#,TO_DATE(#FLTDATE#,'DDMONYY'),NVL(#PC#,'0'),#USERID#,sysdate,#USERID#,sysdate,'Y')	
	</insert>
	
	<update id="updateSSPDHAWBDtls" parameterClass="cargo.cms.trace.bo.CreateSSPDBO">
		update exp_pmanifest_uld_awb_HAWB set  PC = (PC - nvl(#sspdHawbPcs#,0)) , LM_USER_ID = #userId#, LM_DATE = SYSDATE where tr_no = #trNumber# and HAWB_NO = #hawbNo#
	</update>
	
	<update id="updateSSPDTagDtls" parameterClass="cargo.cms.trace.bo.CreateSSPDBO">
		update exp_pmanifest_uld_awb_TAG set PC = (PC - nvl(#sspdTagPcs#,0))  , LM_USER_ID = #userId#, LM_DATE = SYSDATE where tr_no = #trNumber#  and TAG_NO = #tagNo#
	</update>
	
	<update id= "updateSspdPmanULDAWB" parameterClass="cargo.cms.trace.bo.CreateSSPDBO">
		update exp_pmanifest_uld_awb set ASSIGNED_PCS = (ASSIGNED_PCS - nvl(#sspdPcs#,0)) , ASSIGNED_WT = (ASSIGNED_WT - nvl(#sspdWt#,0)) , LM_USER_ID = #userId#, LM_DATE = SYSDATE  where tr_no = #trNumber#
	</update>
	
	<delete id="deleteSspdHAWBDetailsIfZeroPc" parameterClass="cargo.cms.trace.bo.CreateSSPDBO">
		delete exp_pmanifest_uld_awb_HAWB WHERE TR_NO = #trNumber# and PC = 0 
	</delete>
	
	<delete id="deleteSspdTagIfZeroPc" parameterClass="cargo.cms.trace.bo.CreateSSPDBO">
		delete exp_pmanifest_uld_awb_TAG WHERE TR_NO = #trNumber# and PC = 0 
	</delete>
	
	<delete id="deleteSspdDGIfZeroPc" parameterClass="cargo.cms.trace.bo.CreateSSPDBO">
		delete exp_pmanifest_uld_awb_UN WHERE TR_NO = #trNumber# and LOAD_QTY = 0 
	</delete>
	
	
	<select id="chkSSPDULDOwnedInventory" parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT TO_CHAR(COUNT(1)) FROM uld_inventory WHERE uld_key = #uldKey# AND LOC_CODE is null
	</select>
	
	<select id="getEmptyIndForTheSSPDULD" parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT EMPTY_FLG FROM uld_inventory WHERE uld_key = #uldKey#
	</select>
	
	<!--  Delete SSPD -->
	
	<select id="getDeleteSSPDList" parameterClass="cargo.cms.trace.bo.CreateSSPDBO" resultClass="cargo.cms.trace.bo.CreateSSPDBO">	
		select hd.awb_no as awbNumber,to_char(hd.awb_date,'DDMONYY') as awbDate,hd.disc_pcs as sspdPcs,hd.disc_wt as sspdWt, hd.DISC_NO as discNum,
		( select dtl.unldg_pt from trc_disc_dtl dtl  where dtl.DISC_NO = hd.DISC_NO and  rownum = 1 ) AS unladingPnt,
		 SUBSTR(hd.awb_no,1,3)||'-'||SUBSTR(hd.awb_no,4) as awbNumberDisp, a.non_pman_pcs as nonPmanPcs,a.non_pman_wt as nonPmanWt   from trc_disc_hd hd join awb a on a.awb_no = hd.awb_no and a.awb_date = hd.awb_date
		   where	hd.flt_key = #fltKey# and hd.flt_date = to_date(#fltDate#,'DDMONYY')
		   <isNotEmpty prepend="AND" property="awbNumber">
				hd.awb_no = #awbNumber#
			</isNotEmpty>		   
	</select>
	
		
	<select id="getDeleteSSPDDetails" parameterClass="cargo.cms.trace.bo.CreateSSPDBO" resultClass="cargo.cms.trace.bo.CreateSSPDBO">
	    SELECT td.flt_key                AS fltKey,
		  TO_CHAR(td.flt_date,'DDMONYY') AS fltDate,
		  td.awb_no                      AS awbNumber,
		  SUBSTR(td.awb_no,1,3)||'-'||SUBSTR(td.awb_no,4) as awbNumberDisp ,
		  to_char(td.awb_date,'DDMONYY') AS awbDate,
		  td.unldg_pt                    AS unladingPnt,
		  td.uld_bt_no                   AS uldKey,
		  td.assigned_pcs + NVL(ua.assigned_pcs,0) AS buildUpPcs,
		  td.assigned_wt + NVL(ua.assigned_wt,0)  AS buildUpWt,
		  CASE WHEN (SELECT COUNT(1) FROM TRC_DISC_HAWB WHERE tr_no = td.tr_no ) > 0  THEN 'Y' ELSE 'N' END AS hawbInd,
		  CASE WHEN (SELECT COUNT(1) FROM TRC_DISC_TAG WHERE tr_no = td.tr_no ) > 0  THEN 'Y' ELSE 'N' END AS  tagInd,
		  CASE WHEN (SELECT COUNT(1) FROM TRC_DISC_UN WHERE tr_no = td.tr_no ) > 0   THEN 'Y'  ELSE 'N' END AS dgInd,
		  td.ASSIGNED_PCS AS sspdPcs,
		  td.assigned_wt  AS sspdWt,
		  td.tr_no        AS trNumber,
		  td.UPD_PMAN_PCS as updPmanPcs,
      	  td.UPD_PMAN_WT  as updPmanWt,    
      	  td.ENDORSED_DC_BY as endorseDCBy,
      	  to_char(td.ENDORSED_DC_DATE,'DDMONYY')  as endorseDCDate,
      	  td.PPK_TYPE as ppkType
		FROM trc_disc_dtl td
		left join exp_pmanifest_uld_awb ua ON ua.tr_no = td.tr_no and ua.uld_bt_no = td.uld_bt_no and ua.unldg_pt = td.unldg_pt  
		and ua.awb_no = td.awb_no and ua.awb_date = td.awb_date and ua.flt_key = td.flt_key and ua.flt_date = td.flt_date
	      where disc_no = #discNum# 
	</select>
		
	<select id="getStorageDetailsSSPD" parameterClass="cargo.cms.trace.bo.CreateSSPDBO" resultClass="cargo.cms.trace.bo.CreateSSPDBO">	
		  select awb_no as awbNum,to_char(awb_date,'DDMONYY') as awbDate, lsp_no as storageCSD, uld_key as storageULD, loc_code as location, locn_pcs locationPc, locn_wt locationWt,
		  	seq_no as sequence from awb_inventory where awb_no = #awbNumber# and awb_date = to_date(#awbDate#,'DDMONYY')		 
	</select>
	
	<select id="getHAWBSSPD" parameterClass="map" resultClass="cargo.cms.trace.bo.CreateSSPDBO">
		select dh.tr_no as trNumber, dh.wt as sspdHawbWt, dh.pc as sspdHawbPcs, dh.hawb_no as hawbNo, dh.wt + NVL(uah.wt,0) as hawbWeight, dh.pc + NVL(uah.pc,0)  as hawbPcs 
			from  TRC_DISC_HAWB dh 
			left join exp_pmanifest_uld_awb_hawb uah ON uah.tr_no = dh.tr_no and uah.hawb_no = dh.hawb_no
			where dh.tr_no = #trNumber#
	</select>
	
	<select id="getTagSSPD" parameterClass="map" resultClass="cargo.cms.trace.bo.CreateSSPDBO">
		select tag.pc as sspdTagPcs, tag.tag_no as tagNo, tag.tr_no as trNumber, tag.wt as sspdTagWt,  
			tag.wt + NVL(uat.wt,0) as tagWt, tag.pc + NVL(uat.pc,0)  as tagPcs 
			from  TRC_DISC_TAG tag
			left join exp_pmanifest_uld_awb_tag uat ON uat.tr_no = tag.tr_no and uat.tag_no = tag.tag_no
			where tag.tr_no = #trNumber#
	</select>
	
	
	<select id="getDelDGUNIDBuildupListForSSPD" parameterClass="map" resultClass="cargo.cms.trace.bo.CreateSSPDBO">
		select tr_no as trNumber, doc_line_no as docLineNo, un_tr_no as unid, un_tr_no as overpackApioUnid, load_qty as loadPkg, wh_ind as wgtInd
		from  TRC_DISC_UN WHERE TR_NO= #trNumber# and un_tr_no is not null and apio_id is null and overpack_id is null
	</select>
	
	<select id="getDelDistinctApioUnidListForSSPD" parameterClass="map" resultClass="cargo.cms.trace.bo.CreateSSPDBO">
		select distinct apio_id as apioUnid, apio_id as apioId from  TRC_DISC_UN WHERE TR_NO= #trNumber# and un_tr_no is not null and apio_id is not null and overpack_id is null
	</select>
	
	<select id="getDelOverPackListForSSPD" parameterClass="map" resultClass="cargo.cms.trace.bo.CreateSSPDBO">
		select distinct overpack_id  as overpackApioUnid, overpack_id  as overpackId 
			from  TRC_DISC_UN WHERE TR_NO= #trNumber# and overpack_id is not null and overpack_id like 'OP' ||'%'
	</select>
    
    <select id="getDelOverPackApioListForSSPD" parameterClass="map" resultClass="cargo.cms.trace.bo.CreateSSPDBO">
		select distinct apio_id as apioUnid, apio_id as apioId  from  TRC_DISC_UN  WHERE TR_NO= #trNumber# and overpack_id = #overpackId# and apio_id like 'API' ||'%'
	</select>
	
	<select id="getDelAPIOUNIDListForSSPD" parameterClass="map" resultClass="cargo.cms.trace.bo.CreateSSPDBO">
		select tr_no as trNumber, doc_line_no as docLineNo, un_tr_no as unid, un_tr_no as overpackApioUnid, load_qty as loadPkg, wh_ind as wgtInd
			from  TRC_DISC_UN WHERE TR_NO= #trNumber# and apio_id = #apioId#
	</select>
	
	<select id="getDelOPAPIOUNIDListForSSPD" parameterClass="map" resultClass="cargo.cms.trace.bo.CreateSSPDBO">
		select tr_no as trNumber, doc_line_no as docLineNo, un_tr_no as unid, un_tr_no as overpackApioUnid, load_qty as loadPkg, wh_ind as wgtInd
			from  TRC_DISC_UN WHERE TR_NO= #trNumber# and apio_id = #apioId#
	</select>
	
	<select id="getDelOPUNIDValues" parameterClass="map" resultClass="cargo.cms.trace.bo.CreateSSPDBO">
		select tr_no as trNumber, doc_line_no as docLineNo, un_tr_no as unid, un_tr_no as overpackApioUnid, load_qty as loadPkg, wh_ind as wgtInd
			from  TRC_DISC_UN WHERE TR_NO= #trNumber# and overpack_id = #overpackId#
	</select>
	
	<select id="findDelSSPDDGDtls" parameterClass="map" resultClass="cargo.cms.trace.bo.CreateSSPDBO">
		SELECT OVERPACK_ID AS overpackApioUnid, APIO_ID AS apioUnid,  UN_TR_NO AS unid,  LOAD_QTY AS loadPkg
				FROM exp_pmanifest_uld_awb_un WHERE TR_NO = #trNumber#
	</select>	
	
	<select id="getDelssDGList" parameterClass="map" resultClass="cargo.cms.trace.bo.CreateSSPDBO">
		select tr_no as trNumber, doc_line_no as docLineNo,OVERPACK_ID AS overpackId, APIO_ID AS apioId,  UN_TR_NO AS unid,  LOAD_QTY AS loadPkg, wh_ind as wgtInd
			from  TRC_DISC_UN WHERE TR_NO= #trNumber#
	</select>
	
	
	<select id="viewDelssDGList" parameterClass="map" resultClass="cargo.cms.trace.bo.CreateSSPDBO">	
		SELECT dun.tr_no                    AS trNumber,
		  dun.doc_line_no                   AS docLineNo,
		  dun.OVERPACK_ID                   AS overpackId,
		  dun.APIO_ID                       AS apioId,
		  dun.UN_TR_NO                      AS unid,
		  dun.LOAD_QTY + NVL(un.LOAD_QTY,0) AS loadPkg,
		  dun.LOAD_QTY                      AS dgSSPDPcs,
		  dun.wh_ind                        AS wgtInd
		FROM TRC_DISC_UN dun
		LEFT JOIN exp_pmanifest_uld_awb_un un ON un.tr_no = dun.tr_no AND un.doc_line_no = dun.doc_line_no
		WHERE dun.TR_NO = #trNumber#
	</select>
	
	
	<update id="updateDelSSPDAWB" parameterClass="map">
		UPDATE AWB
			SET PMAN_PCS     = PMAN_PCS       + NVL(#PMANPC#,0),
			  PMAN_WT        = PMAN_WT        + NVL(#PMANWT#,0),
			  NON_PMAN_PCS   = NON_PMAN_PCS   - NVL(#PMANPC#,0),
			  NON_PMAN_WT    = NON_PMAN_WT    - NVL(#PMANWT#,0),
			  PMAN_BULK_PCS  = PMAN_BULK_PCS  + NVL(#PMANPC#,0),
			  PMAN_BULK_WT   = PMAN_BULK_WT   + NVL(#PMANWT#,0),
			  BLDUP_BULK_PCS = BLDUP_BULK_PCS + NVL(#PMANPC#,0),
			  BLDUP_BULK_WT  = BLDUP_BULK_WT  + NVL(#PMANWT#,0),
			  LM_USER_ID     = #USERID#,
			  LM_DATE        = SYSDATE
			WHERE awb_no     = #AWB#
			AND awb_date     = TO_DATE(#AWBDATE#,'DDMONYY') 
	</update>
	
	
	<update id="updateDelSSPDPremanifestAWB" parameterClass="map">
		update exp_pmanifest_awb
            set pman_pcs = pman_pcs + nvl(#PMANPC#,0),
                pman_wt = pman_wt + nvl(#PMANWT#,0), 
                bulk_pcs = bulk_pcs + nvl(#PMANPC#,0),
                bulk_wt = bulk_wt + nvl(#PMANWT#,0), 
                assigned_bulk_pcs = assigned_bulk_pcs + nvl(#PMANPC#,0), 
                assigned_bulk_wt = assigned_bulk_wt + nvl(#PMANWT#,0), 
                LM_USER_ID = #USERID#,
				LM_DATE = SYSDATE                 
            where  flt_key = #FLTKEY#
            and    flt_date = TO_DATE(#FLTDATE#,'DDMONYY')
            and    unldg_pt = #UNLADG#
            and    awb_no = #AWB#
            and    awb_date = TO_DATE(#AWBDATE#,'DDMONYY')
	</update>
	
	
	<insert id="insertPMANAWBSSPD" parameterClass="map">
		 INSERT INTO exp_pmanifest_awb (flt_key,    flt_date,    unldg_pt,    awb_no,    awb_date,    bulk_pcs,    bulk_wt,    shp_type,
    		cr_user_id,    cr_date,    lm_user_id,    lm_date,    FLT_TYPE,    PMAN_PCS,    PMAN_WT, assigned_bulk_pcs , assigned_bulk_wt)
        VALUES  ( #FLTKEY#, TO_DATE(#FLTDATE#,'DDMONYY') ,    #UNLADG#,    #AWB#,  TO_DATE(#AWBDATE#,'DDMONYY') ,  NVL(#PMANPC#,0),   NVL(#PMANWT#,0),  #SHPTYPE# , 
           #USERID#,    sysdate,    #USERID#,    sysdate, #FLTTYPE#,    NVL(#PMANPC#,0), NVL(#PMANWT#,0) ,  NVL(#PMANPC#,0), NVL(#PMANWT#,0))
	</insert>
	
	<update id="delSSPDExpFltULD" parameterClass="map">
		update exp_flt_uld
			set man_pcs = man_pcs + NVL(#PMANPC#,0),
				man_wt = man_wt + NVL(#PMANWT#,0),
				LM_USER_ID = #USERID#,
				LM_DATE = SYSDATE,
				gross_wt = gross_wt + NVL(#PMANWT#,0),
                net_wt = (NVL(GROSS_WT,0) - NVL(TARE_WT,0))                				
			where  flt_key = #FLTKEY# and flt_date = TO_DATE(#FLTDATE#,'DDMONYY') and uld_key = #ULD# 
	</update>
	
	<update id="delSSPDPremanifestULD" parameterClass="map">
		update exp_pmanifest_uld
			set 
				GROSS_WT = gross_wt + NVL(#PMANWT#,0),
				LM_USER_ID = #USERID#,
				LM_DATE = SYSDATE                				
			where  flt_key = #FLTKEY# and flt_date = TO_DATE(#FLTDATE#,'DDMONYY') and ULD_BT_NO = #ULD# 
	</update>
	
	
	
	<update id="updateDELSSPDAWBInventory" parameterClass="map">
		update awb_inventory
		            set locn_pcs = locn_pcs - NVL(#LOC_PC#,0),
		                locn_wt = locn_wt - NVL(#LOC_WT#,0),
		                lm_user_id = #USERID#,
		                lm_date = sysdate		              
		            where SEQ_NO = #SEQNO#	
	</update>
		
	<update id="updateAWBCloseOnDelSSPD" parameterClass="map">
		UPDATE AWB
			  SET AWB_CLOSED_YN = 'Y',
			  lm_user_id      = #USERID#,
			  lm_date         = sysdate
			WHERE awb_no      = #AWB#
			AND awb_date      = TO_DATE(#AWBDATE#,'DDMONYY')
			AND AWB_CLOSED_YN = 'N'
			AND NOT EXISTS
			  (SELECT NULL
			    FROM awb_inventory
			    WHERE awb_no = #AWB#
			    AND awb_date = TO_DATE(#AWBDATE#,'DDMONYY')
			  )
	</update>
	
	
		
	<delete id="dleteSSPDAWBInventory" parameterClass="map">
		 delete AWB_INVENTORY where SEQ_NO = #SEQNO# and locn_pcs = 0
	</delete>
	
	
	<update id= "updateDelPremanifestULDAWB" parameterClass="cargo.cms.trace.bo.CreateSSPDBO">
		update exp_pmanifest_uld_awb set ASSIGNED_PCS = (ASSIGNED_PCS + nvl(#sspdPcs#,0)) , ASSIGNED_WT = (ASSIGNED_WT + nvl(#sspdWt#,0)) ,
			LM_USER_ID = #userId#, LM_DATE = SYSDATE  where tr_no = #trNumber# 
	</update>
	
	<insert id="insertDelPremanifestULDAWB" parameterClass="cargo.cms.trace.bo.CreateSSPDBO">
		INSERT INTO exp_pmanifest_uld_awb (FLT_KEY,FLT_DATE,UNLDG_PT,ULD_BT_NO,PPK_TYPE,AWB_NO,AWB_DATE,ASSIGNED_PCS,ASSIGNED_WT,UPD_PMAN_PCS,
			UPD_PMAN_WT,TR_TYPE,ENDORSED_DC_BY,ENDORSED_DC_DATE,TR_NO,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE)
		VALUES(#fltKey#,to_date(#fltDate#,'DDMONYY'),#unladingPnt#,#uldKey#,#ppkType#,#awbNumber#,to_date(#awbDate#,'DDMONYY'),#sspdPcs#,#sspdWt#,#updPmanPcs#,
			#updPmanWt#,'CSSPD',#endorseDCBy#,to_date(#endorseDCDate#,'DDMONYY'),#trNumber#,#userId#,SYSDATE,#userId#,SYSDATE)
	</insert>
		
	
	<update id= "updateDelSSPDHAWBDtls" parameterClass="cargo.cms.trace.bo.CreateSSPDBO">
		update EXP_PMANIFEST_ULD_AWB_HAWB set PC = (PC + nvl(#sspdHawbPcs#,0)) , LM_USER_ID = #userId#, LM_DATE = SYSDATE  where tr_no = #trNumber#  and HAWB_NO = #hawbNo#
	</update>
	
	<update id= "updateDelSSPDTagDtls" parameterClass="cargo.cms.trace.bo.CreateSSPDBO">
		update EXP_PMANIFEST_ULD_AWB_TAG set PC = (PC + nvl(#sspdTagPcs#,0)) , LM_USER_ID = #userId#, LM_DATE = SYSDATE  where tr_no = #trNumber# and TAG_NO = #tagNo#  
	</update>
	
	<update id= "updateDelSSPDDGDtls" parameterClass="cargo.cms.trace.bo.CreateSSPDBO">
		update exp_pmanifest_uld_Awb_un set load_qty = (load_qty + nvl(#loadPkg#,0)) , LM_USER_ID = #userId#, LM_DATE = SYSDATE  where tr_no = #trNumber# and doc_line_no=#docLineNo#  
	</update>
	
	<update id= "updateCreateSSPDDGDtls" parameterClass="cargo.cms.trace.bo.CreateSSPDBO">
		update exp_pmanifest_uld_Awb_un set load_qty = (load_qty - nvl(#dgSSPDPcs#,0)) , LM_USER_ID = #userId#, LM_DATE = SYSDATE  where tr_no = #trNumber# and doc_line_no=#docLineNo#  
	</update>
	
	<insert id="insertDelSSPDDGDtls" parameterClass="cargo.cms.trace.bo.CreateSSPDBO">
	INSERT INTO exp_pmanifest_uld_Awb_un(TR_NO,DOC_LINE_NO,OVERPACK_ID,APIO_ID,UN_TR_NO,LOAD_QTY,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,WH_IND)
		VALUES(#trNumber#,#docLineNo#,#overpackId#,#apioId#,#unid#,#loadPkg#,#userId#,SYSDATE,#userId#,SYSDATE,#wgtInd#)
	</insert>
	
	
	
	<insert id="insertDelSSPDHAWBDtls" parameterClass="cargo.cms.trace.bo.CreateSSPDBO">
		INSERT INTO EXP_PMANIFEST_ULD_AWB_HAWB (TR_NO,HAWB_NO,PC, WT,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE)
		VALUES(#trNumber#,#hawbNo#,#sspdHawbPcs#,#sspdHawbWt#,#userId#,SYSDATE,#userId#,SYSDATE)
	</insert>
	
	<insert id="insertDelSSPDTagDtls" parameterClass="cargo.cms.trace.bo.CreateSSPDBO">
		INSERT INTO EXP_PMANIFEST_ULD_AWB_TAG (TR_NO,TAG_NO,PC,WT,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE)
		VALUES(#trNumber#,#tagNo#,#sspdTagPcs#,#sspdTagWt#,#userId#,SYSDATE,#userId#,SYSDATE)
	</insert>
	
	<insert id="insertDELSSPDSHCDtls" parameterClass="cargo.cms.trace.bo.CreateSSPDBO">
		INSERT
			INTO EXP_PMANIFEST_ULD_AWB_SHC
			  (
			    TR_NO,
			    SHC,
			    SHC2,
			    SHC3,
			    SHC4,
			    SHC5,
			    SHC6,
			    SHC7,
			    SHC8,
			    SHC9,
			    DOC_LINE_NO,
			    BULK_ULD_YN,
			    PCS,
			    REMARKS,
			    CR_USER_ID,
			    CR_DATE,
			    LM_USER_ID,
			    LM_DATE,
			    WH_IND
			  )
			SELECT TR_NO,
			  SHC,
			  SHC2,
			  SHC3,
			  SHC4,
			  SHC5,
			  SHC6,
			  SHC7,
			  SHC8,
			  SHC9,
			  DOC_LINE_NO,
			  BULK_ULD_YN,
			  PCS,
			  REMARKS,
			  CR_USER_ID,
			  CR_DATE,
			  LM_USER_ID,
			  LM_DATE,
			  WH_IND
			FROM TRC_DISC_SHC where tr_no = #trNumber#
	</insert>
	
	
	<delete id="delSspdUN" parameterClass="java.lang.String">
		delete TRC_DISC_UN  WHERE TR_NO IN (select tr_no from TRC_DISC_DTL where DISC_NO  = #discNum#)
	</delete>
	
	<delete id="delSspdHAWB" parameterClass="java.lang.String">
		delete TRC_DISC_HAWB  WHERE TR_NO IN (select tr_no from TRC_DISC_DTL where DISC_NO  = #discNum#)
	</delete>
	
	<delete id="delSspdTAG" parameterClass="java.lang.String">
		delete TRC_DISC_TAG  WHERE TR_NO IN (select tr_no from TRC_DISC_DTL where DISC_NO  = #discNum#)
	</delete>
	
	<delete id="delSspdSHC" parameterClass="java.lang.String">
		delete TRC_DISC_SHC  WHERE TR_NO IN (select tr_no from TRC_DISC_DTL where DISC_NO  = #discNum#)
	</delete>
	
	<delete id="delSspdDtl" parameterClass="java.lang.String">
		delete TRC_DISC_DTL where DISC_NO  = #discNum#
	</delete>
	
	<delete id="delSspdHD" parameterClass="java.lang.String">
		delete TRC_DISC_HD where DISC_NO  = #discNum#
	</delete>
	
	<select id="sqlgetLocCodeforSSPDLSP"  parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT LOC_CODE FROM LSP_INVENTORY WHERE LSP_NO = #lspNo#
	</select>	
		
	<update id="updateSSPDLspEmptyFlag" parameterClass="java.lang.String">
		UPDATE LSP_INVENTORY SET EMPTY_FLG = 'Y' WHERE LSP_NO = #storageCSD# AND EMPTY_FLG = 'N'
	</update>
	
	<update id="updateSSPDUldEmptyFlag" parameterClass="java.lang.String">
		UPDATE ULD_INVENTORY SET EMPTY_FLG = 'Y' WHERE ULD_KEY = #storageULD# AND EMPTY_FLG = 'N'
	</update>
	
</sqlMap>