<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

	<!-- This XML file will hold only the queries which would be used for Billing module  -->
	<!-- Added by Ranjith Kumar R on  29-Apr-2011 -->
<sqlMap namespace="BillingModule">

	<select id="sqlMasteCheckExstngCode" parameterClass="java.lang.String"  resultClass="java.lang.Integer">
		SELECT COUNT(1) 
		FROM BILL_SVC_MASTER 
		WHERE SVC_CODE=#srvcCode#
	</select>
	
	<select id="sqlMasteCheckExstngName" parameterClass="cargo.cms.billing.bo.ServiceChargesBO"  resultClass="java.lang.Integer">
		SELECT COUNT(1) 
		FROM BILL_SVC_MASTER 
		WHERE SVC_NAME=#srvcName#
		<![CDATA[
		AND SVC_CODE<>#srvcCode#
		]]>
	</select>
	
	
	<select id="sqlMasteCheckValidItem" parameterClass="cargo.cms.billing.bo.ServiceChargesBO"  resultClass="java.lang.Integer">
		SELECT COUNT(1) 
		FROM BILL_ITM_MASTER 
		WHERE ITM_CODE=#itemCode#
		AND NVL(ITM_CODE_SFX,'*') = NVL(#itemCodeSuffx#,'*')
		AND nvl(SRVC_IND,'N') = 'Y'
	</select>
	
	<select id="sqlMasteCheckExstngItem" parameterClass="cargo.cms.billing.bo.ServiceChargesBO"  resultClass="java.lang.String">
		
		SELECT SVC_CODE 
		FROM BILL_SVC_MASTER 
		WHERE ITM_CODE=#itemCode#
	    AND NVL(ITM_CODE_SFX,'*') = NVL(#itemCodeSuffx#,'*')
 	<![CDATA[
		AND SVC_CODE<>#srvcCode#
	]]>
	</select>
	
	
	<insert id="sqlCreateServiceMaster"  parameterClass="cargo.cms.billing.bo.ServiceChargesBO">
	Insert into BILL_SVC_MASTER
	(SVC_CODE,
	SVC_NAME,
	ITM_CODE,
	ITM_CODE_SFX,
	CHARGE_TO,
	UOM,
	USER_CREATED,
	CR_USER_ID,
	CR_DATE,
	LM_USER_ID,
	LM_DATE)
	values (#srvcCode#,
	#srvcName#,
	#itemCode#,
	#itemCodeSuffx#,
	#chrgTo#,
	#uom#,
	'Y',
	#userID#,
	sysdate,
	#userID#,
	sysdate)
	</insert>

<!--  Maintain Service Master :: Ranjith :: Starts -->
	<select id="sqlMaintainServiceMasterSearch" parameterClass="cargo.cms.billing.bo.ServiceChargesBO"
		resultClass="cargo.cms.billing.bo.ServiceChargesBO">
		SELECT SVC_CODE srvcCode,SVC_NAME srvcName,ITM_CODE	itemCode,ITM_CODE_SFX itemCodeSuffx,CHARGE_TO chrgTo,UOM uom,USER_CREATED userCreated FROM BILL_SVC_MASTER
		WHERE nvl(USER_CREATED,'N')= 'Y'
		<isNotEmpty property="srvcName">
			AND	SVC_NAME = #srvcName#
		</isNotEmpty>
		<isNotEmpty property="chrgTo">
			AND	CHARGE_TO = #chrgTo#
      	</isNotEmpty>
      	 Order By SVC_CODE
	</select>
	
	<delete id="sqlDeleteServiceMaster"  parameterClass="cargo.cms.billing.bo.ServiceChargesBO">
		DELETE FROM BILL_SVC_MASTER WHERE SVC_CODE = #srvcCode# AND SVC_NAME = #srvcName#
	</delete>
	
	<update id="sqlUpdateServiceMaster"  parameterClass="cargo.cms.billing.bo.ServiceChargesBO">
			UPDATE BILL_SVC_MASTER
			SET
			SVC_NAME = #srvcName#,
			ITM_CODE = #itemCode#,
			ITM_CODE_SFX = #itemCodeSuffx#,
			CHARGE_TO = #chrgTo#,
			UOM = #uom#,
			USER_CREATED = 'Y' 
			WHERE SVC_CODE = #srvcCode#
	</update>
	
	<select id="sqlGetSrvcCode" parameterClass="java.lang.String"
		resultClass="java.lang.String">
		SELECT SVC_CODE FROM BILL_SVC_MASTER WHERE SVC_NAME = #srvcName#
	</select>
	
	<select id="sqlMaintainServiceMasterSearchAfterUpdate" parameterClass="cargo.cms.billing.bo.ServiceChargesBO"
		resultClass="cargo.cms.billing.bo.ServiceChargesBO">
		SELECT SVC_CODE srvcCode,SVC_NAME srvcName,ITM_CODE	itemCode,ITM_CODE_SFX itemCodeSuffx,CHARGE_TO chrgTo,UOM uom,USER_CREATED userCreated FROM BILL_SVC_MASTER
		WHERE nvl(USER_CREATED,'N')= 'Y'
		<isNotEmpty property="srvcCode">
			AND	SVC_CODE = #srvcCode#
		</isNotEmpty>
		<isNotEmpty property="chrgTo">
			AND	CHARGE_TO = #chrgTo#
      	</isNotEmpty>
      	 Order By SVC_CODE
	</select>
	
<!--  Maintain Service Master :: Ranjith :: Ends -->	
	<select id="sqlRecordAjaxSrvcData" parameterClass="java.lang.String"  resultClass="java.lang.String">
		SELECT CHARGE_TO||'/'|| UOM FROM BILL_SVC_MASTER WHERE SVC_NAME = #srvcName#
	</select>
	
   <select id="sqlValidatePartyName" parameterClass="cargo.cms.billing.bo.ServiceChargesBO"  resultClass="java.lang.Integer">
   SELECT COUNT(1) FROM CUST_COMPANY WHERE CODE_DESC  = #partyName# 
   		AND ACTIVE = 'Y' AND BLACKLISTED = 'N' 
    <isEqual prepend="AND" property="chrgTo" compareValue="AGENT">
    				NVL(AGENT_YN,'N') = 'Y'
	</isEqual>
	
	<isEqual prepend="AND" property="chrgTo" compareValue="AIRLINE">
					NVL(AIRLINE_YN,'N') = 'Y'
	</isEqual> 
	
	<isEqual prepend="AND" property="chrgTo" compareValue="CONSIGNEE">
					NVL(CONS_YN,'N')='Y'
	</isEqual> 
	
	<isEqual prepend="AND" property="chrgTo" compareValue="SHIPPER">
	    			NVL(SHPR_YN,'N') = 'Y'
	</isEqual> 

	<isEqual prepend="AND" property="chrgTo" compareValue="AGENT FOR AGENT SERVICES">
    				NVL(AGENT_YN,'N') = 'Y'
	</isEqual>
	
	<isEqual prepend="AND" property="chrgTo" compareValue="INTERMODAL AGENT">
	    				NVL(AGENT_YN,'N') = 'Y'
	</isEqual>

	<isEqual prepend="AND" property="chrgTo" compareValue="HSBC">
					NVL(CONS_YN,'N')='Y'
	</isEqual>
	</select>
	

	<insert id="sqlCreateServiceRecord" parameterClass="cargo.cms.billing.bo.ServiceChargesBO">
		Insert into
		BILL_SVC_RECORD
		(SVC_ID,
		SVC_CODE,
		CUST_NO,
		QTY,
		UNIT_PRICE,
		CHRG_AMT,
		AWB_NO,
		AWB_DATE,
		CARR_CODE,
		FLT_NO,
		FLT_KEY,
		FLT_DATE,
		FLT_TYPE,
		HAWB_NO,
		RMK,
		CR_USER_ID,
		CR_DATE,
		LM_USER_ID,
		LM_DATE)
		values 
		(BILL_SVC_RECORD_SEQ.NEXTVAL,
		(SELECT SVC_CODE FROM BILL_SVC_MASTER  WHERE SVC_NAME=#srvcName#),
		(SELECT CODE FROM CUST_COMPANY  WHERE CODE_DESC=#partyName# and rownum=1),
		#qty#,
		#unitPrice#,
		#chrgAmt#,
		#awbNo#,
		(SELECT T.AWB_DATE FROM (SELECT AWB_DATE FROM AWB WHERE AWB_NO = #awbNo# ORDER BY AWB_DATE DESC) T  WHERE ROWNUM=1),
		#fltCarr#,
		#fltNo#,
		#fltKey#,
		#fltDate#,
		#fltType#,
		#hawbNo#,
		#remarks#,
		#userID#,
		sysdate,
		#userID#,
		sysdate
		)
	</insert>
	
	
		
	<select id="sqlGetServiceItemDetailsForUnitPrice" parameterClass="java.lang.String"  resultClass="java.util.HashMap">
		SELECT ITM_CODE P_ITM_CODE,
			   ITM_CODE_SFX  P_ITM_SFX
		FROM  BILL_SVC_MASTER 
		WHERE SVC_NAME =#srvcName#
	</select>
	
	<parameterMap class="map" id="srvcUnitPrcMap">
	<parameter property="V_UP" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
  	<parameter property="P_ITM_CODE"      jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
  	<parameter property="P_ITM_SFX"  jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
  	<parameter property="P_LIMIT" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
 	</parameterMap> 
 	<procedure id="sqlGetUnitPrice" parameterMap="srvcUnitPrcMap" >
  		{? = call pkg_calculate.GET_UNIT_PRICE(?,?,?)}
	 </procedure>
		
	<select id="sqlMaintainServiceRecordSearch" parameterClass="cargo.cms.billing.bo.ServiceChargesBO"  resultClass="cargo.cms.billing.bo.ServiceChargesBO">
		SELECT BSR.SVC_ID srvcId,
		BSM.SVC_NAME srvcName,
		(SELECT CODE_DESC FROM CUST_COMPANY  WHERE CODE=BSR.CUST_NO and rownum=1) partyName,
		BSR.CUST_NO partyCode,
		BSR.QTY qty,
		SUBSTR(TRIM(BSR.AWB_NO),1,3) awbPrfx,
		SUBSTR(TRIM(BSR.AWB_NO),4) awbSufx,
		BSR.AWB_NO awbNo,
		TO_CHAR(BSR.AWB_DATE,'DDMONYY') awbDate,
		BSR.HAWB_NO hawbNo, 
		BSR.FLT_KEY fltKey,
		BSR.FLT_TYPE fltType,
		BSR.CHRG_AMT chrgAmt,
		to_char(BSR.FLT_DATE,'DDMONYY') fltDate,
		<!-- (SELECT CARR_CODE FROM FLT_OPR WHERE FLT_KEY=BSR.FLT_KEY AND to_char(SCH_DATE,'DDMONYY') = to_char(BSR.FLT_DATE,'DDMONYY')) fltCarr,
		(SELECT SUBSTR(FLT_KEY,(select length(CARR_CODE)+1 from dual),length(FLT_KEY)) FROM FLT_OPR WHERE FLT_KEY=BSR.FLT_KEY AND to_char(SCH_DATE,'DDMONYY') = to_char(BSR.FLT_DATE,'DDMONYY') )fltNo,-->
		CARR_CODE fltCarr,
		FLT_NO fltNo,
		BSR.RMK remarks,
		BSM.UOM uom,
		BSM.CHARGE_TO chrgTo,
		BSM.ITM_CODE itemCode,
		BSM.ITM_CODE_SFX itemCodeSuffx,
		(SELECT ITM_DESC FROM BILL_ITM_MASTER WHERE ITM_CODE = BSM.ITM_CODE AND NVL(ITM_CODE_SFX,'*') = NVL(BSM.ITM_CODE_SFX,'*') ) itemDesc,
		to_char(BSR.CR_DATE,'DDMONYY HH24:MI') crDate,
		BSR.FIN_SEND_YN toFIN
		from BILL_SVC_RECORD BSR
		join BILL_SVC_MASTER BSM
		on BSR.SVC_CODE = BSM.SVC_CODE
		WHERE   to_date(to_char(BSR.CR_DATE,'DDMONYY'),'DDMONYY') BETWEEN to_date(#fromDate#,'DDMONYY') and to_date(#toDate#,'DDMONYY')
		AND BSR.VOID_USER_ID is null  
		<isNotEmpty property = "chrgTo">
		AND  BSM.CHARGE_TO = #chrgTo#
		</isNotEmpty>	
		<isNotEmpty property = "airLine">
		AND BSR.CUST_NO in (SELECT CODE FROM CUST_COMPANY  WHERE nvl(CARR_CODE,'*')=NVL(#airLine#,'*'))
		</isNotEmpty>
		<isNotEmpty property = "partyName">
		AND BSR.CUST_NO =(SELECT CODE FROM CUST_COMPANY  WHERE CODE_DESC=#partyName# and rownum=1)
		</isNotEmpty>
		<isNotEmpty property = "srvcName">
		AND BSM.SVC_NAME = #srvcName#
		</isNotEmpty>
	</select>
	
	<delete id="sqlDeleteServiceRecord"  parameterClass="cargo.cms.billing.bo.ServiceChargesBO">
		DELETE FROM BILL_SVC_RECORD WHERE SVC_ID = #srvcId# 
	</delete>
	
	<update id="sqlUpdateServiceRecord"  parameterClass="cargo.cms.billing.bo.ServiceChargesBO">
	UPDATE	BILL_SVC_RECORD
	SET	SVC_CODE =  (SELECT SVC_CODE FROM BILL_SVC_MASTER  WHERE SVC_NAME=#srvcName#),
		CUST_NO = (SELECT CODE FROM CUST_COMPANY  WHERE CODE_DESC=#partyName# and rownum=1),
		QTY = #qty#,
		UNIT_PRICE = #unitPrice#,
		CHRG_AMT = #chrgAmt#,
		AWB_NO = #awbNo#,
		AWB_DATE = (SELECT T.AWB_DATE FROM (SELECT AWB_DATE FROM AWB WHERE AWB_NO = #awbNo# ORDER BY AWB_DATE DESC) T  WHERE ROWNUM=1),
		CARR_CODE = #fltCarr#,
		FLT_NO = #fltNo#,
		FLT_KEY = #fltKey#,
		FLT_DATE =  #fltDate#,
		FLT_TYPE = #fltType#,
		HAWB_NO = #hawbNo#,
		RMK =  #remarks#,
		LM_USER_ID = #userID#,
		LM_DATE = sysdate
	WHERE 	SVC_ID = #srvcId#	 
	</update>
	
	<update id="sqlVoidServiceRecord"  parameterClass="cargo.cms.billing.bo.ServiceChargesBO">
	UPDATE	BILL_SVC_RECORD
	SET	VOID_USER_ID = #userID#,
		VOID_DATE = sysdate,
		LM_USER_ID = #userID#,
		LM_DATE = sysdate
	WHERE 	SVC_ID = #srvcId#	 
	</update>
	
	<select id="fetchTripIdForTruck" parameterClass="java.lang.String" resultClass="java.lang.String">
		select MAX(TRIP_ID) from TRUCK_TRIP where TRUCK_NO = #truckNo#
	</select>
	
		
	<select id="validHawbForAgentServices" parameterClass="cargo.cms.billing.bo.ChargeBO" resultClass="cargo.cms.billing.bo.ChargeBO">
		select AGENT_CODE hawbAgentCode,
		(select code_desc from cust_company where code = AGENT_CODE and rownum=1) hawbAgentName,  
		AWB_NO hawbAwbNo,
		SUBSTR(AWB_NO,0,3) hawbAwbPrfx,
    	SUBSTR(AWB_NO,4) hawbAwbSufx,
		to_char(AWB_DATE,'DDMONYY') hawbAwbDate from ASV_HAWB
		where HAWB_NO = #hawbNo#
		<isNotEmpty property="hawbAgentCode">
		and NVL(AGENT_CODE,'*') = NVL(#hawbAgentCode#,'*')
		</isNotEmpty>
		<isNotEmpty property="hawbAwbNo">
		and NVL(AWB_NO,'*') = NVL(#hawbAwbNo#,'*')
		</isNotEmpty>
		<isNotEmpty property="hawbAgentName">
		AND NVL(AGENT_CODE,'*') = nvl((select code from cust_company where code_desc = #hawbAgentName# and rownum=1),'*')
		</isNotEmpty>
	</select>  
	
	
	<!--  Waive Charges :: Ranjith :: Starts -->	
	<insert id="insertWaiveChargeDtls" parameterClass="cargo.cms.billing.bo.ChargeBO">
	insert into BILL_WAIVE_CHARGE
	(TR_NO,
	AWB_NO,
	AWB_DATE,
	ITM_CODE,
	ITM_CODE_SFX,
	WAVR_AMT,
	WAVR_RMK,
	WAVR_FORM_NO,
	CR_USER_ID,
	CR_DATE,
	LM_USER_ID,
	LM_DATE)
	values (
	BILL_WAIVE_CHARGE_SEQ.NEXTVAL,
	#awbNo#,
	to_date(#awbDate#,'DDMONYY'),
	#itemCode#,
	#itemCodeSfx#,
	#waverAmt#,
	#waverRmk#,
	#waverFormNumber#,
	#lmUserId#,
	sysdate,
	#lmUserId#,
	sysdate)
	</insert>
	
	<select id="isValidItemForOPS" parameterClass="map" resultClass="java.lang.Integer" >
		SELECT 
			COUNT(1)
		FROM 
			BILL_ITM_MASTER 
		WHERE
			UPPER(ITM_CODE)||'/'||UPPER(NVL(ITM_CODE_SFX,'**')) =UPPER(#itemCode#)||'/'||UPPER(NVl(#itemCodeSfx#,'**')) 	
	</select>
	
	<select id="isValidWaiveItem" parameterClass="map" resultClass="java.lang.Integer" >
		SELECT 
			COUNT(1)
		FROM 
			BILL_ITM_MASTER 
		WHERE
			UPPER(ITM_CODE)||'/'||UPPER(NVL(ITM_CODE_SFX,'**')) =UPPER(#itemCode#)||'/'||UPPER(NVl(#itemCodeSfx#,'**')) 	
			AND NVL(UPPER(WAVR_IND),'N') = 'Y'  
			<!-- AND NVL(STD_IND,'N') = 'N'  As per DDS both standard and non standard items can be waived-->
	</select>
	
	
	
	<select id="isValidAwbByInventory" parameterClass="map" resultClass="java.lang.Integer" >
		select count(1) from awb_inventory where awb_no = #AWB_NO# and awb_date=to_date(#AWB_DATE#,'DDMONYY')
	</select>
	
 	<select id="getWaiveDateList" parameterClass="java.lang.String" resultClass="cargo.cms.billing.bo.ChargeBO" >
		select to_char(AWB_DATE,'DDMONYY') awbDate from awb where awb_no = #AWB_NO#
	</select>
	
	<!--  Waive Charges :: Ranjith :: Ends -->
	
	<!--  Collect Payment :: Ranjith :: Starts -->
	
	<!--To fetch Charge For Payment By Truck-->
	<select id="fetchChargeForPaymentByTruck" parameterClass="cargo.cms.billing.bo.PaymentBO" resultClass="cargo.cms.billing.bo.ChargeBO">
		SELECT
			C.TR_NO AS trNo,
			C.AWB_NO AS awbNo,
			to_char(C.AWB_DATE,'DDMONYY') AS awbDate,
			C.SRF_NO AS srfNo, 
			C.RCL_NO AS rclNo,
			C.CUST_NO AS custNo,
			CUST_NAME AS agentName,
			C.ITM_CODE AS itemCode,
			C.ITM_CODE_SFX AS itemCodeSfx,
			C.ITM_DESC AS itemDesc,
			C.REV_IND AS revInd,
			C.CASH_IND AS cashInd,
			C.CHRG_AMT AS chargeAmount,
			C.PAID_AMT_CASH AS paidAmtCash,
			C.PAID_AMT_CREDIT AS paidAmtCredit,
			C.ULD_KEY AS uldNo,
			C.REMARKS AS chargeRemarks,
			(select carr_code from awb where awb_no = c.awb_no and awb_date = c.awb_date) as carrier,
			C.QTY qty,
      		C.UOM uom
		FROM 
			BILL_CHARGE_DTL C
		WHERE
			(C.TRUCK_NO=#truckNo#  OR C.SRF_NO in  (SELECT ISF.SRF_NO FROM IMP_SRF ISF 
                JOIN IMP_TRUCK_SRF  ITS ON ISF.SRF_NO = ITS.SRF_NO  AND  ISF.SRF_EXPY_DATE > SYSDATE
                JOIN TRUCK_TRIP TT ON ITS.TRIP_ID = TT.TRIP_ID
                AND TT.TRUCK_NO = #truckNo# AND TT.CLOSED = 'N'))
			AND C.STATUS='PENDING'
			AND C.VOID_IND='N'
			AND (C.WAVR_IND='N' OR (C.WAVR_IND='Y' AND C.WAVR_DONE='Y')) ORDER BY C.AWB_NO,C.ITM_CODE
	</select>
	
	<!--To fetch Charge For Payment By AWB-->
	<select id="fetchChargeForPaymentByAWB" parameterClass="cargo.cms.billing.bo.PaymentBO" resultClass="cargo.cms.billing.bo.ChargeBO">
		SELECT
			C.TR_NO AS trNo,
			C.AWB_NO AS awbNo,
			to_char(C.AWB_DATE,'DDMONYY') AS awbDate,
			C.SRF_NO AS srfNo, 
			C.RCL_NO AS rclNo,
			C.ULD_KEY AS uldNo,
			C.CUST_NO AS custNo,
			CUST_NAME AS agentName,
			C.ITM_CODE AS itemCode,
			C.ITM_CODE_SFX AS itemCodeSfx,
			C.ITM_DESC AS itemDesc,
			C.REV_IND AS revInd,
			C.CASH_IND AS cashInd,
			C.CHRG_AMT AS chargeAmount,
			C.PAID_AMT_CASH AS paidAmtCash,
			C.PAID_AMT_CREDIT AS paidAmtCredit,
			awb.AWB_TYPE AS awbType,
			C.REMARKS AS chargeRemarks,
			(select carr_code from awb where awb_no = c.awb_no and awb_date = c.awb_date) as carrier,
			C.QTY qty,
      		C.UOM uom
		FROM 
			BILL_CHARGE_DTL C 
			join awb awb on awb.awb_no = C.awb_no and awb.awb_date = C.awb_date
			LEFT JOIN IMP_SRF S ON S.SRF_NO=C.SRF_NO
		WHERE
			C.AWB_NO=#awbNo#
			<isNotEmpty property="awbDate">			
				AND C.AWB_DATE=TO_DATE(#awbDate#, 'DDMONYY') 
			</isNotEmpty>
			AND C.STATUS='PENDING'
			AND C.VOID_IND='N'
			AND NVL(S.SRF_EXPY_DATE,sysdate) >= sysdate
			AND ( C.WAVR_IND='N' OR (C.WAVR_IND='Y' AND C.WAVR_DONE='Y') ) ORDER BY C.AWB_NO,C.ITM_CODE
	</select>
	
	<select id="fetchBundlePaymentDtls" parameterClass="cargo.cms.billing.bo.PaymentBO" resultClass="cargo.cms.billing.bo.PaymentBO">
	SELECT HD.BUNDLE_REF_NO as refNum,TO_CHAR(HD.VALIDITY_DATE,'DDMONYY') as validityDate,HD.PAYMENT_CODE as existPaymentCode,
	trim(to_char(NVL(DTL.COMMITTED_AMT - USED_AMT,0),'999999999999999999999999999999999999.99')) as remainAmt,TO_CHAR(SYSDATE,'DDMONYY') AS paymentDate 
	FROM BILL_BUNDLE_PAYMENT_HD HD,	BILL_BUNDLE_PAYMENT_DTL DTL
	WHERE DTL.BUNDLE_REF_NO = HD.BUNDLE_REF_NO
	AND HD.STATUS = 'COMMITTED'
	AND TO_DATE(TO_CHAR(HD.VALIDITY_DATE,'DDMONYY'),'DDMONYY') = TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY')
	AND DTL.AWB_NO = #awbNo#
	AND DTL.AWB_DATE = #awbDate#
	</select>
	
	<select id="getBundlePaymentAWBHelpList"  parameterClass="cargo.cms.billing.bo.PaymentBO" resultClass="cargo.cms.afw.bo.MasterBO">
		SELECT HD.AWB_NO AS codeId, HD.AWB_NO AS codeDesc FROM EXP_RCL_HD HD, EXP_RCL_DTL DTL
		WHERE DTL.RCL_NO = HD.RCL_NO AND DTL.ULD_KEY = #uldNo# AND HD.AWB_NO IS NOT NULL
    	AND EXISTS (SELECT NULL FROM BILL_BUNDLE_PAYMENT_HD BUNDLEHD,   BILL_BUNDLE_PAYMENT_DTL BUNDLEDTL  WHERE BUNDLEDTL.BUNDLE_REF_NO = BUNDLEHD.BUNDLE_REF_NO  
    	AND BUNDLEHD.STATUS = 'COMMITTED' AND TO_DATE(TO_CHAR(BUNDLEHD.VALIDITY_DATE,'DDMONYY'),'DDMONYY') = TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY')
                AND BUNDLEDTL.AWB_NO = HD.AWB_NO AND BUNDLEDTL.AWB_DATE = HD.AWB_DATE)
		UNION
		SELECT DTL.AWB_NO AS codeId, DTL.AWB_NO AS codeDesc FROM EXP_RCL_HD HD, EXP_RCL_BRKDN DTL
		WHERE DTL.RCL_NO = HD.RCL_NO AND HD.ULD_KEY = #uldNo# AND DTL.AWB_NO is not null
    	AND EXISTS (SELECT NULL FROM BILL_BUNDLE_PAYMENT_HD BUNDLEHD,   BILL_BUNDLE_PAYMENT_DTL BUNDLEDTL  WHERE BUNDLEDTL.BUNDLE_REF_NO = BUNDLEHD.BUNDLE_REF_NO   
    	AND BUNDLEHD.STATUS = 'COMMITTED' AND TO_DATE(TO_CHAR(BUNDLEHD.VALIDITY_DATE,'DDMONYY'),'DDMONYY') = TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY')
                AND BUNDLEDTL.AWB_NO = DTL.AWB_NO AND BUNDLEDTL.AWB_DATE = DTL.AWB_DATE)	  
	</select>
	
	<select id="getBundlePaymentAWBList"  parameterClass="cargo.cms.billing.bo.PaymentBO" resultClass="cargo.cms.billing.bo.PaymentBO">
		SELECT HD.AWB_NO as awbNo,TO_CHAR(HD.AWB_DATE,'DDMONYY') as awbDate FROM EXP_RCL_HD HD, EXP_RCL_DTL DTL
		WHERE DTL.RCL_NO = HD.RCL_NO AND DTL.ULD_KEY = #uldNo# AND HD.AWB_NO IS NOT NULL
		AND EXISTS (SELECT NULL FROM BILL_BUNDLE_PAYMENT_HD BUNDLEHD,   BILL_BUNDLE_PAYMENT_DTL BUNDLEDTL  WHERE BUNDLEDTL.BUNDLE_REF_NO = BUNDLEHD.BUNDLE_REF_NO   
		AND BUNDLEHD.STATUS = 'COMMITTED' AND TO_DATE(TO_CHAR(BUNDLEHD.VALIDITY_DATE,'DDMONYY'),'DDMONYY') = TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY')
                AND BUNDLEDTL.AWB_NO = HD.AWB_NO AND BUNDLEDTL.AWB_DATE = HD.AWB_DATE)
		UNION
		SELECT DTL.AWB_NO as awbNo,TO_CHAR(DTL.AWB_DATE,'DDMONYY') as awbDate FROM EXP_RCL_HD HD, EXP_RCL_BRKDN DTL
		WHERE DTL.RCL_NO = HD.RCL_NO AND HD.ULD_KEY = #uldNo# AND DTL.AWB_NO is not null
		AND EXISTS (SELECT NULL FROM BILL_BUNDLE_PAYMENT_HD BUNDLEHD,   BILL_BUNDLE_PAYMENT_DTL BUNDLEDTL  WHERE BUNDLEDTL.BUNDLE_REF_NO = BUNDLEHD.BUNDLE_REF_NO  
		AND BUNDLEHD.STATUS = 'COMMITTED' AND TO_DATE(TO_CHAR(BUNDLEHD.VALIDITY_DATE,'DDMONYY'),'DDMONYY') = TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY')
                AND BUNDLEDTL.AWB_NO = DTL.AWB_NO AND BUNDLEDTL.AWB_DATE = DTL.AWB_DATE)	  
	</select>
	<update id="updateBundlePaymentDetailsinInvoiveHD" parameterClass="cargo.cms.billing.bo.PaymentBO">
		UPDATE BILL_INV_HD SET BUNDLE_REF_NO = #refNum# WHERE INV_NO = #bundleInvoice#
	</update>
	<update id="updateBundlePaymentDetails" parameterClass="cargo.cms.billing.bo.PaymentBO">
		UPDATE BILL_BUNDLE_PAYMENT_DTL SET USED_AMT = NVL(USED_AMT,0)+#cash# WHERE AWB_NO=#bundleAWBNo# AND AWB_DATE=#bundleAWBDate# AND BUNDLE_REF_NO=#refNum#
	</update>
	
	<insert id="insertBundlePaymentHistory" parameterClass="cargo.cms.billing.bo.PaymentBO" >
	INSERT INTO BILL_BUNDLE_PAYMENT_HIS (TR_NO,BUNDLE_REF_NO, AWB_NO, AWB_DATE , TRANSACTION_AMT ,INVOICE_NO,SRF_NO,RCL_NO,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE) VALUES 
	(BILL_BUNDLE_PAYMENT_HIS_SEQ.nextval,#refNum#,#bundleAWBNo#,#bundleAWBDate#,#cash#,#bundleInvoice#,#srfNo#,#rclNo#,#crUserId#,SYSDATE,#crUserId#,SYSDATE)
	</insert>
	
	<!--To fetch Charge For Payment By SRF-->
	<select id="fetchChargeForPaymentBySRF" parameterClass="cargo.cms.billing.bo.PaymentBO" resultClass="cargo.cms.billing.bo.ChargeBO">
			SELECT
			C.TR_NO AS trNo,
			C.AWB_NO AS awbNo,
			to_char(C.AWB_DATE,'DDMONYY') AS awbDate,
			C.SRF_NO AS srfNo, 
			C.RCL_NO AS rclNo,
			C.CUST_NO AS custNo,
			CUST_NAME AS agentName,
			C.ITM_CODE AS itemCode,
			C.ITM_CODE_SFX AS itemCodeSfx,
			C.ITM_DESC AS itemDesc,
			C.REV_IND AS revInd,
			C.CASH_IND AS cashInd,
			C.CHRG_AMT AS chargeAmount,
			C.PAID_AMT_CASH AS paidAmtCash,
			C.PAID_AMT_CREDIT AS paidAmtCredit,
			C.ULD_KEY AS uldNo,
			C.REMARKS AS chargeRemarks,
			(select carr_code from awb where awb_no = c.awb_no and awb_date = c.awb_date) as carrier,
			C.QTY qty,
      		C.UOM uom
		FROM 
			BILL_CHARGE_DTL C  
            join awb awb on awb.awb_no = C.awb_no and awb.awb_date = C.awb_date
			JOIN IMP_SRF S ON S.SRF_NO=C.SRF_NO
		WHERE
			C.STATUS='PENDING'
			AND C.VOID_IND='N'
			<iterate prepend="AND" property="srfArray" open="(" close=")" conjunction="OR" >
                            UPPER(C.SRF_NO)= #srfArray[]#
            </iterate> 
			AND S.SRF_EXPY_DATE >= sysdate
			AND (C.WAVR_IND='N' OR (C.WAVR_IND='Y' AND C.WAVR_DONE='Y')) ORDER BY C.AWB_NO,C.ITM_CODE
	</select>
	
	<!--To fetch Charge For Payment By RCL-->
	<select id="fetchChargeForPaymentByRCL" parameterClass="cargo.cms.billing.bo.PaymentBO" resultClass="cargo.cms.billing.bo.ChargeBO">
		SELECT
			c.TR_NO AS trNo,
			c.AWB_NO AS awbNo,
			to_char(C.AWB_DATE,'DDMONYY') AS awbDate,
			c.SRF_NO AS srfNo, 
			c.RCL_NO AS rclNo,
			c.CUST_NO AS custNo,
			c.CUST_NAME AS agentName,
			c.ITM_CODE AS itemCode,
			c.ITM_CODE_SFX AS itemCodeSfx,
			c.ITM_DESC AS itemDesc,
			c.REV_IND AS revInd,
			c.CASH_IND AS cashInd,
			c.CHRG_AMT AS chargeAmount,
			c.PAID_AMT_CASH AS paidAmtCash,
			c.PAID_AMT_CREDIT AS paidAmtCredit,
			C.ULD_KEY AS uldNo,
			C.REMARKS AS chargeRemarks,
			(select carr_code from awb where awb_no = c.awb_no and awb_date = c.awb_date) as carrier,
			C.QTY qty,
      		C.UOM uom
		FROM 
			BILL_CHARGE_DTL c 
		WHERE
			c.RCL_NO=#rclNo#
			AND c.STATUS='PENDING'
			AND c.VOID_IND='N'
			AND (C.WAVR_IND='N' OR (C.WAVR_IND='Y' AND C.WAVR_DONE='Y')) ORDER BY c.AWB_NO,c.ITM_CODE
	</select>
	
	<!--To fetch Charge For Payment By ULD Key-->
	<select id="fetchChargeForPaymentByULD" parameterClass="cargo.cms.billing.bo.PaymentBO" resultClass="cargo.cms.billing.bo.ChargeBO">
		SELECT
			c.TR_NO AS trNo,
			c.AWB_NO AS awbNo,
			to_char(c.AWB_DATE,'DDMONYY') AS awbDate,
			SRF_NO AS srfNo, 
			c.RCL_NO AS rclNo,
			c.CUST_NO AS custNo,
			c.CUST_NAME AS agentName,
			C.ITM_CODE AS itemCode,
			C.ITM_CODE_SFX AS itemCodeSfx,
			C.ITM_DESC AS itemDesc,
			C.REV_IND AS revInd,
			C.CASH_IND AS cashInd,
			C.CHRG_AMT AS chargeAmount,
			C.PAID_AMT_CASH AS paidAmtCash,
			C.PAID_AMT_CREDIT AS paidAmtCredit,			
			U.OWNER_ID AS carrier,
			C.REMARKS AS chargeRemarks,
			r.ppk_type AS ppkType,
			C.QTY qty,
      		C.UOM uom
		FROM 
			BILL_CHARGE_DTL C 
			JOIN ULD_INVENTORY U on U.ULD_KEY = C.ULD_KEY
			left join EXP_RCl_HD r on r.rcl_no = c.RCL_no
		WHERE
			C.ULD_KEY=#uldNo#
			AND C.STATUS='PENDING'
			AND C.VOID_IND='N'
			AND (C.WAVR_IND='N' OR (C.WAVR_IND='Y' AND C.WAVR_DONE='Y')) ORDER BY c.AWB_NO,c.ITM_CODE
	</select>
	
	<!--To fetch Charge For Payment By Cust No-->
	<select id="fetchChargeForPaymentByCustNo" parameterClass="cargo.cms.billing.bo.PaymentBO" resultClass="cargo.cms.billing.bo.ChargeBO">
		SELECT
			BCD.TR_NO AS trNo,
			BCD.AWB_NO AS awbNo,
			to_char(BCD.AWB_DATE,'DDMONYY') AS awbDate,
			nvl(BCD.CUST_NO,A.AGENT_CODE) AS custNo,
			NVL(BCD.CUST_NAME,A.AGENT_NAME) AS agentName,
			BCD.ITM_CODE AS itemCode,
			BCD.ITM_CODE_SFX AS itemCodeSfx,
			BCD.ITM_DESC AS itemDesc,
			BCD.REV_IND AS revInd,
			BCD.CASH_IND AS cashInd,
			BCD.CHRG_AMT AS chargeAmount,
			BCD.PAID_AMT_CASH AS paidAmtCash,
			BCD.PAID_AMT_CREDIT AS paidAmtCredit,
			BCD.ULD_KEY AS uldNo,
			BCD.SRF_NO AS srfNo,
			BCD.RCL_NO AS rclNo,
			BCD.REMARKS AS chargeRemarks,
			BCD.QTY qty,
      		BCD.UOM uom
		FROM 
			BILL_CHARGE_DTL  BCD  
     		 LEFT JOIN  AWB A ON BCD.AWB_NO = A.AWB_NO AND BCD.AWB_DATE = A.AWB_DATE
     		 LEFT JOIN IMP_SRF S ON S.SRF_NO=BCD.SRF_NO
     		 <isNotEmpty property="agentType">
     		 AND A.AWB_TYPE = #agentType#
     		 </isNotEmpty>
		<dynamic prepend="WHERE">
			<isNotEmpty prepend="AND" property="agentCustNo">
				(NVL(UPPER(BCD.CUST_NO),'**')=UPPER(#agentCustNo#)
				OR NVL(UPPER(A.AGENT_CODE),'**') = UPPER(#agentCustNo#))
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="agentName">
				(NVL(UPPER(BCD.CUST_NAME),'**')=UPPER(#agentName#)
				OR NVL(UPPER(A.AGENT_NAME),'**') = UPPER(#agentName#))
			</isNotEmpty>
			AND BCD.STATUS='PENDING'
			<!-- AND CHRG_AMT &gt; 0 -->
			AND BCD.VOID_IND='N'
			AND (BCD.WAVR_IND='N' OR (BCD.WAVR_IND='Y' AND BCD.WAVR_DONE='Y'))
      		<isNotEmpty property="agentType">
			  AND A.AWB_TYPE = #agentType#
			</isNotEmpty>
      		AND NVL(S.SRF_EXPY_DATE,sysdate) >= sysdate 
			ORDER BY BCD.AWB_NO,BCD.ITM_CODE
		</dynamic>
	</select>
	
	
		<!--To fetch Charge For Payment By HAWB No-->
	
	<select id="fetchChargeForPaymentByHawbNo" parameterClass="cargo.cms.billing.bo.PaymentBO" resultClass="cargo.cms.billing.bo.ChargeBO">
		SELECT
			C.TR_NO AS trNo,
			C.AWB_NO AS awbNo,
			to_char(C.AWB_DATE,'DDMONYY') AS awbDate,
			C.SRF_NO AS srfNo, 
			C.RCL_NO AS rclNo,
			C.HAWB_AGENT_CODE AS custNo,
			C.CUST_NAME AS agentName,
			C.ITM_CODE AS itemCode,
			C.ITM_CODE_SFX AS itemCodeSfx,
			C.ITM_DESC AS itemDesc,
			C.REV_IND AS revInd,
			C.CASH_IND AS cashInd,
			C.CHRG_AMT AS chargeAmount,
			C.CHRG_AMT AS paidAmtCash,
			C.ULD_KEY AS uldNo,
			C.REMARKS AS chargeRemarks,
			(select carr_code from awb where awb_no = c.awb_no and awb_date = c.awb_date) as carrier,	
			C.QTY qty,
      		C.UOM uom
		FROM 
			BILL_CHARGE_DTL C 
		WHERE
			NVL(HAWB_NO,'*') = NVL(#hawbNo#,'*')
			<isNotEmpty property="hawbAwbNo">
			AND	C.AWB_NO = #hawbAwbNo#
			</isNotEmpty>
			<isNotEmpty property="hawbAgentCode">
			AND	UPPER(C.HAWB_AGENT_CODE)=UPPER(#hawbAgentCode#)
			</isNotEmpty>
			<isNotEmpty property="hawbAgentName">
			AND	UPPER(C.HAWB_AGENT_CODE)=nvl((select CODE FROM CUST_COMPANY WHERE CODE_DESC = #hawbAgentName#),'*')
			</isNotEmpty>
			AND C.STATUS='PENDING'
			AND C.VOID_IND='N'
			AND (C.WAVR_IND='N' OR (C.WAVR_IND='Y' AND C.WAVR_DONE='Y')) ORDER BY C.AWB_NO,C.ITM_CODE
	</select>
	
	
	<!--To fetch Charge For Payment By VCL-->
	<select id="fetchChargeForPaymentByVCL" parameterClass="cargo.cms.billing.bo.PaymentBO" resultClass="cargo.cms.billing.bo.ChargeBO">
		SELECT
			c.TR_NO AS trNo,
			c.AWB_NO AS awbNo,
			to_char(C.AWB_DATE,'DDMONYY') AS awbDate,
			c.SRF_NO AS srfNo, 
			c.RCL_NO AS rclNo,
			c.CUST_NO AS custNo,
			c.CUST_NAME AS agentName,
			c.ITM_CODE AS itemCode,
			c.ITM_CODE_SFX AS itemCodeSfx,
			c.ITM_DESC AS itemDesc,
			c.REV_IND AS revInd,
			c.CASH_IND AS cashInd,
			c.CHRG_AMT AS chargeAmount,
			c.PAID_AMT_CASH AS paidAmtCash,
			c.PAID_AMT_CREDIT AS paidAmtCredit,
			C.ULD_KEY AS uldNo,
			C.REMARKS AS chargeRemarks,
			(select carr_code from awb where awb_no = c.awb_no and awb_date = c.awb_date) as carrier,
			C.QTY qty,
      		C.UOM uom
		FROM 
			BILL_CHARGE_DTL c 
		WHERE
			c.RCL_NO= NVL((select RCL_NO from EXP_RCL_HD where VCL_NO = #vclNo#),'*')
			AND c.STATUS='PENDING'
			AND c.VOID_IND='N'
			AND (C.WAVR_IND='N' OR (C.WAVR_IND='Y' AND C.WAVR_DONE='Y')) order by c.AWB_NO,c.ITM_CODE
	</select>
	
	<!--To fetch AWB Details By AWB No-->
	<select id="fetchAWBDetailsForChargeValues" parameterClass="cargo.cms.billing.bo.PaymentBO" resultClass="cargo.cms.billing.bo.PaymentBO">
		SELECT
			AWB_NO AS awbNo,
			AGENT_CODE AS agentCustNo,
			AGENT_NAME AS agentName,
			CARR_CODE AS carrCode,
			CATALOG AS catalog,
			TO_CHAR(AWB_DATE,'DDMONYY') AS awbDate,
			AWB_TYPE AS awbType,		
			PCS AS pcs,
  			TO_CHAR(NVL(WT,0),'99999999999999990.0') AS wt,
  			CONTENT AS content,
  			PPK_TYPE AS ppkType,
  			(NVL(SPL_CODE1,'') || ' ' || NVL(SPL_CODE2,'') || NVL(SPL_CODE3,'') || ' ' || NVL(SPL_CODE4,'') || NVL(SPL_CODE5,'') || ' ' || NVL(SPL_CODE6,'') || NVL(SPL_CODE7,'') || ' ' || NVL(SPL_CODE8,'')) AS splCode
		FROM 
			AWB
		<dynamic prepend="WHERE">			
			<isNotEmpty property="awbNo" prepend = "AND">
				AWB_NO = #awbNo#
			</isNotEmpty>
			<isNotEmpty property="awbDate"  prepend = "AND">
				AWB_DATE=TO_DATE(#awbDate#, 'DDMONYY')
			</isNotEmpty>
			<isEmpty property="awbDate"  prepend = "AND">
				 AWB_DATE = (SELECT MAX(AWB_DATE) FROM AWB WHERE AWB_NO = #awbNo#)
			</isEmpty>
			<!--
			<isNotEmpty property="awbClosed">
				AND UPPER(AWB_CLOSED_YN)=UPPER(#awbClosed#)
			</isNotEmpty>
			-->
		</dynamic>
	</select>
	<!--To fetch AAT Credit balance-->
	<!--<select id="fetchCPCTCreditBalanceParent" parameterClass="cargo.cms.billing.bo.AirlineCredit" resultClass="java.lang.Double" >
		SELECT CR_BAL 
		FROM CUST_AGENT_CREDIT 
		WHERE 
			UPPER(CUST_NO)=UPPER(#custNo#) 
			AND UPPER(CARR_GROUP)=UPPER(#carrGroup#) 
			AND (TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY') 
			&lt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') 
			&gt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') )
			AND (UPPER(CR_TYPE) = UPPER(#crType#) OR UPPER(CR_TYPE) = 'GEN')
			and nvl(upper(Status),'**') != 'VOID'
	</select>
	--><select id="fetchCPCTCreditBalanceCarr" parameterClass="cargo.cms.billing.bo.AirlineCredit" resultClass="java.lang.Double" >
		SELECT sum(CR_BAL) 
		FROM CUST_AGENT_CREDIT 
		WHERE 
			UPPER(CUST_NO)=UPPER(#custNo#) 
			AND instr( nvl(UPPER(CARR_CODE),'*'), nvl(UPPER(#carrCode#),'**') ) &gt; 0 
			AND (TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY') 
			&lt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') 
			&gt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') )
			AND (UPPER(CR_TYPE) = UPPER(#crType#) OR UPPER(CR_TYPE) = 'GEN')
			and nvl(upper(Status),'**') &lt;&gt; 'VOID'
	</select>
	<select id="fetchCPCTCreditBalance" parameterClass="cargo.cms.billing.bo.AirlineCredit" resultClass="java.lang.Double" >
		SELECT sum(CR_BAL) 
		FROM CUST_AGENT_CREDIT 
		WHERE 
			UPPER(CUST_NO)=UPPER(#custNo#) 
			and  instr( nvl(UPPER(CARR_CODE),'*'), nvl(UPPER(#carrCode#),'**') ) &gt; 0 
			AND (TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY') 
			&lt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') 
			&gt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') )
			AND (UPPER(CR_TYPE) = UPPER(#crType#) OR UPPER(CR_TYPE) = 'GEN')
			and nvl(upper(Status),'**') &lt;&gt; 'VOID'
	</select>
	
	<!--To fetch Airline Credit balance-->
	<!--<select id="fetchAirlineCreditBalanceParent" parameterClass="cargo.cms.billing.bo.AirlineCredit" resultClass="java.lang.Double" >
		SELECT CR_BAL 
		FROM CUST_AGENT_AIRL_CREDIT 
		WHERE 
		UPPER(CUST_NO)=UPPER(#custNo#)
		AND (UPPER(CR_TYPE)=UPPER(#crType#) OR UPPER(CR_TYPE) = 'GEN')
		AND UPPER(CARR_GROUP)=UPPER(#carrGroup#) 
		AND (TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY') &lt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') &gt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') )
		and nvl(upper(Status),'**') != 'VOID'
	</select>
	--><select id="fetchAirlineCreditBalanceCarr" parameterClass="cargo.cms.billing.bo.AirlineCredit" resultClass="java.lang.Double" >
		SELECT sum(CR_BAL) 
		FROM CUST_AGENT_AIRL_CREDIT 
		WHERE 
		UPPER(CUST_NO)=UPPER(#custNo#)
		AND (UPPER(CR_TYPE)=UPPER(#crType#) OR UPPER(CR_TYPE) = 'GEN')
		AND instr( nvl(UPPER(CARR_CODE),'*'), nvl(UPPER(#carrCode#),'**') ) &gt; 0 AND nvl(upper(Status),'**') &lt;&gt; 'VOID'	
		AND (TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY') &lt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') &gt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') )
	</select>
	<select id="fetchAirlineCreditBalance" parameterClass="cargo.cms.billing.bo.AirlineCredit" resultClass="java.lang.Double" >
		SELECT  sum(CR_BAL) 
		FROM CUST_AGENT_AIRL_CREDIT 
		WHERE 
		UPPER(CUST_NO)=UPPER(#custNo#) AND instr( nvl(UPPER(CARR_CODE),'*'), nvl(UPPER(#carrCode#),'**') ) = 0  AND nvl(upper(Status),'**') &lt;&gt; 'VOID'	
		AND (CARR_CODE is null and  (UPPER(CR_TYPE)=UPPER(#crType#) OR UPPER(CR_TYPE) = 'GEN'))
		AND (TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY') &lt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') &gt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') )
	</select>
	
	<!--To fetch DM Approval balance-->
	<select id="fetchDmApprovalBalance" parameterClass="cargo.cms.billing.bo.AirlineCredit" resultClass="java.lang.Double" >
		SELECT sum(CR_AMT) FROM CUST_AGENT_DM_APP 
		WHERE
		UPPER(CUST_NO)=UPPER(#custNo#)
		AND (TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY') &lt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') &gt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') )
		AND nvl(upper(Status),'**') &lt;&gt; 'VOID'
	</select>
	
	<select id="fetcHawbHeaderInfoForCollectPayment" parameterClass="cargo.cms.billing.bo.PaymentBO" resultClass="cargo.cms.billing.bo.PaymentBO" >
		SELECT ASV.HAWB_NO hawbNo, 
		AGENT_CODE hawbAgentCode,
		(SELECT CODE_DESC FROM CUST_COMPANY WHERE CODE = ASV.AGENT_CODE) hawbAgentName,
		decode(ASV.USER_CSGN_SHPR,null,(SELECT CODE_DESC FROM CUST_COMPANY WHERE CODE = NVL(ASV.CSGN_CODE,'*')), ASV.USER_CSGN_SHPR) shipperOrConsignee
		FROM ASV_HAWB ASV
		WHERE ASV.HAWB_NO  = #hawbNo#
		<isNotEmpty property= "hawbAwbNo">
		AND ASV.AWB_NO = #hawbAwbNo#
		</isNotEmpty>
		<isNotEmpty property = "hawbAgentCode">
		AND ASV.AGENT_CODE = #hawbAgentCode#
		</isNotEmpty>
		<isNotEmpty property = "hawbAgentName">
		AND ASV.AGENT_CODE = (SELECT CODE FROM CUST_COMPANY WHERE CODE_DESC = #hawbAgentName#)
		</isNotEmpty>
	</select>
	
	
	
		<!--  Collect Payment :: Ranjith :: ENDS -->
		
	<!--  Enquire Charges :: Ranjith :: Starts -->	
	<!--<select id="fetchAATCreditBalanceParent" parameterClass="java.util.HashMap" resultClass="java.lang.Double" >
	SELECT CR_BAL 
		FROM CUST_AGENT_CREDIT 
		WHERE 
			UPPER(CUST_NO)=UPPER(#custNo#) 
			AND UPPER(CARR_GROUP)=UPPER(#parentCarr#)
			AND (TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY') 
			&lt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') 
			&gt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') )
			AND UPPER(CR_TYPE) = UPPER(#catalog#) 
			and nvl(upper(Status),'**') != 'VOID'
	</select>
	--><select id="fetchAATCreditBalanceCarr" parameterClass="java.util.HashMap" resultClass="java.lang.Double" >
	SELECT sum(CR_BAL) 
		FROM CUST_AGENT_CREDIT 
		WHERE 
			UPPER(CUST_NO)=UPPER(#custNo#) 
			AND  instr( nvl(UPPER(CARR_CODE),'*'), nvl(UPPER(#carrCode#),'**') ) &gt; 0 
			AND (TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY') 
			&lt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') 
			&gt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') )
			AND UPPER(CR_TYPE) = UPPER(#catalog#) 
			and nvl(upper(Status),'**') &lt;&gt; 'VOID'
	</select>
	<!-- remove for Credit facility CR -->
	<select id="fetchAATCreditBalance" parameterClass="java.util.HashMap" resultClass="java.lang.Double" >
	SELECT sum(CR_BAL) 
		FROM CUST_AGENT_CREDIT 
		WHERE 
			UPPER(CUST_NO)=UPPER(#custNo#) and CARR_CODE is null 
			AND (TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY') 
			&lt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') 
			&gt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') )
			AND UPPER(CR_TYPE) = UPPER(#catalog#) 
			and nvl(upper(Status),'**') &lt;&gt; 'VOID'
	</select>
	
		<!--To fetch chargeds for Enquire Charges-->
	<select id="fetchEnquireCharge" parameterClass="cargo.cms.billing.bo.ChargeBO" resultClass="cargo.cms.billing.bo.ChargeBO">
		SELECT
			TR_NO AS trNo,
			AWB_NO AS awbNo,
			HAWB_NO AS hawbNo,
			CUST_NO AS custNo,
			CUST_NAME AS agentName,
			ITM_CODE AS itemCode,
			ITM_CODE_SFX AS itemCodeSfx,
			ITM_DESC AS itemDesc,
			REV_IND AS revInd,
			CASH_IND AS cashInd,
			nvl((CHRG_AMT+WAVR_AMT),0) AS chargeAmount,
			nvl(PAID_AMT_CASH,0) AS paidAmtCash,
			nvl(PAID_AMT_CREDIT,0) AS paidAmtCredit,
			STATUS AS awbStatus,
			nvl(ADJ_AMT,0) AS adjAmount,
			nvl(WAVR_AMT,0) AS waverAmt,
			REMARKS AS chargeRmk,
			QTY as quantity,
			UOM uom,
			UNIT_PRICE unitPrice
		FROM 
			BILL_CHARGE_DTL
		<dynamic prepend="WHERE">
			STATUS != 'VOID'
			<isNotEmpty property="awbNo">
				AND UPPER(AWB_NO)=UPPER(#awbNo#)
				<isNotEmpty property="awbDate">			
					AND AWB_DATE=TO_DATE(#awbDate#, 'DDMONYY') 
				</isNotEmpty>								
				AND (STATUS = 'PAID'
					or (STATUS = 'PENDING' 
						AND SRF_NO IN (SELECT SRF_NO FROM IMP_SRF 
										  WHERE (SRF_EXPY_DATE &gt; sysdate and STATUS ='ISSUED') or STATUS ='POSTED' 
				  	  					  or SRF_NO in (select SRF_NO from IMP_CDIF where VOID_USER is null)))
					or (STATUS = 'PENDING' 
					    AND WAVR_AMT > 0 AND WAVR_DONE = 'Y' 
						AND SRF_NO IN (SELECT SRF_NO FROM BILL_CHARGE_DTL WHERE STATUS = 'PAID'))
					or (STATUS = 'PENDING' AND SRF_NO IS NULL)
					)									
			</isNotEmpty>
			<isNotEmpty property="rclNo">
				AND UPPER(RCL_NO)=UPPER(#rclNo#)
			</isNotEmpty>
			<isNotEmpty property="srfNo">
				AND UPPER(SRF_NO)=UPPER(#srfNo#)
				AND (STATUS = 'PAID' or 
					(STATUS = 'PENDING' AND UPPER(SRF_NO) NOT IN (
						SELECT SRF_NO FROM IMP_SRF WHERE SRF_EXPY_DATE &lt;= sysdate)))
			</isNotEmpty>
			<isNotEmpty property="uldNo">
				AND UPPER(ULD_KEY)=UPPER(#uldNo#)
			</isNotEmpty>
			<isNotEmpty property="dateFrom">
				<isNotEmpty property="dateTo">
					AND (UPPER(CR_DATE)&gt;= TO_DATE(#dateFrom#, 'DDMONYY') AND UPPER(CR_DATE) &lt;= TO_DATE(#dateTo#, 'DDMONYY'))
				</isNotEmpty>
			</isNotEmpty>
			<isNotEmpty property="custNo">
				AND UPPER(CUST_NO)=UPPER(#custNo#)
			</isNotEmpty>
			<isNotEmpty property="agentName">
				AND UPPER(CUST_NAME)=UPPER(#agentName#)
			</isNotEmpty>
			<isNotEmpty property="truckNo">
				AND TRUCK_NO = #truckNo#
				AND (TRIP_ID = (select MAX(TRIP_ID) from TRUCK_TRIP where TRUCK_NO=#truckNo# ) OR TRIP_ID IS NULL)
			</isNotEmpty>		
			<isNotEmpty property="vclNo">
				AND UPPER(RCL_NO)=NVL((select UPPER(RCL_NO) from EXP_RCL_HD where VCL_NO=#vclNo#),'*')
			</isNotEmpty>			
		</dynamic>
	</select>	
	
	
	<select id="fetchEnquireChargeByHAWBNO" parameterClass="cargo.cms.billing.bo.ChargeBO" resultClass="cargo.cms.billing.bo.ChargeBO">
		SELECT
			TR_NO AS trNo,
			AWB_NO AS awbNo,
			HAWB_NO AS hawbNo,
			CUST_NO AS custNo,
			CUST_NAME AS agentName,
			ITM_CODE AS itemCode,
			ITM_CODE_SFX AS itemCodeSfx,
			ITM_DESC AS itemDesc,
			REV_IND AS revInd,
			CASH_IND AS cashInd,
			nvl((CHRG_AMT+WAVR_AMT),0) AS chargeAmount,
			nvl(PAID_AMT_CASH,0) AS paidAmtCash,
			nvl(PAID_AMT_CREDIT,0) AS paidAmtCredit,
			STATUS AS awbStatus,
			nvl(ADJ_AMT,0) AS adjAmount,
			nvl(WAVR_AMT,0) AS waverAmt,
			REMARKS AS chargeRmk,
			QTY as quantity,
			UOM uom,
			UNIT_PRICE unitPrice
		FROM 
			BILL_CHARGE_DTL
		<dynamic prepend="WHERE">
			STATUS != 'VOID'
			<isNotEmpty property="hawbNo">
				AND UPPER(HAWB_NO)=UPPER(#hawbNo#)
			</isNotEmpty>
			<isNotEmpty property="hawbAwbNo">
				AND UPPER(AWB_NO)=UPPER(#hawbAwbNo#)
			</isNotEmpty>
			<isNotEmpty property="hawbAgentCode">
				AND UPPER(HAWB_AGENT_CODE)=UPPER(#hawbAgentCode#)
			</isNotEmpty>
			<isNotEmpty property="hawbAgentName">
				AND UPPER(HAWB_AGENT_CODE)= NVL((select code from cust_company where UPPER(code_desc) =UPPER(#hawbAgentName#)),'*')
			</isNotEmpty>
			<isNotEmpty property="shprOrCnsgn">
				AND UPPER(HAWB_SHPR_OR_CNSGN)= UPPER(#shprOrCnsgn#)
			</isNotEmpty>
		</dynamic>
	</select>	
	<!--To check AWB No is exist or not for Enquire Charge-->
	<select id="fetchEnquireAWBCharge" parameterClass="cargo.cms.billing.bo.ChargeBO" resultClass="java.lang.String">
		SELECT TO_CHAR(COUNT(*)) 
		FROM AWB
		    <dynamic prepend="WHERE">
			 <isNotEmpty property="awbNo">
				UPPER(AWB_NO)=UPPER(#awbNo#)			  
			 </isNotEmpty>
		 </dynamic>		
	</select>	
	
	<!--To check RCL No is exist or not for Enquire Charge-->
	<select id="fetchEnquireRCLCharge" parameterClass="cargo.cms.billing.bo.ChargeBO" resultClass="java.lang.String">
		SELECT TO_CHAR(COUNT(*)) 
		FROM EXP_RCL_DTL
		    <dynamic prepend="WHERE">
			 <isNotEmpty property="rclNo">
				UPPER(RCL_NO)=UPPER(#rclNo#)			  
			 </isNotEmpty>
		 </dynamic>		
	</select>
	
	<!--To check SRF No is exist or not for Enquire Charge-->
	<select id="fetchEnquireSRFCharge" parameterClass="cargo.cms.billing.bo.ChargeBO" resultClass="java.lang.String">
		SELECT TO_CHAR(COUNT(*)) 
		FROM IMP_SRF
		    <dynamic prepend="WHERE">
			 <isNotEmpty property="srfNo">
				UPPER(SRF_NO)=UPPER(#srfNo#)			  
			 </isNotEmpty>
		 </dynamic>		
	</select>
	
	<!--To check ULD Key is exist or not for Enquire Charge-->
	<select id="fetchEnquireULDCharge" parameterClass="cargo.cms.billing.bo.ChargeBO" resultClass="java.lang.String">
		SELECT TO_CHAR(COUNT(*)) 
		FROM ULD_INVENTORY
		    <dynamic prepend="WHERE">
			 <isNotEmpty property="uldNo">
				UPPER(ULD_KEY)=UPPER(#uldNo#)			  
			 </isNotEmpty>
		 </dynamic>		
	</select>	
	
	<!--To fetch RCL details By RCL No-->
	<select id="fetchRCLDetailsByRCLNo" parameterClass="cargo.cms.billing.bo.ExpRclDtlBO" resultClass="cargo.cms.billing.bo.ExpRclDtlBO">
		SELECT
			a.RCL_NO AS rclNo,		
			a.AWB_NO AS awbNo,		
			TO_CHAR(a.AWB_DATE, 'DDMONYY') AS awbDate,		
			a.PPK_TYPE AS ppkType	,
			b.catalog catalog	
		FROM 
			EXP_RCL_HD a 
			left join awb b on a.awb_no = b.awb_no and a.awb_date = b.awb_date and b.awb_type = 'E' 
			WHERE	UPPER(RCL_NO)=UPPER(#rclNo#)
	</select>		
	
	
	
	<!-- Enquire Charges :: Ranjith :: Ends  -->
	
	<!--  Enquire Credit facility :: Ranjith :: Starts -->
	
	<select id="getAgentInfoForEnquireCreditDtls" parameterClass="map" resultClass="cargo.cms.customer.bo.MaintainCreditFecilityBO">
		SELECT
			CODE AS customerNo,		
			CODE_DESC AS companyName,		
			CO_IATA_CODE AS iataCode,
			FIN_CODE AS  finCustCode	
		FROM 
			CUST_COMPANY
			WHERE CODE_DESC = #USER_COMPANY_NAME#
			AND ACTIVE = 'Y' 
			AND AGENT_YN = 'Y' 
			AND BLACKLISTED='N'
	</select>	
	
		<!-- To fetch DM approval revenue for a given customer -->
	<select id="fetchDMApprovalDetailsForEnquire" parameterClass="java.lang.String" resultClass="cargo.cms.customer.bo.MaintainCreditFecilityBO">
	<![CDATA[
		SELECT DISTINCT
			  TR_NO AS trNo,
			  CR_AMT as dmApprovedAmt,
			  TO_CHAR(CR_EFF_DATE_FROM, 'DDMONYY') as dmDateFm,
			  TO_CHAR(CR_EFF_DATE_TO, 'DDMONYY') as dmDateTo,
			  LM_USER_ID as dmLmUserId,         
			  TO_CHAR(LM_DATE,'DDMONYY HH24:MI:SS') as dmLmDate
		FROM  CUST_AGENT_DM_APP 
		WHERE
				 UPPER(CUST_NO)=UPPER(#PARAM#)
	AND   to_date(to_char(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY') <=to_date(to_char(SYSDATE,'DDMONYY'),'DDMONYY')
    AND to_date(to_char(SYSDATE,'DDMONYY'),'DDMONYY') <= to_date(to_char(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY')	
    AND nvl(upper(Status),'**') <> 'VOID'	]]>
	</select>
	
	<!-- To fetch Credit Fecility details from CPCT   -->
	<!-- remove for credit facilty CR ,  CARR_GROUP airlineGroup-->
	<select id="fetchCreditFecilityCPCTForEnquire" parameterClass="java.lang.String" resultClass="cargo.cms.customer.bo.MaintainCreditFecilityBO">
	<![CDATA[
		SELECT DISTINCT
			  CRD.TR_NO AS trNo,
			  CRD.CUST_NO AS customerNo,
			  CRD.CR_AMT AS creditLimit,
			  NVL(CRD.CR_BAL,0)-NVL(BOOKING.CPCT_CHRG,0) AS creditBalance,
			  CRD.CR_TYPE AS type,
			  TO_CHAR(CRD.CR_EFF_DATE_FROM, 'DDMONYY') AS creditEffDateFrom,
			  TO_CHAR(CRD.CR_EFF_DATE_TO, 'DDMONYY') AS creditEffDateTo,
			 CRD. LM_USER_ID AS lmUserId,
			  TO_CHAR(CRD.LM_DATE,'DDMONYY HH24:MI:SS') as lmDate,
			  CARR_CODE airline,
			  SECURE_YN secureYn,
			  seq_no seqNo,
			  remarks remarks
		FROM  CUST_AGENT_CREDIT  CRD
		LEFT JOIN (SELECT  A.AGENT_CODE AGENT_CODE,
						   decode(A.CATALOG,'IG','Import_GEN','IO','Import_OBC','EG','Export_GEN','EO','Export_OBC') CATALOG,
	           			   SUM(BKNG.CPCT_CHRG) CPCT_CHRG
						   FROM IMP_BOOKING HD 
						   JOIN IMP_BOOKING_DTL BKNG ON HD.BOOKING_NO = BKNG.BOOKING_NO
						   join AWB A on BKNG.AWB_NO = A.AWB_NO AND BKNG.AWB_DATE = A.AWB_DATE 
						   WHERE to_date(to_char(HD.BKG_SLOT_DATE, 'DDMONYY') || to_char(HD.BKG_SLOT_FROM, '0000'),'DDMONYY HH24MI') > to_date(to_char(sysdate,'DDMONYY HH24MI'),'DDMONYY HH24MI')
						   group by A.AGENT_CODE, A.CATALOG) BOOKING
			ON CRD.CUST_NO = NVL(BOOKING.AGENT_CODE,'*') AND UPPER(CRD.CR_TYPE) = UPPER(BOOKING.CATALOG)
		WHERE nvl(upper(CRD.Status),'**') <> 'VOID' and UPPER(CRD.CUST_NO)=UPPER(#PARAM#)
		  AND to_date(to_char(CRD.CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY') <=to_date(to_char(SYSDATE,'DDMONYY'),'DDMONYY')
  		  AND to_date(to_char(SYSDATE,'DDMONYY'),'DDMONYY') <= to_date(to_char(CRD.CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY')	
		  and nvl(upper(CRD.Status),'**') != 'VOID'
  		  
  		  			 
    ]]>
	</select>
	
	<!-- To fetch Credit Fecility details from Airline List  -->
	<!-- remove for credit facilty CR CRD.CARR_GROUP AS airlineGroup, -->
	<select id="fetchCreditFecilityAIRListForEnquire" parameterClass="map" resultClass="cargo.cms.customer.bo.MaintainCreditFecilityBO">
	<![CDATA[
		SELECT DISTINCT
			  CRD.TR_NO AS trNo,
			  CRD.CUST_NO AS customerNo,
			  CRD.CR_TYPE AS type,
			  CRD.CARR_CODE AS airline,
			  CRD.CR_AMT AS creditLimit,
			  NVL(CRD.CR_BAL,0)-NVL(BOOKING.AIRL_CHRG,0) AS creditBalance,
			  TO_CHAR(CRD.CR_EFF_DATE_FROM, 'DDMONYY') AS creditEffDateFrom,
			  TO_CHAR(CRD.CR_EFF_DATE_TO, 'DDMONYY') AS creditEffDateTo,
			  CRD.LM_USER_ID AS lmUserId,
			  TO_CHAR(CRD.LM_DATE,'DDMONYY HH24:MI:SS') as lmDate,
			  SECURE_YN secureYn,
			  seq_no seqNo,
			  remarks remarks
		FROM  CUST_AGENT_AIRL_CREDIT CRD
		LEFT JOIN (SELECT A.AGENT_CODE AGENT_CODE,
						  decode(A.CATALOG,'IG','Import_GEN','IO','Import_OBC','EG','Export_GEN','EO','Export_OBC') CATALOG,
       	      			  A.CARR_CODE CARR_CODE,
       	      			  SUM(BKNG.AIRL_CHRG) AIRL_CHRG
						  FROM IMP_BOOKING HD 
						  JOIN IMP_BOOKING_DTL BKNG ON HD.BOOKING_NO = BKNG.BOOKING_NO
		                  join AWB A on BKNG.AWB_NO = A.AWB_NO AND BKNG.AWB_DATE = A.AWB_DATE 
		                  joiN FLT_OPR FLT ON BKNG.FLT_KEY = FLT.FLT_KEY AND BKNG.FLT_DATE = FLT.SCH_DATE AND FLT.FLT_TYPE = 'A'
		            	  WHERE to_date(to_char(HD.BKG_SLOT_DATE, 'DDMONYY') || to_char(HD.BKG_SLOT_FROM, '0000'),'DDMONYY HH24MI') > to_date(to_char(sysdate,'DDMONYY HH24MI'),'DDMONYY HH24MI')
						  group by A.AGENT_CODE, A.CATALOG, A.CARR_CODE)BOOKING
		ON CRD.CUST_NO = NVL(BOOKING.AGENT_CODE,'*') AND UPPER(CRD.CR_TYPE) = UPPER(BOOKING.CATALOG) AND CRD.CARR_CODE =  BOOKING.CARR_CODE
						  
		WHERE	UPPER(CRD.CUST_NO)=UPPER(#customerNo#)
			AND	 UPPER(CRD.CR_TYPE)= UPPER(#type#)
			AND   to_date(to_char(CRD.CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY') <=to_date(to_char(SYSDATE,'DDMONYY'),'DDMONYY')
  			  AND to_date(to_char(SYSDATE,'DDMONYY'),'DDMONYY') <= to_date(to_char(CRD.CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY')
  			   	AND nvl(upper(CRD.Status),'**') <> 'VOID'	
  			  	]]>
	</select>
	
	<select id="fetchAgentServApprovalDetailsForEnquire" parameterClass="java.lang.String" resultClass="cargo.cms.customer.bo.MaintainCreditFecilityBO">
		<![CDATA[
		SELECT DISTINCT
				TR_NO AS trNo,
			  	TO_CHAR(CR_EFF_DATE_FROM, 'DDMONYY') AS creditEffDateFrom,                                                                                                                                                                                                        
				TO_CHAR(CR_EFF_DATE_TO, 'DDMONYY') AS creditEffDateTo,                                                                                                                                                                                                        
				CR_AMT AS creditLimit,                                                                                                                                                                                                             
				CR_BAL AS creditBalance,
				LM_USER_ID as lmUserId,         
			  	TO_CHAR(LM_DATE,'DDMONYY HH24:MI:SS') as lmDate
		FROM  CUST_AGENT_AGT_SVC_CREDIT 
		WHERE	UPPER(CUST_NO)=UPPER(#PARAM#)
		AND   to_date(to_char(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY') <=to_date(to_char(SYSDATE,'DDMONYY'),'DDMONYY')
   			 AND to_date(to_char(SYSDATE,'DDMONYY'),'DDMONYY') <= to_date(to_char(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY')				
   			 	AND nvl(upper(Status),'**') <> 'VOID' 			
   			 ]]> 
	</select>
	
	
	<!-- remove for credit facilty CR ,  CARR_GROUP airlineGroup -->
	<select id="fetchAgentLevelCreditDetailsForEnquire" parameterClass="java.lang.String" resultClass="cargo.cms.customer.bo.MaintainCreditFecilityBO">
	<![CDATA[
		SELECT DISTINCT
			  TR_NO AS trNo,
			  CUST_NO AS customerNo,
			  CR_AMT AS agtCrdLimit,
			  CR_BAL AS agtCrdbalnce,
			  TO_CHAR(CR_EFF_DATE_FROM, 'DDMONYY') AS agtCrdEffFrom,
			  TO_CHAR(CR_EFF_DATE_TO, 'DDMONYY') AS agtCrdEffTo,
			  LM_USER_ID AS lmUserId,
			  TO_CHAR(LM_DATE,'DDMONYY HH24:MI:SS') as lmDate,
			  CARR_CODE airline,
			  SECURE_YN secureYn,
			  seq_no seqNo,
			  remarks remarks
		FROM  CUST_AGENT_LEVEL_CRD 
		WHERE
				 UPPER(CUST_NO)=UPPER(#PARAM#)
		AND   to_date(to_char(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY') <=to_date(to_char(SYSDATE,'DDMONYY'),'DDMONYY')
  		  AND to_date(to_char(SYSDATE,'DDMONYY'),'DDMONYY') <= to_date(to_char(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY')		
  		  AND nvl(upper(Status),'**') <> 'VOID'
  		  ]]>
	</select>
	
	<!--  Enquire Credit Facility :: Ranjith :: Ends -->
	
	<!--  Queries For Generate Report :: Starts :: Ranjith  -->
<select id="fetchBatchJobDetailsServiceReport" parameterClass="java.lang.String" resultClass="java.lang.String" >
		SELECT SERVER_PATH from BATCH_JOB_CONFIG where JOB_NAME=#jobName#
	</select>

	<select id="sqlBatchJobGetMaxTxMgrTimeinSecs" parameterClass="java.lang.String"  resultClass="java.lang.String">
		select rule_value from cmsrules where rule_code = 'BATCH_JOB_TX_TIME_IN_SECS'
	</select>	
	
	<select id="sqlQueryCarrierList" parameterClass="cargo.cms.common.utils.bo.BatchJobBO"	resultClass="cargo.cms.common.utils.bo.BatchJobBO">
		SELECT DISTINCT A.CODE AS carrierCode FROM MAST_CARRIER A,report_config_master B
		WHERE 1=1
		AND NVL(A.OWNED_CARR,'N') = 'Y' 
		AND instr(B.exclude_carrier, A.CODE) = 0
		<isNotEmpty property="airLine">
				and NVL(A.CODE,'*')=#airLine#
		</isNotEmpty>		
		<isNotEmpty property="batchName">
			AND B.Job_name=#batchName#
		</isNotEmpty>	
		<isNotEmpty property="batchType">
				and b.REPORT_TYPE=#batchType#
		</isNotEmpty>
		order by A.CODE
	</select>	

	<select id="sqlQueryAwbPrefixList" parameterClass="cargo.cms.common.utils.bo.BatchJobBO"	resultClass="cargo.cms.common.utils.bo.BatchJobBO">
		SELECT DISTINCT AWB_PREFIX awbPrefix
		FROM REPT_CARR_AWB_PREFIX
		WHERE CARRIER_CODE =UPPER(#airLine#)
		ORDER BY awbPrefix

	</select>	
	
<select id="fetchUnclosedFltCount" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		select DECODE(COUNT(1) ,'0','Y','N') 
		from flt_opr a,
		flt_opr_events b
		where a.tr_no=b.tr_no
		and trunc(a.act_date) between TO_DATE(#fromDate#,'DDMONYY') AND TO_DATE(#toDate#,'DDMONYY')
		and a.act_date is not null
		and a.act_time is not null
		AND B.FLT_CLS_YN='N'
		AND NVL(A.STATUS,'*') !='X'
		and a.carr_code IN (SELECT DISTINCT CODE FROM MAST_CARRIER 
        WHERE OWNED_CARR = 'Y' AND HANDLED_BY_TERMINAL= 'CPCT' 
        AND NVL(DUMMY_CARR,'N') = 'N')
		<isNotEmpty property="carrierCode">
		AND A.CARR_CODE=#carrierCode#
		</isNotEmpty>
	</select>

       <select id="getReptSequenceNumber" parameterClass="java.lang.String" resultClass="java.lang.String">
	SELECT AIRL_TONNAGE_REPT_SEQ_NO.nextval FROM DUAL
	</select>

	
	<select id="getCourierTonnagedata_Courier" parameterClass="cargo.cms.billing.report.bo.GenerateServiceReportBO" resultClass="cargo.cms.billing.report.bo.GenerateServiceReportBO">
	WITH EXP AS (SELECT AWB.AWB_NO,AWB.AWB_DATE,AWB.AWB_TYPE,SUM(PMAN.PMAN_WT) AS TONNAGEWT
        FROM AWB AWB 
        JOIN EXP_PMANIFEST_AWB PMAN ON PMAN.AWB_NO = AWB.AWB_NO AND PMAN.AWB_DATE = AWB.AWB_DATE
        JOIN FLT_OPR OPR ON  OPR.FLT_KEY = PMAN.FLT_KEY  AND OPR.SCH_DATE = PMAN.FLT_DATE AND OPR.FLT_TYPE='D'
        join FLT_OPR_EVENTS evt on evt.tr_no=OPR.tr_no 
        WHERE 1=1 AND EVT.FLT_CLS_YN='Y'
        AND opr.ACT_DATE IS NOT NULL
        AND OPR.ACT_TIME IS NOT NULL
        AND TO_CHAR(OPR.ACT_DATE,'MONYYYY')= #monthYear#
        <isNotEmpty property="airLine">
        AND OPR.CARR_CODE=#airLine#
        </isNotEmpty>
        AND decode(AWB.catalog,'EG','C','ES','C','IG','C','TG','C','TA','C','EU','M','TM','M','EO','Q','IO','Q','C') = 'C'
        AND (SELECT COUNT(1) FROM CUST_AIRL_SPL_CODE SPLCODE WHERE SPLCODE.SPL_TYPE='SPL_COURIER_SHC' AND SPLCODE.CARR_CODE = AWB.CARR_CODE
            AND (SPLCODE.SPL_CODE = AWB.SPL_CODE1 OR SPLCODE.SPL_CODE = AWB.SPL_CODE2 OR SPLCODE.SPL_CODE = AWB.SPL_CODE3 OR SPLCODE.SPL_CODE = AWB.SPL_CODE4 
            OR SPLCODE.SPL_CODE = AWB.SPL_CODE5 OR SPLCODE.SPL_CODE = AWB.SPL_CODE6 OR SPLCODE.SPL_CODE = AWB.SPL_CODE7 OR SPLCODE.SPL_CODE = AWB.SPL_CODE8 OR SPLCODE.SPL_CODE = AWB.SPL_CODE9))>0
        GROUP BY AWB.AWB_NO,AWB.AWB_DATE,AWB.AWB_TYPE),
RCL_INFO AS (
            SELECT AWB_NO,AWB_DATE,SUM(SEC_WT) AS TONNAGEWT FROM (
		        select t1.awb_no, t1.awb_date,NVL(SECCHK.SC_WT,0) SEC_WT from exp_rcl_hd t1, EXP_RCL_SEC_CHK_DTL SECCHK 
		        where SECCHK.RCL_NO = t1.RCL_NO AND t1.ppk_type in ('B', 'P') and (t1.status != 'V' and t1.status != 'R')
		        AND  NVL(t1.ACCPT_MODE,'XXX') != 'LIT' AND SECCHK.SC_ITM_CODE = 'RAGXRY'
		        union
		        select t2.awb_no, t2.awb_date,NVL(SECCHK.SC_WT,0) from exp_rcl_hd t1, exp_rcl_brkdn t2, EXP_RCL_SEC_CHK_DTL SECCHK  where SECCHK.RCL_NO = t1.RCL_NO AND t1.rcl_no = t2.rcl_no 
		        and t1.ppk_type = 'M' and (t1.status != 'V' and t1.status != 'R')
	          AND  NVL(t1.ACCPT_MODE,'XXX') != 'LIT' AND SECCHK.SC_ITM_CODE = 'RAGXRY'
            AND SECCHK.AWB_NO = T2.AWB_NO AND SECCHK.AWB_DATE = T2.AWB_DATE
			) GROUP BY AWB_NO,AWB_DATE),        
IMP AS (
SELECT AWB.AWB_NO,AWB.AWB_DATE,AWB.AWB_TYPE,SUM(SHP.MANIFEST_WT + (CASE WHEN SHP.CIR_PROC_USER IS NULL  THEN 0  ELSE CASE  WHEN SHP.CIR_PCS_TYPE = 'SL'  THEN -1 * SHP.CIR_WT   ELSE SHP.CIR_WT END  END)) AS TONNAGEWT
        FROM AWB AWB 
        JOIN IMP_CAR_SHP SHP ON SHP.AWB_NO = AWB.AWB_NO AND SHP.AWB_DATE = AWB.AWB_DATE
        JOIN FLT_OPR OPR ON  OPR.FLT_KEY = SHP.FLT_KEY  AND OPR.SCH_DATE = SHP.FLT_DATE AND OPR.FLT_TYPE='A'
        join FLT_OPR_EVENTS evt on evt.tr_no=OPR.tr_no 
        WHERE 1=1 AND EVT.FLT_CLS_YN='Y'
        AND opr.ACT_DATE IS NOT NULL
        AND OPR.ACT_TIME IS NOT NULL
        AND TO_CHAR(OPR.ACT_DATE,'MONYYYY')= #monthYear#
        <isNotEmpty property="airLine">
        AND OPR.CARR_CODE=#airLine#
        </isNotEmpty>
        AND decode(AWB.catalog,'EG','C','ES','C','IG','C','TG','C','TA','C','EU','M','TM','M','EO','Q','IO','Q','C') = 'C'
        AND (SELECT COUNT(1) FROM CUST_AIRL_SPL_CODE SPLCODE WHERE SPLCODE.SPL_TYPE='SPL_COURIER_SHC' AND SPLCODE.CARR_CODE = AWB.CARR_CODE
            AND (SPLCODE.SPL_CODE = AWB.SPL_CODE1 OR SPLCODE.SPL_CODE = AWB.SPL_CODE2 OR SPLCODE.SPL_CODE = AWB.SPL_CODE3 OR SPLCODE.SPL_CODE = AWB.SPL_CODE4 
            OR SPLCODE.SPL_CODE = AWB.SPL_CODE5 OR SPLCODE.SPL_CODE = AWB.SPL_CODE6 OR SPLCODE.SPL_CODE = AWB.SPL_CODE7 OR SPLCODE.SPL_CODE = AWB.SPL_CODE8 OR SPLCODE.SPL_CODE = AWB.SPL_CODE9))>0
        GROUP BY AWB.AWB_NO,AWB.AWB_DATE,AWB.AWB_TYPE),
JO AS (SELECT JOHD.AWB_NO,JOHD.AWB_DATE,SUM(DTL.WT) AS TONNAGEWT FROM EXP_SEC_CHK_JO JOHD, 
      EXP_SEC_CHK_JO_DTL DTL,
      AWB AWB
      WHERE AWB.AWB_NO = JOHD.AWB_NO AND AWB.AWB_DATE = JOHD.AWB_DATE AND 
      DTL.JO_NO = JOHD.JO_NO AND (DTL.SEC_CHK='RAGXRY' OR DTL.SEC_CHK='X-RAY' OR DTL.SEC_CHK='X-Ray') 
      AND decode(AWB.catalog,'EG','C','ES','C','IG','C','TG','C','TA','C','EU','M','TM','M','EO','Q','IO','Q','C') = 'C'
        AND (SELECT COUNT(1) FROM CUST_AIRL_SPL_CODE SPLCODE WHERE SPLCODE.SPL_TYPE='SPL_COURIER_SHC' AND SPLCODE.CARR_CODE = AWB.CARR_CODE
        AND (SPLCODE.SPL_CODE = AWB.SPL_CODE1 OR SPLCODE.SPL_CODE = AWB.SPL_CODE2 OR SPLCODE.SPL_CODE = AWB.SPL_CODE3 OR SPLCODE.SPL_CODE = AWB.SPL_CODE4 
        OR SPLCODE.SPL_CODE = AWB.SPL_CODE5 OR SPLCODE.SPL_CODE = AWB.SPL_CODE6 OR SPLCODE.SPL_CODE = AWB.SPL_CODE7 OR SPLCODE.SPL_CODE = AWB.SPL_CODE8 OR SPLCODE.SPL_CODE = AWB.SPL_CODE9))>0
      GROUP BY JOHD.AWB_NO,JOHD.AWB_DATE)        
        SELECT (SELECT TO_NUMBER(TRIM(to_char(NVL(SUM(TONNAGEWT),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') FROM IMP WHERE AWB_TYPE='I') AS obci ,
        (SELECT TO_NUMBER(TRIM(to_char(NVL(SUM(TONNAGEWT),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') FROM IMP WHERE AWB_TYPE='T') AS obti,
        (SELECT TO_NUMBER(TRIM(to_char(NVL(SUM(TONNAGEWT),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') FROM EXP WHERE AWB_TYPE='E') AS obce,
        (SELECT TO_NUMBER(TRIM(to_char(NVL(SUM(TONNAGEWT),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') FROM EXP WHERE AWB_TYPE='T') AS obtx,
        TO_NUMBER(TRIM(to_char(NVL(((NVL((SELECT SUM(JO.TONNAGEWT) FROM JO,EXP WHERE JO.AWB_NO = EXP.AWB_NO AND JO.AWB_DATE = EXP.AWB_DATE AND EXP.AWB_TYPE='E'),0))+(NVL((SELECT SUM(RCL_INFO.TONNAGEWT) FROM RCL_INFO,EXP WHERE RCL_INFO.AWB_NO = EXP.AWB_NO AND RCL_INFO.AWB_DATE = EXP.AWB_DATE AND EXP.AWB_TYPE='E'),0)) ),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') AS obceXray,        
        (SELECT TO_NUMBER(TRIM(to_char(NVL(SUM(JO.TONNAGEWT),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') FROM JO,EXP WHERE JO.AWB_NO = EXP.AWB_NO AND JO.AWB_DATE = EXP.AWB_DATE AND EXP.AWB_TYPE='T') AS obtxXray,
        TO_NUMBER(TRIM(to_char(NVL((NVL((SELECT SUM(JO.TONNAGEWT) FROM JO,EXP WHERE JO.AWB_NO = EXP.AWB_NO AND JO.AWB_DATE = EXP.AWB_DATE AND EXP.AWB_TYPE='E'),0)+NVL((SELECT SUM(RCL_INFO.TONNAGEWT) FROM RCL_INFO,EXP WHERE RCL_INFO.AWB_NO = EXP.AWB_NO AND RCL_INFO.AWB_DATE = EXP.AWB_DATE AND EXP.AWB_TYPE='E'),0)+NVL((SELECT SUM(JO.TONNAGEWT) FROM JO,EXP WHERE JO.AWB_NO = EXP.AWB_NO AND JO.AWB_DATE = EXP.AWB_DATE AND EXP.AWB_TYPE='T'),0)),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') AS totalXray,
        TO_NUMBER(TRIM(to_char((NVL((SELECT SUM(TONNAGEWT) FROM IMP WHERE AWB_TYPE='I'),0) + NVL((SELECT SUM(TONNAGEWT) FROM EXP WHERE AWB_TYPE='E'),0)+NVL((SELECT SUM(TONNAGEWT) FROM IMP WHERE AWB_TYPE='T'),0) + NVL((SELECT SUM(TONNAGEWT) FROM EXP WHERE AWB_TYPE='T'),0)),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') AS totalVol
        FROM DUAL
	</select>
	
	<select id="getEPHData_Courier" parameterClass="cargo.cms.billing.report.bo.GenerateServiceReportBO" resultClass="cargo.cms.billing.report.bo.GenerateServiceReportBO">
	WITH FULLDATA AS(
		 SELECT SCH_DATE SCH_DATE,ECT_HANDLER ECT_HANDLER,COUNT(ECT_HANDLER) CNTECT_HANDLER FROM (
     SELECT ECT_HANDLER,FLT_KEY,SCH_DATE FROM (
		 SELECT SPLCODE.HANDLING_AGT AS ECT_HANDLER,FLTOPR.FLT_KEY,FLTOPR.SCH_DATE FROM 
		 IMP_CAR_AWB CARAWB, IMP_CAR_SHP CARSHP, FLT_OPR FLTOPR,AWB AWB, MAST_AGENT_SPL_CODE SPLCODE
		 WHERE CARSHP.AWB_NO = CARAWB.AWB_NO AND CARSHP.AWB_DATE = CARAWB.AWB_DATE
	 	 AND FLTOPR.FLT_KEY = CARSHP.FLT_KEY AND FLTOPR.SCH_DATE = CARSHP.FLT_DATE
		 AND AWB.AWB_NO = CARAWB.AWB_NO AND AWB.AWB_DATE = CARAWB.AWB_DATE AND AWB.AWB_TYPE IN ('I')
     AND SPLCODE.CARR_CODE= AWB.CARR_CODE AND SPLCODE.AGENT_CODE = AWB.AGENT_CODE
		 AND (AWB.SPL_CODE1 = 'EPH' OR AWB.SPL_CODE2 = 'EPH' OR AWB.SPL_CODE3 = 'EPH' OR AWB.SPL_CODE4 = 'EPH' OR AWB.SPL_CODE5 = 'EPH' OR AWB.SPL_CODE6 = 'EPH' OR AWB.SPL_CODE7 = 'EPH' OR AWB.SPL_CODE8 = 'EPH' OR AWB.SPL_CODE9 = 'EPH')
     AND (AWB.SPL_CODE1 = 'COU' OR AWB.SPL_CODE2 = 'COU' OR AWB.SPL_CODE3 = 'COU' OR AWB.SPL_CODE4 = 'COU' OR AWB.SPL_CODE5 = 'COU' OR AWB.SPL_CODE6 = 'COU' OR AWB.SPL_CODE7 = 'COU' OR AWB.SPL_CODE8 = 'COU' OR AWB.SPL_CODE9 = 'COU')
		 AND FLTOPR.SCH_DATE BETWEEN TO_DATE(#fromDate#,'DDMONYY') AND TO_DATE(#toDate#,'DDMONYY'))
     GROUP BY ECT_HANDLER,FLT_KEY,SCH_DATE
   	 ) GROUP BY ECT_HANDLER,SCH_DATE)
	SELECT TO_CHAR(FLTDATE,'DDMONYY') ephDate,
	nvl((SELECT FULLDATA.CNTECT_HANDLER FROM FULLDATA WHERE FULLDATA.ECT_HANDLER='DHL' AND FULLDATA.SCH_DATE = A.FLTDATE),'0') dhlVal,
	nvl((SELECT FULLDATA.CNTECT_HANDLER FROM FULLDATA WHERE FULLDATA.ECT_HANDLER='TNT' AND FULLDATA.SCH_DATE = A.FLTDATE),'0') tntVal,
	nvl((SELECT FULLDATA.CNTECT_HANDLER FROM FULLDATA WHERE FULLDATA.ECT_HANDLER='FDX' AND FULLDATA.SCH_DATE = A.FLTDATE),'0') fedexVal
	FROM 
	(SELECT SCH_DATE FLTDATE FROM FLT_OPR WHERE SCH_DATE BETWEEN TO_DATE(#fromDate#,'DDMONYY') AND TO_DATE(#toDate#,'DDMONYY') GROUP BY SCH_DATE) 
	A ORDER BY FLTDATE
	</select>
	
	<parameterMap id="prcMap" class="map" >
		<parameter property="v_from_date" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="v_to_date" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	</parameterMap>
	
<parameterMap id="prcMapAirline" class="map" >
		<parameter property="v_from_date" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="v_to_date" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="v_carr_code" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="v_seq_no" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="v_awb_prefix" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="v_cargo_Type" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	</parameterMap>
	
         <procedure id="prc_AirlDailyTonnage" parameterMap="prcMapAirline" >
		{call PRC_AIRL_DAILY_TONNAGE_REPT(?,?,?,?,?,?)}
	</procedure>
	
	<parameterMap id="prcMap" class="map" >
		<parameter property="v_from_date" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="v_to_date" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	</parameterMap>
	<procedure id="prc_AirlDailyMailTonnage" parameterMap="prcMap" >
		{call PRC_AIRL_DAILY_MAIL_TON_REPT(?,?)}
	</procedure>
	
	<parameterMap id="prcMap" class="map" >
		<parameter property="v_from_date" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="v_to_date" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	</parameterMap>
	<procedure id="prc_AirlExpressTonnage" parameterMap="prcMap" >
		{call PRC_DAILY_EXPRESS_TONNAGE_REPT(?,?)}
	</procedure>

	<parameterMap id="prcMapAwbPrefix" class="map" >
		<parameter property="v_from_date" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="v_to_date" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="v_awb_prefix" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="v_carr_code" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="v_cargo_Type" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	</parameterMap>
	<procedure id="prc_AirlDailyTarmacInterfaceTonnageHandledRept" parameterMap="prcMapAwbPrefix" >
		{call PRC_AIRL_DAILY_TRM_IF_TON_REPT(?,?,?,?,?)}
	</procedure>	
	<select id="sqlGetSAPBillingAgentData" parameterClass="java.util.Map"
		resultClass="cargo.cms.billing.bo.SAPBillingBO">
		<![CDATA[
			SELECT ADJ.CNSLDT_INV_NO fltInvoiceNo, TO_CHAR(ADJ.CNSLDT_INV_DATE, 'YYYYMMDD') fltInvoiceDate,
			ADJ.INV_NO invoiceNo, NVL(ADJ.ADJ_AMT, 0.0) amount,
			CHRG.AWB_NO awbNo, AWB.AWB_TYPE awbFlow, AWB.CARR_CODE carrier, 'HKD' currency, 1 exchangeRate,
			CUST.SAP_CUSTOMER_ID customerNo, CHRG.itm_code||CHRG.itm_code_sfx||CHRG.ect_handler chargeCode
			FROM BILL_ADJ_DTL ADJ
			JOIN BILL_INV_DTL INV
			ON INV.INV_NO = ADJ.INV_NO AND INV.DOC_LINE_NO = ADJ.IDOC_LINE_NO
			JOIN BILL_CHARGE_DTL CHRG
			ON CHRG.TR_NO = INV.CHRG_TR_NO
			LEFT OUTER JOIN CUST_COMPANY CUST
			ON CUST.CODE = CHRG.CUST_NO
			LEFT OUTER JOIN AWB
			ON AWB.AWB_NO = CHRG.AWB_NO AND AWB.AWB_DATE = CHRG.AWB_DATE
			WHERE ADJ.CNSLDT_INV_NO IS NOT NULL
			AND ADJ.CNSLDT_INV_DATE BETWEEN TO_DATE(#FROM_DATE#, 'DDMONYY') AND TO_DATE(#TO_DATE#, 'DDMONYY')
			UNION ALL
			SELECT INV.CNSLDT_INV_NO fltInvoiceNo, TO_CHAR(INV.CNSLDT_INV_DATE, 'YYYYMMDD') fltInvoiceDate,
			INV.INV_NO invoiceNo, NVL(INV.CHARGE_AMT, 0.0) amount,
			CHRG.AWB_NO awbNo, AWB.AWB_TYPE awbFlow, AWB.CARR_CODE carrier, 'HKD' currency, 1 exchangeRate,
			CUST.SAP_CUSTOMER_ID customerNo, CHRG.itm_code||CHRG.itm_code_sfx||CHRG.ect_handler chargeCode
			FROM BILL_INV_DTL INV
			JOIN BILL_CHARGE_DTL CHRG
			ON CHRG.TR_NO = INV.CHRG_TR_NO
			LEFT OUTER JOIN CUST_COMPANY CUST
			ON CUST.CODE = CHRG.CUST_NO
			LEFT OUTER JOIN AWB
			ON AWB.AWB_NO = CHRG.AWB_NO AND AWB.AWB_DATE = CHRG.AWB_DATE
			WHERE INV.CNSLDT_INV_NO IS NOT NULL
			AND TRUNC(INV.CNSLDT_INV_DATE) BETWEEN TO_DATE(#FROM_DATE#, 'DDMONYY') AND TO_DATE(#TO_DATE#, 'DDMONYY')
			ORDER BY 1, 2, 3, 5
		]]>
	</select>
	<select id="sqlGetSAPBillingCarrierWithPrefix" parameterClass="java.lang.String"
		resultClass="cargo.cms.billing.bo.SAPBillingBO">
		<![CDATA[
			SELECT DISTINCT CARRIER_CODE carrier, AWB_PREFIX awbPrefix
			FROM REPT_CARR_AWB_PREFIX
			WHERE CARRIER_CODE IS NOT NULL AND AWB_PREFIX IS NOT NULL
		]]>
	</select>	
	<parameterMap id="prcMap" class="map" >
		<parameter property="v_from_date" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="v_to_date" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	</parameterMap>
	<procedure id="prc_AirlDailyOBCTonnageHandledRept" parameterMap="prcMap" >
		{call PRC_DAILY_OBC_TONNAGE_REPT(?,?)}
	</procedure>
	
	
	<!-- Airline Daily Tonnage Report -->

	<delete id="sqlDeleteReportData"  parameterClass="cargo.cms.billing.report.bo.GenerateServiceReportBO">
		DELETE FROM GT_AIRL_TONNAGE_REPT WHERE AIRLINE = #airLine#  AND SEQ_NO = #seqStarts# 
	</delete>


	<select id="sqlGetAirlDailyTonnageReport" parameterClass="cargo.cms.billing.report.bo.GenerateServiceReportBO"
		resultClass="cargo.cms.billing.report.bo.GenerateServiceReportBO">
	SELECT distinct
            to_char(GT.FLT_DATE,'DDMONYY') fltDate,
            to_char(GT.sch_DATE,'DDMONYY') schDate,
            GT.AIRLINE airLine,
            GT.FLT_TYPE fltType,
            GT.FLT_KEY fltKey,
            GT.TYPE type,
            GT.CALL_SIGN callSign,
            TO_NUMBER(trim(to_char(NVL((blk_lcl),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99')blk_lcl,
            to_number(trim(to_char(NVL((BLK_EPH_DHL),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99')blk_eph_dhl,
            to_number(trim(to_char(NVL((BLK_EPH_OTH),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99')blk_eph_oth,
            to_number(trim(to_char(NVL((blk_epa),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99')blk_epa,
            to_number(trim(to_char(NVL((blk_epd),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99')blk_epd,
            to_number(trim(to_char(NVL((blk_ts),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99')blk_ts,
            to_number(trim(to_char(NVL((nbk_ts),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99')nbk_ts,
            NVL(NBK_TS_ULD,0)nbk_ts_uld,
            to_number(trim(to_char(NVL((NBK_TS_OFLD),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99')nbk_ts_ofld_wp,
            to_number(trim(to_char(NVL((NBK_TS_OFLD_wop),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99')nbk_ts_ofld_wop,
            NVL(NBK_TS_ULD_OFLD,0)nbk_ts_uld_ofld_wp,
            NVL(NBK_TS_ULD_OFLD_wop,0)nbk_ts_uld_ofld_wop,
            to_number(trim(to_char(NVL((bup_lcl),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99')bup_lcl,
            to_number(trim(to_char(NVL((BUP_EPH_DHL),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99')bup_eph_dhl,
            to_number(trim(to_char(NVL((BUP_EPH_OTH),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99')bup_eph_oth,
            to_number(trim(to_char(NVL((bup_epa),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99')bup_epa,
            to_number(trim(to_char(NVL((bup_epd),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99')bup_epd,
            to_number(trim(to_char(NVL((bup_ts),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99')bup_ts,
            to_number(TRIM(TO_CHAR(NVL((
          NVL(BLK_LCL,0)+
          nvl(BLK_EPH_KNW,0)+
          NVL(BLK_EPH_UNK,0)+
          NVL(BLK_EPA_KNW,0)+
          nvl(BLK_EPA_UNK,0)+
          NVL(BLK_EPD_KNW,0)+
          nvl(BLK_EPD_UNK,0)+
          NVL(BLK_TS,0)+
          NVL(NBK_TS,0)+
          NVL(BUP_LCL,0)+
          NVL(BUP_EPH_KNW,0)+
          nvl(BUP_EPH_UNK,0)+
          NVL(BUP_EPA_KNW,0)+
          NVL(BUP_EPA_UNK,0)+
          NVL(BUP_EPD_KNW,0)+
          NVL(BUP_EPD_UNK,0)+
          nvl(bup_ts,0)),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') flight_total,
            to_number(trim(to_char(NVL((blk_lcl_ofld),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99')blk_lcl_ofld,
            to_number(trim(to_char(NVL((blk_lcl_ofld_wop),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99')blk_lcl_ofld_wop,
            to_number(trim(to_char(NVL((blk_ts_ofld),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99')blk_ts_ofld,
            to_number(trim(to_char(NVL((blk_ts_ofld_wop),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99')blk_ts_ofld_wop,
            to_number(trim(to_char(NVL((bup_lcl_ofld),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99')bup_lcl_ofld,  
            to_number(trim(to_char(NVL((bup_lcl_ofld_wop),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99')bup_lcl_ofld_wop,      
            to_number(trim(to_char(NVL((bup_ts_ofld),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99')bup_ts_ofld,
            to_number(trim(to_char(NVL((bup_ts_ofld_wop),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99')bup_ts_ofld_wop,
            to_number(trim(to_char(NVL((rebuild),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99')rebuild,
            to_number(trim(to_char(NVL((eph_rebuild),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99')eph_rebuild,
            to_number(trim(to_char(NVL((epa_rebuild),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99')epa_rebuild,
            to_number(trim(to_char(NVL((epd_rebuild),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99')epd_rebuild,
            to_number(trim(to_char(NVL((large_pvc),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99')large_pvc,
            to_number(trim(to_char(NVL((small_pvc),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99')small_pvc,
            to_number(trim(to_char(NVL(wrap,0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') wrap,
            NVL(wipp,0) wipp,
            NVL(fcc,0) fcc 
            FROM GT_AIRL_TONNAGE_REPT GT JOIN
		    FLT_OPR OPR ON GT.FLT_KEY=OPR.FLT_KEY
		    AND GT.SCH_DATE=OPR.SCH_DATE
            WHERE AIRLINE = #airLine#
            AND SEQ_NO = #seqStarts#
            AND TRUNC(OPR.ACT_DATE) BETWEEN to_date(#fromDate#,'DDMONYY') and to_date(#toDate#,'DDMONYY')
            ORDER BY fltType,to_date(fltDate,'DDMONYY')

	</select>
	
	<select id="sqlGetAirlDailyTonnageReportWeekly" parameterClass="cargo.cms.common.utils.bo.BatchJobBO"
		resultClass="cargo.cms.billing.report.bo.GenerateServiceReportBO">
	SELECT distinct
	to_char(FLT_DATE,'DDMONYY') fltDate,
	to_char(sch_DATE,'DDMONYY') schDate,
	AIRLINE airLine,
	FLT_TYPE fltType,
	FLT_KEY fltKey,
	TYPE type,
	CALL_SIGN callSign,
	to_number(trim(to_char(NVL((blk_lcl),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99')blk_lcl,
	to_number(trim(to_char(NVL((BLK_EPH_DHL),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99')blk_eph_dhl,
	to_number(trim(to_char(NVL((BLK_EPH_OTH),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99')blk_eph_oth,
	to_number(trim(to_char(NVL((blk_epa),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99')blk_epa,
	to_number(trim(to_char(NVL((blk_epd),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99')blk_epd,
	to_number(trim(to_char(NVL((blk_ts),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99')blk_ts,
	to_number(trim(to_char(NVL((nbk_ts),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99')nbk_ts,
	NVL(NBK_TS_ULD,0)nbk_ts_uld,
	to_number(trim(to_char(NVL((NBK_TS_OFLD),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99')nbk_ts_ofld_wp,
	to_number(trim(to_char(NVL((NBK_TS_OFLD_wop),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99')nbk_ts_ofld_wop,
	NVL(NBK_TS_ULD_OFLD,0)nbk_ts_uld_ofld_wp,
	NVL(NBK_TS_ULD_OFLD_wop,0)nbk_ts_uld_ofld_wop,
	to_number(trim(to_char(NVL((bup_lcl),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99')bup_lcl,
	to_number(trim(to_char(NVL((BUP_EPH_DHL),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99')bup_eph_dhl,
	to_number(trim(to_char(NVL((BUP_EPH_OTH),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99')bup_eph_oth,
	to_number(trim(to_char(NVL((bup_epa),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99')bup_epa,
	to_number(trim(to_char(NVL((bup_epd),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99')bup_epd,
	to_number(trim(to_char(NVL((bup_ts),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99')bup_ts,
	to_number(TRIM(TO_CHAR(NVL((
	NVL(BLK_LCL,0)+
	nvl(BLK_EPH_DHL,0)+
	NVL(BLK_EPH_OTH,0)+
	NVL(blk_epa,0)+
	NVL(blk_epd,0)+
	NVL(BLK_TS,0)+
	NVL(NBK_TS,0)+
	NVL(BUP_LCL,0)+
	NVL(BUP_EPH_DHL,0)+
	nvl(BUP_EPH_OTH,0)+
	NVL(bup_epa,0)+
	NVL(bup_epd,0)+
	nvl(bup_ts,0)),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') flight_total,
	to_number(trim(to_char(NVL((blk_lcl_ofld),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99')blk_lcl_ofld,
	to_number(trim(to_char(NVL((blk_lcl_ofld_wop),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99')blk_lcl_ofld_wop,
	to_number(trim(to_char(NVL((blk_ts_ofld),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99')blk_ts_ofld,
	to_number(trim(to_char(NVL((blk_ts_ofld_wop),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99')blk_ts_ofld_wop,
	to_number(trim(to_char(NVL((bup_lcl_ofld),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99')bup_lcl_ofld,  
	to_number(trim(to_char(NVL((bup_lcl_ofld_wop),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99')bup_lcl_ofld_wop,      
	to_number(trim(to_char(NVL((bup_ts_ofld),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99')bup_ts_ofld,
	to_number(trim(to_char(NVL((bup_ts_ofld_wop),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99')bup_ts_ofld_wop,
	to_number(trim(to_char(NVL((rebuild),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99')rebuild,
	to_number(trim(to_char(NVL((eph_rebuild),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99')eph_rebuild,
	to_number(trim(to_char(NVL((epa_rebuild),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99')epa_rebuild,
	to_number(trim(to_char(NVL((epd_rebuild),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99')epd_rebuild,
	to_number(trim(to_char(NVL((large_pvc),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99')large_pvc,
	to_number(trim(to_char(NVL((small_pvc),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99')small_pvc,
	to_number(trim(to_char(NVL(wrap,0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') wrap,
	NVL(wipp,0) wipp,
	NVL(fcc,0) fcc 
	FROM REPT_AIRL_TONN_IMAGE  GT
	WHERE (TRUNC(FROM_DATE) between TO_DATE(#fromDate#,'DDMONYY') AND TO_DATE(#toDate#,'DDMONYY')
	AND TRUNC(TO_DATE) BETWEEN TO_DATE(#fromDate#,'DDMONYY') AND TO_DATE(#toDate#,'DDMONYY') )
	AND AIRLINE=#airLine# AND NVL(CARGO_TYPE,'ALL') = NVL(#tcSplCargoType#,'ALL')
	and report_type='Daily'
	ORDER BY fltType,fltDate

	</select>
	
 
  
  <!-- Airline Daily Mail Tonnage Handled Report -->
  
   <select id="sqlGetAirlDailyMailTonnageReport" parameterClass="cargo.cms.billing.report.bo.GenerateServiceReportBO"
		resultClass="cargo.cms.billing.report.bo.GenerateServiceReportBO">
		SELECT
		to_char(GT.FLT_DATE,'DDMONYY') fltDate,
		to_char(GT.sch_DATE,'DDMONYY') schDate,
		GT.AIRLINE airLine,
		GT.FLT_TYPE fltType,
		GT.FLT_KEY fltKey,
		GT.TYPE type,
		GT.CALL_SIGN callSign,
		to_number(trim(to_char(NVL((blk_lcl),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') blk_lcl,
		to_number(trim(to_char(NVL((blk_eph_knw),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') blk_eph_knw,
		to_number(trim(to_char(NVL((blk_eph_unk),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') blk_eph_unk,
		to_number(trim(to_char(NVL((blk_epa_knw),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') blk_epa_knw,
		to_number(trim(to_char(NVL((blk_epa_unk),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') blk_epa_unk,
		to_number(trim(to_char(NVL((blk_epd_knw),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') blk_epd_knw,
		to_number(trim(to_char(NVL((blk_epd_unk),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') blk_epd_unk,
		to_number(trim(to_char(NVL((blk_ts),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') blk_ts,
		to_number(trim(to_char(NVL((bup_lcl),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') bup_lcl,
		to_number(trim(to_char(NVL((bup_eph_knw),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') bup_eph_knw,
		to_number(trim(to_char(NVL((bup_eph_unk),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') bup_eph_unk,
		to_number(trim(to_char(NVL((bup_epa_knw),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') bup_epa_knw,
		to_number(trim(to_char(NVL((bup_epa_unk),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') bup_epa_unk,
		to_number(trim(to_char(NVL((bup_epd_knw),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') bup_epd_knw,
		to_number(trim(to_char(NVL((bup_epd_unk),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') bup_epd_unk,		
		to_number(trim(to_char(NVL((bup_ts),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') bup_ts,
		to_number(trim(to_char(NVL(((blk_lcl+blk_ts+bup_lcl+bup_ts)),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') flight_total,
		to_number(trim(to_char(NVL((blk_lcl_ofld),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') blk_lcl_ofld,
		to_number(trim(to_char(NVL((blk_ts_ofld),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') blk_ts_ofld,
		to_number(trim(to_char(NVL((bup_lcl_ofld),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') bup_lcl_ofld,	
		to_number(trim(to_char(NVL((bup_ts_ofld),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') bup_ts_ofld,
		to_number(trim(to_char(NVL((rebuild),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') rebuild,
		to_number(trim(to_char(NVL((eph_rebuild),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') eph_rebuild,
		to_number(trim(to_char(NVL((epa_rebuild),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') epa_rebuild,
		to_number(trim(to_char(NVL((epd_rebuild),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') epd_rebuild,
		to_number(trim(to_char(NVL((large_pvc),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') large_pvc,
		to_number(trim(to_char(NVL((small_pvc),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') small_pvc,
		to_number(trim(to_char(NVL((wrap),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') wrap,
		to_number(trim(to_char(NVL((tarmac_mail_ppk),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') tarmac_mail_ppk,
		to_number(trim(to_char(NVL((tarmac_mail_bulk),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') tarmac_mail_bulk,
		to_number(trim(to_char(NVL(((blk_lcl_ofld+blk_ts_ofld+bup_lcl_ofld+bup_ts_ofld) ),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') offload_total
 		FROM GT_AIRL_TONNAGE_REPT GT JOIN
    	FLT_OPR OPR ON GT.FLT_KEY=OPR.FLT_KEY
    	AND GT.SCH_DATE=OPR.SCH_DATE
 		WHERE AIRLINE = #airLine#
 		AND TRUNC(OPR.ACT_DATE) BETWEEN to_date(#fromDate#,'DDMONYY') and to_date(#toDate#,'DDMONYY')
		ORDER BY fltType,to_date(fltDate,'DDMONYY')
 	</select>
  
 		<select id="sqlAirlDailyMailTonnReptWeekly" parameterClass="cargo.cms.common.utils.bo.BatchJobBO"
		resultClass="cargo.cms.billing.report.bo.GenerateServiceReportBO">
		SELECT
		TO_CHAR(FLT_DATE,'DDMONYY') fltDate,
  		TO_CHAR(sch_DATE,'DDMONYY') schDate,
		AIRLINE airLine,
		FLT_TYPE fltType,
		FLT_KEY fltKey,
		TYPE type,
		CALL_SIGN callSign,
		to_number(trim(to_char(NVL((blk_lcl),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') blk_lcl,
		to_number(trim(to_char(NVL((blk_eph_knw),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') blk_eph_knw,
		to_number(trim(to_char(NVL((blk_eph_unk),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') blk_eph_unk,
		to_number(trim(to_char(NVL((blk_epa_knw),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') blk_epa_knw,
		to_number(trim(to_char(NVL((blk_epa_unk),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') blk_epa_unk,
		to_number(trim(to_char(NVL((blk_epd_knw),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') blk_epd_knw,
		to_number(trim(to_char(NVL((blk_epd_unk),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') blk_epd_unk,
		to_number(trim(to_char(NVL((blk_ts),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') blk_ts,
		to_number(trim(to_char(NVL((bup_lcl),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') bup_lcl,
		to_number(trim(to_char(NVL((bup_eph_knw),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') bup_eph_knw,
		to_number(trim(to_char(NVL((bup_eph_unk),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') bup_eph_unk,
		to_number(trim(to_char(NVL((bup_epa_knw),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') bup_epa_knw,
		to_number(trim(to_char(NVL((bup_epa_unk),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') bup_epa_unk,
		to_number(trim(to_char(NVL((bup_epd_knw),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') bup_epd_knw,
		to_number(trim(to_char(NVL((bup_epd_unk),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') bup_epd_unk,		
		to_number(trim(to_char(NVL((bup_ts),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') bup_ts,
		to_number(trim(to_char(NVL(((blk_lcl+blk_ts+bup_lcl+bup_ts)),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') flight_total,
		to_number(trim(to_char(NVL((blk_lcl_ofld),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') blk_lcl_ofld,
		to_number(trim(to_char(NVL((blk_ts_ofld),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') blk_ts_ofld,
		to_number(trim(to_char(NVL((bup_lcl_ofld),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') bup_lcl_ofld,	
		to_number(trim(to_char(NVL((bup_ts_ofld),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') bup_ts_ofld,
		to_number(trim(to_char(NVL((rebuild),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') rebuild,
		to_number(trim(to_char(NVL((eph_rebuild),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') eph_rebuild,
		to_number(trim(to_char(NVL((epa_rebuild),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') epa_rebuild,
		to_number(trim(to_char(NVL((epd_rebuild),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') epd_rebuild,
		to_number(trim(to_char(NVL((large_pvc),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') large_pvc,
		to_number(trim(to_char(NVL((small_pvc),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') small_pvc,
		to_number(trim(to_char(NVL((wrap),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') wrap,
		to_number(trim(to_char(NVL((tarmac_mail_ppk),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') tarmac_mail_ppk,
		to_number(trim(to_char(NVL((tarmac_mail_bulk),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') tarmac_mail_bulk,
		to_number(trim(to_char(NVL(((blk_lcl_ofld+blk_ts_ofld+bup_lcl_ofld+bup_ts_ofld) ),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') offload_total
		FROM REPT_AIRL_TONN_MAIL_IMAGE
		WHERE (TRUNC(FROM_DATE) between TO_DATE(#fromDate#,'DDMONYY') AND TO_DATE(#toDate#,'DDMONYY')
		AND TRUNC(TO_DATE) BETWEEN TO_DATE(#fromDate#,'DDMONYY') AND TO_DATE(#toDate#,'DDMONYY') )
		AND AIRLINE=#airLine# 
		and report_type='Daily'
		order by fltType,fltDate
 	</select>
  
    <!-- Daily Express Tonnage Handled Report -->
     
  <select id="sqlDailyExpressTonnageReport" parameterClass="cargo.cms.billing.report.bo.GenerateServiceReportBO"
		resultClass="cargo.cms.billing.report.bo.GenerateServiceReportBO">
		SELECT
		to_char(GT.FLT_DATE,'DDMONYY') fltDate,
		to_char(GT.sch_DATE,'DDMONYY') schDate,
		GT.AIRLINE airLine,
		GT.FLT_TYPE fltType,
		GT.FLT_KEY fltKey,
		GT.TYPE type,
		TO_NUMBER(TRIM(to_char(NVL((GT.blk_lcl),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') blk_lcl,
		TO_NUMBER(TRIM(to_char(NVL((GT.blk_eph_knw),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') blk_eph_knw,
		TO_NUMBER(TRIM(to_char(NVL((GT.blk_eph_unk),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') blk_eph_unk,
		TO_NUMBER(TRIM(to_char(NVL((GT.blk_epa_knw),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') blk_epa_knw,
		TO_NUMBER(TRIM(to_char(NVL((GT.blk_epa_unk),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') blk_epa_unk,
		TO_NUMBER(TRIM(to_char(NVL((GT.blk_epd_knw),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') blk_epd_knw,
		TO_NUMBER(TRIM(to_char(NVL((GT.blk_epd_unk),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') blk_epd_unk,
		TRIM(to_char(NVL((GT.blk_pcs),0),'999999999999999999999999999999999999')) blk_pcs,
		TO_NUMBER(TRIM(to_char(NVL((GT.blk_ts),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') blk_ts,
		TO_NUMBER(TRIM(to_char(NVL((GT.bup_lcl),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') bup_lcl,
		TO_NUMBER(TRIM(to_char(NVL((GT.bup_eph_knw),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') bup_eph_knw,
		TO_NUMBER(TRIM(to_char(NVL((GT.bup_eph_unk),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') bup_eph_unk,
		TO_NUMBER(TRIM(to_char(NVL((GT.bup_epa_knw),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') bup_epa_knw,
		TO_NUMBER(TRIM(to_char(NVL((GT.bup_epa_unk),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') bup_epa_unk,
		TO_NUMBER(TRIM(to_char(NVL((GT.bup_epd_knw),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') bup_epd_knw,
		TO_NUMBER(TRIM(to_char(NVL((GT.bup_epd_unk),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') bup_epd_unk,
		TRIM(to_char(NVL((GT.bup_pcs),0),'999999999999999999999999999999999999')) bup_pcs,
		TO_NUMBER(TRIM(to_char(NVL((GT.bup_ts),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') bup_ts,
		TO_NUMBER(TRIM(to_char(NVL(((GT.blk_eph_knw+blk_eph_unk+blk_epa_knw+blk_epa_unk+blk_epd_knw+blk_epd_unk+bup_eph_knw
		+bup_eph_unk+bup_epa_knw+bup_epa_unk+bup_epd_knw+bup_epd_unk)),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') flight_total,
		TO_NUMBER(TRIM(to_char(NVL((GT.blk_lcl_ofld),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') blk_lcl_ofld,
		TO_NUMBER(TRIM(to_char(NVL((GT.blk_ts_ofld),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') blk_ts_ofld,
		TO_NUMBER(TRIM(to_char(NVL((GT.bup_lcl_ofld),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') bup_lcl_ofld,	
		TO_NUMBER(TRIM(to_char(NVL((GT.bup_ts_ofld),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') bup_ts_ofld,
		TO_NUMBER(TRIM(to_char(NVL((GT.rebuild),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') rebuild,
		TO_NUMBER(TRIM(to_char(NVL((GT.eph_rebuild),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') eph_rebuild,
		TO_NUMBER(TRIM(to_char(NVL((GT.epa_rebuild),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') epa_rebuild,
		TO_NUMBER(TRIM(to_char(NVL((GT.epd_rebuild),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') epd_rebuild,
		TO_NUMBER(TRIM(to_char(NVL((GT.large_pvc),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') large_pvc,
		TO_NUMBER(TRIM(to_char(NVL((GT.small_pvc),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') small_pvc,
		TO_NUMBER(TRIM(to_char(NVL((GT.wrap),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') wrap,
		TO_NUMBER(TRIM(to_char(NVL((GT.REBUILD),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99')  exp_rebuild_weight,
		GT.AWB_NO awbNo,
		GT.AWB_DATE awbDate,
    A.agent_code agentCode,
    A.agent_name agentName
 		FROM GT_AIRL_TONNAGE_REPT GT
    LEFT JOIN AWB A ON GT.AWB_NO = A.AWB_NO AND GT.AWB_DATE = A.AWB_DATE
 		WHERE AIRLINE = #airLine#
		ORDER BY fltType,to_date(fltDate,'DDMONYY'),GT.AWB_NO
 	</select>
  
 	<select id="sqlDailyExpressTonnageReportWeekly" parameterClass="cargo.cms.common.utils.bo.BatchJobBO"
		resultClass="cargo.cms.billing.report.bo.GenerateServiceReportBO">
		select 
		to_char(GT.FLT_DATE,'DDMONYY') fltDate,
		to_char(GT.sch_DATE,'DDMONYY') schDate,
		GT.AIRLINE airLine,
		GT.FLT_TYPE fltType,
		GT.FLT_KEY fltKey,
		GT.TYPE type,
		TO_NUMBER(TRIM(to_char(NVL((GT.blk_lcl),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') blk_lcl,
		TO_NUMBER(TRIM(to_char(NVL((GT.blk_eph_knw),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') blk_eph_knw,
		TO_NUMBER(TRIM(to_char(NVL((GT.blk_eph_unk),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') blk_eph_unk,
		TO_NUMBER(TRIM(to_char(NVL((GT.blk_epa_knw),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') blk_epa_knw,
		TO_NUMBER(TRIM(to_char(NVL((GT.blk_epa_unk),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') blk_epa_unk,
		TO_NUMBER(TRIM(to_char(NVL((GT.blk_epd_knw),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') blk_epd_knw,
		TO_NUMBER(TRIM(to_char(NVL((GT.blk_epd_unk),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') blk_epd_unk,
		TRIM(to_char(NVL((GT.blk_pcs),0),'999999999999999999999999999999999999')) blk_pcs,
		TO_NUMBER(TRIM(to_char(NVL((GT.blk_ts),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') blk_ts,
		TO_NUMBER(TRIM(to_char(NVL((GT.bup_lcl),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') bup_lcl,
		TO_NUMBER(TRIM(to_char(NVL((GT.bup_eph_knw),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') bup_eph_knw,
		TO_NUMBER(TRIM(to_char(NVL((GT.bup_eph_unk),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') bup_eph_unk,
		TO_NUMBER(TRIM(to_char(NVL((GT.bup_epa_knw),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') bup_epa_knw,
		TO_NUMBER(TRIM(to_char(NVL((GT.bup_epa_unk),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') bup_epa_unk,
		TO_NUMBER(TRIM(to_char(NVL((GT.bup_epd_knw),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') bup_epd_knw,
		TO_NUMBER(TRIM(to_char(NVL((GT.bup_epd_unk),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') bup_epd_unk,
		TRIM(to_char(NVL((GT.bup_pcs),0),'999999999999999999999999999999999999')) bup_pcs,
		TO_NUMBER(TRIM(to_char(NVL((GT.bup_ts),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') bup_ts,
		TO_NUMBER(TRIM(to_char(NVL(((GT.blk_eph_knw+blk_eph_unk+blk_epa_knw+blk_epa_unk+blk_epd_knw+blk_epd_unk+bup_eph_knw
		+bup_eph_unk+bup_epa_knw+bup_epa_unk+bup_epd_knw+bup_epd_unk)),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') flight_total,
		TO_NUMBER(TRIM(to_char(NVL((GT.blk_lcl_ofld),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') blk_lcl_ofld,
		TO_NUMBER(TRIM(to_char(NVL((GT.blk_ts_ofld),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') blk_ts_ofld,
		TO_NUMBER(TRIM(to_char(NVL((GT.bup_lcl_ofld),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') bup_lcl_ofld,	
		TO_NUMBER(TRIM(to_char(NVL((GT.bup_ts_ofld),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') bup_ts_ofld,
		TO_NUMBER(TRIM(to_char(NVL((GT.rebuild),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') rebuild,
		TO_NUMBER(TRIM(to_char(NVL((GT.eph_rebuild),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') eph_rebuild,
		TO_NUMBER(TRIM(to_char(NVL((GT.epa_rebuild),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') epa_rebuild,
		TO_NUMBER(TRIM(to_char(NVL((GT.epd_rebuild),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') epd_rebuild,
		TO_NUMBER(TRIM(to_char(NVL((GT.large_pvc),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') large_pvc,
		TO_NUMBER(TRIM(to_char(NVL((GT.small_pvc),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') small_pvc,
		TO_NUMBER(TRIM(to_char(NVL((GT.wrap),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') wrap,
		TO_NUMBER(TRIM(to_char(NVL((GT.REBUILD),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99')  exp_rebuild_weight,
		GT.AWB_NO awbNo,
		GT.AWB_DATE awbDate,
	    GT.agent_code agentCode,
	    GT.agent_name agentName
		FROM REPT_AIRL_TONN_EXPS_IMAGE GT
		WHERE (TRUNC(FROM_DATE) between TO_DATE(#fromDate#,'DDMONYY') AND TO_DATE(#toDate#,'DDMONYY')
		AND TRUNC(TO_DATE) BETWEEN TO_DATE(#fromDate#,'DDMONYY') AND TO_DATE(#toDate#,'DDMONYY') )
		AND AIRLINE=#airLine# 
		and report_type='Daily'
		order by fltType,fltDate,GT.AWB_NO
 	</select>
  
  <!-- Airline Daily Tarmac and Interface Tonnage Handled Report -->
  
   <select id="sqlAirlDailyTrmcIfcTonnageReport" parameterClass="cargo.cms.billing.report.bo.GenerateServiceReportBO"
		resultClass="cargo.cms.billing.report.bo.GenerateServiceReportBO">
		SELECT
		to_char(GT.FLT_DATE,'DDMONYY') fltDate,
		to_char(GT.sch_DATE,'DDMONYY') schDate,
		GT.AIRLINE airLine,
		GT.FLT_TYPE fltType,
		GT.FLT_KEY fltKey,
		GT.TYPE type,
		GT.CALL_SIGN callSign,
			TO_NUMBER(TRIM(to_char(NVL((TARMAC_OFFLOAD),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') tarmacoffload,
		TO_NUMBER(TRIM(to_char(NVL((blk_lcl),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') blk_lcl,
		TO_NUMBER(TRIM(to_char(NVL((blk_eph_knw),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') blk_eph_knw,
		TO_NUMBER(TRIM(to_char(NVL((blk_eph_unk),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') blk_eph_unk,
		TO_NUMBER(TRIM(to_char(NVL((blk_epa_knw),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') blk_epa_knw,
		TO_NUMBER(TRIM(to_char(NVL((blk_epa_unk),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') blk_epa_unk,
		TO_NUMBER(TRIM(to_char(NVL((blk_epd_knw),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') blk_epd_knw,
		TO_NUMBER(TRIM(to_char(NVL((blk_epd_unk),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') blk_epd_unk,
		TO_NUMBER(TRIM(to_char(NVL((blk_ts),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') blk_ts,
		TO_NUMBER(TRIM(to_char(NVL((bup_lcl),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') bup_lcl,
		TO_NUMBER(TRIM(to_char(NVL((bup_eph_knw),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') bup_eph_knw,
		TO_NUMBER(TRIM(to_char(NVL((bup_eph_unk),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') bup_eph_unk,
		TO_NUMBER(TRIM(to_char(NVL((bup_epa_knw),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') bup_epa_knw,
		TO_NUMBER(TRIM(to_char(NVL((bup_epa_unk),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') bup_epa_unk,
		TO_NUMBER(TRIM(to_char(NVL((bup_epd_knw),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') bup_epd_knw,
		TO_NUMBER(TRIM(to_char(NVL((bup_epd_unk),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') bup_epd_unk,
		TO_NUMBER(TRIM(to_char(NVL((bup_ts),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') bup_ts,
		TO_NUMBER(TRIM(to_char(NVL((blk_lcl_ofld),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') blk_lcl_ofld,
		TO_NUMBER(TRIM(to_char(NVL((blk_ts_ofld),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') blk_ts_ofld,
		TO_NUMBER(TRIM(to_char(NVL((bup_lcl_ofld),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') bup_lcl_ofld,	
		TO_NUMBER(TRIM(to_char(NVL((bup_ts_ofld),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') bup_ts_ofld,
		TO_NUMBER(TRIM(to_char(NVL((rebuild),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') rebuild,
		TO_NUMBER(TRIM(to_char(NVL((eph_rebuild),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') eph_rebuild,
		TO_NUMBER(TRIM(to_char(NVL((epa_rebuild),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') epa_rebuild,
		TO_NUMBER(TRIM(to_char(NVL((epd_rebuild),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') epd_rebuild,
		TO_NUMBER(TRIM(to_char(NVL((large_pvc),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') large_pvc,
		TO_NUMBER(TRIM(to_char(NVL((small_pvc),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') small_pvc,
		TO_NUMBER(TRIM(to_char(NVL((wrap),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') wrap,
		TO_NUMBER(TRIM(to_char(NVL((REBUILD),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99')  exp_rebuild_weight,
		AWB_NO awbNo,
		AWB_DATE awbDate,
		TO_NUMBER(TRIM(to_char(NVL((BLK_IF_0_5),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99')  blk_if_0_5,
		TO_NUMBER(TRIM(to_char(NVL((BLK_IF_5),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99')  blk_if_5,
		TO_NUMBER(TRIM(to_char(NVL((BUP_IF_0_5),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99')  bup_if_0_5,
		TO_NUMBER(TRIM(to_char(NVL((BUP_IF_5),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99')  bup_if_5,
		TO_NUMBER(TRIM(to_char(NVL((M_3),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99')  m_3,
		TO_NUMBER(TRIM(to_char(NVL((M_3_5),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99')  m_3_5,
		TO_NUMBER(TRIM(to_char(NVL((M_5),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99')  m_5
 		FROM GT_AIRL_TONNAGE_REPT GT JOIN
	    FLT_OPR OPR ON GT.FLT_KEY=OPR.FLT_KEY
	    AND GT.SCH_DATE=OPR.SCH_DATE 
 		WHERE AIRLINE = #airLine#
 		AND TRUNC(OPR.ACT_DATE) BETWEEN to_date(#fromDate#,'DDMONYY') and to_date(#toDate#,'DDMONYY')
		ORDER BY fltType,to_date(fltDate,'DDMONYY')
 </select>

 <select id="sqlAirlDailyTrmcIfcTonnReptWeekly" parameterClass="cargo.cms.common.utils.bo.BatchJobBO"
		resultClass="cargo.cms.billing.report.bo.GenerateServiceReportBO">
		select
		TO_CHAR(FLT_DATE,'DDMONYY') fltDate,
		TO_CHAR(sch_DATE,'DDMONYY') schDate,
		AIRLINE airLine,
		FLT_TYPE fltType,
		FLT_KEY fltKey,
		TYPE type,
		CALL_SIGN callSign,
		TO_NUMBER(TRIM(TO_CHAR(NVL((TARMAC_OFFLOAD ),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') tarmacoffload,
		TO_NUMBER(TRIM(to_char(NVL((blk_lcl),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') blk_lcl,
		TO_NUMBER(TRIM(to_char(NVL((blk_eph_knw),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') blk_eph_knw,
		TO_NUMBER(TRIM(to_char(NVL((blk_eph_unk),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') blk_eph_unk,
		TO_NUMBER(TRIM(to_char(NVL((blk_epa_knw),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') blk_epa_knw,
		TO_NUMBER(TRIM(to_char(NVL((blk_epa_unk),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') blk_epa_unk,
		TO_NUMBER(TRIM(to_char(NVL((blk_epd_knw),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') blk_epd_knw,
		TO_NUMBER(TRIM(to_char(NVL((blk_epd_unk),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') blk_epd_unk,
		TO_NUMBER(TRIM(to_char(NVL((blk_ts),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') blk_ts,
		TO_NUMBER(TRIM(to_char(NVL((bup_lcl),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') bup_lcl,
		TO_NUMBER(TRIM(to_char(NVL((bup_eph_knw),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') bup_eph_knw,
		TO_NUMBER(TRIM(to_char(NVL((bup_eph_unk),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') bup_eph_unk,
		TO_NUMBER(TRIM(to_char(NVL((bup_epa_knw),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') bup_epa_knw,
		TO_NUMBER(TRIM(to_char(NVL((bup_epa_unk),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') bup_epa_unk,
		TO_NUMBER(TRIM(to_char(NVL((bup_epd_knw),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') bup_epd_knw,
		TO_NUMBER(TRIM(to_char(NVL((bup_epd_unk),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') bup_epd_unk,
		TO_NUMBER(TRIM(to_char(NVL((bup_ts),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') bup_ts,
		TO_NUMBER(TRIM(to_char(NVL((blk_lcl_ofld),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') blk_lcl_ofld,
		TO_NUMBER(TRIM(to_char(NVL((blk_ts_ofld),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') blk_ts_ofld,
		TO_NUMBER(TRIM(to_char(NVL((bup_lcl_ofld),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') bup_lcl_ofld,	
		TO_NUMBER(TRIM(to_char(NVL((bup_ts_ofld),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') bup_ts_ofld,
		TO_NUMBER(TRIM(to_char(NVL((rebuild),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') rebuild,
		TO_NUMBER(TRIM(to_char(NVL((eph_rebuild),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') eph_rebuild,
		TO_NUMBER(TRIM(to_char(NVL((epa_rebuild),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') epa_rebuild,
		TO_NUMBER(TRIM(to_char(NVL((epd_rebuild),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') epd_rebuild,
		TO_NUMBER(TRIM(to_char(NVL((large_pvc),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') large_pvc,
		TO_NUMBER(TRIM(to_char(NVL((small_pvc),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') small_pvc,
		TO_NUMBER(TRIM(to_char(NVL((wrap),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') wrap,
		TO_NUMBER(TRIM(to_char(NVL((REBUILD),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99')  exp_rebuild_weight,
		AWB_NO awbNo,
		AWB_DATE awbDate,
		TO_NUMBER(TRIM(to_char(NVL((BLK_IF_0_5),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99')  blk_if_0_5,
		TO_NUMBER(TRIM(to_char(NVL((BLK_IF_5),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99')  blk_if_5,
		TO_NUMBER(TRIM(to_char(NVL((BUP_IF_0_5),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99')  bup_if_0_5,
		TO_NUMBER(TRIM(to_char(NVL((BUP_IF_5),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99')  bup_if_5,
		TO_NUMBER(TRIM(to_char(NVL((M_3),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99')  m_3,
		TO_NUMBER(TRIM(to_char(NVL((M_3_5),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99')  m_3_5,
		TO_NUMBER(TRIM(to_char(NVL((M_5),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99')  m_5
		FROM REPT_AIRL_TONN_TT_IF_IMAGE
		WHERE (TRUNC(FROM_DATE) between TO_DATE(#fromDate#,'DDMONYY') AND TO_DATE(#toDate#,'DDMONYY')
		AND TRUNC(TO_DATE) BETWEEN TO_DATE(#fromDate#,'DDMONYY') AND TO_DATE(#toDate#,'DDMONYY') )
		AND AIRLINE=#airLine#  AND NVL(CARGO_TYPE,'ALL') = NVL(#tcSplCargoType#,'ALL')
		and report_type='Daily'
		order by fltType,fltDate
 </select>

  <!-- Daily OBC Tonnage Handled Report -->
  
   <select id="sqlDailyOBCTonnageReport" parameterClass="cargo.cms.billing.report.bo.GenerateServiceReportBO"
		resultClass="cargo.cms.billing.report.bo.GenerateServiceReportBO">
	SELECT
	to_char(FLT_DATE,'DDMONYY') fltDate,
	to_char(sch_DATE,'DDMONYY') schDate,
	AIRLINE airLine,
	FLT_TYPE fltType,
	FLT_KEY fltKey,
	TYPE type,
	TO_NUMBER(TRIM(to_char(NVL((blk_lcl),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') blk_lcl,
	TO_NUMBER(TRIM(to_char(NVL((blk_eph_knw),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') blk_eph_knw,
	TO_NUMBER(TRIM(to_char(NVL((blk_eph_unk),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') blk_eph_unk,
	TO_NUMBER(TRIM(to_char(NVL((blk_epa_knw),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') blk_epa_knw,
	TO_NUMBER(TRIM(to_char(NVL((blk_epa_unk),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') blk_epa_unk,
	TO_NUMBER(TRIM(to_char(NVL((blk_epd_knw),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') blk_epd_knw,
	TO_NUMBER(TRIM(to_char(NVL((blk_epd_unk),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') blk_epd_unk,
	TO_NUMBER(TRIM(to_char(NVL((blk_ts),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') blk_ts,
	TO_NUMBER(TRIM(to_char(NVL((bup_lcl),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') bup_lcl,
	TO_NUMBER(TRIM(to_char(NVL((bup_eph_knw),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') bup_eph_knw,
	TO_NUMBER(TRIM(to_char(NVL((bup_eph_unk),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') bup_eph_unk,
	TO_NUMBER(TRIM(to_char(NVL((bup_epa_knw),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') bup_epa_knw,
	TO_NUMBER(TRIM(to_char(NVL((bup_epa_unk),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') bup_epa_unk,
	TO_NUMBER(TRIM(to_char(NVL((bup_epd_knw),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') bup_epd_knw,
	TO_NUMBER(TRIM(to_char(NVL((bup_epd_unk),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') bup_epd_unk,
	TO_NUMBER(TRIM(to_char(NVL((bup_ts),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') bup_ts,
	TO_NUMBER(TRIM(to_char(NVL((blk_lcl_ofld),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') blk_lcl_ofld,
	TO_NUMBER(TRIM(to_char(NVL((blk_ts_ofld),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') blk_ts_ofld,
	TO_NUMBER(TRIM(to_char(NVL((bup_lcl_ofld),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') bup_lcl_ofld,
	TO_NUMBER(TRIM(to_char(NVL((bup_ts_ofld),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') bup_ts_ofld,
	TO_NUMBER(TRIM(to_char(NVL((rebuild),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') rebuild,
	TO_NUMBER(TRIM(to_char(NVL((eph_rebuild),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') eph_rebuild,
	TO_NUMBER(TRIM(to_char(NVL((epa_rebuild),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') epa_rebuild,
	TO_NUMBER(TRIM(to_char(NVL((epd_rebuild),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') epd_rebuild,
	TO_NUMBER(TRIM(to_char(NVL((large_pvc),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') large_pvc,
	TO_NUMBER(TRIM(to_char(NVL((small_pvc),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') small_pvc,
	TO_NUMBER(TRIM(to_char(NVL((wrap),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') wrap,
	TO_NUMBER(TRIM(to_char(NVL((REBUILD),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99')	exp_rebuild_weight,
	TO_NUMBER(TRIM(to_char(NVL((OUTBOUND_COURIER),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99')  ob_courier ,
	TO_NUMBER(TRIM(to_char(NVL((OUTBOUND_COURIER_TRANSHIPMENT),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99')  ob_courier_tr,
	TO_NUMBER(TRIM(to_char(NVL((OUTBOUND_EXCESS_BAGGAGE),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') pb_ecxess_bg,
	TO_NUMBER(TRIM(to_char(NVL((COMMERCIAL_GOODS_BAGGAGE),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99')  com_goods_bg,
	TO_NUMBER(TRIM(to_char(NVL((INBOUND_COURIER_BULK),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99')  inb_courier,
	TO_NUMBER(TRIM(to_char(NVL((INBOUND_COURIER_PREPACK),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') inb_courier_ppk,
	TO_NUMBER(TRIM(to_char(NVL((INBOUND_COURIER_TRANSHIPMENT),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') inb_courier_tr,
	TO_NUMBER(TRIM(to_char(NVL((INBOUND_EXCESS_BAGGAGE),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') inb_exs_bg
	FROM GT_AIRL_TONNAGE_REPT
	WHERE AIRLINE = #airLine#
	ORDER BY fltType,to_date(fltDate,'DDMONYY')
 	</select>
	
	
	<select id="sqlDailyOBCTonnageReportWeekly" parameterClass="cargo.cms.common.utils.bo.BatchJobBO"
		resultClass="cargo.cms.billing.report.bo.GenerateServiceReportBO">
	select 
    TO_CHAR(FLT_DATE,'DDMONYY') fltDate,
	TO_CHAR(sch_DATE,'DDMONYY') schDate,
	AIRLINE airLine,
	FLT_TYPE fltType,
	FLT_KEY fltKey,
	TYPE type,
	TO_NUMBER(TRIM(to_char(NVL((blk_lcl),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') blk_lcl, 
	TO_NUMBER(TRIM(to_char(NVL((blk_eph_knw),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') blk_eph_knw,
	TO_NUMBER(TRIM(to_char(NVL((blk_eph_unk),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') blk_eph_unk,
	TO_NUMBER(TRIM(to_char(NVL((blk_epa_knw),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') blk_epa_knw,
	TO_NUMBER(TRIM(to_char(NVL((blk_epa_unk),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') blk_epa_unk,
	TO_NUMBER(TRIM(to_char(NVL((blk_epd_knw),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') blk_epd_knw,
	TO_NUMBER(TRIM(to_char(NVL((blk_epd_unk),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') blk_epd_unk,
	TO_NUMBER(TRIM(to_char(NVL((blk_ts),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') blk_ts,
	TO_NUMBER(TRIM(to_char(NVL((bup_lcl),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') bup_lcl,
	TO_NUMBER(TRIM(to_char(NVL((bup_eph_knw),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') bup_eph_knw,
	TO_NUMBER(TRIM(to_char(NVL((bup_eph_unk),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') bup_eph_unk,
	TO_NUMBER(TRIM(to_char(NVL((bup_epa_knw),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') bup_epa_knw,
	TO_NUMBER(TRIM(to_char(NVL((bup_epa_unk),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') bup_epa_unk,
	TO_NUMBER(TRIM(to_char(NVL((bup_epd_knw),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') bup_epd_knw,
	TO_NUMBER(TRIM(to_char(NVL((bup_epd_unk),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') bup_epd_unk,
	TO_NUMBER(TRIM(to_char(NVL((bup_ts),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') bup_ts,
	TO_NUMBER(TRIM(to_char(NVL((blk_lcl_ofld),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') blk_lcl_ofld,
	TO_NUMBER(TRIM(to_char(NVL((blk_ts_ofld),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') blk_ts_ofld,
	TO_NUMBER(TRIM(to_char(NVL((bup_lcl_ofld),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') bup_lcl_ofld,
	TO_NUMBER(TRIM(to_char(NVL((bup_ts_ofld),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') bup_ts_ofld,
	TO_NUMBER(TRIM(to_char(NVL((rebuild),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') rebuild,
	TO_NUMBER(TRIM(to_char(NVL((eph_rebuild),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') eph_rebuild,
	TO_NUMBER(TRIM(to_char(NVL((epa_rebuild),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') epa_rebuild,
	TO_NUMBER(TRIM(to_char(NVL((epd_rebuild),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') epd_rebuild,
	TO_NUMBER(TRIM(to_char(NVL((large_pvc),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') large_pvc,
	TO_NUMBER(TRIM(to_char(NVL((small_pvc),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') small_pvc,
	TO_NUMBER(TRIM(to_char(NVL((wrap),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') wrap,
	TO_NUMBER(TRIM(to_char(NVL((REBUILD),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99')	exp_rebuild_weight,
	TO_NUMBER(TRIM(to_char(NVL((OUTBOUND_COURIER),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99')  ob_courier ,
	TO_NUMBER(TRIM(to_char(NVL((OUTBOUND_COURIER_TRANSHIPMENT),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99')  ob_courier_tr,
	TO_NUMBER(TRIM(to_char(NVL((OUTBOUND_EXCESS_BAGGAGE),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') pb_ecxess_bg,
	TO_NUMBER(TRIM(to_char(NVL((COMMERCIAL_GOODS_BAGGAGE),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99')  com_goods_bg,
	TO_NUMBER(TRIM(to_char(NVL((INBOUND_COURIER_BULK),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99')  inb_courier,
	TO_NUMBER(TRIM(to_char(NVL((INBOUND_COURIER_PREPACK),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') inb_courier_ppk,
	TO_NUMBER(TRIM(to_char(NVL((INBOUND_COURIER_TRANSHIPMENT),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') inb_courier_tr,
	TO_NUMBER(TRIM(to_char(NVL((INBOUND_EXCESS_BAGGAGE),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')),'999,999,999,999,999,999,999,999,999,999,999,999.99') inb_exs_bg
	FROM REPT_AIRL_TONN_OBC_IMAGE
	WHERE (TRUNC(FROM_DATE) between TO_DATE(#fromDate#,'DDMONYY') AND TO_DATE(#toDate#,'DDMONYY')
		AND TRUNC(TO_DATE) BETWEEN TO_DATE(#fromDate#,'DDMONYY') AND TO_DATE(#toDate#,'DDMONYY') )
		AND AIRLINE=#airLine# 
		and report_type='Daily'
		order by fltType,fltDate
 	</select>
	
	<select id="getNotClosedFlightList" parameterClass="cargo.cms.billing.report.bo.GenerateServiceReportBO"
		resultClass="cargo.cms.billing.report.bo.GenerateServiceReportBO">
		SELECT 
        FLT.FLT_KEY fltKey,
        TO_CHAR(FLT.SCH_DATE,'DDMONYY') fltDate,
        DECODE(FLT.FLT_TYPE,'A','I','E') fltType
        FROM FLT_OPR FLT JOIN  FLT_OPR_EVENTS OPR
        ON FLT.FLT_KEY = OPR.FLT_KEY
        AND FLT.SCH_DATE = OPR.SCH_DATE
        AND FLT.FLT_TYPE = OPR.FLT_TYPE
        AND FLT.ACT_DATE IS NOT NULL
        AND FLT.ACT_TIME IS NOT NULL
        WHERE TRUNC(FLT.ACT_DATE) BETWEEN to_date(#fromDate#,'DDMONYY') and to_date(#toDate#,'DDMONYY')
        AND NVL(OPR.FLT_CLS_YN,'N')='N' AND OPR.FLT_CLS_DATE is null AND FLT.CARR_CODE = #airLine# AND NVL(FLT.STATUS,'*') != 'X'
        ORDER BY fltType,to_date(fltDate,'DDMONYY')
	</select>
	<select id="getUnClosedFlightList" parameterClass="cargo.cms.billing.report.bo.GenerateServiceReportBO"
		resultClass="cargo.cms.billing.report.bo.GenerateServiceReportBO">
		SELECT 
        FLT.FLT_KEY fltKey,
        TO_CHAR(FLT.SCH_DATE,'DDMONYY') fltDate,
        TO_DATE(TO_CHAR(FLT.SCH_DATE,'DDMONYY')||trim(to_char(FLT.SCH_TIME,'0000')), 'DDMONYYHH24MI') ftDate,
        DECODE(FLT.FLT_TYPE,'A','I','E') fltType,
        TO_CHAR(OPR.CR_DATE,'DDMONYY HH24:MI') unCloseTime,
        OPR.CR_USER_ID unCloseUserId
        FROM FLT_OPR FLT JOIN  FLT_OPR_LOG OPR
        ON FLT.FLT_KEY = OPR.FLT_KEY
        AND FLT.SCH_DATE = OPR.SCH_DATE
        AND FLT.FLT_TYPE = OPR.FLT_TYPE
        AND FLT.ACT_DATE IS NOT NULL
        AND FLT.ACT_TIME IS NOT NULL
        WHERE TRUNC(FLT.ACT_DATE) BETWEEN to_date(#fromDate#,'DDMONYY') and to_date(#toDate#,'DDMONYY')
        AND FLT.CARR_CODE = #airLine# 
        AND UPPER(EVENT)='UNCLOSE'
        ORDER BY fltType,OPR.CR_DATE
	</select>
	
	<select id="serviceRecordReport1" parameterClass="cargo.cms.billing.report.bo.GenerateServiceReportBO"
		resultClass="cargo.cms.billing.report.bo.GenerateServiceReportBO">
	  		SELECT T.* FROM (SELECT TO_CHAR(RCRD.CR_DATE,'DDMONYY HH24:MI') srvcDate,
	  		 TO_CHAR(RCRD.CR_DATE,'DDMONYY') srvcDate1,
             MSTR.CHARGE_TO chrgTo ,
             (SELECT CODE_DESC FROM CUST_COMPANY WHERE CODE = RCRD.CUST_NO) partyName,
             (SELECT CARR_CODE FROM CUST_COMPANY WHERE CODE = RCRD.CUST_NO) carrCode,
             MSTR.SVC_NAME srvcName,
             MSTR.UOM uom,
             RCRD.AWB_NO awbNo,
             RCRD.HAWB_NO hawbNo,
             RCRD.FLT_KEY||DECODE(FLT_DATE,NULL,'','/'||TO_CHAR(FLT_DATE,'DDMONYY')) fltKey,
             RCRD.RMK remarks,
             RCRD.QTY qty,
             RCRD.VOID_USER_ID voidUserId,
            DECODE((SELECT ORIG||'/'||DEST FROM AWB WHERE AWB_NO = RCRD.AWB_NO AND AWB_DATE = RCRD.AWB_DATE),'/','',(SELECT ORIG||'/'||DEST FROM AWB WHERE AWB_NO = RCRD.AWB_NO AND AWB_DATE = RCRD.AWB_DATE)) origDest 
             FROM BILL_SVC_RECORD RCRD 
             JOIN BILL_SVC_MASTER MSTR ON RCRD.SVC_CODE = MSTR.SVC_CODE) T
             WHERE to_date(T.srvcDate1,'DDMONYY') BETWEEN #fromDate# AND #toDate#
             AND T.chrgTo = #chrgTo#
             AND T.voidUserId is null
             AND not exists (SELECT null FROM CUST_AIRL_SPL_CODE SPLCODE, AWB AWB 
                  WHERE SPLCODE.SPL_TYPE='SPL_COURIER_SHC'
                  AND SPLCODE.CARR_CODE = AWB.CARR_CODE
                  AND AWB.AWB_NO = T.awbNo
                  AND (SPLCODE.SPL_CODE = AWB.SPL_CODE1
                  OR SPLCODE.SPL_CODE   = AWB.SPL_CODE2
                  OR SPLCODE.SPL_CODE   = AWB.SPL_CODE3
                  OR SPLCODE.SPL_CODE   = AWB.SPL_CODE4
                  OR SPLCODE.SPL_CODE   = AWB.SPL_CODE5
                  OR SPLCODE.SPL_CODE   = AWB.SPL_CODE6
                  OR SPLCODE.SPL_CODE   = AWB.SPL_CODE7
                  OR SPLCODE.SPL_CODE   = AWB.SPL_CODE8
                  OR SPLCODE.SPL_CODE   = AWB.SPL_CODE9))
			<isNotEmpty property="srvcName">
			AND T.srvcName = #srvcName#
			</isNotEmpty>  
			<isNotEmpty property="partyName">
			AND T.partyName = #partyName#
			</isNotEmpty>      
			<isNotEmpty property="awbPrefix">
				 AND SUBSTR(T.awbNo,0,3)=#awbPrefix#
			</isNotEmpty>  
			<isNotEmpty property="airLine">
				AND T.carrCode  is not null AND NVL(T.carrCode,'*') = #airLine#
			</isNotEmpty>    
			<isEmpty property="airLine">
	    		<isNotEmpty property="loginCarrier">
		 			AND T.carrCode  is not null AND ( T.carrCode = #loginCarrier#  OR  T.carrCode IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE  = #loginCarrier#))          
       			</isNotEmpty>
			</isEmpty>   
	</select>
	
	<select id="serviceRecordReport2Weekly" parameterClass="cargo.cms.common.utils.bo.BatchJobBO"
		resultClass="cargo.cms.billing.report.bo.GenerateServiceReportBO">
	  		  SELECT 
	  		  TO_CHAR(TO_DATE(srvcDate,'DDMONYY HH24:MI'),'DDMONYY') srvcDate,
  			  TO_CHAR(TO_DATE(srvcDate1,'DDMONYY'),'DDMONYY') srvcDate1,
				chrgTo,
				partyName,
				srvcName,
				uom,
				awbNo,
				hawbNo,
				fltKey,
				qty,
				awbOrigDest,
				origDest,
				remarks,
				valYn,
				nvl(bsb_ind,'N') as bsbInd 
				from REPT_AIRL_SERVICE_IMAGE
				where service_report_type='ServiceReport2'
				and (TRUNC(FROM_DATE) between TO_DATE(#fromDate#,'DDMONYY') AND TO_DATE(#toDate#,'DDMONYY')
				AND TRUNC(TO_DATE) BETWEEN TO_DATE(#fromDate#,'DDMONYY') AND TO_DATE(#toDate#,'DDMONYY') )
				AND AIRLINE=#airLine# 
				and REPORT_TYPE='Daily'
	</select>
	
	<select id="serviceRecordReport1Weekly" parameterClass="cargo.cms.common.utils.bo.BatchJobBO"
		resultClass="cargo.cms.billing.report.bo.GenerateServiceReportBO">
	  		    SELECT
				  TO_CHAR(TO_DATE(srvcDate,'DDMONYY'),'DDMONYY') srvcDate,
					TO_CHAR(TO_DATE(srvcDate1,'DDMONYY'),'DDMONYY') srvcDate1,
					chrgTo,
					partyName,
					carrCode,
					srvcName,
					uom,
					awbNo,
					hawbNo,
					fltKey,
					remarks,
					qty,
					voidUserId,
					origDest
				from REPT_AIRL_SERVICE_IMAGE
				where service_report_type='ServiceReport1'
				and (TRUNC(FROM_DATE) between TO_DATE(#fromDate#,'DDMONYY') AND TO_DATE(#toDate#,'DDMONYY')
				AND TRUNC(TO_DATE) BETWEEN TO_DATE(#fromDate#,'DDMONYY') AND TO_DATE(#toDate#,'DDMONYY') )
				AND AIRLINE=#airLine# 
				and REPORT_TYPE='Daily'
	</select>
	
	<select id="serviceRecordReport2" parameterClass="cargo.cms.billing.report.bo.GenerateServiceReportBO"
		resultClass="cargo.cms.billing.report.bo.GenerateServiceReportBO">
		<![CDATA[
	  	SELECT SRVC_RCRD.* FROM (SELECT 
             TO_CHAR(CST.LM_DATE,'DDMONYY HH24:MI') srvcDate,
             TO_CHAR(CST.LM_DATE,'DDMONYY') srvcDate1,
             'SHIPPER' chrgTo ,
             ECAR.SHIPPER_NAME partyName,
             '' as carrierCode,
             'DUTIABLE COMMODITY BOND CHARGES' srvcName,
             'Shipment' uom,
             CST.AWB_NO awbNo,
             CST.HAWB_NO hawbNo,
             CST.FLT_KEY||DECODE(CST.FLT_DATE,NULL,'','/'||TO_CHAR(CST.FLT_DATE,'DDMONYY')) fltKey,
             to_char(1) qty,
             ECAR.ORIG||'/'||ECAR.DEST awbOrigDest,
             ECAR.ORIG||'/'||ECAR.DEST origDest,
             '' remarks,
             case when (select count(1) from cust_airl_spl_code where CARR_CODE = ECAR.CARR_CODE and spl_type = 'SPL_VAL' and 
                 SPL_CODE IN (NVL(ECAR.SPL_CODE1,'N'),NVL(ECAR.SPL_CODE2,'N'),NVL(ECAR.SPL_CODE3,'N'),NVL(ECAR.SPL_CODE4,'N'),NVL(ECAR.SPL_CODE5,'N'),NVL(ECAR.SPL_CODE6,'N'),
                 NVL(ECAR.SPL_CODE7,'N'),NVL(ECAR.SPL_CODE8,'N'),NVL(ECAR.SPL_CODE9,'N'))) > 0 then 'Y' else 'N' end valYn,
                 '' bsbInd
             FROM CST_DC_DTL CST
             JOIN AWB ECAR ON CST.AWB_NO = ECAR.AWB_NO AND CST.AWB_DATE = ECAR.AWB_DATE
             WHERE SHPM_TYPE = 'E'
             AND not exists (SELECT null FROM CUST_AIRL_SPL_CODE SPLCODE, AWB AWB 
                  WHERE SPLCODE.SPL_TYPE='SPL_COURIER_SHC'
                  AND SPLCODE.CARR_CODE = AWB.CARR_CODE
                  AND AWB.AWB_NO = CST.AWB_NO
                  AND (SPLCODE.SPL_CODE = AWB.SPL_CODE1
                  OR SPLCODE.SPL_CODE   = AWB.SPL_CODE2
                  OR SPLCODE.SPL_CODE   = AWB.SPL_CODE3
                  OR SPLCODE.SPL_CODE   = AWB.SPL_CODE4
                  OR SPLCODE.SPL_CODE   = AWB.SPL_CODE5
                  OR SPLCODE.SPL_CODE   = AWB.SPL_CODE6
                  OR SPLCODE.SPL_CODE   = AWB.SPL_CODE7
                  OR SPLCODE.SPL_CODE   = AWB.SPL_CODE8
                  OR SPLCODE.SPL_CODE   = AWB.SPL_CODE9))
  	UNION ALL   
  	SELECT to_char(OPR.sch_date,'DDMONYY') ||' '|| SUBSTR(TRIM(TO_CHAR(OPR.SCH_TIME,'0000')),1,2)
				  || NVL2(OPR.SCH_TIME, ':', '')
				  || SUBSTR(TRIM(TO_CHAR(OPR.SCH_TIME,'0000')),3,4) srvcDate,
	to_char(OPR.sch_date,'DDMONYY') srvcDate1,	  
   	'Airline' chrgTo,
   (select CODE_DESC FROM MAST_CARRIER WHERE CODE = OPR.CARR_CODE) partyName,
   OPR.CARR_CODE as carrierCode,
   	'Verification charges per HAWB for US port' srvcName,
    'HAWB' as uom,
    null as awbNo,
    null as hawbNo,
       T2.FLT_KEY||DECODE(T2.FLT_DATE,NULL,'','/'||TO_CHAR(T2.FLT_DATE,'DDMONYY')) fltKey,
    to_char(T2.cnt) qty,
    NULL awbOrigDest,
    NULL origDest,
    '' remarks,
     '' valYn,
     '' bsbInd
    FROM 
(SELECT T1.FLT_KEY , 	T1.FLT_DATE ,	 COUNT(1) cnt
  	 FROM 
  (select T.FLT_KEY , T.FLT_DATE , T.AWB_NO , T.AWB_DATE , T.HAWB_NO  from 
      (SELECT AWB.FLT_KEY FLT_KEY , AWB.FLT_DATE FLT_DATE,  AWB.AWB_NO AWB_NO, AWB.AWB_DATE AWB_DATE,HAWB.HAWB_NO HAWB_NO ,FLT.SCH_TIME FLT_TIME
          FROM EXP_PMANIFEST_ULD_AWB AWB JOIN
                              (SELECT FHL.AWB_NO AWB_NO , FHL.AWB_DATE AWB_DATE,FHL_HAWB.HAWB_NO HAWB_NO FROM EDI_FHL FHL JOIN EDI_FHL_HAWB FHL_HAWB ON FHL.TR_NO = FHL_HAWB.TR_NO)HAWB
           ON AWB.AWB_NO = HAWB.AWB_NO AND AWB.AWB_DATE = HAWB.AWB_DATE
           JOIN FLT_OPR FLT ON AWB.FLT_KEY = FLT.FLT_KEY AND AWB.FLT_DATE = FLT.SCH_DATE AND FLT.FLT_TYPE = 'D'
           WHERE FLT_DATE BETWEEN TO_DATE(#fromDate#,'DDMONYY') AND TO_DATE(#toDate#,'DDMONYY'))T
  	 where   NOT EXISTS ( SELECT NULL FROM EXP_PMANIFEST_ULD_AWB AWB
                          JOIN FLT_OPR FLT ON AWB.FLT_KEY = FLT.FLT_KEY AND AWB.FLT_DATE = FLT.SCH_DATE AND FLT.FLT_TYPE = 'D'
                          WHERE TO_DATE((TO_CHAR(FLT.SCH_DATE,'DDMONYY')||' '||TO_CHAR(FLT.SCH_TIME,'0000')),'DDMONYY HH24MI') < TO_DATE((TO_CHAR(T.FLT_DATE,'DDMONYY')||' '||TO_CHAR(T.FLT_TIME,'0000')),'DDMONYY HH24MI')
                          AND AWB.AWB_NO = T.AWB_NO AND AWB.AWB_DATE = T.AWB_DATE)  
  	 group by T.FLT_KEY , T.FLT_DATE , T.AWB_NO , T.AWB_DATE , T.HAWB_NO) T1 group by T1.FLT_KEY, T1.FLT_DATE) T2
  	 JOIN FLT_OPR OPR  ON OPR.FLT_KEY = T2.FLT_KEY AND OPR.SCH_DATE = T2.FLT_DATE AND OPR.FLT_TYPE = 'D'
 	UNION ALL
       SELECT TO_CHAR(SHP.IMX_RQS_DATE,'DDMONYY HH24:MI') srvcDate,
      TO_CHAR(SHP.IMX_RQS_DATE,'DDMONYY') srvcDate1,
      'Agent' chrgTo,
      AWB.APPNTD_AGENT partyName,
      '' as carrierCode,
      'IMX/Quick release services(provisonal)' srvcName,
      'kg'  uom,
      SHP.AWB_NO awbNo,
      null as hawbNo,
      SHP.FLT_KEY||''||DECODE(SHP.FLT_DATE,NULL,'','/'||TO_CHAR(SHP.FLT_DATE,'DDMONYY')) fltKey,
      decode(trunc(TRIM(to_char(AWB.AWB_WT,'999999999999999.99'))),0,0|| TRIM(to_char(AWB.AWB_WT,'999999999999999.99')), TRIM(to_char(AWB.AWB_WT,'999999999999999.99'))) qty,
      AWB.AWB_ORIGIN||'/'||AWB.AWB_DEST awbOrigDest,
      AWB.AWB_ORIGIN||'/'||AWB.AWB_DEST origDest,
      '' remarks,
       case when (select count(1) from cust_airl_spl_code where CARR_CODE = ECAR.CARR_CODE and spl_type = 'SPL_VAL' and 
                 SPL_CODE IN (NVL(ECAR.SPL_CODE1,'N'),NVL(ECAR.SPL_CODE2,'N'),NVL(ECAR.SPL_CODE3,'N'),NVL(ECAR.SPL_CODE4,'N'),NVL(ECAR.SPL_CODE5,'N'),NVL(ECAR.SPL_CODE6,'N'),
                 NVL(ECAR.SPL_CODE7,'N'),NVL(ECAR.SPL_CODE8,'N'),NVL(ECAR.SPL_CODE9,'N'))) > 0 then 'Y' else 'N' end valYn,
                 '' bsbInd
      FROM IMP_CAR_SHP SHP
      JOIN IMP_CAR_AWB AWB ON SHP.AWB_NO = AWB.AWB_NO AND SHP.AWB_DATE = AWB.AWB_DATE
      JOIN AWB ECAR  ON AWB.AWB_NO = ECAR.AWB_NO AND AWB.AWB_DATE = ECAR.AWB_DATE
      WHERE NVL(SHP.IMX_RQS,'N') = 'Y' AND SHP.IMX_RQS_DATE is not null
      AND not exists (SELECT null FROM CUST_AIRL_SPL_CODE SPLCODE, AWB AWB 
                  WHERE SPLCODE.SPL_TYPE='SPL_COURIER_SHC'
                  AND SPLCODE.CARR_CODE = AWB.CARR_CODE
                  AND AWB.AWB_NO = SHP.AWB_NO
                  AND (SPLCODE.SPL_CODE = AWB.SPL_CODE1
                  OR SPLCODE.SPL_CODE   = AWB.SPL_CODE2
                  OR SPLCODE.SPL_CODE   = AWB.SPL_CODE3
                  OR SPLCODE.SPL_CODE   = AWB.SPL_CODE4
                  OR SPLCODE.SPL_CODE   = AWB.SPL_CODE5
                  OR SPLCODE.SPL_CODE   = AWB.SPL_CODE6
                  OR SPLCODE.SPL_CODE   = AWB.SPL_CODE7
                  OR SPLCODE.SPL_CODE   = AWB.SPL_CODE8
                  OR SPLCODE.SPL_CODE   = AWB.SPL_CODE9))
    UNION ALL
      SELECT TO_CHAR(TRC.CR_DATE,'DDMONYY HH24:MI') srvcDate,
      TO_CHAR(TRC.CR_DATE,'DDMONYY') srvcDate1,
      'Agent' chrgTo,
      TRC.AGENT_NAME partyName,
      '' as carrierCode,
      (select CODE_DESC from Mast_code_dtl where code_type = 'ADM_REC_REQUEST' and code = TRC.REQ_TYPE) srvcName,
      'Unit'  uom,
      trc.AWB_NO awbNo,
      null as hawbNo,
      '' fltKey,
      to_char(1) qty,
      TRC.ORIG||'/'||TRC.DEST awbOrigDest,
      TRC.ORIG||'/'||TRC.DEST origDest,
      REMARKS remarks,
      case when (select count(1) from cust_airl_spl_code where CARR_CODE = ECAR.CARR_CODE and spl_type = 'SPL_VAL' and 
                 SPL_CODE IN (NVL(ECAR.SPL_CODE1,'N'),NVL(ECAR.SPL_CODE2,'N'),NVL(ECAR.SPL_CODE3,'N'),NVL(ECAR.SPL_CODE4,'N'),NVL(ECAR.SPL_CODE5,'N'),NVL(ECAR.SPL_CODE6,'N'),
                 NVL(ECAR.SPL_CODE7,'N'),NVL(ECAR.SPL_CODE8,'N'),NVL(ECAR.SPL_CODE9,'N'))) > 0 then 'Y' else 'N' end valYn,
                 '' bsbInd
      FROM TRC_ADM_REQ TRC
      left join AWB ECAR on NVL(TRC.AWB_NO,'000') = ECAR.AWB_NO AND NVL(TRC.AWB_DATE,'12AUG1988') = ECAR.AWB_DATE
      WHERE UPPER(REQ_STS) = 'CLOSE'
      AND not exists (SELECT null FROM CUST_AIRL_SPL_CODE SPLCODE, AWB AWB 
                  WHERE SPLCODE.SPL_TYPE='SPL_COURIER_SHC'
                  AND SPLCODE.CARR_CODE = AWB.CARR_CODE
                  AND AWB.AWB_NO = TRC.AWB_NO
                  AND (SPLCODE.SPL_CODE = AWB.SPL_CODE1
                  OR SPLCODE.SPL_CODE   = AWB.SPL_CODE2
                  OR SPLCODE.SPL_CODE   = AWB.SPL_CODE3
                  OR SPLCODE.SPL_CODE   = AWB.SPL_CODE4
                  OR SPLCODE.SPL_CODE   = AWB.SPL_CODE5
                  OR SPLCODE.SPL_CODE   = AWB.SPL_CODE6
                  OR SPLCODE.SPL_CODE   = AWB.SPL_CODE7
                  OR SPLCODE.SPL_CODE   = AWB.SPL_CODE8
                  OR SPLCODE.SPL_CODE   = AWB.SPL_CODE9))
    UNION ALL
      SELECT TO_CHAR(CHK.LM_DATE,'DDMONYY HH24:MI') srvcDate,
      TO_CHAR(CHK.LM_DATE,'DDMONYY') srvcDate1,
      'Airline' chrgTo ,
      ECAR.CARR_CODE partyName,
      '' as carrierCode,
      'Aviation security fee (upon cargo acceptance)' srvcName,
      'Kg' uom,
      CHK.AWB_NO awbNo,
      '',
      '' fltKey,
      decode(trunc(TRIM(to_char(SC_wt,'999999999999999.99'))),0,0|| TRIM(to_char(SC_wt,'999999999999999.99')), TRIM(to_char(SC_wt,'999999999999999.99'))) qty,
      ECAR.ORIG||'/'||ECAR.DEST  awbOrigDest,
      ECAR.ORIG||'/'||ECAR.DEST origDest,
      'RCL: '||CHK.RCL_NO remarks,
      case when (select count(1) from cust_airl_spl_code where CARR_CODE = ECAR.CARR_CODE and spl_type = 'SPL_VAL' and 
                 SPL_CODE IN (NVL(ECAR.SPL_CODE1,'N'),NVL(ECAR.SPL_CODE2,'N'),NVL(ECAR.SPL_CODE3,'N'),NVL(ECAR.SPL_CODE4,'N'),NVL(ECAR.SPL_CODE5,'N'),NVL(ECAR.SPL_CODE6,'N'),
                 NVL(ECAR.SPL_CODE7,'N'),NVL(ECAR.SPL_CODE8,'N'),NVL(ECAR.SPL_CODE9,'N'))) > 0 then 'Y' else 'N' end valYn,
                 '' bsbInd
      FROM EXP_RCL_HD HD,
      EXP_RCL_SEC_CHK_DTL CHK
      LEFT JOIN AWB ECAR ON CHK.AWB_NO = ECAR.AWB_NO AND CHK.AWB_DATE = ECAR.AWB_DATE
      WHERE SC_PAID_BY = 'AIRLINE'
      AND CHK.RCL_NO=HD.RCL_NO
      AND HD.STATUS!='V'
      AND not exists (SELECT null FROM CUST_AIRL_SPL_CODE SPLCODE, AWB AWB 
                  WHERE SPLCODE.SPL_TYPE='SPL_COURIER_SHC'
                  AND SPLCODE.CARR_CODE = AWB.CARR_CODE
                  AND AWB.AWB_NO = CHK.AWB_NO
                  AND (SPLCODE.SPL_CODE = AWB.SPL_CODE1
                  OR SPLCODE.SPL_CODE   = AWB.SPL_CODE2
                  OR SPLCODE.SPL_CODE   = AWB.SPL_CODE3
                  OR SPLCODE.SPL_CODE   = AWB.SPL_CODE4
                  OR SPLCODE.SPL_CODE   = AWB.SPL_CODE5
                  OR SPLCODE.SPL_CODE   = AWB.SPL_CODE6
                  OR SPLCODE.SPL_CODE   = AWB.SPL_CODE7
                  OR SPLCODE.SPL_CODE   = AWB.SPL_CODE8
                  OR SPLCODE.SPL_CODE   = AWB.SPL_CODE9))
    UNION ALL
    SELECT TO_CHAR(CHK.CR_DATE,'DDMONYY HH24:MI') srvcDate,
      TO_CHAR(CHK.CR_DATE,'DDMONYY') srvcDate1,
      'Airline' chrgTo ,      
      ECAR.CARR_CODE partyName,
      '' as carrierCode,
      'Aviation security fee (after cargo acceptance)' srvcName,
      'Kg' uom,
      CHK.AWB_NO awbNo,
      '',
      '' fltKey,
      decode(trunc(TRIM(to_char(CHK.WT,'999999999999999.99'))),0,0|| TRIM(to_char(CHK.WT,'999999999999999.99')), TRIM(to_char(CHK.WT,'999999999999999.99'))) qty,
      ECAR.ORIG||'/'||ECAR.DEST  awbOrigDest,
      ECAR.ORIG||'/'||ECAR.DEST origDest,
      'Job Order: '||JO_NO remarks,
      case when (select count(1) from cust_airl_spl_code where CARR_CODE = ECAR.CARR_CODE and spl_type = 'SPL_VAL' and 
                 SPL_CODE IN (NVL(ECAR.SPL_CODE1,'N'),NVL(ECAR.SPL_CODE2,'N'),NVL(ECAR.SPL_CODE3,'N'),NVL(ECAR.SPL_CODE4,'N'),NVL(ECAR.SPL_CODE5,'N'),NVL(ECAR.SPL_CODE6,'N'),
                 NVL(ECAR.SPL_CODE7,'N'),NVL(ECAR.SPL_CODE8,'N'),NVL(ECAR.SPL_CODE9,'N'))) > 0 then 'Y' else 'N' end valYn,
                 NVL((select bsb_ind from exp_sec_chk_jo where JO_NO=CHK.JO_NO AND STATUS = 'Completed' AND ECAR.awb_type='E'),'N') bsbInd
      FROM exp_sec_chk_jo CHK
      LEFT JOIN AWB ECAR ON CHK.AWB_NO = ECAR.AWB_NO AND CHK.AWB_DATE = ECAR.AWB_DATE
      WHERE CHARGE_TO = 'AIRLINE' and CHK.status <> 'VOID'      
      AND not exists (SELECT null FROM CUST_AIRL_SPL_CODE SPLCODE, AWB AWB 
                  WHERE SPLCODE.SPL_TYPE='SPL_COURIER_SHC'
                  AND SPLCODE.CARR_CODE = AWB.CARR_CODE
                  AND AWB.AWB_NO = CHK.AWB_NO
                  AND (SPLCODE.SPL_CODE = AWB.SPL_CODE1
                  OR SPLCODE.SPL_CODE   = AWB.SPL_CODE2
                  OR SPLCODE.SPL_CODE   = AWB.SPL_CODE3
                  OR SPLCODE.SPL_CODE   = AWB.SPL_CODE4
                  OR SPLCODE.SPL_CODE   = AWB.SPL_CODE5
                  OR SPLCODE.SPL_CODE   = AWB.SPL_CODE6
                  OR SPLCODE.SPL_CODE   = AWB.SPL_CODE7
                  OR SPLCODE.SPL_CODE   = AWB.SPL_CODE8
                  OR SPLCODE.SPL_CODE   = AWB.SPL_CODE9))
      ) SRVC_RCRD
        WHERE to_date(SRVC_RCRD.srvcDate1,'DDMONYY') BETWEEN #fromDate# AND #toDate#
        ]]>
             AND upper(SRVC_RCRD.chrgTo) = upper(#chrgTo#)
			<isNotEmpty property="srvcName">
			AND upper(SRVC_RCRD.srvcName) = upper(#srvcName#)
			</isNotEmpty>  
			<isNotEmpty property="awbPrefix">
				 AND SUBSTR(SRVC_RCRD.awbNo,0,3)=#awbPrefix#
			</isNotEmpty> 
			<isNotEmpty property="partyName">
			AND upper(SRVC_RCRD.partyName) = upper(#partyName#)
			</isNotEmpty>   
			<isNotEmpty property="airLine">
        	AND ( (NVL(SRVC_RCRD.carrierCode,'*') = upper(#airLine#)) OR (NVL(SRVC_RCRD.partyName,'*') = upper(#airLine#)) )
			</isNotEmpty>  
			<isEmpty property="airLine">
	    		<isNotEmpty property="loginCarrier">
	    		    AND ( 
	    		      ( ( (select CODE FROM MAST_CARRIER WHERE CODE_DESC = NVL(SRVC_RCRD.partyName,'*')) = upper(#loginCarrier#) ) OR (NVL(SRVC_RCRD.partyName,'*') = upper(#loginCarrier#)) )
	    		      OR ( ( select CODE FROM MAST_CARRIER WHERE CODE_DESC = NVL(SRVC_RCRD.partyName,'*') )  IN ( SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE  = #loginCarrier# ) )
	    			  OR ( NVL(SRVC_RCRD.partyName,'*')  IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE  = #loginCarrier#) )      
	    			 )  
       			</isNotEmpty>
			</isEmpty>   			 
	</select>
	<!--  Queries For Generate Report :: Ends :: Ranjith  -->
	
	<select id="sqlCheckServiceRecordCreated" parameterClass="cargo.cms.billing.bo.ItemBO"
		resultClass="java.lang.Integer">
		Select count(1) from Bill_svc_master where 
		where ITM_CODE = #itemCode#
		<isNotEmpty property="itemCodeSuffix">
		AND NVL(ITM_CODE_SFX,'*') = #itemCodeSuffix#
		</isNotEmpty> 
	</select>
	
	<select id="sqlCheckChargeRecordCreated" parameterClass="cargo.cms.billing.bo.ItemBO"
		resultClass="java.lang.Integer">
		Select count(1) from Bill_charge_dtl  
		where ITM_CODE = #itemCode#
		<isNotEmpty property="itemCodeSuffix">
		AND NVL(ITM_CODE_SFX,'*') = #itemCodeSuffix#
		</isNotEmpty> 
	</select>
	
	
	<select id="sqlIsServiceItmForCharge" parameterClass="cargo.cms.billing.bo.ItemBO" resultClass="java.lang.Integer" >
		SELECT COUNT(1) 
		FROM BILL_ITM_MASTER 
		WHERE ITM_CODE=#itemCode#
		<isNotEmpty property="itemCodeSuffix">
		AND ITM_CODE_SFX = #itemCodeSuffix#
		</isNotEmpty>
		AND nvl(SRVC_IND,'N') = 'Y'
	</select>
	
	<select id="sqlIsStandardItmForCharge" parameterClass="cargo.cms.billing.bo.ItemBO" resultClass="java.lang.Integer" >
		SELECT COUNT(1) 
		FROM BILL_ITM_MASTER 
		WHERE ITM_CODE=#itemCode#
		<isNotEmpty property="itemCodeSuffix">
		AND ITM_CODE_SFX = #itemCodeSuffix#
		</isNotEmpty>
		AND nvl(STD_IND,'N') = 'Y'
	</select>
	
	<select id="sqlShprOrCnsgnBillChargeDtl" parameterClass="cargo.cms.billing.bo.ChargeBO" resultClass="java.lang.String" >
		SELECT T.* From (SELECT HAWB_SHPR_OR_CNSGN 
		FROM BILL_CHARGE_DTL 
		<dynamic prepend="WHERE">
			STATUS != 'VOID'
			<isNotEmpty property="hawbNo">
				AND UPPER(HAWB_NO)=UPPER(#hawbNo#)
			</isNotEmpty>
			<isNotEmpty property="hawbAwbNo">
				AND UPPER(AWB_NO)=UPPER(#hawbAwbNo#)
			</isNotEmpty>
			<isNotEmpty property="hawbAgentCode">
				AND UPPER(HAWB_AGENT_CODE)=UPPER(#hawbAgentCode#)
			</isNotEmpty>
			<isNotEmpty property="hawbAgentName">
				AND UPPER(HAWB_AGENT_CODE)= NVL((select code from cust_company where UPPER(code_desc) =UPPER(#hawbAgentName#)),'*')
			</isNotEmpty>
		</dynamic> ORDER BY LM_DATE DESC) T WHERE ROWNUM=1
	</select>
	
	<select id="sqlShprOrCnsgnAsvHawb" parameterClass="cargo.cms.billing.bo.ChargeBO" resultClass="java.lang.String" >
		SELECT 		
		decode(USER_CSGN_SHPR,null,(SELECT CODE_DESC FROM CUST_COMPANY WHERE CODE = NVL(CSGN_CODE,'*')),USER_CSGN_SHPR)
		||'/'||decode(USER_CSGN_SHPR,NULL,'Y','N') 		
				 shipperOrConsignee
		FROM ASV_HAWB 
		WHERE 'XX' = 'XX'
			<isNotEmpty property="hawbNo">
				AND UPPER(HAWB_NO)=UPPER(#hawbNo#)
			</isNotEmpty>
			<isNotEmpty property="hawbAwbNo">
				AND UPPER(AWB_NO)=UPPER(#hawbAwbNo#)
			</isNotEmpty>
			<isNotEmpty property="hawbAgentCode">
				AND UPPER(AGENT_CODE)=UPPER(#hawbAgentCode#)
			</isNotEmpty>
			<isNotEmpty property="hawbAgentName">
				AND UPPER(AGENT_CODE)= NVL((select code from cust_company where UPPER(code_desc) =UPPER(#hawbAgentName#)),'*')
			</isNotEmpty>
	</select>
	
	<update id="sqlUpdateShprOrCnsgn" parameterClass="cargo.cms.billing.bo.ChargeBO" >
	<![CDATA[
		UPDATE ASV_HAWB 
		SET USER_CSGN_SHPR = UPPER(#shprOrCnsgn#)
		WHERE UPPER(HAWB_NO)=UPPER(#hawbNo#)
			AND (UPPER(AGENT_CODE)=UPPER(#hawbAgentCode#) OR 
				 UPPER(AGENT_CODE)= NVL((select code from cust_company where UPPER(code_desc) =UPPER(#hawbAgentName#)),'*'))
				 AND NVL(USER_CSGN_SHPR,'**') <> NVL((#shprOrCnsgn#),'**')	
				 ]]>
	</update>
	
	
	<select id="sqlWaiveAmtForBillChargeDtl" parameterClass="cargo.cms.billing.bo.ChargeBO" resultClass="cargo.cms.billing.bo.ChargeBO" >
	SELECT TR_NO trNo,			
		   WAVR_AMT waverAmt,
	       WAVR_RMK waverRmk,
	       WAVR_FORM_NO waverFormNumber,
	       CR_USER_ID waiverUsedId,
	       TO_CHAR(CR_DATE,'DDMONYY HH24:MI:SS') waiverDate,
	       WAVR_FORM_NO waiverFormNo,
		   WAVR_RMK waiverRemark	        
	FROM BILL_WAIVE_CHARGE
	WHERE NVL(CHARGE_CREATED,'N') = 'N'
	<isNotEmpty property="awbNo">
				AND UPPER(AWB_NO)=UPPER(#awbNo#)
			</isNotEmpty>
			<isNotEmpty property="awbDate">
				AND AWB_DATE = to_date(#awbDate#,'DDMONYY')
			</isNotEmpty>
			<isNotEmpty property="itemCode">
				AND UPPER(ITM_CODE)=UPPER(#itemCode#)
			</isNotEmpty>
			<isNotEmpty property="itemCodeSfx">
				AND NVL(ITM_CODE_SFX,'*')= UPPER(#itemCodeSfx#)
	</isNotEmpty>
	</select>
	
	
	<update id="sqlUpdateChargeIndicator" parameterClass="java.lang.String" >
	UPDATE BILL_WAIVE_CHARGE
	SET CHARGE_CREATED = 'Y'
	WHERE TR_NO = #trNo#
	</update>
<!-- Reimbursement  :: Ranjith :: Starts -->
	
	<!--To Check Invoice No is exist or not-->
	<select id="sqlCountInvoiceNo" parameterClass="java.lang.String" resultClass="java.lang.Integer" >
		SELECT COUNT(INV_NO) FROM BILL_INV_HD WHERE UPPER(INV_NO)=UPPER(#PARAM#)
	</select>
	
	<!--To Check Invoice No for FIN_SEND_YN-->
	<select id="sqlCountInvoiceFinSendYes" parameterClass="java.lang.String" resultClass="java.lang.Integer" >
		SELECT COUNT(INV_NO) FROM BILL_INV_HD WHERE UPPER(INV_NO)=UPPER(#PARAM#) AND FIN_SEND_YN='Y'
	</select>
	
	<!--To Check Invoice No for AIRLINE_INV_YN-->
	<select id="sqlCountInvoiceAirlInvYes" parameterClass="java.lang.String" resultClass="java.lang.Integer" >
		SELECT COUNT(INV_NO) FROM BILL_INV_HD WHERE UPPER(INV_NO)=UPPER(#PARAM#) AND AIRLINE_INV_YN='Y'
	</select>
	
	<!--To Check Two AdjNote has been created-->
	<select id="checkTwoAdjNoteCreated" parameterClass="java.lang.String" resultClass="java.lang.Integer" >
		SELECT COUNT(ADJ_NO) FROM BILL_ADJ_HD WHERE UPPER(INV_NO)=UPPER(#PARAM#)
	</select>
	
	<!--To fetch Invoice Header-->
	<select id="fetchInvoiceHeader" parameterClass="java.lang.String" resultClass="cargo.cms.billing.bo.InvoiceBO" >
		SELECT 
			BIH.INV_NO AS invoiceNo,
			to_char(BIH.INV_DATE,'DDMONYY HH24:MI') AS invoiceDate,
			BIH.INV_TYPE AS invoiceType,
			BCD.CUST_NO AS custNo,
			BCD.CUST_NAME AS custName,
			BIH.CHARGE_AMT AS chrgAmount,
			BIH.RMK AS remarks,
			BIH.CARR_CODE as carrCode
		FROM 
			BILL_INV_HD  BIH
      JOIN BILL_INV_DTL BID ON BIH.INV_NO = BID.INV_NO 
      JOIN BILL_CHARGE_DTL BCD ON BID.CHRG_TR_NO = BCD.TR_NO
		WHERE 
			UPPER(BIH.INV_NO)=UPPER(#PARAM#) and ROWNUM = 1
	</select>
	
	<!--To fetch Payment By InvoiceNo-->
	<select id="fetchPaymentByInvoiceNo" parameterClass="java.lang.String" resultClass="cargo.cms.billing.bo.PaymentBO" >
		SELECT 
			INV_NO AS invoiceNo,
			OTH_AMT others,        
			ADJ_AMT AS adjAmtPaid,         
			CHQ1_NO AS chequeNo1,    
			CHQ1_AMT AS chequeAmt1,   
			CHQ1_BANK AS chequeBnk1, 
			CHQ2_NO AS chequeNo2,       
			CHQ2_AMT AS chequeAmt2,   
			CHQ2_BANK AS chequeBnk2,
			CHQ3_NO AS chequeNo3,       
			CHQ3_AMT AS chequeAmt3,   
			CHQ3_BANK AS chequeBnk3,   
			CC_AMT AS creditCardAmt,                
			CC_COMPANY AS creditCardCompany,
			EPS_AMT AS eps,
			CURR_CODE AS currency,
			EXCH_RATE AS exchangeRate,
			FORGN_UNIT AS unit,
			CASH_AMT AS cash,
			CASH_AMT_LOCAL AS cashHKD,
			CHANGE_RETURNED changeReturned,
			E_PAYMENT_AMMOUNT ePayment,
			(select BUNDLE_REF_NO from BILL_INV_HD where INV_NO=#PARAM#) AS bundleRefNo
		FROM 
			BILL_PAYMENT 
		WHERE 
			UPPER(INV_NO)=UPPER(#PARAM#) AND PAY_TYPE='INV'
	</select>
	
	<!--To fetch Invoice Details-->	
	<select id="fetchInvoiceDtl" parameterClass="cargo.cms.billing.bo.InvoiceBO" resultClass="cargo.cms.billing.bo.InvoiceDTLBO">
		SELECT DISTINCT
			BCD.AWB_NO AS awbNo,
			BCD.AWB_DATE AS awbDate,
			(Select CARR_CODE FROM AWB WHERE AWB_NO = BCD.AWB_NO and AWB_DATE =  BCD.AWB_DATE) carrCode,
			(Select CATALOG FROM AWB WHERE AWB_NO = BCD.AWB_NO and AWB_DATE =  BCD.AWB_DATE) catalog,
			BCD.CUST_NO AS agentCode,
			BCD.HAWB_NO AS hawbNo,
			BCD.REMARKS AS remarks,
			A.INV_NO AS invoiceNo,
			A.DOC_LINE_NO AS docLineNo,
			A.CHRG_TR_NO AS chrgTrNo,
			A.ITM_CODE AS itemCode,
			A.ITM_CODE_SFX AS itemCodeSuffix,
			A.REV_IND AS revenueIndicator,
			A.CASH_IND AS cashInd,
			A.CHARGE_AMT AS chargeAmount,
			A.ACC_ADJ_AMT - CASE WHEN ACC.VAL = 0 THEN nvl(CADJ.ADJ_AMT, 0) ELSE 0 END AS showAccAdjAmount,
			nvl(A.ACC_ADJ_AMT, 0) AS accAdjAmount,
			B.ITM_DESC AS itemDesc
		FROM BILL_INV_DTL A
			JOIN BILL_INV_HD H ON A.INV_NO = H.INV_NO
			LEFT JOIN BILL_CHARGE_DTL BCD ON A.CHRG_TR_NO = BCD.TR_NO
			LEFT JOIN IMP_CAR_AWB C ON C.AWB_NO = BCD.AWB_NO AND C.AWB_DATE = BCD.AWB_DATE
			JOIN BILL_ITM_MASTER B ON A.ITM_CODE = B.ITM_CODE AND NVL(A.ITM_CODE_SFX,'**') = NVL(B.ITM_CODE_SFX,'**')
				 				   	  AND nvl(B.ECT_HANDLER, NVL(BCD.ECT_HANDLER, 'CPCT')) = NVL(BCD.ECT_HANDLER, 'CPCT')
      LEFT JOIN (SELECT INV_NO, IDOC_LINE_NO, SUM(ADJ_AMT) ADJ_AMT 
                FROM BILL_ADJ_DTL 
                WHERE ADJ_NO LIKE '%C%'
                GROUP BY INV_NO, IDOC_LINE_NO) CADJ ON CADJ.INV_NO = A.INV_NO AND CADJ.IDOC_LINE_NO = A.DOC_LINE_NO
      LEFT JOIN (select count(1) VAL
      		from sec_role_sub_function sf
      		join sec_user_role ur on ur.role_name = sf.role_code
      		where sf.Sub_Function_code = 'MISC_19_001' and enable_yn = 'Y' and ur.user_id = #crUserId#) ACC ON 1 = 1                
  		WHERE
  			UPPER(A.INV_NO)=  UPPER(#invoiceNo#)
	</select>	
	
     <!--To fetch Invoice Details with respect to Reimbursement-->	
	<select id="fetchInvDtlForReimbursemnt" parameterClass="cargo.cms.billing.bo.InvoiceBO" resultClass="cargo.cms.billing.bo.InvoiceDTLBO">
		SELECT DISTINCT
			BCD.AWB_NO AS awbNo,
			to_char(BCD.AWB_DATE,'DDMONYY') AS awbDate,
			(SELECT D.AIRLINE  FROM BILL_INV_CRD_DTL D  WHERE D.INV_NO = A.INV_NO  AND ROWNUM   = 1) carrCode,
			(Select CATALOG FROM AWB WHERE AWB_NO = BCD.AWB_NO and AWB_DATE =  BCD.AWB_DATE) catalog,
			BCD.CUST_NO AS agentCode,
			BCD.HAWB_NO AS hawbNo,
			BCD.REMARKS AS remarks,
			A.INV_NO AS invoiceNo,
			A.DOC_LINE_NO AS docLineNo,
			A.CHRG_TR_NO AS chrgTrNo,
			A.ITM_CODE AS itemCode,
			A.ITM_CODE_SFX AS itemCodeSuffix,
			A.REV_IND AS revenueIndicator,
			A.CASH_IND AS cashInd,
			A.CHARGE_AMT AS chargeAmount,
			A.ACC_ADJ_AMT - CASE WHEN ACC.VAL = 0 THEN nvl(CADJ.ADJ_AMT, 0) ELSE 0 END AS showAccAdjAmount,
			nvl(A.ACC_ADJ_AMT, 0) AS accAdjAmount,
			B.ITM_DESC AS itemDesc
		FROM BILL_INV_DTL A
			JOIN BILL_INV_HD H ON A.INV_NO = H.INV_NO
			LEFT JOIN BILL_CHARGE_DTL BCD ON A.CHRG_TR_NO = BCD.TR_NO
			LEFT JOIN IMP_CAR_AWB C ON C.AWB_NO = BCD.AWB_NO AND C.AWB_DATE = BCD.AWB_DATE
			JOIN BILL_ITM_MASTER B ON A.ITM_CODE = B.ITM_CODE AND NVL(A.ITM_CODE_SFX,'**') = NVL(B.ITM_CODE_SFX,'**')
				 				   	  AND nvl(B.ECT_HANDLER, NVL(BCD.ECT_HANDLER, 'CPCT')) = NVL(BCD.ECT_HANDLER, 'CPCT')
      LEFT JOIN (SELECT INV_NO, IDOC_LINE_NO, SUM(ADJ_AMT) ADJ_AMT 
                FROM BILL_ADJ_DTL 
                WHERE ADJ_NO LIKE '%C%'
                GROUP BY INV_NO, IDOC_LINE_NO) CADJ ON CADJ.INV_NO = A.INV_NO AND CADJ.IDOC_LINE_NO = A.DOC_LINE_NO
      LEFT JOIN (select count(1) VAL
      		from sec_role_sub_function sf
      		join sec_user_role ur on ur.role_name = sf.role_code
      		where sf.Sub_Function_code = 'MISC_19_001' and enable_yn = 'Y' and ur.user_id = #crUserId#) ACC ON 1 = 1                
  		WHERE
  			UPPER(A.INV_NO)=  UPPER(#invoiceNo#)
	</select>
	
	<select id="fetchAirlCreditBalanceForReimburse" parameterClass="cargo.cms.billing.bo.InvoiceDTLBO" resultClass="java.lang.Double" >
		SELECT sum(CR_BAL) 
		FROM CUST_AGENT_AIRL_CREDIT 
		WHERE 
		UPPER(CUST_NO)=UPPER(#agentCode#)
		AND UPPER(CR_TYPE)=UPPER(#catalog#)
		AND instr( nvl(UPPER(CARR_CODE),'*'), nvl(UPPER(#carrCode#),'**') ) &gt; 0 
		AND (TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY') &lt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') &gt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') )
		AND nvl(upper(Status),'**') &lt;&gt; 'VOID'
	</select>
	
	
	<select id="fetchAirlCreditBalanceForReimburseForValidation" parameterClass="cargo.cms.billing.bo.InvoiceDTLBO" resultClass="java.lang.Double" >
	  SELECT DISTINCT
			BCD.AWB_NO AS awbNo,
			BCD.AWB_DATE AS awbDate,
			(Select CARR_CODE FROM AWB WHERE AWB_NO = BCD.AWB_NO and AWB_DATE =  BCD.AWB_DATE) carrCode,
			(Select CATALOG FROM AWB WHERE AWB_NO = BCD.AWB_NO and AWB_DATE =  BCD.AWB_DATE) catalog,
      BCD.CUST_NO agentNo
			FROM BILL_INV_DTL A
			JOIN BILL_INV_HD H ON A.INV_NO = H.INV_NO
			JOIN BILL_CHARGE_DTL BCD ON A.CHRG_TR_NO = BCD.TR_NO
			LEFT JOIN IMP_CAR_AWB C ON C.AWB_NO = H.AWB_NO AND C.AWB_DATE = H.AWB_DATE
			JOIN BILL_ITM_MASTER B ON A.ITM_CODE = B.ITM_CODE AND NVL(A.ITM_CODE_SFX,'**') = NVL(B.ITM_CODE_SFX,'**')
				 				   	  AND nvl(B.ECT_HANDLER, NVL(C.ECT_HANDLER, 'CPCT')) = NVL(C.ECT_HANDLER, 'CPCT')
      LEFT JOIN (SELECT INV_NO, IDOC_LINE_NO, SUM(ADJ_AMT) ADJ_AMT 
                FROM BILL_ADJ_DTL 
                WHERE ADJ_NO LIKE '%C%'
                GROUP BY INV_NO, IDOC_LINE_NO) CADJ ON CADJ.INV_NO = A.INV_NO AND CADJ.IDOC_LINE_NO = A.DOC_LINE_NO
      LEFT JOIN (select count(1) VAL
      		from sec_role_sub_function sf
      		join sec_user_role ur on ur.role_name = sf.role_code
      		where sf.Sub_Function_code = 'MISC_19_001' and enable_yn = 'Y' and ur.user_id = 'ADMIN1') ACC ON 1 = 1                
  		WHERE
  			UPPER(A.INV_NO)=  UPPER('150611I0002')
	</select>
	<!--To Get Agent Details For Credit Balance
	<select id="fetchAgentDetailForReimbursement" parameterClass="cargo.cms.billing.bo.InvoiceBO" resultClass="cargo.cms.billing.bo.InvoiceBO" >
			SELECT 
	</select>-->
	
	<!--  Adjustment Note Generation :: Ranjith :: Starts -->
	<select id="sqlGetAdjustmentDetails" parameterClass="cargo.cms.billing.report.bo.AdjustMentNoteReptBO" resultClass="cargo.cms.billing.report.bo.AdjustMentNoteReptBO" >
	select 'ABC' itemDesc ,
	'10' itmQty,
	'1' itmPrice,
	'100' amtHKD
	from bill_adj_dtl 
	</select>
	<!--  Adjustment Note Generation :: Ranjith :: Ends -->
	
	
	<!--To Check Shipper Exists or not-->
	<select id="sqlCountShprName" parameterClass="java.lang.String" resultClass="java.lang.Integer" >
		SELECT COUNT(CODE_DESC) FROM CUST_COMPANY WHERE UPPER(CODE_DESC)=UPPER(#PARAM#) AND NVL(ACTIVE,'N') = 'Y' AND (NVL(shpr_yn,'N') = 'Y' OR NVL(CONS_YN,'N') = 'Y') 
	</select>
	
	<!--To Check Service Item is Created Or not-->
	<select id="sqlIsServiceItemCreated" parameterClass="cargo.cms.billing.bo.ItemBO" resultClass="java.lang.Integer" >
	SELECT count(1) from BILL_SVC_MASTER WHERE ITM_CODE =#itemCode#  AND NVL(ITM_CODE_SFX,'*') = NVL(#itemCodeSuffix#,'*')
	</select>
	
	<!--  To Delete User Entered Waive Charges -->
	<delete id="sqlDeleteWaiveCharge" parameterClass="java.lang.String">
		DELETE FROM BILL_WAIVE_CHARGE WHERE TR_NO = #trNo#
	</delete>
	
	
	<!--  To Activate the Truck when the full waive is done against the IPASSCHARGE for the truck -->
	<update id="sqlActivateTruck" parameterClass="java.lang.String">
	UPDATE TCS_IPASS_MASTER 
	SET STATUS = 'ACTIVE'
	WHERE TRUCK_NO = #truckNo#
	</update>
	
	<!--  To validate party name :: Generate Report  :: Ranjith -->
	
	 <select id="validatingReportPartyName" parameterClass="cargo.cms.billing.report.bo.GenerateServiceReportBO"  resultClass="java.lang.Integer">
   SELECT COUNT(1) FROM CUST_COMPANY WHERE CODE_DESC  = #partyName# 
   		AND ACTIVE = 'Y' AND BLACKLISTED = 'N' 
    <isEqual prepend="AND" property="chrgTo" compareValue="AGENT">
    				NVL(AGENT_YN,'N') = 'Y'
	</isEqual>
	
	<isEqual prepend="AND" property="chrgTo" compareValue="AIRLINE">
					NVL(AIRLINE_YN,'N') = 'Y'
	</isEqual> 
	
	<isEqual prepend="AND" property="chrgTo" compareValue="CONSIGNEE">
					NVL(CONS_YN,'N')='Y'
	</isEqual> 
	
	<isEqual prepend="AND" property="chrgTo" compareValue="SHIPPER">
	    			NVL(SHPR_YN,'N') = 'Y'
	</isEqual> 

	<isEqual prepend="AND" property="chrgTo" compareValue="AGENT FOR AGENT SERVICES">
    				NVL(AGENT_YN,'N') = 'Y'
	</isEqual>
	
	<isEqual prepend="AND" property="chrgTo" compareValue="INTERMODAL AGENT">
	    				NVL(AGENT_YN,'N') = 'Y'
	</isEqual>

	</select>
	
	<!--  To validate Service Name :: Generate report :: Ranjith -->
	<select id="validatingReportServiceName" parameterClass="cargo.cms.billing.report.bo.GenerateServiceReportBO"  resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM BILL_SVC_MASTER WHERE SVC_NAME = #srvcName#
	</select>
	
	<!--  To validate Whether the item is valid or not :: Maintain Item Master-->

	
	<select id="sqlIsValidItem" parameterClass="cargo.cms.billing.bo.ItemBO"  resultClass="java.lang.Integer">
		SELECT COUNT(1) 
		FROM BILL_ITM_MASTER 
		WHERE ITM_CODE=#itemCode#
		AND NVL(ITM_CODE_SFX,'*') = NVL(#itemCodeSuffix#,'*')
	</select>	
	
	<select id="checkAdjNumber" parameterClass="java.lang.String"  resultClass="java.lang.Integer">
		SELECT COUNT(1) 
		FROM BILL_ADJ_HD 
		WHERE ADJ_NO=#adjNo#
	</select>	
	
	<select id="getInvoiceNumber" parameterClass="java.lang.String"  resultClass="java.lang.String">
			select trim(to_char(INVOICE_NO_SEQ.NEXTVAL,'00000000')) from dual
	</select>	
	
	
	<select id="getAdjustMentNo" parameterClass="java.lang.String"  resultClass="java.lang.String">
			select trim(to_char(ADJUSTMENT_NO_SEQ.NEXTVAL,'000000')) from dual
	</select>	
	
	<select id="sqlGetMaxWaiveAmountFromSysParams" parameterClass="java.lang.String"  resultClass="java.lang.String">
			select rule_value from cmsrules where rule_code = 'MAX_WAIVE_AMOUNT'
	</select>	
	
	<select id="getMaxReimburseAmt1" parameterClass="java.lang.String"  resultClass="java.lang.String">
			select rule_value from cmsrules where rule_code = 'LEVEL_1_REIMBURSEMENT'
		
	</select>	
	<select id="getMaxReimburseAmt2" parameterClass="java.lang.String"  resultClass="java.lang.String">
			select rule_value from cmsrules where rule_code = 'LEVEL_2_REIMBURSEMENT'
	</select>
	
	<!-- Package Call to Create Security charges  :: Ranjth  :: Starts-->
  <parameterMap class="map" id="secCheckmap">
  	<parameter property="p_rcl_no"      jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
  	<parameter property="p_awb_no"  jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
  	<parameter property="p_awb_date" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
  	<parameter property="p_user"      jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
  	<parameter property="p_qty"  jdbcType="NUMBER" javaType="java.lang.String" mode="IN"/>
  	<parameter property="p_scjo"  jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
  	<parameter property="v_inv_no" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
 </parameterMap> 
 <procedure id="createSecurityCheckCharge" parameterMap="secCheckmap" >
  	{call PKG_EXP_BILLING.prc_sec_chk(?,?,?,?,?,?,?)}
 </procedure>
 <!--  Package Call to Create Security charges  :: Ranjth  ::ENDS-->
 
 <parameterMap class="map" id="newSecCheckmap">
  	<parameter property="p_rcl_no"      jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
  	<parameter property="p_awb_no"  jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
  	<parameter property="p_awb_date" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
  	<parameter property="p_user"      jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
  	<parameter property="p_qty"  jdbcType="NUMBER" javaType="java.lang.String" mode="IN"/>
  	<parameter property="p_scjo"  jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
  	<parameter property="v_chrg_tr_no" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
 </parameterMap> 
 <procedure id="newCreateSecurityCheckCharge" parameterMap="newSecCheckmap" >
  	{call PKG_EXP_BILLING.prc_new_sec_chk(?,?,?,?,?,?,?)}
 </procedure>
 
 <!--  Enquire Consolidated Invoice :: Ranjith :: Starts -->
 	<select id="getConsolidatedInvoiceList" parameterClass="cargo.cms.billing.bo.InvoiceBO"  resultClass="cargo.cms.billing.bo.InvoiceBO">
			SELECT DTL.CNSLDT_INV_NO consolidatedInvNo, 
				   TO_CHAR(HD.INV_DATE,'DDMONYY HH24:MI') invoiceDate,
				   HD.INV_NO invoiceNo,
				   decode(HD.INV_TYPE,'CRD','CREDIT','CSH','CASH') invType, 
				   trim(to_char(NVL(SUM(DTL.CHARGE_AMT),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')) invAmount,
				   HD.CUST_NAME custName
			FROM BILL_INV_HD HD JOIN BILL_INV_DTL DTL ON HD.INV_NO = DTL.INV_NO
			WHERE to_date(to_char(HD.INV_DATE,'DDMONYY'),'DDMONYY') BETWEEN #invDateFrom# AND #invDateTo# 
			AND DTL.CNSLDT_INV_NO is not null
			AND (HD.CUST_NAME = #companyName# OR HD.CUST_NO = (select code from cust_company where code_desc = #companyName#))
			<isNotEmpty property="invType">
			AND UPPER(INV_TYPE) = decode(#invType#,'CREDIT','CRD','CASH','CSH')
			</isNotEmpty>
			<isNotEmpty property="consolidatedInvNo">
			AND UPPER(CNSLDT_INV_NO) = #consolidatedInvNo#
			</isNotEmpty>
			group by DTL.CNSLDT_INV_NO,HD.INV_DATE, HD.INV_NO ,HD.INV_TYPE,HD.CUST_NAME
			UNION
			SELECT DTL.CNSLDT_INV_NO consolidatedInvNo, 
				   TO_CHAR(HD.ADJ_DATE,'DDMONYY HH24:MI') invoiceDate,
				   HD.ADJ_NO invoiceNo,
				   decode(HD.ADJ_TYPE,'CRD','CREDIT','CSH','CASH') invType, 
				   trim(to_char(NVL(SUM(DTL.ADJ_AMT),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')) invAmount,
				   HD.CUST_NAME custName
			FROM BILL_ADJ_HD HD JOIN BILL_ADJ_DTL DTL ON HD.ADJ_NO = DTL.ADJ_NO
			WHERE to_date(to_char(HD.ADJ_DATE,'DDMONYY'),'DDMONYY') BETWEEN #invDateFrom# AND #invDateTo# 
			AND DTL.CNSLDT_INV_NO is not null
			AND (HD.CUST_NAME = #companyName# OR HD.CUST_NO = (select code from cust_company where code_desc = #companyName#))
			<isNotEmpty property="invType">
			AND UPPER(ADJ_TYPE) = decode(#invType#,'CREDIT','CRD','CASH','CSH')
			</isNotEmpty>
			<isNotEmpty property="consolidatedInvNo">
			AND UPPER(CNSLDT_INV_NO) = #consolidatedInvNo#
			</isNotEmpty>
			group by DTL.CNSLDT_INV_NO,HD.ADJ_DATE, HD.ADJ_NO ,HD.ADJ_TYPE,HD.CUST_NAME
	</select>
	
	<select id="getConsolidatedInvoiceListSum" parameterClass="cargo.cms.billing.bo.InvoiceBO"  resultClass="java.lang.String">
			SELECT 	trim(to_char(NVL(SUM(t.invAmount),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')) 
			 FROM (SELECT DTL.CNSLDT_INV_NO consolidatedInvNo, 
				   TO_CHAR(HD.INV_DATE,'DDMONYY HH24:MI') invoiceDate,
				   HD.INV_NO invoiceNo,
				   decode(HD.INV_TYPE,'CRD','CREDIT','CSH','CASH') invType, 
				   SUM(DTL.CHARGE_AMT) invAmount,
				   HD.CUST_NAME custName
			FROM BILL_INV_HD HD JOIN BILL_INV_DTL DTL ON HD.INV_NO = DTL.INV_NO
			WHERE to_date(to_char(HD.INV_DATE,'DDMONYY'),'DDMONYY') BETWEEN #invDateFrom# AND #invDateTo# 
			AND DTL.CNSLDT_INV_NO is not null
			AND (HD.CUST_NAME = #companyName# OR HD.CUST_NO = (select code from cust_company where code_desc = #companyName#))
			<isNotEmpty property="invType">
			AND UPPER(INV_TYPE) = decode(#invType#,'CREDIT','CRD','CASH','CSH')
			</isNotEmpty>
			<isNotEmpty property="consolidatedInvNo">
			AND UPPER(CNSLDT_INV_NO) = #consolidatedInvNo#
			</isNotEmpty>
			group by DTL.CNSLDT_INV_NO,HD.INV_DATE, HD.INV_NO ,HD.INV_TYPE,HD.CUST_NAME
			UNION
			SELECT DTL.CNSLDT_INV_NO consolidatedInvNo, 
				   TO_CHAR(HD.ADJ_DATE,'DDMONYY HH24:MI') invoiceDate,
				   HD.ADJ_NO invoiceNo,
				   decode(HD.ADJ_TYPE,'CRD','CREDIT','CSH','CASH') invType, 
				   SUM(DTL.ADJ_AMT) invAmount,
				   HD.CUST_NAME custName
			FROM BILL_ADJ_HD HD JOIN BILL_ADJ_DTL DTL ON HD.ADJ_NO = DTL.ADJ_NO
			WHERE to_date(to_char(HD.ADJ_DATE,'DDMONYY'),'DDMONYY') BETWEEN #invDateFrom# AND #invDateTo# 
			AND DTL.CNSLDT_INV_NO is not null
			AND (HD.CUST_NAME = #companyName# OR HD.CUST_NO = (select code from cust_company where code_desc = #companyName#))
			<isNotEmpty property="invType">
			AND UPPER(ADJ_TYPE) = decode(#invType#,'CREDIT','CRD','CASH','CSH')
			</isNotEmpty>
			<isNotEmpty property="consolidatedInvNo">
			AND UPPER(CNSLDT_INV_NO) = #consolidatedInvNo#
			</isNotEmpty>
			group by DTL.CNSLDT_INV_NO,HD.ADJ_DATE, HD.ADJ_NO ,HD.ADJ_TYPE,HD.CUST_NAME)t
	</select>
	
	<select id="getInvoiceListForConslInvNo" parameterClass="cargo.cms.billing.bo.InvoiceBO"  resultClass="cargo.cms.billing.bo.InvoiceBO">
	   SELECT BCD.ITM_DESC itemCodeDesc,
              BCD.UOM uom,
              BCD.QTY qty,
              trim(to_char(NVL(INV.CHARGE_AMT,0),'999,999,999,999,999,999,999,999,999,999,999.99')) amount
              FROM 
             BILL_INV_DTL INV JOIN BILL_CHARGE_DTL BCD ON  INV.CHRG_TR_NO = BCD.TR_NO
        WHERE INV.INV_NO = #invoiceNo# AND INV.CNSLDT_INV_NO = #consolidatedInvNo#
        UNION
        SELECT BCD.ITM_DESC itemCodeDesc,
               BCD.UOM uom,
               BCD.QTY qty,
               trim(to_char(NVL(ADJ.ADJ_AMT,0),'999,999,999,999,999,999,999,999,999,999,999.99')) amount
               FROM 
               BILL_ADJ_DTL ADJ JOIN BILL_INV_DTL INV ON ADJ.INV_NO = INV.INV_NO AND ADJ.IDOC_LINE_NO = INV.DOC_LINE_NO 
               JOIN BILL_CHARGE_DTL BCD ON  INV.CHRG_TR_NO = BCD.TR_NO
        WHERE ADJ.ADJ_NO = #invoiceNo# AND ADJ.CNSLDT_INV_NO = #consolidatedInvNo#
	</select>
	
	<select id="isValidConslInvNo" parameterClass="java.lang.String"  resultClass="java.lang.String">
	  SELECT COUNT(1) FROM BILL_INV_DTL INV WHERE  INV.CNSLDT_INV_NO = #consolidatedInvNo#
	</select>
	
	<select id="getConslInvDateDiff" parameterClass="map"  resultClass="java.lang.String">
	   SELECT COUNT(1) FROM DUAL WHERE to_date(#TO_DATE#,'DDMONYY') > ADD_MONTHS(to_date(#FROM_DATE#,'DDMONYY'),1)
	</select>
 
 <!--  Enquire Concsolidated Invoice :: Ranjith :: Ends -->
 
 <!-- Waive Charges Bug Fixing :: Ranjith :: Starts -->
 	<update id="sqlUpateChargeStatusOnFullWaive" parameterClass="cargo.cms.billing.bo.ChargeBO">
 		UPDATE BILL_CHARGE_DTL
		SET STATUS = 'PAID'						
		WHERE 
		        UPPER(TR_NO) = UPPER(#trNo#)
		    AND UPPER(ITM_CODE) = UPPER(#itemCode#)
		    AND UPPER(NVL(ITM_CODE_SFX,'N')) = UPPER(NVL(#itemCodeSfx#,'N'))	
 	</update>
 
 	<select id="sqlGetSrfChargesForFullWaive" parameterClass="java.lang.String"  resultClass="java.lang.Integer">
 		SELECT COUNT(1) FROM BILL_CHARGE_DTL WHERE CHRG_AMT > 0 and upper(STATUS) = 'PENDING' and SRF_NO = #srfNo#
 	</select>
  	
  	<update id="sqlUpateSrfChargeStatusOnFullWaive" parameterClass="java.lang.String">
 		UPDATE IMP_SRF 
 		SET CHARGE_STATUS = 'PAID'
 		WHERE SRF_NO = #srfNo#
 	</update>
 
 <!-- Waive Charges Bug Fixing :: Ranjith :: Ends -->
 
 
 	<select id="fetchDmApprovalBalanceMap" parameterClass="java.lang.String" resultClass="java.lang.String" >
		SELECT sum(CR_AMT) FROM CUST_AGENT_DM_APP 
		WHERE
		UPPER(CUST_NO)=UPPER(#custNo#)
		AND (TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY') &lt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') &gt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') )
		AND nvl(upper(Status),'**') &lt;&gt; 'VOID'
	</select>
	
	<select id="checkVirtualCrAccForAgent"  parameterClass="java.lang.String"  resultClass="java.lang.String">
		select virtual_cr_acc from cust_company where code=#apptdAgt#
	</select>
	
	<select id="fetchCPCTCreditBalanceMap" parameterClass="java.lang.String" resultClass="cargo.cms.billing.bo.InvoiceDTLBO" >
		SELECT decode(UPPER(CR_TYPE),'IMPORT_GEN','IG','EXPORT_GEN','EG','IMPORT_OBC','IO','EXPORT_OBC','EO',NVL(UPPER(CR_TYPE),'')) mapKey,CR_BAL mapValue
		FROM CUST_AGENT_CREDIT 
		WHERE 
			UPPER(CUST_NO)=UPPER(#custNo#) 
			AND (TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY') 
			&lt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') 
			&gt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') )
			and nvl(upper(Status),'**') &lt;&gt; 'VOID'
	</select>
	
	<!--To fetch Airline Credit balance-->
	<select id="fetchAirlCreditBalanceMap" parameterClass="java.lang.String" resultClass="cargo.cms.billing.bo.InvoiceDTLBO" >
		SELECT UPPER(CARR_CODE)||'/'||decode(UPPER(CR_TYPE),'IMPORT_GEN','IG','EXPORT_GEN','EG','IMPORT_OBC','IO','EXPORT_OBC','EO','') mapKey , CR_BAL  mapValue
		FROM CUST_AGENT_AIRL_CREDIT 
		WHERE 
		UPPER(CUST_NO)=UPPER(#custNo#)
		AND (TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY') &lt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') &gt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') )
		AND nvl(upper(Status),'**') &lt;&gt; 'VOID'
	</select>
	
	
		<!--To fetch Amount Charged-->
	<select id="getAmountChargeForItemAndQuantity" parameterClass="map" resultClass="java.lang.String" >
		SELECT NVL(#QUANTITY#,0)*NVL(pkg_calculate.get_unit_price(#CHRG_ITEM_CODE#,#CHRG_ITEM_CODE_SFX#,#QUANTITY#),0)FROM DUAL
	</select>
	
	<select id="sqlGetChargeItemDetails" parameterClass="map" resultClass="cargo.cms.billing.bo.ItemBO" >
		SELECT
			ITM_CODE AS itemCode,				
			ITM_CODE_SFX AS itemCodeSuffix,          
			ITM_DESC AS itemDesc,  
			REV_IND AS revenueIndicator,          
			STD_IND AS standardIndicator,
			CASH_IND AS cashIndicator,			   
			WAVR_IND AS waiverIndicator,                
			UOM AS uom,
			MIN_CHRG AS minCharge,
			MAX_CHRG AS maxCharge,
			UPD_DESC AS updateDescIndicator,
			UPD_RATE  AS updateRateIndicator,
			UPD_RATE  AS updateRateIndicator,
			(pkg_calculate.get_unit_price(ITM_CODE,ITM_CODE_SFX,#QTY#)) chargeUnitPrice
		FROM 
			BILL_ITM_MASTER 
		WHERE 
		    UPPER(ITM_CODE) = UPPER(#ITM_CODE#)
		   	AND ITM_CODE_SFX is null AND	ECT_HANDLER is null
	</select>
	
	
	<insert id="sqlCreateReturnCargoCharges" parameterClass="map" >
		INSERT INTO BILL_CHARGE_DTL
		(TR_NO,AWB_DATE, AWB_NO, RCL_NO, CALC_CHRG ,BALANCE_AMT,
		CASH_IND,CHRG_AMT,   CUST_NO , CUST_NAME , ITM_CODE, 
		ITM_CODE_SFX, ITM_DESC, MAX_CHRG_IND, MIN_CHRG_IND, NET_AMT ,
		QTY, REV_IND, SRF_NO,  STD_IND,  
		UNIT_PRICE,UOM, UPD_DESC_IND, UPD_RATE_IND, WAVR_IND,WAVR_AMT,
		LM_USER_ID, CR_USER_ID, STATUS ,CURR_CODE, LM_DATE, CR_DATE,PAID_AMT_DM,ULD_KEY,PAID_AMT_CREDIT,WAVR_DATE,WAVR_USER_ID,WAVR_FORM_NO,WAVR_RMK,REMARKS)
		VALUES
		(#CHRG_TR_NO#,#AWB_DATE#, #AWB_NO#, #RCL_NO#,  NVL(#CALC_CHRG#,0) ,NVL(#CHRG_AMT#,0),
		NVL(#CASH_IND#,'N'),NVL(#CHRG_AMT#,0),(SELECT CODE FROM CUST_COMPANY WHERE CODE_DESC = #CUST_NAME#) , #CUST_NAME# , #ITM_CODE#, 
		#ITM_CODE_SFX#, #ITM_DESC#, #MAX_CHRG_IND#, #MIN_CHRG_IND#, NVL(#CHRG_AMT#,0) ,
		NVL(#QTY#,0), #REV_IND#, #SRF_NO#,  #STD_IND#,  
		NVL(#UNIT_PRICE#,0),#UOM#, #UPD_DESC_IND#, #UPD_RATE_IND#, #WAVR_IND#,NVL(#WAVR_AMT#,0),
		#LM_USER_ID#, #CR_USER_ID#, NVL(#STATUS#,'PENDING') ,#CURR_CODE#, SYSDATE, SYSDATE,NVL(#PAID_AMT_DM#,0),#ULD_KEY#,NVL(#PAID_AMT_CREDIT#,0),
		TO_DATE(#WAVR_DATE#,'DDMONYY HH24:MI:SS'),#WAVR_USER#,#WAVR_FORM_NO#,#WAVR_RMK#,#ULDAWBRMK#
		)
	</insert>
	
	<select id="getMaxCreditCardPayment" parameterClass="java.lang.String" resultClass="java.lang.String" >
			SELECT NVL(CC_AMT,0) FROM BILL_PAYMENT where INV_NO = #invoiceNo()# 
	</select>
	
	<select id="uldAWbConcatValue" parameterClass="java.lang.String" resultClass="java.lang.String" >
		<![CDATA[
			select STRAGG(STRINGDELIM(listAwbNo,',')) from
				(SELECT CONCAT(CONCAT(SUBSTR(d.awb_no,0,3),'-'),SUBSTR(d.awb_no,4)) listAwbNo  
				FROM exp_rtn_hd h
				LEFT JOIN exp_rtn_dtl d
				ON h.rtn_no    = d.rtn_no
				WHERE h.rtn_no = #returnNo# and ROWNUM < 6)
		]]>		
	</select>
	
	<select id="fetchUserCashDtls" parameterClass="cargo.cms.finance.report.bo.FinanceTransReportBO" resultClass="cargo.cms.finance.report.bo.FinanceTransReportBO">
		SELECT dt,transactionDt,invoiceNo,adjNoteNo,cash,cashReceived,cashReturned,eps,cheque,creditCard,ePayment,others,currency,total,totalAmt,loginId,loginName,airlRevenue,cpslRevenue,
		to_char(sysdate,'DDMONYY HH:mm') runDateTime, #userID# runBy, carrierName FROM (
		SELECT HD.INV_DATE dt,TO_CHAR(HD.INV_DATE,'DDMONYY HH24:MI') transactionDt,HD.INV_NO invoiceNo,'' adjNoteNo,SUM(PAY.CASH_AMT-PAY.CHANGE_RETURNED) cash,
		SUM(PAY.CASH_AMT) cashReceived,
    	SUM(PAY.CHANGE_RETURNED) cashReturned,
		SUM(PAY.EPS_AMT) eps,
		SUM(PAY.CHQ1_AMT+PAY.CHQ2_AMT+PAY.CHQ3_AMT) cheque,SUM(PAY.CC_AMT) creditCard,SUM(PAY.OTH_AMT) others,PAY.CURR_CODE currency,
		SUM(PAY.CASH_AMT+PAY.EPS_AMT+PAY.CHQ1_AMT+PAY.CHQ2_AMT+PAY.CHQ3_AMT-PAY.CHANGE_RETURNED+PAY.E_PAYMENT_AMMOUNT) total,
		SUM(PAY.CASH_AMT+PAY.EPS_AMT+PAY.CHQ1_AMT+PAY.CHQ2_AMT+PAY.CHQ3_AMT+PAY.CC_AMT+PAY.OTH_AMT-PAY.CHANGE_RETURNED+PAY.E_PAYMENT_AMMOUNT) totalAmt,
		HD.CR_USER_ID loginId,(SELECT CODE_DESC FROM SEC_USER WHERE CODE=HD.CR_USER_ID) loginName,
		SUM(DTL.AIRLREV) airlRevenue,SUM(DTL.CPSLREV) cpslRevenue, HD.carr_code as carrierName,
		  SUM(PAY.E_PAYMENT_AMMOUNT) ePayment 
		FROM BILL_INV_HD HD 
		JOIN (SELECT INV_NO,SUM(DECODE(REV_IND,'A',round(CHARGE_AMT,1),0)) AIRLREV,SUM(DECODE(REV_IND,'G',round(CHARGE_AMT,1),0)) CPSLREV from  BILL_INV_DTL group by INV_NO) DTL ON HD.INV_NO=DTL.INV_NO 
		JOIN BILL_PAYMENT PAY ON PAY.INV_NO=HD.INV_NO 
		WHERE HD.INV_DATE BETWEEN TO_DATE(#fromDate#||' '||'000000','DDMONYY HH24MISS') AND TO_DATE(#toDate#||' '||'235959','DDMONYY HH24MISS') 
		AND HD.INV_TYPE='CSH' 
		GROUP BY HD.INV_NO,HD.INV_DATE,HD.CUST_NO,PAY.CURR_CODE,HD.CR_USER_ID,HD.carr_code
		UNION
		SELECT HD.ADJ_DATE dt,TO_CHAR(HD.ADJ_DATE,'DDMONYY HH24:MI') transactionDt,HD.INV_NO invoiceNo,HD.ADJ_NO adjNoteNo,SUM(PAY.CASH_AMT-PAY.CHANGE_RETURNED) cash,
		SUM(PAY.CASH_AMT) cashReceived,
    	SUM(PAY.CHANGE_RETURNED) cashReturned,
		SUM(PAY.EPS_AMT) eps,
		SUM(PAY.CHQ1_AMT+PAY.CHQ2_AMT+PAY.CHQ3_AMT) cheque,SUM(PAY.CC_AMT) creditCard,SUM(PAY.OTH_AMT) others,PAY.CURR_CODE currency,
		SUM(PAY.CASH_AMT+PAY.EPS_AMT+PAY.CHQ1_AMT+PAY.CHQ2_AMT+PAY.CHQ3_AMT-PAY.CHANGE_RETURNED+PAY.E_PAYMENT_AMMOUNT) total,
		SUM(PAY.CASH_AMT+PAY.EPS_AMT+PAY.CHQ1_AMT+PAY.CHQ2_AMT+PAY.CHQ3_AMT+PAY.CC_AMT+PAY.OTH_AMT-PAY.CHANGE_RETURNED+PAY.E_PAYMENT_AMMOUNT) totalAmt,
		HD.CR_USER_ID loginId,(SELECT CODE_DESC FROM SEC_USER WHERE CODE=HD.CR_USER_ID) loginName,
		SUM(DTL.AIRLREV) airlRevenue,SUM(DTL.CPSLREV) cpslRevenue, inv.carr_code as carrierName,
	  SUM(PAY.E_PAYMENT_AMMOUNT) ePayment 
		FROM BILL_ADJ_HD HD 
		JOIN (SELECT ADJ_NO,INV_NO,SUM(DECODE(REV_IND,'A',round(ADJ_AMT,1),0)) AIRLREV,SUM(DECODE(REV_IND,'G',round(ADJ_AMT,1),0)) CPSLREV from  BILL_ADJ_DTL group by ADJ_NO,INV_NO) DTL ON HD.ADJ_NO=DTL.ADJ_NO 
		JOIN BILL_PAYMENT PAY ON PAY.ADJ_NO=HD.ADJ_NO
		JOIN BILL_INV_HD inv ON inv.INV_NO=HD.INV_NO 
		WHERE HD.ADJ_DATE BETWEEN TO_DATE(#fromDate#||' '||'000000','DDMONYY HH24MISS') AND TO_DATE(#toDate#||' '||'235959','DDMONYY HH24MISS') 
		AND HD.ADJ_TYPE='CSH'
		GROUP BY HD.ADJ_NO,HD.ADJ_DATE,HD.CUST_NO,PAY.CURR_CODE,HD.CR_USER_ID,HD.INV_NO,inv.carr_code)
		where 1=1
		<isNotEmpty property="carrCode">
			 and	carrierName = #carrCode#
		</isNotEmpty>
		<isEmpty property="carrCode">
			<isNotEmpty property="loginCarrier">
			 and ( carrierName = #loginCarrier#
                       OR  carrierName IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE  = #loginCarrier#))             
        	</isNotEmpty>
        </isEmpty> 
        <isNotEmpty property="groupCarrList">
	         AND ( carrierName = #groupCarrList# 
	            	OR carrierName IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE = #groupCarrList#))                                          
	    </isNotEmpty>
		ORDER BY dt ASC
	</select>
	<select id="fetchUserCashCashierSumDtls" parameterClass="cargo.cms.finance.report.bo.FinanceTransReportBO" resultClass="cargo.cms.finance.report.bo.FinanceTransReportBO">
		SELECT min(dt),transactionDt,SUM(cash) cash,SUM(eps) eps,SUM(ePayment) ePayment,SUM(cheque) cheque,SUM(creditCard) creditCard,SUM(others) others,SUM(total) total,SUM(totalAmt) totalAmt,
		loginId,loginName,to_char(sysdate,'DDMONYY HH:mm') runDateTime, #userID# runBy  FROM (
    	SELECT min(HD.INV_DATE) dt,TO_CHAR(HD.INV_DATE,'DDMONYY') transactionDt,SUM(PAY.CASH_AMT-PAY.CHANGE_RETURNED) cash,SUM(PAY.EPS_AMT) eps,
    	SUM(PAY.E_PAYMENT_AMMOUNT) ePayment,
		SUM(PAY.CHQ1_AMT+PAY.CHQ2_AMT+PAY.CHQ3_AMT) cheque,SUM(PAY.CC_AMT) creditCard,SUM(PAY.OTH_AMT) others,
		SUM(PAY.CASH_AMT+PAY.EPS_AMT+PAY.E_PAYMENT_AMMOUNT+PAY.CHQ1_AMT+PAY.CHQ2_AMT+PAY.CHQ3_AMT-PAY.CHANGE_RETURNED) total,
		SUM(PAY.CASH_AMT+PAY.EPS_AMT+PAY.E_PAYMENT_AMMOUNT+PAY.CHQ1_AMT+PAY.CHQ2_AMT+PAY.CHQ3_AMT+PAY.CC_AMT+PAY.OTH_AMT-PAY.CHANGE_RETURNED) totalAmt,
		HD.CR_USER_ID loginId,(SELECT CODE_DESC FROM SEC_USER WHERE CODE=HD.CR_USER_ID) loginName
		FROM BILL_INV_HD HD 
		JOIN BILL_PAYMENT PAY ON PAY.INV_NO=HD.INV_NO 
		WHERE HD.INV_DATE BETWEEN TO_DATE(#fromDate#||' '||'000000','DDMONYY HH24MISS') AND TO_DATE(#toDate#||' '||'235959','DDMONYY HH24MISS')  
		AND HD.INV_TYPE='CSH' 
		GROUP BY TO_CHAR(HD.INV_DATE,'DDMONYY'),HD.CR_USER_ID 
    	UNION
    	SELECT min(HD.ADJ_DATE) dt,TO_CHAR(HD.ADJ_DATE,'DDMONYY') transactionDt,SUM(PAY.CASH_AMT-PAY.CHANGE_RETURNED) cash,SUM(PAY.EPS_AMT) eps,
    	SUM(PAY.E_PAYMENT_AMMOUNT) ePayment,
		SUM(PAY.CHQ1_AMT+PAY.CHQ2_AMT+PAY.CHQ3_AMT) cheque,SUM(PAY.CC_AMT) creditCard,SUM(PAY.OTH_AMT) others,
		SUM(PAY.CASH_AMT+PAY.EPS_AMT+PAY.E_PAYMENT_AMMOUNT+PAY.CHQ1_AMT+PAY.CHQ2_AMT+PAY.CHQ3_AMT-PAY.CHANGE_RETURNED) total,
		SUM(PAY.CASH_AMT+PAY.EPS_AMT+PAY.E_PAYMENT_AMMOUNT+PAY.CHQ1_AMT+PAY.CHQ2_AMT+PAY.CHQ3_AMT+PAY.CC_AMT+PAY.OTH_AMT-PAY.CHANGE_RETURNED) totalAmt,
		HD.CR_USER_ID loginId,(SELECT CODE_DESC FROM SEC_USER WHERE CODE=HD.CR_USER_ID) loginName
		FROM BILL_ADJ_HD HD 
		JOIN BILL_PAYMENT PAY ON PAY.ADJ_NO=HD.ADJ_NO 
		WHERE HD.ADJ_DATE BETWEEN TO_DATE(#fromDate#||' '||'000000','DDMONYY HH24MISS') AND TO_DATE(#toDate#||' '||'235959','DDMONYY HH24MISS')  
		AND HD.ADJ_TYPE='CSH' 
		GROUP BY TO_CHAR(HD.ADJ_DATE,'DDMONYY'),HD.CR_USER_ID ) GROUP BY transactionDt,loginId,loginName 
		ORDER BY 1 ASC
	</select>
	<select id="fetchAgentNameFinCodeForAjax" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	 	select code_desc as agentName,FIN_CODE as finCode from CUST_COMPANY where UPPER(code_desc) like UPPER(#keySearchStr# ||'%') and ROWNUM &lt;= #maxRecFetch# AND ACTIVE = 'Y' AND AGENT_YN = 'Y' AND BLACKLISTED='N' ORDER BY code_desc    
	</select>
	<select id="fetchItemCodeFinCodeForAjax" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	 	select ITM_CODE || DECODE(ITM_CODE_SFX,NULL,'','/'||ITM_CODE_SFX) AS codeId, ITM_DESC  AS codeDesc from BILL_ITM_MASTER where UPPER(ITM_DESC) like UPPER(#keySearchStr# ||'%') and ROWNUM &lt;= #maxRecFetch# ORDER BY ITM_DESC    
	</select>
	<select id="fetchUserRevCollDtls" parameterClass="cargo.cms.finance.report.bo.FinanceTransReportBO" resultClass="cargo.cms.finance.report.bo.FinanceTransReportBO">
		SELECT dt,transactionDt,invoiceNo,adjNoteNo,invType,awbNo,totalAmt,iatacode,casscode,fltCarr,addr1,attn,carrierName FROM (
		SELECT HD.INV_DATE dt,TO_CHAR(HD.INV_DATE,'DDMONYY HH24:MI') transactionDt,HD.INV_NO invoiceNo,''  adjNoteNo,HD.INV_TYPE invType,   
		BDTL.AWB_NO awbNo,BDTL.CHRG_AMT totalAmt,CUST.CO_IATA_CODE iatacode,CUST.CASS_AGT_CODE casscode,AWB.CARR_CODE fltCarr,
    	(SELECT (NVL(ADD1,'')||NVL(ADD2,'')||NVL(ADD3,'')||NVL(ADD4,'')) FROM CUST_COMPANY WHERE CARR_CODE=AWB.CARR_CODE AND ROWNUM=1) addr1,
    	(SELECT NVL(BILL_ATTN,'') FROM CUST_COMPANY WHERE CARR_CODE=AWB.CARR_CODE AND ROWNUM=1) attn,
    	(SELECT CODE_DESC FROM MAST_CARRIER WHERE CODE=AWB.CARR_CODE) carrierName 
		FROM BILL_INV_HD HD 
		JOIN (SELECT DTL.INV_NO INV_NO,SUM(round(DTL.CHARGE_AMT,1)) CHRG_AMT,CDTL.AWB_NO AWB_NO,CDTL.AWB_DATE AWB_DATE,CDTL.CUST_NO CUST_NO,CDTL.CUST_NAME CUST_NAME FROM BILL_INV_DTL DTL
		JOIN BILL_CHARGE_DTL CDTL ON CDTL.TR_NO=DTL.CHRG_TR_NO WHERE DTL.REV_IND='A'  
		<isNotEmpty property="itemDesc">
			AND DTL.ITM_CODE IN (SELECT ITM_CODE FROM BILL_ITM_MASTER WHERE ITM_DESC=#itemDesc#) 
		</isNotEmpty>
		GROUP BY DTL.INV_NO,CDTL.AWB_NO,CDTL.CUST_NO,CDTL.CUST_NAME,CDTL.AWB_DATE) BDTL ON HD.INV_NO=BDTL.INV_NO 
		LEFT JOIN AWB AWB on AWB.AWB_NO=BDTL.AWB_NO  AND AWB.AWB_DATE = BDTL.AWB_DATE 
    	LEFT JOIN CUST_COMPANY CUST ON ((CUST.CODE_DESC=NVL(BDTL.CUST_NAME,AWB.AGENT_NAME) AND BDTL.CUST_NO IS NULL)  OR CUST.CODE = BDTL.CUST_NO)      
		WHERE HD.INV_DATE BETWEEN TO_DATE(#fromDate#||' '||'000000','DDMONYY HH24MISS') AND TO_DATE(#toDate#||' '||'235959','DDMONYY HH24MISS') 
	    <isNotEmpty property="invoiceNo">
			AND HD.INV_NO = #invoiceNo#
		</isNotEmpty>
	    <isNotEmpty property="awbNo">
			AND BDTL.AWB_NO = #awbNo#
		</isNotEmpty>
	    <isNotEmpty property="carrCode">
			AND AWB.CARR_CODE = #carrCode#
		</isNotEmpty>
		<isEmpty property="carrCode">
				<isNotEmpty property="loginCarrier">
				   AND ( AWB.CARR_CODE = #loginCarrier#
                        OR  AWB.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP 
                        WHERE GRP_CARR_CODE  = #loginCarrier#))             
            	</isNotEmpty>
            </isEmpty>	
	    <isNotEmpty property="agentName">
			AND AWB.AGENT_NAME = #agentName#
		</isNotEmpty>
	    <isNotEmpty property="finCode">
			AND CUST.FIN_CODE = #finCode#
		</isNotEmpty>
    	GROUP BY AWB.CARR_CODE,HD.INV_NO,HD.INV_DATE,HD.INV_TYPE,BDTL.AWB_NO,BDTL.CHRG_AMT,CUST.CO_IATA_CODE,CUST.CASS_AGT_CODE 
    	UNION
        SELECT HD.ADJ_DATE,TO_CHAR(HD.ADJ_DATE,'DDMONYY HH24:MI') transactionDt,HD.INV_NO invoiceNo,HD.ADJ_NO adjNoteNo,HD.ADJ_TYPE invType,   
		BDTL.AWB_NO awbNo,BDTL.CHRG_AMT totalAmt,CUST.CO_IATA_CODE iatacode,CUST.CASS_AGT_CODE casscode,AWB.CARR_CODE fltCarr,
    	(SELECT (NVL(ADD1,'')||NVL(ADD2,'')||NVL(ADD3,'')||NVL(ADD4,'')) FROM CUST_COMPANY WHERE CARR_CODE=AWB.CARR_CODE AND ROWNUM=1) addr1,
    	(SELECT NVL(BILL_ATTN,'') FROM CUST_COMPANY WHERE CARR_CODE=AWB.CARR_CODE AND ROWNUM=1) attn,
    	(SELECT CODE_DESC FROM MAST_CARRIER WHERE CODE=AWB.CARR_CODE) carrierName 
		FROM BILL_ADJ_HD HD JOIN BILL_ADJ_DTL DTL ON HD.ADJ_NO = DTL.ADJ_NO AND DTL.REV_IND='A' 
	  	JOIN (SELECT ADJDTL.ADJ_NO,DTL.INV_NO INV_NO,SUM(round(ADJDTL.ADJ_AMT,1)) CHRG_AMT,CDTL.AWB_NO AWB_NO,CDTL.AWB_DATE AWB_DATE,CDTL.CUST_NO CUST_NO,CDTL.CUST_NAME CUST_NAME FROM BILL_INV_DTL DTL 
        JOIN BILL_ADJ_DTL ADJDTL ON ADJDTL.INV_NO=DTL.INV_NO AND ADJDTL.IDOC_LINE_NO=DTL.DOC_LINE_NO 
	  	JOIN BILL_CHARGE_DTL CDTL ON CDTL.TR_NO=DTL.CHRG_TR_NO WHERE DTL.REV_IND='A' GROUP BY DTL.INV_NO,CDTL.CUST_NO,CDTL.CUST_NAME,CDTL.AWB_NO,CDTL.AWB_DATE,ADJDTL.ADJ_NO) BDTL ON HD.ADJ_NO=BDTL.ADJ_NO 
		LEFT JOIN AWB AWB on AWB.AWB_NO=BDTL.AWB_NO  AND AWB.AWB_DATE = BDTL.AWB_DATE 
    	LEFT JOIN CUST_COMPANY CUST ON ((CUST.CODE_DESC=NVL(BDTL.CUST_NAME,AWB.AGENT_NAME) AND BDTL.CUST_NO IS NULL)  OR CUST.CODE = BDTL.CUST_NO)  
		WHERE HD.ADJ_DATE BETWEEN TO_DATE(#fromDate#||' '||'000000','DDMONYY HH24MISS') AND TO_DATE(#toDate#||' '||'235959','DDMONYY HH24MISS') 
		<isNotEmpty property="invoiceNo">
			AND HD.INV_NO = #invoiceNo#
		</isNotEmpty>
	    <isNotEmpty property="awbNo">
			AND BDTL.AWB_NO = #awbNo#
		</isNotEmpty>
	    <isNotEmpty property="carrCode">
			AND AWB.CARR_CODE = #carrCode#
		</isNotEmpty>
		<isEmpty property="carrCode">
				<isNotEmpty property="loginCarrier">
				   AND ( AWB.CARR_CODE = #loginCarrier#
                        OR  AWB.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP 
                        WHERE GRP_CARR_CODE  = #loginCarrier#))             
            	</isNotEmpty>
            </isEmpty>	
	    <isNotEmpty property="agentName">
			AND AWB.AGENT_NAME = #agentName#
		</isNotEmpty>
	    <isNotEmpty property="finCode">
			AND CUST.FIN_CODE = #finCode#
		</isNotEmpty>
    	GROUP BY AWB.CARR_CODE,HD.ADJ_NO,HD.ADJ_DATE,HD.ADJ_TYPE,BDTL.AWB_NO,CUST.CO_IATA_CODE,CUST.CASS_AGT_CODE,HD.INV_NO,BDTL.CHRG_AMT)
    	ORDER BY fltCarr ASC,dt ASC
	</select>
	<!-- Updated for fix PR100892. Sanket 04FEB15 -->
	<!-- Updated for fix PR100840. Sanket 06JAN15 -->
	<!-- Updated for fix PR100670. Sanket 08OCT14 -->

<select id="fetchUserFinReptDtls" parameterClass="cargo.cms.finance.report.bo.FinanceTransReportBO" resultClass="cargo.cms.finance.report.bo.FinanceTransReportBO">
		SELECT HD.INV_DATE,
			   TO_CHAR(HD.INV_DATE,'DDMONYY HH24:MI') transactionDt,
			   HD.INV_NO invoiceNo,
			   HD.BUNDLE_REF_NO bundleRefNo,
			    BBPH.STATUS bundleRefStatus,
			   HD.INV_TYPE invType,
			   ' ' adjNoteNo,   
		       BDTL.AWB_NO awbNo,
		       BDTL.HAWB_DTL hawbNo,
		       CUST.CO_IATA_CODE iatacode,
		       CUST.CASS_AGT_CODE casscode,
		        (SELECT CARR_CODE CARR_CODE FROM (SELECT OPR.CARR_CODE CARR_CODE,CARSHP.AWB_NO AWB_NO,CARSHP.AWB_DATE AWB_DATE ,
             CARSHP.FLT_KEY,CARSHP.FLT_DATE,
             dense_rank() over (partition BY CARSHP.awb_no, CARSHP.awb_date order by NVL(ACT_DATE,SCH_DATE), NVL(ACT_TIME,SCH_TIME),CARSHP.FLT_KEY,CARSHP.FLT_DATE) rank
             FROM IMP_CAR_SHP CARSHP
             join flt_opr opr on CARSHP.FLT_KEY = opr.FLT_KEY AND CARSHP.FLT_DATE = OPR.SCH_DATE  AND OPR.FLT_TYPE='A'		     		         
		         where (manifest_pcs > 0 or recd_pcs > 0) ) where awb_no=AWB.AWB_NO AND AWB_DATE=AWB.AWB_DATE AND  rank=1  
	                   UNION
             SELECT CARR_CODE CARR_CODE FROM (SELECT OPR.CARR_CODE CARR_CODE,EXP_PMAN.AWB_NO,EXP_PMAN.AWB_DATE,
             EXP_PMAN.FLT_KEY,EXP_PMAN.FLT_DATE,
             dense_rank() over (partition BY EXP_PMAN.awb_no, EXP_PMAN.awb_date order by NVL(ACT_DATE,SCH_DATE), NVL(ACT_TIME,SCH_TIME),EXP_PMAN.FLT_KEY,EXP_PMAN.FLT_DATE) rank
             FROM EXP_PMANIFEST_ULD_AWB EXP_PMAN JOIN FLT_OPR OPR on EXP_PMAN.FLT_KEY = opr.FLT_KEY AND EXP_PMAN.FLT_DATE = OPR.SCH_DATE  AND OPR.FLT_TYPE='D'
              ) where awb_no=AWB.AWB_NO AND AWB_DATE=AWB.AWB_DATE  AND AWB.AWB_TYPE='E' AND  rank=1  )carrCode,
		       AWB.ORIG origin,
		       AWB.DEST dest,
               NVL(NVL(nvl(cust.code_desc,HD.CUST_NAME),BDTL.CUST_NAME),AWB.AGENT_NAME) agentName,
		       CUST.FIN_CODE finCode,
		       CUST.CODE agentCode,
		       AWB.CATALOG catalog,
		       DECODE(CUST.CASS_AGT_CODE,NULL,'N','Y') cassInd,
		       (CASE WHEN (SELECT COUNT(1) FROM CUST_AGENT_AIRL_CREDIT WHERE nvl(upper(Status),'**') &lt;&gt; 'VOID' and  CR_AMT>0 AND HD.INV_DATE BETWEEN CR_EFF_DATE_FROM AND CR_EFF_DATE_TO AND CUST_NO=CUST.CODE AND ITM.REV_IND='A')>0 THEN 'Y'  
     				 WHEN (SELECT COUNT(1) FROM CUST_AGENT_CREDIT WHERE nvl(upper(Status),'**') &lt;&gt; 'VOID' and CR_AMT>0 AND HD.INV_DATE BETWEEN CR_EFF_DATE_FROM AND CR_EFF_DATE_TO AND CUST_NO=CUST.CODE AND ITM.REV_IND='G')>0 THEN 'Y' ELSE 'N' END)  crAllowInd, 
		       BDTL.ITM_CODE itemCode,
		       ITM.ITM_DESC itemDesc,
		       BDTL.REV_IND revInd,
		       ITM.STD_IND stdChargeInd,
		       GLACC.GL_AC_NO glCode,
			   NVL(BPM.E_PAYMENT_AMMOUNT,0) ePayment,
		       DECODE(GLACC.DSTBN_PER,NULL,BDTL.CHRG_AMT,((GLACC.DSTBN_PER*BDTL.CHRG_AMT)/100)) totalAmt,
		       BDTL.QTY chargeQty, 
		       AWB.WT awbWeight, 
		       BDTL.SRF_NO srfNo, (
		       	SELECT MAX(SHCS) FROM IMP_SRF SRF WHERE SRF.SRF_NO = BDTL.SRF_NO
		       ) shcs, 
		       BDTL.CNSLDT_INV_NO cnslInvNo ,
		       HD.RMK remark,
		       BDTL.REMARKS chrgRemarks,
		        (SELECT FLT_KEY FLT_KEY FROM (SELECT CARSHP.FLT_KEY FLT_KEY,CARSHP.AWB_NO AWB_NO,CARSHP.AWB_DATE AWB_DATE,
             dense_rank() over (partition BY CARSHP.awb_no, CARSHP.awb_date order by NVL(ACT_DATE,SCH_DATE), NVL(ACT_TIME,SCH_TIME),CARSHP.FLT_KEY,CARSHP.FLT_DATE) rank
             FROM IMP_CAR_SHP CARSHP
             join flt_opr opr on CARSHP.FLT_KEY = opr.FLT_KEY AND CARSHP.FLT_DATE = OPR.SCH_DATE AND OPR.FLT_TYPE='A'	 		         
		         where (manifest_pcs > 0 or recd_pcs > 0)) where awb_no=AWB.AWB_NO AND AWB_DATE=AWB.AWB_DATE and rank=1  
	                   UNION
             SELECT FLT_KEY FLT_KEY FROM (SELECT EXP_PMAN.FLT_KEY,EXP_PMAN.AWB_NO,EXP_PMAN.AWB_DATE,
             dense_rank() over (partition BY EXP_PMAN.awb_no, EXP_PMAN.awb_date order by NVL(ACT_DATE,SCH_DATE), NVL(ACT_TIME,SCH_TIME),EXP_PMAN.FLT_KEY,EXP_PMAN.FLT_DATE) rank
             FROM EXP_PMANIFEST_ULD_AWB EXP_PMAN 
             JOIN FLT_OPR OPR on EXP_PMAN.FLT_KEY = opr.FLT_KEY AND EXP_PMAN.FLT_DATE = OPR.SCH_DATE AND OPR.FLT_TYPE='D'
             ) where awb_no=AWB.AWB_NO AND AWB_DATE=AWB.AWB_DATE  AND AWB.AWB_TYPE='E' and rank=1 ) fltKey,
            (SELECT TO_CHAR(FLT_DATE,'DDMONYY HH24:MI')  FLT_DATE FROM (SELECT CARSHP.FLT_DATE FLT_DATE,CARSHP.AWB_NO AWB_NO,CARSHP.AWB_DATE AWB_DATE,
            dense_rank() over (partition BY CARSHP.awb_no, CARSHP.awb_date order by NVL(ACT_DATE,SCH_DATE), NVL(ACT_TIME,SCH_TIME),CARSHP.FLT_KEY,CARSHP.FLT_DATE) rank
            FROM IMP_CAR_SHP CARSHP
            join flt_opr opr on CARSHP.FLT_KEY = opr.FLT_KEY AND CARSHP.FLT_DATE = OPR.SCH_DATE AND OPR.FLT_TYPE='A'		         
            where (manifest_pcs > 0 or recd_pcs > 0)) where awb_no=AWB.AWB_NO AND AWB_DATE=AWB.AWB_DATE and rank=1
	                   UNION
            SELECT TO_CHAR(FLT_DATE,'DDMONYY HH24:MI')  FLT_DATE FROM (SELECT EXP_PMAN.FLT_DATE FLT_DATE,EXP_PMAN.AWB_NO AWB_NO,EXP_PMAN.AWB_DATE  AWB_DATE,
            dense_rank() over (partition BY EXP_PMAN.awb_no, EXP_PMAN.awb_date order by NVL(ACT_DATE,SCH_DATE), NVL(ACT_TIME,SCH_TIME),EXP_PMAN.FLT_KEY,EXP_PMAN.FLT_DATE) rank    			
            FROM EXP_PMANIFEST_ULD_AWB EXP_PMAN 
            JOIN FLT_OPR OPR on EXP_PMAN.FLT_KEY = opr.FLT_KEY AND EXP_PMAN.FLT_DATE = OPR.SCH_DATE AND OPR.FLT_TYPE='D'
            ) where awb_no=AWB.AWB_NO AND AWB_DATE=AWB.AWB_DATE  AND AWB.AWB_TYPE='E' and rank=1  ) fltDate   
		from BILL_INV_HD HD 
		 join (select DTL.CNSLDT_INV_NO CNSLDT_INV_NO,DTL.INV_NO INV_NO,SUM(DTL.CHARGE_AMT) CHRG_AMT,
		 				CDTL.AWB_NO AWB_NO,CDTL.AWB_DATE AWB_DATE,DTL.ITM_CODE,DTL.ITM_CODE_SFX ITM_CODE_SFX,DTL.REV_IND,CDTL.CUST_NO CUST_NO , CDTL.CUST_NAME  CUST_NAME,CDTL.QTY QTY,CDTL.REMARKS REMARKS,CDTL.ECT_HANDLER ECT_HANDLER,CDTL.SRF_NO SRF_NO,CDTL.HAWB_DTL
		 				from BILL_INV_DTL DTL
		              JOIN BILL_CHARGE_DTL CDTL ON CDTL.TR_NO=DTL.CHRG_TR_NO GROUP BY DTL.INV_NO,CDTL.AWB_NO,DTL.ITM_CODE,DTL.CNSLDT_INV_NO,DTL.REV_IND,CDTL.CUST_NO,DTL.ITM_CODE_SFX,CDTL.CUST_NAME,CDTL.QTY,CDTL.AWB_DATE,CDTL.REMARKS,CDTL.ECT_HANDLER,CDTL.SRF_NO,CDTL.HAWB_DTL ) BDTL 
		              ON HD.INV_NO=BDTL.INV_NO 
		LEFT JOIN BILL_PAYMENT BPM ON BPM.INV_NO=HD.INV_NO
		LEFT JOIN AWB AWB on AWB.AWB_NO=BDTL.AWB_NO AND AWB.AWB_DATE = BDTL.AWB_DATE 
		              
	    join BILL_ITM_MASTER ITM on ITM.ITM_CODE=BDTL.ITM_CODE and	NVL(ITM.ITM_CODE_SFX,'*') = NVL(BDTL.ITM_CODE_SFX,'*') and NVL(ITM.ECT_HANDLER, NVL(BDTL.ECT_HANDLER, 'CPCT')) =  NVL(BDTL.ECT_HANDLER, 'CPCT')
		JOIN BILL_ITM_GL_ACC GLACC ON GLACC.ITM_CODE=ITM.ITM_CODE AND	NVL(ITM.ITM_CODE_SFX,'*') = NVL(GLACC.ITM_CODE_SFX,'*') AND nvl(ITM.ECT_HANDLER, '*') =  NVL(GLACC.ECT_HANDLER, '*')
		left join CUST_COMPANY CUST ON (((CUST.CODE_DESC = BDTL.CUST_NAME AND BDTL.CUST_NAME IS NOT NULL) OR (CUST.CODE = BDTL.CUST_NO AND BDTL.CUST_NO IS NOT NULL) OR ((CUST.CODE_DESC = AWB.AGENT_NAME AND AWB.AGENT_NAME IS NOT NULL AND BDTL.CUST_NAME IS NULL AND BDTL.CUST_NO IS NULL) OR (CUST.CODE = AWB.AGENT_CODE AND AWB.AGENT_CODE IS NOT NULL AND BDTL.CUST_NAME IS NULL AND BDTL.CUST_NO IS NULL))))   
		LEFT JOIN BILL_BUNDLE_PAYMENT_HD BBPH ON  BBPH.BUNDLE_REF_NO=HD.BUNDLE_REF_NO
		where HD.INV_DATE between TO_DATE(#fromDate#||' '||'000000','DDMONYY HH24MISS') AND TO_DATE(#toDate#||' '||'235959','DDMONYY HH24MISS') 
		<isNotEmpty property="invoiceNo">
			AND HD.INV_NO = #invoiceNo#
		</isNotEmpty>
	    <isNotEmpty property="awbNo">
			AND BDTL.AWB_NO = #awbNo#
		</isNotEmpty>
	    <isNotEmpty property="carrCode">
			 AND (SELECT CARR_CODE CARR_CODE FROM (SELECT OPR.CARR_CODE CARR_CODE,CARSHP.AWB_NO AWB_NO,CARSHP.AWB_DATE AWB_DATE ,
             CARSHP.FLT_KEY,CARSHP.FLT_DATE,
             dense_rank() over (partition BY CARSHP.awb_no, CARSHP.awb_date order by NVL(ACT_DATE,SCH_DATE), NVL(ACT_TIME,SCH_TIME),CARSHP.FLT_KEY,CARSHP.FLT_DATE) rank
             FROM IMP_CAR_SHP CARSHP
             join flt_opr opr on CARSHP.FLT_KEY = opr.FLT_KEY AND CARSHP.FLT_DATE = OPR.SCH_DATE  AND OPR.FLT_TYPE='A'		     		         
		         where (manifest_pcs > 0 or recd_pcs > 0) ) where awb_no=AWB.AWB_NO AND AWB_DATE=AWB.AWB_DATE AND  rank=1  
	                   UNION
             SELECT CARR_CODE CARR_CODE FROM (SELECT OPR.CARR_CODE CARR_CODE,EXP_PMAN.AWB_NO,EXP_PMAN.AWB_DATE,
             EXP_PMAN.FLT_KEY,EXP_PMAN.FLT_DATE,
             dense_rank() over (partition BY EXP_PMAN.awb_no, EXP_PMAN.awb_date order by NVL(ACT_DATE,SCH_DATE), NVL(ACT_TIME,SCH_TIME),EXP_PMAN.FLT_KEY,EXP_PMAN.FLT_DATE) rank
             FROM EXP_PMANIFEST_ULD_AWB EXP_PMAN JOIN FLT_OPR OPR on EXP_PMAN.FLT_KEY = opr.FLT_KEY AND EXP_PMAN.FLT_DATE = OPR.SCH_DATE  AND OPR.FLT_TYPE='D'
              ) where awb_no=AWB.AWB_NO AND AWB_DATE=AWB.AWB_DATE  AND AWB.AWB_TYPE='E' AND  rank=1  )  = #carrCode#
		</isNotEmpty>
		<isEmpty property="carrCode">
				<isNotEmpty property="loginCarrier">
				   AND ( AWB.CARR_CODE = #loginCarrier#
                        OR  AWB.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP 
                        WHERE GRP_CARR_CODE  = #loginCarrier#))             
            	</isNotEmpty>
            </isEmpty>	
	    <isNotEmpty property="agentName">
			AND NVL(BDTL.CUST_NAME,AWB.AGENT_NAME) = #agentName#
		</isNotEmpty>
	    <isNotEmpty property="finCode">
			AND CUST.FIN_CODE = #finCode#
		</isNotEmpty>
		 <isNotEmpty property="origin">
			AND AWB.ORIG = #origin#
		</isNotEmpty>
		 <isNotEmpty property="dest">
			AND AWB.DEST = #dest#
		</isNotEmpty>
		<isEqual property="cassInd" compareValue="Y">
			AND CUST.CASS_AGT_CODE IS NOT NULL
		</isEqual>
		<isNotEmpty property="cassCode">
			AND CUST.CASS_AGT_CODE = #cassCode#
		</isNotEmpty>
		<isNotEmpty property="awbNo">
			AND BDTL.AWB_NO = #awbNo#
		</isNotEmpty>
		<isNotEmpty property="revInd">
			AND BDTL.REV_IND = #revInd#
		</isNotEmpty> 
		UNION ALL 
		SELECT HD.ADJ_DATE,
                TO_CHAR(HD.ADJ_DATE,'DDMONYY HH24:MI') transactionDt,
                DTL.INV_NO invoiceNo,
                null bundleRefNo,
                null bundleRefStatus,
                HD.ADJ_TYPE invType,
                 HD.ADJ_NO adjNoteNo,   
               BDTL.AWB_NO awbNo,
               BDTL.HAWB_DTL hawbNo,
               CUST.CO_IATA_CODE iatacode,
               CUST.CASS_AGT_CODE casscode,
               (SELECT CARR_CODE CARR_CODE FROM (SELECT OPR.CARR_CODE CARR_CODE,CARSHP.AWB_NO AWB_NO,CARSHP.AWB_DATE AWB_DATE, 
            dense_rank() over (partition BY CARSHP.awb_no, CARSHP.awb_date order by NVL(ACT_DATE,SCH_DATE), NVL(ACT_TIME,SCH_TIME),CARSHP.FLT_KEY,CARSHP.FLT_DATE) rank
            FROM IMP_CAR_SHP CARSHP
            join flt_opr opr on CARSHP.FLT_KEY = opr.FLT_KEY AND CARSHP.FLT_DATE = OPR.SCH_DATE AND OPR.FLT_TYPE='A'		         
            where (manifest_pcs > 0 or recd_pcs > 0)) where awb_no=AWB.AWB_NO AND AWB_DATE=AWB.AWB_DATE and rank=1
	                   UNION
            SELECT CARR_CODE CARR_CODE FROM (SELECT OPR.CARR_CODE CARR_CODE,EXP_PMAN.AWB_NO,EXP_PMAN.AWB_DATE,
            dense_rank() over (partition BY EXP_PMAN.awb_no, EXP_PMAN.awb_date order by NVL(ACT_DATE,SCH_DATE), NVL(ACT_TIME,SCH_TIME),EXP_PMAN.FLT_KEY,EXP_PMAN.FLT_DATE) rank
            FROM EXP_PMANIFEST_ULD_AWB EXP_PMAN 
            JOIN FLT_OPR OPR on EXP_PMAN.FLT_KEY = opr.FLT_KEY AND EXP_PMAN.FLT_DATE = OPR.SCH_DATE AND OPR.FLT_TYPE='D'
            ) where awb_no=AWB.AWB_NO AND AWB_DATE=AWB.AWB_DATE  AND AWB.AWB_TYPE='E' and rank=1 )carrCode,
               AWB.ORIG origin,
               AWB.DEST dest,
               NVL(NVL(nvl(cust.code_desc,HD.CUST_NAME),BDTL.CUST_NAME),AWB.AGENT_NAME) agentName,
               CUST.FIN_CODE finCode,
               CUST.CODE agentCode,
               AWB.CATALOG catalog,
               DECODE(CUST.CASS_AGT_CODE,NULL,'N','Y') cassInd,
               (CASE WHEN (SELECT COUNT(1) FROM CUST_AGENT_AIRL_CREDIT WHERE nvl(upper(Status),'**') &lt;&gt; 'VOID' AND CR_AMT>0 AND HD.ADJ_DATE BETWEEN CR_EFF_DATE_FROM AND CR_EFF_DATE_TO AND CUST_NO=CUST.CODE AND ITM.REV_IND='A')>0 THEN 'Y'  
     	            WHEN (SELECT COUNT(1) FROM CUST_AGENT_CREDIT WHERE nvl(upper(Status),'**') &lt;&gt; 'VOID' AND CR_AMT>0 AND HD.ADJ_DATE BETWEEN CR_EFF_DATE_FROM AND CR_EFF_DATE_TO AND CUST_NO=CUST.CODE AND ITM.REV_IND='G')>0 THEN 'Y' ELSE 'N' END)  crAllowInd, 
               DTL.ITM_CODE itemCode,
               ITM.ITM_DESC itemDesc,
               DTL.REV_IND revInd,
               ITM.STD_IND stdChargeInd,
               GLACC.GL_AC_NO glCode,
			   NVL(BPM.E_PAYMENT_AMMOUNT,0) ePayment,
               DECODE(GLACC.DSTBN_PER,NULL,DTL.ADJ_AMT,((GLACC.DSTBN_PER*(DTL.ADJ_AMT))/100)) totalAmt,
               BDTL.QTY chargeQty, 
               AWB.WT awbWeight, 
               BDTL.SRF_NO srfNo, (
		       	SELECT MAX(SHCS) FROM IMP_SRF SRF WHERE SRF.SRF_NO = BDTL.SRF_NO
		       ) shcs,
		       DTL.CNSLDT_INV_NO cnslInvNo,
		       HD.RMK remark,
		       '' chrgRemarks,
               (SELECT FLT_KEY FLT_KEY FROM (SELECT CARSHP.FLT_KEY FLT_KEY,CARSHP.AWB_NO AWB_NO,CARSHP.AWB_DATE AWB_DATE,
            dense_rank() over (partition BY CARSHP.awb_no, CARSHP.awb_date order by NVL(ACT_DATE,SCH_DATE), NVL(ACT_TIME,SCH_TIME),CARSHP.FLT_KEY,CARSHP.FLT_DATE) rank
            FROM IMP_CAR_SHP CARSHP
            join flt_opr opr on CARSHP.FLT_KEY = opr.FLT_KEY AND CARSHP.FLT_DATE = OPR.SCH_DATE AND OPR.FLT_TYPE='A'		         
            where (manifest_pcs > 0 or recd_pcs > 0)) where awb_no=AWB.AWB_NO AND AWB_DATE=AWB.AWB_DATE and rank=1
	                   UNION
            SELECT FLT_KEY FLT_KEY FROM (SELECT EXP_PMAN.FLT_KEY FLT_KEY,EXP_PMAN.AWB_NO AWB_NO,EXP_PMAN.AWB_DATE  AWB_DATE,
            dense_rank() over (partition BY EXP_PMAN.awb_no, EXP_PMAN.awb_date order by NVL(ACT_DATE,SCH_DATE), NVL(ACT_TIME,SCH_TIME),EXP_PMAN.FLT_KEY,EXP_PMAN.FLT_DATE) rank
            FROM EXP_PMANIFEST_ULD_AWB EXP_PMAN 
            JOIN FLT_OPR OPR on EXP_PMAN.FLT_KEY = opr.FLT_KEY AND EXP_PMAN.FLT_DATE = OPR.SCH_DATE AND OPR.FLT_TYPE='D'
            ) where awb_no=AWB.AWB_NO AND AWB_DATE=AWB.AWB_DATE  AND AWB.AWB_TYPE='E' and rank=1 ) fltKey,
            (SELECT TO_CHAR(FLT_DATE,'DDMONYY HH24:MI')  FLT_DATE FROM (SELECT CARSHP.FLT_DATE FLT_DATE,CARSHP.AWB_NO AWB_NO,CARSHP.AWB_DATE AWB_DATE,
            dense_rank() over (partition BY CARSHP.awb_no, CARSHP.awb_date order by NVL(ACT_DATE,SCH_DATE), NVL(ACT_TIME,SCH_TIME),CARSHP.FLT_KEY,CARSHP.FLT_DATE) rank
            FROM IMP_CAR_SHP CARSHP
            join flt_opr opr on CARSHP.FLT_KEY = opr.FLT_KEY AND CARSHP.FLT_DATE = OPR.SCH_DATE AND OPR.FLT_TYPE='A'		         
            where (manifest_pcs > 0 or recd_pcs > 0))  where awb_no=AWB.AWB_NO AND AWB_DATE=AWB.AWB_DATE and rank=1
	                   UNION
            SELECT TO_CHAR(FLT_DATE,'DDMONYY HH24:MI')  FLT_DATE FROM (SELECT EXP_PMAN.FLT_DATE FLT_DATE,EXP_PMAN.AWB_NO AWB_NO,EXP_PMAN.AWB_DATE  AWB_DATE,
            dense_rank() over (partition BY EXP_PMAN.awb_no, EXP_PMAN.awb_date order by NVL(ACT_DATE,SCH_DATE), NVL(ACT_TIME,SCH_TIME),EXP_PMAN.FLT_KEY,EXP_PMAN.FLT_DATE) rank
            FROM EXP_PMANIFEST_ULD_AWB EXP_PMAN 
            JOIN FLT_OPR OPR on EXP_PMAN.FLT_KEY = opr.FLT_KEY AND EXP_PMAN.FLT_DATE = OPR.SCH_DATE AND OPR.FLT_TYPE='D'
            ) where awb_no=AWB.AWB_NO AND AWB_DATE=AWB.AWB_DATE  AND AWB.AWB_TYPE='E' and rank=1 ) fltDate  
	   	FROM BILL_ADJ_HD HD JOIN BILL_ADJ_DTL DTL ON HD.ADJ_NO = DTL.ADJ_NO 
	    JOIN (SELECT ADTL.ADJ_NO ADJ_NO,DTL.INV_NO INV_NO,ADTL.IDOC_LINE_NO,MIN(CDTL.AWB_NO) AWB_NO,CDTL.AWB_DATE AWB_DATE,CDTL.CUST_NO CUST_NO,CDTL.CUST_NAME,CDTL.QTY QTY,CDTL.ECT_HANDLER ECT_HANDLER,CDTL.SRF_NO SRF_NO,CDTL.HAWB_DTL
	    		from BILL_ADJ_DTL ADTL join BILL_INV_DTL DTL on ADTL.INV_NO = DTL.INV_NO and ADTL.IDOC_LINE_NO = DTL.DOC_LINE_NO 
	    			 JOIN BILL_CHARGE_DTL CDTL ON CDTL.TR_NO=DTL.CHRG_TR_NO GROUP BY DTL.INV_NO,CDTL.CUST_NO,CDTL.CUST_NAME,CDTL.QTY,ADTL.ADJ_NO,ADTL.IDOC_LINE_NO,CDTL.AWB_DATE,CDTL.ECT_HANDLER,CDTL.SRF_NO,CDTL.HAWB_DTL) BDTL 
	    			 ON DTL.INV_NO=BDTL.INV_NO 
	    			 and DTL.ADJ_NO = BDTL.ADJ_NO
             AND DTL.IDOC_LINE_NO =  BDTL.IDOC_LINE_NO
		LEFT JOIN BILL_PAYMENT BPM ON BPM.INV_NO=HD.INV_NO
	    LEFT JOIN AWB AWB on AWB.AWB_NO=BDTL.AWB_NO  AND AWB.AWB_DATE = BDTL.AWB_DATE 
						
		join BILL_ITM_MASTER ITM on ITM.ITM_CODE=DTL.ITM_CODE and NVL(ITM.ITM_CODE_SFX,'*') = NVL(DTL.ITM_CODE_SFX,'*') and NVL(ITM.ECT_HANDLER, NVL(BDTL.ECT_HANDLER, 'CPCT')) =  NVL(BDTL.ECT_HANDLER, 'CPCT')
   		JOIN BILL_ITM_GL_ACC GLACC ON GLACC.ITM_CODE=ITM.ITM_CODE  AND NVL(ITM.ITM_CODE_SFX,'*') = NVL(GLACC.ITM_CODE_SFX,'*') AND nvl(ITM.ECT_HANDLER, '*') =  NVL(GLACC.ECT_HANDLER, '*')
   		left join CUST_COMPANY CUST ON (((CUST.CODE_DESC = BDTL.CUST_NAME AND BDTL.CUST_NAME IS NOT NULL) OR (CUST.CODE = BDTL.CUST_NO AND BDTL.CUST_NO IS NOT NULL) OR ((CUST.CODE_DESC = AWB.AGENT_NAME AND AWB.AGENT_NAME IS NOT NULL AND BDTL.CUST_NAME IS NULL AND BDTL.CUST_NO IS NULL) OR (CUST.CODE = AWB.AGENT_CODE AND AWB.AGENT_CODE IS NOT NULL AND BDTL.CUST_NAME IS NULL AND BDTL.CUST_NO IS NULL))))
   		WHERE HD.ADJ_DATE BETWEEN TO_DATE(#fromDate#||' '||'000000','DDMONYY HH24MISS') AND TO_DATE(#toDate#||' '||'235959','DDMONYY HH24MISS') 
		<isNotEmpty property="invoiceNo">
			AND DTL.INV_NO = #invoiceNo#
		</isNotEmpty>
		   <isNotEmpty property="awbNo">
			AND BDTL.AWB_NO = #awbNo#
		</isNotEmpty>
		<isNotEmpty property="carrCode">
			AND (SELECT CARR_CODE CARR_CODE FROM (SELECT OPR.CARR_CODE CARR_CODE,CARSHP.AWB_NO AWB_NO,CARSHP.AWB_DATE AWB_DATE, 
            dense_rank() over (partition BY CARSHP.awb_no, CARSHP.awb_date order by NVL(ACT_DATE,SCH_DATE), NVL(ACT_TIME,SCH_TIME),CARSHP.FLT_KEY,CARSHP.FLT_DATE) rank
            FROM IMP_CAR_SHP CARSHP
            join flt_opr opr on CARSHP.FLT_KEY = opr.FLT_KEY AND CARSHP.FLT_DATE = OPR.SCH_DATE AND OPR.FLT_TYPE='A'		         
            where (manifest_pcs > 0 or recd_pcs > 0)) where awb_no=AWB.AWB_NO AND AWB_DATE=AWB.AWB_DATE and rank=1
	                   UNION
            SELECT CARR_CODE CARR_CODE FROM (SELECT OPR.CARR_CODE CARR_CODE,EXP_PMAN.AWB_NO,EXP_PMAN.AWB_DATE,
            dense_rank() over (partition BY EXP_PMAN.awb_no, EXP_PMAN.awb_date order by NVL(ACT_DATE,SCH_DATE), NVL(ACT_TIME,SCH_TIME),EXP_PMAN.FLT_KEY,EXP_PMAN.FLT_DATE) rank
            FROM EXP_PMANIFEST_ULD_AWB EXP_PMAN 
            JOIN FLT_OPR OPR on EXP_PMAN.FLT_KEY = opr.FLT_KEY AND EXP_PMAN.FLT_DATE = OPR.SCH_DATE AND OPR.FLT_TYPE='D'
            ) where awb_no=AWB.AWB_NO AND AWB_DATE=AWB.AWB_DATE  AND AWB.AWB_TYPE='E' and rank=1 ) = #carrCode#
		</isNotEmpty>
		<isEmpty property="carrCode">
				<isNotEmpty property="loginCarrier">
				   AND ( AWB.CARR_CODE = #loginCarrier#
                        OR  AWB.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP 
                        WHERE GRP_CARR_CODE  = #loginCarrier#))             
            	</isNotEmpty>
            </isEmpty>	
		   <isNotEmpty property="agentName">
			AND NVL(BDTL.CUST_NAME,AWB.AGENT_NAME) = #agentName#
		</isNotEmpty>
		   <isNotEmpty property="finCode">
			AND CUST.FIN_CODE = #finCode#
		</isNotEmpty> 
		 <isNotEmpty property="origin">
			AND AWB.ORIG = #origin#
		</isNotEmpty>
		 <isNotEmpty property="dest">
			AND AWB.DEST = #dest#
		</isNotEmpty>
		<isEqual property="cassInd" compareValue="Y">
			AND CUST.CASS_AGT_CODE IS NOT NULL
		</isEqual>
		<isNotEmpty property="cassCode">
			AND CUST.CASS_AGT_CODE = #cassCode#
		</isNotEmpty>
		<isNotEmpty property="awbNo">
			AND BDTL.AWB_NO = #awbNo#
		</isNotEmpty> 
		<isNotEmpty property="revInd">
			AND DTL.REV_IND = #revInd#
		</isNotEmpty> ORDER BY 1,3,18 <!-- order by Transaction Date, Invoice No, Itemcode -->
    </select>
	<select id="fetchUserCassDtlsforIBI" parameterClass="cargo.cms.finance.report.bo.FinanceTransReportBO" resultClass="cargo.cms.finance.report.bo.FinanceTransReportBO">
		SELECT TO_CHAR(MIN(awbWeight),'00000000') awbWeight,awbNo,MIN(iatacode),LPAD(casscode,11,'0') casscode,fltCarr,fltKey,fltDate,TO_CHAR(SUM(frtChrgAmt),'000000000000') frtChrgAmt,
		TO_CHAR(SUM(ccAgtAmt),'000000000000') ccAgtAmt,TO_CHAR(SUM(ccCarrAmt),'000000000000') ccCarrAmt,TO_CHAR(SUM(totalAmt),'000000000000') totalAmt,TO_CHAR(SUM(ttlCCAmt),'000000000000') ttlCCAmt,TO_CHAR(MAX(docChrgAmt),'000000000000') docChrgAmt,
		TO_CHAR(SUM(tmlChrgAmt),'000000000000') tmlChrgAmt,TO_CHAR(SUM(miscChrg),'000000000000') miscChrg,MIN(origin) origin,MIN(dest) dest,delvDate,currency
		FROM 
		(
		SELECT DECODE(AWB.WT,0,(select sum(recd_wt) from imp_car_shp where awb_no=AWB.AWB_NO and awb_date=AWB.AWB_DATE),(NVL((pkg_calculate.GET_NEXT_HALF_ROUND(AWB.WT)*10),0))) awbWeight,
		BDTL.AWB_NO awbNo,CUST.CO_IATA_CODE iatacode,LPAD(NVL(CUST.CASS_AGT_CODE,0),11,'0') casscode,FRSTCARR.CARR_CODE fltCarr,
		FRSTCARR.FLT_KEY fltKey,
		TO_CHAR(FRSTCARR.FLT_DATE,'YYMMDD') fltDate,
		(SELECT CURR_CODE FROM IMP_CAR_AWB where awb_no=AWB.AWB_NO AND AWB_DATE=AWB.AWB_DATE) currency,
		TO_CHAR((NVL(BDTL.FRCHRG*100,0)+NVL(ADJ.FRCHRGADJ*100,0)),'000000000000') frtChrgAmt,
		'000000000000' ccAgtAmt,'000000000000' ccCarrAmt,
		<!-- TO_CHAR((NVL(CHARG.TTLCCAMT*100,0)+NVL((ADJ.FRCHRGADJ/(SELECT NVL(EXCH_RATE,1) FROM IMP_CAR_AWB where awb_no=AWB.AWB_NO AND AWB_DATE=AWB.AWB_DATE))*100,0)),'000000000000') totalAmt, -->
		TO_CHAR((NVL(BDTL.FRCHRG*100,0)+NVL(ADJ.FRCHRGADJ*100,0)+NVL(BDTL.CCCHRG*100,0)+NVL(ADJ.CCCHRGADJ*100,0)),'000000000000') totalAmt,
		<!-- TO_CHAR((NVL(BDTL.CCCHRG*100,0)+NVL(ADJ.CCCHRGADJ*100,0)),'000000000000') ttlCCAmt, -->
		'000000000000' ttlCCAmt,
		TO_CHAR((NVL(BDTL.DC*100,0)+NVL(ADJ.DCADJ*100,0)),'000000000000') docChrgAmt,TO_CHAR((NVL(BDTL.TC*100,0)+NVL(ADJ.TCADJ*100,0)),'000000000000') tmlChrgAmt,TO_CHAR(((NVL(BDTL.MISC*100,0)+NVL(ADJ.MISCADJ*100,0))),'000000000000') miscChrg,
		AWB.ORIG origin,AWB.DEST dest,TO_CHAR(SRF.SRF_DATE,'YYMMDD') delvDate      
		FROM BILL_INV_HD HD 
		JOIN (SELECT DTL.INV_NO,CDTL.CUST_NAME,CDTL.CUST_NO,CDTL.STATUS,DTL.doc_line_no,SUM(CASE WHEN CDTL.ITM_CODE='DCIEDC' THEN CHARGE_AMT ELSE 0 END) AS DC,
		SUM(CASE WHEN (CDTL.ITM_CODE IN ('TCBULK','TCPREP','TCECTC','TCCBVC','MCINBC') OR CDTL.ITM_CODE IN (select ITEM_CODE from MAST_TC_CHARGES_CONFIG where NVL(DEL_YN,'N') = 'N') ) THEN CHARGE_AMT ELSE 0 END) AS TC,
		SUM(CASE WHEN (CDTL.ITM_CODE NOT IN ('TCBULK','TCPREP','TCECTC','TCCBVC','DCIEDC','MCINBC','FCIMFC','SCIMPO','CCIMPO')  AND CDTL.ITM_CODE NOT IN (select ITEM_CODE from MAST_TC_CHARGES_CONFIG where NVL(DEL_YN,'N') = 'N') ) THEN CHARGE_AMT ELSE 0 END) AS MISC,
		SUM(CASE WHEN CDTL.ITM_CODE IN ('FCIMFC')  THEN CHARGE_AMT ELSE 0 END) AS FRCHRG,
		SUM(CASE WHEN CDTL.ITM_CODE IN ('CCIMPO')  THEN CHARGE_AMT ELSE 0 END) AS CCCHRG, CDTL.AWB_NO,CDTL.AWB_DATE from  BILL_INV_DTL DTL
		JOIN BILL_CHARGE_DTL CDTL ON CDTL.TR_NO=DTL.CHRG_TR_NO AND CDTL.REV_IND='A' GROUP BY DTL.INV_NO,CDTL.AWB_NO,CDTL.AWB_DATE,CDTL.CUST_NAME,CDTL.CUST_NO,DTL.doc_line_no,CDTL.STATUS) BDTL ON HD.INV_NO=BDTL.INV_NO 
		JOIN AWB AWB on AWB.AWB_NO=BDTL.AWB_NO AND AWB.AWB_DATE = BDTL.AWB_DATE AND AWB.AWB_TYPE='I'
		JOIN (SELECT OPR.CARR_CODE,CARSHP.AWB_NO,CARSHP.AWB_DATE,CARSHP.FLT_KEY,CARSHP.FLT_DATE,
	    dense_rank() over (partition BY awb_no, awb_date order by NVL(ACT_DATE,SCH_DATE), NVL(ACT_TIME,SCH_TIME),CARSHP.FLT_KEY,CARSHP.FLT_DATE) rank FROM IMP_CAR_SHP CARSHP
	    JOIN FLT_OPR OPR ON CARSHP.FLT_KEY = OPR.FLT_KEY AND CARSHP.FLT_DATE = OPR.SCH_DATE AND OPR.FLT_TYPE='A' 
	    WHERE (CARSHP.MANIFEST_PCS>0 OR CARSHP.RECD_PCS>0) ) FRSTCARR ON FRSTCARR.awb_no=AWB.AWB_NO AND FRSTCARR.AWB_DATE=AWB.AWB_DATE and rank=1  
		LEFT JOIN (SELECT (SUM(NVL(CC_AMT,0))) TTLCCAMT,AWB_NO,AWB_DATE 
		FROM IMP_CAR_CHRG_ITM GROUP BY AWB_NO,AWB_DATE) CHARG ON CHARG.AWB_NO=AWB.AWB_NO AND CHARG.AWB_DATE=AWB.AWB_DATE 
		JOIN CUST_COMPANY CUST ON ((CUST.CODE_DESC=NVL(BDTL.CUST_NAME,AWB.AGENT_NAME) AND NVL(BDTL.CUST_NO,AWB.AGENT_CODE) is null) or CUST.CODE = NVL(BDTL.CUST_NO,AWB.AGENT_CODE) ) 
		LEFT JOIN (SELECT MIN(SRF_DATE) SRF_DATE,AWB_NO,AWB_DATE FROM IMP_SRF GROUP BY AWB_NO,AWB_DATE) SRF ON SRF.AWB_NO=AWB.AWB_NO AND SRF.AWB_DATE=AWB.AWB_DATE
		LEFT JOIN (SELECT ADJHD.INV_NO,ADJDTL.idoc_line_no,SUM(CASE WHEN ADJDTL.ITM_CODE='DCIEDC' THEN ADJDTL.ADJ_AMT ELSE 0 END) AS DCADJ,
      	SUM(CASE WHEN (ADJDTL.ITM_CODE IN ('TCBULK','TCPREP','TCECTC','TCCBVC','MCINBC') OR ADJDTL.ITM_CODE IN (select ITEM_CODE from MAST_TC_CHARGES_CONFIG where NVL(DEL_YN,'N') = 'N')) THEN ADJDTL.ADJ_AMT ELSE 0 END) AS TCADJ,
      	SUM(CASE WHEN (ADJDTL.ITM_CODE NOT IN ('TCBULK','TCPREP','TCECTC','TCCBVC','DCIEDC','MCINBC','FCIMFC','SCIMPO','CCIMPO') AND ADJDTL.ITM_CODE NOT IN (select ITEM_CODE from MAST_TC_CHARGES_CONFIG where NVL(DEL_YN,'N') = 'N')) THEN ADJDTL.ADJ_AMT ELSE 0 END) AS MISCADJ,
      	SUM(CASE WHEN ADJDTL.ITM_CODE IN ('FCIMFC')  THEN ADJDTL.ADJ_AMT ELSE 0 END) AS FRCHRGADJ ,
      	SUM(CASE WHEN ADJDTL.ITM_CODE IN ('CCIMPO')  THEN ADJDTL.ADJ_AMT ELSE 0 END) AS CCCHRGADJ  
      	FROM BILL_ADJ_HD ADJHD,BILL_ADJ_DTL ADJDTL WHERE ADJHD.ADJ_NO=ADJDTL.ADJ_NO and ADJHD.ADJ_DATE BETWEEN TO_DATE(#fromDate#||' '||'000000','DDMONYY HH24MISS') 
      	AND TO_DATE(#toDate#||' '||'235959','DDMONYY HH24MISS') AND ADJDTL.REV_IND='A' AND ADJHD.ADJ_TYPE='CRD' group by ADJHD.INV_NO,ADJDTL.idoc_line_no) ADJ ON ADJ.INV_NO=HD.INV_NO and BDTL.doc_line_no = adj.idoc_line_no 
	    WHERE HD.INV_DATE BETWEEN TO_DATE(#fromDate#||' '||'000000','DDMONYY HH24MISS') AND TO_DATE(#toDate#||' '||'235959','DDMONYY HH24MISS') AND HD.INV_TYPE='CRD'  AND CUST.CASS_AGT_CODE IS NOT NULL	   
		<isNotEmpty property="carrCode">
			AND FRSTCARR.CARR_CODE = #carrCode# 
		</isNotEmpty>
		<isEmpty property="carrCode">
				<isNotEmpty property="loginCarrier">
				   AND ( FRSTCARR.CARR_CODE = #loginCarrier#
                        OR  FRSTCARR.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP 
                        WHERE GRP_CARR_CODE  = #loginCarrier#))             
            	</isNotEmpty>
        </isEmpty>	
             )
		GROUP BY awbNo,fltCarr,fltKey,fltDate,delvDate,currency,casscode
	</select>
	<select id="fetchUserCassDtlsforIBOIBR" parameterClass="cargo.cms.finance.report.bo.FinanceTransReportBO" resultClass="cargo.cms.finance.report.bo.FinanceTransReportBO">		
		SELECT TO_CHAR(MIN(awbWeight),'00000000') awbWeight,awbNo,MIN(iatacode),LPAD(MIN(casscode),11,'0') casscode,fltCarr,fltKey,fltDate,TO_CHAR(abs(SUM(frtChrgAmt)),'000000000000') frtChrgAmt,
		'000000000000' ccAgtAmt,'000000000000' ccCarrAmt,TO_CHAR(abs(SUM(totalAmt)),'000000000000') totalAmt,TO_CHAR(abs(SUM(ttlCCAmt)),'000000000000') ttlCCAmt,TO_CHAR(abs(MAX(docChrgAmt)),'000000000000') docChrgAmt,
		TO_CHAR(abs(SUM(tmlChrgAmt)),'000000000000') tmlChrgAmt,TO_CHAR(abs(SUM(miscChrg)),'000000000000') miscChrg,MIN(origin) origin,MIN(dest) dest,delvDate ,min(adjAmt) adjAmt,currency,
		min(miscCharge1) miscCharge1, min(dcCharge1) dcCharge1,min(frghtCharge1) frghtCharge1,min(ccCharge1) ccCharge1,min(tmlCharge1) tmlCharge1    
		FROM (SELECT DECODE(AWB.WT,0,(select recd_wt from imp_car_shp where awb_no=AWB.AWB_NO and awb_date=AWB.AWB_DATE),(NVL((pkg_calculate.GET_NEXT_HALF_ROUND(AWB.WT)*10),0))) awbWeight,    
		BDTL.AWB_NO awbNo,ADJDTL.ADJ_AMT adjAmt,CUST.CO_IATA_CODE iatacode,LPAD(NVL(CUST.CASS_AGT_CODE,0),11,'0')casscode,FRSTCARR.CARR_CODE fltCarr,
		(SELECT CODE_DESC FROM MAST_CARRIER WHERE CODE=FRSTCARR.CARR_CODE) carrierName,
		FRSTCARR.FLT_KEY fltKey,
		TO_CHAR(FRSTCARR.FLT_DATE,'YYMMDD') fltDate,
    	(SELECT CURR_CODE FROM IMP_CAR_AWB where awb_no=AWB.AWB_NO AND AWB_DATE=AWB.AWB_DATE) currency,
    	TO_CHAR(NVL(BDTL.FRCHRG*100,0),'000000000000') frtChrgAmt,
      	'000000000000' ccAgtAmt,'000000000000' ccCarrAmt,
      	<!-- TO_CHAR(NVL((BDTL.FRCHRG/(SELECT NVL(EXCH_RATE,1) FROM IMP_CAR_AWB where awb_no=AWB.AWB_NO AND AWB_DATE=AWB.AWB_DATE))*100,0),'000000000000') totalAmt, -->
      	TO_CHAR(NVL(BDTL.FRCHRG*100,0)+NVL(BDTL.CCCHRG*100,0),'000000000000')  totalAmt,
      	<!-- TO_CHAR(NVL(BDTL.CCCHRG*100,0),'000000000000') ttlCCAmt, -->
      	'000000000000' ttlCCAmt,
      	TO_CHAR(NVL(BDTL.DC*100,0),'000000000000') docChrgAmt,TO_CHAR(NVL(BDTL.TC*100,0),'000000000000') tmlChrgAmt,TO_CHAR(NVL(BDTL.MISC*100,0),'000000000000') miscChrg,
      	AWB.ORIG origin,AWB.DEST dest,TO_CHAR(SRF.SRF_DATE,'YYMMDD') delvDate,
      	NVL(BDTL.MISC,0) miscCharge1,NVL(BDTL.DC,0) dcCharge1,NVL(BDTL.FRCHRG,0) frghtCharge1,NVL(BDTL.CCCHRG,0) ccCharge1,NVL(BDTL.TC,0) tmlCharge1,
      	BDTL.STATUS        
    	FROM BILL_ADJ_HD HD
    	JOIN (SELECT SUM(DTL.ADJ_AMT) ADJ_AMT,DTL.INV_NO,DTL.ADJ_NO FROM BILL_ADJ_DTL DTL GROUP BY DTL.INV_NO,DTL.ADJ_NO) ADJDTL ON ADJDTL.ADJ_NO=HD.ADJ_NO 
    	JOIN (SELECT ADJDTL.ADJ_NO,CDTL.CUST_NAME,CDTL.CUST_NO,SUM(CASE WHEN CDTL.ITM_CODE='DCIEDC' THEN ADJDTL.ADJ_AMT ELSE 0 END) AS DC,
        SUM(CASE WHEN (CDTL.ITM_CODE IN ('TCBULK','TCPREP','TCECTC','TCCBVC','MCINBC') OR CDTL.ITM_CODE IN (select ITEM_CODE from MAST_TC_CHARGES_CONFIG where NVL(DEL_YN,'N') = 'N')) THEN ADJDTL.ADJ_AMT ELSE 0 END) AS TC,
        SUM(CASE WHEN (CDTL.ITM_CODE NOT IN ('TCBULK','TCPREP','TCECTC','TCCBVC','DCIEDC','MCINBC','FCIMFC','SCIMPO','CCIMPO') AND CDTL.ITM_CODE NOT IN (select ITEM_CODE from MAST_TC_CHARGES_CONFIG where NVL(DEL_YN,'N') = 'N')) THEN ADJDTL.ADJ_AMT ELSE 0 END) AS MISC,
        SUM(CASE WHEN CDTL.ITM_CODE IN ('FCIMFC')  THEN ADJDTL.ADJ_AMT ELSE 0 END) AS FRCHRG,
        SUM(CASE WHEN CDTL.ITM_CODE IN ('CCIMPO')  THEN ADJDTL.ADJ_AMT ELSE 0 END) AS CCCHRG,CDTL.AWB_NO,CDTL.AWB_DATE,CDTL.STATUS  FROM BILL_ADJ_DTL ADJDTL
	    JOIN BILL_INV_DTL DTL ON ADJDTL.INV_NO=DTL.INV_NO AND ADJDTL.IDOC_LINE_NO=DTL.DOC_LINE_NO 
	    JOIN BILL_CHARGE_DTL CDTL ON CDTL.TR_NO=DTL.CHRG_TR_NO AND CDTL.REV_IND='A' GROUP BY ADJDTL.ADJ_NO,CDTL.AWB_NO,CDTL.AWB_DATE,CDTL.CUST_NAME,CDTL.CUST_NO,CDTL.STATUS) BDTL ON BDTL.ADJ_NO=ADJDTL.ADJ_NO 
		JOIN AWB AWB on AWB.AWB_NO=BDTL.AWB_NO AND AWB.AWB_DATE = BDTL.AWB_DATE AND AWB.AWB_TYPE='I' 
		JOIN (SELECT OPR.CARR_CODE,CARSHP.AWB_NO,CARSHP.AWB_DATE,CARSHP.FLT_KEY,CARSHP.FLT_DATE,
	    dense_rank() over (partition BY awb_no, awb_date order by NVL(ACT_DATE,SCH_DATE), NVL(ACT_TIME,SCH_TIME),CARSHP.FLT_KEY,CARSHP.FLT_DATE) rank FROM IMP_CAR_SHP CARSHP
	    JOIN FLT_OPR OPR ON CARSHP.FLT_KEY = OPR.FLT_KEY AND CARSHP.FLT_DATE = OPR.SCH_DATE AND OPR.FLT_TYPE='A' 
	    WHERE (CARSHP.MANIFEST_PCS>0 OR CARSHP.RECD_PCS>0) ) FRSTCARR ON FRSTCARR.awb_no=AWB.AWB_NO AND FRSTCARR.AWB_DATE=AWB.AWB_DATE and rank=1  
    	LEFT JOIN (SELECT (SUM(NVL(CC_AMT,0))) TTLCCAMT,AWB_NO,AWB_DATE
		FROM IMP_CAR_CHRG_ITM GROUP BY AWB_NO,AWB_DATE) CHARG ON CHARG.AWB_NO=AWB.AWB_NO AND CHARG.AWB_DATE=AWB.AWB_DATE 
    	JOIN CUST_COMPANY CUST ON ((CUST.CODE_DESC=NVL(BDTL.CUST_NAME,AWB.AGENT_NAME) AND NVL(BDTL.CUST_NO,AWB.AGENT_CODE) is null) or CUST.CODE = NVL(BDTL.CUST_NO,AWB.AGENT_CODE) ) 
    	LEFT JOIN (SELECT MIN(SRF_DATE) SRF_DATE,AWB_NO,AWB_DATE FROM IMP_SRF GROUP BY AWB_NO,AWB_DATE) SRF ON SRF.AWB_NO=AWB.AWB_NO AND SRF.AWB_DATE=AWB.AWB_DATE 
    	WHERE HD.ADJ_DATE BETWEEN TO_DATE(#fromDate#||' '||'000000','DDMONYY HH24MISS') AND TO_DATE(#toDate#||' '||'235959','DDMONYY HH24MISS')  AND HD.ADJ_TYPE='CRD' AND CUST.CASS_AGT_CODE IS NOT NULL 
    	 AND NOT EXISTS (SELECT NULL FROM BILL_INV_HD WHERE INV_NO=ADJDTL.INV_NO AND INV_DATE BETWEEN TO_DATE(#fromDate#||' '||'000000','DDMONYY HH24MISS') AND TO_DATE(#toDate#||' '||'235959','DDMONYY HH24MISS') AND INV_TYPE='CRD')
		<isNotEmpty property="carrCode">
			AND FRSTCARR.CARR_CODE = #carrCode# 
		</isNotEmpty>
		<isEmpty property="carrCode">
				<isNotEmpty property="loginCarrier">
				   AND ( FRSTCARR.CARR_CODE = #loginCarrier#
                        OR  FRSTCARR.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP 
                        WHERE GRP_CARR_CODE  = #loginCarrier#))             
            	</isNotEmpty>
        </isEmpty>
        ) GROUP BY awbNo,fltCarr,fltKey,fltDate,delvDate,currency  
    	ORDER BY adjAmt
    </select>
	
		<select id="fetchWaiverReptDtls" parameterClass="cargo.cms.finance.report.bo.FinanceTransReportBO" resultClass="cargo.cms.finance.report.bo.FinanceTransReportBO">
		SELECT CDTL.WAVR_DATE,TO_CHAR(CDTL.WAVR_DATE,'DDMONYY HH24:MI') transactionDt,
    	 CASE WHEN (NVL(AWB.AWB_TYPE,'X') = 'I' OR NVL(AWB.AWB_TYPE,'X') = 'T') then (SELECT FLT_KEY FLT_KEY FROM IMP_CAR_SHP where awb_no=AWB.AWB_NO AND AWB_DATE=AWB.AWB_DATE and rownum=1) 
      		else ( (SELECT FLT_KEY FLT_KEY FROM exp_pmanifest_awb where awb_no=AWB.AWB_NO AND AWB_DATE=AWB.AWB_DATE and rownum=1) ) end fltKey,
   		CASE WHEN (NVL(AWB.AWB_TYPE,'X') = 'I' OR NVL(AWB.AWB_TYPE,'X') = 'T') then (SELECT  TO_CHAR(FLT_DATE,'DDMONYY') FLT_DATE FROM IMP_CAR_SHP where awb_no=AWB.AWB_NO AND AWB_DATE=AWB.AWB_DATE and rownum=1) 
      		else ( (SELECT  TO_CHAR(FLT_DATE,'DDMONYY') FLT_DATE FROM exp_pmanifest_awb where awb_no=AWB.AWB_NO AND AWB_DATE=AWB.AWB_DATE and rownum=1) ) end fltDate,
    	NVL(AWB.AGENT_NAME,CDTL.CUST_NAME) agentName,CUST.FIN_CODE finCode,CUST.CODE agentCode,CDTL.ITM_CODE itemCode,ITM.ITM_DESC itemDesc,
    	CDTL.AWB_NO awbNo,CUST.CO_IATA_CODE iatacode,CUST.CASS_AGT_CODE casscode,NVL(AWB.CARR_CODE,rcl.CARR_CODE)  carrCode,
    	(CDTL.CHRG_AMT + NVL(CDTL.WAVR_AMT,0)) chrgAmt,CDTL.WAVR_AMT waivrerAmt,CDTL.NET_AMT netAmt,CDTL.WAVR_FORM_NO waiverFormNo,CDTL.WAVR_RMK remark,
    	CDTL.WAVR_USER_ID userID,(SELECT CODE_DESC FROM SEC_USER WHERE CODE=CDTL.WAVR_USER_ID) loginName,CDTL.REV_IND revInd 
		FROM BILL_CHARGE_DTL CDTL 
		LEFT JOIN AWB AWB on AWB.AWB_NO=CDTL.AWB_NO AND AWB.AWB_DATE = CDTL.AWB_DATE
		LEFT JOIN EXP_RCL_HD rcl on RCL.RCL_NO = cdtl.rcl_no
		JOIN BILL_ITM_MASTER ITM ON ITM.ITM_CODE=CDTL.ITM_CODE AND NVL(ITM.ITM_CODE_SFX,'*') = NVL(CDTL.ITM_CODE_SFX,'*')
		LEFT JOIN CUST_COMPANY CUST ON CUST.CODE_DESC=NVL(AWB.AGENT_NAME,CDTL.CUST_NAME)  
		WHERE CDTL.WAVR_DATE BETWEEN TO_DATE(#fromDate#||' '||'000000','DDMONYY HH24MISS') AND TO_DATE(#toDate#||' '||'235959','DDMONYY HH24MISS')  AND CDTL.WAVR_DONE='Y' AND CDTL.STATUS!='VOID' 
	   <isNotEmpty property="loginCarrier">
        AND (NVL(AWB.CARR_CODE,rcl.CARR_CODE)  = #loginCarrier#
        		OR NVL(AWB.CARR_CODE,rcl.CARR_CODE)  IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE= #loginCarrier#))
        </isNotEmpty>
	    <isNotEmpty property="waiverFormNo">
			AND CDTL.WAVR_FORM_NO = #waiverFormNo#
		</isNotEmpty>
	    <isNotEmpty property="awbNo">
			AND CDTL.AWB_NO = #awbNo#
		</isNotEmpty>
	    <isNotEmpty property="agentName">
			AND NVL(AWB.AGENT_NAME,CDTL.CUST_NAME) = #agentName#
		</isNotEmpty>
	    <isNotEmpty property="finCode">
			AND CUST.FIN_CODE = #finCode#
		</isNotEmpty>
    	ORDER BY CDTL.CR_DATE ASC 
	</select>
	<select id="fetchCustCnsldDtls" parameterClass="cargo.cms.finance.report.bo.FinanceTransReportBO" resultClass="cargo.cms.finance.report.bo.FinanceTransReportBO">
		SELECT consInvoiceNo,transactionDt,finCode,agentCode,invType,chrgAmt,netAmt,agentName,addr1,addr2,addr3,addr4,attn,invoiceNo,awbNo,itemCharge,carrCode,flowType,hawbNo FROM (
		SELECT DTL.CNSLDT_INV_NO consInvoiceNo,TO_CHAR(DTL.CNSLDT_INV_DATE,'DDMONYY') transactionDt,CUST.FIN_CODE finCode, CUST.CODE agentCode,
		decode(HD.INV_TYPE,'CRD','CREDIT','CSH','CASH') invType, trim(to_char(NVL(SUM(DTL.CHARGE_AMT),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')) chrgAmt,
		NVL(SUM(DTL.CHARGE_AMT),0) netAmt,CUST.CODE_DESC agentName,NVL(CUST.ADD1,'') addr1,NVL(CUST.ADD2,'') addr2,NVL(CUST.ADD3,'') addr3,NVL(CUST.ADD4,'') addr4,NVL(CUST.BILL_ATTN,'') attn,
		HD.INV_NO invoiceNo,
	    CHRG.AWB_NO awbNo,
	    CASE WHEN CHRG.ITM_CODE = 'SCEXPO' then (CHRG.ITM_DESC || '(' || CHRG.REMARKS || ')' ) else CHRG.ITM_DESC end AS itemCharge,
	    (select carr_code from awb where awb_no = CHRG.awb_no and awb_date = CHRG.awb_date) as carrCode,
	    (select awb_type from awb where awb_no = CHRG.awb_no and awb_date = CHRG.awb_date) as flowType,
	    CHRG.HAWB_DTL AS hawbNo 
		FROM BILL_INV_HD HD JOIN BILL_INV_DTL DTL ON HD.INV_NO = DTL.INV_NO 
 			JOIN BILL_CHARGE_DTL CHRG ON CHRG.TR_NO = DTL.CHRG_TR_NO 
        	JOIN CUST_COMPANY CUST ON CUST.CODE_DESC=CHRG.CUST_NAME
        WHERE DTL.CNSLDT_INV_DATE between TO_DATE(#fromDate#||' '||'000000','DDMONYY HH24MISS') and TO_DATE(#toDate#||' '||'235959','DDMONYY HH24MISS')
        <![CDATA[
                                AND LENGTH(DTL.CNSLDT_INV_NO) > 0
                                ]]>
		<isNotEmpty property="agentName">
			AND CUST.CODE_DESC = #agentName#
		</isNotEmpty>
	    <isNotEmpty property="finCode">
			AND CUST.FIN_CODE = #finCode#
		</isNotEmpty>
		group by DTL.CNSLDT_INV_NO,DTL.CNSLDT_INV_DATE, HD.INV_TYPE,CUST.CODE_DESC,CUST.ADD1,CUST.ADD2,CUST.ADD3,CUST.ADD4,CUST.BILL_ATTN,CUST.FIN_CODE,CUST.CODE,HD.INV_NO,CHRG.AWB_NO,
		CASE WHEN CHRG.ITM_CODE = 'SCEXPO' THEN (CHRG.ITM_DESC || '(' || CHRG.REMARKS || ')' ) ELSE CHRG.ITM_DESC END,
		CHRG.AWB_DATE,CHRG.HAWB_DTL 
		UNION ALL
		SELECT DTL.CNSLDT_INV_NO consInvoiceNo,TO_CHAR(DTL.CNSLDT_INV_DATE,'DDMONYY') transactionDt,CUST.FIN_CODE finCode, CUST.CODE agentCode,
		decode(HD.ADJ_TYPE,'CRD','CREDIT','CSH','CASH') invType,trim(to_char(NVL(SUM(DTL.ADJ_AMT),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')) chrgAmt,
		NVL(SUM(DTL.ADJ_AMT),0) netAmt,CUST.CODE_DESC agentName,NVL(CUST.ADD1,'') addr1,NVL(CUST.ADD2,'') addr2,NVL(CUST.ADD3,'') addr3,NVL(CUST.ADD4,'') addr4,NVL(CUST.BILL_ATTN,'') attn,
		HD.INV_NO invoiceNo,
	    CHRG.AWB_NO awbNo,
	    CASE WHEN CHRG.ITM_CODE = 'SCEXPO' then (CHRG.ITM_DESC || '(' || CHRG.REMARKS || ')' ) else CHRG.ITM_DESC end AS itemCharge,
	    (select carr_code from awb where awb_no = CHRG.awb_no and awb_date = CHRG.awb_date) as carrCode,
	    (select awb_type from awb where awb_no = CHRG.awb_no and awb_date = CHRG.awb_date) as flowType,
	    CHRG.HAWB_DTL AS hawbNo 
		FROM BILL_ADJ_HD HD JOIN BILL_ADJ_DTL DTL ON HD.ADJ_NO = DTL.ADJ_NO  
      		JOIN BILL_INV_DTL INVDTL ON DTL.IDOC_LINE_NO = INVDTL.DOC_LINE_NO AND DTL.INV_NO = INVDTL.INV_NO
          	JOIN BILL_CHARGE_DTL CHRG ON CHRG.TR_NO = INVDTL.CHRG_TR_NO 
         	JOIN CUST_COMPANY CUST ON CUST.CODE_DESC=CHRG.CUST_NAME
       WHERE DTL.CNSLDT_INV_DATE between TO_DATE(#fromDate#||' '||'000000','DDMONYY HH24MISS') and TO_DATE(#toDate#||' '||'235959','DDMONYY HH24MISS')
         	   <![CDATA[
                                AND LENGTH(DTL.CNSLDT_INV_NO) > 0
                                ]]>
		<isNotEmpty property="agentName">
			AND CUST.CODE_DESC = #agentName#
		</isNotEmpty>
	    <isNotEmpty property="finCode">
			AND CUST.FIN_CODE = #finCode#
		</isNotEmpty>
		group by DTL.CNSLDT_INV_NO,DTL.CNSLDT_INV_DATE, HD.ADJ_TYPE,CUST.CODE_DESC,CUST.ADD1,CUST.ADD2,CUST.ADD3,CUST.ADD4,CUST.BILL_ATTN,CUST.FIN_CODE,CUST.CODE,HD.INV_NO,CHRG.AWB_NO,
		CASE WHEN CHRG.ITM_CODE = 'SCEXPO' THEN (CHRG.ITM_DESC || '(' || CHRG.REMARKS || ')' ) ELSE CHRG.ITM_DESC END,
		CHRG.AWB_DATE,CHRG.HAWB_DTL ) 
		ORDER BY agentCode,flowType,carrCode,to_date(transactionDt),awbNo asc		
	</select>
	<select id="fetchBulkCargoAcceptanceList" parameterClass="cargo.cms.finance.report.bo.FinanceReportBO" resultClass="cargo.cms.finance.report.bo.FinanceReportBO">
	 SELECT TO_CHAR(A.RCL_DATE,'DDMONYY HH24:MI') as rclIssueDate,
        A.CARR_CODE AS airline,
        C.CO_IATA_CODE AS agentCode,
        C.code_desc as agentName,
        A.RCL_NO as rclId, 
        CONCAT(CONCAT(SUBSTR(AWB_NO,0,3),'-'),SUBSTR(AWB_NO,4)) as awbNo,  
        A.AWB_DEST as destination, 
        A.RCL_PCS AS awbPcs,
        A.RCL_WT AS awbWt, 
        A.RTN_PCS as returnPcs, 
        A.RTN_WT as returnWt,
        C.HEIGHT AS height,
        C.WIDTH AS width,
        C.LENGTH AS length,
        C.PCS AS pieces,
        (CASE WHEN A.REPT_VER > 1 THEN 'Re-Print'
                     ELSE CASE when (SELECT COUNT(1) FROM BILL_CHARGE_DTL WHERE STATUS ='PENDING' AND RCL_NO = A.RCL_NO) > 0 then 'Unpaid'
                     ELSE DECODE(RTN_IND,'Y','Return',DECODE(STATUS,'S','Issued','I','Incomplete','P','Pending Security Check','R','Rejected','V','Void','NULL'))
                     end 
                     end) AS rclStatus
  FROM  EXP_RCL_HD A, CUST_COMPANY C,EXP_RCL_DMN C
  WHERE C.CODE(+)=A.CUST_NO AND
        A.PPK_TYPE = 'B' AND
        C.RCL_NO = A.RCL_NO AND
        A.RCL_DATE BETWEEN TO_DATE(#fromDate#, 'ddMONyy') AND TO_DATE(#toDate#, 'ddMONyy') +1
        <isNotEmpty property="carrCode">
        AND A.CARR_CODE = #carrCode#
        </isNotEmpty>
        <isEmpty property="carrCode" >
        		<isNotEmpty property="loginCarrier">
				   AND ( A.CARR_CODE = #loginCarrier#
                        OR  A.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP 
                        WHERE GRP_CARR_CODE  = #loginCarrier#))             
            	</isNotEmpty>
        </isEmpty>
        ORDER BY A.RCL_NO DESC
	</select>
	<select id="financeBulkDimensionList" parameterClass="cargo.cms.finance.report.bo.FinanceReportBO" resultClass="cargo.cms.finance.report.bo.FinanceReportBO">
	SELECT HEIGHT AS height,
           WIDTH AS width,
           LENGTH AS length,
           PCS AS pieces
      FROM exp_rcl_dmn WHERE rcl_no=#rclId#
	</select>
	<select id="fetcheRCLSummaryList" parameterClass="cargo.cms.finance.report.bo.FinanceReportBO" resultClass="cargo.cms.finance.report.bo.FinanceReportBO">
	SELECT * FROM (select to_char(t1.RCL_DATE,'DDMONYY') AS rclIssueDate,
                t1.carr_code AS airline,
                t1.CUST_NO AS agentCode,
                (SELECT B.CODE_DESC  FROM CUST_COMPANY B WHERE t1.CUST_NO = B.CODE) as agentName,
					  		t1.rcl_no  AS rclId,
								t2.uld_key as uldNum,
                t2.CONTR_CODE AS uldContr,
                decode(t1.PPK_TYPE,'B','Bulk','P','Prepack','M','Mixed') AS uldType,
                t2.pcs pcs,
                TRIM(TO_CHAR(t2.NET_wt, '99999990D99')) as netWt,
                t1.awb_dest AS destination, 
                substr(t1.awb_no, 1, 3) || '-' || SUBSTR (t1.awb_no, 4) AS associateAWB,
                TRIM(TO_CHAR(t1.RCL_WT, '99999990D99')) AS awbNetWt,
                (CASE WHEN t1.REPT_VER > 1 THEN 'Re-Print'
                     ELSE CASE when (SELECT COUNT(1) FROM BILL_CHARGE_DTL WHERE STATUS ='PENDING' AND RCL_NO =t1.RCL_NO) > 0 then 'Unpaid'
                     ELSE DECODE(t1.RTN_IND,'Y','Return',DECODE(t1.STATUS,'S','Issued','I','Incomplete','P','Pending Security Check','R','Rejected','V','Void','NULL'))
                     end 
                     end) AS rclStatus
		from  exp_rcl_hd t1
   		 join exp_rcl_dtl t2 on t1.rcl_no = t2.rcl_no
    	join exp_pre_rcl_hd t3 on t3.pre_rcl_no=t1.pre_rcl_no
    where    T1.PPK_TYPE='P'
    AND trunc(t1.RCL_DATE) BETWEEN TO_DATE(#fromDate#,'DDMONYY') AND TO_DATE(#toDate#,'DDMONYY')
    AND t1.carr_code = #carrCode# and t1.status != 'V'
    <isNotEmpty property="loginCarrier">
   AND (T1.CARR_CODE = #loginCarrier#
   OR T1.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE= #loginCarrier#))
    </isNotEmpty>
    union all
    select to_char(t1.RCL_DATE,'DDMONYY') AS rclIssueDate,
                t1.carr_code AS airline,
                t1.CUST_NO AS agentCode,
                (SELECT B.CODE_DESC  FROM CUST_COMPANY B WHERE t1.CUST_NO = B.CODE) as agentName,
					  		t1.rcl_no  AS rclId,
								t1.uld_key as uldNum,
                (SELECT B.CONTR_CODE
                FROM EXP_RCL_DTL B
                WHERE B.RCL_NO=t1.RCL_NO
                AND B.ULD_KEY = t2.uld_key) AS uldContr,
                decode(t1.PPK_TYPE,'B','Bulk','P','Prepack','M','Mixed') AS uldType,
                t1.rcl_pcs pcs,
                TRIM(TO_CHAR(t1.rcl_wt, '99999990D99')) as netWt,
                t2.dest AS destination, 
                substr(t2.awb_no, 1, 3) || '-' || SUBSTR (t2.awb_no, 4) AS associateAWB,
                TRIM(TO_CHAR(t2.WEIGHT, '99999990D99')) AS awbNetWt,
                 (CASE WHEN t1.REPT_VER > 1 THEN 'Re-Print'
                     ELSE CASE when (SELECT COUNT(1) FROM BILL_CHARGE_DTL WHERE STATUS ='PENDING' AND RCL_NO =t1.RCL_NO) > 0 then 'Unpaid'
                     ELSE DECODE(t1.RTN_IND,'Y','Return',DECODE(t1.STATUS,'S','Issued','I','Incomplete','P','Pending Security Check','R','Rejected','V','Void','NULL'))
                     end 
                     end) AS rclStatus
		from  exp_rcl_hd t1
   		 join exp_rcl_brkdn t2 on t1.rcl_no = t2.rcl_no
    	join exp_pre_rcl_hd t3 on t3.pre_rcl_no=t1.pre_rcl_no
    where    T1.PPK_TYPE='M'
    AND trunc(t1.RCL_DATE) BETWEEN TO_DATE(#fromDate#,'DDMONYY') AND TO_DATE(#toDate#,'DDMONYY')
    AND t1.carr_code = #carrCode# and t1.status != 'V'
    <isNotEmpty property="loginCarrier">
   AND (T1.CARR_CODE = #loginCarrier#
   OR T1.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE= #loginCarrier#))
     </isNotEmpty>
    UNION ALL
    select to_char(t1.RCL_DATE,'DDMONYY') AS rclIssueDate,
                t1.carr_code AS airline,
                t1.CUST_NO AS agentCode,
                (SELECT B.CODE_DESC  FROM CUST_COMPANY B WHERE t1.CUST_NO = B.CODE) as agentName,
					  		t1.rcl_no  AS rclId,
								t2.uld_key as uldNum,
                t2.CONTR_CODE AS uldContr,
                decode(t1.PPK_TYPE,'B','Bulk','P','Prepack','M','Mixed') AS uldType,
                t2.pcs pcs,
                TRIM(TO_CHAR(t2.NET_wt, '99999990D99')) as netWt,
                t1.awb_dest AS destination, 
                substr(t1.awb_no, 1, 3) || '-' || SUBSTR (t1.awb_no, 4) AS associateAWB,
                TRIM(TO_CHAR(t1.RCL_WT, '99999990D99')) AS awbNetWt,
                (CASE WHEN t1.REPT_VER > 1 THEN 'Re-Print'
                     ELSE CASE when (SELECT COUNT(1) FROM BILL_CHARGE_DTL WHERE STATUS ='PENDING' AND RCL_NO =t1.RCL_NO) > 0 then 'Unpaid'
                     ELSE DECODE(t1.RTN_IND,'Y','Return',DECODE(t1.STATUS,'S','Issued','I','Incomplete','P','Pending Security Check','R','Rejected','V','Void','NULL'))
                     end 
                     end) AS rclStatus
		from  exp_rcl_hd t1
   		 join exp_rcl_dtl t2 on t1.rcl_no = t2.rcl_no
    where    T1.PPK_TYPE='P'
    AND trunc(t1.RCL_DATE) BETWEEN TO_DATE(#fromDate#,'DDMONYY') AND TO_DATE(#toDate#,'DDMONYY')
    AND t1.carr_code = #carrCode# AND t1.pre_rcl_no is null and t1.status = 'V'
    <isNotEmpty property="loginCarrier">
   AND (T1.CARR_CODE = #loginCarrier#
   OR T1.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE= #loginCarrier#))
    </isNotEmpty>
    union all
    select to_char(t1.RCL_DATE,'DDMONYY') AS rclIssueDate,
                t1.carr_code AS airline,
                t1.CUST_NO AS agentCode,
                (SELECT B.CODE_DESC  FROM CUST_COMPANY B WHERE t1.CUST_NO = B.CODE) as agentName,
					  		t1.rcl_no  AS rclId,
								t1.uld_key as uldNum,
                (SELECT B.CONTR_CODE
                FROM EXP_RCL_DTL B
                WHERE B.RCL_NO=t1.RCL_NO
                AND B.ULD_KEY = t2.uld_key) AS uldContr,
                decode(t1.PPK_TYPE,'B','Bulk','P','Prepack','M','Mixed') AS uldType,
                t1.rcl_pcs pcs,
                TRIM(TO_CHAR(t1.rcl_wt, '99999990D99')) as netWt,
                t2.dest AS destination, 
                substr(t2.awb_no, 1, 3) || '-' || SUBSTR (t2.awb_no, 4) AS associateAWB,
                TRIM(TO_CHAR(t2.WEIGHT, '99999990D99')) AS awbNetWt,
                 (CASE WHEN t1.REPT_VER > 1 THEN 'Re-Print'
                     ELSE CASE when (SELECT COUNT(1) FROM BILL_CHARGE_DTL WHERE STATUS ='PENDING' AND RCL_NO =t1.RCL_NO) > 0 then 'Unpaid'
                     ELSE DECODE(t1.RTN_IND,'Y','Return',DECODE(t1.STATUS,'S','Issued','I','Incomplete','P','Pending Security Check','R','Rejected','V','Void','NULL'))
                     end 
                     end) AS rclStatus
		from  exp_rcl_hd t1
   		 join exp_rcl_brkdn t2 on t1.rcl_no = t2.rcl_no
    where    T1.PPK_TYPE='M'
    AND trunc(t1.RCL_DATE) BETWEEN TO_DATE(#fromDate#,'DDMONYY') AND TO_DATE(#toDate#,'DDMONYY')
    AND t1.carr_code = #carrCode# AND t1.pre_rcl_no is null and t1.status = 'V'
    <isNotEmpty property="loginCarrier">
   AND (T1.CARR_CODE = #loginCarrier#
   OR T1.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE= #loginCarrier#))
    </isNotEmpty>
    ) ORDER BY rclIssueDate,airline,rclId,uldNum,associateAWB
   </select> 
	
	<select id="sqlCheckNoExists" parameterClass="map" resultClass="java.lang.Integer">
	select count(1) from BILL_PAYMENT where (CHQ1_NO = #CHK_NO# AND CHQ1_BANK = #CHK_BANK#) OR (CHQ2_NO = #CHK_NO# AND CHQ2_BANK = #CHK_BANK#) OR (CHQ3_NO = #CHK_NO# AND CHQ3_BANK = #CHK_BANK#)
	</select>
	
	<select id="customerConsolidateInvoiceReport" parameterClass="cargo.cms.finance.report.bo.FinanceTransReportBO" resultClass="cargo.cms.finance.report.bo.FinanceTransReportBO">
		 SELECT    CUST.CODE_DESC agentName,
		           (select carr_code from awb where awb_no = BCD.awb_no and awb_date = BCD.awb_date) as carrCode,
                   (select awb_type from awb where awb_no = BCD.awb_no and awb_date = BCD.awb_date) as flowType,
		 		   DTL.CNSLDT_INV_NO cnslInvNo, 
				   trim(to_char(NVL(SUM(DTL.CHARGE_AMT),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')) creditAmt,
				   HD.INV_NO invoiceNo,
				   trim(to_char(NVL(DTL.CHARGE_AMT,0),'999,999,999,999,999,999,999,999,999,999,999.99')) itemCharge,
				   BCD.ITM_DESC itemCode,
		           BCD.UOM waiverFormNo,
		           BCD.QTY quantity,
		           BCD.AWB_NO awbNo 
		           FROM BILL_INV_HD HD JOIN BILL_INV_DTL DTL ON HD.INV_NO = DTL.INV_NO 
		           		 JOIN BILL_CHARGE_DTL BCD ON  DTL.CHRG_TR_NO = BCD.TR_NO
		           		 JOIN CUST_COMPANY CUST ON CUST.CODE_DESC=BCD.CUST_NAME
					WHERE to_date(to_char(DTL.CNSLDT_INV_DATE,'DDMONYY'),'DDMONYY') BETWEEN #fromDate# AND #toDate# 
					AND DTL.CNSLDT_INV_NO is not null
					<isNotEmpty property="agentName">
					AND CUST.CODE_DESC = #agentName#
					</isNotEmpty>
				    <isNotEmpty property="finCode">
						AND CUST.FIN_CODE = #finCode#
					</isNotEmpty>
		    		group by DTL.CNSLDT_INV_NO,DTL.CNSLDT_INV_DATE,HD.INV_DATE, HD.INV_NO ,HD.INV_TYPE,CUST.CODE_DESC,BCD.ITM_DESC,BCD.UOM,BCD.QTY,DTL.CHARGE_AMT,BCD.AWB_NO,BCD.AWB_DATE
    		
			UNION
			
			SELECT CUST.CODE_DESC agentName,
			       (select carr_code from awb where awb_no = BCD.awb_no and awb_date = BCD.awb_date) as carrCode,
                   (select awb_type from awb where awb_no = BCD.awb_no and awb_date = BCD.awb_date) as flowType,
				   DTL.CNSLDT_INV_NO cnslInvNo, 
				   trim(to_char(NVL(SUM(DTL.ADJ_AMT),0),'999,999,999,999,999,999,999,999,999,999,999,999.99')) creditAmt,
				   HD.ADJ_NO invoiceNo,
				   trim(to_char(NVL(DTL.ADJ_AMT,0),'999,999,999,999,999,999,999,999,999,999,999.99')) itemCharge,
				   BCD.ITM_DESC itemCode,
		           BCD.UOM waiverFormNo,
		           BCD.QTY quantity,
		           BCD.AWB_NO awbNo 
		            FROM BILL_ADJ_HD HD JOIN BILL_ADJ_DTL DTL ON HD.ADJ_NO = DTL.ADJ_NO
		            		      		JOIN BILL_INV_DTL INV ON DTL.INV_NO = INV.INV_NO AND DTL.IDOC_LINE_NO = INV.DOC_LINE_NO 
		     							JOIN BILL_CHARGE_DTL BCD ON  INV.CHRG_TR_NO = BCD.TR_NO
		      							JOIN CUST_COMPANY CUST ON CUST.CODE_DESC=BCD.CUST_NAME 
					WHERE to_date(to_char(DTL.CNSLDT_INV_DATE,'DDMONYY'),'DDMONYY') BETWEEN #fromDate# AND #toDate#
					AND DTL.CNSLDT_INV_NO is not null
					<isNotEmpty property="agentName">
					AND CUST.CODE_DESC = #agentName#
					</isNotEmpty>
				    <isNotEmpty property="finCode">
						AND CUST.FIN_CODE = #finCode#
					</isNotEmpty>
      		      group by DTL.CNSLDT_INV_NO,DTL.CNSLDT_INV_DATE,HD.ADJ_DATE, HD.ADJ_NO ,HD.ADJ_TYPE,CUST.CODE_DESC,BCD.ITM_DESC,BCD.UOM,BCD.QTY,DTL.ADJ_AMT,BCD.AWB_NO,BCD.AWB_DATE
	</select>
	
		<!--  CR Changes :: Ranjith :: Starts-->
	<!-- remove for credit facilty CR AND UPPER(CARR_GROUP)=UPPER(#parentCarr#)  -->
	<select id="sqlGetAgentLevelCreditParent" parameterClass="map" resultClass="java.lang.String" >
		SELECT sum(CR_BAL) 
		FROM cust_agent_level_crd 
		WHERE 
			UPPER(CUST_NO)=UPPER(#custNo#) 
			AND (TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY') 
			&lt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') 
			&gt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') )
			AND nvl(upper(Status),'**') &lt;&gt; 'VOID'
	</select>
	<select id="sqlGetAgentLevelCreditCarr" parameterClass="map" resultClass="java.lang.String" >
		SELECT sum(CR_BAL) 
		FROM cust_agent_level_crd 
		WHERE 
			UPPER(CUST_NO)=UPPER(#custNo#) 
			and  instr( nvl(UPPER(CARR_CODE),'*'), nvl(UPPER(#carrCode#),'**') ) &gt; 0 
			AND (TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY') 
			&lt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') 
			&gt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') )
			AND nvl(upper(Status),'**') &lt;&gt; 'VOID'
	</select>
	
	<!-- remove for credit facilty CR and CARR_GROUP is null  -->
	<select id="sqlGetAgentLevelCredit" parameterClass="map" resultClass="java.lang.String" >
		SELECT sum(CR_BAL) 
		FROM cust_agent_level_crd 
		WHERE 
			UPPER(CUST_NO)=UPPER(#custNo#) 
			and CARR_CODE is null
			AND (TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY') 
			&lt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') 
			&gt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') )
			AND nvl(upper(Status),'**') &lt;&gt; 'VOID'
	</select>
	
	<!-- remove for credit facilty CR AND UPPER(CARR_GROUP)=UPPER(#parentCarr#)   -->
	<select id="sqlCheckAgentLevelCreditExistsParent" parameterClass="map" resultClass="java.lang.Integer" >
		SELECT count(1) 
		FROM cust_agent_level_crd 
		WHERE 
			UPPER(CUST_NO)=UPPER(#custNo#) 
			AND (TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY') 
			&lt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') 
			&gt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') )
			AND nvl(upper(Status),'**') &lt;&gt; 'VOID'
	</select>
	<select id="sqlCheckAgentLevelCreditExistsCarr" parameterClass="map" resultClass="java.lang.Integer" >
		SELECT count(1) 
		FROM cust_agent_level_crd 
		WHERE 
			UPPER(CUST_NO)=UPPER(#custNo#) 
			and  instr(  nvl(UPPER(#CARR_CODE#),'*') , nvl(UPPER(#carrCode#),'**') ) &gt; 0 
			AND (TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY') 
			&lt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') 
			&gt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') )
			AND nvl(upper(Status),'**') &lt;&gt; 'VOID'
	</select>
	
	<!-- remove for credit facilty CR and CARR_GROUP is null   -->
	<select id="sqlCheckAgentLevelCreditExists" parameterClass="map" resultClass="java.lang.Integer" >
		SELECT count(1) 
		FROM cust_agent_level_crd 
		WHERE 
			UPPER(CUST_NO)=UPPER(#custNo#) 
			and CARR_CODE is null
			AND (TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY') 
			&lt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') 
			&gt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') )
			AND nvl(upper(Status),'**') &lt;&gt; 'VOID'
	</select>
	
	<!-- remove for credit facilty CR AND UPPER(CARR_GROUP)=UPPER(#parentCarr#)    -->
	<select id="sqlCheckCPCTGenCreditExistsParent" parameterClass="map" resultClass="java.lang.Integer" >
		<![CDATA[ SELECT count(1) 
		FROM CUST_AGENT_CREDIT 
		WHERE 
			UPPER(CUST_NO)=UPPER(#custNo#) 
			AND (TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY') 
			<= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') 
			>= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') )
			AND UPPER(CR_TYPE) = UPPER('GEN')
			and nvl(upper(Status),'**') <> 'VOID'
			]]> 
	</select>
	<select id="sqlCheckCPCTGenCreditExistsCarr" parameterClass="map" resultClass="java.lang.Integer" >
		<![CDATA[ SELECT count(1) 
		FROM CUST_AGENT_CREDIT 
		WHERE 
			UPPER(CUST_NO)=UPPER(#custNo#) 
			and  instr( nvl(UPPER(CARR_CODE),'*'), nvl(UPPER(#carrCode#),'**') ) > 0 
			AND (TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY') 
			<= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') 
			>= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') )
			AND UPPER(CR_TYPE) = UPPER('GEN')
			and nvl(upper(Status),'**') <> 'VOID'
			]]> 
	</select>
	
	<!-- remove for credit facilty CR and CARR_GROUP is null   -->
	<select id="sqlCheckCPCTGenCreditExists" parameterClass="map" resultClass="java.lang.Integer" >
		<![CDATA[ SELECT count(1) 
		FROM CUST_AGENT_CREDIT 
		WHERE 
			UPPER(CUST_NO)=UPPER(#custNo#) 
			and carr_code is null
			AND (TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY')  <= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') 
			AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') >= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') )
			AND UPPER(CR_TYPE) = UPPER('GEN')
			and nvl(upper(Status),'**') <> 'VOID'
			]]> 
	</select>
	
	<!-- remove for credit facilty CR AND UPPER(CARR_GROUP)=UPPER(#parentCarr#)    -->
	<select id="sqlCheckCPCTCatalogCreditExistsParent" parameterClass="map" resultClass="java.lang.Integer" >
	<![CDATA[
	SELECT count(1) 
		FROM CUST_AGENT_CREDIT 
		WHERE 
			UPPER(CUST_NO)=UPPER(#custNo#) 
			AND (TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY') 
			<= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') 
			>= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') )
			AND UPPER(CR_TYPE) <> UPPER('GEN')
			and nvl(upper(Status),'**') <> 'VOID'
			]]> 
	</select>
	<select id="sqlCheckCPCTCatalogCreditExistsCarr" parameterClass="map" resultClass="java.lang.Integer" >
	<![CDATA[
	SELECT count(1) 
		FROM CUST_AGENT_CREDIT 
		WHERE 
			UPPER(CUST_NO)=UPPER(#custNo#) 
			and  instr( nvl(UPPER(CARR_CODE),'*'), nvl(UPPER(#carrCode#),'**') ) > 0 
			AND (TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY') 
			<= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') 
			>= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') )
			AND UPPER(CR_TYPE) <> UPPER('GEN')
			and nvl(upper(Status),'**') <> 'VOID'
			]]> 
	</select>
	
	<!-- remove for credit facilty CR and CARR_GROUP is null    -->
	<select id="sqlCheckCPCTCatalogCreditExists" parameterClass="map" resultClass="java.lang.Integer" >
	<![CDATA[
	SELECT count(1) 
		FROM CUST_AGENT_CREDIT 
		WHERE 
			UPPER(CUST_NO)=UPPER(#custNo#) 
			and carr_code is null
			AND (TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY') 
			<= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') 
			>= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') )
			AND UPPER(CR_TYPE) <> UPPER('GEN')
			and nvl(upper(Status),'**') <> 'VOID'
			]]> 
	</select>
	
	<!-- remove for credit facilty CR AND UPPER(CARR_GROUP)=UPPER(#parentCarr#)   -->
	<select id="sqlCheckAirlVirtualCreditExistsParent" parameterClass="map" resultClass="java.lang.Integer" >
			<!-- select count(1)  from cust_company where code=#apptdAgt# and NVL(virtual_cr_acc,'N') = 'Y' -->
		SELECT count(1) 
		FROM CUST_AGENT_VIRTUAL_CREDIT 
		WHERE 
			UPPER(CUST_NO)=UPPER(#custNo#) 
			AND UPPER(CR_TYPE) = 'GEN'
			AND (TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY') 
			&lt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') 
			&gt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') )
			AND nvl(upper(Status),'**') &lt;&gt; 'VOID'
	</select>
	<select id="sqlCheckAirlVirtualCreditExistsCarr" parameterClass="map" resultClass="java.lang.Integer" >
		SELECT count(1) 
		FROM CUST_AGENT_VIRTUAL_CREDIT 
		WHERE 
			UPPER(CUST_NO)=UPPER(#custNo#) 
			and instr( nvl(UPPER(CARR_CODE),'*'), nvl(UPPER(#carrCode#),'**') ) &gt; 0 AND UPPER(CR_TYPE) = 'GEN'
			AND (TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY') 
			&lt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') 
			&gt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') )
			AND nvl(upper(Status),'**') &lt;&gt; 'VOID'
	</select>
	
	<!-- remove for credit facilty CR  and CARR_GROUP is null  -->
	<select id="sqlCheckAirlVirtualCreditExists" parameterClass="map" resultClass="java.lang.Integer" >
		SELECT count(1) 
		FROM CUST_AGENT_VIRTUAL_CREDIT 
		WHERE 
			UPPER(CUST_NO)=UPPER(#custNo#) 
			and carr_code is null
			AND UPPER(CR_TYPE) = 'GEN'
			AND (TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY') 
			&lt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') 
			&gt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') )
			AND nvl(upper(Status),'**') &lt;&gt; 'VOID'
	</select>
	
	<!-- remove for credit facilty CR  AND UPPER(CARR_GROUP)=UPPER(#parentCarr#)  -->
	<select id="sqlCheckAirlVirtualCreditCatalogExistsParent" parameterClass="map" resultClass="java.lang.Integer" >
		SELECT count(1) 
		FROM CUST_AGENT_VIRTUAL_CREDIT 
		WHERE 
			UPPER(CUST_NO)=UPPER(#custNo#) 
			AND UPPER(CR_TYPE) &lt;&gt; 'GEN'
			AND (TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY') 
			&lt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') 
			&gt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') )
			AND nvl(upper(Status),'**') &lt;&gt; 'VOID'
	</select>
	<select id="sqlCheckAirlVirtualCreditCatalogExistsCarr" parameterClass="map" resultClass="java.lang.Integer" >
		SELECT count(1) 
		FROM CUST_AGENT_VIRTUAL_CREDIT 
		WHERE 
			UPPER(CUST_NO)=UPPER(#custNo#) 
			and  instr( nvl(UPPER(CARR_CODE),'*'), nvl(UPPER(#carrCode#),'**') ) &gt; 0  AND UPPER(CR_TYPE) &lt;&gt; 'GEN'
			AND (TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY') 
			&lt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') 
			&gt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') )
			AND nvl(upper(Status),'**') &lt;&gt; 'VOID'
	</select>
	
	<!-- remove for credit facilty CR  and CARR_GROUP is null -->
	<select id="sqlCheckAirlVirtualCreditCatalogExists" parameterClass="map" resultClass="java.lang.Integer" >
		SELECT count(1) 
		FROM CUST_AGENT_VIRTUAL_CREDIT 
		WHERE 
			UPPER(CUST_NO)=UPPER(#custNo#) and CARR_CODE is null  AND UPPER(CR_TYPE) &lt;&gt; 'GEN'
			AND (TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY') 
			&lt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') 
			&gt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') )
			AND nvl(upper(Status),'**') &lt;&gt; 'VOID'
	</select>
	
	<!-- remove for credit facilty CR  AND UPPER(CARR_GROUP)=UPPER(#parentCarr#) -->
	<select id="sqlCheckAirlGenCreditExistsParent" parameterClass="map" resultClass="java.lang.Integer" >
	SELECT count(1) 
		FROM CUST_AGENT_AIRL_CREDIT 
		WHERE 
		UPPER(CUST_NO)=UPPER(#custNo#)
		AND UPPER(CR_TYPE) = 'GEN'
		AND (TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY') &lt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') &gt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') )
		AND nvl(upper(Status),'**') &lt;&gt; 'VOID'
	</select>
	<select id="sqlCheckAirlGenCreditExistsCarr" parameterClass="map" resultClass="java.lang.Integer" >
	SELECT count(1) 
		FROM CUST_AGENT_AIRL_CREDIT 
		WHERE 
		UPPER(CUST_NO)=UPPER(#custNo#)
		AND UPPER(CR_TYPE) = 'GEN'
		AND instr( nvl(UPPER(CARR_CODE),'*'), nvl(UPPER(#carrCode#),'**') ) &gt; 0 
		AND (TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY') &lt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') &gt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') )
		AND nvl(upper(Status),'**') &lt;&gt; 'VOID'
	</select>
	
	<!-- remove for credit facilty CR  and CARR_GROUP is null -->
	<select id="sqlCheckAirlGenCreditExists" parameterClass="map" resultClass="java.lang.Integer" >
	SELECT count(1) 
		FROM CUST_AGENT_AIRL_CREDIT 
		WHERE 
		UPPER(CUST_NO)=UPPER(#custNo#) and CARR_CODE is null 
		AND UPPER(CR_TYPE) = 'GEN'
		AND (TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY') &lt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') &gt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') )
		AND nvl(upper(Status),'**') &lt;&gt; 'VOID'
	</select>
	
	<!-- remove for credit facilty CR  AND UPPER(CARR_GROUP)=UPPER(#parentCarr#) -->
	<select id="sqlCheckAirlCatalogCreditExistsParent" parameterClass="map" resultClass="java.lang.Integer" >
	SELECT count(1) 
		FROM CUST_AGENT_AIRL_CREDIT 
		WHERE 
		UPPER(CUST_NO)=UPPER(#custNo#)
		<![CDATA[
		AND UPPER(CR_TYPE) <> 'GEN'
		AND nvl(upper(Status),'**') <> 'VOID'
		]]>
		AND (TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY') &lt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') &gt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') )
	</select>
	<select id="sqlCheckAirlCatalogCreditExistsCarr" parameterClass="map" resultClass="java.lang.Integer" >
	SELECT count(1) 
		FROM CUST_AGENT_AIRL_CREDIT 
		WHERE 
		UPPER(CUST_NO)=UPPER(#custNo#)
		<![CDATA[
		AND UPPER(CR_TYPE) <> 'GEN'
		AND nvl(upper(Status),'**') <> 'VOID'
		]]>
		AND instr( nvl(UPPER(CARR_CODE),'*'), nvl(UPPER(#carrCode#),'**') ) &gt; 0  
		AND (TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY') &lt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') &gt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') )
	</select>
	
	<!-- remove for credit facilty CR  and CARR_GROUP is null -->
	<select id="sqlCheckAirlCatalogCreditExists" parameterClass="map" resultClass="java.lang.Integer" >
	SELECT count(1) 
		FROM CUST_AGENT_AIRL_CREDIT 
		WHERE 
		UPPER(CUST_NO)=UPPER(#custNo#) and CARR_CODE is null
		<![CDATA[
		AND UPPER(CR_TYPE) <> 'GEN'
		AND nvl(upper(Status),'**') <> 'VOID'
		]]>
		AND (TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY') &lt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') &gt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') )
	</select>
	
	
	<select id="sqlCheckDMApprExists" parameterClass="java.lang.String" resultClass="java.lang.Integer" >
	SELECT COUNT(1) FROM CUST_AGENT_DM_APP 
		WHERE
		UPPER(CUST_NO)=UPPER(#custNo#)
		AND (TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY') &lt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') &gt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') )
		AND nvl(upper(Status),'**') &lt;&gt; 'VOID'
	</select>
	
	<update id="updateInvoicePaymentDtl" parameterClass="cargo.cms.billing.bo.InvoiceDTLBO">
	UPDATE BILL_INV_CRD_DTL 
	SET CR_AMT = NVL(CR_AMT,0)+NVL(#creditAmt#,0),
	CR_DATE = SYSDATE
	WHERE INV_NO = #invoiceNo# AND NVL(CR_TYPE,'*') = DECODE(INSTR(#creditLvl#,'AGENT_LVL'),1,'*',(DECODE(UPPER(#creditType#),'GENERAL','GEN','IMPORT GEN','IG','IMPORT OBC','IO','EXPORT GEN','EG','EXPORT OBC','EO',UPPER(#creditType#))))
	 AND CR_LVL = #creditLvl# AND CUST_NO = #agentCode# AND NVL(AIRLINE,'*') = NVL(#airline#,'*')
	</update>
	
	<insert id="createInvoicePaymentDtl" parameterClass="cargo.cms.billing.bo.InvoiceDTLBO">
	INSERT INTO BILL_INV_CRD_DTL(INV_NO,CR_TYPE,CR_LVL,CR_AMT,CUST_NO,AIRLINE,CR_DATE,BALANCE, trans_desc) VALUES (#invoiceNo#,
	DECODE(instr(#creditLvl#,'AGENT_LVL'),1,null,(DECODE(UPPER(#creditType#),'GENERAL','GEN','IMPORT GEN','IG','IMPORT OBC','IO','EXPORT GEN','EG','EXPORT OBC','EO',UPPER(#creditType#))))
	,#creditLvl#,#creditAmt#,#agentCode#,#airline#,sysdate,#balance#,#description#)
	</insert>
	
	
	<update id="updateChargeStatus" parameterClass="java.lang.String">
	 UPDATE bill_charge_dtl
    SET status        = 'PAID',
      paid_amt_credit = chrg_amt
    WHERE srf_no      = #srfNo#
	</update>
	
	<update id="updateChargeStatusByTrNo" parameterClass="cargo.cms.billing.bo.PaymentHeplerChargeBO">
	 UPDATE bill_charge_dtl
    	SET status      = 'PAID',
    	paid_amt_credit = chrg_amt
    WHERE  		<iterate property="chrgTrNoArray" open="(" close=")" conjunction="OR" >
		           tr_no =  $chrgTrNoArray[]$
		       </iterate> 
	</update>
	
	<!-- remove for credit facilty CR  AND UPPER(CARR_GROUP)=UPPER(#PARENT_CODE#)  -->
	<select id="sqlGetAirlineCreditParent" parameterClass="map" resultClass="java.lang.String" >
	SELECT sum(CR_BAL)
		FROM CUST_AGENT_AIRL_CREDIT 
		WHERE 
		UPPER(CUST_NO)=UPPER(#AGENT_CODE#)
		AND UPPER(CR_TYPE) = UPPER(DECODE(#CATALOG#,'IO','Import_OBC','IG','Import_GEN','EO','Export_OBC','EG','Export_GEN','GEN','GEN',#CATALOG#))
		AND (TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY') &lt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') &gt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') )
		AND nvl(upper(Status),'**') &lt;&gt; 'VOID'
	</select>
	
	<!-- remove for credit facilty CR AND UPPER(CARR_CODE)=UPPER(#CARR_CODE#)   -->
	<select id="sqlGetAirlineCreditCarr" parameterClass="map" resultClass="java.lang.String" >
	SELECT sum(CR_BAL)
		FROM CUST_AGENT_AIRL_CREDIT 
		WHERE 
		UPPER(CUST_NO)=UPPER(#AGENT_CODE#)
		AND  instr( UPPER(CARR_CODE), nvl(UPPER(#carrCode#),'**') ) &gt; 0 
		AND UPPER(CR_TYPE) = UPPER(DECODE(#CATALOG#,'IO','Import_OBC','IG','Import_GEN','EO','Export_OBC','EG','Export_GEN','GEN','GEN',#CATALOG#))
		AND (TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY') &lt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') &gt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') )
		AND nvl(upper(Status),'**') &lt;&gt; 'VOID'
	</select>
	
	<!-- remove for credit facilty CR and CARR_GROUP is null   -->
	<select id="sqlGetAirlineCredit" parameterClass="map" resultClass="java.lang.String" >
	SELECT sum(CR_BAL)
		FROM CUST_AGENT_AIRL_CREDIT 
		WHERE 
		UPPER(CUST_NO)=UPPER(#AGENT_CODE#) and CARR_CODE is null 
		AND UPPER(CR_TYPE) = UPPER(DECODE(#CATALOG#,'IO','Import_OBC','IG','Import_GEN','EO','Export_OBC','EG','Export_GEN','GEN','GEN',#CATALOG#))
		AND (TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY') &lt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') &gt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') )
		AND nvl(upper(Status),'**') &lt;&gt; 'VOID'
	</select>
	
	<!-- remove for credit facilty CR AND UPPER(CARR_GROUP)=UPPER(#PARENT_CODE#)    -->
	<select id="sqlGetCpctCreditParent" parameterClass="map" resultClass="java.lang.String" >
	SELECT sum(CR_BAL) 
		FROM CUST_AGENT_CREDIT 
		WHERE 
		UPPER(CUST_NO)=UPPER(#AGENT_CODE#)
		AND UPPER(CR_TYPE) = UPPER(DECODE(#CATALOG#,'IO','Import_OBC','IG','Import_GEN','EO','Export_OBC','EG','Export_GEN','GEN','GEN',#CATALOG#))
		AND (TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY') &lt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') &gt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') )
		and nvl(upper(Status),'**') &lt;&gt; 'VOID'
	</select>
	<select id="sqlGetCpctCreditCarr" parameterClass="map" resultClass="java.lang.String" >
	SELECT sum(CR_BAL) 
		FROM CUST_AGENT_CREDIT 
		WHERE 
		UPPER(CUST_NO)=UPPER(#AGENT_CODE#)
		and  instr( UPPER(CARR_CODE), nvl(UPPER(#carrCode#),'**') ) &gt; 0 
		AND UPPER(CR_TYPE) = UPPER(DECODE(#CATALOG#,'IO','Import_OBC','IG','Import_GEN','EO','Export_OBC','EG','Export_GEN','GEN','GEN',#CATALOG#))
		AND (TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY') &lt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') &gt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') )
		and nvl(upper(Status),'**') &lt;&gt; 'VOID'
	</select>	
	
	<!-- remove for credit facilty CR and CARR_GROUP is null    -->
	<select id="sqlGetCpctCredit" parameterClass="map" resultClass="java.lang.String" >
	SELECT sum(CR_BAL) 
		FROM CUST_AGENT_CREDIT 
		WHERE 
		UPPER(CUST_NO)=UPPER(#AGENT_CODE#) and CARR_CODE is null  and nvl(upper(Status),'**') &lt;&gt; 'VOID'
		AND UPPER(CR_TYPE) = UPPER(DECODE(#CATALOG#,'IO','Import_OBC','IG','Import_GEN','EO','Export_OBC','EG','Export_GEN','GEN','GEN',#CATALOG#))
		AND (TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY') &lt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') &gt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') )
	</select>
	
	<!-- remove for credit facilty CR AND UPPER(CARR_GROUP)=UPPER(#parentCarr#)   -->
	<select id="sqlGetVirtualCreditParent" parameterClass="map" resultClass="java.lang.Integer" >
	SELECT count(1)
		FROM CUST_AGENT_VIRTUAL_CREDIT 
		WHERE 
		UPPER(CUST_NO)=UPPER(#custNo#)
		AND UPPER(CR_TYPE) = UPPER(DECODE(#catalog#,'IO','Import_OBC','IG','Import_GEN','EO','Export_OBC','EG','Export_GEN','GEN','GEN',#catalog#))
		AND (TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY') &lt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') 
		AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') &gt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') )
		and nvl(upper(Status),'**') != 'VOID'
	</select>
	<select id="sqlGetVirtualCreditCarr" parameterClass="map" resultClass="java.lang.Integer" >
	SELECT count(1)
		FROM CUST_AGENT_VIRTUAL_CREDIT 
		WHERE 
		UPPER(CUST_NO)=UPPER(#custNo#)
		AND UPPER(CR_TYPE) = UPPER(DECODE(#catalog#,'IO','Import_OBC','IG','Import_GEN','EO','Export_OBC','EG','Export_GEN','GEN','GEN',#catalog#))
		and  instr( nvl(UPPER(CARR_CODE),'*'), nvl(UPPER(#carrCode#),'**') ) &gt; 0  
		AND (TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY') &lt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') 
		AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') &gt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') )
		AND nvl(upper(Status),'**') &lt;&gt; 'VOID'
	</select>
	
	<!-- remove for credit facilty CR and CARR_GROUP is null   -->
	<select id="sqlGetVirtualCredit" parameterClass="map" resultClass="java.lang.Integer" >
	SELECT count(1)
		FROM CUST_AGENT_VIRTUAL_CREDIT 
		WHERE 
		UPPER(CUST_NO)=UPPER(#custNo#) and CARR_CODE is null 
		AND UPPER(CR_TYPE) = UPPER(DECODE(#catalog#,'IO','Import_OBC','IG','Import_GEN','EO','Export_OBC','EG','Export_GEN','GEN','GEN',#catalog#))
		AND (TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY') &lt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') 
		AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') &gt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') )
		and nvl(upper(Status),'**') != 'VOID'
	</select>
	
	<select id="sqlGetDMCredit" parameterClass="java.lang.String" resultClass="java.lang.String" >
		SELECT sum(CR_AMT) FROM CUST_AGENT_DM_APP 
		WHERE
		UPPER(CUST_NO)=UPPER(#custNo#)
		AND (TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY') &lt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') &gt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') )
		AND nvl(upper(Status),'**') &lt;&gt; 'VOID'
	</select>
	
	<update id="updateAdjustmentPaymentDtl_Common" parameterClass="cargo.cms.billing.bo.PaymentHeplerChargeBO">
	UPDATE BILL_INV_CRD_DTL 
	SET CR_AMT = NVL(CR_AMT,0)+NVL(#credit#,0),
		CR_DATE = SYSDATE
	WHERE ADJ_NO = #adjNo# AND NVL(CR_TYPE,'*') = DECODE(instr(#crdLvl#,'AGENT_LVL'),1,'*',#crType#) 
	AND CR_LVL = #crdLvl# AND CUST_NO = #custNo# AND NVL(AIRLINE,'*') = NVL(#airline#,'*')
	</update>
	
	<insert id="createAdjustmentPaymentDtl_Common" parameterClass="cargo.cms.billing.bo.PaymentHeplerChargeBO">
	INSERT INTO BILL_INV_CRD_DTL(ADJ_NO,CR_TYPE,CR_LVL,CR_AMT,CUST_NO,AIRLINE,CR_DATE) VALUES (#adjNo#,
	DECODE(instr(#crdLvl#,'AGENT_LVL'),1,null,#crType#),#crdLvl#,#credit#,#custNo#,#airline#,sysdate)
	</insert>
	
	
	<update id="updateAdjustmentPaymentDtl" parameterClass="cargo.cms.billing.bo.AdjNoteDTLBO">
	UPDATE BILL_INV_CRD_DTL 
	SET CR_AMT = NVL(CR_AMT,0)+NVL(#creditAmt#,0),
		CR_DATE = SYSDATE
	WHERE ADJ_NO = #adjNo# AND NVL(CR_TYPE,'*') = DECODE(instr(#creditLvl#,'AGENT_LVL'),1,'*',#creditType#) 
	AND CR_LVL = #creditLvl# AND CUST_NO = #agentCode# AND NVL(AIRLINE,'*') = NVL(#airline#,'*')
	</update>
	
	<insert id="createAdjustmentPaymentDtl" parameterClass="cargo.cms.billing.bo.AdjNoteDTLBO">
	INSERT INTO BILL_INV_CRD_DTL(ADJ_NO,CR_TYPE,CR_LVL,CR_AMT,CUST_NO,AIRLINE,CR_DATE) VALUES (#adjNo#,
	DECODE(instr(#creditLvl#,'AGENT_LVL'),1,null,#creditType#),#creditLvl#,#creditAmt#,#agentCode#,#airline#,sysdate)
	</insert>
	
	<update id="updateCommonAdjustmentPaymentDtl" parameterClass="cargo.cms.billing.bo.PaymentHeplerChargeBO">
	UPDATE BILL_INV_CRD_DTL 
	SET CR_AMT = NVL(CR_AMT,0)+NVL(#credit#,0),
		CR_DATE = SYSDATE
	WHERE ADJ_NO = #adjNo# and adj_doc_line_no = #adjDocLineNo# AND NVL(CR_TYPE,'*') = DECODE(instr(#crdLvl#,'AGENT_LVL'),1,'*',#crType#) 
	AND CR_LVL = #crdLvl# AND CUST_NO = #custNo# AND NVL(AIRLINE,'*') = NVL(#airline#,'*')
	</update>
	
	<insert id="createCommonAdjustmentPaymentDtl" parameterClass="cargo.cms.billing.bo.PaymentHeplerChargeBO">
	INSERT INTO BILL_INV_CRD_DTL(ADJ_NO,adj_doc_line_no,CR_TYPE,CR_LVL,CR_AMT,CUST_NO,AIRLINE,CR_DATE,BALANCE, trans_desc,
	CR_AIRLINE,mast_seq_no,mast_table_name) 
	VALUES (#adjNo#,#adjDocLineNo#,
	DECODE(instr(#crdLvl#,'AGENT_LVL'),1,null,(DECODE(UPPER(#crType#),'GENERAL','GEN','IMPORT GEN','IG','IMPORT OBC','IO','EXPORT GEN','EG','EXPORT OBC','EO',UPPER(#crType#))))
	,#crdLvl#,#credit#,#custNo#,#airline#,sysdate,#balanceCrd#,#description#,#carrList#,#seqNo#,#tableName#)
	</insert>
	
       <update id="updateCommonInvoiceAdjustmentPaymentDtl" parameterClass="cargo.cms.billing.bo.PaymentHeplerChargeBO">
	UPDATE BILL_INV_CRD_DTL 
	SET ACC_ADJ_AMT = NVL(ACC_ADJ_AMT,0)+NVL(#credit#,0),
		CR_DATE = SYSDATE
	WHERE inv_NO = #invNo# and inv_doc_line_no = #invDocLineNo# AND NVL(CR_TYPE,'*') = DECODE(instr(#crdLvl#,'AGENT_LVL'),1,'*',#crType#) 
	AND CR_LVL = #crdLvl# AND CUST_NO = #custNo# AND NVL(AIRLINE,'*') = NVL(#airline#,'*') 
	and mast_seq_no = #seqNo# and mast_table_name = #tableName#
	</update>
	
    <insert id="sqlCreateSrfInvDtl" parameterClass="cargo.cms.billing.bo.InvoiceBO">
	INSERT INTO bill_inv_dtl
        (
          inv_no,
          doc_line_no,
          chrg_tr_no,
          itm_code,
          itm_code_sfx,
          rev_ind,
          charge_amt,
          cr_user_id,
          cr_date,
          lm_user_id,
          lm_date,
          cash_ind
        )
        SELECT 
          #invoiceNo#,
          ROWNUM,
          tr_no,
          itm_code,
          itm_code_sfx,
          rev_ind,
          chrg_amt,
          #userID#,
          SYSDATE,
          #userID#,
          SYSDATE,
          cash_ind FROM BILL_CHARGE_DTl WHERE SRF_NO = #srfNo#
        
	</insert>		
	
	<!-- Adjustment Details Start for Credit facility  CR Start -->
	<select id="sqlGet_BILL_ADJ_NO_CRD_DTL_LIST" parameterClass="java.lang.String" resultClass="cargo.cms.billing.bo.PaymentHeplerChargeBO" >
		SELECT ADJ_NO adjNo, ADJ_DOC_LINE_NO adjDocLineNo, CRDDTL.CUST_NO custNo , CRDDTL.CR_LVL crdLvl,
			DECODE(CRDDTL.CR_TYPE,'IO','Import_OBC','IG','Import_GEN','EO','Export_OBC','EG','Export_GEN','GEN','GEN',NULL) crType, 
			CRDDTL.CR_TYPE crTypeOne,
	    	CRDDTL.CR_AMT  credit , CRDDTL.AIRLINE airline, CRDDTL.SEQ_NO crdDtlSeqNo,
			CR_AIRLINE carrList, MAST_TABLE_NAME tableName, MAST_SEQ_NO seqNo
	    	FROM BILL_INV_CRD_DTL CRDDTL WHERE CRDDTL.adj_NO =#adjNo#
	</select>
	
	<select id="sqlGet_BILL_INV_CRD_DTL_AIRLINE" parameterClass="cargo.cms.billing.bo.PaymentHeplerChargeBO" resultClass="java.lang.String" >
		SELECT (SELECT CARR_CODE FROM AWB WHERE AWB_NO = BCD.AWB_NO AND AWB_DATE =  BCD.AWB_DATE) as C1.V_AIRL
        FROM BILL_ADJ_HD ADJ
        JOIN BILL_INV_DTL A ON A.INV_NO = ADJ.INV_NO
        LEFT JOIN BILL_CHARGE_DTL BCD ON A.CHRG_TR_NO = BCD.TR_NO
        WHERE ADJ.ADJ_NO = #adjNo# and A.ADJ_DOC_LINE_NO = #adjDocLineNo# and ROWNUM=1
	</select>
	
	<select id="sqlGet_BILL_ADJ_UserId" parameterClass="java.lang.String" resultClass="java.lang.String" >
		SELECT  LM_USER_ID as V_USER_ID FROM BILL_ADJ_HD  WHERE INV_NO = P_ADJ_NO
	</select>
	
	<select id="sqlCheck_CUST_AGENT_AIRL_CREDIT_CR_BAL" parameterClass="map" resultClass="java.lang.String" >
		SELECT  nvl(CR_AMT,0) -  nvl(CR_BAL,0)  as BAL_AMT FROM CUST_AGENT_AIRL_CREDIT  WHERE seq_no = #MAST_SEQ_NO# and CUST_NO = #CUST_NO#
	</select>
						
	<select id="sqlCheck_cust_agent_level_crd_CR_BAL" parameterClass="map" resultClass="java.lang.String" >
		SELECT  nvl(CR_AMT,0) -  nvl(CR_BAL,0)  as BAL_AMT FROM cust_agent_level_crd  WHERE seq_no = #MAST_SEQ_NO# and CUST_NO = #CUST_NO#
	</select>
						
	<select id="sqlCheck_CUST_AGENT_CREDIT_CR_BAL" parameterClass="map" resultClass="java.lang.String" >
		SELECT  nvl(CR_AMT,0) -  nvl(CR_BAL,0)  as BAL_AMT FROM CUST_AGENT_CREDIT  WHERE seq_no = #MAST_SEQ_NO# and CUST_NO = #CUST_NO#
	</select>
	
	<!-- Adjustment Details Start for Credit facility  CR End -->
	<update id="sqlSendServiceRecordToFin" parameterClass="cargo.cms.billing.bo.ServiceChargesBO">
	UPDATE BILL_SVC_RECORD 
	SET FIN_SEND_YN = 'Y',
	SEND_TO_FIN_DATE = sysdate
	WHERE SVC_ID = #srvcId#
	</update>	
	
	<insert id="createServiceRecordCharges" parameterClass="cargo.cms.billing.bo.ServiceChargesBO" >
		INSERT INTO BILL_CHARGE_DTL
		(TR_NO,
		AWB_DATE, 
		AWB_NO,  
		CALC_CHRG ,
		BALANCE_AMT,
		CASH_IND,
		CHRG_AMT,   
		CUST_NO , 
		CUST_NAME , 
		ITM_CODE, 
		ITM_CODE_SFX, 
		ITM_DESC, 
		MAX_CHRG_IND, 
		MIN_CHRG_IND, 
		NET_AMT ,
		QTY, 
		REV_IND, 
		SRF_NO,  
		STD_IND,  
		UNIT_PRICE,
		UOM, 
		UPD_DESC_IND, 
		UPD_RATE_IND, 
		WAVR_IND,
		WAVR_AMT,
		LM_USER_ID, 
		CR_USER_ID, 
		STATUS ,
		CURR_CODE, 
		LM_DATE, 
		CR_DATE,
		PAID_AMT_DM,
		ULD_KEY,
		PAID_AMT_CREDIT,
		WAVR_DATE,
		WAVR_USER_ID)
		VALUES
		(#chrgTrNo#,
		to_date(#awbDate#,'DDMONYY'),
		#awbNo#,
		#chrgAmt#,
		0,
		'N',
		#chrgAmt#,
		#partyCode#,
		#partyName#,
		#itemCode#,
		#itemCodeSuffx#,
		#itemDesc#,
		'N',
		'N',
		#chrgAmt#,
		#qty#,
		'G',
		null,
		'N',
		NVL(pkg_calculate.get_unit_price(#itemCode#,#itemCodeSuffx#,#qty#),0),
		#uom#,
		'N',
		'N',
		'N',
		0,
		#userID#,
		#userID#,
		'PAID',
		'HKD',
		sysdate,
		sysdate,
		0,
		null,
		#chrgAmt#,
		null,
		null)
	</insert>
	
	
	<insert id="createServiceRecordInvoiceHD" parameterClass="cargo.cms.billing.bo.ServiceChargesBO">
		INSERT INTO BILL_INV_HD (
			INV_NO,
			INV_DATE,				
			INV_TYPE,          
			CUST_NO,
			CUST_NAME,        
			CHARGE_AMT,
			CR_USER_ID,
			CR_DATE,            
			LM_USER_ID,         
			LM_DATE) 
		VALUES ( 
            #invoiceNo#,
            sysdate,
            'CRD',
            #partyCode#,
			#partyName#,
            #chrgAmt#,
            #userID#,
            sysdate,
            #userID#,
            sysdate)
	</insert>
	
	<insert id="createServiceRecordInvoiceDTL" parameterClass="cargo.cms.billing.bo.ServiceChargesBO">
		INSERT INTO BILL_INV_DTL (
			INV_NO,
			DOC_LINE_NO,				
			CHRG_TR_NO,				
			ITM_CODE,				
			ITM_CODE_SFX,        
			REV_IND,          
			CASH_IND,          
			CHARGE_AMT,
			CR_USER_ID,
			CR_DATE,            
			LM_USER_ID,         
			LM_DATE) 
		SELECT 
			#invoiceNo#,
			1,
			TR_NO,
			ITM_CODE,
			ITM_CODE_SFX,
			REV_IND,
			CASH_IND,
			CHRG_AMT,
			CR_USER_ID,
			SYSDATE,
			LM_USER_ID,
			SYSDATE 
			FROM 
			BILL_CHARGE_DTl
			WHERE TR_NO = #chrgTrNo#
	</insert>
	
	
	<update id="updateServiceInvoicePaymentDtl" parameterClass="cargo.cms.billing.bo.ServiceChargesBO">
	UPDATE BILL_INV_CRD_DTL 
	SET CR_AMT = NVL(CR_AMT,0)+NVL(#chrgAmt#,0),
	CR_DATE = SYSDATE
	WHERE INV_NO = #invoiceNo# AND NVL(CR_TYPE,'*') = NULL AND CR_LVL = 'AGENT_LVL' AND CUST_NO = #partyCode# AND NVL(AIRLINE,'*') = null
	</update>
	
	<insert id="createServiceInvoicePaymentDtl" parameterClass="cargo.cms.billing.bo.ServiceChargesBO">
	INSERT INTO BILL_INV_CRD_DTL(INV_NO,CR_TYPE,CR_LVL,CR_AMT,CUST_NO,AIRLINE,CR_DATE) VALUES (#invoiceNo#,null,'AGENT_LVL',#chrgAmt#,#partyCode#,null,SYSDATE)
	</insert>
	
	<!-- remove for credit facilty 
	
			(( CARR_CODE = #airline# OR CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE = #airlineGroup#))
	        OR  
            ( #airline# = CARR_CODE OR #airline# IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE  = CARR_GROUP)))   -->
	<select id="sqlCheckAirlineLevelCreditExists" parameterClass="cargo.cms.customer.bo.MaintainCreditFecilityBO" resultClass="java.lang.Integer" >
		   SELECT COUNT(*) 
		FROM
			CUST_AGENT_AIRL_CREDIT
		WHERE
			UPPER(CUST_NO) = UPPER(#customerNo#)
			AND instr( nvl(UPPER(CARR_CODE),'*'), nvl(UPPER(#airline#),'**') ) &gt; 0  
			AND	(TO_DATE(CR_EFF_DATE_FROM,'DD-MON-YY') BETWEEN TO_DATE(#agtCrdEffFrom#, 'DD-MON-YY')  AND TO_DATE(#agtCrdEffTo#, 'DD-MON-YY')	
			OR TO_DATE(CR_EFF_DATE_TO,'DD-MON-YY') BETWEEN TO_DATE(#agtCrdEffFrom#, 'DD-MON-YY')  AND TO_DATE(#agtCrdEffTo#,'DD-MON-YY')
            OR TO_DATE(#agtCrdEffFrom#,'DD-MON-YY') BETWEEN TO_DATE(CR_EFF_DATE_FROM, 'DD-MON-YY')  AND TO_DATE(CR_EFF_DATE_TO, 'DD-MON-YY')
            OR TO_DATE(#agtCrdEffTo#,'DD-MON-YY') BETWEEN TO_DATE(CR_EFF_DATE_FROM, 'DD-MON-YY')  AND TO_DATE(CR_EFF_DATE_TO, 'DD-MON-YY'))		
            AND nvl(upper(Status),'**') &lt;&gt; 'VOID'	
   </select>
   
   <!-- remove for credit facilty 
	
			(( CARR_CODE = #airline# OR CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE = #airlineGroup#))
	        OR  
            ( #airline# = CARR_CODE OR #airline# IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE  = CARR_GROUP)))  -->
   <select id="sqlCheckCpctLevelCreditExists" parameterClass="cargo.cms.customer.bo.MaintainCreditFecilityBO" resultClass="java.lang.Integer" >
		 SELECT COUNT(*) 
		FROM
			CUST_AGENT_CREDIT
		WHERE
			UPPER(CUST_NO) = UPPER(#customerNo#)
			and  instr( nvl(UPPER(CARR_CODE),'*'), nvl(UPPER(#airline#),'**') ) &gt; 0 
			AND	(TO_DATE(CR_EFF_DATE_FROM,'DD-MON-YY') BETWEEN TO_DATE(#agtCrdEffFrom#, 'DD-MON-YY')  AND TO_DATE(#agtCrdEffTo#, 'DD-MON-YY')	
			OR TO_DATE(CR_EFF_DATE_TO,'DD-MON-YY') BETWEEN TO_DATE(#agtCrdEffFrom#, 'DD-MON-YY')  AND TO_DATE(#agtCrdEffTo#, 'DD-MON-YY')
            OR TO_DATE(#agtCrdEffFrom#,'DD-MON-YY') BETWEEN TO_DATE(CR_EFF_DATE_FROM, 'DD-MON-YY')  AND TO_DATE(CR_EFF_DATE_TO, 'DD-MON-YY')
            OR TO_DATE(#agtCrdEffTo#,'DD-MON-YY') BETWEEN TO_DATE(CR_EFF_DATE_FROM, 'DD-MON-YY')  AND TO_DATE(CR_EFF_DATE_TO, 'DD-MON-YY'))		
            and nvl(upper(Status),'**') &lt;&gt; 'VOID'	
    </select>
    
    <!-- remove for credit facilty  AND nvl(UPPER(CARR_GROUP),'*') = nvl(UPPER(#airlineGroup#),'*')  -->
    <select id="sqlCheckOverlappingWithAgentLvlCredit" parameterClass="cargo.cms.customer.bo.MaintainCreditFecilityBO" resultClass="java.lang.Integer" >
		 SELECT COUNT(*) 
		FROM
			CUST_AGENT_LEVEL_CRD
		WHERE UPPER(CUST_NO) = UPPER(#customerNo#)
			AND instr( nvl(UPPER(CARR_CODE),'**'), nvl(UPPER(#airline#),'**') ) &gt; 0 
			AND	(TO_DATE(CR_EFF_DATE_FROM,'DD-MON-YY') BETWEEN TO_DATE(#creditEffDateFrom#, 'DD-MON-YY')  AND TO_DATE(#creditEffDateTo#, 'DD-MON-YY')	
			OR TO_DATE(CR_EFF_DATE_TO,'DD-MON-YY') BETWEEN TO_DATE(#creditEffDateFrom#, 'DD-MON-YY')  AND TO_DATE(#creditEffDateTo#, 'DD-MON-YY')
            OR TO_DATE(#creditEffDateFrom#,'DD-MON-YY') BETWEEN TO_DATE(CR_EFF_DATE_FROM, 'DD-MON-YY')  AND TO_DATE(CR_EFF_DATE_TO, 'DD-MON-YY')
            OR TO_DATE(#creditEffDateTo#,'DD-MON-YY') BETWEEN TO_DATE(CR_EFF_DATE_FROM, 'DD-MON-YY')  AND TO_DATE(CR_EFF_DATE_TO, 'DD-MON-YY'))		
            AND nvl(upper(Status),'**') &lt;&gt; 'VOID'	
    </select>
    
    <!-- remove for credit facilty  AND nvl(UPPER(CARR_GROUP),'*') = nvl(UPPER(#airlineGroup#),'*')  -->
    <select id="sqlCheckOverlappingWithCpctGenCredit" parameterClass="cargo.cms.customer.bo.MaintainCreditFecilityBO" resultClass="java.lang.Integer" >
		 SELECT COUNT(*) 
		FROM
			CUST_AGENT_CREDIT
		WHERE
			UPPER(CR_TYPE) = UPPER('GEN')
			AND UPPER(CUST_NO) = UPPER(#customerNo#)
			and  nvl(UPPER(CARR_CODE),'*') =  nvl(UPPER(#airline#),'*') 
			AND	(TO_DATE(CR_EFF_DATE_FROM,'DD-MON-YY') BETWEEN TO_DATE(#creditEffDateFrom#, 'DD-MON-YY')  AND TO_DATE(#creditEffDateTo#, 'DD-MON-YY')	
			OR TO_DATE(CR_EFF_DATE_TO,'DD-MON-YY') BETWEEN TO_DATE(#creditEffDateFrom#, 'DD-MON-YY')  AND TO_DATE(#creditEffDateTo#, 'DD-MON-YY')
            OR TO_DATE(#creditEffDateFrom#,'DD-MON-YY') BETWEEN TO_DATE(CR_EFF_DATE_FROM, 'DD-MON-YY')  AND TO_DATE(CR_EFF_DATE_TO, 'DD-MON-YY')
            OR TO_DATE(#creditEffDateTo#,'DD-MON-YY') BETWEEN TO_DATE(CR_EFF_DATE_FROM, 'DD-MON-YY')  AND TO_DATE(CR_EFF_DATE_TO, 'DD-MON-YY'))		
            and nvl(upper(Status),'**') &lt;&gt; 'VOID'	
    </select>
    
    <!-- remove for credit facilty  AND nvl(UPPER(CARR_GROUP),'*') = nvl(UPPER(#airlineGroup#),'*')  -->
     <select id="sqlCheckOverlappingWithCpctCatalogCredit" parameterClass="cargo.cms.customer.bo.MaintainCreditFecilityBO" resultClass="java.lang.Integer" >
		<![CDATA[ SELECT COUNT(*) 
		FROM
			CUST_AGENT_CREDIT
		WHERE
			UPPER(CR_TYPE) <> UPPER('GEN')
			AND UPPER(CUST_NO) = UPPER(#customerNo#)
			and  nvl(UPPER(CARR_CODE),'*') = nvl(UPPER(#airline#),'**')
			AND	(TO_DATE(CR_EFF_DATE_FROM,'DD-MON-YY') BETWEEN TO_DATE(#creditEffDateFrom#, 'DD-MON-YY')  AND TO_DATE(#creditEffDateTo#, 'DD-MON-YY')	
			OR TO_DATE(CR_EFF_DATE_TO,'DD-MON-YY') BETWEEN TO_DATE(#creditEffDateFrom#, 'DD-MON-YY')  AND TO_DATE(#creditEffDateTo#, 'DD-MON-YY')
            OR TO_DATE(#creditEffDateFrom#,'DD-MON-YY') BETWEEN TO_DATE(CR_EFF_DATE_FROM, 'DD-MON-YY')  AND TO_DATE(CR_EFF_DATE_TO, 'DD-MON-YY')
            OR TO_DATE(#creditEffDateTo#,'DD-MON-YY') BETWEEN TO_DATE(CR_EFF_DATE_FROM, 'DD-MON-YY')  AND TO_DATE(CR_EFF_DATE_TO, 'DD-MON-YY'))
            and nvl(upper(Status),'**') <> 'VOID'
            ]]>		
    </select>
    
    <!-- remove for credit facilty  AND nvl(UPPER(CARR_GROUP),'*') = nvl(UPPER(#airlineGroup#),'*')  -->
    <select id="sqlCheckOverlappingWithAirlineGenCredit" parameterClass="cargo.cms.customer.bo.MaintainCreditFecilityBO" resultClass="java.lang.Integer" >
       SELECT COUNT(*) 
		FROM
			CUST_AGENT_AIRL_CREDIT
		WHERE
				UPPER(CR_TYPE) = UPPER('GEN')
			AND UPPER(CUST_NO) = UPPER(#customerNo#)
			AND nvl(UPPER(CARR_CODE),'*') =  nvl(UPPER(#airline#),'*') 
			AND	(TO_DATE(CR_EFF_DATE_FROM,'DD-MON-YY') BETWEEN TO_DATE(#creditEffDateFrom#, 'DD-MON-YY')  AND TO_DATE(#creditEffDateTo#, 'DD-MON-YY')	
			OR TO_DATE(CR_EFF_DATE_TO,'DD-MON-YY') BETWEEN TO_DATE(#creditEffDateFrom#, 'DD-MON-YY')  AND TO_DATE(#creditEffDateTo#,'DD-MON-YY')
            OR TO_DATE(#creditEffDateFrom#,'DD-MON-YY') BETWEEN TO_DATE(CR_EFF_DATE_FROM, 'DD-MON-YY')  AND TO_DATE(CR_EFF_DATE_TO, 'DD-MON-YY')
            OR TO_DATE(#creditEffDateTo#,'DD-MON-YY') BETWEEN TO_DATE(CR_EFF_DATE_FROM, 'DD-MON-YY')  AND TO_DATE(CR_EFF_DATE_TO, 'DD-MON-YY'))
            AND nvl(upper(Status),'**') &lt;&gt; 'VOID'
	 </select>
	 
	<!-- remove for credit facilty  AND nvl(UPPER(CARR_GROUP),'*') = nvl(UPPER(#airlineGroup#),'*') -->
    <select id="sqlCheckOverlappingWithAirlineCatalogCredit" parameterClass="cargo.cms.customer.bo.MaintainCreditFecilityBO" resultClass="java.lang.Integer" >
      <![CDATA[ SELECT COUNT(*) 
		FROM
			CUST_AGENT_AIRL_CREDIT
		WHERE
				UPPER(CR_TYPE) <> UPPER('GEN')
			AND UPPER(CUST_NO) = UPPER(#customerNo#)
			AND nvl(UPPER(CARR_CODE),'*') = nvl(UPPER(#airline#),'*') 
			AND	(TO_DATE(CR_EFF_DATE_FROM,'DD-MON-YY') BETWEEN TO_DATE(#creditEffDateFrom#, 'DD-MON-YY')  AND TO_DATE(#creditEffDateTo#, 'DD-MON-YY')	
			OR TO_DATE(CR_EFF_DATE_TO,'DD-MON-YY') BETWEEN TO_DATE(#creditEffDateFrom#, 'DD-MON-YY')  AND TO_DATE(#creditEffDateTo#,'DD-MON-YY')
            OR TO_DATE(#creditEffDateFrom#,'DD-MON-YY') BETWEEN TO_DATE(CR_EFF_DATE_FROM, 'DD-MON-YY')  AND TO_DATE(CR_EFF_DATE_TO, 'DD-MON-YY')
            OR TO_DATE(#creditEffDateTo#,'DD-MON-YY') BETWEEN TO_DATE(CR_EFF_DATE_FROM, 'DD-MON-YY')  AND TO_DATE(CR_EFF_DATE_TO, 'DD-MON-YY'))
            AND nvl(upper(Status),'**') <> 'VOID'
            ]]>
	 </select>
	 
	 <!-- remove for credit facilty  AND nvl(UPPER(CARR_GROUP),'*') = nvl(UPPER(#airlineGroup#),'*') -->
	 <select id="sqlCheckOverlappingWithVirtualGenCredit" parameterClass="cargo.cms.customer.bo.MaintainCreditFecilityBO" resultClass="java.lang.Integer" >
		 SELECT COUNT(*) 
		FROM
			CUST_AGENT_VIRTUAL_CREDIT
		WHERE
			UPPER(CR_TYPE) = UPPER('GEN')
			AND UPPER(CUST_NO) = UPPER(#customerNo#)
			AND instr( nvl(UPPER(CARR_CODE),'*'), nvl(UPPER(#airline#),'**') ) &gt; 0  
			AND	(TO_DATE(CR_EFF_DATE_FROM,'DD-MON-YY') BETWEEN TO_DATE(#creditEffDateFrom#, 'DD-MON-YY')  AND TO_DATE(#creditEffDateTo#, 'DD-MON-YY')	
			OR TO_DATE(CR_EFF_DATE_TO,'DD-MON-YY') BETWEEN TO_DATE(#creditEffDateFrom#, 'DD-MON-YY')  AND TO_DATE(#creditEffDateTo#, 'DD-MON-YY')
            OR TO_DATE(#creditEffDateFrom#,'DD-MON-YY') BETWEEN TO_DATE(CR_EFF_DATE_FROM, 'DD-MON-YY')  AND TO_DATE(CR_EFF_DATE_TO, 'DD-MON-YY')
            OR TO_DATE(#creditEffDateTo#,'DD-MON-YY') BETWEEN TO_DATE(CR_EFF_DATE_FROM, 'DD-MON-YY')  AND TO_DATE(CR_EFF_DATE_TO, 'DD-MON-YY'))		
            AND nvl(upper(Status),'**') &lt;&gt; 'VOID'		
    </select>
    
    <!-- remove for credit facilty AND nvl(UPPER(CARR_GROUP),'*') = nvl(UPPER(#airlineGroup#),'*') -->
     <select id="sqlCheckOverlappingWithVirtualCatalogCredit" parameterClass="cargo.cms.customer.bo.MaintainCreditFecilityBO" resultClass="java.lang.Integer" >
		<![CDATA[ SELECT COUNT(*) 
		FROM
			CUST_AGENT_VIRTUAL_CREDIT
		WHERE
			UPPER(CR_TYPE) <> UPPER('GEN')
			AND UPPER(CUST_NO) = UPPER(#customerNo#)
			AND instr( nvl(UPPER(CARR_CODE),'*'), nvl(UPPER(#airline#),'*') ) > 0 
			AND	(TO_DATE(CR_EFF_DATE_FROM,'DD-MON-YY') BETWEEN TO_DATE(#creditEffDateFrom#, 'DD-MON-YY')  AND TO_DATE(#creditEffDateTo#, 'DD-MON-YY')	
			OR TO_DATE(CR_EFF_DATE_TO,'DD-MON-YY') BETWEEN TO_DATE(#creditEffDateFrom#, 'DD-MON-YY')  AND TO_DATE(#creditEffDateTo#, 'DD-MON-YY')
            OR TO_DATE(#creditEffDateFrom#,'DD-MON-YY') BETWEEN TO_DATE(CR_EFF_DATE_FROM, 'DD-MON-YY')  AND TO_DATE(CR_EFF_DATE_TO, 'DD-MON-YY')
            OR TO_DATE(#creditEffDateTo#,'DD-MON-YY') BETWEEN TO_DATE(CR_EFF_DATE_FROM, 'DD-MON-YY')  AND TO_DATE(CR_EFF_DATE_TO, 'DD-MON-YY'))
            AND nvl(upper(Status),'**') <> 'VOID'
            ]]>		
    </select>
	 
	 <select id="checkCpctAgentCreditOvelapping" parameterClass="cargo.cms.customer.bo.MaintainCreditFecilityBO" resultClass="java.lang.Integer" >
      SELECT COUNT(*) 
		FROM
			DUAL
		WHERE (TO_DATE(#cpctCreditFrom#,'DDMONYY') BETWEEN TO_DATE(#agtCreditFrom#, 'DDMONYY')  AND TO_DATE(#agtCreditTo#, 'DDMONYY')	
			OR TO_DATE(#cpctCreditTo#,'DDMONYY') BETWEEN TO_DATE(#agtCreditFrom#, 'DDMONYY')  AND TO_DATE(#agtCreditTo#,'DDMONYY')
            OR TO_DATE(#agtCreditFrom#,'DDMONYY') BETWEEN TO_DATE(#cpctCreditFrom#, 'DDMONYY')  AND TO_DATE(#cpctCreditTo#, 'DDMONYY')
            OR TO_DATE(#agtCreditTo#,'DDMONYY') BETWEEN TO_DATE(#cpctCreditFrom#, 'DDMONYY')  AND TO_DATE(#cpctCreditTo#, 'DDMONYY'))
            
	 </select>
	 
	 
	  <select id="checkOverlappingdates" parameterClass="cargo.cms.customer.bo.MaintainCreditFecilityBO" resultClass="java.lang.Integer" >
      SELECT COUNT(*) 
		FROM
			DUAL
		WHERE (TO_DATE(#overlapFrom1#,'DDMONYY') BETWEEN TO_DATE(#overlapFrom2#, 'DDMONYY')  AND TO_DATE(#overlapTo2#, 'DDMONYY')	
			OR TO_DATE(#overlapTo1#,'DDMONYY') BETWEEN TO_DATE(#overlapFrom2#, 'DDMONYY')  AND TO_DATE(#overlapTo2#,'DDMONYY')
            OR TO_DATE(#overlapFrom2#,'DDMONYY') BETWEEN TO_DATE(#overlapFrom1#, 'DDMONYY')  AND TO_DATE(#overlapTo1#, 'DDMONYY')
            OR TO_DATE(#overlapTo2#,'DDMONYY') BETWEEN TO_DATE(#overlapFrom1#, 'DDMONYY')  AND TO_DATE(#overlapTo1#, 'DDMONYY'))
            
	 </select>
	 
	 <!-- remove for credit facilty CR -->
	 <!--<select id="checkOverlappingdatesAirlineAgent" parameterClass="cargo.cms.customer.bo.MaintainCreditFecilityBO" resultClass="java.lang.Integer" >
      SELECT COUNT(*) 
		FROM
			DUAL
		WHERE 
		
		(( #airAL# = #agtAL#
                       OR  #airAL# IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE  = #agtALGrp#))
    
         OR
    
         ( #agtAL# = #airAL#
                       OR  #agtAL# IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE  = #airALGrp#)))
        AND
		
		(TO_DATE(#overlapFrom1#,'DDMONYY') BETWEEN TO_DATE(#overlapFrom2#, 'DDMONYY')  AND TO_DATE(#overlapTo2#, 'DDMONYY')	
			OR TO_DATE(#overlapTo1#,'DDMONYY') BETWEEN TO_DATE(#overlapFrom2#, 'DDMONYY')  AND TO_DATE(#overlapTo2#,'DDMONYY')
            OR TO_DATE(#overlapFrom2#,'DDMONYY') BETWEEN TO_DATE(#overlapFrom1#, 'DDMONYY')  AND TO_DATE(#overlapTo1#, 'DDMONYY')
            OR TO_DATE(#overlapTo2#,'DDMONYY') BETWEEN TO_DATE(#overlapFrom1#, 'DDMONYY')  AND TO_DATE(#overlapTo1#, 'DDMONYY'))
            
	 </select>
	  
	  --><select id="sqlGetAgentCodeForFinCode" parameterClass="java.lang.String" resultClass="java.lang.String" >
			 SELECT CODE FROM CUST_COMPANY WHERE FIN_CODE = #finCode#
	  </select>		
	  
	  
	  <!-- remove for credit facilty AND nvl(UPPER(CARR_GROUP),'*') = nvl(UPPER(#airlineGrp#),'*') -->
	<select id="checkIsExceedingCpctCreditLimit" parameterClass="cargo.cms.billing.bo.CreditUpdateBO" resultClass="java.lang.Integer" >
			<![CDATA[
			SELECT COUNT(1) FROM  CUST_AGENT_CREDIT 
           WHERE  NVL(CR_BAL,0)+NVL(#amount#,0) > NVL(CR_AMT,0)
           	AND CUST_NO = #agentCode# AND nvl(upper(SECURE_YN),'N') = nvl(upper(#secureYn#),'N')
           	AND UPPER(CR_TYPE) = UPPER(DECODE(UPPER(#creditType#),'GENERAL','GEN','IMPORT GEN','Import_GEN','IMPORT OBC','Import_OBC','EXPORT GEN','Export_GEN','EXPORT OBC','Export_OBC'))
           	AND (TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY') <= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') 
            AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') >= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') )
            AND nvl(upper(Status),'**') <> 'VOID'
            ]]>
           	<isNotEmpty property="airline">
           		AND nvl(UPPER(CARR_CODE),'*') =  nvl(UPPER(#airline#),'**') 
           	</isNotEmpty>          	
           	<isEmpty property="airline">
           		AND CARR_CODE is null 
           	</isEmpty>           	
            
	  </select>			
	  
	  <select id="checkIsExceedingCpctCreditLimit_getSeqNo" parameterClass="cargo.cms.billing.bo.CreditUpdateBO" resultClass="java.lang.String" >
			<![CDATA[
			SELECT max(seq_no) FROM  CUST_AGENT_CREDIT 
           	WHERE CUST_NO = #agentCode# AND nvl(upper(SECURE_YN),'N') = nvl(upper(#secureYn#),'N')
           	AND UPPER(CR_TYPE) = UPPER(DECODE(UPPER(#creditType#),'GENERAL','GEN','IMPORT GEN','Import_GEN','IMPORT OBC','Import_OBC','EXPORT GEN','Export_GEN','EXPORT OBC','Export_OBC'))
           	AND (TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY') <= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') 
            AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') >= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') )
            AND nvl(upper(Status),'**') <> 'VOID'
           	]]>
           	<isNotEmpty property="airline">
           		AND nvl(UPPER(CARR_CODE),'*') =  nvl(UPPER(#airline#),'**') 
           	</isNotEmpty>          	
           	<isEmpty property="airline">
           		AND CARR_CODE is null 
           	</isEmpty>        	
	  </select>	
	  
	  <!-- remove for credit facilty  AND nvl(UPPER(CARR_GROUP),'*') = nvl(UPPER(#airlineGrp#),'*') -->
	   <update id="sqlUpdateCpctCreditBalance" parameterClass="cargo.cms.billing.bo.CreditUpdateBO">
			<![CDATA[
			UPDATE CUST_AGENT_CREDIT 
           	SET CR_BAL = NVL(CR_BAL,0)+NVL(#amount#,0), LM_DATE = SYSDATE, LM_USER_ID = #userID#
           	WHERE CUST_NO = #agentCode# and seq_no = #seqNo# AND nvl(upper(SECURE_YN),'N') = nvl(upper(#secureYn#),'N')
           	AND UPPER(CR_TYPE) = UPPER(DECODE(UPPER(#creditType#),'GENERAL','GEN','IMPORT GEN','Import_GEN','IMPORT OBC','Import_OBC','EXPORT GEN','Export_GEN','EXPORT OBC','Export_OBC'))
           	AND (TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY') <= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') 
            AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') >= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') )
            AND nvl(upper(Status),'**') <> 'VOID'
            ]]>
           	<isNotEmpty property="airline">
           		AND nvl(UPPER(CARR_CODE),'*') =  nvl(UPPER(#airline#),'**') 
           	</isNotEmpty>   
           	<isEmpty property="airline">
           		AND CARR_CODE is null 
           	</isEmpty>
	  </update>
	  
	  <!-- remove for credit facilty  AND nvl(UPPER(CARR_GROUP),'*') = nvl(UPPER(#airlineGrp#),'*') -->
	 <select id="sqlGetCpctCreditBalance" parameterClass="cargo.cms.billing.bo.CreditUpdateBO" resultClass="java.lang.String" >
			<![CDATA[
			SELECT NVL(CR_BAL,0)+NVL(#amount#,0) FROM  CUST_AGENT_CREDIT 
           WHERE  CUST_NO = #agentCode#  and seq_no = #seqNo# AND nvl(upper(SECURE_YN),'N') = nvl(upper(#secureYn#),'N')
           	AND UPPER(CR_TYPE) = UPPER(DECODE(UPPER(#creditType#),'GENERAL','GEN','IMPORT GEN','Import_GEN','IMPORT OBC','Import_OBC','EXPORT GEN','Export_GEN','EXPORT OBC','Export_OBC'))
           	AND (TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY') <= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') 
            AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') >= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') )
            AND nvl(upper(Status),'**') <> 'VOID'	
            ]]>
            <isNotEmpty property="airline">
           		AND nvl(UPPER(CARR_CODE),'*') =  nvl(UPPER(#airline#),'**') 
           	</isNotEmpty> 
           	<isEmpty property="airline">
           		AND CARR_CODE is null 
           	</isEmpty>
	  </select>
	  
	  <!-- remove for credit facilty  AND nvl(UPPER(CARR_GROUP),'*') = nvl(UPPER(#airlineGrp#),'*') -->
	   <select id="checkIsExceedingAirlineCreditLimit" parameterClass="cargo.cms.billing.bo.CreditUpdateBO" resultClass="java.lang.Integer" >
			<![CDATA[ 
			SELECT COUNT(1) FROM  CUST_AGENT_AIRL_CREDIT 
			           WHERE NVL(CR_BAL,0)+NVL(#amount#,0) > NVL(CR_AMT,0)
			AND CUST_NO = #agentCode# AND nvl(upper(SECURE_YN),'N') = nvl(upper(#secureYn#),'N')
			AND UPPER(CR_TYPE) = UPPER(DECODE(UPPER(#creditType#),'GENERAL','GEN','IMPORT GEN','Import_GEN','IMPORT OBC','Import_OBC','EXPORT GEN','Export_GEN','EXPORT OBC','Export_OBC'))
			AND (TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY') <= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') 
            AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') >= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') )
            AND nvl(upper(Status),'**') <> 'VOID'
             ]]>
            <isNotEmpty property="airline">
           		AND nvl(UPPER(CARR_CODE),'*') =  nvl(UPPER(#airline#),'**') 
           	</isNotEmpty> 
           	<isEmpty property="airline">
           		AND CARR_CODE is null 
           	</isEmpty>
	  </select>	
	   <select id="checkIsExceedingAirlineCreditLimit_getSeqNo" parameterClass="cargo.cms.billing.bo.CreditUpdateBO" resultClass="java.lang.String" >
			<![CDATA[ 
			SELECT max(seq_no) FROM  CUST_AGENT_AIRL_CREDIT 
			WHERE CUST_NO = #agentCode# AND nvl(upper(SECURE_YN),'N') = nvl(upper(#secureYn#),'N')
           AND UPPER(CR_TYPE) = UPPER(DECODE(UPPER(#creditType#),'GENERAL','GEN','IMPORT GEN','Import_GEN','IMPORT OBC','Import_OBC','EXPORT GEN','Export_GEN','EXPORT OBC','Export_OBC'))
           AND (TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY') <= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') 
            AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') >= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') )
            AND nvl(upper(Status),'**') <> 'VOID'
            ]]>
            <isNotEmpty property="airline">
           		AND nvl(UPPER(CARR_CODE),'*') =  nvl(UPPER(#airline#),'**') 
           	</isNotEmpty> 
           	<isEmpty property="airline">
           		AND CARR_CODE is null 
           	</isEmpty>
	  </select>	
	  
	  <!-- remove for credit facilty  AND nvl(UPPER(CARR_GROUP),'*') = nvl(UPPER(#airlineGrp#),'*') -->
	 <select id="sqlGetAirlineCreditBalance" parameterClass="cargo.cms.billing.bo.CreditUpdateBO" resultClass="java.lang.String" >
			<![CDATA[ 
			SELECT NVL(sum(CR_BAL),0)+NVL(#amount#,0)  FROM  CUST_AGENT_AIRL_CREDIT 
			WHERE  CUST_NO = #agentCode# and seq_no = #seqNo# AND nvl(upper(SECURE_YN),'N') = nvl(upper(#secureYn#),'N')
           AND UPPER(CR_TYPE) = UPPER(DECODE(UPPER(#creditType#),'GENERAL','GEN','IMPORT GEN','Import_GEN','IMPORT OBC','Import_OBC','EXPORT GEN','Export_GEN','EXPORT OBC','Export_OBC'))
           AND (TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY') <= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') 
            AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') >= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') )
            AND nvl(upper(Status),'**') <> 'VOID'
            ]]>
            <isNotEmpty property="airline">
           		AND nvl(UPPER(CARR_CODE),'*') =  nvl(UPPER(#airline#),'**') 
           	</isNotEmpty> 
           	<isEmpty property="airline">
           		AND CARR_CODE is null 
           	</isEmpty>
	  </select>		
	  
	  <!-- remove for credit facilty   AND nvl(UPPER(CARR_GROUP),'*') = nvl(UPPER(#airlineGrp#),'*') -->
	  <update id="sqlUpdateAirlineCreditBalance" parameterClass="cargo.cms.billing.bo.CreditUpdateBO">
			<![CDATA[ UPDATE CUST_AGENT_AIRL_CREDIT 
			           SET CR_BAL = NVL(CR_BAL,0)+NVL(#amount#,0), LM_DATE = SYSDATE, LM_USER_ID = #userID#
           WHERE CUST_NO = #agentCode# and seq_no = #seqNo# AND nvl(upper(SECURE_YN),'N') = nvl(upper(#secureYn#),'N')
           AND UPPER(CR_TYPE) = UPPER(DECODE(UPPER(#creditType#),'GENERAL','GEN','IMPORT GEN','Import_GEN','IMPORT OBC','Import_OBC','EXPORT GEN','Export_GEN','EXPORT OBC','Export_OBC'))
           AND (TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY') <= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') 
            AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') >= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') )
			AND nvl(upper(Status),'**') <> 'VOID'
            ]]>
            <isNotEmpty property="airline">
           		AND nvl(UPPER(CARR_CODE),'*') =  nvl(UPPER(#airline#),'**') 
           	</isNotEmpty> 
           	<isEmpty property="airline">
           		AND CARR_CODE is null 
           	</isEmpty>
	  </update>
	  
	  <!-- remove for credit facilty   AND nvl(UPPER(CARR_GROUP),'*') = nvl(UPPER(#airlineGrp#),'*') -->
	  <select id="checkIsExceedingAgentLevelCreditLimit" parameterClass="cargo.cms.billing.bo.CreditUpdateBO" resultClass="java.lang.Integer" >
		<![CDATA[	SELECT COUNT(1) FROM CUST_AGENT_LEVEL_CRD
           WHERE  NVL(CR_BAL,0)+NVL(#amount#,0) > NVL(CR_AMT,0)
           	AND CUST_NO = #agentCode# AND nvl(upper(SECURE_YN),'N') = nvl(upper(#secureYn#),'N')
           AND (TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY') <= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') 
            AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') >= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') )
            AND nvl(upper(Status),'**') <> 'VOID'
            ]]>
            <isNotEmpty property="airline">
           		AND nvl(UPPER(CARR_CODE),'*') =  nvl(UPPER(#airline#),'**') 
           	</isNotEmpty>
           	<isEmpty property="airline">
           		AND CARR_CODE is null 
           	</isEmpty>
	  </select>
	  
	   <select id="checkIsExceedingAgentLevelCreditLimit_getSeqNo" parameterClass="cargo.cms.billing.bo.CreditUpdateBO" resultClass="java.lang.String" >
		<![CDATA[	
			SELECT max(seq_no) FROM CUST_AGENT_LEVEL_CRD
           	WHERE CUST_NO = #agentCode# AND nvl(upper(SECURE_YN),'N') = nvl(upper(#secureYn#),'N')
           	AND (TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY') <= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') 
            AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') >= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') )
            AND nvl(upper(Status),'**') <> 'VOID'
            ]]>
            <isNotEmpty property="airline">
           		AND nvl(UPPER(CARR_CODE),'*') =  nvl(UPPER(#airline#),'**') 
           	</isNotEmpty>
           	<isEmpty property="airline">
           		AND CARR_CODE is null 
           	</isEmpty>
	  </select>
	  
	  <!-- remove for credit facilty  AND nvl(UPPER(CARR_GROUP),'*') = nvl(UPPER(#airlineGrp#),'*') -->
	 <select id="sqlGetAgentLvlCreditBalance" parameterClass="cargo.cms.billing.bo.CreditUpdateBO" resultClass="java.lang.String" >
		<![CDATA[	SELECT NVL(CR_BAL,0)+NVL(#amount#,0)FROM CUST_AGENT_LEVEL_CRD
           WHERE  CUST_NO = #agentCode# and seq_no = #seqNo# AND nvl(upper(SECURE_YN),'N') = nvl(upper(#secureYn#),'N')
           AND (TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY') <= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') 
            AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') >= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') )
            AND nvl(upper(Status),'**') <> 'VOID'
            ]]>
            <isNotEmpty property="airline">
           		AND nvl(UPPER(CARR_CODE),'*') =  nvl(UPPER(#airline#),'**') 
           	</isNotEmpty>
           	<isEmpty property="airline">
           		AND CARR_CODE is null 
           	</isEmpty>
	  </select>
	  
	  <!-- remove for credit facilty  AND nvl(UPPER(CARR_GROUP),'*') = nvl(UPPER(#airlineGrp#),'*') -->
	  <update id="sqlUpdateAgentLvlCreditBalance" parameterClass="cargo.cms.billing.bo.CreditUpdateBO">
		<![CDATA[	UPDATE CUST_AGENT_LEVEL_CRD
           SET CR_BAL = NVL(CR_BAL,0)+NVL(#amount#,0), LM_DATE = SYSDATE, LM_USER_ID = #userID#
           WHERE CUST_NO = #agentCode# and seq_no = #seqNo# AND nvl(upper(SECURE_YN),'N') = nvl(upper(#secureYn#),'N')
           AND (TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY') <= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') 
            AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') >= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') )
            AND nvl(upper(Status),'**') <> 'VOID'
            ]]>
            <isNotEmpty property="airline">
           		AND nvl(UPPER(CARR_CODE),'*') =  nvl(UPPER(#airline#),'**') 
           	</isNotEmpty>
           	<isEmpty property="airline">
           		AND CARR_CODE is null 
           	</isEmpty>
	  </update>
	  
	   <!-- remove for credit facilty  AND nvl(UPPER(CARR_GROUP),'*') = nvl(UPPER(#airlineGrp#),'*') -->
	   <select id="sqlGetAgentLevelCreditLimit" parameterClass="map" resultClass="java.lang.String" >
		SELECT NVL(sum(CR_AMT),0)-NVL(sum(CR_BAL),0) 
		FROM cust_agent_level_crd 
		WHERE 
			UPPER(CUST_NO)=UPPER(#agentCode#) and seq_no = #seqNo# AND nvl(upper(SECURE_YN),'N') = nvl(upper(#secureYn#),'N')
			AND (TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY') 
			&lt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') 
			&gt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') )
			AND nvl(upper(Status),'**') &lt;&gt; 'VOID'
            <isNotEmpty property="airline">
           		AND nvl(UPPER(CARR_CODE),'*') =  nvl(UPPER(#airline#),'**') 
           	</isNotEmpty>
           	<isEmpty property="airline">
           		AND CARR_CODE is null 
           	</isEmpty>
	</select>
	
	 <!-- remove for credit facilty  AND nvl(UPPER(CARR_GROUP),'*') = nvl(UPPER(#airlineGrp#),'*') -->
	<select id="sqlGetCpctCreditLimit" parameterClass="map" resultClass="java.lang.String" >
	SELECT NVL(sum(CR_AMT),0)-NVL(sum(CR_BAL),0) 
		FROM CUST_AGENT_CREDIT 
		WHERE 
		UPPER(CUST_NO)=UPPER(#agentCode#) and seq_no = #seqNo# AND nvl(upper(SECURE_YN),'N') = nvl(upper(#secureYn#),'N')
		AND UPPER(CR_TYPE) = UPPER(DECODE(#creditType#,'IO','Import_OBC','IG','Import_GEN','EO','Export_OBC','EG','Export_GEN','GEN','GEN',#creditType#))
		AND (TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY') &lt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') &gt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') )
		and nvl(upper(CRD.Status),'**') != 'VOID'
		<isNotEmpty property="airline">
         	AND nvl(UPPER(CARR_CODE),'*') =  nvl(UPPER(#airline#),'**') 
        </isNotEmpty>
        <isEmpty property="airline">
         	AND CARR_CODE is null 
         </isEmpty>
	</select>
	
	
	<select id="sqlGetUpdatableCreditAmount" parameterClass="cargo.cms.billing.bo.AdjNoteDTLBO" resultClass="java.lang.String" >
		SELECT SUM(ABS(NVL(CR_AMT,0))) FROM BILL_INV_CRD_DTL 
		WHERE NVL(INV_NO,'*') = NVL(#invoiceNo#,'**') 
		AND NVL(CR_TYPE,'*') = DECODE(INSTR(#creditLvl#,'AGENT_LVL'),1,'*',#creditType#) 
	  	AND CR_LVL = #creditLvl# AND CUST_NO = #agentCode#
	</select>
	<select id="sqlGetUpdatableCreditAmount_adj" parameterClass="cargo.cms.billing.bo.AdjNoteDTLBO" resultClass="java.lang.String" >
		SELECT SUM(ABS(NVL(CR_AMT,0))) FROM BILL_INV_CRD_DTL 
		WHERE NVL(ADJ_NO,'*') = NVL(#adjNo#,'**') 
		AND NVL(CR_TYPE,'*') = DECODE(INSTR(#creditLvl#,'AGENT_LVL'),1,'*',#creditType#) 
	  	AND CR_LVL = #creditLvl# AND CUST_NO = #agentCode#
	</select>
	
	
	<!--  CR Changes :: Ranjith :: Ends -->
	<select id="fetchCreditBalanceCustomerList" parameterClass="cargo.cms.finance.report.bo.CreditBalanceBO" resultClass="cargo.cms.finance.report.bo.CreditBalanceBO">
	SELECT
			CUST.CODE AS customerNo,
			CUST.CODE_DESC AS customerName,
			CUST.FIN_CODE AS finCode,
			to_char(sysdate,'DDMONYY HH24:MM') as runDate
      FROM 
			CUST_COMPANY CUST 
      WHERE 1=1
      <isNotEmpty property="customerName"> 
      AND UPPER(CUST.CODE_DESC) = UPPER(#customerName#)
      </isNotEmpty>
      <isNotEmpty property="finCode">
      AND CUST.FIN_CODE = #finCode#
      </isNotEmpty>
	</select>
	<select id="fetchCreditBalanceAgentList" parameterClass="cargo.cms.finance.report.bo.CreditBalanceBO" resultClass="cargo.cms.finance.report.bo.CreditBalanceBO">
	select agtLvlLmt,agtLvlBal,agtLvlThhold,
	(select to_char(CR_EFF_DATE_FROM,'DDMONYY') from CUST_AGENT_LEVEL_CRD where cust_no = UPPER(#customerNo#) AND nvl(upper(Status),'**') &lt;&gt; 'VOID'
	AND (TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY') &lt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') &gt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') ) and rownum=1) as agentEffDateFrom,
	(select TO_CHAR(CR_EFF_DATE_TO,'DDMONYY') from CUST_AGENT_LEVEL_CRD where cust_no = UPPER(#customerNo#) AND nvl(upper(Status),'**') &lt;&gt; 'VOID'
	AND (TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY') &lt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') &gt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') ) and rownum=1) as agentEffDateTo
	from (
	SELECT SUM(CR_AMT)                                                      AS agtLvlLmt,
  	SUM(CR_BAL)                                                           AS agtLvlBal,
  	DECODE(SUM(CR_AMT),'','','0','',ROUND(SUM(CR_AMT)*(#threshold#/100))) AS agtLvlThhold
	FROM CUST_AGENT_LEVEL_CRD
	WHERE cust_no                                            =UPPER(#customerNo#)
	AND (TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY') &lt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') &gt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') ))
	AND nvl(upper(Status),'**') &lt;&gt; 'VOID'
	</select>
	<select id="fetchCreditBalanceAirlineList" parameterClass="cargo.cms.finance.report.bo.CreditBalanceBO" resultClass="cargo.cms.finance.report.bo.CreditBalanceBO">
	select (nvl(airlineLmtImpGen,0)+nvl(airlineLmtImpObc,0)+nvl(airlineLmtExpGen,0)+nvl(airlineLmtExpObc,0)+nvl(airlineLmtGen,'0')) airlineLmtTotal,
       (nvl(airlineBalImpGen,0)+nvl(airlineBalImpObc,0)+nvl(airlineBalExpGen,0)+nvl(airlineBalExpObc,0)+nvl(airlineBalGen,'0')) airlineBalTotal,
	     (nvl(airlineThresholdImpGen,0)+nvl(airlineThresholdImpObc,0)+nvl(airlineThresholdExpGen,0)+nvl(airlineThresholdExpObc,0)+nvl(airlineThresholdGen,'0')) airlineThresholdTotal,
       airlineLmtImpGen,airlineLmtImpObc,airlineLmtExpGen,airlineLmtExpObc,airlineLmtGen,airlineBalImpGen,airlineBalImpObc,airlineBalExpGen,airlineBalExpObc,airlineBalGen,
       airlineThresholdImpGen,airlineThresholdImpObc,airlineThresholdExpGen,airlineThresholdExpObc,airlineThresholdGen,airlineEffDateFrom,airlineEffDateTo
	from 
		(
		select airlineLmtExpGen,decode(airlineLmtExpGen,'','','0','0',round(airlineLmtExpGen*(#threshold#/100))) as airlineThresholdExpGen,
       		   airlineLmtExpObc,decode(airlineLmtExpObc,'','','0','0',round(airlineLmtExpObc*(#threshold#/100))) as airlineThresholdExpObc,
               airlineLmtImpGen,decode(airlineLmtImpGen,'','','0','0',round(airlineLmtImpGen*(#threshold#/100))) as airlineThresholdImpGen,
               airlineLmtGen,decode(airlineLmtGen,'','','0','0',round(airlineLmtGen*(#threshold#/100))) as airlineThresholdGen,
               airlineLmtImpObc,decode(airlineLmtImpObc,'','','0','0',round(airlineLmtImpObc*(#threshold#/100))) as airlineThresholdImpObc,
               airlineBalExpGen,airlineBalExpObc,airlineBalImpGen,airlineBalGen,airlineBalImpObc,airlineEffDateFrom,airlineEffDateTo       
	from
      (select 
      (select to_char(CR_EFF_DATE_FROM,'DDMONYY') from CUST_AGENT_CREDIT WHERE nvl(upper(Status),'**') &lt;&gt; 'VOID'　and　CUST_NO=UPPER(#customerNo#) AND CR_TYPE='GEN' 
      AND  (TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY') &lt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') &gt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') ) AND ROWNUM=1) AS airlineEffDateFrom,
      (select TO_CHAR(CR_EFF_DATE_TO,'DDMONYY') from CUST_AGENT_CREDIT WHERE nvl(upper(Status),'**') &lt;&gt; 'VOID'　and　CUST_NO=UPPER(#customerNo#) AND CR_TYPE='GEN' 
      AND  (TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY') &lt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') &gt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') ) AND CR_TYPE='GEN' AND ROWNUM=1) as airlineEffDateTo,
      (SELECT SUM(CR_AMT) FROM  CUST_AGENT_CREDIT WHERE nvl(upper(Status),'**') &lt;&gt; 'VOID'　and　UPPER(CUST_NO)=UPPER(#customerNo#) AND UPPER(CR_TYPE)=UPPER('Export_GEN') AND  (TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY') &lt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') &gt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') )) AS airlineLmtExpGen,
      (SELECT SUM(CR_AMT) FROM  CUST_AGENT_CREDIT WHERE nvl(upper(Status),'**') &lt;&gt; 'VOID'　and　UPPER(CUST_NO)=UPPER(#customerNo#) AND UPPER(CR_TYPE)=UPPER('Export_OBC') AND  (TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY') &lt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') &gt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') )) AS airlineLmtExpObc,
      (SELECT SUM(CR_AMT) FROM  CUST_AGENT_CREDIT WHERE nvl(upper(Status),'**') &lt;&gt; 'VOID'　and　UPPER(CUST_NO)=UPPER(#customerNo#) AND UPPER(CR_TYPE)=UPPER('Import_GEN') AND  (TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY') &lt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') &gt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') )) AS airlineLmtImpGen,
      (SELECT SUM(CR_AMT) FROM  CUST_AGENT_CREDIT WHERE nvl(upper(Status),'**') &lt;&gt; 'VOID'　and　UPPER(CUST_NO)=UPPER(#customerNo#) AND UPPER(CR_TYPE)=UPPER('GEN') AND  (TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY') &lt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') &gt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') )) AS airlineLmtGen,
      (SELECT SUM(CR_AMT) FROM  CUST_AGENT_CREDIT WHERE nvl(upper(Status),'**') &lt;&gt; 'VOID'　and　UPPER(CUST_NO)=UPPER(#customerNo#) AND UPPER(CR_TYPE)=UPPER('Import_OBC') AND  (TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY') &lt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') &gt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') )) AS airlineLmtImpObc,
      (SELECT SUM(CR_BAL) FROM  CUST_AGENT_CREDIT WHERE nvl(upper(Status),'**') &lt;&gt; 'VOID'　and　UPPER(CUST_NO)=UPPER(#customerNo#) AND UPPER(CR_TYPE)=UPPER('Export_GEN') AND  (TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY') &lt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') &gt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') )) AS airlineBalExpGen,
      (SELECT SUM(CR_BAL) FROM  CUST_AGENT_CREDIT WHERE nvl(upper(Status),'**') &lt;&gt; 'VOID'　and　UPPER(CUST_NO)=UPPER(#customerNo#) AND UPPER(CR_TYPE)=UPPER('Export_OBC') AND  (TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY') &lt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') &gt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') )) AS airlineBalExpObc,
      (SELECT SUM(CR_BAL) FROM  CUST_AGENT_CREDIT WHERE nvl(upper(Status),'**') &lt;&gt; 'VOID'　and　UPPER(CUST_NO)=UPPER(#customerNo#) AND UPPER(CR_TYPE)=UPPER('Import_GEN') AND  (TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY') &lt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') &gt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') )) AS airlineBalImpGen,
      (SELECT SUM(CR_BAL) FROM  CUST_AGENT_CREDIT WHERE nvl(upper(Status),'**') &lt;&gt; 'VOID'　and　UPPER(CUST_NO)=UPPER(#customerNo#) AND UPPER(CR_TYPE)=UPPER('GEN') AND  (TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY') &lt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') &gt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') )) AS airlineBalGen,
      (SELECT SUM(CR_BAL) FROM  CUST_AGENT_CREDIT WHERE nvl(upper(Status),'**') &lt;&gt; 'VOID'　and　UPPER(CUST_NO)=UPPER(#customerNo#) AND UPPER(CR_TYPE)=UPPER('Import_OBC') AND  (TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY') &lt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') &gt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') )) AS airlineBalImpObc
      from dual))
	</select>
	<select id="fetchCreditBalanceCPSLList" parameterClass="cargo.cms.finance.report.bo.CreditBalanceBO" resultClass="cargo.cms.finance.report.bo.CreditBalanceBO">
	select creaditBal,creditLmt,custNo,carrCode,type,threshold,
(select to_char(CR_EFF_DATE_FROM,'DDMONYY') from CUST_AGENT_AIRL_CREDIT WHERE CUST_NO=custNo AND CR_TYPE='GEN' AND nvl(upper(Status),'**') &lt;&gt; 'VOID'
AND  (TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY') &lt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') &gt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') ) AND ROWNUM=1) AS cpslEffDateFrom,
(select TO_CHAR(CR_EFF_DATE_TO,'DDMONYY') from CUST_AGENT_AIRL_CREDIT WHERE CUST_NO=custNo AND CR_TYPE='GEN' AND nvl(upper(Status),'**') &lt;&gt; 'VOID'
AND  (TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY') &lt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') &gt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') ) AND ROWNUM=1) as cpslEffDateTo
from(
	SELECT SUM(CR_BAL) as creaditBal,
       SUM(CR_AMT) as creditLmt,
       CUST_NO as custNo,
       CARR_CODE as carrCode,
       CR_TYPE as type,
       decode(SUM(CR_AMT),'','','0','',round(SUM(CR_AMT)*(#threshold#/100))) as threshold
  	FROM 
      CUST_AGENT_AIRL_CREDIT A
    WHERE 1=1 AND nvl(upper(A.Status),'**') &lt;&gt; 'VOID' AND  (TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY') &lt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') &gt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') )
    <isNotEmpty property="customerNo">  
    and CUST_NO=#customerNo#
    </isNotEmpty>
    <isNotEmpty property="carrier">
     and carr_code=#carrier#
     </isNotEmpty>
        GROUP BY CUST_NO,carr_code,CR_TYPE)
	</select>
	
	 <!-- remove for credit facilty 
		SELECT 
		  to_char(sysdate,'DDMONYY HH24:MM') as runDate,
		  CUST_NO customerNo, 
		  CODE_DESC customerName,
		  CUST.FIN_CODE AS finCode,
		  'Agent Level' AS crLevel,
		  '' AS type,
		  AGT.CARR_CODE AS airline,
		  AGT.CARR_GROUP AS airlineGrp,
		  TO_CHAR(AGT.CR_EFF_DATE_FROM,'DDMONYY') AS effFrom,
		  TO_CHAR(AGT.CR_EFF_DATE_TO,'DDMONYY') AS effTo,
		  AGT.CR_AMT AS creditLmt,
		  AGT.CR_BAL AS creaditBal,
		  (select decode(SUM(agt1.CR_AMT),'','','0','',round(SUM(agt1.CR_AMT)*(#threshold#/100)))  from CUST_AGENT_LEVEL_CRD agt1 where agt.CUST_NO =agt1.CUST_NO
		  		AND AGT1.CARR_GROUP IS NOT NULL and AGT1.tr_no=AGT.tr_no) as threshold
		  FROM CUST_AGENT_LEVEL_CRD AGT
		  LEFT JOIN CUST_COMPANY CUST ON CUST.CODE=AGT.CUST_NO
		  WHERE CUST_NO=#customerNo#
		  and AGT.CARR_GROUP is not null 
		  AND CR_BAL &lt;= (SELECT DECODE(SUM(AGT1.CR_AMT),'','','0','',ROUND(SUM(AGT1.CR_AMT)*(#threshold#/100)))  FROM CUST_AGENT_LEVEL_CRD AGT1 WHERE AGT.CUST_NO =AGT1.CUST_NO
                    AND AGT1.CARR_GROUP IS NOT NULL and AGT1.tr_no=AGT.tr_no)
		  <isNotEmpty property="carrier">
		     and AGT.carr_code=#carrier#
		  </isNotEmpty>
		  AND (TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY') &lt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') 
		  AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') &gt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') )
		UNION 
		
		  AGT.CARR_GROUP AS airlineGrp,
		  
		   AGT.CARR_GROUP AS airlineGrp,
		   
		   AND AGT1.CARR_GROUP is null
		   AND AGT1.CARR_GROUP is null  
		   and AGT.CARR_GROUP is null  
	 -->
	<select id="FETCH_AGT_CREDIT_BALANCE_LIST" parameterClass="cargo.cms.finance.report.bo.CreditBalanceBO" resultClass="cargo.cms.finance.report.bo.CreditBalanceBO">
		SELECT 
		  to_char(sysdate,'DDMONYY HH24:MM') as runDate,
		  CUST_NO customerNo, 
		  CODE_DESC customerName,
		  CUST.FIN_CODE AS finCode,
		  'Agent Level' AS crLevel,
		  '' AS type,
		  AGT.CARR_CODE AS airline,
		  AGT.secure_yn AS secure,
		  TO_CHAR(AGT.CR_EFF_DATE_FROM,'DDMONYY') AS effFrom,
		  TO_CHAR(AGT.CR_EFF_DATE_TO,'DDMONYY') AS effTo,
		  AGT.CR_AMT AS creditLmt,
		  AGT.CR_BAL AS creaditBal,
		  (select decode(SUM(agt1.CR_AMT),'','','0','',round(SUM(agt1.CR_AMT)*(#threshold#/100)))  from CUST_AGENT_LEVEL_CRD agt1 
		  	where agt.CUST_NO =agt1.CUST_NO AND nvl(upper(agt1.Status),'**') &lt;&gt; 'VOID'
		  		AND AGT1.CARR_CODE IS NOT NULL and AGT1.tr_no=AGT.tr_no) as threshold
		  FROM CUST_AGENT_LEVEL_CRD AGT
		  LEFT JOIN CUST_COMPANY CUST ON CUST.CODE=AGT.CUST_NO
		  WHERE CUST_NO=#customerNo# AND nvl(upper(agt.Status),'**') &lt;&gt; 'VOID'
		  and AGT.CARR_CODE is not null 
		  AND CR_BAL &lt;= (SELECT DECODE(SUM(AGT1.CR_AMT),'','','0','',ROUND(SUM(AGT1.CR_AMT)*(#threshold#/100)))  FROM CUST_AGENT_LEVEL_CRD AGT1 
		  						WHERE AGT.CUST_NO =AGT1.CUST_NO AND nvl(upper(AGT1.Status),'**') &lt;&gt; 'VOID' 
                    AND AGT1.CARR_CODE IS NOT NULL and AGT1.tr_no=AGT.tr_no)
		  <isNotEmpty property="carrier">
		     AND instr( nvl(UPPER(AGT.carr_code),'*'), nvl(UPPER(#carrier#),'**') ) &gt; 0 
		  </isNotEmpty> 
		  AND (TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY') &lt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') 
		  AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') &gt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') )
		UNION 
		SELECT 
		  to_char(sysdate,'DDMONYY HH24:MM') as runDate,
		  CUST_NO customerNo, 
		  CODE_DESC customerName,
		  CUST.FIN_CODE AS finCode,
		  'Agent Level' AS crLevel,
		  '' AS type,
		  AGT.CARR_CODE AS airline,
		  AGT.secure_yn AS secure,
		  TO_CHAR(AGT.CR_EFF_DATE_FROM,'DDMONYY') AS effFrom,
		  TO_CHAR(AGT.CR_EFF_DATE_TO,'DDMONYY') AS effTo,
		  AGT.CR_AMT AS creditLmt,
		  AGT.CR_BAL AS creaditBal,
		  (select decode(SUM(agt1.CR_AMT),'','','0','',round(SUM(agt1.CR_AMT)*(#threshold#/100)))  from CUST_AGENT_LEVEL_CRD agt1 
		  	where agt.CUST_NO =agt1.CUST_NO AND nvl(upper(agt1.Status),'**') &lt;&gt; 'VOID'
		  		  and AGT1.CARR_CODE is null and AGT1.tr_no=AGT.tr_no) as threshold
		  FROM CUST_AGENT_LEVEL_CRD AGT
		  LEFT JOIN CUST_COMPANY CUST ON CUST.CODE=AGT.CUST_NO
		  WHERE CUST_NO=#customerNo# AND nvl(upper(AGT.Status),'**') &lt;&gt; 'VOID'
		  and AGT.CARR_CODE is null  
		  AND CR_BAL &lt;= (SELECT DECODE(SUM(AGT1.CR_AMT),'','','0','',ROUND(SUM(AGT1.CR_AMT)*(#threshold#/100)))  FROM CUST_AGENT_LEVEL_CRD AGT1
		  							 WHERE AGT.CUST_NO =AGT1.CUST_NO AND nvl(upper(AGT.Status),'**') &lt;&gt; 'VOID'
                    					and AGT1.CARR_CODE is null and AGT1.tr_no=AGT.tr_no)
          <isNotEmpty property="carrier">
          	AND instr( nvl(UPPER(AGT.carr_code),'*'), nvl(UPPER(#carrier#),'**') ) &gt; 0 
		  </isNotEmpty>
		  AND (TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY') &lt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') 
		  AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') &gt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') )
	</select>
	
	 <!-- remove for credit facilty 
	 
		SELECT 
		  to_char(sysdate,'DDMONYY HH24:MM') as runDate,
		  CUST_NO customerNo, 
		  CODE_DESC customerName,
		  CUST.FIN_CODE AS finCode,
		  'Airline Credit' AS crLevel,
		  AGT.CR_TYPE AS type,
		  AGT.CARR_CODE AS airline,
		  AGT.CARR_GROUP AS airlineGrp,
		  TO_CHAR(AGT.CR_EFF_DATE_FROM,'DDMONYY') AS effFrom,
		  TO_CHAR(AGT.CR_EFF_DATE_TO,'DDMONYY') AS effTo,
		  AGT.CR_AMT AS creditLmt,
		  AGT.CR_BAL AS creaditBal,
		  (select decode(SUM(agt1.CR_AMT),'','','0','',round(SUM(agt1.CR_AMT)*(#threshold#/100)))  from CUST_AGENT_AIRL_CREDIT agt1 where agt.CUST_NO =agt1.CUST_NO
		  		AND AGT1.CARR_GROUP IS NOT NULL and AGT1.tr_no=AGT.tr_no) as threshold
		  FROM CUST_AGENT_AIRL_CREDIT AGT
		  LEFT JOIN CUST_COMPANY CUST ON CUST.CODE=AGT.CUST_NO
		  WHERE CUST_NO=#customerNo#
		  <isNotEmpty property="carrier">
		     and AGT.carr_code=#carrier#
		  </isNotEmpty>
		  and AGT.CARR_GROUP is not null 
		  AND CR_BAL &lt;= (SELECT DECODE(SUM(AGT1.CR_AMT),'','','0','',ROUND(SUM(AGT1.CR_AMT)*(#threshold#/100)))  FROM CUST_AGENT_AIRL_CREDIT AGT1 WHERE AGT.CUST_NO =AGT1.CUST_NO
                    AND AGT1.CARR_GROUP IS NOT NULL and AGT1.tr_no=AGT.tr_no)
		  AND (TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY') &lt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') 
		  AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') &gt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') )
		UNION 
		
		AGT.CARR_GROUP AS airlineGrp,
		
		 AGT.CARR_GROUP AS airlineGrp,
		 
		 AND AGT1.CARR_GROUP is null  
		 
		 and AGT.CARR_GROUP is null  
		 
		 AND AGT1.CARR_GROUP is null  
	 -->
	<select id="FETCH_AIRLINE_CREDIT_BALANCE_LIST" parameterClass="cargo.cms.finance.report.bo.CreditBalanceBO" resultClass="cargo.cms.finance.report.bo.CreditBalanceBO">
		
		SELECT 
		  to_char(sysdate,'DDMONYY HH24:MM') as runDate,
		  CUST_NO customerNo, 
		  CODE_DESC customerName,
		  CUST.FIN_CODE AS finCode,
		  'Airline Credit' AS crLevel,
		  AGT.CR_TYPE AS type,
		  AGT.CARR_CODE AS airline,
		  AGT.secure_yn AS secure,
		  TO_CHAR(AGT.CR_EFF_DATE_FROM,'DDMONYY') AS effFrom,
		  TO_CHAR(AGT.CR_EFF_DATE_TO,'DDMONYY') AS effTo,
		  AGT.CR_AMT AS creditLmt,
		  AGT.CR_BAL AS creaditBal,
		  (select decode(SUM(agt1.CR_AMT),'','','0','',round(SUM(agt1.CR_AMT)*(#threshold#/100)))  from CUST_AGENT_AIRL_CREDIT agt1 
		  		where agt.CUST_NO =agt1.CUST_NO
		  		AND AGT1.CARR_CODE IS NOT NULL and AGT1.tr_no=AGT.tr_no
		  		AND nvl(upper(Status),'**') &lt;&gt; 'VOID') as threshold
		  FROM CUST_AGENT_AIRL_CREDIT AGT
		  LEFT JOIN CUST_COMPANY CUST ON CUST.CODE=AGT.CUST_NO
		  WHERE CUST_NO=#customerNo#
		  <isNotEmpty property="carrier">
		     AND instr( nvl(UPPER(AGT.carr_code),'*'), nvl(UPPER(#carrier#),'**') ) &gt; 0 
		  </isNotEmpty>
		  and AGT.CARR_CODE is not null 
		  AND CR_BAL &lt;= (SELECT DECODE(SUM(AGT1.CR_AMT),'','','0','',ROUND(SUM(AGT1.CR_AMT)*(#threshold#/100)))  FROM CUST_AGENT_AIRL_CREDIT AGT1 WHERE 
		  			AGT.CUST_NO =AGT1.CUST_NO
                    AND AGT1.CARR_CODE IS NOT NULL and AGT1.tr_no=AGT.tr_no
                    AND nvl(upper(AGT1.Status),'**') &lt;&gt; 'VOID')
		  AND (TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY') &lt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') 
		  AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') &gt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') )
		  AND nvl(upper(AGT.Status),'**') &lt;&gt; 'VOID'
		UNION 
		SELECT 
		  to_char(sysdate,'DDMONYY HH24:MM') as runDate,
		  CUST_NO customerNo, 
		  CODE_DESC customerName,
		  CUST.FIN_CODE AS finCode,
		  'Airline Credit' AS crLevel,
		  AGT.CR_TYPE AS type,
		  AGT.CARR_CODE AS airline,
		  AGT.secure_yn AS secure,
		  TO_CHAR(AGT.CR_EFF_DATE_FROM,'DDMONYY') AS effFrom,
		  TO_CHAR(AGT.CR_EFF_DATE_TO,'DDMONYY') AS effTo,
		  AGT.CR_AMT AS creditLmt,
		  AGT.CR_BAL AS creaditBal,
		  (select decode(SUM(agt1.CR_AMT),'','','0','',round(SUM(agt1.CR_AMT)*(#threshold#/100)))  from CUST_AGENT_AIRL_CREDIT agt1 
		  		where agt.CUST_NO =agt1.CUST_NO
		  		and AGT1.CARR_CODE is null and AGT1.tr_no=AGT.tr_no
		  		AND nvl(upper(agt1.Status),'**') &lt;&gt; 'VOID') as threshold
		  FROM CUST_AGENT_AIRL_CREDIT AGT
		  LEFT JOIN CUST_COMPANY CUST ON CUST.CODE=AGT.CUST_NO
		  WHERE CUST_NO=#customerNo#
		  <isNotEmpty property="carrier">
		     AND instr( nvl(UPPER(AGT.carr_code),'*'), nvl(UPPER(#carrier#),'**') ) &gt; 0 
		  </isNotEmpty>
		  and AGT.CARR_CODE is null  
		  AND CR_BAL &lt;= (SELECT DECODE(SUM(AGT1.CR_AMT),'','','0','',ROUND(SUM(AGT1.CR_AMT)*(#threshold#/100)))  FROM CUST_AGENT_AIRL_CREDIT AGT1 
		  			WHERE AGT.CUST_NO =AGT1.CUST_NO
                    and AGT1.CARR_CODE is null and AGT1.tr_no=AGT.tr_no
                    AND nvl(upper(AGT1.Status),'**') &lt;&gt; 'VOID')
		  AND (TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY') &lt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') 
		  AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') &gt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') )
		  AND nvl(upper(AGT.Status),'**') &lt;&gt; 'VOID'
	</select>
	
	 <!-- remove for credit facilty 
		SELECT 
		  to_char(sysdate,'DDMONYY HH24:MM') as runDate,
		  CUST_NO customerNo, 
		  CODE_DESC customerName,
		  CUST.FIN_CODE AS finCode,
		  'CPCT Credit' AS crLevel,
		  AGT.CR_TYPE AS type,
		  AGT.CARR_CODE AS airline,
		  AGT.CARR_GROUP AS airlineGrp,
		  TO_CHAR(AGT.CR_EFF_DATE_FROM,'DDMONYY') AS effFrom,
		  TO_CHAR(AGT.CR_EFF_DATE_TO,'DDMONYY') AS effTo,
		  AGT.CR_AMT AS creditLmt,
		  AGT.CR_BAL AS creaditBal,
		  (select decode(SUM(agt1.CR_AMT),'','','0','',round(SUM(agt1.CR_AMT)*(#threshold#/100)))  from CUST_AGENT_CREDIT agt1 where agt.CUST_NO =agt1.CUST_NO
		  		AND AGT1.CARR_GROUP IS NOT NULL and AGT1.tr_no=AGT.tr_no) as threshold
		  FROM CUST_AGENT_CREDIT AGT
		  LEFT JOIN CUST_COMPANY CUST ON CUST.CODE=AGT.CUST_NO
		  WHERE CUST_NO=#customerNo#
		  <isNotEmpty property="carrier">
		     and AGT.carr_code=#carrier#
		  </isNotEmpty>
		  and AGT.CARR_GROUP is not null 
		  AND CR_BAL &lt;= (SELECT DECODE(SUM(AGT1.CR_AMT),'','','0','',ROUND(SUM(AGT1.CR_AMT)*(#threshold#/100)))  FROM CUST_AGENT_CREDIT AGT1 WHERE AGT.CUST_NO =AGT1.CUST_NO
                    AND AGT1.CARR_GROUP IS NOT NULL and AGT1.tr_no=AGT.tr_no)
		  AND (TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY') &lt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') 
		  AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') &gt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') )
		UNION 
		
		AGT.CARR_GROUP AS airlineGrp,
		
		AGT.CARR_GROUP AS airlineGrp,
		
		AND AGT1.CARR_GROUP is null 
		
		and AGT.CARR_GROUP is null  
		
		AND AGT1.CARR_GROUP is null  
	 -->
	<select id="FETCH_CPCT_CREDIT_BALANCE_LIST" parameterClass="cargo.cms.finance.report.bo.CreditBalanceBO" resultClass="cargo.cms.finance.report.bo.CreditBalanceBO">
		
		SELECT 
		  to_char(sysdate,'DDMONYY HH24:MM') as runDate,
		  CUST_NO customerNo, 
		  CODE_DESC customerName,
		  CUST.FIN_CODE AS finCode,
		  'CPCT Credit' AS crLevel,
		  AGT.CR_TYPE AS type,
		  AGT.CARR_CODE AS airline,
		  AGT.secure_yn AS secure,
		  TO_CHAR(AGT.CR_EFF_DATE_FROM,'DDMONYY') AS effFrom,
		  TO_CHAR(AGT.CR_EFF_DATE_TO,'DDMONYY') AS effTo,
		  AGT.CR_AMT AS creditLmt,
		  AGT.CR_BAL AS creaditBal,
		  (select decode(SUM(agt1.CR_AMT),'','','0','',round(SUM(agt1.CR_AMT)*(#threshold#/100)))  from CUST_AGENT_CREDIT agt1 where 
		  nvl(upper(agt1.Status),'**') &lt;&gt; 'VOID' and agt.CUST_NO =agt1.CUST_NO
		  		AND AGT1.CARR_CODE IS NOT NULL and AGT1.tr_no=AGT.tr_no) as threshold
		  FROM CUST_AGENT_CREDIT AGT
		  LEFT JOIN CUST_COMPANY CUST ON CUST.CODE=AGT.CUST_NO
		  WHERE nvl(upper(agt.Status),'**') &lt;&gt; 'VOID' and CUST_NO=#customerNo# 
		  <isNotEmpty property="carrier">
		     and AGT.carr_code=#carrier#
		  </isNotEmpty>
		  and AGT.CARR_CODE is not null 
		  AND CR_BAL &lt;= (SELECT DECODE(SUM(AGT1.CR_AMT),'','','0','',ROUND(SUM(AGT1.CR_AMT)*(#threshold#/100)))  FROM CUST_AGENT_CREDIT AGT1 WHERE 
		  			nvl(upper(agt1.Status),'**') &lt;&gt; 'VOID' and AGT.CUST_NO =AGT1.CUST_NO
                    AND AGT1.CARR_CODE IS NOT NULL and AGT1.tr_no=AGT.tr_no)
		  AND (TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY') &lt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') 
		  AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') &gt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') )
		UNION 
		SELECT 
		  to_char(sysdate,'DDMONYY HH24:MM') as runDate,
		  CUST_NO customerNo, 
		  CODE_DESC customerName,
		  CUST.FIN_CODE AS finCode,
		  'CPCT Credit' AS crLevel,
		  AGT.CR_TYPE AS type,
		  AGT.CARR_CODE AS airline,
		  AGT.secure_yn AS secure,
		  TO_CHAR(AGT.CR_EFF_DATE_FROM,'DDMONYY') AS effFrom,
		  TO_CHAR(AGT.CR_EFF_DATE_TO,'DDMONYY') AS effTo,
		  AGT.CR_AMT AS creditLmt,
		  AGT.CR_BAL AS creaditBal,
		  (select decode(SUM(agt1.CR_AMT),'','','0','',round(SUM(agt1.CR_AMT)*(#threshold#/100)))  from CUST_AGENT_CREDIT agt1 where nvl(upper(agt1.Status),'**') &lt;&gt; 'VOID' and agt.CUST_NO =agt1.CUST_NO
		  		and AGT1.CARR_CODE is null and AGT1.tr_no=AGT.tr_no) as threshold
		  FROM CUST_AGENT_CREDIT AGT
		  LEFT JOIN CUST_COMPANY CUST ON CUST.CODE=AGT.CUST_NO
		  WHERE nvl(upper(agt.Status),'**') &lt;&gt; 'VOID' and CUST_NO=#customerNo#
		  <isNotEmpty property="carrier">
		     and AGT.carr_code=#carrier#
		  </isNotEmpty>
		  <isEmpty property="carrier">
		  and AGT.CARR_CODE is null  
		  </isEmpty> 
		  AND CR_BAL &lt;= (SELECT DECODE(SUM(AGT1.CR_AMT),'','','0','',ROUND(SUM(AGT1.CR_AMT)*(#threshold#/100)))  FROM CUST_AGENT_CREDIT AGT1 WHERE nvl(upper(agt1.Status),'**') &lt;&gt; 'VOID' and AGT.CUST_NO =AGT1.CUST_NO
                    and AGT1.CARR_CODE is null and AGT1.tr_no=AGT.tr_no)
		  AND (TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY') &lt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') 
		  AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') &gt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') )
	</select>	
	
	<!-- ARLN_CRDT - CUST_AGENT_AIRL_CREDIT -->
	<select id="fetch_ARLN_CRDT_List" parameterClass="cargo.cms.finance.report.bo.CreditBalanceDetailBO" resultClass="cargo.cms.finance.report.bo.CreditBalanceDetailBO">
	<![CDATA[
		select seq_No rowNumber, 
		(DECODE(UPPER(cr_type),'GEN','GENERAL','IG','IMPORT GEN','IO','IMPORT OBC','EG','EXPORT GEN','EO','EXPORT OBC',UPPER(cr_type))) ||'-'||
		carr_code || decode(carr_code,null,null,'-') ||
		nvl(secure_yn,'N')  ||'-'||  TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY') ||'/'|| TO_CHAR(CR_EFF_DATE_TO,'DDMONYY')  
		||'-'|| DECODE(upper(Status),'VOID','Y','N') creditRec,
		(DECODE(UPPER(cr_type),'GEN','GENERAL','IG','IMPORT GEN','IO','IMPORT OBC','EG','EXPORT GEN','EO','EXPORT OBC',UPPER(cr_type))) creditType,
		carr_code airline, nvl(secure_yn,'N') secure, TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY') fromDate , TO_CHAR(CR_EFF_DATE_TO,'DDMONYY') toDate, 
		DECODE(upper(Status),'VOID','Y','N') deleteInd,	cust_no custNo
		from CUST_AGENT_AIRL_CREDIT
		where cust_no = (select code from cust_company where code_desc = #custName# and rownum = 1) 
		order by CR_EFF_DATE_FROM desc , CR_EFF_DATE_TO desc , Status desc, secure_yn desc
		]]>	
	</select>
	
	<!-- CPCT_CRDT - cust_agent_level_crd -->
	<select id="fetch_CPCT_CRDT_List" parameterClass="cargo.cms.finance.report.bo.CreditBalanceDetailBO" resultClass="cargo.cms.finance.report.bo.CreditBalanceDetailBO">
	<![CDATA[
		select seq_No rowNumber, 
		(DECODE(UPPER(cr_type),'GEN','GENERAL','IG','IMPORT GEN','IO','IMPORT OBC','EG','EXPORT GEN','EO','EXPORT OBC',UPPER(cr_type))) ||'-'||
		carr_code || decode(carr_code,null,null,'-') ||
		nvl(secure_yn,'N')  ||'-'||  TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY') ||'/'|| TO_CHAR(CR_EFF_DATE_TO,'DDMONYY')  
		||'-'|| DECODE(upper(Status),'VOID','Y','N') creditRec,
		(DECODE(UPPER(cr_type),'GEN','GENERAL','IG','IMPORT GEN','IO','IMPORT OBC','EG','EXPORT GEN','EO','EXPORT OBC',UPPER(cr_type))) creditType,
		carr_code airline, nvl(secure_yn,'N') secure, TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY') fromDate , TO_CHAR(CR_EFF_DATE_TO,'DDMONYY') toDate,
		DECODE(upper(Status),'VOID','Y','N') deleteInd, cust_no custNo
		from CUST_AGENT_CREDIT
		where cust_no = (select code from cust_company where code_desc = #custName# and rownum = 1) 
		order by CR_EFF_DATE_FROM desc , CR_EFF_DATE_TO desc , Status desc, secure_yn desc
		]]>	
	</select>
	
	<!-- CPSL_AGT - CUST_AGENT_CREDIT -->
	<select id="fetch_CPSL_AGT_List" parameterClass="cargo.cms.finance.report.bo.CreditBalanceDetailBO" resultClass="cargo.cms.finance.report.bo.CreditBalanceDetailBO">
	<![CDATA[
		select seq_No rowNumber, 
		carr_code || decode(carr_code,null,null,'-') ||
		nvl(secure_yn,'N')  ||'-'||  TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY') ||'/'|| TO_CHAR(CR_EFF_DATE_TO,'DDMONYY')  
		||'-'|| DECODE(upper(Status),'VOID','Y','N') creditRec,
		carr_code airline, nvl(secure_yn,'N') secure, TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY') fromDate , TO_CHAR(CR_EFF_DATE_TO,'DDMONYY') toDate, 
		DECODE(upper(Status),'VOID','Y','N') deleteInd, cust_no custNo
		from cust_agent_level_crd
		where cust_no = (select code from cust_company where code_desc = #custName# and rownum = 1)  
		order by CR_EFF_DATE_FROM desc , CR_EFF_DATE_TO desc , Status desc, secure_yn desc
		]]>	
	</select>
	
	<select id="fetchBillingAddressDetails" parameterClass="cargo.cms.finance.report.bo.CreditBalanceDetailBO" resultClass="cargo.cms.finance.report.bo.CreditBalanceDetailBO">
	select bill_add1 as billadd1,
		   bill_add2 as billadd2,
		   bill_add3 as billadd3,
           bill_add4 as billadd4,
           bill_add5 as billadd5,
           bill_city as billCity,
           bill_pin_code as billPincode,
           bill_ctry_code as billCountry,
           bill_attn as billAttn,
           fin_code finCode,
           code as custNo
       from cust_company where upper(code_desc) = upper(#custName#) 
	</select>
	
		<select id="fetchCreditBalanceDetailsList" parameterClass="cargo.cms.finance.report.bo.CreditBalanceDetailBO" resultClass="cargo.cms.finance.report.bo.CreditBalanceDetailBO">
	<![CDATA[
	select to_char(dtl.cr_date,'DDMONYY HH24:MI') reptDate ,
	case when dtl.inv_no is not null then 'Invoice number '||dtl.inv_no else case when dtl.adj_no is not null then 
	'Adjustment number '||dtl.adj_no else NVL(dtl.trans_desc,'Settlement') end end transDesc, 
	 NVL(dtl.INV_NO,dtl.ADJ_NO) refNo,
	 decode(dtl.INV_NO,null,adj.cnsldt_inv_no,inv.cnsldt_inv_no) consolInvNo,
	case when to_number(dtl.cr_amt) < 0 then ABS(TO_NUMBER(dtl.CR_AMT)) ELSE 0 END AS debit,
   	case when to_number(dtl.cr_amt) > 0  then ABS(NVL(TO_NUMBER(dtl.CR_AMT),0)) ELSE 0 END AS credit,	
    dtl.balance balance 
	from bill_inv_crd_dtl dtl
	left join bill_inv_dtl inv on
    dtl.inv_no=inv.inv_no and dtl.inv_doc_line_no=inv.doc_line_no
    left join bill_adj_dtl adj on dtl.adj_no=adj.adj_no and dtl.adj_doc_line_no=adj.doc_line_no
	where NVL(dtl.CR_LVL,'*') not like '%VIR%'	and dtl.cust_no = #custNo#
	and dtl.cr_date between to_date(#fromDate#||'0000','DDMONYYHH24MI') and to_date(#toDate#||'2359','DDMONYYHH24MI')
		]]> 
	<isNotEmpty property = "rowNumber" >	
		and dtl.mast_seq_No  = #rowNumber#
	</isNotEmpty>	
	<isEmpty property = "rowNumber" >
		and NVL(dtl.CR_TYPE,'*') = NVL(decode(#creditType#,'Export_GEN','EG','Export_OBC','EO','GEN','GEN','Import_GEN','IG','Import_OBC','IO',#creditType#), NVL(dtl.CR_TYPE,'*'))
	<isNotEmpty property = "creditLevel" >
	<isEqual property = "creditLevel" compareValue = "ARLN_CRDT" >
	and (dtl.CR_LVL = 'AIRL_GEN' OR dtl.CR_LVL = 'AIRL_GEN_CARR' 
			OR dtl.CR_LVL = 'AIRL_CATALOG' OR dtl.CR_LVL = 'AIRL_CATALOG_CARR')
	</isEqual>
	<isEqual property = "creditLevel" compareValue = "CPCT_CRDT" >
	and (dtl.CR_LVL = 'CPCT_GEN' OR dtl.CR_LVL = 'CPCT_GEN_CARR'  
			OR dtl.CR_LVL = 'CPCT_CATALOG' OR dtl.CR_LVL = 'CPCT_CATALOG_CARR')
	</isEqual>
	<isEqual property = "creditLevel" compareValue = "CPSL_AGT" >
	and (dtl.CR_LVL = 'AGENT_LVL' OR dtl.CR_LVL = 'AGENT_LVL_CARR')
	</isEqual>
	</isNotEmpty>
	<isNotEmpty property = "airline" >
		AND  dtl.CR_AIRLINE = #airline#
	</isNotEmpty>
	</isEmpty>
	order by dtl.cr_date asc,dtl.rowid
   </select>
   <select id="fetchTotalBalanceDetailsList" parameterClass="cargo.cms.finance.report.bo.CreditBalanceDetailBO" resultClass="cargo.cms.finance.report.bo.CreditBalanceDetailBO">
   select sum(debit) as totalDebit,sum(credit) as totalCredit,sum(balance) as totalBalance from(
   <![CDATA[
	select to_char(cr_date,'DDMONYY HH24:MI') reptDate ,
	case when inv_no is not null then 'Invoice number '||inv_no else case when adj_no is not null then 
	'Adjustment number '||adj_no else NVL(trans_desc,'Settlement') end end transDesc, 
	 NVL(INV_NO,ADJ_NO) refNo,
	case when to_number(cr_amt) < 0 then ABS(TO_NUMBER(CR_AMT)) ELSE 0 END AS debit,
   	case when to_number(cr_amt) > 0  then ABS(NVL(TO_NUMBER(CR_AMT),0)) ELSE 0 END AS credit,
    balance balance 
	from bill_inv_crd_dtl 
	where NVL(CR_LVL,'*') not like '%VIR%' and cust_no = #custNo#
	and	cr_date between to_date(#fromDate#||'0000','DDMONYYHH24MI') and to_date(#toDate#||'2359','DDMONYYHH24MI')			
		]]> 
	<isNotEmpty property = "rowNumber" >	
		and mast_seq_No  = #rowNumber#
	</isNotEmpty>	
	<isEmpty property = "rowNumber" >
			
			and NVL(CR_TYPE,'*') = NVL(decode(#creditType#,'Export_GEN','EG','Export_OBC','EO','GEN','GEN','Import_GEN','IG','Import_OBC','IO',#creditType#), NVL(CR_TYPE,'*'))
	<isNotEmpty property = "creditLevel" >
	<isEqual property = "creditLevel" compareValue = "ARLN_CRDT" >
	and (CR_LVL = 'AIRL_GEN' OR CR_LVL = 'AIRL_GEN_CARR' 
			OR CR_LVL = 'AIRL_CATALOG' OR CR_LVL = 'AIRL_CATALOG_CARR')
	</isEqual>
	<isEqual property = "creditLevel" compareValue = "CPCT_CRDT" >
	and (CR_LVL = 'CPCT_GEN' OR CR_LVL = 'CPCT_GEN_CARR'  
			OR CR_LVL = 'CPCT_CATALOG' OR CR_LVL = 'CPCT_CATALOG_CARR')
	</isEqual>
	<isEqual property = "creditLevel" compareValue = "CPSL_AGT" >
	and (CR_LVL = 'AGENT_LVL' OR CR_LVL = 'AGENT_LVL_CARR')
	</isEqual>
	</isNotEmpty>
	<isNotEmpty property = "airline" >
		AND  CR_AIRLINE = #airline#
	</isNotEmpty>
	</isEmpty> 	
	
	order by cr_date asc,rowid)
   </select>
   	
   	<select id="sqlGetServiceAwbDate" parameterClass="java.lang.String" resultClass="java.lang.String">
   	select to_char(max(awb_date),'DDMONYY') from awb where awb_no = #awbNo# 
   	</select>
   	
   	<select id="sqlCheckAwbAgentMatches" parameterClass="cargo.cms.billing.bo.ServiceChargesBO" resultClass="java.lang.Integer">
   	select count(1) from awb where awb_no = #awbNo# and awb_date = to_date(#awbDate#,'DDMONYY') and agent_name = #partyName#
   	</select>
   	
   		<select id= "sqlGetOverChargeItemDetails"  parameterClass="cargo.cms.billing.bo.ChargeBO" resultClass="cargo.cms.billing.bo.ChargeBO">
   	select itm_code itemCode, 
   		   itm_code_sfx itemCodeSfx, 
   		   itm_desc itemDesc, 
   		   rev_ind revInd, 
   		   std_ind stdInd, 
   		   cash_ind cashInd, 
   		   wavr_ind waverInd, 
   		   uom uom,
   		   upd_desc updDescIndicator, 
   		   upd_rate updRateIndicator 
   		   from bill_itm_master where itm_code = 'OVERCHG'
   	</select>
   	<select id= "sqlGetOverChargeItemTrNo"  parameterClass="java.lang.String" resultClass="java.lang.String">
    	select 	BILL_CHARGE_DTL_SEQ.nextval from dual
   	</select>
   	
   	
	<insert id="sqlCreateOverCharge" parameterClass="cargo.cms.billing.bo.ChargeBO" >
		INSERT INTO BILL_CHARGE_DTL
		(TR_NO,
		 AWB_DATE, 
		 AWB_NO,  
		 CALC_CHRG ,
		 BALANCE_AMT,
		 CASH_IND,
		 CHRG_AMT,   
		 CUST_NO , 
		 CUST_NAME , 
		 ITM_CODE, 
		 ITM_CODE_SFX, 
		 ITM_DESC,
		 NET_AMT ,
		 QTY, 
		 REV_IND,
		 STD_IND,  
		 UNIT_PRICE,
		 UOM, 
		 UPD_DESC_IND, 
		 UPD_RATE_IND, 
		 WAVR_IND,
		 LM_USER_ID, 
		 CR_USER_ID, 
		 STATUS ,
		 CURR_CODE, 
		 LM_DATE, 
		 CR_DATE,
		 PAID_AMT_CASH)
		VALUES
		(#transactionId#,
		 #awbDate#, 
		 #awbNo#,  
		 #calculateCharge# ,
		 #balanceAmt#,
		 #cashInd#,
		 #chargeAmount#,   
		 #custNo# , 
		 #agentName# , 
		 #itemCode#, 
		 #itemCodeSfx#, 
		 #itemDesc#,
		 #netAmount#,
		 #qty#, 
		 #revInd#,
		 #stdInd#,  
		 #unitPrice#,
		 #uom#, 
		 #updDescIndicator#, 
		 #updRateIndicator#, 
		 #waverInd#,
		 #crUserId#, 
		 #crUserId#, 
		 'PAID' ,
		 'HKD', 
		 sysdate, 
		 sysdate,
		 #chargeAmount#)
	</insert>
	
	<select id= "sqlGetAgentNameByAgentCode"  parameterClass="java.lang.String" resultClass="java.lang.String">
    	select CODE_DESC from cust_company where code = #code#
   	</select>
	
   	<select id= "sqlGetIdoclineNoForOverChg"  parameterClass="java.lang.String" resultClass="java.lang.String">
    	select max(doc_line_no)+1 from bill_inv_dtl where inv_no = #inv_no#
   	</select>

   	<select id= "checkEmailAttachments"  parameterClass="java.lang.String" resultClass="java.lang.Integer">
        Select count(1)
        From BILL_DEBIT_NOTE_DTLS B Join CUST_COMPANY C On( B.CUST_CODE = C.CODE) WHERE B.CONFIRM_IND = 'Y' 
        		AND LAST_SENT_DATE IS NULL AND BLOB_GENE_YN = 'N'
   	</select>
   	
   	<insert id="sqlCreateOverChargeInvoice" parameterClass="cargo.cms.billing.bo.ChargeBO" >
   	Insert into BILL_INV_DTL (INV_NO,
                          DOC_LINE_NO,
                          CHRG_TR_NO,
                          ITM_CODE,
                          ITM_CODE_SFX,
                          REV_IND,
                          CHARGE_AMT,
                          ACC_ADJ_AMT,
                          CR_USER_ID,
                          CR_DATE,
                          LM_USER_ID,
                          LM_DATE,
                          CASH_IND)
                   VALUES(#invoiceNo#,
                          #iDocLineNo#,
                          #transactionId#,
                          #itemCode#,
                          #itemCodeSfx#,
                          #revInd#,
                          0,
                          #adjAmt#,
                          #crUserId#,
                          sysdate,
                          #crUserId#,
                          sysdate,
                          #cashInd#)
      </insert>
   <select id= "sqlGetDebitNoteMail"  parameterClass="java.util.HashMap" resultClass="cargo.cms.billing.bo.DebitNoteEmailAddrBO">
         Select B.tr_no As trNo,
            B.debit_note As debitNote,
            TO_CHAR(B.From_Date,'DD MON YY') As fromDate,
            TO_CHAR(B.To_Date,'DD MON YY') As toDate,
            C.bill_email1 As emailAddress1 ,
            C.bill_email2 As emailAddress2 , 
            C.bill_email3 As emailAddress3 , 
            C.bill_email4 As emailAddress4 , 
            C.bill_email5 As emailAddress5
        From BILL_DEBIT_NOTE_DTLS B Join CUST_COMPANY C On( B.CUST_CODE = C.CODE) WHERE B.CONFIRM_IND = 'Y' AND LAST_SENT_DATE IS NULL
   	</select>
		<update id="sqlUpdateDebitNoteDetails" parameterClass="cargo.cms.billing.bo.DebitNoteEmailAddrBO">
	UPDATE Bill_Debit_Note_Dtls 
	SET
	LAST_SENT_DATE = sysdate,
    LAST_SEND_USER = #userID#,
    EMAIL = #emailString#
    WHERE TR_NO = #trNo#
	</update>
	
	<select id="sqlGetInvoicePaidBy" parameterClass="java.lang.String" resultClass="java.lang.String" >
		SELECT STRAGG(STRINGDELIM(CR_LVL,',')) AS invoiceCredit FROM bill_inv_crd_dtl where inv_no = #invNo#
	</select>
	
	 <select id="fetchCustCreditConfirmDtls" parameterClass="cargo.cms.finance.report.bo.FinanceTransReportBO" resultClass="cargo.cms.finance.report.bo.FinanceTransReportBO">
      select K.* FROM (select T.finCode finCode, T.agentCode agentCode, T.agentName agentName, trim(to_char(NVL(sum(T.chrgAmt),0),'999,999,999,999,999,999,999,999,999,999,999,999.99'))  chrgAmtDisplay,
       trim(to_char(NVL(sum(T.chrgAmt),0),'999999999999999999999999999999999999.99')) chrgAmt,#fromDate# fromDate, #toDate#  toDate, #dueDate# dueDate from ( SELECT consInvoiceNo,transactionDt,finCode,agentCode,invType,chrgAmt,netAmt,agentName,addr1,addr2,addr3,addr4,attn,invoiceNo,awbNo,itemCharge FROM (
		SELECT DTL.CNSLDT_INV_NO consInvoiceNo,TO_CHAR(DTL.CNSLDT_INV_DATE,'DDMONYY') transactionDt,CUST.FIN_CODE finCode, CUST.CODE agentCode,
		decode(HD.INV_TYPE,'CRD','CREDIT','CSH','CASH') invType, SUM(DTL.CHARGE_AMT) chrgAmt,
		NVL(SUM(DTL.CHARGE_AMT),0) netAmt,CUST.CODE_DESC agentName,NVL(CUST.ADD1,'') addr1,NVL(CUST.ADD2,'') addr2,NVL(CUST.ADD3,'') addr3,NVL(CUST.ADD4,'') addr4,NVL(CUST.BILL_ATTN,'') attn,
		HD.INV_NO invoiceNo,
	    CHRG.AWB_NO awbNo,
	    CHRG.ITM_DESC as itemCharge 
		FROM BILL_INV_HD HD JOIN BILL_INV_DTL DTL ON HD.INV_NO = DTL.INV_NO 
 			JOIN BILL_CHARGE_DTL CHRG ON CHRG.TR_NO = DTL.CHRG_TR_NO 
        	JOIN CUST_COMPANY CUST ON CUST.CODE_DESC=CHRG.CUST_NAME
        WHERE  DTL.CNSLDT_INV_DATE between TO_DATE(#fromDate#||' '||'000000','DDMONYY HH24MISS') and TO_DATE(#toDate#||' '||'235959','DDMONYY HH24MISS')
        <![CDATA[
                                AND LENGTH(DTL.CNSLDT_INV_NO) > 0 
        ]]>
		<isNotEmpty property="agentName">
			AND CUST.CODE_DESC = #agentName#
		</isNotEmpty>
	    <isNotEmpty property="finCode">
			AND CUST.FIN_CODE = #finCode#
		</isNotEmpty>
		group by DTL.CNSLDT_INV_NO,DTL.CNSLDT_INV_DATE, HD.INV_TYPE,CUST.CODE_DESC,CUST.ADD1,CUST.ADD2,CUST.ADD3,CUST.ADD4,CUST.BILL_ATTN,CUST.FIN_CODE,CUST.CODE,HD.INV_NO,CHRG.AWB_NO,CHRG.ITM_DESC 
		UNION
		SELECT DTL.CNSLDT_INV_NO consInvoiceNo,TO_CHAR(DTL.CNSLDT_INV_DATE,'DDMONYY') transactionDt,CUST.FIN_CODE finCode, CUST.CODE agentCode,
		decode(HD.ADJ_TYPE,'CRD','CREDIT','CSH','CASH') invType,SUM(DTL.ADJ_AMT)chrgAmt,
		NVL(SUM(DTL.ADJ_AMT),0) netAmt,CUST.CODE_DESC agentName,NVL(CUST.ADD1,'') addr1,NVL(CUST.ADD2,'') addr2,NVL(CUST.ADD3,'') addr3,NVL(CUST.ADD4,'') addr4,NVL(CUST.BILL_ATTN,'') attn,
		HD.INV_NO invoiceNo,
	    CHRG.AWB_NO awbNo,
	    CHRG.ITM_DESC as itemCharge 
		FROM BILL_ADJ_HD HD JOIN BILL_ADJ_DTL DTL ON HD.ADJ_NO = DTL.ADJ_NO  
      		JOIN BILL_INV_DTL INVDTL ON DTL.IDOC_LINE_NO = INVDTL.DOC_LINE_NO AND DTL.INV_NO = INVDTL.INV_NO
          	JOIN BILL_CHARGE_DTL CHRG ON CHRG.TR_NO = INVDTL.CHRG_TR_NO 
         	JOIN CUST_COMPANY CUST ON CUST.CODE_DESC=CHRG.CUST_NAME
		WHERE  DTL.CNSLDT_INV_DATE between TO_DATE(#fromDate#||' '||'000000','DDMONYY HH24MISS') and TO_DATE(#toDate#||' '||'235959','DDMONYY HH24MISS')
        <![CDATA[
                                AND LENGTH(DTL.CNSLDT_INV_NO) > 0 
        ]]>
		<isNotEmpty property="agentName">
			AND CUST.CODE_DESC = #agentName#
		</isNotEmpty>
	    <isNotEmpty property="finCode">
			AND CUST.FIN_CODE = #finCode#
		</isNotEmpty>
		group by DTL.CNSLDT_INV_NO,DTL.CNSLDT_INV_DATE, HD.ADJ_TYPE,CUST.CODE_DESC,CUST.ADD1,CUST.ADD2,CUST.ADD3,CUST.ADD4,CUST.BILL_ATTN,CUST.FIN_CODE,CUST.CODE,HD.INV_NO,CHRG.AWB_NO,CHRG.ITM_DESC ) 
		ORDER BY to_date(transactionDt),awbNo,agentName,consInvoiceNo)T group by T.finCode, T.agentCode, T.agentName)K
      WHERE NOT EXISTS(SELECT NULL FROM BILL_DEBIT_NOTE_DTLS WHERE FIN_CODE = K.finCode  and CUST_CODE = K.agentCode  and
     ( FROM_DATE BETWEEN TO_DATE(K.fromDate) and TO_DATE(K.toDate) or TO_DATE  BETWEEN TO_DATE(K.fromDate) and TO_DATE(K.toDate))
      )
      order by K.agentName asc
		</select>
		
		
		<parameterMap class="cargo.cms.finance.report.bo.FinanceTransReportBO" id="debitNoteMap">
			<parameter property="finCode" jdbcType="VARCHAR" javaType="java.lang.String" />
			<parameter property="agentCode" jdbcType="VARCHAR" javaType="java.lang.String" />
			<parameter property="agentName" jdbcType="VARCHAR" javaType="java.lang.String" />
			<parameter property="userID" jdbcType="VARCHAR" javaType="java.lang.String" />
		     <parameter property="pdfFile" jdbcType="BLOB" javaType="[B" />
			<parameter property="fromDate" jdbcType="VARCHAR" javaType="java.lang.String" />
			<parameter property="toDate" jdbcType="VARCHAR" javaType="java.lang.String" />
			<parameter property="chrgAmt" jdbcType="VARCHAR" javaType="java.lang.String" />
			<parameter property="dueDate" jdbcType="VARCHAR" javaType="java.lang.String" />
			
		     
	</parameterMap>
		<insert id="insertConfirmedDebitNote" parameterClass="cargo.cms.finance.report.bo.FinanceTransReportBO">
		<![CDATA[
			INSERT INTO BILL_DEBIT_NOTE_DTLS(TR_NO,FIN_CODE,
      									 CUST_CODE,
      									 CUST_NAME,
      									 CR_USER_ID,
      									 CR_DATE,
      									 DEBIT_NOTE,
     									  FROM_DATE,
     									   TO_DATE,
     									   DEBIT_TOTAL,
     									   DUE_DATE)
			
			VALUES(#trNo#,
			#finCode#, #agentCode#, #agentName#, #userID#, SYSDATE,#pdfFile#,#fromDate#,#toDate#,#chrgAmt#,#dueDate#
			)
		]]>
	</insert>
	<select id="getBillDNSeqNo" parameterClass="java.lang.String"  resultClass="java.lang.Integer">
			select BILL_DEBIT_NOTE_SEQ.NEXTVAL from dual
	</select>
	<select id="sqlGetMaxTxMgrTimeinSecs" parameterClass="java.lang.String"  resultClass="java.lang.String">
			select rule_value from cmsrules where rule_code = 'BILLING_TX_TIME_IN_SECS'
	</select>
	<update id="updateConfirmedDebitNote" parameterClass="cargo.cms.finance.report.bo.FinanceTransReportBO">
		UPDATE BILL_DEBIT_NOTE_DTLS SET DEBIT_NOTE=#pdfFile#,DEBIT_TOTAL=#chrgAmt#, BLOB_GENE_YN = 'Y' WHERE TR_NO=#trNo#
	</update>
	<select id="fetchCustCreditConfirmedDtls" parameterClass="cargo.cms.finance.report.bo.FinanceTransReportBO" resultClass="cargo.cms.finance.report.bo.FinanceTransReportBO">
     SELECT  TR_NO trNo,
      	     FIN_CODE finCode,                                                                                                                                                                                
			 CUST_CODE agentCode,                                                                                                                                                                                              
			 CUST_NAME agentName,                                                                                                                                                                                        
			 CONFIRM_IND confirmDebit,     
			 DEBIT_TOTAL chrgAmt,  
			 trim(to_char(NVL(DEBIT_TOTAL,0),'999,999,999,999,999,999,999,999,999,999,999,999.99')) chrgAmtDisplay,                                                                                                                                                                      
			 TO_CHAR(LAST_SENT_DATE,'DDMONYY HH24:MI') lastSentDate,                                                                                                                                                                                           
			 LAST_SEND_USER lastSentUser,
			 DEBIT_NOTE pdfFile,
			 TO_CHAR(FROM_DATE,'DDMONYY') fromDate,
			 TO_CHAR(CONFIRM_DATE,'DDMONYY HH24:MI') confirmDate,
			 CONFIRM_USER confirmUser,                                                                                                                                                                   
			 TO_CHAR(TO_DATE,'DDMONYY') toDate,
			 TO_CHAR(DUE_DATE,'DDMONYY') dueDate,
			 CONFIRM_IND oldConfirmDebit     
			FROM BILL_DEBIT_NOTE_DTLS
 			<![CDATA[
			 WHERE to_date(to_char(FROM_DATE,'DDMONYY'),'DDMONYY') >= TO_DATE(#fromDate#||' '||'000000','DDMONYY HH24MISS') 
			 AND to_date(to_char(TO_DATE,'DDMONYY'),'DDMONYY') <= TO_DATE(#toDate#||' '||'235959','DDMONYY HH24MISS')
			 ]]>
			 			 AND (NVL(CONFIRM_IND,'N') = 'Y' OR LAST_SENT_DATE IS NOT NULL) 
		<isNotEmpty property="agentName">
			AND CUST_NAME = #agentName#
		</isNotEmpty>
	    <isNotEmpty property="finCode">
			AND FIN_CODE = #finCode#
		</isNotEmpty>
		ORDER BY CUST_NAME ASC,FROM_DATE DESC,TO_DATE DESC 
		</select>
		
	
	<delete id="sqlDeleteDebitNote"  parameterClass="cargo.cms.finance.report.bo.FinanceTransReportBO">
		DELETE FROM BILL_DEBIT_NOTE_DTLS WHERE TR_NO = #trNo# 
	</delete>
	
	<update id="sqlUpdateDebitNote"  parameterClass="cargo.cms.finance.report.bo.FinanceTransReportBO">
		update BILL_DEBIT_NOTE_DTLS 
		set CONFIRM_IND = nVL(#confirmDebit#,'N'),
			CONFIRM_USER = #userID#,
			CONFIRM_DATE = sysdate
		WHERE TR_NO = #trNo# 
	</update>
	
    <select id="sendEmailToday" parameterClass="java.lang.String" resultClass="java.lang.String">
			select case when TRIM( TO_CHAR(SUBM_DATE,'00')||SUBM_MONTH) = TRIM(TO_CHAR(SYSDATE, 'DDMON')) then 1 else 0 end from mast_debit_subm where SUBM_MONTH = TO_CHAR(SYSDATE,'MON')
	</select>
	
	<select id="fetchCustDebitNotesForMaintain" parameterClass="cargo.cms.finance.report.bo.FinanceTransReportBO" resultClass="cargo.cms.finance.report.bo.FinanceTransReportBO">
	  SELECT TR_NO trNo,
      	     FIN_CODE finCode,                                                                                                                                                                                
			 CUST_CODE agentCode,                                                                                                                                                                                              
			 CUST_NAME agentName,                                                                                                                                                                                        
			 CONFIRM_IND confirmDebit,  
			 CONFIRM_IND oldConfirmDebit,  
			 TO_CHAR(FROM_DATE,'DDMONYY') fromDate,
			 TO_CHAR(TO_DATE,'DDMONYY') toDate,  
			 TO_CHAR(CONFIRM_DATE,'DDMONYY HH24:MI') confirmDate,
			 TO_CHAR(START_DATE,'DDMONYY HH24:MI') startDate,
			 TO_CHAR(DUE_DATE,'DDMONYY') dueDate,
			 DEBIT_TOTAL chrgAmt,  
			 trim(to_char(NVL(DEBIT_TOTAL,0),'999,999,999,999,999,999,999,999,999,999,999,999.99')) chrgAmtDisplay,  
			 START_IND startInd,
			 START_IND oldStartInd,
			 START_USER startUser,
			 CONFIRM_USER confirmUser,                                                                                                                                                                   
			 TO_CHAR(LAST_SENT_DATE,'DDMONYY HH24:MI') lastSentDate,                                                                                                                                                                                           
			 LAST_SEND_USER lastSentUser,
			 DEBIT_NOTE pdfFile
 	         FROM BILL_DEBIT_NOTE_DTLS
 	         <![CDATA[
			 WHERE to_date(to_char(FROM_DATE,'DDMONYY'),'DDMONYY') >= TO_DATE(#fromDate#||' '||'000000','DDMONYY HH24MISS') 
			 AND to_date(to_char(TO_DATE,'DDMONYY'),'DDMONYY') <= TO_DATE(#toDate#||' '||'235959','DDMONYY HH24MISS')
			 ]]>
		<isNotEmpty property="agentName">
			AND CUST_NAME = #agentName#
		</isNotEmpty>
	    <isNotEmpty property="finCode">
			AND FIN_CODE = #finCode#
		</isNotEmpty>
		ORDER BY CUST_NAME ASC
	</select>
	
	
	<select id="printTowTimes" parameterClass="java.lang.String" resultClass="java.lang.String">
		select count(1) from bill_inv_dtl where inv_no = #invNo# and itm_code = 'SECRCHEK'
	</select>
	
    <update id="updateDebitNoteStartStatus"  parameterClass="cargo.cms.finance.report.bo.FinanceTransReportBO">
	update BILL_DEBIT_NOTE_DTLS
		set START_IND = NVL(#startInd#,'N'),
	    	START_USER = #userID#,
	    	START_DATE = SYSDATE
	  where TR_NO = #trNo# and NVL(START_IND,'N') = NVL(#oldStartInd#,'N') and NVL(CONFIRM_IND,'N') = NVL(#oldConfirmDebit#,'N')
	</update>
	
	<update id="updateDebitNoteConfirmStatus"  parameterClass="cargo.cms.finance.report.bo.FinanceTransReportBO">
		update BILL_DEBIT_NOTE_DTLS
		set CONFIRM_IND = NVL(#confirmDebit#,'N'),
	    	CONFIRM_USER = #userID#,
	    	CONFIRM_DATE = sysdate
	  where TR_NO = #trNo# and  NVL(CONFIRM_IND,'N') = NVL(#oldConfirmDebit#,'N')
	</update>
	
	<select id="fetchSentDebitNoteList" parameterClass="cargo.cms.finance.report.bo.FinanceTransReportBO" resultClass="cargo.cms.finance.report.bo.FinanceTransReportBO">
	SELECT TR_NO trNo,
			 TO_CHAR(LAST_SENT_DATE,'DDMONYY HH24:MI') lastSentDate,                                                                                                                                                                                           
			 CUST_NAME agentName,                                                                                                                                                                                        
       FIN_CODE finCode,                                                                                                                                                                                
       EMAIL emailAdress,
			 #fromDate# fromDate,
			 #toDate# toDate,  
       trim(to_char(NVL(DEBIT_TOTAL,0),'999,999,999,999,999,999,999,999,999,999,999,999.99')) chrgAmtDisplay,  
			 LAST_SEND_USER lastSentUser
       FROM BILL_DEBIT_NOTE_DTLS
 	    <![CDATA[
			 WHERE to_date(to_char(LAST_SENT_DATE,'DDMONYY HH24MISS'),'DDMONYY HH24MISS') > = TO_DATE(#fromDate#||' '||'000000','DDMONYY HH24MISS')
			 and  to_date(to_char(LAST_SENT_DATE,'DDMONYY HH24MISS'),'DDMONYY HH24MISS') <= TO_DATE(#toDate#||' '||'235959','DDMONYY HH24MISS')
			 AND LAST_SENT_DATE is not null
			 ]]>
      <isNotEmpty property="agentName">
          AND CUST_NAME = #agentName#
      </isNotEmpty>
      <isNotEmpty property="finCode">
          AND FIN_CODE = #finCode#
      </isNotEmpty>
		ORDER BY LAST_SENT_DATE DESC, CUST_NAME ASC
	</select>
	
	
	<select id="sqlGetIsStorageChargeWaived" parameterClass="cargo.cms.imprt.bo.ChargesListBO" resultClass="java.lang.String">
		  SELECT STRAGG(STRINGDELIM(B.SHC,',')) SPL FROM  AWB A JOIN 
 (select #awbNo# AWB_NO, #awbDate# AWB_DATE ,Code SHC from mast_code_dtl where code_type = 'SKIP_SHC_CHRG_LST')B
 ON A.AWB_NO = B.AWB_NO AND A.AWB_DATE = B.AWB_DATE
 AND (NVL(SPL_CODE1,'N') = B.SHC OR 
     NVL(SPL_CODE2,'N') = B.SHC OR 
     NVL(SPL_CODE3,'N') = B.SHC OR 
     NVL(SPL_CODE4,'N') = B.SHC OR 
     NVL(SPL_CODE5,'N') = B.SHC OR 
     NVL(SPL_CODE6,'N') = B.SHC OR 
     NVL(SPL_CODE7,'N') = B.SHC OR 
     NVL(SPL_CODE8,'N') = B.SHC OR 
     NVL(SPL_CODE9,'N') = B.SHC)
     WHERE A.AWB_NO = #awbNo# and A.AWB_DATE = #awbDate#
	</select>
	
	
	
	<insert id="insertNotCreatedCharges" parameterClass="cargo.cms.imprt.bo.ChargesListBO">
			Insert into BILL_SKIPPED_CHARGE (AWB_NO,AWB_DATE,SHC,CUST_NO,CUST_NAME,ACCS_HNDLR,REL_IND,STRG_CHRG,CR_DATE,CR_USER_ID,LM_DATE,LM_USER_ID) 
				select #awbNo#,
						#awbDate#,
						#shcString# , 
						#custNo#,
						#custName#,
						(select HDLG_AGENT from (SELECT HDLG_AGENT from cst_awb where ACCS_IND = 'INT' and awb_no = #awbNo# and awb_date= #awbDate# order by cr_date desc) where rownum=1),
						(select REL_IND from (SELECT REL_IND from cst_awb where ACCS_IND = 'INT' and awb_no = #awbNo# and awb_date= #awbDate# order by cr_date desc) where rownum=1),
						null,
						sysdate,
						#crUserId#,
						SYSDATE,
						#crUserId# FROM DUAL  
	</insert>
	
	
	
	<select id="fetchSkippedChargeRecords" parameterClass="cargo.cms.finance.report.bo.FinanceTransReportBO" resultClass="cargo.cms.finance.report.bo.FinanceTransReportBO">
	  SELECT AWB_NO  awbNo,
			 AWB_DATE awbDate,         
			 SHC shcString, 
			 CUST_NO agentCode,       
			 CUST_NAME agentName, 
			 ACCS_HNDLR accHandler, 
			 (SELECT CODE_DESC FROM MAST_CODE_DTL WHERE CODE_TYPE = 'ACCS_REL_IND' AND CODE = REL_IND) relInd,  
			 #fromDate# fromDate,
			 #toDate#  toDate ,
			(SELECT INTIME FROM (SELECT TO_CHAR(NVL(ACT_DATE,SCH_DATE),'DDMONYY')||' '||
            SUBSTR(TRIM(TO_CHAR(NVL(ACT_TIME,SCH_TIME),'0000')),0,2)||':'||	SUBSTR(TRIM(TO_CHAR(NVL(ACT_TIME,SCH_TIME),'0000')),3,4) INTIME,CARSHP.AWB_NO AWB_NO,CARSHP.AWB_DATE AWB_DATE FROM IMP_CAR_SHP CARSHP
		        	 join flt_opr opr on CARSHP.FLT_KEY = opr.FLT_KEY AND CARSHP.FLT_DATE = OPR.SCH_DATE 		         
		        order by NVL(ACT_DATE,SCH_DATE), NVL(ACT_TIME,SCH_TIME)) where awb_no=B.AWB_NO AND AWB_DATE=B.AWB_DATE and rownum=1		) inTIme,
		        TO_CHAR(CR_DATE,'DDMONY HH24:MI') outTime 	 		       
	  FROM BILL_SKIPPED_CHARGE B
 	         <![CDATA[
			 WHERE to_date(to_char(CR_DATE,'DDMONYY'),'DDMONYY') >= TO_DATE(#fromDate#||' '||'000000','DDMONYY HH24MISS') 
			 AND to_date(to_char(CR_DATE,'DDMONYY'),'DDMONYY') <= TO_DATE(#toDate#||' '||'235959','DDMONYY HH24MISS')
			 ]]>
		<isNotEmpty property="agentName">
			AND CUST_NAME = #agentName#
		</isNotEmpty>
	</select>
	
	<select id="getSrfCreditInvoiceNo" parameterClass="java.lang.String" resultClass="java.lang.String">
	<![CDATA[
	SELECT INV_NO V_INV_NO FROM BILL_INV_DTL INV 
                            JOIN(SELECT MAX(TR_NO) TR_NO, 
                                  SUM(PAID_AMT_CASH) CASH, 
                                  SUM(PAID_AMT_CREDIT) CREDIT 
                                  FROM BILL_CHARGE_DTL 
                                  WHERE SRF_NO = #srfNo# AND STATUS = 'PAID')T
                                  ON INV.CHRG_TR_NO = T.TR_NO WHERE T.CASH =0 AND T.CREDIT > 0
                                  ]]>
	</select>
	<select id="getAdjNoforSrfInvoice" parameterClass="java.lang.String" resultClass="java.lang.Integer">
			SELECT count(1) FROM BILL_ADJ_HD where INV_NO = #invNo#
	</select>
	<select id="getSrfCreditInvoiceNoPartialPay" parameterClass="java.lang.String" resultClass="java.lang.Integer">
	<![CDATA[
		SELECT COUNT(1) FROM BILL_INV_DTL INV 
               JOIN(SELECT MAX(TR_NO) TR_NO, 
                     SUM(PAID_AMT_CASH) CASH, 
                     SUM(PAID_AMT_CREDIT) CREDIT 
                     FROM BILL_CHARGE_DTL 
                     WHERE SRF_NO = #srfNo# AND STATUS = 'PAID')T
                     ON INV.CHRG_TR_NO = T.TR_NO WHERE T.CASH >0 AND T.CREDIT > 0
                     ]]>
	</select>
    <update id="sqlupdateChargedtlforRegenerateSrf" parameterClass="map">
		UPDATE  BILL_CHARGE_DTL 
		set SRF_NO = NVL(#NEW_SRF_NO#,SRF_NO)
			where SRF_NO =  #OLD_SRF_NO# 
	</update>
	<!--  Credit Facility CR work start here  -->
	
	 <!-- remove for credit facilty -->
	<select id="sqlViewCreditBalanceList" parameterClass="map" resultClass="cargo.cms.billing.bo.NewPaymentHeplerBO" >
		SELECT  priority, crdLvl, CUST_NO custNo, CARR_CODE carrCodeLst, CR_TYPE crType, VIRTUAL_ACC virtualAccInd,
       CR_BAL crdBalance,CR_BAL oldCrdBalance,CR_BAL balanceCrd, CR_LMT crdLimit, 
       to_char(CR_EFF_DATE_FROM, 'DDMONYY HH24:MI:SS') crEffDateFrom, to_char(CR_EFF_DATE_TO, 'DDMONYY HH24:MI:SS') crEffDateTo,
       SEQ_NO seqNo , SECURE_YN secureYn, mast_table_name mastTableName, WITHHELD_BKG_AMT withHeldAmt
		FROM v_credit_fecility 
		WHERE 
			UPPER(CUST_NO)= UPPER(#custNo#) 
			and (( (instr( nvl(UPPER(CARR_CODE),'*'), nvl(UPPER(#carrCode#),'**') ) > 0  OR CARR_CODE is null )
          			and ((UPPER(CR_TYPE) = 'GEN') 
          		or  nvl(UPPER(CR_TYPE),'**') = UPPER(DECODE(#crType#,'IO','Import_OBC','IG','Import_GEN','EO','Export_OBC','EG','Export_GEN')))))
			AND TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY')  &lt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY')
      AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY')&gt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') 
      AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY')		&gt;= TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY')
      and nvl(status,'*') != 'VOID' order by priority , SECURE_YN desc
	</select>
<select id="getBookingCreditBalList" parameterClass="cargo.cms.billing.bo.NewPaymentHeplerBO" resultClass="cargo.cms.billing.bo.NewPaymentHeplerBO">
	 <![CDATA[
		SELECT crdLvl crdLvl, NVL(SUM(CR_BAL), 0) crdBalance, NVL(SUM(AGTTAB.WITHHELD_BKG_AMT), 0) amtAgnstBkg, 
			(NVL(sum(CR_BAL), 0) - to_number(NVL(sum(agtTab.WITHHELD_BKG_AMT), 0))) netCreditBalanceAvlb
  				FROM V_CREDIT_FECILITY agtTab
					WHERE NVL(AGTTAB.STATUS,'*') <> 'VOID' 
        				AND CR_EFF_DATE_FROM <= TRUNC(SYSDATE) AND NVL(CR_EFF_DATE_TO, TRUNC(SYSDATE)) >= TRUNC(SYSDATE)  
   						and agtTab.CUST_NO = #custNo#
		           	and ((instr( nvl(UPPER(CARR_CODE),'*'), nvl(UPPER(#carrCode#),'**') ) > 0  OR CARR_CODE is null )
          			and ((UPPER(CR_TYPE) = 'GEN') or nvl(UPPER(CR_TYPE),'**') = UPPER('IMPORT_GEN')))
     ]]>
      	<isEqual prepend="AND" property="searchType" compareValue="AGENT">
    			CRDLVL in ('AGENT_LVL','DM_LVL','VIRTUAL_LVL_GEN','VIRTUAL_LVL','CPCT_LVL','CPCT_LVL_GEN') 
		</isEqual>
		
		<isEqual prepend="AND" property="searchType" compareValue="AIRLINE">
    			CRDLVL IN ('AGENT_LVL','DM_LVL','VIRTUAL_LVL_GEN','VIRTUAL_LVL','AIRL_LVL_GEN','AIRL_LVL')
		</isEqual>
      		group by crdLvl	
   	</select>	
	<update id="upd_booking_airl_withheld_amount_CUST_AGENT_AIRL_CREDIT" parameterClass="map">
		update CUST_AGENT_AIRL_CREDIT
		set WITHHELD_BKG_AMT = #whldAmt#
		where CUST_NO = #agtCode# 
		and seq_No = #seqNo# AND nvl(upper(Status),'**') &lt;&gt; 'VOID'
	</update>
	
	<update id="upd_booking_airl_withheld_amount_CUST_AGENT_CREDIT" parameterClass="map">
		update CUST_AGENT_CREDIT
		set WITHHELD_BKG_AMT = #whldAmt#
		where CUST_NO = #agtCode# 
		and seq_No = #seqNo# AND nvl(upper(Status),'**') &lt;&gt; 'VOID'
	</update>
	
	<update id="upd_booking_airl_withheld_amount_CUST_AGENT_DM_APP" parameterClass="map">
		update CUST_AGENT_AIRL_CREDIT
		set WITHHELD_BKG_AMT = #whldAmt#
		where CUST_NO = #agtCode# 
		and seq_No = #seqNo# AND nvl(upper(Status),'**') &lt;&gt; 'VOID'
	</update>
	
       	<update id="upd_booking_airl_withheld_amount_CUST_AGENT_LEVEL_CRD" parameterClass="map">
		update CUST_AGENT_LEVEL_CRD
		set WITHHELD_BKG_AMT = #whldAmt#
		where CUST_NO = #agtCode#  and seq_no = #seqNo#  AND nvl(upper(Status),'**') &lt;&gt; 'VOID'
	</update>

	<update id="upd_booking_agt_withheld_amount_CUST_AGENT_CREDIT" parameterClass="map">
		update CUST_AGENT_CREDIT
		set WITHHELD_BKG_AMT = #whldAmt#
		where CUST_NO = #agtCode#  and seq_No = #seqNo# AND nvl(upper(Status),'**') &lt;&gt; 'VOID'
	</update>
	
	<update id="upd_booking_agt_withheld_amount_CUST_AGENT_LEVEL_CRD" parameterClass="map">
		update CUST_AGENT_LEVEL_CRD
		set WITHHELD_BKG_AMT = #whldAmt#
		where CUST_NO = #agtCode#  and seq_No = #seqNo# AND nvl(upper(Status),'**') &lt;&gt; 'VOID'
	</update>
	
	<update id="upd_booking_agt_withheld_amount_CUST_AGENT_DM_APP" parameterClass="map">
		update CUST_AGENT_AIRL_CREDIT
		set WITHHELD_BKG_AMT = #whldAmt#
		where CUST_NO = #agtCode# 
		and seq_No = #seqNo# AND nvl(upper(Status),'**') &lt;&gt; 'VOID'
	</update>
	 <!-- remove for credit facilty -->
	<select id="sqlViewCreditBalanceList_Agent" parameterClass="map" resultClass="cargo.cms.billing.bo.NewPaymentHeplerBO" >
		SELECT  priority, crdLvl, CUST_NO custNo, CARR_CODE carrCodeLst, CR_TYPE crType, VIRTUAL_ACC virtualAccInd,
       CR_BAL crdBalance,CR_BAL oldCrdBalance,CR_BAL balanceCrd, CR_LMT crdLimit, 
       to_char(CR_EFF_DATE_FROM, 'DDMONYY HH24:MI:SS') crEffDateFrom, to_char(CR_EFF_DATE_TO, 'DDMONYY HH24:MI:SS') crEffDateTo,
       SEQ_NO seqNo , SECURE_YN secureYn, mast_table_name mastTableName
		FROM v_credit_fecility 
		WHERE 
			UPPER(CUST_NO)= UPPER(#custNo#) 
			AND TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY')  &lt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY')
      AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY')&gt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') 
      AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY')		&gt;= TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY')
      and nvl(status,'*') != 'VOID' order by priority , SECURE_YN desc
	</select>
	
	<select id="sqlViewCreditBalance_SUM_CRD_BAL" parameterClass="map" resultClass="cargo.cms.billing.bo.NewPaymentHeplerBO" >
		SELECT   crdLvl, sum(CR_BAL) crdBalance
		FROM v_credit_fecility    
		WHERE 
			UPPER(CUST_NO)= UPPER(#custNo#) 
			AND ( instr( nvl(UPPER(CARR_CODE),'**'), nvl(UPPER(#carrCode#),'**') ) > 0 
            OR ((CARR_CODE is null) and UPPER(CR_TYPE) = 'GEN')
            or ((CARR_CODE is null) and nvl(UPPER(CR_TYPE),'**') = UPPER(DECODE(#crType#,'IO','Import_OBC','IG','Import_GEN','EO','Export_OBC','EG','Export_GEN'))))
			AND TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY')  &lt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY')
      		AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY')		&gt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') 
       		AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY')		&gt;= TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY')
      
       group by crdLvl
	</select>
	
	<select id="sqlCreditBalance_SUM" parameterClass="map" resultClass="java.lang.String" >
		SELECT    sum(nvl(CR_BAL,0)) crdBalance
		FROM v_credit_fecility    
		WHERE 
			UPPER(CUST_NO)= UPPER(#custNo#) 
			AND ( instr( nvl(UPPER(CARR_CODE),'**'), nvl(UPPER(#carrCode#),'**') ) > 0 
            OR ((CARR_CODE is null) and UPPER(CR_TYPE) = 'GEN')
            or ( (CARR_CODE is null) and nvl(UPPER(CR_TYPE),'**') = UPPER(DECODE(#crType#,'IO','Import_OBC','IG','Import_GEN','EO','Export_OBC','EG','Export_GEN'))))
			AND (TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY') ) &lt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY')
      AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY')		&gt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY')  
	</select>
	
	<select id="sqlViewCreditBalanceList_NonAwb" parameterClass="map" resultClass="cargo.cms.billing.bo.NewPaymentHeplerBO" >
		SELECT  priority, crdLvl, CUST_NO custNo, CARR_CODE carrCodeLst, CR_TYPE crType, VIRTUAL_ACC virtualAccInd,
       CR_BAL crdBalance,CR_BAL oldCrdBalance,CR_BAL balanceCrd, CR_LMT crdLimit, 
       to_char(CR_EFF_DATE_FROM, 'DDMONYY HH24:MI:SS') crEffDateFrom, to_char(CR_EFF_DATE_TO, 'DDMONYY HH24:MI:SS') crEffDateTo,
       SEQ_NO seqNo , SECURE_YN secureYn, mast_table_name mastTableName
		FROM v_credit_fecility 
		WHERE 
			UPPER(CUST_NO)= UPPER(#custNo#) 
			and ( instr( nvl(UPPER(CARR_CODE),'*'), nvl(UPPER(#carrCode#),'**') ) > 0  
      				and (UPPER(CR_TYPE) = 'GEN'
          					or  nvl(UPPER(CR_TYPE),'**') like  UPPER(#crType#||'%')) )          			
			AND TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY')  &lt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY')
      AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY')&gt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') 
      AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY')		&gt;= TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY')
      and nvl(status,'*') != 'VOID' order by priority , SECURE_YN desc
	</select>
		
	<select id="sqlViewCreditBalance_SUM_CRD_BAL_NonAwb" parameterClass="map" resultClass="cargo.cms.billing.bo.NewPaymentHeplerBO" >
		SELECT   crdLvl, sum(CR_BAL) crdBalance
		FROM v_credit_fecility    
		WHERE 
			UPPER(CUST_NO)= UPPER(#custNo#) 
			and ( instr( nvl(UPPER(CARR_CODE),'*'), nvl(UPPER(#carrCode#),'**') ) > 0  
      				and (UPPER(CR_TYPE) = 'GEN'
          					or  nvl(UPPER(CR_TYPE),'**') like  UPPER(#crType#||'%')) )
			AND TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY')  &lt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY')
      		AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY')		&gt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') 
       		AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY')		&gt;= TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY')
      
       group by crdLvl
	</select>
	
	<select id="sqlCreditBalance_SUM_NonAwb" parameterClass="map" resultClass="java.lang.String" >
		SELECT    sum(nvl(CR_BAL,0)) crdBalance
		FROM v_credit_fecility    
		WHERE 
			UPPER(CUST_NO)= UPPER(#custNo#) 
			and ( instr( nvl(UPPER(CARR_CODE),'*'), nvl(UPPER(#carrCode#),'**') ) > 0  
      				and (UPPER(CR_TYPE) = 'GEN'
          					or  nvl(UPPER(CR_TYPE),'**') like  UPPER(#crType#||'%')) )
			AND (TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY') ) &lt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY')
      AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY')		&gt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY')  
	</select>
	
	<select id="fetchBillInvCrdDtlForAdj" parameterClass="cargo.cms.billing.bo.PaymentHeplerChargeBO" resultClass="cargo.cms.billing.bo.PaymentHeplerChargeBO" >
		SELECT 	inv_no invNo, inv_doc_line_no invDocLineNo, CR_TYPE crType, cr_Lvl crdLvl, cr_amt credit, airline airline,  
      			CUST_NO custNo,  CR_TYPE crType,
       			Balance crdBalance,Balance oldCrdBalance,Balance balanceCrd,
       			MAST_TABLE_NAME tableName ,   MAST_SEQ_NO seqNo , seq_no crdDtlSeqNo
		FROM 	bill_inv_crd_dtl 
		WHERE 	inv_no = #invNo# and inv_doc_line_no = #invDocLineNo# and rownum = 1
	</select>
	
	<select id="sqlGet_CUST_AGENT_AIRL_CREDIT_BAL" parameterClass="java.lang.String" resultClass="java.lang.String" >
	    SELECT cr_bal FROM CUST_AGENT_AIRL_CREDIT where seq_no = #seqNo#
	</select>
	<select id="sqlGet_CUST_AGENT_CREDIT" parameterClass="java.lang.String" resultClass="java.lang.String" >
	    SELECT cr_bal FROM CUST_AGENT_CREDIT where seq_no = #seqNo#
	</select>
	
	<select id="sqlGetCreditBalanceDetailList" parameterClass="cargo.cms.billing.bo.PaymentHeplerChargeBO" resultClass="cargo.cms.billing.bo.PaymentHeplerChargeBO" >
		select cr_type CrType, cr_lvl crdLvl, CUST_NO custNo , AIRLINE airline, CR_AIRLINE crAirline, 
			MAST_TABLE_NAME tableName, mast_seq_no seqNo, inv_no invNo, inv_doc_line_no invDocLineNo,
			cr_AMT crdBalance,cr_AMT oldCrdBalance,cr_AMT balanceCrd 
	 	from bill_inv_crd_dtl where inv_no = #invNo# 
 	</select>
 	<select id="sqlGetCreditBalanceDetailListNew" parameterClass="cargo.cms.billing.bo.PaymentHeplerChargeBO" resultClass="cargo.cms.billing.bo.PaymentHeplerChargeBO" >
	 	
	 SELECT CR_TYPE CrType, CR_LVL crdLvl, CUST_NO custNo, AIRLINE airline, CR_AIRLINE crAirline, 
			MAST_TABLE_NAME tableName, mast_seq_no seqNo, INV_NO invNo, INV_DOC_LINE_NO invDocLineNo,
			CR_AMT + nvl(ACC_ADJ_AMT,0) crdBalance, 
		    CR_AMT + nvl(ACC_ADJ_AMT,0) oldCrdBalance, 
		    CR_AMT + nvl(ACC_ADJ_AMT,0) balanceCrd    	
    FROM BILL_INV_CRD_DTL  where CR_AMT + nvl(ACC_ADJ_AMT,0) > 0  and inv_no =  #invNo# 
 	</select>
	<select id="sqlGet_cust_agent_level_crd" parameterClass="java.lang.String" resultClass="java.lang.String" >
	    SELECT cr_bal FROM cust_agent_level_crd where seq_no = #seqNo#
	</select>
	<select id="sqlGet_CUST_AGENT_DM_APP" parameterClass="java.lang.String" resultClass="java.lang.String" >
	    SELECT CR_AMT FROM CUST_AGENT_DM_APP where seq_no = #seqNo#
	</select>
	
	<select id="sqlViewCreditBalance_AGENT_LVL_CRD_BAL" parameterClass="map" resultClass="java.lang.String" >
		SELECT sum(nvl(CR_BAL,0)) 
		FROM cust_agent_level_crd 
		WHERE 
			UPPER(CUST_NO)=UPPER(#custNo#)      
			AND (TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY') 
			&lt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') 
			&gt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') )
			AND nvl(upper(Status),'**') &lt;&gt; 'VOID'
	</select>
	
	<select id="sqlCheck_AIRL_VIRTUAL_CARR" parameterClass="map" resultClass="java.lang.Integer" >
		SELECT count(1) 
		FROM CUST_AGENT_VIRTUAL_CREDIT 
		WHERE 
			UPPER(CUST_NO)=UPPER(#custNo#) 
			AND instr( nvl(UPPER(CARR_CODE),'*'), nvl(UPPER(#carrCode#),'**') ) > 0 AND UPPER(CR_TYPE) = 'GEN'
			AND (TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY') 
			&lt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') 
			&gt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') )
			AND nvl(upper(Status),'**') &lt;&gt; 'VOID'
	</select>
	
	<select id="sqlCheck_AIRL_VIRTUAL" parameterClass="map" resultClass="java.lang.Integer" >
		SELECT count(1) 
		FROM CUST_AGENT_VIRTUAL_CREDIT 
		WHERE 
			UPPER(CUST_NO)=UPPER(#custNo#) 
			and carr_code is null
			AND UPPER(CR_TYPE) = 'GEN'
			AND (TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY') 
			&lt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') 
			&gt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') )
			AND nvl(upper(Status),'**') &lt;&gt; 'VOID'
	</select>
	
	<select id="sqlCheck_AIRL_VIR_CATALOG_CARR" parameterClass="map" resultClass="java.lang.Integer" >
		SELECT count(1) 
		FROM CUST_AGENT_VIRTUAL_CREDIT 
		WHERE 
			UPPER(CUST_NO)=UPPER(#custNo#) 
			AND instr( nvl(UPPER(CARR_CODE),'*'), nvl(UPPER(#carrCode#),'**') ) > 0 AND UPPER(CR_TYPE) &lt;&gt; 'GEN'
			AND (TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY') 
			&lt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') 
			&gt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') )
			AND nvl(upper(Status),'**') &lt;&gt; 'VOID'
	</select>
	
	<select id="sqlCheck_AIRL_VIR_CATALOG" parameterClass="map" resultClass="java.lang.Integer" >
		SELECT count(1) 
		FROM CUST_AGENT_VIRTUAL_CREDIT 
		WHERE 
			UPPER(CUST_NO)=UPPER(#custNo#) and CARR_CODE is null AND UPPER(CR_TYPE) &lt;&gt; 'GEN'
			AND (TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY') 
			&lt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') 
			&gt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') )
			AND nvl(upper(Status),'**') &lt;&gt; 'VOID'
	</select>
	
	<select id="sqlCheck_AGENT_LVL_CARR" parameterClass="map" resultClass="java.lang.Integer" >
		SELECT count(1) 
		FROM cust_agent_level_crd 
		WHERE 
			UPPER(CUST_NO)=UPPER(#custNo#) 
			AND instr( UPPER(CARR_CODE), nvl(UPPER(#carrCode#),'**') ) > 0 
			AND (TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY') 
			&lt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') 
			&gt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') )
			AND nvl(upper(Status),'**') &lt;&gt; 'VOID'
	</select>
	
	<select id="sqlCheck_AGENT_LVL" parameterClass="map" resultClass="java.lang.Integer" >
		SELECT count(1) 
		FROM cust_agent_level_crd 
		WHERE 
			UPPER(CUST_NO)=UPPER(#custNo#) and instr( nvl(UPPER(CARR_CODE),'*'), nvl(UPPER(#carrCode#),'**') ) = 0  
			AND (TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY') 
			&lt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') 
			&gt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') )
			AND nvl(upper(Status),'**') &lt;&gt; 'VOID'
	</select>
	
	<select id="sqlCheck_AIRL_GEN_CARR" parameterClass="map" resultClass="java.lang.Integer" >
	SELECT count(1) 
		FROM CUST_AGENT_AIRL_CREDIT 
		WHERE 
		UPPER(CUST_NO)=UPPER(#custNo#)
		AND UPPER(CR_TYPE) = 'GEN'
		AND instr( UPPER(CARR_CODE), nvl(UPPER(#carrCode#),'**') ) > 0 
		AND (TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY') &lt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') &gt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') )
		AND nvl(upper(Status),'**') &lt;&gt; 'VOID'
	</select>
	
	<select id="sqlCheck_AIRL_GEN" parameterClass="map" resultClass="java.lang.Integer" >
	SELECT count(1) 
		FROM CUST_AGENT_AIRL_CREDIT 
		WHERE 
		UPPER(CUST_NO)=UPPER(#custNo#) and instr( nvl(UPPER(CARR_CODE),'*'), nvl(UPPER(#carrCode#),'**') ) = 0  
		AND UPPER(CR_TYPE) = 'GEN'
		AND (TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY') &lt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') &gt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') )
		AND nvl(upper(Status),'**') &lt;&gt; 'VOID'
	</select>
	
	<select id="sqlCheck_AIRL_CATALOG_CARR" parameterClass="map" resultClass="java.lang.Integer" >
	SELECT count(1) 
		FROM CUST_AGENT_AIRL_CREDIT 
		WHERE 
		UPPER(CUST_NO)=UPPER(#custNo#)
		<![CDATA[
		AND UPPER(CR_TYPE) <> 'GEN'
		AND nvl(upper(Status),'**') <> 'VOID'
		]]>
		AND instr( UPPER(CARR_CODE), nvl(UPPER(#carrCode#),'**') ) > 0 
		AND (TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY') &lt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') &gt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') )
	</select>
	
	<select id="sqlCheck_AIRL_CATALOG" parameterClass="map" resultClass="java.lang.Integer" >
	SELECT count(1) 
		FROM CUST_AGENT_AIRL_CREDIT 
		WHERE 
		UPPER(CUST_NO)=UPPER(#custNo#) and instr( nvl(UPPER(CARR_CODE),'*'), nvl(UPPER(#carrCode#),'**') ) = 0  
		<![CDATA[
		AND UPPER(CR_TYPE) <> 'GEN'
		AND nvl(upper(Status),'**') <> 'VOID'
		]]>
		AND (TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY') &lt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') &gt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') )
	</select>
	
	<select id="sqlCheck_DM_LVL" parameterClass="map" resultClass="java.lang.Integer" >
		SELECT  count(1) 
		FROM CUST_AGENT_DM_APP    
		WHERE 
			UPPER(CUST_NO)= UPPER(#custNo#)			
			AND (TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY') ) &lt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY')
      		AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY')		&gt;= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') 
	</select>
	
	<select id="sqlCheck_CPCT_GEN_CARR" parameterClass="map" resultClass="java.lang.Integer" >
		<![CDATA[ SELECT count(1) 
		FROM CUST_AGENT_CREDIT 
		WHERE 
			UPPER(CUST_NO)=UPPER(#custNo#) 
			AND instr( nvl(UPPER(CARR_CODE),'*'), nvl(UPPER(#carrCode#),'**') ) > 0 
			AND (TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY') 
			<= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') 
			>= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') )
			AND UPPER(CR_TYPE) = UPPER('GEN') 
 			AND nvl(upper(Status),'**') <> 'VOID'
			]]> 
	</select>
	
	<select id="sqlCheck_CPCT_GEN" parameterClass="map" resultClass="java.lang.Integer" >
		<![CDATA[ SELECT count(1) 
		FROM CUST_AGENT_CREDIT 
		WHERE 
			UPPER(CUST_NO)=UPPER(#custNo#) and instr( nvl(UPPER(CARR_CODE),'*'), nvl(UPPER(#carrCode#),'**') ) = 0 
			AND (TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY') 
			<= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') 
			>= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') )
			AND UPPER(CR_TYPE) = UPPER('GEN')
			AND nvl(upper(Status),'**') <> 'VOID'
			]]> 
	</select>
	
	<select id="sqlCheck_CPCT_CATALOG_CARR" parameterClass="map" resultClass="java.lang.Integer" >
	<![CDATA[
	SELECT count(1) 
		FROM CUST_AGENT_CREDIT 
		WHERE 
			UPPER(CUST_NO)=UPPER(#custNo#) 
			AND instr( nvl(UPPER(CARR_CODE),'*'), nvl(UPPER(#carrCode#),'**') ) > 0 
			AND (TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY') 
			<= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') 
			>= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') )
			AND UPPER(CR_TYPE) <> UPPER('GEN')
			AND nvl(upper(Status),'**') <> 'VOID'
			]]> 
	</select>
	
	<select id="sqlCheck_CPCT_CATALOG" parameterClass="map" resultClass="java.lang.Integer" >
	<![CDATA[
	SELECT count(1) 
		FROM CUST_AGENT_CREDIT 
		WHERE 
			UPPER(CUST_NO)=UPPER(#custNo#) and instr( nvl(UPPER(CARR_CODE),'*'), nvl(UPPER(#carrCode#),'**') ) = 0 
			AND (TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY') 
			<= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') 
			>= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') )
			AND UPPER(CR_TYPE) <> UPPER('GEN')
			AND nvl(upper(Status),'**') <> 'VOID'
			]]> 
	</select>
	<select id="sqlGet_Inv_doc_line_no" parameterClass="cargo.cms.billing.bo.PaymentHeplerChargeBO" resultClass="java.lang.String" >
	<![CDATA[
		select doc_line_no from bill_inv_dtl 
		WHERE inv_no  = #invNo# and chrg_tr_no = #trNo# 
		and  itm_code = #itemCode# and nvl(itm_code_SFX,'**') = nvl(#itemCodeSfx#,'**')
		and rev_ind = #revInd#
	]]> 
	</select>
	
	<select id="sqlGet_MAX_Inv_doc_line_no" parameterClass="cargo.cms.billing.bo.InvoiceBO" resultClass="java.lang.Integer" >
	<![CDATA[
		select nvl(max(doc_line_no),0) from bill_inv_dtl 
		WHERE inv_no  = #invoiceNo# 
	]]> 
	</select>
	
<select id="sqlGet_INV_AWB_Info" parameterClass="map" resultClass="cargo.cms.billing.bo.AwbBO" >
		<![CDATA[
			select bcd.awb_No awbNo, to_char(bcd.awb_date,'DDMONYY') awbDate
			from bill_inv_dtl bid 
			join bill_charge_dtl bcd on bid.chrg_tr_no = bcd.tr_no 
			where bcd.awb_No is not null and bcd.awb_date is not null
			and bid.inv_no = #invoiceNo# and bid.doc_line_no = #docLineNo# and rownum = 1
		]]> 
	</select>
	
	<select id="sqlGet_ADJ_AWB_Info" parameterClass="map" resultClass="cargo.cms.billing.bo.AwbBO" >
		<![CDATA[
			select bcd.awb_No awbNo, to_char(bcd.awb_date,'DDMONYY') awbDate
			from bill_adj_dtl bad 
			join bill_inv_dtl bid on bad.inv_no = bid.inv_no and bad.idoc_line_no = bid.doc_line_no
			join bill_charge_dtl bcd on bid.chrg_tr_no = bcd.tr_no 
			where bcd.awb_No is not null and bcd.awb_date is not null
			and bad.adj_no = #adjNo# and bad.doc_line_no = #docLineNo# and rownum = 1
		]]> 
	</select>


	
	<update id="updateNewInvoicePaymentDtl" parameterClass="cargo.cms.billing.bo.InvoiceDTLBO">
	UPDATE BILL_INV_CRD_DTL 
	SET CR_AMT = NVL(CR_AMT,0)+NVL(#creditAmt#,0),
	CR_DATE = SYSDATE
	WHERE INV_NO = #invoiceNo# AND inv_doc_line_no = #docLineNo# 
	and NVL(CR_TYPE,'*') = DECODE(INSTR(#creditLvl#,'AGENT_LVL'),1,'*',(DECODE(UPPER(#creditType#),'GENERAL','GEN','IMPORT GEN','IG','IMPORT OBC','IO','EXPORT GEN','EG','EXPORT OBC','EO',UPPER(#creditType#))))
	AND CR_LVL = #creditLvl# AND CUST_NO = #agentCode# AND NVL(AIRLINE,'*') = NVL(#airline#,'*')
	AND NVL(CR_AIRLINE,'*') = NVL(#carrList#,'*') and mast_seq_no = #mastSeqNo#
	</update>
	
	<insert id="createNewInvoicePaymentDtl" parameterClass="cargo.cms.billing.bo.InvoiceDTLBO">
	INSERT INTO BILL_INV_CRD_DTL(INV_NO,inv_doc_line_no,CR_TYPE,CR_LVL,CR_AMT,CUST_NO,AIRLINE,CR_DATE,BALANCE, trans_desc,
	CR_AIRLINE,mast_seq_no,mast_table_name) 
	VALUES (#invoiceNo#,#docLineNo#,
	DECODE(instr(#creditLvl#,'AGENT_LVL'),1,null,(DECODE(UPPER(#creditType#),'GENERAL','GEN','IMPORT GEN','IG','IMPORT OBC','IO','EXPORT GEN','EG','EXPORT OBC','EO',UPPER(#creditType#))))
	,#creditLvl#,#creditAmt#,#agentCode#,#airline#,sysdate,#balance#,#description#,#carrList#,#mastSeqNo#,#mastTableName#)
	</insert>
	
	<insert id="createNewInvoiceDtlSub" parameterClass="cargo.cms.billing.bo.InvoiceDTLBO">
		INSERT INTO BILL_INV_DTL_SUB(  TR_NO, INV_NO, INV_DOC_LINE_NO, CR_TYPE, CR_LVL, CR_AMT, CUST_NO,AIRLINE, CR_AIRLINE,
	    CR_USER_ID, CR_DATE, SEQ_NO, TABLE_NAME )  
	     VALUES (BILL_INV_DTL_SUB_SEQ.NEXTVAL,#invoiceNo#,#docLineNo#,
	     DECODE(UPPER(#creditType#),'GENERAL','GEN','IMPORT GEN','IG','IMPORT OBC','IO','EXPORT GEN','EG','EXPORT OBC','EO',UPPER(#creditType#))  ,
	     #creditLvl#,#creditAmt#,#agentCode#,#airline#,#carrList#,#userID#,sysdate,#mastSeqNo#,#mastTableName#)  
	</insert>
	
	<parameterMap id="newCrdBalanceMap" class="map" >
		<parameter property="INV_NO" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	</parameterMap>
	<procedure id="newUpdateCreditBalance" parameterMap="newCrdBalanceMap" >
		{call PKG_BILLING_NEW.UPDATE_CREDIT_BALANCE(?)}
	</procedure>
	<procedure id="newUpdateAdjustmentBalance" parameterMap="newCrdBalanceMap" >
		{call PKG_BILLING_NEW.UPDATE_ADJUSTMENT_BALANCE(?)}
	</procedure>
	
	
	<!-- Void SRF queries -->
	
	<select id="sqlGet_SUM_BILL_CHRG_AMT" parameterClass="java.lang.String" resultClass="java.lang.String" >
		select SUM(CHRG_AMT) 
		from bill_inv_dtl invdtl
		join BILL_CHARGE_DTL chrgDtl on chrgDtl.tr_no = invdtl.chrg_tr_no
		where inv_no  = #invoiceNo#
	</select>
	
	<select id="sqlCheck_AdjNo" parameterClass="java.lang.String" resultClass="java.lang.Integer" >
		select count(1)  from BILL_ADJ_DTL where inv_no = #invoiceNo#
	</select>			
	
	<select id="sqlGet_inv_no_dtl_Type" parameterClass="java.lang.String" resultClass="cargo.cms.billing.bo.PaymentHeplerChargeBO" >
		select inv_no invNo, to_char(inv_date,'DDMONYY') invDate, AWB_NO awbNo, to_char(AWB_date,'DDMONYY') awbDate, 
		CARR_CODE carrCode, SRF_NO srfNo, RCL_NO rclNo, ULD_KEY uldKey, FLT_KEY fltKey, to_char(FLT_DATE,'DDMONYY') fltDate 
		from bill_inv_hd   where inv_no = #invoiveNo#
	</select>  
	
	<select id="sqlGet_srf_no_awb_no_date" parameterClass="java.lang.String" resultClass="cargo.cms.billing.bo.PaymentHeplerChargeBO" >
		SELECT AWB_NO awbNo,  to_char(AWB_date,'DDMONYY') awbDate FROM IMP_SRF WHERE SRF_NO   =  #srfNo# 
	</select> 
	
	<select id="sqlGet_imp_srf_awb_no_date_ect_hndlr" parameterClass="cargo.cms.billing.bo.PaymentHeplerChargeBO" resultClass="java.lang.String" >
		SELECT ECT_HANDLER FROM IMP_CAR_AWB WHERE  AWB_NO = #awbNo# and AWB_date = #awbDate#	
	</select>  
	
	<select id="sqlGet_rcl_no_awb_no_date" parameterClass="java.lang.String" resultClass="cargo.cms.billing.bo.PaymentHeplerChargeBO" >
		SELECT AWB_NO awbNo,  to_char(AWB_date,'DDMONYY') awbDate FROM EXP_RCL_HD WHERE rcl_NO   =  #rclNo# 
	</select>
	
	<insert id="sqlInsert_BILL_ADJ_HD" parameterClass="cargo.cms.billing.bo.PaymentHeplerChargeBO" >  
		INSERT INTO BILL_ADJ_HD(ADJ_NO, ADJ_DATE, ADJ_TYPE, CR_IND, AR_IND, RSN, AMT_PAID, CUST_NO, INV_NO,
		CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE, CUST_NAME)
		SELECT #adjNo#, SYSDATE, 'CRD', 'N', 'N', 'CR NOTE', #chrgAmt#,
		(select NVL((select cust_no from bill_inv_hd where inv_no=#invNo# and rownum=1),AGENT_CODE) from dual), #invNo#,
		#userID#, SYSDATE, #userID#, SYSDATE, AGENT_NAME
		FROM AWB WHERE AWB_NO = #awbNo# AND AWB_DATE = #awbDate# 
	</insert>
	
	<select id="sqlGet_SUM_BILL_CHRG_INFO" parameterClass="java.lang.String" resultClass="cargo.cms.billing.bo.PaymentHeplerChargeBO" >
		select  AWB_NO awbNo, to_char(AWB_date,'DDMONYY') awbDate, SRF_NO srfNo, RCL_NO rclNo, ULD_KEY uldKey
		 	from bill_inv_dtl invdtl
		 	join BILL_CHARGE_DTL chrgDtl on chrgDtl.tr_no = invdtl.chrg_tr_no
			where inv_no = #invoiceNo# and rownum = 1
	</select>
			
	<select id="sqlGet_BILL_INV_DTL_LIST" parameterClass="java.lang.String" resultClass="cargo.cms.billing.bo.PaymentHeplerChargeBO" >
		SELECT  inv_no invNo, DOC_LINE_NO invDocLineNo, ITM_CODE itemCode, ITM_CODE_SFX itemCodeSfx, 
				CHARGE_AMT chrgAmt,  REV_IND revInd, chrg_tr_no chrgTrNo
		FROM BILL_INV_DTL CRDDTL WHERE CRDDTL.INV_NO =#invoiceNo#
	</select>
	<insert id="sqlInsert_BILL_ADJ_DTL" parameterClass="cargo.cms.billing.bo.PaymentHeplerChargeBO" >  
		INSERT INTO BILL_ADJ_DTL(ADJ_NO, DOC_LINE_NO, INV_NO, IDOC_LINE_NO, ITM_CODE, ITM_CODE_SFX, ORG_AMT, ADJ_AMT, REV_IND,
		CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE)
		values (#adjNo#, #adjDocLineNo#, #invNo#, #invDocLineNo#, #itemCode#, #itemCodeSfx#, #chrgAmt# , '-' || #chrgAmt#, #revInd#,
		#userID#, SYSDATE, #userID#, SYSDATE )
	</insert> 
	<update id="sqlUpdate_BILL_INV_DTL" parameterClass="cargo.cms.billing.bo.PaymentHeplerChargeBO" >  
      	UPDATE BILL_INV_DTL SET ACC_ADJ_AMT = - #chrgAmt# WHERE INV_NO = #invNo# and ITM_CODE = #itemCode#  
   	</update> 
   	<update id="sqlUpdate_BILL_CHARGE_DTL" parameterClass="cargo.cms.billing.bo.PaymentHeplerChargeBO" >  
    	UPDATE BILL_CHARGE_DTL SET ADJ_AMT = nvl(ADJ_AMT,0) - #chrgAmt# , NET_AMT = nvl(NET_AMT,0) - #chrgAmt# WHERE TR_NO = #chrgTrNo#  
   	</update> 
   	
   	<!-- <select id="sqlGet_BILL_INV_CRD_DTL_LIST" parameterClass="java.lang.String" resultClass="cargo.cms.billing.bo.PaymentHeplerChargeBO" >
		SELECT INV_NO invNo, Inv_DOC_LINE_NO invDocLineNo, CRDDTL.CUST_NO custNo , CRDDTL.CR_LVL crdLvl,
			DECODE(CRDDTL.CR_TYPE,'IO','Import_OBC','IG','Import_GEN','EO','Export_OBC','EG','Export_GEN','GEN','GEN',NULL) crType, 
			CRDDTL.CR_TYPE crTypeOne,
	    	CRDDTL.CR_AMT  credit , CRDDTL.AIRLINE airline, CRDDTL.SEQ_NO crdDtlSeqNo,
			CR_AIRLINE carrList, MAST_TABLE_NAME tableName, MAST_SEQ_NO seqNo
	    	FROM BILL_INV_CRD_DTL CRDDTL WHERE CRDDTL.INV_NO =#invoiceNo#
	</select> -->
	<select id="sqlGet_BILL_INV_CRD_DTL_LIST" parameterClass="java.lang.String" resultClass="cargo.cms.billing.bo.PaymentHeplerChargeBO" >
		SELECT INV_NO invNo, Inv_DOC_LINE_NO invDocLineNo, CRDDTL.CUST_NO custNo , CRDDTL.CR_LVL crdLvl,
		DECODE(CRDDTL.CR_TYPE,'IO','Import_OBC','IG','Import_GEN','EO','Export_OBC','EG','Export_GEN','GEN','GEN',NULL) crType, 
		CRDDTL.CR_TYPE crTypeOne,
		CRDDTL.CR_AMT  credit , CRDDTL.AIRLINE airline, CRDDTL.SEQ_NO crdDtlSeqNo,
		CR_AIRLINE carrList, MAST_TABLE_NAME tableName, MAST_SEQ_NO seqNo
		FROM BILL_INV_CRD_DTL CRDDTL WHERE CRDDTL.INV_NO =#invoiceNo#
	</select>
	<insert id="sqlInsert_BILL_INV_CRD_DTL" parameterClass="cargo.cms.billing.bo.PaymentHeplerChargeBO" > 
		INSERT INTO BILL_INV_CRD_DTL(ADJ_NO,ADJ_DOC_LINE_NO,CR_TYPE,CR_LVL,CR_AMT,CUST_NO,AIRLINE,CR_DATE,MAST_TABLE_NAME,  MAST_SEQ_NO,CR_AIRLINE) 
 		VALUES (#adjNo#,#adjDocLineNo#,	#crTypeOne#, #crdLvl#, '-' || #credit#, #custNo#, #airline#,sysdate, #tableName#, #seqNo#, #carrList#)
   	</insert> 
	<select id="sql_SRF_BILL_CHARGE_DTL_Count" parameterClass="java.lang.String" resultClass="java.lang.Integer" >
		select count(1)  from BILL_CHARGE_DTL where PAID_AMT_CASH > 0 and PAID_AMT_CREDIT > 0 AND SRF_NO = #srfNo#;
	</select>
	<update id="sql_UPDATE_SRF_BILL_CHARGE_DTL_Count" parameterClass="cargo.cms.billing.bo.PaymentHeplerChargeBO" > 
		UPDATE BILL_CHARGE_DTL SET STATUS = 'VOID', LM_DATE = SYSDATE, LM_USER_ID = #userID# 
        WHERE TR_NO IN (SELECT CHRG_TR_NO FROM BILL_INV_DTL WHERE INV_NO = #invNo#)
   	</update> 
   	
	<select id="fecthChargesListTrNos" parameterClass="cargo.cms.billing.bo.PaymentHeplerChargeBO" resultClass="cargo.cms.billing.bo.PaymentHeplerChargeBO">
		select c.TR_NO trNo, c.AWB_NO awbNo, to_char(c.AWB_DATE,'DDMONYY') awbDate, c.RCL_NO rclNo, c.ITM_CODE itemCode, c.ITM_CODE_SFX itemCodeSfx, c.STATUS status, 
		c.ITM_DESC itemDesc, c.QTY qty, c.UNIT_PRICE unitPrice,  c.CHRG_AMT amt,  c.CASH_IND cashInd, c.WAVR_IND waiveCharges, 
		c.CUST_NO custNo, c.CUST_NAME custName, c.REV_IND revInd, c.STD_IND stdInd, m.STD_IND stdInd, m.UOM uom, m.UPD_DESC updDesc, m.UPD_RATE updRate, 
		awb.carr_code carrCode, awb.catalog catalog	
		from  BILL_CHARGE_DTL c
		join awb on awb.awb_no = c.awb_no and  awb.awb_date = c.awb_date
		join BILL_ITM_MASTER m on m.ITM_CODE = c.ITM_CODE and NVL(m.ITM_CODE_SFX, '**') = NVL(c.ITM_CODE_SFX, '**')
		left join (SELECT AWB_NO,AWB_DATE,ITM_CODE,ITM_CODE_SFX,SUM(WAVR_AMT) waiveAmount FROM  BILL_WAIVE_CHARGE  WHERE NVL(CHARGE_CREATED,'N') = 'N'
		group by AWB_NO, AWB_DATE,ITM_CODE,ITM_CODE_SFX) W_CHARGE  on W_CHARGE.AWB_NO = c.AWB_NO 
		and W_CHARGE.AWB_DATE = c.AWB_DATE and W_CHARGE.ITM_CODE = c.ITM_CODE and NVL(W_CHARGE.ITM_CODE_SFX, '**') = NVL(c.ITM_CODE_SFX, '**')
		where  <iterate property="chrgTrNoArray" open="(" close=")" conjunction="OR" >
		           tr_no =  $chrgTrNoArray[]$
		       </iterate> 
	</select>
	<select id="sqlReportCreditUsageSummary" parameterClass="cargo.cms.finance.report.bo.FinanceTransReportBO"
		resultClass="cargo.cms.finance.report.bo.FinanceTransReportBO">
  		<![CDATA[
			SELECT VCRDDTL.SEQ_NO creditLine, CUSTCOMPANY.FIN_CODE finCode, 'Settlement' description,
			NVL(CRDDTL.CONSOL_INV_AMT, 0) consoleInvoiceAmount, VCRDDTL.CRDLEVEL creditBalanceLevel,
			UPPER(
				DECODE(
					UPPER(VCRDDTL.CR_TYPE), 
					'GEN', 'General', 'IMPORT_GEN', 'Import GEN', 'IMPORT_OBC', 'Import OBC', 
					'EXPORT_GEN', 'Export GEN', 'EXPORT_OBC', 'Export OBC'
				)
			) CREDITTYPE,
			VCRDDTL.CARR_CODE carrCode, VCRDDTL.SECURE_YN secure, VCRDDTL.CR_AMT creditLimit,  VCRDDTL.CR_BAL creditBalance, 
			TO_CHAR(VCRDDTL.CR_EFF_DATE_FROM, 'DDMONYY') CREDITEFFFROM, TO_CHAR(VCRDDTL.CR_EFF_DATE_TO, 'DDMONYY') CREDITEFFTO,
			CASE WHEN VCRDDTL.CR_EFF_DATE_TO < trunc(SYSDATE) THEN 'Y' ELSE 'N' END expired,
			CASE WHEN NVL(VCRDDTL.STATUS, '*') = 'VOID' THEN 'Y' ELSE 'N' END deleted,
			VCRDDTL.REMARKS remarks
			FROM V_CREDIT_FECILITY_DTL VCRDDTL
			JOIN CUST_COMPANY CUSTCOMPANY
			ON CUSTCOMPANY.CODE = VCRDDTL.CUST_NO
			JOIN (
				SELECT CRDDTL.MAST_SEQ_NO, SUM(TO_NUMBER(NVL(CRDDTL.CR_AMT, '0.00'))) CONSOL_INV_AMT
				FROM (
					(
						SELECT CNSLDT_INV_NO, CNSLDT_INV_DATE, INV_NO, DOC_LINE_NO INV_DOC_LINE_NO, NULL ADJ_NO, NULL ADJ_DOC_LINE_NO, CHARGE_AMT CONSOL_INV_AMT
					 	FROM BILL_INV_DTL WHERE CNSLDT_INV_DATE IS NOT NULL                   
						UNION
						SELECT CNSLDT_INV_NO, CNSLDT_INV_DATE, NULL INV_NO, NULL INV_DOC_LINE_NO, ADJ_NO, DOC_LINE_NO ADJ_DOC_LINE_NO, ADJ_AMT CONSOL_INV_AMT
						FROM BILL_ADJ_DTL WHERE CNSLDT_INV_DATE IS NOT NULL                
					) CNSDTLTAB
					JOIN BILL_INV_CRD_DTL CRDDTL
					ON (CRDDTL.INV_NO = CNSDTLTAB.INV_NO AND  CRDDTL.INV_DOC_LINE_NO = CNSDTLTAB.INV_DOC_LINE_NO)
						OR (CRDDTL.ADJ_NO = CNSDTLTAB.ADJ_NO AND  CRDDTL.ADJ_DOC_LINE_NO = CNSDTLTAB.ADJ_DOC_LINE_NO) 
			   
				) WHERE CNSDTLTAB.CNSLDT_INV_DATE BETWEEN TO_DATE(#fromDate#, 'DDMONYY') AND TO_DATE(#toDate#, 'DDMONYY')
				GROUP BY CRDDTL.MAST_SEQ_NO
			) CRDDTL
			ON CRDDTL.MAST_SEQ_NO = VCRDDTL.SEQ_NO
			WHERE 1 = 1
		]]>
		<isNotEmpty property="agentName">
			AND UPPER(CUSTCOMPANY.CODE_DESC) = UPPER(#agentName#)
		</isNotEmpty>
		<isNotEmpty property="finCode">
			AND CUSTCOMPANY.FIN_CODE = #finCode#
		</isNotEmpty>
		<![CDATA[
			UNION
			SELECT VCRDDTL.SEQ_NO CREDITLINE, CUSTCOMPANY.FIN_CODE FINCODE, 'Settlement' DESCRIPTION,
			0 consoleInvoiceAmount, VCRDDTL.CRDLEVEL creditBalanceLevel,
			UPPER(
				DECODE(
					UPPER(VCRDDTL.CR_TYPE), 
					'GEN', 'General', 'IMPORT_GEN', 'Import GEN', 'IMPORT_OBC', 'Import OBC', 
					'EXPORT_GEN', 'Export GEN', 'EXPORT_OBC', 'Export OBC'
				)
			) CREDITTYPE,
			VCRDDTL.CARR_CODE carrCode, VCRDDTL.SECURE_YN secure, VCRDDTL.CR_AMT creditLimit,  VCRDDTL.CR_BAL creditBalance, 
			TO_CHAR(VCRDDTL.CR_EFF_DATE_FROM, 'DDMONYY') CREDITEFFFROM, TO_CHAR(VCRDDTL.CR_EFF_DATE_TO, 'DDMONYY') CREDITEFFTO,
			CASE WHEN VCRDDTL.CR_EFF_DATE_TO < trunc(SYSDATE) THEN 'Y' ELSE 'N' END expired,
			CASE WHEN NVL(VCRDDTL.STATUS, '*') = 'VOID' THEN 'Y' ELSE 'N' END deleted,
			VCRDDTL.REMARKS REMARKS
			FROM V_CREDIT_FECILITY_DTL VCRDDTL
			JOIN CUST_COMPANY CUSTCOMPANY
			ON CUSTCOMPANY.CODE = VCRDDTL.CUST_NO
			WHERE TO_DATE(TO_CHAR(VCRDDTL.CR_EFF_DATE_FROM,'DDMONYY'), 'DDMONYY') <= TO_DATE(TO_CHAR(SYSDATE, 'DDMONYY'), 'DDMONYY')
			AND TO_DATE(TO_CHAR(VCRDDTL.CR_EFF_DATE_TO, 'DDMONYY'), 'DDMONYY') >= TO_DATE(TO_CHAR(SYSDATE, 'DDMONYY'), 'DDMONYY')
			AND TO_DATE(TO_CHAR(VCRDDTL.CR_EFF_DATE_TO, 'DDMONYY'), 'DDMONYY') >= TO_DATE(TO_CHAR(VCRDDTL.CR_EFF_DATE_FROM, 'DDMONYY'), 'DDMONYY')
			AND NVL(VCRDDTL.STATUS, '*') != 'VOID'
			AND NOT EXISTS (
				SELECT NULL
				FROM (
					(
						SELECT CNSLDT_INV_NO, CNSLDT_INV_DATE, INV_NO, DOC_LINE_NO INV_DOC_LINE_NO, NULL ADJ_NO, NULL ADJ_DOC_LINE_NO, CHARGE_AMT CONSOL_INV_AMT
						FROM BILL_INV_DTL
						WHERE CNSLDT_INV_DATE IS NOT NULL                   
						UNION
						SELECT CNSLDT_INV_NO, CNSLDT_INV_DATE, NULL INV_NO, NULL INV_DOC_LINE_NO, ADJ_NO, DOC_LINE_NO ADJ_DOC_LINE_NO, ADJ_AMT CONSOL_INV_AMT
						FROM BILL_ADJ_DTL WHERE CNSLDT_INV_DATE IS NOT NULL                
					) CNSDTLTAB
					JOIN BILL_INV_CRD_DTL CRDDTL
					ON (CRDDTL.INV_NO = CNSDTLTAB.INV_NO AND  CRDDTL.INV_DOC_LINE_NO = CNSDTLTAB.INV_DOC_LINE_NO)
						OR (CRDDTL.ADJ_NO = CNSDTLTAB.ADJ_NO AND  CRDDTL.ADJ_DOC_LINE_NO = CNSDTLTAB.ADJ_DOC_LINE_NO)                            
				)
				WHERE CNSDTLTAB.CNSLDT_INV_DATE BETWEEN TO_DATE(#fromDate#, 'DDMONYY') AND TO_DATE(#toDate#, 'DDMONYY')
		 			AND CRDDTL.MAST_SEQ_NO = VCRDDTL.SEQ_NO
	   		)
			AND EXISTS (
				SELECT *
				FROM (
					(
						SELECT CNSLDT_INV_NO, CNSLDT_INV_DATE, INV_NO, DOC_LINE_NO INV_DOC_LINE_NO, NULL ADJ_NO, NULL ADJ_DOC_LINE_NO, CHARGE_AMT CONSOL_INV_AMT
						FROM BILL_INV_DTL
						WHERE CNSLDT_INV_DATE IS NOT NULL                   
						UNION
						SELECT CNSLDT_INV_NO, CNSLDT_INV_DATE, NULL INV_NO, NULL INV_DOC_LINE_NO, ADJ_NO, DOC_LINE_NO ADJ_DOC_LINE_NO, ADJ_AMT CONSOL_INV_AMT
						FROM BILL_ADJ_DTL WHERE CNSLDT_INV_DATE IS NOT NULL                
					) CNSDTLTAB
					JOIN BILL_INV_CRD_DTL CRDDTL
					ON (CRDDTL.INV_NO = CNSDTLTAB.INV_NO AND  CRDDTL.INV_DOC_LINE_NO = CNSDTLTAB.INV_DOC_LINE_NO)
						OR (CRDDTL.ADJ_NO = CNSDTLTAB.ADJ_NO AND  CRDDTL.ADJ_DOC_LINE_NO = CNSDTLTAB.ADJ_DOC_LINE_NO)                 
			   		JOIN V_CREDIT_FECILITY_DTL VCRDDTL_OLD ON   
				  	CRDDTL.MAST_SEQ_NO = VCRDDTL_OLD.SEQ_NO 
				  	AND (
				  		NVL(VCRDDTL_OLD.STATUS, '*') = 'VOID'
							OR TO_DATE(TO_CHAR(VCRDDTL_OLD.CR_EFF_DATE_TO, 'DDMONYY'), 'DDMONYY') < TO_DATE(TO_CHAR(SYSDATE, 'DDMONYY'), 'DDMONYY')
					)
				)
				WHERE CNSDTLTAB.CNSLDT_INV_DATE BETWEEN TO_DATE(#fromDate#, 'DDMONYY') AND TO_DATE(#toDate#, 'DDMONYY')
			 		AND VCRDDTL.CUST_NO = VCRDDTL_OLD.CUST_NO AND VCRDDTL.MAST_TABLE_NAME = VCRDDTL_OLD.MAST_TABLE_NAME
			)
		]]>
		<isNotEmpty property="agentName">
			AND UPPER(CUSTCOMPANY.CODE_DESC) = UPPER(#agentName#)
		</isNotEmpty>
		<isNotEmpty property="finCode">
			AND CUSTCOMPANY.FIN_CODE = #finCode#
		</isNotEmpty>
	</select>
	<select id="sqlReportCreditUsageDetail" parameterClass="cargo.cms.finance.report.bo.FinanceTransReportBO"
		resultClass="cargo.cms.finance.report.bo.FinanceTransReportBO">
  		<![CDATA[
			SELECT AWB.AWB_TYPE flowType, AWB.AWB_NO awbNo, TO_CHAR(AWB.AWB_DATE, 'DDMONYY') awbDate, 
			AWB.CARR_CODE carrCode, CNSDTLTAB.CNSLDT_INV_NO consoleInvoiceNo, TO_CHAR(CNSDTLTAB.CNSLDT_INV_DATE, 'DDMONYY') consoleInvoiceDate,
			CNSDTLTAB.INV_NO invoiceNo, CNSDTLTAB.ADJ_NO invoiceAdjustNo, CRDDTL.CR_AMT amount, CHARGDTL.ITM_DESC chargeItem, CRDDTL.MAST_SEQ_NO creditLine
			FROM (
				SELECT CNSLDT_INV_NO, CNSLDT_INV_DATE, INV_NO, DOC_LINE_NO INV_DOC_LINE_NO , NULL ADJ_NO, NULL ADJ_DOC_LINE_NO,
				CHARGE_AMT CONSOL_INV_AMT, CHRG_TR_NO, ITM_CODE, ITM_CODE_SFX
				FROM BILL_INV_DTL WHERE CNSLDT_INV_DATE IS NOT NULL
				UNION
				SELECT ADJDTL.CNSLDT_INV_NO, ADJDTL.CNSLDT_INV_DATE, NULL INV_NO, NULL INV_DOC_LINE_NO,
				ADJDTL.ADJ_NO, ADJDTL.DOC_LINE_NO ADJ_DOC_LINE_NO, ADJDTL.ADJ_AMT CONSOL_INV_AMT, CHRG_TR_NO, ADJDTL.ITM_CODE, ADJDTL.ITM_CODE_SFX
				FROM BILL_ADJ_DTL ADJDTL
				JOIN BILL_INV_DTL INVDTL ON INVDTL.INV_NO = ADJDTL.INV_NO AND INVDTL.DOC_LINE_NO = ADJDTL.IDOC_LINE_NO
				WHERE ADJDTL.CNSLDT_INV_DATE IS NOT NULL
			) CNSDTLTAB
			JOIN BILL_CHARGE_DTL CHARGDTL
			ON CNSDTLTAB.CHRG_TR_NO = CHARGDTL.TR_NO
			LEFT JOIN AWB
			ON AWB.AWB_NO = CHARGDTL.AWB_NO AND AWB.AWB_DATE = CHARGDTL.AWB_DATE
			JOIN BILL_INV_CRD_DTL CRDDTL
			ON (CRDDTL.INV_NO = CNSDTLTAB.INV_NO AND CRDDTL.INV_DOC_LINE_NO = CNSDTLTAB.INV_DOC_LINE_NO)
				OR (CRDDTL.ADJ_NO = CNSDTLTAB.ADJ_NO AND CRDDTL.ADJ_DOC_LINE_NO = CNSDTLTAB.ADJ_DOC_LINE_NO)
			JOIN CUST_COMPANY CUSTCOMPANY
			ON CUSTCOMPANY.CODE = CRDDTL.CUST_NO
			WHERE CNSDTLTAB.CNSLDT_INV_DATE BETWEEN TO_DATE(#fromDate#, 'DDMONYY') AND TO_DATE(#toDate#, 'DDMONYY')
  		]]>
   		<isNotEmpty property="agentName">
			AND CUSTCOMPANY.CODE_DESC = #agentName#
		</isNotEmpty>
  		<isNotEmpty property="finCode">
			AND CUSTCOMPANY.FIN_CODE = #finCode#
		</isNotEmpty>
		<dynamic>
			ORDER BY AWB.AWB_TYPE, AWB.CARR_CODE, CNSDTLTAB.CNSLDT_INV_DATE, AWB.AWB_NO, CHARGDTL.ITM_DESC
		</dynamic>
	</select>
	<parameterMap id="prcMapFinalLoad" class="map" >
		<parameter property="v_from_date" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="v_to_date" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="v_carr_code" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	</parameterMap>
	<procedure id="prc_AirlFinalLoadRept" parameterMap="prcMapFinalLoad" >
		{call SP_FINAL_LOAD_REPT(?,?,?)}
	</procedure>
		<select id="getChargingLandsideExport"  parameterClass="java.util.Map" resultClass="cargo.cms.billing.report.bo.GenerateServiceReportBO">	
select * from (
select TO_CHAR(rcl_date,'DDMONYY') as rclDate,
rcl_no as rclNo,
ppk_type as rclType,
CR_USER_ID contractor,
awb_no as awbNo,
orig as awbOrg,
dest as awbDest,
awb_type as awbType,
catalog as catalog,
shc_list as shc,
exclusion as exc,
uld_key as uldNo,
TO_NUMBER(TRIM(TO_CHAR(SUM(bulk_wt_aside),'999,999,999,999,999,999,999,999,999,999,999,990.99')),'999,999,999,999,999,999,999,999,999,999,999,990.99') as bulkWtAirside,
TO_NUMBER(TRIM(TO_CHAR(SUM(bulk_wt_lside),'999,999,999,999,999,999,999,999,999,999,999,990.99')),'999,999,999,999,999,999,999,999,999,999,999,990.99') as bulkwtLandside,
TO_NUMBER(TRIM(TO_CHAR(SUM(ppk_wt_aside),'999,999,999,999,999,999,999,999,999,999,999,990.99')),'999,999,999,999,999,999,999,999,999,999,999,990.99') as prepackAirside,
TO_NUMBER(TRIM(TO_CHAR(SUM(ppk_wt_lside),'999,999,999,999,999,999,999,999,999,999,999,990.99')),'999,999,999,999,999,999,999,999,999,999,999,990.99') as prepackLandside,
userId as userUnk
from REPT_CHG_EXP_ACC group by rcl_date,rcl_no,ppk_type,awb_no,orig,dest,awb_type,catalog,shc_list,exclusion,uld_key,userId,CR_USER_ID) 
where  (bulkWtAirside &gt;0 or bulkwtLandside &gt;0 or prepackAirside &gt;0 or prepackLandside &gt;0)
order by TO_DATE(rclDate,'DDMONYY')
	</select>
	<select id="getChargingLandsideImport"  parameterClass="java.util.Map" resultClass="cargo.cms.billing.report.bo.GenerateServiceReportBO">	
select * from (
select  TO_CHAR(post_date,'DDMONYY') as postDate,
srf_no as srfNo,
awb_no as awbNo,
orig as awbOrg,
dest as awbDest,
awb_type as awbType,
catalog as catalog,
shc_list as shc,
exclusion as exc,
TO_NUMBER(TRIM(TO_CHAR(SUM(bulk_wt),'999,999,999,999,999,999,999,999,999,999,999,990.99')),'999,999,999,999,999,999,999,999,999,999,999,990.99') as bulk,
TO_NUMBER(TRIM(TO_CHAR(SUM(ppk_wt),'999,999,999,999,999,999,999,999,999,999,999,990.99')),'999,999,999,999,999,999,999,999,999,999,999,990.99') as prepackWt,
SUM(ppk_no_of_uld) as prepackUld
from  REPT_CHG_IMP_DLV  group by  post_date,srf_no,awb_no, orig,dest,awb_type,catalog,shc_list,exclusion ) 
where  (bulk &gt;0 or prepackWt &gt;0 or prepackUld &gt;0 ) 
order by TO_DATE(postDate,'DDMONYY')
	</select>
	<select id="getChargingAirlineMISCList"  parameterClass="java.util.Map" resultClass="cargo.cms.billing.report.bo.GenerateServiceReportBO">	
select * from (
select TO_CHAR(act_date,'DDMONYY') as jobDate,
 airline as  carrierCode,
ct_no as ct ,
jo_no as jo ,
awb_no as  awbNo,
rcl_no as  rclNo,
orig as awbOrg,
dest as awbDest,
awb_type as awbType,
catalog as catalog,
shc_list as shc,
exclusion as exc,
TO_NUMBER(TRIM(TO_CHAR(SUM(XRAY_RCL_WT),'999,999,999,999,999,999,999,999,999,999,999,990.99')),'999,999,999,999,999,999,999,999,999,999,999,990.99') as xrayBeforeRcl,
TO_NUMBER(TRIM(TO_CHAR(SUM(XRAY_JO_EXP_WT),'999,999,999,999,999,999,999,999,999,999,999,990.99')),'999,999,999,999,999,999,999,999,999,999,999,990.99') as xrayExport,
TO_NUMBER(TRIM(TO_CHAR(SUM(XRAY_JO_TS_WT),'999,999,999,999,999,999,999,999,999,999,999,990.99')),'999,999,999,999,999,999,999,999,999,999,999,990.99') as xrayTranshipment,
TO_NUMBER(TRIM(TO_CHAR(SUM(ITT_OUT_WT),'999,999,999,999,999,999,999,999,999,999,999,990.99')),'999,999,999,999,999,999,999,999,999,999,999,990.99') as iTTtransferOut,
TO_NUMBER(TRIM(TO_CHAR(SUM(ITT_IN_WT),'999,999,999,999,999,999,999,999,999,999,999,990.99')),'999,999,999,999,999,999,999,999,999,999,999,990.99') as iTTtransferIn,
TO_NUMBER(TRIM(TO_CHAR(SUM(CHINA_DIRECT_BU_WT),'999,999,999,999,999,999,999,999,999,999,999,990.99')),'999,999,999,999,999,999,999,999,999,999,999,990.99') as chinaDirectBU FROM REPT_CHG_AIRL WHERE REC_TYPE = 'MISC'
 AND ACT_DATE = #jobDate#
GROUP BY ACT_DATE, AIRLINE, RCL_NO, JO_NO, CT_NO, AWB_NO, ORIG, DEST, AWB_TYPE, CATALOG, SHC_LIST, EXCLUSION)
where (xrayBeforeRcl &gt;0 or xrayExport &gt;0 or xrayTranshipment &gt;0 or iTTtransferOut &gt;0 or iTTtransferIn &gt;0
       or chinaDirectBU &gt;0 )
ORDER BY TO_DATE(jobDate,'DDMONYY')
	</select>
	<select id="getChargingAirlineULDList"  parameterClass="java.util.Map" resultClass="cargo.cms.billing.report.bo.GenerateServiceReportBO">	
select * from (
select  TO_CHAR(act_date,'DDMONYY') as jobDate,
airline as  carrierCode,
flt_type as fltType ,
flt_key as fltKey ,
TO_CHAR(flt_date,'DDMONYY') as  fltDate,
cgo_acft_type as  paxFrtr,
ULD_KEY as uldNo,
shc_list as shc,
exclusion as exc,
SUM(NO_TS_PPK_MIX_ULD) as transitPPKULDcount,
SUM(NO_OB_TS_NBK_ULD) as outboundNBKULDcount,
SUM(NO_OFD_PPK_ULD) as offloadPPKULDcount,
SUM(NO_OFD_TS_NBK_ULD) as offloadNBKULDcount,
TO_NUMBER(TRIM(TO_CHAR(SUM(REBUILT_WT),'999,999,999,999,999,999,999,999,999,999,999,990.99')),'999,999,999,999,999,999,999,999,999,999,999,990.99') as rebuilt,
SUM(NO_WIPP_ULD) as WIPPcount,
SUM(NO_FCC_ULD) as fcc,
SUM(NO_IMP_TS_NBK_ULD) as imprtTransitNBKULDcount,
SUM(NO_IMP_TS_PPK_ULD) as imprtTransitPPKULDcount FROM REPT_CHG_AIRL
WHERE REC_TYPE = 'ULD' 
AND ACT_DATE = #jobDate#
GROUP BY ACT_DATE, AIRLINE, FLT_TYPE, FLT_KEY, FLT_DATE, CGO_ACFT_TYPE, ULD_KEY, SHC_LIST, EXCLUSION)
where (transitPPKULDcount &gt;0 or outboundNBKULDcount &gt;0 or offloadPPKULDcount &gt;0 or offloadNBKULDcount &gt;0 or rebuilt &gt;0
       or WIPPcount &gt;0 or fcc &gt;0 or imprtTransitNBKULDcount &gt;0 or imprtTransitPPKULDcount &gt;0)
ORDER BY TO_DATE(jobDate,'DDMONYY')
	</select>
	<select id="getChargingAirlineAWBList"  parameterClass="java.util.Map" resultClass="cargo.cms.billing.report.bo.GenerateServiceReportBO">	
select * from (
select  TO_CHAR(act_date,'DDMONYY') as jobDate,
airline as  carrierCode,
flt_type as fltType ,
flt_key as fltKey ,
TO_CHAR(flt_date,'DDMONYY') as  fltDate,
cgo_acft_type as  paxFrtr,
awb_no as  awbNo,
orig as awbOrg,
dest as awbDest,
awb_type as awbType,
catalog as catalog,
shc_list as shc,
exclusion as exc,
TO_NUMBER(TRIM(TO_CHAR(SUM(EXP_BULK_WT),'999,999,999,999,999,999,999,999,999,999,999,990.99')),'999,999,999,999,999,999,999,999,999,999,999,990.99') exportBulk,
TO_NUMBER(TRIM(TO_CHAR(SUM(EXP_TS_BULK_WT),'999,999,999,999,999,999,999,999,999,999,999,990.99')),'999,999,999,999,999,999,999,999,999,999,999,990.99') as transitBulk, 
TO_NUMBER(TRIM(TO_CHAR(SUM(IF_BULK_WT),'999,999,999,999,999,999,999,999,999,999,999,990.99')),'999,999,999,999,999,999,999,999,999,999,999,990.99') as iFbulk,
TO_NUMBER(TRIM(TO_CHAR(SUM(TS_PPK_MIX_WT),'999,999,999,999,999,999,999,999,999,999,999,990.99')),'999,999,999,999,999,999,999,999,999,999,999,990.99') as transitPPk,
TO_NUMBER(TRIM(TO_CHAR(SUM(OB_TS_NBK_WT),'999,999,999,999,999,999,999,999,999,999,999,990.99')),'999,999,999,999,999,999,999,999,999,999,999,990.99') as outboundNBK,
TO_NUMBER(TRIM(TO_CHAR(SUM(OFD_BULK_WP_WT),'999,999,999,999,999,999,999,999,999,999,999,990.99')),'999,999,999,999,999,999,999,999,999,999,999,990.99') as offloadbulkwith,
TO_NUMBER(TRIM(TO_CHAR(SUM(OFD_BULK_WOP_WT),'999,999,999,999,999,999,999,999,999,999,999,990.99')),'999,999,999,999,999,999,999,999,999,999,999,990.99') as offloadbulkwithout,
TO_NUMBER(TRIM(TO_CHAR(SUM(OFD_PPK_WT),'999,999,999,999,999,999,999,999,999,999,999,990.99')),'999,999,999,999,999,999,999,999,999,999,999,990.99') as offloadPPK,
TO_NUMBER(TRIM(TO_CHAR(SUM(OFD_TS_NBK_WT),'999,999,999,999,999,999,999,999,999,999,999,990.99')),'999,999,999,999,999,999,999,999,999,999,999,990.99') as offloadNBK,
TO_NUMBER(TRIM(TO_CHAR(SUM(TS_MAIL_IN_WT),'999,999,999,999,999,999,999,999,999,999,999,990.99')),'999,999,999,999,999,999,999,999,999,999,999,990.99') as transitmailInbound,
TO_NUMBER(TRIM(TO_CHAR(SUM(TS_MAIL_OUT_WT),'999,999,999,999,999,999,999,999,999,999,999,990.99')),'999,999,999,999,999,999,999,999,999,999,999,990.99') as transitmailOutbound,
TO_NUMBER(TRIM(TO_CHAR(SUM(TS_OFD_BULK_WP_WT),'999,999,999,999,999,999,999,999,999,999,999,990.99')),'999,999,999,999,999,999,999,999,999,999,999,990.99') as transitoffloadwith,
TO_NUMBER(TRIM(TO_CHAR(SUM(TS_OFD_BULK_WOP_WT),'999,999,999,999,999,999,999,999,999,999,999,990.99')),'999,999,999,999,999,999,999,999,999,999,999,990.99') as transitoffloadwithout,
TO_NUMBER(TRIM(TO_CHAR(SUM(IMP_BULK_WT),'999,999,999,999,999,999,999,999,999,999,999,990.99')),'999,999,999,999,999,999,999,999,999,999,999,990.99') as importbulk,
TO_NUMBER(TRIM(TO_CHAR(SUM(IMP_TS_BULK_WT),'999,999,999,999,999,999,999,999,999,999,999,990.99')),'999,999,999,999,999,999,999,999,999,999,999,990.99') as importtransitbulk,
TO_NUMBER(TRIM(TO_CHAR(SUM(IMP_TS_NBK_WT),'999,999,999,999,999,999,999,999,999,999,999,990.99')),'999,999,999,999,999,999,999,999,999,999,999,990.99') as importtransitNBK,
TO_NUMBER(TRIM(TO_CHAR(SUM(IMP_TS_PPK_WT),'999,999,999,999,999,999,999,999,999,999,999,990.99')),'999,999,999,999,999,999,999,999,999,999,999,990.99') as importtransitPPK,
TO_NUMBER(TRIM(TO_CHAR(SUM(IF_SHP_UPS_WT),'999,999,999,999,999,999,999,999,999,999,999,990.99')),'999,999,999,999,999,999,999,999,999,999,999,990.99') as iFshp,
TO_NUMBER(TRIM(TO_CHAR(SUM(CBX_SHP_WT),'999,999,999,999,999,999,999,999,999,999,999,990.99')),'999,999,999,999,999,999,999,999,999,999,999,990.99') as cbxshp,
TO_NUMBER(TRIM(TO_CHAR(SUM(EXP_BULK_EHU),'999,999,999,999,999,999,999,999,999,999,999,990.99')),'999,999,999,999,999,999,999,999,999,999,999,990.99') as exportBulkBU  FROM REPT_CHG_AIRL
WHERE REC_TYPE = 'AWB' 
AND ACT_DATE = #jobDate#
GROUP BY ACT_DATE, AIRLINE, FLT_TYPE, FLT_KEY, FLT_DATE, CGO_ACFT_TYPE, AWB_NO, ORIG, DEST, AWB_TYPE, CATALOG, SHC_LIST, EXCLUSION)
where  (exportBulk &gt;0 or transitBulk &gt;0 or iFbulk &gt;0 or transitPPk &gt;0 or outboundNBK &gt;0 or offloadbulkwith &gt;0 or 
        offloadbulkwithout &gt;0 or offloadPPK &gt;0 or offloadNBK &gt;0 or transitmailInbound &gt;0 or transitmailOutbound &gt;0 or transitoffloadwith &gt;0 or 
        transitoffloadwithout &gt;0 or importbulk &gt;0 or importtransitbulk &gt;0 or importtransitNBK &gt;0 or importtransitPPK &gt;0 or iFshp &gt;0 or cbxshp &gt;0
        or exportBulkBU &gt; 0)
        ORDER BY TO_DATE(jobDate,'DDMONYY')

	</select>
	<select id="getDateforCompleteMonth"  parameterClass="java.util.Map" resultClass="cargo.cms.billing.report.bo.GenerateServiceReportBO">	
select to_char(trunc(TO_DATE(#fromDate#,'DDMONYY'))+ROWNUM,'DDMONYY') reportDate
FROM DUAL
CONNECT BY ROWNUM &lt; TO_NUMBER(TO_CHAR(TO_DATE(#toDate#,'DDMONYY'),'DD'))
UNION
SELECT to_char(trunc(TO_DATE(#fromDate#,'DDMONYY')),'DDMONYY') reportDate FROM DUAL
	</select>
	<parameterMap class="map" id="newland">
  	<parameter property="jobFromDate"      jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
  	<parameter property="jobToDate"  jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
 </parameterMap> 
 <procedure id="chargingReportByLandside" parameterMap="newland" >
  	{call PKG_PREGEN_CHARGING_REPT.SP_LANSIDE_CHG_REPT(?,?)}
 </procedure>
 <parameterMap class="map" id="newmap">
  	<parameter property="jobFromDate"      jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
  	<parameter property="jobToDate"  jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
  	<parameter property="flightClsChk"  jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
 </parameterMap> 
 <procedure id="chargingReportByAirline" parameterMap="newmap" >
  	{call PKG_PREGEN_CHARGING_REPT.SP_AIRLINE_CHG_REPT(?,?,?)}
 </procedure> 
<!-- Download/Upload CX SAP Settlement File -->
	<select id="sqlGetIsInvoiceNoExist" parameterClass="java.lang.String"
		resultClass="java.lang.String">
		<![CDATA[
			SELECT
			DECODE(COUNT(1), 0, 'N', 'Y')
			FROM (
				SELECT 1
				FROM BILL_INV_DTL
				WHERE CNSLDT_INV_NO IS NOT NULL AND CNSLDT_INV_NO = #PARAM#
				UNION
				SELECT 1
				FROM BILL_ADJ_DTL
				WHERE CNSLDT_INV_NO IS NOT NULL AND CNSLDT_INV_NO = #PARAM#
			)
		]]>
	</select>
	<insert id="sqlInsertCXSAPSettlementData" parameterClass="cargo.cms.billing.bo.SettlementBO">
	 	<![CDATA[
			INSERT INTO BILL_SAP_SETTLEMENT (
			  TR_NO, FILE_NAME, INVOICE_NO,
			  REVERSAL_YN,  AMOUNT, PAYMENT_DATE,
			  CUSTOMER_NO, BILLING_NO, PAYMENT_NO,
			  DESCRIPTION,
			  CR_USER_ID, CR_DATE
			) VALUES (
				BILL_SAP_SETTLEMENT_SEQ.NEXTVAL, #sapFile#, #invoiceNo#,
				#reversal#, #amount#, TO_DATE(#paymentDate#, 'YYYYMMDD'),
				#customerNo#, #billingNo#, #paymentNo#,
				#description#,
				#userID#, SYSDATE
			)
		]]>
	</insert>
	<select id="sqlGetCXSAPSettlementData" parameterClass="java.lang.String"
		resultClass="cargo.cms.billing.bo.SettlementBO">
		<![CDATA[
			SELECT
			  TR_NO trNo, FILE_NAME sapFile, INVOICE_NO invoiceNo,
			  REVERSAL_YN reversal,  AMOUNT amount, TO_CHAR(PAYMENT_DATE, 'YYYYMMDD') paymentDate,
			  CUSTOMER_NO customerNo, BILLING_NO billingNo, PAYMENT_NO paymentNo,
			  DESCRIPTION description
			FROM BILL_SAP_SETTLEMENT
			WHERE INVOICE_NO = #PARAM#
		]]>
	</select>
	<update id="sqlUpdateCXSAPAgentLevelCreditBalance" parameterClass="cargo.cms.billing.bo.SettlementBO">
	 	<![CDATA[
			UPDATE CUST_AGENT_LEVEL_CRD
			SET CR_BAL = CR_BAL + #creditAmount#, LM_USER_ID = #userID#, LM_DATE = SYSDATE
			WHERE SEQ_NO = #creditSeqNo#
		]]>
	</update>
	<update id="sqlUpdateCXSAPAgentAirlineCreditBalance" parameterClass="cargo.cms.billing.bo.SettlementBO">
	 	<![CDATA[
			UPDATE CUST_AGENT_AIRL_CREDIT
			SET CR_BAL = CR_BAL + #creditAmount#, LM_USER_ID = #userID#, LM_DATE = SYSDATE
			WHERE SEQ_NO = #creditSeqNo#
		]]>
	</update>
	<update id="sqlUpdateCXSAPCPCTCreditBalance" parameterClass="cargo.cms.billing.bo.SettlementBO">
	 	<![CDATA[
			UPDATE CUST_AGENT_CREDIT
			SET CR_BAL = CR_BAL + #creditAmount#, LM_USER_ID = #userID#, LM_DATE = SYSDATE
			WHERE SEQ_NO = #creditSeqNo#
		]]>
	</update>
	<update id="sqlUpdateCXSAPSettleFlagInInvoice" parameterClass="cargo.cms.billing.bo.SettlementBO">
	 	<![CDATA[
			UPDATE BILL_INV_DTL
			SET SAP_SETTLE_YN = DECODE(NVL(#reversal#, 'N'), 'N', 'Y', 'N'), LM_USER_ID = #userID#, LM_DATE = SYSDATE
			WHERE CNSLDT_INV_NO = #invoiceNo#
		]]>
	</update>
	<update id="sqlUpdateCXSAPSettleFlagInAdjustment" parameterClass="cargo.cms.billing.bo.SettlementBO">
	 	<![CDATA[
			UPDATE BILL_ADJ_DTL
			SET SAP_SETTLE_YN = DECODE(NVL(#reversal#, 'N'), 'N', 'Y', 'N'), LM_USER_ID = #userID#, LM_DATE = SYSDATE
			WHERE CNSLDT_INV_NO = #invoiceNo#
		]]>
	</update>
	<select id="sqlGetIsValidInvoiceCustomer" parameterClass="java.util.Map"
		resultClass="java.lang.String">
		<![CDATA[
			SELECT
			DECODE(COUNT(1), 0, 'Y', 'N')
			FROM (
				SELECT 1
				FROM BILL_INV_CRD_DTL CREDIT
				JOIN BILL_INV_DTL INVOICE
				ON INVOICE.INV_NO = CREDIT.INV_NO AND INVOICE.DOC_LINE_NO = CREDIT.INV_DOC_LINE_NO AND INVOICE.CNSLDT_INV_NO = #CONSOL_INVOICE_NO#
				WHERE CUST_NO <> (SELECT NVL(MAX(CODE), '+') FROM CUST_COMPANY WHERE LPAD(SAP_CUSTOMER_ID,10, 0) = #SAP_CUSTOMER_NO#)
				UNION
				SELECT 1
				FROM BILL_INV_CRD_DTL CREDIT
				JOIN BILL_ADJ_DTL ADJUST
				ON ADJUST.ADJ_NO = CREDIT.ADJ_NO AND ADJUST.DOC_LINE_NO = CREDIT.ADJ_DOC_LINE_NO AND ADJUST.CNSLDT_INV_NO = #CONSOL_INVOICE_NO#
				WHERE CUST_NO <> (SELECT NVL(MAX(CODE), '+') FROM CUST_COMPANY WHERE LPAD(SAP_CUSTOMER_ID,10, 0) = #SAP_CUSTOMER_NO#)
			)
		]]>
	</select>
	<select id="sqlGetIsCreditLineExpiredForInvoice" parameterClass="java.util.Map"
		resultClass="java.lang.String">
			WITH CREDIT_LINE_INVOICE AS (
				SELECT (
					CASE
						WHEN CREDIT.MAST_TABLE_NAME = 'CUST_AGENT_LEVEL_CRD' THEN (
							SELECT DECODE(COUNT(1), 0, 'Y', 'N')
							FROM CUST_AGENT_LEVEL_CRD 
							WHERE SEQ_NO = CREDIT.MAST_SEQ_NO AND CR_EFF_DATE_TO >= TO_DATE(TO_CHAR(SYSDATE, 'DDMONYY'), 'DDMONYY')
						)
						WHEN CREDIT.MAST_TABLE_NAME = 'CUST_AGENT_AIRL_CREDIT' THEN (
							SELECT DECODE(COUNT(1), 0, 'Y', 'N')
							FROM CUST_AGENT_AIRL_CREDIT 
							WHERE SEQ_NO = CREDIT.MAST_SEQ_NO AND CR_EFF_DATE_TO >= TO_DATE(TO_CHAR(SYSDATE, 'DDMONYY'), 'DDMONYY')
						)
						WHEN CREDIT.MAST_TABLE_NAME = 'CUST_AGENT_CREDIT' THEN (
							SELECT DECODE(COUNT(1), 0, 'Y', 'N')
							FROM CUST_AGENT_CREDIT 
							WHERE SEQ_NO = CREDIT.MAST_SEQ_NO AND CR_EFF_DATE_TO >= TO_DATE(TO_CHAR(SYSDATE, 'DDMONYY'), 'DDMONYY')
						)
						ELSE 'Y'
					END
				) creditLineExpired
				FROM BILL_INV_CRD_DTL CREDIT
				JOIN BILL_INV_DTL INVOICE
				ON INVOICE.INV_NO = CREDIT.INV_NO AND INVOICE.DOC_LINE_NO = CREDIT.INV_DOC_LINE_NO AND INVOICE.CNSLDT_INV_NO = #CONSOLIDATED_INVOICE_NO#	
				<isNotEmpty property="SEQ_NO">
			      AND CREDIT.SEQ_NO = #SEQ_NO#
                </isNotEmpty>
			),
			CREDIT_LINE_ADJUST AS (
				SELECT (
					CASE
						WHEN CREDIT.MAST_TABLE_NAME = 'CUST_AGENT_LEVEL_CRD' THEN (
							SELECT DECODE(COUNT(1), 0, 'Y', 'N')
							FROM CUST_AGENT_LEVEL_CRD 
							WHERE SEQ_NO = CREDIT.MAST_SEQ_NO AND CR_EFF_DATE_TO >= TO_DATE(TO_CHAR(SYSDATE, 'DDMONYY'), 'DDMONYY')
						)
						WHEN CREDIT.MAST_TABLE_NAME = 'CUST_AGENT_AIRL_CREDIT' THEN (
							SELECT DECODE(COUNT(1), 0, 'Y', 'N')
							FROM CUST_AGENT_AIRL_CREDIT 
							WHERE SEQ_NO = CREDIT.MAST_SEQ_NO AND CR_EFF_DATE_TO >= TO_DATE(TO_CHAR(SYSDATE, 'DDMONYY'), 'DDMONYY')
						)
						WHEN CREDIT.MAST_TABLE_NAME = 'CUST_AGENT_CREDIT' THEN (
							SELECT DECODE(COUNT(1), 0, 'Y', 'N')
							FROM CUST_AGENT_CREDIT 
							WHERE SEQ_NO = CREDIT.MAST_SEQ_NO AND CR_EFF_DATE_TO >= TO_DATE(TO_CHAR(SYSDATE, 'DDMONYY'), 'DDMONYY')
						)
						ELSE 'Y'
					END
				) creditLineExpired
				FROM BILL_INV_CRD_DTL CREDIT
				JOIN BILL_ADJ_DTL ADJUST
				ON ADJUST.ADJ_NO = CREDIT.ADJ_NO AND ADJUST.DOC_LINE_NO = CREDIT.ADJ_DOC_LINE_NO AND ADJUST.CNSLDT_INV_NO = #CONSOLIDATED_INVOICE_NO#
				<isNotEmpty property="SEQ_NO">
			      AND CREDIT.SEQ_NO = #SEQ_NO#
                </isNotEmpty>
			)
			SELECT DECODE(COUNT(1), 0, 'N', 'Y') FROM (
				SELECT 1 FROM CREDIT_LINE_INVOICE WHERE creditLineExpired = 'Y'
				UNION
				SELECT 1 FROM CREDIT_LINE_ADJUST WHERE creditLineExpired = 'Y'
			)
	</select>
	<select id="sqlGetIsCXSAPNonSettledExists" parameterClass="java.lang.String"
		resultClass="java.lang.String">
		<![CDATA[
			SELECT
			DECODE(COUNT(1), 0, 'N', 'Y')
			FROM (
				SELECT 1
				FROM BILL_INV_DTL
				WHERE CNSLDT_INV_NO = #PARAM# AND NVL(SAP_SETTLE_YN, 'N') = 'N'
				UNION
				SELECT 1
				FROM BILL_ADJ_DTL
				WHERE CNSLDT_INV_NO = #PARAM# AND NVL(SAP_SETTLE_YN, 'N') = 'N'
			)
		]]>
	</select>
        <select id="sqlGetCXSAPSettlementInvoiceData" parameterClass="java.util.Map"
		resultClass="cargo.cms.billing.bo.SettlementBO">
			SELECT
			CREDIT.INV_NO creditInvoiceNo, NUll creditAdjustNo, INVOICE.DOC_LINE_NO creditDocline, NVL(CREDIT.CR_AMT, 0) creditAmount,
			UPPER(CREDIT.MAST_TABLE_NAME) creditTable, CREDIT.MAST_SEQ_NO creditSeqNo,
			CREDIT.CR_TYPE creditType, CREDIT.CR_LVL creditLevel,
			CREDIT.CR_AIRLINE creditAirline, CREDIT.CUST_NO customerNo
			FROM BILL_INV_CRD_DTL CREDIT
			JOIN BILL_INV_DTL INVOICE
			ON INVOICE.INV_NO = CREDIT.INV_NO AND INVOICE.DOC_LINE_NO = CREDIT.INV_DOC_LINE_NO AND INVOICE.CNSLDT_INV_NO = #CONSOLIDATED_INVOICE_NO#
			<isNotEmpty property="SEQ_NO">
			  AND CREDIT.SEQ_NO = #SEQ_NO#
		    </isNotEmpty>
			UNION ALL
			SELECT
			NULL creditInvoiceNo, ADJUST.ADJ_NO creditAdjustNo, ADJUST.DOC_LINE_NO creditDocline, NVL(CREDIT.CR_AMT, 0) creditAmount,
			UPPER(CREDIT.MAST_TABLE_NAME) creditTable, CREDIT.MAST_SEQ_NO creditSeqNo,
			CREDIT.CR_TYPE creditType, CREDIT.CR_LVL creditLevel, 
			CREDIT.CR_AIRLINE creditAirline, CREDIT.CUST_NO customerNo
			FROM BILL_INV_CRD_DTL CREDIT
			JOIN BILL_ADJ_DTL ADJUST
			ON ADJUST.ADJ_NO = CREDIT.ADJ_NO AND ADJUST.DOC_LINE_NO = CREDIT.ADJ_DOC_LINE_NO AND ADJUST.CNSLDT_INV_NO = #CONSOLIDATED_INVOICE_NO#
			<isNotEmpty property="SEQ_NO">
			   AND CREDIT.SEQ_NO = #SEQ_NO#
            </isNotEmpty>
	</select>
        <insert id="sqlInsertCXSAPSettlementInvoiceCreditDetail" parameterClass="cargo.cms.billing.bo.SettlementBO">
	 	<![CDATA[
			INSERT INTO BILL_INV_CRD_DTL (
			    INV_NO,
			    CR_TYPE,  CR_LVL, CR_AMT, BALANCE,
			    CUST_NO, CR_AIRLINE,
			    CR_DATE, TRANS_DESC,
			    MAST_SEQ_NO, MAST_TABLE_NAME
			) VALUES (
			    NULL,
			    #creditType#, #creditLevel#, -(#creditAmount#), (
			      CASE
			        WHEN #creditTable# = 'CUST_AGENT_LEVEL_CRD' THEN (
			          SELECT CR_BAL FROM CUST_AGENT_LEVEL_CRD WHERE SEQ_NO = #creditSeqNo#
			        )
			        WHEN #creditTable# = 'CUST_AGENT_AIRL_CREDIT' THEN (
			          SELECT CR_BAL FROM CUST_AGENT_AIRL_CREDIT WHERE SEQ_NO = #creditSeqNo#
			        )
			        WHEN #creditTable# = 'CUST_AGENT_CREDIT' THEN (
			          SELECT CR_BAL FROM CUST_AGENT_CREDIT WHERE SEQ_NO = #creditSeqNo#
			        )
			        ELSE 0
			      END
			    ),
			    #customerNo#, #creditAirline#,
			    SYSDATE, #remark#,
			    #creditSeqNo#, #creditTable#
			)
		]]>
	</insert>
	<select id="sqlGetIsCreditLineDeletedForInvoice" parameterClass="java.util.Map"
		resultClass="java.lang.String">
			WITH CREDIT_LINE_INVOICE AS (
				SELECT (
					CASE
						WHEN CREDIT.MAST_TABLE_NAME = 'CUST_AGENT_LEVEL_CRD' THEN (
							SELECT DECODE(COUNT(1), 0, 'N', 'Y')
							FROM CUST_AGENT_LEVEL_CRD 
							WHERE SEQ_NO = CREDIT.MAST_SEQ_NO AND NVL(STATUS, 'OK') = 'VOID'
						)
						WHEN CREDIT.MAST_TABLE_NAME = 'CUST_AGENT_AIRL_CREDIT' THEN (
							SELECT DECODE(COUNT(1), 0, 'N', 'Y')
							FROM CUST_AGENT_AIRL_CREDIT 
							WHERE SEQ_NO = CREDIT.MAST_SEQ_NO AND NVL(STATUS, 'OK') = 'VOID'
						)
						WHEN CREDIT.MAST_TABLE_NAME = 'CUST_AGENT_CREDIT' THEN (
							SELECT DECODE(COUNT(1), 0, 'N', 'Y')
							FROM CUST_AGENT_CREDIT 
							WHERE SEQ_NO = CREDIT.MAST_SEQ_NO AND NVL(STATUS, 'OK') = 'VOID'
						)
						ELSE 'N'
					END
				) creditLineDeleted
				FROM BILL_INV_CRD_DTL CREDIT
				JOIN BILL_INV_DTL INVOICE
				ON INVOICE.INV_NO = CREDIT.INV_NO AND INVOICE.DOC_LINE_NO = CREDIT.INV_DOC_LINE_NO AND INVOICE.CNSLDT_INV_NO = #CONSOLIDATED_INVOICE_NO#
				<isNotEmpty property="SEQ_NO">
			      AND CREDIT.SEQ_NO = #SEQ_NO#
                </isNotEmpty>
			),
			CREDIT_LINE_ADJUST AS (
				SELECT (
					CASE
						WHEN CREDIT.MAST_TABLE_NAME = 'CUST_AGENT_LEVEL_CRD' THEN (
							SELECT DECODE(COUNT(1), 0, 'N', 'Y')
							FROM CUST_AGENT_LEVEL_CRD 
							WHERE SEQ_NO = CREDIT.MAST_SEQ_NO AND NVL(STATUS, 'OK') = 'VOID'
						)
						WHEN CREDIT.MAST_TABLE_NAME = 'CUST_AGENT_AIRL_CREDIT' THEN (
							SELECT DECODE(COUNT(1), 0, 'N', 'Y')
							FROM CUST_AGENT_AIRL_CREDIT 
							WHERE SEQ_NO = CREDIT.MAST_SEQ_NO AND NVL(STATUS, 'OK') = 'VOID'
						)
						WHEN CREDIT.MAST_TABLE_NAME = 'CUST_AGENT_CREDIT' THEN (
							SELECT DECODE(COUNT(1), 0, 'N', 'Y')
							FROM CUST_AGENT_CREDIT 
							WHERE SEQ_NO = CREDIT.MAST_SEQ_NO AND NVL(STATUS, 'OK') = 'VOID'
						)
						ELSE 'N'
					END
				) creditLineDeleted
				FROM BILL_INV_CRD_DTL CREDIT
				JOIN BILL_ADJ_DTL ADJUST
				ON ADJUST.ADJ_NO = CREDIT.ADJ_NO AND ADJUST.DOC_LINE_NO = CREDIT.ADJ_DOC_LINE_NO AND ADJUST.CNSLDT_INV_NO = #CONSOLIDATED_INVOICE_NO#
				<isNotEmpty property="SEQ_NO">
			      AND CREDIT.SEQ_NO = #SEQ_NO#
                </isNotEmpty>
			)
			SELECT DECODE(COUNT(1), 0, 'N', 'Y') FROM (
				SELECT 1 FROM CREDIT_LINE_INVOICE WHERE creditLineDeleted = 'Y'
				UNION
				SELECT 1 FROM CREDIT_LINE_ADJUST WHERE creditLineDeleted = 'Y'
			)
	</select>
	
	<select id="fetchDlvCompDtls" parameterClass="java.lang.String"	resultClass="cargo.cms.afw.bo.MasterBO">
		<![CDATA[
			select DLV_COMP_CODE param1, BRANCH_CODE param2 from mast_carrier where code = #carrCode# 
		]]>
	</select>
<select id="getURFAccesoryDetailsCount" parameterClass="java.util.Map" resultClass="java.util.HashMap">
	 SELECT 
		  NVL(SUM(field1), 0)   AS LARGE_PVC,
		  NVL(SUM(field2), 0)   AS SMALL_PVC
		FROM
		  (SELECT DTL.uld_key,
		    DTL.eir_no,
		    REL.REL_DATE,
		    HD.EIR_DATE,
		    SUM(DECODE(upper(DTL.equip_type), UPPER('FULL SIZE PVC'), DTL.equip_qty, 0)) field1,
		    SUM(DECODE(upper(DTL.equip_type), UPPER('HALF SIZE PVC'), DTL.equip_qty, 0)) field2,
		    HD.flt_no,
		    HD.flt_date,
		    HD.PURPOSE
		  FROM ULD_REL_DTL DTL ,
		    ULD_REL_HD REL,
		    ULD_ISS_HD HD
		  WHERE DTL.equip_type IS NOT NULL
		  AND DTL.equip_qty    IS NOT NULL
		  AND REL.TR_NO         =DTL.TR_NO
		  AND HD.EIR_NO         =DTL.EIR_NO
		  AND HD.flt_no = #FLT_KEY# AND HD.flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')    
		  AND (upper(DTL.EQUIP_TYPE) = upper('FULL SIZE PVC') OR upper(DTL.EQUIP_TYPE) = upper('HALF SIZE PVC'))
		  GROUP BY DTL.uld_key,
		    DTL.eir_no,
		    REL.REL_DATE,
		    HD.EIR_DATE,
		    HD.flt_no,
		    HD.flt_date,
		    HD.PURPOSE
		  )
		GROUP BY
		  flt_no,
		  flt_date,
		  purpose 
	</select>
	
	<select id="getConfigURFAccesoryDetailsCount" parameterClass="java.util.Map" resultClass="java.util.HashMap">
	 	SELECT 
		  	NVL(SUM(field1), 0)   AS LARGE_PVC,
		 	NVL(SUM(field2), 0)   AS SMALL_PVC,
		 	(SELECT MAX(SAP_CUSTOMER_ID) FROM CUST_COMPANY CUST WHERE NVL(CUST.AIRLINE_YN, 'N') = 'Y' AND CUST.CARR_CODE = #FLT_CARR#) SAP_CUSTOMER_ID,
      		(SELECT MAX(SAP_CUSTOMER_ID) FROM MAST_SAP_BILLING_CONFIG SAP WHERE SAP.CARR_CODE = #FLT_CARR# AND SAP.AWB_FLOW = 'E') SAP_BILLING_TO
			FROM
			(SELECT DTL.uld_key,
			REL.REL_DATE,
			SUM(DECODE(upper(DTL.equip_type), UPPER('FULL SIZE PVC'), DTL.equip_qty, 0)) field1,
			SUM(DECODE(upper(DTL.equip_type), UPPER('HALF SIZE PVC'), DTL.equip_qty, 0)) field2,
	        REL.CARR_CODE carr
			FROM ULD_REL_DTL DTL ,
			ULD_REL_HD REL
			WHERE DTL.equip_type IS NOT NULL
			AND DTL.equip_qty    IS NOT NULL
			AND REL.TR_NO         =DTL.TR_NO
			AND REL.EIR_NO         =DTL.EIR_NO
	      	AND REL.REL_DATE = to_date(#FROM_DATE#,'DDMONYY')
          	AND REL.CARR_CODE = #FLT_CARR#
			AND (upper(DTL.EQUIP_TYPE) = upper('FULL SIZE PVC') OR upper(DTL.EQUIP_TYPE) = upper('HALF SIZE PVC'))
			GROUP BY DTL.uld_key,REL.REL_DATE,REL.CARR_CODE
			  )
			GROUP BY
	      	carr
	</select>
	
<select id="sqlGetSAPBillingAirlineTonnageData" parameterClass="java.util.Map"
		resultClass="java.util.HashMap">
		<![CDATA[
		 	SELECT DISTINCT
            TO_CHAR(GT.FLT_DATE, 'YYYYMMDD') FLTDATE, TO_CHAR(GT.SCH_DATE, 'YYYYMMDD') SCH_DATE, TO_CHAR(OPR.ACT_DATE, 'YYYYMMDD') ACT_DATE, 
            GT.AIRLINE AIRLINE, OPR.FLT_TYPE, GT.FLT_TYPE IMP_EXP, GT.FLT_KEY, OPR.FLT_NO, OPR.CARR_CODE FLT_CARR,
            TO_CHAR(GT.FLT_DATE, 'DDMONYY') FLIGHT_DATE,
            GT.TYPE ACFT_TYPE, GT.CALL_SIGN CALLSIGN,
            NVL(BLK_LCL, 0) BLK_LCL,
            NVL(BLK_EPH_DHL, 0) BLK_EPH_DHL,
            NVL(BLK_EPH_OTH, 0) BLK_EPH_OTH,
            NVL(BLK_EPA, 0) BLK_EPA,
            NVL(BLK_EPD, 0) BLK_EPD,
            NVL(BLK_TS, 0) BLK_TS,
            NVL(NBK_TS, 0) NBK_TS,
            NVL(NBK_TS_ULD,0) NBK_TS_ULD,
            NVL(NBK_TS_OFLD, 0) NBK_TS_OFLD_WP,
            NVL(NBK_TS_OFLD_WOP, 0) NBK_TS_OFLD_WOP,
            NVL(NBK_TS_ULD_OFLD,0) NBK_TS_ULD_OFLD_WP,
            NVL(NBK_TS_ULD_OFLD_WOP,0) NBK_TS_ULD_OFLD_WOP,
            NVL(BUP_LCL, 0) BUP_LCL,
            NVL(BUP_EPH_DHL, 0) BUP_EPH_DHL,
            NVL(BUP_EPH_OTH, 0) BUP_EPH_OTH,
            NVL(BUP_EPA, 0) BUP_EPA,
            NVL(BUP_EPD, 0) BUP_EPD,
            NVL(BUP_TS, 0) BUP_TS,
            NVL(
          	NVL(BLK_LCL,0) + NVL(BLK_EPH_KNW,0) + NVL(BLK_EPH_UNK,0) + NVL(BLK_EPA_KNW,0) + NVL(BLK_EPA_UNK,0) + NVL(BLK_EPD_KNW,0) + NVL(BLK_EPD_UNK,0) 
          		+ NVL(BLK_TS,0) + NVL(NBK_TS,0) + NVL(BUP_LCL,0) + NVL(BUP_EPH_KNW,0) + NVL(BUP_EPH_UNK,0) + NVL(BUP_EPA_KNW,0) + NVL(BUP_EPA_UNK,0)
          		+ NVL(BUP_EPD_KNW,0) + NVL(BUP_EPD_UNK,0) 
          		+ NVL(BUP_TS,0), 0) FLIGHT_TOTAL,
            NVL(BLK_LCL_OFLD, 0) BLK_LCL_OFLD,
            NVL(BLK_LCL_OFLD_WOP, 0) BLK_LCL_OFLD_WOP,
            NVL(BLK_TS_OFLD, 0) BLK_TS_OFLD,
            NVL(BLK_TS_OFLD_WOP, 0) BLK_TS_OFLD_WOP,
            NVL(BUP_LCL_OFLD, 0) BUP_LCL_OFLD,  
            NVL(BUP_LCL_OFLD_WOP, 0) BUP_LCL_OFLD_WOP,      
            NVL(BUP_TS_OFLD, 0) BUP_TS_OFLD,
            NVL(BUP_TS_OFLD_WOP, 0) BUP_TS_OFLD_WOP,
            NVL(REBUILD, 0) REBUILD,
            NVL(EPH_REBUILD, 0) EPH_REBUILD,
            NVL(EPA_REBUILD, 0) EPA_REBUILD,
            NVL(EPD_REBUILD, 0) EPD_REBUILD,   
            NVL(LARGE_PVC, 0) LARGE_PVC,
            NVL(SMALL_PVC, 0) SMALL_PVC,        
            NVL(WRAP, 0) WRAP,
            NVL(BLK_LCL, 0) + NVL(BLK_EPH_DHL, 0) + NVL(BLK_EPH_OTH, 0) + NVL(BLK_EPA, 0) + NVL(BLK_EPD, 0) + NVL(BLK_TS, 0) 
				+ NVL(NBK_TS, 0) + NVL(NBK_TS_ULD,0) + NVL(NBK_TS_OFLD, 0) + NVL(NBK_TS_OFLD_WOP, 0) + NVL(NBK_TS_ULD_OFLD,0) 
				+ NVL(NBK_TS_ULD_OFLD_WOP,0) + NVL(BUP_LCL, 0) + NVL(BUP_EPH_DHL, 0) + NVL(BUP_EPH_OTH, 0) + NVL(BUP_EPA, 0) 
				+ NVL(BUP_EPD, 0) + NVL(BUP_TS, 0) + NVL(BLK_LCL_OFLD, 0) + NVL(BLK_LCL_OFLD_WOP, 0) + NVL(BLK_TS_OFLD, 0) 
				+ NVL(BLK_TS_OFLD_WOP, 0) + NVL(BUP_LCL_OFLD, 0) + NVL(BUP_LCL_OFLD_WOP, 0) + NVL(BUP_TS_OFLD, 0) + NVL(BUP_TS_OFLD_WOP, 0) 
				+ NVL(REBUILD, 0) + NVL(EPH_REBUILD, 0) + NVL(EPA_REBUILD, 0) + NVL(EPD_REBUILD, 0) + NVL(LARGE_PVC, 0) + NVL(SMALL_PVC, 0) + NVL(WRAP, 0) + NVL(WIPP, 0) + NVL(FCC, 0) TOTAL,
            NVL(WIPP,0) WIPP, NVL(FCC,0) FCC, (
            	SELECT MAX(SAP_CUSTOMER_ID) FROM CUST_COMPANY CUST
            	WHERE NVL(CUST.AIRLINE_YN, 'N') = 'Y' AND CUST.CARR_CODE = GT.AIRLINE
            ) SAP_CUSTOMER_ID
            FROM GT_AIRL_TONNAGE_REPT GT
            JOIN FLT_OPR OPR 
		    ON GT.FLT_KEY = OPR.FLT_KEY AND GT.SCH_DATE = OPR.SCH_DATE AND GT.FLT_TYPE = DECODE(OPR.FLT_TYPE, 'A', 'I', 'D', 'E')
		    JOIN FLT_OPR_EVENTS EVT
	 		ON EVT.TR_NO = OPR.TR_NO
            WHERE SEQ_NO = #SEQ_NO#
            AND TRUNC(EVT.FLT_CLS_DATE) BETWEEN TO_DATE(#FROM_DATE#, 'DDMONYY') AND TO_DATE(#TO_DATE#, 'DDMONYY')
		]]>
		<isNotEmpty property="NO_PREFIX">
			AND AIRLINE NOT IN (
				SELECT DISTINCT CARRIER_CODE FROM REPT_CARR_AWB_PREFIX WHERE AWB_PREFIX IS NOT NULL
			)
		</isNotEmpty>
		<isNotEmpty property="WITH_PREFIX">
			<isNotEmpty property="CARR_CODE">
				AND AIRLINE = #CARR_CODE#
			</isNotEmpty>
		</isNotEmpty>
	</select>
	<select id="sqlGetSAPBillingAirlineMailTonnageData" parameterClass="java.util.Map"
		resultClass="java.util.HashMap">
		<![CDATA[
			SELECT
			TO_CHAR(GT.FLT_DATE, 'YYYYMMDD') FLTDATE, TO_CHAR(GT.SCH_DATE, 'YYYYMMDD') SCH_DATE, TO_CHAR(OPR.ACT_DATE, 'YYYYMMDD') ACT_DATE, 
			GT.AIRLINE AIRLINE, OPR.FLT_TYPE, GT.FLT_TYPE IMP_EXP, GT.FLT_KEY, OPR.FLT_NO, OPR.CARR_CODE FLT_CARR,
			GT.TYPE ACFT_TYPE, GT.CALL_SIGN CALLSIGN,
			NVL(BLK_LCL, 0) BLK_LCL,
			NVL(BLK_EPH_KNW, 0) BLK_EPH_KNW,
			NVL(BLK_EPH_UNK, 0) BLK_EPH_UNK,
			NVL(BLK_EPA_KNW, 0) BLK_EPA_KNW,
			NVL(BLK_EPA_UNK, 0) BLK_EPA_UNK,
			NVL(BLK_EPD_KNW, 0) BLK_EPD_KNW,
			NVL(BLK_EPD_UNK, 0) BLK_EPD_UNK,
			NVL(BLK_TS, 0) BLK_TS,
			NVL(BUP_LCL, 0) BUP_LCL,
			NVL(BUP_EPH_KNW, 0) BUP_EPH_KNW,
			NVL(BUP_EPH_UNK, 0) BUP_EPH_UNK,
			NVL(BUP_EPA_KNW, 0) BUP_EPA_KNW,
			NVL(BUP_EPA_UNK, 0) BUP_EPA_UNK,
			NVL(BUP_EPD_KNW, 0) BUP_EPD_KNW,
			NVL(BUP_EPD_UNK, 0) BUP_EPD_UNK,		
			NVL(BUP_TS, 0) BUP_TS,
			NVL((BLK_LCL+BLK_TS+BUP_LCL+BUP_TS), 0) FLIGHT_TOTAL,
			NVL(BLK_LCL_OFLD, 0) BLK_LCL_OFLD,
			NVL(BLK_TS_OFLD, 0) BLK_TS_OFLD,
			NVL(BUP_LCL_OFLD, 0) BUP_LCL_OFLD,	
			NVL(BUP_TS_OFLD, 0) BUP_TS_OFLD,
			NVL(REBUILD, 0) REBUILD,
			NVL(EPH_REBUILD, 0) EPH_REBUILD,
			NVL(EPA_REBUILD, 0) EPA_REBUILD,
			NVL(EPD_REBUILD, 0) EPD_REBUILD,
			NVL(LARGE_PVC, 0) LARGE_PVC,
			NVL(SMALL_PVC, 0) SMALL_PVC,
			NVL(WRAP, 0) WRAP,
			NVL(TARMAC_MAIL_PPK, 0) TARMAC_MAIL_PPK,
			NVL(TARMAC_MAIL_BULK, 0) TARMAC_MAIL_BULK,
			NVL((BLK_LCL_OFLD+BLK_TS_OFLD+BUP_LCL_OFLD+BUP_TS_OFLD) , 0) OFFLOAD_TOTAL, (
            	SELECT MAX(SAP_CUSTOMER_ID) FROM CUST_COMPANY CUST
            	WHERE NVL(CUST.AIRLINE_YN, 'N') = 'Y' AND CUST.CARR_CODE = GT.AIRLINE
            ) SAP_CUSTOMER_ID
	 		FROM GT_AIRL_TONNAGE_REPT GT 
	 		JOIN FLT_OPR OPR 
	 		ON GT.FLT_KEY = OPR.FLT_KEY AND GT.SCH_DATE = OPR.SCH_DATE AND GT.FLT_TYPE = DECODE(OPR.FLT_TYPE, 'A', 'I', 'D', 'E')
	 		JOIN FLT_OPR_EVENTS EVT
	 		ON EVT.TR_NO = OPR.TR_NO
	 		WHERE TRUNC(EVT.FLT_CLS_DATE) BETWEEN TO_DATE(#FROM_DATE#, 'DDMONYY') AND TO_DATE(#TO_DATE#, 'DDMONYY')
		]]>
 	</select>
	<select id="sqlGetSAPBillingTarmacInterfaceTonnageData" parameterClass="java.util.Map"
		resultClass="java.util.HashMap">
		<![CDATA[
			SELECT
			TO_CHAR(GT.FLT_DATE, 'YYYYMMDD') FLTDATE, TO_CHAR(GT.SCH_DATE, 'YYYYMMDD') SCH_DATE, TO_CHAR(OPR.ACT_DATE, 'YYYYMMDD') ACT_DATE, 
			GT.AIRLINE AIRLINE, OPR.FLT_TYPE, GT.FLT_TYPE IMP_EXP, GT.FLT_KEY, OPR.FLT_NO, OPR.CARR_CODE FLT_CARR,
			GT.TYPE ACFT_TYPE, GT.CALL_SIGN CALLSIGN,
			NVL(TARMAC_OFFLOAD, 0) TARMACOFFLOAD,
			NVL(BLK_LCL, 0) BLK_LCL,
			NVL(BLK_EPH_KNW, 0) BLK_EPH_KNW,
			NVL(BLK_EPH_UNK, 0) BLK_EPH_UNK,
			NVL(BLK_EPA_KNW, 0) BLK_EPA_KNW,
			NVL(BLK_EPA_UNK, 0) BLK_EPA_UNK,
			NVL(BLK_EPD_KNW, 0) BLK_EPD_KNW,
			NVL(BLK_EPD_UNK, 0) BLK_EPD_UNK,
			NVL(BLK_TS, 0) BLK_TS,
			NVL(BUP_LCL, 0) BUP_LCL,
			NVL(BUP_EPH_KNW, 0) BUP_EPH_KNW,
			NVL(BUP_EPH_UNK, 0) BUP_EPH_UNK,
			NVL(BUP_EPA_KNW, 0) BUP_EPA_KNW,
			NVL(BUP_EPA_UNK, 0) BUP_EPA_UNK,
			NVL(BUP_EPD_KNW, 0) BUP_EPD_KNW,
			NVL(BUP_EPD_UNK, 0) BUP_EPD_UNK,
			NVL(BUP_TS, 0) BUP_TS,
			NVL(BLK_LCL_OFLD, 0) BLK_LCL_OFLD,
			NVL(BLK_TS_OFLD, 0) BLK_TS_OFLD,
			NVL(BUP_LCL_OFLD, 0) BUP_LCL_OFLD,	
			NVL(BUP_TS_OFLD, 0) BUP_TS_OFLD,
			NVL(REBUILD, 0) REBUILD,
			NVL(EPH_REBUILD, 0) EPH_REBUILD,
			NVL(EPA_REBUILD, 0) EPA_REBUILD,
			NVL(EPD_REBUILD, 0) EPD_REBUILD,
			NVL(LARGE_PVC, 0) LARGE_PVC,
			NVL(SMALL_PVC, 0) SMALL_PVC,
			NVL(WRAP, 0) WRAP,
			NVL(REBUILD, 0)  EXP_REBUILD_WEIGHT,
			NVL(BLK_IF_0_5, 0)  BLK_IF_0_5,
			NVL(BLK_IF_5, 0)  BLK_IF_5,
			NVL(BUP_IF_0_5, 0)  BUP_IF_0_5,
			NVL(BUP_IF_5, 0)  BUP_IF_5,
			NVL(M_3, 0)  M_3,
			NVL(TO_NUMBER(M_3_5), 0)  M_3_5,
			NVL(TO_NUMBER(M_5), 0) M_5, (
            	SELECT MAX(SAP_CUSTOMER_ID) FROM CUST_COMPANY CUST
            	WHERE NVL(CUST.AIRLINE_YN, 'N') = 'Y' AND CUST.CARR_CODE = GT.AIRLINE
            ) SAP_CUSTOMER_ID
	 		FROM GT_AIRL_TONNAGE_REPT GT
	 		JOIN FLT_OPR OPR
	 		ON GT.FLT_KEY = OPR.FLT_KEY AND GT.SCH_DATE = OPR.SCH_DATE AND GT.FLT_TYPE = DECODE(OPR.FLT_TYPE, 'A', 'I', 'D', 'E')
	 		JOIN FLT_OPR_EVENTS EVT
	 		ON EVT.TR_NO = OPR.TR_NO
	 		WHERE TRUNC(EVT.FLT_CLS_DATE) BETWEEN TO_DATE(#FROM_DATE#, 'DDMONYY') AND TO_DATE(#TO_DATE#, 'DDMONYY')
		]]>
		<isNotEmpty property="NO_PREFIX">
			AND AIRLINE NOT IN (
				SELECT DISTINCT CARRIER_CODE FROM REPT_CARR_AWB_PREFIX WHERE AWB_PREFIX IS NOT NULL
			)
		</isNotEmpty>
		<isNotEmpty property="WITH_PREFIX">
			<isNotEmpty property="CARR_CODE">
				AND AIRLINE = #CARR_CODE#
			</isNotEmpty>
		</isNotEmpty>
 	</select>
	<select id="sqlGetSAPBillingCBXTonnageData" parameterClass="java.util.Map"
		resultClass="cargo.cms.billing.bo.SAPBillingBO">
		<![CDATA[
			with CBX_TONNAGE as(
			SELECT PMAN.TRK_FLT_KEY, PMAN.TRK_FLT_DATE,
			NVL(TRK.SERVICE_CODE, LEG.SERVICE_CODE) chargeCode,AWB.DEST dest,
			AWB.CARR_CODE carrier, AWB.AWB_NO awbNo, TO_CHAR(AWB.AWB_DATE, 'YYYYMMDD') awbDate, AWB.AWB_TYPE awbFlow, CAWB.BILL_WT quantity, (
            	SELECT MAX(SAP_CUSTOMER_ID) FROM CUST_COMPANY CUST
            	WHERE NVL(CUST.AIRLINE_YN, 'N') = 'Y' AND NVL(CUST.CARR_CODE, '-') = AWB.CARR_CODE
            ) customerNo,
            CASE
	            WHEN CAWB.AWB_PRFX IS NOT NULL THEN (
	            	SELECT MAX(SAP_CUSTOMER_ID) FROM MAST_SAP_BILLING_CONFIG SAP
	            	WHERE SAP.CARR_CODE = AWB.CARR_CODE AND SAP.AWB_FLOW = 'I'
	            	AND sap.charge_item=NVL(TRK.SERVICE_CODE, LEG.SERVICE_CODE) 
	            	AND (SAP.AWB_PREFIX IS NULL OR NVL(SAP.AWB_PREFIX, '+') = CAWB.AWB_PRFX)
	            )
	            WHEN CAWB.AWB_PRFX IS NULL THEN (
	            	SELECT MAX(SAP_CUSTOMER_ID) FROM MAST_SAP_BILLING_CONFIG SAP
	            	WHERE SAP.CARR_CODE = AWB.CARR_CODE AND SAP.AWB_FLOW = 'I'
	            	AND sap.charge_item=NVL(TRK.SERVICE_CODE, LEG.SERVICE_CODE)
	            )
	            ELSE NULL
            END invoiceCustomerNo
			FROM CDT_PMAN_AWB PMAN
			JOIN CDT_AWB CAWB
			ON CAWB.AWB_NO = PMAN.AWB_NO AND CAWB.AWB_DATE = PMAN.AWB_DATE
			JOIN AWB AWB
			ON AWB.AWB_NO = PMAN.AWB_NO AND AWB.AWB_DATE = PMAN.AWB_DATE
			LEFT JOIN ITM_TRK_FLT TRK
			ON TRK.TRUCK_FLT_NO = PMAN.TRK_FLT_KEY AND TRK.TRUCK_FLT_DATE = PMAN.TRK_FLT_DATE AND PMAN.UNLDG_PT = TRK.UNLDG_PT2
			LEFT JOIN ITM_TRK_FLT_LEG LEG
			ON LEG.TRUCK_FLT_NO = PMAN.TRK_FLT_KEY AND LEG.TRUCK_FLT_DATE = PMAN.TRK_FLT_DATE AND PMAN.UNLDG_PT = LEG.DEST
			LEFT JOIN (SELECT FLT.POST_DT, FLT.TRUCK_FLT_NO , FLT.TRUCK_FLT_DATE , LEG.DEST from ITM_TRK_FLT FLT , ITM_TRK_FLT_LEG LEG
			WHERE FLT.TRUCK_FLT_NO = LEG.TRUCK_FLT_NO AND FLT.TRUCK_FLT_DATE = LEG.TRUCK_FLT_DATE) TRK2 ON  TRK2.TRUCK_FLT_NO = PMAN.TRK_FLT_KEY AND TRK2.TRUCK_FLT_DATE = PMAN.TRK_FLT_DATE AND TRK2.DEST = PMAN.UNLDG_PT 
			WHERE TRUNC(NVL(TRK.POST_DT,TRK2.POST_DT)) BETWEEN TO_DATE(#FROM_DATE#, 'DDMONYY') AND TO_DATE(#TO_DATE#, 'DDMONYY')
			AND AWB.CARR_CODE not in (select code from mast_carrier where NVL(cmb_cbx_tonnage,'N')='Y')
			AND NVL(TRK.SERVICE_CODE, LEG.SERVICE_CODE) LIKE 'IA%'
			ORDER BY PMAN.TRK_FLT_DATE
			)
			select TRK_FLT_KEY,TO_CHAR(TRK_FLT_DATE, 'YYYYMMDD') ActualFltDate,chargeCode,carrier,
          	quantity,awbNo,awbDate,
      		dest,customerNo,invoiceCustomerNo,awbFlow
      		from CBX_TONNAGE where (select count(1) from mast_carrier where code=carrier and NVL(cmb_cbx_tonnage,'N')<>'Y')>0
          	group by TRK_FLT_KEY,TRK_FLT_DATE,carrier,dest,chargeCode,customerNo,invoiceCustomerNo,awbFlow,awbNo,awbDate,quantity order by TRK_FLT_KEY
		]]>
	</select>
	<!--Combine CBX Tonnage and Pick any one AWB (In case of CX & KA combine both as CX Tonnage)  -->
	<select id="sqlGetSAPBillingCBXTonnageDataForConfig" parameterClass="java.util.Map"
		resultClass="cargo.cms.billing.bo.SAPBillingBO">
		<![CDATA[
			with TONNAGE as(
      			SELECT PMAN.TRK_FLT_KEY, PMAN.TRK_FLT_DATE,CAWB.AWB_PRFX,
				NVL(TRK.SERVICE_CODE, LEG.SERVICE_CODE) chargeCode,AWB.DEST dest,
        	CASE
	            WHEN (select count(a.grp_carr_code) from mast_carr_grp a join mast_carrier b on  (a.carr_code=b.code or a.grp_carr_code=b.code) 
              where b.cmb_cbx_tonnage='Y' and  b.code=AWB.CARR_CODE) > 0 THEN (
	            	select FUN_GET_PARENT_CARR(AWB.CARR_CODE) from dual
	            )
	            WHEN (select count(code) from mast_carrier where cmb_cbx_tonnage='Y' 
              and code=AWB.CARR_CODE) > 0 THEN (
	            	AWB.CARR_CODE
	            )
	            ELSE AWB.CARR_CODE
            END carrier,
            AWB.AWB_NO awbNo, TO_CHAR(AWB.AWB_DATE, 'YYYYMMDD') awbDate, AWB.AWB_TYPE awbFlow, CAWB.BILL_WT quantity
			FROM CDT_PMAN_AWB PMAN
			JOIN CDT_AWB CAWB
			ON CAWB.AWB_NO = PMAN.AWB_NO AND CAWB.AWB_DATE = PMAN.AWB_DATE
			JOIN AWB AWB
			ON AWB.AWB_NO = PMAN.AWB_NO AND AWB.AWB_DATE = PMAN.AWB_DATE
			LEFT JOIN ITM_TRK_FLT TRK
			ON TRK.TRUCK_FLT_NO = PMAN.TRK_FLT_KEY AND TRK.TRUCK_FLT_DATE = PMAN.TRK_FLT_DATE AND PMAN.UNLDG_PT = TRK.UNLDG_PT2
			LEFT JOIN ITM_TRK_FLT_LEG LEG
			ON LEG.TRUCK_FLT_NO = PMAN.TRK_FLT_KEY AND LEG.TRUCK_FLT_DATE = PMAN.TRK_FLT_DATE AND PMAN.UNLDG_PT = LEG.DEST
			LEFT JOIN (SELECT FLT.POST_DT, FLT.TRUCK_FLT_NO , FLT.TRUCK_FLT_DATE , LEG.DEST from ITM_TRK_FLT FLT , ITM_TRK_FLT_LEG LEG
			WHERE FLT.TRUCK_FLT_NO = LEG.TRUCK_FLT_NO AND FLT.TRUCK_FLT_DATE = LEG.TRUCK_FLT_DATE) TRK2 ON  TRK2.TRUCK_FLT_NO = PMAN.TRK_FLT_KEY AND TRK2.TRUCK_FLT_DATE = PMAN.TRK_FLT_DATE AND TRK2.DEST = PMAN.UNLDG_PT
			WHERE TRUNC(NVL(TRK.POST_DT,TRK2.POST_DT)) BETWEEN TO_DATE(#FROM_DATE#, 'DDMONYY') AND TO_DATE(#TO_DATE#, 'DDMONYY')
			AND NVL(TRK.SERVICE_CODE, LEG.SERVICE_CODE) LIKE 'IA%'
			ORDER BY PMAN.TRK_FLT_DATE
      		),
  		CBX_TONNAGE as (
      		SELECT TRK_FLT_KEY, TRK_FLT_DATE,AWB_PRFX,
				chargeCode,dest,carrier,
            awbNo,awbDate, awbFlow,quantity,
            (
            	SELECT MAX(SAP_CUSTOMER_ID) FROM CUST_COMPANY CUST
            	WHERE NVL(CUST.AIRLINE_YN, 'N') = 'Y' AND NVL(CUST.CARR_CODE, '-') = carrier
            	) customerNo,
            CASE
	            WHEN AWB_PRFX IS NOT NULL THEN (
	            	SELECT MAX(SAP_CUSTOMER_ID) FROM MAST_SAP_BILLING_CONFIG SAP
	            	WHERE SAP.CARR_CODE = carrier AND SAP.AWB_FLOW = 'I'
	            	AND sap.charge_item=chargeCode
	            	AND (SAP.AWB_PREFIX IS NULL OR NVL(SAP.AWB_PREFIX, '+') = AWB_PRFX)
	            )
	            WHEN AWB_PRFX IS NULL THEN (
	            	SELECT MAX(SAP_CUSTOMER_ID) FROM MAST_SAP_BILLING_CONFIG SAP
	            	WHERE SAP.CARR_CODE = carrier AND SAP.AWB_FLOW = 'I'
	            	AND sap.charge_item=chargeCode
	            )
	            ELSE NULL
            END invoiceCustomerNo
            from TONNAGE
          )
         	select carrier,chargeCode,TO_CHAR(TRK_FLT_DATE, 'YYYYMMDD') ActualFltDate,customerNo,invoiceCustomerNo,awbFlow,
          	(select awbNo from CBX_TONNAGE a where a.chargeCode=CBX_TONNAGE.chargeCode and a.carrier=CBX_TONNAGE.carrier and a.TRK_FLT_DATE=CBX_TONNAGE.TRK_FLT_DATE and rownum=1) awbNo,
          	(select awbDate from CBX_TONNAGE a where a.chargeCode=CBX_TONNAGE.chargeCode and a.carrier=CBX_TONNAGE.carrier and a.TRK_FLT_DATE=CBX_TONNAGE.TRK_FLT_DATE and rownum=1) awbDate,
          	sum(quantity) quantity
          	from CBX_TONNAGE where (select count(1) from mast_carrier where code=carrier and cmb_cbx_tonnage='Y')>0
          	group by  carrier,chargeCode,TRK_FLT_DATE,customerNo,invoiceCustomerNo,awbFlow order by carrier,chargeCode,TRK_FLT_DATE
		]]>
	</select>
        <select id="sqlFetchChargeItemForSAP" parameterClass="cargo.cms.billing.bo.ChargeItemSAPBO" resultClass="cargo.cms.billing.bo.ChargeItemSAPBO">
		select TR_NO as trNo,CARR_CODE as carrCode,CHARGE_ITEM as chrgItem,FLOW as flow,to_char(LM_DATE,'DDMONYY HH24MISS') as lmDate from BILL_SAP_ITEM_CODE where CARR_CODE=#carrCodeOriginal#
	</select>
	
	<insert id="insertChargeItemForSAP"  parameterClass="cargo.cms.billing.bo.ChargeItemSAPBO">
		INSERT INTO BILL_SAP_ITEM_CODE
		  (
		    TR_NO,
		    CARR_CODE,
		    CHARGE_ITEM,
		    FLOW,
		    CR_USER_ID,
		    CR_DATE,
		    LM_USER_ID,
		    LM_DATE)
		  VALUES
		  (
		    BILL_SAP_ITEM_CODE_SEQ.NEXTVAL,
		    #carrCode#,
		    #chrgItem#,
		    #flow#,
		    #userName#,
		    sysdate,
		    #userName#,
		    sysdate)
	</insert>
	
	<update id="updateChargeItemForSAP"  parameterClass="cargo.cms.billing.bo.ChargeItemSAPBO">
			UPDATE BILL_SAP_ITEM_CODE
			SET 
			CHARGE_ITEM = #chrgItem#,
			FLOW = #flow#,
			LM_USER_ID = #userName#,
			LM_DATE = sysdate
			WHERE TR_NO = #trNo#
	</update>
	
	<delete id="deleteChargeItemForSAP"  parameterClass="cargo.cms.billing.bo.ChargeItemSAPBO">
		DELETE from BILL_SAP_ITEM_CODE where EXISTS (select * from BILL_SAP_ITEM_CODE where TR_NO=#trNo#) and TR_NO=#trNo#
	</delete>
	
	<select id="getChargeListForAirlineSAP" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		select charge_item from bill_sap_item_code
		where carr_code = #CARR# and (flow = DECODE(#FLOW#, 'A', 'I', 'D', 'E') or flow is null)
	</select>
	<select id="sqlGetCarrConfigForCombCBXTann" parameterClass="java.lang.String" resultClass="java.lang.String">
		select NVL(cmb_cbx_tonnage,'N') from mast_carrier where code=#carr#
	</select>
	<select id="sqlGetCarrListConfigForCombCBXTann" parameterClass="java.lang.String" resultClass="cargo.cms.billing.bo.SAPBillingBO">
		select distinct(carr_code) carrier from ULD_REL_HD where rel_date=to_date(#fromDate#,'DDMONYY')
	</select>	
	
	<select id="sqlGetSAPCustomerNo" parameterClass="java.util.Map" resultClass="java.lang.String">
		SELECT MAX(SAP_CUSTOMER_ID) FROM MAST_SAP_BILLING_CONFIG SAP
	    WHERE SAP.CARR_CODE = #CARRIER#
	    <isNotEmpty property="AWBFLOW">
			AND (SAP.AWB_FLOW IS NULL OR SAP.AWB_FLOW = DECODE(#AWBFLOW#, 'A', 'I', 'D', 'E'))
		</isNotEmpty>
	    <isNotEmpty property="AWBPREFIX">
			AND (SAP.AWB_PREFIX IS NULL OR SAP.AWB_PREFIX = #AWBPREFIX#)
		</isNotEmpty>
		<isNotEmpty property="CHARGEITEM">
			AND CHARGE_ITEM = #CHARGEITEM#
		</isNotEmpty>
	</select>
	
<select id="getStorageChargeMasterList" parameterClass="java.lang.String" resultClass="cargo.cms.billing.bo.StorageChargeMasterBO">
		SELECT cargo_desc as cargoDesc,		  
		  (select code_desc from MAST_CODE_DTL where CODE_TYPE = 'MAST_SC_CARGO_TYPE' AND CODE = cargo_type) as cargoType,
		  to_char(eff_date_from,'DDMONYY') as effDateFrom,
		  to_char(eff_date_to,'DDMONYY') as  effDateTo,
		  free_days as freeDays,
		  include_sunday as includeSunday,
		  item_code as itemCode, 
		  priority as priority,
		  seq_num as seqNumber,
		  NVL((select code_desc from MAST_CODE_DTL where CODE_TYPE = 'SPL_CODE_TYPE' AND CODE = shc_type),'') as shcType
		FROM MAST_STRG_CHARGES_CONFIG where nvl(del_yn,'N') = 'N'
		<![CDATA[
			AND EFF_DATE_TO > = TRUNC(SYSDATE)
		]]>
	</select>
		
	<select id="getDelStorageChargeMasterList" parameterClass="java.lang.String" resultClass="cargo.cms.billing.bo.StorageChargeMasterBO">
		SELECT cargo_desc as cargoDesc,		  
		  (select code_desc from MAST_CODE_DTL where CODE_TYPE = 'MAST_SC_CARGO_TYPE' AND CODE = cargo_type) as cargoType,
		  to_char(eff_date_from,'DDMONYY') as effDateFrom,
		  to_char(eff_date_to,'DDMONYY') as  effDateTo,
		  free_days as freeDays,
		  include_sunday as includeSunday,
		  item_code as itemCode, 
		  priority as priority,
		  seq_num as seqNumber,
		  NVL((select code_desc from MAST_CODE_DTL where CODE_TYPE = 'SPL_CODE_TYPE' AND CODE = shc_type),'') as shcType
		FROM MAST_STRG_CHARGES_CONFIG where nvl(del_yn,'N') = 'Y'	ORDER BY eff_date_from DESC
		
	</select>
		
	<update id="deleteStorageChargeMaster"  parameterClass="cargo.cms.billing.bo.StorageChargeMasterBO">
			UPDATE MAST_STRG_CHARGES_CONFIG SET DEL_YN = 'Y' , LM_USER_ID = #crUserID# , LM_DATE = SYSDATE WHERE SEQ_NUM = #seqNumber#
	</update>
	
	<insert id="insertStorageChargeMaster"  parameterClass="cargo.cms.billing.bo.StorageChargeMasterBO">
		INSERT INTO MAST_STRG_CHARGES_CONFIG ( CARGO_TYPE, CARGO_DESC,    PRIORITY,    SHC_TYPE,    ITEM_CODE,    FREE_DAYS,    INCLUDE_SUNDAY,    EFF_DATE_FROM,    
		    EFF_DATE_TO,    SEQ_NUM,        CR_USER_ID,    CR_DATE,    LM_USER_ID,    LM_DATE )
		  VALUES (#cargoType#,    #cargoDesc#,    #priority#,    #shcType#,    #itemCode#,    #freeDays#,    #includeSunday#,    to_date(#effDateFrom#,'DDMONYY'),    
		    to_date(#effDateTo#,'DDMONYY') ,    MAST_STRG_CHARGES_PK_SEQ.NEXTVAL,   #crUserID#,    SYSDATE,  #crUserID# ,    SYSDATE)
	</insert>
	
	
	<select id="validateItemCodeWithMaster" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		SELECT count(1) FROM BILL_ITM_MASTER WHERE ITM_CODE = #itemCode#
	</select>
	
	<select id="validateConfigExistsAlready" parameterClass="cargo.cms.billing.bo.StorageChargeMasterBO" resultClass="java.lang.Integer">
	  <![CDATA[
	 	SELECT count(1) FROM MAST_STRG_CHARGES_CONFIG 
  		WHERE (cargo_type = #cargoType# AND (eff_date_from <= TO_DATE(#effDateFrom#,'DDMONYY') AND eff_date_to >= TO_DATE(#effDateTo#,'DDMONYY')) AND nvl(del_yn,'N') = 'N')
      		OR (cargo_type = #cargoType# AND (eff_date_to BETWEEN TO_DATE(#effDateFrom#,'DDMONYY') and TO_DATE(#effDateTo#,'DDMONYY')) AND nvl(del_yn,'N') = 'N') 
       ]]>
  	</select>
  	
  	<select id="validateSCPriorityDuplicated" parameterClass="cargo.cms.billing.bo.StorageChargeMasterBO" resultClass="java.lang.Integer">
	  <![CDATA[
	 	SELECT count(1) FROM MAST_STRG_CHARGES_CONFIG 
  		WHERE (cargo_type != #cargoType# AND PRIORITY = #priority# AND (eff_date_from <= TO_DATE(#effDateFrom#,'DDMONYY') AND eff_date_to >= TO_DATE(#effDateTo#,'DDMONYY')) AND nvl(del_yn,'N') = 'N')
      		OR (cargo_type != #cargoType# AND PRIORITY = #priority# AND  (eff_date_to BETWEEN TO_DATE(#effDateFrom#,'DDMONYY') and TO_DATE(#effDateTo#,'DDMONYY')) AND nvl(del_yn,'N') = 'N') 
       ]]>
  	</select>  
  	
  	<!-- Not Settled Invoice Manual Update  Start-->
  	
  	<select id="fetchAgentNameFinCodeAndSAPForAjax" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	 	select code_desc as agentName,FIN_CODE as finCode,SAP_CUSTOMER_ID as sapId from CUST_COMPANY where UPPER(code_desc) like UPPER(#keySearchStr# ||'%') and ROWNUM &lt;= #maxRecFetch# AND ACTIVE = 'Y' AND AGENT_YN = 'Y' AND BLACKLISTED='N' ORDER BY code_desc    
	</select> 	
	
	<select id="sqlNotYetSettledCreditUsageDetail" parameterClass="cargo.cms.finance.report.bo.FinanceTransReportBO"
		resultClass="cargo.cms.finance.report.bo.FinanceTransReportBO">
  		<![CDATA[
			SELECT AWB.AWB_TYPE flowType, AWB.AWB_NO awbNo, TO_CHAR(AWB.AWB_DATE, 'DDMONYY') awbDate, 
			AWB.CARR_CODE carrCode, CNSDTLTAB.CNSLDT_INV_NO consoleInvoiceNo, TO_CHAR(CNSDTLTAB.CNSLDT_INV_DATE, 'DDMONYY') consoleInvoiceDate,
			CNSDTLTAB.INV_NO invoiceNo, CNSDTLTAB.ADJ_NO invoiceAdjustNo, CRDDTL.CR_AMT amount, CHARGDTL.ITM_DESC chargeItem, CRDDTL.MAST_SEQ_NO creditLine, 
			CNSDTLTAB.SAP_SETTLE_YN settle, CRDDTL.SEQ_NO seqNo
			FROM (
				SELECT CNSLDT_INV_NO, CNSLDT_INV_DATE, INV_NO, DOC_LINE_NO INV_DOC_LINE_NO , NULL ADJ_NO, NULL ADJ_DOC_LINE_NO,
				CHARGE_AMT CONSOL_INV_AMT, CHRG_TR_NO, ITM_CODE, ITM_CODE_SFX, SAP_SETTLE_YN
				FROM BILL_INV_DTL WHERE CNSLDT_INV_DATE IS NOT NULL
				UNION
				SELECT ADJDTL.CNSLDT_INV_NO, ADJDTL.CNSLDT_INV_DATE, NULL INV_NO, NULL INV_DOC_LINE_NO,
				ADJDTL.ADJ_NO, ADJDTL.DOC_LINE_NO ADJ_DOC_LINE_NO, ADJDTL.ADJ_AMT CONSOL_INV_AMT, CHRG_TR_NO, ADJDTL.ITM_CODE, ADJDTL.ITM_CODE_SFX, ADJDTL.SAP_SETTLE_YN
				FROM BILL_ADJ_DTL ADJDTL
				JOIN BILL_INV_DTL INVDTL ON INVDTL.INV_NO = ADJDTL.INV_NO AND INVDTL.DOC_LINE_NO = ADJDTL.IDOC_LINE_NO
				WHERE ADJDTL.CNSLDT_INV_DATE IS NOT NULL
			) CNSDTLTAB
			JOIN BILL_CHARGE_DTL CHARGDTL
			ON CNSDTLTAB.CHRG_TR_NO = CHARGDTL.TR_NO
			LEFT JOIN AWB
			ON AWB.AWB_NO = CHARGDTL.AWB_NO AND AWB.AWB_DATE = CHARGDTL.AWB_DATE
			JOIN BILL_INV_CRD_DTL CRDDTL
			ON (CRDDTL.INV_NO = CNSDTLTAB.INV_NO AND CRDDTL.INV_DOC_LINE_NO = CNSDTLTAB.INV_DOC_LINE_NO)
				OR (CRDDTL.ADJ_NO = CNSDTLTAB.ADJ_NO AND CRDDTL.ADJ_DOC_LINE_NO = CNSDTLTAB.ADJ_DOC_LINE_NO)
			JOIN CUST_COMPANY CUSTCOMPANY
			ON CUSTCOMPANY.CODE = CRDDTL.CUST_NO
			WHERE CNSDTLTAB.CNSLDT_INV_DATE BETWEEN TO_DATE(#fromDate#, 'DDMONYY') AND TO_DATE(#toDate#, 'DDMONYY')
			AND NVL(CNSDTLTAB.SAP_SETTLE_YN,'N') = 'N'
  		]]>
   		<isNotEmpty property="agentName">
			AND CUSTCOMPANY.CODE_DESC = #agentName#
		</isNotEmpty>
  		<isNotEmpty property="finCode">
			AND CUSTCOMPANY.FIN_CODE = #finCode#
		</isNotEmpty>
		<isNotEmpty property="sapNumber">
			AND CUSTCOMPANY.sap_customer_id = #sapNumber#
		</isNotEmpty>
		<dynamic>
			ORDER BY AWB.AWB_TYPE, AWB.CARR_CODE, CNSDTLTAB.CNSLDT_INV_DATE, AWB.AWB_NO, CHARGDTL.ITM_DESC
		</dynamic>
	</select>
	
	<update id="sqlUpdateCXSAPSettleFlagInInvoiceForManualUpdate" parameterClass="cargo.cms.billing.bo.SettlementBO">
			UPDATE BILL_INV_DTL
			SET SAP_SETTLE_YN = DECODE(NVL(#reversal#, 'N'), 'N', 'Y', 'N'), LM_USER_ID = #userID#, LM_DATE = SYSDATE
			WHERE INV_NO= #creditInvoiceNo# AND DOC_LINE_NO= #creditDocline#
	</update>
	
	<update id="sqlUpdateCXSAPSettleFlagInAdjustmentForManualUpdate" parameterClass="cargo.cms.billing.bo.SettlementBO">
			UPDATE BILL_ADJ_DTL
			SET SAP_SETTLE_YN = DECODE(NVL(#reversal#, 'N'), 'N', 'Y', 'N'), LM_USER_ID = #userID#, LM_DATE = SYSDATE
			WHERE ADJ_NO= #creditAdjustNo# AND DOC_LINE_NO= #creditDocline#
	</update>
	<select id="sqlIsSAPSettlementManualUpdate" parameterClass="java.lang.String"  resultClass="java.util.HashMap"	>
		<![CDATA[
			SELECT (
  				(SELECT COUNT(*) FROM BILL_INV_DTL WHERE CNSLDT_INV_NO = #consolidatedInvoiceNo#) +
  				(SELECT COUNT(*) FROM BILL_ADJ_DTL WHERE CNSLDT_INV_NO = #consolidatedInvoiceNo#)) TOTAL,
  				((SELECT COUNT(*) FROM BILL_INV_DTL WHERE CNSLDT_INV_NO = #consolidatedInvoiceNo# AND NVL(SAP_SETTLE_YN, 'N') = 'Y')+
  				(SELECT COUNT(*) FROM BILL_ADJ_DTL WHERE CNSLDT_INV_NO = #consolidatedInvoiceNo# AND NVL(SAP_SETTLE_YN, 'N') = 'Y')) TOTAL_SETTLED FROM dual
		]]>
	</select>
	<select id="isSAPAlreadySettled" parameterClass="java.lang.String"
		resultClass="java.lang.String">
		<![CDATA[
			SELECT
			DECODE(COUNT(1), 0, 'N', 'Y')
			FROM ( 
           		select 1 FROM BILL_INV_CRD_DTL CREDIT
                  JOIN BILL_INV_DTL INVOICE
                  ON INVOICE.INV_NO = CREDIT.INV_NO AND INVOICE.DOC_LINE_NO = CREDIT.INV_DOC_LINE_NO 
                  WHERE CREDIT.SEQ_NO = #PARAM# AND NVL(SAP_SETTLE_YN, 'N') = 'Y'
               	  UNION
           		select 1 FROM BILL_INV_CRD_DTL CREDIT
                  JOIN BILL_ADJ_DTL ADJUST
                  ON ADJUST.ADJ_NO = CREDIT.ADJ_NO AND ADJUST.DOC_LINE_NO = CREDIT.ADJ_DOC_LINE_NO 
                  WHERE CREDIT.SEQ_NO = #PARAM# AND NVL(SAP_SETTLE_YN, 'N') = 'Y'   
      		)
		]]>
	</select>
	
	<select id="get_CUST_AGENT_LEVEL_CRD" parameterClass="java.lang.String"  resultClass="java.util.HashMap"	>
		select NVL(cr_amt,0) CREDIT_LIMIT,NVL(cr_bal,0) CREDIT_BAL from CUST_AGENT_LEVEL_CRD where seq_no=#agentCreditLine#
	</select>
	
	<select id="get_CUST_AGENT_AIRL_CREDIT" parameterClass="java.lang.String"  resultClass="java.util.HashMap"	>
		select NVL(cr_amt,0) CREDIT_LIMIT,NVL(cr_bal,0) CREDIT_BAL from CUST_AGENT_AIRL_CREDIT where seq_no=#agentAirlineCreditLine#
	</select>
	
	<select id="get_CUST_AGENT_CREDIT" parameterClass="java.lang.String"  resultClass="java.util.HashMap"	>
		select NVL(cr_amt,0) CREDIT_LIMIT,NVL(cr_bal,0) CREDIT_BAL from CUST_AGENT_CREDIT where seq_no=#cpctCreditLine#
	</select>
	<!-- Not Settled Invoice Manual Update  End-->
	
	
	<select id="getTCChargeMasterList" parameterClass="java.lang.String" resultClass="cargo.cms.billing.bo.StorageChargeMasterBO">
		SELECT cargo_desc as cargoDesc,		  
		  (select code_desc from MAST_CODE_DTL where CODE_TYPE = 'MAST_TC_CARGO_TYPE' AND CODE = cargo_type) as cargoType,
		  to_char(eff_date_from,'DDMONYY') as effDateFrom,
		  to_char(eff_date_to,'DDMONYY') as  effDateTo,		  
		  item_code as itemCode, 
		  priority as priority,
		  DOC_LINE_NO as docLineNum,
		  SAP_ITEM_CODE_SFX as sapItemCode,
		  NVL((select code_desc from MAST_CODE_DTL where CODE_TYPE = 'SPL_CODE_TYPE' AND CODE = shc_type),'') as shcType
		FROM MAST_TC_CHARGES_CONFIG where nvl(del_yn,'N') = 'N' AND CARR_CODE = #carrier# 
		<![CDATA[
			AND EFF_DATE_TO > = trunc(SYSDATE)
		]]>
	</select>
	
	<select id="getDelTCChargeMasterList" parameterClass="java.lang.String" resultClass="cargo.cms.billing.bo.StorageChargeMasterBO">
		SELECT cargo_desc as cargoDesc,		  
		  (select code_desc from MAST_CODE_DTL where CODE_TYPE = 'MAST_TC_CARGO_TYPE' AND CODE = cargo_type) as cargoType,
		  to_char(eff_date_from,'DDMONYY') as effDateFrom,
		  to_char(eff_date_to,'DDMONYY') as  effDateTo,		 
		  item_code as itemCode, 
		  priority as priority,
		  SAP_ITEM_CODE_SFX as sapItemCode,
		  NVL((select code_desc from MAST_CODE_DTL where CODE_TYPE = 'SPL_CODE_TYPE' AND CODE = shc_type),'') as shcType
		FROM MAST_TC_CHARGES_CONFIG where nvl(del_yn,'N') = 'Y'	AND CARR_CODE = #carrier#  ORDER BY eff_date_from DESC
		
	</select>
		
	<update id="deleteTCChargeMaster"  parameterClass="cargo.cms.billing.bo.StorageChargeMasterBO">
			UPDATE MAST_TC_CHARGES_CONFIG SET DEL_YN = 'Y' , LM_USER_ID = #crUserID# , LM_DATE = SYSDATE WHERE CARR_CODE = #carrier# and DOC_LINE_NO = #docLineNum#
	</update>
	
	<insert id="saveTCChargeMasterList"  parameterClass="cargo.cms.billing.bo.StorageChargeMasterBO">
		INSERT INTO MAST_TC_CHARGES_CONFIG ( CARGO_TYPE, CARGO_DESC,    PRIORITY,    SHC_TYPE,    ITEM_CODE,     EFF_DATE_FROM,    
		    EFF_DATE_TO,    CR_USER_ID,    CR_DATE,    LM_USER_ID,    LM_DATE, CARR_CODE , DOC_LINE_NO , SAP_ITEM_CODE_SFX )
		  VALUES (#cargoType#,    #cargoDesc#,    #priority#,    #shcType#,    #itemCode#,   to_date(#effDateFrom#,'DDMONYY'),    
		    to_date(#effDateTo#,'DDMONYY') ,    #crUserID#,    SYSDATE,  #crUserID# ,    SYSDATE, #carrier#, 
		    (SELECT NVL(MAX(DOC_LINE_NO), 0) + 1 FROM MAST_TC_CHARGES_CONFIG WHERE CARR_CODE= #carrier#), #sapItemCode#)
	</insert>
	

	<select id="validateConfigExistsAlreadyTC" parameterClass="cargo.cms.billing.bo.StorageChargeMasterBO" resultClass="java.lang.Integer">
	  <![CDATA[
	 	SELECT count(1) FROM MAST_TC_CHARGES_CONFIG 
  		WHERE ( (cargo_type = #cargoType# AND (eff_date_from <= TO_DATE(#effDateFrom#,'DDMONYY') AND eff_date_to >= TO_DATE(#effDateTo#,'DDMONYY')) AND nvl(del_yn,'N') = 'N')
      		OR (cargo_type = #cargoType# AND (eff_date_to BETWEEN TO_DATE(#effDateFrom#,'DDMONYY') and TO_DATE(#effDateTo#,'DDMONYY')) AND nvl(del_yn,'N') = 'N') ) AND CARR_CODE = #carrier# 
       ]]>
  	</select>
  	
  	<select id="validateSCPriorityDuplicatedTC" parameterClass="cargo.cms.billing.bo.StorageChargeMasterBO" resultClass="java.lang.Integer">
	  <![CDATA[
	 	SELECT count(1) FROM MAST_TC_CHARGES_CONFIG 
  		WHERE ( (cargo_type != #cargoType# AND PRIORITY = #priority# AND (eff_date_from <= TO_DATE(#effDateFrom#,'DDMONYY') AND eff_date_to >= TO_DATE(#effDateTo#,'DDMONYY')) AND nvl(del_yn,'N') = 'N')
      		OR (cargo_type != #cargoType# AND PRIORITY = #priority# AND  (eff_date_to BETWEEN TO_DATE(#effDateFrom#,'DDMONYY') and TO_DATE(#effDateTo#,'DDMONYY')) AND nvl(del_yn,'N') = 'N') )  AND CARR_CODE = #carrier# 
       ]]>
  	</select> 
  	
  	<select id="validateConfigExistsCargoType" parameterClass="cargo.cms.billing.report.bo.GenerateServiceReportBO" resultClass="java.lang.Integer">
	  <![CDATA[
	 	SELECT COUNT(1) FROM MAST_TC_CHARGES_CONFIG WHERE (eff_date_from <= TO_DATE(#fromDate#,'DDMONYY') AND eff_date_to >= TO_DATE(#toDate#,'DDMONYY')) 
	 			AND CARR_CODE = #airLine#  AND cargo_type =  #cargoType# AND NVL(del_yn,'N') = 'N'
	       ]]>
  	</select>
  	
       <select id="getTCSpecialCargoTypeConfiguired" parameterClass="cargo.cms.billing.report.bo.GenerateServiceReportBO" resultClass="cargo.cms.billing.report.bo.GenerateServiceReportBO">
	  	<![CDATA[       	
           	SELECT CARGO_TYPE as cargoType , CARR_CODE as carrCode , SAP_ITEM_CODE_SFX as sapItemSfx  FROM MAST_TC_CHARGES_CONFIG 
  				WHERE ( ( #effDateFrom# BETWEEN eff_date_from and eff_date_to) OR ( #effDateTo# BETWEEN eff_date_from and eff_date_to))
           	AND nvl(del_yn,'N') = 'N' AND CARR_CODE = #carrier#       
          ]]>
  	</select> 
  	
  	<select id="getTCSpecialCargoTypeConfiguiredSAP" parameterClass="java.util.Map" resultClass="cargo.cms.billing.bo.SettlementBO">
  		<![CDATA[
		   SELECT CARGO_TYPE as cargoType , CARR_CODE as carrCode , SAP_ITEM_CODE_SFX as sapItemSfx  FROM MAST_TC_CHARGES_CONFIG 
	  		WHERE ( (eff_date_from <= TO_DATE(#effDateFrom#,'DDMONYY') AND eff_date_to >= TO_DATE(#effDateTo#,'DDMONYY')) OR
	               (eff_date_to BETWEEN TO_DATE(#effDateFrom#,'DDMONYY') and TO_DATE(#effDateTo#,'DDMONYY')) )
	           AND nvl(del_yn,'N') = 'N'
           ]]>
  	</select> 
  	
  	<select id="getTCSpecialCargoTypeConfigSAPWithCarrier" parameterClass="java.util.Map" resultClass="cargo.cms.billing.bo.SettlementBO">
	   <![CDATA[
	   	SELECT CARGO_TYPE as cargoType , CARR_CODE as carrCode , SAP_ITEM_CODE_SFX as sapItemSfx  FROM MAST_TC_CHARGES_CONFIG 
  		WHERE ( (eff_date_from <= TO_DATE(#effDateFrom#,'DDMONYY') AND eff_date_to >= TO_DATE(#effDateTo#,'DDMONYY')) OR
               (eff_date_to BETWEEN TO_DATE(#effDateFrom#,'DDMONYY') and TO_DATE(#effDateTo#,'DDMONYY')) )
           AND nvl(del_yn,'N') = 'N' AND CARR_CODE = #carrier#
            ]]>
  	</select> 
  	
  	<select id="getIncludeCarrierList" parameterClass="cargo.cms.common.utils.bo.BatchJobBO" resultClass="cargo.cms.common.utils.bo.BatchJobBO">
		 WITH carrierList AS (
		    SELECT rule_value FROM cmsrules WHERE rule_code='LATE_TOW_CHARGE'
		  )
		  SELECT trim(regexp_substr(rule_value, '[^,]+', 1, level)) carrierCode
		  FROM carrierList CONNECT BY regexp_substr(rule_value, '[^,]+', 1, level) IS NOT NULL
	</select>	
	
		<select id="lateTowForPax" parameterClass="cargo.cms.billing.report.bo.GenerateServiceReportBO"
		resultClass="cargo.cms.billing.report.bo.GenerateServiceReportBO">
    	 WITH uldTypes AS (
		    SELECT rule_value FROM cmsrules where rule_code='LATE_TOW_CHARGE_EXCLUDE_ULD'
		  )
		 select * from (
			    select flight_no fltKey,flight_date fltDate,ata,to_char(lastTowTime,'HH24:MI') as lastTowTime,lastULD,
			    CASE
			          WHEN (trunc((lastTowTime - flight_ata) * 24 * 60,0) &gt; (select offset_value from MAST_LATE_TOW_ATA_OFFSET where offset_id='PAX_OFFSET_1')
			          AND trunc((lastTowTime - flight_ata) * 24 * 60,0) &lt;= (select offset_value from MAST_LATE_TOW_ATA_OFFSET where offset_id='PAX_OFFSET_2'))
			          THEN 'Y'
			          ELSE null
			          END paxOffset1,
			    CASE
			          WHEN (trunc((lastTowTime - flight_ata) * 24 * 60,0) &gt; (select offset_value from MAST_LATE_TOW_ATA_OFFSET where offset_id='PAX_OFFSET_2')
			          AND trunc((lastTowTime - flight_ata) * 24 * 60,0) &lt;= (select offset_value from MAST_LATE_TOW_ATA_OFFSET where offset_id='PAX_OFFSET_3'))
			          THEN 'Y'
			          ELSE null
			          END paxOffset2,
			    CASE
			          WHEN (trunc((lastTowTime - flight_ata) * 24 * 60,0) &gt; (select offset_value from MAST_LATE_TOW_ATA_OFFSET where offset_id='PAX_OFFSET_3'))
			          THEN 'Y'
			          ELSE null
			          END paxOffset3
        		from (
	          		select flight_no,flight_date,ata,flight_ata,lastULD,lastTowTime
	            		from (
				        select opr.flt_key as flight_no,
				          to_char(opr.sch_date,'DDMONYY') as flight_date,
				          to_char(opr.ACT_DATE,'DDMONYY')||' '||substr(lpad(opr.ACT_TIME, 4, '0'), 1, 2)||':'||substr(opr.ACT_TIME, -2) ata,
				          to_date(to_char(opr.ACT_DATE,'DDMONYY')||' '||lpad(opr.ACT_TIME, 4, '0'),'DDMONYY HH24MI') flight_ata,
		                  (select lastTowTime from
		                  	(select MAX(LEAST(chktime ,NVL(handoverDate,chktime))) as lastTowTime,uld_key as lastULD from (
						    	(SELECT RAMPCHK.chkin_date as chktime,rampchk.uld_key,
			                        (SELECT a.hover_date FROM imp_ramp_dolly_hd a,imp_ramp_dolly_dtl b
			                          WHERE b.uld_key= RAMPCHK.ULD_KEY 
			                          AND a.dolly_id =b.dolly_id 
			                          AND a.flt_key=RAMPCHK.FLT_KEY 
			                          AND a.flt_date =RAMPCHK.flt_date) as handoverDate 
		                        from imp_ramp_chk_dtl RAMPCHK
			                    where RAMPCHK.flt_key=opr.flt_key and RAMPCHK.flt_date=opr.sch_date and RAMPCHK.empty_ind != 'Y' and RAMPCHK.eic_ind != 'Y'
		                        AND (((select count(1) from IMP_AWB_STRG_DTL A where A.FLT_DATE = RAMPCHK.FLT_DATE  AND A.FLT_KEY  = RAMPCHK.FLT_KEY 
		                        AND A.CHKIN_ULD_KEY  = RAMPCHK.ULD_KEY and NVL(A.catalog,'GC') != 'TM') &gt; 0)
		                        or
		                        ((select count(1) from IMP_AWB_STRG_DTL A where A.FLT_DATE = RAMPCHK.FLT_DATE  AND A.FLT_KEY  = RAMPCHK.FLT_KEY 
		                        AND A.CHKIN_ULD_KEY  = RAMPCHK.ULD_KEY) = 0))
		                        AND rampchk.uld_type not in (SELECT trim(regexp_substr(rule_value, '[^,]+', 1, level)) carrierCode
		                        	FROM uldTypes CONNECT BY regexp_substr(rule_value, '[^,]+', 1, level) IS NOT NULL)
			                  ) ) group by uld_key order by lastTowTime desc) where rownum=1) as lastTowTime,
                    (select lastULD from
                    	(select MAX(LEAST(chktime ,NVL(handoverDate,chktime))) as lastTowTime,uld_key as lastULD from (
				            (SELECT RAMPCHK.chkin_date as chktime,rampchk.uld_key,
		                        (SELECT a.hover_date FROM imp_ramp_dolly_hd a,imp_ramp_dolly_dtl b
		                          WHERE b.uld_key= RAMPCHK.ULD_KEY 
		                          AND a.dolly_id =b.dolly_id 
		                          AND a.flt_key=RAMPCHK.FLT_KEY 
		                          AND a.flt_date =RAMPCHK.flt_date) as handoverDate 
                       		from imp_ramp_chk_dtl RAMPCHK
	                      	where RAMPCHK.flt_key=opr.flt_key and RAMPCHK.flt_date=opr.sch_date and RAMPCHK.empty_ind != 'Y' and RAMPCHK.eic_ind != 'Y'
                        	AND (((select count(1) from IMP_AWB_STRG_DTL A where A.FLT_DATE = RAMPCHK.FLT_DATE  AND A.FLT_KEY  = RAMPCHK.FLT_KEY 
                            AND A.CHKIN_ULD_KEY  = RAMPCHK.ULD_KEY and NVL(A.catalog,'GC') != 'TM') &gt; 0)
                            or
                            ((select count(1) from IMP_AWB_STRG_DTL A where A.FLT_DATE = RAMPCHK.FLT_DATE  AND A.FLT_KEY  = RAMPCHK.FLT_KEY 
                            AND A.CHKIN_ULD_KEY  = RAMPCHK.ULD_KEY) = 0))
                            AND rampchk.uld_type not in (SELECT trim(regexp_substr(rule_value, '[^,]+', 1, level)) carrierCode
                            	FROM uldTypes CONNECT BY regexp_substr(rule_value, '[^,]+', 1, level) IS NOT NULL)
	                  ) ) group by uld_key order by lastTowTime desc) where rownum=1) as lastULD
			        from flt_opr opr
			        where opr.flt_type='A' 
			        AND opr.cgo_acft_type='PSR'
		              <isNotEmpty property="airLine">
		                AND opr.carr_code = #airLine#
		              </isNotEmpty>
			        AND opr.sch_date between to_date(#fromDate#,'DDMONYY') and to_date(#toDate#,'DDMONYY')
			        AND opr.ACT_DATE is not null AND opr.ACT_TIME is not null  
			        order by opr.sch_date) 
			    ) where lastTowTime is not null
			) where paxOffset1 is not null or paxOffset2 is not null or paxOffset3 is not null
	</select>
	
	<select id="lateTowForFre" parameterClass="cargo.cms.billing.report.bo.GenerateServiceReportBO"
		resultClass="cargo.cms.billing.report.bo.GenerateServiceReportBO">
	  		WITH uldTypes AS (
		    		SELECT rule_value FROM cmsrules where rule_code='LATE_TOW_CHARGE_EXCLUDE_ULD'
		  		)
			select * from (
			    select flight_no fltKey,flight_date fltDate,ata,to_char(lastTowTime,'HH24:MI') as lastTowTime,lastULD,
			    CASE
			          WHEN (trunc((lastTowTime - flight_ata) * 24 * 60,0) &gt; (select offset_value from MAST_LATE_TOW_ATA_OFFSET where offset_id='FRE_OFFSET_1')
			          AND trunc((lastTowTime - flight_ata) * 24 * 60,0) &lt;= (select offset_value from MAST_LATE_TOW_ATA_OFFSET where offset_id='FRE_OFFSET_2'))
			          THEN 'Y'
			          ELSE null
			          END freOffset1,
			    CASE
			          WHEN (trunc((lastTowTime - flight_ata) * 24 * 60,0) &gt; (select offset_value from MAST_LATE_TOW_ATA_OFFSET where offset_id='FRE_OFFSET_2')
			          AND trunc((lastTowTime - flight_ata) * 24 * 60,0) &lt;= (select offset_value from MAST_LATE_TOW_ATA_OFFSET where offset_id='FRE_OFFSET_3'))
			          THEN 'Y'
			          ELSE null
			          END freOffset2,
			    CASE
			          WHEN (trunc((lastTowTime - flight_ata) * 24 * 60,0) &gt; (select offset_value from MAST_LATE_TOW_ATA_OFFSET where offset_id='FRE_OFFSET_3')
			          AND trunc((lastTowTime - flight_ata) * 24 * 60,0) &lt;= (select offset_value from MAST_LATE_TOW_ATA_OFFSET where offset_id='FRE_OFFSET_4'))
			          THEN 'Y'
			          ELSE null
			          END freOffset3,
			    CASE
			          WHEN (trunc((lastTowTime - flight_ata) * 24 * 60,0) &gt; (select offset_value from MAST_LATE_TOW_ATA_OFFSET where offset_id='FRE_OFFSET_4')
			          AND trunc((lastTowTime - flight_ata) * 24 * 60,0) &lt;= (select offset_value from MAST_LATE_TOW_ATA_OFFSET where offset_id='FRE_OFFSET_5'))
			          THEN 'Y'
			          ELSE null
			          END freOffset4,      
			    CASE
			          WHEN (trunc((lastTowTime - flight_ata) * 24 * 60,0) &gt; (select offset_value from MAST_LATE_TOW_ATA_OFFSET where offset_id='FRE_OFFSET_5'))
			          THEN 'Y'
			          ELSE null
			          END freOffset5
			    from (
			       	select flight_no,flight_date,ata,flight_ata,lastULD,lastTowTime
	            		from (
				        select opr.flt_key as flight_no,
				          to_char(opr.sch_date,'DDMONYY') as flight_date,
				          to_char(opr.ACT_DATE,'DDMONYY')||' '||substr(lpad(opr.ACT_TIME, 4, '0'), 1, 2)||':'||substr(opr.ACT_TIME, -2) ata,
				          to_date(to_char(opr.ACT_DATE,'DDMONYY')||' '||lpad(opr.ACT_TIME, 4, '0'),'DDMONYY HH24MI') flight_ata,
		                  (select lastTowTime from
		                  	(select MAX(LEAST(chktime ,NVL(handoverDate,chktime))) as lastTowTime,uld_key as lastULD from (
						    	(SELECT RAMPCHK.chkin_date as chktime,rampchk.uld_key,
			                        (SELECT a.hover_date FROM imp_ramp_dolly_hd a,imp_ramp_dolly_dtl b
			                          WHERE b.uld_key= RAMPCHK.ULD_KEY 
			                          AND a.dolly_id =b.dolly_id 
			                          AND a.flt_key=RAMPCHK.FLT_KEY 
			                          AND a.flt_date =RAMPCHK.flt_date) as handoverDate 
		                        from imp_ramp_chk_dtl RAMPCHK
			                    where RAMPCHK.flt_key=opr.flt_key and RAMPCHK.flt_date=opr.sch_date and RAMPCHK.empty_ind != 'Y' and RAMPCHK.eic_ind != 'Y'
		                        AND (((select count(1) from IMP_AWB_STRG_DTL A where A.FLT_DATE = RAMPCHK.FLT_DATE  AND A.FLT_KEY  = RAMPCHK.FLT_KEY 
		                        AND A.CHKIN_ULD_KEY  = RAMPCHK.ULD_KEY and NVL(A.catalog,'GC') != 'TM') &gt; 0)
		                        or
		                        ((select count(1) from IMP_AWB_STRG_DTL A where A.FLT_DATE = RAMPCHK.FLT_DATE  AND A.FLT_KEY  = RAMPCHK.FLT_KEY 
		                        AND A.CHKIN_ULD_KEY  = RAMPCHK.ULD_KEY) = 0))
		                        AND rampchk.uld_type not in (SELECT trim(regexp_substr(rule_value, '[^,]+', 1, level)) carrierCode
		                        	FROM uldTypes CONNECT BY regexp_substr(rule_value, '[^,]+', 1, level) IS NOT NULL)
			                  ) ) group by uld_key order by lastTowTime desc) where rownum=1) as lastTowTime,
                    (select lastULD from
                    	(select MAX(LEAST(chktime ,NVL(handoverDate,chktime))) as lastTowTime,uld_key as lastULD from (
				            (SELECT RAMPCHK.chkin_date as chktime,rampchk.uld_key,
		                        (SELECT a.hover_date FROM imp_ramp_dolly_hd a,imp_ramp_dolly_dtl b
		                          WHERE b.uld_key= RAMPCHK.ULD_KEY 
		                          AND a.dolly_id =b.dolly_id 
		                          AND a.flt_key=RAMPCHK.FLT_KEY 
		                          AND a.flt_date =RAMPCHK.flt_date) as handoverDate 
                       		from imp_ramp_chk_dtl RAMPCHK
	                      	where RAMPCHK.flt_key=opr.flt_key and RAMPCHK.flt_date=opr.sch_date and RAMPCHK.empty_ind != 'Y' and RAMPCHK.eic_ind != 'Y'
                        	AND (((select count(1) from IMP_AWB_STRG_DTL A where A.FLT_DATE = RAMPCHK.FLT_DATE  AND A.FLT_KEY  = RAMPCHK.FLT_KEY 
                            AND A.CHKIN_ULD_KEY  = RAMPCHK.ULD_KEY and NVL(A.catalog,'GC') != 'TM') &gt; 0)
                            or
                            ((select count(1) from IMP_AWB_STRG_DTL A where A.FLT_DATE = RAMPCHK.FLT_DATE  AND A.FLT_KEY  = RAMPCHK.FLT_KEY 
                            AND A.CHKIN_ULD_KEY  = RAMPCHK.ULD_KEY) = 0))
                            AND rampchk.uld_type not in (SELECT trim(regexp_substr(rule_value, '[^,]+', 1, level)) carrierCode
                            	FROM uldTypes CONNECT BY regexp_substr(rule_value, '[^,]+', 1, level) IS NOT NULL)
	                  ) ) group by uld_key order by lastTowTime desc) where rownum=1) as lastULD
			        from flt_opr opr
			        where opr.flt_type='A' 
			        AND opr.cgo_acft_type='FRE'
			    	<isNotEmpty property="airLine">
                		AND opr.carr_code = #airLine#
              		</isNotEmpty>
			        AND opr.sch_date between to_date(#fromDate#,'DDMONYY') and to_date(#toDate#,'DDMONYY')
			        AND opr.ACT_DATE is not null AND opr.ACT_TIME is not null 
			        order by opr.sch_date)  
			    ) where lastTowTime is not null
			) where freOffset1 is not null or freOffset2 is not null or freOffset3 is not null or freOffset4 is not null or freOffset5 is not null
	</select>
	
	 <select id="sqlGetLateTowOffset" parameterClass="cargo.cms.billing.report.bo.GenerateServiceReportBO" resultClass="cargo.cms.billing.report.bo.GenerateServiceReportBO" >
		select
			(select to_char(offset_value) from MAST_LATE_TOW_ATA_OFFSET where offset_id='PAX_OFFSET_1') as paxOffset1,
			(select to_char(offset_value) from MAST_LATE_TOW_ATA_OFFSET where offset_id='PAX_OFFSET_2') as paxOffset2,
			(select to_char(offset_value) from MAST_LATE_TOW_ATA_OFFSET where offset_id='PAX_OFFSET_3') as paxOffset3,
			(select to_char(offset_value) from MAST_LATE_TOW_ATA_OFFSET where offset_id='FRE_OFFSET_1') as freOffset1,
			(select to_char(offset_value) from MAST_LATE_TOW_ATA_OFFSET where offset_id='FRE_OFFSET_2') as freOffset2,
			(select to_char(offset_value) from MAST_LATE_TOW_ATA_OFFSET where offset_id='FRE_OFFSET_3') as freOffset3,
			(select to_char(offset_value) from MAST_LATE_TOW_ATA_OFFSET where offset_id='FRE_OFFSET_4') as freOffset4,
			(select to_char(offset_value) from MAST_LATE_TOW_ATA_OFFSET where offset_id='FRE_OFFSET_5') as freOffset5
		from dual
	 </select>
	   	
   	<delete id="deleteSLAPregenReportBeforeGen"  parameterClass="java.lang.String" >
		DELETE FROM SLA_PREGEN_DAILY_REPT WHERE REPT_DATE = to_date(#reportDate#,'DDMONYY')
	</delete>
	
   	 <select id="getSlaPreGenRecordsIMP" parameterClass="cargo.cms.billing.report.bo.GenerateServiceReportBO" resultClass="cargo.cms.common.utils.bo.PreGenReportDailyBO" >
	   <![CDATA[			
			select 
					AWB.awb_no as awbNumber,
					to_char(AWB.awb_date,'DDMONYY') as awbDate,
					AWB.SHC_COMBI as awbSHC,
					AWB.content as content,
					AWB.orig as orig,
					AWB.dest as dest,
					AWB.pcs as awbPc,
					AWB.wt as awbWt,
					(select MANIFEST_PCS from IMP_CAR_SHP where FLT_KEY = opr.flt_key and FLT_DATE = opr.sch_date and AWB_NO = cawb.awb_no and AWB_DATE = cawb.awb_date) as manfPc,
					(select MANIFEST_WT from IMP_CAR_SHP where FLT_KEY = opr.flt_key and FLT_DATE = opr.sch_date and AWB_NO = cawb.awb_no and AWB_DATE = cawb.awb_date) as manfWt, 
					AWB.carr_code as carrier,
					decode(sla.flt_type,'A','Arrival','D','Departure',sla.flt_type) as fltType,
					sla.flt_key as fltKey,
					to_char(sla.flt_date,'DDMONYY') as fltDate,
					opr.acft_prk_bay as fltBay,
					SUBSTR(TRIM(TO_CHAR(OPR.SCH_TIME,'0000')),0,2)|| ':'||  SUBSTR(TRIM(TO_CHAR(OPR.SCH_TIME,'0000')),3,4) as scheduleDate,
					pkg_common.get_flt_eta(opr.flt_key, opr.sch_date,'A','DD') as estimateDate,
					pkg_common.get_flt_ata(opr.flt_key, opr.sch_date,'A','DD') as actualDate,
					(SELECT CODE_DESC FROM MAST_CODE_DTL WHERE CODE =OPR.CGO_ACFT_TYPE AND CODE_TYPE='CGO_ACFT_TYPE') as aircraftType,
					sla.uld_key as uldKey,         
					case when SLA.MILESTONE = 'A-BREAKDOWN' then '' else NVL(ulist.handling_mode,'LOOSE') end as uldType,	
					sla.uld_shc uldSHC,
					(CASE WHEN (SELECT COUNT(1) FROM xt_imp_car_shp_dtl WHERE AWB_NO= awb.AWB_NO AND AWB_DATE=awb.AWB_DATE AND IMP_FLT_KEY=sla.FLT_KEY AND IMP_FLT_DATE=sla.FLT_DATE AND ROWNUM=1) > 0 THEN 'XT'       
					           WHEN (SELECT COUNT(1) FROM V_DDT_DTL WHERE AWB_NO= awb.AWB_NO AND AWB_DATE=awb.AWB_DATE AND SHP_TRF_TYPE = 'IF' and ROWNUM=1) > 0 THEN 'IF' 
					           ELSE '' END) as transferType,
					NVL(opr.flt_module1,opr.flt_module2) as fltModule,
					SLA.MILESTONE as slaMilestone,
					(SELECT CASE WHEN NVL(CNF.SHC_COMB_IND,'N') = 'Y' THEN STRAGG(STRINGDELIM(SLA_SHC, '+')) 
					                  				ELSE STRAGG(STRINGDELIM(SLA_SHC, ','))  END FROM MAST_SLA_MLSTN_SHCS SHC, MAST_SLA_MLSTN_CNFG CNF where CNF.SLA_ID = SHC.SLA_ID AND SHC.SLA_ID = sla.sla_id GROUP BY CNF.SHC_COMB_IND,SHC.SLA_ID) as matchedSHC,
					( SLA_BASE || '+' || sla_min) as slaApplied,
					AWB.cargo_type cargoType,
					to_char(SLA_BASE_TIMESTAMP  + (1/1440 * (TO_NUMBER(sla_min))),'DD/MM/YYYY HH24:MI') as expectedSLATime,
					case when nvl(sla_status,'NA') in ('PASS','FAIL','FPASS') then to_char(SLA_MEET_TIMESTAMP,'DD/MM/YYYY HH24:MI') else '' end as eventTime ,
					'' as actionTime ,
					sla_status as slaStatus,
					(select reason from  (select case when FAIL_REASON = 'OTHERS' then OTHER_REASON else FAIL_REASON end as reason from SPL_FAIL_REASON where FPASS_REMARK is null and seq_no = sla.seq_no order by CR_DATE desc) where rownum = 1) as failReason,
					(select reason from  (select FPASS_REMARK as reason from SPL_FAIL_REASON where FPASS_REMARK is not null and seq_no = sla.seq_no order by CR_DATE desc) where rownum = 1) as forcePassRmks,
					CALCULATE_CEIV_RESULT(awb.awb_no,to_char(awb.awb_date,'DDMONYY'),sla.uld_key,sla.flt_key,to_char(sla.flt_date,'DDMONYY'),AWB.SHC_COMBI,sla.ULD_SHC,SLA.MILESTONE,sla_status,'CEIV_1') as ceivOne,
					CALCULATE_CEIV_RESULT(awb.awb_no,to_char(awb.awb_date,'DDMONYY'),sla.uld_key,sla.flt_key,to_char(sla.flt_date,'DDMONYY'),AWB.SHC_COMBI,sla.ULD_SHC,SLA.MILESTONE,sla_status,'CEIV_2') as ceivTwo,
					CALCULATE_CEIV_RESULT(awb.awb_no,to_char(awb.awb_date,'DDMONYY'),sla.uld_key,sla.flt_key,to_char(sla.flt_date,'DDMONYY'),AWB.SHC_COMBI,sla.ULD_SHC,SLA.MILESTONE,sla_status,'CEIV_3') as ceivThree,
					#fltDate# as reptDate
				  from SPL_CARGO_MILESTONE sla      
			      join flt_opr opr on sla.flt_key=opr.flt_key and sla.flt_date=opr.sch_date and sla.flt_type=opr.flt_type
			      JOIN (WITH FFM_ULD AS (SELECT FFM.flt_key,FFM.flt_date,AWB_NO,AWB_DATE,uld_key  FROM V_FFM_DTL FFM 
                  JOIN flt_opr opr ON FFM.flt_key   = opr.flt_key AND opr.SCH_DATE = FFM.flt_date AND opr.flt_type = 'A'
                  where uld_key is not null and opr.act_date is not null and opr.act_date = to_date(#fltDate#,'DDMONYY') ),                  
                            FFM_BLK AS (
                            SELECT stg.flt_key,stg.flt_date,AWB_NO,AWB_DATE,'BULK' uld_key,'A-HANDOVER-IN' as surplus FROM IMP_AWB_STRG_DTL stg                
                            JOIN flt_opr opr ON stg.flt_key   = opr.flt_key AND opr.SCH_DATE = stg.flt_date AND opr.flt_type = 'A'
                            WHERE stg.CHKIN_ULD_KEY is null and opr.act_date is not null and opr.act_date = to_date(#fltDate#,'DDMONYY')
                            UNION
                            SELECT stg.flt_key,stg.flt_date,AWB_NO,AWB_DATE,'BULK' uld_key,'A-CHECK-IN' as surplus FROM IMP_AWB_STRG_DTL stg                
                            JOIN flt_opr opr ON stg.flt_key   = opr.flt_key AND opr.SCH_DATE = stg.flt_date AND opr.flt_type = 'A'
                            WHERE stg.CHKIN_ULD_KEY is null and opr.act_date is not null and opr.act_date = to_date(#fltDate#,'DDMONYY')
                            AND EXISTS(SELECT NULL FROM IMP_CAR_SHP WHERE flt_key = stg.flt_key AND flt_date  = stg.flt_date AND AWB_NO = stg.awb_no AND AWB_DATE  = stg.AWB_DATE)
                            UNION 
                            SELECT stg.flt_key,stg.flt_date,AWB_NO,AWB_DATE,CHKIN_ULD_KEY uld_key,
                             CASE
                                  WHEN (SELECT COUNT(1)
                                    FROM MAST_ULD_TYPE
                                    WHERE code          = SUBSTR(CHKIN_ULD_KEY, 1, 3)
                                    AND (H_CONT_IND     = 'Y'
                                    OR BT_IND           = 'Y'
                                    OR DUMMY_H_CONT_IND = 'Y') )> 0
                                  THEN 'N'
                                  ELSE 'Y'
                                END surplus
                            FROM IMP_AWB_STRG_DTL stg                
                            JOIN flt_opr opr ON stg.flt_key   = opr.flt_key AND opr.SCH_DATE = stg.flt_date AND opr.flt_type = 'A'
                            WHERE stg.CHKIN_ULD_KEY is not null and opr.act_date is not null and opr.act_date = to_date(#fltDate#,'DDMONYY')                               
                            AND NOT EXISTS(SELECT NULL FROM V_FFM_DTL WHERE flt_key = stg.flt_key AND flt_date  = stg.flt_date AND AWB_NO = stg.awb_no AND AWB_DATE  = stg.AWB_DATE
                                                   AND uld_key  = stg.CHKIN_ULD_KEY )
                             AND EXISTS(SELECT NULL FROM IMP_CAR_SHP WHERE flt_key = stg.flt_key AND flt_date  = stg.flt_date AND AWB_NO = stg.awb_no AND AWB_DATE  = stg.AWB_DATE)
                            ),
                            STRG_BLK AS (SELECT shp.flt_key,shp.flt_date,AWB_NO,AWB_DATE, BULK_pcs FROM IMP_CAR_SHP shp
                            JOIN flt_opr opr ON shp.flt_key   = opr.flt_key AND opr.SCH_DATE = shp.flt_date AND opr.flt_type = 'A'
                            WHERE opr.act_date is not null and opr.act_date = to_date(#fltDate#,'DDMONYY') and nvl(BULK_pcs,0)  > 0
                            ),
                            BRK_DWN AS (SELECT shp.flt_key,shp.flt_date,AWB_NO,AWB_DATE  FROM IMP_CAR_SHP shp
                            JOIN flt_opr opr ON shp.flt_key   = opr.flt_key AND opr.SCH_DATE = shp.flt_date AND opr.flt_type = 'A'
                            WHERE opr.act_date is not null and opr.act_date = to_date(#fltDate#,'DDMONYY') 
                            ),
                            STRG_PPKNBK AS (
                              SELECT STRG.flt_key,  STRG.flt_date,  STRG.AWB_NO,  STRG.AWB_DATE, sum(STRG.MAN_PCS) nbk_pcs
                                  FROM V_FFM_DTL strg                                  
                                  join IMP_ULD_LIST uld on STRG.ULD_KEY = ULD.ULD_KEY  AND STRG.FLT_KEY = ULD.FLT_KEY AND STRG.FLT_DATE = ULD.FLT_DATE and ULD.HANDLING_MODE = 'NBK'                                  
                                  group by STRG.flt_key,  STRG.flt_date,  STRG.AWB_NO,  STRG.AWB_DATE
                            ),
                            DDTINFO as (select nvl(sum(actual_pcs),0) tt_pcs ,  nvl(sum (actual_Wt),0) tt_wt, ddt.flt_key, ddt.flt_date, awb_NO , awb_date
                                      from v_ddt_dtl ddt 
                                      JOIN flt_opr opr ON ddt.flt_key   = opr.flt_key AND opr.SCH_DATE = ddt.flt_date AND opr.flt_type = 'A'
                                      WHERE opr.act_date is not null and opr.act_date = to_date(#fltDate#,'DDMONYY') and (shp_trf_type = 'TT'  or  trf_type = 'IF') 
                                      GROUP BY ddt.flt_key, ddt.flt_date, awb_NO, awb_date)
                            select flt_key,flt_date,AWB_NO,AWB_DATE, uld_key,surplus from (
                            select flt_key,flt_date,AWB_NO,AWB_DATE, uld_key, 'N' as surplus from FFM_ULD
                            union all                            
                            select flt_key,flt_date,AWB_NO,AWB_DATE, uld_key , surplus from FFM_BLK
                            union all
                            select flt_key,flt_date,AWB_NO,AWB_DATE, 'BREAKDOWN' uld_key , 'N' from BRK_DWN                            
                            union all
                            select blk.flt_key,blk.flt_date,blk.AWB_NO,blk.AWB_DATE, 'XXXXXXXXXX' uld_key , 'N' as surplus  from STRG_BLK blk
                            left join STRG_PPKNBK ppk on  blk.FLT_KEY = ppk.FLT_KEY and blk.FLT_date = ppk.FLT_date  AND blk.awb_no   = ppk.awb_no AND blk.awb_date = ppk.awb_date
                            left join DDTINFO ddt on  blk.FLT_KEY = ddt.FLT_KEY and blk.FLT_date = ddt.FLT_date  AND blk.awb_no   = ddt.awb_no AND blk.awb_date = ddt.awb_date
                            where  (blk.BULK_pcs - (nvl(ppk.nbk_pcs,0) + nvl(ddt.tt_pcs,0)) ) > 0                
                         )
				) arrival on arrival.flt_key = sla.flt_key and arrival.flt_date = sla.flt_date 
			        AND ( (sla.uld_key != 'XXXXXXXXXX' and sla.uld_key != 'BULK' and arrival.uld_key = sla.uld_key) 
			        or (sla.uld_key = 'BULK' and arrival.uld_key = sla.uld_key and sla.awb_no = arrival.awb_no and arrival.surplus = sla.MILESTONE ) 
			        or (sla.uld_key = 'XXXXXXXXXX' and arrival.uld_key = sla.uld_key and sla.awb_no = arrival.awb_no) 
			        or (sla.uld_key is null and sla.awb_no = arrival.awb_no and sla.awb_date = arrival.awb_date and arrival.uld_key = 'BREAKDOWN') )
		       JOIN 
		        (select 
		          (SELECT STRAGG(STRINGDELIM(SHC, ',')) 
							  FROM
								(SELECT DISTINCT SHC,
								  AWB_NO,
								  AWB_DATE
								  FROM GET_PRIORITY_SHC_ROLLING
								)
							  WHERE AWB_NO = AWB.awb_no
							  AND AWB_DATE = AWB.AWB_DATE
							  ) as SHC_COMBI, 
							  (select STRAGG(STRINGDELIM(specialType, ',')) from (
				                      SELECT distinct S.SPL_TYPE as specialType
				                      FROM  CUST_AIRL_SPL_CODE S
				                              WHERE S.CARR_CODE  = AWB.carr_code AND S.SPL_TYPE IN ('SPL_DANG','SPL_PHARMA','SPL_PER','SPL_TEMP','SPL_LIVE','SPL_OTHERS')
				                              AND s.spl_code in (AWB.Spl_Code1,AWB.Spl_Code2,AWB.Spl_Code3,AWB.Spl_Code4,AWB.Spl_Code5,AWB.Spl_Code6,AWB.Spl_Code7,AWB.Spl_Code8,AWB.Spl_Code9)  
				                             
				                  ) ) as cargo_type,
							  AWB.* from AWB) AWB ON AWB.AWB_NO = arrival.AWB_NO AND AWB.AWB_DATE = arrival.AWB_DATE
			  JOIN IMP_CAR_AWB cawb ON cawb.AWB_NO = AWB.AWB_NO AND cawb.AWB_DATE = AWB.AWB_DATE
			  LEFT JOIN imp_uld_list ulist  ON ulist.uld_key = sla.uld_key AND ulist.flt_key = sla.flt_key and ulist.flt_date = sla.flt_date
		      LEFT JOIN  ( 
	            WITH IMP_SHP AS (
	              select shp.flt_key,shp.flt_date,shp.AWB_NO,  shp.AWB_DATE, nvl(sum(MANIFEST_PCS),0) MANIFEST_PCS
	              from imp_car_shp shp
	           group by shp.flt_key,  shp.flt_date,  shp.AWB_NO,  shp.AWB_DATE
	             ),
	             DDT_SHP AS (
	                    select ddt.flt_key,ddt.flt_date,ddt.AWB_NO,  ddt.AWB_DATE, nvl(sum(actual_pcs),0) actual_pcs
	                    from v_ddt_dtl ddt where shp_trf_type = 'TT'
	                    group by ddt.flt_key,  ddt.flt_date,  ddt.AWB_NO,  ddt.AWB_DATE
	             )   
	            select shp.flt_key,shp.flt_date,shp.AWB_NO,shp.AWB_DATE, 
	            case when actual_pcs >= MANIFEST_PCS then 'Y' else '' end as ttVal
	            from IMP_SHP shp
	            join DDT_SHP ddt on ddt.awb_no = shp.awb_no and ddt.awb_date = shp.awb_date and ddt.flt_key = shp.flt_key and ddt.flt_date = shp.flt_date
         	) ddtTT ON ddtTT.AWB_NO = arrival.AWB_NO AND ddtTT.AWB_DATE = arrival.AWB_DATE  and ddtTT.flt_key   = arrival.flt_key AND ddtTT.flt_date = arrival.flt_date
		       where  opr.flt_type= 'A' and opr.act_date = to_date(#fltDate#,'DDMONYY')
			AND nvl(BYPASS_REL,'N') = 'N' and nvl(ddtTT.ttVal,'N') = 'N' and sla.sla_status is not null
	     ]]>
   	</select>
   	
   	
	 <select id="getSlaPreGenRecordsEXP" parameterClass="cargo.cms.billing.report.bo.GenerateServiceReportBO" resultClass="cargo.cms.common.utils.bo.PreGenReportDailyBO" >
	   <![CDATA[			
			        select 
					AWB.awb_no as awbNumber,
					to_char(AWB.awb_date,'DDMONYY') as awbDate,
					AWB.SHC_COMBI as awbSHC,
					AWB.content as content,
					AWB.orig as orig,
					AWB.dest as dest,
					AWB.pcs as awbPc,
					AWB.wt as awbWt,
					(select nvl((select nvl(PMAN_PCS,0) from EXP_PMANIFEST_AWB where FLT_KEY = opr.flt_key and FLT_DATE = opr.sch_date and AWB_NO = AWB.awb_no and AWB_DATE = AWB.awb_date),0)
			          + nvl((select  nvl(sum(nvl(bulk_pcs,0)+nvl(ppk_pcs,0)),0) PMAN_PCS from EXP_PMAN_TARMAC_AWB where FLT_KEY = opr.flt_key and FLT_DATE = opr.sch_date and AWB_NO = AWB.awb_no and AWB_DATE = AWB.awb_date ),0)
			          from dual)as manfPc,          
			        (select nvl((select nvl(PMAN_WT,0) from EXP_PMANIFEST_AWB where FLT_KEY = opr.flt_key and FLT_DATE = opr.sch_date and AWB_NO = AWB.awb_no and AWB_DATE = AWB.awb_date),0)
			          + nvl((select  nvl(sum(nvl(bulk_wt,0)+nvl(ppk_wt,0)),0) PMAN_PCS from EXP_PMAN_TARMAC_AWB where FLT_KEY = opr.flt_key and FLT_DATE = opr.sch_date and AWB_NO = AWB.awb_no and AWB_DATE = AWB.awb_date ),0)
			          from dual)as manfWt,  
					AWB.carr_code as carrier,
					decode(sla.flt_type,'A','Arrival','D','Departure',sla.flt_type) as fltType,
					sla.flt_key as fltKey,
					to_char(sla.flt_date,'DDMONYY') as fltDate,
					opr.acft_prk_bay as fltBay,
					SUBSTR(TRIM(TO_CHAR(OPR.SCH_TIME,'0000')),0,2)|| ':'||  SUBSTR(TRIM(TO_CHAR(OPR.SCH_TIME,'0000')),3,4) as scheduleDate,
					pkg_common.get_flt_eta(opr.flt_key, opr.sch_date,'D','DD') as estimateDate,
					pkg_common.get_flt_ata(opr.flt_key, opr.sch_date,'D','DD') as actualDate,
					(SELECT CODE_DESC FROM MAST_CODE_DTL WHERE CODE =OPR.CGO_ACFT_TYPE AND CODE_TYPE='CGO_ACFT_TYPE') as aircraftType,
					sla.uld_key as uldKey,         
					CASE when  sla.ULD_KEY = 'XXXXXXXXXX' then 'BULK' when  sla.MILESTONE = 'D-BUILD-UP' then '' 
							   else nvl(FUN_GET_ULD_PKG_TYPE(sla.ULD_KEY,sla.flt_key,TO_CHAR(sla.sch_date,'DDMONYY')),'BULK') end as uldType,	
					case when sla.MILESTONE = 'D-BUILD-UP' then '' else sla.uld_shc end uldSHC,
					(CASE WHEN (SELECT COUNT(1) FROM xt_imp_car_shp_dtl WHERE AWB_NO= awb.AWB_NO AND AWB_DATE=awb.AWB_DATE AND exp_flt_key =sla.FLT_KEY AND exp_flt_date =sla.FLT_DATE AND ROWNUM=1) > 0 THEN 'XT'       
					            WHEN (SELECT COUNT(1) FROM V_DDT_DTL WHERE AWB_NO= awb.AWB_NO AND AWB_DATE=awb.AWB_DATE AND SHP_TRF_TYPE = 'IF' and ROWNUM=1) > 0 THEN 'IF' 
					            ELSE '' END) as transferType,
					NVL(opr.flt_module1,opr.flt_module2) as fltModule,
					SLA.MILESTONE as slaMilestone,
					(SELECT CASE WHEN NVL(CNF.SHC_COMB_IND,'N') = 'Y' THEN STRAGG(STRINGDELIM(SLA_SHC, '+')) 
                  			ELSE STRAGG(STRINGDELIM(SLA_SHC, ','))  END FROM MAST_SLA_MLSTN_SHCS SHC, MAST_SLA_MLSTN_CNFG CNF where CNF.SLA_ID = SHC.SLA_ID AND SHC.SLA_ID = sla.sla_id GROUP BY CNF.SHC_COMB_IND,SHC.SLA_ID) as matchedSHC,
					REPLACE(SLA_BASE, '-', '/') || ' ' ||  '-' || SLA_MIN || (case WHEN SLA_OPR IS NOT NULL AND SLA_OPR IN ('LT','LE') THEN ' (LOCK)' ELSE '' END) as slaApplied,
					AWB.cargo_type cargoType,
					to_char(SLA_BASE_TIMESTAMP  - (1/1440 * (TO_NUMBER(sla_min))),'DD/MM/YYYY HH24:MI') as expectedSLATime,
					 case when SLA_MEET_TIMESTAMP is not null and trunc(SLA_MEET_TIMESTAMP) =  '01JAN20' then '**' 
							   when SLA_MEET_TIMESTAMP is null and SLA.MILESTONE = 'D-RETRIEVAL' then '**' 
							   when nvl(sla_status,'NA') in ('PASS','FAIL','FPASS') then to_char(SLA_MEET_TIMESTAMP,'DD/MM/YYYY HH24:MI')  
							   else '' end as eventTime ,
					'' as actionTime ,
					sla_status as slaStatus,
					(select reason from  (select case when FAIL_REASON = 'OTHERS' then OTHER_REASON else FAIL_REASON end as reason from SPL_FAIL_REASON where FPASS_REMARK is null and seq_no = sla.seq_no order by CR_DATE desc) where rownum = 1) as failReason,
					(select reason from  (select FPASS_REMARK as reason from SPL_FAIL_REASON where FPASS_REMARK is not null and seq_no = sla.seq_no order by CR_DATE desc) where rownum = 1) as forcePassRmks,
					CALCULATE_CEIV_RESULT(awb.awb_no,to_char(awb.awb_date,'DDMONYY'),sla.uld_key,sla.flt_key,to_char(sla.flt_date,'DDMONYY'),AWB.SHC_COMBI,sla.ULD_SHC,SLA.MILESTONE,sla_status,'CEIV_1') as ceivOne,
					CALCULATE_CEIV_RESULT(awb.awb_no,to_char(awb.awb_date,'DDMONYY'),sla.uld_key,sla.flt_key,to_char(sla.flt_date,'DDMONYY'),AWB.SHC_COMBI,sla.ULD_SHC,SLA.MILESTONE,sla_status,'CEIV_2') as ceivTwo,
					CALCULATE_CEIV_RESULT(awb.awb_no,to_char(awb.awb_date,'DDMONYY'),sla.uld_key,sla.flt_key,to_char(sla.flt_date,'DDMONYY'),AWB.SHC_COMBI,sla.ULD_SHC,SLA.MILESTONE,sla_status,'CEIV_3') as ceivThree,
          			#fltDate# as reptDate			  
				  from SPL_CARGO_MILESTONE sla      
			      join flt_opr opr on sla.flt_key=opr.flt_key and sla.flt_date=opr.sch_date and sla.flt_type=opr.flt_type
			      JOIN (
				            select awb.ULD_BT_NO as ULD_KEY,awb.awb_no,awb.awb_date,awb.flt_key,awb.flt_date 
		                    from EXP_PMANIFEST_ULD_AWB awb
		                    join EXP_PMANIFEST_ULD uld on AWB.ULD_BT_NO = ULD.ULD_BT_NO and AWB.FLT_KEY = ULD.FLT_KEY and AWB.FLT_DATE = ULD.FLT_DATE 
		                    JOIN flt_opr opr on opr.flt_key = awb.flt_key and opr.SCH_DATE = awb.flt_date	and opr.FLT_TYPE = 'D'
		                    WHERE opr.act_date = to_date(#fltDate#,'DDMONYY')
				                        
			           		UNION
			           		
				            select awb.ULD_BT_NO as ULD_KEY,awb.awb_no,awb.awb_date,awb.flt_key,awb.flt_date 
		                    from EXP_PMAN_TARMAC_ULD_AWB awb 
		                    join EXP_PMAN_TARMAC_ULD uld on AWB.ULD_BT_NO = ULD.ULD_BT_NO and AWB.FLT_KEY = ULD.FLT_KEY and AWB.FLT_DATE = ULD.FLT_DATE   
		                    JOIN flt_opr opr on opr.flt_key = awb.flt_key and opr.SCH_DATE = awb.flt_date	and opr.FLT_TYPE = 'D'
		                    WHERE opr.act_date = to_date(#fltDate#,'DDMONYY')
				            AND exists (select null from v_ddt_dtl where  awb.flt_key = cntg_flt_key and cntg_flt_date = awb.flt_date and awb.awb_no = awb_no and awb.awb_date = awb_date and trf_type = 'IF')
				                                        
			            	UNION
				            
				            select 'XXXXXXXXXX' as ULD_KEY,awb.awb_no,awb.awb_date,awb.flt_key,awb.flt_date from EXP_PMANIFEST_ULD_AWB awb
		                    join EXP_PMANIFEST_ULD uld on AWB.ULD_BT_NO = ULD.ULD_BT_NO and AWB.FLT_KEY = ULD.FLT_KEY and AWB.FLT_DATE = ULD.FLT_DATE
		                    JOIN flt_opr opr on opr.flt_key = awb.flt_key and opr.SCH_DATE = awb.flt_date	and opr.FLT_TYPE = 'D'
		                    WHERE opr.act_date = to_date(#fltDate#,'DDMONYY')
				            and  nvl(uld.HDLG_MODE,'XX') not in ('PPK','NBK') and uld.PPK_TYPE not in ('P','M')
				            
	                    	UNION
	                    	
		                   select 'XXXXXXXXXX' as ULD_KEY,awb.awb_no,awb.awb_date,awb.flt_key,awb.flt_date from EXP_OFFLOAD_ULD_AWB awb
		                   join EXP_OFFLOAD_ULD uld on AWB.ULD_BT_NO = ULD.ULD_BT_NO and AWB.FLT_KEY = ULD.FLT_KEY and AWB.FLT_DATE = ULD.FLT_DATE
		                   AND NVL(awb.CONFIRMED_YN,'N')= 'Y' and  nvl(uld.HDLG_MODE,'XX') not in ('PPK','NBK') and uld.PPK_TYPE not in ('P','M')
                       	   JOIN flt_opr opr on opr.flt_key = awb.flt_key and opr.SCH_DATE = awb.flt_date	and opr.FLT_TYPE = 'D'
                           WHERE opr.act_date = to_date(#fltDate#,'DDMONYY')
                           
	                  		UNION
	                  		
	                  		select awb.ULD_BT_NO as ULD_KEY,awb.awb_no,awb.awb_date,awb.flt_key,awb.flt_date  from EXP_OFFLOAD_ULD_AWB awb
                       		 JOIN flt_opr opr on opr.flt_key = awb.flt_key and opr.SCH_DATE = awb.flt_date	and opr.FLT_TYPE = 'D'
                        	 WHERE opr.act_date = to_date(#fltDate#,'DDMONYY') and  NVL(awb.CONFIRMED_YN,'N')= 'Y'
	                  	   
	                  	   UNION
	                  	   
	                  	   select 'BUILDUP' uld_key,awb.awb_no,awb.awb_date,awb.flt_key,awb.flt_date from EXP_PMANIFEST_ULD_AWB AWB 
                          	JOIN flt_opr opr on opr.flt_key = awb.flt_key and opr.SCH_DATE = awb.flt_date	and opr.FLT_TYPE = 'D'
                          	WHERE opr.act_date = to_date(#fltDate#,'DDMONYY')
                          	
                      	   UNION
                      	   
                      	   select 'BUILDUP' uld_key,awb.awb_no,awb.awb_date,awb.flt_key,awb.flt_date from EXP_PMAN_TARMAC_ULD_AWB AWB 
                          	JOIN flt_opr opr on opr.flt_key = awb.flt_key and opr.SCH_DATE = awb.flt_date	and opr.FLT_TYPE = 'D'
                          	WHERE opr.act_date = to_date(#fltDate#,'DDMONYY')
					) puldAWB	on 	puldAWB.flt_key = sla.flt_key and puldAWB.flt_date = sla.flt_date and 
							          ( (sla.uld_key != 'XXXXXXXXXX' and puldAWB.uld_key = sla.uld_key) 
							             or (sla.uld_key = 'XXXXXXXXXX' and puldAWB.uld_key = sla.uld_key and sla.awb_no = puldAWB.awb_no) 
							             or (sla.uld_key is null and sla.awb_no = puldAWB.awb_no and sla.awb_date = puldAWB.awb_date and puldAWB.uld_key = 'BUILDUP')          
							          )   
          		JOIN 
		        (select 
		          (SELECT STRAGG(STRINGDELIM(SHC, ',')) 
							  FROM
								(SELECT DISTINCT SHC,
								  AWB_NO,
								  AWB_DATE
								  FROM GET_PRIORITY_SHC_ROLLING
								)
							  WHERE AWB_NO = AWB.awb_no
							  AND AWB_DATE = AWB.AWB_DATE
							  ) as SHC_COMBI,
							  (select STRAGG(STRINGDELIM(specialType, ',')) from (
				                      SELECT distinct S.SPL_TYPE as specialType
				                      FROM  CUST_AIRL_SPL_CODE S
				                              WHERE S.CARR_CODE  = AWB.carr_code AND S.SPL_TYPE IN ('SPL_DANG','SPL_PHARMA','SPL_PER','SPL_TEMP','SPL_LIVE','SPL_OTHERS')
				                              AND s.spl_code in (AWB.Spl_Code1,AWB.Spl_Code2,AWB.Spl_Code3,AWB.Spl_Code4,AWB.Spl_Code5,AWB.Spl_Code6,AWB.Spl_Code7,AWB.Spl_Code8,AWB.Spl_Code9)  
				                             
				                  ) ) as cargo_type,
							   AWB.* from AWB) AWB ON AWB.AWB_NO = puldAWB.AWB_NO AND AWB.AWB_DATE = puldAWB.AWB_DATE
		       where  opr.flt_type= 'D' and opr.act_date = to_date(#fltDate#,'DDMONYY')
		       and sla.sla_status is not null
	     ]]>
   	</select>
   	
   	<select id="getSpecialCheckCsvRecords" parameterClass="cargo.cms.billing.report.bo.GenerateServiceReportBO" resultClass="cargo.cms.common.utils.bo.PreGenReportDailyBO" >
	   		<![CDATA[ 
	   			select 
					AWB.awb_no as awbNumber,
					to_char(AWB.awb_date,'DDMONYY') as awbDate,
					AWB.SHC_COMBI as awbSHC,
					AWB.content as content,
					AWB.orig as orig,
					AWB.dest as dest,
					AWB.pcs as awbPc,
					AWB.wt as awbWt,
					(case when sla.MILESTONE = 'A-SPECIAL-CHECK' then (select  '' || sum(MANIFEST_PCS) from IMP_CAR_SHP where AWB_NO = AWB.awb_no and AWB_DATE = AWB.awb_date) 
		             when sla.MILESTONE = 'D-SPECIAL-CHECK' 
							   then (select '' || sum(PMAN_PCS) from EXP_PMANIFEST_AWB where AWB_NO = AWB.awb_no and AWB_DATE = AWB.awb_date) 
		             else '' end)  as manfPc,
					(case when sla.MILESTONE = 'A-SPECIAL-CHECK' then (select '' || sum(MANIFEST_WT) from IMP_CAR_SHP where AWB_NO = AWB.awb_no and AWB_DATE = AWB.awb_date) 
		             when sla.MILESTONE = 'D-SPECIAL-CHECK' 
							   then (select '' || sum(PMAN_WT) from EXP_PMANIFEST_AWB where AWB_NO = AWB.awb_no and AWB_DATE = AWB.awb_date) 
		             else '' end)  as manfWt, 
					AWB.carr_code as carrier,
					decode(sla.flt_type,'A','Arrival','D','Departure',sla.flt_type) as fltType,
					sla.flt_key as fltKey,
					to_char(sla.flt_date,'DDMONYY') as fltDate,
					'' as fltBay,
					'' as scheduleDate,
					to_char(sla.est_date,'HH24:MI') as estimateDate,
					to_char(sla.act_date,'HH24:MI') as actualDate,
					'' as aircraftType,
					sla.uld_key as uldKey,         
          			(case when sla.MILESTONE = 'A-SPECIAL-CHECK' then nvl(sla.HANDLING_MODE,'BULK') when sla.MILESTONE = 'D-SPECIAL-CHECK' 
								then FUN_GET_ULD_PKG_TYPE(sla.ULD_KEY,'','',sla.awb_no,TO_CHAR(sla.awb_date,'DDMONYY')) else '' end) as uldType,	
					sla.uld_shc uldSHC,
					(CASE WHEN (SELECT COUNT(1) FROM xt_imp_car_shp_dtl WHERE AWB_NO= awb.AWB_NO AND AWB_DATE=awb.AWB_DATE AND IMP_FLT_KEY=sla.FLT_KEY AND IMP_FLT_DATE=sla.FLT_DATE AND ULD_KEY= NVL(sla.ULD_KEY,ULD_KEY) AND ROWNUM=1) > 0 THEN 'XT'       
					            WHEN (SELECT COUNT(1) FROM V_DDT_DTL WHERE AWB_NO= awb.AWB_NO AND AWB_DATE=awb.AWB_DATE AND SHP_TRF_TYPE = 'IF' and ROWNUM=1) > 0 THEN 'IF' 
					            ELSE '' END) as transferType,
					NVL(sla.flt_module1,sla.flt_module2) as fltModule,
					SLA.MILESTONE as slaMilestone,
					(SELECT STRAGG(STRINGDELIM(SLA_SHC, '+')) FROM MAST_SLA_MLSTN_SHCS where SLA_ID = sla.sla_id GROUP BY SLA_ID) as matchedSHC,
					( SLA_BASE || '+' || sla_min) as slaApplied,
					AWB.cargo_type cargoType,
					'' as expectedSLATime,
					to_char(nvl(SLA_MEET_TIMESTAMP,sla.lm_date),'DD/MM/YYYY HH24:MI') as eventTime ,
					'' as actionTime ,
					sla_status as slaStatus,
					(select reason from  (select case when FAIL_REASON = 'OTHERS' then OTHER_REASON else FAIL_REASON end as reason from SPL_FAIL_REASON where seq_no = sla.seq_no order by CR_DATE desc) where rownum = 1) as failReason,
					(select reason from  (select FPASS_REMARK as reason from SPL_FAIL_REASON where FPASS_REMARK is not null and seq_no = sla.seq_no order by CR_DATE desc) where rownum = 1) as forcePassRmks,
					CALCULATE_CEIV_RESULT(awb.awb_no,to_char(awb.awb_date,'DDMONYY'),sla.uld_key,sla.flt_key,to_char(sla.flt_date,'DDMONYY'),AWB.SHC_COMBI,sla.ULD_SHC,SLA.MILESTONE,sla_status,'CEIV_1') as ceivOne,
					CALCULATE_CEIV_RESULT(awb.awb_no,to_char(awb.awb_date,'DDMONYY'),sla.uld_key,sla.flt_key,to_char(sla.flt_date,'DDMONYY'),AWB.SHC_COMBI,sla.ULD_SHC,SLA.MILESTONE,sla_status,'CEIV_2') as ceivTwo,
					CALCULATE_CEIV_RESULT(awb.awb_no,to_char(awb.awb_date,'DDMONYY'),sla.uld_key,sla.flt_key,to_char(sla.flt_date,'DDMONYY'),AWB.SHC_COMBI,sla.ULD_SHC,SLA.MILESTONE,sla_status,'CEIV_3') as ceivThree,
         			#fltDate# as reptDate
				  from SPL_CARGO_MILESTONE sla      			   
          		JOIN 
		        (select 
		          (SELECT STRAGG(STRINGDELIM(SHC, ',')) 
							  FROM
								(SELECT DISTINCT SHC,
								  AWB_NO,
								  AWB_DATE
								  FROM GET_PRIORITY_SHC_ROLLING
								)
							  WHERE AWB_NO = AWB.awb_no
							  AND AWB_DATE = AWB.AWB_DATE
							  ) as SHC_COMBI, 
							  (select STRAGG(STRINGDELIM(specialType, ',')) from (
				                      SELECT distinct S.SPL_TYPE as specialType
				                      FROM  CUST_AIRL_SPL_CODE S
				                              WHERE S.CARR_CODE  = AWB.carr_code AND S.SPL_TYPE IN ('SPL_DANG','SPL_PHARMA','SPL_PER','SPL_TEMP','SPL_LIVE','SPL_OTHERS')
				                              AND s.spl_code in (AWB.Spl_Code1,AWB.Spl_Code2,AWB.Spl_Code3,AWB.Spl_Code4,AWB.Spl_Code5,AWB.Spl_Code6,AWB.Spl_Code7,AWB.Spl_Code8,AWB.Spl_Code9)  
				                             
				                  ) ) as cargo_type,
							  AWB.* from AWB) AWB ON AWB.AWB_NO =  sla.AWB_NO AND AWB.AWB_DATE =  sla.AWB_DATE
		       where sla.flt_key is null and sla.sla_status is not null and trunc(sla.lm_date) = to_date(#fltDate#,'DDMONYY')
		       and sla.sla_status is not null		       
	     ]]>
   	</select>   

   	<insert id="insertSLAPregenReport"  parameterClass="cargo.cms.common.utils.bo.PreGenReportDailyBO">
   		Insert into SLA_PREGEN_DAILY_REPT (SEQ_NO,AWB_NO,AWB_DATE,AWB_SHC,CONTENT,ORIG,DEST,AWB_PCS,AWB_WT,
		MANF_PCS,MANF_WT,CARR_CODE,FLT_TYPE,FLT_KEY,FLT_DATE,ACFT_PRK_BAY,SCH_TIME,EST_TIME,ACT_TIME,CGO_ACFT_TYPE,
		ULD_KEY,ULD_TYPE,ULD_SHC,TRANSFER_TYPE,FLT_MODULE,MILESTONE,MATCHED_SHC,SLA_APPLIED,CARGO_TYPE,
		EXPECTED_SLA_TIME,EVENT_TIME,ACTION_TIME,SLA_STATUS,FAIL_REASON,FORCE_PASS_REMARKS,
		CEIV_1,CEIV_2,CEIV_3,CR_DATE,CR_USER_ID,LM_DATE,LM_USER_ID,REPT_DATE)  VALUES
		(SLA_PREGEN_DAILY_REPT_SEQ_NO.NEXTVAL,#awbNumber#, to_date(#awbDate#,'DDMONYY'), #awbSHC#, #content#, #orig#, #dest#, #awbPc#, #awbWt#,
		#manfPc#, #manfWt#, #carrier#, #fltType#, #fltKey#, to_date(#fltDate#,'DDMONYY'),#fltBay#, #scheduleDate#, #estimateDate#, #actualDate#, #aircraftType#, 
		#uldKey#, #uldType#, #uldSHC#, #transferType#, #fltModule#, #slaMilestone#, #matchedSHC#, #slaApplied#, #cargoType#, 
		#expectedSLATime#,#eventTime#,#actionTime#, #slaStatus#, #failReason#,#forcePassRmks#,
		#ceivOne#, #ceivTwo#, #ceivThree#,sysdate,'SYSTEM',sysdate,'SYSTEM',to_date(#reptDate#,'DDMONYY'))
	</insert>
	
	<select id="getDailySlaPreGenCSVRecords" parameterClass="cargo.cms.billing.report.bo.GenerateServiceReportBO" resultClass="cargo.cms.billing.report.bo.GenerateServiceReportBO" >
	   		select 
		          ('"'||substr(awb_no, 0, 3)||'-'||substr(awb_no, 4, 11)||'"'||','||
					'"'|| AWB_SHC ||'"'||','||
					'"'|| CONTENT ||'"'||','||
					'"'|| orig ||'"'||','||
					'"'|| dest ||'"'||','||
					'"'|| AWB_PCS ||'"'||','||
					'"'|| AWB_WT ||'"'||','||								
					'"'|| MANF_PCS ||'"'||','||					
		    		'"'|| MANF_WT ||'"'||','||
					'"'|| CARR_CODE ||'"'||','||
					'"'|| FLT_TYPE ||'"'||','||
					'"'|| FLT_KEY ||'"'||','||
					'"'|| to_char(flt_date,'DDMONYY')||'"'||','||
					'"'|| ACFT_PRK_BAY ||'"'||','||
					'"'|| SCH_TIME ||'"'||','||
					'"'|| EST_TIME ||'"'||','||
					'"'|| ACT_TIME ||'"'||','||
					'"'|| CGO_ACFT_TYPE ||'"'||','||
					'"'|| uld_key||'"'||','|| 
					'"'|| ULD_TYPE ||'"'||','||				
					'"'|| uld_shc||'"'||','||
					'"'|| TRANSFER_TYPE ||'"'||','||
					'"'|| FLT_MODULE ||'"'||','||
					'"'|| MILESTONE ||'"'||','||
					'"'|| MATCHED_SHC ||'"'||','||
					'"'|| SLA_APPLIED ||'"'||','||
					'"'|| CARGO_TYPE||'"'||','||
					'"'|| EXPECTED_SLA_TIME ||'"'||','||
					'"'|| EVENT_TIME ||'"'||','||
					'"'|| ACTION_TIME ||'"'||','||
					'"'|| sla_status||'"'||','||
					'"'|| FAIL_REASON ||'"'||','||
					'"'|| FORCE_PASS_REMARKS ||'"'||','||
					'"'|| CEIV_1 ||'"'||','||
					'"'|| CEIV_2 ||'"'||','||
					'"'|| CEIV_3 ||'"'||',' ) as csvRec
				  from SLA_PREGEN_DAILY_REPT sla      			      
          where  sla.rept_date = to_date(#fltDate#,'DDMONYY') 
          order by sla.flt_type,sla.flt_key,sla.flt_date,SLA.awb_no,sla.uld_key,sla.MILESTONE
   	</select>   

   	<select id="getBundlePaymentDetails" parameterClass="cargo.cms.external.bo.BundlePaymentBO" resultClass="cargo.cms.external.bo.BundlePaymentDetailsBO">
   		select 
		  BPH.BUNDLE_REF_NO AS referenceNo,
		  TO_CHAR(BPH.VALIDITY_DATE, 'DDMONYY') AS validityDate,
		  BPH.PAYMENT_CODE AS paymentCode,
		  BPH.STATUS AS status,
		  COUNT(BPD.AWB_NO) AS awbCount,
		  SUM(BPD.COMMITTED_AMT) AS committedAmmount,
		  SUM(BPD.USED_AMT) AS usedAmmount
		from 
		  BILL_BUNDLE_PAYMENT_HD BPH INNER JOIN
		  BILL_BUNDLE_PAYMENT_DTL BPD ON BPH.BUNDLE_REF_NO=BPD.BUNDLE_REF_NO
		WHERE 
		  1=1
		  AND BPH.AGENT_CODE=(select cust_no from sec_user where code=#userID#)
		  <isNotEmpty property="referenceNo">
		     AND BPH.BUNDLE_REF_NO = #referenceNo#
		  </isNotEmpty>
		  <isNotEmpty property="awbNumber">
		     AND BPD.AWB_NO= #awbNumber#
		  </isNotEmpty>
		  <isNotEmpty property="status">
		     AND BPH.STATUS = #status#
		  </isNotEmpty>
		  <isNotEmpty property="createdFrom">
		 	 AND TO_DATE(TO_CHAR(BPH.CR_DATE,'DDMONYY')) BETWEEN TO_DATE(#createdFrom#,'DDMONYY') AND TO_DATE(#createdTo#,'DDMONYY')
		  </isNotEmpty>
		GROUP BY 
		   BPH.BUNDLE_REF_NO,
		   BPH.VALIDITY_DATE,
		   BPH.STATUS,
		   BPH.PAYMENT_CODE
		order by 
       	   BPH.BUNDLE_REF_NO desc
		   
   	</select> 
   	<select id="getBundlePaymentReferenceAWBDetails" parameterClass="java.util.HashMap" resultClass="cargo.cms.external.bo.BundlePaymentAWBInfo">
	  SELECT 
	    CONCAT(CONCAT(SUBSTR(BPD.awb_no,0,3),'-'),SUBSTR(BPD.awb_no,4)) AS awbNumber,
	    BPD.COMMITTED_AMT AS awbCommittedAmmount,
	    BPD.USED_AMT AS awbUsedAmmount
	  FROM 
	    BILL_BUNDLE_PAYMENT_DTL BPD
	  WHERE 
	    BPD.BUNDLE_REF_NO = #referenceNo#
	    <isNotEmpty property="awbNumber">
	     AND BPD.AWB_NO= #awbNumber#
	    </isNotEmpty>
   	</select>
   	
   	<select id="getExistingBundlePaymentReferenceAWBDetails" parameterClass="java.util.HashMap" resultClass="cargo.cms.external.bo.BundlePaymentMaintainBO">
	  SELECT 
	    CONCAT(CONCAT(SUBSTR(BPD.awb_no,0,3),'-'),SUBSTR(BPD.awb_no,4)) AS awbNumber,
	    TO_CHAR(BPD.AWB_DATE, 'DDMONYY') as awbDate,
	    BPD.EST_CHRG_AMT AS estimatedCharges,
	    BPD.COMMITTED_AMT AS commitmentAmt,
	    BPD.BUNDLE_REF_NO as referenceNo,
	    (select STATUS from BILL_BUNDLE_PAYMENT_HD where BUNDLE_REF_NO = #referenceNo#) as status
	  FROM 
	    BILL_BUNDLE_PAYMENT_DTL BPD
	  WHERE 
	    BPD.BUNDLE_REF_NO = #referenceNo#
   	</select>
   	
   	<insert id="insertBundlePaymentHeaderDetails"  parameterClass="cargo.cms.external.bo.BundlePaymentMaintainBO">
   	  INSERT INTO BILL_BUNDLE_PAYMENT_HD 
	    (
	     TX_NO,
	     BUNDLE_REF_NO,
	     VALIDITY_DATE,
	     PAYMENT_CODE,
	     STATUS,
	     AGENT_CODE,
	     CR_USER_ID,
	     CR_DATE,
	     LM_USER_ID,
	     LM_DATE
	    ) 
	    VALUES 
	    (
	     BUNDLE_PAYMENT_TX_NO_SEQ.nextval,
	     #referenceNo#,
	     to_date(#validityDate#,'DDMONYY'),
	     #paymentCode#,
	     'PENDING',
	     (select cust_no from sec_user where code=#userID#),
	     #userID#,
		 sysdate,
		 #userID#,
		 sysdate
	    )
   	</insert>
   	<insert id="insertBundlePaymentAWBDetails"  parameterClass="cargo.cms.external.bo.BundlePaymentMaintainBO">
   	  INSERT INTO BILL_BUNDLE_PAYMENT_DTL 
	    (
	     BUNDLE_REF_NO,
	     AWB_NO,
	     AWB_DATE,
	     EST_CHRG_AMT,
	     COMMITTED_AMT,
	     AGENT_CODE,
	     CR_USER_ID,
	     CR_DATE,
	     LM_USER_ID,
	     LM_DATE
	    ) 
	    VALUES 
	    (
	     #referenceNo#,
	     #awbNumber#,
	     to_date(#awbDate#,'DDMONYY'),
	     #estimatedCharges#,
	     #commitmentAmt#,
	     (select cust_no from sec_user where code=#userID#),
	     #userID#,
		 sysdate,
		 #userID#,
		 sysdate
	    )
   	</insert>
   	<select id="getBundlePaymentReferenceSequenceNo" parameterClass="java.lang.String"  resultClass="java.lang.String">
		select LPAD(BUNDLE_PAYMENT_REF_NO_SEQ.NEXTVAL,7,'0') from dual
	</select>
   	<select id="getBundlePaymentReferenceNo" parameterClass="java.lang.String"  resultClass="java.lang.String">
		select CONCAT(CONCAT(CONCAT((select RULE_VALUE from CMSRULES  where RULE_CODE='BILLING_BUNDLE_PAYMENT_REF_PREFIX'),'-'),#sequence#),(select mod(#sequence#,7) from dual)) from dual
	</select>
	<select id="checkExistingBundleAWBDetails" parameterClass="cargo.cms.external.bo.BundlePaymentMaintainBO" resultClass="java.lang.Integer" >
		select count(1) from BILL_BUNDLE_PAYMENT_DTL where awb_no = #awbNumber# and awb_date=to_date(#awbDate#,'DDMONYY') and BUNDLE_REF_NO=#referenceNo#
	</select>
	<update id="updateBundlePaymentHeader"  parameterClass="cargo.cms.external.bo.BundlePaymentMaintainBO">
		UPDATE BILL_BUNDLE_PAYMENT_HD
		 SET
			VALIDITY_DATE = to_date(#validityDate#,'DDMONYY'),
			AGENT_CODE = (select cust_no from sec_user where code=#userID#),
			LM_USER_ID = #userID#,
			LM_DATE = sysdate
		WHERE 
			BUNDLE_REF_NO=#referenceNo#
	</update>
	<update id="updateBundlePaymentAWBDetails"  parameterClass="cargo.cms.external.bo.BundlePaymentMaintainBO">
		UPDATE BILL_BUNDLE_PAYMENT_DTL
		 SET
			EST_CHRG_AMT = #estimatedCharges#,
			COMMITTED_AMT = #commitmentAmt#,
			AGENT_CODE = (select cust_no from sec_user where code=#userID#),
			LM_USER_ID = #userID#,
			LM_DATE = sysdate
		WHERE 
			AWB_NO = #awbNumber# and AWB_DATE=to_date(#awbDate#,'DDMONYY') and BUNDLE_REF_NO=#referenceNo#
	</update>
	<delete id="sqlDeleteBundlePaymentHeader"  parameterClass="cargo.cms.external.bo.BundlePaymentDetailsBO">
		DELETE FROM BILL_BUNDLE_PAYMENT_HD WHERE BUNDLE_REF_NO=#referenceNo#
	</delete>
	<delete id="sqlDeleteBundlePaymentAWBDetails"  parameterClass="map">
		DELETE FROM BILL_BUNDLE_PAYMENT_DTL BPD 
		WHERE 
		BPD.BUNDLE_REF_NO=#REF_NO#
		<isNotEmpty property="AWB_NO">
	     AND BPD.AWB_NO= #AWB_NO#
	    </isNotEmpty>	
	</delete>
	<select id="checkValidityDate" parameterClass="java.lang.String" resultClass="java.lang.Integer">
       SELECT TO_DATE(#validityDate#,'DDMONYY')  - TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY')  FROM DUAl       
    </select>
    <select id="validateAWBDetailsWithValidityDate" parameterClass="cargo.cms.external.bo.BundlePaymentMaintainBO" resultClass="java.lang.String" >
	   SELECT 
	  	BILL_BUNDLE_PAYMENT_HD.BUNDLE_REF_NO 
	  FROM 
	  	BILL_BUNDLE_PAYMENT_HD JOIN BILL_BUNDLE_PAYMENT_DTL ON 
	  	BILL_BUNDLE_PAYMENT_HD.BUNDLE_REF_NO=BILL_BUNDLE_PAYMENT_DTL.BUNDLE_REF_NO 
	  WHERE 
	  	AWB_NO = #awbNumber# and 
	  	AWB_DATE=to_date(#awbDate#,'DDMONYY') and 
	  	VALIDITY_DATE= to_date(#validityDate#,'DDMONYY')
	  	<isNotEmpty property="referenceNo">
		 AND BILL_BUNDLE_PAYMENT_HD.BUNDLE_REF_NO not in(#referenceNo#)
		</isNotEmpty>
	</select>
	
	<select id="enquiryBundlePaymentDetails" parameterClass="cargo.cms.billing.bo.EnquireBundlePaymentBO" resultClass="cargo.cms.billing.bo.EnquireBundlePaymentBO">
   		select 
		  BPH.BUNDLE_REF_NO AS referenceNo,
		  TO_CHAR(BPH.VALIDITY_DATE, 'DDMONYY') AS validityDate,
		  COUNT(AWB_NO)AS awbCount,
		  SUM(BPD.COMMITTED_AMT) AS committedAmmount,
		  SUM(BPD.USED_AMT) AS usedAmmount,
		  TO_CHAR(BPH.COMMITMENT_TIME,'DDMONYY HH24:MI') AS commitmentTime,
		  TO_CHAR(BPH.SETTLEMENT_TIME,'DDMONYY HH24:MI') AS settlementTime,
		  BPH.STATUS AS status
		from 
		  BILL_BUNDLE_PAYMENT_HD BPH INNER JOIN
		  BILL_BUNDLE_PAYMENT_DTL BPD ON BPH.BUNDLE_REF_NO=BPD.BUNDLE_REF_NO
		WHERE 
		  1=1
		  <isNotEmpty property="referenceNo">
		     AND BPH.BUNDLE_REF_NO = #referenceNo#
		  </isNotEmpty>
		  <isNotEmpty property="awbNumber">
		     AND BPD.AWB_NO= #awbNumber#
		  </isNotEmpty>
		  <isNotEmpty property="createdFrom">
		 	 AND TO_DATE(TO_CHAR(BPH.CR_DATE,'DDMONYY')) BETWEEN TO_DATE(#createdFrom#,'DDMONYY') AND TO_DATE(#createdTo#,'DDMONYY')
		  </isNotEmpty>
		  <isNotEmpty property="settleDateFrom">
		 	 AND TO_DATE(TO_CHAR(BPH.SETTLEMENT_TIME,'DDMONYY')) BETWEEN TO_DATE(#settleDateFrom#,'DDMONYY') AND TO_DATE(#settleDateTo#,'DDMONYY')
		  </isNotEmpty>
		  <isNotEmpty property="agent">
		 	 AND BPH.AGENT_CODE = (select code from cust_company where code_desc=#agent# and ACTIVE='Y' and rownum=1)
		  </isNotEmpty>
		  <isNotEmpty property="status">
		 	 AND BPH.STATUS = #status#
		  </isNotEmpty>
		GROUP BY 
		   BPH.BUNDLE_REF_NO,
		   BPH.VALIDITY_DATE,
		   BPH.COMMITMENT_TIME,
		   BPH.SETTLEMENT_TIME,
		   BPH.STATUS
		order by 
       	   BPH.BUNDLE_REF_NO desc 
   	</select>     
   	<select id="enquiryBundlePaymentAWBDetails" parameterClass="cargo.cms.billing.bo.EnquireBundlePaymentBO" resultClass="cargo.cms.billing.bo.EnquireBundlePaymentBO">
   	 with BPI as (select * from    ( select bundle_REF_NO,awb_no, srf_no,invoice_no inv_no,          
          DENSE_RANK() OVER (PARTITION BY bundle_REF_NO,awb_no ORDER BY CR_DATE desc) rank
          from bill_bundle_payment_his )T where rank = 1)
	  SELECT 
	    CONCAT(CONCAT(SUBSTR(BPD.awb_no,0,3),'-'),SUBSTR(BPD.awb_no,4)) AS awbNumber,
	    BPD.COMMITTED_AMT AS awbCommittedAmmount,
	    BPD.USED_AMT AS awbUsedAmmount,
	    BPI.SRF_NO AS srfNo,
      	BPI.INV_NO as invoiceNo
	  FROM 
	      BILL_BUNDLE_PAYMENT_DTL BPD
          left join BPI on BPD.BUNDLE_REF_NO = BPI.BUNDLE_REF_NO and BPD.AWB_NO = BPI.AWB_NO
	  WHERE 
	    BPD.BUNDLE_REF_NO = #referenceNo#
	    <isNotEmpty property="awbNumber">
	     AND BPD.AWB_NO= #awbNumber#
	    </isNotEmpty>
   	</select>
   	<select id="validateBundleCommitedStatus" parameterClass="java.lang.String" resultClass="java.lang.Integer">
       select count(1) from BILL_BUNDLE_PAYMENT_HD where BUNDLE_REF_NO =#referenceNo# and STATUS ='COMMITTED'       
    </select>
    <select id="validateTotalBundleUsedAmt" parameterClass="java.lang.String" resultClass="java.lang.Double">
       select 
		  SUM(BPD.USED_AMT) AS usedAmmount		
	   from 
		  BILL_BUNDLE_PAYMENT_HD BPH INNER JOIN
		  BILL_BUNDLE_PAYMENT_DTL BPD ON BPH.BUNDLE_REF_NO=BPD.BUNDLE_REF_NO
	   where 
	   	  BPH.BUNDLE_REF_NO =#referenceNo#      
    </select>
    <select id="validateAwbUsedAmt" parameterClass="map" resultClass="java.lang.Double">
       select 
		  SUM(BPD.USED_AMT) AS usedAmmount		
	   from 
		  BILL_BUNDLE_PAYMENT_DTL BPD
	   where 
	   	  BPD.BUNDLE_REF_NO = #referenceNo# 
	   	  AND BPD.AWB_NO =  #awbNumber#     
    </select>
</sqlMap>