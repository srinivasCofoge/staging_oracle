<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<!-- The SQL in these maps files has purposely been typed with more verbosity than is actually required.
 For example, many of the selects could have just used SELECT * FROM... instead of listing all of the columns.
 This is to demonstrate that even complex SQL can be handled and coded and formatted the way SQL was meant
 to be (i.e. not a bunch of concatenated strings in a Java class). 
 
Version No	Changed By	Changed On		Purpose
==============================================================
1.0			Bala  		08 Sep 2010		Creation

 -->

<sqlMap namespace="CustomsModule">
	<!-- Added By Manorama for EMAN Masters::::29thAug 2011:::Starts -->
	<select id="fetchCarrierList" parameterClass="cargo.cms.customs.bo.EmanMasterSearchBO" resultClass="cargo.cms.customs.bo.EmanMasterListBO">
	SELECT e.CARR_CODE carrCode,
  	e.ID_TYPE carrId,
  	decode(e.carr_name,null,m.CODE_DESC,e.carr_name) carrName
	FROM EMAN_CAR_MAST e
	JOIN MAST_CARRIER m
	ON e.carr_code  = m.code
	WHERE 
	<isNotEmpty property="carrCode">
	e.CARR_CODE = #carrCode#
	</isNotEmpty>
	<isEmpty property="carrCode">
	<isNotEmpty property="loginCarrier">
	<isNotEmpty property="agentName">
		(e.CARR_CODE = #loginCarrier#
				OR e.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE = #loginCarrier#))
				 and e.AUTH_AGNT = #agentName#
		</isNotEmpty>
	</isNotEmpty>	
	<isEmpty property="loginCarrier">
		<isNotEmpty property="agentName">
	 e.AUTH_AGNT = #agentName#
	</isNotEmpty>
	</isEmpty>
	</isEmpty>
	</select>
	<select id="fetchBothCarrierList" parameterClass="cargo.cms.customs.bo.EmanMasterSearchBO" resultClass="cargo.cms.customs.bo.EmanMasterListBO">
	SELECT e.CARR_CODE carrCode,
  	e.ID_TYPE carrId,
  	decode(e.carr_name,null,m.CODE_DESC,e.carr_name) carrName
	FROM EMAN_CAR_MAST e
	JOIN MAST_CARRIER m
	ON e.carr_code  = m.code
	WHERE 
	<isNotEmpty property="carrCode">
	e.CARR_CODE = #carrCode#
	</isNotEmpty>
	<isEmpty property="carrCode">
	<isNotEmpty property="loginCarrier">
	<isNotEmpty property="agentName">
		(e.CARR_CODE = #loginCarrier#
				OR e.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE = #loginCarrier#))
				 and e.AUTH_AGNT = #agentName#
		</isNotEmpty>
	</isNotEmpty>	
	<isEmpty property="loginCarrier">
		<isNotEmpty property="agentName">
	 e.AUTH_AGNT = #agentName#
	</isNotEmpty>
	</isEmpty>
	</isEmpty>
	</select>
	<select id="emanCarrierExists" parameterClass="java.lang.String" resultClass="java.lang.String">
	select carr_code from eman_car_mast where carr_code=#PARAM#
	</select>
	<insert id="insertEmanCarrier" parameterClass="cargo.cms.customs.bo.EmanMasterCreateBO">
	insert into
	eman_car_mast(addr1,addr2,addr3,addr4,addr5,auth_agnt,carr_code,city,cont_per_email,
	cont_per_fax,cont_per_name,cont_per_phone,cont_per_title,country,cr_date,cr_user_id,dept_name
	,id_number,id_type,lm_date,lm_user_id,offc_name,stmnt_type,carr_name,Trans_Seq_No) values
	(#addr1#,#addr2#,#addr3#,#addr4#,#addr5#,#agentName#,#carrCode#,#city#,#conMail#,
	#conFax#,#conName#,#conPhone#,#conTitle#,#country#,sysdate,#logUserId#,#deptName#
	,#brNo#,#carrIdType#,sysdate,#logUserId#,#office#,#stmntType#,#carrName#,1)
	</insert>
	<update id="updateExistingCarr" parameterClass="cargo.cms.customs.bo.EmanMasterCreateBO">
	update eman_car_mast
	set addr1 = #addr1#,addr2 = #addr2#,addr3= #addr3#,addr4 =
	#addr4#,addr5=#addr5#,
	auth_agnt = #agentName#,city =
	#city#,cont_per_email=#conMail#,cont_per_fax=#conFax#,
	cont_per_name=#conName#,cont_per_phone =
	#conPhone#,cont_per_title=#conTitle#,country=#country#,
	cr_date=
	sysdate,cr_user_id=#logUserId#,dept_name=#deptName#,id_number=#brNo#,id_type=#carrIdType#,
	lm_date=sysdate,lm_user_id=#logUserId#,offc_name=#office#,stmnt_type=#stmntType#,CARR_NAME=#carrName#,Trans_Seq_No = (nvl(Trans_Seq_No,0)+1) 
	where carr_code = #carrCode#
	</update>
	<select id="fetchExistingCarrier" parameterClass="cargo.cms.customs.bo.EmanMasterCreateBO" resultClass="cargo.cms.customs.bo.EmanMasterCreateBO">
	SELECT  decode(addr1,null,'',addr1) addr1,decode(carr_code,null,'',carr_code) carrCode,
	decode(addr2,null,'',addr2) addr2,
	decode(addr3,null,'',addr3) addr3,
	decode(addr4,null,'',addr4) addr4,
	decode(addr5,null,'',addr5) addr5,
	decode(auth_agnt,null,'',auth_agnt) agentName,
	decode(city,null,'',city) city,
	decode(cont_per_email,null,'',cont_per_email) conMail,
	decode(cont_per_fax,null,'',cont_per_fax) conFax,
	decode(cont_per_name,null,'',cont_per_name) conName,
	decode(cont_per_phone,null,'',cont_per_phone) conPhone,
	decode(cont_per_title,null,'',cont_per_title) conTitle,
	decode(country,null,'',country) country,
	decode(dept_name,null,'',dept_name) deptName ,
	decode(id_number,null,'',id_number) brNo,
	decode(id_type,null,'',id_type) carrIdType,
	decode(offc_name,null,'',offc_name) office,
	decode(stmnt_type,null,'',stmnt_type) stmntType,
	decode(carr_name,null,'',carr_name) carrName
	FROM eman_car_mast
	WHERE carr_code = #carrCode#
	</select>
	<select id="fetchAjaxExistingAgent" parameterClass="java.lang.String" resultClass="cargo.cms.customs.bo.EmanMasterCreateBO">
	SELECT decode(addr1,null,'',addr1) addr1,decode(carr_code,null,'',carr_code) carrCode,
	decode(addr2,null,'',addr2) addr2,
	decode(addr3,null,'',addr3) addr3,
	decode(addr4,null,'',addr4) addr4,
	decode(addr5,null,'',addr5) addr5,
	decode(auth_agnt,null,'',auth_agnt) agentName,
	decode(city,null,'',city) city,
	decode(city,null,'',city) cityHiddenVal,
	decode(cont_per_email,null,'',cont_per_email) conMail,
	decode(cont_per_fax,null,'',cont_per_fax) conFax,
	decode(cont_per_name,null,'',cont_per_name) conName,
	decode(cont_per_phone,null,'',cont_per_phone) conPhone,
	decode(cont_per_title,null,'',cont_per_title) conTitle,
	decode(country,null,'',country) country,
	decode(dept_name,null,'',dept_name) deptName ,
	decode(id_number,null,'',id_number) brNo,
	decode(id_type,null,'',id_type) carrIdType,
	decode(offc_name,null,'',offc_name) office,
	decode(stmnt_type,null,'',stmnt_type) stmntType,
	decode(carr_name,null,'',carr_name) carrName
	FROM eman_car_mast
	WHERE carr_code = #PARAM#
	</select>
	<select id="fetchExistingAgent" parameterClass="java.lang.String" resultClass="cargo.cms.customs.bo.EmanMasterCreateBO">
	SELECT carr_code carrCode,addr1 addr1,addr2 addr2,
	addr3 addr3,
	addr4 addr4,
	addr5 addr5,
	country country,
	city city,
	city cityHiddenVal,
	cont_per_email conMail,
	cont_per_fax conFax,
	cont_per_name conName,
	cont_per_phone conPhone,
	cont_per_title conTitle
	FROM eman_car_mast
	WHERE carr_code = #PARAM#
	</select>
	<select id="validateAgentName" parameterClass="java.lang.String" resultClass="java.lang.Integer">
	select count(0) from eman_car_mast where CARR_CODE = #PARAM#
	</select>
	<delete id="deleteCarrier" parameterClass="java.lang.String">
	DELETE FROM 
		       eman_car_mast
	    WHERE  
	           UPPER(carr_code) = UPPER(#PARAM#)
	</delete>
	<select id="fetchCityValues" parameterClass="java.lang.String" resultClass="cargo.cms.customs.bo.EmanMasterCreateBO">
	select a.code as codeType,a.code_desc as codeTypeDesc from mast_city a left join mast_country b on b.code = a.ctry_code
	where b.code = #PARAM#
	</select>
	<!-- Added By Manorama for EMAN Masters::::29thAug 2011:::Starts -->
<!-- Fax Hash Total/Print Paper Manifest Queries Starts -->
	<select id="checkFaxIndicators" parameterClass="cargo.cms.customs.bo.FaxBO" resultClass="cargo.cms.customs.bo.FaxBO">
	   <!-- select b.flt_type,b.flt_key,b.flt_date,nvl(a.int_ind,0) int_ind,nvl(a.amd_ind,0) AMD_IND,nvl(a.lbs_ind,0) LBS_IND,
	   nvl(a.int_ind,0) + nvl(a.amd_ind,0) + nvl(a.LBS_IND,0)  TTL_IND  from
	   (select flt_type,flt_key,flt_date,sum(case when rec_type = 'INT' then 1 else 0 end) INT_IND,sum(case when rec_type = 'AMD' then 1 else 0 end) AMD_IND,
       sum(case when rec_type = 'BDS' and msg_type='L' then 1 else 0 end) LBS_IND  from cst_subm
 	   where rec_type not in ('ITT','ITF','ITC') and flt_type=DECODE(#flightType#,'A','I','S','I','N','E','I') and flt_key = #flightKey# and flt_date = to_date(#flightDate#,'ddmonyy')
 	   group by flt_type,flt_key,flt_date) a, (select DECODE(#flightType#,'A','I','S','I','N','E','I') flt_type,#flightKey# flt_key,to_date(#flightDate#,'ddmonyy') flt_date FROM DUAL) B
 	   where a.flt_type(+)=b.flt_type and a.flt_key(+) = b.flt_key and a.flt_date(+) = b.flt_date -->
 	 SELECT b.flt_type,
  b.flt_key,
  b.flt_date,
  a.stfs_flt_key                     AS vesselFlightKey,
  TO_CHAR(a.stfs_flt_date,'DDMONYY') AS vesselFlightDate,
  NVL(a.int_ind,0) int_ind,
  NVL(a.amd_ind,0) AMD_IND,
  NVL(a.lbs_ind,0) LBS_IND,
  NVL(a.int_ind,0) + NVL(a.amd_ind,0) + NVL(a.LBS_IND,0) TTL_IND
FROM
  (SELECT c.flt_type,
    c.flt_key,
    c.flt_date,
    f.stfs_flt_key as stfs_flt_key,
    f.stfs_flt_date as stfs_flt_date,
    SUM(
    CASE
      WHEN c.rec_type = 'INT'
      THEN 1
      ELSE 0
    END) INT_IND,
    SUM(
    CASE
      WHEN c.rec_type = 'AMD'
      THEN 1
      ELSE 0
    END) AMD_IND,
    SUM(
    CASE
      WHEN c.rec_type = 'BDS'
      AND c.msg_type  ='L'
      THEN 1
      ELSE 0
    END) LBS_IND
  FROM cst_subm c,
    FLT_OPR F
  WHERE c.rec_type NOT IN ('ITT','ITF','ITC')
  AND c.flt_key         =NVL(f.stfs_flt_key,f.flt_key)
  AND c.flt_date        =NVL(f.stfs_flt_date,f.sch_date)
  AND c.flt_type        =DECODE(#flightType#,'S','I','A','I','N','E','I')
  AND f.flt_key         = #flightKey#
  AND f.sch_date        = to_date(#flightDate#,'ddmonyy')
  AND f.flt_type        =DECODE(#flightType#,'A','A','S','A','N','D','A')
  GROUP BY c.flt_type,
    c.flt_key,
    c.flt_date,
    f.stfs_flt_key,
    f.stfs_flt_date
  ) a,
  (
  select DECODE(flt_type,'A','I','D','E') as flt_type,NVL(stfs_flt_key,flt_key) as flt_key,NVL(e.stfs_flt_date,e.sch_date) as flt_date
from flt_opr e where  flt_key=#flightKey# and sch_Date=#flightDate# and flt_type = DECODE(#flightType#,'A','A','S','A','N','D','A')
  ) B  
WHERE a.flt_type(+)=b.flt_type
AND a.flt_key(+)   = b.flt_key
AND a.flt_date(+)  = b.flt_date
	</select>
	<select id="checkTruckFaxIndicators" parameterClass="cargo.cms.customs.bo.FaxBO" resultClass="cargo.cms.customs.bo.FaxBO">
	  		select b.flt_type flightType,b.truck_no truckNo,b.sch_date flightDate ,to_char(nvl(b.sch_time,0),'0000') schTime,
          	nvl(a.ina_ind,0) ina_ind,nvl(a.ama_ind,0) AMA_IND,
            nvl(a.ina_ind,0) + nvl(a.ama_ind,0)  TTL_IND  from
            (select flt_type,truck_no,sch_date,sch_time,
            sum(case when rec_type = 'INA' then 1 else 0 end) INA_IND,sum(case when rec_type = 'AMA' then 1 else 0 end) AMA_IND
            from cst_subm 
            where flt_type='T' and truck_no = #truckNo# and Sch_date = to_date(#flightDate#,'ddmonyy') and sch_time = trim(replace(#schTime#,':',''))
            group by flt_type,truck_no,Sch_date,sch_time) a, (select 'T' flt_type,#truckNo# truck_no, #flightDate# sch_date, trim(replace(#schTime#,':','')) sch_time FROM DUAL) B
            where a.flt_type(+)=b.flt_type and a.truck_no(+) = b.truck_no and a.sch_date(+) = b.sch_date and a.sch_time(+) = b.sch_time
	</select>
	<select id="getSchTimeList" parameterClass="map" resultClass="cargo.cms.afw.bo.MasterBO">
		SELECT  distinct TO_CHAR(SCH_TIME,'0000') codeId,
	   			ltrim(SUBSTR(TRIM(TO_CHAR(SCH_TIME,'0000')),0,2)|| ':'||  SUBSTR(TRIM(TO_CHAR(SCH_TIME,'0000')),3,4), ':') codeDesc
		FROM ITM_TRK_MANF_HD
		WHERE status not in ('VOID') and TRUCK_FLT_DATE = TO_DATE(#flightDate#,'DDMONYY')
		<isNotEmpty property="truckNo" > 
		 AND TRUCK_NO = #truckNo#
		</isNotEmpty>
    </select>
	
	<select id="getVersionNumber" parameterClass="cargo.cms.customs.bo.FaxBO" resultClass="cargo.cms.customs.bo.FaxBO">
		<!-- select ver_no as versionNo from cst_subm
		where flt_type='I' and flt_key = #flightKey# and flt_date = to_date(#flightDate#,'ddmonyy') and rec_type = 'BDS' and msg_type='L' order by ver_no asc -->
		select ver_no as versionNo from cst_subm c,
		    FLT_OPR F
		  WHERE  c.flt_key      = NVL(f.stfs_flt_key,f.flt_key)
		  AND c.flt_date        = NVL(f.stfs_flt_date,f.sch_date)
		  AND f.flt_type        = DECODE(#flightType#,'I','A','S','A','N','D','E','D','A')
		  AND f.flt_key         = #flightKey#
		  AND f.sch_date        = to_date(#flightDate#,'ddmonyy')
		  and c.rec_type = 'BDS' and c.msg_type='L' order by c.ver_no asc
	</select>
	<select id="fetchFaxDetails" parameterClass="cargo.cms.customs.bo.FaxBO" resultClass="cargo.cms.customs.bo.FaxBO">
		SELECT CODE_DESC AS faxNo, PKG_COMMON.get_flt_ata(#flightKey#, #flightDate#, DECODE(#flightType#,'A','A','S','A','N','D','A')) AS ata FROM MAST_CODE_DTL WHERE GROUP_CODE='38' AND CODE_TYPE='ACCS_FAX_NO' AND CODE='Hash'
	</select>
	<select id="fetchFaxNumber" parameterClass="cargo.cms.customs.bo.FaxBO" resultClass="cargo.cms.customs.bo.FaxBO">
		SELECT CODE_DESC AS faxNo FROM MAST_CODE_DTL WHERE GROUP_CODE='38' AND CODE_TYPE='ACCS_FAX_NO' AND CODE='Hash'
	</select>
	<select id="getCustomsPrinterList"  parameterClass="map" resultClass="cargo.cms.customs.bo.FaxBO">
		select CODE AS codeId , CODE_DESC AS codeDesc  from mast_prt_dtl where prt_type = 'ACCS_HASH_TTL_PINTER' order by default_yn desc,code_desc
	</select>
<!-- Fax Hash Total/Print Paper Manifest Queries End -->
	
	<!-- Submit Left Behind Consignee Queries Starts -->
	<select id="fetchLeftCnsgnRecord" parameterClass="cargo.cms.customs.bo.LBSDetailsBO"
		resultClass="cargo.cms.customs.bo.LBSDetailsBO">
		<![CDATA[
			SELECT FLT.FLT_KEY AS flightKey, TO_CHAR(FLT.SCH_DATE, 'DDMONYY') AS flightDate,#flightType# as flightType,
			  FLT.STFS_FLT_KEY AS vesselFlightKey, TO_CHAR(FLT.STFS_FLT_DATE, 'DDMONYY') AS vesselFlightDate,
			  FLT.FLT_KEY || '/' || TO_CHAR(FLT.SCH_DATE, 'DDMONYY') AS dispfltkey,
			  TO_CHAR(FLT.SCH_DATE, 'DDMONYY') || ' ' || SUBSTR(LPAD(COALESCE(FLT.ACT_TIME, FLT.EST_TIME, FLT.SCH_TIME), 4, '0'), 1, 2)
			    || ':' || SUBSTR(LPAD(COALESCE(FLT.ACT_TIME, FLT.EST_TIME, FLT.SCH_TIME), 4, '0'), 3) AS deadline,
			  LTRIM(SUBSTR(LPAD(FLT.SCH_TIME, 4, '0'), 1, 2) || ':' || SUBSTR(LPAD(FLT.SCH_TIME, 4, '0'), 3), ':') AS scheduleTime,
			  PKG_COMMON.GET_FLT_ATA(FLT.FLT_KEY, TO_DATE(#flightDate#, 'DDMONYY'), FLT.FLT_TYPE) AS arrivalTime,
			  FUN_CHECK_MAN(#flightType#, FLT.FLT_KEY, TO_CHAR(FLT.SCH_DATE, 'DDMONYY'), 'CLR') AS flightClear,
			  TO_CHAR(BDS.SUBM_DATE, 'DDMONYY HH24:MI:SS') AS lbsSubmDate,
			  TO_CHAR(BDS.SEND_DATE, 'DDMONYY HH24:MI:SS') AS lbsComplDate,
			  NVL(BDS.VER_NO, 0) AS lbsSubmVerNo, NVL(BDS.VER_NO, 0) + 1 AS lbsSubmNextVerNo,
			  FLT.VESSEL_ID as vesselId,
			  FLT.VESSEL_NAME as vesselName,
			  FLT.VOYAGE_NUM as voyageNum,
			  FLT.CALL_SIGN_VESSEL as callSignVessel,
			  FLT.SHIPPING_AGENT as shippingAgent,
			  FUN_CHECK_MAN(#flightType#, FLT.FLT_KEY, TO_CHAR(FLT.SCH_DATE, 'DDMONYY'), 'BDS') AS status,
			  FLT.EST_TIME, FLT.SCH_TIME,
			  CASE
			    WHEN (
			      SELECT COUNT(1)
			      FROM CST_ACK
			      WHERE FLT_KEY = NVL(FLT.STFS_FLT_KEY,FLT.FLT_KEY) AND FLT_DATE = NVL(FLT.STFS_FLT_DATE,FLT.SCH_DATE) AND FLT_TYPE = DECODE(#flightType#,'A','I','S','I','N','E','I') AND ACK_REC_TYPE = 'LBR'
			    ) > 0 THEN 'Y'
			    ELSE 'N'
			  END AS backDoorInd
			FROM FLT_OPR FLT
			JOIN (
			  SELECT 
			    FLT_TYPE, FLT_KEY, FLT_DATE
			  FROM (
			    SELECT
			      CAWB.FLT_TYPE, CAWB.FLT_KEY, CAWB.FLT_DATE,
			      COUNT(CAWB.AWB_NO) FFM_CNT,
			      COUNT(VSUBM.AWB_NO || BDD.AWB_NO) SUBMITED_AWB
			    FROM CST_AWB CAWB
			    LEFT OUTER JOIN V_CST_SUBMITTED_AWB VSUBM
			    ON CAWB.FLT_TYPE = VSUBM.FLT_TYPE AND CAWB.FLT_KEY = VSUBM.FLT_KEY AND CAWB.FLT_DATE = VSUBM.FLT_DATE AND CAWB.AWB_NO = VSUBM.AWB_NO
			    LEFT OUTER JOIN CST_BD_DISC BDD
			    ON CAWB.FLT_TYPE = BDD.FLT_TYPE AND CAWB.FLT_KEY = BDD.FLT_KEY AND CAWB.FLT_DATE = BDD.FLT_DATE AND CAWB.AWB_NO = BDD.AWB_NO
			    WHERE CAWB.FLT_DATE = TO_DATE(#flightDate#, 'DDMONYY') AND CAWB.FLT_TYPE = DECODE(#flightType#,'A','I','S','I','N','E','I')
			    GROUP BY CAWB.FLT_TYPE, CAWB.FLT_KEY, CAWB.FLT_DATE
			  ) CAWB
			  WHERE EXISTS (
			    SELECT SUBM.FLT_KEY
			    FROM CST_SUBM SUBM
			    WHERE SUBM.REC_TYPE = 'INT' AND SUBM.SEND_STATUS NOT IN ('E', 'R')
			    AND SUBM.FLT_KEY = CAWB.FLT_KEY AND SUBM.FLT_DATE = CAWB.FLT_DATE AND SUBM.FLT_TYPE = DECODE(#flightType#,'A','I','S','I','N','E','I')
	  			) AND (
		        FFM_CNT > SUBMITED_AWB OR (
		          	EXISTS (
                		SELECT NULL FROM V_CST_CC_CODE VCC_CODE 
                		WHERE CC_CODE = 'ND' AND VCC_CODE.FLT_KEY = CAWB.FLT_KEY AND VCC_CODE.FLT_DATE = CAWB.FLT_DATE 
                		AND RECV_DATE > NVL((
                  		SELECT MAX(SUBM_DATE) FROM CST_SUBM SUBM
                  		JOIN CST_CSGNM CSGNM
                  		ON SUBM.FLT_KEY = CSGNM.FLT_KEY AND SUBM.FLT_DATE = CSGNM.FLT_DATE AND SUBM.MSG_TYPE = CSGNM.RECV_REC_TYPE AND SUBM.VER_NO = CSGNM.VER_NO
                  		WHERE SUBM.FLT_KEY = VCC_CODE.FLT_KEY AND SUBM.FLT_DATE = VCC_CODE.FLT_DATE AND CSGNM.AWB_NO = VCC_CODE.AWB_NO AND SUBM.SEND_STATUS NOT IN('E', 'R')
                		), '01JAN00')
              		) 
		        )
		      )
			) SUBM
			ON FLT.FLT_KEY = SUBM.FLT_KEY AND FLT.SCH_DATE = SUBM.FLT_DATE
			LEFT OUTER JOIN (
			  SELECT *
			  FROM (
			    SELECT FLT_TYPE,
			      FIRST_VALUE(FLT_KEY) OVER(PARTITION BY FLT_TYPE, FLT_KEY, FLT_DATE, REC_TYPE ORDER BY VER_NO DESC) AS FLT_KEY,
			      FIRST_VALUE(FLT_DATE) OVER(PARTITION BY FLT_TYPE, FLT_KEY, FLT_DATE, REC_TYPE ORDER BY VER_NO DESC) AS FLT_DATE,
			      FIRST_VALUE(SUBM_DATE) OVER(PARTITION BY FLT_TYPE, FLT_KEY, FLT_DATE, REC_TYPE ORDER BY VER_NO DESC) AS SUBM_DATE,
			      FIRST_VALUE(SEND_STATUS) OVER(PARTITION BY FLT_TYPE, FLT_KEY, FLT_DATE, REC_TYPE ORDER BY VER_NO DESC) AS SEND_STATUS,
			      FIRST_VALUE(SEND_DATE) OVER(PARTITION BY FLT_TYPE, FLT_KEY, FLT_DATE, REC_TYPE ORDER BY VER_NO DESC) AS SEND_DATE,
			      FIRST_VALUE(VER_NO) OVER(PARTITION BY FLT_TYPE, FLT_KEY, FLT_DATE, REC_TYPE ORDER BY VER_NO DESC) AS VER_NO,
			      DENSE_RANK() OVER(PARTITION BY FLT_TYPE, FLT_KEY, FLT_DATE, REC_TYPE ORDER BY VER_NO DESC) AS SEQ
			    FROM CST_SUBM
			    WHERE FLT_DATE = TO_DATE(#flightDate#, 'DDMONYY')
			    AND REC_TYPE = 'BDS' AND MSG_TYPE = 'L' AND FLT_TYPE = DECODE(#flightType#,'A','I','S','I','N','E','I')
			  )
			  WHERE SEQ = 1
			) BDS
			ON FLT.FLT_KEY = BDS.FLT_KEY AND FLT.SCH_DATE = BDS.FLT_DATE
			WHERE FLT.FLT_TYPE = DECODE(#flightType#,'A','A','S','A','N','D','A')	
		]]>
		<isNotEmpty property="loginCarrier">
		<![CDATA[
			AND	(FLT.CARR_CODE = #loginCarrier# OR FLT.CARR_CODE IN (
				SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE = #loginCarrier#
			))
		]]>
		</isNotEmpty>
		<![CDATA[
	 		ORDER BY NVL(FLT.EST_TIME, FLT.SCH_TIME)
	 	]]>
	</select> 
	<select id="fetchLeftCnsgnFlightRecord"  parameterClass="cargo.cms.customs.bo.LBSDetailsBO" resultClass="cargo.cms.customs.bo.LBSDetailsBO">
			SELECT O.CARR_CODE AS carrierCode,O.FLT_NO AS flightNo,to_char(O.SCH_DATE, 'DDMONYY') as arrivalDate,
				O.FLT_KEY as flightKey,to_char(O.ORG_FLT_DATE,'DDMONYY') as orgFlightDate,
				O.stfs_flt_key as vesselFlightKey,to_char(O.stfs_flt_date,'DDMONYY') as vesselFlightDate,
				(CASE WHEN O.ACT_TIME IS NOT NULL THEN SUBSTR(LPAD(O.ACT_TIME,4,'0'),1,2)||':'||SUBSTR(LPAD(O.ACT_TIME,4,'0'),3,2)
            		END)  AS arrivalTime,
             	(CASE WHEN O.EST_TIME IS NOT NULL THEN SUBSTR(LPAD(O.EST_TIME,4,'0'),1,2)||':'||SUBSTR(LPAD(O.EST_TIME,4,'0'),3,2)
              			END)  AS estimatedTime,
              	(CASE WHEN O.SCH_TIME IS NOT NULL THEN SUBSTR(LPAD(O.SCH_TIME,4,'0'),1,2)||':'||SUBSTR(LPAD(O.SCH_TIME,4,'0'),3,2)
              			END)  AS schTime,
				O.PRTY_IND as flightPrty,DECODE(O.CGO_ACFT_TYPE,'PSR','Passenger','COM','Combi','FRE','Freighter','OTH','Other') as aircraftType,
				O.STATUS as status,E.FFM_IND as ffmRecv,O.FLT_TYPE as flightType,E.FREEZE_IND as freezeInd,O.TR_NO as trNo	,
				O.VESSEL_ID as vesselId,
				O.VESSEL_NAME as vesselName,
				O.VOYAGE_NUM as voyageNum,
				O.SHIPPING_AGENT as shippingAgent,
				O.CALL_SIGN_VESSEL as callSignVessel,
           			case when
		           (select count(1) from cst_ack where flt_key = nvl(O.stfs_flt_key,O.flt_key) and flt_date = nvl(O.stfs_flt_date,O.sch_date) and flt_type = DECODE(#flightType#,'N','E','S','I','A','I','I') and ack_rec_type = 'LBR') > 0 then 'Y' else 'N' end as backDoorInd
					FROM FLT_OPR O, FLT_OPR_EVENTS E 
					WHERE O.TR_NO = E.TR_NO AND O.SCH_DATE = TO_DATE(#flightDate#, 'DDMONYY') AND O.FLT_TYPE=DECODE(#flightType#,'N','D','S','A','A','A','A')	
			<isNotEmpty property="flightKey">
				AND O.FLT_KEY = #flightKey# 
			</isNotEmpty>		
  	</select>
  	<!-- LBS AWB Records -->
	<select id="fetchShipmentRecords" parameterClass="cargo.cms.customs.bo.LBSDetailsBO"
		resultClass="cargo.cms.customs.bo.IntCnsgnDetailsBO">
		<![CDATA[
			SELECT CAWB.AWB_NO AS awbNo,
			SUBSTR(CAWB.AWB_NO, 1, 3) || '-' || SUBSTR(CAWB.AWB_NO, 4, LENGTH(CAWB.AWB_NO))AS disAwbNo,
			SUBSTR(CAWB.AWB_NO, 0, 3) AS awbPfx, SUBSTR(CAWB.AWB_NO, 4) AS awbSfx,
			TO_CHAR(CAWB.AWB_DATE, 'DDMONYY') AS awbDate,
			( SELECT FUN_VSL_SHP_PPK_TYPE(CAWB.FLT_KEY,CAWB.FLT_DATE,CAWB.FLT_TYPE,CAWB.AWB_NO) FROM DUAL ) as ppkInd,
			CAWB.CONTENT AS contents,
			CAWB.ORG AS origin, CAWB.RTG_APT_CODE AS loadingPoint, CAWB.DES AS dest,
			CAWB.PCS AS awbPCS, CAWB.WGT AS awbWt, 
			CAWB.MAN_WGT AS manifestWt, CAWB.MAN_PCS AS manifestPCS,
			CAWB.FLT_KEY AS flightKey, CAWB.FLT_DATE AS flightDate, CAWB.FLT_TYPE,
			CAWB.REL_IND AS priorityCode, CAWB.REL_IND AS priority, (
			  SELECT NVL(SUM(PCS), 0)
			  FROM CST_HAWB
			  WHERE AWB_NO = CAWB.AWB_NO AND AWB_DATE = CAWB.AWB_DATE
			) AS hawbPCS, (
			  SELECT TRIM(TO_CHAR(NVL(SUM(WGT), 0), '999999990.0'))
			  FROM CST_HAWB
			  WHERE AWB_NO = CAWB.AWB_NO AND AWB_DATE = CAWB.AWB_DATE
			) AS hawbWt, (
			  SELECT COUNT(HAWB_NO)
			  FROM CST_HAWB
			  WHERE AWB_NO = CAWB.AWB_NO AND AWB_DATE = CAWB.AWB_DATE
			) AS sumHawbNo,
			AWB.INT_YN AS intIndicator, AWB.AMD_YN AS amdIndicator, 
			AWB.IMPCAR_YN AS impCarIndicator, AWB.LBS_YN AS lbsIndicator
			FROM CST_AWB CAWB
			JOIN AWB
			ON CAWB.AWB_NO = AWB.AWB_NO AND CAWB.AWB_DATE = AWB.AWB_DATE
			WHERE CAWB.FLT_KEY = #flightKey# AND CAWB.FLT_DATE = TO_DATE(#flightDate#, 'DDMONYY') AND CAWB.FLT_TYPE = 'I'
			AND ((
			   	NOT EXISTS (
	   				SELECT NULL FROM V_CST_SUBMITTED_AWB VSUBM
	   				WHERE CAWB.FLT_TYPE = VSUBM.FLT_TYPE AND CAWB.FLT_KEY = VSUBM.FLT_KEY AND CAWB.FLT_DATE = VSUBM.FLT_DATE 
	   				AND CAWB.AWB_NO = VSUBM.AWB_NO
				) AND NOT EXISTS (
			  		SELECT NULL FROM CST_BD_DISC BDD
			  		WHERE CAWB.FLT_TYPE = BDD.FLT_TYPE AND CAWB.FLT_KEY = BDD.FLT_KEY AND CAWB.FLT_DATE = BDD.FLT_DATE 
			  		AND CAWB.AWB_NO = BDD.AWB_NO
			  	)
			   ) OR (
			  	EXISTS (
			  		SELECT NULL FROM V_CST_CC_CODE VCC_CODE 
			  		WHERE CC_CODE = 'ND' AND VCC_CODE.FLT_KEY = CAWB.FLT_KEY AND VCC_CODE.FLT_DATE = CAWB.FLT_DATE AND VCC_CODE.AWB_NO = CAWB.AWB_NO
			  		AND RECV_DATE > NVL((
			    		SELECT MAX(SUBM_DATE) FROM CST_SUBM SUBM
			    		JOIN CST_CSGNM CSGNM
			   		 	ON SUBM.FLT_KEY = CSGNM.FLT_KEY AND SUBM.FLT_DATE = CSGNM.FLT_DATE AND SUBM.MSG_TYPE = CSGNM.RECV_REC_TYPE AND SUBM.VER_NO = CSGNM.VER_NO
			    		WHERE SUBM.FLT_KEY = VCC_CODE.FLT_KEY AND SUBM.FLT_DATE = VCC_CODE.FLT_DATE AND CSGNM.AWB_NO = VCC_CODE.AWB_NO AND SUBM.SEND_STATUS NOT IN('E', 'R')
			  		), '01JAN00')
	   		  	)
      		  )
      		)
			ORDER BY awbNo		
		]]>
	</select>	
	<insert id="saveLbsCnsgnDetails" parameterClass="cargo.cms.customs.bo.LBSDetailsBO" >
		INSERT INTO CST_SUBM_TEMP( VER_NO, REC_TYPE,MSG_TYPE, SUBM_DATE, LM_USER_ID, LM_DATE,LM_VER, SEND_STATUS, FLT_KEY,  FLT_DATE,FLT_TYPE) 
			VALUES('1', 'BDS','L',SYSDATE, #userID#, SYSDATE,'2', 'P', #flightKey#, #flightDate#,DECODE(#flightType#,'N','E','S','I','A','I','I'))
	</insert>
	<select id="fetchLbsManagementReports"  parameterClass="cargo.cms.customs.bo.LBSDetailsBO" resultClass="cargo.cms.customs.bo.LBSDetailsBO">
		SELECT DISTINCT AWB_NO AS awbNo,substr(awb_no,1,3)||'-'||substr(awb_no,4) AS disAwbNo,
		DECODE(HAWB_NO,'000000000000000000','',HAWB_NO) AS hawbNo,FLT_KEY AS flightKey, to_char(flt_date,'DDMONYY') AS flightDate,AGENT_NAME AS
		agentName,FLT_DATE AS SCH_DATE FROM (SELECT	M.FLT_TYPE,M.FLT_DATE,M.FLT_KEY,M.AWB_NO,M.HAWB_NO,M.AGENT_NAME,N.AWB_NO
		AS SUBM_AWB_NO FROM (SELECT FLT_TYPE,FLT_DATE,FLT_KEY,AWB_NO,'000000000000000000' HAWB_NO,CSGNE_NAME AGENT_NAME
		FROM CST_AWB WHERE FLT_TYPE = 'I' AND FLT_KEY=NVL(#flightKey#,FLT_KEY) AND FLT_DATE BETWEEN TO_DATE(#startDate#,'DDMONYY') AND
		TO_DATE(#endDate#, 'DDMONYY')
		UNION
		SELECT A.FLT_TYPE,A.FLT_DATE,A.FLT_KEY,B.AWB_NO,B.HAWB_NO,B.SHPR_NAME AGENT_NAME FROM CST_AWB A,
		CST_HAWB B WHERE A.AWB_NO = B.AWB_NO AND A.FLT_TYPE = 'I' AND A.FLT_KEY=NVL(#flightKey#,A.FLT_KEY)
		AND A.FLT_DATE BETWEEN TO_DATE(#startDate#,'DDMONYY') AND TO_DATE(#endDate#, 'DDMONYY')) M,
		(select FLT_TYPE,FLT_DATE,FLT_KEY,AWB_NO,HAWB_NO FROM (SELECT A.FLT_TYPE,A.FLT_DATE,A.FLT_KEY,B.AWB_NO,B.HAWB_NO
		FROM CST_ACK A,CST_CSGNM B WHERE A.FLT_TYPE = B.FLT_TYPE AND A.FLT_KEY = B.FLT_KEY AND A.FLT_DATE = B.FLT_DATE
		AND A.ACK_REC_TYPE = B.RECV_REC_TYPE AND A.VER_NO = B.VER_NO AND A.FLT_TYPE = 'I' AND A.FLT_KEY=NVL(#flightKey#,A.FLT_KEY)
		AND A.FLT_DATE BETWEEN TO_DATE(#startDate#,'DDMONYY') AND TO_DATE(#endDate#, 'DDMONYY') AND A.ACK_STATUS = 'A'
		AND A.ACK_REC_TYPE IN('INT','AMD') AND A.ACK_DATE>(SELECT NVL(MAX(ACK_DATE),TO_DATE('19900101','YYYYMMDD'))
		FROM CST_ACK C WHERE C.FLT_TYPE = A.FLT_TYPE AND C.FLT_KEY = A.FLT_KEY AND C.FLT_DATE = A.FLT_DATE
		AND C.ACK_REC_TYPE = 'MAN') GROUP BY A.FLT_TYPE,A.FLT_DATE,A.FLT_KEY,B.AWB_NO,B.HAWB_NO) 
		UNION
		(SELECT A.FLT_TYPE,A.FLT_DATE,A.FLT_KEY,B.AWB_NO,B.HAWB_NO FROM CST_ACK A,CST_CSGNM B
		WHERE A.FLT_TYPE = B.FLT_TYPE AND A.FLT_KEY = B.FLT_KEY AND A.FLT_DATE = B.FLT_DATE
		AND A.ACK_REC_TYPE = B.RECV_REC_TYPE AND A.VER_NO = B.VER_NO AND A.FLT_TYPE = 'I'
		AND A.FLT_KEY=NVL(#flightKey#,A.FLT_KEY) AND A.FLT_DATE BETWEEN TO_DATE(#startDate#,'DDMONYY') AND TO_DATE(#endDate#, 'DDMONYY')
		AND A.ACK_STATUS = 'A' AND A.ACK_REC_TYPE ='BDS' GROUP BY A.FLT_TYPE,A.FLT_DATE,A.FLT_KEY,B.AWB_NO,B.HAWB_NO)) N
		WHERE M.FLT_TYPE = N.FLT_TYPE(+) AND M.FLT_KEY = N.FLT_KEY(+) AND M.FLT_DATE = N.FLT_DATE(+)
		AND M.AWB_NO = N.AWB_NO(+) AND M.HAWB_NO = N.HAWB_NO(+)) WHERE SUBM_AWB_NO IS NULL
		AND SUBSTR(FLT_KEY,1,2)=DECODE(#carrCode#,'ALL',SUBSTR(FLT_KEY,1,2),NULL,SUBSTR(FLT_KEY,1,2),#carrCode#)
		<dynamic prepend="ORDER BY">			
			<isEqual property="sortKey" compareValue="agentName">
				AGENT_NAME ASC
			</isEqual>
			<isEqual property="sortKey" compareValue="flightDate">
				FLT_DATE ASC, AWBNO DESC, HAWBNO DESC
			</isEqual>			
		</dynamic>		
  	</select>
	<select id="fetchLBSTotalCnsgn"  parameterClass="cargo.cms.customs.bo.LBSDetailsBO" resultClass="cargo.cms.customs.bo.LBSDetailsBO">	
		SELECT count(awbNo)AS totalMAWB,sum(decode(cnsl,'YES',1)) as consoleCnsgn, sum(decode(cnsl,'NO',1)) as simpleCnsgn,sum(hawbPcs)AS totalHAWB from (SELECT S.AWB_NO as awbNo,
		CONTENT as contents,ORG as origin,S.BRD_POINT as loadingPoint,DEST as dest,PCS as awbPCS,
		FLT_KEY as flightKey,FLT_DATE as flightDate,MAN_PCS as manifestPCS,COUNT(HAWB_NO) hawbPcs,
		decode(CNSL_IND,'N','NO','YES') AS cnsl FROM EDI_FFM_SHP S INNER JOIN EDI_FFM_MSG M ON
		S.TR_NO = M.TR_NO AND M.COPY_NO = (SELECT MAX(COPY_NO) FROM EDI_FFM_MSG WHERE FLT_KEY = #flightKey#
		AND FLT_DATE=#flightDate#) AND M.FLT_DATE =#flightDate# LEFT OUTER JOIN EDI_FWB ON
		EDI_FWB.AWB_NO = S.AWB_NO LEFT OUTER JOIN EDI_FHL F ON S.AWB_NO = F.AWB_NO
		LEFT OUTER JOIN EDI_FHL_HAWB H ON H.TR_NO = F.TR_NO
		AND F.COPY_NO = (SELECT MAX(COPY_NO) FROM EDI_FHL WHERE FLT_KEY = #flightKey# AND FLT_DATE=#flightDate# 
		AND AWB_NO=S.AWB_NO) GROUP BY S.AWB_NO,CONTENT,ORG,S.BRD_POINT,DEST,PCS,FLT_KEY,FLT_DATE,MAN_PCS,CNSL_IND)
	</select>    
	<select id="fetchLbsExternalUserDetails"  parameterClass="cargo.cms.customs.bo.LBSDetailsBO" resultClass="cargo.cms.customs.bo.LBSDetailsBO">
  		select CARR_CODE AS carrierCode, SELF_HANDLING from CUST_COMPANY inner join sec_user on CUST_COMPANY.code =  sec_user.CUST_NO
		and sec_user.CODE = #userID# and SELF_HANDLING = 'Y'
 	</select>  	
 	<select id="fetchSystemDate"  parameterClass="cargo.cms.customs.bo.FlightListBO" resultClass="java.lang.String">
		SELECT to_char(sysdate,'DDMONYY HH24:MI') as systemDate FROM dual 
	</select>
	<parameterMap id="saveIntAssignMap" class="map" >
		<parameter property="RESULT"  jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
		<parameter property="FLTKEY"  jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="FLTDATE" jdbcType="VARCHAR"       javaType="java.lang.String" 	mode="IN"/>
		<parameter property="AWBNOS" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="MAXLEFTVER" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	</parameterMap>
	<procedure id="saveLeftBehindCnsgnDetails" parameterMap="saveIntAssignMap" >
		{? = call PKG_CST_INIT.BEHIND_CONSIGNMENT_SUBMISSION(?,?,?,?)  }
	</procedure>
	<parameterMap id="saveIntAssignMap" class="map" >
		<parameter property="RESULT"  jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
		<parameter property="FLTTYPE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="FLTKEY"  jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="FLTDATE" jdbcType="VARCHAR"       javaType="java.lang.String" 	mode="IN"/>
		<parameter property="PTYPE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	</parameterMap>
	<procedure id="checkIntCnsgnExistProc" parameterMap="saveIntAssignMap" >
		{? = call FUN_CHECK_MAN(?,?,?,?)  }
	</procedure>
 	<select id="checkBreakDownSub"  parameterClass="cargo.cms.customs.bo.LBSDetailsBO" resultClass="cargo.cms.customs.bo.LBSDetailsBO">
 	    SELECT SEND_STATUS as sendStatus FROM CST_SUBM          
  		WHERE FLT_KEY = #flightKey# AND FLT_DATE = TO_DATE(#flightDate#, 'DDMONYY') AND FLT_TYPE = 'I'
			AND REC_TYPE='BDS' AND VER_NO = (select MAX(VER_NO) from CST_SUBM WHERE FLT_KEY = #flightKey#
			AND FLT_DATE = TO_DATE(#flightDate#, 'DDMONYY') AND FLT_TYPE = 'I'  AND REC_TYPE='BDS')
 	</select>
 	<select id="checkFlightComplete"  parameterClass="cargo.cms.customs.bo.LBSDetailsBO" resultClass="cargo.cms.customs.bo.LBSDetailsBO">
  		select flt_cls_yn as fltFinal from flt_opr_events where flt_key=#flightKey# and flt_type=DECODE(#flightType#,'I','A','S','A','N','D','E','D','A') and sch_date=#flightDate#
 	</select>
 	<select id="checkBdComplete"  parameterClass="cargo.cms.customs.bo.LBSDetailsBO" resultClass="cargo.cms.customs.bo.LBSDetailsBO">
 		SELECT count(1) as bdComp FROM CST_SUBM          
  		WHERE FLT_KEY = #flightKey# AND FLT_DATE = TO_DATE(#flightDate#, 'DDMONYY') AND FLT_TYPE = 'I'
			AND REC_TYPE='BDS' AND BD_COMPLETE='Y' AND VER_NO = (select MAX(VER_NO) from CST_SUBM WHERE FLT_KEY = #flightKey#
			AND FLT_DATE = TO_DATE(#flightDate#, 'DDMONYY') AND FLT_TYPE = 'I'  AND REC_TYPE='BDS')
 	</select>
 	<select id="checkLeftBehindVersion"  parameterClass="cargo.cms.customs.bo.LBSDetailsBO" resultClass="cargo.cms.customs.bo.LBSDetailsBO">
 		<!-- SELECT VER_NO as leftBehindVersion FROM CST_SUBM          
  		WHERE FLT_KEY = #flightKey# AND FLT_DATE = TO_DATE(#flightDate#, 'DDMONYY') AND FLT_TYPE = DECODE(#flightType#,'A','I','S','I','N','E','I')
			AND REC_TYPE='BDS' AND MSG_TYPE='L' AND SEND_STATUS='A' AND VER_NO = (select MAX(VER_NO) from CST_SUBM WHERE FLT_KEY = #flightKey#
			AND FLT_DATE = TO_DATE(#flightDate#, 'DDMONYY') AND FLT_TYPE = DECODE(#flightType#,'A','I','S','I','N','E','I')  AND REC_TYPE='BDS')
 	 -->
	 	 		SELECT VER_NO AS leftBehindVersion
					FROM CST_SUBM C,FLT_OPR F
					WHERE C.FLT_KEY  = NVL(F.STFS_FLT_KEY,F.FLT_KEY)
					AND C.FLT_DATE   = NVL(F.STFS_FLT_DATE,F.SCH_DATE)
					AND C.FLT_TYPE   =DECODE(F.FLT_TYPE,'A','I','D','E','I')
					AND F.FLT_KEY    = #flightKey#
					AND F.SCH_DATE   = TO_DATE(#flightDate#, 'DDMONYY')
					AND C.FLT_TYPE   = DECODE(#flightType#,'A','I','S','I','N','E','I')
					AND C.REC_TYPE   ='BDS'
					AND C.MSG_TYPE   ='L'
					AND C.SEND_STATUS='A'
					AND VER_NO       =
					  (SELECT MAX(VER_NO)
					  FROM CST_SUBM S,
					    FLT_OPR F
					  WHERE S.FLT_KEY= NVL(F.STFS_FLT_KEY,F.FLT_KEY)
					  AND S.FLT_DATE = NVL(F.STFS_FLT_DATE,F.SCH_DATE)
					  AND S.FLT_TYPE = DECODE(F.FLT_TYPE,'A','I','D','E','I')
					  AND F.FLT_KEY  = #flightKey#
					  AND F.SCH_DATE = TO_DATE(#flightDate#, 'DDMONYY')
					  AND S.FLT_TYPE = DECODE(#flightType#,'A','I','S','I','N','E','I')
					  AND S.REC_TYPE ='BDS'
					  )
 	 </select>
 	<select id="checkLbsMaxVer"  parameterClass="cargo.cms.customs.bo.LBSDetailsBO" resultClass="cargo.cms.customs.bo.LBSDetailsBO">
 		<!-- SELECT count(1)  as checkLbsMaxVer FROM CST_SUBM          
  		WHERE FLT_KEY = #flightKey# AND FLT_DATE = TO_DATE(#flightDate#, 'DDMONYY') AND FLT_TYPE =DECODE(#flightType#,'A','I','S','I','N','E','I')
			AND REC_TYPE='BDS' AND MSG_TYPE='L' AND SEND_STATUS='A' -->
			SELECT COUNT(1) AS checkLbsMaxVer
			FROM CST_SUBM C, FLT_OPR F
			WHERE C.FLT_KEY  = NVL(F.STFS_FLT_KEY,F.FLT_KEY)
			AND C.FLT_DATE   = NVL(F.STFS_FLT_DATE,F.SCH_DATE)
			AND C.FLT_TYPE   =DECODE(F.FLT_TYPE,'A','I','D','E','I')
			AND F.FLT_KEY    = #flightKey#
			AND F.SCH_DATE   = TO_DATE(#flightDate#, 'DDMONYY')
			AND C.FLT_TYPE   = DECODE(#flightType#,'A','I','S','I','N','E','I')          
			AND C.REC_TYPE   ='BDS'
			AND C.MSG_TYPE   ='L'
			AND C.SEND_STATUS='A'
	</select>
 	<select id="checkLbsffmInd"  parameterClass="cargo.cms.customs.bo.LBSDetailsBO" resultClass="cargo.cms.customs.bo.LBSDetailsBO">
 		select  DECODE(FFM_FINAL_DATE, NULL, 'N', 'Y') AS ffmInd from flt_opr_events where FLT_KEY = #flightKey#
 		 	and flt_type=DECODE(#flightType#,'A','A','S','A','N','D','A') AND SCH_DATE = TO_DATE(#flightDate#, 'DDMONYY')
	</select>
 	<select id="fetchLeftMaxVersion" parameterClass="cargo.cms.customs.bo.LBSDetailsBO" resultClass="cargo.cms.customs.bo.LBSDetailsBO">
 		SELECT NVL(VER_NO,0)AS leftMaxVersion, SEND_STATUS AS newSendStatus FROM CST_SUBM       
  		WHERE FLT_KEY = #flightKey# AND FLT_DATE = TO_DATE(#flightDate#, 'DDMONYY') AND FLT_TYPE = DECODE(#flightType#,'A','I','S','I','N','E','I')
			AND REC_TYPE='BDS' AND MSG_TYPE='L' AND VER_NO = (select MAX(VER_NO) from CST_SUBM WHERE FLT_KEY = #flightKey#
			AND FLT_DATE = TO_DATE(#flightDate#, 'DDMONYY') AND FLT_TYPE = DECODE(#flightType#,'A','I','S','I','N','E','I')  AND REC_TYPE='BDS' AND MSG_TYPE='L')
 	</select>
 	<update id="updateLeftCstSubmDetails" parameterClass="cargo.cms.customs.bo.LBSDetailsBO" >
 		UPDATE CST_SUBM SET SUBM_DATE=SYSDATE,LM_USER_ID=#userID#,LM_DATE=SYSDATE,LM_VER='1',
 			SEND_STATUS='P' WHERE FLT_KEY=#flightKey# AND FLT_DATE= #flightDate# AND FLT_TYPE=DECODE(#flightType#,'A','I','D','E','I') 
 			AND REC_TYPE='BDS' AND MSG_TYPE='L' AND SEND_STATUS='E'
 	</update>
 	<select id="checkLbsCnsgnFltClear"  parameterClass="cargo.cms.customs.bo.LBSDetailsBO" resultClass="cargo.cms.customs.bo.LBSDetailsBO"> 	
   	  <!--  select NVL(decode(ACK_REC_TYPE,'CLP','Y','CLR','Y'),'N') as flightClear FROM CST_ACK WHERE FLT_TYPE = DECODE(#flightType#,'A','I','S','I','N','E','I') AND FLT_KEY=#flightKey# 
			AND FLT_DATE =#flightDate# AND ACK_REC_TYPE ='CLR' AND ROWNUM=1 -->
			SELECT NVL(DECODE(ACK_REC_TYPE,'CLP','Y','CLR','Y'),'N') AS flightClear
			FROM CST_ACK C, FLT_OPR F
			WHERE C.FLT_KEY  = NVL(F.STFS_FLT_KEY,F.FLT_KEY)
			AND C.FLT_DATE   = NVL(F.STFS_FLT_DATE,F.SCH_DATE)
			AND C.FLT_TYPE   =DECODE(F.FLT_TYPE,'A','I','D','E','I')
			AND F.FLT_KEY    = #flightKey#
			AND F.SCH_DATE   = TO_DATE(#flightDate#, 'DDMONYY')
			AND C.FLT_TYPE   = DECODE(#flightType#,'A','I','S','I','N','E','I')
			AND C.ACK_REC_TYPE ='CLR'
			AND ROWNUM         =1
	</select>
 	<insert id="saveSubmitLbsDetailsTemp" parameterClass="cargo.cms.customs.bo.LBSDetailsBO" >
		 INSERT INTO CST_SUBMIT_TEMP(FLT_KEY,FLT_DATE,VER_NO,CST_TYPE,AWB_NO,HAWB_NO) VALUES(#flightKey#, #flightDate#, '1','BDS', #awbNo#,'')
	</insert>
 	<select id="fetchAccsAutoFrzValue"  parameterClass="cargo.cms.customs.bo.FlightListBO" resultClass="java.lang.String">
		Select rule_value AS percentAccsFwb from CMSRULES where rule_code = 'ACCS_AUTO_FRZ_MNTS'
	</select>
 	
<!-- Submit Left Behind Consignee Queries End -->	

<!-- Submit Initial Consignment Start-->
	<select id="fetchFlightRecord"  parameterClass="cargo.cms.customs.bo.FlightListBO" resultClass="cargo.cms.customs.bo.FlightListBO">
		SELECT 
			A.TR_NO as trNo,
			A.FLT_KEY as flightKey,
			A.FLT_TYPE as flightType,
			A.SCH_DATE AS scheduleDate,
			A.stfs_flt_key as vesselflightKey,
			to_char(A.stfs_flt_date,'DDMONYY') as vesselflightDate,
			A.ACT_DATE AS arrivalDate,
			to_char(A.ACT_DATE, 'DD')AS dayOfAtaDate,
			to_char(A.EST_DATE, 'DD')AS dayOfEtaDate,
			A.EST_DATE AS estimatedDate,
			to_char(A.ACT_DATE, 'DDMONYY') as actulDate,
			to_char(A.EST_DATE, 'DDMONYY') as estDate,
			to_char(A.SCH_DATE, 'DDMONYY') as scheduledDate,
		   DECODE(A.CGO_ACFT_TYPE,
             'PSR','Passenger',
             'COM','Combi',
             'FRE','Freighter',
             'OTH','Other') as aircraftType,
			to_char(A.SCH_DATE, 'DD')AS dayOfSchDate,
			(CASE WHEN A.ACT_TIME IS NOT NULL THEN
               SUBSTR(LPAD(A.ACT_TIME,4,'0'),1,2)||':'||SUBSTR(LPAD(A.ACT_TIME,4,'0'),3,2)
              END)  AS arrivalTime,
             (CASE WHEN A.EST_TIME IS NOT NULL THEN
               SUBSTR(LPAD(A.EST_TIME,4,'0'),1,2)||':'||SUBSTR(LPAD(A.EST_TIME,4,'0'),3,2)
              END)  AS estimatedTime, 
             (SELECT SUBSTR(LPAD(SCH_ARR_TIME,4,'0'),1,2)||':'||SUBSTR(LPAD(SCH_ARR_TIME,4,'0'),3,2) 
	           FROM FLT_OPR_LEG 
	              WHERE TR_NO = A.TR_NO AND OFF_POINT='HKG' AND ROWNUM=1) as schTime,
		  		A.PRTY_IND as flightPrty,
				E.FREEZE_IND as freezeInd,
				A.VESSEL_ID as vesselId,
				A.VESSEL_NAME as vesselName,
				A.VOYAGE_NUM as voyageNum,
				A.CALL_SIGN_VESSEL as callSignVessel,
				A.SHIPPING_AGENT as shippingAgent,
				A.FLT_NO AS flightNo,
  				A.CARR_CODE AS carrierCode,
  				 decode(E.DDT_FINALISE_USER_ID,null,'N','Y') finalTransitInd 
			FROM FLT_OPR A,FLT_OPR_EVENTS E,MAST_CARRIER M
			WHERE A.TR_NO = E.TR_NO AND M.CODE=A.CARR_CODE AND A.FLT_KEY = #flightKey#
			AND A.SCH_DATE =  TO_DATE (#flightDate#, 'DDMONYY')
			<isNotEmpty property="flightType">
				<isEqual property="flightType" compareValue="A">
			         AND  A.FLT_TYPE = 'A' AND NVL(m.vessel_flt_yn,'N')='N'
			    </isEqual>
			    <isEqual property="flightType" compareValue="N">
			         AND  A.FLT_TYPE = 'D' AND NVL(m.vessel_flt_yn,'N')='Y'
			    </isEqual>	
			    <isEqual property="flightType" compareValue="S">
			         AND  A.FLT_TYPE = 'A' AND NVL(m.vessel_flt_yn,'N')='Y'
			    </isEqual>	
			 </isNotEmpty>	
			<isEmpty property="flightType">
			     	AND E.FLT_TYPE = 'A'
		 	</isEmpty>
   	</select>
   	
   	
   	<select id="fetchFlightCancelStatus"  parameterClass="cargo.cms.customs.bo.FlightListBO" resultClass="cargo.cms.customs.bo.FlightListBO">
   		<![CDATA[
	   		SELECT opr.status fltStatus ,
			  CASE
			    WHEN SYSDATE > (to_date (TO_CHAR(DECODE(opr.EST_DATE,NULL,opr.SCH_DATE,opr.EST_DATE), 'DDMONYY')
			      || lpad(DECODE(opr.EST_DATE,NULL,opr.SCH_TIME,opr.EST_TIME),4, 0),'DDMONYYHH24MI') -
			      (SELECT TO_NUMBER(rule_value) FROM CMSRULES WHERE RULE_CODE='SUB_INT_BEF_STA'
			      )/(24*60))
			    THEN 'N'
			    ELSE 'Y'
			  END AS etaSTAChk,
			  NVL(RDY_SUBMIT_YN,'N') readyForSubmit
			FROM flt_opr opr,
			  flt_opr_events events
			WHERE opr.flt_key = events.flt_key
			AND opr.sch_date  = events.sch_date
			AND opr.flt_type  = events.flt_type
			AND opr.flt_type  = DECODE(#flightType#,'N','D','S','A','I','A','A')
			AND opr.FLT_KEY       = #flightKey#
			AND opr.SCH_DATE      = to_date(#flightDate#,'DDMONYY')
		]]>
   	</select>
   	
   <select id="fetchConsignmentList"  parameterClass="cargo.cms.customs.bo.FlightListBO" resultClass="cargo.cms.customs.bo.IntCnsgnDetailsBO">
	SELECT A.flightKey,A.flightDate,
		( SELECT FUN_VSL_SHP_PPK_TYPE(A.flightKey,A.flightDate,'I',A.awbNo) FROM DUAL ) as ppkInd,
		A.awbNo,
		decode((to_char(S.AWB_DATE,'DDMONYY')),null,(to_char(A.awbDate,'DDMONYY')),(to_char(S.AWB_DATE,'DDMONYY'))) as
		awbDate,
		SUBSTR(A.awbNo, 1,3)||'-'||SUBSTR(A.awbNo,4,LENGTH(A.awbNo))as disAwbNo,
		SUBSTR(A.awbNo,0,3) as awbPfx,
		SUBSTR(A.awbNo,4) as awbSfx,
		NVL(A.cstContent,B.CONTENT) as contents,A.ORG as origin,
		B.BRD_POINT as loadingPoint,decode(A.cnslInd,'N','NO',null,'NO','YES') AS cnsl,		
		A.DEST as dest,A.manifestPCS,A.manifestWt,
		NVL(C.hawbPCS,0)AS  hawbPCS,C.sumHawbNo,trim(to_char(nvl(C.hawbWt,0),'999999990.0')) as hawbWt,
		NVL(A.awbPCS_CST,0)AS  awbPCS,
		A.awbwt_CST as awbWt,
		A.relInd as priorityCode,
		 nvl(A.relIndOrder, DECODE(A.trfType,'IF','F','TT','M','QT','F')) as priorityCodeOrder,
		DECODE(A.relInd,'F','Interface','M','Tarmac', 'R','Immediate','S','Ship-side','X','Mixed') as priority,
		pkg_cst.get_shpt_type(sa.awb_No, sa.awb_Date, nvl(a.handler, nvl(sa.ACCS_HANDLER, 'CPSL')), sa.CONSOLE_IND) as shpType,
		A.trfType,
		d.INT_YN AS icsIndicator, 
  		d.AMD_YN AS amdIndicator,
  		d.IMPCAR_YN AS impCarIndicator,
  		d.LBS_YN AS lbsIndicator,
  		A.splHandCode,
  		sa.appntd_agent agentName,
      	sa.agent_cust_no agentCode,
      	nvl(a.handler, nvl(sa.ACCS_HANDLER, 'CPSL')) handler,
      	a.readySavedInd as readySavedInd, 
      	D.CARR_CODE AS shipOwner
 		FROM
 		(select sub.*, sub.relIndYN  as relInd,nvl(sub.relIndYN, DECODE(sub.trfType,'IF','F','TT','M','QT','F')) as relIndOrder from 
			(SELECT EDI_FFM_MSG.FLT_KEY AS flightKey,
				EDI_FFM_MSG.FLT_DATE AS flightDate,
				EDI_FFM_SHP.AWB_NO AS awbNo, 
				EDI_FFM_SHP.AWB_DATE AS awbDate, 
				SUM(EDI_FFM_SHP.MAN_PCS) AS manifestPCS,
				SUM(EDI_FFM_SHP.MAN_WT) AS manifestWt,
				NVL(MAX(CST_AWB.PCS),0) AS awbPCS_CST,
				NVL(MAX(CST_AWB.WGT),0) AS awbWt_CST,
				MIN(EDI_FFM_SHP.ROWID) RID,
				MAX(CST_AWB.CONTENT) AS cstContent,
				CST_AWB.REL_IND AS relIndYN,
				MAX(CST_AWB.ORG) AS ORG,
				MAX(CST_AWB.DES) AS DEST,
				CST_AWB.HDLG_AGENT as handler,
        		(CST_AWB.SPH_SPL_CODE1 ||''||DECODE(CST_AWB.SPH_SPL_CODE2,NULL,'','','',','||CST_AWB.SPH_SPL_CODE2)
          		  ||''||DECODE(CST_AWB.SPH_SPL_CODE3,NULL,'','','',','||CST_AWB.SPH_SPL_CODE3)
		          ||''||DECODE(CST_AWB.SPH_SPL_CODE4,NULL,'','','',','||CST_AWB.SPH_SPL_CODE4)
		          ||''||DECODE(CST_AWB.SPH_SPL_CODE5,NULL,'','','',','||CST_AWB.SPH_SPL_CODE5)
		          ||''||DECODE(CST_AWB.SPH_SPL_CODE6,NULL,'','','',','||CST_AWB.SPH_SPL_CODE6)
		          ||''||DECODE(CST_AWB.SPH_SPL_CODE7,NULL,'','','',','||CST_AWB.SPH_SPL_CODE7)
		          ||''||DECODE(CST_AWB.SPH_SPL_CODE8,NULL,'','','',','||CST_AWB.SPH_SPL_CODE8)
		          ||''||DECODE(CST_AWB.SPH_SPL_CODE9,NULL,'','','',','||CST_AWB.SPH_SPL_CODE9)) AS splHandCode,
				CST_AWB.CNSL_IND AS cnslInd		,
        	( Case when
	          (  SELECT count(*) FROM V_DDT_DTL WHERE FLT_KEY = EDI_FFM_MSG.FLT_KEY AND FLT_DATE = EDI_FFM_MSG.FLT_DATE AND AWB_NO= EDI_FFM_SHP.AWB_NO AND 
	          AWB_DATE = to_char(EDI_FFM_SHP.AWB_DATE,'DDMONYY') AND shp_trf_type='TT')>0 then 'TT'
	          when
	          (  SELECT count(*) FROM V_DDT_DTL WHERE FLT_KEY = EDI_FFM_MSG.FLT_KEY AND FLT_DATE = EDI_FFM_MSG.FLT_DATE AND AWB_NO= EDI_FFM_SHP.AWB_NO AND 
	          AWB_DATE = to_char(EDI_FFM_SHP.AWB_DATE,'DDMONYY') AND shp_trf_type='IF')>0 then 'IF'
	          when
	          (  SELECT count(*) FROM V_DDT_DTL WHERE FLT_KEY = EDI_FFM_MSG.FLT_KEY AND FLT_DATE = EDI_FFM_MSG.FLT_DATE AND AWB_NO= EDI_FFM_SHP.AWB_NO AND 
	          AWB_DATE = to_char(EDI_FFM_SHP.AWB_DATE,'DDMONYY')  AND shp_trf_type='QT')>0 then 'QT'
	          END) as trfType ,
	        NVL(CST_AWB.RDY_YN,'N') readySavedInd        
			FROM EDI_FFM_MSG
			INNER JOIN EDI_FFM_SHP ON  EDI_FFM_MSG.TR_NO = EDI_FFM_SHP.TR_NO
			LEFT JOIN CST_AWB ON CST_AWB.AWB_NO = EDI_FFM_SHP.AWB_NO AND EDI_FFM_MSG.FLT_KEY = CST_AWB.FLT_KEY AND 
				 EDI_FFM_MSG.FLT_DATE = CST_AWB.FLT_DATE
			WHERE EDI_FFM_MSG.FLT_KEY = #flightKey# AND EDI_FFM_MSG.FLT_DATE = to_date(#flightDate#,'DDMONYY') and EDI_FFM_SHP.OFF_POINT = 'HKG'
				  AND EDI_FFM_MSG.FFM_STATUS IN('P','F')
			GROUP BY EDI_FFM_SHP.AWB_NO, EDI_FFM_MSG.FLT_KEY, EDI_FFM_MSG.FLT_DATE,CST_AWB.REL_IND,CST_AWB.HDLG_AGENT,EDI_FFM_SHP.AWB_DATE,CST_AWB.SPH_SPL_CODE1,
      CST_AWB.SPH_SPL_CODE2,CST_AWB.SPH_SPL_CODE3,CST_AWB.SPH_SPL_CODE4,CST_AWB.SPH_SPL_CODE5,CST_AWB.SPH_SPL_CODE6,CST_AWB.SPH_SPL_CODE7,CST_AWB.SPH_SPL_CODE8,
      CST_AWB.SPH_SPL_CODE9,CST_AWB.CNSL_IND,CST_AWB.RDY_YN) sub) A
		join EDI_FFM_SHP B on A.RID = B.ROWID 
		left join imp_car_shp s on s.AWB_NO = a.awbNo AND s.FLT_KEY = a.flightKey AND s.FLT_DATE = a.flightDate
		left join imp_car_awb sa on sa.AWB_NO = a.awbNo and sa.awb_date = s.awb_date
		LEFT JOIN (SELECT L.AWB_NO, l.awb_date,
					NVL(SUM(L.PCS),0) as hawbPCS,
					NVL(SUM(L.WGT),0) as hawbWt,
					NVL(COUNT(L.HAWB_NO),0) AS sumHawbNo
				FROM CST_HAWB L
				WHERE EXISTS( SELECT N.AWB_NO
					FROM EDI_FFM_MSG M, EDI_FFM_SHP N
					WHERE M.TR_NO = N.TR_NO
					AND M.FLT_KEY = #flightKey#
					AND M.FLT_DATE = to_date(#flightDate#,'DDMONYY')
					AND M.FFM_STATUS IN('P','F')
					AND N.AWB_NO = L.AWB_NO AND N.AWB_DATE = L.AWB_DATE)
				AND CHANGE_IND!='D'
				GROUP BY L.AWB_NO, l.awb_date) C on sa.awb_No = C.awb_No  and sa.awb_Date = c.awb_Date				
		LEFT JOIN AWB D ON D.AWB_NO = A.awbNo AND D.AWB_DATE = A.awbDate	    
		ORDER BY relInd,priorityCodeOrder,sa.appntd_agent,A.awbNo
   	</select>
   	<parameterMap id="initialCnsgnMap" class="map" >
            <parameter property="FLTKEY"  	jdbcType="VARCHAR"      	javaType="java.lang.String"      								mode="INOUT"/>
            <parameter property="FLTDATE" 	jdbcType="DATE"        		javaType="java.util.Date"       								mode="INOUT"/>
            <parameter property="FLTTYPE" 	jdbcType="VARCHAR"      	javaType="java.lang.String"      								mode="INOUT"/>
            <parameter property="ATA" 	   	jdbcType="VARCHAR"          javaType="java.lang.String"       	nullValue="NO_ENTRY"		mode="OUT"/>
            <parameter property="ETA" 		jdbcType="VARCHAR"     		javaType="java.lang.String"      	nullValue="NO_ENTRY"		mode="OUT"/>
            <parameter property="FFMRECV" 	jdbcType="VARCHAR"       	javaType="java.lang.String"   		nullValue="NO_ENTRY"		mode="OUT"/>
            <parameter property="FWBRECV" 	jdbcType="VARCHAR"       	javaType="java.lang.String"      	nullValue="NO_ENTRY"		mode="OUT"/>
            <parameter property="FWBRECVPERCENTAGE" jdbcType="VARCHAR" 	javaType="java.lang.String"       	nullValue="NO_ENTRY"    	mode="OUT"/>
            <parameter property="CONSOLE" 	jdbcType="VARCHAR"        	javaType="java.lang.String"     	nullValue="NO_ENTRY"		mode="OUT"/>
            <parameter property="FHLRECV" 	jdbcType="VARCHAR"        	javaType="java.lang.String"     	nullValue="NO_ENTRY"		mode="OUT"/>
            <parameter property="NILIND" 	jdbcType="VARCHAR"        	javaType="java.lang.String"     	nullValue="NO_ENTRY" 		mode="OUT"/>
            <parameter property="PRTYIND" 	jdbcType="VARCHAR"       	javaType="java.lang.String"      	nullValue="NO_ENTRY"		mode="OUT"/>
            <parameter property="ACFTTYPE" 	jdbcType="VARCHAR"      	javaType="java.lang.String"         nullValue="NO_ENTRY"       	mode="OUT"/>
            <parameter property="FRZIND" 	jdbcType="VARCHAR"        	javaType="java.lang.String"         nullValue="NO_ENTRY"      	mode="OUT"/>
            <parameter property="STATUS" 	jdbcType="VARCHAR"        	javaType="java.lang.String"         nullValue="NO_ENTRY"     	mode="OUT"/>
            <parameter property="DDTIND" 	jdbcType="VARCHAR"        	javaType="java.lang.String"     	nullValue="NO_ENTRY" 		mode="OUT"/>
            <parameter property="FNLTRFIND" 	jdbcType="VARCHAR"        	javaType="java.lang.String"     	nullValue="NO_ENTRY" 		mode="OUT"/>
            
      </parameterMap>
	  <procedure id="fetchSubmitIntCnsgnDetails" parameterMap="initialCnsgnMap">
            { call PRC_GET_INIT_SUBM(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)  }
      </procedure>
     <select id="fetchAccsCfg"  parameterClass="cargo.cms.customs.bo.FlightListBO" resultClass="cargo.cms.customs.bo.FlightListBO">
		Select rule_value AS percentAccsFwb from CMSRULES where rule_code = 'ACCS_FWB_PERCENT'
   	</select>
   	
   	<select id="getConsolValueCount"  parameterClass="java.lang.String" resultClass="java.lang.String">
		select count(1) from mast_code_dtl where code_type = 'CONSOLIDATION' and instr(#param#,code) > 0 
   	</select>
    <select id="fetchFlightList"  parameterClass="cargo.cms.customs.bo.FlightListBO" resultClass="cargo.cms.customs.bo.FlightListBO">
	 			SELECT 
				O.CARR_CODE AS carrierCode,
				O.FLT_NO AS flightNo,
				to_char(O.SCH_DATE, 'DDMONYY') as arrivalDate,
				to_char(O.ACT_DATE, 'DDMONYY') as actulDate,
				to_char(O.EST_DATE, 'DDMONYY') as estDate,
				to_char(O.SCH_DATE, 'DDMONYY') as scheduledDate,
				O.FLT_KEY as flightKey,
				to_char(O.ORG_FLT_DATE,'DDMONYY') as orgFlightDate,
				O.FLT_KEY as flightType,
				O.stfs_flt_key as vesselflightKey,
				to_char(O.stfs_flt_date,'DDMONYY') as vesselflightDate,
				(CASE WHEN O.ACT_TIME IS NOT NULL THEN
               			SUBSTR(LPAD(O.ACT_TIME,4,'0'),1,2)||':'||SUBSTR(LPAD(O.ACT_TIME,4,'0'),3,2)
             			 END)  AS arrivalTime,
             	(CASE WHEN O.EST_TIME IS NOT NULL THEN	
               	SUBSTR(LPAD(O.EST_TIME,4,'0'),1,2)||':'||SUBSTR(LPAD(O.EST_TIME,4,'0'),3,2)
              		END)  AS estimatedTime,
	            (CASE WHEN O.SCH_TIME IS NOT NULL THEN
               			SUBSTR(LPAD(O.SCH_TIME,4,'0'),1,2)||':'||SUBSTR(LPAD(O.SCH_TIME,4,'0'),3,2)
             			 END) as schTime,
				O.PRTY_IND as flightPrty,
				O.ACFT_TYPE as aircraftType,
				O.STATUS as status,
				E.FFM_IND as ffmRecv,
				O.FLT_TYPE as flightType, 
				E.FREEZE_IND as freezeInd,
				O.TR_NO as trNo	,
				O.VESSEL_ID as vesselId,
				O.VESSEL_NAME as vesselName,
				O.VOYAGE_NUM as voyageNum,
				O.CALL_SIGN_VESSEL as callSignVessel,
				O.SHIPPING_AGENT as shippingAgent,
				NVL(RDY_SUBMIT_YN,'N') readyForSubmit,							
				(SELECT TO_CHAR(MAX(subm_date),'DDMONYY HH24:MI') FROM CST_SUBM where FLT_KEY  = NVL(O.STFS_FLT_KEY,O.FLT_KEY)  AND FLT_DATE =  NVL(O.STFS_FLT_DATE,O.SCH_DATE)  AND FLT_TYPE = DECODE(O.FLT_TYPE,'A','I','D','E','I') AND rec_type = 'INT') as submitDateAndTime,								
				(select DECODE(count(1),0,'N','Y') FROM CST_ACK where FLT_KEY  = NVL(O.STFS_FLT_KEY,O.FLT_KEY)  AND FLT_DATE = NVL(O.STFS_FLT_DATE,O.SCH_DATE)  AND FLT_TYPE = DECODE(O.FLT_TYPE,'A','I','D','E','I')   AND ACK_REC_TYPE = 'CLR') as fltClr,
				DECODE(ddt_finalise_date,'','Y',null,'Y','N') as finalizeTCC				
			FROM FLT_OPR O, FLT_OPR_EVENTS E, MAST_CARRIER M
			WHERE
				 O.TR_NO = E.TR_NO 	AND M.CODE=O.CARR_CODE			
				 AND O.SCH_DATE = TO_DATE(#flightDate#, 'DDMONYY')
			<isNotEmpty property="flightType">
				<isEqual property="flightType" compareValue="A">
			         AND  O.FLT_TYPE = 'A' AND NVL(m.vessel_flt_yn,'N')='N'
			    </isEqual>
			    <isEqual property="flightType" compareValue="N">
			         AND  O.FLT_TYPE = 'D' AND NVL(m.vessel_flt_yn,'N')='Y'
			    </isEqual>	
			    <isEqual property="flightType" compareValue="S">
			         AND  O.FLT_TYPE = 'A' AND NVL(m.vessel_flt_yn,'N')='Y'
			    </isEqual>	
			 </isNotEmpty>	
			 <isEmpty property="flightType">
			     	AND O.FLT_TYPE = 'A'
		 	 </isEmpty>
			<isNotEmpty property="carrierCode">
				AND O.CARR_CODE = #carrierCode# 
			</isNotEmpty>
			<isNotEmpty property="flightNo">
				AND O.FLT_NO = #flightNo# 
			</isNotEmpty>
			<isNotEmpty property="flightKey">
				AND O.FLT_KEY = #flightKey# 
			</isNotEmpty>
			<isNotEmpty property="loginCarrier">
				AND	(O.CARR_CODE = #loginCarrier#
					OR O.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE = #loginCarrier#))
			</isNotEmpty>
			<isNotEmpty property="scheduleTime">				
				AND (O.SCH_TIME  &gt;= LPAD(#scheduleTime# - (SELECT RPAD(LPAD((RULE_VALUE/60),2,0),4,0) FROM CMSRULES WHERE RULE_CODE = 'ACCS_TIMERANGE_MNTS'),4,0) AND 
				O.SCH_TIME &lt;= LPAD(#scheduleTime# + (SELECT RPAD(LPAD((RULE_VALUE/60),2,0),4,0) FROM CMSRULES WHERE RULE_CODE = 'ACCS_TIMERANGE_MNTS'),4,0))
			</isNotEmpty>
	        ORDER BY schTime DESC
	</select>
    <select id="fetchCustomHawbCount" parameterClass="cargo.cms.customs.bo.CustomFhlBO" resultClass="java.lang.String">
	 SELECT count(B.HAWB_NO) CNT  
   		FROM (SELECT SI_TYPE,MAX(TR_NO) TR_NO
   		FROM EDI_FHL 
  		WHERE AWB_NO = #AWB_NO#
		and AWB_DATE = to_date(#AWB_DATE#,'DDMONYY')
  		GROUP BY SI_TYPE) A,
  		EDI_FHL_HAWB B
 		WHERE A.TR_NO = B.TR_NO
	</select>  
   	<select id="fetchCustomFhlAwbDetails" parameterClass="cargo.cms.customs.bo.CustomFhlBO" resultClass="cargo.cms.customs.bo.CustomFhlHawb">
      SELECT B.TR_NO,B.DOC_LINE_NO,B.HAWB_NO,B.MANIFEST_DESC,B.HAWB_ORG,B.HAWB_DEST,
        B.HAWB_PCS || '/' || TRIM(TO_CHAR(B.HAWB_NET_WT,'999999990.0')) tmpPcsWt,
        C.CC_CODE,LTRIM(C.FLT_KEY||'/'||TO_CHAR(C.FLT_DATE,'DDMONYY'),'/') recvDate
  		 FROM 
 		(SELECT SI_TYPE,TR_NO
   			FROM EDI_FHL 
  			WHERE AWB_NO = #AWB_NO# 
			and AWB_DATE = to_date(#AWB_DATE#,'DDMONYY')) A,
  			EDI_FHL_HAWB B,
  			V_CST_LATEST_CC_CODE C
  			WHERE A.TR_NO = B.TR_NO 
   			 AND B.HAWB_NO = C.HAWB_NO(+)
    		AND C.AWB_NO(+) = #AWB_NO# order by hawb_no 
	</select>
	<select id="fetchAwbImpDetails"  parameterClass="cargo.cms.customs.bo.AwbDetailsBO" resultClass="cargo.cms.customs.bo.AwbDetailsBO">
			SELECT 
			IMP_CAR_SHP.AWB_NO AS awbNo,FLT_OPR.FLT_KEY AS flightKey,FLT_OPR.SCH_DATE AS flightDate,FLT_OPR.ACT_TIME AS actTime,
			FLT_OPR.EST_TIME AS estTime,IMP_CAR_AWB.AWB_PCS AS awbPcs, IMP_CAR_AWB.AWB_WT AS awbWt,
			TO_CHAR(IMP_CAR_AWB.AWB_DATE, 'DDMONYY') AS awbDate, IMP_CAR_SHP.MANIFEST_PCS AS manfPcs, IMP_CAR_SHP.MANIFEST_WT AS manfWt,
			IMP_CAR_AWB.AWB_ORIGIN AS orig, IMP_CAR_AWB.AWB_DEST AS dest,IMP_CAR_AWB.CONTENT AS content,
			IMP_CAR_AWB.SPL_CODE1 AS splCode1,IMP_CAR_AWB.SPL_CODE2 AS splCode2,IMP_CAR_AWB.SPL_CODE3 AS splCode3,
			IMP_CAR_AWB.SPL_CODE4 AS splCode4,IMP_CAR_AWB.SPL_CODE5 AS splCode5,
			IMP_CAR_AWB.SPL_CODE6 AS splCode6,IMP_CAR_AWB.SPL_CODE7 AS splCode7,IMP_CAR_AWB.SPL_CODE8 AS splCode8,IMP_CAR_AWB.SPL_CODE9 AS splCode9,
			IMP_CAR_AWB.REL_IND AS relInd,IMP_CAR_AWB.ACCS_HANDLER AS handlingAgent,IMP_CAR_AWB.CONSOLE_IND AS consInd,
			IMP_CAR_AWB.SHPR_NAME AS shipperName,IMP_CAR_AWB.SHPR_ADD1 AS shipperAddress,IMP_CAR_AWB.SHPR_ADD2 AS shipperAddress2,
			IMP_CAR_AWB.SHPR_ADD3 AS shipperAddress3,IMP_CAR_AWB.SHPR_ADD4 AS shipperAddress4,IMP_CAR_AWB.SHPR_ADD5 AS shipperAddress5,
			IMP_CAR_AWB.SHPR_PLACE AS shipperCity,IMP_CAR_AWB.SHPR_PIN_CODE AS shipperPincode,
			IMP_CAR_AWB.SHPR_CTRY_CODE AS shipperCntrycode,IMP_CAR_AWB.CSGNE_NAME AS csgneName,
			IMP_CAR_AWB.CSGNE_ADDR1 AS csgneAddress,IMP_CAR_AWB.CSGNE_ADDR2 AS csgneAddress2,IMP_CAR_AWB.CSGNE_ADDR3 AS csgneAddress3,
			IMP_CAR_AWB.CSGNE_ADDR4 AS csgneAddress4,IMP_CAR_AWB.CSGNE_ADDR5 AS csgneAddress5,
			IMP_CAR_AWB.CSGNE_PLACE AS csgneCity,IMP_CAR_AWB.CSGNE_PIN_CODE AS csgnePincode,IMP_CAR_AWB.CSGNE_CTRY_CODE AS csgneCntrycode,
			IMP_CAR_AWB.DECLN_CTM AS declnCTMvalue,IMP_CAR_AWB.DECLN_CURR_CODE AS currCode,IMP_CAR_AWB.AWB_RMK AS remarks,      
      		AWB.INT_YN AS intIndicator,
			AWB.AMD_YN AS amdIndicator,
			AWB.IMPCAR_YN AS impCarIndicator,
			AWB.LBS_YN AS lbsIndicator,
      		AWB.AWB_TYPE AS  awbType,
      		AWB.CARR_CODE AS carrCode
			FROM IMP_CAR_SHP INNER JOIN FLT_OPR ON
			FLT_OPR.FLT_KEY = IMP_CAR_SHP.FLT_KEY
			AND FLT_OPR.SCH_DATE = IMP_CAR_SHP.FLT_DATE
			INNER JOIN IMP_CAR_AWB ON
			IMP_CAR_SHP.AWB_NO = IMP_CAR_AWB.AWB_NO
			AND IMP_CAR_SHP.AWB_DATE = IMP_CAR_AWB.AWB_DATE
			AND IMP_CAR_SHP.FLT_KEY = #flightKey#
			AND IMP_CAR_SHP.FLT_DATE =  #flightDate#
			AND FLT_OPR.FLT_TYPE= DECODE(#flightType#,'A','A','S','A','N','D',#flightType#)
			AND IMP_CAR_SHP.AWB_NO = #awbNo#   
			AND IMP_CAR_SHP.AWB_DATE = to_date(#awbDate#,'DDMONYY')
			LEFT OUTER JOIN AWB ON IMP_CAR_AWB.AWB_NO = AWB.AWB_NO AND IMP_CAR_AWB.AWB_DATE = AWB.AWB_DATE
   	</select>     	 
 	<select id="fetchAwbPermitDetails"  parameterClass="cargo.cms.customs.bo.AwbDetailsBO" resultClass="cargo.cms.customs.bo.AwbDetailsBO">
	      SELECT PERMIT AS permit, HAWB_NO AS hawbNo FROM CST_PERMIT WHERE AWB_NO = #awbNo#
   	</select>  
 	<select id="fetchAwbLicenseDetails"  parameterClass="cargo.cms.customs.bo.AwbDetailsBO" resultClass="cargo.cms.customs.bo.AwbDetailsBO">
	      SELECT LICENSE AS license, HAWB_NO AS hawbNo FROM CST_LICENSE WHERE AWB_NO = #awbNo# and awb_date = to_date(#awbDate#,'DDMONYY')
   	</select>   
   	<select id="fetchCargoHandlerAgent"  parameterClass="cargo.cms.customs.bo.AwbDetailsBO" resultClass="java.lang.String">
		SELECT Code_Desc As handlingAgent FROM MAST_CODE_DTL where GROUP_CODE='38' AND CODE_TYPE='CARGO_HANDLER' AND code =#handlingAgent# ORDER BY CODE
	</select>
	<select id="fetchReleaseIndTrfType"  parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT RELEASE_IND As relInd FROM MAST_SUB_INT_REL_IND where TRANS_TYPE=#PARAM# and rownum=1
	</select>
	<select id="fetchReleaseIndValTrfType"  parameterClass="java.lang.String" resultClass="java.lang.String">
		select code_desc from mast_code_dtl where code_type='ACCS_REL_IND' and code in (SELECT RELEASE_IND As relInd FROM MAST_SUB_INT_REL_IND where TRANS_TYPE=#PARAM# and rownum=1)
	</select>
   	<select id="fetchAwbDetailsExp"  parameterClass="cargo.cms.customs.bo.AwbDetailsBO" resultClass="cargo.cms.customs.bo.AwbDetailsBO">
		SELECT          EXP_CAR.AWB_NO AS awbNo, 
					SUBSTR(EXP_CAR.AWB_NO, 1,3)||'-'||SUBSTR(EXP_CAR.AWB_NO,4,LENGTH(EXP_CAR.AWB_NO))AS dispAwbNo,		
					substr(EXP_CAR.AWB_NO, 1,3) AS pfx, 		
					substr(EXP_CAR.AWB_NO, 4,11) AS sfx,		
					to_char(EXP_CAR.AWB_DATE, 'ddMONyy') AS awbDate, EXP_CAR.PCS AS awbPcs,         		
					EXP_CAR.WT AS awbWt, 		
					AWB.pman_PCS AS manfPcs, 		
					AWB.pman_WT AS manfWt,EXP_CAR.ORIGIN AS orig, EXP_CAR.DEST AS dest,       		
					UPPER(EXP_CAR.CONTENT) AS content,        		
					EXP_CAR.SPL_CODE1 AS splCode1,EXP_CAR.SPL_CODE2 AS splCode2,		
					EXP_CAR.SPL_CODE3 AS splCode3,EXP_CAR.SPL_CODE4 AS splCode4,		
					EXP_CAR.SPL_CODE5 AS splCode5,EXP_CAR.SPL_CODE6 AS splCode6,		
					EXP_CAR.SPL_CODE7 AS splCode7,EXP_CAR.SPL_CODE8 AS splCode8,EXP_CAR.SPL_CODE9 AS splCode9, 		
					EXP_CAR.SHPR_NAME AS shipperName,		
					EXP_CAR.EDI_SHPR_ADDR_1 AS shipperAddress,		
					EXP_CAR.EDI_SHPR_ADDR_2 AS shipperAddress2,		
					EXP_CAR.EDI_SHPR_ADDR_3 AS shipperAddress3,		
					EXP_CAR.EDI_SHPR_ADDR_4 AS shipperAddress4,		
					EXP_CAR.EDI_SHPR_ADDR_5 AS shipperAddress5,		
					EXP_CAR.EDI_SHPR_PLACE AS shipperCity,EXP_CAR.EDI_SHPR_PIN_CODE AS shipperPincode,		
					EXP_CAR.EDI_SHPR_CTRY_CODE AS shipperCntrycode,       		
					EXP_CAR.EDI_CSGNE_NAME AS csgneName,		
					EXP_CAR.EDI_CSGNE_ADDR_1 AS csgneAddress,		
					EXP_CAR.EDI_CSGNE_ADDR_2 AS csgneAddress2,		
					EXP_CAR.EDI_CSGNE_ADDR_3 AS csgneAddress3,		
					EXP_CAR.EDI_CSGNE_ADDR_4 AS csgneAddress4,		
					EXP_CAR.EDI_CSGNE_ADDR_5 AS csgneAddress5,            		
					EXP_CAR.EDI_CSGNE_PLACE AS csgneCity,		
					EXP_CAR.EDI_CSGNE_PIN_CODE AS csgnePincode,EXP_CAR.EDI_CSGNE_CTRY_CODE AS csgneCntrycode,         	
					EXP_CAR.RMK AS remarks,
					EXP_CAR.DECLN_CTM_VALN AS declnCTMvalue,					
					(DECODE((select count(1) from EXP_CAR where awb_no = #awbNo# and awb_date= to_date(#awbDate#,'DDMONYY') and rownum=1),0,
		    		(DECODE((select rmk from awb_rmk where awb_no=#awbNo# and rownum=1),NULL,awb.AIRLN_RMK,(select rmk from awb_rmk where awb_no=#awbNo# and rownum=1))),DECODE(trim(EXP_CAR.AIRL_RMK),NULL,awb.AIRLN_RMK,'',awb.AIRLN_RMK,EXP_CAR.AIRL_RMK))) AS airlRmk,
					(DECODE((select count(1) from EXP_CAR where awb_no = #awbNo# and awb_date= to_date(#awbDate#,'DDMONYY') and rownum=1),0,
      				(DECODE((select rmk from awb_rmk where awb_no=#awbNo# and awb_date=#awbDate# and rownum=1),NULL,awb.AIRLN_RMK,(select rmk from awb_rmk where awb_no=#awbNo# and rownum=1))),DECODE(trim(EXP_CAR.AIRL_RMK),NULL,awb.AIRLN_RMK,'',awb.AIRLN_RMK,EXP_CAR.AIRL_RMK))) AS oldAirlRmk      		      		
		FROM        EXP_CAR , awb    		
		where 		EXP_CAR.AWB_NO = awb.AWB_NO		
		AND          EXP_CAR.AWB_DATE= awb.AWB_DATE       		
		AND          awb.AWB_TYPE = 'E'
		and          EXP_CAR.AWB_NO = #awbNo#		
		AND          AWB.AWB_DATE = to_date(#awbDate#,'DDMONYY')	
   	</select>   
   	
   	<select id="getAwbremarksDetails"  parameterClass="cargo.cms.customs.bo.AwbDetailsBO" resultClass="cargo.cms.customs.bo.AwbDetailsBO">
		  SELECT 
			  (DECODE((select count(1) from awb where awb_no = #awbNo# and awb_date= to_date(#awbDate#,'DDMONYY') and rownum=1),0,
		      (select rmk from awb_rmk where awb_no=#awbNo# and rownum=1), trim(DECODE(CA.AIRLN_RMK,NULL,A.AIRLN_RMK,'',A.AIRLN_RMK,CA.AIRLN_RMK)) )) AS airlRmk,
			  (DECODE((select count(1) from awb where awb_no = #awbNo# and awb_date= to_date(#awbDate#,'DDMONYY') and rownum=1),0,
		      (select rmk from awb_rmk where awb_no=#awbNo# and rownum=1),trim(DECODE(CA.AIRLN_RMK,NULL,A.AIRLN_RMK,'',A.AIRLN_RMK,CA.AIRLN_RMK)) )) AS oldAirlRmk        		
			  FROM AWB A,IMP_CAR_AWB CA WHERE CA.AWB_NO(+) = A.AWB_NO AND CA.AWB_DATE(+) = A.AWB_DATE
	  		  AND A.AWB_NO       = #awbNo# AND A.AWB_DATE     = TO_DATE(#awbDate#, 'DDMONYY')
   	</select>   
   	
   	
   	<select id="fetchReadyForSubmitFlightList"  parameterClass="java.lang.String" resultClass="cargo.cms.customs.bo.FlightListBO">
   		<!-- SELECT opr.flt_key as flightKey, to_char(opr.sch_date,'DDMONYY') as flightDate , opr.status fltStatus 
			FROM flt_opr opr,
			  flt_opr_events events
			WHERE opr.flt_key                 = events.flt_key
			AND opr.sch_date                  = events.sch_date
			AND opr.flt_type                  = 'A'
			AND opr.flt_type  = events.flt_type
			AND NVL(events.RDY_SUBMIT_YN,'N') = 'Y'
			AND to_date (TO_CHAR(DECODE(opr.EST_DATE,NULL,opr.SCH_DATE,opr.EST_DATE), 'DDMONYY') || lpad(DECODE(opr.EST_DATE,NULL,opr.SCH_TIME,opr.EST_TIME),4, 0),'DDMONYYHH24MI') - (SELECT TO_NUMBER(rule_value)  FROM CMSRULES  WHERE RULE_CODE='SUB_INT_BEF_STA')/(24*60) < SYSDATE
			AND NOT EXISTS (select null from CST_SUBM subm where subm.rec_type = 'INT' AND subm.flt_key = opr.flt_key AND subm.flt_date = opr.sch_date AND subm.flt_type = 'I' AND subm.send_status IN ('P','W','A','R'))
			AND NOT EXISTS (select null from CST_SUBM_TEMP subm where subm.rec_type = 'INT' AND subm.flt_key = opr.flt_key AND subm.flt_date = opr.sch_date AND subm.flt_type = 'I') -->
   		<![CDATA[		
		SELECT opr.flt_key as flightKey, to_char(opr.sch_date,'DDMONYY') as flightDate , opr.status fltStatus ,'A' as flightType
			FROM flt_opr opr,
			  flt_opr_events events
			WHERE opr.flt_key                 = events.flt_key
			AND opr.sch_date                  = events.sch_date
			AND opr.flt_type                  = 'A'
			AND opr.flt_type  = events.flt_type
			AND NVL(events.RDY_SUBMIT_YN,'N') = 'Y'
			AND to_date (TO_CHAR(DECODE(opr.EST_DATE,NULL,opr.SCH_DATE,opr.EST_DATE), 'DDMONYY') || lpad(DECODE(opr.EST_DATE,NULL,opr.SCH_TIME,opr.EST_TIME),4, 0),'DDMONYYHH24MI') - (SELECT TO_NUMBER(rule_value)  FROM CMSRULES  WHERE RULE_CODE='SUB_INT_BEF_STA')/(24*60) < SYSDATE
			AND NOT EXISTS (select null from CST_SUBM subm where subm.rec_type = 'INT' AND subm.flt_key = NVL(opr.stfs_flt_key,opr.flt_key) AND subm.flt_date = NVL(opr.stfs_flt_date,opr.sch_date) AND subm.flt_type = 'I' AND subm.send_status IN ('P','W','A','R'))
			AND NOT EXISTS (select null from CST_SUBM_TEMP subm where subm.rec_type = 'INT' AND subm.flt_key = opr.flt_key AND subm.flt_date = opr.sch_date AND subm.flt_type = 'I')
         
         
		]]>
   	</select>
   	
   	<select id="fetchTCCFinalializePendingList"  parameterClass="java.lang.String" resultClass="cargo.cms.customs.bo.FlightListBO">
   		<!-- SELECT opr.flt_key as flightKey, to_char(opr.sch_date,'DDMONYY') as flightDate
				FROM flt_opr opr,
				  flt_opr_events events
				WHERE opr.flt_key                 = events.flt_key
				AND opr.sch_date                  =events.sch_date
				AND opr.flt_type                  = 'A'
				AND opr.flt_type  = events.flt_type
				AND NVL(events.RDY_SUBMIT_YN,'N') = 'Y'				
				AND to_date (TO_CHAR(DECODE(opr.EST_DATE,NULL,opr.SCH_DATE,opr.EST_DATE), 'DDMONYY') || lpad(DECODE(opr.EST_DATE,NULL,opr.SCH_TIME,opr.EST_TIME),4, 0),'DDMONYYHH24MI') - (SELECT TO_NUMBER(rule_value)  FROM CMSRULES  WHERE RULE_CODE='ALRT_TCC_FINALIZE')/(24*60) < SYSDATE
				AND ddt_finalise_date IS NULL
				AND NOT EXISTS (select null from CST_SUBM subm where subm.rec_type = 'INT' AND subm.flt_key = opr.flt_key AND subm.flt_date = opr.sch_date AND subm.flt_type = 'I' AND subm.send_status IN ('P','W','A','R'))
				AND NOT EXISTS (select null from CST_SUBM_TEMP subm where subm.rec_type = 'INT' AND subm.flt_key = opr.flt_key AND subm.flt_date = opr.sch_date AND subm.flt_type = 'I')
		 -->
   		<![CDATA[			
		  SELECT opr.flt_key as flightKey, to_char(opr.sch_date,'DDMONYY') as flightDate, 'A' as flightType
				FROM flt_opr opr,
				  flt_opr_events events
				WHERE opr.flt_key                 = events.flt_key
				AND opr.sch_date                  =events.sch_date
				AND opr.flt_type                  = 'A'
				AND opr.flt_type  = events.flt_type
				AND NVL(events.RDY_SUBMIT_YN,'N') = 'Y'				
				AND to_date (TO_CHAR(DECODE(opr.EST_DATE,NULL,opr.SCH_DATE,opr.EST_DATE), 'DDMONYY') || lpad(DECODE(opr.EST_DATE,NULL,opr.SCH_TIME,opr.EST_TIME),4, 0),'DDMONYYHH24MI') - (SELECT TO_NUMBER(rule_value)  FROM CMSRULES  WHERE RULE_CODE='ALRT_TCC_FINALIZE')/(24*60) < SYSDATE
				AND ddt_finalise_date IS NULL
				AND NOT EXISTS (select null from CST_SUBM subm where subm.rec_type = 'INT' AND subm.flt_key = NVL(opr.stfs_flt_key,opr.flt_key) AND subm.flt_date = NVL(opr.stfs_flt_date,opr.sch_date) AND subm.flt_type = 'I' AND subm.send_status IN ('P','W','A','R'))
				AND NOT EXISTS (select null from CST_SUBM_TEMP subm where subm.rec_type = 'INT' AND subm.flt_key =  opr.flt_key AND subm.flt_date = opr.sch_date AND subm.flt_type = 'I')
		 ]]>
   	</select>
   	
   	
   	<select id="fetchSENDHashTotalPendingList"  parameterClass="java.lang.String" resultClass="cargo.cms.customs.bo.FaxBO">   		
			SELECT opr.flt_key                AS flightKey,
			  TO_CHAR(opr.sch_date,'DDMONYY') AS flightDate,
			  ver_no                      AS versionNo,
			  'A'                         AS flightType,
			  rec_type                    AS submType
			FROM cst_subm subm
			join flt_opr opr on nvl(opr.stfs_flt_key,opr.flt_key) = subm.flt_key AND nvl(opr.stfs_flt_date,opr.sch_date) = subm.flt_date and opr.flt_type = 'A'
			WHERE subm.flt_type             = 'I'
			AND send_status            = 'A'
			AND rec_type               = 'INT'
			AND NVL(FAX_HASH_SEND,'N') = 'N'
   	</select>
   	
   	<select id="fetchAutoFinalizeFFMPendingList"  parameterClass="java.lang.String" resultClass="cargo.cms.customs.bo.FlightListBO">
			SELECT FLT_OPR_EVENTS.flt_key as flightKey, to_char(FLT_OPR_EVENTS.sch_date,'DDMONYY') as flightDate 
				FROM EDI_FFM_MSG
				JOIN FLT_OPR_EVENTS ON EDI_FFM_MSG.FLT_KEY   = FLT_OPR_EVENTS.FLT_KEY AND EDI_FFM_MSG.FLT_DATE = FLT_OPR_EVENTS.SCH_DATE AND FLT_OPR_EVENTS.FLT_TYPE     ='A'
				JOIN FLT_OPR  ON EDI_FFM_MSG.FLT_KEY   = FLT_OPR.FLT_KEY AND EDI_FFM_MSG.FLT_DATE = FLT_OPR.SCH_DATE AND FLT_OPR.FLT_TYPE     ='A'
				WHERE EDI_FFM_MSG.FFM_STATUS IN ('P','F') 
				AND EXISTS (SELECT null FROM CST_ACK WHERE FLT_TYPE = 'I' AND ACK_REC_TYPE = 'CLR' AND FLT_KEY = NVL(FLT_OPR.stfs_flt_key,FLT_OPR.flt_key) AND FLT_DATE = NVL(FLT_OPR.stfs_flt_date,FLT_OPR.sch_date) )
				AND FLT_OPR_EVENTS.FFM_FINAL_DATE IS NULL AND NVL(FLT_OPR_EVENTS.FFM_UNFINALIZE_IND,'N') = 'N' group by FLT_OPR_EVENTS.flt_key ,FLT_OPR_EVENTS.sch_date
   	</select>
   	
   	 <select id="getawbListWithRdyToSubmit" parameterClass="java.util.HashMap" resultClass="cargo.cms.customs.bo.FlightListBO">
			SELECT awb.awb_no as awbNo,to_char(awb.AWB_DATE,'DDMONYY') as awbDate,
				  CST.FLT_KEY  as flightKey,
				  to_char(CST.FLT_DATE,'DDMONYY')  as flightDate, 'A' as flightType,
				  'SYSUSER' as userID
		  FROM CST_AWB CST
	      JOIN AWB awb ON awb.AWB_NO = CST.AWB_NO AND awb.AWB_DATE = CST.AWB_DATE
	      LEFT JOIN ( SELECT AWB_NO , AWB_DATE
                        FROM AWB 
                        JOIN (SELECT rule_value as configSHC FROM  CMSRULES where RULE_CODE = 'SHC_CODE_ADD_ACCS') shc ON 1 = 1
                        WHERE 1 = 1 AND (SPL_CODE1 = shc.configSHC OR  SPL_CODE2 = shc.configSHC OR
                        SPL_CODE3 = shc.configSHC OR  SPL_CODE4 = shc.configSHC OR SPL_CODE5 = shc.configSHC OR  SPL_CODE6 = shc.configSHC OR
                        SPL_CODE6 = shc.configSHC OR  SPL_CODE8 = shc.configSHC OR SPL_CODE9 = shc.configSHC) ) shc on shc.AWB_NO = awb.awb_No AND shc.AWB_date = awb.AWB_date
	      WHERE CST.FLT_KEY = #FLIGHT_KEY# AND CST.FLT_DATE = to_date(#FLIGHT_DATE#,'DDMONYY') AND CST.flt_type = 'I' AND NVL(RDY_YN,'N') = 'Y' and SHC.AWB_NO is null
	 </select>
	 
	 <select id="getAwbListWithOutRdyToSubmit" parameterClass="java.util.HashMap" resultClass="cargo.cms.customs.bo.IntCnsgnDetailsBO">
		SELECT 
			'A' as flightType,A.flightKey,A.flightDate,A.awbNo,to_char(B.AWB_DATE,'DDMONYY') as
			awbDate,
			NVL(A.cstContent,B.CONTENT) as contents,
	    	decode(A.cnslInd,'N','NO',null,'NO','YES') AS cnsl,		
			A.manifestPCS,
	    	A.manifestWt,
			NVL(C.hawbPCS,0) AS  hawbPCS,
	   		C.sumHawbNo,
	    	trim(to_char(nvl(C.hawbWt,0),'999999990.0')) as hawbWt,
			NVL(A.awbPCS_CST,0)AS  awbPCS,
			A.awbwt_CST as awbWt	
	 		FROM
	    	(SELECT 
	        		EDI_FFM_MSG.FLT_KEY AS flightKey,
					to_char(EDI_FFM_MSG.FLT_DATE,'DDMONYY') AS flightDate,
					EDI_FFM_SHP.AWB_NO AS awbNo, 
					EDI_FFM_SHP.AWB_DATE AS awbDate, 
					SUM(EDI_FFM_SHP.MAN_PCS) AS manifestPCS,
					SUM(EDI_FFM_SHP.MAN_WT) AS manifestWt,
					NVL(MAX(CST_AWB.PCS),0) AS awbPCS_CST,
					NVL(MAX(CST_AWB.WGT),0) AS awbWt_CST,		
	        		MIN(EDI_FFM_SHP.ROWID) RID,
					MAX(CST_AWB.CONTENT) AS cstContent,
					CST_AWB.CNSL_IND AS cnslInd    
				FROM EDI_FFM_MSG
				INNER JOIN EDI_FFM_SHP ON  EDI_FFM_MSG.TR_NO = EDI_FFM_SHP.TR_NO
				LEFT JOIN CST_AWB ON CST_AWB.AWB_NO = EDI_FFM_SHP.AWB_NO AND EDI_FFM_MSG.FLT_KEY = CST_AWB.FLT_KEY AND 
					 EDI_FFM_MSG.FLT_DATE = CST_AWB.FLT_DATE 
				WHERE EDI_FFM_MSG.FLT_KEY = #FLIGHT_KEY#  AND EDI_FFM_MSG.FLT_DATE = to_date(#FLIGHT_DATE# ,'DDMONYY') and EDI_FFM_SHP.OFF_POINT = 'HKG'
					  AND EDI_FFM_MSG.FFM_STATUS IN('P','F') AND NVL(CST_AWB.RDY_YN,'N') = 'N'
				GROUP BY EDI_FFM_SHP.AWB_NO, EDI_FFM_MSG.FLT_KEY, EDI_FFM_MSG.FLT_DATE,CST_AWB.REL_IND,CST_AWB.HDLG_AGENT,EDI_FFM_SHP.AWB_DATE,CST_AWB.CNSL_IND,CST_AWB.RDY_YN) A
			join EDI_FFM_SHP B on A.RID = B.ROWID 
			left join imp_car_shp s on s.AWB_NO = a.awbNo AND s.FLT_KEY = a.flightKey AND s.FLT_DATE = a.flightDate
			left join imp_car_awb sa on sa.AWB_NO = a.awbNo and sa.awb_date = s.awb_date
			LEFT JOIN (SELECT L.AWB_NO, l.awb_date,
						NVL(SUM(L.PCS),0) as hawbPCS,
						NVL(SUM(L.WGT),0) as hawbWt,
						NVL(COUNT(L.HAWB_NO),0) AS sumHawbNo
					FROM CST_HAWB L
					WHERE EXISTS( SELECT N.AWB_NO
						FROM EDI_FFM_MSG M, EDI_FFM_SHP N
						WHERE M.TR_NO = N.TR_NO
						AND M.FLT_KEY = #FLIGHT_KEY# 
						AND M.FLT_DATE = to_date(#FLIGHT_DATE#,'DDMONYY')
						AND M.FFM_STATUS IN('P','F')
						AND N.AWB_NO = L.AWB_NO AND N.AWB_DATE = L.AWB_DATE)
					AND CHANGE_IND!='D' GROUP BY L.AWB_NO, l.awb_date) C on sa.awb_No = C.awb_No  and sa.awb_Date = c.awb_Date				
			LEFT JOIN AWB D ON D.AWB_NO = A.awbNo AND D.AWB_DATE = A.awbDate	
			LEFT JOIN ( SELECT AWB_NO , AWB_DATE
                        FROM AWB awb
                        JOIN (SELECT rule_value as configSHC FROM  CMSRULES where RULE_CODE = 'SHC_CODE_ADD_ACCS') shc ON 1 = 1
                        WHERE 1 = 1 AND (SPL_CODE1 = shc.configSHC OR  SPL_CODE2 = shc.configSHC OR
                        SPL_CODE3 = shc.configSHC OR  SPL_CODE4 = shc.configSHC OR SPL_CODE5 = shc.configSHC OR  SPL_CODE6 = shc.configSHC OR
                        SPL_CODE6 = shc.configSHC OR  SPL_CODE8 = shc.configSHC OR SPL_CODE9 = shc.configSHC) ) shc on shc.AWB_NO = sa.awb_No AND shc.AWB_date = sa.AWB_date 
            WHERE SHC.AWB_NO is null	
	 </select>
	 
	 <select id="getAWBListToUpdateRelInd" parameterClass="java.util.HashMap" resultClass="cargo.cms.common.utils.bo.CommonUtilFunBO">
			SELECT awb.awb_no as awbNum,
				  to_char(awb.awb_date,'DDMONYY') as awbDate,
				  ( Case when
			          (  SELECT count(*) FROM V_DDT_DTL WHERE FLT_KEY = CST.FLT_KEY AND FLT_DATE = CST.FLT_DATE AND AWB_NO= CST.AWB_NO AND 
			          AWB_DATE = to_char(CST.AWB_DATE,'DDMONYY') AND shp_trf_type='TT')>0 then 'TT'
			          when
			          (  SELECT count(*) FROM V_DDT_DTL WHERE FLT_KEY = CST.FLT_KEY AND FLT_DATE = CST.FLT_DATE AND AWB_NO= CST.AWB_NO AND 
			          AWB_DATE = to_char(CST.AWB_DATE,'DDMONYY') AND shp_trf_type='IF')>0 then 'IF'
			          when
			          (  SELECT count(*) FROM V_DDT_DTL WHERE FLT_KEY = CST.FLT_KEY AND FLT_DATE = CST.FLT_DATE AND AWB_NO= CST.AWB_NO AND 
			          AWB_DATE = to_char(CST.AWB_DATE,'DDMONYY')  AND shp_trf_type='QT')>0 then 'QT'
			          END) as trfType,          
				  CST.FLT_KEY  as flightKey,
				  to_char(CST.FLT_DATE,'DDMONYY')  as flightDate,
				  CST.SPH_SPL_CODE1 as splCode1,
				  CST.SPH_SPL_CODE2 as splCode2,
				  CST.SPH_SPL_CODE3 as splCode3,
				  CST.SPH_SPL_CODE4 as splCode4,
				  CST.SPH_SPL_CODE5 as splCode5,
				  CST.SPH_SPL_CODE6 as splCode6,
				  CST.SPH_SPL_CODE7 as splCode7,
				  CST.SPH_SPL_CODE8 as splCode8,
				  CST.SPH_SPL_CODE9 as splCode9
				FROM CST_AWB CST
	      JOIN AWB awb ON awb.AWB_NO = CST.AWB_NO AND awb.AWB_DATE = CST.AWB_DATE
	      WHERE CST.FLT_KEY = #FLIGHT_KEY#
				AND CST.FLT_DATE = to_date(#FLIGHT_DATE#,'DDMONYY')
	      AND CST.flt_type = 'I'
	 </select>
	 
	  <select id="getAWBTransferType" parameterClass="cargo.cms.common.utils.bo.CommonUtilFunBO" resultClass="java.lang.String">
			SELECT 
				  ( Case when
			          (  SELECT count(*) FROM V_DDT_DTL WHERE FLT_KEY = CST.FLT_KEY AND FLT_DATE = CST.FLT_DATE AND AWB_NO= CST.AWB_NO AND 
			          AWB_DATE = to_char(CST.AWB_DATE,'DDMONYY') AND shp_trf_type='TT')>0 then 'TT'
			          when
			          (  SELECT count(*) FROM V_DDT_DTL WHERE FLT_KEY = CST.FLT_KEY AND FLT_DATE = CST.FLT_DATE AND AWB_NO= CST.AWB_NO AND 
			          AWB_DATE = to_char(CST.AWB_DATE,'DDMONYY') AND shp_trf_type='IF')>0 then 'IF'
			          when
			          (  SELECT count(*) FROM V_DDT_DTL WHERE FLT_KEY = CST.FLT_KEY AND FLT_DATE = CST.FLT_DATE AND AWB_NO= CST.AWB_NO AND 
			          AWB_DATE = to_char(CST.AWB_DATE,'DDMONYY')  AND shp_trf_type='QT')>0 then 'QT'
			          END) as trfType
		  FROM CST_AWB CST
	      JOIN AWB awb ON awb.AWB_NO = CST.AWB_NO AND awb.AWB_DATE = CST.AWB_DATE
	      WHERE  CST.FLT_KEY = #flightKey# AND CST.FLT_DATE = to_date(#flightDate#,'DDMONYY') AND CST.flt_type =DECODE(#flightType#,'A','I','S','I','N','E','I')  AND awb.AWB_NO = #awbNum# AND awb.AWB_DATE = to_date(#awbDate#,'DDMONYY')
	 </select>
	 
	 <select id="getAwbTypeToSetRelInd" parameterClass="cargo.cms.common.utils.bo.CommonUtilFunBO" resultClass="java.lang.String">
		SELECT awb_type as awbType FROM AWB WHERE AWB_NO = #awbNum# AND AWB_DATE = to_date(#awbDate#,'DDMONYY')
	</select>
	
	<update id="updateRelIndicatorForAWB" parameterClass="cargo.cms.common.utils.bo.CommonUtilFunBO">
   		UPDATE CST_AWB SET REL_IND= #relInd# , LM_USER_ID='SYSTEM' , LM_DATE=SYSDATE WHERE AWB_NO = #awbNum# AND AWB_DATE = to_date(#awbDate#,'DDMONYY') AND FLT_KEY=#flightKey# 
   			AND FLT_DATE= to_date(#flightDate#,'DDMONYY') AND  NVL(lm_ver,0) = 0
   	</update>
   	
   	<update id="updateReadyToSubmitForAWB" parameterClass="cargo.cms.common.utils.bo.CommonUtilFunBO">
   		UPDATE CST_AWB SET RDY_YN= 'Y' , LM_USER_ID='SYSTEM' , LM_DATE=SYSDATE WHERE AWB_NO = #awbNum# AND AWB_DATE = to_date(#awbDate#,'DDMONYY') AND FLT_KEY=#flightKey# AND FLT_DATE= to_date(#flightDate#,'DDMONYY')
   	</update>
   	
   	
	<update id="revertReadyTOSubmitFLTOPR" parameterClass="java.util.HashMap">   		
		UPDATE FLT_OPR_EVENTS SET  RDY_SUBMIT_YN = 'N' , RDY_SUBMIT_DATE = '' , LM_USER_ID=nvl(#userID#,'SYSTEM'), LM_DATE=SYSDATE ,tr_type = 'RVRFS'
		WHERE FLT_KEY=#fltKey# AND SCH_DATE=TO_DATE(#fltDate#,'DDMONYY') AND FLT_TYPE='A'
	</update>
		
	<update id="revertReadyTOSubmitCSTAWB" parameterClass="java.util.HashMap">   		
		UPDATE CST_AWB SET  RDY_YN= 'N' , LM_USER_ID = nvl(#userID#,'SYSTEM') , LM_DATE=SYSDATE WHERE FLT_KEY=#fltKey# AND FLT_DATE=TO_DATE(#fltDate#,'DDMONYY') AND FLT_TYPE='I'
	</update>
	
	 <select id="getShcPriorityImmediate" parameterClass="cargo.cms.common.utils.bo.CommonUtilFunBO" resultClass="cargo.cms.common.utils.bo.CommonUtilFunBO">
	               select code as shcImmediate,PRIORITY as shcImmediatePriority from(
                    select code,PRIORITY from (
                     select code,PRIORITY from mast_spl_hand_code where code=#splCode1# and REL_IND_IMDT='Y'
                     union
                     select code,PRIORITY from mast_spl_hand_code where code=#splCode2# and REL_IND_IMDT='Y'
                     union
                     select code,PRIORITY from mast_spl_hand_code where code=#splCode3# and REL_IND_IMDT='Y'
                     union
                     select code,PRIORITY from mast_spl_hand_code where code=#splCode4# and REL_IND_IMDT='Y'
                     union
                     select code,PRIORITY from mast_spl_hand_code where code=#splCode5# and REL_IND_IMDT='Y'
                     union
                     select code,PRIORITY from mast_spl_hand_code where code=#splCode6# and REL_IND_IMDT='Y'
                     union
                     select code,PRIORITY from mast_spl_hand_code where code=#splCode7# and REL_IND_IMDT='Y'
                     union
                     select code,PRIORITY from mast_spl_hand_code where code=#splCode8# and REL_IND_IMDT='Y'
                     union
                     select code,PRIORITY from mast_spl_hand_code where code=#splCode9# and REL_IND_IMDT='Y'
                    ) order by priority desc ) where ROWNUM = 1
	 </select>
	 
	  <select id="getShcPriorityShipSide" parameterClass="cargo.cms.common.utils.bo.CommonUtilFunBO" resultClass="cargo.cms.common.utils.bo.CommonUtilFunBO">
	               select code as shcShipSide,PRIORITY as shcShipSidePriority from(
                    select code,PRIORITY from (
                     select code,PRIORITY from mast_spl_hand_code where code=#splCode1# and SSR='Y'
                     union
                     select code,PRIORITY from mast_spl_hand_code where code=#splCode2# and SSR='Y'
                     union
                     select code,PRIORITY from mast_spl_hand_code where code=#splCode3# and SSR='Y'
                     union
                     select code,PRIORITY from mast_spl_hand_code where code=#splCode4# and SSR='Y'
                     union
                     select code,PRIORITY from mast_spl_hand_code where code=#splCode5# and SSR='Y'
                     union
                     select code,PRIORITY from mast_spl_hand_code where code=#splCode6# and SSR='Y'
                     union
                     select code,PRIORITY from mast_spl_hand_code where code=#splCode7# and SSR='Y'
                     union
                     select code,PRIORITY from mast_spl_hand_code where code=#splCode8# and SSR='Y'
                     union
                     select code,PRIORITY from mast_spl_hand_code where code=#splCode9# and SSR='Y'
                    ) order by priority desc ) where ROWNUM = 1
	 </select>
	 
	<select id="getReadyForSubmitOnAWB" parameterClass="java.util.HashMap" resultClass="java.lang.String">
	 	SELECT CASE WHEN (SELECT count(*) FROM CST_AWB WHERE awb_no = #AWB_NO# AND awb_date = TO_DATE(#AWB_DATE#,'DDMONYY') AND 
	    (SPH_SPL_CODE1 IS NOT NULL OR    SPH_SPL_CODE2 IS NOT NULL OR    SPH_SPL_CODE3 IS NOT NULL OR    SPH_SPL_CODE4 IS NOT NULL OR    SPH_SPL_CODE5 IS NOT NULL OR    SPH_SPL_CODE6 IS NOT NULL OR
    	  SPH_SPL_CODE7 IS NOT NULL OR    SPH_SPL_CODE8 IS NOT NULL OR    SPH_SPL_CODE9 IS NOT NULL)) = 0 THEN 'N'
			ELSE (SELECT DECODE(count(1),0,'Y','N') from CST_AWB awb
			JOIN mast_spl_hand_code sp ON NVL(ready_to_sub,'N') = 'N' AND SP.code IN (awb.SPH_SPL_CODE1,awb.SPH_SPL_CODE2,awb.SPH_SPL_CODE3,awb.SPH_SPL_CODE4,awb.SPH_SPL_CODE5,awb.SPH_SPL_CODE6,awb.SPH_SPL_CODE7,
			awb.SPH_SPL_CODE8,awb.SPH_SPL_CODE9) 
			WHERE awb_no = #AWB_NO# and awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')) END FROM DUAL
	 </select>
	 
   	
	<update id="updateCustomsAwbDetailsExp" parameterClass="cargo.cms.customs.bo.AwbDetailsBO">
			UPDATE   EXP_CAR  SET 	
			PCS=#awbPcs#, WT=#awbWt#, 
			ORIGIN =#orig#, DEST =#dest#,  CONTENT=#content#,
			ACCS_CARGO_HDLR  = #handlingAgent#,
			SPL_CODE1=#splCode1#,  SPL_CODE2=#splCode2#,
			SPL_CODE3=#splCode3#,  SPL_CODE4=#splCode4#,
			SPL_CODE5=#splCode5#,  SPL_CODE6=#splCode6#, 
			SPL_CODE7=#splCode7#,  SPL_CODE8=#splCode8#,SPL_CODE9=#splCode9#,					
		    SHPR_NAME =#shipperName#, 
			EDI_SHPR_ADDR_1= #shipperAddress#,  EDI_SHPR_ADDR_2 = #shipperAddress2#,
			EDI_SHPR_ADDR_3= #shipperAddress3#,  EDI_SHPR_ADDR_4 = #shipperAddress4#,
			EDI_SHPR_ADDR_5= #shipperAddress5#, EDI_SHPR_PLACE= #shipperCity#,
			EDI_SHPR_PIN_CODE=#shipperPincode#,	  EDI_SHPR_CTRY_CODE=#shipperCntrycode#,
			EDI_CSGNE_NAME=#csgneName#, 
			EDI_CSGNE_ADDR_1=#csgneAddress#, EDI_CSGNE_ADDR_2=#csgneAddress2#,
			EDI_CSGNE_ADDR_3=#csgneAddress3#, EDI_CSGNE_ADDR_4=#csgneAddress4#,
			EDI_CSGNE_ADDR_5=#csgneAddress5#,
			EDI_CSGNE_PLACE=#csgneCity#, EDI_CSGNE_PIN_CODE=#csgnePincode#,
			EDI_CSGNE_CTRY_CODE=#csgneCntrycode#,			
			DECLN_CTM_VALN =#declnCTMvalue#, DECLN_CURR_CODE=#currCode#,  RMK   = #remarks#,			
		    LM_DATE =sysdate
			WHERE  AWB_NO = #awbNo#
			AND AWB_DATE = to_date(#awbDate#,'ddMONyy')	
	</update>
	
	
	<update id="UPDATE_AWB_RMKS" parameterClass="cargo.cms.customs.bo.AwbDetailsBO">
			UPDATE   AWB  SET 	
			AIRLN_RMK   = #airlRmk#,			
		    LM_DATE = sysdate
			WHERE  AWB_NO = #awbNo#
			AND AWB_DATE = to_date(#awbDate#,'ddMONyy')	
	</update>
	
	<insert id="insertAwbPermit1" parameterClass="cargo.cms.customs.bo.AwbDetailsBO">
		insert into cst_permit values(#awbNo#,'000000', #permit1#, 'Y', 'ADMIN', sysdate,'ADMIN',sysdate)
	</insert>	
	<insert id="insertAwbPermit2" parameterClass="cargo.cms.customs.bo.AwbDetailsBO">
		insert into cst_permit values(#awbNo#,'000000', #permit2#, 'Y', 'ADMIN', sysdate,'ADMIN',sysdate)
	</insert>
	<insert id="insertAwbPermit3" parameterClass="cargo.cms.customs.bo.AwbDetailsBO">
		insert into cst_permit values(#awbNo#,'000000', #permit3#, 'Y', 'ADMIN', sysdate,'ADMIN',sysdate)
	</insert>
	<insert id="insertAwbPermit4" parameterClass="cargo.cms.customs.bo.AwbDetailsBO">
		insert into cst_permit values(#awbNo#,'000000', #permit4#, 'Y', 'ADMIN', sysdate,'ADMIN',sysdate)
	</insert>
	<insert id="insertAwbPermit5" parameterClass="cargo.cms.customs.bo.AwbDetailsBO">
		insert into cst_permit values(#awbNo#,'000000', #permit5#, 'Y', 'ADMIN', sysdate,'ADMIN',sysdate)
	</insert>	
	<insert id="insertAwbLicense1" parameterClass="cargo.cms.customs.bo.AwbDetailsBO">
		  INSERT INTO CST_LICENSE ( AWB_NO ,HAWB_NO ,LICENSE ,CR_USER_ID ,CR_DATE  ,LM_USER_ID  ,LM_DATE,FLT_TYPE,AWB_DATE )              
			  VALUES (#awbNo#,'000000', UPPER(#license1#),'ADMIN',sysdate,'ADMIN',sysdate,#flightType#,to_date(#awbDate#,'ddMONyy'))	
	</insert>	
	<insert id="insertAwbLicense2" parameterClass="cargo.cms.customs.bo.AwbDetailsBO">
		  INSERT INTO CST_LICENSE (AWB_NO ,HAWB_NO ,LICENSE ,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,FLT_TYPE,AWB_DATE )              
			  VALUES (#awbNo#,'000000',UPPER(#license2#),'ADMIN',sysdate,'ADMIN',sysdate,#flightType#,to_date(#awbDate#,'ddMONyy'))	
	</insert>	
	<insert id="insertAwbLicense3" parameterClass="cargo.cms.customs.bo.AwbDetailsBO">
	  INSERT INTO CST_LICENSE (AWB_NO ,HAWB_NO ,LICENSE ,CR_USER_ID , CR_DATE  ,LM_USER_ID  ,LM_DATE,FLT_TYPE,AWB_DATE )              
		  VALUES (#awbNo#,'000000',UPPER(#license3#),'ADMIN',sysdate,'ADMIN',sysdate,#flightType#,to_date(#awbDate#,'ddMONyy'))	
	</insert>
	<insert id="insertAwbLicense4" parameterClass="cargo.cms.customs.bo.AwbDetailsBO">
	  INSERT INTO CST_LICENSE (AWB_NO ,      HAWB_NO ,  LICENSE ,  CR_USER_ID , CR_DATE  ,    LM_USER_ID  , LM_DATE,FLT_TYPE,AWB_DATE )              
			  VALUES ( #awbNo#,'000000', UPPER(#license4#),'ADMIN', sysdate, 'ADMIN',sysdate,#flightType#,to_date(#awbDate#,'ddMONyy'))	
	</insert>
	<insert id="insertAwbLicense5" parameterClass="cargo.cms.customs.bo.AwbDetailsBO">
			INSERT INTO CST_LICENSE ( AWB_NO ,HAWB_NO ,  LICENSE ,  CR_USER_ID , CR_DATE  ,LM_USER_ID  ,LM_DATE,FLT_TYPE,AWB_DATE )              
			  VALUES (#awbNo#,'000000',UPPER(#license5#),'ADMIN',sysdate,'ADMIN',sysdate,#flightType#,to_date(#awbDate#,'ddMONyy'))	
	</insert>
	<select id="fetchCstAwbDetails"  parameterClass="cargo.cms.customs.bo.AwbDetailsBO" resultClass="cargo.cms.customs.bo.AwbDetailsBO">
	 SELECT CST_AWB.TR_NO AS trNo, 
            CST_AWB.AWB_NO AS awbNo,
			 substr(CST_AWB.AWB_NO, 1,3)||'-'||SUBSTR(CST_AWB.AWB_NO,4,LENGTH(CST_AWB.AWB_NO))as dispAwbNo,       
             substr(CST_AWB.AWB_NO, 1,3) AS awbNoPFX, 
             substr(CST_AWB.AWB_NO, 4,11) AS awbNoSFX,
            TO_CHAR(CST_AWB.AWB_DATE, 'DDMONYY') AS awbDate,  
            CST_AWB.PCS AS awbPcs, CST_AWB.WGT AS awbWt, 
			CST_AWB.ORG AS orig, CST_AWB.DES AS dest,CST_AWB.CONTENT AS content,
			CST_AWB.RTG_APT_CODE AS boardPoint,
            CST_AWB.SPH_SPL_CODE1 AS splCode1,CST_AWB.SPH_SPL_CODE2 AS splCode2,
            CST_AWB.SPH_SPL_CODE3 AS splCode3,CST_AWB.SPH_SPL_CODE4 AS splCode4,
            CST_AWB.SPH_SPL_CODE5 AS splCode5,CST_AWB.SPH_SPL_CODE6 AS splCode6,
            CST_AWB.SPH_SPL_CODE7 AS splCode7,CST_AWB.SPH_SPL_CODE8 AS splCode8, CST_AWB.SPH_SPL_CODE9 AS splCode9,
            
            CST_AWB.SPH_SPL_CODE1 AS splCode1old,CST_AWB.SPH_SPL_CODE2 AS splCode2old,
            CST_AWB.SPH_SPL_CODE3 AS splCode3old,CST_AWB.SPH_SPL_CODE4 AS splCode4old,
            CST_AWB.SPH_SPL_CODE5 AS splCode5old,CST_AWB.SPH_SPL_CODE6 AS splCode6old,
            CST_AWB.SPH_SPL_CODE7 AS splCode7old,CST_AWB.SPH_SPL_CODE8 AS splCode8old, CST_AWB.SPH_SPL_CODE9 AS splCode9old,
            
            CST_AWB.CNSL_IND AS conslInd,
			CST_AWB.REL_IND AS relInd,CST_AWB.HDLG_AGENT AS handlingAgent,
            CST_AWB.SHPR_NAME AS shipperName,CST_AWB.SHPR_ADDR AS shipperAddress,
            CST_AWB.SHPR_ADDR2 AS shipperAddress2,CST_AWB.SHPR_ADDR3 AS shipperAddress3,CST_AWB.SHPR_ADDR4 AS shipperAddress4,
            CST_AWB.SHPR_PLACE AS shipperCity,CST_AWB.SHPR_PIN_CODE AS shipperPincode,
            CST_AWB.SHPR_CTRY_CODE AS shipperCntrycode,
            CST_AWB.CSGNE_NAME AS csgneName,CST_AWB.CSGNE_ADDR AS csgneAddress,
            CST_AWB.CSGNE_ADDR2 AS csgneAddress2,CST_AWB.CSGNE_ADDR3 AS csgneAddress3,CST_AWB.CSGNE_ADDR4 AS csgneAddress4,
            CST_AWB.CSGNE_PLACE AS csgneCity,
            CST_AWB.CSGNE_PIN_CODE AS csgnePincode,CST_AWB.CSGNE_CTRY_CODE AS csgneCntrycode,
			CST_AWB.ACCS_IND AS accsIndicator,  CST_AWB.LM_VER AS lmVersion,
	 		CST_AWB.CVD_ISO_CURR_CODE AS currCode,
			decode(CST_AWB.CVD_CHG_CUST_IND,null,to_char(CST_AWB.CVD_CHG_CUST_VAL),CST_AWB.CVD_CHG_CUST_IND) AS declnCTMvalue, 
			CST_AWB.AWB_REMARKS AS remarks, CST_AWB.SHIP_DESC_C AS shmptCode,
			AWB.INT_YN AS intIndicator,
			AWB.AMD_YN AS amdIndicator,
			DECODE(CST_AWB.FLT_TYPE,'I',AWB.IMPCAR_YN,'E',AWB.EXPCAR_YN,AWB.IMPCAR_YN) AS impCarIndicator,
			AWB.LBS_YN AS lbsIndicator,
			AWB.AWB_TYPE AS  awbType,
      		AWB.CARR_CODE AS carrCode,
      		AWB.CARR_CODE AS shipOwner,
      		CST_AWB.FLT_TYPE AS flightType
            FROM CST_AWB 
            LEFT OUTER JOIN AWB ON AWB.AWB_NO = CST_AWB.AWB_NO AND AWB.AWB_DATE = CST_AWB.AWB_DATE
            WHERE CST_AWB.FLT_TYPE= DECODE(#flightType#,'A','I','S','I','N','E',#flightType#)
              AND CST_AWB.FLT_KEY = #flightKey# 
              AND CST_AWB.FLT_DATE = #flightDate#
              AND CST_AWB.AWB_NO = #awbNo# 
              AND CST_AWB.AWB_DATE= to_date(#awbDate#,'DDMONYY')
   	</select>
	<select id="fetchAwbDetails"  parameterClass="cargo.cms.customs.bo.AwbDetailsBO" resultClass="cargo.cms.customs.bo.AwbDetailsBO">
	 	 SELECT A.AWB_NO as awbNo,  substr(A.AWB_NO, 1,3) AS awbNoPFX, 
            substr(A.AWB_NO, 4,11) AS awbNoSFX, A.AWB_DATE as awbDate, A.AWB_ORIGIN as orig, A.AWB_DEST as dest, 
            A.AWB_PCS as awbPcs, A.AWB_WT as awbWt, A.CONTENT as content, 
            A.SPL_CODE1 as splCode1,A.SPL_CODE2 as splCode2,A.SPL_CODE3 as splCode3,A.SPL_CODE4 as splCode4,
            A.SPL_CODE5 as splCode5,A.SPL_CODE6 as splCode6,A.SPL_CODE7 as splCode7,A.SPL_CODE8 as splCode8,A.SPL_CODE9 as splCode9,
            B.LDG_POINT as boardPoint, A.CSGNE_NAME as csgneName,
            C.INT_YN AS intIndicator,
			C.AMD_YN AS amdIndicator,
			C.IMPCAR_YN AS impCarIndicator,
			C.LBS_YN AS lbsIndicator,
			C.AWB_TYPE  AS awbType,
      		C.CARR_CODE AS carrCode
			FROM
	 	 IMP_CAR_AWB A,
	 	 IMP_CAR_SHP B 
	 	 LEFT OUTER JOIN AWB C ON B.AWB_NO = C.AWB_NO AND B.AWB_DATE=C.AWB_DATE
	 	 WHERE B.FLT_KEY = #flightKey# AND B.FLT_DATE = #flightDate# AND
	 	 	   A.AWB_NO = B.AWB_NO AND A.AWB_DATE=B.AWB_DATE AND 
	 	       A.AWB_NO = #awbNo#   AND A.AWB_DATE=to_date(#awbDate#,'DDMONYY') AND 
	 	       B.FLT_KEY =#flightKey# AND B.FLT_DATE = #flightDate# AND 	 	        
	 	       ROWNUM = 1
   	</select> 	 
    <select id="fetchShipmentCodeEDI" parameterClass="cargo.cms.customs.bo.AwbDetailsBO" resultClass="cargo.cms.customs.bo.AwbDetailsBO"> 
   		select b.shmpt_code as shmptCode from edi_ffm_msg a, edi_ffm_shp b where
   		a.tr_no = b.tr_no and a.flt_key = #flightKey#
   		and a.flt_date = #flightDate#
   		and a.ffm_status in ('P','F')
   		and b.awb_no = #awbNo#
		AND b.AWB_DATE=to_date(#awbDate#,'DDMONYY')
   		and rownum=1   	
    </select>
    
    <select id="checkUpdateByShipmentCode" parameterClass="cargo.cms.customs.bo.AwbDetailsBO" resultClass="java.lang.String">
		SELECT COUNT(1) FROM IMP_CAR_SHP s
			JOIN AWB awb ON awb.AWB_NO = s.awb_no AND awb.AWB_DATE = s.awb_date
			WHERE s.FLT_KEY = #flightKey# AND s.FLT_DATE = #flightDate#
			AND s.FFM_FLG = 'Y' AND s.AWB_NO = #awbNo# AND s.AWB_DATE = to_date(#awbDate#,'DDMONYY')
			AND s.CAR_CREATED = 'Y'  AND NOT(awb.awb_type = 'T')
			AND EXISTS (SELECT 1  FROM imp_car_awb  WHERE awb_no  = s.awb_no  AND awb_date  = s.awb_date  AND awb_closed='N')
	</select>	
	
    <update id="updateCustomsAwbDetails" parameterClass="cargo.cms.customs.bo.AwbDetailsBO">
			UPDATE CST_AWB SET 
		 AWB_DATE=to_date(#awbDate#,'ddMONyy'), PCS=#awbPcs#, WGT=#awbWt#,
		 MAN_PCS=#manfPcs#, MAN_WGT=#manfWt#,ORG=#orig#,DES=#dest#,CONTENT=trim(#content#),
		 SPH_SPL_CODE1=#splCode1#,SPH_SPL_CODE2=#splCode2#,SPH_SPL_CODE3=#splCode3#,SPH_SPL_CODE4=#splCode4#,
		 SPH_SPL_CODE5=#splCode5#,SPH_SPL_CODE6=#splCode6#,SPH_SPL_CODE7=#splCode7#,SPH_SPL_CODE8=#splCode8#,SPH_SPL_CODE9=#splCode9#,
		 REL_IND=trim(#relInd#), HDLG_AGENT=#handlingAgent#,		
			SHPR_NAME=trim(#shipperName#), SHPR_ADDR=trim(#shipperAddress#), SHPR_ADDR2=trim(#shipperAddress2#),
			SHPR_ADDR3=trim(#shipperAddress3#),
			SHPR_ADDR4=trim(#shipperAddress4#), SHPR_PLACE=trim(#shipperCity#),
			SHPR_PIN_CODE=trim(#shipperPincode#),
			SHPR_CTRY_CODE=trim(#shipperCntrycode#),
			CSGNE_NAME=trim(#csgneName#), CSGNE_ADDR=trim(#csgneAddress#), 
			CSGNE_ADDR2=trim(#csgneAddress2#),CSGNE_ADDR3=trim(#csgneAddress3#),
			CSGNE_ADDR4=trim(#csgneAddress4#),CSGNE_PLACE=trim(#csgneCity#),
			CSGNE_PIN_CODE=trim(#csgnePincode#), 
			CSGNE_CTRY_CODE=trim(#csgneCntrycode#), 
			CVD_ISO_CURR_CODE=trim(#currCode#),
			CVD_CHG_CUST_IND = decode(#declnCTMvalue#,'NCV','NCV',NULL,'NCV',NULL),
			CVD_CHG_CUST_VAL = decode(#declnCTMvalue#,'NCV',NULL,NULL,NULL,to_char(#declnCTMvalue#)),
			AWB_REMARKS=trim(#remarks#),SHIP_DESC_C=#shmptCode#,
			LM_VER=#lmVersion#, LM_USER_ID=#lmUserId#, LM_DATE=SYSDATE
			WHERE TR_NO = #trNo#
	</update>	   
	<select id="fetchAccsAwbDate"  parameterClass="cargo.cms.customs.bo.AwbDetailsBO" resultClass="cargo.cms.customs.bo.AwbDetailsBO">
	      SELECT 
	      to_char(awb_date,'ddmonyy') as accsAwbDate 
	      			FROM imp_car_shp 
	      				where flt_key=#flightKey# 
	      				and flt_date=#flightDate#  
	      				and awb_no=#awbNo#
   	</select>  
	<update id="updateCustomsAwbImpDetails" parameterClass="cargo.cms.customs.bo.AwbDetailsBO">
			UPDATE IMP_CAR_AWB SET 
			AWB_PCS=#awbPcs#, AWB_WT=#awbWt#, 
			AWB_ORIGIN=#orig#,AWB_DEST=#dest#, CONTENT=substr(#content#,1,15),
			ACCS_HANDLER = #handlingAgent#,
			SPL_CODE1=#splCode1#, SPL_CODE2=#splCode2#, SPL_CODE3=#splCode3#, SPL_CODE4=#splCode4#,
			SPL_CODE5=#splCode5#, SPL_CODE6=#splCode6#, SPL_CODE7=#splCode7#, SPL_CODE8=#splCode8#,SPL_CODE9=#splCode9#,		
			SHPR_NAME=#shipperName#, SHPR_ADD1=#shipperAddress#,SHPR_ADD2=#shipperAddress2#,
			SHPR_ADD3=#shipperAddress3#,SHPR_ADD4=#shipperAddress4#,SHPR_ADD5=#shipperAddress5#,
			SHPR_PLACE=#shipperCity#,SHPR_PIN_CODE=#shipperPincode#,
			SHPR_CTRY_CODE=#shipperCntrycode#,
			CSGNE_NAME=#csgneName#,CSGNE_ADDR1=#csgneAddress#,CSGNE_ADDR2=#csgneAddress2#,
			CSGNE_ADDR3=#csgneAddress3#,CSGNE_ADDR4=#csgneAddress4#,CSGNE_ADDR5=#csgneAddress5#,
			CSGNE_PLACE=#csgneCity#,CSGNE_PIN_CODE=#csgnePincode#,
			CSGNE_CTRY_CODE=#csgneCntrycode#,
			DECLN_CTM=#declnCTMvalue#,DECLN_CURR_CODE=#currCode#,AWB_RMK = #remarks#,REL_IND=#relIndCode#			
			WHERE AWB_NO = #awbNo#
			AND trim(AWB_DATE) = to_date(#awbDate#,'ddMONyy')
	</update>
	<update id="updateCustomsAwbImpManfDetails" parameterClass="cargo.cms.customs.bo.AwbDetailsBO">
			UPDATE IMP_CAR_SHP SET 
			MANIFEST_PCS=#manfPcs#,MANIFEST_WT=#manfWt#
			WHERE AWB_NO = #awbNo#
			AND trim(AWB_DATE) = to_date(#awbDate#,'ddMONyy')
	</update>	
	<update id="updateCustomsAwbImpCarDetails" parameterClass="cargo.cms.customs.bo.AwbDetailsBO">
		UPDATE IMP_CAR_AWB SET 
			AWB_PCS=#awbPcs#, AWB_WT=#awbWt#, 
			AWB_ORIGIN=#orig#,AWB_DEST=#dest#, CONTENT=substr(#content#,1,15),
			ACCS_HANDLER = #handlingAgent#,
			SPL_CODE1=#splCode1#, SPL_CODE2=#splCode2#, SPL_CODE3=#splCode3#, SPL_CODE4=#splCode4#,
			SPL_CODE5=#splCode5#, SPL_CODE6=#splCode6#, SPL_CODE7=#splCode7#, SPL_CODE8=#splCode8#,	SPL_CODE9=#splCode9#,	
			SHPR_NAME=#shipperName#, SHPR_ADD1=#shipperAddress#,SHPR_ADD2=#shipperAddress2#,
			SHPR_ADD3=#shipperAddress3#,SHPR_ADD4=#shipperAddress4#,SHPR_ADD5=#shipperAddress5#,
			SHPR_PLACE=#shipperCity#,SHPR_PIN_CODE=#shipperPincode#,
			SHPR_CTRY_CODE=#shipperCntrycode#,
			CSGNE_NAME=#csgneName#,CSGNE_ADDR1=#csgneAddress#,CSGNE_ADDR2=#csgneAddress2#,
			CSGNE_ADDR3=#csgneAddress3#,CSGNE_ADDR4=#csgneAddress4#,CSGNE_ADDR5=#csgneAddress5#,
			CSGNE_PLACE=#csgneCity#,CSGNE_PIN_CODE=#csgnePincode#,
			CSGNE_CTRY_CODE=#csgneCntrycode#,
			DECLN_CTM=#declnCTMvalue#,DECLN_CURR_CODE=#currCode#,AWB_RMK = #remarks#			
			WHERE AWB_NO = #awbNo#
			AND trim(AWB_DATE) = to_date(#awbDate#,'ddMONyy')
	</update>	
	<insert id="insertCustomsAwbDetails" parameterClass="cargo.cms.customs.bo.AwbDetailsBO">
		INSERT INTO CST_AWB (TR_NO, AWB_NO, AWB_DATE, ORG, DES,CONTENT, PCS, WGT, MAN_PCS,MAN_WGT,
		MSG_VER, WGT_UNIT, 
		SPH_SPL_CODE1,SPH_SPL_CODE2,SPH_SPL_CODE3,SPH_SPL_CODE4,
		SPH_SPL_CODE5,SPH_SPL_CODE6,SPH_SPL_CODE7,SPH_SPL_CODE8,SPH_SPL_CODE9,
		RTG_APT_CODE, REL_IND, HDLG_AGENT,		
			 SHPR_NAME, SHPR_ADDR, SHPR_ADDR2,SHPR_ADDR3,SHPR_ADDR4,SHPR_PLACE,SHPR_PIN_CODE, SHPR_CTRY_CODE,
			 CSGNE_NAME,CSGNE_ADDR,CSGNE_ADDR2,CSGNE_ADDR3,CSGNE_ADDR4,	CSGNE_PLACE,CSGNE_PIN_CODE,CSGNE_CTRY_CODE,
		CVD_ISO_CURR_CODE,CVD_CHG_CUST_IND,CVD_CHG_CUST_VAL, AWB_REMARKS,SHIP_DESC_C,
			 CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE,FLT_KEY,FLT_DATE,FLT_TYPE) VALUES (
		CST_AWB_SEQ.NEXTVAL,#awbNo#,to_date(#awbDate#,'ddMONyy'), #orig#,#dest#,trim(#content#),#awbPcs#,#awbWt#,#manfPcs#,#manfWt#,
		'5','K',
		#splCode1#,#splCode2#,#splCode3#,#splCode4#,#splCode5#,#splCode6#,#splCode7#,#splCode8#,#splCode9#,
		#boardPoint#,trim(#relInd#), #handlingAgent#,
			trim(#shipperName#),trim(#shipperAddress#),trim(#shipperAddress2#),trim(#shipperAddress3#),trim(#shipperAddress4#),
			trim(#shipperCity#),trim(#shipperPincode#),trim(#shipperCntrycode#), 
		    trim(#csgneName#),trim(#csgneAddress#),trim(#csgneAddress2#),
		    trim(#csgneAddress3#),trim(#csgneAddress4#),trim(#csgneCity#),
		    trim(#csgnePincode#),trim(#csgneCntrycode#),#currCode#,
			decode(#declnCTMvalue#,'NCV','NCV',NULL),
		    decode(#declnCTMvalue#,'NCV',NULL,#declnCTMvalue#),
			#remarks#,#shmptCode#,#crUserId#,SYSDATE,#lmUserId#,SYSDATE,#flightKey#,#flightDate#,DECODE(#flightType#,'A','I','S','I','N','E','I'))
	</insert>	  	
	<update id="updateCustomsAwbAddressDetails" parameterClass="cargo.cms.customs.bo.AwbDetailsBO">
			UPDATE CST_AWB SET 
			SHPR_NAME=#shipperName#, SHPR_ADDR=#shipperAddress#, SHPR_PLACE=#shipperCity#,SHPR_PIN_CODE=#shipperPincode#,
			SHPR_CTRY_CODE=#shipperCntrycode#,
			CSGNE_NAME=#csgneName#, CSGNE_ADDR=#csgneAddress#, CSGNE_PLACE=#csgneCity#,CSGNE_PIN_CODE=#csgnePincode#,
			CSGNE_CTRY_CODE=#csgneCntrycode#
			WHERE TR_NO = #trNo#
			AND AWB_NO = #awbNo#
	</update>
    <update id="updateByShipmentCode" parameterClass="cargo.cms.customs.bo.AwbDetailsBO">
			UPDATE EDI_FFM_SHP A 
			SET 
			ORG=#orig#,DEST=#dest#,SPL_CODE1=#splCode1#,SPL_CODE2=#splCode2#,
			SPL_CODE3=#splCode3#,SPL_CODE4=#splCode4#,
			SPL_CODE5=#splCode5#,SPL_CODE6=#splCode6#,SPL_CODE7=#splCode7#,SPL_CODE8=#splCode8#,SPL_CODE9=#splCode9#,
			MAN_PCS=DECODE(A.SHMPT_CODE,'T',#manfPcs#,A.MAN_PCS),
			 MAN_WT=DECODE(A.SHMPT_CODE,'T',#manfWt#,A.MAN_WT), 
			 CONTENT=substr(#content#,1,15),shp_status='ACCS'
			WHERE AWB_NO = #awbNo# 
			and exists(select 1 from edi_ffm_msg b 
				where b.tr_no = a.tr_no
				and b.flt_key=#flightKey#
				and b.flt_date=#flightDate#
				and b.ffm_status in ('P','F')
			)
	</update>	
	<update id="updateAwbPcsWt" parameterClass="cargo.cms.customs.bo.AwbDetailsBO">
		UPDATE AWB
		SET PCS = #awbPcs#, WT = #awbWt#,SPL_CODE1=#splCode1#, SPL_CODE2=#splCode2#, SPL_CODE3=#splCode3#, SPL_CODE4=#splCode4#,
			SPL_CODE5=#splCode5#, SPL_CODE6=#splCode6#, SPL_CODE7=#splCode7#, SPL_CODE8=#splCode8#,SPL_CODE9=#splCode9# ,
			LM_USER_ID = #lmUserId# 
		WHERE AWB_NO = #awbNo# AND AWB_DATE = TO_DATE(#awbDate#,'ddMONyy')
	</update>
	
				
	<update id="updateArlRemarksTOAWBRecord" parameterClass="cargo.cms.customs.bo.AwbDetailsBO">
		UPDATE AWB
		SET AIRLN_RMK = #airlRmk# , LM_USER_ID = #lmUserId#  , LM_DATE = SYSDATE
		WHERE AWB_NO = #awbNo# AND AWB_DATE = TO_DATE(#awbDate#,'ddMONyy')
	</update>
	
	<update id="updateArlRemarksTOIMPAWBRecord" parameterClass="cargo.cms.customs.bo.AwbDetailsBO">
		UPDATE IMP_CAR_AWB
		SET AIRLN_RMK = #airlRmk# , LM_USER_ID = #lmUserId#  , LM_DATE = SYSDATE
		WHERE AWB_NO = #awbNo# AND AWB_DATE = TO_DATE(#awbDate#,'ddMONyy')
	</update>
	
	<update id="updateArlRemarksTOEXPCARRecord" parameterClass="cargo.cms.customs.bo.AwbDetailsBO">
		UPDATE EXP_CAR
		SET airl_rmk = #airlRmk# , LM_USER_ID = #lmUserId#  , LM_DATE = SYSDATE
		WHERE AWB_NO = #awbNo# AND AWB_DATE = TO_DATE(#awbDate#,'ddMONyy')
	</update>
	
	<update id="updateCustomsAwbLicense" parameterClass="cargo.cms.customs.bo.AwbDetailsBO">
		UPDATE CST_LICENSE
		SET    LICENSE = UPPER(#license#), 
			   LM_DATE = sysdate,
			   LM_USER_ID = #crUserId#
		WHERE 
		       UPPER(AWB_NO) = UPPER(#awbNo#)
		   AND UPPER(HAWB_NO) = UPPER(#hawbNo#)
		   AND UPPER(LICENSE) = UPPER(#licenseCopy#)
	</update>	
	<delete id="deleteCustomsAwbLicense" parameterClass="cargo.cms.customs.bo.AwbDetailsBO">
		DELETE FROM 
		       CST_LICENSE
	    WHERE  
	           UPPER(AWB_NO) = UPPER(#awbNo#)
		   AND UPPER(HAWB_NO) = UPPER(#hawbNo#)
		   AND UPPER(LICENSE) = UPPER(#license#)			   		
	</delete>	
	<delete id="deleteCustomsAwbPermit" parameterClass="cargo.cms.customs.bo.AwbDetailsBO">
		DELETE FROM 
		       CST_PERMIT
	    WHERE  
	           UPPER(AWB_NO) = UPPER(#awbNo#)
		   AND UPPER(HAWB_NO) = UPPER(#hawbNo#)
		   AND UPPER(PERMIT) = UPPER(#permit#)			   		
	</delete>	
	<update id="updateCustomsAwbPermit" parameterClass="cargo.cms.customs.bo.AwbDetailsBO">
			UPDATE CST_PERMIT SET 
			PERMIT=#permit#  WHERE AWB_NO = #awbNo# AND HAWB_NO = #hawbNo#  AND UPPER(PERMIT) = UPPER(#permitCopy#)
	</update> 
	<insert id="insertCustomsAwbLicense" parameterClass="cargo.cms.customs.bo.AwbDetailsBO">
		INSERT INTO CST_LICENSE (AWB_NO ,HAWB_NO,LICENSE ,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,FLT_TYPE,AWB_DATE )              
			  VALUES (#awbNo#,'000000000000000000',UPPER(#license#),'ADMIN',sysdate,'ADMIN', sysdate,#flightType#,#awbDate#)
	</insert>	
   <insert id="insertCustomsAwbPermit" parameterClass="cargo.cms.customs.bo.AwbDetailsBO">
		insert into cst_permit values(#awbNo#,'000000000000000000', #permit#, 'Y', 'ADMIN', sysdate,'ADMIN',sysdate)
	</insert>		
	<select id="checkCurrCodeExists" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT count(1) FROM MAST_CURRENCY WHERE code=#currencyCode#
	</select>	
	<select id="checkCountryCodeExists" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT count(1) FROM MAST_COUNTRY WHERE code=#countryCode#
	</select>
	<select id="checkOrgDest" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT count(1) FROM MAST_CITY WHERE code=#city#
	</select>
	<select id="checkSplCode" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT count(1) FROM MAST_SPL_HAND_CODE WHERE code=#splCode#
	</select>	
    <parameterMap id="saveAwbAccsMap" class="map" >
	<parameter property="TRNO" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	</parameterMap>
	<procedure id="saveAwbAccsDetailsProc" parameterMap="saveAwbAccsMap" >
		{ call PRO_CST_AWB_UPD(?)  }
	</procedure>
	<insert id="saveSubmitIntDetailsTemp" parameterClass="cargo.cms.customs.bo.FlightListBO" >
		 INSERT INTO CST_SUBMIT_TEMP(FLT_KEY,FLT_DATE,VER_NO,CST_TYPE,AWB_NO,HAWB_NO) 
				 VALUES(#flightKey#, #flightDate#, '1','INT', #awbNo#,'')
	</insert>
	<insert id="saveCnsgnDetails" parameterClass="cargo.cms.customs.bo.FlightListBO" >
		 INSERT INTO CST_SUBM_TEMP( VER_NO, REC_TYPE, SUBM_DATE, LM_USER_ID, LM_DATE, 
				 LM_VER, SEND_STATUS, FLT_KEY,  FLT_DATE,FLT_TYPE,NO_FLT_SFX) 
				 VALUES(1, 'INT', SYSDATE, #userID#, SYSDATE,'1', 'P',#flightKey#, #flightDate#,DECODE(#flightType#,'N','E','S','I','A','I',NVL(#flightType#,'I')),#noFltSfx#)
	</insert>
	<!-- Sea Flight Changes Added by Abdul start  --> 
	<select id="sqlCheckIsVesselFlight"  parameterClass="cargo.cms.customs.bo.FlightListBO"  resultClass="java.lang.String">
		      SELECT nvl(vessel_flt_yn,'N') FROM MAST_CARRIER where CODE = #carrierCode#
	 </select>	
	 <select id="sqlVesselFlightAlreadyExists"  parameterClass="cargo.cms.customs.bo.FlightListBO"  resultClass="cargo.cms.customs.bo.FlightListBO">
		 select stfs_flt_key as vesselflightKey,TO_CHAR(stfs_flt_date,'DDMONYY') as vesselflightDate,flt_type as  flightType from flt_opr 
                              where flt_key=#flightKey# and sch_date = #flightDate# 
                             <isNotEmpty property="flightType">
                              and flt_type=DECODE(#flightType#,'N','D','S','A','A','A','I','A','E','D',#flightType#)
                              </isNotEmpty>
	 </select>	
	  <select id="fetchVesselFltSouthboundPrefix"  parameterClass="java.lang.String"  resultClass="java.lang.String">
		 select nvl(rule_value,'DS') from cmsrules where rule_code=#sftsSouthNorthboundPrefix#
	 </select>	
	 <select id="sqlCurrentVesselFlightDate"  parameterClass="java.lang.String"  resultClass="java.lang.String">
		 select TO_CHAR(sysdate,'DDMONYY')  as sftsFlightDate from dual
	 </select>		
	 <update id="sqlUpdateVesselFlightKeyDate" parameterClass="java.util.HashMap" >
		  update flt_opr set stfs_flt_key=#STFS_FLT_KEY#,stfs_flt_date=#STFS_FLT_DATE# where flt_key=#FLT_KEY# and sch_date = #FLT_DATE# and flt_type=DECODE(#FLT_TYPE#,'N','D','S','A','A','A',#FLT_TYPE#)  
	</update>
	 
	 
	 <!-- Need to confirm -->
	 <parameterMap id="hmGenerateSTFSNo" class="java.util.HashMap" >
		<parameter property="NUMBER" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
		<parameter property="TYPE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	</parameterMap>

	<procedure id="generateSFTSTRNumber" parameterMap="hmGenerateSTFSNo" >
		{? = call FUN_GET_TR_NO(?)}
	</procedure>
		  <!-- Need to confirm -->
	 <!-- Sea Flight Changes Added by Abdul end  --> 
	<select id="check_shccode"  parameterClass="map"  resultClass="java.lang.String">
		<![CDATA[
			SELECT PRIORITY FROM MAST_SPL_HAND_CODE WHERE UPPER(CODE) = UPPER(#CODE#)
			]]>
	 </select>	
<!-- Submit Initial Consignment End -->
<select id="consignmentStatusEnquiryDetails" parameterClass="cargo.cms.customs.bo.CnsgnStatusFlightListBO" resultClass="cargo.cms.customs.bo.CnsgnStatusFlightListBO">
	
	SELECT E.FLT_KEY as fltKey, #flightType# AS flightType, 
	  E.TR_NO AS trNo,
	   E.CARR_CODE AS flightName, E.FLT_NO AS flightSecName, 
	   to_char(E.SCH_DATE,'DDMONYY')as schDate,
	   DECODE(ACT_TIME, NULL, '', SUBSTR(TRIM(TO_CHAR(NVL(e.ACT_TIME,0),'0000')),0,2)|| ':'|| SUBSTR(TRIM(TO_CHAR(NVL(e.ACT_TIME,0),'0000')),3,4))  AS actTime,
	   DECODE(E.PRTY_IND,0,'Normal','Priority') as prtyInd,
       DECODE(e.CGO_ACFT_TYPE,'PSR','Passenger','COM','Combi','FRE','Freighter','OTH','Other') AS tmpCargoType,
       DECODE(SIGN(C.CLP_IND),1,'Y','N') AS tmpClpInd,
       DECODE(SIGN(C.CLR_IND),1,'Y','N') AS tmpClrInd,
       DECODE(D.SEND_STATUS,'A','Accepted','R','Rejected','P','In progress','W','Pending','Rejected') AS tmpStatus,
       E. VESSEL_ID as vesselId,
       E.VESSEL_NAME as vesselName,
       E.VOYAGE_NUM as voyageNum,
       E.CALL_SIGN_VESSEL as vesselFlightCallSign,
       E.SHIPPING_AGENT as shippingAgent ,
       E.STFS_flt_key as stfsFltKey,
	   to_char(E.STFS_flt_date,'DDMONYY') as stfsFltDate
	  FROM
	(SELECT A.FLT_TYPE,A.FLT_KEY,A.FLT_DATE,MAX(A.SUBM_DATE) SUBM_DATE,
       SUM(DECODE(B.ACK_REC_TYPE,'CLP',1,NULL,0)) CLP_IND,
       SUM(DECODE(B.ACK_REC_TYPE,'CLR',1,NULL,0)) CLR_IND
	 	FROM CST_SUBM A left 
	 	join  CST_ACK  B on  A.FLT_TYPE = B.FLT_TYPE AND A.FLT_KEY = B.FLT_KEY AND A.FLT_DATE = B.FLT_DATE
	 	WHERE (A.rec_type not in ('ITT','ITF','ITC') or B.ACK_rec_type not in ('ITT','ITF','ITC','ITQ','ITN','ITL','ITD','ITA')) 
	 	 and A.FLT_TYPE =  DECODE(#flightType#,'S','I','N','E',#flightType#)
	  	GROUP BY A.FLT_TYPE,A.FLT_KEY,A.FLT_DATE) C, CST_SUBM D, FLT_OPR E
	 WHERE
		C.FLT_TYPE = D.FLT_TYPE AND C.FLT_KEY = D.FLT_KEY AND C.FLT_DATE = D.FLT_DATE
	   AND C.SUBM_DATE = D.SUBM_DATE
	   AND C.FLT_KEY = NVL(E.STFS_flt_key,E.flt_key) AND C.FLT_DATE = NVL(E.STFS_flt_date,E.sch_date)  
	   AND E.FLT_TYPE = DECODE(#flightType#,'I','A','E','D','S','A','N','D','T','S')
	   AND E.SCH_DATE = TO_DATE(#flightDate#,'DDMONYY')
		<isNotEmpty prepend="AND" property="fltKey">
			E.FLT_KEY = NVL(#fltKey#,E.FLT_KEY)
		</isNotEmpty>
	   
	   <isEmpty property="fltKey"> 
			<isNotEmpty property="flightName">
				AND	E.CARR_CODE = #flightName#
			</isNotEmpty>
			<isNotEmpty property="flightSecName">
				AND	E.FLT_NO = #flightSecName#
			</isNotEmpty>
	     </isEmpty>
	     <isEmpty property="flightName">
			<isNotEmpty property="loginCarrier">
				AND	(E.CARR_CODE = #loginCarrier#
				OR E.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE = #loginCarrier#))
			</isNotEmpty>
		</isEmpty>
		<isEqual property="flightType" prepend="AND" compareValue="I">
	       not Exists (SELECT null FROM  MAST_CARRIER where CODE = substr(E.FLT_KEY,0,2) and nvl(VESSEL_FLT_YN,'N') = 'Y' )   
	    </isEqual>
        <isEqual property="flightType" prepend="AND" compareValue="E">
           not Exists (SELECT null FROM  MAST_CARRIER where CODE = substr(E.FLT_KEY,0,2) and nvl(VESSEL_FLT_YN,'N') = 'Y' )    
	    </isEqual>
	    <isEqual property="flightType" prepend="AND" compareValue="S">
	       Exists (SELECT null FROM  MAST_CARRIER where CODE = substr(E.FLT_KEY,0,2) and nvl(VESSEL_FLT_YN,'N') = 'Y' )    
	    </isEqual>
        <isEqual property="flightType" prepend="AND" compareValue="N">
           Exists (SELECT null  FROM MAST_CARRIER where CODE = substr(E.FLT_KEY,0,2) and nvl(VESSEL_FLT_YN,'N') = 'Y' )
	    </isEqual>
	    
	      <dynamic prepend="ORDER BY ">
	           <isNotEmpty property="sortOrder.sortField">
	             $sortOrder.sortField$
	           </isNotEmpty>	           	           
	        </dynamic>
</select>
<select id="consignmentStatusEnquiryDetailsCOUNT" parameterClass="cargo.cms.customs.bo.CnsgnStatusFlightListBO" resultClass="java.lang.Integer">
   select COUNT(*) as totalRowCount
  FROM
  (SELECT A.FLT_TYPE,A.FLT_KEY,A.FLT_DATE,MAX(A.SUBM_DATE) SUBM_DATE,
       SUM(DECODE(B.ACK_REC_TYPE,'CLP',1,NULL,0)) CLP_IND,
       SUM(DECODE(B.ACK_REC_TYPE,'CLR',1,NULL,0)) CLR_IND
  FROM CST_SUBM A left join  CST_ACK  B
    on  A.FLT_TYPE = B.FLT_TYPE
    AND A.FLT_KEY = B.FLT_KEY
    AND A.FLT_DATE = B.FLT_DATE
  WHERE 
		A.FLT_TYPE = #flightType#  AND A.FLT_DATE = TO_DATE(#flightDate#,'DDMONYY')
		<isNotEmpty prepend="AND" property="fltKey">
			A.FLT_KEY = NVL(#fltKey#,A.FLT_KEY)
		</isNotEmpty>
	   GROUP BY A.FLT_TYPE,A.FLT_KEY,A.FLT_DATE) C,
	   CST_SUBM D,FLT_OPR  E
		WHERE
		 C.FLT_TYPE = D.FLT_TYPE AND C.FLT_KEY = D.FLT_KEY AND C.FLT_DATE = D.FLT_DATE
	   AND C.SUBM_DATE = D.SUBM_DATE
	   AND C.FLT_KEY = E.FLT_KEY AND C.FLT_DATE = E.SCH_DATE  
	   AND E.FLT_TYPE = DECODE(#flightType#,'I','A','E','D','T','S')
			<isNotEmpty property="loginCarrier">
			AND	E.CARR_CODE = #loginCarrier#
		</isNotEmpty>	
		</select>
<select id="consignmentStatusEnquiryDetailsITM" parameterClass="cargo.cms.customs.bo.CnsgnStatusFlightListBO" resultClass="cargo.cms.customs.bo.CnsgnStatusFlightListBO">
SELECT 
'' as fltKey, C.FLT_TYPE AS flightType, '' AS trNo,
	   '' AS flightName, '' AS flightSecName, 
	  to_char(C.SCH_DATE,'DDMONYY')as schDate,
	   ''  AS actTime, '' as prtyInd, '' AS tmpCargoType,
       '' AS tmpClpInd,
       '' AS tmpClrInd,
       
       DECODE(D.SEND_STATUS,'A','Accepted','R','Rejected','P','In progress','W','Pending','Rejected') AS tmpStatus,
       
      C.Truck_NO AS truckNo,  C.SCH_Time as schTime,
	 
       DECODE(SIGN(C.CCA_IND),1,'Y','N') AS tmpCcaInd
  FROM
(	
	SELECT A.FLT_TYPE,A.truck_No,A.sch_DATE,A.sch_Time,MAX(A.SUBM_DATE) SUBM_DATE,
                SUM(DECODE(B.ACK_REC_TYPE,'CCA',1,NULL,0)) CCA_IND
	 FROM CST_SUBM A left 
	 join  CST_ACK  B on  A.FLT_TYPE = B.FLT_TYPE AND A.TRUCK_NO = B.TRUCK_NO AND A.SCH_DATE = B.SCH_DATE  
	 WHERE 
		A.FLT_TYPE = #flightType#  
                AND A.SCH_DATE = TO_DATE(#flightDate#,'DDMONYY')
		<isNotEmpty prepend="AND" property="truckNo">
			A.truck_No = NVL(#truckNo#,A.truck_No)
		</isNotEmpty>
                <isNotEmpty prepend="AND" property="schTime">
			A.SCH_TIME = NVL(trim(replace(#schTime#,':','')),A.SCH_TIME)
		</isNotEmpty>
	   GROUP BY A.FLT_TYPE,A.truck_No,A.SCH_DATE,A.SCH_TIME) C,
	   CST_SUBM D, ITM_TRK_MANF_HD  E
	 WHERE E.status not in ('VOID') and 
		 C.FLT_TYPE = D.FLT_TYPE AND C.Truck_No = D.Truck_No AND C.SCH_DATE = D.SCH_DATE AND C.SCH_TIME = D.SCH_TIME
	   AND C.SUBM_DATE = D.SUBM_DATE
	   AND C.Truck_No = E.Truck_No AND C.Sch_DATE = E.TRUCK_FLT_DATE and C.SCH_TIME = E.SCH_TIME
	   AND D.SCH_DATE = TO_DATE(#flightDate#,'DDMONYY')
      <isNotEmpty property="truckNo"> 
          AND	D.Truck_No = #truckNo#
     </isNotEmpty>
     <isNotEmpty prepend="AND" property="schTime">
              D.SCH_TIME = trim(replace(#schTime#,':',''))
      </isNotEmpty>     
       <dynamic prepend="ORDER BY ">
           <isNotEmpty property="sortOrder.sortField">
             $sortOrder.sortField$
           </isNotEmpty>	           	           
        </dynamic>   
</select>
<select id="consignmentStatusEnquiryDetailsITMCOUNT" parameterClass="cargo.cms.customs.bo.CnsgnStatusFlightListBO" resultClass="java.lang.Integer">
   select COUNT(*) as totalRowCount
  FROM
  (SELECT  C.Truck_NO AS truckNo FROM
	(SELECT A.FLT_TYPE,A.truck_No,A.sch_DATE,A.sch_Time,MAX(A.SUBM_DATE) SUBM_DATE,
                SUM(DECODE(B.ACK_REC_TYPE,'CCA',1,NULL,0)) CCA_IND
	 FROM CST_SUBM A left join  CST_ACK  B
	   on  A.FLT_TYPE = B.FLT_TYPE
	   AND A.TRUCK_NO = B.TRUCK_NO
	   AND A.SCH_DATE = B.SCH_DATE  
	 WHERE 
		A.FLT_TYPE = #flightType#  
                AND A.SCH_DATE = TO_DATE(#flightDate#,'DDMONYY')
		<isNotEmpty prepend="AND" property="truckNo">
			A.truck_No = NVL(#truckNo#,A.truck_No)
		</isNotEmpty>
                <isNotEmpty prepend="AND" property="schTime">
			A.SCH_TIME = NVL(#schTime#,A.SCH_TIME)
		</isNotEmpty>
	   GROUP BY A.FLT_TYPE,A.truck_No,A.SCH_DATE,A.SCH_TIME) C,
	   CST_SUBM D, ITM_TRK_MANF_HD  E
	 WHERE  E.status not in ('VOID') and 
		 C.FLT_TYPE = D.FLT_TYPE AND C.Truck_No = D.Truck_No AND C.SCH_DATE = D.SCH_DATE AND C.SCH_TIME = D.SCH_TIME
	   AND C.SUBM_DATE = D.SUBM_DATE
	   AND C.Truck_No = E.Truck_No AND C.Sch_DATE = E.TRUCK_FLT_DATE  
       AND D.SCH_DATE = TO_DATE(#flightDate#,'DDMONYY')
      <isNotEmpty property="truckNo"> 
          AND	D.Truck_No = #truckNo#
     </isNotEmpty>
     <isNotEmpty prepend="AND" property="schTime">
              D.SCH_TIME = NVL(#schTime#,D.SCH_TIME)
      </isNotEmpty>     ) a
</select>
 <select id="consignmentStatusDetails" parameterClass="cargo.cms.customs.bo.CnsgnStatusDetailsBO" resultClass="cargo.cms.customs.bo.CnsgnStatusDetailsBO">
   SELECT *
		FROM
		((SELECT (CASE WHEN A.REC_TYPE = 'BDS' AND MSG_TYPE IS NULL THEN 1
		               WHEN A.REC_TYPE = 'BDS' AND MSG_TYPE ='L' THEN 2
		   WHEN A.REC_TYPE = 'AMD' THEN 8
		   WHEN A.REC_TYPE = 'INT' THEN 9
		   WHEN A.REC_TYPE='EXP' THEN 10
		   WHEN A.REC_TYPE='CFA' THEN 11
		   WHEN A.REC_TYPE='CFE' THEN 12 END) ORD_I,
		         (CASE WHEN A.REC_TYPE = 'BDS' AND MSG_TYPE='L' THEN 'BDS-LB'
		               WHEN A.REC_TYPE = 'BDS' AND MSG_TYPE IS NULL THEN 'BDS'
		   WHEN A.REC_TYPE = 'AMD' THEN 'AMD'
		   WHEN A.REC_TYPE = 'INT' THEN 'INT'
		   ELSE A.REC_TYPE END) AS type,
		      A.VER_NO AS versionNo,
		   TO_CHAR(A.SUBM_DATE,'DD MON YY HH24:mi')  AS submissionDate
		   ,TO_CHAR(B.ACK_DATE,'DD MON YY HH24:mi')  as ackDate,
		   (CASE WHEN A.SEND_STATUS IN('R','E') THEN 'Y' ELSE '' END) AS errMsg,
		   F.FLT_KEY AS fltKey,to_char(F.SCH_DATE, 'DDMONYY') AS flightDate, #flightType# AS flightType,
		   'Submission
		'||DECODE(A.SEND_STATUS,'A','is accepted by customs','R','is rejected by customs','P','for this flight is in
		process',
		   'W','Pending','Rejected')  as status,
		   A.SEND_STATUS AS sendStatus,
		PKG_COMMON.get_flt_ata(F.FLT_KEY, F.SCH_DATE, F.FLT_TYPE) AS ata,
		PKG_COMMON.get_flt_eta(F.FLT_KEY, F.SCH_DATE, F.FLT_TYPE) AS eta,
		F.STFS_flt_key as stfsFltKey,
		to_char(F.STFS_flt_date,'DDMONYY')  as stfsFltDate
		FROM CST_SUBM A,
		   CST_ACK  B,
		   flt_opr F 
		WHERE A.rec_type not in ('ITT','ITF','ITC') and A.FLT_TYPE = B.FLT_TYPE(+) AND A.FLT_KEY = B.FLT_KEY(+)
		   AND A.FLT_DATE = B.FLT_DATE(+) AND A.VER_NO = B.VER_NO(+) AND
		A.REC_TYPE=B.ACK_REC_TYPE(+) AND
		NVL(F.STFS_flt_key,F.flt_key)  = A.FLT_KEY AND NVL(F.STFS_flt_date,F.SCH_DATE) = A.FLT_DATE AND F.FLT_TYPE = DECODE(A.FLT_TYPE, 'I','A','E','D')
		   AND A.FLT_TYPE= DECODE(#flightType#,'A','I','S','I','N','E',#flightType#) 
		   
		   <isEqual property="flightType" compareValue="I">
			AND  not EXISTS (select null from  mast_carrier where code = substr(#fltKey#, 1,2) AND  NVL(vessel_flt_yn,'N') ='Y' )
			</isEqual>
			<isEqual property="flightType" compareValue="E">
				AND  not EXISTS (select null from  mast_carrier where code = substr(#fltKey#, 1,2) AND  NVL(vessel_flt_yn,'N') ='Y' )
			</isEqual>
			<isEqual property="flightType" compareValue="N">
				AND   EXISTS (select null from  mast_carrier where code = substr(#fltKey#, 1,2) AND  NVL(vessel_flt_yn,'N') ='Y' )
			</isEqual>
			<isEqual property="flightType" compareValue="S">
				AND   EXISTS (select null from  mast_carrier where code = substr(#fltKey#, 1,2) AND  NVL(vessel_flt_yn,'N') ='Y' )
			</isEqual>
		
		   AND F.flt_key = #fltKey# AND  F.sch_date = TO_DATE(#flightDate#,'DDMONYY') 
		   AND(F.CARR_CODE = NVL(#loginCarrier#, F.CARR_CODE) OR F.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE =  NVL(#loginCarrier#, GRP_CARR_CODE))))
		
		UNION ALL
		
		SELECT DECODE(C.ACK_REC_TYPE,'CLP',3,'CLR',4,'MAN',5,'LBR',6,'BDC',7,'PAR',13,'ECC',14)
		ORD_I,C.ACK_REC_TYPE  AS type,C.VER_NO  AS versionNo,
		'' AS submissionDate,TO_CHAR(C.ACK_DATE,'DD MON YY HH24:mi')  as
		ackDate,'' AS errMsg,
		F.FLT_KEY AS fltKey,to_char(F.SCH_DATE, 'DDMONYY') AS
		flightDate, #flightType# AS flightType,
		'' AS status,
		'' AS sendStatus,
		PKG_COMMON.get_flt_ata(F.FLT_KEY, F.SCH_DATE, F.FLT_TYPE) AS ata,
		PKG_COMMON.get_flt_eta(F.FLT_KEY, F.SCH_DATE, F.FLT_TYPE) AS eta,
		F.STFS_flt_key as stfsFltKey,
		to_char(F.STFS_flt_date,'DDMONYY')  as stfsFltDate
		FROM CST_ACK C,
		   flt_opr F 
		WHERE C.ACK_rec_type not in ('ITT','ITF','ITC','ITQ','ITN','ITL','ITD','ITA') and 		
		NVL(F.STFS_flt_key,F.flt_key)  = C.FLT_KEY AND NVL(F.STFS_flt_date,F.SCH_DATE) = C.FLT_DATE
		AND F.FLT_TYPE = DECODE(C.FLT_TYPE, 'I','A','E','D') AND
		C.FLT_TYPE= DECODE(#flightType#,'A','I','S','I','N','E',#flightType#) 
		
		<isEqual property="flightType" compareValue="I">
			AND  not EXISTS (select null from  mast_carrier where code = substr(#fltKey#, 1,2) AND  NVL(vessel_flt_yn,'N') ='Y' )
		</isEqual>
		<isEqual property="flightType" compareValue="E">
			AND  not EXISTS (select null from  mast_carrier where code = substr(#fltKey#, 1,2) AND  NVL(vessel_flt_yn,'N') ='Y' )
		</isEqual>
		<isEqual property="flightType" compareValue="N">
			AND   EXISTS (select null from  mast_carrier where code = substr(#fltKey#, 1,2) AND  NVL(vessel_flt_yn,'N') ='Y' )
		</isEqual>
		<isEqual property="flightType" compareValue="S">
			AND   EXISTS (select null from  mast_carrier where code = substr(#fltKey#, 1,2) AND  NVL(vessel_flt_yn,'N') ='Y' )
		</isEqual>
		
		AND F.flt_key = #fltKey# AND F.sch_date = TO_DATE(#flightDate#,'DDMONYY')
		AND C.ACK_REC_TYPE IN ('CLP','CLR','PAR','MAN','ECC','LBR','BDC') AND
		(F.CARR_CODE = NVL(#loginCarrier#, F.CARR_CODE) OR F.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE = NVL(#loginCarrier#, GRP_CARR_CODE))))
		ORDER BY ORD_I, VERSIONNO desc
</select>  

<select id="consignmentStatusDetailsITM" parameterClass="cargo.cms.customs.bo.CnsgnStatusDetailsBO" resultClass="cargo.cms.customs.bo.CnsgnStatusDetailsBO">
  SELECT *
FROM
  (SELECT(
   CASE   WHEN a.rec_type = 'BAS' THEN 1
   		  WHEN a.rec_type = 'AMA' THEN 2
   		  WHEN a.rec_type = 'INA' THEN 3   END) ord_i,
    (CASE   WHEN a.rec_type = 'BAS' THEN 'BAS'
    	    WHEN a.rec_type = 'AMA' THEN 'AMA'
    	    WHEN a.rec_type = 'INA' THEN 'INA'  END) AS  type,  b.ack_date ackDateSort,
     a.ver_no AS   versionno,     to_char(a.subm_date,    'DD MON YY HH24:mi') AS  submissiondate,
     to_char(b.ack_date,    'DD MON YY HH24:mi') AS  ackdate,    
     (   CASE   WHEN a.send_status IN('R',    'E') THEN 'Y'   ELSE ''   END) AS  errmsg,
     a.truck_no AS   truckNo,     to_char(a.sch_date,    'DDMONYY') AS   schDate,  a.sch_Time AS   schTime,
     a.truck_no AS   fltkey,     to_char(a.sch_date,    'DDMONYY') || '/' || a.sch_time AS   flightdate,     a.flt_type AS   flighttype,
     'Submission   ' || decode(a.send_status,    'A',    'is accepted by customs',    'R',    'is rejected by customs',   
     	 'P',    'for this flight is in   process',    'W',    'Pending',    'Rejected') AS  status,
     a.send_status AS   sendstatus,     to_char(a.sch_time) ata
   FROM cst_subm a,     cst_ack b,     itm_trk_manf_hd f
   WHERE  f.status not in ('VOID') and a.flt_type = b.flt_type(+)   AND a.truck_no = b.truck_no(+)   AND a.sch_date = b.sch_date(+)   AND a.sch_time = b.sch_time(+)
   AND a.ver_no = b.ver_no(+)   AND a.rec_type = b.ack_rec_type(+)   AND a.truck_no = f.truck_no   AND f.truck_flt_date = a.sch_date
   AND f.sch_time = a.sch_time   AND a.flt_type = 'T'
   AND a.truck_no =  #truckNo# 
   AND a.flt_date = to_date(#schDate#,    'DDMONYY')   AND a.sch_time = nvl(#schTime#,    a.sch_time)
   UNION ALL
   SELECT decode(c.ack_rec_type,    'CLP',    5,    'CLR',    6,    'MAN',    7,    'LBR',    8,  
   								  'BDC',    9,    'PAR',    13,    'ECC',    14) ord_i,     c.ack_rec_type AS   type,  c.ack_date ackDateSort,  
     c.ver_no AS   versionno,     '' AS   submissiondate,     to_char(c.ack_date,    'DD MON YY HH24:mi') AS  ackdate,     '' AS   errmsg,
     C.truck_no AS   truckNo,     to_char(C.sch_date,    'DDMONYY') AS   schDate,  C.sch_Time AS   schTime,
     c.truck_no AS   fltkey,     to_char(c.sch_date,    'DDMONYY') || '/' || c.sch_time AS   flightdate,     c.flt_type AS   flighttype,
     '' AS   status,     '' AS   sendstatus,     '' AS   ata
   FROM cst_ack c,
     itm_trk_manf_hd f
   WHERE f.status not in ('VOID') and f.truck_no = c.truck_no
   AND f.truck_flt_date = c.sch_date
   AND f.sch_time = c.sch_time
   AND c.flt_type = 'T'
   AND c.truck_no =  #truckNo# 
   AND c.sch_date = to_date(#schDate#,    'DDMONYY')
   AND c.sch_time = nvl(#schTime#,    c.sch_time)
   AND c.ack_rec_type IN('CCA',    'BAS'))
ORDER BY ackDateSort DESC,  submissiondate DESC,  ord_i,  type,  versionno ASC  
		
</select>  
<select id="consignmentStatusErrorMsgsList"  parameterClass="cargo.cms.customs.bo.CnsgnStatusErrorMsgsBO" resultClass="cargo.cms.customs.bo.CnsgnStatusErrorMsgsBO">
		
		SELECT AWB_NO AS awbNo, 
			   substr(awb_no, 1,3) as awbNoPFX, 
			   substr(awb_no, 4,11) as awbNoSFX, 
		       HAWB_NO AS hawbNo, 
		       ERROR_MSG AS errMsg 
		  FROM CST_RECV
		WHERE 
		FLT_DATE =  TO_DATE(NVL(#stfsFltDate#,#flightDate#), 'DD-MM-YY') AND
		FLT_KEY = NVL(#stfsFltKey#,#fltKey#) AND 
		FLT_TYPE = DECODE(#flightType#,'A','I','S','I','N','E',#flightType#) AND 
		REC_TYPE = 'M'	AND MSG_type not in ('ITT','ITF','ITC','ITQ','ITN','ITL','ITD','ITA')
		and (MSG_TYPE=substr(#type#,1,3) OR MSG_TYPE IS NULL) AND 
		VER_NO = #versionNo#		
   	</select>  
 <select id="consignmentStatusErrorMsgs"  parameterClass="cargo.cms.customs.bo.CnsgnStatusErrorMsgsBO" resultClass="cargo.cms.customs.bo.CnsgnStatusErrorMsgsBO">
		
		SELECT '' as awbNoPFX, 
			   '' as awbNoSFX, 
		       '' AS hawbNo, 
		       ERR_MSG AS errMsg 
		  FROM CST_SUBM
		WHERE rec_type not in ('ITT','ITF','ITC')
		AND FLT_DATE =  TO_DATE(NVL(#stfsFltDate#,#flightDate#), 'DD-MM-YY') 
		AND FLT_KEY = NVL(#stfsFltKey#,#fltKey#) AND  
		FLT_TYPE = DECODE(#flightType#,'A','I','S','I','N','E',#flightType#)  AND 
		REC_TYPE = substr(#type#,1,3)	AND 
		VER_NO = #versionNo#		
   	</select>   
   	
   	<select id="consignmentStatusErrorMsgsListITM"  parameterClass="cargo.cms.customs.bo.CnsgnStatusErrorMsgsBO" resultClass="cargo.cms.customs.bo.CnsgnStatusErrorMsgsBO">
		
		SELECT AWB_NO AS awbNo, 
			   substr(awb_no, 1,3) as awbNoPFX, 
			   substr(awb_no, 4,11) as awbNoSFX, 
		       HAWB_NO AS hawbNo, 
		       ERROR_MSG AS errMsg 
		  FROM CST_RECV
		WHERE 
		sch_DATE =  TO_DATE(#schDate#, 'DDMONYY') AND
		truck_NO = #truckNo# AND 
		sch_time = nvl(#schTime#,sch_time) AND 
		FLT_TYPE = 'T' AND 
		REC_TYPE = 'M'	AND 
		(MSG_TYPE=substr(#type#,1,3) OR MSG_TYPE IS NULL) AND 
		VER_NO = #versionNo#		
   	</select>  
 <select id="consignmentStatusErrorMsgsITM"  parameterClass="cargo.cms.customs.bo.CnsgnStatusErrorMsgsBO" resultClass="cargo.cms.customs.bo.CnsgnStatusErrorMsgsBO">
		
		SELECT '' as awbNoPFX, 
			   '' as awbNoSFX, 
		       '' AS hawbNo, 
		       ERR_MSG AS errMsg 
		  FROM CST_SUBM
		WHERE 
		sch_DATE =  TO_DATE(#schDate#, 'DDMONYY') AND
		truck_NO = #truckNo# AND 
		sch_time = nvl(#schTime#,sch_time) AND 
		FLT_TYPE = 'T' AND 
		REC_TYPE = substr(#type#,1,3)	AND 
		VER_NO = #versionNo#		
   	</select>   
   	
   	 <select id="imp_get_ata_from_flight_For_ACCS"  parameterClass="cargo.cms.customs.bo.CnsgnStatusFlightListBO" resultClass="java.lang.String">                   
                  SELECT      NVL(PKG_COMMON.get_flt_ata(#fltKey#, TO_DATE(#flightDate#,'DDMONYY'), DECODE(#flightType#, 'S','A','N','D','E','D','I','A',#flightType#) ),null) AS ATA
                 FROM
                  FLT_OPR
             WHERE            
                  FLT_KEY = #fltKey# AND        
                  FLT_TYPE = DECODE(#flightType#, 'S','A','N','D','E','D','I','A',#flightType#) AND
                  SCH_DATE = TO_DATE(#flightDate#,'DDMONYY')
      </select>
   		
   	<select id="carrierCheckForACCS"  parameterClass="java.lang.String" resultClass="java.lang.Integer">
		SELECT count(1) FROM MAST_CARRIER WHERE CODE = #PARAM#
</select>
<select id="fltNoCheckForACCS"  parameterClass="map" resultClass="java.lang.Integer">
		SELECT count(1) FROM FLT_OPR WHERE CARR_CODE = #fltcarrier# and  FLT_NO=#fltno#
</select> 


<!-- Maintain Constraint Codes Start -->


<select id="examResultsListByAWB"  parameterClass="cargo.cms.customs.bo.ExamResultsBO" resultClass="cargo.cms.customs.bo.ExamResultsBO">		
	SELECT 
        B.FLT_TYPE AS flightType, B.FLT_KEY AS flightKey, to_char(B.FLT_DATE, 'DDMONYY') AS flightDate, 
        B.TRUCK_NO AS truckNo, to_char(B.SCH_DATE, 'DDMONYY') AS schDate, B.SCH_TIME AS schTime, 
        DECODE(B.rec_type,'E',B.EXAM_CODE,B.CONST_CODE) AS constCode, DECODE(B.rec_type,'E','Y','N') AS exam,
        B.CTM_REF_NO AS refNo, nvl(B.EXAM_REP_PCS,0) AS relPc, 
        nvl(B.EXAM_REP_WT,0) AS relWt, nvl(B.EXAM_DET_PCS,0) AS dtnPc, 
        nvl(B.EXAM_DET_WT,0) AS dtnWt, to_char(B.RECV_DATE, 'DD-MON-YY HH24:mi:ss') AS recvDate,
    B.EXAM_REM AS remarks,
        substr(B.AWB_NO, 1,3) as awbNoPFX, 
        substr(B.AWB_NO, 4,11) as awbNoSFX,
        to_char(B.LM_DATE, 'DD-MON-YY HH24:mi:ss') AS lmDate,
   <isEqual property="flightType" compareValue="E">
            PKG_COMMON.get_flt_ata(#flightKey#, #flightDate#, 'D') AS ata,
            PKG_COMMON.get_flt_eta(#flightKey#, #flightDate#, 'D') AS eta,
   </isEqual>    
   <isEqual property="flightType" compareValue="I">
            PKG_COMMON.get_flt_ata(#flightKey#, #flightDate#, 'A') AS ata,
            PKG_COMMON.get_flt_eta(#flightKey#, #flightDate#, 'A') AS eta,
   </isEqual>   
<isEqual property="flightType" compareValue="T">
            PKG_COMMON.get_flt_ata(#flightKey#, #flightDate#, 'T') AS ata,
            PKG_COMMON.get_flt_eta(#flightKey#, #flightDate#, 'T') AS eta,
   </isEqual>               
        B.AWB_NO AS awbNo,B.VER_NO AS verNo,
        B.VER_NO AS submVerNo,
        DECODE(SIGN(c.AWB_CNT - 1),1,'Y',DECODE(SIGN(c.CNR_CNT - c.AWB_CNT - c.HAWB_CNT),1,'Y','N')) AS amd, 
        DECODE(B.REC_TYPE,'BDS','Y','N') AS breakDown,
        DECODE(SIGN(C.HAWB_CNT),1,'Y','N') AS cnsl
        FROM (select * from CST_RECV UNION ALL select * from cst_recv_old_awb) B,
     (SELECT FLT_TYPE,FLT_KEY,FLT_DATE,AWB_NO,MAX(DECODE(HAWB_NO,'000000000000000000',RECV_DATE)) RECV_DATE,
             SUM(DECODE(HAWB_NO,'000000000000000000',1,0)) AWB_CNT,
             SUM(DECODE(HAWB_NO,'000000000000000000',0,1)) HAWB_CNT,
             COUNT(HAWB_NO) CNR_CNT
        FROM (select * from CST_RECV UNION ALL select * from cst_recv_old_awb) 
       WHERE AWB_NO = #awbNo# 
       <isEqual property="codeType" prepend="AND" compareValue="A">
             REC_TYPE IN ('C','E')
       </isEqual>          
       <isEqual property="codeType" prepend="AND" compareValue="ER">
             REC_TYPE = 'E'
       </isEqual>        
       <isEqual property="codeType" prepend="AND" compareValue="NER">
                 REC_TYPE NOT IN ('E')
       </isEqual>    
       GROUP BY FLT_TYPE,FLT_KEY,FLT_DATE,AWB_NO) C
        WHERE NVL(B.msg_type,'MANUAL') not in ('ITT','ITF','ITC','ITQ','ITN','ITL','ITD','ITA') 
        and  B.FLT_KEY = C.FLT_KEY  AND B.FLT_DATE = C.FLT_DATE AND B.FLT_TYPE = C.FLT_TYPE
          AND B.AWB_NO = C.AWB_NO AND B.HAWB_NO='000000000000000000' AND B.RECV_DATE = C.RECV_DATE 
		  <isNotEmpty property="loginCarrier">
			AND	(B.CARR_CODE = #loginCarrier#
				OR B.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE = #loginCarrier#))
		</isNotEmpty>
   	</select>  
   	
	<select id="examResultsListByFlight"  parameterClass="cargo.cms.customs.bo.ExamResultsBO" resultClass="cargo.cms.customs.bo.ExamResultsBO">

 SELECT 
        B.FLT_TYPE AS flightType, B.FLT_KEY AS flightKey, to_char(B.FLT_DATE, 'DDMONYY') AS flightDate, 
        DECODE(B.rec_type,'E',B.EXAM_CODE,B.CONST_CODE) AS constCode, DECODE(B.rec_type,'E','Y','N') AS exam,
        B.CTM_REF_NO AS refNo, nvl(B.EXAM_REP_PCS,0) AS relPc, 
        nvl(B.EXAM_REP_WT,0) AS relWt, nvl(B.EXAM_DET_PCS,0) AS dtnPc, 
        nvl(B.EXAM_DET_WT,0) AS dtnWt, to_char(B.RECV_DATE, 'DD-MON-YY HH24:mi:ss') AS recvDate,
    B.EXAM_REM AS remarks,
        substr(B.AWB_NO, 1,3) as awbNoPFX, 
        substr(B.AWB_NO, 4,11) as awbNoSFX,
        to_char(B.LM_DATE, 'DD-MON-YY HH24:mi:ss') AS lmDate,
   <isEqual property="flightType" compareValue="E">
            PKG_COMMON.get_flt_ata(#flightKey#, #flightDate#, 'D') AS ata,
            PKG_COMMON.get_flt_eta(#flightKey#, #flightDate#, 'D') AS eta,
   </isEqual>    
   <isEqual property="flightType" compareValue="I">
            PKG_COMMON.get_flt_ata(#flightKey#, #flightDate#, 'A') AS ata,
            PKG_COMMON.get_flt_eta(#flightKey#, #flightDate#, 'A') AS eta,
   </isEqual> 
	<isEqual property="flightType" compareValue="T">
            PKG_COMMON.get_flt_ata(#flightKey#, #flightDate#, 'T') AS ata,
            PKG_COMMON.get_flt_eta(#flightKey#, #flightDate#, 'T') AS eta,
   </isEqual>                 
        B.AWB_NO AS awbNo,B.VER_NO AS verNo,
        B.VER_NO AS submVerNo,
        case when (select count(1) FROM CST_SUBM cstSubm
			         join CST_CSGNM cstCsgnm on cstCsgnm.flt_Type = cstSubm.flt_Type and cstCsgnm.flt_Key = cstSubm.flt_Key and cstCsgnm.flt_Date = cstSubm.flt_Date 
			                        			and  cstCsgnm.ver_no = cstSubm.ver_no and  cstCsgnm.recv_rec_type = cstSubm.rec_type
			         where cstSubm.rec_type = 'AMD' and send_status = 'A' and  cstSubm.flt_Type = B.FLT_TYPE and cstSubm.flt_Key = B.FLT_KEY and cstSubm.flt_Date = B.FLT_DATE 
			         and cstCsgnm.awb_no = B.AWB_NO ) > 0 then 'Y' else 'N' end AS amd, 
        case when (select count(1) FROM CST_SUBM cstSubm
			         join CST_CSGNM cstCsgnm on cstCsgnm.flt_Type = cstSubm.flt_Type and cstCsgnm.flt_Key = cstSubm.flt_Key and cstCsgnm.flt_Date = cstSubm.flt_Date 
			                        			and  cstCsgnm.ver_no = cstSubm.ver_no and  cstCsgnm.recv_rec_type = cstSubm.rec_type
			         where cstSubm.rec_type = 'BDS' and send_status = 'A' and  cstSubm.flt_Type = B.FLT_TYPE and cstSubm.flt_Key = B.FLT_KEY and cstSubm.flt_Date = B.FLT_DATE 
			         and cstCsgnm.awb_no = B.AWB_NO ) > 0 then 'Y' else 'N' end  AS breakDown,
        DECODE(SIGN(C.HAWB_CNT),1,'Y','N') AS cnsl
        FROM (select * from CST_RECV UNION ALL select * from cst_recv_old_awb) B,
     (SELECT FLT_TYPE,FLT_KEY,FLT_DATE,AWB_NO,MAX(DECODE(HAWB_NO,'000000000000000000',RECV_DATE)) RECV_DATE,
             SUM(DECODE(HAWB_NO,'000000000000000000',1,0)) AWB_CNT,
             SUM(DECODE(HAWB_NO,'000000000000000000',0,1)) HAWB_CNT,
             COUNT(HAWB_NO) CNR_CNT
        FROM (select * from CST_RECV UNION ALL select * from cst_recv_old_awb)  
       WHERE FLT_TYPE = #flightType#
             AND FLT_KEY = #flightKey#
             AND FLT_DATE = to_date(#flightDate#,'ddmonyy')
       <isEqual property="codeType" prepend="AND" compareValue="A">
             REC_TYPE IN ('C','E')
       </isEqual>          
       <isEqual property="codeType" prepend="AND" compareValue="ER">
             REC_TYPE = 'E'
       </isEqual>        
       <isEqual property="codeType" prepend="AND" compareValue="NER">
                 REC_TYPE ='C'
       </isEqual>    
       GROUP BY FLT_TYPE,FLT_KEY,FLT_DATE,AWB_NO) C
        WHERE B.FLT_KEY = C.FLT_KEY AND B.FLT_DATE = C.FLT_DATE AND B.FLT_TYPE = C.FLT_TYPE 
          AND B.AWB_NO = C.AWB_NO AND B.HAWB_NO='000000000000000000' AND B.RECV_DATE = C.RECV_DATE
		<isNotEmpty property="loginCarrier">
			AND	(B.CARR_CODE = #loginCarrier#
				OR B.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE = #loginCarrier#))
		</isNotEmpty>
   	</select>    	 
   	
   	<select id="examResultsListByTruck"  parameterClass="cargo.cms.customs.bo.ExamResultsBO" resultClass="cargo.cms.customs.bo.ExamResultsBO">

 	SELECT 
        B.FLT_TYPE AS flightType, B.FLT_KEY AS flightKey, to_char(B.FLT_DATE, 'DDMONYY') AS flightDate, 
        B.truck_no AS truckNo, to_char(B.SCH_DATE, 'DDMONYY') AS schDate, B.SCH_TIME AS schTime,
        DECODE(B.rec_type,'E',B.EXAM_CODE,B.CONST_CODE) AS constCode, DECODE(B.rec_type,'E','Y','N') AS exam,
        B.CTM_REF_NO AS refNo, nvl(B.EXAM_REP_PCS,0) AS relPc, 
        nvl(B.EXAM_REP_WT,0) AS relWt, nvl(B.EXAM_DET_PCS,0) AS dtnPc, 
        nvl(B.EXAM_DET_WT,0) AS dtnWt, to_char(B.RECV_DATE, 'DD-MON-YY HH24:mi:ss') AS recvDate,
        B.EXAM_REM AS remarks,
        substr(B.AWB_NO, 1,3) as awbNoPFX, 
        substr(B.AWB_NO, 4,11) as awbNoSFX,
        to_char(B.LM_DATE, 'DD-MON-YY HH24:mi:ss') AS lmDate,           
        B.AWB_NO AS awbNo,B.VER_NO AS verNo,
        B.VER_NO AS submVerNo,
        DECODE(SIGN(c.AWB_CNT - 1),1,'Y',DECODE(SIGN(c.CNR_CNT - c.AWB_CNT - c.HAWB_CNT),1,'Y','N')) AS amd, 
        DECODE(B.REC_TYPE,'BDS','Y','N') AS breakDown,
        DECODE(SIGN(C.HAWB_CNT),1,'Y','N') AS cnsl
        FROM CST_RECV B,
     (SELECT FLT_TYPE,truck_no,sch_DATE,sch_TIME,AWB_NO,MAX(DECODE(HAWB_NO,'000000000000000000',RECV_DATE)) RECV_DATE,
             SUM(DECODE(HAWB_NO,'000000000000000000',1,0)) AWB_CNT,
             SUM(DECODE(HAWB_NO,'000000000000000000',0,1)) HAWB_CNT,
             COUNT(HAWB_NO) CNR_CNT
        FROM (select * from CST_RECV UNION ALL select * from cst_recv_old_awb) 
       WHERE FLT_TYPE = 'T'
             AND truck_no = #truckNo#
             AND sch_DATE = to_date(#schDate#,'ddmonyy')
             AND sch_time = nvl(#schTime#,sch_time)
       <isEqual property="codeType" prepend="AND" compareValue="A">
             REC_TYPE IN ('C','E')
       </isEqual>          
       <isEqual property="codeType" prepend="AND" compareValue="ER">
             REC_TYPE = 'E'
       </isEqual>        
       <isEqual property="codeType" prepend="AND" compareValue="NER">
                 REC_TYPE ='C'
       </isEqual>    
       GROUP BY FLT_TYPE,truck_no,sch_DATE,sch_TIME,AWB_NO) C
        WHERE B.truck_no = C.truck_no AND B.sch_DATE = C.sch_DATE AND B.sch_time = C.sch_time  AND B.FLT_TYPE = C.FLT_TYPE 
          AND B.AWB_NO = C.AWB_NO AND B.HAWB_NO='000000000000000000' AND B.RECV_DATE = C.RECV_DATE

    </select>    
   	
	<select id="examResultsHawbHistory"  parameterClass="cargo.cms.customs.bo.ExamResultsBO" resultClass="cargo.cms.customs.bo.ExamResultsBO">
				
		SELECT 
		HAWB_NO AS hawbNo, REC_TYPE AS recType, decode(rec_type,'E',EXAM_CODE,CONST_CODE) AS constCode, 
		DECODE(rec_type,'E','Y','N') AS exam, CTM_REF_NO AS refNo, 
		nvl(EXAM_REP_PCS,0) AS relPc, nvl(EXAM_REP_WT,0) AS relWt, nvl(EXAM_DET_PCS,0) AS dtnPc, nvl(EXAM_DET_WT,0) AS dtnWt,
		to_char(RECV_DATE, 'DDMONYY HH24:mi:ss') AS recvDate,to_char(LM_DATE, 'DD-MON-YY HH24:mi:ss') AS lmDate, EXAM_REM AS remarks FROM 
		(select * from CST_RECV UNION ALL select * from cst_recv_old_awb) WHERE FLT_TYPE=#flightType# AND FLT_KEY=#flightKey# AND FLT_DATE=#flightDate# AND AWB_NO=#awbNo#
		
   	</select>    
  
   	<select id="examResultsHawb"  parameterClass="cargo.cms.customs.bo.ExamResultsBO" resultClass="cargo.cms.customs.bo.ExamResultsBO">
				
		SELECT 
		HAWB_NO AS hawbNo, REC_TYPE AS recType, decode(rec_type,'E',EXAM_CODE,CONST_CODE) AS constCode, 
		DECODE(rec_type,'E','Y','N') AS exam, CTM_REF_NO AS refNo, 
		nvl(EXAM_REP_PCS,0) AS relPc, nvl(EXAM_REP_WT,0) AS relWt, nvl(EXAM_DET_PCS,0) AS dtnPc, nvl(EXAM_DET_WT,0) AS dtnWt,
		to_char(RECV_DATE, 'DDMONYY HH24:mi:ss') AS recvDate,to_char(LM_DATE, 'DD-MON-YY HH24:mi:ss') AS lmDate, EXAM_REM AS remarks FROM 
		(select * from CST_RECV UNION ALL select * from cst_recv_old_awb) WHERE FLT_TYPE=#flightType# AND FLT_KEY=#flightKey# AND FLT_DATE=#flightDate# AND AWB_NO=#awbNo#
		
   	</select>   
	
	 <select id="examResultsTruckHawb"  parameterClass="cargo.cms.customs.bo.ExamResultsBO" resultClass="cargo.cms.customs.bo.ExamResultsBO">
				
		SELECT 
		HAWB_NO AS hawbNo, REC_TYPE AS recType, decode(rec_type,'E',EXAM_CODE,CONST_CODE) AS constCode, 
		DECODE(rec_type,'E','Y','N') AS exam, CTM_REF_NO AS refNo, 
		nvl(EXAM_REP_PCS,0) AS relPc, nvl(EXAM_REP_WT,0) AS relWt, nvl(EXAM_DET_PCS,0) AS dtnPc, nvl(EXAM_DET_WT,0) AS dtnWt,
		to_char(RECV_DATE, 'DDMONYY HH24:mi:ss') AS recvDate,to_char(LM_DATE, 'DD-MON-YY HH24:mi:ss') AS lmDate, EXAM_REM AS remarks FROM 
		(select * from CST_RECV UNION ALL select * from cst_recv_old_awb) WHERE FLT_TYPE='T' AND truck_No=#truckNo# AND sch_DATE=#schDate# AND sch_time=#schTime# AND AWB_NO=#awbNo#
		
   	</select>   
   	
   	<select id="examResultsTruckHawbHistory"  parameterClass="cargo.cms.customs.bo.ExamResultsBO" resultClass="cargo.cms.customs.bo.ExamResultsBO">
				
		SELECT 
		HAWB_NO AS hawbNo, REC_TYPE AS recType, decode(rec_type,'E',EXAM_CODE,CONST_CODE) AS constCode, 
		DECODE(rec_type,'E','Y','N') AS exam, CTM_REF_NO AS refNo, 
		nvl(EXAM_REP_PCS,0) AS relPc, nvl(EXAM_REP_WT,0) AS relWt, nvl(EXAM_DET_PCS,0) AS dtnPc, nvl(EXAM_DET_WT,0) AS dtnWt,
		to_char(RECV_DATE, 'DDMONYY HH24:mi:ss') AS recvDate,to_char(LM_DATE, 'DD-MON-YY HH24:mi:ss') AS lmDate, EXAM_REM AS remarks FROM 
		(select * from CST_RECV UNION ALL select * from cst_recv_old_awb) WHERE FLT_TYPE='T' AND truck_No=#truckNo# AND sch_DATE=#schDate# AND sch_time=#schTime# AND AWB_NO=#awbNo#
		
   	</select>   
	  	
   	<select id="getfltlistbyuseraccess" parameterClass="cargo.cms.customs.bo.ExamResultsBO" resultClass="cargo.cms.customs.bo.ExamResultsBO">
  				 SELECT CODE AS codeId, CODE_DESC AS codeDesc FROM MAST_CODE_DTL WHERE CODE_TYPE ='FLT_TYPE_IE'
                AND CODE IN (#impFltAccess#,#expFltAccess#,#trkFltAccess#)
	</select>
	
	<select id="getBookingFltListforCCOde" parameterClass="cargo.cms.customs.bo.MaintainConstraintCodesBO" resultClass="cargo.cms.customs.bo.MaintainConstraintCodesBO">
	SELECT fbl.FLT_KEY AS
	flightKey,TO_CHAR(fbl.FLT_DATE,'DDMONYY') AS flightDate,
	PKG_COMMON.get_flt_ata(fbl.FLT_KEY, TO_CHAR(fbl.FLT_DATE,'DDMONYY'),
	'D') AS actTime,
	PKG_COMMON.get_flt_eta(fbl.FLT_KEY, TO_CHAR(fbl.FLT_DATE,'DDMONYY'), 'D') AS estTime
	FROM edi_fbl_shp shp,edi_fbl fbl,FLT_OPR OPR
	WHERE shp.tr_no= fbl.tr_no and fbl.FBL_STATUS = 'P' 
  	AND OPR.FLT_KEY=fbl.FLT_KEY AND OPR.SCH_DATE=FBL.FLT_DATE
  	AND	shp.AWB_NO = #awbNo# 
  	AND	shp.AWB_DATE = #awbDate# ORDER BY OPR.SCH_DATE ASC
	</select>
	
	<select id="mastConstCodeList"  parameterClass="cargo.cms.customs.bo.CCReportBO" resultClass="cargo.cms.customs.bo.CCReportBO">
		select code as constCodeId, priority as priority from mast_constraint_code order by code		
   	</select> 	 		
 
	<select id="ccReportListByFlightImport"  parameterClass="cargo.cms.customs.bo.CCReportBO" resultClass="cargo.cms.customs.bo.CCReportBO">		
SELECT   flt_opr.tr_no AS trNo, flt_opr.flt_key AS flightKey,
         flt_opr.flt_type AS flightType,
         PKG_COMMON.get_flt_ata(flt_opr.FLT_KEY, flt_opr.SCH_DATE, 'A') AS actTime,
         TO_CHAR (flt_opr.sch_date, 'DDMONYY') AS flightDate,
         PKG_COMMON.get_flt_eta(flt_opr.FLT_KEY, flt_opr.SCH_DATE, 'A') AS estTime,
         DECODE(flt_opr.sch_time, NULL, '', SUBSTR(TRIM(TO_CHAR(NVL(flt_opr.sch_time,0),'0000')),0,2)|| ':'|| SUBSTR(TRIM(TO_CHAR(NVL(flt_opr.sch_time,0),'0000')),3,4)) AS schTime,
         cc.awb_no AS awbno, SUBSTR (cc.awb_no, 1, 3) AS awbnopfx,
         SUBSTR (cc.awb_no, 4, 11) AS awbnosfx,
         cc.hawb_no AS hawbno, cc.cc_code AS constcode,
         (SELECT CC_CODE
		  FROM V_CST_VSL_CC_CODE_AWB
		  WHERE flt_key = flt_opr.flt_key
		  AND FLT_DATE  = flt_opr.SCH_DATE AND hawb_no = '000000000000000000'
		  AND AWB_no    = cc.awb_no and ROWNUM =1
		  ) stfsCode,
         cc.ver_no AS verno, 
          nvl(fhawb.HAWB_ORG,imp_car_awb.awb_origin) AS orig,
		  nvl(fhawb.HAWB_DEST,imp_car_awb.awb_dest) AS dest,
         NVL(h.PCS, imp_car_awb.awb_pcs) AS awbpcs,
         NVL(h.wgt, imp_car_awb.awb_wt) AS awbwt,
         NVL(h.PCS, imp_car_shp.manifest_pcs) AS manfpcs,
         NVL(h.wgt, imp_car_shp.manifest_wt) AS manfwt,
         TO_CHAR (cc.recv_date, 'DDMONYY HH24:MI') AS recvdate,
         imp_car_awb.VAL_FOR_SCH_COLL as schCollInd, 
         decode(awb.spl_code1,null,'',awb.spl_code1
         ||decode(awb.spl_code2,null,'',','||awb.spl_code2)||
         decode(awb.spl_code3,null,'',','||awb.spl_code3)||
         decode(awb.spl_code4,null,'',','||awb.spl_code4)||
         decode(awb.spl_code5,null,'',','||awb.spl_code5)||
         decode(awb.spl_code6,null,'',','||awb.spl_code6)||
         decode(awb.spl_code7,null,'',','||awb.spl_code7)||
         decode(awb.spl_code8,null,'',','||awb.spl_code8)||
         decode(awb.spl_code9,null,'',','||awb.spl_code9)) shc,
         decode(cc.hawb_no,'000000000000000000', awb.content , FHAWB.MANIFEST_DESC) "desc"         
    FROM flt_opr 
	INNER JOIN (
			SELECT cstCC.flt_key,cstCC.flt_date,cstCC.hawb_no,cstCC.awb_no,cstCC.CC_CODE , cstCC.RECV_DATE, cstCC.VER_NO ,cstCC.FLT_TYPE FROM v_cst_imp_cc_code_ALL cstCC			
		)cc ON flt_opr.flt_key = cc.flt_key AND flt_opr.sch_date = cc.flt_date
	JOIN mast_constraint_code mCC ON cc.cc_code = mCC.code              
	left join cst_hawb h on cc.awb_no = h.awb_no and cc.hawb_no = h.hawb_no and (h.flt_key is null OR h.flt_key = flt_opr.flt_key and h.flt_date = flt_opr.sch_date)
         INNER JOIN imp_car_shp ON cc.flt_key = imp_car_shp.flt_key
                              AND cc.awb_no = imp_car_shp.awb_no
                              AND cc.flt_date = imp_car_shp.flt_date
         INNER JOIN imp_car_awb ON imp_car_shp.awb_no = imp_car_awb.awb_no
                              AND imp_car_shp.awb_date = imp_car_awb.awb_date
         inner join awb awb on awb.awb_no = imp_car_awb.awb_no
                              AND awb.awb_date = imp_car_awb.awb_date
         left join edi_fhl fhl on fhl.awb_no = awb.awb_no and fhl.awb_date = awb.awb_date
         left join edi_fhl_hawb fhawb on fhawb.tr_no = fhl.tr_no and fhawb.hawb_no = cc.hawb_no
	WHERE flt_opr.flt_type = 'A' AND flt_opr.sch_date BETWEEN #startDate# AND #flightDate#
    	and exists (select null
				  from (select sf.Sub_Function_code VAL
					  from sec_role_sub_function sf
					  join sec_user_role ur on ur.role_name = sf.role_code
					  where sf.Sub_Function_code in ('CST_8_001', 'CST_8_002') and enable_yn = 'Y' and ur.user_id = #userId#) a
				  where (a.VAL = 'CST_8_001' and 
				  			   exists (select NULL from cst_recv where CONST_CODE in ('NF', 'EF') 
							   		  and flt_key = cc.flt_key and flt_date = cc.flt_date and flt_type =cc.flt_type 
									  and awb_no = cc.awb_no and hawb_no = cc.hawb_no))
				  		or (a.VAL = 'CST_8_002' AND
						   	   exists (select NULL from cst_recv where CONST_CODE in ('NH', 'EH', 'EM')
							   		  and flt_key = cc.flt_key and flt_date = cc.flt_date and flt_type = cc.flt_type 
									  and awb_no = cc.awb_no and hawb_no = cc.hawb_no))
				  union all
				  select null
				  from (select count(1) VAL
					  from sec_role_sub_function sf
					  join sec_user_role ur on ur.role_name = sf.role_code
					  where sf.Sub_Function_code in ('CST_8_001', 'CST_8_002') and enable_yn = 'Y' and ur.user_id = #userId#) a
				  where a.VAL = 0
				  )
	<isNotEmpty property="loginCarrier">
		AND	(flt_opr.CARR_CODE = #loginCarrier#
			OR flt_opr.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE = #loginCarrier#))
	</isNotEmpty>
	<isNotEmpty prepend="AND" property="ccSevere">
		(EXISTS(SELECT 1 FROM MAST_CONSTRAINT_CODE WHERE CODE = cc.CC_CODE
				AND PRIORITY &gt; #ccSevere#) or 	cc.CC_CODE is null)	
	</isNotEmpty>		
	<isEqual property="actionTag" prepend="AND" compareValue="searchByFlight">
		flt_opr.FLT_KEY=#flightKey#
	</isEqual>	
	<isEqual property="actionTag" compareValue="searchByCarrCode">
 		<isNotEqual property="carrierCode" compareValue="ALL">
			AND flt_opr.CARR_CODE=NVL(#carrierCode#, flt_opr.CARR_CODE)
		</isNotEqual>	 
	</isEqual>
	<isNotEmpty prepend="AND" property="constCodeOne">
		(TRIM(UPPER(cc.CC_CODE)) = TRIM(UPPER(#constCodeOne#))
		<isNotEmpty prepend="OR" property="constCodeTwo">
			TRIM(UPPER(cc.CC_CODE)) = TRIM(UPPER(#constCodeTwo#))
		</isNotEmpty>
		<isNotEmpty prepend="OR" property="constCodeThree">
			TRIM(UPPER(cc.CC_CODE)) = TRIM(UPPER(#constCodeThree#))
		</isNotEmpty>
		<isNotEmpty prepend="OR" property="constCodeFour">
			TRIM(UPPER(cc.CC_CODE)) = TRIM(UPPER(#constCodeFour#)) 
		</isNotEmpty>
		<isNotEmpty prepend="OR" property="constCodeFive">
			TRIM(UPPER(cc.CC_CODE)) = TRIM(UPPER(#constCodeFive#)) 
		</isNotEmpty>)
	</isNotEmpty>
	<isNotEmpty prepend="AND" property="cnstrPeriod">
		cc.recv_date &lt; (sysdate-(#cnstrPeriod#/24)) AND nvl(mCC.CONSTRAINT,'N') = 'Y'
	</isNotEmpty>
	<isNotEmpty prepend="AND" property="trfType">
		
		<isEqual property="trfType" compareValue="ALL">
 			(EXISTS(SELECT 1 FROM V_DDT_DTL WHERE FLT_KEY = flt_opr.flt_key AND FLT_DATE = flt_opr.sch_date AND AWB_NO= cc.awb_no AND shp_trf_type in ('TT','IF','QT','LD')))
		</isEqual> 		
		
		<isEqual property="trfType" compareValue="TT/IF">
 			(EXISTS(SELECT 1 FROM V_DDT_DTL WHERE FLT_KEY = flt_opr.flt_key AND FLT_DATE = flt_opr.sch_date AND AWB_NO= cc.awb_no AND shp_trf_type in ('TT','IF')))
		</isEqual> 	
			
		<isNotEqual property="trfType" compareValue="ALL">
			<isNotEqual property="trfType" compareValue="TT/IF">
				(EXISTS(SELECT 1 FROM V_DDT_DTL WHERE FLT_KEY = flt_opr.flt_key AND FLT_DATE = flt_opr.sch_date AND AWB_NO= cc.awb_no AND shp_trf_type in (#trfType#)))
			</isNotEqual>
		</isNotEqual>
	</isNotEmpty>
	 	order by cc.recv_date desc, flt_opr.flt_key asc, flt_opr.sch_date asc,  cc.awb_no asc, cc.hawb_no asc		
	</select>
  	
	
	<select id="ccReportListByFlightExport"  parameterClass="cargo.cms.customs.bo.CCReportBO" resultClass="cargo.cms.customs.bo.CCReportBO">
 		select * from (
 		SELECT flt_opr.tr_no AS trNo, a.flt_key AS flightKey, a.flt_type AS flightType,
		       to_char(a.flt_date, 'DDMONYY') AS flightDate,a.flt_key AS impFlightKey, to_char(a.flt_date, 'DDMONYY') AS impFlightDate,
		       pkg_common.get_flt_ata(a.flt_key, a.flt_date, 'D', 'DD') AS actTime,
		       pkg_common.get_flt_eta(a.flt_key, a.flt_date, 'D', 'DD') AS estTime,
		       DECODE(flt_opr.sch_time, NULL, '', SUBSTR(TRIM(TO_CHAR(NVL(flt_opr.sch_time,0),'0000')),0,2)|| ':'|| SUBSTR(TRIM(TO_CHAR(NVL(flt_opr.sch_time,0),'0000')),3,4)) AS schTime,
		       a.awb_no AS awbno, substr(a.awb_no, 1, 3) AS awbnopfx,
		       substr(a.awb_no, 4, 11) AS awbnosfx, a.hawb_no AS hawbno,
		       a.cc_code AS constcode, a.ver_no AS verno, 
		       nvl(fhawb.HAWB_ORG,awb.orig) AS orig,
			   nvl(fhawb.HAWB_DEST,awb.dest) AS dest,
		        nvl(fhawb.hawb_pcs,awb.pcs) AS awbpcs, 
           		nvl(fhawb.hawb_net_wt, awb.wt) AS awbwt,
		      nvl(fhawb.hawb_pcs,b.pman_pcs) AS manfpcs, nvl(fhawb.hawb_net_wt, b.pman_wt) AS manfwt,
		       to_char(a.recv_date, 'DDMONYY HH24:MI') AS recvdate,
		       a.recv_date as recvdateSort,
         decode(awb.spl_code1,null,'',awb.spl_code1
         ||decode(awb.spl_code2,null,'',','||awb.spl_code2)||
         decode(awb.spl_code3,null,'',','||awb.spl_code3)||
         decode(awb.spl_code4,null,'',','||awb.spl_code4)||
         decode(awb.spl_code5,null,'',','||awb.spl_code5)||
         decode(awb.spl_code6,null,'',','||awb.spl_code6)||
         decode(awb.spl_code7,null,'',','||awb.spl_code7)||
         decode(awb.spl_code8,null,'',','||awb.spl_code8)||
         decode(awb.spl_code9,null,'',','||awb.spl_code9)) shc,
         decode(a.hawb_no,'000000000000000000', awb.content , FHAWB.MANIFEST_DESC) "desc"          
		  FROM (SELECT cstCC.flt_key,cstCC.flt_date,cstCC.hawb_no,cstCC.awb_no,cstCC.CC_CODE , cstCC.RECV_DATE, cstCC.VER_NO ,cstCC.FLT_TYPE FROM v_cst_cont_code_ALL cstCC
         	 	UNION
          		SELECT cstVsl.flt_key,cstVsl.flt_date,cstVsl.hawb_no,cstVsl.awb_no,cstVsl.CC_CODE, cstVsl.RECV_DATE , cstVsl.VER_NO , cstVsl.FLT_TYPE FROM V_CST_VSL_CC_CODE_AWB cstVsl
         	 )a 
		  JOIN mast_constraint_code mCC ON a.cc_code = mCC.code    
		  LEFT JOIN exp_pmanifest_awb b ON a.flt_key = b.flt_key AND a.awb_no = b.awb_no AND a.flt_date = b.flt_date
		  LEFT JOIN awb ON a.awb_no = awb.awb_no 
		  LEFT JOIN flt_opr flt_opr ON a.flt_key = flt_opr.flt_key  AND a.flt_date = flt_opr.sch_date AND a.flt_type = flt_opr.flt_type
        left join edi_fhl fhl on fhl.awb_no = b.awb_no and fhl.awb_date = b.awb_date
        left join edi_fhl_hawb fhawb on fhawb.tr_no = fhl.tr_no and fhawb.hawb_no = a.hawb_no
		 WHERE a.flt_type = 'D'
		   AND ((a.flt_date BETWEEN to_date(#startDate#,'ddmonyy') AND to_date(#flightDate#,'ddmonyy')) or
		        (a.flt_date =to_date('01JAN1998','ddmonyyyy') and a.recv_date BETWEEN to_date(#startDate#,'ddmonyy')-1 AND 
		to_date(#flightDate#,'ddmonyy')+1 ))
			and exists (select null
				  from (select sf.Sub_Function_code VAL
					  from sec_role_sub_function sf
					  join sec_user_role ur on ur.role_name = sf.role_code
					  where sf.Sub_Function_code in ('CST_8_001', 'CST_8_002') and enable_yn = 'Y' and ur.user_id = #userId#) a
				  where (a.VAL = 'CST_8_001' and 
				  			   exists (select NULL from cst_recv where CONST_CODE in ('NF', 'EF') 
							   		  and flt_key = a.flt_key and flt_date = a.flt_date and flt_type = decode(a.flt_type,'D','E','A') 
									  and awb_no = a.awb_no and hawb_no = a.hawb_no))
				  		or (a.VAL = 'CST_8_002' AND
						   	   exists (select NULL from cst_recv where CONST_CODE in ('NH', 'EH', 'EM')
							   		  and flt_key = a.flt_key and flt_date = a.flt_date and flt_type = decode(a.flt_type,'D','E','A') 
									  and awb_no = a.awb_no and hawb_no = a.hawb_no))
				  union all
				  select null
				  from (select count(1) VAL
					  from sec_role_sub_function sf
					  join sec_user_role ur on ur.role_name = sf.role_code
					  where sf.Sub_Function_code in ('CST_8_001', 'CST_8_002') and enable_yn = 'Y' and ur.user_id = #userId#) a
				  where a.VAL = 0
				  )
		 <isNotEmpty prepend="AND" property="ccSevere">
		       (EXISTS(SELECT 1 FROM MAST_CONSTRAINT_CODE
		                WHERE CODE = a.CC_CODE
		                  AND PRIORITY &gt; #ccSevere#)
		                  or a.CC_CODE is null)
		 </isNotEmpty>
		 <isEqual property="actionTag" prepend="AND" compareValue="searchByFlight">
		       a.FLT_KEY=#flightKey#
		 </isEqual>
		 <isEqual property="actionTag" compareValue="searchByCarrCode">
		    <isNotEqual property="carrierCode" compareValue="ALL">
		     	<isNotEmpty property="carrierCode">
		        	AND a.carr_code =NVL(#carrierCode#, a.CARR_CODE)
		        </isNotEmpty>
		    </isNotEqual>
		 </isEqual>
		 <isNotEmpty prepend="AND" property="constCodeOne">
		     TRIM(UPPER(a.CC_CODE)) = TRIM(UPPER(#constCodeOne#))
		     <isNotEmpty prepend="OR" property="constCodeTwo">
		        TRIM(UPPER(a.CC_CODE)) = TRIM(UPPER(#constCodeTwo#))
		     </isNotEmpty>
		     <isNotEmpty prepend="OR" property="constCodeThree">
		        TRIM(UPPER(a.CC_CODE)) = TRIM(UPPER(#constCodeThree#))
		     </isNotEmpty>
		     <isNotEmpty prepend="OR" property="constCodeFour">
		        TRIM(UPPER(a.CC_CODE)) = TRIM(UPPER(#constCodeFour#))
		     </isNotEmpty>
		     <isNotEmpty prepend="OR" property="constCodeFive">
		        TRIM(UPPER(a.CC_CODE)) = TRIM(UPPER(#constCodeFive#))
		     </isNotEmpty>
		  </isNotEmpty>
		  <isNotEmpty prepend="AND" property="cnstrPeriod">
		     a.recv_date &lt; (sysdate-(#cnstrPeriod#/24))  AND nvl(mCC.CONSTRAINT,'N') = 'Y'
		 </isNotEmpty>
		  <isNotEmpty prepend="AND" property="trfType">
		
		<isEqual property="trfType" compareValue="ALL">
 			(EXISTS(SELECT 1 FROM V_DDT_DTL WHERE FLT_KEY = a.flt_key AND FLT_DATE = a.flt_date AND AWB_NO= a.awb_no AND shp_trf_type in ('TT','IF','QT','LD')))
		</isEqual> 		
		
		<isEqual property="trfType" compareValue="TT/IF">
 			(EXISTS(SELECT 1 FROM V_DDT_DTL WHERE FLT_KEY = a.flt_key AND FLT_DATE = a.flt_date AND AWB_NO= a.awb_no AND shp_trf_type in ('TT','IF')))
		</isEqual> 	
			
		<isNotEqual property="trfType" compareValue="ALL">
			<isNotEqual property="trfType" compareValue="TT/IF">
				(EXISTS(SELECT 1 FROM V_DDT_DTL WHERE FLT_KEY = a.flt_key AND FLT_DATE = a.flt_date AND AWB_NO= a.awb_no AND shp_trf_type in (#trfType#)))
			</isNotEqual>
		</isNotEqual>
	</isNotEmpty>
		<isEmpty property="carrierCode">
			<isNotEmpty property="loginCarrier">
				AND	(a.CARR_CODE = #loginCarrier#
				OR a.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE = #loginCarrier#))
			</isNotEmpty>
		</isEmpty>
		<!--  <isNotEmpty property="flightKey">
		UNION
       SELECT '1' AS trno, b.flt_key AS flightKey, b.flt_type AS flightType,
		       to_char(b.flt_date, 'DDMONYY') AS flightDate,a.flt_key AS impFlightKey, to_char(a.flt_date, 'DDMONYY') AS impFlightDate,
		       pkg_common.get_flt_ata(b.flt_key, b.flt_date, 'E', 'DD') AS actTime,
		       pkg_common.get_flt_eta(b.flt_key, b.flt_date, 'E', 'DD') AS estTime,
		       DECODE(flt_opr.sch_time, NULL, '', SUBSTR(TRIM(TO_CHAR(NVL(flt_opr.sch_time,0),'0000')),0,2)|| ':'|| SUBSTR(TRIM(TO_CHAR(NVL(flt_opr.sch_time,0),'0000')),3,4)) AS schTime,
		       a.awb_no AS awbno, substr(a.awb_no, 1, 3) AS awbnopfx,
		       substr(a.awb_no, 4, 11) AS awbnosfx, a.hawb_no AS hawbno,
		       a.cc_code AS constcode, a.ver_no AS verno, 
		       nvl(fhawb.HAWB_ORG,awb.orig) AS orig,
			   nvl(fhawb.HAWB_DEST,awb.dest) AS dest,
		       nvl(awb.pcs, 0) AS awbpcs, nvl(awb.wt, 0) AS awbwt,
		       nvl(b.pman_pcs, 0) AS manfpcs, nvl(b.pman_wt, 0) AS manfwt,
		       to_char(a.recv_date, 'DDMONYY HH24:MI') AS recvdate,
		       a.recv_date as recvdateSort,
         decode(awb.spl_code1,null,'',awb.spl_code1
         ||decode(awb.spl_code2,null,'',','||awb.spl_code2)||
         decode(awb.spl_code3,null,'',','||awb.spl_code3)||
         decode(awb.spl_code4,null,'',','||awb.spl_code4)||
         decode(awb.spl_code5,null,'',','||awb.spl_code5)||
         decode(awb.spl_code6,null,'',','||awb.spl_code6)||
         decode(awb.spl_code7,null,'',','||awb.spl_code7)||
         decode(awb.spl_code8,null,'',','||awb.spl_code8)||
         decode(awb.spl_code9,null,'',','||awb.spl_code9)) shc,
         decode(a.hawb_no,'000000000000000000', awb.content , FHAWB.MANIFEST_DESC) "desc"
		  FROM (SELECT cstCC.flt_key,cstCC.flt_date,cstCC.hawb_no,cstCC.awb_no,cstCC.CC_CODE , cstCC.RECV_DATE, cstCC.VER_NO ,cstCC.FLT_TYPE FROM v_cst_cont_code_ALL cstCC
         	 	UNION
          		SELECT cstVsl.flt_key,cstVsl.flt_date,cstVsl.hawb_no,cstVsl.awb_no,cstVsl.CC_CODE, cstVsl.RECV_DATE , cstVsl.VER_NO , cstVsl.FLT_TYPE FROM V_CST_VSL_CC_CODE_AWB cstVsl
         	 ) a
		  JOIN mast_constraint_code mCC ON a.cc_code = mCC.code   
      	  JOIN awb awb  ON a.awb_no = awb.awb_no 
		  JOIN exp_pmanifest_awb b   ON  a.awb_no = b.awb_no  AND awb.awb_date = b.awb_date and b.FLT_KEY=#flightKey#		  
		  JOIN flt_opr flt_opr
        ON b.flt_key = flt_opr.flt_key
        AND b.flt_date = flt_opr.sch_date
          left join edi_fhl fhl on fhl.awb_no = b.awb_no and fhl.awb_date = b.awb_date
           left join edi_fhl_hawb fhawb on fhawb.tr_no = fhl.tr_no and fhawb.hawb_no = a.hawb_no
     WHERE awb.awb_type='T' AND ((a.flt_date BETWEEN to_date(#startDate#,'ddmonyy') AND 
		to_date(#flightDate#,'ddmonyy')) or
		        (a.flt_date =to_date('01JAN1998','ddmonyyyy') and a.recv_date BETWEEN to_date(#startDate#,'ddmonyy')-1 AND 
		to_date(#flightDate#,'ddmonyy')+1 )) 
		UNION
       SELECT '1' AS trno, b.flt_key AS flightKey, flt_opr.flt_type AS flightType,
		       to_char(b.flt_date, 'DDMONYY') AS flightDate,a.flt_key AS impFlightKey, to_char(a.flt_date, 'DDMONYY') AS impFlightDate,
		       pkg_common.get_flt_ata(b.flt_key, b.flt_date, 'E', 'DD') AS actTime,
		       pkg_common.get_flt_eta(b.flt_key, b.flt_date, 'E', 'DD') AS estTime,
		       DECODE(flt_opr.sch_time, NULL, '', SUBSTR(TRIM(TO_CHAR(NVL(flt_opr.sch_time,0),'0000')),0,2)|| ':'|| SUBSTR(TRIM(TO_CHAR(NVL(flt_opr.sch_time,0),'0000')),3,4)) AS schTime,
		       a.awb_no AS awbno, substr(a.awb_no, 1, 3) AS awbnopfx,
		       substr(a.awb_no, 4, 11) AS awbnosfx, a.hawb_no AS hawbno,
		       a.cc_code AS constcode, a.ver_no AS verno, 
		       nvl(fhawb.HAWB_ORG,awb.orig) AS orig,
			   nvl(fhawb.HAWB_DEST,awb.dest) AS dest,		       
		       nvl(awb.pcs, 0) AS awbpcs, nvl(awb.wt, 0) AS awbwt,
		       nvl(b.bulk_pcs, 0)+nvl(b.ppk_pcs, 0) AS manfpcs, nvl(b.bulk_wt, 0)+nvl(b.ppk_wt, 0) AS manfwt,
		       to_char(a.recv_date, 'DDMONYY HH24:MI') AS recvdate,
		       a.recv_date as recvdateSort,
         decode(awb.spl_code1,null,'',awb.spl_code1
         ||decode(awb.spl_code2,null,'',','||awb.spl_code2)||
         decode(awb.spl_code3,null,'',','||awb.spl_code3)||
         decode(awb.spl_code4,null,'',','||awb.spl_code4)||
         decode(awb.spl_code5,null,'',','||awb.spl_code5)||
         decode(awb.spl_code6,null,'',','||awb.spl_code6)||
         decode(awb.spl_code7,null,'',','||awb.spl_code7)||
         decode(awb.spl_code8,null,'',','||awb.spl_code8)||
         decode(awb.spl_code9,null,'',','||awb.spl_code9)) shc,
         decode(a.hawb_no,'000000000000000000', awb.content , FHAWB.MANIFEST_DESC) "desc"
		  FROM (SELECT cstCC.flt_key,cstCC.flt_date,cstCC.hawb_no,cstCC.awb_no,cstCC.CC_CODE , cstCC.RECV_DATE, cstCC.VER_NO ,cstCC.FLT_TYPE FROM v_cst_cont_code_ALL cstCC
         	 	UNION
          		SELECT cstVsl.flt_key,cstVsl.flt_date,cstVsl.hawb_no,cstVsl.awb_no,cstVsl.CC_CODE, cstVsl.RECV_DATE , cstVsl.VER_NO , cstVsl.FLT_TYPE FROM V_CST_VSL_CC_CODE_AWB cstVsl
         	 ) a
		  JOIN mast_constraint_code mCC ON a.cc_code = mCC.code   
      JOIN awb awb  ON a.awb_no = awb.awb_no 
		  JOIN exp_pman_tarmac_awb b   ON  a.awb_no = b.awb_no  AND awb.awb_date = b.awb_date and b.FLT_KEY=#flightKey# 
		  JOIN flt_opr flt_opr
        ON b.flt_key = flt_opr.flt_key
        AND b.flt_date = flt_opr.sch_date
         left join edi_fhl fhl on fhl.awb_no = b.awb_no and fhl.awb_date = b.awb_date
         left join edi_fhl_hawb fhawb on fhawb.tr_no = fhl.tr_no and fhawb.hawb_no = a.hawb_no
     WHERE awb.awb_type='T' AND ((a.flt_date BETWEEN to_date(#startDate#,'ddmonyy') AND 
		to_date(#flightDate#,'ddmonyy')) or
		        (a.flt_date =to_date('01JAN1998','ddmonyyyy') and a.recv_date BETWEEN to_date(#startDate#,'ddmonyy')-1 AND 
		to_date(#flightDate#,'ddmonyy')+1 )) 
	</isNotEmpty>	 -->
	) order by  recvdateSort desc, flightKey asc, flightDate asc,  awbno asc, hawbno asc
   	</select> 
   	
   	
<select id="ccReportListByFlightTruck"  parameterClass="cargo.cms.customs.bo.CCReportBO" resultClass="cargo.cms.customs.bo.CCReportBO">
	
SELECT   trk_Flt.truck_no AS truckNo,
         TO_CHAR (trk_Flt.TRUCK_FLT_DATE, 'DDMONYY') AS schDate,
         trk_Flt.sch_time AS schTime, 
         shp_data.awb_no AS awbno, SUBSTR (shp_data.awb_no, 1, 3) AS awbnopfx,
         SUBSTR (shp_data.awb_no, 4, 11) AS awbnosfx,
         shp_data.hawb_no AS hawbno, cc.cc_code AS constcode,
         cc.ver_no AS verno,
         nvl(fhawb.HAWB_ORG,shp_data.orig) AS orig,
		 nvl(fhawb.HAWB_DEST,shp_data.dest) AS dest,
         shp_data.HAWB_PCS AS awbpcs,
         shp_data.HAWB_WT AS awbwt,
         shp_data.TRK_MANF_PCS AS manfpcs,
         shp_data.TRK_MANF_Wt AS manfwt,
         TO_CHAR (cc.recv_date, 'DDMONYY HH24:MI') AS recvdate,
         decode(awb.spl_code1,null,'',awb.spl_code1
         ||decode(awb.spl_code2,null,'',','||awb.spl_code2)||
         decode(awb.spl_code3,null,'',','||awb.spl_code3)||
         decode(awb.spl_code4,null,'',','||awb.spl_code4)||
         decode(awb.spl_code5,null,'',','||awb.spl_code5)||
         decode(awb.spl_code6,null,'',','||awb.spl_code6)||
         decode(awb.spl_code7,null,'',','||awb.spl_code7)||
         decode(awb.spl_code8,null,'',','||awb.spl_code8)||
         decode(awb.spl_code9,null,'',','||awb.spl_code9)) shc,
         decode(shp_data.hawb_no,'000000000000000000', awb.content , FHAWB.MANIFEST_DESC) "desc"         
    FROM ITM_TRK_MANF_HD trk_Flt 
  inner join ( SELECT A.tr_no, A.AWB_NO,A.AWB_DATE,B.HAWB_NO, B.TRK_MANF_PCS, B.TRK_MANF_WT , HAWB_PCS, HAWB_WT  , A.dest ,A.orig
                        FROM ITM_TRK_MANF_SHP A, ITM_TRK_MANF_SHP_HAWB B
                        WHERE A.tr_no = B.tr_no and A.DOC_LINE_NO = B.DTL_DOC_LINE_NO
                        UNION
                        SELECT A.tr_no, A.AWB_NO,A.AWB_DATE,LPAD('0',18,'0') HAWB_NO, A.TRK_MANF_PCS, A.TRK_MANF_WT     , null , null  , A.dest , A.orig
                        FROM ITM_TRK_MANF_SHP A ) shp_data on  shp_data.tr_no = trk_Flt.tr_no
      
  JOIN V_CST_TRUCK_CC_CODE_ALL cc ON trk_Flt.truck_No = cc.truck_No
                                   AND trk_Flt.TRUCK_FLT_DATE = cc.sch_date  AND trk_Flt.sch_TIME = cc.sch_TIME and  cc.hawb_no = shp_data.hawb_no 
    inner join awb awb on awb.awb_no = shp_data.awb_no
                              AND awb.awb_date = shp_data.awb_date
        left join edi_fhl fhl on fhl.awb_no = awb.awb_no and fhl.awb_date = awb.awb_date
        left join edi_fhl_hawb fhawb on fhawb.tr_no = fhl.tr_no and fhawb.hawb_no = shp_data.hawb_no
	WHERE   trk_Flt.status not in ('VOID')  and trk_Flt.TRUCK_FLT_DATE BETWEEN #startDate# AND #flightDate#
        
        <isNotEmpty prepend="AND" property="truckNo">
           trk_Flt.truck_No = #truckNo#
        </isNotEmpty>	
	<isNotEmpty prepend="AND" property="ccSevere">
		(EXISTS(SELECT 1 FROM MAST_CONSTRAINT_CODE WHERE CODE = cc.CC_CODE
				AND PRIORITY &gt; #ccSevere#) or 	cc.CC_CODE is null)	
	</isNotEmpty>	
	<isNotEmpty prepend="AND" property="constCodeOne">
		(TRIM(UPPER(cc.CC_CODE)) = TRIM(UPPER(#constCodeOne#))
		<isNotEmpty prepend="OR" property="constCodeTwo">
			TRIM(UPPER(cc.CC_CODE)) = TRIM(UPPER(#constCodeTwo#))
		</isNotEmpty>
		<isNotEmpty prepend="OR" property="constCodeThree">
			TRIM(UPPER(cc.CC_CODE)) = TRIM(UPPER(#constCodeThree#))
		</isNotEmpty>
		<isNotEmpty prepend="OR" property="constCodeFour">
			TRIM(UPPER(cc.CC_CODE)) = TRIM(UPPER(#constCodeFour#)) 
		</isNotEmpty>
		<isNotEmpty prepend="OR" property="constCodeFive">
			TRIM(UPPER(cc.CC_CODE)) = TRIM(UPPER(#constCodeFive#)) 
		</isNotEmpty>)
	</isNotEmpty>
	<isNotEmpty prepend="AND" property="cnstrPeriod">
		cc.recv_date &lt; (sysdate-(#cnstrPeriod#/24))
	</isNotEmpty>
	 ORDER BY  cc.recv_date desc,  trk_Flt.truck_no asc, trk_Flt.TRUCK_FLT_DATE asc,  shp_data.awb_no asc, shp_data.hawb_no asc     
	</select>
   		
   	 <parameterMap id="ccReportByAWB" class="map" >
	               
            <parameter property="AWBNO"  	jdbcType="VARCHAR"      	javaType="java.lang.String"      								mode="INOUT"/>
            <parameter property="ORIG" 		jdbcType="VARCHAR"        	javaType="java.lang.String"       	nullValue="NO_ENTRY"		mode="OUT"/>
            <parameter property="DEST" 		jdbcType="VARCHAR"      	javaType="java.lang.String"      	nullValue="NO_ENTRY"		mode="OUT"/>
            <parameter property="AWBPCS" 	jdbcType="VARCHAR"          javaType="java.lang.String"       	nullValue="NO_ENTRY"		mode="OUT"/>
            <parameter property="AWBWT" 	jdbcType="VARCHAR"     		javaType="java.lang.String"      	nullValue="NO_ENTRY"		mode="OUT"/>
            <parameter property="MANPCS" 	jdbcType="VARCHAR"       	javaType="java.lang.String"   		nullValue="NO_ENTRY"		mode="OUT"/>
            <parameter property="MANWT" 	jdbcType="VARCHAR"       	javaType="java.lang.String"      	nullValue="NO_ENTRY"		mode="OUT"/>
            <parameter property="FLTKEY" 	jdbcType="VARCHAR"       	javaType="java.lang.String"      	nullValue="NO_ENTRY"		mode="IN"/>
            <parameter property="FLTDATE" 	jdbcType="VARCHAR"       	javaType="java.lang.String"	      	nullValue="NO_ENTRY"		mode="IN"/>
            <parameter property="FLTTYPE" 	jdbcType="VARCHAR"       	javaType="java.lang.String"      	nullValue="NO_ENTRY"		mode="IN"/>
            <parameter property="CCCODE" 	jdbcType="VARCHAR"       	javaType="java.lang.String"      	nullValue="NO_ENTRY"		mode="OUT"/>
            <parameter property="HAWBNO" 	jdbcType="VARCHAR"       	javaType="java.lang.String"      	nullValue="NO_ENTRY"		mode="INOUT"/>
            <parameter property="RECVDATE" 	jdbcType="VARCHAR"       	javaType="java.lang.String"     	nullValue="NO_ENTRY"		mode="OUT"/>
            
      </parameterMap>
	  <procedure id="ccReportListByAWB" parameterMap="ccReportByAWB">
            { call PKG_CST.CONSTRAINT_CODE_SEARCH(?,?,?,?,?,?,?,?,?,?,?,?,?)  }
      </procedure>
   	<select  id="getDetailsForCCReportSP"  parameterClass="cargo.cms.customs.bo.CCReportBO" resultClass="cargo.cms.customs.bo.CCReportBO">
	  SELECT R.FLT_TYPE AS flightType,
			NVL(FLT_OPR.CARR_CODE,SUBSTR(R.FLT_KEY,1,2)) AS carrCode,
			R.FLT_KEY AS flightKey,
			to_char(R.FLT_DATE, 'DDMONYY') AS flightDate,
			R.AWB_NO AS awbNo,
			TO_CHAR(R.AWB_DATE,'DDMONYY') AS awbDate,
			SUBSTR(R.AWB_NO,1,3)||'-'||SUBSTR(R.AWB_NO,4) awbNoDisp , R.HAWB_NO AS hawbNo, R.VER_NO AS verNo, 
			R.REF_NO AS refNo, R.CC_CODE AS constCode, R.LM_USER_ID AS lastUpdatedUserId, 
			to_char(R.LM_DATE, 'DDMONYY HH24:mi') AS lastUpdatedDate, R.VER_NO - 1 AS lastUpdatedVersion, 
			FLT_OPR.TR_NO AS trNo, NVL(FLT_OPR.SCH_DATE,R.FLT_DATE) AS schDate, 
			PKG_COMMON.get_flt_ata(flt_opr.FLT_KEY, flt_opr.SCH_DATE, FLT_OPR.FLT_TYPE) AS actTime,
			 DECODE(flt_opr.sch_time, NULL, '', SUBSTR(TRIM(TO_CHAR(NVL(flt_opr.sch_time,0),'0000')),0,2)|| ':'|| SUBSTR(TRIM(TO_CHAR(NVL(flt_opr.sch_time,0),'0000')),3,4)) AS schTime,
			NVL(FLT_OPR.ACT_DATE,R.FLT_DATE) AS arrivalDate, 
			NVL(FLT_OPR.EST_DATE,R.FLT_DATE) AS estimatedDate, 
			to_char(NVL(FLT_OPR.SCH_DATE,R.FLT_DATE), 'DD') AS dayOfSchDate, 
			(case when flt_opr.act_time is not null then PKG_COMMON.get_flt_ata(FLT_OPR.FLT_KEY, 
			FLT_OPR.SCH_DATE,FLT_OPR.FLT_TYPE)
			else
			PKG_COMMON.get_flt_eta(FLT_OPR.FLT_KEY, FLT_OPR.SCH_DATE,FLT_OPR.FLT_TYPE)
			end) as estTime,
			 TO_CHAR (R.recv_date, 'DDMONYY HH24:MI') AS recvdate,
		 ica.VAL_FOR_SCH_COLL as schCollInd, 
         decode(awb.spl_code1,null,'',awb.spl_code1
         ||decode(awb.spl_code2,null,'',','||awb.spl_code2)||
         decode(awb.spl_code3,null,'',','||awb.spl_code3)||
         decode(awb.spl_code4,null,'',','||awb.spl_code4)||
         decode(awb.spl_code5,null,'',','||awb.spl_code5)||
         decode(awb.spl_code6,null,'',','||awb.spl_code6)||
         decode(awb.spl_code7,null,'',','||awb.spl_code7)||
         decode(awb.spl_code8,null,'',','||awb.spl_code8)||
         decode(awb.spl_code9,null,'',','||awb.spl_code9)) shc,
         decode(R.HAWB_NO,'000000000000000000', awb.content , FHAWB.MANIFEST_DESC) "desc"  
	   FROM 
	   (SELECT cstCC.flt_key,cstCC.flt_date,cstCC.hawb_no,cstCC.awb_no,cstCC.awb_date,cstCC.CC_CODE , cstCC.RECV_DATE, cstCC.VER_NO ,cstCC.FLT_TYPE , LM_DATE , lm_user_id, ref_no FROM v_cst_cont_code_ALL cstCC
         	 	UNION
          		SELECT cstVsl.flt_key,cstVsl.flt_date,cstVsl.hawb_no,cstVsl.awb_no,cstVsl.awb_date,cstVsl.CC_CODE, cstVsl.RECV_DATE , cstVsl.VER_NO , cstVsl.FLT_TYPE , LM_DATE ,lm_user_id, ref_no FROM V_CST_VSL_CC_CODE_AWB cstVsl
         	 ) R
		LEFT JOIN FLT_OPR ON R.FLT_KEY = FLT_OPR.FLT_KEY AND R.FLT_DATE = FLT_OPR.SCH_DATE AND FLT_OPR.FLT_TYPE =R.FLT_TYPE
		LEFT join (SELECT * FROM (SELECT *  FROM AWB  WHERE AWB_NO= #awbNo# ORDER BY AWB_DATE DESC ) WHERE ROWNUM=1 ) awb on awb.awb_no = r.awb_no
        left join edi_fhl fhl on fhl.awb_no = awb.awb_no and fhl.awb_date = awb.awb_date
        LEFT JOIN IMP_CAR_AWB ica ON ica.awb_no = awb.awb_no and ica.awb_date = awb.awb_date
        left join edi_fhl_hawb fhawb on fhawb.tr_no = fhl.tr_no and fhawb.hawb_no = r.hawb_no
			WHERE R.AWB_NO = #awbNo# AND R.AWB_DATE    = NVL(awb.AWB_DATE,R.AWB_DATE)
			and exists (select null
				  from (select sf.Sub_Function_code VAL
					  from sec_role_sub_function sf
					  join sec_user_role ur on ur.role_name = sf.role_code
					  where sf.Sub_Function_code in ('CST_8_001', 'CST_8_002') and enable_yn = 'Y' and ur.user_id = #userId#) a
				  where (a.VAL = 'CST_8_001' and 
				  			   exists (select NULL from cst_recv where CONST_CODE in ('NF', 'EF') 
							   		  and flt_key = R.flt_key and flt_date = R.flt_date and flt_type = DECODE(R.flt_type,'A','I','D','E','T') 
									  and awb_no = R.awb_no and hawb_no = R.hawb_no))
				  		or (a.VAL = 'CST_8_002' AND
						   	   exists (select NULL from cst_recv where CONST_CODE in ('NH', 'EH', 'EM')
							   		  and flt_key = R.flt_key and flt_date = R.flt_date and flt_type = DECODE(R.flt_type,'A','I','D','E','T') 
									  and awb_no = R.awb_no and hawb_no = R.hawb_no))
				  union all
				  select null
				  from (select count(1) VAL
					  from sec_role_sub_function sf
					  join sec_user_role ur on ur.role_name = sf.role_code
					  where sf.Sub_Function_code in ('CST_8_001', 'CST_8_002') and enable_yn = 'Y' and ur.user_id = #userId#) a
				  where a.VAL = 0
				  )  
			<isNotEmpty prepend="AND" property="ccSevere">
				(EXISTS(SELECT 1 FROM MAST_CONSTRAINT_CODE WHERE CODE = R.CC_CODE
						AND PRIORITY &gt; #ccSevere#) or 	R.CC_CODE is null)	
			</isNotEmpty>	
			<isNotEmpty prepend="AND" property="constCodeOne">
				(TRIM(UPPER(R.CC_CODE)) = TRIM(UPPER(#constCodeOne#))
				<isNotEmpty prepend="OR" property="constCodeTwo">
					TRIM(UPPER(R.CC_CODE)) = TRIM(UPPER(#constCodeTwo#))
				</isNotEmpty>
				<isNotEmpty prepend="OR" property="constCodeThree">
					TRIM(UPPER(R.CC_CODE)) = TRIM(UPPER(#constCodeThree#))
				</isNotEmpty>
				<isNotEmpty prepend="OR" property="constCodeFour">
					TRIM(UPPER(R.CC_CODE)) = TRIM(UPPER(#constCodeFour#)) 
				</isNotEmpty>
				<isNotEmpty prepend="OR" property="constCodeFive">
					TRIM(UPPER(R.CC_CODE)) = TRIM(UPPER(#constCodeFive#)) 
				</isNotEmpty>)
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="cnstrPeriod">
				R.recv_date &lt; (sysdate-(#cnstrPeriod#/24))
			</isNotEmpty>	  
			order by R.recv_date desc , R.FLT_KEY asc, R.FLT_DATE asc,  R.AWB_NO asc, R.HAWB_NO asc  
	</select>
	
   	<select id="ccReportHistoryList"  parameterClass="cargo.cms.customs.bo.CCReportBO" resultClass="cargo.cms.customs.bo.CCReportBO">				
		SELECT 
		NVL(HAWB_NO,'000000000000000000') AS hawbNo, REC_TYPE AS recType, decode(rec_type,'E',EXAM_CODE,CONST_CODE) AS constCode, 
		to_char(RECV_DATE, 'DDMONYY HH24:mi:ss') AS recvDate, EXAM_REM AS remarks 
		FROM
		 (SELECT * FROM CST_RECV
		      UNION ALL
		    SELECT * FROM cst_recv_old_awb
		  ) recv
		left join flt_opr opr ON  STFS_FLT_KEY  = recv.FLT_KEY AND  STFS_FLT_DATE  = recv.FLT_DATE 
		WHERE recv.FLT_TYPE=#histFltType# AND  nvl(opr.FLT_KEY,recv.FLT_KEY) =#histFltKey# AND nvl(opr.sch_date,recv.FLT_DATE) = #histFltDate# AND AWB_NO=#awbNo# AND HAWB_NO=#hawbNo# 
		order by HAWB_NO,RECV_DATE desc
   	</select>   	
   	
   	<select id="ccReportTruckHistoryList"  parameterClass="cargo.cms.customs.bo.CCReportBO" resultClass="cargo.cms.customs.bo.CCReportBO">
				
		SELECT 
		NVL(HAWB_NO,'000000000000000000') AS hawbNo, REC_TYPE AS recType, decode(rec_type,'E',EXAM_CODE,CONST_CODE) AS constCode, 
		to_char(RECV_DATE, 'DDMONYY HH24:mi:ss') AS recvDate, EXAM_REM AS remarks 
		FROM 
		CST_RECV WHERE FLT_TYPE='T' AND TRUCK_NO=#histTruckNo# AND sch_DATE=#histSchDate# AND sch_time=#histSchTime# AND AWB_NO=#awbNo# AND HAWB_NO=#hawbNo# 
		order by HAWB_NO,RECV_DATE desc
   	</select>   	
   	
	<select id="getAtaEtd"  parameterClass="cargo.cms.customs.bo.MaintainConstraintCodesBO" resultClass="cargo.cms.customs.bo.MaintainConstraintCodesBO">
		
	select 
			SCH_DATE AS schDate,
			ACT_DATE AS arrivalDate,
			EST_DATE AS estimatedDate,		
			<isEqual property="flightType" compareValue="E">
	            PKG_COMMON.get_flt_ata(#flightKey#, #flightDate#, 'D') AS actTime,
	            PKG_COMMON.get_flt_eta(#flightKey#, #flightDate#, 'D') AS estTime 
		   </isEqual>    
		   <isEqual property="flightType" compareValue="I">
		        PKG_COMMON.get_flt_ata(#flightKey#, #flightDate#, 'A') AS actTime,
		        PKG_COMMON.get_flt_eta(#flightKey#, #flightDate#, 'A') AS estTime 
		   </isEqual>   
		   <isEqual property="flightType" compareValue="T">
		        PKG_COMMON.get_flt_ata(#flightKey#, #flightDate#, 'T') AS actTime,
		        PKG_COMMON.get_flt_eta(#flightKey#, #flightDate#, 'T') AS estTime 
	       </isEqual>   
	       <isEqual property="flightType" compareValue="N">
	            PKG_COMMON.get_flt_ata(#flightKey#, #flightDate#, 'D') AS actTime,
	            PKG_COMMON.get_flt_eta(#flightKey#, #flightDate#, 'D') AS estTime 
		   </isEqual>    
		   <isEqual property="flightType" compareValue="S">
		        PKG_COMMON.get_flt_ata(#flightKey#, #flightDate#, 'A') AS actTime,
		        PKG_COMMON.get_flt_eta(#flightKey#, #flightDate#, 'A') AS estTime 
		   </isEqual>            		
			from flt_opr  where FLT_KEY=#flightKey# AND SCH_DATE=#flightDate#
	
				     <isEqual property="flightType" prepend="AND" compareValue="I">
			                FLT_TYPE = 'A'
			         </isEqual>

			         <isEqual property="flightType" prepend="AND" compareValue="E">
			                FLT_TYPE = 'D'
			         </isEqual> 
			         <isEqual property="flightType" prepend="AND" compareValue="T">
			                FLT_TYPE = 'T'
			         </isEqual>  
   	</select>     	
	
	<select id="getAtaEtdCCReport"  parameterClass="cargo.cms.customs.bo.CCReportBO" resultClass="cargo.cms.customs.bo.CCReportBO">
	select 
			SCH_DATE AS schDate,
			ACT_DATE AS arrivalDate,
			EST_DATE AS estimatedDate,		
			<isEqual property="histFltType" compareValue="E">
	            PKG_COMMON.get_flt_ata(#histFltKey#, #histFltDate#, 'D') AS actTime,
	            PKG_COMMON.get_flt_eta(#histFltKey#, #histFltDate#, 'D') AS estTime 
		   </isEqual>    
		   <isEqual property="histFltType" compareValue="I">
		        PKG_COMMON.get_flt_ata(#histFltKey#, #histFltDate#, 'A') AS actTime,
		        PKG_COMMON.get_flt_eta(#histFltKey#, #histFltDate#, 'A') AS estTime 
		   </isEqual>   
		   <isEqual property="histFltType" compareValue="T">
		        PKG_COMMON.get_flt_ata(#histFltKey#, #histFltDate#, 'T') AS actTime,
		        PKG_COMMON.get_flt_eta(#histFltKey#, #histFltDate#, 'T') AS estTime 
	       </isEqual>   
	       <isEqual property="flightType" compareValue="N">
	            PKG_COMMON.get_flt_ata(#flightKey#, #flightDate#, 'D') AS actTime,
	            PKG_COMMON.get_flt_eta(#flightKey#, #flightDate#, 'D') AS estTime 
		   </isEqual>    
		   <isEqual property="flightType" compareValue="S">
		        PKG_COMMON.get_flt_ata(#flightKey#, #flightDate#, 'A') AS actTime,
		        PKG_COMMON.get_flt_eta(#flightKey#, #flightDate#, 'A') AS estTime 
		   </isEqual>              
	       from flt_opr  where FLT_KEY=#histFltKey# AND SCH_DATE=#histFltDate#
	
				     <isEqual property="histFltType" prepend="AND" compareValue="I">
			                FLT_TYPE = 'A'
			         </isEqual>

			         <isEqual property="histFltType" prepend="AND" compareValue="E">
			                FLT_TYPE = 'D'
			         </isEqual>  
		
   	</select> 	
	<select id="checkRecAlreadyExists" parameterClass="cargo.cms.customs.bo.MaintainConstraintCodesBO" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM CST_RECV WHERE FLT_KEY=#flightKey# AND FLT_DATE=#flightDate# AND AWB_NO = #awbNo# AND AWB_DATE = #awbDate# AND HAWB_NO=#hawbNo#
	</select>
	<select id="checkConstCodeExists" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT count(1) FROM MAST_CONSTRAINT_CODE WHERE code=#constCode#
	</select>	   
	<select id="constraintCodesListImp"  parameterClass="cargo.cms.customs.bo.MaintainConstraintCodesBO" resultClass="cargo.cms.customs.bo.MaintainConstraintCodesBO">
	
		SELECT T1.AWB_NO AS awbNo, SUBSTR(T1.AWB_NO, 1, 3) AS awbNoPFX,
			SUBSTR(T1.AWB_NO, 4, 11) AS awbNoSFX,to_char(T1.AWB_DATE,'DDMONYY') AS awbDate, T1.FLT_KEY AS flightKey,
			TO_CHAR(T1.FLT_DATE, 'DDMONYY') AS flightDate,
			NVL(T2.FLT_TYPE, 'I') AS flightType, T1.CARR_CODE AS carrCode,
			NVL(T1.MANIFEST_PCS, 0) AS pcs, NVL(T1.MANIFEST_WT, 0)  AS wt,
			nvl(T2.HAWB_NO,T1.HAWB_NO) AS hawbNo, T2.CC_CODE AS constCode, trim(T2.REF_NO) AS refNo,
			T2.CC_CODE AS old_constCode, trim(T2.REF_NO) AS old_refNo, T2.VER_NO AS verNo,
			T2.LM_USER_ID AS lastUpdatedUserId,
			TO_CHAR(T2.LM_DATE, 'DDMONYY HH24:mi') AS lastUpdatedDate
		FROM (SELECT A.AWB_NO,A.AWB_DATE,B.HAWB_NO,A.FLT_KEY,A.FLT_DATE,A.CARR_CODE,A.MANIFEST_PCS,A.MANIFEST_WT
			FROM IMP_CAR_SHP A,
			CST_HAWB B
			WHERE A.AWB_NO = B.AWB_NO
				AND A.AWB_DATE = B.AWB_DATE
				AND A.FLT_KEY = #flightKey#
				AND A.FLT_DATE = TO_DATE(#flightDate#, 'DDMONYY')
				AND A.AWB_NO = NVL(#awbNo#, A.AWB_NO)
			UNION
			SELECT A.AWB_NO,A.AWB_DATE,LPAD('0',18,'0') HAWB_NO,A.FLT_KEY,A.FLT_DATE,A.CARR_CODE,A.MANIFEST_PCS,A.MANIFEST_WT
			FROM IMP_CAR_SHP A
			WHERE A.FLT_KEY = #flightKey#
				AND A.FLT_DATE = TO_DATE(#flightDate#, 'DDMONYY')
				AND A.AWB_NO = NVL(#awbNo#, A.AWB_NO)) T1 
		LEFT JOIN V_CST_IMP_CC_CODE T2 ON T1.FLT_KEY = T2.FLT_KEY AND T1.FLT_DATE = T2.FLT_DATE AND T1.AWB_NO = T2.AWB_NO AND T1.HAWB_NO = T2.HAWB_NO
			 AND T2.AWB_NO = NVL(#awbNo#, T2.AWB_NO)
		JOIN IMP_CAR_AWB A ON T1.AWB_NO = A.AWB_NO AND T1.AWB_DATE = A.AWB_DATE
		WHERE A.CATALOG NOT IN ('IO','TM')
		AND not EXISTS (select null from  mast_carrier where code = substr(#flightKey#, 1,2) AND  NVL(vessel_flt_yn,'N') ='Y' )
		and exists (select null
				  from (select sf.Sub_Function_code VAL
					  from sec_role_sub_function sf
					  join sec_user_role ur on ur.role_name = sf.role_code
					  where sf.Sub_Function_code in ('CST_9_001', 'CST_9_002') and enable_yn = 'Y' and ur.user_id = #userId#) a
				  where (a.VAL = 'CST_9_001' and 
				  			   exists (select NULL from cst_recv where CONST_CODE in ('NF', 'EF') 
							   		  and flt_key = t2.flt_key and flt_date = t2.flt_date and flt_type = t2.flt_type 
									  and awb_no = t2.awb_no and hawb_no = t2.hawb_no))
				  		or (a.VAL = 'CST_9_002' AND
						   	   exists (select NULL from cst_recv where CONST_CODE in ('NH', 'EH', 'EM')
							   		  and flt_key = t2.flt_key and flt_date = t2.flt_date and flt_type = t2.flt_type 
									  and awb_no = t2.awb_no and hawb_no = t2.hawb_no))
				  union all
				  select null
				  from (select count(1) VAL
					  from sec_role_sub_function sf
					  join sec_user_role ur on ur.role_name = sf.role_code
					  where sf.Sub_Function_code in ('CST_9_001', 'CST_9_002') and enable_yn = 'Y' and ur.user_id = #userId#) a
				  where a.VAL = 0
				  )	
		ORDER BY t1.awb_no, NVL(t2.hawb_no,T1.HAWB_NO)
		
	</select> 
   	
   	<select id="constraintCodesListSouthBound"  parameterClass="cargo.cms.customs.bo.MaintainConstraintCodesBO" resultClass="cargo.cms.customs.bo.MaintainConstraintCodesBO">
	
		SELECT T1.AWB_NO AS awbNo, SUBSTR(T1.AWB_NO, 1, 3) AS awbNoPFX,
			SUBSTR(T1.AWB_NO, 4, 11) AS awbNoSFX,to_char(T1.AWB_DATE,'DDMONYY') AS awbDate, T1.FLT_KEY AS flightKey,
			TO_CHAR(T1.FLT_DATE, 'DDMONYY') AS flightDate,
			NVL(T2.FLT_TYPE, 'I') AS flightType, T1.CARR_CODE AS carrCode,
			NVL(T1.MANIFEST_PCS, 0) AS pcs, NVL(T1.MANIFEST_WT, 0)  AS wt,
			nvl(T2.HAWB_NO,T1.HAWB_NO) AS hawbNo, T2.CC_CODE AS constCode, trim(T2.REF_NO) AS refNo,
			T2.CC_CODE AS old_constCode, trim(T2.REF_NO) AS old_refNo, T2.VER_NO AS verNo,
			T2.LM_USER_ID AS lastUpdatedUserId,
			TO_CHAR(T2.LM_DATE, 'DDMONYY HH24:mi') AS lastUpdatedDate
		FROM (SELECT A.AWB_NO,A.AWB_DATE,B.HAWB_NO,A.FLT_KEY,A.FLT_DATE,A.CARR_CODE,A.MANIFEST_PCS,A.MANIFEST_WT
			FROM IMP_CAR_SHP A,
			CST_HAWB B
			WHERE A.AWB_NO = B.AWB_NO
				AND A.AWB_DATE = B.AWB_DATE
				AND A.FLT_KEY = #flightKey#
				AND A.FLT_DATE = TO_DATE(#flightDate#, 'DDMONYY')
				AND A.AWB_NO = NVL(#awbNo#, A.AWB_NO)
			UNION
			SELECT A.AWB_NO,A.AWB_DATE,LPAD('0',18,'0') HAWB_NO,A.FLT_KEY,A.FLT_DATE,A.CARR_CODE,A.MANIFEST_PCS,A.MANIFEST_WT
			FROM IMP_CAR_SHP A
			WHERE A.FLT_KEY = #flightKey#
				AND A.FLT_DATE = TO_DATE(#flightDate#, 'DDMONYY')
				AND A.AWB_NO = NVL(#awbNo#, A.AWB_NO)) T1 
		LEFT JOIN V_CST_VSL_CC_CODE_AWB T2 ON T1.FLT_KEY = T2.FLT_KEY AND T1.FLT_DATE = T2.FLT_DATE AND T1.AWB_NO = T2.AWB_NO AND T1.HAWB_NO = T2.HAWB_NO
			 AND T2.AWB_NO = NVL(#awbNo#, T2.AWB_NO)
		JOIN IMP_CAR_AWB A ON T1.AWB_NO = A.AWB_NO AND T1.AWB_DATE = A.AWB_DATE
		WHERE A.CATALOG NOT IN ('IO','TM')
		AND EXISTS (select null from  mast_carrier where code = substr(#flightKey#, 1,2) AND  NVL(vessel_flt_yn,'N') ='Y' )
		and exists (select null
				  from (select sf.Sub_Function_code VAL
					  from sec_role_sub_function sf
					  join sec_user_role ur on ur.role_name = sf.role_code
					  where sf.Sub_Function_code in ('CST_9_001', 'CST_9_002') and enable_yn = 'Y' and ur.user_id = #userId#) a
				  where (a.VAL = 'CST_9_001' and 
				  			   exists (select NULL from cst_recv where CONST_CODE in ('NF', 'EF') 
							   		  and flt_key = t2.flt_key and flt_date = t2.flt_date and flt_type = t2.flt_type 
									  and awb_no = t2.awb_no and hawb_no = t2.hawb_no))
				  		or (a.VAL = 'CST_9_002' AND
						   	   exists (select NULL from cst_recv where CONST_CODE in ('NH', 'EH', 'EM')
							   		  and flt_key = t2.flt_key and flt_date = t2.flt_date and flt_type = t2.flt_type 
									  and awb_no = t2.awb_no and hawb_no = t2.hawb_no))
				  union all
				  select null
				  from (select count(1) VAL
					  from sec_role_sub_function sf
					  join sec_user_role ur on ur.role_name = sf.role_code
					  where sf.Sub_Function_code in ('CST_9_001', 'CST_9_002') and enable_yn = 'Y' and ur.user_id = #userId#) a
				  where a.VAL = 0
				  )	
		ORDER BY t1.awb_no, NVL(t2.hawb_no,T1.HAWB_NO)		
	</select>
   	
   	<select id="constraintCodesListNorthBound"  parameterClass="cargo.cms.customs.bo.MaintainConstraintCodesBO" resultClass="cargo.cms.customs.bo.MaintainConstraintCodesBO">
		select t1.awb_no AS awbNo,  
				substr(t1.awb_no, 1,3) as awbNoPFX, 
				substr(t1.awb_no, 4,11) as awbNoSFX,
				t2.flt_type AS flightType,	t2.flt_key as flightKey, to_char(t1.FLT_DATE, 'ddMONyy') as flightDate,	 
				nvl(t2.hawb_no,'000000000000000000') AS hawbNo,  t2.cc_code AS constCode, t2.ref_no AS refNo, 
				t2.cc_code AS old_constCode, t2.ref_no AS old_refNo, 		
				t2.VER_NO AS verNo, t2.lm_user_id AS lastUpdatedUserId, to_char(t2.lm_date, 'DD MON YY HH24:mi') AS lastUpdatedDate,
				NVL(t1.pman_pcs, 0) AS pcs,NVL(t1.pman_wt, 0) wt,to_char(t1.AWB_DATE,'DDMONYY') AS awbDate
			from   exp_pmanifest_awb t1, V_CST_VSL_CC_CODE_AWB t2
			where  t1.flt_key = t2.flt_key (+)
			and    t1.flt_date = t2.flt_date (+)
			and    t1.awb_no = t2.awb_no (+)
			and    t1.flt_key = #flightKey#
			and    t1.flt_date = to_date(#flightDate#, 'ddMONyy')
			and    t1.AWB_NO = nvl(#awbNo#, t1.awb_no)		
			AND EXISTS (select null from  mast_carrier where code = substr(#flightKey#, 1,2) AND  NVL(vessel_flt_yn,'N') ='Y' )	
			and exists (select null
					  from (select sf.Sub_Function_code VAL
						  from sec_role_sub_function sf
						  join sec_user_role ur on ur.role_name = sf.role_code
						  where sf.Sub_Function_code in ('CST_9_001', 'CST_9_002') and enable_yn = 'Y' and ur.user_id = #userId#) a
					  where (a.VAL = 'CST_9_001' and 
					  			   exists (select NULL from cst_recv where CONST_CODE in ('NF', 'EF') 
								   		  and flt_key = t2.flt_key and flt_date = t2.flt_date and flt_type = t2.flt_type 
										  and awb_no = t2.awb_no and hawb_no = t2.hawb_no))
					  		or (a.VAL = 'CST_9_002' AND
							   	   exists (select NULL from cst_recv where CONST_CODE in ('NH', 'EH', 'EM')
								   		  and flt_key = t2.flt_key and flt_date = t2.flt_date and flt_type = t2.flt_type 
										  and awb_no = t2.awb_no and hawb_no = t2.hawb_no))
					  union all
					  select null
					  from (select count(1) VAL
						  from sec_role_sub_function sf
						  join sec_user_role ur on ur.role_name = sf.role_code
						  where sf.Sub_Function_code in ('CST_9_001', 'CST_9_002') and enable_yn = 'Y' and ur.user_id = #userId#) a
					  where a.VAL = 0
					  )	
				UNION ALL 
				select t1.awb_no AS awbNo,  
								substr(t1.awb_no, 1,3) as awbNoPFX, 
								substr(t1.awb_no, 4,11) as awbNoSFX,
								t2.flt_type AS flightType,	t2.flt_key as flightKey, to_char(t1.FLT_DATE, 'ddMONyy') as flightDate,	 
								nvl(t3.hawb_no,'000000000000000000') AS hawbNo,  t2.cc_code AS constCode, t2.ref_no AS refNo, 
								t2.cc_code AS old_constCode, t2.ref_no AS old_refNo, 		
								t2.VER_NO AS verNo, t2.lm_user_id AS lastUpdatedUserId, to_char(t2.lm_date, 'DD MON YY HH24:mi') AS lastUpdatedDate,
								NVL(t1.pman_pcs, 0) AS pcs,NVL(t1.pman_wt, 0) wt,to_char(t1.AWB_DATE,'DDMONYY') AS awbDate
							from   exp_pmanifest_awb t1
							LEFT JOIN V_CST_VSL_CC_CODE_AWB t2 ON t1.flt_key = t2.flt_key and    t1.flt_date = t2.flt_date  and    t1.awb_no = t2.awb_no
							JOIN CST_HAWB t3 ON t1.AWB_NO = t3.AWB_NO AND t1.AWB_DATE = t3.AWB_DATE AND t1.flt_key = t3.flt_key and    t1.flt_date = t3.flt_date 		
							WHERE  t1.flt_key = #flightKey#
							and    t1.flt_date = to_date(#flightDate#, 'ddMONyy')
							and    t1.AWB_NO = nvl(#awbNo#, t1.awb_no)		
							AND EXISTS (select null from  mast_carrier where code = substr(#flightKey#, 1,2) AND  NVL(vessel_flt_yn,'N') ='Y' )
							AND NOT EXISTS (select null from  V_CST_VSL_CC_CODE_AWB where  flt_key = t2.flt_key and 
              									flt_date = t2.flt_date  and    awb_no = t2.awb_no and hawb_no = t3.hawb_no )	
							and exists (select null
									  from (select sf.Sub_Function_code VAL
										  from sec_role_sub_function sf
										  join sec_user_role ur on ur.role_name = sf.role_code
										  where sf.Sub_Function_code in ('CST_9_001', 'CST_9_002') and enable_yn = 'Y' and ur.user_id = #userId#) a
									  where (a.VAL = 'CST_9_001' and 
									  			   exists (select NULL from cst_recv where CONST_CODE in ('NF', 'EF') 
												   		  and flt_key = t2.flt_key and flt_date = t2.flt_date and flt_type = t2.flt_type 
														  and awb_no = t2.awb_no and hawb_no = t2.hawb_no))
									  		or (a.VAL = 'CST_9_002' AND
											   	   exists (select NULL from cst_recv where CONST_CODE in ('NH', 'EH', 'EM')
												   		  and flt_key = t2.flt_key and flt_date = t2.flt_date and flt_type = t2.flt_type 
														  and awb_no = t2.awb_no and hawb_no = t2.hawb_no))
									  union all
									  select null
									  from (select count(1) VAL
										  from sec_role_sub_function sf
										  join sec_user_role ur on ur.role_name = sf.role_code
										  where sf.Sub_Function_code in ('CST_9_001', 'CST_9_002') and enable_yn = 'Y' and ur.user_id = #userId#) a
									  where a.VAL = 0
									  )	
   	</select>    
   	
<select id="constraintCodesListOthers"  parameterClass="cargo.cms.customs.bo.MaintainConstraintCodesBO" resultClass="cargo.cms.customs.bo.MaintainConstraintCodesBO">
select t1.awb_no AS awbNo,  
			substr(t1.awb_no, 1,3) as awbNoPFX, 
			substr(t1.awb_no, 4,11) as awbNoSFX,
			t1.flt_type AS flightType,	
			t1.flt_key as flightKey, 
			to_char(t1.FLT_DATE, 'ddMONyy') as flightDate,
			t1.flt_type AS oldFlightType,	
			t1.flt_key as oldFlightKey, 
			to_char(t1.FLT_DATE, 'ddMONyy') as oldFlightDate,	 
			nvl(t1.hawb_no,'000000000000000000') AS hawbNo,
			nvl(t1.hawb_no,'000000000000000000') AS oldHawbNo,  
			t1.cc_code AS constCode, 
			TRIM(t1.cc_code) AS constCode, 
	        TRIM(t1.ref_no) AS refNo, 
			TRIM(t1.cc_code) AS old_constCode, 
			TRIM(t1.ref_no) AS old_refNo, 				
			t1.VER_NO AS verNo,
			 t1.lm_user_id AS lastUpdatedUserId, 
			 to_char(t1.lm_date, 'DD MON YY HH24:mi') AS lastUpdatedDate,
			'' AS pcs,
			'' wt,
			to_char(t1.AWB_DATE,'DDMONYY') AS awbDate,
			'old' as recType
		from   V_CST_LATEST_AWB_CC_CODE t1
		where 1=1 and t1.AWB_NO = nvl(#awbNo#, t1.awb_no) and t1.awb_date = #awbDate#
		<isNotEmpty property="flightKey">
		<isNotEmpty property="flightDate">	
		and t1.flt_key=#flightKey# 
		and t1.flt_date=#flightDate#	
		</isNotEmpty>
		</isNotEmpty>
    and exists (select null
				  from (select sf.Sub_Function_code VAL
					  from sec_role_sub_function sf
					  join sec_user_role ur on ur.role_name = sf.role_code
					  where sf.Sub_Function_code in ('CST_9_001', 'CST_9_002') and enable_yn = 'Y' and ur.user_id = #userId#) a
				  where (a.VAL = 'CST_9_001' and 
				  			   exists (select NULL from cst_recv where CONST_CODE in ('NF', 'EF') 
							   		  and flt_key = t1.flt_key and flt_date = t1.flt_date and flt_type = t1.flt_type 
									  and awb_no = t1.awb_no and hawb_no = t1.hawb_no))
				  		or (a.VAL = 'CST_9_002' AND
						   	   exists (select NULL from cst_recv where CONST_CODE in ('NH', 'EH', 'EM')
							   		  and flt_key = t1.flt_key and flt_date = t1.flt_date and flt_type = t1.flt_type 
									  and awb_no = t1.awb_no and hawb_no = t1.hawb_no))
				  union all
				  select null
				  from (select count(1) VAL
					  from sec_role_sub_function sf
					  join sec_user_role ur on ur.role_name = sf.role_code
					  where sf.Sub_Function_code in ('CST_9_001', 'CST_9_002') and enable_yn = 'Y' and ur.user_id = #userId#) a
				  where a.VAL = 0
				  )	
		 AND  not EXISTS (select null from  mast_carrier where code = substr(t1.flt_key, 1,2) AND  NVL(vessel_flt_yn,'N') ='Y' )
		order by t1.awb_no, t1.hawb_no
</select>
   	
	<select id="constraintCodesListExp"  parameterClass="cargo.cms.customs.bo.MaintainConstraintCodesBO" resultClass="cargo.cms.customs.bo.MaintainConstraintCodesBO">
	select t1.awb_no AS awbNo,  
			substr(t1.awb_no, 1,3) as awbNoPFX, 
			substr(t1.awb_no, 4,11) as awbNoSFX,
			t2.flt_type AS flightType,	t2.flt_key as flightKey, to_char(t1.FLT_DATE, 'ddMONyy') as flightDate,	 
			nvl(t2.hawb_no,'000000000000000000') AS hawbNo,  t2.cc_code AS constCode, t2.ref_no AS refNo, 
			t2.cc_code AS old_constCode, t2.ref_no AS old_refNo, 		
			t2.VER_NO AS verNo, t2.lm_user_id AS lastUpdatedUserId, to_char(t2.lm_date, 'DD MON YY HH24:mi') AS lastUpdatedDate,
			NVL(t1.pman_pcs, 0) AS pcs,NVL(t1.pman_wt, 0) wt,to_char(t1.AWB_DATE,'DDMONYY') AS awbDate
		from   exp_pmanifest_awb t1, v_cst_exp_cc_code t2
		where  t1.flt_key = t2.flt_key (+)
		and    t1.flt_date = t2.flt_date (+)
		and    t1.awb_no = t2.awb_no (+)
		and    t1.flt_key = #flightKey#
		and    t1.flt_date = to_date(#flightDate#, 'ddMONyy')
		and    t1.AWB_NO = nvl(#awbNo#, t1.awb_no)			
		and exists (select null
				  from (select sf.Sub_Function_code VAL
					  from sec_role_sub_function sf
					  join sec_user_role ur on ur.role_name = sf.role_code
					  where sf.Sub_Function_code in ('CST_9_001', 'CST_9_002') and enable_yn = 'Y' and ur.user_id = #userId#) a
				  where (a.VAL = 'CST_9_001' and 
				  			   exists (select NULL from cst_recv where CONST_CODE in ('NF', 'EF') 
							   		  and flt_key = t2.flt_key and flt_date = t2.flt_date and flt_type = t2.flt_type 
									  and awb_no = t2.awb_no and hawb_no = t2.hawb_no))
				  		or (a.VAL = 'CST_9_002' AND
						   	   exists (select NULL from cst_recv where CONST_CODE in ('NH', 'EH', 'EM')
							   		  and flt_key = t2.flt_key and flt_date = t2.flt_date and flt_type = t2.flt_type 
									  and awb_no = t2.awb_no and hawb_no = t2.hawb_no))
				  union all
				  select null
				  from (select count(1) VAL
					  from sec_role_sub_function sf
					  join sec_user_role ur on ur.role_name = sf.role_code
					  where sf.Sub_Function_code in ('CST_9_001', 'CST_9_002') and enable_yn = 'Y' and ur.user_id = #userId#) a
				  where a.VAL = 0
				  )	
		 AND  not EXISTS (select null from  mast_carrier where code = substr(#flightKey#, 1,2) AND  NVL(vessel_flt_yn,'N') ='Y' )
		order by t1.awb_no, t2.hawb_no
   	</select>      	
   	
   	<select id="constraintCodesListITM"  parameterClass="cargo.cms.customs.bo.MaintainConstraintCodesBO" resultClass="cargo.cms.customs.bo.MaintainConstraintCodesBO">
	
	SELECT trk_Flt.tr_no , shp_data.AWB_NO AS awbNo, SUBSTR(shp_data.AWB_NO, 1, 3) AS awbNoPFX,
			SUBSTR(shp_data.AWB_NO, 4, 11) AS awbNoSFX,to_char(shp_data.AWB_DATE,'DDMONYY') AS awbDate, trk_Flt.truck_no AS truckNo,
			TO_CHAR(trk_Flt.truck_flt_DATE, 'DDMONYY') AS schDate, trk_Flt.sch_time AS schTime,
			NVL(T2.FLT_TYPE, 'T') AS flightType, 
			nvl(NVL(shp_data.TRK_MANF_PCS, shp_data.TRK_MANF_PCS),0) AS pcs, nvl(NVL(shp_data.TRK_MANF_WT, shp_data.TRK_MANF_WT),0)  AS wt,
			nvl(nvl(T2.HAWB_NO,shp_data.HAWB_NO),LPAD('0',18,'0')) AS hawbNo, T2.CC_CODE AS constCode, trim(T2.REF_NO) AS refNo,
			T2.CC_CODE AS old_constCode, trim(T2.REF_NO) AS old_refNo, T2.VER_NO AS verNo,
			T2.LM_USER_ID AS lastUpdatedUserId,
			TO_CHAR(T2.LM_DATE, 'DDMONYY HH24:mi') AS lastUpdatedDate
    FROM ITM_TRK_MANF_HD trk_Flt 
		inner join ( SELECT A.tr_no, A.AWB_NO,A.AWB_DATE,B.HAWB_NO, B.TRK_MANF_PCS, B.TRK_MANF_WT
                        FROM ITM_TRK_MANF_SHP A, ITM_TRK_MANF_SHP_HAWB B
                        WHERE A.tr_no = B.tr_no and A.DOC_LINE_NO = B.DTL_DOC_LINE_NO
                        UNION
                        SELECT A.tr_no, A.AWB_NO,A.AWB_DATE,LPAD('0',18,'0') HAWB_NO, A.TRK_MANF_PCS, A.TRK_MANF_WT                        
                        FROM ITM_TRK_MANF_SHP A ) shp_data on  shp_data.tr_no = trk_Flt.tr_no
		LEFT JOIN V_CST_TRUCK_CC_CODE T2 ON trk_Flt.truck_No = T2.truck_No
        						AND trk_Flt.TRUCK_FLT_DATE = T2.sch_date  AND trk_Flt.sch_TIME = T2.sch_TIME AND T2.AWB_NO = NVL(#awbNo#, shp_data.AWB_NO) AND shp_data.HAWB_NO = T2.HAWB_NO
		WHERE trk_Flt.status not in  ('VOID') and exists (select null
				  from (select sf.Sub_Function_code VAL
					  from sec_role_sub_function sf
					  join sec_user_role ur on ur.role_name = sf.role_code
					  where sf.Sub_Function_code in ('CST_9_001', 'CST_9_002') and enable_yn = 'Y' and ur.user_id = #userId#) a
				  where (a.VAL = 'CST_9_001' and 
				  			   exists (select NULL from cst_recv where CONST_CODE in ('NF', 'EF') 
							   		  and truck_no = t2.truck_no and sch_date = t2.sch_date  
                                                                          and sch_time = t2.sch_time and flt_type = t2.flt_type 
									  and awb_no = t2.awb_no and hawb_no = t2.hawb_no))
				  		or (a.VAL = 'CST_9_002' AND
						   	   exists (select NULL from cst_recv where CONST_CODE in ('NH', 'EH', 'EM')
							   		  and truck_no = t2.truck_no and sch_date = t2.sch_date 
                                                                          and sch_time = t2.sch_time and flt_type = t2.flt_type 
									  and awb_no = t2.awb_no and hawb_no = t2.hawb_no))
				  union all
				  select null
				  from (select count(1) VAL
					  from sec_role_sub_function sf
					  join sec_user_role ur on ur.role_name = sf.role_code
					  where sf.Sub_Function_code in ('CST_9_001', 'CST_9_002') and enable_yn = 'Y' and ur.user_id =  #userId#) a
				  where a.VAL = 0
				  )
                and trk_Flt.truck_no = nvl(#truckNo#,trk_Flt.truck_no) AND trk_Flt.truck_flt_DATE  = TO_DATE(#schDate#, 'DDMONYY') 
                and trk_Flt.sch_time = nvl(#schTime#,trk_Flt.sch_time)
				AND shp_data.AWB_NO = NVL(#awbNo#, shp_data.AWB_NO)                                  
                                  
		ORDER BY shp_data.AWB_NO, NVL(t2.hawb_no,shp_data.HAWB_NO)
		
</select> 


	<select id="checkAWBCloseCC"  parameterClass="cargo.cms.customs.bo.MaintainConstraintCodesBO" resultClass="java.lang.Integer">
		select count(1) from AWB where awb_no = #awbNo# and awb_date = to_date(#awbDate#,'DDMONYY') and awb_closed_yn = 'Y'
	</select>
	
	<insert id="insertConstraintCodes" parameterClass="cargo.cms.customs.bo.MaintainConstraintCodesBO" >
		INSERT INTO CST_RECV ( TR_TYPE,FLT_TYPE,CARR_CODE,FLT_KEY,FLT_DATE,REC_TYPE,AWB_NO,HAWB_NO,                                            
				 VER_NO,RECV_DATE,CTM_REF_NO,CONST_CODE,LM_USER_ID,LM_DATE,LM_VER,TRUCK_NO,SCH_DATE,SCH_TIME,AWB_DATE) 
		VALUES 
		('MTNCC',DECODE(#flightType#,'S','I','N','E',#flightType#), #carrCode#, #flightKey#, #flightDate#, 
		'C', #awbNo#, trim(#hawbNo#),'1', 
		 SYSDATE, #refNo#, #constCode#,  #crUserId#, SYSDATE, '0',#truckNo#,#schDate#,#schTime#,PKG_COMMON.GET_AWB_DATE(#awbNo#,''))		
		
	</insert> 	
	
    <insert id="insertConstraintCodesVer" parameterClass="cargo.cms.customs.bo.MaintainConstraintCodesBO">
		INSERT INTO CST_RECV ( TR_TYPE,FLT_TYPE,CARR_CODE,FLT_KEY,FLT_DATE,REC_TYPE,AWB_NO,HAWB_NO,                                            
				 VER_NO,RECV_DATE,CTM_REF_NO,CONST_CODE,LM_USER_ID,LM_DATE,LM_VER,TRUCK_NO,SCH_DATE,SCH_TIME,AWB_DATE)
		VALUES 
		('MTNCC',DECODE(#flightType#,'S','I','N','E',#flightType#), #carrCode#, #flightKey#, #flightDate#, 
		'C', #awbNo#, trim(#hawbNo#),#verNo#, 
		 SYSDATE, #refNo#, #constCode#,  #crUserId#, SYSDATE, #lastUpdatedVersion#,#truckNo#,#schDate#,#schTime#,PKG_COMMON.GET_AWB_DATE(#awbNo#,''))		
		
	</insert>  	
	  		
	<update id="updateConstraintCodes" parameterClass="cargo.cms.customs.bo.MaintainConstraintCodesBO" >
		
		update CST_RECV set TR_TYPE = 'MTNCC', CTM_REF_NO = #refNo#, CONST_CODE = #constCode#, LM_USER_ID = #crUserId#, 
		LM_DATE = SYSDATE, VER_NO=#verNo#, LM_VER = #lastUpdatedVersion#
			WHERE FLT_KEY = #flightKey#
			AND FLT_DATE=#flightDate#
			AND FLT_TYPE=#flightType#
			AND REC_TYPE='C'
			AND AWB_NO=#awbNo#
		 <isNotEmpty prepend="AND" property="hawbNo">
			 HAWB_NO = #hawbNo# 
		 </isNotEmpty>						
		
	</update> 		 
	<insert id="insertAuditTrailEvents" parameterClass="cargo.cms.customs.bo.MaintainConstraintCodesBO">
		<![CDATA[
			INSERT INTO AWB_EVENTS 
			  (AWB_NO, AWB_DATE, EVENT_ID, EVENT_DESC, FLT_KEY, FLT_DATE,
			  FLT_TYPE, TR_NO, ULD_KEY, PCS, WT, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE ) 
			VALUES  
			  (#awbNo#,  TO_DATE(#flightDate#,'DDMONYY') , '', (SELECT EVENT_DESC FROM MAST_AWB_EVENTS WHERE EVENT_ID = ''), #flightKey#,  TO_DATE(#flightDate#,'DDMONYY'), 
			  'I', AWB_event_SEQ.nextval
			, NULL,0,0, #crUserId#,  sysdate, #crUserId#,  sysdate)
		]]>
	</insert>
	<select id="cc_lock_list"  parameterClass="java.lang.String" resultClass="java.lang.String">
		select lock_ind from mast_constraint_code where code in (#PARAM#)
	</select>
	
	<select id="latest_CC_code_Constrained_forAWB"  parameterClass="java.lang.String" resultClass="java.lang.String">
		select imp_srf_iss_yn as constrained
			from MAST_CONSTRAINT_CODE 
			where code = (  SELECT CC_CODE FROM (SELECT T1.CC_CODE FROM V_CST_IMP_CC_CODE_AWB T1,MAST_CONSTRAINT_CODE T2 
							WHERE t1.cc_code = t2.code AND awb_no = #PARAM# AND NVL(hawb_no, '000000000000000000') = '000000000000000000'
							ORDER BY recv_date DESC, priority DESC) where rownum = 1)
	</select>
	<update id="update_CCClearTime_IMP_CAR_SHP" parameterClass="map" >
		update imp_car_shp 
			set cc_clear_time = sysdate 
			where cc_clear_time is null 
			and awb_no   =#awbNo#
			and flt_key  = #flightKey#
			and flt_date =#flightDate#
	</update> 	
	
	<!-- bug #3892 -->
	<select id="valid_flt"  parameterClass="map" resultClass="java.lang.Integer">	 
	SELECT count(1) FROM FLT_OPR WHERE CARR_CODE=#carrierCode# AND FLT_NO=#flightNo# AND SCH_DATE  between  TO_DATE(#startDt#,'DDMONYY HH24:MI')  and TO_DATE(#flightDate#,'DDMONYY HH24:MI') AND FLT_TYPE = #fltType#
	</select>
	<select id="getUldLspDetails"  parameterClass="cargo.cms.customs.bo.MaintainConstraintCodesBO" resultClass="cargo.cms.customs.bo.MaintainConstraintCodesBO">
	select uld_key as uldKey,lsp_no as lspNo from awb_inventory where awb_no=#awbNo#
	</select>
	<select id="getUldAwbLockStatus"  parameterClass="cargo.cms.customs.bo.MaintainConstraintCodesBO" resultClass="java.lang.Integer">
	SELECT DECODE(COUNT(1),'0','00','01') FROM AWB, AWB_INVENTORY,V_CST_CC_CODE_AWB,MAST_CONSTRAINT_CODE 
			WHERE AWB.AWB_NO = AWB_INVENTORY.AWB_NO AND AWB.AWB_DATE = AWB_INVENTORY.AWB_DATE AND V_CST_CC_CODE_AWB.AWB_NO = AWB.AWB_NO
			AND MAST_CONSTRAINT_CODE.CODE = V_CST_CC_CODE_AWB.CC_CODE AND MAST_CONSTRAINT_CODE.LOCK_IND = 'Y'
		AND AWB_INVENTORY.ULD_KEY =#uldKey#
	</select>
	<select id="getLspAwbLockStatus"  parameterClass="cargo.cms.customs.bo.MaintainConstraintCodesBO" resultClass="java.lang.Integer">
	SELECT DECODE(COUNT(1),'0','00','01') FROM AWB, AWB_INVENTORY,V_CST_CC_CODE_AWB,MAST_CONSTRAINT_CODE 
						WHERE AWB.AWB_NO = AWB_INVENTORY.AWB_NO AND AWB.AWB_DATE = AWB_INVENTORY.AWB_DATE AND V_CST_CC_CODE_AWB.AWB_NO = AWB.AWB_NO
						AND MAST_CONSTRAINT_CODE.CODE = V_CST_CC_CODE_AWB.CC_CODE AND MAST_CONSTRAINT_CODE.LOCK_IND = 'Y'
					AND AWB_INVENTORY.LSP_NO = #lspNo#
	</select>
	
   	<!-- Maintain Constraint Codes End -->
   		
   	<!-- ###################################################################################################################################################### -->
   	<!-- DDS_CST_BDS_SUB Related Queries Added By Varadaraj Muni - 09-DECEMBER-2010 -->
   	<!-- ###################################################################################################################################################### -->
   	
   	
   <!-- Changed on 25 FEB 2007 by atul  -->
	<select id="bdDiscList"  parameterClass="cargo.cms.customs.bo.BDDiscFlightBO" resultClass="cargo.cms.customs.bo.BDDiscFlightBO">		
	SELECT  F.FLT_KEY AS flightKey, 
			to_char(F.SCH_DATE,'DDMONYY') AS flightDate, 
			F.stfs_flt_key as vesselflightKey,
			to_char(F.stfs_flt_date,'DDMONYY') as vesselflightDate,
			F.flt_type as flightType,
          	DECODE(nvl(S.Pty, 0), 0, 'No','Yes') AS discrPrty, 
          	DECODE(nvl(S.Nrml, 0), 0, 'No','Yes') AS discNormal, 
            PKG_COMMON.get_flt_ata(F.FLT_KEY, F.SCH_DATE, 'A')  as arrivalTime ,
            SUBSTR(TRIM(TO_CHAR(NVL(F.SCH_TIME,0),'0000')),0,2)|| ':'||  
            					SUBSTR(TRIM(TO_CHAR(NVL(F.SCH_TIME,0),'0000')),3,4)  as schTime ,            
            'BDS' as recType,
            TO_CHAR(CS.SUBM_DATE, 'DDMONYY HH24:MI') AS bdsSubmDate,
            TO_CHAR(CC.SUBM_DATE,'DDMONYY HH24:MI') AS bdsComplDate,
            DECODE(CS.SUBM_DATE,NULL,0,1) db_compl,
            DECODE(CA.TR_NO, NULL, 'No', 'Yes') AS fltClr,
            F.TR_NO as trNo,
			NVL(CASE WHEN CC.VER_NO > NVL(CS.VER_NO, 0) THEN CC.VER_NO ELSE CS.VER_NO END, 0) + 1 AS verNo,
			DECODE(CASE WHEN CC.VER_NO > NVL(CS.VER_NO, 0) THEN CC.SEND_STATUS ELSE CS.SEND_STATUS END, NULL, 'No Subm', 'P', 'In Progress', 'W', 'In Progress', 'A', 'Accepted', 'R', 'Rejected', 'E', 'Rejected') AS status,
			F.VESSEL_ID as vesselId,
			F.VESSEL_NAME as vesselName,
			F.VOYAGE_NUM as voyageNum,
			F.SHIPPING_AGENT as shippingAgent,
			F.CALL_SIGN_VESSEL as vesselFlightCallSign			
            FROM FLT_OPR F 
            LEFT JOIN mast_carrier ON f.carr_code=mast_carrier.code 
			LEFT JOIN (SELECT S.FLT_KEY, S.FLT_DATE, 
				 	  SUM(NVL(CA.Pty, 0)) Pty, 
					  SUM(NVL(CA.Nrml, 0)) Nrml
				 	  FROM (SELECT 
					 	  	  DAM_DECL_PCS ABS_CIR_PCS,
					 	  	  DAM_DECL_WT ABS_CIR_WT,
							  'DM' BD_TYPE, 
							  S.* FROM IMP_CAR_SHP S 
							  where DAM_PROC_USER is not null
							  union
							  SELECT 
					 	  	  CASE WHEN CIR_PCS_TYPE = 'SL' THEN -1 * CIR_PCS
							  	   WHEN CIR_PCS_TYPE = 'SP' THEN CIR_PCS
							  END ABS_CIR_PCS,
					 	  	  CASE WHEN CIR_WT_TYPE = 'SL' THEN -1 * CIR_WT
							  	   WHEN CIR_WT_TYPE = 'SP' THEN CIR_WT
							  END ABS_CIR_WT,
							  CASE WHEN CIR_PROC_USER IS NOT NULL AND MANIFEST_PCS = 0 AND CIR_PCS_TYPE = 'SP' THEN 'SC'
								  WHEN CIR_PROC_USER IS NOT NULL AND MANIFEST_PCS > 0 AND CIR_PCS_TYPE = 'SP' THEN 'SP'
							 	  WHEN CIR_PROC_USER IS NOT NULL AND RECD_PCS + nvl(tt_pcs,0) = 0 AND CIR_PCS_TYPE = 'SL' THEN 'LC'
								  WHEN CIR_PROC_USER IS NOT NULL AND RECD_PCS + nvl(tt_pcs,0) > 0 AND CIR_PCS_TYPE = 'SL' THEN 'LP'
							  END BD_TYPE, 
							  S.* FROM IMP_CAR_SHP S
              LEFT JOIN (select nvl(sum(actual_pcs),0) tt_pcs ,  nvl(sum (actual_Wt),0) tt_wt, flt_key, flt_date, awb_No , awb_date 
								from v_ddt_dtl  where (shp_trf_type = 'TT'  or  trf_type = 'IF') GROUP BY flt_key, flt_date, awb_No, awb_date) ddt 
             			ON s.AWB_NO = ddt.AWB_NO AND s.AWB_DATE = ddt.AWB_DATE AND s.FLT_KEY = ddt.FLT_KEY AND s.FLT_DATE = ddt.FLT_DATE
							  where CIR_PCS_TYPE is not null or CIR_WT_TYPE is not null) S
            	 	  JOIN IMP_CAR_AWB A ON S.AWB_NO = A.AWB_NO AND S.AWB_DATE = A.AWB_DATE
					  left join (SELECT AWB_NO, AWB_DATE, FLT_KEY, FLT_DATE,
					  	   		decode(REL_IND, null, 0, 1) Pty, 
					  			decode(REL_IND, null, 1, 0) Nrml
								FROM cst_awb) ca 
					  	   ON S.AWB_NO = ca.AWB_NO AND S.AWB_DATE = ca.AWB_DATE AND S.FLT_KEY = ca.FLT_KEY AND S.FLT_DATE = ca.FLT_DATE
					  LEFT JOIN MAST_HAWB H ON S.AWB_NO = H.AWB_NO AND S.AWB_DATE = H.AWB_DATE
					  LEFT JOIN (SELECT 
						 	  	  DAM_PCS ABS_HCIR_PCS,
						 	  	  DAM_WT ABS_HCIR_WT,
								  'DM' BD_TYPE,
								  M.HAWB_PCS H_PCS,
								  M.HAWB_WT	 H_WT, 
								  S.* FROM IMP_HAWB_STRG_DTL S
								  JOIN MAST_HAWB M ON S.AWB_NO = M.AWB_NO AND S.AWB_DATE = M.AWB_DATE AND S.HAWB_NO = M.HAWB_NO
								  where DAM_USER is not null
								  union all
								  SELECT 
						 	  	  CASE WHEN HCIR_PCS_TYPE = 'SL' THEN -1 * HCIR_PCS
								  	   WHEN HCIR_PCS_TYPE = 'SP' THEN HCIR_PCS
								  END ABS_HCIR_PCS,
						 	  	  CASE WHEN HCIR_WT_TYPE = 'SL' THEN -1 * HCIR_WT
								  	   WHEN HCIR_WT_TYPE = 'SP' THEN HCIR_WT
								  END ABS_HCIR_WT,
								  CASE WHEN HCIR_USER IS NOT NULL AND SEC_CHECK = 'Y' THEN 'SC'
									  WHEN HCIR_USER IS NOT NULL AND HCIR_PCS_TYPE = 'SP' THEN 'SP'
								 	  WHEN HCIR_USER IS NOT NULL AND M.HAWB_PCS = 0 AND HCIR_PCS_TYPE = 'SL' THEN 'LC'
									  WHEN HCIR_USER IS NOT NULL AND M.HAWB_PCS > 0 AND HCIR_PCS_TYPE = 'SL' THEN 'LP'
								  END BD_TYPE,
								  M.HAWB_PCS H_PCS,
								  M.HAWB_WT	 H_WT, 
								  S.* FROM IMP_HAWB_STRG_DTL S
								  JOIN MAST_HAWB M ON S.AWB_NO = M.AWB_NO AND S.AWB_DATE = M.AWB_DATE AND S.HAWB_NO = M.HAWB_NO
								  where HCIR_USER IS NOT NULL) HS 
							ON S.AWB_NO = HS.AWB_NO AND S.AWB_DATE = HS.AWB_DATE AND S.FLT_KEY = HS.FLT_KEY AND S.FLT_DATE = HS.FLT_DATE AND H.HAWB_NO = HS.HAWB_NO
					  LEFT JOIN (SELECT B.FLT_KEY, B.FLT_DATE, B.AWB_NO, B.AWB_DATE, B.HAWB_NO, B.BRKDN_CODE, SUM(B.OT_BKDWN_PCS) OT_BKDWN_PCS, SUM(B.OT_BKDWN_WT) OT_BKDWN_WT
								   FROM  CST_BD_DISC B
								   WHERE B.FLT_TYPE = 'I' 
								   AND   B.MSG_TYPE = 'B' 
								   GROUP BY B.FLT_KEY, B.FLT_DATE, B.AWB_NO, B.AWB_DATE, B.HAWB_NO, B.BRKDN_CODE) BD
							ON NVL(HS.AWB_NO, S.AWB_NO) = BD.AWB_NO AND NVL(HS.AWB_DATE, S.AWB_DATE) = BD.AWB_DATE AND NVL(HS.FLT_KEY, S.FLT_KEY) = BD.FLT_KEY 
							   AND NVL(HS.FLT_DATE, S.FLT_DATE) = BD.FLT_DATE AND NVL(HS.HAWB_NO, '000000000000000000') = BD.HAWB_NO 
							   AND NVL(HS.BD_TYPE, S.BD_TYPE) = BD.BRKDN_CODE 
					  WHERE (NVL(HS.HCIR_USER, S.CIR_PROC_USER) IS NOT NULL OR NVL(HS.DAM_USER, S.DAM_PROC_USER) IS NOT NULL 
							 OR BD.FLT_KEY IS NOT NULL) 
					  GROUP BY S.FLT_KEY, S.FLT_DATE) S 
				ON F.FLT_KEY = S.FLT_KEY AND F.SCH_DATE = S.FLT_DATE
            LEFT JOIN (SELECT FLT_KEY, FLT_DATE, MAX(TR_NO) TR_NO
				 	  FROM CST_ACK WHERE ACK_REC_TYPE IN ('CLR') AND FLT_TYPE = 'I' 
					  GROUP BY FLT_KEY, FLT_DATE) CA 
				 ON NVL(STFS_FLT_KEY,F.FLT_KEY) = CA.FLT_KEY AND NVL(STFS_FLT_DATE,F.SCH_DATE) = CA.FLT_DATE 
            LEFT JOIN (SELECT FLT_KEY, FLT_DATE, SUBM_DATE, VER_NO, SEND_STATUS
					  FROM (SELECT FLT_KEY, FLT_DATE, SUBM_DATE, VER_NO, SEND_STATUS,
						   DENSE_RANK() OVER (PARTITION BY FLT_KEY, FLT_DATE ORDER BY SUBM_DATE DESC) RANK 
						   FROM  CST_SUBM 
						   WHERE FLT_TYPE = 'I' 
						   AND   REC_TYPE = 'BDS' AND BD_COMPLETE IS NULL) 
					  WHERE RANK = 1) CS 
				 ON NVL(STFS_FLT_KEY,F.FLT_KEY) = CS.FLT_KEY AND NVL(STFS_FLT_DATE,F.SCH_DATE) = CS.FLT_DATE
            LEFT JOIN (SELECT FLT_KEY, FLT_DATE, SUBM_DATE, VER_NO, SEND_STATUS 
					  FROM (SELECT FLT_KEY, FLT_DATE, SUBM_DATE, VER_NO, SEND_STATUS,
						   DENSE_RANK() OVER (PARTITION BY FLT_KEY, FLT_DATE ORDER BY SUBM_DATE DESC) RANK 
						   FROM  CST_SUBM 
						   WHERE FLT_TYPE = 'I' 
						   AND   REC_TYPE = 'BDS' AND BD_COMPLETE = 'Y') 
					  WHERE RANK = 1) CC 
				 ON NVL(STFS_FLT_KEY,F.FLT_KEY) = CC.FLT_KEY AND NVL(STFS_FLT_DATE,F.SCH_DATE) = CC.FLT_DATE
            LEFT JOIN (SELECT FLT_KEY, FLT_DATE, VER_NO, ACK_DATE
					  FROM (SELECT FLT_KEY, FLT_DATE, VER_NO, ACK_DATE,
						   DENSE_RANK() OVER (PARTITION BY FLT_KEY, FLT_DATE, VER_NO ORDER BY ACK_DATE DESC) RANK 
						   FROM  CST_ACK 
						   WHERE ACK_REC_TYPE IN ('BDS') AND FLT_TYPE = 'I') 
					  WHERE RANK = 1) ST
				 ON CS.FLT_KEY = ST.FLT_KEY AND CS.FLT_DATE = ST.FLT_DATE AND CS.VER_NO = ST.VER_NO
		   WHERE 
           <!--   F.FLT_TYPE='A' -->           
            <isNotEmpty property="flightType">
				<isEqual property="flightType" compareValue="A">
			           F.FLT_TYPE = 'A' AND NVL(mast_carrier.vessel_flt_yn,'N')='N'
			    </isEqual>
			    <isEqual property="flightType" compareValue="N">
			           F.FLT_TYPE = 'D' AND NVL(mast_carrier.vessel_flt_yn,'N')='Y'
			    </isEqual>	
			    <isEqual property="flightType" compareValue="S">
			           F.FLT_TYPE = 'A' AND NVL(mast_carrier.vessel_flt_yn,'N')='Y'
			    </isEqual>	
			 </isNotEmpty>	
			<isEmpty property="flightType">
			     	 F.FLT_TYPE = 'A' AND NVL(mast_carrier.vessel_flt_yn,'N')='N'
		 	</isEmpty> 	
           	<isNotEmpty property="flightKey">
                  AND F.FLT_KEY = #flightKey#
            </isNotEmpty> 
            AND F.SCH_DATE = TO_DATE(#flightDate#,'DDMONYY') 
            	
            ORDER BY SCH_TIME
	</select>  
	<!-- Changed on 25 FEB 2007 by atul  -->
 	<!-- BDDiscrepancyQuiried Page starts -->
 	<!-- BDDiscrepancyDetails Page starts -->
	<select id="fetchBDflightDetails"  parameterClass="cargo.cms.customs.bo.BDDiscDetailsBO" resultClass="cargo.cms.customs.bo.BDDiscDetailsBO">
	<![CDATA[
	  
		SELECT 
		A.AWB_NO AS awbNo,		
		to_char(A.AWB_DATE,'DDMONYY') AS awbDate,		
		A.CONSOLE_IND as consoleInd,
		NVL(HS.HAWB_NO,'000000000000000000') AS hawbNo,
		DECODE(CA.REL_IND,'Y',1,0) as relInd,
		( SELECT FUN_VSL_SHP_PPK_TYPE(S.FLT_KEY,S.FLT_DATE,'I',A.AWB_NO) FROM DUAL ) as ppkInd,
		CASE WHEN S.ACT_BD_TYPE = 'DM' 
			 THEN 0 ELSE NVL(HS.ABS_HCIR_PCS, S.ABS_CIR_PCS) - NVL(BDS.OT_BKDWN_PCS, 0) END AS discPcs,
		CASE WHEN S.ACT_BD_TYPE = 'DM' 
			 THEN 0 ELSE NVL(HS.ABS_HCIR_WT, S.ABS_CIR_WT) - NVL(BDS.OT_BKDWN_WT, 0) END AS discWt,
		V.CC_CODE as cc, 
		nvl(CA.HDLG_AGENT, nvl(a.ACCS_HANDLER, 'CPCT')) AS handler, 
		CASE WHEN S.ACT_BD_TYPE = 'DM' THEN 'DM'
			  WHEN S.CIR_PROC_USER IS NOT NULL AND BDS.FLT_KEY IS NULL AND MANIFEST_PCS = 0 AND ((CIR_PCS_TYPE = 'SP' and s.ind in ('B', 'P')) or (CIR_WT_TYPE = 'SP' and s.ind in ('W'))) THEN 'SC'
		  	  WHEN (S.CIR_PROC_USER IS NOT NULL or s.ind in ('N', 'HN'))  AND 
			  	   ((BDS.FLT_KEY IS NOT NULL AND ( (NVL(HS.ABS_HCIR_PCS, S.ABS_CIR_PCS) - NVL(BDS.OT_BKDWN_PCS, 0) > 0 and s.ind in ('B', 'P', 'N', 'HN')) or (NVL(HS.ABS_HCIR_WT, S.ABS_CIR_WT) - NVL(BDS.OT_BKDWN_WT, 0) > 0 and s.ind in ('W', 'N', 'HN')))) OR (BDS.FLT_KEY IS NULL AND MANIFEST_PCS > 0 AND ((CIR_PCS_TYPE = 'SP' and s.ind in ('B', 'P')) or (CIR_WT_TYPE = 'SP' and s.ind in ('W'))))) THEN 'SP'
			  WHEN S.CIR_PROC_USER IS NOT NULL AND BDS.FLT_KEY IS NULL AND RECD_PCS + s.tt_pcs = 0 AND ((CIR_PCS_TYPE = 'SL' and s.ind in ('B', 'P')) or (CIR_WT_TYPE = 'SL' and s.ind in ('W'))) THEN 'LC'
		  	  WHEN (S.CIR_PROC_USER IS NOT NULL or s.ind in ('N', 'HN')) AND 
			  	   ((BDS.FLT_KEY IS NOT NULL AND ( (NVL(HS.ABS_HCIR_PCS, S.ABS_CIR_PCS) - NVL(BDS.OT_BKDWN_PCS, 0) < 0 and s.ind in ('B', 'P', 'N', 'HN')) or (NVL(HS.ABS_HCIR_WT, S.ABS_CIR_WT) - NVL(BDS.OT_BKDWN_WT, 0) < 0 and s.ind in ('W', 'N', 'HN')))) OR (BDS.FLT_KEY IS NULL AND RECD_PCS + s.tt_pcs > 0 AND ((CIR_PCS_TYPE = 'SL' and s.ind in ('B', 'P')) or (CIR_WT_TYPE = 'SL' and s.ind in ('W'))))) THEN 'LP'
		ELSE	 HS.ACT_BD_TYPE  
		END AS type,
		''  VER_NO,
		NVL(HS.H_PCS, S.MANIFEST_PCS) AS manfPc,
		NVL(HS.H_WT, S.MANIFEST_WT) AS manfWt,
		NVL(HS.H_PCS, S.MANIFEST_PCS) 
			+ CASE WHEN S.ACT_BD_TYPE = 'DM' THEN NVL(BDS.OT_BKDWN_PCS, 0) ELSE NVL(BDS.OT_BKDWN_PCS, 0) + (NVL(HS.ABS_HCIR_PCS, S.ABS_CIR_PCS) - NVL(BDS.OT_BKDWN_PCS, 0))  END AS suppPc,
		NVL(HS.H_WT, S.MANIFEST_WT) 
			+ CASE WHEN S.ACT_BD_TYPE = 'DM' THEN NVL(BDS.OT_BKDWN_WT, 0) ELSE NVL(BDS.OT_BKDWN_WT, 0) + (NVL(HS.ABS_HCIR_WT, S.ABS_CIR_WT) - NVL(BDS.OT_BKDWN_WT, 0)) END AS suppWt,
		NVL(RECD_PCS, 0) + s.tt_pcs invPc,
		NVL(RECD_WT, 0) + s.tt_wt invWt,		
		V.REF_NO AS ctmRefNo,
		NVL(HS.ABS_HCIR_PCS, S.ABS_CIR_PCS) AS cirPc,
		NVL(HS.ABS_HCIR_WT, S.ABS_CIR_WT) AS cirWt,
		NVL(HS.HM_PCS, A.AWB_PCS) AS awbPcs,
		NVL(HS.HM_WT, A.AWB_WT) AS awbWt
		FROM (select t.*, nvl(ddt.tt_pcs, 0) tt_pcs, nvl(ddt.tt_wt, 0) tt_wt, case when nvl(ddt.tt_pcs,0) > 0 and t.bd_type = 'LC' then 'LP' else t.bd_type end ACT_BD_TYPE
      from (SELECT 
	 	  	  0 ABS_CIR_PCS,
	 	  	  0 ABS_CIR_WT,
			  'DM' BD_TYPE, 'D' ind,
			  S.* FROM IMP_CAR_SHP S 
			  where DAM_PROC_USER is not null
			  union all
			  SELECT 
	 	  	  CASE WHEN CIR_PCS_TYPE = 'SL' THEN -1 * CIR_PCS
			  	   WHEN CIR_PCS_TYPE = 'SP' THEN CIR_PCS
				   ELSE 0
			  END ABS_CIR_PCS,
	 	  	  CASE WHEN CIR_WT_TYPE = 'SL' THEN -1 * CIR_WT
			  	   WHEN CIR_WT_TYPE = 'SP' THEN CIR_WT
				   ELSE 0
			  END ABS_CIR_WT,
			  CASE WHEN CIR_PROC_USER IS NOT NULL AND MANIFEST_PCS = 0 AND CIR_PCS_TYPE = 'SP' THEN 'SC'
				  WHEN CIR_PROC_USER IS NOT NULL AND MANIFEST_PCS > 0 AND CIR_PCS_TYPE = 'SP' THEN 'SP'
			 	  WHEN CIR_PROC_USER IS NOT NULL AND RECD_PCS = 0 AND CIR_PCS_TYPE = 'SL' THEN 'LC'
				  WHEN CIR_PROC_USER IS NOT NULL AND RECD_PCS > 0 AND CIR_PCS_TYPE = 'SL' THEN 'LP'
			  END BD_TYPE, 'B' ind,
			  S.* FROM IMP_CAR_SHP S
			  where CIR_PCS_TYPE is not null and CIR_PCS_TYPE = CIR_WT_TYPE
			  
			  union all
			  SELECT 
	 	  	  CASE WHEN CIR_PCS_TYPE = 'SL' THEN -1 * CIR_PCS
			  	   WHEN CIR_PCS_TYPE = 'SP' THEN CIR_PCS
				   ELSE 0
			  END ABS_CIR_PCS,
	 	  	  0 ABS_CIR_WT,
			  CASE WHEN CIR_PROC_USER IS NOT NULL AND MANIFEST_PCS = 0 AND CIR_PCS_TYPE = 'SP' THEN 'SC'
				  WHEN CIR_PROC_USER IS NOT NULL AND MANIFEST_PCS > 0 AND CIR_PCS_TYPE = 'SP' THEN 'SP'
			 	  WHEN CIR_PROC_USER IS NOT NULL AND RECD_PCS = 0 AND CIR_PCS_TYPE = 'SL' THEN 'LC'
				  WHEN CIR_PROC_USER IS NOT NULL AND RECD_PCS > 0 AND CIR_PCS_TYPE = 'SL' THEN 'LP'
			  END BD_TYPE, 'P' ind,
			  S.* FROM IMP_CAR_SHP S
			  where CIR_PCS_TYPE is not null and NVL(CIR_PCS_TYPE, '**') != NVL(CIR_WT_TYPE, '**')
			  union all
			  SELECT 
	 	  	  0 ABS_CIR_PCS,
	 	  	  CASE WHEN CIR_WT_TYPE = 'SL' THEN -1 * CIR_WT
			  	   WHEN CIR_WT_TYPE = 'SP' THEN CIR_WT
				   ELSE 0
			  END ABS_CIR_WT,
			  CASE WHEN CIR_PROC_USER IS NOT NULL AND MANIFEST_PCS = 0 AND CIR_WT_TYPE = 'SP' THEN 'SC'
				  WHEN CIR_PROC_USER IS NOT NULL AND MANIFEST_PCS > 0 AND CIR_WT_TYPE = 'SP' THEN 'SP'
			 	  WHEN CIR_PROC_USER IS NOT NULL AND RECD_PCS = 0 AND CIR_WT_TYPE = 'SL' THEN 'LC'
				  WHEN CIR_PROC_USER IS NOT NULL AND RECD_PCS > 0 AND CIR_WT_TYPE = 'SL' THEN 'LP'
			  END BD_TYPE, 'W' ind,
			  S.* FROM IMP_CAR_SHP S
			  where CIR_WT_TYPE is not null and NVL(CIR_PCS_TYPE, '**') != NVL(CIR_WT_TYPE, '**')
			  union all
			  SELECT 
	 	  	  DISTINCT 0 ABS_CIR_PCS,
	 	  	  0 ABS_CIR_WT,
			  '' BD_TYPE, 'HB' ind,
			  S.* FROM IMP_CAR_SHP S
			  JOIN IMP_HAWB_STRG_DTL HSD 
			  	   ON S.AWB_NO = HSD.AWB_NO AND S.AWB_DATE = HSD.AWB_DATE AND S.FLT_KEY = HSD.FLT_KEY AND S.FLT_DATE = HSD.FLT_DATE
			  where HCIR_USER IS NOT NULL
			  union all
			  SELECT 
	 	  	  DISTINCT 0 ABS_CIR_PCS,
	 	  	  0 ABS_CIR_WT,
			  '' BD_TYPE, 'HD' ind,
			  S.* FROM IMP_CAR_SHP S
			  JOIN IMP_HAWB_STRG_DTL HSD 
			  	   ON S.AWB_NO = HSD.AWB_NO AND S.AWB_DATE = HSD.AWB_DATE AND S.FLT_KEY = HSD.FLT_KEY AND S.FLT_DATE = HSD.FLT_DATE
			  where DAM_USER IS NOT NULL
			  union all
			  SELECT 
	 	  	  CASE WHEN CIR_PCS_TYPE = 'SL' THEN -1 * CIR_PCS
			  	   WHEN CIR_PCS_TYPE = 'SP' THEN CIR_PCS
				   ELSE 0
			  END ABS_CIR_PCS,
	 	  	  CASE WHEN CIR_WT_TYPE = 'SL' THEN -1 * CIR_WT
			  	   WHEN CIR_WT_TYPE = 'SP' THEN CIR_WT
				   ELSE 0
			  END ABS_CIR_WT,
			  '' BD_TYPE, 'N' ind,
			  S.* FROM IMP_CAR_SHP S
			  where exists (select null from (SELECT B.FLT_KEY, B.FLT_DATE, B.AWB_NO, B.AWB_DATE, B.HAWB_NO, SUM(B.OT_BKDWN_PCS) OT_BKDWN_PCS, SUM(B.OT_BKDWN_WT) OT_BKDWN_WT
						   FROM  CST_BD_DISC B
						   LEFT JOIN CST_ACK A ON A.FLT_KEY = B.FLT_KEY AND A.FLT_DATE = B.FLT_DATE AND A.FLT_TYPE = B.FLT_TYPE 
						   		AND A.VER_NO = B.VER_NO AND A.ACK_REC_TYPE = 'BDS'
						   WHERE BRKDN_CODE in ('LP', 'LC', 'SP', 'SC') 
						   and B.FLT_TYPE = 'I' 
						   AND   B.MSG_TYPE = 'B' 
						   AND A.ACK_STATUS = 'A' 
						   GROUP BY B.FLT_KEY, B.FLT_DATE, B.AWB_NO, B.AWB_DATE, B.HAWB_NO) t
					  where t.FLT_KEY = S.FLT_KEY and t.FLT_DATE = S.FLT_DATE 
				  	  and t.AWB_NO = S.AWB_NO and t.AWB_DATE = s.AWB_DATE and t.HAWB_NO = '000000000000000000'
					  and (decode(s.CIR_WT_TYPE, 'SL', -1, 1) * s.CIR_WT != OT_BKDWN_WT or decode(s.CIR_PCS_TYPE, 'SL', -1, 1) * s.CIR_PCS != OT_BKDWN_PCS) )
			  union all
			  SELECT 
	 	  	  DISTINCT 0 ABS_CIR_PCS,
	 	  	  0 ABS_CIR_WT,
			  '' BD_TYPE, 'HN' ind,
			  S.* FROM IMP_CAR_SHP S
			  JOIN IMP_HAWB_STRG_DTL HSD 
			  	   ON S.AWB_NO = HSD.AWB_NO AND S.AWB_DATE = HSD.AWB_DATE AND S.FLT_KEY = HSD.FLT_KEY AND S.FLT_DATE = HSD.FLT_DATE
			  where exists (select null from (SELECT B.FLT_KEY, B.FLT_DATE, B.AWB_NO, B.AWB_DATE, B.HAWB_NO, SUM(B.OT_BKDWN_PCS) OT_BKDWN_PCS, SUM(B.OT_BKDWN_WT) OT_BKDWN_WT
							   FROM  CST_BD_DISC B
							   LEFT JOIN CST_ACK A ON A.FLT_KEY = B.FLT_KEY AND A.FLT_DATE = B.FLT_DATE AND A.FLT_TYPE = B.FLT_TYPE 
							   		AND A.VER_NO = B.VER_NO AND A.ACK_REC_TYPE = 'BDS'
							   WHERE BRKDN_CODE in ('LP', 'LC', 'SP', 'SC') 
							   and B.FLT_TYPE = 'I' 
							   AND   B.MSG_TYPE = 'B' 
							   AND A.ACK_STATUS = 'A' 
							   GROUP BY B.FLT_KEY, B.FLT_DATE, B.AWB_NO, B.AWB_DATE, B.HAWB_NO) t
						   where t.FLT_KEY = S.FLT_KEY and t.FLT_DATE = S.FLT_DATE 
				  	  	   and t.AWB_NO = S.AWB_NO and t.AWB_DATE = s.AWB_DATE and t.HAWB_NO = HSD.HAWB_NO
				  		   and (decode(HSD.HCIR_WT_TYPE, 'SL', -1, 1) * HSD.HCIR_WT != OT_BKDWN_WT or decode(HSD.HCIR_PCS_TYPE, 'SL', -1, 1) * HSD.HCIR_PCS != OT_BKDWN_PCS))) t
          LEFT JOIN (select nvl(sum(actual_pcs),0) tt_pcs ,  nvl(sum (actual_Wt),0) tt_wt, flt_key, flt_date, awb_No , awb_date 
								from v_ddt_dtl  where (shp_trf_type = 'TT'  or  trf_type = 'IF') GROUP BY flt_key, flt_date, awb_No, awb_date) ddt 
             			ON t.AWB_NO = ddt.AWB_NO AND t.AWB_DATE = ddt.AWB_DATE AND t.FLT_KEY = ddt.FLT_KEY AND t.FLT_DATE = ddt.FLT_DATE
          ) S
		JOIN IMP_CAR_AWB A ON S.AWB_NO = A.AWB_NO AND S.AWB_DATE = A.AWB_DATE
		LEFT JOIN CST_AWB CA ON S.AWB_NO = CA.AWB_NO AND S.FLT_KEY = CA.FLT_KEY AND S.FLT_DATE = CA.FLT_DATE
		LEFT JOIN (select t.*, t.bd_type ACT_BD_TYPE
      from (SELECT 
		 	  	  0 ABS_HCIR_PCS,
		 	  	  0 ABS_HCIR_WT,
				  'DM' BD_TYPE, 'HD' IND,
				  S.HAWB_PCS H_PCS,
				  S.HAWB_WT H_WT, 
				  M.HAWB_PCS HM_PCS,
				  M.HAWB_WT HM_WT,
				  S.* FROM IMP_HAWB_STRG_DTL S
				  LEFT JOIN MAST_HAWB M ON S.AWB_NO = M.AWB_NO AND S.AWB_DATE = M.AWB_DATE AND S.HAWB_NO = M.HAWB_NO
				  where DAM_USER is not null
				  union all
				  SELECT 
		 	  	  CASE WHEN HCIR_PCS_TYPE = 'SL' THEN -1 * HCIR_PCS
				  	   WHEN HCIR_PCS_TYPE = 'SP' THEN HCIR_PCS
					   ELSE 0
				  END ABS_HCIR_PCS,
		 	  	  CASE WHEN HCIR_WT_TYPE = 'SL' THEN -1 * HCIR_WT
				  	   WHEN HCIR_WT_TYPE = 'SP' THEN HCIR_WT
					   ELSE 0
				  END ABS_HCIR_WT,
				  CASE WHEN HCIR_USER IS NOT NULL AND SEC_CHECK = 'Y' THEN 'SC'
					  WHEN HCIR_USER IS NOT NULL AND HCIR_PCS_TYPE = 'SP' THEN 'SP'
				 	  WHEN HCIR_USER IS NOT NULL AND S.HAWB_BRKDN_PCS = 0 AND HCIR_PCS_TYPE = 'SL' THEN 'LC'
					  WHEN HCIR_USER IS NOT NULL AND S.HAWB_BRKDN_PCS > 0 AND HCIR_PCS_TYPE = 'SL' THEN 'LP'
				  END BD_TYPE, 'HB' IND,
				  S.HAWB_PCS H_PCS,
				  S.HAWB_WT H_WT, 
				  M.HAWB_PCS HM_PCS,
				  M.HAWB_WT HM_WT,
				  S.* FROM IMP_HAWB_STRG_DTL S
				  LEFT JOIN MAST_HAWB M ON S.AWB_NO = M.AWB_NO AND S.AWB_DATE = M.AWB_DATE AND S.HAWB_NO = M.HAWB_NO
				  where HCIR_PCS_TYPE IS NOT NULL and HCIR_PCS_TYPE = HCIR_WT_TYPE
				  union all
				  SELECT 
		 	  	  CASE WHEN HCIR_PCS_TYPE = 'SL' THEN -1 * HCIR_PCS
				  	   WHEN HCIR_PCS_TYPE = 'SP' THEN HCIR_PCS
					   ELSE 0
				  END ABS_HCIR_PCS,
		 	  	  0 ABS_HCIR_WT,
				  CASE WHEN HCIR_USER IS NOT NULL AND SEC_CHECK = 'Y' THEN 'SC'
					  WHEN HCIR_USER IS NOT NULL AND HCIR_PCS_TYPE = 'SP' THEN 'SP'
				 	  WHEN HCIR_USER IS NOT NULL AND S.HAWB_BRKDN_PCS = 0 AND HCIR_PCS_TYPE = 'SL' THEN 'LC'
					  WHEN HCIR_USER IS NOT NULL AND S.HAWB_BRKDN_PCS > 0 AND HCIR_PCS_TYPE = 'SL' THEN 'LP'
				  END BD_TYPE, 'HB' IND,
				  S.HAWB_PCS H_PCS,
				  S.HAWB_WT H_WT, 
				  M.HAWB_PCS HM_PCS,
				  M.HAWB_WT HM_WT,
				  S.* FROM IMP_HAWB_STRG_DTL S
				  LEFT JOIN MAST_HAWB M ON S.AWB_NO = M.AWB_NO AND S.AWB_DATE = M.AWB_DATE AND S.HAWB_NO = M.HAWB_NO
				  where HCIR_PCS_TYPE IS NOT NULL and NVL(HCIR_PCS_TYPE, '**') != NVL(HCIR_WT_TYPE, '**')
				  union all
				  SELECT 
		 	  	  0 ABS_HCIR_PCS,
		 	  	  CASE WHEN HCIR_WT_TYPE = 'SL' THEN -1 * HCIR_WT
				  	   WHEN HCIR_WT_TYPE = 'SP' THEN HCIR_WT
					   ELSE 0
				  END ABS_HCIR_WT,
				  CASE WHEN HCIR_USER IS NOT NULL AND SEC_CHECK = 'Y' THEN 'SC'
					  WHEN HCIR_USER IS NOT NULL AND HCIR_WT_TYPE = 'SP' THEN 'SP'
				 	  WHEN HCIR_USER IS NOT NULL AND S.HAWB_BRKDN_PCS = 0 AND HCIR_WT_TYPE = 'SL' THEN 'LC'
					  WHEN HCIR_USER IS NOT NULL AND S.HAWB_BRKDN_PCS > 0 AND HCIR_WT_TYPE = 'SL' THEN 'LP'
				  END BD_TYPE, 'HB' IND,
				  S.HAWB_PCS H_PCS,
				  S.HAWB_WT H_WT, 
				  M.HAWB_PCS HM_PCS,
				  M.HAWB_WT HM_WT,
				  S.* FROM IMP_HAWB_STRG_DTL S
				  LEFT JOIN MAST_HAWB M ON S.AWB_NO = M.AWB_NO AND S.AWB_DATE = M.AWB_DATE AND S.HAWB_NO = M.HAWB_NO
				  where HCIR_WT_TYPE IS NOT NULL and NVL(HCIR_PCS_TYPE, '**') != NVL(HCIR_WT_TYPE, '**')
				  union all
				  SELECT 
		 	  	  CASE WHEN HCIR_PCS_TYPE = 'SL' THEN -1 * HCIR_PCS
				  	   WHEN HCIR_PCS_TYPE = 'SP' THEN HCIR_PCS
					   ELSE 0
				  END ABS_HCIR_PCS,
		 	  	  CASE WHEN HCIR_WT_TYPE = 'SL' THEN -1 * HCIR_WT
				  	   WHEN HCIR_WT_TYPE = 'SP' THEN HCIR_WT
					   ELSE 0
				  END ABS_HCIR_WT,
				  'N' BD_TYPE, 'HN' IND,
				  S.HAWB_PCS H_PCS,
				  S.HAWB_WT H_WT, 
				  M.HAWB_PCS HM_PCS,
				  M.HAWB_WT HM_WT,
				  S.* FROM IMP_HAWB_STRG_DTL S
				  LEFT JOIN MAST_HAWB M ON S.AWB_NO = M.AWB_NO AND S.AWB_DATE = M.AWB_DATE AND S.HAWB_NO = M.HAWB_NO
				  where exists (select null from (SELECT B.FLT_KEY, B.FLT_DATE, B.AWB_NO, B.AWB_DATE, B.HAWB_NO, SUM(B.OT_BKDWN_PCS) OT_BKDWN_PCS, SUM(B.OT_BKDWN_WT) OT_BKDWN_WT
						   FROM  CST_BD_DISC B
						   LEFT JOIN CST_ACK A ON A.FLT_KEY = B.FLT_KEY AND A.FLT_DATE = B.FLT_DATE AND A.FLT_TYPE = B.FLT_TYPE 
						   		AND A.VER_NO = B.VER_NO AND A.ACK_REC_TYPE = 'BDS'
						   WHERE BRKDN_CODE in ('LP', 'LC', 'SP', 'SC') 
						   and B.FLT_TYPE = 'I' 
						   AND   B.MSG_TYPE = 'B' 
						   AND A.ACK_STATUS = 'A' 
						   GROUP BY B.FLT_KEY, B.FLT_DATE, B.AWB_NO, B.AWB_DATE, B.HAWB_NO) t
						   where t.FLT_KEY = S.FLT_KEY and t.FLT_DATE = S.FLT_DATE 
				  	  and t.AWB_NO = S.AWB_NO and t.AWB_DATE = s.AWB_DATE and t.HAWB_NO = s.HAWB_NO
					  and (decode(s.HCIR_WT_TYPE, 'SL', -1, 1) * s.HCIR_WT != OT_BKDWN_WT or decode(s.HCIR_PCS_TYPE, 'SL', -1, 1) * s.HCIR_PCS != OT_BKDWN_PCS))) t
				 ) HS 
			ON S.AWB_NO = HS.AWB_NO AND S.AWB_DATE = HS.AWB_DATE AND S.FLT_KEY = HS.FLT_KEY AND S.FLT_DATE = HS.FLT_DATE
			   AND S.IND = HS.IND
		LEFT JOIN MAST_HAWB H ON S.AWB_NO = H.AWB_NO AND S.AWB_DATE = H.AWB_DATE AND H.HAWB_NO = HS.HAWB_NO
		LEFT JOIN V_CST_IMP_CC_CODE V ON V.FLT_KEY = S.FLT_KEY AND V.FLT_DATE = S.FLT_DATE AND V.AWB_NO = S.AWB_NO 
			  AND NVL(TRIM(V.HAWB_NO), '000000000000000000') =  NVL(TRIM(HS.HAWB_NO), '000000000000000000')
		LEFT JOIN (SELECT AWB_NO, AWB_DATE, FLT_KEY, FLT_DATE, MIN(SEQ_NO) SEQ_NO, SUM(LOCN_PCS) INV_PCS, SUM(LOCN_WT) INV_WT
				  FROM AWB_INVENTORY 
				  GROUP BY AWB_NO, AWB_DATE, FLT_KEY, FLT_DATE) I 
		   	ON S.AWB_NO = I.AWB_NO AND S.AWB_DATE = I.AWB_DATE AND S.FLT_KEY = I.FLT_KEY AND S.FLT_DATE = I.FLT_DATE
		LEFT JOIN (SELECT B.FLT_KEY, B.FLT_DATE, B.AWB_NO, B.AWB_DATE, B.HAWB_NO, B.BRKDN_CODE, SUM(B.OT_BKDWN_PCS) OT_BKDWN_PCS, SUM(B.OT_BKDWN_WT) OT_BKDWN_WT
				   FROM  CST_BD_DISC B
				   LEFT JOIN CST_ACK A ON A.FLT_KEY = B.FLT_KEY AND A.FLT_DATE = B.FLT_DATE AND A.FLT_TYPE = B.FLT_TYPE 
				   		AND A.VER_NO = B.VER_NO AND A.ACK_REC_TYPE = 'BDS'
				   WHERE B.FLT_TYPE = 'I' 
				   AND   B.MSG_TYPE = 'B' 
				   AND A.ACK_STATUS = 'A'
				   GROUP BY B.FLT_KEY, B.FLT_DATE, B.AWB_NO, B.AWB_DATE, B.HAWB_NO, B.BRKDN_CODE) BD
			ON NVL(HS.AWB_NO, S.AWB_NO) = BD.AWB_NO AND NVL(HS.AWB_DATE, S.AWB_DATE) = BD.AWB_DATE AND NVL(HS.FLT_KEY, S.FLT_KEY) = BD.FLT_KEY 
			   AND NVL(HS.FLT_DATE, S.FLT_DATE) = BD.FLT_DATE AND NVL(HS.HAWB_NO, '000000000000000000') = BD.HAWB_NO 
			   AND NVL(HS.ACT_BD_TYPE, S.ACT_BD_TYPE) = BD.BRKDN_CODE 
		LEFT JOIN (SELECT B.FLT_KEY, B.FLT_DATE, B.AWB_NO, B.AWB_DATE, B.HAWB_NO, SUM(B.OT_BKDWN_PCS) OT_BKDWN_PCS, SUM(B.OT_BKDWN_WT) OT_BKDWN_WT,
			 	   		  sum(case when b.BRKDN_CODE in ('LP', 'LC', 'SP', 'SC') then 1 else 0 end) ackInd
				   FROM  CST_BD_DISC B
				   LEFT JOIN CST_ACK A ON A.FLT_KEY = B.FLT_KEY AND A.FLT_DATE = B.FLT_DATE AND A.FLT_TYPE = B.FLT_TYPE 
				   		AND A.VER_NO = B.VER_NO AND A.ACK_REC_TYPE = 'BDS'
				   WHERE B.FLT_TYPE = 'I' 
				   AND   B.MSG_TYPE = 'B' 
				   AND A.ACK_STATUS = 'A' 
				   GROUP BY B.FLT_KEY, B.FLT_DATE, B.AWB_NO, B.AWB_DATE, B.HAWB_NO) BDS
			ON NVL(HS.AWB_NO, S.AWB_NO) = BDS.AWB_NO AND NVL(HS.AWB_DATE, S.AWB_DATE) = BDS.AWB_DATE AND NVL(HS.FLT_KEY, S.FLT_KEY) = BDS.FLT_KEY 
			   AND NVL(HS.FLT_DATE, S.FLT_DATE) = BDS.FLT_DATE AND NVL(HS.HAWB_NO, '000000000000000000') = BDS.HAWB_NO 
		WHERE 		(
			  ((NVL(HS.HCIR_USER, S.CIR_PROC_USER) IS NOT NULL OR BDS.FLT_KEY IS NOT NULL) AND NVL(NVL(HS.ACT_BD_TYPE, S.ACT_BD_TYPE), '*') != 'DM' AND nvl(NVL(HS.ACT_BD_TYPE, S.ACT_BD_TYPE), '*') = NVL(BD.BRKDN_CODE, nvl(NVL(HS.ACT_BD_TYPE, S.ACT_BD_TYPE), '*')) 
			  			AND (NVL(NVL(HS.ABS_HCIR_PCS, S.ABS_CIR_PCS), 0) != NVL(BDS.OT_BKDWN_PCS, 0)
							or NVL(NVL(HS.ABS_HCIR_WT, S.ABS_CIR_WT), 0) != NVL(BDS.OT_BKDWN_WT, 0)))
			  OR (NVL(HS.DAM_USER, S.DAM_PROC_USER) IS NOT NULL 
			  	 		AND BDS.FLT_KEY IS NULL  )
			) and ((s.ind not in ('N', 'HN') and (BDS.FLT_KEY IS NULL or BDS.ACKIND = 0)) or s.ind in ('N', 'HN'))  
		]]>
		AND S.FLT_KEY = #flightKey#
		AND S.FLT_DATE = #flightDate#
		AND A.CATALOG NOT IN ('TM', 'IO')
		ORDER BY A.AWB_NO
	</select>
	<!-- BDDiscrepancyDetails Page ends -->
	<select id="fetchBDDetails"  parameterClass="cargo.cms.customs.bo.BDDiscDetailsBO" resultClass="cargo.cms.customs.bo.BDDiscDetailsBO">
			SELECT FLT_OPR.CARR_CODE AS carrierCode,FLT_OPR.FLT_NO AS flightNo,
			to_char(FLT_OPR.SCH_DATE,'DDMONYY') as flightDate,FLT_OPR.ACT_TIME as arrivalTime,CST_BD_DISC.AWB_NO as awbNo,
			CST_BD_DISC.HAWB_NO as hawbno,
			CST_BD_DISC.AWB_HAWB_PC as awbhawbpc,CST_BD_DISC.AWB_HAWB_WT as awbhawbwt,CST_BD_DISC.MAN_PCS as manpc,CST_BD_DISC.MAN_WT as manwt,CST_BD_DISC.OT_SPE_PCS as suppc,
			CST_BD_DISC.OT_SPE_WT as suppwt FROM FLT_OPR,CST_BD_DISC
			WHERE  FLT_OPR.SCH_DATE = TO_DATE(#flightDate#,'DDMONYY')
 	</select>	
	 <!-- BDSupposedHeader Page starts -->	
	<select id="fetchBDSuppHeader"  parameterClass="cargo.cms.customs.bo.BDDiscDetailsBO" resultClass="cargo.cms.customs.bo.BDDiscDetailsBO">
		SELECT CST_BD_DISC.TR_NO AS trNo, CST_BD_DISC.FLT_KEY AS flightKey,
			to_char(CST_BD_DISC.FLT_DATE,'DDMONYY') AS flightDate,
			CONCAT(CONCAT(SUBSTR(CST_BD_DISC.AWB_NO,0,3),'-'),SUBSTR(CST_BD_DISC.AWB_NO,4)) awbNo,CST_BD_DISC.HAWB_NO AS hawbNo, 
			NVL(CST_BD_DISC.AWB_HAWB_PC,0) as awbHawbPc,NVL(CST_BD_DISC.AWB_HAWB_WT,0) as awbHawbWt,
			NVL(CST_BD_DISC.OT_MAN_PCS,0) as manfPc,
			NVL(CST_BD_DISC.OT_MAN_WT,0) as manfWt,CST_BD_DISC.OT_BKDWN_PCS AS cirPc,CST_BD_DISC.OT_BKDWN_WT AS cirWt,
			NVL(CST_BD_DISC.OT_MAN_PCS,0)+ NVL(CST_BD_DISC.OT_BKDWN_PCS,0) AS manfCirPcs,NVL(CST_BD_DISC.OT_MAN_WT,0)+NVL(CST_BD_DISC.OT_BKDWN_WT,0) AS manfCirWt
            		FROM CST_BD_DISC
			WHERE  CST_BD_DISC.FLT_DATE= TO_DATE(#flightDate#,'DDMONYY') 
			AND CST_BD_DISC.FLT_KEY=#flightKey#
			AND CST_BD_DISC.AWB_NO=#awbNo#
			AND CST_BD_DISC.HAWB_NO=#hawbNo#
			AND CST_BD_DISC.TR_NO= (select max(tr_no) from CST_BD_DISC where CST_BD_DISC.FLT_KEY=#flightKey# AND  
 			upper(to_char(CST_BD_DISC.FLT_DATE, 'ddmonyy'))=#flightDate#
 			AND CST_BD_DISC.AWB_NO=#awbNo#   AND CST_BD_DISC.HAWB_NO=#hawbNo#)
     </select>   	 
   	 <!-- BDSupposedHeader Page ends -->   	 
   	 <!-- BDSupposedDetails  starts -->
	<select id="fetchBDSuppListDtls"  parameterClass="cargo.cms.customs.bo.BDDiscDetailsBO"	resultClass="cargo.cms.customs.bo.BDDiscDetailsBO">
        SELECT FLT_KEY AS flightKey,
				to_char(FLT_DATE,'DDMONYY') as flightDate,
				VER_NO as verNo,
				NVL(BRKDN_CODE,0) as discCode,
				NVL(OT_BKDWN_PCS,0) as dsPc,
				NVL(OT_BKDWN_WT,0) as discWt,
				NVL(OT_SPE_PCS,0) as suppPc,
				NVL(OT_SPE_WT,0) as suppWt
		FROM 	CST_BD_DISC
		WHERE   FLT_DATE = TO_DATE(#flightDate#,'DDMONYY') AND FLT_KEY = #flightKey# 
		AND AWB_NO = #awbNo# AND HAWB_NO = #hawbNo#
		AND MSG_TYPE = 'B' AND FLT_TYPE = 'I' 
		ORDER BY VER_NO
   	</select>
   	<!-- BDSupposedDetails ends -->
   	<!-- BDHistoryHeader  starts -->
	<select id="fetchBDHistHeader"  parameterClass="cargo.cms.customs.bo.BDDiscDetailsBO" resultClass="cargo.cms.customs.bo.BDDiscDetailsBO">
	SELECT F.FLT_KEY AS flightKey, 
		to_char(F.SCH_DATE,'DDMONYY') AS flightDate,
		TO_CHAR(CA.ACK_DATE,'DDMONYY HH24:MI') AS ackDate,
		CS.REC_TYPE as recType,
		DECODE(CS.SEND_STATUS, 'P', 'In Progress', 'W', 'In Progress', 'A', 'Accepted', 'R', 'Rejected', 'E', 'Rejected') AS status,
		CS.VER_NO AS verNo, 
		CS.MSG_TYPE msgType,
		TO_CHAR(CS.SUBM_DATE,'DDMONYY HH24:MI') AS bdsSubmDate 
		FROM FLT_OPR F
		INNER JOIN CST_SUBM CS
			  ON F.SCH_DATE = CS.FLT_DATE	AND F.FLT_KEY = CS.FLT_KEY
		LEFT JOIN CST_ACK CA ON CS.FLT_KEY = CA.FLT_KEY AND CS.FLT_TYPE = CA.FLT_TYPE
			 AND CS.FLT_DATE = CA.FLT_DATE AND CS.VER_NO = CA.VER_NO AND CS.REC_TYPE = CA.ACK_REC_TYPE
		WHERE F.FLT_TYPE = 'A' AND CS.REC_TYPE = 'BDS' 
		AND CS.VER_NO = #verNoForHistory#
		AND F.FLT_KEY = #flightKey#
		AND F.SCH_DATE =#flightDate#
   	</select>
   	<!-- BDHistoryHeader  ends -->
   	<!-- BDHistoryDetails  starts -->   	
	<select id="fetchDSHistory"  parameterClass="cargo.cms.customs.bo.BDDiscDetailsBO" resultClass="cargo.cms.customs.bo.BDDiscDetailsBO">
	   SELECT CONCAT(CONCAT(SUBSTR(AWB_NO,0,3),'-'), SUBSTR(AWB_NO,4)) awbNo, 
					HAWB_NO as hawbNo, NVL(BRKDN_CODE,0) as discType,
					NVL(OT_MAN_PCS,0) as manfPc , NVL(OT_MAN_WT,0) as manfWt, 
					NVL(OT_BKDWN_PCS,0) as bkdnPc, NVL(OT_BKDWN_WT,0)as bkdnWt,
					NVL(OT_SPE_PCS,0) as suppPc, NVL(OT_SPE_WT,0) as suppWt, 
					NVL(OT_INV_PCS,0) as invPc, NVL(OT_INV_WT,0 )as invWt 
		FROM CST_BD_DISC
		WHERE FLT_KEY=#flightKey#  AND FLT_DATE = #flightDate#  AND VER_NO = #verNoForHistory# 
		AND MSG_TYPE = 'B' AND FLT_TYPE = DECODE(#flightType#,'A','I','S','I','N','E','I') 
   	 </select>
	<select id="fetchVerListHistory"  parameterClass="cargo.cms.customs.bo.BDDiscDetailsBO" resultClass="cargo.cms.customs.bo.BDDiscDetailsBO">
		SELECT VER_NO as verNo FROM CST_SUBM WHERE FLT_KEY=#flightKey# AND FLT_DATE =#flightDate# AND 
			REC_TYPE = 'BDS' AND FLT_TYPE = 'I' order by VER_NO
	</select>	   	 
   	<!-- BDHistoryHeader  ends-->   	 	
   	<!-- Checking data before insertion for submit and complete starts --> 
 	<select id="checkBDData"  parameterClass="cargo.cms.customs.bo.BDDiscDetailsBO" resultClass="cargo.cms.customs.bo.BDDiscDetailsBO">   	
			SELECT     CST_SUBM.FLT_DATE AS flightDate,
			           CST_SUBM.FLT_KEY AS flightKey,
			           CST_SUBM.FLT_TYPE AS flightType, 
			           CST_SUBM.REC_TYPE as recType,CST_SUBM.VER_NO as verNo,
			           CST_SUBM.LM_VER,CST_SUBM.SEND_STATUS as status
			FROM       CST_SUBM
			WHERE
				       FLT_DATE =  #flightDate#
		    AND        FLT_KEY = #flightKey#
			AND        FLT_TYPE = DECODE(#flightType#,'A','I','S','I','N','E','I')
			AND        REC_TYPE = 'BDS' 
		    AND        VER_NO = (SELECT MAX(VER_NO) FROM CST_SUBM
			WHERE
				       FLT_DATE =   #flightDate#
			 AND       FLT_KEY =#flightKey#
			 AND       FLT_TYPE = DECODE(#flightType#,'A','I','S','I','N','E','I')
			 AND       REC_TYPE = 'BDS')
   	 </select>   	 
   	 <!-- Checking data before insertion for submit and complete starts -->
   	 <!-- Inserting record to CST_SUBM for submit button starts -->
	<insert id="saveBDDataToDBase"  parameterClass="cargo.cms.customs.bo.BDDiscDetailsBO"> 
	INSERT INTO CST_SUBM( VER_NO, REC_TYPE, SUBM_DATE, LM_USER_ID, LM_DATE, 
		LM_VER, SEND_STATUS, FLT_KEY,  FLT_DATE,FLT_TYPE) 
		VALUES(#verNo#, 'BDS', SYSDATE, #crUserID#, SYSDATE,'2', 'P', nvl(#vesselflightKey#,#flightKey#), 
		nvl(#vesselflightDate#,#flightDate#),DECODE(#flightType#,'A','I','S','I','N','E','I'))
	</insert>	
	
	 <!-- Inserting record to CST_SUBM for submit button ends-->
	 <!-- Count the record before insertion wheather it exists or not starts-->	
	<select id="doesBDDtlsExistInCstSubm"  parameterClass="cargo.cms.customs.bo.BDDiscDetailsBO" resultClass="java.lang.String">	
			SELECT 	count(1) AS countVal 	
			FROM 	CST_SUBM 	
			WHERE 	CST_SUBM.FLT_KEY=#flightKey# AND 
			CST_SUBM.FLT_DATE=#flightDate#
		 	AND CST_SUBM.FLT_TYPE=DECODE(#flightType#,'A','I','S','I','N','E','I')
		 	AND CST_SUBM.REC_TYPE='BDS'	
		 	AND LM_DATE = (select MAX(LM_DATE) from CST_SUBM WHERE FLT_KEY = #flightKey#
			AND FLT_DATE = #flightDate#
			AND FLT_TYPE = 'I')		
	</select>	 
	 <!-- Count the record before insertion wheather it exists or not ends-->
	 <parameterMap id="submitbdMap" class="map" >
		<parameter property="FLT_KEY" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="FLT_DATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="STFS_FLT_KEY" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="STFS_FLT_DATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="VER_NO" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="MSG_TYPE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="USER_ID" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="FLT_TYPE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
   </parameterMap>
	<procedure id="sub_bd_disc_proc" parameterMap="submitbdMap" >
		{  call pkg_sub_bd_disc.sub_bd_disc(?,?,?,?,?,?,?,?)  }
	</procedure>
	
	<procedure id="sub_bd_disc_proc_exp" parameterMap="submitbdMap" >
		{  call pkg_sub_bd_disc.sub_bd_disc_exp(?,?,?,?,?,?,?,?)  }
	</procedure>
	
   	<!-- Insert the record to CST_BD_DISC for submit button starts-->
	 	<insert id="savebdCompleteCstBdDisc"  parameterClass="cargo.cms.customs.bo.BDDiscDetailsBO"> 
		INSERT INTO CST_BD_DISC( TR_NO,VER_NO,
			   MSG_TYPE,
			   LM_USER_ID,
			   LM_DATE,
			   LM_VER,
			   FLT_KEY,
			   FLT_DATE,
			   FLT_TYPE
				  ) 
			VALUES( CST_BD_DISC_SEQ.nextval,
			#verNo#,
			'C',
			#crUserID#,
			sysdate,
			'1',
			#flightKey#,
			#flightDate#,
			DECODE(#flightType#,'A','I','S','I','N','E','I')
			)
	</insert>   	
   	<insert id="savebdListtoCstBdDisc"  parameterClass="cargo.cms.customs.bo.BDDiscDetailsBO"> 
		INSERT INTO CST_BD_DISC( TR_NO,VER_NO,
			   AWB_NO, 
			   AWB_DATE,
			   HAWB_NO,
			   OT_MAN_PCS,
			   MSG_TYPE,
			   LM_USER_ID,
			   LM_DATE,
			   LM_VER,
			   OT_BKDWN_PCS,
			   OT_BKDWN_WT,
			   OT_SPE_PCS,
			   FLT_KEY,
			   FLT_DATE,
			   FLT_TYPE,
			
			   BRKDN_CODE,
			   OT_CTM_REF_N, 
			   OT_MAN_WT, 
			   OT_SPE_WT, 
			   OT_INV_PCS, 
			   OT_INV_WT, 
			   HANDLR,
			   OT_CNSL_I  
				  ) 
			VALUES( CST_BD_DISC_SEQ.nextval,
			#verNo#,
			#awbNo#, 
			to_date(#awbDate#,'DDMONYY'),
			#hawbNo#,
			#manfPc#,
			'B',
			#crUserID#,
			sysdate,
			'1',
			#discPcs#,
			#discWt#,
			#suppPc#,
			nvl(#vesselflightKey#,#flightKey#),
			nvl(#vesselflightDate#,#flightDate#),
			DECODE(#flightType#,'A','I','S','I','N','E','I'),
	
			#type#,
			#ctmRefNo#,
			#manfWt#,
			#suppWt#,
			#invPc#,
			#invWt#,
			#handler#,
			#consoleInd#
			)
	</insert>	
	<!-- Insert the record to CST_BD_DISC for submit button ends-->	
	<!-- Insert the record to CST_SUBM for COMPLETE button starts-->	
	<insert id="saveBDCompleteData"  parameterClass="cargo.cms.customs.bo.BDDiscDetailsBO">    
   INSERT INTO CST_SUBM( VER_NO, REC_TYPE, SUBM_DATE,SEND_DATE, LM_USER_ID, LM_DATE,BD_COMPLETE, 
			LM_VER, SEND_STATUS, FLT_KEY,  FLT_DATE,FLT_TYPE) 
			VALUES(#verNo#, 'BDS', SYSDATE,SYSDATE,#crUserID#, 
			SYSDATE,'Y','2', 'P', #flightKey#, #flightDate#,DECODE(#flightType#,'A','I','S','I','N','E','I'))	
	</insert>
	<!-- Insert the record to CST_SUBM for COMPLETE button ends-->	
	 <!-- Count the record before insertion wheather it exists or not starts-->	 
	<select id="doesBDDtlsExist"  parameterClass="cargo.cms.customs.bo.BDDiscDetailsBO" resultClass="java.lang.String">	
	SELECT 	count(1) AS countValDB  	
	FROM 	CST_BD_DISC 	
	WHERE 	CST_BD_DISC.FLT_KEY=#flightKey# AND 
			CST_BD_DISC.FLT_DATE=#flightDate#
		 	AND CST_BD_DISC.AWB_NO=#awbNo#
		 	AND CST_BD_DISC.HAWB_NO=#hawbNo#
			
	 </select>
	 <!-- Count the record before insertion wheather it exists or not ends-->
	<select id="checkForShowCompleteButton"  parameterClass="cargo.cms.customs.bo.BDDiscDetailsBO" resultClass="java.lang.Integer">
		select count(1)
		from cst_subm where flt_key = #flightKey#
		and flt_date = to_Date(#flightDate#,'DDMONYY')  and flt_type = DECODE(#flightType#,'A','I','S','I','N','E','I') and bd_complete = 'Y' 
		and send_status in ('A', 'P', 'W') and rec_type = 'BDS'
	</select>

	 <select id="versionNoCheck"  parameterClass="cargo.cms.customs.bo.BDDiscDetailsBO" resultClass="java.lang.Integer">
			select COUNT(1) from cst_subm where REC_TYPE = 'BDS'  AND 
			flt_type = DECODE(#flightType#,'A','I','S','I','N','E','I') and  
			FLT_KEY = nvl(#vesselflightKey#,#flightKey#) AND 
			FLT_DATE = to_Date(nvl(#vesselflightDate#,#flightDate#),'DDMONYY') 
			AND VER_NO = #verNo#
	</select>
	<!-- Can not submit as Cargo Irregularity exist and CIR is not maintained. -->
	<select id="checkCargoIrregularityAndCIR"  parameterClass="map" resultClass="java.lang.Integer">
		select count(1) from imp_car_shp 
		where flt_key = '' and flt_date = '' and awb_no = '' 
		and ((recd_pcs != MANIFEST_PCS and cir_pcs_type is null) or (recd_wt != MANIFEST_wt and cir_wt_type is null))
	</select>
	<!-- ###################################################################################################################################################### -->
   	<!-- DDS_CST_BDS_SUB Related Queries Added By Varadaraj Muni - 09-DECEMBER-2010  END -->
   	<!-- ###################################################################################################################################################### -->
   	
  <!-- ###################################################################################################################################################### -->
  <!-- List Discrepancy Related Queries Added By Varadaraj Muni - 09-DECEMBER-2010  -->
  <!-- ###################################################################################################################################################### -->   	 	
  <!--select record  List Discrepancy Details-->
  <select id="fetchDiscrListDetails"  parameterClass="cargo.cms.customs.bo.ListDiscrepancyBO" resultClass="cargo.cms.customs.bo.ListDiscrepancyBO">
	
	 SELECT F.FLT_KEY AS flightKey, 
			to_char(F.SCH_DATE,'DDMONYY') AS flightDate,
			PKG_COMMON.get_flt_ata(F.FLT_KEY, F.SCH_DATE, 'A')  as arrivalTime ,
			NVL(CS.VER_NO, 0) AS lastVersn,
			DECODE(NVL(S.Pty, 0), 0, 'No','Yes') AS discrPrty, 
			TO_CHAR(CS.SUBM_DATE, 'DDMONYY HH24:mi') AS bdsSubmDate,
			TO_CHAR(ST.ACK_DATE,'DDMONYY HH24:mi') AS ackDate,
			DECODE(CS.SEND_STATUS, NULL, 'No Subm', 'P', 'In Progress', 'W', 'In Progress', 'A', 'Accepted', 'R', 'Rejected', 'E', 'Rejected') AS status			
			FROM FLT_OPR F
			LEFT JOIN (SELECT S.FLT_KEY, S.FLT_DATE, 
				 	  SUM(NVL(CA.Pty, 0)) Pty
				 	  FROM (SELECT 
					 	  	  CASE WHEN DAM_PROC_USER IS NOT NULL THEN DAM_PCS
							  	   WHEN CIR_PCS_TYPE = 'SL' THEN -1 * CIR_PCS
							  	   WHEN CIR_PCS_TYPE = 'SP' THEN CIR_PCS
							  END ABS_CIR_PCS,
					 	  	  CASE WHEN DAM_PROC_USER IS NOT NULL THEN DAM_WT
							  	   WHEN CIR_WT_TYPE = 'SL' THEN -1 * CIR_WT
							  	   WHEN CIR_WT_TYPE = 'SP' THEN CIR_WT
							  END ABS_CIR_WT,
							 CASE WHEN DAM_PROC_USER IS NOT NULL THEN 'DM'
							 	  WHEN CIR_PROC_USER IS NOT NULL AND MANIFEST_PCS = 0 AND CIR_PCS_TYPE = 'SP' THEN 'SC'
								  WHEN CIR_PROC_USER IS NOT NULL AND MANIFEST_PCS > 0 AND CIR_PCS_TYPE = 'SP' THEN 'SP'
							 	  WHEN CIR_PROC_USER IS NOT NULL AND MANIFEST_PCS = 0 AND CIR_PCS_TYPE = 'SL' THEN 'LC'
								  WHEN CIR_PROC_USER IS NOT NULL AND MANIFEST_PCS > 0 AND CIR_PCS_TYPE = 'SL' THEN 'LP'
							  END BD_TYPE, 
							  S.* FROM IMP_CAR_SHP S) S
					  LEFT JOIN MAST_HAWB H ON S.AWB_NO = H.AWB_NO AND S.AWB_DATE = H.AWB_DATE
					  left join (SELECT AWB_NO, AWB_DATE, FLT_KEY, FLT_DATE,
					  	   		decode(REL_IND, null, 0, 1) Pty, 
					  			decode(REL_IND, null, 1, 0) Nrml
								FROM cst_awb) ca 
					  	   ON S.AWB_NO = ca.AWB_NO AND S.AWB_DATE = ca.AWB_DATE AND S.FLT_KEY = ca.FLT_KEY AND S.FLT_DATE = ca.FLT_DATE
					  LEFT JOIN (SELECT 
						 	  	  CASE WHEN DAM_USER IS NOT NULL THEN DAM_PCS
								  	   WHEN HCIR_PCS_TYPE = 'SL' THEN -1 * HCIR_PCS
								  	   WHEN HCIR_PCS_TYPE = 'SP' THEN HCIR_PCS
								  END ABS_HCIR_PCS,
						 	  	  CASE WHEN DAM_USER IS NOT NULL THEN DAM_WT
								  	   WHEN HCIR_WT_TYPE = 'SL' THEN -1 * HCIR_WT
								  	   WHEN HCIR_WT_TYPE = 'SP' THEN HCIR_WT
								  END ABS_HCIR_WT,
								  CASE WHEN DAM_USER IS NOT NULL THEN 'DM'
								 	  WHEN HCIR_USER IS NOT NULL AND SEC_CHECK = 'Y' THEN 'SC'
									  WHEN HCIR_USER IS NOT NULL AND HCIR_PCS_TYPE = 'SP' THEN 'SP'
								 	  WHEN HCIR_USER IS NOT NULL AND M.HAWB_PCS = 0 AND HCIR_PCS_TYPE = 'SL' THEN 'LC'
									  WHEN HCIR_USER IS NOT NULL AND M.HAWB_PCS > 0 AND HCIR_PCS_TYPE = 'SL' THEN 'LP'
								  END BD_TYPE,
								  M.HAWB_PCS H_PCS,
								  M.HAWB_WT	 H_WT, 
								  S.* FROM IMP_HAWB_STRG_DTL S
								  JOIN MAST_HAWB M ON S.AWB_NO = M.AWB_NO AND S.AWB_DATE = M.AWB_DATE AND S.HAWB_NO = M.HAWB_NO) HS 
							ON S.AWB_NO = HS.AWB_NO AND S.AWB_DATE = HS.AWB_DATE AND S.FLT_KEY = HS.FLT_KEY AND S.FLT_DATE = HS.FLT_DATE AND H.HAWB_NO = HS.HAWB_NO
					  LEFT JOIN (SELECT B.FLT_KEY, B.FLT_DATE, B.AWB_NO, B.AWB_DATE, B.HAWB_NO, B.BRKDN_CODE, SUM(B.OT_BKDWN_PCS) OT_BKDWN_PCS, SUM(B.OT_BKDWN_WT) OT_BKDWN_WT
								   FROM  CST_BD_DISC B
								   WHERE B.FLT_TYPE = 'I' 
								   AND   B.MSG_TYPE = 'B' 
								   GROUP BY B.FLT_KEY, B.FLT_DATE, B.AWB_NO, B.AWB_DATE, B.HAWB_NO, B.BRKDN_CODE) BD
							ON NVL(HS.AWB_NO, S.AWB_NO) = BD.AWB_NO AND NVL(HS.AWB_DATE, S.AWB_DATE) = BD.AWB_DATE AND NVL(HS.FLT_KEY, S.FLT_KEY) = BD.FLT_KEY 
							   AND NVL(HS.FLT_DATE, S.FLT_DATE) = BD.FLT_DATE AND NVL(HS.HAWB_NO, '000000000000000000') = BD.HAWB_NO 
							   AND NVL(HS.BD_TYPE, S.BD_TYPE) = BD.BRKDN_CODE 
					  WHERE (NVL(HS.HCIR_USER, S.CIR_PROC_USER) IS NOT NULL OR NVL(HS.DAM_USER, S.DAM_PROC_USER) IS NOT NULL 
							 OR BD.FLT_KEY IS NOT NULL) 
					  GROUP BY S.FLT_KEY, S.FLT_DATE) S 
				ON F.FLT_KEY = S.FLT_KEY AND F.SCH_DATE = S.FLT_DATE
            LEFT JOIN (SELECT FLT_KEY, FLT_DATE, SUBM_DATE, VER_NO, SEND_STATUS
					  FROM (SELECT FLT_KEY, FLT_DATE, SUBM_DATE, VER_NO, SEND_STATUS,
						   DENSE_RANK() OVER (PARTITION BY FLT_KEY, FLT_DATE ORDER BY SUBM_DATE DESC) RANK 
						   FROM  CST_SUBM 
						   WHERE FLT_TYPE = 'I' 
						   AND   REC_TYPE = 'BDS' AND BD_COMPLETE IS NULL) 
					  WHERE RANK = 1) CS 
				 ON F.FLT_KEY = CS.FLT_KEY AND F.SCH_DATE = CS.FLT_DATE
            LEFT JOIN (SELECT FLT_KEY, FLT_DATE, VER_NO, ACK_DATE
					  FROM (SELECT FLT_KEY, FLT_DATE, VER_NO, ACK_DATE,
						   DENSE_RANK() OVER (PARTITION BY FLT_KEY, FLT_DATE, VER_NO ORDER BY ACK_DATE DESC) RANK 
						   FROM  CST_ACK 
						   WHERE ACK_REC_TYPE IN ('BDS') AND FLT_TYPE = 'I') 
					  WHERE RANK = 1) ST
				 ON CS.FLT_KEY = ST.FLT_KEY AND CS.FLT_DATE = ST.FLT_DATE AND CS.VER_NO = ST.VER_NO
			WHERE  F.FLT_TYPE='A'
				  AND to_char(SCH_DATE,'DDMONYY') between to_date(#startDate#,'DDMONYY') AND to_date(#endDate#,'DDMONYY')
			ORDER BY  SCH_DATE  
	     
	</select>
	<!--select record  List Discrepancy Details ends-->
	<!-- ###################################################################################################################################################### -->
  	<!-- List Discrepancy Related Queries Added By Varadaraj Muni - 09-DECEMBER-2010 - END -->
  	<!-- ###################################################################################################################################################### -->
  	
   	<!-- ###################################################################################################################################################### -->
  	<!-- Submit Amended Csgn Related Queries Added By Varadaraj Muni - 10-DECEMBER-2010 -->
  	<!-- ###################################################################################################################################################### -->
   	<select id="fetchAmdFlightRecord"  parameterClass="cargo.cms.customs.bo.FlightListBO" resultClass="cargo.cms.customs.bo.FlightListBO">
		SELECT
			 A.FLT_KEY as flightKey,
			A.SCH_DATE AS scheduleDate,
			 A.FLT_TYPE as flightType,
			A.stfs_flt_key as vesselflightKey,
			to_char(A.stfs_flt_date,'DDMONYY') as vesselflightDate,
			to_char(A.ACT_DATE, 'DDMONYY') as actulDate,
			to_char(A.EST_DATE, 'DDMONYY') as estDate,
			to_char(A.SCH_DATE, 'DDMONYY') as scheduledDate,
			DECODE(A.CGO_ACFT_TYPE,
             'PSR','Passenger',
             'COM','Combi',
             'FRE','Freighter',
             'OTH','Other') as aircraftType,
             (CASE WHEN A.ACT_TIME IS NOT NULL THEN
               PKG_COMMON.get_flt_ata(A.FLT_KEY,#flightDate#,A.FLT_TYPE)
              END)  AS arrivalTime,
             (CASE WHEN A.EST_TIME IS NOT NULL THEN
              PKG_COMMON.get_flt_eta(A.FLT_KEY,#flightDate#,A.FLT_TYPE) 
              END)  AS estimatedTime, 
              (CASE WHEN A.SCH_TIME IS NOT NULL THEN
               SUBSTR(LPAD(A.SCH_TIME,4,'0'),1,2)||':'||SUBSTR(LPAD(A.SCH_TIME,4,'0'),3,2)
              END)  AS scheduleTime, 
             A.PRTY_IND as flightPrty,
			E.FREEZE_IND as freezeInd,
			A.VESSEL_ID as vesselId,
			  A.VESSEL_NAME as vesselName,
			  A.VOYAGE_NUM as voyageNum,
			  A.CALL_SIGN_VESSEL as callSignVessel,
			  A.SHIPPING_AGENT as shippingAgent			 			 
			FROM FLT_OPR A,FLT_OPR_EVENTS E ,MAST_CARRIER M	
			WHERE A.TR_NO = E.TR_NO AND M.CODE=A.CARR_CODE			
			AND A.SCH_DATE =  TO_DATE(#flightDate#, 'DDMONYY')
			<isNotEmpty property="flightType">
				<isEqual property="flightType" compareValue="A">
			         AND  A.FLT_TYPE = 'A' AND NVL(m.vessel_flt_yn,'N')='N'
			    </isEqual>
			    <isEqual property="flightType" compareValue="N">
			         AND  A.FLT_TYPE = 'D' AND NVL(m.vessel_flt_yn,'N')='Y'
			    </isEqual>	
			    <isEqual property="flightType" compareValue="S">
			         AND  A.FLT_TYPE = 'A' AND NVL(m.vessel_flt_yn,'N')='Y'
			    </isEqual>	
			 </isNotEmpty>	
			<isEmpty property="flightType">
			     	AND A.FLT_TYPE = 'A'
		 	</isEmpty>								
		 	<isNotEmpty property="carrierCode">
				AND A.CARR_CODE = #carrierCode# 
			</isNotEmpty>
			<isNotEmpty property="flightNo">
				AND A.FLT_NO = #flightNo# 
			</isNotEmpty>
   	</select>
   <select id="fetchAmdCnsgn"  parameterClass="cargo.cms.customs.bo.FlightListBO" resultClass="cargo.cms.customs.bo.IntCnsgnDetailsBO">					   
	 SELECT A.flightKey,A.flightDate,A.awbNo,to_char(B.AWB_DATE,'DDMONYY') as
		awbDate,
		SUBSTR(A.awbNo, 1,3)||'-'||SUBSTR(A.awbNo,4,LENGTH(A.awbNo))as disAwbNo,
		( SELECT FUN_VSL_SHP_PPK_TYPE(A.flightKey,A.flightDate,'I',A.awbNo) FROM DUAL ) as ppkInd,
		SUBSTR(A.awbNo,0,3) as awbPfx,
		SUBSTR(A.awbNo,4) as awbSfx,
		NVL(A.cstContent,B.CONTENT) as contents,A.ORG as origin,
		B.BRD_POINT as loadingPoint,decode(B.CNSL_IND,'N','NO','YES') AS cnsl,
		A.DEST as dest,A.manifestPCS,A.manifestWt,
		NVL(C.hawbPCS,0)AS  hawbPCS,C.sumHawbNo,trim(to_char(nvl(C.hawbWt,0),'999999990.0')) as hawbWt,
		NVL(A.awbPCS_CST,0)AS  awbPCS,
		A.awbwt_CST as awbWt,
        A.relInd as priorityCode,
        nvl(A.relIndOrder, DECODE(A.trfType ,'IF','F','TT','M','QT','F')) as priorityCodeOrder,
		DECODE(A.relInd,'F','Interface','M','Tarmac', 'R','Immediate','S','Ship-side','X','Mixed') as priority,
   		pkg_cst.get_shpt_type(sa.awb_No, sa.awb_Date, nvl(a.handler, nvl(sa.ACCS_HANDLER, 'CPCT')), sa.CONSOLE_IND) as shpType,
		DECODE((SELECT COUNT(1) FROM CST_AWB WHERE AWB_NO = A.awbNo AND AWB_DATE = B.AWB_DATE AND FLT_KEY =A.flightKey AND FLT_DATE = A.flightDate
    	AND ACCS_IND = 'INT'), 0, 'N', 'Y') as submissionDone,
      	A.trfType  as trfType,
		AWB.INT_YN AS icsIndicator, 
  		AWB.AMD_YN AS amdIndicator,
  		AWB.IMPCAR_YN AS impCarIndicator,
  		AWB.LBS_YN AS lbsIndicator,
  		A.splHandCode 
	    FROM
		(select sub.* , sub.relIndYN as relInd , nvl(sub.relIndYN, DECODE(FUN_GET_TRF_TYPE (sub.flightKey, sub.flightDate, sub.awbNo,  sub.awbDate),'IF','F','TT','M','QT','F')) as relIndOrder ,
          FUN_GET_TRF_TYPE (sub.flightKey, sub.flightDate, sub.awbNo,  sub.awbDate) trfType from 
    	(SELECT EDI_FFM_MSG.FLT_KEY AS flightKey,
				  EDI_FFM_MSG.FLT_DATE AS flightDate,
				  EDI_FFM_SHP.AWB_NO AS awbNo, 
          EDI_FFM_SHP.AWB_Date AS awbDate, 
				  SUM(EDI_FFM_SHP.MAN_PCS) AS manifestPCS,
				  SUM(EDI_FFM_SHP.MAN_WT) AS manifestWt,
				  NVL(MAX(CST_AWB.PCS),0) AS awbPCS_CST,
				  NVL(MAX(CST_AWB.WGT),0) AS awbWt_CST,
				  MIN(EDI_FFM_SHP.ROWID) RID,
				  MAX(CST_AWB.CONTENT) AS cstContent,
				  CST_AWB.REL_IND AS relIndYN,
				  MAX(CST_AWB.ORG) AS ORG,
				  MAX(CST_AWB.DES) AS DEST,     
				  CST_AWB.HDLG_AGENT as handler,
        (CST_AWB.SPH_SPL_CODE1 ||''||DECODE(CST_AWB.SPH_SPL_CODE2,NULL,'','','',','||CST_AWB.SPH_SPL_CODE2)
          ||''||DECODE(CST_AWB.SPH_SPL_CODE3,NULL,'','','',','||CST_AWB.SPH_SPL_CODE3)
          ||''||DECODE(CST_AWB.SPH_SPL_CODE4,NULL,'','','',','||CST_AWB.SPH_SPL_CODE4)
          ||''||DECODE(CST_AWB.SPH_SPL_CODE5,NULL,'','','',','||CST_AWB.SPH_SPL_CODE5)
          ||''||DECODE(CST_AWB.SPH_SPL_CODE6,NULL,'','','',','||CST_AWB.SPH_SPL_CODE6)
          ||''||DECODE(CST_AWB.SPH_SPL_CODE7,NULL,'','','',','||CST_AWB.SPH_SPL_CODE7)
          ||''||DECODE(CST_AWB.SPH_SPL_CODE8,NULL,'','','',','||CST_AWB.SPH_SPL_CODE8)
          ||''||DECODE(CST_AWB.SPH_SPL_CODE9,NULL,'','','',','||CST_AWB.SPH_SPL_CODE9)) AS splHandCode      
		  FROM EDI_FFM_MSG
		  INNER JOIN EDI_FFM_SHP ON EDI_FFM_MSG.TR_NO = EDI_FFM_SHP.TR_NO
		  LEFT JOIN CST_AWB ON CST_AWB.AWB_NO = EDI_FFM_SHP.AWB_NO AND
		     EDI_FFM_MSG.FLT_KEY = CST_AWB.FLT_KEY AND 
		     EDI_FFM_MSG.FLT_DATE = CST_AWB.FLT_DATE
		  WHERE EDI_FFM_MSG.FLT_KEY = #flightKey#
		  AND EDI_FFM_MSG.FLT_DATE = to_date(#flightDate#,'DDMONYY')
					AND EDI_FFM_MSG.FFM_STATUS IN('P','F')
		  GROUP BY EDI_FFM_SHP.AWB_NO, EDI_FFM_SHP.AWB_Date,EDI_FFM_MSG.FLT_KEY, EDI_FFM_MSG.FLT_DATE,CST_AWB.REL_IND,CST_AWB.HDLG_AGENT,CST_AWB.SPH_SPL_CODE1,
      CST_AWB.SPH_SPL_CODE2,CST_AWB.SPH_SPL_CODE3,CST_AWB.SPH_SPL_CODE4,CST_AWB.SPH_SPL_CODE5,CST_AWB.SPH_SPL_CODE6,CST_AWB.SPH_SPL_CODE7,CST_AWB.SPH_SPL_CODE8,
      CST_AWB.SPH_SPL_CODE9) sub) A
	    join EDI_FFM_SHP B on A.RID = B.ROWID 
		left join imp_car_shp s on s.AWB_NO = a.awbNo AND s.FLT_KEY = a.flightKey AND s.FLT_DATE = a.flightDate
		left join imp_car_awb sa on sa.AWB_NO = a.awbNo and sa.awb_date = s.awb_date
		LEFT JOIN (SELECT L.AWB_NO, l.awb_date,
					NVL(SUM(L.PCS),0) as hawbPCS,
					NVL(SUM(L.WGT),0) as hawbWt,
					NVL(COUNT(L.HAWB_NO),0) AS sumHawbNo
				FROM CST_HAWB L
				WHERE EXISTS( SELECT N.AWB_NO
					FROM EDI_FFM_MSG M, EDI_FFM_SHP N
					WHERE M.TR_NO = N.TR_NO
					AND M.FLT_KEY = #flightKey#
					AND M.FLT_DATE = to_date(#flightDate#,'DDMONYY')
					AND M.FFM_STATUS IN('P','F')
					AND N.AWB_NO = L.AWB_NO)
				AND CHANGE_IND!='D'
				GROUP BY L.AWB_NO, l.awb_date) C on sa.awb_No = C.awb_No  and sa.awb_Date = c.awb_Date
		LEFT JOIN CST_SUBM D ON D.FLT_KEY = a.flightKey AND D.FLT_DATE = a.flightDate AND D.REC_TYPE = 'INT' and send_status = 'A'
		LEFT JOIN AWB ON sa.AWB_NO = AWB.AWB_NO and sa.awb_date = AWB.AWB_DATE
		ORDER BY relInd,priorityCodeOrder,A.awbNo	 
   	</select>
   	<insert id="saveAmdCnsgnDetails" parameterClass="cargo.cms.customs.bo.FlightListBO" >		
		 INSERT INTO CST_SUBM_TEMP( VER_NO, 
			 		REC_TYPE, 
			 		SUBM_DATE, 
			 		LM_USER_ID, 
			 		LM_DATE, 
				 	LM_VER, 
				 	SEND_STATUS, 
				 	FLT_KEY, 
				 	FLT_DATE,
				 	FLT_TYPE) 
		VALUES('1',	'AMD',
					 SYSDATE, 
					 #userID#, 
					 SYSDATE,
					 '2', 
					 'P', 
					 #flightKey#, 
					 #flightDate#,
					 DECODE(#flightType#,'A','I','S','I','N','E',#flightType#))	
	</insert>
	<select id="checkIntCnsgnList"  parameterClass="cargo.cms.customs.bo.FlightListBO" resultClass="cargo.cms.customs.bo.FlightListBO">				
		SELECT 
		 FLT_KEY AS flightKey,
	     FLT_DATE AS flightDate,
		 FLT_TYPE AS flightType,
		 SEND_STATUS AS status,
		 VER_NO AS versionNo,
		 REC_TYPE AS recType		 
		FROM CST_SUBM		
		WHERE 		
			FLT_KEY = #flightKey#
			AND FLT_DATE = TO_DATE(#flightDate#, 'DD-MM-YY')
			AND FLT_TYPE = 'I'
			AND REC_TYPE=#recType#
			AND LM_DATE = (select MAX(LM_DATE) from CST_SUBM WHERE FLT_KEY = #flightKey#
			AND FLT_DATE = TO_DATE(#flightDate#, 'DD-MM-YY')
			AND FLT_TYPE = 'I')						
	</select>
	<select id="fetchAmdTotalCnsgn"  parameterClass="cargo.cms.customs.bo.FlightListBO" resultClass="cargo.cms.customs.bo.FlightListBO">	
     SELECT count(awbNo)AS mawb,sum(decode(cnsl,'YES',1)) as cnslCnsgn, sum(decode(cnsl,'NO',1)) as simpleCnsgn,sum(hawbPcs)AS hawb from (SELECT S.AWB_NO as awbNo,
			CONTENT as contents,ORG as origin,S.BRD_POINT as loadingPoint,DEST as dest,PCS as awbPCS,
			FLT_KEY as flightKey,FLT_DATE as flightDate,MAN_PCS as manifestPCS,COUNT(HAWB_NO) hawbPcs,
			decode(CNSL_IND,'N','NO','YES') AS cnsl
			FROM EDI_FFM_SHP S INNER JOIN EDI_FFM_MSG M ON
			S.TR_NO = M.TR_NO
			AND M.COPY_NO = (SELECT MAX(COPY_NO) FROM EDI_FFM_MSG WHERE FLT_KEY = #flightKey#
			AND FLT_DATE=#flightDate#)
			AND M.FLT_DATE =#flightDate#
			LEFT OUTER JOIN EDI_FWB ON
			EDI_FWB.AWB_NO = S.AWB_NO 
			LEFT OUTER JOIN EDI_FHL F ON  
			S.AWB_NO = F.AWB_NO
			LEFT OUTER JOIN EDI_FHL_HAWB H ON
			H.TR_NO = F.TR_NO
			AND F.COPY_NO = (SELECT MAX(COPY_NO) FROM EDI_FHL WHERE FLT_KEY = #flightKey# AND FLT_DATE=#flightDate# 
			AND AWB_NO=S.AWB_NO) GROUP BY S.AWB_NO,CONTENT,ORG,S.BRD_POINT,DEST,PCS,FLT_KEY,FLT_DATE,MAN_PCS,CNSL_IND)
	</select>
	 <select id="fetchExternalUserDetails"  parameterClass="cargo.cms.customs.bo.FlightListBO" resultClass="cargo.cms.customs.bo.FlightListBO">  
  		SELECT CARR_CODE AS carrierCode,SELF_HANDLING FROM CUST_COMPANY INNER JOIN sec_user on CUST_COMPANY.code =  sec_user.CUST_NO and sec_user.CODE = #userID#
		and SELF_HANDLING = 'Y' 
 	</select> 
 	<!-- this is for amendedConsignment sql query -->
  
   <select id="checkAmdFlightClear"  parameterClass="cargo.cms.customs.bo.FlightListBO" resultClass="cargo.cms.customs.bo.FlightListBO">  	
   		   SELECT NVL(VER_NO,0)AS intMaxVersion  FROM CST_ACK C,FLT_OPR f  
			WHERE c.flt_key         =NVL(f.stfs_flt_key,f.flt_key)
				  AND c.flt_date        =NVL(f.stfs_flt_date,f.sch_date)
				  AND c.flt_type        =DECODE(#flightType#,'S','I','A','I','N','E','I')
				  AND f.flt_key         = #carrierCode#||#flightNo#
				  AND f.sch_date        = to_date(#flightDate#,'ddmonyy')
				  AND f.flt_type        =DECODE(#flightType#,'A','A','S','A','N','D','A')
				  AND ACK_REC_TYPE = 'CLR' AND NVL(ACK_STATUS,'N')!='M' AND ROWNUM = 1	
   	</select>
   	
   	<select id="checkInitConsignmentExists"  parameterClass="cargo.cms.customs.bo.FlightListBO" resultClass="cargo.cms.customs.bo.FlightListBO">	
			select send_status as submitedStatus, rec_type as recType from cst_subm 
				where 
					FLT_KEY = #flightKey# 
					and FLT_DATE  = TO_DATE(#flightDate#,'ddMONyy') 
					and flt_type=DECODE(#flightType#,'A','I','S','I','N','E','I') and rec_type='INT' 
					AND VER_NO = (SELECT MAX(VER_NO) 
				  		FROM CST_SUBM 
				  			WHERE FLT_KEY = #flightKey# 
							AND FLT_DATE  = TO_DATE(#flightDate#,'ddMONyy') 
								AND FLT_TYPE = DECODE(#flightType#,'A','I','S','I','N','E','I') AND rec_type='INT')
	</select>	
	<select id="checkAmdConsignmentExists"  parameterClass="cargo.cms.customs.bo.FlightListBO" resultClass="cargo.cms.customs.bo.FlightListBO">	
			select 
				send_status as submitedStatus,
				 rec_type as recType
						from 
							cst_subm where 
								FLT_KEY = #flightKey# 
								and FLT_DATE = TO_DATE(#flightDate#,'ddMONyy') 
								and flt_type='I' 
								and rec_type='AMD' AND
		 						VER_NO = (SELECT MAX(VER_NO)
		 								 FROM 
		 								 	CST_SUBM WHERE FLT_KEY = #flightKey# 
		 								 		AND FLT_DATE = #flightDate#  
		 								 		AND rec_type='AMD' 
		 								 		AND FLT_TYPE = 'I')
   	</select>
   	<select id="checkNilCargo"  parameterClass="cargo.cms.customs.bo.FlightListBO" resultClass="cargo.cms.customs.bo.FlightListBO">
   		SELECT COUNT(C.AWB_NO) as nilCargoCount, SUM(DECODE(B.NIL_IND, 'Y', 1, 0)) as nilCargoSegment    
    	FROM EDI_FFM_MSG A, EDI_FFM_ULD B, EDI_FFM_SHP C
   		WHERE A.TR_NO = B.TR_NO
     			AND B.TR_NO = C.TR_NO(+)
     			AND B.DOC_LINE_NO = C.UDOC_LINE_NO(+)
     			AND A.FLT_KEY = #flightKey#
     			AND A.FLT_DATE = #flightDate#
     			AND A.FFM_STATUS = 'P'			
   	</select>
	<select id="maintainAmdCnsgnDetails"  parameterClass="cargo.cms.customs.bo.FlightListBO" resultClass="cargo.cms.customs.bo.FlightListBO">	     
		SELECT actn AS action,awbNo as awbNo,hawbNo as hawbNo,
		SUBSTR(awbNo, 1,3)||'-'||SUBSTR(awbNo,4,LENGTH(awbNo))as disAwbNo
		FROM
		(SELECT distinct CHANGE_IND AS actn,AWB_NO AS awbNo,LPAD('0',18,'0') AS hawbNo
		FROM CST_AWB
		WHERE FLT_TYPE=DECODE(#flightType#,'A','I','S','I','N','E',#flightType#)
		AND FLT_KEY = #flightKey#
		AND FLT_DATE = to_date(#flightDate#,'DDMONYY')
		AND (CST_AWB.ACCS_IND='N' OR (CST_AWB.ACCS_IND='INT' AND CST_AWB.CHANGE_IND!='A') OR CST_AWB.ACCS_IND='AMD')
		UNION
		<isEqual property="flightType" compareValue="N"> 
			 SELECT distinct CST_HAWB.CHANGE_IND AS actn,CST_HAWB.AWB_NO AS awbNo,CST_HAWB.HAWB_NO AS hawbNo
			FROM CST_HAWB
			WHERE EXISTS(select awb_no from exp_pmanifest_awb A	where A.FLT_KEY = #flightKey# AND A.FLT_DATE = to_date(#flightDate#,'DDMONYY') 
			AND A.AWB_NO = CST_HAWB.AWB_NO)
			AND (CST_HAWB.ACCS_IND='N' OR CST_HAWB.ACCS_IND='AMD' OR(CST_HAWB.ACCS_IND='INT' AND CST_HAWB.CHANGE_IND IN('U','D')))
		 </isEqual> 
		 <isNotEqual property="flightType" compareValue="N"> 		 
			 SELECT distinct CST_HAWB.CHANGE_IND AS actn,CST_HAWB.AWB_NO AS awbNo,CST_HAWB.HAWB_NO AS hawbNo
			FROM CST_HAWB
			WHERE EXISTS(SELECT AWB_NO FROM EDI_FFM_MSG A,EDI_FFM_SHP B WHERE A.TR_NO = B.TR_NO
			AND A.FLT_KEY = #flightKey# AND A.FLT_DATE = to_date(#flightDate#,'DDMONYY') AND A.FFM_STATUS IN('P','F')
			AND B.AWB_NO = CST_HAWB.AWB_NO)
			AND (CST_HAWB.ACCS_IND='N' OR CST_HAWB.ACCS_IND='AMD' OR(CST_HAWB.ACCS_IND='INT' AND CST_HAWB.CHANGE_IND IN('U','D')))
		 </isNotEqual> 		
		UNION
		SELECT 'U' AS actn,AWB_NO AS awbNo,LPAD('0',18,'0') AS hawbNo
		  FROM CST_AWB
		 WHERE FLT_TYPE=DECODE(#flightType#,'A','I','S','I','N','E',#flightType#)
		   AND FLT_KEY = #flightKey#
		   AND FLT_DATE = to_date(#flightDate#,'DDMONYY')
		   AND CST_AWB.ACCS_IND='INT' 
		   AND CST_AWB.CHANGE_IND='A'
		   AND EXISTS(SELECT 1
		       FROM CST_HAWB 
		      WHERE AWB_NO = CST_AWB.AWB_NO
		        AND (CST_HAWB.ACCS_IND='N' OR CST_HAWB.ACCS_IND='AMD' OR(CST_HAWB.ACCS_IND='INT' AND CST_HAWB.CHANGE_IND IN('U','D')))
		        AND ROWNUM=1) 
		)
		ORDER BY awbNo,hawbNo

	     <!--    SELECT actn AS action,awbNo as awbNo,hawbNo as hawbNo,
		SUBSTR(awbNo, 1,3)||'-'||SUBSTR(awbNo,4,LENGTH(awbNo))as disAwbNo
		FROM
		(SELECT distinct CHANGE_IND AS actn,AWB_NO AS awbNo,LPAD('0',18,'0') AS hawbNo
		   FROM CST_AWB
		  WHERE FLT_TYPE='I'
		    AND FLT_KEY = #flightKey#
		    AND FLT_DATE = to_date(#flightDate#,'DDMONYY')
		    AND (CST_AWB.ACCS_IND='N' 
		      OR (CST_AWB.ACCS_IND='INT' AND CST_AWB.CHANGE_IND!='A')
		      OR CST_AWB.ACCS_IND='AMD')
		UNION
		SELECT distinct CST_HAWB.CHANGE_IND AS actn,CST_HAWB.AWB_NO AS awbNo,CST_HAWB.HAWB_NO AS hawbNo
		  FROM CST_HAWB
		 WHERE EXISTS(SELECT AWB_NO FROM EDI_FFM_MSG A,EDI_FFM_SHP B WHERE A.TR_NO = B.TR_NO
		   AND A.FLT_KEY = #flightKey# AND A.FLT_DATE = to_date(#flightDate#,'DDMONYY') AND A.FFM_STATUS IN('P','F')
		   AND B.AWB_NO = CST_HAWB.AWB_NO)
		   AND (CST_HAWB.ACCS_IND='N' OR CST_HAWB.ACCS_IND='AMD'))
		 ORDER BY awbNo,hawbNo-->		
	</select>
	<parameterMap id="saveAmdAssignMap" class="map" >
		<parameter property="RESULT"  jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
		<parameter property="FLTKEY"  jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="FLTDATE" jdbcType="VARCHAR"       javaType="java.lang.String" 	mode="IN"/>
		<parameter property="AWBNOS" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="AMDMAXVER" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>		
	</parameterMap>
	<procedure id="saveAmdCnsgnAwbNos" parameterMap="saveAmdAssignMap" >
		{? = call PKG_CST_INIT.AMEND_CONSIGNMENT_SUBMISSION(?,?,?,?)  }
	</procedure>
	  <select id="checkAmdFlightpriority"  parameterClass="cargo.cms.customs.bo.FlightListBO" resultClass="cargo.cms.customs.bo.FlightListBO">   	
   		   SELECT NVL(decode(ACK_REC_TYPE,'CLR','Y'),'N') as fltPrty FROM CST_ACK C,FLT_OPR f  
			WHERE c.flt_key         =NVL(f.stfs_flt_key,f.flt_key)
				  AND c.flt_date        =NVL(f.stfs_flt_date,f.sch_date)
				  AND c.flt_type        =DECODE(#flightType#,'S','I','A','I','N','E','I')
				  AND f.flt_key         = #carrierCode#||#flightNo#
				  AND f.sch_date        = to_date(#flightDate#,'ddmonyy')
				  AND f.flt_type        =DECODE(#flightType#,'A','A','S','A','N','D','A')
				  AND ACK_REC_TYPE = 'CLR' AND ROWNUM = 1	
   	</select>
   	<select id="fetchAmdCnsgnMaxVersion" parameterClass="cargo.cms.customs.bo.FlightListBO" resultClass="cargo.cms.customs.bo.FlightListBO"> 		 
  		<!-- SELECT NVL(VER_NO,0)AS intMaxVersion, SEND_STATUS AS newSendStatus FROM CST_SUBM       
  		WHERE 		
			FLT_KEY = #flightKey#
			AND FLT_DATE = TO_DATE(#flightDate#, 'DDMONYY')
			AND FLT_TYPE = 'I'
			AND REC_TYPE='AMD'
			AND VER_NO = (select MAX(VER_NO) from CST_SUBM WHERE FLT_KEY = #flightKey#
			AND FLT_DATE = TO_DATE(#flightDate#, 'DDMONYY')
			AND FLT_TYPE = 'I'  AND REC_TYPE='AMD')  -->
			
		SELECT NVL(VER_NO,0)AS intMaxVersion, SEND_STATUS AS newSendStatus FROM CST_SUBM S,FLT_OPR f  
		   WHERE s.flt_key =  NVL(F.STFS_FLT_KEY,F.FLT_KEY) and  s.flt_date  = NVL(F.STFS_FLT_DATE,F.SCH_DATE) 
		    AND f.flt_type = DECODE(s.flt_type,'I','A','E','D',s.flt_type)
			AND f.FLT_KEY = #flightKey#
			AND f.sch_DATE =  TO_DATE(#flightDate#,'DDMONYY')
			AND s.FLT_TYPE =DECODE(#flightType#,'A','I','S','I','N','E','I')
			AND s.REC_TYPE='AMD'
			AND VER_NO = (select MAX(VER_NO) from CST_SUBM WHERE FLT_KEY = NVL(F.STFS_FLT_KEY,F.FLT_KEY)
			AND FLT_DATE = NVL(F.STFS_FLT_DATE,F.SCH_DATE) 
			AND FLT_TYPE = DECODE(#flightType#,'A','I','S','I','N','E','I')  AND REC_TYPE='AMD')		 
 	</select>
 	<update id="updateAmdCstsubmitDetails" parameterClass="cargo.cms.customs.bo.FlightListBO" >
 		UPDATE CST_SUBM SET
 			SUBM_DATE=SYSDATE,
 			LM_USER_ID=#userID#,
 			LM_DATE=SYSDATE,
 			LM_VER='1',
 			SEND_STATUS='P' 
 		WHERE FLT_KEY=#flightKey#
 			AND FLT_DATE= #flightDate#
 			AND FLT_TYPE='I'
 			AND REC_TYPE='AMD'
 			AND SEND_STATUS='E'
 	</update>
 	<insert id="saveAmdCnsgnToTemp" parameterClass="cargo.cms.customs.bo.FlightListBO" >
		 INSERT INTO CST_SUBMIT_TEMP(FLT_KEY,FLT_DATE,VER_NO,CST_TYPE,AWB_NO,HAWB_NO) 
				 VALUES(#flightKey#, #flightDate#, '1','AMD', #awbNo#,#hawbNo#)		
	</insert>	
	<!-- ###################################################################################################################################################### -->
  	<!-- Submit Amended Csgn Related Queries Added By Varadaraj Muni - 10-DECEMBER-2010 - END -->
  	<!-- ###################################################################################################################################################### -->
  	
  	<!-- ###################################################################################################################################################### -->
  	<!-- Reconciliation Related Queries Added By Varadaraj Muni - 10-DECEMBER-2010  -->
  	<!-- ###################################################################################################################################################### -->
  	<!-- Reconciliation Starts -->
	<select id="reconciliation_getMsgTypeList"  parameterClass="cargo.cms.customs.bo.ReconciliationBO" resultClass="cargo.cms.customs.bo.ReconciliationBO">
		<![CDATA[
		SELECT i.CTRL_DATE as controlDate, i.CTRL_DATE as controlDateDisplay, i.msg_Type as msgType, 
			NVL(s.VER_NO, nvl(i.VER_NO, 0)) AS versionNo, nvl(s.REQ_UID, nvl(i.REQ_UID, 0)) AS reqUid, to_char(s.SUBM_DATE, 'DDMONYY HH24:MI') AS  submitDateTime, 
			to_char(i.RECV_DATE, 'DDMONYY HH24:MI') as requestDateTime, to_char(a.ACK_DATE, 'DDMONYY HH24:MI') AS ackDateTime, nvl(s.cnt, i.cnt) AS awbRecon,
			decode(i.msg_Type, 'LST', null,decode(s.SEND_STATUS, null, 'No Submission', 'P', 'In Progress', 'W', 'In Progress', 'A', 'Accepted', 'R', 'Rejected', 'E', 'Rejected')) status,
			nvl((select 'Y' from CST_RECON_SUBM_CTRL where SEND_STATUS in ('A', 'P', 'W') and MSG_TYPE in ('IDS') and CTRL_DATE = #controlDate# and rownum = 1), 'N') idsAccepted,
			nvl((select 'Y' from CST_RECON_SUBM_CTRL where SEND_STATUS in ('A', 'P', 'W') and MSG_TYPE in ('RDS') and CTRL_DATE = #controlDate# and rownum = 1), 'N') rdsAccepted
			FROM (SELECT 1 seq, #controlDate# CTRL_DATE, null RECV_DATE, 'IDS' MSG_TYPE, count(1) cnt, null REQ_UID, null VER_NO 
					 FROM AWB A 
					 JOIN IMP_CAR_AWB CA ON A.AWB_NO = CA.AWB_NO AND A.AWB_DATE = CA.AWB_DATE   
					 JOIN (SELECT inv.FLT_KEY, inv.FLT_DATE, inv.FLT_TYPE, inv.AWB_NO, 
							inv.AWB_DATE, awb.AWB_TYPE, SUM(inv.LOCN_PCS) INV_PCS, SUM(inv.LOCN_WT) INV_WT 
							FROM AWB_INVENTORY inv
							JOIN AWB awb ON UPPER(awb.AWB_NO) = UPPER(inv.AWB_NO) 
							AND UPPER (awb.awb_date) = UPPER (inv.awb_date) 
						  WHERE STRG_DATE <= #controlDate#
						  GROUP BY inv.FLT_KEY, inv.FLT_DATE, inv.FLT_TYPE, inv.AWB_NO, inv.AWB_DATE, awb.AWB_TYPE		
						) AI 
					 ON A.AWB_NO = AI.AWB_NO AND A.AWB_DATE = AI.AWB_DATE
					 JOIN V_CST_IMP_CC_CODE V ON V.AWB_NO = AI.AWB_NO AND V.FLT_KEY = AI.FLT_KEY AND V.FLT_DATE = AI.FLT_DATE 
					 where v.CC_CODE != 'NC' and v.CC_CODE != 'TC' AND A.AWB_TYPE = 'I' AND AI.FLT_TYPE = 'I' 
				  union all
				  select 2 seq, #controlDate# CTRL_DATE, max(RECV_DATE) RECV_DATE, 'LST' MSG_TYPE, count(1) cnt, REQ_UID, VER_NO 
				  from cst_recv 
				  where CTRL_DATE = #controlDate# and MSG_TYPE = 'LST'
				  group by REQ_UID, VER_NO
				  union all
				  select 3 seq, #controlDate# CTRL_DATE, null RECV_DATE, 'RDS' MSG_TYPE, 1 cnt, REQ_UID, VER_NO 
				  from CST_RECON_SUBM_DTL
				  where CTRL_DATE = #controlDate# and MSG_TYPE = 'RDS'
				  group by REQ_UID, VER_NO) i 
			LEFT JOIN (Select TRUNC(S.CTRL_DATE) CTRL_DATE, S.MSG_TYPE, s.VER_NO, s.REQ_UID, s.SEND_STATUS, s.SUBM_DATE, count(1) cnt
				 from CST_RECON_SUBM_CTRL S
				 join CST_RECON_SUBM_DTL d on TRUNC(S.CTRL_DATE) = d.CTRL_DATE AND S.VER_NO = d.VER_NO AND S.MSG_TYPE = d.MSG_TYPE
				 group by s.CTRL_DATE, S.MSG_TYPE, s.VER_NO, s.REQ_UID, s.SEND_STATUS, s.SUBM_DATE) s 
			  ON S.MSG_TYPE = i.MSG_TYPE AND TRUNC(S.CTRL_DATE) = i.CTRL_DATE 
			  	 and s.REQ_UID = nvl(i.REQ_UID, s.REQ_UID) and s.VER_NO = nvl(i.VER_NO, s.VER_NO) and s.MSG_TYPE = i.MSG_TYPE
			LEFT JOIN CST_RECON_ACK a ON TRUNC(S.CTRL_DATE) = a.CTRL_DATE AND S.VER_NO = a.VER_NO AND S.MSG_TYPE = a.ACK_REC_TYPE
			order by i.seq, s.VER_NO
		  ]]>
	</select>
	
		<!-- Changed on 24 FEB 2007 by atul -->
	<select id="reconciliation_getAWBList"  parameterClass="cargo.cms.customs.bo.ReconciliationBO" resultClass="cargo.cms.customs.bo.ReconAWBBO">
	   	<![CDATA[
		 SELECT ai.flt_key fltKey,
		 TO_CHAR(ai.FLT_DATE, 'DDMONYY') as fltDate, 
		 ai.FLT_TYPE as fltType, 	   
		 PKG_COMMON.get_flt_ata(ai.FLT_KEY, ai.FLT_DATE,'A') ata,
		 ai.AWB_NO awbNo,
		 SUBSTR(ai.AWB_NO,1,3)||'-'||SUBSTR(ai.AWB_NO,4) as awbNoDisplay,
		 nvl(v.HAWB_NO, '000000000000000000') hawbNo,
		 case when hs.hawb_no is not null 
		 	  then hs.hawb_pcs + decode(hs.HCIR_PCS_TYPE, 'SL', -1 * HCIR_PCS, 'SP', HCIR_PCS, 0)
		 	  else ai.inv_pcs end invPcs,
		 ltrim(to_char(case when hs.hawb_no is not null 
		 	  then hs.hawb_wt + decode(hs.HCIR_WT_TYPE, 'SL', -1 * HCIR_WT, 'SP', HCIR_WT, 0)
		 	  else ai.inv_wt end, '9999999.9')) invWt,
		 #controlDate# CTRL_DATE, 
		 'IDS' MSG_TYPE,
		 decode(v.hawb_no, '000000000000000000', ca.CONSOLE_IND, 'N') as cnsl,
		 substr(a.Catalog, 1,1) shipmentInd,
		 v.Ref_No as ctmRefNo,
		 v.CC_CODE as cc,
		 to_char(v.LM_DATE,'DDMONYY') as latestCCUpdateDate,
		 nvl(ca.ECT_HANDLER, nvl(ca.ACCS_HANDLER, 'CPCT')) as cargoHandr,
		 '' as rsnC	 
		 FROM AWB A 
		 JOIN IMP_CAR_AWB CA ON A.AWB_NO = CA.AWB_NO AND A.AWB_DATE = CA.AWB_DATE 
		 JOIN (SELECT inv.FLT_KEY, inv.FLT_DATE, inv.FLT_TYPE, inv.AWB_NO, 
							inv.AWB_DATE, awb.AWB_TYPE, SUM(inv.LOCN_PCS) INV_PCS, SUM(inv.LOCN_WT) INV_WT 
							FROM AWB_INVENTORY inv
							JOIN AWB awb ON UPPER(awb.AWB_NO) = UPPER(inv.AWB_NO) 
							AND UPPER (awb.awb_date) = UPPER (inv.awb_date) 
						  WHERE STRG_DATE <= #controlDate#
						  GROUP BY inv.FLT_KEY, inv.FLT_DATE, inv.FLT_TYPE, inv.AWB_NO, inv.AWB_DATE, awb.AWB_TYPE		
			) AI 		  
			ON A.AWB_NO = AI.AWB_NO AND A.AWB_DATE = AI.AWB_DATE
		 JOIN V_CST_IMP_CC_CODE V ON V.AWB_NO = AI.AWB_NO AND V.FLT_KEY = AI.FLT_KEY AND V.FLT_DATE = AI.FLT_DATE 
		 LEFT JOIN FLT_OPR F ON F.FLT_KEY = AI.FLT_KEY AND F.SCH_DATE = AI.FLT_DATE AND F.FLT_TYPE = DECODE(AI.FLT_TYPE, 'I', 'A', 'D') 
		 LEFT JOIN IMP_HAWB_STRG_DTL HS ON HS.AWB_NO = AI.AWB_NO AND HS.FLT_KEY = AI.FLT_KEY AND HS.FLT_DATE = AI.FLT_DATE AND HS.HAWB_NO = V.HAWB_NO
		 WHERE V.CC_CODE != 'NC' and V.CC_CODE != 'TC' 
	 	 AND A.AWB_TYPE in ('I','T') AND AI.FLT_TYPE = 'I'
		 ORDER BY AI.FLT_DATE, F.SCH_TIME, AI.FLT_KEY, A.AWB_NO, v.HAWB_NO
		 
		  ]]>
	</select>
	<!-- Changed on 24 FEB 2007 by atul -->

	<select id="reconciliation_getAWBList1"  parameterClass="cargo.cms.customs.bo.ReconciliationBO"	resultClass="cargo.cms.customs.bo.ReconAWBBO">
	   	<![CDATA[
	       SELECT L.flt_key fltKey,
      		 TO_CHAR(L.FLT_DATE, 'DDMONYY') as fltDate,
      		 L.FLT_TYPE as fltType,
      		 PKG_COMMON.get_flt_ata(L.FLT_KEY, L.FLT_DATE,'A') ata,
      		 L.AWB_NO awbNo,
      		 SUBSTR(L.AWB_NO,1,3)||'-'||SUBSTR(L.AWB_NO,4) as awbNoDisplay,
      		 nvl(decode(L.HAWB_NO, '00000000', '000000000000000000', L.HAWB_NO), '000000000000000000') hawbNo,
      		 DECODE(ai.awbNo, NULL, NULL, ai.invPcs) invPcs,
			 DECODE(ai.awbNo, NULL, NULL, ai.invWt) invWt,
      		 DECODE(ai.awbNo, NULL, NULL, ai.cnsl) as cnsl,
      		 DECODE(ai.awbNo, NULL, NULL, ai.shipmentInd) shipmentInd,
      		 l.ctm_ref_no as ctmRefNo,
      		 DECODE(ai.awbNo, NULL, NULL, ai.cc) as cc,
      		 ai.latestCCUpdateDate,
      		 nvl(ai.cargoHandr, 'CPCT') cargoHandr,
      		 '' as rsnC,
			 L.REQ_UID
      		 FROM CST_RECV L 
			 left join ( select ai.flt_key fltKey,
							 TO_CHAR(ai.FLT_DATE, 'DDMONYY') as fltDate, 
							 ai.FLT_TYPE as fltType, 
							 ai.AWB_NO awbNo,
							 nvl(v.HAWB_NO, '000000000000000000') hawbNo,
							 case when hs.hawb_no is not null 
							 	  then hs.hawb_pcs + decode(hs.HCIR_PCS_TYPE, 'SL', -1 * HCIR_PCS, 'SP', HCIR_PCS, 0)
							 	  else ai.inv_pcs end invPcs,
							 ltrim(to_char(case when hs.hawb_no is not null 
							 	  then hs.hawb_wt + decode(hs.HCIR_WT_TYPE, 'SL', -1 * HCIR_WT, 'SP', HCIR_WT, 0)
							 	  else ai.inv_wt end, '9999999.9')) invWt,
							 decode(v.hawb_no, '000000000000000000', ca.CONSOLE_IND, 'N') as cnsl,
							 substr(a.Catalog, 1,1) shipmentInd,
							 v.Ref_No as ctmRefNo,
							 v.CC_CODE as cc,
							 to_char(v.LM_DATE,'DDMONYY') as latestCCUpdateDate,
							 nvl(ca.ECT_HANDLER, nvl(ca.ACCS_HANDLER, 'CPCT')) as cargoHandr,
							 F.SCH_TIME
			 	  	     from AWB A 
						 JOIN IMP_CAR_AWB CA ON A.AWB_NO = CA.AWB_NO AND A.AWB_DATE = CA.AWB_DATE 						  
							  JOIN (SELECT inv.FLT_KEY, inv.FLT_DATE, inv.FLT_TYPE, inv.AWB_NO, 
							inv.AWB_DATE, awb.AWB_TYPE, SUM(inv.LOCN_PCS) INV_PCS, SUM(inv.LOCN_WT) INV_WT 
							FROM AWB_INVENTORY inv
							JOIN AWB awb ON UPPER(awb.AWB_NO) = UPPER(inv.AWB_NO) 
							AND UPPER (awb.awb_date) = UPPER (inv.awb_date) 
						  WHERE STRG_DATE <= #controlDate#
						  GROUP BY inv.FLT_KEY, inv.FLT_DATE, inv.FLT_TYPE, inv.AWB_NO, inv.AWB_DATE, awb.AWB_TYPE		
						) AI 						  
							ON A.AWB_NO = AI.AWB_NO AND A.AWB_DATE = AI.AWB_DATE
						 JOIN V_CST_IMP_CC_CODE V ON V.AWB_NO = AI.AWB_NO AND V.FLT_KEY = AI.FLT_KEY AND V.FLT_DATE = AI.FLT_DATE 
						 LEFT JOIN FLT_OPR F ON F.FLT_KEY = AI.FLT_KEY AND F.SCH_DATE = AI.FLT_DATE AND F.FLT_TYPE = DECODE(AI.FLT_TYPE, 'I', 'A', 'D') 
						 LEFT JOIN IMP_HAWB_STRG_DTL HS ON HS.AWB_NO = AI.AWB_NO AND HS.FLT_KEY = AI.FLT_KEY AND HS.FLT_DATE = AI.FLT_DATE AND HS.HAWB_NO = V.HAWB_NO
						 WHERE V.CC_CODE != 'NC' 
					 	 AND A.AWB_TYPE in ('I','T') AND AI.FLT_TYPE = 'I') ai
					on L.AWB_NO = ai.awbNo and decode(L.HAWB_NO, '00000000', '000000000000000000', L.HAWB_NO) = ai.hawbNo
					   AND L.FLT_KEY = ai.fltKey AND L.FLT_DATE = ai.fltDate AND L.FLT_TYPE = ai.fltType
			 WHERE L.CTRL_DATE = #controlDate# and L.REQ_UID = #reqUid# AND MSG_TYPE = 'LST' 
			 AND NOT EXISTS (SELECT NULL FROM CST_RECON_SUBM_CTRL
			 	 	 		WHERE MSG_TYPE = 'RDS' AND CTRL_DATE = L.CTRL_DATE AND REQ_UID = L.REQ_UID AND SEND_STATUS = 'A')
			 ORDER BY L.FLT_DATE, AI.SCH_TIME, L.FLT_KEY, L.AWB_NO, L.HAWB_NO
 
 		]]>
	</select>
	<select id="reconciliation_getAWBList2"  parameterClass="cargo.cms.customs.bo.ReconciliationBO"	resultClass="cargo.cms.customs.bo.ReconAWBBO">
	   	<![CDATA[
			Select flt_key as fltKey, 
			   TO_CHAR(FLT_DATE, 'DDMONYY') as fltDate, 
			   flt_type, 
			   PKG_COMMON.get_flt_ata(FLT_KEY, FLT_DATE,'A') as ata, 
			   awb_no as awbNo, 
			   SUBSTR(awb_no,1,3)||'-'||SUBSTR(awb_no,4) as awbNoDisplay,
			   hawb_no as hawbNo, 
			   CNSL_IND as cnsl, 
			   SHPM_IND as shipmentInd, 
			    LATEST_CONST_C as cc,
			   INV_PCS as invPcs, 
			  INV_WT as invWt
			from CST_RECON_SUBM_DTL
			where MSG_TYPE = #msgType# and VER_NO = #versionNo# and CTRL_DATE = #controlDate#
			Order BY FLT_KEY, FLT_DATE, AWB_NO, HAWB_NO
		  ]]>
	</select>

	<select id="reconciliation_getAWBList3"  parameterClass="cargo.cms.customs.bo.ReconciliationBO" resultClass="cargo.cms.customs.bo.ReconAWBBO">
	<![CDATA[
		select L.flt_key as fltKey, 
			TO_CHAR(L.FLT_DATE, 'DDMONYY') as fltDate, 
			L.flt_type, 
			PKG_COMMON.get_flt_ata(L.FLT_KEY, L.FLT_DATE,'A') as ata, 
			L.awb_no as awbNo, 
			 SUBSTR(L.awb_no,1,3)||'-'||SUBSTR(L.awb_no,4) as awbNoDisplay,
			v.hawb_no as hawbNo, 
			DECODE(v.HAWB_NO, NULL, CA.CONSOLE_IND, 'N') as cnsl, 
			SUBSTR(CA.CATALOG, 1, 1) as shipmentInd, 
			V.CC_CODE as cc,
			case when hs.hawb_no is not null 
				 then hs.hawb_pcs + decode(hs.HCIR_PCS_TYPE, 'SL', -1 * HCIR_PCS, 'SP', HCIR_PCS, 0)
				 else ai.inv_pcs end invPcs,
			ltrim(to_char(case when hs.hawb_no is not null 
				 then hs.hawb_wt + decode(hs.HCIR_WT_TYPE, 'SL', -1 * HCIR_WT, 'SP', HCIR_WT, 0)
			     else ai.inv_wt end, '9999999.9')) invWt
		FROM CST_RECV L 
		left JOIN (SELECT inv.FLT_KEY, inv.FLT_DATE, inv.FLT_TYPE, inv.AWB_NO, 
							inv.AWB_DATE, awb.AWB_TYPE, SUM(inv.LOCN_PCS) INV_PCS, SUM(inv.LOCN_WT) INV_WT 
							FROM AWB_INVENTORY inv
							JOIN AWB awb ON UPPER(awb.AWB_NO) = UPPER(inv.AWB_NO) 
							AND UPPER (awb.awb_date) = UPPER (inv.awb_date) 
						  WHERE STRG_DATE <= #controlDate#
						  GROUP BY inv.FLT_KEY, inv.FLT_DATE, inv.FLT_TYPE, inv.AWB_NO, inv.AWB_DATE, awb.AWB_TYPE		
						) AI 				  
		   ON L.AWB_NO = AI.AWB_NO AND L.FLT_KEY = AI.FLT_KEY AND L.FLT_DATE = AI.FLT_DATE AND L.FLT_TYPE = AI.FLT_TYPE 
		left JOIN IMP_CAR_AWB CA ON AI.AWB_NO = CA.AWB_NO AND AI.AWB_DATE = CA.AWB_DATE 
		left JOIN V_CST_IMP_CC_CODE V ON V.AWB_NO = AI.AWB_NO AND V.FLT_KEY = AI.FLT_KEY AND V.FLT_DATE = AI.FLT_DATE AND V.HAWB_NO = decode(L.HAWB_NO, '00000000', '000000000000000000', L.HAWB_NO) 
		LEFT JOIN IMP_HAWB_STRG_DTL HS ON HS.AWB_NO = AI.AWB_NO AND HS.FLT_KEY = AI.FLT_KEY AND HS.FLT_DATE = AI.FLT_DATE AND HS.HAWB_NO = V.HAWB_NO
		WHERE L.CTRL_DATE = #controlDate# AND MSG_TYPE = #msgType# AND REQ_UID = #reqUid#
		Order BY l.FLT_KEY, l.FLT_DATE, l.AWB_NO, l.HAWB_NO
  	]]>
 	</select>
   	<select id="reconciliation_getAWBHistoryList" parameterClass="cargo.cms.customs.bo.ReconciliationBO" resultClass="cargo.cms.customs.bo.ReconAWBBO">		
			SELECT TO_CHAR(FLT_DATE, 'DDMONYY') as fltDate, 
			TO_CHAR(FLT_DATE, 'DDMONYY') as fltDateDisplay, 
			FLT_KEY as fltKey, 
			AWB_NO as awbNo, 
			SUBSTR(AWB_NO,1,3)||'-'||SUBSTR(AWB_NO,4) as awbNoDisplay ,
			HAWB_NO as hawbNo, 
			nvl(INV_PCS,0) as invPcs, 
			TO_CHAR(nvl(INV_WT,0), '9999999.9') as invWt, 
			LATEST_CONST_C as cc,
			SEND_STATUS as shipmentInd,
			PKG_COMMON.get_flt_ata(d.FLT_KEY, d.FLT_DATE, decode(d.FLT_TYPE, 'I', 'A', 'D')) ata,
			decode(s.SEND_STATUS, null, 'No Submission', 'P', 'In Progress', 'W', 'In Progress', 'A', 'Accepted', 'R', 'Rejected', 'E', 'Rejected') status
			FROM CST_RECON_SUBM_CTRL S
			INNER JOIN CST_RECON_SUBM_DTL D ON TRUNC(S.CTRL_DATE) =  TRUNC(D.CTRL_DATE) AND S.MSG_TYPE = D.MSG_TYPE AND S.VER_NO = D.VER_NO
			WHERE TRUNC(S.CTRL_DATE) = #controlDate# AND S.MSG_TYPE = #msgType# AND S.VER_NO = #versionNo#
			Order BY FLT_KEY, FLT_DATE, AWB_NO, HAWB_NO
	</select>	
	 <select id="reconciliation_getAWBErrorList"  parameterClass="cargo.cms.customs.bo.ReconciliationBO" resultClass="cargo.cms.customs.bo.ReconAWBBO">
		SELECT c.MSG_TYPE, c.VER_NO as verNo ,
			TO_CHAR(c.SUBM_DATE,'DDMONYY HH24:MI') as submitDate,
			TO_CHAR(a.ACK_DATE,'DDMONYY HH24:MI') as ackDate, 
			decode(c.SEND_STATUS, null, 'No Submission', 'P', 'In Progress', 'W', 'In Progress', 'A', 'Accepted', 'R', 'Rejected', 'E', 'Rejected') as sendStatus, 
			'' AS statusError
		FROM CST_RECON_SUBM_CTRL c 
		left JOIN CST_RECON_ACK a ON c.CTRL_DATE = a.CTRL_DATE AND c.MSG_TYPE = a.ACK_REC_TYPE and c.ver_no = a.ver_no
		WHERE c.CTRL_DATE = #controlDate# and c.MSG_TYPE = #msgType# and c.REQ_UID = #reqUid#			 
		Order by c.SUBM_DATE
	</select>	
	<select id="reconciliation_getAWBErrorList2"  parameterClass="cargo.cms.customs.bo.ReconciliationBO" resultClass="cargo.cms.customs.bo.ReconAWBBO">
		SELECT c.VER_NO as verNo, 
		decode(c.SEND_STATUS, null, 'No Submission', 'P', 'In Progress', 'W', 'In Progress', 'A', 'Accepted', 'R', 'Rejected', 'E', 'Rejected') as sendStatus, 
		nvl(ERROR_MSG,ERR_MSG)  AS statusError,
		r.HAWB_NO as hawbNo,
		SUBSTR(r.AWB_NO,1,3)||'-'||SUBSTR(r.AWB_NO,4) as awbNoDisplay ,
		r.AWB_NO as awbNo,
		TO_CHAR(r.RECV_DATE,'DDMONYY HH24:MI') as receiveDate
		FROM cst_RECON_SUBM_CTRL c
		left join CST_RECV r ON c.CTRL_DATE = r.CTRL_DATE AND c.MSG_TYPE = r.MSG_TYPE AND c.VER_NO = r.VER_NO
		WHERE c.MSG_TYPE = #msgType# 
		AND c.CTRL_DATE = #controlDate#
		AND c.VER_NO = #versionNo#
		order by r.FLT_KEY, r.FLT_DATE, r.AWB_NO, r.HAWB_NO
	</select>
	<select id="reconciliation_checkProcessing"  parameterClass="cargo.cms.customs.bo.ReconciliationBO" resultClass="java.lang.Integer">	
		Select count (1) from CST_RECON_SUBM_CTRL where MSG_TYPE=#msgType# and CTRL_DATE = #controlDate# and send_status = 'P'
	</select>
	<select id="reconciliation_checkVersionNo"  parameterClass="cargo.cms.customs.bo.ReconciliationBO" 
	   	resultClass="java.lang.Integer">	
		Select count (1) from CST_RECON_SUBM_CTRL where MSG_TYPE=#msgType# and CTRL_DATE = #controlDate# and ver_no = #versionNo#
	</select>
	<select id="get_reconciliation_ver_no"  parameterClass="cargo.cms.customs.bo.ReconciliationBO" resultClass="java.lang.String">	
		SELECT NVL(max(ver_no),0)+1 from CST_RECON_SUBM_CTRL where MSG_TYPE=#msgType# and CTRL_DATE=#controlDate#
	</select>
   	<insert id="reconciliation_saveReconciliation" parameterClass="cargo.cms.customs.bo.ReconciliationBO"> 
		INSERT INTO CST_RECON_SUBM_CTRL (
		   MSG_TYPE, CTRL_DATE, VER_NO, 
		   SEND_STATUS, SEND_DATE,  
		   SUBM_DATE,  REQ_UID, 
		   LM_USER_ID, LM_DATE, 
		   LM_VER) 
		VALUES (
		   #msgType#, #controlDate#, #versionNo#,
		   'P', SYSDATE, SYSDATE, #reqUid#,  
		   #modifiedUserId# , SYSDATE,  #versionNo# - 1	)
	</insert>
	
	<select id="reconciliation_getVersionNumber"  parameterClass="cargo.cms.customs.bo.ReconciliationBO" resultClass="java.lang.Integer">	
		SELECT NVL(MAX(VER_NO), 1) FROM CST_RECON_SUBM_DTL WHERE CTRL_DATE = #controlDate# AND MSG_TYPE = #msgType#
	</select>	
	<select id="reconciliation_getLMVersionNumber" parameterClass="cargo.cms.customs.bo.ReconciliationBO" resultClass="java.lang.Integer">	
		SELECT NVL(MAX(LM_VER), 1) FROM CST_RECON_SUBM_DTL WHERE CTRL_DATE = #controlDate# AND MSG_TYPE = #msgType#
	</select>	
  <insert id="reconciliation_saveReconciliationDetails" parameterClass="cargo.cms.customs.bo.ReconAWBBO"> 
		INSERT INTO CST_RECON_SUBM_DTL (
		   MSG_TYPE, CTRL_DATE, VER_NO, 
		   CTM_REF_NO, FLT_TYPE, FLT_DATE, 
		   FLT_KEY, AWB_NO, HAWB_NO, 
		   INV_PCS, INV_WT, CNSL_IND, 
		   SHPM_IND, CARGO_HANDR, LATEST_CONST_C, 
		   LATEST_CC_UPD_D, RSN_C, REQ_UID, 
		   LM_USER_ID, LM_DATE, LM_VER)
		VALUES (
			#msgType#,#controlDate#,#verNo#,
			#ctmRefNo#,#fltType#,#fltDate#,
			#fltKey#,#awbNo#,#hawbNo#,
			#invPcs#,#invWt#,#cnsl#,
			#shipmentInd#,#cargoHandr#,#cc#,
			to_date(#latestCCUpdateDate#,'DDMONYY'), #rsnC#, #reqUid#,
			#userID#,SYSDATE,#lmVerNo#)
	</insert>
	<select id="reconciliation_getVersionList"  parameterClass="cargo.cms.customs.bo.ReconciliationBO" resultClass="cargo.cms.customs.bo.ReconciliationBO"> 			
		SELECT VER_NO as versionNo 
			FROM CST_RECON_SUBM_CTRL 
		WHERE TRUNC(CTRL_DATE) = #controlDate# 
		AND MSG_TYPE = #msgType# order by VER_NO
	</select>
		<select id="customs_getdate"  parameterClass="map"  resultClass="java.lang.String">
			SELECT UPPER(TO_CHAR(SYSDATE,'DDMONYY')) FROM DUAL
   	</select>
   	<parameterMap id="submitReconMap" class="map" >
		<parameter property="CTRL_DATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="VER_NO" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="MSG_TYPE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="USER_ID" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
   </parameterMap>

	<procedure id="sub_recon_proc_proc" parameterMap="submitReconMap" >
		{  call pkg_sub_bd_disc.sub_recon(?,?,?,?)  }
	</procedure>
  	<!-- ###################################################################################################################################################### -->
  	<!-- Reconciliation Related Queries Added By Varadaraj Muni - 10-DECEMBER-2010 - END -->  	
  	<!-- ###################################################################################################################################################### -->
  	
  	<!-- ###################################################################################################################################################### -->
  	<!-- DDS_FallBack_ACCS_Ack Related Queries Added By Varadaraj Muni - 28-DECEMBER-2010 - START -->  	
  	<!-- ###################################################################################################################################################### -->
  	<select id="validateFlightFallback" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
  		SELECT COUNT(1) FROM FLT_OPR WHERE FLT_KEY=#fltKey# AND SCH_DATE=TO_DATE(#fltDate#,'DDMONYY') AND FLT_TYPE=NVL(#fltType#,'A')
  	</select>
  	<parameterMap id="hParameterMap" class="map" >
		<parameter property="P_FLT_KEY" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="P_FLT_DATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="P_VER_TYPE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="P_VERSION_NO" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="P_STATUS" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="P_FLT_TYPE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
   </parameterMap>

	<procedure id="PRC_FALLBACK_ACCS_ACK" parameterMap="hParameterMap" >
		{  call PRC_FALLBACK_ACCS_ACK(?,?,?,?,?,?) }
	</procedure>
  	<!-- ###################################################################################################################################################### -->
  	<!-- DDS_FallBack_ACCS_Ack Related Queries Added By Varadaraj Muni - 28-DECEMBER-2010 - END -->  	
  	<!-- ###################################################################################################################################################### -->
  	
  	
  	<!-- ###################################################################################################################################################### -->
  	<!-- Dutiable Commodity Related Queries Added By Varadaraj Muni - 22-FEBRUARY-2010 - START -->  	
  	<!-- ###################################################################################################################################################### -->
  	
  	<select id = "getawbDateType"  parameterClass="cargo.cms.customs.bo.DutyCdtyBO" resultClass="cargo.cms.customs.bo.DutyCdtyBO">
  	SELECT AWB_DATE awbDate,AWB_TYPE shipmentType from awb where awb_no=#awbNo# and CON_CLOSED_YN='N' and awb_closed_yn='N'
  	</select>
  		<select id = "fetch_shipment_type"  parameterClass="cargo.cms.customs.bo.DutyCdtyBO" resultClass="java.lang.String">
  		SELECT flt_type FROM cst_code_dtl WHERE awb_no=#awbNo# and rownum=1
  		</select>
  	<select id = "searchDutiableCommodity"  parameterClass="cargo.cms.customs.bo.DutyCdtyBO" resultClass="cargo.cms.customs.bo.DutyCdtyBO">
        SELECT 	AWB.AWB_DATE as awbDate,AWB.AWB_TYPE as awbType ,
	    FLT_OPR.FLT_KEY as fltKey, CST_DC_DTL.DUT_TYPE as dutyType,
    	CST_DC_DTL.DUT_TYPE as dutyTypeCopy,
		flt_opr.ACT_TIME as actualTime, flt_opr.EST_TIME as expectedTime,
		AWB.ORIG as  originOfAwbNo,AWB.DEST as destinationOfAwbNo,AWB.CONTENT AS dcContent,
		AWB.CONTENT AS dcContentCopy,
		NVL(EDI_FHL_HAWB.HAWB_NO,'000000000000000000') AS hawbNo,
		NVL(EDI_FHL_HAWB.HAWB_ORG,AWB.ORIG) AS originOfHawbNo,
		NVL(EDI_FHL_HAWB.HAWB_DEST,AWB.DEST) AS destinationOfHawbNo,
     	(SELECT COUNT(PERMIT) FROM CST_PERMIT WHERE AWB_NO=AWB.AWB_NO AND HAWB_NO = NVL(EDI_FHL_HAWB.HAWB_NO,'0000000000000000')) AS noOfPmt
	    FROM FLT_OPR INNER JOIN EXP_PMANIFEST_AWB ON
		FLT_OPR.FLT_KEY= EXP_PMANIFEST_AWB.FLT_KEY 
		AND FLT_OPR.SCH_DATE = EXP_PMANIFEST_AWB.FLT_DATE 
		AND FLT_OPR.FLT_TYPE = 'D'
		LEFT OUTER JOIN AWB ON
		EXP_PMANIFEST_AWB.AWB_NO = AWB.AWB_NO
		AND EXP_PMANIFEST_AWB.AWB_DATE = AWB.AWB_DATE
		AND AWB.AWB_TYPE = 'E'
		INNER JOIN EDI_FHL ON
		EDI_FHL.AWB_NO = AWB.AWB_NO
		AND EDI_FHL.AWB_DATE = AWB.AWB_DATE
		AND EDI_FHL.FLT_TYPE = 'E'
		LEFT OUTER JOIN EDI_FHL_HAWB ON
		EDI_FHL_HAWB.TR_NO = EDI_FHL.TR_NO 
		AND EDI_FHL.COPY_NO = (SELECT MAX(EDI_FHL.COPY_NO) 
		FROM EDI_FHL WHERE FLT_OPR.FLT_KEY =  #fltKey#
		AND EDI_FHL.FLT_DATE = to_date(#fltDate#, 'DDMONYY') AND EDI_FHL.AWB_NO= #awbNo#  AND EDI_FHL.FLT_TYPE= 'E')
	    <isNotEmpty property="hawbNo">	  
       	  AND EDI_FHL_HAWB.HAWB_NO = #hawbNo# 
	    </isNotEmpty>			
	    LEFT OUTER JOIN CST_DC_DTL ON
		CST_DC_DTL.AWB_NO = EXP_PMANIFEST_AWB.AWB_NO
		AND CST_DC_DTL.HAWB_NO = NVL(EDI_FHL_HAWB.HAWB_NO,'0000000000000000')
		AND CST_DC_DTL.FLT_DATE = FLT_OPR.SCH_DATE
		AND CST_DC_DTL.FLT_KEY = FLT_OPR.FLT_KEY
		WHERE FLT_OPR.FLT_KEY = #fltKey#
		AND FLT_OPR.sch_DATE = to_date(#fltDate#, 'DDMONYY')
		AND EXP_PMANIFEST_AWB.AWB_NO = #awbNo#
	</select>
		
	<select id = "checkValidDutyType"  parameterClass="cargo.cms.customs.bo.DutyCdtyBO" resultClass="java.lang.String">	
		select count(1) from cst_dc_dtl where
		SHPM_TYPE= #shipmentType# and FLT_KEY=#fltKey# and
		FLT_DATE= to_date(#fltDate#, 'DDMONYY') and
		AWB_NO = #awbNo# and HAWB_NO = #hawbNo#
	</select>
	   
   	<delete id="deletePermitDetail"  parameterClass="cargo.cms.customs.bo.PermitInvoiceBO">
		delete from cst_dc_dtl where awb_no = #awbNo# and hawb_no= #hawbNo#  and permit = #permitOldCopy#
   	</delete>
   	
   	<update id="updateDutyType" parameterClass="cargo.cms.customs.bo.DutyCdtyBO">
		update cst_dc_dtl set DUT_TYPE = #dutyType# , LM_DATE = sysdate,
		LM_VER = (select max(LM_VER)+1 from cst_dc_dtl where FLT_KEY=#fltKey# and FLT_DATE=
		to_date(#fltDate#,'DDMONYY')  and  AWB_NO =#awbNo# and HAWB_NO=#hawbNo# and SHPM_TYPE = #shipmentType#),
		LM_USER_ID = #lastModifiedUser#  where  SHPM_TYPE =  #shipmentType# and  FLT_KEY = #fltKey# and
		FLT_DATE=  to_date(#fltDate#,'DDMONYY') and  AWB_NO =  #awbNo#  and 
		HAWB_NO = #hawbNo#  
	</update>
	
	<update id="updateDutyContentImport" parameterClass="cargo.cms.customs.bo.DutyCdtyBO">
		update IMP_CAR_AWB set content=#dcContent# where awb_no= #awbNo# and AWB_DATE = #awbDate#
    </update>
    
    <insert id = "insertDutyType"  parameterClass="cargo.cms.customs.bo.DutyCdtyBO">	
		insert into cst_dc_dtl(SHPM_TYPE,FLT_KEY, FLT_DATE, AWB_NO, HAWB_NO,
		DUT_TYPE,LM_USER_ID, LM_DATE,LM_VER) 
		values(#shipmentType#,#fltKey#,#fltDate#,#awbNo#,#hawbNo#,#dutyType#,#lastModifiedUser#, sysdate,1)
   </insert>
   
   	<update id="updateDutyCodeDetail" parameterClass="cargo.cms.customs.bo.DutyCdtyBO">
		update cst_code_dtl set dut_code=#dcCode#,DUT_QTY=#dcQty#,DUT_UNIT = #dcUnit#,DUT_PCS = #dcPc#, DUT_RMK = #dcRemark#, LM_USER_ID=#lastModifiedUser#,LM_DATE=sysdate where
		FLT_TYPE=#shipmentType# and FLT_KEY=#fltKey# and  FLT_DATE = to_date(#fltDate#,'DDMONYY') and AWB_NO= #awbNo#
		and HAWB_NO=#hawbNo#  and DUT_CODE=#dcCodeOldCopy#
	</update> 
	
	<select id = "arrivalTimeForExport"	parameterClass="cargo.cms.customs.bo.DutyCdtyBO" resultClass="cargo.cms.customs.bo.DutyCdtyBO">		
		select PKG_COMMON.GET_FLT_ATA(OPR.FLT_KEY,OPR.SCH_DATE,OPR.FLT_TYPE,'DD') AS actualTime,
		   PKG_COMMON.GET_FLT_ETA(OPR.FLT_KEY,OPR.SCH_DATE,OPR.FLT_TYPE,'DD') AS expectedTime,
		   OPR.sch_date as fltDateDisplay FROM FLT_OPR OPR  where CARR_CODE=#carrierCode# and
		FLT_NO=#fltNo# and SCH_DATE = to_date(#fltDate#, 'DDMONYY')  
		and FLT_TYPE='D'
	</select>
			
	<select id = "arrivalTimeForImport" parameterClass="cargo.cms.customs.bo.DutyCdtyBO" resultClass="cargo.cms.customs.bo.DutyCdtyBO">		
		select PKG_COMMON.GET_FLT_ATA(OPR.FLT_KEY,OPR.SCH_DATE,OPR.FLT_TYPE,'DD') AS actualTime,
		   PKG_COMMON.GET_FLT_ETA(OPR.FLT_KEY,OPR.SCH_DATE,OPR.FLT_TYPE,'DD') AS expectedTime,
		   OPR.sch_date as fltDateDisplay FROM FLT_OPR OPR where CARR_CODE=#carrierCode# and
		FLT_NO=#fltNo# and SCH_DATE = to_date(#fltDate#, 'DDMONYY')  
		and FLT_TYPE='A'
	</select>
	
	<select id = "searchDutiableCommodityImport"  parameterClass="cargo.cms.customs.bo.DutyCdtyBO" resultClass="cargo.cms.customs.bo.DutyCdtyBO">
	 		SELECT  A.awbNo,A.awbDate, B.dutyType, B.dutyType AS dutyTypeCopy, A.originOfAwbNo, A.destinationOfAwbNo,
			 A.dcContent, A.dcContentCopy,A.hawbNo, A.originOfHawbNo,A.destinationOfHawbNo, A.noOfPmt
			   FROM 
			(SELECT 
			  IMP_CAR_SHP.AWB_NO as awbNo  ,
			  IMP_CAR_SHP.AWB_DATE as awbDate ,
			  IMP_CAR_AWB.AWB_ORIGIN as originOfAwbNo,
			  IMP_CAR_AWB.AWB_DEST as destinationOfAwbNo,
			  IMP_CAR_AWB.CONTENT  AS dcContent,
			  IMP_CAR_AWB.CONTENT As dcContentCopy,
			  NVL(CST_HAWB.HAWB_NO,LPAD('0',18,'0')) AS hawbNo,
			  NVL(CST_HAWB.ORG,
			  IMP_CAR_AWB.AWB_ORIGIN) AS originOfHawbNo,
			  NVL(CST_HAWB.CONTENT,
			  IMP_CAR_AWB.AWB_DEST) AS destinationOfHawbNo,
			  (SELECT COUNT(PERMIT)
				 FROM CST_PERMIT
				WHERE AWB_NO=IMP_CAR_SHP.AWB_NO AND HAWB_NO = NVL(CST_HAWB.HAWB_NO,'0000000000000000')) AS noOfPmt   
			 FROM IMP_CAR_SHP,IMP_CAR_AWB, CST_HAWB
			WHERE IMP_CAR_AWB.AWB_NO = IMP_CAR_SHP.AWB_NO  AND
			  IMP_CAR_AWB.AWB_DATE =IMP_CAR_SHP.AWB_DATE   AND
			  IMP_CAR_AWB.AWB_NO = CST_HAWB.AWB_NO(+)      AND
			  IMP_CAR_AWB.AWB_DATE = CST_HAWB.AWB_DATE(+)  AND
			  IMP_CAR_SHP.FLT_KEY =#fltKey# AND
			  IMP_CAR_SHP.FLT_DATE = to_date(#fltDate#, 'DDMONYY') AND
			  IMP_CAR_SHP.AWB_NO = #awbNo# ) A,
			(SELECT AWB_NO as awbNo,DUT_TYPE as dutyType,NVL(HAWB_NO,LPAD('0',18,'0')) AS hawbNo  
			   FROM CST_DC_DTL
			  WHERE FLT_KEY =  #fltKey# AND
					FLT_DATE = to_date(#fltDate#, 'DDMONYY') AND
					AWB_NO = #awbNo# AND SHPM_TYPE='I' ) B
			WHERE A.awbNo = B.awbNo(+) AND A.hawbNo = B.hawbNo(+) AND A.hawbNo=NVL(#hawbNo#,A.hawbNo)
	</select>
		
	<select id = "fetchPermitDtls"  parameterClass="cargo.cms.customs.bo.DutyCdtyBO" resultClass="cargo.cms.customs.bo.PermitInvoiceBO">			
		select 
			pmt_no as permitTemp,pmt_no permitOldCopy,to_char(DCP_DAT,'DDMONYY') dcpRecvDate,to_char(DCP_DAT,'HH24') dcpRecvTimeHr,to_char(DCP_DAT,'mi') dcpRecvTimeMin,
			trim(to_char(DCP_QTY,'99999999999999990.0')) dcpQty,EPA_COMP epaComplYN from cst_permit_dtl 
		where
			flt_type = #shipmentType# and
			awb_no = #awbNo# and
			awb_date = to_date(#awbDate#,'DDMONYY') and
			hawb_no = #hawbNo#
			and DUT_CODE = #dcCode#
			<isNotEmpty property="fltKey">
		    	and FLT_KEY =#fltKey#  and FLT_DATE = to_date(#fltDate#,'DDMONYY')
		    </isNotEmpty>
			order by pmt_no
	</select>		
	<select id = "countPermitDtls"  parameterClass="cargo.cms.customs.bo.PermitInvoiceBO" resultClass="java.lang.Integer">
		select count(*) from CST_PERMIT_DTL where flt_type = #shipmentType# and
			awb_no = #awbNo# and
			awb_date = to_date(#awbDate#,'DDMONYY')
			and DUT_CODE = #dcCode#
			and PMT_NO = #permitTemp#
			<isNotEmpty property="fltKey">
		    	and FLT_KEY =#fltKey#  and FLT_DATE = to_date(#fltDate#,'DDMONYY')
		    </isNotEmpty>
	</select>
	<select id = "checkPermitDtlsExists"  parameterClass="cargo.cms.customs.bo.PermitInvoiceBO" resultClass="java.lang.Integer">
		select count(*) from CST_PERMIT_DTL where 
			awb_no = #awbNo# 
			and HAWB_NO =#hawbNo#
			and PMT_NO = #permitTemp#
	</select>
	<update id = "sqlUpdateEPACompl"  parameterClass="cargo.cms.customs.bo.PermitInvoiceBO">
		UPDATE CST_PERMIT_DTL set EPA_COMP=#epaComplYN#,TR_TYPE=#trType# where 
			awb_no = #awbNo# 
			and HAWB_NO =#hawbNo#
			and PMT_NO = #permitTemp#
	</update>
	<delete id="sqldeletePermitDtls"  parameterClass="cargo.cms.customs.bo.PermitInvoiceBO">
			DELETE FROM CST_PERMIT_DTL WHERE 
			awb_no = #awbNo# and
			PMT_NO = #permitOldCopy#
	</delete>
	<delete id="sqldeletePermit"  parameterClass="cargo.cms.customs.bo.PermitInvoiceBO">
			DELETE FROM CST_PERMIT WHERE 
			awb_no = #awbNo# and
			HAWB_NO =#hawbNo#  and 
			permit= #permitOldCopy#
	</delete>
	<select id = "permitSelect"  parameterClass="cargo.cms.customs.bo.DutyCdtyBO" resultClass="cargo.cms.customs.bo.PermitInvoiceBO">			
	<!--select permit as permitTemp from cst_permit where AWB_NO= #awbNo# and HAWB_NO= #hawbNo#-->
		select 
			pmt_no as permitTemp,to_char(DCP_DAT,'DDMONYY') dcpRecvDate,to_char(DCP_DAT,'HH24') dcpRecvTimeHr,to_char(DCP_DAT,'mi') dcpRecvTimeMin,
			trim(to_char(DCP_QTY,'99999999999999990.0')) dcpQty,EPA_COMP epaComplYN,EPA_COMP oldEpaComplYN from cst_permit_dtl 
		where
			flt_type = #shipmentType# and
			awb_no = #awbNo# and
			awb_date = to_date(#awbDate#,'DDMONYY') and
			hawb_no = #hawbNo#
			and DUT_CODE = #dcCode#
			<isNotEmpty property="fltKey">
		    	and FLT_KEY =#fltKey#  and FLT_DATE = to_date(#fltDateDisplay#,'DDMONYY')
		    </isNotEmpty>
			order by pmt_no
	</select>	
	<select id = "fetchReceiveDtls"  parameterClass="cargo.cms.customs.bo.DutyCdtyBO" resultClass="cargo.cms.customs.bo.PermitInvoiceBO">
			SELECT to_char(DCP_RCV_DAT,'DDMONYY') dcpRecvDate,to_char(DCP_RCV_DAT,'HH24') dcpRecvTimeHr,to_char(DCP_RCV_DAT,'mi') dcpRecvTimeMin,
			trim(to_char(DCP_RCV_QTY,'99999999999999990.0')) qty,DCP_RCV_PCS PCS,DCP_RMK RMK,FLG_IND offloadYN,TR_NO trNo
			FROM CST_RCV_DTL WHERE flt_type = #shipmentType# and
			awb_no = #awbNo# and
			hawb_no = #hawbNo#
			and PMT_NO = #permitTemp#
			<isNotEmpty property="fltKey">
		    	and FLT_KEY =#fltKey#  and FLT_DATE = to_date(#fltDate#,'DDMONYY')
		    </isNotEmpty>
	</select>
	<select id = "fetchDCImageTrnsId"  parameterClass="cargo.cms.customs.bo.DutyCdtyBO" resultClass="java.lang.String">
		select img_trans_id from cst_dc_dtl where SHPM_type = #shipmentType# and awb_no = #awbNo# and hawb_no = #hawbNo# and dut_type =#dutyType# and flt_key=#fltKey# and flt_date=#fltDate#
	</select>
	<delete id="sqldeleteReceiveDtl"  parameterClass="cargo.cms.customs.bo.PermitInvoiceBO">
			DELETE FROM CST_RCV_DTL WHERE 
			awb_no = #awbNo# and
			PMT_NO = #permitTemp#
			<isNotEmpty property="trNo">
				and TR_NO = #trNo#
			</isNotEmpty>
	</delete>
	
	<select id="fetchLocationDetail" parameterClass="cargo.cms.customs.bo.DutyCdtyBO" resultClass="cargo.cms.customs.bo.DutyCdtyBO">
	select a.LSP_NO as lsp,a.LOC_CODE as locn,a.LOCN_PCS as strgPc,a.LOCN_WT as strgWt,a.ULD_KEY as uldNo, 
a.DAM_PCS as damPcs,a.DAM_WT as damWt,a.DAM_IND as dmgYN,b.LOCKED_YN as lockInd
from awb_inventory a join awb b
on a.awb_date=b.awb_date
and a.awb_no=b.awb_no
where 
a.FLT_TYPE=#shipmentType# and
a.FLT_KEY=#fltKey# and
a.FLT_DATE=#fltDate# and
a.DAM_IND='Y' and
a.AWB_NO=#awbNo# and
a.AWB_DATE=#awbDate#
	</select>
	<insert id="sqlinsertReceiveDtl" parameterClass="cargo.cms.customs.bo.PermitInvoiceBO" >
		Insert into CST_RCV_DTL (FLT_TYPE,FLT_KEY,FLT_DATE,AWB_NO,HAWB_NO,PMT_NO,DCP_RCV_DAT,DCP_RCV_QTY,DCP_RCV_PCS,DCP_RMK,FLG_IND,STF_LST_UPD,DAT_CRE,DAT_LST_UPD,TR_NO)
		values (#shipmentType#,#fltKey#,#fltDate#,#awbNo#,#hawbNo#,#permitTemp#,to_date(#dcpRecvDateTime#,'DDMONYY HH24:MI'),#qty#,#pcs#,#rmk#,#offloadYN#,#lastModifiedUser#,sysdate,sysdate,CST_RCV_DTL_SEQ.NEXTVAL)
	</insert>
	
	<select id = "countCstReceiveDtl"  parameterClass="cargo.cms.customs.bo.PermitInvoiceBO" resultClass="java.lang.Integer">
		select count(*) from CST_RCV_DTL where awb_no = #awbNo# 
			and PMT_NO = #permitTemp#
			and TR_NO = #trNo#
	</select>
	
	<update id="sqlupdateReceiveDtl" parameterClass="cargo.cms.customs.bo.PermitInvoiceBO">
		update CST_RCV_DTL set DCP_RCV_DAT=to_date(#dcpRecvDateTime#,'DDMONYY HH24:MI'),DCP_RCV_QTY=#qty#,DCP_RCV_PCS=#pcs#,DCP_RMK=#rmk#,FLG_IND=#offloadYN#,
		STF_LST_UPD=#lastModifiedUser#,DAT_LST_UPD=sysdate	where awb_no = #awbNo# and PMT_NO = #permitTemp# and TR_NO = #trNo#
	</update>
	
	
	<select id = "fetchReleaseDtls"  parameterClass="cargo.cms.customs.bo.DutyCdtyBO" resultClass="cargo.cms.customs.bo.PermitInvoiceBO">
			SELECT to_char(DCP_RLS_DAT,'DDMONYY') dcpRecvDate,to_char(DCP_RLS_DAT,'HH24') dcpRecvTimeHr,to_char(DCP_RLS_DAT,'mi') dcpRecvTimeMin,
			trim(to_char(DCP_RLS_QTY,'99999999999999990.0')) qty,DCP_RLS_PCS PCS,DCP_RMK RMK,TR_NO trNo,DCP_RLS_TYP type 
			FROM CST_RLS_DTL WHERE flt_type = #shipmentType# and
			awb_no = #awbNo# and
			hawb_no = #hawbNo#
			and PMT_NO = #permitTemp#
			<isNotEmpty property="fltKey">
		    	and FLT_KEY =#fltKey#  and FLT_DATE = to_date(#fltDate#,'DDMONYY')
		    </isNotEmpty>
	</select>
	
	<delete id="sqldeleteReleaseDtl"  parameterClass="cargo.cms.customs.bo.PermitInvoiceBO">
			DELETE FROM CST_RLS_DTL WHERE 
			awb_no = #awbNo# and
			PMT_NO = #permitTemp#
			<isNotEmpty property="trNo">
				and TR_NO = #trNo#
			</isNotEmpty>
	</delete>
	<insert id="sqlinsertReleaseDtl" parameterClass="cargo.cms.customs.bo.PermitInvoiceBO" >
		Insert into CST_RLS_DTL (FLT_TYPE,FLT_KEY,FLT_DATE,AWB_NO,HAWB_NO,PMT_NO,DCP_RLS_DAT,DCP_RLS_QTY,DCP_RLS_PCS,DCP_RMK,STF_LST_UPD,DAT_CRE,DAT_LST_UPD,TR_NO,DCP_RLS_TYP)
		values (#shipmentType#,#fltKey#,#fltDate#,#awbNo#,#hawbNo#,#permitTemp#,to_date(#dcpRecvDateTime#,'DDMONYY HH24:MI'),#qty#,#pcs#,#rmk#,#lastModifiedUser#,sysdate,sysdate,CST_RLS_DTL_SEQ.NEXTVAL,#type#)
	</insert>
	
	
	<update id="sqlupdateReleaseDtl" parameterClass="cargo.cms.customs.bo.PermitInvoiceBO">
		update CST_RLS_DTL set DCP_RLS_DAT=to_date(#dcpRecvDateTime#,'DDMONYY HH24:MI'),DCP_RLS_QTY=#qty#,DCP_RLS_PCS=#pcs#,DCP_RMK=#rmk#,DCP_RLS_TYP=#type#,
		STF_LST_UPD=#lastModifiedUser#,DAT_LST_UPD=sysdate	where awb_no = #awbNo# and PMT_NO = #permitTemp# and TR_NO = #trNo#
	</update>
	
	
	<select id = "fetchEPADtls"  parameterClass="cargo.cms.customs.bo.DutyCdtyBO" resultClass="cargo.cms.customs.bo.PermitInvoiceBO">
			SELECT to_char(EPA_DAT,'DDMONYY') dcpRecvDate,to_char(EPA_DAT,'HH24') dcpRecvTimeHr,to_char(EPA_DAT,'mi') dcpRecvTimeMin,
			trim(to_char(EPA_QTY,'99999999999999990.0')) qty,EPA_PCS PCS,EPA_RMK RMK,TR_NO trNo,EPA_REF_NO refNo,EPA_TYP type
			FROM CST_EPA_DTL WHERE flt_type = #shipmentType# and
			awb_no = #awbNo# and
			hawb_no = #hawbNo#
			and PMT_NO = #permitTemp#
			<isNotEmpty property="fltKey">
		    	and FLT_KEY =#fltKey#  and FLT_DATE = to_date(#fltDate#,'DDMONYY')
		    </isNotEmpty>
	</select>
	
	<delete id="sqldeleteEPADtl"  parameterClass="cargo.cms.customs.bo.PermitInvoiceBO">
			DELETE FROM CST_EPA_DTL WHERE 
			awb_no = #awbNo# and
			PMT_NO = #permitTemp#
			<isNotEmpty property="trNo">
				and TR_NO = #trNo#
			</isNotEmpty>
	</delete>
	<insert id="sqlinsertEPADtl" parameterClass="cargo.cms.customs.bo.PermitInvoiceBO" >
		Insert into CST_EPA_DTL (FLT_TYPE,FLT_KEY,FLT_DATE,AWB_NO,HAWB_NO,PMT_NO,EPA_DAT,EPA_QTY,EPA_PCS,EPA_RMK,STF_LST_UPD,DAT_CRE,DAT_LST_UPD,TR_NO,EPA_REF_NO,EPA_TYP)
		values (#shipmentType#,#fltKey#,#fltDate#,#awbNo#,#hawbNo#,#permitTemp#,to_date(#dcpRecvDateTime#,'DDMONYY HH24:MI'),#qty#,#pcs#,#rmk#,#lastModifiedUser#,sysdate,sysdate,CST_EPA_DTL_SEQ.NEXTVAL,#refNo#,#type#)
	</insert>
	
	
	<update id="sqlupdateEPADtl" parameterClass="cargo.cms.customs.bo.PermitInvoiceBO">
		update CST_EPA_DTL set EPA_DAT=to_date(#dcpRecvDateTime#,'DDMONYY HH24:MI'),EPA_QTY=#qty#,EPA_PCS=#pcs#,EPA_RMK=#rmk#,EPA_REF_NO=#refNo#,EPA_TYP=#type#,
		STF_LST_UPD=#lastModifiedUser#,DAT_LST_UPD=sysdate	where awb_no = #awbNo# and PMT_NO = #permitTemp# and TR_NO = #trNo#
	</update>
	
	<insert id="permitInsert" parameterClass="cargo.cms.customs.bo.PermitInvoiceBO" >
      insert into cst_permit values(#awbNo#,#hawbNo#, #permitTemp#, 'Y', #createUserId#, sysdate, #lastModifiedUser#,sysdate)
    </insert>
    <insert id="permitInsertDtl" parameterClass="cargo.cms.customs.bo.PermitInvoiceBO" >
      Insert into CST_PERMIT_DTL (FLT_TYPE,FLT_KEY,FLT_DATE,AWB_NO,HAWB_NO,PMT_NO,LM_USER_ID,LM_DATE,LM_VER,AWB_DATE,DUT_CODE,EPA_COMP,DCP_DAT,DCP_QTY,TR_TYPE) 
      values (#shipmentType#,#fltKey#,#fltDate#,#awbNo#,#hawbNo#,#permitTemp#, #lastModifiedUser#,sysdate,'1',#awbDate#,#dcCode#,#epaComplYN#,to_date(#dcpRecvDateTime#,'DDMONYY HH24:MI'),#dcpQty#,#trType#) 
    </insert>
          	
	<update id="permitUpdate" parameterClass="cargo.cms.customs.bo.PermitInvoiceBO">
   		update cst_permit set permit = #permitTemp#, LM_DATE = sysdate , LM_USER_ID= #lastModifiedUser# where AWB_NO= #awbNo# and HAWB_NO =#hawbNo#  and permit= #permitOldCopy#
   	</update>
     
   	<update id="permitUpdateDtl" parameterClass="cargo.cms.customs.bo.PermitInvoiceBO">
   		update cst_permit_dtl set PMT_NO = #permitTemp#,DCP_DAT=to_date(#dcpRecvDateTime#,'DDMONYY HH24:MI'),DCP_QTY=#dcpQty#,LM_DATE = sysdate , LM_USER_ID= #lastModifiedUser#,TR_TYPE=#trType# where AWB_NO= #awbNo# and HAWB_NO =#hawbNo#  and PMT_NO= #permitOldCopy#
   	</update>
     
     <delete id="deletePermit"  parameterClass="cargo.cms.customs.bo.PermitInvoiceBO">
    	 delete from cst_permit where AWB_NO= #awbNo# and HAWB_NO =#hawbNo# and  permit = #permitTemp#
    </delete>
    
    <delete id="deletePermitDetailAllForExempted"  parameterClass="cargo.cms.customs.bo.DutyCdtyBO">
		delete from cst_dc_dtl where awb_no = #awbNo# and hawb_no= #hawbNo#  
   	</delete>
   	
   	 <delete id="deletePermitDetail1"  parameterClass="cargo.cms.customs.bo.PermitInvoiceBO">
		delete from cst_permit_dtl where awb_no = #awbNo# and hawb_no= #hawbNo#  and  permit = #permitTemp#
   	</delete>
   	
   	<select id = "checkDutyCode"  parameterClass="cargo.cms.customs.bo.DutyCdtyBO" resultClass="java.lang.String">		
		select count(1) from CST_CODE_DTL where
    	FLT_TYPE=#shipmentType# and AWB_NO=#awbNo# and HAWB_NO= #hawbNo# and DUT_CODE=#dcCodeOldCopy#
    	<isNotEmpty property="fltKey">
	    	and FLT_KEY =#fltKey#  and FLT_DATE = to_date(#fltDate#,'DDMONYY')
	    </isNotEmpty>
   	</select>
   	
   	<select id = "selectDutyCodeDetailsCount" parameterClass="cargo.cms.customs.bo.DutyCdtyBO" resultClass="java.lang.Integer">
   		select count(1) from CST_CODE_DTL  where FLT_TYPE=#shipmentType#
    	and AWB_NO = #awbNo#
    	and HAWB_NO = #hawbNo# and DUT_CODE=#dcCodeOldCopy# and DUT_UNIT=#dcUnit#
    	<isNotEmpty property="fltKey">
    	and FLT_KEY =#fltKey#  and FLT_DATE=to_date(#fltDate#,'DDMONYY') 
    	</isNotEmpty>
   </select>   
   
   	<select id = "selectDutyCodeDetails" parameterClass="cargo.cms.customs.bo.DutyCdtyBO" resultClass="cargo.cms.customs.bo.DutyCdtyBO">		
		select 
			DUT_CODE as dcCode, 
			DUT_CODE as dcCodeOldCopy, 
			trim(to_char(DUT_QTY,'999999999.99')) as dcQty, 
			DUT_UNIT as dcUnit, 
			DUT_PCS as dcPc,
			HAWB_NO as hawbNo,
			DUT_RMK as dcRemark,
		    'Y' as fromDB,
		    DC_COMP dcCompl,
		    DC_COMP oldDcCompl,
		    'Y' isDisplayReqd
		from 
			CST_CODE_DTL 
		where 
				FLT_TYPE=#shipmentType# and AWB_NO= #awbNo#
			and HAWB_NO=#hawbNo# 
			<isNotEmpty property="fltKey">
		    	and FLT_KEY =#fltKey#  and FLT_DATE = to_date(#fltDate#,'DDMONYY')
		    </isNotEmpty>
   	</select>
   	
   	 <update id="updateDutyContent" parameterClass="cargo.cms.customs.bo.DutyCdtyBO">
  	     update edi_fhl_hawb set MANIFEST_DESC= #dcContent# where tr_no =  #hawb_Trno# and doc_line_no = #hawb_docLineNo#
    </update>
    
    <insert id = "insertDutyCodeDetails"  parameterClass="cargo.cms.customs.bo.DutyCdtyBO">	
	insert into cst_code_dtl (FLT_TYPE,FLT_KEY,	FLT_DATE,AWB_NO,HAWB_NO,DUT_CODE,DUT_QTY,DUT_UNIT,DUT_PCS, DUT_RMK, LM_USER_ID, LM_DATE, LM_VER)
	 values(#shipmentType#,#fltKey#,#fltDate#,#awbNo#,#hawbNo#,#dcCode#,#dcQty#,#dcUnit#,#dcPc#, #dcRemark#,#lastModifiedUser#, sysdate,1)
	</insert>
       
     <select id="dutycmdtssummarylist"  parameterClass="cargo.cms.customs.bo.DCQueryBO" resultClass="cargo.cms.customs.bo.DCSummaryBO">
		SELECT 
		  FLT_OPR.FLT_KEY as fltNO,
		  TO_CHAR(FLT_OPR.SCH_DATE,'DDMONYY') as fltDate,
		  FLT_OPR.ACT_TIME as etd,
		  TO_CHAR(ACK_DATE,'DDMONYY') as fltClrDate,
		  DECODE(COUNT(DUT_TYPE), 0,'N','Y') AS  dc 
		FROM 
		  FLT_OPR LEFT OUTER JOIN CST_DC_DTL ON FLT_OPR.FLT_KEY = CST_DC_DTL.FLT_KEY   AND 
		  FLT_OPR.SCH_DATE = CST_DC_DTL.FLT_DATE 
		 <isNotEmpty property="fltType">
		 <isEqual property="fltType" compareValue="E"> 
		 AND CST_DC_DTL.DUT_TYPE='E'
		 </isEqual>  
		 </isNotEmpty>   
		 <isNotEmpty property="fltType">          
		<isEqual property="fltType" compareValue="I"> 
		AND CST_DC_DTL.DUT_TYPE='I'
		</isEqual>
        </isNotEmpty>    
		LEFT OUTER JOIN CST_ACK ON   FLT_OPR.FLT_KEY = CST_DC_DTL.FLT_KEY   AND FLT_OPR.SCH_DATE = CST_DC_DTL.FLT_DATE 
		<isNotEmpty property="fltType">
	 	<isEqual property="fltType" compareValue="E">
	    AND CST_ACK.FLT_TYPE = 'E'
	    </isEqual>   
		</isNotEmpty>    
	    <isNotEmpty property="fltType">
		<isEqual property="fltType" compareValue="I">
	    AND CST_ACK.FLT_TYPE = 'I'
	    </isEqual> 
		</isNotEmpty> 
		   WHERE 
  			FLT_OPR.SCH_DATE BETWEEN TO_DATE(#startDate#, 'DDMONYY') AND TO_DATE(#endDate#, 'DDMONYY')
   		<isNotEmpty  property="carrier"> 	
	     AND  FLT_OPR.CARR_CODE = #carrier#
	    </isNotEmpty> 
			GROUP BY FLT_OPR.FLT_KEY,TO_CHAR(FLT_OPR.SCH_DATE,'DDMONYY'),FLT_OPR.ACT_TIME,TO_CHAR(ACK_DATE,'DDMONYY')	      
	   </select>
	   
	   <select id="dutycmdtsdetailslist"  parameterClass="cargo.cms.customs.bo.DCSummaryBO" resultClass="cargo.cms.customs.bo.DutyCdtyBO">
	select 
	    to_char(a.awb_date,'DDMONYY') as awbDate,
	    a.awb_no as awbNo,
	    substr(a.awb_no,0,3) as awbNoPFX,
	    substr(a.awb_no,4) as awbNoSFX,
		a.hawb_no as hawbNo, 
		a.dut_pcs as dcPc, 
		a.dut_code as dcCode, 
		a.dut_qty as dcQty,
		a.dut_unit as dcUnit, 
		(SELECT STRAGG(STRINGDELIM(pmt_no,' , ')) FROM cst_permit_dtl b WHERE b.flt_type=#fltType# and
         b.flt_key =#fltNO# and
         b.flt_date=to_date(#fltDate#,'DDMONYY') and b.awb_no=a.awb_no)  as permitNo, 
		pkg_cst_dc.get_awb_hawb_content(a.awb_no, a.awb_date, a.hawb_no, a.flt_type) as dcContent
	from   cst_code_dtl a
  	where  a.flt_type = #fltType#
	and    a.flt_key = #fltNO#
	and    a.flt_date = to_date(#fltDate#,'DDMONYY')
	 UNION
  select 
	    to_char(a.awb_date,'DDMONYY') as awbDate,
	    a.awb_no as awbNo,
	    substr(a.awb_no,0,3) as awbNoPFX,
	    substr(a.awb_no,4) as awbNoSFX,
		a.hawb_no as hawbNo, 
		a.dut_pcs as dcPc, 
		a.dut_code as dcCode, 
		a.dut_qty as dcQty,
		a.dut_unit as dcUnit, 
		(SELECT STRAGG(STRINGDELIM(pmt_no,' , ')) FROM cst_permit_dtl b WHERE b.flt_type='E' and
         b.flt_key =#fltNO# and
         b.flt_date=to_date(#fltDate#,'DDMONYY') and b.awb_no=a.awb_no)  as permitNo, 
		pkg_cst_dc.get_awb_hawb_content(a.awb_no, a.awb_date, a.hawb_no, a.flt_type) as dcContent
	from   cst_code_dtl a
  	 where (a.awb_no,a.awb_date) in (SELECT awb_no,awb_date
          FROM exp_pmanifest_awb
          WHERE flt_type = 'E'
	and   flt_key = #fltNO#
	and    flt_date = to_date(#fltDate#,'DDMONYY'))		
	</select>
	
	<select id="warehousereturnslistCOUNT"  parameterClass="cargo.cms.customs.bo.DCQueryBO" resultClass="java.lang.Integer">
     
		 SELECT 
			 FLT_KEY AS fltKey, 
			 TO_CHAR(FLT_DATE,'DDMONYY') AS fltDate, 
			 AWB_NO AS awbNo,
			 SUBSTR(AWB_NO, 1,3)||'-'||SUBSTR(AWB_NO,4,8)as dispAwbNo,  
			 PCS AS dutyPcs, 
			 WT AS dutyWt,  
			 TO_CHAR(RCL_DATE,'DDMONYY') AS releaseOn, 
			 PERMIT_LISTS AS pmtNo,  
			 DC_REMARKS AS dutRmk 
		 FROM 
			 GT_CST_DC_WH_RETURNS_EXP
			 ORDER BY FLT_DATE,RCL_DATE DESC		
	
	
   </select>
   
   
   <select id="warehouseReturnsImpListCOUNT"  parameterClass="cargo.cms.customs.bo.DCQueryBO" resultClass="java.lang.Integer">
		 
		SELECT FLT_KEY AS fltKey, 
		TO_CHAR(FLT_DATE,'DDMONYY') AS fltDate,  
		AWB_NO AS awbNo,
		SUBSTR(AWB_NO, 1,3)||'-'||SUBSTR(AWB_NO,4,8) AS dispAwbNo,  
		PCS	AS dutyPcs, 
		DECODE(HAWB_NO, '000000000000000000', '', HAWB_NO) AS hawbNo,  
		CF_PCS AS carryFwdPcs, 
		REL_PCS	AS releasePcs, 
		PERMIT_LISTS AS pmtNo, 
		TO_CHAR(REL_ON,'DDMONYY') AS releaseOn,  
		DC_REMARKS AS dutRmk 
		FROM GT_CST_DC_WH_RETURNS_IMP	
		ORDER BY FLT_DATE DESC	, AWB_NO
		
   </select> 
   <select id="warehousereturnslist"  parameterClass="cargo.cms.customs.bo.DCQueryBO" resultClass="cargo.cms.customs.bo.DCWHReturnsBO">
     	 
		 SELECT 
			 gt.FLT_KEY AS fltKey, 
			 TO_CHAR(gt.FLT_DATE,'DDMONYY') AS fltDate, 
			 gt.AWB_NO AS awbNo,
			 SUBSTR(gt.AWB_NO, 1,3)||'-'||SUBSTR(gt.AWB_NO,4,8)as dispAwbNo,  
			 gt.PCS AS dutyPcs, 
			 gt.WT AS dutyWt,  
			 TO_CHAR(gt.RCL_DATE,'DDMONYY') AS releaseOn, 
			 gt.PERMIT_LISTS AS pmtNo,  
			 gt.DC_REMARKS AS dutRmk 
		 FROM 
			 GT_CST_DC_WH_RETURNS_EXP gt
			 <isNotEmpty property="loginCarrier">
			 join flt_opr fo
			 on fo.flt_key = gt.flt_key
			 and TO_CHAR(fo.sch_date,'DDMONYY') = TO_CHAR(gt.flt_date,'DDMONYY')
		 where decode(fo.flt_type, 'A', 'I', 'E') = #fltType#
				AND	(fo.CARR_CODE = #loginCarrier#
				OR fo.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE = #loginCarrier#))
			 </isNotEmpty>
	<dynamic prepend="ORDER BY ">
                         <isNotEmpty property="sortOrder.sortField">
                        $sortOrder.sortField$
                  </isNotEmpty>
                   <isEmpty property="sortOrder.sortField">
                        FLT_DATE,RCL_DATE DESC
                  </isEmpty>
            </dynamic> 
           
	
   </select>
   
   
   <select id="warehouseReturnsImpList"  parameterClass="cargo.cms.customs.bo.DCQueryBO" resultClass="cargo.cms.customs.bo.DCWHReturnsBO">
		 
		SELECT gt.FLT_KEY AS fltKey, 
		TO_CHAR(gt.FLT_DATE,'DDMONYY') AS fltDate,  
		gt.AWB_NO AS awbNo,
		SUBSTR(gt.AWB_NO, 1,3)||'-'||SUBSTR(gt.AWB_NO,4,8) AS dispAwbNo,  
		gt.PCS	AS dutyPcs, 
		DECODE(gt.HAWB_NO, '000000000000000000', '', gt.HAWB_NO) AS hawbNo,  
		gt.CF_PCS AS carryFwdPcs, 
		gt.REL_PCS	AS releasePcs, 
		gt.PERMIT_LISTS AS pmtNo, 
		TO_CHAR(gt.REL_ON,'DDMONYY') AS releaseOn,  
		gt.DC_REMARKS AS dutRmk 
		FROM GT_CST_DC_WH_RETURNS_IMP gt		
		<isNotEmpty property="loginCarrier">
		join flt_opr fo
			 on fo.flt_key = gt.flt_key
			 and TO_CHAR(fo.sch_date,'DDMONYY') = TO_CHAR(gt.flt_date,'DDMONYY')
		where decode(fo.flt_type, 'A', 'I', 'E') = #fltType#
				AND	(fo.CARR_CODE = #loginCarrier#
				OR fo.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE = #loginCarrier#))
		</isNotEmpty>
		<dynamic prepend="ORDER BY ">
                         <isNotEmpty property="sortOrder.sortField">
                        $sortOrder.sortField$
                  </isNotEmpty>
                   <isEmpty property="sortOrder.sortField">
                        FLT_DATE DESC	, AWB_NO
                  </isEmpty>
            </dynamic> 
   </select> 
   
   <update id="warehousereturnsupdate" parameterClass="cargo.cms.customs.bo.DCWHReturnsBO" >
	<![CDATA[
	
		UPDATE  CST_CODE_DTL
		SET DUT_QTY = #dutyQty#,DUT_PCS= #dutyPcs#
		WHERE 	FLT_TYPE	= #fltType# AND 	FLT_KEY=#fltKey# AND FLT_DATE=#fltDate# AND
		AWB_NO=#mawb# AND HAWB_NO=#hawbNo# AND	DUT_CODE=#dutyCode#	
	]]>
	</update>	

	<select id="licenseDetailsList"  parameterClass="cargo.cms.customs.bo.DutyCdtyBO" resultClass="cargo.cms.customs.bo.DutyCdtyBO">
	           SELECT 
		           HAWB_NO as hawbNo, 
		           HAWB_ORG as originOfHawbno, 
		           HAWB_DEST as destinationOfHawbno, 
		           HAWB_PCS as hawbPcs, 
		           HAWB_NET_WT as hawbWt,
		           EDI_FHL.AWB_NO as awbNo,
		           EDI_FHL.AWB_DATE AS awbDate,
		           EDI_FHL.FLT_TYPE AS awbType,
		           'Content' as cont,
		           (SELECT COUNT(CL.LICENSE) FROM CST_LICENSE CL WHERE CL.AWB_NO = #awbNo# AND CL.HAWB_NO = EDI_FHL_HAWB.HAWB_NO) AS noOfLicense
		           
	           FROM 
	           	   EDI_FHL LEFT 
	               OUTER JOIN EDI_FHL_HAWB ON 	
	          			 EDI_FHL.TR_NO = EDI_FHL_HAWB.TR_NO	
	         			 AND EDI_FHL.COPY_NO = (SELECT MAX(COPY_NO) FROM EDI_FHL WHERE EDI_FHL.AWB_NO = #awbNo# GROUP BY AWB_NO)	
	          WHERE 
	               EDI_FHL.AWB_NO = #awbNo#
	</select>
	
	<select id="licenseView"  parameterClass="cargo.cms.customs.bo.DutyCdtyBO" resultClass="cargo.cms.customs.bo.DutyCdtyBO">
  			SELECT 
      			EFH.HAWB_NO AS hawbNo, 
      			EFH.HAWB_ORG AS originOfHawbNo, 
      			EFH.HAWB_DEST AS destinationOfHawbNo, 
                EFH.HAWB_PCS AS hawbPcs, 
                EFH.HAWB_NET_WT AS hawbWt,
	            EF.AWB_NO AS awbNo,
	            SUBSTR(EF.AWB_NO, 1,3) as awbNoPFX, 
	            SUBSTR(EF.AWB_NO, 4,11) as awbNoSFX,
	            EF.AWB_DATE AS awbDate,
	            EF.FLT_TYPE AS awbType,
	            EF.AWB_PCS AS awbPcs,
	            EF.AWB_WT AS awbWt,
	            'Content' as cont,
	            (SELECT COUNT(LICENSE) FROM CST_LICENSE CL WHERE CL.AWB_NO = #awbNo# AND CL.HAWB_NO = #hawbNo#) AS noOfLicense
			FROM 
				        EDI_FHL EF
						LEFT OUTER JOIN EDI_FHL_HAWB EFH ON     
			            EF.TR_NO = EFH.TR_NO
			        AND EF.COPY_NO = (SELECT MAX(COPY_NO) FROM EDI_FHL WHERE EDI_FHL.AWB_NO = #awbNo# GROUP BY AWB_NO)
		    WHERE       EF.AWB_NO = #awbNo#
			        AND EFH.HAWB_NO = #hawbNo#
	</select>
	
	<select id="fetchLicenseDetails" parameterClass="cargo.cms.customs.bo.DutyCdtyBO" resultClass="cargo.cms.customs.bo.DutyCdtyBO">		
		select distinct LICENSE
			from (select h.awb_no, h.awb_date, ha.hawb_no, l.LIC_PER_NO LICENSE
				from EDI_FHL h
				join EDI_FHL_HAWB ha on ha.tr_no = h.tr_no
				join EDI_FHL_HAWB_LIC_PER l on h.tr_no = l.tr_no and ha.doc_line_no = l.hdoc_line_no
				where l.LIC_PER_TYPE = 'LIC'
				union all
				select awb_no, awb_date, hawb_no, LICENSE
				from   cst_license
				where  awb_no = #awbNo#) a
			where   awb_no = #awbNo#
				and    hawb_no = #hawbNo#			
	</select>
		

	<!--To Update license Details -->
	<insert id="insertLicenseDetails" parameterClass="cargo.cms.customs.bo.DutyCdtyBO">
		<![CDATA[
			  INSERT INTO CST_LICENSE (
			  AWB_NO ,      
			  HAWB_NO ,  
			  LICENSE ,  
			  CR_USER_ID , 
			  CR_DATE  ,    
			  LM_USER_ID  ,
			  LM_DATE,FLT_TYPE,AWB_DATE )              
			  VALUES ( 			  			  
			  #awbNo#,
			  #hawbNo#,
			  UPPER(#license#),
			  #createUserId#,
			  sysdate,
			  #createUserId#,
			  sysdate,#flightType#,to_date(#awbDate#,'ddMONyy'))
		 ]]>
	</insert>	
	
	<!--To Update license Details -->
	<update id="updateLicensedetails" parameterClass="cargo.cms.customs.bo.DutyCdtyBO">	
		
		UPDATE CST_LICENSE
		SET    LICENSE = UPPER(#license#), 
			   LM_DATE = sysdate,
			   LM_USER_ID = #createUserId#
		WHERE 
		       UPPER(AWB_NO) = UPPER(#awbNo#)
		   AND UPPER(HAWB_NO) = UPPER(#hawbNo#)
		   AND UPPER(LICENSE) = UPPER(#licenseCopy#)
	</update>
	
	<!--To Delete license Details -->
	<delete id="deleteLicensedetails" parameterClass="cargo.cms.customs.bo.DutyCdtyBO">
	<![CDATA[
		DELETE FROM 
		       CST_LICENSE
	    WHERE  
	           UPPER(AWB_NO) = UPPER(#awbNo#)
		   AND UPPER(HAWB_NO) = UPPER(#hawbNo#)
		   AND UPPER(LICENSE) = UPPER(#license#)			   		
	]]>
	</delete>
	
  	<select id="createCar"  parameterClass="cargo.cms.customs.bo.DutyCdtyBO" resultClass="cargo.cms.customs.bo.DutyCdtyBO">
      			SELECT HAWB_NO as hawbNo, HAWB_ORG as orig, HAWB_DEST as dest, 
                HAWB_PCS as hawbPcs, HAWB_NET_WT as hawbWt,(select count(license) from cst_license where awb_no = #awbNo#) as license,      
	            EDI_FHL.AWB_NO as awbNo,EDI_FHL.AWB_DATE,EDI_FHL.FLT_TYPE,AWB_PCS as awbPcs,AWB_WT as awbWt
				FROM EDI_FHL LEFT OUTER JOIN EDI_FHL_HAWB ON     
				EDI_FHL.TR_NO = EDI_FHL_HAWB.TR_NO
				AND EDI_FHL.COPY_NO = (SELECT MAX(COPY_NO) FROM EDI_FHL WHERE EDI_FHL.AWB_NO = #awbNo# GROUP BY AWB_NO)
				WHERE EDI_FHL.AWB_NO = #awbNo#
				and HAWB_NO = #hawbNo#
	  </select>
	
	<select id="enqPermit"  parameterClass="cargo.cms.customs.bo.DutyCdtyBO" resultClass="cargo.cms.customs.bo.DutyCdtyBO">
 SELECT 
	T.SHPM_TYPE AS flightType,    
	T.FLT_KEY AS fltKey,
	T2.CARR_CODE as carrierCode,
	T2.FLT_NO as fltName,
	TO_CHAR(T.FLT_DATE,'DDMONYY') AS fltDate, 
	DECODE(T.SHPM_TYPE, 'I',
	(PKG_COMMON.get_flt_eta(T.FLT_KEY, TO_char(T.FLT_DATE,'DDMONYY'), 'A', 'DD')) ,'E', (PKG_COMMON.get_flt_eta(T.FLT_KEY, TO_char(T.FLT_DATE,'DDMONYY'), 'D', 'DD'))) AS eta,
	DECODE(T.SHPM_TYPE, 'I',
	(PKG_COMMON.get_flt_eta(T.FLT_KEY, TO_char(T.FLT_DATE,'DDMONYY'), 'A', 'DD')) ,'E', (PKG_COMMON.get_flt_eta(T.FLT_KEY, TO_char(T.FLT_DATE,'DDMONYY'), 'D', 'DD'))) AS eta1,
	T.AWB_NO AS awbNo,
	T.AWB_NO AS awbNo1,
	SUBSTR(T.AWB_NO,1,3) AS awbNoPFX,   
	SUBSTR(T.AWB_NO, 4,11) as awbNoSFX, 
	TO_CHAR(T.AWB_DATE,'DDMONYY') AS awbDate,       
	T.HAWB_NO AS hawbNo,          
	T1.DUT_CODE AS dcCode,  
	T1.DUT_QTY AS dcQty,          
	T1.DUT_UNIT AS unit,                
	T1.DUT_PCS AS dcPc,     
	T1.DUT_RMK AS dcRem,
	car_shp.dam_pcs as  damPcs,
	(SELECT STRAGG(STRINGDELIM(C.PERMIT,' , ')) FROM CST_PERMIT C WHERE C.AWB_NO = T.AWB_NO 
	and C.HAWB_NO = T.HAWB_NO)  AS permit,
	T1.DC_COMP AS dcCompl, 
	(Case When (Select Awb_Type From Awb Where Awb_No=T.Awb_No And Awb_Date=TO_CHAR(T.AWB_DATE,'DDMONYY')) = 'I'
      Then (Select V.Cc_Code From V_Cst_Imp_Cc_Code_Awb_ALL V
			Where V.Flt_Key = T.Flt_Key And V.Flt_Date = To_Char(T.Flt_Date,'DDMONYY') And V.Awb_No = T.Awb_No And V.Awb_date = T.Awb_date)
      Else (SELECT cc_code FROM (SELECT W.cc_code FROM v_cst_cc_code_ALL W join mast_constraint_code c on W.cc_code = c.code WHERE W.Awb_No = T.Awb_No And W.Awb_date = T.Awb_date 
      		ORDER BY priority DESC) WHERE rownum = 1) END) latestCC,
	E.DUT_COMMODITY AS dcchkd
	FROM  CST_DC_DTL T       
	LEFT JOIN CST_CODE_DTL T1 on 
	T.SHPM_TYPE=T1.FLT_TYPE
	AND T.AWB_NO = T1.AWB_NO  
	AND T.AWB_DATE = T1.AWB_DATE  
	AND T.HAWB_NO = T1.HAWB_NO 
	AND nvl(t.flt_key,'**')  =nvl(t1.flt_key,'**')
	AND nvl(t.flt_date,t1.flt_date) =t1.flt_date
	left JOIN FLT_OPR T2 on 
	T.FLT_KEY=T2.FLT_KEY and
	T.FLT_DATE=T2.SCH_DATE
	AND T.SHPM_TYPE = DECODE(T2.FLT_TYPE, 'A', 'I', 'D', 'E')   
	LEFT JOIN (select awb_no ,awb_date,DUT_COMMODITY from EXP_RCL_HD where DUT_COMMODITY='Y' and rownum=1) E ON E.AWB_NO = T.AWB_NO AND E.AWB_DATE = T.AWB_DATE 
	left join IMP_CAR_SHP car_shp on car_shp.flt_key=T.FLT_KEY and car_shp.flt_date=T.FLT_DATE and car_shp.AWB_NO = T.AWB_NO and car_shp.awb_date=T.awb_date and car_shp.flt_type=T.shpm_type
	WHERE T.SHPM_TYPE = NVL(#flightType#, T.SHPM_TYPE)
	AND ((T.FLT_key is not null and TO_CHAR(T.FLT_DATE,'DDMONYY') BETWEEN NVL(TO_DATE(#startDate#,'DDMONYY'), T.FLT_DATE) AND NVL(TO_DATE(#endDate#,'DDMONYY'), NVL(TO_DATE(#startDate#,'DDMONYY'), T.FLT_DATE)))
		 OR (T1.FLT_key is not null and  TO_CHAR(T1.FLT_DATE,'DDMONYY') BETWEEN NVL(TO_DATE(#startDate#,'DDMONYY'), T.FLT_DATE) AND NVL(TO_DATE(#endDate#,'DDMONYY'), NVL(TO_DATE(#startDate#,'DDMONYY'), T1.FLT_DATE)))
		 OR (t1.flt_type ='E' and T1.FLT_key is null and  to_char(t1.awb_date,'DDMONYY') between TO_DATE(#startDate#,'DDMONYY') and TO_DATE(#endDate#,'DDMONYY'))
	)
	AND nvl(T1.DUT_CODE, '**') = NVL(#dcType# , nvl(T1.DUT_CODE, '**'))               
	AND T.AWB_NO = NVL(#awbNo#, T.AWB_NO)
	AND T.HAWB_NO = NVL(#hawbNo#, T.HAWB_NO)             
	AND T.DUT_TYPE = DECODE(NVL(#exmptYN#, 'N'), 'Y', 'E', T.DUT_TYPE) 
	AND nvl(T1.DC_COMP, '**') = NVL(#dcCompl# , nvl(T1.DC_COMP, '**'))  
<isNotEmpty property="fltKey">	
           	AND T.FLT_KEY = #fltKey#
             </isNotEmpty>
 <isNotEmpty property="carrCode">	
           	AND T2.CARR_CODE = #carrCode#
 </isNotEmpty>
 <isEmpty property="carrCode">
           	<isNotEmpty property="loginCarrier">
                 AND ( T2.CARR_CODE = #loginCarrier#
               	OR T2.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE   = #loginCarrier#))                                        
            </isNotEmpty>
 </isEmpty>
<isEqual compareValue="Y" property="dmgYN">
           and car_shp.dam_pcs!=0
</isEqual>
<dynamic prepend="ORDER BY ">
                         <isNotEmpty property="sortOrder.sortField">
                        $sortOrder.sortField$
                  </isNotEmpty>
            </dynamic>  

 	</select>
  	<select id="enqPermitCOUNT"  parameterClass="cargo.cms.customs.bo.DutyCdtyBO" resultClass="java.lang.Integer">
  SELECT COUNT(*) AS totalRowCount FROM (   
 SELECT  
T.SHPM_TYPE AS flightType,    
T.FLT_KEY AS fltKey, 
TO_CHAR(T.FLT_DATE,'DDMONYY') AS fltDate, 
DECODE(T.SHPM_TYPE, 'I',
DECODE(T2.ACT_TIME, NULL, '', SUBSTR(LPAD(T2.ACT_TIME, 4, '0'), 1, 2)||':'||SUBSTR(LPAD(T2.ACT_TIME, 4, '0'), 3)),'E', DECODE(T2.EST_TIME, NULL, '', SUBSTR(LPAD(T2.EST_TIME, 4, '0'), 1, 2)||':'||SUBSTR(LPAD(T2.EST_TIME, 4, '0'), 3))) AS eta,
DECODE(T.SHPM_TYPE, 'I',
DECODE(T2.ACT_TIME, NULL, '', SUBSTR(LPAD(T2.ACT_TIME, 4, '0'), 1, 2)||':'||SUBSTR(LPAD(T2.ACT_TIME, 4, '0'), 3)),'E', DECODE(T2.EST_TIME, NULL, '', SUBSTR(LPAD(T2.EST_TIME, 4, '0'), 1, 2)||':'||SUBSTR(LPAD(T2.EST_TIME, 4, '0'), 3))) AS eta1,
T.AWB_NO AS awbNo,
T.AWB_NO AS awbNo1,
SUBSTR(T.AWB_NO,1,3) AS awbNoPFX,   
SUBSTR(T.AWB_NO, 4,11) as awbNoSFX, 
TO_CHAR(T.AWB_DATE,'DDMONYY') AS awbDate,       
T.HAWB_NO AS hawbNo,          
T1.DUT_CODE AS dcCode,  
T1.DUT_QTY AS dcQty,          
T1.DUT_UNIT AS unit,                
T1.DUT_PCS AS dcPc,     
T1.DUT_RMK AS dcRem,
car_shp.dam_pcs as  damPcs,
C.PERMIT AS permit,
T1.DC_COMP AS dcCompl, 
(Case When (Select Awb_Type From Awb Where Awb_No=T.Awb_No And Awb_Date=TO_CHAR(T.AWB_DATE,'DDMONYY')) = 'I'
      Then (Select V.Cc_Code From V_Cst_Imp_Cc_Code_Awb_ALL V
			Where V.Flt_Key = T.Flt_Key And V.Flt_Date = To_Char(T.Flt_Date,'DDMONYY') And V.Awb_No = T.Awb_No And V.Awb_date = T.Awb_date )
      Else Pkg_Exp_Val.Get_Exp_Awb_Cc_Code(T.Awb_No) END) latestCC,
E.DUT_COMMODITY AS dcchkd
FROM  CST_DC_DTL T       
LEFT JOIN CST_CODE_DTL T1 on 
T.SHPM_TYPE=T1.FLT_TYPE
AND T.AWB_NO = T1.AWB_NO  
AND T.AWB_DATE = T1.AWB_DATE  
AND T.HAWB_NO = T1.HAWB_NO 
left JOIN FLT_OPR T2 on 
T.FLT_KEY=T2.FLT_KEY and
T.FLT_DATE=T2.SCH_DATE
AND T.SHPM_TYPE = DECODE(T2.FLT_TYPE, 'A', 'I', 'D', 'E')   
LEFT JOIN (select awb_no ,awb_date,DUT_COMMODITY from EXP_RCL_HD where DUT_COMMODITY='Y' and rownum=1) E ON E.AWB_NO = T.AWB_NO AND E.AWB_DATE = T.AWB_DATE 
	left join IMP_CAR_SHP car_shp on car_shp.flt_key=T.FLT_KEY and car_shp.flt_date=T.FLT_DATE and car_shp.AWB_NO = T.AWB_NO and car_shp.awb_date=T.awb_date and car_shp.flt_type=T.shpm_type
	WHERE T.SHPM_TYPE = NVL(#flightType#, T.SHPM_TYPE)
	AND ((T.FLT_key is not null and TO_CHAR(T.FLT_DATE,'DDMONYY') BETWEEN NVL(TO_DATE(#startDate#,'DDMONYY'), T.FLT_DATE) AND NVL(TO_DATE(#endDate#,'DDMONYY'), NVL(TO_DATE(#startDate#,'DDMONYY'), T.FLT_DATE)))
		 OR (T1.FLT_key is not null and  TO_CHAR(T1.FLT_DATE,'DDMONYY') BETWEEN NVL(TO_DATE(#startDate#,'DDMONYY'), T.FLT_DATE) AND NVL(TO_DATE(#endDate#,'DDMONYY'), NVL(TO_DATE(#startDate#,'DDMONYY'), T1.FLT_DATE)))
		 OR (t1.flt_type ='E' and T1.FLT_key is null and  to_char(t1.awb_date,'DDMONYY') between TO_DATE(#startDate#,'DDMONYY') and TO_DATE(#endDate#,'DDMONYY'))
	)
	AND nvl(T1.DUT_CODE, '**') = NVL(#dcType# , nvl(T1.DUT_CODE, '**'))               
	AND T.AWB_NO = NVL(#awbNo#, T.AWB_NO)
	AND T.HAWB_NO = NVL(#hawbNo#, T.HAWB_NO)             
	AND T.DUT_TYPE = DECODE(NVL(#exmptYN#, 'N'), 'Y', 'E', T.DUT_TYPE) 
	AND T1.DC_COMP=NVL(#dcCompl#, T1.DC_COMP) 
 <isNotEmpty property="fltKey">	
           	AND T.FLT_KEY = #fltKey#
             </isNotEmpty>
 <isNotEmpty property="carrCode">	
           	AND T2.CARR_CODE = #carrCode#
 </isNotEmpty>
 <isEmpty property="carrCode">
           	<isNotEmpty property="loginCarrier">
                 AND ( T2.CARR_CODE = #loginCarrier#
               	OR T2.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE   = #loginCarrier#))                                        
            </isNotEmpty>
 </isEmpty>
<isEqual compareValue="Y" property="dmgYN">
           and car_shp.dam_pcs!=0
</isEqual>
order by t.flt_date, t.flt_key, t.awb_no ,t.hawb_no
)
  
  	</select>

	<select id="permitSchedule"  parameterClass="cargo.cms.customs.bo.DutyCdtyBO" resultClass="cargo.cms.customs.bo.DutyCdtyBO">
		SELECT 
			DUT_TYPE AS dcType,
			pkg_cst_dc.get_awb_hawb_content(AWB_NO, AWB_DATE, HAWB_NO, SHPM_TYPE) AS dcContent,IMG_TRANS_ID as transactionId
		FROM  
			CST_DC_DTL
		WHERE  
			   SHPM_TYPE = #flightType#
           AND AWB_NO = #awbNo#
           AND AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
           AND HAWB_NO = #hawbNo#	
           <isNotEmpty property="fltKey">	
           	AND FLT_KEY = #fltKey#
           	AND FLT_DATE = To_date(#fltDate#,'DDMONYY')	
           </isNotEmpty>	
            <isEmpty property="fltKey">	
           		AND FLT_KEY is null
           </isEmpty>
	</select>	
	
		<delete id="deleteDutyDetailForExempted"  parameterClass="cargo.cms.customs.bo.DutyCdtyBO">
	delete  from cst_dc_dtl  where SHPM_TYPE=#shipmentType#  and AWB_NO=#awbNo# and HAWB_NO=#hawbNo# 
	<isNotEmpty property="fltKey">
		and FLT_KEY=#fltKey# and  FLT_DATE=	to_date(#fltDate#, 'DDMONYY')
	</isNotEmpty>
   	</delete>
   	
  	<delete id="deleteDutyCodeForExempted"  parameterClass="cargo.cms.customs.bo.DutyCdtyBO">   	
	delete from cst_code_dtl where FLT_TYPE=#shipmentType#  
	and AWB_NO=#awbNo#	and HAWB_NO=#hawbNo#  and DUT_CODE=#dcCode#
	<isNotEmpty property="fltKey">
		and  FLT_KEY=#fltKey# and FLT_DATE=#fltDate#
	</isNotEmpty>
   	</delete> 	
   	<select id = "checkDCExists"  parameterClass="cargo.cms.customs.bo.DutyCdtyBO" resultClass="cargo.cms.customs.bo.DutyCdtyBO">
	   	select flt_key fltKey,to_char(flt_date,'DDMONYY') fltDate from cst_code_dtl where 
		awb_no=#awbNo# and awb_date= to_date(pkg_common.get_awb_date(#awbNo#,'E'),'DDMONYY') and flt_type='E' 
		and hawb_no='000000000000000000' and dut_code=#dcCode# and rowNum=1
   	</select>
   	<select id = "checkDCExistsCount"  parameterClass="cargo.cms.customs.bo.DutyCdtyBO" resultClass="java.lang.Integer">
   	select count(*) from cst_code_dtl where 
		awb_no=#awbNo# and awb_date= to_date(pkg_common.get_awb_date(#awbNo#,'E'),'DDMONYY') and flt_type='E' 
		and hawb_no='000000000000000000' and dut_code=#dcCode#
   	</select>
   	<parameterMap id="dcMap" class="map" >
		<parameter property="RESULT" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>    
		<parameter property="FLTTYPE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="FLTKEY" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="FLTDATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="AWBNO" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="HAWBNO" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	</parameterMap>   	
	<procedure id="dcsearch" parameterMap="dcMap" >
		{ ? = call pkg_cst_dc.get_dc_list(?,?,?,?,?)  }
	</procedure>
	
	<select id = "getDutiableCommodityData"  parameterClass="cargo.cms.customs.bo.DutyCdtyBO" resultClass="cargo.cms.customs.bo.DutyCdtyBO">
		SELECT AWB_NO AS awbNo,
			to_char(AWB_DATE,'DDMONYY') AS	awbDate,
			HAWB_NO AS hawbNo,
			CC_CODE AS latestCC,
			ORIGIN AS originOfHawbNo,
			DEST AS destinationOfHawbNo,
			CONTENT AS dcContent,
			DC_TYPE AS dutyType,
			NO_OF_PERMITS AS noOfPmt,
			dc_pcs dcPc,
			trim(to_char(dc_qty,'999999999.99')) dcQty,
			dc_compl dcCompl
		FROM GT_CST_DC_LIST 
	</select>		
	
	<select id = "dcSummarySearchData"  parameterClass="cargo.cms.customs.bo.DCQueryBO" resultClass="cargo.cms.customs.bo.DCSummaryBO">
		SELECT distinct gt.flt_key as fltNO, 
			to_char(gt.flt_date,'DDMONYY') as fltDate, gt.flt_date,
			gt.flt_key||' / '|| TO_CHAR(gt.flt_date,'DDMONYY') FltNoDate,
			gt.ata_etd_time as etd, 
			to_char(gt.flt_clear_date,'DDMONYY HH24:mi') as fltClrDate, 
			gt.dc_yn  AS  dc,
			gt.flt_type fltType 
		FROM gt_cst_dc_flt_list gt
		<isNotEmpty property="loginCarrier">
			join flt_opr fo
			on fo.flt_key = gt.flt_key
			and TO_CHAR(fo.sch_date,'DDMONYY') = TO_CHAR(gt.flt_date,'DDMONYY')
			where 
			<isNotEmpty property="fltType">
			decode(fo.flt_type, 'A', 'I', 'E') = #fltType# AND
			</isNotEmpty>
					(fo.CARR_CODE = #loginCarrier#
				OR fo.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE = #loginCarrier#))
		</isNotEmpty> 
		<dynamic prepend="ORDER BY ">
           <isNotEmpty property="sortOrder.sortField">
             $sortOrder.sortField$
           </isNotEmpty>	
           <isEmpty property="sortOrder.sortField">
           gt.flt_date desc,gt.flt_key
           </isEmpty>
        </dynamic>
	</select>	
	
		<select id = "dcSummarySearchDataCOUNT"  parameterClass="cargo.cms.customs.bo.DCQueryBO" resultClass="java.lang.Integer">
		SELECT COUNT(*) AS totalRowCount FROM (SELECT flt_key as fltNO, flt_date,
			to_char(flt_date,'DDMONYY') as fltDate, 
			ata_etd_time as etd, 
			to_char(flt_clear_date,'DDMONYY') as fltClrDate, 
			dc_yn  AS  dc,
			gt.flt_type fltType
		FROM gt_cst_dc_flt_list order by flt_date,flt_key)		
	   </select>
	
	<parameterMap id="dcSummaryMap" class="map" >
		<parameter property="RESULT" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>    
		<parameter property="FLTTYPE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="CARRCODE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="STARTDATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="ENDDATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	</parameterMap>	
	<procedure id="dcSummarySearch" parameterMap="dcSummaryMap" >
		{ ? = call pkg_cst_dc.get_dc_flt_list(?,?,?,?)  }
	</procedure>
	
	<parameterMap id="dcSummarySaveMap" class="map" >
		<parameter property="RESULT" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>    
		<parameter property="FLTTYPE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="FLTKEY" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="FLTDATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="AWBNO" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
        <parameter property="AWBDATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="HAWBNO" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
        <parameter property="DUTYTYPE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="CONTENT" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="DUTCODELST" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="DUTQTYLST" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="DUTUNITLST" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="DUTPCSLST" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="DUTRMKLST" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="DUTDCCOMPLLST" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="PERMITLST" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="USERID" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="IMGTRANSREFNO" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="DUTOLDDCCOMPLLST" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	</parameterMap>
		<procedure id="dcsummarysave" parameterMap="dcSummarySaveMap" >
		{ ? = call pkg_cst_dc.ins_upd_dc(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)  }
	</procedure>
	
	<parameterMap id="dcSummaryDeleteMap" class="map" >
		<parameter property="RESULT" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>    
		<parameter property="FLTTYPE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="FLTKEY" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="FLTDATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="AWBNO" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
        <parameter property="AWBDATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="HAWBNO" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
    </parameterMap>
	<procedure id="dcsummarydelete" parameterMap="dcSummaryDeleteMap" >
		{ ? = call pkg_cst_dc.del_dc(?,?,?,?,?,?)  }
	</procedure>
	
	<parameterMap id="licenseMap" class="map" >
		<parameter property="RESULT" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>    
		<parameter property="FLTTYPE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="AWBNO" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	</parameterMap>
		<procedure id="licenseListSearch" parameterMap="licenseMap" >
		{ ? = call pkg_cst_dc.get_license_list(?,?)  }
	</procedure>
	
	<parameterMap id="licenseUpdateMap" class="map" >
		<parameter property="RESULT" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>    
		<parameter property="AWBTYPE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="AWBNO" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="AWBDATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="HAWBNO" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="CONTENT" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="LICLIST" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="USERID" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	</parameterMap>
		<procedure id="updateLicenseData" parameterMap="licenseUpdateMap" >
		{ ? = call pkg_cst_dc.ins_upd_license(?,?,?,?,?,?,?)  }
	</procedure>
	
	<parameterMap id="licenseDeleteMap" class="map" >
		<parameter property="RESULT" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>    
		<parameter property="FLTTYPE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="AWBNO" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="AWBDATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="HAWBNO" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	</parameterMap>	
	<procedure id="deleteLicenseData" parameterMap="licenseDeleteMap" >
		{ ? = call pkg_cst_dc.del_license(?,?,?,?)  }
	</procedure>
	
  	<select id="validatedcunit" parameterClass="map" resultClass="java.lang.String" >
		select count(1) from mast_code_dtl where code_type = #CODEDTL# and code = #CODEVALUE# 
	</select>
	
	<select id="fetchLicenseDetailHeader" parameterClass="cargo.cms.customs.bo.DutyCdtyBO" resultClass="cargo.cms.customs.bo.DutyCdtyBO">		 
		 select h.content as cont ,  a.pcs as awbPcs, a.wt as awbWt, h.hawb_pcs as hawbpcs, h.hawb_wt as hawbWt,  
			  (select count(distinct LICENSE)
				from (select h.awb_no, h.awb_date, ha.hawb_no, l.LIC_PER_NO LICENSE
					from EDI_FHL h
					join EDI_FHL_HAWB ha on ha.tr_no = h.tr_no
					join EDI_FHL_HAWB_LIC_PER l on h.tr_no = l.tr_no and ha.doc_line_no = l.hdoc_line_no
					where l.LIC_PER_TYPE = 'LIC'
					union all
					select awb_no, awb_date, hawb_no, LICENSE
					from   cst_license
					where  flt_type = #shipmentType#) a
				where   awb_no = #awbNo#
					and    hawb_no = #hawbNo#) as noOfLicense
            from   v_edi_fhl_hawb h
			join (select *
				 from (select awb_no, pcs, wt,
					 		 dense_rank() over(partition by awb_no order by awb_date desc) rank
					 from awb
					 where awb_type = #shipmentType#
					 and awb_no = #awbNo#)
				 where rank = 1) a on a.awb_no = h.awb_no
            where  h.awb_no = #awbNo#
			and    h.hawb_no = #hawbNo#			
	</select>
		<!-- ###################################################################################################################################################### -->
  	<!-- Dutiable Commodity Related Queries Added By Varadaraj Muni - 22-FEBRUARY-2010 - END -->  	
  	<!-- ###################################################################################################################################################### -->
<!-- Added By swapna For create Expected Connecting Flight:Start -->

<select id="connectingFlightEnquiryList"  parameterClass="cargo.cms.customs.bo.ConnectingFlightListBO" 
		resultClass="cargo.cms.customs.bo.ConnectingFlightListBO">
		
		select a.awb_no as awbNo, 
			to_char(a.awb_date,'DDMONYY') as awbDate, 
			a.flt_key as  flightKey, 
			to_char(a.flt_date,'DDMONYY') as flightDate , 
			substr(a.awb_no, 1, 3)||'-'||substr(a.awb_no, 4) as awbDisp, 
			a.flt_key||'/'||to_char(a.flt_date, 'DDMONYY') as fltkeydatedisp,
			PKG_COMMON.get_flt_ata(a.FLT_KEY, TO_CHAR(a.FLT_DATE,'DDMONYY'), 'A', 'DD') as ata, 
			a.cc_code as ccCode, 
			a.cntg_flt_carr as expConnFlightCarrierCode, 
			a.cntg_flt_no as expConnFlightNo,  
			to_char(a.cntg_flt_date, 'DDMONYY') as expConnFlightDate, 
			a.cntg_flt_time as expConnFlightTime,
			substr(a.cntg_flt_time,1,2)  as expConnFlightHr,
            substr(a.cntg_flt_time,4,2) as expConnFlightMin,
			a.cntg_flt_dest as expConnFlightDest
		from   v_cst_exp_cntg_flt a 
				join flt_opr flt
				on flt.flt_key = a.FLT_KEY
				and flt.sch_date = a.flt_date
				AND flt.flt_type    = 'A'
		where ((#flightKey# is null and a.flt_date between to_date(#startDate#, 'DDMONYY') and to_date(#endDate#, 'DDMONYY')) or
			   (#flightKey# is not null and a.flt_key = #flightKey# and a.flt_date between to_date(#startDate#, 'DDMONYY') and to_date(#endDate#, 'DDMONYY')))
		<isEmpty property="carrierCode">
			<isNotEmpty property="loginCarrier">
				AND	(flt.CARR_CODE = #loginCarrier#
				OR flt.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE = #loginCarrier#))
			</isNotEmpty>
		</isEmpty>
		order by a.flt_date desc, a.flt_key, a.awb_no
	</select>

	<select id="connectingFlightEnquiryAlreadySubmitted"  parameterClass="cargo.cms.customs.bo.ConnectingFlightListBO" 
		resultClass="cargo.cms.customs.bo.ConnectingFlightListBO">
		
		SELECT distinct
            S.EXP_AWB_NO AS awbNo,
            SUBSTR(S.EXP_AWB_NO, 1,3)||'-'||SUBSTR(S.EXP_AWB_NO,4,LENGTH(S.EXP_AWB_NO))as disAwbNo,
            S.IMP_FLT_KEY AS flightNo,           
            TO_CHAR(S.IMP_FLT_DATE,'DDMONYY') AS flightDate,
            PKG_COMMON.get_flt_ata(s.FLT_KEY, TO_CHAR(s.FLT_DATE,'DDMONYY'), 'A', 'DD') AS arrivalTime,
            pkg_exp_val.get_exp_awb_cc_code(S.EXP_AWB_NO)      AS constCode,
            S.EXP_FLT_KEY AS expConnFlightKey,
            S.EXP_FLT_KEY AS expConnFlightNo,
            TO_CHAR(S.EXP_FLT_DATE, 'DDMONYY') AS expConnFlightDate,
            '00:00' AS expConnFlightTime, 
            S.EXP_FLT_DEST AS expConnFlightDest,
            f.flt_key AS impFltKey,
		    TO_CHAR(f.sch_date,'DDMONYY') AS impFltDate,
		    F.FLT_TYPE fltType
            FROM CST_CNTG_FLT S 
            left join flt_opr f on S.IMP_FLT_KEY  =NVL(f.stfs_flt_key,f.flt_key)  AND S.IMP_FLT_DATE   =NVL(f.stfs_flt_date,f.sch_date)
            <isEmpty property="carrierCode">
				<isNotEmpty property="loginCarrier">
				join flt_opr flt
				on flt.flt_key = s.IMP_FLT_KEY
				and flt.sch_date = s.IMP_FLT_DATE
				</isNotEmpty>
			</isEmpty>
            WHERE CNTG_FLT_TYPE = 'E'
            <isEmpty property="endDate">
            	AND S.IMP_FLT_DATE = TO_DATE(#startDate#,'DDMONYY')
            </isEmpty>
            <isNotEmpty property="startDate">
              <isNotEmpty property="endDate">
                 AND S.IMP_FLT_DATE BETWEEN TO_DATE(#startDate#,'DDMONYY') AND TO_DATE(#endDate#,'DDMONYY')
               </isNotEmpty>
              </isNotEmpty>       
             <isNotEmpty property="carrierCode">
                <isNotEmpty property="flightNo">
            	          AND S.IMP_FLT_KEY = #carrierCode#||#flightNo#
            	 </isNotEmpty>
            </isNotEmpty>
            <isEmpty property="carrierCode">
				<isNotEmpty property="loginCarrier">
					AND	(flt.CARR_CODE = #loginCarrier#
					OR flt.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE = #loginCarrier#))
				</isNotEmpty>
			</isEmpty>
	</select>

	<insert id="connectingFlightListInsertion" parameterClass="cargo.cms.customs.bo.ConnectingFlightListBO">
		INSERT INTO CST_CNTG_FLT (CNTG_FLT_TYPE, VER_NO, EXP_AWB_NO, EXP_HAWB_NO, EXP_CARGO_HANDR, EXP_MAN_PCS, EXP_CNSL_I,
		EXP_SHPM_I, EXP_FLT_KEY, EXP_FLT_DATE, EXP_FLT_DEST, IMP_FLT_KEY, IMP_FLT_DATE, IMP_AWB_NO, IMP_HAWB_NO,
		LM_USER_ID, LM_DATE, LM_VER)
        VALUES
		('E',#ver_no#,#awbNo#,#imp_hawb_no#,'AAT','15','N','T',#expConnFlightKey#,#expConnFlightDate#,#expConnFlightDest#,#flightKey#,
		#flightDate#,#awbNo#,#imp_hawb_no#,'ADMIN', SYSDATE, '1')
	</insert>
	<!-- Changed against FAT Bug Id : 4664 -->
	<select id="checkCarrierCodeForExp"  parameterClass="cargo.cms.customs.bo.ConnectingFlightListBO" resultClass="java.lang.String">
			
		SELECT 	'Y' AS ownedCarrier FROM MAST_CARRIER WHERE CODE=#expConnFlightCarrierCode#
</select>
<select id="checkFlightExist"  parameterClass="cargo.cms.customs.bo.ConnectingFlightListBO" resultClass="java.lang.String">
			
		SELECT CARR_CODE AS expConnFlightCarrierCode 
		FROM FLT_OPR WHERE CARR_CODE =#expConnFlightCarrierCode# 
		AND FLT_NO=#expConnFlightNo#
		AND SCH_DATE=#expConnFlightDate#
		AND FLT_TYPE='D'
</select>
<select id="fetchExpDestDetails"  parameterClass="cargo.cms.customs.bo.ConnectingFlightListBO" resultClass="cargo.cms.customs.bo.ConnectingFlightListBO">
			
		SELECT BRD_POINT AS breakPoint,
		OFF_POINT AS offPoint
		FROM FLT_OPR_LEG
		WHERE CARR_CODE =#expConnFlightCarrierCode# 
		AND FLT_NO=#expConnFlightNo#
		AND SCH_DATE=#expConnFlightDate#
		AND OFF_POINT  = #expConnFlightDest#
		AND FLT_TYPE='D'
</select>	
<select id="fetchExpDestforcntgFlt"  parameterClass="cargo.cms.customs.bo.ConnectingFlightListBO" resultClass="java.lang.String">
   SELECT DEST expConnFlightDest
		FROM FLT_OPR
		WHERE CARR_CODE =#expConnFlightCarrierCode# 
		AND FLT_NO=#expConnFlightNo#
		AND SCH_DATE=#expConnFlightDate#
		AND FLT_TYPE='D'
		</select>
	<update id="updateExpConnFltDetails" parameterClass="cargo.cms.customs.bo.ConnectingFlightListBO">
	UPDATE IMP_CAR_SHP SET 
	CNTG_FLT_CARR=#expConnFlightCarrierCode#,
	CNTG_FLT_NO=#expConnFlightNo#,
	CNTG_FLT_DATE=decode(#expConnFlightDate#,null,null,TO_DATE(#expConnFlightDate#,'DDMONYY')),
	CNTG_FLT_TIME=#expConnFltTime#,
	CNTG_FLT_DEST=#expConnFlightDest# 
	WHERE AWB_NO=#awbNo#
			AND AWB_DATE=TO_DATE(#awbDate#,'DDMONYY')
			AND FLT_DATE=TO_DATE(#flightDate#,'DDMONYY')
			                  <isNotEmpty property="flightKey">
                  AND FLT_KEY=#flightKey#
                  </isNotEmpty>
                  <isEmpty property="flightKey">
                  AND FLT_KEY=#carrierCode#||#flightNo#
                  </isEmpty>

</update>
<select id="fetchCustomSystemDate"  parameterClass="cargo.cms.customs.bo.ConnectingFlightListBO" resultClass="java.lang.String">
	SELECT to_char(sysdate,' ddmonyy') as systemDate FROM dual 
</select>
	<parameterMap id="conFltMap" class="map" >
		<parameter property="RESULT"  jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
		<parameter property="FLIGHTKEY"  jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="FLIGHTDATE" jdbcType="VARCHAR"   javaType="java.lang.String" mode="IN"/>
		<parameter property="AWBNO" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="AWBDATE"  jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="CCARRCODE" jdbcType="VARCHAR"   javaType="java.lang.String" mode="IN"/>
		<parameter property="CFLIGHTNO" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="CFLIGHTDATE" jdbcType="VARCHAR"   javaType="java.lang.String" mode="IN"/>
		<parameter property="CATA" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="CDEST" jdbcType="VARCHAR"   javaType="java.lang.String" mode="IN"/>
		<parameter property="USER" jdbcType="VARCHAR"   javaType="java.lang.String" mode="IN"/>
		<parameter property="COMPONENT" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
		<parameter property="ROWCOUNT" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
		
	</parameterMap>
	<procedure id="updateExpConnFltDetail" parameterMap="conFltMap" >
		{? = call pkg_cst_cnt_flt.upd_expected_cnt_flt(?,?,?,?,?,?,?,?,?,?,?,?)  }
	</procedure>
	<select id="checkCarCreatedforConFlt" parameterClass="map" resultClass="java.lang.Integer" >
		select count(1) from IMP_CAR_SHP where awb_no = #AWB_NO# and awb_date = to_date(#AWB_DATE#,'DDMONYY') and flt_type='I' and car_created='Y'
	</select>
	<select id="checkCarCreatedDate" parameterClass="map" resultClass="java.lang.String" >
		select to_char(cr_date,'DDMONYY') from IMP_CAR_SHP 
				where awb_no = #AWB_NO# 
				and	awb_date = to_date(#AWB_DATE#,'DDMONYY')
				and flt_key = #FLT_KEY#
				and flt_date = #FLT_DATE# 
				and car_created='Y'
	</select>
	
	<select id="expfltvalidate"  parameterClass="map"  resultClass="java.lang.Integer">
		SELECT NVL(count(1),0) FROM FLT_OPR WHERE 
		<isEmpty property="fltKey">
			CARR_CODE = #carrierCode# AND FLT_NO = #flightNo# 
		</isEmpty>
		<isNotEmpty property="fltKey">
			FLT_KEY = #fltKey# 
		</isNotEmpty>
			AND SCH_DATE= TO_DATE( #flightDate#, 'DDMONYY') AND FLT_TYPE='D'
   	</select>
   	<select id="checkexportflighttime" parameterClass="map" resultClass="java.lang.String" >
     select to_char(to_date(#expConnFlightDate#), 'DDMONYY')||' '||(substr(#expConnFltTime#,1,2)||substr(#expConnFltTime#,4,2)) 
      from v_cst_exp_cntg_flt where rownum=1
     </select>
     <select id="checkScheduleflighttime" parameterClass="map" resultClass="java.lang.String" >
     select to_char(sysdate+(SELECT RULE_VALUE 
      FROM CMSRULES where RULE_CODE = 'CONNECTING_FLT_DIFFERENCE'),'DDMONYY HH24MI')from dual
     </select>

	<!-- Added By swapna For create Expected Connecting Flight:End -->
	<!-- Added by swapna for export Consignment Submission:Start -->
	<select id="fetchExportCnsgnDetails" parameterClass="cargo.cms.customs.bo.ExportCnsgnSearchBO" resultClass="cargo.cms.customs.bo.ExportCnsgnBO">
		
	SELECT 
	    GT.TR_NO AS trNo,	
	    GT.FLT_KEY AS flightKey,
		TO_CHAR(GT.FLT_DATE,'ddMONYY') AS flightDate,
		TO_CHAR(GT.ETD_DATE,'ddMONYY') AS etd,    
		GT.ETD_TIME AS estTime,  
		GT.ACFT_TYPE AS airCraft,   
		GT.FLT_PRTY_IND AS flightPrty,   
		GT.TOTAL_SHIP_MANF AS shpmManf,   
		GT.TOTAL_SHIP_FWB AS shpmFAWB,   
		GT.TOTAL_SHIP_CONSOL AS cnslshp,  
		GT.TOTAL_SHIP_FHL AS shpmFHL,  
		TO_CHAR(GT.RECV_DATE,'ddMONYY HH24:MI') AS recvDate,
		TO_CHAR(GT.SUBM_DATE,'ddMONYY HH24:MI') AS submDate, 
		GT.STATUS AS status
	FROM
		GT_CST_EXP_SUBM_SUMMARY GT
		 <isNotEmpty property="loginCarrier">
			 join flt_opr fo
			 on   fo.flt_key = gt.flt_key
			 and  TO_CHAR(fo.sch_date,'DDMONYY') = TO_CHAR(gt.flt_date,'DDMONYY')
			 where decode(fo.flt_type, 'A', 'I', 'E') = #fltType#
				AND	(fo.CARR_CODE = #loginCarrier#
				OR fo.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE = #loginCarrier#))
		 </isNotEmpty>
	
	</select>	
<select id="sqlexpConsignawbDetails" parameterClass="cargo.cms.customs.bo.ExportCnsgnBO" resultClass="cargo.cms.customs.bo.MAWBDetailsBO">
		SELECT 		
			AWB_NO AS awbNum, 
			SUBSTR(AWB_NO, 1,3)||'-'||SUBSTR(AWB_NO,4,LENGTH(AWB_NO))AS dispAwbNo,       
            SUBSTR(AWB_NO, 1,3) AS awbNoPFX, 
            SUBSTR(AWB_NO, 4,11) AS awbNoSFX,
			TO_CHAR(AWB_DATE,'ddMONYY') AS awbDate, 
			CONTENT AS cont,  
			ORIGIN AS orig, 
			LOADING_POINT AS ldgPt,  
			DEST AS dest,  
			MAN_PCS AS manfpcs, 
			MAN_WT AS manfWt,
			AWB_PCS AS awbpcs,  
			AWB_WT AS awbWt,  
			HAWB_PCS AS hawbpcs, 
			HAWB_WT AS hawbWt, 
			CONSOL_YN AS cnsl
		FROM	
			GT_CST_EXP_SUBM_FLT_AWB		
	</select>	
	
 <insert id="sqlinsertexpConsgnFltDtls" parameterClass="cargo.cms.customs.bo.MAWBDetailsBO" >                              

 INSERT INTO CST_SUBM  (FLT_KEY, FLT_TYPE,FLT_DATE, REC_TYPE, SEND_STATUS, VER_NO,SUBM_DATE,LM_USER_ID,LM_DATE,LM_VER)            

              VALUES (#flightNo#,'E',#depDate#,'EXP','P',(select NVL(max(ver_no),0) + 1 from cst_subm where FLT_KEY=#flightNo# and FLT_TYPE='E' and FLT_DATE=#depDate# ),sysdate,#lastModUserId#,sysdate,#lmver#)
     

      </insert>
<select id="sqlselectexpConsgnFltDtls" parameterClass="cargo.cms.customs.bo.MAWBDetailsBO" resultClass="cargo.cms.customs.bo.ExportCnsgnBO">
	
	 SELECT TO_CHAR(FLT_DATE,'ddMONyy') as depDate, FLT_KEY as flightNo, FLT_TYPE as fltType,
	    REC_TYPE as rectype, VER_NO as verNo, LM_VER as lmver,SEND_STATUS as sendStatus
     FROM CST_SUBM    
     WHERE
         TO_CHAR(FLT_DATE,'ddMONYY') =  TO_DATE(#depDate#,'ddMONYY')
         AND FLT_KEY = #flightNo# 
         AND FLT_TYPE = 'E' 
         AND REC_TYPE = 'EXP' 
         AND VER_NO = (SELECT MAX(VER_NO) FROM CST_SUBM
     WHERE
        TO_CHAR(FLT_DATE,'ddMONYY') =  TO_DATE(#depDate#,'ddMONYY')
        AND FLT_KEY = #flightNo# 
        AND FLT_TYPE = 'E' 
        AND REC_TYPE = 'EXP')
	
	</select>
	<!-- Added by swapna for List/Print DC ware house Return :Start -->	
	<parameterMap id="warehouseReturnsMapExp" class="map" >
		<parameter property="RESULT" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
		<parameter property="FLTTYPE" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="FLTDATEFROM" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="FLTDATETO" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="CARRCODE" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>		
		<parameter property="OUTSTANDING" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>	
	</parameterMap>
	<procedure id="pkg_cst_dc.get_dc_wh_returns_exp" parameterMap="warehouseReturnsMapExp" >
		{? = call pkg_cst_dc.get_dc_wh_returns_exp(?,?,?,?,?)}
	</procedure>

	<parameterMap id="warehouseReturnsMapImp" class="map" >
		<parameter property="RESULT" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
		<parameter property="FLTTYPE" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="FLTDATEFROM" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="FLTDATETO" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="CARRCODE" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="OUTSTANDING" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>	
	</parameterMap>
	<procedure id="pkg_cst_dc.get_dc_wh_returns_imp" parameterMap="warehouseReturnsMapImp" >
		{? = call pkg_cst_dc.get_dc_wh_returns_imp(?,?,?,?,?)}
	</procedure>
	<!-- Added by swapna for List/Print DC ware house Return :End -->	
	<!-- Added for Submit Expected Connecting Flight:Start-->
	<parameterMap id="fltDateMap" class="map" >
		<parameter property="RESULT" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
		<parameter property="FLTDATE" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="LOGIN_CARR" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>		
	</parameterMap>
	<procedure id="cst_cnt_flt.get_cfe_submit_summary" parameterMap="fltDateMap" >
		{? = call pkg_cst_cnt_flt.get_cfe_submit_summary(?,?)}
	</procedure>
	
	<parameterMap id="subExpConnfltDateSaveMap" class="map" >
		<parameter property="RESULT" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
		<parameter property="FLTKEY" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="FLTDATE" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="USERID" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>		
	</parameterMap>
	<procedure id="cst_cnt_flt.submit_cfe" parameterMap="subExpConnfltDateSaveMap" >
		{? = call pkg_cst_cnt_flt.submit_cfe(?,?,?)}
	</procedure>
	<select id="submitExpConnectingFltQuery"  resultClass="cargo.cms.customs.bo.SubExpConnFlightBo">
	SELECT 
			CNTG_FLT_KEY AS expFltNo, 
			TO_CHAR(CNTG_FLT_DATE, 'DDMONYY') AS expFltDate, 
			DECODE( PKG_COMMON.GET_FLT_ETA(CNTG_FLT_KEY,TO_CHAR(CNTG_FLT_DATE, 'DDMONYY'), 'D', 'DD'),NULL,  PKG_COMMON.GET_FLT_STA(CNTG_FLT_KEY,TO_CHAR(CNTG_FLT_DATE, 'DDMONYY'), 'D', 'DD'), PKG_COMMON.GET_FLT_ETA(CNTG_FLT_KEY,TO_CHAR(CNTG_FLT_DATE, 'DDMONYY'), 'D', 'DD'))  AS expFltTime,
			CNTG_FLT_DEST AS expDest, 
			TOTAL_AWB AS totalAWB, 
			TO_CHAR(SUBM_DATE, 'DDMONYY HH24:MI') AS expSubmDate,
			TO_CHAR(ACK_DATE, 'DDMONYY HH24:MI') AS expAckDate,
			STATUS AS expStatus,
			VER_NO AS nextVerNo
		FROM
			GT_CST_SUBMIT_CFE_SUMMARY	
		
</select>	

<select id="submitExpConnectingFltDetail"  parameterClass="cargo.cms.customs.bo.SubExpConnFlightBo"  resultClass="cargo.cms.customs.bo.SubExpConnFlightBo">
		
	SELECT CST_CNTG_FLT.EXP_FLT_KEY AS actConnFlt,
	 TO_CHAR(CST_CNTG_FLT.EXP_FLT_DATE,'DDMONYY')AS actConnDate,
	EST_DATE,NVL(MAX(CST_SUBM.VER_NO),0)+1 AS nextVerNo,
	COUNT(CST_SUBM.REC_TYPE) AS acceptedCFA,
	NVL(SUBSTR(FLT_OPR.EST_TIME, 1, 2),'00')||':'||NVL(SUBSTR(FLT_OPR.EST_TIME, 3),'00') AS estTime,
	<!--CST_SUBM.FLT_KEY,
	CST_SUBM.FLT_DATE,
	CST_SUBM.FLT_TYPE,
	CST_SUBM.REC_TYPE -->	
		CST_CNTG_FLT.FLT_KEY AS fltKey,
		CST_CNTG_FLT.FLT_DATE AS fltDate
			FROM CST_CNTG_FLT INNER JOIN FLT_OPR ON
			FLT_OPR.FLT_KEY = CST_CNTG_FLT.EXP_FLT_KEY
			AND FLT_OPR.SCH_DATE = CST_CNTG_FLT.EXP_FLT_DATE
			AND FLT_OPR.FLT_TYPE = 'D'
			LEFT OUTER JOIN CST_SUBM ON 
			CST_CNTG_FLT.EXP_FLT_KEY = CST_SUBM.FLT_KEY
			AND CST_CNTG_FLT.EXP_FLT_DATE = CST_SUBM.FLT_DATE
			AND CST_SUBM.FLT_TYPE = 'E'
			AND CST_SUBM.REC_TYPE = 'CFE'
			WHERE 
			CST_CNTG_FLT.EXP_FLT_KEY = #expFltNo#
			AND CST_CNTG_FLT.EXP_FLT_DATE = #connFltDate#
			GROUP BY CST_CNTG_FLT.EXP_FLT_KEY,
			CST_CNTG_FLT.EXP_FLT_DATE,EST_DATE,
			CST_SUBM.VER_NO ,CST_SUBM.REC_TYPE,
			CST_SUBM.FLT_KEY,CST_SUBM.FLT_DATE,
			CST_SUBM.FLT_TYPE,CST_SUBM.REC_TYPE,
			FLT_OPR.EST_TIME,CST_CNTG_FLT.FLT_KEY,
			CST_CNTG_FLT.FLT_DATE
	

</select>
<select id="submitExpConnectingAwbDetails"  parameterClass="cargo.cms.customs.bo.SubExpConnFlightBo"  resultClass="cargo.cms.customs.bo.SubExpConnAwbDetailsBO">
	SELECT 
		SUBSTR(AWB_NO, 1, 3)||'-'||SUBSTR(AWB_NO, 4) AS awbNo, 
		AWB_NO AS awbNum,
		TO_CHAR(AWB_DATE, 'DDMONYY') AS awbDate,
		V.FLT_KEY AS depFltNo,
		TO_CHAR(V.FLT_DATE, 'DDMONYY') AS depDate,
		DECODE( PKG_COMMON.GET_FLT_ATA(F.flt_key,F.sch_date, 'A', 'DD'),NULL,  PKG_COMMON.GET_FLT_ETA(F.flt_key,F.sch_date, 'A', 'DD'), PKG_COMMON.GET_FLT_ATA(F.flt_key,F.sch_date, 'A', 'DD')) ata,  
		CC_CODE AS latestCC,
		F.FLT_KEY AS arrvFltNo,
		TO_CHAR(F.sch_DATE, 'DDMONYY') AS arrvDate,
		(SELECT count(1) FROM cst_subm where rec_type = 'CFA' and send_status = 'A' and flt_key = V.CNTG_FLT_KEY and flt_date = V.CNTG_FLT_DATE) acceptedCFA
	FROM   
		V_CST_EXP_CNTG_FLT V 
		LEFT JOIN FLT_OPR F ON  V.FLT_KEY  =NVL(f.stfs_flt_key,f.flt_key)  AND V.FLT_DATE   =NVL(f.stfs_flt_date,f.sch_date) and f.flt_type = 'A'  
	WHERE  CNTG_FLT_KEY = #expFltNo# AND  CNTG_FLT_DATE = #expFltDate#
</select>
	<!-- Added for Submit Expected Connecting Flight:End-->
	<!-- Added for Submit Actual Connecting Flight:Start-->
	<select id="submitAckConnectingFltQuery"  parameterClass="cargo.cms.customs.bo.SubActConnFlightBO"  resultClass="cargo.cms.customs.bo.SubActConnFlightBO">
	SELECT 
		FLT_KEY AS actFltNo, 
		TO_CHAR(FLT_DATE,'DDMONYY') AS actFltDate,
		STD_TIME AS actStd,  
		DEST AS actDest,  
		TOTAL_AWB AS actTcshpm, 
		TO_CHAR(SUBM_DATE,'DDMONYY HH24:MI') AS actSubmDate,
		TO_CHAR(ACK_DATE,'DDMONYY HH24:MI') AS actAckDate,
		STATUS AS actStatus, 
		VER_NO AS nextVerNo,
		PKG_COMMON.get_flt_eta(FLT_KEY,FLT_DATE,'D') AS actEtd
	FROM
		GT_CST_SUBMIT_CFA_SUMMARY
	
	
</select>	
<select id="submitAckConnectingAwbDetails"  parameterClass="cargo.cms.customs.bo.SubActConnFlightBO"  resultClass="cargo.cms.customs.bo.SubExpConnAwbDetailsBO">
	SELECT 
		FLT_KEY AS fltKey,
		TO_CHAR(FLT_DATE, 'DDMONYY') AS fltDate,  
		CARR_CODE AS carrCode,  
		DEST AS dest, 
		AWB_NO AS awbNo,
		SUBSTR(AWB_NO, 1, 3)||'-'||SUBSTR(AWB_NO, 4) AS dispAwbNum, 
		TO_CHAR(AWB_DATE, 'DDMONYY') AS awbDate,  
		PMAN_PCS AS pmanfPcs,  
		PMAN_WT AS pmanfWt, 
		HAWB_NO AS hawbNo, 
		decode(STD_TIME,null,'00:00',STD_TIME) AS stdTime,  
		decode(EST_TIME,null,'00:00',EST_TIME) AS estTime,  
		DECODE( PKG_COMMON.GET_FLT_ATA(V_CST_CFA.FLT_KEY,V_CST_CFA.FLT_DATE, 'D', 'DD'),NULL,  PKG_COMMON.GET_FLT_ETA(V_CST_CFA.FLT_KEY,V_CST_CFA.FLT_DATE, 'D', 'DD'), PKG_COMMON.GET_FLT_ATA(V_CST_CFA.FLT_KEY,V_CST_CFA.FLT_DATE, 'D', 'DD'))  AS atdTime, 
		CC_CODE AS ccCode, 
		REF_NO AS refNo,
		(SELECT count(1) FROM cst_subm where rec_type = 'CFA' and send_status = 'A' and flt_key = V_CST_CFA.FLT_KEY and flt_date = V_CST_CFA.FLT_DATE) acceptedCFA
	FROM 
		V_CST_CFA
	WHERE  
			FLT_KEY =  #actFltNo#
		AND FLT_DATE =  #actFltDate#
	
</select>
	<parameterMap id="SubActConnFltDateMap" class="map" >
		<parameter property="RESULT" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
		<parameter property="FLTDATE" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="LOGIN_CARR" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>		
	</parameterMap>
	<procedure id="pkg_cst_cnt_flt.get_cfa_submit_summary" parameterMap="SubActConnFltDateMap" >
		{? = call pkg_cst_cnt_flt.get_cfa_submit_summary(?,?)}
	</procedure>
	<parameterMap id="subActConnfltDateSaveMap" class="map" >
		<parameter property="RESULT" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
		<parameter property="FLTKEY" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="FLTDATE" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="USERID" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>		
	</parameterMap>
	<procedure id="pkg_cst_cnt_flt.submit_cfa" parameterMap="subActConnfltDateSaveMap" >
		{? = call pkg_cst_cnt_flt.submit_cfa(?,?,?)}
	</procedure>
	<parameterMap id="fetchExportCnsgnDetailMap" class="map" >
		<parameter property="RESULT" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
		<parameter property="DEPTDATE" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>		
	</parameterMap>
	<procedure id="get_exp_subm_summary" parameterMap="fetchExportCnsgnDetailMap" >
		{? = call pkg_cst_exp_subm.get_exp_subm_summary(?)}
	</procedure>
	<!-- Added for Submit Actual Connecting Flight:End-->
	<!-- Added by swapna for Export Submission Consignment:Starts -->
	<parameterMap id="fetchExpCnsgnHdMap" class="map" >
		<parameter property="FLTKEY" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="FLTDATE" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="TRNO" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
		<parameter property="CARRCODE" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
		<parameter property="ACFTTYPE" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
		<parameter property="FLTPRTYIND" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
		<parameter property="ETDTIME" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
		<parameter property="ACTTIME" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
		<parameter property="TOTSHMANF" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
		<parameter property="TOTSHFWB" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
		<parameter property="TOTSHCNSL" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
		<parameter property="TOTSHFHL" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
		<parameter property="AWBMODIFY" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>				
	</parameterMap>
	<procedure id="get_flt_ship_info" parameterMap="fetchExpCnsgnHdMap" >
		{ call pkg_cst_exp_subm.get_flt_ship_info(?,?,?,?,?,?,?,?,?,?,?,?,?)}
	</procedure>
	<parameterMap id="getExpCnsgnAWBDetailMap" class="map" >
		<parameter property="RESULT" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
		<parameter property="FLTKEY" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="FLTDATE" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>		
	</parameterMap>
	<procedure id="get_exp_subm_flt_awb" parameterMap="getExpCnsgnAWBDetailMap" >
		{? = call pkg_cst_exp_subm.get_exp_subm_flt_awb(?,?)}
	</procedure> 
	<parameterMap id="exportConsngAwbmap" class="map" >
		<parameter property="RESULT"  jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
		<parameter property="FLTKEY"  jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="FLTDATE" jdbcType="VARCHAR"    javaType="java.lang.String"  mode="IN"/>
		<parameter property="USERID" jdbcType="VARCHAR"    javaType="java.lang.String"  mode="IN"/>
		<parameter property="RECVDATE" jdbcType="VARCHAR"    javaType="java.lang.String"  mode="IN"/>			
	</parameterMap>	
	<procedure id="submit_exp" parameterMap="exportConsngAwbmap" >
		{? = call pkg_cst_exp_subm.submit_exp(?,?,?,?)}
	</procedure>	
	<select id="checkImageCdty" parameterClass="cargo.cms.customs.bo.DutyCdtyBO" resultClass="java.lang.Integer">
	select count(1) from fw_image_store where IMG_SESSION_ID=#transactionId#
	</select>
	<!-- Added by swapna for Export Submission Consignment:Ends -->

 <!--  Added by Yugandhar For Validate Flight Key From EMAN_FLT Table -->
 	<select id="getValidateExportFlightEman" parameterClass="map" resultClass="java.lang.Integer">
	    select count(*) from EMAN_FLT where flt_key=#fltKey# and FLT_DATE=#fltDate# and flt_type='E'
	 </select>
	 <select id="getValidateImportFlightEman" parameterClass="map" resultClass="java.lang.Integer">
	    select count(*) from EMAN_FLT where flt_key=#fltKey# and FLT_DATE=#fltDate# and flt_type='I'
	 </select>
	 <select id="validOutboundFlight" parameterClass="java.util.HashMap"  resultClass="java.lang.Integer">
		select count(*) from FLT_OPR where FLT_KEY=#fltKey# and SCH_DATE between to_date(#startDate#,'DDMONYY HH24MI') and to_date(#endDate#,'DDMONYY HH24MI') and FLT_TYPE='D'
	 </select>
	 <select id="validInboundFlight1" parameterClass="java.util.HashMap"  resultClass="java.lang.Integer">
		select count(*) from FLT_OPR where FLT_KEY=#fltKey# and SCH_DATE between to_date(#startDate#,'DDMONYY HH24MI') and to_date(#endDate#,'DDMONYY HH24MI') and FLT_TYPE='A'
	 </select>
	<select id="getValidateImportFlightBetweenDatesEman" parameterClass="map" resultClass="java.lang.Integer">
	    select count(*) from EMAN_FLT where flt_key=#fltKey# and 
	           FLT_DATE between TO_DATE(#startDate#,'DDMONYY HH24:MI') and TO_DATE(#endDate#,'DDMONYY HH24:MI') 
	           and flt_type='I'
	 </select>
	 <select id="getValidateExportFlightBetweenDatesEman" parameterClass="map" resultClass="java.lang.Integer">
	    select count(*) from EMAN_FLT where flt_key=#fltKey# and 
	    	   FLT_DATE between TO_DATE(#startDate#,'DDMONYY HH24:MI') and TO_DATE(#endDate#,'DDMONYY HH24:MI')
		 	   and flt_type='E'
	 </select>
<!--  Added by Yugandhar For Validate Flight Key From EMAN_FLT Table -->

	 
<!-- Updated by Yugandhar Customs eman starts-->
	<select id="getValidateImportFlightBetweenDates" parameterClass="map" resultClass="java.lang.Integer">
	    select count(*) from flt_opr where flt_key=#fltKey# and 
	           SCH_DATE between TO_DATE(#startDate#,'DDMONYY HH24:MI') and TO_DATE(#endDate#,'DDMONYY HH24:MI') 
	           and flt_type='A'
	 </select>
	 <select id="getValidateExportFlightBetweenDates" parameterClass="map" resultClass="java.lang.Integer">
	    select count(*) from flt_opr where flt_key=#fltKey# and 
	    	   SCH_DATE between TO_DATE(#startDate#,'DDMONYY HH24:MI') and TO_DATE(#endDate#,'DDMONYY HH24:MI')
		 	   and flt_type='D'
	 </select>
 <select id="fetchCargoEmanListDetails"  parameterClass="cargo.cms.customs.bo.CargoEmanBO"  resultClass="cargo.cms.customs.bo.CargoEmanBO">
		SELECT 
		a.FLT_KEY as fltNo,
		a.FLT_TYPE as fltType,
	    to_char(a.FLT_DATE,'DDMONYY') as fltDate,
		substr(lpad(a.ATA_ETD_TIME, 4, '0'), 1, 2)||':'||substr(a.ATA_ETD_TIME, -2) as ata,
		a.ATA_ETD_TIME as ata1,
		a.UMR_NO as umrNo,
		a.TOTAL_LICENSES as noOfLic,
	    a.NIL_CARGO_YN as nillFlight,
	    to_char(a.LST_SUB_DATE,'DDMONYY HH:MM') as lastSubmDate,
	    b.ver_no as verNo,
	    b.status as submissionStatus
		FROM 	eman_flt a,eman_ctrl b
		WHERE a.FLT_DATE = b.FLT_DATE and  a.FLT_TYPE = b.FLT_TYPE  and  a.flt_key = b.flt_key and B.STATUS = 'Confirmed'		
	    <isEmpty property="umrNo">
	      <![CDATA[
	      	and  a.umr_no is not null	      	
	      	and b.subm_date between to_date(#startDate# || '0000','DDMONYYHH24MI') and  to_date(#endDate# || '2359','DDMONYYHH24MI')
          	and  b.subm_date <= SYSDATE - #noofDays#
	        and  a.FLT_TYPE=#fltType#	
	        ]]>
	    </isEmpty>
		<isNotEmpty property="fltNo">
					AND a.FLT_KEY = #fltNo# 
		</isNotEmpty>
		<isNotEmpty property="umrNo">
					AND a.UMR_NO = #umrNo# 
		</isNotEmpty>
		<isNotEmpty property="carrCodes">
					AND a.CARR_KEY = #carrCodes# 
		</isNotEmpty>
               <isEmpty property="carrCodes">
		<isNotEmpty property="loginCarrier">
	       	AND   (a.CARR_KEY = #loginCarrier#
					OR a.CARR_KEY IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE = #loginCarrier#))
		</isNotEmpty>
                </isEmpty>
   </select>
	<!-- Updated By Yugandhar customs eman ends-->
	
	<select id = "fetchSrfDtls"  parameterClass="cargo.cms.customs.bo.DutyCdtyBO" resultClass="cargo.cms.customs.bo.PermitInvoiceBO">
			 SELECT distinct srf_No type from imp_srf where awb_no=#awbNo# and awb_date=TO_DATE(#awbDate#,'DDMONYY')
			 		and ((SRF_EXPY_DATE > sysdate and STATUS ='ISSUED') or STATUS ='POSTED' or SRF_NO IN (SELECT SRF_NO FROM IMP_CDIF WHERE VOID_DATE IS NULL))
	</select>
	
	<select id="getAwbType_For_DC_Details" parameterClass="map" resultClass="java.lang.String">
		select  AWB_TYPE awbType from awb where awb_no=#awbNo# and awb_date = #awbDate#
	</select>
	
	<select id = "fetchMnfstDtls"  parameterClass="cargo.cms.customs.bo.DutyCdtyBO" resultClass="cargo.cms.customs.bo.PermitInvoiceBO">
			select distinct (flt_key||'/'||to_char(FLT_DATE,'DDMONYY'))type from EXP_PMANIFEST_AWB where awb_no=#awbNo# and awb_date=TO_DATE(#awbDate#,'DDMONYY')
	</select>
	<select id = "fetchCTDtls"  parameterClass="cargo.cms.customs.bo.DutyCdtyBO" resultClass="cargo.cms.customs.bo.PermitInvoiceBO">
			SELECT distinct TRM_NO type from IMP_TRM_DTL where awb_no=#awbNo# and awb_date=TO_DATE(#awbDate#,'DDMONYY')
	</select>
	<select id = "getAwbEventDetails"  parameterClass="cargo.cms.customs.bo.AWBEventSearchBO" resultClass="cargo.cms.customs.bo.AWBEventListBO">
		     select  substr(eman.awb_no, 0, 3)||'-'||substr(eman.awb_no, 4, 11) as awbNo,TO_CHAR(eman.awb_date,'DDMONYY') as awbDate, eman.awb_pcs as pcs, eman.awb_wgt as wt, eman.orig as org, eman.dest as dest,
                eman.content as cont, (select count(*) from cst_license lic where lic.awb_no=eman.awb_no and lic.awb_date=eman.awb_date) AS noOfLic, 
                a.SHIPPER_NAME shipperName,a.AGENT_NAME agentName,a.CSGNE_NAME congName,a.AGENT_ADDR_1 agentAdd1,a.AGENT_ADDR_2 agentAdd2, a.AGENT_ADDR_3 agentAdd3,a.AGENT_ADDR_4 agentAdd4,a.AGENT_ADDR_5 agentAdd5,
				a.SHPR_ADDR_1 shipperAdd1,a.SHPR_ADDR_2 shipperAdd2,a.SHPR_ADDR_3 shipperAdd3,a.SHPR_ADDR_4 shipperAdd4,a.SHPR_ADDR_5 shipperAdd5,
				a.CSGNE_ADDR_1 congAdd1,a.CSGNE_ADDR_2 congAdd2,a.CSGNE_ADDR_3 congAdd3,a.CSGNE_ADDR_4 congAdd4,a.CSGNE_ADDR_5 congAdd5, a.agent_place as agentPlace,
                eman.PART_SHIPMENT as partShipment,eman.awb_type as awbType from eman_mst_dtl eman,EMAN_SHP a  where  eman.awb_no=#awbNo# and eman.awb_date =  TO_DATE(#awbDate#,'ddMONYY')
                and eman.awb_no=a.awb_no and eman.awb_date=a.awb_date and a.tr_no=#trNo# 
        <isNotEmpty property="loginCarrier">
			and substr(eman.awb_no,0,3) in (SELECT code FROM MAST_AWB_PREFIX WHERE UPPER(carr_CODE)=UPPER(#loginCarrier#))
		</isNotEmpty> 
	</select>
	
	
	<select id = "getAwbEventDetailsList"  parameterClass="cargo.cms.customs.bo.AWBEventSearchBO" resultClass="cargo.cms.customs.bo.AWBEventLstBO">
		select t1.cod_act as codAct, to_char(t1.cr_date,'DDMONYY HH24:MI')||'   '||t1.cr_user_id as userNames,t1.des_his_dts as descDtl,
		t1.cod_hwb_num as hawbNo,
			 (select t3.flt_key from eman_shp t3 where t3.awb_no=eman.awb_no and t3.awb_date=eman.awb_date  and rownum=1)||'   '||(select to_char(t3.flt_date,'DDMONYY') from eman_shp t3 where t3.awb_no=eman.awb_no and t3.awb_date=eman.awb_date and rownum=1) as fltKeyDate
		                from eman_mst_dtl eman,
                his_awb_evnt_dtl t1,his_awb_evnt t2     
                where eman.awb_no=#awbNo# and
                t1.awb_no=eman.awb_no and t1.awb_date=eman.awb_date and t2.awb_no=eman.awb_no and t2.awb_date=eman.awb_date and
                t2.MODULE='E'    
								and  t1.awb_no = t2.awb_no
                and t1.awb_date = t2.awb_date
                and  t2.cod_his_typ='E'
                and t1.cod_tra_seq_num= t2.cod_tra_seq_num
                
                <isNotEmpty property="hawbNo">
				 and t1.COD_HWB_NUM = #hawbNo#
				</isNotEmpty>
                and eman.awb_date =(SELECT MAX(awb_date) as awbDate from  eman_mst_dtl where awb_no=#awbNo# )
                <dynamic prepend="ORDER BY ">
                  <isNotEmpty property="sortOrder.sortField">
                        $sortOrder.sortField$
                  </isNotEmpty>
                  <isEmpty property="sortOrder.sortField">
                        t1.cr_date desc
                  </isEmpty>
            </dynamic>  
  </select>
	
	  <select id="getAwbEventDetailsListCOUNT" parameterClass="cargo.cms.customs.bo.AWBEventSearchBO" resultClass="java.lang.Integer">
  
  select COUNT(*) AS totalRowCount from eman_mst_dtl eman,
                his_awb_evnt_dtl t1,his_awb_evnt t2     
                where eman.awb_no=#awbNo# and
                t1.awb_no=eman.awb_no and t1.awb_date=eman.awb_date and t2.awb_no=eman.awb_no and t2.awb_date=eman.awb_date and
                t2.MODULE='E'    
								and  t1.awb_no = t2.awb_no
                and t1.awb_date = t2.awb_date
                and  t2.cod_his_typ='E'
                and t1.cod_tra_seq_num= t2.cod_tra_seq_num
               
                <isNotEmpty property="hawbNo">
				 and t1.COD_HWB_NUM = #hawbNo#
				</isNotEmpty>
                and eman.awb_date =(SELECT MAX(awb_date) as awbDate from  eman_mst_dtl where awb_no=#awbNo# )
 	</select>
	
	<select id = "getAwbDateEventDetailsList"  parameterClass="cargo.cms.customs.bo.AWBEventSearchBO" resultClass="cargo.cms.customs.bo.AWBEventLstBO">
	select t1.cod_act as codAct, to_char(t1.cr_date,'DDMONYY HH24:MI')||'   '||t1.cr_user_id as userNames,t1.des_his_dts as descDtl,
			t1.cod_hwb_num as hawbNo,
	 (select t3.flt_key from eman_shp t3 where t3.awb_no=eman.awb_no and t3.awb_date=eman.awb_date and rownum=1)||'   '||(select to_char(t3.flt_date,'DDMONYY') from eman_shp t3 where t3.awb_no=eman.awb_no and t3.awb_date=eman.awb_date and rownum=1) as fltKeyDate
               from eman_mst_dtl eman,
                his_awb_evnt_dtl t1,his_awb_evnt t2     
                where eman.awb_no=#awbNo# and
                t1.awb_no=eman.awb_no and t1.awb_date=eman.awb_date and t2.awb_no=eman.awb_no and t2.awb_date=eman.awb_date and
                t2.MODULE='E'    
								and  t1.awb_no = t2.awb_no
                and t1.awb_date = t2.awb_date
                and  t2.cod_his_typ='E'
                and t1.cod_tra_seq_num= t2.cod_tra_seq_num
               
                <isNotEmpty property="hawbNo">
				 and t1.COD_HWB_NUM = #hawbNo#
				</isNotEmpty>
                and eman.awb_date in(
                select awb_date as awbDate from  eman_mst_dtl where TO_CHAR(awb_date,'ddMONYY') =  TO_DATE(#awbDate#,'ddMONYY'))
             <dynamic prepend="ORDER BY ">
                         <isNotEmpty property="sortOrder.sortField">
                        $sortOrder.sortField$
                  </isNotEmpty>
            </dynamic> 
  </select>
  
  <select id = "getAwbDateEventDetailsListCOUNT"  parameterClass="cargo.cms.customs.bo.AWBEventSearchBO" resultClass="java.lang.Integer">
	select COUNT(*) AS totalRowCount from eman_mst_dtl eman,
                his_awb_evnt_dtl t1,his_awb_evnt t2     
                where eman.awb_no=#awbNo# and
                t1.awb_no=eman.awb_no and t1.awb_date=eman.awb_date and t2.awb_no=eman.awb_no and t2.awb_date=eman.awb_date and
                t2.MODULE='E'    
								and  t1.awb_no = t2.awb_no
                and t1.awb_date = t2.awb_date
                and  t2.cod_his_typ='E'
                and t1.cod_tra_seq_num= t2.cod_tra_seq_num
               
                <isNotEmpty property="hawbNo">
				 and t1.COD_HWB_NUM = #hawbNo#
				</isNotEmpty>
                and eman.awb_date in(
                select awb_date as awbDate from  eman_mst_dtl where TO_CHAR(awb_date,'ddMONYY') =  TO_DATE(#awbDate#,'ddMONYY'))
            
  </select>
	
  
  	<select id = "getAwbEventDateList"  parameterClass="cargo.cms.customs.bo.AWBEventSearchBO" resultClass="cargo.cms.customs.bo.AWBEventLstBO">
	 select to_char(awb_date,'DDMONYY') as awbEventDate from eman_mst_dtl where awb_no=#awbNo# order by awb_date desc
  </select>
  <select id = "getAwbDateEventDetails"  parameterClass="cargo.cms.customs.bo.AWBEventSearchBO" resultClass="cargo.cms.customs.bo.AWBEventListBO">
		     select  substr(eman.awb_no, 0, 3)||'-'||substr(eman.awb_no, 4, 11) as awbNo,TO_CHAR(eman.awb_date,'DDMONYY') as awbDate, eman.awb_pcs as pcs, eman.awb_wgt as wt, eman.orig as org, eman.dest as dest,
                eman.content as cont, (select count(*) from cst_license lic where lic.awb_no=eman.awb_no and lic.awb_date=eman.awb_date) AS noOfLic, 
                a.SHIPPER_NAME shipperName,a.AGENT_NAME agentName,a.CSGNE_NAME congName,a.AGENT_ADDR_1 agentAdd1,a.AGENT_ADDR_2 agentAdd2, a.AGENT_ADDR_3 agentAdd3,a.AGENT_ADDR_4 agentAdd4,a.AGENT_ADDR_5 agentAdd5,
				a.SHPR_ADDR_1 shipperAdd1,a.SHPR_ADDR_2 shipperAdd2,a.SHPR_ADDR_3 shipperAdd3,a.SHPR_ADDR_4 shipperAdd4,a.SHPR_ADDR_5 shipperAdd5,
				a.CSGNE_ADDR_1 congAdd1,a.CSGNE_ADDR_2 congAdd2,a.CSGNE_ADDR_3 congAdd3,a.CSGNE_ADDR_4 congAdd4,a.CSGNE_ADDR_5 congAdd5, a.agent_place as agentPlace,
                eman.PART_SHIPMENT as partShipment,eman.awb_type as awbType from eman_mst_dtl eman,EMAN_SHP a  where  eman.awb_no=#awbNo# and eman.awb_date =  TO_DATE(#awbDate#,'ddMONYY')
                and eman.awb_no=a.awb_no and eman.awb_date=a.awb_date and a.tr_no=#trNo#
	</select>
	<select id = "getAwbDateEventDateList"  parameterClass="cargo.cms.customs.bo.AWBEventSearchBO" resultClass="cargo.cms.customs.bo.AWBEventLstBO">
	 select to_char(awb_date,'DDMONYY') as awbEventDate from eman_mst_dtl where awb_no=#awbNo# order by awb_date desc
  </select>
	<!-- Added by Yugandhar for Maintain Enquire License  Starts-->
	<select id = "getLicenseData"  parameterClass="cargo.cms.customs.bo.DutyCdtyBO" resultClass="cargo.cms.customs.bo.DutyCdtyBO">
		select awb_no as awbNo, 
			to_char(awb_date,'DDMONYY') as awbDate, 
			hawb_no as hawbNo, 
			awb_pcs as awbPcs, 
			TRIM(TO_CHAR(NVL(awb_wt,0), '9999990D9'))  awbWt, 			
			hawb_pcs as hawbPcs, 
			TRIM(TO_CHAR(NVL(hawb_wt,0), '9999990D9'))  hawbWt, 
			origin originOfHawbno, 
			dest as destinationOfHawbno,
			no_of_licenses as noOfLicense, 
			content as cont
		from gt_cst_license_list
	</select>
	<select id="getAwbTypeFromAWBTable" parameterClass="map" resultClass="java.lang.String" >
		select AWB_TYPE as awbType  from AWB where AWB_NO = #awbNo# and AWB_DATE = #awbDate# 
	</select>
	
	
	
	
	
	<!-- Added by Yugandhar for Maintain Enquire License  Ends-->
	<!-- Added by Yugandhar for Create E-Manifest   Starts-->
	<select id="getValidateImportFlight" parameterClass="map" resultClass="java.lang.Integer">
	    select count(*) from flt_opr where flt_key=#fltKey# and sch_date=#fltDate# and flt_type='A'
	 </select>
	<select id="fetchCreateEmanDetails" parameterClass="cargo.cms.customs.bo.CreateEmanBO" resultClass="cargo.cms.customs.bo.CreateEmanBO" >
		select FLT_TYPE as flightType,
			   FLT_KEY as flightKey,
       		   to_char(FLT_DATE,'DDMONYY') as actualDate,
       		   substr(lpad(ATA_ETD_TIME, 4, '0'), 1, 2) as ataAtdHrs,
      		   substr(ATA_ETD_TIME, -2)as ataAtdMin,
       		   ORIG as orign,
       		   DEST as dest,
       		   TR_NO as trNo,
       		   COUNTER as emanCounter
  		from  EMAN_FLT 
  		where flt_type = #flightType# 
  		  and flt_key  = #flightKey# 
  		  and flt_date = #schDate# 
  		  and lm_date  = (select max(lm_date) from eman_flt where flt_type=#flightType# and flt_key=#flightKey# and flt_date=#schDate# )
	</select>
	
	<select id="validateCityCode" parameterClass="java.lang.String" resultClass="java.lang.Integer">
	    select count(*) from MAST_CITY where code = #PARAM#
	 </select>
	
	<select id="getRecorExistInEman_flt" parameterClass="map" resultClass="java.lang.Integer" >
		select count(*) from EMAN_FLT
  			 where    flt_key  = #fltKey#
    			and   flt_date = #actualDate#
   				and   flt_type = #fltType#
    			and   ata_etd_time = #ataAtdTime#
	</select>
	
	<parameterMap id="emanifestMap" class="map" >
		<parameter property="FLTKEY" 	 jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="FLTDATE" 	 jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="FLTTYPE" 	 jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="FLTTYPETO" 	 jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="ACTUALDATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="ATAATDTIME" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="TRNO" 		 jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="USERID" 	 jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="COUNTER" 	 jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="ORIG" 	     jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="DEST" 	     jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	</parameterMap>
		<procedure id="createEmanifestProc" parameterMap="emanifestMap" >
		{ call PRC_CREATE_EMANIFEST(?,?,?,?,?,?,?,?,?,?,?)  }
	</procedure>
	
	<select id="fetchCreateBaseEmanDetails" parameterClass="cargo.cms.customs.bo.CreateEmanBO" resultClass="cargo.cms.customs.bo.CreateEmanBO" >
		select FLT_TYPE as flightType,
			   FLT_KEY as flightKey,
       		   to_char(FLT_DATE,'DDMONYY') as actualDate,
       		   substr(lpad(ATA_ETD_TIME, 4, '0'), 1, 2) as ataAtdHrs,
      		   substr(ATA_ETD_TIME, -2)as ataAtdMin,
       		   ORIG as orign,
       		   DEST as dest,
       		   TR_NO as trNo,
       		   COUNTER as emanCounter
  		from  EMAN_FLT 
  		where flt_type = #flightType# 
  		  and flt_key  = #flightKey# 
  		  and flt_date = #schDate# 
  		  and lm_date  = (select min(lm_date) from eman_flt where flt_type=#flightType# and flt_key=#flightKey# and flt_date=#schDate# )
	</select>
	<update id="updateCounterInEman_flt" parameterClass="cargo.cms.customs.bo.CreateEmanBO" >
 		UPDATE EMAN_FLT SET 
 			   COUNTER = #emanCounter#
 			 where flt_type = #flightType# 
  		       and flt_key  = #flightKey# 
  		       and flt_date = #actualDate#
  		       and tr_no    = #trNo#
 	</update>
	<!-- Added by Yugandhar for Create E-Manifest   Ends-->
	<select id = "getemanFltMvntTrnoList"  parameterClass="cargo.cms.customs.bo.EMANFltMvntSearchBO" resultClass="cargo.cms.customs.bo.EMANFltMvntListBO">
		SELECT TR_NO trNumber FROM EMAN_FLT 
		WHERE FLT_KEY = #fltKey#
		and flt_date =  TO_DATE(#schFltDate#,'ddMONYY')
		and flt_type = decode(#fltType#,'A','I','D','E')
		ORDER BY TR_NO DESC
	</select>
 	<select id = "getemanFltMvntDetailsExport"  parameterClass="cargo.cms.customs.bo.EMANFltMvntSearchBO" resultClass="cargo.cms.customs.bo.EMANFltMvntListBO">
		SELECT DECODE(a.sta_std_time,null,'', (ltrim(SUBSTR(a.sta_std_time,0,2)||':'||SUBSTR(a.sta_std_time,3)))) AS std,
		   	   DECODE(a.etd_eta_time,null,'', (ltrim(SUBSTR(a.etd_eta_time,0,2)||':'||SUBSTR(a.etd_eta_time,3)))) AS etd,
       		   DECODE(a.ata_etd_time,null,'', (ltrim(SUBSTR(a.ata_etd_time,0,2)||':'||SUBSTR(a.ata_etd_time,3)))) AS atd,
		       TO_CHAR(a.flt_date,'DDMONYY HH24:MI') AS schFltDate, a.flt_key AS fltKey,
		       a.flt_type AS fltType, a.orig AS org, a.dest AS dest, a.TR_NO AS trNumber, 
		       TO_CHAR(a.flt_date,'DDMONYY') AS tempSchFltDate
		FROM EMAN_FLT a
		where a.FLT_KEY = #fltKey#
		and a.flt_date =  TO_DATE(#schFltDate#,'ddMONYY')
		and a.flt_type = 'E'
		and a.tr_no = #trNumber#
	</select>
	<select id = "getemanFltMvntDetailsImport"  parameterClass="cargo.cms.customs.bo.EMANFltMvntSearchBO" resultClass="cargo.cms.customs.bo.EMANFltMvntListBO">
		SELECT DECODE(a.sta_std_time,null,'', (ltrim(SUBSTR(a.sta_std_time,0,2)||':'||SUBSTR(a.sta_std_time,3)))) AS sta,
		   	   DECODE(a.etd_eta_time,null,'', (ltrim(SUBSTR(a.etd_eta_time,0,2)||':'||SUBSTR(a.etd_eta_time,3)))) AS eta,
       		   DECODE(a.ata_etd_time,null,'', (ltrim(SUBSTR(a.ata_etd_time,0,2)||':'||SUBSTR(a.ata_etd_time,3)))) AS ata,
		       TO_CHAR(a.flt_date,'DDMONYY HH24:MI') AS schFltDate, a.flt_key AS fltKey,
		       a.flt_type AS fltType, a.orig AS org, a.dest AS dest, a.TR_NO AS trNumber, 
		       TO_CHAR(a.flt_date,'DDMONYY') AS tempSchFltDate
		FROM EMAN_FLT a
		where a.FLT_KEY = #fltKey#
		and a.flt_date =  TO_DATE(#schFltDate#,'ddMONYY')
		and a.flt_type = 'I'
		and a.tr_no = #trNumber#
	</select>
  
    <select id = "getemanFltMvntDetailsListExport"  parameterClass="cargo.cms.customs.bo.EMANFltMvntSearchBO" resultClass="cargo.cms.customs.bo.EMANFltMvntLstBO">
		select to_char(t1.cr_date,'DDMONYY HH24:MI') as mvntDate,
		       t2.cr_user_id as userNames, 
		       (select event_desc from register_tr_no_events where tr_type='EM' and event_id= t1.cod_func) as event,
		    t2.cod_act as event, 
		    t2.des_his_dts as descDtl 
		from    	  his_flt_evnt t1, his_flt_evnt_dtl t2
		WHERE  t1.flt_key = t2.flt_key 
		and t1.flt_date = t2.flt_date 
		and t1.flt_type = t2.flt_type
		and t1.cod_tra_seq_num = t2.cod_tra_seq_num 
		and t1.tr_no= t2.tr_no
		and COD_HIS_TYP='E'
		and  t1.MODULE='E'
		and   t1.flt_type IN ('E','D')
		and t1.flt_key  =  #fltKey#
		and t1.flt_date =  TO_DATE(#schFltDate#,'ddMONYY')
		and t1.tr_no=#trNumber#
		order by t1.cr_date desc
	</select>
	<select id = "getemanFltMvntDetailsListImport"  parameterClass="cargo.cms.customs.bo.EMANFltMvntSearchBO" resultClass="cargo.cms.customs.bo.EMANFltMvntLstBO">
		select to_char(t1.cr_date,'DDMONYY HH24:MI') as mvntDate,
		       t2.cr_user_id as userNames, 
		       (select event_desc from register_tr_no_events where tr_type='EM' and event_id= t1.cod_func) as event,
		    t2.cod_act as event, 
		    t2.des_his_dts as descDtl 
		from    	  his_flt_evnt t1, his_flt_evnt_dtl t2
		WHERE  t1.flt_key = t2.flt_key 
		and t1.flt_date = t2.flt_date 
		and t1.flt_type = t2.flt_type
		and t1.cod_tra_seq_num = t2.cod_tra_seq_num 
		and t1.tr_no= t2.tr_no
		and COD_HIS_TYP='E'
		and  t1.MODULE='E'
		and   t1.flt_type IN ('I','A')
		and t1.flt_key  =  #fltKey#
		and t1.flt_date =  TO_DATE(#schFltDate#,'ddMONYY')
		and t1.tr_no=#trNumber#
		order by t1.cr_date desc
	</select>
  	<!--<select id = "getemanFltMvnttrNoListExport"  parameterClass="cargo.cms.customs.bo.EMANFltMvntSearchBO" resultClass="cargo.cms.customs.bo.EMANFltMvntLstBO">
	     select tr_no as trNumber from EMAN_FLT where flt_type='E'   
	     			<isNotEmpty property="fltKey">
				     and FLT_KEY = #fltKey#
					</isNotEmpty>
                AND TO_CHAR(flt_date,'ddMONYY') =  TO_DATE(#schFltDate#,'ddMONYY') order by tr_no desc
	</select>
    	<select id = "getemanFltMvnttrNoListImport"  parameterClass="cargo.cms.customs.bo.EMANFltMvntSearchBO" resultClass="cargo.cms.customs.bo.EMANFltMvntLstBO">
	     select tr_no as trNumber from EMAN_FLT where flt_type='I'   
	     			<isNotEmpty property="fltKey">
				     and FLT_KEY = #fltKey#
					</isNotEmpty>
                AND TO_CHAR(flt_date,'ddMONYY') =  TO_DATE(#schFltDate#,'ddMONYY') order by tr_no desc
	</select>
	<select id="checkForvalidEMANFlight"  parameterClass="cargo.cms.customs.bo.EMANFltMvntSearchBO" resultClass="java.lang.Integer">
	 <![CDATA[
	  select COUNT(*) from flt_opr a where a.flt_key=#fltKey# AND A.SCH_DATE=TO_DATE(#schFltDate#, 'DDMONYY') 
	 ]]>
	</select>
 
 <select id = "getemanFltMvntDetailsExportTR"  parameterClass="cargo.cms.customs.bo.EMANFltMvntSearchBO" resultClass="cargo.cms.customs.bo.EMANFltMvntListBO">
 		 select  (ltrim(SUBSTR(TRIM(TO_CHAR(a.sta_std_time,'0000')),0,2)|| ':'|| SUBSTR(TRIM(TO_CHAR(a.sta_std_time,'0000')),3,2),':')) as std,
                 (ltrim(SUBSTR(TRIM(TO_CHAR(a.etd_eta_time,'0000')),0,2)|| ':'|| SUBSTR(TRIM(TO_CHAR(a.etd_eta_time,'0000')),3,2),':')) as  etd,	   	  
                   (ltrim(SUBSTR(TRIM(TO_CHAR(a.ata_etd_time,'0000')),0,2)|| ':'|| SUBSTR(TRIM(TO_CHAR(a.ata_etd_time,'0000')),3,2),':')) as atd,	   	  
	   	 to_char(a.flt_date,'DDMONYY HH24:MI') as schFltDate,
              a.flt_key as fltKey,a.flt_type as fltType,a.orig as org,a.dest as dest,a.TR_NO as trNumber,to_char(a.flt_date,'DDMONYY') as tempSchFltDate
           from EMAN_FLT a where a.TR_NO in(#trNumber#)
             <isNotEmpty property="loginCarrier">
			  AND (a.CARR_KEY = #loginCarrier#
				OR a.CARR_KEY IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE = #loginCarrier#))
			</isNotEmpty>     
               
  </select>
<select id = "getemanFltMvntDetailsListExportTR"  parameterClass="cargo.cms.customs.bo.EMANFltMvntSearchBO" resultClass="cargo.cms.customs.bo.EMANFltMvntLstBO">
  
   select to_char(t2.cr_date,'DDMONYY HH24:MI') as mvntDate,
         	t2.cr_user_id as userNames, 
         	(select event_desc from register_tr_no_events where tr_type='EM' and event_id= t2.cod_func) as event,
         	t1.cod_act as event, 
         	t1.des_his_dts as descDtl 
   	  from 
      	   his_flt_evnt_dtl t1,his_flt_evnt t2
  	WHERE  t2.flt_date=t1.flt_date and
           t2.MODULE='E' and t1.flt_type='E' 
           and t1.tr_no= t2.tr_no and t1.tr_no=#trNumber#
           and COD_HIS_TYP='E'
		   and TO_CHAR(t1.flt_date,'ddMONYY') =  TO_DATE(#schFltDate#,'ddMONYY')
  		   <isNotEmpty property="fltKey">
			   and t1.FLT_KEY = #fltKey#
		   </isNotEmpty>
  </select>
  <select id = "getemanFltMvnttrNoListExportTR"  parameterClass="cargo.cms.customs.bo.EMANFltMvntSearchBO" resultClass="cargo.cms.customs.bo.EMANFltMvntLstBO">
	     select tr_no as trNumber from EMAN_FLT where flt_type='E'   
	     			<isNotEmpty property="fltKey">
				     and FLT_KEY = #fltKey#
					</isNotEmpty>
                AND TO_CHAR(flt_date,'ddMONYY') =  TO_DATE(#schFltDate#,'ddMONYY') order by tr_no desc
  </select>
  <select id = "getemanFltMvntDetailsImportTR"  parameterClass="cargo.cms.customs.bo.EMANFltMvntSearchBO" resultClass="cargo.cms.customs.bo.EMANFltMvntListBO">
 		select  (ltrim(SUBSTR(TRIM(TO_CHAR(a.sta_std_time,'0000')),0,2)|| ':'|| SUBSTR(TRIM(TO_CHAR(a.sta_std_time,'0000')),3,2),':')) as sta,
                 (ltrim(SUBSTR(TRIM(TO_CHAR(a.etd_eta_time,'0000')),0,2)|| ':'|| SUBSTR(TRIM(TO_CHAR(a.etd_eta_time,'0000')),3,2),':')) as  eta,	   	  
                   (ltrim(SUBSTR(TRIM(TO_CHAR(a.ata_etd_time,'0000')),0,2)|| ':'|| SUBSTR(TRIM(TO_CHAR(a.ata_etd_time,'0000')),3,2),':')) as ata,	   	  
	   	 to_char(a.flt_date,'DDMONYY HH24:MI') as schFltDate,
              a.flt_key as fltKey,a.flt_type as fltType,a.orig as org,a.dest as dest,a.TR_NO as trNumber,to_char(a.flt_date,'DDMONYY') as tempSchFltDate 
             from EMAN_FLT a where a.TR_NO in(#trNumber#)
            <isNotEmpty property="loginCarrier">
			  AND (a.CARR_KEY = #loginCarrier#
				OR a.CARR_KEY IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE = #loginCarrier#))
			</isNotEmpty>
                 
 </select>
	
<select id = "getemanFltMvntDetailsListImportTR"  parameterClass="cargo.cms.customs.bo.EMANFltMvntSearchBO" resultClass="cargo.cms.customs.bo.EMANFltMvntLstBO">
	 select to_char(t2.cr_date,'DDMONYY HH24:MI') as mvntDate,
         	t2.cr_user_id as userNames, 
         	(select event_desc from register_tr_no_events where tr_type='EM' and event_id= t2.cod_func) as event,
         	t1.cod_act as event, 
         	t1.des_his_dts as descDtl 
   	  from 
      	   his_flt_evnt_dtl t1,his_flt_evnt t2
  	WHERE  t2.flt_date=t1.flt_date and
           t2.MODULE='E' and t1.flt_type='I' 
           and t1.tr_no= t2.tr_no and t1.tr_no=#trNumber#
           and COD_HIS_TYP='E'
		   and TO_CHAR(t1.flt_date,'ddMONYY') =  TO_DATE(#schFltDate#,'ddMONYY')
  		   <isNotEmpty property="fltKey">
			   and t1.FLT_KEY = #fltKey#
		   </isNotEmpty>
 </select>
<select id = "getemanFltMvnttrNoListImportTR"  parameterClass="cargo.cms.customs.bo.EMANFltMvntSearchBO" resultClass="cargo.cms.customs.bo.EMANFltMvntLstBO">
	     select tr_no as trNumber from EMAN_FLT where flt_type='I'   
	     			<isNotEmpty property="fltKey">
				     and FLT_KEY = #fltKey#
					</isNotEmpty>
                AND TO_CHAR(flt_date,'ddMONYY') =  TO_DATE(#schFltDate#,'ddMONYY') order by tr_no desc
  </select>	-->
	<!-- Added by swapneswari:Cargo E-Manifest:Start -->
	
	
	<select id="checkFlightATAATDPlusConfigPass"  parameterClass="cargo.cms.customs.bo.EmanQueryBO" resultClass="java.lang.Integer">
		SELECT count(1) FROM flt_opr where flt_key = #fltNo# and sch_date = to_date(#fltDate#,'DDMONYY') and flt_type = DECODE(#fltType#,'I','A','E','D',#fltType#) and act_date is not null AND
 			SYSDATE  > to_date ( to_char(act_date, 'DDMONYY') ||' '|| lpad(ACT_TIME,4, 0),'DDMONYY HH24MI' ) + (SELECT TO_NUMBER(rule_value) FROM CMSRULES WHERE RULE_CODE='EMAN_SUBM_AFTER_FLT_ATA_ATD')    
	</select>
	
	<select id="chkFlightCloseForFlight"  parameterClass="cargo.cms.customs.bo.EmanQueryBO" resultClass="java.lang.Integer">
		 SELECT COUNT(1) FROM flt_opr a, flt_opr_events b WHERE a.tr_no = b.tr_no AND a.flt_key = #fltNo# AND a.sch_date  = to_date(#fltDate#,'DDMONYY')
    		AND a.flt_type  = DECODE(#fltType#,'I','A','E','D',#fltType#) AND b.flt_cls_yn ='Y'     
	</select>
	
	<select id ="emanQuerySearch" parameterClass="cargo.cms.customs.bo.EmanSearchBO" resultClass="cargo.cms.customs.bo.EmanQueryBO">
		select 
		a.TR_NO as trNo,
		a.FLT_TYPE fltType,
		a.FLT_KEY fltNo,
		TO_CHAR(a.FLT_DATE,'DDMONYY') fltDate,
		a.FLT_KEY||' / '|| TO_CHAR(a.FLT_DATE,'DDMONYY') fltNoDate,
		(substr(a.ATA_ETD_TIME,0,2)||':'||substr(a.ATA_ETD_TIME,3)) ata,
		a.UMR_NO umrNo,
		(select count(*) from eman_lic where tr_no= a.tr_no AND hawb_no IS NULL) noLic,
		decode(a.UMR_NO,null,null,b.VER_NO) verNo,
		decode(a.UMR_NO,null,null,b.STATUS) status,
		pkg_cst_eman.get_MAWB_data_status(a.FLT_TYPE,a.FLT_Key,TO_CHAR(a.FLT_DATE,'DDMONYY')) as mawbsts,
		TO_CHAR(a.LST_SUB_DATE,'DDMONYY') subDate,
		a.nil_cargo_yn nilCargo,
		TO_CHAR(a.FLT_DATE,'DDMONYY') actDate ,
		NVL(a.no_flt_sfx,'N') checkFltSfxReqd 
		from EMAN_FLT a 
		left join EMAN_CTRL b on a.FLT_TYPE=b.FLT_TYPE and a.FLT_KEY=b.FLT_KEY and a.FLT_DATE=b.FLT_DATE and a.TR_NO=b.TR_NO
		where a.FLT_TYPE=#fltType#
		<isNotEmpty property="startDate">
		<isNotEmpty property="endDate">
		And A.Flt_Date Between To_Date(#startDate#,'DDMONYY')	and TO_DATE(#endDate#,'DDMONYY')
		</isNotEmpty></isNotEmpty>
		<isNotEmpty property="submDateFrom">
		<isNotEmpty property="submDateTo">
		AND TO_CHAR(A.LST_SUB_DATE,'DDMONYY') Between To_Date(#submDateFrom#,'DDMONYY')	and TO_DATE(#submDateTo#,'DDMONYY')
		</isNotEmpty></isNotEmpty>
		<isNotEmpty property="umrNo">
			and a.UMR_NO=NVL(#umrNo#,a.UMR_NO)
		</isNotEmpty>
		<isNotEmpty property="submStatus">
			<isNotEqual property="submStatus" compareValue="Pending">
				and b.STATUS=#submStatus#
			</isNotEqual>
			<isEqual property="submStatus" compareValue="Pending">
				and not exists(select null from eman_ctrl ec where ec.tr_no = a.tr_no)
			</isEqual>
		</isNotEmpty>
		<isNotEmpty property="mawb">
			And Exists (Select Null From EMAN_SHP Where Flt_Type= a.Flt_Type And Flt_Key = a.Flt_Key And Flt_Date = a.Flt_Date and Awb_No = #mawb#)			
		</isNotEmpty>
		<isNotEmpty property="hawb">
			And Exists (Select Null From Eman_Hawb Where Flt_Type= a.Flt_Type And Flt_Key = a.Flt_Key And Flt_Date = a.Flt_Date and HAWB_NO = #hawb#)	
		</isNotEmpty>
		<isNotEmpty property="fltNo">	
			AND a.FLT_KEY = #fltNo#
		</isNotEmpty>
		<isNotEmpty property="carr">	
			AND a.CARR_KEY= #carr#
		</isNotEmpty>
		<isEmpty property="carr">	
			<isNotEmpty property="loginCarrier">
			AND	(a.CARR_KEY = #loginCarrier# OR a.CARR_KEY IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE = #loginCarrier#))
		     </isNotEmpty>
		</isEmpty>
		<dynamic prepend="ORDER BY ">
			<isNotEmpty property="sortOrder.sortField">
				$sortOrder.sortField$
			</isNotEmpty>
			<isEmpty property="sortOrder.sortField">
				 a.FLT_DATE desc, A.FLT_KEY 
			</isEmpty>
		</dynamic>
	</select>
	<select id ="emanQuerySearchCOUNT" parameterClass="cargo.cms.customs.bo.EmanSearchBO" resultClass="java.lang.Integer">
		select COUNT(1) 
		from EMAN_FLT a 
		left join EMAN_CTRL b on a.FLT_TYPE=b.FLT_TYPE and a.FLT_KEY=b.FLT_KEY and a.FLT_DATE=b.FLT_DATE and a.TR_NO=b.TR_NO
		where a.FLT_TYPE=#fltType#
		<isNotEmpty property="startDate">
		<isNotEmpty property="endDate">
		And A.Flt_Date Between To_Date(#startDate#,'DDMONYY')	and TO_DATE(#endDate#,'DDMONYY')
		</isNotEmpty></isNotEmpty>
		<isNotEmpty property="submDateFrom">
		<isNotEmpty property="submDateTo">
		AND TO_CHAR(A.LST_SUB_DATE,'DDMONYY') Between To_Date(#submDateFrom#,'DDMONYY')	and TO_DATE(#submDateTo#,'DDMONYY')
		</isNotEmpty></isNotEmpty> 
		<isNotEmpty property="umrNo">
			and a.UMR_NO=NVL(#umrNo#,a.UMR_NO)
		</isNotEmpty>
		<isNotEmpty property="submStatus">
			<isNotEqual property="submStatus" compareValue="Pending">
				and b.STATUS=#submStatus#
			</isNotEqual>
			<isEqual property="submStatus" compareValue="Pending">
				and not exists(select null from eman_ctrl ec where ec.tr_no = a.tr_no)
			</isEqual>
		</isNotEmpty>
		<isNotEmpty property="mawb">
			And Exists (Select Null From EMAN_SHP Where Flt_Type= a.Flt_Type And Flt_Key = a.Flt_Key And Flt_Date = a.Flt_Date and Awb_No = #mawb#)			
		</isNotEmpty>
		<isNotEmpty property="hawb">
			And Exists (Select Null From Eman_Hawb Where Flt_Type= a.Flt_Type And Flt_Key = a.Flt_Key And Flt_Date = a.Flt_Date and HAWB_NO = #hawb#)	
		</isNotEmpty>
		<isNotEmpty property="fltNo">	
			AND a.FLT_KEY = #fltNo#
		</isNotEmpty>
		<isNotEmpty property="carr">	
			AND a.CARR_KEY= #carr#
		</isNotEmpty>
		<isEmpty property="carr">	
			<isNotEmpty property="loginCarrier">
			AND	(a.CARR_KEY = #loginCarrier# OR a.CARR_KEY IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE = #loginCarrier#))
		     </isNotEmpty>
		</isEmpty>
	</select>
	<select id="emanQueryByUmrNo" parameterClass="cargo.cms.customs.bo.EmanSearchBO" resultClass="cargo.cms.customs.bo.EmanQueryBO">
		select 
		a.TR_NO as trNo,
		a.FLT_TYPE fltType,
		a.FLT_KEY fltNo,
		TO_CHAR(a.FLT_DATE,'DDMONYY') fltDate,
		a.FLT_KEY||' / '|| TO_CHAR(a.FLT_DATE,'DDMONYY') fltNoDate,
		(substr(a.ATA_ETD_TIME,0,2)||':'||substr(a.ATA_ETD_TIME,3)) ata,
		a.UMR_NO umrNo,
		(select count(*) from eman_lic where tr_no= a.tr_no) noLic,
		decode(a.UMR_NO,null,null,b.VER_NO) verNo,
		decode(a.UMR_NO,null,null,b.STATUS) status,
		pkg_cst_eman.get_MAWB_data_status(a.FLT_TYPE,a.FLT_Key,TO_CHAR(a.FLT_DATE,'DDMONYY')) as mawbsts,
		TO_CHAR(a.LST_SUB_DATE,'DDMONYY') subDate,
		a.nil_cargo_yn nilCargo,
		TO_CHAR(a.FLT_DATE,'DDMONYY') actDate ,
		NVL(a.no_flt_sfx,'N') checkFltSfxReqd 
		From Eman_Flt A 
		left join EMAN_CTRL b on     a.FLT_TYPE=b.FLT_TYPE		and a.FLT_KEY=b.FLT_KEY		and a.FLT_DATE=b.FLT_DATE
		and a.TR_NO=b.TR_NO 	
		where a.UMR_NO=NVL(#umrNo#,a.UMR_NO)
		<isNotEmpty property="loginCarrier">
			AND	(a.CARR_KEY = #loginCarrier# OR a.CARR_KEY IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE = #loginCarrier#))
		</isNotEmpty>
	</select>
	
	
	<update id="submitFlightStatus1" parameterClass="cargo.cms.customs.bo.EmanQueryBO">
		update EMAN_CTRL set STATUS=#status#,LM_DATE=SYSDATE,LM_USER_ID=#userID# where UMR_NO=#umrNo#
	</update>
	
	<select id="fetchEmanFltType" parameterClass="cargo.cms.customs.bo.EmanQueryBO" resultClass="java.lang.String">
	Select flt_type From Eman_Ctrl where umr_no = #umrNo#
	</select>
	<select id="emanQueryShpmDtls" parameterClass="cargo.cms.customs.bo.EmanQueryBO" resultClass="cargo.cms.customs.bo.EmanQueryBO">
		select DECODE(b.FLG_DEL,null,'N','N','N','Y') as cancelInd,		
		b.TR_NO trNo,
		DECODE(b.FLG_UPD,null,'N','N','N','Y') as amendInd,
		CASE WHEN  
      		(SELECT COUNT(*) FROM EMAN_HAWB WHERE AWB_NO=A.AWB_NO  AND TO_CHAR(AWB_DATE,'DDMONYY')=TO_DATE(TO_CHAR(A.AWB_DATE,'DDMONYY'),'DDMONYY')  AND FLG_DEL='Y' AND TR_NO=B.TR_NO) = 
      		(SELECT COUNT(*) FROM EMAN_HAWB WHERE AWB_NO=A.AWB_NO AND TO_CHAR(AWB_DATE,'DDMONYY')=TO_DATE(TO_CHAR(A.AWB_DATE,'DDMONYY'),'DDMONYY') AND TR_NO=B.TR_NO)
    	THEN 'N'
    	ELSE
        	DECODE(B.FLG_CONSOL,NULL,'N','N','N','Y')
    	END    
    	AS cnslInd,
		a.AWB_NO awbNo,
		a.ORIG origin,
		a.DEST dest,
		CASE WHEN INSTR(a.AWB_NO, 'C') > 0 then 'Y' else 'N' end as obcAwb,
		pkg_cst_eman.get_eman_awb_data_status(c.FLT_TYPE,b.FLT_Key,TO_CHAR(b.FLT_DATE,'DDMONYY'),a.AWB_NO,TO_CHAR(a.awb_DATE,'DDMONYY'),b.TR_NO) as mawbsts,
		(SUBSTR(a.AWB_NO,0,3))||'-'||(SUBSTR(a.AWB_NO,4)) as awbNum,
		To_char(a.AWB_DATE,'DDMONYY') awbDate,
		(select count(*) from eman_lic where tr_no= b.tr_no and awb_no=a.AWB_NO AND hawb_no IS NULL) noLic,
		c.TOTAL_PERMIT noPmt, 
		a.PART_SHIPMENT  prtShpmInd,
		a.AWB_TYPE awbType from
		EMAN_MST_DTL a join EMAN_SHP b on 
		a.AWB_NO=b.AWB_NO
		and To_char(a.AWB_DATE,'DDMONYY')=To_char(b.AWB_DATE,'DDMONYY')
		<isNotEmpty property="trNo" prepend="AND">
			 b.tr_no = #trNo#
		</isNotEmpty>
		join EMAN_FLT c 
		  on c.FLT_TYPE=b.FLT_TYPE
		  and c.FLT_KEY=b.FLT_KEY
		  and c.FLT_DATE=b.FLT_DATE
		  and c.TR_NO=b.TR_NO
		left join EMAN_CTRL d
		  on d.FLT_TYPE=b.FLT_TYPE
		  and d.FLT_KEY=b.FLT_KEY
		  and d.FLT_DATE=b.FLT_DATE		
		left join eman_subm_dtl f 
		  on f.AWB_NO=b.AWB_NO
		  and To_char(f.AWB_DATE,'DDMONYY')=To_char(b.AWB_DATE,'DDMONYY')
		where b.FLT_TYPE=#fltType#
		  and b.FLT_KEY=#fltNo#
		  and TO_CHAR(b.FLT_DATE,'DDMONYY')=TO_DATE(#fltDate#,'DDMONYY')
		  <isNotEmpty property="subDate">
		  		and TO_CHAR(c.LST_SUB_DATE,'DDMONYY')=TO_DATE(#subDate#,'DDMONYY')
		  </isNotEmpty>
		  <isNotEmpty property="verNo">
		  		and d.ver_no=#verNo#
		  </isNotEmpty>
		  <isNotEmpty property="status">
		  		and d.STATUS=#status#
		  </isNotEmpty>
		  <isNotEmpty property="umrNo">
		  		and c.UMR_NO=#umrNo#
		  </isNotEmpty> 
		  <isEqual property="obcAccess" compareValue="W" prepend="AND">
       	        a.AWB_NO like '%C%'
       	</isEqual>							 		
	</select>
	
<select id="emanhawbList" parameterClass="cargo.cms.customs.bo.EmanQueryBO" resultClass="cargo.cms.customs.bo.EmanQueryBO">
select b.FLT_TYPE fltType,
b.FLT_KEY fltNo,
To_char(b.FLT_DATE,'DDMONYY') fltDate,
b.HAWB_NO hawbNo,
b.TR_NO trNo,
b.ORIG origin,
b.DEST dest,
b.CONTENT cont,
DECODE(b.FLG_DEL,null,'N','N','N','Y') as cancelInd,
DECODE(b.FLG_UPD,null,'N','N','N','Y') as amendInd,
(select count(*) from eman_lic where tr_no= a.tr_no and hawb_no=b.HAWB_NO) noLic ,
pkg_cst_eman.get_eman_hawb_data_status(b.FLT_TYPE,b.FLT_Key,TO_CHAR(b.FLT_DATE,'DDMONYY'),b.AWB_NO,TO_CHAR(b.awb_DATE,'DDMONYY'),b.HAWB_NO,b.TR_NO) as status 
from EMAN_HAWB b left join EMAN_FLT a
on b.FLT_TYPE=a.FLT_TYPE
and b.FLT_KEY=a.FLT_KEY
and b.FLT_DATE=a.FLT_DATE
and b.TR_NO=a.TR_NO
where b.awb_no=#awbNo#
and b.awb_Date=TO_DATE(#awbDate#,'DDMONYY')
and b.flt_key=#fltNo#
and b.Flt_type=#fltType#
and b.flt_date=TO_DATE(#fltDate#,'DDMONYY')
and a.tr_no=#trNo#
</select>	
<select id="emanMawbDetail"	parameterClass="cargo.cms.customs.bo.EmanQueryBO" resultClass="cargo.cms.customs.bo.EmanQueryBO">
select a.AWB_NO awbNo, TO_char(a.AWB_DATE,'DDMONYY') awbDate,
	a.ORIG origin, a.DEST dest, a.SHP_PCS awbPc, a.SHP_WGT awbwt,
	a.CONTENT cont
from EMAN_SHP a 
where a.awb_no=#awbNo# and TO_CHAR(a.awb_date,'DDMONYY')=#awbDate#
  and a.FLT_TYPE=#fltType# and a.FLT_KEY=#fltNo#
  and a.FLT_date=TO_DATE(#fltDate#,'DDMONYY')
  <isNotEmpty property="trNo" prepend="AND">
  	  a.tr_no=#trNo#
  </isNotEmpty>
</select>
<select id="emanMawbManifestDetail"	parameterClass="cargo.cms.customs.bo.EmanQueryBO" resultClass="cargo.cms.customs.bo.EmanQueryBO">
<!-- select SHPR_NAME shipperName,
(SELECT CODE_DESC  FROM CUST_COMPANY WHERE CODE =AGENT_CODE AND AGENT_YN = 'Y' AND ACTIVE = 'Y' AND BLACKLISTED='N') agntName,-->
select SHIPPER_NAME shipperName,
AGENT_NAME agntName,
CSGNE_NAME cnsigneeName,
AGENT_ADDR_1 agntAddr1,
AGENT_ADDR_2 agntAddr2, 
AGENT_ADDR_3 agntAddr3,
AGENT_ADDR_4 agntAddr4,
AGENT_ADDR_5 agntAddr5,
SHPR_ADDR_1 shiperAddr1,
SHPR_ADDR_2 shiperAddr2,
SHPR_ADDR_3 shiperAddr3,
SHPR_ADDR_4 shiperAddr4,
SHPR_ADDR_5 shiperAddr5,
CSGNE_ADDR_1 cnsigneeAddr1,
CSGNE_ADDR_2 cnsigneeAddr2,
CSGNE_ADDR_3 cnsigneeAddr3,
CSGNE_ADDR_4 cnsigneeAddr4,
CSGNE_ADDR_5 cnsigneeAddr5,
a.SHPR_CTRY_CODE shiperConCode, 
a.CSGNE_CTRY_CODE cogneConCode 
from EMAN_SHP a where a.awb_no=#awbNo# and TO_CHAR(a.awb_date,'DDMONYY')=#awbDate#
and a.FLT_TYPE=#fltType# and a.FLT_KEY=#fltNo#
and a.FLT_date=TO_DATE(#fltDate#,'DDMONYY')
  <isNotEmpty property="trNo" prepend="AND">
  	  a.tr_no=#trNo#
  </isNotEmpty>
</select>
<select id="fetchEmanTrNo" parameterClass="java.lang.String" resultClass="java.lang.String">
select TR_NO+1 from Eman_shp where rownum=1
</select>
<select id="searchHawbDetail" parameterClass="cargo.cms.customs.bo.EmanSearchBO" resultClass="cargo.cms.customs.bo.EmanQueryBO">
	select eh.awb_no awbNo, eh.HAWB_NO hawbNo, To_char(eh.AWB_DATE,'DDMONYY') awbDate, EH.ORIG origin, eh.DEST dest,
			eh.HAWB_PCS hawbPc, eh.HAWB_WGT hawbwt, eh.CONTENT cont, eh.FLT_KEY fltNo, To_char(eh.FLT_DATE,'DDMONYY') fltDate,
			eh.TR_NO trNo, eh.FLT_TYPE fltType, PKG_COMMON.get_flt_ata(eh.FLT_KEY, eh.FLT_DATE, eh.FLT_TYPE) ata,
			eh.SHPR_NAME shipperName, eh.CSGNE_NAME cnsigneeName, eh.SHPR_ADDR_1 shiperAddr1, eh.SHPR_ADDR_2 shiperAddr2, 
			eh.SHPR_ADDR_3 shiperAddr3, eh.SHPR_ADDR_4 shiperAddr4, eh.SHPR_ADDR_5 shiperAddr5,
			eh.CSGNE_ADDR_1 cnsigneeAddr1, eh.CSGNE_ADDR_2 cnsigneeAddr2, eh.CSGNE_ADDR_3 cnsigneeAddr3, 
			eh.CSGNE_ADDR_4 cnsigneeAddr4, eh.CSGNE_ADDR_5 cnsigneeAddr5,
			eh.SHPR_CTRY_CODE shiperConCode, eh.CSGNE_CTRY_CODE cogneConCode
	from eman_flt ef 
	join eman_shp es on es.tr_no = ef.tr_no and es.awb_no = #mawbPfx# || #mawbSfx#
	join eman_hawb eh on eh.tr_no = es.tr_no and eh.awb_no = es.awb_no and eh.awb_date = es.awb_date
	where ef.FLT_TYPE=#fltType#
	  and ef.tr_no = #trNo#
	  and es.AWB_NO=#mawbPfx# || #mawbSfx#
	  and eh.HAWB_NO=#hawb#
</select>
<select id="searchMawbDetail" parameterClass="cargo.cms.customs.bo.EmanSearchBO" resultClass="cargo.cms.customs.bo.EmanQueryBO">
	select a.awb_no awbNo, To_char(a.AWB_DATE,'DDMONYY') awbDate, a.FLT_KEY fltNo, a.FLT_TYPE fltType, To_char(a.FLT_DATE,'DDMONYY') fltDate,
			DECODE(a.FLG_CONSOL,null,'N','N','N','Y') cnslInd, a.AWB_TYPE awbType, c.ATA_ETD_TIME ata, to_char(c.LST_SUB_DATE, 'DDMONYY') subDate, 
			d.VER_NO verNo, a.TR_NO trNo, b.PART_SHIPMENT prtShpmInd, a.ORIG origin, a.DEST dest, a.SHP_PCS awbPc, a.SHP_WGT awbwt, a.CONTENT cont,
			a.SHIPPER_NAME shipperName, a.AGENT_NAME agntName, a.CSGNE_NAME cnsigneeName, a.AGENT_ADDR_1 agntAddr1, a.AGENT_ADDR_2 agntAddr2,
			a.AGENT_ADDR_3 agntAddr3, a.AGENT_ADDR_4 agntAddr4, a.AGENT_ADDR_5 agntAddr5, 
			a.SHPR_ADDR_1 shiperAddr1, a.SHPR_ADDR_2 shiperAddr2, a.SHPR_ADDR_3 shiperAddr3, a.SHPR_ADDR_4 shiperAddr4, a.SHPR_ADDR_5 shiperAddr5,
			a.CSGNE_ADDR_1 cnsigneeAddr1, a.CSGNE_ADDR_2 cnsigneeAddr2, a.CSGNE_ADDR_3 cnsigneeAddr3, a.CSGNE_ADDR_4 cnsigneeAddr4, a.CSGNE_ADDR_5 cnsigneeAddr5,
			CASE WHEN INSTR(a.AWB_NO, 'C') > 0 then 'Y' else 'N' end as obcAwb
	from eman_shp a 
	join eman_mst_dtl b ON a.awb_no=b.awb_no and a.awb_date=b.awb_date join eman_flt c on c.tr_no = a.tr_no
	left join (select ec.flt_key, ec.flt_date, ec.tr_no, max(ec.ver_no) ver_no
				from eman_ctrl ec where ec.tr_no =#trNo# group by ec.flt_key, ec.flt_date, ec.tr_no) d on d.tr_no= a.tr_no
	where a.tr_no = #trNo# and a.awb_no=#mawbPfx# || #mawbSfx#
</select>
<select id="mawbLisecceDetails"	parameterClass="cargo.cms.customs.bo.EmanQueryBO" resultClass="cargo.cms.customs.bo.EmanQueryBO">
	select LICENSE as license1,LICENSE as licenseCopy1 from EMAN_LIC where awb_no=#awbNo# and TO_CHAR(awb_date,'DDMONYY')=TO_DATE(#awbDate#,'DDMONYY') and tr_no=#trNo# and hawb_no is null
</select>
<select id="emanhouseMawbLisenceList" parameterClass="cargo.cms.customs.bo.EmanQueryBO" resultClass="cargo.cms.customs.bo.EmanQueryBO">
select LICENSE as license1,LICENSE as licenseCopy1 from EMAN_LIC where awb_no=#awbNo# and TO_CHAR(awb_date,'DDMONYY')=TO_DATE(#awbDate#,'DDMONYY') and tr_no=#trNo# and hawb_no=#hawbNo#
</select>
<select id="emanhousedetail" parameterClass="cargo.cms.customs.bo.EmanQueryBO" resultClass="cargo.cms.customs.bo.EmanQueryBO">
select ORIG origin,
DEST dest,
HAWB_PCS hawbPc,
HAWB_WGT hawbwt,
CONTENT cont from eman_hawb where 
HAWB_NO=#hawbNo# and
TR_NO=#trNo# and
FLT_TYPE=#fltType# and
FLT_KEY=#fltNo# and
TO_CHAR(FLT_date,'DDMONYY')=TO_DATE(#fltDate#,'DDMONYY')
and awb_no=#awbNo# and
TO_CHAR(awb_date,'DDMONYY')=TO_DATE(#awbDate#,'DDMONYY')

</select>
<select id="emanhseManfDtl" parameterClass="cargo.cms.customs.bo.EmanQueryBO" resultClass="cargo.cms.customs.bo.EmanQueryBO">
select SHPR_NAME shipperName,
CSGNE_NAME cnsigneeName,
SHPR_ADDR_1 shiperAddr1,
SHPR_ADDR_2 shiperAddr2,
SHPR_ADDR_3 shiperAddr3,
SHPR_ADDR_4 shiperAddr4,
SHPR_ADDR_5 shiperAddr5,
CSGNE_ADDR_1 cnsigneeAddr1,
CSGNE_ADDR_2 cnsigneeAddr2,
CSGNE_ADDR_3 cnsigneeAddr3,
CSGNE_ADDR_4 cnsigneeAddr4,
CSGNE_ADDR_5 cnsigneeAddr5,
SHPR_CTRY_CODE shiperConCode,
CSGNE_CTRY_CODE cogneConCode from Eman_hawb where HAWB_NO=#hawbNo# and
TR_NO=#trNo# and
FLT_TYPE=#fltType# and
FLT_KEY=#fltNo# and
TO_CHAR(FLT_date,'DDMONYY')=TO_DATE(#fltDate#,'DDMONYY')
and awb_no=#awbNo# and
TO_CHAR(awb_date,'DDMONYY')=TO_DATE(#awbDate#,'DDMONYY')
</select>
<insert id="saveEmanHawbDetails" parameterClass="cargo.cms.customs.bo.EmanQueryBO" >
insert into EMAN_HAWB (FLT_TYPE,FLT_KEY,FLT_DATE,AWB_NO,AWB_DATE,HAWB_NO,TR_NO,ORIG,DEST,HAWB_PCS,HAWB_WGT,CONTENT,CSGNE_NAME,CSGNE_ADDR_1,CSGNE_ADDR_2,CSGNE_ADDR_3,
CSGNE_ADDR_4,CSGNE_ADDR_5,CSGNE_CTRY_CODE,SHIPPER_CODE,SHPR_NAME,SHPR_ADDR_1,SHPR_ADDR_2,SHPR_ADDR_3,SHPR_ADDR_4,SHPR_ADDR_5,SHPR_CTRY_CODE,FLG_UPD) 
values(#fltType#,#fltNo#,#fltDate#,#awbNo#,#awbDate#,#hawbNo#,#trNo#,#origin#,#dest#,#hawbPc#,#hawbwt#,#cont#,#cnsigneeName#,#cnsigneeAddr1#,
#cnsigneeAddr2#,#cnsigneeAddr3#,#cnsigneeAddr4#,#cnsigneeAddr5#,#cogneConCode#,(SELECT CODE FROM CUST_COMPANY WHERE CODE_DESC= #shipperName#),#shipperName#,#shiperAddr1#,#shiperAddr2#,#shiperAddr3#,#shiperAddr4#,#shiperAddr5#,#shiperConCode#,decode((select count(flt_key) from eman_ctrl where tr_no=#trNo#  and (manifest_no!='1' or (manifest_no='1' and status='Confirmed'))),0,'N','Y'))
</insert>
<insert id="saveEmanMawbDetails" parameterClass="cargo.cms.customs.bo.EmanQueryBO" >
insert into EMAN_MST_DTL (AWB_NO,AWB_DATE,ORIG,DEST,AWB_PCS,AWB_WGT,CONTENT,AGENT_CODE,SHIPPER_CODE,CSGNE_NAME,AGENT_ADDR_1,AGENT_ADDR_2,AGENT_ADDR_3,AGENT_ADDR_4,
AGENT_ADDR_5,CSGNE_ADDR_1,CSGNE_ADDR_2,CSGNE_ADDR_3,CSGNE_ADDR_4,CSGNE_ADDR_5,SHPR_ADDR_1,SHPR_ADDR_2,SHPR_ADDR_3,SHPR_ADDR_4,SHPR_ADDR_5,SHPR_NAME) 
values((#awbNo#),to_date(to_char(sysdate,'DDMONYY'),'DDMONYY'),#origin#,#dest#,#awbPc#,#awbwt#,#cont#,(SELECT CODE  FROM CUST_COMPANY WHERE CODE_DESC=#agntName# AND AGENT_YN = 'Y' AND ACTIVE = 'Y' AND BLACKLISTED='N'),
(SELECT CODE FROM CUST_COMPANY WHERE CODE_DESC= #shipperName#),#cnsigneeName#,#agntAddr1#,#agntAddr2#,#agntAddr3#,#agntAddr4#,#agntAddr5#,#cnsigneeAddr1#,
#cnsigneeAddr2#,#cnsigneeAddr3#,#cnsigneeAddr4#,#cnsigneeAddr5#,#shiperAddr1#,#shiperAddr2#,#shiperAddr3#,#shiperAddr4#,#shiperAddr5#,#shipperName#)
</insert>
<insert id="saveEmanSHPMDetails" parameterClass="cargo.cms.customs.bo.EmanQueryBO" >
insert into EMAN_SHP (FLT_KEY,FLT_DATE,FLT_TYPE,TR_NO,AWB_NO,AWB_DATE,ORIG,DEST,SHP_PCS,SHP_WGT,CONTENT,AGENT_CODE,SHIPPER_CODE,CSGNE_NAME,AGENT_ADDR_1,AGENT_ADDR_2,AGENT_ADDR_3,AGENT_ADDR_4,
AGENT_ADDR_5,CSGNE_ADDR_1,CSGNE_ADDR_2,CSGNE_ADDR_3,CSGNE_ADDR_4,CSGNE_ADDR_5,SHPR_ADDR_1,SHPR_ADDR_2,SHPR_ADDR_3,SHPR_ADDR_4,SHPR_ADDR_5,AGENT_NAME,SHIPPER_NAME, TR_TYPE,DIS_PORT,SHPR_CTRY_CODE,CSGNE_CTRY_CODE) 
values(#fltNo#,#fltDate#,#fltType#,#trNo#,(#awbNo#),to_date(nvl(#awbDate#,to_char(sysdate,'DDMONYY')),'DDMONYY'),#origin#,#dest#,#awbPc#,#awbwt#,#cont#,(SELECT CODE  FROM CUST_COMPANY WHERE CODE_DESC=#agntName# AND AGENT_YN = 'Y' AND ACTIVE = 'Y' AND BLACKLISTED='N'),
(SELECT CODE FROM CUST_COMPANY WHERE CODE_DESC= #shipperName#),#cnsigneeName#,#agntAddr1#,#agntAddr2#,#agntAddr3#,#agntAddr4#,#agntAddr5#,#cnsigneeAddr1#,
#cnsigneeAddr2#,#cnsigneeAddr3#,#cnsigneeAddr4#,#cnsigneeAddr5#,#shiperAddr1#,#shiperAddr2#,#shiperAddr3#,#shiperAddr4#,#shiperAddr5#,#agntName#,#shipperName#, #trtype#,(SELECT DIS_PORT_1 FROM EMAN_FLT WHERE FLT_KEY =#fltNo# AND FLT_DATE =#fltDate# AND FLT_TYPE = #fltType# AND ROWNUM=1),
#shiperConCode#,#cogneConCode# )
</insert>	
<update id="updateEmanHawbDetails" parameterClass="cargo.cms.customs.bo.EmanQueryBO" >
UPDATE EMAN_HAWB SET FLG_UPD=decode((select count(flt_key) from eman_ctrl where tr_no=#trNo# and (manifest_no!='1' or (manifest_no='1' and status='Confirmed'))),0,'N','Y'),ORIG=#origin#,DEST=#dest#,CSGNE_CTRY_CODE=#cogneConCode#,SHPR_CTRY_CODE=#shiperConCode#,
HAWB_PCS=#hawbPc#,HAWB_WGT=#hawbwt#,CONTENT=#cont#,SHIPPER_CODE=(SELECT CODE FROM CUST_COMPANY WHERE CODE_DESC= #shipperName#),CSGNE_NAME=#cnsigneeName#,CSGNE_ADDR_1=#cnsigneeAddr1#,
CSGNE_ADDR_2=#cnsigneeAddr2#,CSGNE_ADDR_3=#cnsigneeAddr3#,CSGNE_ADDR_4=#cnsigneeAddr4#,CSGNE_ADDR_5=#cnsigneeAddr5#,SHPR_NAME=#shipperName#,SHPR_ADDR_1=#shiperAddr1#,
SHPR_ADDR_2=#shiperAddr2#,SHPR_ADDR_3=#shiperAddr3#,SHPR_ADDR_4=#shiperAddr4#,SHPR_ADDR_5=#shiperAddr5# WHERE HAWB_NO=#hawbNo# and TR_NO=#trNo# and FLT_TYPE=#fltType# and FLT_KEY=#fltNo# and
FLT_date=TO_DATE(#fltDate#,'DDMONYY') and awb_no=#awbNo# and
TO_CHAR(awb_date,'DDMONYY')=TO_DATE(#awbDate#,'DDMONYY')
</update>
<update id="updateEmanMawbDetails" parameterClass="cargo.cms.customs.bo.EmanQueryBO" >
UPDATE EMAN_MST_DTL SET ORIG=#origin#,DEST=#dest#,
AWB_PCS=#awbPc#,AWB_WGT=#awbwt#,CONTENT=#cont#,AGENT_CODE=(SELECT CODE  FROM CUST_COMPANY WHERE CODE_DESC=#agntName# AND AGENT_YN = 'Y' AND ACTIVE = 'Y' AND BLACKLISTED='N'),CSGNE_CTRY_CODE=#cogneConCode#,SHPR_CTRY_CODE=#shiperConCode#,
SHIPPER_CODE=(SELECT CODE FROM CUST_COMPANY WHERE CODE_DESC= #shipperName#),SHPR_NAME=#shipperName#,CSGNE_NAME=#cnsigneeName#,AGENT_ADDR_1=#agntAddr1#,
AGENT_ADDR_2=#agntAddr2#,AGENT_ADDR_3=#agntAddr3#,AGENT_ADDR_4=#agntAddr4#,AGENT_ADDR_5=#agntAddr5#,CSGNE_ADDR_1=#cnsigneeAddr1#,
CSGNE_ADDR_2=#cnsigneeAddr2#,CSGNE_ADDR_3=#cnsigneeAddr3#,CSGNE_ADDR_4=#cnsigneeAddr4#,CSGNE_ADDR_5=#cnsigneeAddr5#,SHPR_ADDR_1=#shiperAddr1#,
SHPR_ADDR_2=#shiperAddr2#,SHPR_ADDR_3=#shiperAddr3#,SHPR_ADDR_4=#shiperAddr4#,SHPR_ADDR_5=#shiperAddr5# WHERE AWB_NO=(#awbNo#) and  TO_CHAR(awb_date,'ddMONYY')=TO_date(#awbDate#,'DDMONYY') 
</update>
<update id="updateEmanShpmDetails" parameterClass="cargo.cms.customs.bo.EmanQueryBO" >
UPDATE EMAN_SHP SET ORIG=#origin#,DEST=#dest#,FLG_UPD=decode((select count(flt_key) from eman_ctrl where tr_no=#trNo#  and (manifest_no!='1' or (manifest_no='1' and status='Confirmed'))),0,'N','Y'),
SHP_PCS=#awbPc#,SHP_WGT=#awbwt#,CONTENT=#cont#,AGENT_CODE=(SELECT CODE  FROM CUST_COMPANY WHERE CODE_DESC=#agntName# AND AGENT_YN = 'Y' AND ACTIVE = 'Y' AND BLACKLISTED='N'),CSGNE_CTRY_CODE=#cogneConCode#,SHPR_CTRY_CODE=#shiperConCode#,
SHIPPER_CODE=(SELECT CODE FROM CUST_COMPANY WHERE CODE_DESC= #shipperName#),SHIPPER_NAME=#shipperName#,
CSGNE_NAME=#cnsigneeName#,AGENT_NAME=#agntName#,AGENT_ADDR_1=#agntAddr1#,
AGENT_ADDR_2=#agntAddr2#,AGENT_ADDR_3=#agntAddr3#,AGENT_ADDR_4=#agntAddr4#,AGENT_ADDR_5=#agntAddr5#,CSGNE_ADDR_1=#cnsigneeAddr1#,
CSGNE_ADDR_2=#cnsigneeAddr2#,CSGNE_ADDR_3=#cnsigneeAddr3#,CSGNE_ADDR_4=#cnsigneeAddr4#,CSGNE_ADDR_5=#cnsigneeAddr5#,SHPR_ADDR_1=#shiperAddr1#,
SHPR_ADDR_2=#shiperAddr2#,SHPR_ADDR_3=#shiperAddr3#,SHPR_ADDR_4=#shiperAddr4#,SHPR_ADDR_5=#shiperAddr5#, TR_TYPE='UMAWB',LM_USER_ID=#userId#,LM_DATE=sysdate
WHERE AWB_NO=(#awbNo#) and  TO_CHAR(awb_date,'ddMONYY')=TO_date(#awbDate#,'DDMONYY') and 
TR_NO=#trNo# and FLT_TYPE=#fltType# and FLT_KEY=#fltNo# and
FLT_date=TO_DATE(#fltDate#,'DDMONYY')
</update>
<update id="updateEmanShptable" parameterClass="cargo.cms.customs.bo.EmanQueryBO" >
UPDATE EMAN_SHP SET FLG_UPD='Y' 
WHERE AWB_NO=(#awbNo#) and  awb_date=TO_date(#awbDate#,'DDMONYY') and 
TR_NO=#trNo# and FLT_TYPE=#fltType# and FLT_KEY=#fltNo# and
FLT_date=TO_DATE(#fltDate#,'DDMONYY')
</update>
<select id="countCnslIndForHawb" parameterClass="cargo.cms.customs.bo.EmanQueryBO" resultClass="java.lang.Integer">
select count(*) from eman_hawb
where awb_no=#awbNo# 
and TO_CHAR(awb_date,'DDMONYY')=TO_DATE(#awbDate#,'DDMONYY') 
and FLG_DEL='Y'
and TR_NO=#trNo# 
</select>
<select id="countHawbForAwb" parameterClass="cargo.cms.customs.bo.EmanQueryBO" resultClass="java.lang.Integer">
select count(*) from eman_hawb
where awb_no=#awbNo# 
and TO_CHAR(awb_date,'DDMONYY')=TO_DATE(#awbDate#,'DDMONYY')
and TR_NO=#trNo# 
</select>
<insert id="saveemanhawbLisence" parameterClass="cargo.cms.customs.bo.EmanQueryBO" >
insert into EMAN_LIC (LICENSE,TR_NO,awb_no,awb_date,hawb_no,CR_DATE,CR_USER_ID)values(#license1#,#trNo#,#awbNo#,#awbDate#,#hawbNo#,sysdate,#userId#)
</insert>
<insert id="saveemanmawbLisence1" parameterClass="cargo.cms.customs.bo.EmanQueryBO" >
insert into EMAN_LIC (LICENSE,TR_NO,awb_no,awb_date)values(#license1#,#trNo#,#awbNo#,#awbDate#)
</insert>
<insert id="saveemanmawbLisence" parameterClass="cargo.cms.customs.bo.EmanQueryBO" >
insert into EMAN_LIC (LICENSE,TR_NO,awb_no,awb_date,CR_DATE,CR_USER_ID)values(#license1#,#trNo#,#awbNo#,to_date(decode(#awbDate#,null,to_char(sysdate,'DDMONYY'),#awbDate#),'DDMONYY'),sysdate,#userId#)
</insert>
<select id="checkLicanceExistsornot" parameterClass="cargo.cms.customs.bo.EmanQueryBO" resultClass="java.lang.Integer">
select count(*) from eman_lic where awb_no=#awbNo# and TO_CHAR(awb_date,'DDMONYY')=TO_DATE(#awbDate#,'DDMONYY') and tr_no=#trNo#
</select>
<select id="checkHawbLicanceExistsornot" parameterClass="cargo.cms.customs.bo.EmanQueryBO" resultClass="java.lang.Integer">
select count(*) from eman_lic where awb_no=#awbNo# and TO_CHAR(awb_date,'DDMONYY')=TO_DATE(#awbDate#,'DDMONYY') and tr_no=#trNo# and hawb_no=#hawbNo#
</select>
<update id="updateemanmawbLisence1" parameterClass="cargo.cms.customs.bo.EmanQueryBO" >
UPDATE EMAN_LIC set LICENSE=#license1#,LM_USER_ID=#userId#,LM_DATE=sysdate where awb_no=#awbNo# and TO_CHAR(awb_date,'DDMONYY')=TO_DATE(#awbDate#,'DDMONYY') and tr_no=#trNo# and license=#licenseCopy1#
</update>
<update id="updateemanhawbLisence" parameterClass="cargo.cms.customs.bo.EmanQueryBO" >
UPDATE EMAN_LIC set LICENSE=#license1#,LM_USER_ID=#userId#,LM_DATE=sysdate where awb_no=#awbNo# and TO_CHAR(awb_date,'DDMONYY')=TO_DATE(#awbDate#,'DDMONYY') and tr_no=#trNo# and hawb_no=#hawbNo# and license=#licenseCopy1#
</update>
<delete id="deleteemanmawbLisence1" parameterClass="cargo.cms.customs.bo.EmanQueryBO" >
DELETE FROM EMAN_LIC where awb_no=#awbNo# and TO_CHAR(awb_date,'DDMONYY')=TO_DATE(#awbDate#,'DDMONYY') and tr_no=#trNo# and hawb_no is null
</delete>
<delete id="deleteemanhawbLisence1" parameterClass="cargo.cms.customs.bo.EmanQueryBO" >
DELETE FROM EMAN_LIC where awb_no=#awbNo# and TO_CHAR(awb_date,'DDMONYY')=TO_DATE(#awbDate#,'DDMONYY') and tr_no=#trNo# and hawb_no=#hawbNo# 
</delete>
<delete id="deleteLiclist" parameterClass="cargo.cms.customs.bo.EmanQueryBO" >
DELETE FROM EMAN_LIC where awb_no=#awbNo# and TO_CHAR(awb_date,'DDMONYY')=TO_DATE(#awbDate#,'DDMONYY') and tr_no=#trNo# and hawb_no=#hawbNo# 
</delete>
<delete id="deleteHawbList" parameterClass="cargo.cms.customs.bo.EmanQueryBO" >
delete from eman_hawb where AWB_NO=#awbNo# and TO_CHAR(awb_date,'DDMONYY')=TO_DATE(#awbDate#,'DDMONYY') and HAWB_NO=#hawbNo# and TR_NO=#trNo#
</delete>
<update id="updateHawblist" parameterClass="cargo.cms.customs.bo.EmanQueryBO" >
update eman_hawb set FLG_DEL='Y' where AWB_NO=#awbNo# and TO_CHAR(awb_date,'DDMONYY')=TO_DATE(#awbDate#,'DDMONYY') and HAWB_NO=#hawbNo# and TR_NO=#trNo#
</update>
<select id="chkHawbdataExist" parameterClass="cargo.cms.customs.bo.EmanQueryBO" resultClass="java.lang.Integer">
select count(1) from EMAN_HAWB where FLT_TYPE=#fltType# and FLT_KEY=#fltNo# and FLT_DATE=TO_DATE(#fltDate#,'DDMONYY') and HAWB_NO=#hawbNo# and TR_NO=#trNo#
</select>
<select id="chkMawbdataExist" parameterClass="cargo.cms.customs.bo.EmanQueryBO" resultClass="java.lang.String">
select to_char(awb_date,'DDMONYY') from EMAN_MST_DTL where awb_no=#awbNo#
</select>
<select id="chkMawbdataExist1" parameterClass="cargo.cms.customs.bo.EmanQueryBO" resultClass="java.lang.Integer">
select count(*) from EMAN_SHP ES
join EMAN_MST_DTL EMD
on emd.awb_no=es.awb_no
where es.flt_key=#fltNo#
and to_char(es.flt_date, 'DDMONYY') = #fltDate#
and es.awb_no=#awbNo#
</select>
<select id="validateOrigineman" parameterClass="java.lang.String" resultClass="java.lang.Integer">
SELECT COUNT(CODE) FROM MAST_ARPT WHERE UPPER(CODE)=UPPER(#origin#)
</select>
<select id="validateDestinationeman" parameterClass="java.lang.String" resultClass="java.lang.Integer">
SELECT COUNT(CODE) FROM MAST_ARPT WHERE UPPER(CODE)=UPPER(#dest#)
</select>
<delete id="deleteAwblist" parameterClass="cargo.cms.customs.bo.EmanQueryBO" >
delete from EMAN_MST_DTL where AWB_NO=#awbNo# and TO_CHAR(awb_date,'DDMONYY')=TO_DATE(#awbDate#,'DDMONYY') and awb_type=#awbType#
</delete>

<update id="updateAwblist" parameterClass="cargo.cms.customs.bo.EmanQueryBO" >
update EMAN_SHP set FLG_DEL='Y', TR_TYPE=#trtype# where AWB_NO=#awbNo# and TO_CHAR(awb_date,'DDMONYY')=TO_DATE(#awbDate#,'DDMONYY')
	<isNotEmpty property="trNo" prepend="AND">
  		tr_no=#trNo#
	</isNotEmpty> 
</update>
<update id="updateAwblist1" parameterClass="cargo.cms.customs.bo.EmanQueryBO" >
update EMAN_SHP set FLG_CONSOL='N' where AWB_NO=#awbNo# and TO_CHAR(awb_date,'DDMONYY')=TO_DATE(#awbDate#,'DDMONYY')
	<isNotEmpty property="trNo" prepend="AND">
  		tr_no=#trNo#
	</isNotEmpty>  
</update>
<update id="updEmanFltNilInd" parameterClass="java.lang.String">
	update eman_flt set nil_cargo_yn='N', tr_type='' where tr_no=#trNo#
</update>

<select id="validateFlightforEman" parameterClass="java.lang.String" resultClass="java.lang.Integer">
SELECT count(flt_key) from flt_opr where flt_key=#fltNo#
</select>
<parameterMap id="emanSubmitMap" class="map" >
		<parameter property="RESULT"  jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
		<parameter property="FLTTYPE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="FLTKEY"  jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="FLTDATE" jdbcType="VARCHAR"    javaType="java.lang.String" mode="IN"/>		
		<parameter property="USERID"  jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="TRNO"    jdbcType="VARCHAR"    javaType="java.lang.String" mode="IN"/>
		<parameter property="UMRNO"   jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>	
		<parameter property="FLTSFXREQD"   jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		</parameterMap>
<procedure id="submitFlightStatus" parameterMap="emanSubmitMap" >
		{? = call PKG_CST_EMAN.SUBMIT_EMAN(?,?,?,?,?,?,?)}
</procedure>
	<select id="validOutboundFlightBetweenEman" parameterClass="java.util.HashMap"  resultClass="java.lang.Integer">
		select count(*) from EMAN_FLT where FLT_KEY=#flightCarrier# and FLT_DATE between to_date(#fromDate#,'DDMONYY HH24MI') and to_date(#toDate#,'DDMONYY HH24MI') and FLT_TYPE='E'
	</select>
	<select id="validInboundFlightBetweenEman" parameterClass="java.util.HashMap"  resultClass="java.lang.Integer">
		select count(*) from EMAN_FLT where FLT_KEY=#flightCarrier# and FLT_DATE between to_date(#fromDate#,'DDMONYY HH24MI') and to_date(#toDate#,'DDMONYY HH24MI') and FLT_TYPE='I'
	</select>
	<select id="validateagentforEman" parameterClass="java.lang.String"
		resultClass="java.lang.Integer">
		SELECT count(CODE) FROM CUST_COMPANY
		WHERE UPPER(CODE_DESC)
		= UPPER(#agentName#) and AGENT_YN='Y' AND
		ACTIVE = 'Y' AND BLACKLISTED='N'
</select>
<select id="validateEmanforShipper" parameterClass="java.lang.String"
		resultClass="java.lang.Integer">
		SELECT count(CODE) FROM CUST_COMPANY
		WHERE UPPER(CODE_DESC)
		= UPPER(#shipperName#) and SHPR_YN='Y' </select>
<select id="validateEmanforconsignee" parameterClass="java.lang.String"
		resultClass="java.lang.Integer">
		SELECT count(CODE) FROM CUST_COMPANY
		WHERE UPPER(CODE_DESC)
		= UPPER(#cnsigneeName#) and CONS_YN='Y'
</select>
<select id="countAwbOccurences" parameterClass="cargo.cms.customs.bo.EmanSearchBO" resultClass="java.util.HashMap">
	select count(es.awb_no) OCC, STRAGG(STRINGDELIM(es.tr_no,',')) TRNO
	from eman_shp es 
	join eman_flt ef on ef.tr_no = es.tr_no
	where es.awb_no=#mawbPfx# || #mawbSfx#
	and ef.FLT_KEY=#fltNo#
	and trim(ef.FLT_DATE) between TO_DATE(#startDate#,'DDMONYY') and TO_DATE(#endDate#,'DDMONYY')
	and ef.flt_type = #fltType#
</select>
<select id="countHawbOccurences" parameterClass="cargo.cms.customs.bo.EmanSearchBO" resultClass="java.util.HashMap">
	select count(eh.hawb_no) OCC, STRAGG(STRINGDELIM(es.tr_no,',')) TRNO
	from eman_flt ef 
	join eman_shp es on es.tr_no = ef.tr_no and es.awb_no = #mawbPfx# || #mawbSfx#
	join eman_hawb eh on eh.tr_no = es.tr_no and eh.awb_no = es.awb_no and eh.awb_date = es.awb_date
	where ef.FLT_TYPE=#fltType#
	  and ef.FLT_KEY=#fltNo#
	  and trim(ef.FLT_DATE) between TO_DATE(#startDate#,'DDMONYY') and TO_DATE(#endDate#,'DDMONYY')
	  and es.AWB_NO=#mawbPfx# || #mawbSfx#
	  and eh.HAWB_NO=#hawb#
</select>
	<!-- Added by swapneswari:Cargo E-Manifest:Ends -->
	
	<select id="getEmanMailList"  parameterClass="cargo.cms.customs.bo.EmanMailBO"  resultClass="cargo.cms.customs.bo.EmanMailBO">
		SELECT 
			eq.TR_NO as trNo,
            decode(eq.RPLD_DAT,null,'N','Y') as  replied,
            TO_CHAR(eq.CR_DATE,'DDMONYY HH24:MI')as  msgRecvDate,
    		(Select code_desc from mast_code_dtl where code=eq.msg_typ and code_type ='EMAN_MSG_TYPE') as msgType,
    		eq.QRY_REF_NO as queryRefNo,
    		eq.QRY_ITM_NO as queryItemNo,
    		eq.FLT_TYPE as flightType,
    		(select carr_code from flt_opr where flt_key=eq.FLT_KEY and sch_date=eq.FLT_DATE and flt_type=decode(eq.FLT_TYPE,'E','D','I','A',eq.FLT_TYPE)) as flightKey,
    		eq.FLT_KEY as flightNoKey,
    		TO_CHAR(eq.FLT_DATE,'DDMONYY')as  flightDate,
    		decode((eq.FLT_KEY||' / '|| TO_CHAR(eq.FLT_DATE,'DDMONYY')),' / ',null,(eq.FLT_KEY||' / '|| TO_CHAR(eq.FLT_DATE,'DDMONYY'))) flightKeyDate,
    		TO_CHAR(eq.RPLY_DUE_DAT,'DDMONYY')as  replyDueDate,
    		DECODE(eq.FRWRD_TO_AGT,null,'N','N','N','Y') as forwardToAgt,
         	DECODE(eq.RPLY_BY_AGT,null,'N','N','N','Y') as repliedToAgt,
         	eq.CR_DATE 
  	   FROM  EMAN_QRY eq
	   WHERE (eq.FLT_TYPE=#flightType# or eq.FLT_TYPE is null)
		 and eq.msg_typ !='EMAK01'
	     and to_date(to_char(eq.CR_DATE, 'DDMONYY'), 'DDMONYY') between to_date(#msgDateFrom#,'DDMONYY') AND to_date(#msgDateTo#,'DDMONYY')
		<isNotEmpty property="flightNoKey">    
		    <isNotEmpty property="flightDate">
						AND eq.FLT_DATE = #flightDate# 
			</isNotEmpty>
		</isNotEmpty>
		<isNotEmpty property="flightNoKey">
					AND eq.FLT_KEY = #flightNoKey# 
		</isNotEmpty>
		<isEmpty property="flightNoKey">
					<isNotEmpty property="loginCarrier">
				AND	(((SELECT emanFlt.CARR_KEY from EMAN_FLT emanFlt where emanFlt.flt_key=eq.FLT_KEY and emanFlt.FLT_DATE=eq.FLT_DATE and emanFlt.flt_type = eq.FLT_TYPE) = #loginCarrier#)
					OR (SELECT emanFlt.CARR_KEY from EMAN_FLT emanFlt where emanFlt.flt_key=eq.FLT_KEY and emanFlt.FLT_DATE=eq.FLT_DATE and emanflt.flt_type = eq.FLT_TYPE) IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE = #loginCarrier#))
			</isNotEmpty>
		</isEmpty>
		<isNotEmpty property="carrCode">
					AND #carrCode# = (select carr_code from flt_opr where flt_key=eq.FLT_KEY and sch_date=eq.FLT_DATE and flt_type=decode(eq.FLT_TYPE,'E','D','I','A',eq.FLT_TYPE))
		</isNotEmpty>
		<isNotEmpty property="msgType">
					AND eq.MSG_TYP = #msgType# 
		</isNotEmpty>
		<isNotEmpty property="queryRefNo">
					AND eq.QRY_REF_NO = #queryRefNo# 
		</isNotEmpty>
		<isNotEmpty property="replyDueOn">
					AND TO_CHAR(eq.RPLY_DUE_DAT,'DDMONYY') = to_date(#replyDueOn#,'DDMONYY') 
		</isNotEmpty>
		<isEqual property="replied" compareValue="Y" prepend="AND">
       	        eq.RPLD_DAT is not null
       	</isEqual>
       	<isEqual property="replied" compareValue="N" prepend="AND">
       	        eq.RPLD_DAT is null
       	</isEqual>       	
       	<dynamic prepend="ORDER BY ">
            <isNotEmpty property="sortOrder.sortField">
                  $sortOrder.sortField$
            </isNotEmpty>
            <isEmpty property="sortOrder.sortField">
                  eq.QRY_REF_NO DESC,to_number(eq.QRY_ITM_NO) ASC
            </isEmpty>
        </dynamic>           
	</select>
	
	<select id="getEmanMailListCOUNT"  parameterClass="cargo.cms.customs.bo.EmanMailBO"  resultClass="java.lang.Integer">
		SELECT COUNT(*) AS totalRowCount FROM (
		SELECT null FROM  EMAN_QRY eq
	   	WHERE eq.FLT_TYPE=#flightType#
	   	and eq.msg_typ !='EMAK01'
	    and eq.CR_DATE between to_date(#msgDateFrom#,'DDMONYY') AND to_date(#msgDateTo#,'DDMONYY')
	    <isNotEmpty property="flightDate">
					AND eq.FLT_DATE = #flightDate# 
		</isNotEmpty>
		<isNotEmpty property="flightNoKey">
					AND eq.FLT_KEY = #flightNoKey# 
		</isNotEmpty>
		<isEmpty property="flightNoKey">
			<isNotEmpty property="loginCarrier">
		AND	(((SELECT emanFlt.CARR_KEY from EMAN_FLT emanFlt where emanFlt.flt_key=eq.FLT_KEY and emanFlt.FLT_DATE=eq.FLT_DATE and emanFlt.flt_type = eq.FLT_TYPE) = #loginCarrier#)
					OR (SELECT emanFlt.CARR_KEY from EMAN_FLT emanFlt where emanFlt.flt_key=eq.FLT_KEY and emanFlt.FLT_DATE=eq.FLT_DATE and emanflt.flt_type = eq.FLT_TYPE) IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE = #loginCarrier#))
			</isNotEmpty>
		</isEmpty>
		<isNotEmpty property="carrCode">
					AND #carrCode# = (select carr_code from flt_opr where flt_key=eq.FLT_KEY and sch_date=eq.FLT_DATE and flt_type=decode(eq.FLT_TYPE,'E','D','I','A',eq.FLT_TYPE))
		</isNotEmpty>
		<isNotEmpty property="msgType">
					AND eq.MSG_TYP = #msgType# 
		</isNotEmpty>
		<isNotEmpty property="queryRefNo">
					AND eq.QRY_REF_NO = #queryRefNo# 
		</isNotEmpty>
		<isNotEmpty property="replyDueOn">
					AND TO_CHAR(eq.RPLY_DUE_DAT,'DDMONYY') = to_date(#replyDueOn#,'DDMONYY') 
		</isNotEmpty>
		<isEqual property="replied" compareValue="Y" prepend="AND">
       	        eq.RPLD_DAT is not null
       	</isEqual>
       	<isEqual property="replied" compareValue="N" prepend="AND">
       	        eq.RPLD_DAT is null
       	</isEqual>
       		)
    </select>
	
	<select id="getEmanMailRemarks"  parameterClass="cargo.cms.customs.bo.EmanMailBO"  resultClass="java.lang.String">
		SELECT  
        	NVL(RESPONSE,MSG_BY_AGT) as remarks
           FROM  EMAN_QRY 
          WHERE TR_NO =#trNo#
        
	</select>
	<select id="getEmanMailHeaderDetails"  parameterClass="cargo.cms.customs.bo.EmanMailBO"  resultClass="cargo.cms.customs.bo.EmanMailBO">
		SELECT  
        	eq.TR_NO as trNo,
        	(Select code_desc from mast_code_dtl where code=eq.msg_typ and code_type ='EMAN_MSG_TYPE') as msgType,
        	eq.QRY_ITM_NO as queryItemNo,
    		eq.QRY_REF_NO as queryRefNo,
    		eq.OMA_NO AS omaNo,
        	eq.FLT_TYPE as flightType,
        	eq.FLT_KEY as flightNoKey,
        	TO_CHAR(eq.FLT_DATE,'DDMONYY')as  flightDate,
        	eq.MNFST_REF_NO as umrNo,
        	eq.MNFST_REF_VER_NO as manifestVerNo,
        	eq.OIC_NO as oicNo,
        	TO_CHAR(eq.CR_DATE,'DDMONYY HH24:MI') as dateAndTimeOfPre,
        	TO_CHAR(eq.RPLY_DUE_DAT,'DDMONYY')as  replyDueDate,
    		decode(eq.RPLD_DAT,null,'N','Y') as repliedNo,
    		eq.FST_HWB_NO AS fstHwbNo,
        	eq.SECND_HWB_NO AS scndHwbNo,
        	eq.THRD_HWB_NO AS thrdHwbNo,
        	eq.AWB_NO AS awbNo,
        	eq.PRV_QRY_NO AS prevItmNo,
        	eq.PRV_QRY_ITM_NO AS previtmRefNo
  	   FROM  EMAN_QRY eq
  	   where  eq.TR_NO =#trNo#
        
	</select>
	<select id="getEmanMailDetails"  parameterClass="cargo.cms.customs.bo.EmanMailBO"  resultClass="cargo.cms.customs.bo.EmanMailDtlBO">
		SELECT 
		    eq.TR_NO as trNo, 
        	eq.HEADER_INFO as headerInfoBytes,

	    	 case 
	         when eq.msg_typ='EMQU01' then eq.remarks_1 ||' '|| eq.remarks_2 ||' '|| eq.remarks_3 ||' '|| eq.remarks_4 ||' '|| eq.remarks_5
	         when eq.msg_typ='EMOA01' then eq.gen_remarks
	         when eq.msg_typ='EMAK01' then eq.gen_remarks
	         when eq.msg_typ='ERRM01' then eq.error_desc_english
	         end msgContent,
    		
    		eq.FOOTER_INFO as footerInfoBytes,
        	eq.OFFICER_TITILE as govtSignId,
        	eq.OFFICER_NAME as officerName,
        	eq.OFFICE_NAME as officeName,
        	eq.AWB_NO as awbNo,
        	(select TO_CHAR(awb_date,'DDMONYY') from eman_shp where AWB_NO =substr(eq.AWB_NO,1,3)||substr(eq.AWB_NO,5) and tr_no in (select tr_no from eman_subm_dtl where umr_no=eq.mnfst_ref_no)) as awbDate,
        	eq.FRWRD_TO_AGT as forwardToAgt,
        	eq.AGENT_CODE as agentCode,
 			eq.AGENT_NAME as agentName,
        	eq.DOC_REQ as docRequired,
        	eq.MSG_TO_AGT as msgToAgent,
        	eq.MSG_BY_AGT as replyByAgent,
        	eq.RESPONSE as responceToAirline,
        	eq.CARR_CODE as carrier,
        	eq.CARR_NAME as carrierName,
        	EQ.ADDRESS1 ||','||eq.address2 ||','||eq.address3||','||eq.address4 as carrierAdd,
        	eq.officer_name as contOfficerName,
        	eq.officer_titile as contOfficerTitle,
        	EQ.CONT_TEL as contOfficerTelNo, 
        	EQ.OFFICE_NAME as contOfficeName,
        	eq.DEPT_NAME as contDeptName,
        	eq.IMG_TRN_ID transactionId ,
        	DECODE(eq.IMG_TRN_ID,null,'N','Y') docUploaded  ,
        	eq.CONT_PER_NAME as contactPerName,
        	eq.CONT_PER_TELNO as contactPerTel 
  	   	FROM   EMAN_QRY eq
	    WHERE  eq.TR_NO = #trNo#
	</select>
	
	<resultMap class="cargo.cms.afw.ei.core.OutboundMessage" id="fetchGenRMK-result">
		<result property="payload" column="payload" typeHandler="cargo.cms.afw.ei.dao.ObjectToBlobTypeHandler"/>		
	</resultMap>	
	<select id="getGenRmkFromBlobObj" parameterClass="cargo.cms.customs.bo.EmanMailBO"  resultMap="fetchGenRMK-result">
		SELECT GEN_RMK payload FROM EMAN_QRY WHERE TR_NO = #trNo#
	</select>
	
	<select id="getEmainMail_fetchAgentCodeDesc" parameterClass="map" resultClass="cargo.cms.customs.bo.EmanMailDtlBO">
		SELECT
			CODE_DESC as agentName,CODE as agentCode 
		FROM 
			CUST_COMPANY
		WHERE 
			AGENT_YN = 'Y'  AND
			CODE = #code#
			
	</select>
	<select id="getEmainMail_fetchAgentCode" parameterClass="map" resultClass="cargo.cms.customs.bo.EmanMailDtlBO">
		SELECT
			CODE as agentCode,CODE_DESC as agentName
		FROM  
			CUST_COMPANY
		WHERE 
			AGENT_YN = 'Y'  AND
			CODE_DESC = #codeDesc#
	</select>
	<select id="validateAgentCodeEmanMail" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		SELECT count(*) from CUST_COMPANY where CODE= #PARAM#
	</select>
	<select id="validateAgentNameEmanMail" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		SELECT count(*) from CUST_COMPANY where CODE_DESC= #PARAM#
	</select>
	<update id="updateEmanMailAgtDetails" parameterClass="cargo.cms.customs.bo.EmanMailDtlBO" >
 		UPDATE EMAN_QRY SET 
 			   AGENT_CODE   = #agentCode#,
 			   AGENT_NAME   = #agentName#,
 			   DOC_REQ      = #docRequired#,
 			   MSG_TO_AGT   = #msgToAgent#,
 			   RESPONSE     = #responceToAirline#,
 			   FRWRD_TO_AGT = 'Y',
 			   LM_USER_ID   = #crUserId#,
 			   LM_DATE      = sysdate
 			 where tr_no    = #trNo#
 	</update>
 	<select id="EmanMailImpCustClrSeq" resultClass="java.lang.String" parameterClass="map">
 		select CUST_CLR_LST_SEQ.NEXTVAL from dual
 	</select>
 	<update id="saveEmanMailImpCustClr" parameterClass="map" >
 		INSERT INTO 
			IMP_CUST_CLR_LIST
			(TR_NO, AWB_NO, AWB_DATE, FLT_KEY, FLT_DATE, HAWB_NO, CC, CCCL_STATUS, CCCL_UPDATE_BY, CCCL_UPDATE_DATE, 
			CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE,  FLT_TYPE, DOC_RCV, DOC_REQ, CCCL_MSG) 
		VALUES
			(#trNo#, #awbNo#, #awbDate#, #fltKey#, TO_DATE(#fltDate#, 'DDMONYY'), #hawbNo#, #cc#, #ccclStatus#, #userID#, SYSDATE, 
			#userID#, SYSDATE, #userID#, SYSDATE, #fltType#, 'N', 'Y', #message#)
 	</update>
 	<insert id="saveEmanMailImpCustClrDocLst" parameterClass="map">
		INSERT INTO
			IMP_CCCL_DOC_LIST 
			(TR_NO, DOC_NAME, NOT_AVAILABLE, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE)
		VALUES 
			(#trNo#, #docReqd#, 'Y', #userID#, SYSDATE, #userID#, SYSDATE)
	</insert>
 	<update id="saveEmanMailResponse" parameterClass="cargo.cms.customs.bo.EmanMailDtlBO" >
 		UPDATE EMAN_QRY SET 
 			   MSG_TO_AGT   = #msgToAgent#,
 			   RESPONSE     = #responceToAirline#,
 			   FRWRD_TO_AGT = 'N',
 			   RPLD_DAT     = sysdate,
 			   LM_USER_ID   = #crUserId#,
 			   LM_DATE      = sysdate,
 			   CONT_PER_NAME = #contactPerName#,
 			   CONT_PER_TELNO = #contactPerTel# 
 			 where tr_no    = #trNo#
 	</update>
 	<select id="getIdNumberFromEmanCarMst" parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT ID_NUMBER from EMAN_CAR_MAST where CARR_CODE= #PARAM#
	</select>
	
 	<parameterMap id="sendManifestMap" class="map" >
 	    <parameter property="RESULT"     jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
		<parameter property="FLTTYPE" 	 jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="FLTKEY" 	 jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="FLTDATE" 	 jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="USERID" 	 jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="TRNO" 	     jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="UMRNO" 	 jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="FLTSFXREQD"   jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	</parameterMap>
	<procedure id="sendManifestEmanMail" parameterMap="sendManifestMap" >
		   {? = call PKG_CST_EMAN.SUBMIT_EMAN(?,?,?,?,?,?,?)}
	</procedure>
<!-- Added by Yugandhar E-Man Mail Processing :Ends -->
	<select id="chkFltsfxExistsforEMAN" parameterClass="java.lang.String"  resultClass="java.lang.Integer">
		select count(1) from eman_flt where umr_no=#PARAM# and no_flt_sfx='Y'
	</select>
	<insert id="insertEmanGovtQry" parameterClass="cargo.cms.customs.bo.EMANMailProcessingBO" >
			Insert into EMAN_QRY (FLT_TYPE,FLT_KEY,FLT_DATE,MNFST_REF_NO,MNFST_REF_VER_NO,RPLY_DUE_DAT,OFFICE_NAME,DEPT_NAME,OFFICER_NAME,OFFICER_TITILE,CONT_TEL,HEADER_INFO,FOOTER_INFO,
			FST_HWB_NO,SECND_HWB_NO,THRD_HWB_NO,CONIGNMENT_NO,PRV_QRY_NO,PRV_QRY_ITM_NO,REMARKS_1,REMARKS_2,REMARKS_3,REMARKS_4,REMARKS_5,TR_NO,CR_DATE,LM_DATE,MSG_TYP,CR_USER_ID,LM_USER_ID,QRY_REF_NO,AWB_NO, CARR_CODE, CARR_NAME,
			ADDRESS1,address2,address3,address4,QRY_ITM_NO)
			values
			(#flightType#,#flightKey#,#flightDate#,#umrNo#,#manifestVerNo#,#replyDueDate#,#contOfficeName#,#contDeptName#,#contOfficerName#,#contOfficerTitle#,#contOfficerTelNo#,
			#headerInfoBytes#,#footerInfoBytes#,#firstHawbNo#,#secondHawbNo#,#thirdHawbNo#,#consgnItmNo#,#prevQryRefNo#,#prevQryItemNo#,#dtlRmk1#,#dtlRmk2#,#dtlRmk3#,#dtlRmk4#,#dtlRmk5#,EMAN_MAIL_SEQ.nextVal,sysdate,sysdate,#msgType#,'SYSTEM','SYSTEM',#queryRefNo#,#awbNo#,#carrCode#,#carrierName#,
			#addr1#,#addr2#,#addr3#,#addr4#,#queryItemNo#)
	</insert>
	<insert id="insertOMAQry" parameterClass="cargo.cms.customs.bo.EMANMailProcessingBO" >
					Insert into EMAN_QRY (FLT_KEY,FLT_DATE,MNFST_REF_NO,RPLY_DUE_DAT,OFFICE_NAME,DEPT_NAME,OFFICER_NAME,OFFICER_TITILE,CONT_TEL,
							GEN_REMARKS,TR_NO,CR_DATE,LM_DATE,MSG_TYP,FLT_TYPE,CR_USER_ID,LM_USER_ID,CARR_CODE,CARR_NAME, ADDRESS1, ADDRESS2, ADDRESS3, ADDRESS4,GEN_RMK,OMA_NO)
                      values
                      (#flightKey#,#flightDate#,#omaNo#,#replyDueDate#,#contOfficeName#,#contDeptName#,#contOfficerName#,#contOfficerTitle#,#contOfficerTelNo#,
                      #remarks#,EMAN_MAIL_SEQ.nextVal,sysdate,sysdate,#msgType#,#flightType#,'SYSTEM','SYSTEM',#carrCode#,#carrierName#,#addr1#,#addr2#,#addr3#,#addr4#,#genRmkBlob,handler=cargo.cms.afw.ei.dao.ObjectToBlobTypeHandler#,#omaNo#)
	</insert>
	<update id="updateHseFLg" parameterClass="cargo.cms.customs.bo.EmanQueryBO">
		update eman_shp set flg_consol=#cnslInd#,FLG_UPD=decode((select count(flt_key) from eman_ctrl where tr_no=#trNo# and (manifest_no!='1' or (manifest_no='1' and status='Confirmed'))),0,'N','Y') where AWB_NO=#awbNo# and  to_char(awb_date,'DDMONYY')=To_date(#awbDate#,'DDMONYY') 
		<isNotEmpty property="trNo" prepend="AND">
	  		tr_no=#trNo#
		</isNotEmpty>
	</update>
	<select id="chkHawbdataExistCount" parameterClass="cargo.cms.customs.bo.EmanQueryBO" resultClass="java.lang.Integer">
		select count(1) from EMAN_HAWB where FLT_TYPE=#fltType# and FLT_KEY=#fltNo# and FLT_DATE=TO_DATE(#fltDate#,'DDMONYY') and AWB_NO=#awbNo# and to_char(awb_date,'DDMONYY')=To_date(#awbDate#,'DDMONYY') 
	</select>
	
	<select id="getuldListForDCCargo" parameterClass="map" resultClass="cargo.cms.customs.bo.DutyCdtyBO">
		select uld_key as uldNo, lsp_no as lsp from awb_inventory where awb_no=#awbNo# and awb_date = to_date(#awbDate#,'DDMONYY')
	</select>
	<delete id="deleteOldDcCodeRec" parameterClass="java.util.HashMap">
	delete from cst_code_dtl where NVL(flt_type,'*') = nvl(#fltType#,'*')
                               AND NVL(flt_key,'*')    = nvl(#fltKey#,'*')
                               AND NVL(flt_date,nvl(#fltDate#,'10JAN01'))   = nvl(#fltDate#,'10JAN01')
                               AND awb_no     = #awbNo#
                               AND awb_date   = #awbDate#
                               AND hawb_no    = #hawbNo#
                               AND dut_code   = #dcCode#
	</delete>
	<update id="updateDutCodeInPermitTable" parameterClass="java.util.HashMap" >
	update CST_PERMIT_DTL set dut_code=#newDcCode# where AWB_NO=#awbNo# AND PMT_NO=#permitNo# AND HAWB_NO=#hawbNo#
	</update>
	<delete id="deleteDataIncstdcdtl" parameterClass="java.util.HashMap">
	delete from cst_dc_dtl where NVL(flt_key,'*')=nvl(#fltKey#,'*') AND NVL(flt_date,NVL(#fltDate#,'10JAN01'))=nvl(#fltDate#,'10JAN01')  AND HAWB_NO=#hawbNo# AND AWB_NO=#awbNo# AND AWB_DATE=#awbDate#
	</delete>
	<delete id="deleteDataIncstcodedtl" parameterClass="java.util.HashMap">
	delete from cst_code_dtl where NVL(flt_key,'*')=nvl(#fltKey#,'*') AND NVL(flt_date,NVL(#fltDate#,'10JAN01'))=nvl(#fltDate#,'10JAN01') AND FLT_TYPE=#fltType# AND HAWB_NO=#hawbNo# AND AWB_NO=#awbNo# AND AWB_DATE=#awbDate#
	</delete>
	<delete id="deleteDataIncstpermit" parameterClass="java.util.HashMap">
	delete from cst_permit where awb_no=#awbNo# and hawb_no=#hawbNo#
	</delete>
	<delete id="deleteDataIncstpermitdtl" parameterClass="java.util.HashMap">
	delete from cst_permit_dtl where awb_no=#awbNo# and hawb_no=#hawbNo# and NVL(flt_key,'*')=nvl(#fltKey#,'*') and NVL(flt_date,NVL(#fltDate#,'10JAN01'))=nvl(#fltDate#,'10JAN01') AND FLT_TYPE=#fltType#
	</delete>
	<delete id="deleteDataIncstepadtl" parameterClass="java.util.HashMap">
	delete from cst_epa_dtl where NVL(flt_key,'*')=nvl(#fltKey#,'*') and NVL(flt_date,NVL(#fltDate#,'10JAN01'))=nvl(#fltDate#,'10JAN01') AND FLT_TYPE=#fltType# and awb_no=#awbNo# and hawb_no=#hawbNo#
	</delete>
	<delete id="deleteDataIncstrcvdtl" parameterClass="java.util.HashMap">
	delete from cst_rcv_dtl where NVL(flt_key,'*')=nvl(#fltKey#,'*') and NVL(flt_date,NVL(#fltDate#,'10JAN01'))=nvl(#fltDate#,'10JAN01') AND FLT_TYPE=#fltType# and awb_no=#awbNo# and hawb_no=#hawbNo#
	</delete>
	<delete id="deleteDataIncstrlsdtl" parameterClass="java.util.HashMap">
	delete from cst_rls_dtl where NVL(flt_key,'*')=nvl(#fltKey#,'*') and NVL(flt_date,NVL(#fltDate#,'10JAN01'))=nvl(#fltDate#,'10JAN01') AND FLT_TYPE=#fltType# and awb_no=#awbNo# and hawb_no=#hawbNo#
	</delete>
	<!--REAL TIME MONITORING STARTS -->
	<select id="RTMCheckList" parameterClass="map" resultClass="cargo.cms.customs.bo.RealTimeMonitoringBO">
		select CNFG_TYP as cnfgType from MAST_SLA_CNFG where CNFG_TYP=#cnfgType# and CGO_AFCT_TYP=#fltType# and CATEGORY=#category#
	</select>
	<select id="RTMQueryCriteriaList" parameterClass="cargo.cms.customs.bo.RealTimeMonitoringBO" resultClass="cargo.cms.customs.bo.RealTimeMonitoringBO">
		select t1.CNFG_TYP as cnfgType,t1.CGO_AFCT_TYP as fltType,t1.CATEGORY as category from MAST_SLA_CNFG t1 where 1=1 
		<isNotEmpty property="cnfgType"> 
				AND t1.CNFG_TYP =  #cnfgType#
			</isNotEmpty>
			<isNotEmpty property="fltType"> 
				AND t1.CGO_AFCT_TYP =  #fltType#
			</isNotEmpty>
			<isNotEmpty property="category"> 
				AND t1.CATEGORY =  #category#
			</isNotEmpty>
	</select>
	<select id="fetchRTMDetail" parameterClass="cargo.cms.customs.bo.RealTimeMonitoringBO" resultClass="cargo.cms.customs.bo.RealTimeMonitoringBO">
	select a.PROC_TIM prcTime,
    a.WORK_COMP workComplete,DOC_LINE_NO docLineNo,a.tr_no trNo from mast_sla_cnfg_dtl a,mast_sla_cnfg b where
    a.tr_no=b.tr_no
    <isNotEmpty property="cnfgType"> 
				AND b.CNFG_TYP =  #cnfgType#
			</isNotEmpty>
			<isNotEmpty property="fltType"> 
				AND b.CGO_AFCT_TYP =  #fltType#
			</isNotEmpty>
			<isNotEmpty property="category"> 
				AND b.CATEGORY =  #category#
			</isNotEmpty>
			</select>
	<select id="RTMQueryCriteriaList1" parameterClass="cargo.cms.customs.bo.RealTimeMonitoringBO" resultClass="cargo.cms.customs.bo.RealTimeMonitoringBO">
		select t1.CNFG_TYP as cnfgType,t1.CGO_AFCT_TYP as fltType,t1.tr_no trNo,t1.CATEGORY as category from MAST_SLA_CNFG t1 where rownum=1 
			<isNotEmpty property="cnfgType"> 
				AND t1.CNFG_TYP =  #cnfgType#
			</isNotEmpty>
			<isNotEmpty property="fltType"> 
				AND t1.CGO_AFCT_TYP =  #fltType#
			</isNotEmpty>
			<isNotEmpty property="category"> 
				AND t1.CATEGORY =  #category#
			</isNotEmpty>
			<isEmpty property="fltType"> 
				AND t1.CGO_AFCT_TYP =  'A'
			</isEmpty>
			<isEmpty property="category"> 
				AND t1.CATEGORY =  'ALL'
			</isEmpty>
			
	</select>
	<select id="RTMQueryCriteriaDetails" parameterClass="cargo.cms.customs.bo.RealTimeMonitoringBO" resultClass="cargo.cms.customs.bo.RealTimeMonitoringBO">
		select PROC_TIM as prcTime,WORK_COMP as workComplete from MAST_SLA_CNFG_DTL where  CNFG_TYP=#cnfgType# and CGO_AFCT_TYP=#fltType# and CATEGORY=#category#
	</select>
	
	<insert id="RTMinsertCgnfDtl" parameterClass="cargo.cms.customs.bo.RealTimeMonitoringBO" >
		INSERT INTO 
			MAST_SLA_CNFG_DTL
			(TR_NO, PROC_TIM, WORK_COMP, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE,DOC_LINE_NO) 
		VALUES
			(#trNo#, #prcTime#, #workComplete#,#userID#, SYSDATE, 
			#userID#, SYSDATE,MAST_SLA_CNFG_DTL_SEQ.NEXTVAL)
	</insert>
	
	<insert id="RTMinsertMastCgnfHeader" parameterClass="cargo.cms.customs.bo.RealTimeMonitoringBO">
		INSERT INTO 
			MAST_SLA_CNFG
			(TR_NO,CNFG_TYP, CGO_AFCT_TYP, CATEGORY,CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE) 
		VALUES
			(#trNo#, #cnfgType#, #fltType#,#category#,#userID#, SYSDATE, 
			#userID#, SYSDATE)
	</insert>
	
	<update id="RTMupdateCnfgDetails" parameterClass="cargo.cms.customs.bo.RealTimeMonitoringBO">
		update MAST_SLA_CNFG_DTL set LM_USER_ID=#userID#,LM_DATE=sysdate,PROC_TIM=#prcTime#,WORK_COMP=#workComplete# where 
		DOC_LINE_NO=#docLineNo# and TR_NO=#trNo# 
	</update>
	 <select id="sqlRTMCheckDuplicateVal" parameterClass="cargo.cms.customs.bo.RealTimeMonitoringBO" resultClass="java.lang.Integer">
	 	select count(*) from MAST_SLA_CNFG_DTL where tr_no=#trNo# and (PROC_TIM=#prcTime# OR WORK_COMP=#workComplete#)
	 </select>
	 <delete id="RTMdeleteCnfgDetails" parameterClass="cargo.cms.customs.bo.RealTimeMonitoringBO">
	 	delete from MAST_SLA_CNFG_DTL where  DOC_LINE_NO=#docLineNo# and TR_NO=#trNo# 
	</delete>
	
	<delete id="RTMdeleteAllCnfgDetails" parameterClass="cargo.cms.customs.bo.RealTimeMonitoringBO">
	 	delete from MAST_SLA_CNFG_DTL where  TR_NO=#trNo# 
	</delete>
	
	<delete id="RTMdeleteHdrCnfgDetails" parameterClass="cargo.cms.customs.bo.RealTimeMonitoringBO">
	 	delete from MAST_SLA_CNFG where  TR_NO=#trNo# 
	</delete>
	
	<update id="emptyDocUpdate" parameterClass="cargo.cms.customs.bo.RealTimeMonitoringBO">
		INSERT INTO 
			MAST_SLA_CNFG_DTL
			(TR_NO, PROC_TIM, WORK_COMP, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE,DOC_LINE_NO) 
		VALUES
			(#trNo#, #prcTime#, #workComplete#,#userID#, SYSDATE, 
			#userID#, SYSDATE,#docLineNo#)
	</update>
	<select id="RTMcheckTrNo" parameterClass="cargo.cms.customs.bo.RealTimeMonitoringBO" resultClass="java.lang.String">
		select count(DOC_LINE_NO) from mast_sla_cnfg_dtl where
  		 CNFG_TYP=#cnfgType# and CGO_AFCT_TYP=#fltType# and CATEGORY=#category# and tr_no=#trNo# 
	</select>
	<select id="RTMCnfgType" parameterClass="cargo.cms.customs.bo.RealTimeMonitoringBO" resultClass="cargo.cms.customs.bo.RealTimeMonitoringBO">
		select code as cnfgType from MAST_CODE_DTL where CODE_TYPE='SLA_CONFIG_TYPE' and code_desc=#cnfgTypedesc#
	</select>
	<select id="RTMfltType" parameterClass="cargo.cms.customs.bo.RealTimeMonitoringBO" resultClass="cargo.cms.customs.bo.RealTimeMonitoringBO">
		select code as fltType from MAST_CODE_DTL where CODE_TYPE='SLA_FLT_TYPE' and code_desc=#fltTypedesc#
	</select>
	<select id="RTMcategory" parameterClass="cargo.cms.customs.bo.RealTimeMonitoringBO" resultClass="cargo.cms.customs.bo.RealTimeMonitoringBO">
		select code  as category from MAST_CODE_DTL where CODE_TYPE='SLA_CAT' and code_desc=#categorydesc#
	</select>
	<select id="RTMCnfgTypeDesc" parameterClass="cargo.cms.customs.bo.RealTimeMonitoringBO" resultClass="cargo.cms.customs.bo.RealTimeMonitoringBO">
		select code_desc as cnfgType from MAST_CODE_DTL where CODE_TYPE='SLA_CONFIG_TYPE' and code=#cnfgTypedesc#
	</select>
	<select id="RTMfltTypeDesc" parameterClass="cargo.cms.customs.bo.RealTimeMonitoringBO" resultClass="cargo.cms.customs.bo.RealTimeMonitoringBO">
		select code_desc as fltType from MAST_CODE_DTL where CODE_TYPE='SLA_FLT_TYPE' and code=#fltTypedesc#
	</select>
	<select id="RTMcategoryDesc" parameterClass="cargo.cms.customs.bo.RealTimeMonitoringBO" resultClass="cargo.cms.customs.bo.RealTimeMonitoringBO">
		select code_desc  as category from MAST_CODE_DTL where CODE_TYPE='SLA_CAT' and code=#categorydesc#
	</select>
	<select id="createTrNoSeq" parameterClass="cargo.cms.customs.bo.RealTimeMonitoringBO" resultClass="java.lang.Integer">
		SELECT MAST_SLA_CNFG_SEQ.NEXTVAL FROM DUAL
	</select>
	<!-- REAL TIME MONITORING ENDS -->
	<select id="fetchCCCodeListforULDLockUpd" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		select code from mast_constraint_code where code in (
		select b.cc_code from awb_inventory a,V_CST_IMP_CC_CODE b where a.uld_key in (
		select uld_key from awb_inventory c where c.awb_no=#AWB_NO# and c.awb_date= TO_DATE(#AWB_DATE#,'DDMONYY'))
		and a.awb_no!=#AWB_NO# and a.flt_key=b.flt_key and a.flt_date=b.flt_date and a.awb_no=b.awb_no) and lock_ind='Y'
	</select>
	<select id="fetchCCCodeListforCSDLockUpd" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		select code from mast_constraint_code where code in (
		select b.cc_code from awb_inventory a,V_CST_IMP_CC_CODE b where a.lsp_no in (
		select lsp_no from awb_inventory c where c.awb_no=#AWB_NO# and c.awb_date= TO_DATE(#AWB_DATE#,'DDMONYY'))
		and a.awb_no!=#AWB_NO# and a.flt_key=b.flt_key and a.flt_date=b.flt_date and a.awb_no=b.awb_no) and lock_ind='Y'
	</select>
	<select id="getUniqueCCodeforLock" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT CC_CODE FROM V_CST_IMP_CC_CODE_AWB WHERE FLT_KEY=#FLT_KEY# AND FLT_DATE=#FLT_DATE# AND AWB_NO=#AWB_NO#
	</select>
	<select id = "getAwbTrNoEventDetailsList"  parameterClass="cargo.cms.customs.bo.AWBEventSearchBO" resultClass="cargo.cms.customs.bo.AWBEventLstBO">
		SELECT TR_NO trNumber FROM eman_shp 
		WHERE awb_no=#awbNo# and awb_date=#awbDate# 
		ORDER BY TR_NO DESC
	</select>
 	<select id = "selectFltDtlsCount" parameterClass="cargo.cms.customs.bo.DutyCdtyBO" resultClass="java.lang.Integer">
  		select count(1) from CST_CODE_DTL  where flt_type = #shipmentType# and
			awb_no = #awbNo# and
			awb_date = to_date(#awbDate#,'DDMONYY') and
			hawb_no = #hawbNo#
			and DUT_CODE = #dcCode#
			<isNotEmpty property="fltKey">
		    	and FLT_KEY =#fltKey#  and FLT_DATE = to_date(#fltDateDisplay#,'DDMONYY')
		    </isNotEmpty>
   </select>   
   
   <select id="fetchCCCodeListforULDLockUpdWO" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		select count(1) from mast_constraint_code where code in (
		select b.cc_code from awb_inventory a,V_CST_IMP_CC_CODE b where a.uld_key in (
		select uld_key from awb_inventory c where c.awb_no=#AWB_NO# and c.awb_date= TO_DATE(#AWB_DATE#,'DDMONYY')) 
		and a.flt_key=b.flt_key and a.flt_date=b.flt_date and a.awb_no=b.awb_no) and lock_ind='Y'
	</select>
	<select id="fetchCCCodeListforCSDLockUpdWO" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		select  count(1) from mast_constraint_code where code in (
		select b.cc_code from awb_inventory a,V_CST_IMP_CC_CODE b where a.lsp_no in (
		select lsp_no from awb_inventory c where c.awb_no=#AWB_NO# and c.awb_date= TO_DATE(#AWB_DATE#,'DDMONYY')) 
		and a.flt_key=b.flt_key and a.flt_date=b.flt_date and a.awb_no=b.awb_no) and lock_ind='Y'
	</select>
	<select id="getSplCodesForSHCLock" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
   		 SELECT COUNT(1) 
		FROM AWB A 
		JOIN MAST_SPL_HAND_CODE M
		ON (M.CODE =A.SPL_CODE1	OR M.CODE =A.SPL_CODE2 OR M.CODE =A.SPL_CODE3 OR M.CODE =A.SPL_CODE4
		OR M.CODE =A.SPL_CODE5 	OR M.CODE =A.SPL_CODE6 OR M.CODE =A.SPL_CODE7 OR M.CODE =A.SPL_CODE8
		OR M.CODE =A.SPL_CODE9) AND M.lock_yn='Y' WHERE A.AWB_NO =#AWB_NO# AND A.AWB_DATE =TO_DATE(#AWB_DATE#,'DDMONYY')
   	</select>
   	<select id ="emanQuerySearchforSentManf" parameterClass="cargo.cms.customs.bo.EmanQueryBO" resultClass="cargo.cms.customs.bo.EmanQueryBO">
	   	select 
			a.TR_NO as trNo,
			a.FLT_TYPE fltType,
			a.FLT_KEY fltNo,
			TO_CHAR(a.FLT_DATE,'DDMONYY') fltDate,
			a.UMR_NO umrNo,
			decode(a.UMR_NO,null,null,b.VER_NO) verNo,
			decode(a.UMR_NO,null,null,b.STATUS) status,
			a.nil_cargo_yn nilCargo 
			from EMAN_FLT a 
			left join EMAN_CTRL b on a.FLT_TYPE=b.FLT_TYPE and a.FLT_KEY=b.FLT_KEY and a.FLT_DATE=b.FLT_DATE and a.TR_NO=b.TR_NO
			where a.FLT_TYPE=#fltType#
			And A.Flt_Date= #fltDate#
	    AND A.FLT_KEY =#fltNo# AND ROWNUM=1
    	order by a.cr_date desc
   	</select>
   	<update id="saveRelIndinCSTAWB" parameterClass="cargo.cms.customs.bo.IntCnsgnDetailsBO">
   		UPDATE CST_AWB SET REL_IND=#priorityCode#,LM_USER_ID=nvl(#userID#,'SYSUSER'),LM_DATE=SYSDATE WHERE AWB_NO = #awbNo# AND FLT_KEY=#flightKey# AND FLT_DATE=#flightDate# 
   	</update>
   	
   	
   	<update id="saveReadyToSubmitCSTAWB" parameterClass="cargo.cms.customs.bo.IntCnsgnDetailsBO">
   		UPDATE CST_AWB SET RDY_YN= 'Y' ,LM_USER_ID=nvl(#userID#,'SYSUSER'),LM_DATE=SYSDATE WHERE AWB_NO = #awbNo# AND FLT_KEY=#flightKey# AND FLT_DATE=#flightDate# 
   	</update>
   	
   	<update id="saveReadyToSubmitFlight" parameterClass="cargo.cms.customs.bo.FlightListBO">
   		UPDATE FLT_OPR_EVENTS SET RDY_SUBMIT_YN = 'Y' , RDY_SUBMIT_DATE = SYSDATE , LM_USER_ID=nvl(#userID#,'SYSUSER'), LM_DATE=SYSDATE , tr_type = 'RDYFS'  WHERE FLT_KEY=#flightKey# AND SCH_DATE=#flightDate# AND FLT_TYPE='A' 
   	</update>
   	
   	<update id="saveRevertRdyToSubmitFlight" parameterClass="cargo.cms.customs.bo.FlightListBO">
   		UPDATE FLT_OPR_EVENTS SET RDY_SUBMIT_YN = 'N' , RDY_SUBMIT_DATE = '' , LM_USER_ID=nvl(#userID#,'SYSUSER'), LM_DATE=SYSDATE, tr_type = 'RVRFS' WHERE FLT_KEY=#flightKey# AND SCH_DATE=#flightDate# AND FLT_TYPE='A'
   	</update>
   	
   	<update id="saveRevertRdyToSubmitAWB" parameterClass="cargo.cms.customs.bo.FlightListBO">
   		UPDATE CST_AWB SET RDY_YN= 'N' ,LM_USER_ID=nvl(#userID#,'SYSUSER'),LM_DATE=SYSDATE WHERE FLT_KEY=#flightKey# AND FLT_DATE=#flightDate# 
   	</update>
   	
   	<select id="fetchNoFltSfxVal"  parameterClass="cargo.cms.customs.bo.FlightListBO" resultClass="java.lang.String">
   		SELECT no_flt_sfx
		FROM
		  (SELECT no_flt_sfx
		  FROM cst_subm c,
		    flt_opr f
		  WHERE 
		  C.FLT_KEY  = NVL(F.STFS_FLT_KEY,F.FLT_KEY)
		  AND C.FLT_DATE   = NVL(F.STFS_FLT_DATE,F.SCH_DATE)
		  AND C.FLT_TYPE   =DECODE(F.FLT_TYPE,'A','I','D','E','I')
		  AND F.FLT_KEY    = #flightKey#
			AND F.SCH_DATE   = TO_DATE(#flightDate#, 'DDMONYY')
			AND C.FLT_TYPE   = DECODE(#flightType#,'A','I','S','I','N','E','I')
		  AND c.REC_TYPE                    = 'INT'
		  ORDER BY c.subm_date DESC
		  )
		WHERE rownum=1
	</select>
		
	<parameterMap id="cstSubmissionCheckMap" class="java.util.HashMap">
		<parameter property="RESULT" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT" />
		<parameter property="fltKey" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" />
		<parameter property="fltDate" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" />
		<parameter property="awbNo" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" />
		<parameter property="awbDate" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" />
	</parameterMap>
		
	<procedure id="cstSubmissionCheck" parameterMap="cstSubmissionCheckMap">
		{ ? = call PKG_CST_INIT.FUN_VALIDATE_AWB_SUBM(?, ?, ?, ?) }
	</procedure>
	
	<select id ="emanAutoJobList" parameterClass="java.lang.String" resultClass="cargo.cms.customs.bo.EmanQueryBO">
		<![CDATA[
		with joblist as (
		  SELECT a.flt_key,a.sch_date,b.flt_type
		  FROM flt_opr a
		  join flt_opr_events c
  		  on a.TR_NO = c.tr_no
  		  and c.flt_cls_yn ='Y'
		  JOIN MAST_CARR_FLT_TYPE_EMAN b
		  ON b.carr_code = a.carr_code
		  AND DECODE(b.flt_type,'I','A','E','D')=a.flt_type
		  and (TO_DATE(TO_CHAR(a.ACT_DATE,'DDMONYY')  || LPAD(a.ACT_TIME,4,'0'),'DDMONYYHH24MI') <= Sysdate - (SELECT RULE_VALUE FROM CMSRULES WHERE RULE_CODE = 'FLT_SD_EMAN_AUTO_SUBMIT'))
		)
		select 
			a.TR_NO as trNo,
			a.FLT_TYPE fltType,
			a.FLT_KEY fltNo,
			TO_CHAR(a.FLT_DATE,'DDMONYY') fltDate,
			a.FLT_KEY||' / '|| TO_CHAR(a.FLT_DATE,'DDMONYY') fltNoDate,
			(substr(a.ATA_ETD_TIME,0,2)||':'||substr(a.ATA_ETD_TIME,3)) ata,
			a.UMR_NO umrNo,
			(select count(*) from eman_lic where tr_no= a.tr_no AND hawb_no IS NULL) noLic,
			decode(a.UMR_NO,null,null,b.VER_NO) verNo,
			decode(a.UMR_NO,null,null,b.STATUS) status,
			pkg_cst_eman.get_MAWB_data_status(a.FLT_TYPE,a.FLT_Key,TO_CHAR(a.FLT_DATE,'DDMONYY')) as mawbsts,
			TO_CHAR(a.LST_SUB_DATE,'DDMONYY') subDate,
			a.nil_cargo_yn nilCargo,
			TO_CHAR(a.FLT_DATE,'DDMONYY') actDate ,
			NVL(a.no_flt_sfx,'N') checkFltSfxReqd 
			from EMAN_FLT a
			left join EMAN_CTRL b on a.FLT_TYPE=b.FLT_TYPE and a.FLT_KEY=b.FLT_KEY and a.FLT_DATE=b.FLT_DATE and a.TR_NO=b.TR_NO 
			join joblist c on a.flt_key=c.flt_key and a.flt_date=c.sch_date and a.FLT_TYPE=c.flt_type
			WHERE not exists(select null from eman_ctrl ec where ec.tr_no = a.tr_no)
			and a.nil_cargo_yn is not null
		   	]]>
	</select>
	
	<insert id="saveTempSubmissionHST" parameterClass="cargo.cms.customs.bo.FlightListBO" >
		 INSERT INTO CST_SUBMIT_TEMP(FLT_KEY,FLT_DATE,VER_NO,CST_TYPE,SUBM_TYPE,AWB_NO,SUBM_VER_NO) 
		 VALUES (NVL(#vesselflightKey#,#flightKey#), NVL(#vesselflightDate#,#flightDate#),
		 (Select (nvl(max(ver_no),0) + 1 ) from cst_subm where Flt_Key = NVL(#vesselflightKey#,#flightKey#) AND flt_date = to_date(NVL(#vesselflightDate#,#flightDate#),'DDMONYY')  and flt_type= DECODE(#flightType#,'A','I','D','E','N','E','S','I','I') and rec_type = 'HST' and send_status != 'E'),
		 'HST',#submType#,#awbNo#,
		 NVL(#versionNo#,(Select nvl(max(ver_no),0) from cst_subm where Flt_Key = NVL(#vesselflightKey#,#flightKey#) AND flt_date = to_date(NVL(#vesselflightDate#,#flightDate#),'DDMONYY') and flt_type= DECODE(#flightType#,'A','I','D','E','N','E','S','I','I') and rec_type = #submType#)) )
	</insert>
	
	<insert id="saveSUBMTempSubmissionHST" parameterClass="cargo.cms.customs.bo.FlightListBO" >
		 INSERT INTO CST_SUBM_TEMP( VER_NO, REC_TYPE, SUBM_DATE, LM_USER_ID, LM_DATE,LM_VER,SEND_STATUS, FLT_KEY,FLT_DATE,FLT_TYPE) 
				 VALUES((Select (nvl(max(ver_no),0) + 1 ) hst_version from cst_subm where Flt_Key = NVL(#vesselflightKey#,#flightKey#) AND flt_date = to_date(NVL(#vesselflightDate#,#flightDate#),'DDMONYY') and flt_type= DECODE(#flightType#,'A','I','D','E','N','E','S','I','I') and rec_type = 'HST' and send_status != 'E'),
				 'HST', SYSDATE, #userID#, SYSDATE,'1','P', NVL(#vesselflightKey#,#flightKey#), NVL(#vesselflightDate#,#flightDate#), DECODE(#flightType#,'A','I','D','E','N','E','S','I','I') )
	</insert>
	
	<update id="update_cst_subm_HASH_SUBM"  parameterClass="cargo.cms.customs.bo.FlightListBO" >
	  update cst_subm set FAX_HASH_SEND = 'Y', LM_USER_ID = NVL(#userID#,'SYSTEM'), LM_DATE = SYSDATE,
	  hst_ver_no = (Select (nvl(max(ver_no),0) + 1 ) from cst_subm where Flt_Key =NVL(#vesselflightKey#,#flightKey#) AND flt_date = to_date(NVL(#vesselflightDate#,#flightDate#),'DDMONYY') and flt_type= DECODE(#flightType#,'A','I','D','E','N','E','S','I','I') and rec_type = 'HST' and send_status != 'E') 
	  where flt_key = NVL(#vesselflightKey#,#flightKey#) and flt_date = to_date(NVL(#vesselflightDate#,#flightDate#),'ddmonyy')
	  and flt_type = DECODE(#flightType#,'A','I','D','E','N','E','S','I','I')  AND REC_TYPE = #submType# and send_status = 'A'
	  AND ver_no = NVL(#versionNo#,(Select nvl(max(ver_no),0) from cst_subm where Flt_Key = NVL(#vesselflightKey#,#flightKey#) AND flt_date = to_date(NVL(#vesselflightDate#,#flightDate#),'DDMONYY') and flt_type= DECODE(#flightType#,'A','I','D','E','N','E','S','I','I') and rec_type = #submType#))
	</update>
	
	<update id="updateCstSubmHST_SUBMBDS"  parameterClass="cargo.cms.customs.bo.FlightListBO" >
	  update cst_subm set FAX_HASH_SEND = 'Y', LM_USER_ID = NVL(#userID#,'SYSTEM'), LM_DATE = SYSDATE,
	  hst_ver_no = (Select (nvl(max(ver_no),0) + 1 ) from cst_subm where Flt_Key = NVL(#vesselflightKey#,#flightKey#) AND flt_date = to_date(NVL(#vesselflightDate#,#flightDate#),'DDMONYY') and flt_type= DECODE(#flightType#,'A','I','D','E','N','E','S','I','I') and rec_type = 'HST' and send_status != 'E') 
	  where flt_key = NVL(#vesselflightKey#,#flightKey#) and flt_date = to_date(NVL(#vesselflightDate#,#flightDate#),'ddmonyy')
	  and flt_type = DECODE(#flightType#,'A','I','D','E','N','E','S','I','I')  AND (REC_TYPE = 'BDS' AND msg_type = 'L')
	  AND ver_no = NVL(#versionNo#,(SELECT nvl(max(ver_no),0) FROM cst_subm where flt_type = DECODE(#flightType#,'A','I','D','E','N','E','S','I','I') and flt_key = NVL(#vesselflightKey#,#flightKey#) and flt_date = to_date(NVL(#vesselflightDate#,#flightDate#),'ddmonyy') AND (REC_TYPE = 'BDS' AND msg_type = 'L')))
	</update>		
	
	
	<select id="checkSubmission"  parameterClass="cargo.cms.customs.bo.FaxBO" resultClass="java.lang.String">
		    SELECT count(*) FROM (
        		SELECT null FROM cst_subm where REC_TYPE = #submType# and flt_key = #flightKey# and flt_date = to_date(#flightDate#,'ddmonyy') and send_status = 'A'
        		and ver_no = (SELECT nvl(max(ver_no),0) FROM cst_subm where flt_type = DECODE(#flightType#,'A','I','D','E','N','E','S','I','I') and flt_key = #flightKey# and flt_date = to_date(#flightDate#,'ddmonyy') AND REC_TYPE = #submType#)
			)		
   	</select>
   	
   	<select id="checkSubmissionForBDS"  parameterClass="cargo.cms.customs.bo.FaxBO" resultClass="java.lang.String">
		 SELECT count(*) FROM (
       		 SELECT null FROM cst_subm B where (REC_TYPE = 'BDS' AND msg_type = 'L') and flt_key = #flightKey# and flt_date = to_date(#flightDate#,'ddmonyy') and send_status in ('W')
        	and ver_no = (SELECT nvl(max(ver_no),0) FROM cst_subm where flt_type = DECODE(#flightType#,'A','I','D','E','N','E','S','I','I') and flt_key = #flightKey# and flt_date = to_date(#flightDate#,'ddmonyy') AND (REC_TYPE = 'BDS' AND msg_type = 'L'))
          	and exists (select null from cst_ack where flt_type = B.flt_type and flt_key = B.flt_key and flt_date = B.flt_date AND ack_rec_type = 'BDS' AND ver_no = NVL(B.VER_NO,0) and ack_status = 'P')
		 )		
   	</select>
   	
	<select id="checkHSTSubmission"  parameterClass="cargo.cms.customs.bo.FaxBO" resultClass="java.lang.String">
		    SELECT count(*) FROM (        		
				SELECT null FROM cst_subm A where flt_type = DECODE(#flightType#,'A','I','D','E','N','E','S','I','I') and flt_key = #flightKey# 
				and flt_date = to_date(#flightDate#,'ddmonyy') and send_status = 'A' AND REC_TYPE = #submType# AND NVL(HST_VER_NO,0) > 0
				and ver_no = (SELECT nvl(max(ver_no),0) FROM cst_subm where flt_type =DECODE(#flightType#,'A','I','D','E','N','E','S','I','I') and flt_key = #flightKey# 
				and flt_date = to_date(#flightDate#,'ddmonyy') AND REC_TYPE = #submType#)	
				AND not Exists (select null from cst_subm where flt_type = A.flt_type and flt_key = A.flt_key and flt_date = A.flt_date and send_status = 'E' AND REC_TYPE = 'HST' AND ver_no = NVL(A.HST_VER_NO,0))
			)		
   	</select>
   	
   	<select id="checkHSTSubmissionForBDS"  parameterClass="cargo.cms.customs.bo.FaxBO" resultClass="java.lang.String">
		 SELECT count(*) FROM (
			SELECT null FROM cst_subm A where flt_type = DECODE(#flightType#,'A','I','D','E','N','E','S','I','I') and flt_key = #flightKey# 
			and flt_date = to_date(#flightDate#,'ddmonyy') AND (REC_TYPE = 'BDS' AND msg_type = 'L') AND NVL(HST_VER_NO,0) > 0
			and ver_no = (SELECT nvl(max(ver_no),0) FROM cst_subm where flt_type = DECODE(#flightType#,'A','I','D','E','N','E','S','I','I') and flt_key = #flightKey# 
			and flt_date = to_date(#flightDate#,'ddmonyy') AND (REC_TYPE = 'BDS' AND msg_type = 'L'))	
			AND not Exists (select null from cst_subm where flt_type = A.flt_type and flt_key = A.flt_key and flt_date = A.flt_date and send_status = 'E' AND REC_TYPE = 'HST' AND ver_no = NVL(A.HST_VER_NO,0))
		 )		
   	</select>
   	
   	<select id="checkHSTRejectionCnt"  parameterClass="cargo.cms.customs.bo.FaxBO" resultClass="java.lang.String">   		
			SELECT count(1) FROM cst_subm A where A.rec_type = 'HST' and A.flt_type = DECODE(#flightType#,'A','I','D','E','N','E','S','I','I') and A.send_status = 'R' 
			and A.flt_key = #flightKey# and A.flt_date = to_date(#flightDate#,'ddmonyy')	
			AND Exists (select null from cst_subm where flt_type = A.flt_type and flt_key = A.flt_key and flt_date = A.flt_date and send_status = 'A' AND REC_TYPE = #submType#
			and ver_no = (SELECT nvl(max(ver_no),0) FROM cst_subm where flt_type = DECODE(#flightType#,'A','I','D','E','N','E','S','I','I') and flt_key = #flightKey# and flt_date = to_date(#flightDate#,'ddmonyy') and send_status = 'A' AND REC_TYPE = #submType#) 
			AND NVL(HST_VER_NO,0) = A.ver_no)
   	</select>
   	
   	
   	<select id="checkHSTRejectionCntForBDS"  parameterClass="cargo.cms.customs.bo.FaxBO" resultClass="java.lang.String">   		
			SELECT count(1) FROM cst_subm A where A.rec_type = 'HST' and A.flt_type = DECODE(#flightType#,'A','I','D','E','N','E','S','I','I') and A.send_status = 'R' 
			and A.flt_key = #flightKey# and A.flt_date = to_date(#flightDate#,'ddmonyy')	
			AND Exists (select null from cst_subm where flt_type = A.flt_type and flt_key = A.flt_key and flt_date = A.flt_date and (REC_TYPE = 'BDS' AND msg_type = 'L')
			and ver_no = (SELECT nvl(max(ver_no),0) FROM cst_subm where flt_type = DECODE(#flightType#,'A','I','D','E','N','E','S','I','I') and flt_key = #flightKey# and flt_date = to_date(#flightDate#,'ddmonyy') 
			and (REC_TYPE = 'BDS' AND msg_type = 'L') ) 
			AND NVL(HST_VER_NO,0) = A.ver_no)
   	</select>


	<insert id="moveConstraintCodeToRecvBackup" parameterClass="java.util.HashMap" >
		insert into CST_RECV_OLD_AWB (select * from CST_RECV where awb_no = #AWB_NO# AND AWB_DATE = TO_DATE(#AWB_DATE#,'DDMONYY'))
	</insert>
	
	<delete id="deleteRECV" parameterClass="java.util.HashMap">	
		DELETE from CST_RECV where awb_no = #AWB_NO# AND AWB_DATE = TO_DATE(#AWB_DATE#,'DDMONYY')
	</delete>
	
	<insert id="moveConstraintCodeToRECV" parameterClass="java.util.HashMap" >
		insert into CST_RECV (select * from CST_RECV_OLD_AWB where awb_no = #AWB_NO# AND AWB_DATE = TO_DATE(#AWB_DATE#,'DDMONYY'))		
	</insert>
	
	<delete id="deleteRECVBackup" parameterClass="java.util.HashMap">	
		DELETE from CST_RECV_OLD_AWB where awb_no = #AWB_NO# AND AWB_DATE = TO_DATE(#AWB_DATE#,'DDMONYY')
	</delete>
	
		
	<select id="getConstraintCodeClosedAWBJOB" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		<![CDATA[			
			SELECT AWB_NO as AWB_NO , to_char(AWB_DATE,'DDMONYY') as AWB_DATE FROM AWB where AWB_CLOSED_YN = 'Y' AND LM_USER_ID = 'SYSTEM'  AND LM_DATE >= TO_DATE(#JOBDATE#,'DDMONYY HH24MISS')
		]]>
	</select>
	
	<update id="update_flt_opr_events_HST_HASH_TTL"  parameterClass="cargo.cms.customs.bo.FlightListBO" >
	  update flt_opr_events 
	  set TR_TYPE = 'HSHST',
	  FAX_HASH_TTL = FAX_HASH_TTL + 1,	  
	  LM_USER_ID = NVL(#userID#,'SYSTEM'),
	  LM_DATE = SYSDATE
		  where flt_key =  #flightKey# and sch_date = to_date(#flightDate#,'DDMONYY')  and flt_type = DECODE(#flightType#,'A','A','D','D','N','D','S','A','A') 
	</update>	
	
	<update id="updateCustomsAwbImpHandler" parameterClass="cargo.cms.customs.bo.AwbDetailsBO">
		UPDATE IMP_CAR_AWB SET 
			ACCS_HANDLER = #handlingAgent#		
			WHERE AWB_NO = #awbNo#
			AND trim(AWB_DATE) = to_date(#awbDate#,'DDMONYY')
	</update>
	
	
	<update id="updateShipOwner" parameterClass="cargo.cms.customs.bo.AwbDetailsBO">
			UPDATE AWB SET CARR_CODE= #shipOwner# WHERE AWB_NO = #awbNo# AND trim(AWB_DATE) = to_date(#awbDate#,'ddMONyy')
	</update>	
	
	 
      <parameterMap id="outboundPmanMap" class="map" >
            <parameter property="FLTKEY" 	jdbcType="VARCHAR"       	javaType="java.lang.String"      	nullValue="NO_ENTRY"		mode="INOUT"/>
            <parameter property="FLTDATE" 	jdbcType="VARCHAR"       	javaType="java.lang.String"	      	nullValue="NO_ENTRY"		mode="IN"/>
            <parameter property="FLTTYPE" 	jdbcType="VARCHAR"       	javaType="java.lang.String"      	nullValue="NO_ENTRY"		mode="IN"/>
           </parameterMap>
	  <procedure id="sqlInsertPmanToCstAwbOutbound" parameterMap="outboundPmanMap">
            { call PKG_CST_OUT_BOUND.INSERT_OUT_BOUND_CST_AWB_HAWB(?,?,?)}
      </procedure>
      
     <select id="fetchOutboundConsignmentList" parameterClass="cargo.cms.customs.bo.FlightListBO" resultClass="cargo.cms.customs.bo.IntCnsgnDetailsBO">		
		SELECT A.flightKey,A.flightDate,A.awbNo,
		(to_char(A.awbDate,'DDMONYY')) awbDate,
		SUBSTR(A.awbNo, 1,3)||'-'||SUBSTR(A.awbNo,4,LENGTH(A.awbNo))as disAwbNo,
		SUBSTR(A.awbNo,0,3) as awbPfx,
		SUBSTR(A.awbNo,4) as awbSfx,
		( SELECT FUN_VSL_SHP_PPK_TYPE(A.flightKey,A.flightDate,'E',A.awbNo) FROM DUAL ) as ppkInd,
		NVL(A.cstContent,A.carContent) as contents,A.ORG as origin,
		'HKG' as loadingPoint,decode(A.cnslInd,'N','NO',null,'NO','YES') AS cnsl,		
		A.DEST as dest,A.manifestPCS,A.manifestWt,
		NVL(C.hawbPCS,0) AS hawbPCS,C.sumHawbNo,trim(to_char(nvl(C.hawbWt,0),'999999990.0')) as hawbWt,
		NVL(A.awbPCS_CST,0)AS  awbPCS,
		A.awbwt_CST as awbWt,
		A.relInd as priorityCode,
		 nvl(A.relIndOrder, DECODE(A.trfType,'IF','F','TT','M','QT','F')) as priorityCodeOrder,
		DECODE(A.relInd,'F','Interface','M','Tarmac', 'R','Immediate','S','Ship-side','X','Mixed') as priority,
		pkg_cst.get_shpt_type(A.awbNo, A.awbDate, nvl(a.handler, nvl(A.accs_cargo_hdlr, 'CPSL')), null) as shpType,
		A.trfType,
		d.INT_YN AS icsIndicator, 
  		d.AMD_YN AS amdIndicator,
  		d.expcar_yn AS impCarIndicator,
  		d.LBS_YN AS lbsIndicator,
  		A.splHandCode,
  		A.agentName,
      	A.agentCode,
      	nvl(a.handler, nvl(A.accs_cargo_hdlr, 'CPSL')) handler,
      	a.readySavedInd as readySavedInd,
      	D.CARR_CODE AS shipOwner 
	FROM
	(select sub.*, sub.relIndYN  as relInd,nvl(sub.relIndYN, DECODE(sub.trfType,'IF','F','TT','M','QT','F')) as relIndOrder from 
			(   
				SELECT exp_pmanifest_awb.FLT_KEY AS flightKey,
				exp_pmanifest_awb.FLT_DATE AS flightDate,
				exp_pmanifest_awb.AWB_NO AS awbNo,
        		exp_pmanifest_awb.AWB_DATE AS awbDate,
        		exp_pmanifest_awb.pman_pcs AS manifestPCS,
				exp_pmanifest_awb.pman_wt AS manifestWt,
				NVL(CST_AWB.PCS,0) AS awbPCS_CST,
				NVL(CST_AWB.WGT,0) AS awbWt_CST,
				CST_AWB.CONTENT AS cstContent,
				CST_AWB.REL_IND AS relIndYN,
        		CST_AWB.ORG AS ORG,
				CST_AWB.DES AS DEST,
				CST_AWB.HDLG_AGENT as handler,
        		EXP_CAR.AGENT_CODE as agentCode,
        		exp_car.agent_name as agentName,
        		exp_car.content as carContent,
        		EXP_CAR.accs_cargo_hdlr as accs_cargo_hdlr,
       			(CST_AWB.SPH_SPL_CODE1 ||''||DECODE(CST_AWB.SPH_SPL_CODE2,NULL,'','','',','||CST_AWB.SPH_SPL_CODE2)
          		  ||''||DECODE(CST_AWB.SPH_SPL_CODE3,NULL,'','','',','||CST_AWB.SPH_SPL_CODE3)
		          ||''||DECODE(CST_AWB.SPH_SPL_CODE4,NULL,'','','',','||CST_AWB.SPH_SPL_CODE4)
		          ||''||DECODE(CST_AWB.SPH_SPL_CODE5,NULL,'','','',','||CST_AWB.SPH_SPL_CODE5)
		          ||''||DECODE(CST_AWB.SPH_SPL_CODE6,NULL,'','','',','||CST_AWB.SPH_SPL_CODE6)
		          ||''||DECODE(CST_AWB.SPH_SPL_CODE7,NULL,'','','',','||CST_AWB.SPH_SPL_CODE7)
		          ||''||DECODE(CST_AWB.SPH_SPL_CODE8,NULL,'','','',','||CST_AWB.SPH_SPL_CODE8)
		          ||''||DECODE(CST_AWB.SPH_SPL_CODE9,NULL,'','','',','||CST_AWB.SPH_SPL_CODE9)) AS splHandCode,
				CST_AWB.CNSL_IND AS cnslInd		,
        	( Case when
	          (  SELECT count(*) FROM V_DDT_DTL WHERE cntg_FLT_KEY = exp_pmanifest_awb.FLT_KEY AND cntg_FLT_DATE = exp_pmanifest_awb.FLT_DATE AND AWB_NO= exp_pmanifest_awb.AWB_NO AND 
	          AWB_DATE = to_char(exp_pmanifest_awb.AWB_DATE,'DDMONYY') AND shp_trf_type='TT')>0 then 'TT'
	          when
	          (  SELECT count(*) FROM V_DDT_DTL WHERE cntg_FLT_KEY = exp_pmanifest_awb.FLT_KEY AND cntg_FLT_DATE = exp_pmanifest_awb.FLT_DATE AND AWB_NO= exp_pmanifest_awb.AWB_NO AND 
	          AWB_DATE = to_char(exp_pmanifest_awb.AWB_DATE,'DDMONYY') AND shp_trf_type='IF')>0 then 'IF'
	          when
	          (  SELECT count(*) FROM V_DDT_DTL WHERE cntg_FLT_KEY = exp_pmanifest_awb.FLT_KEY AND cntg_FLT_DATE = exp_pmanifest_awb.FLT_DATE AND AWB_NO= exp_pmanifest_awb.AWB_NO AND 
	          AWB_DATE = to_char(exp_pmanifest_awb.AWB_DATE,'DDMONYY')  AND shp_trf_type='QT')>0 then 'QT'
	          END) as trfType ,
	        NVL(CST_AWB.RDY_YN,'N') readySavedInd 		
		FROM (
		       SELECT flt_key, flt_date, awb_no,awb_date, sum(PMAN_PCS) PMAN_PCS, sum(PMAN_WT) PMAN_WT  FROM ( 
		                      SELECT  flt_key, flt_date, awb_no,awb_date,
		                      sum(PMAN_PCS) PMAN_PCS, sum(PMAN_WT) PMAN_WT  
		                      FROM exp_pmanifest_awb
		                      group by flt_key,flt_date,awb_no,awb_date,flt_date
		                      UNION ALL
		                      select flt_key, flt_date, awb_no,awb_date,
		                      sum(nvl(bulk_pcs,0)+nvl(ppk_pcs,0)) PMAN_PCS, sum(nvl(bulk_wt,0)+nvl(ppk_wt,0)) PMAN_WT  
		                      FROM exp_pman_tarmac_awb
		                      group by flt_key,flt_date,awb_no,awb_date,flt_date
		                  ) P  group by flt_key,flt_date,awb_no,awb_date,flt_date
		      ) exp_pmanifest_awb 
			INNER JOIN EXP_CAR ON  EXP_CAR.AWB_NO =exp_pmanifest_awb.AWB_NO and exp_pmanifest_awb.awb_date =EXP_CAR.AWB_DATE
      		LEFT JOIN CST_AWB ON CST_AWB.AWB_NO = exp_pmanifest_awb.AWB_NO AND exp_pmanifest_awb.FLT_KEY = CST_AWB.FLT_KEY AND 
				 exp_pmanifest_awb.FLT_DATE = CST_AWB.FLT_DATE
			where exp_pmanifest_awb.FLT_KEY=#flightKey# and exp_pmanifest_awb.flt_date=#flightDate#
      ) sub) A 
      LEFT JOIN (SELECT L.AWB_NO, l.awb_date,
					NVL(SUM(L.PCS),0) as hawbPCS,
					NVL(SUM(L.WGT),0) as hawbWt,
					NVL(COUNT(L.HAWB_NO),0) AS sumHawbNo
				FROM CST_HAWB L
				WHERE  L.FLT_KEY = #flightKey# AND L.flt_date = to_date(#flightDate#,'DDMONYY') group by L.AWB_NO, l.awb_date,L.FLT_KEY,L.flt_date
        ) C on A.awbNo = C.awb_No  and A.awbDate = c.awb_Date	
      LEFT JOIN AWB D ON D.AWB_NO = A.awbNo AND D.AWB_DATE = A.awbDate	      
	</select>
	
	<select id="fetchAmdOutboundCnsgn"  parameterClass="cargo.cms.customs.bo.FlightListBO" resultClass="cargo.cms.customs.bo.IntCnsgnDetailsBO">				
	
	 SELECT A.flightKey,A.flightDate,A.awbNo,
		(to_char(A.awbDate,'DDMONYY')) awbDate,
		SUBSTR(A.awbNo, 1,3)||'-'||SUBSTR(A.awbNo,4,LENGTH(A.awbNo))as disAwbNo,
		SUBSTR(A.awbNo,0,3) as awbPfx,
		SUBSTR(A.awbNo,4) as awbSfx,
		NVL(A.cstContent,A.carContent) as contents,A.ORG as origin,
		'HKG' as loadingPoint,decode(A.cnslInd,'N','NO',null,'NO','YES') AS cnsl,
		A.DEST as dest,A.manifestPCS,A.manifestWt,
		NVL(C.hawbPCS,0)AS  hawbPCS,C.sumHawbNo,trim(to_char(nvl(C.hawbWt,0),'999999990.0')) as hawbWt,
		NVL(A.awbPCS_CST,0)AS  awbPCS,
		A.awbwt_CST as awbWt,
        A.relInd as priorityCode,
        nvl(A.relIndOrder, DECODE(A.trfType ,'IF','F','TT','M','QT','F')) as priorityCodeOrder,
		DECODE(A.relInd,'F','Interface','M','Tarmac', 'R','Immediate','S','Ship-side','X','Mixed') as priority,
    pkg_cst.get_shpt_type(A.awbNo, A.awbDate, nvl(a.handler, nvl(A.accs_cargo_hdlr, 'CPSL')), null) as shpType,
		DECODE((SELECT COUNT(1) FROM CST_AWB WHERE AWB_NO = A.awbNo AND AWB_DATE = A.awbDate AND FLT_KEY =A.flightKey AND FLT_DATE = A.flightDate
    	AND ACCS_IND = 'INT'), 0, 'N', 'Y') as submissionDone,
      A.trfType  as trfType,
		d.INT_YN AS icsIndicator, 
  		d.AMD_YN AS amdIndicator,
  		d.expcar_yn AS impCarIndicator,
  		D.LBS_YN AS lbsIndicator,
  		A.splHandCode 
	    FROM
		(select sub.* , sub.relIndYN as relInd , nvl(sub.relIndYN, DECODE(FUN_GET_TRF_TYPE (sub.flightKey, sub.flightDate, sub.awbNo,  sub.awbDate),'IF','F','TT','M','QT','F')) as relIndOrder ,
          FUN_GET_TRF_TYPE (sub.flightKey, sub.flightDate, sub.awbNo,  sub.awbDate) trfType from 
    	(SELECT exp_pmanifest_awb.FLT_KEY AS flightKey,
				  exp_pmanifest_awb.FLT_DATE AS flightDate,
				  exp_pmanifest_awb.AWB_NO AS awbNo, 
          exp_pmanifest_awb.AWB_Date AS awbDate, 
				 exp_pmanifest_awb.pman_pcs AS manifestPCS,
				 exp_pmanifest_awb.pman_wt AS manifestWt,
				  NVL(CST_AWB.PCS,0) AS  awbPCS_CST,
				  NVL(CST_AWB.WGT,0)  AS awbWt_CST,
			
				  CST_AWB.CONTENT AS cstContent,
				  CST_AWB.REL_IND AS relIndYN,
				  CST_AWB.ORG AS ORG,
				  CST_AWB.DES AS DEST,     
				  CST_AWB.HDLG_AGENT as handler,  
          exp_car.content as carContent,
          EXP_CAR.accs_cargo_hdlr as accs_cargo_hdlr,
        (CST_AWB.SPH_SPL_CODE1 ||''||DECODE(CST_AWB.SPH_SPL_CODE2,NULL,'','','',','||CST_AWB.SPH_SPL_CODE2)
          ||''||DECODE(CST_AWB.SPH_SPL_CODE3,NULL,'','','',','||CST_AWB.SPH_SPL_CODE3)
          ||''||DECODE(CST_AWB.SPH_SPL_CODE4,NULL,'','','',','||CST_AWB.SPH_SPL_CODE4)
          ||''||DECODE(CST_AWB.SPH_SPL_CODE5,NULL,'','','',','||CST_AWB.SPH_SPL_CODE5)
          ||''||DECODE(CST_AWB.SPH_SPL_CODE6,NULL,'','','',','||CST_AWB.SPH_SPL_CODE6)
          ||''||DECODE(CST_AWB.SPH_SPL_CODE7,NULL,'','','',','||CST_AWB.SPH_SPL_CODE7)
          ||''||DECODE(CST_AWB.SPH_SPL_CODE8,NULL,'','','',','||CST_AWB.SPH_SPL_CODE8)
          ||''||DECODE(CST_AWB.SPH_SPL_CODE9,NULL,'','','',','||CST_AWB.SPH_SPL_CODE9)) AS splHandCode,
          CST_AWB.CNSL_IND AS cnslInd		
		  FROM (
      			 SELECT flt_key, flt_date, awb_no,awb_date, sum(PMAN_PCS) PMAN_PCS, sum(PMAN_WT) PMAN_WT  FROM ( 
                      SELECT  flt_key, flt_date, awb_no,awb_date,
                      sum(PMAN_PCS) PMAN_PCS, sum(PMAN_WT) PMAN_WT  
                      FROM exp_pmanifest_awb
                      group by flt_key,flt_date,awb_no,awb_date,flt_date
                      UNION ALL
                      select flt_key, flt_date, awb_no,awb_date,
                      sum(nvl(bulk_pcs,0)+nvl(ppk_pcs,0)) PMAN_PCS, sum(nvl(bulk_wt,0)+nvl(ppk_wt,0)) PMAN_WT  
                      FROM exp_pman_tarmac_awb
                      group by flt_key,flt_date,awb_no,awb_date,flt_date
                  ) P  group by flt_key,flt_date,awb_no,awb_date,flt_date
      		) exp_pmanifest_awb 
			INNER JOIN EXP_CAR ON  EXP_CAR.AWB_NO =exp_pmanifest_awb.AWB_NO and exp_pmanifest_awb.awb_date =EXP_CAR.AWB_DATE
		  LEFT JOIN CST_AWB ON CST_AWB.AWB_NO = exp_pmanifest_awb.AWB_NO AND exp_pmanifest_awb.FLT_KEY = CST_AWB.FLT_KEY AND 
				 exp_pmanifest_awb.FLT_DATE = CST_AWB.FLT_DATE
		  WHERE exp_pmanifest_awb.FLT_KEY = #flightKey# 
		  AND exp_pmanifest_awb.FLT_DATE = to_date(#flightDate#,'DDMONYY')
					) sub) A
		LEFT JOIN (SELECT L.AWB_NO, l.awb_date,
					NVL(SUM(L.PCS),0) as hawbPCS,
					NVL(SUM(L.WGT),0) as hawbWt,
					NVL(COUNT(L.HAWB_NO),0) AS sumHawbNo
				FROM CST_HAWB L
				WHERE EXISTS( SELECT M.AWB_NO
					FROM exp_pmanifest_awb M
					WHERE  M.FLT_KEY=#flightKey#
					AND M.flt_date = to_date(#flightDate#,'DDMONYY')
					AND M.AWB_NO = L.AWB_NO AND M.AWB_DATE = L.AWB_DATE)
				GROUP BY L.AWB_NO, l.awb_date) C on A.awbNo = C.awb_No  and A.awbDate = c.awb_Date	
      LEFT JOIN AWB D ON D.AWB_NO = A.awbNo AND D.AWB_DATE = A.awbDate	
      
      </select>
	
	<select id="imp_exp__flt_validate"  parameterClass="map"  resultClass="java.lang.Integer">
		SELECT NVL(count(1),0) FROM FLT_OPR A,MAST_CARRIER M WHERE 
		 M.CODE=A.CARR_CODE
		<isNotEmpty property="carrierCode">
			AND A.CARR_CODE = #carrierCode# 
		</isNotEmpty>
		<isEmpty property="carrierCode">
			AND A.FLT_NO = #flightNo# 
		</isEmpty>
		<isNotEmpty property="flightKey">
			AND A.FLT_KEY = #flightKey# 
		</isNotEmpty>
			AND A.SCH_DATE= TO_DATE( #flightDate#, 'DDMONYY') 
		<isNotEmpty property="flightType">
				<isEqual property="flightType" compareValue="A">
			         AND  A.FLT_TYPE = 'A' AND NVL(m.vessel_flt_yn,'N')='N'
			    </isEqual>
			    <isEqual property="flightType" compareValue="N">
			         AND  A.FLT_TYPE = 'D' AND NVL(m.vessel_flt_yn,'N')='Y'
			    </isEqual>	
			    <isEqual property="flightType" compareValue="S">
			         AND  A.FLT_TYPE = 'A' AND NVL(m.vessel_flt_yn,'N')='Y'
			    </isEqual>	
		</isNotEmpty>	
		 <isEmpty property="flightType">
			     	AND A.FLT_TYPE = 'A'
		 </isEmpty>
   	</select>
     	
   	<select id="getFlightKeyForSTFSSUbmissions" parameterClass="cargo.cms.customs.bo.LBSDetailsBO" resultClass="cargo.cms.customs.bo.LBSDetailsBO">
   		SELECT flt_key as flightKey FROM flt_opr WHERE  flt_type   = 'D' 
			AND stfs_flt_key is not null AND sch_date = TO_DATE(#flightDate#, 'DDMONYY')
			AND EXISTS (SELECT null FROM CST_SUBM WHERE FLT_KEY = stfs_flt_key AND FLT_DATE = stfs_flt_date AND flt_type = 'E' AND rec_type = 'INT' AND SEND_STATUS = 'A')
	</select>
   	
   	<select id="fetchLeftInboundOutboundCnsgnRecord" parameterClass="cargo.cms.customs.bo.LBSDetailsBO"
		resultClass="cargo.cms.customs.bo.LBSDetailsBO">
		<![CDATA[
			SELECT FLT.FLT_KEY                      AS flightKey,
  TO_CHAR(FLT.SCH_DATE, 'DDMONYY')      AS flightDate,
  FLT.FLT_KEY                           AS flightType,
  FLT.STFS_FLT_KEY                      AS vesselFlightKey,
  TO_CHAR(FLT.STFS_FLT_DATE, 'DDMONYY') AS vesselFlightDate,
  FLT.FLT_KEY
  || '/'
  || TO_CHAR(FLT.SCH_DATE, 'DDMONYY') AS dispfltkey,
  TO_CHAR(FLT.SCH_DATE, 'DDMONYY')
  || ' '
  || SUBSTR(LPAD(COALESCE(FLT.ACT_TIME, FLT.EST_TIME, FLT.SCH_TIME), 4, '0'), 1, 2)
  || ':'
  || SUBSTR(LPAD(COALESCE(FLT.ACT_TIME, FLT.EST_TIME, FLT.SCH_TIME), 4, '0'), 3) AS deadline,
  LTRIM(SUBSTR(LPAD(FLT.SCH_TIME, 4, '0'), 1, 2)
  || ':'
  || SUBSTR(LPAD(FLT.SCH_TIME, 4, '0'), 3), ':')                                                             AS scheduleTime,
  PKG_COMMON.GET_FLT_ATA(FLT.FLT_KEY,FLT.SCH_DATE, FLT.FLT_TYPE)                           AS arrivalTime,
  FUN_CHECK_MAN(#flightType#, FLT.FLT_KEY, TO_CHAR(FLT.SCH_DATE, 'DDMONYY'), 'CLR') AS flightClear,
  TO_CHAR(BDS.SUBM_DATE, 'DDMONYY HH24:MI:SS')                                                               AS lbsSubmDate,
  TO_CHAR(BDS.SEND_DATE, 'DDMONYY HH24:MI:SS')                                                               AS lbsComplDate,
  NVL(BDS.VER_NO, 0)                                                                                         AS lbsSubmVerNo,
  NVL(BDS.VER_NO, 0) + 1                                                                                     AS lbsSubmNextVerNo,
  FLT.VESSEL_ID                                                                                              AS vesselId,
  FLT.VESSEL_NAME                                                                                            AS vesselName,
  FLT.VOYAGE_NUM                                                                                             AS voyageNum,
  FLT.CALL_SIGN_VESSEL                                                                                       AS callSignVessel,
  FLT.SHIPPING_AGENT                                                                                         AS shippingAgent,
  FUN_CHECK_MAN(#flightType#, FLT.FLT_KEY, TO_CHAR(FLT.SCH_DATE, 'DDMONYY'), 'BDS') AS status,
  FLT.EST_TIME,
  FLT.SCH_TIME,
  CASE
    WHEN (SELECT COUNT(1)
      FROM CST_ACK
      WHERE FLT_KEY    = FLT.STFS_FLT_KEY
      AND FLT_DATE     = FLT.STFS_FLT_DATE
      AND FLT_TYPE     = DECODE(#flightType#,'A','I','S','I','N','E','I')
      AND ACK_REC_TYPE = 'LBR' ) > 0
    THEN 'Y'
    ELSE 'N'
  END AS backDoorInd
FROM FLT_OPR FLT
JOIN
  (SELECT FLT_TYPE,
    FLT_KEY,
    FLT_DATE,
    STFS_FLT_KEY,
    STFS_FLT_DATE
  FROM
    (SELECT CAWB.FLT_TYPE,
      CAWB.FLT_KEY,
      CAWB.FLT_DATE,
      e.STFS_FLT_KEY,
      e.STFS_FLT_DATE,
      COUNT(CAWB.AWB_NO) FFM_CNT,
      COUNT(VSUBM.AWB_NO
      || BDD.AWB_NO) SUBMITED_AWB
    FROM CST_AWB CAWB
    JOIN flt_opr e
    ON e.flt_key   = cawb.flt_key
    AND e.sch_date = cawb.flt_date
    LEFT OUTER JOIN V_CST_SUBMITTED_AWB_OUTBOUND VSUBM
    ON CAWB.FLT_TYPE  = VSUBM.FLT_TYPE
    AND CAWB.FLT_KEY  = VSUBM.FLT_KEY
    AND CAWB.FLT_DATE = VSUBM.FLT_DATE
    AND CAWB.FLT_TYPE = DECODE(#flightType#,'A','I','S','I','N','E','I')
    AND CAWB.AWB_NO   = VSUBM.AWB_NO
    LEFT OUTER JOIN CST_BD_DISC BDD
    ON CAWB.FLT_TYPE    = BDD.FLT_TYPE
    AND CAWB.FLT_KEY    = BDD.FLT_KEY
    AND CAWB.FLT_DATE   = BDD.FLT_DATE
    AND CAWB.AWB_NO     = BDD.AWB_NO
    WHERE CAWB.FLT_DATE = TO_DATE(#flightDate#, 'DDMONYY')
    AND CAWB.AWB_NO    IS NOT NULL
    GROUP BY CAWB.FLT_TYPE,
      CAWB.FLT_KEY,
      CAWB.FLT_DATE,
      e.STFS_FLT_KEY,
      e.STFS_FLT_DATE
    ) CAWB
  WHERE EXISTS
    (SELECT SUBM.FLT_KEY
    FROM CST_SUBM SUBM
    WHERE SUBM.REC_TYPE       = 'INT'
    AND SUBM.SEND_STATUS NOT IN ('E', 'R')
    AND SUBM.FLT_KEY          = CAWB.STFS_FLT_KEY
    AND SUBM.FLT_DATE         = CAWB.STFS_FLT_DATE
    AND SUBM.FLT_TYPE         = DECODE(#flightType#,'A','I','S','I','N','E','I')
    )
  AND ( FFM_CNT > SUBMITED_AWB
  OR ( EXISTS
    (SELECT NULL
    FROM V_CST_CC_CODE VCC_CODE
    WHERE CC_CODE         = 'ND'
    AND VCC_CODE.FLT_KEY  = CAWB.STFS_FLT_KEY
    AND VCC_CODE.FLT_DATE = CAWB.STFS_FLT_DATE
    AND RECV_DATE         > NVL(
      (SELECT MAX(SUBM_DATE)
      FROM CST_SUBM SUBM
      JOIN CST_CSGNM CSGNM
      ON SUBM.FLT_KEY           = CSGNM.FLT_KEY
      AND SUBM.FLT_DATE         = CSGNM.FLT_DATE
      AND SUBM.MSG_TYPE         = CSGNM.RECV_REC_TYPE
      AND SUBM.VER_NO           = CSGNM.VER_NO
      WHERE SUBM.FLT_KEY        = VCC_CODE.FLT_KEY
      AND SUBM.FLT_DATE         = VCC_CODE.FLT_DATE
      AND CSGNM.AWB_NO          = VCC_CODE.AWB_NO
      AND SUBM.SEND_STATUS NOT IN('E', 'R')
      ), '01JAN00')
    ) ) )
  ) SUBM ON FLT.FLT_KEY = SUBM.FLT_KEY
AND FLT.SCH_DATE        = SUBM.FLT_DATE
LEFT OUTER JOIN
  (SELECT *
  FROM
    (SELECT FLT_TYPE,
      FIRST_VALUE(FLT_KEY) OVER(PARTITION BY FLT_TYPE, FLT_KEY, FLT_DATE, REC_TYPE ORDER BY VER_NO DESC)   AS FLT_KEY,
      FIRST_VALUE(FLT_DATE) OVER(PARTITION BY FLT_TYPE, FLT_KEY, FLT_DATE, REC_TYPE ORDER BY VER_NO DESC)    AS FLT_DATE,
      FIRST_VALUE(SUBM_DATE) OVER(PARTITION BY FLT_TYPE, FLT_KEY, FLT_DATE, REC_TYPE ORDER BY VER_NO DESC)   AS SUBM_DATE,
      FIRST_VALUE(SEND_STATUS) OVER(PARTITION BY FLT_TYPE, FLT_KEY, FLT_DATE, REC_TYPE ORDER BY VER_NO DESC) AS SEND_STATUS,
      FIRST_VALUE(SEND_DATE) OVER(PARTITION BY FLT_TYPE, FLT_KEY, FLT_DATE, REC_TYPE ORDER BY VER_NO DESC)   AS SEND_DATE,
      FIRST_VALUE(VER_NO) OVER(PARTITION BY FLT_TYPE, FLT_KEY, FLT_DATE, REC_TYPE ORDER BY VER_NO DESC)      AS VER_NO,
      DENSE_RANK() OVER(PARTITION BY FLT_TYPE, FLT_KEY, FLT_DATE, REC_TYPE ORDER BY VER_NO DESC)             AS SEQ
    FROM CST_SUBM
    WHERE FLT_DATE = TO_DATE(#flightDate#, 'DDMONYY')
    AND REC_TYPE   = 'BDS'
    AND MSG_TYPE   = 'L'
    AND FLT_TYPE   = DECODE(#flightType#,'A','I','S','I','N','E','I')
    )
  WHERE SEQ = 1
  ) BDS ON NVL(FLT.STFS_FLT_KEY,FLT.FLT_KEY) = BDS.FLT_KEY AND NVL(FLT.STFS_FLT_DATE,FLT.SCH_DATE )  = BDS.FLT_DATE
		]]>
		<isNotEmpty property="loginCarrier">
		<![CDATA[
			AND	(FLT.CARR_CODE = #loginCarrier# OR FLT.CARR_CODE IN (
				SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE = #loginCarrier#
			))
		]]>
		</isNotEmpty>
		<![CDATA[
	 		ORDER BY NVL(FLT.EST_TIME, FLT.SCH_TIME)
	 	]]>
	</select> 
	
	<select id="fetchShipmentInboundOutboundRecords" parameterClass="cargo.cms.customs.bo.LBSDetailsBO"
		resultClass="cargo.cms.customs.bo.IntCnsgnDetailsBO">
		<![CDATA[
			SELECT CAWB.AWB_NO AS awbNo,
			SUBSTR(CAWB.AWB_NO, 1, 3) || '-' || SUBSTR(CAWB.AWB_NO, 4, LENGTH(CAWB.AWB_NO))AS disAwbNo,
			SUBSTR(CAWB.AWB_NO, 0, 3) AS awbPfx, SUBSTR(CAWB.AWB_NO, 4) AS awbSfx,
			TO_CHAR(CAWB.AWB_DATE, 'DDMONYY') AS awbDate,
			CAWB.CONTENT AS contents,
			CAWB.ORG AS origin, CAWB.RTG_APT_CODE AS loadingPoint, CAWB.DES AS dest,
			CAWB.PCS AS awbPCS, CAWB.WGT AS awbWt, 
			CAWB.MAN_WGT AS manifestWt, CAWB.MAN_PCS AS manifestPCS,
			CAWB.FLT_KEY AS flightKey, CAWB.FLT_DATE AS flightDate, CAWB.FLT_TYPE,
			( SELECT FUN_VSL_SHP_PPK_TYPE(CAWB.FLT_KEY,CAWB.FLT_DATE,CAWB.FLT_TYPE,CAWB.AWB_NO) FROM DUAL ) as ppkInd,
			CAWB.REL_IND AS priorityCode, CAWB.REL_IND AS priority, (
			  SELECT NVL(SUM(PCS), 0)
			  FROM CST_HAWB
			  WHERE AWB_NO = CAWB.AWB_NO AND AWB_DATE = CAWB.AWB_DATE AND flt_key = #flightKey# AND flt_date = TO_DATE(#flightDate#, 'DDMONYY')
			) AS hawbPCS, (
			  SELECT TRIM(TO_CHAR(NVL(SUM(WGT), 0), '999999990.0'))
			  FROM CST_HAWB
			  WHERE AWB_NO = CAWB.AWB_NO AND AWB_DATE = CAWB.AWB_DATE AND flt_key = #flightKey# AND flt_date = TO_DATE(#flightDate#, 'DDMONYY')
			) AS hawbWt, (
			  SELECT COUNT(HAWB_NO)
			  FROM CST_HAWB
			  WHERE AWB_NO = CAWB.AWB_NO AND AWB_DATE = CAWB.AWB_DATE
			) AS sumHawbNo,
			AWB.INT_YN AS intIndicator, AWB.AMD_YN AS amdIndicator, 
			DECODE(CAWB.FLT_TYPE,'I',AWB.IMPCAR_YN,'E',awb.expcar_yn,AWB.IMPCAR_YN)  AS impCarIndicator, AWB.LBS_YN AS lbsIndicator
			FROM CST_AWB CAWB
			JOIN AWB
			ON CAWB.AWB_NO = AWB.AWB_NO AND CAWB.AWB_DATE = AWB.AWB_DATE
			WHERE CAWB.FLT_KEY = #flightKey# AND CAWB.FLT_DATE = TO_DATE(#flightDate#, 'DDMONYY') AND CAWB.FLT_TYPE = DECODE(#flightType#,'N','E','S','I','A','I','I')
			AND ((
			   	NOT EXISTS (
	   				SELECT NULL FROM v_cst_submitted_awb_outbound VSUBM
	   				WHERE CAWB.FLT_TYPE = VSUBM.FLT_TYPE AND CAWB.FLT_KEY = VSUBM.FLT_KEY AND CAWB.FLT_DATE = VSUBM.FLT_DATE 
	   				AND CAWB.AWB_NO = VSUBM.AWB_NO
				) AND NOT EXISTS (
			  		SELECT NULL FROM CST_BD_DISC BDD
			  		WHERE CAWB.FLT_TYPE = BDD.FLT_TYPE AND CAWB.FLT_KEY = BDD.FLT_KEY AND CAWB.FLT_DATE = BDD.FLT_DATE 
			  		AND CAWB.AWB_NO = BDD.AWB_NO
			  	)
			   ) OR (
			  	EXISTS (
			  		SELECT NULL FROM V_CST_VSL_CC_CODE_AWB VCC_CODE 
			  		WHERE CC_CODE = 'ND' AND VCC_CODE.FLT_KEY = CAWB.FLT_KEY AND VCC_CODE.FLT_DATE = CAWB.FLT_DATE AND VCC_CODE.AWB_NO = CAWB.AWB_NO
			  		AND RECV_DATE > NVL((
			    		SELECT MAX(SUBM_DATE) FROM CST_SUBM SUBM
			    		JOIN CST_CSGNM CSGNM
			   		 	ON SUBM.FLT_KEY = CSGNM.FLT_KEY AND SUBM.FLT_DATE = CSGNM.FLT_DATE AND SUBM.MSG_TYPE = CSGNM.RECV_REC_TYPE AND SUBM.VER_NO = CSGNM.VER_NO
			    		WHERE SUBM.FLT_KEY = VCC_CODE.FLT_KEY AND SUBM.FLT_DATE = VCC_CODE.FLT_DATE AND CSGNM.AWB_NO = VCC_CODE.AWB_NO AND SUBM.SEND_STATUS NOT IN('E', 'R')
			  		), '01JAN00')
	   		  	)
      		  )
      		)
			ORDER BY awbNo		
		]]>
	</select>	
	
	
   	
   	<select id = "getVesselDetails" parameterClass="cargo.cms.customs.bo.CnsgnStatusDetailsBO"  resultClass="cargo.cms.customs.bo.CnsgnStatusDetailsBO">
                 SELECT  OPR.VESSEL_ID vesselId, 
	    			OPR.VESSEL_NAME vesselName, 
	    			OPR.VOYAGE_NUM voyageNum, 
	    			OPR.CALL_SIGN_VESSEL vesselFlightCallSign, 
	    			OPR.SHIPPING_AGENT shippingAgent,
	    			OPR.STFS_flt_key as stfsFltKey,
		   			to_char(OPR.STFS_flt_date,'DDMONYY')  as stfsFltDate,
		   			PKG_COMMON.get_flt_ata(OPR.FLT_KEY, OPR.SCH_DATE, OPR.FLT_TYPE) AS ata,
					PKG_COMMON.get_flt_eta(OPR.FLT_KEY, OPR.SCH_DATE, OPR.FLT_TYPE) AS eta
				FROM FLT_OPR OPR where flt_type = #fltType# and sch_date = #flightDate# and CARR_CODE= #flightName# and FLT_NO= #flightSecName#
	</select>      
		
	<select id="bdOutboundDiscList"  parameterClass="cargo.cms.customs.bo.BDDiscFlightBO" resultClass="cargo.cms.customs.bo.BDDiscFlightBO">		
			<![CDATA[
			SELECT  F.FLT_KEY AS flightKey, 
			to_char(F.SCH_DATE,'DDMONYY') AS flightDate, 
			F.stfs_flt_key as vesselflightKey,
			to_char(F.stfs_flt_date,'DDMONYY') as vesselflightDate,
			F.flt_type as flightType,
		      DECODE(nvl(S.Pty, 0), 0, 'No','Yes') AS discrPrty, 
		      DECODE(nvl(S.Nrml, 0), 0, 'No','Yes') AS discNormal, 
		      PKG_COMMON.get_flt_ata(F.FLT_KEY, F.SCH_DATE, 'A')  as arrivalTime ,
		      SUBSTR(TRIM(TO_CHAR(NVL(F.SCH_TIME,0),'0000')),0,2)|| ':'||  
		      SUBSTR(TRIM(TO_CHAR(NVL(F.SCH_TIME,0),'0000')),3,4)  as schTime ,            
		      'BDS' as recType,
		      TO_CHAR(CS.SUBM_DATE, 'DDMONYY HH24:MI') AS bdsSubmDate,
		      TO_CHAR(CC.SUBM_DATE,'DDMONYY HH24:MI') AS bdsComplDate,
		      DECODE(CS.SUBM_DATE,NULL,0,1) db_compl,
		      DECODE(CA.TR_NO, NULL, 'No', 'Yes') AS fltClr,
		      F.TR_NO as trNo,
					NVL(CASE WHEN CC.VER_NO > NVL(CS.VER_NO, 0) THEN CC.VER_NO ELSE CS.VER_NO END, 0) + 1 AS verNo,
					DECODE(CASE WHEN CC.VER_NO > NVL(CS.VER_NO, 0) THEN CC.SEND_STATUS ELSE CS.SEND_STATUS END, NULL, 'No Subm', 'P', 'In Progress', 'W', 'In Progress', 'A', 'Accepted', 'R', 'Rejected', 'E', 'Rejected') AS status,
					F.VESSEL_ID as vesselId,
					F.VESSEL_NAME as vesselName,
					F.VOYAGE_NUM as voyageNum,
					F.SHIPPING_AGENT as shippingAgent,
					F.CALL_SIGN_VESSEL as vesselFlightCallSign			
		     FROM FLT_OPR F 
		     LEFT JOIN mast_carrier ON f.carr_code=mast_carrier.code 
			 LEFT JOIN (SELECT S.FLT_KEY, S.FLT_DATE, 
					 	  SUM(NVL(CA.Pty, 0)) Pty, 
						  SUM(NVL(CA.Nrml, 0)) Nrml
					 	  FROM (
	              SELECT
	                  (pman.tt_pcs -  s.man_pcs) ABS_CIR_PCS,
	                  (pman.tt_wt -  s.man_wgt) ABS_CIR_WT,
	                  CASE
	                    WHEN s.man_pcs = 0 AND pman.tt_pcs > 0 THEN 'SC'
	                    WHEN s.man_pcs > 0 AND (pman.tt_pcs > s.man_pcs) THEN 'SP'    
	                    WHEN pman.tt_pcs = 0 AND s.man_pcs > 0 THEN 'LP'
	                    WHEN pman.tt_pcs > 0 AND (pman.tt_pcs < s.man_pcs) THEN 'LP'
	                  END BD_TYPE,
	                  S.*
	                FROM CST_AWB S
	                LEFT JOIN (select nvl(sum(pman_pcs),0) tt_pcs ,  nvl(sum (pman_wt),0) tt_wt, flt_key, flt_date, awb_No , awb_date 
									from exp_pmanifest_awb  GROUP BY flt_key, flt_date, awb_No, awb_date) pman 
	                ON s.AWB_NO = pman.AWB_NO AND s.AWB_DATE = pman.AWB_DATE AND s.FLT_KEY = pman.FLT_KEY AND s.FLT_DATE = pman.FLT_DATE
	            ) S
            JOIN EXP_CAR A ON S.AWB_NO = A.AWB_NO AND S.AWB_DATE = A.AWB_DATE
					  left join (SELECT AWB_NO, AWB_DATE, FLT_KEY, FLT_DATE,
					  	   		decode(REL_IND, null, 0, 1) Pty, 
					  			decode(REL_IND, null, 1, 0) Nrml
								FROM cst_awb) ca 
					  	   ON S.AWB_NO = ca.AWB_NO AND S.AWB_DATE = ca.AWB_DATE AND S.FLT_KEY = ca.FLT_KEY AND S.FLT_DATE = ca.FLT_DATE
					  LEFT JOIN (SELECT B.FLT_KEY, B.FLT_DATE, B.AWB_NO, B.AWB_DATE, B.HAWB_NO, B.BRKDN_CODE, SUM(B.OT_BKDWN_PCS) OT_BKDWN_PCS, SUM(B.OT_BKDWN_WT) OT_BKDWN_WT
								   FROM  CST_BD_DISC B
								   WHERE B.FLT_TYPE = 'E' 
								   AND   B.MSG_TYPE = 'B' 
								   GROUP BY B.FLT_KEY, B.FLT_DATE, B.AWB_NO, B.AWB_DATE, B.HAWB_NO, B.BRKDN_CODE) BD
							ON S.AWB_NO = BD.AWB_NO AND  S.AWB_DATE = BD.AWB_DATE AND S.FLT_KEY = BD.FLT_KEY AND S.FLT_DATE = BD.FLT_DATE AND S.BD_TYPE = BD.BRKDN_CODE 
					  WHERE (S.BD_TYPE IS NOT NULL OR BD.FLT_KEY IS NOT NULL) 
            GROUP BY S.FLT_KEY, S.FLT_DATE ) S 
				ON F.FLT_KEY = S.FLT_KEY AND F.SCH_DATE = S.FLT_DATE
            LEFT JOIN (SELECT FLT_KEY, FLT_DATE, MAX(TR_NO) TR_NO
				 	  FROM CST_ACK WHERE ACK_REC_TYPE IN ('CLR') AND FLT_TYPE = 'E' 
					  GROUP BY FLT_KEY, FLT_DATE) CA 
				 ON NVL(STFS_FLT_KEY,F.FLT_KEY) = CA.FLT_KEY AND NVL(STFS_FLT_DATE,F.SCH_DATE) = CA.FLT_DATE 
            LEFT JOIN (SELECT FLT_KEY, FLT_DATE, SUBM_DATE, VER_NO, SEND_STATUS
					  FROM (SELECT FLT_KEY, FLT_DATE, SUBM_DATE, VER_NO, SEND_STATUS,
						   DENSE_RANK() OVER (PARTITION BY FLT_KEY, FLT_DATE ORDER BY SUBM_DATE DESC) RANK 
						   FROM  CST_SUBM 
						   WHERE FLT_TYPE = 'E' 
						   AND   REC_TYPE = 'BDS' AND BD_COMPLETE IS NULL) 
					  WHERE RANK = 1) CS 
				 ON NVL(STFS_FLT_KEY,F.FLT_KEY) = CS.FLT_KEY AND NVL(STFS_FLT_DATE,F.SCH_DATE) = CS.FLT_DATE
            LEFT JOIN (SELECT FLT_KEY, FLT_DATE, SUBM_DATE, VER_NO, SEND_STATUS 
					  FROM (SELECT FLT_KEY, FLT_DATE, SUBM_DATE, VER_NO, SEND_STATUS,
						   DENSE_RANK() OVER (PARTITION BY FLT_KEY, FLT_DATE ORDER BY SUBM_DATE DESC) RANK 
						   FROM  CST_SUBM 
						   WHERE FLT_TYPE = 'E' 
						   AND   REC_TYPE = 'BDS' AND BD_COMPLETE = 'Y') 
					  WHERE RANK = 1) CC 
				 ON NVL(STFS_FLT_KEY,F.FLT_KEY) = CC.FLT_KEY AND NVL(STFS_FLT_DATE,F.SCH_DATE) = CC.FLT_DATE
            LEFT JOIN (SELECT FLT_KEY, FLT_DATE, VER_NO, ACK_DATE
					  FROM (SELECT FLT_KEY, FLT_DATE, VER_NO, ACK_DATE,
						   DENSE_RANK() OVER (PARTITION BY FLT_KEY, FLT_DATE, VER_NO ORDER BY ACK_DATE DESC) RANK 
						   FROM  CST_ACK 
						   WHERE ACK_REC_TYPE IN ('BDS') AND FLT_TYPE = 'E') 
					  WHERE RANK = 1) ST
				 ON CS.FLT_KEY = ST.FLT_KEY AND CS.FLT_DATE = ST.FLT_DATE AND CS.VER_NO = ST.VER_NO
		   WHERE 
		   ]]>
		    F.FLT_TYPE = 'D' AND NVL(mast_carrier.vessel_flt_yn,'N')='Y'
           	<isNotEmpty property="flightKey">
                  AND F.FLT_KEY = #flightKey#
            </isNotEmpty> 
            AND F.SCH_DATE = TO_DATE(#flightDate#,'DDMONYY') AND F.stfs_flt_key is not null          	
            ORDER BY SCH_TIME
	</select>
	
	
   	<select id="fetchOutboundBDflightDetails"  parameterClass="cargo.cms.customs.bo.BDDiscDetailsBO" resultClass="cargo.cms.customs.bo.BDDiscDetailsBO">	 
	<![CDATA[
		SELECT 
		A.AWB_NO AS awbNo,		
		to_char(A.AWB_DATE,'DDMONYY') AS awbDate,		
		'N' as consoleInd,
   		'000000000000000000' AS hawbNo,
		DECODE(CA.REL_IND,'Y',1,0) as relInd,
		( SELECT FUN_VSL_SHP_PPK_TYPE(S.FLT_KEY,S.FLT_DATE,'I',A.AWB_NO) FROM DUAL ) as ppkInd,
		CASE WHEN S.ACT_BD_TYPE = 'DM' 
			 THEN 0 ELSE NVL(S.ABS_CIR_PCS,0) - NVL(BDS.OT_BKDWN_PCS, 0) END AS discPcs,
		CASE WHEN S.ACT_BD_TYPE = 'DM' 
			 THEN 0 ELSE NVL(S.ABS_CIR_WT,0) - NVL(BDS.OT_BKDWN_WT, 0) END AS discWt,
		V.CC_CODE as cc, 
		nvl(CA.HDLG_AGENT,'CPCT') AS handler, 
		S.ACT_BD_TYPE as type,
		''  VER_NO,
		NVL(S.man_pcs,0) AS manfPc,
		NVL(S.man_wgt,0) AS manfWt,
		NVL(S.man_pcs,0) 
			+ CASE WHEN S.ACT_BD_TYPE = 'DM' THEN NVL(BDS.OT_BKDWN_PCS, 0) ELSE NVL(BDS.OT_BKDWN_PCS, 0) + (NVL(S.ABS_CIR_PCS,0) - NVL(BDS.OT_BKDWN_PCS, 0))  END AS suppPc,
		NVL(S.man_wgt,0) 
			+ CASE WHEN S.ACT_BD_TYPE = 'DM' THEN NVL(BDS.OT_BKDWN_WT, 0) ELSE NVL(BDS.OT_BKDWN_WT, 0) + (NVL(S.ABS_CIR_WT,0) - NVL(BDS.OT_BKDWN_WT, 0)) END AS suppWt,
		s.man_pcs invPc,
		s.man_wgt invWt,		
		V.REF_NO AS ctmRefNo,
		S.ABS_CIR_PCS AS cirPc,
		S.ABS_CIR_WT AS cirWt,
		A.PCS AS awbPcs,
		A.WT AS awbWt
		FROM (select t.*, nvl(ddt.tt_pcs, 0) tt_pcs, nvl(ddt.tt_wt, 0) tt_wt, case when nvl(ddt.tt_pcs,0) > 0 and t.bd_type = 'LC' then 'LP' else t.bd_type end ACT_BD_TYPE
      from (          
	        SELECT (nvl(pman.tt_pcs,0) - s.man_pcs) ABS_CIR_PCS,
      			   (nvl(pman.tt_wt,0)  - s.man_wgt) ABS_CIR_WT,
				  CASE
				    WHEN s.man_pcs  = 0    AND nvl(pman.tt_pcs,0) > 0    THEN 'SC'
				    WHEN s.man_pcs   > 0    AND (nvl(pman.tt_pcs,0) > s.man_pcs)    THEN 'SP'
				    WHEN nvl(pman.tt_pcs,0) = 0    AND s.man_pcs    > 0    THEN 'LC'
				    WHEN nvl(pman.tt_pcs,0) > 0    AND (nvl(pman.tt_pcs,0) < s.man_pcs)    THEN 'LP'
				  END BD_TYPE,  'B' ind,  S.*
                FROM CST_AWB S
                LEFT JOIN (select nvl(sum(pman_pcs),0) tt_pcs ,  nvl(sum (pman_wt),0) tt_wt, flt_key, flt_date, awb_No , awb_date 
								from exp_pmanifest_awb  GROUP BY flt_key, flt_date, awb_No, awb_date) pman 
                ON s.AWB_NO = pman.AWB_NO AND s.AWB_DATE = pman.AWB_DATE AND s.FLT_KEY = pman.FLT_KEY AND s.FLT_DATE = pman.FLT_DATE
           union all
      			  SELECT (nvl(pman.tt_pcs,0) - s.man_pcs) ABS_CIR_PCS,
      			   (nvl(pman.tt_wt,0)  - s.man_wgt) ABS_CIR_WT,
				  CASE
				    WHEN s.man_pcs  = 0    AND nvl(pman.tt_pcs,0) > 0    THEN 'SC'
				    WHEN s.man_pcs   > 0    AND (nvl(pman.tt_pcs,0) > s.man_pcs)    THEN 'SP'
				    WHEN nvl(pman.tt_pcs,0) = 0    AND s.man_pcs    > 0    THEN 'LC'
				    WHEN nvl(pman.tt_pcs,0) > 0    AND (nvl(pman.tt_pcs,0) < s.man_pcs)    THEN 'LP'
                  END BD_TYPE,'B' ind, S.*
                FROM CST_AWB S
                LEFT JOIN (select nvl(sum(pman_pcs),0) tt_pcs ,  nvl(sum (pman_wt),0) tt_wt, flt_key, flt_date, awb_No , awb_date 
								from exp_pmanifest_awb  GROUP BY flt_key, flt_date, awb_No, awb_date) pman 
                ON s.AWB_NO = pman.AWB_NO AND s.AWB_DATE = pman.AWB_DATE AND s.FLT_KEY = pman.FLT_KEY AND s.FLT_DATE = pman.FLT_DATE
                where exists (select null from (SELECT B.FLT_KEY, B.FLT_DATE, B.AWB_NO, B.AWB_DATE, B.HAWB_NO, SUM(B.OT_BKDWN_PCS) OT_BKDWN_PCS, SUM(B.OT_BKDWN_WT) OT_BKDWN_WT
						   FROM  CST_BD_DISC B
						   LEFT JOIN CST_ACK A ON A.FLT_KEY = B.FLT_KEY AND A.FLT_DATE = B.FLT_DATE AND A.FLT_TYPE = B.FLT_TYPE 
						   		AND A.VER_NO = B.VER_NO AND A.ACK_REC_TYPE = 'BDS'
						   WHERE BRKDN_CODE in ('LP', 'LC', 'SP', 'SC') 
						   and B.FLT_TYPE = 'I' 
						   AND   B.MSG_TYPE = 'B' 
						   AND A.ACK_STATUS = 'A' 
						   GROUP BY B.FLT_KEY, B.FLT_DATE, B.AWB_NO, B.AWB_DATE, B.HAWB_NO) t
					  where t.FLT_KEY = S.FLT_KEY and t.FLT_DATE = S.FLT_DATE 
				  	  and t.AWB_NO = S.AWB_NO and t.AWB_DATE = s.AWB_DATE and t.HAWB_NO = '000000000000000000'
					 )
		      ) t     
		    LEFT JOIN (select nvl(sum(actual_pcs),0) tt_pcs ,  nvl(sum (actual_Wt),0) tt_wt, flt_key, flt_date, awb_No , awb_date 
				 from v_ddt_dtl  where (shp_trf_type = 'TT'  or  trf_type = 'IF') GROUP BY flt_key, flt_date, awb_No, awb_date) ddt 
		      ON t.AWB_NO = ddt.AWB_NO AND t.AWB_DATE = ddt.AWB_DATE AND t.FLT_KEY = ddt.FLT_KEY AND t.FLT_DATE = ddt.FLT_DATE
		    ) S
				JOIN EXP_CAR A ON S.AWB_NO = A.AWB_NO AND S.AWB_DATE = A.AWB_DATE
				LEFT JOIN CST_AWB CA ON S.AWB_NO = CA.AWB_NO AND S.FLT_KEY = CA.FLT_KEY AND S.FLT_DATE = CA.FLT_DATE
				LEFT JOIN v_cst_vsl_cc_code_awb V ON V.FLT_KEY = S.FLT_KEY AND V.FLT_DATE = S.FLT_DATE AND V.AWB_NO = S.AWB_NO AND HAWB_NO = '000000000000000000'
				LEFT JOIN (SELECT AWB_NO, AWB_DATE, FLT_KEY, FLT_DATE, MIN(SEQ_NO) SEQ_NO, SUM(LOCN_PCS) INV_PCS, SUM(LOCN_WT) INV_WT
						  FROM AWB_INVENTORY 
						  GROUP BY AWB_NO, AWB_DATE, FLT_KEY, FLT_DATE) I 
				   	ON S.AWB_NO = I.AWB_NO AND S.AWB_DATE = I.AWB_DATE AND S.FLT_KEY = I.FLT_KEY AND S.FLT_DATE = I.FLT_DATE
				LEFT JOIN (SELECT B.FLT_KEY, B.FLT_DATE, B.AWB_NO, B.AWB_DATE, B.HAWB_NO, B.BRKDN_CODE, SUM(B.OT_BKDWN_PCS) OT_BKDWN_PCS, SUM(B.OT_BKDWN_WT) OT_BKDWN_WT
						   FROM  CST_BD_DISC B
						   LEFT JOIN CST_ACK A ON A.FLT_KEY = B.FLT_KEY AND A.FLT_DATE = B.FLT_DATE AND A.FLT_TYPE = B.FLT_TYPE 
						   		AND A.VER_NO = B.VER_NO AND A.ACK_REC_TYPE = 'BDS'
						   WHERE B.FLT_TYPE = 'I' 
						   AND   B.MSG_TYPE = 'B' 
						   AND A.ACK_STATUS = 'A'
						   GROUP BY B.FLT_KEY, B.FLT_DATE, B.AWB_NO, B.AWB_DATE, B.HAWB_NO, B.BRKDN_CODE) BD
					ON  S.AWB_NO = BD.AWB_NO AND  S.AWB_DATE = BD.AWB_DATE AND  S.FLT_KEY = BD.FLT_KEY 
					   AND   S.FLT_DATE = BD.FLT_DATE AND  BD.HAWB_NO = '000000000000000000'
					   AND  S.ACT_BD_TYPE = BD.BRKDN_CODE 
				LEFT JOIN (SELECT B.FLT_KEY, B.FLT_DATE, B.AWB_NO, B.AWB_DATE, B.HAWB_NO, SUM(B.OT_BKDWN_PCS) OT_BKDWN_PCS, SUM(B.OT_BKDWN_WT) OT_BKDWN_WT,
					 	   		  sum(case when b.BRKDN_CODE in ('LP', 'LC', 'SP', 'SC') then 1 else 0 end) ackInd
						   FROM  CST_BD_DISC B
						   LEFT JOIN CST_ACK A ON A.FLT_KEY = B.FLT_KEY AND A.FLT_DATE = B.FLT_DATE AND A.FLT_TYPE = B.FLT_TYPE 
						   		AND A.VER_NO = B.VER_NO AND A.ACK_REC_TYPE = 'BDS'
						   WHERE B.FLT_TYPE = 'I' 
						   AND   B.MSG_TYPE = 'B' 
						   AND A.ACK_STATUS = 'A' 
						   GROUP BY B.FLT_KEY, B.FLT_DATE, B.AWB_NO, B.AWB_DATE, B.HAWB_NO) BDS
					ON S.AWB_NO = BDS.AWB_NO AND  S.AWB_DATE = BDS.AWB_DATE AND  S.FLT_KEY = BDS.FLT_KEY 
					   AND   S.FLT_DATE = BDS.FLT_DATE AND  BDS.HAWB_NO = '000000000000000000'
				WHERE ( ( NVL(S.ACT_BD_TYPE, '*') != 'DM' AND nvl( S.ACT_BD_TYPE, '*') = NVL(BD.BRKDN_CODE, nvl(S.ACT_BD_TYPE, '*')) 
					  			AND (NVL(S.ABS_CIR_PCS, 0) != NVL(BDS.OT_BKDWN_PCS, 0) or NVL(S.ABS_CIR_WT, 0) != NVL(BDS.OT_BKDWN_WT, 0) ) ) OR (BDS.FLT_KEY IS NULL)
					) and ((s.ind not in ('N', 'HN') and (BDS.FLT_KEY IS NULL or BDS.ACKIND = 0)) or s.ind in ('N', 'HN'))  
				AND A.CATALOG NOT IN ('TM', 'IO')
		    AND NVL(S.ABS_CIR_PCS,0) - NVL(BDS.OT_BKDWN_PCS, 0) != 0
		    ]]>
		    AND S.FLT_KEY = #flightKey#
				AND S.FLT_DATE = #flightDate#		
				ORDER BY A.AWB_NO
	</select> 

	<select id="getBookingFlight" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">						
		select distinct 
		    fbl.flt_key FLT_KEY,
		    to_char(fbl.flt_date,'DDMONYY') FLT_DATE 
		    from (SELECT shp.awb_no,shp.awb_date,fbl.flt_key,fbl.flt_date FROM edi_fbl fbl
		          	JOIN edi_fbl_shp shp ON shp.tr_no = fbl.tr_no
		          	WHERE shp.awb_no is not null AND fbl.si_type   IN ('S','I') AND fbl.FBL_STATUS = 'P') fbl
		    JOIN imp_car_shp shp ON shp.awb_no = fbl.awb_no AND shp.awb_date = fbl.awb_date 
		    join flt_opr opr on opr.flt_key = shp.flt_key and opr.sch_date = shp.flt_date AND opr.flt_type = 'A'
		    where shp.flt_key = #fltKey# and shp.flt_date = to_date(#fltDate#,'DDMONYY')		    
	</select>  
	
	<select id="checkFBLFlightASPExists" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">						
		SELECT count(1) FLT_DATE FROM edi_fbl fbl
			JOIN edi_fbl_shp shp ON shp.tr_no = fbl.tr_no
			JOIN imp_car_shp car ON shp.awb_no    = car.awb_no AND shp.awb_date = car.awb_date
			LEFT JOIN flt_opr opr ON opr.flt_key = car.flt_key AND opr.sch_date = car.flt_date AND opr.flt_type = 'A'
			WHERE shp.awb_no                               IS NOT NULL
			AND fbl.si_type                                IN ('S','I')
			AND fbl.FBL_STATUS                              = 'P'
			AND fbl.flt_key                                 = #fltKey#
			AND fbl.flt_date                                = to_date(#fltDate#,'DDMONYY')
			AND FUN_CHK_ASP_EXISTS(shp.awb_no,shp.awb_date) = 'Y'
			AND opr.stfs_flt_key                           IS NOT NULL
	</select>

	<select id="getLatestCFERecord" parameterClass="java.util.HashMap"  resultClass="java.lang.String">
		SELECT tr_type FROM (SELECT tr_type FROM CST_CFE_QUEUE where flt_key = #fltKey#  AND sch_date = to_date(#fltDate#,'DDMONYY') ORDER BY cr_date DESC) WHERE rownum = 1
	</select>

	<insert id="insertCFEQueue" parameterClass="java.util.HashMap">
		insert into CST_CFE_QUEUE values(CST_CFE_QUEUE_SEQ.NEXTVAL,#fltKey#, #fltDate#, 'P', #trType#,'SYSTEM', sysdate,'SYSTEM',sysdate)
	</insert>
	
	<select id="checkCFASendCnt" parameterClass="java.util.HashMap"  resultClass="java.lang.String">
		SELECT FUN_CHK_CFA_EXISTS(#fltKey#,#fltDate#) FROM DUAL
	</select>
	
	
	<select id="getBookingFlightLocal" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">						
		WITH FBL AS  (SELECT shp.awb_no, shp.awb_date, fbl.flt_key, TO_CHAR(fbl.flt_date,'DDMONYY') flt_date  FROM edi_fbl fbl
		  JOIN edi_fbl_shp shp  ON shp.TR_NO = fbl.TR_NO  WHERE fbl.si_type IN('S','I')  AND fbl.fbl_status ='P'
		  AND shp.awb_no = #awbNo# and shp.awb_date = to_date(#awbDate#,'DDMONYY')
		  AND FUN_CHK_ASP_EXISTS(shp.awb_no,shp.awb_date) = 'Y' ),
		  RCL AS  (SELECT t1.awb_no, t1.awb_date FROM exp_rcl_hd t1 WHERE t1.ppk_type = 'B' and t1.STATUS = 'S' AND t1.awb_no = #awbNo# and t1.awb_date = to_date(#awbDate#,'DDMONYY')),
		  CC_CODE AS  (SELECT V.AWB_NO , V.AWB_DATE  FROM V_CST_AWB_AP_CC_CODE V  WHERE V.HAWB_NO = '000000000000000000' AND V.CC_CODE   ='AP' AND  V.awb_no = #awbNo# and V.awb_date = to_date(#awbDate#,'DDMONYY'))
		SELECT distinct f.flt_key , f.flt_date FROM FBL F , RCL R , CC_code C WHERE F.awb_no = R.awb_no AND f.awb_date = R.awb_date AND C.awb_no = R.awb_no AND C.awb_date = R.awb_date
	</select>
	
	
	<select id="checkAPExistsForLocalShip" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">						
		SELECT count(1) FLT_DATE FROM edi_fbl fbl
			JOIN edi_fbl_shp shp ON shp.tr_no = fbl.tr_no
			JOIN exp_rcl_hd rcl ON shp.awb_no    = rcl.awb_no AND shp.awb_date = rcl.awb_date and rcl.STATUS = 'S'
			JOIN V_CST_AWB_AP_CC_CODE V ON V.HAWB_NO = '000000000000000000' AND V.CC_CODE   ='AP' AND V.awb_no    = rcl.awb_no AND V.awb_date = rcl.awb_date
			WHERE shp.awb_no   IS NOT NULL
			AND fbl.si_type    IN ('S','I')
			AND fbl.FBL_STATUS = 'P'
			AND fbl.flt_key    = #fltKey#
			AND fbl.flt_date   = to_date(#fltDate#,'DDMONYY')
			AND FUN_CHK_ASP_EXISTS(shp.awb_no,shp.awb_date) = 'Y'
	</select>  	  
	
	
	<select id="getDCImportFlightList" parameterClass="map" resultClass="cargo.cms.common.utils.bo.DCQueryBO"> 
		WITH FLT AS(
			SELECT
            ROWNUM AS fltCnt,
            FLT_KEY     AS fltKey,
					  to_char(SCH_DATE,'DDMONYY')    AS fltDate,
					  to_char(SCH_DATE,'YYYY-MM-DD') AS fltCustomsDate, 
					  (SELECT DECODE(COUNT(0), 0, 'N','Y')  FROM CST_DC_DTL where shpm_type = 'I' AND flt_key = opr.flt_key and flt_date = opr.sch_date and opr.flt_type = 'A') as dcExists
					FROM flt_opr opr
					WHERE FLT_TYPE = 'A' AND SCH_DATE BETWEEN #startDate# AND #endDate#	AND CARR_CODE = NVL(#carrier#,CARR_CODE) 
					AND opr.CARR_CODE NOT IN (SELECT CODE FROM mast_carrier where nvl(dummy_carr,'N') = 'Y')
		            AND not Exists (SELECT RULE_VALUE FROM CMSRULES where RULE_CODE = 'STFS_SB_DUMMY_FLIGHT' AND rule_value = substr(opr.FLT_KEY,0,2) )
		            AND not Exists (SELECT RULE_VALUE FROM CMSRULES where RULE_CODE = 'STFS_NB_DUMMY_FLIGHT' AND rule_value = substr(opr.FLT_KEY,0,2) )
					order by SCH_DATE) 
			SELECT ROWNUM AS declareNo,(SELECT COUNT(fltCnt) FROM FLT) AS totFlightCount,F.* FROM FLT F
	</select>
	  	  
	  	  
	<select id="getDCExportFlightList" parameterClass="map" resultClass="cargo.cms.common.utils.bo.DCQueryBO"> 
		  WITH FLT AS(
			SELECT ROWNUM AS fltCnt,
					  FLT_KEY     AS fltKey,
					  to_char(SCH_DATE,'DDMONYY')    AS fltDate, 
					  to_char(SCH_DATE,'YYYY-MM-DD') AS fltCustomsDate,
					  (SELECT DECODE(COUNT(0), 0, 'N','Y')  FROM GT_DUT_GD_EXP where  flt_key = opr.flt_key and sch_date = opr.sch_date and 
					        AWB_NO != '(NIL)' AND opr.flt_type = 'D') as dcExists,
					  (SELECT OFF_POINT FROM flt_opr_leg  where BRD_POINT = 'HKG' AND FLT_TYPE = 'D' AND FLT_KEY = opr.flt_key AND SCH_DATE = opr.sch_date AND ROWNUM = 1) as offPoint
					FROM flt_opr opr
					WHERE FLT_TYPE = 'D' AND SCH_DATE BETWEEN #startDate# AND #endDate#	AND CARR_CODE = NVL(#carrier#,CARR_CODE) 
					AND opr.CARR_CODE NOT IN (SELECT CODE FROM mast_carrier where nvl(dummy_carr,'N') = 'Y')
		            AND not Exists (SELECT RULE_VALUE FROM CMSRULES where RULE_CODE = 'STFS_SB_DUMMY_FLIGHT' AND rule_value = substr(opr.FLT_KEY,0,2) )
		            AND not Exists (SELECT RULE_VALUE FROM CMSRULES where RULE_CODE = 'STFS_NB_DUMMY_FLIGHT' AND rule_value = substr(opr.FLT_KEY,0,2) )
					order by SCH_DATE) 
			SELECT ROWNUM AS declareNo,(SELECT COUNT(fltCnt) FROM FLT) AS totFlightCount,F.* FROM FLT F
	</select>
	
	
	<select id="dcCSVInfoHeader" parameterClass="java.lang.String"  resultClass="java.lang.String">
		 <![CDATA[
		  select 
			'"' || 'Declare No.' || '"' || ',' ||
			'"' || 'Trading Details' || '"' || ',' ||
			'"' || 'Dutiable Commodities' || '"' || ',' ||
			'"' || 'Dutiable Stores' || '"' || ',' ||
			'"' || 'Hydrocarbon Oil' || '"' || ',' ||
			'"' || 'Tobacco' || '"' || ',' ||
			'"' || 'Methyl Alcohol' || '"' || ',' ||
			'"' || 'Liquors' || '"' || ',' ||
			'"' || 'Transport Mode' || '"' || ',' ||
			'"' || 'Transport Name' || '"' || ',' ||
			'"' || 'Voyage Number' || '"' || ',' ||
			'"' || 'Arrival Date' || '"' || ',' ||
			'"' || 'Last Port of Call' || '"' || ',' ||
			'"' || 'Bill of Lading No./Air Waybill No.' || '"' || ',' ||
			'"' || 'House Air Waybill No.' || '"' || ',' ||
			'"' || 'Container Type' || '"' || ',' ||
			'"' || 'Container No.' || '"' || ',' ||
			'"' || 'Markings on Containers' || '"' || ',' ||
			'"' || 'Description of Goods' || '"' || ',' ||
			'"' || 'Name of Consignee' || '"' || ',' ||
			'"' || 'Address of Consignee' || '"' || ',' ||
			'"' || 'DC Quantity' || '"' || ',' ||
			'"' || 'DC Unit' || '"' || ',' ||
			'"' || 'DC Quantity (Per case)' || '"' || ',' ||
			'"' || 'DC Unit (Per case)' || '"' || ',' ||
			'"' || 'Permit No.' || '"' || ',' ||
			'"' || 'Demand Note' || '"' || ',' ||
			'"' || 'CED94/CED94C' || '"' || ',' ||
			'"' || 'Remarks' || '"' || ',' ||
			'"' || 'Aircraft Spirit Quantity (Litres)' || '"' || ',' ||
			'"' || 'Light Diesel Oil Quantity (Litres)' || '"' || ',' ||
			'"' || 'Motor Spirit (Leaded Petrol) Quantity (Litres)' || '"' || ',' ||
			'"' || 'Motor Spirit (Unleaded Petrol) Quantity (Litres)' || '"' || ',' ||
			'"' || 'Kerosene Quantity (Litres)' || '"' || ',' ||
			'"' || 'Cigarettes Quantity (Pieces)' || '"' || ',' ||
			'"' || 'Cigars Quantity (Pieces)' || '"' || ',' ||
			'"' || 'Smoking Tobacco Quantity (Kilograms)' || '"' || ',' ||
			'"' || 'Chinese Prepared Tobacco Quantity (Kilograms)' || '"' || ',' ||
			'"' || 'Methyl Alcohol (Pure) Quantity (Litres)' || '"' || ',' ||
			'"' || 'Methyl Alcohol (Mixtures) Quantity (Litres)' || '"' || ',' ||
			'"' || 'Whisky Quantity' || '"' || ',' ||
			'"' || 'Whisky Unit' || '"' || ',' ||
			'"' || 'Brandy Quantity' || '"' || ',' ||
			'"' || 'Brandy Unit' || '"' || ',' ||
			'"' || 'Gin Quantity' || '"' || ',' ||
			'"' || 'Gin Unit' || '"' || ',' ||
			'"' || 'Rum Quantity' || '"' || ',' ||
			'"' || 'Rum Unit' || '"' || ',' ||
			'"' || 'Liqueur > 30% (Alcoholic Strength) Quantity' || '"' || ',' ||
			'"' || 'Liqueur > 30% (Alcoholic Strength) Unit' || '"' || ',' ||
			'"' || 'Other Liquors > 30% (Alcoholic Strength) Quantity' || '"' || ',' ||
			'"' || 'Other Liquors > 30% (Alcoholic Strength) Unit' || '"' || ',' ||
			'"' || 'Ethyl Alcohol (Pure) > 30% (Alcoholic Strength) Quantity (Litres)' || '"' || ',' ||
			'"' || 'Ethyl Alcohol (Mixture) > 30% (Alcoholic Strength) Quantity (Litres)' || '"' 
			from dual
			]]>
	</select>
	 
	<select id="getFlightDCShipmentRecords" parameterClass="cargo.cms.common.utils.bo.DCQueryBO" resultClass="cargo.cms.common.utils.bo.DCQueryBO">
		  WITH DC_CODE AS ( select distinct c.dut_code as dut_code FROM CST_DC_DTL d
			LEFT JOIN CST_CODE_DTL c ON d.FLT_KEY    = c.FLT_KEY AND d.FLT_DATE  = c.FLT_DATE AND d.SHPM_TYPE = c.FLT_TYPE
			LEFT JOIN IMP_CAR_AWB a ON a.AWB_NO    = d.AWB_NO AND a.AWB_DATE = d.AWB_DATE
			where d.flt_key = #fltKey# and d.flt_date = to_date(#fltDate#,'DDMONYY') and d.SHPM_TYPE = 'I'
			 )
		  SELECT 
			'"' || #declareNo# || '"' || ',' ||
			'"' || '' || '"' || ',' ||
			'"' || 'Y' || '"' || ',' ||
			'"' || '' || '"' || ',' ||
			'"' || (case when c.dut_code ='H' then 'Y' else '' end) || '"' || ',' ||
			'"' || (case when c.dut_code ='T' then 'Y' else '' end) || '"' || ',' ||
			'"' || (case when c.dut_code ='M' then 'Y' else '' end) || '"' || ',' ||
			'"' || (case when c.dut_code ='L' then 'Y' else '' end) || '"' || ',' ||
			'"' || '' || '"' || ',' ||
			'"' || '' || '"' || ',' ||
			'"' || '' || '"' || ',' ||
			'"' || '' || '"' || ',' ||
			'"' || '' || '"' || ',' ||
			'"' ||  DECODE(c.AWB_NO,NULL,'',c.AWB_NO) || '"' || ',' ||
			'"' ||  DECODE(c.HAWB_NO, '000000000000000000','',c.HAWB_NO) || '"' || ',' ||
			'"' || 'N/A' || '"' || ',' ||
			'"' || 'N/A' || '"' || ',' ||
			'"' || 'N/A' || '"' || ',' ||
			'"' || a.content || '"' || ',' ||
			'"' || a.csgne_name || '"' || ',' ||
			'"' || SUBSTR( ( NVL(a.csgne_addr1,'') || ' ' || NVL(a.csgne_addr2,'') || ' ' || NVL(a.csgne_addr3,'')|| ' ' || NVL(a.csgne_addr4,'')|| ' ' || NVL(a.csgne_addr5,'')
			|| ' ' || NVL(a.csgne_ctry_code,'')  || ' ' || NVL(a.csgne_pin_code,'') ),0,128 ) || '"' || ',' ||
			'"' || (case when c.dut_UNIT  ='MIL' then (nvl(pDtl.dcp_qty,c.dut_qty) * 1000 ) else nvl(pDtl.dcp_qty,c.dut_qty) end ) || '"' || ',' ||
			'"' || (case when c.dut_UNIT  ='LIT' then 'L' 
					when c.dut_UNIT  ='KG' then 'KG' when c.dut_UNIT  ='BOT' then 'BT'  
					when c.dut_UNIT  ='ST' then 'PS'
					when c.dut_UNIT  ='MIL' then 'PS'
					else c.dut_UNIT end)  || '"' || ',' ||
			'"' || '' || '"' || ',' ||
			'"' || '' || '"' || ',' ||
			'"' || pDtl.pmt_no || '"' || ',' ||
			'"' || '' || '"' || ',' ||
			'"' || '' || '"' || ',' ||
			'"' || '' || '"' || ',' ||
			'"' || '' || '"' || ',' ||
			'"' || '' || '"' || ',' ||
			'"' || '' || '"' || ',' ||
			'"' || '' || '"' || ',' ||
			'"' || '' || '"' || ',' ||
			'"' || '' || '"' || ',' ||
			'"' || '' || '"' || ',' ||
			'"' || '' || '"' || ',' ||
			'"' || '' || '"' || ',' ||
			'"' || '' || '"' || ',' ||
			'"' || '' || '"' || ',' ||
			'"' || '' || '"' || ',' ||
			'"' || '' || '"' || ',' ||
			'"' || '' || '"' || ',' ||
			'"' || '' || '"' || ',' ||
			'"' || '' || '"' || ',' ||
			'"' || '' || '"' || ',' ||
			'"' || '' || '"' || ',' ||
			'"' || '' || '"' || ',' ||
			'"' || '' || '"' || ',' ||
			'"' || '' || '"' || ',' ||
			'"' || '' || '"' || ',' ||
			'"' || '' || '"' || ',' ||
			'"' || '' || '"' || ',' ||
			'"' || '' || '"'  as csvRecord , (select STRAGG(STRINGDELIM(dut_code, ',')) from DC_CODE) dutCode
			FROM CST_DC_DTL d
			LEFT JOIN CST_CODE_DTL c ON d.FLT_KEY    = c.FLT_KEY AND d.FLT_DATE  = c.FLT_DATE AND d.SHPM_TYPE = c.FLT_TYPE AND c.AWB_NO    = d.AWB_NO AND c.AWB_DATE = d.AWB_DATE
			LEFT JOIN IMP_CAR_AWB a ON a.AWB_NO    = d.AWB_NO AND a.AWB_DATE = d.AWB_DATE
			LEFT join cst_permit_dtl pDtl ON  pDtl.flt_type = nvl( 'I', pDtl.flt_type)  and pDtl.flt_key = c.flt_key and pDtl.flt_date = c.flt_date and pDtl.awb_no = c.awb_no and pDtl.awb_date = c.awb_date
                                               and pDtl.hawb_no = c.hawb_no AND pDtl.dut_code = c.dut_code   
			where d.flt_key = #fltKey# and d.flt_date = to_date(#fltDate#,'DDMONYY') and d.SHPM_TYPE = 'I'			  
	</select>
	
	
	<select id="dcCSVInfoHeaderExp" parameterClass="java.lang.String"  resultClass="java.lang.String">
		 <![CDATA[
		 select 
			'"' || 'Declare No.' || '"' || ',' ||
			'"' || 'Trading Details' || '"' || ',' ||
			'"' || 'Dutiable Commodities' || '"' || ',' ||
			'"' || 'Dutiable Stores' || '"' || ',' ||
			'"' || 'Hydrocarbon Oil' || '"' || ',' ||
			'"' || 'Tobacco' || '"' || ',' ||
			'"' || 'Methyl Alcohol' || '"' || ',' ||
			'"' || 'Liquors' || '"' || ',' ||
			'"' || 'Transport Mode' || '"' || ',' ||
			'"' || 'Transport Name' || '"' || ',' ||
			'"' || 'Voyage Number' || '"' || ',' ||
			'"' || 'Departure Date' || '"' || ',' ||
			'"' || 'Next Port of Call' || '"' || ',' ||
			'"' || 'Bill of Lading No./Air Waybill No.' || '"' || ',' ||
			'"' || 'House Air Waybill No.' || '"' || ',' ||
			'"' || 'Container Type' || '"' || ',' ||
			'"' || 'Container No.' || '"' || ',' ||
			'"' || 'Markings on Containers' || '"' || ',' ||
			'"' || 'Description of Goods' || '"' || ',' ||
			'"' || 'Name of Shipper' || '"' || ',' ||
			'"' || 'DC Quantity' || '"' || ',' ||
			'"' || 'DC Unit' || '"' || ',' ||
			'"' || 'DC Quantity (Per case)' || '"' || ',' ||
			'"' || 'DC Unit (Per case)' || '"' || ',' ||
			'"' || 'Permit No.' || '"' || ',' ||
			'"' || 'Demand Note' || '"' || ',' ||
			'"' || 'CED94/CED94C' || '"' || ',' ||
			'"' || 'Remarks' || '"' || ',' ||
			'"' || 'Aircraft Spirit Quantity (Litres)' || '"' || ',' ||
			'"' || 'Light Diesel Oil Quantity (Litres)' || '"' || ',' ||
			'"' || 'Motor Spirit (Leaded Petrol) Quantity (Litres)' || '"' || ',' ||
			'"' || 'Motor Spirit (Unleaded Petrol) Quantity (Litres)' || '"' || ',' ||
			'"' || 'Kerosene Quantity (Litres)' || '"' || ',' ||
			'"' || 'Cigarettes Quantity (Pieces)' || '"' || ',' ||
			'"' || 'Cigars Quantity (Pieces)' || '"' || ',' ||
			'"' || 'Smoking Tobacco Quantity (Kilograms)' || '"' || ',' ||
			'"' || 'Chinese Prepared Tobacco Quantity (Kilograms)' || '"' || ',' ||
			'"' || 'Methyl Alcohol (Pure) Quantity (Litres)' || '"' || ',' ||
			'"' || 'Methyl Alcohol (Mixtures) Quantity (Litres)' || '"' || ',' ||
			'"' || 'Whisky Quantity' || '"' || ',' ||
			'"' || 'Whisky Unit' || '"' || ',' ||
			'"' || 'Brandy Quantity' || '"' || ',' ||
			'"' || 'Brandy Unit' || '"' || ',' ||
			'"' || 'Gin Quantity' || '"' || ',' ||
			'"' || 'Gin Unit' || '"' || ',' ||
			'"' || 'Rum Quantity' || '"' || ',' ||
			'"' || 'Rum Unit' || '"' || ',' ||
			'"' || 'Liqueur > 30% (Alcoholic Strength) Quantity' || '"' || ',' ||
			'"' || 'Liqueur > 30% (Alcoholic Strength) Unit' || '"' || ',' ||
			'"' || 'Other Liquors > 30% (Alcoholic Strength) Quantity' || '"' || ',' ||
			'"' || 'Other Liquors > 30% (Alcoholic Strength) Unit' || '"' || ',' ||
			'"' || 'Ethyl Alcohol (Pure) > 30% (Alcoholic Strength) Quantity (Litres)' || '"' || ',' ||
			'"' || 'Ethyl Alcohol (Mixture) > 30% (Alcoholic Strength) Quantity (Litres)' || '"' 
			from dual
			]]>
	</select>
	
	<select id="getFlightDCShipmentRecordsExp" parameterClass="cargo.cms.common.utils.bo.DCQueryBO" resultClass="cargo.cms.common.utils.bo.DCQueryBO">
	WITH DC_CODE AS ( select distinct D_CODE as dut_code FROM GT_DUT_GD_EXP d 
			where flt_key = #fltKey#  and SCH_DATE = to_date(#fltDate#,'DDMONYY') 
			 )
      SELECT 
			'"' || #declareNo# || '"' || ',' ||
			'"' || '' || '"' || ',' ||
			'"' || 'Y' || '"' || ',' ||
			'"' || '' || '"' || ',' ||
			'"' || (case when D_CODE ='H' then 'Y' else '' end) || '"' || ',' ||
			'"' || (case when D_CODE ='T' then 'Y' else '' end) || '"' || ',' ||
			'"' || (case when D_CODE ='M' then 'Y' else '' end) || '"' || ',' ||
			'"' || (case when D_CODE ='L' then 'Y' else '' end) || '"' || ',' ||
			'"' || '' || '"' || ',' ||
			'"' || '' || '"' || ',' ||
			'"' || '' || '"' || ',' ||
			'"' || '' || '"' || ',' ||
			'"' || '' || '"' || ',' ||
			'"' ||  DECODE(d.AWB_NO,NULL,'',d.AWB_NO) || '"' || ',' ||			
			'"' ||  DECODE(d.HAWB_NO, '000000000000000000','',d.HAWB_NO) || '"' || ',' ||
			'"' || 'N/A' || '"' || ',' ||
			'"' || 'N/A' || '"' || ',' ||
			'"' || 'N/A' || '"' || ',' ||
			'"' || a.content || '"' || ',' ||
			'"' || a.shpr_name || '"' || ',' || 
			'"' || (case when D_UNIT  ='MIL' then (nvl(pDtl.dcp_qty,D_QTY) * 1000 ) else nvl(pDtl.dcp_qty,D_QTY) end ) || '"' || ',' ||
			'"' || (case when D_UNIT  ='LIT' then 'L' when D_UNIT  ='KG' then 'KG' 
						when D_UNIT  ='BOT' then 'BT'  
						when D_UNIT  ='ST' then 'PS'
						when D_UNIT  ='MIL' then 'PS'
						else D_UNIT end)  || '"' || ',' ||
			'"' || '' || '"' || ',' ||
			'"' || '' || '"' || ',' ||
			'"' || pDtl.pmt_no || '"' || ',' ||
			'"' || '' || '"' || ',' ||
			'"' || '' || '"' || ',' ||
			'"' || '' || '"' || ',' ||
			'"' || '' || '"' || ',' ||
			'"' || '' || '"' || ',' ||
			'"' || '' || '"' || ',' ||
			'"' || '' || '"' || ',' ||
			'"' || '' || '"' || ',' ||
			'"' || '' || '"' || ',' ||
			'"' || '' || '"' || ',' ||
			'"' || '' || '"' || ',' ||
			'"' || '' || '"' || ',' ||
			'"' || '' || '"' || ',' ||
			'"' || '' || '"' || ',' ||
			'"' || '' || '"' || ',' ||
			'"' || '' || '"' || ',' ||
			'"' || '' || '"' || ',' ||
			'"' || '' || '"' || ',' ||
			'"' || '' || '"' || ',' ||
			'"' || '' || '"' || ',' ||
			'"' || '' || '"' || ',' ||
			'"' || '' || '"' || ',' ||
			'"' || '' || '"' || ',' ||
			'"' || '' || '"' || ',' ||
			'"' || '' || '"' || ',' ||
			'"' || '' || '"' || ',' ||
			'"' || '' || '"' || ',' ||
			'"' || '' || '"'  as csvRecord  , (select STRAGG(STRINGDELIM(dut_code, ',')) from DC_CODE) dutCode
			FROM GT_DUT_GD_EXP d			
			LEFT JOIN EXP_CAR a ON a.AWB_NO    = d.AWB_NO
			LEFT JOIN cst_permit_dtl pDtl ON pDtl.flt_type = nvl( 'E', pDtl.flt_type)  
                 and pDtl.awb_no = d.awb_no  and pDtl.hawb_no = nvl(d.hawb_no,'000000000000000000') AND pDtl.dut_code = d.d_code 
      where d.flt_key = #fltKey# and d.SCH_DATE = to_date(#fltDate#,'DDMONYY')
      </select>
      
      <select id="getDateRangeInfoFH" parameterClass="cargo.cms.common.utils.bo.BatchJobBO" resultClass="cargo.cms.common.utils.bo.DCQueryBO">
      	SELECT to_char(to_date(('01' || #month# || #year#),'DDMONYYYY' ) , 'DDMONYY') as startDate, to_char(to_date(('15' || #month# || #year#),'DDMONYYYY' ) , 'DDMONYY') as endDate FROM dual
      </select>
      
       <select id="getDateRangeInfoSH" parameterClass="cargo.cms.common.utils.bo.BatchJobBO" resultClass="cargo.cms.common.utils.bo.DCQueryBO">
      	SELECT to_char(to_date(('16' || #month# || #year#),'DDMONYYYY' ) , 'DDMONYY') as startDate, to_char(LAST_DAY(to_date(#month# || #year#,'MONYYYY')) , 'DDMONYY') as endDate FROM dual
      </select>
      
	      
		<select id="sqlGetDCReportLog" parameterClass="java.util.HashMap" resultClass="cargo.cms.common.utils.bo.DCQueryBO">	
			select  (REPORT_PATH || '/' || REPORT_TYPE || '/' || to_char(JOB_DATE,'YYYYMMDD') || '/' ||  REPORT_FILE_NAME  )  as delFileName
	 		 FROM REPORT_EXECUTION_LOG
			WHERE FROM_DATE = #fromDate# AND TO_DATE=#toDate# 		
			AND REPORT_NAME=#reportName#
			AND REPORT_TYPE=#reportType#
			AND nvl(carrier_code,'X') = nvl(#airline#,'X')	
		</select>
	
</sqlMap>

