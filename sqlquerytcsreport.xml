<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="TCSReportModule">
	<!-- Truck Control System (TCS) Reports (Begin) -->
	<!-- Manual Truck Dock Allocation Report -->
	<select id="sqlGetTCSManualDockAllocReport" parameterClass="cargo.cms.tcs.bo.TCSReportSearchBO"
		resultClass="cargo.cms.tcs.bo.TCSReportResultBO">
		<![CDATA[
		  SELECT
		  	TRUCK_DOCK dockNo, TRUCK_NO truckNo, IPASS_NO ipassNo, IPASS_TYPE_DESC ipassType,
			COMPANY_NAME companyName, IN_PURPOSE_DESC incomingPurpose, DOCK_LEVEL_DESC levelDesc,
			ALLOCATED_DURATION duration, ALLOCATED_BY allocatedBy,
			TO_CHAR(ALLOCATED_TIME, 'DDMONYY HH24:MI') allocationTime
		  FROM TCS_MANUAL_ALLOC_LOG LOG
		  WHERE TRUCK_NO IS NOT NULL
		]]>
		<isNotEmpty property="from">
			<![CDATA[
				AND LOG.ALLOCATED_TIME >= TO_DATE(#from#, 'DDMONYY HH24:MI')
			]]>
		</isNotEmpty>
		<isNotEmpty property="to">
			<![CDATA[
				AND LOG.ALLOCATED_TIME <= TO_DATE(#to#, 'DDMONYY HH24:MI')
			]]>
		</isNotEmpty>
		<dynamic prepend="ORDER BY ">
			LOG.ALLOCATED_TIME
		</dynamic>
	</select>
	<!-- Ban Truck Report -->
	<select id="sqlGetTCSBanTruckReport" parameterClass="cargo.cms.tcs.bo.TCSReportSearchBO"
		resultClass="cargo.cms.tcs.bo.TCSReportResultBO">
		<![CDATA[
		  SELECT BAN.TRUCK_NO truckNo, BAN.IPASS_NO ipassNo, CUST.CODE_DESC companyName, 
		  TO_CHAR(BAN.BAN_FROM, 'DDMONYY') || '-' || TO_CHAR(BAN.BAN_TO, 'DDMONYY') banPeriod, 
		  TYP.CODE_DESC banType, REASON.BAN_DESC banReason, BAN.RESTRICTIONS banRestrictions,
		  TO_CHAR(BAN.RLS_DATE, 'DDMONYY HH24:MI') releaseDate, BAN.RLS_RMK remarks,
		  BAN.CR_USER_ID banCreateBy, TO_CHAR(BAN.CR_DATE, 'DDMONYY HH24:MI') createTime
		  FROM
		  TCS_BAN_TRUCK BAN
		  LEFT OUTER JOIN TCS_BAN_MASTER REASON
		  ON BAN.BAN_REASON = REASON.BAN_REASON
		  LEFT OUTER JOIN TCS_IPASS_MASTER IPASS
		  ON BAN.IPASS_NO = IPASS.IPASS_NO
		  LEFT OUTER JOIN CUST_COMPANY CUST
		  ON IPASS.CUST_NO = CUST.CODE AND CUST.ACTIVE = 'Y'
		  LEFT OUTER JOIN MAST_CODE_DTL TYP
		  ON REASON.BAN_TYPE = TYP.CODE AND TYP.CODE_TYPE = 'TCS_BAN_TYPE'
		  WHERE 1 = 1
		]]>
		<isNotEmpty property="companyName">
			<![CDATA[ AND UPPER(CUST.CODE_DESC) = UPPER(#companyName#) ]]>
		</isNotEmpty>
		<isNotEmpty property="truckNo">
			<![CDATA[ AND UPPER(BAN.TRUCK_NO) = UPPER(#truckNo#) ]]>
		</isNotEmpty>
		<isEqual property="searchType" compareValue="CREATE">
			<isNotEmpty property="from">
			<![CDATA[
				AND BAN.CR_DATE >= TO_DATE(#from#, 'DDMONYY HH24:MI')
			]]>
			</isNotEmpty>
			<isNotEmpty property="to">
			<![CDATA[
				AND BAN.CR_DATE <= TO_DATE(#to#, 'DDMONYY HH24:MI')
			]]>
			</isNotEmpty>
		</isEqual>
		<isNotEqual property="searchType" compareValue="CREATE">
			<isNotEmpty property="from">
				<isNotEmpty property="to">
					<![CDATA[
						AND (
							TO_DATE(#from#, 'DDMONYY HH24:MI') BETWEEN BAN.BAN_FROM AND BAN.BAN_TO OR
							TO_DATE(#to#, 'DDMONYY HH24:MI') BETWEEN BAN.BAN_FROM AND BAN.BAN_TO OR
							BAN.BAN_FROM BETWEEN TO_DATE(#from#, 'DDMONYY HH24:MI') AND TO_DATE(#to#, 'DDMONYY HH24:MI') OR
							BAN.BAN_TO BETWEEN TO_DATE(#from#, 'DDMONYY HH24:MI') AND TO_DATE(#to#, 'DDMONYY HH24:MI')
						)
					]]>
				</isNotEmpty>
			</isNotEmpty>
			<isNotEmpty property="from">
				<isEmpty property="to">
					<![CDATA[
						AND TO_DATE(#from#, 'DDMONYY HH24:MI') BETWEEN BAN.BAN_FROM AND BAN.BAN_TO
					]]>
				</isEmpty>
			</isNotEmpty>
			<isNotEmpty property="to">
				<isEmpty property="from">
					<![CDATA[
						AND TO_DATE(#to#, 'DDMONYY HH24:MI') BETWEEN BAN.BAN_FROM AND BAN.BAN_TO
					]]>
				</isEmpty>
			</isNotEmpty>
		</isNotEqual>
		<dynamic prepend="ORDER BY ">
			BAN.BAN_FROM
		</dynamic>
	</select>
	<!-- Truck Survey Report -->
	<select id="sqlGetTCSTruckSurveyReportTransactList"
		parameterClass="cargo.cms.tcs.bo.TCSReportSearchBO" resultClass="cargo.cms.tcs.bo.TCSReportResultBO">
		<![CDATA[
			WITH IN_PURPOSE AS (
				SELECT SUBSTR(CODE, 1, 3) CODE3, CODE, CODE_DESC FROM MAST_TCS_INCOMING_PURPOSE PURP
				UNION SELECT 'ALL' CODE3, 'ALL' CODE, 'All' CODE_DESC FROM DUAL
				UNION SELECT 'BLANK' CODE3, 'BLANK' CODE, '000' CODE_DESC FROM DUAL
			),
			OUTER_PURPOSE AS (
				SELECT 'Import' CODE_DESC, 'IMP' CODE3 FROM DUAL
				UNION SELECT 'Export' CODE_DESC, 'EXP' CODE3 FROM DUAL
				UNION SELECT 'Valueable' CODE_DESC, 'VAL' CODE3 FROM DUAL
				UNION SELECT 'ULD' CODE_DESC, 'ULD' CODE3 FROM DUAL
				UNION SELECT 'SHC' CODE_DESC, 'SHC' CODE3 FROM DUAL
				UNION SELECT 'ZZZ' CODE_DESC, 'FUL' CODE3 FROM DUAL
			),
			TRIP AS (
				SELECT TRIP.TRUCK_NO, TRIP.PURPOSE, 
				EVENT.* 
				FROM TRUCK_TRIP_EVENTS EVENT
				LEFT OUTER JOIN TRUCK_TRIP TRIP ON EVENT.TRIP_ID = TRIP.TRIP_ID
				WHERE
				EVENT.TERMINAL_EXIT_TIME IS NOT NULL AND EVENT.TERMINAL_ENTRY_TIME IS NOT NULL AND
				(ARR_TIME >= TO_DATE(#from#, 'DDMONYY HH24:MI') AND ARR_TIME <= TO_DATE(#to#, 'DDMONYY HH24:MI'))
			)
			SELECT DECODE(PURPOSE_O.CODE_DESC, 'ZZZ', 'All', PURPOSE_O.CODE_DESC) incomingPurpose, 
			DECODE(PURPOSE_I.CODE_DESC, '000', PURPOSE_O.CODE_DESC, PURPOSE_I.CODE_DESC) purpose, 
			PURPOSE_I.CODE,
			(
				SELECT DECODE(COUNT(TRIP.TRIP_ID), 0, ' ', COUNT(TRIP.TRIP_ID)) FROM TRIP
				WHERE 
				CASE WHEN PURPOSE_I.CODE = 'ALL' AND SUBSTR(PURPOSE, 1, 3) = PURPOSE_O.CODE3 THEN 1
				WHEN PURPOSE = PURPOSE_I.CODE THEN 1
				WHEN 'FUL' = PURPOSE_O.CODE3 THEN 1
				ELSE 0
				END = 1
			) totalRecord,
			(
				SELECT FLOOR(MAX(TRIP.TERMINAL_EXIT_TIME - TRIP.TERMINAL_ENTRY_TIME) * 24 * 60) FROM TRIP
				WHERE 
				CASE WHEN PURPOSE_I.CODE = 'ALL' AND SUBSTR(PURPOSE, 1, 3) = PURPOSE_O.CODE3 THEN 1
				WHEN PURPOSE = PURPOSE_I.CODE THEN 1
				WHEN 'FUL' = PURPOSE_O.CODE3 THEN 1
				ELSE 0
				END = 1
			) maxTime,
			(
				SELECT TRIP.TRUCK_NO FROM TRIP
				WHERE 
				((TRIP.TERMINAL_EXIT_TIME - TRIP.TERMINAL_ENTRY_TIME) * 24 * 60) = (
				SELECT MAX(TRIP.TERMINAL_EXIT_TIME - TRIP.TERMINAL_ENTRY_TIME) * 24 * 60 FROM TRIP
				WHERE 
				CASE WHEN PURPOSE_I.CODE = 'ALL' AND SUBSTR(PURPOSE, 1, 3) = PURPOSE_O.CODE3 THEN 1
				WHEN PURPOSE = PURPOSE_I.CODE THEN 1
				WHEN 'FUL' = PURPOSE_O.CODE3 THEN 1
				ELSE 0
				END = 1) AND ROWNUM = 1
			) maxTimeTruckNo,
			(
				SELECT FLOOR(MIN(TRIP.TERMINAL_EXIT_TIME - TRIP.TERMINAL_ENTRY_TIME) * 24 * 60) FROM TRIP
				WHERE 
				CASE WHEN PURPOSE_I.CODE = 'ALL' AND SUBSTR(PURPOSE, 1, 3) = PURPOSE_O.CODE3 THEN 1
				WHEN PURPOSE = PURPOSE_I.CODE THEN 1
				WHEN 'FUL' = PURPOSE_O.CODE3 THEN 1
				ELSE 0
				END = 1
			) minTime,
			(
				SELECT TRIP.TRUCK_NO FROM TRIP
				WHERE 
				((TRIP.TERMINAL_EXIT_TIME - TRIP.TERMINAL_ENTRY_TIME) * 24 * 60) = (
				SELECT MIN(TRIP.TERMINAL_EXIT_TIME - TRIP.TERMINAL_ENTRY_TIME) * 24 * 60 FROM TRIP
				WHERE 
				CASE WHEN PURPOSE_I.CODE = 'ALL' AND SUBSTR(PURPOSE, 1, 3) = PURPOSE_O.CODE3 THEN 1
				WHEN PURPOSE = PURPOSE_I.CODE THEN 1
				WHEN 'FUL' = PURPOSE_O.CODE3 THEN 1
				ELSE 0
				END = 1) AND ROWNUM = 1
			) minTimeTruckNo,
			(
				SELECT FLOOR(AVG(TRIP.TERMINAL_EXIT_TIME - TRIP.TERMINAL_ENTRY_TIME) * 24 * 60) FROM TRIP
				WHERE 
				CASE WHEN PURPOSE_I.CODE = 'ALL' AND SUBSTR(PURPOSE, 1, 3) = PURPOSE_O.CODE3 THEN 1
				WHEN PURPOSE = PURPOSE_I.CODE THEN 1
				WHEN 'FUL' = PURPOSE_O.CODE3 AND 'ALL' = PURPOSE_I.CODE THEN 1
				ELSE 0
				END = 1
			) avgTime,
			(
			' '
			) percentile96
			FROM
			OUTER_PURPOSE PURPOSE_O
			LEFT OUTER JOIN IN_PURPOSE PURPOSE_I
			ON PURPOSE_O.CODE3 = PURPOSE_I.CODE3 OR PURPOSE_I.CODE3 = 'ALL' 
			  OR (PURPOSE_I.CODE3 = 'BLANK' AND PURPOSE_O.CODE3 <> 'FUL')
			ORDER BY PURPOSE_O.CODE_DESC, PURPOSE_I.CODE_DESC
		]]>
	</select>
	<select id="sqlGetTCSTruckSurveyReportQueueList" parameterClass="cargo.cms.tcs.bo.TCSReportSearchBO"
		resultClass="cargo.cms.tcs.bo.TCSReportResultBO">
		<![CDATA[
			WITH IN_PURPOSE AS (
				SELECT SUBSTR(CODE, 1, 3) CODE3, CODE, CODE_DESC FROM MAST_TCS_INCOMING_PURPOSE PURP
				UNION SELECT 'ALL' CODE3, 'ALL' CODE, 'All' CODE_DESC FROM DUAL
				UNION SELECT 'BLANK' CODE3, 'BLANK' CODE, '000' CODE_DESC FROM DUAL
			),
			OUTER_PURPOSE AS (
				SELECT 'Import' CODE_DESC, 'IMP' CODE3 FROM DUAL
				UNION SELECT 'Export' CODE_DESC, 'EXP' CODE3 FROM DUAL
				UNION SELECT 'Valueable' CODE_DESC, 'VAL' CODE3 FROM DUAL
				UNION SELECT 'ULD' CODE_DESC, 'ULD' CODE3 FROM DUAL
				UNION SELECT 'SHC' CODE_DESC, 'SHC' CODE3 FROM DUAL
				UNION SELECT 'ZZZ' CODE_DESC, 'FUL' CODE3 FROM DUAL
			),
			TRIP AS (
				SELECT TRIP.TRUCK_NO, TRIP.PURPOSE, 
				EVENT.* 
				FROM TRUCK_TRIP_EVENTS EVENT
				LEFT OUTER JOIN TRUCK_TRIP TRIP ON EVENT.TRIP_ID = TRIP.TRIP_ID
				WHERE
				EVENT.DOCK_ALLOCATION_TIME IS NOT NULL AND EVENT.TRUCK_IN_QUEUE_TIME IS NOT NULL AND			
				(ARR_TIME >= TO_DATE(#from#, 'DDMONYY HH24:MI') AND ARR_TIME <= TO_DATE(#to#, 'DDMONYY HH24:MI'))
			)
			SELECT DECODE(PURPOSE_O.CODE_DESC, 'ZZZ', 'All', PURPOSE_O.CODE_DESC) incomingPurpose,
			DECODE(PURPOSE_I.CODE_DESC, '000', PURPOSE_O.CODE_DESC, PURPOSE_I.CODE_DESC) purpose, 
			PURPOSE_I.CODE,
			(
				SELECT DECODE(COUNT(TRIP.TRIP_ID), 0, ' ', COUNT(TRIP.TRIP_ID)) FROM TRIP
				WHERE 
				CASE WHEN PURPOSE_I.CODE = 'ALL' AND SUBSTR(PURPOSE, 1, 3) = PURPOSE_O.CODE3 THEN 1
				WHEN PURPOSE = PURPOSE_I.CODE THEN 1
				WHEN 'FUL' = PURPOSE_O.CODE3 THEN 1
				ELSE 0
				END = 1
			) totalRecord,
			(
				SELECT FLOOR(MAX(TRIP.DOCK_ALLOCATION_TIME - TRIP.TRUCK_IN_QUEUE_TIME) * 24 * 60) FROM TRIP
				WHERE 
				CASE WHEN PURPOSE_I.CODE = 'ALL' AND SUBSTR(PURPOSE, 1, 3) = PURPOSE_O.CODE3 THEN 1
				WHEN PURPOSE = PURPOSE_I.CODE THEN 1
				WHEN 'FUL' = PURPOSE_O.CODE3 THEN 1
				ELSE 0
				END = 1
			) maxTime,
			(
				SELECT TRIP.TRUCK_NO FROM TRIP
				WHERE 
				((TRIP.DOCK_ALLOCATION_TIME - TRIP.TRUCK_IN_QUEUE_TIME) * 24 * 60) = (
				SELECT MAX(TRIP.DOCK_ALLOCATION_TIME - TRIP.TRUCK_IN_QUEUE_TIME) * 24 * 60 FROM TRIP
				WHERE 
				CASE WHEN PURPOSE_I.CODE = 'ALL' AND SUBSTR(PURPOSE, 1, 3) = PURPOSE_O.CODE3 THEN 1
				WHEN PURPOSE = PURPOSE_I.CODE THEN 1
				WHEN 'FUL' = PURPOSE_O.CODE3 THEN 1
				ELSE 0
				END = 1) AND ROWNUM = 1
			) maxTimeTruckNo,
			(
				SELECT FLOOR(MIN(TRIP.DOCK_ALLOCATION_TIME - TRIP.TRUCK_IN_QUEUE_TIME) * 24 * 60) FROM TRIP
				WHERE 
				CASE WHEN PURPOSE_I.CODE = 'ALL' AND SUBSTR(PURPOSE, 1, 3) = PURPOSE_O.CODE3 THEN 1
				WHEN PURPOSE = PURPOSE_I.CODE THEN 1
				WHEN 'FUL' = PURPOSE_O.CODE3 THEN 1
				ELSE 0
				END = 1
			) minTime,
			(
				SELECT TRIP.TRUCK_NO FROM TRIP
				WHERE 
				((TRIP.DOCK_ALLOCATION_TIME - TRIP.TRUCK_IN_QUEUE_TIME) * 24 * 60) = (
				SELECT MIN(TRIP.DOCK_ALLOCATION_TIME - TRIP.TRUCK_IN_QUEUE_TIME) * 24 * 60 FROM TRIP
				WHERE 
				CASE WHEN PURPOSE_I.CODE = 'ALL' AND SUBSTR(PURPOSE, 1, 3) = PURPOSE_O.CODE3 THEN 1
				WHEN PURPOSE = PURPOSE_I.CODE THEN 1
				WHEN 'FUL' = PURPOSE_O.CODE3 THEN 1
				ELSE 0
				END = 1) AND ROWNUM = 1
			) minTimeTruckNo,
			(
				SELECT FLOOR(AVG(TRIP.DOCK_ALLOCATION_TIME - TRIP.TRUCK_IN_QUEUE_TIME) * 24 * 60) FROM TRIP
				WHERE 
				CASE WHEN PURPOSE_I.CODE = 'ALL' AND SUBSTR(PURPOSE, 1, 3) = PURPOSE_O.CODE3 THEN 1
				WHEN PURPOSE = PURPOSE_I.CODE THEN 1
				WHEN 'FUL' = PURPOSE_O.CODE3 THEN 1
				ELSE 0
				END = 1
			) avgTime,
			(
			' '
			) percentile96
			FROM
			OUTER_PURPOSE PURPOSE_O
			LEFT OUTER JOIN IN_PURPOSE PURPOSE_I
			ON PURPOSE_O.CODE3 = PURPOSE_I.CODE3 OR PURPOSE_I.CODE3 = 'ALL' 
			  OR (PURPOSE_I.CODE3 = 'BLANK' AND PURPOSE_O.CODE3 <> 'FUL')
			ORDER BY PURPOSE_O.CODE_DESC, PURPOSE_I.CODE_DESC
		]]>
	</select>
	<select id="sqlGetTCSTruckSurveyReportDockDwellList"
		parameterClass="cargo.cms.tcs.bo.TCSReportSearchBO" resultClass="cargo.cms.tcs.bo.TCSReportResultBO">
		<![CDATA[
			WITH IN_PURPOSE AS (
				SELECT SUBSTR(CODE, 1, 3) CODE3, CODE, CODE_DESC FROM MAST_TCS_INCOMING_PURPOSE PURP
				UNION SELECT 'ALL' CODE3, 'ALL' CODE, 'All' CODE_DESC FROM DUAL
				UNION SELECT 'BLANK' CODE3, 'BLANK' CODE, '000' CODE_DESC FROM DUAL
			),
			OUTER_PURPOSE AS (
				SELECT 'Import' CODE_DESC, 'IMP' CODE3 FROM DUAL
				UNION SELECT 'Export' CODE_DESC, 'EXP' CODE3 FROM DUAL
				UNION SELECT 'Valueable' CODE_DESC, 'VAL' CODE3 FROM DUAL
				UNION SELECT 'ULD' CODE_DESC, 'ULD' CODE3 FROM DUAL
				UNION SELECT 'SHC' CODE_DESC, 'SHC' CODE3 FROM DUAL
				UNION SELECT 'ZZZ' CODE_DESC, 'FUL' CODE3 FROM DUAL
			),
			TRIP AS (
				SELECT TRIP.TRUCK_NO, TRIP.PURPOSE, 
				EVENT.* 
				FROM TRUCK_TRIP_EVENTS EVENT
				LEFT OUTER JOIN TRUCK_TRIP TRIP ON EVENT.TRIP_ID = TRIP.TRIP_ID
				WHERE
				EVENT.LEAVE_DOCK_TIME IS NOT NULL AND EVENT.DOCK_OCCUPY_TIME IS NOT NULL AND
				(ARR_TIME >= TO_DATE(#from#, 'DDMONYY HH24:MI') AND ARR_TIME <= TO_DATE(#to#, 'DDMONYY HH24:MI'))
			)
			SELECT DECODE(PURPOSE_O.CODE_DESC, 'ZZZ', 'All', PURPOSE_O.CODE_DESC) incomingPurpose,
			DECODE(PURPOSE_I.CODE_DESC, '000', PURPOSE_O.CODE_DESC, PURPOSE_I.CODE_DESC) purpose, 
			PURPOSE_I.CODE,
			(
				SELECT DECODE(COUNT(TRIP.TRIP_ID), 0, ' ', COUNT(TRIP.TRIP_ID)) FROM TRIP
				WHERE 
				CASE WHEN PURPOSE_I.CODE = 'ALL' AND SUBSTR(PURPOSE, 1, 3) = PURPOSE_O.CODE3 THEN 1
				WHEN PURPOSE = PURPOSE_I.CODE THEN 1
				WHEN 'FUL' = PURPOSE_O.CODE3 THEN 1
				ELSE 0
				END = 1
			) totalRecord,
			(
				SELECT FLOOR(MAX(TRIP.LEAVE_DOCK_TIME - TRIP.DOCK_OCCUPY_TIME) * 24 * 60) FROM TRIP
				WHERE 
				CASE WHEN PURPOSE_I.CODE = 'ALL' AND SUBSTR(PURPOSE, 1, 3) = PURPOSE_O.CODE3 THEN 1
				WHEN PURPOSE = PURPOSE_I.CODE THEN 1
				WHEN 'FUL' = PURPOSE_O.CODE3 THEN 1
				ELSE 0
				END = 1
			) maxTime,
			(
				SELECT TRIP.TRUCK_NO FROM TRIP
				WHERE 
				((TRIP.LEAVE_DOCK_TIME - TRIP.DOCK_OCCUPY_TIME) * 24 * 60) = (
				SELECT MAX(TRIP.LEAVE_DOCK_TIME - TRIP.DOCK_OCCUPY_TIME) * 24 * 60 FROM TRIP
				WHERE 
				CASE WHEN PURPOSE_I.CODE = 'ALL' AND SUBSTR(PURPOSE, 1, 3) = PURPOSE_O.CODE3 THEN 1
				WHEN PURPOSE = PURPOSE_I.CODE THEN 1
				WHEN 'FUL' = PURPOSE_O.CODE3 THEN 1
				ELSE 0
				END = 1) AND ROWNUM = 1
			) maxTimeTruckNo,
			(
				SELECT FLOOR(MIN(TRIP.LEAVE_DOCK_TIME - TRIP.DOCK_OCCUPY_TIME) * 24 * 60) FROM TRIP
				WHERE 
				CASE WHEN PURPOSE_I.CODE = 'ALL' AND SUBSTR(PURPOSE, 1, 3) = PURPOSE_O.CODE3 THEN 1
				WHEN PURPOSE = PURPOSE_I.CODE THEN 1
				WHEN 'FUL' = PURPOSE_O.CODE3 THEN 1
				ELSE 0
				END = 1
			) minTime,
			(
				SELECT TRIP.TRUCK_NO FROM TRIP
				WHERE 
				((TRIP.LEAVE_DOCK_TIME - TRIP.DOCK_OCCUPY_TIME) * 24 * 60) = (
				SELECT MIN(TRIP.LEAVE_DOCK_TIME - TRIP.DOCK_OCCUPY_TIME) * 24 * 60 FROM TRIP
				WHERE 
				CASE WHEN PURPOSE_I.CODE = 'ALL' AND SUBSTR(PURPOSE, 1, 3) = PURPOSE_O.CODE3 THEN 1
				WHEN PURPOSE = PURPOSE_I.CODE THEN 1
				WHEN 'FUL' = PURPOSE_O.CODE3 THEN 1
				ELSE 0
				END = 1) AND ROWNUM = 1
			) minTimeTruckNo,
			(
				SELECT FLOOR(AVG(TRIP.LEAVE_DOCK_TIME - TRIP.DOCK_OCCUPY_TIME) * 24 * 60) FROM TRIP
				WHERE 
				CASE WHEN PURPOSE_I.CODE = 'ALL' AND SUBSTR(PURPOSE, 1, 3) = PURPOSE_O.CODE3 THEN 1
				WHEN PURPOSE = PURPOSE_I.CODE THEN 1
				WHEN 'FUL' = PURPOSE_O.CODE3 THEN 1
				ELSE 0
				END = 1
			) avgTime,
			(
			' '
			) percentile96
			FROM
			OUTER_PURPOSE PURPOSE_O
			LEFT OUTER JOIN IN_PURPOSE PURPOSE_I
			ON PURPOSE_O.CODE3 = PURPOSE_I.CODE3 OR PURPOSE_I.CODE3 = 'ALL' 
			  OR (PURPOSE_I.CODE3 = 'BLANK' AND PURPOSE_O.CODE3 <> 'FUL')
			ORDER BY PURPOSE_O.CODE_DESC, PURPOSE_I.CODE_DESC	
		]]>
	</select>
	<select id="sqlGetTCSTruckSurveyReportParkDwellList"
		parameterClass="cargo.cms.tcs.bo.TCSReportSearchBO" resultClass="cargo.cms.tcs.bo.TCSReportResultBO">
		<![CDATA[
			WITH IN_PURPOSE AS (
				SELECT SUBSTR(CODE, 1, 3) CODE3, CODE, CODE_DESC FROM MAST_TCS_INCOMING_PURPOSE PURP
				UNION SELECT 'ALL' CODE3, 'ALL' CODE, 'All' CODE_DESC FROM DUAL
				UNION SELECT 'BLANK' CODE3, 'BLANK' CODE, '000' CODE_DESC FROM DUAL
			),
			OUTER_PURPOSE AS (
				SELECT 'Import' CODE_DESC, 'IMP' CODE3 FROM DUAL
				UNION SELECT 'Export' CODE_DESC, 'EXP' CODE3 FROM DUAL
				UNION SELECT 'Valueable' CODE_DESC, 'VAL' CODE3 FROM DUAL
				UNION SELECT 'ULD' CODE_DESC, 'ULD' CODE3 FROM DUAL
				UNION SELECT 'SHC' CODE_DESC, 'SHC' CODE3 FROM DUAL
				UNION SELECT 'ZZZ' CODE_DESC, 'FUL' CODE3 FROM DUAL
			),
			TRIP AS (
				SELECT TRIP.TRUCK_NO, TRIP.PURPOSE, 
				EVENT.* 
				FROM TRUCK_TRIP_EVENTS EVENT
				LEFT OUTER JOIN TRUCK_TRIP TRIP ON EVENT.TRIP_ID = TRIP.TRIP_ID
				WHERE
				EVENT.LEAVE_TRUCKPARK_TIME IS NOT NULL AND EVENT.TRUCK_PARK_ENTRY_TIME IS NOT NULL AND
				(ARR_TIME >= TO_DATE(#from#, 'DDMONYY HH24:MI') AND ARR_TIME <= TO_DATE(#to#, 'DDMONYY HH24:MI'))
			)
			SELECT DECODE(PURPOSE_O.CODE_DESC, 'ZZZ', 'All', PURPOSE_O.CODE_DESC) incomingPurpose,
			DECODE(PURPOSE_I.CODE_DESC, '000', PURPOSE_O.CODE_DESC, PURPOSE_I.CODE_DESC) purpose, 
			PURPOSE_I.CODE,
			(
				SELECT DECODE(COUNT(TRIP.TRIP_ID), 0, ' ', COUNT(TRIP.TRIP_ID)) FROM TRIP
				WHERE 
				CASE WHEN PURPOSE_I.CODE = 'ALL' AND SUBSTR(PURPOSE, 1, 3) = PURPOSE_O.CODE3 THEN 1
				WHEN PURPOSE = PURPOSE_I.CODE THEN 1
				WHEN 'FUL' = PURPOSE_O.CODE3 THEN 1
				ELSE 0
				END = 1
			) totalRecord,
			(
				SELECT FLOOR(MAX(TRIP.LEAVE_TRUCKPARK_TIME - TRIP.TRUCK_PARK_ENTRY_TIME) * 24 * 60) FROM TRIP
				WHERE 
				CASE WHEN PURPOSE_I.CODE = 'ALL' AND SUBSTR(PURPOSE, 1, 3) = PURPOSE_O.CODE3 THEN 1
				WHEN PURPOSE = PURPOSE_I.CODE THEN 1
				WHEN 'FUL' = PURPOSE_O.CODE3 THEN 1
				ELSE 0
				END = 1
			) maxTime,
			(
				SELECT TRIP.TRUCK_NO FROM TRIP
				WHERE 
				((TRIP.LEAVE_TRUCKPARK_TIME - TRIP.TRUCK_PARK_ENTRY_TIME) * 24 * 60) = (
				SELECT MAX(TRIP.LEAVE_TRUCKPARK_TIME - TRIP.TRUCK_PARK_ENTRY_TIME) * 24 * 60 FROM TRIP
				WHERE 
				CASE WHEN PURPOSE_I.CODE = 'ALL' AND SUBSTR(PURPOSE, 1, 3) = PURPOSE_O.CODE3 THEN 1
				WHEN PURPOSE = PURPOSE_I.CODE THEN 1
				WHEN 'FUL' = PURPOSE_O.CODE3 THEN 1
				ELSE 0
				END = 1) AND ROWNUM = 1
			) maxTimeTruckNo,
			(
				SELECT FLOOR(MIN(TRIP.LEAVE_TRUCKPARK_TIME - TRIP.TRUCK_PARK_ENTRY_TIME) * 24 * 60) FROM TRIP
				WHERE 
				CASE WHEN PURPOSE_I.CODE = 'ALL' AND SUBSTR(PURPOSE, 1, 3) = PURPOSE_O.CODE3 THEN 1
				WHEN PURPOSE = PURPOSE_I.CODE THEN 1
				WHEN 'FUL' = PURPOSE_O.CODE3 THEN 1
				ELSE 0
				END = 1
			) minTime,
			(
				SELECT TRIP.TRUCK_NO FROM TRIP
				WHERE 
				((TRIP.LEAVE_TRUCKPARK_TIME - TRIP.TRUCK_PARK_ENTRY_TIME) * 24 * 60) = (
				SELECT MIN(TRIP.LEAVE_TRUCKPARK_TIME - TRIP.TRUCK_PARK_ENTRY_TIME) * 24 * 60 FROM TRIP
				WHERE 
				CASE WHEN PURPOSE_I.CODE = 'ALL' AND SUBSTR(PURPOSE, 1, 3) = PURPOSE_O.CODE3 THEN 1
				WHEN PURPOSE = PURPOSE_I.CODE THEN 1
				WHEN 'FUL' = PURPOSE_O.CODE3 THEN 1
				ELSE 0
				END = 1) AND ROWNUM = 1
			) minTimeTruckNo,
			(
				SELECT FLOOR(AVG(TRIP.LEAVE_TRUCKPARK_TIME - TRIP.TRUCK_PARK_ENTRY_TIME) * 24 * 60) FROM TRIP
				WHERE 
				CASE WHEN PURPOSE_I.CODE = 'ALL' AND SUBSTR(PURPOSE, 1, 3) = PURPOSE_O.CODE3 THEN 1
				WHEN PURPOSE = PURPOSE_I.CODE THEN 1
				WHEN 'FUL' = PURPOSE_O.CODE3 THEN 1
				ELSE 0
				END = 1
			) avgTime,
			(
			' '
			) percentile96
			FROM
			OUTER_PURPOSE PURPOSE_O
			LEFT OUTER JOIN IN_PURPOSE PURPOSE_I
			ON PURPOSE_O.CODE3 = PURPOSE_I.CODE3 OR PURPOSE_I.CODE3 = 'ALL' 
			  OR (PURPOSE_I.CODE3 = 'BLANK' AND PURPOSE_O.CODE3 <> 'FUL')
			ORDER BY PURPOSE_O.CODE_DESC, PURPOSE_I.CODE_DESC	
		]]>
	</select>
	<!-- TCS Registry Report -->
	<select id="sqlGetTCSRegistryReportSubFunctionList"
		parameterClass="cargo.cms.tcs.bo.TCSReportSearchBO" resultClass="cargo.cms.tcs.bo.TCSReportResultBO">
		<![CDATA[
			WITH USR AS (
			  SELECT USR.CODE USER_ID, USR.CODE_DESC USER_NAME, DIV.CODE DIV_CODE, DIV.CODE_DESC DIVISION, 
			  TO_CHAR(USR.CR_DATE, 'DDMONYY HH24:MI') REGISTER_DATE
			  FROM SEC_USER USR
			  LEFT OUTER JOIN SEC_DIVISION DIV
			  ON USR.DIV_CODE = DIV.CODE
			  WHERE USR.STATUS = 'A'
			),
			FUNC AS (
				SELECT USRROL.USER_ID, FUNC.CODE FUNCTION_CODE, FUNC.CODE_DESC FUNCTION_DESC, 
				STRAGG(STRINGDELIM(READ_YN, ',')) READ_YN, STRAGG(STRINGDELIM(FULL_YN, ',')) FULL_YN, 
				STRAGG(STRINGDELIM(VIEW_YN, ',')) VIEW_YN, STRAGG(STRINGDELIM(SUB_GROUP_YN, ',')) SUB_GROUP_YN
				FROM SEC_ROLE_FUNCTION ROLFUNC
				JOIN SEC_SCR_FUNCTION FUNC
				ON ROLFUNC.FUNCTION_CODE = FUNC.CODE
				JOIN SEC_USER_ROLE USRROL
				ON ROLFUNC.ROLE_CODE = USRROL.ROLE_NAME
				JOIN SEC_MENU_CTRL MENU
				ON FUNC.CODE = MENU.CODE AND MENU_TYPE <> 'P'				
				WHERE
				USRROL.START_DATE <= SYSDATE AND SYSDATE <= NVL(USRROL.END_DATE, SYSDATE) AND FUNC.CODE_DESC IS NOT NULL
				GROUP BY USRROL.USER_ID, FUNC.CODE, FUNC.CODE_DESC
			),
			SUBFUNC AS (
				SELECT USRROL.USER_ID, SUBROLFUNC.FUNCTION_CODE, SUB_FUNCTION_CODE, 
				SUBFUNC.CODE_DESC SUB_FUNCTION_DESC, STRAGG(STRINGDELIM(ENABLE_YN, ',')) ENABLE_YN
				FROM SEC_ROLE_SUB_FUNCTION SUBROLFUNC
				RIGHT OUTER JOIN SEC_SUB_GRP_FUNCTION SUBFUNC
				ON SUBROLFUNC.SUB_FUNCTION_CODE = SUBFUNC.CODE
				RIGHT OUTER JOIN SEC_USER_ROLE USRROL
				ON SUBROLFUNC.ROLE_CODE = USRROL.ROLE_NAME
				WHERE
				USRROL.START_DATE <= SYSDATE AND SYSDATE <= NVL(USRROL.END_DATE, SYSDATE) AND SUBFUNC.CODE_DESC IS NOT NULL
				GROUP BY USRROL.USER_ID, SUBROLFUNC.FUNCTION_CODE, SUB_FUNCTION_CODE, SUBFUNC.CODE_DESC
			)
			SELECT DISTINCT USR.USER_ID userId, USR.USER_NAME userName, 
			NVL(USR.DIVISION, 'NA') division, USR.REGISTER_DATE registrationDate,
			FUNC.FUNCTION_DESC functionName, SUBFUNC.SUB_FUNCTION_DESC subGroupName, 
      		CASE
        		WHEN INSTR(FUNC.FULL_YN, 'Y') > 0 THEN 'Y'
        		WHEN INSTR(FUNC.FULL_YN, 'Y') = 0 AND INSTR(FUNC.READ_YN, 'Y') = 0 THEN 'N'
        		WHEN INSTR(FUNC.READ_YN, 'Y') > 0 THEN 'Y'
        		ELSE ' '
      		END readAccess,
			DECODE(INSTR(FUNC.FULL_YN, 'Y'), 0, 'N', 'Y') fullAccess,
			CASE
				WHEN INSTR(FUNC.READ_YN, 'Y') = 0 AND INSTR(FUNC.FULL_YN, 'Y') = 0 AND INSTR(FUNC.VIEW_YN, 'Y') = 0 THEN 'No Access' 
        		ELSE ' '
			END noAccess,
			DECODE(INSTR(SUBFUNC.ENABLE_YN, 'Y'), 0, 'N', 'Y') accesss
			FROM USR USR
			LEFT OUTER JOIN FUNC FUNC
			ON USR.USER_ID = FUNC.USER_ID
			LEFT OUTER JOIN SUBFUNC SUBFUNC
			ON FUNC.USER_ID = SUBFUNC.USER_ID AND FUNC.FUNCTION_CODE = SUBFUNC.FUNCTION_CODE AND INSTR(FUNC.SUB_GROUP_YN, 'Y') <> 0
			WHERE
			SUBFUNC.SUB_FUNCTION_DESC IS NOT NULL
		]]>
		<isNotEmpty property="userId">
			AND USR.USER_ID = #userId#
		</isNotEmpty>
		<isNotEmpty property="division">
			AND USR.DIV_CODE = #division#
		</isNotEmpty>
		<dynamic prepend="ORDER BY ">
			<![CDATA[ USR.USER_ID, FUNC.FUNCTION_DESC, SUBFUNC.SUB_FUNCTION_DESC ]]>
		</dynamic>
	</select>
	<!-- TCS Company Record Report -->
	<select id="sqlGetTCSCompanyRecordReportTruckList"
		parameterClass="cargo.cms.tcs.bo.TCSReportSearchBO" resultClass="cargo.cms.tcs.bo.TCSReportResultBO">
		<![CDATA[
			WITH CUSTOMER AS (
				SELECT DISTINCT CUST_NO, 
				CUST.CODE_DESC COMPANY, TYP.CODE_DESC CUST_TYPE_DESC
				FROM TCS_IPASS_MASTER IPASS
				LEFT OUTER JOIN MAST_CODE_DTL TYP
				ON IPASS.CUST_TYPE = TYP.CODE AND TYP.CODE_TYPE = 'TCS_IPASS_CUST_TYPE'
				LEFT OUTER JOIN CUST_COMPANY CUST
				ON IPASS.CUST_NO = CUST.CODE AND CUST.ACTIVE = 'Y'
				WHERE
				IPASS.IPASS_TYPE = 'P' AND CUST_NO IS NOT NULL
			),
			IPASS AS (
				SELECT TRUCK_NO, CUST_NO, CAT.CODE_DESC CAT_DESC, IPASS_NO, 
				TO_CHAR(IPASS.CR_DATE, 'DDMONYY HH24:MI') REG_DATE,
				IPASS.CR_DATE
				FROM TCS_IPASS_MASTER IPASS
				LEFT OUTER JOIN MAST_CODE_DTL CAT
				ON IPASS.TRUCK_CATEGORY = CAT.CODE AND CAT.CODE_TYPE = 'TCS_TRUCK_CATEGORY'
				WHERE
				IPASS.IPASS_TYPE = 'P'
			)
			SELECT CUST.COMPANY companyName, CUST.CUST_TYPE_DESC companyType, IPASS.TRUCK_NO truckNo, 
			IPASS.CAT_DESC category, IPASS.IPASS_NO ipassNo, IPASS.REG_DATE registrationDate, IPASS.CR_DATE
			FROM CUSTOMER CUST
			LEFT OUTER JOIN IPASS IPASS
			ON CUST.CUST_NO = IPASS.CUST_NO
			WHERE CUST.COMPANY IS NOT NULL AND CUST.CUST_TYPE_DESC IS NOT NULL
		]]>
		<isNotEmpty property="companyName">
			<![CDATA[ AND UPPER(CUST.COMPANY) = UPPER(#companyName#) ]]>
		</isNotEmpty>
		<dynamic prepend="ORDER BY ">
			CUST.COMPANY, IPASS.CR_DATE DESC
		</dynamic>
	</select>
	<!-- TCS Charges Report -->
	<select id="sqlGetTCSChargesReportChargeItemList"
		parameterClass="java.lang.String" resultClass="cargo.cms.afw.bo.MasterBO">
		<![CDATA[
			WITH CHARGE_TYPE AS (
				SELECT 'PERM' codeId, 'Permanent iPass Fee' codeDesc FROM DUAL
				UNION SELECT 'REISSUE' codeId, 'Re-issuance iPass Fee' codeDesc FROM DUAL
				UNION SELECT 'TEMP' codeId, 'Temporary iPass Fee' codeDesc FROM DUAL
				UNION SELECT 'PARK' codeId, 'Parking Fee' codeDesc FROM DUAL
				UNION SELECT 'BAN' codeId, 'Ban Charge Fee' codeDesc FROM DUAL
			)
			SELECT * FROM CHARGE_TYPE WHERE (#PARAM# IS NULL OR codeId = #PARAM#)
		]]>	
		<![CDATA[
			ORDER BY 1
		]]>
	</select>
	<select id="sqlGetTCSChargesReport" parameterClass="cargo.cms.tcs.bo.TCSReportSearchBO"
		resultClass="cargo.cms.tcs.bo.TCSReportResultBO">
		<![CDATA[
			WITH PERM AS (
				SELECT 1 ITEM, 'PERM' type,
				  CUST.CODE_DESC companyName, IPASS.TRUCK_NO truckNo, IPASS.IPASS_NO ipassNo,
				  TO_CHAR(NVL(BILL.CHRG_AMT, 0.0), '999999999990D00') chargeAmount, 
				  TO_CHAR(NVL(BILL.WAVR_AMT, 0.0), '999999999990D00') waiverAmount, 
				  BILL.WAVR_RMK waiverReason, BILL.WAVR_USER_ID waivedBy,
				  TO_CHAR(BILL.CR_DATE, 'DDMONYY HH24:MI') chargeCreationDate, 
				  TO_CHAR(BILL.WAVR_DATE, 'DDMONYY HH24:MI') waiveDate
				FROM 
				(
					SELECT IPASS_NO, TRUCK_NO, CUST_NO, CR_DATE, REISSUED, IPASS_TYPE FROM TCS_IPASS_MASTER IPASS
					WHERE IPASS.IPASS_TYPE = 'P'
					UNION
					SELECT IPASS_NO, TRUCK_NO, CUST_NO, CR_DATE, REISSUED, IPASS_TYPE FROM TCS_IPASS_HIST IPASS
					WHERE IPASS.IPASS_TYPE = 'P'
				) IPASS				
				JOIN BILL_CHARGE_DTL BILL
				ON IPASS.TRUCK_NO = BILL.TRUCK_NO AND BILL.ITM_CODE = 'IPASSCHRG'
				LEFT OUTER JOIN CUST_COMPANY CUST
				ON IPASS.CUST_NO = CUST.CODE AND CUST.ACTIVE = 'Y'
			  	WHERE IPASS.IPASS_TYPE = 'P' AND REISSUED = 'N' AND (#chargeItem# IS NULL OR #chargeItem# = 'PERM')
		]]>
		<isNotEmpty property="from">
			<![CDATA[
				AND BILL.CR_DATE >= TO_DATE(#from#, 'DDMONYY HH24:MI')
			]]>
		</isNotEmpty>
		<isNotEmpty property="to">
			<![CDATA[
				AND BILL.CR_DATE <= TO_DATE(#to#, 'DDMONYY HH24:MI')
			]]>
		</isNotEmpty>	
		<![CDATA[
			),
			TEMP AS (
			  	SELECT 2 ITEM, 'TEMP' type,
				  CUST.CODE_DESC companyName, IPASS.TRUCK_NO truckNo, IPASS.IPASS_NO ipassNo, 
				  TO_CHAR(NVL(BILL.CHRG_AMT, 0.0), '999999999990D00') chargeAmount, 
				  TO_CHAR(NVL(BILL.WAVR_AMT, 0.0), '999999999990D00') waiverAmount, 
				  BILL.WAVR_RMK waiverReason, BILL.WAVR_USER_ID waivedBy,
				  TO_CHAR(BILL.CR_DATE, 'DDMONYY HH24:MI') chargeCreationDate, 
				  TO_CHAR(BILL.WAVR_DATE, 'DDMONYY HH24:MI') waiveDate
				FROM 
				(
					SELECT IPASS_NO, TRUCK_NO, CUST_NO, CR_DATE FROM TCS_IPASS_MASTER IPASS
					WHERE IPASS.IPASS_TYPE = 'T'	
					UNION
					SELECT IPASS_NO, TRUCK_NO, CUST_NO, CR_DATE FROM TCS_IPASS_HIST IPASS 
					WHERE IPASS.IPASS_TYPE = 'T'
				) IPASS
				JOIN BILL_CHARGE_DTL BILL
				ON IPASS.TRUCK_NO = BILL.TRUCK_NO AND BILL.ITM_CODE = 'IPASSCHRG'
				LEFT OUTER JOIN CUST_COMPANY CUST
				ON IPASS.CUST_NO = CUST.CODE AND CUST.ACTIVE = 'Y'
			  	WHERE (#chargeItem# IS NULL OR #chargeItem# = 'TEMP')
		]]>
		<isNotEmpty property="from">
			<![CDATA[
				AND BILL.CR_DATE >= TO_DATE(#from#, 'DDMONYY HH24:MI')
				AND IPASS.CR_DATE >= TO_DATE(#from#, 'DDMONYY HH24:MI')
			]]>
		</isNotEmpty>
		<isNotEmpty property="to">
			<![CDATA[
				AND BILL.CR_DATE <= TO_DATE(#to#, 'DDMONYY HH24:MI')
				AND IPASS.CR_DATE <= TO_DATE(#to#, 'DDMONYY HH24:MI')
			]]>
		</isNotEmpty>
		<![CDATA[
			),		
			REISSUE AS (
				SELECT 3 ITEM, 'REISSUE' type,
				  CUST.CODE_DESC companyName, IPASS.TRUCK_NO truckNo, IPASS.IPASS_NO ipassNo, 
				  TO_CHAR(NVL(BILL.CHRG_AMT, 0.0), '999999999990D00') chargeAmount, 
				  TO_CHAR(NVL(BILL.WAVR_AMT, 0.0), '999999999990D00') waiverAmount, 
				  BILL.WAVR_RMK waiverReason, BILL.WAVR_USER_ID waivedBy,
				  TO_CHAR(BILL.CR_DATE, 'DDMONYY HH24:MI') chargeCreationDate, 
				  TO_CHAR(BILL.WAVR_DATE, 'DDMONYY HH24:MI') waiveDate
				FROM TCS_IPASS_MASTER IPASS
				JOIN BILL_CHARGE_DTL BILL
				ON IPASS.TRUCK_NO = BILL.TRUCK_NO AND BILL.ITM_CODE = 'IPASSCHRG'
				LEFT OUTER JOIN CUST_COMPANY CUST
				ON IPASS.CUST_NO = CUST.CODE AND CUST.ACTIVE = 'Y'
			  	WHERE IPASS.IPASS_TYPE = 'P' AND REISSUED = 'Y' AND (#chargeItem# IS NULL OR #chargeItem# = 'REISSUE')
		]]>
		<isNotEmpty property="from">
			<![CDATA[
				AND BILL.CR_DATE >= TO_DATE(#from#, 'DDMONYY HH24:MI')
			]]>
		</isNotEmpty>
		<isNotEmpty property="to">
			<![CDATA[
				AND BILL.CR_DATE <= TO_DATE(#to#, 'DDMONYY HH24:MI')
			]]>
		</isNotEmpty>
		<![CDATA[
			),		
			PARK AS (
				SELECT 4 ITEM, 'PARK' type,
				  CUST.CODE_DESC companyName, IPASS.TRUCK_NO truckNo, IPASS.IPASS_NO ipassNo, 
				  TO_CHAR(NVL(BILL.CHRG_AMT, 0.0), '999999999990D00') chargeAmount, 
				  TO_CHAR(NVL(BILL.WAVR_AMT, 0.0), '999999999990D00') waiverAmount, 
				  BILL.WAVR_RMK waiverReason, BILL.WAVR_USER_ID waivedBy,
				  TO_CHAR(BILL.CR_DATE, 'DDMONYY HH24:MI') chargeCreationDate, 
				  TO_CHAR(BILL.WAVR_DATE, 'DDMONYY HH24:MI') waiveDate
				FROM BILL_CHARGE_DTL BILL
				JOIN TRUCK_TRIP TRIP
				ON BILL.TRIP_ID = TRIP.TRIP_ID
				JOIN TRUCK_TRIP_EVENTS EVT
				ON TRIP.TRIP_ID = EVT.TRIP_ID
				JOIN (
				  	SELECT IPASS_NO, TRUCK_NO, CUST_NO, ISSUED_ON FROM_DATE, SYSDATE TO_DATE FROM TCS_IPASS_MASTER IPASS
				   	UNION
				  	SELECT IPASS_NO, TRUCK_NO, CUST_NO, ISSUED_ON FROM_DATE, CR_DATE TO_DATE FROM TCS_IPASS_HIST HIST
				) IPASS
				ON TRIP.IPASS_NO = IPASS.IPASS_NO AND EVT.DECL_PURPOSE_TIME BETWEEN IPASS.FROM_DATE AND IPASS.TO_DATE 
				LEFT OUTER JOIN CUST_COMPANY CUST
				ON IPASS.CUST_NO = CUST.CODE AND CUST.ACTIVE = 'Y'
				WHERE BILL.ITM_CODE = 'PARKCHRG' AND (#chargeItem# IS NULL OR #chargeItem# = 'PARK')
		]]>
		<isNotEmpty property="from">
			<![CDATA[
				AND BILL.CR_DATE >= TO_DATE(#from#, 'DDMONYY HH24:MI')
			]]>
		</isNotEmpty>
		<isNotEmpty property="to">
			<![CDATA[
				AND BILL.CR_DATE <= TO_DATE(#to#, 'DDMONYY HH24:MI')
			]]>
		</isNotEmpty>
		<![CDATA[
			),		
			BAN AS (
				SELECT 5 ITEM, 'BAN' type,
				  CUST.CODE_DESC companyName, IPASS.TRUCK_NO truckNo, IPASS.IPASS_NO ipassNo, 
				  TO_CHAR(NVL(BILL.CHRG_AMT, 0.0), '999999999990D00') chargeAmount, 
				  TO_CHAR(NVL(BILL.WAVR_AMT, 0.0), '999999999990D00') waiverAmount, 
				  BILL.WAVR_RMK waiverReason, BILL.WAVR_USER_ID waivedBy,
				  TO_CHAR(BILL.CR_DATE, 'DDMONYY HH24:MI') chargeCreationDate, 
				  TO_CHAR(BILL.WAVR_DATE, 'DDMONYY HH24:MI') waiveDate
				FROM TCS_BAN_TRUCK BAN
				JOIN TCS_BAN_MASTER MAST
				ON BAN.BAN_REASON = MAST.BAN_REASON AND MAST.ITM_CODE IS NOT NULL				
				JOIN BILL_CHARGE_DTL BILL
				ON BAN.TRUCK_NO = BILL.TRUCK_NO
				LEFT OUTER JOIN TCS_IPASS_MASTER IPASS
				ON BAN.IPASS_NO = IPASS.IPASS_NO
				LEFT OUTER JOIN CUST_COMPANY CUST
				ON IPASS.CUST_NO = CUST.CODE AND CUST.ACTIVE = 'Y'
				WHERE BILL.ITM_DESC LIKE 'Ban Truck%' AND (#chargeItem# IS NULL OR #chargeItem# = 'BAN')
		]]>
		<isNotEmpty property="from">
			<![CDATA[
				AND BILL.CR_DATE >= TO_DATE(#from#, 'DDMONYY HH24:MI')
			]]>
		</isNotEmpty>
		<isNotEmpty property="to">
			<![CDATA[
				AND BILL.CR_DATE <= TO_DATE(#to#, 'DDMONYY HH24:MI')
			]]>
		</isNotEmpty>				
		<![CDATA[
			)
			SELECT * FROM PERM
			UNION 
			SELECT * FROM TEMP
			UNION 
			SELECT * FROM REISSUE
			UNION 
			SELECT * FROM PARK
			UNION 
			SELECT * FROM BAN
		]]>
		<dynamic prepend="ORDER BY ">
			1 ASC, 3 ASC, 10 DESC
		</dynamic>
	</select>
	<!-- TCS Peak Day/Hour Statistics Report -->
	<select id="sqlGetTCSPeakDayByMonth" parameterClass="cargo.cms.tcs.bo.TCSReportSearchBO"
		resultClass="cargo.cms.tcs.bo.TCSReportResultBO">
		<![CDATA[
			SELECT DAY || ' 00:00' fromDate, DAY || ' 23:59' toDate
			FROM
			(
			  SELECT COUNT(TRIP_ID) COUNTER, TO_CHAR(ARR_TIME, 'DDMONYY') DAY
			  FROM TRUCK_TRIP TRIP
			  WHERE TO_CHAR(ARR_TIME, 'MONYY') = (#month# || TO_CHAR(SYSDATE, 'YY'))
			  GROUP BY TO_CHAR(ARR_TIME, 'DDMONYY')
			  ORDER BY 1 DESC
			)
			WHERE ROWNUM = 1
		]]>
	</select>
	<select id="sqlGetTCSPeakDayByPeriod" parameterClass="cargo.cms.tcs.bo.TCSReportSearchBO"
		resultClass="cargo.cms.tcs.bo.TCSReportResultBO">
		<![CDATA[
			SELECT DAY || ' 00:00' fromDate, DAY || ' 23:59' toDate
			FROM
			(
			  SELECT COUNT(TRIP_ID) COUNTER, TO_CHAR(ARR_TIME, 'DDMONYY') DAY
			  FROM TRUCK_TRIP TRIP
			  WHERE ARR_TIME >= TO_DATE(#from#, 'DDMONYY HH24:MI') AND ARR_TIME <= TO_DATE(#to#, 'DDMONYY HH24:MI')
			  GROUP BY TO_CHAR(ARR_TIME, 'DDMONYY')
			  ORDER BY 1 DESC
			)
			WHERE ROWNUM = 1		
		]]>
	</select>
	<select id="sqlGetTCSPeakHourByMonth" parameterClass="cargo.cms.tcs.bo.TCSReportSearchBO"
		resultClass="cargo.cms.tcs.bo.TCSReportResultBO">
		<![CDATA[
			SELECT DAY || ':00' fromDate, DAY || ':59' toDate
			FROM
			(
			  SELECT COUNT(TRIP_ID) COUNTER, TO_CHAR(ARR_TIME, 'DDMONYY HH24') DAY
			  FROM TRUCK_TRIP TRIP
			  WHERE TO_CHAR(ARR_TIME, 'MONYY') = (#month# || TO_CHAR(SYSDATE, 'YY'))
			  GROUP BY TO_CHAR(ARR_TIME, 'DDMONYY HH24')
			  ORDER BY 1 DESC
			)
			WHERE ROWNUM = 1		
		]]>
	</select>
	<select id="sqlGetTCSPeakHourByPeriod" parameterClass="cargo.cms.tcs.bo.TCSReportSearchBO"
		resultClass="cargo.cms.tcs.bo.TCSReportResultBO">
		<![CDATA[
			SELECT DAY || ':00' fromDate, DAY || ':59' toDate
			FROM
			(
			  SELECT COUNT(TRIP_ID) COUNTER, TO_CHAR(ARR_TIME, 'DDMONYY HH24') DAY
			  FROM TRUCK_TRIP TRIP
			  WHERE ARR_TIME >= TO_DATE(#from#, 'DDMONYY HH24:MI') AND ARR_TIME <= TO_DATE(#to#, 'DDMONYY HH24:MI')
			  GROUP BY TO_CHAR(ARR_TIME, 'DDMONYY HH24')
			  ORDER BY 1 DESC
			)
			WHERE ROWNUM = 1		
		]]>
	</select>
	<!-- TCS iPass Report -->
	<select id="sqlGetTCSiPassReportPermSummary" parameterClass="cargo.cms.tcs.bo.TCSReportSearchBO"
		resultClass="cargo.cms.tcs.bo.TCSReportResultBO">
		<![CDATA[
			SELECT
			  (SELECT COUNT(IPASS_NO) FROM TCS_IPASS_MASTER IPASS WHERE IPASS.IPASS_TYPE = 'P'
		]]>
		<isNotEmpty property="companyName">
			<![CDATA[
				AND IPASS.CUST_NO = (SELECT CODE FROM CUST_COMPANY WHERE UPPER(CODE_DESC) = UPPER(#companyName#) AND ACTIVE = 'Y')
			]]>
		</isNotEmpty>
		<isNotEmpty property="from">
			<![CDATA[
				AND IPASS.ISSUED_ON >= TO_DATE(#from#, 'DDMONYY HH24:MI')
			]]>
		</isNotEmpty>
		<isNotEmpty property="to">
			<![CDATA[
				AND IPASS.ISSUED_ON <= TO_DATE(#to#, 'DDMONYY HH24:MI')
			]]>
		</isNotEmpty>		
		<![CDATA[
			  ) totalIssuedIpass,
			  (SELECT COUNT(IPASS_NO) FROM TCS_IPASS_MASTER IPASS WHERE IPASS.IPASS_TYPE = 'P' AND IPASS.REISSUED = 'Y'
		]]>
		<isNotEmpty property="companyName">
			<![CDATA[
				AND IPASS.CUST_NO = (SELECT CODE FROM CUST_COMPANY WHERE UPPER(CODE_DESC) = UPPER(#companyName#) AND ACTIVE = 'Y')
			]]>
		</isNotEmpty>
		<isNotEmpty property="from">
			<![CDATA[
				AND IPASS.ISSUED_ON >= TO_DATE(#from#, 'DDMONYY HH24:MI')
			]]>
		</isNotEmpty>
		<isNotEmpty property="to">
			<![CDATA[
				AND IPASS.ISSUED_ON <= TO_DATE(#to#, 'DDMONYY HH24:MI')
			]]>
		</isNotEmpty>		
		<![CDATA[			  
			  ) totalReIssuedIpass,
			  (SELECT COUNT(IPASS_NO) FROM TCS_IPASS_MASTER IPASS WHERE IPASS.IPASS_TYPE = 'P' AND IPASS.STATUS = 'ACTIVE'
		]]>
		<isNotEmpty property="companyName">
			<![CDATA[
				AND IPASS.CUST_NO = (SELECT CODE FROM CUST_COMPANY WHERE UPPER(CODE_DESC) = UPPER(#companyName#) AND ACTIVE = 'Y')
			]]>
		</isNotEmpty>
		<isNotEmpty property="from">
			<![CDATA[
				AND IPASS.ISSUED_ON >= TO_DATE(#from#, 'DDMONYY HH24:MI')
			]]>
		</isNotEmpty>
		<isNotEmpty property="to">
			<![CDATA[
				AND IPASS.ISSUED_ON <= TO_DATE(#to#, 'DDMONYY HH24:MI')
			]]>
		</isNotEmpty>
		<![CDATA[			  
			  ) totalIpassInUse,
			  (
				SELECT TO_CHAR(SUM(NVL(NET_AMT, 0)), '999999999990D00') 
				FROM BILL_CHARGE_DTL 
				WHERE ITM_CODE = 'IPASSCHRG' AND
				TRUCK_NO IN(
				  SELECT TRUCK_NO FROM TCS_IPASS_MASTER IPASS WHERE IPASS.IPASS_TYPE = 'P'
		]]>
		<isNotEmpty property="companyName">
			<![CDATA[
				AND IPASS.CUST_NO = (SELECT CODE FROM CUST_COMPANY WHERE UPPER(CODE_DESC) = UPPER(#companyName#) AND ACTIVE = 'Y')
			]]>
		</isNotEmpty>
		<isNotEmpty property="from">
			<![CDATA[
				AND IPASS.ISSUED_ON >= TO_DATE(#from#, 'DDMONYY HH24:MI')
			]]>
		</isNotEmpty>
		<isNotEmpty property="to">
			<![CDATA[
				AND IPASS.ISSUED_ON <= TO_DATE(#to#, 'DDMONYY HH24:MI')
			]]>
		</isNotEmpty>
		<![CDATA[
				)		  
			  ) totalIpassFees,
			  (
				SELECT TO_CHAR(SUM(NVL(NET_AMT, 0)), '999999999990D00') 
				FROM BILL_CHARGE_DTL 
				WHERE ITM_CODE = 'IPASSCHRG' AND WAVR_DONE = 'N' AND STATUS = 'PAID' AND
				TRUCK_NO IN(
				  SELECT TRUCK_NO FROM TCS_IPASS_MASTER IPASS WHERE IPASS.IPASS_TYPE = 'P'
		]]>
		<isNotEmpty property="companyName">
			<![CDATA[
				AND IPASS.CUST_NO = (SELECT CODE FROM CUST_COMPANY WHERE UPPER(CODE_DESC) = UPPER(#companyName#) AND ACTIVE = 'Y')
			]]>
		</isNotEmpty>
		<isNotEmpty property="from">
			<![CDATA[
				AND IPASS.ISSUED_ON >= TO_DATE(#from#, 'DDMONYY HH24:MI')
			]]>
		</isNotEmpty>
		<isNotEmpty property="to">
			<![CDATA[
				AND IPASS.ISSUED_ON <= TO_DATE(#to#, 'DDMONYY HH24:MI')
			]]>
		</isNotEmpty>
		<![CDATA[
				)			  
			  ) totalIpassFeesCollected
			FROM DUAL
		]]>
	</select>
	<select id="sqlGetTCSiPassReportTempSummary" parameterClass="cargo.cms.tcs.bo.TCSReportSearchBO"
		resultClass="cargo.cms.tcs.bo.TCSReportResultBO">
		<![CDATA[
			SELECT
			  (SELECT COUNT(IPASS_NO) FROM TCS_IPASS_MASTER IPASS WHERE IPASS.IPASS_TYPE = 'T'
		]]>
		<isNotEmpty property="companyName">
			<![CDATA[
				AND IPASS.CUST_NO = (SELECT CODE FROM CUST_COMPANY WHERE UPPER(CODE_DESC) = UPPER(#companyName#) AND ACTIVE = 'Y')
			]]>
		</isNotEmpty>
		<isNotEmpty property="from">
			<![CDATA[
				AND IPASS.ISSUED_ON >= TO_DATE(#from#, 'DDMONYY HH24:MI')
			]]>
		</isNotEmpty>
		<isNotEmpty property="to">
			<![CDATA[
				AND IPASS.ISSUED_ON <= TO_DATE(#to#, 'DDMONYY HH24:MI')
			]]>
		</isNotEmpty>		
		<![CDATA[
			  ) totalIssuedIpass,
			  (
				SELECT TO_CHAR(SUM(NVL(NET_AMT, 0)), '999999999990D00') 
				FROM BILL_CHARGE_DTL 
				WHERE ITM_CODE = 'IPASSCHRG' AND
				TRUCK_NO IN(
				  SELECT TRUCK_NO FROM TCS_IPASS_MASTER IPASS WHERE IPASS.IPASS_TYPE = 'T'
		]]>
		<isNotEmpty property="companyName">
			<![CDATA[
				AND IPASS.CUST_NO = (SELECT CODE FROM CUST_COMPANY WHERE UPPER(CODE_DESC) = UPPER(#companyName#) AND ACTIVE = 'Y')
			]]>
		</isNotEmpty>
		<isNotEmpty property="from">
			<![CDATA[
				AND IPASS.ISSUED_ON >= TO_DATE(#from#, 'DDMONYY HH24:MI')
			]]>
		</isNotEmpty>
		<isNotEmpty property="to">
			<![CDATA[
				AND IPASS.ISSUED_ON <= TO_DATE(#to#, 'DDMONYY HH24:MI')
			]]>
		</isNotEmpty>
		<![CDATA[
				)		  
			  ) totalIpassFees,
			  (
				SELECT TO_CHAR(SUM(NVL(NET_AMT, 0)), '999999999990D00') 
				FROM BILL_CHARGE_DTL 
				WHERE ITM_CODE = 'IPASSCHRG' AND WAVR_DONE = 'N' AND STATUS = 'PAID' AND
				TRUCK_NO IN(
				  SELECT TRUCK_NO FROM TCS_IPASS_MASTER IPASS WHERE IPASS.IPASS_TYPE = 'T'
		]]>
		<isNotEmpty property="companyName">
			<![CDATA[
				AND IPASS.CUST_NO = (SELECT CODE FROM CUST_COMPANY WHERE UPPER(CODE_DESC) = UPPER(#companyName#) AND ACTIVE = 'Y')
			]]>
		</isNotEmpty>
		<isNotEmpty property="from">
			<![CDATA[
				AND IPASS.ISSUED_ON >= TO_DATE(#from#, 'DDMONYY HH24:MI')
			]]>
		</isNotEmpty>
		<isNotEmpty property="to">
			<![CDATA[
				AND IPASS.ISSUED_ON <= TO_DATE(#to#, 'DDMONYY HH24:MI')
			]]>
		</isNotEmpty>
		<![CDATA[
				)			  
			  ) totalIpassFeesCollected
			FROM DUAL
		]]>
	</select>
	<select id="sqlGetTCSiPassReportPermList" parameterClass="cargo.cms.tcs.bo.TCSReportSearchBO"
		resultClass="cargo.cms.tcs.bo.TCSReportResultBO">
		<![CDATA[
			SELECT 
			  CUST.CODE_DESC companyName, TRUCK_NO truckNo, IPASS_NO ipassNo, 
			  IPASS.CR_USER_ID issueBy, USR.CODE_DESC userName, 
			  TO_CHAR(ISSUED_ON, 'DDMONYY') issueDate, 
			  DECODE(REISSUED, 'Y', 'Reissue', '1st Issue') issuance,
			  NVL(REISSUE_REASON, 'Issued') remarks, 
			  TO_CHAR((SELECT SUM(NVL(WAVR_AMT, 0)) FROM BILL_CHARGE_DTL 
			  	WHERE ITM_CODE = 'IPASSCHRG' AND TRUCK_NO = IPASS.TRUCK_NO AND 
			  	WAVR_DONE = 'Y' AND STATUS = 'PAID'), '999999999990D00') waiverAmount
			FROM TCS_IPASS_MASTER IPASS
			LEFT OUTER JOIN CUST_COMPANY CUST
			ON IPASS.CUST_NO = CUST.CODE AND CUST.ACTIVE = 'Y'
			LEFT OUTER JOIN SEC_USER USR
			ON IPASS.CR_USER_ID = USR.CODE AND USR.STATUS = 'A'
			WHERE IPASS.IPASS_TYPE = 'P'	
		]]>
		<isNotEmpty property="companyName">
			<![CDATA[
				AND IPASS.CUST_NO = (SELECT CODE FROM CUST_COMPANY WHERE UPPER(CODE_DESC) = UPPER(#companyName#) AND ACTIVE = 'Y')
			]]>
		</isNotEmpty>
		<isNotEmpty property="from">
			<![CDATA[
				AND IPASS.ISSUED_ON >= TO_DATE(#from#, 'DDMONYY HH24:MI')
			]]>
		</isNotEmpty>
		<isNotEmpty property="to">
			<![CDATA[
				AND IPASS.ISSUED_ON <= TO_DATE(#to#, 'DDMONYY HH24:MI')
			]]>
		</isNotEmpty>
		<![CDATA[
			ORDER BY IPASS.ISSUED_ON DESC
		]]>
	</select>
	<select id="sqlGetTCSiPassReportTempList" parameterClass="cargo.cms.tcs.bo.TCSReportSearchBO"
		resultClass="cargo.cms.tcs.bo.TCSReportResultBO">
		<![CDATA[
			SELECT 
			  CUST.CODE_DESC companyName, 
			  IPASS.APPLICANT_NAME || NVL2(IPASS.APPLICANT_HKID, '/', '') || IPASS.APPLICANT_HKID AS applicantName,
			  TRUCK_NO truckNo, IPASS_NO ipassNo, PURP.CODE_DESC incomingPurpose, 
			  IPASS.NTFY_CONTACT_NO notificationNo, IPASS.CR_USER_ID issueBy, USR.CODE_DESC userName, 
			  TO_CHAR(ISSUED_ON, 'DDMONYY') issueDate, 
			  TO_CHAR((SELECT SUM(NVL(WAVR_AMT, 0)) FROM BILL_CHARGE_DTL
			  	WHERE ITM_CODE = 'IPASSCHRG' AND TRUCK_NO = IPASS.TRUCK_NO AND 
			  	WAVR_DONE = 'Y' AND STATUS = 'PAID'), '999999999990D00') waiverAmount
			FROM TCS_IPASS_MASTER IPASS
			LEFT OUTER JOIN CUST_COMPANY CUST
			ON IPASS.CUST_NO = CUST.CODE AND CUST.ACTIVE = 'Y'
			LEFT OUTER JOIN SEC_USER USR
			ON IPASS.CR_USER_ID = USR.CODE AND USR.STATUS = 'A'
			LEFT OUTER JOIN MAST_TCS_INCOMING_PURPOSE PURP
			ON IPASS.PURPOSE = PURP.CODE
			WHERE IPASS.IPASS_TYPE = 'T'	
		]]>
		<isNotEmpty property="companyName">
			<![CDATA[
				AND IPASS.CUST_NO = (SELECT CODE FROM CUST_COMPANY WHERE UPPER(CODE_DESC) = UPPER(#companyName#) AND ACTIVE = 'Y')
			]]>
		</isNotEmpty>
		<isNotEmpty property="from">
			<![CDATA[
				AND IPASS.ISSUED_ON >= TO_DATE(#from#, 'DDMONYY HH24:MI')
			]]>
		</isNotEmpty>
		<isNotEmpty property="to">
			<![CDATA[
				AND IPASS.ISSUED_ON <= TO_DATE(#to#, 'DDMONYY HH24:MI')
			]]>
		</isNotEmpty>
		<![CDATA[
			ORDER BY IPASS.ISSUED_ON DESC
		]]>
	</select>
	<!-- TCS Vehicle Statistics Report -->
	<select id="sqlGetTCSVehicleStatReportImportList"
		parameterClass="cargo.cms.tcs.bo.TCSReportSearchBO" resultClass="cargo.cms.tcs.bo.TCSReportResultBO">
		<![CDATA[
			WITH PURPOSE AS (
			  SELECT CODE FROM MAST_TCS_INCOMING_PURPOSE COD
			),
			FINAL AS (
			  SELECT WEEK.COUNTER, WEEK.WEEK || ' (' || CNT.TOTAL || ')' day,
			  (
				  SELECT COUNT(TRUCK_NO) FROM TRUCK_TRIP 
				  WHERE TO_CHAR(ARR_TIME, 'MON') = WEEK.MONTH AND TO_CHAR(ARR_TIME, 'YYYY') = WEEK.YEAR AND 
				  PURPOSE IN ('IMP_BULK') AND TO_CHAR(ARR_TIME, 'Dy') = WEEK.WEEK
			  ) bulk,
			  (
				  SELECT COUNT(TRUCK_NO) FROM TRUCK_TRIP 
				  WHERE TO_CHAR(ARR_TIME, 'MON') = WEEK.MONTH AND TO_CHAR(ARR_TIME, 'YYYY') = WEEK.YEAR AND 
				  PURPOSE IN ('IMP_PPK') AND TO_CHAR(ARR_TIME, 'Dy') = WEEK.WEEK
			  ) ppk,
			  (
				  SELECT COUNT(TRUCK_NO) FROM TRUCK_TRIP 
				  WHERE TO_CHAR(ARR_TIME, 'MON') = WEEK.MONTH AND TO_CHAR(ARR_TIME, 'YYYY') = WEEK.YEAR AND
				  PURPOSE IN ('IMP_PER') AND TO_CHAR(ARR_TIME, 'Dy') = WEEK.WEEK
			  ) per,
			  (
				  SELECT COUNT(TRUCK_NO) FROM TRUCK_TRIP 
				  WHERE TO_CHAR(ARR_TIME, 'MON') = WEEK.MONTH AND TO_CHAR(ARR_TIME, 'YYYY') = WEEK.YEAR AND
				  PURPOSE IN ('IMP_DG') AND TO_CHAR(ARR_TIME, 'Dy') = WEEK.WEEK
			  ) dg,			  
			  (
				  SELECT COUNT(TRUCK_NO) FROM TRUCK_TRIP 
				  WHERE TO_CHAR(ARR_TIME, 'MON') = WEEK.MONTH AND TO_CHAR(ARR_TIME, 'YYYY') = WEEK.YEAR AND 
				  PURPOSE IN ('SCH_COLL') AND TO_CHAR(ARR_TIME, 'Dy') = WEEK.WEEK
			  ) schColl,
			  (
				  SELECT COUNT(TRUCK_NO) FROM TRUCK_TRIP 
				  WHERE TO_CHAR(ARR_TIME, 'MON') = WEEK.MONTH AND TO_CHAR(ARR_TIME, 'YYYY') = WEEK.YEAR AND
				  PURPOSE IN ('IMP_BULK', 'IMP_PPK', 'IMP_PER', 'IMP_DG', 'SCH_COLL') AND TO_CHAR(ARR_TIME, 'Dy') = WEEK.WEEK
			  ) total,
			  (
				  SELECT COUNT(TRUCK_NO) / 5 FROM TRUCK_TRIP 
				  WHERE TO_CHAR(ARR_TIME, 'MON') = WEEK.MONTH AND TO_CHAR(ARR_TIME, 'YYYY') = WEEK.YEAR AND
				  PURPOSE IN ('IMP_BULK', 'IMP_PPK', 'IMP_PER', 'IMP_DG', 'SCH_COLL') AND TO_CHAR(ARR_TIME, 'Dy') = WEEK.WEEK
			  ) average
			  FROM (
				  SELECT TO_CHAR(TO_DATE('01MAY11', 'DDMONYY') + counter, 'Dy') WEEK, 
				  counter COUNTER, #month# MONTH, TO_CHAR(SYSDATE, 'YYYY') YEAR
				  FROM DUAL, 
				  XMLTABLE('for $$counter in 1 to xs:int(TOTAL) return $$counter' 
				  PASSING XMLELEMENT(total, 7) COLUMNS counter INTEGER path '.')			  
			  ) WEEK
			  LEFT OUTER JOIN (
				  SELECT COUNT(WEEK) TOTAL, WEEK, MONTH, YEAR
				  FROM (
				    SELECT TO_CHAR(TO_DATE('01JAN' || TO_CHAR(SYSDATE, 'YYYY'), 'DDMONYYYY') + (counter -1), 'Dy') WEEK,
				    TO_CHAR(TO_DATE('01JAN' || TO_CHAR(SYSDATE, 'YYYY'), 'DDMONYYYY') + (counter -1), 'MON') MONTH,
				    TO_CHAR(TO_DATE('01JAN' || TO_CHAR(SYSDATE, 'YYYY'), 'DDMONYYYY') + (counter -1), 'YYYY') YEAR
				    FROM DUAL, 
				    XMLTABLE('for $$counter in 1 to xs:int(TOTAL) return $$counter' 
				    PASSING XMLELEMENT(total, 366) COLUMNS counter INTEGER path '.')
				  )
				  GROUP BY WEEK, MONTH, YEAR			  
			  ) CNT
			  ON WEEK.WEEK = CNT.WEEK AND WEEK.MONTH = CNT.MONTH AND WEEK.YEAR = CNT.YEAR
			),
			TOTAL AS (
			  SELECT 8 COUNTER, 'Total' day,
			  (
				  SELECT COUNT(TRUCK_NO) FROM TRUCK_TRIP 
				  WHERE TO_CHAR(ARR_TIME, 'MON') = WEEK.MONTH AND TO_CHAR(ARR_TIME, 'YYYY') = WEEK.YEAR AND 
				  PURPOSE IN ('IMP_BULK')
			  ) bulk,
			  (
				  SELECT COUNT(TRUCK_NO) FROM TRUCK_TRIP 
				  WHERE TO_CHAR(ARR_TIME, 'MON') = WEEK.MONTH AND TO_CHAR(ARR_TIME, 'YYYY') = WEEK.YEAR AND 
				  PURPOSE IN ('IMP_PPK')
			  ) ppk,
			  (
				  SELECT COUNT(TRUCK_NO) FROM TRUCK_TRIP 
				  WHERE TO_CHAR(ARR_TIME, 'MON') = WEEK.MONTH AND TO_CHAR(ARR_TIME, 'YYYY') = WEEK.YEAR AND
				  PURPOSE IN ('IMP_PER')
			  ) per,
			  (
				  SELECT COUNT(TRUCK_NO) FROM TRUCK_TRIP 
				  WHERE TO_CHAR(ARR_TIME, 'MON') = WEEK.MONTH AND TO_CHAR(ARR_TIME, 'YYYY') = WEEK.YEAR AND
				  PURPOSE IN ('IMP_DG')
			  ) dg,			  
			  (
				  SELECT COUNT(TRUCK_NO) FROM TRUCK_TRIP 
				  WHERE TO_CHAR(ARR_TIME, 'MON') = WEEK.MONTH AND TO_CHAR(ARR_TIME, 'YYYY') = WEEK.YEAR AND 
				  PURPOSE IN ('SCH_COLL')
			  ) schColl,
			  (
				  SELECT COUNT(TRUCK_NO) FROM TRUCK_TRIP 
				  WHERE TO_CHAR(ARR_TIME, 'MON') = WEEK.MONTH AND TO_CHAR(ARR_TIME, 'YYYY') = WEEK.YEAR AND
				  PURPOSE IN ('IMP_BULK', 'IMP_PPK', 'IMP_PER', 'IMP_DG', 'SCH_COLL')
			  ) total,
			  (
				  SELECT COUNT(TRUCK_NO) / 5 FROM TRUCK_TRIP 
				  WHERE TO_CHAR(ARR_TIME, 'MON') = WEEK.MONTH AND TO_CHAR(ARR_TIME, 'YYYY') = WEEK.YEAR AND
				  PURPOSE IN ('IMP_BULK', 'IMP_PPK', 'IMP_PER', 'IMP_DG', 'SCH_COLL')
			  ) average
			  FROM (
				  SELECT TO_CHAR(TO_DATE('01MAY11', 'DDMONYY') + counter, 'Dy') WEEK, 
				  counter COUNTER, #month# MONTH, TO_CHAR(SYSDATE, 'YYYY') YEAR
				  FROM DUAL, 
				  XMLTABLE('for $$counter in 1 to xs:int(TOTAL) return $$counter' 
				  PASSING XMLELEMENT(total, 7) COLUMNS counter INTEGER path '.')			  
			  ) WEEK
			  LEFT OUTER JOIN (
				  SELECT COUNT(WEEK) TOTAL, WEEK, MONTH, YEAR
				  FROM (
				    SELECT TO_CHAR(TO_DATE('01JAN' || TO_CHAR(SYSDATE, 'YYYY'), 'DDMONYYYY') + (counter -1), 'Dy') WEEK,
				    TO_CHAR(TO_DATE('01JAN' || TO_CHAR(SYSDATE, 'YYYY'), 'DDMONYYYY') + (counter -1), 'MON') MONTH,
				    TO_CHAR(TO_DATE('01JAN' || TO_CHAR(SYSDATE, 'YYYY'), 'DDMONYYYY') + (counter -1), 'YYYY') YEAR
				    FROM DUAL, 
				    XMLTABLE('for $$counter in 1 to xs:int(TOTAL) return $$counter' 
				    PASSING XMLELEMENT(total, 366) COLUMNS counter INTEGER path '.')
				  )
				  GROUP BY WEEK, MONTH, YEAR			  
			  ) CNT
			  ON WEEK.WEEK = CNT.WEEK AND WEEK.MONTH = CNT.MONTH AND WEEK.YEAR = CNT.YEAR
			)
			SELECT * FROM FINAL
			UNION
			SELECT * FROM TOTAL
			ORDER BY 1
		]]>
	</select>
	<select id="sqlGetTCSVehicleStatReportExportList"
		parameterClass="cargo.cms.tcs.bo.TCSReportSearchBO" resultClass="cargo.cms.tcs.bo.TCSReportResultBO">
		<![CDATA[
			WITH PURPOSE AS (
			  SELECT CODE FROM MAST_TCS_INCOMING_PURPOSE COD
			),
			FINAL AS (
			  SELECT WEEK.COUNTER, WEEK.WEEK || ' (' || CNT.TOTAL || ')' day,
			  (
				  SELECT COUNT(TRUCK_NO) FROM TRUCK_TRIP 
				  WHERE TO_CHAR(ARR_TIME, 'MON') = WEEK.MONTH AND TO_CHAR(ARR_TIME, 'YYYY') = WEEK.YEAR AND 
				  PURPOSE IN ('EXP_BLKPPK') AND TO_CHAR(ARR_TIME, 'Dy') = WEEK.WEEK
			  ) bulkPPK,
			  (
				  SELECT COUNT(TRUCK_NO) FROM TRUCK_TRIP 
				  WHERE TO_CHAR(ARR_TIME, 'MON') = WEEK.MONTH AND TO_CHAR(ARR_TIME, 'YYYY') = WEEK.YEAR AND 
				  PURPOSE IN ('EXP_BULK') AND TO_CHAR(ARR_TIME, 'Dy') = WEEK.WEEK
			  ) bulk,
			  (
				  SELECT COUNT(TRUCK_NO) FROM TRUCK_TRIP 
				  WHERE TO_CHAR(ARR_TIME, 'MON') = WEEK.MONTH AND TO_CHAR(ARR_TIME, 'YYYY') = WEEK.YEAR AND 
				  PURPOSE IN ('EXP_PPK') AND TO_CHAR(ARR_TIME, 'Dy') = WEEK.WEEK
			  ) ppk,
			  (
				  SELECT COUNT(TRUCK_NO) FROM TRUCK_TRIP 
				  WHERE TO_CHAR(ARR_TIME, 'MON') = WEEK.MONTH AND TO_CHAR(ARR_TIME, 'YYYY') = WEEK.YEAR AND
				  PURPOSE IN ('EXP_PER') AND TO_CHAR(ARR_TIME, 'Dy') = WEEK.WEEK
			  ) per,			  
			  (
				  SELECT COUNT(TRUCK_NO) FROM TRUCK_TRIP 
				  WHERE TO_CHAR(ARR_TIME, 'MON') = WEEK.MONTH AND TO_CHAR(ARR_TIME, 'YYYY') = WEEK.YEAR AND
				  PURPOSE IN ('EXP_DG') AND TO_CHAR(ARR_TIME, 'Dy') = WEEK.WEEK
			  ) dg,
			  (
				  SELECT COUNT(TRUCK_NO) FROM TRUCK_TRIP 
				  WHERE TO_CHAR(ARR_TIME, 'MON') = WEEK.MONTH AND TO_CHAR(ARR_TIME, 'YYYY') = WEEK.YEAR AND
				  PURPOSE IN ('EXP_BLKPPK', 'EXP_BULK', 'EXP_PPK', 'EXP_PER', 'EXP_DG') AND TO_CHAR(ARR_TIME, 'Dy') = WEEK.WEEK
			  ) total,
			  (
				  SELECT COUNT(TRUCK_NO) / 5 FROM TRUCK_TRIP 
				  WHERE TO_CHAR(ARR_TIME, 'MON') = WEEK.MONTH AND TO_CHAR(ARR_TIME, 'YYYY') = WEEK.YEAR AND
				  PURPOSE IN ('EXP_BLKPPK', 'EXP_BULK', 'EXP_PPK', 'EXP_PER', 'EXP_DG') AND TO_CHAR(ARR_TIME, 'Dy') = WEEK.WEEK
			  ) average
			  FROM (
				  SELECT TO_CHAR(TO_DATE('01MAY11', 'DDMONYY') + counter, 'Dy') WEEK, 
				  counter COUNTER, #month# MONTH, TO_CHAR(SYSDATE, 'YYYY') YEAR
				  FROM DUAL, 
				  XMLTABLE('for $$counter in 1 to xs:int(TOTAL) return $$counter' 
				  PASSING XMLELEMENT(total, 7) COLUMNS counter INTEGER path '.')			  
			  ) WEEK
			  LEFT OUTER JOIN (
				  SELECT COUNT(WEEK) TOTAL, WEEK, MONTH, YEAR
				  FROM (
				    SELECT TO_CHAR(TO_DATE('01JAN' || TO_CHAR(SYSDATE, 'YYYY'), 'DDMONYYYY') + (counter -1), 'Dy') WEEK,
				    TO_CHAR(TO_DATE('01JAN' || TO_CHAR(SYSDATE, 'YYYY'), 'DDMONYYYY') + (counter -1), 'MON') MONTH,
				    TO_CHAR(TO_DATE('01JAN' || TO_CHAR(SYSDATE, 'YYYY'), 'DDMONYYYY') + (counter -1), 'YYYY') YEAR
				    FROM DUAL, 
				    XMLTABLE('for $$counter in 1 to xs:int(TOTAL) return $$counter' 
				    PASSING XMLELEMENT(total, 366) COLUMNS counter INTEGER path '.')
				  )
				  GROUP BY WEEK, MONTH, YEAR			  
			  ) CNT
			  ON WEEK.WEEK = CNT.WEEK AND WEEK.MONTH = CNT.MONTH AND WEEK.YEAR = CNT.YEAR
			),
			TOTAL AS (
			  SELECT 8 COUNTER, 'Total' day,
			  (
				  SELECT COUNT(TRUCK_NO) FROM TRUCK_TRIP 
				  WHERE TO_CHAR(ARR_TIME, 'MON') = WEEK.MONTH AND TO_CHAR(ARR_TIME, 'YYYY') = WEEK.YEAR AND 
				  PURPOSE IN ('EXP_BLKPPK')
			  ) bulkPPK,
			  (
				  SELECT COUNT(TRUCK_NO) FROM TRUCK_TRIP 
				  WHERE TO_CHAR(ARR_TIME, 'MON') = WEEK.MONTH AND TO_CHAR(ARR_TIME, 'YYYY') = WEEK.YEAR AND 
				  PURPOSE IN ('EXP_BULK')
			  ) bulk,
			  (
				  SELECT COUNT(TRUCK_NO) FROM TRUCK_TRIP 
				  WHERE TO_CHAR(ARR_TIME, 'MON') = WEEK.MONTH AND TO_CHAR(ARR_TIME, 'YYYY') = WEEK.YEAR AND 
				  PURPOSE IN ('EXP_PPK')
			  ) ppk,
			  (
				  SELECT COUNT(TRUCK_NO) FROM TRUCK_TRIP 
				  WHERE TO_CHAR(ARR_TIME, 'MON') = WEEK.MONTH AND TO_CHAR(ARR_TIME, 'YYYY') = WEEK.YEAR AND
				  PURPOSE IN ('EXP_PER')
			  ) per,
			  (
				  SELECT COUNT(TRUCK_NO) FROM TRUCK_TRIP 
				  WHERE TO_CHAR(ARR_TIME, 'MON') = WEEK.MONTH AND TO_CHAR(ARR_TIME, 'YYYY') = WEEK.YEAR AND
				  PURPOSE IN ('EXP_DG')
			  ) dg,			  
			  (
				  SELECT COUNT(TRUCK_NO) FROM TRUCK_TRIP 
				  WHERE TO_CHAR(ARR_TIME, 'MON') = WEEK.MONTH AND TO_CHAR(ARR_TIME, 'YYYY') = WEEK.YEAR AND
				  PURPOSE IN ('EXP_BLKPPK', 'EXP_BULK', 'EXP_PPK', 'EXP_PER', 'EXP_DG')
			  ) total,
			  (
				  SELECT COUNT(TRUCK_NO) / 4 FROM TRUCK_TRIP
				  WHERE TO_CHAR(ARR_TIME, 'MON') = WEEK.MONTH AND TO_CHAR(ARR_TIME, 'YYYY') = WEEK.YEAR AND
				  PURPOSE IN ('EXP_BLKPPK', 'EXP_BULK', 'EXP_PPK', 'EXP_PER', 'EXP_DG')
			  ) average
			  FROM (
				  SELECT TO_CHAR(TO_DATE('01MAY11', 'DDMONYY') + counter, 'Dy') WEEK, 
				  counter COUNTER, #month# MONTH, TO_CHAR(SYSDATE, 'YYYY') YEAR
				  FROM DUAL, 
				  XMLTABLE('for $$counter in 1 to xs:int(TOTAL) return $$counter' 
				  PASSING XMLELEMENT(total, 7) COLUMNS counter INTEGER path '.')			  
			  ) WEEK
			  LEFT OUTER JOIN (
				  SELECT COUNT(WEEK) TOTAL, WEEK, MONTH, YEAR
				  FROM (
				    SELECT TO_CHAR(TO_DATE('01JAN' || TO_CHAR(SYSDATE, 'YYYY'), 'DDMONYYYY') + (counter -1), 'Dy') WEEK,
				    TO_CHAR(TO_DATE('01JAN' || TO_CHAR(SYSDATE, 'YYYY'), 'DDMONYYYY') + (counter -1), 'MON') MONTH,
				    TO_CHAR(TO_DATE('01JAN' || TO_CHAR(SYSDATE, 'YYYY'), 'DDMONYYYY') + (counter -1), 'YYYY') YEAR
				    FROM DUAL, 
				    XMLTABLE('for $$counter in 1 to xs:int(TOTAL) return $$counter' 
				    PASSING XMLELEMENT(total, 366) COLUMNS counter INTEGER path '.')
				  )
				  GROUP BY WEEK, MONTH, YEAR			  
			  ) CNT
			  ON WEEK.WEEK = CNT.WEEK AND WEEK.MONTH = CNT.MONTH AND WEEK.YEAR = CNT.YEAR
			)
			SELECT * FROM FINAL
			UNION
			SELECT * FROM TOTAL
			ORDER BY 1	
		]]>
	</select>
	<select id="sqlGetTCSVehicleStatReportULDList" parameterClass="cargo.cms.tcs.bo.TCSReportSearchBO"
		resultClass="cargo.cms.tcs.bo.TCSReportResultBO">
		<![CDATA[
			WITH PURPOSE AS (
			  SELECT CODE FROM MAST_TCS_INCOMING_PURPOSE COD
			),
			FINAL AS (
			  SELECT WEEK.COUNTER, WEEK.WEEK || ' (' || CNT.TOTAL || ')' day,
			  (
				  SELECT COUNT(TRUCK_NO) FROM TRUCK_TRIP 
				  WHERE TO_CHAR(ARR_TIME, 'MON') = WEEK.MONTH AND TO_CHAR(ARR_TIME, 'YYYY') = WEEK.YEAR AND 
				  PURPOSE IN ('ULD_RET') AND TO_CHAR(ARR_TIME, 'Dy') = WEEK.WEEK
			  ) ret,
			  (
				  SELECT COUNT(TRUCK_NO) FROM TRUCK_TRIP 
				  WHERE TO_CHAR(ARR_TIME, 'MON') = WEEK.MONTH AND TO_CHAR(ARR_TIME, 'YYYY') = WEEK.YEAR AND 
				  PURPOSE IN ('ULD_COLL') AND TO_CHAR(ARR_TIME, 'Dy') = WEEK.WEEK
			  ) coll,
			  (
				  SELECT COUNT(TRUCK_NO) FROM TRUCK_TRIP 
				  WHERE TO_CHAR(ARR_TIME, 'MON') = WEEK.MONTH AND TO_CHAR(ARR_TIME, 'YYYY') = WEEK.YEAR AND
				  PURPOSE IN ('ULD_RET', 'ULD_COLL') AND TO_CHAR(ARR_TIME, 'Dy') = WEEK.WEEK
			  ) total,
			  (
				  SELECT COUNT(TRUCK_NO) / 2 FROM TRUCK_TRIP 
				  WHERE TO_CHAR(ARR_TIME, 'MON') = WEEK.MONTH AND TO_CHAR(ARR_TIME, 'YYYY') = WEEK.YEAR AND
				  PURPOSE IN ('ULD_RET', 'ULD_COLL') AND TO_CHAR(ARR_TIME, 'Dy') = WEEK.WEEK
			  ) average
			  FROM (
				  SELECT TO_CHAR(TO_DATE('01MAY11', 'DDMONYY') + counter, 'Dy') WEEK, 
				  counter COUNTER, #month# MONTH, TO_CHAR(SYSDATE, 'YYYY') YEAR
				  FROM DUAL, 
				  XMLTABLE('for $$counter in 1 to xs:int(TOTAL) return $$counter' 
				  PASSING XMLELEMENT(total, 7) COLUMNS counter INTEGER path '.')			  
			  ) WEEK
			  LEFT OUTER JOIN (
				  SELECT COUNT(WEEK) TOTAL, WEEK, MONTH, YEAR
				  FROM (
				    SELECT TO_CHAR(TO_DATE('01JAN' || TO_CHAR(SYSDATE, 'YYYY'), 'DDMONYYYY') + (counter -1), 'Dy') WEEK,
				    TO_CHAR(TO_DATE('01JAN' || TO_CHAR(SYSDATE, 'YYYY'), 'DDMONYYYY') + (counter -1), 'MON') MONTH,
				    TO_CHAR(TO_DATE('01JAN' || TO_CHAR(SYSDATE, 'YYYY'), 'DDMONYYYY') + (counter -1), 'YYYY') YEAR
				    FROM DUAL, 
				    XMLTABLE('for $$counter in 1 to xs:int(TOTAL) return $$counter' 
				    PASSING XMLELEMENT(total, 366) COLUMNS counter INTEGER path '.')
				  )
				  GROUP BY WEEK, MONTH, YEAR			  
			  ) CNT
			  ON WEEK.WEEK = CNT.WEEK AND WEEK.MONTH = CNT.MONTH AND WEEK.YEAR = CNT.YEAR
			),
			TOTAL AS (
			  SELECT 8 COUNTER, 'Total' day,
			  (
				  SELECT COUNT(TRUCK_NO) FROM TRUCK_TRIP 
				  WHERE TO_CHAR(ARR_TIME, 'MON') = WEEK.MONTH AND TO_CHAR(ARR_TIME, 'YYYY') = WEEK.YEAR AND 
				  PURPOSE IN ('ULD_RET')
			  ) ret,
			  (
				  SELECT COUNT(TRUCK_NO) FROM TRUCK_TRIP 
				  WHERE TO_CHAR(ARR_TIME, 'MON') = WEEK.MONTH AND TO_CHAR(ARR_TIME, 'YYYY') = WEEK.YEAR AND 
				  PURPOSE IN ('ULD_COLL')
			  ) coll,
			  (
				  SELECT COUNT(TRUCK_NO) FROM TRUCK_TRIP 
				  WHERE TO_CHAR(ARR_TIME, 'MON') = WEEK.MONTH AND TO_CHAR(ARR_TIME, 'YYYY') = WEEK.YEAR AND
				  PURPOSE IN ('ULD_RET', 'ULD_COLL')
			  ) total,
			  (
				  SELECT COUNT(TRUCK_NO) / 2 FROM TRUCK_TRIP 
				  WHERE TO_CHAR(ARR_TIME, 'MON') = WEEK.MONTH AND TO_CHAR(ARR_TIME, 'YYYY') = WEEK.YEAR AND
				  PURPOSE IN ('ULD_RET', 'ULD_COLL')
			  ) average
			  FROM (
				  SELECT TO_CHAR(TO_DATE('01MAY11', 'DDMONYY') + counter, 'Dy') WEEK, 
				  counter COUNTER, #month# MONTH, TO_CHAR(SYSDATE, 'YYYY') YEAR
				  FROM DUAL, 
				  XMLTABLE('for $$counter in 1 to xs:int(TOTAL) return $$counter' 
				  PASSING XMLELEMENT(total, 7) COLUMNS counter INTEGER path '.')			  
			  ) WEEK
			  LEFT OUTER JOIN (
				  SELECT COUNT(WEEK) TOTAL, WEEK, MONTH, YEAR
				  FROM (
				    SELECT TO_CHAR(TO_DATE('01JAN' || TO_CHAR(SYSDATE, 'YYYY'), 'DDMONYYYY') + (counter -1), 'Dy') WEEK,
				    TO_CHAR(TO_DATE('01JAN' || TO_CHAR(SYSDATE, 'YYYY'), 'DDMONYYYY') + (counter -1), 'MON') MONTH,
				    TO_CHAR(TO_DATE('01JAN' || TO_CHAR(SYSDATE, 'YYYY'), 'DDMONYYYY') + (counter -1), 'YYYY') YEAR
				    FROM DUAL, 
				    XMLTABLE('for $$counter in 1 to xs:int(TOTAL) return $$counter' 
				    PASSING XMLELEMENT(total, 366) COLUMNS counter INTEGER path '.')
				  )
				  GROUP BY WEEK, MONTH, YEAR			  
			  ) CNT
			  ON WEEK.WEEK = CNT.WEEK AND WEEK.MONTH = CNT.MONTH AND WEEK.YEAR = CNT.YEAR
			)
			SELECT * FROM FINAL
			UNION
			SELECT * FROM TOTAL
			ORDER BY 1	
		]]>
	</select>
	<select id="sqlGetTCSVehicleStatReportSRList" parameterClass="cargo.cms.tcs.bo.TCSReportSearchBO"
		resultClass="cargo.cms.tcs.bo.TCSReportResultBO">
		<![CDATA[
			WITH PURPOSE AS (
			  SELECT CODE FROM MAST_TCS_INCOMING_PURPOSE COD
			),
			FINAL AS (
			  SELECT WEEK.COUNTER, WEEK.WEEK || ' (' || CNT.TOTAL || ')' day,
			  (
				  SELECT COUNT(TRUCK_NO) FROM TRUCK_TRIP 
				  WHERE TO_CHAR(ARR_TIME, 'MON') = WEEK.MONTH AND TO_CHAR(ARR_TIME, 'YYYY') = WEEK.YEAR AND 
				  PURPOSE IN ('VAL') AND TO_CHAR(ARR_TIME, 'Dy') = WEEK.WEEK
			  ) sr,
			  (
				  SELECT COUNT(TRUCK_NO) FROM TRUCK_TRIP 
				  WHERE TO_CHAR(ARR_TIME, 'MON') = WEEK.MONTH AND TO_CHAR(ARR_TIME, 'YYYY') = WEEK.YEAR AND
				  PURPOSE IN ('VAL') AND TO_CHAR(ARR_TIME, 'Dy') = WEEK.WEEK
			  ) total,
			  (
				  SELECT COUNT(TRUCK_NO) / 1 FROM TRUCK_TRIP 
				  WHERE TO_CHAR(ARR_TIME, 'MON') = WEEK.MONTH AND TO_CHAR(ARR_TIME, 'YYYY') = WEEK.YEAR AND
				  PURPOSE IN ('VAL') AND TO_CHAR(ARR_TIME, 'Dy') = WEEK.WEEK
			  ) average
			  FROM (
				  SELECT TO_CHAR(TO_DATE('01MAY11', 'DDMONYY') + counter, 'Dy') WEEK, 
				  counter COUNTER, #month# MONTH, TO_CHAR(SYSDATE, 'YYYY') YEAR
				  FROM DUAL, 
				  XMLTABLE('for $$counter in 1 to xs:int(TOTAL) return $$counter' 
				  PASSING XMLELEMENT(total, 7) COLUMNS counter INTEGER path '.')			  
			  ) WEEK
			  LEFT OUTER JOIN (
				  SELECT COUNT(WEEK) TOTAL, WEEK, MONTH, YEAR
				  FROM (
				    SELECT TO_CHAR(TO_DATE('01JAN' || TO_CHAR(SYSDATE, 'YYYY'), 'DDMONYYYY') + (counter -1), 'Dy') WEEK,
				    TO_CHAR(TO_DATE('01JAN' || TO_CHAR(SYSDATE, 'YYYY'), 'DDMONYYYY') + (counter -1), 'MON') MONTH,
				    TO_CHAR(TO_DATE('01JAN' || TO_CHAR(SYSDATE, 'YYYY'), 'DDMONYYYY') + (counter -1), 'YYYY') YEAR
				    FROM DUAL, 
				    XMLTABLE('for $$counter in 1 to xs:int(TOTAL) return $$counter' 
				    PASSING XMLELEMENT(total, 366) COLUMNS counter INTEGER path '.')
				  )
				  GROUP BY WEEK, MONTH, YEAR			  
			  ) CNT
			  ON WEEK.WEEK = CNT.WEEK AND WEEK.MONTH = CNT.MONTH AND WEEK.YEAR = CNT.YEAR
			  ORDER BY WEEK.COUNTER
			),
			TOTAL AS (
			  SELECT 8 COUNTER, 'Total' day,
			  (
				  SELECT COUNT(TRUCK_NO) FROM TRUCK_TRIP 
				  WHERE TO_CHAR(ARR_TIME, 'MON') = WEEK.MONTH AND TO_CHAR(ARR_TIME, 'YYYY') = WEEK.YEAR AND 
				  PURPOSE IN ('VAL')
			  ) sr,
			  (
				  SELECT COUNT(TRUCK_NO) FROM TRUCK_TRIP 
				  WHERE TO_CHAR(ARR_TIME, 'MON') = WEEK.MONTH AND TO_CHAR(ARR_TIME, 'YYYY') = WEEK.YEAR AND
				  PURPOSE IN ('VAL')
			  ) total,
			  (
				  SELECT COUNT(TRUCK_NO) / 1 FROM TRUCK_TRIP 
				  WHERE TO_CHAR(ARR_TIME, 'MON') = WEEK.MONTH AND TO_CHAR(ARR_TIME, 'YYYY') = WEEK.YEAR AND
				  PURPOSE IN ('VAL')
			  ) average
			  FROM (
				  SELECT TO_CHAR(TO_DATE('01MAY11', 'DDMONYY') + counter, 'Dy') WEEK, 
				  counter COUNTER, #month# MONTH, TO_CHAR(SYSDATE, 'YYYY') YEAR
				  FROM DUAL, 
				  XMLTABLE('for $$counter in 1 to xs:int(TOTAL) return $$counter' 
				  PASSING XMLELEMENT(total, 7) COLUMNS counter INTEGER path '.')			  
			  ) WEEK
			  LEFT OUTER JOIN (
				  SELECT COUNT(WEEK) TOTAL, WEEK, MONTH, YEAR
				  FROM (
				    SELECT TO_CHAR(TO_DATE('01JAN' || TO_CHAR(SYSDATE, 'YYYY'), 'DDMONYYYY') + (counter -1), 'Dy') WEEK,
				    TO_CHAR(TO_DATE('01JAN' || TO_CHAR(SYSDATE, 'YYYY'), 'DDMONYYYY') + (counter -1), 'MON') MONTH,
				    TO_CHAR(TO_DATE('01JAN' || TO_CHAR(SYSDATE, 'YYYY'), 'DDMONYYYY') + (counter -1), 'YYYY') YEAR
				    FROM DUAL, 
				    XMLTABLE('for $$counter in 1 to xs:int(TOTAL) return $$counter' 
				    PASSING XMLELEMENT(total, 366) COLUMNS counter INTEGER path '.')
				  )
				  GROUP BY WEEK, MONTH, YEAR			  
			  ) CNT
			  ON WEEK.WEEK = CNT.WEEK AND WEEK.MONTH = CNT.MONTH AND WEEK.YEAR = CNT.YEAR        
			)
			SELECT * FROM FINAL
			UNION
			SELECT * FROM TOTAL
			ORDER BY 1
		]]>
	</select>
	<!-- TCS Raw Data Report -->
	<select id="sqlGetTCSRawDataReport" parameterClass="cargo.cms.tcs.bo.TCSReportSearchBO"
		resultClass="cargo.cms.tcs.bo.TCSReportResultBO">
		<![CDATA[
			SELECT TRIP.TRUCK_NO truckNo, IPASS.IPASS_NO ipassNo, TYP.CODE_DESC ipassType, 
			PURP.CODE_DESC incomingPurpose, TRIP.TRUCK_DOCK dockNo, 
			TO_CHAR(EVT.TRUCK_PARK_ENTRY_TIME, 'DDMONYY HH24:MI') truckParkEntryTime, 
			TO_CHAR(EVT.DECL_PURPOSE_TIME, 'DDMONYY HH24:MI') declIncomingPurposeTime, 
			TO_CHAR(EVT.TRUCK_IN_QUEUE_TIME, 'DDMONYY HH24:MI') truckInQueueTime, 
			TO_CHAR(EVT.DOCK_ALLOCATION_TIME, 'DDMONYY HH24:MI') dockAllocationTime, 
			TO_CHAR(EVT.LEAVE_TRUCKPARK_TIME, 'DDMONYY HH24:MI') leaveTruckParkTime, 
			TO_CHAR(EVT.TERMINAL_ENTRY_TIME, 'DDMONYY HH24:MI') terminalEntryTime, 
			TO_CHAR(EVT.LVL2_RAMP_CHKPT_TIME, 'DDMONYY HH24:MI') level2RampCheckpoint, 
			TO_CHAR(EVT.LVL3_RAMP_CHKPT_TIME, 'DDMONYY HH24:MI') level3RampCheckpoint,
			TO_CHAR(EVT.LVL3_EAST_CHKPT_TIME, 'DDMONYY HH24:MI') level3EastCheckpoint, 
			TO_CHAR(EVT.LVL3_WEST_CHKPT_TIME, 'DDMONYY HH24:MI') level3WestCheckpoint, 
			TO_CHAR(EVT.LVL5_RAMP_CHKPT_TIME, 'DDMONYY HH24:MI') level5RampCheckpoint, 
			TO_CHAR(EVT.LVL5_EAST_CHKPT_TIME, 'DDMONYY HH24:MI') level5EastCheckpoint, 
			TO_CHAR(EVT.LVL5_WEST_CHKPT_TIME, 'DDMONYY HH24:MI') level5WestCheckpoint, 
			TO_CHAR(EVT.LVL7_UP_CHKPT, 'DDMONYY HH24:MI') level7UpCheckpoint,
			TO_CHAR(EVT.LVL7_DOWN_CHKPT, 'DDMONYY HH24:MI') level7DownCheckpoint, 
			TO_CHAR(EVT.DOCK_OCCUPY_TIME, 'DDMONYY HH24:MI') dockOccupancyTime, 
			TO_CHAR(EVT.LEAVE_DOCK_TIME, 'DDMONYY HH24:MI') leaveDockTime, 
			TO_CHAR(EVT.LVL3_EXIT_CHKPT_TIME, 'DDMONYY HH24:MI') level3ExitCheckpoint,
			TO_CHAR(EVT.LVL5_EXIT_CHKPT_TIME, 'DDMONYY HH24:MI') level5ExitCheckpoint,
			(SELECT DECODE(COUNT(BAN.TRUCK_NO), 0, 'N', 'Y') FROM TCS_BAN_TRUCK BAN
				WHERE BAN.TRUCK_NO = TRIP.TRUCK_NO AND STATUS IN('BANNED', 'ONETIME') AND 
				BAN_FROM <= SYSDATE AND BAN_TO >= TO_DATE(TO_CHAR(SYSDATE, 'DDMONYY'), 'DDMONYY')
			) banned
			FROM TRUCK_TRIP TRIP
			LEFT OUTER JOIN TRUCK_TRIP_EVENTS EVT
			ON TRIP.TRIP_ID = EVT.TRIP_ID
			JOIN TCS_IPASS_MASTER IPASS
			ON TRIP.TRUCK_NO = IPASS.TRUCK_NO
			LEFT OUTER JOIN MAST_CODE_DTL TYP
			ON IPASS.IPASS_TYPE = TYP.CODE AND TYP.CODE_TYPE = 'TCS_IPASS_TYPE'
			LEFT OUTER JOIN MAST_TCS_INCOMING_PURPOSE PURP
			ON TRIP.PURPOSE = PURP.CODE
			WHERE 1 = 1
		]]>
		<isNotEmpty property="from">
			<![CDATA[
				AND TRIP.ARR_TIME >= TO_DATE(#from#, 'DDMONYY HH24:MI')
			]]>
		</isNotEmpty>
		<isNotEmpty property="to">
			<![CDATA[
				AND TRIP.ARR_TIME <= TO_DATE(#to#, 'DDMONYY HH24:MI')
			]]>
		</isNotEmpty>
		<dynamic prepend="ORDER BY ">
			TRIP.ARR_TIME DESC, TRIP.TRUCK_NO
		</dynamic>
	</select>
	<!-- Truck Control System (TCS) Reports (End) -->
</sqlMap>