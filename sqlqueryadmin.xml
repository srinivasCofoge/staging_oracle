<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="admin">

	<!--  Added the following SQLs to dispay Terms and Conditions - Sriram A - 10-Nov-2010 -->
	<select id="sqlgettncbytcidorfnname" parameterClass="cargo.cms.admin.bo.TermsAndConditionsBO" resultClass="cargo.cms.admin.bo.TermsAndConditionsBO">
		select tc_id tcId, function_name functionName, UTL_RAW.CAST_TO_VARCHAR2(DBMS_LOB.SUBSTR(TC, 4000,1)) tcHTML, tc_ind tcInd from maintain_tc where (tc_id = #tcId# or function_name=#functionName# or function_code=#functionCode#)
	</select>
	

	<update id="updateTcInfo" parameterClass="cargo.cms.admin.bo.TermsAndConditionsBO">
		UPDATE MAINTAIN_TC SET TC = #tcBytes# ,TC_IND = #tcInd#	WHERE	FUNCTION_CODE = (SELECT CODE FROM MAST_CODE_DTL WHERE CODE_TYPE='TERMS_CONDITION' AND GROUP_CODE = '38' AND CODE_DESC = #functionName#)  
	</update>
	
	<select id="fetchMaxTcId" parameterClass="cargo.cms.admin.bo.TermsAndConditionsBO" resultClass="java.lang.String">
		SELECT NVL(MAX(TC_ID) + 1,1) FROM MAINTAIN_TC
	</select>
	
	<insert id="insertTcInfo" parameterClass="cargo.cms.admin.bo.TermsAndConditionsBO">
		INSERT INTO MAINTAIN_TC(TC_ID,FUNCTION_NAME,TC,TC_IND,FUNCTION_CODE) VALUES(#tcId#, #functionName#,#tcBytes#,#tcInd#,(SELECT CODE FROM MAST_CODE_DTL WHERE CODE_TYPE='TERMS_CONDITION' AND GROUP_CODE = '38' AND CODE_DESC = #functionName#)) 
	</insert>
	
	<select id="fetchFunctions" parameterClass="java.lang.String" resultClass="cargo.cms.afw.bo.MasterBO">
		SELECT FUNCTION_NAME AS codeDesc FROM MAINTAIN_TC WHERE FUNCTION_NAME != #func_name# ORDER BY FUNCTION_NAME ASC
	</select>
	<select id="imp_getdateForColl"  parameterClass="map"  resultClass="java.lang.String" >
			SELECT UPPER(TO_CHAR(SYSDATE,'DDMONYY HH24MI')) FROM DUAL
   	</select>
   	
   	 <select id="admin_checkBetSysdate"  parameterClass="map"  resultClass="java.lang.String" >
			select count(1) from dual where SYSDATE between to_date(#effFrom#,'DDMONYY') and to_date(#effTo#,'DDMONYY')
   	 </select>
   	 
   	<select id="checkCurrentDateDifference"  parameterClass="map"  resultClass="java.lang.Integer" >
			SELECT TO_CHAR(TO_DATE(#effTo#,'DDMONYY') - TO_DATE(#effFrom#,'DDMONYY')) DAYDIFF FROM DUAL
	</select>
   	 
   	 
	<select id="addTheSysdate"  parameterClass="map"  resultClass="java.lang.String" >
			select to_char(Sysdate+3, 'DDMONYY') from dual
   	 </select>
   	 
   	<select id="CHECK_EFF_DATE_FROM_RESULT"  parameterClass="map"  resultClass="java.lang.Integer" >
			SELECT TO_CHAR(TO_DATE(#addDays#,'DDMONYY') - TO_DATE(#EffFrom#,'DDMONYY')) DAYDIFF FROM DUAL
	</select>
   	 
<!-- ============================================================================ -->
<!--                                 REGISTRATION REQUEST                         -->
<!-- ============================================================================ -->
	<insert id="sqlCompanyInsert" parameterClass="cargo.cms.admin.bo.RegistrationRequestBO">
		INSERT INTO CUST_REGISTRATION( 
			REG_ID,
			REG_STATUS,
			CO_NAME,
			CO_NATURE,
			CO_IATA_CODE,
			BUS_REG_NO,
			EMAIL1,
			EMAIL2,
			ADD1,
			ADD2,
			ADD3,
			ADD4,
			ADD5,
			CITY,
			PIN_CODE,
			CTRY_CODE,
			TEL,
			CONTACT_NO,
			FAX1,
			FAX2,
			ADMIN_NAME,
			ADMIN_TITLE,
			ADMIN_EMAIL,
			ADMIN_CONTACT_NO,
			ADMIN_USER_ID,
			ADMIN_PASSWD,
			NOTEIR_EMAIL1,
			NOTEIR_EMAIL2,
			NOTEIR_EMAIL3,
			NOTEIR_EMAIL4,
			NOTEIR_EMAIL5,
			NOTEIR_FAX1,
			NOTEIR_FAX2,
			NOTEIR_FAX3,
			NOTMRCL_EMAIL1,
			NOTMRCL_EMAIL2,
			NOTMRCL_EMAIL3,
			NOTMRCL_EMAIL4,
			NOTMRCL_EMAIL5,
			NOTMRCL_FAX1,
			NOTMRCL_FAX2,
			NOTMRCL_FAX3,
			NOTECAN_EMAIL1,
			NOTECAN_EMAIL2,
			NOTECAN_EMAIL3,
			NOTECAN_EMAIL4,
			NOTECAN_EMAIL5,
			NOTECAN_FAX1,
			NOTECAN_FAX2,
			NOTECAN_FAX3,
			NOTSCHC_EMAIL1,
			NOTSCHC_EMAIL2,
			NOTSCHC_EMAIL3,
			NOTSCHC_EMAIL4,
			NOTSCHC_EMAIL5,
			NOTSCHC_FAX1,
			NOTSCHC_FAX2,
			NOTSCHC_FAX3,
			NOTDCN_EMAIL1,
			NOTDCN_EMAIL2,
			NOTDCN_EMAIL3,
			NOTDCN_EMAIL4,
			NOTDCN_EMAIL5,
			NOTDCN_FAX1,
			NOTDCN_FAX2,
			NOTDCN_FAX3,
			NOTHMAN_EMAIL1,
			NOTHMAN_EMAIL2,
			NOTHMAN_EMAIL3,
			NOTHMAN_EMAIL4,
			NOTHMAN_EMAIL5,
			NOTHMAN_FAX1,
			NOTHMAN_FAX2,
			NOTHMAN_FAX3,
			CR_USER_ID,
			CR_DATE,
			LM_USER_ID,
			LM_DATE,
			IMAGE,
			HK_ID,
			BR_UPLD_IND,
			ADMIN_HK_ID) 
		VALUES ( 
			#registrationID#,
			'P',
			#name#,
			#companyNature#,
			#iataCode#,
			#businessRegistrationNumber#,
			#email1#,
			#email2#,
			#address1#,
			#address2#,
			#address3#,
			#address4#,
			#address5#,
			#cityCode#,
			#postalCode#,
			#countryCode#,
			#telephoneNumber#,
			#contactNumber#,
			#fax1#,
			#fax2#,
			#adminName#,
			#adminTitle#,
			#adminEmail#,
			#adminContactNumber#,
			#adminUserID#,
			#adminPassword#,
			#notificationEmail1#,
			#notificationEmail2#,
			#notificationEmail3#,
			#notificationEmail4#,
			#notificationEmail5#,
			#notificationFax1#,
			#notificationFax2#,
			#notificationFax3#,
			#notificationMRCLEmail1#,
			#notificationMRCLEmail2#,
			#notificationMRCLEmail3#,
			#notificationMRCLEmail4#,
			#notificationMRCLEmail5#,
			#notificationMRCLFax1#,
			#notificationMRCLFax2#,
			#notificationMRCLFax3#,
			#notificationECANEmail1#,
			#notificationECANEmail2#,
			#notificationECANEmail3#,
			#notificationECANEmail4#,
			#notificationECANEmail5#,
			#notificationECANFax1#,
			#notificationECANFax2#,
			#notificationECANFax3#,
			#notificationSCNEmail1#,
			#notificationSCNEmail2#,
			#notificationSCNEmail3#,
			#notificationSCNEmail4#,
			#notificationSCNEmail5#,
			#notificationSCNFax1#,
			#notificationSCNFax2#,
			#notificationSCNFax3#, 
			#notificationDCNEmail1#,
			#notificationDCNEmail2#,
			#notificationDCNEmail3#,
			#notificationDCNEmail4#,
			#notificationDCNEmail5#,
			#notificationDCNFax1#,
			#notificationDCNFax2#,
			#notificationDCNFax3#,
			#notificationHMAEmail1#,
			#notificationHMAEmail2#,
			#notificationHMAEmail3#,
			#notificationHMAEmail4#,
			#notificationHMAEmail5#,
			#notificationHMAFax1#,
			#notificationHMAFax2#,
			#notificationHMAFax3#,
			#creatorUserID#,
			sysDate, 
			#lastModifiedUserID#, 
			sysDate,
			#transactionId#,
			#hkId#,
			#brInd#,
			#adminHkId#)
	</insert>
	
	<select id="selectUserRoleCategory" parameterClass="cargo.cms.admin.bo.UserBO" resultClass="cargo.cms.admin.bo.RoleBO">
		select distinct code_desc as roleDesc, role_name as roleName, role_category as roleCategory from sec_user_role a, sec_role b  where a.ROLE_NAME=b.CODE
	</select>


	<select id="sqlCompanyGetLatestTr" parameterClass="java.util.HashMap" resultClass="java.lang.String">
	<!-- offshore changed on ?11MAY06 by ?Allan? Starts here  -->
	<!-- offshore changed on 06JUN06 by Allan Starts here  -->
	select to_char(concat(concat(to_char(sysdate,'YY'),'-'), lpad(reg_seq.nextval,5, '0')))
		from dual
	<!-- offshore changed on 06JUN06 by Allan Ends here  -->
	<!-- offshore changed on ?11MAY06 by ?Allan? Starts here  -->
	</select>

	<select id="sqlCompanyQuery" parameterClass="cargo.cms.admin.bo.QueryRegistrationBO" resultClass="cargo.cms.admin.bo.RegistrationListBO">
		<![CDATA[
			SELECT REG_STATUS AS status,
				CO_NAME AS companyName,
				CO_IATA_CODE AS companyIATACode, 
				to_char(CR_DATE,'DDMONYY') AS registeredDate,
				REG_ID AS applicationRefNo,
				CO_NATURE AS companyNature, 
        		DECODE((select count(1) from fw_image_store where img_session_id = image and IMG_NAME is not null and nvl(delete_flag,'N') = 'N'),  0,  'N', 'Y') AS brUploaded,
				TO_CHAR(REG_PROC_DATE, 'DDMONYY') AS processDate 
			FROM CUST_REGISTRATION
			WHERE NVL(#status#, NVL(REG_STATUS, '1')) = NVL(REG_STATUS, '1')
			AND CR_DATE >= TO_DATE(#registeredDateFrom#,'DDMONYY') AND CR_DATE < TO_DATE(#registeredDateTo#,'DDMONYY')+1
			  ]]>
			<isNotEmpty property="companyName">
				AND CO_NAME like #companyName# 
			</isNotEmpty>
			AND NVL(#companyIATACode#, NVL(CO_IATA_CODE, '1')) = NVL(CO_IATA_CODE, '1')
			AND NVL(#applicationRefNo#, NVL(REG_ID, '1')) = NVL(REG_ID, '1')
			ORDER BY CR_DATE  
		
	</select>

	<select id="sqlGetCompanyDetails" parameterClass="cargo.cms.admin.bo.RegistrationRequestBO" resultClass="cargo.cms.admin.bo.RegistrationRequestBO">
		SELECT 
			REG_STATUS AS status,
			REG_ID AS registrationID,
			CO_NAME AS name,
			CO_NATURE AS companyNature,
			CO_IATA_CODE AS iataCode,
			BUS_REG_NO AS businessRegistrationNumber,
			DECODE((select count(1) from fw_image_store where img_session_id = image and IMG_NAME is not null and nvl(delete_flag,'N') = 'N'),  0,  'N', 'Y') AS brUploaded,
			IMAGE AS transactionId,
			EMAIL1 AS email1,
			EMAIL2 AS email2,
			ADD1 AS address1,
			ADD2 AS address2,
			ADD3 AS address3,
			ADD4 AS address4,
			ADD5 AS address5,
			CITY AS city,
			PIN_CODE AS postalCode,
			CTRY_CODE AS country,
			TEL AS telephoneNumber,
			CONTACT_NO AS contactNumber,
			FAX1 AS fax1,
			FAX2 AS fax2,
			ADMIN_NAME AS adminName,
			ADMIN_TITLE AS adminTitle,
			ADMIN_EMAIL AS adminEmail,
			ADMIN_CONTACT_NO AS adminContactNumber,
			ADMIN_USER_ID AS adminUserID,
			MATCH_AGENT AS matchingAgent,
			<!-- Offshore change by Allan Starts Tue May 23 18:04:11 SGT 2006 @461 /Internet Time/-->
			MATCH_AIRLINE AS matchingAirline,
			<!-- Offshore change by Allan Ends Tue May 23 18:04:11 SGT 2006 @461 /Internet Time/ -->
			ADMIN_PASSWD AS adminPassword,
			NOTEIR_EMAIL1 AS notificationEmail1,
			NOTEIR_EMAIL2 AS notificationEmail2,
			NOTEIR_EMAIL3 AS notificationEmail3,
			NOTEIR_EMAIL4 AS notificationEmail4,
			NOTEIR_EMAIL5 AS notificationEmail5,
			NOTEIR_FAX1 AS notificationFax1,
			NOTEIR_FAX2 AS notificationFax2,
			NOTEIR_FAX3 AS notificationFax3,
			NOTMRCL_EMAIL1 AS notificationMRCLEmail1,
			NOTMRCL_EMAIL2 AS notificationMRCLEmail2,
			NOTMRCL_EMAIL3 AS notificationMRCLEmail3,
			NOTMRCL_EMAIL4 AS notificationMRCLEmail4,
			NOTMRCL_EMAIL5 AS notificationMRCLEmail5,
			NOTMRCL_FAX1 AS notificationMRCLFax1,
			NOTMRCL_FAX2 AS notificationMRCLFax2,
			NOTMRCL_FAX3 AS notificationMRCLFax3,
			NOTECAN_EMAIL1 AS notificationECANEmail1,
			NOTECAN_EMAIL2 AS notificationECANEmail2,
			NOTECAN_EMAIL3 AS notificationECANEmail3,
			NOTECAN_EMAIL4 AS notificationECANEmail4,
			NOTECAN_EMAIL5 AS notificationECANEmail5,
			NOTECAN_FAX1 AS notificationECANFax1,
			NOTECAN_FAX2 AS notificationECANFax2,
			NOTECAN_FAX3 AS notificationECANFax3,
			NOTSCHC_EMAIL1 AS notificationSCNEmail1,
			NOTSCHC_EMAIL2 AS notificationSCNEmail2,
			NOTSCHC_EMAIL3 AS notificationSCNEmail3,
			NOTSCHC_EMAIL4 AS notificationSCNEmail4,
			NOTSCHC_EMAIL5 AS notificationSCNEmail5,
			NOTSCHC_FAX1 AS notificationSCNFax1,
			NOTSCHC_FAX2 AS notificationSCNFax2,
			NOTSCHC_FAX3 AS notificationSCNFax3,
			NOTDCN_EMAIL1 AS notificationDCNEmail1,
			NOTDCN_EMAIL2 AS notificationDCNEmail2,
			NOTDCN_EMAIL3 AS notificationDCNEmail3,
			NOTDCN_EMAIL4 AS notificationDCNEmail4,
			NOTDCN_EMAIL5 AS notificationDCNEmail5,
			NOTDCN_FAX1 AS notificationDCNFax1,
			NOTDCN_FAX2 AS notificationDCNFax2,
			NOTDCN_FAX3 AS notificationDCNFax3,
			NOTHMAN_EMAIL1 AS notificationHMAEmail1,
			NOTHMAN_EMAIL2 AS notificationHMAEmail2,
			NOTHMAN_EMAIL3 AS notificationHMAEmail3,
			NOTHMAN_EMAIL4 AS notificationHMAEmail4,
			NOTHMAN_EMAIL5 AS notificationHMAEmail5,
			NOTHMAN_FAX1 AS notificationHMAFax1,
			NOTHMAN_FAX2 AS notificationHMAFax2,
			NOTHMAN_FAX3 AS notificationHMAFax3,
			CR_USER_ID AS creatorUserID,
			CR_DATE AS creationDate,
			LM_USER_ID AS lastModifiedUserID,
			LM_DATE AS lastModifiedDate,
			REG_PROC_RMK AS processRemarks,
			ADMIN_HK_ID AS adminHkId,
			IMAGE AS transactionId
		FROM CUST_REGISTRATION 
		WHERE REG_ID = #registrationID#
	</select>

	<select id="sqlCheckCompanyAlreadRegistered" parameterClass="cargo.cms.admin.bo.RegistrationRequestBO" resultClass="java.lang.String">
 		select to_char(count(1)) from cust_registration where co_name=#name#
	</select>
	
	<select id="sqlCheckCompanyAlreadExistsInMasters" parameterClass="java.lang.String" resultClass="java.lang.Integer">
 	 	select count(1) from cust_company where code_desc=#name#
	</select>

	<select id="sqlCheckCompExists" parameterClass="cargo.cms.admin.bo.RegistrationRequestBO" resultClass="java.lang.String">
		select count(1) from cust_company where code_desc=#name# and ((AGENT_YN = 'Y' and #companyNature# = 'Cargo Agent') or (AIRLINE_YN = 'Y' and #companyNature# = 'Airline')
		or (TRUCKER_YN = 'Y' and #companyNature# = 'Trucker')or (TCS_YN = 'Y' and #companyNature# = 'TCS User'))
	</select>
	
	<select id="sqlCheckCountryIsInMasters" parameterClass="cargo.cms.admin.bo.RegistrationRequestBO" resultClass="java.lang.String">
		SELECT CODE FROM MAST_COUNTRY WHERE UPPER(CODE)=UPPER(#country#) AND ROWNUM=1
	</select>

	<select id="sqlCheckCityIsInMasters" parameterClass="cargo.cms.admin.bo.RegistrationRequestBO" resultClass="java.lang.String">
		select CODE from MAST_CITY where code=#city# and rownum=1
	</select>
	
	

	<update id="sqlProcessRegistration" parameterClass="cargo.cms.admin.bo.RegistrationRequestBO">
		UPDATE CUST_REGISTRATION SET reg_status = #status#,
			reg_proc_date = sysdate,
			reg_proc_rmk = #processRemarks#,
			lm_user_id = #lastModifiedUserID#,
<!-- Offshore change by Allan Tue May 23 11:18:00 SGT 2006 @179 /Internet Time/ Start-->
			<isNotEmpty property="matchingAgent">
				match_agent = (SELECT CODE FROM CUST_COMPANY WHERE CODE_DESC = #matchingAgent#),
			</isNotEmpty>
			<isNotEmpty property="matchingAirline">
				match_airline = (SELECT CODE FROM CUST_COMPANY WHERE CODE_DESC = #matchingAirline#),
			</isNotEmpty>
<!-- Offshore change by Allan Tue May 23 11:18:00 SGT 2006 @179 /Internet Time/ Start-->
			lm_date = sysdate 
		WHERE reg_id=#registrationID# 
	</update>

	<select id="sqlGetRegistrationProcessID" parameterClass="cargo.cms.admin.bo.RegistrationRequestBO" resultClass="java.lang.String">
		select to_char(count(1)) from cust_registration where reg_proc_id=lpad(#processID#,7, '0')
	</select>
	
<!-- Offshore Change by Allan Mon May 22 17:14:50 SGT 2006 @426 /Internet Time/ Starts-->
	<insert id="sqlInsertCompanyToCUST_COMPANY" parameterClass="cargo.cms.admin.bo.RegistrationApproveBO">
		insert into cust_company(
			CODE,
			CODE_DESC,
			HAFFA_MEMBER,
			SELF_HANDLING,
			BUS_REG_NO,
			AIRLINE_YN,
			AGENT_YN,
			CONS_YN,
			TRUCKER_YN,
			TCS_YN,
			ADMIN_NAME,
			ADMIN_TITLE,
			ADMIN_USER_ID,
			ADMIN_PASSWD,
			ADD1,
			CTRY_CODE,
			PAY_MODE_CAS,
			PAY_MODE_CHQ,
			PAY_MODE_CCD,
			PAY_MODE_EPS,
			BLACKLISTED,
			ACTIVE,
			CR_USER_ID,
			CR_DATE,
			LM_USER_ID,
			LM_DATE,
			CO_IATA_CODE,
			ADMIN_EMAIL,
			ADMIN_CONTACT_NO,
			EMAIL1,
			EMAIL2,
			ADD2,
			ADD3,
			ADD4,
			ADD5,
			CITY,
			PIN_CODE,
			FAX1,
			FAX2,
			REG_APRVD_DATE,
			REG_ID,
			CUST_TYPE,
			TEL1)
		values (
			#customerNumber#,
			#name#,
			'N',
			'Y',
			#businessRegistrationNumber#,
			#airlineYN#,
			#agentYN#,
			#consigneeYN#,
			#truckerYN#,
			#tcsUserYN#,
			#adminName#,
			#adminTitle#,
			#adminUserID#,
			#adminPassword#,
			#address1#,
			#country#,
			'N',
			'N',
			'N',
			'N',
			'N',
			'Y',
			#userID#,
			sysDate,
			#userID#,
			sysdate,
			#iataCode#,
			#adminEmail#,
			#adminContactNumber#,
			#email1#,
			#email2#,
			#address2#,
			#address3#,
			#address4#,
			#address5#,
			#city#,
			#postalCode#,
			#fax1#,
			#fax2#,
			sysdate,
			#registrationID#,
			#companyNature#,
			#telephoneNumber#)
	</insert>
	<update id="updateSecExternalUser" parameterClass="java.util.HashMap">
		UPDATE SEC_USER SET USER_PASSWORD = #adminPassword#,
		EMAIL = #adminEmail#,
		CODE_DESC = #adminName#		
		WHERE CODE = #adminUserId# AND USER_TYPE = 'E'
	</update>
	<update id="sqlUpdateCUST_COMPANYAgent" parameterClass="cargo.cms.admin.bo.RegistrationApproveBO">
		update cust_company SET
			AIRLINE_YN=        #airlineYN#,
			AGENT_YN=          #agentYN#,
			CONS_YN=           #consigneeYN#,			
			LM_USER_ID=        #userID#,
			LM_DATE=           sysdate,			
			EMAIL1=            case when #email1# is null then EMAIL1 else #email1# end,
			EMAIL2=            case when #email2# is null then EMAIL2 else #email2# end,
			FAX1=              case when #fax1# is null then FAX1 else #fax1# end,
			FAX2=              case when #fax2# is null then FAX2 else #fax2# end,
			BUS_REG_NO = nvl(BUS_REG_NO, #businessRegistrationNumber#) ,
			ADD1 = nvl(#address1#,ADD1),
			ADD2 = nvl(#address2#,ADD2),
			ADD3 = nvl(#address3#,ADD3),
			ADD4 = nvl(#address4#,ADD4),
			ADD5 = nvl(#address5#,ADD5),
			CITY = nvl (#city#,CITY),
			CTRY_CODE = nvl (#country#,CTRY_CODE),
			PIN_CODE = nvl (#postalCode#,PIN_CODE),			
			ADMIN_NAME = #adminName#, 
			ADMIN_TITLE = #adminTitle#,  
			ADMIN_EMAIL = #adminEmail#,   
			ADMIN_CONTACT_NO = #adminContactNumber#, 
			ADMIN_USER_ID =  #adminUserID#, 
			ADMIN_PASSWD =  #adminPassword#,
			CUST_TYPE = #companyNature#,
			REG_APRVD_DATE=    sysdate,
			TEL1 = #telephoneNumber# 
		WHERE
			CODE_DESC =  #matchingAgent#
	</update>
	
	<update id="sqlUpdateCUST_COMPANYAirline" parameterClass="cargo.cms.admin.bo.RegistrationApproveBO">
		update cust_company SET
			AIRLINE_YN=        #airlineYN#,
			AGENT_YN=          #agentYN#,
			CONS_YN=           #consigneeYN#,			
			LM_USER_ID=        #userID#,
			LM_DATE=           sysdate,			
			EMAIL1=            case when EMAIL1 is null then #email1# else EMAIL1 end,
			EMAIL2=            case when EMAIL2 is null then #email2# else EMAIL2 end,
			FAX1=              case when FAX1 is null then #fax1# else FAX1 end,
			FAX2=              case when FAX2 is null then #fax2# else FAX2 end,
			BUS_REG_NO = nvl(BUS_REG_NO, #businessRegistrationNumber#) ,
			ADD1 = nvl(#address1#,ADD1),
			ADD2 = nvl(#address2#,ADD2),
			ADD3 = nvl(#address3#,ADD3),
			ADD4 = nvl(#address4#,ADD4),
			ADD5 = nvl(#address5#,ADD5),
			CITY = nvl (#city#,CITY),
			CTRY_CODE = nvl (#country#,CTRY_CODE),
			PIN_CODE = nvl (#postalCode#,PIN_CODE),		
			ADMIN_NAME = #adminName#, 
			ADMIN_TITLE = #adminTitle#,  
			ADMIN_EMAIL = #adminEmail#,   
			ADMIN_CONTACT_NO = #adminContactNumber#, 
			ADMIN_USER_ID =  #adminUserID#, 
			ADMIN_PASSWD = #adminPassword#,
			CUST_TYPE = #companyNature#,
			REG_APRVD_DATE=    sysdate,
			TEL1 = #telephoneNumber# 
		WHERE
			CODE_DESC =  #matchingAirline#
	</update>
	
	<select id="sqlGetMatchingAirlineCustomerNumber" parameterClass="map" resultClass="java.lang.String">
		select code from cust_company where carr_code=#carrierCode#
	</select>
	
	<select id="checkMatchingAirlineCustomerNumber" parameterClass="map" resultClass="java.lang.String">
		select code from cust_company where code_Desc = #codeDesc#
	</select>
	
	<select id="sqlGetMatchingAgentCustomerNumber" parameterClass="map" resultClass="java.lang.String">
		select code from cust_company where code_desc=#agentName#
	</select>
	
	
	<!-- Markup Added By Mithun KK Starts Here-->
	<select id="sqlGetIataMatchingAgentCustomerNumber" parameterClass="map" resultClass="java.lang.String">
		select code_desc from cust_company where co_iata_code=#iataCode# and active = 'Y' AND AGENT_YN = 'Y' AND BLACKLISTED='N'
	</select>	
	<!-- Markup Added By Mithun KK Ends Here-->
	
	<select id="sqlCheckAgentExists" parameterClass="map" resultClass="java.lang.String">
		select to_char(count(1)) from cust_company where code_desc=#agentName#
	</select>
	
	<select id="sqlCheckAirlineExists" parameterClass="map" resultClass="java.lang.String">
		select to_char(count(1)) from cust_company where carr_code = #carrierCode#
	</select>
	
	<select id="registrationAirlineExistscheck" parameterClass="map" resultClass="java.lang.String">
		select to_char(count(1)) from cust_company where CODE_DESC = #codeDesc#
	</select>
	
	
	<select id="sqlCheckNotificationExists" parameterClass="map" resultClass="java.lang.String">
		select to_char(count(1)) from cust_contact where cust_no=#customerNumber# AND contact_type=#notificationType#
	</select>
	<select id="checkBrValidationWithAgentName" parameterClass="map" resultClass="java.lang.Integer">
	select count(1) from cust_company where bus_reg_no=#brNum# and code_desc != #companyName#
	</select>
	<select id="checkBrValidationMaintainReg" parameterClass="map" resultClass="java.lang.Integer">
	select count(1) from cust_company where bus_reg_no=#brNum#
	</select>
<!-- Offshore Change by Allan Mon May 22 17:14:50 SGT 2006 @426 /Internet Time/ Ends-->
	
	<select id="sqlCheckIfUserCreatedInCUST_REGISTRATION" parameterClass="cargo.cms.admin.bo.RegistrationRequestBO" resultClass="java.lang.String">
		select to_char(count(1)) from cust_registration where sec_user_created = 'N' and reg_id=#registrationID#
	</select>
	<select id="getCustomerSeqNum" parameterClass="cargo.cms.admin.bo.RegistrationRequestBO" resultClass="java.lang.String">
	SELECT lpad(customer_seq.nextval,7, '0') FROM DUAL
	</select>
	<select id="sqlCheckUserExists" parameterClass="java.lang.String" resultClass="cargo.cms.admin.bo.RegistrationRequestBO">
		SELECT admin_user_id AS adminUserID
		FROM cust_registration
		WHERE UPPER(admin_user_id) = UPPER(#param#) AND REG_STATUS != 'R'
	</select>
	
	<select id="fetchBusinessType" parameterClass="cargo.cms.admin.bo.RegistrationRequestBO" resultClass="java.lang.String" >
		SELECT CODE FROM MAST_CODE_DTL WHERE CODE_DESC =#companyNature# AND GROUP_CODE = '44' AND CODE_TYPE='PRF_USERID'
	</select>

	<select id="sqlCheckUserExistsInSEC_USER" parameterClass="cargo.cms.admin.bo.RegistrationRequestBO" resultClass="java.lang.String">
		SELECT to_char(count(1))
		FROM sec_user
		WHERE UPPER(code) = UPPER(#adminUserID#)
		
	</select>

	<insert id="insertCompanyAdminToSEC_USER" parameterClass="cargo.cms.admin.bo.RegistrationRequestBO">
		INSERT INTO SEC_USER (
		   CODE,
		   CODE_DESC,
		   USER_TYPE,
		   USER_ACCESS,
		   USER_PASSWORD,
		   STATUS,
		   APP_ACCESS_EXT,
		   CR_USER_ID,
		   CR_DATE,
		   LM_USER_ID,
		   LM_DATE,
		   EMAIL,
		   CONTACT_NO,
		   HKID,
		   cust_no
		  )
		VALUES (
			#adminUserID#,
			#adminName#,
			'E',
			'E',
			#adminPassword#,
			'A',
			'Y',
			#creatorUserID#,
			sysdate,
		    #lastModifiedUserID#,
			sysdate,
		    #adminEmail#,
			#adminContactNumber#,
			#adminHkId#,
<!-- Offshore change by Allan Tue May 23 11:27:36 SGT 2006 @185 /Internet Time/ Starts -->
			<isEmpty property="customerNumber">
				customer_seq.currval
			</isEmpty>
			<isNotEmpty property="customerNumber">
				#customerNumber#
			</isNotEmpty>
			)
<!-- Offshore change by Allan Tue May 23 11:27:36 SGT 2006 @185 /Internet Time/ Ends -->
	</insert>

<!-- Offshore change by Allan Tue May 23 11:27:36 SGT 2006 @185 /Internet Time/ Starts -->
	<update id="sqlUpdateCUST_REGISTRATIONAfterApproval" parameterClass="cargo.cms.admin.bo.RegistrationRequestBO">
		update cust_registration
		set 
			sec_user_created='Y',
			IMAGE = #transactionId#,
			<isNotEmpty property="transactionId">
				BR_UPLD_IND ='Y',
			</isNotEmpty>
			<isEmpty property="customerNumber">
				REG_PROC_ID=lpad(CUSTOMER_SEQ.nextVal,7, '0')
			</isEmpty>
			<isNotEmpty property="customerNumber">
				REG_PROC_ID=#customerNumber#
			</isNotEmpty>
		WHERE reg_id=#registrationID#
	</update>
<!-- Offshore change by Allan Tue May 23 11:27:36 SGT 2006 @185 /Internet Time/ Ends -->

	<insert id="sqlAddRoleToAdminUserDuringRegistrationProcessing" parameterClass="cargo.cms.admin.bo.UserRoleBO">
		INSERT INTO SEC_USER_ROLE 
			(USER_ID,
			ROLE_NAME,
			START_DATE,
			CR_USER_ID,
			CR_DATE,
			LM_USER_ID,
			LM_DATE) 
		VALUES 
			(#userIdentity#,
			#roleName#,
			sysdate,
			#crUserId#,
			sysdate,
			#lastModUserId#,
			sysDate)
	</insert>
	
	<insert id="sqlAddCompanyContactDetailsToCUST_CONTACT" parameterClass="cargo.cms.admin.bo.RegistrationRequestBO">
		INSERT INTO CUST_CONTACT (
			CUST_NO,        
			CONTACT_TYPE,   
			EMAIL1,         
			EMAIL2,         
			EMAIL3,         
			EMAIL4,         
			EMAIL5,         
			FAX1,           
			FAX2,           
			FAX3,           
			CR_USER_ID,     
			CR_DATE,        
			LM_USER_ID,     
			LM_DATE)        
		VALUES ( 
			<!-- Offshore change by Allan Tue May 23 11:27:36 SGT 2006 @185 /Internet Time/ Starts -->
			<isEmpty property="customerNumber">
				customer_seq.currval,
			</isEmpty>
			<isNotEmpty property="customerNumber">
				#customerNumber#,
			</isNotEmpty>
<!-- Offshore change by Allan Tue May 23 11:27:36 SGT 2006 @185 /Internet Time/ Ends -->
			#notificationType#, 
			#notEmail1#,
			#notEmail2#, 
			#notEmail3#, 
			#notEmail4#,
			#notEmail5#, 
			#notFax1#, 
			#notFax2#, 
			#notFax3#, 
			#creatorUserID#, 
			sysdate, 
			#lastModifiedUserID#, 
			sysdate) 
	</insert>
<!-- ============================================================================ -->
<!--                                REGISTRATION REQUEST END                      -->
<!-- ============================================================================ -->
<!-- ============================================================================ -->
<!--                                ROLE                                          -->
<!-- ============================================================================ -->
	<select id="sqlGetRoleList" parameterClass="cargo.cms.admin.bo.RoleBO" resultClass="cargo.cms.admin.bo.RoleBO">
		SELECT 
			CODE AS roleName,
			CODE_DESC AS roleDesc,
			active AS active,
			role_category AS roleCategory,
		to_char(LM_DATE, 'ddMMYYYY hh24:mi:ss') as lastModDate
		FROM sec_role 
		WHERE UPPER(CODE_DESC) LIKE UPPER(#searchCriteria#)
		ORDER BY CODE
	</select>

	<delete id="sqlDeleteRole" parameterClass="cargo.cms.admin.bo.RoleBO">
		DELETE FROM sec_role 
		WHERE CODE=#roleName# AND to_char(LM_DATE, 'ddMMYYYY hh24:mi:ss') = #lastModDate#
	</delete>

	<update id="sqlUpdateRole" parameterClass="cargo.cms.admin.bo.RoleBO">
		UPDATE sec_role 
		SET CODE_DESC=#roleDesc#,
			ACTIVE=#active#,
			LM_USER_ID=#lastModUserId#,
			LM_DATE=sysdate
		WHERE CODE=#roleName# AND to_char(LM_DATE, 'ddMMYYYY hh24:mi:ss') = #lastModDate# 
	</update>

	<select id="checkRoleExist" parameterClass="cargo.cms.admin.bo.RoleBO"  resultClass="java.lang.Integer">
		<![CDATA[
				 select count(1) from sec_role	where CODE = #roleName#
		 ]]>
	</select>

	<insert id="sqlAddRole" parameterClass="cargo.cms.admin.bo.RoleBO">
		INSERT INTO sec_role( 
			CODE,
			CODE_DESC,
			role_category,
			role_division,
			cr_user_id,
			cr_date,
			active,
			cust_type,
			lm_user_id,
			lm_date) 
		VALUES( 
			#roleName#,
			#roleDesc#,
			#roleCategory#,
			#roleDivision#,
			#crUserId#,
			sysdate,
			#active#,
			#customerType#,
			#lastModUserId#,
			sysdate)
	</insert>

	<select id="sqlGetRoleDetails" parameterClass="cargo.cms.admin.bo.RoleBO" resultClass="cargo.cms.admin.bo.RoleBO">
		SELECT CODE AS roleName,
			CODE_DESC AS roleDesc,
			role_category AS roleCategory,
			role_division AS roleDiv,
			cr_user_id AS crUserId,
			cr_date AS crDate,
			lm_user_id AS lastModUserId,
			lm_date AS lastModDate,
			active AS active 
		FROM sec_role 
		WHERE CODE LIKE #roleName# 
	</select>
	
	
	<select id="sqlGetRoleCategory" parameterClass="cargo.cms.admin.bo.RoleBO" resultClass="cargo.cms.afw.bo.MasterBO">
		select code as codeId from sec_role where role_category=#roleCategory#
	</select>
	<select id="sqlCheckUserAssignedToRole" parameterClass="cargo.cms.admin.bo.RoleBO" resultClass="java.lang.String">
		SELECT TO_CHAR(COUNT(user_id)) 
		FROM sec_user_role
		WHERE role_name = #roleName# 
	</select>

<select id="sqlGetFunctionList" parameterClass="cargo.cms.admin.bo.RoleFunctionBO"	resultClass="cargo.cms.admin.bo.RoleFunctionBO">
	SELECT 
	 a.CODE AS functionCode, decode(MODULE_NAME,'Miscellaneous','Misc',MODULE_NAME) AS mod_name,
		 a.CODE_DESC AS functionDescription,
		 DECODE(b.FULL_YN,  NULL,  'N',  B.FULL_YN) AS fullAccess,
		 DECODE(b.READ_YN,  NULL,  'N',  B.READ_YN) AS readAccess,
		 DECODE(b.VIEW_YN,  NULL,  'N',  B.VIEW_YN) AS noAccess,
		 a.SUB_GRP_YN AS subGroup,
		 b.ROLE_CODE AS roleCode,
		 NVL(a.alp_function_yn,'N') alpFunctionYn,
  		 NVL(a.ALP_PORTAL_YN,'N') alpPortalYn,
  		 DECODE(a.FUN_ACCESS_TYPE,'T','Y','E','N','A','N','N') isTransactionFun
 FROM 
 (SELECT READ_YN,  FULL_YN,  VIEW_YN,  FUNCTION_CODE,  ROLE_CODE FROM SEC_ROLE_FUNCTION  WHERE   ROLE_CODE= #roleCode#) b, 
	sec_scr_function a 
	 left join  SEC_MENU_CTRL C on c.code = a.CODE
 where   
		 a.CODE = b.FUNCTION_CODE AND (#roleCategory# = 'H' or (a.FUNCTION_TYPE = #roleCategory# and nvl(c.menu_type, 'L') = 'L'))
 ORDER BY  mod_name,functiondescription		 
</select>

	<select id="sqlGetRoleSubFunctionList" parameterClass="cargo.cms.admin.bo.RoleFunctionBO" resultClass="cargo.cms.admin.bo.RoleSubFunctionBO">
		SELECT A.CODE AS subFunctionCode,
			A.FUNCTION_CODE AS functionCode,
			A.CODE_DESC AS subFunctionDescription,
			B.ROLE_CODE AS roleCode,
			B.ENABLE_YN AS enabled
		FROM SEC_SUB_GRP_FUNCTION A,
			(SELECT ROLE_CODE,
				SUB_FUNCTION_CODE,
				FUNCTION_CODE,
				ENABLE_YN
			FROM SEC_ROLE_SUB_FUNCTION
			WHERE ROLE_CODE=#roleCode#
			AND FUNCTION_CODE=#functionCode#) B
		WHERE A.FUNCTION_CODE = B.FUNCTION_CODE(+)
		AND A.CODE = B.SUB_FUNCTION_CODE(+)
		AND A.FUNCTION_CODE=#functionCode#
	</select>
	
	<select id="sqlGetRoleTotalSubFunctionList" parameterClass="java.lang.String" resultClass="cargo.cms.admin.bo.RoleSubFunctionBO">
		 SELECT A.CODE AS subFunctionCode,    
		        A.FUNCTION_CODE AS functionCode,    
                A.CODE_DESC AS subFunctionDescription,    
                B.ROLE_CODE AS roleCode,    
 				B.ENABLE_YN AS enabled   
 		FROM 
 			  SEC_SUB_GRP_FUNCTION A,    
 			 (SELECT ROLE_CODE, SUB_FUNCTION_CODE, FUNCTION_CODE, ENABLE_YN    
 		 	  FROM SEC_ROLE_SUB_FUNCTION    WHERE ROLE_CODE = #PARAM# ) B
		WHERE 
			A.FUNCTION_CODE = B.FUNCTION_CODE(+)  
			AND A.CODE = B.SUB_FUNCTION_CODE(+)   
        ORDER BY  A.FUNCTION_CODE,A.CODE_DESC

	</select>	
	
	<update id="sqlUpdateRoleFunctions" parameterClass="cargo.cms.admin.bo.RoleFunctionBO">
			UPDATE SEC_ROLE_FUNCTION 
				SET 
				READ_YN		=	#readAccess#,
				FULL_YN		=	#fullAccess#,
				VIEW_YN		=	#noAccess#,
				LM_USER_ID	=	#lmUserId#,
				LM_DATE		=	SYSDATE
				WHERE
				ROLE_CODE	=	#roleCode# AND
				FUNCTION_CODE	=	#functionCode#
	</update>

	<update id="sqlUpdateUserPrivileges" parameterClass="cargo.cms.admin.bo.RoleFunctionBO">
	  UPDATE SEC_USER_PRIVILEGES
         SET 
             READ_YN		=	#readAccess#,
             FULL_YN		=	#fullAccess#,
			 LM_USER_ID		=	#lmUserId#,
             LM_DATE		=	SYSDATE
       WHERE ROLE_CODE	=	#roleCode# AND
				FUNCTION_CODE	=	#functionCode#
	</update>

	<delete id="sqlClearRoleFunctions" parameterClass="cargo.cms.admin.bo.RoleFunctionBO">
		DELETE FROM sec_role_function 
		WHERE role_code=#roleCode#
	</delete>
	<delete id="sqlClearUserPrivileges" parameterClass="cargo.cms.admin.bo.RoleFunctionBO">
		DELETE FROM SEC_USER_PRIVILEGES
		WHERE ROLE_CODE     = #roleCode#		 
	</delete>

	<update id="sqlUpdateRoleSubFunctions" parameterClass="cargo.cms.admin.bo.RoleSubFunctionBO">
		<!--INSERT INTO SEC_ROLE_SUB_FUNCTION (
			ROLE_CODE,
			FUNCTION_CODE,
			SUB_FUNCTION_CODE,
			ENABLE_YN,
			CR_USER_ID,
			CR_DATE,
			LM_USER_ID,
			LM_DATE) 
		VALUES (
			#roleCode#,
			#functionCode#,
			#subFunctionCode#,
			#enabled#,
			#crUserId#,
			sysdate,
			#lmUserId#,
			sysdate)-->
		UPDATE SEC_ROLE_SUB_FUNCTION 
			SET
		ENABLE_YN=NVL(#enabled#,'N'),
		LM_DATE=TO_DATE(#lmDate#,'dd/MM/yyyy HH24:mi:ss'),
		LM_USER_ID=#lmUserId#
			WHERE
		ROLE_CODE=#roleCode# AND
		FUNCTION_CODE=#functionCode# AND
		SUB_FUNCTION_CODE=#subFunctionCode#
	</update>
	
	<insert id="sqlInsertSubFunctionsForRole" parameterClass="cargo.cms.admin.bo.RoleSubFunctionBO">
		INSERT INTO SEC_ROLE_SUB_FUNCTION (
			ROLE_CODE,
			FUNCTION_CODE,
			SUB_FUNCTION_CODE,
			ENABLE_YN,
			CR_USER_ID,
			CR_DATE,
			LM_USER_ID,
			LM_DATE) 
		VALUES (
			#roleCode#,
			#functionCode#,
			#subFunctionCode#,
			NVL(#enabled#,'N'),
			#lmUserId#,
			sysdate,
			#lmUserId#,
			sysdate)
	</insert>
	
	<select id="sqlfetchCountSubFunctionsForRole" parameterClass="cargo.cms.admin.bo.RoleSubFunctionBO" resultClass="java.lang.Integer">
		SELECT  count(1) FROM SEC_ROLE_SUB_FUNCTION
		WHERE
			ROLE_CODE = #roleCode#
			AND FUNCTION_CODE = #functionCode#
			AND SUB_FUNCTION_CODE = #subFunctionCode#		
	</select>

	<delete id="sqlClearRoleSubFunctions" parameterClass="cargo.cms.admin.bo.RoleSubFunctionBO">
		DELETE FROM sec_role_sub_function 
		WHERE role_code=#roleCode#
	</delete>

	<insert id="sqlInheritFunctionsForUserPrivilages" parameterClass="cargo.cms.admin.bo.RoleBO">
		INSERT INTO SEC_USER_PRIVILEGES
                     (USER_ID, ROLE_CODE, FUNCTION_CODE,
                      READ_YN, FULL_YN,
                      CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE
                     )
                    (SELECT  
                              T1.USER_ID, 
                              #roleName#, 
                              t2.function_code, 
                              t2.read_yn, 
                              t2.full_yn, 
                              #crUserId#, 
                              sysdate, 
                              #lastModUserId#, 
                              sysdate
                              FROM SEC_USER_ROLE T1, sec_role_function T2
                              <dynamic prepend="WHERE"> (                          
                              <isNotEmpty property="functionsInheritFrom" prepend="OR">
                             	 	t1.ROLE_NAME = #functionsInheritFrom# 
                              </isNotEmpty>
                               <isNotEmpty property="functionsInheritFromone" prepend="OR">
                              		t1.ROLE_NAME = #functionsInheritFromone# 
                              </isNotEmpty>
                               <isNotEmpty property="functionsInheritFromtwo" prepend="OR">
                              		t1.ROLE_NAME = #functionsInheritFromtwo# 
                              </isNotEmpty>
                              )</dynamic>
                              and t1.role_name = t2.role_code)
	</insert>

	<insert id="sqlInheritFunctionsForRole" parameterClass="cargo.cms.admin.bo.RoleBO">
		INSERT INTO SEC_ROLE_FUNCTION (ROLE_CODE,FUNCTION_CODE,READ_YN,FULL_YN,
			VIEW_YN,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,SUB_GROUP_YN) 
		((SELECT #roleName#,FUNCTION_CODE,READ_YN,FULL_YN, 
			VIEW_YN,#crUserId#,sysdate,#lastModUserId#,sysdate,SUB_GROUP_YN
		 FROM SEC_ROLE_FUNCTION WHERE (FULL_YN='Y' AND VIEW_YN='N' AND READ_YN='N')
     <dynamic prepend="AND"> (
		 <isNotEmpty property="functionsInheritFrom" prepend="OR">
          role_code = #functionsInheritFrom# 
     </isNotEmpty>
     <isNotEmpty property="functionsInheritFromone" prepend="OR">
          role_code = #functionsInheritFromone# 
     </isNotEmpty>
     <isNotEmpty property="functionsInheritFromtwo" prepend="OR">
          role_code = #functionsInheritFromtwo# 
     </isNotEmpty>)
     </dynamic>)
    UNION
      (SELECT #roleName#,FUNCTION_CODE,READ_YN,FULL_YN, 
			VIEW_YN,#crUserId#,sysdate,#lastModUserId#,sysdate,SUB_GROUP_YN
		 FROM SEC_ROLE_FUNCTION	 WHERE (VIEW_YN='Y' AND FULL_YN='N' AND READ_YN='N') AND FUNCTION_CODE NOT IN 
     (SELECT FUNCTION_CODE FROM SEC_ROLE_FUNCTION WHERE FULL_YN='Y' AND VIEW_YN='N' AND READ_YN='N'  
     <dynamic prepend="AND"> (
		 <isNotEmpty property="functionsInheritFrom" prepend="OR">
        	 	role_code = #functionsInheritFrom# 
         </isNotEmpty>
          <isNotEmpty property="functionsInheritFromone" prepend="OR">
         		role_code = #functionsInheritFromone# 
         </isNotEmpty>
          <isNotEmpty property="functionsInheritFromtwo" prepend="OR">
         		role_code = #functionsInheritFromtwo# 
         </isNotEmpty>)
         </dynamic>)
    <dynamic prepend="AND"> (
		 <isNotEmpty property="functionsInheritFrom" prepend="OR">
        	 	role_code = #functionsInheritFrom# 
         </isNotEmpty>
          <isNotEmpty property="functionsInheritFromone" prepend="OR">
         		role_code = #functionsInheritFromone# 
         </isNotEmpty>
          <isNotEmpty property="functionsInheritFromtwo" prepend="OR">
         		role_code = #functionsInheritFromtwo# 
         </isNotEmpty>)
         </dynamic>
         ))
	</insert>
	
	<insert id="sqlNoInheritFunctionsForRole" parameterClass="cargo.cms.admin.bo.RoleBO">
		INSERT INTO SEC_ROLE_FUNCTION (  
	   ROLE_CODE,    FUNCTION_CODE,    READ_YN,    FULL_YN,    VIEW_YN,    CR_USER_ID,    CR_DATE,    LM_USER_ID,    LM_DATE,    
	   SUB_GROUP_YN)
		(SELECT    #roleName#,    
		CODE,    
		'N',   
		'N',     
		'N',  
		#crUserId#,    
		sysdate,    
		#lastModUserId#,
		sysdate,  
		SUB_GRP_YN    FROM SEC_SCR_FUNCTION     WHERE function_type = #roleCategory#)   

	</insert>
	<insert id="sqlInheritSubFunctionsForRole" parameterClass="cargo.cms.admin.bo.RoleBO">
		INSERT INTO SEC_ROLE_SUB_FUNCTION (
			ROLE_CODE,
			FUNCTION_CODE,
			SUB_FUNCTION_CODE,
			ENABLE_YN,
			CR_USER_ID,
			CR_DATE,
			LM_USER_ID,
			LM_DATE) 
		(SELECT
			#roleName#,
			FUNCTION_CODE,
			SUB_FUNCTION_CODE,
			ENABLE_YN,
			#crUserId#,
			sysdate,
			#lastModUserId#,
			sysdate
		 FROM SEC_ROLE_SUB_FUNCTION 
		 WHERE role_code = #functionsInheritFrom#)
	</insert>
	<!-- ============================================================================ -->
	<!--                                ROLE END                                      -->
	<!-- ============================================================================ -->

	<!-- ======================================================================= -->
	<!--                                  USER                                   -->
	<!-- ======================================================================= -->

	<select id="sqlusersearchbydiv" parameterClass="java.lang.String" resultClass="cargo.cms.admin.bo.UserBO">
		SELECT CODE AS userIdentity,
			CODE AS userName,
			USER_TYPE AS usertype,
			NRIC AS nric,
			DESIGNATION AS designation,
			DIV_CODE AS division,
			USER_PASSWORD  AS userpassword,
			STATUS AS status,
			CR_USER_ID AS crUserid,
			CR_DATE AS crDate,
			LM_USER_ID AS lastModUserId,
			LM_DATE AS lastModDate,
			USER_ACCESS AS userAccess
		FROM SEC_USER 
		WHERE DIV_CODE LIKE ? 
		ORDER BY CODE
	</select>

	<select id="sqlusersearchbydivdesc" parameterClass="java.lang.String" resultClass="cargo.cms.admin.bo.UserBO">
		SELECT a.CODE AS userIdentity,
			a.CODE AS userName,
			a. USER_TYPE AS usertype,
			a.NRIC AS nric,
			a.DESIGNATION AS designation,
			a.CODE AS division,			
			a.USER_PASSWORD  AS userpassword,
			a.STATUS AS status,
			a.CR_USER_ID AS crUserid,
			a.CR_DATE AS crDate,
			a.LM_USER_ID AS lastModUserId,
			a.LM_DATE AS lastModDate ,
			USER_ACCESS AS userAccess FROM SEC_USER a,
			SEC_DIVISION b 
		WHERE  a.CODE=b.CODE AND UPPER(b.CODE_DESC) LIKE UPPER(?) 
		ORDER BY a.CODE
	</select>

<!-- Onsite Changed on 06 May 2006	by mayank Starts here  -->
<select id="sqlusersearch" parameterClass="cargo.cms.admin.bo.UserSearchBO" resultClass="cargo.cms.admin.bo.UserBO">
	
		SELECT
 			a.CODE AS userIdentity,
			a.CODE_DESC AS userName,
			USER_TYPE AS usertype,
			NRIC AS nric,
			DESIGNATION AS designation,
			DIV_CODE AS division,
			STATUS AS status,
			a.CR_USER_ID AS crUserid,
			a.CR_DATE AS crDate,
			a.LM_USER_ID AS lastModUserId,
			to_char(a.LM_DATE, 'ddMMYYYY hh24:mi:ss') AS lastModDate,
			USER_ACCESS AS userAccess,
			APP_ACCESS_INT AS appAccessInt,
			APP_ACCESS_EXT AS appAccessExt,
			APP_ACCESS_HHT AS appAccessHHT 
		FROM SEC_USER a	left join SEC_DIVISION b on a.DIV_CODE = b.CODE
		<dynamic prepend="WHERE">		
		<isNotEmpty property="userName" prepend="AND">
			UPPER(a.CODE_DESC) LIKE upper(#userName#)
		</isNotEmpty>			
		<isNotEmpty property="userIdentity" prepend="AND">
			UPPER(a.CODE) LIKE upper(#userIdentity#)
		</isNotEmpty>		
		<isNotEmpty property="division" prepend="AND">
			a.Div_Code =#division#		
		</isNotEmpty>
		
		
		</dynamic>
		<dynamic prepend="ORDER BY ">
           <isNotEmpty property="sortOrder.sortField">
             $sortOrder.sortField$
           </isNotEmpty>
        </dynamic>	

</select>

<select id="fetchUserIdForAjax" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">	
		SELECT a.CODE AS userIdentity, a.CODE_DESC AS userName FROM SEC_USER a where UPPER(a.CODE) like upper(#keySearchStr# ||'%') and ROWNUM &lt;= #maxRecFetch#
</select>
<select id="fetchUserNameForAjax" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">	
		SELECT a.CODE AS userIdentity, a.CODE_DESC AS userName FROM SEC_USER a where UPPER(a.CODE_DESC) like upper(#keySearchStr# ||'%') and ROWNUM &lt;= #maxRecFetch#
</select>


<select id="sqlusersearchCOUNT" parameterClass="cargo.cms.admin.bo.UserSearchBO" resultClass="java.lang.Integer">
	
		SELECT
 			COUNT(*) as totalRowCount
		FROM SEC_USER a	left join SEC_DIVISION b on a.DIV_CODE = b.CODE
		<dynamic prepend="WHERE">		
		<isNotEmpty property="userName" prepend="AND">
			UPPER(a.CODE_DESC) LIKE upper(#userName#)
		</isNotEmpty>			
		<isNotEmpty property="userIdentity" prepend="AND">
			UPPER(a.CODE) LIKE upper(#userIdentity#)
		</isNotEmpty>		
		<isNotEmpty property="division" prepend="AND">
			a.Div_Code =#division#		
		</isNotEmpty>
		
		
		</dynamic>	

</select>
	<!-- Onsite Changed on 06 May 2006	by mayank Ends here  -->

	<select id="sqlDuplicateUser"   parameterClass="cargo.cms.admin.bo.UserBO"  resultClass="cargo.cms.admin.bo.UserBO">
		SELECT CODE FROM SEC_USER where upper(code)=upper(#userIdentity#)
	</select>
	
	<select id="sqlDuplicateUserInCUST_REGISTRATION"   parameterClass="map"  resultClass="java.lang.String">
		select to_char(count(1)) from cust_registration where admin_user_id=#userID#
	</select>
	
	<select id="sqluserdetails" parameterClass="cargo.cms.admin.bo.UserBO" resultClass="cargo.cms.admin.bo.UserBO">
        SELECT
            CODE AS userIdentity,
            CODE_DESC AS userName,
            USER_TYPE AS usertype,
            NRIC AS nric,
            DESIGNATION AS designation,
            DIV_CODE AS division,
            (select code_desc from cust_company where code = CUST_NO) AS tmpAgentName,
            USER_PASSWORD AS userpassword,
            STATUS AS status,
            CR_USER_ID AS crUserid,
            CR_DATE AS crDate,
            LM_USER_ID AS lastModUserId,
            to_char(LM_DATE, 'ddMMYYYY hh24:mi:ss') as lastModDate ,            
            USER_ACCESS AS userAccess ,
			APP_ACCESS_INT AS appAccessInt,
			APP_ACCESS_EXT AS appAccessExt,
			APP_ACCESS_HHT AS appAccessHHT,
			GOVT_YN AS govtYN             
        FROM SEC_USER
        WHERE CODE = #userIdentity# 
	</select>		

	<select id="sqlrolelist" parameterClass="java.lang.String" resultClass="cargo.cms.admin.bo.RoleBO">
		SELECT CODE_DESC AS roleName,
			ROLE_CATEGORY AS roleCat,
			ROLE_DIVISION AS roleDiv,
			CR_USER_ID AS crUserid,
			CR_DATE AS crDate,
			LM_USER_ID AS lastModUserId,
			LM_DATE AS lastModDate 
		FROM SEC_ROLE 
		ORDER BY CODE_DESC
	</select>

	<select id="sqldivlist" parameterClass="java.lang.String" resultClass="cargo.cms.admin.bo.DivisionBO">
		SELECT CODE AS divCode,
			CODE_DESC AS divDesc,
			CR_USER_ID AS crUserid,
			CR_DATE AS crDate,
			LM_USER_ID AS lastModUserId,
			LM_DATE AS lastModDate
		FROM SEC_DIVISION 
		ORDER BY CODE_DESC
	</select>

<select id="sqluserrolelist"  parameterClass="cargo.cms.admin.bo.UserBO" resultClass="cargo.cms.admin.bo.UserRoleBO">
		SELECT USER_ID AS userIdentity,
			ROLE_NAME AS rolename,
			TO_CHAR(START_DATE, 'DDMONYY') AS startdate,
			TO_CHAR(START_DATE, 'DDMONYY') AS oldStartdate,
			TO_CHAR(END_DATE,'DDMONYY') AS enddate,
			TO_CHAR(END_DATE,'DDMONYY') AS oldEnddate
		FROM SEC_USER_ROLE 
		WHERE USER_ID= #userIdentity# 
		ORDER BY ROLE_NAME
	</select>
	
	<select id="selectDuplicateRoleWithConflictingPeriods" parameterClass="cargo.cms.admin.bo.UserRoleBO" resultClass="java.lang.String">
		select to_char(count(1)) from sec_user_role
		where user_id=#userIdentity# AND
		role_name=#roleName# AND
		((to_date(#startDate#,'DDMONYY') BETWEEN trunc(start_date) AND nvl(trunc(end_date),sysdate + 1000000)) OR
		decode(#endDate#,null,sysdate+100001,to_date(#endDate#,'DDMONYY')) between trunc(start_date) and nvl(trunc(end_date),sysdate + 1000000))
	</select>


	<select id="selectUserStatus" parameterClass="cargo.cms.admin.bo.UserBO" resultClass="cargo.cms.admin.bo.UserBO">
		select status as status from sec_user where code=#userIdentity#
	</select>

	<update id="sqlupdate" parameterClass="cargo.cms.admin.bo.UserBO">
		UPDATE SEC_USER
		SET 
			CODE_DESC = #userName# ,
			<isNotEmpty property="userPassword">
				<isNotEmpty property="userNewPassword">
					USER_PASSWORD = #userNewPassword# ,
				</isNotEmpty>
			</isNotEmpty>
			DIV_CODE= #division#,
			CUST_NO = (select code from cust_company where code_desc=#tmpAgentName#),
			STATUS=#status#,
			PASSWORD_IND= null,
			login_attempts = 0,
			APP_ACCESS_INT = #appAccessInt#, 
			APP_ACCESS_EXT = #appAccessExt#,
			APP_ACCESS_HHT = #appAccessHHT#,
			LM_USER_ID = #lastModUserId#,
			USER_ACCESS = #userAccess#,
			USER_TYPE = #userType#,
			DESIGNATION = #designation#,
			LM_DATE = SYSDATE,
			GOVT_YN = #govtYN#
		WHERE CODE = #userIdentity# AND to_char(LM_DATE, 'ddMMYYYY hh24:mi:ss') = #lastModDate#
		
	</update>	

    <update id="sqlupdateLMUser" parameterClass="cargo.cms.admin.bo.UserBO">
      UPDATE SEC_USER set LM_USER_ID = #userID# WHERE CODE = #userIdentity# 
    </update>	

	<delete id="sqldeleteuserrole" parameterClass="cargo.cms.admin.bo.UserBO">
		DELETE FROM SEC_USER_ROLE WHERE USER_ID = #userIdentity#
	</delete>	

	<delete id="sqlAllDeleteUserPrivilege" parameterClass="cargo.cms.admin.bo.UserBO">
		DELETE FROM SEC_USER_PRIVILEGES WHERE USER_ID = #userIdentity# 
	</delete>	
	<delete id="sqlAllDeleteSecPassLog" parameterClass="cargo.cms.admin.bo.UserBO">
		DELETE FROM SEC_USR_PASSWORD_LOG WHERE USER_ID = #userIdentity# 
	</delete>

	<insert id="sqlinsertuserrole" parameterClass="cargo.cms.admin.bo.UserRoleBO">
		INSERT INTO SEC_USER_ROLE 
			(USER_ID,ROLE_NAME,START_DATE,END_DATE,CR_USER_ID,
			CR_DATE,
			LM_USER_ID,
			LM_DATE) 
		VALUES
			(#userIdentity#,
			#roleName#,
			TO_DATE(#startDate#,'DDMONYY'),
			TO_DATE(#endDate#,'DDMONYY'),
			#crUserId#,
			sysdate,
			#lastModUserId#,
			sysDate)
	</insert>	

	<insert id="sqlInsertUserPrivileges" parameterClass="cargo.cms.admin.bo.UserRoleBO">
		INSERT INTO SEC_USER_PRIVILEGES
		(USER_ID, ROLE_CODE, FUNCTION_CODE, READ_YN, FULL_YN, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE)
		(select #userIdentity#,#roleName#, FUNCTION_CODE,READ_YN,FULL_YN,
		#crUserId#,sysdate,#lastModUserId#,sysDate from sec_role_Function where ROLE_CODE=#roleName#)
	</insert>	

 <update id="sqlupdateLMUserbyrolename" parameterClass="cargo.cms.admin.bo.UserRoleBO">
      UPDATE SEC_USER_ROLE set LM_USER_ID = #lastModUserId# WHERE USER_ID = #userIdentity# and ROLE_NAME = #roleName# 
    </update>

	<delete id="sqldeleteuserrolebyrolename" parameterClass="cargo.cms.admin.bo.UserRoleBO">
		DELETE FROM SEC_USER_ROLE WHERE USER_ID = #userIdentity# and ROLE_NAME = #roleName# 
	</delete>	

	<delete id="sqlDeleteUserPrivileges" parameterClass="cargo.cms.admin.bo.UserRoleBO">
		DELETE FROM SEC_USER_PRIVILEGES WHERE USER_ID = #userIdentity# and ROLE_CODE = #roleName# 
	</delete>	
	
	<!-- Onsite Changed on 06 May 2006	by mayank Starts here  -->
	<delete id="sqldeleteUser" parameterClass="cargo.cms.admin.bo.UserBO">
		DELETE SEC_USER WHERE CODE = #userIdentity# AND to_char(LM_DATE, 'ddMMYYYY hh24:mi:ss') = #lastModDate#
	</delete>	
	<!-- Onsite Changed on 06 May 2006	by mayank Ends here	   -->
	
	<insert id="sqlInsertUser" parameterClass="cargo.cms.admin.bo.UserBO">
        INSERT INTO SEC_USER 
            (CODE,CODE_DESC,USER_TYPE,DIV_CODE,CUST_NO,USER_PASSWORD,STATUS,APP_ACCESS_INT,APP_ACCESS_EXT,APP_ACCESS_HHT,
            CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,USER_ACCESS,GOVT_YN)
        VALUES 
            (#userIdentity#,#userName#,#userType#,#division#,(select code from cust_company where code_desc=#tmpAgentName#),#userPassword#,#status#,
            #appAccessInt#,#appAccessExt#,#appAccessHHT#,#crUserId#,SYSDATE,#crUserId#,
            SYSDATE,#userAccess#,#govtYN#)
	</insert>

	<select id="isCompanyExists" parameterClass="java.lang.String" resultClass="java.lang.String">
		select count(1) from cust_company where code_desc=#tmpAgentName#
	</select>
	
	<update id="sqlUpdateUserPassword" parameterClass="cargo.cms.admin.bo.UserPasswordBO">
		UPDATE sec_user
		SET user_password=#userPassword#
		WHERE code=#userId#
	</update>

	<select id="sqlGetUserPassword" parameterClass="cargo.cms.admin.bo.UserPasswordBO" resultClass="cargo.cms.admin.bo.UserPasswordBO">
		SELECT
			code AS userId,
			user_password  AS oldUserPassword
		FROM sec_user
		WHERE code=#userId#
	</select>

	<!-- ======================================================================= -->
	<!--                                 USER END                                -->
	<!-- ======================================================================= -->


	<!-- Queries for Group Administration  -->
	<resultMap id="sqlgrouplist_map" class="cargo.cms.admin.bo.GroupBO">
		<result property="groupCode" column="CODE"/>
		<result property="groupDesc" column="CODE_DESC"/>
		<result property="crUserId" column="CR_USER_ID"/>
		<result property="crDate" column="CR_DATE"/>
		<result property="lastModUserId" column="LM_USER_ID"/>
		<result property="lastModDate" column="LM_DATE"/>
	</resultMap>

	<select id="sqlgrouplist" resultMap="sqlgrouplist_map" >
		SELECT CODE, CODE_DESC, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE FROM MAST_GROUP ORDER BY CODE_DESC
	</select>
	
		
	<insert id="sqlgroupadd" parameterClass="cargo.cms.admin.bo.GroupBO">
		Insert into Mast_Group (Code,Code_Desc,CR_User_id,cr_Date,lm_user_id,lm_Date) values(GRP_CODE_SEQ.NextVal,#groupDesc#,#crUserId#,sysdate,#crUserId#,sysdate)
	</insert>
	
	<select id="sqlcheckduplicate" resultMap="sqlgrouplist_map" >
		SELECT CODE  ,CODE_DESC ,CR_USER_ID ,CR_DATE,LM_USER_ID ,LM_DATE FROM MAST_GROUP 
		where upper(CODE_DESC) =upper(#groupDesc#)	and upper(code) != upper(#groupCode#)	
	</select>
	<select id="sqlcheckduplicateforadd" resultMap="sqlgrouplist_map" >
		SELECT CODE  ,CODE_DESC ,CR_USER_ID ,CR_DATE,LM_USER_ID ,LM_DATE FROM MAST_GROUP where upper(CODE_DESC) =upper(#groupDesc#)	
	</select>
	<select id="sqldependantcodetype" resultClass="java.lang.String">
		SELECT TO_CHAR(COUNT(GROUP_CODE)) FROM MAST_CODE_HD where upper(GROUP_CODE)  =upper(#groupCode#) 
	</select>
	<select id="sqlgroupdetails" parameterClass="cargo.cms.admin.bo.GroupBO"  resultClass="cargo.cms.admin.bo.GroupBO">
		SELECT CODE as groupCode ,CODE_DESC AS groupDesc,CR_USER_ID AS crUserId,CR_DATE AS crDate,LM_USER_ID AS lastModUserId,LM_DATE AS lastModDate FROM MAST_GROUP where upper(Code) =upper(#groupCode#)
	</select>
	<update id="sqlupdategroup" parameterClass="cargo.cms.admin.bo.GroupBO">
		UPDATE MAST_GROUP SET CODE =#groupCode# ,CODE_DESC =#groupDesc#,LM_USER_ID = #lastModUserId#,LM_DATE =sysdate  where upper(Code) =upper(#groupCode#)
	</update>
	<delete id="sqldeletegroup" parameterClass="cargo.cms.admin.bo.GroupBO">
		DELETE FROM MAST_GROUP  where Code = #groupCode#
	</delete>

	<!-- Queries for Code Type Administration  -->


	<select id="sqlcodetypelist"  resultClass="cargo.cms.admin.bo.CodeTypeBO" >
		SELECT MAST_CODE_HD.GROUP_CODE as groupCode ,MAST_GROUP.CODE_DESC as groupDesc ,MAST_CODE_HD.Code as codeType,
		MAST_CODE_HD.Code_Desc  AS codeTypeDesc 
					FROM MAST_CODE_HD,MAST_GROUP  
					where upper(MAST_CODE_HD.GROUP_CODE)  =upper(#groupCode#) 
					AND MAST_CODE_HD.GROUP_CODE=MAST_GROUP.CODE 
					ORDER BY MAST_CODE_HD.CODE
	</select>
	<insert id="sqlcodetypeadd"  parameterClass="cargo.cms.admin.bo.CodeTypeBO">
		INSERT INTO MAST_CODE_HD ( GROUP_CODE,Code,Code_Desc,CR_User_id,cr_Date,lm_user_id,lm_Date )  values (#groupCode#,#codeType#,#codeTypeDesc#,#crUserId#,sysdate,#crUserId#,sysdate)
	</insert>
	<select id="sqlcodetypecheckduplicate"  resultClass="cargo.cms.admin.bo.CodeTypeBO" >
			Select  Code from MAST_CODE_HD where upper(Code)= upper(#codeType#)
	</select>
	<select id="sqlcodetypedetails" parameterClass="cargo.cms.admin.bo.CodeTypeBO"  resultClass="cargo.cms.admin.bo.CodeTypeBO">
			Select MAST_GROUP.CODE as groupCode , MAST_GROUP.CODE_DESC as groupDesc,MAST_CODE_HD.Code as codeType,MAST_CODE_HD.Code_Desc as codeTypeDesc,MAST_CODE_HD.CR_USER_ID AS crUserid,MAST_CODE_HD.CR_DATE AS crDate,MAST_CODE_HD.LM_USER_ID AS lastModUserId,MAST_CODE_HD.LM_DATE AS lastModDate  FROM MAST_CODE_HD ,MAST_GROUP where upper( MAST_CODE_HD.Code)= upper(#codeType#) and MAST_GROUP.CODE= MAST_CODE_HD.GROUP_CODE

	</select>
	<update id="sqlcodetypeupdate"  parameterClass="cargo.cms.admin.bo.CodeTypeBO" >
			UPDATE MAST_CODE_HD set Code_Desc = #codeTypeDesc# ,LM_USER_ID = #lastModUserId#,LM_DATE =sysdate where upper( Code)= upper(#codeType#)
			
	</update>
	<delete id="sqlcodetypedelete" parameterClass="cargo.cms.admin.bo.CodeTypeBO" >
		DELETE FROM MAST_CODE_HD  where upper(Code) =upper(#codeType#)
	</delete>
	<select id="sqldependantcode" resultClass="java.lang.String"> 
			SELECT TO_CHAR(COUNT(GROUP_CODE)) FROM MAST_CODE_DTL where upper(CODE_TYPE)=upper(#codeType#)		
	</select>
	<!-- Queries for Code Administration  -->
	<select id="cus_duplicate_codeadd" parameterClass="cargo.cms.admin.bo.CodeBO" resultClass="java.lang.Integer"> 
		SELECT COUNT(1) FROM MAST_CODE_DTL 
		WHERE GROUP_CODE = #groupCode# AND CODE_TYPE = #codeType# AND CODE = #code#
	</select> 
	<insert id="sqlcodeadd" parameterClass="cargo.cms.admin.bo.CodeBO">
		INSERT INTO MAST_CODE_DTL ( GROUP_CODE,Code_TYPE,Code,Code_Desc,Code_Desc_Spl,CR_User_id,cr_Date,lm_user_id,lm_Date )  values (#groupCode#,#codeType#,#code#,#description#,#shortDesc#,#crUserId#,sysdate,#crUserId#,sysdate)
	</insert>
	<select id="sqlcodecheckduplicate"  parameterClass="cargo.cms.admin.bo.CodeBO" resultClass="cargo.cms.admin.bo.CodeBO" >
			Select Code from MAST_CODE_DTL where upper(Code)= upper(#code#)
	</select>
	<select id="sqlcodelist"  parameterClass="cargo.cms.admin.bo.CodeBO" resultClass="cargo.cms.admin.bo.CodeBO" >
			SELECT GROUP_CODE as groupCode ,Code_TYPE as codeType,Code  AS code,Code_Desc As description, Code_Desc_Spl as shortDesc,to_char(LM_DATE, 'ddMMYYYY hh24:mi:ss') as lastModDate FROM MAST_CODE_DTL where GROUP_CODE=#groupCode# and CODE_TYPE=#codeType#  ORDER BY CODE
	</select>
	<select id="sqlcodedetails"  parameterClass="cargo.cms.admin.bo.CodeBO" resultClass="cargo.cms.admin.bo.CodeBO" >		
			SELECT MAST_CODE_DTL.GROUP_CODE as groupCode ,MAST_GROUP.CODE_DESC as groupDesc,MAST_CODE_DTL.Code_TYPE as codeType,
			MAST_CODE_HD.Code_Desc as codeTypeDesc,
			MAST_CODE_DTL.Code  AS code,MAST_CODE_DTL.Code_Desc As description, Code_Desc_Spl as shortDesc 
			FROM MAST_CODE_DTL 	,MAST_CODE_HD ,MAST_GROUP 
			where  MAST_CODE_DTL.GROUP_CODE =MAST_GROUP.CODE
			AND MAST_CODE_DTL.CODE_TYPE =MAST_CODE_HD.CODE
			AND  MAST_CODE_DTL.GROUP_CODE=#groupCode# and  MAST_CODE_DTL.CODE_TYPE=#codeType#  
			and upper( MAST_CODE_DTL.Code)=upper(#code#) 		
	</select>
	<update id="sqlcodeupdate" parameterClass="cargo.cms.admin.bo.CodeBO" >
		UPDATE MAST_CODE_DTL SET Code_Desc= #description#, Code_Desc_Spl = #shortDesc# ,LM_USER_ID = #lastModUserId#,LM_DATE =sysdate where GROUP_CODE=#groupCode# and CODE_TYPE=#codeType#  and upper(Code)=upper(#code#) and to_char(LM_DATE, 'ddMMYYYY hh24:mi:ss') = #lastModDate#
	</update>
	<delete id="sqlcodedelete" parameterClass="cargo.cms.admin.bo.CodeBO" >
		DELETE FROM MAST_CODE_DTL  where GROUP_CODE=#groupCode# and CODE_TYPE=#codeType#  and upper(Code)=upper(#code#) and to_char(LM_DATE, 'ddMMYYYY hh24:mi:ss') = #lastModDate#
	</delete>
	<select id="sqlcodetypevalues"  parameterClass="cargo.cms.admin.bo.CodeBO" resultClass="cargo.cms.admin.bo.CodeBO" >
			Select Code as codeType ,code_Desc as codeTypeDesc from MAST_CODE_HD where upper(Group_Code)= upper(#groupCode#) order by code_desc
	</select>
	<select id="chkCodeType"  parameterClass="cargo.cms.admin.bo.CodeBO" resultClass="java.lang.String">
	 select UPD_IND from MAST_CODE_HD where upper(Group_Code)= upper(#groupCode#) and upper(CODE)=upper(#codeType#)
	</select>
	<!-- Maintain Public Holiday *STARTS* -->
	
	<!-- Onsite Changed on 10 May 2006	by mayank Starts here (Add Lm_Date) -->
	<select id="PH_fetchPHList"  parameterClass="cargo.cms.admin.master.bo.PublicHolidayBO" resultClass="cargo.cms.admin.master.bo.PublicHolidayBO" >
			SELECT	TO_CHAR(CODE,'DDMONYY') holidayDate, TO_CHAR(CODE,'DDMONYY') dateKey, 
			HOL_DESC holidayName , to_char(LM_DATE, 'ddMMYY hh24:mi') lmDate, reason , seq_num as sequence ,
			(select code_desc from MAST_CODE_DTL where CODE_TYPE = 'MAST_SC_CARGO_TYPE' AND CODE = mast.cargo_type) as cargoType
			FROM	MAST_PUB_HOLIDAYS mast
			WHERE	CTRY_CODE = #countryName#
			AND		TO_CHAR(CODE,'YYYY') = #year#
			<isNotEmpty property="cargoType">
				AND cargo_type = 	#cargoType#
			</isNotEmpty>
			ORDER BY CODE
	</select>
	<!-- Onsite Changed on 10 May 2006	by mayank Starts here  -->

	<select id="PH_checkCountryCode"  parameterClass="map" resultClass="java.lang.String">	
		SELECT TO_CHAR(count(1)) FROM MAST_COUNTRY WHERE UPPER(CODE) = UPPER(#CODE#)		
   	</select>
   	
   	<select id="PH_checkCountryCodeByCodeAndDesc"  parameterClass="map" resultClass="java.lang.String">	
		SELECT TO_CHAR(count(1)) FROM MAST_COUNTRY WHERE UPPER(CODE) = UPPER(#CODE#) AND UPPER(CODE_DESC) = UPPER(#CODE_DESC#)		
   	</select>
   	
   	<insert id="PH_insertPublicHoliday"  parameterClass="cargo.cms.admin.master.bo.PublicHolidayBO">
		INSERT INTO MAST_PUB_HOLIDAYS (CODE, CTRY_CODE, HOL_DESC, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE, REASON, cargo_type , seq_num)
		VALUES(TO_DATE(#holidayDate#,'DDMONYY'),#countryName#,#holidayName#,#userId#,SYSDATE,#userId#,SYSDATE,#reason# , #cargoType# , mast_pub_holidays_PK_SEQ.nextval)		
	</insert>

	<select id="PH_checkExistingHoliday"  parameterClass="cargo.cms.admin.master.bo.PublicHolidayBO" resultClass="java.lang.String">	
		SELECT	TO_CHAR(count(1)) FROM MAST_PUB_HOLIDAYS 
		WHERE	TO_CHAR(CODE,'DDMONYY') = #holidayDate#
		AND		CTRY_CODE = #countryName#	AND cargo_type = 	#cargoType#
   	</select>

	<delete id="PH_deletePublicHoliday" parameterClass="cargo.cms.admin.master.bo.PublicHolidayBO" >
		DELETE	MAST_PUB_HOLIDAYS 
		WHERE	TO_CHAR(CODE,'DDMONYY') = #dateKey#
		AND		CTRY_CODE = #countryName#	AND cargo_type = 	#cargoType#  
	</delete>

	<update id="PH_updatePublicHoliday" parameterClass="cargo.cms.admin.master.bo.PublicHolidayBO" >
		UPDATE	MAST_PUB_HOLIDAYS 
		SET		CODE = TO_DATE(#holidayDate#,'DDMONYY'), HOL_DESC = #holidayName#,
				LM_USER_ID = #userId#, LM_DATE = SYSDATE, reason = #reason#
		WHERE	TO_CHAR(CODE,'DDMONYY') = #dateKey#
		AND		CTRY_CODE = #countryName# AND cargo_type = #cargoType#
		and 	to_char(LM_DATE, 'ddMMYY hh24:mi')  = #lmDate# and seq_num = #sequence#
	</update>

	<!-- Maintain Public Holiday *ENDS* -->
	 			
	<select id="AB_FetchCustomerAddressList"  parameterClass="cargo.cms.admin.master.bo.AddressBookBO" resultClass= "cargo.cms.admin.master.bo.AddressBookBO">
		   <!--Query changed to dispaly the full name of city and country,b4 it was giving only country code and city code -->
			SELECT	a.CUSTOMER_NAME companyName, a.ADD1 add1, a.ADD2 add2, a.ADD3 add3, a.ADD4 add4, a.ADD5 add5, 
			    	a.city_code city,a.PIN_CODE postalCode, 
			    	(select code_desc from mast_country where code = a.ctry_code)country, a.STATE_CODE state, 
					a.CONTACT_ID1 contactId1, a.CONTACT_ID2 contactId2, a.CONTACT_ID3 contactId3, a.CONTACT_ID4 contactId4, 
					a.CONTACT_ID5 contactId5, a.CONTACT_NO1 contactDetail1, a.CONTACT_NO2 contactDetail2, 
					a.CONTACT_NO3 contactDetail3,	a.CONTACT_NO4 contactDetail4, a.CONTACT_NO5 contactDetail5
			FROM	CUST_ADDRESS_BOOK a,CUST_COMPANY b
			WHERE	b.code=a.agent_id
			<isNotEqual property="agentId" compareValue="">
				AND UPPER(a.agent_id) in (SELECT UPPER(CODE) FROM CUST_COMPANY WHERE UPPER(CODE_DESC) = UPPER(#agentId#))
			</isNotEqual>
			<isNotEqual property="companyName" compareValue="">	
				AND		UPPER(a.CUSTOMER_NAME) LIKE UPPER(#companyName#)	
			</isNotEqual>
			<isNotEqual property="iataCode" compareValue="">		
				AND	 UPPER(a.AGENT_ID) in	(SELECT UPPER(CODE) FROM CUST_COMPANY WHERE UPPER(CO_IATA_CODE) = UPPER(#iataCode#))
			</isNotEqual>
			<dynamic prepend="ORDER BY ">
	        <isNotEmpty property="sortOrder.sortField">
	            $sortOrder.sortField$
	       </isNotEmpty>
      </dynamic>
    </select>
	<select id="AB_FetchCustomerAddressListCOUNT"  parameterClass="cargo.cms.admin.master.bo.AddressBookBO" resultClass= "java.lang.Integer">		   
			SELECT	COUNT(*) as totalRowCount
			FROM	CUST_ADDRESS_BOOK a,CUST_COMPANY b
			WHERE	b.code=a.agent_id
			<isNotEqual property="agentId" compareValue="">
				AND UPPER(a.agent_id) in (SELECT UPPER(CODE) FROM CUST_COMPANY WHERE UPPER(CODE_DESC) = UPPER(#agentId#))
			</isNotEqual>
			<isNotEqual property="companyName" compareValue="">	
				AND		UPPER(a.CUSTOMER_NAME) LIKE UPPER(#companyName#)	
			</isNotEqual>
			<isNotEqual property="iataCode" compareValue="">		
				AND	 UPPER(a.AGENT_ID) in	(SELECT UPPER(CODE) FROM CUST_COMPANY WHERE UPPER(CO_IATA_CODE) = UPPER(#iataCode#))
			</isNotEqual>
		</select>
    
	<!-- fetch company name  for AutoComplete -->	
	 <select id="fetchAgentNameForAjax" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	 	select code_desc as agentId from CUST_COMPANY where UPPER(code_desc) like UPPER(#keySearchStr# ||'%') and ROWNUM &lt;= #maxRecFetch# and active = 'Y' AND BLACKLISTED='N' ORDER BY code_desc    
	</select>
	<select id="fetchAgentCompanyNameForAjax" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	 	SELECT CUSTOMER_NAME AS companyName FROM CUST_ADDRESS_BOOK a,CUST_COMPANY b WHERE  b.code=a.agent_id AND b.ACTIVE = 'Y' AND UPPER(CUSTOMER_NAME) like UPPER(#keySearchStr# ||'%') and ROWNUM &lt;= #maxRecFetch# ORDER BY b.code_desc    
	</select>
	
	<select id="AB_FetchAgentList"  parameterClass="map" resultClass="cargo.cms.afw.bo.MasterBO">
		SELECT	CODE AS codeId, CODE_DESC AS codeDesc FROM CUST_COMPANY
		ORDER BY CODE_DESC		
   	</select>
	

	<!-- By Naveen For Maintain Master -->
	<select id="sqlmasterlist" resultClass="cargo.cms.admin.bo.MaintainMasterBO">
		SELECT	M_NAME as tableName, M_DESC as tableDescription, M_STATUS as active , PRINT_YN as isPrint ,
		M_BUTTON_LBL as btnLabelDesc, M_LIST_LBL as listLabel , M_ADD_LBL as addLabel , M_UPDATE_LBL as updateLabel
		FROM	MLIST_HD 
		WHERE   M_STATUS = 'Y'
		ORDER	BY M_DESC
	</select>

	<select id="sqlmastertablestructure" parameterClass="java.lang.String" resultClass="cargo.cms.admin.bo.MasterTableStructureBO">
		SELECT	 M_COL_NAME as columnName, 
				 M_COL_LABEL as columnLabel, 
				 M_DISPLAY_COL as isDisplayColumn,
				 M_MANDATORY_COL as isMandatoryColumn ,
				 M_UNIQUE_COL as isUniqueKey,
				 M_COL_MAX_LENGTH as maxLength,
				 M_PK_COL as isPrimaryKey,
				 M_NUMERIC_COL as isNumeric

		FROM	 MLIST_DTL
		WHERE	 M_NAME=#masterName#
		ORDER BY M_DISPLAY_ORD
	</select>
	<!-- By Naveen For Maintain Master Ends -->
	
	<select id="sqlStrgrmFnMasterList" resultClass="cargo.cms.admin.bo.MaintainMasterBO">
		SELECT 
		UNIQUE SSA.FUNCTION_CODE codeId, SSF.CODE_DESC codeDesc, STRAGG(STRINGDELIM(MSI.IP_ADDRESS, ', ')) listLabel
		FROM 
		SEC_STRGRM_ACCESS SSA
		JOIN SEC_SCR_FUNCTION SSF
		ON
		SSA.FUNCTION_CODE = SSF.CODE
	    JOIN MAST_STRGRM_IP MSI
	    ON
	    MSI.IP_ID = SSA.IP_ID
	    GROUP BY SSA.FUNCTION_CODE, SSF.CODE_DESC
	</select>
	
	<select id="sqlStrgrmFnIpList" parameterClass="cargo.cms.admin.bo.MaintainMasterBO" resultClass="cargo.cms.afw.bo.MasterBO">
		SELECT 
    	SSP.IP_ADDRESS codeId, SSP.IP_DESC codeDesc, DECODE(SSP.IP_ID,NULL,'N','Y') param1
    	FROM 
		MAST_STRGRM_IP SSP
		LEFT JOIN SEC_STRGRM_ACCESS SSA
		ON
		SSP.IP_ID = SSA.IP_ID
    	WHERE
    	SSA.FUNCTION_CODE = #codeId#
	</select>
	
	<select id="sqlStrgrmIpList" resultClass="cargo.cms.afw.bo.MasterBO">
		SELECT 
    	SSP.IP_ADDRESS codeId, SSP.IP_DESC codeDesc, 'Y' param1
    	FROM 
		MAST_STRGRM_IP SSP		
	</select>
	
	<insert id="sqlInsStrgrmFn" parameterClass="cargo.cms.afw.bo.MasterBO">
   		INSERT INTO SEC_STRGRM_ACCESS(STRGRM_ACCESS_ID,FUNCTION_CODE,IP_ID,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE)
   		VALUES((SELECT NVL(MAX(STRGRM_ACCESS_ID),0) + 1 FROM SEC_STRGRM_ACCESS),(SELECT SSF.CODE FROM SEC_SCR_FUNCTION SSF WHERE SSF.CODE_DESC =#param1# AND ROWNUM = 1),(SELECT IP_ID FROM MAST_STRGRM_IP WHERE IP_ADDRESS=#codeId#),#createdUserId#,SYSDATE,#modifiedUserId#,SYSDATE)
   	</insert>
   	
   	<insert id="sqlInsStrgrmIpForFn" parameterClass="cargo.cms.afw.bo.MasterBO">
   		INSERT INTO SEC_STRGRM_ACCESS(STRGRM_ACCESS_ID,FUNCTION_CODE,IP_ID,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE)
    	SELECT (SELECT NVL(MAX(STRGRM_ACCESS_ID),0) FROM SEC_STRGRM_ACCESS) + ROWNUM STRGRM_ACCESS_ID, FUNCTION_CODE, IP_ID, 
    	#createdUserId# CR_USER_ID, SYSDATE CR_DATE, #modifiedUserId# LM_USER_ID, SYSDATE LM_DATE  FROM (
      	SELECT 
      	UNIQUE SSA.FUNCTION_CODE, #param1# IP_ID 
      	FROM SEC_STRGRM_ACCESS SSA
    )
   	</insert>
   	
   	<delete id="sqlDelStrgrmFn" parameterClass="cargo.cms.admin.bo.MaintainMasterBO">
   		DELETE FROM SEC_STRGRM_ACCESS WHERE FUNCTION_CODE = #codeId#
   	</delete>
   	
   	<delete id="sqlDelStrgrmIpForFn" parameterClass="cargo.cms.afw.bo.MasterBO">
   		DELETE FROM SEC_STRGRM_ACCESS WHERE IP_ID = (SELECT IP_ID FROM MAST_STRGRM_IP WHERE IP_ADDRESS=#param1#)
   	</delete>
   	
   	<select id="sqlGetSecScrFnList" parameterClass="java.util.Map"
		resultClass="java.util.HashMap">
		<![CDATA[
			SELECT 
			SSF.CODE codeId, SSF.CODE_DESC codeDesc
			FROM 
			SEC_SCR_FUNCTION SSF
			WHERE
			UPPER(CODE_DESC) LIKE UPPER(#keySearchStr# ||'%') AND ROWNUM <= #maxRecFetch#
			ORDER BY CODE_DESC
		]]>
	</select>
	
	<select id="sqlGetTruckCarrierListAjax" parameterClass="java.util.Map"
		resultClass="java.util.HashMap">
		<![CDATA[
			SELECT 
			CODE As codeId, CODE_DESC As companyName
			FROM 
			MAST_TRUCK_CARRIER 
			WHERE
			UPPER(CODE_DESC) LIKE UPPER(#keySearchStr# ||'%') AND ROWNUM <= #maxRecFetch#
			ORDER BY CODE_DESC
		]]>
	</select>

	<resultMap id="boardmsglist_map" class="cargo.cms.admin.bo.BoardMsgBO">
		<result property="senderID" column="SENDER_ID"/>
		<result property="senderName" column="SENDER_NAME"/>
		<result property="message" column="MSG"/>
		<result property="messageID" column="MSG_ID"/>
		<result property="expiryDate" column="EXPIRY_DATE1"/>
		<result property="createdDate" column="CR_DATE1"/>
		<result property="lastModDate" column="LM_DATE"/>
	</resultMap>
	
	<!-- Offshore changes By Murugan on 24May06 to fix bug no TF0508005 starts-->
	
	<select id="boardmsglist" parameterClass="cargo.cms.admin.bo.BoardMsgSearchBO" resultMap="boardmsglist_map">
		SELECT MSG_ID, SENDER_ID, SENDER_NAME, MSG,
		to_char(EXPIRY_DATE,'DDMONYY HH24:MI') EXPIRY_DATE1, to_char(CR_DATE,'DDMONYY HH24:MI') CR_DATE1,
		to_char(LM_DATE, 'ddMMYYYY hh24:mi:ss') LM_DATE
		FROM BOARD_MESSAGE
		<dynamic prepend="WHERE">
			<isNotEmpty prepend="AND" property="from">
				<![CDATA[ SENT_DATE >= to_date(#from#,'ddMONyy') ]]>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="to">
				<![CDATA[ SENT_DATE < (to_date(#to#,'ddMONyy')+1) ]]>
			</isNotEmpty>
		</dynamic>
		<dynamic prepend="ORDER BY ">
        <isNotEmpty property="sortOrder.sortField">
            $sortOrder.sortField$
       </isNotEmpty>
      </dynamic>
		<!-- ORDER BY SENT_DATE DESC -->
   	</select>

	<!-- Offshore changes By Murugan on 24May06 to fix bug no TF0508005 ends-->

	<resultMap id="boardmsg_map" class="cargo.cms.admin.bo.BoardMsgBO">
		<result property="senderID" column="SENDER_ID"/>
		<result property="senderName" column="SENDER_NAME"/>
		<result property="message" column="MSG"/>
		<result property="messageID" column="MSG_ID"/>
		<result property="expiryDate" column="EXPIRY_DATE"/>
		<result property="expiryTime" column="EXPIRY_TIME"/>
		<result property="recipient" column="RECIPIENT"/>
		<result property="recipientGroup" column="RECIPIENT_GROUP"/>
	</resultMap>
	<select id="boardmsg" parameterClass="java.lang.String" resultMap="boardmsg_map">
		SELECT MSG_ID, SENDER_ID, SENDER_NAME, MSG, TO_CHAR(EXPIRY_DATE, 'DDMONYY') AS EXPIRY_DATE, 
		TO_CHAR(EXPIRY_DATE, 'HH24MI') AS EXPIRY_TIME, RECIPIENT, RECIPIENT_GROUP FROM BOARD_MESSAGE WHERE MSG_ID = #PARAM#
   	</select>


	<delete id="deleteboardmsg" parameterClass="cargo.cms.admin.bo.BoardMsgBO">
		delete from BOARD_MESSAGE where MSG_ID = #messageID# AND to_char(LM_DATE, 'ddMMYYYY hh24:mi:ss') = #lastModDate#
	</delete>


	<insert id="createboardmsg" parameterClass="cargo.cms.admin.bo.BoardMsgBO">
		INSERT INTO BOARD_MESSAGE (MSG_ID, SENDER_ID, SENDER_NAME, RECIPIENT_GROUP, RECIPIENT, SENT_DATE, EXPIRY_DATE, MSG, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE, MOBILE_IND) VALUES 
		( BRD_MSG_ID_SEQ.NEXTVAL, #userId#, #senderName#, #recipientGroup#, #recipient#, SYSDATE, to_date(#expiryDate#,'DDMONYY HH24:MI'), #message#, #userId#, SYSDATE, #userId#, SYSDATE, #mobileInd#)
	</insert>
	
	<update id="updateboarmessage" parameterClass="cargo.cms.admin.bo.BoardMsgBO" >
		UPDATE BOARD_MESSAGE SET 
			SENDER_ID = #userId#, 
			SENDER_NAME = #senderName#, 
			RECIPIENT_GROUP = #recipientGroup#, 
			RECIPIENT = #recipient#, 
			EXPIRY_DATE = to_date(#expiryDate#,'DDMONYY HH24:MI'), 
			MSG =  #message#, 
			LM_USER_ID = #userId#, 
			LM_DATE = SYSDATE
	where MSG_ID = #messageID# AND to_char(LM_DATE, 'ddMMYYYY hh24:mi:ss') = #lastModDate#
	</update>	

	<select id="checkuser" parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT CODE FROM SEC_USER where CODE = #PARAM#
   	</select>


	<select id="checkrole" parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT CODE FROM SEC_ROLE where CODE_DESC = #PARAM#
   	</select>

<!-- added by kishore -->
	
	<insert id="sqlomsave" parameterClass="cargo.cms.admin.bo.OpsMsgBO"  >
	<![CDATA[
		INSERT INTO MAST_OPT_MSG (	 SEQ_NO,
									 SECTION,
								     CARR_CODE,
								     DEST,
								     MSG,
								     SUSPEND_IND,
								     EFF_DATE,
								     CR_USER_ID,
								     CR_DATE,
								     LM_USER_ID,
								     LM_DATE,
								     COU_CODE,
								     ACT_TYPE,
								     SPL_CODE1,
								     SPL_CODE2,
								     SPL_CODE3,
								     CGO_ACFT_TYPE,
								     NOT_ALLOW_SPLIT_CARR,
								     EFF_DATE_TO,
								     LDG_PT,
								     LDG_CTRY,
								     ENDRSE_IND,
								     NOT_SPLI_COMB_CARR,
								     FLT_FST_PORT,
								     FLT_FST_CTRY,
								     PKG_TYPE,
								     ORIG,
								     FLT_KEY,
								     MON_FLG,
								     TUE_FLG,
								     WED_FLG,
								     THU_FLG,
								     FRI_FLG,
								     SAT_FLG,
								     SUN_FLG,
								     SPL_CODE4,
								     SPL_CODE5,
								     SPL_CODE6,
								     SPL_CODE7,
								     SPL_CODE8,
								     SPL_CODE9,
								     SPL_CODE10,
								     PORT1,
								     PORT2,
								     PORT3,NOT_ALLOW_PART_SHIP	)
						 VALUES (	MAST_OPT_MSG_SEQ.nextval,
						 			#section#,
						 			#carrCode#,
						 			#dest#,
						 			#msg#,
						 			#suspendInd#,
						 			TO_DATE(#effDate#,'DDMONYY'),
						 			#crUserId#,
						 			SYSDATE,
						 			#lmUserId#,
						 			SYSDATE	,
						 			#countryCode#,
						 			#actionType#,
						 			#specialCode1#,
						 			#specialCode2#,
						 			#specialCode3#,
						 			#cargoArcftType#,
						 			NVL(#spiltCarrInd#,'N'),
						 			#effEndDate#,
						 			#ldgPt#,
						 			#ldgCtry#,
						 			#endrseInd#,
						 			#spltCombCarr#,
						 			#fltFstPort#,
						 			#fltFstCtry#,
						 			#pkgType#,
						 			#awbOrig#,
						 			#fltKey#,
						 			#monFlag#,
						 			#tueFlag#,
						 			#wedFlag#,
						 			#thuFlag#,
						 			#friFlag#,
						 			#satFlag#,
						 			#sunFlag#, 
						 			#specialCode4#,
						 			#specialCode5#,
						 			#specialCode6#,
						 			#specialCode7#,
						 			#specialCode8#,
						 			#specialCode9#,
						 			#specialCode10#,
						 			#port1#,
						 			#port2#,
						 			#port3#,
						 			#allowPartShipment#
						 			)
		
	]]>
	</insert>
	<select id="om_select_duplicate_record" parameterClass="cargo.cms.admin.bo.OpsMsgBO" resultClass="java.lang.Integer">
	SELECT count(1) FROM mast_opt_msg where  section = #section# AND carr_code = #carrCode# AND dest = #dest# AND 
	eff_date = #effDate#
	</select>
	
	<select id="checkEffectiveDateStatus"  parameterClass="java.lang.String" resultClass="java.lang.String" >
			SELECT TO_CHAR(TO_DATE(sysdate,'DD-MON-YY') - TO_DATE(#dateParam#,'DD-MON-YY')) DAYDIFF FROM DUAL
	</select>
	
	<delete id="sqlomdelete" parameterClass="cargo.cms.admin.bo.OpsMsgBO" >
	<![CDATA[
		DELETE FROM MAST_OPT_MSG WHERE 
		SEQ_NO =#seqNo#
	]]>
	</delete>
	
		<!-- Onsite Changed on 09 May 2006	by mayank Starts here  -->
		<select id="sqlomsearch"  parameterClass="cargo.cms.admin.bo.OpsMsgBO" resultClass="cargo.cms.admin.bo.OpsMsgBO">
			SELECT SEQ_NO as seqNo, flt_key as fltKey,
       MAST_OPT_MSG.CR_DATE AS crDate,
       DECODE(MAST_OPT_MSG.SECTION,'EMB BY FLT','',to_char(MAST_OPT_MSG.EFF_DATE,'DDMONYY')) AS effDate,
       DECODE(MAST_OPT_MSG.SECTION,'EMB BY FLT','',to_char(EFF_DATE_TO,'DDMONYY')) AS effEndDate,
       DECODE(MAST_OPT_MSG.SECTION,'EMB BY FLT',to_char(MAST_OPT_MSG.EFF_DATE,'DDMONYY'),'') AS fltDateFrom,
       DECODE(MAST_OPT_MSG.SECTION,'EMB BY FLT',to_char(EFF_DATE_TO,'DDMONYY'),'') AS fltDateTo,
       CARR_CODE AS carrCode,COU_CODE as countryCode,DEST AS dest,MAST_CODE_DTL.CODE_DESC AS sectionDisplay,
			SECTION as section, SUSPEND_IND AS suspendInd,replace(replace(MSG,chr(10),' '),chr(13),' ') AS msg,
			NOT_ALLOW_SPLIT_CARR as spiltCarrInd,LDG_PT AS ldgPt,LDG_CTRY AS ldgCtry,
      ENDRSE_IND AS endrseInd,NOT_SPLI_COMB_CARR AS spltCombCarr,UPPER(ACT_TYPE) AS actionType,FLT_FST_PORT AS fltFstPort,FLT_FST_CTRY AS fltFstCtry,
			decode(PKG_TYPE,'B','Bulk','P','Prepack','M','Mix Prepack','') AS pkgType,ORIG as awbOrig,
               decode(PORT1, null, '', PORT1)
               || decode(PORT2, null, '',','||  PORT2)
               || decode(PORT3, null, '', ','|| PORT3) AS portDtls,
               decode(spl_code1, null, '', spl_code1 )
               || decode(spl_code2, null, '',','||  spl_code2 )
               || decode(spl_code3, null, '', ','|| spl_code3 )
               || decode(spl_code4, null, '', ','|| spl_code4 )
               || decode(spl_code5, null, '', ','|| spl_code5 )
               || decode(spl_code6, null, '', ','|| spl_code6 )
               || decode(spl_code7, null, '', ','|| spl_code7 )
               || decode(spl_code8, null, '', ','|| spl_code8 )
               || decode(spl_code9, null, '', ','|| spl_code9) 
               || decode(spl_code10, null, '', ','|| spl_code10)as shcDtl,
               mast_opt_msg.mon_flg as monFlag,mast_opt_msg.tue_flg as tueFlag,mast_opt_msg.wed_flg as wedFlag,
               mast_opt_msg.thu_flg as thuFlag,mast_opt_msg.fri_flg as friFlag,mast_opt_msg.sat_flg as satFlag,mast_opt_msg.sun_flg as sunFlag,mast_opt_msg.NOT_ALLOW_PART_SHIP as allowPartShipment
			FROM MAST_OPT_MSG 
			LEFT JOIN MAST_CODE_DTL ON MAST_OPT_MSG.SECTION = MAST_CODE_DTL.CODE AND CODE_TYPE = 'OMD_SECTION'
			<dynamic prepend="WHERE">	
				TRUNC(MAST_OPT_MSG.CR_DATE) BETWEEN  decode(#msgCrDateFrom#,null,TRUNC(MAST_OPT_MSG.CR_DATE),TO_DATE(#msgCrDateFrom#,'DDMONYY')) 
				AND decode(#msgCrDateTo#,null,TRUNC(MAST_OPT_MSG.CR_DATE),TO_DATE(#msgCrDateTo#,'DDMONYY'))  						
			<isNotEmpty  property="section">
				AND UPPER(SECTION)= UPPER(#section#)
			</isNotEmpty>
			<isNotEmpty  property="carrCode">
				AND UPPER(CARR_CODE) = #carrCode# 
			</isNotEmpty>
			<isNotEmpty  property="countryCode">
				AND UPPER(COU_CODE) = #countryCode# 
			</isNotEmpty>
			<isNotEmpty property="effDate">
					AND UPPER(TO_CHAR(EFF_DATE,'DDMONYY')) = #effDate#					
			</isNotEmpty>	
			<isNotEmpty property="effEndDate">					
					AND UPPER(TO_CHAR(EFF_DATE_TO,'DDMONYY')) = #effEndDate#					
			</isNotEmpty>
			<isNotEmpty property="spiltCarrInd">					
					AND NVL(NOT_ALLOW_SPLIT_CARR,'N') = #spiltCarrInd#					
			</isNotEmpty>					
			<isNotEmpty property="dest">
				AND UPPER(DEST) = #dest#
			</isNotEmpty>
			<isNotEmpty property="specialCode">
				AND (UPPER(SPL_CODE1) = #specialCode#
				OR UPPER(SPL_CODE2) = #specialCode#
				OR UPPER(SPL_CODE3) = #specialCode#)
			</isNotEmpty>
			<isNotEmpty property="actionType">
				AND UPPER(ACT_TYPE) = #actionType#
			</isNotEmpty>
			 <isNotEmpty  property="ldgCtry">
				AND UPPER(LDG_CTRY) = #ldgCtry# 
			</isNotEmpty>
		    <isNotEmpty property="ldgPt">
				AND UPPER(LDG_PT) = #ldgPt#
			</isNotEmpty>
		    <isNotEmpty property="endrseInd">					
				AND NVL(ENDRSE_IND,'N') = #endrseInd#					
			</isNotEmpty>
			 <isNotEmpty  property="fltFstCtry">
				AND UPPER(FLT_FST_CTRY) = #fltFstCtry# 
			</isNotEmpty>
			 <isNotEmpty  property="fltFstPort">
				AND UPPER(FLT_FST_PORT) = #fltFstPort# 
			</isNotEmpty>
			 <isNotEmpty  property="pkgType">
				AND UPPER(PKG_TYPE) = #pkgType# 
			</isNotEmpty>
			<isNotEmpty  property="awbOrig">
				AND UPPER(ORIG) = #awbOrig# 
			</isNotEmpty>
			<isNotEmpty  property="fltKey">
				AND UPPER(FLT_KEY) = #fltKey# 
			</isNotEmpty>
			<isNotEmpty  property="port1">
				AND UPPER(PORT1) = #port1# 
			</isNotEmpty>
			<isNotEmpty  property="port2">
				AND UPPER(PORT2) = #port2# 
			</isNotEmpty>
			<isNotEmpty  property="port3">
				AND UPPER(PORT3) = #port3# 
			</isNotEmpty>
			<isNotEmpty property="fltDateFrom">
					AND UPPER(TO_CHAR(EFF_DATE,'DDMONYY')) = #fltDateFrom#					
			</isNotEmpty>	
			<isNotEmpty property="fltDateTo">					
					AND UPPER(TO_CHAR(EFF_DATE_TO,'DDMONYY')) = #fltDateTo#					
			</isNotEmpty>			
		</dynamic>			
		<isNotEmpty property="sortOrder.sortField">
             ORDER BY $sortOrder.sortField$
        </isNotEmpty>
	   </select>  
       
       
       <select id="find_duplicate_record_split_carrier" parameterClass="cargo.cms.admin.bo.OpsMsgBO" resultClass="java.lang.Integer">
			SELECT count(*) FROM MAST_OPT_MSG WHERE 1 = 1
			AND NVL(NOT_ALLOW_SPLIT_CARR,'N') = 'Y'
	        <isNotEmpty  property="section">
				AND UPPER(SECTION)= UPPER(#section#)
			</isNotEmpty>
			<isNotEmpty  property="countryCode">
				AND UPPER(COU_CODE) = #countryCode# 
			</isNotEmpty>				
			<isNotEmpty property="dest">
				AND UPPER(DEST) = #dest#
			</isNotEmpty>
			<isNotEmpty  property="ldgCtry">
				AND UPPER(LDG_CTRY) = #ldgCtry# 
			</isNotEmpty>				
			<isNotEmpty property="ldgPt">
				AND UPPER(LDG_PT) = #ldgPt#
			</isNotEmpty>
			<isNotEmpty property="carrCode">
				AND UPPER(CARR_CODE) = #carrCode#
			</isNotEmpty>
			<isNotEmpty property="spltCombCarr">
				AND UPPER(NOT_SPLI_COMB_CARR) = #spltCombCarr#
			</isNotEmpty>
			<isNotEmpty property="actionType">
				AND UPPER(ACT_TYPE) = #actionType#
			</isNotEmpty>
			 <isNotEmpty  property="fltFstCtry">
				AND UPPER(FLT_FST_CTRY) = #fltFstCtry# 
			</isNotEmpty>
			 <isNotEmpty  property="fltFstPort">
				AND UPPER(FLT_FST_PORT) = #fltFstPort# 
			</isNotEmpty>
			 <isNotEmpty  property="pkgType">
				AND UPPER(PKG_TYPE) = #pkgType# 
			</isNotEmpty>
			<isNotEmpty  property="awbOrig">
				AND UPPER(ORIG) = #awbOrig# 
			</isNotEmpty>
			<isNotEmpty property="endrseInd">
			AND UPPER(ENDRSE_IND) = #endrseInd#
			</isNotEmpty>
			AND ( eff_date BETWEEN  TO_DATE(#effDate#,'DDMONYY')  AND nvl(TO_DATE(#effEndDate#,'DDMONYY'),TO_DATE(#effDate#,'DDMONYY')+1)
				      OR  ( case when EFF_DATE_TO is not null then  (EFF_DATE_TO)  else (sysdate+(1*365*10))  end) 
				                BETWEEN  TO_DATE(#effDate#,'DDMONYY')  AND nvl(TO_DATE(#effEndDate#,'DDMONYY'),TO_DATE(#effDate#,'DDMONYY')+1)
				      or TO_DATE(#effDate#,'DDMONYY') between eff_date and ( case when EFF_DATE_TO is not null then  (EFF_DATE_TO)  else (sysdate+(1*365*10))  end)
				      or nvl(TO_DATE(#effEndDate#,'DDMONYY'),TO_DATE(#effDate#,'DDMONYY')+1) between eff_date and ( case when EFF_DATE_TO is not null then  (EFF_DATE_TO)  else (sysdate+(1*365*10))  end))			
	 </select>
	<select id="find_duplicate_record_split_carriera" parameterClass="cargo.cms.admin.bo.OpsMsgBO" resultClass="java.lang.Integer">
			SELECT count(*) FROM MAST_OPT_MSG WHERE 1 = 1
			AND NVL(NOT_ALLOW_SPLIT_CARR,'N') = 'Y'
	        <isNotEmpty  property="section">
				AND UPPER(SECTION)= UPPER(#section#)
			</isNotEmpty>
			<isNotEmpty  property="ldgCtry">
				AND UPPER(LDG_CTRY) = #ldgCtry# 
			</isNotEmpty>				
			<isNotEmpty property="ldgPt">
				AND UPPER(LDG_PT) = #ldgPt#
			</isNotEmpty>
			 <isNotEmpty  property="fltFstCtry">
				AND UPPER(FLT_FST_CTRY) = #fltFstCtry# 
			</isNotEmpty>
			 <isNotEmpty  property="fltFstPort">
				AND UPPER(FLT_FST_PORT) = #fltFstPort# 
			</isNotEmpty>
			 <isNotEmpty  property="pkgType">
				AND UPPER(PKG_TYPE) = #pkgType# 
			</isNotEmpty>
			<isNotEmpty  property="awbOrig">
				AND UPPER(ORIG) = #awbOrig# 
			</isNotEmpty>
			<isNotEmpty property="actionType">
				AND UPPER(ACT_TYPE) = #actionType#
			</isNotEmpty>
			AND ( eff_date BETWEEN  TO_DATE(#effDate#,'DDMONYY')  AND nvl(TO_DATE(#effEndDate#,'DDMONYY'),TO_DATE(#effDate#,'DDMONYY')+1)
				      OR  ( case when EFF_DATE_TO is not null then  (EFF_DATE_TO)  else (sysdate+(1*365*10))  end) 
				                BETWEEN  TO_DATE(#effDate#,'DDMONYY')  AND nvl(TO_DATE(#effEndDate#,'DDMONYY'),TO_DATE(#effDate#,'DDMONYY')+1)
				      or TO_DATE(#effDate#,'DDMONYY') between eff_date and ( case when EFF_DATE_TO is not null then  (EFF_DATE_TO)  else (sysdate+(1*365*10))  end)
				      or nvl(TO_DATE(#effEndDate#,'DDMONYY'),TO_DATE(#effDate#,'DDMONYY')+1) between eff_date and ( case when EFF_DATE_TO is not null then  (EFF_DATE_TO)  else (sysdate+(1*365*10))  end))			
	 </select>
	 
	 <select id="find_FLT_duplicate_record" parameterClass="cargo.cms.admin.bo.OpsMsgBO" resultClass="java.lang.Integer">
			SELECT count(*) FROM MAST_OPT_MSG WHERE 1=1
			<isNotEmpty  property="carrCode">
			CARR_CODE=#carrCode#
			</isNotEmpty>
	        <isNotEmpty  property="section">
				AND UPPER(SECTION)= UPPER(#section#)
			</isNotEmpty>
			<isNotEmpty  property="weekCheck">
			<isEqual property="weekCheck" compareValue="Y">
			<![CDATA[
			AND ((UPPER(MON_FLG)=#monFlag# and MON_FLG is not null and MON_FLG != 'N') 
			OR (UPPER(TUE_FLG)=#tueFlag# and TUE_FLG is not null and TUE_FLG != 'N')
			OR (UPPER(WED_FLG)=#wedFlag#  and WED_FLG is not null and WED_FLG != 'N')
			OR (UPPER(THU_FLG)=#thuFlag#  and THU_FLG is not null and THU_FLG != 'N')
			OR (UPPER(FRI_FLG)=#friFlag# and FRI_FLG is not null and FRI_FLG != 'N')
			OR (UPPER(SAT_FLG)=#satFlag#  and SAT_FLG is not null and SAT_FLG != 'N')
			OR (UPPER(SUN_FLG)=#sunFlag#  and SUN_FLG is not null and SUN_FLG != 'N')
			)
			]]>
			</isEqual>
			</isNotEmpty>
			
			<isNotEmpty  property="fltKey">
				AND UPPER(flt_key) = #fltKey# 
			</isNotEmpty>
			
			<isNotEmpty property="portStat">
			AND (UPPER(PORT1) in (#port1#,#port2#,#port3#)
			or UPPER(PORT2) in (#port1#,#port2#,#port3#)
			or UPPER(PORT3) in (#port1#,#port2#,#port3#)
			)
			</isNotEmpty>
			<isNotEmpty property="specialCode">
				AND (UPPER(SPL_CODE1) in (#specialCode1#,#specialCode2#,#specialCode3#,#specialCode4#,#specialCode5#,#specialCode6#,#specialCode7#,#specialCode8#,#specialCode9#,#specialCode10#)
				OR UPPER(SPL_CODE2) in (#specialCode1#,#specialCode2#,#specialCode3#,#specialCode4#,#specialCode5#,#specialCode6#,#specialCode7#,#specialCode8#,#specialCode9#,#specialCode10#)
				OR UPPER(SPL_CODE3) in (#specialCode1#,#specialCode2#,#specialCode3#,#specialCode4#,#specialCode5#,#specialCode6#,#specialCode7#,#specialCode8#,#specialCode9#,#specialCode10#)
				OR UPPER(SPL_CODE4) in (#specialCode1#,#specialCode2#,#specialCode3#,#specialCode4#,#specialCode5#,#specialCode6#,#specialCode7#,#specialCode8#,#specialCode9#,#specialCode10#)
				OR UPPER(SPL_CODE5) in (#specialCode1#,#specialCode2#,#specialCode3#,#specialCode4#,#specialCode5#,#specialCode6#,#specialCode7#,#specialCode8#,#specialCode9#,#specialCode10#)
				OR UPPER(SPL_CODE6) in (#specialCode1#,#specialCode2#,#specialCode3#,#specialCode4#,#specialCode5#,#specialCode6#,#specialCode7#,#specialCode8#,#specialCode9#,#specialCode10#)
				OR UPPER(SPL_CODE7) in (#specialCode1#,#specialCode2#,#specialCode3#,#specialCode4#,#specialCode5#,#specialCode6#,#specialCode7#,#specialCode8#,#specialCode9#,#specialCode10#)
				OR UPPER(SPL_CODE8) in (#specialCode1#,#specialCode2#,#specialCode3#,#specialCode4#,#specialCode5#,#specialCode6#,#specialCode7#,#specialCode8#,#specialCode9#,#specialCode10#)
				OR UPPER(SPL_CODE9) in (#specialCode1#,#specialCode2#,#specialCode3#,#specialCode4#,#specialCode5#,#specialCode6#,#specialCode7#,#specialCode8#,#specialCode9#,#specialCode10#)
				OR UPPER(SPL_CODE10) in (#specialCode1#,#specialCode2#,#specialCode3#,#specialCode4#,#specialCode5#,#specialCode6#,#specialCode7#,#specialCode8#,#specialCode9#,#specialCode10#)
				)
			</isNotEmpty>
			<isNotEmpty property="cargoArcftType">
				AND ((UPPER(CGO_ACFT_TYPE) = #cargoArcftType#) or (UPPER(CGO_ACFT_TYPE) = (SELECT CODE FROM MAST_CODE_DTL where CODE_TYPE = 'CGO_ACFT_TYPE' and code_desc = #cargoArcftType# and rownum=1)))
			</isNotEmpty>
			<isNotEmpty property="endrseInd">
			AND NVL(ENDRSE_IND,'N') = NVL(#endrseInd#,'N')
			</isNotEmpty>
			AND ( eff_date BETWEEN  TO_DATE(#effDate#,'DDMONYY')  AND nvl(TO_DATE(#effEndDate#,'DDMONYY'),TO_DATE(#effDate#,'DDMONYY')+1)
				      OR  ( case when EFF_DATE_TO is not null then  (EFF_DATE_TO)  else (sysdate+(1*365*10))  end) 
				                BETWEEN  TO_DATE(#effDate#,'DDMONYY')  AND nvl(TO_DATE(#effEndDate#,'DDMONYY'),TO_DATE(#effDate#,'DDMONYY')+1)
				      or TO_DATE(#effDate#,'DDMONYY') between eff_date and ( case when EFF_DATE_TO is not null then  (EFF_DATE_TO)  else (sysdate+(1*365*10))  end)
				      or nvl(TO_DATE(#effEndDate#,'DDMONYY'),TO_DATE(#effDate#,'DDMONYY')+1) between eff_date and ( case when EFF_DATE_TO is not null then  (EFF_DATE_TO)  else (sysdate+(1*365*10))  end))			
	</select>
	 
       <select id="find_duplicate_record" parameterClass="cargo.cms.admin.bo.OpsMsgBO" resultClass="java.lang.Integer">
			SELECT count(*) FROM MAST_OPT_MSG WHERE CARR_CODE=#carrCode#
			AND NVL(suspend_ind,'N') = 'N'
	        <isNotEmpty  property="section">
				AND UPPER(SECTION)= UPPER(#section#)
			</isNotEmpty>
			<isNotEmpty  property="countryCode">
				AND UPPER(COU_CODE) = #countryCode# 
			</isNotEmpty>
			<isNotEmpty  property="ldgCtry">
				AND UPPER(LDG_CTRY) = #ldgCtry# 
			</isNotEmpty>				
			<isNotEmpty property="ldgPt">
				AND UPPER(LDG_PT) = #ldgPt#
			</isNotEmpty>	
			<isNotEmpty property="dest">
				AND UPPER(DEST) = #dest#
			</isNotEmpty>
			 <isNotEmpty  property="fltFstCtry">
				AND UPPER(FLT_FST_CTRY) = #fltFstCtry# 
			</isNotEmpty>
			 <isNotEmpty  property="fltFstPort">
				AND UPPER(FLT_FST_PORT) = #fltFstPort# 
			</isNotEmpty>
			 <isNotEmpty  property="pkgType">
				AND UPPER(PKG_TYPE) = #pkgType# 
			</isNotEmpty>
			<isEmpty property="pkgType">
			AND PKG_TYPE IS NULL
			</isEmpty>
			<isNotEmpty  property="awbOrig">
				AND UPPER(ORIG) = #awbOrig# 
			</isNotEmpty>
			<isNotEmpty property="specialCode">
				AND (UPPER(SPL_CODE1) in (#specialCode1#,#specialCode2#,#specialCode3#)
				OR UPPER(SPL_CODE2) in (#specialCode1#,#specialCode2#,#specialCode3#)
				OR UPPER(SPL_CODE3) in (#specialCode1#,#specialCode2#,#specialCode3#))
			</isNotEmpty>
			<isNotEmpty property="actionType">
				AND UPPER(ACT_TYPE) = #actionType#
			</isNotEmpty>
			<isNotEmpty property="spiltCarrInd">
				AND not_allow_split_carr = #spiltCarrInd#
			</isNotEmpty>
			
			<isNotEmpty property="cargoArcftType">
				AND ((UPPER(CGO_ACFT_TYPE) = #cargoArcftType#) or (UPPER(CGO_ACFT_TYPE) = (SELECT CODE FROM MAST_CODE_DTL where CODE_TYPE = 'CGO_ACFT_TYPE' and code_desc = #cargoArcftType# and rownum=1)))
			</isNotEmpty>
			<isNotEmpty property="endrseInd">
			AND NVL(ENDRSE_IND,'N') = NVL(#endrseInd#,'N')
			</isNotEmpty>
			AND ( eff_date BETWEEN  TO_DATE(#effDate#,'DDMONYY')  AND nvl(TO_DATE(#effEndDate#,'DDMONYY'),TO_DATE(#effDate#,'DDMONYY')+1)
				      OR  ( case when EFF_DATE_TO is not null then  (EFF_DATE_TO)  else (sysdate+(1*365*10))  end) 
				                BETWEEN  TO_DATE(#effDate#,'DDMONYY')  AND nvl(TO_DATE(#effEndDate#,'DDMONYY'),TO_DATE(#effDate#,'DDMONYY')+1)
				      or TO_DATE(#effDate#,'DDMONYY') between eff_date and ( case when EFF_DATE_TO is not null then  (EFF_DATE_TO)  else (sysdate+(1*365*10))  end)
				      or nvl(TO_DATE(#effEndDate#,'DDMONYY'),TO_DATE(#effDate#,'DDMONYY')+1) between eff_date and ( case when EFF_DATE_TO is not null then  (EFF_DATE_TO)  else (sysdate+(1*365*10))  end))			
	</select>
 	
		<select id="sqlomsearchbypk"  parameterClass="cargo.cms.admin.bo.OpsMsgBO" resultClass="cargo.cms.admin.bo.OpsMsgBO">
			SELECT SEQ_NO as seqNo, TO_CHAR(MAST_OPT_MSG.CR_DATE,'DDMONYY') AS crDate,flt_key as fltKey,
       DECODE(MAST_OPT_MSG.SECTION,'EMB BY FLT','',to_char(MAST_OPT_MSG.EFF_DATE,'DDMONYY')) AS effDate,
       DECODE(MAST_OPT_MSG.SECTION,'EMB BY FLT','',to_char(EFF_DATE_TO,'DDMONYY')) AS effEndDate,
       DECODE(MAST_OPT_MSG.SECTION,'EMB BY FLT',to_char(MAST_OPT_MSG.EFF_DATE,'DDMONYY'),'') AS fltDateFrom,
       DECODE(MAST_OPT_MSG.SECTION,'EMB BY FLT',to_char(EFF_DATE_TO,'DDMONYY'),'') AS fltDateTo,
       CARR_CODE AS carrCode,DEST AS dest,SECTION AS section,MAST_CODE_DTL.CODE_DESC AS sectionDisplay,SUSPEND_IND AS suspendInd,MSG AS msg,
			SPL_CODE1 as specialCode1,SPL_CODE2 as specialCode2,SPL_CODE3 as specialCode3,COU_CODE as countryCode,ACT_TYPE as actionType,ACT_TYPE as oldAcftType,
			(SELECT CODE_DESC FROM MAST_CODE_DTL where CODE_TYPE = 'CGO_ACFT_TYPE' and CODE = MAST_OPT_MSG.CGO_ACFT_TYPE) as cargoArcftType,
			NOT_ALLOW_SPLIT_CARR as spiltCarrInd,NOT_SPLI_COMB_CARR AS spltCombCarr,NVL(ENDRSE_IND,'N') AS endrseInd,LDG_PT AS ldgPt,LDG_CTRY AS ldgCtry,MAST_OPT_MSG.CGO_ACFT_TYPE,FLT_FST_PORT AS fltFstPort,FLT_FST_CTRY AS fltFstCtry,PKG_TYPE AS pkgType, ORIG AS awbOrig,
       decode(PORT1, null, '', PORT1)
               || decode(PORT2, null, '',','||  PORT2)
               || decode(PORT3, null, '', ','|| PORT3) AS port,
               decode(spl_code1, null, '', spl_code1 )
               || decode(spl_code2, null, '',','||  spl_code2 )
               || decode(spl_code3, null, '', ','|| spl_code3 )
               || decode(spl_code4, null, '', ','|| spl_code4 )
               || decode(spl_code5, null, '', ','|| spl_code5 )
               || decode(spl_code6, null, '', ','|| spl_code6 )
               || decode(spl_code7, null, '', ','|| spl_code7 )
               || decode(spl_code8, null, '', ','|| spl_code8 )
               || decode(spl_code9, null, '', ','|| spl_code9) 
               || decode(spl_code10, null, '', ','|| spl_code10)as shc,
               mast_opt_msg.mon_flg as monFlag,mast_opt_msg.tue_flg as tueFlag,mast_opt_msg.wed_flg as wedFlag,
               mast_opt_msg.thu_flg as thuFlag,mast_opt_msg.fri_flg as friFlag,mast_opt_msg.sat_flg as satFlag,mast_opt_msg.sun_flg as sunFlag,
               mast_opt_msg.NOT_ALLOW_PART_SHIP as allowPartShipment
			FROM MAST_OPT_MSG LEFT JOIN MAST_CODE_DTL
			ON MAST_OPT_MSG.SECTION = MAST_CODE_DTL.CODE AND CODE_TYPE = 'OMD_SECTION' WHERE SEQ_NO = #seqNo#
			ORDER BY TO_CHAR(MAST_OPT_MSG.CR_DATE,'DDMONYY') DESC,	EFF_DATE DESC,	CARR_CODE
	    </select> 
       <!-- Onsite Changed on 09 May 2006	by mayank Ends here  -->
		     
       
       	
	<update id="sqlomupdate" parameterClass="cargo.cms.admin.bo.OpsMsgBO" >
	<![CDATA[
		UPDATE MAST_OPT_MSG SET  EFF_DATE=TO_DATE(#effDate#,'DDMONYY'), MSG = #msg#,
		SUSPEND_IND=#suspendInd#, LM_USER_ID = #lmUserId#, LM_DATE = SYSDATE,ACT_TYPE= #actionType#,
		CGO_ACFT_TYPE = (SELECT CODE FROM MAST_CODE_DTL where CODE_TYPE = 'CGO_ACFT_TYPE' and CODE_DESC = #cargoArcftType#),
		NOT_ALLOW_SPLIT_CARR = #spiltCarrInd# , EFF_DATE_TO = #effEndDate#,ENDRSE_IND=#endrseInd#,ORIG=#awbOrig#,NOT_ALLOW_PART_SHIP=#allowPartShipment#		  
		WHERE SEQ_NO =#seqNo#
		]]>
	</update>
	
	<!-- addition end -->
	
	<!-- Special handling code query starts -->
	<!-- Onsite Changed on 09 May 2006	by mayank Starts here  -->
	<!-- Special handling code query starts -->
	<!-- Offshore changes by Murugasn on 25 May 06 starts -->
	<select id="splhandlingretrieve"  parameterClass="cargo.cms.admin.bo.SplHandlingCodeBO" resultClass="cargo.cms.admin.bo.SplHandlingCodeBO">
		SELECT  SPL_CODE as splHandlingCode, 'false' as inputField, Cust_No as customerNo, 
		mastsplcode.CODE_DESC as splHandlingDescription,TO_CHAR(s.LM_DATE,'DDMONYY HH24:MI:SS') AS lastModifiedDate 
			FROM CUST_AIRL_SPL_CODE s, CUST_COMPANY c, MAST_SPL_HAND_CODE mastsplcode
		<dynamic prepend="WHERE">			
			<isNotEmpty prepend="AND" property="companyName">
				UPPER(c.Code_Desc) = #companyName#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="selectedCarrier">
				UPPER(c.Carr_Code) = #selectedCarrier# 
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="customerNo">
				UPPER(c.Code) = #customerNo#
			</isNotEmpty>
			AND UPPER(s.Cust_No) = c.Code AND UPPER(mastsplcode.code) = UPPER(s.SPL_CODE) 
			AND s.SPL_Type = #selectedType#  ORDER BY SPL_CODE
		</dynamic>
	</select>
	
	<select id="mastairlineconfigretrievedescription"  parameterClass="java.lang.String" resultClass="java.lang.String">
	SELECT CODE_DESC FROM MAST_CODE_DTL WHERE GROUP_CODE='38' AND CODE_TYPE   ='MAST_AIRLN_CONFIG' AND CODE        =#PARAM#  AND ROWNUM      =1
	</select>
	
	<select id="mastairlineconfigduplicatecheck" parameterClass="java.util.HashMap" resultClass="java.lang.String">
	SELECT COUNT(1) FROM MAST_AIRLN_CONFIG_DTL DTL,MAST_AIRLN_CONFIG_HD HD WHERE HD.CARR_CODE = DTL.CARR_CODE AND HD.MAST_TYPE=DTL.MAST_TYPE AND DTL.CODE_TYPE=#code# AND HD.MAST_TYPE=#selectedType# and HD.CARR_CODE=#selectedCarrier#
	</select>
	<select id="mastairlineconfigduplicateflightcheck" parameterClass="java.util.HashMap" resultClass="java.lang.String">
	SELECT COUNT(1) FROM MAST_AIRLN_CONFIG_DTL DTL,MAST_AIRLN_CONFIG_HD HD WHERE HD.CARR_CODE = DTL.CARR_CODE AND HD.MAST_TYPE=DTL.MAST_TYPE AND DTL.CODE_TYPE=#code# AND HD.MAST_TYPE=#selectedType# and HD.CARR_CODE=#selectedCarrier#
	AND ((dtl.eff_date_from BETWEEN  TO_DATE(#effdatefrom#,'DDMONYY')  AND TO_DATE(#effdateto#,'DDMONYY'))
	OR (dtl.EFF_DATE_TO BETWEEN  TO_DATE(#effdatefrom#,'DDMONYY')  AND TO_DATE(#effdateto#,'DDMONYY')))
	</select>
	<select id="mastairlineconfigaurrentdate"  parameterClass="map"  resultClass="java.lang.String" >
			select to_char(Sysdate, 'DDMONYY') from dual
   	 </select>
	
		<select id="mastairlineconfigretrieve"  parameterClass="cargo.cms.admin.bo.MastAirlineConfigBO" resultClass="cargo.cms.admin.bo.MastAirlineConfigBO">
		SELECT dtl.SEQ_NO AS seqNo,
  dtl.CODE_TYPE   AS code,
  'false'         AS inputField,
  (SELECT CODE_DESC
  FROM MAST_CODE_DTL
  WHERE GROUP_CODE='38'
  AND CODE_TYPE   ='MAST_AIRLN_CONFIG'
  AND CODE        =#selectedType#
  AND ROWNUM      =1
  ) AS selectedTypeDescription,
  dtl.light_ind AS lightInd,
  dtl.auto_pman_ind AS autoPmanInd,
 TO_CHAR(dtl.eff_date_from,'DDMONYY') AS effDateFrom,
  TO_CHAR(dtl.eff_date_to,'DDMONYY') AS effDateTo
FROM MAST_AIRLN_CONFIG_HD hd,
  MAST_AIRLN_CONFIG_DTL dtl
WHERE dtl.carr_code = hd.carr_code
AND dtl.mast_type   = hd.mast_type
AND hd.Carr_Code    = #selectedCarrier#
AND hd.mast_type    = #selectedType#
ORDER BY dtl.Carr_Code
	</select>
	
	<select id="sqlcheclmastairlineconfigrecord"  parameterClass="cargo.cms.admin.bo.MastAirlineConfigBO" resultClass="java.lang.Integer">
	SELECT  count(1)FROM MAST_AIRLN_CONFIG_HD hd
		WHERE hd.Carr_Code = #selectedCarrier#
	   AND hd.mast_type = #selectedType#  
	</select>
	<insert id="sqlinsertMastAirlineConfighd" parameterClass="cargo.cms.admin.bo.MastAirlineConfigBO">
		INSERT INTO MAST_AIRLN_CONFIG_HD (CARR_CODE,MAST_TYPE,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE)
		VALUES (#selectedCarrier#,#selectedType#,#userID#, sysdate, #userID#, sysdate)
	</insert>
	<insert id="sqlinsertMastAirlineConfigdtl" parameterClass="cargo.cms.admin.bo.MastAirlineConfigBO">
		INSERT INTO MAST_AIRLN_CONFIG_DTL (SEQ_NO,CARR_CODE,MAST_TYPE,CODE_TYPE,EFF_DATE_FROM,EFF_DATE_TO,LIGHT_IND,AUTO_PMAN_IND,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE)
		VALUES (MAST_AIRLN_CONFIG_DTL_SEQ_NO.NEXTVAL,#selectedCarrier#, #selectedType#,#code#, #effDateFrom#, #effDateTo#, #lightInd#, #autoPmanInd#, #userID#, sysdate, #userID#, sysdate)
	</insert>

<delete id="sqldeleteMastAirlineConfigdtl" parameterClass="cargo.cms.admin.bo.MastAirlineConfigBO" >
	<![CDATA[
		DELETE FROM MAST_AIRLN_CONFIG_DTL WHERE SEQ_NO = #seqNo#
	]]>
</delete>
<delete id="sqldeleteMastAirlineConfighd" parameterClass="cargo.cms.admin.bo.MastAirlineConfigBO" >
	<![CDATA[
		DELETE FROM MAST_AIRLN_CONFIG_HD WHERE Carr_Code = #selectedCarrier# AND mast_type = #selectedType# 
	]]>
</delete>
	
<select id="sqlcheclmastairlineconfigdtlrecord"  parameterClass="cargo.cms.admin.bo.MastAirlineConfigBO" resultClass="java.lang.Integer">
	SELECT  count(1)FROM MAST_AIRLN_CONFIG_DTL dtl
		WHERE dtl.Carr_Code = #selectedCarrier#
	   AND dtl.mast_type = #selectedType#  
	</select>
<select id="combsplhandlingretrieve"  parameterClass="cargo.cms.admin.bo.SplHandlingCodeBO" resultClass="cargo.cms.admin.bo.SplHandlingCodeBO">
		SELECT  decode(spl_code1, null, '', spl_code1 || decode(spl_code2, null, '', ','))
		|| decode(spl_code2, null, '', spl_code2 || decode(spl_code3, null, '', ','))
		|| decode(spl_code3, null, '', spl_code3 || decode(spl_code4, null, '', ','))
		|| decode(spl_code4, null, '', spl_code4 || decode(spl_code5, null, '', ','))
		|| decode(spl_code5, null, '', spl_code5 || decode(spl_code6, null, '', ','))
		|| decode(spl_code6, null, '', spl_code6 || decode(spl_code7, null, '', ','))
		|| decode(spl_code7, null, '', spl_code7 || decode(spl_code8, null, '', ','))
		  || decode(spl_code8, null, '', spl_code8 || decode(spl_code9, null, '', ','))
		|| decode(spl_code9, null, '', spl_code9) as splHandlingCode, 'false' as inputField1, Cust_No as customerNo, 
		TO_CHAR(s.LM_DATE,'DDMONYY HH24:MI:SS') AS lastModifiedDate, SEQ_NO AS seqNo 
			FROM CUST_AIRL_COMB_SPL_CODE s, CUST_COMPANY c
		<dynamic prepend="WHERE">			
			<isNotEmpty prepend="AND" property="companyName">
				UPPER(c.Code_Desc) = #companyName#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="selectedCarrier">
				UPPER(c.Carr_Code) = #selectedCarrier# 
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="customerNo">
				UPPER(c.Code) = #customerNo#
			</isNotEmpty>
			AND UPPER(s.Cust_No) = c.Code AND s.SPL_Type = #selectedType#  ORDER BY SEQ_NO DESC
		</dynamic>
	</select>
	<!-- Offshore changes by Murugasn on 25 May 06 ends -->
	
	<select id="splhandlingretrieveForvalidate"  parameterClass="cargo.cms.admin.bo.SplHandlingCodeBO" resultClass="cargo.cms.admin.bo.SplHandlingCodeBO">
		SELECT  SPL_CODE as splHandlingCode
			FROM CUST_AIRL_SPL_CODE
		WHERE Cust_No = #customerNo# AND SPL_CODE = #splHandlingCode# AND SPL_Type = #selectedType#
	</select>

	<select id="combsplhandlingretrieveForvalidate"  parameterClass="cargo.cms.admin.bo.SplHandlingCodeBO" resultClass="cargo.cms.admin.bo.SplHandlingCodeBO">
		SELECT  SPL_CODE1 as splHandlingCode
			FROM CUST_AIRL_COMB_SPL_CODE
		WHERE SPL_CODE1 = #splHandlingCode1# AND SPL_CODE2 = #splHandlingCode2# AND SPL_CODE3 = #splHandlingCode3#
    AND SPL_CODE4 = #splHandlingCode4# AND SPL_CODE5 = #splHandlingCode5# AND SPL_CODE6 = #splHandlingCode6# 
    AND SPL_CODE7 = #splHandlingCode7# AND SPL_CODE8 = #splHandlingCode8# AND SPL_CODE9 = #splHandlingCode9#
    AND Cust_No = #customerNo# AND SPL_Type = #selectedType#
	</select>

	<select id="sqlsplhandlingcarriervalidation"  parameterClass="java.lang.String"  resultClass="cargo.cms.afw.bo.MasterBO">
			SELECT CODE AS codeId, CODE_DESC AS codeDesc FROM MAST_CARRIER where UPPER(CODE) = #code#  AND OWNED_CARR = 'Y'	   
	</select>
	
	<select id="sqlsplhandlingcompanyvalidation"  parameterClass="java.lang.String"  resultClass="cargo.cms.afw.bo.MasterBO">
			SELECT CODE AS codeId, CODE_DESC AS codeDesc FROM CUST_COMPANY WHERE Airline_YN = 'Y' AND UPPER(CODE_DESC) = #codeDesc#	
	</select>

	<select id="sqlsplhandlingcompanycodevalidation"  parameterClass="java.lang.String"  resultClass="cargo.cms.afw.bo.MasterBO">
			SELECT CODE AS codeId, CODE_DESC AS codeDesc FROM CUST_COMPANY WHERE Airline_YN = 'Y' AND UPPER(CODE) = #code#	
	</select>

	<select id="sqlsplhandlingcodelist"  parameterClass="java.lang.String"  resultClass="cargo.cms.afw.bo.MasterBO">
			SELECT CODE AS codeId, CODE_DESC AS codeDesc FROM MAST_SPL_HAND_CODE ORDER BY Code 
	</select>

	<!-- Offshore changes by Murugan on 25 May 06 starts new query is added -->
	<select id="sqlsplhandlingtypedesc"  parameterClass="java.lang.String"  resultClass="java.lang.String">
			select CODE_DESC AS codeDesc FROM MAST_CODE_DTL WHERE code=#code#
	</select>
	
	<!-- Getting cust name and carrier together with cust no -->
	<select id="sqlsplhandlingcodevalidateforcompany"  parameterClass="cargo.cms.admin.bo.SplHandlingCodeBO"  resultClass="cargo.cms.admin.bo.SplHandlingCodeBO">
		SELECT code as  customerNo, Code_Desc as companyName, Carr_Code as selectedCarrier
			FROM CUST_COMPANY c 
		<dynamic prepend="WHERE">			
			<isNotEmpty prepend="AND" property="companyName">
				UPPER(c.Code_Desc) = #companyName#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="selectedCarrier">
				UPPER(c.Carr_Code) = #selectedCarrier# 
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="customerNo">
				UPPER(c.Code) = #customerNo#
			</isNotEmpty>			
		</dynamic>			
	</select>
	<!-- Offshore changes by Murugan on 25 May 06 ends -->
	<!-- Onsite Changed on 09 May 2006	by mayank Ends here  -->
	<select id="getCountAllSplCode"  parameterClass="cargo.cms.admin.bo.SplHandlingCodeBO" resultClass="java.lang.Integer">
	SELECT COUNT(1) FROM MAST_NON_COLOAD_SHC WHERE CARR_CODE=#selectedCarrier# AND SCH=#splHandlingCode# AND (UNLDG_PT = NVL(#unldgPt#,UNLDG_PT) OR UNLDG_PT IS NULL) AND NON_COLOAD_SCH = '***'
	</select>
	<select id="getCountNotAllSplCode"  parameterClass="cargo.cms.admin.bo.SplHandlingCodeBO" resultClass="java.lang.Integer">
	SELECT COUNT(1) FROM (SELECT COUNT(1) AS cnt FROM MAST_NON_COLOAD_SHC WHERE CARR_CODE=#selectedCarrier# AND SCH=#splHandlingCode# AND (UNLDG_PT = NVL(#unldgPt#,UNLDG_PT) OR UNLDG_PT IS NULL) AND NON_COLOAD_SCH != '***'
	UNION
	SELECT COUNT(1) as cnt FROM MAST_NON_COLOAD_SHC WHERE CARR_CODE=#selectedCarrier# AND SCH=#splHandlingCode# AND (UNLDG_PT != NVL(#unldgPt#,UNLDG_PT) OR UNLDG_PT IS NULL) AND NON_COLOAD_SCH = '***') WHERE cnt > 0
	</select>
	<select id="getCountAllCode"  parameterClass="cargo.cms.admin.bo.SplHandlingCodeBO" resultClass="java.lang.Integer">
	SELECT COUNT(1) as cnt FROM MAST_NON_COLOAD_SHC WHERE CARR_CODE=#selectedCarrier# AND SCH=#splHandlingCode# AND UNLDG_PT IS NOT NULL AND NON_COLOAD_SCH = '***'
	</select>
	<select id="getCountCombSplCode"  parameterClass="java.lang.String" resultClass="java.lang.Integer">
	SELECT COUNT(1) FROM MAST_SPL_HAND_CODE WHERE CODE=#param#
	</select>
	<insert id="sqlinsertsplcode" parameterClass="cargo.cms.admin.bo.SplHandlingCodeBO">
		INSERT INTO CUST_AIRL_SPL_CODE (CUST_NO,CARR_CODE, SPL_TYPE, SPL_CODE, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE)
		VALUES (#customerNo#, #selectedCarrier#,#selectedType#, #splHandlingCode#, #userId#, sysdate, #userId#, sysdate)
	</insert>

	<insert id="sqlinsertcombsplcode" parameterClass="cargo.cms.admin.bo.SplHandlingCodeBO">
		INSERT INTO CUST_AIRL_COMB_SPL_CODE (SEQ_NO,CUST_NO,CARR_CODE, SPL_TYPE, SPL_CODE1, SPL_CODE2,SPL_CODE3,SPL_CODE4,SPL_CODE5,SPL_CODE6,SPL_CODE7,SPL_CODE8,SPL_CODE9,CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE)
		VALUES (CUST_AIRL_COMB_SPL_CODE_SEQ_NO.NEXTVAL,#customerNo#, #selectedCarrier#,#selectedType#, #splHandlingCode1#, #splHandlingCode2#, #splHandlingCode3#, #splHandlingCode4#, #splHandlingCode5#, #splHandlingCode6#, #splHandlingCode7#, #splHandlingCode8#, #splHandlingCode9#, #userId#, sysdate, #userId#, sysdate)
	</insert>

<delete id="sqlsplhandlingdelete" parameterClass="cargo.cms.admin.bo.SplHandlingCodeBO" >
	<![CDATA[
		DELETE FROM 
				CUST_AIRL_SPL_CODE WHERE 
			CUST_NO = #customerNo# AND 
				SPL_TYPE = #selectedType# AND 
			SPL_CODE = #splHandlingCode# AND TO_CHAR(LM_DATE,'DDMONYY HH24:MI:SS') = #lastModifiedDate#
	]]>
	</delete>
	
	<delete id="sqlcombsplhandlingdelete" parameterClass="cargo.cms.admin.bo.SplHandlingCodeBO" >
	<![CDATA[
		DELETE FROM 
				CUST_AIRL_COMB_SPL_CODE WHERE 
			SEQ_NO = #seqNo#
	]]>
	</delete>
	
	<!-- Special handling code query ends -->
	<!-- Warehouse Profile Starts -->
	<select id="sqlgetWarehouseList" parameterClass="java.lang.String"  resultClass="cargo.cms.admin.bo.WarehouseProfileBO" >
		select a.CODE warehouseDestination,a.CODE_DESC description,a.TML_CODE terminal,a.STAGING_AREA stagingArea,a.BLOCKED blocked,b.CODE location,c.code splCode
	from MAST_WH_LOC a left join MAST_WH_LOC_CODE b on (a.CODE = b.WH_LOC ) left join MAST_WH_SPL_CODE c on (a.CODE = c.WH_LOC )
	order by  a.CODE 
	</select>
	<select id="sqlWarehouseHeader" parameterClass="java.lang.String"  resultClass="cargo.cms.admin.bo.WarehouseProfileBO" >
		select CODE warehouseDestination,TML_CODE terminal,BLOCKED blocked, STAGING_AREA stagingArea 
		from MAST_WH_LOC where CODE = #PARAM#
	</select>
	<select id="sqlWarehouseSplCodes"  parameterClass="java.lang.String"  resultClass="cargo.cms.admin.bo.MasterListBO"  >
		select CODE codeId, CODE_DESC codeDesc from MAST_WH_SPL_CODE
		where WH_LOC = #PARAM#
	</select>
	<select id="sqlWarehouseLocations"  parameterClass="java.lang.String"  resultClass="cargo.cms.admin.bo.MasterListBO"  >
		select CODE codeId, CODE_DESC codeDesc from MAST_WH_LOC_CODE
		where WH_LOC = #PARAM#
	</select>
	<select  id="sqlAdditionalSplhandlingCodes"  parameterClass="java.lang.String"  	resultClass="cargo.cms.admin.bo.MasterListBO"  >
		select CODE codeId, CODE_DESC codeDesc from MAST_SPL_HAND_CODE
		where code not in ( select CODE codeId from MAST_WH_SPL_CODE where WH_LOC = #PARAM#)
	</select>
	<insert id="sqlInsertSpCode" parameterClass="cargo.cms.admin.bo.MasterListBO"  >
		INSERT INTO MAST_WH_SPL_CODE(WH_LOC,CODE,CODE_DESC,TML_CODE,CR_USER_ID,CR_DATE	,LM_USER_ID,LM_DATE)
		values(#warehouse#,#codeId#,#codeDesc#,#terminal#,#userID#,sysdate,#userID#,sysdate)
	</insert>
	<insert id="sqlInsertLocCode" parameterClass="cargo.cms.admin.bo.MasterListBO"  >
		INSERT INTO MAST_WH_LOC_CODE(WH_LOC,CODE,CODE_DESC,TML_CODE,CR_USER_ID,CR_DATE	,LM_USER_ID,LM_DATE)
		values(#warehouse#,#codeId#,#codeDesc#,#terminal#,#userID#,sysdate,#userID#,sysdate)
	</insert>
	<update id="sqlUpdateWarehouseProfileHeader" parameterClass="cargo.cms.admin.bo.WarehouseProfileBO"  >
		update MAST_WH_LOC 
			set STAGING_AREA = #stagingArea#,
			BLOCKED = #blocked#
			   where CODE = #warehouseDestination#
	</update>
	<delete id="sqlDeleteSpCode" parameterClass="cargo.cms.admin.bo.MasterListBO"  >
		DELETE FROM MAST_WH_SPL_CODE where CODE =#codeId#
	</delete>
	<delete id="sqlDeleteLocCode" parameterClass="cargo.cms.admin.bo.MasterListBO"  >
		DELETE FROM MAST_WH_LOC_CODE where CODE = #codeId#
	</delete>
	<!-- Warehouse Profile Ends -->
	
	
<!-- Added by Cliff Maintain Scheduled Collection Time Slots Starts -->
	
<!-- Prabhakar, Service Standard Starts -->	

	<!--To Fetch Service Standard-->
	<select id="fetchSvcStdRepNameForAjax" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	 	SELECT ITM_NAME AS itemName from mast_svc_std where UPPER(ITM_NAME) like 
	 	UPPER(#keySearchStr# ||'%') and ROWNUM &lt;= #maxRecFetch# ORDER BY ITM_NAME
	</select>
	<select id="fetchServiceStandard" parameterClass="cargo.cms.sstandard.bo.ServiceStandardBO" resultClass="cargo.cms.sstandard.bo.ServiceStandardBO">
		SELECT	 
			  ITM_TYPE AS itemType,
			  ITM_NAME AS itemName,
			  ITM_DEFN AS itemDefn,
			  STD_OPR AS stdOpr,
			  STD AS std,
			  TIME_STAMP1 AS timeStamp1,
			  TIME_STAMP2 AS timeStamp2,
			  ODD_STD_OPR AS oddStdOpr, 
			  ODD_STD AS oddStd,
			  N_PER AS nthPercent,
			  FLT_TYPE AS fltType,
			  REP_MODULE AS repModule,
			    (select case when (select count(1) from MAST_SVC_STD a where a.tonn_range_from='10000' and a.tonn_range_to='50000' and a.itm_name=m.itm_name)>0 then 'BTW_10_50'
				       else case when (select count(1) from MAST_SVC_STD a where a.tonn_range_from='0' and a.tonn_range_to='10000' and a.itm_name=m.itm_name)>0 then 'LT_10'
				       else case when (select count(1) from MAST_SVC_STD a where a.tonn_range_from='50000' and a.itm_name=m.itm_name)>0 then 'GT_50'
				       else 'ALL' end end end from dual)
				 AS tonnRangeFrom,
			  TONN_RANGE_TO AS tonnRangeTo,
			  CARR_CODE AS carrCode,
			  ACFT_TYPE AS acftType,
			  OFFLOAD_TYPE AS offloadType,
			  PPK_TYPE AS ppkType,
			  CARGO_TYPE  AS cargoType,
			  c.code_desc repName,
			  m.SUCC_RATIO successRatio 
		FROM	 MAST_SVC_STD m
		join mast_code_dtl c on m.REP_MODULE = c.code and c.code_type = 'REP_MODULE'
			<dynamic prepend="WHERE">
				<isNotEmpty property="itemName">
					UPPER(ITM_NAME)=UPPER(#itemName#)
				</isNotEmpty>					
			</dynamic>		 		         
	</select>
	<!--To Insert Service Standard-->
	<insert id="insertServiceStandard" parameterClass="cargo.cms.sstandard.bo.ServiceStandardBO">
	<![CDATA[
		INSERT INTO MAST_SVC_STD
             ( ITM_NAME,
			   ITM_TYPE,
			   ITM_DEFN,
			   STD_OPR,
			   STD,
			   TIME_STAMP1,
			   TIME_STAMP2,
			   ODD_STD_OPR,
			   ODD_STD,
			   N_PER,
			   FLT_TYPE,
			   REP_MODULE,
			   TONN_RANGE_FROM,
			   TONN_RANGE_TO,
			   CARR_CODE,
			   ACFT_TYPE,
			   OFFLOAD_TYPE,
			   PPK_TYPE,
			   CARGO_TYPE,
			   CR_DATE, 
			   CR_USER_ID, 
			   LM_DATE, 
			   LM_USER_ID ,
			   SUCC_RATIO )
	  VALUES (	#itemName#,
	  			#itemType#,
	  			#itemDefn#,
	  			#stdOpr#,
	  			#std#,
	  			#timeStamp1#,
	  			#timeStamp2#,
	  			#oddStdOpr#,
	  			#oddStd#,
	  			#nthPercent#,
	  			#fltType#,
	  			#repModule#,
	  			#tonnRangeFrom#,
	  			#tonnRangeTo#,
	  			#carrCode#,
	  			#acftType#,
	  			#offloadType#,
	  			#ppkType#,
	  			#cargoType#,
	  			sysdate,
			    #crUserId#,
			    sysdate,
			    #crUserId# ,
			    NVL(#successRatio#,0))		
	]]>
	</insert>
	
	<!--To Update Service Standard-->
	<update id="updateServiceStandard" parameterClass="cargo.cms.sstandard.bo.ServiceStandardBO">	
		UPDATE MAST_SVC_STD
		SET    ITM_TYPE = #itemType#,
			   ITM_DEFN = #itemDefn#,
			   STD_OPR = #stdOpr#,
			   STD = #std#,
			   TIME_STAMP1 = #timeStamp1#,
			   TIME_STAMP2 = #timeStamp2#,
			   ODD_STD_OPR = #oddStdOpr#,
			   ODD_STD = #oddStd#,
			   N_PER = #nthPercent#,
			   FLT_TYPE = #fltType#,
			   REP_MODULE = #repModule#,
			   TONN_RANGE_FROM = #tonnRangeFrom#,
			   TONN_RANGE_TO = #tonnRangeTo#,
			   CARR_CODE = #carrCode#,
			   ACFT_TYPE = #acftType#,
			   OFFLOAD_TYPE = #offloadType#,
			   PPK_TYPE = #ppkType#,
			   CARGO_TYPE = #cargoType#,
			   LM_DATE = sysdate,
			   LM_USER_ID = #crUserId#	,
			   SUCC_RATIO = NVL(#successRatio#,0)		
		WHERE 
		    UPPER(ITM_NAME) = UPPER(#itemName#)
	</update>
	
	<!--To Delete Service Standard-->
	
	<select id="Imp_CountItemName" parameterClass="cargo.cms.sstandard.bo.ServiceStandardBO" resultClass="java.lang.Integer" >
		<![CDATA[
				 SELECT COUNT(1) FROM IMP_FLT_HAND_SVC_STD WHERE  UPPER(ITM_NAME) = UPPER(#itemName#)	
		]]>
	</select>


	<select id="Exp_CountItemName" parameterClass="cargo.cms.sstandard.bo.ServiceStandardBO" resultClass="java.lang.Integer" >
		<![CDATA[
				 SELECT COUNT(1) FROM EXP_FLT_HAND_SER_STD WHERE  UPPER(ITM_NAME) = UPPER(#itemName#)	
		]]>
	</select>
	
	<delete id="deleteServiceStandard" parameterClass="cargo.cms.sstandard.bo.ServiceStandardBO">
	<![CDATA[
		DELETE FROM MAST_SVC_STD
	    WHERE  UPPER(ITM_NAME) = UPPER(#itemName#)		   		
	]]>
	</delete>
	
	<!--To Check Item Name(SErvice Standard) is exist or not-->
	<select id="sqlCountItemName" parameterClass="java.lang.String" resultClass="java.lang.Integer" >
		SELECT COUNT(ITM_NAME) FROM MAST_SVC_STD WHERE UPPER(ITM_NAME)=UPPER(#PARAM#)
	</select>
	
	<!--To Check Time Stamp(SErvice Standard) is exist or not-->
	<select id="sqlCountTimeStamp" parameterClass="java.lang.String" resultClass="java.lang.Integer" >
		SELECT COUNT(CODE) FROM MAST_FLT_TIME_STAMP WHERE UPPER(CODE)=UPPER(#PARAM#)
	</select>
	
	<!--To Check Carrier Code(SErvice Standard) is exist or not-->
	<select id="sqlCountCarrCode" parameterClass="java.lang.String" resultClass="java.lang.Integer" >
		SELECT COUNT(CODE) FROM MAST_CARRIER WHERE OWNED_CARR = 'Y' AND UPPER(CODE)=UPPER(#PARAM#)
	</select>	
	
	<select id="sqlCountTruckCarrCode" parameterClass="java.lang.String" resultClass="java.lang.Integer" >
		SELECT COUNT(CODE) FROM MAST_TRUCK_CARRIER WHERE OWNED_CARR = 'Y' AND UPPER(CODE)=UPPER(#PARAM#)
	</select>	
	
	<!--To make Report Name dropdown. It should be done in framework -->
	<select id="fetchReportNameList"  parameterClass="java.lang.Object" resultClass="cargo.cms.sstandard.bo.SStandardReportsBO">
		SELECT ITM_NAME AS itemName FROM MAST_SVC_STD		
	</select>	
	
	<!--To Fetch Management Report Data-->
	<select id="fetchManagementReportDetail" parameterClass="cargo.cms.sstandard.bo.SStandardReportsBO" resultClass="cargo.cms.sstandard.bo.SStandardReportsBO">
		 <![CDATA[
		SELECT	 
			  A.ITM_TYPE AS itemType,
			  A.ITM_NAME AS itemName,
			  A.ITM_DEFN AS itemDefn,
			  decode(a.STD_OPR, 'LE', '<=', 'LT', '<', 'GE', '>=', 'GT', '>', 'EQ', '=') || ' '|| NVL(MT.CODE_DESC, A.TIME_STAMP2) || ' + ' ||A.STD as std,			  
			  A.STD AS std,
			  A.TIME_STAMP1 AS timeStamp1,
			  A.TIME_STAMP2 AS timeStamp2
		FROM  MAST_SVC_STD A
		LEFT JOIN MAST_FLT_TIME_STAMP MT ON MT.CODE = A.TIME_STAMP2
		WHERE
			  UPPER(ITM_NAME)=UPPER(#itemName#)	
			  ]]>
	</select>
	
	<!--To Fetch Peak Day / Hour Report Data-->
	<select id="fetchPeakHourReportDetail" parameterClass="cargo.cms.sstandard.bo.SStandardReportsBO" resultClass="cargo.cms.sstandard.bo.SStandardReportsBO">
		SELECT	 
			  ITM_TYPE AS itemType,
			  ITM_NAME AS itemName,
			  ITM_DEFN AS itemDefn,
			  STD_OPR AS stdOpr,
			  STD AS std,
			  TIME_STAMP1 AS timeStamp1,
			  TIME_STAMP2 AS timeStamp2			  
		FROM  MAST_SVC_STD
		WHERE
			  UPPER(ITM_NAME)=UPPER(#itemName#)				         
	</select>	
	
	<!--To Fetch  Raw Data Report Data-->
	<select id="fetchrawDataReportDetail" parameterClass="cargo.cms.sstandard.bo.SStandardReportsBO" resultClass="cargo.cms.sstandard.bo.SStandardReportsBO">
		SELECT	 
			  ITM_TYPE AS itemType,
			  ITM_NAME AS itemName,
			  ITM_DEFN AS itemDefn,
			  STD_OPR AS stdOpr,
			  STD AS std,
			  TIME_STAMP1 AS timeStamp1,
			  TIME_STAMP2 AS timeStamp2			  
		FROM  MAST_SVC_STD
			<dynamic prepend="WHERE">			
				<isNotEmpty prepend="AND" property="itemName">
					UPPER(ITM_NAME)=UPPER(#itemName#)	
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="fltType">
					UPPER(FLT_TYPE)=UPPER(#fltType#)	
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="repModule">
					UPPER(REP_MODULE)=UPPER(#repModule#)	
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="tonnRangeFrom">
					UPPER(TONN_RANGE_FROM)=UPPER(#tonnRangeFrom#)	
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="tonnRangeTo">
					UPPER(TONN_RANGE_TO)=UPPER(#tonnRangeTo#)	
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="carrCode">
					UPPER(CARR_CODE)=UPPER(#carrCode#)	
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="acftType">
					UPPER(ACFT_TYPE)=UPPER(#acftType#)	
				</isNotEmpty>	
				<isNotEmpty prepend="AND" property="offloadType">
					UPPER(OFFLOAD_TYPE)=UPPER(#offloadType#)	
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="ppkType">
					UPPER(PPK_TYPE)=UPPER(#ppkType#)	
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="cargoType">
					UPPER(CARGO_TYPE)=UPPER(#cargoType#)	
				</isNotEmpty>			
		    </dynamic>		 
	</select>		
	
<!-- Service Standard ENDs -->
<!-- Performance Maintenance Starts -->	
	<!--To Fetch Performance Maintenance-->
	<select id="fetchPerformance" parameterClass="cargo.cms.sstandard.bo.PerformanceBO" resultClass="cargo.cms.sstandard.bo.PerformanceBO">
		SELECT
			  PERF_NAME AS performName, 
			  PERF_DESC AS performDesc, 
			  INFO_REQD AS infoRequired, 
			  REP_MODULE AS repModule,TO_CHAR(LM_DATE , 'DDMMYY HH24:MI:SS') AS lastModifiedDate	
		FROM  MAST_PERFORMANCE_STD
			<dynamic prepend="WHERE">
				<isNotEmpty property="performName">
					UPPER(PERF_NAME)=UPPER(#performName#)
				</isNotEmpty>					
			</dynamic>		
			 Order BY PERF_NAME 		         
	</select>
	
	
	<select id="fetchPerformancelist" parameterClass="cargo.cms.sstandard.bo.PerformanceBO" resultClass="cargo.cms.sstandard.bo.PerformanceBO">
		  SELECT
			  MPS.PERF_NAME AS performName, 
			  MPS.PERF_DESC AS performDesc, 
			  MPS.INFO_REQD AS infoRequired, 
		  	 (SELECT CODE_DESC FROM MAST_CODE_DTL WHERE CODE = MPS.REP_MODULE  AND CODE_TYPE = 'REP_MODULE') AS repModule,
        	  TO_CHAR(MPS.LM_DATE , 'DDMMYY HH24:MI:SS') AS lastModifiedDate1	
			  FROM  MAST_PERFORMANCE_STD MPS
			<dynamic prepend="WHERE">
				<isNotEmpty property="performName">
					UPPER(MPS.PERF_NAME)=UPPER(#performName#)
				</isNotEmpty>					
			</dynamic>	
			Order BY MPS.PERF_NAME	 		         
	</select>
	
	<!--To Insert Performance Maintenance-->
	<insert id="insertPerformance" parameterClass="cargo.cms.sstandard.bo.PerformanceBO">
	<![CDATA[
		INSERT INTO MAST_PERFORMANCE_STD
             ( PERF_NAME, 
			   PERF_DESC, 
			   INFO_REQD, 
			   REP_MODULE,
			   CR_DATE, 
			   CR_USER_ID, 
			   LM_DATE, 
			   LM_USER_ID )
	  VALUES ( #performName#,
	  		   #performDesc#,
	  		   #infoRequired#,
	  		   #repModule#,
			   sysdate,
			   #crUserId#,
			   sysdate,
			   #crUserId# )		
	]]>
	</insert>
	
	<!--To Update Performance Maintenance-->
	<update id="updatePerformance" parameterClass="cargo.cms.sstandard.bo.PerformanceBO">	
		UPDATE MAST_PERFORMANCE_STD
		SET   PERF_NAME = #performName#, 
			  PERF_DESC = #performDesc#, 
			  INFO_REQD = #infoRequired#, 
			  REP_MODULE = #repModule#,
			  LM_DATE = sysdate,
			  LM_USER_ID = #crUserId#
		WHERE 
		    UPPER(PERF_NAME) = UPPER(#performName#) and to_char(LM_DATE, 'DDMMYY HH24:MI:SS') = #lastModifiedDate#
	</update>
	
	<!--To Delete Performance Maintenance-->
	<delete id="deletePerformance" parameterClass="cargo.cms.sstandard.bo.PerformanceBO">
	<![CDATA[
		DELETE FROM MAST_PERFORMANCE_STD
	    WHERE  UPPER(PERF_NAME) = UPPER(#performName#) and to_char(LM_DATE, 'DDMMYY HH24:MI:SS') = #lastModifiedDate1#		   		
	]]>
	</delete>
	<!--To Check Perform Name(Performance) is exist or not-->
	<select id="sqlCountPerformanceName" parameterClass="java.lang.String" resultClass="java.lang.Integer" >
		SELECT COUNT(PERF_NAME) FROM MAST_PERFORMANCE_STD WHERE UPPER(PERF_NAME)=UPPER(#PARAM#)
	</select>
	
	<!--To Fetch Performance For Enquiry Details-->
	<!-- 
	<select id="fetchPerformanceForEnquiry" parameterClass="cargo.cms.sstandard.bo.PerformanceBO" resultClass="cargo.cms.sstandard.bo.PerformanceBO">
	<![CDATA[
		SELECT 
			S.FLT_NO AS fltNo, 
			S.FLT_KEY AS fltKey,
			TO_CHAR( S.FLT_DATE, 'DDMONYY') AS fltDate, 
			T.WT AS tonnageHndl, 
			F.CGO_ACFT_TYPE AS acftType,
			'' AS offloadType, 
			A.PERF_NAME AS performName, 
			A.RMK AS performDesc
		FROM 
				 IMP_FLT_HAND_PERFORMANCE A
			JOIN IMP_FLT_HAND_SUMMARY S ON S.TR_NO = A.TR_NO
			JOIN FLT_OPR F ON F.FLT_TYPE = 'A' AND F.FLT_KEY = A.FLT_KEY AND F.SCH_DATE = A.FLT_DATE 
			LEFT JOIN (SELECT FLT_KEY, FLT_DATE, SUM(RECD_WT) WT FROM IMP_CAR_SHP GROUP BY FLT_KEY, FLT_DATE) T ON T.FLT_KEY = F.FLT_KEY AND T.FLT_DATE = F.SCH_DATE 
		WHERE 
			A.RMK IS NOT NULL
			AND nvl(T.WT, 0) >= NVL(#tonnRangeFrom#, nvl(T.WT, 0)) AND nvl(T.WT, 0) <= NVL(#tonnRangeTo#, nvl(T.WT, 0)) 
			AND F.CGO_ACFT_TYPE = NVL(#acftType#, F.CGO_ACFT_TYPE)
			AND F.CARR_CODE = NVL(#carrCode#, F.CARR_CODE) 
			AND to_char(S.FLT_DATE, 'DDMONYY') between TO_DATE(#repFrom#,'DDMONYY') and TO_DATE(#repTo#,'DDMONYY')
			AND F.FLT_KEY = NVL(#fltKey#, F.FLT_KEY)
			AND A.REP_MODULE = NVL(#repModule#, A.REP_MODULE)
			AND A.PERF_NAME = NVL(#performName#, A.PERF_NAME)
				]]>
		  
 	</select>
	 -->
	<select id="fetchPerformanceForEnquiry" parameterClass="cargo.cms.sstandard.bo.PerformanceBO" resultClass="cargo.cms.sstandard.bo.PerformanceBO">

	select a.* from (
	<isEqual property="selImpFltType" compareValue="A">
	<![CDATA[
		SELECT 
			S.FLT_DATE,
			S.FLT_NO AS fltNo, 
			S.FLT_KEY AS fltKey,
			TO_CHAR( S.FLT_DATE, 'DDMONYY') AS fltDate, 
			T.WT AS tonnageHndl, 
			F.CGO_ACFT_TYPE AS acftType,
			F.FLt_TYPE as fltType,
			F.CARR_CODE as carrCode,
			F.TR_NO as trNo,
			F.ORIG as orig,
			'' AS offloadType, 
			A.PERF_NAME AS performName, 
			A.RMK AS performDesc,
			#offloadType# offloadTypeParam
		FROM 
			IMP_FLT_HAND_PERFORMANCE A
			JOIN IMP_FLT_HAND_SUMMARY S ON S.TR_NO = A.TR_NO
			JOIN FLT_OPR F ON F.FLT_TYPE = NVL(#selectedtype#, F.FLT_TYPE) AND F.FLT_KEY = A.FLT_KEY AND F.SCH_DATE = A.FLT_DATE 
			LEFT JOIN (SELECT FLT_KEY, FLT_DATE, SUM(RECD_WT) WT FROM IMP_CAR_SHP GROUP BY FLT_KEY, FLT_DATE) T ON T.FLT_KEY = F.FLT_KEY AND T.FLT_DATE = F.SCH_DATE 
		WHERE 
			A.RMK IS NOT NULL
			AND nvl(T.WT, 0) >= NVL(#tonnRangeFrom#, nvl(T.WT, 0)) AND nvl(T.WT, 0) <= NVL(#tonnRangeTo#, nvl(T.WT, 0)) 
			AND F.CGO_ACFT_TYPE = NVL(#acftType#, F.CGO_ACFT_TYPE)
			AND F.CARR_CODE = NVL(#carrCode#, F.CARR_CODE) 
			AND to_char(S.FLT_DATE, 'DDMONYY') between TO_DATE(#repFrom#,'DDMONYY') and TO_DATE(#repTo#,'DDMONYY')
			AND F.FLT_KEY = NVL(#fltKey#, F.FLT_KEY)
			AND A.REP_MODULE = NVL(#repModule#, A.REP_MODULE)
			AND A.PERF_NAME = NVL(#performName#, A.PERF_NAME)
				]]>
		   <isNotEmpty property="fltModuleLen">
			   <isEqual property="fltModuleLen" compareValue="ACCEPT">
			   AND F.FLT_MODULE1=NVL(#fltModule#, F.FLT_MODULE1)
			   </isEqual>
			   <isEqual property="fltModuleLen" compareValue="NOTACCEPT">
			   AND F.FLT_MODULE2=NVL(#fltModule#, F.FLT_MODULE2)
			   </isEqual>
		   </isNotEmpty>
		    <isNotEmpty property="selectedtype">
			   <isEqual property="selectedtype" compareValue="A">
			   AND F.ORIG = NVL( #fromLoc#, F.ORIG)  
			   </isEqual>
			   <isEqual property="selectedtype" compareValue="D">
			   AND F.DEST = NVL( #fromLoc#, F.DEST)  
			   </isEqual>
		   </isNotEmpty>
		   <isNotEmpty property="ofldType">
			 	<isEqual property="ofldType" compareValue="WOFFLOAD">		
			 		and (select count(1) from EXP_OFFLOAD_ULD 
										where FLT_KEY = S.FLT_KEY and FLT_DATE = S.FLT_DATE and CONFIRMED_YN = 'Y') > 0
			 	</isEqual>
			 	<isEqual property="ofldType" compareValue="WTOFFLOAD">		
			 		and (select count(1) from EXP_OFFLOAD_ULD 
										where FLT_KEY = S.FLT_KEY and FLT_DATE = S.FLT_DATE and CONFIRMED_YN = 'Y') = 0
			 	</isEqual>
			 </isNotEmpty>
		</isEqual>
		   <isEmpty property="selFltType">
		   	union all
		   </isEmpty>
		    <isEqual property="selDepFltType" compareValue="D">
		  		<![CDATA[ 
				SELECT 
					S.FLT_DATE,
					REPLACE(S.FLT_KEY, PKG_COMMON.get_flt_carr(S.FLT_KEY)) AS fltNo, 
					S.FLT_KEY AS fltKey,
					TO_CHAR( S.FLT_DATE, 'DDMONYY') AS fltDate, 
					T.WT AS tonnageHndl, 
					F.CGO_ACFT_TYPE AS acftType,
					F.FLt_TYPE as fltType,
					F.CARR_CODE as carrCode,
					F.TR_NO as trNo,
					F.ORIG as orig,
					case when (select count(1) from EXP_OFFLOAD_ULD 
										where FLT_KEY = S.FLT_KEY and FLT_DATE = S.FLT_DATE and CONFIRMED_YN = 'Y') > 0 then 'Y' 
										else '' end as  offloadType, 
					A.PERF_NAME AS performName, 
					A.REMARKS AS performDesc,
					#offloadType# offloadTypeParam
					
				FROM 
				]]>
					(
					<isEmpty property="repModule">
					    select * from exp_flt_hand_man_perf
	             		union
	              		select * from exp_flt_hand_ramp_perf
	              		union
	              		select * from EXP_FLT_HAND_WH_PERF
				 	</isEmpty>
					<isNotEmpty property="repModule">
					   	<isEqual property="repModule" compareValue="ED">
					    	select * from exp_flt_hand_man_perf
					    </isEqual>
					    <isEqual property="repModule" compareValue="ER">
	              			select * from exp_flt_hand_ramp_perf
	              		</isEqual>
					    <isEqual property="repModule" compareValue="EW">
	              			select * from EXP_FLT_HAND_WH_PERF
	              		</isEqual>
				 	</isNotEmpty> ) A 
				    JOIN (select  FLT_KEY, flt_DATE from EXP_FLT_HAND_SUMMARY where RPT_TYPE = NVL(#repModule#, RPT_TYPE) group by  FLT_KEY, flt_DATE )  S ON S.FLT_KEY = A.FLT_KEY AND S.flt_DATE = A.FLT_DATE
				    JOIN FLT_OPR F ON F.FLT_TYPE = NVL(null, F.FLT_TYPE) AND F.FLT_KEY = A.FLT_KEY AND F.SCH_DATE = A.FLT_DATE 
					LEFT JOIN (SELECT FLT_KEY, FLT_DATE, SUM(pman_WT) WT FROM EXP_PMANIFEST_AWB GROUP BY FLT_KEY, FLT_DATE) T ON T.FLT_KEY = F.FLT_KEY AND T.FLT_DATE = F.SCH_DATE 
				WHERE 
					A.REMARKS IS NOT NULL
					<![CDATA[
						AND nvl(T.WT, 0) >= NVL(#tonnRangeFrom#, nvl(T.WT, 0)) AND nvl(T.WT, 0) <= NVL(#tonnRangeTo#, nvl(T.WT, 0)) 
					]]>
					AND F.CGO_ACFT_TYPE = NVL(#acftType#, F.CGO_ACFT_TYPE)
					AND F.CARR_CODE = NVL(#carrCode#, F.CARR_CODE) 
					AND to_char(S.FLT_DATE, 'DDMONYY') between TO_DATE(#repFrom#,'DDMONYY') and TO_DATE(#repTo#,'DDMONYY')
					AND F.FLT_KEY = NVL(#fltKey#, F.FLT_KEY)
					AND A.PERF_NAME = NVL(#performName#, A.PERF_NAME)
				
				 <isNotEmpty property="fltModuleLen">
					   <isEqual property="fltModuleLen" compareValue="ACCEPT">
					   AND F.FLT_MODULE1=NVL(#fltModule#, F.FLT_MODULE1)
					   </isEqual>
					   <isEqual property="fltModuleLen" compareValue="NOTACCEPT">
					   AND F.FLT_MODULE2=NVL(#fltModule#, F.FLT_MODULE2)
					   </isEqual>
				 </isNotEmpty>
  				 <isNotEmpty property="selectedtype">
					   <isEqual property="selectedtype" compareValue="A">
			           AND F.ORIG = NVL( #fromLoc#, F.ORIG)  
			           </isEqual>
					   <isEqual property="selectedtype" compareValue="D">
			           AND F.DEST = NVL( #fromLoc#, F.DEST)  
			           </isEqual>			  
					 </isNotEmpty>	
			 <isNotEmpty property="ofldType">
			 	<isEqual property="ofldType" compareValue="WOFFLOAD">		
			 		and (select count(1) from EXP_OFFLOAD_ULD 
										where FLT_KEY = S.FLT_KEY and FLT_DATE = S.FLT_DATE and CONFIRMED_YN = 'Y') > 0
			 	</isEqual>
			 	<isEqual property="ofldType" compareValue="WTOFFLOAD">		
			 		and (select count(1) from EXP_OFFLOAD_ULD 
										where FLT_KEY = S.FLT_KEY and FLT_DATE = S.FLT_DATE and CONFIRMED_YN = 'Y') = 0
			 	</isEqual>
			 </isNotEmpty>	  
			</isEqual>
			)a 
			 order by a.FLT_DATE desc
 	</select>
	
	<!--To Fetch Performance For Enquiry Summery Details-->
	
	<!-- 
	<select id="fetchPerformanceForEnquirySummery" parameterClass="cargo.cms.sstandard.bo.PerformanceBO" resultClass="cargo.cms.sstandard.bo.PerformanceBO">
	<![CDATA[
		SELECT 
			count(1) AS noOfFltSrch, 
			SUM(DECODE(NoOfRmk, 0, 0, 1)) AS noOfFltWthRmks, 
			SUM(NoOfRmk) AS noOfRemarks
		FROM 
			(SELECT S.FLT_KEY, S.FLT_DATE, SUM(DECODE(A.RMK, NULL, 1, 0)) NoOfNullRmk, SUM(DECODE(A.RMK, NULL, 0, 1)) NoOfRmk FROM IMP_FLT_HAND_SUMMARY S 
			JOIN FLT_OPR F ON F.FLT_TYPE = 'A' AND F.FLT_KEY = S.FLT_KEY AND F.SCH_DATE = S.FLT_DATE 
			LEFT JOIN (SELECT FLT_KEY, FLT_DATE, SUM(RECD_WT) WT 
					   FROM IMP_CAR_SHP GROUP BY FLT_KEY, FLT_DATE) T ON T.FLT_KEY = F.FLT_KEY AND T.FLT_DATE = F.SCH_DATE
			LEFT JOIN IMP_FLT_HAND_PERFORMANCE A ON S.TR_NO = A.TR_NO
		WHERE 
				nvl(T.WT, 0) >= NVL(#tonnRangeFrom#, nvl(T.WT, 0)) AND nvl(T.WT, 0) <= NVL(#tonnRangeTo#, nvl(T.WT, 0)) 
			AND F.CGO_ACFT_TYPE = NVL(#acftType#, F.CGO_ACFT_TYPE)
			AND F.CARR_CODE = NVL(#carrCode#, F.CARR_CODE) 
			AND to_char(S.FLT_DATE, 'DDMONYY') between TO_DATE(#repFrom#,'DDMONYY') and TO_DATE(#repTo#,'DDMONYY')
			AND F.FLT_KEY = NVL(#fltKey#, F.FLT_KEY)
			AND A.REP_MODULE = NVL(#repModule#, A.REP_MODULE)
			AND A.PERF_NAME = NVL(#performName#, A.PERF_NAME)
		 GROUP BY S.FLT_KEY, S.FLT_DATE
			)
			]]>
		  
		  </select>
	 -->
	<select id="fetchPerformanceForEnquirySummery" parameterClass="cargo.cms.sstandard.bo.PerformanceBO" resultClass="cargo.cms.sstandard.bo.PerformanceBO">
	SELECT 
			count(1) AS noOfFltSrch, 
			SUM(DECODE(S.NoOfRmk, 0, 0, 1)) AS noOfFltWthRmks, 
			SUM(S.NoOfRmk) AS noOfRemarks
		FROM   (   
 <isEqual property="selImpFltType" compareValue="A">
	<![CDATA[
		SELECT S.FLT_KEY, S.FLT_DATE, SUM(DECODE(A.RMK, NULL, 1, 0)) NoOfNullRmk, SUM(DECODE(A.RMK , NULL, 0, 1)) NoOfRmk
		FROM IMP_FLT_HAND_PERFORMANCE A
			JOIN IMP_FLT_HAND_SUMMARY S ON S.TR_NO = A.TR_NO
			JOIN FLT_OPR F ON F.FLT_TYPE = NVL(#selectedtype#, F.FLT_TYPE) AND F.FLT_KEY = A.FLT_KEY AND F.SCH_DATE = A.FLT_DATE 
			LEFT JOIN (SELECT FLT_KEY, FLT_DATE, SUM(RECD_WT) WT FROM IMP_CAR_SHP GROUP BY FLT_KEY, FLT_DATE) T ON T.FLT_KEY = F.FLT_KEY AND T.FLT_DATE = F.SCH_DATE 
		WHERE 
			A.RMK IS NOT NULL
			AND nvl(T.WT, 0) >= NVL(#tonnRangeFrom#, nvl(T.WT, 0)) AND nvl(T.WT, 0) <= NVL(#tonnRangeTo#, nvl(T.WT, 0)) 
			AND F.CGO_ACFT_TYPE = NVL(#acftType#, F.CGO_ACFT_TYPE)
			AND F.CARR_CODE = NVL(#carrCode#, F.CARR_CODE) 
			AND to_char(S.FLT_DATE, 'DDMONYY') between TO_DATE(#repFrom#,'DDMONYY') and TO_DATE(#repTo#,'DDMONYY')
			AND F.FLT_KEY = NVL(#fltKey#, F.FLT_KEY)
			AND A.REP_MODULE = NVL(#repModule#, A.REP_MODULE)
			AND A.PERF_NAME = NVL(#performName#, A.PERF_NAME)
				]]>
		   <isNotEmpty property="fltModuleLen">
			   <isEqual property="fltModuleLen" compareValue="ACCEPT">
			   AND F.FLT_MODULE1=NVL(#fltModule#, F.FLT_MODULE1)
			   </isEqual>
			   <isEqual property="fltModuleLen" compareValue="NOTACCEPT">
			   AND F.FLT_MODULE2=NVL(#fltModule#, F.FLT_MODULE2)
			   </isEqual>
		   </isNotEmpty>
		    <isNotEmpty property="selectedtype">
			   <isEqual property="selectedtype" compareValue="A">
			   AND F.ORIG = NVL( #fromLoc#, F.ORIG)  
			   </isEqual>
			   <isEqual property="selectedtype" compareValue="D">
			   AND F.DEST = NVL( #fromLoc#, F.DEST)  
			   </isEqual>
		   </isNotEmpty>
		   <isNotEmpty property="ofldType">
			 	<isEqual property="ofldType" compareValue="WOFFLOAD">		
			 		and (select count(1) from EXP_OFFLOAD_ULD 
										where FLT_KEY = S.FLT_KEY and FLT_DATE = S.FLT_DATE and CONFIRMED_YN = 'Y') > 0
			 	</isEqual>
			 	<isEqual property="ofldType" compareValue="WTOFFLOAD">		
			 		and (select count(1) from EXP_OFFLOAD_ULD 
										where FLT_KEY = S.FLT_KEY and FLT_DATE = S.FLT_DATE and CONFIRMED_YN = 'Y') = 0
			 	</isEqual>
			 </isNotEmpty>
		   GROUP BY S.FLT_KEY, S.FLT_DATE
		</isEqual>
		   <isEmpty property="selFltType">
		   	union all
		   </isEmpty>
		    <isEqual property="selDepFltType" compareValue="D">
		  		<![CDATA[ 
				SELECT S.FLT_KEY, S.FLT_DATE, SUM(DECODE(A.REMARKS, NULL, 1, 0)) NoOfNullRmk, SUM(DECODE(A.REMARKS , NULL, 0, 1)) NoOfRmk				
				FROM ]]>
					(
					<isEmpty property="repModule">
					    select * from exp_flt_hand_man_perf
	             		union
	              		select * from exp_flt_hand_ramp_perf
	              		union
	              		select * from EXP_FLT_HAND_WH_PERF
				 	</isEmpty>
					<isNotEmpty property="repModule">
					   	<isEqual property="repModule" compareValue="ED">
					    	select * from exp_flt_hand_man_perf
					    </isEqual>
					    <isEqual property="repModule" compareValue="ER">
	              			select * from exp_flt_hand_ramp_perf
	              		</isEqual>
					    <isEqual property="repModule" compareValue="EW">
	              			select * from EXP_FLT_HAND_WH_PERF
	              		</isEqual>
				 	</isNotEmpty> ) A  
				    JOIN (select  FLT_KEY, flt_DATE from EXP_FLT_HAND_SUMMARY where RPT_TYPE = NVL(#repModule#, RPT_TYPE) group by  FLT_KEY, flt_DATE )  S ON S.FLT_KEY = A.FLT_KEY AND S.flt_DATE = A.FLT_DATE
				    JOIN FLT_OPR F ON F.FLT_TYPE = NVL(null, F.FLT_TYPE) AND F.FLT_KEY = A.FLT_KEY AND F.SCH_DATE = A.FLT_DATE 
					LEFT JOIN (SELECT FLT_KEY, FLT_DATE, SUM(pman_WT) WT FROM EXP_PMANIFEST_AWB GROUP BY FLT_KEY, FLT_DATE) T ON T.FLT_KEY = F.FLT_KEY AND T.FLT_DATE = F.SCH_DATE 
				WHERE 
					A.REMARKS IS NOT NULL
					<![CDATA[ 
					AND nvl(T.WT, 0) >= NVL(#tonnRangeFrom#, nvl(T.WT, 0)) AND nvl(T.WT, 0) <= NVL(#tonnRangeTo#, nvl(T.WT, 0)) 
					]]>
					AND F.CGO_ACFT_TYPE = NVL(#acftType#, F.CGO_ACFT_TYPE)
					AND F.CARR_CODE = NVL(#carrCode#, F.CARR_CODE) 
					AND to_char(S.FLT_DATE, 'DDMONYY') between TO_DATE(#repFrom#,'DDMONYY') and TO_DATE(#repTo#,'DDMONYY')
					AND F.FLT_KEY = NVL(#fltKey#, F.FLT_KEY)
					AND A.PERF_NAME = NVL(#performName#, A.PERF_NAME)
				
				 <isNotEmpty property="fltModuleLen">
					   <isEqual property="fltModuleLen" compareValue="ACCEPT">
					   AND F.FLT_MODULE1=NVL(#fltModule#, F.FLT_MODULE1)
					   </isEqual>
					   <isEqual property="fltModuleLen" compareValue="NOTACCEPT">
					   AND F.FLT_MODULE2=NVL(#fltModule#, F.FLT_MODULE2)
					   </isEqual>
				 </isNotEmpty>
				 <isNotEmpty property="ofldType">
				 	<isEqual property="ofldType" compareValue="WOFFLOAD">		
				 		and (select count(1) from EXP_OFFLOAD_ULD 
											where FLT_KEY = S.FLT_KEY and FLT_DATE = S.FLT_DATE and CONFIRMED_YN = 'Y') > 0
				 	</isEqual>
				 	<isEqual property="ofldType" compareValue="WTOFFLOAD">		
				 		and (select count(1) from EXP_OFFLOAD_ULD 
											where FLT_KEY = S.FLT_KEY and FLT_DATE = S.FLT_DATE and CONFIRMED_YN = 'Y') = 0
				 	</isEqual>
				 </isNotEmpty>
  				 <isNotEmpty property="selectedtype">
					   <isEqual property="selectedtype" compareValue="A">
			           AND F.ORIG = NVL( #fromLoc#, F.ORIG)  
			           </isEqual>
					   <isEqual property="selectedtype" compareValue="D">
			           AND F.DEST = NVL( #fromLoc#, F.DEST)  
			           </isEqual>			  
					 </isNotEmpty>		
					 GROUP BY S.FLT_KEY, S.FLT_DATE  
			</isEqual>
			)S  
			
	</select>
	
	<!--To make Performance Name dropdown. It should be done in framework -->
	<select id="fetchPerformNameList"  parameterClass="java.lang.Object" resultClass="cargo.cms.sstandard.bo.PerformanceBO">
		SELECT PERF_NAME AS performName FROM MAST_PERFORMANCE_STD		
	</select>
	
	<select id="fetchCarrierStatus"  parameterClass="cargo.cms.sstandard.bo.PerformanceBO" resultClass="java.lang.String">
		 SELECT COUNT(*) FROM MAST_CARRIER WHERE CODE = #carrCode#	
	</select>
	
	
	<select id="fetchFlightStatus"  parameterClass="cargo.cms.sstandard.bo.PerformanceBO" resultClass="java.lang.String">
		 SELECT COUNT(*) FROM FLT_OPR WHERE FLT_KEY = #fltKey#	
	</select>
	
	<select id="fetchFlightModuleLength"  parameterClass="cargo.cms.sstandard.bo.PerformanceBO" resultClass="java.lang.String">
	<![CDATA[
		SELECT COUNT(*) 
		FROM
		 (SELECT 
			S.FLT_NO AS fltNo, 
			S.FLT_KEY AS fltKey,
			TO_CHAR( S.FLT_DATE, 'DDMONYY') AS fltDate, 
			T.WT AS tonnageHndl, 
			F.CGO_ACFT_TYPE AS acftType, 
			'' AS offloadType, 
			A.PERF_NAME AS performName, 
			A.RMK AS performDesc
		FROM 
				 IMP_FLT_HAND_PERFORMANCE A
			JOIN IMP_FLT_HAND_SUMMARY S ON S.TR_NO = A.TR_NO
			JOIN FLT_OPR F ON F.FLT_TYPE = 'A' AND F.FLT_KEY = A.FLT_KEY AND F.SCH_DATE = A.FLT_DATE 
			LEFT JOIN (SELECT FLT_KEY, FLT_DATE, SUM(RECD_WT) WT FROM IMP_CAR_SHP GROUP BY FLT_KEY, FLT_DATE) T ON T.FLT_KEY = F.FLT_KEY AND T.FLT_DATE = F.SCH_DATE 
		WHERE 
			A.RMK IS NOT NULL
			AND nvl(T.WT, 0) >= NVL(#tonnRangeFrom#, nvl(T.WT, 0)) AND nvl(T.WT, 0) <= NVL(#tonnRangeTo#, nvl(T.WT, 0)) 
			AND F.CGO_ACFT_TYPE = NVL(#acftType#, F.CGO_ACFT_TYPE)
			AND F.CARR_CODE = NVL(#carrCode#, F.CARR_CODE) 
			AND to_char(S.FLT_DATE, 'DDMONYY') between TO_DATE(#repFrom#,'DDMONYY') and TO_DATE(#repTo#,'DDMONYY')
			AND F.FLT_KEY = NVL(#fltKey#, F.FLT_KEY)
			AND A.REP_MODULE = NVL(#repModule#, A.REP_MODULE)
			AND A.PERF_NAME = NVL(#performName#, A.PERF_NAME)
			AND F.FLT_MODULE1 = NVL(#fltModule#, F.FLT_MODULE1)
			)
			]]>	
	</select>
	
	
<!-- Performance Maintenance ENDs -->
<!-- AWB Inventory Starts -->	

	<!--To Fetch AWB Inventory-->
		<!--To Fetch AWB Inventory-->
	
	<select id="fetchAWBInventoryDetails" parameterClass="cargo.cms.awb.bo.AWBInvBO" resultClass="cargo.cms.awb.bo.AWBInvBO">
		 SELECT DISTINCT TO_CHAR(B.AWB_DATE,'DDMONYY') AS awbDate
                 FROM
          AWB A,
     AWB_INVENTORY B
     LEFT JOIN FLT_OPR C ON B.FLT_KEY = C.FLT_KEY AND B.FLT_DATE = C.SCH_DATE AND B.FLT_TYPE = decode(C.FLT_TYPE, 'A', 'I', 'E')
     LEFT JOIN ULD_INVENTORY D ON  B.ULD_KEY  = D.ULD_KEY
     LEFT JOIN HAWB_INVENTORY E ON B.SEQ_NO = E.SEQ_NO
WHERE
     A.AWB_NO = B.AWB_NO AND
     A.AWB_DATE = B.AWB_DATE AND
     A.AWB_NO = UPPER(#awbNo#) 
	 ORDER BY awbDate DESC    
    </select>
	
	<select id="fetchAWBInventoryHawbDateDetails" parameterClass="cargo.cms.awb.bo.AWBInvBO" resultClass="cargo.cms.awb.bo.AWBInvBO">
		 SELECT
		 DISTINCT a.AWB_DATE AS awbDate1,
		         TO_CHAR( a.AWB_DATE,'DDMONYY') AS awbDate, 
 			     a.AWB_NO AS awbNo
		  	 FROM 
			     AWB a,AWB_INVENTORY B,HAWB_INVENTORY ah  
		    WHERE 
              B.AWB_NO = A.AWB_NO AND
              B.AWB_DATE = A.AWB_DATE AND
              B.SEQ_NO = ah.SEQ_NO(+) AND
			  UPPER(a.AWB_NO) = UPPER(#awbNo#)
			ORDER BY awbDate DESC	
	</select>
	<select id="fetchAWBInventoryDetailsForImp" parameterClass="cargo.cms.awb.bo.AWBInvBO" resultClass="cargo.cms.awb.bo.AWBInvBO">
	select DISTINCT
	AWB_NO AS awbNo,
	SUBSTR( AWB_NO,1,3 ) AS awbNoPFX,
	SUBSTR( AWB_NO,4 ) as awbNoSFX,
	TO_CHAR( AWB_DATE, 'DDMONYY') AS awbDate,
	AWB_TYPE AS awbType
	FROM
	AWB
	WHERE
	UPPER(AWB_NO) = UPPER(#awbNo#) AND
	AWB_DATE = to_date(#awbDate#,'DDMONYY')
	AND AWB_TYPE='I'
	ORDER BY AWB_DATE DESC		
	</select>
	
	
	
	<select id="fetchAWBInventoryDetailsForExp" parameterClass="cargo.cms.awb.bo.AWBInvBO" resultClass="cargo.cms.awb.bo.AWBInvBO">
		SELECT DISTINCT 
			AWB_NO AS awbNo,
		  	SUBSTR( AWB_NO,1,3 ) AS awbNoPFX,
		  	SUBSTR( AWB_NO,4 ) as awbNoSFX, 			
 			TO_CHAR( AWB_DATE, 'DDMONYY') AS awbDate, 
 			AWB_TYPE AS awbType 			
		FROM 
			AWB   
		WHERE 
				UPPER(AWB_NO) = UPPER(#awbNo#) AND
				AWB_DATE   = to_date(#awbDate#,'DDMONYY')
				AND  AWB_TYPE='E'				
			ORDER BY AWB_DATE DESC			
	</select>
	
	<select id="fetchAWBInventoryDetailsForTrp" parameterClass="cargo.cms.awb.bo.AWBInvBO" resultClass="cargo.cms.awb.bo.AWBInvBO">
		SELECT DISTINCT
			AWB_NO AS awbNo,
		  	SUBSTR( AWB_NO,1,3 ) AS awbNoPFX,
		  	SUBSTR( AWB_NO,4 ) as awbNoSFX, 			
 			TO_CHAR( AWB_DATE, 'DDMONYY') AS awbDate, 
 			AWB_TYPE AS awbType 			
		FROM 
			AWB   
		WHERE 
				UPPER(AWB_NO) = UPPER(#awbNo#)
				AND AWB_DATE   = to_date(#awbDate#,'DDMONYY')
				AND  AWB_TYPE='T'				
			ORDER BY AWB_DATE DESC			
	</select>
	
	<select id="fetchAWBInv" parameterClass="cargo.cms.awb.bo.AWBInvBO" resultClass="cargo.cms.awb.bo.AWBInvBO">
	   SELECT b.seq_no seqNo, B.AWB_NO,
                           SUBSTR( B.AWB_NO,1,3 ) AS awbNoPFX,
  			               SUBSTR( B.AWB_NO,4 ) as awbNoSFX,
                           A.CATALOG AS catalog,
                           (SELECT 
							     (CASE WHEN decode(a.catalog,'EG','C','ES','C','IG','C','TG','C','TA','C','EU','M','TM','M','EO','Q','IO','Q','C') = 'C' THEN 
							     (CASE WHEN (SELECT COUNT(1) FROM CUST_AIRL_SPL_CODE SPLCODE WHERE SPLCODE.SPL_TYPE='SPL_COURIER_SHC' AND SPLCODE.CARR_CODE = A.CARR_CODE AND (SPLCODE.SPL_CODE = a.SPL_CODE1 OR SPLCODE.SPL_CODE = a.SPL_CODE2 OR SPLCODE.SPL_CODE = a.SPL_CODE3 OR SPLCODE.SPL_CODE = a.SPL_CODE4 OR SPLCODE.SPL_CODE = a.SPL_CODE5 OR SPLCODE.SPL_CODE = a.SPL_CODE6 OR SPLCODE.SPL_CODE = a.SPL_CODE7 OR SPLCODE.SPL_CODE = a.SPL_CODE8 OR SPLCODE.SPL_CODE = a.SPL_CODE9)) > 0
							     THEN 'Q' ELSE decode(a.catalog,'EG','C','ES','C','IG','C','TG','C','TA','C','EU','M','TM','M','EO','Q','IO','Q','C') END)
							      ELSE decode(a.catalog,'EG','C','ES','C','IG','C','TG','C','TA','C','EU','M','TM','M','EO','Q','IO','Q','C') END) as cargoType	  
							FROM AWB  A WHERE  A.AWB_NO=#awbNo# AND A.AWB_DATE=#awbDate#) AS cargoType,
                          (select awb_type from awb where awb_no = #awbNo# and awb_date = #awbDate# and rownum=1) AS awbType,
			               B.CARR_CODE AS carrier,
                           A.AGENT_NAME AS agentName,
                     	   B.LOC_CODE AS location,
                     	   (select curr_location from mast_wh_loc where code=B.LOC_CODE and MOVABLE='Y') as CURRLOCATION,
			    		   pkg_common.get_flt_ata(B.FLT_KEY, B.FLT_DATE,DECODE(A.AWB_TYPE,'E','D','A')) AS ata,
			    		      PKG_COMMON.GET_FLT_ETA(B.FLT_KEY,B.FLT_DATE,DECODE(A.AWB_TYPE,'E','D','A'),'DD') AS etd,			
			               B.LOCN_PCS AS pc,
			   			    TO_CHAR(B.LOCN_WT,'9999990D99') AS wt,
               trim(DECODE(B.ULD_KEY,null,'',B.ULD_KEY||DECODE(D.CONTR_CODE,null,'','/')||D.CONTR_CODE)) as uld,
               B.LSP_NO as lspNo,
               B.FLT_TYPE AS fltType,
			   B.FLT_KEY AS fltNo,
			   TO_CHAR( B.FLT_DATE, 'DDMONYY') AS fltDate,
			    TO_CHAR( B.STRG_DATE, 'DDMONYY HH24:MI') AS strgDate,
			   B.SRF_NO AS srfNo,
			   B.TRM_NO AS trmno,
			   B.CDIF_NO AS cdifNo,
			   SUBSTR(B.CDIF_NO,1,6) AS cdifNoPrefix, 
			   SUBSTR(B.CDIF_NO,7) AS cdifNoSuffix,
			   C.TR_NO AS trNo
   FROM
     AWB A,
     AWB_INVENTORY B
     LEFT JOIN FLT_OPR C ON B.FLT_KEY = C.FLT_KEY AND B.FLT_DATE = C.SCH_DATE AND B.FLT_TYPE = decode(C.FLT_TYPE, 'A', 'I', 'E')
     LEFT JOIN ULD_INVENTORY D ON  B.ULD_KEY  = D.ULD_KEY
WHERE
     A.AWB_NO = B.AWB_NO AND
     A.AWB_DATE = B.AWB_DATE AND
     A.AWB_NO = UPPER(#awbNo#) and
	 A.AWB_DATE   = to_date(#awbDate#,'DDMONYY') 
     <isNotEmpty property="hawb">
     AND B.SEQ_NO in (SELECT SEQ_NO FROM HAWB_INVENTORY WHERE HAWB_NO = #hawb#) 
     </isNotEmpty> 
     order by seq_no
</select>

	<!--To Fetch AWB Inventory By Movement-->
	<select id="fetchAWBInvByMovement" parameterClass="cargo.cms.awb.bo.AWBInvBO" resultClass="cargo.cms.awb.bo.AWBInvBO">
		SELECT   DISTINCT A.AWB_NO AS awbNo,
						  SUBSTR( A.AWB_NO,1,3 ) AS awbNoPFX,
						  SUBSTR( A.AWB_NO,4 ) as awbNoSFX, 
						  B.CATALOG AS catalog, 
						  A.CARR_CODE AS carrier, 
						  B.AGENT_NAME AS agentName,
						  TO_CHAR( A.MOV_DATE, 'DDMONYY HH24:MI' ) AS mvmtDate, 
						  D.EVENT_DESC AS event, 
						  A.MOV_FROM AS origLocn, 
						  A.MOV_TO AS destLocn, 
						  A.LOC_PCS AS pc, 
						  A.LOC_WT AS wt, 
						  DECODE(A.ULD_KEY,null,DECODE(A.LSP_NO,null,'',A.LSP_NO),A.ULD_KEY||DECODE(C.CONTR_CODE,null,'','/')||C.CONTR_CODE) as uld,
						  A.CR_USER_ID AS userId,  
						  E.TYPE_DESC AS transID									  
				  			  
		FROM  			 AWB_MOV A
			  LEFT JOIN  AWB B ON UPPER(A.AWB_NO) = UPPER(B.AWB_NO)
			  LEFT JOIN  REGISTER_TR_NO_EVENTS D ON UPPER(A.EVENT_ID) = UPPER(D.EVENT_ID)
			  LEFT JOIN  REGISTER_TR_NO E ON UPPER(A.TR_TYPE) = UPPER(E.TR_TYPE)
			  LEFT JOIN  ULD_INVENTORY C ON  NVL(UPPER(A.ULD_KEY),'N') = NVL(UPPER(C.ULD_KEY),'N') 		  
			  
	    WHERE   	     UPPER(A.AWB_NO) = UPPER(NVL(#awbNo#,A.AWB_NO)) 	 
					 AND A.MOV_DATE BETWEEN TO_DATE(#mvmtDateTimeFrom#,'DDMONYY HH24:MI') AND TO_DATE(#mvmtDateTimeto#,'DDMONYY HH24:MI')
					 AND UPPER(A.TR_STATUS) = UPPER(NVL(#status#,A.TR_STATUS)) 
		ORDER BY mvmtDate desc 			               
	</select>
	
	<!--To Fetch AWB Inventory By Location / Airline By Curr Ind-->
	<select id="fetchAWBInvByLocationByCurrInd" parameterClass="cargo.cms.awb.bo.AWBInvBO" resultClass="cargo.cms.awb.bo.AWBInvBO">
		SELECT DISTINCT A.AWB_NO AS awbNo,
						  SUBSTR( A.AWB_NO,1,3 ) AS awbNoPFX,
						  SUBSTR( A.AWB_NO,4 ) as awbNoSFX, 
						  B.CATALOG AS catalog, 
						  A.CARR_CODE AS carrier, 
						  A.LOC_CODE AS location, 
						  A.LOCN_PCS AS pc, 
						  A.LOCN_WT AS wt,
						  DECODE(A.ULD_KEY,null,DECODE(A.LSP_NO,null,'',A.LSP_NO),A.ULD_KEY||DECODE(C.CONTR_CODE,null,'','/')||C.CONTR_CODE) as uld,
						  A.FLT_TYPE AS fltType,
						  A.FLT_KEY AS fltNo,  
						  TO_CHAR( A.FLT_DATE, 'DDMONYY') AS fltDate, 
						  TO_CHAR( A.STRG_DATE, 'DDMONYY HH24:MI') AS strgDate						  
     		FROM  			 AWB_INVENTORY A
			  LEFT JOIN  AWB B ON A.AWB_NO = B.AWB_NO  
			  LEFT JOIN  ULD_INVENTORY C ON  NVL(A.ULD_KEY,'N') = NVL(C.ULD_KEY,'N') 
			  LEFT JOIN  EXP_CHKOUT_DTL D ON NVL(A.ULD_KEY,'N') = NVL(D.ULD_KEY,'N') 
			<dynamic prepend="WHERE">
	    	     <isNotEmpty prepend="AND" property="carrier">
					UPPER(A.CARR_CODE) = NVL(UPPER(#carrier#),A.CARR_CODE)
				 </isNotEmpty>		
				 <isNotEmpty prepend="AND" property="location">
					UPPER(A.LOC_CODE)=UPPER(#location#)
				 </isNotEmpty>	
				  <isNotEmpty prepend="AND" property="catalog">
					A.CATALOG = #catalog#
				 </isNotEmpty>
				 AND D.CHKOUT_DATE is NULL
			</dynamic>	
		<dynamic prepend="ORDER BY ">
       			 <isNotEmpty property="sortOrder.sortField">
             		$sortOrder.sortField$
        		</isNotEmpty>
 		</dynamic>			
	</select>
		<select id="fetchAWBInvByLocationByCurrIndCOUNT" parameterClass="cargo.cms.awb.bo.AWBInvBO" resultClass="java.lang.Integer">
	<!-- 
		SELECT   COUNT(*) as totalRowCount						  
				  			  
		FROM  			 AWB_INVENTORY A
			  LEFT JOIN  AWB B ON A.AWB_NO = B.AWB_NO  
			  LEFT JOIN  ULD_INVENTORY C ON  NVL(A.ULD_KEY,'N') = NVL(C.ULD_KEY,'N') 
			  LEFT JOIN  EXP_CHKOUT_DTL D ON NVL(A.ULD_KEY,'N') = NVL(D.ULD_KEY,'N') 
			  <dynamic prepend="WHERE">
	    	     <isNotEmpty prepend="AND" property="carrier">
					UPPER(A.CARR_CODE) = NVL(UPPER(#carrier#),A.CARR_CODE)
				 </isNotEmpty>		
				 <isNotEmpty prepend="AND" property="whDest">
					UPPER(A.WH_DEST)=UPPER(#whDest#)
				 </isNotEmpty>
				 
				 <isNotEmpty prepend="AND" property="location">
					UPPER(A.LOC_CODE)=UPPER(#location#)
				 </isNotEmpty>	
				  <isNotEmpty prepend="AND" property="catalog">
					A.CATALOG = #catalog#
				 </isNotEmpty>
				 AND D.CHKOUT_DATE is NULL
			</dynamic>	 -->
			
			
			SELECT COUNT(*) AS totalRowCount FROM (SELECT DISTINCT A.AWB_NO AS awbNo,
						  SUBSTR( A.AWB_NO,1,3 ) AS awbNoPFX,
						  SUBSTR( A.AWB_NO,4 ) as awbNoSFX, 
						  B.CATALOG AS catalog, 
						  A.CARR_CODE AS carrier, 						
						  A.LOC_CODE AS location, 
						  A.LOCN_PCS AS pc, 
						  A.LOCN_WT AS wt,
						  DECODE(A.ULD_KEY,null,DECODE(A.LSP_NO,null,'',A.LSP_NO),A.ULD_KEY||DECODE(C.CONTR_CODE,null,'','/')||C.CONTR_CODE) as uld,
						  A.FLT_TYPE AS fltType,
						  A.FLT_KEY AS fltNo,  
						  TO_CHAR( A.FLT_DATE, 'DDMONYY') AS fltDate, 
						  TO_CHAR( A.STRG_DATE, 'DDMONYY HH24:MI') AS strgDate						  
				  			  
		FROM  			 AWB_INVENTORY A
			  LEFT JOIN  AWB B ON A.AWB_NO = B.AWB_NO  
			  LEFT JOIN  ULD_INVENTORY C ON  NVL(A.ULD_KEY,'N') = NVL(C.ULD_KEY,'N') 
			  LEFT JOIN  EXP_CHKOUT_DTL D ON NVL(A.ULD_KEY,'N') = NVL(D.ULD_KEY,'N') 
			<dynamic prepend="WHERE">
	    	     <isNotEmpty prepend="AND" property="carrier">
					UPPER(A.CARR_CODE) = NVL(UPPER(#carrier#),A.CARR_CODE)
				 </isNotEmpty>		
				 <isNotEmpty prepend="AND" property="whDest">
					UPPER(A.WH_DEST)=UPPER(#whDest#)
				 </isNotEmpty>
				 
				 <isNotEmpty prepend="AND" property="location">
					UPPER(A.LOC_CODE)=UPPER(#location#)
				 </isNotEmpty>	
				  <isNotEmpty prepend="AND" property="catalog">
					A.CATALOG = #catalog#
				 </isNotEmpty>
				 AND D.CHKOUT_DATE is NULL
			</dynamic>	
		<dynamic prepend="ORDER BY ">
       			 <isNotEmpty property="sortOrder.sortField">
             		$sortOrder.sortField$
        		</isNotEmpty>
 		</dynamic>			)
	</select>
	
	<!--To Fetch AWB Inventory By Location / Airline From Mov-->
	<select id="fetchAWBInvByLocation" parameterClass="cargo.cms.awb.bo.AWBInvBO" resultClass="cargo.cms.awb.bo.AWBInvBO">
	<!-- 
		SELECT   DISTINCT A.AWB_NO AS awbNo,
						  SUBSTR( A.AWB_NO,1,3 ) AS awbNoPFX,
						  SUBSTR( A.AWB_NO,4 ) as awbNoSFX, 
						  B.CATALOG AS catalog, 
						  A.CARR_CODE AS carrier, 
						  A.WH_DEST AS whDest,
						  A.LOC_CODE AS location, 
						  A.LOC_PCS AS pc, 
						  A.LOC_WT AS wt,
						  DECODE(A.ULD_KEY,null,DECODE(A.LSP_NO,null,'',A.LSP_NO),A.ULD_KEY||DECODE(C.CONTR_CODE,null,'','/')||C.CONTR_CODE) as uld,
						  A.FLT_TYPE AS fltType,
						  A.FLT_KEY AS fltNo,  
						  TO_CHAR( A.FLT_DATE, 'DDMONYY') AS fltDate, 
						  TO_CHAR( A.STRG_DATE, 'DDMONYY HH24:MI') AS strgDate						  
		FROM  			 AWB_MOV A
			  LEFT JOIN  AWB B ON A.AWB_NO = B.AWB_NO  AND A.AWB_TYPE = B.AWB_TYPE
			  LEFT JOIN  ULD_INVENTORY C ON  NVL(A.ULD_KEY,'N') = NVL(C.ULD_KEY,'N') 
			  LEFT JOIN  EXP_CHKOUT_DTL D ON NVL(A.ULD_KEY,'N') = NVL(D.ULD_KEY,'N') 
			<dynamic prepend="WHERE">
					<isNotEmpty prepend="AND" property="carrier">
						UPPER(A.CARR_CODE) = NVL(UPPER(#carrier#),A.CARR_CODE)
					 </isNotEmpty>						
					 <isNotEmpty prepend="AND" property="whDest">
						UPPER(A.WH_DEST)=UPPER(#whDest#)
					 </isNotEmpty>
					 
					 <isNotEmpty prepend="AND" property="catalog">
						UPPER(B.CATALOG)=UPPER(#catalog#)
					 </isNotEmpty>	
					 
					 <isNotEmpty prepend="AND" property="location">
						UPPER(A.LOC_CODE)=UPPER(#location#)
					 </isNotEmpty>
					 <isNotEmpty prepend="AND" property="catalog">
						A.CATALOG = #catalog#
					 </isNotEmpty>
					 AND D.CHKOUT_DATE is NULL		
		   </dynamic>
		   		<dynamic prepend="ORDER BY ">
       			 <isNotEmpty property="sortOrder.sortField">
             		$sortOrder.sortField$
        		</isNotEmpty>
 		</dynamic>			 -->
 		
 		SELECT A.AWB_NO AS awbNo,
 		      TO_CHAR(A.AWB_DATE, 'DDMONYY') AS awbDate,
                            LOC.WH_GROUP AS grpType,
 			 			    SUBSTR( A.AWB_NO,1,3 ) AS awbNoPFX,
						    SUBSTR( A.AWB_NO,4 ) as awbNoSFX, 
						    DECODE(CAR.CATALOG,'',ECAR.CATALOG,CAR.CATALOG) AS catalog,
						    CARGOTYPE.cargoType as cargoType,
						    A.CARR_CODE AS carrier, 
						    A.LOC_CODE AS location, 
						    A.LOCN_PCS AS pc, 
						    A.LOCN_WT AS wt,
						    DECODE(A.ULD_KEY,null,'',A.ULD_KEY||DECODE(C.CONTR_CODE,null,'','/')||C.CONTR_CODE) as uld,
                            DECODE(A.LSP_NO,null,'',A.LSP_NO||DECODE(C.CONTR_CODE,null,'','/')||C.CONTR_CODE) as lspNo,
                            A.FLT_TYPE AS fltType,
						    A.FLT_KEY AS fltNo, 
						    A.SEQ_NO AS seqNo, 
						    TO_CHAR( A.FLT_DATE, 'DDMONYY') AS fltDate, 
						    TO_CHAR( A.STRG_DATE, 'DDMONYY HH24:MI') AS strgDate,
						    LOC.CURR_LOCATION as curLocation,
						    B.DEST AS awbDest						  
		        FROM
                AWB_INVENTORY A
                LEFT JOIN AWB B ON B.AWB_NO = A.AWB_NO AND B.AWB_DATE = A.AWB_DATE
                LEFT JOIN ULD_INVENTORY C ON  NVL(A.ULD_KEY,'N') = NVL(C.ULD_KEY,'N') 
                LEFT JOIN EXP_CHKOUT_DTL D ON NVL(A.ULD_KEY,'N') = NVL(D.ULD_KEY,'N') 
			    LEFT JOIN MAST_WH_LOC LOC ON LOC.CODE = A.LOC_CODE
                LEFT JOIN MAST_WH_GROUP GRP ON GRP.WH_GROUP = LOC.WH_GROUP
                LEFT JOIN MAST_WH_AREA AR ON AR.WH_AREA = GRP.WH_AREA
                LEFT JOIN IMP_CAR_AWB CAR ON A.AWB_NO = CAR.AWB_NO AND A.AWB_DATE = CAR.AWB_DATE
                LEFT JOIN EXP_CAR ECAR ON  ECAR.AWB_NO = A.AWB_NO  AND ECAR.AWB_DATE = A.AWB_DATE 
                LEFT JOIN IMP_CAR_shp shp ON  shp.AWB_NO = A.AWB_NO  AND shp.AWB_DATE = A.AWB_DATE
                LEFT JOIN (
                SELECT 
				      (CASE WHEN decode(a.catalog,'EG','C','ES','C','IG','C','TG','C','TA','C','EU','M','TM','M','EO','Q','IO','Q','C') = 'C' THEN 
				       (CASE WHEN (SELECT COUNT(1) FROM CUST_AIRL_SPL_CODE SPLCODE WHERE SPLCODE.SPL_TYPE='SPL_COURIER_SHC' AND SPLCODE.CARR_CODE = A.CARR_CODE AND (SPLCODE.SPL_CODE = a.SPL_CODE1 OR SPLCODE.SPL_CODE = a.SPL_CODE2 OR SPLCODE.SPL_CODE = a.SPL_CODE3 OR SPLCODE.SPL_CODE = a.SPL_CODE4 OR SPLCODE.SPL_CODE = a.SPL_CODE5 OR SPLCODE.SPL_CODE = a.SPL_CODE6 OR SPLCODE.SPL_CODE = a.SPL_CODE7 OR SPLCODE.SPL_CODE = a.SPL_CODE8 OR SPLCODE.SPL_CODE = a.SPL_CODE9)) > 0
				       THEN 'Q' ELSE decode(a.catalog,'EG','C','ES','C','IG','C','TG','C','TA','C','EU','M','TM','M','EO','Q','IO','Q','C') END)
				       ELSE decode(a.catalog,'EG','C','ES','C','IG','C','TG','C','TA','C','EU','M','TM','M','EO','Q','IO','Q','C') END) as cargoType,
				       A.AWB_NO, A.AWB_DATE
				 FROM AWB  A
                ) CARGOTYPE ON CARGOTYPE.AWB_NO=A.AWB_NO AND CARGOTYPE.AWB_DATE=A.AWB_DATE
           		<dynamic prepend="WHERE">
           		<isNotEmpty prepend="AND" property="carrier">
						UPPER(A.CARR_CODE) = NVL(UPPER(#carrier#),A.CARR_CODE)
				</isNotEmpty>
				<isEmpty prepend="AND" property="carrier">
                              <isNotEmpty property="loginCarrier">
                                    (a.CARR_CODE = #loginCarrier#
                                    OR a.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE= #loginCarrier#))
                             </isNotEmpty>
                </isEmpty>  
				<isNotEmpty prepend="AND" property="location">
						UPPER(A.LOC_CODE) = NVL(UPPER(#location#),A.LOC_CODE)
				</isNotEmpty>	
				<isNotEmpty prepend="AND" property="catalog">
						(UPPER(CAR.CATALOG) = NVL(UPPER(#catalog#),CAR.CATALOG) or UPPER(ECAR.CATALOG) = NVL(UPPER(#catalog#),ECAR.CATALOG))
				</isNotEmpty>	
				<isNotEmpty prepend="AND" property="area">
						UPPER(AR.WH_AREA) = NVL(UPPER(#area#),AR.WH_AREA)
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="group">
						UPPER(GRP.WH_GROUP) = NVL(UPPER(#group#),GRP.WH_GROUP)
				</isNotEmpty>
				</dynamic>
			
                <isEqual property="currInd" compareValue="Y">
                  AND GRP.WH_TYPE != 'MS' and shp.mini_shp ='Y'
                </isEqual>
                group by 
                (  			A.AWB_NO,
                			A.AWB_DATE,
                            LOC.WH_GROUP,
 			 			    CAR.CATALOG , 
 			 			    ECAR.CATALOG,
						    A.CARR_CODE , 
						    A.LOC_CODE , 
						    A.LOCN_PCS , 
						    A.LOCN_WT,
						    A.ULD_KEY,
						    C.CONTR_CODE,
                            A.LSP_NO,
                            A.SEQ_NO,
                            A.FLT_TYPE ,
						    A.FLT_KEY,  
						    A.FLT_DATE, 
						    A.STRG_DATE,
						    LOC.CURR_LOCATION,
                			B.DEST,
                			CARGOTYPE.cargoType
                )
             
		   	<dynamic prepend="ORDER BY ">
       			 <isNotEmpty property="sortOrder.sortField">
             		$sortOrder.sortField$
        		</isNotEmpty>
 			</dynamic>	
          </select>
		<select id="fetchAWBInvByLocationCOUNT" parameterClass="cargo.cms.awb.bo.AWBInvBO" resultClass="java.lang.Integer">
		<!--  
		SELECT   COUNT(*) as totalRowCount						  
				  			  
		FROM  			 AWB_MOV A
			  LEFT JOIN  AWB B ON A.AWB_NO = B.AWB_NO  AND A.AWB_TYPE = B.AWB_TYPE
			  LEFT JOIN  ULD_INVENTORY C ON  NVL(A.ULD_KEY,'N') = NVL(C.ULD_KEY,'N') 
			  LEFT JOIN  EXP_CHKOUT_DTL D ON NVL(A.ULD_KEY,'N') = NVL(D.ULD_KEY,'N') 
			  
			  	<dynamic prepend="WHERE">
					<isNotEmpty prepend="AND" property="carrier">
						UPPER(A.CARR_CODE) = NVL(UPPER(#carrier#),A.CARR_CODE)
					 </isNotEmpty>						
					 <isNotEmpty prepend="AND" property="whDest">
						UPPER(A.WH_DEST)=UPPER(#whDest#)
					 </isNotEmpty>
					 
					 <isNotEmpty prepend="AND" property="catalog">
						UPPER(B.CATALOG)=UPPER(#catalog#)
					 </isNotEmpty>	
					 
					 <isNotEmpty prepend="AND" property="location">
						UPPER(A.LOC_CODE)=UPPER(#location#)
					 </isNotEmpty>
					 <isNotEmpty prepend="AND" property="catalog">
						A.CATALOG = #catalog#
					 </isNotEmpty>
					 AND D.CHKOUT_DATE is NULL	
		   </dynamic>	      -->
		   
		        SELECT COUNT(*) as totalRowCount						  
		        FROM
                (SELECT A.AWB_NO AS awbNo,
 		      TO_CHAR(A.AWB_DATE, 'DDMONYY') AS awbDate,
                            LOC.WH_GROUP AS grpType,
 			 			    SUBSTR( A.AWB_NO,1,3 ) AS awbNoPFX,
						    SUBSTR( A.AWB_NO,4 ) as awbNoSFX, 
						    DECODE(CAR.CATALOG,'',ECAR.CATALOG,CAR.CATALOG) AS catalog,
						    A.CARR_CODE AS carrier, 
						    A.LOC_CODE AS location, 
						    A.LOCN_PCS AS pc, 
						    A.LOCN_WT AS wt,
						    DECODE(A.ULD_KEY,null,'',A.ULD_KEY||DECODE(C.CONTR_CODE,null,'','/')||C.CONTR_CODE) as uld,
                            DECODE(A.LSP_NO,null,'',A.LSP_NO||DECODE(C.CONTR_CODE,null,'','/')||C.CONTR_CODE) as lspNo,
                            A.FLT_TYPE AS fltType,
						    A.FLT_KEY AS fltNo, 
						    A.SEQ_NO AS seqNo, 
						    TO_CHAR( A.FLT_DATE, 'DDMONYY') AS fltDate, 
						    TO_CHAR( A.STRG_DATE, 'DDMONYY HH24:MI') AS strgDate,
						    LOC.CURR_LOCATION as curLocation,
                			B.DEST AS awbDest						  
		        FROM
                AWB_INVENTORY A
                INNER JOIN AWB B ON B.AWB_NO = A.AWB_NO AND B.AWB_DATE = A.AWB_DATE
                LEFT JOIN ULD_INVENTORY C ON  NVL(A.ULD_KEY,'N') = NVL(C.ULD_KEY,'N') 
                LEFT JOIN EXP_CHKOUT_DTL D ON NVL(A.ULD_KEY,'N') = NVL(D.ULD_KEY,'N') 
			    LEFT JOIN MAST_WH_LOC LOC ON LOC.CODE = A.LOC_CODE
                LEFT JOIN MAST_WH_GROUP GRP ON GRP.WH_GROUP = LOC.WH_GROUP
                LEFT JOIN MAST_WH_AREA AR ON AR.WH_AREA = GRP.WH_AREA
                LEFT JOIN IMP_CAR_AWB CAR ON A.AWB_NO = CAR.AWB_NO AND A.AWB_DATE = CAR.AWB_DATE
                LEFT JOIN EXP_CAR ECAR ON  ECAR.AWB_NO = A.AWB_NO  AND ECAR.AWB_DATE = A.AWB_DATE 
                 LEFT JOIN IMP_CAR_shp shp ON  shp.AWB_NO = A.AWB_NO  AND shp.AWB_DATE = A.AWB_DATE
           		<dynamic prepend="WHERE">
           		<isNotEmpty prepend="AND" property="carrier">
						UPPER(A.CARR_CODE) = NVL(UPPER(#carrier#),A.CARR_CODE)
				</isNotEmpty>
				<isEmpty prepend="AND" property="carrier">
                              <isNotEmpty property="loginCarrier">
                                    (a.CARR_CODE = #loginCarrier#
                                    OR a.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE= #loginCarrier#))
                             </isNotEmpty>
                </isEmpty>
				<isNotEmpty prepend="AND" property="location">
						UPPER(A.LOC_CODE) = NVL(UPPER(#location#),A.LOC_CODE)
				</isNotEmpty>	
				<isNotEmpty prepend="AND" property="catalog">
						(UPPER(CAR.CATALOG) = NVL(UPPER(#catalog#),CAR.CATALOG) or UPPER(ECAR.CATALOG) = NVL(UPPER(#catalog#),ECAR.CATALOG))
				</isNotEmpty>	
				<isNotEmpty prepend="AND" property="area">
						UPPER(AR.WH_AREA) = NVL(UPPER(#area#),AR.WH_AREA)
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="group">
						UPPER(GRP.WH_GROUP) = NVL(UPPER(#group#),GRP.WH_GROUP)
				</isNotEmpty>
				</dynamic>
      
                <isEqual property="currInd" compareValue="Y">
                  AND GRP.WH_TYPE != 'MS' and shp.mini_shp ='Y'
                </isEqual>
                
                group by 
                (  			A.AWB_NO,
                			A.AWB_DATE,
                            LOC.WH_GROUP,
 			 			    CAR.CATALOG , 
 			 			    ECAR.CATALOG,
						    A.CARR_CODE , 
						    A.LOC_CODE , 
						    A.LOCN_PCS , 
						    A.LOCN_WT,
						    A.ULD_KEY,
						    C.CONTR_CODE,
                            A.LSP_NO,
                            A.SEQ_NO,
                            A.FLT_TYPE ,
						    A.FLT_KEY,  
						    A.FLT_DATE, 
						    A.STRG_DATE,
						    LOC.CURR_LOCATION,
                			B.DEST	
                ))
        	</select>
	
	<select id="fetchAWBInvByLocationHawbDetails" parameterClass="cargo.cms.awb.bo.AWBInvBO" resultClass="cargo.cms.awb.bo.AWBInvBO">
		SELECT H.HAWB_NO AS hawb,
               H.STRG_PCS AS hawbPcs,
               H.STRG_WT AS hawbWt
          FROM
              HAWB_INVENTORY H,
              AWB_INVENTORY A
          WHERE
               h.seq_no = A.seq_no AND
               UPPER(AWB_NO) = UPPER(#awbNo#) AND
               AWB_DATE   = to_date(#awbDate#,'DDMONYY')
	</select>
	
	<select id="sqlGetAwbEnqByLocHouseDtl" parameterClass="cargo.cms.awb.bo.AWBInvBO" resultClass="cargo.cms.awb.bo.AWBInvBO">
		SELECT H.HAWB_NO AS hawb,
               sum(H.STRG_PCS) AS hawbPcs,
               sum(H.STRG_WT) AS hawbWt
             FROM
              HAWB_INVENTORY H,
              AWB_INVENTORY A
          WHERE
               h.seq_no = A.seq_no AND
               UPPER(A.SEQ_NO) = UPPER(#seqNo#)
                group by H.HAWB_NO order by hawb
               	</select>
	
	
	<!--To Check Carrier(Item Code Suffix) is exist or not-->	
	<select id="checkCarrierCode" parameterClass="java.lang.String" resultClass="java.lang.Integer" >
		SELECT COUNT(CODE) FROM MAST_CARRIER WHERE OWNED_CARR = 'Y' AND UPPER(CODE) = UPPER(#PARAM#)
	</select>	
	
	<select id="checkAreaInMasters" parameterClass="java.lang.String" resultClass="java.lang.Integer" >
		SELECT COUNT(*) FROM MAST_WH_AREA WHERE UPPER(WH_AREA) = UPPER(#PARAM#)
	</select>	
	
	<select id="checkGroupInMasters" parameterClass="java.lang.String" resultClass="java.lang.Integer" >
		SELECT COUNT(*) FROM MAST_WH_GROUP WHERE UPPER(WH_GROUP) = UPPER(#PARAM#)
	</select>	
	
	<select id="checkLocationInMasters" parameterClass="java.lang.String" resultClass="java.lang.Integer" >
		SELECT COUNT(*) FROM MAST_WH_LOC WHERE UPPER(CODE) = UPPER(#PARAM#)
	</select>	
	
	<!--To Check AWB No is exist or not-->
	<select id="checkAWBNo" parameterClass="java.lang.String" resultClass="java.lang.Integer" >
		SELECT COUNT(AWB_NO) FROM AWB WHERE UPPER(AWB_NO)=UPPER(#PARAM#)
	</select>
	
	<select id="checkAWBNoDate" parameterClass="java.util.HashMap" resultClass="java.lang.Integer" >
		SELECT COUNT(AWB_NO) FROM AWB WHERE UPPER(AWB_NO)=UPPER(#awb_no#) AND AWB_DATE = to_date(#awb_date#,'DDMONYY')
	</select>
	
	<select id="checkAWBNoForEmanFltMvmt" parameterClass="java.lang.String" resultClass="java.lang.Integer" >
		SELECT COUNT(AWB_NO) FROM EMAN_MST_DTL WHERE UPPER(AWB_NO)=UPPER(#PARAM#)
	</select>
	<select id="checkAWBNoPFX" parameterClass="java.lang.String" resultClass="java.lang.Integer" >
		SELECT COUNT(CODE) FROM MAST_AWB_PREFIX WHERE UPPER(CODE)=UPPER(#PARAM#)
	</select>
	
	<select id="archivalJobCompletionDateTime" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO" resultClass="cargo.cms.awb.bo.AWBEnquiryBO" >
	<![CDATA[
	SELECT TO_CHAR(LOG_DATE,'DDMONYY HH24:MI') crDate,STATUS as status FROM DBA_SCHEDULER_JOB_RUN_DETAILS WHERE JOB_NAME = 'WOS_ARCHIVAL' AND LOG_DATE > SYSDATE-7 ORDER BY LOG_ID DESC
	]]>  
	</select>
	<select id="countforflightclosedinpast7days" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO" resultClass="cargo.cms.awb.bo.AWBEnquiryBO" >
	<![CDATA[
	select count(1) as interval, 'Closed' as status from awb where awb_date < sysdate -75 and awb_closed_yn = 'Y'
	union All
	select count(1) as interval, 'Not Closed' as status  from awb where awb_date < sysdate -75 and awb_closed_yn = 'N'
	union All
	select count(1) as interval,  'Total' as status  from awb where awb_date < sysdate -75
	]]>  
	</select>
	<select id="countforAWBexistsinthesystemover75daysold" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO" resultClass="cargo.cms.awb.bo.AWBEnquiryBO" >
	<![CDATA[
	select to_char(crDate,'DDMONYY') as crDate,interval as interval from(SELECT trunc(cr_date) crDate, COUNT(*)as interval FROM (
	SELECT trunc(cr_date) cr_date, FLT_KEY, FLT_DATE, count(1) FROM ARCHIVE_LOG_MON 
	WHERE archive_type='FLIGHT' AND flt_key is not null and TO_DATE(cr_date) > sysdate - 7
	group by trunc(cr_date), FLT_KEY, FLT_DATE )
 	group by trunc(cr_date) order by trunc(cr_date))
 	]]>  
	</select>
	
	<select id="fetchAWBPouchDetails" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO" resultClass="cargo.cms.awb.bo.AWBEnquiryBO" >
		select awb_no awbNo, substr(awb_no,1,3) awbNoPFX, substr(awb_no,4) awbNoSFX, to_char(awb_date,'DDMONYY') awbDate, flt_key fltKey, to_char(flt_date,'DDMONYY') fltDate,
		((select AWB_IMAGE_NAME FROM AWB_IMAGE WHERE seq_no = (SELECT MAX(SEQ_NO) FROM AWB_IMAGE WHERE AWB_NO = #awbNo# AND AWB_DATE = nvl(#awbDate#,pouch.awb_date)) )) AS transactionId,
		(select COUNT(*)
    FROM 
   FW_IMAGE_STORE A
   WHERE    nvl(A.delete_flag,'N') = 'N' and 
   img_session_id =((select AWB_IMAGE_NAME FROM AWB_IMAGE WHERE seq_no = (SELECT MAX(SEQ_NO) FROM AWB_IMAGE WHERE AWB_NO = pouch.awb_no AND AWB_DATE = nvl(#awbDate#,pouch.awb_date)) ))) totalRowCount
		from awb_pouch pouch where awb_no = #awbNo#
	</select>
	
	<!--fetch awb status-->
	<select id="fetchAwbStatus" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO" resultClass="cargo.cms.awb.bo.AWBEnquiryBO" >
		SELECT 
		      AWB_CLOSED_YN AS awbStatus,
		      AWB_RMK AS oldCloseRemarks, 
		      TO_CHAR(LM_DATE , 'DDMMYY HH24:MI:SS') AS lastModifiedDate
		  FROM
		      AWB 
		 WHERE 
		      AWB_NO=#awbNo# AND 
		      AWB_TYPE=#awbType# AND 
		      AWB_DATE=#awbDate#
	</select>
	
	
	<select id="fetchAwbStatusinUnlock" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO" resultClass="java.lang.Integer" >
		SELECT 
		      count(*)
		  FROM
		      AWB 
		 WHERE 
		      AWB_NO = #awbNo# AND
		      AWB_DATE = #awbDate# AND  
		      AWB_CLOSED_YN = 'N'  
	</select>
	
	<!--modify the awb remark-->
	<update id="updateAwbRmk" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO">
		UPDATE
		      AWB
		   SET 
		      AWB_CLOSED_YN = UPPER(#dumAwbStatus#),
		      AWB_RMK = UPPER(#closeRemarks#),
		      LM_DATE = sysdate,
			  LM_USER_ID = #crUserId#
	     WHERE 
			  AWB_NO = #awbNo# AND 
			  AWB_TYPE=#awbType# AND 
			  AWB_DATE=#awbDate# AND
			  to_char(LM_DATE, 'DDMMYY HH24:MI:SS') = #lastModifiedDate#
	</update>

	<select id="fetchPcsWtInAWBInv" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO" resultClass="cargo.cms.awb.bo.AWBEnquiryBO">
	SELECT COUNT(LOCN_PCS) AS closePcs,
	       COUNT(LOCN_WT) AS closeWt
	   FROM 
	       AWB_INVENTORY 
	  WHERE 
	       LOCN_PCS != '0' AND
           LOCN_WT != '0' AND
	       AWB_NO = #awbNo# AND 
	       AWB_DATE=#awbDate# 
	</select>

<!-- AWB Inventory ENDs -->

<!-- AWB Enquiry Starts -->
	
	<!--To Fetch AWb Enquiry Details -->
	
	<select id="fetchAWBEnquiryArchMileStoneDetails" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO" resultClass="cargo.cms.awb.bo.AWBEnquiryBO">
                  SELECT * FROM (
        SELECT AWB.EVENT_AWB_ID as awbId,mov.event_awb_mov_id as movId,HD.EVENT_ID as eventId,TO_CHAR(hd.event_date_time,'DDMONYY') AS actnDate,
                          TO_CHAR(hd.event_date_time,'HH24:MI:SS')   AS actnTime,
                          DECODE((SELECT UNICODE_DESC FROM I18N_LABELS WHERE LABEL_KEY = TRIM(HD.FUNCTION_CODE) AND LANG_CODE                                         ='en_US' AND ROWNUM                                            =1  ),'',NVL(  (DECODE((SELECT MILESTONE_CODE_DESC FROM SEC_MENU_CTRL WHERE CODE = HD.FUNCTION_CODE AND ROWNUM=1),'RESTORE_AWB_STORAGE_MS','Restore AWB Storage (HHT)','RAMP_MENU_ULD_UN_CHK_OUT_MS','Un-Check out ULD (HHT)','AMEND_LSP_STORGE_MS','Amend CSD Storage (HHT)','MENU_MHCS_CHKIN_MS','MHCS Check-in (HHT)','ISSUE_RCL_PPK_MIX_MS','Issue RCL PPK / Mix (HHT)','ISSUE_RCL_BULK_MS','Issue RCL Bulk (HHT)','LOAD_SHIPMENT_ULD_MS','Load Shipment to ULD (HHT)','CHECKIN_OFFLOAD_ULD_MS','Check-in Offloaded ULD (HHT)','RAMP_MENU_CRE_ULD_CHK_IN_MS','Create ULD Check-in (HHT)','RAMP_MENU_ULD_UN_CHK_IN_MS','ULD Uncheck-in (HHT)','LOAD_SHIPMENT_ULD','Load Shipment to ULD (HHT)','CONFIRM_OFFLOAD_MS','Confirm Offloaded Cargo (HHT)','RAMP_MENU_ULD_CHK_OUT_MS','Check Out ULD (HHT)','AMEND_ULD_STORAGE_MS','Amend ULD Storage (HHT)','CREATE_AWB_STORAGE_MS','Create AWB Storage (HHT)','CAPTURE_SRF_DLV_LOC_MS','Capture SRF Dlv by Locn (HHT)',(SELECT MILESTONE_CODE_DESC FROM SEC_MENU_CTRL WHERE CODE = HD.FUNCTION_CODE AND ROWNUM=1))  ),DECODE(HD.FUNCTION_CODE,'MHS_MSG','MHCS Message','TRK_FLT_ARR','Truck Flight Arrival','LOAD_SHPMT_ULD','Load Shipment to ULD (HHT)','RAMP_MENU_CRE_ULD_CHK_IN_MS','Create ULD Check-in (HHT)','RAMP_MENU_ULD_UN_CHK_IN_MS','ULD Uncheck-in (HHT)',HD.FUNCTION_CODE)),  (SELECT UNICODE_DESC  FROM I18N_LABELS  WHERE LABEL_KEY = TRIM(HD.FUNCTION_CODE)  AND LANG_CODE   ='en_US'  AND ROWNUM      =1  )) || DECODE(HD.ACTION,'','',NULL,'','('||HD.ACTION||')') AS funcName,
                          hd.cr_user_id AS userID,
                          AWB.AWB_SHC AS awbShc,
                          NVL(AWB.AWB_PCS,0) AS awbPcs,
                          NVL(AWB.AWB_WT,0) AS awbWt,
                          NVL(AWB.AWB_INV_PCS,0) AS invPcs,
                          NVL(AWB.AWB_INV_WT,0) AS invWt,
                          NVL(mov.awb_act_pcs,NVL(AWB.AWB_ACT_PCS,0))                                                     AS actnPcs,
        NVL(mov.awb_act_wt,NVL(AWB.AWB_ACT_WT,0))                                                      AS actnWt,
                          mov.from_loc_code AS fromLocn,
                          mov.from_csd_uld AS fromCsdULD,
                          mov.to_loc_code AS toLocn,
                          mov.to_csd_uld AS toCsdULD,
                          NVL(HD.RCL_NO,HD.TRF_NO) AS rclNo,
                          HD.VCL_NO AS vclNo,
                          NVL(hd.srf_no,hd.ct_no) AS srfNo,
                          DECODE(FLT.FLT_TYPE,'A',flt.flt_key,'') AS inbFltKey,
                          DECODE(FLT.FLT_TYPE,'A',to_char(FLT.FLT_date, 'DDMONYY')||' '||SUBSTR(lpad(FLT.SCH_TIME,4, 0),0,2)|| decode(FLT.SCH_TIME,'','',null,'',':')|| SUBSTR(lpad(FLT.SCH_TIME,4, 0),3,4),'') AS inbFltSchDate,
                          DECODE(FLT.FLT_TYPE,'A',TO_CHAR(FLT.FLT_DATE,'DDMONYY'),'') AS inbFltDate,
                          DECODE(FLT.FLT_TYPE,'A',to_char(FLT.act_date, 'DDMONYY')||' '||SUBSTR(lpad(FLT.ACT_TIME,4, 0),0,2)|| decode(fLT.ACT_TIME,'','',null,'',':')|| SUBSTR(lpad(FLT.ACT_TIME,4, 0),3,4),'') AS inbFltActDate,
                          DECODE(FLT.FLT_TYPE,'A',to_char(FLT.ESt_date, 'DDMONYY')||' '||SUBSTR(lpad(FLT.EST_TIME,4, 0),0,2)|| decode(fLT.EST_TIME,'','',null,'',':')|| SUBSTR(lpad(FLT.EST_TIME,4, 0),3,4),'') AS inbFltEstDate,
                          DECODE(FLT.FLT_TYPE,'D',flt.flt_key,'') AS oubFltKey,
                          DECODE(FLT.FLT_TYPE,'D',to_char(FLT.FLT_date, 'DDMONYY')||' '||SUBSTR(lpad(FLT.SCH_TIME,4, 0),0,2)|| decode(FLT.SCH_TIME,'','',null,'',':')|| SUBSTR(lpad(FLT.SCH_TIME,4, 0),3,4),'') AS oubFltSchDate,
                          DECODE(FLT.FLT_TYPE,'D',TO_CHAR(FLT.FLT_DATE,'DDMONYY'),'') AS oubFltDate,
                          DECODE(FLT.FLT_TYPE,'D',to_char(FLT.act_date, 'DDMONYY')||' '||SUBSTR(lpad(FLT.ACT_TIME,4, 0),0,2)|| decode(fLT.ACT_TIME,'','',null,'',':')|| SUBSTR(lpad(FLT.ACT_TIME,4, 0),3,4),'') AS oubFltActDate,
                          DECODE(FLT.FLT_TYPE,'D',to_char(FLT.ESt_date, 'DDMONYY')||' '||SUBSTR(lpad(FLT.EST_TIME,4, 0),0,2)|| decode(fLT.EST_TIME,'','',null,'',':')|| SUBSTR(lpad(FLT.EST_TIME,4, 0),3,4),'') AS oubFltEstDate,  
                          hd.truck_trip AS truckTrip,
                          hd.vehicle_no AS vehicleNo,
        ULD.ULD_SHC AS uldSHC
                        FROM WOSARCH.EVENT_AWB@DBLS_WOSARCH AWB,
                          WOSARCH.EVENT_HD@DBLS_WOSARCH HD,
                          WOSARCH.EVENT_AWB_MOV@DBLS_WOSARCH MOV,
                          WOSARCH.EVENT_FLT@DBLS_WOSARCH FLT,
        WOSARCH.EVENT_ULD@DBLS_WOSARCH ULD
                        WHERE HD.EVENT_ID    = AWB.EVENT_ID
                        AND MOV.EVENT_AWB_ID(+) = AWB.EVENT_AWB_ID
                        AND FLT.EVENT_FLT_ID(+) = HD.EVENT_FLT_ID
      AND ULD.EVENT_ID (+) = HD.EVENT_ID
                        AND AWB.AWB_NO       =#awbNo#
                        AND AWB.AWB_DATE     =TO_DATE(#awbDate#, 'DDMONYY')
                        UNION ALL
      SELECT AWBLIST.EVENT_ULD_AWB_LIST_ID as awbId,mov.EVENT_ULD_MOV_ID as movId,HD.EVENT_ID as eventId,TO_CHAR(hd.event_date_time,'DDMONYY') AS actnDate,
                          TO_CHAR(hd.event_date_time,'HH24:MI:SS')   AS actnTime,
                          DECODE((SELECT UNICODE_DESC FROM I18N_LABELS WHERE LABEL_KEY = TRIM(HD.FUNCTION_CODE) AND LANG_CODE                                         ='en_US' AND ROWNUM                                            =1  ),'',NVL(  (DECODE((SELECT MILESTONE_CODE_DESC FROM SEC_MENU_CTRL WHERE CODE = HD.FUNCTION_CODE AND ROWNUM=1),'RESTORE_AWB_STORAGE_MS','Restore AWB Storage (HHT)','RAMP_MENU_ULD_UN_CHK_OUT_MS','Un-Check out ULD (HHT)','AMEND_LSP_STORGE_MS','Amend CSD Storage (HHT)','MENU_MHCS_CHKIN_MS','MHCS Check-in (HHT)','ISSUE_RCL_PPK_MIX_MS','Issue RCL PPK / Mix (HHT)','ISSUE_RCL_BULK_MS','Issue RCL Bulk (HHT)','LOAD_SHIPMENT_ULD_MS','Load Shipment to ULD (HHT)','CHECKIN_OFFLOAD_ULD_MS','Check-in Offloaded ULD (HHT)','RAMP_MENU_CRE_ULD_CHK_IN_MS','Create ULD Check-in (HHT)','RAMP_MENU_ULD_UN_CHK_IN_MS','ULD Uncheck-in (HHT)','LOAD_SHIPMENT_ULD','Load Shipment to ULD (HHT)','CONFIRM_OFFLOAD_MS','Confirm Offloaded Cargo (HHT)','RAMP_MENU_ULD_CHK_OUT_MS','Check Out ULD (HHT)','AMEND_ULD_STORAGE_MS','Amend ULD Storage (HHT)','CREATE_AWB_STORAGE_MS','Create AWB Storage (HHT)','CAPTURE_SRF_DLV_LOC_MS','Capture SRF Dlv by Locn (HHT)',(SELECT MILESTONE_CODE_DESC FROM SEC_MENU_CTRL WHERE CODE = HD.FUNCTION_CODE AND ROWNUM=1))  ),DECODE(HD.FUNCTION_CODE,'MHS_MSG','MHCS Message','TRK_FLT_ARR','Truck Flight Arrival','LOAD_SHPMT_ULD','Load Shipment to ULD (HHT)','RAMP_MENU_CRE_ULD_CHK_IN_MS','Create ULD Check-in (HHT)','RAMP_MENU_ULD_UN_CHK_IN_MS','ULD Uncheck-in (HHT)',HD.FUNCTION_CODE)),  (SELECT UNICODE_DESC  FROM I18N_LABELS  WHERE LABEL_KEY = TRIM(HD.FUNCTION_CODE)  AND LANG_CODE   ='en_US'  AND ROWNUM      =1  )) || DECODE(HD.ACTION,'','',NULL,'','('||HD.ACTION||')') AS funcName,
                          hd.cr_user_id AS userID,
                          AWBLIST.AWB_SHC AS awbShc,
                          NVL(AWBLIST.AWB_PCS,0) AS awbPcs,
                          NVL(AWBLIST.AWB_WT,0) AS awbWt,
                          NVL(AWBLIST.AWB_INV_PCS,0) AS invPcs,
                          NVL(AWBLIST.AWB_INV_WT,0) AS invWt,
                          0                                                    AS actnPcs,
           0                                                    AS actnWt,
                          MOV.FROM_LOC_CODE AS fromLocn,
                          DECODE(MOV.FROM_LOC_CODE,'','',decode(ULD.ULD_KEY,'',ULD.csd,ULD.uld_key)) AS fromCsdULD,
                          MOV.TO_LOC_CODE AS toLocn,
                          DECODE(HD.FUNCTION_CODE,'MBLE_INT_10',decode(ULD.ULD_KEY,'',ULD.csd,ULD.uld_key),'MBLE_INT_11',decode(ULD.ULD_KEY,'',ULD.csd,ULD.uld_key),DECODE(MOV.TO_LOC_CODE,'','',decode(ULD.ULD_KEY,'',ULD.csd,ULD.uld_key))) AS toCsdULD,
                          NVL(HD.RCL_NO,HD.TRF_NO) AS rclNo,
                          HD.VCL_NO AS vclNo,
                          NVL(hd.srf_no,hd.ct_no) AS srfNo,
                          DECODE(FLT.FLT_TYPE,'A',flt.flt_key,'') AS inbFltKey,
                           DECODE(FLT.FLT_TYPE,'A',to_char(FLT.FLT_date, 'DDMONYY')||' '||SUBSTR(lpad(FLT.SCH_TIME,4, 0),0,2)|| decode(FLT.SCH_TIME,'','',null,'',':')|| SUBSTR(lpad(FLT.SCH_TIME,4, 0),3,4),'') AS inbFltSchDate,
                          DECODE(FLT.FLT_TYPE,'A',TO_CHAR(FLT.FLT_DATE,'DDMONYY'),'') AS inbFltDate,
                          DECODE(FLT.FLT_TYPE,'A',to_char(FLT.act_date, 'DDMONYY')||' '||SUBSTR(lpad(FLT.ACT_TIME,4, 0),0,2)|| decode(FLT.ACT_TIME,'','',null,'',':')|| SUBSTR(lpad(FLT.ACT_TIME,4, 0),3,4),'') AS inbFltActDate,
                          DECODE(FLT.FLT_TYPE,'A',to_char(FLT.ESt_date, 'DDMONYY')||' '||SUBSTR(lpad(FLT.EST_TIME,4, 0),0,2)|| decode(FLT.EST_TIME,'','',null,'',':')|| SUBSTR(lpad(FLT.EST_TIME,4, 0),3,4),'') AS inbFltEstDate,
                          DECODE(FLT.FLT_TYPE,'D',flt.flt_key,'') AS oubFltKey,
                          DECODE(FLT.FLT_TYPE,'D',to_char(FLT.FLT_date, 'DDMONYY')||' '||SUBSTR(lpad(FLT.SCH_TIME,4, 0),0,2)|| decode(FLT.SCH_TIME,'','',null,'',':')|| SUBSTR(lpad(FLT.SCH_TIME,4, 0),3,4),'') AS oubFltSchDate,
                          DECODE(FLT.FLT_TYPE,'D',TO_CHAR(FLT.FLT_DATE,'DDMONYY'),'') AS oubFltDate,
                          DECODE(FLT.FLT_TYPE,'D',to_char(FLT.act_date, 'DDMONYY')||' '||SUBSTR(lpad(FLT.ACT_TIME,4, 0),0,2)|| decode(FLT.ACT_TIME,'','',null,'',':')|| SUBSTR(lpad(FLT.ACT_TIME,4, 0),3,4),'') AS oubFltActDate,
                          DECODE(FLT.FLT_TYPE,'D',to_char(FLT.ESt_date, 'DDMONYY')||' '||SUBSTR(lpad(FLT.EST_TIME,4, 0),0,2)|| decode(FLT.EST_TIME,'','',null,'',':')|| SUBSTR(lpad(FLT.EST_TIME,4, 0),3,4),'') AS oubFltEstDate,  
                          hd.truck_trip AS truckTrip,
                          hd.vehicle_no AS vehicleNo,
        ULD.ULD_SHC AS uldSHC
                        FROM WOSARCH.EVENT_ULD_AWB_LIST@DBLS_WOSARCH AWBLIST,WOSARCH.EVENT_ULD@DBLS_WOSARCH ULD,WOSARCH.EVENT_HD@DBLS_WOSARCH HD,WOSARCH.EVENT_ULD_MOV@DBLS_WOSARCH MOV,
                          WOSARCH.EVENT_FLT@DBLS_WOSARCH FLT  
                        WHERE ULD.EVENT_ID_AWB_LIST      = AWBLIST.EVENT_ID
      AND HD.EVENT_ID = ULD.EVENT_ID
      AND MOV.EVENT_ULD_ID(+) = ULD.EVENT_ULD_ID
                        AND FLT.EVENT_FLT_ID(+) = HD.EVENT_FLT_ID
                        AND HD.FUNCTION_CODE NOT IN ('EDI_1','EDI_2')
                        AND AWBLIST.AWB_NO       =#awbNo#
                        AND AWBLIST.AWB_DATE     =TO_DATE(#awbDate#, 'DDMONYY')) A 
                        ORDER BY A.eventId,A.awbId,A.movId ASC
        </select>
	
	<select id="fetchAWBEnquiryMileStoneDetails" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO" resultClass="cargo.cms.awb.bo.AWBEnquiryBO">
                  SELECT * FROM (
        SELECT AWB.EVENT_AWB_ID as awbId,mov.event_awb_mov_id as movId,HD.EVENT_ID as eventId,TO_CHAR(hd.event_date_time,'DDMONYY') AS actnDate,
                          TO_CHAR(hd.event_date_time,'HH24:MI:SS')   AS actnTime,
                          DECODE((SELECT UNICODE_DESC FROM I18N_LABELS WHERE LABEL_KEY = TRIM(HD.FUNCTION_CODE) AND LANG_CODE                                         ='en_US' AND ROWNUM                                            =1  ),'',NVL(  (DECODE((SELECT MILESTONE_CODE_DESC FROM SEC_MENU_CTRL WHERE CODE = HD.FUNCTION_CODE AND ROWNUM=1),'RESTORE_AWB_STORAGE_MS','Restore AWB Storage (HHT)','RAMP_MENU_ULD_UN_CHK_OUT_MS','Un-Check out ULD (HHT)','AMEND_LSP_STORGE_MS','Amend CSD Storage (HHT)','MENU_MHCS_CHKIN_MS','MHCS Check-in (HHT)','ISSUE_RCL_PPK_MIX_MS','Issue RCL PPK / Mix (HHT)','ISSUE_RCL_BULK_MS','Issue RCL Bulk (HHT)','LOAD_SHIPMENT_ULD_MS','Load Shipment to ULD (HHT)','CHECKIN_OFFLOAD_ULD_MS','Check-in Offloaded ULD (HHT)','RAMP_MENU_CRE_ULD_CHK_IN_MS','Create ULD Check-in (HHT)','RAMP_MENU_ULD_UN_CHK_IN_MS','ULD Uncheck-in (HHT)','LOAD_SHIPMENT_ULD','Load Shipment to ULD (HHT)','CONFIRM_OFFLOAD_MS','Confirm Offloaded Cargo (HHT)','RAMP_MENU_ULD_CHK_OUT_MS','Check Out ULD (HHT)','AMEND_ULD_STORAGE_MS','Amend ULD Storage (HHT)','CREATE_AWB_STORAGE_MS','Create AWB Storage (HHT)','CAPTURE_SRF_DLV_LOC_MS','Capture SRF Dlv by Locn (HHT)',(SELECT MILESTONE_CODE_DESC FROM SEC_MENU_CTRL WHERE CODE = HD.FUNCTION_CODE AND ROWNUM=1))  ),DECODE(HD.FUNCTION_CODE,'MHS_MSG','MHCS Message','TRK_FLT_ARR','Truck Flight Arrival','LOAD_SHPMT_ULD','Load Shipment to ULD (HHT)','RAMP_MENU_CRE_ULD_CHK_IN_MS','Create ULD Check-in (HHT)','RAMP_MENU_ULD_UN_CHK_IN_MS','ULD Uncheck-in (HHT)',HD.FUNCTION_CODE)),  (SELECT UNICODE_DESC  FROM I18N_LABELS  WHERE LABEL_KEY = TRIM(HD.FUNCTION_CODE)  AND LANG_CODE   ='en_US'  AND ROWNUM      =1  )) || DECODE(HD.ACTION,'','',NULL,'','('||HD.ACTION||')') AS funcName,
                          hd.cr_user_id AS userID,
                          AWB.AWB_SHC AS awbShc,
                          NVL(AWB.AWB_PCS,0) AS awbPcs,
                          NVL(AWB.AWB_WT,0) AS awbWt,
                          NVL(AWB.AWB_INV_PCS,0) AS invPcs,
                          NVL(AWB.AWB_INV_WT,0) AS invWt,
                          NVL(mov.awb_act_pcs,NVL(AWB.AWB_ACT_PCS,0))                                                     AS actnPcs,
        NVL(mov.awb_act_wt,NVL(AWB.AWB_ACT_WT,0))                                                      AS actnWt,
                          mov.from_loc_code AS fromLocn,
                          mov.from_csd_uld AS fromCsdULD,
                          mov.to_loc_code AS toLocn,
                          mov.to_csd_uld AS toCsdULD,
                          NVL(HD.RCL_NO,HD.TRF_NO) AS rclNo,
                          HD.VCL_NO AS vclNo,
                          NVL(hd.srf_no,hd.ct_no) AS srfNo,
                          DECODE(FLT.FLT_TYPE,'A',flt.flt_key,'') AS inbFltKey,
                          DECODE(FLT.FLT_TYPE,'A',to_char(FLT.FLT_date, 'DDMONYY')||' '||SUBSTR(lpad(FLT.SCH_TIME,4, 0),0,2)|| decode(FLT.SCH_TIME,'','',null,'',':')|| SUBSTR(lpad(FLT.SCH_TIME,4, 0),3,4),'') AS inbFltSchDate,
                          DECODE(FLT.FLT_TYPE,'A',TO_CHAR(FLT.FLT_DATE,'DDMONYY'),'') AS inbFltDate,
                          DECODE(FLT.FLT_TYPE,'A',to_char(FLT.act_date, 'DDMONYY')||' '||SUBSTR(lpad(FLT.ACT_TIME,4, 0),0,2)|| decode(fLT.ACT_TIME,'','',null,'',':')|| SUBSTR(lpad(FLT.ACT_TIME,4, 0),3,4),'') AS inbFltActDate,
                          DECODE(FLT.FLT_TYPE,'A',to_char(FLT.ESt_date, 'DDMONYY')||' '||SUBSTR(lpad(FLT.EST_TIME,4, 0),0,2)|| decode(fLT.EST_TIME,'','',null,'',':')|| SUBSTR(lpad(FLT.EST_TIME,4, 0),3,4),'') AS inbFltEstDate,
                          DECODE(FLT.FLT_TYPE,'D',flt.flt_key,'') AS oubFltKey,
                          DECODE(FLT.FLT_TYPE,'D',to_char(FLT.FLT_date, 'DDMONYY')||' '||SUBSTR(lpad(FLT.SCH_TIME,4, 0),0,2)|| decode(FLT.SCH_TIME,'','',null,'',':')|| SUBSTR(lpad(FLT.SCH_TIME,4, 0),3,4),'') AS oubFltSchDate,
                          DECODE(FLT.FLT_TYPE,'D',TO_CHAR(FLT.FLT_DATE,'DDMONYY'),'') AS oubFltDate,
                          DECODE(FLT.FLT_TYPE,'D',to_char(FLT.act_date, 'DDMONYY')||' '||SUBSTR(lpad(FLT.ACT_TIME,4, 0),0,2)|| decode(fLT.ACT_TIME,'','',null,'',':')|| SUBSTR(lpad(FLT.ACT_TIME,4, 0),3,4),'') AS oubFltActDate,
                          DECODE(FLT.FLT_TYPE,'D',to_char(FLT.ESt_date, 'DDMONYY')||' '||SUBSTR(lpad(FLT.EST_TIME,4, 0),0,2)|| decode(fLT.EST_TIME,'','',null,'',':')|| SUBSTR(lpad(FLT.EST_TIME,4, 0),3,4),'') AS oubFltEstDate,  
                          hd.truck_trip AS truckTrip,
                          hd.vehicle_no AS vehicleNo,
        ULD.ULD_SHC AS uldSHC
                        FROM EVENT_AWB AWB,
                          EVENT_HD HD,
                          EVENT_AWB_MOV MOV,
                          EVENT_FLT FLT,
        EVENT_ULD ULD
                        WHERE HD.EVENT_ID    = AWB.EVENT_ID
                        AND MOV.EVENT_AWB_ID(+) = AWB.EVENT_AWB_ID
                        AND FLT.EVENT_FLT_ID(+) = HD.EVENT_FLT_ID
      AND ULD.EVENT_ID (+) = HD.EVENT_ID
                        AND AWB.AWB_NO       =#awbNo#
                        AND AWB.AWB_DATE     =TO_DATE(#awbDate#, 'DDMONYY')
                        UNION ALL
      SELECT AWBLIST.EVENT_ULD_AWB_LIST_ID as awbId,mov.EVENT_ULD_MOV_ID as movId,HD.EVENT_ID as eventId,TO_CHAR(hd.event_date_time,'DDMONYY') AS actnDate,
                          TO_CHAR(hd.event_date_time,'HH24:MI:SS')   AS actnTime,
                          DECODE((SELECT UNICODE_DESC FROM I18N_LABELS WHERE LABEL_KEY = TRIM(HD.FUNCTION_CODE) AND LANG_CODE                                         ='en_US' AND ROWNUM                                            =1  ),'',NVL(  (DECODE((SELECT MILESTONE_CODE_DESC FROM SEC_MENU_CTRL WHERE CODE = HD.FUNCTION_CODE AND ROWNUM=1),'RESTORE_AWB_STORAGE_MS','Restore AWB Storage (HHT)','RAMP_MENU_ULD_UN_CHK_OUT_MS','Un-Check out ULD (HHT)','AMEND_LSP_STORGE_MS','Amend CSD Storage (HHT)','MENU_MHCS_CHKIN_MS','MHCS Check-in (HHT)','ISSUE_RCL_PPK_MIX_MS','Issue RCL PPK / Mix (HHT)','ISSUE_RCL_BULK_MS','Issue RCL Bulk (HHT)','LOAD_SHIPMENT_ULD_MS','Load Shipment to ULD (HHT)','CHECKIN_OFFLOAD_ULD_MS','Check-in Offloaded ULD (HHT)','RAMP_MENU_CRE_ULD_CHK_IN_MS','Create ULD Check-in (HHT)','RAMP_MENU_ULD_UN_CHK_IN_MS','ULD Uncheck-in (HHT)','LOAD_SHIPMENT_ULD','Load Shipment to ULD (HHT)','CONFIRM_OFFLOAD_MS','Confirm Offloaded Cargo (HHT)','RAMP_MENU_ULD_CHK_OUT_MS','Check Out ULD (HHT)','AMEND_ULD_STORAGE_MS','Amend ULD Storage (HHT)','CREATE_AWB_STORAGE_MS','Create AWB Storage (HHT)','CAPTURE_SRF_DLV_LOC_MS','Capture SRF Dlv by Locn (HHT)',(SELECT MILESTONE_CODE_DESC FROM SEC_MENU_CTRL WHERE CODE = HD.FUNCTION_CODE AND ROWNUM=1))  ),DECODE(HD.FUNCTION_CODE,'MHS_MSG','MHCS Message','TRK_FLT_ARR','Truck Flight Arrival','LOAD_SHPMT_ULD','Load Shipment to ULD (HHT)','RAMP_MENU_CRE_ULD_CHK_IN_MS','Create ULD Check-in (HHT)','RAMP_MENU_ULD_UN_CHK_IN_MS','ULD Uncheck-in (HHT)',HD.FUNCTION_CODE)),  (SELECT UNICODE_DESC  FROM I18N_LABELS  WHERE LABEL_KEY = TRIM(HD.FUNCTION_CODE)  AND LANG_CODE   ='en_US'  AND ROWNUM      =1  )) || DECODE(HD.ACTION,'','',NULL,'','('||HD.ACTION||')') AS funcName,
                          hd.cr_user_id AS userID,
                          AWBLIST.AWB_SHC AS awbShc,
                          NVL(AWBLIST.AWB_PCS,0) AS awbPcs,
                          NVL(AWBLIST.AWB_WT,0) AS awbWt,
                          NVL(AWBLIST.AWB_INV_PCS,0) AS invPcs,
                          NVL(AWBLIST.AWB_INV_WT,0) AS invWt,
                          0                                                    AS actnPcs,
           0                                                    AS actnWt,
                          MOV.FROM_LOC_CODE AS fromLocn,
                          DECODE(MOV.FROM_LOC_CODE,'','',decode(ULD.ULD_KEY,'',ULD.csd,ULD.uld_key)) AS fromCsdULD,
                          MOV.TO_LOC_CODE AS toLocn,
                          DECODE(HD.FUNCTION_CODE,'MBLE_INT_10',decode(ULD.ULD_KEY,'',ULD.csd,ULD.uld_key),'MBLE_INT_11',decode(ULD.ULD_KEY,'',ULD.csd,ULD.uld_key),DECODE(MOV.TO_LOC_CODE,'','',decode(ULD.ULD_KEY,'',ULD.csd,ULD.uld_key))) AS toCsdULD,
                          NVL(HD.RCL_NO,HD.TRF_NO) AS rclNo,
                          HD.VCL_NO AS vclNo,
                          NVL(hd.srf_no,hd.ct_no) AS srfNo,
                          DECODE(FLT.FLT_TYPE,'A',flt.flt_key,'') AS inbFltKey,
                           DECODE(FLT.FLT_TYPE,'A',to_char(FLT.FLT_date, 'DDMONYY')||' '||SUBSTR(lpad(FLT.SCH_TIME,4, 0),0,2)|| decode(FLT.SCH_TIME,'','',null,'',':')|| SUBSTR(lpad(FLT.SCH_TIME,4, 0),3,4),'') AS inbFltSchDate,
                          DECODE(FLT.FLT_TYPE,'A',TO_CHAR(FLT.FLT_DATE,'DDMONYY'),'') AS inbFltDate,
                          DECODE(FLT.FLT_TYPE,'A',to_char(FLT.act_date, 'DDMONYY')||' '||SUBSTR(lpad(FLT.ACT_TIME,4, 0),0,2)|| decode(FLT.ACT_TIME,'','',null,'',':')|| SUBSTR(lpad(FLT.ACT_TIME,4, 0),3,4),'') AS inbFltActDate,
                          DECODE(FLT.FLT_TYPE,'A',to_char(FLT.ESt_date, 'DDMONYY')||' '||SUBSTR(lpad(FLT.EST_TIME,4, 0),0,2)|| decode(FLT.EST_TIME,'','',null,'',':')|| SUBSTR(lpad(FLT.EST_TIME,4, 0),3,4),'') AS inbFltEstDate,
                          DECODE(FLT.FLT_TYPE,'D',flt.flt_key,'') AS oubFltKey,
                          DECODE(FLT.FLT_TYPE,'D',to_char(FLT.FLT_date, 'DDMONYY')||' '||SUBSTR(lpad(FLT.SCH_TIME,4, 0),0,2)|| decode(FLT.SCH_TIME,'','',null,'',':')|| SUBSTR(lpad(FLT.SCH_TIME,4, 0),3,4),'') AS oubFltSchDate,
                          DECODE(FLT.FLT_TYPE,'D',TO_CHAR(FLT.FLT_DATE,'DDMONYY'),'') AS oubFltDate,
                          DECODE(FLT.FLT_TYPE,'D',to_char(FLT.act_date, 'DDMONYY')||' '||SUBSTR(lpad(FLT.ACT_TIME,4, 0),0,2)|| decode(FLT.ACT_TIME,'','',null,'',':')|| SUBSTR(lpad(FLT.ACT_TIME,4, 0),3,4),'') AS oubFltActDate,
                          DECODE(FLT.FLT_TYPE,'D',to_char(FLT.ESt_date, 'DDMONYY')||' '||SUBSTR(lpad(FLT.EST_TIME,4, 0),0,2)|| decode(FLT.EST_TIME,'','',null,'',':')|| SUBSTR(lpad(FLT.EST_TIME,4, 0),3,4),'') AS oubFltEstDate,  
                          hd.truck_trip AS truckTrip,
                          hd.vehicle_no AS vehicleNo,
        ULD.ULD_SHC AS uldSHC
                        FROM EVENT_ULD_AWB_LIST AWBLIST,EVENT_ULD ULD,EVENT_HD HD,EVENT_ULD_MOV MOV,
                          EVENT_FLT FLT  
                        WHERE ULD.EVENT_ID_AWB_LIST      = AWBLIST.EVENT_ID
      AND HD.EVENT_ID = ULD.EVENT_ID
      AND MOV.EVENT_ULD_ID(+) = ULD.EVENT_ULD_ID
                        AND FLT.EVENT_FLT_ID(+) = HD.EVENT_FLT_ID
                        AND HD.FUNCTION_CODE NOT IN ('EDI_1','EDI_2')
                        AND AWBLIST.AWB_NO       =#awbNo#
                        AND AWBLIST.AWB_DATE     =TO_DATE(#awbDate#, 'DDMONYY')) A 
                        ORDER BY A.eventId,A.awbId,A.movId ASC
        </select>
	
	<select id="fetchAWBEnquiryDetails" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO" resultClass="cargo.cms.awb.bo.AWBEnquiryBO">
		   SELECT 
			AWB_NO AS awbNo,
		  	SUBSTR( AWB_NO,1,3 ) AS awbNoPFX,
		  	SUBSTR( AWB_NO,4 ) as awbNoSFX, 			
 			TO_CHAR( AWB_DATE, 'DDMONYY') AS awbDate, 
 			AWB_TYPE AS awbType,
 			FUN_GET_AWB_UPLIFT_PRIORITY(AWB_NO,AWB_DATE) upliftPriority		
		FROM 
			AWB  
		WHERE 
				UPPER(AWB_NO) = UPPER(#awbNo#)
				AND  AWB_DATE=	TO_DATE(#awbDate#, 'DDMONYY')				
			ORDER BY AWB_DATE DESC		
	</select>
	<select id="sqlGetAWBUpliftPriorityList" parameterClass="cargo.cms.admin.bo.SHCUpliftPriorityBO"
		resultClass="cargo.cms.admin.bo.SHCUpliftPriorityBO">
		<![CDATA[
	    	SELECT
	    	TR_NO trNumber,
	    	CARR_CODE carrCode,
	    	AWB_TYPE awbType,
  			CATALOG catalog,
	    	PRIORITY priorityAWB	    	
	    	FROM MAST_AWB_TYPE_UPLIFT_PRIO
	    	WHERE CARR_CODE = #carrCode#
	    	ORDER BY PRIORITY
		]]>
	</select>
	<select id="sqlGetULDUpliftPriorityList" parameterClass="cargo.cms.admin.bo.SHCUpliftPriorityBO"
		resultClass="cargo.cms.admin.bo.SHCUpliftPriorityBO">
		<![CDATA[
	    	SELECT
	    	TR_NO trNumber,
	    	CARR_CODE carrCode,
	    	ULD_TYPE uldType,
	    	PRIORITY priorityULD	    	
	    	FROM MAST_ULD_TYPE_UPLIFT_PRIO
	    	WHERE CARR_CODE = #carrCode#
	    	ORDER BY PRIORITY
		]]>
	</select>
	<insert id="sqlInsertSHCUpliftPriorityAwbFlow" parameterClass="cargo.cms.admin.bo.SHCUpliftPriorityBO">
		<![CDATA[
	    	INSERT INTO MAST_AWB_TYPE_UPLIFT_PRIO (
	    		TR_NO, CARR_CODE, AWB_TYPE,CATALOG,PRIORITY,
	    		CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE
	    	) VALUES (
	    		MAST_AWB_TYPE_UPLIFT_PRIO_SEQ.NEXTVAL,#carrCode#, 
	    		#awbType#, #catalog#, #priorityAWB#,	    		
	    		#createdUserId#, SYSDATE, #createdUserId#, SYSDATE
	    	)
		]]>
	</insert>
	<insert id="sqlInsertSHCUpliftPriorityUldTypes" parameterClass="cargo.cms.admin.bo.SHCUpliftPriorityBO">
		<![CDATA[
	    	INSERT INTO MAST_ULD_TYPE_UPLIFT_PRIO (
	    		TR_NO, CARR_CODE, ULD_TYPE,PRIORITY,
	    		CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE
	    	) VALUES (
	    		MAST_ULD_TYPE_UPLIFT_PRIO_SEQ.NEXTVAL,#carrCode#, 
	    		#uldType#, #priorityULD#,		    		
	    		#createdUserId#, SYSDATE, #createdUserId#, SYSDATE
	    	)
		]]>
	</insert>
	<update id="sqlUpdateSHCUpliftPriorityAwbFlow" parameterClass="cargo.cms.admin.bo.SHCUpliftPriorityBO">
		<![CDATA[
			UPDATE MAST_AWB_TYPE_UPLIFT_PRIO
	    	SET
    		AWB_TYPE = #awbType#,
	    	CATALOG = #catalog#,
	    	PRIORITY = #priorityAWB#,	    	
    		LM_USER_ID = #createdUserId#,
    		LM_DATE = SYSDATE
	    	WHERE CARR_CODE = #carrCode#  and TR_NO = #trNumber#	    	
		]]>
	</update>
	<update id="sqlUpdateSHCUpliftPriorityUldTypes" parameterClass="cargo.cms.admin.bo.SHCUpliftPriorityBO">
		<![CDATA[
	    	UPDATE MAST_ULD_TYPE_UPLIFT_PRIO
	    	SET
    		ULD_TYPE = #uldType#,
	    	PRIORITY = #priorityULD#,
    		LM_USER_ID = #createdUserId#,
    		LM_DATE = SYSDATE
	    	WHERE CARR_CODE = #carrCode#  and TR_NO = #trNumber#
		]]>
	</update>
	<delete id="sqlDeleteAWBUpliftPriority" parameterClass="cargo.cms.admin.bo.SHCUpliftPriorityBO">
		<![CDATA[
	    	DELETE FROM MAST_AWB_TYPE_UPLIFT_PRIO WHERE CARR_CODE = #carrCode#  and TR_NO = #trNumber#
		]]>
	</delete>
	<delete id="sqlDeleteULDUpliftPriority" parameterClass="cargo.cms.admin.bo.SHCUpliftPriorityBO">
		<![CDATA[
	    	DELETE FROM MAST_ULD_TYPE_UPLIFT_PRIO WHERE CARR_CODE = #carrCode# and TR_NO = #trNumber#
		]]>
	</delete>
	<select id="getAnyDuplicateCountAfterSave" parameterClass="java.lang.String" resultClass="java.lang.String">
		<![CDATA[
			select count(1) from ( select count(1) from MAST_AWB_TYPE_UPLIFT_PRIO where carr_code = #carrCode#
						group by AWB_TYPE,NVL(CATALOG,'XX') having count(carr_code)  > 1 )
		]]>
	</select>
	<!-- SHC Uplift Priority -->
	<select id="sqlGetSHCUpliftPriorityList" parameterClass="cargo.cms.admin.bo.SHCUpliftPriorityBO"
		resultClass="cargo.cms.admin.bo.SHCUpliftPriorityBO">
		<![CDATA[
	    	SELECT
	    	CARR_CODE carrCode, DOC_LINE_NO docLineNo,
	    	SHC1 shc1, SHC2 shc2, SHC3 shc3, SHC4 shc4,
	    	SHC5 shc5, SHC6 shc6, SHC7 shc7, SHC8 shc8, SHC9 shc9,
	    	SHC_PRIORITY priority,
	    	TO_CHAR(LM_DATE, 'DDMONYY HH24:MI:SS') lastModifiedTime
	    	FROM MAST_CARR_SHC_UPLIFT_PRIO
	    	WHERE CARR_CODE = #carrCode#
	    	ORDER BY SHC_PRIORITY
		]]>
	</select>
	<select id="sqlGetSHCUpliftPriorityLastModifiedTime" parameterClass="cargo.cms.admin.bo.SHCUpliftPriorityBO"
		resultClass="java.lang.String">
		<![CDATA[
	    	SELECT
	    	TO_CHAR(LM_DATE, 'DDMONYY HH24:MI:SS') lastModifiedTime
	    	FROM MAST_CARR_SHC_UPLIFT_PRIO
	    	WHERE CARR_CODE = #carrCode# AND DOC_LINE_NO = #docLineNo#
		]]>
	</select>
	<select id="sqlGetIsSHCUpliftPriorityExist" parameterClass="cargo.cms.admin.bo.SHCUpliftPriorityBO"
		resultClass="java.lang.String">
		<![CDATA[
	    	SELECT
	    	DECODE(COUNT(1), 0, 'N', 'Y')
	    	FROM MAST_CARR_SHC_UPLIFT_PRIO
	    	WHERE CARR_CODE = #carrCode# AND DOC_LINE_NO = #docLineNo#
		]]>
	</select>
	<select id="sqlGetIsValidSHC" parameterClass="java.lang.String"
		resultClass="java.lang.String">
		<![CDATA[
	    	SELECT DECODE(COUNT(1), 0, 'N', 'Y') FROM MAST_SPL_HAND_CODE WHERE CODE = #PARAM#
		]]>
	</select>
	<select id="sqlGetIsValidCarrier" parameterClass="java.lang.String"
		resultClass="java.lang.String">
		<![CDATA[
	    	SELECT DECODE(COUNT(1), 0, 'N', 'Y') FROM MAST_CARRIER WHERE CODE = #PARAM#
		]]>
	</select>
	<insert id="sqlInsertSHCUpliftPriority" parameterClass="cargo.cms.admin.bo.SHCUpliftPriorityBO">
		<![CDATA[
	    	INSERT INTO MAST_CARR_SHC_UPLIFT_PRIO (
	    		CARR_CODE, DOC_LINE_NO,
	    		SHC1, SHC2, SHC3,
	    		SHC4, SHC5, SHC6,
	    		SHC7, SHC8, SHC9,
	    		SHC_PRIORITY,
	    		CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE
	    	) VALUES (
	    		#carrCode#, (
	    			SELECT NVL(MAX(DOC_LINE_NO), 0) + 1 FROM MAST_CARR_SHC_UPLIFT_PRIO WHERE CARR_CODE= #carrCode#
	    		),
	    		#shc1#, #shc2#, #shc3#,
	    		#shc4#, #shc5#, #shc6#,
	    		#shc7#, #shc8#, #shc9#,
	    		#priority#,
	    		#userID#, SYSDATE, #userID#, SYSDATE
		  )
		]]>
	</insert>
	<update id="sqlUpdateSHCUpliftPriority" parameterClass="cargo.cms.admin.bo.SHCUpliftPriorityBO">
		<![CDATA[
	    	UPDATE MAST_CARR_SHC_UPLIFT_PRIO
	    	SET
    		SHC1 = #shc1#, SHC2 = #shc2#, SHC3 = #shc3#,
    		SHC4 = #shc4#, SHC5 = #shc5#, SHC6 = #shc6#,
    		SHC7 = #shc7#, SHC8 = #shc8#, SHC9 = #shc9#,
    		SHC_PRIORITY = #priority#,
    		LM_USER_ID = #userID#, LM_DATE = SYSDATE
	    	WHERE CARR_CODE = #carrCode# AND DOC_LINE_NO = #docLineNo#
		]]>
	</update>
	<delete id="sqlDeleteSHCUpliftPriority" parameterClass="cargo.cms.admin.bo.SHCUpliftPriorityBO">
		<![CDATA[
	    	DELETE FROM MAST_CARR_SHC_UPLIFT_PRIO
	    	WHERE CARR_CODE = #carrCode# AND DOC_LINE_NO = #docLineNo#
		]]>
	</delete>
	<select id="sqlGetSHCUpliftPriorityForCarrierList" parameterClass="java.lang.String"
		resultClass="cargo.cms.common.admin.bo.SHCUpliftPriority">
		<![CDATA[
	    	SELECT
	    	CARR_CODE carrCode, DOC_LINE_NO docLineNo,
	    	SHC1 shc1, SHC2 shc2, SHC3 shc3, SHC4 shc4,
	    	SHC5 shc5, SHC6 shc6, SHC7 shc7, SHC8 shc8, SHC9 shc9,
	    	SHC_PRIORITY priority
	    	FROM MAST_CARR_SHC_UPLIFT_PRIO
	    	WHERE CARR_CODE = #carrCode#  AND SHC2 IS NULL
	    	ORDER BY SHC_PRIORITY
		]]>
	</select>
	<select id="sqlGetSHCForAWB" parameterClass="java.util.Map"
		resultClass="cargo.cms.common.admin.bo.SHCUpliftPriority">
		<![CDATA[
	    	SELECT CARR_CODE carrCode,
	    	SPL_CODE1 shc1, SPL_CODE2 shc2, SPL_CODE3 shc3, SPL_CODE4 shc4,
	    	SPL_CODE5 shc5, SPL_CODE6 shc6, SPL_CODE7 shc7, SPL_CODE8 shc8,
	    	SPL_CODE9 shc9
	    	FROM AWB
	    	WHERE AWB_NO = #AWB_NO# AND AWB_DATE = TO_DATE(#AWB_DATE#, 'DDMONYY')
		]]>
	</select>
	<select id="fetchAWBEnquiryDateList" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO" resultClass="cargo.cms.awb.bo.AWBEnquiryBO">
		 SELECT 
			AWB_NO AS awbNo,
		  	SUBSTR( AWB_NO,1,3 ) AS awbNoPFX,
		  	SUBSTR( AWB_NO,4 ) as awbNoSFX, 			
 			TO_CHAR( AWB_DATE, 'DDMONYY') AS awbDate, 
 			AWB_TYPE AS awbType 			
		FROM 
			AWB  
		WHERE 
				UPPER(AWB_NO) = UPPER(#awbNo#)
        ORDER BY AWB_DATE DESC
	</select>
	<select id="fetchAWBEnquiryDetailsForImp" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO" resultClass="cargo.cms.awb.bo.AWBEnquiryBO">
		SELECT 
			AWB_NO AS awbNo,
		  	SUBSTR( AWB_NO,1,3 ) AS awbNoPFX,
		  	SUBSTR( AWB_NO,4 ) as awbNoSFX, 			
 			TO_CHAR( AWB_DATE, 'DDMONYY') AS awbDate, 
 			AWB_TYPE AS awbType,
 			FUN_GET_AWB_UPLIFT_PRIORITY(AWB_NO,AWB_DATE) upliftPriority	 			
		FROM 
			AWB  
		WHERE 
				UPPER(AWB_NO) = UPPER(#awbNo#)
				AND  AWB_TYPE='I'	
				ORDER BY AWB_DATE DESC	
	</select>
	<select id="fetchAWBEnquiryDetailsForRmk" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO" resultClass="cargo.cms.awb.bo.AWBEnquiryBO">
	SELECT 
			AWB_NO AS awbNo,
		  	SUBSTR( AWB_NO,1,3 ) AS awbNoPFX,
		  	SUBSTR( AWB_NO,4 ) as awbNoSFX, 			
 			TO_CHAR( AWB_DATE, 'DDMONYY') AS awbDate,
      		RMK AS airlRmk,
      		'0' AS licenceUnder,
      		'0' AS partShipment
		FROM 
			AWB_RMK  
		WHERE 
			UPPER(AWB_NO) = UPPER(#awbNo#)							
			ORDER BY AWB_DATE DESC
	</select>
	<select id="fetchAWBEnquiryDetailsForExp" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO" resultClass="cargo.cms.awb.bo.AWBEnquiryBO">
		select A.*, TO_CHAR( AWB_DATE, 'DDMONYY') AS awbDate  from (
			SELECT 
			    AWB_NO AS awbNo, SUBSTR( AWB_NO,1,3 ) AS awbNoPFX,	SUBSTR( AWB_NO,4 ) as awbNoSFX, AWB_DATE AS AWB_DATE, AWB_TYPE AS awbType,
 			FUN_GET_AWB_UPLIFT_PRIORITY(AWB_NO,AWB_DATE) upliftPriority	 			
					FROM AWB  WHERE  UPPER(AWB_NO) = UPPER(#awbNo#) AND  AWB_TYPE='E'							
			UNION 
			SELECT AWB_NO AS awbNo, SUBSTR( AWB_NO,1,3 ) AS awbNoPFX,	SUBSTR( AWB_NO,4 ) as awbNoSFX, AWB_DATE AS AWB_DATE, 'E' AS awbType,
 			FUN_GET_AWB_UPLIFT_PRIORITY(AWB_NO,AWB_DATE) upliftPriority	 		
			      FROM EDI_FBL a, EDI_FBL_SHP f
				  WHERE a.TR_NO = f.TR_NO  AND a.FBL_STATUS='P' AND f.awb_no IS NOT NULL 
			      AND NOT EXISTS (SELECT NULL FROM awb WHERE awb_no = f.awb_no AND awb_date = f.awb_date)
						AND org = 'HKG' AND AWB_NO = #awbNo#
			 )A where 1 = 1 ORDER BY A.AWB_DATE DESC				
	</select>
	
		<select id="fetchAWBEnquiryDetailsForTra" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO" resultClass="cargo.cms.awb.bo.AWBEnquiryBO">
		select A.*, TO_CHAR( AWB_DATE, 'DDMONYY') AS awbDate  from (
			SELECT 
			    AWB_NO AS awbNo, SUBSTR( AWB_NO,1,3 ) AS awbNoPFX,	SUBSTR( AWB_NO,4 ) as awbNoSFX, AWB_DATE AS AWB_DATE, AWB_TYPE AS awbType,
 			FUN_GET_AWB_UPLIFT_PRIORITY(AWB_NO,AWB_DATE) upliftPriority	 	 			
					FROM AWB  WHERE  UPPER(AWB_NO) = UPPER(#awbNo#) AND  AWB_TYPE='T'							
			UNION 
			SELECT AWB_NO AS awbNo, SUBSTR( AWB_NO,1,3 ) AS awbNoPFX,	SUBSTR( AWB_NO,4 ) as awbNoSFX, AWB_DATE AS AWB_DATE, 'T' AS awbType,
 			FUN_GET_AWB_UPLIFT_PRIORITY(AWB_NO,AWB_DATE) upliftPriority	 			
			      FROM EDI_FBL a, EDI_FBL_SHP f
				  WHERE a.TR_NO = f.TR_NO  AND a.FBL_STATUS='P' AND f.awb_no IS NOT NULL 
			      AND NOT EXISTS (SELECT NULL FROM awb WHERE awb_no = f.awb_no AND awb_date = f.awb_date)
						AND org != 'HKG' AND AWB_NO = #awbNo#
		 )A where 1 = 1 ORDER BY A.AWB_DATE DESC						
	</select>
	

<select id="fetchAWBEnquiryDetailsForExpFBL" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO" resultClass="cargo.cms.awb.bo.AWBEnquiryBO">
		SELECT 
			AWB_NO AS awbNo,
		  	SUBSTR( AWB_NO,1,3 ) AS awbNoPFX,
		  	SUBSTR( AWB_NO,4 ) as awbNoSFX, 			
 			TO_CHAR( AWB_DATE, 'DDMONYY') AS awbDate, 
 			AWB_TYPE AS awbType 			
		FROM 
			AWB  
		WHERE 
				AWB_NO = #awbNo#
				AND  AWB_TYPE='E'				
			ORDER BY AWB_DATE DESC				
	</select>	
	
	<select id="fetchAWBEnquiryDetailsForTraFBL" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO" resultClass="cargo.cms.awb.bo.AWBEnquiryBO">
		SELECT 
			AWB_NO AS awbNo,
		  	SUBSTR( AWB_NO,1,3 ) AS awbNoPFX,
		  	SUBSTR( AWB_NO,4 ) as awbNoSFX, 			
 			TO_CHAR( AWB_DATE, 'DDMONYY') AS awbDate, 
 			AWB_TYPE AS awbType 			
		FROM 
			AWB  
		WHERE 
				AWB_NO = #awbNo#
				AND  AWB_TYPE='T'				
			ORDER BY AWB_DATE DESC						
	</select>
	
	<!--To Fetch AWb Enquiry Details For Import -->

<parameterMap id="hmap" class="map" >
	<parameter property="AWBNO" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
	<parameter property="AWBDATE" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
</parameterMap>

<procedure id="setPrcOSCharges" parameterMap="hmap" >
	{ call PRC_OS_CH(?,?) }
</procedure>	


<select id="fetchAWBEnquiryImportDetails" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO" resultClass="cargo.cms.awb.bo.AWBEnquiryBO">
	<!--  
		SELECT 
			CA.ECT_HANDLER AS ectHandler, 
			pkg_common.get_awb_splcodes(CA.awb_no, CA.awb_date, 'I') spl, 	
 			(select m.CODE_DESC 
			from CST_AWB CA 
			join Mast_Code_Dtl m on m.CODE = CA.REL_IND and CODE_TYPE = 'ACCS_REL_IND'
			where a.AWB_NO = CA.AWB_NO AND a.AWB_DATE = CA.AWB_DATE and rownum = 1) AS relInd,  
 			CA.BANK_ENDOS AS bankEndos, 
 			CA.SHPR_NAME AS shprName, 
 			CA.APPNTD_AGENT AS appntdAgent, 
 			CA.AWB_CLOSE_RMK AS awbCloseRmark, 
 			CA.AWB_RMK AS oldAwbRemark,
		    CA.AWB_NO AS awbNo,
		    SUBSTR( CA.AWB_NO,1,3 ) AS awbNoPFX,
		    SUBSTR( CA.AWB_NO,4 ) as awbNoSFX,
		    CA.AWB_TYPE AS awbType, 
			CA.CATALOG AS catalog,
            A.LOCKED_YN AS lockYN,
            CA.AWB_PCS AS awbPcs, 
			trim(TO_CHAR(NVL(CA.AWB_WT,0),'9999990.00')) AS awbWt, 			
 			A.CARR_CODE AS carrCode,
            (SELECT COUNT(LICENSE) 
         FROM
            CST_LICENSE 
        WHERE
            AWB_NO = #awbNo# AND
            AWB_DATE = #awbDate#) AS licence,
            A.CAR_YN AS carYN,
            ASS.COD_FSU_STS AS status,
            TO_CHAR( CA.AWB_DATE, 'DDMONYY') AS awbDate,  
     
            CA.INTELLIGENT_CHK_IND AS intelligentChk,
            ICS.AGENT_ID AS agentCode,
            CA.SPL_CODE1 AS splCode1,
            CA.SPL_CODE2 AS splCode2,
            CA.SPL_CODE3 AS splCode3,
            CA.SPL_CODE4 AS splCode4,
            CA.SPL_CODE5 AS splCode5,
            CA.SPL_CODE6 AS splCode6,
            CA.SPL_CODE7 AS splCode7,
            CA.SPL_CODE8 AS splCode8,
            ICS.SCH_COLL_YN AS schCollInd,
            CA.DOC_DLV AS docDlv,
            CA.AWB_ORIGIN AS awbOrigin, 
		    BCD.CHRG_AMT AS osCharge,
            CCC.ALLOW_PACCO AS allowPacco,
            CA.DOC_CHK_REQ AS docChkReq,
            CA.AWB_DEST AS awbDest, 
            CA.DCLOCK_IND AS dcLock,
            CA.DOC_CHK_COMP AS docChkComp,
		    CA.CONTENT AS content, 
     
			A.AWB_CLOSED_YN AS awbClosed,
            (SELECT COUNT(*) FROM CUST_UNDERTAKING CU,AWB CA WHERE 
                               CU.AGENT_CODE = (SELECT AGENT_CODE FROM AWB WHERE AWB_DATE=#awbDate# AND AWB_NO=#awbNo# AND AWB_TYPE='I') AND 
                               CU.CARR_CODE = (SELECT CARR_CODE FROM AWB WHERE AWB_DATE=#awbDate# AND AWB_NO=#awbNo# AND AWB_TYPE='I') AND 
                               CA.AWB_DATE BETWEEN CU.EFF_FROM AND CU.EFF_TO) AS licenceUnder,  
      
            ICS.NOA_IND AS noaSent,
            FOE.DOC_ARR_DATE AS docRecieve,
            (select CONST_CODE from CST_RECV WHERE LM_DATE = (SELECT MAX(LM_DATE) FROM CST_RECV WHERE AWB_NO=#awbNo#)) AS latestCc,
            CA.AWB_RMK AS awbRemark,
            ICS.AIRL_RMK AS airlRmk,
            '' AS manRmk,
            (select RMK from EXP_OFFLOAD_AWB WHERE LM_DATE = (SELECT MAX(LM_DATE) FROM EXP_OFFLOAD_AWB WHERE AWB_DATE=#awbDate# AND AWB_NO=#awbNo#)) AS offloadRmk,
			CA.CSGNE_NAME as consignee,
            CA.CSGNE_ADDR AS consigneAddr,
            CA.CSGNE_ADDR1 AS consigneAddr1,
            CA.CSGNE_ADDR2 AS consigneAddr2,
            CA.CSGNE_ADDR3 AS consigneAddr3,
            CA.CSGNE_ADDR4 AS consigneAddr4,
            CA.CSGNE_ADDR5 AS consigneAddr5,
            CA.SHPR_NAME AS shipperName,
            CA.SHPR_ADDR AS shipperAddr,
            CA.SHPR_ADDR2 AS shipperAddr1,
            CA.SHPR_ADDR3 AS shipperAddr2,
            CA.SHPR_ADDR4 AS shipperAddr3,
            CA.APPNTD_AGENT AS appiontedAgent,
	        CA.AGENT_ADDR1 AS agentAddr,
	        CA.AGENT_ADDR2 AS agentAddr1,
	        CA.AGENT_ADDR3 AS agentAddr2,
	        CA.AGENT_ADDR4 AS agentAddr3,
	        CA.AGENT_ADDR5 AS agentAddr4,
	       (SELECT COUNT(*) FROM (SELECT MANIFEST_PCS,MANIFEST_WT FROM IMP_CAR_SHP WHERE AWB_NO = #awbNo# AND AWB_DATE = #awbDate#)) AS partShipment,
			TO_CHAR(CA.LM_DATE, 'DDMONYY HH24:MI:SS') AS lmDate
	    FROM 
			IMP_CAR_AWB CA
			LEFT JOIN AWB A ON A.AWB_NO = CA.AWB_NO AND A.AWB_DATE = CA.AWB_DATE AND A.AWB_TYPE = 'I' 
			LEFT JOIN GT_OS_CHARGES GT ON GT.AWB_NO = CA.AWB_NO AND GT.AWB_DATE = CA.AWB_DATE
			LEFT JOIN AWB_SHP_STS ASS ON ASS.AWB_NO = CA.AWB_NO AND ASS.AWB_DATE = CA.AWB_DATE
            LEFT JOIN IMP_CAR_SHP ICS ON ICS.AWB_NO = CA.AWB_NO AND ICS.AWB_DATE = CA.AWB_DATE
            LEFT JOIN CST_RECV CST ON CST.AWB_NO = CA.AWB_NO AND CST.FLT_KEY = ICS.FLT_KEY
            LEFT JOIN FLT_OPR_EVENTS FOE ON FOE.FLT_KEY = ICS.FLT_KEY AND DOC_ARR_DATE = #awbDate#
            LEFT JOIN BILL_CHARGE_DTL BCD ON BCD.AWB_NO = CA.AWB_NO AND BCD.AWB_DATE = CA.AWB_DATE
            LEFT JOIN CUST_COMPANY CCC ON CCC.CODE = ICS.AGENT_ID
            
       WHERE
            CA.AWB_NO = #awbNo# AND
            CA.AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY')	AND
            CA.AWB_TYPE = 'I'
            -->
            <!-- Below Query Commented by Surendra Gollapalli on 22nd Dec 2011 START is CAR has been not created even through Shipper,Consignee and Agent info need to fetch from "EDI_FWB" table   -->
            <!--
            
         SELECT 
			CA.ECT_HANDLER AS ectHandler, 
			pkg_common.get_awb_splcodes(CA.awb_no, CA.awb_date, 'I') spl, 	
 			CA.SHPR_NAME AS shprName, 
 			CA.APPNTD_AGENT AS appntdAgent, 
 			CA.AWB_CLOSE_RMK AS awbCloseRmark, 
 			CA.AWB_RMK AS oldAwbRemark,
		    A.AWB_NO AS awbNo,
		    SUBSTR( A.AWB_NO,1,3 ) AS awbNoPFX,
		    SUBSTR( A.AWB_NO,4 ) as awbNoSFX,
		    A.AWB_TYPE AS awbType, 
			CA.CATALOG AS catalog,
            CA.LOCK_IND AS lockYN,
            decode(A.PCS,'','0',A.PCS) AS awbPcs, 
		    trim(TO_CHAR(NVL(A.WT,0),'9999990.00')) AS awbWt,		
		    decode(A.PCS,'','0',A.PCS)||'/'||trim(TO_CHAR(NVL(A.WT,0),'9999990.00')) AS carrPcWt,	
 			A.CARR_CODE AS carrCode,
            (SELECT COUNT(LICENSE) 
         FROM
            CST_LICENSE 
        WHERE
            AWB_NO = #awbNo# AND
            AWB_DATE = #awbDate#) AS licence,
            ICS.CAR_CREATED AS carYN,
            '' AS status,
            TO_CHAR( A.AWB_DATE, 'DDMONYY') AS awbDate,  
            A.IMPCAR_YN AS intelligentChk,
            CA.AGENT_CUST_NO AS agentCode,
            CA.SPL_CODE1 AS splCode1,
            CA.SPL_CODE2 AS splCode2,
            CA.SPL_CODE3 AS splCode3,
            CA.SPL_CODE4 AS splCode4,
            CA.SPL_CODE5 AS splCode5,
            CA.SPL_CODE6 AS splCode6,
            CA.SPL_CODE7 AS splCode7,
            CA.SPL_CODE8 AS splCode8,
            CA.SPL_CODE9 AS splCode9,
            (SELECT COUNT(*) FROM CUST_AIRL_SPL_CODE WHERE SPL_CODE=CA.SPL_CODE1 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=CA.SPL_CODE2 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=CA.SPL_CODE3 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=CA.SPL_CODE4 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=CA.SPL_CODE5 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=CA.SPL_CODE6 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=CA.SPL_CODE7 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=CA.SPL_CODE8 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=CA.SPL_CODE9 AND SPL_TYPE='SPL_VAL') AS shpStatus, 
            CA.VAL_FOR_SCH_COLL AS schCollInd,
            CA.DOC_DLV AS docDlv,
            CA.AWB_ORIGIN AS awbOrigin, 
		    (SELECT SUM(CHRG_AMT) FROM BILL_CHARGE_DTL WHERE AWB_NO = #awbNo# AND AWB_DATE=#awbDate#) AS osCharge,
            CA.ALLOW_PACCO AS allowPacco,
            CA.DOC_CHK_REQ AS docChkReq,
            CA.AWB_DEST AS awbDest, 
            (select case when (select dut_commodity from exp_rcl_hd where awb_no=#awbNo# and awb_date=#awbDate# AND ROWNUM=1) = 'Y' then 'Y'
             else case when (select (select count(*) from cst_dc_dtl where awb_no=#awbNo#) + (select count(*) from cst_code_dtl where awb_no=#awbNo#) as result from dual) > 0
             then 'Y'
             else 'N'
             end
             end
             from dual) AS dcLock,
            CA.DOC_CHK_COMP AS docChkComp,
		    CA.CONTENT AS content, 
     		A.AWB_CLOSED_YN AS awbClosed,
            (SELECT COUNT(*) FROM CUST_UNDERTAKING CU WHERE 
                               CU.AGENT_CODE = (SELECT AGENT_CODE FROM AWB WHERE AWB_DATE=#awbDate# AND AWB_NO=#awbNo#) AND 
                               CU.CARR_CODE = (SELECT CARR_CODE FROM AWB WHERE AWB_DATE=#awbDate# AND AWB_NO=#awbNo#) AND 
                               CA.AWB_DATE BETWEEN CU.EFF_FROM AND CU.EFF_TO) AS licenceUnder,  
      
            ICS.NOA_IND AS noaSent,
            (SELECT COUNT(DOC_RCV) FROM IMP_CUST_CLR_LIST WHERE AWB_NO=#awbNo# AND AWB_DATE = #awbDate# AND DOC_RCV = 'Y') AS docRecieve,
            VCCODE.CC_CODE AS latestCc,
            CA.AWB_RMK AS awbRemark,
            (DECODE((select rmk from awb_rmk where awb_no = #awbNo# and awb_date=#awbDate# and rownum=1),'',CA.AIRLN_RMK,(select rmk from awb_rmk where awb_no=#awbNo# and awb_date=#awbDate# and rownum=1))) AS airlRmk,
			(DECODE((select rmk from awb_rmk where awb_no = #awbNo# and awb_date=#awbDate# and rownum=1),'',CA.AIRLN_RMK,(select rmk from awb_rmk where awb_no=#awbNo# and awb_date=#awbDate# and rownum=1))) AS oldAirlRmk,
			(select SEQ_NO from awb_rmk where awb_no=#awbNo# and awb_date=#awbDate# and rownum=1) AS seqNo,						
            (DECODE(A.INT_YN,'N','N',DECODE(A.AMD_YN,'N','N',DECODE(A.IMPCAR_YN,'N','N',DECODE(A.LBS_YN,'N','N',DECODE(A.DOCACC_YN,'N','N',DECODE(A.LPPS_YN,'N','N','Y'))))))) AS intStatus,
            CA.WH_RMK AS whRmk,
			CA.WH_RMK AS oldWHRmk,
            '' AS manRmk,
            (select RMK from EXP_OFFLOAD_AWB WHERE LM_DATE = (SELECT MAX(LM_DATE) FROM EXP_OFFLOAD_AWB WHERE AWB_DATE=#awbDate# AND AWB_NO=#awbNo#) AND rownum=1) AS offloadRmk,
			CA.CSGNE_NAME as consignee,
            CA.CSGNE_ADDR AS consigneAddr,
            CA.CSGNE_ADDR1 AS consigneAddr1,
            CA.CSGNE_ADDR2 AS consigneAddr2,
            CA.CSGNE_ADDR3 AS consigneAddr3,
            CA.CSGNE_ADDR4 AS consigneAddr4,
            CA.CSGNE_ADDR5 AS consigneAddr5,
            decode(CA.CSGNE_PLACE,'','Hong Kong',CA.CSGNE_PLACE) as consCity,
	        decode(CA.CSGNE_CTRY_CODE,'',(select code_desc from mast_country mcntr where mcntr.code = 'HK'),(select code_desc from mast_country mcntr1 where mcntr1.code = CA.CSGNE_CTRY_CODE)) as consCountry,
            CA.SHPR_NAME AS shipperName,
            CA.SHPR_ADD1 AS shipperAddr,
            CA.SHPR_ADD2 AS shipperAddr1,
            CA.SHPR_ADD3 AS shipperAddr2,
            CA.SHPR_ADD4 AS shipperAddr3,
            decode(CA.SHPR_CTRY_CODE,'',(select code_desc from mast_country mcntr where mcntr.code = 'HK'),(select code_desc from mast_country mcntr1 where mcntr1.code = CA.SHPR_CTRY_CODE)) as shprCountry,
	        decode(CA.SHPR_PLACE,'','Hong Kong',CA.SHPR_PLACE) as shprCity,
            CA.APPNTD_AGENT AS appiontedAgent,
	        CA.AGENT_ADDR1 AS agentAddr,
	        CA.AGENT_ADDR2 AS agentAddr1,
	        CA.AGENT_ADDR3 AS agentAddr2,
	        CA.AGENT_ADDR4 AS agentAddr3,
	        CA.AGENT_ADDR5 AS agentAddr4,
	        ((select AWB_IMAGE_NAME FROM AWB_IMAGE WHERE seq_no = (SELECT MAX(SEQ_NO) FROM AWB_IMAGE WHERE AWB_NO = #awbNo# AND AWB_DATE = #awbDate#) )) AS transactionId,
	        DECODE(AI.AWB_IMAGE_NAME,'','Y','N') AS attachmentStatus,
	      (select count(*) from imp_car_shp shp,imp_car_awb awb where shp.awb_no = awb.awb_no and shp.awb_date = awb.awb_date and awb.awb_pcs > shp.manifest_pcs and shp.awb_no=#awbNo# and shp.awb_date=#awbDate#) AS partShipment,
	      case when (select count(1) from cust_interaction where awb_no = #awbNo# and comp_date is null and follow_up_date is not null) > 0 then 'Y' else 'N' end AS pendingAction,
			TO_CHAR(CA.LM_DATE, 'DDMONYY HH24:MI:SS') AS lmDate
	  FROM 
	   AWB A,
	   IMP_CAR_AWB CA,
       IMP_CAR_SHP ICS,
       AWB_IMAGE AI,
       V_CST_IMP_CC_CODE_AWB VCCODE
   WHERE
       CA.AWB_NO(+) = A.AWB_NO AND
       CA.AWB_DATE(+) = A.AWB_DATE AND
       ICS.AWB_NO(+) = A.AWB_NO AND 
       ICS.AWB_DATE(+) = A.AWB_DATE AND
       AI.AWB_NO(+) = A.AWB_NO AND
       AI.AWB_DATE(+) = A.AWB_DATE AND
       VCCODE.FLT_KEY(+) = ICS.FLT_KEY AND 
       VCCODE.FLT_DATE(+) = ICS.FLT_DATE AND
       VCCODE.AWB_NO(+)=ICS.AWB_NO AND
       VCCODE.HAWB_NO(+)='000000000000000000' AND
       A.AWB_NO = #awbNo# AND
       A.AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY')       
      
      -->
      <!-- Below Query Commented by Surendra Gollapalli on 22nd Dec 2011 END, is CAR has been not created even through Shipper,Consignee and Agent info need to fetch from "EDI_FWB" table   -->
	       SELECT 
				CA.ECT_HANDLER AS ectHandler, 
				pkg_common.get_awb_splcodes(CA.awb_no, CA.awb_date, 'I') spl, 	
	 			CA.SHPR_NAME AS shprName, 
	 			CA.APPNTD_AGENT AS appntdAgent, 
	 			CA.AWB_CLOSE_RMK AS awbCloseRmark, 
	 			CA.AWB_RMK AS oldAwbRemark,
			    A.AWB_NO AS awbNo,
			    SUBSTR( A.AWB_NO,1,3 ) AS awbNoPFX,
			    SUBSTR( A.AWB_NO,4 ) as awbNoSFX,
			    A.AWB_TYPE AS awbType, 
			    decode(A.CATALOG,'',CA.CATALOG,A.CATALOG) AS catalog,
			    (SELECT 
			       (CASE WHEN decode(a.catalog,'EG','C','ES','C','IG','C','TG','C','TA','C','EU','M','TM','M','EO','Q','IO','Q','C') = 'C' THEN 
			       (CASE WHEN (SELECT COUNT(1) FROM CUST_AIRL_SPL_CODE SPLCODE WHERE SPLCODE.SPL_TYPE='SPL_COURIER_SHC' AND SPLCODE.CARR_CODE = A.CARR_CODE AND (SPLCODE.SPL_CODE = a.SPL_CODE1 OR SPLCODE.SPL_CODE = a.SPL_CODE2 OR SPLCODE.SPL_CODE = a.SPL_CODE3 OR SPLCODE.SPL_CODE = a.SPL_CODE4 OR SPLCODE.SPL_CODE = a.SPL_CODE5 OR SPLCODE.SPL_CODE = a.SPL_CODE6 OR SPLCODE.SPL_CODE = a.SPL_CODE7 OR SPLCODE.SPL_CODE = a.SPL_CODE8 OR SPLCODE.SPL_CODE = a.SPL_CODE9)) > 0
			       THEN 'Q' ELSE decode(a.catalog,'EG','C','ES','C','IG','C','TG','C','TA','C','EU','M','TM','M','EO','Q','IO','Q','C') END)
			       ELSE decode(a.catalog,'EG','C','ES','C','IG','C','TG','C','TA','C','EU','M','TM','M','EO','Q','IO','Q','C') END) as cargoType	  
				FROM AWB  A WHERE  A.AWB_NO = #awbNo# AND A.AWB_DATE = #awbDate#) as cargoType,
	            CA.LOCK_IND AS lockYN,
	            decode(A.PCS,'','0',A.PCS) AS awbPcs, 
			    trim(TO_CHAR(NVL(A.WT,0),'9999990.00')) AS awbWt,						
	 			A.CARR_CODE AS carrCode,
	 			decode(A.PCS,'','0',A.PCS)||'/'||trim(TO_CHAR(NVL(A.WT,0),'9999990.00')) AS carrPcWt,
	 			PKG_CST_DC.awb_enq_licenses_count(#awbNo#,#awbDate#) AS licence,
	            ICS.CAR_CREATED AS carYN,
	            '' AS status,
	            TO_CHAR( A.AWB_DATE, 'DDMONYY') AS awbDate,  
	            A.IMPCAR_YN AS intelligentChk,
	            CA.AGENT_CUST_NO AS agentCode,
	            A.SPL_CODE1 AS splCode1,
	            A.SPL_CODE2 AS splCode2,
	            A.SPL_CODE3 AS splCode3,
	            A.SPL_CODE4 AS splCode4,
	            A.SPL_CODE5 AS splCode5,
	            A.SPL_CODE6 AS splCode6,
	            A.SPL_CODE7 AS splCode7,
	            A.SPL_CODE8 AS splCode8,
	            A.SPL_CODE9 AS splCode9,
	            (SELECT COUNT(*) FROM CUST_AIRL_SPL_CODE WHERE SPL_CODE=A.SPL_CODE1 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=A.SPL_CODE2 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=A.SPL_CODE3 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=A.SPL_CODE4 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=A.SPL_CODE5 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=A.SPL_CODE6 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=A.SPL_CODE7 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=A.SPL_CODE8 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=A.SPL_CODE9 AND SPL_TYPE='SPL_VAL') AS shpStatus, 
	            CA.VAL_FOR_SCH_COLL AS schCollInd,
	            CA.DOC_DLV AS docDlv,
	            CA.AWB_ORIGIN AS awbOrigin, 
			    (SELECT SUM(CHRG_AMT) FROM BILL_CHARGE_DTL WHERE AWB_NO = #awbNo# AND AWB_DATE=#awbDate#) AS osCharge,
	            CA.ALLOW_PACCO AS allowPacco,
	            CA.DOC_CHK_REQ AS docChkReq,
	            CA.AWB_DEST AS awbDest, 
	            (select case when (select dut_commodity from exp_rcl_hd where awb_no=#awbNo# and awb_date=#awbDate# AND ROWNUM=1) = 'Y' then 'Y'
	             else case when (select (select count(*) from cst_dc_dtl where awb_no=#awbNo#) + (select count(*) from cst_code_dtl where awb_no=#awbNo#) as result from dual) > 0
	             then 'Y'
	             else 'N'
	             end
	             end
	             from dual) AS dcLock,
	            CA.DOC_CHK_COMP AS docChkComp,
			    CA.CONTENT AS content, 
	     		A.AWB_CLOSED_YN AS awbClosed,
	            (SELECT COUNT(*) FROM CUST_UNDERTAKING CU WHERE 
	                               CU.AGENT_CODE = (SELECT AGENT_CODE FROM AWB WHERE AWB_DATE=#awbDate# AND AWB_NO=#awbNo#) AND 
	                               CU.CARR_CODE = (SELECT CARR_CODE FROM AWB WHERE AWB_DATE=#awbDate# AND AWB_NO=#awbNo#) AND 
	                               CA.AWB_DATE BETWEEN CU.EFF_FROM AND CU.EFF_TO) AS licenceUnder,  
	      
	            ICS.NOA_IND AS noaSent,
	            (SELECT COUNT(DOC_RCV) FROM IMP_CUST_CLR_LIST WHERE AWB_NO=#awbNo# AND AWB_DATE = #awbDate# AND DOC_RCV = 'Y') AS docRecieve,
	            (SELECT cc_code FROM (SELECT t1.cc_code FROM V_CST_IMP_CC_CODE_AWB_ALL t1,mast_constraint_code t2 WHERE t1.cc_code = t2.code AND awb_no = #awbNo# AND AWB_DATE=#awbDate# AND NVL(hawb_no, '000000000000000000') = '000000000000000000' and t1.flt_key not like 'NB%' ORDER BY recv_date DESC, priority DESC) where rownum = 1) AS latestCc,            
	            CA.AWB_RMK AS awbRemark,
	      (DECODE((select count(1) from awb where awb_no = #awbNo# and awb_date=#awbDate# AND TRIM(AIRLN_RMK) IS NOT NULL and rownum=1),0,
	      (select rmk from awb_rmk where awb_no=#awbNo# and rownum=1),DECODE(CA.AIRLN_RMK,NULL,A.AIRLN_RMK,CA.AIRLN_RMK))) AS airlRmk,
				(DECODE((select count(1) from awb where awb_no = #awbNo# and awb_date=#awbDate# AND TRIM(AIRLN_RMK) IS NOT NULL and rownum=1),0,
	      (select rmk from awb_rmk where awb_no=#awbNo# and rownum=1),DECODE(CA.AIRLN_RMK,NULL,A.AIRLN_RMK,CA.AIRLN_RMK))) AS oldAirlRmk,
				(select SEQ_NO from awb_rmk where awb_no=#awbNo# and rownum=1) AS seqNo,						
	            (DECODE(A.INT_YN,'N','N',DECODE(A.AMD_YN,'N','N',DECODE(A.IMPCAR_YN,'N','N',DECODE(A.LBS_YN,'N','N',DECODE(A.DOCACC_YN,'N','N',DECODE(A.LPPS_YN,'N','N','Y'))))))) AS intStatus,
	           (DECODE((select count(1) from imp_car_awb where awb_no = #awbNo# and awb_date=#awbDate# and rownum=1),0,(select awb_rmk from awb where awb_no=#awbNo# and awb_date=#awbDate# and rownum=1),CA.WH_RMK)) AS whRmk,
	            (DECODE((select count(1) from imp_car_awb where awb_no = #awbNo# and awb_date=#awbDate# and rownum=1),0,(select awb_rmk from awb where awb_no=#awbNo# and awb_date=#awbDate# and rownum=1),CA.WH_RMK)) AS oldWHRmk,
	            '' AS manRmk,
	            (select DECODE(CONFIRMED_RMK,NULL,RMK,CONFIRMED_RMK) from exp_offload_uld_awb where awb_no=#awbNo# and awb_date=#awbDate# and (confirmed_rmk is not null OR RMK IS NOT NULL) AND ROWNUM=1) AS offloadRmk,
				CA.CSGNE_NAME as consignee,
	            CA.CSGNE_ADDR AS consigneAddr,
	            CA.CSGNE_ADDR1 AS consigneAddr1,
	            CA.CSGNE_ADDR2 AS consigneAddr2,
	            CA.CSGNE_ADDR3 AS consigneAddr3,
	            CA.CSGNE_ADDR4 AS consigneAddr4,
	            CA.CSGNE_ADDR5 AS consigneAddr5,
	            decode(CA.CSGNE_PLACE,'','Hong Kong',CA.CSGNE_PLACE) as consCity,
		        decode(CA.CSGNE_CTRY_CODE,'',(select code_desc from mast_country mcntr where mcntr.code = 'HK'),(select code_desc from mast_country mcntr1 where mcntr1.code = CA.CSGNE_CTRY_CODE)) as consCountry,
	            CA.SHPR_NAME AS shipperName,
	            CA.SHPR_ADD1 AS shipperAddr,
	            CA.SHPR_ADD2 AS shipperAddr1,
	            CA.SHPR_ADD3 AS shipperAddr2,
	            nvl(CA.SHPR_ADD4,CA.SHPR_STATE_PROVINCE) AS shipperAddr3,
	            decode(CA.SHPR_CTRY_CODE,'',(select code_desc from mast_country mcntr where mcntr.code = 'HK'),(select code_desc from mast_country mcntr1 where mcntr1.code = CA.SHPR_CTRY_CODE)) as shprCountry,
		        decode(CA.SHPR_PLACE,'','',CA.SHPR_PLACE) as shprCity,
	            CA.APPNTD_AGENT AS appiontedAgent,
	            nvl(CA.AGENT_ADDR1,CA.AGENT_PLACE) as agentAddr,
		        CA.AGENT_ADDR2 AS agentAddr1,
		        CA.AGENT_ADDR3 AS agentAddr2,
		        CA.AGENT_ADDR4 AS agentAddr3,
		        CA.AGENT_ADDR5 AS agentAddr4,
		        ((select AWB_IMAGE_NAME FROM AWB_IMAGE WHERE seq_no = (SELECT MAX(SEQ_NO) FROM AWB_IMAGE WHERE AWB_NO = #awbNo# AND AWB_DATE = #awbDate#) )) AS transactionId,
		        DECODE(AI.AWB_IMAGE_NAME,'','Y','N') AS attachmentStatus,
		      (select count(*) from imp_car_shp shp,imp_car_awb awb where shp.awb_no = awb.awb_no and shp.awb_date = awb.awb_date and awb.awb_pcs > shp.manifest_pcs and shp.awb_no=#awbNo# and shp.awb_date=#awbDate#) AS partShipment,
		      case when (select count(1) from cust_interaction where awb_no = #awbNo# and comp_date is null and follow_up_date is not null) > 0 then 'Y' else 'N' end AS pendingAction,
				TO_CHAR(CA.LM_DATE, 'DDMONYY HH24:MI:SS') AS lmDate,
				CA.SHPR_STATE_PROVINCE shipperState,
				CA.CSGNE_STATE_PROVINCE consigneeState,
				CA.bypass_rel as bypassrel,
				A.TSA_PASS_IND as tsaPassInd,
				A.CARR_RA as carrierRaInd,
				nvl(A.BSB_IND,'NA') as bsbInd,
				 (SELECT FUN_GET_ESRF_STATUS(#awbNo#,#awbDate#) as eSRFEligibilityStatus from DUAL)as eSRFEligibilityStatus,
				 
			(SELECT cc_code FROM V_CST_VSL_CC_CODE_AWB WHERE AWB_NO = #awbNo# AND AWB_DATE = #awbDate# and NVL(hawb_no, '000000000000000000') = '000000000000000000' and ROWNUM = 1) as stfsCode
		   FROM 
		   AWB A,
		   IMP_CAR_AWB CA,
	       IMP_CAR_SHP ICS,
	       AWB_IMAGE AI
	  WHERE
	       CA.AWB_NO(+) = A.AWB_NO AND
	       CA.AWB_DATE(+) = A.AWB_DATE AND
	       ICS.AWB_NO(+) = A.AWB_NO AND 
	       ICS.AWB_DATE(+) = A.AWB_DATE AND
	       AI.AWB_NO(+) = A.AWB_NO AND
	       AI.AWB_DATE(+) = A.AWB_DATE AND
	       A.AWB_NO = #awbNo# AND
	       A.AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY')
	       AND ((select count(1) from imp_car_awb where awb_no=#awbNo# and awb_date=#awbDate#) > 0)
	        UNION
	         SELECT 
				'' AS ectHandler, 
				pkg_common.get_awb_splcodes(FWB.awb_no, FWB.awb_date, 'I') spl, 	
	 			FWB.SHPR_NAME AS shprName, 
	 			FWB.AGENT_NAME AS appntdAgent, 
	 			'' AS awbCloseRmark, 
	 			'' AS oldAwbRemark,
			    A.AWB_NO AS awbNo,
			    SUBSTR( A.AWB_NO,1,3 ) AS awbNoPFX,
			    SUBSTR( A.AWB_NO,4 ) as awbNoSFX,
			    A.AWB_TYPE AS awbType, 
				A.CATALOG AS catalog,
				(SELECT 
			       (CASE WHEN decode(a.catalog,'EG','C','ES','C','IG','C','TG','C','TA','C','EU','M','TM','M','EO','Q','IO','Q','C') = 'C' THEN 
			       (CASE WHEN (SELECT COUNT(1) FROM CUST_AIRL_SPL_CODE SPLCODE WHERE SPLCODE.SPL_TYPE='SPL_COURIER_SHC' AND SPLCODE.CARR_CODE = A.CARR_CODE AND (SPLCODE.SPL_CODE = a.SPL_CODE1 OR SPLCODE.SPL_CODE = a.SPL_CODE2 OR SPLCODE.SPL_CODE = a.SPL_CODE3 OR SPLCODE.SPL_CODE = a.SPL_CODE4 OR SPLCODE.SPL_CODE = a.SPL_CODE5 OR SPLCODE.SPL_CODE = a.SPL_CODE6 OR SPLCODE.SPL_CODE = a.SPL_CODE7 OR SPLCODE.SPL_CODE = a.SPL_CODE8 OR SPLCODE.SPL_CODE = a.SPL_CODE9)) > 0
			       THEN 'Q' ELSE decode(a.catalog,'EG','C','ES','C','IG','C','TG','C','TA','C','EU','M','TM','M','EO','Q','IO','Q','C') END)
			       ELSE decode(a.catalog,'EG','C','ES','C','IG','C','TG','C','TA','C','EU','M','TM','M','EO','Q','IO','Q','C') END) as cargoType	  
				FROM AWB  A WHERE  A.AWB_NO = #awbNo# AND A.AWB_DATE = #awbDate#) as cargoType,
	            '' AS lockYN,
	            decode(A.PCS,'','0',A.PCS) AS awbPcs, 
			    trim(TO_CHAR(NVL(A.WT,0),'9999990.00')) AS awbWt,
	 			A.CARR_CODE AS carrCode,
	 			decode(A.PCS,'','0',A.PCS)||'/'||trim(TO_CHAR(NVL(A.WT,0),'9999990.00')) AS carrPcWt,	
	            PKG_CST_DC.awb_enq_licenses_count(#awbNo#,#awbDate#) AS licence,			    
	            NVL(ICS.CAR_CREATED,'N') AS carYN,
	            '' AS status,
	            TO_CHAR( A.AWB_DATE, 'DDMONYY') AS awbDate,  
	            A.IMPCAR_YN AS intelligentChk,
	            '' AS agentCode,
	            A.SPL_CODE1 AS splCode1,
	            A.SPL_CODE2 AS splCode2,
	            A.SPL_CODE3 AS splCode3,
	            A.SPL_CODE4 AS splCode4,
	            A.SPL_CODE5 AS splCode5,
	            A.SPL_CODE6 AS splCode6,
	            A.SPL_CODE7 AS splCode7,
	            A.SPL_CODE8 AS splCode8,
	            A.SPL_CODE9 AS splCode9,
	            (SELECT COUNT(*) FROM CUST_AIRL_SPL_CODE WHERE SPL_CODE=FWB.SPH_SPL_CODE1 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=FWB.SPH_SPL_CODE2 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=FWB.SPH_SPL_CODE3 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=FWB.SPH_SPL_CODE4 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=FWB.SPH_SPL_CODE5 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=FWB.SPH_SPL_CODE6 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=FWB.SPH_SPL_CODE7 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=FWB.SPH_SPL_CODE8 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=FWB.SPH_SPL_CODE9 AND SPL_TYPE='SPL_VAL') AS shpStatus, 
	            '' AS schCollInd,
	            '' AS docDlv,
	            FWB.ORG AS awbOrigin, 
			    (SELECT SUM(CHRG_AMT) FROM BILL_CHARGE_DTL WHERE AWB_NO = #awbNo# AND AWB_DATE=#awbDate#) AS osCharge,
	            '' AS allowPacco,
	            '' AS docChkReq,
	            FWB.DES AS awbDest, 
	            (select case when (select dut_commodity from exp_rcl_hd where awb_no=#awbNo# and awb_date=#awbDate# AND ROWNUM=1) = 'Y' then 'Y'
	             else case when (select (select count(*) from cst_dc_dtl where awb_no=#awbNo#) + (select count(*) from cst_code_dtl where awb_no=#awbNo#) as result from dual) > 0
	             then 'Y'
	             else 'N'
	             end
	             end
	             from dual) AS dcLock,
	            '' AS docChkComp,
			    '' AS content, 
	     		A.AWB_CLOSED_YN AS awbClosed,
	            (SELECT COUNT(*) FROM CUST_UNDERTAKING CU WHERE 
	                               CU.AGENT_CODE = (SELECT AGENT_CODE FROM AWB WHERE AWB_DATE=#awbDate# AND AWB_NO=#awbNo#) AND 
	                               CU.CARR_CODE = (SELECT CARR_CODE FROM AWB WHERE AWB_DATE=#awbDate# AND AWB_NO=#awbNo#) AND 
	                               FWB.AWB_DATE BETWEEN CU.EFF_FROM AND CU.EFF_TO) AS licenceUnder,  
	      
	            ICS.NOA_IND AS noaSent,
	            (SELECT COUNT(DOC_RCV) FROM IMP_CUST_CLR_LIST WHERE AWB_NO=#awbNo# AND AWB_DATE = #awbDate# AND DOC_RCV = 'Y') AS docRecieve,
	            (SELECT cc_code FROM (SELECT t1.cc_code FROM V_CST_IMP_CC_CODE_AWB_ALL t1,mast_constraint_code t2 WHERE t1.cc_code = t2.code AND awb_no = #awbNo# AND AWB_DATE=#awbDate# AND NVL(hawb_no, '000000000000000000') = '000000000000000000' and t1.flt_key not like 'NB%' ORDER BY recv_date DESC, priority DESC) where rownum = 1) AS latestCc,
	            '' AS awbRemark,
	            (DECODE((select rmk from awb_rmk where awb_no = #awbNo# and rownum=1),'',A.AIRLN_RMK,(select rmk from awb_rmk where awb_no=#awbNo# and rownum=1))) AS airlRmk,
				(DECODE((select rmk from awb_rmk where awb_no = #awbNo# and rownum=1),'',A.AIRLN_RMK,(select rmk from awb_rmk where awb_no=#awbNo# and rownum=1))) AS oldAirlRmk,
				(select SEQ_NO from awb_rmk where awb_no=#awbNo# and rownum=1) AS seqNo,						
	            (DECODE(A.INT_YN,'N','N',DECODE(A.AMD_YN,'N','N',DECODE(A.IMPCAR_YN,'N','N',DECODE(A.LBS_YN,'N','N',DECODE(A.DOCACC_YN,'N','N',DECODE(A.LPPS_YN,'N','N','Y'))))))) AS intStatus,
	            '' AS whRmk,
				'' AS oldWHRmk,
	            '' AS manRmk,
	            (select DECODE(CONFIRMED_RMK,NULL,RMK,CONFIRMED_RMK) from exp_offload_uld_awb where awb_no=#awbNo# and awb_date=#awbDate# and (confirmed_rmk is not null OR RMK IS NOT NULL) AND ROWNUM=1) AS offloadRmk,
				FWB.CSGNE_NAME as consignee,
	            FWB.CSGNE_ADDR AS consigneAddr,
	            FWB.CSGNE_STATE_PROVINCE AS consigneAddr1,
	            '' AS consigneAddr2,
	            '' AS consigneAddr3,
	            '' AS consigneAddr4,
	            '' AS consigneAddr5,
	            decode(FWB.CSGNE_PLACE,'','Hong Kong',FWB.CSGNE_PLACE) as consCity,
		        decode(FWB.CSGNE_CTRY_CODE,'',(select code_desc from mast_country mcntr where mcntr.code = 'HK'),(select code_desc from mast_country mcntr1 where mcntr1.code = FWB.CSGNE_CTRY_CODE)) as consCountry,
	            FWB.SHPR_NAME AS shipperName,
	            FWB.SHPR_ADDR AS shipperAddr,
	            decode(FWB.SHPR_PLACE,'','Hong Kong',FWB.SHPR_PLACE) AS shipperAddr1,
							'' AS shipperAddr2,            
	            FWB.SHPR_STATE_PROVINCE AS shipperAddr3,
	            decode(FWB.SHPR_CTRY_CODE,'',(select code_desc from mast_country mcntr where mcntr.code = 'HK'),(select code_desc from mast_country mcntr1 where mcntr1.code = FWB.SHPR_CTRY_CODE)) as shprCountry,
		        '' as shprCity,
	            FWB.AGENT_NAME AS appiontedAgent,
		        FWB.AGENT_PLACE AS agentAddr,
		        '' AS agentAddr1,
		        '' AS agentAddr2,
		        '' AS agentAddr3,
		        '' AS agentAddr4,
		        ((select AWB_IMAGE_NAME FROM AWB_IMAGE WHERE seq_no = (SELECT MAX(SEQ_NO) FROM AWB_IMAGE WHERE AWB_NO = #awbNo# AND AWB_DATE = #awbDate#) )) AS transactionId,
		        DECODE(AI.AWB_IMAGE_NAME,'','Y','N') AS attachmentStatus,
		      (select count(*) from imp_car_shp shp,imp_car_awb awb where shp.awb_no = awb.awb_no and shp.awb_date = awb.awb_date and awb.awb_pcs > shp.manifest_pcs and shp.awb_no=#awbNo# and shp.awb_date=#awbDate#) AS partShipment,
		      case when (select count(1) from cust_interaction where awb_no = #awbNo# and comp_date is null and follow_up_date is not null) > 0 then 'Y' else 'N' end AS pendingAction,
				TO_CHAR(FWB.LM_DATE, 'DDMONYY HH24:MI:SS') AS lmDate,
				'' shipperState,
				'' consigneeState,
				'N' as bypassrel,
				A.TSA_PASS_IND as tsaPassInd,
				A.CARR_RA as carrierRaInd,
				nvl(A.BSB_IND,'NA') as bsbInd,
				(SELECT cc_code FROM V_CST_VSL_CC_CODE_AWB WHERE AWB_NO = #awbNo# AND AWB_DATE = #awbDate# and NVL(hawb_no, '000000000000000000') = '000000000000000000' and ROWNUM = 1) as stfsCode,
				 (SELECT FUN_GET_ESRF_STATUS(#awbNo#,#awbDate#) as eSRFEligibilityStatus from DUAL)as eSRFEligibilityStatus
		  FROM 
		   AWB A,
		   EDI_FWB FWB,
	       IMP_CAR_SHP ICS,
	       AWB_IMAGE AI
	   WHERE
	       FWB.AWB_NO(+) = A.AWB_NO AND
	       FWB.AWB_DATE(+) = A.AWB_DATE AND
	       ICS.AWB_NO(+) = A.AWB_NO AND 
	       ICS.AWB_DATE(+) = A.AWB_DATE AND
	       AI.AWB_NO(+) = A.AWB_NO AND
	       AI.AWB_DATE(+) = A.AWB_DATE AND
	       A.AWB_NO = #awbNo# AND
	       A.AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY')
	        AND ((select count(1) from imp_car_awb where awb_no=#awbNo# and awb_date=#awbDate#) = 0)
	        UNION
	         SELECT 
				CA.ECT_HANDLER AS ectHandler, 
				pkg_common.get_awb_splcodes(CA.awb_no, CA.awb_date, 'I') spl, 	
	 			CA.SHPR_NAME AS shprName, 
	 			CA.APPNTD_AGENT AS appntdAgent, 
	 			CA.AWB_CLOSE_RMK AS awbCloseRmark, 
	 			CA.AWB_RMK AS oldAwbRemark,
			    A.AWB_NO AS awbNo,
			    SUBSTR( A.AWB_NO,1,3 ) AS awbNoPFX,
			    SUBSTR( A.AWB_NO,4 ) as awbNoSFX,
			    A.AWB_TYPE AS awbType, 
			    decode(A.CATALOG,'',CA.CATALOG,A.CATALOG) AS catalog,
			    (SELECT 
			       (CASE WHEN decode(a.catalog,'EG','C','ES','C','IG','C','TG','C','TA','C','EU','M','TM','M','EO','Q','IO','Q','C') = 'C' THEN 
			       (CASE WHEN (SELECT COUNT(1) FROM CUST_AIRL_SPL_CODE SPLCODE WHERE SPLCODE.SPL_TYPE='SPL_COURIER_SHC' AND SPLCODE.CARR_CODE = A.CARR_CODE AND (SPLCODE.SPL_CODE = a.SPL_CODE1 OR SPLCODE.SPL_CODE = a.SPL_CODE2 OR SPLCODE.SPL_CODE = a.SPL_CODE3 OR SPLCODE.SPL_CODE = a.SPL_CODE4 OR SPLCODE.SPL_CODE = a.SPL_CODE5 OR SPLCODE.SPL_CODE = a.SPL_CODE6 OR SPLCODE.SPL_CODE = a.SPL_CODE7 OR SPLCODE.SPL_CODE = a.SPL_CODE8 OR SPLCODE.SPL_CODE = a.SPL_CODE9)) > 0
			       THEN 'Q' ELSE decode(a.catalog,'EG','C','ES','C','IG','C','TG','C','TA','C','EU','M','TM','M','EO','Q','IO','Q','C') END)
			       ELSE decode(a.catalog,'EG','C','ES','C','IG','C','TG','C','TA','C','EU','M','TM','M','EO','Q','IO','Q','C') END) as cargoType	  
				FROM AWB  A WHERE  A.AWB_NO = #awbNo# AND A.AWB_DATE = #awbDate#) as cargoType,
	            CA.LOCK_IND AS lockYN,
	            decode(A.PCS,'','0',A.PCS) AS awbPcs, 
			    trim(TO_CHAR(NVL(A.WT,0),'9999990.00')) AS awbWt,						
	 			A.CARR_CODE AS carrCode,
	 			decode(A.PCS,'','0',A.PCS)||'/'||trim(TO_CHAR(NVL(A.WT,0),'9999990.00')) AS carrPcWt,	
	            PKG_CST_DC.awb_enq_licenses_count(#awbNo#,#awbDate#) AS licence,
	            ICS.CAR_CREATED AS carYN,
	            '' AS status,
	            TO_CHAR( A.AWB_DATE, 'DDMONYY') AS awbDate,  
	            A.IMPCAR_YN AS intelligentChk,
	            CA.AGENT_CUST_NO AS agentCode,
	            CA.SPL_CODE1 AS splCode1,
	            CA.SPL_CODE2 AS splCode2,
	            CA.SPL_CODE3 AS splCode3,
	            CA.SPL_CODE4 AS splCode4,
	            CA.SPL_CODE5 AS splCode5,
	            CA.SPL_CODE6 AS splCode6,
	            CA.SPL_CODE7 AS splCode7,
	            CA.SPL_CODE8 AS splCode8,
	            CA.SPL_CODE9 AS splCode9,
	            (SELECT COUNT(*) FROM CUST_AIRL_SPL_CODE WHERE SPL_CODE=CA.SPL_CODE1 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=CA.SPL_CODE2 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=CA.SPL_CODE3 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=CA.SPL_CODE4 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=CA.SPL_CODE5 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=CA.SPL_CODE6 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=CA.SPL_CODE7 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=CA.SPL_CODE8 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=CA.SPL_CODE9 AND SPL_TYPE='SPL_VAL') AS shpStatus, 
	            CA.VAL_FOR_SCH_COLL AS schCollInd,
	            CA.DOC_DLV AS docDlv,
	            CA.AWB_ORIGIN AS awbOrigin, 
			    (SELECT SUM(CHRG_AMT) FROM BILL_CHARGE_DTL WHERE AWB_NO = #awbNo# AND AWB_DATE=#awbDate#) AS osCharge,
	            CA.ALLOW_PACCO AS allowPacco,
	            CA.DOC_CHK_REQ AS docChkReq,
	            CA.AWB_DEST AS awbDest, 
	            (select case when (select dut_commodity from exp_rcl_hd where awb_no=#awbNo# and awb_date=#awbDate# AND ROWNUM=1) = 'Y' then 'Y'
	             else case when (select (select count(*) from cst_dc_dtl where awb_no=#awbNo#) + (select count(*) from cst_code_dtl where awb_no=#awbNo#) as result from dual) > 0
	             then 'Y'
	             else 'N'
	             end
	             end
	             from dual) AS dcLock,
	            CA.DOC_CHK_COMP AS docChkComp,
			    CA.CONTENT AS content, 
	     		A.AWB_CLOSED_YN AS awbClosed,
	            (SELECT COUNT(*) FROM CUST_UNDERTAKING CU WHERE 
	                               CU.AGENT_CODE = (SELECT AGENT_CODE FROM AWB WHERE AWB_DATE=#awbDate# AND AWB_NO=#awbNo#) AND 
	                               CU.CARR_CODE = (SELECT CARR_CODE FROM AWB WHERE AWB_DATE=#awbDate# AND AWB_NO=#awbNo#) AND 
	                               CA.AWB_DATE BETWEEN CU.EFF_FROM AND CU.EFF_TO) AS licenceUnder,  
	      
	            ICS.NOA_IND AS noaSent,
	            (SELECT COUNT(DOC_RCV) FROM IMP_CUST_CLR_LIST WHERE AWB_NO=#awbNo# AND AWB_DATE = #awbDate# AND DOC_RCV = 'Y') AS docRecieve,
	            (SELECT cc_code FROM (SELECT t1.cc_code FROM V_CST_IMP_CC_CODE_AWB_ALL t1,mast_constraint_code t2 WHERE t1.cc_code = t2.code AND awb_no = #awbNo# AND AWB_DATE=#awbDate# AND NVL(hawb_no, '000000000000000000') = '000000000000000000' and t1.flt_key not like 'NB%' ORDER BY recv_date DESC, priority DESC) where rownum = 1) AS latestCc,
	            CA.AWB_RMK AS awbRemark,
	       (DECODE((select count(1) from awb where awb_no = #awbNo# and awb_date=#awbDate# AND TRIM(AIRLN_RMK) IS NOT NULL and rownum=1),0,(select rmk from awb_rmk where awb_no=#awbNo# and rownum=1),DECODE(trim(CA.AIRLN_RMK),NULL,A.AIRLN_RMK,'',A.AIRLN_RMK,CA.AIRLN_RMK))) AS airlRmk,
				(DECODE((select count(1) from awb where awb_no = #awbNo# and awb_date=#awbDate# AND TRIM(AIRLN_RMK) IS NOT NULL and rownum=1),0,(select rmk from awb_rmk where awb_no=#awbNo# and rownum=1),DECODE(trim(CA.AIRLN_RMK),NULL,A.AIRLN_RMK,'',A.AIRLN_RMK,CA.AIRLN_RMK))) AS oldAirlRmk,
				(select SEQ_NO from awb_rmk where awb_no=#awbNo# and awb_date=#awbDate# and rownum=1) AS seqNo,						
	            (DECODE(A.INT_YN,'N','N',DECODE(A.AMD_YN,'N','N',DECODE(A.IMPCAR_YN,'N','N',DECODE(A.LBS_YN,'N','N',DECODE(A.DOCACC_YN,'N','N',DECODE(A.LPPS_YN,'N','N','Y'))))))) AS intStatus,
	            (DECODE((select count(1) from imp_car_awb where awb_no = #awbNo# and awb_date=#awbDate# and rownum=1),0,(select awb_rmk from awb where awb_no=#awbNo# and rownum=1),CA.WH_RMK)) AS whRmk,
	            (DECODE((select count(1) from imp_car_awb where awb_no = #awbNo# and awb_date=#awbDate# and rownum=1),0,(select awb_rmk from awb where awb_no=#awbNo# and rownum=1),CA.WH_RMK)) AS oldWHRmk,
	            '' AS manRmk,
	            (select DECODE(CONFIRMED_RMK,NULL,RMK,CONFIRMED_RMK) from exp_offload_uld_awb where awb_no=#awbNo# and awb_date=#awbDate# and (confirmed_rmk is not null OR RMK IS NOT NULL) AND ROWNUM=1) AS offloadRmk,
				CA.CSGNE_NAME as consignee,
	            CA.CSGNE_ADDR AS consigneAddr,
	            CA.CSGNE_ADDR1 AS consigneAddr1,
	            CA.CSGNE_ADDR2 AS consigneAddr2,
	            CA.CSGNE_ADDR3 AS consigneAddr3,
	            CA.CSGNE_ADDR4 AS consigneAddr4,
	            CA.CSGNE_ADDR5 AS consigneAddr5,
	            decode(CA.CSGNE_PLACE,'','Hong Kong',CA.CSGNE_PLACE) as consCity,
		        decode(CA.CSGNE_CTRY_CODE,'',(select code_desc from mast_country mcntr where mcntr.code = 'HK'),(select code_desc from mast_country mcntr1 where mcntr1.code = CA.CSGNE_CTRY_CODE)) as consCountry,
	            CA.SHPR_NAME AS shipperName,
	            CA.SHPR_ADD1 AS shipperAddr,
	            CA.SHPR_ADD2 AS shipperAddr1,
	            CA.SHPR_ADD3 AS shipperAddr2,
	            CA.SHPR_ADD4 AS shipperAddr3,
	            decode(CA.SHPR_CTRY_CODE,'',(select code_desc from mast_country mcntr where mcntr.code = 'HK'),(select code_desc from mast_country mcntr1 where mcntr1.code = CA.SHPR_CTRY_CODE)) as shprCountry,
		        decode(CA.SHPR_PLACE,'','Hong Kong',CA.SHPR_PLACE) as shprCity,
	            CA.APPNTD_AGENT AS appiontedAgent,
		        CA.AGENT_ADDR1 AS agentAddr,
		        CA.AGENT_ADDR2 AS agentAddr1,
		        CA.AGENT_ADDR3 AS agentAddr2,
		        CA.AGENT_ADDR4 AS agentAddr3,
		        CA.AGENT_ADDR5 AS agentAddr4,
		        ((select AWB_IMAGE_NAME FROM AWB_IMAGE WHERE seq_no = (SELECT MAX(SEQ_NO) FROM AWB_IMAGE WHERE AWB_NO = #awbNo# AND AWB_DATE = #awbDate#) )) AS transactionId,
		        DECODE(AI.AWB_IMAGE_NAME,'','Y','N') AS attachmentStatus,
		      (select count(*) from imp_car_shp shp,imp_car_awb awb where shp.awb_no = awb.awb_no and shp.awb_date = awb.awb_date and awb.awb_pcs > shp.manifest_pcs and shp.awb_no=#awbNo# and shp.awb_date=#awbDate#) AS partShipment,
		      case when (select count(1) from cust_interaction where awb_no = #awbNo# and comp_date is null and follow_up_date is not null) > 0 then 'Y' else 'N' end AS pendingAction,
				TO_CHAR(CA.LM_DATE, 'DDMONYY HH24:MI:SS') AS lmDate,
				CA.SHPR_STATE_PROVINCE shipperState,
				CA.CSGNE_STATE_PROVINCE consigneeState,
				CA.bypass_rel as bypassrel,
				A.TSA_PASS_IND as tsaPassInd,
				A.CARR_RA as carrierRaInd,
				nvl(A.BSB_IND,'NA') as bsbInd,
				(SELECT cc_code FROM V_CST_VSL_CC_CODE_AWB WHERE AWB_NO = #awbNo# AND AWB_DATE = #awbDate# and NVL(hawb_no, '000000000000000000') = '000000000000000000' and ROWNUM = 1) as stfsCode,
				(SELECT FUN_GET_ESRF_STATUS(#awbNo#,#awbDate#) as eSRFEligibilityStatus from DUAL)as eSRFEligibilityStatus
		  FROM 
		   AWB A,
		   IMP_CAR_AWB CA,
	       IMP_CAR_SHP ICS,
	       AWB_IMAGE AI
	      WHERE
	       CA.AWB_NO(+) = A.AWB_NO AND
	       CA.AWB_DATE(+) = A.AWB_DATE AND
	       ICS.AWB_NO(+) = A.AWB_NO AND 
	       ICS.AWB_DATE(+) = A.AWB_DATE AND
	       AI.AWB_NO(+) = A.AWB_NO AND
	       AI.AWB_DATE(+) = A.AWB_DATE AND
	       A.AWB_NO = #awbNo# AND
	       A.AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY')
	         AND ((select count(1) from imp_car_awb where awb_no=#awbNo# and awb_date=#awbDate#) = 0)
	        AND ((select count(1) from edi_fwb where awb_no=#awbNo# and awb_date=#awbDate#) = 0)
      </select>
	
	<!-- changed for bugzilla id - 1063 -  EC.ACCEPT_MODE AS docAccept, changed to  'N' AS docAccept, for iteration 2 bug by mayank on 02JUN11 -->
<select id="fetchAWBEnquiryTranshipmentDetails" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO" resultClass="cargo.cms.awb.bo.AWBEnquiryBO">
		SELECT 
        A.AWB_NO AS awbNo,
		SUBSTR( A.AWB_NO,1,3 ) AS awbNoPFX,
		SUBSTR( A.AWB_NO,4 ) as awbNoSFX,
		A.AWB_TYPE AS awbType, 
        A.CATALOG AS catalog,
       	(SELECT 
			  (CASE WHEN decode(a.catalog,'EG','C','ES','C','IG','C','TG','C','TA','C','EU','M','TM','M','EO','Q','IO','Q','C') = 'C' THEN 
			  (CASE WHEN (SELECT COUNT(1) FROM CUST_AIRL_SPL_CODE SPLCODE WHERE SPLCODE.SPL_TYPE='SPL_COURIER_SHC' AND SPLCODE.CARR_CODE = A.CARR_CODE AND (SPLCODE.SPL_CODE = a.SPL_CODE1 OR SPLCODE.SPL_CODE = a.SPL_CODE2 OR SPLCODE.SPL_CODE = a.SPL_CODE3 OR SPLCODE.SPL_CODE = a.SPL_CODE4 OR SPLCODE.SPL_CODE = a.SPL_CODE5 OR SPLCODE.SPL_CODE = a.SPL_CODE6 OR SPLCODE.SPL_CODE = a.SPL_CODE7 OR SPLCODE.SPL_CODE = a.SPL_CODE8 OR SPLCODE.SPL_CODE = a.SPL_CODE9)) > 0
			  THEN 'Q' ELSE decode(a.catalog,'EG','C','ES','C','IG','C','TG','C','TA','C','EU','M','TM','M','EO','Q','IO','Q','C') END)
			  ELSE decode(a.catalog,'EG','C','ES','C','IG','C','TG','C','TA','C','EU','M','TM','M','EO','Q','IO','Q','C') END) as cargoType	  
		FROM AWB  A WHERE  A.AWB_NO = #awbNo# AND A.AWB_DATE = #awbDate#) as cargoType,
        decode(NVL(CA.LOCK_IND,'N'),'Y','Y','N',decode(A.EXP_AWB_LOCK,'Y','Y','N'),'N') AS lockYN,
        decode(A.PCS,'','0',A.PCS) AS awbPcs, 
		trim(TO_CHAR(NVL(A.WT,0),'9999990.00')) AS awbWt,	
        A.CARR_CODE AS carrCode,
        (SELECT NVL(OW.PCS,0)||'/'||NVL(OW.WT,0) FROM AWB_OWNER OW WHERE OW.AWB_NO = A.AWB_NO AND OW.AWB_DATE = A.AWB_DATE AND OW.CARR_CODE = A.CARR_CODE) carrPcWt,
        PKG_CST_DC.awb_enq_licenses_count(#awbNo#,#awbDate#) AS licence,
        A.CAR_YN AS carYN,
        '' AS status,
        TO_CHAR( A.AWB_DATE, 'DDMONYY') AS awbDate, 
        CA.AGENT_CUST_NO AS agentCode,
        A.SPL_CODE1 AS splCode1,
        A.SPL_CODE2 AS splCode2,        
        A.SPL_CODE3 AS splCode3,
        A.SPL_CODE4 AS splCode4,
        A.SPL_CODE5 AS splCode5,
        A.SPL_CODE6 AS splCode6,
        A.SPL_CODE7 AS splCode7,
        A.SPL_CODE8 AS splCode8,
        A.SPL_CODE9 AS splCode9,
        (SELECT COUNT(*) FROM CUST_AIRL_SPL_CODE WHERE SPL_CODE=CA.SPL_CODE1 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=CA.SPL_CODE2 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=CA.SPL_CODE3 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=CA.SPL_CODE4 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=CA.SPL_CODE5 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=CA.SPL_CODE6 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=CA.SPL_CODE7 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=CA.SPL_CODE8 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=CA.SPL_CODE9 AND SPL_TYPE='SPL_VAL') AS shpStatus, 
             CA.VAL_FOR_SCH_COLL AS schCollInd,
            CA.DOC_DLV AS docDlv,
             CA.AWB_ORIGIN AS awbOrigin, 
		    (SELECT SUM(CHRG_AMT) FROM BILL_CHARGE_DTL WHERE AWB_NO = #awbNo# AND AWB_DATE=#awbDate#) AS osCharge,
         CA.ALLOW_PACCO AS allowPacco,
            CA.DOC_CHK_REQ AS docChkReq,
            CA.AWB_DEST AS awbDest, 
             A.IMPCAR_YN AS intelligentChk,
             (select case when (select dut_commodity from exp_rcl_hd where awb_no=#awbNo# and awb_date=#awbDate# AND ROWNUM=1) = 'Y' then 'Y'
             else case when (select (select count(*) from cst_dc_dtl where awb_no=#awbNo#) + (select count(*) from cst_code_dtl where awb_no=#awbNo#) as result from dual) > 0
             then 'Y'
             else 'N'
             end
             end
             from dual) AS dcLock,
              CA.DOC_CHK_COMP AS docChkComp,
               CA.CONTENT AS content, 
     		A.AWB_CLOSED_YN AS awbClosed,
          (SELECT COUNT(*) FROM CUST_UNDERTAKING CU WHERE 
                               CU.AGENT_CODE = (SELECT AGENT_CODE FROM AWB WHERE AWB_DATE=#awbDate# AND AWB_NO=#awbNo#) AND 
                               CU.CARR_CODE = (SELECT CARR_CODE FROM AWB WHERE AWB_DATE=#awbDate# AND AWB_NO=#awbNo#) AND 
                               CA.AWB_DATE BETWEEN CU.EFF_FROM AND CU.EFF_TO) AS licenceUnder,  
                                ICS.NOA_IND AS noaSent,
            DECODE((SELECT DECODE(COUNT(DOC_RCV),1,'Y','N') FROM IMP_CUST_CLR_LIST WHERE AWB_NO=#awbNo# AND AWB_DATE = #awbDate# AND DOC_RCV = 'Y'),'N',(select DECODE(count(recd.awb_no),1,'Y','N') from exp_doc_recd recd where recd.awb_no=#awbNo# and recd.awb_date=#awbDate# and awb_frz_yn='Y' and rownum=1),(SELECT DECODE(COUNT(DOC_RCV),1,'Y','N') FROM IMP_CUST_CLR_LIST WHERE AWB_NO=#awbNo# AND AWB_DATE = #awbDate# AND DOC_RCV = 'Y')) AS docRecieve,
           
            DECODE((SELECT cc_code FROM (SELECT t1.cc_code FROM V_CST_IMP_CC_CODE_AWB_ALL t1,mast_constraint_code t2 WHERE t1.cc_code = t2.code AND awb_no = #awbNo# AND AWB_DATE = #awbDate# AND NVL(hawb_no, '000000000000000000') = '000000000000000000') where rownum = 1),NULL,
(select CONST_CODE from CST_RECV WHERE AWB_NO = #awbNo# AND AWB_DATE = #awbDate# and LM_DATE = (SELECT MAX(LM_DATE) FROM CST_RECV WHERE AWB_NO=#awbNo# AND AWB_DATE = #awbDate#) AND rownum=1),
(SELECT cc_code FROM (SELECT t1.cc_code FROM V_CST_IMP_CC_CODE_AWB_ALL t1,mast_constraint_code t2 WHERE t1.cc_code = t2.code AND awb_no = #awbNo#  AND AWB_DATE = #awbDate# AND NVL(hawb_no, '000000000000000000') = '000000000000000000' and t1.flt_key not like 'NB%' ORDER BY t1.PRTY DESC) where rownum = 1)) AS latestCc,

 		(SELECT cc_code FROM V_CST_VSL_CC_CODE_AWB WHERE AWB_NO=#awbNo# AND AWB_DATE = #awbDate# and NVL(hawb_no, '000000000000000000') = '000000000000000000' and ROWNUM = 1) stfsCode, 
 
            (DECODE((select count(1) from awb where awb_no = #awbNo# and awb_date=#awbDate# AND TRIM(AIRLN_RMK) IS NOT NULL and rownum=1),0,
            (select rmk from awb_rmk where awb_no=#awbNo# and rownum=1),DECODE(CA.AIRLN_RMK,NULL,A.AIRLN_RMK,CA.AIRLN_RMK))) AS airlRmk,  
            (DECODE((select count(1) from awb where awb_no = #awbNo# and awb_date=#awbDate# AND TRIM(AIRLN_RMK) IS NOT NULL and rownum=1),0,
            (select rmk from awb_rmk where awb_no=#awbNo# and rownum=1),DECODE(CA.AIRLN_RMK,NULL,A.AIRLN_RMK,CA.AIRLN_RMK))) AS oldAirlRmk,
            (select SEQ_NO from awb_rmk where awb_no=#awbNo# and awb_date=#awbDate# and rownum=1) AS seqNo,
            (DECODE((select count(1) from imp_car_awb where awb_no = #awbNo# and awb_date=#awbDate# and rownum=1),0,(select awb_rmk from awb where awb_no=#awbNo# and rownum=1),CA.WH_RMK)) AS whRmk,
            (DECODE((select count(1) from imp_car_awb where awb_no = #awbNo# and awb_date=#awbDate# and rownum=1),0,(select awb_rmk from awb where awb_no=#awbNo# and rownum=1),CA.WH_RMK)) AS oldWHRmk,		           
            '' AS manRmk,
           (select DECODE(CONFIRMED_RMK,NULL,RMK,CONFIRMED_RMK) from exp_offload_uld_awb where awb_no=#awbNo# and awb_date=#awbDate# and (confirmed_rmk is not null OR RMK IS NOT NULL) AND ROWNUM=1) AS offloadRmk,
            CA.CSGNE_NAME as consignee,
            CA.CSGNE_ADDR AS consigneAddr,
            CA.CSGNE_ADDR1 AS consigneAddr1,
            CA.CSGNE_ADDR2 AS consigneAddr2,
            CA.CSGNE_ADDR3 AS consigneAddr3,
            CA.CSGNE_ADDR4 AS consigneAddr4,
            CA.CSGNE_ADDR5 AS consigneAddr5,
            decode(CA.CSGNE_PLACE,'','Hong Kong',CA.CSGNE_PLACE) as consCity,
            decode(CA.CSGNE_CTRY_CODE,'',(select code_desc from mast_country mcntr where mcntr.code = 'HK'),(select code_desc from mast_country mcntr1 where mcntr1.code = CA.CSGNE_CTRY_CODE)) as consCountry,
             CA.SHPR_NAME AS shipperName,
            CA.SHPR_ADD1 AS shipperAddr,
            CA.SHPR_ADD2 AS shipperAddr1,
            CA.SHPR_ADD3 AS shipperAddr2,
            CA.SHPR_ADD4 AS shipperAddr3,
            '' AS shipperAddr4,
            decode(CA.SHPR_CTRY_CODE,'',(select code_desc from mast_country mcntr where mcntr.code = 'HK'),(select code_desc from mast_country mcntr1 where mcntr1.code = CA.SHPR_CTRY_CODE)) as shprCountry,
	        decode(CA.SHPR_PLACE,'','Hong Kong',CA.SHPR_PLACE) as shprCity,
          CA.APPNTD_AGENT AS appiontedAgent,
	        CA.AGENT_ADDR1 AS agentAddr,
	        CA.AGENT_ADDR2 AS agentAddr1,
	        CA.AGENT_ADDR3 AS agentAddr2,
	        CA.AGENT_ADDR4 AS agentAddr3,
	        CA.AGENT_ADDR5 AS agentAddr4,
          (DECODE(A.INT_YN,'N','N',DECODE(A.AMD_YN,'N','N',DECODE(A.IMPCAR_YN,'N','N',DECODE(A.LBS_YN,'N','N',DECODE(A.DOCACC_YN,'N','N',DECODE(A.LPPS_YN,'N','N','Y'))))))) AS intStatus,          
           DECODE( (select count(*) from imp_car_shp shp,imp_car_awb awb where shp.awb_no = awb.awb_no and shp.awb_date = awb.awb_date and 
             awb.awb_pcs > shp.manifest_pcs and shp.awb_no= #awbNo# and shp.awb_date = #awbDate#),0,
             (select  count(*) from awb where awb_no = #awbNo#  and awb_date= #awbDate# and  CAR_YN='Y' and pman_pcs > 0 and pcs > pman_pcs),1) AS partShipment,
          '' AS docAccept,
          case when (select count(1) from cust_interaction where awb_no = #awbNo# and comp_date is null and follow_up_date is not null) > 0 then 'Y' else 'N' end AS pendingAction,
          ((select AWB_IMAGE_NAME FROM AWB_IMAGE WHERE seq_no = (SELECT MAX(SEQ_NO) FROM AWB_IMAGE WHERE AWB_NO = #awbNo# AND AWB_DATE = #awbDate#) )) AS transactionId,
          DECODE(AI.AWB_IMAGE_NAME,'','Y','N') AS attachmentStatus,
          TO_CHAR(CA.LM_DATE, 'DDMONYY HH24:MI:SS') AS lmDate,
			CA.ECT_HANDLER AS ectHandler, 
			pkg_common.get_awb_splcodes(CA.awb_no, CA.awb_date, 'I') spl, 	
 			CA.SHPR_NAME AS shprName, 
 			CA.APPNTD_AGENT AS appntdAgent, 
 			CA.AWB_CLOSE_RMK AS awbCloseRmark, 
 			CA.AWB_RMK AS oldAwbRemark,
		  CA.AWB_RMK AS awbRemark,
		  NULL AS holdingPeriod,
		  CA.SHPR_STATE_PROVINCE shipperState,
		  CA.CSGNE_STATE_PROVINCE consigneeState,
		  CA.bypass_rel as bypassrel,
		
		  A.TSA_PASS_IND as tsaPassInd,
		  A.CARR_RA as carrierRaInd,
		  nvl(A.BSB_IND,'NA') as bsbInd 
      FROM 
	   IMP_CAR_AWB CA,
     AWB A,
     IMP_CAR_SHP ICS,
     AWB_IMAGE AI
   WHERE
       CA.AWB_NO(+) = A.AWB_NO AND
       CA.AWB_DATE(+) = A.AWB_DATE AND
       ICS.AWB_NO(+) = A.AWB_NO AND 
       ICS.AWB_DATE(+) = A.AWB_DATE AND
       AI.AWB_NO(+) = A.AWB_NO AND
       AI.AWB_DATE(+) = A.AWB_DATE AND
       A.AWB_NO = #awbNo# AND
       A.AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY')	
       UNION
       SELECT 
		A.AWB_NO AS awbNo,
		SUBSTR( A.AWB_NO,1,3 ) AS awbNoPFX,
		SUBSTR( A.AWB_NO,4 ) AS awbNoSFX,
		A.AWB_TYPE AS awbType, 
		decode(A.CATALOG,'',CA.CATALOG,A.CATALOG) AS catalog,
		(SELECT 
			  (CASE WHEN decode(a.catalog,'EG','C','ES','C','IG','C','TG','C','TA','C','EU','M','TM','M','EO','Q','IO','Q','C') = 'C' THEN 
			  (CASE WHEN (SELECT COUNT(1) FROM CUST_AIRL_SPL_CODE SPLCODE WHERE SPLCODE.SPL_TYPE='SPL_COURIER_SHC' AND SPLCODE.CARR_CODE = A.CARR_CODE AND (SPLCODE.SPL_CODE = a.SPL_CODE1 OR SPLCODE.SPL_CODE = a.SPL_CODE2 OR SPLCODE.SPL_CODE = a.SPL_CODE3 OR SPLCODE.SPL_CODE = a.SPL_CODE4 OR SPLCODE.SPL_CODE = a.SPL_CODE5 OR SPLCODE.SPL_CODE = a.SPL_CODE6 OR SPLCODE.SPL_CODE = a.SPL_CODE7 OR SPLCODE.SPL_CODE = a.SPL_CODE8 OR SPLCODE.SPL_CODE = a.SPL_CODE9)) > 0
			  THEN 'Q' ELSE decode(a.catalog,'EG','C','ES','C','IG','C','TG','C','TA','C','EU','M','TM','M','EO','Q','IO','Q','C') END)
			  ELSE decode(a.catalog,'EG','C','ES','C','IG','C','TG','C','TA','C','EU','M','TM','M','EO','Q','IO','Q','C') END) as cargoType	  
		FROM AWB  A WHERE  A.AWB_NO = #awbNo# AND A.AWB_DATE = #awbDate#) as cargoType,
    decode(NVL(CA.LOCK_IND,'N'),'Y','Y','N',decode(A.EXP_AWB_LOCK,'Y','Y','N'),'N') AS lockYN,
    decode(A.PCS,'','0',A.PCS) AS awbPcs, 
		trim(TO_CHAR(NVL(A.WT,0),'9999990.00')) AS awbWt,
    A.CARR_CODE AS carrCode,
   (SELECT NVL(OW.PCS,0)||'/'||NVL(OW.WT,0) FROM AWB_OWNER OW WHERE OW.AWB_NO = A.AWB_NO AND OW.AWB_DATE = A.AWB_DATE AND OW.CARR_CODE = A.CARR_CODE) carrPcWt,
            PKG_CST_DC.awb_enq_licenses_count(#awbNo#,#awbDate#) AS licence,
            A.CAR_YN AS carYN,
            (SELECT STRAGG(STRINGDELIM(COD_FSU_STS, ',')) FROM (SELECT  DISTINCT COD_FSU_STS FROM AWB_SHP_STS WHERE AWB_DATE=#awbDate# AND AWB_NO=#awbNo#)) AS status,
            TO_CHAR( A.AWB_DATE, 'DDMONYY') AS awbDate,  
            CA.AGENT_CODE AS agentCode,
            A.SPL_CODE1 AS splCode1,
            A.SPL_CODE2 AS splCode2,
            A.SPL_CODE3 AS splCode3,
            A.SPL_CODE4 AS splCode4,
            A.SPL_CODE5 AS splCode5,
            A.SPL_CODE6 AS splCode6,
            A.SPL_CODE7 AS splCode7,
            A.SPL_CODE8 AS splCode8,
            A.SPL_CODE9 AS splCode9,
            (SELECT COUNT(*) FROM CUST_AIRL_SPL_CODE WHERE SPL_CODE=CA.SPL_CODE1 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=CA.SPL_CODE2 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=CA.SPL_CODE3 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=CA.SPL_CODE4 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=CA.SPL_CODE5 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=CA.SPL_CODE6 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=CA.SPL_CODE7 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=CA.SPL_CODE8 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=CA.SPL_CODE9 AND SPL_TYPE='SPL_VAL') AS shpStatus, 
            '' AS schCollInd,
            '' AS docDlv,
            A.ORIG AS awbOrigin, 
            (SELECT SUM(CHRG_AMT) FROM BILL_CHARGE_DTL WHERE AWB_NO = #awbNo# AND AWB_DATE=#awbDate#) AS osCharge,
            CCC.ALLOW_PACCO AS allowPacco,
            '' AS docChkReq,
            A.DEST AS awbDest,
            A.EXPCAR_YN AS intelligentChk, 
            (select case when (select dut_commodity from exp_rcl_hd where awb_no=#awbNo# and awb_date=#awbDate# AND ROWNUM=1) = 'Y' then 'Y'
             else case when (select (select count(*) from cst_dc_dtl where awb_no=#awbNo#) + (select count(*) from cst_code_dtl where awb_no=#awbNo#) as result from dual) > 0
             then 'Y'
             else 'N'
             end
             end
             from dual) AS dcLock,
            '' AS docChkComp,
		    A.CONTENT AS content, 
            A.AWB_CLOSED_YN AS awbClosed,
            (SELECT COUNT(*) FROM CUST_UNDERTAKING CU WHERE 
                               CU.AGENT_CODE = (SELECT AGENT_CODE FROM AWB WHERE AWB_DATE=#awbDate# AND AWB_NO=#awbNo#) AND 
                               CU.CARR_CODE = (SELECT CARR_CODE FROM AWB WHERE AWB_DATE=#awbDate# AND AWB_NO=#awbNo#) AND 
                               CA.AWB_DATE BETWEEN CU.EFF_FROM AND CU.EFF_TO) AS licenceUnder, 
            '' AS noaSent,
            (select DECODE(count(recd.awb_no),1,'Y','N') from exp_doc_recd recd where
                recd.awb_no=#awbNo# and recd.awb_date=#awbDate# and awb_frz_yn='Y') AS docRecieve,
            (select CONST_CODE from CST_RECV WHERE AWB_NO = #awbNo# and awb_date=#awbDate# and LM_DATE = (SELECT MAX(LM_DATE) FROM CST_RECV WHERE AWB_NO=#awbNo# and awb_date=#awbDate#) and flt_key not like 'NB%' AND rownum=1) AS latestCc,
            (SELECT cc_code FROM V_CST_VSL_CC_CODE_AWB WHERE AWB_NO=#awbNo# AND AWB_DATE = #awbDate# and NVL(hawb_no, '000000000000000000') = '000000000000000000' and ROWNUM = 1) stfsCode, 
		    (DECODE((select count(1) from EXP_CAR where awb_no = #awbNo# and awb_date=#awbDate# AND TRIM(AIRL_RMK) IS NOT NULL and rownum=1),0,
		    (DECODE((select rmk from awb_rmk where awb_no=#awbNo# and rownum=1),NULL,A.AIRLN_RMK,(select rmk from awb_rmk where awb_no=#awbNo# and rownum=1))),DECODE(CA.AIRL_RMK,NULL,A.AIRLN_RMK,CA.AIRL_RMK))) AS airlRmk,
			(DECODE((select count(1) from EXP_CAR where awb_no = #awbNo# and awb_date=#awbDate# AND TRIM(AIRL_RMK) IS NOT NULL and rownum=1),0,
      		(DECODE((select rmk from awb_rmk where awb_no=#awbNo# and awb_date=#awbDate# and rownum=1),NULL,A.AIRLN_RMK,(select rmk from awb_rmk where awb_no=#awbNo# and rownum=1))),DECODE(CA.AIRL_RMK,NULL,A.AIRLN_RMK,CA.AIRL_RMK))) AS oldAirlRmk,	(select SEQ_NO from awb_rmk where awb_no=#awbNo# and rownum=1) AS seqNo,
            (DECODE((select count(1) from EXP_CAR where awb_no = #awbNo# and awb_date=#awbDate# and rownum=1),0,a.AWB_RMK,CA.WH_RMK)) AS whRmk,
			(DECODE((select count(1) from EXP_CAR where awb_no = #awbNo# and awb_date=#awbDate# and rownum=1),0,a.AWB_RMK,CA.WH_RMK)) AS oldWHRmk,
            EPA.MAN_RMK AS manRmk,
           (select DECODE(CONFIRMED_RMK,NULL,RMK,CONFIRMED_RMK) from exp_offload_uld_awb where awb_no=#awbNo# and awb_date=#awbDate# and (confirmed_rmk is not null OR RMK IS NOT NULL) AND ROWNUM=1) AS offloadRmk,
		    CA.CSGNE_NAME as consignee,
            CA.CSGNE_ADDR AS consigneAddr,
            '' AS consigneAddr1,
            CA.CSGNE_ADDR2 AS consigneAddr2,
            CA.CSGNE_ADDR3 AS consigneAddr3,
            CA.CSGNE_ADDR4 AS consigneAddr4,
            '' AS consigneAddr5,
            decode(CA.CSGNE_PLACE,'','Hong Kong',CA.CSGNE_PLACE) as consCity,
	        decode(CA.CSGNE_CTRY_CODE,'',(select code_desc from mast_country mcntr where mcntr.code = 'HK'),(select code_desc from mast_country mcntr1 where mcntr1.code = CA.CSGNE_CTRY_CODE)) as consCountry,
            CA.SHPR_NAME AS shipperName,
            '' AS shipperAddr,
            CA.SHPR_ADDR AS shipperAddr1,
            CA.SHPR_ADDR2 AS shipperAddr2,
            CA.SHPR_ADDR3 AS shipperAddr3,
            CA.SHPR_ADDR4 AS shipperAddr4,        
            decode(CA.SHPR_CTRY_CODE,'',(select code_desc from mast_country mcntr where mcntr.code = 'HK'),(select code_desc from mast_country mcntr1 where mcntr1.code = CA.SHPR_CTRY_CODE)) as shprCountry,
	        decode(CA.SHPR_PLACE,'','Hong Kong',CA.SHPR_PLACE) as shprCity,
          CA.AGENT_NAME AS appiontedAgent,
	        CA.EDI_AGENT_ADDR_1 AS agentAddr,
	        CA.EDI_AGENT_ADDR_2 AS agentAddr1,
	        CA.EDI_AGENT_ADDR_3 AS agentAddr2,
	        CA.EDI_AGENT_ADDR_4 AS agentAddr3,
	        CA.EDI_AGENT_ADDR_5 AS agentAddr4,
	        DECODE(A.INT_YN,'N','N',DECODE(A.AMD_YN,'N','N',DECODE(A.EXPCAR_YN,'N','N',DECODE(A.LBS_YN,'N','N',DECODE(A.DOCACC_YN,'N','N',DECODE(A.LPPS_YN,'N','N','Y')))))) AS intStatus,
	        (select  count(*) from awb where awb_no = #awbNo# and awb_date = #awbDate# and  CAR_YN='Y' and pman_pcs > 0 and pcs > pman_pcs) AS partShipment,
	        decode(A.DOCACC_USER,'',(decode(A.DOCACC_DATE,'','N','Y')),'Y') AS docAccept,
	        (select decode((select count(awb_no) from cust_interaction where awb_no = #awbNo# and rownum=1),'1',(decode((select count(awb_no) from cust_interaction where awb_no=#awbNo# and comp_date is null and rownum=1),'1','Y','N')),'N') from dual) AS pendingAction,
	        ((select AWB_IMAGE_NAME FROM AWB_IMAGE WHERE seq_no = (SELECT MAX(SEQ_NO) FROM AWB_IMAGE WHERE AWB_NO = #awbNo# AND AWB_DATE = #awbDate#) )) AS transactionId,
	        DECODE(AI.AWB_IMAGE_NAME,'','Y','N') AS attachmentStatus,
			TO_CHAR(CA.LM_DATE, 'DDMONYY HH24:MI:SS') AS lmDate,
     		'' AS ectHandler, 
			'' AS spl, 	
 			'' AS shprName, 
 			'' AS appntdAgent, 
 			'' AS awbCloseRmark, 
 			'' AS oldAwbRemark,
		  '' AS awbRemark,
		  CA.HLDG_PERIOD AS holdingPeriod,
		  CA.SHPR_STATE_PROVINCE shipperState,
		  CA.CSGNE_STATE_PROVINCE consigneeState,
		  '' as bypassrel,
		  
		  A.TSA_PASS_IND as tsaPassInd,
		  A.CARR_RA as carrierRaInd,
		  nvl(A.BSB_IND,'NA') as bsbInd   
	    FROM 
       EXP_CAR CA,
		   AWB A,
		   AWB_IMAGE AI,
		   EXP_PMANIFEST_AWB EPA,
       CUST_COMPANY CCC 
      WHERE
       CA.AWB_NO(+) = A.AWB_NO AND
       CA.AWB_DATE(+) = A.AWB_DATE  AND
       EPA.AWB_NO(+) = A.AWB_NO AND
       EPA.AWB_DATE(+) = A.AWB_DATE AND
       CCC.CODE(+) = CA.AGENT_CODE AND
       AI.AWB_NO(+) = A.AWB_NO AND
       AI.AWB_DATE(+) = A.AWB_DATE AND
       A.AWB_NO = #awbNo# AND
       A.AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY')
       and  NOT EXISTS (select NULL from imp_car_awb where awb_no=#awbNo# and awb_date=#awbDate#)
       </select>
	
	
	
<!--To Fetch AWb Enquiry Manifest Details For Import -->
	<select id="fetchAWBEnquiryImportManifestDetails" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO" resultClass="cargo.cms.awb.bo.AWBEnquiryManifestBO">
		
		SELECT *  FROM (SELECT 'Q1' as condition,
			A.FLT_KEY AS fltKey,
			TO_CHAR( A.FLT_DATE, 'DDMONYY') AS fltDate,
			pkg_common.get_flt_ata(A.FLT_KEY, A.FLT_DATE,'A') AS ata,
			A.LDG_POINT AS origin,
			A.MANIFEST_PCS AS manifestPcs,
			DECODE(A.MANIFEST_WT,null,'',trim(TO_CHAR(NVL(A.MANIFEST_WT,0),'99999990.00'))) AS manifestWt,	
			A.RECD_PCS AS locationPcs,
			DECODE(A.RECD_WT,null,'',trim(TO_CHAR(NVL(A.RECD_WT,0),'99999990.00'))) AS locationWt,
			DECODE(A.DAM_PROC_DATE,NULL,'N','Y') AS damProcDate,
			DECODE(A.DIR_PROC_DATE,NULL,'N','Y') AS dirProcDate,
			DECODE(A.CIR_PROC_DATE,NULL,'N','Y') AS cirProcDate,
			A.ECAN_SEND AS ecanSend,
			TO_CHAR(pkg_Calculate.GET_FREE_DAYS(A.FLT_DATE,A.FLT_KEY,A.AWB_NO,A.AWB_DATE)+1,'DDMONYY')  AS freeStrgDue,
			T.TRM_NO AS trmNo,
			T.RECD_CARR AS recvCarr,
			B.CARR_CODE AS carrCode,
			B.FLT_NO AS fltNo,
			B.TR_NO AS trNo,
			(SELECT V.CC_CODE FROM V_CST_IMP_CC_CODE_AWB V
			WHERE V.FLT_KEY = A.FLT_KEY AND V.FLT_DATE = A.FLT_DATE AND V.AWB_NO = A.AWB_NO 
				  AND NVL(V.HAWB_NO, '000000000000000000') =  '000000000000000000' AND ROWNUM = 1) AS costraintCode,
		  B.SCH_DATE , B.SCH_TIME			
		FROM FLT_OPR B, IMP_CAR_AWB C, IMP_CAR_SHP A
		LEFT JOIN (SELECT AWB_NO, AWB_DATE, FLT_KEY,FLT_DATE, SUM(LOCN_PCS) PCS, SUM(LOCN_WT) WT
           			FROM AWB_INVENTORY
           			GROUP BY AWB_NO, AWB_DATE, FLT_KEY, FLT_DATE) I
          		 ON I.AWB_NO = A.AWB_NO AND I.AWB_DATE = A.AWB_DATE AND I.FLT_KEY = A.FLT_KEY AND I.FLT_DATE = A.FLT_DATE
		LEFT JOIN (SELECT H.TRM_NO, RECD_CARR FROM IMP_TRM_HD H JOIN IMP_TRM_DTL D ON H.TRM_NO = D.TRM_NO 
			 	  WHERE H.VOID_USER IS NULL AND D.AWB_NO = #awbNo# AND D.AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY')
				  AND ROWNUM = 1) T ON 1 = 1
		WHERE A.FLT_KEY = B.FLT_KEY
			AND	A.FLT_DATE = B.SCH_DATE
			AND B.FLT_TYPE = 'A'
			AND A.AWB_NO = C.AWB_NO
			AND A.AWB_DATE = C.AWB_DATE
			AND A.AWB_NO = #awbNo#
			AND A.AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY') 
		UNION ALL
		SELECT
 			'Q2' as condition,
  			'COL2' AS fltKey, TO_CHAR( SYSDATE, 'DDMONYY') AS fltDate, 'COL4' AS ata, 'COL5' AS origin,
			sum(A.MANIFEST_PCS) AS manifestPcs,
			DECODE(sum(A.MANIFEST_WT),null,'',trim(TO_CHAR(NVL(sum(A.MANIFEST_WT),0),'99999990.00'))) AS manifestWt,
			sum(A.RECD_PCS) AS locationPcs,
			DECODE(sum(A.RECD_WT),null,'',trim(TO_CHAR(NVL(sum(A.RECD_WT),0),'9999990.00'))) AS locationWt,		
			'COL10' AS damProcDate, 'COL11' AS dirProcDate,'COL12' AS cirProcDate, 'COL13' AS ecanSend, 
			'COL14' AS freeStrgDue, 'COL15' AS trmNo, 'COL16' AS recvCarr,'COL17' AS carrCode,'COL18' AS fltNo, 'COL19' AS trNo,'COL20' AS costraintCode ,
			null SCH_DATE , null SCH_TIME
		FROM
			FLT_OPR B, IMP_CAR_AWB C, IMP_CAR_SHP A
			LEFT JOIN (SELECT AWB_NO, AWB_DATE, FLT_KEY,FLT_DATE, SUM(LOCN_PCS) PCS, SUM(LOCN_WT) WT
	           			FROM AWB_INVENTORY
	           			GROUP BY AWB_NO, AWB_DATE, FLT_KEY, FLT_DATE) I
	          		 ON I.AWB_NO = A.AWB_NO AND I.AWB_DATE = A.AWB_DATE AND I.FLT_KEY = A.FLT_KEY AND I.FLT_DATE = A.FLT_DATE
			LEFT JOIN (SELECT H.TRM_NO, RECD_CARR FROM IMP_TRM_HD H JOIN IMP_TRM_DTL D ON H.TRM_NO = D.TRM_NO 
				 	  WHERE H.VOID_USER IS NULL AND D.AWB_NO = #awbNo# AND D.AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY')
					  AND ROWNUM = 1) T ON 1 = 1
		WHERE A.FLT_KEY = B.FLT_KEY
			AND	A.FLT_DATE = B.SCH_DATE
			AND B.FLT_TYPE = 'A'
			AND A.AWB_NO = C.AWB_NO
			AND A.AWB_DATE = C.AWB_DATE
			AND A.AWB_NO = #awbNo#
			AND A.AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY') ) a		Order By SCH_DATE , SCH_TIME 
	</select>
	
	<!--To Fetch AWb Enquiry SRF Details For Import -->
<select id="fetchAWBEnquiryImportSRFDetails" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO" resultClass="cargo.cms.awb.bo.AWBEnquirySRFBO">
		SELECT 
		    T1.SRF_NO AS srfNo,
		    to_char(T1.SRF_DATE,'DDMONYY HH24:MI') issueDate,
      		To_Char(VERIFIED_TIME,'DDMONYY HH24:MI') verifyDate,
      		tt.truck_no AS truckNo,
			SUBSTR(T1.SRF_NO,1,6)||'-'||SUBSTR(T1.SRF_NO,7) as srfNoDisp, 
			T1.SRF_PCS AS srfPcs,  
			DECODE(T1.SRF_WT,null,'',trim(TO_CHAR(NVL(T1.SRF_WT,0),'99999990.00'))) AS srfWt,
			(select DECODE(sum(SF.DLV_PCS),NULL,'','0','',sum(SF.DLV_PCS)) from IMP_SRF_FLT SF WHERE SF.SRF_NO=T1.SRF_NO) AS relPcs,
            (select DECODE(sum(SF.DLV_WT),null,'','0','',trim(TO_CHAR(NVL(sum(SF.DLV_WT),0),'99999990.00'))) from IMP_SRF_FLT SF WHERE SF.SRF_NO=T1.SRF_NO) AS relWt,
             NVL(ESRF_YN,'N') as eSrf,
			CASE WHEN NVL(ESRF_YN,'N') = 'Y'  then To_Char(VERIFIED_TIME,'DDMONYY HH24:MI') else '' end cargoVerification,
			CASE WHEN NVL(ESRF_YN,'N') = 'Y'  then To_Char(CARGO_COLLECTED,'DDMONYY HH24:MI') else '' end cargoCollected,
			CASE WHEN NVL(ESRF_YN,'N') = 'Y'  then To_Char(CARGO_RELEASE,'DDMONYY HH24:MI') else '' end cargoReleaseOK, 
			CASE WHEN T1.SRF_EXPY_DATE &lt; SYSDATE and STATUS = 'ISSUED' THEN 'EXPIRED' 
				 WHEN STATUS = 'REISSUED' THEN 'VOID'
           			  when VERIFIED_TIME is not null and STATUS = 'ISSUED' then 'VERIFIED'
				 ELSE T1.STATUS END AS status,  
			SUBSTR(T4.CDIF_NO,1,6)  cdifNoPrefix , 
			SUBSTR(T4.CDIF_NO,7)  cdifNoSuffix , 
			T4.CDIF_NO AS cdifNo,  
			T4.UTLPCS AS utlPcs, 
			DECODE(T4.UTLWT,null,'',trim(TO_CHAR(NVL(T4.UTLWT,0),'99999990.00'))) AS utlWt, 
			T4.PSPCS AS psPcs,
			DECODE(T4.PSWT,null,'',trim(TO_CHAR(NVL(T4.PSWT,0),'99999990.00'))) AS psWt,   
			T4.DTPCS AS dtPcs,  
			DECODE(T4.DTWT,null,'',trim(TO_CHAR(NVL(T4.DTWT,0),'99999990.00'))) AS dtWt
		FROM 
			IMP_SRF T1
			LEFT JOIN (SELECT T2.SRF_NO,  T2.CDIF_NO, SUM(CDIF_UTL_PCS) AS UTLPCS, SUM(CDIF_UTL_WT) AS UTLWT, SUM(CDIF_PS_PCS) AS PSPCS, 
							  SUM(CDIF_PS_WT) AS PSWT, SUM(CDIF_DT_PCS) AS DTPCS, SUM(CDIF_DT_WT) AS DTWT 
						FROM IMP_CDIF T2, IMP_CDIF_HAWB T3 WHERE T2.CDIF_NO = T3.CDIF_NO and t2.VOID_USER is null
						GROUP BY T2.SRF_NO, T2.CDIF_NO) T4 ON T4.SRF_NO = T1.SRF_NO
				LEFT JOIN (select max(trip_id) as tripID,srf_no as srf from IMP_TRUCK_SRF group by srf_no) ITS  ON ITS.srf = T1.SRF_NO
	      		LEFT JOIN TRUCK_TRIP TT ON TT.TRIP_ID = ITS.tripID
		WHERE 
				T1.AWB_NO = #awbNo#
			AND TO_CHAR( T1.AWB_DATE, 'DDMONYY') = #awbDate#
		ORDER BY T1.SRF_DATE
	</select>
	
	<select id="fetchAWBEnquiryStorageDetails" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO" resultClass="cargo.cms.awb.bo.AWBEnquiryStrgBO">
	SELECT
		AWB.loc_code locnCode,
		AWB.LOCN_PCS AS locnPcs,
		DECODE(AWB.LOCN_WT,null,'','0','',trim(TO_CHAR(NVL(AWB.LOCN_WT,0),'99999990.00'))) AS locnWt,
		AWB.LSP_NO AS lspNo,
		AWB.ULD_KEY AS uldKey,
		INV.contr_code contrCode, 
		awb.flt_type as fltType,
		AWB.FLT_KEY as fltKey,
		to_char(AWB.FLT_DATE,'DDMONYY') as fltDate,
		to_char(AWB.strg_date,'DDMONYY HH24:MI') as strgDate,
		awb.srf_no as srfNo,
		awb.trm_no as ctNo,
		awb.cdif_no as cdifNo,
		AWB.SEQ_NO AS seqNo,
		pkg_common.get_flt_ata(awb.FLT_KEY, awb.FLT_DATE,'A') AS ata,
		PKG_COMMON.GET_FLT_ETA(awb.FLT_KEY,awb.FLT_DATE,DECODE(AWB.FLT_TYPE,'E','D','A'),'DD') AS etd
	  FROM
	      AWB_INVENTORY AWB LEFT OUTER JOIN ULD_INVENTORY INV ON AWB.uld_key=INV.uld_key
	 WHERE
	      AWB_NO =#awbNo# AND 
	      AWB_DATE = #awbDate#
	</select>
	
	<select id="fetchAWBEnquiryExportStorageDetails" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO" resultClass="cargo.cms.awb.bo.AWBEnquiryStrgBO">
		
	SELECT
		    AWB.loc_code locnCode,
			AWB.LOCN_PCS AS locnPcs,
			DECODE(AWB.LOCN_WT,null,'','0','',trim(TO_CHAR(NVL(AWB.LOCN_WT,0),'99999990.00'))) AS locnWt,
			AWB.LSP_NO AS lspNo,
			AWB.ULD_KEY AS uldKey,
			INV.contr_code contrCode, 
			awb.flt_type as fltType,
			AWB.FLT_KEY as fltKey,
			to_char(AWB.FLT_DATE,'DDMONYY') as fltDate,
			to_char(AWB.strg_date,'DDMONYY HH24:MI') as strgDate,
			awb.srf_no as srfNo,
			awb.trm_no as ctNo,
			awb.cdif_no as cdifNo,
			AWB.SEQ_NO AS seqNo,
		pkg_common.get_flt_ata(awb.FLT_KEY, awb.FLT_DATE,'A') AS ata,
		PKG_COMMON.GET_FLT_ETA(awb.FLT_KEY,awb.FLT_DATE,DECODE(AWB.FLT_TYPE,'E','D','A'),'DD') AS etd
		  FROM
	      AWB_INVENTORY AWB LEFT OUTER JOIN ULD_INVENTORY INV ON AWB.uld_key=INV.uld_key
	 WHERE
	      AWB_NO =#awbNo# AND 
	      AWB_DATE = #awbDate#
	     
	</select>
	
	<select id="fetchAWBEnquiryFlightDetails" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO" resultClass="cargo.cms.awb.bo.AWBEnquiryFlightBO">
SELECT 
	  ICS.CARR_CODE carrCode,
      ICS.FLT_KEY AS fltNo,
      TO_CHAR (ICS.FLT_DATE, 'DDMONYY') AS fltDate,
      ICS.FLT_TYPE AS fltType,
      ICS.LDG_POINT as ldgPoint,
     (select carr_code from flt_opr where flt_key = ICS.FLT_KEY and sch_date = ICS.FLT_DATE and flt_type = decode(ICS.FLT_TYPE,'I','A','A','A','D','D','D')) fltCarr,
      PKG_COMMON.get_flt_sta(ICS.FLT_KEY, ICS.FLT_DATE, 'A') as sta,
      pkg_common.get_flt_ata(ICS.FLT_KEY, ICS.FLT_DATE,'A')  AS ata,
      DECODE(ICS.MANIFEST_PCS,null,'','0','',ICS.MANIFEST_PCS) AS manifestPcs,
      DECODE(ICS.MANIFEST_WT,null,'','0','',DECODE(trim(TO_CHAR(NVL(ICS.MANIFEST_WT,0),'99999990.00')),'0.0','',trim(TO_CHAR(NVL(ICS.MANIFEST_WT,0),'99999990.00')))) AS manifestWt,
      DECODE(ICS.RECD_PCS,null,'','0','',ICS.RECD_PCS) AS bdPcs,
      DECODE(ICS.RECD_WT,null,'','0','',DECODE(trim(TO_CHAR(NVL(ICS.RECD_WT,0),'99999990.00')),'0.0','',trim(TO_CHAR(NVL(ICS.RECD_WT,0),'99999990.00')))) AS bdWt,
      DECODE(ISRF.SRFPCS,null,'','0','',ISRF.SRFPCS) AS  srfpcs,
      DECODE(ISRF.SRFWT,null,'','0','',DECODE(trim(TO_CHAR(NVL(ISRF.SRFWT,0),'99999990.00')),'0.0','',trim(TO_CHAR(NVL(ISRF.SRFWT,0),'99999990.00')))) AS  srfwt,
      (SELECT DECODE(ICS.RECD_PCS,null,'','0','',ICS.RECD_PCS - nvl((SELECT DECODE(SUM(LOCN_PCS),'0','',SUM(LOCN_PCS)) FROM AWB_INVENTORY WHERE AWB_NO=#awbNo# AND AWB_DATE=#awbDate# AND FLT_KEY = ICS.FLT_KEY AND FLT_DATE = ICS.FLT_DATE AND FLT_TYPE='I' ),'0'))  FROM DUAL) AS releasePcs,
      (select DECODE(ICS.RECD_WT,null,'','0','',DECODE(trim(TO_CHAR(NVL(ICS.RECD_WT,0),'99999990.00')),'0','',trim(TO_CHAR(NVL(ICS.RECD_WT - (SELECT DECODE(SUM(LOCN_WT),'',0,SUM(LOCN_WT)) FROM AWB_INVENTORY WHERE AWB_NO=#awbNo# AND AWB_DATE=#awbDate# AND FLT_KEY = ICS.FLT_KEY AND FLT_DATE = ICS.FLT_DATE AND FLT_TYPE='I' ),0),'99999990.00')))) from dual) AS releaseWt,
      VCCODE.CC_CODE AS cc,
(SELECT STRAGG(STRINGDELIM(A.TRF_TYPE , ',')) FROM
  (SELECT DS.AWB_NO,DS.AWB_DATE,DM.FLT_KEY,DM.FLT_DATE,TRF_TYPE
    FROM DDT_SHP_TRF_DTL DTL,      DDT_SHP DS,      DDT_MSG DM
    WHERE 
    DS.DOC_LINE_NO=DTL.DOC_LINE_NO
    AND DS.TR_NO      =DTL.TR_NO
    AND DM.TR_NO      = DTL.TR_NO
    AND DM.DDT_STATUS = 'P'
    GROUP BY TRF_TYPE,DS.AWB_NO,DS.AWB_DATE,DM.FLT_KEY,DM.FLT_DATE) A WHERE A.AWB_NO=ICS.AWB_NO AND A.AWB_DATE=ICS.AWB_DATE AND A.FLT_KEY=ICS.FLT_KEY AND A.FLT_DATE=ICS.FLT_DATE
    and exists(select null from flt_opr_events where flt_key=A.FLT_KEY and sch_date=A.FLT_DATE and flt_type='A' and ddt_finalise_date is not null)) AS subType,
      decode(ICS.BULK_PCS,null,'','0','',ICS.BULK_PCS) AS blkPcs,
      DECODE(ICS.BULK_WT,null,'','0','',trim(TO_CHAR(NVL(ICS.BULK_WT,0),'99999990.00'))) AS blkWt,
      decode(ICS.BUP_PCS,null,'','0','',ICS.BUP_PCS) AS ppkPcs,
      DECODE(ICS.BUP_WT,null,'','0','',trim(TO_CHAR(NVL(ICS.BUP_WT,0),'99999990.00'))) AS ppkWt
    FROM
    IMP_CAR_SHP ICS  
    LEFT JOIN (SELECT SF.AWB_NO, SF.AWB_DATE, SF.ORIG_FLT_KEY, SF.ORIG_FLT_DATE,SUM(SR.SRF_PCS) SRFPCS, SUM(SR.SRF_WT) SRFWT,SUM(SF.DLV_PCS) RELPCS,
               SUM(DLV_WT) RELWT
               FROM IMP_SRF SR 
			         join IMP_SRF_FLT SF ON SR.SRF_NO = SF.SRF_NO
               WHERE ((SR.STATUS ='ISSUED' and SR.SRF_EXPY_DATE > SYSDATE) OR (SR.STATUS ='POSTED' or
				       SR.SRF_NO IN (SELECT SRF_NO FROM IMP_CDIF WHERE VOID_DATE IS NULL)))  
              GROUP BY SF.AWB_NO, SF.AWB_DATE, SF.ORIG_FLT_KEY, SF.ORIG_FLT_DATE
		) ISRF ON ICS.AWB_NO = ISRF.AWB_NO AND
			ICS.AWB_DATE = ISRF.AWB_DATE AND
			ICS.FLT_KEY = ISRF.ORIG_FLT_KEY AND
			ICS.FLT_DATE = ISRF.ORIG_FLT_DATE
  LEFT JOIN V_CST_IMP_CC_CODE_AWB_ALL VCCODE ON VCCODE.FLT_KEY=ICS.FLT_KEY AND VCCODE.FLT_DATE=ICS.FLT_DATE AND VCCODE.AWB_NO=ICS.AWB_NO AND VCCODE.AWB_DATE=ICS.AWB_DATE 
  AND VCCODE.HAWB_NO='000000000000000000'
  Where ICS.AWB_NO = #awbNo# AND ICS.AWB_DATE = to_date(#awbDate#,'DDMONYY') ORDER BY ICS.AWB_DATE
	</select>
	
	<select id="fetchAWBEnquiryImportULDDetails" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO" resultClass="cargo.cms.awb.bo.AWBEnquiryFlightBO">
	SELECT 
					(select sum(a.MAN_PCS) a 
											from edi_ffm_shp a,edi_ffm_uld b,edi_ffm_msg c 
											where a.tr_no=b.tr_no and a.udoc_line_no= b.doc_line_no 
												and  b.flt_key =#fltKey# and b.flt_date=#fltDate#
												and b.uld_key=K.ULD_KEY AND A.AWB_NO=#awbNo# AND A.AWB_DATE=#awbDate# and c.tr_no=a.tr_no and c.ffm_status='P') uldPcs,
					(select sum(a.MAN_WT) a 
											from edi_ffm_shp a,edi_ffm_uld b,edi_ffm_msg c 
											where a.tr_no=b.tr_no and a.udoc_line_no= b.doc_line_no 
												and  b.flt_key =#fltKey# and b.flt_date=#fltDate#
												and b.uld_key=K.ULD_KEY AND A.AWB_NO=#awbNo# AND A.AWB_DATE=#awbDate# and c.tr_no=a.tr_no and c.ffm_status='P') uldWt,
        NVL(K.ULD_KEY,'XXXXXXXXXXX') uldKey,
			  R.BRKDN_COMPL_YN bdComp,
((TO_CHAR(R.BRKDN_COMPL_DATE, 'DDMONYY') || ' ' || LTRIM(SUBSTR(TRIM(TO_CHAR(R.BRKDN_COMPL_TIME,'0000')),0,2) 
			|| ':'|| SUBSTR(TRIM(TO_CHAR(R.BRKDN_COMPL_TIME,'0000')),3,4), ':'))) bdCompTime,
(select trf_type from V_DDT_DTL v where v.ULD_KEY=U.uld_key and v.flt_key= m.flt_key and v.flt_date=m.flt_date and ROWNUM=1) transType,
U.loc_code location,
U.contr_code contour
			FROM edi_ffm_shp a,
			  edi_ffm_uld K,
			  edi_ffm_msg m,
			  IMP_RAMP_CHK_DTL R,
        ULD_INVENTORY U
			WHERE a.tr_no     =K.tr_no
			AND a.udoc_line_no= K.doc_line_no
			AND K.tr_no       = m.tr_no
			AND R.FLT_KEY(+)  = K.FLT_KEY
			AND R.FLT_DATE(+) = K.FLT_DATE
			AND R.ULD_KEY(+)  =K.ULD_KEY
      AND U.ULD_KEY(+) = K.ULD_KEY
			AND m.ffm_status  = 'P'
			AND K.flt_key     =#fltKey#
			AND K.flt_date    =#fltDate#
			AND A.AWB_NO      =#awbNo#
			AND A.AWB_DATE    =#awbDate#
      AND K.ULD_KEY IS NOT NULL
      UNION ALL
      SELECT 
					(select sum(a.MAN_PCS) a 
											from edi_ffm_shp a,edi_ffm_uld b,edi_ffm_msg c 
											where a.tr_no=b.tr_no and a.udoc_line_no= b.doc_line_no 
												and  b.flt_key =#fltKey# and b.flt_date=#fltDate#
												and B.ULD_KEY IS NULL AND A.AWB_NO=#awbNo# AND A.AWB_DATE=#awbDate# and c.tr_no=a.tr_no and c.ffm_status='P') uldPcs,
					(select sum(a.MAN_WT) a 
											from edi_ffm_shp a,edi_ffm_uld b,edi_ffm_msg c 
											where a.tr_no=b.tr_no and a.udoc_line_no= b.doc_line_no 
												and  b.flt_key =#fltKey# and b.flt_date=#fltDate#
												and B.ULD_KEY IS NULL AND A.AWB_NO=#awbNo# AND A.AWB_DATE=#awbDate# and c.tr_no=a.tr_no and c.ffm_status='P') uldWt,
        NVL(K.ULD_KEY,'XXXXXXXXXXXX') uldKey,
			  R.BRKDN_COMPL_YN bdComp,
((TO_CHAR(R.BRKDN_COMPL_DATE, 'DDMONYY') || ' ' || LTRIM(SUBSTR(TRIM(TO_CHAR(R.BRKDN_COMPL_TIME,'0000')),0,2) 
			|| ':'|| SUBSTR(TRIM(TO_CHAR(R.BRKDN_COMPL_TIME,'0000')),3,4), ':'))) bdCompTime,
DECODE(K.ULD_KEY,'',(SELECT STRAGG(STRINGDELIM(A.SHP_TRF_TYPE, ',')) FROM V_DDT_DTL A WHERE a.flt_key=m.flt_key and a.flt_date=m.flt_date AND A.AWB_NO = #awbNo# AND A.AWB_DATE = #awbDate# AND a.uld_key is null),U.TRANSIT_TYPE)  transType,
U.loc_code location,
U.contr_code contour
			FROM edi_ffm_shp a,
			  edi_ffm_uld K,
			  edi_ffm_msg m,
			  IMP_RAMP_CHK_DTL R,
        ULD_INVENTORY U
			WHERE a.tr_no     =K.tr_no
			AND a.udoc_line_no= K.doc_line_no
			AND K.tr_no       = m.tr_no
			AND R.FLT_KEY(+)  = K.FLT_KEY
			AND R.FLT_DATE(+) = K.FLT_DATE
			AND R.ULD_KEY(+)  =K.ULD_KEY
      AND U.ULD_KEY(+) = K.ULD_KEY
			AND m.ffm_status  = 'P'
			AND K.flt_key     =#fltKey#
			AND K.flt_date    =#fltDate#
			AND A.AWB_NO      =#awbNo#
			AND A.AWB_DATE    =#awbDate#
      AND K.ULD_KEY IS NULL
      UNION ALL
      SELECT b.tagPcs AS uldPcs,b.tagWt AS uldWt,NVL(B.CONTAINER_NO,'XXXXXXXXXXX') uldKey,R.BRKDN_COMPL_YN bdComp,
((TO_CHAR(R.BRKDN_COMPL_DATE, 'DDMONYY') || ' ' || LTRIM(SUBSTR(TRIM(TO_CHAR(R.BRKDN_COMPL_TIME,'0000')),0,2) 
			|| ':'|| SUBSTR(TRIM(TO_CHAR(R.BRKDN_COMPL_TIME,'0000')),3,4), ':'))) bdCompTime,
(select trf_type from V_DDT_DTL v where v.ULD_KEY=B.CONTAINER_NO and v.flt_key= #fltKey# and v.flt_date=#fltDate# and ROWNUM=1) transType,
U.loc_code location,
U.contr_code contour
FROM EDI_RESDIT_AWB_DTL A
JOIN (SELECT TR_AWB_NO,  CONTAINER_NO,  SUM(tag_wt)   AS tagWt,   COUNT(tag_no) AS tagPcs  FROM EDI_RESDIT_TAG_DTL   GROUP BY TR_AWB_NO,    CONTAINER_NO  ) B ON A.TR_AWB_NO = B.TR_AWB_NO
JOIN EDI_RESDIT_HD C ON C.TR_NO         = A.TR_NO
LEFT JOIN IMP_RAMP_CHK_DTL R ON R.FLT_KEY = #fltKey# AND R.FLT_DATE = TO_DATE(#fltDate#, 'DDMONYY') AND R.ULD_KEY = B.CONTAINER_NO
LEFT JOIN ULD_INVENTORY U ON U.ULD_KEY = B.CONTAINER_NO
WHERE B.CONTAINER_NO IS NOT NULL AND awb_no         = #awbNo#
AND awb_date       = to_date(#awbDate#,'DDMONYY')
AND C.flt_key    = #fltKey#
AND C.flt_date     = TO_DATE(#fltDate#, 'DDMONYY')
UNION ALL
SELECT b.tagPcs AS uldPcs,b.tagWt AS uldWt,NVL(B.CONTAINER_NO,'XXXXXXXXXXX') uldKey,R.BRKDN_COMPL_YN bdComp,
((TO_CHAR(R.BRKDN_COMPL_DATE, 'DDMONYY') || ' ' || LTRIM(SUBSTR(TRIM(TO_CHAR(R.BRKDN_COMPL_TIME,'0000')),0,2) 
			|| ':'|| SUBSTR(TRIM(TO_CHAR(R.BRKDN_COMPL_TIME,'0000')),3,4), ':'))) bdCompTime,
(select trf_type from V_DDT_DTL v where v.ULD_KEY=B.CONTAINER_NO and v.flt_key= #fltKey# and v.flt_date=#fltDate# and ROWNUM=1) transType,
U.loc_code location,
U.contr_code contour
FROM EDI_RESDIT_AWB_DTL A
JOIN (SELECT TR_AWB_NO,  CONTAINER_NO,  SUM(tag_wt)   AS tagWt,   COUNT(tag_no) AS tagPcs  FROM EDI_RESDIT_TAG_DTL   GROUP BY TR_AWB_NO,    CONTAINER_NO  ) B ON A.TR_AWB_NO = B.TR_AWB_NO
JOIN EDI_RESDIT_HD C ON C.TR_NO         = A.TR_NO
LEFT JOIN IMP_RAMP_CHK_DTL R ON R.FLT_KEY = #fltKey# AND R.FLT_DATE = TO_DATE(#fltDate#, 'DDMONYY') AND R.ULD_KEY = B.CONTAINER_NO
LEFT JOIN ULD_INVENTORY U ON U.ULD_KEY = B.CONTAINER_NO
WHERE B.CONTAINER_NO IS NULL AND awb_no         = #awbNo#
AND awb_date       = to_date(#awbDate#,'DDMONYY')
AND C.flt_key    = #fltKey#
AND C.flt_date     = TO_DATE(#fltDate#, 'DDMONYY')
	</select>
	
	
	<select id="fetchAWBEnquiryExpFlightDetails" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO" resultClass="cargo.cms.awb.bo.AWBEnquiryFlightBO">
   SELECT * FROM (SELECT
      EPA.FLT_KEY AS fltNo,
      TO_CHAR (EPA.FLT_DATE, 'DDMONYY') AS fltDate,
      EPA.FLT_TYPE AS fltType,
      epa.unldg_pt as unldgPt,
      (select carr_code from awb where awb_no=EPA.AWB_NO and awb_date=EPA.AWB_DATE AND ROWNUM=1) as carrCode,
      (select carr_code from flt_opr where flt_key = EPA.FLT_KEY and sch_date = EPA.FLT_DATE and flt_type = decode(EPA.FLT_TYPE,'I','A','D')) fltCarr,
      PKG_COMMON.get_flt_sta(EPA.FLT_KEY, EPA.FLT_DATE, 'D') std,
      PKG_COMMON.get_flt_ata(EPA.FLT_KEY, EPA.FLT_DATE, 'D') atd,
      (SELECT STRAGG(STRINGDELIM(A.TRF_TYPE , ',')) FROM
  (SELECT DS.AWB_NO,DS.AWB_DATE,DM.FLT_KEY,DM.FLT_DATE,TRF_TYPE
    FROM DDT_SHP_TRF_DTL DTL,      DDT_SHP DS,      DDT_MSG DM
    WHERE 
    DS.DOC_LINE_NO=DTL.DOC_LINE_NO
    AND DS.TR_NO      =DTL.TR_NO
    AND DM.TR_NO      = DTL.TR_NO
    AND DM.DDT_STATUS = 'P'
    GROUP BY TRF_TYPE,DS.AWB_NO,DS.AWB_DATE,DM.FLT_KEY,DM.FLT_DATE) A WHERE A.AWB_NO=EPA.AWB_NO AND A.AWB_DATE=EPA.AWB_DATE AND A.FLT_KEY=EPA.flt_key AND A.FLT_DATE=EPA.FLT_DATE
    and exists(select null from flt_opr_events where flt_key=A.FLT_KEY and sch_date=A.FLT_DATE and flt_type='A' and ddt_finalise_date is not null)) AS subType,
      decode(EPA.manf_pc,NULL,'','0','',EPA.manf_pc) AS preManifestPcs,  
      decode(EPA.manf_wt,NULL,'','0','',trim(TO_CHAR(NVL(EPA.manf_wt,0),'99999990.00'))) AS preManifestWt,  
      decode(EPA.bup_pc,NULL,'','0','',EPA.bup_pc) AS buPcs,
      decode(EPA.bup_wt,NULL,'','0','',trim(TO_CHAR(NVL(EPA.bup_wt,0),'99999990.00'))) AS buWt, 
      case when (select FINAL_MANF_IND from flt_opr_events  where FLT_KEY = EPA.FLT_KEY AND SCH_DATE = EPA.FLT_DATE AND FLT_TYPE = 'D')  = 'Y' then decode(EPA.manf_pc,NULL,'','0','',EPA.manf_pc) else '' end AS emanifestPcs,  
      case when (select FINAL_MANF_IND from flt_opr_events  where FLT_KEY = EPA.FLT_KEY AND SCH_DATE = EPA.FLT_DATE AND FLT_TYPE = 'D')  = 'Y' then decode(EPA.manf_wt,NULL,'','0','',trim(TO_CHAR(NVL(EPA.manf_wt,0),'99999990.00'))) else '' end AS emanifestWt,  
      decode(EPA.BULK_PC,NULL,'','0','',EPA.BULK_PC) AS eblkPcs,  
      decode(EPA.BULK_WT,NULL,'','0','',trim(TO_CHAR(NVL(EPA.BULK_WT,0),'99999990.00'))) AS eblkWt,
      decode(EPA.PPK_PC,NULL,'','0','',EPA.PPK_PC) AS eppkPcs, 
      decode(EPA.PPK_WT,NULL,'','0','',trim(TO_CHAR(NVL(EPA.PPK_WT,0),'99999990.00'))) AS eppkWt,    
      
      (SELECT EM.TR_NO FROM EXP_MANIFEST_DTL EM WHERE EPA.AWB_NO = EM.AWB_NO AND EPA.AWB_DATE = EM.AWB_DATE AND
      EPA.FLT_KEY = EM.FLT_KEY AND EPA.FLT_DATE = EM.FLT_DATE AND ROWNUM = 1) AS etrNo,        
      (SELECT EM.FLT_NO FROM EXP_MANIFEST_DTL EM WHERE EPA.AWB_NO = EM.AWB_NO AND EPA.AWB_DATE = EM.AWB_DATE AND
      EPA.FLT_KEY = EM.FLT_KEY AND EPA.FLT_DATE = EM.FLT_DATE AND ROWNUM = 1) AS efltNo1,
      (select DECODE(sum(pcs),NULL,'','0','',sum(pcs)) from edi_fbl_shp shp,edi_fbl fbl
      where shp.awb_no= EPA.awb_no
      and shp.awb_date=EPA.awb_date
      and fbl.flt_key=EPA.flt_key
      and fbl.flt_date=EPA.flt_date
      AND shp.tr_no= fbl.tr_no AND fbl.FBL_STATUS = 'P') as fblPc,   
      (select DECODE(sum(net_wt),null,'','0','',trim(TO_CHAR(NVL(sum(net_wt),0),'99999990.00'))) from edi_fbl_shp shp,edi_fbl fbl
      where shp.awb_no= EPA.awb_no
      and shp.awb_date=EPA.awb_date
      and fbl.flt_key=EPA.flt_key
      and fbl.flt_date=EPA.flt_date
      AND shp.tr_no= fbl.tr_no AND fbl.FBL_STATUS = 'P') as fblWt,
      (select  decode(sum(offload_pcs),null,'','0','',sum(offload_pcs))||DECODE(sum(offload_pcs),NULL,'','0','','/')||decode(sum(offload_wt),null,'','0','',trim(TO_CHAR(NVL(sum(offload_wt),0),'99999990.00'))) from exp_offload_uld_awb uldAwb where uldAwb.awb_no=EPA.awb_no  and uldAwb.awb_date=EPA.awb_date and uldAwb.flt_key=EPA.flt_key and uldAwb.flt_date=EPA.flt_date AND CONFIRMED_YN='Y') as offPcWt,    
      (select MSG_EDMP_CODE  from EXP_EDMP_HD HD
      where HD.awb_no= EPA.awb_no
      and HD.awb_date=EPA.awb_date
      and HD.flt_key=EPA.flt_key
      and HD.flt_date=EPA.flt_date
      AND rownum = 1) as nonPreRmk,
      '' as fblFltNo,
      '' as fblFltDate,
       (SELECT UPPER(lgt.LIGHT_SIGNAL) FROM EXP_AWB_LIGHT_SIGNAL_DTL lgt 
       INNER JOIN EXP_AWB_LIGHT_SIGNAL_HD lhd ON lhd.FLT_KEY = lgt.FLT_KEY AND lhd.FLT_DATE = lgt.FLT_DATE AND lhd.UNLDG_PT = lgt.UNLDG_PT
       WHERE lgt.AWB_NO = EPA.AWB_NO 
        AND EPA.AWB_DATE = lgt.AWB_DATE AND EPA.UNLDG_PT = lgt.UNLDG_PT AND lgt.FLT_KEY = EPA.FLT_KEY
        AND lgt.FLT_DATE = EPA.FLT_DATE
       ) as lightColor,
       EPA.FLT_DATE as orderFltDate,
  	   EPA.FLT_KEY as orderFltKey  
  FROM
  	(select  flt_key,flt_date,flt_type,unldg_pt,awb_no,awb_date,sum(manf_pc) manf_pc,sum(manf_wt) manf_wt,sum(bup_pc) bup_pc ,sum(bup_wt) bup_wt,sum(bulk_pc) bulk_pc,sum(bulk_wt) bulk_wt,sum(ppk_pc) ppk_pc,sum(ppk_wt) ppk_wt
         FROM ( select flt_key flt_key,flt_date flt_date,flt_type flt_type,unldg_pt unldg_pt, awb_no awb_no,awb_date awb_date, sum(nvl(pman_pcs,0)) manf_pc, sum(nvl(pman_wt,0)) manf_wt, 
         sum(nvl(BULK_PCS,0)) bulk_pc,
         sum(nvl(BULK_WT,0)) bulk_wt,
         sum( nvl(PPK_PCS,0)+nvl(MIX_PCS,0)) ppk_pc,
         sum( nvl(PPK_WT,0)+nvl(MIX_WT,0)) ppk_wt,
         sum( nvl(PPK_PCS,0)+nvl(MIX_PCS,0)+nvl(ASSIGNED_BULK_PCS,0)) bup_pc,
         sum( nvl(PPK_WT,0)+nvl(MIX_WT,0)+nvl(ASSIGNED_BULK_WT,0) )bup_wt 
         from exp_pmanifest_awb GROUP BY flt_key, flt_date, awb_no, awb_date,flt_type,unldg_pt
         UNION 
         select flt_key flt_key, flt_date flt_date,'E' flt_type,unldg_pt unldg_pt, awb_no awb_no,awb_date awb_date, sum(nvl(bulk_pcs,0)+nvl(ppk_pcs,0)) manf_pc, sum(nvl(bulk_wt,0)+nvl(ppk_wt,0)) manf_wt,
         sum(nvl(bulk_pcs,0)) bulk_pc,sum(nvl(bulk_wt,0)) bulk_wt,
         sum(nvl(ppk_pcs,0)) ppk_pc,sum(nvl(ppk_wt,0)) ppk_wt,
         sum(nvl(bulk_pcs,0)+nvl(ppk_pcs,0)) bup_pc,
         sum(nvl(bulk_wt,0)+nvl(ppk_wt,0)) bup_wt 
         from EXP_PMAN_TARMAC_AWB
         group by flt_key,awb_no,awb_date,flt_date,unldg_pt) 
         group by flt_key,flt_date,awb_no,awb_date,flt_type,unldg_pt) EPA  
  WHERE
      EPA.AWB_NO = #awbNo# AND 
      EPA.AWB_DATE = #awbDate# 
  UNION
       select '',
            '',
    		'E' AS fltType,
        shp.unldg_pt as unldgPt,
   			(select carr_code from flt_opr where flt_key = fbl.flt_key and sch_date = fbl.flt_date and rownum=1) as carrCode,
   			 '',
   			 PKG_COMMON.get_flt_sta(fbl.flt_key, fbl.FLT_DATE, 'D') std,
         PKG_COMMON.get_flt_ata(fbl.flt_key, fbl.FLT_DATE, 'D') atd,
   			 '',
  			 ((CASE WHEN (SELECT COUNT(1) FROM exp_pmanifest_awb_first WHERE AWB_NO=#awbNo# AND AWB_DATE=#awbDate# AND FLT_KEY=fbl.flt_key AND FLT_DATE=fbl.flt_date) > 0 THEN '0' ELSE '' END)) preManifestPcs,
         (CASE WHEN (SELECT COUNT(1) FROM exp_pmanifest_awb_first WHERE AWB_NO=#awbNo# AND AWB_DATE=#awbDate# AND FLT_KEY=fbl.flt_key AND FLT_DATE=fbl.flt_date) > 0 THEN '0' ELSE '' END) preManifestWt,
         '','','','',
			     '', 
			     '',
			     '',
			     '',
			     '',
			     '',
          (DECODE(sum(pcs),NULL,'','0','',sum(pcs))) as fblPc,   
		    (DECODE(sum(net_wt),null,'','0','',trim(TO_CHAR(NVL(sum(net_wt),0),'99999990.00')))) as fblWt,
		    (select  decode(sum(offload_pcs),null,'','0','',sum(offload_pcs))||DECODE(sum(offload_pcs),NULL,'','0','','/')||decode(sum(offload_wt),null,'','0','',trim(TO_CHAR(NVL(sum(offload_wt),0),'99999990.00'))) from exp_offload_uld_awb uldAwb where uldAwb.awb_no= #awbNo#  and uldAwb.awb_date=#awbDate# and uldAwb.flt_key=fbl.flt_key and uldAwb.flt_date=fbl.flt_date AND CONFIRMED_YN='Y') as offPcWt,        
		    (select MSG_EDMP_CODE  from EXP_EDMP_HD HD
      where HD.awb_no= #awbNo#
      and HD.awb_date=#awbDate#
      and HD.flt_key=fbl.flt_key
      and HD.flt_date=fbl.flt_date
      AND rownum = 1) as nonPreRmk,
		    fbl.flt_key as fblFltNo,
		     TO_CHAR ( fbl.flt_date, 'DDMONYY') as fblFltDate,
		     (SELECT UPPER(lgt.LIGHT_SIGNAL) FROM EXP_AWB_LIGHT_SIGNAL_DTL lgt 
		     INNER JOIN EXP_AWB_LIGHT_SIGNAL_HD lhd ON lhd.FLT_KEY = lgt.FLT_KEY AND lhd.FLT_DATE = lgt.FLT_DATE AND lhd.UNLDG_PT = lgt.UNLDG_PT
		     WHERE lgt.AWB_NO = #awbNo# 
        AND TO_CHAR(lgt.AWB_DATE,'DDMONYY') = #awbDate# AND shp.UNLDG_PT = lgt.UNLDG_PT AND lgt.FLT_KEY = fbl.FLT_KEY
        AND lgt.FLT_DATE = fbl.FLT_DATE
       ) as lightColor,
       fbl.flt_date as orderFltDate,
  	   fbl.FLT_KEY as orderFltKey
     FROM edi_fbl_shp shp,edi_fbl fbl
     WHERE shp.tr_no= fbl.tr_no and  fbl.FBL_STATUS = 'P' AND
      shp.AWB_NO = #awbNo# AND 
      shp.AWB_DATE = #awbDate#  
      AND NOT EXISTS (select NULL from exp_pmanifest_awb where awb_no=#awbNo# and awb_date=#awbDate# AND FLT_KEY=fbl.flt_key AND FLT_DATE=fbl.flt_date) group by fbl.flt_key,fbl.flt_date,fbl.carr_code,shp.unldg_pt
      union
      select '',
            '',
    		'E' AS fltType,
        OFAWB.unldg_pt as unldgPt,
   			(select carr_code from flt_opr where flt_key = OFAWB.flt_key and sch_date = OFAWB.flt_date and rownum=1) as carrCode,
   			 '',
   			 PKG_COMMON.get_flt_sta(OFAWB.flt_key, OFAWB.FLT_DATE, 'D') std,
         PKG_COMMON.get_flt_ata(OFAWB.flt_key, OFAWB.FLT_DATE, 'D') atd,
   			 '',
  			 '0' preManifestPcs,
         '0' preManifestWt,
         '','','','',
			     '', 
			     '',
			     '',
			     '',
			     '',
			     '',
          (select DECODE(sum(PCS),NULL,'','0','',sum(PCS)) from edi_fbl_shp shp,edi_fbl fbl
           where shp.awb_no= OFAWB.AWB_NO
                 and shp.awb_date=OFAWB.AWB_DATE
                 and fbl.flt_key=OFAWB.flt_key
                 and fbl.flt_date=OFAWB.flt_date
                 AND shp.tr_no= fbl.tr_no AND fbl.FBL_STATUS = 'P') as fblPc,   
		     (select (DECODE(sum(net_wt),null,'','0','',trim(TO_CHAR(NVL(sum(net_wt),0),'99999990.00')))) from edi_fbl_shp shp,edi_fbl fbl
          where shp.awb_no= OFAWB.AWB_NO
                and shp.awb_date=OFAWB.AWB_DATE
                and fbl.flt_key=OFAWB.flt_key
                and fbl.flt_date=OFAWB.flt_date
                AND shp.tr_no= fbl.tr_no AND fbl.FBL_STATUS = 'P') as fblWt,
          (select decode(sum(offload_pcs),null,'',sum(offload_pcs))||DECODE(sum(offload_pcs),NULL,'','/')||decode(sum(offload_wt),null,'','0','',trim(TO_CHAR(NVL(sum(offload_wt),0),'99999990.00'))) from exp_offload_uld_awb uldAwb where uldAwb.awb_no= OFAWB.AWB_NO  and uldAwb.awb_date=OFAWB.AWB_DATE and uldAwb.flt_key=OFAWB.flt_key and uldAwb.flt_date=OFAWB.flt_date AND CONFIRMED_YN='Y') as offPcWt,        
            (select MSG_EDMP_CODE  from EXP_EDMP_HD HD
      where HD.awb_no= #awbNo#
      and HD.awb_date=#awbDate#
      and HD.flt_key=OFAWB.flt_key
      and HD.flt_date=OFAWB.flt_date
      AND rownum = 1) as nonPreRmk,
          OFAWB.flt_key as fblFltNo,
          TO_CHAR ( OFAWB.flt_date, 'DDMONYY') as fblFltDate,
          (SELECT UPPER(lgt.LIGHT_SIGNAL) FROM EXP_AWB_LIGHT_SIGNAL_DTL lgt
          INNER JOIN EXP_AWB_LIGHT_SIGNAL_HD lhd ON lhd.FLT_KEY = lgt.FLT_KEY AND lhd.FLT_DATE = lgt.FLT_DATE AND lhd.UNLDG_PT = lgt.UNLDG_PT
           WHERE lgt.AWB_NO = OFAWB.AWB_NO 
        AND OFAWB.AWB_DATE = lgt.AWB_DATE AND OFAWB.UNLDG_PT = lgt.UNLDG_PT AND lgt.FLT_KEY = OFAWB.FLT_KEY
        AND lgt.FLT_DATE = OFAWB.FLT_DATE
       ) as lightColor,
       OFAWB.flt_date as orderFltDate,
  	   OFAWB.FLT_KEY as orderFltKey
     	FROM EXP_OFFLOAD_ULD_AWB OFAWB
  		WHERE 
      	OFAWB.AWB_NO = #awbNo# AND 
      	OFAWB.AWB_DATE = #awbDate# and
      	OFAWB.CONFIRMED_YN='Y'  
      	AND NOT EXISTS (select NULL from exp_pmanifest_awb where awb_no=#awbNo# and awb_date=#awbDate# AND FLT_KEY=OFAWB.flt_key AND FLT_DATE=OFAWB.flt_date) 
      	AND NOT EXISTS (select NULL from edi_fbl_shp shp,edi_fbl fbl
    		where shp.awb_no= #awbNo#
    		and shp.awb_date=#awbDate#
    		and fbl.flt_key=OFAWB.flt_key
    		and fbl.flt_date=OFAWB.flt_date
    		AND shp.tr_no= fbl.tr_no AND fbl.FBL_STATUS = 'P')
    		AND NOT EXISTS(select NULL from exp_pman_tarmac_awb where awb_no=#awbNo# and awb_date=#awbDate# AND FLT_KEY=OFAWB.flt_key AND FLT_DATE=OFAWB.flt_date)
        UNION
        select OFAWB.FLT_KEY AS fltNo,
      TO_CHAR (OFAWB.FLT_DATE, 'DDMONYY') AS fltDate,
    		'E' AS fltType,
        OFAWB.unldg_pt as unldgPt,
   			(select carr_code from flt_opr where flt_key = OFAWB.flt_key and sch_date = OFAWB.flt_date and rownum=1) as carrCode,
   			 '',
   			 PKG_COMMON.get_flt_sta(OFAWB.flt_key, OFAWB.FLT_DATE, 'D') std,
         PKG_COMMON.get_flt_ata(OFAWB.flt_key, OFAWB.FLT_DATE, 'D') atd,
   			 '',
  			 '0' AS preManifestPcs,
         '0' AS preManifestWt, 
         '','','','',
			     '', 
			     '',
			     '',
			     '',
			     '',
			     '',
          '' as fblPc,   
		     '' as fblWt,
        '' as offPcWt,        
        '' as nonPreRmk,
        '' as fblFltNo,
        '' as fblFltDate,
        (SELECT UPPER(lgt.LIGHT_SIGNAL) FROM EXP_AWB_LIGHT_SIGNAL_DTL lgt
        INNER JOIN EXP_AWB_LIGHT_SIGNAL_HD lhd ON lhd.FLT_KEY = lgt.FLT_KEY AND lhd.FLT_DATE = lgt.FLT_DATE AND lhd.UNLDG_PT = lgt.UNLDG_PT
         WHERE lgt.AWB_NO = OFAWB.AWB_NO 
        AND OFAWB.AWB_DATE = lgt.AWB_DATE AND OFAWB.UNLDG_PT = lgt.UNLDG_PT AND lgt.FLT_KEY = OFAWB.FLT_KEY
        AND lgt.FLT_DATE = OFAWB.FLT_DATE
          ) as lightColor,
          OFAWB.flt_date as orderFltDate,
 		  OFAWB.FLT_KEY as orderFltKey
     	FROM exp_pmanifest_awb_first OFAWB
  		WHERE 
      	OFAWB.AWB_NO = #awbNo# AND 
      	OFAWB.AWB_DATE = #awbDate#       	
      	AND NOT EXISTS (select NULL from exp_pmanifest_awb where awb_no=#awbNo# and awb_date=#awbDate# AND FLT_KEY=OFAWB.flt_key AND FLT_DATE=OFAWB.flt_date) 
      	AND NOT EXISTS (select NULL from edi_fbl_shp shp,edi_fbl fbl
    		where shp.awb_no= #awbNo#
    		and shp.awb_date=#awbDate#
    		and fbl.flt_key=OFAWB.flt_key
    		and fbl.flt_date=OFAWB.flt_date
    		AND shp.tr_no= fbl.tr_no AND fbl.FBL_STATUS = 'P')
    		AND NOT EXISTS(select NULL from exp_pman_tarmac_awb where awb_no=#awbNo# and awb_date=#awbDate# AND FLT_KEY=OFAWB.flt_key AND FLT_DATE=OFAWB.flt_date)
        and not exists(select NULL from exp_offload_uld_Awb where awb_no=#awbNo# and awb_date=#awbDate# AND FLT_KEY=OFAWB.flt_key AND FLT_DATE=OFAWB.flt_date AND CONFIRMED_YN='Y')
        ) order by orderFltDate DESC,std DESC,orderFltKey
   </select>
   <select id="fetchAWBEnquiryExportULDDetails" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO" resultClass="cargo.cms.awb.bo.AWBEnquiryFlightBO">
   SELECT A.ULD_BT_NO uldKey,
      		  a.assigned_pcs uldPcs,
				  trim(TO_CHAR(NVL(a.assigned_wt,0),'99999990.00')) uldWt,
				  TO_CHAR(b.bldup_complete_date,'DDMONYY HH24:MI') bpCompTime,
          b.bldup_complete as bpComp,
          (select trf_type from V_DDT_DTL v where v.ULD_KEY=A.uld_bt_no and v.cntg_flt_key= A.flt_key and v.cntg_flt_date=A.flt_date and ROWNUM=1) transType,
          b.ready_disp readyDisp,
          B.READY_WH readywh,
          C.LOC_CODE location,
          B.contr_code contour
				FROM EXP_PMANIFEST_ULD_AWB A
				LEFT JOIN EXP_PMANIFEST_ULD B
        ON B.FLT_KEY   = A.FLT_KEY
				AND B.FLT_DATE = A.FLT_DATE
				AND A.ULD_BT_NO= B.ULD_BT_NO
				LEFT JOIN ULD_INVENTORY C ON
        C.ULD_KEY = A.ULD_BT_NO AND
        C.FLT_KEY = A.FLT_KEY AND
        C.FLT_DATE = A.FLT_DATE
				WHERE A.AWB_NO      =#awbNo#
				AND A.AWB_DATE    =#awbDate#
				AND A.FLT_KEY=#fltKey#
        AND A.FLT_DATE=#fltDate#
				UNION ALL
        SELECT A.ULD_BT_NO uldKey,
      		  a.assigned_pcs uldPcs,
				  trim(TO_CHAR(NVL(a.assigned_wt,0),'99999990.00')) uldWt,
				  TO_CHAR(b.CR_DATE,'DDMONYY HH24:MI') bpCompTime,
          'Y' as bpComp,
		 (select trf_type from V_DDT_DTL v where v.ULD_KEY=A.uld_bt_no and v.cntg_flt_key= A.flt_key and v.cntg_flt_date=A.flt_date and ROWNUM=1) transType,
          DECODE(C.TRANSIT_TYPE,'','',NULL,'','IF',NVL(B.READY_DISP,'N'),'Y') readyDisp,
          DECODE(C.TRANSIT_TYPE,'','',NULL,'','IF',NVL(B.READY_DISP,'N'),'Y') readywh,
          C.LOC_CODE location,
          decode(b.contr_code,null,C.contr_code,B.contr_code) contour
				FROM EXP_PMAN_TARMAC_ULD_AWB A
				LEFT JOIN EXP_PMAN_TARMAC_ULD B
				ON B.FLT_KEY   = A.FLT_KEY
				AND B.FLT_DATE = A.FLT_DATE
				AND A.ULD_BT_NO= B.ULD_BT_NO
			  LEFT JOIN ULD_INVENTORY C ON
        C.ULD_KEY = A.ULD_BT_NO AND
        C.FLT_KEY = A.FLT_KEY AND
        C.FLT_DATE = A.FLT_DATE
				WHERE A.AWB_NO      =#awbNo#
				AND A.AWB_DATE    =#awbDate#
				AND A.FLT_KEY=#fltKey#
        AND A.FLT_DATE=#fltDate#
        UNION ALL
        SELECT 'XXXXXXXXXXX' uldKey,
	       a.BULK_PCS uldPcs,
	       trim(TO_CHAR(NVL(a.BULK_WT,0),'99999990.00')) uldWt,
	       '' bpCompTime,
	       '' bpComp,
	       'TT' transType,
	       '' readyDisp,
	       '' readywh,
	       '' location,
	       '' contour
	        FROM EXP_PMAN_TARMAC_AWB A WHERE
        A.AWB_NO=#awbNo# AND A.AWB_DATE=#awbDate# 
      AND A.FLT_KEY=#fltKey# AND A.FLT_DATE=#fltDate# AND A.BULK_PCS != 0 AND A.BULK_WT !=0
   </select>
   <select id="fetchAWBEnquiryExpOffloadFlightDetails" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO" resultClass="cargo.cms.awb.bo.AWBEnquiryFlightBO">
    select  EOUA.FLT_KEY AS fltNo,
      TO_CHAR (EOUA.FLT_DATE, 'DDMONYY') AS fltDate,
    		'E' AS fltType,
        EOUA.UNLDG_PT AS ldgPoint,
   			 '',
   			 '',
   			 PKG_COMMON.get_flt_sta(EOUA.FLT_KEY, EOUA.FLT_DATE, 'D') std,
         PKG_COMMON.get_flt_ata(EOUA.FLT_KEY, EOUA.FLT_DATE, 'D') atd,
   			 '',
  			 0 AS preManifestPcs,0 AS preManifestWt,
         0,0,0,0,
			     '', 
			     '',
			     '',
			     '',
			     '',
			     '',
            '' as fblPc,   
		    '' as fblWt,
		    (sum(OFFLOAD_PCS) )||'/'||(sum(OFFLOAD_WT) ) as offPcWt,    
		    '' as nonPreRmk,
		    '' as fblFltNo,
		    '' as fblFltDate,
		    (SELECT UPPER(lgt.LIGHT_SIGNAL) FROM EXP_AWB_LIGHT_SIGNAL_DTL lgt 
		    INNER JOIN EXP_AWB_LIGHT_SIGNAL_HD lhd ON lhd.FLT_KEY = lgt.FLT_KEY AND lhd.FLT_DATE = lgt.FLT_DATE AND lhd.UNLDG_PT = lgt.UNLDG_PT
		    WHERE lgt.AWB_NO = #awbNo# 
        AND lgt.AWB_DATE = TO_CHAR(#awbDate#,'DDMONYY') AND EOUA.UNLDG_PT = lgt.UNLDG_PT AND lgt.FLT_KEY = EOUA.FLT_KEY
        AND lgt.FLT_DATE = EOUA.FLT_DATE
       ) as lightColor 
     FROM EXP_OFFLOAD_ULD_AWB EOUA
  WHERE EOUA.AWB_NO = #awbNo# AND 
      EOUA.AWB_DATE = #awbDate# AND
      CONFIRMED_YN = 'Y' 
      and not exists (select NULL from exp_pman_tarmac_awb where awb_no=#awbNo# and awb_date=#awbDate# AND FLT_KEY = EOUA.FLT_KEY AND FLT_DATE=EOUA.FLT_DATE)
      AND NOT EXISTS (select NULL from exp_pmanifest_awb where awb_no=#awbNo# and awb_date=#awbDate# AND FLT_KEY = EOUA.FLT_KEY AND FLT_DATE=EOUA.FLT_DATE
                        UNION SELECT NULL FROM edi_fbl_shp shp,edi_fbl fbl
      WHERE shp.tr_no= fbl.tr_no and  fbl.FBL_STATUS = 'P' AND
      shp.AWB_NO = #awbNo# AND 
      shp.AWB_DATE = #awbDate# AND fbl.flt_key=EOUA.FLT_KEY and fbl.flt_date = EOUA.FLT_DATE
      ) group by EOUA.flt_key,EOUA.flt_date,EOUA.UNLDG_PT
   </select>
   <select id="fetchAWBEnquiryTranshipmentOffloadFlightDetails" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO" resultClass="cargo.cms.awb.bo.AWBEnquiryFlightBO">
       select '' ecarrcode,
       '',
       '',
       '',
       '',
      PKG_COMMON.get_flt_sta(EOUA.FLT_KEY, EOUA.FLT_DATE, 'D') std,
      PKG_COMMON.get_flt_ata(EOUA.FLT_KEY, EOUA.FLT_DATE, 'D') atd,
       '',
       '',   
       '',
       '',     
       '',
       '',
      '' AS subType,
       '',
       '',
       '',
       '',
       '',
       '',
       '',
      '' as efltCarr,
     EOUA.FLT_KEY AS efltNo,
     TO_CHAR (EOUA.FLT_DATE, 'DDMONYY') AS efltDate,
      'E' AS efltType,
      EOUA.UNLDG_PT AS ldgPoint,
     '0' AS preManifestPcs,  
     '0' AS preManifestWt,  
     '' AS buPcs,
      '' AS buWt, 
      '' AS emanifestPcs,
     '' AS emanifestWt,
      '' AS eblkPcs,
     '' AS eblkWt,
     '' AS eppkPcs,
     '' AS eppkWt,
     '' AS etrNo,        
     '' AS efltNo1,     
     '' as fblPc,   
     '' as fblWt,
     (sum(OFFLOAD_PCS)) ||DECODE(sum(OFFLOAD_PCS),NULL,'','/')|| (sum(OFFLOAD_WT)) as offPcWt,    
     '' as nonPreRmk,
     '' as fblFltNo,
     '' as fblFltDate,
      (SELECT UPPER(lgt.LIGHT_SIGNAL) FROM EXP_AWB_LIGHT_SIGNAL_DTL lgt 
      INNER JOIN EXP_AWB_LIGHT_SIGNAL_HD lhd ON lhd.FLT_KEY = lgt.FLT_KEY AND lhd.FLT_DATE = lgt.FLT_DATE AND lhd.UNLDG_PT = lgt.UNLDG_PT
      WHERE lgt.AWB_NO = #awbNo# 
        AND lgt.AWB_DATE = TO_CHAR(#awbDate#,'DDMONYY') AND EOUA.UNLDG_PT = lgt.UNLDG_PT AND lgt.FLT_KEY = EOUA.FLT_KEY
        AND lgt.FLT_DATE = EOUA.FLT_DATE
       ) as lightColor 
     FROM EXP_OFFLOAD_ULD_AWB EOUA
     WHERE EOUA.AWB_NO = #awbNo# AND 
      EOUA.AWB_DATE = #awbDate# AND
      CONFIRMED_YN='Y' 
      and not exists (select NULL from exp_pman_tarmac_awb where awb_no=#awbNo# and awb_date=#awbDate# AND FLT_KEY = EOUA.FLT_KEY AND FLT_DATE=EOUA.FLT_DATE)
      AND NOT EXISTS (select NULL from exp_pmanifest_awb where awb_no=#awbNo# and awb_date=#awbDate# and FLT_KEY = EOUA.FLT_KEY AND FLT_DATE=EOUA.FLT_DATE
      UNION
      SELECT NULL FROM edi_fbl_shp shp,edi_fbl fbl
      WHERE shp.tr_no= fbl.tr_no and  fbl.FBL_STATUS = 'P' AND
      shp.AWB_NO = #awbNo# AND 
      shp.AWB_DATE = #awbDate# AND fbl.flt_key=EOUA.FLT_KEY and fbl.flt_date = EOUA.FLT_DATE
      ) group by EOUA.flt_key,EOUA.flt_date,EOUA.UNLDG_PT
   </select>
	
	
	<select id="fetchAWBEnquiryTruckFltDetail" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO" resultClass="cargo.cms.awb.bo.AWBEnquiryBO">
   SELECT  trkHd.TRUCK_FLT_NO trkFltKey, 
        to_char(trkHd.TRUCK_FLT_DATE, 'DDMONYY') trkFltDate, 
        SUBSTR(TRIM(TO_CHAR(NVL(trkHd.SCH_TIME,0),'0000')),0,2) || ':' || SUBSTR(TRIM(TO_CHAR(NVL(trkHd.SCH_TIME,0),'0000')),3,4) schTime, 
        trkHd.truck_No truckNo, 
        trkHd.UNLDG_PT unldgPt, 
        trkFlt.OPERATOR operator,       
        DTL.trkMnfPcs trkMnfPcs , 
        DTL.trkMnfWt trkMnfWt,
        DTL.loadedPcs loadedPcs,
        DTL.loadedWt loadedWt,
        DTL.ofldPcs ofldPcs,
        DTL.ofldWt ofldWt,
        STATUS status
	from ITM_TRK_MANF_HD  trkHd  
 	JOIN ITM_TRK_FLT trkFlt ON trkHd.TRUCK_FLT_NO = trkFlt.TRUCK_FLT_NO and trkHd.TRUCK_FLT_DATE	= trkFlt.TRUCK_FLT_DATE
 	JOIN (SELECT SUM(A.OFFLD_PCS) ofldPcs,SUM(A.OFFLD_WT) ofldWt,sum(B.BU_PCS) loadedPcs,sum(B.BU_WT) loadedWt ,sum(B.TRK_MANF_PCS) trkMnfPcs,SUM(B.TRK_MANF_WT) trkMnfWt ,
        A.TRUCK_FLT_NO, A.TRUCK_FLT_DATE
        FROM ITM_TRK_MANF_HD  trkHd 
        join ITM_TRK_MANF_SHP A on A.tr_no = trkHd.tr_no
        JOIN ITM_TRK_MANF_AWB B ON  B.tr_no = trkHd.tr_no and A.AWB_NO = B.AWB_NO AND A.AWB_DATE = B.AWB_DATE AND A.TRUCK_FLT_NO = B.TRUCK_FLT_NO 
										AND A.TRUCK_FLT_DATE = B.TRUCK_FLT_DATE
        WHERE trkHd.status not in ('VOID') and A.AWB_NO = #awbNo# AND A.AWB_DATE = #awbDate# 
        GROUP BY A.TRUCK_FLT_NO, A.TRUCK_FLT_DATE) DTL
  	ON trkHd.TRUCK_FLT_NO = DTL.TRUCK_FLT_NO and trkHd.TRUCK_FLT_DATE	= DTL.TRUCK_FLT_DATE
	</select>
	
	
	<select id="fetchAWBEnquiryTranshipmentFlightDetails" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO" resultClass="cargo.cms.awb.bo.AWBEnquiryFlightBO">
SELECT 
      (select carr_code from awb where awb_no=ICS.AWB_NO and awb_date=ICS.AWB_DATE AND ROWNUM=1) carrCode,
      (select carr_code from flt_opr where flt_key = ICS.FLT_KEY and sch_date = ICS.FLT_DATE and flt_type = decode(ICS.FLT_TYPE,'I','A','D')) fltCarr,
      ICS.FLT_KEY AS fltNo,
      TO_CHAR (ICS.FLT_DATE, 'DDMONYY') AS fltDate,
      ICS.FLT_TYPE AS fltType,
      ICS.LDG_POINT AS ldgPoint,
      PKG_COMMON.get_flt_sta(ICS.FLT_KEY, ICS.FLT_DATE, 'A') as sta,
      pkg_common.get_flt_ata(ICS.FLT_KEY, ICS.FLT_DATE,'A')  AS ata,
      DECODE(ICS.MANIFEST_PCS,NULL,'','0','',ICS.MANIFEST_PCS) AS manifestPcs,
      DECODE(ICS.MANIFEST_WT,null,'','0','',DECODE(trim(TO_CHAR(NVL(ICS.MANIFEST_WT,0),'99999990.00')),'0.0','',trim(TO_CHAR(NVL(ICS.MANIFEST_WT,0),'99999990.00')))) AS manifestWt,
      DECODE(ICS.RECD_PCS,NULL,'','0','',ICS.RECD_PCS) AS bdPcs,
      DECODE(ICS.RECD_WT,null,'','0','',DECODE(trim(TO_CHAR(NVL(ICS.RECD_WT,0),'99999990.00')),'0.0','',trim(TO_CHAR(NVL(ICS.RECD_WT,0),'99999990.00')))) AS bdWt,
      DECODE(ISRF.SRFPCS,'0','',NULL,'',ISRF.SRFPCS) AS  srfpcs,
      DECODE(ISRF.SRFWT,null,'','0','',DECODE(trim(TO_CHAR(NVL(ISRF.SRFWT,0),'99999990.00')),'0.0','',trim(TO_CHAR(NVL(ISRF.SRFWT,0),'99999990.00')))) AS  srfwt,
		  '' AS releasePcs,
      '' AS releaseWt,
      VCCODE.CC_CODE AS cc,
	    (SELECT STRAGG(STRINGDELIM(A.TRF_TYPE , ',')) FROM
  (SELECT DS.AWB_NO,DS.AWB_DATE,DM.FLT_KEY,DM.FLT_DATE,TRF_TYPE
    FROM DDT_SHP_TRF_DTL DTL,      DDT_SHP DS,      DDT_MSG DM
    WHERE 
    DS.DOC_LINE_NO=DTL.DOC_LINE_NO
    AND DS.TR_NO      =DTL.TR_NO
    AND DM.TR_NO      = DTL.TR_NO
    AND DM.DDT_STATUS = 'P'
    GROUP BY TRF_TYPE,DS.AWB_NO,DS.AWB_DATE,DM.FLT_KEY,DM.FLT_DATE) A WHERE A.AWB_NO=ICS.AWB_NO AND A.AWB_DATE=ICS.AWB_DATE AND A.FLT_KEY=ICS.FLT_KEY AND A.FLT_DATE=ICS.FLT_DATE
    and exists(select null from flt_opr_events where flt_key=A.FLT_KEY and sch_date=A.FLT_DATE and flt_type='A' and ddt_finalise_date is not null)) AS subType,
      DECODE(ICS.BULK_PCS,NULL,'','0','',ICS.BULK_PCS) AS blkPcs,
      DECODE(ICS.BULK_WT,null,'','0','',DECODE(trim(TO_CHAR(NVL(ICS.BULK_WT,0),'99999990.00')),'0.0','',trim(TO_CHAR(NVL(ICS.BULK_WT,0),'99999990.00')))) AS blkWt,
      DECODE(ICS.BUP_PCS,NULL,'','0','',ICS.BUP_PCS) AS ppkPcs,
      DECODE(ICS.BUP_WT,null,'','0','',DECODE(trim(TO_CHAR(NVL(ICS.BUP_WT,0),'99999990.00')),'0.0','',trim(TO_CHAR(NVL(ICS.BUP_WT,0),'99999990.00')))) AS ppkWt,
      '' efltCarr,
      '' AS efltNo,
      '' AS efltDate,
      '' AS efltType,
      '' AS std,
      '' as atd,
      '' AS unldgPt,
      '' AS preManifestPcs,
      '' AS preManifestWt,
      '' AS buPcs,
      '' AS buWt,      
      '' AS emanifestPcs,  
      '' AS emanifestWt,            
      '' AS eblkPcs,
      '' AS eblkWt,
      '' AS tpkOrTnb,
      '' AS eppkPcs,
      '' AS eppkWt,
      '' AS etrNo,        
      '' AS efltNo1,
      t4.fblPc as fblPc,
      TRIM(to_char(t4.fblWt,9999999.99)) as fblWt,
      '' as offPcWt,
      '' as nonPreRmk,
      '' as fblFltNo,
      '' as fblFltDate,
      (SELECT UPPER(lgt.LIGHT_SIGNAL) FROM EXP_AWB_LIGHT_SIGNAL_DTL lgt 
      INNER JOIN EXP_AWB_LIGHT_SIGNAL_HD lhd ON lhd.FLT_KEY = lgt.FLT_KEY AND lhd.FLT_DATE = lgt.FLT_DATE AND lhd.UNLDG_PT = lgt.UNLDG_PT
      WHERE lgt.AWB_NO = ICS.AWB_NO 
        AND ICS.AWB_DATE = lgt.AWB_DATE AND lgt.FLT_KEY = ICS.FLT_KEY
        AND lgt.FLT_DATE = ICS.FLT_DATE
       ) as lightColor  
    FROM
    IMP_CAR_SHP ICS
    LEFT JOIN (SELECT SF.AWB_NO, SF.AWB_DATE, SF.ORIG_FLT_KEY, SF.ORIG_FLT_DATE,SUM(SR.SRF_PCS) SRFPCS, SUM(SR.SRF_WT) SRFWT,SUM(SF.DLV_PCS) RELPCS,
               SUM(DLV_WT) RELWT
               FROM IMP_SRF SR 
                           join IMP_SRF_FLT SF ON SR.SRF_NO = SF.SRF_NO
               WHERE ((SR.STATUS ='ISSUED' and SR.SRF_EXPY_DATE > SYSDATE) OR (SR.STATUS ='POSTED' or
                               SR.SRF_NO IN (SELECT SRF_NO FROM IMP_CDIF WHERE VOID_DATE IS NULL)))  
              GROUP BY SF.AWB_NO, SF.AWB_DATE, SF.ORIG_FLT_KEY, SF.ORIG_FLT_DATE
            ) ISRF ON ICS.AWB_NO = ISRF.AWB_NO AND
                  ICS.AWB_DATE = ISRF.AWB_DATE AND
                  ICS.FLT_KEY = ISRF.ORIG_FLT_KEY AND
                  ICS.FLT_DATE = ISRF.ORIG_FLT_DATE
  LEFT JOIN V_CST_IMP_CC_CODE_AWB_ALL VCCODE ON VCCODE.FLT_KEY=ICS.FLT_KEY AND VCCODE.FLT_DATE=ICS.FLT_DATE AND VCCODE.AWB_NO=ICS.AWB_NO AND VCCODE.AWB_DATE=ICS.AWB_DATE AND VCCODE.HAWB_NO='000000000000000000'
   left join (select  
     sum(shp.pcs) as fblPc, 
      sum(shp.net_wt) as fblWt,
        fbl.flt_key as flt_key,
        TO_CHAR ( fbl.flt_date, 'DDMONYY') as flt_date,
        shp.awb_no as awb_no,
         TO_CHAR (shp.awb_date, 'DDMONYY') as awb_date
     FROM edi_fbl_shp shp,edi_fbl fbl
  WHERE shp.tr_no= fbl.tr_no and 
        fbl.FBL_STATUS = 'P'
        group by fbl.flt_key,fbl.flt_date,shp.AWB_NO,shp.AWB_DATE) t4 on t4.awb_no=ICS.awb_no and t4.awb_date=ICS.awb_date and t4.flt_key=ICS.flt_key and t4.flt_date=ICS.flt_date
        JOIN AWB A ON ICS.AWB_NO = A.AWB_NO AND ICS.AWB_DATE = A.AWB_DATE 
        AND ICS.FLT_KEY NOT IN ((select rule_value from cmsrules where rule_code='DUMMY_FLT_AAT'),(select rule_value from cmsrules where rule_code='DUMMY_FLT_HACTL'))
  Where ICS.AWB_NO = #awbNo# AND 
        ICS.AWB_DATE = to_date(#awbDate#,'DDMONYY')
union
 SELECT 
      (select carr_code from awb where awb_no=A.AWB_NO and awb_date=A.AWB_DATE AND ROWNUM=1) carrCode,
      (select carr_code from flt_opr where flt_key = A.FLT_KEY and sch_date = A.FLT_DATE and flt_type = 'A') fltCarr,
      A.FLT_KEY AS fltNo,
      TO_CHAR(A.FLT_DATE,'DDMONYY') AS fltDate,
      'I' AS fltType,
      A.LDG_POINT AS ldgPoint,
      PKG_COMMON.get_flt_sta(A.FLT_KEY, A.FLT_DATE, 'A') as sta,
      pkg_common.get_flt_ata(A.FLT_KEY, A.FLT_DATE,'A')  AS ata,
      '' AS manifestPcs,
      '' AS manifestWt,
      DECODE(A.RCL_PCS,NULL,'','0','',A.RCL_PCS)  AS bdPcs,
      DECODE(A.RCL_WT,null,'','0','',DECODE(trim(TO_CHAR(NVL(A.RCL_WT,0),'99999990.00')),'0.0','',trim(TO_CHAR(NVL(A.RCL_WT,0),'99999990.00')))) AS bdWt,
      '' AS  srfpcs,
      '' AS  srfwt,
		  '' AS releasePcs,
      '' AS releaseWt,
      (SELECT CC_CODE FROM V_CST_CC_CODE_AWB_ALL WHERE FLT_KEY=A.FLT_KEY AND FLT_DATE=A.FLT_DATE AND AWB_NO=A.AWB_NO AND AWB_DATE=A.AWB_DATE AND ROWNUM=1) AS cc,
	    '' AS subType,
     DECODE(A.RCL_PCS,NULL,'','0','',A.RCL_PCS)  AS blkPcs,
     DECODE(A.RCL_WT,null,'','0','',DECODE(trim(TO_CHAR(NVL(A.RCL_WT,0),'99999990.00')),'0.0','',trim(TO_CHAR(NVL(A.RCL_WT,0),'99999990.00')))) AS blkWt,
      '' AS ppkPcs,
      '' AS ppkWt,
      '' efltCarr,
      '' AS efltNo,
      '' AS efltDate,
      '' AS efltType,
      '' AS std,
      '' as atd,
      '' AS unldgPt,
      '' AS preManifestPcs,
      '' AS preManifestWt,
      '' AS buPcs,
      '' AS buWt,      
      '' AS emanifestPcs,  
      '' AS emanifestWt,            
      '' AS eblkPcs,
      '' AS eblkWt,
      '' AS tpkOrTnb,
      '' AS eppkPcs,
      '' AS eppkWt,
      '' AS etrNo,        
      '' AS efltNo1,
      0 as fblPc,
      TRIM(to_char(0,9999999.99)) as fblWt,
      '' as offPcWt,
      '' as nonPreRmk,
      '' as fblFltNo,
      '' as fblFltDate,
      (SELECT UPPER(lgt.LIGHT_SIGNAL) FROM EXP_AWB_LIGHT_SIGNAL_DTL lgt 
      INNER JOIN EXP_AWB_LIGHT_SIGNAL_HD lhd ON lhd.FLT_KEY = lgt.FLT_KEY AND lhd.FLT_DATE = lgt.FLT_DATE AND lhd.UNLDG_PT = lgt.UNLDG_PT
      WHERE lgt.AWB_NO = A.AWB_NO 
        AND A.AWB_DATE = lgt.AWB_DATE AND lgt.FLT_KEY = A.FLT_KEY
        AND lgt.FLT_DATE = A.FLT_DATE
       ) as lightColor  
    FROM (SELECT A.AWB_NO,A.AWB_DATE,A.LDG_POINT,SUM(A.RCL_PCS) RCL_PCS,SUM(A.RCL_WT) RCL_WT,FLT_KEY,FLT_DATE FROM (
SELECT ICS.AWB_NO,ICS.AWB_DATE,ICS.LDG_POINT,CDT.FLT_KEY,CDT.FLT_DATE,SUM(THD.RCL_PCS) RCL_PCS,SUM(THD.RCL_WT) RCL_WT FROM IMP_CAR_SHP ICS,TRF_ACCEPT_HD THD,cdt_inb_flt_dtls CDT, AWB A
WHERE THD.AWB_NO = ICS.AWB_NO AND THD.AWB_DATE = ICS.AWB_DATE AND THD.STATUS != 'V' and
cdt.rcl_no = THD.TRF_NO AND CDT.AWB_NO = ICS.AWB_NO AND CDT.AWB_DATE = ICS.AWB_DATE AND A.AWB_NO = ICS.AWB_NO AND A.AWB_DATE = ICS.AWB_DATE 
AND A.ACCEPT_MODE = 'TIT' AND ICS.FLT_KEY = THD.DUM_FLT_KEY AND ICS.FLT_DATE = THD.DUM_FLT_DATE 
AND ICS.AWB_NO = #awbNo# AND ICS.AWB_DATE = #awbDate# GROUP BY ICS.AWB_NO,ICS.AWB_DATE,ICS.LDG_POINT,CDT.FLT_KEY,CDT.FLT_DATE
UNION ALL
SELECT ICS.AWB_NO,ICS.AWB_DATE,ICS.LDG_POINT,CDT.FLT_KEY,CDT.FLT_DATE,SUM(TBRD.PCS) PCS,SUM(TBRD.WEIGHT) WEIGHT FROM IMP_CAR_SHP ICS,trf_accept_brkdn TBRD, trf_accept_hd THD, cdt_inb_flt_dtls CDT, AWB A
WHERE TBRD.AWB_NO = ICS.AWB_NO AND TBRD.AWB_DATE = ICS.AWB_DATE AND THD.TRF_NO = TBRD.TRF_NO AND THD.STATUS != 'V' and
cdt.rcl_no = THD.TRF_NO and cdt.awb_no=ics.awb_no and cdt.awb_date = ics.awb_date AND A.AWB_NO = ICS.AWB_NO AND A.AWB_DATE = ICS.AWB_DATE 
AND A.ACCEPT_MODE = 'TIT' AND ICS.FLT_KEY = THD.DUM_FLT_KEY AND ICS.FLT_DATE = THD.DUM_FLT_DATE  
AND ICS.AWB_NO = #awbNo# AND ICS.AWB_DATE = #awbDate# GROUP BY ICS.AWB_NO,ICS.AWB_DATE,ICS.LDG_POINT,CDT.FLT_KEY,CDT.FLT_DATE) A 
GROUP BY A.AWB_NO,A.AWB_DATE,A.LDG_POINT,A.FLT_KEY,A.FLT_DATE) A  
UNION
SELECT
      (select carr_code from awb where awb_no=EPA.AWB_NO and awb_date=EPA.AWB_DATE AND ROWNUM=1) ecarrcode,
       '',
       '',
       '',
       'E' AS fltType,
       '',
       '' as sta,
       ''  AS ata,
       '',
       '',   
       '',
       '',     
       '',
       '',
       (SELECT STRAGG(STRINGDELIM(A.TRF_TYPE , ',')) FROM
  (SELECT DS.AWB_NO,DS.AWB_DATE,DM.FLT_KEY,DM.FLT_DATE,TRF_TYPE
    FROM DDT_SHP_TRF_DTL DTL,      DDT_SHP DS,      DDT_MSG DM
    WHERE 
    DS.DOC_LINE_NO=DTL.DOC_LINE_NO
    AND DS.TR_NO      =DTL.TR_NO
    AND DM.TR_NO      = DTL.TR_NO
    AND DM.DDT_STATUS = 'P'
    GROUP BY TRF_TYPE,DS.AWB_NO,DS.AWB_DATE,DM.FLT_KEY,DM.FLT_DATE) A WHERE A.AWB_NO=EPA.awb_no AND A.AWB_DATE=EPA.awb_date AND A.FLT_KEY=EPA.flt_key AND A.FLT_DATE=EPA.FLT_DATE
    and exists(select null from flt_opr_events where flt_key=A.FLT_KEY and sch_date=A.FLT_DATE and flt_type='A' and ddt_finalise_date is not null)) AS subType,
       '',
       '',
       '',
       '',
       '',
       '',
       '',
      (select carr_code from flt_opr where flt_key = EPA.FLT_KEY and sch_date = EPA.FLT_DATE and flt_type ='D') efltCarr,
      EPA.FLT_KEY AS efltNo,
      TO_CHAR (EPA.FLT_DATE, 'DDMONYY') AS efltDate,
      'E' AS efltType,
      PKG_COMMON.get_flt_sta(EPA.flt_key, EPA.FLT_DATE, 'D') std,
      PKG_COMMON.get_flt_ata(EPA.flt_key, EPA.FLT_DATE, 'D') atd,
      EPA.UNLDG_PT AS unldgPt,
      decode(EPA.manf_pc,NULL,'','0','',EPA.manf_pc) AS preManifestPcs,  
      decode(EPA.manf_wt,NULL,'','0','',trim(TO_CHAR(NVL(EPA.manf_wt,0),'99999990.00'))) AS preManifestWt,  
      decode(EPA.bup_pc,NULL,'','0','',EPA.bup_pc) AS buPcs,
      decode(EPA.bup_wt,NULL,'','0','',trim(TO_CHAR(NVL(EPA.bup_wt,0),'99999990.00'))) AS buWt,       
      case when (select FINAL_MANF_IND from flt_opr_events  where FLT_KEY = EPA.FLT_KEY AND SCH_DATE = EPA.FLT_DATE AND FLT_TYPE = 'D')  = 'Y' then decode(EPA.manf_pc,NULL,'','0','',EPA.manf_pc) else '' end AS emanifestPcs,  
      case when (select FINAL_MANF_IND from flt_opr_events  where FLT_KEY = EPA.FLT_KEY AND SCH_DATE = EPA.FLT_DATE AND FLT_TYPE = 'D')  = 'Y' then decode(EPA.manf_wt,NULL,'','0','',trim(TO_CHAR(NVL(EPA.manf_wt,0),'99999990.00'))) else '' end AS emanifestWt,  
      decode(EPA.BULK_PC,NULL,'','0','',EPA.BULK_PC) AS eblkPcs,  
      decode(EPA.BULK_WT,NULL,'','0','',trim(TO_CHAR(NVL(EPA.BULK_WT,0),'99999990.00'))) AS eblkWt, 
      decode((select count(1)	from exp_pmanifest_uld_awb pAwb 
      					join exp_pmanifest_uld pUld on pAwb.flt_key = pUld.flt_key and pAwb.flt_date = pUld.flt_date and pAwb.uld_bt_no = pUld.uld_bt_no  
               			 join uld_inventory uInv on pUld.uld_bt_no = uInv.uld_key
      					where pAwb.awb_no = #awbNo# and pAwb.awb_date = #awbDate# 
      					and  pUld.flt_key = EPA.FLT_KEY and to_char(pUld.Flt_date,'DDMONYY') = to_char(EPA.FLT_DATE,'DDMONYY')
      					and NVL(uInv.TRANSIT_FLG,'N') = 'Y' and uInv.HANDLING_MODE in ('PPK','NBK')),0,'N','Y') tpkOrTnb, 
      decode(EPA.PPK_PC,NULL,'','0','',EPA.PPK_PC) AS eppkPcs, 
      decode(EPA.PPK_WT,NULL,'','0','',trim(TO_CHAR(NVL(EPA.PPK_WT,0),'99999990.00'))) AS eppkWt,     
   (SELECT EM.TR_NO FROM EXP_MANIFEST_DTL EM WHERE EPA.AWB_NO = EM.AWB_NO AND EPA.AWB_DATE = EM.AWB_DATE AND
    EPA.FLT_KEY = EM.FLT_KEY AND EPA.FLT_DATE = EM.FLT_DATE AND ROWNUM = 1) AS etrNo,        
     EPA.FLT_KEY AS efltNo1,     
    t2.fblPc as fblPc,   
    TRIM(to_char(t2.fblWt,9999999.99)) as fblWt,
    (select  decode(sum(offload_pcs),null,'','0','',sum(offload_pcs))||DECODE(sum(offload_pcs),NULL,'','0','','/')||decode(sum(offload_wt),null,'','0','',trim(TO_CHAR(NVL(sum(offload_wt),0),'99999990.00'))) from exp_offload_uld_awb uldAwb where uldAwb.awb_no=EPA.awb_no  and uldAwb.awb_date=EPA.awb_date and uldAwb.flt_key=EPA.flt_key and uldAwb.flt_date=EPA.flt_date and confirmed_yn='Y') as offPcWt,    
    (select MSG_EDMP_CODE  from EXP_EDMP_HD HD
      where HD.awb_no= EPA.awb_no
      and HD.awb_date=EPA.awb_date
      and HD.flt_key=EPA.flt_key
      and HD.flt_date=EPA.flt_date
      AND rownum = 1) as nonPreRmk,
    '' as fblFltNo,
    '' as fblFltDate,
    (SELECT UPPER(lgt.LIGHT_SIGNAL) FROM EXP_AWB_LIGHT_SIGNAL_DTL lgt 
    INNER JOIN EXP_AWB_LIGHT_SIGNAL_HD lhd ON lhd.FLT_KEY = lgt.FLT_KEY AND lhd.FLT_DATE = lgt.FLT_DATE AND lhd.UNLDG_PT = lgt.UNLDG_PT
    WHERE
    lgt.AWB_NO = EPA.AWB_NO 
        AND EPA.AWB_DATE = lgt.AWB_DATE AND EPA.UNLDG_PT = lgt.UNLDG_PT AND lgt.FLT_KEY = EPA.FLT_KEY
        AND lgt.FLT_DATE = EPA.FLT_DATE
       ) as lightColor    
  FROM
   (select  flt_key,flt_date,UNLDG_PT,awb_no,awb_date,sum(manf_pc) manf_pc,sum(manf_wt) manf_wt,sum(bup_pc) bup_pc ,sum(bup_wt) bup_wt,sum(bulk_pc) bulk_pc,sum(bulk_wt) bulk_wt,sum(ppk_pc) ppk_pc,sum(ppk_wt) ppk_wt
   FROM ( select flt_key flt_key,flt_date flt_date,UNLDG_PT UNLDG_PT, awb_no awb_no,awb_date awb_date, sum(nvl(pman_pcs,0)) manf_pc, sum(nvl(pman_wt,0)) manf_wt, 
   sum(nvl(BULK_PCS,0)) bulk_pc,
   sum(nvl(BULK_WT,0)) bulk_wt,
   sum( nvl(PPK_PCS,0)+nvl(MIX_PCS,0)) ppk_pc,
   sum( nvl(PPK_WT,0)+nvl(MIX_WT,0)) ppk_wt,
   sum( nvl(PPK_PCS,0)+nvl(MIX_PCS,0)+nvl(ASSIGNED_BULK_PCS,0)) bup_pc,
   sum( nvl(PPK_WT,0)+nvl(MIX_WT,0)+nvl(ASSIGNED_BULK_WT,0) )bup_wt 
   from exp_pmanifest_awb GROUP BY flt_key, flt_date, awb_no, awb_date , UNLDG_PT
   UNION 
   select flt_key flt_key, flt_date flt_date, UNLDG_PT UNLDG_PT, awb_no awb_no,awb_date awb_date, sum(nvl(bulk_pcs,0)+nvl(ppk_pcs,0)) manf_pc, sum(nvl(bulk_wt,0)+nvl(ppk_wt,0)) manf_wt,
   sum(nvl(bulk_pcs,0)) bulk_pc,sum(nvl(bulk_wt,0)) bulk_wt,
   sum(nvl(ppk_pcs,0)) ppk_pc,sum(nvl(ppk_wt,0)) ppk_wt,
   sum(nvl(bulk_pcs,0)+nvl(ppk_pcs,0)) bup_pc,
   sum(nvl(bulk_wt,0)+nvl(ppk_wt,0)) bup_wt 
   from EXP_PMAN_TARMAC_AWB
   group by flt_key,awb_no,awb_date,flt_date, UNLDG_PT) 
   group by flt_key,flt_date,awb_no,awb_date,UNLDG_PT) EPA
   left join (select  
     sum(shp.pcs) as fblPc, 
      sum(shp.net_wt) as fblWt,
        fbl.flt_key as flt_key,
        TO_CHAR ( fbl.flt_date, 'DDMONYY') as flt_date,
        shp.awb_no as awb_no,
         TO_CHAR (shp.awb_date, 'DDMONYY') as awb_date
     FROM edi_fbl_shp shp,edi_fbl fbl
  WHERE shp.tr_no= fbl.tr_no and 
        fbl.FBL_STATUS = 'P'
        group by fbl.flt_key,fbl.flt_date,shp.AWB_NO,shp.AWB_DATE) t2 on t2.awb_no=EPA.awb_no and t2.awb_date=EPA.awb_date and t2.flt_key=EPA.flt_key and t2.flt_date=EPA.flt_date
  WHERE
   EPA.AWB_NO = #awbNo# AND 
   EPA.AWB_DATE = #awbDate#
      union
      select  
       (select carr_code from flt_opr where flt_key = t1.flt_key and sch_date = t1.flt_date and ROWNUM=1) ecarrcode,
       '',
       '',
       '',
       'E' AS fltType,
       '' AS ldgPoint,
       PKG_COMMON.get_flt_sta(t1.FLT_KEY, t1.FLT_DATE, 'A') as sta,
       pkg_common.get_flt_ata(t1.FLT_KEY, t1.FLT_DATE,'A')  AS ata,
       '',
       '',   
       '',
       '',     
       '',
       '',
      (SELECT STRAGG(STRINGDELIM(A.TRF_TYPE , ',')) FROM
      (SELECT DS.AWB_NO,DS.AWB_DATE,DM.FLT_KEY,DM.FLT_DATE,TRF_TYPE
    FROM DDT_SHP_TRF_DTL DTL,      DDT_SHP DS,      DDT_MSG DM
    WHERE 
    DS.DOC_LINE_NO=DTL.DOC_LINE_NO
    AND DS.TR_NO      =DTL.TR_NO
    AND DM.TR_NO      = DTL.TR_NO
    AND DM.DDT_STATUS = 'P'
    GROUP BY TRF_TYPE,DS.AWB_NO,DS.AWB_DATE,DM.FLT_KEY,DM.FLT_DATE) A WHERE A.AWB_NO=#awbNo# AND A.AWB_DATE=#awbDate# AND A.FLT_KEY=t1.flt_key AND A.FLT_DATE=t1.FLT_DATE
    and exists(select null from flt_opr_events where flt_key=A.FLT_KEY and sch_date=A.FLT_DATE and flt_type='A' and ddt_finalise_date is not null)
  ) AS subType,
       '',
       '',
       '',
       '',
       '',
       '',
       '',
       '' as efltCarr,
       '' AS efltNo,
       '' AS efltDate,
       'E' AS efltType,
       PKG_COMMON.get_flt_sta(t1.flt_key, t1.FLT_DATE, 'D') std,
       PKG_COMMON.get_flt_ata(t1.flt_key, t1.FLT_DATE, 'D') atd,
       T1.UNLDG_PT AS unldgPt,
       (CASE WHEN (SELECT COUNT(1) FROM exp_pmanifest_awb_first WHERE AWB_NO=#awbNo# AND AWB_DATE=#awbDate# AND FLT_KEY=t1.flt_key AND FLT_DATE=t1.flt_date) > 0 THEN '0' ELSE '' END) preManifestPcs,
       (CASE WHEN (SELECT COUNT(1) FROM exp_pmanifest_awb_first WHERE AWB_NO=#awbNo# AND AWB_DATE=#awbDate# AND FLT_KEY=t1.flt_key AND FLT_DATE=t1.flt_date) > 0 THEN '0' ELSE '' END) preManifestWt,
       '' AS buPcs,
       '' AS buWt, 
       '' AS emanifestPcs,
       '' AS emanifestWt,
       '' AS eblkPcs,
       '' AS eblkWt,
       '' AS tpkOrTnb,
       '' AS eppkPcs,
       '' AS eppkWt,
       '' AS etrNo,        
       '' AS efltNo1,
     t1.fblPc as fblPc, 
     TRIM(to_char(t1.fblWt,9999999.99)) as fblWt,
     (select  decode(sum(offload_pcs),null,'','0','',sum(offload_pcs))||DECODE(sum(offload_pcs),NULL,'','0','','/')||decode(sum(offload_wt),null,'','0','',trim(TO_CHAR(NVL(sum(offload_wt),0),'99999990.00'))) from exp_offload_uld_awb uldAwb where uldAwb.awb_no=#awbNo#  and uldAwb.awb_date=#awbDate# and uldAwb.flt_key=t1.flt_key and uldAwb.flt_date=t1.flt_date AND CONFIRMED_YN='Y') as offPcWt,          
     (select MSG_EDMP_CODE  from EXP_EDMP_HD HD
      where HD.awb_no= #awbNo#
      and HD.awb_date=#awbDate#
      and HD.flt_key=t1.flt_key
      and HD.flt_date=t1.flt_date
      AND rownum = 1) as nonPreRmk,
    t1.flt_key as fblFltNo,
     t1.flt_date as fblFltDate,
      (SELECT UPPER(lgt.LIGHT_SIGNAL) FROM EXP_AWB_LIGHT_SIGNAL_DTL lgt 
      INNER JOIN EXP_AWB_LIGHT_SIGNAL_HD lhd ON lhd.FLT_KEY = lgt.FLT_KEY AND lhd.FLT_DATE = lgt.FLT_DATE AND lhd.UNLDG_PT = lgt.UNLDG_PT
      WHERE lgt.AWB_NO = t1.AWB_NO 
        AND t1.AWB_DATE = lgt.AWB_DATE AND t1.UNLDG_PT = lgt.UNLDG_PT AND lgt.FLT_KEY = t1.FLT_KEY
        AND lgt.FLT_DATE = t1.FLT_DATE
       ) as lightColor 
     FROM ( select  
     shp.AWB_NO as awb_No,
  	 shp.AWB_DATE as awb_date,
     sum(shp.pcs) as fblPc, 
      sum(shp.net_wt) as fblWt,
        fbl.flt_key as flt_key,
        TO_CHAR ( fbl.flt_date, 'DDMONYY') as flt_date,
        SHP.UNLDG_PT UNLDG_PT
     FROM edi_fbl_shp shp,edi_fbl fbl
  WHERE shp.tr_no= fbl.tr_no and 
      shp.AWB_NO = #awbNo# AND 
      shp.AWB_DATE = #awbDate# AND fbl.FBL_STATUS = 'P'
       AND  NOT EXISTS (select NULL from exp_pmanifest_awb where awb_no=#awbNo# and awb_date=#awbDate# AND FLT_KEY=fbl.flt_key AND FLT_DATE=fbl.flt_date)
       AND  NOT EXISTS (select NULL from EXP_PMAN_TARMAC_AWB where awb_no=#awbNo# and awb_date=#awbDate# AND FLT_KEY=fbl.flt_key AND FLT_DATE=fbl.flt_date)
       group by fbl.flt_key,fbl.flt_date,SHP.UNLDG_PT,shp.AWB_NO,shp.AWB_DATE) t1
       union
        SELECT 
      (select carr_code from flt_opr where flt_key = OFAWB.flt_key and sch_date = OFAWB.flt_date and ROWNUM=1) ecarrcode,
       '',
       '',
       '',
       'E' AS fltType,
       '',
     '' as sta,
     ''  AS ata,
       '',
       '',   
       '',
       '',     
       '',
       '',
       '' AS subType,
       '',
       '',
       '',
       '',
       '',
       '',
       '',
      '' as efltCarr,
     '' AS efltNo,
     '' AS efltDate,
      'E' AS efltType,
      PKG_COMMON.get_flt_sta(OFAWB.flt_key, OFAWB.FLT_DATE, 'D') std,
      PKG_COMMON.get_flt_ata(OFAWB.flt_key, OFAWB.FLT_DATE, 'D') atd,
      OFAWB.UNLDG_PT AS unldgPt,
     '0' AS preManifestPcs,  
     '0' AS preManifestWt,  
     '' AS buPcs,
      '' AS buWt, 
      '' AS emanifestPcs,
     '' AS emanifestWt,
      '' AS eblkPcs,
     '' AS eblkWt,
     '' AS tpkOrTnb,
     '' AS eppkPcs,
     '' AS eppkWt,
     '' AS etrNo,        
     '' AS efltNo1,     
         t3.fblPc  as fblPc,   
		     TRIM(to_char(t3.fblWt,9999999.99)) as fblWt,
          (select decode(sum(offload_pcs),null,'','0','',sum(offload_pcs))||DECODE(sum(offload_pcs),NULL,'','0','','/')||decode(sum(offload_wt),null,'','0','',trim(TO_CHAR(NVL(sum(offload_wt),0),'99999990.00'))) from exp_offload_uld_awb uldAwb where uldAwb.awb_no= OFAWB.AWB_NO  and uldAwb.awb_date=OFAWB.AWB_DATE and uldAwb.flt_key=OFAWB.flt_key and uldAwb.flt_date=OFAWB.flt_date AND CONFIRMED_YN='Y') as offPcWt,        
          (select MSG_EDMP_CODE  from EXP_EDMP_HD HD
      where HD.awb_no= #awbNo#
      and HD.awb_date=#awbDate#
      and HD.flt_key=OFAWB.flt_key
      and HD.flt_date=OFAWB.flt_date
      AND rownum = 1) as nonPreRmk,
          OFAWB.flt_key as fblFltNo,
          TO_CHAR ( OFAWB.flt_date, 'DDMONYY') as fblFltDate,
          (SELECT UPPER(lgt.LIGHT_SIGNAL) FROM EXP_AWB_LIGHT_SIGNAL_DTL lgt 
          INNER JOIN EXP_AWB_LIGHT_SIGNAL_HD lhd ON lhd.FLT_KEY = lgt.FLT_KEY AND lhd.FLT_DATE = lgt.FLT_DATE AND lhd.UNLDG_PT = lgt.UNLDG_PT
          WHERE lgt.AWB_NO = OFAWB.AWB_NO 
        AND OFAWB.AWB_DATE = lgt.AWB_DATE AND OFAWB.UNLDG_PT = lgt.UNLDG_PT AND lgt.FLT_KEY = OFAWB.FLT_KEY
        AND lgt.FLT_DATE = OFAWB.FLT_DATE
       ) as lightColor 
     	FROM EXP_OFFLOAD_ULD_AWB OFAWB
      left join (select  
     sum(shp.pcs) as fblPc, 
      sum(shp.net_wt) as fblWt,
        fbl.flt_key as flt_key,
        TO_CHAR ( fbl.flt_date, 'DDMONYY') as flt_date,
        shp.awb_no as awb_no,
         TO_CHAR (shp.awb_date, 'DDMONYY') as awb_date
     FROM edi_fbl_shp shp,edi_fbl fbl
  WHERE shp.tr_no= fbl.tr_no and 
        fbl.FBL_STATUS = 'P'
        group by fbl.flt_key,fbl.flt_date,shp.AWB_NO,shp.AWB_DATE) t3 on t3.awb_no=OFAWB.awb_no and t3.awb_date=OFAWB.awb_date and t3.flt_key=OFAWB.flt_key and t3.flt_date=OFAWB.flt_date
  		WHERE 
      	OFAWB.AWB_NO = #awbNo# AND 
      	OFAWB.AWB_DATE = #awbDate#  and
      	OFAWB.CONFIRMED_YN='Y'
      	AND NOT EXISTS (select NULL from exp_pmanifest_awb where awb_no=#awbNo# and awb_date=#awbDate# AND FLT_KEY=OFAWB.flt_key AND FLT_DATE=OFAWB.flt_date) 
        AND  NOT EXISTS (select NULL from EXP_PMAN_TARMAC_AWB where awb_no=#awbNo# and awb_date=#awbDate# AND FLT_KEY=OFAWB.flt_key AND FLT_DATE=OFAWB.flt_date)
      	AND NOT EXISTS (select NULL from edi_fbl_shp shp,edi_fbl fbl
    		where shp.awb_no= #awbNo#
    		and shp.awb_date=#awbDate#
    		and fbl.flt_key=OFAWB.flt_key
    		and fbl.flt_date=OFAWB.flt_date
    		AND shp.tr_no= fbl.tr_no AND fbl.FBL_STATUS = 'P')
        UNION
        select (select carr_code from flt_opr where flt_key = OFAWB.flt_key and sch_date = OFAWB.flt_date and ROWNUM=1) ecarrcode,
       '',
       '',
       '',
       'E' AS fltType,
       '',
       '' as sta,
     '' AS ata,
       '',
       '',   
       '',
       '',     
       '',
       '',
       '' AS subType,
       '',
       '',
       '',
       '',
       '',
       '',
       '',
      '' as efltCarr,
     '' AS efltNo,
     '' AS efltDate,
      'E' AS efltType,
      PKG_COMMON.get_flt_sta(OFAWB.flt_key, OFAWB.FLT_DATE, 'D') std,
      PKG_COMMON.get_flt_ata(OFAWB.flt_key, OFAWB.FLT_DATE, 'D') atd,
      OFAWB.UNLDG_PT AS unldgPt,
     '0' AS preManifestPcs,  
     '0' AS preManifestWt,  
     '' AS buPcs,
      '' AS buWt, 
      '' AS emanifestPcs,
     '' AS emanifestWt,
      '' AS eblkPcs,
     '' AS eblkWt,
     '' AS tpkOrTnb,
     '' AS eppkPcs,
     '' AS eppkWt,
     '' AS etrNo,        
     '' AS efltNo1,     
     t4.fblPc as fblPc,
      TRIM(to_char(t4.fblWt,9999999.99)) as fblWt,
     '' as offPcWt,        
     '' as nonPreRmk,
     OFAWB.flt_key as fblFltNo,
     TO_CHAR ( OFAWB.flt_date, 'DDMONYY') as fblFltDate,
     (SELECT UPPER(lgt.LIGHT_SIGNAL) FROM EXP_AWB_LIGHT_SIGNAL_DTL lgt 
     INNER JOIN EXP_AWB_LIGHT_SIGNAL_HD lhd ON lhd.FLT_KEY = lgt.FLT_KEY AND lhd.FLT_DATE = lgt.FLT_DATE AND lhd.UNLDG_PT = lgt.UNLDG_PT
     WHERE
     lgt.AWB_NO = OFAWB.AWB_NO 
        AND OFAWB.AWB_DATE = lgt.AWB_DATE AND OFAWB.UNLDG_PT = lgt.UNLDG_PT AND lgt.FLT_KEY = OFAWB.FLT_KEY
        AND lgt.FLT_DATE = OFAWB.FLT_DATE
       ) as lightColor 
     	FROM exp_pmanifest_awb_first OFAWB
      left join (select  
     sum(shp.pcs) as fblPc, 
      sum(shp.net_wt) as fblWt,
        fbl.flt_key as flt_key,
        TO_CHAR ( fbl.flt_date, 'DDMONYY') as flt_date,
        shp.awb_no as awb_no,
         TO_CHAR (shp.awb_date, 'DDMONYY') as awb_date
     FROM edi_fbl_shp shp,edi_fbl fbl
  WHERE shp.tr_no= fbl.tr_no and 
        fbl.FBL_STATUS = 'P'
        group by fbl.flt_key,fbl.flt_date,shp.AWB_NO,shp.AWB_DATE) t4 on t4.awb_no=OFAWB.awb_no and t4.awb_date=OFAWB.awb_date and t4.flt_key=OFAWB.flt_key and t4.flt_date=OFAWB.flt_date
  		WHERE 
      	OFAWB.AWB_NO = #awbNo# AND 
      	OFAWB.AWB_DATE = #awbDate#       	
      	AND NOT EXISTS (select NULL from exp_pmanifest_awb where awb_no=#awbNo# and awb_date=#awbDate# AND FLT_KEY=OFAWB.flt_key AND FLT_DATE=OFAWB.flt_date) 
      	AND NOT EXISTS (select NULL from edi_fbl_shp shp,edi_fbl fbl
    		where shp.awb_no= #awbNo#
    		and shp.awb_date=#awbDate#
    		and fbl.flt_key=OFAWB.flt_key
    		and fbl.flt_date=OFAWB.flt_date
    		AND shp.tr_no= fbl.tr_no AND fbl.FBL_STATUS = 'P')
    		AND NOT EXISTS(select NULL from exp_pman_tarmac_awb where awb_no=#awbNo# and awb_date=#awbDate# AND FLT_KEY=OFAWB.flt_key AND FLT_DATE=OFAWB.flt_date)
        and not exists(select NULL from exp_offload_uld_Awb where awb_no=#awbNo# and awb_date=#awbDate# AND FLT_KEY=OFAWB.flt_key AND FLT_DATE=OFAWB.flt_date AND CONFIRMED_YN='Y')       
   </select>
   <select id="checkTempVoltPopupSetup" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO" resultClass="java.lang.Integer">
	SELECT COUNT(1) FROM AWB_TEMP_VOLTAGE_SETUP WHERE AWB_NO=#awbNo# AND AWB_DATE=#awbDate#
	</select>
   <insert id="saveTempVoltPopupSetup" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO" >
   INSERT INTO AWB_TEMP_VOLTAGE_SETUP(AWB_NO,AWB_DATE,TEMP_RANGE_FROM,TEMP_RANGE_TO,BATTERY_RANGE_FROM,BATTERY_RANGE_TO,AIRLN_RMK,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,BATTERY_LVL) 
   VALUES(#awbNo#,#awbDate#,#tempRangeFrom#,#tempRangeTo#,#batteryRangeFrom#,#batteryRangeTo#,#tempAirlRmk#,#crUserId#,SYSDATE,#crUserId#,SYSDATE,#batteryLvl#)
   </insert>
	<update id="updateTempVoltPopupSetup" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO">
	UPDATE AWB_TEMP_VOLTAGE_SETUP SET 
	TEMP_RANGE_FROM=#tempRangeFrom#,
	TEMP_RANGE_TO=#tempRangeTo#,
	BATTERY_RANGE_FROM=#batteryRangeFrom#,
	BATTERY_RANGE_TO=#batteryRangeTo#,
	AIRLN_RMK=#tempAirlRmk#,
	LM_USER_ID=#crUserId#,
	LM_DATE =SYSDATE,
	BATTERY_LVL=#batteryLvl#
	WHERE AWB_NO=#awbNo# AND AWB_DATE=#awbDate#
	</update>
	<update id="amendTempandVoltage" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO">
	UPDATE SPL_CHECK_DATA SET TEMPARATURE=#temperature#,BATTERY=#batterry#,CORRECTIVE_ACTION=#correctAction#,RMK=#rmk#,LM_USER_ID=#crUser#,LM_DATE=SYSDATE,ACTION_TIME=TO_DATE(#actionTime#,'DDMONYY HH24:MI'),ACTION_TIME_IND=#actionTimeInd#,TEMPARATURE_RANGE_IND=#tempInd#,BATTERY_RANGE_IND=#batInd#,OTHERS=#others#,ACTION_CHG_IND=#actChngInd#,img_transaction_id=(CASE WHEN (SELECT COUNT(1) FROM FW_IMAGE_STORE WHERE img_session_id=#transactionId#)>0 THEN #transactionId# ELSE '' END) WHERE SEQ_NO=#seqNo#
	</update>
	<update id="amendLiveAnimal" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO">
	UPDATE SPL_CHECK_DATA SET GOOD_CONDITION=#goodCondtn#,ADD_WATER=#addWater#,RMK=#rmk#,LM_USER_ID=#crUser#,LM_DATE=SYSDATE,ACTION_TIME=TO_DATE(#actionTime#,'DDMONYY HH24:MI'),ACTION_TIME_IND=#actionTimeInd#,ACTION_CHG_IND=#actChngInd#,img_transaction_id=(CASE WHEN (SELECT COUNT(1) FROM FW_IMAGE_STORE WHERE img_session_id=#transactionId#)>0 THEN #transactionId# ELSE '' END) WHERE SEQ_NO=#seqNo#
	</update>
	<select id="fetchAWBEnquiryTempVoltageDetails" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO" resultClass="cargo.cms.awb.bo.AWBEnquiryBO">
     SELECT AWB_NO AS awbNo,TO_CHAR(AWB_DATE,'DDMONYY') AS awbDate,TEMP_RANGE_FROM AS tempRangeFrom,TEMP_RANGE_TO AS tempRangeTo,BATTERY_RANGE_FROM AS batteryRangeFrom,BATTERY_RANGE_TO AS batteryRangeTo,AIRLN_RMK AS tempAirlRmk,BATTERY_LVL as batteryLvl FROM AWB_TEMP_VOLTAGE_SETUP
     WHERE AWB_NO=#awbNo# AND AWB_DATE=#awbDate#
	</select>
	<select id="checktemperatureinrangeforamend" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO" resultClass="java.lang.Integer">
	SELECT COUNT(1) FROM AWB_TEMP_VOLTAGE_SETUP WHERE AWB_NO=#awbNo# AND AWB_DATE=#awbDate# AND TO_NUMBER(#temperature#) BETWEEN temp_range_from AND temp_range_to
	</select>
	<select id="checkbatteryinrangeforamend" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO" resultClass="java.lang.Integer">
	SELECT COUNT(1) FROM AWB_TEMP_VOLTAGE_SETUP WHERE AWB_NO=#awbNo# AND AWB_DATE=#awbDate# AND TO_NUMBER(#batterry#) BETWEEN battery_range_from AND battery_range_to
	</select>
	<select id="fetchSplCheckImagedata" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO" resultClass="cargo.cms.awb.bo.AWBEnquiryBO">
	select img_name as fileName,img_size as fileMaxSize,img_session_id as imgtransactionID,img_path as folderPath,'' as imageType from fw_image_store where img_session_id=#transactionId#
	</select>
	<select id="getAWBImageTransactionID_splCheck" parameterClass="map" resultClass="java.lang.String">
	SELECT MAX(AWB_IMAGE_NAME) FROM AWB_IMAGE WHERE AWB_NO=#awbNo# AND AWB_DATE=#awbDate#
	</select>
	<select id="checkFirstSlaConfig" parameterClass="map" resultClass="java.lang.Integer">
	SELECT COUNT(1) FROM SPL_CHECK_MILESTONE_SLA  WHERE TR_NO = #trNo# AND SEQ_NO = #seqNo# AND TO_DATE(#actionDate#,'DDMONYY HH24:MI') BETWEEN 
    (sla_base_timestamp+ (1/1440 * (CASE when CYCLE_NO > 1 THEN (SELECT TO_NUMBER(rule_value) FROM CMSRULES where RULE_CODE = #earlyConfig#) else 0 end)))
    AND (sla_base_timestamp + (1/1440 *(SLA_CYCLE_MINS)))
	</select>
	<select id="checkSecondSlaConfig" parameterClass="map" resultClass="java.lang.Integer">
	SELECT COUNT(1) FROM SPL_CHECK_MILESTONE_SLA WHERE 
    TO_DATE(#actionDate#,'DDMONYY HH24:MI') BETWEEN sla_base_timestamp  and SLA_MEET_TIMESTAMP AND TR_NO = #trNo# and SEQ_NO = #seqNo#
	</select>
	<update id="updateSlaConfiginMileStone" parameterClass="map">
	UPDATE SPL_CHECK_MILESTONE_SLA SET READING_TR_NO='' WHERE TR_NO=#trNo# AND SEQ_NO=#seqNo#
	</update>
	<select id="checkAWBSecialCheck" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO" resultClass="java.lang.Integer">
	SELECT COUNT(1) FROM AWB AWB  WHERE AWB.AWB_NO = #awbNo# AND AWB.AWB_DATE = #awbDate#
	AND (AWB.spl_code1 in <iterate property="sch" open="(" close=")" conjunction=",">#sch[]#</iterate>
     OR AWB.spl_code2 in <iterate property="sch" open="(" close=")" conjunction=",">#sch[]#</iterate>
     OR AWB.spl_code3 in <iterate property="sch" open="(" close=")" conjunction=",">#sch[]#</iterate>
     OR AWB.spl_code4 in <iterate property="sch" open="(" close=")" conjunction=",">#sch[]#</iterate>
     OR AWB.spl_code5 in <iterate property="sch" open="(" close=")" conjunction=",">#sch[]#</iterate>
     OR AWB.spl_code6 in <iterate property="sch" open="(" close=")" conjunction=",">#sch[]#</iterate>
     OR AWB.spl_code7 in <iterate property="sch" open="(" close=")" conjunction=",">#sch[]#</iterate>
     OR AWB.spl_code8 in <iterate property="sch" open="(" close=")" conjunction=",">#sch[]#</iterate>
     OR AWB.spl_code9 in <iterate property="sch" open="(" close=")" conjunction=",">#sch[]#</iterate>)
	</select>
	<update id="UpdateScreenImgTransIdinSplCheckDtls" parameterClass="map">
	UPDATE SPL_CHECK_DATA SET IMG_TRANSACTION_ID=#imgTransactionId#,LM_USER_ID=#userID#,LM_DATE=SYSDATE WHERE SEQ_NO = #seqNo#
	</update>
	<select id="fetchAWBEnquiryTempVoltagePopupDetails" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO" resultClass="cargo.cms.awb.bo.AWBEnquiryBO">
    SELECT AWB_NO AS awbNo,TO_CHAR(AWB_DATE,'DDMONYY') AS awbDate,SEQ_NO AS seqNo,ULD_KEY as uldKey,TO_CHAR(DATE_TIME,'DDMONYY HH24:MI') as dateTime,TO_CHAR(ACTION_TIME,'DDMONYY HH24:MI') as actionTime,
	TEMPARATURE as temperature,BATTERY as batterry,CORRECTIVE_ACTION as correctAction,RMK as rmk,CR_USER_ID as crUserId,decode(img_transaction_id,'','N',null,'N','Y') as photoStat,
	FAILURE_REASON AS failureReason,WARN_RMK as warnRemarks,img_transaction_id as transactionId,OTHERS AS others,#accessforTemp# as accessforTemp,
	TO_CHAR(ACTION_TIME,'DDMONYY') as actionDate,TO_CHAR(ACTION_TIME,'HH24') as actionHrs,TO_CHAR(ACTION_TIME,'MI') as actionMns,
	TO_CHAR(ACTION_TIME,'DDMONYY') as oldActionDate,TO_CHAR(ACTION_TIME,'HH24') as oldActionHrs,TO_CHAR(ACTION_TIME,'MI') as oldActionMns,
	NVL(ACTION_TIME_IND,'N') as actionTimeInd,NVL(DATE_TIME_IND,'N') as dateActionInd,NVL(BATTERY_RANGE_IND,'N') as batInd,NVL(TEMPARATURE_RANGE_IND,'N') as tempInd,
	TO_CHAR(NVL(FIRST_ACTION_TIME,CR_DATE),'DDMONYY HH24:MI') as lastTime,INTERVAL as interval,CYCLE as cycle,
	(SELECT FAIL_REASON FROM(
    SELECT FAIL_REASON FROM SPL_CHECK_MILESTONE_SLA WHERE SEQ_NO IN (SELECT SEQ_NO FROM SPL_CARGO_MILESTONE WHERE AWB_NO=SPL_CHECK_DATA.AWB_NO AND AWB_DATE=SPL_CHECK_DATA.AWB_DATE
    AND ULD_KEY=SPL_CHECK_DATA.ULD_KEY AND NVL(offload_ind,'N')=NVL(SPL_CHECK_DATA.IS_OFFLOAD,'N') AND milestone IN ('A-SPECIAL-CHECK','D-SPECIAL-CHECK'))
    ORDER BY CR_DATE DESC) WHERE ROWNUM=1) AS failureReason,
    (SELECT REMARK FROM(
    SELECT REMARK FROM SPL_WARN_REASON WHERE SEQ_NO IN (SELECT SEQ_NO FROM SPL_CARGO_MILESTONE WHERE AWB_NO=SPL_CHECK_DATA.AWB_NO AND AWB_DATE=SPL_CHECK_DATA.AWB_DATE
    AND ULD_KEY=SPL_CHECK_DATA.ULD_KEY AND NVL(offload_ind,'N')=NVL(SPL_CHECK_DATA.IS_OFFLOAD,'N') AND milestone IN ('A-SPECIAL-CHECK','D-SPECIAL-CHECK'))
    ORDER BY CR_DATE DESC) WHERE ROWNUM=1) AS warnRemarks,
    (SELECT SEQ_NO FROM SPL_CHECK_MILESTONE_SLA WHERE  instr(','||READING_TR_NO||',', ','||SPL_CHECK_DATA.SEQ_NO||',') > 0 and READING_TR_NO is not null and rownum=1) AS actionSeqNo,
    (SELECT TR_NO FROM SPL_CHECK_MILESTONE_SLA WHERE  instr(','||READING_TR_NO||',', ','||SPL_CHECK_DATA.SEQ_NO||',') > 0 and READING_TR_NO is not null and rownum=1) as actionTrNo,
    NVL(ACTION_CHG_IND,'N') as actChngInd,HUMIDITY as humidity
	FROM SPL_CHECK_DATA WHERE AWB_NO=#awbNo# AND AWB_DATE=#awbDate#
	AND NVL(IS_TEMP,'N') = 'Y'
	<isNotEmpty property="seqNo">
		  AND  UPPER(SEQ_NO)=UPPER(#seqNo#)
		</isNotEmpty>
	ORDER BY ULD_KEY,AWB_NO,SEQ_NO DESC
	</select>
	<select id="fetchAWBEnquiryLiveAnimalPopupDetails" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO" resultClass="cargo.cms.awb.bo.AWBEnquiryBO">
    SELECT AWB_NO AS awbNo,TO_CHAR(AWB_DATE,'DDMONYY') AS awbDate,SEQ_NO AS seqNo,ULD_KEY as uldKey,TO_CHAR(DATE_TIME,'DDMONYY HH24:MI') as dateTime,TO_CHAR(ACTION_TIME,'DDMONYY HH24:MI') as actionTime,
    DECODE(NVL(GOOD_CONDITION,'N'),'Y','Good Condition: Y','Good Condition: N')||';'||DECODE(NVL(ADD_WATER,'N'),'Y','Add Water: Y','Add Water: N') as condition,
    RMK as rmk,CR_USER_ID as crUserId,
    decode(img_transaction_id,'','N',null,'N','Y') as photoStat,NVL(GOOD_CONDITION,'N') as goodCondtn,NVL(ADD_WATER,'N') as addWater,
    FAILURE_REASON AS failureReason,WARN_RMK as warnRemarks,img_transaction_id as transactionId,OTHERS AS others,#accessforAnimal# as accessforAnimal,
    TO_CHAR(ACTION_TIME,'DDMONYY') as actionDate,TO_CHAR(ACTION_TIME,'HH24') as actionHrs,TO_CHAR(ACTION_TIME,'MI') as actionMns,
    TO_CHAR(ACTION_TIME,'DDMONYY') as oldActionDate,TO_CHAR(ACTION_TIME,'HH24') as oldActionHrs,TO_CHAR(ACTION_TIME,'MI') as oldActionMns,
    TO_CHAR(NVL(FIRST_ACTION_TIME,CR_DATE),'DDMONYY HH24:MI') as lastTime,INTERVAL as interval,CYCLE as cycle,NVL(ACTION_TIME_IND,'N') as actionTimeInd,NVL(DATE_TIME_IND,'N') as dateActionInd,
    (SELECT FAIL_REASON FROM(
    SELECT FAIL_REASON FROM SPL_CHECK_MILESTONE_SLA WHERE SEQ_NO IN (SELECT SEQ_NO FROM SPL_CARGO_MILESTONE WHERE AWB_NO=SPL_CHECK_DATA.AWB_NO AND AWB_DATE=SPL_CHECK_DATA.AWB_DATE
    AND ULD_KEY=SPL_CHECK_DATA.ULD_KEY AND NVL(offload_ind,'N')=NVL(SPL_CHECK_DATA.IS_OFFLOAD,'N') AND milestone IN ('A-SPECIAL-CHECK','D-SPECIAL-CHECK'))
    ORDER BY CR_DATE DESC) WHERE ROWNUM=1) AS failureReason,
    (SELECT REMARK FROM(
    SELECT REMARK FROM SPL_WARN_REASON WHERE SEQ_NO IN (SELECT SEQ_NO FROM SPL_CARGO_MILESTONE WHERE AWB_NO=SPL_CHECK_DATA.AWB_NO AND AWB_DATE=SPL_CHECK_DATA.AWB_DATE
    AND ULD_KEY=SPL_CHECK_DATA.ULD_KEY AND NVL(offload_ind,'N')=NVL(SPL_CHECK_DATA.IS_OFFLOAD,'N') AND milestone IN ('A-SPECIAL-CHECK','D-SPECIAL-CHECK'))
    ORDER BY CR_DATE DESC) WHERE ROWNUM=1) AS warnRemarks,
    (SELECT SEQ_NO FROM SPL_CHECK_MILESTONE_SLA WHERE  instr(','||READING_TR_NO||',', ','||SPL_CHECK_DATA.SEQ_NO||',') > 0 and READING_TR_NO is not null and rownum=1) AS actionSeqNo,
    (SELECT TR_NO FROM SPL_CHECK_MILESTONE_SLA WHERE  instr(','||READING_TR_NO||',', ','||SPL_CHECK_DATA.SEQ_NO||',') > 0 and READING_TR_NO is not null and rownum=1) as actionTrNo,
    NVL(ACTION_CHG_IND,'N') as actChngInd
    FROM SPL_CHECK_DATA WHERE AWB_NO=#awbNo# AND AWB_DATE=#awbDate#
    AND NVL(IS_TEMP,'N') = 'N'
    <isNotEmpty property="seqNo">
		  AND  UPPER(SEQ_NO)=UPPER(#seqNo#)
		</isNotEmpty>
	ORDER BY SEQ_NO DESC				
	</select>
	
	<select id="fetchAWBEnquirySummaryDetails" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO" resultClass="cargo.cms.awb.bo.AWBEnquirySummaryBO">
     SELECT 
    (SELECT SUM(ICS.MANIFEST_PCS) FROM IMP_CAR_SHP ICS WHERE ICS.AWB_NO = #awbNo# AND ICS.AWB_DATE = #awbDate#  and car_created = 'Y') AS smanifestPcs,
    (SELECT DECODE(SUM(ICS.MANIFEST_WT),null,'',trim(TO_CHAR(NVL(SUM(ICS.MANIFEST_WT),0),'99999990.00'))) FROM IMP_CAR_SHP ICS WHERE ICS.AWB_NO = #awbNo# AND ICS.AWB_DATE = #awbDate#  and car_created = 'Y') AS smanifestWt,
    (SELECT DECODE(SUM(ICS.RECD_PCS),NULL,'',SUM(ICS.RECD_PCS)) FROM IMP_CAR_SHP ICS WHERE ICS.AWB_NO = #awbNo# AND ICS.AWB_DATE = #awbDate#) AS sbupPcs,
    (SELECT DECODE(sum(ICS.RECD_WT),null,'',trim(TO_CHAR(NVL(sum(ICS.RECD_WT),0),'99999990.00')))  FROM IMP_CAR_SHP ICS WHERE ICS.AWB_NO = #awbNo# AND ICS.AWB_DATE = #awbDate#) AS sbupWt,
    (SELECT decode(bupPcs,'','',bupPcs - (SELECT DECODE(SUM(LOCN_PCS),'',0,SUM(LOCN_PCS)) FROM AWB_INVENTORY WHERE AWB_NO=#awbNo# AND AWB_DATE=#awbDate#)) from( 
    SELECT DECODE(SUM(ICS.RECD_PCS),'','','0','',SUM(ICS.RECD_PCS)) bupPcs FROM IMP_CAR_SHP ICS WHERE ICS.AWB_NO = #awbNo# AND ICS.AWB_DATE = #awbDate#)) AS sreleasePcs,
    (SELECT decode(bupWt,'','','0','',trim(TO_CHAR(bupWt - (SELECT DECODE(SUM(LOCN_WT),'',0,SUM(LOCN_WT)) FROM AWB_INVENTORY WHERE AWB_NO=#awbNo# AND AWB_DATE=#awbDate#),'99999990.00'))) from( 
    SELECT DECODE(SUM(ICS.RECD_WT),'','',SUM(ICS.RECD_WT)) bupWt FROM IMP_CAR_SHP ICS WHERE ICS.AWB_NO = #awbNo# AND ICS.AWB_DATE = #awbDate#)) AS sreleaseWt,
    (SELECT SUM(ICA.AWB_PCS) FROM IMP_CAR_AWB ICA WHERE ICA.AWB_NO = #awbNo# AND ICA.AWB_DATE = #awbDate#) As stotalPcs,
    (SELECT DECODE(SUM(ICA.AWB_WT),null,'','0','',trim(TO_CHAR(NVL(SUM(ICA.AWB_WT),0),'99999990.00'))) FROM IMP_CAR_AWB ICA WHERE ICA.AWB_NO = #awbNo# AND ICA.AWB_DATE = #awbDate#) As stotalWt
    FROM DUAL
	</select>
	
	<select id="fetchAWBEnquiryExportSummaryDetails" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO" resultClass="cargo.cms.awb.bo.AWBEnquirySummaryBO">
		  select
		   (select DECODE(sum(rclPcs),NULL,'','0','',sum(rclPcs)) from(SELECT NVL(EH.RCL_PCS,0) AS rclPcs
				FROM  EXP_RCL_HD EH
				WHERE    EH.PPK_TYPE IN ('P','B') 
						 AND  EH.AWB_NO = #awbNo#
				         AND EH.AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY')
						 AND EH.STATUS != 'V' AND EH.STATUS != 'R' AND EH.RTN_IND != 'Y'
				UNION ALL		 
				SELECT	NVL(BRK.PCS,0) AS rclPcs
			 FROM EXP_RCL_HD EH, EXP_RCL_BRKDN BRK
			 WHERE EH.RCL_NO = BRK.RCL_NO  AND EH.PPK_TYPE = 'M'  
		           AND BRK.AWB_NO = #awbNo# 
				   AND BRK.AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY')
				   AND EH.STATUS != 'V' AND EH.STATUS != 'R' AND EH.RTN_IND != 'Y')) as srcsPcs,
		   (select DECODE(sum(rclWt),null,'','0','',trim(TO_CHAR(NVL(sum(rclWt),0),'99999990.00'))) from(SELECT
				        trim(TO_CHAR(NVL(EH.RCL_WT,0),'9999990D99')) AS rclWt
				FROM  EXP_RCL_HD EH
				WHERE    EH.PPK_TYPE IN ('P','B') 
						 AND  EH.AWB_NO = #awbNo#
				         AND EH.AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY')
						 AND EH.STATUS != 'V' AND EH.STATUS != 'R' AND EH.RTN_IND != 'Y'
				UNION ALL		 
				SELECT	trim(TO_CHAR(NVL(BRK.WEIGHT,0),'999999999990.00')) AS rclWt
			 FROM EXP_RCL_HD EH, EXP_RCL_BRKDN BRK
			 WHERE EH.RCL_NO = BRK.RCL_NO  AND EH.PPK_TYPE = 'M'  
		           AND BRK.AWB_NO = #awbNo# 
				   AND BRK.AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY')
				   AND EH.STATUS != 'V' AND EH.STATUS != 'R' AND EH.RTN_IND != 'Y')) as srcsWt,
		       (select DECODE(SUM(PMAN_PCS),NULL,'','0','',SUM(PMAN_PCS)) from AWB where  AWB_NO = #awbNo# AND AWB_DATE = #awbDate#) AS spmanifestPcs,
		      (select DECODE(SUM(pman_wt),null,'','0','',trim(TO_CHAR(NVL(SUM(pman_wt),0),'99999990.00'))) from AWB where  AWB_NO = #awbNo# AND AWB_DATE = #awbDate#) AS spmanifestWt,
		      (select sum(SHPM_ASSGN_PCS) from EXP_MANIFEST_DTL EM where EM.AWB_NO = #awbNo# AND AWB_DATE = #awbDate#) AS sdepPcs,
		      (select DECODE(sum(SHPM_ASSGN_WT),null,'',trim(TO_CHAR(NVL(sum(SHPM_ASSGN_WT),0),'99999990.00'))) from EXP_MANIFEST_DTL EM where EM.AWB_NO = #awbNo# AND AWB_DATE = #awbDate#) AS sdepWt
		    from
		   dual
	</select>
	
	<select id="FetchAWBEnquiryFirstPmanDetails" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO" resultClass="cargo.cms.awb.bo.AWBEnquirySummaryBO">
	select '0' spmanifestPcs,'0' spmanifestWt from exp_pmanifest_awb_first where awb_no=#awbNo# and awb_date=#awbDate# and rownum = 1
	</select>
	<select id="fetchAWBEnquiryTranshipmentSummaryDetails" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO" resultClass="cargo.cms.awb.bo.AWBEnquirySummaryBO">
<!--  SELECT 
      SUM(ICS.MANIFEST_PCS) AS smanifestPcs,
      SUM(ICS.MANIFEST_WT) AS smanifestWt,
      SUM(ISD.STRG_PCS) AS sbupPcs,
      SUM(ISD.STRG_WT) AS sbupWt,
      SUM(ISRF.RELPCS) AS sreleasePcs,
      SUM(ISRF.RElWT) AS sreleaseWt,
      SUM(T.RTN_PCS) AS srcsPcs,
      SUM(T.RTN_WT) AS srcsWt,
      SUM(EPA.PMAN_PCS) AS spmanifestPcs,
      SUM(EPA.PMAN_WT) AS spmanifestWt,
      SUM(EM.SHPM_ASSGN_PCS) AS sdepPcs,
      SUM(EM.SHPM_ASSGN_WT) AS sdepWt,
      SUM(DECODE(T.RTN_PCS, NULL, 0, T.RTN_PCS) + DECODE(EPA.PMAN_PCS, NULL, 0, EPA.PMAN_PCS) + DECODE(EM.SHPM_ASSGN_PCS, NULL, 0,EM.SHPM_ASSGN_PCS) + DECODE(ICS.MANIFEST_PCS, NULL, 0, ICS.MANIFEST_PCS) + DECODE(ISD.STRG_PCS, NULL, 0, ISD.STRG_PCS) + DECODE(ISRF.RELPCS, NULL, 0, ISRF.RELPCS)) As stotalPcs,
      SUM(DECODE(T.RTN_WT, NULL, 0, T.RTN_WT) + DECODE(EPA.PMAN_WT, NULL, 0, EPA.PMAN_WT) + DECODE(EM.SHPM_ASSGN_WT, NULL, 0, EM.SHPM_ASSGN_WT) + DECODE(ICS.MANIFEST_WT, NULL, 0,ICS.MANIFEST_WT) + DECODE(ISD.STRG_WT, NULL, 0, ISD.STRG_WT) + DECODE(ISRF.RElWT, NULL, 0, ISRF.RElWT)) AS stotalWt
  FROM
      IMP_CAR_SHP ICS
      LEFT JOIN IMP_AWB_STRG_DTL ISD ON ISD.AWB_NO = ICS.AWB_NO AND ISD.AWB_DATE = ICS.AWB_DATE AND ISD.FLT_DATE = ICS.FLT_DATE AND ISD.FLT_KEY = ICS.FLT_KEY 
      LEFT JOIN (SELECT SF.AWB_NO, SF.AWB_DATE, SF.FLT_KEY, SF.FLT_DATE, SUM(SR.SRF_PCS) SRFPCS, SUM(SR.SRF_WT) SRFWT,SUM(SF.DLV_PCS) RELPCS,
               SUM(DLV_WT) RELWT
             FROM IMP_SRF SR 
		         join IMP_SRF_FLT SF ON SR.SRF_NO = SF.SRF_NO
            WHERE ((SR.SRF_EXPY_DATE > sysdate and SR.STATUS ='ISSUED') or SR.STATUS ='POSTED' or
			       SR.SRF_NO IN (SELECT SRF_NO FROM IMP_CDIF WHERE VOID_DATE IS NULL))    
              GROUP BY SF.AWB_NO, SF.AWB_DATE, SF.FLT_KEY, SF.FLT_DATE
		             ) ISRF ON ICS.AWB_NO = ISRF.AWB_NO AND
			ICS.AWB_DATE = ISRF.AWB_DATE AND
			ICS.FLT_KEY = ISRF.FLT_KEY AND
			ICS.FLT_DATE = ISRF.FLT_DATE      
     LEFT JOIN EXP_PMANIFEST_AWB EPA ON EPA.AWB_NO = ICS.AWB_NO AND EPA.AWB_DATE = ICS.AWB_DATE 
     LEFT JOIN EXP_MANIFEST_DTL EM ON EM.AWB_NO = EPA.AWB_NO AND EM.AWB_DATE = EPA.AWB_DATE AND EM.FLT_KEY = EPA.FLT_KEY AND EM.FLT_DATE = EPA.FLT_DATE 
     LEFT JOIN (SELECT ERD.RTN_PCS,ERD.RTN_WT,ERH.AWB_NO,ERH.AWB_DATE,ERH.FLT_KEY FROM EXP_RCL_DTL ERD,EXP_RCL_HD ERH WHERE ERH.AWB_NO = #awbNo# AND ERH.AWB_DATE = #awbDate#) T ON T.AWB_NO = EPA.AWB_NO AND T.AWB_DATE = EPA.AWB_DATE AND T.FLT_KEY = EPA.FLT_KEY 
 WHERE
   ICS.AWB_NO = #awbNo# AND
   ICS.AWB_DATE = #awbDate#-->
      SELECT 
   (SELECT DECODE(SUM(ICS.MANIFEST_PCS),NULL,'','0','',SUM(ICS.MANIFEST_PCS)) FROM IMP_CAR_SHP ICS, AWB B WHERE B.AWB_NO = ICS.AWB_NO AND B.AWB_DATE = ICS.AWB_DATE AND ICS.AWB_NO = #awbNo# AND ICS.AWB_DATE = #awbDate# and car_created = 'Y' AND ICS.FLT_KEY NOT IN ((select rule_value from cmsrules where rule_code='DUMMY_FLT_AAT'),(select rule_value from cmsrules where rule_code='DUMMY_FLT_HACTL'))) AS smanifestPcs,
   (SELECT DECODE(SUM(ICS.MANIFEST_WT),null,'','0','',trim(TO_CHAR(NVL(SUM(ICS.MANIFEST_WT),0),'99999990.00'))) FROM IMP_CAR_SHP ICS, AWB B WHERE B.AWB_NO = ICS.AWB_NO AND B.AWB_DATE = ICS.AWB_DATE AND ICS.AWB_NO = #awbNo# AND ICS.AWB_DATE = #awbDate# and car_created = 'Y' AND ICS.FLT_KEY NOT IN ((select rule_value from cmsrules where rule_code='DUMMY_FLT_AAT'),(select rule_value from cmsrules where rule_code='DUMMY_FLT_HACTL'))) AS smanifestWt,
   (SELECT DECODE(SUM(ICS.RECD_PCS),NULL,'','0','',SUM(ICS.RECD_PCS)) FROM IMP_CAR_SHP ICS WHERE ICS.AWB_NO = #awbNo# AND ICS.AWB_DATE = #awbDate#) AS sbupPcs,
   (SELECT DECODE(SUM(ICS.RECD_WT),null,'','0','',trim(TO_CHAR(NVL(SUM(ICS.RECD_WT),0),'99999990.00'))) FROM IMP_CAR_SHP ICS WHERE ICS.AWB_NO = #awbNo# AND ICS.AWB_DATE = #awbDate#) AS sbupWt,
   (SELECT DECODE(SUM(ICA.AWB_PCS),NULL,'','0','',SUM(ICA.AWB_PCS)) FROM IMP_CAR_AWB ICA WHERE ICA.AWB_NO = #awbNo# AND ICA.AWB_DATE = #awbDate#) As stotalPcs,
   (SELECT DECODE(SUM(ICA.AWB_WT),null,'','0','',trim(TO_CHAR(NVL(SUM(ICA.AWB_WT),0),'99999990.00'))) FROM IMP_CAR_AWB ICA WHERE ICA.AWB_NO = #awbNo# AND ICA.AWB_DATE = #awbDate#) As stotalWt,
   (select DECODE(sum(rclPcs),NULL,'','0','',sum(rclPcs)) from(SELECT NVL(EH.RCL_PCS,0) AS rclPcs
		FROM  EXP_RCL_HD EH
		WHERE    EH.PPK_TYPE IN ('P','B') 
				 AND  EH.AWB_NO = #awbNo#
		         AND EH.AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY')
				 AND EH.STATUS != 'V'
		UNION ALL		 
		SELECT	NVL(BRK.PCS,0) AS rclPcs
	 FROM EXP_RCL_HD EH, EXP_RCL_BRKDN BRK
	 WHERE EH.RCL_NO = BRK.RCL_NO  AND EH.PPK_TYPE = 'M'  
           AND BRK.AWB_NO = #awbNo# 
		   AND BRK.AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY')
		   AND EH.STATUS != 'V')) as srcsPcs,
   (select DECODE(sum(rclWt),null,'','0','',trim(TO_CHAR(NVL(sum(rclWt),0),'99999990.00'))) from(SELECT
		        trim(TO_CHAR(NVL(EH.RCL_WT,0),'9999990D99')) AS rclWt
		FROM  EXP_RCL_HD EH
		WHERE    EH.PPK_TYPE IN ('P','B') 
				 AND  EH.AWB_NO = #awbNo#
		         AND EH.AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY')
				 AND EH.STATUS != 'V'
		UNION ALL		 
		SELECT	trim(TO_CHAR(NVL(BRK.WEIGHT,0),'999999999990.00')) AS rclWt
	 FROM EXP_RCL_HD EH, EXP_RCL_BRKDN BRK
	 WHERE EH.RCL_NO = BRK.RCL_NO  AND EH.PPK_TYPE = 'M'  
           AND BRK.AWB_NO = #awbNo# 
		   AND BRK.AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY')
		   AND EH.STATUS != 'V')) as srcsWt,
	 (select DECODE(SUM(manf_pc),NULL,'','0','',SUM(manf_pc)) from  
	 (select  flt_key,flt_date,awb_no,awb_date,sum(manf_pc) manf_pc
		   FROM ( select flt_key flt_key,flt_date flt_date, awb_no awb_no,awb_date awb_date, sum(nvl(bulk_pcs,0)) manf_pc
		   from exp_pmanifest_awb GROUP BY flt_key, flt_date, awb_no, awb_date
		   UNION ALL
		   select flt_key flt_key, flt_date flt_date, awb_no awb_no,awb_date awb_date, sum(nvl(bulk_pcs,0)+nvl(ppk_pcs,0)) manf_pc
		   from EXP_PMAN_TARMAC_AWB group by flt_key,awb_no,awb_date,flt_date)  group by flt_key,flt_date,awb_no,awb_date)EPA       
		   where awb_no = #awbNo#
		   and awb_date  = #awbDate#)	 AS spmanifestPcs, 
		   
	(select DECODE(SUM(manf_wt),null,'','0','',trim(TO_CHAR(NVL(SUM(manf_wt),0),'99999990.00'))) from  
	 (select  flt_key,flt_date,awb_no,awb_date,sum(manf_wt) manf_wt
		   FROM ( select flt_key flt_key,flt_date flt_date, awb_no awb_no,awb_date awb_date, sum(nvl(bulk_wt,0)) manf_wt
		   from exp_pmanifest_awb GROUP BY flt_key, flt_date, awb_no, awb_date
		   UNION ALL
		   select flt_key flt_key, flt_date flt_date, awb_no awb_no,awb_date awb_date, sum(nvl(bulk_wt,0)+nvl(ppk_wt,0)) manf_wt
		   from EXP_PMAN_TARMAC_AWB group by flt_key,awb_no,awb_date,flt_date)  group by flt_key,flt_date,awb_no,awb_date)EPA       
		   where awb_no = #awbNo#
		   and awb_date  = #awbDate#)	 AS spmanifestWt,       
      (select DECODE(sum(SHPM_ASSGN_PCS),NULL,'','0','',sum(SHPM_ASSGN_PCS)) from EXP_MANIFEST_DTL EM where EM.AWB_NO = #awbNo# AND AWB_DATE = #awbDate#) AS sdepPcs,
      (select DECODE(sum(SHPM_ASSGN_WT),null,'','0','',trim(TO_CHAR(NVL(sum(SHPM_ASSGN_WT),0),'99999990.00'))) from EXP_MANIFEST_DTL EM where EM.AWB_NO = #awbNo# AND AWB_DATE = #awbDate#) AS sdepWt
   FROM DUAL
   </select>

<select id="fetchAWBEnquiryConsignmentDetails" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO" resultClass="cargo.cms.awb.bo.AWBEnquiryConsignmentBO">
	select 
    distinct
     (SELECT count(1)
	   	FROM
	     AWB_INVENTORY A
		WHERE
	     A.AWB_NO = UPPER(#awbNo#) and
		 A.AWB_DATE   = to_date(#awbDate#,'DDMONYY')) AS storageLocation,
		  (case when
  (select sum(a)from (SELECT COUNT(*) as a
	FROM EXP_RCL_DMN A,
  	EXP_RCL_HD B
	WHERE A.RCL_NO    = B.RCL_NO
	AND B.AWB_NO      = #awbNo#	AND B.AWB_DATE    =to_date(#awbDate#,'DDMONYY')
	AND B.STATUS NOT IN ('V','R') and B.vcl_no is not null
  union all
  SELECT COUNT(*) as a
	FROM VAL_VCL_DMN A,
  	VAL_VCL_HD B
	WHERE A.VCL_NO    = B.VCL_NO
	AND B.AWB_NO      = #awbNo#
	AND B.AWB_DATE    =to_date(#awbDate#,'DDMONYY') AND B.VOID_USER_ID IS NULL AND B.VOID_DATE IS NULL)) > 0 then
  (select sum(a)from (SELECT COUNT(*) as a
	FROM EXP_RCL_DMN A,
  	EXP_RCL_HD B
	WHERE A.RCL_NO    = B.RCL_NO
	AND B.AWB_NO      = #awbNo#	AND B.AWB_DATE    =to_date(#awbDate#,'DDMONYY')
	AND B.STATUS NOT IN ('V','R') and B.vcl_no is not null
  union all
  SELECT COUNT(*) as a
	FROM VAL_VCL_DMN A,
  	VAL_VCL_HD B
	WHERE A.VCL_NO    = B.VCL_NO
	AND B.AWB_NO      = #awbNo#
	AND B.AWB_DATE    =to_date(#awbDate#,'DDMONYY') AND B.VOID_USER_ID IS NULL AND B.VOID_DATE IS NULL))  else 
  (case when 
  (SELECT COUNT(*)
	FROM EXP_RCL_DMN A,
  	EXP_RCL_HD B
	WHERE A.RCL_NO    = B.RCL_NO
	AND B.AWB_NO      = #awbNo#	AND B.AWB_DATE    =to_date(#awbDate#,'DDMONYY')
	AND B.STATUS NOT IN ('V','R') and B.vcl_no is not null) > 0 then
  (SELECT COUNT(*)
	FROM EXP_RCL_DMN A,
  	EXP_RCL_HD B
	WHERE A.RCL_NO    = B.RCL_NO
	AND B.AWB_NO      = #awbNo#	AND B.AWB_DATE    =to_date(#awbDate#,'DDMONYY')
	AND B.STATUS NOT IN ('V','R') and B.vcl_no is not null)  else 
	(case when
(SELECT COUNT(*)
	FROM VAL_VCL_DMN A,
  	VAL_VCL_HD B
	WHERE A.VCL_NO    = B.VCL_NO
	AND B.AWB_NO      = #awbNo#
	AND B.AWB_DATE    =to_date(#awbDate#,'DDMONYY') AND B.VOID_USER_ID IS NULL AND B.VOID_DATE IS NULL) > 0 then 
  (SELECT COUNT(*)
	FROM VAL_VCL_DMN A,
  	VAL_VCL_HD B
	WHERE A.VCL_NO    = B.VCL_NO
	AND B.AWB_NO      = #awbNo#
	AND B.AWB_DATE    =to_date(#awbDate#,'DDMONYY') AND B.VOID_USER_ID IS NULL AND B.VOID_DATE IS NULL) else  
  (case when 
  (SELECT COUNT(*)
	FROM EXP_RCL_DMN A,
  	EXP_RCL_HD B
	WHERE A.RCL_NO    = B.RCL_NO
	AND B.AWB_NO      = #awbNo#	AND B.AWB_DATE    =to_date(#awbDate#,'DDMONYY')
	AND B.STATUS NOT IN ('V','R')) > 0 then
  (SELECT COUNT(*)
	FROM EXP_RCL_DMN A,
  	EXP_RCL_HD B
	WHERE A.RCL_NO    = B.RCL_NO
	AND B.AWB_NO      = #awbNo#	AND B.AWB_DATE    =to_date(#awbDate#,'DDMONYY')
	AND B.STATUS NOT IN ('V','R'))  else 0
	
  end
  )
  end
  )
  end
  )  
  end)    AS dimension,
  (SELECT NVL(SUM(JODTL.PC),0) joPcs
			FROM EXP_SEC_CHK_JO JOHD,
			  EXP_SEC_CHK_JO_DTL JODTL
			WHERE JODTL.JO_NO = JOHD.JO_NO
			AND JODTL.RESULT IS NOT NULL
			AND JODTL.RESULT  = 'Pass'
			and JOHD.status != 'VOID'
			AND JOHD.JO_TYPE='SC'
			AND JOHD.AWB_NO   =UPPER(#awbNo#)
			AND JOHD.AWB_DATE =to_date(#awbDate#,'DDMONYY')) as paasJo,
	'' as reqJo,
 (SELECT NVL(SUM(JOHD.PC),0) joPcs
					FROM EXP_SEC_CHK_JO JOHD
					WHERE JOHD.STATUS != 'VOID'
					AND JOHD.JO_TYPE='SC'
					AND JOHD.AWB_NO   =UPPER(#awbNo#)
					AND JOHD.AWB_DATE =to_date(#awbDate#,'DDMONYY'))  as totJo,
 (SELECT NVL(SUM(reqPcs),'0') as secJoPcs FROM (
SELECT NVL(SUM(PMAN.PMAN_PCS),'0') AS reqPcs
  FROM AWB AWB,
    EXP_PMANIFEST_AWB PMAN,FLT_OPR_LEG LEG
  WHERE PMAN.AWB_NO = AWB.AWB_NO
  AND PMAN.AWB_DATE = AWB.AWB_DATE
  AND LEG.FLT_KEY=PMAN.FLT_KEY
    AND LEG.SCH_DATE = PMAN.FLT_DATE
    AND LEG.FLT_TYPE = 'D'
    AND LEG.LEG_ORD  = 1
  AND (AWB.AWB_TYPE = 'T'
  OR AWB.AWB_TYPE   = 'E')
  AND (EXISTS
    (SELECT NULL FROM MAST_SEC_CHECK SECCK
     WHERE SECCK.CARR_CODE = AWB.CARR_CODE
     AND SECCK.PORT = LEG.OFF_POINT
     AND NVL(SECCK.ACTIVE,'N')='Y'
	UNION
	SELECT NULL FROM MAST_SEC_CHECK SECCK
     WHERE SECCK.CARR_CODE = AWB.CARR_CODE
     AND NVL(SECCK.ACTIVE,'N')='Y'
     AND NOT EXISTS (SELECT NULL FROM MAST_SEC_CHECK SECCK
     WHERE SECCK.CARR_CODE = AWB.CARR_CODE
     AND SECCK.PORT = LEG.OFF_POINT)
     AND SECCK.CTRY_CODE= (SELECT CTRY_CODE
        FROM MAST_CITY A
        WHERE A.CODE=LEG.OFF_POINT)
        )    
    )
  AND AWB.AWB_NO  =#awbNo#
  AND AWB.AWB_DATE=#awbDate#
  UNION ALL
  SELECT NVL(SUM((C.manifest_pcs +
    CASE
      WHEN C.CIR_PROC_USER IS NULL
      THEN 0
      ELSE
        CASE
          WHEN C.CIR_PCS_TYPE = 'SL'
          THEN -1 * C.CIR_PCS
          ELSE C.CIR_PCS
        END
    END)),'0') AS reqPcs
  FROM mast_pman_non_apprvl_port A,
    IMP_CAR_SHP C
  WHERE A.CARR_CODE = C.CARR_CODE
  AND A.PORT        = C.ldg_point
  AND A.CTRY_CODE= #ctryCode#
  AND C.AWB_NO  =#awbNo#
  AND C.AWB_DATE=#awbDate#
  AND NOT EXISTS
    (SELECT NULL
    FROM AWB AWB,
      EXP_PMANIFEST_AWB PMAN
    WHERE PMAN.AWB_NO = AWB.AWB_NO
    AND PMAN.AWB_DATE = AWB.AWB_DATE
    AND (AWB.AWB_TYPE = 'T'
    OR AWB.AWB_TYPE   = 'E')
    AND EXISTS
      (SELECT OFF_POINT
      FROM FLT_OPR_LEG
      WHERE FLT_KEY=PMAN.FLT_KEY
      AND SCH_DATE = PMAN.FLT_DATE
      AND FLT_TYPE = 'D'
      AND LEG_ORD  = 1
      )
    AND (EXISTS
    (SELECT NULL FROM MAST_SEC_CHECK SECCK
     WHERE SECCK.CARR_CODE = AWB.CARR_CODE
     AND SECCK.PORT = PMAN.UNLDG_PT 
     AND NVL(SECCK.ACTIVE,'N')='Y'
	 UNION
	 SELECT NULL FROM MAST_SEC_CHECK SECCK
     WHERE SECCK.CARR_CODE = AWB.CARR_CODE
     AND NVL(SECCK.ACTIVE,'N')='Y'
     AND NOT EXISTS (SELECT NULL FROM MAST_SEC_CHECK SECCK
     WHERE SECCK.CARR_CODE = AWB.CARR_CODE
     AND SECCK.PORT = PMAN.UNLDG_PT )
     AND SECCK.CTRY_CODE= (SELECT CTRY_CODE
        FROM MAST_CITY A
        WHERE A.CODE=PMAN.UNLDG_PT)
        )    
    )
    AND AWB.AWB_NO  =C.AWB_NO
    AND AWB.AWB_DATE=C.AWB_DATE
    )
  UNION ALL
  SELECT NVL(SUM(PMAN.BULK_PCS+PMAN.PPK_PCS),'0') AS reqPcs
  FROM AWB AWB,
    EXP_PMAN_TARMAC_AWB PMAN,FLT_OPR_LEG LEG
  WHERE PMAN.AWB_NO = AWB.AWB_NO
  AND PMAN.AWB_DATE = AWB.AWB_DATE
  AND LEG.FLT_KEY=PMAN.FLT_KEY
    AND LEG.SCH_DATE = PMAN.FLT_DATE
    AND LEG.FLT_TYPE = 'D'
    AND LEG.LEG_ORD  = 1
  AND (AWB.AWB_TYPE = 'T'
  OR AWB.AWB_TYPE   = 'E')
  AND (EXISTS
    (SELECT NULL FROM MAST_SEC_CHECK SECCK
     WHERE SECCK.CARR_CODE = AWB.CARR_CODE
     AND SECCK.PORT = LEG.OFF_POINT 
     AND NVL(SECCK.ACTIVE,'N')='Y'
	UNION
	SELECT NULL FROM MAST_SEC_CHECK SECCK
     WHERE SECCK.CARR_CODE = AWB.CARR_CODE
     AND NVL(SECCK.ACTIVE,'N')='Y'
     AND NOT EXISTS (SELECT NULL FROM MAST_SEC_CHECK SECCK
     WHERE SECCK.CARR_CODE = AWB.CARR_CODE
     AND SECCK.PORT = LEG.OFF_POINT )
     AND SECCK.CTRY_CODE= (SELECT CTRY_CODE
        FROM MAST_CITY A
        WHERE A.CODE=LEG.OFF_POINT)
        )    
    )
  AND AWB.AWB_NO  =#awbNo#
  AND AWB.AWB_DATE=#awbDate#
  )) AS expReqJO,	 
     PKG_CST_DC.awb_enq_licenses_count(#awbNo#,#awbDate#)  AS licence,     
     <!-- (SELECT			   
	    COUNT(*)
      FROM
      ( SELECT 
			  A.AWB_NO AS awbNo,
			  SUBSTR( A.AWB_NO,1,3 ) AS awbNoPFX,
			  SUBSTR( A.AWB_NO,4 ) as awbNoSFX,
			  A.CR_USER_ID AS rmkUserId,  	   
			  TO_CHAR( A.CR_DATE, 'DDMONYY HH24:MI' ) AS crDate,
			  A.RMK_TYPE AS type,
			  A.RMK AS remarks,
			  A.FLT_KEY AS fltKey,
			  TO_CHAR( A.FLT_DATE, 'DDMONYY' ) AS fltDate,
			  B.CODE_DESC AS typeDesc			  	 		  
		FROM  AWB_RMK A
        LEFT JOIN MAST_CODE_DTL B ON B.CODE = A.RMK_TYPE 
		WHERE     A.AWB_NO = #awbNo#
		and A.AWB_DATE = #awbDate#
    UNION
    SELECT 
    A.AWB_NO AS awbNo,
		SUBSTR( A.AWB_NO,1,3 ) AS awbNoPFX,
		SUBSTR( A.AWB_NO,4 ) as awbNoSFX,
		A.CR_USER_ID AS rmkUserId,  	   
		TO_CHAR( A.CR_DATE, 'DDMONYY HH24:MI' ) AS crDate,
		'AWB' AS type,
			  A.AIRLN_RMK AS remarks,
			  '' AS fltKey,
			  '' AS fltDate,
			  '' AS typeDesc		
    FROM AWB A WHERE A.AWB_NO=#awbNo# AND A.AWB_DATE=#awbDate# 
    AND NOT EXISTS (SELECT NULL FROM AWB_RMK WHERE AWB_NO=#awbNo#)
    UNION
    SELECT
    A.AWB_NO AS awbNo,
		SUBSTR( A.AWB_NO,1,3 ) AS awbNoPFX,
		SUBSTR( A.AWB_NO,4 ) as awbNoSFX,
		A.CR_USER_ID AS rmkUserId,  	   
		TO_CHAR( A.CR_DATE, 'DDMONYY HH24:MI' ) AS crDate,
		'AWB' AS type,
			  A.WH_RMK AS remarks,
			  '' AS fltKey,
			  '' AS fltDate,
			  '' AS typeDesc		
    FROM EXP_CAR A WHERE A.AWB_NO=#awbNo# AND A.AWB_DATE=#awbDate# 
	  union
      SELECT			   
	  SUBSTR(A.ENTITY_KEY,1,11) AS awbNo,
      SUBSTR(A.ENTITY_KEY,1,3) AS awbNoPFX,
      SUBSTR(A.ENTITY_KEY,4,11) as awbNoSFX,
      A.LM_USER_ID AS rmkUserId,
      TO_CHAR(A.LM_DATE,'DDMONYY HH24:MI') AS crDate,
      '' as type,
      A.RMK AS remarks,
      DECODE('I','I',SI.FLT_KEY,EA.FLT_KEY) AS fltKey,
      DECODE('I','I',TO_CHAR(SI.FLT_DATE,'DDMONYY'),TO_CHAR(EA.FLT_DATE,'DDMONYY')) AS fltDate,
      A.TAG_NAME AS typeDesc
      FROM
      RMK_HIST A
      LEFT JOIN EXP_PMANIFEST_AWB EA ON EA.AWB_NO = #awbNo# AND EA.AWB_DATE = #awbDate# 
      LEFT JOIN IMP_CAR_SHP SI ON SI.AWB_NO = #awbNo# AND SI.AWB_DATE = #awbDate# 
      WHERE
      <isNotEqual property="awbType" compareValue="E">
      A.ENTITY_KEY IN (DECODE(SI.AWB_NO,'','',SI.AWB_NO||SI.FLT_KEY)) OR A.ENTITY_KEY IN (DECODE(SI.AWB_NO,'','',SI.AWB_NO||TO_CHAR(SI.AWB_DATE,'DDMONYY')))
      <isNotEmpty property="type">
	  AND A.TAG_NAME = #type#
	  </isNotEmpty>		
      </isNotEqual>
      <isEqual property="awbType" compareValue="E">
      A.ENTITY_KEY IN (DECODE(EA.AWB_NO,'','',EA.AWB_NO||EA.FLT_KEY)) OR A.ENTITY_KEY IN (DECODE(EA.AWB_NO,'','',EA.AWB_NO||TO_CHAR(EA.AWB_DATE,'DDMONYY')))
      <isNotEmpty property="type">
	  AND A.TAG_NAME = #type#
	  </isNotEmpty>		
      </isEqual>)) AS remarksLog, -->      
        (SELECT COUNT(1) 
  		FROM HIS_AWB_EVNT A
  		WHERE A.AWB_NO = #awbNo#
    		AND A.AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
    		AND A.MODULE = 'W'
    		AND A.COD_HIS_TYP = 'E') AS event,
	 (SELECT count(DISTINCT BID.INV_NO)
		FROM BILL_INV_DTL BID
		JOIN BILL_CHARGE_DTl BCD ON BID.CHRG_TR_NO = BCD.TR_NO
		JOIN awb awb ON awb.awb_no    = BCD.awb_no AND awb.awb_date =BCD.awb_date
		WHERE BCD.AWB_NO = #awbNo# AND BCD.AWB_DATE =TO_DATE(#awbDate#, 'DDMONYY')
		) AS invoiceAdjNote,
		
     <!--(SELECT COUNT(*)
  FROM
      BILL_INV_HD
 WHERE
      AWB_NO = #awbNo# AND 
      AWB_DATE=TO_DATE(#awbDate#, 'DDMONYY')) AS invoiceAdjNote, -->
      
      (SELECT COUNT(1)
		  FROM
		      EDI_MSG_LOG_OUT A  
		 WHERE
		      A.AWB_NO=UPPER(#awbNo#)) AS fsuMessage,
      
      (SELECT COUNT(1)
			FROM (SELECT awb_no,awb_date FROM V_CST_CONT_CODE_ALL
					union
				SELECT  awb_no,awb_date FROM V_CST_VSL_CC_CODE_AWB ) R
		INNER JOIN  (SELECT *  FROM  (SELECT * FROM AWB WHERE AWB_NO= #awbNo# ORDER BY AWB_DATE DESC  ) 	WHERE ROWNUM=1 ) awb ON awb.awb_no = r.awb_no
	WHERE R.AWB_NO    = #awbNo#
	AND R.AWB_DATE    = awb.AWB_DATE) AS constraintCode,      
      (select count(1) from(<![CDATA[
		SELECT DISTINCT ITEMCODE 
		FROM (
			SELECT
				TR_NO AS trNo,
				AWB_NO AS awbNo,
				CUST_NO AS custNo,
				CUST_NAME AS agentName,
				ITM_CODE AS itemCode,
				ITM_CODE_SFX AS itemCodeSfx,
				ITM_DESC AS itemDesc,
				REV_IND AS revInd,
				CASH_IND AS cashInd,
				(CHRG_AMT + WAVR_AMT) AS chargeAmount,
				PAID_AMT_CASH AS paidAmtCash,
				PAID_AMT_CREDIT AS paidAmtCredit,
				STATUS AS awbStatus,
				ADJ_AMT AS adjAmount,
				nvl(WAVR_AMT,0) AS waverAmt
			FROM
				BILL_CHARGE_DTL
			WHERE
				STATUS != 'VOID'
				AND AWB_NO = #awbNo# and AWB_DATE = to_date(#awbDate#, 'DDMONYY')
				AND (STATUS = 'PAID'
					or (STATUS = 'PENDING' 
						AND SRF_NO IN (SELECT SRF_NO FROM IMP_SRF 
										  WHERE (SRF_EXPY_DATE > sysdate and STATUS ='ISSUED') or STATUS ='POSTED' 
				  	  					  or SRF_NO in (select SRF_NO from IMP_CDIF where VOID_USER is null)))
					or (STATUS = 'PENDING' 
					    AND WAVR_AMT > 0 AND WAVR_DONE = 'Y' 
						AND SRF_NO IN (SELECT SRF_NO FROM BILL_CHARGE_DTL WHERE STATUS = 'PAID'))
					or (STATUS = 'PENDING' AND SRF_NO IS NULL)
					)						
			UNION ALL
			SELECT '', awbNo, AGENT_CODE custNo, AGENT_NAME agentName, itemCode, itemCodeSfx, itemDesc, revInd, m.CASH_IND cashInd, 
				   chamt chargeAmount, 0 paidAmtCash, 0 paidAmtCredit, 'PENDING' awbStatus, 0 adjAmount, 0 waverAmt 
			FROM (
				SELECT G.AWB_NO awbNo, G.AWB_DATE awbDate, G.ITM_CODE itemCode , G.ITM_CODE_SFX itemCodeSfx, 
							 min(G.ITM_DESC) itemDesc, min(G.REV_IND) revInd,sum(G.QTY) qty, max(G.UNIT_PRICE) unitPrice, sum(G.AMT) chamt, 
							 min(G.MIN_CHRG_IND) minChrgInd, min(G.MAX_CHRG_IND) maxChrgInd
				FROM GT_SRF_CHARGES G
				WHERE LENGTH(FLT_KEY) > 8
				group by G.AWB_NO, G.AWB_DATE, G.ITM_CODE, G.ITM_CODE_SFX) C
			join IMP_CAR_AWB ica on ica.AWB_NO = c.awbNo AND ica.AWB_DATE = c.awbDate
			join BILL_ITM_MASTER m on m.ITM_CODE = c.itemCode and NVL(m.ITM_CODE_SFX, '**') = NVL(c.itemCodeSfx, '**') and nvl(m.ECT_HANDLER, NVL(ica.ECT_HANDLER, 'AAT')) = NVL(ica.ECT_HANDLER, 'AAT')
			join AWB a on a.AWB_NO = c.awbNo and a.AWB_DATE = c.awbDate and a.awb_type = 'I'
			UNION ALL
			select '', awbNo, AGENT_CODE custNo, AGENT_NAME agentName, itemCode, itemCodeSfx, itemDesc, m.REV_IND revInd, m.CASH_IND cashInd, 
				   (chamt - nvl(pchrg, 0) + NVL(cp.Wavr, 0)) chargeAmount, 0 paidAmtCash, 0 paidAmtCredit, 'PENDING' awbStatus, 0 adjAmount, nvl(cp.Wavr,0) waverAmt
			from 
				 (select G.AWB_NO awbNo, G.AWB_DATE awbDate, G.ITM_CODE itemCode , G.ITM_CODE_SFX itemCodeSfx, 
						  min(G.ITM_DESC) itemDesc, min(G.REV_IND) revInd,sum(G.QTY) qty, max(G.UNIT_PRICE) unitPrice, sum(G.AMT) chamt, 
						 min(G.MIN_CHRG_IND) minChrgInd, min(G.MAX_CHRG_IND) maxChrgInd
						 from GT_SRF_CHARGES G
						 where G.AWB_NO = #awbNo# and G.AWB_DATE = to_date(#awbDate#, 'DDMONYY')
						 and G.RMODE = 'SRF' and (LENGTH(FLT_KEY) <= 8 or FLT_KEY is null)
						 group by G.AWB_NO, G.AWB_DATE, G.ITM_CODE, G.ITM_CODE_SFX
				  union
				  Select AWB_NO, AWB_DATE, ITM_CODE, ITM_CODE_SFX, 
				  		 ITM_DESC, REV_IND, 1, 0, CHRG_AMT, 
						 'N', 'N'
						  from IMP_CHRG_ITM_REV_AWB 
						  where AWB_NO = #awbNo# and AWB_DATE = to_date(#awbDate#, 'DDMONYY')
						  AND ITM_CODE in ('CCIMPO', 'FCIMFC', 'DBIMPO')
				  ) c 
			join IMP_CAR_AWB ica on ica.AWB_NO = c.awbNo AND ica.AWB_DATE = c.awbDate
			join BILL_ITM_MASTER m on m.ITM_CODE = c.itemCode and NVL(m.ITM_CODE_SFX, '**') = NVL(c.itemCodeSfx, '**') and nvl(m.ECT_HANDLER, NVL(ica.ECT_HANDLER, 'AAT')) = NVL(ica.ECT_HANDLER, 'AAT')
			join AWB a on a.AWB_NO = c.awbNo and a.AWB_DATE = c.awbDate and a.awb_type = 'I'
			left join IMP_CHRG_ITM_REV_AWB ic on ic.AWB_NO = c.awbNo AND  ic.AWB_DATE = c.awbDate
				 AND ic.ITM_CODE = c.itemCode and NVL(ic.ITM_CODE_SFX, '**') = NVL(c.itemCodeSfx, '**')
			left join (select AWB_NO, AWB_DATE, ITM_CODE, ITM_CODE_SFX, sum(CHRG_AMT + Wavr_Amt) pchrg,  sum(Wavr_Amt) Wavr
				 from BILL_CHARGE_DTL where (Status = 'PAID' or (Status = 'PENDING' and Wavr_Amt > 0 and SRF_NO IN (SELECT SRF_NO FROM BILL_CHARGE_DTL WHERE STATUS = 'PAID' AND SRF_NO IS NOT NULL)))
				 group by AWB_NO, AWB_DATE, ITM_CODE, ITM_CODE_SFX) cp on cp.AWB_NO = c.awbNo AND  cp.AWB_DATE = c.awbDate
				 AND cp.ITM_CODE = c.itemCode and NVL(cp.ITM_CODE_SFX, '**') = NVL(c.itemCodeSfx, '**')
			left join (select AWB_NO, AWB_DATE from imp_car_awb a
				 	  where not exists (select null from BILL_CHARGE_DTL 
					  				   where ITM_CODE like 'SC%'
				 	  				   and awb_no = a.awb_no and awb_date = a.awb_date
									   and status != 'VOID')
						and exists (select null from BILL_CHARGE_DTL 
								   where status = 'PAID' and awb_no = a.awb_no and awb_date = a.awb_date)) chk 
							on chk.awb_no = ica.awb_no and chk.awb_date = ica.awb_date 
			left join (select * 
				 	  from (select s.srf_no, s.awb_no, s.awb_date, s.SRF_EXPY_DATE, s.STATUS
					 	  from imp_srf s 
					 	  left join imp_srf_flt sf on sf.srf_no = s.srf_no 
						  where s.AWB_NO = #awbNo# and s.AWB_DATE = to_date(#awbDate#, 'DDMONYY')
						  order by s.srf_date desc) si
					  where rownum = 1) s 
				on ica.awb_no = s.awb_no and ica.awb_date = s.awb_date 
			where (chamt - nvl(pchrg, 0)) > 0 AND NVL(ic.PAYMENT_MODE, 'Revenue') not in ('No value') 
			and not ((NVL(s.STATUS, '**') = 'ISSUED' and NVL(s.SRF_EXPY_DATE, '01JAN2000') < sysdate and c.itemCode like 'SC%' and nvl(cp.itm_code, chk.awb_no) is not null) 
						  	or (NVL(s.STATUS, '**') = 'ISSUED' and NVL(s.SRF_EXPY_DATE, '01JAN2000') >= sysdate)
							or (a.AWB_CLOSED_YN = 'Y' and NVL(s.STATUS, '**') = 'POSTED'))
		)
		order by itemCode
		]]>)) AS charges,
		
     (SELECT COUNT(1)
	  FROM
	    (SELECT 1
	    FROM EDI_FHL A,EDI_FHL_HAWB B
	    WHERE AWB_NO = #awbNo#
	    AND awb_date = to_date(#awbDate#, 'DDMONYY')
	    AND A.TR_NO=B.TR_NO
	    )) AS fhl,
	    
   (select COUNT(1)
    FROM 
   FW_IMAGE_STORE A
   WHERE     nvl(A.delete_flag,'N') = 'N' and
   EXISTS (SELECT NULL FROM AWB_IMAGE B 
          WHERE B.AWB_IMAGE_NAME = A.IMG_SESSION_ID AND
          B.AWB_NO = #awbNo# AND
          B.AWB_DATE = TO_DATE(#awbDate#,'DDMONYY'))) AS attachment,
               
   (select ( select count(1)
		from EDI_MSG_LOG_OUT LOG_OUT where msg_type='TLX' and  ( AWB_NO=#awbNo# or  AWB_NO_2=#awbNo# or 
			 AWB_NO_3=#awbNo# or  AWB_NO_4=#awbNo# or  AWB_NO_5=#awbNo#)
    )+( select count(1)
		from EDI_MSG_LOG_IN LOG_OUT where msg_type='TLX' and  ( AWB_NO=#awbNo# or  AWB_NO_2=#awbNo# or 
			 AWB_NO_3=#awbNo# or  AWB_NO_4=#awbNo# or  AWB_NO_5=#awbNo#)) from dual) AS telex,
   <!--    (SELECT count(*)
  FROM
      IMP_CAR_AWB B, IMP_CAR_SHP A     
      JOIN FLT_OPR FLT ON 
      FLT.FLT_KEY = A.FLT_KEY AND   
      FLT.SCH_DATE = A.FLT_DATE  
 WHERE
      (A.DAM_PCS > 0 or A.MANIFEST_PCS != A.RECD_PCS or A.MANIFEST_WT != A.RECD_WT   or 
      A.DAM_PROC_USER is not null or A.CIR_PROC_USER is not null) AND 
      A.AWB_DATE = B.AWB_DATE AND  
      A.AWB_NO   = B.AWB_NO   AND
      A.AWB_NO = #awbNo# AND 
      TO_CHAR(A.AWB_DATE, 'DDMONYY') = #awbDate# ) AS cir,-->
      (SELECT COUNT(1) FROM IMP_CAR_SHP WHERE AWB_NO = #awbNo# AND AWB_DATE = #awbDate# AND CIR_PROC_USER IS NOT NULL) AS cir,
      
     (SELECT count(1)
		FROM IMP_CAR_SHP shp
		WHERE 
		shp.AWB_NO = #awbNo# AND 
		shp.AWB_DATE = #awbDate# 
		 AND shp.DOC_DISC in ('FDAW', 'MSAW','FDCN','MSCN'))AS dir,
		 
		(SELECT COUNT(1) FROM TRC_DISC_DTL dtl JOIN TRC_DISC_HD hd ON hd.AWB_No = dtl.AWB_No AND hd.AWB_Date = dtl.AWB_Date and hd.disc_type = 'SSPD'
		   WHERE dtl.AWB_NO = #awbNo#  AND dtl.AWB_DATE = #awbDate#
		)AS ecir,
		
     (SELECT count(1)	   
			FROM IMP_CAR_AWB carawb,
			IMP_CAR_SHP carshp
			LEFT JOIN (SELECT AWB_NO, AWB_DATE, FLT_KEY, FLT_DATE, sum(LOCN_PCS) INV_DAM_PCS, sum(LOCN_WT) INV_DAM_WT		
            FROM 
            AWB_INVENTORY
            WHERE DAM_IND = 'Y'		
            GROUP BY AWB_NO, AWB_DATE, FLT_KEY, FLT_DATE		) I 		   ON carshp.AWB_NO = I.AWB_NO AND			carshp.AWB_DATE = I.AWB_DATE AND			carshp.FLT_KEY = I.FLT_KEY AND			carshp.FLT_DATE = I.FLT_DATE	
            WHERE 
            carshp.awb_no = #awbNo# AND
            carshp.AWB_NO = carawb.AWB_NO AND
            carshp.AWB_DATE = carawb.AWB_DATE AND
            carshp.awb_DATE = TO_DATE(#awbDate#,'DDMONYY') AND	
            (NVL(I.INV_DAM_PCS, 0) > 0 or carshp.DAM_PROC_USER is not null)) AS damage,
            
     (select 
			count(1)
		from 
			CST_CODE_DTL 
		where 
				 AWB_NO= #awbNo# and awb_date=#awbDate#
			 ) AS dc,
       
      <!-- (SELECT COUNT(*) 
   FROM
       EXP_PMANIFEST_AWB
  WHERE
       AWB_NO = #awbNo# AND
       AWB_DATE = #awbDate# ) AS manifest,-->
       
     (select count(1) from v_ffm_dtl where awb_no=#awbNo# and awb_date=#awbDate# ) AS ffm,
     (select count(1) from awb_owner where awb_no=#awbNo# and awb_date=#awbDate#) as owner,
     (SELECT COUNT(1) FROM SPL_CHECK_DATA WHERE NVL(IS_TEMP,'N') = 'Y' AND AWB_NO=#awbNo# AND AWB_DATE=#awbDate#) as tempCount,
     (SELECT COUNT(1) FROM SPL_CHECK_DATA WHERE NVL(IS_TEMP,'N') = 'N' AND AWB_NO=#awbNo# AND AWB_DATE=#awbDate#) as liveAniCount
 FROM
     AWB where AWB_NO = #awbNo#
	</select>
	<select id="FETCH_AWB_ENQIRY_EVENT_COUTN" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO" resultClass="java.lang.String">
	SELECT	count(1)
  		FROM HIS_AWB_EVNT A
  		WHERE A.AWB_NO = #awbNo#
	    		AND A.AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
	    		AND A.MODULE = 'W'
	    		AND A.COD_HIS_TYP = 'E'	    
	</select>
	<select id="FETCH_AWB_ENQIRY_FHL_COUNT" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO" resultClass="java.lang.String">
	SELECT COUNT(*) as fhl
  FROM
     (SELECT SI_TYPE,
             FHL_OWNER,
             MAX(TR_NO)TR_NO 
         FROM 
             EDI_FHL
        WHERE
             AWB_NO = #awbNo# and 
             awb_date = to_date(#awbDate#, 'DDMONYY') 
      GROUP BY SI_TYPE,FHL_OWNER) A,     EDI_FHL_HAWB B
 WHERE
      A.TR_NO=B.TR_NO
	</select>
	
	<!--To Update AWb Enquiry remarks into IMP_CAR_AWB For Import -->
	<update id="updateAWBEnquiryForImport" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO">	
		UPDATE IMP_CAR_AWB
		SET   AWB_RMK = #awbRemark#, 
			  WH_RMK = #whRmk#,
			  LM_USER_ID = #crUserId#, 
			  LM_DATE = sysdate 			 
		WHERE UPPER(AWB_NO) = UPPER(#awbNo#)
		      AND  AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY')	
			  AND LM_DATE = TO_DATE(#lmDate#, 'DDMONYY HH24:MI:SS')
		      
	</update>
	
	<!--To Fetch AWb Enquiry Details For  Export-->
	
	<!-- 
	<select id="fetchAWBEnqExportDetails" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO" resultClass="cargo.cms.awb.bo.AWBEnquiryBO">
		SELECT a.awb_no AS awbno, SUBSTR (a.awb_no, 1, 3) AS awbnopfx,
       		   SUBSTR (a.awb_no, 4) AS awbnosfx,
			   TO_CHAR (a.awb_date, 'DDMONYY') AS awbdate, ec.catalog AS catalog,
			   ec.handler_code AS ecthandler, a.dest AS awbdest,
			   a.orig AS awborigin, a.content AS content,
			   pkg_exp_val.car_spl_codes(a.awb_no,a.awb_date,',')  AS spl,
			   NVL (a.pcs, 0) AS awbpcs,
			   trim(TO_CHAR (NVL (a.wt, 0), '9999999990.00')) AS awbwt,
			   nvl(a.NON_PMAN_PCS,0) AS nonpmanpc,
               trim(TO_CHAR(nvl(a.NON_PMAN_WT,0), '9999999990.00')) AS nonpmanwt,
			   a.carr_code AS carrcode, ec.shpr_name AS shprname,
			   ec.agent_name AS appntdagent, ec.edi_csgne_name AS consignee,
			   a.awb_closed_yn AS awbclosed, a.con_closed_rmk AS awbclosermark,
			   a.AWB_RMK AS awbremark,
			   trim(TO_CHAR (NVL ((SELECT sum(CALC_CHRG)
								FROM bill_charge_dtl
							   WHERE awb_no = #awbNo#
								 AND awb_date = TO_DATE(#awbDate#, 'DDMONYY')
					 and STATUS = 'PENDING'),
							 0
							),
						'999999999990.000'
					   )) AS oscharge
	  FROM exp_car ec, awb a
	  WHERE a.awb_no = ec.awb_no(+)
			AND a.awb_date = ec.awb_date(+)
		    AND a.awb_type = 'E'
		    AND a.awb_no = #awbNo#
		    AND a.awb_date = TO_DATE(#awbDate#, 'DDMONYY')
			 
	</select>
	 -->
	 
	 <!-- Added by Surendra Gollapalli on 9th Dec 11 START for CR -->
	<select id="checkAWBNoExitInAWB" parameterClass="java.util.HashMap" resultClass="java.lang.String" >
		SELECT COUNT(AWB_NO) FROM awb WHERE UPPER(AWB_NO)=UPPER(#awbNo#) and AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY')
	</select>
	
	
	
	<select id="checkWHAWBNoExitInAWB" parameterClass="java.util.HashMap" resultClass="java.lang.String" >
		SELECT COUNT(AWB_NO) FROM 	IMP_CAR_AWB WHERE AWB_NO=#awbNo# and AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY')
	</select>
	
	
	
	
	
	
	<select id="checkCARAWBNoExitInAWB" parameterClass="java.util.HashMap" resultClass="java.lang.String" >
		SELECT COUNT(AWB_NO) FROM IMP_CAR_AWB WHERE AWB_NO=UPPER(#awbNo#) and AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY')
	</select>
	 <update id="updateAWBEnquiryForExportWHRMK" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO">	
		UPDATE awb
		SET AWB_RMK = #whRmk#, 
			  LM_USER_ID = #userID#, 
			  LM_DATE = sysdate,
			  TR_TYPE = 'DUMMY' 			 
		WHERE UPPER(AWB_NO) = UPPER(#awbNo#)
		      AND  AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY')	
		      
	</update>
	 <update id="updateCARAWBEnquiryForImportWHRMK" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO">	
		UPDATE IMP_CAR_AWB
		SET TR_TYPE = 'AWBEQ' ,
			WH_RMK = #whRmk#, 
			  LM_USER_ID = #userID#, 
			  LM_DATE = sysdate 			 
		WHERE UPPER(AWB_NO) = UPPER(#awbNo#)
		      AND  AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY')	
		      
	</update>
	 <update id="updateCARAWBEnquiryForImportAirlineRMK" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO">	
		UPDATE IMP_CAR_AWB
		SET TR_TYPE = 'AWBEQ',
		<isEqual property="whRemarksFlag" compareValue="Y">
			WH_RMK = #whRmk#,
		</isEqual>
		<isEqual property="airlRemarksFlag" compareValue="Y">
			AIRLN_RMK = #airlRmk#,
		</isEqual>  
			  LM_USER_ID = #userID#, 
			  LM_DATE = sysdate 			 
		WHERE UPPER(AWB_NO) = UPPER(#awbNo#)
		      AND  AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY')	
		      
	</update>
	<select id="fetchImpCarShpCarInd" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO" resultClass="java.lang.String" >
	SELECT CAR_CREATED FROM IMP_CAR_SHP WHERE AWB_NO=#awbNo# AND AWB_DATE=#awbDate# AND ROWNUM=1
	</select>
	<insert id="InsertintoAirLineRemarks" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO">
	<![CDATA[
		insert into awb_rmk (TR_TYPE,SEQ_NO, AWB_NO, AWB_DATE, RMK_TYPE, RMK, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE,FLT_TYPE) values
		('AWBEQ',awb_rmk_seq.nextval, #awbNo#,TO_DATE(#awbDate#,'DDMONYY'), 'AWB_AIR_RMK',#airlRmk#,#userID#,sysdate,#userID#,sysdate,#awbType#)
	]]>
	</insert>
	<insert id="InsertintoWHRemarks" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO">
	<![CDATA[
		insert into awb (AWB_NO, AWB_DATE, AWB_TYPE, AWB_RMK, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE) values
		(#awbNo#,TO_DATE(#awbDate#,'DDMONYY'), #awbType#,#whRmk#,#userID#,sysdate,#userID#,sysdate)
	]]>
	</insert>
	
	
		<insert id="InsertintoTranWHRemarks" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO">
	<![CDATA[
		insert into IMP_CAR_AWB (TR_TYPE,AWB_NO, AWB_DATE, AWB_PRFX, WH_RMK, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE) values
		('AWBEQ',#awbNo#,TO_DATE(#awbDate#,'DDMONYY'), #awbNoPFX#,#whRmk#,#userID#,sysdate,#userID#,sysdate)
	]]>
	</insert>
	
	
	
		<insert id="InsertintoCARWHRemarks" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO">
	<![CDATA[
		insert into IMP_CAR_AWB (TR_TYPE,AWB_NO, AWB_DATE, AWB_PRFX, WH_RMK, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE) values
		('AWBEQ',#awbNo#,TO_DATE(#awbDate#,'DDMONYY'), #awbNoPFX#,#whRmk#,#userID#,sysdate,#userID#,sysdate)
	]]>
	</insert>
	<insert id="InsertintoCARAirlineRemarks" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO">
	<![CDATA[
		insert into IMP_CAR_AWB (TR_TYPE,AWB_NO, AWB_DATE, AWB_PRFX, AIRLN_RMK, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE) values
		('AWBEQ',#awbNo#,TO_DATE(#awbDate#,'DDMONYY'), #awbNoPFX#,#airlRmk#,#userID#,sysdate,#userID#,sysdate)
	]]>
	</insert>
	
	<update id="updateAWBEnqForExportAIRLINERMK" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO">	
		UPDATE awb_rmk
		SET tr_type = 'AWBEQ',
				rmk = #airlRmk#, 
			  LM_USER_ID = #userID#, 
			  LM_DATE = sysdate 			 
		WHERE SEQ_NO = #seqNo#		      
	</update>
	<delete id="deleteAWBEnqForExportAIRLINERMK" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO">
		DELETE FROM awb_rmk WHERE SEQ_NO = #seqNo# AND rmk_type='AWB_AIR_RMK'
	</delete>
	
		<update id="updateCARAWBEnqForImportAIRLINERMK" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO">	
		UPDATE awb_rmk
		SET TR_TYPE ='AWBEQ',
			rmk = #airlRmk#, 
			  LM_USER_ID = #userID#, 
			  LM_DATE = sysdate 			 
		WHERE SEQ_NO = #seqNo#		      
	</update>
	<update id="updateEXPCARForExportAIRLINERMK" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO">	
		UPDATE EXP_CAR
		SET tr_type = 'AWBEQ',
			<isEqual property="whRemarksFlag" compareValue="Y">
				wh_rmk = #whRmk#,
			</isEqual>
			<isEqual property="airlRemarksFlag" compareValue="Y">
				airl_rmk = #airlRmk#,
			</isEqual>
			  LM_USER_ID = #userID#, 
			  LM_DATE = sysdate 			 
		WHERE UPPER(AWB_NO) = UPPER(#awbNo#)
		      AND  AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY')		      
	</update>
	<update id="updateEXPCARForExportWHRMK" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO">	
		UPDATE EXP_CAR
		SET tr_type = 'AWBEQ',
				wh_rmk = #whRmk#, 
			  LM_USER_ID = #userID#, 
			  LM_DATE = sysdate 			 
		WHERE UPPER(AWB_NO) = UPPER(#awbNo#)
		      AND  AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY')		      
	</update>
	<update id="updateAWBEnquiryForAirlnRMK" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO">	
		UPDATE awb
		SET AIRLN_RMK = #airlRmk#, 
			  LM_USER_ID = #userID#, 
			  LM_DATE = sysdate 			 
		WHERE UPPER(AWB_NO) = UPPER(#awbNo#)
		      AND  AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY')	
	</update>
	
	<update id="update_AWB_WH_AirlnRMK" parameterClass="map">	
		UPDATE AWB
		SET tr_type = 'AWBENQ',
			<isEqual property="WH_RMK_IND" compareValue="Y">
				AWB_RMK = #WH_RMK#,
			</isEqual>
			<isEqual property="AIRLN_RMK_IND" compareValue="Y">
				AIRLN_RMK = #AIRLN_RMK#,
			</isEqual>
			  LM_USER_ID = #userID#, 
			  LM_DATE = sysdate 			 
		WHERE UPPER(AWB_NO) = UPPER(#AWB_NO#)
		      AND  AWB_DATE = TO_DATE(#AWB_DATE#, 'DDMONYY')		  
		      
	</update>
	
	<update id="updateFBLEXPCARForExportAIRLINERMK" parameterClass="map">	
		UPDATE EXP_CAR
		SET tr_type = 'AWBEQ',
			<isEqual property="WH_RMK_IND" compareValue="Y">
				wh_rmk = #WH_RMK#,
			</isEqual>
			<isEqual property="AIRLN_RMK_IND" compareValue="Y">
				airl_rmk = #AIRLN_RMK#,
			</isEqual>
			  LM_USER_ID = #userID#, 
			  LM_DATE = sysdate 			 
		WHERE UPPER(AWB_NO) = UPPER(#AWB_NO#)
		      AND  AWB_DATE = TO_DATE(#AWB_DATE#, 'DDMONYY')		      
	</update>
	
	<!-- Added by Surendra Gollapalli on 9th Dec 11 END for CR -->
	<select id="fetchAWBEnqExportDetails" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO" resultClass="cargo.cms.awb.bo.AWBEnquiryBO">
	
	SELECT 
		A.AWB_NO AS awbNo,
		SUBSTR( A.AWB_NO,1,3 ) AS awbNoPFX,
		SUBSTR( A.AWB_NO,4 ) AS awbNoSFX,
		A.AWB_TYPE AS awbType, 
		decode(A.CATALOG,'',CA.CATALOG,A.CATALOG) AS catalog,
		(SELECT 
			  (CASE WHEN decode(a.catalog,'EG','C','ES','C','IG','C','TG','C','TA','C','EU','M','TM','M','EO','Q','IO','Q','C') = 'C' THEN 
			  (CASE WHEN (SELECT COUNT(1) FROM CUST_AIRL_SPL_CODE SPLCODE WHERE SPLCODE.SPL_TYPE='SPL_COURIER_SHC' AND SPLCODE.CARR_CODE = A.CARR_CODE AND (SPLCODE.SPL_CODE = a.SPL_CODE1 OR SPLCODE.SPL_CODE = a.SPL_CODE2 OR SPLCODE.SPL_CODE = a.SPL_CODE3 OR SPLCODE.SPL_CODE = a.SPL_CODE4 OR SPLCODE.SPL_CODE = a.SPL_CODE5 OR SPLCODE.SPL_CODE = a.SPL_CODE6 OR SPLCODE.SPL_CODE = a.SPL_CODE7 OR SPLCODE.SPL_CODE = a.SPL_CODE8 OR SPLCODE.SPL_CODE = a.SPL_CODE9)) > 0
			  THEN 'Q' ELSE decode(a.catalog,'EG','C','ES','C','IG','C','TG','C','TA','C','EU','M','TM','M','EO','Q','IO','Q','C') END)
			  ELSE decode(a.catalog,'EG','C','ES','C','IG','C','TG','C','TA','C','EU','M','TM','M','EO','Q','IO','Q','C') END) as cargoType	  
		FROM AWB  A WHERE  A.AWB_NO = #awbNo# AND A.AWB_DATE = #awbDate#) as cargoType,
        NVL(A.EXP_AWB_LOCK,'N') AS lockYN,
        decode(A.PCS,'','0',A.PCS) AS awbPcs, 
		trim(TO_CHAR(NVL(A.WT,0),'9999990.00')) AS awbWt,
		(SELECT NVL(OW.PCS,0)||'/'||NVL(OW.WT,0) FROM AWB_OWNER OW WHERE OW.AWB_NO = A.AWB_NO AND OW.AWB_DATE = A.AWB_DATE AND OW.CARR_CODE = A.CARR_CODE) carrPcWt,
		A.CARR_CODE AS carrCode,
 	    PKG_CST_DC.awb_enq_licenses_count(#awbNo#,#awbDate#)  AS licence,
            A.CAR_YN AS carYN,
            (SELECT STRAGG(STRINGDELIM(COD_FSU_STS, ',')) FROM (SELECT  DISTINCT COD_FSU_STS FROM AWB_SHP_STS WHERE AWB_DATE=#awbDate# AND AWB_NO=#awbNo#)) AS status,
            TO_CHAR( A.AWB_DATE, 'DDMONYY') AS awbDate,  
            CA.AGENT_CODE AS agentCode,
            decode(CA.SPL_CODE1,'',A.SPL_CODE1,CA.SPL_CODE1) AS splCode1,
            decode(CA.SPL_CODE2,'',A.SPL_CODE2,CA.SPL_CODE2) AS splCode2,
            decode(CA.SPL_CODE3,'',A.SPL_CODE3,CA.SPL_CODE3) AS splCode3,
            decode(CA.SPL_CODE4,'',A.SPL_CODE4,CA.SPL_CODE4) AS splCode4,
            decode(CA.SPL_CODE5,'',A.SPL_CODE5,CA.SPL_CODE5) AS splCode5,
            decode(CA.SPL_CODE6,'',A.SPL_CODE6,CA.SPL_CODE6) AS splCode6,
            decode(CA.SPL_CODE7,'',A.SPL_CODE7,CA.SPL_CODE7) AS splCode7,
            decode(CA.SPL_CODE8,'',A.SPL_CODE8,CA.SPL_CODE8) AS splCode8,
            decode(A.SPL_CODE9,'','',A.SPL_CODE9) AS splCode9,
            CA.SPL_CODE9 AS splCode9,
            (SELECT COUNT(*) FROM CUST_AIRL_SPL_CODE WHERE SPL_CODE=A.SPL_CODE1 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=A.SPL_CODE2 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=A.SPL_CODE3 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=A.SPL_CODE4 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=A.SPL_CODE5 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=A.SPL_CODE6 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=A.SPL_CODE7 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=A.SPL_CODE8 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=A.SPL_CODE9 AND SPL_TYPE='SPL_VAL') AS shpStatus, 
            '' AS schCollInd,
            '' AS docDlv,
            A.ORIG AS awbOrigin, 
            (SELECT SUM(CHRG_AMT) FROM BILL_CHARGE_DTL WHERE AWB_NO = #awbNo# AND AWB_DATE=#awbDate#) AS osCharge,
            '' AS allowPacco,
            '' AS docChkReq,
            A.DEST AS awbDest,
            A.EXPCAR_YN AS intelligentChk, 
            (select case when (select dut_commodity from exp_rcl_hd where awb_no=#awbNo# and awb_date=#awbDate# AND ROWNUM=1) = 'Y' then 'Y'
             else case when (select (select count(*) from cst_dc_dtl where awb_no=#awbNo#) + (select count(*) from cst_code_dtl where awb_no=#awbNo#) as result from dual) > 0
             then 'Y'
             else 'N'
             end
             end
             from dual) AS dcLock,
            '' AS docChkComp,
		    A.CONTENT AS content, 
            A.AWB_CLOSED_YN AS awbClosed,
            (SELECT COUNT(*) FROM CUST_UNDERTAKING CU WHERE 
                               CU.AGENT_CODE = (SELECT AGENT_CODE FROM AWB WHERE AWB_DATE=#awbDate# AND AWB_NO=#awbNo#) AND 
                               CU.CARR_CODE = (SELECT CARR_CODE FROM AWB WHERE AWB_DATE=#awbDate# AND AWB_NO=#awbNo#) AND 
                               CA.AWB_DATE BETWEEN CU.EFF_FROM AND CU.EFF_TO) AS licenceUnder, 
           (SELECT cc_code FROM V_CST_VSL_CC_CODE_AWB WHERE AWB_NO=#awbNo# AND AWB_DATE = #awbDate# and NVL(hawb_no, '000000000000000000') = '000000000000000000' and ROWNUM = 1) stfsCode,           
            '' AS noaSent,
            (select DECODE(count(recd.awb_no),1,'Y','N') from exp_doc_recd recd where
                recd.awb_no=#awbNo# and recd.awb_date=#awbDate# and awb_frz_yn='Y') AS docRecieve,
            (SELECT cc_code FROM (SELECT t1.cc_code FROM v_cst_cc_code_ALL t1,mast_constraint_code t2 WHERE t1.cc_code = t2.code AND 
            	awb_no = #awbNo# AND NVL(hawb_no, '000000000000000000') = '000000000000000000'  AND AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY')
            	and t1.flt_key not like 'NB%' ORDER BY recv_date DESC, priority DESC) where rownum = 1) AS latestCc,
      (DECODE((select count(1) from EXP_CAR where awb_no = #awbNo# and awb_date=#awbDate# AND TRIM(AIRL_RMK) IS NOT NULL and rownum=1),0,
      (DECODE((select rmk from awb_rmk where awb_no=#awbNo# and rownum=1),NULL,A.AIRLN_RMK,(select rmk from awb_rmk where awb_no=#awbNo# and rownum=1))),DECODE(CA.AIRL_RMK,NULL,A.AIRLN_RMK,CA.AIRL_RMK))) AS airlRmk,
			(DECODE((select count(1) from EXP_CAR where awb_no = #awbNo# and awb_date=#awbDate# AND TRIM(AIRL_RMK) IS NOT NULL and rownum=1),0,
      (DECODE((select rmk from awb_rmk where awb_no=#awbNo# and rownum=1),NULL,A.AIRLN_RMK,(select rmk from awb_rmk where awb_no=#awbNo# and rownum=1))),DECODE(CA.AIRL_RMK,NULL,A.AIRLN_RMK,CA.AIRL_RMK))) AS oldAirlRmk,
            (select SEQ_NO from awb_rmk where awb_no=#awbNo# and rownum=1) AS seqNo,            
            (select flt_key from awb_rmk where awb_no=#awbNo# and rownum=1) AS fltKey,
            (DECODE((select count(1) from EXP_CAR where awb_no = #awbNo# and awb_date=#awbDate# and rownum=1),0,a.AWB_RMK,CA.WH_RMK)) AS whRmk,
			(DECODE((select count(1) from EXP_CAR where awb_no = #awbNo# and awb_date=#awbDate# and rownum=1),0,a.AWB_RMK,CA.WH_RMK)) AS oldWHRmk,
            EPA.MAN_RMK AS manRmk,
            (select DECODE(CONFIRMED_RMK,NULL,RMK,CONFIRMED_RMK) from exp_offload_uld_awb where awb_no=#awbNo# and awb_date=#awbDate# and (confirmed_rmk is not null OR RMK IS NOT NULL) AND ROWNUM=1) AS offloadRmk,
		    CA.CSGNE_NAME as consignee,
            CA.CSGNE_ADDR AS consigneAddr,
            CA.CSGNE_ADDR2 AS consigneAddr2,
            CA.CSGNE_ADDR3 AS consigneAddr3,
            CA.CSGNE_ADDR4 AS consigneAddr4,
            decode(CA.CSGNE_PLACE,'','Hong Kong',CA.CSGNE_PLACE) as consCity,
	        decode(CA.CSGNE_CTRY_CODE,'',(select code_desc from mast_country mcntr where mcntr.code = 'HK'),(select code_desc from mast_country mcntr1 where mcntr1.code = CA.CSGNE_CTRY_CODE)) as consCountry,
            CA.SHPR_NAME AS shipperName,
            CA.SHPR_ADDR AS shipperAddr1,
            CA.SHPR_ADDR2 AS shipperAddr2,
            CA.SHPR_ADDR3 AS shipperAddr3,
            CA.SHPR_ADDR4 AS shipperAddr4,        
            decode(CA.SHPR_CTRY_CODE,'',(select code_desc from mast_country mcntr where mcntr.code = 'HK'),(select code_desc from mast_country mcntr1 where mcntr1.code = CA.SHPR_CTRY_CODE)) as shprCountry,
	        decode(CA.SHPR_PLACE,'','Hong Kong',CA.SHPR_PLACE) as shprCity,
            CA.AGENT_NAME AS appiontedAgent,
	        CA.EDI_AGENT_ADDR_1 AS agentAddr,
	        CA.EDI_AGENT_ADDR_2 AS agentAddr1,
	        CA.EDI_AGENT_ADDR_3 AS agentAddr2,
	        CA.EDI_AGENT_ADDR_4 AS agentAddr3,
	        CA.EDI_AGENT_ADDR_5 AS agentAddr4,
	        DECODE(A.INT_YN,'N','N',DECODE(A.AMD_YN,'N','N',DECODE(A.EXPCAR_YN,'N','N',DECODE(A.LBS_YN,'N','N',DECODE(A.DOCACC_YN,'N','N',DECODE(A.LPPS_YN,'N','N','Y')))))) AS intStatus,
	        (select count(*) from awb A,EXP_PMANIFEST_AWB B where B.AWB_NO = A.AWB_NO AND B.AWB_DATE = A.AWB_DATE AND A.CAR_YN='Y' AND A.pcs > B.pman_pcs AND A.AWB_NO =#awbNo# AND A.AWB_DATE=#awbDate#) AS partShipment, 
	        decode(A.DOCACC_USER,'',(decode(A.DOCACC_DATE,'','N','Y')),'Y') AS docAccept,
	        (select decode((select count(awb_no) from cust_interaction where awb_no = #awbNo# and rownum=1),'1',(decode((select count(awb_no) from cust_interaction where awb_no=#awbNo# and comp_date is null and rownum=1),'1','Y','N')),'N') from dual) AS pendingAction,
	        ((select AWB_IMAGE_NAME FROM AWB_IMAGE WHERE seq_no = (SELECT MAX(SEQ_NO) FROM AWB_IMAGE WHERE AWB_NO = #awbNo# AND AWB_DATE = #awbDate#) )) AS transactionId,
	        DECODE(AI.AWB_IMAGE_NAME,'','Y','N') AS attachmentStatus,
			TO_CHAR(CA.LM_DATE, 'DDMONYY HH24:MI:SS') AS lmDate,
			CA.HLDG_PERIOD as holdingPeriod,
			CA.SHPR_STATE_PROVINCE shipperState,
			CA.CSGNE_STATE_PROVINCE consigneeState,
			A.TSA_PASS_IND as tsaPassInd,
		    A.CARR_RA as carrierRaInd,
		    nvl(A.BSB_IND,'NA') as bsbInd, 
                     nvl(CA.CCA_YN,'N') as ccaInd       
	    FROM 
		   AWB A,
		   EXP_CAR CA,
		   AWB_IMAGE AI,
		   EXP_PMANIFEST_AWB EPA,
          CUST_COMPANY CCC 
      WHERE
       CA.AWB_NO(+) = A.AWB_NO AND
       CA.AWB_DATE(+) = A.AWB_DATE  AND
       EPA.AWB_NO(+) = A.AWB_NO AND
       EPA.AWB_DATE(+) = A.AWB_DATE AND
      CCC.CODE(+) = CA.AGENT_CODE AND
       AI.AWB_NO(+) = A.AWB_NO AND
       AI.AWB_DATE(+) = A.AWB_DATE AND
       A.AWB_NO = #awbNo# AND
       A.AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY')
    </select>
	
	
	<parameterMap id="awbExpMap" class="map" >
		<parameter property="AWBNO" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="AWBDATE" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
	</parameterMap>
	<procedure id="callAWBEnqExpManDtlPrc" parameterMap="awbExpMap" >
		{ call pkg_exp_rpt.get_exp_man_info(?,?) }
	</procedure>
	
	
	<!--To Fetch AWb Enquiry Manifest Details For Export -->
	<select id="fetchAWBEnqExportManifestDetails"  resultClass="cargo.cms.awb.bo.AWBEnquiryManifestBO">
		select SNO as condition,
			   a.FLT_KEY as fltkey,
			   to_char(FLT_DATE,'DDMONYY') as fltdate,
			   ETD as ata,
			   UNLDG_PT as unloadpt,
			   nvl(PMAN_PCS, 0) as manifestpcs,
			   trim(to_char(nvl(PMAN_WT, 0), '99999999990.00')) as manifestwt,
			   nvl(ASSIGNED_PCS, 0) as assignpcs,
			   trim(to_char(nvl(ASSIGNED_WT,0), '99999999990.00')) as assignwt,
			   nvl(OFFLOAD_PCS, 0) as offloadpcs,
			   trim(to_char(nvl(OFFLOAD_WT, 0), '9999999990.00')) as offloadwt,
			   a.FLT_NO as fltno,
			   a.CARR_CODE as carrcode,
			   FLT_TR_NO as trno,
			   CC_CODE as costraintcode
		from gt_exp_awb_man a	
		left join flt_opr b on a.FLT_KEY = b.FLT_KEY  and a.FLT_DATE = b.SCH_DATE and b.FLT_TYPE = 'D'
		Order by  b.SCH_DATE , b.SCH_TIME
	</select>
	<select id="fetchWareHouseRemark" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO" resultClass="java.lang.String">
	 	(select * from  (select (DECODE((select count(1) from imp_car_awb where awb_no = #awbNo# and awb_date=#awbDate# and rownum=1),0,a.AWB_RMK,(select WH_RMK from imp_car_awb where awb_no =#awbNo# and awb_date=#awbDate# and rownum=1))) AS whRmk
 		 from AWB a where awb_no=#awbNo# and awb_date =#awbDate#
 		 UNION
 		 select (DECODE((select count(1) from EXP_CAR where awb_no = #awbNo# and awb_date=#awbDate# and rownum=1),0,a.AWB_RMK,(select WH_RMK from EXP_CAR where awb_no = #awbNo# and awb_date=#awbDate# and rownum=1)))AS whRmk
 		  from AWB a where awb_no=#awbNo# and awb_date =#awbDate#) where rownum=1)
	</select>
	<!--To Fetch AWb Enquiry RCL Details For Export -->
	<select id="fetchAWBEnqExportRCLDetails" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO" resultClass="cargo.cms.awb.bo.AWBEnquiryRCLBO">
	SELECT     
		    EH.RCL_NO AS rclNo, EH.VCL_NO AS vclno, TO_CHAR(rcl_date,'DDMONYY HH24:MI') as issueDate,TO_CHAR(VOID_DATE,'DDMONYY HH24:MI') as voidDate,EH.AWB_NO as rclAwbNo,TO_CHAR(EH.AWB_DATE,'DDMONYY') as rclAwbDate,DECODE(EH.VCL_NO,null,'RCL','VCL') AS rclVclInd,
           (select code_desc from mast_code_dtl where code_type='PPK_TYPE' and code=EH.PPK_TYPE) AS pkgType,
           EH.ACCPT_MODE  AS amType,
           EH.TRANS_CARR_CODE AS transCarr,
		   NVL(EH.RCL_PCS,0) AS rclPcs,	
		   trim(TO_CHAR(NVL(EH.RCL_WT,0),'9999990D99')) AS rclWt,	
		   trim(TO_CHAR(NVL((select sum((LENGTH*WIDTH*HEIGHT*pcs)/1000000) from EXP_RCL_DMN where rcl_no = EH.RCL_NO),0),'99999999999999990.00')) AS valueAmt,
		   ( select hawb_no from exp_rcl_hawb where rcl_no = EH.RCL_NO and rownum = 1) as hawb,
		   NVL(EH.RTN_PCS,0) AS retPcs,		
		   DECODE(EH.RTN_IND,'Y',trim(TO_CHAR(NVL(EH.RTN_WT,0),'9999990D99')),'N','0.0') AS retWt,	 
		   (select code_desc from mast_code_dtl where code_type='RCL_STATUS' and code=EH.STATUS) AS status,
       CASE
    WHEN (EH.PPK_TYPE = 'B'
    OR EH.PPK_TYPE    = 'P')
    THEN DECODE(
      (SELECT COUNT(Rcl_No) FROM Exp_Rcl_Sec_Chk_Dtl WHERE Rcl_No=EH.Rcl_No
      ),0,'N','Y')
    ELSE
      CASE
        WHEN (SELECT COUNT(1)
          FROM EXP_RCL_BRKDN
          WHERE RCL_NO  = EH.Rcl_No
          AND SEC_CHECK = 'Y') = 0
        THEN 'N'
        ELSE DECODE(
          (SELECT COUNT(1) FROM Exp_Rcl_Brkdn WHERE Rcl_No = EH.Rcl_No
          AND Sec_Check                                    = 'Y'
          AND (Awb_No,Awb_Date) NOT                       IN
            (SELECT DISTINCT Awb_No,
              Awb_Date
            FROM Exp_Rcl_Sec_Chk_Dtl
            WHERE Rcl_No = EH.Rcl_No
            )
          ),0,'Y','N')
      END
  END         AS secEntrd,
  EH.SEC_CHECK AS secreqrd
		FROM  EXP_RCL_HD EH
		WHERE    EH.PPK_TYPE IN ('P','B') 
				 AND  EH.AWB_NO = #awbNo# 
		         AND EH.AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY')
		UNION ALL		 
		SELECT	   
		    EH.RCL_NO AS rclNo, EH.VCL_NO AS vclno, TO_CHAR(rcl_date,'DDMONYY HH24:MI') as issueDate,TO_CHAR(VOID_DATE,'DDMONYY HH24:MI') as voidDate,BRK.AWB_NO as rclAwbNo,TO_CHAR(BRK.AWB_DATE,'DDMONYY') as rclAwbDate,DECODE(EH.VCL_NO,null,'RCL','VCL') AS rclVclInd,
           (select code_desc from mast_code_dtl where code_type='PPK_TYPE' and code=EH.PPK_TYPE) AS pkgType,
           EH.ACCPT_MODE  AS amType,
           EH.TRANS_CARR_CODE AS transCarr,
		   NVL(BRK.PCS,0) AS rclPcs,	
		   trim(TO_CHAR(NVL(BRK.WEIGHT,0),'999999999990.00')) AS rclWt,	
		   '0.00' AS valueAmt,
		   ( select hawb_no from exp_rcl_hawb where rcl_no = EH.RCL_NO and rownum = 1) as hawb,
		   DECODE(EH.RTN_IND,'Y',NVL(BRK.PCS,0),'N','0.') AS retPcs,		
		   DECODE(EH.RTN_IND,'Y',trim(TO_CHAR(NVL(BRK.WEIGHT,0),'999999999990.00')),'N','0.0') AS retWt,	 
		   (select code_desc from mast_code_dtl where code_type='RCL_STATUS' and code=EH.STATUS) AS status,
       CASE
    WHEN (EH.PPK_TYPE = 'B'
    OR EH.PPK_TYPE    = 'P')
    THEN DECODE(
      (SELECT COUNT(Rcl_No) FROM Exp_Rcl_Sec_Chk_Dtl WHERE Rcl_No=EH.Rcl_No
      ),0,'N','Y')
    ELSE
      CASE
        WHEN (SELECT COUNT(1)
          FROM EXP_RCL_BRKDN
          WHERE RCL_NO  = EH.Rcl_No
          AND SEC_CHECK = 'Y') = 0
        THEN 'N'
        ELSE DECODE(
          (SELECT COUNT(1) FROM Exp_Rcl_Brkdn WHERE Rcl_No = EH.Rcl_No
          AND Sec_Check                                    = 'Y'
          AND (Awb_No,Awb_Date) NOT                       IN
            (SELECT DISTINCT Awb_No,
              Awb_Date
            FROM Exp_Rcl_Sec_Chk_Dtl
            WHERE Rcl_No = EH.Rcl_No
            )
          ),0,'Y','N')
      END
  END         AS secEntrd,
  EH.SEC_CHECK AS secreqrd
	 FROM EXP_RCL_HD EH, EXP_RCL_BRKDN BRK
	 WHERE EH.RCL_NO = BRK.RCL_NO  AND EH.PPK_TYPE = 'M'  
           AND BRK.AWB_NO = #awbNo# 
		   AND BRK.AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY')
	 order by 2 desc	
	</select>
	
	<!--To Update AWb Enquiry remarks into EXP_CAR For Export -->
	<update id="updateAWBEnquiryForExport" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO">	
		UPDATE EXP_CAR
		SET RMK = #awbRemark#, 
			  LM_USER_ID = #crUserId#, 
			  LM_DATE = sysdate 			 
		WHERE UPPER(AWB_NO) = UPPER(#awbNo#)
		      AND  AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY')	
		      
	</update>
	
	<update id="updateAWBEnquiryForExportAWB" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO">	
		update awb t 
		set awb_rmk = #awbRemark#,
		LM_USER_ID = #crUserId#, 
		LM_DATE = sysdate 			 
		where awb_no = #awbNo# and awb_type = 'E' and awb_date = TO_DATE(#awbDate#, 'DDMONYY')	
		and not exists (select null from exp_car where awb_no = t.awb_no and awb_date = t.awb_date)
	</update>

	<!--To Fetch AWb Enquiry Details For Export For FBL(If FBL created) -->
		<select id="fetchAWBEnqExportDetailsForFBL" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO" resultClass="cargo.cms.awb.bo.AWBEnquiryBO">
	
	<!-- 
		SELECT 	A.AWB_NO AS awbNo,
				SUBSTR( A.AWB_NO,1,3 ) AS awbNoPFX,
				SUBSTR( A.AWB_NO,4 ) as awbNoSFX,
				TO_CHAR( A.CR_DATE, 'DDMONYY') AS awbDate, 
				'' AS catalog, 
				'' AS ectHandler, 	 
				A.DEST AS awbDest, 
				A.ORG AS awbOrigin, 
				A.CNT AS content, 
				A.SPL_CODE1||DECODE(A.SPL_CODE1 ,null,'',',')||A.SPL_CODE2||DECODE(A.SPL_CODE2 ,null,'',',')||A.SPL_CODE3||DECODE(A.SPL_CODE3 ,null,'',',')||A.SPL_CODE4||DECODE(A.SPL_CODE4 ,null,'',',')||
				A.SPL_CODE5||DECODE(A.SPL_CODE5 ,null,'',',')||A.SPL_CODE6||DECODE(A.SPL_CODE6 ,null,'',',')||A.SPL_CODE7||DECODE(A.SPL_CODE7 ,null,'',',')||
				A.SPL_CODE8||DECODE(A.SPL_CODE8 ,null,'',',') AS spl,	   
				NVL(A.PCS,0) AS awbPcs, 
				trim(TO_CHAR(NVL(A.NET_WT,0),'999999999990.00')) AS awbWt, 
				'0' AS nonPmanPc, 	 
				'0.0' AS nonPmanWt,
				B.CARR_CODE AS carrCode,			
				'' AS shprName, 
				'' AS appntdAgent, 
				'' as consignee,  
				'' AS awbClosed, 
				'' AS awbCloseRmark, 
				'' AS awbRemark,
				'0.0' AS osCharge	
		FROM EDI_FBL_SHP A, EDI_FBL B
		WHERE	 A.TR_NO 	= B.TR_NO
		AND 	 A.AWB_NO 	=  #awbNo# 
		
		 -->
		 
		 SELECT 
			'' AS shprName, 
 			'' AS appntdAgent, 
 			'' AS awbCloseRmark, 
 			'' AS oldAwbRemark,
		    A.AWB_NO AS awbNo,
		    SUBSTR( A.AWB_NO,1,3 ) AS awbNoPFX,
		    SUBSTR( A.AWB_NO,4 ) as awbNoSFX,
		    decode(A.ORG,'HKG','E','T') AS awbType, 
			'' AS catalog,
            '' AS lockYN,
            NVL(A.PCS,0) AS awbPcs, 
            trim(TO_CHAR(NVL(A.NET_WT,0),'999999999990.00')) AS awbWt, 			
 			B.CARR_CODE AS carrCode,
            '' AS licence,
            '' AS carYN,
            (SELECT COD_FSU_STS FROM AWB_SHP_STS WHERE AWB_DATE=#awbDate# AND AWB_NO=#awbNo# AND ROWNUM=1) AS status,
            TO_CHAR( A.AWB_DATE, 'DDMONYY') AS awbDate,  
            '' AS intelligentChk,
            '' AS agentCode,
            A.SPL_CODE1 AS splCode1,
            A.SPL_CODE2 AS splCode2,
            A.SPL_CODE3 AS splCode3,
            A.SPL_CODE4 AS splCode4,
            A.SPL_CODE5 AS splCode5,
            A.SPL_CODE6 AS splCode6,
            A.SPL_CODE7 AS splCode7,
            A.SPL_CODE8 AS splCode8,
            A.SPL_CODE9 AS splCode9,
            '' AS schCollInd,
            '' AS docDlv,
            A.ORG AS awbOrigin, 
		    (SELECT SUM(CHRG_AMT) FROM BILL_CHARGE_DTL WHERE AWB_NO = #awbNo# AND AWB_DATE=#awbDate#) AS osCharge,
            '' AS allowPacco,
            '' AS docChkReq,
            A.DEST AS awbDest, 
            '' AS dcLock,
            '' AS docChkComp,
	        A.CNT AS content, 
     	    '' AS awbClosed,
            '' AS licenceUnder,  
            '' AS noaSent,
            '' AS docRecieve,
            '' AS latestCc,
            '' AS awbRemark,
            '' AS airlRmk,
            '' AS manRmk,
            '' AS offloadRmk,
			'' as consignee,
		    '' AS consigneAddr,
		    '' AS consigneAddr1,
		    '' AS consigneAddr2,
		    '' AS consigneAddr3,
		    '' AS consigneAddr4,
		    '' AS consigneAddr5,
	        '' AS shipperName,
	        '' AS shipperAddr,
	        '' AS shipperAddr1,
	        '' AS shipperAddr2,
	        '' AS shipperAddr3,
	        '' AS appiontedAgent,
		    '' AS agentAddr,
		    '' AS agentAddr1,
		    '' AS agentAddr2,
		    '' AS agentAddr3,
		    '' AS agentAddr4,
	        A.PART_SHMPT_YN AS partShipment,
			A.LM_DATE AS lmDate,
			(select SEQ_NO from awb_rmk where awb_no=#awbNo# and rownum=1) AS seqNo 
	  FROM 
			EDI_FBL_SHP A, EDI_FBL B
   WHERE
       A.TR_NO 	= B.TR_NO
		AND 	 A.AWB_NO 	=  #awbNo#  and B.FBL_STATUS = 'P' and A.tr_no = (SELECT MAX(SHP.tr_no) FROM EDI_FBL_SHP SHP,EDI_FBL B WHERE B.TR_NO = SHP.TR_NO AND SHP.AWB_NO = #awbNo# AND B.FBL_STATUS='P')
	</select>
	
	<!--To Check AWB No is exist or not For FBL-->
	<select id="checkAWBNoForFBL" parameterClass="java.lang.String" resultClass="java.lang.Integer" >
		SELECT COUNT(AWB_NO) FROM EDI_FBL_SHP WHERE UPPER(AWB_NO)=UPPER(#PARAM#)
	</select>
	<select id="checkAWBNoForPouch" parameterClass="java.lang.String" resultClass="java.lang.Integer" >
		SELECT COUNT(AWB_NO) FROM AWB_POUCH WHERE UPPER(AWB_NO)=UPPER(#PARAM#)
	</select>
	<select id="checkAWBNoForRemarks" parameterClass="java.lang.String" resultClass="java.lang.Integer" >
		SELECT COUNT(AWB_NO) FROM AWB_RMK WHERE UPPER(AWB_NO)=UPPER(#PARAM#)
	</select>
	
	<select id="fetchUnlockByAWB" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO" resultClass="cargo.cms.awb.bo.AWBEnquiryBO">
                         SELECT DISTINCT
                                        A.AWB_NO AS awbNo,
                                        A.AWB_DATE AS awbDate,                                        
                                        A.ULD_KEY AS uldNo,   
                                        U.LOCKED AS uldStatus,
                                        U.LOCK_RQS AS uldReq,
                                        L.LOCK_RQS AS lspReq,                                        
                                        A.LSP_NO AS lspNo,     
                                        L.LOCKED AS lspStatus,   
                                        W.CC_CODE AS latestCc,   
                                        TO_CHAR(U.LM_DATE , 'DDMONYY HH24:MI:SS') AS uldLmDate,
                                        TO_CHAR(L.LM_DATE , 'DDMONYY HH24:MI:SS') AS lspLmDate,
                                        (W.SPL_CODE1 || DECODE(W.SPL_CODE2 ,null,'',DECODE(W.SPL_CODE1,NULL,'',',')) ||
                                         W.SPL_CODE2 || DECODE(W.SPL_CODE3 ,null,'',DECODE(W.SPL_CODE2,NULL,'',',')) || 
                                         W.SPL_CODE3 || DECODE(W.SPL_CODE4 ,null,'',DECODE(W.SPL_CODE3,NULL,'',',')) || 
                                         W.SPL_CODE4 || DECODE(W.SPL_CODE5 ,null,'',DECODE(W.SPL_CODE4,NULL,'',',')) || 
                                         W.SPL_CODE5 || DECODE(W.SPL_CODE6 ,null,'',DECODE(W.SPL_CODE5,NULL,'',',')) ||   
                                         W.SPL_CODE6 || DECODE(W.SPL_CODE7 ,null,'',DECODE(W.SPL_CODE6,NULL,'',',')) || 
                                         W.SPL_CODE7 || DECODE(W.SPL_CODE8 ,null,'',DECODE(W.SPL_CODE7,NULL,'',',')) ||  
                                         W.SPL_CODE8 || DECODE(W.SPL_CODE9 ,null,'',DECODE(W.SPL_CODE8,NULL,'',',')) ||  
                                         W.SPL_CODE9) AS shc   
                                        FROM
                                        AWB_INVENTORY A INNER JOIN AWB W ON A.AWB_NO = W.AWB_NO AND A.AWB_DATE = W.AWB_DATE
                                        LEFT OUTER JOIN ULD_INVENTORY U ON A.ULD_KEY = U.ULD_KEY 
                                        LEFT OUTER JOIN LSP_INVENTORY L ON A.LSP_NO = L.LSP_NO
                                        WHERE                                                                          
                                        A.AWB_NO = #awbNo# AND A.AWB_DATE = #awbDate#
                                        AND (A.ULD_KEY IS NOT NULL OR  A.LSP_NO IS NOT NULL)
                                        ORDER BY uldNo       
            
   </select>
<!--   Added for Bug 2713-->
   <select id='lockunlockAWB' parameterClass="java.lang.String" resultClass="java.lang.String">
   		select cc_code from V_CST_CC_CODE_AWB 
		where awb_no=#awbNo# and rownum=1 
		order by lm_date desc
   </select>
   
   <select id="fetchTelexInMsg" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO" resultClass="cargo.cms.awb.bo.awbEnquiryTelexBO">
       SELECT
      (SELECT STRAGG(STRINGDELIM(RECIPIENT,' , ')) FROM EDI_MSG_RECIPIENT_IN WHERE MSG_ID = LOG_IN.MSG_ID) AS address,
      LOG_IN.flt_key AS inFltNo,
      to_char(LOG_IN.flt_date,'DDMONYY') AS inFltDate,
      LOG_IN.MSG_TITLE AS subject,
      LOG_IN.awb_no AS awbNo,
      LOG_IN.attention AS attention,
      LOG_IN.copy AS copy,
      LOG_IN.SENDER_ID AS senderId,
      to_char(LOG_IN.ATTACH_DATE,'DDMONYY') AS inAttachDate,
      LOG_IN.MSG AS inMsg
      FROM
      EDI_MSG_LOG_IN LOG_IN where 
      (LOG_IN.AWB_NO = #awbNo# OR LOG_IN.AWB_NO_2 =#awbNo# OR LOG_IN.AWB_NO_3 =#awbNo# OR LOG_IN.AWB_NO_4 =#awbNo# OR LOG_IN.AWB_NO_5 =#awbNo#) and rownum=1
    </select>
    
    <select id="fetchTelexOutMsg" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO" resultClass="cargo.cms.awb.bo.awbEnquiryTelexBO">
    SELECT
      (SELECT STRAGG(STRINGDELIM(RECIPIENT,' , ')) FROM EDI_MSG_RECIPIENT_OUT WHERE MSG_ID = LOG_OUT.MSG_ID) AS address,
      LOG_OUT.flt_key AS outFltNo,
      to_char(LOG_OUT.flt_date,'DDMONYY') AS outFltDate,
      LOG_OUT.MSG_TITLE AS subject,
      LOG_OUT.awb_no AS awbNo,
      LOG_OUT.attention AS attention,
      LOG_OUT.copy AS copy,
      LOG_OUT.SENDER_ID AS senderId,
      to_char(LOG_OUT.ATTACH_DATE,'DDMONYY') AS outAttachDate,
      LOG_OUT.MSG AS outMsg
      FROM
      EDI_MSG_LOG_OUT LOG_OUT 
      where 
      (LOG_OUT.AWB_NO = #awbNo# OR LOG_OUT.AWB_NO_2 =#awbNo# OR LOG_OUT.AWB_NO_3 =#awbNo# OR LOG_OUT.AWB_NO_4 =#awbNo# OR LOG_OUT.AWB_NO_5 =#awbNo#) and rownum=1
    </select>
	
	
	<update id="updateUldStatus" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO">
		UPDATE 
		      ULD_INVENTORY
		   SET
		      LOCK_RQS = UPPER(#uldReq#),
		      LM_USER_ID = #crUserId#, 
		      LM_DATE = sysdate,
		      TR_TYPE = 'AWBLK' 
		 WHERE
		      ULD_KEY = UPPER(#uldNo#) AND
		      to_char(LM_DATE, 'DDMONYY HH24:MI:SS')  = #uldLmDate#
		      
	</update>
	
	
	
	<update id="updateLspStatus" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO">
		UPDATE 
		      LSP_INVENTORY 
		   SET
		      LOCK_RQS = UPPER(#lspReq#),
		      LM_USER_ID = #crUserId#, 
		      LM_DATE = sysdate,
		      TR_TYPE = 'AWBLK' 
		 WHERE
		     LSP_NO = UPPER(#lspNo#) AND
		     to_char(LM_DATE, 'DDMONYY HH24:MI:SS')  = #lspLmDate#
	</update>
	
<!-- AWB Enquiry Ends -->


<!--Currency Exchange Rate Start-->
	
	
	 <select id="CE_FetchCurrencyExrateList" parameterClass="cargo.cms.admin.master.bo.CurrencyExRateBO" resultClass="cargo.cms.admin.master.bo.CurrencyExRateBO">
		
		SELECT
		E.TR_NO  AS trNo,      
        E.CURR_CODE AS currencyCode,  
		to_char(E.EFF_DATE,'DDMONYY HH24:MI') AS effectiveDate,
		to_char(E.EFF_DATE,'DDMONYY HH24:MI') AS sortDate,
		E.EFF_DATE AS effectDate,
        E.FORGN_UNIT AS  foreignUnit,
        E.EXCH_RATE AS exchangeRate,  
        E.CARR_CODE AS carrierCode,
		C.CODE_DESC AS codedescription,
		to_char(E.LM_DATE, 'ddMMYYYY hh24:mi:ss') as lastModDate
		FROM 
			MAST_CURR_EXRATE E, MAST_CURRENCY C
		WHERE		
		C.CODE= E.CURR_CODE	
		<dynamic>
		<isNotEmpty property="trNo">
		  AND  UPPER(TR_NO)=UPPER(#trNo#)
		</isNotEmpty>				
		<isNotEmpty property="effectiveDate">
		    <isNotEmpty property="historyFlag">	 	
				<![CDATA[ AND EFF_DATE <= TO_DATE(#longEffectiveDate#, 'DDMONYY HH24:MI') ]]> 		
		    </isNotEmpty> 
			<isEmpty property="historyFlag">	
			<![CDATA[	AND EFF_DATE >= NVL((select max(i.EFF_DATE) from MAST_CURR_EXRATE i
										  where i.CURR_CODE	= E.CURR_CODE	
										  and NVL(i.CARR_CODE, '**') = NVL(E.CARR_CODE, '**')),sysdate)
			]]>
			</isEmpty> 
		</isNotEmpty> 
		<isNotEmpty property="currencyCode">
			AND  UPPER(CURR_CODE)=UPPER(#currencyCode#)
		</isNotEmpty>
		<isNotEmpty property="historyFlag">
			<isEmpty property="carrierCode">		
				AND (CARR_CODE IS NULL	) 			
			</isEmpty>
		</isNotEmpty>
		<isEmpty property="loginCarrier">		
			<isNotEmpty property="carrierCode">		
				AND (CARR_CODE = #carrierCode#	OR CARR_CODE IS NULL) 			
			</isNotEmpty>
		</isEmpty>
		<isNotEmpty property="loginCarrier">
			<isNotEmpty property="carrierCode">		
				AND (CARR_CODE = #carrierCode# OR CARR_CODE IS NULL)			
			</isNotEmpty>
			<isEmpty property="carrierCode">		
				AND (CARR_CODE = #loginCarrier#	OR CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE  = #loginCarrier#) OR CARR_CODE IS NULL)			
			</isEmpty>
		</isNotEmpty>
		</dynamic>
		<dynamic prepend="ORDER BY ">
		        <isEmpty property="sortOrder.sortField">
             		E.CURR_CODE ASC, E.EFF_DATE DESC
        		</isEmpty>
       			 <isNotEmpty property="sortOrder.sortField">
             		$sortOrder.sortField$
        		</isNotEmpty>
 		</dynamic>	
	</select>
    <select id="fetchShowTCStatus" parameterClass="map" resultClass="cargo.cms.admin.bo.RegistrationRequestBO">
	select TC_IND AS tcInd,TC_ID AS tcId from MAINTAIN_TC WHERE FUNCTION_CODE = #functionName#
	</select>

	<select id="generateRebuildReport" parameterClass="map" resultClass="cargo.cms.admin.report.bo.RebuildReportBO">
	SELECT crdate,ACTDATE,CARR,fltKey,fltDate,atd,uldKey,awbNo,awb.AWB_TYPE flow,rebldPcs,TO_CHAR(rebuildWt,9999999.99) rebuildWt,rebuildTime,awbDate,
	(Select PKG_CALCULATE.FUN_GET_SPECIAL_CARGO_TYPE(awb.AWB_NO,awb.AWB_DATE,fltDate,CARR) FROM DUAL) as cargoType,
	DECODE(spl_code1, NULL, '', spl_code1 || DECODE(spl_code2, NULL, '', ','))
	  || DECODE(spl_code2, NULL, '', spl_code2 || DECODE(spl_code3, NULL, '', ','))
	  || DECODE(spl_code3, NULL, '', spl_code3 || DECODE(spl_code4, NULL, '', ','))
	  || DECODE(spl_code4, NULL, '', spl_code4 || DECODE(spl_code5, NULL, '', ','))
	  || DECODE(spl_code5, NULL, '', spl_code5 || DECODE(spl_code6, NULL, '', ','))
	  || DECODE(spl_code6, NULL, '', spl_code6 || DECODE(spl_code7, NULL, '', ','))
	  || DECODE(spl_code7, NULL, '', spl_code7 || DECODE(spl_code8, NULL, '', ','))
	  || DECODE(spl_code8, NULL, '', spl_code8 || DECODE(spl_code9, NULL, '', ','))
	  || DECODE(spl_code9, NULL, '', spl_code9) splCode	
	 FROM(
SELECT 
	A.FLT_KEY AS fltKey,
	TO_CHAR(A.FLT_DATE,'DDMONYY') AS fltDate,
	PKG_COMMON.get_flt_ata(A.FLT_KEY, A.FLT_DATE, 'D') AS atd,
	A.ULD_KEY AS uldKey,
	B.AWB_NO AS awbNo,
			to_char(B.AWB_DATE,'DDMONYY') AS awbDate,			
  DECODE(b.rebuild_pc,NULL,(SELECT ((A.percentage*B.LOADED_PC)/100) FROM DUAL),b.rebuild_pc) AS rebldPcs,
  DECODE(b.rebuild_wt,NULL,(SELECT ((A.percentage*B.LOADED_WT)/100) FROM DUAL),b.rebuild_wt) AS rebuildWt,
	TO_CHAR(A.CR_DATE,'DDMONYY HH24:MI') rebuildTime,
  C.CARR_CODE AS CARR,
  C.ACT_DATE AS ACTDATE,
  A.CR_DATE as crdate
	FROM exp_rebuilt_advice A,
	  exp_rebuild_advice_awb B,
	  FLT_OPR C
	WHERE b.tr_no = A.TR_NO 
	AND C.FLT_KEY= A.FLT_KEY
	AND C.SCH_DATE = A.FLT_DATE
	AND C.FLT_TYPE = 'D') P
	JOIN AWB awb ON AWB_NO = P.awbNo AND AWB_DATE = P.awbDate
	WHERE 1=1
	<isNotEmpty property="carrCode">
	AND P.CARR=#carrCode#
	</isNotEmpty>
	<isNotEmpty property="grpCarrCode">
	AND (P.CARR=#grpCarrCode# OR P.CARR IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE  = #grpCarrCode#))
	</isNotEmpty>
	<isEmpty property="carrCode">
				<isNotEmpty property="loginCarrier">
				   AND ( P.CARR = #loginCarrier#
                        OR  P.CARR IN (SELECT CARR_CODE FROM MAST_CARR_GRP 
                        WHERE GRP_CARR_CODE  = #loginCarrier#))             
            	</isNotEmpty>
   </isEmpty>
	
	<isNotEmpty property="dateFrom">
	<isNotEmpty property="dateTo">
	AND P.ACTDATE BETWEEN TO_DATE(#dateFrom#, 'DDMONYY') AND TO_DATE(#dateTo#, 'DDMONYY') AND ACTDATE IS NOT NULL
	</isNotEmpty>
	</isNotEmpty>
	ORDER BY crdate DESC
	</select>
	
	<select id="generateInterfaceCargoReport" parameterClass="map" resultClass="cargo.cms.admin.report.bo.InterfaceCargoReportBO">
	<![CDATA[
	SELECT 
	C.CARR_CODE AS airline,
	A.FLT_KEY AS inbFltKey,
	A.cntg_flt_key AS connectFlt,
  	to_char(A.cntg_flt_date,'DDMONYY')  AS connectFltDate,
	TO_CHAR(A.FLT_DATE,'DDMONYY') AS inbFltDate,
	pkg_common.get_flt_ata(A.FLT_KEY, A.FLT_DATE,'A')  AS ata,
	A.AWB_NO AS awb,
	A.SHP_TRF_PC AS pcs,
	A.SHP_TRF_WT AS wt,
	a.shp_cntg_flt_key AS outbdFltKey,
	TO_CHAR(a.shp_cntg_flt_date,'DDMONYY') AS outbdFltDate,
	PKG_COMMON.get_flt_ata(A.shp_cntg_flt_key, A.shp_cntg_flt_date, 'D') AS atd,
	(SELECT DATE_DIFF((SELECT TO_DATE(TO_CHAR(ACT_DATE,'DDMONYY')||' '||trim(to_char(ACT_TIME,'0000')), 'DDMONYY HH24MI') FROM FLT_OPR WHERE FLT_KEY=A.FLT_KEY AND SCH_DATE=A.FLT_DATE AND FLT_TYPE='A' AND ACT_DATE IS NOT NULL),
	(SELECT TO_DATE(TO_CHAR(ACT_DATE,'DDMONYY')||' '||trim(to_char(ACT_TIME,'0000')), 'DDMONYY HH24MI') FROM FLT_OPR WHERE FLT_KEY=shp_cntg_flt_key AND SCH_DATE=a.shp_cntg_flt_date AND FLT_TYPE='D' AND ACT_DATE IS NOT NULL)) FROM DUAL) timeDiff,
	a.uld_key AS uld,
	 DECODE(spl_code1, NULL, '', spl_code1 || DECODE(spl_code2, NULL, '', ','))
	  || DECODE(spl_code2, NULL, '', spl_code2 || DECODE(spl_code3, NULL, '', ','))
	  || DECODE(spl_code3, NULL, '', spl_code3 || DECODE(spl_code4, NULL, '', ','))
	  || DECODE(spl_code4, NULL, '', spl_code4 || DECODE(spl_code5, NULL, '', ','))
	  || DECODE(spl_code5, NULL, '', spl_code5 || DECODE(spl_code6, NULL, '', ','))
	  || DECODE(spl_code6, NULL, '', spl_code6 || DECODE(spl_code7, NULL, '', ','))
	  || DECODE(spl_code7, NULL, '', spl_code7 || DECODE(spl_code8, NULL, '', ','))
	  || DECODE(spl_code8, NULL, '', spl_code8 || DECODE(spl_code9, NULL, '', ','))
	  || DECODE(spl_code9, NULL, '', spl_code9) splCode
	FROM v_ddt_dtl A, AWB B, FLT_OPR C
	WHERE B.AWB_NO = A.AWB_NO
	AND B.AWB_DATE = A.AWB_DATE
	AND C.FLT_KEY = A.FLT_KEY
	AND C.SCH_DATE = A.FLT_DATE
	AND C.FLT_TYPE = 'A'
	]]>
	<isNotEmpty property="carrCode">
	AND C.CARR_CODE=#carrCode#
	</isNotEmpty>
	<isNotEmpty property="grpCarrCode">
	AND (C.CARR_CODE=#grpCarrCode# OR C.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE  = #grpCarrCode#))
	</isNotEmpty>
	<isEmpty property="carrCode">
				<isNotEmpty property="loginCarrier">
				   AND ( C.CARR_CODE = #loginCarrier#
                        OR  C.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP 
                        WHERE GRP_CARR_CODE  = #loginCarrier#))             
            	</isNotEmpty>
   </isEmpty>
	<isNotEmpty property="dateFrom">
	<isNotEmpty property="dateTo">
	<![CDATA[
	AND C.ACT_DATE BETWEEN TO_DATE(#dateFrom#, 'DDMONYY') AND TO_DATE(#dateTo#, 'DDMONYY')
	]]>
	</isNotEmpty>
	</isNotEmpty>
	AND a.shp_trf_type='IF' ORDER BY C.ACT_DATE DESC
	</select>
	

	<select id="fetchCurrencyExrateByTrNo" parameterClass="java.lang.String" resultClass="cargo.cms.admin.master.bo.CurrencyExRateBO">
		SELECT
		E.TR_NO  AS trNo,      
        E.CURR_CODE AS currencyCode,  
        TO_CHAR(E.EFF_DATE, 'DDMONYY') AS effectiveDate,
		TO_CHAR(E.EFF_DATE, 'HH24') AS timeHours,  
		TO_CHAR(E.EFF_DATE, 'MI') AS timeMinutes, 
		TO_CHAR(E.EFF_DATE, 'DDMONYY HH24:MI') AS copyEfDate,   
        E.FORGN_UNIT AS  foreignUnit,
        E.EXCH_RATE AS exchangeRate,  
        E.CARR_CODE AS carrierCode,
		C.CODE_DESC AS codedescription
		FROM 
			MAST_CURR_EXRATE E ,MAST_CURRENCY C
		WHERE		
			C.CODE= E.CURR_CODE	
			AND  UPPER(TR_NO)=UPPER(#trNo#)
	</select>

	<insert id="CE_insertCurrencyExrate" parameterClass="cargo.cms.admin.master.bo.CurrencyExRateBO">
		<![CDATA[
			  INSERT INTO MAST_CURR_EXRATE (
			  TR_NO ,      
			  CURR_CODE ,  
			  EFF_DATE ,  
			  FORGN_UNIT  ,
			  EXCH_RATE ,  
			  CARR_CODE  , 
			  CR_USER_ID , 
			  CR_DATE  ,    
			  LM_USER_ID  ,
			  LM_DATE )              
			  VALUES	( 
			  CURR_EXRATE_SEQ.nextval,
			  UPPER(#currencyCode#),
			  TO_DATE(#dateTime#,'DDMONYY HH24:MI'),
			  #foreignUnit#,
			  #exchangeRate#,
			  UPPER(#carrierCode#),
			  #crUserId#,
			  sysdate,
			  #lmUserId#,
			  sysdate)
					
				]]>
	</insert>	
	
	<update id="CE_upDateCurrencyExrate" parameterClass="cargo.cms.admin.master.bo.CurrencyExRateBO">	
		UPDATE MAST_CURR_EXRATE
		SET
		EFF_DATE = TO_DATE(#dateTime#,'DDMONYY HH24:MI'), 
	    EXCH_RATE =  #exchangeRate#,
	    FORGN_UNIT = #foreignUnit#,
	    LM_DATE= sysdate			  			
		WHERE 
	    UPPER(TR_NO) = UPPER(#trNo#) and to_char(LM_DATE, 'ddMMYYYY hh24:mi:ss') = #lastModDate#
	</update>
	
	<delete id="CE_deleteCurrencyExrate" parameterClass="cargo.cms.admin.master.bo.CurrencyExRateBO">
		DELETE FROM MAST_CURR_EXRATE 
		WHERE UPPER(TR_NO) = UPPER(#trNo#) and to_char(LM_DATE, 'ddMMYYYY hh24:mi:ss') = #lastModDate#
	</delete>

	<!--To make aat handler carriers dropdown. It should be done in framework -->
	<select id="aatHandlerCarriersForCurrExRate"  parameterClass="java.lang.Object" resultClass="cargo.cms.admin.master.bo.CarrierBO">
		SELECT CODE AS carrCode FROM MAST_CARRIER WHERE OWNED_CARR = 'Y'
	</select>
	
	<select id="isCurrencyRateExists" parameterClass="cargo.cms.admin.master.bo.CurrencyExRateBO" resultClass="java.lang.Integer" >
    	SELECT COUNT(TR_NO) FROM MAST_CURR_EXRATE WHERE UPPER(CURR_CODE)=UPPER(#currencyCode#)
    	AND EFF_DATE = TO_DATE(#dateTime#, 'DDMONYY HH24:MI')       	
		AND TR_NO != NVL(#trNo#,0) 
		<isNotEmpty property="carrierCode">
		 AND (CARR_CODE = #carrierCode# or CARR_CODE is null)
		</isNotEmpty>
	</select>
	
	<!--To Check Currency Code is exist or not-->
	<select id="sqlCountCurrencyCode" parameterClass="java.lang.String" resultClass="java.lang.Integer" >
		SELECT COUNT(CODE) FROM MAST_CURRENCY WHERE UPPER(CODE)=UPPER(#PARAM#)
	</select>
	<select id="sqlCountCarrierCode" parameterClass="java.lang.String" resultClass="java.lang.Integer" >
		SELECT COUNT(CODE) FROM MAST_CARRIER WHERE OWNED_CARR = 'Y' and UPPER(CODE)=UPPER(#PARAM#)  
	</select>
	
		
	


	<select id="getRoleCode" parameterClass="java.lang.String" resultClass="java.lang.String" >
		SELECT CODE FROM SEC_ROLE WHERE ACTIVE = 'Y' AND UPPER(CODE_DESC) = UPPER(#param#)  
	</select>
	
	<select id="getUserCode" parameterClass="java.lang.String" resultClass="java.lang.String" >
		SELECT CODE FROM SEC_USER WHERE STATUS = 'A' AND UPPER(CODE_DESC) = UPPER(#param#)  
	</select>
	

<!--Currency Exchange Rate ends-->

<select id="selectquery_inventory_check_list" parameterClass="cargo.cms.admin.bo.InventoryCheckListSearchBO" resultClass="cargo.cms.admin.bo.InventoryCheckListBO">
select invdl.TR_NO trNo,
invdl.DOC_LINE_NO doc_line_no,
invdl.DISCR_YN discripancy_YN,
TO_CHAR(invdl.CR_DATE, 'DDMONYY HH24:MI') createdDate,
invdl.CR_USER_ID createdUserId,
invhd.LOC_CODE locCode,
invhd.GRP_CODE grpCodeDisp,
invdl.ULD_KEY uldKey,
invhd.CHK_OPT checking,
(select CODE_DESC from mast_code_dtl where Code=invdl.DISC_CODE) discrCode,
(select LOC_CODE from ULD_INVENTORY where LOC_CODE in 
(select CODE from mast_wh_loc where wh_group=invhd.GRP_CODE) 
and ULD_KEY=invdl.ULD_KEY) grpCode,
invdl.REMARKS  from PHY_INV_CHECKING_DTL invdl, PHY_INV_CHECKING_HD invhd
  where invdl.TR_NO=invhd.TR_NO  AND
   invdl.CR_DATE BETWEEN TO_DATE(#startDate#,'DDMONYY HH24:MI') AND TO_DATE(#endDate#,'DDMONYY HH24:MI')
  <isNotEmpty property="grpCode" prepend="AND" > 
  GRP_CODE  = #grpCode# </isNotEmpty>
   <isNotEmpty property="locCode" prepend="AND" > 
  LOC_CODE  = #locCode# </isNotEmpty>
  <isNotEmpty property="discripancy" prepend="AND" > 
  DISCR_YN  = #discripancy# </isNotEmpty>
  <dynamic prepend="ORDER BY ">
		           <isNotEmpty property="sortOrder.sortField">
		             $sortOrder.sortField$ ,  invdl.CR_DATE desc
		           </isNotEmpty>
		           <isEmpty property="sortOrder.sortField">
		            invdl.CR_DATE desc
		           </isEmpty>
 </dynamic>
  
  </select>

<select id="selectquery_inventory_check_listCOUNT" parameterClass="cargo.cms.admin.bo.InventoryCheckListSearchBO" resultClass="cargo.cms.admin.bo.InventoryCheckListBO">
select count(*) from PHY_INV_CHECKING_DTL invdl, PHY_INV_CHECKING_HD invhd
  where invdl.TR_NO=invhd.TR_NO  AND
   invdl.CR_DATE BETWEEN TO_DATE(#startDate#,'DDMONYY HH24:MI') AND TO_DATE(#endDate#,'DDMONYY HH24:MI')
  <isNotEmpty property="grpCode" prepend="AND" > 
  GRP_CODE  = #grpCode# </isNotEmpty>
   <isNotEmpty property="locCode" prepend="AND" > 
  LOC_CODE  = #locCode# </isNotEmpty>
  <isNotEmpty property="discripancy" prepend="AND" > 
  DISCR_YN  = #discripancy# </isNotEmpty>
  </select>

	<update id="updatequery_inventory_check_list" parameterClass="cargo.cms.admin.bo.InventoryCheckListBO">	
		UPDATE PHY_INV_CHECKING_DTL
		SET   REMARKS = #remarks#
		WHERE TR_NO = #trNo# and DOC_LINE_NO=#doc_line_no#
	</update>
	 <select id="inv_date_time_compare"  parameterClass="map"  resultClass="java.lang.String">
  	 <![CDATA[		
 		SELECT TO_CHAR(TO_DATE(#startDate#,'DDMONYY HH24:MI') - TO_DATE(#endDate#,'DDMONYY HH24:MI')) DAYDIFF FROM DUAL     
 	]]>
 </select>
 
<select id="groupForValidateInv"  parameterClass="java.lang.String"  resultClass="cargo.cms.admin.bo.InventoryCheckListBO">
		SELECT WH_GROUP as groupId
			FROM MAST_WH_GROUP
		WHERE upper(WH_GROUP) = upper(#groupId#)
</select>
<select id="locationForValidateInv"  parameterClass="java.lang.String"  resultClass="cargo.cms.admin.bo.InventoryCheckListBO">
		SELECT CODE as locationCode
			FROM MAST_WH_LOC
		WHERE upper(CODE) = upper(#locCode#)
</select>
<select id="curr_date_compare"  parameterClass="map"  resultClass="java.lang.String">
  	 <![CDATA[		
 		SELECT TO_CHAR(TO_DATE(#endDate#,'DDMONYY') - TO_DATE(sysdate)) DAYDIFF FROM DUAL     
 	]]>
</select>

	<select id="fetchCCCForExport" parameterClass="cargo.cms.admin.bo.CCExportFunction" resultClass="cargo.cms.admin.bo.CCExportFunction">
		SELECT 
			CODE as code,
			CODE_DESC as codeDesc,
			RESTRICT_PREMAN as preman,
			RESTRICT_BUILDUP_COMP_FLT as buildupComFlt,
			RESTRICT_BUILDUP_COMP_ULD as buildupComUld,
			RESTRICT_FLT_CLOSE as fltClose,
			RESTRICT_CHECKOUT as checkout,
			RESTRICT_READY_FOR_DISPATCH as readyForDsptch,
			TO_CHAR(LM_DATE,'DDMONYY HH24:MI:SS') as lastModDate
		FROM MAST_CONSTRAINT_CODE
		<dynamic prepend="WHERE">
			<isNotEmpty prepend="AND" property="code">
				CODE = #code#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="preman">
				RESTRICT_PREMAN = #preman#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="buildupComFlt">
				RESTRICT_BUILDUP_COMP_FLT = #buildupComFlt#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="buildupComUld">
				RESTRICT_BUILDUP_COMP_ULD = #buildupComUld#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="fltClose">
				RESTRICT_FLT_CLOSE = #fltClose#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="checkout">
				RESTRICT_CHECKOUT = #checkout#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="readyForDsptch">
				RESTRICT_READY_FOR_DISPATCH = #readyForDsptch#
			</isNotEmpty>
		</dynamic>
	</select>
	
	<update id="updateCCCForExport" parameterClass="cargo.cms.admin.bo.CCExportFunction">	
		UPDATE MAST_CONSTRAINT_CODE
		SET   
			RESTRICT_PREMAN = #preman#,
			RESTRICT_BUILDUP_COMP_FLT = #buildupComFlt#,
			RESTRICT_BUILDUP_COMP_ULD = #buildupComUld#,
			RESTRICT_FLT_CLOSE = #fltClose#,
			RESTRICT_CHECKOUT = #checkout#,
			RESTRICT_READY_FOR_DISPATCH = #readyForDsptch#,
			LM_USER_ID = #lastModUserId#,
			LM_DATE = sysdate
		WHERE CODE = #code# and TO_CHAR(LM_DATE,'DDMONYY HH24:MI:SS')=#lastModDate#
	</update>
	<select id="checkConstraintCode" parameterClass="cargo.cms.admin.bo.CCExportFunction" resultClass="java.lang.String">
	SELECT CODE AS validConstCode FROM MAST_CONSTRAINT_CODE where CODE=#code#
	</select>
	
	
	<select id="validateConstraintCode" parameterClass="cargo.cms.admin.bo.CCPaccoConfigBO" resultClass="java.lang.String">
	SELECT CODE AS validConstCode FROM MAST_CONSTRAINT_CODE where CODE=#ccCode#
	</select>
	
	<!--To Fetch AWB Enquiry for Events-->
	<select id="fetchAWBEnqForEvents" parameterClass="cargo.cms.awb.bo.AWBInvBO" resultClass="cargo.cms.awb.bo.AWBInvBO">
		SELECT 
     		TO_CHAR( A.CR_DATE, 'DDMONYY HH24:MI:SS' ) AS crDate,
     		A.CR_USER_ID AS crUserId,
     		( select des_tag from his_mst_itm where cod_his_seq_num=b.cod_his_seq_num) AS eventId,
     		DECODE(B.cod_act,'A','ADD','U','UPD','D','DEL') as event,
     		B.DES_HIS_DTS as eventDesc
  		FROM HIS_AWB_EVNT A,HIS_AWB_EVNT_DTL B
  		WHERE B.awb_no= A.awb_no
  			AND B.awb_date = A.awb_date
  			AND A.COD_TRA_SEQ_NUM  = B.COD_TRA_SEQ_NUM
   			AND A.AWB_NO = #awbNo#
    		AND A.AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
    		AND A.MODULE = 'W'
    		AND A.COD_HIS_TYP = 'E'
    		<isNotEmpty property="eventId" prepend="AND">
    		<isEqual property="eventId" compareValue="350">
    		B.COD_HIS_SEQ_NUM IN ('350','575')
    		</isEqual>
    		<isNotEqual property="eventId" compareValue="350">
				B.COD_HIS_SEQ_NUM = #eventId#
	</isNotEqual>
				
			</isNotEmpty>
    	order by A.CR_DATE,b.cod_tra_seq_num	asc			   		               
	</select>
	
		<select id="fetchEsrfAWBEnqForEvents" parameterClass="cargo.cms.awb.bo.AWBInvBO" resultClass="cargo.cms.awb.bo.AWBInvBO">
		SELECT 
     		TO_CHAR( A.CR_DATE, 'DDMONYY HH24:MI:SS' ) AS crDate,
     		A.CR_USER_ID AS crUserId,
     		( select des_tag from his_mst_itm where cod_his_seq_num=b.cod_his_seq_num) AS eventId,
     		DECODE(B.cod_act,'A','ADD','U','UPD','D','DEL') as event,
     		B.DES_HIS_DTS as eventDesc
  		FROM HIS_AWB_EVNT A,HIS_AWB_EVNT_DTL B , MAST_ESRF_EVENTS_REPORT C
  		WHERE B.awb_no= A.awb_no
  			AND B.awb_date = A.awb_date
  			AND A.COD_TRA_SEQ_NUM  = B.COD_TRA_SEQ_NUM
   			AND A.AWB_NO = #awbNo#
    		AND A.AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
    		AND A.MODULE = 'W'
    		AND A.COD_HIS_TYP = 'E'
    		AND b.cod_his_seq_num  = C.cod_his_seq_num 
    	order by A.CR_DATE,b.cod_tra_seq_num	asc			   		               
	</select>
	
	<insert id="awb_insertAwbImage" parameterClass="cargo.cms.awb.bo.AWBAttachmentBO">
		INSERT INTO AWB_IMAGE 
		(SEQ_NO, AWB_NO, AWB_DATE, AWB_IMAGE_NAME, ULD_IMAGE)
		VALUES (AWB_IMAGE_SEQ.NEXTVAL, #awbNo#, #awbDate#, #docName#, #docImage#)
	</insert>
	
	<select id="awb_getAwbImageList" parameterClass="cargo.cms.awb.bo.AWBAttachmentBO"  resultClass="cargo.cms.awb.bo.AWBAttachmentBO">
		SELECT
			  SEQ_NO as seqNo,
			  AWB_IMAGE_NAME as docName,
			  LENGTH(ULD_IMAGE) as filesize,
			  ULD_IMAGE as docImage
		FROM AWB_IMAGE
		where 
		AWB_NO = #awbNo# and AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
	</select>
	
	<!--To Fetch AWB Enquiry for Remarks Log -->
	<select id="fetchAWBEnqForRmkLog" parameterClass="cargo.cms.awb.bo.AWBInvBO" resultClass="cargo.cms.awb.bo.AWBInvBO">
	SELECT 
			  A.AWB_NO AS awbNo,
			  SUBSTR( A.AWB_NO,1,3 ) AS awbNoPFX,
			  SUBSTR( A.AWB_NO,4 ) as awbNoSFX,
			  A.CR_USER_ID AS rmkUserId,  	   
			  TO_CHAR( A.CR_DATE, 'DDMONYY HH24:MI' ) AS crDate,
			  A.RMK_TYPE AS type,
			  A.RMK AS remarks,
			  A.FLT_KEY AS fltKey,
			  TO_CHAR( A.FLT_DATE, 'DDMONYY' ) AS fltDate,
			  B.CODE_DESC AS typeDesc			  	 		  
		FROM  AWB_RMK A
        LEFT JOIN MAST_CODE_DTL B ON B.CODE = A.RMK_TYPE 
		WHERE     A.AWB_NO = #awbNo#
		and A.AWB_DATE = #awbDate#
    UNION
    SELECT 
    A.AWB_NO AS awbNo,
		SUBSTR( A.AWB_NO,1,3 ) AS awbNoPFX,
		SUBSTR( A.AWB_NO,4 ) as awbNoSFX,
		A.CR_USER_ID AS rmkUserId,  	   
		TO_CHAR( A.CR_DATE, 'DDMONYY HH24:MI' ) AS crDate,
		'AWB' AS type,
			  A.AIRLN_RMK AS remarks,
			  '' AS fltKey,
			  '' AS fltDate,
			  '' AS typeDesc		
    FROM AWB A WHERE A.AWB_NO=#awbNo# AND A.AWB_DATE=#awbDate# 
    AND NOT EXISTS (SELECT NULL FROM AWB_RMK WHERE AWB_NO=#awbNo#)
    UNION
    SELECT
    A.AWB_NO AS awbNo,
		SUBSTR( A.AWB_NO,1,3 ) AS awbNoPFX,
		SUBSTR( A.AWB_NO,4 ) as awbNoSFX,
		A.CR_USER_ID AS rmkUserId,  	   
		TO_CHAR( A.CR_DATE, 'DDMONYY HH24:MI' ) AS crDate,
		'AWB' AS type,
			  A.WH_RMK AS remarks,
			  '' AS fltKey,
			  '' AS fltDate,
			  '' AS typeDesc		
    FROM EXP_CAR A WHERE A.AWB_NO=#awbNo# AND A.AWB_DATE=#awbDate# 
      union
      SELECT			   
	  SUBSTR(A.ENTITY_KEY,1,11) AS awbNo,
      SUBSTR(A.ENTITY_KEY,1,3) AS awbNoPFX,
      SUBSTR(A.ENTITY_KEY,4,11) as awbNoSFX,
      A.LM_USER_ID AS rmkUserId,
      TO_CHAR(A.LM_DATE,'DDMONYY HH24:MI') AS crDate,
      '' as type,
      A.RMK AS remarks,
      DECODE('I','I',SI.FLT_KEY,EA.FLT_KEY) AS fltKey,
      DECODE('I','I',TO_CHAR(SI.FLT_DATE,'DDMONYY'),TO_CHAR(EA.FLT_DATE,'DDMONYY')) AS fltDate,
      A.TAG_NAME AS typeDesc
      FROM
      RMK_HIST A
      LEFT JOIN EXP_PMANIFEST_AWB EA ON EA.AWB_NO = #awbNo# AND EA.AWB_DATE = #awbDate# 
      LEFT JOIN IMP_CAR_SHP SI ON SI.AWB_NO = #awbNo# AND SI.AWB_DATE = #awbDate# 
      WHERE
      <isNotEqual property="awbType" compareValue="E">
      A.ENTITY_KEY IN (DECODE(SI.AWB_NO,'','',SI.AWB_NO||SI.FLT_KEY)) OR A.ENTITY_KEY IN (DECODE(SI.AWB_NO,'','',SI.AWB_NO||TO_CHAR(SI.AWB_DATE,'DDMONYY')))
      <isNotEmpty property="type">
	  AND A.TAG_NAME||A.FIELD_NAME = #type#
	  </isNotEmpty>		
      </isNotEqual>
      <isEqual property="awbType" compareValue="E">
      A.ENTITY_KEY IN (DECODE(EA.AWB_NO,'','',EA.AWB_NO||EA.FLT_KEY)) OR A.ENTITY_KEY IN (DECODE(EA.AWB_NO,'','',EA.AWB_NO||TO_CHAR(EA.AWB_DATE,'DDMONYY')))
      <isNotEmpty property="type">
	  AND A.TAG_NAME||A.FIELD_NAME = #type#
	  </isNotEmpty>		
      </isEqual>	
	</select>	

	<delete id="awb_deleteAwbImage" parameterClass="cargo.cms.awb.bo.AWBAttachmentBO" >
		DELETE AWB_IMAGE WHERE SEQ_NO = #seqNo#
	</delete>

	<delete id="deletefwstoreImage" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO" >
		DELETE fw_image_store WHERE img_session_id=#transactionId# and img_name=#videoName#
	</delete>
	
	<update id="deleteupdatefwstoreImage" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO" >
		update fw_image_store set delete_flag = 'Y' WHERE img_session_id=#transactionId# and img_name=#videoName#
	</update>

<insert id="adm_awb_enq_insertAWBrmk" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO">
<![CDATA[
	insert into awb_rmk (SEQ_NO, AWB_NO, AWB_DATE, RMK_TYPE, RMK, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE) values
	(awb_rmk_seq.nextval, #awbNo#,TO_DATE(#awbDate#,'DDMONYY'), 'AWB_ENQ',#awbRemark#,#crUserId#,sysdate,#crUserId#,sysdate)
]]>
</insert>
 <!--To Fetch Import AWB Count for Access(external User) -->
 <select id="fetchImportAWBCountForAccess" parameterClass="cargo.cms.common.bo.StdAwbBO" resultClass="java.lang.Integer">
	select count(1) 
	from Imp_Car_Shp
	where awb_no = #awbNo# and awb_date = #awbDate# and carr_code = #carrCode#
 </select>	
	 <!--To Fetch Export AWB Count for Access(external User) -->
 <select id="fetchExportAWBCountForAccess" parameterClass="cargo.cms.common.bo.StdAwbBO" resultClass="java.lang.Integer">
	<!--select count(1) 
	from Exp_Pmanifest_Awb e
		 join flt_opr f on e.flt_key = f.flt_key and e.flt_date = f.sch_date and f.flt_type = 'D'
	where e.awb_no = #awbNo# and e.awb_date = #awbDate# and f.carr_code = #carrCode#
		--> 
	 select count(1) 
	from AWB e		 
	where e.awb_no = #awbNo# and e.awb_date = #awbDate# and awb_type='E' and e.carr_code = #carrCode#
 </select>
 <!--To Fetch AWB Details for Access(external User) -->
 <select id="fetchAWBDetailsForAccess" parameterClass="cargo.cms.common.bo.StdAwbBO" resultClass="cargo.cms.common.bo.StdAwbBO">
	select 
		 awb_no as awbNo,
		 awb_type as awbType,
		 to_char(awb_date,'DDMONYY') as awbDate
	from awb
	where awb_no = #awbNo#	     
		  and  awb_date = ( select max(awb_date) from  awb where  awb_no = #awbNo# )
		  <isNotEmpty property="awbType">
				and awb_type = #awbType#
		  </isNotEmpty>	 
 </select>

<select id="adm_getAwbDateList"  parameterClass="cargo.cms.awb.bo.AWBInvBO"  resultClass="cargo.cms.awb.bo.AWBEnquiryBO">
	select to_char(awb_date,'DDMONYY') awbDate ,		to_char(awb_date,'DDMONYY') awbDate
	from awb where awb_No = #awbNo# and awb_Type = #awbType# Order By awb_date desc
</select>

<parameterMap id="mgmtMap" class="map" >
	<parameter property="RPT" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	<parameter property="DATEFROM" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	<parameter property="DATETO" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	<parameter property="FLTKEY" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	<parameter property="AWBNO" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	<parameter property="SCASE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
</parameterMap>

<procedure id="prc_mgmt_report" parameterMap="mgmtMap" >
	{ call pkg_svc_std.prc_mgmt_report(?,?,?,?,?,?) }
</procedure>

<select id="get_data_mgmt_report" resultClass="cargo.cms.sstandard.bo.SStandardReportsBO">
	select RPT_NAME as itemName, 
		ACHV_CASES as achCase, 
		ACHV_RATE as achRate,  
		VALID_CASES as valcase, 
		FAIL_CASES as failcase,
		FAIL_RATE as failRate,
		TTL_CASES as totalCase, 
		ERROR_CASES as errCase, 
		INVALID_CASES as invCase,
		ODD_CASES as oddCase, 
		MAX_TIME as maximum, 
		MIN_TIME as minimum, 
		AVG_TIME as average, 
		N_PER as nthPercentile, 
		STD_DEV as stdDev,
		(SELECT to_char(SYSDATE,'DDMONYY HH24:MI') FROM DUAL) as repGenDate 
	from gt_mgmt_report
</select>

<select id="sqlmaintarealist" parameterClass="cargo.cms.admin.bo.MaintainAreaBO" resultClass="cargo.cms.admin.bo.MaintainAreaBO">
	select WH_AREA areaCode,WH_AREA_DESC areaName,WH_OPS_AREA as oprArea,AIR_SIDE AS airSide,PREANNOUNCEMENT_IND AS target,TO_CHAR(LM_DATE, 'yyyy/mm/dd:hh:mi:ssam') modifiedDate,
	 MODULE_YN AS moduleInd from MAST_WH_AREA 
	<isNotEmpty prepend="" property="areaCode">
				 where WH_AREA like #areaCode# 
			</isNotEmpty>	order by WH_AREA asc	
	
</select>
<select id="sqlcheckifareacodeexists" parameterClass="cargo.cms.admin.bo.MaintainAreaBO" resultClass="cargo.cms.admin.bo.MaintainAreaBO">
	select WH_AREA areaCode,WH_AREA_DESC areaName,WH_OPS_AREA as oprArea,AIR_SIDE AS airSide,PREANNOUNCEMENT_IND AS target,TO_CHAR(LM_DATE, 'yyyy/mm/dd:hh:mi:ssam') modifiedDate,
	MODULE_YN AS moduleInd from MAST_WH_AREA  where WH_AREA in(#areaCode#)order by WH_AREA asc	
</select>
<update id="sqlmaintareaupdate" parameterClass="cargo.cms.admin.bo.MaintainAreaBO" >
	update MAST_WH_AREA  set WH_AREA_DESC=#areaName#,LM_USER_ID=#userID#,LM_DATE=sysDate,WH_OPS_AREA=#oprArea#,AIR_SIDE=#airSide#,PREANNOUNCEMENT_IND=#target#,MODULE_YN = #moduleInd# 
	where WH_AREA=#areaCode#
	 and LM_DATE = TO_DATE(#modifiedDate#,'yyyy/mm/dd:hh:mi:ssam')
</update>
<insert id="sqlmaintareainsert" parameterClass="cargo.cms.admin.bo.MaintainAreaBO" >
	insert into MAST_WH_AREA  (WH_AREA,WH_AREA_DESC,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,WH_OPS_AREA,AIR_SIDE,PREANNOUNCEMENT_IND,MODULE_YN) values 
	(#areaCode#,#areaName#,#userID#,sysDate,#userID#,sysDate,#oprArea#,#airSide#,#target#,#moduleInd#)
</insert>
<delete id="sqlmaintareadelete" parameterClass="cargo.cms.admin.bo.MaintainAreaBO" >
	delete from MAST_WH_AREA where WH_AREA in(#areaCode#) and LM_DATE = TO_DATE(#modifiedDate#,'yyyy/mm/dd:hh:mi:ssam')
</delete>

<select id="sqlCheckAreaCode"  parameterClass="java.lang.String" resultClass="java.lang.Integer">
	SELECT COUNT(1) FROM MAST_WH_GROUP WHERE WH_AREA=#PARAM#
</select>

<select id="sqlCheckGroupCode"  parameterClass="java.lang.String" resultClass="java.lang.Integer">
	select count(1) from mast_wh_loc where wh_group = #PARAM#
</select>

	<!-- Sql Scripts for Maintain Group By Surendra START -->
	<select id="fetchGroupList" parameterClass="cargo.cms.admin.bo.MaintainGroupBO" resultClass="cargo.cms.admin.bo.MaintainGroupBO">
		SELECT t1.WH_GROUP as groupCode, t1.WH_GROUP_DESC as groupName, t2.WH_TYPE_DESC as groupType, t1.WH_AREA as areaCode,t1.PREANNOUNCEMENT_IND AS target,t1.LM_USER_ID as lastUpdUser, t1.LM_DATE as lastUpdDate FROM MAST_WH_GROUP t1,MAST_WH_TYPE t2  WHERE t1.WH_TYPE = t2.WH_TYPE				 		
			<isNotEmpty prepend="AND" property="groupCode">
				t1.WH_GROUP LIKE #groupCode#
			</isNotEmpty>		
	</select>
	<select id="fetchGroupDetails" parameterClass="cargo.cms.admin.bo.MaintainGroupBO" resultClass="cargo.cms.admin.bo.MaintainGroupBO">
		SELECT WH_GROUP as groupCode, WH_GROUP_DESC as groupName, WH_TYPE as groupType, WH_AREA as areaCode,PREANNOUNCEMENT_IND AS target,LM_USER_ID as lastUpdUser, LM_DATE as lastUpdDate,TO_CHAR(LM_DATE , 'DDMMYY HH24:MI:SS')AS lastModifiedDate FROM MAST_WH_GROUP  WHERE WH_GROUP LIKE #groupCode#
	</select>
	<update id="updateGroupDetail" parameterClass="cargo.cms.admin.bo.MaintainGroupBO" >
	Update MAST_WH_GROUP set WH_GROUP_DESC = #groupName# ,  WH_TYPE = #groupType#,  LM_DATE = Sysdate ,WH_AREA=#areaCode#,PREANNOUNCEMENT_IND=#target# where WH_GROUP = #groupCode# and LM_DATE = to_date( #lastModifiedDate#,'DDMMYY HH24:MI:SS')
	</update>
	<insert id="saveGroupDetail" parameterClass="cargo.cms.admin.bo.MaintainGroupBO">
		Insert into MAST_WH_GROUP (WH_GROUP, WH_GROUP_DESC, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE, WH_AREA, WH_TYPE,PREANNOUNCEMENT_IND) values(#groupCode#, #groupName#, #lastUpdUser#, sysdate, #lastUpdUser#, sysdate, #areaCode#, #groupType#,#target#)
	</insert>
	<delete id="deleteGroupDetail" parameterClass="cargo.cms.admin.bo.MaintainGroupBO">
	    Delete from MAST_WH_GROUP where WH_GROUP=#groupCode#
	</delete>		
	<select id="checkGroupCodeExist"  parameterClass="java.lang.String" resultClass="java.lang.Integer">
	<![CDATA[
	select count(1) from MAST_WH_GROUP where WH_GROUP = #dest#
	]]>
	</select>
	
	<select id="checkAreaCodeValid"  parameterClass="java.lang.String" resultClass="java.lang.Integer">
	<![CDATA[
	select count(*) from MAST_WH_AREA where WH_AREA = #areaCodeValid#
	]]>
	</select>
	
	
	<!-- Sql Scripts for Maintain Group By Surendra END -->
<select id="sqlsplhandlingcodeCount"  parameterClass="java.lang.String"  resultClass="java.lang.Integer">
			SELECT COUNT(CODE) FROM MAST_SPL_HAND_CODE WHERE UPPER(CODE)=UPPER(#PARAM#) ORDER BY Code 
	</select>

<!--To Check Dest Code(OpsMsg) is exist or not-->
	<select id="sqlCountDestCode" parameterClass="java.lang.String" resultClass="java.lang.Integer" >
		SELECT COUNT(CODE) FROM MAST_ARPT WHERE UPPER(CODE)=UPPER(#PARAM#)
	</select>
	
 <select id="fetchCustCompanyNameForSPL" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		 	select code_desc as companyName from CUST_COMPANY where UPPER(code_desc) like UPPER(#keySearchStr# ||'%') and ROWNUM &lt;= #maxRecFetch# AND ACTIVE = 'Y' AND AIRLINE_YN = 'Y' AND BLACKLISTED='N' ORDER BY code_desc    
	</select>
	
	<select id="datecomparison" parameterClass="map" resultClass="java.lang.Integer">
       SELECT TO_DATE(#ToDate#,'DDMONYY')  - TO_DATE(#FromDate#,'DDMONYY')  FROM DUAL       
    </select>
	
	
	<select id="fetchGroupTypeList" parameterClass="cargo.cms.admin.bo.MaintainGroupBO" resultClass="cargo.cms.admin.bo.MaintainGroupBO">
		SELECT WH_TYPE as groupType, WH_TYPE_DESC as groupTypeDesc, PRIORITY as priority, LM_USER_ID as lastUpdUser, to_char(LM_DATE,'DDMMYYYY HH24:MI:SS') as lastUpdDate FROM MAST_WH_TYPE 
	</select>

	<select id="fetchGroupTypeDetails" parameterClass="cargo.cms.admin.bo.MaintainGroupBO" resultClass="cargo.cms.admin.bo.MaintainGroupBO">
		SELECT WH_TYPE as groupType, WH_TYPE_DESC as groupTypeDesc, PRIORITY as priority, LM_USER_ID as lastUpdUser, to_char(LM_DATE,'DDMMYYYY HH24:MI:SS') as lastUpdDate FROM MAST_WH_TYPE WHERE WH_TYPE = #groupType#
	</select>

	<update id="updateGroupTypeDetail" parameterClass="cargo.cms.admin.bo.MaintainGroupBO" >
		Update MAST_WH_TYPE set PRIORITY = #priority#, LM_USER_ID = #lastUpdUser#, LM_DATE = sysdate where LM_DATE = TO_DATE(#lastUpdDate#,'DDMMYYYY HH24:MI:SS') and WH_TYPE = #groupType#
	</update>
<!-- Non Co-loadable SHC Start-->
	<select id="shcForvalidate"  parameterClass="java.lang.String"  resultClass="cargo.cms.afw.bo.MasterBO">
		SELECT  CODE as splHandlingCode
			FROM MAST_SPL_HAND_CODE
		WHERE CODE = #splHandlingCode#
	</select>
	<select id="carrForvalidate"  parameterClass="java.lang.String"  resultClass="cargo.cms.afw.bo.MasterBO">
		select CODE AS codeId from mast_carrier where owned_carr='Y' and code=#PARAM#
	</select>
	<select id="unldgForvalidate"  parameterClass="java.lang.String"  resultClass="cargo.cms.afw.bo.MasterBO">
		select CODE AS codeId from MAST_CITY where code=#PARAM#
	</select>
	
	<select id="nonColoadSHCretrieve"  parameterClass="cargo.cms.admin.bo.SplHandlingCodeBO" resultClass="cargo.cms.admin.bo.SplHandlingCodeBO">
		SELECT splHandlingCode,inputField,endrseInd,nonColoadSHC,lastModifiedDate FROM (
		SELECT  s.SCH as splHandlingCode, 'false' as inputField,s.ENDRSE_IND AS endrseInd, s.NON_COLOAD_SCH as nonColoadSHC, 
		TO_CHAR(s.LM_DATE,'DDMONYY HH24:MI:SS') AS lastModifiedDate 
		FROM MAST_NON_COLOAD_SHC s, MAST_SPL_HAND_CODE mastsplcode
		WHERE UPPER(mastsplcode.code) = UPPER(s.NON_COLOAD_SCH) 
		and s.CARR_CODE = #selectedCarrier#
		<isNotEmpty property="unldgPt"> 
		and s.UNLDG_PT = #unldgPt#
		</isNotEmpty>
		<isEmpty property="unldgPt">
		and s.UNLDG_PT is null
		</isEmpty>
		<isNotEmpty property="splHandlingCode">
		AND s.SCH = #splHandlingCode#
		</isNotEmpty>
		UNION ALL
		SELECT  s.SCH as splHandlingCode, 'false' as inputField,s.ENDRSE_IND AS endrseInd, s.NON_COLOAD_SCH as nonColoadSHC, 
		TO_CHAR(s.LM_DATE,'DDMONYY HH24:MI:SS') AS lastModifiedDate 
		FROM MAST_NON_COLOAD_SHC s
		WHERE s.CARR_CODE = #selectedCarrier#
		<isNotEmpty property="unldgPt"> 
		and s.UNLDG_PT = #unldgPt#
		</isNotEmpty>
		<isEmpty property="unldgPt">
		and s.UNLDG_PT is null
		</isEmpty>
		<isNotEmpty property="splHandlingCode">
		AND s.SCH = #splHandlingCode#
		</isNotEmpty>
		AND s.NON_COLOAD_SCH = '***') ORDER BY splHandlingCode
	</select>

<select id="nonColoadSHCretrieve1"  parameterClass="cargo.cms.admin.bo.SplHandlingCodeBO" resultClass="cargo.cms.admin.bo.SplHandlingCodeBO">
		SELECT splHandlingCode,inputField,endrseInd,nonColoadSHC,lastModifiedDate,unldgPt FROM (
		SELECT  s.SCH as splHandlingCode, 'false' as inputField,s.ENDRSE_IND AS endrseInd, s.NON_COLOAD_SCH as nonColoadSHC, 
		TO_CHAR(s.LM_DATE,'DDMONYY HH24:MI:SS') AS lastModifiedDate,UNLDG_PT AS unldgPt 
		FROM MAST_NON_COLOAD_SHC s, MAST_SPL_HAND_CODE mastsplcode
		WHERE UPPER(mastsplcode.code) = UPPER(s.NON_COLOAD_SCH) 
		and s.CARR_CODE = #selectedCarrier#
		<isNotEmpty property="unldgPt"> 
		and s.UNLDG_PT = #unldgPt#
		</isNotEmpty>
		<isNotEmpty property="splHandlingCode">
		AND s.SCH = #splHandlingCode#
		</isNotEmpty>
		UNION ALL
		SELECT  s.SCH as splHandlingCode, 'false' as inputField,s.ENDRSE_IND AS endrseInd, s.NON_COLOAD_SCH as nonColoadSHC, 
		TO_CHAR(s.LM_DATE,'DDMONYY HH24:MI:SS') AS lastModifiedDate,UNLDG_PT AS unldgPt 
		FROM MAST_NON_COLOAD_SHC s
		WHERE s.CARR_CODE = #selectedCarrier#
		<isNotEmpty property="unldgPt"> 
		and s.UNLDG_PT = #unldgPt#
		</isNotEmpty>
		<isNotEmpty property="splHandlingCode">
		AND s.SCH = #splHandlingCode#
		</isNotEmpty>
		AND s.NON_COLOAD_SCH = '***') ORDER BY splHandlingCode
	</select>

	<select id="nonColoadSHCForvalidate"  parameterClass="cargo.cms.admin.bo.SplHandlingCodeBO" resultClass="cargo.cms.admin.bo.SplHandlingCodeBO">
		SELECT  SCH as splHandlingCode
			FROM MAST_NON_COLOAD_SHC
		WHERE ((NON_COLOAD_SCH = #nonColoadSHC# and SCH = #splHandlingCode# AND CARR_CODE=#selectedCarrier# 
		<isNotEmpty property="unldgPt"> 
		AND UNLDG_PT = #unldgPt#
		</isNotEmpty>
		<isEmpty property="unldgPt">
		and UNLDG_PT is NULL
		</isEmpty>) 
		OR (SCH = #nonColoadSHC# and NON_COLOAD_SCH = #splHandlingCode# AND CARR_CODE=#selectedCarrier# 
		<isNotEmpty property="unldgPt"> 
		AND UNLDG_PT = #unldgPt#
		</isNotEmpty>
		<isEmpty property="unldgPt">
		and UNLDG_PT is NULL
		</isEmpty>))
	</select>

	<insert id="sqlinsertnonColoadSHC" parameterClass="cargo.cms.admin.bo.SplHandlingCodeBO">
		INSERT INTO MAST_NON_COLOAD_SHC (SCH,NON_COLOAD_SCH, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE, CARR_CODE, ENDRSE_IND, UNLDG_PT,SEQ_NO)
		VALUES (#splHandlingCode#, #nonColoadSHC#,#userId#, sysdate, #userId#, sysdate,#selectedCarrier#,#endrseInd#,#unldgPt#,MAST_NON_COLOAD_SHC_SEQ.nextval)
	</insert>
	<insert id="sqlinsertnonColoadSHC1" parameterClass="cargo.cms.admin.bo.SplHandlingCodeBO">
		INSERT INTO MAST_NON_COLOAD_SHC (SCH,NON_COLOAD_SCH, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE, CARR_CODE, ENDRSE_IND, UNLDG_PT,SEQ_NO)
		VALUES (#nonColoadSHC#,#splHandlingCode#,#userId#, sysdate, #userId#, sysdate,#selectedCarrier#,#endrseInd#,#unldgPt#,MAST_NON_COLOAD_SHC_SEQ.nextval)
	</insert>
	<delete id="sqldeletenonColoadSHC" parameterClass="cargo.cms.admin.bo.SplHandlingCodeBO" >
		DELETE FROM 
				MAST_NON_COLOAD_SHC 
			WHERE ((NON_COLOAD_SCH = #nonColoadSHC# and SCH = #splHandlingCode# AND CARR_CODE= #selectedCarrier# 
			<isNotEmpty property="unldgPt"> 
		AND UNLDG_PT = #unldgPt#
		</isNotEmpty>
		<isEmpty property="unldgPt">
		and UNLDG_PT is NULL
		</isEmpty>) 
			OR (SCH = #nonColoadSHC# and NON_COLOAD_SCH = #splHandlingCode# AND CARR_CODE= #selectedCarrier# 
			<isNotEmpty property="unldgPt"> 
		AND UNLDG_PT = #unldgPt#
		</isNotEmpty>
		<isEmpty property="unldgPt">
		and UNLDG_PT is NULL
		</isEmpty>))
	</delete>
	<delete id="sqlinsdeletenonColoadSHC" parameterClass="cargo.cms.admin.bo.SplHandlingCodeBO" >
	
		DELETE FROM MAST_NON_COLOAD_SHC where SCH = #splHandlingCode# AND CARR_CODE= #selectedCarrier#
		<isNotEmpty property="unldgPt"> 
		AND UNLDG_PT = #unldgPt#
		</isNotEmpty>
		<isEmpty property="unldgPt">
		and UNLDG_PT is NULL
		</isEmpty>
	</delete>
	<!-- Non Co-loadable SHC End-->
	
	<!-- Required SHC Start-->
	<select id="requiredSHCForvalidate"  parameterClass="cargo.cms.admin.bo.SplHandlingCodeBO" resultClass="cargo.cms.admin.bo.SplHandlingCodeBO">
		SELECT  REQ_SCH as splHandlingCode
			FROM mast_pman_req_shc
		WHERE req_sch = #splHandlingCode# and SCH = #nonColoadSHC#
	</select>
	<insert id="sqlinsertRequiredSHC" parameterClass="cargo.cms.admin.bo.SplHandlingCodeBO">
		INSERT INTO mast_pman_req_shc (SCH,req_sch, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE)
		VALUES (#nonColoadSHC#, #splHandlingCode#,#userId#, sysdate, #userId#, sysdate)
	</insert>
	<delete id="sqldeleteRequiredSHC" parameterClass="cargo.cms.admin.bo.SplHandlingCodeBO" >
	<![CDATA[
		  DELETE FROM 
				mast_pman_req_shc 
			WHERE req_sch = #splHandlingCode# and SCH = #nonColoadSHC#
			AND TO_CHAR(LM_DATE,'DDMONYY HH24:MI:SS') = #lastModifiedDate#
	]]>
	</delete>
	<select id="requiredSHCretrieve"  parameterClass="cargo.cms.admin.bo.SplHandlingCodeBO" resultClass="cargo.cms.admin.bo.SplHandlingCodeBO">
		SELECT  s.req_sch as splHandlingCode, 'false' as inputField, 
		TO_CHAR(s.LM_DATE,'DDMONYY HH24:MI:SS') AS lastModifiedDate 
		FROM mast_pman_req_shc s, MAST_SPL_HAND_CODE mastsplcode
		WHERE UPPER(mastsplcode.code) = UPPER(s.SCH) 
		AND s.SCH = #splHandlingCode#  ORDER BY s.SCH
	</select>
	<!-- Required SHC End-->
	
	<select id="sqlCompanyQueryCOUNT" parameterClass="cargo.cms.admin.bo.QueryRegistrationBO" resultClass="java.lang.Integer">
		<![CDATA[
			SELECT COUNT(*) as totalRowCount
			FROM CUST_REGISTRATION
			WHERE NVL(#status#, NVL(REG_STATUS, '1')) = NVL(REG_STATUS, '1')
			AND CR_DATE >= TO_DATE(#registeredDateFrom#,'DDMONYY') AND CR_DATE < TO_DATE(#registeredDateTo#,'DDMONYY')+1
			  ]]>
			<isNotEmpty property="companyName">
				AND CO_NAME like #companyName# 
			</isNotEmpty>
			AND NVL(#companyIATACode#, NVL(CO_IATA_CODE, '1')) = NVL(CO_IATA_CODE, '1')
			AND NVL(#applicationRefNo#, NVL(REG_ID, '1')) = NVL(REG_ID, '1')
			ORDER BY CR_DATE  		
	</select>
	
	<select id="fetchCustRegnList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	 	select REG_ID AS codeId, CO_NAME as codeDesc from CUST_REGISTRATION where UPPER(CO_NAME) like UPPER(#keySearchStr# ||'%') and ROWNUM &lt;= #maxRecFetch# ORDER BY CO_NAME    
	</select>
	

	<!-- Maintain Schedule Collection Time Start-->
	<insert id="admin_collectiontime_insertTime"
            parameterClass="cargo.cms.admin.bo.CollectionTimeBO">
            INSERT INTO CUST_AGENT_SCH_COLL_TIME
            (TR_NO, CUST_NO, TIME_FROM, TIME_TO, PURPOSE, EFF_FROM, EFF_TO,
            DAY_FRQ, RMK, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE)
            VALUES
            (SCH_COLL_SEQ.NEXTVAL, #custNo#, #timeFrom#, #timeTo#, #purpose#, TO_DATE(#effFrom#,'DDMONYY'),
            TO_DATE(#effTo#,'DDMONYY'), #dayFrq#, #rmk#, #createdUserId#, sysdate, #modifiedUserId#, sysdate)
       </insert>

	<select id="admin_collectiontime_getTRNo"  parameterClass="cargo.cms.admin.bo.CollectionTimeBO"  
                                resultClass="java.lang.String">
                                SELECT TR_NO as truckDock
                                FROM CUST_AGENT_SCH_COLL_TIME
                                WHERE CUST_NO = #custNo# and LM_USER_ID = #modifiedUserId# and
                                LM_DATE=TO_DATE(sysdate,'DDMONYY')
                </select>
	
				<select id="validTruckDoc"  parameterClass="cargo.cms.admin.bo.CollectionTimeBO"  
                                resultClass="java.lang.Integer">
     				SELECT COUNT(TRUCK_DOCK) FROM TCS_DOCK_MASTER WHERE TRUCK_DOCK = #truckDock#
                </select>
	
	<insert id="admin_collectiontime_insertTime_truckDock1"
			            parameterClass="cargo.cms.admin.bo.CollectionTruckDockBO">
			            INSERT INTO CUST_AGENT_SCH_COLL_TRUCK_DOCK
			            (TR_NO, TRUCK_DOCK, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE)
			            VALUES
			            (SCH_COLL_SEQ.CURRVAL,#truckDock#,#modifiedUserId#,sysdate,#modifiedUserId#,sysdate)
			       </insert>
	
	<select id="admin_collectiontime_getDtlsForCreate"  parameterClass="cargo.cms.admin.bo.CustomerSearchBO"  
                                resultClass="cargo.cms.admin.bo.CollectionTimeBO">
                                SELECT C.CODE_DESC as companyName, 
                                                   C.CODE as custNo, 
                                                   C.CO_IATA_CODE as iataCode
                                FROM CUST_COMPANY C
                                WHERE C.CODE = #customerNo# 
       </select>
	<select id="admin_collectiontime_checkCustomer" parameterClass="cargo.cms.admin.bo.CustomerSearchBO"
		resultClass="java.lang.String">
		<![CDATA[
		SELECT CODE
		FROM CUST_COMPANY
		WHERE 
		CODE = NVL(#customerNo#, CODE) 
		AND NVL(CO_IATA_CODE,'&&') = NVL(#iataCode#, NVL(CO_IATA_CODE,'&&'))  
		AND CODE_DESC= NVL(#companyName#, CODE_DESC) AND AGENT_YN = 'Y' AND ACTIVE='Y'
		]]>
		
	
	</select>
		<select id="admin_collectiontime_getCollectionTimeSearchList"  parameterClass="cargo.cms.admin.bo.CustomerSearchBO"  
                     resultClass="cargo.cms.admin.bo.CollectionTimeBO">
                     SELECT distinct C.CODE_DESC as companyName, 
                                        T.CUST_NO as custNo, 
                                        (select RULE_VALUE||' '||RULE_DESC from cmsrules where rule_code = 'CUT_OFF_TIME') as cutOffTime,
                                        C.CO_IATA_CODE as iataCode,
                                        Lpad(T.TIME_FROM,4,0) as timeFrom, 
                                        LPAD(T.TIME_TO,4,0) as timeTo, 
                                        T.DAY_FRQ as dayFrq, 
                                        T.RMK as rmk,
                                        T.PURPOSE as purpose,
                                        T.TR_NO as trNo
                      FROM  
                      CUST_COMPANY C   ,                   
                     CUST_AGENT_SCH_COLL_TIME T                 
                     LEFT OUTER JOIN 
                     CUST_AGENT_SCH_COLL_TRUCK_DOCK TD ON T.tr_no= TD.tr_no
                    
                    where C.AGENT_YN = 'Y' AND C.ACTIVE = 'Y' AND C.BLACKLISTED='N'
                    and T.CUST_NO = C.CODE AND EFF_TO >= TO_CHAR(SYSDATE,'DDMONYY')                   
                    	
					<isNotEmpty property="purpose" prepend="AND">
						 UPPER(PURPOSE)=UPPER(#purpose#)
					</isNotEmpty>			
					<isNotEmpty property="customerNo" prepend="AND">
						 T.CUST_NO =#customerNo#
					</isNotEmpty>		
					<isNotEmpty property="companyName" prepend="AND">
						C.CODE_DESC =#companyName#	
					</isNotEmpty>
					<isNotEmpty property="iataCode" prepend="AND">
						  C.CO_IATA_CODE =#iataCode#
					</isNotEmpty>
					<isNotEmpty property="dayFrq" prepend="AND">
						DAY_FRQ like(#dayFrq#)
					</isNotEmpty>
					<isNotEmpty property="fromHourMinute" prepend="AND">
						 TIME_FROM &gt;=(#fromHourMinute#)
					</isNotEmpty>
					<isNotEmpty property="toHourMinute" prepend="AND">
						TIME_TO &lt;=(#toHourMinute#)
					</isNotEmpty>
					<isNotEmpty property="truckDock" prepend="AND">
						TD.TRUCK_DOCK =#truckDock#	
					</isNotEmpty>
					
					
				
                    
     </select>
     <select id="admin_collectiontime_getCollectionTimeList"  parameterClass="cargo.cms.admin.bo.CustomerSearchBO"  
                     resultClass="cargo.cms.admin.bo.CollectionTimeBO">
                     SELECT C.CODE_DESC as companyName, 
                                        T.CUST_NO as custNo, 
                                        (select RULE_VALUE||' '||RULE_DESC from cmsrules where rule_code = 'CUT_OFF_TIME') as cutOffTime,
                                        C.CO_IATA_CODE as iataCode,
                                        T.TIME_FROM as timeFrom, 
                                        T.TIME_TO as timeTo, 
                                        T.DAY_FRQ as dayFrq, 
                                        T.RMK as rmk,
                                        T.PURPOSE as purpose,
                                        T.TR_NO as trNo
                     FROM CUST_AGENT_SCH_COLL_TIME T ,CUST_COMPANY C
                     WHERE T.CUST_NO = #customerNo# and C.CODE = T.CUST_NO
                   <dynamic prepend="AND">
                       <isNotEmpty property="purpose">
                                       UPPER(PURPOSE)=UPPER(#purpose#)
                       </isNotEmpty>                                                                 
                   </dynamic>
                   <dynamic prepend="AND">
                  <isNotEmpty property="dayFrq">
                                  UPPER(DAY_FRQ)=UPPER(#dayFrq#)
                  </isNotEmpty>                                                              
          </dynamic>        
     </select>
	<select id="admin_collectiontime_getCollectionTime_truckDocList"  parameterClass="java.lang.String"  
            resultClass="cargo.cms.admin.bo.CollectionTruckDockBO">
            SELECT TRUCK_DOCK as truckDock , 'Y' newOld 
            FROM CUST_AGENT_SCH_COLL_TRUCK_DOCK
            WHERE TR_NO = #trNo#
     </select>
     <delete id="admin_collectiontime_deleteTime_truckDock" parameterClass="map">
		DELETE FROM CUST_AGENT_SCH_COLL_TRUCK_DOCK 
		WHERE TR_NO = #trNo#
	</delete>
     <insert id="admin_collectiontime_insertTime_truckDock"
          parameterClass="cargo.cms.admin.bo.CollectionTruckDockBO">
          INSERT INTO CUST_AGENT_SCH_COLL_TRUCK_DOCK
          (TR_NO, TRUCK_DOCK, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE)
          VALUES
          (#trNo#,#truckDock#,#modifiedUserId#,sysdate,#modifiedUserId#,sysdate)
     </insert>
      <select id="admin_collectiontime_getCollectionTime"  parameterClass="map"  
                      resultClass="cargo.cms.admin.bo.CollectionTimeBO">
                      SELECT C.CODE_DESC as companyName, 
                                         T.CUST_NO as custNo, 
                                         C.CO_IATA_CODE as iataCode,
                                         Lpad(T.TIME_FROM,4,0) as timeFrom, 
                                         LPAD(T.TIME_TO,4,0) as timeTo, 
                                         TO_CHAR( T.EFF_FROM, 'DDMONYY') as effFrom,
                                         TO_CHAR( T.EFF_TO, 'DDMONYY') as effTo,
                                         T.DAY_FRQ as dayFrq,
                                         (select code_desc from MAST_CODE_DTL WHERE CODE_TYPE='COLL_PURPOSE' AND CODE=T.PURPOSE) as purpose, 
                                         T.RMK as rmk,
                                         T.TR_NO as trNo
                      FROM CUST_AGENT_SCH_COLL_TIME T LEFT JOIN CUST_COMPANY C
                      ON C.CODE = T.CUST_NO
                      WHERE TR_NO = #trNo#
      </select>
	<select id="admin_collectiontime_checkClashTruckDoc"  
		parameterClass="cargo.cms.admin.bo.CollectionTimeBO"  
		resultClass="java.lang.Integer">
		<!-- SELECT COUNT (*)
		FROM CUST_AGENT_SCH_COLL_TIME
		WHERE
			 CUST_NO = #custNo# AND
			 TR_NO != #trNo# AND
			 (
			  	   (TIME_FROM <= #timeFrom# AND TIME_TO >= #timeFrom#)
				   OR (TIME_FROM <= #timeTo# AND TIME_TO >= #timeTo#)
				   OR (TIME_FROM >= #timeFrom# AND TIME_TO <= #timeTo#)
			 ) AND 
			 EFF_from not between to_Date(#effFrom#,'DDMONYY') and to_Date(#effTo#,'DDMONYY') 
			and eff_to not between to_Date(#effFrom#,'DDMONYY') and to_Date(#effTo#,'DDMONYY') 
			and INSTR(DAY_FRQ, #day#) > 0 -->
		
		<![CDATA[
                  SELECT COUNT (*)
                  FROM CUST_AGENT_SCH_COLL_TIME t1 , CUST_AGENT_SCH_COLL_TRUCK_DOCK t2 
                  WHERE  t1.Tr_no = t2.TR_NO and                         
                   (
                           (t1.TIME_FROM <= #timeFrom# AND t1.TIME_TO >= #timeFrom#)
                           OR (t1.TIME_FROM <= #timeTo# AND t1.TIME_TO >= #timeTo#)
                           OR (t1.TIME_FROM >= #timeFrom# AND t1.TIME_TO <= #timeTo#)
                   ) AND 
                   (
(t1.EFF_from <= TO_DATE(#effFrom#, 'DD-MON-YY') AND t1.eff_to >= TO_DATE(#effFrom#, 'DD-MON-YY'))
                           OR (t1.EFF_from <= TO_DATE(#effTo#, 'DD-MON-YY') AND t1.eff_to >= TO_DATE(#effTo#, 'DD-MON-YY'))
                           OR (t1.EFF_from >= TO_DATE(#effFrom#, 'DD-MON-YY') AND t1.eff_to <= TO_DATE(#effTo#, 'DD-MON-YY')))
                  and INSTR(t1.DAY_FRQ, #day#) > 0 and t2.TRUCK_DOCK = #truckDock#
                  
            ]]>
             <isNotEmpty property="trNo">
                  AND   t1.TR_NO != #trNo# 
            </isNotEmpty>
            
           
                 

	 </select>
	 
	 <select id="admin_collectiontime_checkClashAgent"  
		parameterClass="cargo.cms.admin.bo.CollectionTimeBO"  
		resultClass="java.lang.Integer">
		<!-- SELECT COUNT (*)
		FROM CUST_AGENT_SCH_COLL_TIME
		WHERE
			 CUST_NO = #custNo# AND
			 TR_NO != #trNo# AND
			 (
			  	   (TIME_FROM <= #timeFrom# AND TIME_TO >= #timeFrom#)
				   OR (TIME_FROM <= #timeTo# AND TIME_TO >= #timeTo#)
				   OR (TIME_FROM >= #timeFrom# AND TIME_TO <= #timeTo#)
			 ) AND 
			 EFF_from not between to_Date(#effFrom#,'DDMONYY') and to_Date(#effTo#,'DDMONYY') 
			and eff_to not between to_Date(#effFrom#,'DDMONYY') and to_Date(#effTo#,'DDMONYY') 
			and INSTR(DAY_FRQ, #day#) > 0 -->
		
		<![CDATA[
                  SELECT COUNT (*)
                  FROM CUST_AGENT_SCH_COLL_TIME t1
                  WHERE  
                   (
                           (t1.TIME_FROM <= #timeFrom# AND t1.TIME_TO >= #timeFrom#)
                           OR (t1.TIME_FROM <= #timeTo# AND t1.TIME_TO >= #timeTo#)
                           OR (t1.TIME_FROM >= #timeFrom# AND t1.TIME_TO <= #timeTo#)
                   ) AND 
                   (
(t1.EFF_from <= TO_DATE(#effFrom#, 'DD-MON-YY') AND t1.eff_to >= TO_DATE(#effFrom#, 'DD-MON-YY'))
                           OR (t1.EFF_from <= TO_DATE(#effTo#, 'DD-MON-YY') AND t1.eff_to >= TO_DATE(#effTo#, 'DD-MON-YY'))
                           OR (t1.EFF_from >= TO_DATE(#effFrom#, 'DD-MON-YY') AND t1.eff_to <= TO_DATE(#effTo#, 'DD-MON-YY')))
                  and INSTR(t1.DAY_FRQ, #day#) > 0 
                  and t1.CUST_NO = #custNo#
                  and t1.purpose = #purpose#
            ]]>
             <isNotEmpty property="trNo">
                  AND   t1.TR_NO != #trNo# 
            </isNotEmpty>     

            
           
                 

	 </select>
     <update id="admin_collectiontime_updateTime" 
            parameterClass="cargo.cms.admin.bo.CollectionTimeBO">
            UPDATE CUST_AGENT_SCH_COLL_TIME SET
                            TIME_FROM =     #timeFrom#,
                            TIME_TO =       #timeTo#,
                            EFF_FROM =      TO_DATE(#effFrom#,'DDMONYY'),
                            EFF_TO =        TO_DATE(#effTo#,'DDMONYY'),
                            DAY_FRQ =       #dayFrq#,
                            RMK =                                   #rmk#,
                            LM_USER_ID =    #modifiedUserId#,
                            LM_DATE =         sysdate
            WHERE           TR_NO = #trNo#
    </update>
    <update id="admin_collectiontime_updateTruck" 
                    parameterClass="cargo.cms.admin.bo.CollectionTimeBO">
                    UPDATE CUST_AGENT_SCH_COLL_TRUCK_DOCK SET
                                    TRUCK_DOCK =     #truckDock#,
                                    LM_USER_ID =    #modifiedUserId#,
                                    LM_DATE =         sysdate
                    WHERE
                                    TR_NO = #trNo#
    </update>
	<delete id="admin_collectiontime_deleteTime" parameterClass="map">
		DELETE FROM CUST_AGENT_SCH_COLL_TIME 
		WHERE TR_NO = #trNo#
	</delete>
	
	<select id="admin_collection_checkForTruckDockOverlaping"  parameterClass="cargo.cms.admin.bo.CollectionTimeBO" resultClass="java.lang.Integer">
	<![CDATA[
	select count(*) from CUST_AGENT_SCH_COLL_TIME t1 , CUST_AGENT_SCH_COLL_TRUCK_DOCK t2 
			where t1.Tr_no = t2.TR_NO and 			
			(t1.time_from between to_number(#timeFrom#) and to_number(#timeTo#)
			or t1.time_TO between to_number(#timeFrom#) and to_number(#timeTo#))
			and
			(t1.EFF_from between to_Date(#effFrom#,'DDMONYY') and to_Date(#effTo#,'DDMONYY') 
			or t1.eff_to between to_Date(#effFrom#,'DDMONYY') and to_Date(#effTo#,'DDMONYY')) 
			and t2.TRUCK_DOCK = #truckDock#
	]]>
	  <isNotEmpty property="trNo">
                  AND   t1.TR_NO != #trNo# 
            </isNotEmpty>
	</select>
	 <delete id="collectiontime_deleteTruckDockTrno" parameterClass="cargo.cms.admin.bo.CollectionTruckDockBO">
		DELETE FROM CUST_AGENT_SCH_COLL_TRUCK_DOCK 
		WHERE TR_NO = #trNo#
	</delete>
	 <delete id="collectiontime_deleteTruckDock" parameterClass="cargo.cms.admin.bo.CollectionTruckDockBO">
		DELETE FROM CUST_AGENT_SCH_COLL_TRUCK_DOCK 
		WHERE TR_NO = #trNo# and TRUCK_DOCK = #truckDock#
	</delete>
	<!-- Maintain Schedule Collection Time End -->
	<select id="getCountryCodeforHoliday" parameterClass="java.lang.String" resultClass="java.lang.String">
	<![CDATA[
	SELECT CODE AS codeId FROM MAST_COUNTRY WHERE CODE_DESC=#param# ORDER BY CODE
	]]>
	</select>
	
	<select id="fetchWhProfileDetails"  parameterClass="cargo.cms.admin.bo.MaintainWhProfileBO" resultClass="cargo.cms.admin.bo.MaintainWhProfileBO">
         SELECT loc.code as locationId, loc.code as oldLocationId, loc.code_desc as locationDesc, loc.wh_group as groupId,loc.PREANNOUNCEMENT_IND as target,
         typ.wh_type as whType,
         typ.wh_type_desc as groupType,grp.wh_area as areaId, area.wh_area_desc as areaDesc, loc.CURR_LOCATION as currLoc, loc.MOVABLE as locMovable,
         loc.LOC_LEVEL locLevel, loc.LOC_SIDE locSide,
         loc.SCALE_ID as weighingScale,loc.PRINTER_ID as printerType, loc.SCDC_PRINTER_ID as scdcPrinter,
         TO_CHAR(loc.LM_DATE,'DDMONYY HH24:MI:SS') AS lastModDate,
         NEXT_LOC AS nextLoc,loc.CHKOUT_IND chkOutInd,loc.ACCPT_LOCN as acceptLocn, loc.SHOW_LOC_ULD_ENQ as showInULDEnq
         FROM MAST_WH_LOC loc, MAST_WH_TYPE typ, MAST_WH_GROUP grp left outer join
         MAST_WH_AREA area on grp.wh_area = area.wh_area
         WHERE loc.wh_group = grp.wh_group and grp.wh_type = typ.wh_type                          
           <isNotEmpty property="groupType" prepend="AND">
               typ.wh_type = #groupType# 
           </isNotEmpty>
           <isNotEmpty property="area" prepend="AND">
               grp.wh_area like UPPER(#area#) 
           </isNotEmpty>
           <isNotEmpty property="group" prepend="AND">
               grp.wh_group like UPPER(#group#) 
           </isNotEmpty>
           <isNotEmpty property="location" prepend="AND">
               loc.code like UPPER(#location#) 
           </isNotEmpty>
       	order by loc.code
	</select>
	
	<select id="fetchWhProfileSHCDetails"  parameterClass="cargo.cms.admin.bo.MaintainWhProfileBO" resultClass="cargo.cms.admin.bo.MaintainWhProfileBO">
	SELECT CODE AS shcCode,CODE_DESC AS shcDesc FROM MAST_SPL_HAND_CODE ORDER BY CODE
    </select>
    
    <select id="fetchWhProfileSHCStatusDetails"  parameterClass="cargo.cms.admin.bo.MaintainWhProfileBO" resultClass="cargo.cms.admin.bo.MaintainWhProfileBO">
	SELECT LOC_CODE AS locationId,SHC as shcCode FROM SHC_RESTRICT_LOC
    </select>
    
	
	
	
	<select id="fetchArea"  parameterClass="cargo.cms.admin.bo.MaintainWhProfileBO" resultClass="java.lang.Integer">
	<![CDATA[
		select count(1) from MAST_WH_AREA where wh_area like #area#
	]]>
	</select>
	<select id="checkDuplicateLocationId"  parameterClass="java.lang.String" resultClass="java.lang.Integer">
	<![CDATA[
		select count(1) from MAST_WH_LOC where CODE = #locationId#
	]]>
	</select>
	<select id="fetchGroup"  parameterClass="cargo.cms.admin.bo.MaintainWhProfileBO" resultClass="java.lang.Integer">
	<![CDATA[
		select count(1) from MAST_WH_GROUP where wh_group like #group#
	]]>
	</select>
	<select id="fetchLocn"  parameterClass="cargo.cms.admin.bo.MaintainWhProfileBO" resultClass="java.lang.Integer">
	<![CDATA[
		select count(1) from MAST_WH_LOC where code like #location#
	]]>
	</select>
	<select id="fetchLocnIdDetails"  parameterClass="cargo.cms.admin.bo.MaintainWhProfileBO" resultClass="cargo.cms.admin.bo.MaintainWhProfileBO">
	<![CDATA[
		 select code as locationId, code_desc as locationDesc, code as location from MAST_WH_LOC ORDER BY code
	]]>
	</select>
	   
	<select id="fetchSHCDetailsForSHCList"  parameterClass="cargo.cms.admin.bo.MaintainWhProfileBO" resultClass="cargo.cms.admin.bo.MaintainWhProfileBO">
	SELECT #locationId# AS locationId,
	       #groupId# AS groupId,
		   MS.CODE AS shcCode,
           MS.CODE_DESC AS shcDesc,       
           DECODE(SRL.SHC,'','N','Y') as checkStatus
           FROM
           MAST_SPL_HAND_CODE MS
           LEFT JOIN shc_restrict_loc SRL ON SRL.SHC=MS.CODE AND SRL.LOC_CODE=#locationId#
           ORDER BY shcCode
	</select>
	   
	   
	<select id="checkAWB_Inventory"  parameterClass="cargo.cms.admin.bo.MaintainWhProfileBO" resultClass="java.lang.Integer">
	<![CDATA[
		select count(1) from AWB_Inventory where LOC_CODE = #locationId#
	]]>
	</select>
	<select id="checkULD_inventory"  parameterClass="cargo.cms.admin.bo.MaintainWhProfileBO" resultClass="java.lang.Integer">
	<![CDATA[
		select count(1) from ULD_inventory where LOC_CODE = #locationId#
	]]>
	</select>
	<select id="checkLSP_inventory"  parameterClass="cargo.cms.admin.bo.MaintainWhProfileBO" resultClass="java.lang.Integer">
	<![CDATA[
		select count(1) from LSP_inventory where LOC_CODE = #locationId#
	]]>
	</select>
		   
	<select id="fetchGroupDetailsForLocationList"  parameterClass="cargo.cms.admin.bo.MaintainWhProfileBO" resultClass="cargo.cms.admin.bo.MaintainWhProfileBO">
	<![CDATA[
		SELECT t1.WH_GROUP as groupId, t2.wh_type as whType, t2.WH_TYPE_DESC as groupType,t1.WH_AREA as areaId FROM MAST_WH_GROUP t1,
    	MAST_WH_TYPE t2  WHERE t1.WH_TYPE = t2.WH_TYPE AND t1.WH_GROUP = #groupId# 
	]]>
	</select>
	<insert id="sqlInsertLocationList" parameterClass="cargo.cms.admin.bo.MaintainWhProfileBO"  >
  		INSERT INTO MAST_WH_LOC(CODE,CODE_DESC,TML_CODE,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,WH_GROUP,
  		PREANNOUNCEMENT_IND,MOVABLE,CURR_LOCATION,LOC_LEVEL,LOC_SIDE,SCALE_ID,PRINTER_ID,NEXT_LOC, SCDC_PRINTER_ID,CHKOUT_IND,ACCPT_LOCN,SHOW_LOC_ULD_ENQ)
		values(#locationId#,#locationDesc#,'T1',#userId#,sysdate,#userId#,sysdate,#groupId#,#target#,#locMovable#,#currLoc#,#locLevel#,#locSide#,#weighingScale#,#printerType#,#nextLoc#,#scdcPrinter#,#chkOutInd#,#acceptLocn#,#showInULDEnq#)
	</insert>
    <delete id="DeletedataInRestriciedSHC" parameterClass="cargo.cms.admin.bo.MaintainWhProfileBO">
		DELETE FROM SHC_RESTRICT_LOC WHERE LOC_CODE = #locationId#
	</delete>
	
	<insert id="insertdataInToRestrictedSHC" parameterClass="cargo.cms.admin.bo.MaintainWhProfileBO"  >
  		INSERT INTO SHC_RESTRICT_LOC(LOC_CODE,WH_GROUP,SHC,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE) VALUES
  		(#locationId#,#groupId#,#shcCode#,#userId#,SYSDATE,#userId#,SYSDATE)
	</insert>
	
	<insert id="SaveDataInMastCCCode" parameterClass="cargo.cms.admin.bo.CCPaccoConfigBO"  >
  		INSERT INTO MAST_CC_DOC_LIST(CC,CATEGORY,DOC_NAME,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE) VALUES
  		(#ccCode#,#catageory#,#docName#,#userName#,SYSDATE,#userName#,SYSDATE)
	</insert>
	
	<insert id="saveDataInMastCCAction" parameterClass="cargo.cms.admin.bo.CCPaccoConfigBO">
  		INSERT INTO MAST_CC_ACTION_LIST(CC,CATEGORY,ACTION_NAME,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE) VALUES
  		(#ccCode#,#catageory#,#actionname#,#userName#,SYSDATE,#userName#,SYSDATE)
	</insert>
	
	<select id="checkDuplicatePaccoinDoc"  parameterClass="cargo.cms.admin.bo.CCPaccoConfigBO"  resultClass="java.lang.Integer">
		SELECT COUNT(*) FROM MAST_CC_DOC_LIST WHERE CC=#ccCode# AND CATEGORY=#catageory# AND DOC_NAME=#docName#
    </select>
	
	<select id="checkDuplicatePaccoinAction"  parameterClass="cargo.cms.admin.bo.CCPaccoConfigBO"  resultClass="java.lang.Integer">
		SELECT COUNT(*) FROM MAST_CC_ACTION_LIST WHERE CC=#ccCode# AND CATEGORY=#catageory# AND ACTION_NAME=#actionname#
    </select>
	
	<select id="FETCH_DOC_LIST_VALUES"  parameterClass="cargo.cms.admin.bo.CCPaccoConfigBO"  resultClass="cargo.cms.admin.bo.CCPaccoConfigBO">
	      SELECT MC.CODE AS ccCode,
                MC.CC_CATEGORY AS catageory,
                ML.DOC_NAME AS docName,
                MC.IMM_CHK_IND AS immChkInd 
           FROM 
                MAST_CONSTRAINT_CODE MC 
      LEFT JOIN MAST_CC_DOC_LIST ML ON MC.CODE= ML.CC
          WHERE
                MC.CODE = #ccCode#
    </select>
	
	<select id="FETCH_ACTION_LIST_VALUES"  parameterClass="cargo.cms.admin.bo.CCPaccoConfigBO"  resultClass="cargo.cms.admin.bo.CCPaccoConfigBO">
		SELECT MC.CODE AS ccCode,
                MC.CC_CATEGORY AS catageory,
                ML.ACTION_NAME AS actionname,
                MC.IMM_CHK_IND AS immChkInd 
           FROM 
               MAST_CONSTRAINT_CODE MC
      LEFT JOIN  MAST_CC_ACTION_LIST ML ON MC.CODE= ML.CC
          WHERE
                MC.CODE = #ccCode#
    </select>
    <delete id="DELETE_UPDATE_DOC_LIST" parameterClass="cargo.cms.admin.bo.CCPaccoConfigBO">
		delete FROM MAST_CC_DOC_LIST WHERE CC= #ccCode# and DOC_NAME = #docName# 
	</delete>
    
    <delete id="DELETE_UPDATE_ACTION_LIST" parameterClass="cargo.cms.admin.bo.CCPaccoConfigBO">
		delete FROM MAST_CC_ACTION_LIST WHERE CC= #ccCode# and ACTION_NAME = #actionname# 
	</delete>
    
    <delete id="DELETE_DATA_DOC_LIST" parameterClass="cargo.cms.admin.bo.CCPaccoConfigBO">
		delete FROM MAST_CC_DOC_LIST WHERE CC= #ccCode#
	</delete>
    
    <delete id="DELETE_DATA_ACTION_LIST" parameterClass="cargo.cms.admin.bo.CCPaccoConfigBO">
		delete FROM MAST_CC_ACTION_LIST WHERE CC= #ccCode# 
	</delete>
    
    <update id="UPDATE_CCCODE_MAST_CCCODE" parameterClass="cargo.cms.admin.bo.CCPaccoConfigBO">	
    UPDATE MAST_CONSTRAINT_CODE SET CC_CATEGORY = #catageory#,IMM_CHK_IND=#immChkInd# WHERE CODE = #ccCode#
    </update>
    
	
	<update id="updateLocationList" parameterClass="cargo.cms.admin.bo.MaintainWhProfileBO">
	<![CDATA[
		update MAST_WH_LOC 
		set CODE_DESC = #locationDesc#,
			WH_GROUP = #groupId#,
			MOVABLE = #locMovable#,
			CURR_LOCATION = #currLoc#,
			PREANNOUNCEMENT_IND = #target#,
			LOC_LEVEL = #locLevel#,
			LOC_SIDE = #locSide#,
			LM_DATE = SYSDATE,
			SCALE_ID=#weighingScale#,
			PRINTER_ID=#printerType#,
			NEXT_LOC = #nextLoc#,
			SCDC_PRINTER_ID=#scdcPrinter#,
			CHKOUT_IND=#chkOutInd#,
			ACCPT_LOCN=#acceptLocn#,
			SHOW_LOC_ULD_ENQ=#showInULDEnq#
		where CODE = #locationId# and to_char(LM_DATE, 'DDMONYY HH24:MI:SS') = #lastModDate#
		]]>
	</update>
	<delete id="deleteLocationList" parameterClass="cargo.cms.admin.bo.MaintainWhProfileBO">
		DELETE FROM MAST_WH_LOC WHERE CODE=#locationId# AND to_char(LM_DATE, 'DDMONYY HH24:MI:SS') = #lastModDate#
	</delete>

<select id="carriergrouplist"  parameterClass="java.lang.String"  resultClass="cargo.cms.admin.bo.MtnCarrGrpBO">
	<![CDATA[
	SELECT GRP_CARR_CODE AS carrier FROM MAST_CARR_GRP  ORDER BY GRP_CARR_CODE	
	]]>
</select>

<select id="carriergroupretrieve"  parameterClass="cargo.cms.admin.bo.MtnCarrGrpBO"  resultClass="cargo.cms.admin.bo.MtnCarrGrpBO">
		SELECT CARR_CODE as carrCode,GRP_CARR_CODE as carrier
			FROM MAST_CARR_GRP
		WHERE upper(GRP_CARR_CODE) = upper(#carrier#) ORDER BY CARR_CODE
</select>

<select id="mcgForvalidate"  parameterClass="java.lang.String"  resultClass="cargo.cms.admin.bo.MtnCarrGrpBO">
		SELECT CODE as carrier
			FROM MAST_CARRIER
		WHERE upper(CODE) = upper(#carrier#)
</select>

<select id="mcgForvalidateOwned"  parameterClass="java.lang.String"  resultClass="cargo.cms.admin.bo.MtnCarrGrpBO">
		SELECT CODE as carrier
			FROM MAST_CARRIER
		WHERE upper(CODE) = upper(#carrier#) and OWNED_CARR='Y'
</select>

<select id="mcgForvalidatecarrCode"  parameterClass="java.lang.String"  resultClass="cargo.cms.admin.bo.MtnCarrGrpBO">
		SELECT CODE as carrCode
			FROM MAST_CARRIER
		WHERE upper(CODE) = upper(#carrCode#)
</select>

<select id="mcgForvalidatecarrCodeOwned"  parameterClass="java.lang.String"  resultClass="cargo.cms.admin.bo.MtnCarrGrpBO">
		SELECT CODE as carrCode
			FROM MAST_CARRIER
		WHERE upper(CODE) = upper(#carrCode#) and OWNED_CARR='Y'
</select>

<delete id="carriergroupdelete" parameterClass="cargo.cms.admin.bo.MtnCarrGrpBO">
		DELETE FROM MAST_CARR_GRP WHERE upper(CARR_CODE)=upper(#carrCode#) AND upper(GRP_CARR_CODE)=upper(#carrier#)
</delete>

<insert id="sqlinsertcarriergroup" parameterClass="cargo.cms.admin.bo.MtnCarrGrpBO">
  		INSERT INTO MAST_CARR_GRP(GRP_CARR_CODE,CARR_CODE)
		values(#carrier#,#carrCode#)
</insert>



<delete id="carriergroupdeleteAll" parameterClass="cargo.cms.admin.bo.MtnCarrGrpBO">
		DELETE FROM MAST_CARR_GRP WHERE upper(GRP_CARR_CODE)=upper(#carrier#)
</delete>

<select id="carriergroupretrieveForvalidate"  parameterClass="java.lang.String"  resultClass="java.lang.Integer">
		SELECT count(*)
			FROM MAST_CARR_GRP
		WHERE upper(GRP_CARR_CODE) = upper(#carrCode#)
</select>
	
		
<select id="carriergroupretrieveForValidation"  parameterClass="java.lang.String"  resultClass="java.lang.Integer">
			SELECT count(*)
				FROM MAST_CARR_GRP
			WHERE upper(CARR_CODE) = upper(#carrier#)
</select>
		
		
<select id="parentForvalidate"  parameterClass="java.lang.String"  resultClass="java.lang.Integer">
		SELECT count(*)
			FROM MAST_CARR_GRP
		WHERE upper(CARR_CODE) = upper(#carrier#)
</select>
	
<select id="childForvalidate"  parameterClass="cargo.cms.admin.bo.MtnCarrGrpBO"  resultClass="java.lang.String">
		SELECT GRP_CARR_CODE
			FROM MAST_CARR_GRP
		WHERE upper(CARR_CODE) = upper(#carrCode#) and upper(GRP_CARR_CODE)!=upper(#carrier#)
</select>
		
		<select id="fetchSHCTempDetails" parameterClass="cargo.cms.admin.bo.MaintainUNIDMasterBO" resultClass="cargo.cms.admin.bo.MaintainUNIDMasterBO">	
		SELECT TR_NO AS seqNo,SHC AS shcTemp,DFLT_TEMP AS defaultTemp,LOW_TEMP AS lowTemp,HIGH_TEMP AS highTemp FROM MAST_SHC_TEMP
        WHERE 1=1
        <isNotEmpty property="seqNo">
		AND TR_NO = #seqNo#
		</isNotEmpty>		
		<isNotEmpty property="shcTemp">
		AND SHC LIKE '%'||#shcTemp#||'%'
		</isNotEmpty>			
		ORDER BY TR_NO DESC	
        </select>	
	<insert id="insertSHCTempDetails" parameterClass="cargo.cms.admin.bo.MaintainUNIDMasterBO"  >
    INSERT INTO MAST_SHC_TEMP(TR_NO,SHC,DFLT_TEMP,LOW_TEMP,HIGH_TEMP,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE) 
    VALUES (MAST_SHC_TEMP_SEQ.NEXTVAL,#shcTemp#,#defaultTemp#,#lowTemp#,#highTemp#,#userId#,sysdate,#userId#,sysdate)
	</insert>
	<update id="updateSHCTempDetails" parameterClass="cargo.cms.admin.bo.MaintainUNIDMasterBO"  >
	<![CDATA[
		UPDATE MAST_SHC_TEMP 
		SET SHC = #shcTemp#,
			DFLT_TEMP = #defaultTemp#,
			LOW_TEMP = #lowTemp#,
			HIGH_TEMP = #highTemp#,
			LM_USER_ID = #userId#,
			LM_DATE=SYSDATE
		WHERE TR_NO = #seqNo#
		]]>
	</update>
	<delete id="deleteSHCTempDetails" parameterClass="cargo.cms.admin.bo.MaintainUNIDMasterBO">
		DELETE FROM MAST_SHC_TEMP WHERE TR_NO = #seqNo#
	</delete>
<select id="fetchUNIDDetails" parameterClass="cargo.cms.admin.bo.MaintainUNIDMasterBO" resultClass="cargo.cms.admin.bo.MaintainUNIDMasterBO">	
		SELECT UN_ID as unid, PSN as psn, SPL_CODE1 as shc1, SPL_CODE2 as shc2, SPL_CODE3 as shc3,
		DRILL_CODE as drillCode, CL_DV as cl_dv, SR1 as sr1, SR2 as sr2, TO_CHAR(LM_DATE,'DDMONYY HH24:MI:SS') AS lastModDate
		FROM MAST_UNID
		<dynamic prepend="WHERE">		
		<isNotEmpty property="unid" prepend="AND">
			UPPER(UN_ID) = UPPER(#unid#)
		</isNotEmpty>			
		</dynamic>	
		order by unid asc
	</select>	
	<insert id="insertUNIDDetails" parameterClass="cargo.cms.admin.bo.MaintainUNIDMasterBO"  >
  		INSERT INTO MAST_UNID(UN_ID,PSN,SPL_CODE1,SPL_CODE2,SPL_CODE3,DRILL_CODE,CL_DV,SR1,SR2,CR_USER_ID,
      	CR_DATE,LM_USER_ID,LM_DATE) values(#unid#,#psn#,#shc1#,#shc2#,#shc3#,#drillCode#,#cl_dv#,
      	#sr1#,#sr2#,#userId#,sysdate,#userId#,sysdate)
	</insert>	
	<update id="updateUNIDDetails" parameterClass="cargo.cms.admin.bo.MaintainUNIDMasterBO"  >
	<![CDATA[
		update MAST_UNID 
		set PSN = #psn#,
			SPL_CODE1 = #shc1#,
			SPL_CODE2 = #shc2#,
			SPL_CODE3 = #shc3#,
			DRILL_CODE = #drillCode#,
			CL_DV = #cl_dv#,
			SR1 = #sr1#,
			SR2 = #sr2#,
			LM_DATE=SYSDATE
		where UN_ID = #unid# AND to_char(LM_DATE, 'DDMONYY HH24:MI:SS') = #lastModDate#
		]]>
	</update>	
	<delete id="deleteUNIDDetails" parameterClass="cargo.cms.admin.bo.MaintainUNIDMasterBO">
		DELETE FROM MAST_UNID WHERE UN_ID = #unid# AND to_char(LM_DATE, 'DDMONYY HH24:MI:SS') = #lastModDate#
	</delete>
	<select id="dateTimecomparison" parameterClass="map" resultClass="java.lang.String">
       SELECT TO_DATE(#ToDate#,'DDMONYY HH24MI')  - TO_DATE(#FromDate#,'DDMONYY HH24MI')  FROM DUAL       
    </select>
    
    <select id="getFromStatusinschedule" parameterClass="java.lang.String" resultClass="java.lang.String">
       SELECT TO_CHAR(TO_DATE(sysdate,'DD-MON-YY') - TO_DATE(#effFrom#,'DD-MON-YY')) DAYDIFF FROM DUAL 
    </select>
    <select id="getToStatusinschedule" parameterClass="java.lang.String" resultClass="java.lang.String">
       SELECT TO_DATE(#effTo#,'DD-MON-YY HH24MI')  - TO_DATE(sysdate,'DD-MON-YY HH24MI') DAYDIFF FROM DUAL          
    </select>
    
	
	<parameterMap id="hmPWDValidator" class="map" >
		<parameter property="ERR_MSG" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
		<parameter property="V_USR" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="V_NEW_PASSWD" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="V_VAL" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
	</parameterMap>
	<procedure id="validatepwdtest" parameterMap="hmPWDValidator" >
		{? = call PKG_SECURITY.FUN_CHECK_CHG_PASSWD(?,?,?) }
	</procedure>
	
	<select id="fetchMastIntChk" parameterClass="map" resultClass="cargo.cms.admin.bo.IntelligentChkConfBO">
	
		SELECT TR_NO AS trNo,CARR_CODE AS carrCode, FUNCTION_CODE AS functionCode, FLOW_TYPE AS flowType, ORIG as orig, SHPR_NAME as shprName,
	    LIC_CNTR AS licenseCntr, CST_CNTR AS customCntr, SPL_CODE1 AS splCode1, SPL_CODE2 AS splCode2, SPL_CODE3 AS splCode3,
	    CONTENT AS content, DEST AS destination, CSGN_NAME AS consigneeName, NO_LIC AS noLicense, CNSL AS consolShpmt, 
	    FHL_SHPR_NAME AS fhlShipperName, FHL_LIC_CNTR AS fhlLicenseCntr, FHL_CST_CNTR AS fhlCustomCntr,FHL_CSGN_NAME AS fhlConsigneeName,
	    FHL_NO_LIC AS fhlNoLicense,FHL_CONTENT AS fhlContent,RMK AS remarks,CUBIC_YN AS cubicYN,GLS_YN AS glsYN,RULE_NO as ruleNo,
	    to_char(LM_DATE,'ddMONYY HH24:MI:SS') AS lmDate from MAST_INT_CHK 
	    WHERE
	    <isNotEmpty property="carrierCode">
			CARR_CODE = #carrierCode#
		</isNotEmpty>
		<isNotEmpty property="functionCode">
			<isNotEmpty property="carrierCode">
				AND FUNCTION_CODE = #functionCode#
			</isNotEmpty>
			<isEmpty property="carrierCode">
				FUNCTION_CODE = #functionCode#
			</isEmpty>
		</isNotEmpty>
	    <isNotEmpty property="ruleNo">
			AND RULE_NO = #ruleNo#
		</isNotEmpty>
		<isNotEmpty property="content">
			AND CONTENT = #content#
		</isNotEmpty>
		<isNotEmpty property="flowType">
			AND FLOW_TYPE = #flowType#
		</isNotEmpty>
		<isNotEmpty property="orig">
			AND ORIG = #orig#
		</isNotEmpty>
		<isNotEmpty property="destination">
			AND DEST = #destination#
		</isNotEmpty>
		<isNotEmpty property="shprName">
			AND SHPR_NAME = #shprName#
		</isNotEmpty>
		<isNotEmpty property="consigneeName">
			AND CSGN_NAME = #consigneeName#
		</isNotEmpty>
		<isNotEmpty property="splCode1">
			AND (SPL_CODE1 = #splCode1# OR SPL_CODE2 = #splCode1# OR SPL_CODE2 = #splCode1#)
		</isNotEmpty>
		<isNotEmpty property="fhlShipperName">
			AND FHL_SHPR_NAME = #fhlShipperName#
		</isNotEmpty>
		<isNotEmpty property="fhlConsigneeName">
			AND FHL_CSGN_NAME = #fhlConsigneeName#
		</isNotEmpty>
		<isNotEmpty property="fhlContent">
			AND FHL_CONTENT = #fhlContent#
		</isNotEmpty>
	    order by to_number(ruleNo)
	   
	</select>
	<select id="fetchMastIntChkTrNo" parameterClass="java.lang.String" resultClass="cargo.cms.admin.bo.IntelligentChkConfBO">
	
		SELECT nvl(FLOW_TYPE,'') AS flowType, nvl(ORIG,'') as orig, nvl(SHPR_NAME,'') as shprName,
	    nvl(LIC_CNTR,'') AS licenseCntr, nvl(CST_CNTR,'') AS customCntr, nvl(SPL_CODE1,'') AS splCode1, nvl(SPL_CODE2,'') AS splCode2, nvl(SPL_CODE3,'') AS splCode3,
	    nvl(CONTENT,'') AS content, nvl(DEST,'') AS destination, nvl(CSGN_NAME,'') AS consigneeName, NO_LIC AS noLicense, nvl(CNSL,'') AS consolShpmt, 
	    nvl(FHL_SHPR_NAME,'') AS fhlShipperName, nvl(FHL_LIC_CNTR,'') AS fhlLicenseCntr, FHL_CST_CNTR AS fhlCustomCntr,nvl(FHL_CSGN_NAME,'') AS fhlConsigneeName,
	    FHL_NO_LIC AS fhlNoLicense,nvl(FHL_CONTENT,'') AS fhlContent,nvl(RMK,'') AS remarks,CUBIC_YN AS cubicYN,GLS_YN AS glsYN,RULE_NO as ruleNo
	    from MAST_INT_CHK 
	    where TR_NO = #PARAM# 
	   
	</select>

	<select id="fetchFunctionName" parameterClass="java.lang.String" resultClass="java.lang.String">
	<![CDATA[
	  SELECT CODE_DESC FROM MAST_CODE_DTL WHERE CODE = #functionCode#
	  ]]>
	</select>
	<insert id="insertMastIntChk" parameterClass="cargo.cms.admin.bo.IntelligentChkConfBO" >
	
	INSERT INTO MAST_INT_CHK
	(TR_NO,CARR_CODE, FUNCTION_CODE, FLOW_TYPE, ORIG, SHPR_NAME, LIC_CNTR, CST_CNTR, SPL_CODE1, SPL_CODE2, SPL_CODE3,
	CONTENT, DEST, CSGN_NAME, NO_LIC, CNSL, FHL_SHPR_NAME, FHL_LIC_CNTR, FHL_CST_CNTR, FHL_CSGN_NAME, 
	FHL_NO_LIC, FHL_CONTENT, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE, CUBIC_YN, GLS_YN,RMK,RULE_NO) 
	VALUES 
	(MAST_INTCGHK_SEQ.nextval,#carrCode#, #functionCode#, #flowType#,#orig# , #shprName#, #licenseCntr#, #customCntr#, #splCode1#, #splCode2#, #splCode3#,
 	#content#, #destination#, #consigneeName#, #noLicense#, #consolShpmt#, #fhlShipperName#, #fhlLicenseCntr#, #fhlCustomCntr#, #fhlConsigneeName#, 
 	#fhlNoLicense#, #fhlContent#, #createdUserId#, SYSDATE, #modifiedUserId#, SYSDATE, #cubicYN#, #glsYN#,#remarks#,#ruleNo#)
	 
	</insert>
	<update id="updateMastIntChk" parameterClass="cargo.cms.admin.bo.IntelligentChkConfBO" >
	
	UPDATE MAST_INT_CHK SET
  	FLOW_TYPE= #flowType#,ORIG= #orig#, SHPR_NAME=#shprName# , LIC_CNTR=#licenseCntr# , CST_CNTR= #customCntr#, SPL_CODE1=#splCode1# , SPL_CODE2=#splCode2# , SPL_CODE3=#splCode3# ,
 	CONTENT=#content#, DEST=#destination# , CSGN_NAME=#consigneeName#, NO_LIC=#noLicense#, CNSL=#consolShpmt#, FHL_SHPR_NAME=#fhlShipperName#, FHL_LIC_CNTR=#fhlLicenseCntr#, 
 	FHL_CST_CNTR=#fhlCustomCntr#, FHL_CSGN_NAME=#fhlConsigneeName#, FHL_NO_LIC=#fhlNoLicense#, FHL_CONTENT=#fhlContent#,  LM_USER_ID=#modifiedUserId#, 
 	LM_DATE=SYSDATE, CUBIC_YN=#cubicYN#, GLS_YN=#glsYN# ,RMK=#remarks#
	where TR_NO=#trNo# 
	<!-- AND to_char(LM_DATE,'ddMONYY HH24:MI:SS')=#lmDate# :: BugFix:: 10413-->
	
	</update>
	<delete id="deleteMastIntChk" parameterClass="cargo.cms.admin.bo.IntelligentChkConfBO" >
		delete from MAST_INT_CHK where TR_NO=#trNo#	
		<!-- AND to_char(LM_DATE,'ddMONYY HH24:MI:SS')=#lmDate# :: BugFix:: 10413-->
	</delete>
	<select id="chkDupRule" parameterClass="cargo.cms.admin.bo.IntelligentChkConfBO" resultClass="java.lang.Integer">
	SELECT COUNT(1) FROM MAST_INT_CHK
	WHERE CARR_CODE=#carrCode# 	AND FUNCTION_CODE=#functionCode# AND LIC_CNTR=#licenseCntr# AND CST_CNTR=#customCntr# AND NO_LIC=#noLicense# AND CNSL=#consolShpmt#
	AND FHL_LIC_CNTR=#fhlLicenseCntr# AND FHL_CST_CNTR=#fhlCustomCntr#  AND FHL_NO_LIC=#fhlNoLicense# AND CUBIC_YN=#cubicYN# AND GLS_YN=#glsYN#
	<isNotEmpty property="flowType">
	AND FLOW_TYPE=#flowType#
	</isNotEmpty>
	<isEmpty property="flowType">
	AND FLOW_TYPE is null
	</isEmpty>
	<isNotEmpty property="orig">
	AND ORIG=#orig#
	</isNotEmpty>
	<isEmpty property="orig">
	AND ORIG is null
	</isEmpty>
	<isNotEmpty property="shprName">
	AND SHPR_NAME=#shprName#
	</isNotEmpty>
	<isEmpty property="shprName">
	AND SHPR_NAME is null
	</isEmpty>
	<isNotEmpty property="splCode1">
	AND SPL_CODE1=#splCode1#
	</isNotEmpty>
	<isEmpty property="splCode1">
	AND SPL_CODE1 is null
	</isEmpty>
	<isNotEmpty property="splCode2">
	AND SPL_CODE2=#splCode2#
	</isNotEmpty>
	<isEmpty property="splCode2">
	AND SPL_CODE2 is null
	</isEmpty>
	<isNotEmpty property="splCode3">
	AND SPL_CODE3=#splCode3#
	</isNotEmpty>
	<isEmpty property="splCode3">
	AND SPL_CODE3 is null
	</isEmpty>
	<isNotEmpty property="content">
	AND CONTENT=#content#
	</isNotEmpty>
	<isEmpty property="content">
	AND CONTENT is null
	</isEmpty>
	<isNotEmpty property="destination">
	AND DEST=#destination#
	</isNotEmpty>
	<isEmpty property="destination">
	AND DEST is null
	</isEmpty>
	<isNotEmpty property="consigneeName">
	AND CSGN_NAME=#consigneeName#
	</isNotEmpty>
	<isEmpty property="consigneeName">
	AND CSGN_NAME is null
	</isEmpty>
	<isNotEmpty property="fhlShipperName">
	AND FHL_SHPR_NAME=#fhlShipperName#
	</isNotEmpty>
	<isEmpty property="fhlShipperName">
	AND FHL_SHPR_NAME is null
	</isEmpty>
	<isNotEmpty property="fhlConsigneeName">
	AND FHL_CSGN_NAME=#fhlConsigneeName#
	</isNotEmpty>
	<isEmpty property="fhlConsigneeName">
	AND FHL_CSGN_NAME is null
	</isEmpty>
	<isNotEmpty property="fhlContent">
	AND FHL_CONTENT=#fhlContent#
	</isNotEmpty>
	<isEmpty property="fhlContent">
	AND FHL_CONTENT is null
	</isEmpty>
	<isNotEmpty property="remarks">
	AND RMK=#remarks#
	</isNotEmpty>
	<isEmpty property="remarks">
	AND RMK is null
	</isEmpty>
	
	 
	</select>
	<select id="fetchDrvdFunc" parameterClass="cargo.cms.admin.bo.IntelligentChkConfBO" resultClass="cargo.cms.admin.bo.IntelligentChkConfBO">
	SELECT distinct MAST_CODE_DTL.CODE AS codeId
			, MAST_CODE_DTL.CODE_DESC AS codeDesc from MAST_CODE_DTL, mast_int_chk
      where MAST_CODE_DTL.code=mast_int_chk.function_code
      and MAST_INT_CHK.CARR_CODE=#drvdCarrCode# order by MAST_CODE_DTL.CODE 
	</select>
	<select id="validateShipper" parameterClass="java.lang.String" resultClass="java.lang.Integer" >
		SELECT COUNT(CODE) FROM CUST_COMPANY WHERE UPPER(CODE_DESC) LIKE UPPER(#company#) and  SHPR_YN = 'Y'
	</select>
	<select id="validateConsignee" parameterClass="java.lang.String" resultClass="java.lang.Integer" >
		SELECT COUNT(CODE) FROM CUST_COMPANY WHERE UPPER(CODE_DESC) LIKE UPPER(#company#) and  CONS_YN = 'Y'
	</select>
	<select id="checkMasterCarrier" parameterClass="java.lang.String" resultClass="java.lang.Integer" >
		select count(*) from MAST_CARRIER WHERE UPPER(CODE)=UPPER(#carr#)
	</select>
	<select id="checkMasterUldGroup" parameterClass="java.lang.String" resultClass="java.lang.Integer" >
		select count(*) from MAST_ULD_GROUP WHERE UPPER(ULD_GROUP)=UPPER(#uldGroup#)
	</select>
	
	<select id="checkMasterAirCraft" parameterClass="java.lang.String" resultClass="java.lang.Integer" >
		select count(*) from FLT_OPR WHERE UPPER(CGO_ACFT_TYPE)=UPPER(#airCraftType#)
	</select>
	
	<select id="checkValidRHO" parameterClass="map" resultClass="java.lang.Integer" >
		SELECT count(*) FROM CUST_COMPANY WHERE CODE = #code# and CODE_DESC = #codeDesc# and RHO_YN = 'Y' ORDER BY CODE_DESC
	</select>
	
	<select id="checkMasterCarrDupStatus" parameterClass="map" resultClass="java.lang.Integer" >
		select count(*) from IMP_RAMP_CUTOFF WHERE UPPER(CARR_CODE)=UPPER(#carr#) AND UPPER(ACFT_TYPE)=UPPER(#airCraftType#)
	</select>

	<select id="checkCarrierAwbPrefixDupStatus" parameterClass="map" resultClass="java.lang.Integer" >
		select count(*) from REPT_CARR_AWB_PREFIX WHERE UPPER(CARRIER_CODE)=UPPER(#carr#) AND AWB_PREFIX=#awbPrefix#
	</select>
	<select id="checkMasterCarrAirCraftStatus" parameterClass="java.lang.String" resultClass="java.lang.Integer" >
		select count(*) from IMP_RAMP_CUTOFF WHERE UPPER(ACFT_TYPE)=UPPER(#airCraftType#)
	</select>
	<select id="validateCheckStatus" parameterClass="map" resultClass="java.lang.Integer" >
	select count(*) from MAST_UCO_CHKLIST WHERE UPPER(CARR_CODE)=UPPER(#carr#) AND UPPER(ULD_GRP)=UPPER(#uldGroup#)
	</select>
	<select id="checkUnidStatus" parameterClass="java.lang.String" resultClass="java.lang.Integer" >
		select count(*) from MAST_UNID WHERE UPPER(SPL_CODE1)=UPPER(#code#) OR UPPER(SPL_CODE2)=UPPER(#code#) OR UPPER(SPL_CODE3)=UPPER(#code#)
	</select>
	
	<select id="fetchSeqValue" parameterClass="java.lang.String" resultClass="java.lang.String" >
		SELECT MAX(SEQ_NO)+1 FROM IMP_RAMP_CUTOFF
	</select>
	
	<select id="validateOrigDest" parameterClass="java.lang.String" resultClass="java.lang.Integer" >
		SELECT COUNT(CODE) FROM MAST_ARPT WHERE UPPER(CODE)=UPPER(#origDest#)
	</select>
	
	<select id="validateSpecialCode" parameterClass="java.lang.String" resultClass="java.lang.Integer" >
		SELECT COUNT(CODE) FROM MAST_SPL_HAND_CODE WHERE UPPER(CODE)=UPPER(#origDest#)
	</select>
	<select id="validateCarr" parameterClass="java.lang.String" resultClass="java.lang.Integer" >
		SELECT COUNT(CODE) FROM MAST_CARRIER WHERE UPPER(CODE)=UPPER(#carr#)
	</select>
	<select id="fetchDrvdFuncName" parameterClass="cargo.cms.admin.bo.IntelligentChkConfBO" resultClass="cargo.cms.admin.bo.IntelligentChkConfBO">
	
		 SELECT distinct MAST_CODE_DTL.CODE AS codeId
			, MAST_CODE_DTL.CODE_DESC AS codeDesc from MAST_CODE_DTL, mast_int_chk
      where MAST_CODE_DTL.code=mast_int_chk.function_code
      and MAST_CODE_DTL.code_type='INT_CHK_CONFIG' order by MAST_CODE_DTL.CODE
	   
	</select>
	<!-- 
	==============================================================================================
		START OF Intelligent Check Calculation QUERIES - Varadaraj Muni 17-DEC-2010
	==============================================================================================
	-->	
	<select id="fetchRuleNo" parameterClass="cargo.cms.admin.bo.IntelligentChkConfBO" resultClass="java.lang.String">
		SELECT (MAX(TO_NUMBER(RULE_NO)) + 1)AS ruleNo FROM MAST_INT_CHK WHERE CARR_CODE = #carrCode# AND FUNCTION_CODE = #functionCode#
	</select>
	<select id="fetchIntelligentCheckRules" parameterClass="cargo.cms.admin.bo.IntelligentCheckProcessBO" resultClass="cargo.cms.admin.bo.IntelligentChkConfBO">
		SELECT CARR_CODE AS carrCode,
		FUNCTION_CODE AS functionCode,
		FLOW_TYPE AS flowType,
		ORIG AS orig,
		DEST AS destination,
		SHPR_NAME AS shprName,
		CSGN_NAME AS consigneeName,
		LIC_CNTR AS licenseCntr,
		CST_CNTR AS customCntr,
		SPL_CODE1 AS splCode1,
		SPL_CODE2 AS splCode2,
		SPL_CODE3 AS splCode3,
		CONTENT AS content,
		NO_LIC AS noLicense,
		CNSL AS consolShpmt, 
		FHL_SHPR_NAME AS fhlShipperName,
		FHL_LIC_CNTR AS fhlLicenseCntr,
		FHL_CST_CNTR AS fhlCustomCntr,
		FHL_CSGN_NAME AS fhlConsigneeName,
		FHL_NO_LIC AS fhlNoLicense,
		FHL_CONTENT AS fhlContent,
		RULE_NO AS ruleNo,
    	RMK as remarks
		FROM MAST_INT_CHK WHERE CUBIC_YN = 'N' AND GLS_YN = 'N' AND FUNCTION_CODE = #functionCode#		
		AND CARR_CODE = #carrierCode# AND (FLOW_TYPE = DECODE(#awbType#, 'I','IMP','E','EXP','T','TRNS',FLOW_TYPE)  OR FLOW_TYPE IS NULL) ORDER BY RULENO
	</select>
	<select id="sqlFetchIntelligentCheckRulesWithNoCarrFlow" parameterClass="java.lang.String" resultClass="cargo.cms.admin.bo.IntelligentChkConfBO">
		SELECT CARR_CODE AS carrCode,
		FUNCTION_CODE AS functionCode,
		FLOW_TYPE AS flowType,
		ORIG AS orig,
		DEST AS destination,
		SHPR_NAME AS shprName,
		CSGN_NAME AS consigneeName,
		LIC_CNTR AS licenseCntr,
		CST_CNTR AS customCntr,
		SPL_CODE1 AS splCode1,
		SPL_CODE2 AS splCode2,
		SPL_CODE3 AS splCode3,
		CONTENT AS content,
		NO_LIC AS noLicense,
		CNSL AS consolShpmt, 
		FHL_SHPR_NAME AS fhlShipperName,
		FHL_LIC_CNTR AS fhlLicenseCntr,
		FHL_CST_CNTR AS fhlCustomCntr,
		FHL_CSGN_NAME AS fhlConsigneeName,
		FHL_NO_LIC AS fhlNoLicense,
		FHL_CONTENT AS fhlContent,
		RULE_NO AS ruleNo,
    	RMK as remarks
		FROM MAST_INT_CHK WHERE CUBIC_YN = 'N' AND GLS_YN = 'N' AND FUNCTION_CODE = #functionCode#		
		ORDER BY RULENO
	</select>	
	<select id="fetchCodeList" parameterClass="java.lang.String" resultClass="cargo.cms.admin.bo.CodeTypeBO">
		SELECT Code  AS code,Code_Desc As codeTypeDesc FROM MAST_CODE_DTL where CODE_TYPE=#param#  ORDER BY CODE
	</select>
	<select id="fetchLicDetails" parameterClass="cargo.cms.admin.bo.IntelligentCheckProcessBO" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM CST_LICENSE WHERE AWB_NO = #awbNo# AND HAWB_NO = #hawbNo#
	</select>
	<insert id="insertIntelligentCheckResult" parameterClass="cargo.cms.admin.bo.IntelligentCheckResultBO">
		INSERT INTO INTL_CHK_RESULT (FUNCTION_CODE, AWB_NO, HAWB_NO, RULE_NO, REMARK) VALUES(#functionCode#,#awbNo#,#hawbNo#,#ruleNo#,#remarks#)
	</insert>
	<update id="updateAWBIntelligentCheck" parameterClass="cargo.cms.admin.bo.IntelligentCheckProcessBO">
		UPDATE AWB SET LM_DATE = SYSDATE
		<isEqual property="functionCode" compareValue="ICS" prepend=",">
			INT_YN = #intChkInd#, TR_TYPE = #trtype#
		</isEqual>
		<isEqual property="functionCode" compareValue="ACS" prepend=",">
			AMD_YN = #intChkInd#
		</isEqual>
		<isEqual property="functionCode" compareValue="LCS" prepend=",">
			LBS_YN = #intChkInd#
		</isEqual>
		<isEqual property="functionCode" compareValue="IMPCAR" prepend=",">
			IMPCAR_YN = #intChkInd#
		</isEqual>
		<isEqual property="functionCode" compareValue="EXPCAR" prepend=",">
			EXPCAR_YN = #intChkInd#
		</isEqual>
		<isEqual property="functionCode" compareValue="DAL" prepend=",">
			DOCACC_YN = #intChkInd#
		</isEqual>
		<isEqual property="functionCode" compareValue="LPPM" prepend=",">
			LPPS_YN = #intChkInd#
		</isEqual>
		WHERE AWB_NO = #awbNo# AND AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') AND AWB_TYPE = #awbType#
	</update>
	<delete id="deleteIntelligentCheckResults" parameterClass="java.util.HashMap">
		DELETE FROM INTL_CHK_RESULT		
		WHERE 
		FUNCTION_CODE = #functionCode#
		<isNotEmpty property="awbNo">
			AND AWB_NO = #awbNo#
		</isNotEmpty>
		<isNotEmpty property="hawbNo">
			AND HAWB_NO = #hawbNo# 
		</isNotEmpty>		
	</delete>
	<select id="fetchIntelligentCheckResults" parameterClass="java.util.HashMap" resultClass="cargo.cms.admin.bo.IntelligentCheckResultBO">
		SELECT HAWB_NO AS hawbNo, REMARK AS remarks, RULE_NO AS ruleNo, AWB_NO AS awbNo, CODE_DESC AS functionCode
		FROM INTL_CHK_RESULT, MAST_CODE_DTL WHERE AWB_NO = #awbNo# AND FUNCTION_CODE = nvl(#functionCode#,FUNCTION_CODE) AND CODE_TYPE = 'INT_CHK_CONFIG'
		AND FUNCTION_CODE = CODE
		GROUP BY HAWB_NO,REMARK,RULE_NO,AWB_NO,CODE_DESC
	</select>
	
	<select id="sqlCheckAWBEnquiryAttachmentExists" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO" resultClass="java.lang.Integer">
		SELECT COUNT(SEQ_NO) FROM AWB_IMAGE WHERE AWB_IMAGE_NAME = #transactionId# AND AWB_NO = #awbNo# AND AWB_DATE = #awbDate#
	</select>
	
	<insert id="AWBEnquiryAddAttachment" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO">
	  INSERT INTO AWB_IMAGE(
			   SEQ_NO,
			   AWB_IMAGE_NAME,
			   AWB_NO,
			   AWB_DATE			   
			   )              
			   VALUES(
			   AWB_IMAGE_SEQ.NEXTVAL,
			   #transactionId#,
			   #awbNo#,
			   #awbDate#			  
			   )
		</insert>
		
	<update id="updateImageDateInFwImage" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO" >
	update fw_image_store set img_upload_date=sysdate WHERE img_session_id= #transactionId# and img_upload_date is null
	</update>	
	<!--
	==============================================================================================
		END OF Intelligent Check Calculation QUERIES
	==============================================================================================
	-->
	<!-- house level build up config -->
	<select id="fetchHseBldupCarr" parameterClass="cargo.cms.admin.bo.HseBuildUpBO" resultClass="cargo.cms.admin.bo.HseBuildUpBO">
		SELECT CONFG.CARR_CODE AS carrCode,CONFG.PORT AS port
		,ARPT.CODE_DESC AS portDesc FROM MAST_HSE_BU_CONFIG CONFG LEFT OUTER JOIN MAST_ARPT ARPT ON ARPT.CODE=CONFG.PORT
		WHERE		 
		CONFG.CARR_CODE=#carrCode#
		<isNotEmpty property="carrCode">
			AND CONFG.PORT IS NOT NULL
		</isNotEmpty>
		<isNotEmpty property="port" >
  		AND CONFG.PORT=#port#
  		</isNotEmpty> 
	</select>
	<select id="fetchHseBldupPort" parameterClass="cargo.cms.admin.bo.HseBuildUpBO" resultClass="cargo.cms.admin.bo.HseBuildUpBO">
		SELECT CONFG.CARR_CODE AS carrCode,CONFG.PORT AS port
		,CARR.CODE_DESC AS carrDesc FROM MAST_HSE_BU_CONFIG CONFG LEFT OUTER JOIN MAST_CARRIER CARR ON CARR.CODE=CONFG.CARR_CODE WHERE CONFG.PORT=#port#
		ORDER BY CONFG.CARR_CODE DESC
	</select>
	<select id="mainatinHseBldupConfig" parameterClass="cargo.cms.admin.bo.HseBuildUpBO" resultClass="cargo.cms.admin.bo.HseBuildUpBO">
	SELECT CONFG.CARR_CODE AS carrCode,CONFG.PORT AS port,to_char(LM_DATE,'ddMONYY HH24:MI:SS') AS lmDate,
		CONFG.CARR_CODE AS oldCarrCode,CONFG.PORT AS oldPort
		FROM MAST_HSE_BU_CONFIG CONFG
		WHERE 1=1 
		<isNotEmpty property="carrCode" >
  		AND CONFG.CARR_CODE=#carrCode#
  		AND CONFG.PORT IS NOT NULL
  		<isNotEmpty property="port" >
  		AND CONFG.PORT=#port#
  		</isNotEmpty>  			
  		</isNotEmpty>
  		<isNotEmpty property="port" >
  		<isEmpty property="carrCode" >
  		and CONFG.PORT=#port#
  		</isEmpty>
  		</isNotEmpty>  			
	</select>
	<select id="fetchHseBldup" parameterClass="cargo.cms.admin.bo.HseBuildUpBO" resultClass="cargo.cms.admin.bo.HseBuildUpBO">
	SELECT CARR_CODE||PORT AS carrPort
		FROM MAST_HSE_BU_CONFIG CONFG
	</select>
	<insert id="insHseBldupConfig" parameterClass="cargo.cms.admin.bo.HseBuildUpBO">
		INSERT INTO MAST_HSE_BU_CONFIG
		(CARR_CODE,PORT, CR_USER_ID, CR_DATE, LM_USER_ID,LM_DATE)
		VALUES
		(#carrCode#,#port#,#createdUserId#, SYSDATE, #modifiedUserId#, SYSDATE)
	</insert>
	<update id="updFltSchLeg" parameterClass="cargo.cms.admin.bo.HseBuildUpBO">
		UPDATE FLT_SCH_LEG 
		SET HSE_BU_IND='Y'
		WHERE START_DATE >= to_char(sysdate,'DD-MON-YY')
		and TO_CHAR(trunc(SCH_DEP_TIME),'0000') >= to_number(TO_CHAR(SYSDATE,'HH24MI'))
		<isNotEmpty property="carrCode" >
		AND CARR_CODE=#carrCode#
		</isNotEmpty>
		<isNotEmpty property="port" >
		AND OFF_POINT=#port#
		</isNotEmpty>
	</update>
	<update id="updFltOprLeg" parameterClass="cargo.cms.admin.bo.HseBuildUpBO">
		UPDATE FLT_OPR_LEG 
		SET HSE_BU_IND='Y'
		WHERE SCH_DEP_DATE >= to_char(sysdate,'DD-MON-YY')
		and TO_CHAR(trunc(SCH_DEP_TIME),'0000') > to_number(TO_CHAR(SYSDATE,'HH24MI'))
		AND FLT_TYPE='D'
		<isNotEmpty property="carrCode" >
		AND CARR_CODE=#carrCode#
		</isNotEmpty>
		<isNotEmpty property="port" >
		AND OFF_POINT=#port#
		</isNotEmpty>
	</update>
	<update id="updHseBldupConfig" parameterClass="cargo.cms.admin.bo.HseBuildUpBO">
		UPDATE MAST_HSE_BU_CONFIG
		SET CARR_CODE=#carrCode#,
		PORT=#port#,
		LM_USER_ID=#modifiedUserId#,
		LM_DATE=SYSDATE
		WHERE to_char(LM_DATE,'ddMONYY HH24:MI:SS')=#lmDate#
		<isNotEmpty property="oldCarrCode" >
		AND CARR_CODE=#oldCarrCode#
		</isNotEmpty>
		<isNotEmpty property="oldPort" >
		AND PORT=#oldPort#
		</isNotEmpty>
		<isEmpty property="oldCarrCode" >
			AND CARR_CODE IS NULL
		</isEmpty>
		<isEmpty property="oldPort" >
			AND PORT IS NULL
		</isEmpty>
	</update>
	<delete id="delHseBldupConfig" parameterClass="cargo.cms.admin.bo.HseBuildUpBO" >
		delete from MAST_HSE_BU_CONFIG where to_char(LM_DATE,'ddMONYY HH24:MI:SS')=#lmDate#
		<isNotEmpty property="carrCode" >
		AND CARR_CODE=#carrCode#
		</isNotEmpty>
		<isNotEmpty property="port" >
		AND PORT=#port#
		</isNotEmpty>
		<isEmpty property="carrCode" >
			AND CARR_CODE IS NULL
		</isEmpty>
		<isEmpty property="port" >
			AND PORT IS NULL
		</isEmpty>
	</delete>
	
	<select id="checkMasterPort" parameterClass="java.lang.String" resultClass="java.lang.Integer" >
		select count(*) from MAST_ARPT WHERE UPPER(CODE)=UPPER(#param#)
	</select>
	<!-- house level build up config -->	
	
		<!--Start :Checkout Location Configuration-->
	
	<select id="fetchMastAutoChkout" parameterClass="java.lang.String" resultClass="cargo.cms.admin.bo.ChkOutLocationConfBO">
		SELECT ACFT_TYPE AS airType, CARR_CODE AS carrCode,
		CHKOUT_AREA AS chkOutArea,ACFT_TYPE AS oldAirType,CHKOUT_AREA AS oldChkOutArea,
		'update' as recType
		from MAST_AUTO_CHKOUT 
	    where CARR_CODE = #carrCode# 	   
	</select>
	<insert id="insertMastAutoChkout" parameterClass="cargo.cms.admin.bo.ChkOutLocationConfBO">
	INSERT INTO MAST_AUTO_CHKOUT(ACFT_TYPE, CHKOUT_AREA, CARR_CODE,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE) VALUES (#airType#, #chkOutArea#, #carrCode#,#lmUser#,sysdate,#lmUser#,sysdate)
		</insert>
	<update id="updateMastAutoChkout" parameterClass="cargo.cms.admin.bo.ChkOutLocationConfBO" >
	UPDATE MAST_AUTO_CHKOUT SET
	ACFT_TYPE = #airType#, 
	CHKOUT_AREA = #chkOutArea#,
	LM_USER_ID = #lmUser#,
	LM_DATE = sysdate
	where CARR_CODE = #carrCode#  
	AND	ACFT_TYPE = #oldAirType#
	AND CHKOUT_AREA = #oldChkOutArea#
	</update>
	<delete id="deleateMastAutoChkout" parameterClass="cargo.cms.admin.bo.ChkOutLocationConfBO">
		DELETE FROM MAST_AUTO_CHKOUT WHERE upper(CARR_CODE)=upper(#carrCode#) AND ACFT_TYPE = #airType# AND CHKOUT_AREA = #chkOutArea#
	</delete>
	<select id="validateCarriercode" parameterClass="java.lang.String" resultClass="java.lang.Integer" >
		SELECT COUNT(CODE) FROM MAST_CARRIER WHERE UPPER(CODE)=UPPER(#carrCode#)
	</select>
	
	<select id="chkDupRow" parameterClass="cargo.cms.admin.bo.ChkOutLocationConfBO" resultClass="java.lang.Integer">
	SELECT COUNT(1) FROM MAST_AUTO_CHKOUT
	WHERE CARR_CODE=#carrCode#  AND ACFT_TYPE = #airType#  AND CHKOUT_AREA = #chkOutArea#
	</select>
	
	<select id="FETCH_AUDIT_DETAILS_LIST" parameterClass="cargo.cms.awb.bo.AuditTrialBO" resultClass="cargo.cms.awb.bo.AuditTrialBO">
	SELECT 
			  A.AWB_NO AS awbNo,
			  SUBSTR( A.AWB_NO,1,3 ) AS awbNoPFX,
			  SUBSTR( A.AWB_NO,4 ) as awbNoSFX,
			  A.CR_USER_ID AS crUserId,  	   
			  TO_CHAR( A.CR_DATE, 'DDMONYY HH24:MI' ) AS crDate,	 
			  NVL(A.PCS,0) AS pc, 
			  TO_CHAR(NVL(A.WT,0),'99999999999999990.00') AS wt,
			  A.ULD_KEY AS uldNo,
			  A.EVENT_ID AS eventId,
			  A.EVENT_DESC AS event,
			  A.FLT_KEY AS flightNo,
			  TO_CHAR( A.FLT_DATE, 'DDMONYY' ) AS flightDate,
			  A.FLT_TYPE AS flightType,
			  A.FLT_KEY AS fltKey,
			  A.TR_NO AS trNo,
			  A.OLD_CARR_CODE AS oldCarrier,
			  A.NEW_CARR_CODE AS newCarrier 	 		  
		FROM  AWB_EVENTS A	  
		<dynamic prepend="WHERE"> (
		<isNotEmpty property="awbNo">
		A.AWB_NO = #awbNo#
		</isNotEmpty>    
		<isNotEmpty property="awbDate">
	    AND A.AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
		</isNotEmpty>
		<isNotEmpty property="uldNo">
	     A.ULD_KEY = #uldNo#
		</isNotEmpty>
		<isNotEmpty property="flightDate">
	    AND A.FLT_DATE = #flightDate#
		</isNotEmpty>
		<isNotEmpty property="flightType">
	    AND A.FLT_TYPE = #flightType#
		</isNotEmpty>
		<isNotEmpty property="fltKey">
	    AND A.FLT_KEY = #fltKey#
		</isNotEmpty>
		 )</dynamic>
	</select>
	
<select id="fetchAwbEnquiryTagDetails" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO" resultClass="cargo.cms.awb.bo.AWBEnquiryBO">
SELECT
      TAG_NO AS tagNo,
      ACT_PCS AS tagPc,
      ACT_WT AS tagWt,
      AWB_ORIG AS tagOrg,
      AWB_DEST AS tagDest,
      LOCN AS tagLocn,
      ULD_KEY AS tagULD,
      LSP_NO AS tagLsp,
      DAM_IND AS tagDam
FROM
    IMP_XPS_OBC_MAIL
WHERE
    AWB_NO=#awbNo# AND
    AWB_DATE=#awbDate# AND
    FLT_KEY = #fltKey# AND
    FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
    CATALOG = #catalog#
	</select>
	<select id="fetchAwbEnquiryExpTagDetails" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO" resultClass="cargo.cms.awb.bo.AWBEnquiryBO">
		<![CDATA[
	    select DISTINCT
	    	A.orig AS tagOrg,
	    	nvl(B.LOC_CODE,(select loc_code from lsp_inventory where lsp_no=DTL.LSP_NO))  AS tagLocn,
			B.ULD_KEY AS tagULD,
			DTL.LSP_NO AS tagLsp,
			D.TAG_NO AS tagNo,
			D.TAG_PCS AS tagPc,
			D.TAG_WT AS tagWt,
			'' AS tagDam,
			D.RMK AS tagRmk,
			D.DEST AS tagDest
		from
		  EXP_RCL_OBC D 
		  JOIN v_rcl_obc B ON D.RCL_NO=B.RCL_NO
		  JOIN awb A ON A.AWB_NO=B.AWB_NO AND A.AWB_DATE=B.AWB_DATE
		  JOIN EXP_RCL_HD C ON C.RCL_NO=B.RCL_NO
		  LEFT JOIN EXP_RCL_DTL DTL
		  ON DTL.RCL_NO=C.RCL_NO AND dtl.pcs=d.tag_pcs
  		WHERE 
		   C.STATUS<>'V' AND D.TAG_NO is not null
		   AND A.awb_no=#awbNo# 
		   and A.awb_date=TO_DATE(#awbDate#, 'DDMONYY')
		   and   NVL(D.lsp_no,'N') =  NVL(DTL.LSP_NO,'N')
		]]>
	<!-- 
	select 
    	A.orig AS tagOrg,
    	B.LOC_CODE AS tagLocn,
		B.ULD_KEY AS tagULD,
		C.LSP_NO AS tagLsp,
		D.TAG_NO AS tagNo,
		D.TAG_PCS AS tagPc,
		D.TAG_WT AS tagWt,
		D.RMK AS tagDam,
		D.DEST AS tagDest
	from
		awb A,EXP_RCL_OBC D,v_rcl_obc B,EXP_RCL_DTL C
	where
  D.RCL_NO=B.RCL_NO and D.TAG_NO is not null AND
  B.AWB_NO=A.AWB_NO AND B.AWB_DATE=A.AWB_DATE AND
  C.RCL_NO=B.RCL_NO AND
		A.awb_no=#awbNo# and A.awb_date=#awbDate# -->
		
	</select>
	<select id="fetchAwbEnquiryTraTagDetails" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO" resultClass="cargo.cms.awb.bo.AWBEnquiryBO">
	SELECT
      TAG_NO AS tagNo,
      ACT_PCS AS tagPc,
      ACT_WT AS tagWt,
      ORIG  AS tagOrg,
  	  DEST  AS tagDest,
      LOCN AS tagLocn,
      ULD_KEY AS tagULD,
      LSP_NO AS tagLsp,
      DAM_IND AS tagDam,
      RMK AS tagRmk
FROM
    IMP_XPS_OBC_MAIL
WHERE
    AWB_NO=#awbNo# AND
    AWB_DATE=#awbDate# AND
    FLT_KEY = #fltKey# AND
    FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
    CATALOG = #catalog#
	<!-- select 
    	D.TAG_NO AS tagNo,
		D.TAG_PCS AS tagPc,
		D.TAG_WT AS tagWt,
    	A.orig AS tagOrg,
    	D.DEST AS tagDest,
		B.LOC_CODE AS tagLocn,
		B.ULD_KEY AS tagULD,
		C.LSP_NO AS tagLsp,
		D.RMK AS tagDam
	from
		awb A,EXP_RCL_OBC D,v_rcl_obc B,EXP_RCL_DTL C
	where
  D.RCL_NO=B.RCL_NO and D.TAG_NO is not null AND
  B.AWB_NO=A.AWB_NO AND B.AWB_DATE=A.AWB_DATE AND
  C.RCL_NO=B.RCL_NO AND
		A.awb_no=#awbNo# and A.awb_date=#awbDate#
	union all
	SELECT
   		TAG_NO AS tagNo,
        ACT_PCS AS tagPc,
        ACT_WT AS tagWt,
        AWB_ORIG AS tagOrg,
        AWB_DEST AS tagDest,
        LOCN AS tagLocn,
        ULD_KEY AS tagULD,
        LSP_NO AS tagLsp,
        DAM_IND AS tagDam
   FROM
        IMP_XPS_OBC_MAIL
   WHERE
        AWB_NO=#awbNo# AND
        AWB_DATE=#awbDate# -->
	</select>
	<select id="fetchAwbEnquiryExpTagno" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO" resultClass="java.lang.String">
			select count(*) AS tagNo
			from
		  	awb A
		  	JOIN EXP_RCL_HD C 
		  	ON C.AWB_NO=A.AWB_NO AND C.AWB_DATE=A.AWB_DATE
		  	JOIN EXP_RCL_OBC D 
		  	ON  D.RCL_NO=C.RCL_NO  
		  	WHERE 
		   	D.TAG_NO is not null
		   	AND A.awb_no=#awbNo# 
		   	and A.awb_date=TO_DATE(#awbDate#, 'DDMONYY')	
   <!-- 
	select 
    	count(*) AS tagNo
	from
		awb A,EXP_RCL_OBC D,v_rcl_obc B,EXP_RCL_DTL C
	where
    	D.RCL_NO=B.RCL_NO and D.TAG_NO is not null AND
  		B.AWB_NO=A.AWB_NO AND B.AWB_DATE=A.AWB_DATE AND
  		C.RCL_NO=B.RCL_NO AND
		A.awb_no=#awbNo# and A.awb_date=TO_DATE(#awbDate#, 'DDMONYY') -->
	</select>
	<select id="fetchDcCount" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO" resultClass="java.lang.Integer">
	SELECT count(*)	FROM GT_CST_DC_LIST WHERE DC_TYPE IS NOT NULL
	</select>
	<select id="fetchAwbEnquiryImpTagno" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO" resultClass="java.lang.String">
	SELECT
          count(*) AS tagNo 
     FROM
    	  IMP_XPS_OBC_MAIL
	 WHERE
    	  AWB_NO=#awbNo# AND
          AWB_DATE=TO_DATE(#awbDate#, 'DDMONYY')
	</select>
	<select id="fetchAwbEnquiryTraTagno" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO" resultClass="java.lang.String">
	SELECT 
    ((SELECT
      		count(*) AS tagNo FROM
      		IMP_XPS_OBC_MAIL
     WHERE
    		AWB_NO=#awbNo# AND
    		AWB_DATE=TO_DATE(#awbDate#, 'DDMONYY')
    ) +
    (select 
    	count(*) AS tagNo
	from
		awb A,EXP_RCL_OBC D,v_rcl_obc B,EXP_RCL_DTL C
	where
    	D.RCL_NO=B.RCL_NO and D.TAG_NO is not null AND
  		B.AWB_NO=A.AWB_NO AND B.AWB_DATE=A.AWB_DATE AND
  		C.RCL_NO=B.RCL_NO AND
		A.awb_no=#awbNo# and A.awb_date=TO_DATE(#awbDate#, 'DDMONYY')
    )) AS tagNo
    FROM
    DUAL
	</select>
	
	<select id="fetchAWBEnquiryRemarkNo" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO" resultClass="java.lang.String">
	SELECT			   
	    COUNT(*)
      FROM
      ( SELECT 
			  A.AWB_NO AS awbNo,
			  SUBSTR( A.AWB_NO,1,3 ) AS awbNoPFX,
			  SUBSTR( A.AWB_NO,4 ) as awbNoSFX,
			  A.CR_USER_ID AS rmkUserId,  	   
			  TO_CHAR( A.CR_DATE, 'DDMONYY HH24:MI' ) AS crDate,
			  A.RMK_TYPE AS type,
			  A.RMK AS remarks,
			  A.FLT_KEY AS fltKey,
			  TO_CHAR( A.FLT_DATE, 'DDMONYY' ) AS fltDate,
			  B.CODE_DESC AS typeDesc			  	 		  
		FROM  AWB_RMK A
        LEFT JOIN MAST_CODE_DTL B ON B.CODE = A.RMK_TYPE 
		WHERE     A.AWB_NO = #awbNo#
		and A.AWB_DATE is not null
	  union
      SELECT			   
	  SUBSTR(A.ENTITY_KEY,1,11) AS awbNo,
      SUBSTR(A.ENTITY_KEY,1,3) AS awbNoPFX,
      SUBSTR(A.ENTITY_KEY,4,11) as awbNoSFX,
      A.LM_USER_ID AS rmkUserId,
      TO_CHAR(A.LM_DATE,'DDMONYY HH24:MI') AS crDate,
      '' as type,
      A.RMK AS remarks,
      DECODE('I','I',SI.FLT_KEY,EA.FLT_KEY) AS fltKey,
      DECODE('I','I',TO_CHAR(SI.FLT_DATE,'DDMONYY'),TO_CHAR(EA.FLT_DATE,'DDMONYY')) AS fltDate,
      A.TAG_NAME AS typeDesc
      FROM
      RMK_HIST A
      LEFT JOIN EXP_PMANIFEST_AWB EA ON EA.AWB_NO = #awbNo# AND EA.AWB_DATE = #awbDate# 
      LEFT JOIN IMP_CAR_SHP SI ON SI.AWB_NO = #awbNo# AND SI.AWB_DATE = #awbDate# 
      WHERE
      <isNotEqual property="awbType" compareValue="E">
      A.ENTITY_KEY IN (DECODE(SI.AWB_NO,'','',SI.AWB_NO||SI.FLT_KEY)) OR A.ENTITY_KEY IN (DECODE(SI.AWB_NO,'','',SI.AWB_NO||TO_CHAR(SI.AWB_DATE,'DDMONYY')))
      <isNotEmpty property="type">
	  AND A.TAG_NAME = #type#
	  </isNotEmpty>		
      </isNotEqual>
      <isEqual property="awbType" compareValue="E">
      A.ENTITY_KEY IN (DECODE(EA.AWB_NO,'','',EA.AWB_NO||EA.FLT_KEY)) OR A.ENTITY_KEY IN (DECODE(EA.AWB_NO,'','',EA.AWB_NO||TO_CHAR(EA.AWB_DATE,'DDMONYY')))
      <isNotEmpty property="type">
	  AND A.TAG_NAME = #type#
	  </isNotEmpty>		
      </isEqual>)
	</select>
	
	<select id="fetchAwbEnquiryOwnerDetails" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO" resultClass="cargo.cms.awb.bo.AWBEnquiryBO">
	select carr_code as carrCode,
       pcs as awbPcs,
       wt as awbWt 
       from awb_owner where awb_no=#awbNo# and awb_date=#awbDate#
	</select>
	<!--End: Checkout Location Configuration-->
	
	<!-- Updated by Yugandhar for Audit Trail Starts -->
	<select id="FETCH_AUDIT_AWB_DETAILS_LIST" parameterClass="cargo.cms.awb.bo.AuditTrialBO" resultClass="cargo.cms.awb.bo.AuditTrialBO">
		select TO_CHAR(awb_date,'DDMONYY') AS awbDate from AWB WHERE AWB_NO = #awbNo#
	</select>
	<select id="FETCH_AUDIT_AWB_DETAILS_LIST_FROM_FBL" parameterClass="cargo.cms.awb.bo.AuditTrialBO" resultClass="cargo.cms.awb.bo.AuditTrialBO">
		select TO_CHAR(awb_date,'DDMONYY') AS awbDate from EDI_FBL_SHP WHERE AWB_NO =  #awbNo#
	</select>
	<select id="FETCH_AUDIT_AWB_DETAILS_LIST_FROM_FHL" parameterClass="cargo.cms.awb.bo.AuditTrialBO" resultClass="cargo.cms.awb.bo.AuditTrialBO">
		select TO_CHAR(awb_date,'DDMONYY') AS awbDate from EDI_FHL WHERE AWB_NO =  #awbNo#
	</select>
	<select id="FETCH_AUDIT_DETAILS_LIST_FOR_AWB" parameterClass="cargo.cms.awb.bo.AuditTrialBO" resultClass="cargo.cms.awb.bo.AuditTrialBO">
		SELECT 
     		TO_CHAR( A.CR_DATE, 'DDMONYY HH24:MI:SS' ) AS crDate,
     		A.CR_USER_ID AS crUserId,
     		( select des_tag from his_mst_itm where cod_his_seq_num=b.cod_his_seq_num) AS eventId,
     		DECODE(B.cod_act,'A','ADD','U','UPD','D','DEL') as event,
     		B.DES_HIS_DTS as eventDesc
  		FROM HIS_AWB_EVNT A,HIS_AWB_EVNT_DTL B
  		WHERE B.awb_no= A.awb_no
  			AND B.awb_date = A.awb_date
  			AND A.COD_TRA_SEQ_NUM  = B.COD_TRA_SEQ_NUM
   			AND A.AWB_NO = #awbNo#
    		<isNotEmpty property="awbDate">
    		AND A.AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
    		</isNotEmpty>
    		AND A.MODULE = 'W'
    		AND A.COD_HIS_TYP = 'A'
    	group by a.awb_no, a.awb_date,A.CR_DATE,A.CR_USER_ID,A.COD_FUNC,B.cod_act,B.DES_HIS_DTS,b.cod_his_seq_num
		order by A.CR_DATE	
	</select>
	<select id="FETCH_AUDIT_DETAILS_LIST_FOR_FLIGHT" parameterClass="cargo.cms.awb.bo.AuditTrialBO" resultClass="cargo.cms.awb.bo.AuditTrialBO">
		SELECT 
     		TO_CHAR( A.CR_DATE, 'DDMONYY HH24:MI:SS' ) AS crDate,
     		A.CR_USER_ID AS crUserId,
     		( select des_tag from his_mst_itm where cod_his_seq_num=b.cod_his_seq_num) AS eventId,
     		DECODE(B.cod_act,'A','ADD','U','UPD','D','DEL') as event,
     		B.DES_HIS_DTS as eventDesc
  		FROM HIS_FLT_EVNT A,HIS_FLT_EVNT_DTL B
  		WHERE B.FLT_KEY= A.FLT_KEY
  			AND B.FLT_DATE = A.FLT_DATE
        AND B.FLT_TYPE = A.FLT_TYPE
        AND A.COD_TRA_SEQ_NUM  = B.COD_TRA_SEQ_NUM
   			AND A.FLT_KEY = #flightNo#
    		AND A.FLT_DATE = TO_DATE(#flightDate#,'DDMONYY')
         <isEqual property="flightType" compareValue="D"> 
		    AND A.FLT_TYPE in ('D','E')
		 </isEqual>
	     <isEqual property="flightType" compareValue="A"> 
		    AND A.FLT_TYPE in ('A','I')
		</isEqual>
        AND A.MODULE = 'W'
        AND A.COD_HIS_TYP = 'A'
    	group by a.FLT_KEY, a.FLT_DATE,A.CR_DATE,A.CR_USER_ID,A.COD_FUNC,B.cod_act,B.DES_HIS_DTS,b.cod_his_seq_num
		order by A.CR_DATE	
	</select>
	<select id="FETCH_AUDIT_DETAILS_LIST_FOR_ULD" parameterClass="cargo.cms.awb.bo.AuditTrialBO" resultClass="cargo.cms.awb.bo.AuditTrialBO">
		SELECT 
     		TO_CHAR( A.CR_DATE, 'DDMONYY HH24:MI:SS' ) AS crDate,
     		A.CR_USER_ID AS crUserId,
     		( select des_tag from his_mst_itm where cod_his_seq_num=b.cod_his_seq_num) AS eventId,
     		DECODE(B.cod_act,'A','ADD','U','UPD','D','DEL') as event,
     		B.DES_HIS_DTS as eventDesc
  		FROM HIS_ULD_EVNT A,HIS_ULD_EVNT_DTL B
  		WHERE B.ULD_KEY= A.ULD_KEY
  		AND A.COD_TRA_SEQ_NUM  = B.COD_TRA_SEQ_NUM
        AND A.ULD_KEY = #uldNo#
  		  AND A.MODULE = 'W'
        AND A.COD_HIS_TYP = 'A'
    	group by a.ULD_KEY,A.CR_DATE,A.CR_USER_ID,A.COD_FUNC,B.cod_act,B.DES_HIS_DTS,b.cod_his_seq_num
		order by A.CR_DATE
	</select>
	<select id="FETCH_AUDIT_DETAILS_LIST_FOR_MASTER" parameterClass="cargo.cms.awb.bo.AuditTrialBO" resultClass="cargo.cms.awb.bo.AuditTrialBO">
		SELECT 
	     		TO_CHAR( A.CR_DATE, 'DDMONYY HH24:MI:SS' ) AS crDate,
	     		A.CR_USER_ID AS crUserId,
	     		#masterType# AS eventId,
	            DECODE(B.cod_act,'A','ADD','U','UPD','D','DEL') as event,
	     		B.DES_HIS_DTS as eventDesc
	  		FROM HIS_MASTER_EVNT A,HIS_MASTER_EVNT_DTL B,HIS_MASTER_FUNC C
	  		WHERE B.MAST_NAME= A.MAST_NAME
	        AND b.TAB_NAME = A.TAB_NAME
	        AND A.COD_TRA_SEQ_NUM  = B.COD_TRA_SEQ_NUM
	        and C.TAB_NAME = A.TAB_NAME
	        AND C.MASTER_NAME = #masterType#
	  		AND A.CR_DATE  BETWEEN TO_DATE(#tempFromDate#,'DDMONYYHH24MISS') AND TO_DATE(#tempToDate#,'DDMONYYHH24MISS')
	  		AND A.COD_HIS_TYP = 'A'
	    	group by a.MAST_NAME,A.CR_DATE,A.CR_USER_ID,A.COD_FUNC,B.cod_act,B.DES_HIS_DTS,b.cod_his_seq_num,MASTER_NAME
			order by A.CR_DATE,event desc
	</select>
	
	<!-- Updated by Yugandhar for Audit Trail End -->
	
	<select id="hawbListForAwbSeq" parameterClass="map" resultClass="cargo.cms.awb.bo.AWBInvBO">
	  SELECT HAWB_NO AS hawb,
         	 STRG_PCS AS hawbPcs,
         	 STRG_WT AS hawbWt
         	 FROM HAWB_INVENTORY WHERE SEQ_NO = #seqNo#
         	 <isNotEmpty property="hawb">
         	 AND HAWB_NO = #hawb#
         	 </isNotEmpty>
	</select>
	
	<select id="isValidDestOrOrigin" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		select count(1) from MAST_CITY where code=#city#
	</select>
	<select id="inboundVCLAwbDetails" parameterClass="cargo.cms.val.bo.VclAwbBO" resultClass="cargo.cms.val.bo.VclAwbBO">
		select DISTINCT ica.awb_no as awbNo,
		substr(ica.awb_no,1,3)||'-'||substr(ica.awb_no,4) awbNoDisplay,
		to_char(ica.awb_date,'DDMONYY') as awbDate,
		decode(ica.spl_code1, null, '', ica.spl_code1 || ',') ||
		     decode(ica.spl_code2, null, '', ica.spl_code2 || ',') || 
		     decode(ica.spl_code3, null, '', ica.spl_code3 || ',') ||
		     decode(ica.spl_code4, null, '', ica.spl_code4 || ',') ||
		     decode(ica.spl_code5, null, '', ica.spl_code5 || ',') ||
		     decode(ica.spl_code6, null, '', ica.spl_code6 || ',') || 
		     decode(ica.spl_code7, null, '', ica.spl_code7 || ',') || 
		     decode(ica.spl_code8, null, '', ica.spl_code8 || ',') || 
		     decode(ica.spl_code9, null, '', ica.spl_code9) shc, 
		ica.awb_origin org, ica.awb_dest dest,
		ica.awb_pcs as pcs, ica.awb_wt as wt,
		ics.recd_pcs as bdPcs,ics.recd_wt as bdWt,
		nvl(vcl.vclPcs, 0) vclPcs, nvl(vcl.vclWt, 0) vclWt, vcl.vclNo vclNo,
		nvl(ics.manifest_pcs, 0) manfPcs, nvl(ics.manifest_wt, 0) manfWt,
		case when nvl(vcl.vclPcs, 0) &lt; ics.recd_pcs then 'Y' else 'N' end isVclReq
		from imp_car_shp ics 
		join imp_car_awb ica
		on ica.awb_no=ics.awb_no
		and ica.awb_date=ics.awb_date
		join cust_airl_spl_code casc
		on casc.spl_type='SPL_VAL'
		and casc.carr_code= substr(ics.flt_key, 0, 2)
		and casc.spl_code in(ica.spl_code1, ica.spl_code2, ica.spl_code3, ica.spl_code4, 
		                      ica.spl_code5,ica.spl_code6,ica.spl_code7,ica.spl_code8,ica.spl_code9)
		left join (SELECT awb_no as awbNo, to_char(awb_date,'DDMONYY') awbDt, flt_key as fltKey, flt_date as fltDate,
		                   SUM(vcl_pcs) vclPcs, SUM(vcl_wt) vclWt, vcl_no vclNo
		           FROM val_vcl_hd vvh
		           where vvh.void_user_id is null
		           and   vvh.void_date is null
		           GROUP BY awb_no, to_char(awb_date,'DDMONYY'), flt_key, flt_date, vcl_no) vcl
		on vcl.awbNo=ica.awb_no
		and to_date(vcl.AwbDt, 'DDMONYY')=to_char(ica.awb_date, 'DDMONYY')
		and vcl.fltKey=ics.flt_key and vcl.fltDate= ics.flt_date
		where ics.flt_key=#fltKey#
		and   to_char(ics.flt_date,'DDMONYY')=to_date(#fltDate#,'DDMONYY')
	</select>
	<select id="offloadVCLAwbDetails" parameterClass="cargo.cms.val.bo.VclAwbBO" resultClass="cargo.cms.val.bo.VclAwbBO">
		select distinct eoa.awb_no as awbNo,  
		substr(eoa.awb_no, 1, 3)||'-'||substr(eoa.awb_no,4) as awbNoDisplay,
		to_char(eoa.awb_date,'DDMONYY') as awbDate,
		decode(ec.spl_code1, null, '', ec.spl_code1 || ',') ||
		     decode(ec.spl_code2, null, '', ec.spl_code2 || ',') || 
		     decode(ec.spl_code3, null, '', ec.spl_code3 || ',') ||
		     decode(ec.spl_code4, null, '', ec.spl_code4 || ',') ||
		     decode(ec.spl_code5, null, '', ec.spl_code5 || ',') ||
		     decode(ec.spl_code6, null, '', ec.spl_code6 || ',') || 
		     decode(ec.spl_code7, null, '', ec.spl_code7 || ',') || 
		     decode(ec.spl_code8, null, '', ec.spl_code8 || ',') || 
		     decode(ec.spl_code9, null, '', ec.spl_code9) as shc,
		ec.origin as org, ec.dest as dest, 
		ec.pcs as pcs, ec.wt as wt,
		nvl(eoa.off_bulk_pcs, 0)+nvl(eoa.off_ppk_pcs, 0) as bdPcs, nvl(eoa.off_bulk_wt, 0)+nvl(eoa.off_ppk_wt, 0) as bdWt,
		nvl(vcl.vclPcs, 0) vclPcs, nvl(vcl.vclWt, 0) vclWt, vcl.vclNo vclNo,
		nvl(eoa.pman_bulk_pcs, 0)+nvl(eoa.pman_ppk_pcs, 0) as manfPcs, nvl(eoa.pman_bulk_wt, 0)+nvl(eoa.pman_ppk_wt, 0) as manfWt,
		case when nvl(vcl.vclPcs, 0)&lt;(nvl(eoa.off_bulk_pcs, 0)+nvl(eoa.off_ppk_pcs, 0)) then 'Y' else 'N' end isVclReq
		from exp_offload_awb eoa
		join exp_car ec
		on ec.awb_no= eoa.awb_no
		and ec.awb_date= eoa.awb_date
		join cust_airl_spl_code casc
		on casc.spl_type='SPL_VAL'
		and casc.carr_code= substr(eoa.flt_key, 0, 2)
		and casc.spl_code in(ec.spl_code1, ec.spl_code2, ec.spl_code3, ec.spl_code4, 
		                      ec.spl_code5,ec.spl_code6,ec.spl_code7,ec.spl_code8,ec.spl_code9)
		left join (SELECT awb_no as awbNo, to_char(awb_date,'DDMONYY') awbDt, flt_key as fltKey, flt_date as fltDate,
		                   nvl(SUM(vcl_pcs), 0) vclPcs, nvl(SUM(vcl_wt), 0) vclWt, vcl_no vclNo
		           FROM val_vcl_hd vvh
		           where vvh.void_user_id is null
		           and   vvh.void_date is null
		          GROUP BY awb_no, to_char(awb_date,'DDMONYY'), flt_key, flt_date, vcl_no) vcl
		on vcl.awbNo=eoa.awb_no
		and to_date(vcl.AwbDt, 'DDMONYY')=to_char(eoa.awb_date, 'DDMONYY')
		and vcl.fltKey=eoa.flt_key and vcl.fltDate= eoa.flt_date
		where eoa.flt_key=#fltKey#
		and to_char(eoa.flt_date,'DDMONYY')=to_date(#fltDate#, 'DDMONYY')
	</select>
	<select id="crVCLAwbLocnDtls" parameterClass="cargo.cms.val.bo.VclAwbBO" resultClass="cargo.cms.val.bo.VclAwbBO">
		select locDtls.awbNo, locDtls.awbDate, locDtls.lsp, locDtls.uldNo, locDtls.locn,
	       locDtls.pcs, locDtls.netWt+locDtls.tareWt as grossWt,
	       locDtls.netWt+locDtls.tareWt as weighSclWt, locDtls.netWt, locDtls.tareWt
		from(select awb.awb_no awbNo, to_char(awb.awb_date, 'DDMONYY') awbDate, 
		            ai.lsp_no lsp, ai.uld_key uldNo, ai.loc_code locn, 
		            nvl(ai.locn_pcs, 0) pcs, nvl(ai.locn_wt, 0) wt, nvl(ai.locn_wt, 0) netWt,
		            decode(ai.lsp_no, null,  
		                (select nvl(tare_weight, 0) from mast_uld_type xx where xx.code=substr(ai.uld_key,1,3)),
		                (select nvl(tare_wt, 0) from mast_csd yy where yy.code=ai.lsp_no)) as tareWt
		    from awb awb
		    join awb_inventory ai
		    on ai.awb_no=awb.awb_no
		    and to_char(ai.awb_date, 'DDMONYY')=to_char(awb.awb_date, 'DDMONYY')
		    where awb.awb_no=#awbNo#
		    and to_char(awb.awb_date,'DDMONYY')=to_date(#awbDate#,'DDMONYY')) locDtls
	</select>
	<!--<select id="crVCLAwbDimDtls" parameterClass="cargo.cms.val.bo.VclAwbBO" resultClass="cargo.cms.val.bo.VclAwbBO">
	select * from dual
	</select>-->
	<select id="vclAwbLocnLspTareWt" parameterClass="java.lang.String" resultClass="java.lang.String">
		select to_char(nvl(tare_wt, 0)) from mast_csd where code=#lsp_no#
	</select>
	<select id="vclAwbLocnUldTareWt" parameterClass="java.lang.String" resultClass="java.lang.String">
		select to_char(nvl(tare_weight, 0)) from mast_uld_type where code=substr(#uld_key#,1,3)
	</select>
	<select id="getValVclNo" parameterClass="java.lang.String" resultClass="java.lang.String">
		select trim(to_char(VCL_NO_SEQ.NEXTVAL, '00000000')) from dual
	</select>
	<select id="fetchULDOffloadDest" parameterClass="cargo.cms.val.bo.VclAwbBO" resultClass="java.lang.String">
	select unldg_pt as dest from exp_offload_uld where flt_key=#fltKey# and flt_date=#fltDate# and uld_bt_no=#uldNo# and rownum=1
	</select>
	<insert id="insertValVclHd" parameterClass="cargo.cms.val.bo.VclAwbBO">
		insert into val_vcl_hd(VCL_NO, RECEIPT_DATE, VCL_TYPE, FLT_KEY, FLT_DATE, AWB_NO, AWB_DATE,
                       ULD_KEY, VCL_PCS, VCL_WT, DLV_BY, RMK, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE)
       values(#vclNo#, to_date(#recdDate#||#recdTimeHrs#||#recdTimeMin#, 'DDMONYYHH24MI'),  decode(#vclType#,'A','I','O'),
								 #fltKey#,#fltDate#,#awbNo#,to_date(#awbDate#,'DDMONYY'),
              #uldNo#,#vclPcs#,#vclWt#,#dlvBy#,#remarks#, #vclUserId#, SYSDATE,
                                  #vclUserId#, SYSDATE)
	</insert>
	<insert id="insertValVclDtl" parameterClass="cargo.cms.val.bo.VclAwbBO">
		insert into val_vcl_dtl(VCL_NO, DOC_LINE_NO, PCS, LOC_CODE, LSP_NO, ULD_KEY, 
	                        NET_WT, GROSS_WT, TARE_WT, WT_SCALE_ID, FSCALE_WT,
	                        CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE)
	       values(#vclNo#, #docLineNo#, #pcs#, #locn#, #lsp#, #uldNo#,
	              #netWt#, #grossWt#, #tareWt#, #wtScale#, #weighSclWt#,
	              #vclUserId#, SYSDATE,
	                          #vclUserId#, SYSDATE)
	</insert>
	<insert id="insertValVclDmn" parameterClass="cargo.cms.val.bo.VclAwbBO">
		insert into val_vcl_dmn(VCL_NO, DOC_LINE_NO, LENGTH, WIDTH, HEIGHT, PCS,
	                        RMK, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE)
	       values(#vclNo#, #docLineNo#, #length#, #width#, #height#, #pcs#,
	              #remarks#, #vclUserId#, SYSDATE,
	                         #vclUserId#, SYSDATE)
	</insert>
	<insert id="insertValVclBrkdn" parameterClass="cargo.cms.val.bo.VclAwbBO">
		insert into val_vcl_brkdn(VCL_NO, AWB_NO, AWB_DATE, PCS,
	                        CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE)
	       values(#vclNo#, #awbNo#, to_date(#awbDate#, 'DDMONYY'), #vclPcs#,
	              #vclUserId#, SYSDATE,
	                      #vclUserId#, SYSDATE)
	</insert>
	<select id="validateUldOwnInv" parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT NVL(COUNT(*),0) FROM ULD_INVENTORY WHERE UPPER(ULD_KEY)=UPPER(#ULDKEY#) AND OWNED_INV='Y'
	</select>
	<select id="validateLspNo" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT NVL(COUNT(*),0) FROM LSP_INVENTORY WHERE UPPER(lsp_no)=UPPER(#lsp#)
	</select>
	<select id="validateVclLocn" parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT to_char(NVL(COUNT(*),0)) FROM MAST_WH_LOC WHERE UPPER(code)=UPPER(#locn#)
	</select>
	<select id="validateFltInOut" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT decode(count(*), 0,'N','Y')
 		FROM FLT_OPR
 		WHERE FLT_KEY = #fltKey#
 		AND to_char(SCH_DATE,'DDMONYY') = to_date(#fltDate#,'DDMONYY')
 		AND FLT_TYPE = #fltType#
	</select>
	<select id="validateFltArr" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT decode(count(*), 0,'N','Y')
 		FROM FLT_OPR
 		WHERE FLT_KEY = #fltKey#
 		AND to_char(SCH_DATE,'DDMONYY') = to_date(#fltDate#,'DDMONYY') 
 		AND FLT_TYPE = #fltType#
 		and ACT_DATE IS NOT NULL
	</select>
	<select id="validateFltManf" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		select nvl(FINAL_MANF_IND, 'N') from flt_opr_events 
		where flt_key=#fltKey# 
		and   to_char(sch_date,'DDMONYY')=to_date(#fltDate#, 'DDMONYY')
		and   flt_type=#fltType#
	</select>
	<select id="validateInbUldChkIn" parameterClass="cargo.cms.val.bo.VclAwbBO" resultClass="java.lang.String">
		select nvl(ircd.chkin_yn, 'N') 
		from imp_ramp_chk_hd irch
		join imp_ramp_chk_dtl ircd
		on  ircd.tr_no=irch.tr_no
		where irch.flt_key=#fltKey# 
		and to_char(irch.flt_date,'DDMONYY')=to_date(#fltDate#,'DDMONYY')
		and ircd.uld_key=#uldNo#
	</select>
	<select id="validateVclInBrkdn" parameterClass="cargo.cms.val.bo.VclAwbBO" resultClass="java.lang.Integer">
		SELECT count(*)
		FROM awb awb
		join awb_inventory ai
		  on ai.awb_no = awb.awb_no
		  and ai.awb_date = awb.awb_date
		join uld_inventory ui
		  on ui.uld_key = ai.uld_key
		  and ui.imp_flt_key= ai.flt_key
		  and ui.imp_flt_date = ai.flt_date
		where ui.uld_key=#uldNo#
		and   ui.imp_flt_key=#fltKey#
		and   to_char(ui.imp_flt_date, 'DDMONYY')=to_date(#fltDate#, 'DDMONYY')
		<!-- and   ui.flt_type=decode(#vclType#,'A','I','E')-->
	</select>
	<select id="validateVclInSplCode" parameterClass="cargo.cms.val.bo.VclAwbBO" resultClass="java.lang.Integer">
		SELECT count(*)
		FROM awb awb
		join awb_inventory ai
		  on ai.awb_no = awb.awb_no
		  and ai.awb_date = awb.awb_date
		join uld_inventory ui
		  on ui.uld_key = ai.uld_key
		  and ui.flt_key = ai.flt_key
		  and ui.flt_date = ai.flt_date
		JOIN cust_airl_spl_code casc
		  ON casc.spl_type              ='SPL_VAL'
		  AND casc.carr_code                 = SUBSTR(ui.flt_key, 0, 2)
		  AND casc.spl_code                 IN (awb.SPL_CODE1, awb.SPL_CODE2, awb.SPL_CODE3, awb.SPL_CODE4, awb.SPL_CODE5, 
		                                        awb.SPL_CODE6, awb.SPL_CODE7, awb.SPL_CODE8, awb.SPL_CODE9)
		where ui.uld_key=#uldNo#
		and   ui.flt_key=#fltKey#
		and   to_char(ui.flt_date, 'DDMONYY')=to_date(#fltDate#, 'DDMONYY')
		and   ui.flt_type=decode(#vclType#,'A','I','E')
	</select>
	<select id="validateVclOffSplCode" parameterClass="cargo.cms.val.bo.VclAwbBO" resultClass="java.lang.Integer">
		SELECT count(*)
			FROM awb awb
			join exp_offload_uld_awb eoua
			  on eoua.awb_no = awb.awb_no
			  and eoua.awb_date = awb.awb_date
			join uld_inventory ui
	      	on  ui.uld_key = eoua.uld_bt_no
			JOIN cust_airl_spl_code casc
			  ON casc.spl_type		='SPL_VAL'
			  AND casc.carr_code    = SUBSTR(eoua.flt_key, 0, 2)
			  AND casc.spl_code     IN (awb.SPL_CODE1, awb.SPL_CODE2, awb.SPL_CODE3, awb.SPL_CODE4, awb.SPL_CODE5, 
			                        	awb.SPL_CODE6, awb.SPL_CODE7, awb.SPL_CODE8, awb.SPL_CODE9)
			where ui.uld_key=#uldNo#
			and   eoua.flt_key=#fltKey#
			and   to_char(eoua.flt_date, 'DDMONYY')=to_date(#fltDate#, 'DDMONYY')
	</select>
	<select id="validateVclOffloadisComp" parameterClass="cargo.cms.val.bo.VclAwbBO" resultClass="java.lang.Integer">
	 select count(1) from exp_offload_uld where uld_bt_no=#uldNo# and flt_key=#fltKey#
			and   to_char(flt_date, 'DDMONYY')=to_date(#fltDate#, 'DDMONYY') and confirmed_yn='Y'
	</select>
	<select id="fetchVclUldTareGrossDetails" parameterClass="cargo.cms.val.bo.VclAwbBO" resultClass="cargo.cms.val.bo.VclAwbBO">
	SELECT TARE_WEIGHT AS tareWt,GROSS_WEIGHT AS grossWt FROM ULD_INVENTORY WHERE ULD_KEY=#uldNo#
	</select>
	
	<select id="validatePpkOrNoBrk" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		SELECT COUNT(*) 
		FROM ULD_INVENTORY
		WHERE (PPK_IND='Y' OR MIX_PPK_IND   ='Y' OR HANDLING_MODE='NBK' OR HANDLING_MODE ='PPK')
		AND ULD_KEY      =#uldNo#
	</select>
	<select id="validateUldInVcl" parameterClass="cargo.cms.val.bo.VclAwbBO" resultClass="java.lang.Integer">	
		select count(*)
		from  val_vcl_hd 
		where uld_key=#uldNo#
		and   flt_key=#fltKey#
		and   to_char(flt_date, 'DDMONYY') =to_date(#fltDate#, 'DDMONYY')
		and   vcl_type = decode(#vclType#,'A','I','O')
		and	  void_user_id is null
		and   void_date is null
	</select>
	<select id="validateOffUldChkIn" parameterClass="cargo.cms.val.bo.VclAwbBO" resultClass="java.lang.String">
		select nvl(checked_in_flag, 'N')
		from   exp_offload_uld
		where uld_bt_no=#uldNo#
		and   flt_key=#fltKey#
		and   to_char(flt_date, 'DDMONYY') =to_date(#fltDate#, 'DDMONYY')
	</select>
	<select id="fetchUldInAwbDetails" parameterClass="cargo.cms.val.bo.VclAwbBO" resultClass="cargo.cms.val.bo.VclAwbBO">
		select ai.awb_no awbNo, substr(ai.awb_no, 1, 3)||'-'||substr(ai.awb_no, 4) awbNoDisplay,
			   to_char(ai.awb_date, 'DDMONYY') awbDate,
			   ai.locn_pcs pcs, ai.locn_wt as netWt, nvl(mut.tare_weight, 0) as tareWt,
			   nvl(ai.locn_wt,0)+nvl(mut.tare_weight, 0) as grossWt, ai.loc_code as locn
		from awb_inventory ai
		join mast_uld_type mut
		on mut.code=substr(ai.uld_key,1,3)
		where ai.uld_key=#uldNo#
		and ai.flt_key=#fltKey#
		and to_char(ai.flt_date,'DDMONYY')=to_date(#fltDate#,'DDMONYY')
		and ai.flt_type = decode(#vclType#,'A','I','E')
	</select>
	<select id="fetchUldOffAwbDetails" parameterClass="cargo.cms.val.bo.VclAwbBO" resultClass="cargo.cms.val.bo.VclAwbBO">
		select ai.awb_no awbNo, substr(ai.awb_no, 1, 3)||'-'||substr(ai.awb_no, 4) awbNoDisplay,
					   to_char(ai.awb_date, 'DDMONYY') awbDate,
					   ai.locn_pcs pcs, ai.locn_wt as netWt, nvl(u.tare_weight, 0) as tareWt,
					   nvl(ai.locn_wt,0)+nvl(u.tare_weight, 0) as grossWt, ai.loc_code as locn
				from awb_inventory ai
		    join exp_offload_uld_awb eoua
		    on eoua.uld_bt_no=ai.uld_key
		    and eoua.awb_no= ai.awb_no
		    and eoua.awb_date = ai.awb_date
				join uld_inventory u
				on u.uld_key=ai.uld_key
				where ai.uld_key=#uldNo#
				and eoua.flt_key=#fltKey#
				and to_char(eoua.flt_date,'DDMONYY')=to_date(#fltDate#,'DDMONYY')
	</select>
	<select id="validateFromToDates" parameterClass="cargo.cms.val.bo.VclAwbBO" resultClass="java.lang.String">
		select case when to_date(#fromDt#,'DDMONYY')>to_date(#toDt#, 'DDMONYY') 
            		THEN 'N' else 'Y' end
		from dual
	</select>
	<select id="fetchUpdVclList" parameterClass="cargo.cms.val.bo.VclAwbBO" resultClass="cargo.cms.val.bo.VclAwbBO">
		select hd.vcl_no vclNo, hd.vcl_type vclType, to_char(hd.cr_date, 'DDMONYY') crDate, 
		       hd.awb_no awbNo, decode(hd.awb_no, null, '',substr(hd.awb_no,1,3)||'-'||substr(hd.awb_no,4)) awbNoDisplay,
		       hd.uld_key uldNo, hd.uld_key uldNo1, hd.vcl_pcs vclPcs, hd.vcl_wt vclWt, 
		       hd.flt_key fltKey, to_char(hd.flt_date, 'DDMONYY') fltDate, '' secChkReq, '' secChkCmpl 
		from val_vcl_hd hd
		join FLT_OPR  flt ON flt.FLT_KEY = hd.FLT_KEY AND 
			flt.SCH_DATE = hd.FLT_DATE AND
			flt.FLT_TYPE=decode(hd.vcl_type, 'I','A','D')			
		where to_char(hd.cr_date,'DDMONYY') BETWEEN to_date(#fromDt#, 'DDMONYY') and to_date(#toDt#, 'DDMONYY')
		<isNotEmpty property="vclType">
			and hd.vcl_type=decode(#vclType#, 'A','I',decode(#vclType#, 'O','O','E'))
		</isNotEmpty>
		<isNotEmpty property="fltKey">			
			and hd.flt_key = #fltKey#
			<isNotEmpty property="loginCarrier">
				AND	(flt.CARR_CODE = #loginCarrier#
				OR flt.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP 
				WHERE GRP_CARR_CODE	= #loginCarrier#))							
			</isNotEmpty>
		</isNotEmpty>
		<isNotEmpty property="fltDate">
			and to_char(hd.flt_date, 'DDMONYY') = to_date(#fltDate#, 'DDMONYY')
		</isNotEmpty>
		<isNotEmpty property="awbNo">
			and hd.awb_no = #awbNo#
		</isNotEmpty>
		<isNotEmpty property="uldNo">
			and hd.uld_key =#uldNo#
		</isNotEmpty>
		<isEqual property="vclStatus" compareValue="N">
			and hd.void_user_id is not null
		</isEqual>
		<isEqual property="vclStatus" compareValue="Y">
			and hd.void_user_id is null
	    </isEqual>
	    <isEqual property="isOutbound" compareValue="Y">
		    union
		    select erh.vcl_no vclNo, 'E' vclType, to_char(erh.rcl_date, 'DDMONYY') crDate, 
		           erh.awb_no awbNo, DECODE(erh.awb_no, null, '', substr(erh.awb_no,1,3)||'-'||substr(erh.awb_no,4)) awbNoDisplay,
		           erh.uld_key uldNo, erh.uld_key uldNo1, 
		           erh.rcl_pcs vclPcs, erh.rcl_wt vclWt, 
		           epa.flt_key fltKey, to_char(epa.flt_date, 'DDMONYY') fltDate,
		             erh.SEC_CHECK as secChkReq, 
		             decode((select count(erscd.RCL_NO) from EXP_RCL_SEC_CHK_DTL erscd where erscd.RCL_NO=erh.RCL_NO),0,'N','Y') as secChkCmpl
		    from exp_rcl_hd erh		
		    left join exp_pmanifest_awb epa  on epa.awb_no = erh.awb_no and to_char(epa.awb_date, 'DDMONYY') = to_char(erh.awb_date, 'DDMONYY')
		    where to_char(erh.rcl_date, 'DDMONYY') between to_date(#fromDt#, 'DDMONYY') and to_date(#toDt#, 'DDMONYY')
		    and erh.vcl_no is not null and (erh.ppk_type = 'B' or erh.ppk_type = 'P')
		    <isNotEmpty property="awbNo">
		      and erh.awb_no=#awbNo#
		    </isNotEmpty>
		    <isNotEmpty property="uldNo">
		      <isNotEqual property="uldNo" compareValue="">
		        AND erh.ULD_KEY is not null
		        AND erh.ULD_KEY =  #uldNo# 
		      </isNotEqual>
				</isNotEmpty>
		    <isNotEmpty property="fltKey">
		      and epa.flt_key = #fltKey#
		    </isNotEmpty>
		    <isNotEmpty property="fltDate">
		      and to_char(epa.flt_date, 'DDMONYY') = to_date(#fltDate#, 'DDMONYY')
		    </isNotEmpty>
		    <isNotEqual property="vclStatus" compareValue="Y">
					and erh.STATUS ='V'
		    </isNotEqual>
		    <isEqual property="vclStatus" compareValue="Y">
		      and erh.STATUS !='V'
		    </isEqual>
		    and not exists(
		              select null from val_vcl_hd vvh 
		              where vvh.void_user_id is null 
		              and vvh.awb_no = erh.awb_no 
		              and to_char(vvh.awb_date, 'DDMONYY') = to_char(erh.awb_date, 'DDMONYY')
		              and vvh.flt_key = epa.flt_key
		              and to_char(vvh.flt_date, 'DDMONYY') = to_char(epa.flt_date, 'DDMONYY'))
		    UNION
		    SELECT erh.vcl_no vclNo, 'E' vclType, to_char(erh.rcl_date, 'DDMONYY') crDate, 
		          '' awbNo, '' awbNoDisplay, erh.uld_key uldNo, erh.uld_key uldNo1, 
		          erd.pcs vclPcs, erd.net_wt vclWt, epua.flt_key fltKey, to_char(epua.flt_date, 'DDMONYY') fltDate,
		          erh.SEC_CHECK as secChkReq, 
		          decode((select count(erscd.RCL_NO) from EXP_RCL_SEC_CHK_DTL erscd where erscd.RCL_NO=erh.RCL_NO),0,'N','Y') as secChkCmpl
		    FROM EXP_RCL_HD erh
		    join EXP_RCL_DTL erd on erh.rcl_no = erd.rcl_no
		    left join exp_pmanifest_uld epua  on epua.uld_bt_no = erd.uld_key
		    WHERE erh.RCL_DATE BETWEEN to_date(#fromDt#, 'DDMONYY') and to_date(#toDt#, 'DDMONYY')+1
		    AND erh.VCL_NO IS NOT NULL
		    AND erh.ULD_KEY IS NOT NULL
		    <isNotEmpty property="uldNo">
		      <isNotEqual property="uldNo" compareValue="">
		        AND erh.ULD_KEY =  #uldNo# 
		      </isNotEqual>
			</isNotEmpty>
		    <isNotEmpty property="fltKey">
		      and epua.flt_key = #fltKey#
		    </isNotEmpty>
		    <isNotEmpty property="fltDate">
		      and to_char(epua.flt_date, 'DDMONYY') = to_date(#fltDate#, 'DDMONYY')
		    </isNotEmpty>
		    <isNotEqual property="vclStatus" compareValue="Y">
					and erh.STATUS ='V'
		    </isNotEqual>
		    <isEqual property="vclStatus" compareValue="Y">
		      and erh.STATUS !='V'
		    </isEqual>
		    and not exists(
		                  select null from val_vcl_hd vvh 
		                  where vvh.void_user_id is null 
		                  and vvh.uld_key = erh.uld_key
		                  and vvh.flt_key = epua.flt_key
		                  and to_char(vvh.flt_date, 'DDMONYY') = to_char(epua.flt_date, 'DDMONYY'))
		</isEqual>
          <dynamic prepend="ORDER BY ">
	            <isNotEmpty property="sortOrder.sortField">
	                $sortOrder.sortField$
	           </isNotEmpty>
          </dynamic>
	</select>
	<select id="fetchUpdVclListCount" parameterClass="cargo.cms.val.bo.VclAwbBO" resultClass="java.lang.Integer">
		select count(*) AS totalRowCount from(select hd.vcl_no vclNo, hd.vcl_type vclType, to_char(hd.cr_date, 'DDMONYY') crDate, 
		       hd.awb_no awbNo, decode(hd.awb_no, null, '',substr(hd.awb_no,1,3)||'-'||substr(hd.awb_no,4)) awbNoDisplay,
		       hd.uld_key uldNo, hd.uld_key uldNo1, hd.vcl_pcs vclPcs, hd.vcl_wt vclWt, 
		       hd.flt_key fltKey, to_char(hd.flt_date, 'DDMONYY') fltDate, '' secChkReq, '' secChkCmpl 
		from val_vcl_hd hd
		join FLT_OPR  flt ON flt.FLT_KEY = hd.FLT_KEY AND 
			flt.SCH_DATE = hd.FLT_DATE AND
			flt.FLT_TYPE=decode(hd.vcl_type, 'I','A','D')			
		where hd.cr_date BETWEEN to_date(#fromDt#, 'DDMONYY') and to_date(#toDt#, 'DDMONYY')
		<isNotEmpty property="vclType">
			and hd.vcl_type=decode(#vclType#, 'A','I',decode(#vclType#, 'O','O','E'))
		</isNotEmpty>
		<isNotEmpty property="fltKey">			
			and hd.flt_key = #fltKey#
			<isNotEmpty property="loginCarrier">
				AND	(flt.CARR_CODE = #loginCarrier#
				OR flt.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP 
				WHERE GRP_CARR_CODE	= #loginCarrier#))							
			</isNotEmpty>
		</isNotEmpty>
		<isNotEmpty property="fltDate">
			and to_char(hd.flt_date, 'DDMONYY') = to_date(#fltDate#, 'DDMONYY')
		</isNotEmpty>
		<isNotEmpty property="awbNo">
			and hd.awb_no = #awbNo#
		</isNotEmpty>
		<isNotEmpty property="uldNo">
			and hd.uld_key =#uldNo#
		</isNotEmpty>
		<isEqual property="vclStatus" compareValue="N">
			and hd.void_user_id is not null
		</isEqual>
		<isEqual property="vclStatus" compareValue="Y">
			and hd.void_user_id is null
	    </isEqual>
	    <isEqual property="isOutbound" compareValue="Y">
		    union
		    select erh.vcl_no vclNo, 'E' vclType, to_char(erh.rcl_date, 'DDMONYY') crDate, 
		           erh.awb_no awbNo, DECODE(erh.awb_no, null, '', substr(erh.awb_no,1,3)||'-'||substr(erh.awb_no,4)) awbNoDisplay,
		           erh.uld_key uldNo, erh.uld_key uldNo1, 
		           erh.rcl_pcs vclPcs, erh.rcl_wt vclWt, 
		           epa.flt_key fltKey, to_char(epa.flt_date, 'DDMONYY') fltDate,
		             erh.SEC_CHECK as secChkReq, 
		             decode((select count(erscd.RCL_NO) from EXP_RCL_SEC_CHK_DTL erscd where erscd.RCL_NO=erh.RCL_NO),0,'N','Y') as secChkCmpl
		    from exp_rcl_hd erh
		    join awb awb
		    on awb.awb_no = erh.awb_no 
		    and to_char(awb.awb_date, 'DDMONYY') = to_char(erh.awb_date, 'DDMONYY')
		    left join exp_pmanifest_awb epa
		    on epa.awb_no = erh.awb_no 
		    and to_char(epa.awb_date, 'DDMONYY') = to_char(erh.awb_date, 'DDMONYY')
		    where to_char(erh.rcl_date, 'DDMONYY') between to_date(#fromDt#, 'DDMONYY') and to_date(#toDt#, 'DDMONYY')
		    and erh.vcl_no is not null
		    <isNotEmpty property="awbNo">
		      and erh.awb_no=#awbNo#
		    </isNotEmpty>
		    <isNotEmpty property="uldNo">
		      <isNotEqual property="uldNo" compareValue="">
		        AND erh.ULD_KEY is not null
		        AND erh.ULD_KEY =  #uldNo# 
		      </isNotEqual>
			</isNotEmpty>
		    <isNotEmpty property="fltKey">
		      and epa.flt_key = #fltKey#
		    </isNotEmpty>
		    <isNotEmpty property="fltDate">
		      and to_char(epa.flt_date, 'DDMONYY') = to_date(#fltDate#, 'DDMONYY')
		    </isNotEmpty>
		    <isNotEqual property="vclStatus" compareValue="Y">
					and erh.STATUS ='V'
		    </isNotEqual>
		    <isEqual property="vclStatus" compareValue="Y">
		      and erh.STATUS !='V'
		    </isEqual>
		    and not exists(
		              select null from val_vcl_hd vvh 
		              where vvh.void_user_id is null 
		              and vvh.awb_no = erh.awb_no 
		              and to_char(vvh.awb_date, 'DDMONYY') = to_char(erh.awb_date, 'DDMONYY')
		              and vvh.flt_key = epa.flt_key
		              and to_char(vvh.flt_date, 'DDMONYY') = to_char(epa.flt_date, 'DDMONYY'))
		    UNION
		    SELECT erh.vcl_no vclNo, 'E' vclType, to_char(erh.rcl_date, 'DDMONYY') crDate, 
		          '' awbNo, '' awbNoDisplay, erh.uld_key uldNo, erh.uld_key uldNo1, 
		          erd.pcs vclPcs, erd.net_wt vclWt, epua.flt_key fltKey, to_char(epua.flt_date, 'DDMONYY') fltDate,
		          erh.SEC_CHECK as secChkReq, 
		          decode((select count(erscd.RCL_NO) from EXP_RCL_SEC_CHK_DTL erscd where erscd.RCL_NO=erh.RCL_NO),0,'N','Y') as secChkCmpl
		    FROM EXP_RCL_HD erh
		    join EXP_RCL_DTL erd
		    on erh.rcl_no = erd.rcl_no
		    left join exp_pmanifest_uld epua
		    on epua.uld_bt_no = erd.uld_key
		    WHERE erh.RCL_DATE BETWEEN to_date(#fromDt#, 'DDMONYY') and to_date(#toDt#, 'DDMONYY')+1
		    AND erh.VCL_NO IS NOT NULL
		    AND erh.ULD_KEY IS NOT NULL
		    <isNotEmpty property="uldNo">
		      <isNotEqual property="uldNo" compareValue="">
		        AND erh.ULD_KEY =  #uldNo# 
		      </isNotEqual>
			</isNotEmpty>
		    <isNotEmpty property="fltKey">
		      and epua.flt_key = #fltKey#
		    </isNotEmpty>
		    <isNotEmpty property="fltDate">
		      and to_char(epua.flt_date, 'DDMONYY') = to_date(#fltDate#, 'DDMONYY')
		    </isNotEmpty>
		    <isNotEqual property="vclStatus" compareValue="Y">
					and erh.STATUS ='V'
		    </isNotEqual>
		    <isEqual property="vclStatus" compareValue="Y">
		      and erh.STATUS !='V'
		    </isEqual>
		    and not exists(
		                  select null from val_vcl_hd vvh 
		                  where vvh.void_user_id is null 
		                  and vvh.uld_key = erh.uld_key
		                  and vvh.flt_key = epua.flt_key
		                  and to_char(vvh.flt_date, 'DDMONYY') = to_char(epua.flt_date, 'DDMONYY'))
		</isEqual>
		)
	</select>
<select id="fetchUpdVclbyAwbHd" parameterClass="java.lang.String" resultClass="cargo.cms.val.bo.VclAwbBO">
		select vvh.vcl_no vclNo, decode(vvh.vcl_type, 'I', 'Import', 'Export') vclType, 
		       vvh.awb_no awbNo, substr(vvh.awb_no,1,3)||'-'||substr(vvh.awb_no,4) awbNoDisplay,
		       vvh.vcl_pcs vclPcs, vvh.vcl_wt vclWt, 
		       vvh.flt_key fltKey, to_char(vvh.flt_date, 'DDMONYY') fltDate, 
		       vvh.rmk remarks, vvh.dlv_by dlvBy, 
		       to_char(vvh.receipt_date, 'DDMONYY HH24:MI') timeOfRecpt,
		       splcd shc
		from val_vcl_hd vvh
		JOIN (select awb.awb_no, awb.awb_date, 
		           decode(awb.spl_code1, null, '', awb.spl_code1 || ',') ||
		           decode(awb.spl_code2, null, '', awb.spl_code2 || ',') || 
		           decode(awb.spl_code3, null, '', awb.spl_code3 || ',') ||
		           decode(awb.spl_code4, null, '', awb.spl_code4 || ',') ||
		           decode(awb.spl_code5, null, '', awb.spl_code5 || ',') ||
		           decode(awb.spl_code6, null, '', awb.spl_code6 || ',') || 
		           decode(awb.spl_code7, null, '', awb.spl_code7 || ',') || 
		           decode(awb.spl_code8, null, '', awb.spl_code8 || ',') || 
		           decode(awb.spl_code9, null, '', awb.spl_code9) splcd
		      from awb) awb
		    on awb.awb_no= vvh.awb_no
		    and to_char(awb.awb_date, 'DDMONYY')=to_char(vvh.awb_date, 'DDMONYY')
		where vcl_no=#vclNo#
		union
		select erh.vcl_no vclNo, 'Outbound' vclType, 
		       erh.awb_no awbNo, substr(erh.awb_no,1,3)||'-'||substr(erh.awb_no,4) awbNoDisplay,
				   erh.rcl_pcs vclPcs, erh.rcl_wt vclWt, 
				   epa.flt_key fltKey, to_char(epa.flt_date, 'DDMONYY') fltDate, 
				   erh.rmk remarks, erh.dlv_by dlvBy, 
				   to_char(erh.rcl_date, 'DDMONYY HH24:MI') timeOfRecpt,
				   decode(spl_code1, null, '', spl_code1 || decode(spl_code2, null, '',','))
		               || decode(spl_code2, null, '', spl_code2 || decode(spl_code3, null, '',','))
		               || decode(spl_code3, null, '', spl_code3 || decode(spl_code4, null, '',','))
		               || decode(spl_code4, null, '', spl_code4 || decode(spl_code5, null, '',','))
		               || decode(spl_code5, null, '', spl_code5 || decode(spl_code6, null, '',','))
		               || decode(spl_code6, null, '', spl_code6 || decode(spl_code7, null, '',','))
		               || decode(spl_code7, null, '', spl_code7 || decode(spl_code8, null, '',','))
		               || Decode(Spl_Code8, Null, '', Spl_Code8 || Decode(Spl_Code9, Null, '',',')) 
		               || decode(spl_code9, null, '', spl_code9 )  shc 
		from exp_rcl_hd erh
		left join exp_pmanifest_awb epa
		on epa.awb_no = erh.awb_no
		and to_char(epa.awb_date, 'DDMONYY') = to_char(erh.awb_date, 'DDMONYY')		
		where erh.vcl_no = #vclNo#
	</select>
	<select id="fetchUpdVclbyAwbDim" parameterClass="java.lang.String" resultClass="cargo.cms.val.bo.VclAwbBO">
		select 
			length as length,
			width as width,
			height as height,  
			pcs as pcs,
			rmk as remarks  
			from 
			val_vcl_dmn 
			where vcl_no=#vclNo#
			union all
			select 
			length as length,
			width as width,
			height as height,
			pcs as pcs,
			remarks as remarks
			from exp_rcl_dmn   
			where rcl_no= (select rcl_no from exp_rcl_hd where vcl_no=#vclNo#) 
			and not exists (SELECT NULL FROM val_vcl_dmn WHERE vcl_no=#vclNo#)
	</select>
	<select id="fetchUpdVclbyAwbLocn" parameterClass="java.lang.String" resultClass="cargo.cms.val.bo.VclAwbBO">
		select pcs pcs, gross_wt grossWt, net_wt netWt, 
		       wt_scale_id wtScale, fscale_wt weighSclWt, tare_wt tareWt, 
		       lsp_no lsp, uld_key uldNo, loc_code locn
		from val_vcl_dtl 
		where vcl_no=#vclNo#
		union
		select pcs pcs, gross_wt grossWt, net_wt netWt, 
		       '' wtScale, fscale_wt weighSclWt, tare_wt tareWt, 
				       lsp_no lsp, uld_key uldNo, loc_code locn
				from exp_rcl_dtl 
				where rcl_no=(select rcl_no from exp_rcl_hd where vcl_no=#vclNo#)
	</select>
	<select id="fetchUpdVclbyUldHd" parameterClass="java.lang.String" resultClass="cargo.cms.val.bo.VclAwbBO">
		select vvh.flt_key fltKey, to_char(vvh.flt_date, 'DDMONYY') fltDate, vvh.uld_key uldNo,
			   vvh.vcl_no vclNo, DECODE(vvh.vcl_type, 'I','Import',DECODE(vvh.vcl_type,'O','Offload','Export')) vclType,
			   to_char(vvh.receipt_date, 'DDMONYY HH24:MI') timeOfRecpt,
			   vvd.wt_scale_id wtScale, vvd.fscale_wt weighSclWt,
			   vvd.gross_wt grossWt, vvd.tare_wt tareWt, vvd.net_wt netWt,
			   vvh.rmk remarks, vvh.dlv_by dlvBy
		from val_vcl_hd vvh
		join (select vcl_no, wt_scale_id, round(sum(nvl(net_wt,0)) + round(sum(nvl(tare_wt,0))/count(vcl_no)))  gross_wt, round(sum(nvl(tare_wt,0))/count(vcl_no)) tare_wt,
		             sum(net_wt) net_wt, sum(fscale_wt) fscale_wt
		      from val_vcl_dtl
		      group by vcl_no, wt_scale_id) vvd
		on vvd.vcl_no=vvh.vcl_no
		where vvh.vcl_no=#vclNo#
		union
	    select epu.flt_key fltKey, to_char(epu.flt_date, 'DDMONYY') fltDate, erh.uld_key uldNo,
				   erh.vcl_no vclNo, 'Export' vclType,
				   to_char(erh.rcl_date, 'DDMONYY HH24:MI') timeOfRecpt,
				   '' wtScale, erd.fscale_wt weighSclWt,
				   erd.gross_wt grossWt, erd.tare_wt tareWt, erd.net_wt netWt,
				   erh.rmk remarks, erh.dlv_by dlvBy
			from exp_rcl_hd erh
	    join (select rcl_no, sum(fscale_wt) fscale_wt, sum(gross_wt) gross_wt, sum(tare_wt) tare_wt, sum(net_wt) net_wt
	          from exp_rcl_dtl group by rcl_no) erd
	    on erd.rcl_no = erh.rcl_no
			left join exp_pmanifest_uld epu
			on epu.uld_bt_no=erh.uld_key
			where erh.rcl_no=(select rcl_no from exp_rcl_hd where vcl_no=#vclNo#)
	</select>
	<select id="fetchUpdVclbyUldAwbList" parameterClass="java.lang.String" resultClass="cargo.cms.val.bo.VclAwbBO">
		select awb_no awbNo, substr(awb_no,1,3)||'-'||substr(awb_no,4) awbNoDisplay, pcs
		from val_vcl_brkdn 
		where vcl_no=#vclNo#
		union
		select awb_no awbNo, substr(awb_no,1,3)||'-'||substr(awb_no,4) awbNoDisplay, pcs
		from exp_rcl_brkdn 
		where rcl_no=(select rcl_no from exp_rcl_hd where vcl_no=#vclNo#)
	</select>
	<select id="fetchVCLNum" parameterClass="cargo.cms.val.bo.VclAwbBO" resultClass="java.lang.String">
	SELECT VCL_NO FROM VAL_VCL_HD WHERE FLT_KEY=#fltKey# AND FLT_DATE=#fltDate# AND AWB_NO=#awbNo# AND AWB_DATE=#awbDate#
	</select>
	<update id="updateVclVoidVcl" parameterClass="cargo.cms.val.bo.VclAwbBO">
		update val_vcl_hd 
			set void_user_id=#vclUserId#,
				void_date = to_date(to_char(sysdate, 'DDMONYY'), 'DDMONYY')
		where vcl_no=#vclNo#
	</update>
	<update id="updVclAwbExist" parameterClass="cargo.cms.val.bo.VclAwbBO">
		update val_vcl_hd 
		set vcl_pcs = vcl_pcs + #vclPcs#,
		    vcl_wt  = vcl_wt  + #vclWt#,
		    receipt_date = to_date(#recdDate#||#recdTimeHrs#||#recdTimeMin#, 'DDMONYYHH24MI'),
		    dlv_by = #dlvBy#,
		    rmk = decode(rmk, null, #remarks#, rmk||','||#remarks#)
		where vcl_no = #vclNo#
	</update>
	<select id="chkVclAwbDtlExist" parameterClass="cargo.cms.val.bo.VclAwbBO" resultClass="java.lang.String">
		select decode(count(*), 0, 'N', 'Y') from val_vcl_dtl where vcl_no = #vclNo# and lsp_no = #lsp# and loc_code=#locn#
	</select>
	<update id="updVclAwbDtlExist" parameterClass="cargo.cms.val.bo.VclAwbBO">
		update val_vcl_dtl
		set PCS = pcs+nvl(#pcs#,0), NET_WT = net_wt + nvl(#netWt#, 0), 
		    GROSS_WT = gross_wt+nvl(#grossWt#, 0), TARE_WT = tare_wt + nvl(#tareWt#,0),
		    FSCALE_WT = FSCALE_WT + nvl(#weighSclWt#, 0)
		where vcl_no = #vclNo#
		and (lsp_no = #lsp# OR ULD_KEY =#uldNo#)
		and loc_code=#locn#
	</update>
	<update id="updVclAwbBrkdnExist" parameterClass="cargo.cms.val.bo.VclAwbBO">
		update val_vcl_brkdn
		set PCS = pcs + nvl(#vclPcs#, 0)
		where vcl_no = #vclNo#
		and awb_no = #awbNo#		
	</update>
	<insert id="createLSPInvVcl" parameterClass="cargo.cms.val.bo.VclAwbBO">
		insert into LSP_INVENTORY
			(LSP_NO, EMPTY_FLG, REF_TR_TYPE, LOC_CODE, REF_TR_NO, REF_TR_EVENT, REF_TR_DATE, REF_DOC_LINE_NO,
			 REF_MOV_FROM, REF_LOC_FROM, REF_RMK, TARGET, STRG_DATE, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE, LSP_TYPE)
		values(#lsp#, 'Y', 'VC', #locn#, #locn#, '', SYSDATE, '1',
			   #locn#, #locn#, 'INSERTING FROM VCL', '',  SYSDATE, #vclUserId#, SYSDATE, #vclUserId#, SYSDATE, substr(#lsp#,0,1))
	</insert>
	<insert id="createULDInvVcl" parameterClass="cargo.cms.val.bo.VclAwbBO">
		insert into uld_inventory
		    (uld_key, flt_type, flt_key, flt_date, loc_code,  owner_id, strg_date, agent_inv, cfm_status,
		        lm_user_id, lm_date,first_wt)
		values (#uldNo#, 'E', #fltKey#, #fltDate#, #locn#,  substr(#uldNo#,-2),  sysdate, '', '',
		    #vclUserId#, sysdate,null)
    </insert>
	<select id="fetchSecurityCheckDetails" parameterClass="cargo.cms.val.bo.VclAwbBO" resultClass="cargo.cms.val.bo.VclAwbBO">
		SELECT
		      C.ITM_DESC AS secItmDesc,
		      A.SC_PCS AS secPcs,
		      A.SC_WT AS secWt, 
		      A.SC_PAID_BY AS secPaidBy,
		      A.SC_RESULT AS secResult,
		      B.SEC_AGENT_NO AS secAgentNum,
		      B.SEC_AGENT_NAME AS secAgentName,
		      B.SEC_KC_NO AS kcNumber,
		      B.SEC_RA_NO AS raNumber,
		      B.SEC_RMK AS secRemarks,
		      B.CARR_CODE AS carrCode,
		      A.AWB_NO AS awbNo,
		      B.ULD_NO AS uldNo,
		      B.RCL_PCS AS vclPcs,
		      b.RCL_WT AS vclWt,
		      TO_CHAR(A.SC_START_DATE,'DDMONYY HH24:MI') AS startDate,
		      TO_CHAR( A.SC_END_DATE,'DDMONYY HH24:MI') AS holdingDate
		FROM EXP_RCL_SEC_CHK_DTL A
		     JOIN EXP_RCL_HD B 
		     ON A.AWB_NO=B.AWB_NO 
		     and a.rcl_no=b.rcl_no
		     JOIN BILL_ITM_MASTER c
		     ON C.ITM_CODE=A.SC_ITM_CODE
		     and decode(c.ITM_CODE_SFX, '', 'a', C.ITM_CODE_SFX) = decode(A.SC_ITM_SFX, '', 'a', A.SC_ITM_SFX)
		WHERE A.RCL_NO IN (SELECT RCL_NO  FROM EXP_RCL_HD WHERE VCL_NO=#vclNo#) 
	</select>
	
	<!--  Electronic Flight File Start-->
	<select id="fetchElcFltFileList" parameterClass="cargo.cms.misc.bo.ElcFltFileBO" resultClass="cargo.cms.misc.bo.ElcFltFileBO">
		SELECT FI.fltKey fltKey, FI.fltDate fltDate,FI.cargoAcftType cargoAcftType, FI.fltType fltType,
			   decode(FI.fltType, 'D', decode(FI.atd,null,decode(FI.etd,null,FI.std,FI.etd),FI.atd||'*'),
                           decode(FI.ata,null,decode(FI.eta,null,FI.sta,FI.eta),FI.ata||'*')) fltTime,
		       FI.std std, FI.etd etd, FI.atd atd, FI.sta sta, FI.eta eta, FI.ata, FI.portOfCall, FI.fltPfx, FI.fltSfx,
		       DECODE(FI.IR,0,'N','Y') ir, DECODE(FI.IW,0,'N','Y') iw, DECODE(FI.ID,0,'N','Y') id, 
		       DECODE(FI.ER,0,'N','Y') er, DECODE(FI.EW,0,'N','Y') ew, DECODE(FI.ED,0,'N','Y') ed,
		       DECODE(FF.comp_dat, null, 'N', 'Y') comp, FF.DOC_POUCH docPouch, FF.FLT_LOG fltLog,FF.FLT_LOG oldFltLog,
			   impRTrId, impWTrId, impDTrId, expRTrId, expWTrId, expDTrId, FFI.img_name transactionId,
			   decode(FF.COMP_DAT, null, '', FOE.DOC_COMPL_USER_ID) compUserId,
			   decode(FF.COMP_DAT, null, '', to_char(FOE.DOC_COMPL_DATE, 'DDMONYY')) compDt,
			   FI.fltModule fltMod, (select CODE_DESC from mast_code_dtl where code_type='WTH_CONDN' and code=FI.wthr) weather, FI.orgDest
		FROM (SELECT flt.FLT_KEY AS fltKey, TO_CHAR(flt.SCH_DATE,'DDMONYY') AS fltDate,
		        (SELECT CODE_DESC FROM MAST_ACFT_TYPE WHERE CODE =fLT.ACFT_TYPE) AS cargoAcftType,
		        flt.flt_type fltType, flt.carr_code as fltPfx, flt.flt_no as fltSfx,
		        flt.rho_Id ,
		        decode(flt.flt_type,'D', DECODE(flt.sch_time,NULL,'',substr(trim(to_char(flt.sch_time,'0000')),1,2)||':'||substr(flt.sch_time,-2)))  AS std      ,
		        decode(flt.flt_type,'D', DECODE(flt.est_time,NULL,'',substr(trim(to_char(flt.est_time,'0000')),1,2)||':'||substr(flt.est_time,-2)))  AS etd      ,
		        decode(flt.flt_type,'D', DECODE(flt.act_time,NULL,'',substr(trim(to_char(flt.act_time,'0000')),1,2)||':'||substr(flt.act_time,-2)))  AS atd      ,
		        decode(flt.flt_type,'A', DECODE(flt.sch_time,NULL,'',substr(trim(to_char(flt.sch_time,'0000')),1,2)||':'||substr(flt.sch_time,-2)))  AS sta      ,
		        decode(flt.flt_type,'A', DECODE(flt.est_time,NULL,'',substr(trim(to_char(flt.est_time,'0000')),1,2)||':'||substr(flt.est_time,-2)))  AS eta      ,
		        decode(flt.flt_type,'A', DECODE(flt.act_time,NULL,'',substr(trim(to_char(flt.act_time,'0000')),1,2)||':'||substr(flt.act_time,-2)))  AS ata      ,
		        (select STRAGG(STRINGDELIM(t22.off_point, '/')) 
                  from     flt_opr_leg t22
                  where    flt.tr_no = t22.tr_no
                  and      T22.FLT_KEY=flt.flt_key
                  and      to_char(T22.sch_DATE, 'DDMONYY') = to_char(flt.sch_date, 'DDMONYY')
                  and      flt.flt_type = t22.flt_type) portOfCall, 
		        flt.FLT_MODULE1 fltModule, flt.wthr_cond wthr, decode(flt.flt_type, 'A',flt.ORIG,flt.DEST) orgDest,
		        (select count(*) from IMP_FLT_HAND_SUMMARY IFHS 
		          where IFHS.flt_key=flt.FLT_KEY
		          AND TO_CHAR(IFHS.flt_date, 'DDMONYY')=TO_CHAR(flt.SCH_DATE,'DDMONYY')
		          AND FLT.FLT_TYPE='A'
		          AND IFHS.rep_module='IR') IR,
		        (select count(*) from IMP_FLT_HAND_SUMMARY IFHS 
		            where IFHS.flt_key=flt.FLT_KEY
		            AND TO_CHAR(IFHS.flt_date, 'DDMONYY')=TO_CHAR(flt.SCH_DATE,'DDMONYY')
		            AND FLT.FLT_TYPE='A'
		            AND IFHS.rep_module='IW') IW,
		        (select count(*) from IMP_FLT_HAND_SUMMARY IFHS 
		            where IFHS.flt_key=flt.FLT_KEY
		            AND TO_CHAR(IFHS.flt_date, 'DDMONYY')=TO_CHAR(flt.SCH_DATE,'DDMONYY')
		            AND FLT.FLT_TYPE='A'
		            AND IFHS.rep_module='ID') ID,
		        (select count(*) from EXP_FLT_HAND_SUMMARY EFHS 
		            where EFHS.flt_key=flt.FLT_KEY
		            AND TO_CHAR(EFHS.flt_date, 'DDMONYY')=TO_CHAR(flt.SCH_DATE,'DDMONYY')
		            AND FLT.FLT_TYPE='D'
		            AND EFHS.rpt_type='ER'
		            AND EFHS.SAVED_YN = 'Y') ER,
		        (select count(*) from EXP_FLT_HAND_SUMMARY EFHS 
		            where EFHS.flt_key=flt.FLT_KEY
		            AND TO_CHAR(EFHS.flt_date, 'DDMONYY')=TO_CHAR(flt.SCH_DATE,'DDMONYY')
		            AND FLT.FLT_TYPE='D'
		            AND EFHS.rpt_type='EW'
		            AND EFHS.SAVED_YN = 'Y') EW,
		        (select count(*) from EXP_FLT_HAND_SUMMARY EFHS 
		            where EFHS.flt_key=flt.FLT_KEY
		            AND TO_CHAR(EFHS.flt_date, 'DDMONYY')=TO_CHAR(flt.SCH_DATE,'DDMONYY')
		            AND FLT.FLT_TYPE='D'
		            AND EFHS.rpt_type='ED'
		            AND EFHS.SAVED_YN = 'Y') ED,
	            (select image from IMP_FLT_HAND_SUMMARY IFHS 
			        where IFHS.flt_key=flt.FLT_KEY
			        AND TO_CHAR(IFHS.flt_date, 'DDMONYY')=TO_CHAR(flt.SCH_DATE,'DDMONYY')
			        AND FLT.FLT_TYPE='A'
			        AND IFHS.rep_module='IR') impRTrId,
		        (select image from IMP_FLT_HAND_SUMMARY IFHS 
		            where IFHS.flt_key=flt.FLT_KEY
		            AND TO_CHAR(IFHS.flt_date, 'DDMONYY')=TO_CHAR(flt.SCH_DATE,'DDMONYY')
		            AND FLT.FLT_TYPE='A'
		            AND IFHS.rep_module='IW') impWTrId,
		        (select image from IMP_FLT_HAND_SUMMARY IFHS 
		            where IFHS.flt_key=flt.FLT_KEY
		            AND TO_CHAR(IFHS.flt_date, 'DDMONYY')=TO_CHAR(flt.SCH_DATE,'DDMONYY')
		            AND FLT.FLT_TYPE='A'
		            AND IFHS.rep_module='ID') impDTrId,
            	(select image from EXP_FLT_HAND_SUMMARY EFHS 
		            where EFHS.flt_key=flt.FLT_KEY
		            AND TO_CHAR(EFHS.flt_date, 'DDMONYY')=TO_CHAR(flt.SCH_DATE,'DDMONYY')
		            AND FLT.FLT_TYPE='D'
		            AND EFHS.rpt_type='ER') expRTrId,
		        (select image from EXP_FLT_HAND_SUMMARY EFHS 
		            where EFHS.flt_key=flt.FLT_KEY
		            AND TO_CHAR(EFHS.flt_date, 'DDMONYY')=TO_CHAR(flt.SCH_DATE,'DDMONYY')
		            AND FLT.FLT_TYPE='D'
		            AND EFHS.rpt_type='EW') expWTrid,
		        (select image from EXP_FLT_HAND_SUMMARY EFHS 
		            where EFHS.flt_key=flt.FLT_KEY
		            AND TO_CHAR(EFHS.flt_date, 'DDMONYY')=TO_CHAR(flt.SCH_DATE,'DDMONYY')
		            AND FLT.FLT_TYPE='D'
		            AND EFHS.rpt_type='ED') expDTrid
		FROM FLT_OPR flt) FI
		LEFT JOIN FLT_FILE FF
		ON FF.FLT_KEY=FI.fltKey
		AND to_char(FF.FLT_DATE, 'DDMONYY') = FI.fltDate
		AND FF.FLT_TYPE = FI.fltType
		LEFT JOIN FLT_FILE_IMG FFI
		ON FFI.FLT_KEY=FF.FLT_KEY
		AND FFI.FLT_DATE = FF.FLT_DATE
		AND FFI.FLT_TYPE = FF.FLT_TYPE
		JOIN FLT_OPR_EVENTS FOE
		ON FOE.FLT_KEY=FI.fltKey
		AND to_char(FOE.SCH_DATE, 'DDMONYY') = to_date(FI.fltDate, 'DDMONYY')
		AND FOE.FLT_TYPE = FI.fltType
		WHERE TO_DATE(FI.fltDate,'DDMONYY')
		        BETWEEN to_date(#crFromDt#, 'DDMONYY') and to_date(#crToDt#, 'DDMONYY')
		<isNotEmpty property="fltKey">
			and Fi.fltKey = #fltKey#
		</isNotEmpty>
		<isNotEqual property="fltType" compareValue="B">
			and FI.fltType = #fltType#
		</isNotEqual>
		<isNotEmpty property="orgDest">
			and FI.orgDest=#orgDest#
		</isNotEmpty>
		<isNotEmpty property="rhoUser" prepend="AND">
          FI.RHO_ID = #rhoUser#
     	</isNotEmpty>
		<isNotEmpty property="orderBy">
			<isEqual property="orderBy" compareValue="fltKey">
				order by 1, 2 desc, 5 desc, 4
			</isEqual>
			<isEqual property="orderBy" compareValue="fltDate">
				order by 2 desc, 5 desc, 4, 1
			</isEqual>
			<isEqual property="orderBy" compareValue="cargoAcftType">
				order by 3, 4, 2 desc, 5 desc, 1
			</isEqual>
			<isEqual property="orderBy" compareValue="fltType">
				order by 4, 2 desc, 5 desc, 1
			</isEqual>
			<isEqual property="orderBy" compareValue="portOfCall">
				order by 12, 4, 2 desc, 5 desc, 1
			</isEqual>
			<isEqual property="orderBy" compareValue="comp">
				order by 21 desc, 4, 2 desc, 5 desc, 1
			</isEqual>
		</isNotEmpty>
		<isEmpty property="orderBy">
			order by 4, 2 desc, 5 desc, 1
		</isEmpty>
		<!--<dynamic prepend="ORDER BY ">
           <isNotEmpty property="sortOrder.sortField">
             $sortOrder.sortField$
           </isNotEmpty>
           <isEmpty property="orderBy">
			4
			</isEmpty>
        </dynamic>-->
	</select>
	
	<select id="importTonnInfo" parameterClass="cargo.cms.misc.bo.ElcFltFileBO" resultClass="cargo.cms.misc.bo.ElcFltFileBO">
	<![CDATA[
			select 	 CARGO_TYPE_DESC AS itemName, 
					 nvl(NO_OF_SHP, 0) consignment, 
					 nvl(PCS, 0) tonnPcs, 
					 nvl(WT, 0) wt, 
					 nvl(BUP_WT, 0) tonnBuWt, 
					 nvl(BULK_WT, 0) tonnBulkWt			
			FROM IMP_FLT_HAND_LOAD_INFO  
			WHERE TR_NO =  (SELECT TR_NO FROM IMP_FLT_HAND_SUMMARY WHERE FLT_KEY = #fltKey# AND FLT_DATE = to_date(#fltDate#,'DDMONYY') and REP_MODULE = 'ID' ) 
      		and UPPER(CARGO_TYPE) = 'CARGO' and UPPER(CARGO_TYPE_DESC) <> 'TOTAL'
      		]]>
	</select>
	<select id="exportTonnageInfo" parameterClass="cargo.cms.misc.bo.ElcFltFileBO" resultClass="cargo.cms.misc.bo.ElcFltFileBO">
		SELECT   item_name itemName,
      		  consignment consignment,
      		  ppk_wt tonnBuWt,
			  pcs tonnPcs,
     		  bulk_wt tonnBulkWt
	 	from   exp_flt_hand_man_tonnage
			where
			flt_key = #fltKey#
			and flt_date = to_date(#fltDate#,'ddmonyy')
			and sno > 9
			order by sno
	</select>
	<select id="fetchExportTstampInfo" parameterClass="cargo.cms.misc.bo.ElcFltFileBO" resultClass="cargo.cms.misc.bo.ElcFltFileBO">
		select efht.item_name AS itemName, 
		       TO_CHAR(efht.trans_date,'DDMONYY HH24:MI') AS actionedTime
		from exp_flt_hand_tstamp efht
		join mast_flt_time_stamp mfts
		on mfts.rep_module = efht.rpt_type
		and mfts.code = efht.tstamp_code
		where flt_key= #fltKey# 
		and   to_char(flt_date,'DDMONYY') = to_date(#fltDate#, 'DDMONYY')
		and (mfts.CODE_TYPE = 'TIME' AND (mfts.REP_MODULE like '%'||'ER'||'%' or mfts.REP_MODULE like '%'||'EW'||'%' or mfts.REP_MODULE like '%'||'ED'||'%') or mfts.CODE = 'CATA')
		and mfts.ELC_FF_REQ = 'Y'
	</select>
	
	 <select id="fetchImportTstampInfo" parameterClass="cargo.cms.misc.bo.ElcFltFileBO" resultClass="cargo.cms.misc.bo.ElcFltFileBO">
		select DISTINCT mfts.CODE AS itemCode, mfts.Code_DESC AS itemName,
		       TO_CHAR(ifts.TSTAMP_DATE, 'DDMONYY HH24:MI:SS') AS actionedTime, mfts.REP_MODULE repModu
		from mast_flt_time_stamp mfts, imp_flt_hand_time_stamp ifts 
		where mfts.code = ifts.tstamp_code
		AND ifts.flt_key=#fltKey#
		and TO_CHAR(ifts.flt_DATE,'DDMONYY') = to_date(#fltDate#, 'DDMONYY')
    and (mfts.CODE_TYPE = 'TIME' AND (mfts.REP_MODULE like '%'||'IR'||'%' or mfts.REP_MODULE like '%'||'IW'||'%' or mfts.REP_MODULE like '%'||'ID'||'%') or mfts.CODE = 'CATA')
    and mfts.ELC_FF_REQ = 'Y'
    order by mfts.REP_MODULE
 	</select>
 	
	<select id="fetchExportSvcStds" parameterClass="cargo.cms.misc.bo.ElcFltFileBO" resultClass="cargo.cms.misc.bo.ElcFltFileBO">
		select item_name itemName, std stndrd, service_time serviceTime, std_met stdMet, exceed_min excMin
		from exp_flt_hand_ser_std 
		where flt_key=#fltKey#
		and to_char(flt_date, 'DDMONYY') = to_date(#fltDate#, 'DDMONYY')
	</select>
	<select id="fetchImportSvcStds" parameterClass="cargo.cms.misc.bo.ElcFltFileBO" resultClass="cargo.cms.misc.bo.ElcFltFileBO">
		<![CDATA[
			SELECT A.ITM_NAME AS itemName,
			  DECODE(a.STD_OPR, 'LE', '<=', 'LT', '<', 'GE', '>=', 'GT', '>', 'EQ', '=')
			  ||' '||NVL(MT.CODE_DESC, A.TIME_STAMP2)||'+'||A.STD AS stndrd,
			  B.SVC_TIME   AS serviceTime,
			  B.STD_MET_YN AS stdMet          ,
			  (SELECT SUM(B.SVC_TIME-A.STD) FROM MAST_SVC_STD A, IMP_FLT_HAND_SVC_STD B
			          WHERE B.STD_MET_YN = 'N'
			          AND A.ITM_NAME       = B.ITM_NAME
			          AND F.FLT_KEY        = B.flt_key
			          AND F.SCH_DATE       =B.FLT_DATE ) AS excMin
			FROM MAST_SVC_STD A
			LEFT JOIN MAST_FLT_TIME_STAMP MT
			     ON MT.CODE = A.TIME_STAMP2
			JOIN FLT_OPR F
			     ON F.FLT_TYPE  = DECODE(A.FLT_TYPE, 'I', 'A', 'D')
			AND F.CARR_CODE     = NVL(A.CARR_CODE, F.CARR_CODE)
			AND F.CGO_ACFT_TYPE = NVL(A.ACFT_TYPE, F.CGO_ACFT_TYPE)
			LEFT JOIN
			  (SELECT FLT_KEY,
			    FLT_DATE     ,
			    SUM(MANIFEST_WT) WT
			     FROM IMP_CAR_SHP
			 GROUP BY FLT_KEY,
			    FLT_DATE
			  ) S
			     ON S.FLT_KEY                         = F.FLT_KEY
			AND S.FLT_DATE                            = F.SCH_DATE
			join imp_flt_hand_summary ifhs
			on TO_CHAR(ifhs.flt_DATE,'DDMONYY') = F.SCH_DATE
			and ifhs.FLT_KEY = F.FLT_KEY
			LEFT JOIN IMP_FLT_HAND_SVC_STD B
			     ON B.ITM_NAME     = A.ITM_NAME
			AND NVL(b.tr_no, '**') = NVL(ifhs.tr_no, '**')
			  WHERE A.REP_MODULE                      = ifhs.rep_module
			AND F.FLT_KEY                             = #fltKey#
			AND to_date(F.SCH_DATE)                            = to_date(#fltDate#, 'DDMONYY')
			AND F.FLT_TYPE                            = 'A'
			AND decode(NVL(A.TONN_RANGE_FROM, NVL(S.WT, 0)), 'ALL',NVL(S.WT, 0), NVL(A.TONN_RANGE_FROM, NVL(S.WT, 0))) <= NVL(S.WT, 0)
			AND decode(NVL(A.TONN_RANGE_TO, NVL(S.WT, 0)), 'ALL',NVL(S.WT, 0), NVL(A.TONN_RANGE_FROM, NVL(S.WT, 0)))   >= NVL(S.WT, 0)
			order by ifhs.rep_module
		]]>
	</select>
	<insert id="completeEFFByInsertFltFile" parameterClass="cargo.cms.misc.bo.ElcFltFileBO">
		insert into flt_file (FLT_TYPE,FLT_KEY,FLT_DATE,DOC_POUCH,FLT_LOG,COMP_DAT,TR_TYPE, LM_USER_ID, LM_DATE)
		values(#fltType#,#fltKey#,#fltDate#,#docPouch#,#fltLog#,decode(#isComp#,'Y',sysdate),#trtype#, #effUserId#, sysdate)
	</insert>
	<insert id="completeEFFByInsertFltFileImg">
		insert into flt_file_img
		(FLT_TYPE, FLT_KEY, FLT_DATE, IMG_NAME, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE)
		values(#fltType#,#fltKey#,#fltDate#,#transactionId#, #effUserId#, sysdate, #effUserId#, sysdate)
	</insert>
	<update id="updFltOprEventsEFF" parameterClass="cargo.cms.misc.bo.ElcFltFileBO">
		update flt_opr_events 
		set doc_compl_yn ='Y', doc_compl_date=to_date(to_char(sysdate,'DDMONYY'), 'DDMONYY'),
		doc_compl_time=to_char(sysdate,'HHMI'), doc_compl_user_id=#effUserId#
		where flt_key=#fltKey#
		and to_char(sch_date, 'DDMONYY')=to_date(#fltDate#,'DDMONYY')
		and flt_type=#fltType#
	</update>
<update id="completeEFFByUpdateFltFile" parameterClass="cargo.cms.misc.bo.ElcFltFileBO">
		update flt_file 
		set FLT_LOG=nvl(#fltLog#, FLT_LOG),
		COMP_DAT=decode(#isComp#,'Y',sysdate,COMP_DAT), 
		doc_pouch=nvl(#docPouch#, doc_pouch),
		TR_TYPE=#trtype#, LM_USER_ID=#effUserId#, LM_DATE=sysdate
		where FLT_TYPE=#fltType#
		and FLT_KEY=#fltKey# 
		and to_char(FLT_DATE, 'DDMONYY')=to_date(#fltDate#,'DDMONYY')
	</update>
	<update id="completeEFFByUpdateFltFileImg" parameterClass="cargo.cms.misc.bo.ElcFltFileBO">
		update flt_file_img
		set LM_USER_ID=#effUserId#, LM_DATE=sysdate
		where FLT_TYPE=#fltType#
		and FLT_KEY=#fltKey#
		and to_char(FLT_DATE, 'DDMONYY')=to_date(#fltDate#,'DDMONYY')
	</update>
	
	<select id="getElectronicFltFileLog" parameterClass="cargo.cms.misc.bo.ElcFltFileBO" resultClass="java.lang.String">
	select FLT_LOG from flt_file 
	where FLT_TYPE=#fltType# 
	and FLT_KEY=#fltKey# 
	and to_char(FLT_DATE, 'DDMONYY')=to_date(#fltDate#,'DDMONYY')
	</select>
	
	<select id="isEffExist" parameterClass="cargo.cms.misc.bo.ElcFltFileBO" resultClass="java.lang.String">
		select count(*) from flt_file
		where FLT_TYPE=#fltType#
		and FLT_KEY=#fltKey#
		and to_char(FLT_DATE, 'DDMONYY')=to_date(#fltDate#,'DDMONYY')
	</select>
	<select id="isEffImgExist" parameterClass="cargo.cms.misc.bo.ElcFltFileBO" resultClass="java.lang.String">
		select count(*) from flt_file_img
		where FLT_TYPE=#fltType#
		and FLT_KEY=#fltKey#
		and to_char(FLT_DATE, 'DDMONYY')=to_date(#fltDate#,'DDMONYY')
	</select>
	
	
	<select id="getHisSeqNo" parameterClass="java.lang.String" resultClass="java.lang.String" >
  		SELECT MAX(COD_HIS_SEQ_NUM) from HIS_MST_ITM
	</select>
	
	<insert id="insertHisEventHeader" parameterClass="cargo.cms.admin.bo.MtnCarrGrpBO">
  		Insert into HIS_MST_ITM (COD_HIS_SEQ_NUM,NAM_TAB,COD_HIS_TYP,DES_TAG,MODULE,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,EVENT) 
		values (#seqNo#,#nameTab#,#hisType#,#desTag#,#module#,#userID#,SYSDATE,#userID#,SYSDATE,#event#)
	</insert>
	
	<insert id="insertHisEventList" parameterClass="cargo.cms.admin.bo.MtnCarrGrpBO">
  		Insert into HIS_MST_DTL (COD_HIS_SEQ_NUM,COD_SEQ_NUM,NAM_FLD,DES_FLD_DTS)
		values (#seqNo#,#codeSeqNo#,#nameFld#,#desFltDts#)
	</insert>
		<select id="fetchLogHistory" parameterClass="cargo.cms.misc.bo.ElcFltFileBO" resultClass="cargo.cms.misc.bo.ElcFltFileBO">
		select ENTITY_KEY as entityKey, TAG_NAME as tagName, FIELD_NAME as fieldName, RMK as remark, LM_USER_ID as lastModifiedBy, 
		to_char(LM_DATE,'DDMONYY hh24:MI') as lastModifiedDate from RMK_HIST  where ENTITY_KEY=#entityKey# 
		order by LM_DATE desc
	</select>
	
	<select id="fetchUpdVclbyAwbForAwbEnquiry" parameterClass="map" resultClass="cargo.cms.val.bo.VclAwbBO">
		select vvh.vcl_no vclNo, decode(vvh.vcl_type, 'I', 'Import', 'Export') vclType, 
		       vvh.awb_no awbNo, substr(vvh.awb_no,1,3)||'-'||substr(vvh.awb_no,4) awbNoDisplay,
		       vvh.vcl_pcs vclPcs, vvh.vcl_wt vclWt, 
		       vvh.flt_key fltKey, to_char(vvh.flt_date, 'DDMONYY') fltDate, 
		       vvh.rmk remarks, vvh.dlv_by dlvBy, 
		       to_char(vvh.receipt_date, 'DDMONYY HH24:MI') timeOfRecpt,
		       splcd shc
		from val_vcl_hd vvh
		JOIN (select  awb.awb_no, awb.awb_date,   
		        	decode(spl_code1, null, '', spl_code1 || decode(spl_code2, null, '', '/'))
               		|| decode(spl_code2, null, '', spl_code2 || decode(spl_code3, null, '', '/'))
               		|| decode(spl_code3, null, '', spl_code3 || decode(spl_code4, null, '', '/'))
              		|| decode(spl_code4, null, '', spl_code4 || decode(spl_code5, null, '', '/'))
               		|| decode(spl_code5, null, '', spl_code5 || decode(spl_code6, null, '', '/'))
              		|| decode(spl_code6, null, '', spl_code6 || decode(spl_code7, null, '', '/'))
               		|| decode(spl_code7, null, '', spl_code7 || decode(spl_code8, null, '', '/'))
                    || decode(spl_code8, null, '', spl_code8 || decode(spl_code9, null, '', '/'))
               		|| decode(spl_code9, null, '', spl_code9) splcd
		      from imp_car_awb awb      
		      union 
		      select  awb.awb_no, awb.awb_date,   
		        	   decode(spl_code1, null, '', spl_code1 || decode(spl_code2, null, '', '/'))
               		|| decode(spl_code2, null, '', spl_code2 || decode(spl_code3, null, '', '/'))
               		|| decode(spl_code3, null, '', spl_code3 || decode(spl_code4, null, '', '/'))
              		|| decode(spl_code4, null, '', spl_code4 || decode(spl_code5, null, '', '/'))
               		|| decode(spl_code5, null, '', spl_code5 || decode(spl_code6, null, '', '/'))
              		|| decode(spl_code6, null, '', spl_code6 || decode(spl_code7, null, '', '/'))
               		|| decode(spl_code7, null, '', spl_code7 || decode(spl_code8, null, '', '/'))
                    || decode(spl_code8, null, '', spl_code8 || decode(spl_code9, null, '', '/'))
               		|| decode(spl_code9, null, '', spl_code9) splcd from exp_car awb) awb
		    on awb.awb_no= vvh.awb_no
		    and to_char(awb.awb_date, 'DDMONYY')=to_char(vvh.awb_date, 'DDMONYY')
		where vcl_no=#VCL_NO# 
		union
		select erh.vcl_no vclNo, 'Outbound' vclType, 
		       erh.awb_no awbNo, substr(erh.awb_no,1,3)||'-'||substr(erh.awb_no,4) awbNoDisplay,
				   erh.rcl_pcs vclPcs, erh.rcl_wt vclWt, 
				   epa.flt_key fltKey, to_char(epa.flt_date, 'DDMONYY') fltDate, 
				   erh.rmk remarks, erh.dlv_by dlvBy, 
				   to_char(erh.rcl_date, 'DDMONYY HH24:MI') timeOfRecpt,
				   awb.splcd shc 
		from exp_rcl_hd erh
		left join exp_pmanifest_awb epa
		on epa.awb_no = erh.awb_no
		and to_char(epa.awb_date, 'DDMONYY') = to_char(erh.awb_date, 'DDMONYY')
		join (select  awb.awb_no, awb.awb_date,   
		        	   decode(spl_code1, null, '', spl_code1 || decode(spl_code2, null, '', '/'))
               		|| decode(spl_code2, null, '', spl_code2 || decode(spl_code3, null, '', '/'))
               		|| decode(spl_code3, null, '', spl_code3 || decode(spl_code4, null, '', '/'))
              		|| decode(spl_code4, null, '', spl_code4 || decode(spl_code5, null, '', '/'))
               		|| decode(spl_code5, null, '', spl_code5 || decode(spl_code6, null, '', '/'))
              		|| decode(spl_code6, null, '', spl_code6 || decode(spl_code7, null, '', '/'))
               		|| decode(spl_code7, null, '', spl_code7 || decode(spl_code8, null, '', '/'))
                    || decode(spl_code8, null, '', spl_code8 || decode(spl_code9, null, '', '/'))
               		|| decode(spl_code9, null, '', spl_code9) splcd from awb) awb
		on awb.awb_no = erh.awb_no
		and to_char(awb.awb_date, 'DDMONYY') = to_char(erh.awb_date, 'DDMONYY')
		where erh.vcl_no = #VCL_NO# 
		union    
   		 select erh.vcl_no vclNo, 'Outbound' vclType, 
		       ua.awb_no awbNo, substr(ua.awb_no,1,3)||'-'||substr(ua.awb_no,4) awbNoDisplay,
				   erh.rcl_pcs vclPcs, erh.rcl_wt vclWt, 
				   epa.flt_key fltKey, to_char(epa.flt_date, 'DDMONYY') fltDate, 
				   erh.rmk remarks, erh.dlv_by dlvBy, 
				   to_char(erh.rcl_date, 'DDMONYY HH24:MI') timeOfRecpt,
				   awb.splcd shc 
		from exp_uld_awb ua 
   		join exp_rcl_hd erh on erh.rcl_no = ua.rcl_no
		left join exp_pmanifest_awb epa on epa.awb_no = ua.awb_no and to_char(epa.awb_date, 'DDMONYY') = to_char(ua.awb_date, 'DDMONYY')
		join (select  awb.awb_no, awb.awb_date,   
		        	   decode(spl_code1, null, '', spl_code1 || decode(spl_code2, null, '', '/'))
               		|| decode(spl_code2, null, '', spl_code2 || decode(spl_code3, null, '', '/'))
               		|| decode(spl_code3, null, '', spl_code3 || decode(spl_code4, null, '', '/'))
              		|| decode(spl_code4, null, '', spl_code4 || decode(spl_code5, null, '', '/'))
               		|| decode(spl_code5, null, '', spl_code5 || decode(spl_code6, null, '', '/'))
              		|| decode(spl_code6, null, '', spl_code6 || decode(spl_code7, null, '', '/'))
               		|| decode(spl_code7, null, '', spl_code7 || decode(spl_code8, null, '', '/'))
                    || decode(spl_code8, null, '', spl_code8 || decode(spl_code9, null, '', '/'))
               		|| decode(spl_code9, null, '', spl_code9) splcd from awb) awb	on awb.awb_no = ua.awb_no	and to_char(awb.awb_date, 'DDMONYY') = to_char(ua.awb_date, 'DDMONYY')
		where erh.vcl_no = #VCL_NO# and ua.awb_no = #AWB_NO# and ua.awb_date = #AWB_DATE# 	
	</select>
	
	<select id="get_awb_enq_cont_info" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO" resultClass="cargo.cms.awb.bo.AWBEnquiryBO">
    	select contact.cont_id contId,contact.cont_name contName,contact.cont_type contType,DOC_LINE_NO docLineNo FROM CAR_AWB_CONTACT_INFO contact WHERE contact.AWB_NO = #awbNo# AND
	  	contact.AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')  
    	order by contact.cont_type desc,DOC_LINE_NO 
    </select>
    <select id="fetchAWBRmkforAWBEnq" parameterClass="java.util.Map" resultClass="java.lang.String">
    	select RMK from AWB_RMK where awb_no=#AWB_NO# and awb_date=#AWB_DATE# AND RMK_TYPE='AWB_RMK' and rownum =1
    </select>
    <select id="chkAWBExistsinArchMon" parameterClass="java.lang.String" resultClass="java.lang.Integer">
    	SELECT COUNT(1) FROM ARCHIVE_LOG_MON WHERE AWB_NO=#PARAM#
    </select>
	<select id="fetchOffloadShipmentList" parameterClass="java.util.HashMap" resultClass="cargo.cms.awb.bo.OffloadReptBO">
		   SELECT flt_key AS fltKey ,
		  flt_date     AS fltDate ,
		  awb_no       AS awbNo ,
		  edmp_code    AS edmpCode ,
		  code_desc    AS codeDesc ,
		  cto_yn       AS isCTO ,
		  STD  AS std,
		  ATD AS atd,
		  PORT_CALL_1 AS portCall1,
		  PORT_CALL_2 AS portCall2,
		  PORT_CALL_3 AS portCall3,
		  PORT_COUNT AS portCount,
		  FLT_DEST AS fltDest,
		  AWB_ORIG AS orig,
		  AWB_DEST AS dest,
		  (SELECT CATALOG FROM AWB WHERE AWB_NO = v_edmp_code.AWB_NO AND ROWNUM = 1) as catalog,
		  AWB_FLOW AS flow,
		  FBL_PCS AS fblPcs,
		  FBL_WT fblWt,
		  BOOKING_PORT bookingPort
		FROM v_edmp_code 
        where flt_date between to_date(#fromDate#,'DDMONYY') and to_date(#toDate#,'DDMONYY') 
    <isNotEmpty property="carrierCode">
		AND CARR_CODE = #carrierCode#
		</isNotEmpty>
    <isEmpty property="carrierCode">
				<isNotEmpty property="loginCarrier">
				AND ( CARR_CODE = #loginCarrier#
                        OR  CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP 
                        WHERE GRP_CARR_CODE  = #loginCarrier#))     
                </isNotEmpty>
	</isEmpty>
    order by cto_yn desc, awb_no
   
 </select>
 
 <select id="fetchOffloadRptTotalPManCount" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
    <![CDATA[
   	select count(1)
	from (select awb_no, awb_date, flt_key, flt_date from exp_pmanifest_awb
    union
    select awb_no, awb_date, flt_key, flt_date from exp_pman_tarmac_awb) p
	where flt_date between #fromDate# and #toDate#
    ]]>
 </select>
 

    <select id="chkFlightExistsinArchMon" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
    	SELECT COUNT(1) FROM ARCHIVE_LOG_MON WHERE FLT_KEY=#FLT_KEY# AND FLT_DATE=#FLT_DATE# AND FLT_TYPE=#FLT_TYPE#
    </select>
    
    <select id="sqlGetCMSRuleValue" parameterClass="java.lang.String"
		resultClass="java.lang.String">
		<![CDATA[
			SELECT RULE_VALUE FROM CMSRULES WHERE RULE_CODE = #PARAM#
		]]>
	</select>
	<select id="isCXBECurrencyRateExists" parameterClass="cargo.cms.admin.master.bo.CurrencyExRateBO"
		resultClass="java.lang.String">
		<![CDATA[
    		SELECT DECODE(COUNT(TR_NO), 0, 'N', 'Y') 
    		FROM MAST_CURR_EXRATE 
    		WHERE UPPER(CURR_CODE) = UPPER(#currencyCode#) AND EFF_DATE = #effDate# AND CARR_CODE IS NULL AND FORGN_UNIT = 1
		]]>
	</select>	
	<insert id="insertCXBERateData" parameterClass="cargo.cms.admin.master.bo.CurrencyExRateBO">
		<![CDATA[
			INSERT INTO MAST_CURR_EXRATE (
			  TR_NO, CURR_CODE, EFF_DATE, FORGN_UNIT,
			  EXCH_RATE, CARR_CODE,
			  CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE
			)
			SELECT
			CURR_EXRATE_SEQ.NEXTVAL, UPPER(#currencyCode#),
			#effDate# EFF_DATE, 1 FORGN_UNIT,
			#exchangeRate# EXCH_RATE, NULL,
			#crUserId# CR_USER_ID, SYSDATE CR_DATE, #lmUserId# LM_USER_ID, SYSDATE LM_DATE
			FROM DUAL
			WHERE (
				SELECT COUNT(TR_NO) 
    			FROM MAST_CURR_EXRATE 
    			WHERE UPPER(CURR_CODE) = UPPER(#currencyCode#) AND EFF_DATE = #effDate# AND CARR_CODE IS NULL AND FORGN_UNIT = 1
    	 	) = 0		
		]]>
	</insert>	
	<insert id="insertCXBERateDataForExistCarrier" parameterClass="cargo.cms.admin.master.bo.CurrencyExRateBO">
			<![CDATA[
				INSERT INTO MAST_CURR_EXRATE (
				  TR_NO, CURR_CODE, 
				  EFF_DATE, FORGN_UNIT,
				  EXCH_RATE, CARR_CODE,
				  CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE
				)
				SELECT
				CURR_EXRATE_SEQ.NEXTVAL, UPPER(#currencyCode#),
				#effDate# EFF_DATE, 1 FORGN_UNIT,
				#exchangeRate# EXCH_RATE, CARR_CODE,
				#crUserId# CR_USER_ID, SYSDATE CR_DATE, #lmUserId# LM_USER_ID, SYSDATE LM_DATE
				FROM (
					SELECT DISTINCT CARR_CODE
					FROM MAST_CURR_EXRATE
					WHERE CARR_CODE IS NOT NULL AND FORGN_UNIT = 1 AND CURR_CODE = UPPER(#currencyCode#)
					AND CARR_CODE NOT IN (
					  SELECT CARR_CODE
					  FROM MAST_CURR_EXRATE
					  WHERE CARR_CODE IS NOT NULL AND FORGN_UNIT = 1 AND CURR_CODE = UPPER(#currencyCode#) AND EFF_DATE = #effDate#
					)			  
				)
			]]>
		</insert>    
    <update id="updateCXBERateData" parameterClass="cargo.cms.admin.master.bo.CurrencyExRateBO">
    	<![CDATA[
			UPDATE MAST_CURR_EXRATE
			SET
			  EXCH_RATE =  #exchangeRate#,
			  LM_USER_ID = #lmUserId#,
			  LM_DATE= SYSDATE
			WHERE CURR_CODE = #currencyCode# AND EFF_DATE = #effDate# AND FORGN_UNIT = 1
		]]>
	</update>
	
	<select id="sqlExtAdminCheckInWOSInt" parameterClass="cargo.cms.admin.bo.UserBO" resultClass="java.lang.Integer">
		SELECT COUNT(*) FROM CUST_COMPANY WHERE ADMIN_USER_ID = #userIdentity#
	</select>
	<select id="sqlFetchAWBIntelligentCheckCount" parameterClass="cargo.cms.admin.bo.IntelligentCheckProcessBO" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM AWB
		WHERE AWB_NO = #awbNo# AND AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') AND AWB_TYPE = #awbType# 
		<isEqual property="functionCode" compareValue="ICS" prepend="AND">
			INT_YN = #intChkInd#
		</isEqual>
		<isEqual property="functionCode" compareValue="ACS" prepend="AND">
			AMD_YN = #intChkInd#
		</isEqual>
		<isEqual property="functionCode" compareValue="LCS" prepend="AND">
			LBS_YN = #intChkInd#
		</isEqual>
		<isEqual property="functionCode" compareValue="IMPCAR" prepend="AND">
			IMPCAR_YN = #intChkInd#
		</isEqual>
		<isEqual property="functionCode" compareValue="EXPCAR" prepend="AND">
			EXPCAR_YN = #intChkInd#
		</isEqual>
		<isEqual property="functionCode" compareValue="DAL" prepend="AND">
			DOCACC_YN = #intChkInd#
		</isEqual>
		<isEqual property="functionCode" compareValue="LPPM" prepend="AND">
			LPPS_YN = #intChkInd#
		</isEqual>		
	</select>

<select id="sqlCheckAWBIntelligentCheckCount" parameterClass="cargo.cms.admin.bo.IntelligentCheckProcessBO" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM intl_chk_result WHERE AWB_NO = #awbNo# 
		<isEqual property="functionCode" compareValue="ICS" prepend="AND">
			function_code = 'ICS'
		</isEqual>
		<isEqual property="functionCode" compareValue="ACS" prepend="AND">
			function_code = 'ACS'
		</isEqual>
		<isEqual property="functionCode" compareValue="LCS" prepend="AND">
			function_code = 'LCS'
		</isEqual>
		<isEqual property="functionCode" compareValue="IMPCAR" prepend="AND">
			function_code = 'IMPCAR'
		</isEqual>
		<isEqual property="functionCode" compareValue="EXPCAR" prepend="AND">
			function_code = 'EXPCAR'
		</isEqual>
		<isEqual property="functionCode" compareValue="DAL" prepend="AND">
			function_code = 'DAL'
		</isEqual>
		<isEqual property="functionCode" compareValue="LPPM" prepend="AND">
			function_code = 'LPPM'
		</isEqual>		
	</select>

	<select id="fetchDGInventoryDtls" parameterClass="cargo.cms.awb.bo.DGInventoryReptBO" resultClass="cargo.cms.awb.bo.DGInventoryReptBO">
    	Select AWB_NO As awbNo, AWB_TYPE As awbType, ORIG As orig, DEST As dest, PCS As pcs, WT As wt, 
        STGDATE As strgDate, LOCN As location, LOCN_PCS As locPcs, LOCN_WT As locWt, DWELL_TIME As dwellTime, CL_DV As clDV, SHC As shc, 
        BKG_FLT_KEY AS bkgFlt, BKG_FLT_DATE AS bkgFltDate, STD AS std, BKG_PCS AS bkgpcs, BKG_WT AS bkgWt FROM v_dg_inventory
        <isNotEmpty property="carrCode">
        	WHERE carr_code = #carrCode#
        </isNotEmpty>
        <isEmpty property="carrCode">
				<isNotEmpty property="loginCarrier">
			WHERE ( carr_code = #loginCarrier#
                        OR  carr_code IN (SELECT CARR_CODE FROM MAST_CARR_GRP 
                        WHERE GRP_CARR_CODE  = #loginCarrier#))             
            	</isNotEmpty>
        </isEmpty>
     </select>
	 <parameterMap id="fetchDailyTonnInfoMap" class="map" >
		<parameter property="TOTALTONN" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
		<parameter property="TONNDATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="TTL_TONNAGE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
		<parameter property="IF_TTL_TONNAGE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
		<parameter property="TT_TTL_TONNAGE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
		<parameter property="QT_TTL_TONNAGE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
		<parameter property="IMP_TTL_TONNAGE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
		<parameter property="EXP_TTL_TONNAGE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
		<parameter property="TM_TTL_TONNAGE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
		<parameter property="TRNSIT_TTL_TONNAGE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
	</parameterMap>
	
	<procedure id="fetchDailyTonnInfo_fun" parameterMap="fetchDailyTonnInfoMap" >
		{? = call prc_tonnage(?,?,?,?,?,?,?,?,?)}
	</procedure>
	 <select id="fetchDailyTruckInfo_report" parameterClass="map" resultClass="cargo.cms.awb.bo.DGInventoryReptBO">
    	select trunc(arr_time) truckDate, count(1) noofTrucks, sum(decode(purpose,  
				'BOOKING', 1,0)) bookingTrks
				from truck_trip where trunc(cr_date) = #TruckDate#
				group by trunc(arr_time)
				order by trunc(arr_time)
     </select>
	 <select id="fetchDailyTruckInfo_Agent_report" parameterClass="map" resultClass="cargo.cms.awb.bo.DGInventoryReptBO">
    	select c.code_desc agentName, count(1) noofVistis
			from truck_trip t
			join tcs_ipass_master i on t.ipass_no = i.ipass_no
			join cust_company c on i.cust_no = c.code
			where t.purpose = 'BOOKING' and trunc(t.cr_date) = #TruckDate#
			group by c.code_desc
     </select>
	 <select id="fetchShipmentList" parameterClass="cargo.cms.awb.bo.ShipmentReptBO" resultClass="cargo.cms.awb.bo.ShipmentReptBO">
          select to_char(f.sch_date,'DDMONYY') AS operDate,
  s.Flt_Type                          AS fltType,
  s.Flt_Key                           AS fltId,
  TO_CHAR(s.Flt_Date,'DDMONYY')   AS fltDate,
  s.Awb_No                            AS awbNo,
  A.Awb_Type                          AS awbType,
  A.Catalog                           AS catalog,
  A.Orig                              AS origin,
  A.Dest                              AS destination,
  s.pcs manfBuBdPcs,
  s.wt manfBuBdWt,
  A.Content AS description
from (select awb_no, awb_date, flt_key, flt_date, flt_type, sum(pcs) pcs, sum(wt) wt
  from (select s.awb_no, s.awb_date, s.flt_key, s.flt_date, 'A' flt_type, recd_pcs + nvl(tt_if_pcs, 0) pcs, recd_wt + nvl(tt_if_wt, 0) wt 
      from imp_car_shp s
      left join (select awb_no, awb_date, flt_key, flt_date, sum(shp_trf_pc) tt_if_pcs, sum(shp_trf_wt) tt_if_wt
           from v_ddt_dtl where (trf_type = 'IF' or shp_trf_type = 'TT') group by awb_no, awb_date, flt_key, flt_date) t
            on t.awb_no = s.awb_no and t.awb_date = s.awb_date and t.flt_key = s.flt_key and t.flt_date = s.flt_date
      union all
      select awb_no, awb_date, flt_key, flt_date, 'D' flt_type, 
        ppk_pcs + mix_pcs + assigned_bulk_pcs pcs, ppk_wt + mix_wt + assigned_bulk_wt wt from exp_pmanifest_awb
      union all
      select awb_no, awb_date, flt_key, flt_date, 'D' flt_type, bulk_pcs + ppk_pcs pcs, bulk_wt + ppk_wt wt from exp_pman_tarmac_awb) 
  group by awb_no, awb_date, flt_key, flt_date, flt_type) s
join awb a on a.awb_no = s.awb_no and a.awb_date = s.awb_date
Join Flt_Opr_Events F On F.Flt_Key = S.Flt_Key And F.Sch_Date = S.Flt_Date And F.Flt_Type = S.Flt_Type
JOIN FLT_OPR FO ON FO.FLT_KEY = F.FLT_KEY AND FO.SCH_DATE = F.SCH_DATE AND FO.FLT_TYPE = F.FLT_TYPE
where FO.act_date = #fltDate# AND f.flt_cls_yn = 'Y' and s.pcs >= 0 order by operDate, fltType, fltDate, fltId, awbNo desc
     </select>
	 
	 <select id="sqlGetNonALPFunctionCount" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		select count(1) from sec_scr_function where code in 
		(select function_code from sec_role_function where sec_role_function.role_code=#roleNameKey# and (full_yn = 'Y' or read_yn ='Y'))
		and alp_function_yn = 'N'
	</select>
	<select id="sqlGetALPFunctionCount" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		select count(1) from sec_scr_function where code in 
		(select function_code from sec_role_function where sec_role_function.role_code=#roleNameKey# and (full_yn = 'Y' or read_yn ='Y'))
		and alp_function_yn = 'Y'
	</select>
	<select id="sqlIsCompanyAnAirline" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		select count(1) from cust_company where AIRLINE_YN = 'Y' and code_desc=#param#
	</select>
	<select id="getIsRoleAddedToAlpUsersCount" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM CUST_COMPANY 
			WHERE AIRLINE_YN = 'Y' 
			AND code in (SELECT CUST_NO FROM SEC_USER 
							where code in( select USER_ID from SEC_USER_ROLE where ROLE_NAME=#param#))
	</select>
	 <select id="fetchInboundList" parameterClass="java.util.HashMap" resultClass="cargo.cms.awb.bo.MCTReptBO">
    Select AWB_NO As awnNo, AWB_TYPE As awbType, FLT_KEY As fltKey, FLT_DATE As fltDate, ORIG As origin, STA_DATE_TIME As staDateTime, ETA_DATE_TIME As etaDateTime, 
    ATA_DATE_TIME As ataDateTime, BRKDN_PCS As brkdnPcs, BRKDN_WT As brkdnWt, TRF_TYPE As trfType, SHCS As shcs, SHPMT_CODE As shpmtCode, HNDL_MODE As handlngMode, 
    INB_ULD As inbFfmUldKey, FFM_PCS As ffmPcs, FFM_WT As ffmWt, CHEKIN_TIME As checkInTime, BD_START_TIME As brkdnStartTime, BD_COMPL_TIME As brkdnCompTime from 
    v_mct_imp where FLT_DATE between #fromDate# and #toDate#
     </select>
     
      <select id="fetchOutboundList" parameterClass="java.util.HashMap" resultClass="cargo.cms.awb.bo.MCTReptBO">
    Select AWB_NO As awnNo, AWB_TYPE As awbType, FLT_KEY As fltKey, To_Char(Flt_Date,'DDMONYY') As fltDate, DEST As dest, STA_DATE_TIME As staDateTime, 
    ETA_DATE_TIME As etaDateTime, ATA_DATE_TIME As ataDateTime, FBL_PCS As fblPcs, FBL_WT As fblWt, PMAN_PCS As pmanPcs, 
    PMAN_WT As pmanWt, FIRST_PMAN_DT As frstPmanDt, LAST_PMAN_DT As lstPmanDt, TRF_TYPE As trfType, SHC_CODE As shcs, SHPMT_CODE As shpmtCode, 
    OUTB_ULD As outUldKey, BU_PCS As buPcs, BU_WT As buWt, BU_START As buStartTime, BU_COMPLETE As buCompTime, CHECK_DATE As chckDate,handling_mode As handlngMode  from 
    v_mct_exp where FLT_DATE between #fromDate# and #toDate#
     </select>
	 
	 <parameterMap id="approveHmap" class="map">         
                <parameter property="RESULT" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
                <parameter property="awbNo" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
                <parameter property="awbType" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
                <parameter property="userId" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>             
      </parameterMap>
	<procedure id="reuseAWBNOApproval" parameterMap="approveHmap" >
							{ ? = call PKG_VALIDATE.REUSE_AWB(?,?,?) }
	</procedure>
	
	<select id="getItmMasterChrgList" parameterClass="java.lang.String" resultClass="cargo.cms.awb.bo.AWBEnquiryBO">
		SELECT ITM_CODE codeVal, ITM_DESC codeDesc,itm_category chrgCategory FROM BILL_ITM_MASTER where itm_category in('CCNA','ISAC','CCA') AND OWNER_IND='CX CARGO' ORDER BY ITM_DESC
	</select>
	
	<select id="getExistingIsacChrgList" resultClass="cargo.cms.awb.bo.AWBEnquiryBO">
		SELECT TR_NO trno,
		  AWB_NO awbNo,
		  AWB_DATE awbDate,	
		  CHARGES_TYPE isacChrgType,
		  QUANTITY quantity,
		  AMOUNT amount,
		  PAID paid,
		  TO_CHAR(PAID_DATE,'DDMONYY HH24:MI') paidDate,
		  TO_CHAR(CR_DATE,'DDMONYY HH24:MI') crDate,
		  CR_USER_ID crUser,
		  TO_CHAR(CLOSE_DATE,'DDMONYY HH24:MI') clsDate,
		  TO_CHAR(WAIVE_DATE,'DDMONYY HH24:MI') waiveDate,
		  WAIVE_USER waiveUser,
		  REMARKS chrgRmk,
		  CLOSED chrgClosed,
		  TR_TYPE chrgCategory,
		  'Y' isRecordExist,
		  iata_code iataCode,
          agent_name appiontedAgent,
          agent_code agentCode
		FROM AWB_ISAC_CHARGES
		where AWB_NO=#awbNo# and  AWB_DATE=#awbDate# order by cr_date
	</select>

	<update id="UPDATE_ISAC_CHARGES" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO">
		UPDATE AWB_ISAC_CHARGES
		 SET  QUANTITY       = NVL(#quantity#, '0'),
			  LM_USER_ID     = #userID#,
			  LM_DATE        = SYSDATE,
			  TR_TYPE        = (SELECT distinct(itm_category) chrgCategory FROM BILL_ITM_MASTER where OWNER_IND='CX CARGO' and itm_code=#isacChrgType#),
			  CHARGES_TYPE   = #isacChrgType#,
			  REMARKS        = #chrgRmk#,
			  PAID         = #paid#,
			  <isEqual property="paid" compareValue="Y">
			  	PAID_DATE    = CASE WHEN 'N' = (SELECT NVL(paid,'N') FROM awb_isac_charges where tr_no=#trno#) THEN SYSDATE
			  	ELSE  (SELECT PAID_DATE FROM awb_isac_charges where tr_no=#trno#) END,
			 </isEqual>
			 <isEqual property="paid" compareValue="N">
			 	PAID_DATE    = null,
			 </isEqual>
			  AGENT_CODE = (select code from cust_company where code_desc=#appiontedAgent#),
		      AGENT_NAME = #appiontedAgent#,
		      IATA_CODE  = #iataCode#,
		      AMOUNT = #amount#
			WHERE AWB_NO     = #awbNo#
			AND AWB_DATE     = #awbDate#
			AND TR_NO        = #trno#
	</update>

	<select id="ISAC_CHARGES_SEQ_TR_NO" resultClass="java.lang.String">
		select trim(ISAC_CHARGES_SEQ.NEXTVAL) from dual
	</select>
	
<insert id="INSERT_ISAC_CHARGES" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO">
		INSERT
		INTO AWB_ISAC_CHARGES
		  (
			TR_NO,
			AWB_NO,		
			AWB_DATE,    
			CHARGES_TYPE,    
			QUANTITY, 
			CR_USER_ID,	
			CR_DATE,		
			LM_USER_ID,	
			LM_DATE,
			TR_TYPE,
			REMARKS,
		    CLOSED,
		    AMOUNT,
		    PAID,
		    PAID_DATE,
		    CLOSE_DATE,
		    WAIVE_DATE,
		    WAIVE_USER,
		    AGENT_CODE,
		    AGENT_NAME,
		    IATA_CODE,
		    CARR_CODE
		  )
		  VALUES
		  (
			#trno#,
			#awbNo#,
			#awbDate#,
            #isacChrgType#,
            nvl(#quantity#, '0'),
            #userID#,
            sysdate,
            #userID#,
            sysdate,
		    (SELECT distinct(itm_category) chrgCategory FROM BILL_ITM_MASTER where OWNER_IND='CX CARGO' and itm_code=#isacChrgType#),
            #chrgRmk#,
		    #chrgClosed#,
		    #amount#,
		    #paid#,
		    decode(#paid#,'Y',sysdate,null),
		    null,
		    null,
		    null,
		    #agentCode#,
		    #appiontedAgent#,
		    #iataCode#,
		    #carrCode#
		  )
	</insert>

	<delete id="DELETE_ISAC_CHARGES" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO">
		DELETE FROM AWB_ISAC_CHARGES WHERE TR_NO=#trno#
	</delete>	
	
	<!-- New AWB Enquiry Queries start -->
        <select id="fetchNewAwbEnqDate" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO" resultClass="cargo.cms.awb.bo.AWBEnquiryBO">
        select to_char(max(awb_date),'DDMONYY') awbDate from awb where awb_no=#awbNo#
        </select>
        <select id="fetchNewAwbEnqType" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO" resultClass="cargo.cms.awb.bo.AWBEnquiryBO">
        select awb_Type awbType from awb where awb_no=#awbNo# and awb_date=#awbDate#
        </select>
		<select id="sqlFetchNewAWBEnqImportDetails" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO" resultClass="cargo.cms.awb.bo.AWBEnquiryBO">
	       SELECT pkg_common.get_awb_splcodes(CA.awb_no, CA.awb_date, 'I') spl,
				  CA.SHPR_NAME                            AS shprName,
				  CA.APPNTD_AGENT                         AS appntdAgent,
				  A.AWB_NO                                AS awbNo,
				  substr(A.AWB_NO,1,3)||'-'||substr(A.AWB_NO,4) awbNoDisplay,
				  SUBSTR( A.AWB_NO,1,3 )                  AS awbNoPFX,
				  SUBSTR( A.AWB_NO,4 )                    AS awbNoSFX,
				  A.AWB_TYPE                              AS awbType,
				  DECODE(A.PCS,'','0',A.PCS)              AS awbPcs,
				  trim(TO_CHAR(NVL(A.WT,0),'9999990.00')) AS awbWt,
				  TO_CHAR( A.AWB_DATE, 'DDMONYY')         AS awbDate,
				  A.SPL_CODE1                             AS splCode1,
				  A.SPL_CODE2                             AS splCode2,
				  A.SPL_CODE3                             AS splCode3,
				  A.SPL_CODE4                             AS splCode4,
				  A.SPL_CODE5                             AS splCode5,
				  A.SPL_CODE6                             AS splCode6,
				  A.SPL_CODE7                             AS splCode7,
				  A.SPL_CODE8                             AS splCode8,
				  A.SPL_CODE9                             AS splCode9,
				  CA.AWB_ORIGIN                           AS awbOrigin,
				  ((CASE WHEN(select COUNT(1) from v_cst_cc_code_awb a,mast_constraint_code b where b.code = A.CC_CODE and b.constraint='Y' and a.awb_no=#awbNo#) > 0
           THEN 'Y'
           ELSE 'N'
           END)) AS constrained,
					(SELECT cc_code FROM (SELECT t1.cc_code FROM V_CST_IMP_CC_CODE_AWB t1,mast_constraint_code t2 WHERE t1.cc_code = t2.code AND awb_no = #awbNo# AND NVL(hawb_no, '000000000000000000') = '000000000000000000' ORDER BY recv_date DESC, priority DESC) where rownum = 1) AS latestCc,
            	  (SELECT SUM(CHRG_AMT)
				  FROM BILL_CHARGE_DTL
				  WHERE AWB_NO = #awbNo#
				  AND AWB_DATE =#awbDate#
				  )           AS osCharge,
				  CA.AWB_DEST AS awbDest,
				  CA.CONTENT  AS content,
				  (DECODE(
				  (SELECT COUNT(1) FROM awb WHERE awb_no = #awbNo#
				  AND awb_date                           =#awbDate#
				  AND rownum                             =1
				  ),0,
				  (SELECT rmk FROM awb_rmk WHERE awb_no=#awbNo# AND rownum=1
				  ),DECODE(CA.AIRLN_RMK,NULL,A.AIRLN_RMK,CA.AIRLN_RMK))) AS airlRmk,
				  (DECODE(
				  (SELECT COUNT(1) FROM awb WHERE awb_no = #awbNo#
				  AND awb_date                           =#awbDate#
				  AND rownum                             =1
				  ),0,
				  (SELECT rmk FROM awb_rmk WHERE awb_no=#awbNo# AND rownum=1
				  ),DECODE(CA.AIRLN_RMK,NULL,A.AIRLN_RMK,CA.AIRLN_RMK))) AS oldAirlRmk,
				  (SELECT SEQ_NO
				  FROM awb_rmk
				  WHERE awb_no=#awbNo#
				  AND rownum  =1
				  ) AS seqNo,
				  (DECODE(
				  (SELECT COUNT(1) FROM imp_car_awb WHERE awb_no = #awbNo#
				  AND awb_date                                   =#awbDate#
				  AND rownum                                     =1
				  ),0,
				  (SELECT awb_rmk
				  FROM awb
				  WHERE awb_no=#awbNo#
				  AND awb_date=#awbDate#
				  AND rownum  =1
				  ),CA.WH_RMK)) AS whRmk,
				  (DECODE(
				  (SELECT COUNT(1) FROM imp_car_awb WHERE awb_no = #awbNo#
				  AND awb_date                                   =#awbDate#
				  AND rownum                                     =1
				  ),0,
				  (SELECT awb_rmk
				  FROM awb
				  WHERE awb_no=#awbNo#
				  AND awb_date=#awbDate#
				  AND rownum  =1
				  ),CA.WH_RMK))                                        AS oldWHRmk,
				  CA.CSGNE_NAME                                        AS consignee,
				  CA.CSGNE_ADDR                                        AS consigneAddr,
				  CA.CSGNE_ADDR1                                       AS consigneAddr1,
				  CA.CSGNE_ADDR2                                       AS consigneAddr2,
				  CA.CSGNE_ADDR3                                       AS consigneAddr3,
				  CA.CSGNE_ADDR4                                       AS consigneAddr4,
				  CA.CSGNE_ADDR5                                       AS consigneAddr5,
				  DECODE(CA.CSGNE_PLACE,'','Hong Kong',CA.CSGNE_PLACE) AS consCity,
				  DECODE(CA.CSGNE_CTRY_CODE,'',
				  (SELECT code_desc FROM mast_country mcntr WHERE mcntr.code = 'HK'
				  ),
				  (SELECT code_desc
				  FROM mast_country mcntr1
				  WHERE mcntr1.code = CA.CSGNE_CTRY_CODE
				  ))                                       AS consCountry,
				  CA.SHPR_NAME                             AS shipperName,
				  CA.SHPR_ADD1                             AS shipperAddr,
				  CA.SHPR_ADD2                             AS shipperAddr1,
				  CA.SHPR_ADD3                             AS shipperAddr2,
				  NVL(CA.SHPR_ADD4,CA.SHPR_STATE_PROVINCE) AS shipperAddr3,
				  DECODE(CA.SHPR_CTRY_CODE,'',
				  (SELECT code_desc FROM mast_country mcntr WHERE mcntr.code = 'HK'
				  ),
				  (SELECT code_desc
				  FROM mast_country mcntr1
				  WHERE mcntr1.code = CA.SHPR_CTRY_CODE
				  ))                                        AS shprCountry,
				  DECODE(CA.SHPR_PLACE,'','',CA.SHPR_PLACE) AS shprCity,
				  CA.APPNTD_AGENT                           AS appiontedAgent,
				  NVL(CA.AGENT_ADDR1,CA.AGENT_PLACE)        AS agentAddr,
				  CA.AGENT_ADDR2                            AS agentAddr1,
				  CA.AGENT_ADDR3                            AS agentAddr2,
				  CA.AGENT_ADDR4                            AS agentAddr3,
				  CA.AGENT_ADDR5                            AS agentAddr4,
				  TO_CHAR(CA.LM_DATE, 'DDMONYY HH24:MI:SS') AS lmDate,
				  CA.SHPR_STATE_PROVINCE shipperState,
				  CA.CSGNE_STATE_PROVINCE consigneeState,
          (SELECT
			TO_CHAR(AWB_SCAN_TIME, 'DDMONYY HH24:MI')
			FROM AWB_POUCH C
			WHERE C.AWB_NO = A.AWB_NO AND C.AWB_DATE=A.AWB_DATE) AS awbReceiveTime,
  (SELECT
			TO_CHAR(POUCH_SCAN_TIME, 'DDMONYY HH24:MI')
			FROM AWB_POUCH C
			WHERE C.AWB_NO = A.AWB_NO AND C.AWB_DATE=A.AWB_DATE) AS pouchReceiveTime
				FROM AWB A,
				  IMP_CAR_AWB CA
				WHERE CA.AWB_NO(+) = A.AWB_NO
				AND CA.AWB_DATE(+) = A.AWB_DATE
				AND A.AWB_NO       = #awbNo#
				AND A.AWB_DATE     = TO_DATE(#awbDate#, 'DDMONYY')
				AND ((SELECT COUNT(1)
				  FROM imp_car_awb
				  WHERE awb_no=#awbNo#
				  AND awb_date=#awbDate#) > 0)
        </select>
        <select id="sqlFetchNewAWBEnqExportDetails" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO" resultClass="cargo.cms.awb.bo.AWBEnquiryBO">
         SELECT A.AWB_NO                                    AS awbNo,
         		substr(A.AWB_NO,1,3)||'-'||substr(A.AWB_NO,4) awbNoDisplay,
				  SUBSTR( A.AWB_NO,1,3 )                           AS awbNoPFX,
				  SUBSTR( A.AWB_NO,4 )                             AS awbNoSFX,
				  A.AWB_TYPE                                       AS awbType,
				  DECODE(A.PCS,'','0',A.PCS)                       AS awbPcs,
				  trim(TO_CHAR(NVL(A.WT,0),'9999990.00'))          AS awbWt,
				  TO_CHAR( A.AWB_DATE, 'DDMONYY')                  AS awbDate,
				  CA.AGENT_CODE                                    AS agentCode,
				  DECODE(CA.SPL_CODE1,'',A.SPL_CODE1,CA.SPL_CODE1) AS splCode1,
				  DECODE(CA.SPL_CODE2,'',A.SPL_CODE2,CA.SPL_CODE2) AS splCode2,
				  DECODE(CA.SPL_CODE3,'',A.SPL_CODE3,CA.SPL_CODE3) AS splCode3,
				  DECODE(CA.SPL_CODE4,'',A.SPL_CODE4,CA.SPL_CODE4) AS splCode4,
				  DECODE(CA.SPL_CODE5,'',A.SPL_CODE5,CA.SPL_CODE5) AS splCode5,
				  DECODE(CA.SPL_CODE6,'',A.SPL_CODE6,CA.SPL_CODE6) AS splCode6,
				  DECODE(CA.SPL_CODE7,'',A.SPL_CODE7,CA.SPL_CODE7) AS splCode7,
				  DECODE(CA.SPL_CODE8,'',A.SPL_CODE8,CA.SPL_CODE8) AS splCode8,
				  DECODE(A.SPL_CODE9,'','',A.SPL_CODE9)            AS splCode9,
				  CA.SPL_CODE9                                     AS splCode9,
				  A.ORIG                                           AS awbOrigin,
				  ((CASE WHEN(select COUNT(1) from v_cst_cc_code_awb a,mast_constraint_code b where b.code = A.CC_CODE and b.constraint='Y' and a.awb_no=#awbNo#) > 0
           THEN 'Y'
           ELSE 'N'
           END)) as constrained,
					(SELECT cc_code FROM (SELECT t1.cc_code FROM v_cst_cc_code t1,mast_constraint_code t2 WHERE t1.cc_code = t2.code AND awb_no = #awbNo# AND NVL(hawb_no, '000000000000000000') = '000000000000000000' ORDER BY recv_date DESC, priority DESC) where rownum = 1) as latestCc,
				  (SELECT SUM(CHRG_AMT)
				  FROM BILL_CHARGE_DTL
				  WHERE AWB_NO = #awbNo#
				  AND AWB_DATE =#awbDate#
				  )         AS osCharge,
				  A.DEST    AS awbDest,
				  A.CONTENT AS content,
				  (DECODE(
				  (SELECT COUNT(1) FROM EXP_CAR WHERE awb_no = #awbNo#
				  AND awb_date                               =#awbDate#
				  AND rownum                                 =1
				  ),0, (DECODE(
				  (SELECT rmk FROM awb_rmk WHERE awb_no=#awbNo# AND rownum=1
				  ),NULL,A.AIRLN_RMK,
				  (SELECT rmk FROM awb_rmk WHERE awb_no=#awbNo# AND rownum=1
				  ))),DECODE(CA.AIRL_RMK,NULL,A.AIRLN_RMK,CA.AIRL_RMK))) AS airlRmk,
				  (DECODE(
				  (SELECT COUNT(1) FROM EXP_CAR WHERE awb_no = #awbNo#
				  AND awb_date                               =#awbDate#
				  AND rownum                                 =1
				  ),0, (DECODE(
				  (SELECT rmk FROM awb_rmk WHERE awb_no=#awbNo# AND rownum=1
				  ),NULL,A.AIRLN_RMK,
				  (SELECT rmk FROM awb_rmk WHERE awb_no=#awbNo# AND rownum=1
				  ))),DECODE(CA.AIRL_RMK,NULL,A.AIRLN_RMK,CA.AIRL_RMK))) AS oldAirlRmk,
				  (SELECT SEQ_NO
				  FROM awb_rmk
				  WHERE awb_no=#awbNo#
				  AND rownum  =1
				  ) AS seqNo,
				  (DECODE(
				  (SELECT COUNT(1) FROM EXP_CAR WHERE awb_no = #awbNo#
				  AND awb_date                               =#awbDate#
				  AND rownum                                 =1
				  ),0,a.AWB_RMK,CA.WH_RMK)) AS whRmk,
				  (DECODE(
				  (SELECT COUNT(1) FROM EXP_CAR WHERE awb_no = #awbNo#
				  AND awb_date                               =#awbDate#
				  AND rownum                                 =1
				  ),0,a.AWB_RMK,CA.WH_RMK))                            AS oldWHRmk,
				  CA.CSGNE_NAME                                        AS consignee,
				  CA.CSGNE_ADDR                                        AS consigneAddr,
				  CA.CSGNE_ADDR2                                       AS consigneAddr2,
				  CA.CSGNE_ADDR3                                       AS consigneAddr3,
				  CA.CSGNE_ADDR4                                       AS consigneAddr4,
				  DECODE(CA.CSGNE_PLACE,'','Hong Kong',CA.CSGNE_PLACE) AS consCity,
				  DECODE(CA.CSGNE_CTRY_CODE,'',
				  (SELECT code_desc FROM mast_country mcntr WHERE mcntr.code = 'HK'
				  ),
				  (SELECT code_desc
				  FROM mast_country mcntr1
				  WHERE mcntr1.code = CA.CSGNE_CTRY_CODE
				  ))            AS consCountry,
				  CA.SHPR_NAME  AS shipperName,
				  CA.SHPR_ADDR  AS shipperAddr1,
				  CA.SHPR_ADDR2 AS shipperAddr2,
				  CA.SHPR_ADDR3 AS shipperAddr3,
				  CA.SHPR_ADDR4 AS shipperAddr4,
				  DECODE(CA.SHPR_CTRY_CODE,'',
				  (SELECT code_desc FROM mast_country mcntr WHERE mcntr.code = 'HK'
				  ),
				  (SELECT code_desc
				  FROM mast_country mcntr1
				  WHERE mcntr1.code = CA.SHPR_CTRY_CODE
				  ))                                                 AS shprCountry,
				  DECODE(CA.SHPR_PLACE,'','Hong Kong',CA.SHPR_PLACE) AS shprCity,
				  CA.AGENT_NAME                                      AS appiontedAgent,
				  CA.EDI_AGENT_ADDR_1                                AS agentAddr,
				  CA.EDI_AGENT_ADDR_2                                AS agentAddr1,
				  CA.EDI_AGENT_ADDR_3                                AS agentAddr2,
				  CA.EDI_AGENT_ADDR_4                                AS agentAddr3,
				  CA.EDI_AGENT_ADDR_5                                AS agentAddr4,
				  TO_CHAR(CA.LM_DATE, 'DDMONYY HH24:MI:SS')          AS lmDate,
				  CA.SHPR_STATE_PROVINCE shipperState,
				  CA.CSGNE_STATE_PROVINCE consigneeState,
          (SELECT
			TO_CHAR(AWB_SCAN_TIME, 'DDMONYY HH24:MI')
			FROM AWB_POUCH C
			WHERE C.AWB_NO = A.AWB_NO AND C.AWB_DATE=A.AWB_DATE) AS awbReceiveTime,
  (SELECT
			TO_CHAR(POUCH_SCAN_TIME, 'DDMONYY HH24:MI')
			FROM AWB_POUCH C
			WHERE C.AWB_NO = A.AWB_NO AND C.AWB_DATE=A.AWB_DATE) AS pouchReceiveTime
				FROM AWB A,
				  EXP_CAR CA
				WHERE CA.AWB_NO(+) = A.AWB_NO
				AND CA.AWB_DATE(+) = A.AWB_DATE
				AND A.AWB_NO       = #awbNo#
				AND A.AWB_DATE     = TO_DATE(#awbDate#, 'DDMONYY')
        </select>
        <select id="sqlFetchNewAWBEnqTranshipmentDetails" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO" resultClass="cargo.cms.awb.bo.AWBEnquiryBO">
		   SELECT A.AWB_NO                           AS awbNo,
		   substr(A.AWB_NO,1,3)||'-'||substr(A.AWB_NO,4) awbNoDisplay,
				  SUBSTR( A.AWB_NO,1,3 )                  AS awbNoPFX,
				  SUBSTR( A.AWB_NO,4 )                    AS awbNoSFX,
				  A.AWB_TYPE                              AS awbType,
				  DECODE(A.PCS,'','0',A.PCS)              AS awbPcs,
				  trim(TO_CHAR(NVL(A.WT,0),'9999990.00')) AS awbWt,
				  TO_CHAR( A.AWB_DATE, 'DDMONYY')         AS awbDate,
				  CA.AGENT_CUST_NO                        AS agentCode,
				  A.SPL_CODE1                             AS splCode1,
				  A.SPL_CODE2                             AS splCode2,
				  A.SPL_CODE3                             AS splCode3,
				  A.SPL_CODE4                             AS splCode4,
				  A.SPL_CODE5                             AS splCode5,
				  A.SPL_CODE6                             AS splCode6,
				  A.SPL_CODE7                             AS splCode7,
				  A.SPL_CODE8                             AS splCode8,
				  A.SPL_CODE9                             AS splCode9,
				  CA.AWB_ORIGIN                           AS awbOrigin,
				  ((CASE WHEN(select COUNT(1) from v_cst_cc_code_awb a,mast_constraint_code b where b.code = A.CC_CODE and b.constraint='Y' and a.awb_no=#awbNo#) > 0
            THEN 'Y'
            ELSE 'N'
            END)) as constrained,
				  (SELECT cc_code FROM (SELECT t1.cc_code FROM V_CST_IMP_CC_CODE_AWB t1,mast_constraint_code t2 WHERE t1.cc_code = t2.code AND awb_no = #awbNo# AND NVL(hawb_no, '000000000000000000') = '000000000000000000' ORDER BY recv_date DESC, priority DESC) where rownum = 1) as latestCc,
				  (SELECT SUM(CHRG_AMT)
				  FROM BILL_CHARGE_DTL
				  WHERE AWB_NO = #awbNo#
				  AND AWB_DATE =#awbDate#
				  )           AS osCharge,
				  CA.AWB_DEST AS awbDest,
				  CA.CONTENT  AS content,
				  (DECODE(
				  (SELECT COUNT(1) FROM awb WHERE awb_no = #awbNo#
				  AND awb_date                           =#awbDate#
				  AND rownum                             =1
				  ),0,
				  (SELECT rmk FROM awb_rmk WHERE awb_no=#awbNo# AND rownum=1
				  ),DECODE(CA.AIRLN_RMK,NULL,A.AIRLN_RMK,CA.AIRLN_RMK))) AS airlRmk,
				  (DECODE(
				  (SELECT COUNT(1) FROM awb WHERE awb_no = #awbNo#
				  AND awb_date                           =#awbDate#
				  AND rownum                             =1
				  ),0,
				  (SELECT rmk FROM awb_rmk WHERE awb_no=#awbNo# AND rownum=1
				  ),DECODE(CA.AIRLN_RMK,NULL,A.AIRLN_RMK,CA.AIRLN_RMK))) AS oldAirlRmk,
				  (SELECT SEQ_NO
				  FROM awb_rmk
				  WHERE awb_no=#awbNo#
				  AND awb_date=#awbDate#
				  AND rownum  =1
				  ) AS seqNo,
				  (DECODE(
				  (SELECT COUNT(1) FROM imp_car_awb WHERE awb_no = #awbNo#
				  AND awb_date                                   =#awbDate#
				  AND rownum                                     =1
				  ),0,
				  (SELECT awb_rmk FROM awb WHERE awb_no=#awbNo# AND rownum=1
				  ),CA.WH_RMK)) AS whRmk,
				  (DECODE(
				  (SELECT COUNT(1) FROM imp_car_awb WHERE awb_no = #awbNo#
				  AND awb_date                                   =#awbDate#
				  AND rownum                                     =1
				  ),0,
				  (SELECT awb_rmk FROM awb WHERE awb_no=#awbNo# AND rownum=1
				  ),CA.WH_RMK))                                        AS oldWHRmk,
				  CA.CSGNE_NAME                                        AS consignee,
				  CA.CSGNE_ADDR                                        AS consigneAddr,
				  CA.CSGNE_ADDR1                                       AS consigneAddr1,
				  CA.CSGNE_ADDR2                                       AS consigneAddr2,
				  CA.CSGNE_ADDR3                                       AS consigneAddr3,
				  CA.CSGNE_ADDR4                                       AS consigneAddr4,
				  CA.CSGNE_ADDR5                                       AS consigneAddr5,
				  DECODE(CA.CSGNE_PLACE,'','Hong Kong',CA.CSGNE_PLACE) AS consCity,
				  DECODE(CA.CSGNE_CTRY_CODE,'',
				  (SELECT code_desc FROM mast_country mcntr WHERE mcntr.code = 'HK'
				  ),
				  (SELECT code_desc
				  FROM mast_country mcntr1
				  WHERE mcntr1.code = CA.CSGNE_CTRY_CODE
				  ))           AS consCountry,
				  CA.SHPR_NAME AS shipperName,
				  CA.SHPR_ADD1 AS shipperAddr,
				  CA.SHPR_ADD2 AS shipperAddr1,
				  CA.SHPR_ADD3 AS shipperAddr2,
				  CA.SHPR_ADD4 AS shipperAddr3,
				  ''           AS shipperAddr4,
				  DECODE(CA.SHPR_CTRY_CODE,'',
				  (SELECT code_desc FROM mast_country mcntr WHERE mcntr.code = 'HK'
				  ),
				  (SELECT code_desc
				  FROM mast_country mcntr1
				  WHERE mcntr1.code = CA.SHPR_CTRY_CODE
				  ))                                                 AS shprCountry,
				  DECODE(CA.SHPR_PLACE,'','Hong Kong',CA.SHPR_PLACE) AS shprCity,
				  CA.APPNTD_AGENT                                    AS appiontedAgent,
				  CA.AGENT_ADDR1                                     AS agentAddr,
				  CA.AGENT_ADDR2                                     AS agentAddr1,
				  CA.AGENT_ADDR3                                     AS agentAddr2,
				  CA.AGENT_ADDR4                                     AS agentAddr3,
				  CA.AGENT_ADDR5                                     AS agentAddr4,
				  TO_CHAR(CA.LM_DATE, 'DDMONYY HH24:MI:SS')          AS lmDate,
				  pkg_common.get_awb_splcodes(CA.awb_no, CA.awb_date, 'I') spl,
				  CA.SHPR_NAME    AS shprName,
				  CA.APPNTD_AGENT AS appntdAgent,
				  CA.SHPR_STATE_PROVINCE shipperState,
				  CA.CSGNE_STATE_PROVINCE consigneeState,
          (SELECT
			TO_CHAR(AWB_SCAN_TIME, 'DDMONYY HH24:MI')
			FROM AWB_POUCH C
			WHERE C.AWB_NO = A.AWB_NO AND C.AWB_DATE=A.AWB_DATE) AS awbReceiveTime,
  (SELECT
			TO_CHAR(POUCH_SCAN_TIME, 'DDMONYY HH24:MI')
			FROM AWB_POUCH C
			WHERE C.AWB_NO = A.AWB_NO AND C.AWB_DATE=A.AWB_DATE) AS pouchReceiveTime
				FROM IMP_CAR_AWB CA,
				  	 AWB A
				WHERE A.AWB_NO(+) = CA.AWB_NO
				AND A.AWB_DATE(+) = CA.AWB_DATE
				AND CA.AWB_NO     = #awbNo#
				AND CA.AWB_DATE   = TO_DATE(#awbDate#, 'DDMONYY')
				UNION
				SELECT A.AWB_NO                           AS awbNo,
				substr(A.AWB_NO,1,3)||'-'||substr(A.AWB_NO,4) awbNoDisplay,
				  SUBSTR( A.AWB_NO,1,3 )                  AS awbNoPFX,
				  SUBSTR( A.AWB_NO,4 )                    AS awbNoSFX,
				  A.AWB_TYPE                              AS awbType,
				  DECODE(A.PCS,'','0',A.PCS)              AS awbPcs,
				  trim(TO_CHAR(NVL(A.WT,0),'9999990.00')) AS awbWt,
				  TO_CHAR( A.AWB_DATE, 'DDMONYY')         AS awbDate,
				  CA.AGENT_CODE                           AS agentCode,
				  A.SPL_CODE1                             AS splCode1,
				  A.SPL_CODE2                             AS splCode2,
				  A.SPL_CODE3                             AS splCode3,
				  A.SPL_CODE4                             AS splCode4,
				  A.SPL_CODE5                             AS splCode5,
				  A.SPL_CODE6                             AS splCode6,
				  A.SPL_CODE7                             AS splCode7,
				  A.SPL_CODE8                             AS splCode8,
				  A.SPL_CODE9                             AS splCode9,
				  A.ORIG                                  AS awbOrigin,
				  ((CASE WHEN(select COUNT(1) from v_cst_cc_code_awb a,mast_constraint_code b where b.code = A.CC_CODE and b.constraint='Y' and a.awb_no=#awbNo#) > 0
            THEN 'Y'
            ELSE 'N'
            END)) as constrained,
				  (SELECT cc_code FROM (SELECT t1.cc_code FROM v_cst_cc_code t1,mast_constraint_code t2 WHERE t1.cc_code = t2.code AND awb_no = #awbNo# AND NVL(hawb_no, '000000000000000000') = '000000000000000000' ORDER BY recv_date DESC, priority DESC) where rownum = 1) as latestCc,
				  (SELECT SUM(CHRG_AMT)
				  FROM BILL_CHARGE_DTL
				  WHERE AWB_NO = #awbNo#
				  AND AWB_DATE =#awbDate#
				  )         AS osCharge,
				  A.DEST    AS awbDest,
				  A.CONTENT AS content,
				  (DECODE(
				  (SELECT COUNT(1) FROM EXP_CAR WHERE awb_no = #awbNo#
				  AND awb_date                               =#awbDate#
				  AND rownum                                 =1
				  ),0, (DECODE(
				  (SELECT rmk FROM awb_rmk WHERE awb_no=#awbNo# AND rownum=1
				  ),NULL,A.AIRLN_RMK,
				  (SELECT rmk FROM awb_rmk WHERE awb_no=#awbNo# AND rownum=1
				  ))),DECODE(CA.AIRL_RMK,NULL,A.AIRLN_RMK,CA.AIRL_RMK))) AS airlRmk,
				  (DECODE(
				  (SELECT COUNT(1) FROM EXP_CAR WHERE awb_no = #awbNo#
				  AND awb_date                               =#awbDate#
				  AND rownum                                 =1
				  ),0, (DECODE(
				  (SELECT rmk FROM awb_rmk WHERE awb_no=#awbNo#
				  AND awb_date                         =#awbDate#
				  AND rownum                           =1
				  ),NULL,A.AIRLN_RMK,
				  (SELECT rmk FROM awb_rmk WHERE awb_no=#awbNo# AND rownum=1
				  ))),DECODE(CA.AIRL_RMK,NULL,A.AIRLN_RMK,CA.AIRL_RMK))) AS oldAirlRmk,
				  (SELECT SEQ_NO
				  FROM awb_rmk
				  WHERE awb_no=#awbNo#
				  AND rownum  =1
				  ) AS seqNo,
				  (DECODE(
				  (SELECT COUNT(1) FROM EXP_CAR WHERE awb_no = #awbNo#
				  AND awb_date                               =#awbDate#
				  AND rownum                                 =1
				  ),0,a.AWB_RMK,CA.WH_RMK)) AS whRmk,
				  (DECODE(
				  (SELECT COUNT(1) FROM EXP_CAR WHERE awb_no = #awbNo#
				  AND awb_date                               =#awbDate#
				  AND rownum                                 =1
				  ),0,a.AWB_RMK,CA.WH_RMK))                            AS oldWHRmk,
				  CA.CSGNE_NAME                                        AS consignee,
				  CA.CSGNE_ADDR                                        AS consigneAddr,
				  ''                                                   AS consigneAddr1,
				  CA.CSGNE_ADDR2                                       AS consigneAddr2,
				  CA.CSGNE_ADDR3                                       AS consigneAddr3,
				  CA.CSGNE_ADDR4                                       AS consigneAddr4,
				  ''                                                   AS consigneAddr5,
				  DECODE(CA.CSGNE_PLACE,'','Hong Kong',CA.CSGNE_PLACE) AS consCity,
				  DECODE(CA.CSGNE_CTRY_CODE,'',
				  (SELECT code_desc FROM mast_country mcntr WHERE mcntr.code = 'HK'
				  ),
				  (SELECT code_desc
				  FROM mast_country mcntr1
				  WHERE mcntr1.code = CA.CSGNE_CTRY_CODE
				  ))            AS consCountry,
				  CA.SHPR_NAME  AS shipperName,
				  ''            AS shipperAddr,
				  CA.SHPR_ADDR  AS shipperAddr1,
				  CA.SHPR_ADDR2 AS shipperAddr2,
				  CA.SHPR_ADDR3 AS shipperAddr3,
				  CA.SHPR_ADDR4 AS shipperAddr4,
				  DECODE(CA.SHPR_CTRY_CODE,'',
				  (SELECT code_desc FROM mast_country mcntr WHERE mcntr.code = 'HK'
				  ),
				  (SELECT code_desc
				  FROM mast_country mcntr1
				  WHERE mcntr1.code = CA.SHPR_CTRY_CODE
				  ))                                                 AS shprCountry,
				  DECODE(CA.SHPR_PLACE,'','Hong Kong',CA.SHPR_PLACE) AS shprCity,
				  CA.AGENT_NAME                                      AS appiontedAgent,
				  CA.EDI_AGENT_ADDR_1                                AS agentAddr,
				  CA.EDI_AGENT_ADDR_2                                AS agentAddr1,
				  CA.EDI_AGENT_ADDR_3                                AS agentAddr2,
				  CA.EDI_AGENT_ADDR_4                                AS agentAddr3,
				  CA.EDI_AGENT_ADDR_5                                AS agentAddr4,
				  TO_CHAR(CA.LM_DATE, 'DDMONYY HH24:MI:SS')          AS lmDate,
				  ''                                                 AS spl,
				  ''                                                 AS shprName,
				  ''                                                 AS appntdAgent,
				  CA.SHPR_STATE_PROVINCE shipperState,
				  CA.CSGNE_STATE_PROVINCE consigneeState,
          (SELECT
			TO_CHAR(AWB_SCAN_TIME, 'DDMONYY HH24:MI')
			FROM AWB_POUCH C
			WHERE C.AWB_NO = A.AWB_NO AND C.AWB_DATE=A.AWB_DATE) AS awbReceiveTime,
  (SELECT
			TO_CHAR(POUCH_SCAN_TIME, 'DDMONYY HH24:MI')
			FROM AWB_POUCH C
			WHERE C.AWB_NO = A.AWB_NO AND C.AWB_DATE=A.AWB_DATE) AS pouchReceiveTime
				FROM AWB A,
				  EXP_CAR CA
				WHERE CA.AWB_NO(+) = A.AWB_NO
				AND CA.AWB_DATE(+) = A.AWB_DATE
				AND A.AWB_NO     = #awbNo#
				AND A.AWB_DATE   = TO_DATE(#awbDate#, 'DDMONYY')
				AND NOT EXISTS
				  (SELECT NULL
				  FROM imp_car_awb
				  WHERE awb_no=#awbNo#
				  AND awb_date=#awbDate#
				  )
        </select>
	 <select id="sqlFetchNewAWBEnqSummaryDetails" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO" resultClass="cargo.cms.awb.bo.AWBEnquirySummaryBO">
	        SELECT 
smanifestPcs,DECODE(smanifestWt,null,'','0','',trim(TO_CHAR(NVL(smanifestWt,0),'99999990.00'))) smanifestWt,
sbupPcs,DECODE(sbupWt,null,'','0','',trim(TO_CHAR(NVL(sbupWt,0),'99999990.00'))) sbupWt,
sreleasePcs,DECODE(sreleaseWt,null,'','0','',trim(TO_CHAR(NVL(sreleaseWt,0),'99999990.00'))) sreleaseWt,
stotalPcs,DECODE(stotalWt,null,'','0','',trim(TO_CHAR(NVL(stotalWt,0),'99999990.00'))) stotalWt,
invPcs,DECODE(invWt,null,'','0','',trim(TO_CHAR(NVL(invWt,0),'99999990.00'))) invWt,
srcsPcs,DECODE(srcsWt,null,'','0','',trim(TO_CHAR(NVL(srcsWt,0),'99999990.00'))) srcsWt,
spmanifestPcs,DECODE(spmanifestWt,null,'','0','',trim(TO_CHAR(NVL(spmanifestWt,0),'99999990.00'))) spmanifestWt,
sdepPcs,DECODE(sdepWt,null,'','0','',trim(TO_CHAR(NVL(sdepWt,0),'99999990.00'))) sdepWt,
offloadPcs,DECODE(offloadWt,null,'','0','',trim(TO_CHAR(NVL(offloadWt,0),'99999990.00'))) offloadWt FROM (
SELECT 
			    (SELECT DECODE(SUM(ICS.MANIFEST_PCS),NULL,'','0','',SUM(ICS.MANIFEST_PCS)) FROM IMP_CAR_SHP ICS, AWB B WHERE B.AWB_NO = ICS.AWB_NO AND B.AWB_DATE = ICS.AWB_DATE AND ICS.AWB_NO = #awbNo# AND ICS.AWB_DATE = #awbDate# and car_created = 'Y' AND ICS.FLT_KEY NOT IN ((select rule_value from cmsrules where rule_code='DUMMY_FLT_AAT'),(select rule_value from cmsrules where rule_code='DUMMY_FLT_HACTL'))) AS smanifestPcs,
        		(SELECT DECODE(SUM(ICS.MANIFEST_WT),null,'','0','',trim(TO_CHAR(NVL(SUM(ICS.MANIFEST_WT),0),'99999990.00'))) FROM IMP_CAR_SHP ICS, AWB B WHERE B.AWB_NO = ICS.AWB_NO AND B.AWB_DATE = ICS.AWB_DATE AND ICS.AWB_NO = #awbNo# AND ICS.AWB_DATE = #awbDate# and car_created = 'Y' AND ICS.FLT_KEY NOT IN ((select rule_value from cmsrules where rule_code='DUMMY_FLT_AAT'),(select rule_value from cmsrules where rule_code='DUMMY_FLT_HACTL'))) AS smanifestWt,
        		(SELECT DECODE(SUM(ICS.RECD_PCS),NULL,'',SUM(ICS.RECD_PCS)) FROM IMP_CAR_SHP ICS WHERE ICS.AWB_NO = #awbNo# AND ICS.AWB_DATE = #awbDate#) AS sbupPcs,
			    (SELECT DECODE(sum(ICS.RECD_WT),null,'',trim(TO_CHAR(NVL(sum(ICS.RECD_WT),0),'99999990.00')))  FROM IMP_CAR_SHP ICS WHERE ICS.AWB_NO = #awbNo# AND ICS.AWB_DATE = #awbDate#) AS sbupWt,
			    (SELECT decode(bupPcs,'','',bupPcs - (SELECT DECODE(SUM(LOCN_PCS),'',0,SUM(LOCN_PCS)) FROM AWB_INVENTORY WHERE AWB_NO=#awbNo# AND AWB_DATE=#awbDate#)) from( 
			    SELECT DECODE(SUM(ICS.RECD_PCS),'','','0','',SUM(ICS.RECD_PCS)) bupPcs FROM IMP_CAR_SHP ICS WHERE ICS.AWB_NO = #awbNo# AND ICS.AWB_DATE = #awbDate#)) AS sreleasePcs,
			    (SELECT decode(bupWt,'','','0','',bupWt - (SELECT DECODE(SUM(LOCN_WT),'',0,SUM(LOCN_WT)) FROM AWB_INVENTORY WHERE AWB_NO=#awbNo# AND AWB_DATE=#awbDate#)) from( 
			    SELECT DECODE(SUM(ICS.RECD_WT),'','',SUM(ICS.RECD_WT)) bupWt FROM IMP_CAR_SHP ICS WHERE ICS.AWB_NO = #awbNo# AND ICS.AWB_DATE = #awbDate#)) AS sreleaseWt,
			    (SELECT SUM(ICA.AWB_PCS) FROM IMP_CAR_AWB ICA WHERE ICA.AWB_NO = #awbNo# AND ICA.AWB_DATE = #awbDate#) As stotalPcs,
			    (SELECT DECODE(SUM(ICA.AWB_WT),null,'','0','',trim(TO_CHAR(NVL(SUM(ICA.AWB_WT),0),'99999990.00'))) FROM IMP_CAR_AWB ICA WHERE ICA.AWB_NO = #awbNo# AND ICA.AWB_DATE = #awbDate#) As stotalWt,
			    (SELECT DECODE(SUM(AI.LOCN_PCS),'','','0','',SUM(AI.LOCN_PCS)) FROM AWB_INVENTORY AI WHERE AI.AWB_NO = #awbNo# AND AI.AWB_DATE = #awbDate#) invPcs,
			    (SELECT DECODE(SUM(AI.LOCN_WT),'','','0','',SUM(AI.LOCN_WT)) FROM AWB_INVENTORY AI WHERE AI.AWB_NO = #awbNo# AND AI.AWB_DATE = #awbDate#) invWt,
			    (select DECODE(sum(rclPcs),NULL,'','0','',sum(rclPcs)) from(SELECT NVL(EH.RCL_PCS,0) AS rclPcs
							FROM  EXP_RCL_HD EH
							WHERE    EH.PPK_TYPE IN ('P','B') 
									 AND  EH.AWB_NO = #awbNo#
							         AND EH.AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY')
									 AND EH.STATUS != 'V' AND EH.STATUS != 'R' AND EH.RTN_IND != 'Y'
							UNION ALL		 
							SELECT	NVL(BRK.PCS,0) AS rclPcs
						 FROM EXP_RCL_HD EH, EXP_RCL_BRKDN BRK
						 WHERE EH.RCL_NO = BRK.RCL_NO  AND EH.PPK_TYPE = 'M'  
					           AND BRK.AWB_NO = #awbNo# 
							   AND BRK.AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY')
							   AND EH.STATUS != 'V' AND EH.STATUS != 'R' AND EH.RTN_IND != 'Y')) as srcsPcs,
					   (select DECODE(sum(rclWt),null,'','0','',trim(TO_CHAR(NVL(sum(rclWt),0),'99999990.00'))) from(SELECT
							        trim(TO_CHAR(NVL(EH.RCL_WT,0),'9999990D99')) AS rclWt
							FROM  EXP_RCL_HD EH
							WHERE    EH.PPK_TYPE IN ('P','B') 
									 AND  EH.AWB_NO = #awbNo#
							         AND EH.AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY')
									 AND EH.STATUS != 'V' AND EH.STATUS != 'R' AND EH.RTN_IND != 'Y'
							UNION ALL		 
							SELECT	trim(TO_CHAR(NVL(BRK.WEIGHT,0),'999999999990.00')) AS rclWt
						 FROM EXP_RCL_HD EH, EXP_RCL_BRKDN BRK
						 WHERE EH.RCL_NO = BRK.RCL_NO  AND EH.PPK_TYPE = 'M'  
					           AND BRK.AWB_NO = #awbNo# 
							   AND BRK.AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY')
							   AND EH.STATUS != 'V' AND EH.STATUS != 'R' AND EH.RTN_IND != 'Y')) as srcsWt,
					      (select DECODE(SUM(PMAN_PCS),NULL,'','0','',SUM(PMAN_PCS)) from AWB where  AWB_NO = #awbNo# AND AWB_DATE = #awbDate#) AS spmanifestPcs,		
                (select DECODE(SUM(pman_wt),null,'','0','',trim(TO_CHAR(NVL(SUM(pman_wt),0),'99999990.00'))) from AWB where  AWB_NO = #awbNo# AND AWB_DATE = #awbDate#) AS spmanifestWt,
					      (select sum(SHPM_ASSGN_PCS) from EXP_MANIFEST_DTL EM where EM.AWB_NO = #awbNo# AND AWB_DATE = #awbDate#) AS sdepPcs,
					      (select DECODE(sum(SHPM_ASSGN_WT),null,'',trim(TO_CHAR(NVL(sum(SHPM_ASSGN_WT),0),'99999990.00'))) from EXP_MANIFEST_DTL EM where EM.AWB_NO = #awbNo# AND AWB_DATE = #awbDate#) AS sdepWt,
			          (select  DECODE(SUM(offAwb.offload_pcs),NULL,'','0','',SUM(offAwb.offload_pcs)) from exp_offload_uld_awb offAwb where offAwb.AWB_NO = #awbNo# AND offAwb.AWB_DATE = #awbDate# and confirmed_yn='Y') offloadPcs,
			          (select DECODE(SUM(offAwb.offload_wt),NULL,'','0','',SUM(offAwb.offload_wt)) from exp_offload_uld_awb offAwb where offAwb.AWB_NO = #awbNo# AND offAwb.AWB_DATE = #awbDate# and confirmed_yn='Y') offloadWt    
			FROM DUAL)
        </select>
 <select id="sqlFetchNewAWBEnqInboundFlightDetails" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO" resultClass="cargo.cms.awb.bo.AWBEnquiryBO">
        SELECT ICS.CARR_CODE carrCode,
			  ICS.FLT_KEY                       AS fltKey,
			  TO_CHAR (ICS.FLT_DATE, 'DDMONYY') AS fltDate,
			  ICS.FLT_TYPE                      AS fltType,
			  ICS.ldg_point                     AS unldgPt,
			  (SELECT carr_code
			  FROM flt_opr
			  WHERE flt_key = ICS.FLT_KEY
			  AND sch_date  = ICS.FLT_DATE
			  AND flt_type  = DECODE(ICS.FLT_TYPE,'I','A','A','A','D','D','D')
			  AND rownum    =1
			  ) fltCarr,
			  PKG_COMMON.get_flt_sta(ICS.FLT_KEY, ICS.FLT_DATE, 'A') as sta,
			  pkg_common.get_flt_ata(ICS.FLT_KEY, ICS.FLT_DATE,'A')                                                                                                           AS ata,
			  DECODE(ICS.MANIFEST_PCS,NULL,'','0','',ICS.MANIFEST_PCS)                                                                                                        AS manifestPcs,
			  DECODE(ICS.MANIFEST_WT,NULL,'','0','',DECODE(trim(TO_CHAR(NVL(ICS.MANIFEST_WT,0),'99999990.00')),'0.0','',trim(TO_CHAR(NVL(ICS.MANIFEST_WT,0),'99999990.00')))) AS manifestWt,
			  DECODE(ICS.RECD_PCS,NULL,'','0','',ICS.RECD_PCS)                                                                                                                AS bdPcs,
			  DECODE(ICS.RECD_WT,NULL,'','0','',DECODE(trim(TO_CHAR(NVL(ICS.RECD_WT,0),'99999990.00')),'0.0','',trim(TO_CHAR(NVL(ICS.RECD_WT,0),'99999990.00'))))             AS bdWt,
			  (SELECT STRAGG(STRINGDELIM(A.TRF_TYPE , ','))
			  FROM
			    (SELECT DS.AWB_NO,
			      DS.AWB_DATE,
			      DM.FLT_KEY,
			      DM.FLT_DATE,
			      TRF_TYPE
			    FROM DDT_SHP_TRF_DTL DTL,
			      DDT_SHP DS,
			      DDT_MSG DM
			    WHERE DS.DOC_LINE_NO=DTL.DOC_LINE_NO
			    AND DS.TR_NO        =DTL.TR_NO
			    AND DM.TR_NO        = DTL.TR_NO
			    AND DM.DDT_STATUS   = 'P'
			    GROUP BY TRF_TYPE,
			      DS.AWB_NO,
			      DS.AWB_DATE,
			      DM.FLT_KEY,
			      DM.FLT_DATE
			    ) A
			  WHERE A.AWB_NO=ICS.AWB_NO
			  AND A.AWB_DATE=ICS.AWB_DATE
			  AND A.FLT_KEY =ICS.FLT_KEY
			  AND A.FLT_DATE=ICS.FLT_DATE
			  AND EXISTS
			    (SELECT NULL
			    FROM flt_opr_events
			    WHERE flt_key          =A.FLT_KEY
			    AND sch_date           =A.FLT_DATE
			    AND flt_type           ='A'
			    AND ddt_finalise_date IS NOT NULL
			    )
			  ) AS subType,
			  (CASE
         WHEN (SELECT count(1) AS damageNumber FROM IMP_CAR_SHP WHERE DAM_PROC_USER is not null and awb_no = #awbNo# and awb_date=#awbDate# and flt_key=ICS.FLT_KEY and flt_date=ICS.FLT_DATE) > 0
        THEN 'Y'
        ELSE 'N'
        END) damageInd
			FROM IMP_CAR_SHP ICS,AWB B
			WHERE B.AWB_NO = ICS.AWB_NO AND B.AWB_DATE = ICS.AWB_DATE AND ICS.AWB_NO = #awbNo#
			AND ICS.AWB_DATE = to_date(#awbDate#,'DDMONYY') AND ICS.FLT_KEY NOT IN ((select rule_value from cmsrules where rule_code='DUMMY_FLT_AAT'),(select rule_value from cmsrules where rule_code='DUMMY_FLT_HACTL'))
      UNION ALL
      SELECT (SELECT carr_code
			  FROM flt_opr
			  WHERE flt_key = A.FLT_KEY
			  AND sch_date  = A.FLT_DATE
			  AND flt_type  = DECODE('I','I','A','A','A','D','D','D')
			  AND rownum    =1
			  ) carrCode,
			  A.FLT_KEY                       AS fltKey,
			  TO_CHAR (A.FLT_DATE, 'DDMONYY') AS fltDate,
			  'I'                      AS fltType,
			  A.ldg_point                     AS unldgPt,
			  (SELECT carr_code
			  FROM flt_opr
			  WHERE flt_key = A.FLT_KEY
			  AND sch_date  = A.FLT_DATE
			  AND flt_type  = DECODE('I','I','A','A','A','D','D','D')
			  AND rownum    =1
			  ) fltCarr,
			  PKG_COMMON.get_flt_sta(A.FLT_KEY, A.FLT_DATE, 'A') as sta,
			  pkg_common.get_flt_ata(A.FLT_KEY, A.FLT_DATE,'A')                                                                                                           AS ata,
			  '' AS manifestPcs,
			  '' AS manifestWt,
			  DECODE(A.RCL_PCS,NULL,'','0','',A.RCL_PCS)                                                                                                                AS bdPcs,
			  DECODE(A.RCL_WT,null,'','0','',DECODE(trim(TO_CHAR(NVL(A.RCL_WT,0),'99999990.00')),'0.0','',trim(TO_CHAR(NVL(A.RCL_WT,0),'99999990.00'))))             AS bdWt,
			  '' AS subType,
			  (CASE
         WHEN (SELECT count(1) AS damageNumber FROM IMP_CAR_SHP WHERE DAM_PROC_USER is not null and awb_no = #awbNo# and awb_date=#awbDate# and flt_key=A.FLT_KEY and flt_date=A.FLT_DATE) > 0
        THEN 'Y'
        ELSE 'N'
        END) damageInd
			    FROM (SELECT A.AWB_NO,A.AWB_DATE,A.LDG_POINT,SUM(RCL_PCS) RCL_PCS,SUM(RCL_WT) RCL_WT,FLT_KEY,FLT_DATE FROM (
SELECT ICS.AWB_NO,ICS.AWB_DATE,ICS.LDG_POINT,CDT.FLT_KEY,CDT.FLT_DATE,SUM(THD.RCL_PCS) RCL_PCS,SUM(THD.RCL_WT) RCL_WT FROM IMP_CAR_SHP ICS,TRF_ACCEPT_HD THD,cdt_inb_flt_dtls CDT, AWB A
WHERE THD.AWB_NO = ICS.AWB_NO AND THD.AWB_DATE = ICS.AWB_DATE AND THD.STATUS != 'V' and
cdt.rcl_no = THD.TRF_NO AND CDT.AWB_NO = ICS.AWB_NO AND CDT.AWB_DATE = ICS.AWB_DATE AND A.AWB_NO = ICS.AWB_NO AND A.AWB_DATE = ICS.AWB_DATE 
AND A.ACCEPT_MODE = 'TIT' AND ICS.FLT_KEY = THD.DUM_FLT_KEY AND ICS.FLT_DATE = THD.DUM_FLT_DATE 
AND ICS.AWB_NO = #awbNo# AND ICS.AWB_DATE = #awbDate# GROUP BY ICS.AWB_NO,ICS.AWB_DATE,ICS.LDG_POINT,CDT.FLT_KEY,CDT.FLT_DATE
UNION ALL
SELECT ICS.AWB_NO,ICS.AWB_DATE,ICS.LDG_POINT,CDT.FLT_KEY,CDT.FLT_DATE,SUM(TBRD.PCS) PCS,SUM(TBRD.WEIGHT) WEIGHT FROM IMP_CAR_SHP ICS,trf_accept_brkdn TBRD, trf_accept_hd THD, cdt_inb_flt_dtls CDT, AWB A
WHERE TBRD.AWB_NO = ICS.AWB_NO AND TBRD.AWB_DATE = ICS.AWB_DATE AND THD.TRF_NO = TBRD.TRF_NO AND THD.STATUS != 'V' and
cdt.rcl_no = THD.TRF_NO and cdt.awb_no=ics.awb_no and cdt.awb_date = ics.awb_date AND A.AWB_NO = ICS.AWB_NO AND A.AWB_DATE = ICS.AWB_DATE 
AND A.ACCEPT_MODE = 'TIT' AND ICS.FLT_KEY = THD.DUM_FLT_KEY AND ICS.FLT_DATE = THD.DUM_FLT_DATE  
AND ICS.AWB_NO = #awbNo# AND ICS.AWB_DATE = #awbDate# GROUP BY ICS.AWB_NO,ICS.AWB_DATE,ICS.LDG_POINT,CDT.FLT_KEY,CDT.FLT_DATE) A 
GROUP BY A.AWB_NO,A.AWB_DATE,A.LDG_POINT,A.FLT_KEY,A.FLT_DATE) A
        </select>
		<select id="sqlFetchNewAWBEnqInboundFlightULDDetails" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO" resultClass="cargo.cms.awb.bo.AWBEnquiryBO">
        SELECT DECODE(uldPcs,null,'','0','',uldPcs) uldPcs,DECODE(uldWt,null,'','0','',trim(TO_CHAR(NVL(uldWt,0),'99999990.00'))) uldWt,uldKey,chkinTime,bdCompTime,subType FROM(
SELECT 
					(select sum(a.MAN_PCS) a 
											from edi_ffm_shp a,edi_ffm_uld b,edi_ffm_msg c 
											where a.tr_no=b.tr_no and a.udoc_line_no= b.doc_line_no 
												and  b.flt_key =#fltKey# and b.flt_date=#fltDate# 
												and b.uld_key=K.ULD_KEY AND A.AWB_NO=#awbNo# AND A.AWB_DATE=#awbDate# and c.tr_no=a.tr_no and c.ffm_status='P') uldPcs,
					(select sum(a.MAN_WT) a 
											from edi_ffm_shp a,edi_ffm_uld b,edi_ffm_msg c 
											where a.tr_no=b.tr_no and a.udoc_line_no= b.doc_line_no 
												and  b.flt_key =#fltKey# and b.flt_date=#fltDate#
												and b.uld_key=K.ULD_KEY AND A.AWB_NO=#awbNo# AND A.AWB_DATE=#awbDate# and c.tr_no=a.tr_no and c.ffm_status='P') uldWt,
        K.ULD_KEY uldKey,
			  TO_CHAR(r.chkin_date,'HH24MI') chkinTime,
			  LPAD(r.brkdn_compl_time,4,0) bdCompTime,
        (select trf_type from V_DDT_DTL v where v.ULD_KEY=U.uld_key and v.flt_key= m.flt_key and v.flt_date=m.flt_date and ROWNUM=1) subType
			FROM edi_ffm_shp a,
			  edi_ffm_uld K,
			  edi_ffm_msg m,
			  IMP_RAMP_CHK_DTL R,
        ULD_INVENTORY U
			WHERE a.tr_no     =K.tr_no
			AND a.udoc_line_no= K.doc_line_no
			AND K.tr_no       = m.tr_no
			AND R.FLT_KEY(+)  = K.FLT_KEY
			AND R.FLT_DATE(+) = K.FLT_DATE
			AND R.ULD_KEY(+)  =K.ULD_KEY
      AND U.ULD_KEY(+) = K.ULD_KEY
			AND m.ffm_status  = 'P'
			AND K.flt_key     =#fltKey#
			AND K.flt_date    =#fltDate#
			AND A.AWB_NO      =#awbNo#
			AND A.AWB_DATE    =#awbDate#
			AND K.ULD_KEY    IS NOT NULL)
      UNION ALL
      SELECT DECODE(uldPcs,null,'','0','',uldPcs) uldPcs,DECODE(uldWt,null,'','0','',trim(TO_CHAR(NVL(uldWt,0),'99999990.00'))) uldWt,uldKey,chkinTime,bdCompTime,subType FROM(
SELECT 
					(select sum(a.MAN_PCS) a 
											from edi_ffm_shp a,edi_ffm_uld b,edi_ffm_msg c 
											where a.tr_no=b.tr_no and a.udoc_line_no= b.doc_line_no 
												and  b.flt_key =#fltKey# and b.flt_date=#fltDate# 
												and b.uld_key IS NULL AND A.AWB_NO=#awbNo# AND A.AWB_DATE=#awbDate# and c.tr_no=a.tr_no and c.ffm_status='P') uldPcs,
					(select sum(a.MAN_WT) a 
											from edi_ffm_shp a,edi_ffm_uld b,edi_ffm_msg c 
											where a.tr_no=b.tr_no and a.udoc_line_no= b.doc_line_no 
												and  b.flt_key =#fltKey# and b.flt_date=#fltDate#
												and b.uld_key IS NULL AND A.AWB_NO=#awbNo# AND A.AWB_DATE=#awbDate# and c.tr_no=a.tr_no and c.ffm_status='P') uldWt,
        NVL(K.ULD_KEY,'XXXXXXXXXXX') uldKey,
			  TO_CHAR(r.chkin_date,'HH24MI') chkinTime,
			  LPAD(r.brkdn_compl_time,4,0) bdCompTime,
        DECODE(K.ULD_KEY,'',(SELECT STRAGG(STRINGDELIM(A.SHP_TRF_TYPE, ',')) FROM V_DDT_DTL A WHERE A.FLT_KEY     = #fltKey# AND A.FLT_DATE    = #fltDate# AND A.AWB_NO = #awbNo# AND A.AWB_DATE = #awbDate# AND a.uld_key is null),U.TRANSIT_TYPE)  subType
			FROM edi_ffm_shp a,
			  edi_ffm_uld K,
			  edi_ffm_msg m,
			  IMP_RAMP_CHK_DTL R,
        ULD_INVENTORY U
			WHERE a.tr_no     =K.tr_no
			AND a.udoc_line_no= K.doc_line_no
			AND K.tr_no       = m.tr_no
			AND R.FLT_KEY(+)  = K.FLT_KEY
			AND R.FLT_DATE(+) = K.FLT_DATE
			AND R.ULD_KEY(+)  =K.ULD_KEY
      AND U.ULD_KEY(+) = K.ULD_KEY
			AND m.ffm_status  = 'P'
			AND K.flt_key     =#fltKey#
			AND K.flt_date    =#fltDate#
			AND A.AWB_NO      =#awbNo#
			AND A.AWB_DATE    =#awbDate#
			AND K.ULD_KEY IS NULL)
        </select>
		<select id="sqlFetchNewAWBEnqOutboundFlightDetails" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO" resultClass="cargo.cms.awb.bo.AWBEnquiryBO">
       SELECT fltKey,fltDate,fltType,unldgPt,offldCode,fblPc,fblWt,std,atd,awbNo,awbDate,
DECODE(manfPc,null,'','0','',manfPc) manfPc,DECODE(manfWt,null,'','0','',trim(TO_CHAR(NVL(manfWt,0),'99999990.00'))) manfWt,
DECODE(bupPc,null,'','0','',bupPc) bupPc,DECODE(bupWt,null,'','0','',trim(TO_CHAR(NVL(bupWt,0),'99999990.00'))) bupWt,
fltCarr,subType,awbScanTime,pouchScanTime
				FROM
				  (SELECT EP.flt_key fltKey,
				    to_char(EP.flt_date,'DDMONYY') fltDate,
				    flt_type fltType,
            UNLDG_PT unldgPt,
            (select B.EDMP_CODE from edi_fbl a, edi_fbl_shp b where b.tr_no = a.tr_no and b.awb_no=#awbNo# and b.awb_date=#awbDate# and a.flt_key=EP.flt_key and a.flt_date=EP.flt_date AND a.FBL_STATUS = 'P') AS offldCode,
            (select DECODE(sum(pcs),NULL,'','0','',sum(pcs)) from edi_fbl_shp shp,edi_fbl fbl where shp.awb_no= #awbNo# and shp.awb_date=#awbDate# and fbl.flt_key=EP.flt_key and fbl.flt_date=EP.flt_date AND shp.tr_no= fbl.tr_no AND fbl.FBL_STATUS = 'P') as fblPc,   
            (select DECODE(sum(net_wt),null,'','0','',trim(TO_CHAR(NVL(sum(net_wt),0),'99999990.00'))) from edi_fbl_shp shp,edi_fbl fbl where shp.awb_no= #awbNo# and shp.awb_date=#awbDate# and fbl.flt_key=EP.flt_key and fbl.flt_date=EP.flt_date AND shp.tr_no= fbl.tr_no AND fbl.FBL_STATUS = 'P') as fblWt,
            PKG_COMMON.get_flt_sta(EP.flt_key, EP.FLT_DATE, 'D', 'DD') std,
            PKG_COMMON.get_flt_ata(EP.flt_key, EP.FLT_DATE, 'D', 'DD') atd,
            awb_no awbNo,
				    awb_date awbDate,
				    SUM(manf_pc) manfPc,
				    SUM(manf_wt) manfWt,
				    SUM(bup_pc) bupPc ,
				    SUM(bup_wt) bupWt,
				    (SELECT carr_code
							  FROM flt_opr
							  WHERE flt_key = ep.flt_key
							  AND sch_date  = EP.FLT_DATE
							  AND flt_type  = 'D'
							  AND rownum    =1
							  ) fltCarr,
							  (SELECT STRAGG(STRINGDELIM(A.TRF_TYPE , ',')) FROM
  (SELECT DS.AWB_NO,DS.AWB_DATE,DM.FLT_KEY,DM.FLT_DATE,TRF_TYPE
    FROM DDT_SHP_TRF_DTL DTL,      DDT_SHP DS,      DDT_MSG DM
    WHERE 
    DS.DOC_LINE_NO=DTL.DOC_LINE_NO
    AND DS.TR_NO      =DTL.TR_NO
    AND DM.TR_NO      = DTL.TR_NO
    AND DM.DDT_STATUS = 'P'
    GROUP BY TRF_TYPE,DS.AWB_NO,DS.AWB_DATE,DM.FLT_KEY,DM.FLT_DATE) A WHERE A.AWB_NO=EP.AWB_NO AND A.AWB_DATE=EP.AWB_DATE AND A.FLT_KEY=EP.flt_key AND A.FLT_DATE=EP.FLT_DATE
    and exists(select null from flt_opr_events where flt_key=A.FLT_KEY and sch_date=A.FLT_DATE and flt_type='A' and ddt_finalise_date is not null)) AS subType,
    (SELECT
			TO_CHAR(AWB_UPLIFT_TIME, 'DDMONYY HH24:MI')
			FROM AWB_POUCH
			WHERE AWB_NO = EP.AWB_NO AND AWB_DATE=EP.AWB_DATE AND FLT_KEY=EP.flt_key AND FLT_DATE=EP.FLT_DATE) AS awbScanTime,
      (SELECT
			 TO_CHAR(POUCH_UPLIFT_TIME, 'DDMONYY HH24:MI')
			FROM AWB_POUCH
			WHERE AWB_NO = EP.AWB_NO AND AWB_DATE=EP.AWB_DATE AND POUCH_FLT_KEY=EP.flt_key AND POUCH_FLT_DATE=EP.FLT_DATE) AS pouchScanTime
				  FROM
				    (SELECT flt_key flt_key,
				      flt_date flt_date,
				      flt_type flt_type,
				      awb_no awb_no,
				      TO_CHAR(awb_date,'DDMONYY') awb_date,
              UNLDG_PT UNLDG_PT,
				      SUM(NVL(pman_pcs,0)) manf_pc,
				      SUM(NVL(pman_wt,0)) manf_wt,
				      SUM( NVL(PPK_PCS,0)+NVL(MIX_PCS,0)+NVL(ASSIGNED_BULK_PCS,0)) bup_pc,
				      SUM( NVL(PPK_WT,0) +NVL(MIX_WT,0)+NVL(ASSIGNED_BULK_WT,0) )bup_wt
				    FROM exp_pmanifest_awb
				    GROUP BY flt_key,
				      flt_date,
				      awb_no,
				      awb_date,
				      flt_type,
              UNLDG_PT
				    UNION
				    SELECT flt_key flt_key,
				      flt_date flt_date,
				      'E' flt_type,
				      awb_no awb_no,
				       TO_CHAR(awb_date,'DDMONYY') awb_date,
              UNLDG_PT UNLDG_PT,
				      SUM(NVL(bulk_pcs,0)+NVL(ppk_pcs,0)) manf_pc,
				      SUM(NVL(bulk_wt,0) +NVL(ppk_wt,0)) manf_wt,
				      SUM(NVL(bulk_pcs,0)+NVL(ppk_pcs,0)) bup_pc,
				      SUM(NVL(bulk_wt,0) +NVL(ppk_wt,0)) bup_wt
				    FROM EXP_PMAN_TARMAC_AWB
				    GROUP BY flt_key,
				      awb_no,
				      awb_date,
				      flt_date,
              UNLDG_PT
            UNION
            SELECT A.flt_key flt_key,
				      A.flt_date flt_date,
				      'E' flt_type,
				      A.awb_no awb_no,
				       TO_CHAR(A.awb_date,'DDMONYY') awb_date,
              A.UNLDG_PT UNLDG_PT,
				      0 manf_pc,
				      0 manf_wt,
				      0 bup_pc,
				      0 bup_wt
				    FROM exp_OFFLOAD_awb A WHERE 
             NOT EXISTS (SELECT NULL FROM EXP_PMANIFEST_AWB B WHERE B.AWB_NO = A.AWB_NO AND B.AWB_DATE=A.AWB_DATE AND B.FLT_KEY=A.FLT_KEY AND B.FLT_DATE=A.FLT_DATE AND B.UNLDG_PT = A.UNLDG_PT)
             AND NOT EXISTS (SELECT NULL FROM EXP_PMAN_TARMAC_AWB B WHERE B.AWB_NO = A.AWB_NO AND B.AWB_DATE=A.AWB_DATE AND B.FLT_KEY=A.FLT_KEY AND B.FLT_DATE=A.FLT_DATE AND B.UNLDG_PT = A.UNLDG_PT)
				    GROUP BY flt_key,
				      flt_date,
				      awb_no,
				      awb_date,
              UNLDG_PT
              union 
                   select fbl.FLT_KEY flt_key,FBL.FLT_DATE flt_date,'E'flt_type, 
            shp.awb_no awb_no,
				    TO_CHAR(shp.awb_date,'DDMONYY') awb_date,
            shp.UNLDG_PT UNLDG_PT,
				    0 manf_pc,
				    0 manf_wt,
				    0 bup_pc,
				    0 bup_wt
     FROM edi_fbl_shp shp,edi_fbl fbl
     WHERE shp.tr_no= fbl.tr_no and  fbl.FBL_STATUS = 'P' AND
      shp.AWB_NO = #awbNo# AND 
      shp.AWB_DATE = #awbDate#  
      AND NOT EXISTS (select NULL from exp_pmanifest_awb where awb_no=#awbNo# and awb_date=#awbDate# AND FLT_KEY=fbl.flt_key AND FLT_DATE=fbl.flt_date)
      AND NOT EXISTS (select NULL from exp_pman_tarmac_awb where awb_no=#awbNo# and awb_date=#awbDate# AND FLT_KEY=fbl.flt_key AND FLT_DATE=fbl.flt_date)
      AND NOT EXISTS (select NULL from exp_offload_awb where awb_no=#awbNo# and awb_date=#awbDate# AND FLT_KEY=fbl.flt_key AND FLT_DATE=fbl.flt_date)
            UNION
            select A.FLT_KEY flt_key,A.FLT_DATE flt_date,'E' flt_type, 
            A.awb_no awb_no,
				    TO_CHAR(A.awb_date,'DDMONYY') awb_date,
            '' UNLDG_PT,
				    0 manf_pc,
				    0 manf_wt,
				    0 bup_pc,
				    0 bup_wt     
       FROM AWB_POUCH A
     WHERE A.AWB_NO = #awbNo# AND 
           A.AWB_DATE = #awbDate# AND
           FLT_KEY IS NOT NULL AND FLT_DATE IS NOT NULL and pouch_flt_key is null and pouch_flt_date is null
      AND NOT EXISTS (select NULL from exp_pmanifest_awb where awb_no=#awbNo# and awb_date=#awbDate# AND FLT_KEY=A.flt_key AND FLT_DATE=A.flt_date)
      AND NOT EXISTS (select NULL from exp_pman_tarmac_awb where awb_no=#awbNo# and awb_date=#awbDate# AND FLT_KEY=A.flt_key AND FLT_DATE=A.flt_date)
      AND NOT EXISTS (select NULL from exp_offload_awb where awb_no=#awbNo# and awb_date=#awbDate# AND FLT_KEY=A.flt_key AND FLT_DATE=A.flt_date)
      AND NOT EXISTS (SELECT NULL FROM edi_fbl_shp shp,edi_fbl fbl WHERE shp.tr_no= fbl.tr_no and  fbl.FBL_STATUS = 'P' AND shp.AWB_NO = #awbNo# AND shp.AWB_DATE = #awbDate# AND fbl.FLT_KEY=A.FLT_KEY AND fbl.FLT_DATE=A.FLT_DATE)
      AND NOT EXISTS (SELECT NULL FROM awb_pouch d WHERE d.AWB_NO = #awbNo# AND d.AWB_DATE = #awbDate# AND d.FLT_KEY=A.FLT_KEY AND d.FLT_DATE=A.FLT_DATE)
      union
      select A.pouch_FLT_KEY flt_key,A.pouch_FLT_DATE flt_date,'E' flt_type, 
            A.awb_no awb_no,
				    TO_CHAR(A.awb_date,'DDMONYY') awb_date,
            '' UNLDG_PT,
				    0 manf_pc,
				    0 manf_wt,
				    0 bup_pc,
				    0 bup_wt     
       FROM AWB_POUCH A
     WHERE A.AWB_NO = #awbNo# AND 
           A.AWB_DATE = #awbDate# AND
           pouch_FLT_KEY IS NOT NULL AND poUch_FLT_DATE IS NOT NULL and flt_key is null and flt_date is null
      AND NOT EXISTS (select NULL from exp_pmanifest_awb where awb_no=#awbNo# and awb_date=#awbDate# AND FLT_KEY=A.pouch_FLT_KEY AND FLT_DATE=A.poUch_FLT_DATE)
      AND NOT EXISTS (select NULL from exp_pman_tarmac_awb where awb_no=#awbNo# and awb_date=#awbDate# AND FLT_KEY=A.pouch_FLT_KEY AND FLT_DATE=A.poUch_FLT_DATE)
      AND NOT EXISTS (select NULL from exp_offload_awb where awb_no=#awbNo# and awb_date=#awbDate# AND FLT_KEY=A.pouch_FLT_KEY AND FLT_DATE=A.poUch_FLT_DATE)
      AND NOT EXISTS (SELECT NULL FROM edi_fbl_shp shp,edi_fbl fbl WHERE shp.tr_no= fbl.tr_no and  fbl.FBL_STATUS = 'P' AND shp.AWB_NO = #awbNo# AND shp.AWB_DATE = #awbDate# AND fbl.FLT_KEY=A.pouch_FLT_KEY AND fbl.FLT_DATE=A.poUch_FLT_DATE)
      AND NOT EXISTS (SELECT NULL FROM awb_pouch d WHERE d.AWB_NO = #awbNo# AND d.AWB_DATE = #awbDate# AND d.pouch_FLT_KEY=A.pouch_FLT_KEY AND d.pouch_FLT_DATE=A.poUch_FLT_DATE)
      union
      select A.pouch_FLT_KEY flt_key,A.pouch_FLT_DATE flt_date,'E' flt_type, 
            A.awb_no awb_no,
				    TO_CHAR(A.awb_date,'DDMONYY') awb_date,
            '' UNLDG_PT,
				    0 manf_pc,
				    0 manf_wt,
				    0 bup_pc,
				    0 bup_wt     
       FROM AWB_POUCH A
     WHERE A.AWB_NO = #awbNo# AND 
           A.AWB_DATE = #awbDate# AND
           pouch_FLT_KEY IS NOT NULL AND poUch_FLT_DATE IS NOT NULL and flt_key is not null and flt_date is not null 
      AND NOT EXISTS (select NULL from exp_pmanifest_awb where awb_no=#awbNo# and awb_date=#awbDate# AND FLT_KEY=A.flt_key AND FLT_DATE=A.flt_date)
      AND NOT EXISTS (select NULL from exp_pman_tarmac_awb where awb_no=#awbNo# and awb_date=#awbDate# AND FLT_KEY=A.flt_key AND FLT_DATE=A.flt_date)
      AND NOT EXISTS (select NULL from exp_offload_awb where awb_no=#awbNo# and awb_date=#awbDate# AND FLT_KEY=A.flt_key AND FLT_DATE=A.flt_date)
      AND NOT EXISTS (SELECT NULL FROM edi_fbl_shp shp,edi_fbl fbl WHERE shp.tr_no= fbl.tr_no and  fbl.FBL_STATUS = 'P' AND shp.AWB_NO = #awbNo# AND shp.AWB_DATE = #awbDate# AND fbl.FLT_KEY=A.FLT_KEY AND fbl.FLT_DATE=A.FLT_DATE)
      AND NOT EXISTS (select NULL from exp_pmanifest_awb where awb_no=#awbNo# and awb_date=#awbDate# AND FLT_KEY=A.POUCH_FLT_KEY AND FLT_DATE=A.POUCH_FLT_DATE)
      AND NOT EXISTS (select NULL from exp_pman_tarmac_awb where awb_no=#awbNo# and awb_date=#awbDate# AND FLT_KEY=A.POUCH_FLT_KEY AND FLT_DATE=A.POUCH_FLT_DATE)
      AND NOT EXISTS (select NULL from exp_offload_awb where awb_no=#awbNo# and awb_date=#awbDate# AND FLT_KEY=A.POUCH_FLT_KEY AND FLT_DATE=A.POUCH_FLT_DATE)
      AND NOT EXISTS (SELECT NULL FROM edi_fbl_shp shp,edi_fbl fbl WHERE shp.tr_no= fbl.tr_no and  fbl.FBL_STATUS = 'P' AND shp.AWB_NO = #awbNo# AND shp.AWB_DATE = #awbDate# AND fbl.FLT_KEY=A.POUCH_FLT_KEY AND fbl.FLT_DATE=A.POUCH_FLT_DATE)
     
				    ) EP
				  GROUP BY flt_key,
				    flt_date,
				    awb_no,
				    awb_date,
				    flt_type,
            UNLDG_PT
				  ) EPA
        WHERE  epa.awbNo=#awbNo#
				AND epa.awbDate=#awbDate#
        </select>
		<select id="sqlFetchNewAWBEnqOutboundFlightULDDetails" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO" resultClass="cargo.cms.awb.bo.AWBEnquiryBO">
        
SELECT A.ULD_BT_NO uldKey,
      		  a.assigned_pcs assigPcs,
				  trim(TO_CHAR(NVL(a.assigned_wt,0),'99999990.00')) assignWt,
				  TO_CHAR(b.bldup_complete_date,'HH24MI') bldupComp,
				  c.chkout_time chkOut,
				  DECODE(d.offload_pcs,null,'','0','',d.offload_pcs) offloadPcs,
				  DECODE(d.offload_wt,null,'','0','',trim(TO_CHAR(NVL(d.offload_wt,0),'99999990.00'))) offloadWt,
          (select trf_type from V_DDT_DTL v where v.ULD_KEY=D.uld_key and v.cntg_flt_key= A.flt_key and v.cntg_flt_date=A.flt_date and ROWNUM=1) subType
				FROM EXP_PMANIFEST_ULD_AWB A
				LEFT JOIN EXP_PMANIFEST_ULD B
        ON B.FLT_KEY   = A.FLT_KEY
				AND B.FLT_DATE = A.FLT_DATE
				AND A.ULD_BT_NO= B.ULD_BT_NO
				LEFT JOIN exp_chkout_dtl C
				ON C.FLT_KEY   = B.FLT_KEY
				AND C.FLT_DATE = B.FLT_DATE
				AND C.ULD_KEY  = B.ULD_BT_NO
				LEFT JOIN EXP_OFFLOAD_ULD_AWB D
				ON D.FLT_KEY      = B.FLT_KEY
				AND D.FLT_DATE    = B.FLT_DATE
				AND D.ULD_BT_NO   = B.ULD_BT_NO
				AND D.AWB_NO      = A.AWB_NO
				AND D.AWB_DATE    = A.AWB_DATE
				AND d.confirmed_yn='Y'
        LEFT JOIN ULD_INVENTORY D ON
        D.ULD_KEY = A.ULD_BT_NO
				WHERE A.AWB_NO      =#awbNo#
				AND A.AWB_DATE    =#awbDate#
				AND A.FLT_KEY=#fltKey#
        		AND A.FLT_DATE=#fltDate#
				UNION ALL
        SELECT A.ULD_BT_NO uldKey,
      		  a.assigned_pcs assigPcs,
				  trim(TO_CHAR(NVL(a.assigned_wt,0),'99999990.00')) assignWt,
				  TO_CHAR(b.CR_DATE,'HH24MI') bldupComp,
				  c.chkout_time chkOut,
				  DECODE(d.offload_pcs,null,'','0','',d.offload_pcs) offloadPcs,
				  DECODE(d.offload_wt,null,'','0','',trim(TO_CHAR(NVL(d.offload_wt,0),'99999990.00'))) offloadWt,
          		(select trf_type from V_DDT_DTL v where v.ULD_KEY=D.uld_key and v.cntg_flt_key= A.flt_key and v.cntg_flt_date=A.flt_date and ROWNUM=1) subType
				FROM EXP_PMAN_TARMAC_ULD_AWB A
				LEFT JOIN EXP_PMAN_TARMAC_ULD B
				ON B.FLT_KEY   = A.FLT_KEY
				AND B.FLT_DATE = A.FLT_DATE
				AND A.ULD_BT_NO= B.ULD_BT_NO
				LEFT JOIN exp_chkout_dtl C
				ON C.FLT_KEY   = B.FLT_KEY
				AND C.FLT_DATE = B.FLT_DATE
				AND C.ULD_KEY  = B.ULD_BT_NO
				LEFT JOIN EXP_OFFLOAD_ULD_AWB D
				ON D.FLT_KEY      = B.FLT_KEY
				AND D.FLT_DATE    = B.FLT_DATE
				AND D.ULD_BT_NO   = B.ULD_BT_NO
				AND D.AWB_NO      = A.AWB_NO
				AND D.AWB_DATE    = A.AWB_DATE
				AND d.confirmed_yn='Y'
         LEFT JOIN ULD_INVENTORY D ON
        D.ULD_KEY = A.ULD_BT_NO
				WHERE A.AWB_NO      =#awbNo#
				AND A.AWB_DATE    =#awbDate#
				AND A.FLT_KEY=#fltKey#
        		AND A.FLT_DATE=#fltDate#
        UNION ALL    
				SELECT A.ULD_BT_NO uldKey,
          	          a.assigned_pcs assigPcs,
				  trim(TO_CHAR(NVL(a.assigned_wt,0),'99999990.00')) assignWt,
				  TO_CHAR(b.bldup_complete_date,'HH24MI') bldupComp,
				  c.chkout_time chkOut,
				  DECODE(a.offload_pcs,null,'','0','',a.offload_pcs) offloadPcs,
				  DECODE(a.offload_wt,null,'','0','',trim(TO_CHAR(NVL(a.offload_wt,0),'99999990.00')))offloadWt,
           		(select trf_type from V_DDT_DTL v where v.ULD_KEY=D.uld_key and v.cntg_flt_key= A.flt_key and v.cntg_flt_date=A.flt_date and ROWNUM=1) subType
				FROM EXP_offload_ULD_AWB A
				LEFT JOIN EXP_PMANIFEST_ULD B
				ON B.FLT_KEY   = A.FLT_KEY
				AND B.FLT_DATE = A.FLT_DATE
				AND A.ULD_BT_NO= B.ULD_BT_NO
				LEFT JOIN exp_chkout_dtl C
				ON C.FLT_KEY      = B.FLT_KEY
				AND C.FLT_DATE    = B.FLT_DATE
				AND C.ULD_KEY     = B.ULD_BT_NO
         LEFT JOIN ULD_INVENTORY D ON
        D.ULD_KEY = A.ULD_BT_NO
				WHERE A.AWB_NO      =#awbNo#
				AND A.AWB_DATE    =#awbDate#
				AND a.confirmed_yn='Y'
				AND A.FLT_KEY=#fltKey#
        		AND A.FLT_DATE=#fltDate#
				AND NOT EXISTS
				  (SELECT NULL
				  FROM exp_pmanifest_uld_awb d
				  WHERE d.awb_no = a.awb_no
				  AND d.awb_date = a.awb_date
				  AND d.flt_key  = a.flt_key
				  AND d.flt_date = a.flt_date
          		  AND D.ULD_BT_NO = A.ULD_BT_NO 
				  )
          	  AND NOT EXISTS
				  (SELECT NULL
				  FROM exp_pman_TARMAC_uld_awb d
				  WHERE d.awb_no = a.awb_no
				  AND d.awb_date = a.awb_date
				  AND d.flt_key  = a.flt_key
				  AND d.flt_date = a.flt_date
          		  AND D.ULD_BT_NO = A.ULD_BT_NO 
				  )
        union all
        SELECT 'XXXXXXXXXXX' uldKey,
       a.BULK_PCS assigPcs,
       trim(TO_CHAR(NVL(a.BULK_WT,0),'99999990.00')) assignWt,
       '' bldupComp,
				NULL chkOut,
				'' offloadPcs,
				'' offloadWt,
       'TT' subType
				FROM EXP_PMAN_TARMAC_AWB A WHERE
			A.AWB_NO=#awbNo# AND A.AWB_DATE=#awbDate# 
      AND A.FLT_KEY=#fltKey# AND A.FLT_DATE=#fltDate# AND A.BULK_PCS != 0 AND A.BULK_WT !=0
        </select>
		<select id="sqlFetchNewAWBEnqCargoRelDetails" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO" resultClass="cargo.cms.awb.bo.AWBEnquiryBO">
       SELECT 
      to_char(T1.SRF_DATE,'DDMONYY') srfDate,
      to_char(T1.SRF_DATE,'HH24MI') srfTime,
		  T1.SRF_NO AS srfNo,
			T1.SRF_PCS AS srfPcs,  
			DECODE(T1.SRF_WT,null,'',trim(TO_CHAR(NVL(T1.SRF_WT,0),'99999990.00'))) AS srfWt,
			(select DECODE(sum(SF.DLV_PCS),NULL,'','0','',sum(SF.DLV_PCS)) from IMP_SRF_FLT SF WHERE SF.SRF_NO=T1.SRF_NO) AS relPcs,
      (select DECODE(sum(SF.DLV_WT),null,'','0','',trim(TO_CHAR(NVL(sum(SF.DLV_WT),0),'99999990.00'))) from IMP_SRF_FLT SF WHERE SF.SRF_NO=T1.SRF_NO) AS relWt,
      (select CONSTRAINT from mast_constraint_code where code = SFT.CC_CODE) ceReq,
      To_Char(VERIFIED_TIME,'DDMONYY HH24:MI') srfReg,
      (select to_char(min(DLV_DATE),'DDMONYY HH24:MI') from imp_srf_awb_inventory where SRF_NO = t1.SRF_NO  group by srf_no) firstCargoRel,
      decode((To_Char(POST_DATE,'DDMONYY')||' '|| SUBSTR(TRIM(TO_CHAR(NVL(POST_TIME,0),'0000')),0,2)|| ':'|| SUBSTR(TRIM(TO_CHAR(NVL(POST_TIME,0),'0000')),3,4)),' 00:00','',(To_Char(POST_DATE,'DDMONYY')||' '|| SUBSTR(TRIM(TO_CHAR(NVL(POST_TIME,0),'0000')),0,2)|| ':'|| SUBSTR(TRIM(TO_CHAR(NVL(POST_TIME,0),'0000')),3,4))) srfComp,
      TT.TRUCK_NO truckNo,
      TO_CHAR(TTE.TRUCK_PARK_ENTRY_TIME,'HH24:MI') truckArrvalTime,
      TO_CHAR(TTE.dock_allocation_time,'HH24:MI') tdAllocTime,
      TO_CHAR(TTE.terminal_entry_time,'HH24:MI') truckEntryTime,
      TO_CHAR(TTE.terminal_exit_time,'HH24:MI') truckLeaveTime      
		FROM 
			IMP_SRF T1
      LEFT JOIN IMP_TRUCK_SRF ITS ON ITS.SRF_NO = T1.SRF_NO
      LEFT JOIN TRUCK_TRIP TT ON TT.TRIP_ID = ITS.TRIP_ID
      LEFT JOIN TRUCK_TRIP_EVENTS TTE ON TTE.TRIP_ID = ITS.TRIP_ID
      LEFT JOIN IMP_SRF_FLT SFT ON SFT.SRF_NO=T1.SRF_NO
		WHERE  
				T1.AWB_NO = #awbNo#
			AND TO_CHAR( T1.AWB_DATE, 'DDMONYY') = #awbDate#
		ORDER BY T1.SRF_DATE
        </select>
		 <select id="sqlFetchNewAWBEnqDimensionDetails" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO" resultClass="cargo.cms.awb.bo.AWBEnquiryBO">
        SELECT A.RCL_NO AS rclNo,
		  A.DOC_LINE_NO AS docLineNum,
		  A.LENGTH      AS LENGTH,
		  A.WIDTH       AS width,
		  A.HEIGHT      AS height,
		  A.PCS         AS pieces,
		  A.REMARKS     AS remarks
		FROM EXP_RCL_DMN A,
		  EXP_RCL_HD B
		WHERE B.awb_no=#awbNo# and B.awb_date=#awbDate#
		AND B.RCL_NO  =A.RCL_NO AND B.STATUS NOT IN ('V','R')
        </select>
  <select id="sqlDimensiondtlsbyRclandAcptTrnsCargo" parameterClass="java.lang.String" resultClass="cargo.cms.awb.bo.AWBEnquiryBO">
     	SELECT A.RCL_NO AS rclNum,
 	 	A.LENGTH      AS LENGTH,
  		A.WIDTH       AS width,
  		A.HEIGHT      AS height,
  		A.PCS         AS pieces
        FROM EXP_RCL_DMN A,
		EXP_RCL_HD B
		WHERE B.RCL_NO  =A.RCL_NO AND B.STATUS NOT IN ('V','R') AND A.RCL_NO =  #PARAM# and b.vcl_no is null
		UNION ALL
		SELECT A.TRF_NO AS rclNum,
 	 	A.LENGTH      AS LENGTH,
  		A.WIDTH       AS width,
  		A.HEIGHT      AS height,
  		A.PCS         AS pieces
        FROM TRF_ACCEPT_DMN A,
		TRF_ACCEPT_HD B
		WHERE B.TRF_NO  =A.TRF_NO AND B.STATUS NOT IN ('V','R') AND A.TRF_NO = #PARAM#  and b.vcl_no is null
        </select>
<select id="sqlDimensiondtlsbyVcl" parameterClass="java.lang.String" resultClass="cargo.cms.awb.bo.AWBEnquiryBO">
  SELECT A.RCL_NO AS rclNum,
 	 	A.LENGTH      AS LENGTH,
  		A.WIDTH       AS width,
  		A.HEIGHT      AS height,
  		A.PCS         AS pieces
        FROM EXP_RCL_DMN A,
		EXP_RCL_HD B
		WHERE B.RCL_NO  =A.RCL_NO AND B.STATUS NOT IN ('V','R') AND A.RCL_NO =  #PARAM# and b.vcl_no is not null
		UNION ALL
          SELECT A.VCL_NO AS rclNum,
         A.LENGTH      AS LENGTH,
          A.WIDTH       AS width,
          A.HEIGHT      AS height,
          A.PCS         AS pieces
         FROM VAL_VCL_DMN A,
          VAL_VCL_HD B
          WHERE B.VCL_NO  =A.VCL_NO AND B.VOID_DATE IS NULL AND B.VOID_USER_ID IS NULL AND A.VCL_NO = #PARAM# and b.vcl_no is not null

        </select>
		<select id="sqlFetchNewFWBDimensionDetails" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO" resultClass="cargo.cms.awb.bo.AWBEnquiryBO">
        SELECT SUM(A.RTD_AWB_VOL_AMT) fwbVolume
		FROM edi_fwb_dmn A,
		  edi_fwb B
		WHERE B.tr_no = a.tr_no
		AND B.awb_no=#awbNo# and b.awb_date=#awbDate#
        </select>
        <select id="fetchAWBEnquiryImportTTPPKDetails" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO" resultClass="cargo.cms.awb.bo.AWBEnquiryFlightBO">
        SELECT  NVL(TO_NUMBER(TO_CHAR(SUM(SHP_TRF_PC),'999999999.99'),'999999999.99'),0) AS ttppkPcs,
       		    NVL(TO_NUMBER(TO_CHAR(SUM(SHP_TRF_WT),'999999999.99'),'999999999.99'),0) AS ttppkWt
      FROM V_DDT_DTL A
      WHERE A.FLT_KEY     = #fltKey#
      AND A.FLT_DATE    = #fltDate#
      AND A.AWB_NO = #awbNo#
      AND A.AWB_DATE = #awbDate#
      AND A.SHP_TRF_TYPE='TT' and a.uld_key is not null
        </select>
       <select id="fetchAWBEnquiryImportTTBULKDetails" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO" resultClass="cargo.cms.awb.bo.AWBEnquiryFlightBO">
       SELECT  NVL(TO_NUMBER(TO_CHAR(SUM(SHP_TRF_PC),'999999999.99'),'999999999.99'),0) AS ttbulkPcs,
        NVL(TO_NUMBER(TO_CHAR(SUM(SHP_TRF_WT),'999999999.99'),'999999999.99'),0) AS ttbulkWt
      FROM V_DDT_DTL A
      WHERE A.FLT_KEY     = #fltKey#
      AND A.FLT_DATE    = #fltDate#
      AND A.AWB_NO = #awbNo#
      AND A.AWB_DATE = #awbDate#
      AND A.SHP_TRF_TYPE='TT' and a.uld_key is null
       </select>
       <select id="fetchAWBEnquiryImportIFPPKDetails" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO" resultClass="cargo.cms.awb.bo.AWBEnquiryFlightBO">
       SELECT  NVL(TO_NUMBER(TO_CHAR(SUM(SHP_TRF_PC),'999999999.99'),'999999999.99'),0) AS ifppkPcs,
        NVL(TO_NUMBER(TO_CHAR(SUM(SHP_TRF_WT),'999999999.99'),'999999999.99'),0) AS ifppkWt
      FROM V_DDT_DTL A
      WHERE A.FLT_KEY     = #fltKey#
      AND A.FLT_DATE    = #fltDate#
      AND A.AWB_NO = #awbNo#
      AND A.AWB_DATE = #awbDate#
      AND A.SHP_TRF_TYPE='IF' and a.uld_key is not null
       </select>
       <select id="fetchAWBEnquiryImportIFBULKDetails" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO" resultClass="cargo.cms.awb.bo.AWBEnquiryFlightBO">
       SELECT  NVL(TO_NUMBER(TO_CHAR(SUM(SHP_TRF_PC),'999999999.99'),'999999999.99'),0) AS ifbulkPcs,
        NVL(TO_NUMBER(TO_CHAR(SUM(SHP_TRF_WT),'999999999.99'),'999999999.99'),0) AS ifbulkWt
      FROM V_DDT_DTL A
      WHERE A.FLT_KEY     = #fltKey#
      AND A.FLT_DATE    = #fltDate#
      AND A.AWB_NO = #awbNo#
      AND A.AWB_DATE = #awbDate#
      AND A.SHP_TRF_TYPE='IF' and a.uld_key is null
       </select>
<select id="fetchAWBEnquiryImportQTPPKDetails" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO" resultClass="cargo.cms.awb.bo.AWBEnquiryFlightBO">
       SELECT  NVL(TO_NUMBER(TO_CHAR(SUM(SHP_TRF_PC),'999999999.99'),'999999999.99'),0) AS ifppkPcs,
        NVL(TO_NUMBER(TO_CHAR(SUM(SHP_TRF_WT),'999999999.99'),'999999999.99'),0) AS ifppkWt
      FROM V_DDT_DTL A
      WHERE A.FLT_KEY     = #fltKey#
      AND A.FLT_DATE    = #fltDate#
      AND A.AWB_NO = #awbNo#
      AND A.AWB_DATE = #awbDate#
      AND A.SHP_TRF_TYPE='QT' and a.uld_key is not null
       </select>
       <select id="fetchAWBEnquiryImportQTBULKDetails" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO" resultClass="cargo.cms.awb.bo.AWBEnquiryFlightBO">
       SELECT  NVL(TO_NUMBER(TO_CHAR(SUM(SHP_TRF_PC),'999999999.99'),'999999999.99'),0) AS ifbulkPcs,
        NVL(TO_NUMBER(TO_CHAR(SUM(SHP_TRF_WT),'999999999.99'),'999999999.99'),0) AS ifbulkWt
      FROM V_DDT_DTL A
      WHERE A.FLT_KEY     = #fltKey#
      AND A.FLT_DATE    = #fltDate#
      AND A.AWB_NO = #awbNo#
      AND A.AWB_DATE = #awbDate#
      AND A.SHP_TRF_TYPE='QT' and a.uld_key is null
       </select>
       
       <select id="fetchAWBEnquiryImportSUMPPKDetails" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO" resultClass="cargo.cms.awb.bo.AWBEnquiryFlightBO">
       SELECT  NVL(TO_NUMBER(TO_CHAR(SUM(SHP_TRF_PC),'999999999.99'),'999999999.99'),0) AS ifppkPcs,
        NVL(TO_NUMBER(TO_CHAR(SUM(SHP_TRF_WT),'999999999.99'),'999999999.99'),0) AS ifppkWt
      FROM V_DDT_DTL A
      WHERE A.FLT_KEY     = #fltKey#
      AND A.FLT_DATE    = #fltDate#
      AND A.AWB_NO = #awbNo#
      AND A.AWB_DATE = #awbDate#
      AND a.uld_key is not null
       </select>
       <select id="fetchAWBEnquiryImportSUMBULKDetails" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO" resultClass="cargo.cms.awb.bo.AWBEnquiryFlightBO">
       SELECT  NVL(TO_NUMBER(TO_CHAR(SUM(SHP_TRF_PC),'999999999.99'),'999999999.99'),0) AS ifbulkPcs,
        NVL(TO_NUMBER(TO_CHAR(SUM(SHP_TRF_WT),'999999999.99'),'999999999.99'),0) AS ifbulkWt
      FROM V_DDT_DTL A
      WHERE A.FLT_KEY     = #fltKey#
      AND A.FLT_DATE    = #fltDate#
      AND A.AWB_NO = #awbNo#
      AND A.AWB_DATE = #awbDate#
       </select>
       
       <select id="fetchAWBEnquiryImportNORMALPPKDetails" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO" resultClass="cargo.cms.awb.bo.AWBEnquiryFlightBO">
       select bup_pcs norPPKPcs,bup_wt norPPKWt from imp_car_shp where awb_no=#awbNo# and awb_date=#awbDate# and flt_key=#fltKey# and flt_date=#fltDate#
       </select>
       <select id="fetchAWBEnquiryImportNORMALBULKDetails" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO" resultClass="cargo.cms.awb.bo.AWBEnquiryFlightBO">
       select bulk_pcs norBULKPcs,bulk_wt norBULKWt from imp_car_shp where awb_no=#awbNo# and awb_date=#awbDate# and flt_key=#fltKey# and flt_date=#fltDate#
       </select>
		<select id="fetchConstraintHawbDetails" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO" resultClass="cargo.cms.awb.bo.AWBEnquiryBO">
       SELECT b.hawb_no AS hawbNo,
			  b.hawb_pcs     AS hawbPcs,
			  b.hawb_net_wt  AS hawbWt
			FROM edi_fhl a,
			  edi_fhl_hawb b,
			  MAST_CONSTRAINT_CODE M,
			  V_CST_LATEST_CC_CODE V
			WHERE B.TR_NO   = A.TR_NO
			AND M.CONSTRAINT='Y'
			AND  A.AWB_NO = V.AWB_NO    
			AND B.HAWB_NO   = V.HAWB_NO
			AND M.code      = V.CC_CODE
			AND A.AWB_NO    =#awbNo#
			AND A.AWB_DATE = #awbDate#
       </select>
	   <select id="fetchPouchStatusforawbEnquiry" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO" resultClass="cargo.cms.awb.bo.AWBEnquiryBO">
       <![CDATA[
       WITH CODE AS (
			  SELECT CODE, CODE_DESC FROM MAST_CODE_DTL WHERE CODE_TYPE = 'EXP_EPOUCH_STATUS'
			),
			SHC_MASTER AS (
			  SELECT CODE FROM MAST_SPL_HAND_CODE WHERE AWB_POUCH_UPLIFT = 'Y'
			),			
			PMAN_INIT AS (
			  SELECT PMAN.AWB_NO, PMAN.AWB_DATE, PMAN.FLT_KEY, PMAN.FLT_DATE,
			  PMAN.PMAN_PCS, PMAN.PMAN_WT, PMAN.UNLDG_PT, (
			  	SELECT NVL(MAX(AWB_PRINT_ORIGIN), 'N') PRINT
			  	FROM MAST_CITY
			  	WHERE CODE = AWB.DEST
			  ) PRINT,
			  DECODE(AWB.ACCEPT_MODE, 'LDS', 'Y', 'N') DIRECT_SHIPPER,
			  DECODE(AWB.AWB_TYPE, 'T', 'Y', 'N') TRANSIT, (
          	  	SELECT FUN_GET_PARENT_CARR(CARR_CODE) FROM MAST_AWB_PREFIX WHERE CODE = SUBSTR(PMAN.AWB_NO, 1, 3) AND DEF_YN = 'Y'
			  ) AWB_CARR_GROUP	  
			  FROM EXP_PMANIFEST_AWB PMAN
			  JOIN AWB AWB
			  ON PMAN.AWB_NO = AWB.AWB_NO AND PMAN.AWB_DATE = AWB.AWB_DATE
			  WHERE pman.awb_no=#awbNo# and pman.awb_date=#awbDate#		
			),
			AWB_FULL AS (
			  SELECT AWB.AWB_NO, AWB.AWB_DATE,
			  SPL_CODE1, SPL_CODE2, SPL_CODE3, SPL_CODE4, SPL_CODE5, SPL_CODE6, SPL_CODE7, SPL_CODE8, SPL_CODE9
			  FROM AWB
			  JOIN PMAN_INIT PMAN
			  ON PMAN.AWB_NO = AWB.AWB_NO AND PMAN.AWB_DATE = AWB.AWB_DATE
			  UNION
			  SELECT AWB.AWB_NO, AWB.AWB_DATE,
			  SPL_CODE1, SPL_CODE2, SPL_CODE3, SPL_CODE4, SPL_CODE5, SPL_CODE6, SPL_CODE7, SPL_CODE8, SPL_CODE9
			  FROM EXP_CAR AWB
			  JOIN PMAN_INIT PMAN
			  ON PMAN.AWB_NO = AWB.AWB_NO AND PMAN.AWB_DATE = AWB.AWB_DATE
			  UNION
			  SELECT AWB.AWB_NO, AWB.AWB_DATE,
			  SPL_CODE1, SPL_CODE2, SPL_CODE3, SPL_CODE4, SPL_CODE5, SPL_CODE6, SPL_CODE7, SPL_CODE8, SPL_CODE9
			  FROM IMP_CAR_AWB AWB
			  JOIN PMAN_INIT PMAN
			  ON PMAN.AWB_NO = AWB.AWB_NO AND PMAN.AWB_DATE = AWB.AWB_DATE						
			),
			AWB_SHC AS (
			  SELECT AWB_NO, AWB_DATE, 
			  CASE
			  WHEN 'ECC' IN(SPL_CODE1, SPL_CODE2, SPL_CODE3, SPL_CODE4, SPL_CODE5, SPL_CODE6, SPL_CODE7, SPL_CODE8, SPL_CODE9) THEN 'Y'
		      ELSE 'N'
			  END ECC,
			  CASE
			  WHEN 'EAW' IN(SPL_CODE1, SPL_CODE2, SPL_CODE3, SPL_CODE4, SPL_CODE5, SPL_CODE6, SPL_CODE7, SPL_CODE8, SPL_CODE9) THEN 'Y'
			  ELSE 'N'
			  END EAW,
			  CASE
			  WHEN 'EAP' IN(SPL_CODE1, SPL_CODE2, SPL_CODE3, SPL_CODE4, SPL_CODE5, SPL_CODE6, SPL_CODE7, SPL_CODE8, SPL_CODE9) THEN 'Y'
			  ELSE 'N'
			  END EAP,
			  CASE
			  WHEN (
			  	SELECT DECODE(COUNT(1), 0, 'N', 'Y')
			    FROM SHC_MASTER 
			     WHERE CODE IN(SPL_CODE1, SPL_CODE2, SPL_CODE3, SPL_CODE4, SPL_CODE5, SPL_CODE6, SPL_CODE7, SPL_CODE8, SPL_CODE9)
			    ) = 'Y' THEN 'Y'
			  ELSE 'N'
			  END SHC_INDICATOR
			  FROM AWB_FULL
			),
	        AWB_SHC_FINAL AS (
	          SELECT
	          AWB.AWB_NO, AWB.AWB_DATE,
	          INSTR(STRAGG(STRINGDELIM(EAP, ';')), 'Y') EAP,
	          INSTR(STRAGG(STRINGDELIM(EAW, ';')), 'Y') EAW,
	          INSTR(STRAGG(STRINGDELIM(ECC, ';')), 'Y') ECC,
	          INSTR(STRAGG(STRINGDELIM(SHC_INDICATOR, ';')), 'Y') SHC_INDICATOR
	          FROM AWB_SHC AWB
	          GROUP BY AWB.AWB_NO, AWB.AWB_DATE
	        ),
			PMAN AS (
		      SELECT
		      AWB.AWB_NO, AWB.AWB_DATE, PMAN.AWB_CARR_GROUP,
		      PMAN.FLT_KEY, PMAN.FLT_DATE,
		      PMAN.PMAN_PCS, PMAN.PMAN_WT, PMAN.UNLDG_PT,
			  PMAN.PRINT, PMAN.DIRECT_SHIPPER, PMAN.TRANSIT,	      
		      DECODE(EAP, 0, 'N', 'Y') EAP,
		      DECODE(ECC, 0, 'N', 'Y') ECC,
		      DECODE(EAW, 0, 'N', 'Y') EAW,
		      DECODE(SHC_INDICATOR, 0, 'N', 'Y') SHC_INDICATOR
		      FROM AWB_SHC_FINAL AWB
		      JOIN PMAN_INIT PMAN
		      ON AWB.AWB_NO = PMAN.AWB_NO AND AWB.AWB_DATE = PMAN.AWB_DATE
			),
			FINAL AS (	
				SELECT PMAN.AWB_NO, PMAN.AWB_NO awbNo, PMAN.AWB_DATE, TO_CHAR(PMAN.AWB_DATE, 'DDMONYY') awbDate, 
				PMAN.UNLDG_PT unldgPt,
				(
				  SELECT CODE_DESC FROM CODE
				  WHERE CODE = (
		            CASE
		            WHEN POUCH.POUCH_UPLIFT_STATUS IN('TOUPLIFT', 'UPLIFTED') 
		              AND (
		              	PMAN.FLT_KEY <> POUCH.POUCH_FLT_KEY OR PMAN.FLT_DATE <> POUCH.POUCH_FLT_DATE OR PMAN.UNLDG_PT <> POUCH.POUCH_DESTINATION
		              ) THEN 'NOTUPLIFTED'
		            WHEN POUCH.POUCH_UPLIFT_STATUS IS NOT NULL THEN POUCH.POUCH_UPLIFT_STATUS
		            ELSE
		              CASE
                    	WHEN PMAN.SHC_INDICATOR = 'Y' THEN 'NOTUPLIFTED'
                    	WHEN PMAN.AWB_CARR_GROUP <> 'CX' AND (
		                	  	SELECT FUN_GET_PARENT_CARR(MAX(OPR.CARR_CODE)) 
		                	  	FROM FLT_OPR OPR WHERE OPR.FLT_KEY = PMAN.FLT_KEY AND OPR.SCH_DATE = PMAN.FLT_DATE
		                	) = 'CX' THEN 'NOTUPLIFTED'		              
		                WHEN PMAN.DIRECT_SHIPPER = 'Y' THEN 'NOTUPLIFTED'
		                WHEN PMAN.TRANSIT = 'Y' THEN
		                CASE
		                  WHEN PMAN.PRINT = 'Y' THEN 'NOTUPLIFTED'
		                  ELSE
		                    CASE
		                      WHEN PMAN.EAP = 'N' AND PMAN.EAW = 'N' AND PMAN.ECC = 'N' THEN 'NOTUPLIFTED'
		                      WHEN PMAN.EAP = 'Y' THEN 'NOTUPLIFTED'
		                      WHEN PMAN.EAW = 'Y' THEN 'NOTREQUIRED'
		                      ELSE 'NOTREQUIRED'
		                    END
		                END
		                WHEN PMAN.TRANSIT = 'N' THEN
		                  CASE
		                    WHEN PMAN.EAP = 'Y' THEN 'NOTUPLIFTED'
		                    ELSE 'NOTREQUIRED'
		                  END             
		              END
		            END
		          )
				) pouchUpliftStatus				
				FROM PMAN
				JOIN AWB
				ON PMAN.AWB_NO = AWB.AWB_NO AND PMAN.AWB_DATE = AWB.AWB_DATE
				LEFT OUTER JOIN AWB_POUCH POUCH
				ON PMAN.AWB_NO = POUCH.AWB_NO AND PMAN.AWB_DATE = POUCH.AWB_DATE
				WHERE pman.awb_no=#awbNo# and pman.awb_date=#awbDate#
			)
       ]]>
		<![CDATA[
			SELECT * FROM FINAL
			WHERE AWB_NO=#awbNo# AND AWB_DATE=#awbDate# AND ROWNUM=1
		]]>
       </select>
	 <select id="fetchNewAWBEnqExportDetailsForFBL" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO" resultClass="cargo.cms.awb.bo.AWBEnquiryBO">
       SELECT A.AWB_NO                                    AS awbNo,
       substr(A.AWB_NO,1,3)||'-'||substr(A.AWB_NO,4) awbNoDisplay,
			 SUBSTR( A.AWB_NO,1,3 )                           AS awbNoPFX,
			 SUBSTR( A.AWB_NO,4 )                             AS awbNoSFX,
			 decode(A.ORG,'HKG','E','T')                      AS awbType,
			 NVL(A.PCS,0)                       AS awbPcs,
			 trim(TO_CHAR(NVL(A.NET_WT,0),'999999999990.00'))          AS awbWt,
       TO_CHAR( A.AWB_DATE, 'DDMONYY')                  AS awbDate,
			 ''                                    AS agentCode,
			 A.SPL_CODE1 AS splCode1,
				  A.SPL_CODE2 AS splCode2,
				  A.SPL_CODE3 AS splCode3,
				  A.SPL_CODE4 AS splCode4,
				  A.SPL_CODE5 AS splCode5,
				  A.SPL_CODE6 AS splCode6,
				  A.SPL_CODE7 AS splCode7,
				  A.SPL_CODE8 AS splCode8,
				  A.SPL_CODE9 AS splCode9,
				  A.ORG                                           AS awbOrigin,
	        'N' as constrained,
					'' as latestCc,
				  ''         AS osCharge,
				  A.DEST    AS awbDest,
				  A.CNT AS content,
				  '' AS airlRmk,
				  '' AS oldAirlRmk,
				  (SELECT SEQ_NO
				  FROM awb_rmk
				  WHERE awb_no=#awbNo#
				  AND rownum  =1
				  ) AS seqNo,
				  '' AS whRmk,
				  ''                            AS oldWHRmk,
				  ''                                        AS consignee,
				  ''                                        AS consigneAddr,
				  ''                                      AS consigneAddr2,
				  ''                                       AS consigneAddr3,
				  ''                                       AS consigneAddr4,
				  '' AS consCity,
				 ''            AS consCountry,
				  ''  AS shipperName,
				  ''  AS shipperAddr1,
				  '' AS shipperAddr2,
				  '' AS shipperAddr3,
				  '' AS shipperAddr4,
				  ''                                                 AS shprCountry,
				  '' AS shprCity,
				  ''                                     AS appiontedAgent,
				  ''                                AS agentAddr,
				  ''                                AS agentAddr1,
				  ''                                AS agentAddr2,
				  ''                                AS agentAddr3,
				  ''                                AS agentAddr4,
				  ''          AS lmDate,
				  '' shipperState,
				  '' consigneeState
				FROM EDI_FBL_SHP A, EDI_FBL B
   WHERE
       A.TR_NO 	= B.TR_NO
		AND 	 A.AWB_NO 	=  #awbNo#  and B.FBL_STATUS = 'P' and A.tr_no = (select max(tr_no) from EDI_FBL_SHP where AWB_NO =  #awbNo#)
       </select>
       <select id="fetchNewAWBEnqExportDetailsForPOUCH" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO" resultClass="cargo.cms.awb.bo.AWBEnquiryBO">
       SELECT A.AWB_NO AS awbNo,
  SUBSTR(A.AWB_NO,1,3)
  ||'-'
  ||SUBSTR(A.AWB_NO,4) awbNoDisplay,
  SUBSTR( A.AWB_NO,1,3 )          AS awbNoPFX,
  SUBSTR( A.AWB_NO,4 )            AS awbNoSFX,
  ''                              AS awbType,
  ''                              AS awbPcs,
  ''                              AS awbWt,
  TO_CHAR( A.AWB_DATE, 'DDMONYY') AS awbDate,
  ''                              AS agentCode,
  ''                              AS splCode1,
  ''                              AS splCode2,
  ''                              AS splCode3,
  ''                              AS splCode4,
  ''                              AS splCode5,
  ''                              AS splCode6,
  ''                              AS splCode7,
  ''                              AS splCode8,
  ''                              AS splCode9,
  ''                              AS awbOrigin,
  'N'                             AS constrained,
  ''                              AS latestCc,
  ''                              AS osCharge,
  ''                              AS awbDest,
  ''                              AS content,
  ''                              AS airlRmk,
  ''                              AS oldAirlRmk,
  ''                              AS seqNo,
  ''                              AS whRmk,
  ''                              AS oldWHRmk,
  ''                              AS consignee,
  ''                              AS consigneAddr,
  ''                              AS consigneAddr2,
  ''                              AS consigneAddr3,
  ''                              AS consigneAddr4,
  ''                              AS consCity,
  ''                              AS consCountry,
  ''                              AS shipperName,
  ''                              AS shipperAddr1,
  ''                              AS shipperAddr2,
  ''                              AS shipperAddr3,
  ''                              AS shipperAddr4,
  ''                              AS shprCountry,
  ''                              AS shprCity,
  ''                              AS appiontedAgent,
  ''                              AS agentAddr,
  ''                              AS agentAddr1,
  ''                              AS agentAddr2,
  ''                              AS agentAddr3,
  ''                              AS agentAddr4,
  ''                              AS lmDate,
  '' shipperState,
  '' consigneeState,
  (SELECT
			TO_CHAR(AWB_SCAN_TIME, 'DDMONYY HH24:MI')
			FROM AWB_POUCH C
			WHERE C.AWB_NO = A.AWB_NO AND C.AWB_DATE=A.AWB_DATE) AS awbReceiveTime,
  (SELECT
			TO_CHAR(POUCH_SCAN_TIME, 'DDMONYY HH24:MI')
			FROM AWB_POUCH C
			WHERE C.AWB_NO = A.AWB_NO AND C.AWB_DATE=A.AWB_DATE) AS pouchReceiveTime
FROM AWB_POUCH A
WHERE A.AWB_NO = #awbNo# AND ROWNUM=1
       </select>
        <!-- New AWB Enquiry Queries end -->
    <select id="fetchCompanyCount" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		SELECT COUNT(*)	FROM CUST_ADDRESS_BOOK a,CUST_COMPANY b WHERE b.code=a.agent_id AND b.ACTIVE = 'Y' and a.CUSTOMER_NAME LIKE UPPER(#COMP_NAME#||'%') and b.CODE_DESC LIKE UPPER(#AGENT_ID#||'%')	 and b.CO_IATA_CODE LIKE UPPER(#IATA_CODE#||'%')	
	</select>		
		<!-- fix for 12295, 12292. Sanket 05AUG14 -->
	<select id="fetchAWBCarrCode" parameterClass="cargo.cms.common.bo.StdAwbBO" resultClass="java.lang.String">
	select carr_code 
	from awb
	where awb_no = #awbNo# and awb_date = #awbDate#
	</select>	
	 <!--To Fetch Export AWB Count for Access(external User) -->
	<select id="sqlFetchDimensionDetailsByRCLNO" parameterClass="java.lang.String" resultClass="cargo.cms.awb.bo.AWBEnquiryBO">
     	SELECT A.RCL_NO AS rclNum,
 	 	A.DOC_LINE_NO AS docLineNum,
  		A.LENGTH      AS LENGTH,
  		A.WIDTH       AS width,
  		A.HEIGHT      AS height,
  		A.PCS         AS pieces,
  		A.REMARKS     AS remarks
		FROM EXP_RCL_DMN A,
		 	 EXP_RCL_HD B
		WHERE B.RCL_NO  =A.RCL_NO AND B.STATUS NOT IN ('V','R') AND A.RCL_NO = #PARAM#
        </select>
	
	<select id="getAwbNoByMailTagNo" parameterClass="java.lang.String" resultClass="java.lang.String">
		select awb_no from IMP_XPS_OBC_MAIL where SCAN_TAG_NO = #mailTag#
		UNION
		SELECT AWB_NO FROM AWB AWB WHERE (AWB_NO,AWB_DATE) IN 
		(SELECT AWB_NO,AWB_DATE FROM EDI_CARDIT_HD WHERE TR_NO=(SELECT TR_NO FROM EDI_CARDIT_TAG_DTL WHERE TAG_NO=#mailTag#)) AND AWB.AWB_CLOSED_YN = 'N' AND rownum = 1
		AND NOT EXISTS (SELECT NULL FROM IMP_XPS_OBC_MAIL WHERE SCAN_TAG_NO = #mailTag#)
	</select>

	<select id="getTr_noList"  resultClass="cargo.cms.awb.bo.AwbULDShcBO" parameterClass = "cargo.cms.awb.bo.AwbULDShcBO"> 
    	select  tr_no as trNo , ULD_BT_NO as uldNo , AWB_NO as awbNo, 
			(select sum(pcs) from exp_pmanifest_uld_awb_shc  shc where shc.tr_no = awb.tr_no and NVL(shc.BULK_ULD_YN,'N') = 'Y') AS assignPcs
		from exp_pmanifest_uld_awb awb  
		where awb.awb_no = #awbNo# and 
		awb.flt_key = #fltKey# and awb.flt_date = to_date(#fltDate#,'DDMONYY') 
    	
    </select>
<select id="getUldShcSplitList"  resultClass="cargo.cms.awb.bo.AwbULDShcBO" parameterClass = "cargo.cms.awb.bo.AwbULDShcBO"> 
    	SELECT 
      	  shc.SHC as shc1,
		  shc.SHC2 as shc2,
		  shc.SHC3 as shc3,
		  shc.SHC4 as shc4,
		  shc.SHC5 as shc5,
		  shc.SHC6 as shc6,
		  shc.SHC7 as shc7,
		  shc.SHC8 as shc8,
		  shc.SHC9 as shc9,
		  shc.PCS  as pcs,
		  REMARKS as remarks
		FROM 
		exp_pmanifest_uld_awb_shc shc
		WHERE shc.tr_no      = #trNo#
		AND NVL(shc.BULK_ULD_YN,'N') = 'Y'
    	
    </select>

	<!-- AWB Re-dimension -->
	<!-- AWB Re-dimension -->
	<select id="sqlGetAWBDimensions" parameterClass="java.util.Map"
		resultClass="cargo.cms.awb.bo.AWBInvBO">
		<![CDATA[
			SELECT
			AWB_NO awbNo, AWB_DATE awbDate, TR_NO trNo,
			PRE_PIECES pc, PRE_LENGTH length, PRE_WIDTH width, PRE_HEIGHT height, (
				SELECT DECODE(COUNT(1), 0, 'N', 'Y')
			  	FROM ITM_TRK_FLT FLT
			  	JOIN CDT_AWB AWB
			  	ON FLT.TRUCK_FLT_NO = AWB.TRK_FLT_KEY AND FLT.TRUCK_FLT_DATE = AWB.TRK_FLT_DATE
			  	WHERE AWB.AWB_NO = DIM.AWB_NO AND AWB.AWB_DATE = DIM.AWB_DATE AND NVL(FLT.POST_YN, 'N') = 'Y'
			) posted
			FROM AWB_DIMENSION DIM
			WHERE DIM.AWB_NO = #AWB_NO# AND DIM.AWB_DATE = TO_DATE(#AWB_DATE#, 'DDMONYY')
			ORDER BY TR_NO
		]]>
	</select>
	<select id="sqlGetIsAWBTruckFlightPosted" parameterClass="java.util.Map" resultClass="java.lang.String">
		<![CDATA[
			SELECT DECODE(COUNT(1), 0, 'N', 'Y')
		  	FROM ITM_TRK_FLT FLT
		  	JOIN CDT_AWB AWB
		  	ON FLT.TRUCK_FLT_NO = AWB.TRK_FLT_KEY AND FLT.TRUCK_FLT_DATE = AWB.TRK_FLT_DATE
		  	WHERE AWB.AWB_NO = #AWB_NO# AND AWB.AWB_DATE = TO_DATE(#AWB_DATE#, 'DDMONYY') AND NVL(FLT.POST_YN, 'N') = 'Y'
		]]>
	</select>	
	<insert id="sqlInsertAWBDimension" parameterClass="cargo.cms.awb.bo.AWBInvBO">
		<![CDATA[
			INSERT INTO AWB_DIMENSION (
			  AWB_NO, AWB_DATE, TR_NO,
			  PRE_PIECES, PRE_LENGTH, PRE_WIDTH, PRE_HEIGHT,
			  CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE
			) VALUES (
			  #awbNo#, TO_DATE(#awbDate#, 'DDMONYY'), AWB_DIMENSION_SEQ.NEXTVAL,
			  #pc#, #length#, #width#, #height#,
			  #userId#, SYSDATE, #userId#, SYSDATE
			)
		]]>
	</insert>
	<insert id="sqlInsertToCBXAWBDimension" parameterClass="cargo.cms.awb.bo.AWBInvBO">
		<![CDATA[
			INSERT INTO AWB_DIMENSION (
			  AWB_NO, AWB_DATE, TR_NO,
			  PRE_PIECES, PRE_LENGTH, PRE_WIDTH, PRE_HEIGHT,
			  PIECES, LENGTH, WIDTH, HEIGHT,
			  CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE
			) VALUES (
			  #awbNo#, TO_DATE(#awbDate#, 'DDMONYY'), AWB_DIMENSION_SEQ.NEXTVAL,
			  #pc#, #length#, #width#, #height#,
			  #pc#, #length#, #width#, #height#,
			  #userId#, SYSDATE, #userId#, SYSDATE
			)
		]]>
	</insert>
	<update id="sqlUpdateMarkAWBDimensionAsInvalid" parameterClass="java.util.Map">
		<![CDATA[
			UPDATE AWB_DIMENSION
			SET VALID_YN = 'N', LM_USER_ID = #USER_ID#, LM_DATE = SYSDATE
			WHERE AWB_NO = #AWB_NO# AND AWB_DATE = TO_DATE(#AWB_DATE#, 'DDMONYY')
		]]>
	</update>
	<update id="sqlUpdatePreAWBDimension" parameterClass="java.util.Map">
		<![CDATA[
			UPDATE AWB_DIMENSION
			SET VALID_YN = 'Y',
			PRE_PIECES = #PIECES#, PRE_LENGTH = #LENGTH#, PRE_WIDTH = #WIDTH#, PRE_HEIGHT = #HEIGHT#,
			LM_USER_ID = #USER_ID#, LM_DATE = SYSDATE
			WHERE TR_NO = #TR_NO#
		]]>
	</update>
	<update id="sqlUpdateCBXAWBDimension" parameterClass="java.util.Map">
		<![CDATA[
			UPDATE AWB_DIMENSION
			SET VALID_YN = 'Y',
			PIECES = #PIECES#, LENGTH = #LENGTH#, WIDTH = #WIDTH#, HEIGHT = #HEIGHT#,
			LM_USER_ID = #USER_ID#, LM_DATE = SYSDATE
			WHERE TR_NO = #TR_NO#
		]]>
	</update>	
	<delete id="sqlDeleteInvalidAWBDimension" parameterClass="java.util.Map">
		<![CDATA[
			DELETE FROM AWB_DIMENSION
			WHERE AWB_NO = #AWB_NO# AND AWB_DATE = TO_DATE(#AWB_DATE#, 'DDMONYY') AND VALID_YN = 'N'
		]]>
	</delete>
	<update id="sqlUpdateAWBCBXPreWeight" parameterClass="java.util.Map">
		<![CDATA[
			UPDATE AWB
			SET CBX_PRE_WT = #WEIGHT#,
			LM_DATE = SYSDATE, LM_USER_ID = #USER_ID# 
			WHERE AWB_NO = #AWB_NO# AND AWB_DATE = TO_DATE(#AWB_DATE#, 'DDMONYY')
		]]>
	</update>
<update id="sqlUpdateAWBCBXReWeight" parameterClass="java.util.Map">
		<![CDATA[
			UPDATE AWB
			SET CBX_WT = #WEIGHT#, TR_TYPE = 'AWDIMW',
			LM_DATE = SYSDATE, LM_USER_ID = #USER_ID# 
			WHERE AWB_NO = #AWB_NO# AND AWB_DATE = TO_DATE(#AWB_DATE#, 'DDMONYY')
		]]>
	</update>	
	<update id="sqlUpdateAWBDimensionWeight" parameterClass="java.util.Map">
		<![CDATA[
			UPDATE CDT_AWB
			SET AWB_WT = #WEIGHT#, LM_DATE = SYSDATE, LM_USER_ID = #USER_ID# 
			WHERE AWB_NO = #AWB_NO# AND AWB_DATE = TO_DATE(#AWB_DATE#, 'DDMONYY')
		]]>
	</update>
	<update id="sqlUpdateAWBWeight" parameterClass="java.util.Map">
		<![CDATA[
			UPDATE AWB
			SET WT = #WEIGHT#, TR_TYPE = 'AWDIMW',
			LM_DATE = SYSDATE, LM_USER_ID = #USER_ID# 
			WHERE AWB_NO = #AWB_NO# AND AWB_DATE = TO_DATE(#AWB_DATE#, 'DDMONYY')
		]]>
	</update>
	<update id="sqlUpdateAWBInventoryWeight" parameterClass="java.util.Map">
		<![CDATA[
			UPDATE AWB_INVENTORY
			SET LOCN_WT = #WEIGHT#,
			LM_DATE = SYSDATE, LM_USER_ID = #USER_ID# 
			WHERE AWB_NO = #AWB_NO# AND AWB_DATE = TO_DATE(#AWB_DATE#, 'DDMONYY')
		]]>
	</update>
	<update id="sqlUpdateAWBCBMInCBX" parameterClass="java.util.Map">
		<![CDATA[
			UPDATE CDT_AWB
			SET VOL = #CBM#, VOL_WT = #VOLUME_WEIGHT#,
			LM_DATE = SYSDATE, LM_USER_ID = #USER_ID# 
			WHERE AWB_NO = #AWB_NO# AND AWB_DATE = TO_DATE(#AWB_DATE#, 'DDMONYY')
		]]>
	</update>
	<update id="sqlUpdateHAWBCBMInCBX" parameterClass="java.util.Map">
		<![CDATA[
			UPDATE CDT_HAWB HAWB
			SET VOL = (
				SELECT SUM(VOL) / SUM(AWB_PCS) FROM CDT_AWB AWB WHERE AWB.TR_NO = HAWB.TR_NO
			) * NVL(HAWB_PCS, 0), 
			LM_DATE = SYSDATE, LM_USER_ID = #USER_ID# 
			WHERE TR_NO IN (
				SELECT TR_NO FROM CDT_AWB WHERE AWB_NO = #AWB_NO# AND AWB_DATE = TO_DATE(#AWB_DATE#, 'DDMONYY')
			)
		]]>
	</update>
	<select id="sqlGetCBXAWBReWeight" parameterClass="java.util.Map" resultClass="java.lang.String">
		<![CDATA[
			SELECT NVL(CBX_PRE_WT, WT)
		  	FROM AWB
		  	WHERE AWB_NO = #AWB_NO# AND AWB_DATE = TO_DATE(#AWB_DATE#, 'DDMONYY')
		]]>
	</select>
	<select id="sqlGetIsCBXAWB" parameterClass="java.util.Map" resultClass="java.lang.String">
		<![CDATA[
			SELECT DECODE(COUNT(1), 0, 'N', 'Y')
		  	FROM AWB
		  	WHERE AWB_NO = #AWB_NO# AND AWB_DATE = TO_DATE(#AWB_DATE#, 'DDMONYY')
		  	AND 'CBX' IN(SPL_CODE1, SPL_CODE2, SPL_CODE3, SPL_CODE4, SPL_CODE5, SPL_CODE6, SPL_CODE7, SPL_CODE8, SPL_CODE9)
		]]>
	</select>
<select id="sqlAWBEnqpopupDimension" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO" resultClass="cargo.cms.awb.bo.AWBEnquiryBO">
		<![CDATA[
	select HD.rcl_no as rclNo,(A.SPL_CODE1 || DECODE(A.SPL_CODE2 ,null,'',DECODE(A.SPL_CODE1,NULL,'',',')) ||
                                         A.SPL_CODE2 || DECODE(A.SPL_CODE3 ,null,'',DECODE(A.SPL_CODE2,NULL,'',',')) || 
                                         A.SPL_CODE3 || DECODE(A.SPL_CODE4 ,null,'',DECODE(A.SPL_CODE3,NULL,'',',')) || 
                                         A.SPL_CODE4 || DECODE(A.SPL_CODE5 ,null,'',DECODE(A.SPL_CODE4,NULL,'',',')) || 
                                         A.SPL_CODE5 || DECODE(A.SPL_CODE6 ,null,'',DECODE(A.SPL_CODE5,NULL,'',',')) ||   
                                         A.SPL_CODE6 || DECODE(A.SPL_CODE7 ,null,'',DECODE(A.SPL_CODE6,NULL,'',',')) || 
                                         A.SPL_CODE7 || DECODE(A.SPL_CODE8 ,null,'',DECODE(A.SPL_CODE7,NULL,'',',')) ||  
                                         A.SPL_CODE8 || DECODE(A.SPL_CODE9 ,null,'',DECODE(A.SPL_CODE8,NULL,'',',')) ||  
                                         A.SPL_CODE9) AS shc 
from exp_rcl_hd HD , AWB A where HD.AWB_NO=A.AWB_NO AND  HD.awb_no= #awbNo#  and HD.awb_date=TO_DATE(#awbDate#, 'DDMONYY')
and hd.vcl_no is null AND HD.STATUS NOT IN ('V','R')
union 
select HD.TRF_NO as rclNo,(A.SPL_CODE1 || DECODE(A.SPL_CODE2 ,null,'',DECODE(A.SPL_CODE1,NULL,'',',')) ||
                                         A.SPL_CODE2 || DECODE(A.SPL_CODE3 ,null,'',DECODE(A.SPL_CODE2,NULL,'',',')) || 
                                         A.SPL_CODE3 || DECODE(A.SPL_CODE4 ,null,'',DECODE(A.SPL_CODE3,NULL,'',',')) || 
                                         A.SPL_CODE4 || DECODE(A.SPL_CODE5 ,null,'',DECODE(A.SPL_CODE4,NULL,'',',')) || 
                                         A.SPL_CODE5 || DECODE(A.SPL_CODE6 ,null,'',DECODE(A.SPL_CODE5,NULL,'',',')) ||   
                                         A.SPL_CODE6 || DECODE(A.SPL_CODE7 ,null,'',DECODE(A.SPL_CODE6,NULL,'',',')) || 
                                         A.SPL_CODE7 || DECODE(A.SPL_CODE8 ,null,'',DECODE(A.SPL_CODE7,NULL,'',',')) ||  
                                         A.SPL_CODE8 || DECODE(A.SPL_CODE9 ,null,'',DECODE(A.SPL_CODE8,NULL,'',',')) ||  
                                         A.SPL_CODE9) AS shc 
from trf_accept_hd HD , AWB A where HD.AWB_NO=A.AWB_NO AND  HD.awb_no= #awbNo#  and HD.awb_date=TO_DATE(#awbDate#, 'DDMONYY')
and hd.vcl_no is null AND HD.STATUS NOT IN ('V','R')  
order by rclNo		
		]]>
	</select>
	<select id="sqlAWBEnqpopupDimensionvclexists" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO" resultClass="cargo.cms.awb.bo.AWBEnquiryBO">
		<![CDATA[
	select HD.VCL_NO as rclNo,(A.SPL_CODE1 || DECODE(A.SPL_CODE2 ,null,'',DECODE(A.SPL_CODE1,NULL,'',',')) ||
                                         A.SPL_CODE2 || DECODE(A.SPL_CODE3 ,null,'',DECODE(A.SPL_CODE2,NULL,'',',')) || 
                                         A.SPL_CODE3 || DECODE(A.SPL_CODE4 ,null,'',DECODE(A.SPL_CODE3,NULL,'',',')) || 
                                         A.SPL_CODE4 || DECODE(A.SPL_CODE5 ,null,'',DECODE(A.SPL_CODE4,NULL,'',',')) || 
                                         A.SPL_CODE5 || DECODE(A.SPL_CODE6 ,null,'',DECODE(A.SPL_CODE5,NULL,'',',')) ||   
                                         A.SPL_CODE6 || DECODE(A.SPL_CODE7 ,null,'',DECODE(A.SPL_CODE6,NULL,'',',')) || 
                                         A.SPL_CODE7 || DECODE(A.SPL_CODE8 ,null,'',DECODE(A.SPL_CODE7,NULL,'',',')) ||  
                                         A.SPL_CODE8 || DECODE(A.SPL_CODE9 ,null,'',DECODE(A.SPL_CODE8,NULL,'',',')) ||  
                                         A.SPL_CODE9) AS shc 
from VAL_VCL_HD HD , AWB A where HD.AWB_NO=A.AWB_NO AND  HD.awb_no=#awbNo#   and HD.awb_date=TO_DATE(#awbDate#, 'DDMONYY')
and NVL(hd.vcl_no,HD.VCL_NO) is not null AND HD.VOID_USER_ID IS NULL AND HD.VOID_DATE IS NULL
union
select HD.rcl_no as rclNo,(A.SPL_CODE1 || DECODE(A.SPL_CODE2 ,null,'',DECODE(A.SPL_CODE1,NULL,'',',')) ||
                                         A.SPL_CODE2 || DECODE(A.SPL_CODE3 ,null,'',DECODE(A.SPL_CODE2,NULL,'',',')) || 
                                         A.SPL_CODE3 || DECODE(A.SPL_CODE4 ,null,'',DECODE(A.SPL_CODE3,NULL,'',',')) || 
                                         A.SPL_CODE4 || DECODE(A.SPL_CODE5 ,null,'',DECODE(A.SPL_CODE4,NULL,'',',')) || 
                                         A.SPL_CODE5 || DECODE(A.SPL_CODE6 ,null,'',DECODE(A.SPL_CODE5,NULL,'',',')) ||   
                                         A.SPL_CODE6 || DECODE(A.SPL_CODE7 ,null,'',DECODE(A.SPL_CODE6,NULL,'',',')) || 
                                         A.SPL_CODE7 || DECODE(A.SPL_CODE8 ,null,'',DECODE(A.SPL_CODE7,NULL,'',',')) ||  
                                         A.SPL_CODE8 || DECODE(A.SPL_CODE9 ,null,'',DECODE(A.SPL_CODE8,NULL,'',',')) ||  
                                         A.SPL_CODE9) AS shc 
from exp_rcl_hd HD , AWB A where HD.AWB_NO=A.AWB_NO AND  HD.awb_no=#awbNo#   and HD.awb_date=TO_DATE(#awbDate#, 'DDMONYY')
 AND HD.STATUS NOT IN ('V','R') and hd.vcl_no is not null
union 
select HD.vcl_no as rclNo,(A.SPL_CODE1 || DECODE(A.SPL_CODE2 ,null,'',DECODE(A.SPL_CODE1,NULL,'',',')) ||
                                         A.SPL_CODE2 || DECODE(A.SPL_CODE3 ,null,'',DECODE(A.SPL_CODE2,NULL,'',',')) || 
                                         A.SPL_CODE3 || DECODE(A.SPL_CODE4 ,null,'',DECODE(A.SPL_CODE3,NULL,'',',')) || 
                                         A.SPL_CODE4 || DECODE(A.SPL_CODE5 ,null,'',DECODE(A.SPL_CODE4,NULL,'',',')) || 
                                         A.SPL_CODE5 || DECODE(A.SPL_CODE6 ,null,'',DECODE(A.SPL_CODE5,NULL,'',',')) ||   
                                         A.SPL_CODE6 || DECODE(A.SPL_CODE7 ,null,'',DECODE(A.SPL_CODE6,NULL,'',',')) || 
                                         A.SPL_CODE7 || DECODE(A.SPL_CODE8 ,null,'',DECODE(A.SPL_CODE7,NULL,'',',')) ||  
                                         A.SPL_CODE8 || DECODE(A.SPL_CODE9 ,null,'',DECODE(A.SPL_CODE8,NULL,'',',')) ||  
                                         a.SPL_CODE9) as SHC 
from trf_accept_hd HD , AWB A where HD.AWB_NO=A.AWB_NO AND  HD.awb_no=#awbNo#   and HD.awb_date=TO_DATE(#awbDate#, 'DDMONYY')
 AND HD.STATUS NOT IN ('V','R')  and hd.vcl_no is not null

order by RCLNO    	
		]]>
	</select>
	<select id="sqlAWBEnqpopupDimensionvcl" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO" resultClass="cargo.cms.awb.bo.AWBEnquiryBO">
		<![CDATA[
select HD.VCL_NO as rclNo,(A.SPL_CODE1 || DECODE(A.SPL_CODE2 ,null,'',DECODE(A.SPL_CODE1,NULL,'',',')) ||
                                         A.SPL_CODE2 || DECODE(A.SPL_CODE3 ,null,'',DECODE(A.SPL_CODE2,NULL,'',',')) || 
                                         A.SPL_CODE3 || DECODE(A.SPL_CODE4 ,null,'',DECODE(A.SPL_CODE3,NULL,'',',')) || 
                                         A.SPL_CODE4 || DECODE(A.SPL_CODE5 ,null,'',DECODE(A.SPL_CODE4,NULL,'',',')) || 
                                         A.SPL_CODE5 || DECODE(A.SPL_CODE6 ,null,'',DECODE(A.SPL_CODE5,NULL,'',',')) ||   
                                         A.SPL_CODE6 || DECODE(A.SPL_CODE7 ,null,'',DECODE(A.SPL_CODE6,NULL,'',',')) || 
                                         A.SPL_CODE7 || DECODE(A.SPL_CODE8 ,null,'',DECODE(A.SPL_CODE7,NULL,'',',')) ||  
                                         A.SPL_CODE8 || DECODE(A.SPL_CODE9 ,null,'',DECODE(A.SPL_CODE8,NULL,'',',')) ||  
                                         A.SPL_CODE9) AS shc 
from VAL_VCL_HD HD , AWB A where HD.AWB_NO=A.AWB_NO AND  HD.awb_no= #awbNo#  and HD.awb_date=TO_DATE(#awbDate#, 'DDMONYY')
and NVL(hd.vcl_no,HD.VCL_NO) is not null AND HD.VOID_USER_ID IS NULL AND HD.VOID_DATE IS NULL
order by rclNo		
		]]>
	</select>
	<select id="sqlGetAWBEnquiryTruckFlightDetails" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO" resultClass="cargo.cms.awb.bo.AWBEnquiryBO">
		<![CDATA[
	    	SELECT
	    	PMAN.TRK_FLT_KEY trkFltKey, TO_CHAR(PMAN.TRK_FLT_DATE, 'DDMONYY') trkFltDate,       
	        DECODE(PKG_COMMON.get_itfs_flt_ata(
	        	PMAN.ITFS_FLT_KEY, PMAN.ITFS_FLT_DATE, 'A'), '', (SUBSTR(TRIM(TO_CHAR(NVL(TRKFLT.SCH_TIME, 0), '0000')), 0, 2)
	        		|| ':' || SUBSTR(TRIM(TO_CHAR(NVL(TRKFLT.SCH_TIME, 0), '0000')), 3, 4
	        )),
	        PKG_COMMON.get_itfs_flt_ata(PMAN.ITFS_FLT_KEY, PMAN.ITFS_FLT_DATE, 'A')) schTime,
	        PMAN.TRK_FLT_KEY truckNo, 
	        PMAN.UNLDG_PT unldgPt, 
	        TRKFLT.OPERATOR operator,       
	        PMAN.PMAN_PCS trkMnfPcs, PMAN.PMAN_WT trkMnfWt        
			FROM CDT_PMAN_AWB PMAN
			JOIN ITM_TRK_FLT TRKFLT
			ON TRKFLT.TRUCK_FLT_NO = PMAN.TRK_FLT_KEY AND TRKFLT.TRUCK_FLT_DATE	= PMAN.TRK_FLT_DATE
			WHERE PMAN.AWB_NO = #awbNo# AND PMAN.AWB_DATE = #awbDate#
		]]>
	</select>
	<select id="sqlGetSHCUpliftPriorityForCarrierListCombi" parameterClass="java.lang.String"
		resultClass="cargo.cms.common.admin.bo.SHCUpliftPriority">
		<![CDATA[
	    	SELECT
	    	CARR_CODE carrCode, DOC_LINE_NO docLineNo,
	    	SHC1 shc1, SHC2 shc2, SHC3 shc3, SHC4 shc4,
	    	SHC5 shc5, SHC6 shc6, SHC7 shc7, SHC8 shc8, SHC9 shc9,
	    	SHC_PRIORITY priority
	    	FROM MAST_CARR_SHC_UPLIFT_PRIO
	    	WHERE CARR_CODE = #carrCode# AND SHC2 IS NOT NULL
	    	ORDER BY SHC_PRIORITY
		]]>
	</select>
	<!-- Customer Address -->
		<select id="sqlGetCustomerAddressList" parameterClass="java.util.Map"
		resultClass="cargo.cms.common.admin.bo.CustomerAddress">
		<![CDATA[
	    	SELECT
			TR_NO trNo, CUSTOMER_NAME customerName,
			ADDRESS_LINE1 addressLine1,	ADDRESS_LINE2 addressLine2,
			ADDRESS_LINE3 addressLine3, ADDRESS_LINE4 addressLine4,
			ADDRESS_LINE5 addressLine5,
			CITY cityCode, COUNTRY_CODE countryCode,
			STATE stateCode, PIN_CODE pinCode,
			CUSTOMER_CODE customerCode,
	    	TO_CHAR(LM_DATE, 'DDMONYY HH24:MI:SS') lastModifiedTime
	    	FROM CUST_ADDRESS
	    	WHERE CUSTOMER_NAME = #customerName#
		]]>
	</select>
	
	<select id="sqlGetCustomerAddressListfromcustcomp" parameterClass="java.util.Map"
		resultClass="cargo.cms.common.admin.bo.CustomerAddress">
		<![CDATA[
	    	SELECT
			code_desc customerName,
			add1 addressLine1,	add2 addressLine2,
			add3 addressLine3, add4 addressLine4,
			add5 addressLine5,
			CITY cityCode, CTRY_CODE countryCode,
			'' stateCode, PIN_CODE pinCode,
			code customerCode
	    	FROM cust_company
	    	WHERE code_desc = #customerName#
		]]>
	</select>
	
	<select id="sqlGetCustomerAddressListEMAN" parameterClass="java.util.Map"
		resultClass="cargo.cms.common.admin.bo.CustomerAddress">
		<![CDATA[
	    	SELECT
			TR_NO trNo, CUSTOMER_NAME customerName,
			ADDRESS_LINE1 addressLine1,	ADDRESS_LINE2 addressLine2,
			ADDRESS_LINE3 addressLine3, ADDRESS_LINE4 addressLine4,
			ADDRESS_LINE5 addressLine5,
			CITY cityCode, COUNTRY_CODE countryCode,
			STATE stateCode, PIN_CODE pinCode,
			CUSTOMER_CODE customerCode,
	    	TO_CHAR(LM_DATE, 'DDMONYY HH24:MI:SS') lastModifiedTime
	    	FROM CUST_ADDRESS
	    	WHERE CUSTOMER_NAME = #customerName# AND CUSTOMER_CODE IS NOT NULL
		]]>
	</select>
	
	<select id="sqlGetCustomerAddressTrNoForId" parameterClass="java.lang.String"
		resultClass="java.lang.String">
		<![CDATA[
	    	SELECT MAX(TR_NO) FROM CUST_ADDRESS WHERE CUSTOMER_CODE = #PARAM#
		]]>
	</select>
	<insert id="sqlInsertCustomerAddress" parameterClass="cargo.cms.common.admin.bo.CustomerAddress">
		<![CDATA[
	    	INSERT INTO CUST_ADDRESS (
	    		TR_NO, CUSTOMER_NAME,
				ADDRESS_LINE1, ADDRESS_LINE2, ADDRESS_LINE3, ADDRESS_LINE4, ADDRESS_LINE5,
				CITY, COUNTRY_CODE, STATE, PIN_CODE,
				CUSTOMER_CODE,
	    		CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE
	    	) VALUES (
	    		CUST_ADDRESS_SEQ.NEXTVAL, #customerName#,
	    		#addressLine1#, #addressLine2#, #addressLine3#, #addressLine4#, #addressLine5#,
	    		#cityCode#, #countryCode#, #stateCode#, #pinCode#,
	    		#customerCode#,
	    		#userID#, SYSDATE, #userID#, SYSDATE
	    	)
		]]>
	</insert>
	<update id="sqlUpdateCustomerAddress" parameterClass="cargo.cms.common.admin.bo.CustomerAddress">
		<![CDATA[
	    	UPDATE CUST_ADDRESS
	    	SET
    		CUSTOMER_NAME = #customerName#,
			ADDRESS_LINE1 = #addressLine1#, ADDRESS_LINE2 = #addressLine2#, 
			ADDRESS_LINE3 = #addressLine3#, ADDRESS_LINE4 = #addressLine4#, 
			ADDRESS_LINE5 = #addressLine5#,
			CITY = #cityCode#, COUNTRY_CODE = #countryCode#, STATE = #stateCode#, PIN_CODE = #pinCode#,
    		LM_USER_ID = #userID#, LM_DATE = SYSDATE
	    	WHERE TR_NO = #trNo#
		]]>
	</update>
	<update id="sqlUpdateCustomerAddressUsageTime" parameterClass="java.lang.String">
		<![CDATA[
	    	UPDATE CUST_ADDRESS SET LM_DATE = SYSDATE WHERE TR_NO = #PARAM#
		]]>
	</update>
	<select id="checkDuplicateUserExt" parameterClass="cargo.cms.external.admin.bo.AimsUserBO"  resultClass="java.lang.Integer">
		SELECT count(1) FROM SEC_USER where upper(code)=upper(#userId#)
	</select>
	<select id="sqlFetchShcStoreList" parameterClass="java.lang.String" resultClass="cargo.cms.afw.bo.MasterBO">
		select STORE_NAME AS codeId,DESCRIPTION AS codeDesc from MAST_SHC_STORE ORDER BY STORE_NAME
	</select>
	<update id="updateOffsiteEmptyULDSuperFunc" parameterClass="cargo.cms.admin.bo.SuperFunctionBO">
	UPDATE ULD_INVENTORY SET
                                FLT_NO = null,
                                FLT_TYPE = null,
                                FLT_DATE = null,
                                FLT_KEY = null,
                                DAM_IND='N',
                                CONTR_CODE = null,
                                owner_id=uld_carr,
    							PARENT_OWNER = uld_carr,
                                source_code='Others',
                                gen_rmk=null,
                                dam_rmk=null,
                                eic_flg='N',
                                empty_flg='Y',
                                tare_weight = 0,
                                gross_weight = 0,
                                STRG_DATE=sysdate,
                                PPK_IND='N',
                                LM_USER_ID=#userID#,
                                LM_DATE=sysdate,
                                AGENT_INV='N',
                                loc_code=null,
                                OWNED_INV='N',
                                CFM_STATUS='REMOVED',
                                AGENT_ID =null,
                                REF_TR_NO = ULD_TR_SEQ.NEXTVAL,
                                REF_DOC_LINE_NO = '1',
                                REF_TR_TYPE = 'EU',
                                REF_TR_DATE = SYSDATE,
                                REF_OUT_CARR = '',
                                REF_TR_EVENT = 'UPDATE',
                                REF_RMK = null,    
                                BASE_PLT     = null,
                                SER_IND='N',
                                RESV_DATE='',
                                RESV_RMK='',
                                RMV_RMK='',
    							resv_flg = 'N',
                                IMP_FLT_CARR='',
                                IMP_FLT_DATE='',
                                IMP_FLT_KEY='',
                                IMP_FLT_NO='',
                                TARGET='',
                                FIRST_WT='',
                                SECOND_WT='',
                                THIRD_WT='',
                                REF_WT='',
                                ULD_FLOW='' ,
                                EIC_TYPE=null,
                                BASE_PAL_FLG='N',
                                ASV_INV='N',
                                OFLD_FLG='N',
                                TRANSIT_FLG='N',
                                BB_IND='N',
                                MIX_PPK_IND='N',
                                DG_IND='N',
                                HANDLING_MODE=null,
                                TRANSIT_TYPE=null,                                
                                FINAL_WEIGHT = 'N',
                                DOUBLE_WGT_RSLT = null,
                                MAN_WT_IND2 = 'N',
                                MAN_WT_IND3 = 'N',
                ULDENTRY_MSG_RCVD_YN = 'N',
                DIRECT_TOW = 'N',
                TR_TYPE='SPOFU'
      WHERE uld_key = #uldKey#
	</update>
	<update id="updateAWBCloseSuperFunc" parameterClass="cargo.cms.admin.bo.SuperFunctionBO">
	UPDATE AWB SET AWB_CLOSED_YN = 'Y',LM_DATE=SYSDATE,LM_USER_ID=#userID#,TR_TYPE='SPCLA' WHERE AWB_NO=#awbNo#
	</update>
	<update id="updateFLTCloseSuperFunc" parameterClass="cargo.cms.admin.bo.SuperFunctionBO">
	UPDATE FLT_OPR_EVENTS SET FLT_CLS_YN='Y', FLT_CLS_DATE = SYSDATE, FLT_CLS_TIME = TO_CHAR(SYSDATE,'HH24MI'), FLT_CLS_USER_ID = #userID#,LM_USER_ID= #userID#,LM_DATE = SYSDATE,TR_TYPE='SPCLF' WHERE FLT_KEY=#fltKey# AND SCH_DATE =#fltDate# AND FLT_TYPE=#fltType#
	</update>
	<select id="checkChkoutStatusSuperFunc"  parameterClass="cargo.cms.admin.bo.SuperFunctionBO" resultClass="java.lang.Integer" >
	SELECT COUNT(1) FROM EXP_CHKOUT_DTL WHERE FLT_KEY=#fltKey# AND FLT_DATE=#fltDate# AND ULD_KEY=#uldKey# AND CHKOUT_DATE IS NOT NULL
	</select>
	<update id="updateChkoutStatusSuperFunc" parameterClass="cargo.cms.admin.bo.SuperFunctionBO">
	UPDATE EXP_CHKOUT_DTL SET CHK_FLG='Y',CHKOUT_USER = #userID# ,CHKOUT_DATE=TO_CHAR(SYSDATE,'DDMONYY'),CHKOUT_TIME=TO_CHAR(SYSDATE,'HH24MI'),lm_user_id=#userID#,tr_type='SPCKD' WHERE FLT_KEY=#fltKey# AND FLT_DATE=#fltDate# AND ULD_KEY=#uldKey#
	</update>
        <update id="updateChkoutUldInvSuperFunc" parameterClass="cargo.cms.admin.bo.SuperFunctionBO">
	UPDATE ULD_INVENTORY SET OWNED_INV='N',LOC_CODE='',flt_key=#fltKey#,flt_date=#fltDate# WHERE ULD_KEY=#uldKey#
	</update>
	<select id="checkInvChkoutSuperFunc"  parameterClass="cargo.cms.admin.bo.SuperFunctionBO" resultClass="java.lang.Integer" >
	SELECT COUNT(1) FROM AWB_INVENTORY WHERE ULD_KEY=#uldKey# AND FLT_KEY=#fltKey# AND FLT_DATE = #fltDate#
	</select>
	<update id="deleteInvChkoutSuperFunc" parameterClass="cargo.cms.admin.bo.SuperFunctionBO">
	DELETE FROM AWB_INVENTORY WHERE ULD_KEY=#uldKey# AND FLT_KEY=#fltKey# AND FLT_DATE=#fltDate#
	</update>
	<select id="checkEmptyResetFltSuperFunc"  parameterClass="cargo.cms.admin.bo.SuperFunctionBO" resultClass="java.lang.Integer" >
	SELECT COUNT(1) FROM ULD_INVENTORY WHERE EMPTY_FLG='Y' AND ULD_KEY=#uldKey#
	</select>
	<select id="checkInvResetFltSuperFunc"  parameterClass="cargo.cms.admin.bo.SuperFunctionBO" resultClass="java.lang.Integer" >
	SELECT COUNT(1) FROM AWB_INVENTORY WHERE ULD_KEY=#uldKey# AND FLT_KEY=#fltKey# AND FLT_DATE = #fltDate#
	</select>
	<update id="updateResetFltULDInvSuperFunc" parameterClass="cargo.cms.admin.bo.SuperFunctionBO">
	UPDATE ULD_INVENTORY SET FLT_KEY=#fltKey#,FLT_DATE=#fltDate#,FLT_TYPE='E',TR_TYPE='SPRFT' WHERE ULD_KEY=#uldKey#
	</update>
	<select id="fetchRCLBulkDtlsSuperFunc"  parameterClass="cargo.cms.admin.bo.SuperFunctionBO" resultClass="cargo.cms.admin.bo.SuperFunctionBO" >
	SELECT NVL(SUM(RCL_PCS),0) AS rclBulkPcs,TRIM(TO_CHAR(NVL(SUM(RCL_WT),0),'99999999990.0')) AS rclBulkWt FROM EXP_RCL_HD WHERE AWB_NO=#awbNo# AND AWB_DATE = #awbDate# AND PPK_TYPE = 'B' AND STATUS NOT IN ('V','R') GROUP BY AWB_NO,AWB_DATE
	</select>
	<select id="fetchRCLPpkDtlsSuperFunc"  parameterClass="cargo.cms.admin.bo.SuperFunctionBO" resultClass="cargo.cms.admin.bo.SuperFunctionBO" >
	SELECT NVL(SUM(RCL_PCS),0) AS rclPPKPcs,TRIM(TO_CHAR(NVL(SUM(RCL_WT),0),'99999999990.0')) AS rclPPKWt FROM EXP_RCL_HD WHERE AWB_NO=#awbNo# AND AWB_DATE = #awbDate# AND PPK_TYPE = 'P' AND STATUS NOT IN ('V','R') GROUP BY AWB_NO,AWB_DATE
	</select>
	<select id="fetchRCLMixDtlsSuperFunc"  parameterClass="cargo.cms.admin.bo.SuperFunctionBO" resultClass="cargo.cms.admin.bo.SuperFunctionBO" >
	SELECT NVL(SUM(PCS),0) AS rclMixPcs,TRIM(TO_CHAR(NVL(SUM(WEIGHT),0),'99999999990.0')) AS rclMixWt FROM EXP_RCL_BRKDN BRKDN,EXP_RCL_HD HD WHERE BRKDN.RCL_NO = HD.RCL_NO AND HD.STATUS NOT IN ('V','R') AND BRKDN.AWB_NO=#awbNo# AND BRKDN.AWB_DATE=#awbDate#
	</select>
	<select id="fetchRCLDtlsSuperFunc"  parameterClass="cargo.cms.admin.bo.SuperFunctionBO" resultClass="cargo.cms.admin.bo.SuperFunctionBO" >
	SELECT NVL(SUM(RCL_PCS),0) AS rclPcs,TRIM(TO_CHAR(NVL(SUM(RCL_WT),0),'99999999990.0')) AS rclWt  FROM (
	SELECT NVL(SUM(RCL_PCS),0) RCL_PCS,TRIM(TO_CHAR(NVL(SUM(RCL_WT),0),'99999999990.0')) RCL_WT FROM EXP_RCL_HD WHERE AWB_NO=#awbNo# AND AWB_DATE = #awbDate# AND PPK_TYPE IN ('B','P') AND STATUS NOT IN ('V','R') GROUP BY AWB_NO,AWB_DATE
	UNION ALL
	SELECT NVL(SUM(PCS),0) RCL_MIX_PCS,TRIM(TO_CHAR(NVL(SUM(WEIGHT),0),'99999999990.0')) RCL_MIX_WT FROM EXP_RCL_BRKDN BRKDN,EXP_RCL_HD HD WHERE BRKDN.RCL_NO = HD.RCL_NO AND HD.STATUS NOT IN ('V','R') AND BRKDN.AWB_NO=#awbNo# AND BRKDN.AWB_DATE=#awbDate#)
	</select>
	<update id="updateRCLDtlsSuperFunc" parameterClass="cargo.cms.admin.bo.SuperFunctionBO">
	UPDATE AWB SET RCL_PCS=#rclPcs#,RCL_WT=#rclWt#,RCL_PPK_PCS=#rclPPKPcs#,RCL_PPK_WT=#rclPPKWt#,RCL_MIX_PCS=#rclMixPcs#,RCL_MIX_WT=#rclMixWt#,RCL_BULK_PCS=#rclBulkPcs#,RCL_BULK_WT=#rclBulkWt#,TR_TYPE='SPREC' WHERE AWB_NO=#awbNo# AND AWB_DATE=#awbDate#
	</update>
	<select id="fetchBUPAWBDtlsSuperFunc"  parameterClass="cargo.cms.admin.bo.SuperFunctionBO" resultClass="cargo.cms.admin.bo.SuperFunctionBO" >
	SELECT AWB_NO AS awbNo,TO_CHAR(AWB_DATE,'DDMONYY') AS awbDate
	FROM EXP_PMANIFEST_ULD_AWB EXPAWB,EXP_PMANIFEST_ULD EXPULD WHERE 
	EXPULD.FLT_KEY = EXPAWB.FLT_KEY AND EXPULD.FLT_DATE = EXPAWB.FLT_DATE AND EXPULD.ULD_BT_NO = EXPAWB.ULD_BT_NO AND EXPULD.PPK_TYPE = 'B'
	AND EXPAWB.ULD_BT_NO=#uldKey# AND EXPAWB.FLT_KEY=#fltKey# AND EXPAWB.FLT_DATE=#fltDate#
	</select>
	<select id="fetchBUPDtlsSuperFunc"  parameterClass="cargo.cms.admin.bo.SuperFunctionBO" resultClass="cargo.cms.admin.bo.SuperFunctionBO" >
	SELECT NVL(SUM(EXPAWB.ASSIGNED_PCS),0) AS assignPcs,TRIM(TO_CHAR(NVL(SUM(EXPAWB.ASSIGNED_WT),0),'99999999990.0')) AS assignWt FROM EXP_PMANIFEST_ULD_AWB EXPAWB,EXP_PMANIFEST_ULD EXPULD WHERE 
	EXPULD.FLT_KEY = EXPAWB.FLT_KEY AND EXPULD.FLT_DATE = EXPAWB.FLT_DATE AND EXPULD.ULD_BT_NO = EXPAWB.ULD_BT_NO AND EXPULD.PPK_TYPE = 'B'
	AND EXPAWB.AWB_NO=#awbNo# AND EXPAWB.AWB_DATE=#awbDate# AND EXPAWB.ULD_BT_NO=#uldKey# AND EXPAWB.FLT_KEY=#fltKey# AND EXPAWB.FLT_DATE=#fltDate#
	</select>
	<update id="updateBUPDtlsSuperFunc" parameterClass="cargo.cms.admin.bo.SuperFunctionBO">
	UPDATE EXP_PMANIFEST_AWB SET ASSIGNED_BULK_PCS=#assignPcs#,ASSIGNED_BULK_WT=#assignWt#,TR_TYPE='SPBUP' WHERE AWB_NO=#awbNo# AND AWB_DATE=#awbDate# AND FLT_KEY=#fltKey# AND FLT_DATE=#fltDate#
	</update>
	<select id="fetchBUPBulkDtlsSuperFunc"  parameterClass="cargo.cms.admin.bo.SuperFunctionBO" resultClass="cargo.cms.admin.bo.SuperFunctionBO" >
	SELECT NVL(SUM(EXPAWB.ASSIGNED_PCS),0) AS assignPcs,TRIM(TO_CHAR(NVL(SUM(EXPAWB.ASSIGNED_WT),0),'99999999990.0')) AS assignWt FROM EXP_PMANIFEST_ULD_AWB EXPAWB,EXP_PMANIFEST_ULD EXPULD WHERE 
	EXPULD.FLT_KEY = EXPAWB.FLT_KEY AND EXPULD.FLT_DATE = EXPAWB.FLT_DATE AND EXPULD.ULD_BT_NO = EXPAWB.ULD_BT_NO AND EXPULD.PPK_TYPE = 'B'
	AND EXPAWB.AWB_NO=#awbNo# AND EXPAWB.AWB_DATE=#awbDate# AND EXPAWB.FLT_KEY=#fltKey# AND EXPAWB.FLT_DATE=#fltDate#
	</select>
	<select id="fetchBUPPpkDtlsSuperFunc"  parameterClass="cargo.cms.admin.bo.SuperFunctionBO" resultClass="cargo.cms.admin.bo.SuperFunctionBO" >
	SELECT NVL(SUM(EXPAWB.ASSIGNED_PCS),0) AS assignPcs,TRIM(TO_CHAR(NVL(SUM(EXPAWB.ASSIGNED_WT),0),'99999999990.0')) AS assignWt FROM EXP_PMANIFEST_ULD_AWB EXPAWB,EXP_PMANIFEST_ULD EXPULD WHERE 
	EXPULD.FLT_KEY = EXPAWB.FLT_KEY AND EXPULD.FLT_DATE = EXPAWB.FLT_DATE AND EXPULD.ULD_BT_NO = EXPAWB.ULD_BT_NO AND EXPULD.PPK_TYPE = 'P'
	AND EXPAWB.AWB_NO=#awbNo# AND EXPAWB.AWB_DATE=#awbDate# AND EXPAWB.FLT_KEY=#fltKey# AND EXPAWB.FLT_DATE=#fltDate#
	</select>
	<select id="fetchBUPMixDtlsSuperFunc"  parameterClass="cargo.cms.admin.bo.SuperFunctionBO" resultClass="cargo.cms.admin.bo.SuperFunctionBO" >
	SELECT NVL(SUM(EXPAWB.ASSIGNED_PCS),0) AS assignPcs,TRIM(TO_CHAR(NVL(SUM(EXPAWB.ASSIGNED_WT),0),'99999999990.0')) AS assignWt FROM EXP_PMANIFEST_ULD_AWB EXPAWB,EXP_PMANIFEST_ULD EXPULD WHERE 
	EXPULD.FLT_KEY = EXPAWB.FLT_KEY AND EXPULD.FLT_DATE = EXPAWB.FLT_DATE AND EXPULD.ULD_BT_NO = EXPAWB.ULD_BT_NO AND EXPULD.PPK_TYPE = 'M'
	AND EXPAWB.AWB_NO=#awbNo# AND EXPAWB.AWB_DATE=#awbDate# AND EXPAWB.FLT_KEY=#fltKey# AND EXPAWB.FLT_DATE=#fltDate#
	</select>
	<update id="updateBUPBulkPmanAWB" parameterClass="cargo.cms.admin.bo.SuperFunctionBO">
	UPDATE EXP_PMANIFEST_AWB SET BULK_PCS=#pmanBulkPcs#,BULK_WT=#pmanBulkWt#,ASSIGNED_BULK_PCS=#pmanBulkPcs#,ASSIGNED_BULK_WT=#pmanBulkWt#,UNASSIGNED_BULK_PCS='0',UNASSIGNED_BULK_WT='0',TR_TYPE='SPBUP' WHERE AWB_NO=#awbNo# AND AWB_DATE=#awbDate# AND FLT_KEY=#fltKey# AND FLT_DATE=#fltDate#
	</update>
	<update id="updateBUPPpkPmanAWB" parameterClass="cargo.cms.admin.bo.SuperFunctionBO">
	UPDATE EXP_PMANIFEST_AWB SET PPK_PCS=#pmanPPKPcs#,PPK_WT=#pmanPPKWt# WHERE AWB_NO=#awbNo# AND AWB_DATE=#awbDate# AND FLT_KEY=#fltKey# AND FLT_DATE=#fltDate#
	</update>
	<update id="updateBUPMixPmanAWB" parameterClass="cargo.cms.admin.bo.SuperFunctionBO">
	UPDATE EXP_PMANIFEST_AWB SET MIX_PCS=#pmanMixPcs#,MIX_WT=#pmanMixWt# WHERE AWB_NO=#awbNo# AND AWB_DATE=#awbDate# AND FLT_KEY=#fltKey# AND FLT_DATE=#fltDate#
	</update>
	<update id="updatepmanAWBSuperFunc" parameterClass="cargo.cms.admin.bo.SuperFunctionBO">
	UPDATE EXP_PMANIFEST_AWB SET PMAN_PCS=#pmanPcs#,PMAN_WT=#pmanWt#,TR_TYPE='SPMAN' WHERE AWB_NO=#awbNo# AND AWB_DATE=#awbDate# AND FLT_KEY=#fltKey# AND FLT_DATE=#fltDate#
	</update>
	<select id="fetchTarmacBulkDtlsSuperFunc"  parameterClass="cargo.cms.admin.bo.SuperFunctionBO" resultClass="cargo.cms.admin.bo.SuperFunctionBO" >
	SELECT NVL(SUM(BULK_PCS), 0) AS assignPcs,TRIM(TO_CHAR(NVL(SUM(BULK_WT),0),'99999999990.0')) AS assignWt FROM EXP_PMAN_TARMAC_AWB WHERE AWB_NO=#awbNo# AND AWB_DATE=#awbDate# AND FLT_KEY=#fltKey# AND FLT_DATE=#fltDate#
	</select>
	<select id="fetchTarmacPpkDtlsSuperFunc"  parameterClass="cargo.cms.admin.bo.SuperFunctionBO" resultClass="cargo.cms.admin.bo.SuperFunctionBO" >
	SELECT NVL(SUM(PPK_PCS), 0) AS assignPcs,TRIM(TO_CHAR(NVL(SUM(PPK_WT),0),'99999999990.0')) AS assignWt FROM EXP_PMAN_TARMAC_AWB WHERE AWB_NO=#awbNo# AND AWB_DATE=#awbDate# AND FLT_KEY=#fltKey# AND FLT_DATE=#fltDate#
	</select>	
	<update id="updateAWBSuperFunc" parameterClass="cargo.cms.admin.bo.SuperFunctionBO">
	UPDATE AWB SET PMAN_BULK_PCS=#pmanBulkPcs#,PMAN_BULK_WT=#pmanBulkWt#,PMAN_PPK_PCS=#pmanPPKPcs#,PMAN_PPK_WT=#pmanPPKWt#,PMAN_MIX_PCS=#pmanMixPcs#,PMAN_MIX_WT=#pmanMixWt#,PMAN_PCS=#pmanPcs#,PMAN_WT=#pmanWt# WHERE AWB_NO=#awbNo# AND AWB_DATE=#awbDate#
	</update>
	<update id="updateAccspollAckDevYes" parameterClass="cargo.cms.admin.bo.SuperFunctionBO">
	UPDATE CMSRULES SET RULE_VALUE = 'DEV' WHERE RULE_CODE='ACCS_POLL_DATA_DEV'
	</update>	
	<update id="updateAccspollAckFetYes" parameterClass="cargo.cms.admin.bo.SuperFunctionBO">
	UPDATE CMSRULES SET RULE_VALUE = 'FAT' WHERE RULE_CODE='ACCS_POLL_DATA_FAT'
	</update>	
	<update id="updateAccsPollDataDevYes" parameterClass="cargo.cms.admin.bo.SuperFunctionBO">
	UPDATE CMSRULES SET RULE_VALUE = 'DEV' WHERE RULE_CODE='ACCS_POLL_ACK_DEV'
	</update>	
	<update id="updateAccsPollDataFetYes" parameterClass="cargo.cms.admin.bo.SuperFunctionBO">
	UPDATE CMSRULES SET RULE_VALUE = 'FAT' WHERE RULE_CODE='ACCS_POLL_ACK_FAT'
	</update>	
	<update id="updateAccspollAckDevNo" parameterClass="cargo.cms.admin.bo.SuperFunctionBO">
	UPDATE CMSRULES SET RULE_VALUE = 'DEV' WHERE RULE_CODE='ACCS_POLL_DATA_DEV'
	</update>	
	<update id="updateAccspollAckFetNo" parameterClass="cargo.cms.admin.bo.SuperFunctionBO">
	UPDATE CMSRULES SET RULE_VALUE = 'DEV' WHERE RULE_CODE='ACCS_POLL_DATA_FAT'
	</update>	
	<update id="updateAccsPollDataDevNo" parameterClass="cargo.cms.admin.bo.SuperFunctionBO">
	UPDATE CMSRULES SET RULE_VALUE = 'DEV' WHERE RULE_CODE='ACCS_POLL_ACK_DEV'
	</update>	
	<update id="updateAccsPollDataFetNo" parameterClass="cargo.cms.admin.bo.SuperFunctionBO">
	UPDATE CMSRULES SET RULE_VALUE = 'DEV' WHERE RULE_CODE='ACCS_POLL_ACK_FAT'
	</update>
	<select id="fetchACCSStatus"  parameterClass="cargo.cms.admin.bo.SuperFunctionBO" resultClass="cargo.cms.admin.bo.SuperFunctionBO" >
	SELECT
	(SELECT RULE_VALUE FROM CMSRULES WHERE RULE_CODE='ACCS_POLL_DATA_DEV') AS pollDataDev,
	(SELECT RULE_VALUE FROM CMSRULES WHERE RULE_CODE='ACCS_POLL_DATA_FAT') AS pollDataFat,
	(SELECT RULE_VALUE FROM CMSRULES WHERE RULE_CODE='ACCS_POLL_ACK_DEV') AS pollAckDev,
	(SELECT RULE_VALUE FROM CMSRULES WHERE RULE_CODE='ACCS_POLL_ACK_FAT') AS pollAckFat
	FROM DUAL
	</select>
<select id="sqlGetFWTaskSchedulerTask" parameterClass="java.lang.String"
		resultClass="cargo.cms.common.utils.bo.TaskSchedulerBO">
		<![CDATA[
			SELECT
			TASK_ID taskId, TASK_TYPE taskType, FREQUENCY frequency
			FROM FW_TASK_SCHEDULER
			WHERE TASK_ID = #PARAM#
		]]>
	</select>
	<select id="sqlGetCanRunFWTaskSchedulerTask" parameterClass="cargo.cms.common.utils.bo.TaskSchedulerBO"
		resultClass="cargo.cms.common.utils.bo.TaskSchedulerBO">
		<![CDATA[
			SELECT
			TASK_ID taskId, NVL(STATUS, 'A') status, RETRY_COUNT retryCount, TO_CHAR(TASK_RUN_TIME, 'DDMONYY HH24:MI') taskRunTime
			FROM FW_TASK_SCHEDULER_RUN_LOG
			WHERE TASK_ID = #taskId# AND TASK_RUN_TIME = TO_DATE(#taskRunTime#, 'DDMONYY HH24:MI')
		]]>
	</select>
	<insert id="sqlInsertFWTaskSchedulerLog" parameterClass="cargo.cms.common.utils.bo.TaskSchedulerBO">
	 	<![CDATA[
			INSERT INTO FW_TASK_SCHEDULER_RUN_LOG (
				TASK_ID, TASK_RUN_TIME, STATUS, RETRY_COUNT,
				CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE
			)
			VALUES (
				#taskId#, TO_DATE(#taskRunTime#, 'DDMONYY HH24:MI'), 'P', 0,
				'SYSTEM', SYSDATE, 'SYSTEM', SYSDATE
			)
		]]>
	</insert>
	<update id="sqlUpdateFWTaskSchedulerLogAsStarted" parameterClass="cargo.cms.common.utils.bo.TaskSchedulerBO">
	 	<![CDATA[
			UPDATE FW_TASK_SCHEDULER_RUN_LOG
			SET STATUS = 'P', RETRY_COUNT = RETRY_COUNT + 1, LM_USER_ID = 'SYSTEM', LM_DATE = SYSDATE
			WHERE TASK_ID = #taskId# AND TASK_RUN_TIME = TO_DATE(#taskRunTime#, 'DDMONYY HH24:MI')
		]]>
	</update>
	<update id="sqlUpdateFWTaskSchedulerLogAsCompleted" parameterClass="cargo.cms.common.utils.bo.TaskSchedulerBO">
	 	<![CDATA[
			UPDATE FW_TASK_SCHEDULER_RUN_LOG
			SET STATUS = 'C', LM_USER_ID = 'SYSTEM', LM_DATE = SYSDATE
			WHERE TASK_ID = #taskId# AND TASK_RUN_TIME = TO_DATE(#taskRunTime#, 'DDMONYY HH24:MI')
		]]>
	</update>
	<update id="sqlUpdateFWTaskSchedulerLogAsAborted" parameterClass="cargo.cms.common.utils.bo.TaskSchedulerBO">
	 	<![CDATA[
			UPDATE FW_TASK_SCHEDULER_RUN_LOG
			SET STATUS = 'A', LM_USER_ID = 'SYSTEM', LM_DATE = SYSDATE
			WHERE TASK_ID = #taskId# AND TASK_RUN_TIME = TO_DATE(#taskRunTime#, 'DDMONYY HH24:MI')
		]]>
	</update>
<select id="sqlFetchRCSTypeListforLying" parameterClass="java.lang.String" resultClass="cargo.cms.afw.bo.MasterBO">
		SELECT DISTINCT CODE_TYPE AS codeId,CODE_TYPE AS codeDesc FROM MAST_REG_CLRN_CODE ORDER BY CODE_TYPE ASC
	</select>	
	<select id="checkValidFlightSuperFunc"  parameterClass="cargo.cms.admin.bo.SuperFunctionBO" resultClass="java.lang.Integer" >
	SELECT COUNT(1) FROM FLT_OPR_EVENTS WHERE FLT_KEY=#fltKey# AND SCH_DATE=#fltDate# AND FLT_TYPE=#fltType#
	</select>
	<select id="checkInvOffsiteEmptySuperFunc"  parameterClass="cargo.cms.admin.bo.SuperFunctionBO" resultClass="java.lang.Integer" >
	SELECT COUNT(1) FROM AWB_INVENTORY WHERE ULD_KEY=#uldKey# 
	</select>
	<update id="deleteInvOffsiteEmptySuperFunc" parameterClass="cargo.cms.admin.bo.SuperFunctionBO">
	DELETE FROM AWB_INVENTORY WHERE ULD_KEY=#uldKey# 
	</update>
	<select id="getSpecialStoreInventoryResult" parameterClass="cargo.cms.misc.bo.SpecialStoreInventoryLogBO" resultClass="cargo.cms.misc.bo.SpecialStoreInventoryLogBO">
		SELECT to_char(LOGS.TRANSACTION_TIME, 'DDMONYY') AS actDate,
		  to_char(LOGS.TRANSACTION_TIME,'HH24:MI') AS actTime,
		  HD.STORE_NAME AS shcStore,
		  LOGS.ACTION        AS action,
		  LOGS.CATALOG       AS cat,
		  LOGS.AWB_NO        AS awb,
		  LOGS.SHC_LIST      AS shc,
		  LOGS.AWB_PCS       AS invPcs,
		  LOGS.AWB_WT        AS invWt,
		  LOGS.IN_OUT_PCS    AS actPcs,
		  decode(LOGS.ACTION,'Retrieve','NA','Store','NA',LOGS.IN_OUT_WT) AS actWt,
		  decode(LOGS.IB_FLT_KEY || '/' || TO_CHAR(LOGS.IB_FLT_DATE, 'DDMONYY'),'/','',LOGS.IB_FLT_KEY || '/' || TO_CHAR(LOGS.IB_FLT_DATE, 'DDMONYY'))    AS ibFlight,
		  TO_CHAR(LOGS.ETA_ATA, 'DDMONYY HH24:MI') AS etaAta,
		  decode(LOGS.OB_FLT_KEY ||  '/' || TO_CHAR(LOGS.OB_FLT_DATE, 'DDMONYY'),'/','',LOGS.OB_FLT_KEY ||  '/' || TO_CHAR(LOGS.OB_FLT_DATE, 'DDMONYY'))    AS obFlight,
		  TO_CHAR(LOGS.STD_ETD, 'DDMONYY HH24:MI') AS stdEtd,
		  LOGS.RCL_VCL_NO    AS rclvcl,
		  LOGS.SRF_NO        AS srf,
		  HD.SUPERVISOR_ID  AS personInCharge, (
		      SELECT STRAGG(STRINGDELIM(DTL.HANDLER_ID, ', ')) 
		      FROM ADM_SPECIAL_STORE_DTL DTL WHERE DTL.TR_NO = HD.TR_NO
		  )  AS handler
		  FROM ADM_SPECIAL_STORE_LOG LOGS
		  JOIN ADM_SPECIAL_STORE_HD HD
		  ON LOGS.TR_NO = HD.TR_NO where HD.STORE_NAME=#shcStore#
		<isNotEmpty property="awb" prepend="AND">
		    LOGS.AWB_NO=#awb#
		</isNotEmpty>
		<isNotEmpty property="ibFlight" prepend="AND">
		    LOGS.IB_FLT_KEY=#ibFlight#
		    <isNotEmpty property="ibFlightDate" prepend="AND">
		      LOGS.IB_FLT_DATE=#ibFlightDate#
		   </isNotEmpty>
		</isNotEmpty>
		<isNotEmpty property="obFlight" prepend="AND">
		   LOGS.OB_FLT_KEY=#obFlight#
		   <isNotEmpty property="obFlightDate" prepend="AND">
		     LOGS.OB_FLT_DATE=#obFlightDate#
		   </isNotEmpty>
		</isNotEmpty>
		<isNotEmpty property="actionFrom" prepend="AND">
		   LOGS.TRANSACTION_TIME BETWEEN to_date(#actionFrom#,'DDMONYY HH24MI') and to_date(#actionTo#,'DDMONYY HH24MI')
		</isNotEmpty>
		<isEqual property="inOut" compareValue="Y" prepend="AND">
			LOGS.ACTION in('Retrieve','Store')
		</isEqual>
			ORDER BY LOGS.TRANSACTION_TIME
	</select>
	<select id="getTagDtlsForMileStone" parameterClass="java.lang.String" resultClass="cargo.cms.common.utils.bo.MileStoneBO">
		SELECT HAWB_NO as fromTag,STRG_PCS as actPcs,STRG_WT as actWt FROM HAWB_INVENTORY WHERE SEQ_NO=#PARAM#
	</select>	
	<select id="getULDLocnbasedonhoformnum" parameterClass="java.lang.String" resultClass="cargo.cms.common.utils.bo.CommonUtilFunBO">
		SELECT DISTINCT LOC_CODE as locCode FROM ULD_INVENTORY WHERE LOC_CODE IS NOT NULL AND  ULD_KEY IN (SELECT ULD_KEY FROM EXP_ULD_HOVER_DTL WHERE HO_FORM_NO=#PARAM#) 
	</select>
	<select id="getULDLocnForMileStone" parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT LOC_CODE as locnCode FROM ULD_INVENTORY WHERE ULD_KEY = #PARAM#
	</select>
	<select id="getLSPLocnForMileStone" parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT LOC_CODE as locnCode FROM LSP_INVENTORY WHERE LSP_NO = #PARAM#
	</select>
	<select id="getatadetailsformilestone" parameterClass="cargo.cms.common.utils.bo.MileStoneBO" resultClass="cargo.cms.common.utils.bo.MileStoneBO">
	SELECT SCH_TIME AS schTime,TO_CHAR(ACT_DATE,'DDMONYY') AS actDate,ACT_TIME AS actTime,TO_CHAR(EST_DATE,'DDMONYY') AS estDate,EST_TIME AS estTime
       FROM FLT_OPR WHERE FLT_KEY=#inbFltKey# AND SCH_DATE=#inbFltDate# AND FLT_TYPE =#fltType#
	</select>
	
	<select id="getMileStoneSpecialHandlingCodes" parameterClass="cargo.cms.common.utils.bo.MileStoneBO" resultClass="cargo.cms.common.utils.bo.MileStoneBO">
		select decode(A.spl_code1, null, '', A.spl_code1 || decode(A.spl_code2, null, '',','))
		               || decode(A.spl_code2, null, '', A.spl_code2 || decode(A.spl_code3, null, '',','))
		               || decode(A.spl_code3, null, '', A.spl_code3 || decode(A.spl_code4, null, '',','))
		               || decode(A.spl_code4, null, '', A.spl_code4 || decode(A.spl_code5, null, '',','))
		               || decode(A.spl_code5, null, '', A.spl_code5 || decode(A.spl_code6, null, '',','))
		               || decode(A.spl_code6, null, '', A.spl_code6 || decode(A.spl_code7, null, '',','))
		               || decode(A.spl_code7, null, '', A.spl_code7 || decode(A.spl_code8, null, '',','))
		               || decode(A.spl_code8, null, '', A.spl_code8 || decode(A.spl_code9, null, '',',')) 
		               || decode(A.spl_code9, null, '', A.spl_code9 ) as splCode,A.PCS AS awbPcs,TRIM(TO_CHAR(nvl(A.WT,0), '9999999990D9')) AS awbWt,
                   (SELECT NVL(SUM(B.locn_pcs),0) FROM AWB_INVENTORY B WHERE AWB_NO=A.AWB_NO AND AWB_DATE=A.AWB_DATE) AS invPcs,
                   (SELECT TRIM(TO_CHAR(nvl(SUM(B.LOCN_WT),0), '9999999990D9')) FROM AWB_INVENTORY B WHERE B.AWB_NO=A.AWB_NO AND B.AWB_DATE=A.AWB_DATE) AS invWt
                   from AWB A WHERE A.AWB_NO =#awbNo# AND A.AWB_DATE=#awbDate#
	</select>
	<select id="getMileStoneULDSHC" parameterClass="java.lang.String" resultClass="java.lang.String">
	<![CDATA[
	SELECT STRAGG(STRINGDELIM(CODE,',')) FROM V_EXP_ULD_SHC WHERE ULD_KEY = #PARAM# AND ROWNUM < 10
	]]>	
	</select>
	
	<select id="getMileStoneimpfltdtl" parameterClass="cargo.cms.common.utils.bo.MileStoneBO" resultClass="java.lang.Integer">
	select count(1) from flt_opr where flt_key=#fltKey# and sch_date=#fltDate# and flt_type='A'
	</select>
	
	<select id="getMileStoneImpULDSHC" parameterClass="cargo.cms.common.utils.bo.MileStoneBO" resultClass="java.lang.String">
	<![CDATA[
	SELECT STRAGG(STRINGDELIM(SHC, ',')) AS SHCS 
           			FROM (SELECT DISTINCT SHC, FLT_KEY, ULD_KEY,FLT_DATE, PRIORITY FROM V_IMP_FLT_ULD_SHC ORDER BY PRIORITY DESC) 
           			WHERE ULD_KEY = #uldkey# AND FLT_KEY = #fltKey# AND FLT_DATE = #fltDate# AND ROWNUM < 10
	]]>	
	</select>
	
	<insert id="insertMileStoneEventHd" parameterClass="cargo.cms.common.utils.bo.MileStoneBO">
	INSERT INTO EVENT_HD (EVENT_ID,EVENT_DATE_TIME,EVENT_USER_ID,FUNCTION_CODE,RCL_NO,TRF_NO,VCL_NO,SRF_NO,CT_NO,EVENT_FLT_ID,TRUCK_TRIP,VEHICLE_NO,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,ACTION)
	VALUES (#evntId#,SYSDATE,#crUserId#,#functionCode#,#rclNo#,#trfNo#,#vclNo#,#srfNo#,#ctNo#,#evntFltId#,#trkFltTrip#,#vehicleNo#,#crUserId#,SYSDATE,#crUserId#,SYSDATE,#action#)
	</insert>
	<insert id="insertMileStoneEventAWB" parameterClass="cargo.cms.common.utils.bo.MileStoneBO">
	INSERT INTO EVENT_AWB (EVENT_AWB_ID,EVENT_ID,AWB_NO,AWB_DATE,AWB_SHC,AWB_PCS,AWB_WT,AWB_INV_PCS,AWB_INV_WT,AWB_ACT_PCS,AWB_ACT_WT,REF_ULD_KEY,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE)
	VALUES (#evntAWBId#,#evntId#,#awbNo#,#awbDate#,#awbShc#,#awbPcs#,#awbWt#,#invPcs#,#invWt#,#actPcs#,#actWt#,#refULD#,#crUserId#,SYSDATE,#crUserId#,SYSDATE)
	</insert>
	<insert id="insertMileStoneEventAWBMov" parameterClass="cargo.cms.common.utils.bo.MileStoneBO">
	INSERT INTO EVENT_AWB_MOV (EVENT_AWB_MOV_ID,EVENT_AWB_ID,AWB_ACT_PCS,AWB_ACT_WT,FROM_LOC_CODE,FROM_CSD_ULD,TO_LOC_CODE,TO_CSD_ULD,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE)
	VALUES (#evntAWBMovId#,#evntAWBId#,#actPcs#,#actWt#,#fromlocn#,#fromULDCSD#,#toLocn#,#toULDCSD#,#crUserId#,SYSDATE,#crUserId#,SYSDATE)
	</insert>
	<insert id="insertMileStoneEventAWBTagMov" parameterClass="cargo.cms.common.utils.bo.MileStoneBO">
	INSERT INTO EVENT_AWB_TAG_MOV (EVENT_TAG_MOV_ID,EVENT_AWB_MOV_ID,TAG_ACT_PCS,TAG_ACT_WT,FROM_LOC_TAG,TO_LOC_TAG,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE)
	VALUES (EVENT_AWB_TAG_SEQ.NEXTVAL,#evntAWBMovId#,#actPcs#,#actWt#,#fromTag#,#toTag#,#crUserId#,SYSDATE,#crUserId#,SYSDATE)
	</insert>
	<insert id="insertMileStoneEventULD" parameterClass="cargo.cms.common.utils.bo.MileStoneBO">
	INSERT INTO EVENT_ULD (EVENT_ULD_ID,EVENT_ID,ULD_KEY,ULD_SHC,CSD,EVENT_ID_AWB_LIST,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE)
	VALUES (#evntULDId#,#evntId#,DECODE(#lspNo#,'',#uldkey#,NULL,#uldkey#,''),#uldSHC#,#lspNo#,#evntAWBlistId#,#crUserId#,SYSDATE,#crUserId#,SYSDATE)
	</insert>
	<insert id="insertMileStoneEventULDMov" parameterClass="cargo.cms.common.utils.bo.MileStoneBO">
	INSERT INTO EVENT_ULD_MOV (EVENT_ULD_MOV_ID,EVENT_ULD_ID,FROM_LOC_CODE,TO_LOC_CODE,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE)
	VALUES (EVENT_ULD_MOV_ID_SEQ.NEXTVAL,#evntULDId#,#fromlocn#,#toLocn#,#crUserId#,SYSDATE,#crUserId#,SYSDATE)
	</insert>
	<insert id="insertMileStoneEventULDAWBList" parameterClass="cargo.cms.common.utils.bo.MileStoneBO">
	INSERT INTO EVENT_ULD_AWB_LIST (EVENT_ULD_AWB_LIST_ID,EVENT_ID,ULD_CSD,AWB_NO,AWB_DATE,LOAD_PCS,LOAD_WT,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,AWB_SHC,AWB_PCS,AWB_WT,AWB_INV_PCS,AWB_INV_WT)
	VALUES (#eventULDAWBId#,#evntId#,#uldCsd#,#awbNo#,#awbDate#,#loadPcs#,#loadWt#,#crUserId#,SYSDATE,#crUserId#,SYSDATE,#awbShc#,#awbPcs#,#awbWt#,#invPcs#,#invWt#)
	</insert>
	<insert id="insertMileStoneEventULDAWBMov" parameterClass="cargo.cms.common.utils.bo.MileStoneBO">
	INSERT INTO EVENT_ULD_AWB_TAG_MOV (EVENT_TAG_MOV_ID,EVENT_ULD_AWB_LIST_ID,TAG_ACT_PCS,TAG_ACT_WT,FROM_LOC_TAG,TO_LOC_TAG,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE) 
	VALUES (EVENT_ULD_TAG_SEQ.NEXTVAL,#eventULDAWBId#,#hawbPcs#,#hawbWt#,#fromTag#,#toTag#,#crUserId#,SYSDATE,#crUserId#,SYSDATE)
	</insert>
	<insert id="insertMileStoneEventFlt" parameterClass="cargo.cms.common.utils.bo.MileStoneBO">
	INSERT INTO EVENT_FLT (EVENT_FLT_ID,FLT_KEY,FLT_DATE,FLT_TYPE,SCH_TIME,EST_DATE,EST_TIME,ACT_DATE,ACT_TIME,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE)
	VALUES (#evntFltId#,#fltKey#,#fltDate#,#fltType#,#schTime#,#estDate#,#estTime#,#actDate#,#actTime#,#crUserId#,SYSDATE,#crUserId#,SYSDATE)
	</insert>
	
	<select id="getCountNormalSplCode"  parameterClass="cargo.cms.admin.bo.SplHandlingCodeBO" resultClass="java.lang.Integer">
	SELECT COUNT(1) FROM MAST_NON_COLOAD_SHC WHERE CARR_CODE=#selectedCarrier# AND non_coload_sch=#splHandlingCode# AND (UNLDG_PT = NVL('',UNLDG_PT) OR UNLDG_PT IS NULL)
	</select>
	<select id="getMileStoneEventULDAWBListID" parameterClass="cargo.cms.common.utils.bo.MileStoneBO" resultClass="java.lang.String">
	SELECT MAX(ULD.EVENT_ID_AWB_LIST) FROM EVENT_HD HD,  EVENT_ULD ULD,  EVENT_FLT FLT WHERE ULD.EVENT_ID   = HD.EVENT_ID AND ULD.ULD_KEY IS NOT NULL AND FLT.EVENT_FLT_ID = HD.EVENT_FLT_ID
	AND FLT.FLT_KEY IS NOT NULL AND HD.EVENT_FLT_ID IS NOT NULL AND ULD.EVENT_ID_AWB_LIST IS NOT NULL AND FLT.FLT_KEY      =#fltKey# AND FLT.FLT_DATE     =#fltDate# AND ULD.ULD_KEY      =#uldkey#
	</select>
	<select id="fetchMileStoneFFMAWBData" parameterClass="cargo.cms.common.utils.bo.MileStoneBO" resultClass="cargo.cms.common.utils.bo.MileStoneBO">
		SELECT SHP.AWB_NO AS awbNo,PKG_COMMON.GET_AWB_DATE(SHP.AWB_NO,'') AS awbDate, SUM(SHP.MAN_PCS) AS loadPcs,SUM(SHP.MAN_WT) AS loadWt 
		FROM EDI_FFM_MSG FFM, EDI_FFM_SHP SHP, FLT_OPR OPR,EDI_FFM_ULD ULD
		WHERE FFM.ffm_status = 'P' and FFM.TR_NO = SHP.TR_NO AND FFM.FLT_KEY = OPR.FLT_KEY AND FFM.FLT_DATE = OPR.SCH_DATE 
    and SHP.udoc_line_no= ULD.doc_line_no AND ULD.ULD_KEY=#uldkey#
    AND OPR.flt_type = 'A' AND FFM.FLT_KEY = #fltKey# AND FFM.FLT_DATE = #fltDate# GROUP BY SHP.AWB_NO,SHP.AWB_DATE,SHP.DEST,SHP.BRD_POINT,SHP.ORG
	</select>
	<select id="fetchMileStoneStorageAWBData" parameterClass="java.lang.String" resultClass="cargo.cms.common.utils.bo.MileStoneBO">
		SELECT INV.AWB_NO AS awbNo,TO_CHAR(INV.AWB_DATE,'DDMONYY') AS awbDate,INV.LOCN_PCS AS loadPcs,INV.LOCN_WT AS loadWt,seq_no as seqNo FROM AWB_INVENTORY INV WHERE (INV.ULD_KEY=#PARAM# or INV.LSP_NO =#PARAM#)
	</select>
	<select id="fetchMileStoneHAWBData" parameterClass="java.lang.String" resultClass="cargo.cms.common.utils.bo.MileStoneBO">
		SELECT HAWB_NO as tagNo,STRG_PCS as hawbPcs,STRG_WT as hawbWt FROM HAWB_INVENTORY WHERE SEQ_NO=#PARAM#
	</select>
	<select id="fetchMileStoneHAWBDataAmendStorage" parameterClass="cargo.cms.imprt.bo.AWBStorDtlBO" resultClass="cargo.cms.common.utils.bo.MileStoneBO">
		SELECT HAWB_NO as tagNo,STRG_PCS as hawbPcs,STRG_WT as hawbWt FROM HAWB_INVENTORY WHERE SEQ_NO in ( SELECT SEQ_NO FROM AWB_INVENTORY WHERE AWB_NO=#awbNo# AND AWB_DATE=#awbDate# AND 
      ((LOC_CODE=#locCode# AND (ULD_KEY=#uldKey# OR LSP_NO = #lspNo#)) OR ULD_KEY IS NULL AND LSP_NO IS NULL AND LOC_CODE=#locCode#))
	</select>
	
	<select id="fetchMileStoneOffloadAWBData" parameterClass="cargo.cms.common.utils.bo.MileStoneBO" resultClass="cargo.cms.common.utils.bo.MileStoneBO">
	SELECT bup.AWB_NO AS awbNo,TO_CHAR(bup.AWB_DATE,'DDMONYY') AS awbDate,bup.assigned_pcs AS loadPcs,bup.assigned_wt AS loadWt FROM exp_pmanifest_uld_awb bup WHERE bup.flt_key=#fltKey# and bup.flt_date=#fltDate# and bup.uld_bt_no=#uldkey#
	</select>
	
	<select id="fetchMileStoneLSPStorageAWBData" parameterClass="java.lang.String" resultClass="cargo.cms.common.utils.bo.MileStoneBO">
		SELECT INV.AWB_NO AS awbNo,TO_CHAR(INV.AWB_DATE,'DDMONYY') AS awbDate,INV.LOCN_PCS AS loadPcs,INV.LOCN_WT AS loadWt,seq_no as seqNo FROM AWB_INVENTORY INV WHERE INV.LSP_NO=#PARAM#
	</select>

	<select id="fetchCtryCodeofUnldgPoint" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO" resultClass="java.lang.String">
	SELECT CTRY_CODE AS ctryCode
		FROM MAST_CITY
		WHERE CODE IN
		  (SELECT UNLDG_PT
		  FROM EXP_PMANIFEST_AWB
		  WHERE AWB_NO=#awbNo#
		  AND AWB_DATE=#awbDate#
		  )
		AND ROWNUM=1
	</select>


	<select id="getIatacode"  parameterClass="java.lang.String" resultClass="java.lang.String">
		select co_iata_code from cust_company where code=#agentCode#
	</select>
	
	<select id="getHubChargesDataForCloseDate" parameterClass="map" resultClass="cargo.cms.admin.report.bo.HubChargesDataBO">
			SELECT  
			hub.iata_code iataCode,
  			hub.agent_name company,
		  	SUBSTR(hub.awb_no,1,3) awbPrefix,
		  	hub.awb_no awb,
		  	hub.awb_date awbDate,
		  	(select itm_desc from BILL_ITM_MASTER where itm_code=hub.charges_type and itm_category in('CCNA','ISAC','CCA') AND OWNER_IND='CX CARGO') chargeType,
		 	TO_CHAR(hub.paid_date,'DDMONYY  HH24:MI') paidDate,
		 	SUM(DECODE(paid,'Y',NVL(amount,0),0)) paidAmt,
		  	SUM(DECODE(paid,'N',NVL(amount,0),0)) unpaidAmt,
		  	'Y' reportType
			FROM AWB_ISAC_CHARGES hub
			WHERE hub.tr_type='CCNA'
			AND hub.close_date BETWEEN to_date(#closeFrom#,'DDMONYY') AND to_date(#closeToDate# ||'2359','DDMONYYHH24MI')
			AND NVL(Rept_include,'N')='N'
			<isNotEmpty property="carrCode">
				AND (CARR_CODE = #carrCode#	OR CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE  = #carrCode#) OR CARR_CODE IS NULL)
			</isNotEmpty>
			GROUP BY
			hub.iata_code,
		  	hub.agent_name,
		  	hub.awb_no,
		  	hub.awb_date,
		  	hub.charges_type,
		  	hub.paid_date
		  	order by hub.agent_name,hub.awb_no,hub.charges_type
	</select>
	
	<select id="getHubChargesDataForCreateDate" parameterClass="map" resultClass="cargo.cms.admin.report.bo.HubChargesDataBO">
			SELECT
			  hub.iata_code iataCode,
			  hub.agent_name company,
			  substr(hub.awb_no,1,3) awbPrefix,
			  hub.awb_no awb,
			  hub.awb_date awbDate,
			  (select itm_desc from BILL_ITM_MASTER where itm_code=hub.charges_type and itm_category in('CCNA','ISAC','CCA') AND OWNER_IND='CX CARGO') chargeType,
			  to_char(hub.paid_date,'DDMONYY  HH24:MI') paidDate,
			  SUM(DECODE(paid,'Y',NVL(amount,0),0)) paidAmt,
			  SUM(DECODE(paid,'N',NVL(amount,0),0)) unpaidAmt,
			  hub.cr_user_id crUser,
			  to_char(hub.cr_date,'DDMONYY  HH24:MI') crDate,
			  to_char(hub.close_date,'DDMONYY  HH24:MI') clsDate,
			  hub.close_user clsUser,
			  to_char(hub.waive_date,'DDMONYY  HH24:MI') waiveDate,
			  hub.waive_user waiveUser,
			  hub.remarks remarks,
			  'N' reportType,
			  TO_CHAR(REPT_INCLD_DATE,'DDMONYY  HH24:MI') reptIncludeDate
			  FROM AWB_ISAC_CHARGES hub
			  where hub.cr_date between to_date(#createFromDate#,'DDMONYY') and to_date(#createToDate# ||'2359','DDMONYYHH24MI')
			  <isNotEmpty property="carrCode">
				AND (CARR_CODE = #carrCode#	OR CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE  = #carrCode#) OR CARR_CODE IS NULL)
			  </isNotEmpty>
			  GROUP BY 
			  hub.iata_code,
			  hub.agent_name,
			  hub.awb_no,
			  hub.awb_date,
			  hub.charges_type,
			  hub.paid_date, 
			  hub.cr_user_id,
			  hub.cr_date,
			  hub.close_date,
			  hub.close_user,
			  hub.waive_date,
			  hub.waive_user ,
			  hub.remarks,
			  REPT_INCLD_DATE
			  order by hub.agent_name,hub.awb_no,hub.charges_type
	</select>
	
	<update id="updateReptInclDate" parameterClass="cargo.cms.admin.report.bo.HubChargesDataBO">
		update AWB_ISAC_CHARGES set rept_include='Y',REPT_INCLD_DATE=sysdate where awb_no=#awb# and awb_date=#awbDate# and tr_type='CCNA' AND NVL(rept_include,'N')='N'
	</update>
	
	<update id="sqlCloseAWBCharge" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO">
		update AWB_ISAC_CHARGES set closed='Y',close_date=sysdate,close_user=#userID# where awb_no=#awbNo# and awb_date=#awbDate# and tr_no=#trno#	
	</update>
	
	<update id="sqlWaiveAWBCharge" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO">
		update AWB_ISAC_CHARGES set waive_date=sysdate,waive_user=#userID# where awb_no=#awbNo# and awb_date=#awbDate# and tr_no=#trno#	
	</update>
	
	<select id="getFirstManFlt" parameterClass="java.util.HashMap" resultClass="cargo.cms.awb.bo.AWBEnquiryBO">
    	with PreMan as (
	    	SELECT OPR.FLT_KEY || '/' || TO_CHAR(OPR.SCH_DATE,'DDMONYY')  AS preManFlt,
			  DENSE_RANK() OVER (PARTITION BY AWB_NO, AWB_DATE ORDER BY OPR.ACT_DATE,PKG_COMMON.GET_FLT_ATA(OPR.FLT_KEY,OPR.SCH_DATE, 'D', 'DD'), OPR.TR_NO) AS STATUS
			FROM FLT_OPR OPR join flt_opr_events event on event.flt_key=opr.flt_key
			JOIN
			  ( SELECT AWB_NO, AWB_DATE, FLT_KEY, FLT_DATE FROM EXP_PMANIFEST_AWB
			  UNION
			  SELECT AWB_NO, AWB_DATE, FLT_KEY, FLT_DATE FROM EXP_PMAN_TARMAC_AWB
			  ) PMAN
			ON PMAN.AWB_NO     = #AWB_NO#
			AND PMAN.AWB_DATE  = To_date(#AWB_DATE#,'DDMONYY')
			WHERE PMAN.FLT_KEY = OPR.FLT_KEY
			AND PMAN.FLT_DATE  = OPR.SCH_DATE
			AND OPR.ACT_DATE  IS NOT NULL
			AND event.flt_type='D' AND event.ctm_out_date is null
			ORDER BY status
			)
			select preManFlt,STATUS from PreMan group by preManFlt,STATUS order by STATUS
    </select>
    
    <select id="getItemCharge" parameterClass="java.util.HashMap" resultClass="java.lang.String">
    		SELECT BILL_ITM_RATE.UNIT_PRICE AS amount
			FROM BILL_ITM_RATE
			WHERE EFF_DATE &gt;= NVL(
			(SELECT MAX(EFF_DATE) EFF_DATE
		    FROM BILL_ITM_RATE
			WHERE EFF_DATE &lt;= sysdate
			AND UPPER(ITM_CODE) =UPPER(#CHARGE_TYPE#)
			),sysdate)
			AND UPPER(ITM_CODE) =UPPER(#CHARGE_TYPE#)
			ORDER BY EFF_DATE ASC
    </select>
    
    <select id="isAgentHaveCrdt" parameterClass="java.util.HashMap" resultClass="java.lang.String">
    		SELECT MAX(virtual_acc)
			FROM CUST_AGENT_VIRTUAL_CREDIT
			WHERE cust_no=(select max(code) from cust_company where code_desc=#AGENT_NAME#)
			AND carr_code LIKE upper('%'|| #CARR_CODE# ||'%')
   </select>
   
   <select id="getIatacodeForAgent"  parameterClass="java.lang.String" resultClass="java.lang.String">
		select co_iata_code from cust_company where code_desc=#appiontedAgent#
	</select>  
	
	<parameterMap id="prcMapAWBEventArch" class="map" >
		<parameter property="v_awb" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="v_awb_date" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	</parameterMap>
	
	<procedure id="prc_AWBEventArch" parameterMap="prcMapAWBEventArch" >
		{call PRC_AWB_EVENT_ARCH(?,?)}
	</procedure>
	
	<select id="fetchAWBEnqForEventsArch" parameterClass="cargo.cms.awb.bo.AWBInvBO" resultClass="cargo.cms.awb.bo.AWBInvBO">
		SELECT 
     		TO_CHAR( A.CR_DATE, 'DDMONYY HH24:MI:SS' ) AS crDate,
     		A.CR_USER_ID AS crUserId,
     		( select des_tag from his_mst_itm where cod_his_seq_num=b.cod_his_seq_num) AS eventId,
     		DECODE(B.cod_act,'A','ADD','U','UPD','D','DEL') as event,
     		B.DES_HIS_DTS as eventDesc
  		FROM GT_HIS_AWB_EVNT A,GT_HIS_AWB_EVNT_DTL B
  		WHERE B.awb_no= A.awb_no
  			AND B.awb_date = A.awb_date
  			AND A.COD_TRA_SEQ_NUM  = B.COD_TRA_SEQ_NUM
   			AND A.AWB_NO = #awbNo#
    		AND A.AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
    		AND A.MODULE = 'W'
    		AND A.COD_HIS_TYP = 'E'
    	order by A.CR_DATE			   		               
	</select>
	
	<select id="fetchImageVideoList" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO" resultClass="cargo.cms.awb.bo.AWBEnquiryBO">
	SELECT FWSTORAE.img_session_id transactionId,FWSTORAE.IMG_NAME as videoName,(SELECT rule_value FROM cmsrules WHERE rule_code='ImageUploadRootPath')|| FWSTORAE.IMG_PATH as videoPath, 	
    (CASE WHEN (FWSTORAE.aws_upload_date is not null and FWSTORAE.upload_stat is not null and FWSTORAE.upload_stat = 'C') THEN 'AWS' ELSE 'FOLDER' END) imgFrom
		    FROM FW_IMAGE_STORE FWSTORAE WHERE FWSTORAE.img_session_id=#transactionId# and nvl(delete_flag,'N') = 'N'
    		<isEmpty property="showUNMask"> 
    		    <isEmpty property="showEAWBUNMask" prepend="AND">
    			NVL(MASK_IMG_FUN,'N') = 'N' 
    		</isEmpty>
    		</isEmpty>
    		
    		<isEmpty property="showUNMask">
    			<isNotEmpty property="showEAWBUNMask" prepend="AND">
    				(NVL(MASK_IMG_FUN,'N') = 'N'  OR MASK_IMG_FUN = #showEAWBUNMask#)
    			</isNotEmpty>  
    		</isEmpty>
    		
    		<isEmpty property="showEAWBUNMask">
    		<isNotEmpty property="showUNMask" prepend="AND">
    			(NVL(MASK_IMG_FUN,'N') = 'N' OR MASK_IMG_FUN = #showUNMask#)
    		</isNotEmpty> 
    		</isEmpty>

    		<isNotEmpty property="showUNMask">
    			<isNotEmpty property="showEAWBUNMask" prepend="AND">
    				(NVL(MASK_IMG_FUN,'N') = 'N' OR MASK_IMG_FUN = #showUNMask# OR MASK_IMG_FUN = #showEAWBUNMask#)
		</isNotEmpty> 
		</isNotEmpty> 
    		ORDER BY img_upload_date desc
	</select>
	
	<!-- SHC Combination Master-->
	
	<select id="searchEawbSHCList" parameterClass="cargo.cms.admin.bo.MaintainEawbSHCBO"
		resultClass="cargo.cms.admin.bo.MaintainEawbSHCBO">
		<![CDATA[
	    	SELECT
	    	CARR_CODE carrCode, DOC_LINE_NO docLineNo,
	    	SHC1 shc1, SHC2 shc2, SHC3 shc3, SHC4 shc4,
	    	SHC5 shc5, SHC6 shc6, SHC7 shc7, SHC8 shc8, SHC9 shc9,	    	
	    	TO_CHAR(LM_DATE, 'DDMONYY HH24:MI:SS') lastModifiedTime
	    	FROM MAST_SHC_COMBINATION
	    	WHERE CARR_CODE = #carrCode# AND SHC_TYPE = 'EAWB_SHC'	    	
		]]>
	</select>
	
	
	<select id="searchEawbExceptionSHCList" parameterClass="cargo.cms.admin.bo.MaintainEawbSHCBO"
		resultClass="cargo.cms.admin.bo.MaintainEawbSHCBO">
		<![CDATA[
	    	SELECT
	    	CARR_CODE carrCode, DOC_LINE_NO docLineNo,
	    	SHC1 shc1, SHC2 shc2, SHC3 shc3, SHC4 shc4,
	    	SHC5 shc5, SHC6 shc6, SHC7 shc7, SHC8 shc8, SHC9 shc9,	    	
	    	TO_CHAR(LM_DATE, 'DDMONYY HH24:MI:SS') lastModifiedTime
	    	FROM MAST_SHC_COMBINATION
	    	WHERE CARR_CODE = #carrCode# AND SHC_TYPE = 'EAWB_EX_SHC'	    	
		]]>
	</select>
	
	<delete id="deleteEAWBSHCList" parameterClass="cargo.cms.admin.bo.MaintainEawbSHCBO">
		<![CDATA[
	    	DELETE FROM MAST_SHC_COMBINATION WHERE CARR_CODE = #carrCode# AND DOC_LINE_NO = #docLineNo# AND SHC_TYPE = 'EAWB_SHC'
		]]>
	</delete>
	
	<insert id="insertEAWBSHCList" parameterClass="cargo.cms.admin.bo.MaintainEawbSHCBO">
		<![CDATA[
	    	INSERT INTO MAST_SHC_COMBINATION (
	    		CARR_CODE, DOC_LINE_NO,SHC_TYPE,
	    		SHC1, SHC2, SHC3,
	    		SHC4, SHC5, SHC6,
	    		SHC7, SHC8, SHC9,	    		
	    		CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE
	    	) VALUES (
	    		#carrCode#, (
	    			SELECT NVL(MAX(DOC_LINE_NO), 0) + 1 FROM MAST_SHC_COMBINATION WHERE CARR_CODE= #carrCode# AND SHC_TYPE = 'EAWB_SHC'
	    		),'EAWB_SHC',
	    		#shc1#, #shc2#, #shc3#,
	    		#shc4#, #shc5#, #shc6#,
	    		#shc7#, #shc8#, #shc9#,	    	
	    		#userID#, SYSDATE, #userID#, SYSDATE
	    	)
		]]>
	</insert>
	
	<update id="updateEAWBSHCList" parameterClass="cargo.cms.admin.bo.MaintainEawbSHCBO">
		<![CDATA[
	    	UPDATE MAST_SHC_COMBINATION
	    	SET
    		SHC1 = #shc1#, SHC2 = #shc2#, SHC3 = #shc3#,
    		SHC4 = #shc4#, SHC5 = #shc5#, SHC6 = #shc6#,
    		SHC7 = #shc7#, SHC8 = #shc8#, SHC9 = #shc9#,    		
    		LM_USER_ID = #userID#, LM_DATE = SYSDATE
	    	WHERE CARR_CODE = #carrCode# AND DOC_LINE_NO = #docLineNo#  AND SHC_TYPE = 'EAWB_SHC'
		]]>
	</update>
	
	<delete id="deleteEawbExceptionSHCList" parameterClass="cargo.cms.admin.bo.MaintainEawbSHCBO">
		<![CDATA[
	    	DELETE FROM MAST_SHC_COMBINATION WHERE CARR_CODE = #carrCode# AND DOC_LINE_NO = #docLineNo# AND SHC_TYPE = 'EAWB_EX_SHC'
		]]>
	</delete>
	
	<insert id="insertEAWExceptionBSHCList" parameterClass="cargo.cms.admin.bo.MaintainEawbSHCBO">
		<![CDATA[
	    	INSERT INTO MAST_SHC_COMBINATION (
	    		CARR_CODE, DOC_LINE_NO,SHC_TYPE,
	    		SHC1, SHC2, SHC3,
	    		SHC4, SHC5, SHC6,
	    		SHC7, SHC8, SHC9,	    		
	    		CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE
	    	) VALUES (
	    		#carrCode#, (
	    			SELECT NVL(MAX(DOC_LINE_NO), 0) + 1 FROM MAST_SHC_COMBINATION WHERE CARR_CODE= #carrCode# AND SHC_TYPE = 'EAWB_EX_SHC'
	    		),'EAWB_EX_SHC',
	    		#shc1#, #shc2#, #shc3#,
	    		#shc4#, #shc5#, #shc6#,
	    		#shc7#, #shc8#, #shc9#,	    	
	    		#userID#, SYSDATE, #userID#, SYSDATE
	    	)
		]]>
	</insert>
	
	<update id="updateEawbExceptionSHCList" parameterClass="cargo.cms.admin.bo.MaintainEawbSHCBO">
		<![CDATA[
	    	UPDATE MAST_SHC_COMBINATION
	    	SET
    		SHC1 = #shc1#, SHC2 = #shc2#, SHC3 = #shc3#,
    		SHC4 = #shc4#, SHC5 = #shc5#, SHC6 = #shc6#,
    		SHC7 = #shc7#, SHC8 = #shc8#, SHC9 = #shc9#,    		
    		LM_USER_ID = #userID#, LM_DATE = SYSDATE
	    	WHERE CARR_CODE = #carrCode# AND DOC_LINE_NO = #docLineNo#  AND SHC_TYPE = 'EAWB_EX_SHC'
		]]>
	</update>
	
	<select id="sqlGetSHCForEAWB" parameterClass="java.util.Map" resultClass="cargo.cms.common.admin.bo.EawbSHCBO">
			<![CDATA[
		    	SELECT CARR_CODE carrCode,
		    	SPL_CODE1 shc1, SPL_CODE2 shc2, SPL_CODE3 shc3, SPL_CODE4 shc4,
		    	SPL_CODE5 shc5, SPL_CODE6 shc6, SPL_CODE7 shc7, SPL_CODE8 shc8,
		    	SPL_CODE9 shc9
		    	FROM AWB
		    	WHERE AWB_NO = #AWB_NO# AND AWB_DATE = TO_DATE(#AWB_DATE#, 'DDMONYY')
			]]>
	</select>
	
	<select id="sqlGetMaintainEawbSHCForCarrier" parameterClass="java.lang.String" resultClass="cargo.cms.common.admin.bo.EawbSHCBO">
			<![CDATA[
				SELECT shc1 as shc1, shc2 as shc2, shc3 as shc3, shc4 as shc4, shc5 as shc5, shc6 as shc6, shc7 as shc7, shc8 as shc8, shc9 as shc9
				FROM MAST_SHC_COMBINATION where shc_type = 'EAWB_SHC' AND CARR_CODE = #carrCode#	    	
			]]>
	</select>
		
	<select id="sqlGetMaintainEawbExcepSHCForCarrier" parameterClass="java.lang.String"  resultClass="cargo.cms.common.admin.bo.EawbSHCBO">
			<![CDATA[
		    	SELECT shc1 as shc1, shc2 as shc2, shc3 as shc3, shc4 as shc4, shc5 as shc5, shc6 as shc6, shc7 as shc7, shc8 as shc8, shc9 as shc9
				FROM MAST_SHC_COMBINATION where shc_type = 'EAWB_EX_SHC' AND CARR_CODE = #carrCode#
			]]>
	</select>
<select id="getTransFormedPawbCount" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO" resultClass="java.lang.String">
	 select count(DISTINCT TRF_TO_AWB_NO) AS toAwbNo 
   		FROM IMP_TM_TRANSFORM_HD
   		WHERE TRF_FROM_AWB_NO = #awbNo# AND TRF_FROM_AWB_DATE = to_date(#awbDate#,'DDMONYY')
	</select>
	<select id="getTransformedPawbWhenCountIsOne" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO" resultClass="java.lang.String">
	 select TRF_TO_AWB_NO AS toAwbNo 
   		FROM IMP_TM_TRANSFORM_HD
   		WHERE TRF_FROM_AWB_NO = #awbNo# AND TRF_FROM_AWB_DATE = to_date(#awbDate#,'DDMONYY') AND ROWNUM = 1
	</select>	
<select id="getPawbList" parameterClass="cargo.cms.awb.bo.AWBEnquiryConsignmentBO" resultClass="cargo.cms.awb.bo.AWBEnquiryConsignmentBO">
		select DISTINCT substr(TRF_TO_AWB_NO,1,3)||'-'||substr(TRF_TO_AWB_NO,4) AS toAwbNo   FROM IMP_TM_TRANSFORM_HD   WHERE TRF_FROM_AWB_NO = #awbNo# AND TRF_FROM_AWB_DATE = to_date(#awbDate#, 'DDMONYY')
   <!-- group by TRF_TO_AWB_NO -->
   </select>
		
	<select id="sqlquerygetawblistforgeneral" parameterClass="java.lang.String" resultClass="cargo.cms.awb.bo.AWBEnquiryBO">
	<![CDATA[
		SELECT AWB_NO as awbNo,DEST as awbDest,FLT_KEY||'/'||TO_CHAR(FLT_DATE,'DDMONYY') as fltKey FROM imp_xps_obc_mail WHERE TAG_NO=#PARAM# and awb_no is not null
		 ]]>
   </select>	
	<select id="getAWSPendingList" parameterClass="cargo.cms.common.utils.bo.CommonUtilFunBO" resultClass="cargo.cms.common.utils.bo.CommonUtilFunBO">
		<![CDATA[
		SELECT * FROM (SELECT IMG_PATH AS imgPath,IMG_UPLOAD_DATE AS imgUploadDate,IMG_SESSION_ID AS imgSessionId,IMG_NAME AS imgName 
		FROM FW_IMAGE_STORE WHERE UPLOAD_STAT is not null AND UPLOAD_STAT IN ('P','E') and nvl(delete_flag,'N') = 'N' AND img_size > 0) B
        WHERE ROWNUM<=(SELECT RULE_VALUE FROM CMSRULES WHERE RULE_CODE='AWS_JOB_FILES_TRANS_CONFIG')
        ]]>  
   	</select>
   	<update id="updateAWSFileStat" parameterClass="cargo.cms.common.utils.bo.CommonUtilFunBO">
		UPDATE FW_IMAGE_STORE SET AWS_UPLOAD_DATE=SYSDATE,UPLOAD_STAT=#fileStatus#,IMG_PATH=NVL(#awsImagePath#,IMG_PATH) WHERE IMG_SESSION_ID=#imgSessionId# AND IMG_NAME=#imgName#  
	</update>
<select id="checkPmanJodHDRecord" parameterClass="cargo.cms.common.utils.bo.CommonUtilFunBO"  resultClass="java.lang.Integer">
   SELECT COUNT(1) FROM EXP_AWB_LIGHT_SIGNAL_HD WHERE FLT_KEY=#fltKey# AND FLT_DATE=#depDate# AND unldg_pt=#unldgPt#
   </select>
   <select id="getOldJobOrderColor" parameterClass="java.lang.String"  resultClass="java.lang.String">
   SELECT LIGHT_SIGNAL FROM EXP_AWB_LIGHT_SIGNAL_DTL WHERE SEQ_NO=#PARAM#
   </select>
   <select id="checkPmanJoddtlRecord" parameterClass="cargo.cms.common.utils.bo.CommonUtilFunBO"  resultClass="java.lang.String">
   SELECT SEQ_NO FROM EXP_AWB_LIGHT_SIGNAL_DTL WHERE FLT_KEY=#fltKey# AND FLT_DATE=#depDate# AND unldg_pt=#unldgPt# AND AWB_NO=#awbNo# AND AWB_DATE=#awbDate#
   </select>	
   <delete id="sqlDeletePmanJobRemarkDtl" parameterClass="cargo.cms.common.utils.bo.CommonUtilFunBO">
	DELETE FROM EXP_AWB_LIGHT_SIGNAL_RMK WHERE SEQ_NO IN (SELECT SEQ_NO FROM EXP_AWB_LIGHT_SIGNAL_DTL WHERE FLT_KEY=#fltKey# AND FLT_DATE=#depDate# AND unldg_pt=#unldgPt# AND AWB_NO=#awbNo# AND AWB_DATE=#awbDate#)
	</delete>
   <insert id="sqlInsertautoPmanJobHD" parameterClass="cargo.cms.common.utils.bo.CommonUtilFunBO">
   INSERT INTO EXP_AWB_LIGHT_SIGNAL_HD (FLT_KEY,FLT_DATE,UNLDG_PT,LAST_RUN_TIME,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE) VALUES (#fltKey#,#depDate#,#unldgPt#,NVL(TO_DATE(#jobStartTime#,'DDMONYY HH24:MI'),SYSDATE),'SYSTEM',SYSDATE,'SYSTEM',SYSDATE)
   </insert>
	<insert id="sqlInsertautoPmanJobDTL" parameterClass="cargo.cms.common.utils.bo.CommonUtilFunBO">
   INSERT INTO EXP_AWB_LIGHT_SIGNAL_DTL (SEQ_NO,FLT_KEY,FLT_DATE,UNLDG_PT,AWB_NO,AWB_DATE,LIGHT_SIGNAL,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,TR_TYPE) VALUES (#jobDtlTrNo#,#fltKey#,#depDate#,#unldgPt#,#awbNo#,#awbDate#,#lightSignal#,'SYSTEM',SYSDATE,'SYSTEM',SYSDATE,'LSNAL')
   </insert>
	<update id="sqlUpdateautoPmanJobDTL" parameterClass="cargo.cms.common.utils.bo.CommonUtilFunBO">
		UPDATE EXP_AWB_LIGHT_SIGNAL_DTL SET LIGHT_SIGNAL = #lightSignal#,TR_TYPE='LSNAL',LM_USER_ID='SYSTEM',LM_DATE=SYSDATE WHERE	FLT_KEY=#fltKey# AND FLT_DATE=#depDate# AND unldg_pt=#unldgPt# AND AWB_NO=#awbNo# AND AWB_DATE=#awbDate#  
	</update>
	<insert id="sqlInsertautoPmanJobRmkDTL" parameterClass="cargo.cms.common.utils.bo.CommonUtilFunBO">
     INSERT INTO EXP_AWB_LIGHT_SIGNAL_RMK (SEQ_NO,RMK_TR_NO,REMARKS,ULD_KEY,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE) VALUES (#jobDtlTrNo#,EXP_AWB_LHT_SIGN_RMK_SEQ_NO.nextval,#remarks#,#uldKey#,'SYSTEM',SYSDATE,'SYSTEM',SYSDATE)
   </insert>
   <update id="sqlUpdateautoPmanIndJobDTL" parameterClass="cargo.cms.common.utils.bo.CommonUtilFunBO">
		UPDATE EXP_AWB_LIGHT_SIGNAL_DTL SET PMAN_IND = 'Y' WHERE	FLT_KEY=#fltKey# AND FLT_DATE=#depDate# AND unldg_pt=#unldgPt# AND AWB_NO=#awbNo# AND AWB_DATE=#awbDate#  
	</update>
	 <update id="sqlUpdateautoLightSymbolJobDTL" parameterClass="cargo.cms.common.utils.bo.CommonUtilFunBO">
		UPDATE EXP_AWB_LIGHT_SIGNAL_DTL SET light_symbol = 'Y' WHERE	FLT_KEY=#fltKey# AND FLT_DATE=#depDate# AND unldg_pt=#unldgPt# AND AWB_NO=#awbNo# AND AWB_DATE=#awbDate#  
	</update>
	<update id="sqlUpdateautoLightSymbolJobDTLtoN" parameterClass="cargo.cms.common.utils.bo.CommonUtilFunBO">
		UPDATE EXP_AWB_LIGHT_SIGNAL_DTL SET light_symbol = 'N' WHERE	FLT_KEY=#fltKey# AND FLT_DATE=#depDate# AND unldg_pt=#unldgPt# AND AWB_NO=#awbNo# AND AWB_DATE=#awbDate#  
	</update>
	<update id="sqlUpdateautoPmanlastruntimeHD" parameterClass="cargo.cms.common.utils.bo.CommonUtilFunBO">
		UPDATE EXP_AWB_LIGHT_SIGNAL_HD SET LAST_PMAN_RUN_TIME = NVL(TO_DATE(#jobStartTime#,'DDMONYY HH24:MI'),SYSDATE) WHERE	FLT_KEY=#fltKey# AND FLT_DATE=#depDate# AND unldg_pt=#unldgPt#  
	</update>
	<update id="sqlUpdateautolasTruntimeHD" parameterClass="cargo.cms.common.utils.bo.CommonUtilFunBO">
		UPDATE EXP_AWB_LIGHT_SIGNAL_HD SET LAST_RUN_TIME = NVL(TO_DATE(#jobStartTime#,'DDMONYY HH24:MI'),SYSDATE) WHERE	FLT_KEY=#fltKey# AND FLT_DATE=#depDate# AND unldg_pt=#unldgPt#  
	</update>
	
	<select id="autoPmanMasterConfigforDailyFlight" parameterClass="map" resultClass="cargo.cms.common.utils.bo.CommonUtilFunBO">
	SELECT LIGHT_SIGNAL as lightInd,AUTO_PMAN as autoPmanInd  FROM FLT_OPR_EVENTS FEVENT
          WHERE FEVENT.FLT_KEY = #fltKey# AND FEVENT.SCH_DATE = #fltDate#  AND FEVENT.FLT_TYPE ='D'
	</select>
	<select id="autoPmanMasterConfigforFlight" parameterClass="map" resultClass="cargo.cms.common.utils.bo.CommonUtilFunBO">
	SELECT LIGHT_IND as lightInd,AUTO_PMAN_IND as autoPmanInd  FROM MAST_AIRLN_CONFIG_DTL CONFIGDTL
    WHERE CONFIGDTL.CODE_TYPE=#fltKey#
    AND TO_DATE(#fltDate#,'DDMONYY') BETWEEN CONFIGDTL.EFF_DATE_FROM AND CONFIGDTL.EFF_DATE_TO
    AND CONFIGDTL.CARR_CODE =#fltCarr#
	</select>
	<select id="autoPmanMastergetUnldngList" parameterClass="map" resultClass="cargo.cms.common.utils.bo.CommonUtilFunBO">
	SELECT DISTINCT b.UNLDG_PT AS unldgPt FROM EDI_FBL a, EDI_FBL_SHP b WHERE a.TR_NO=b.TR_NO
	AND A.FLT_KEY = #fltKey# AND A.FLT_DATE=#fltDate#
	AND A.FBL_STATUS='P'
	</select>
	<select id="autoPmanMasterConfigforPort" parameterClass="map" resultClass="cargo.cms.common.utils.bo.CommonUtilFunBO">
	SELECT LIGHT_IND as lightInd,AUTO_PMAN_IND as autoPmanInd FROM MAST_AIRLN_CONFIG_DTL CONFIGDTL
    WHERE CONFIGDTL.CODE_TYPE=#unldgPt#
    AND CONFIGDTL.CARR_CODE =#fltCarr#
	</select>
	<select id="autoPmanMasterConfigforCountry" parameterClass="map" resultClass="cargo.cms.common.utils.bo.CommonUtilFunBO">
	SELECT LIGHT_IND as lightInd,AUTO_PMAN_IND as autoPmanInd FROM MAST_AIRLN_CONFIG_DTL CONFIGDTL
    WHERE CONFIGDTL.CODE_TYPE= (SELECT CTRY_CODE FROM MAST_CITY WHERE CODE=#unldgPt#)
    AND CONFIGDTL.CARR_CODE =#fltCarr#
    </select>
    <select id="autoPmanMasterConfigforCarrier" parameterClass="map" resultClass="cargo.cms.common.utils.bo.CommonUtilFunBO">
	SELECT PMAN_LIGHT_IND as lightInd,AUTO_PMAN_IND as autoPmanInd
  	FROM MAST_CARRIER WHERE CODE = #fltCarr#
    </select>
	
   <select id="fetchFlightLightCountforRefresh" parameterClass="cargo.cms.common.utils.bo.CommonUtilFunBO"  resultClass="cargo.cms.common.utils.bo.CommonUtilFunBO">
   <![CDATA[
   SELECT DISTINCT FLT.carr_code   as fltCarr,
  FLT.flt_no as fltNO,
  FLT.flt_key                                          AS fltKey,
  TO_CHAR(FLT.SCH_date,'DDMONYY')                      AS depDate
FROM edi_fbl,
  FLT_OPR FLT,
  FLT_OPR_EVENTS EVENT
WHERE edi_fbl.fbl_status = 'P'
AND EVENT.tr_no         = FLT.tr_no
AND flt.FLT_KEY         = edi_fbl.flt_key
AND flt.SCH_DATE        = edi_fbl.flt_date
AND flt.Flt_Type        = 'D'
AND EXISTS (SELECT NULL FROM CMSRULES WHERE RULE_CODE='LIGHT_SYS_ENGINE' AND NVL(RULE_VALUE,'N')='Y')
AND ( (((TO_NUMBER(TO_DATE((NVL(to_char(flt.EST_DATE,'DDMONYY'), to_char(flt.SCH_DATE,'DDMONYY'))  || ' '  || TO_CHAR(NVL(flt.EST_TIME, flt.SCH_TIME), '0000')), 'DDMONYY HH24MI')-SYSDATE)*24*60) BETWEEN #fltFromConfigfor20min# AND #fltToConfigfor20min#)
       AND (NOT EXISTS (SELECT NULL FROM EXP_AWB_LIGHT_SIGNAL_HD JOBHD  WHERE JOBHD.flt_key     = edi_fbl.flt_key  AND JOBHD.flt_date    = edi_fbl.flt_date  AND JOBHD.LAST_RUN_TIME IS NOT NULL)
             OR (EXISTS (SELECT NULL  FROM EXP_AWB_LIGHT_SIGNAL_HD JOBHD  WHERE JOBHD.flt_key     = edi_fbl.flt_key  AND JOBHD.flt_date    = edi_fbl.flt_date  AND JOBHD.LAST_RUN_TIME IS NOT NULL
                        AND (((SYSDATE -  (SELECT MAX(JOBHD.LAST_RUN_TIME)  FROM EXP_AWB_LIGHT_SIGNAL_HD JOBHD  WHERE JOBHD.flt_key     = edi_fbl.flt_key  AND JOBHD.flt_date    = edi_fbl.flt_date  AND JOBHD.LAST_RUN_TIME IS NOT NULL
                             ))*24*60)             >= 20)))))
       OR
       (((TO_NUMBER(TO_DATE((NVL(to_char(flt.EST_DATE,'DDMONYY'), to_char(flt.SCH_DATE,'DDMONYY'))  || ' '  || TO_CHAR(NVL(flt.EST_TIME, flt.SCH_TIME), '0000')), 'DDMONYY HH24MI')-SYSDATE)*24*60) BETWEEN #fltFromConfigfor15min# AND #fltToConfigfor15min#)
       AND (NOT EXISTS (SELECT NULL FROM EXP_AWB_LIGHT_SIGNAL_HD JOBHD  WHERE JOBHD.flt_key     = edi_fbl.flt_key  AND JOBHD.flt_date    = edi_fbl.flt_date  AND JOBHD.LAST_RUN_TIME IS NOT NULL)
             OR (EXISTS (SELECT NULL  FROM EXP_AWB_LIGHT_SIGNAL_HD JOBHD  WHERE JOBHD.flt_key     = edi_fbl.flt_key  AND JOBHD.flt_date    = edi_fbl.flt_date  AND JOBHD.LAST_RUN_TIME IS NOT NULL
                        AND (((SYSDATE -  (SELECT MAX(JOBHD.LAST_RUN_TIME)  FROM EXP_AWB_LIGHT_SIGNAL_HD JOBHD  WHERE JOBHD.flt_key     = edi_fbl.flt_key  AND JOBHD.flt_date    = edi_fbl.flt_date  AND JOBHD.LAST_RUN_TIME IS NOT NULL
                             ))*24*60)             >= 15)))))
        OR
       (((TO_NUMBER(TO_DATE((NVL(to_char(flt.EST_DATE,'DDMONYY'), to_char(flt.SCH_DATE,'DDMONYY'))  || ' '  || TO_CHAR(NVL(flt.EST_TIME, flt.SCH_TIME), '0000')), 'DDMONYY HH24MI')-SYSDATE)*24*60) BETWEEN #fltFromConfigfor10min# AND #fltToConfigfor10min#)
       AND (NOT EXISTS (SELECT NULL FROM EXP_AWB_LIGHT_SIGNAL_HD JOBHD  WHERE JOBHD.flt_key     = edi_fbl.flt_key  AND JOBHD.flt_date    = edi_fbl.flt_date  AND JOBHD.LAST_RUN_TIME IS NOT NULL)
             OR (EXISTS (SELECT NULL  FROM EXP_AWB_LIGHT_SIGNAL_HD JOBHD  WHERE JOBHD.flt_key     = edi_fbl.flt_key  AND JOBHD.flt_date    = edi_fbl.flt_date  AND JOBHD.LAST_RUN_TIME IS NOT NULL
                        AND (((SYSDATE -  (SELECT MAX(JOBHD.LAST_RUN_TIME)  FROM EXP_AWB_LIGHT_SIGNAL_HD JOBHD  WHERE JOBHD.flt_key     = edi_fbl.flt_key  AND JOBHD.flt_date    = edi_fbl.flt_date  AND JOBHD.LAST_RUN_TIME IS NOT NULL
                             ))*24*60)             >= 10)))))
        OR
       (((TO_NUMBER(TO_DATE((NVL(to_char(flt.EST_DATE,'DDMONYY'), to_char(flt.SCH_DATE,'DDMONYY'))  || ' '  || TO_CHAR(NVL(flt.EST_TIME, flt.SCH_TIME), '0000')), 'DDMONYY HH24MI')-SYSDATE)*24*60) BETWEEN #fltFromConfigfor5min# AND #fltToConfigfor5min#)
       AND (NOT EXISTS (SELECT NULL FROM EXP_AWB_LIGHT_SIGNAL_HD JOBHD  WHERE JOBHD.flt_key     = edi_fbl.flt_key  AND JOBHD.flt_date    = edi_fbl.flt_date  AND JOBHD.LAST_RUN_TIME IS NOT NULL)
             OR (EXISTS (SELECT NULL  FROM EXP_AWB_LIGHT_SIGNAL_HD JOBHD  WHERE JOBHD.flt_key     = edi_fbl.flt_key  AND JOBHD.flt_date    = edi_fbl.flt_date  AND JOBHD.LAST_RUN_TIME IS NOT NULL
                        AND (((SYSDATE -  (SELECT MAX(JOBHD.LAST_RUN_TIME)  FROM EXP_AWB_LIGHT_SIGNAL_HD JOBHD  WHERE JOBHD.flt_key     = edi_fbl.flt_key  AND JOBHD.flt_date    = edi_fbl.flt_date  AND JOBHD.LAST_RUN_TIME IS NOT NULL
                             ))*24*60)             >= 5)))))
        
    )
  AND FLT.FLT_KEY = #fltKey#
AND FLT.SCH_DATE = #depDate#
AND FLT.FLT_TYPE='D'
  ]]>
   </select>
   <select id="fetchfblFlightListforlatestflight" parameterClass="cargo.cms.common.utils.bo.CommonUtilFunBO"  resultClass="cargo.cms.common.utils.bo.CommonUtilFunBO">
   SELECT A.fltCarr AS fltCarr,A.fltKey AS fltKey,A.depDate AS depDate,A.unldgPt AS unldgPt,OPR.EST_DATE,OPR.SCH_DATE,OPR.EST_TIME, OPR.SCH_TIME FROM (
  SELECT FLT.carr_code   as fltCarr,
  FLT.flt_key                                          AS fltKey,
  TO_CHAR(FLT.SCH_date,'DDMONYY')                      AS depDate,
  edi_fbl.LDG_PT                                       AS unldgPt
FROM edi_fbl,
     edi_fbl_shp fblshp,
  FLT_OPR FLT,
  FLT_OPR_EVENTS EVENT
WHERE edi_fbl.fbl_status = 'P'
and fblshp.TR_NO = edi_fbl.tr_no
AND EVENT.tr_no         = FLT.tr_no
AND flt.FLT_KEY         = edi_fbl.flt_key
AND flt.SCH_DATE        = edi_fbl.flt_date
AND fblshp.AWB_NO=#awbNo# AND fblshp.AWB_DATE=TO_DATE(#awbDate#,'DDMONYY')
AND flt.Flt_Type        = 'D'
AND EXISTS (SELECT NULL FROM CMSRULES WHERE RULE_CODE='AUTO_PMAN' AND NVL(RULE_VALUE,'N')='Y')
AND EXISTS (SELECT NULL FROM exp_awb_light_signal_dtl signal WHERE signal.FLT_KEY=FLT.flt_key AND signal.FLT_DATE=FLT.SCH_date 
      AND signal.UNLDG_PT=fblshp.unldg_pt AND signal.AWB_NO = fblshp.awb_no AND signal.AWB_DATE=fblshp.awb_date AND signal.light_signal = 'GREEN'
      AND signal.light_signal IS NOT NULL AND ((signal.PMAN_IND='N' AND signal.PMAN_IND IS NOT NULL) OR signal.PMAN_IND IS NULL))
      AND NOT EXISTS (SELECT NULL FROM EXP_PMANIFEST_AWB_FIRST PMAN WHERE PMAN.FLT_KEY=FLT.flt_key AND PMAN.FLT_DATE=FLT.SCH_date 
      AND PMAN.UNLDG_PT=fblshp.unldg_pt AND PMAN.AWB_NO = fblshp.awb_no AND PMAN.AWB_DATE=fblshp.awb_date)
AND EXISTS (SELECT NULL FROM EXP_AWB_LIGHT_SIGNAL_HD HD,EXP_AWB_LIGHT_SIGNAL_DTL DTL
WHERE DTL.FLT_KEY = HD.FLT_KEY AND DTL.FLT_DATE = HD.FLT_DATE AND DTL.UNLDG_PT = HD.UNLDG_PT AND LIGHT_SIGNAL='GREEN' 
AND HD.FLT_KEY    =edi_fbl.flt_key AND HD.FLT_DATE     =edi_fbl.flt_date
AND ((PMAN_IND='N' AND PMAN_IND IS NOT NULL) OR PMAN_IND IS NULL))
AND FLT.FLT_TYPE='D') A
  JOIN FLT_OPR OPR ON OPR.FLT_KEY = fltKey AND OPR.SCH_DATE = to_date(depDate,'DDMONYY') AND OPR.Flt_Type = 'D'
  ORDER BY TO_DATE( ( to_char(NVL(OPR.EST_DATE,OPR.SCH_DATE),'DDMONYY') || ' ' || TO_CHAR(NVL(OPR.EST_TIME, OPR.SCH_TIME), '0000')), 'DDMONYY HH24MI') ASC
   </select>
   <select id="fetchFlightLightSignalList" parameterClass="cargo.cms.common.utils.bo.CommonUtilFunBO"  resultClass="cargo.cms.common.utils.bo.CommonUtilFunBO">
   <![CDATA[
   SELECT DISTINCT A.*,OPR.EST_DATE,OPR.SCH_DATE,OPR.EST_TIME, OPR.SCH_TIME FROM (
   SELECT FLT.carr_code   as fltCarr,
  FLT.flt_no as fltNO,
  FLT.flt_key                                          AS fltKey,
  TO_CHAR(FLT.SCH_date,'DDMONYY')                      AS depDate,
  edi_fbl.LDG_PT                                           AS unldgPt
FROM edi_fbl,
  FLT_OPR FLT,
  FLT_OPR_EVENTS EVENT
WHERE edi_fbl.fbl_status = 'P'
AND EVENT.tr_no         = FLT.tr_no
AND flt.FLT_KEY         = edi_fbl.flt_key
AND flt.SCH_DATE        = edi_fbl.flt_date
AND flt.Flt_Type        = 'D'
AND EXISTS (SELECT NULL FROM CMSRULES WHERE RULE_CODE='LIGHT_SYS_ENGINE' AND NVL(RULE_VALUE,'N')='Y')
AND ( (((TO_NUMBER(TO_DATE((NVL(to_char(flt.EST_DATE,'DDMONYY'), to_char(flt.SCH_DATE,'DDMONYY'))  || ' '  || TO_CHAR(NVL(flt.EST_TIME, flt.SCH_TIME), '0000')), 'DDMONYY HH24MI')-SYSDATE)*24*60) BETWEEN #fltFromConfigfor20min# AND #fltToConfigfor20min#)
       AND (NOT EXISTS (SELECT NULL FROM EXP_AWB_LIGHT_SIGNAL_HD JOBHD  WHERE JOBHD.flt_key     = edi_fbl.flt_key  AND JOBHD.flt_date    = edi_fbl.flt_date  AND JOBHD.LAST_RUN_TIME IS NOT NULL)
             OR (EXISTS (SELECT NULL  FROM EXP_AWB_LIGHT_SIGNAL_HD JOBHD  WHERE JOBHD.flt_key     = edi_fbl.flt_key  AND JOBHD.flt_date    = edi_fbl.flt_date  AND JOBHD.LAST_RUN_TIME IS NOT NULL
                        AND (((SYSDATE -  (SELECT MAX(JOBHD.LAST_RUN_TIME)  FROM EXP_AWB_LIGHT_SIGNAL_HD JOBHD  WHERE JOBHD.flt_key     = edi_fbl.flt_key  AND JOBHD.flt_date    = edi_fbl.flt_date  AND JOBHD.LAST_RUN_TIME IS NOT NULL
                             ))*24*60)             >= 20)))))
       OR
       (((TO_NUMBER(TO_DATE((NVL(to_char(flt.EST_DATE,'DDMONYY'), to_char(flt.SCH_DATE,'DDMONYY'))  || ' '  || TO_CHAR(NVL(flt.EST_TIME, flt.SCH_TIME), '0000')), 'DDMONYY HH24MI')-SYSDATE)*24*60) BETWEEN #fltFromConfigfor15min# AND #fltToConfigfor15min#)
       AND (NOT EXISTS (SELECT NULL FROM EXP_AWB_LIGHT_SIGNAL_HD JOBHD  WHERE JOBHD.flt_key     = edi_fbl.flt_key  AND JOBHD.flt_date    = edi_fbl.flt_date  AND JOBHD.LAST_RUN_TIME IS NOT NULL)
             OR (EXISTS (SELECT NULL  FROM EXP_AWB_LIGHT_SIGNAL_HD JOBHD  WHERE JOBHD.flt_key     = edi_fbl.flt_key  AND JOBHD.flt_date    = edi_fbl.flt_date  AND JOBHD.LAST_RUN_TIME IS NOT NULL
                        AND (((SYSDATE -  (SELECT MAX(JOBHD.LAST_RUN_TIME)  FROM EXP_AWB_LIGHT_SIGNAL_HD JOBHD  WHERE JOBHD.flt_key     = edi_fbl.flt_key  AND JOBHD.flt_date    = edi_fbl.flt_date  AND JOBHD.LAST_RUN_TIME IS NOT NULL
                             ))*24*60)             >= 15)))))
        OR
       (((TO_NUMBER(TO_DATE((NVL(to_char(flt.EST_DATE,'DDMONYY'), to_char(flt.SCH_DATE,'DDMONYY'))  || ' '  || TO_CHAR(NVL(flt.EST_TIME, flt.SCH_TIME), '0000')), 'DDMONYY HH24MI')-SYSDATE)*24*60) BETWEEN #fltFromConfigfor10min# AND #fltToConfigfor10min#)
       AND (NOT EXISTS (SELECT NULL FROM EXP_AWB_LIGHT_SIGNAL_HD JOBHD  WHERE JOBHD.flt_key     = edi_fbl.flt_key  AND JOBHD.flt_date    = edi_fbl.flt_date  AND JOBHD.LAST_RUN_TIME IS NOT NULL)
             OR (EXISTS (SELECT NULL  FROM EXP_AWB_LIGHT_SIGNAL_HD JOBHD  WHERE JOBHD.flt_key     = edi_fbl.flt_key  AND JOBHD.flt_date    = edi_fbl.flt_date  AND JOBHD.LAST_RUN_TIME IS NOT NULL
                        AND (((SYSDATE -  (SELECT MAX(JOBHD.LAST_RUN_TIME)  FROM EXP_AWB_LIGHT_SIGNAL_HD JOBHD  WHERE JOBHD.flt_key     = edi_fbl.flt_key  AND JOBHD.flt_date    = edi_fbl.flt_date  AND JOBHD.LAST_RUN_TIME IS NOT NULL
                             ))*24*60)             >= 10)))))
        OR
       (((TO_NUMBER(TO_DATE((NVL(to_char(flt.EST_DATE,'DDMONYY'), to_char(flt.SCH_DATE,'DDMONYY'))  || ' '  || TO_CHAR(NVL(flt.EST_TIME, flt.SCH_TIME), '0000')), 'DDMONYY HH24MI')-SYSDATE)*24*60) BETWEEN #fltFromConfigfor5min# AND #fltToConfigfor5min#)
       AND (NOT EXISTS (SELECT NULL FROM EXP_AWB_LIGHT_SIGNAL_HD JOBHD  WHERE JOBHD.flt_key     = edi_fbl.flt_key  AND JOBHD.flt_date    = edi_fbl.flt_date  AND JOBHD.LAST_RUN_TIME IS NOT NULL)
             OR (EXISTS (SELECT NULL  FROM EXP_AWB_LIGHT_SIGNAL_HD JOBHD  WHERE JOBHD.flt_key     = edi_fbl.flt_key  AND JOBHD.flt_date    = edi_fbl.flt_date  AND JOBHD.LAST_RUN_TIME IS NOT NULL
                        AND (((SYSDATE -  (SELECT MAX(JOBHD.LAST_RUN_TIME)  FROM EXP_AWB_LIGHT_SIGNAL_HD JOBHD  WHERE JOBHD.flt_key     = edi_fbl.flt_key  AND JOBHD.flt_date    = edi_fbl.flt_date  AND JOBHD.LAST_RUN_TIME IS NOT NULL
                             ))*24*60)             >= 5)))))
        
    ) )A
  JOIN FLT_OPR OPR ON OPR.FLT_KEY = fltKey AND OPR.SCH_DATE = to_date(depDate,'DDMONYY') AND OPR.Flt_Type = 'D'
  ORDER BY TO_DATE( ( to_char(NVL(OPR.EST_DATE,OPR.SCH_DATE),'DDMONYY') || ' ' || TO_CHAR(NVL(OPR.EST_TIME, OPR.SCH_TIME), '0000')), 'DDMONYY HH24MI') ASC
  ]]>
   </select>
   
   <select id="fetchAutoPmanFlightList" parameterClass="cargo.cms.common.utils.bo.CommonUtilFunBO"  resultClass="cargo.cms.common.utils.bo.CommonUtilFunBO">
   SELECT DISTINCT * FROM (
  SELECT 
  FLT.carr_code   as fltCarr,
  FLT.flt_no as fltNO,
  FLT.flt_key                                          AS fltKey,
  TO_CHAR(FLT.SCH_date,'DDMONYY')                      AS depDate,
  edi_fbl.LDG_PT                                       AS unldgPt
FROM edi_fbl,
  FLT_OPR FLT,
  FLT_OPR_EVENTS EVENT
WHERE edi_fbl.fbl_status = 'P'
AND EVENT.tr_no         = FLT.tr_no
AND flt.FLT_KEY         = edi_fbl.flt_key
AND flt.SCH_DATE        = edi_fbl.flt_date
AND flt.Flt_Type        = 'D'
AND EXISTS (SELECT NULL FROM CMSRULES WHERE RULE_CODE='AUTO_PMAN' AND NVL(RULE_VALUE,'N')='Y')
AND ( (((TO_NUMBER(TO_DATE((NVL(flt.EST_DATE, flt.SCH_DATE)  || ' '  || TO_CHAR(NVL(flt.EST_TIME, flt.SCH_TIME), '0000')), 'DD-MON-YY HH24MI')-SYSDATE)*24*60) BETWEEN #fltFromConfigfor20min# AND #fltToConfigfor20min#)
       AND (NOT EXISTS (SELECT NULL FROM EXP_AWB_LIGHT_SIGNAL_HD JOBHD  WHERE JOBHD.flt_key     = edi_fbl.flt_key  AND JOBHD.flt_date    = edi_fbl.flt_date  AND JOBHD.LAST_PMAN_RUN_TIME IS NOT NULL)
             OR (EXISTS (SELECT NULL  FROM EXP_AWB_LIGHT_SIGNAL_HD JOBHD  WHERE JOBHD.flt_key     = edi_fbl.flt_key  AND JOBHD.flt_date    = edi_fbl.flt_date  AND JOBHD.LAST_PMAN_RUN_TIME IS NOT NULL
                        AND (((SYSDATE -  (SELECT MAX(JOBHD.LAST_PMAN_RUN_TIME)  FROM EXP_AWB_LIGHT_SIGNAL_HD JOBHD  WHERE JOBHD.flt_key     = edi_fbl.flt_key  AND JOBHD.flt_date    = edi_fbl.flt_date  AND JOBHD.LAST_PMAN_RUN_TIME IS NOT NULL
                             ))*24*60)             >= 20)))))
       OR
       (((TO_NUMBER(TO_DATE((NVL(flt.EST_DATE, flt.SCH_DATE)  || ' '  || TO_CHAR(NVL(flt.EST_TIME, flt.SCH_TIME), '0000')), 'DD-MON-YY HH24MI')-SYSDATE)*24*60) BETWEEN #fltFromConfigfor15min# AND #fltToConfigfor15min#)
       AND (NOT EXISTS (SELECT NULL FROM EXP_AWB_LIGHT_SIGNAL_HD JOBHD  WHERE JOBHD.flt_key     = edi_fbl.flt_key  AND JOBHD.flt_date    = edi_fbl.flt_date  AND JOBHD.LAST_PMAN_RUN_TIME IS NOT NULL)
             OR (EXISTS (SELECT NULL  FROM EXP_AWB_LIGHT_SIGNAL_HD JOBHD  WHERE JOBHD.flt_key     = edi_fbl.flt_key  AND JOBHD.flt_date    = edi_fbl.flt_date  AND JOBHD.LAST_PMAN_RUN_TIME IS NOT NULL
                        AND (((SYSDATE -  (SELECT MAX(JOBHD.LAST_PMAN_RUN_TIME)  FROM EXP_AWB_LIGHT_SIGNAL_HD JOBHD  WHERE JOBHD.flt_key     = edi_fbl.flt_key  AND JOBHD.flt_date    = edi_fbl.flt_date  AND JOBHD.LAST_PMAN_RUN_TIME IS NOT NULL
                             ))*24*60)             >= 15)))))
        OR
       (((TO_NUMBER(TO_DATE((NVL(flt.EST_DATE, flt.SCH_DATE)  || ' '  || TO_CHAR(NVL(flt.EST_TIME, flt.SCH_TIME), '0000')), 'DD-MON-YY HH24MI')-SYSDATE)*24*60) BETWEEN #fltFromConfigfor10min# AND #fltToConfigfor10min#)
       AND (NOT EXISTS (SELECT NULL FROM EXP_AWB_LIGHT_SIGNAL_HD JOBHD  WHERE JOBHD.flt_key     = edi_fbl.flt_key  AND JOBHD.flt_date    = edi_fbl.flt_date  AND JOBHD.LAST_PMAN_RUN_TIME IS NOT NULL)
             OR (EXISTS (SELECT NULL  FROM EXP_AWB_LIGHT_SIGNAL_HD JOBHD  WHERE JOBHD.flt_key     = edi_fbl.flt_key  AND JOBHD.flt_date    = edi_fbl.flt_date  AND JOBHD.LAST_PMAN_RUN_TIME IS NOT NULL
                        AND (((SYSDATE -  (SELECT MAX(JOBHD.LAST_PMAN_RUN_TIME)  FROM EXP_AWB_LIGHT_SIGNAL_HD JOBHD  WHERE JOBHD.flt_key     = edi_fbl.flt_key  AND JOBHD.flt_date    = edi_fbl.flt_date  AND JOBHD.LAST_PMAN_RUN_TIME IS NOT NULL
                             ))*24*60)             >= 10)))))
        OR
       (((TO_NUMBER(TO_DATE((NVL(flt.EST_DATE, flt.SCH_DATE)  || ' '  || TO_CHAR(NVL(flt.EST_TIME, flt.SCH_TIME), '0000')), 'DD-MON-YY HH24MI')-SYSDATE)*24*60) BETWEEN #fltFromConfigfor5min# AND #fltToConfigfor5min#)
       AND (NOT EXISTS (SELECT NULL FROM EXP_AWB_LIGHT_SIGNAL_HD JOBHD  WHERE JOBHD.flt_key     = edi_fbl.flt_key  AND JOBHD.flt_date    = edi_fbl.flt_date  AND JOBHD.LAST_PMAN_RUN_TIME IS NOT NULL)
             OR (EXISTS (SELECT NULL  FROM EXP_AWB_LIGHT_SIGNAL_HD JOBHD  WHERE JOBHD.flt_key     = edi_fbl.flt_key  AND JOBHD.flt_date    = edi_fbl.flt_date  AND JOBHD.LAST_PMAN_RUN_TIME IS NOT NULL
                        AND (((SYSDATE -  (SELECT MAX(JOBHD.LAST_PMAN_RUN_TIME)  FROM EXP_AWB_LIGHT_SIGNAL_HD JOBHD  WHERE JOBHD.flt_key     = edi_fbl.flt_key  AND JOBHD.flt_date    = edi_fbl.flt_date  AND JOBHD.LAST_PMAN_RUN_TIME IS NOT NULL
                             ))*24*60)             >= 5)))))
        
  )
AND EXISTS (SELECT NULL FROM EXP_AWB_LIGHT_SIGNAL_HD HD,EXP_AWB_LIGHT_SIGNAL_DTL DTL
WHERE DTL.FLT_KEY = HD.FLT_KEY AND DTL.FLT_DATE = HD.FLT_DATE AND DTL.UNLDG_PT = HD.UNLDG_PT AND LIGHT_SIGNAL='GREEN' 
AND HD.FLT_KEY    =edi_fbl.flt_key AND HD.FLT_DATE     =edi_fbl.flt_date)
AND FLT.FLT_KEY = #fltKey#
AND FLT.SCH_DATE = #depDate#
AND FLT.FLT_TYPE='D')
   </select>
   
   <select id="fetchLightSignalforConstraintCode" parameterClass="java.lang.String"  resultClass="java.lang.String">
    SELECT UPPER(COLOR_OF_LIGHT) FROM MAST_CONSTRAINT_CODE WHERE CODE=#PARAM#
   </select>
   <select id="fetchSplCustomPortLoading" parameterClass="cargo.cms.common.utils.bo.CommonUtilFunBO"  resultClass="java.lang.Integer">
    SELECT COUNT(1) FROM FLT_OPR FLTOPR, FLT_OPR_LEG OPRLEG,MAST_AIRLN_CONFIG_DTL MAST 
	WHERE OPRLEG.TR_NO = FLTOPR.TR_NO AND MAST.CARR_CODE=FLTOPR.CARR_CODE AND MAST.CODE_TYPE=OPRLEG.OFF_POINT AND MAST.MAST_TYPE='SPL_CUSTOM_PORT_LDG'
	AND (mast.light_ind IS NULL OR (mast.light_ind IS NOT NULL AND mast.light_ind = 'Y'))
	AND FLTOPR.FLT_KEY=#fltKey# AND FLTOPR.SCH_DATE=#depDate#
   </select>
   <select id="fetchSHCColourforLightSignal" parameterClass="cargo.cms.common.utils.bo.CommonUtilFunBO"  resultClass="java.lang.String">
   SELECT * FROM (
  SELECT a.color_of_light AS colorOfLight
	FROM MAST_SPL_HAND_CODE A,	AWB B
	WHERE A.CODE IN (B.SPL_CODE1,B.SPL_CODE2,B.SPL_CODE3,B.SPL_CODE4,B.SPL_CODE5,B.SPL_CODE6,B.SPL_CODE7,B.SPL_CODE8,B.SPL_CODE9)
  AND a.color_of_light IS NOT NULL
  AND B.AWB_NO       = #awbNo#
	AND B.AWB_DATE  = #awbDate#
  ORDER BY a.priority DESC) AB WHERE ROWNUM=1
   </select>
   <select id="fetchDGSHCforLightSignal" parameterClass="cargo.cms.common.utils.bo.CommonUtilFunBO"  resultClass="cargo.cms.common.utils.bo.CommonUtilFunBO">
   SELECT A.SPL_CODE AS splCode
	FROM CUST_AIRL_SPL_CODE A,
  	AWB B
	WHERE 
  ((A.CARR_CODE  = B.carr_code) OR (B.agent_code is not null and A.CUST_NO = B.AGENT_CODE))
  AND A.spl_type IN ('SPL_DANG','CONFG_OF_SHC')
	AND B.AWB_NO       = #awbNo#
	AND B.AWB_DATE  = #awbDate#
  UNION ALL 
  SELECT  decode(S.spl_code1, null, '', S.spl_code1 || decode(S.spl_code2, null, '', '/'))
		|| decode(S.spl_code2, null, '', S.spl_code2 || decode(S.spl_code3, null, '', '/'))
		|| decode(S.spl_code3, null, '', S.spl_code3 || decode(S.spl_code4, null, '', '/'))
		|| decode(S.spl_code4, null, '', S.spl_code4 || decode(S.spl_code5, null, '', '/'))
		|| decode(S.spl_code5, null, '', S.spl_code5 || decode(S.spl_code6, null, '', '/'))
		|| decode(S.spl_code6, null, '', S.spl_code6 || decode(S.spl_code7, null, '', '/'))
		|| decode(S.spl_code7, null, '', S.spl_code7 || decode(S.spl_code8, null, '', '/'))
		  || decode(S.spl_code8, null, '', S.spl_code8 || decode(S.spl_code9, null, '', '/'))
		|| decode(S.spl_code9, null, '', S.spl_code9) AS splCode 
			FROM CUST_AIRL_COMB_SPL_CODE S,AWB P
        WHERE ((S.CARR_CODE  =P.carr_code) OR (p.agent_code is not null and S.CUST_NO = P.AGENT_CODE))
        AND S.spl_type     IN ('SPL_DANG','CONFG_OF_SHC')
        AND P.AWB_NO       = #awbNo#
        AND P.AWB_DATE  = #awbDate#
   
   </select>
	<select id="fetchAWBLightSignalList" parameterClass="cargo.cms.common.utils.bo.CommonUtilFunBO"  resultClass="cargo.cms.common.utils.bo.CommonUtilFunBO">
	<![CDATA[
	SELECT 
  flt.carr_code   as fltCarr,
  flt.flt_no as fltNO,
  substr(edi_fbl_shp.awb_no,0,3) as awbPfx,
  substr(edi_fbl_shp.awb_no,4) as awbSfx,
  edi_fbl_shp.awb_no                                  AS awbNo,
  TO_CHAR(edi_fbl_shp.awb_date,'DDMONYY')                  AS awbDate,
  edi_fbl.flt_key                                          AS fltKey,
  TO_CHAR(edi_fbl.flt_date,'DDMONYY')                      AS depDate,
  NVL(edi_fbl_shp.pcs,0)                                   AS fblPcs,
  TO_CHAR(NVL(edi_fbl_shp.net_wt,0),'99999999999999990.0') AS fblWt,
  edi_fbl_shp.unldg_pt                                     AS unldgPt,
  A.pcs                                                    AS awbpcs,
  A.wt                                                     AS awbwt,
  (SELECT NVL(SUM(PMAN_PCS),0)
  FROM EXP_PMANIFEST_AWB
  WHERE AWB_NO  =edi_fbl_shp.awb_no
  AND AWB_DATE  = edi_fbl_shp.awb_date
  AND ( FLT_KEY  != edi_fbl.flt_key
  or FLT_DATE != edi_fbl.flt_date
  or unldg_pt != edi_fbl_shp.unldg_pt)
  ) AS existPmaNPc,
  (SELECT TO_CHAR(NVL(SUM(PMAN_WT),0),'99999999999999990.0')
  FROM EXP_PMANIFEST_AWB
  WHERE AWB_NO  =edi_fbl_shp.awb_no
  AND AWB_DATE  = edi_fbl_shp.awb_date
  AND ( FLT_KEY  != edi_fbl.flt_key
  or FLT_DATE != edi_fbl.flt_date
  or unldg_pt != edi_fbl_shp.unldg_pt)
  ) AS existPmanWt,
  DECODE(A.spl_code1, NULL, '', A.spl_code1
  || DECODE(A.spl_code2, NULL, '', '/'))
  || DECODE(A.spl_code2, NULL, '', A.spl_code2
  || DECODE(A.spl_code3, NULL, '', '/'))
  || DECODE(A.spl_code3, NULL, '', A.spl_code3
  || DECODE(A.spl_code4, NULL, '', '/'))
  || DECODE(A.spl_code4, NULL, '', A.spl_code4
  || DECODE(A.spl_code5, NULL, '', '/'))
  || DECODE(A.spl_code5, NULL, '', A.spl_code5
  || DECODE(A.spl_code6, NULL, '', '/'))
  || DECODE(A.spl_code6, NULL, '', A.spl_code6
  || DECODE(A.spl_code7, NULL, '', '/'))
  || DECODE(A.spl_code7, NULL, '', A.spl_code7
  || DECODE(A.spl_code8, NULL, '', '/'))
  || DECODE(A.spl_code8, NULL, '', A.spl_code8
  || DECODE(A.spl_code9, NULL, '', '/'))
  || DECODE(A.spl_code9, NULL, '', A.spl_code9) AS splCode,
  (SELECT cc_code FROM (SELECT t1.cc_code FROM v_cst_cc_code_ALL t1,mast_constraint_code t2 WHERE t1.cc_code = t2.code AND 
   	awb_no = a.awb_no AND NVL(hawb_no, '000000000000000000') = '000000000000000000'  AND AWB_DATE = a.awb_date
   	and t1.flt_key not like 'NB%' ORDER BY recv_date DESC, priority DESC) where rownum = 1) AS latestCc,
  (CASE WHEN (SELECT COUNT(1) FROM CUST_AIRL_SPL_CODE SPLCODE,AWB AWB
	WHERE ((SPLCODE.CARR_CODE  = AWB.carr_code) OR (AWB.agent_code is not null and SPLCODE.CUST_NO = AWB.AGENT_CODE))
	AND SPLCODE.SPL_CODE IN (AWB.SPL_CODE1,AWB.SPL_CODE2,AWB.SPL_CODE3,AWB.SPL_CODE4,AWB.SPL_CODE5,AWB.SPL_CODE6,AWB.SPL_CODE7,AWB.SPL_CODE8,AWB.SPL_CODE9)
  AND SPLCODE.spl_type IN ('CONFG_OF_AUTO_PMAN75') AND AWB.AWB_NO = A.AWB_NO AND AWB.AWB_DATE = A.AWB_DATE) > 0 THEN 'Type1' 
  ELSE CASE WHEN (SELECT COUNT(1) FROM CUST_AIRL_SPL_CODE SPLCODE,AWB AWB
	WHERE ((SPLCODE.CARR_CODE  = AWB.carr_code) OR (AWB.agent_code is not null and SPLCODE.CUST_NO = AWB.AGENT_CODE))
	AND SPLCODE.SPL_CODE IN (AWB.SPL_CODE1,AWB.SPL_CODE2,AWB.SPL_CODE3,AWB.SPL_CODE4,AWB.SPL_CODE5,AWB.SPL_CODE6,AWB.SPL_CODE7,AWB.SPL_CODE8,AWB.SPL_CODE9)
  AND SPLCODE.spl_type IN ('CONFG_OF_AUTO_PMAN90') AND AWB.AWB_NO = A.AWB_NO AND AWB.AWB_DATE = A.AWB_DATE) > 0 THEN 'Type2'
  ELSE CASE WHEN ((A.RCL_PCS-A.RTN_PCS > 0 AND A.RCL_PPK_PCS >0 OR A.RCL_MIX_PCS >0) AND (A.RCL_BULK_PCS =0)) THEN 'Type3' 
  ELSE CASE WHEN (FLT.CGO_ACFT_TYPE = 'FRE' AND A.RCL_BULK_PCS > 0 AND A.RCL_PCS-A.RTN_PCS>0) THEN 'Type4'
  ELSE CASE WHEN (FLT.CGO_ACFT_TYPE != 'FRE' AND A.RCL_BULK_PCS > 0 AND A.RCL_PCS-A.RTN_PCS>0) THEN 'Type5'
  END   END   END   END   END) AS shpType,
  TO_CHAR(((TO_NUMBER(TO_DATE((NVL(to_char(flt.EST_DATE,'DDMONYY'), to_char(flt.SCH_DATE,'DDMONYY')) || ' '
  || TO_CHAR(NVL(flt.EST_TIME, flt.SCH_TIME), '0000')), 'DDMONYY HH24MI')-SYSDATE)*24*60)),'99999999999.99') stdDiff,
   (CASE WHEN (A.AWB_TYPE = 'E' AND A.RCL_BULK_PCS > 0 AND A.RCL_PPK_PCS = 0 AND A.RCL_MIX_PCS = 0) THEN 'AWB'
  ELSE CASE WHEN (A.AWB_TYPE = 'E' AND A.RCL_BULK_PCS > 0 AND (A.RCL_PPK_PCS > 0 OR A.RCL_MIX_PCS > 0)) THEN 'AWB' 
  ELSE CASE WHEN A.AWB_TYPE = 'T' THEN 'AWB' 
  ELSE CASE WHEN (A.AWB_TYPE = 'E' AND A.RCL_BULK_PCS = 0 AND (A.RCL_PPK_PCS > 0 OR A.RCL_MIX_PCS > 0)) THEN 'ULD'
  ELSE CASE WHEN (SELECT COUNT(1) 
  FROM EXP_RCL_HD HD,EXP_RCL_DTL DTL,EXP_RCL_BRKDN BRKDN,EXP_ULD_AWB ULDAWB,EXP_PRE_RCL_HD PRERCLHD
	WHERE HD.RCL_NO = BRKDN.RCL_NO AND DTL.RCL_NO = HD.RCL_NO AND HD.PPK_TYPE='M' AND HD.STATUS='S' 
  AND ULDAWB.RCL_NO = HD.RCL_NO AND ULDAWB.AWB_NO = BRKDN.AWB_NO AND ULDAWB.AWB_DATE = BRKDN.AWB_DATE 
  AND ULDAWB.ULD_KEY = DTL.ULD_KEY AND NVL(ULDAWB.MANIFEST_YN,'N')='N'
  AND HD.PRE_RCL_NO=PRERCLHD.PRE_RCL_NO AND pr_awb_no is not null and pr_awb_no = A.AWB_NO) > 0 THEN 'ULD'
  END END END END END) pmanType 
FROM edi_fbl,
  edi_fbl_shp,
  AWB A,
  FLT_OPR FLT,
  FLT_OPR_EVENTS EVENT
WHERE edi_fbl.fbl_status = 'P'
AND edi_fbl.tr_no        = edi_fbl_shp.tr_no
AND NOT EXISTS
  (SELECT NULL
  FROM exp_pmanifest_awb awb
  WHERE FLT_KEY    =edi_fbl.flt_key
  AND FLT_DATE     =edi_fbl.flt_date
  AND unldg_pt     = edi_fbl_shp.unldg_pt
  AND awb.awb_no   = edi_fbl_shp.awb_No
  AND awb.awb_date = edi_fbl_shp.awb_date
  AND ((bulk_pcs>0 and ppk_pcs=0 and mix_pcs=0) OR (bulk_pcs>0 and (ppk_pcs>0 or mix_pcs>0)))
  UNION ALL
  SELECT NULL
  FROM EXP_PMAN_TARMAC_AWB awb
  WHERE FLT_KEY    =edi_fbl.flt_key
  AND FLT_DATE     =edi_fbl.flt_date
  AND unldg_pt     = edi_fbl_shp.unldg_pt
  AND awb.awb_no   = edi_fbl_shp.awb_No
  AND awb.awb_date = edi_fbl_shp.awb_date
  )
AND edi_fbl_shp.awb_no IS NOT NULL
AND A.AWB_NO            = edi_fbl_shp.AWB_NO
AND A.AWB_DATE          = edi_fbl_shp.AWB_DATE
AND A.AWB_TYPE          = 'E'
AND EVENT.tr_no         = FLT.tr_no
AND flt.FLT_KEY         = edi_fbl.flt_key
AND flt.SCH_DATE        = edi_fbl.flt_date
AND flt.Flt_Type        = 'D'
and flt.flt_key = #fltKey#
and flt.sch_date = #depDate#
	]]>
and (a.spl_code1 in <iterate property="sch" open="(" close=")" conjunction=",">#sch[]#</iterate>
     OR a.spl_code2 in <iterate property="sch" open="(" close=")" conjunction=",">#sch[]#</iterate>
     OR a.spl_code3 in <iterate property="sch" open="(" close=")" conjunction=",">#sch[]#</iterate>
     OR a.spl_code4 in <iterate property="sch" open="(" close=")" conjunction=",">#sch[]#</iterate>
     OR a.spl_code5 in <iterate property="sch" open="(" close=")" conjunction=",">#sch[]#</iterate>
     OR a.spl_code6 in <iterate property="sch" open="(" close=")" conjunction=",">#sch[]#</iterate>
     OR a.spl_code7 in <iterate property="sch" open="(" close=")" conjunction=",">#sch[]#</iterate>
     OR a.spl_code8 in <iterate property="sch" open="(" close=")" conjunction=",">#sch[]#</iterate>
     OR a.spl_code9 in <iterate property="sch" open="(" close=")" conjunction=",">#sch[]#</iterate>)
     <![CDATA[
UNION ALL
SELECT 
  flt.carr_code   as fltCarr,
  flt.flt_no as fltNO,
  substr(edi_fbl_shp.awb_no,0,3) as awbPfx,
  substr(edi_fbl_shp.awb_no,4) as awbSfx,
  edi_fbl_shp.awb_no                                  AS awbNo,
  TO_CHAR(edi_fbl_shp.awb_date,'DDMONYY')                  AS awbDate,
  edi_fbl.flt_key                                          AS fltKey,
  TO_CHAR(edi_fbl.flt_date,'DDMONYY')                      AS depDate,
  NVL(edi_fbl_shp.pcs,0)                                   AS fblPcs,
  TO_CHAR(NVL(edi_fbl_shp.net_wt,0),'99999999999999990.0') AS fblWt,
  edi_fbl_shp.unldg_pt                                     AS unldgPt,
  A.pcs                                                    AS awbpcs,
  A.wt                                                     AS awbwt,
  (SELECT NVL(SUM(PMAN_PCS),0)
  FROM EXP_PMANIFEST_AWB
  WHERE AWB_NO  =edi_fbl_shp.awb_no
  AND AWB_DATE  = edi_fbl_shp.awb_date
  AND ( FLT_KEY  != edi_fbl.flt_key
  or FLT_DATE != edi_fbl.flt_date
  or unldg_pt != edi_fbl_shp.unldg_pt)
  ) AS existPmaNPc,
  (SELECT TO_CHAR(NVL(SUM(PMAN_WT),0),'99999999999999990.0')
  FROM EXP_PMANIFEST_AWB
  WHERE AWB_NO  =edi_fbl_shp.awb_no
  AND AWB_DATE  = edi_fbl_shp.awb_date
  AND ( FLT_KEY  != edi_fbl.flt_key
  or FLT_DATE != edi_fbl.flt_date
  or unldg_pt != edi_fbl_shp.unldg_pt)
  ) AS existPmanWt,
  DECODE(A.spl_code1, NULL, '', A.spl_code1
  || DECODE(A.spl_code2, NULL, '', '/'))
  || DECODE(A.spl_code2, NULL, '', A.spl_code2
  || DECODE(A.spl_code3, NULL, '', '/'))
  || DECODE(A.spl_code3, NULL, '', A.spl_code3
  || DECODE(A.spl_code4, NULL, '', '/'))
  || DECODE(A.spl_code4, NULL, '', A.spl_code4
  || DECODE(A.spl_code5, NULL, '', '/'))
  || DECODE(A.spl_code5, NULL, '', A.spl_code5
  || DECODE(A.spl_code6, NULL, '', '/'))
  || DECODE(A.spl_code6, NULL, '', A.spl_code6
  || DECODE(A.spl_code7, NULL, '', '/'))
  || DECODE(A.spl_code7, NULL, '', A.spl_code7
  || DECODE(A.spl_code8, NULL, '', '/'))
  || DECODE(A.spl_code8, NULL, '', A.spl_code8
  || DECODE(A.spl_code9, NULL, '', '/'))
  || DECODE(A.spl_code9, NULL, '', A.spl_code9) AS splCode,
  DECODE((SELECT cc_code FROM (SELECT t1.cc_code FROM V_CST_IMP_CC_CODE_AWB_ALL t1,mast_constraint_code t2 WHERE t1.cc_code = t2.code AND awb_no = a.awb_no AND AWB_DATE = a.awb_date AND NVL(hawb_no, '000000000000000000') = '000000000000000000') where rownum = 1),NULL,
(select CONST_CODE from CST_RECV WHERE AWB_NO = a.awb_no AND AWB_DATE = a.awb_date and LM_DATE = (SELECT MAX(LM_DATE) FROM CST_RECV WHERE AWB_NO=a.awb_no AND AWB_DATE = a.awb_date) AND rownum=1),
(SELECT cc_code FROM (SELECT t1.cc_code FROM V_CST_IMP_CC_CODE_AWB_ALL t1,mast_constraint_code t2 WHERE t1.cc_code = t2.code AND awb_no = a.awb_no  AND AWB_DATE = a.awb_date AND NVL(hawb_no, '000000000000000000') = '000000000000000000' and t1.flt_key not like 'NB%' ORDER BY t1.PRTY DESC) where rownum = 1)) AS latestCc,
(CASE WHEN (SELECT COUNT(1) FROM CUST_AIRL_SPL_CODE SPLCODE,AWB AWB
	WHERE ((SPLCODE.CARR_CODE  = AWB.carr_code) OR (AWB.agent_code is not null and SPLCODE.CUST_NO = AWB.AGENT_CODE))
	AND SPLCODE.SPL_CODE IN (AWB.SPL_CODE1,AWB.SPL_CODE2,AWB.SPL_CODE3,AWB.SPL_CODE4,AWB.SPL_CODE5,AWB.SPL_CODE6,AWB.SPL_CODE7,AWB.SPL_CODE8,AWB.SPL_CODE9)
  AND SPLCODE.spl_type IN ('CONFG_OF_AUTO_PMAN75') AND AWB.AWB_NO = A.AWB_NO AND AWB.AWB_DATE = A.AWB_DATE) > 0 THEN 'Type1' 
  ELSE CASE WHEN (SELECT COUNT(1) FROM CUST_AIRL_SPL_CODE SPLCODE,AWB AWB
	WHERE ((SPLCODE.CARR_CODE  = AWB.carr_code) OR (AWB.agent_code is not null and SPLCODE.CUST_NO = AWB.AGENT_CODE))
	AND SPLCODE.SPL_CODE IN (AWB.SPL_CODE1,AWB.SPL_CODE2,AWB.SPL_CODE3,AWB.SPL_CODE4,AWB.SPL_CODE5,AWB.SPL_CODE6,AWB.SPL_CODE7,AWB.SPL_CODE8,AWB.SPL_CODE9)
  AND SPLCODE.spl_type IN ('CONFG_OF_AUTO_PMAN90') AND AWB.AWB_NO = A.AWB_NO AND AWB.AWB_DATE = A.AWB_DATE) > 0 THEN 'Type2'
  ELSE CASE WHEN (FLT.CGO_ACFT_TYPE = 'FRE') THEN 'Type4'
  ELSE CASE WHEN (FLT.CGO_ACFT_TYPE != 'FRE') THEN 'Type5'
  END   END   END   END) AS shpType,
 TO_CHAR(((TO_NUMBER(TO_DATE((NVL(to_char(flt.EST_DATE,'DDMONYY'), to_char(flt.SCH_DATE,'DDMONYY')) || ' '
  || TO_CHAR(NVL(flt.EST_TIME, flt.SCH_TIME), '0000')), 'DDMONYY HH24MI')-SYSDATE)*24*60)),'99999999999.99') stdDiff,
   (CASE WHEN (A.AWB_TYPE = 'E' AND A.RCL_BULK_PCS > 0 AND A.RCL_PPK_PCS = 0 AND A.RCL_MIX_PCS = 0) THEN 'AWB'
  ELSE CASE WHEN (A.AWB_TYPE = 'E' AND A.RCL_BULK_PCS > 0 AND (A.RCL_PPK_PCS > 0 OR A.RCL_MIX_PCS > 0)) THEN 'AWB' 
  ELSE CASE WHEN A.AWB_TYPE = 'T' THEN 'AWB' 
  ELSE CASE WHEN (A.AWB_TYPE = 'E' AND A.RCL_BULK_PCS = 0 AND (A.RCL_PPK_PCS > 0 OR A.RCL_MIX_PCS > 0)) THEN 'ULD'
  ELSE CASE WHEN (SELECT COUNT(1) 
  FROM EXP_RCL_HD HD,EXP_RCL_DTL DTL,EXP_RCL_BRKDN BRKDN,EXP_ULD_AWB ULDAWB,EXP_PRE_RCL_HD PRERCLHD
	WHERE HD.RCL_NO = BRKDN.RCL_NO AND DTL.RCL_NO = HD.RCL_NO AND HD.PPK_TYPE='M' AND HD.STATUS='S' 
  AND ULDAWB.RCL_NO = HD.RCL_NO AND ULDAWB.AWB_NO = BRKDN.AWB_NO AND ULDAWB.AWB_DATE = BRKDN.AWB_DATE 
  AND ULDAWB.ULD_KEY = DTL.ULD_KEY AND NVL(ULDAWB.MANIFEST_YN,'N')='N'
  AND HD.PRE_RCL_NO=PRERCLHD.PRE_RCL_NO AND pr_awb_no is not null and pr_awb_no = A.AWB_NO) > 0 THEN 'ULD'
  END END END END END) pmanType 
FROM edi_fbl,
  edi_fbl_shp,
  AWB A,
  FLT_OPR FLT,
  FLT_OPR_EVENTS EVENT,
  EDI_FWB FWB
WHERE edi_fbl.fbl_status = 'P'
AND edi_fbl.tr_no        = edi_fbl_shp.tr_no
AND FWB.AWB_NO           =edi_fbl_shp.awb_no
AND FWB.AWB_DATE         =edi_fbl_shp.awb_date
AND NOT EXISTS
  (SELECT NULL
  FROM exp_pmanifest_awb awb
  WHERE FLT_KEY    =edi_fbl.flt_key
  AND FLT_DATE     =edi_fbl.flt_date
  AND unldg_pt     = edi_fbl_shp.unldg_pt
  AND awb.awb_no   = edi_fbl_shp.awb_No
  AND awb.awb_date = edi_fbl_shp.awb_date
  AND ((bulk_pcs>0 and ppk_pcs=0 and mix_pcs=0) OR (bulk_pcs>0 and (ppk_pcs>0 or mix_pcs>0)))
  UNION ALL
  SELECT NULL
  FROM EXP_PMAN_TARMAC_AWB awb
  WHERE FLT_KEY    =edi_fbl.flt_key
  AND FLT_DATE     =edi_fbl.flt_date
  AND unldg_pt     = edi_fbl_shp.unldg_pt
  AND awb.awb_no   = edi_fbl_shp.awb_No
  AND awb.awb_date = edi_fbl_shp.awb_date
  )
AND edi_fbl_shp.awb_no IS NOT NULL
AND A.AWB_NO            = edi_fbl_shp.AWB_NO
AND A.AWB_DATE          = edi_fbl_shp.AWB_DATE
AND A.AWB_TYPE          = 'T'
AND A.PCS               > 0
AND EVENT.tr_no         = FLT.tr_no
AND flt.FLT_KEY         = edi_fbl.flt_key
AND flt.SCH_DATE        = edi_fbl.flt_date
AND flt.Flt_Type        = 'D'
AND EXISTS
  (SELECT NULL
  FROM AWB_INVENTORY INV
  WHERE INV.AWB_NO =edi_fbl_shp.AWB_NO
  AND INV.AWB_DATE =edi_fbl_shp.awb_date
  UNION
  SELECT NULL
  FROM EDI_FFM_SHP A,
    EDI_FFM_MSG C
  WHERE A.AWB_NO  =edi_fbl_shp.AWB_NO
  AND A.AWB_DATE  =edi_fbl_shp.awb_date
  AND c.tr_no     =a.tr_no
  AND c.ffm_status='P'
  )
and flt.flt_key = #fltKey#
and flt.sch_date = #depDate#
	]]>
	</select>
	
<select id="getPmancountforautolightsignal" parameterClass="cargo.cms.common.utils.bo.CommonUtilFunBO"  resultClass="java.lang.Integer">
	<![CDATA[
	SELECT COUNT(1) FROM EXP_PMANIFEST_AWB WHERE AWB_NO=#awbNo# AND AWB_DATE=#awbDate# AND FLT_KEY=#fltKey# AND FLT_DATE=#depDate# AND UNLDG_pt=#unldgPt# AND bulk_pcs>0 and ppk_pcs=0 and mix_pcs=0
	]]>
	</select>
	<select id="getPmancountforautopmanuld" parameterClass="cargo.cms.common.utils.bo.CommonUtilFunBO"  resultClass="java.lang.Integer">
	<![CDATA[
	SELECT COUNT(1) FROM EXP_PMANIFEST_AWB WHERE AWB_NO=#awbNo# AND AWB_DATE=#awbDate# AND FLT_KEY=#fltKey# AND FLT_DATE=#depDate# AND UNLDG_pt=#unldgPt# AND NVL(MANUAL_PMAN_IND,'N')='Y'
	]]>
	</select>
	<select id="getAutoPmanAWBList" parameterClass="cargo.cms.common.utils.bo.CommonUtilFunBO"  resultClass="cargo.cms.common.utils.bo.CommonUtilFunBO">
	<![CDATA[
	SELECT 
  flt.carr_code   as fltCarr,
  flt.flt_no as fltNO,
  substr(edi_fbl_shp.awb_no,0,3) as awbPfx,
  substr(edi_fbl_shp.awb_no,4) as awbSfx,
  edi_fbl_shp.awb_no                                  AS awbNo,
  TO_CHAR(edi_fbl_shp.awb_date,'DDMONYY')                  AS awbDate,
  edi_fbl.flt_key                                          AS fltKey,
  TO_CHAR(edi_fbl.flt_date,'DDMONYY')                      AS depDate,
  NVL(edi_fbl_shp.pcs,0)                                   AS fblPcs,
  TO_CHAR(NVL(edi_fbl_shp.net_wt,0),'99999999999999990.0') AS fblWt,
  edi_fbl_shp.unldg_pt                                     AS unldgPt,
  A.pcs                                                    AS awbpcs,
  A.wt                                                     AS awbwt,
  (SELECT NVL(SUM(PMAN_PCS),0)
  FROM EXP_PMANIFEST_AWB
  WHERE AWB_NO  =edi_fbl_shp.awb_no
  AND AWB_DATE  = edi_fbl_shp.awb_date
  AND ( FLT_KEY  != edi_fbl.flt_key
  or FLT_DATE != edi_fbl.flt_date
  or unldg_pt != edi_fbl_shp.unldg_pt)
  ) AS existPmaNPc,
  (SELECT TO_CHAR(NVL(SUM(PMAN_WT),0),'99999999999999990.0')
  FROM EXP_PMANIFEST_AWB
  WHERE AWB_NO  =edi_fbl_shp.awb_no
  AND AWB_DATE  = edi_fbl_shp.awb_date
  AND ( FLT_KEY  != edi_fbl.flt_key
  or FLT_DATE != edi_fbl.flt_date
  or unldg_pt != edi_fbl_shp.unldg_pt)
  ) AS existPmanWt,
   (CASE WHEN (A.AWB_TYPE = 'E' AND A.RCL_BULK_PCS > 0 AND A.RCL_PPK_PCS = 0 AND A.RCL_MIX_PCS = 0) THEN 'AWB'
  ELSE CASE WHEN (A.AWB_TYPE = 'E' AND A.RCL_BULK_PCS > 0 AND (A.RCL_PPK_PCS > 0 OR A.RCL_MIX_PCS > 0)) THEN 'AWB' 
  ELSE CASE WHEN A.AWB_TYPE = 'T' THEN 'AWB' 
  ELSE CASE WHEN (A.AWB_TYPE = 'E' AND A.RCL_BULK_PCS = 0 AND (A.RCL_PPK_PCS > 0 OR A.RCL_MIX_PCS > 0)) THEN 'ULD'
  ELSE CASE WHEN (SELECT COUNT(1) 
  FROM EXP_RCL_HD HD,EXP_RCL_DTL DTL,EXP_RCL_BRKDN BRKDN,EXP_ULD_AWB ULDAWB,EXP_PRE_RCL_HD PRERCLHD
	WHERE HD.RCL_NO = BRKDN.RCL_NO AND DTL.RCL_NO = HD.RCL_NO AND HD.PPK_TYPE='M' AND HD.STATUS='S' 
  AND ULDAWB.RCL_NO = HD.RCL_NO AND ULDAWB.AWB_NO = BRKDN.AWB_NO AND ULDAWB.AWB_DATE = BRKDN.AWB_DATE 
  AND ULDAWB.ULD_KEY = DTL.ULD_KEY AND NVL(ULDAWB.MANIFEST_YN,'N')='N'
  AND HD.PRE_RCL_NO=PRERCLHD.PRE_RCL_NO AND pr_awb_no is not null and pr_awb_no = A.AWB_NO) > 0 THEN 'ULD'
  END END END END END) pmanType 
FROM edi_fbl,
  edi_fbl_shp,
  AWB A,
  FLT_OPR FLT,
  FLT_OPR_EVENTS EVENT
WHERE edi_fbl.fbl_status = 'P'
AND edi_fbl.tr_no        = edi_fbl_shp.tr_no
AND NOT EXISTS
  (SELECT NULL
  FROM exp_pmanifest_awb awb
  WHERE FLT_KEY    =edi_fbl.flt_key
  AND FLT_DATE     =edi_fbl.flt_date
  AND unldg_pt     = edi_fbl_shp.unldg_pt
  AND awb.awb_no   = edi_fbl_shp.awb_No
  AND awb.awb_date = edi_fbl_shp.awb_date
  AND ((bulk_pcs>0 and ppk_pcs=0 and mix_pcs=0) OR (bulk_pcs>0 and (ppk_pcs>0 or mix_pcs>0)))
  )
  AND NOT EXISTS
  (SELECT NULL
  FROM exp_pmanifest_awb_first awb
  WHERE FLT_KEY    =edi_fbl.flt_key
  AND FLT_DATE     =edi_fbl.flt_date
  AND unldg_pt     = edi_fbl_shp.unldg_pt
  AND awb.awb_no   = edi_fbl_shp.awb_No
  AND awb.awb_date = edi_fbl_shp.awb_date
  AND NOT EXISTS (SELECT NULL
  FROM exp_pmanifest_awb awb
  WHERE FLT_KEY    =edi_fbl.flt_key
  AND FLT_DATE     =edi_fbl.flt_date
  AND unldg_pt     = edi_fbl_shp.unldg_pt
  AND awb.awb_no   = edi_fbl_shp.awb_No
  AND awb.awb_date = edi_fbl_shp.awb_date
  )
  )
  AND EXISTS
  (SELECT NULL
   FROM EXP_AWB_LIGHT_SIGNAL_HD HD,
   EXP_AWB_LIGHT_SIGNAL_DTL DTL
   WHERE DTL.FLT_KEY = HD.FLT_KEY
   AND DTL.FLT_DATE  = HD.FLT_DATE
   AND DTL.UNLDG_PT  = HD.UNLDG_PT
   AND DTL.awb_no   = edi_fbl_shp.awb_No
  AND DTL.awb_date = edi_fbl_shp.awb_date
  AND HD.FLT_KEY    =edi_fbl.flt_key
  AND HD.FLT_DATE     =edi_fbl.flt_date
  AND HD.unldg_pt     = edi_fbl_shp.unldg_pt
   AND LIGHT_SIGNAL  ='GREEN'
)
AND edi_fbl_shp.awb_no IS NOT NULL
AND A.AWB_NO            = edi_fbl_shp.AWB_NO
AND A.AWB_DATE          = edi_fbl_shp.AWB_DATE
AND A.PCS               > 0
AND EVENT.tr_no         = FLT.tr_no
AND flt.FLT_KEY         = edi_fbl.flt_key
AND flt.SCH_DATE        = edi_fbl.flt_date
AND flt.Flt_Type        = 'D'
AND flt.flt_key = #fltKey#
AND flt.sch_date = #depDate#
order by a.awb_no,a.awb_date
	]]>
	</select>
	<select id = "checkAWBisinFltAllotment" parameterClass="cargo.cms.common.utils.bo.CommonUtilFunBO"  resultClass="java.lang.Integer">
	<![CDATA[
	SELECT count(1) as cnt FROM edi_elp_allot_ULD WHERE tr_no=#trNo# and ULD_KEY=#uldKey#
	]]>  
	</select>
	<select id="checknonconfiguredSHCList" parameterClass="cargo.cms.common.utils.bo.CommonUtilFunBO"  resultClass="java.lang.String">
	SELECT STRAGG(STRINGDELIM(AWB_NO, ',')) FROM EXP_RCL_BRKDN WHERE RCL_NO=#rclNo# AND AWB_NO NOT IN (
    SELECT BRKDN.AWB_NO FROM EXP_RCL_BRKDN BRKDN,AWB AWB WHERE 
       AWB.AWB_NO = BRKDN.AWB_NO AND AWB.AWB_DATE=BRKDN.AWB_DATE AND BRKDN.RCL_NO=#rclNo#
       and (AWB.spl_code1 in <iterate property="sch" open="(" close=")" conjunction=",">#sch[]#</iterate>
       OR AWB.spl_code2 in <iterate property="sch" open="(" close=")" conjunction=",">#sch[]#</iterate>
       OR AWB.spl_code3 in <iterate property="sch" open="(" close=")" conjunction=",">#sch[]#</iterate>
       OR AWB.spl_code4 in <iterate property="sch" open="(" close=")" conjunction=",">#sch[]#</iterate>
       OR AWB.spl_code5 in <iterate property="sch" open="(" close=")" conjunction=",">#sch[]#</iterate>
       OR AWB.spl_code6 in <iterate property="sch" open="(" close=")" conjunction=",">#sch[]#</iterate>
       OR AWB.spl_code7 in <iterate property="sch" open="(" close=")" conjunction=",">#sch[]#</iterate>
       OR AWB.spl_code8 in <iterate property="sch" open="(" close=")" conjunction=",">#sch[]#</iterate>
       OR AWB.spl_code9 in <iterate property="sch" open="(" close=")" conjunction=",">#sch[]#</iterate>)
       )
	</select>
	<select id="checkAllAWBShaveconfiguredSHC" parameterClass="cargo.cms.common.utils.bo.CommonUtilFunBO"  resultClass="cargo.cms.common.utils.bo.CommonUtilFunBO">
	SELECT (SELECT COUNT(AWB_NO) FROM EXP_RCL_BRKDN BRKDN WHERE BRKDN.RCL_NO=A.RCL_NO) AS awbCnt,
       (SELECT COUNT(BRKDN.AWB_NO) FROM EXP_RCL_BRKDN BRKDN,AWB AWB WHERE AWB.AWB_NO = BRKDN.AWB_NO AND AWB.AWB_DATE=BRKDN.AWB_DATE AND BRKDN.RCL_NO=A.RCL_NO
       and (AWB.spl_code1 in <iterate property="sch" open="(" close=")" conjunction=",">#sch[]#</iterate>
       OR AWB.spl_code2 in <iterate property="sch" open="(" close=")" conjunction=",">#sch[]#</iterate>
       OR AWB.spl_code3 in <iterate property="sch" open="(" close=")" conjunction=",">#sch[]#</iterate>
       OR AWB.spl_code4 in <iterate property="sch" open="(" close=")" conjunction=",">#sch[]#</iterate>
       OR AWB.spl_code5 in <iterate property="sch" open="(" close=")" conjunction=",">#sch[]#</iterate>
       OR AWB.spl_code6 in <iterate property="sch" open="(" close=")" conjunction=",">#sch[]#</iterate>
       OR AWB.spl_code7 in <iterate property="sch" open="(" close=")" conjunction=",">#sch[]#</iterate>
       OR AWB.spl_code8 in <iterate property="sch" open="(" close=")" conjunction=",">#sch[]#</iterate>
       OR AWB.spl_code9 in <iterate property="sch" open="(" close=")" conjunction=",">#sch[]#</iterate>)
       ) AS shcCnt
    FROM EXP_RCL_HD A WHERE A.RCL_NO=#rclNo#
	</select>	
	
	<select id="checkbuildupexistsforppkuld" parameterClass="cargo.cms.common.utils.bo.CommonUtilFunBO"  resultClass="java.lang.Integer">
	<![CDATA[
	SELECT COUNT(1) FROM (  
    SELECT COUNT(1) AS cnt FROM EXP_PMANIFEST_ULD WHERE FLT_KEY=#fltKey# AND FLT_DATE=#depDate# AND UNLDG_PT=#unldgPt# AND ULD_BT_NO=#uldKey#
    UNION
    SELECT COUNT(1) AS cnt FROM EXP_PMANIFEST_ULD_FIRST WHERE FLT_KEY=#fltKey# AND FLT_DATE=#depDate# AND UNLDG_PT=#unldgPt# AND ULD_BT_NO=#uldKey#) WHERE cnt > 0
    ]]>   
	</select>
	
	<select id="getRCLListforalreadyAutoPremanifestULD" parameterClass="cargo.cms.common.utils.bo.CommonUtilFunBO"  resultClass="cargo.cms.common.utils.bo.CommonUtilFunBO">
	SELECT DISTINCT * FROM (
	SELECT DTL.ULD_KEY as uldKey,DTL.CONTR_CODE as contourCode,HD.RCL_NO as rclNo,ULDAWB.MANIFEST_YN as pman,to_char(DTL.NET_WT,'99999999.99') as netWt,
	(SELECT STRAGG(STRINGDELIM(ALLOTMENT_TYPE, ',')) FROM MAST_ULD_TYPE_CONTR_PMAN ULDCONTR WHERE ULDCONTR.ULD_TYPE=DTL.ULD_TYPE) as uldTypeContr,
  (SELECT STRAGG(STRINGDELIM(ALLOTMENT_TYPE, ',')) FROM MAST_COMP_CONTR_AUTOPMAN COMP WHERE COMP.CONTR_CODE=DTL.CONTR_CODE AND COMP.CARR_CODE=HD.CARR_CODE) as compContr FROM EXP_RCL_HD HD,EXP_RCL_DTL DTL,EXP_ULD_AWB ULDAWB
	WHERE ULDAWB.RCL_NO = HD.RCL_NO AND ULDAWB.AWB_NO = HD.AWB_NO AND ULDAWB.AWB_DATE = HD.AWB_DATE AND ULDAWB.ULD_KEY = DTL.ULD_KEY AND DTL.RCL_NO = HD.RCL_NO AND HD.PPK_TYPE='P' AND HD.STATUS='S' AND HD.AWB_NO=#awbNo# AND HD.AWB_DATE=#awbDate#
	UNION ALL
	SELECT DTL.ULD_KEY as uldKey,DTL.CONTR_CODE as contourCode,HD.RCL_NO as rclNo,ULDAWB.MANIFEST_YN as pman,to_char(DTL.NET_WT,'99999999.99') as netWt,
	(SELECT STRAGG(STRINGDELIM(ALLOTMENT_TYPE, ',')) FROM MAST_ULD_TYPE_CONTR_PMAN ULDCONTR WHERE ULDCONTR.ULD_TYPE=DTL.ULD_TYPE) as uldTypeContr,
  (SELECT STRAGG(STRINGDELIM(ALLOTMENT_TYPE, ',')) FROM MAST_COMP_CONTR_AUTOPMAN COMP WHERE COMP.CONTR_CODE=DTL.CONTR_CODE AND COMP.CARR_CODE=HD.CARR_CODE) as compContr FROM EXP_RCL_HD HD,EXP_RCL_DTL DTL,EXP_RCL_BRKDN BRKDN,EXP_ULD_AWB ULDAWB
	WHERE HD.RCL_NO = BRKDN.RCL_NO AND DTL.RCL_NO = HD.RCL_NO AND HD.PPK_TYPE='M' AND HD.STATUS='S' 
	AND ULDAWB.RCL_NO = HD.RCL_NO AND ULDAWB.AWB_NO = BRKDN.AWB_NO AND ULDAWB.AWB_DATE = BRKDN.AWB_DATE AND ULDAWB.ULD_KEY = DTL.ULD_KEY AND BRKDN.AWB_NO=#awbNo# AND BRKDN.AWB_DATE = #awbDate#
  UNION ALL
  SELECT DISTINCT DTL.ULD_KEY as uldKey,DTL.CONTR_CODE as contourCode,HD.RCL_NO as rclNo,'N' as pman,to_char(DTL.NET_WT,'99999999.99') as netWt,
  (SELECT STRAGG(STRINGDELIM(ALLOTMENT_TYPE, ',')) FROM MAST_ULD_TYPE_CONTR_PMAN ULDCONTR WHERE ULDCONTR.ULD_TYPE=DTL.ULD_TYPE) as uldTypeContr,
  (SELECT STRAGG(STRINGDELIM(ALLOTMENT_TYPE, ',')) FROM MAST_COMP_CONTR_AUTOPMAN COMP WHERE COMP.CONTR_CODE=DTL.CONTR_CODE AND COMP.CARR_CODE=HD.CARR_CODE) as compContr 
  FROM EXP_RCL_HD HD,EXP_RCL_DTL DTL,EXP_RCL_BRKDN BRKDN,EXP_ULD_AWB ULDAWB,EXP_PRE_RCL_HD PRERCLHD
	WHERE HD.RCL_NO = BRKDN.RCL_NO AND DTL.RCL_NO = HD.RCL_NO AND HD.PPK_TYPE='M' AND HD.STATUS='S' 
  AND ULDAWB.RCL_NO = HD.RCL_NO AND ULDAWB.AWB_NO = BRKDN.AWB_NO AND ULDAWB.AWB_DATE = BRKDN.AWB_DATE 
  AND ULDAWB.ULD_KEY = DTL.ULD_KEY AND NVL(ULDAWB.MANIFEST_YN,'N')='N'
  AND HD.PRE_RCL_NO=PRERCLHD.PRE_RCL_NO AND pr_awb_no is not null and pr_awb_no = #awbNo#
  ) A ORDER BY a.netWt desc
	</select>
	
	<select id="getRCLListforAutoPremanifestULD" parameterClass="cargo.cms.common.utils.bo.CommonUtilFunBO"  resultClass="cargo.cms.common.utils.bo.CommonUtilFunBO">
	SELECT DISTINCT * FROM (
	SELECT DTL.ULD_KEY as uldKey,DTL.CONTR_CODE as contourCode,HD.RCL_NO as rclNo,ULDAWB.MANIFEST_YN as pman,to_char(DTL.NET_WT,'99999999.99') as netWt,
	(SELECT STRAGG(STRINGDELIM(ALLOTMENT_TYPE, ',')) FROM MAST_ULD_TYPE_CONTR_PMAN ULDCONTR WHERE ULDCONTR.ULD_TYPE=DTL.ULD_TYPE) as uldTypeContr,
  (SELECT STRAGG(STRINGDELIM(ALLOTMENT_TYPE, ',')) FROM MAST_COMP_CONTR_AUTOPMAN COMP WHERE COMP.CONTR_CODE=DTL.CONTR_CODE AND COMP.CARR_CODE=HD.CARR_CODE) as compContr FROM EXP_RCL_HD HD,EXP_RCL_DTL DTL,EXP_ULD_AWB ULDAWB
	WHERE ULDAWB.RCL_NO = HD.RCL_NO AND ULDAWB.AWB_NO = HD.AWB_NO AND ULDAWB.AWB_DATE = HD.AWB_DATE AND ULDAWB.ULD_KEY = DTL.ULD_KEY AND DTL.RCL_NO = HD.RCL_NO AND HD.PPK_TYPE='P' AND HD.STATUS='S' AND HD.AWB_NO=#awbNo# AND HD.AWB_DATE=#awbDate#
	UNION ALL
	SELECT DTL.ULD_KEY as uldKey,DTL.CONTR_CODE as contourCode,HD.RCL_NO as rclNo,ULDAWB.MANIFEST_YN as pman,to_char(DTL.NET_WT,'99999999.99') as netWt,
	(SELECT STRAGG(STRINGDELIM(ALLOTMENT_TYPE, ',')) FROM MAST_ULD_TYPE_CONTR_PMAN ULDCONTR WHERE ULDCONTR.ULD_TYPE=DTL.ULD_TYPE) as uldTypeContr,
  (SELECT STRAGG(STRINGDELIM(ALLOTMENT_TYPE, ',')) FROM MAST_COMP_CONTR_AUTOPMAN COMP WHERE COMP.CONTR_CODE=DTL.CONTR_CODE AND COMP.CARR_CODE=HD.CARR_CODE) as compContr FROM EXP_RCL_HD HD,EXP_RCL_DTL DTL,EXP_RCL_BRKDN BRKDN,EXP_ULD_AWB ULDAWB
	WHERE HD.RCL_NO = BRKDN.RCL_NO AND DTL.RCL_NO = HD.RCL_NO AND HD.PPK_TYPE='M' AND HD.STATUS='S' 
	AND ULDAWB.RCL_NO = HD.RCL_NO AND ULDAWB.AWB_NO = BRKDN.AWB_NO AND ULDAWB.AWB_DATE = BRKDN.AWB_DATE AND ULDAWB.ULD_KEY = DTL.ULD_KEY AND BRKDN.AWB_NO=#awbNo# AND BRKDN.AWB_DATE = #awbDate#
  UNION ALL
  SELECT DISTINCT DTL.ULD_KEY as uldKey,DTL.CONTR_CODE as contourCode,HD.RCL_NO as rclNo,'N' as pman,to_char(DTL.NET_WT,'99999999.99') as netWt,
  (SELECT STRAGG(STRINGDELIM(ALLOTMENT_TYPE, ',')) FROM MAST_ULD_TYPE_CONTR_PMAN ULDCONTR WHERE ULDCONTR.ULD_TYPE=DTL.ULD_TYPE) as uldTypeContr,
  (SELECT STRAGG(STRINGDELIM(ALLOTMENT_TYPE, ',')) FROM MAST_COMP_CONTR_AUTOPMAN COMP WHERE COMP.CONTR_CODE=DTL.CONTR_CODE AND COMP.CARR_CODE=HD.CARR_CODE) as compContr 
  FROM EXP_RCL_HD HD,EXP_RCL_DTL DTL,EXP_RCL_BRKDN BRKDN,EXP_ULD_AWB ULDAWB,EXP_PRE_RCL_HD PRERCLHD
	WHERE HD.RCL_NO = BRKDN.RCL_NO AND DTL.RCL_NO = HD.RCL_NO AND HD.PPK_TYPE='M' AND HD.STATUS='S' 
  AND ULDAWB.RCL_NO = HD.RCL_NO AND ULDAWB.AWB_NO = BRKDN.AWB_NO AND ULDAWB.AWB_DATE = BRKDN.AWB_DATE 
  AND ULDAWB.ULD_KEY = DTL.ULD_KEY AND NVL(ULDAWB.MANIFEST_YN,'N')='N'
  AND HD.PRE_RCL_NO=PRERCLHD.PRE_RCL_NO AND pr_awb_no is not null and pr_awb_no = #awbNo#
	) A WHERE A.pman='N' ORDER BY a.netWt desc
	</select>
	<select id="getFltDetailsforAutoPmanULD" parameterClass="cargo.cms.common.utils.bo.CommonUtilFunBO"  resultClass="cargo.cms.common.utils.bo.CommonUtilFunBO">
	SELECT *
	FROM
  	(SELECT 
  	elpmsg.VER_NO  AS versionNo,
    elpmsg.TR_NO   AS trNo,
    opr.flt_key AS fltKey,
    TO_CHAR(opr.sch_date,'DDMONYY') AS depDate
    FROM flt_opr opr
  	LEFT OUTER JOIN edi_elp_msg elpmsg
  	ON elpmsg.flt_key                      =opr.flt_key
  	AND TO_CHAR(elpmsg.flt_date, 'DDMONYY')=TO_CHAR(opr.sch_date, 'DDMONYY')
  	WHERE opr.flt_key                      =#fltKey#
  	AND opr.sch_date                       =TO_DATE(#depDate#, 'DDMONYY')
  	AND opr.flt_type                       = 'D'
  	ORDER BY to_number(elpmsg.tr_no) DESC
  	)
	WHERE rownum=1
	</select>
	<select id="getExistFltAllotmentDetailsforAutoPmanULD" parameterClass="cargo.cms.common.utils.bo.CommonUtilFunBO"  resultClass="cargo.cms.common.utils.bo.CommonUtilFunBO">
	SELECT A.contourCode AS contourCode,A.compContr AS compContr,COUNT(A.contourCode) as contourCodeCnt FROM (
	SELECT distinct ULD.ULD_BT_NO,ULD.CONTR_CODE as contourCode,
    (SELECT STRAGG(STRINGDELIM(ALLOTMENT_TYPE, ',')) FROM MAST_COMP_CONTR_AUTOPMAN COMP WHERE COMP.CONTR_CODE=ULD.CONTR_CODE
    AND COMP.CARR_CODE=SUBSTR(ULD.FLT_KEY,0,2)) as compContr FROM 
	EXP_PMANIFEST_ULD ULD,EXP_PMANIFEST_ULD_AWB ULDAWB,EXP_ULD_AWB EXPAWB, ULD_INVENTORY ULDINV 
	WHERE ULDAWB.FLT_KEY = ULD.FLT_KEY AND uldawb.flt_date = ULD.FLT_DATE AND uldawb.unldg_pt = uld.unldg_pt AND ULDAWB.ULD_BT_NO = ULD.ULD_BT_NO 
    AND ULDINV.ULD_KEY = ULD.ULD_BT_NO AND ULD.FLT_KEY=#fltKey# AND ULD.FLT_DATE=TO_DATE(#depDate#, 'DDMONYY') AND uld.unldg_pt=#unldgPt# AND ULD.PPK_TYPE IN ('P','M')
    AND ULDINV.ULD_TYPE NOT IN (SELECT ULD_TYPE FROM MAST_ULD_TYPE_CONTR_PMAN)
	AND (ULD.ULD_BT_NO=#uldKey# OR ULDAWB.AWB_NO=#awbNo# OR ULD.ULD_BT_NO IN (SELECT DISTINCT DTL.ULD_KEY 
    FROM EXP_RCL_HD HD,EXP_RCL_DTL DTL,EXP_RCL_BRKDN BRKDN,EXP_ULD_AWB ULDAWB,EXP_PRE_RCL_HD PRERCLHD
	WHERE HD.RCL_NO = BRKDN.RCL_NO AND DTL.RCL_NO = HD.RCL_NO AND HD.PPK_TYPE='M' AND HD.STATUS='S' 
    AND ULDAWB.RCL_NO = HD.RCL_NO AND ULDAWB.AWB_NO = BRKDN.AWB_NO AND ULDAWB.AWB_DATE = BRKDN.AWB_DATE 
  	AND ULDAWB.ULD_KEY = DTL.ULD_KEY AND NVL(ULDAWB.MANIFEST_YN,'N')='Y'
  	AND HD.PRE_RCL_NO=PRERCLHD.PRE_RCL_NO AND pr_awb_no is not null and pr_awb_no = #awbNo#))) A
    GROUP BY A.contourCode,A.compContr
	</select>
<select id="getExistULDTypeFltAllotmentDetailsforAutoPmanULDnotmatch" parameterClass="cargo.cms.common.utils.bo.CommonUtilFunBO"  resultClass="cargo.cms.common.utils.bo.CommonUtilFunBO">
	SELECT A.contourCode AS contourCode,A.compContr AS compContr,COUNT(A.contourCode) as contourCodeCnt FROM (
	SELECT distinct ULD.ULD_BT_NO,ULD.CONTR_CODE as contourCode,
    (SELECT STRAGG(STRINGDELIM(ALLOTMENT_TYPE, ',')) FROM MAST_COMP_CONTR_AUTOPMAN COMP WHERE COMP.CONTR_CODE=ULD.CONTR_CODE
    AND COMP.CARR_CODE=SUBSTR(ULD.FLT_KEY,0,2)) as compContr FROM 
	EXP_PMANIFEST_ULD ULD,EXP_PMANIFEST_ULD_AWB ULDAWB,EXP_ULD_AWB EXPAWB, ULD_INVENTORY ULDINV 
	WHERE ULDAWB.FLT_KEY = ULD.FLT_KEY AND uldawb.flt_date = ULD.FLT_DATE AND uldawb.unldg_pt = uld.unldg_pt AND ULDAWB.ULD_BT_NO = ULD.ULD_BT_NO 
    AND ULDINV.ULD_KEY = ULD.ULD_BT_NO AND ULD.FLT_KEY=#fltKey# AND ULD.FLT_DATE=TO_DATE(#depDate#, 'DDMONYY') AND uld.unldg_pt=#unldgPt# AND ULD.PPK_TYPE IN ('P','M')
    AND ULDINV.ULD_TYPE IN (SELECT ULD_TYPE FROM MAST_ULD_TYPE_CONTR_PMAN)
	AND (ULD.ULD_BT_NO=#uldKey# OR ULDAWB.AWB_NO=#awbNo# OR ULD.ULD_BT_NO IN (SELECT DISTINCT DTL.ULD_KEY 
    FROM EXP_RCL_HD HD,EXP_RCL_DTL DTL,EXP_RCL_BRKDN BRKDN,EXP_ULD_AWB ULDAWB,EXP_PRE_RCL_HD PRERCLHD
	WHERE HD.RCL_NO = BRKDN.RCL_NO AND DTL.RCL_NO = HD.RCL_NO AND HD.PPK_TYPE='M' AND HD.STATUS='S' 
    AND ULDAWB.RCL_NO = HD.RCL_NO AND ULDAWB.AWB_NO = BRKDN.AWB_NO AND ULDAWB.AWB_DATE = BRKDN.AWB_DATE 
  	AND ULDAWB.ULD_KEY = DTL.ULD_KEY AND NVL(ULDAWB.MANIFEST_YN,'N')='Y'
  	AND HD.PRE_RCL_NO=PRERCLHD.PRE_RCL_NO AND pr_awb_no is not null and pr_awb_no = #awbNo#))) A
    GROUP BY A.contourCode,A.compContr
	</select>
<select id="getExistULDTypeFltAllotmentDetailsforAutoPmanULD" parameterClass="cargo.cms.common.utils.bo.CommonUtilFunBO"  resultClass="cargo.cms.common.utils.bo.CommonUtilFunBO">
	SELECT A.ULD_TYPE AS contourCode,A.compContr AS compContr,COUNT(A.ULD_TYPE) as contourCodeCnt FROM (
	SELECT distinct ULD.ULD_BT_NO,ULDINV.ULD_TYPE,ULD.CONTR_CODE as contourCode,
    (SELECT STRAGG(STRINGDELIM(ALLOTMENT_TYPE, ',')) FROM MAST_ULD_TYPE_CONTR_PMAN COMP WHERE COMP.ULD_TYPE=ULDINV.ULD_TYPE) as compContr FROM 
	EXP_PMANIFEST_ULD ULD,EXP_PMANIFEST_ULD_AWB ULDAWB,EXP_ULD_AWB EXPAWB, ULD_INVENTORY ULDINV 
	WHERE ULDAWB.FLT_KEY = ULD.FLT_KEY AND uldawb.flt_date = ULD.FLT_DATE AND uldawb.unldg_pt = uld.unldg_pt AND ULDAWB.ULD_BT_NO = ULD.ULD_BT_NO 
    AND ULDINV.ULD_KEY = ULD.ULD_BT_NO AND ULD.FLT_KEY=#fltKey# AND ULD.FLT_DATE=TO_DATE(#depDate#, 'DDMONYY') AND uld.unldg_pt=#unldgPt# AND ULD.PPK_TYPE IN ('P','M')
    AND ULDINV.ULD_TYPE IN (SELECT ULD_TYPE FROM MAST_ULD_TYPE_CONTR_PMAN)
	AND (ULD.ULD_BT_NO=#uldKey# OR ULDAWB.AWB_NO=#awbNo# OR ULD.ULD_BT_NO IN (SELECT DISTINCT DTL.ULD_KEY 
    FROM EXP_RCL_HD HD,EXP_RCL_DTL DTL,EXP_RCL_BRKDN BRKDN,EXP_ULD_AWB ULDAWB,EXP_PRE_RCL_HD PRERCLHD
	WHERE HD.RCL_NO = BRKDN.RCL_NO AND DTL.RCL_NO = HD.RCL_NO AND HD.PPK_TYPE='M' AND HD.STATUS='S' 
    AND ULDAWB.RCL_NO = HD.RCL_NO AND ULDAWB.AWB_NO = BRKDN.AWB_NO AND ULDAWB.AWB_DATE = BRKDN.AWB_DATE 
  	AND ULDAWB.ULD_KEY = DTL.ULD_KEY AND NVL(ULDAWB.MANIFEST_YN,'N')='Y'
  	AND HD.PRE_RCL_NO=PRERCLHD.PRE_RCL_NO AND pr_awb_no is not null and pr_awb_no = #awbNo#))) A
    GROUP BY A.ULD_TYPE,A.compContr
	</select>
<select id="getLDTypeFltAllotmentDetailsforAutoPmanULD" parameterClass="cargo.cms.common.utils.bo.CommonUtilFunBO"	resultClass="java.lang.String">
	SELECT (SELECT STRAGG(STRINGDELIM(ALLOTMENT_TYPE, ',')) FROM MAST_ULD_TYPE_CONTR_PMAN COMP WHERE COMP.ULD_TYPE=ULDINV.ULD_TYPE) as compContr 
	FROM ULD_INVENTORY ULDINV WHERE ULDINV.ULD_KEY=#uldKey#
	</select>
	<select id="lightSignalELPAWBList" parameterClass="java.util.HashMap"	resultClass="cargo.cms.common.utils.bo.CommonUtilFunBO">
	SELECT distinct awb_no as awbNo
	FROM edi_elp_msg elpmsg,  edi_elp_port elpport,  edi_elp_allot elpallot
  	LEFT JOIN edi_elp_allot_awb allotawb ON allotawb.c_doc_line_no = elpallot.doc_line_no AND allotawb.TR_NO = #trNo#
  	LEFT JOIN edi_elp_allot_uld allotuld ON allotuld.c_doc_line_no = elpallot.doc_line_no AND allotuld.TR_NO = #trNo#
	WHERE elpmsg.TR_NO           =elpport.tr_no
	AND elpmsg.tr_no             =elpallot.tr_no
	AND elpallot.port_doc_line_no=elpport.DOC_LINE_NO
	AND elpallot.CGO_TYPE        ='Export Local Pre-Pack'
	AND elpmsg.TR_NO             = #trNo#
	and (allotawb.c_doc_line_no = #docLineNo# or allotuld.c_doc_line_no=#docLineNo#)
	</select>
	<select id="lightSignalRCLAWBList" parameterClass="java.lang.String"	resultClass="cargo.cms.common.utils.bo.CommonUtilFunBO">
	SELECT AWB_NO as awbNo FROM EXP_RCL_HD WHERE PPK_TYPE='P' AND RCL_NO=#rclNo# AND AWB_NO IS NOT NULL
	UNION
	SELECT AWB_NO as awbNo FROM exp_rcl_brkdn WHERE RCL_NO=#rclNo#
	</select>
	
		<select id="getFltAllotmentDetailsforAutoPmanULD" parameterClass="cargo.cms.common.utils.bo.CommonUtilFunBO"  resultClass="cargo.cms.common.utils.bo.CommonUtilFunBO">
		SELECT DISTINCT elpallot.QTY_Q7           AS qtyQ7,
  elpallot.QTY_Q6           AS qtyQ6,
  elpallot.QTY_X8           AS qtyX8,
  elpallot.QTY_ZA as qtyZA,
  elpallot.QTY_ZB as qtyZB,
  elpallot.QTY_ZC as qtyZC,
  elpallot.QTY_PGA as qtyPGA,
  elpallot.QTY_PEB          AS qtyPEB,
  elpallot.QTY_A2           AS qtyA2 ,
  elpallot.QTY_H2           AS qtyH2 ,
  elpallot.QTY_H3 as qtyH3,
  elpallot.QTY_LDC as qtyLDC,
  elpallot.QTY_ALF as qtyALF,
  elpallot.QTY_PLA as qtyPLA,
  elpallot.QTY_Q7D as qtyQ7D,
  elpallot.QTY_W2 as qtyW2,
  elpallot.QTY_PAG as qtyPAG,
  elpallot.QTY_XY as qtyXY,
  elpallot.QTY_BULK as qtyBULK,  
  'Export Local Pre-Pack'   AS cgoType,
  elpmsg.TR_NO              AS trNo,
  NVL(allotawb.c_doc_line_no,allotuld.c_doc_line_no) AS docLineNo
FROM edi_elp_msg elpmsg,  edi_elp_port elpport,  edi_elp_allot elpallot
  LEFT JOIN edi_elp_allot_awb allotawb ON allotawb.c_doc_line_no = elpallot.doc_line_no AND allotawb.TR_NO = #trNo#
  LEFT JOIN edi_elp_allot_uld allotuld ON allotuld.c_doc_line_no = elpallot.doc_line_no AND allotuld.TR_NO = #trNo#
WHERE elpmsg.TR_NO           =elpport.tr_no
AND elpmsg.tr_no             =elpallot.tr_no
AND elpallot.port_doc_line_no=elpport.DOC_LINE_NO
AND elpallot.CGO_TYPE        ='Export Local Pre-Pack'
AND elpport.port             = #unldgPt#
AND elpmsg.flt_key           =#fltKey#
AND elpmsg.flt_date          =TO_DATE(#depDate#, 'DDMONYY')
AND elpmsg.TR_NO             = #trNo#
AND elpmsg.ver_no            = #versionNo#
and (allotawb.awb_no = #awbNo# or allotuld.uld_key=#uldKey#)
</select>
	<select id="fetchautopmanoldremark" parameterClass="cargo.cms.common.utils.bo.CommonUtilFunBO" resultClass="java.lang.String">
	SELECT * FROM (
	SELECT lsr.REMARKS AS remarks
	FROM EXP_AWB_LIGHT_SIGNAL_DTL ls,
  	EXP_AWB_LIGHT_SIGNAL_RMK lsr
	WHERE lsr.SEQ_NO                   = ls.SEQ_NO
	AND ls.AWB_NO                      = #awbNo#
	AND ls.AWB_DATE                    = TO_DATE(#awbDate#,'DDMONYY')
	AND ls.UNLDG_PT                    = #unldgPt#
	AND ls.FLT_KEY                     = #fltKey#
	AND TO_CHAR(ls.FLT_DATE,'DDMONYY') = to_date(#depDate#,'DDMONYY')
	ORDER BY lsr.SEQ_NO DESC) A WHERE ROWNUM=1
</select>
<insert id="createHisAwbEvntForautopmanrmk" parameterClass="java.util.HashMap">
		INSERT INTO HIS_AWB_EVNT 
			(AWB_NO, AWB_DATE, COD_TRA_SEQ_NUM, COD_HIS_TYP, COD_FUNC, MODULE, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE)
		VALUES 
			(#awbNo#, TO_DATE(#awbDate#, 'DDMONYY'), #traSeqNo#, 'E', 'LSNAL', 'W', #userId#, SYSDATE, #userId#, SYSDATE)
	</insert>
	
	<insert id="createHisAwbEvntDtlForautopmanrmk" parameterClass="java.util.HashMap">
		INSERT INTO HIS_AWB_EVNT_DTL 
			(AWB_NO, AWB_DATE, COD_TRA_SEQ_NUM, COD_SEQ_NUM, COD_ACT, COD_HIS_SEQ_NUM, DES_HIS_DTS, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE)
		VALUES 
			(#awbNo#, TO_DATE(#awbDate#, 'DDMONYY'), #traSeqNo#, SQ_IMP_CAR_SHP_HIS.NEXTVAL, 'U', '1107', #desHisDtls#, #userId#, SYSDATE, #userId#, SYSDATE)
	</insert> 
	<select id="upstreamRAPopupShipmentDtl" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO" resultClass="cargo.cms.awb.bo.AWBEnquiryBO">
	<![CDATA[
    SELECT SUBSTR( AWB_NO,1,3 ) AS awbNoPFX,
  	SUBSTR( AWB_NO,4 )        AS awbNoSFX,
  	AGENT_CODE                AS agentCode,
  	DEST                      AS awbDest,
awb_type as awbType,
  	CARR_CODE                 AS carrCode,
  	(CASE WHEN NVL(HAWB_IND,'N') = 'Y' THEN 'Y' ELSE 
    (CASE WHEN (SELECT COUNT(1) FROM MAST_SEC_CHECK SECCK WHERE SECCK.CARR_CODE=AWB.CARR_CODE
		AND NVL(SECCK.ACTIVE,'N')='Y'
		AND NVL(SECCK.HAWB_IND,'N')='Y'
    AND SECCK.PORT = AWB.DEST
		) > 0 THEN 'N' ELSE 
    (CASE WHEN (SELECT COUNT(1) FROM MAST_SEC_CHECK SECCK WHERE SECCK.CARR_CODE=AWB.CARR_CODE
		AND NVL(SECCK.ACTIVE,'N')='Y'
		AND NVL(SECCK.HAWB_IND,'N')='Y'
    AND NOT EXISTS (SELECT NULL FROM MAST_SEC_CHECK SECCK WHERE SECCK.CARR_CODE=AWB.CARR_CODE
		AND NVL(SECCK.ACTIVE,'N')='Y'
		AND SECCK.PORT = AWB.DEST)
    AND (SECCK.CTRY_CODE IN (SELECT CTRY_CODE
    	FROM MAST_ARPT A,
      	MAST_CITY B
    	WHERE A.CITY_CODE=B.CODE
    	AND A.CODE       = AWB.DEST))) > 0 THEN 'N' ELSE 'N/A' END) END)
    END) as hawbInd
	FROM AWB AWB
	]]>
	WHERE AWB_NO =#awbNo#
	AND AWB_DATE = #awbDate#
	</select>	
	<select id="upstreamRAPopupracsfDtl" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO" resultClass="cargo.cms.awb.bo.AWBEnquiryBO">
    SELECT DISTINCT racsfCode FROM (
  	select t1.racsf_code as racsfCode from exp_rcl_hd t1 
		        where t1.ppk_type in ('B', 'P') and (t1.status != 'V' and t1.status != 'R')
		       AND t1.awb_no=#awbNo# and t1.awb_date = #awbDate# AND t1.racsf_code IS NOT NULL
		        union
	select t1.racsf_code from exp_rcl_hd t1, exp_rcl_brkdn t2 where  t1.rcl_no = t2.rcl_no 
		        and t1.ppk_type = 'M' and (t1.status != 'V' and t1.status != 'R')
            and t2.awb_no=#awbNo# and t2.awb_date=#awbDate# AND t1.racsf_code IS NOT NULL)
    </select>
    <select id="fetchRCSList" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO" resultClass="cargo.cms.awb.bo.AWBEnquiryBO">
SELECT DISTINCT RCS_TYPE AS rcsType,ACAS_CODE AS rcsCode,ACAS_IND AS rcsInd,(SELECT CODE_DESC FROM MAST_REG_CLRN_CODE WHERE CODE=ACASHD.ACAS_CODE) AS rcsDesc FROM ACAS_INFO_HD ACASHD 
	WHERE ACASHD.AWB_NO=#awbNo# AND ACASHD.AWB_DATE=#awbDate#
	AND ACASHD.ACAS_CODE IS NOT NULL
	<isNotEmpty property="rcsType">
	AND ACASHD.RCS_TYPE=#rcsType#
	</isNotEmpty>
	</select>
	<select id="getRCSCodeVal" parameterClass="java.util.HashMap" resultClass="java.lang.String" >
	SELECT FUN_GET_RCSTYPE(#awbNo#,#awbDate#,#hawbNo#) FROM DUAL
	</select>
	<select id="fetchRCSHAWBList" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO" resultClass="cargo.cms.awb.bo.AWBEnquiryBO">
	SELECT DISTINCT ACASDTL.RCS_TYPE AS rcsType,ACASDTL.ACAS_CODE AS rcsCode,ACASDTL.ACAS_IND AS rcsInd,(SELECT CODE_DESC FROM MAST_REG_CLRN_CODE WHERE CODE=ACASDTL.ACAS_CODE) AS rcsDesc FROM 
	ACAS_INFO_HD ACASHD 
	JOIN ACAS_INFO_DTL ACASDTL ON ACASDTL.TR_NO = ACASHD.TR_NO
	WHERE ACASHD.AWB_NO=#awbNo# AND ACASHD.AWB_DATE=#awbDate#
	AND ACASDTL.HAWB_NO=#hawbNo#
	<isNotEmpty property="rcsType">
	AND ACASDTL.RCS_TYPE=#rcsType#
	</isNotEmpty>
	</select>
	<select id="fetchRCSTypeList" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO" resultClass="cargo.cms.awb.bo.AWBEnquiryBO">
	SELECT DISTINCT CODE_TYPE as rcsType FROM MAST_REG_CLRN_CODE ORDER BY CODE_TYPE ASC
	</select>
	<select id="upstreamRAPopupCountryList" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO" resultClass="cargo.cms.awb.bo.AWBEnquiryBO">
	<![CDATA[
    SELECT CTRY_CODE as countryCode,ACTIVE as activeInd FROM MAST_SEC_CHECK WHERE CARR_CODE=#carrCode# AND NVL(ACTIVE,'N')='Y' AND CTRY_CODE IS NOT NULL            
	AND CTRY_CODE IN (SELECT CTRY_CODE FROM MAST_CITY CITY WHERE CITY.CODE=(SELECT DEST FROM AWB AWB WHERE AWB.AWB_NO = #awbNo# AND AWB.AWB_DATE=#awbDate#))
	UNION ALL
	SELECT PORT as countryCode,ACTIVE as activeInd FROM MAST_SEC_CHECK WHERE CARR_CODE=#carrCode# AND NVL(ACTIVE,'N')='Y' AND PORT IS NOT NULL
	AND PORT = (SELECT DEST FROM AWB AWB WHERE AWB.AWB_NO = #awbNo# AND AWB.AWB_DATE=#awbDate#)
	UNION ALL
	SELECT CTRY_CODE as countryCode,ACTIVE as activeInd FROM MAST_SEC_CHECK WHERE CARR_CODE=#carrCode# AND NVL(ACTIVE,'N')='Y' AND CTRY_CODE IS NOT NULL            
	AND CTRY_CODE NOT IN (SELECT CTRY_CODE FROM MAST_CITY CITY WHERE CITY.CODE=(SELECT DEST FROM AWB AWB WHERE AWB.AWB_NO = #awbNo# AND AWB.AWB_DATE=#awbDate#))
	UNION ALL
	SELECT PORT as countryCode,ACTIVE as activeInd FROM MAST_SEC_CHECK WHERE CARR_CODE=#carrCode# AND NVL(ACTIVE,'N')='Y' AND PORT IS NOT NULL
	AND PORT != (SELECT DEST FROM AWB AWB WHERE AWB.AWB_NO = #awbNo# AND AWB.AWB_DATE=#awbDate#)
	]]>
	</select>
	<select id="upstreamRAPopupAgentRA" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO" resultClass="cargo.cms.awb.bo.AWBEnquiryBO">
    SELECT CUST_NO as agentCode,ACTIVE as activeInd FROM CUST_CARR_RA_AGENT AGNT 
    WHERE AGNT.CARR_CODE=#carrCode# AND AGNT.CUST_NO=#agentCode#  AND (AGNT.CTRY_CODE = #countryCode# OR AGNT.PORT = #countryCode#) 
	AND (AGNT.CTRY_CODE IS NOT NULL OR AGNT.PORT IS NOT NULL)
	</select>
	<select id="upstreamRAPopupRACSFDtl" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO" resultClass="cargo.cms.awb.bo.AWBEnquiryBO">
    SELECT RACSF_CODE AS racsfCode,ACTIVE_IND as activeInd FROM MAST_RACSF_CONFIG 
    WHERE CARR_CODE=#carrCode# AND RACSF_CODE=#racsfCode# AND (CTRY_CODE=#countryCode# OR PORT = #countryCode#)
    AND (CTRY_CODE IS NOT NULL OR PORT IS NOT NULL)
	</select>
	<insert id="insertUpstreamCheckResult" parameterClass="java.util.HashMap">
		INSERT INTO 
			EXP_UPSTREAM_CHK_RESULT 
			(TR_NO,AWB_NO,AWB_DATE,CARR_CODE,CTRY_CODE,PORT,UPSTREAM_CHECKED,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE) 
		VALUES 
			(EXP_UPSTREAM_CHK_RESULT_SEQ.NEXTVAL,#awbNo#,#awbDate#,#carrCode#,#countryCode#,#port#,#upstreamChecked#,'SYSTEM',SYSDATE,'SYSTEM',SYSDATE)
	</insert>
	<select id="sqlCheckUpstreamCount" parameterClass="java.util.HashMap" resultClass="java.lang.String">
	SELECT TR_NO FROM EXP_UPSTREAM_CHK_RESULT WHERE AWB_NO=#awbNo# AND AWB_DATE=#awbDate# AND CARR_CODE=#carrCode# AND (CTRY_CODE=#countryCode# OR PORT=#port#)
	</select>
	<update id="updateUpstreamCheckResult" parameterClass="java.util.HashMap">
	UPDATE EXP_UPSTREAM_CHK_RESULT SET UPSTREAM_CHECKED = #upstreamChecked# WHERE TR_NO=#trNo#
	</update>
	<select id="upstreamJobCarrList" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO" resultClass="cargo.cms.awb.bo.AWBEnquiryBO">
	SELECT DISTINCT CARR_CODE as carrCode FROM MAST_SEC_CHECK WHERE CARR_CODE IS NOT NULL 
	</select>
	<select id="upstreamShpmtList" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO" resultClass="cargo.cms.awb.bo.AWBEnquiryBO" >
			SELECT 
				GT.AWB_NO awbNo, to_char(GT.AWB_DATE,'DDMONYY') awbDate, awb.CARR_CODE as carrCode 
			FROM
				GT_EXP_LYING_LIST GT  
				JOIN AWB awb ON GT.AWB_NO = awb.AWB_NO AND GT.AWB_DATE = awb.AWB_DATE
				LEFT JOIN EXP_CAR CAR ON GT.AWB_NO = CAR.AWB_NO AND GT.AWB_DATE = CAR.AWB_DATE				
				WHERE 1=1 AND GT.AWB_DATE > TO_DATE('31DEC19','DDMONYY')
	</select>
	
	
<select id="archivalReportId" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO" resultClass="cargo.cms.awb.bo.AWBEnquiryBO">
<![CDATA[
SELECT AWB_NO as awbNo, to_char(AWB_DATE,'DDMONYY') as awbDate, AWB_CLOSED_YN as awbClosedYn, 
(SELECT count(1) FROM awb_inventory where awb_no = a.awb_no and awb_date = a.awb_date) as invExists,
(SELECT count(1) FROM trc_flt b, trc_awb c WHERE b.awb_no = c.awb_no and b.awb_date = c.awb_date
AND (upper(b.DCRPNCY_STS) NOT IN ('CLOSE','VOID') OR b.DCRPNCY_STS IS NULL ) and b.awb_no = a.awb_no ) as trcExists,
'N' sapInd,
(SELECT count(1) FROM V_OS_CHARGE_FOR_AWB
WHERE awb_no = a.awb_no AND awb_date = a.awb_date) as chrgPending,
(select DECODE(COUNT(1), 0, '','Y') SAP_SETTLE_COUNT
FROM BILL_INV_HD D,BILL_INV_DTL B, BILL_CHARGE_DTL C WHERE 1=1 AND
 D.INV_NO=B.INV_NO and B.CHRG_TR_NO=C.TR_NO and C.awb_no = a.awb_no and C.awb_date = a.awb_date
and B.cnsldt_inv_no is not null and NVL(B.SAP_SETTLE_YN,'N')='N') as sapYN
FROM AWB a WHERE LM_DATE < (sysdate - #days#) and AWB_CLOSED_YN = 'N' order by A.CR_DATE asc
]]>
</select>

<select id="sqlFwbCarrCode" parameterClass="map" resultClass="java.lang.String">
		SELECT CARR_CODE FROM MAST_AWB_PREFIX WHERE CODE=substr(#awbNo#,0,3)
</select>
	
	<update id="updateCCAInd" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO">
	update exp_car set cca_yn = 'Y' , tr_type = 'EXCAR' where awb_no = #awbNo# and awb_date = #awbDate#	
</update>

<select id="getExpCarCount" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO" resultClass="java.lang.Integer">
	select count(*) as carCount from exp_car where awb_no = #awbNo# and awb_date = #awbDate#	
</select>
<select id="checkMatchingAgentExists" parameterClass="map" resultClass="java.lang.String">
		SELECT COUNT(*) FROM CUST_REGISTRATION WHERE (MATCH_AGENT=#agentName# OR MATCH_AGENT = (SELECT CODE FROM CUST_COMPANY WHERE CODE_DESC = #agentName#))
</select>	
<select id="fetchSupressFwbFhl" parameterClass="cargo.cms.admin.bo.SupressFwbFhlConfigBO" resultClass="cargo.cms.admin.bo.SupressFwbFhlConfigBO">	
	select TR_NO AS trNo,
		AWB_PREFIX as awbPrefix,
		CARR_CODE as carrier,
		UNLDG_PT as unloadingPort,
		DEST as destinationPort,
		COUNTRY AS destinationCountry,
		ACCEPT_MODE as awbAcceptanceMode,
		(SELECT CODE_DESC FROM MAST_CODE_DTL WHERE CODE_TYPE='AWB_ACCPT_MODE' AND GROUP_CODE='38' AND CODE=ACCEPT_MODE AND ROWNUM=1) as awbAcceptanceModeDisp,
		SUPPRESS_FHL as supressFhl,
		SUPPRESS_FWB as supressFwb
	from 
		MAST_SUPRES_FWB_FHL_CONFIG
	WHERE 1=1 
	<isNotEmpty property="awbPrefix">
	AND AWB_PREFIX = #awbPrefix#
	</isNotEmpty>
	<isNotEmpty property="searchawbPrefix">
	AND AWB_PREFIX = #searchawbPrefix#
	</isNotEmpty>
	<isNotEmpty property="trNo">
	AND TR_NO = #trNo#
	</isNotEmpty>
</select>	
 <insert id="insertSupressFwbFhl" parameterClass="cargo.cms.admin.bo.SupressFwbFhlConfigBO">
		INSERT INTO MAST_SUPRES_FWB_FHL_CONFIG(TR_NO,AWB_PREFIX,CARR_CODE,UNLDG_PT,DEST,COUNTRY,ACCEPT_MODE,SUPPRESS_FHL,SUPPRESS_FWB,CR_USER_ID,
      	CR_DATE,LM_USER_ID,LM_DATE) values(#trNo#,#awbPrefix#,#carrier#,#unloadingPort#,#destinationPort#,#destinationCountry#,#awbAcceptanceMode#,#supressFhl#,
      	#supressFwb#,#userId#,sysdate,#userId#,sysdate)
	</insert>
	<update id="updateSupressFwbFhl" parameterClass="cargo.cms.admin.bo.SupressFwbFhlConfigBO"  >
	UPDATE MAST_SUPRES_FWB_FHL_CONFIG SET
		CARR_CODE = #carrier#,
		UNLDG_PT = #unloadingPort#,
		DEST = #destinationPort#,
		COUNTRY = #destinationCountry#,
		ACCEPT_MODE = #awbAcceptanceMode#,
		SUPPRESS_FHL = #supressFhl#,
		SUPPRESS_FWB = #supressFwb# 
	WHERE 
	 TR_NO = #trNo#
	</update>
	
	<delete id="deleteSupressFwbFhl" parameterClass="cargo.cms.admin.bo.SupressFwbFhlConfigBO">
		DELETE FROM MAST_SUPRES_FWB_FHL_CONFIG WHERE TR_NO = #trNo# 
	</delete>
	<select id="fetchCountSupressFwbFhl" parameterClass="cargo.cms.admin.bo.SupressFwbFhlConfigBO" resultClass="java.lang.Integer">	
	SELECT count(1) FROM MAST_SUPRES_FWB_FHL_CONFIG WHERE AWB_PREFIX = #awbPrefix#
<isNotEmpty property="carrier">
		AND CARR_CODE = #carrier#
</isNotEmpty>
<isEmpty property="carrier">
		AND CARR_CODE is null
</isEmpty>		
<isNotEmpty property="unloadingPort">
		AND UNLDG_PT = #unloadingPort#
</isNotEmpty>
<isEmpty property="unloadingPort">
		AND UNLDG_PT is null
</isEmpty>		
<isNotEmpty property="destinationPort">
		AND DEST = #destinationPort#
</isNotEmpty>
<isNotEmpty property="destinationCountry">
		AND COUNTRY = #destinationCountry#
</isNotEmpty>

<isEmpty property="destinationPort">
		AND DEST is null
</isEmpty>		
<isNotEmpty property="awbAcceptanceMode">
		AND ACCEPT_MODE = #awbAcceptanceMode#
</isNotEmpty>
<isEmpty property="awbAcceptanceMode">
		AND ACCEPT_MODE is null
</isEmpty>
<isEmpty property="destinationCountry">
		AND COUNTRY IS NULL
</isEmpty>
<isNotEmpty property="trNo">
		AND TR_NO != #trNo#
</isNotEmpty>
	</select>	
</sqlMap>