<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="EDI">
	<select id="fetchFFMFinalize" parameterClass="cargo.cms.edi.bo.EdiFFMMsgBO"
		resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM EDI_FFM_MSG WHERE FLT_KEY =
		#carrCode# || '' || #fltNo#
		AND FLT_DATE = TO_DATE(#fltDate#,'DDMONYY')
		AND FINALIZE_DATE IS NOT
		NULL AND FINALIZE_USER_ID IS NOT NULL
	</select>
	<select id="fetchCompanyNameForExternalUser" parameterClass="java.util.HashMap"
		resultClass="java.lang.String">
		SELECT CODE_DESC FROM CUST_COMPANY WHERE CODE = (SELECT
		CUST_NO FROM
		SEC_USER WHERE CODE = #userId# AND ROWNUM = 1) AND ROWNUM
		= 1
	</select>
	<select id="fetchLadingPoints" parameterClass="cargo.cms.edi.bo.EdiFFMMsgBO"
		resultClass="cargo.cms.edi.bo.EdiFFMUldBO">
		<![CDATA[
				select brd_point,off_point from flt_opr_seg where tr_no in (
					select tr_no from flt_opr where flt_key = #fltKey#  and 
					sch_date=to_date(#fltDate#,'dd-mon-yy') and flt_type = 'A')
				and off_point='HKG'

		]]>
	</select>

	<select id="fetchAtaRegnNo" parameterClass="cargo.cms.edi.bo.EdiFFMMsgBO"
		resultClass="cargo.cms.edi.bo.EdiFFMMsgBO">
		select
		decode(act_time,null,null,substr(lpad(act_time,4,'0'),1,2)||':'||substr(lpad(act_time,4,'0'),3))||
		decode(trunc(act_date),trunc(sch_date),'
		',null,null,'/'||to_char(act_date,'dd')) as tmpAta,
		acft_reg_no as
		acftRegNo from flt_opr
		where flt_key= #fltKey#
		and
		sch_date=to_date(#fltDate#,'DDMONYY')
		and rownum=1 and flt_type='A'
	</select>

	<update id="updateImpCarSHPCARIndicator" parameterClass="java.util.HashMap">
		UPDATE IMP_CAR_SHP 
			SET car_created = NVL(#P_CAR_CREATED#,car_created)
      	WHERE FLT_KEY = #P_FLT_KEY#  AND FLT_DATE = #P_FLT_DATE#
    		AND AWB_NO   = #P_AWB_NO# AND AWB_DATE   = #P_AWB_DATE#
	</update>
	
	<select id="fetchAwbPrefix" parameterClass="cargo.cms.edi.bo.EdiFFMMsgBO"
		resultClass="java.lang.String">
		select code from mast_awb_prefix where
		carr_code=#carrCode# and DEF_YN='Y' and rownum=1
	</select>
	<select id="fetchTrnDocNo" parameterClass="cargo.cms.edi.bo.EdiFFMMsgBO"
		resultClass="cargo.cms.edi.bo.EdiFFMUldBO">
		select tr_no as tr_no, doc_line_no as doc_line_no from
		edi_ffm_uld
		where flt_key=#fltKey# and flt_date=#fltDate#
	</select>

	<select id="validatefligtwithdateandtype" parameterClass="map"
		resultClass="java.lang.String">
		SELECT count(1) FROM FLT_OPR WHERE
		UPPER(CARR_CODE) =
		UPPER(#carrCode#) AND
		SCH_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
		UPPER(FLT_TYPE) = UPPER(#fltType#) AND UPPER(FLT_NO) = UPPER(#fltNo#)
	</select>

	<select id="validateNilCargoForDummy" parameterClass="map"
		resultClass="java.lang.String">
		select count(*)
		from edi_ffm_msg a,edi_ffm_uld b
		where
		a.tr_no=b.tr_no
		and a.flt_key=#fltKey# and
		a.flt_date=to_date(#fltDate#,'DDMONYY')
		and a.ffm_status in('P','F')
		and b.brd_point=#brdPoint#
		and b.off_point=#offPoint#
		and b.nil_ind='Y'
	</select>

	<select id="validateFlightForFinalize" parameterClass="map"
		resultClass="java.lang.String">
		select NVL(max(decode(flt_opr_seg.ffm_flg,'Y',1,0)),0) as
		ffm_flg from
		flt_opr inner join flt_opr_seg on
		flt_opr.tr_no =
		flt_opr_seg.tr_no
		where
		flt_opr.flt_key = #fltKey#
		AND
		flt_opr.sch_date=to_date(#fltDate#,'ddmonyy')
		AND flt_opr.flt_type =
		'A'
	</select>

	<select id="checkAATInventory" parameterClass="map"
		resultClass="java.lang.Integer">
		select count(1) from uld_inventory where uld_key=#uld_key#
		AND OWNED_INV = 'Y'
	</select>

	<insert id="insertEdiFmmMsg" parameterClass="cargo.cms.edi.bo.EdiFFMMsgBO">
		INSERT INTO
		EDI_FFM_MSG
		(TR_NO,MSG_SEQ_NUM, CARR_CODE, FLT_NO, FLT_DATE,
		FLT_KEY,COPY_NO, MSG_VER,SEND_DATE,
		ACFT_REG_NO, FFM_STATUS,
		ALT_FLIGHT_CAR,
		ALT_FLIGHT_NO,ALT_FLIGHT_DATE,SI_TYPE,BRD_POINT,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE, TR_TYPE)
		VALUES
		(#trNo#,#msgSeqNum#,#carrCode#, #fltNo#,
		TO_DATE(#fltDate#,'ddmonyy'), #fltKey#,#copyNo#,#msgVer#,
		TO_DATE(#sendDate#,'ddmonyy'), #acftRegNo#,
		#ffmStatus#,#altFlightCar#,#altFlightNo#,
		TO_DATE(#altFlightDate#,'ddmonyy'),#siType#,#brdPoint#,#CR_USER_ID#,sysdate,
		#LM_USER_ID#,sysdate, 'CEFFM')
	</insert>
	<insert id="updateEdiFmmMsg_boardingPt" parameterClass="cargo.cms.edi.bo.EdiFFMMsgBO">
		update EDI_FFM_MSG set BRD_POINT = #brdPoint#,COPY_NO = COPY_NO+1,tr_type = 'CEFFM' where FLT_KEY  = #fltKey# and FLT_DATE = TO_DATE(#fltDate#,'ddmonyy') and SI_TYPE = 'S' 
	</insert>

	<insert id="insertEdiFmmUld" parameterClass="cargo.cms.edi.bo.EdiFFMUldBO">
		INSERT INTO
		EDI_FFM_ULD
		(TR_NO, DOC_LINE_NO, ULD_TYPE, ULD_NO, ULD_CARR, ULD_KEY,
		NIL_IND, BRD_POINT,
		OFF_POINT,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE )
		VALUES (#tr_no#, #doc_line_no#, #uld_type#, #uld_no#, #uld_carr#,
		#uld_key#,#nil_ind#,#brd_point#,#off_point#
		,#CR_USER_ID#,sysdate,#LM_USER_ID#,sysdate)
	</insert>

	<insert id="insertEdiFmmShp" parameterClass="cargo.cms.edi.bo.EdiFFMShpBO">
		INSERT INTO
		EDI_FFM_SHP (TR_NO, DOC_LINE_NO, UDOC_LINE_NO, AWB_NO,
		AWB_DATE, ORG,
		DEST, CONTENT, PCS, WT, SPL_CODE1, SPL_CODE2,SPL_CODE3,SPL_CODE4,SPL_CODE5,SPL_CODE6,SPL_CODE7,SPL_CODE8,SPL_CODE9, MAN_PCS,
		MAN_WT,
		SHMPT_CODE,TOTAL_PCS,BRD_POINT,OFF_POINT,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,LOC_CODE,CNSL_IND, TR_TYPE)
		VALUES (#tr_no#, #doc_line_no#,#udoc_line_no#, #awb_no#,
		TO_DATE(#awb_date#,'ddmonyy'),#org#, #dest#, #content#,
		DECODE(#shmpt_code#,'T',#pcs#,NVL(#total_pcs#,#pcs#)),DECODE(#shmpt_code#,'T',#wt#,'0'),
		#spl_code1#, #spl_code2#,#spl_code3#,#spl_code4#,#spl_code5#,#spl_code6#,#spl_code7#,#spl_code8#,#spl_code9#, #pcs#, #wt#, #shmpt_code#, #total_pcs#,
		#brd_point#, #off_point#
		,#CR_USER_ID#,sysdate,#LM_USER_ID#,sysdate,'0',#cnsl_ind#, #trtype#)
	</insert>

	<select id="validateOrigin" parameterClass="map" resultClass="java.lang.String">
		SELECT count(*) FROM MAST_CITY WHERE
		UPPER(code) = UPPER(#org#) 
	</select>

	<select id="validateNilCargo" parameterClass="map" resultClass="java.lang.String">
		select count(*) from edi_ffm_uld b,edi_ffm_msg a where a.flt_key =
		#fltKey# and a.flt_date = TO_DATE(#fltDate#,'ddmonyy')
		and b.tr_no =
		a.tr_no and b.brd_point = #brdPoint# and b.off_point = 'HKG' 
		and a.ffm_status in('P')
	</select>

	<select id="validateNilCargo_Yes" parameterClass="map"
		resultClass="java.lang.String">
		select max(decode(edi_ffm_uld.nil_ind,'Y',1,0)) as nilflag
		from edi_ffm_msg left outer join edi_ffm_uld
		on edi_ffm_msg.tr_no =
		edi_ffm_uld.tr_no
		where edi_ffm_msg.flt_key = #fltKey#
		and
		edi_ffm_msg.flt_date =
		TO_DATE(#fltDate#,'dd-mon-yy')
		and
		edi_ffm_msg.ffm_status in('P','F')
		and edi_ffm_uld.brd_point =
		#brdPoint#
		and edi_ffm_uld.off_point =
		'HKG'
	</select>

	<select id="validateOrgDest" parameterClass="map" resultClass="java.lang.String">
          select count(*) from mast_city a,mast_arpt b Where a.code =
          b.city_code(+) and
          (a.code = #city# or b.code = #city#)
    </select>

	<select id="validateSplCode" parameterClass="map" resultClass="java.lang.String">
            SELECT count(*) FROM MAST_SPL_HAND_CODE WHERE code=#splCode#
      </select>

	<select id="isEdiFFMMsgExist" parameterClass="cargo.cms.edi.bo.EdiFFMMsgBO"
		resultClass="java.lang.String">
		select edi_ffm_msg.tr_no
		from edi_ffm_msg
		where
		edi_ffm_msg.flt_key = #fltKey#
		and edi_ffm_msg.flt_date =
		to_date(#fltDate#,'dd-mon-yy')
		and edi_ffm_msg.si_type = 'S'
	</select>

	<select id="isEdiFFMUldKeyExist" parameterClass="map"
		resultClass="java.lang.String">
		select edi_ffm_uld.doc_line_no
		from edi_ffm_msg inner join edi_ffm_uld
		on edi_ffm_msg.tr_no = edi_ffm_uld.tr_no
		and edi_ffm_uld.brd_point =
		#brdPoint#
		and edi_ffm_uld.off_point = #offPoint#
		<isEmpty prepend="AND" property="uldKey">
			edi_ffm_uld.uld_key is null
		</isEmpty>
		<isNotEmpty prepend="AND" property="uldKey">
			edi_ffm_uld.uld_key =
			#uldKey#
		</isNotEmpty>
		where
		edi_ffm_msg.flt_key = #fltKey#
		and edi_ffm_msg.flt_date =
		to_date(#fltDate#,'dd-mon-yy')
		and
		edi_ffm_msg.si_type = 'S' 
		<!--
			or (edi_ffm_msg.si_type = 'I' and edi_ffm_msg.ffm_status='P'))
		-->
	</select>

	<select id="isEdiFFMAwbNoExist" parameterClass="map"
		resultClass="java.lang.String">
		select count(edi_ffm_shp.awb_no) as awbNo
		from edi_ffm_msg inner join
		edi_ffm_uld
		on edi_ffm_msg.tr_no = edi_ffm_uld.tr_no
		<isNotEmpty prepend="AND" property="uldKey">
			edi_ffm_uld.uld_key =
			#uldKey#
		</isNotEmpty>
		<isEmpty prepend="AND" property="uldKey">
			edi_ffm_uld.uld_key is null
		</isEmpty>
		left join edi_ffm_shp
		on edi_ffm_msg.tr_no = edi_ffm_shp.tr_no
		and
		edi_ffm_uld.doc_line_no = edi_ffm_shp.udoc_line_no
		<!-- and edi_ffm_shp.brd_point = #brdPt# -->
		and edi_ffm_shp.off_point = #offPt#
		and
		edi_ffm_shp.awb_no = #awbNo#
		where
		edi_ffm_msg.flt_key = #fltKey#
		and
		edi_ffm_msg.flt_date = to_date(#fltDate#,'dd-mon-yy')
		and
		(edi_ffm_msg.si_type = 'S' or (edi_ffm_msg.si_type = 'I' and
		edi_ffm_msg.ffm_status='P'))
	</select>


	<select id="isEdiFFMAwbNoExistFROMMSG" parameterClass="map"
		resultClass="java.lang.String">
		select count(edi_ffm_shp.awb_no) as awbNo
		from edi_ffm_msg inner
		join edi_ffm_uld on edi_ffm_msg.tr_no = edi_ffm_uld.tr_no
		<isNotEmpty prepend="AND" property="uldKey">
			edi_ffm_uld.uld_key = #uldKey#
		</isNotEmpty>
		<isEmpty prepend="AND" property="uldKey">
			edi_ffm_uld.uld_key is null
		</isEmpty>
		left join edi_ffm_shp on edi_ffm_msg.tr_no = edi_ffm_shp.tr_no and edi_ffm_uld.doc_line_no = edi_ffm_shp.udoc_line_no		
				and edi_ffm_shp.off_point = #offPt# and edi_ffm_shp.awb_no = #awbNo#
		where
		edi_ffm_msg.flt_key = #fltKey#
		and  edi_ffm_msg.flt_date = TO_DATE(#fltDate#,'MM/DD/YYYY')
		and edi_ffm_msg.si_type = 'S'
	</select>
	
	
	<select id="receivedPCCNTFFM"  parameterClass="map"  resultClass="java.lang.Integer">
		SELECT (select count(1) as A from imp_car_shp  where awb_no = #awbNo# AND awb_date = to_date(pkg_common.get_awb_date(#awbNo#),'DDMONYY') and nvl(recd_pcs,0) > 0 ) +
		(select count(1) as A from v_ddt_dtl where awb_no = #awbNo# AND awb_date = to_date(pkg_common.get_awb_date(#awbNo#),'DDMONYY') and shp_trf_type is not null) as count from DUAL
	</select>
	
	<select id="receivedPCCNTFFMScr"  parameterClass="map"  resultClass="java.lang.Integer">
		SELECT (select count(1) as A from imp_car_shp  where awb_no = #awbNo# AND awb_date = to_date(pkg_common.get_awb_date(#awbNo#),'DDMONYY') and nvl(recd_pcs,0) > 0 ) +
		(select count(1) as A from v_ddt_dtl where awb_no = #awbNo# AND awb_date = to_date(pkg_common.get_awb_date(#awbNo#),'DDMONYY') and shp_trf_type is not null) as count from DUAL
	</select>
	
	<select id="getOLDAWBType"  parameterClass="map"  resultClass="java.lang.String">
		select awb_type as awbType FROM AWB where awb_no = #awbNo#  AND awb_date = to_date(pkg_common.get_awb_date(#awbNo#),'DDMONYY') 
	</select>
	

	<select id="fetchTotalPcsWt" parameterClass="map"
		resultClass="cargo.cms.edi.bo.EdiFFMMsgBO">
		select sum(edi_ffm_shp.man_pcs) as tmpTotalPc ,
		sum(edi_ffm_shp.man_wt) as tmpTotalWt
		from edi_ffm_msg inner
		join edi_ffm_uld
		on edi_ffm_msg.tr_no = edi_ffm_uld.tr_no
		and
		edi_ffm_uld.brd_point = #brdPt#
		and edi_ffm_uld.off_point = #offPt#
		left join edi_ffm_shp
		on edi_ffm_msg.tr_no = edi_ffm_shp.tr_no
		and
		edi_ffm_uld.doc_line_no = edi_ffm_shp.udoc_line_no
		where
		edi_ffm_msg.flt_key = #fltKey#
		and edi_ffm_msg.flt_date =
		to_date(#fltDate#,'dd-mon-yy')
		and
		(edi_ffm_msg.si_type = 'S' or
		(edi_ffm_msg.si_type = 'I' and
		edi_ffm_msg.ffm_status='P'))		
	</select>
	
	<select id="sqlCheckFFMExistsforLadingPoint" parameterClass="map" resultClass="java.lang.Integer">
		select count(1)
		from edi_ffm_msg inner
		join edi_ffm_uld
		on edi_ffm_msg.tr_no = edi_ffm_uld.tr_no
		and
		edi_ffm_uld.brd_point = #brdPt#
		and edi_ffm_uld.off_point = #offPt#		
		where
		edi_ffm_msg.flt_key = #fltKey#
		and edi_ffm_msg.flt_date =
		to_date(#fltDate#,'dd-mon-yy')
		and
		(edi_ffm_msg.si_type = 'S' or
		(edi_ffm_msg.si_type = 'I' and
		edi_ffm_msg.ffm_status='P'))
	</select>
	
	<select id="fetchEnquiryFFMAwbDetails" parameterClass="map"
		resultClass="cargo.cms.edi.bo.EdiFFMShpBO">
		select distinct edi_ffm_msg.tr_no, edi_ffm_uld.doc_line_no as
		udoc_line_no,
		edi_ffm_shp.doc_line_no, edi_ffm_uld.uld_key as
		tmpUldKey,
		decode(edi_ffm_shp.awb_no,null,null,substr(edi_ffm_shp.awb_no, 1, 3)
		|| '-' ||
		substr(edi_ffm_shp.awb_no, 4)) as awb_no,
		edi_ffm_shp.org,edi_ffm_shp.dest,
		edi_ffm_shp.shmpt_code,
		edi_ffm_shp.awb_no awbNo,
		edi_ffm_shp.man_pcs,
		trim(to_char(edi_ffm_shp.man_wt, 'FM9999990.90')) as
		man_wt,decode(edi_ffm_shp.shmpt_code, 'T', '', edi_ffm_shp.pcs) as
		pcs,
		edi_ffm_shp.content, edi_ffm_shp.spl_code1, edi_ffm_shp.spl_code2,
		edi_ffm_shp.spl_code3,edi_ffm_shp.spl_code4,edi_ffm_shp.spl_code5,
		edi_ffm_shp.spl_code6,edi_ffm_shp.spl_code7,edi_ffm_shp.spl_code8,
		edi_ffm_shp.spl_code9,'AccsSubmitted'
		tmpAccs_Sbt_Ind, to_char(edi_ffm_shp.LM_DATE,'ddMMYY hh24:mi:ss')as
		LM_DATE,
		to_char(edi_ffm_uld.LM_DATE,'ddMMYY hh24:mi:ss')as uldlmDate
		from edi_ffm_msg inner join edi_ffm_uld on
		edi_ffm_msg.tr_no = edi_ffm_uld.tr_no
		<isNotPropertyAvailable property="isType"
			prepend="AND">
			edi_ffm_uld.brd_point = #brdPt# and edi_ffm_uld.off_point =
			#offPt#	
		</isNotPropertyAvailable>
		left join edi_ffm_shp
		on edi_ffm_msg.tr_no = edi_ffm_shp.tr_no
		and
		edi_ffm_uld.doc_line_no = edi_ffm_shp.udoc_line_no
		where
		edi_ffm_msg.flt_key =#fltKey#
		and edi_ffm_msg.flt_date
		=to_date(#fltDate#, 'dd-mon-yy')
		and (edi_ffm_msg.si_type = 'S' or
		(edi_ffm_msg.si_type = 'I' and
		ffm_status = 'P'))
		and edi_ffm_shp.AWB_NO
		= nvl(#filterAwbNo#, edi_ffm_shp.AWB_NO)
		<isPropertyAvailable property="isType">
			<isEqual prepend="AND" property="isType" compareValue="S">
				(edi_ffm_shp.spl_code1 is not null or
				 edi_ffm_shp.spl_code2 is not null or
				 edi_ffm_shp.spl_code3 is not null or
				 edi_ffm_shp.spl_code4 is not null or
				 edi_ffm_shp.spl_code5 is not null or
				 edi_ffm_shp.spl_code6 is not null or
				 edi_ffm_shp.spl_code7 is not null or
				 edi_ffm_shp.spl_code8 is not null or
				 edi_ffm_shp.spl_code9 is not null
				)
		  </isEqual>
		</isPropertyAvailable>
		order by uld_key nulls first, awb_no
	</select>

	<delete id="deleteUldDetails" parameterClass="map">
		delete from
		edi_ffm_uld where tr_no = #trNo# and doc_line_no = #docLineNO#		
	</delete>
	<delete id="deleteUldDetail" parameterClass="java.lang.String">
		delete from
		edi_ffm_uld where tr_no = #PARAM# 
	</delete>
<update id="updateEdiFfmShpTrg" parameterClass="map">
		update edi_ffm_shp set LM_USER_ID=#lmUser#,LM_DATE=SYSDATE
		where tr_no = #trNo# and doc_line_no = #docLineNO#
	</update>
	<delete id="deleteAwbDetails" parameterClass="map">
		delete from
		edi_ffm_shp where tr_no = #trNo# and doc_line_no = #docLineNO#
	</delete>

	<delete id="deleteMsgFFMDetails" parameterClass="cargo.cms.edi.bo.EdiFFMMsgBO">
		Delete from
		EDI_FFM_MSG where flt_key = #fltKey#
		and flt_date =
		to_date(#fltDate#,'dd-mon-yy')
		and si_type in ('S','I')

	</delete>
	<delete id="deleteFFMULDDetails" parameterClass="cargo.cms.edi.bo.EdiFFMMsgBO">
		DELETE FROM EDI_FFM_ULD WHERE TR_NO IN(SELECT TR_NO FROM
		EDI_FFM_MSG where flt_key = #fltKey#
		and flt_date =
		to_date(#fltDate#,'dd-mon-yy')
		and si_type in ('S','I'))	
	</delete>

	<delete id="deleteUldWithNoShipments" parameterClass="map">
		DELETE FROM
		EDI_FFM_ULD A
		WHERE NOT EXISTS(SELECT 1 FROM EDI_FFM_SHP WHERE
		TR_NO=A.TR_NO AND
		UDOC_LINE_NO=A.DOC_LINE_NO) AND A.NIL_IND='N'and
		to_char(LM_DATE, 'ddMMYY hh24:mi:ss')=#lmDate#
	</delete>

	<delete id="deleteUldForNilCargo" parameterClass="map">
		delete from
		edi_ffm_uld a where exists(SELECT tr_no FROM edi_ffm_msg b WHERE
		flt_key=#fltKey# and
		b.tr_no = a.tr_no and flt_date=
		to_date(#fltDate#,'DDMONYY') and (si_type='S'
		or (si_type = 'I' and
		ffm_status='P'))) and nil_ind='Y' and brd_point=#brdPoint# and
		off_point= #offPoint#
	</delete>

	<update id="updateAwbDetails" parameterClass="cargo.cms.edi.bo.EdiFFMShpBO">
		update edi_ffm_shp
		set udoc_line_no = #udoc_line_no#,org = #org#,dest
		= #dest#,shmpt_code
		= #shmpt_code#,pcs = #pcs#,wt = #wt#,
		total_pcs =
		#total_pcs#,man_pcs=#man_pcs#,man_wt=#man_wt#,content =
		#content#,spl_code1 = #spl_code1#,spl_code2 = #spl_code2#,spl_code3 = #spl_code3#,
		spl_code4 = #spl_code4#,spl_code5 = #spl_code5#,spl_code6 = #spl_code6#,
		spl_code7 = #spl_code7#,spl_code8 = #spl_code8#,spl_code9 = #spl_code9#,
		LM_USER_ID=#LM_USER_ID#,LM_DATE=sysdate,CNSL_IND=#cnsl_ind#
		where tr_no
		= #tr_no# and doc_line_no = #doc_line_no# 
	</update>

	<update id="updateUldDetails" parameterClass="cargo.cms.edi.bo.EdiFFMUldBO">
		update edi_ffm_uld
		set
		uld_type=#uld_type#,uld_no=#uld_no#,uld_carr=#uld_carr#,uld_key=#uld_key#,
		LM_USER_ID=#LM_USER_ID#,LM_DATE=sysdate
		where tr_no=#tr_no# and
		doc_line_no=#doc_line_no# 	
	</update>
	<update id="updateUldDetailsForNilCargo" parameterClass="cargo.cms.edi.bo.EdiFFMUldBO">
		update
		edi_ffm_uld
		set NIL_IND =#nil_ind#,
		LM_USER_ID=#LM_USER_ID#,LM_DATE=sysdate
		where
		tr_no=#tr_no# and
		doc_line_no=#doc_line_no#		
	</update>
	<update id="updateUldDetailsForNilCargo1" parameterClass="cargo.cms.edi.bo.EdiFFMUldBO">
		update
		edi_ffm_uld
		set NIL_IND =#nil_ind#,
		LM_USER_ID=#LM_USER_ID#,LM_DATE=sysdate
		where
		tr_no=#tr_no# and
		doc_line_no=#doc_line_no# 	
	</update>

	<!--
		<update id="updateUldToBulk" parameterClass=""> update edi_ffm_uld set
		uld_no='',uld_key='',uld_carr='',uld_type='' where tr_no=## and
		doc_line_no=## </update>
	-->

	<select id="isEdiFFMUldKeyExistAmend1" parameterClass="map"
		resultClass="cargo.cms.edi.bo.EdiFFMUldBO">
		select edi_ffm_uld.tr_no,
		edi_ffm_uld.doc_line_no,to_char(edi_ffm_uld.LM_DATE,'ddMMYY
		hh24:mi:ss')as uldlmDate
		from edi_ffm_msg inner join edi_ffm_uld
		on
		edi_ffm_msg.tr_no = edi_ffm_uld.tr_no
		and edi_ffm_uld.brd_point =
		#brdPoint#
		and edi_ffm_uld.off_point = #offPoint#
		<isEmpty prepend="AND" property="uldKey">
			edi_ffm_uld.uld_key is null
		</isEmpty>
		<isNotEmpty prepend="AND" property="uldKey">
			edi_ffm_uld.uld_key =
			#uldKey#
		</isNotEmpty>
		where
		edi_ffm_msg.flt_key = #fltKey#
		and edi_ffm_msg.flt_date =
		to_date(#fltDate#,'dd-mon-yy')
		and
		edi_ffm_msg.si_type = 'S'
	</select>

	<select id="isEdiFFMUldKeyExistAmend2" parameterClass="map"
		resultClass="cargo.cms.edi.bo.EdiFFMUldBO">
		select
		edi_ffm_uld.tr_no,edi_ffm_uld.doc_line_no,to_char(edi_ffm_uld.LM_DATE,'ddMMYY
		hh24:mi:ss')as uldlmDate
		from edi_ffm_msg inner join edi_ffm_uld
		on
		edi_ffm_msg.tr_no = edi_ffm_uld.tr_no
		and edi_ffm_uld.brd_point =
		#brdPoint#
		and edi_ffm_uld.off_point = #offPoint#
		<isEmpty prepend="AND" property="uldKey">
			edi_ffm_uld.uld_key is null
		</isEmpty>
		<isNotEmpty prepend="AND" property="uldKey">
			edi_ffm_uld.uld_key =
			#uldKey#
		</isNotEmpty>
		where
		edi_ffm_msg.flt_key = #fltKey#
		and edi_ffm_msg.flt_date =
		to_date(#fltDate#,'dd-mon-yy')
		and
		(edi_ffm_msg.si_type = 'I' and
		edi_ffm_msg.ffm_status='P')
	</select>

	<select id="fetchUldToBulkCarAwbDetails" parameterClass="map"
		resultClass="cargo.cms.edi.bo.EdiFFMShpBO">
		select edi_ffm_shp.*
		from edi_ffm_msg inner join
		edi_ffm_uld
		on edi_ffm_msg.tr_no = edi_ffm_uld.tr_no
		and
		edi_ffm_uld.uld_key is null
		left join edi_ffm_shp
		on edi_ffm_msg.tr_no =
		edi_ffm_shp.tr_no
		and edi_ffm_uld.doc_line_no =
		edi_ffm_shp.udoc_line_no
		and edi_ffm_shp.brd_point = #brdPt#
		and
		edi_ffm_shp.off_point = #offPt#
		and edi_ffm_shp.awb_no = #awbNo#
		where
		edi_ffm_msg.flt_key = #fltKey#
		and edi_ffm_msg.flt_date =
		to_date(#fltDate#,'dd-mon-yy')
		and (edi_ffm_msg.si_type = 'S' or
		(edi_ffm_msg.si_type = 'I' and edi_ffm_msg.ffm_status='P'))
	</select>

	<select id="lbsProgressCheck" parameterClass="map" resultClass="java.lang.String">
		<![CDATA[
		select count(*) from cst_subm where flt_type='I' and flt_key=#fltKey# and flt_date=to_date(#fltDate#,'ddmonyy')  and
		rec_type='BDS' and msg_type='L' and send_status in('P','W')
		]]>
	</select>

	<select id="prioritySubmitChk" parameterClass="map" resultClass="java.lang.String">
		<![CDATA[
			SELECT count(1) CNT FROM CST_CSGNM A,CST_SUBM B WHERE A.FLT_TYPE = B.FLT_TYPE AND A.FLT_KEY = B.FLT_KEY
		   AND A.FLT_DATE = B.FLT_DATE AND A.VER_NO = B.VER_NO AND A.RECV_REC_TYPE = B.REC_TYPE AND B.FLT_TYPE='I'
		   AND B.FLT_KEY=#fltKey# AND B.FLT_DATE = to_date(#fltDate#,'DDMONYY') AND B.REC_TYPE = 'INT' AND 
			A.AWB_NO=#awbNo# AND (B.SEND_STATUS IN('P','W','A')) AND A.HAWB_NO='000000000000000000' AND 
			SUBSTR(A.CNS_DTL,1030,1)!=' ' AND ROWNUM<=1
		]]>
	</select>

	<select id="checkCustomsAck" parameterClass="map" resultClass="java.lang.String">
		SELECT nvl(count(1),0) cnt FROM CST_ACK A WHERE A.FLT_TYPE='I' AND
		A.FLT_KEY = #fltKey# AND A.FLT_DATE = #fltDate#
		AND A.ACK_REC_TYPE =
		'CLR' AND ROWNUM= 1 
	</select>

	<select id="fetchAmdDelFFM" parameterClass="map"
		resultClass="cargo.cms.edi.bo.EdiFFMShpBO">
		select edi_ffm_msg.tr_no, edi_ffm_uld.doc_line_no as udoc_line_no,
		edi_ffm_shp.doc_line_no, edi_ffm_uld.uld_key as tmpUldKey,
		decode(edi_ffm_shp.awb_no,null,null,substr(edi_ffm_shp.awb_no, 1, 3)
		|| '-' ||
		substr(edi_ffm_shp.awb_no, 4)) as awb_no, edi_ffm_shp.org,
		edi_ffm_shp.dest, edi_ffm_shp.shmpt_code, edi_ffm_shp.man_pcs,
		edi_ffm_shp.man_wt,
		decode(edi_ffm_shp.shmpt_code, 'T', '',
		edi_ffm_shp.pcs) as pcs,
		edi_ffm_shp.content, edi_ffm_shp.spl_code1,
		edi_ffm_shp.spl_code2,
		'AccsNotSubmitted'
		tmpAccs_Sbt_Ind,to_char(edi_ffm_shp.LM_DATE,'ddMMYY hh24:mi:ss')as
		LM_DATE,
		to_char(edi_ffm_uld.LM_DATE,'ddMMYY hh24:mi:ss')as uldlmDate
		from edi_ffm_msg
		inner join edi_ffm_uld on edi_ffm_msg.tr_no =
		edi_ffm_uld.tr_no
		<isNotPropertyAvailable property="isType"
			prepend="AND">
			edi_ffm_uld.brd_point = #brdPt# and edi_ffm_uld.off_point =
			#offPt#			
		</isNotPropertyAvailable>
		left join edi_ffm_shp
		on edi_ffm_msg.tr_no = edi_ffm_shp.tr_no
		and
		edi_ffm_uld.doc_line_no = edi_ffm_shp.udoc_line_no
		inner join cst_awb
		on edi_ffm_msg.flt_key = cst_awb.FLT_KEY
		and edi_ffm_msg.flt_date =
		cst_awb.FLT_DATE
		and edi_ffm_shp.awb_no = cst_awb.AWB_NO
		<isPropertyAvailable property="isType">
			<isEqual prepend="AND" property="isType" compareValue="S">
				(edi_ffm_shp.spl_code1 is not null or
				edi_ffm_shp.spl_code2 is not
				null)
		  </isEqual>
		</isPropertyAvailable>
		where edi_ffm_msg.flt_key = nvl(#fltKey#, edi_ffm_msg.flt_key)
		and
		edi_ffm_msg.flt_date
		=decode(#fltDate#,null,edi_ffm_msg.flt_date,to_date(#fltDate#,
		'dd-mon-yy'))
		and (edi_ffm_msg.si_type = 'S' or (edi_ffm_msg.si_type =
		'I' and
		ffm_status = 'P'))
		and edi_ffm_shp.AWB_NO = nvl(#filterAwbNo#,
		edi_ffm_shp.AWB_NO)		
		order by uld_key nulls
		first, edi_ffm_shp.awb_no
	</select>

	<select id="checkCstSubt" parameterClass="map" resultClass="java.lang.String">
		SELECT nvl(count(1),0) cnt
		FROM CST_AWB A, V_CST_SUBMITTED_AWB B
		WHERE
		A.FLT_KEY = B.FLT_KEY AND A.FLT_DATE = B.FLT_DATE AND A.AWB_NO =
		B.AWB_NO
		AND A.FLT_KEY = #fltKey# AND A.FLT_DATE = #fltDate# AND
		A.REL_IND IS NOT
		NULL
		AND A.AWB_NO = #awbNo# AND ROWNUM = 1
	</select>

	<select id="checkCarCreatedFFM" parameterClass="map"
		resultClass="java.lang.String">
		SELECT COUNT(1) FROM IMP_CAR_SHP,AWB
		WHERE IMP_CAR_SHP.AWB_NO = AWB.AWB_NO AND IMP_CAR_SHP.AWB_DATE = AWB.AWB_DATE AND
    	IMP_CAR_SHP.FLT_KEY = #fltKey# AND IMP_CAR_SHP.FLT_DATE = #fltDate# AND IMP_CAR_SHP.FFM_FLG = 'Y' AND 
    	IMP_CAR_SHP.AWB_NO = #awbNo# AND IMP_CAR_SHP.AWB_DATE = #awbDate# 
    	AND (IMP_CAR_SHP.CAR_CREATED = 'Y') AND AWB.AWB_TYPE = 'I'
	</select>


	<parameterMap id="hParam" class="map">
		<parameter property="status" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="OUT" />
		<parameter property="trNo" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="IN" />
		<parameter property="docLineNo" jdbcType="NUMBER" javaType="java.lang.String"
			mode="IN" />
		<parameter property="fltKey" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="IN" />
		<parameter property="fltDate" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="IN" />
		<parameter property="uldKey" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="IN" />
		<parameter property="action" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="IN" />
	</parameterMap>
	<procedure id="sqlfundelffmuld" parameterMap="hParam">
		{? = call
		fun_del_ffm_uld(?,?,?,?,?,?)}
	</procedure>

	<select id="FgetTrnDocNo" parameterClass="map"
		resultClass="cargo.cms.edi.bo.EdiFFMUldBO">
		SELECT a.tr_no AS tr_no, b.doc_line_no AS
		doc_line_no,to_char(b.LM_DATE,'ddMMYY hh24:mi:ss')as uldlmDate
		FROM
		edi_ffm_msg a, edi_ffm_uld b
		WHERE a.tr_no = b.tr_no AND a.flt_key
		=#fltKey# AND b.uld_key = #uldKey#
		AND a.flt_date =
		to_date(#fltDate#,'ddmonyy') AND a.ffm_status IN
		('P', 'F')
  	</select>

	<select id="FgetDocNo" parameterClass="map" resultClass="java.lang.String">
		SELECT
		doc_line_no
		FROM edi_ffm_msg a, edi_ffm_uld b
		WHERE a.tr_no = b.tr_no
		AND a.tr_no =#trNo# AND b.uld_key IS NULL AND
		b.nil_ind = 'N'
  	</select>

	<select id="FgetTrnUdocNo" parameterClass="map"
		resultClass="cargo.cms.edi.bo.EdiFFMShpBO">
		SELECT tr_no as tr_no , udoc_line_no as udoc_line_no,
		doc_line_no as
		doc_line_no, man_wt as man_wt, man_pcs as man_pcs,
		awb_no as awbNo, to_char(LM_DATE,'ddMMYY hh24:mi:ss')as LM_DATE
		FROM
		edi_ffm_shp
		WHERE tr_no =#trNo# AND udoc_line_no = #docLineNo#
  	</select>
	<insert id="" parameterClass="cargo.cms.edi.bo.EdiFFMShpBO">
		insert into cst_auto_submit_log
		values(to_char(sysdate,'yyyy.mm.dd
		hh24:mi:ss')||#doc_line_no#||'
		'||#awb_no#);
  	</insert>
	<update id="FupdateShp" parameterClass="map">
		UPDATE edi_ffm_shp
		SET
		man_pcs =man_pcs+#man_pcs#, man_wt = man_wt+#man_wt#,LM_DATE=sysdate
		WHERE tr_no = #trNo# AND udoc_line_no = #bulklineno# AND awb_no = #awbno#
  	</update>

	<delete id="FdeleteAwbDetails" parameterClass="cargo.cms.edi.bo.EdiFFMShpBO">
		delete from
		edi_ffm_shp where tr_no = #tr_no# and doc_line_no =
		#doc_line_no# and
		udoc_line_no=#udoc_line_no#		
	</delete>

	<update id="FupdateUld" parameterClass="map">
		UPDATE edi_ffm_uld
		SET
		uld_type =#uldType#, uld_no =#uldNo#, uld_carr =#uldCarr#,uld_key =
		#uldKey#,LM_DATE=sysdate
		WHERE tr_no = #trNo# AND doc_line_no =
		#docLineNo# and to_char(LM_DATE,
		'ddMMYY hh24:mi:ss')=#lmDate#
  	</update>

	<delete id="FdeleteediFFMUld" parameterClass="map">
		DELETE FROM
		edi_ffm_uld
		WHERE tr_no = #trNo# AND
		(0=(SELECT count(1) FROM
		edi_ffm_shp b, edi_ffm_uld a WHERE b.tr_no = a.tr_no
		AND b.udoc_line_no
		= a.doc_line_no))
		and to_char(LM_DATE, 'ddMMYY hh24:mi:ss')=#lmDate#
	</delete>

	<select id="fetchUldList" parameterClass="map"
		resultClass="cargo.cms.edi.bo.EdiFFMUldBO">
		SELECT 
			EDI_FFM_ULD.ULD_KEY, EDI_FFM_ULD.BRD_POINT, EDI_FFM_ULD.OFF_POINT, 
			TO_CHAR(EDI_FFM_ULD.LM_DATE,'DDMMYY HH24:MI:SS')As LM_DATE, 
			SHP.PCS AS tmpSubTotalAwbPcs, SHP.WT As Tmpsubtotalawbwt 
		FROM EDI_FFM_MSG 
		INNER JOIN EDI_FFM_ULD ON EDI_FFM_ULD.TR_NO=EDI_FFM_MSG.TR_NO
		LEFT OUTER JOIN (SELECT SUM(MAN_PCS) AS PCS, SUM(MAN_WT) AS WT, TR_NO, UDOC_LINE_NO FROM EDI_FFM_SHP 
			GROUP BY TR_NO, UDOC_LINE_NO) SHP 
			ON EDI_FFM_MSG.TR_NO=SHP.TR_NO AND SHP.UDOC_LINE_NO=EDI_FFM_ULD.DOC_LINE_NO 
		WHERE   
		EDI_FFM_ULD.ULD_KEY IS NOT NULL AND EDI_FFM_MSG.FLT_KEY=#fltKey# AND EDI_FFM_MSG.FLT_DATE=TO_DATE(#fltDate#, 'DD-MON-YY') AND 
		EDI_FFM_MSG.FFM_STATUS IN ('P', 'F')
		<!-- FIX :: IN144417
		select
		edi_ffm_uld.uld_key,edi_ffm_uld.brd_point,edi_ffm_uld.off_point,nvl(sum(edi_ffm_shp.man_pcs),0)
		as tmpSubTotalAwbPcs,
		trunc(nvl(sum(edi_ffm_shp.man_wt),0),1) as
		tmpSubTotalAwbWt,to_char(edi_ffm_uld.LM_DATE,'ddMMYY hh24:mi:ss')as
		LM_DATE
		from
		edi_ffm_msg inner join edi_ffm_uld
		on edi_ffm_msg.tr_no =
		edi_ffm_uld.tr_no
		and
		edi_ffm_uld.uld_key is not null
		left outer join
		edi_ffm_shp on
		edi_ffm_uld.tr_no = edi_ffm_shp.tr_no
		and
		edi_ffm_uld.doc_line_no =
		edi_ffm_shp.udoc_line_no
		where
		edi_ffm_msg.flt_key = #fltKey#
		and edi_ffm_msg.flt_date =
		to_date(#fltDate#,'dd-mon-yy')
		and edi_ffm_msg.ffm_status in('P','F')
		group by
		edi_ffm_uld.uld_key,edi_ffm_uld.brd_point,edi_ffm_uld.off_point,edi_ffm_shp.man_wt,edi_ffm_shp.man_pcs,edi_ffm_uld.LM_DATE -->
	</select>

	<select id="fetchTotalAWBNo" parameterClass="map" resultClass="java.lang.String">
		select NVL(COUNT(DISTINCT C.AWB_NO),0) as
		FROM EDI_FFM_MSG A,
		EDI_FFM_ULD B,
		EDI_FFM_SHP C
		where A.TR_NO = B.TR_NO
		AND B.TR_NO =
		C.TR_NO
		AND B.DOC_LINE_NO = C.UDOC_LINE_NO
		AND A.flt_key = #fltKey#
		and
		A.flt_date = to_date(#fltDate#,'dd-mon-yy')
		AND B.brd_point =
		#brdPoint#
		AND B.off_point = #offPoint#
		and (A.si_type
		= 'S' or
		(A.si_type = 'I' and A.ffm_status='P'))
	</select>

	<parameterMap id="map" class="map">
		<parameter property="fltKey" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="IN" />
		<parameter property="fltDate" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="IN" />
		<parameter property="awbNo" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="IN" />
	</parameterMap>

	<procedure id="callPrcEdiFfmShpDel" parameterMap="map">
		{call
		PRC_EDI_FFM_SHP_DEL(?,?,?)}
</procedure>

	<parameterMap id="map" class="map">
		<parameter property="fltKey" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="IN" />
		<parameter property="fltDate" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="IN" />
		<parameter property="awbNo" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="IN" />
	</parameterMap>

	<procedure id="callPrcClearFfm" parameterMap="map">
		{call
		pro_clear_ffm(?,?,?)}
</procedure>
	<parameterMap id="hmapGetAwbDate" class="map">
		<parameter property="awbDate" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="OUT" />
		<parameter property="awbNo" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="IN" />
		<parameter property="awbType" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="IN" />
	</parameterMap>

	<procedure id="getAwbDate" parameterMap="hmapGetAwbDate">
		{ ? = call pkg_common.get_awb_date(?,?)}
	</procedure>
	
	<select id="getMaxAwbDate" parameterClass="map" resultClass="java.lang.String">
		 SELECT to_char(max(t1.awb_date),'DDMONYY') as awbDate from edi_fhl t1 where t1.awb_no=#awbNo# 
	</select>
	<!--
		==============================================================================================
		START OF MESSAGE LOG SUMMARY QUERIES - Varadaraj Muni 16-SEP-2010
		==============================================================================================
	-->
	<select id="fetchmessagelogdetails" parameterClass="cargo.cms.imprt.bo.StartPreparationBO"
		resultClass="cargo.cms.imprt.bo.StartPreparationBO">
		SELECT
		MSG_LOG_ID AS messageId,
		MSG_TYPE AS messageType,VER_NO AS
		versionNumber,
		MSG_STATUS AS messageStatus,MSG_PATH AS messagePath,
		MSG_CONTENT AS messageContentBytes
		FROM
		MESSAGE_LOG
		WHERE
		MSG_TYPE = UPPER(#messageType#) AND MSG_STATUS =
		#messageStatus#
		<isNotEmpty prepend="AND" property="flightKey">
			UPPER(FLT_KEY) LIKE
			UPPER('%'|| #flightKey# || '%')
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="flightDate">
			FLT_DATE = TO_DATE(#flightDate#, 'DDMONYY')
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="awbNo">
			AWB_NO = #awbNo#
		</isNotEmpty>				
		ORDER BY VER_NO
	</select>
	
	<select id="fetchmessagelogdetailsforreference" parameterClass="cargo.cms.imprt.bo.StartPreparationBO" resultClass="cargo.cms.imprt.bo.StartPreparationBO">
		SELECT
		MSG_LOG_ID AS messageId,
		MSG_TYPE AS messageType,VER_NO AS versionNumber,
		MSG_STATUS AS messageStatus,MSG_PATH AS messagePath,
		MSG_CONTENT AS messageContentBytes
		FROM
		MESSAGE_LOG
		WHERE
		MSG_TYPE = UPPER(#messageType#) AND MSG_STATUS = #messageStatus#
		<isNotEmpty prepend="AND" property="flightKey">
			UPPER(FLT_KEY) LIKE
			UPPER('%'|| #flightKey# || '%')
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="flightDate">
			FLT_DATE = TO_DATE(#flightDate#, 'DDMONYY')
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="awbNo">
			AWB_NO = #awbNo#
		</isNotEmpty>		
		ORDER BY VER_NO
	</select>
	
	<update id="updateMessageLogData" parameterClass="java.util.HashMap">
		UPDATE MESSAGE_LOG SET MSG_PATH = #messagePath#, MSG_STATUS = #messageStatus# WHERE MSG_LOG_ID = #messageId#
	</update>
	
	<select id="fetchmessagelogquery" parameterClass="cargo.cms.edi.bo.EdiMsgLogBO" resultClass="cargo.cms.edi.ei.bo.MessageLogBO">
		SELECT 
			MSG_LOG_ID AS messageId,
			MSG_TYPE AS messageType,VER_NO AS versionNumber,
			FROM_ADR AS fromAddress,MSG_HDR AS messageHeader,
			TO_CHAR(RECV_DATE, 'DDMONYY HH24:MI') AS receiveDate,FLT_KEY AS flightKey,
			FLT_DATE AS flightDate,AWB_NO AS awbNo,
			MSG_STATUS AS messageStatus,MSG_PATH AS messagePath
		FROM
			MESSAGE_LOG
		WHERE 
			MSG_TYPE = UPPER(#msgType#) AND MSG_STATUS = #msgStatus#
		<isNotEmpty prepend="AND" property="fltKey">
			UPPER(FLT_KEY) LIKE UPPER('%' || #fltKey# || '%')
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="loginCarrier">
			((UPPER(FLT_KEY) LIKE UPPER(#loginCarrier# || '%')
	            OR (SELECT COUNT(1) FROM MAST_CARR_GRP WHERE GRP_CARR_CODE = #loginCarrier# AND UPPER(MESSAGE_LOG.FLT_KEY) LIKE UPPER(CARR_CODE || '%')) > 0)
	            OR
	            ((#loginCarrier# IN (SELECT CARR_CODE FROM MAST_AWB_PREFIX WHERE CODE = substr(AWB_NO,0,3))
                  			OR (SELECT CARR_CODE FROM MAST_AWB_PREFIX WHERE CODE = substr(AWB_NO,0,3)) IN 
                  			(SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE	= #loginCarrier#))))
		</isNotEmpty>
      	<isNotEmpty prepend="AND" property="fltDate">
			FLT_DATE = TO_DATE(#fltDate#, 'DDMONYY')
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="awbNo">
			AWB_NO = #awbNo#
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="msgHeader">
			MSG_HDR LIKE UPPER('%'|| #msgHeader# || '%')
		</isNotEmpty>
		<isNotEmpty property="receivedDateFrom">
			<isNotEmpty prepend="AND" property="receivedDateTo">							
				(RECV_DATE BETWEEN TO_DATE(TO_CHAR(#receivedDateFrom#), 'DDMONYYHH24MI') AND  
				TO_DATE(TO_CHAR(#receivedDateTo#), 'DDMONYYHH24MI'))
			</isNotEmpty>
		</isNotEmpty>
		ORDER BY RECV_DATE DESC,MSG_LOG_ID DESC
	</select>
	<select id="fetchmessagelog" parameterClass="cargo.cms.edi.ei.bo.MessageLogBO" resultClass="cargo.cms.edi.ei.bo.MessageLogBO">
		SELECT   VER_NO AS versionNumber   FROM    MESSAGE_LOG   WHERE    flt_key=#flightKey# and flt_date=to_date(#flightDate#,'MM/DD/YYYY') and msg_type='DDT' 
		and msg_log_id= (select max(msg_log_id) from MESSAGE_LOG   WHERE    flt_key=#flightKey# and flt_date=to_date(#flightDate#,'MM/DD/YYYY') and msg_type='DDT' )
	</select>
	<select id="fetchCarditResditmessagelog" parameterClass="cargo.cms.edi.ei.bo.MessageLogBO" resultClass="cargo.cms.edi.ei.bo.MessageLogBO">
	<![CDATA[		
    SELECT REQUEST_MSG AS messageContentBytes from log_webservice_req where sender='GLS' 
	AND READ_BLOB(REQUEST_MSG) LIKE UPPER('%' || #messageId# || '%')
	AND rcvd_dt BETWEEN sysdate - (1/1440*1) AND sysdate + (1/1440*1)
	AND response_msg IS NULL
	AND sent_dt IS NULL
	]]>
	<isNotEmpty property="messageType">
	<isEqual property="messageType" compareValue="Resdit">
	AND SERVICE_NAME='ResditMsgFromGLSService'
	</isEqual>
	<isEqual property="messageType" compareValue="Cardit">
	AND SERVICE_NAME='CarditMsgFromGLSService'
	</isEqual>
	</isNotEmpty>
	</select>
	
	
	<select id="fetchmessagelogqueryCOUNT" parameterClass="cargo.cms.edi.bo.EdiMsgLogBO" resultClass="java.lang.Integer">
		select count(*) as totalDataCount from (SELECT 
			MSG_LOG_ID AS messageId,
			MSG_TYPE AS messageType,VER_NO AS versionNumber,
			FROM_ADR AS fromAddress,MSG_HDR AS messageHeader,
			TO_CHAR(RECV_DATE, 'DDMONYY HH24:MI') AS receiveDate,FLT_KEY AS flightKey,
			FLT_DATE AS flightDate,AWB_NO AS awbNo,
			MSG_STATUS AS messageStatus,MSG_PATH AS messagePath
		FROM
			MESSAGE_LOG
		WHERE 
			MSG_TYPE = UPPER(#msgType#) AND MSG_STATUS = #msgStatus#
		<isNotEmpty prepend="AND" property="fltKey">
			UPPER(FLT_KEY) LIKE UPPER('%' || #fltKey# || '%')
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="loginCarrier">
			((UPPER(FLT_KEY) LIKE UPPER(#loginCarrier# || '%')
	            OR (SELECT COUNT(1) FROM MAST_CARR_GRP WHERE GRP_CARR_CODE = #loginCarrier# AND UPPER(MESSAGE_LOG.FLT_KEY) LIKE UPPER(CARR_CODE || '%')) > 0)
	            OR
	            ((#loginCarrier# IN (SELECT CARR_CODE FROM MAST_AWB_PREFIX WHERE CODE = substr(AWB_NO,0,3))
                  			OR (SELECT CARR_CODE FROM MAST_AWB_PREFIX WHERE CODE = substr(AWB_NO,0,3)) IN 
                  			(SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE	= #loginCarrier#))))
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="fltDate">
			FLT_DATE = TO_DATE(#fltDate#, 'DDMONYY')
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="awbNo">
			AWB_NO = #awbNo#
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="msgHeader">
			MSG_HDR LIKE UPPER('%'|| #msgHeader# || '%')
		</isNotEmpty>
		<isNotEmpty property="receivedDateFrom">
			<isNotEmpty prepend="AND" property="receivedDateTo">							
				(RECV_DATE BETWEEN TO_DATE(TO_CHAR(#receivedDateFrom#), 'DDMONYYHH24MI') AND  
				TO_DATE(TO_CHAR(#receivedDateTo#), 'DDMONYYHH24MI'))
			</isNotEmpty>
		</isNotEmpty>
		)
	</select>	
	
	<select id="fetchMsgDetails" parameterClass="java.lang.String" resultClass="cargo.cms.edi.ei.bo.MessageLogBO">
		SELECT 
			MSG_LOG_ID AS messageId,
			MSG_TYPE AS messageType,VER_NO AS versionNumber,
			FROM_ADR AS fromAddress,MSG_HDR AS messageHeader,
			TO_CHAR(RECV_DATE, 'DDMONYY HH24:MI') AS receiveDate,FLT_KEY AS flightKey,
			TO_CHAR(FLT_DATE, 'DDMONYY') AS flightDate,AWB_NO AS awbNo,
			MSG_STATUS AS messageStatus,MSG_PATH AS messagePath,
      		CODE_DESC AS messageStatusValue,
	    	MSGLOG.CR_USER_ID AS createdUserId,
	    	MSGLOG.MSG_CONTENT AS messageContentBytes
		FROM
			MESSAGE_LOG MSGLOG, MAST_CODE_DTL CODEDTL
		WHERE 
	    	MSGLOG.MSG_STATUS = CODEDTL.CODE AND 
	    	CODE_TYPE = 'EDI_MSG_STATUS' AND  
			MSG_LOG_ID = #messageId#	AND ROWNUM  = 1	
	</select>
	<select id="checkMessageType" parameterClass="java.lang.String"	resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM MAST_CODE_DTL WHERE CODE_DESC = #msgType#
	</select>
	<select id="fetchErrorMessageLog" parameterClass="cargo.cms.edi.ei.bo.MessageLogBO" resultClass="cargo.cms.edi.ei.bo.ErrorMessageLogBO">
		      SELECT DISTINCT
			ERR.ERR_CODE AS errorId,
			decode(MSG_LOG.msg_type,'SSIM',ERR.ERR_DESC||ERR_MSG_LOG.ERR_FLIGHT_DESC,ERR.ERR_DESC) AS errorDesc,
			ERR_MSG_LOG.ERR_MSG_TEXT AS errorMsgText,
			ERR_MSG_LOG.ERR_PLACEHOLDER_TEXT AS errorPlaceHolderText
		FROM
			MESSAGE_LOG MSG_LOG, EDI_ERRORMSG_LOG ERR_MSG_LOG, ERR_MSG ERR
		WHERE 
			MSG_LOG.MSG_LOG_ID = ERR_MSG_LOG.MSG_LOG_ID AND
			ERR_MSG_LOG.ERR_ID = ERR.ERR_CODE AND
			MSG_LOG.MSG_LOG_ID = #messageId#  AND ERR.ERR_LCODE = 'en_US'
	</select>
	<select id="fetchOBMMDetails" parameterClass="cargo.cms.edi.bo.EdiMsgLogBO" resultClass="cargo.cms.edi.ei.bo.MessageLogBO">
		SELECT 
			MSG_LOG_ID AS messageId,
			MSG_TYPE AS messageType,VER_NO AS versionNumber,
			FROM_ADR AS fromAddress,MSG_HDR AS messageHeader,
			TO_CHAR(RECV_DATE, 'DDMONYY HH24:MI') AS receiveDate,FLT_KEY AS flightKey,
			FLT_DATE AS flightDate,AWB_NO AS awbNo,
			MSG_STATUS AS messageStatus,MSG_PATH AS messagePath
		FROM
			MESSAGE_LOG
		WHERE 
			MSG_TYPE = UPPER(#msgType#) AND MSG_STATUS = #msgStatus# AND		
			UPPER(FLT_KEY) LIKE UPPER('%'|| #fltKey# || '%') AND    
			FLT_DATE = TO_DATE(#fltDate#, 'DDMONYY') AND
      VER_NO = (SELECT MAX(VER_NO) FROM MESSAGE_LOG WHERE FLT_KEY = #fltKey# AND FLT_DATE = TO_DATE(#fltDate#, 'DDMONYY'))
	</select>
	
	<select id="fetchDUOLDMLIFDetails" parameterClass="cargo.cms.edi.bo.EdiMsgLogBO" resultClass="cargo.cms.edi.ei.bo.MessageLogBO">
		SELECT 
			MSG_LOG_ID AS messageId,
			MSG_TYPE AS messageType,VER_NO AS versionNumber,
			FROM_ADR AS fromAddress,MSG_HDR AS messageHeader,
			TO_CHAR(RECV_DATE, 'DDMONYY HH24:MI') AS receiveDate,FLT_KEY AS flightKey,
			FLT_DATE AS flightDate,AWB_NO AS awbNo,
			MSG_STATUS AS messageStatus,MSG_PATH AS messagePath
		FROM
			MESSAGE_LOG
		WHERE 
			MSG_TYPE = UPPER(#msgType#) AND MSG_STATUS = 'F' AND		
			UPPER(FLT_KEY) LIKE UPPER('%'|| #fltKey# || '%') AND    
			FLT_DATE = TO_DATE(#fltDate#, 'DDMONYY') 
	</select>
	
	<select id="fetchDUOLDMLIFDetailsCOUNT" parameterClass="cargo.cms.edi.bo.EdiMsgLogBO" resultClass="java.lang.Integer">
		SELECT 
			count(*) as totalDataCount
		FROM
			MESSAGE_LOG
		WHERE 
			MSG_TYPE = UPPER(#msgType#) AND MSG_STATUS = 'F' AND		
			UPPER(FLT_KEY) LIKE UPPER('%'|| #fltKey# || '%') AND    
			FLT_DATE = TO_DATE(#fltDate#, 'DDMONYY') 
	</select>
	
	<!--
	==============================================================================================
		END OF MESSAGE LOG SUMMARY QUERIES
	==============================================================================================
	-->	
	
	
	<!--
	==============================================================================================
	START OF OUTGOING MESSAGE LOG SUMMARY QUERIES - Varadaraj Muni 13-DEC-2010
	==============================================================================================
	-->	
	<select id="fetchOutMsgDetails" parameterClass="java.lang.String" resultClass="cargo.cms.edi.bo.OutboundMsgLogBO">
		SELECT 
  		    MSG_ID as msgStrId , 
			MSG_SEQ_NO as msgSeqNo, 
			(SELECT STRAGG(STRINGDELIM(RECIPIENT,' , ')) FROM EDI_MSG_RECIPIENT_OUT WHERE EDI_MSG_RECIPIENT_OUT.MSG_ID = edi_msg.MSG_ID)  as msgaddressee,
			AWB_NO as awbNo , 
			AWB_DATE as awbDt , 
			CARR_CODE as carrierCode , 
			FLT_NO as flightNo, 
			 to_char(FLT_DATE,'DDMONYY')                               AS flightDt       ,
			FLT_KEY as flightKey, 
			to_char(MSG_DATE,'DDMONYY HH24:MI:SS') as messageSendDt, 
			MSG_TYPE as messageType, 
			SENDER_ID as messageSenderID, 
			MSG as messageContent, 
			MSG_TITLE as messageTitle , 
			ATTENTION as messageAttn , 
			COPY as messageCopyNo, 
			SRF_NO as srfNo, 
			LM_USER_ID as lmUserID, 
			priority as priority,
			LM_VER as lmVersion 
	    FROM EDI_MSG_LOG_OUT edi_msg
		WHERE MSG_ID = #msgID# order by msg_seq_no desc
	</select>
	
	<select id="fetchMsgType" parameterClass="cargo.cms.edi.bo.EdiMsgLogBO" resultClass="cargo.cms.edi.bo.EdiMsgLogBO">
	select code_desc as codeDesc,CODE AS codeId from mast_code_dtl where code_desc != 'TLX'	 and code_type = 'CARGO_IMP_MSG_OUT'
  order by codeDesc
	</select> 
	<select id="fetchOutRecipient" parameterClass="java.lang.String" resultClass="cargo.cms.edi.bo.OutboundRecipentLogBO" >
		  SELECT distinct recipient as recipentSystem
		  FROM EDI_MSG_RECIPIENT_OUT
		  WHERE MSG_ID = #msgID#
	</select>

	<select id="fetchOutMessageLogListWithRecp" parameterClass="cargo.cms.edi.bo.EdiMsgLogBO" resultClass="cargo.cms.edi.bo.OutboundMsgLogBO">
		 select * from (SELECT distinct edi_msg.msg_Id msgStrId,edi_msg.MSG_SEQ_NO as msgSeqNo,
		 to_char(edi_msg.msg_date,'DDMONYY HH24:MI:SS') messageSendDt,
  edi_msg.msg_type     messageType,
  FUN_EDI_MSG_ADDRESS(edi_msg.MSG_ID)  as msgaddressee,
  edi_msg.lm_ver        ver,
  edi_msg.FLT_KEY       flightKey,
  edi_msg.sender_id     messageSenderID,
  edi_msg.msg_title msgTitleHeader, 
  edi_msg.attention messageAttn,
  edi_msg.copy messageCopyNo,
  decode(edi_msg.FLT_KEY,'AA9999','',edi_msg.FLT_KEY)||decode(edi_msg.FLT_DATE,NULL,'',	'/'||TO_CHAR(edi_msg.FLT_DATE,'DDMONYY')) as fltKeyDt,
  		TO_CHAR(edi_msg.FLT_DATE,'DDMONYY') as flightDt,
 DECODE(edi_msg.AWB_NO,NULL,'',SUBSTR(edi_msg.AWB_NO,1,3)||'-'||SUBSTR(edi_msg.AWB_NO,4,8)) 
    ||DECODE(edi_msg.AWB_NO_2,null,'',','||SUBSTR(edi_msg.AWB_NO_2,1,3)||'-'||SUBSTR(edi_msg.AWB_NO_2,4,8)) 
    || DECODE(edi_msg.AWB_NO_3,null,'',','||SUBSTR(edi_msg.AWB_NO_3,1,3)||'-'||SUBSTR(edi_msg.AWB_NO_3,4,8)) 
    ||DECODE(edi_msg.AWB_NO_4,null,'',','||SUBSTR(edi_msg.AWB_NO_4,1,3)||'-'||SUBSTR(edi_msg.AWB_NO_4,4,8))
    || DECODE(edi_msg.AWB_NO_5,null,'',','||SUBSTR(edi_msg.AWB_NO_5,1,3)||'-'||SUBSTR(edi_msg.AWB_NO_5,4,8))   as  awbNo
   FROM EDI_MSG_LOG_OUT edi_msg
   <isNotEmpty property="addressee" >
   ,EDI_MSG_RECIPIENT_OUT RCPT_OUT
   </isNotEmpty>	
  WHERE 
  edi_msg.msg_type = NVL(#msgType#,edi_msg.msg_type)
  <isEqual property="transitionState" 
             compareValue="N">
and  edi_msg.msg_type not in ('TLX','TXT','DDT') and NVL(edi_msg.TRANSITION_YN, 'N')='N'
</isEqual>
<isEqual property="transitionState" 
             compareValue="Y">
          and  (edi_msg.msg_type = 'DDT' OR edi_msg.TRANSITION_YN='Y')
             </isEqual>
<isNotEmpty property="msgDateFromHrs" >
<isNotEmpty property="msgDateToHrs" >
and edi_msg.MSG_DATE BETWEEN TO_DATE(#msgDateFromHrs#,'DDMONYYHH24MI') AND TO_DATE(#msgDateToHrs#,'DDMONYYHH24MI')
</isNotEmpty>
</isNotEmpty>	
<isNotEmpty property="msgHeader">

and UPPER(edi_msg.msg_title) like UPPER('%'|| #msgHeader# || '%')
</isNotEmpty>
<isNotEmpty property="msgDateFromHrs" >
<isEmpty property="msgDateToHrs" >
and edi_msg.msg_date>=TO_DATE(#msgDateFrom#,'DDMONYYHH24MI')
</isEmpty>
</isNotEmpty>
<isEmpty property="msgDateFromHrs" >
<isNotEmpty property="msgDateToHrs" >
and TO_DATE(#msgDateTo#,'DDMONYYHH24MI') > edi_msg.msg_date
</isNotEmpty>
</isEmpty>	
<isNotEmpty property="fltKey"   >
<isNotEmpty property="fltDate" >
			AND (( edi_msg.FLT_KEY=#fltKey# and  edi_msg.FLT_DATE=TO_DATE(#fltDate#,'DDMONYY')) or 
			( edi_msg.FLT_KEY_2=#fltKey# and  edi_msg.FLT_DAT_2=TO_DATE(#fltDate#,'DDMONYY')) or 
			(edi_msg.FLT_KEY_3=#fltKey# and  edi_msg.FLT_DAT_3=TO_DATE(#fltDate#,'DDMONYY')) or 
			( edi_msg.FLT_KEY_4=#fltKey# and  edi_msg.FLT_DAT_4=TO_DATE(#fltDate#,'DDMONYY')) or 
			( edi_msg.FLT_KEY_5=#fltKey# and  edi_msg.FLT_DAT_5=TO_DATE(#fltDate#,'DDMONYY')))
</isNotEmpty>
<isEmpty  property="fltDate" >
		    	AND ( edi_msg.FLT_KEY=#fltKey# or  edi_msg.FLT_KEY_2=#fltKey# or 
			     edi_msg.FLT_KEY_3=#fltKey# or  edi_msg.FLT_KEY_4=#fltKey# or  edi_msg.FLT_KEY_5=#fltKey#)
</isEmpty>
</isNotEmpty>
<isEmpty property="fltKey" >
<isNotEmpty property="fltDate" >
				AND ( edi_msg.FLT_DATE=TO_DATE(#fltDate#,'DDMONYY') or  edi_msg.FLT_DAT_2=TO_DATE(#fltDate#,'DDMONYY') or 
			 edi_msg.FLT_DAT_3=TO_DATE(#fltDate#,'DDMONYY') or 	edi_msg.FLT_DAT_4=TO_DATE(#fltDate#,'DDMONYY') or edi_msg.FLT_DAT_5=TO_DATE(#fltDate#,'DDMONYY'))
</isNotEmpty>
</isEmpty>
<isNotEmpty  property="awbNo">
			AND( edi_msg.AWB_NO=#awbNo# or  edi_msg.AWB_NO_2=#awbNo# or 
			 edi_msg.AWB_NO_3=#awbNo# or  edi_msg.AWB_NO_4=#awbNo# or  edi_msg.AWB_NO_5=#awbNo#)
</isNotEmpty>
<isNotEmpty  property="addressee">
		 and RCPT_OUT.MSG_ID=edi_msg.MSG_ID and (RCPT_OUT.RECIPIENT=#addressee# )
</isNotEmpty>
<isEmpty property="fltCarr">
                  <isNotEmpty property="loginCarrier">
                        AND   (edi_msg.CARR_CODE = #loginCarrier#
                        OR edi_msg.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE = #loginCarrier#))
                  </isNotEmpty>
</isEmpty>
	)
	order by messageSendDt DESC, msgSeqNo DESC
	</select>
	
	<select id="fetchOutMessageLogListWithRecpCOUNT" parameterClass="cargo.cms.edi.bo.EdiMsgLogBO" resultClass="java.lang.Integer">
		 select count(*) as totalDataCount from (SELECT distinct edi_msg.msg_Id msgStrId,
		 to_char(edi_msg.msg_date,'DDMONYY HH24:MI:SS') messageSendDt,
  edi_msg.msg_type     messageType,
 (SELECT STRAGG(STRINGDELIM(RECIPIENT,' , ')) FROM EDI_MSG_RECIPIENT_OUT WHERE EDI_MSG_RECIPIENT_OUT.MSG_ID = edi_msg.MSG_ID)  as msgaddressee,
  edi_msg.lm_ver        ver,
  edi_msg.FLT_KEY       flightKey,
 edi_msg.sender_id     messageSenderID,
  edi_msg.msg_title msgTitleHeader, 
  edi_msg.attention messageAttn,
  edi_msg.copy messageCopyNo,
   decode(edi_msg.FLT_KEY,'AA9999','',edi_msg.FLT_KEY)||decode(edi_msg.FLT_DATE,NULL,'',	'/'||TO_CHAR(edi_msg.FLT_DATE,'DDMONYY')) as fltKeyDt,
  		TO_CHAR(edi_msg.FLT_DATE,'DDMONYY') as flightDt,
 DECODE(edi_msg.AWB_NO,NULL,'',SUBSTR(edi_msg.AWB_NO,1,3)||'-'||SUBSTR(edi_msg.AWB_NO,4,8)) 
    ||DECODE(edi_msg.AWB_NO_2,null,'',','||SUBSTR(edi_msg.AWB_NO_2,1,3)||'-'||SUBSTR(edi_msg.AWB_NO_2,4,8)) 
    || DECODE(edi_msg.AWB_NO_3,null,'',','||SUBSTR(edi_msg.AWB_NO_3,1,3)||'-'||SUBSTR(edi_msg.AWB_NO_3,4,8)) 
    ||DECODE(edi_msg.AWB_NO_4,null,'',','||SUBSTR(edi_msg.AWB_NO_4,1,3)||'-'||SUBSTR(edi_msg.AWB_NO_4,4,8))
    || DECODE(edi_msg.AWB_NO_5,null,'',','||SUBSTR(edi_msg.AWB_NO_5,1,3)||'-'||SUBSTR(edi_msg.AWB_NO_5,4,8))   as  awbNo
   FROM EDI_MSG_LOG_OUT edi_msg
   <isNotEmpty property="addressee" >
   ,EDI_MSG_RECIPIENT_OUT RCPT_OUT
   </isNotEmpty>	
  WHERE 
  edi_msg.msg_type = NVL(#msgType#,edi_msg.msg_type)
  <isEqual property="transitionState" 
             compareValue="N">
and  edi_msg.msg_type not in ('TLX','TXT','DDT') and NVL(edi_msg.TRANSITION_YN, 'N')='N' 
</isEqual>
<isEqual property="transitionState" 
             compareValue="Y">
         and  (edi_msg.msg_type = 'DDT' OR edi_msg.TRANSITION_YN='Y') 
             </isEqual>
<isNotEmpty property="msgDateFromHrs" >
<isNotEmpty property="msgDateToHrs" >
and edi_msg.MSG_DATE BETWEEN TO_DATE(#msgDateFromHrs#,'DDMONYYHH24MI') AND TO_DATE(#msgDateToHrs#,'DDMONYYHH24MI')
</isNotEmpty>
</isNotEmpty>	
<isNotEmpty property="msgHeader">
and UPPER(edi_msg.msg_title) like UPPER('%'|| #msgHeader# || '%')
</isNotEmpty>
<isNotEmpty property="msgDateFromHrs" >
<isEmpty property="msgDateToHrs" >
and edi_msg.msg_date>=TO_DATE(#msgDateFrom#,'DDMONYYHH24MI')
</isEmpty>
</isNotEmpty>
<isEmpty property="msgDateFromHrs" >
<isNotEmpty property="msgDateToHrs" >
and TO_DATE(#msgDateTo#,'DDMONYYHH24MI') > edi_msg.msg_date
</isNotEmpty>
</isEmpty>	
<isNotEmpty property="fltKey"   >
<isNotEmpty property="fltDate" >
			AND (( edi_msg.FLT_KEY=#fltKey# and  edi_msg.FLT_DATE=TO_DATE(#fltDate#,'DDMONYY')) or 
			( edi_msg.FLT_KEY_2=#fltKey# and  edi_msg.FLT_DAT_2=TO_DATE(#fltDate#,'DDMONYY')) or 
			(edi_msg.FLT_KEY_3=#fltKey# and  edi_msg.FLT_DAT_3=TO_DATE(#fltDate#,'DDMONYY')) or 
			( edi_msg.FLT_KEY_4=#fltKey# and  edi_msg.FLT_DAT_4=TO_DATE(#fltDate#,'DDMONYY')) or 
			( edi_msg.FLT_KEY_5=#fltKey# and  edi_msg.FLT_DAT_5=TO_DATE(#fltDate#,'DDMONYY')))
</isNotEmpty>
<isEmpty  property="fltDate" >
		    	AND ( edi_msg.FLT_KEY=#fltKey# or  edi_msg.FLT_KEY_2=#fltKey# or 
			     edi_msg.FLT_KEY_3=#fltKey# or  edi_msg.FLT_KEY_4=#fltKey# or  edi_msg.FLT_KEY_5=#fltKey#)
</isEmpty>
</isNotEmpty>
<isEmpty property="fltKey" >
<isNotEmpty property="fltDate" >
				AND ( edi_msg.FLT_DATE=TO_DATE(#fltDate#,'DDMONYY') or  edi_msg.FLT_DAT_2=TO_DATE(#fltDate#,'DDMONYY') or 
			 edi_msg.FLT_DAT_3=TO_DATE(#fltDate#,'DDMONYY') or 	edi_msg.FLT_DAT_4=TO_DATE(#fltDate#,'DDMONYY') or edi_msg.FLT_DAT_5=TO_DATE(#fltDate#,'DDMONYY'))
</isNotEmpty>
</isEmpty>
<isNotEmpty  property="awbNo">
			AND( edi_msg.AWB_NO=#awbNo# or  edi_msg.AWB_NO_2=#awbNo# or 
			 edi_msg.AWB_NO_3=#awbNo# or  edi_msg.AWB_NO_4=#awbNo# or  edi_msg.AWB_NO_5=#awbNo#)
</isNotEmpty>
<isNotEmpty  property="addressee">
		 and RCPT_OUT.MSG_ID=edi_msg.MSG_ID and (RCPT_OUT.RECIPIENT=#addressee# )
</isNotEmpty>	
<isEmpty property="fltCarr">
      <isNotEmpty property="loginCarrier">
     	AND   (edi_msg.CARR_CODE = #loginCarrier# OR edi_msg.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE = #loginCarrier#))
      </isNotEmpty>
</isEmpty>
	order by edi_msg.msg_date DESC,edi_msg.MSG_SEQ_NO DESC)	
</select>
<!--  validation Queries for Message Log Summary Outgoing::: Starts -->
<select id="validateAddress" parameterClass="java.lang.String" resultClass="java.lang.Integer">
 SELECT count(0) FROM EDI_MSG_RECIPIENT_OUT WHERE RECIPIENT = #addressee#
</select>
<select id="validateFltCarr" parameterClass="java.lang.String" resultClass="java.lang.Integer">
SELECT distinct count(0) FROM mast_carrier WHERE CODE = #fltCarr# 
</select>
<select id="validateFltKey" parameterClass="cargo.cms.edi.bo.EdiMsgLogBO" resultClass="java.lang.Integer">
 SELECT distinct count(0) FROM flt_opr WHERE flt_key = #fltKey# and sch_date = #fltDate#
</select>
<select id="validateFltKeyDt" parameterClass="cargo.cms.edi.bo.EdiMsgLogBO" resultClass="java.lang.Integer">
 SELECT distinct count(0) FROM flt_opr WHERE flt_key = #fltKey# and sch_date = #fltDate#
</select>
<!--  validation Queries for Message Log Summary Outgoing::: Ends -->
	<!--
	==============================================================================================
		END OF OUTGOING MESSAGE LOG SUMMARY QUERIES
	==============================================================================================
	-->	
	
	<!-- 
	==============================================================================================
		START OF FINALIZE FFM QUERIES - Varadaraj Muni 01-OCT-2010
	==============================================================================================
	-->	
	<select id="fetchFinalizeFFM" parameterClass="cargo.cms.edi.bo.EdiFFMMsgBO" resultClass="cargo.cms.edi.bo.EdiFFMMsgBO" >
		SELECT 
			EDI_FFM_MSG.FLT_KEY AS FLTKEY,
			TO_CHAR(EDI_FFM_MSG.FLT_DATE,'DDMONYY') AS FLTDATE,
			TO_CHAR(EDI_FFM_MSG.FINALIZE_DATE,'DDMONYY HH24:MI') AS FINALIZEDATE,
			EDI_FFM_MSG.FINALIZE_USER_ID AS FINALIZEUSERID, DECODE(COUNT(CST_ACK.FLT_KEY),NULL,'N',0,'N','Y') AS TMPFLTCLR ,
			DECODE(MAX(CST_SUBM.VER_NO),NULL,'N',0,'N','Y') AS TMPLBSFLAG,
			TO_CHAR(MAX(CST_SUBM.SUBM_DATE),'DDMONYY') AS TMPLBSDATE,
			RTRIM(LTRIM(SUBSTR(LPAD(FLT_OPR.ACT_TIME,4,'0'),1,2)||':'||
			SUBSTR(LPAD(FLT_OPR.ACT_TIME,4,'0'),3,2)||'/'||
			DECODE(FLT_OPR.ACT_DATE,FLT_OPR.SCH_DATE,NULL,TO_CHAR(FLT_OPR.ACT_DATE,'DD')),':/'),'/') AS TMPATA,
			FLT_OPR.SCH_TIME,FLT_OPR.SCH_DATE
		FROM 
			EDI_FFM_MSG 
			INNER JOIN FLT_OPR ON 
				EDI_FFM_MSG.FLT_KEY = FLT_OPR.FLT_KEY AND EDI_FFM_MSG.FLT_DATE = FLT_OPR.SCH_DATE AND FLT_OPR.FLT_TYPE='A'
			LEFT OUTER JOIN 
				CST_ACK ON  EDI_FFM_MSG.FLT_KEY = CST_ACK.FLT_KEY   AND TRUNC(EDI_FFM_MSG.FLT_DATE) = TRUNC(CST_ACK.FLT_DATE)   
				AND CST_ACK.FLT_TYPE = 'I'   AND CST_ACK.ACK_REC_TYPE = 'CLR' 
			LEFT OUTER JOIN 
				CST_SUBM ON EDI_FFM_MSG.FLT_KEY  = CST_SUBM.FLT_KEY AND TRUNC(EDI_FFM_MSG.FLT_DATE) = TRUNC(CST_SUBM.FLT_DATE)   
				AND CST_SUBM.FLT_TYPE = 'I' AND CST_SUBM.REC_TYPE = 'BDS'
		WHERE 
			EDI_FFM_MSG.FLT_DATE = TO_DATE(#fltDate#,'DDMONYY')   AND
			EDI_FFM_MSG.FFM_STATUS IN ('P','F')   AND
			EDI_FFM_MSG.FLT_KEY = NVL(#fltKey#, EDI_FFM_MSG.FLT_KEY)
		GROUP BY EDI_FFM_MSG.FLT_KEY, EDI_FFM_MSG.FLT_DATE ,EDI_FFM_MSG.FINALIZE_DATE ,EDI_FFM_MSG.FINALIZE_USER_ID,
			RTRIM(LTRIM(SUBSTR(LPAD(FLT_OPR.ACT_TIME,4,'0'),1,2)||':'||
			SUBSTR(LPAD(FLT_OPR.ACT_TIME,4,'0'),3,2)||'/'||
			DECODE(FLT_OPR.ACT_DATE,FLT_OPR.SCH_DATE,NULL,TO_CHAR(FLT_OPR.ACT_DATE,'DD')),':/'),'/'),
			FLT_OPR.SCH_TIME,FLT_OPR.SCH_DATE, FLT_OPR.ACT_DATE,FLT_OPR.ACT_TIME
			ORDER BY (TO_CHAR(FLT_OPR.SCH_DATE,'YYYYMMDD')||LPAD(FLT_OPR.SCH_TIME,4,'0')) ASC
	</select>
	<select id="ValidateUnfinalize" parameterClass="cargo.cms.edi.bo.EdiFFMMsgBO" resultClass="java.lang.String" >
		SELECT 
			DECODE(FFM_FINAL_DATE,NULL,'N','Y') AS FFM_FLG
		FROM 
			FLT_OPR_EVENTS 
		WHERE 
			FLT_KEY = #fltKey#
		  	AND SCH_DATE = TO_DATE(#fltDate#,'DDMONYY')
		  	AND FLT_TYPE = 'A'
		  	AND ROWNUM = 1
	</select>
	<select id="ValidateFinalize" parameterClass="cargo.cms.edi.bo.EdiFFMMsgBO" resultClass="java.lang.String" >
		SELECT 
			DECODE(FFM_FINAL_DATE,NULL,'N','Y') AS FFM_FLG
		FROM 
			FLT_OPR_EVENTS 
		WHERE 
			FLT_KEY = #fltKey#
		  	AND SCH_DATE = TO_DATE(#fltDate#,'DDMONYY')
		  	AND FLT_TYPE = 'A'
		  	AND ROWNUM = 1
	</select>
	<update id="updateFinalize" parameterClass="java.util.HashMap">
		UPDATE 	
			FLT_OPR_EVENTS 
		SET
		    FFM_FINAL_DATE = SYSDATE,
		    FFM_FINAL_TIME = TO_NUMBER(TO_CHAR(SYSDATE,'HH24MI')),
		    LM_DATE = SYSDATE, LM_USER_ID= NVL(#lmUserId#,'SYSUSER')    
		WHERE 	
			FLT_KEY=#fltKey# 
		   	AND SCH_DATE=TO_DATE(#fltDate#,'DDMONYY')
			AND FLT_TYPE='A'
	</update>
	<update id="updateUnFinalize" parameterClass="java.util.HashMap">
		UPDATE 	
			FLT_OPR_EVENTS 
		SET 	
		    FFM_FINAL_DATE = NULL, FFM_UNFINALIZE_IND = 'Y' ,
		    FFM_FINAL_TIME = NULL , LM_DATE = SYSDATE, LM_USER_ID= NVL(#lmUserId#,'SYSUSER')    
		WHERE 	
			FLT_KEY=#fltKey# 
		   	AND SCH_DATE=TO_DATE(#fltDate#,'DDMONYY')
			AND FLT_TYPE='A'
	</update>
	<update id="updateFinalizeMsg" parameterClass="java.util.HashMap">
		UPDATE 
			EDI_FFM_MSG 
		SET 
			LM_DATE = SYSDATE, LM_USER_ID= NVL(#lmUserId#,'SYSUSER') , FINALIZE_USER_ID = #finalizeUserId#,
			<isEqual property="FFM_IND" compareValue="FINALIZE">
			FINALIZE_DATE = SYSDATE , TR_TYPE = 'UNFFM'
			</isEqual> 
			<isEqual property="FFM_IND" compareValue="UNFINALIZE">
			FINALIZE_DATE = ''  , TR_TYPE = 'UNFFM'
			</isEqual>
		WHERE 
			FLT_KEY = #fltKey# AND FLT_DATE = #fltDate#	
	</update>
	<select id="isFlightClrByCustoms" parameterClass="java.util.HashMap" resultClass="java.lang.String">	
<!--		select count(1) from cst_ack where flt_key = #flt_key# and flt_date = TO_DATE(#flt_date#,'ddmonyy') and flt_type = 'I'
		and ack_rec_type in ('CLR') and ack_status = 'A' commented as told by XXY-->
		SELECT COUNT(1) FROM CST_ACK WHERE FLT_TYPE = 'I' AND FLT_KEY = #flt_key# AND 
		FLT_DATE =TO_DATE(#flt_date#,'DDMONYY') AND  ACK_REC_TYPE = 'CLR' AND ROWNUM = 1
	 </select>
	 <select id="isLeftBehindConsignementExists" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM CST_SUBM SUBM WHERE REC_TYPE = 'BDS' AND MSG_TYPE = 'L' 
		AND VER_NO = '1' AND SUBM.FLT_KEY = #flt_key# AND SUBM.FLT_DATE = TO_DATE(#flt_date#,'DDMONYY')
     </select>
      <select id="checkLeftBehindConsignementExistsForLBS" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM CST_SUBM SUBM WHERE REC_TYPE = 'LBS' AND MSG_TYPE = 'L' 
		AND VER_NO = '1' AND SUBM.FLT_KEY = #flt_key# AND SUBM.FLT_DATE = TO_DATE(#flt_date#,'DDMONYY')
     </select>
	<!--
	==============================================================================================
		END OF FINALIZE QUERIES
	==============================================================================================
	-->
	<select id="validateCountry" parameterClass="java.lang.String" resultClass="java.lang.String">
		select count(*) from mast_country where code=#ctryCode#
	</select>
	
	<select id="validateCurrency" parameterClass="java.lang.String" resultClass="java.lang.String">
		select count(*) from mast_currency where code=#currCode#
	</select>
	
	<select id="validateChgCode" parameterClass="java.lang.String" resultClass="java.lang.String">
	    select count(*) from mast_code_dtl where code_type='CHARGE_CODE' and code=#chgCode#
	</select>
	
	<select id="validateOthChgCode" parameterClass="java.lang.String" resultClass="java.lang.String">
	    select count(*) from mast_code_dtl where code_type='OTHER_CHARGE_CODE' and code=#OthchgCode#
	</select>
	
	<select id="validateAirlCode" parameterClass="java.lang.String" resultClass="java.lang.String">
	    select count(*) from mast_carrier where  code=#airlCode#
	</select>
	
	<select id="valiateSitaAddress" parameterClass="java.lang.String"  resultClass="java.lang.String">
	  select count(*) from  MAST_SITA_ADDRESS where code=#codeId#
	</select>
	
    <select id="validateOrgDestAirport" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT count(*) FROM MAST_ARPT WHERE code=#city#
	</select>
    
    <select id="Check_Doc_Line_Acc" parameterClass="cargo.cms.edi.bo.EdiFwbAccInfoBO" resultClass="java.lang.Integer">
        select count(*) from edi_fwb_acct_info where doc_line_no=#docLineNo#
    </select>
      
     <select id="Check_Doc_Line_Chr_Rate" parameterClass="cargo.cms.edi.bo.EdiFwbChrRateBO" resultClass="java.lang.Integer">
        select count(*) from edi_fwb_chr_rate  where doc_line_no=#docLineNo#
     </select> 
      
     <select id="Check_Doc_Line_Dmn" parameterClass="cargo.cms.edi.bo.EdiFwbDmnBO" resultClass="java.lang.Integer">
        select count(*) from edi_fwb_dmn  where doc_line_no=#docLineNo#
     </select>
      
	 <select id="Check_Doc_Line_Opi" parameterClass="cargo.cms.edi.bo.EdiFwbOthPartiBO" resultClass="java.lang.Integer">
        select count(*) from EDI_FWB_OTH_PARTICIPANT where doc_line_no=#docLineNo#
     </select>

	  <select id="Check_Doc_Line_Oci" parameterClass="cargo.cms.edi.bo.EdiFwbOciBO" resultClass="java.lang.Integer">
        select count(*) from EDI_FWB_OCI where doc_line_no=#docLineNo#
     </select>
      
     <select id="Check_Doc_Line_Oth_Chg" parameterClass="cargo.cms.edi.bo.EdiFwbOthChgBO" resultClass="java.lang.Integer">
        select count(*) from edi_fwb_oth_charges  where doc_line_no=#docLineNo#
     </select>
	<!-- 
	==============================================================================================
		START OF Maintain FWB QUERIES - Varadaraj Muni 06-OCT-2010
	==============================================================================================
	-->	
	<select id="CHECK_SHC_AWB_FOR_SSR" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
        select count(*) from MAST_SPL_HAND_CODE A, IMP_CAR_AWB B 
		WHERE (A.CODE=B.SPL_CODE1 OR A.CODE=B.SPL_CODE2 OR A.CODE=B.SPL_CODE3 OR A.CODE=B.SPL_CODE4 OR A.CODE=B.SPL_CODE5 
		OR A.CODE=B.SPL_CODE6 OR A.CODE=B.SPL_CODE7 OR A.CODE=B.SPL_CODE8 OR A.CODE=B.SPL_CODE9) AND B.AWB_NO=#awbNo# 
		AND B.AWB_DATE=TO_DATE(#awbDate#, 'DDMONYY') AND A.SSR='Y'
     </select>
     <update id="updateImpCarAWBByPassRel" parameterClass="java.util.HashMap">
		UPDATE IMP_CAR_AWB SET LM_DATE = SYSDATE, LM_USER_ID= NVL(#lmUserId#,'SYSUSER'),BYPASS_REL=DECODE(BYPASS_REL,'Y','Y',NVL(#byPassRelInd#,'N')) WHERE AWB_NO = #awbNo# and AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
	</update>
	<update id="updateAWBConsol" parameterClass="java.util.HashMap">
		UPDATE AWB SET CNSL_IND = #consolInd# where awb_no = #awbNo# and awb_date = to_date(#awbDate#,'DDMONYY')
	</update>
	
	<update id="updateImpCarConsolInd" parameterClass="java.util.HashMap">
		UPDATE IMP_CAR_AWB SET CONSOLE_IND = NVL(#consolInd#,CONSOLE_IND) , TR_TYPE = '' WHERE AWB_NO = #awbNo# and AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
	</update>
	
	<update id="updateAWBContent" parameterClass="java.util.HashMap">
		UPDATE AWB SET CONTENT = #content#, LM_DATE = SYSDATE, LM_USER_ID= NVL(#lmUserId#,'SYSUSER') WHERE AWB_NO = #awbNo# and AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
	</update>
	<update id="updateImpCarAWBContent" parameterClass="java.util.HashMap">
		UPDATE IMP_CAR_AWB SET CONTENT = #content#,LM_DATE = SYSDATE, LM_USER_ID= NVL(#lmUserId#,'SYSUSER'),BYPASS_REL=NVL(#byPassRelInd#,BYPASS_REL),CONSOLE_IND = NVL(#consolInd#,CONSOLE_IND) WHERE AWB_NO = #awbNo# and AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
	</update>
	<update id="updateCstAWBContent" parameterClass="java.util.HashMap">
		UPDATE CST_AWB SET CONTENT = #content#,LM_DATE = SYSDATE, LM_USER_ID= NVL(#lmUserId#,'SYSUSER'),CNSL_IND = #cnslInd#  WHERE AWB_NO = #awbNo# and AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
	</update>
	<update id="updateCstAWBConsol" parameterClass="java.util.HashMap">
		UPDATE CST_AWB SET CNSL_IND = #consolInd#,LM_USER_ID=nvl(#lmUserId#,'SYSUSER'),LM_DATE=SYSDATE where awb_no = #awbNo# and awb_date = to_date(#awbDate#,'DDMONYY')
	</update>
	<select id="checkCARCreated" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM IMP_CAR_SHP WHERE AWB_NO =  #awbNo# AND AWB_DATE = (SELECT MAX(AWB_DATE) FROM AWB WHERE AWB_NO =  #awbNo#) AND CAR_CREATED = 'Y'
	</select>
	<select id="checkAwbExists" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		select count(1) from awb where awb_no = #awbNo# and awb_date = to_date(#awbDate#,'DDMONYY')
	</select>
	<select id="FETCH_AWB" parameterClass="java.util.HashMap" resultClass="cargo.cms.edi.bo.EdiFwbBO">
	 <![CDATA[
	 
		SELECT * FROM (
		SELECT 
		  TO_CHAR(T1.AWB_DATE,'DDMONYY') AS AWBDATE,
		  T1.AWB_NO AS AWBNO,
		  T1.ORIGIN AS ORG,
		  T1.DEST AS DEST,
		  T1.CARR_CODE AS RTGDESCARR,
		  T1.PCS AS PCS,
		  T1.WT  AS WGT,
		  T1.CONTENT AS  CONTENT,
		  SUBSTR(T1.SHPR_NAME,1,35) AS shprName,
		  SUBSTR(DECODE(T1.AGENT_NAME, NULL, D.CODE_DESC, T1.AGENT_NAME),1,35) AS AGENTNAME,
  	      (SELECT E.CODE_DESC FROM MAST_CITY E WHERE E.CODE = D.CITY) AS AGENTPLACE,
		  D.CO_IATA_CODE AGENTIATACODE,
      	  T1.CSGNE_ADDR AS csgneAddr,
          T1.CSGNE_CTRY_CODE AS csgneCtryCode,
          SUBSTR(T1.CSGNE_NAME,1,35) AS csgneName,
          T1.CSGNE_PIN_CODE AS csgnePinCode,
          T1.CSGNE_PLACE AS csgnePlace,
          T1.CSGNE_STATE_PROVINCE AS csgneStateProvince,
          T1.SHPR_ADDR AS shprAddr,
          T1.SHPR_CTRY_CODE AS shprCtryCode,      
          T1.SHPR_PIN_CODE AS shprPinCode,
          T1.SHPR_PLACE AS shprPlace,
          T1.SHPR_STATE_PROVINCE AS shprStateProvince
		  FROM  EXP_CAR T1
		  JOIN AWB T2 ON T1.AWB_NO = T2.AWB_NO AND TO_CHAR(T1.AWB_DATE,'DDMONYY') = TO_CHAR(T2.AWB_DATE,'DDMONYY') AND T2.CAR_YN = 'Y'
		  LEFT JOIN CUST_COMPANY D ON D.CODE_DESC = T1.AGENT_NAME
		  WHERE T2.AWB_CLOSED_YN = 'N' AND T1.AWB_NO = #awbNo#		
		) A
		WHERE ROWNUM <= 1		
        ]]>
 	</select>
	 <insert id="INSERT_FWB" parameterClass="cargo.cms.edi.bo.EdiFwbBO">
        INSERT INTO EDI_FWB
		(TR_NO,MSG_VER,AWB_NO,AWB_DATE,ORG,DES,SHIP_DESC_C,PCS,WGT_UNIT,WGT,FLT_CARR1,FLT_NUM1,FLT_KEY1, 
        FLT_DATE1,FLT_CARR2,FLT_NUM2,FLT_KEY2,FLT_DATE2,RTG_APT_CODE,RTG_DES_CARR,RTG_ONWARD_CODE1,
		RTG_ONWARD_CARR1,RTG_ONWARD_CODE2,RTG_ONWARD_CARR2,SHPR_ACC_NO,SHPR_NAME,SHPR_ADDR,SHPR_ADDR2,
		SHPR_PLACE,SHPR_CTRY_CODE,SHPR_STATE_PROVINCE,SHPR_PIN_CODE,SHPR_CONT_ID, 
	    SHPR_CONT_NO,CSGNE_ACC_NO,CSGNE_NAME,CSGNE_ADDR,CSGNE_ADDR2,CSGNE_PLACE,CSGNE_CTRY_CODE,CSGNE_STATE_PROVINCE,
		CSGNE_PIN_CODE,CSGNE_CONT_ID,CSGNE_CONT_NO,AGENT_ACC_NO,AGENT_IATA_CODE,AGENT_IATA_ADDR,
		AGENT_PART_ID,AGENT_NAME,AGENT_PLACE,AGENT_SPL_SERV1,AGENT_SPL_SERV2,AGENT_SPL_SERV3, 
        NOTIFY_NAME,NOTIFY_ADDR,NOTIFY_ADDR2,NOTIFY_PLACE,NOTIFY_CTRY_CODE,NOTIFY_STATE_PROVINCE,NOTIFY_PIN_CODE,
		NOTIFY_CONT_ID,NOTIFY_CONT_NO,CVD_ISO_CURR_CODE,CVD_CHG_CODE,CVD_CHG_DECL_WGT,CVD_CHG_DECL_OTH,
		CVD_CHG_CARR_VAL,CVD_CHG_CARR_IND,CVD_CHG_CUST_VAL,CVD_CHG_CUST_IND,CVD_CHG_INSUR_VAL,
		CVD_CHG_INSUR_IND,PPD_TOTAL_WT_AMT,PPD_VALUE_VC_AMT,PPD_TAXES_TX_AMT,PPD_TOTAL_OA_AMT,
		PPD_TOTAL_OC_AMT,PPD_SUMMY_CT_AMT,COL_TOTAL_WT_AMT,COL_VALUE_VC_AMT, 
	    COL_TAXES_TX_AMT,COL_TOTAL_OA_AMT,COL_TOTAL_OC_AMT,COL_SUMMY_CT_AMT,CER_SIGNATURE,
		ISU_AWB_ISS_DATE,ISU_AWB_ISS_PLACE,ISU_SIGNATURE,OSI_SERVICE_INFO1,OSI_SERVICE_INFO2,
		OSI_SERVICE_INFO3,CDC_ISO_CURR_CODE,CDC_CURR_RATE,
		CDC_CC_INDES_AMT,CDC_CC_ATDES_AMT,CDC_TOTAL_CHG_AMT,COR_CUST_ORI_CODE, 
	    CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,COPY_NO,MSG_SEQ_NUM,TOTAL_COUNT,FWB_STATUS,SUCCESS_MSGS,COI_CASS_IND, COI_CASS_AMT_FACT, COI_CASS_PER_FACT, SII_CHG_AMT, SII_CASS_IND, ARD_FILE_REF, SPH_SPL_CODE1, SPH_SPL_CODE2, SPH_SPL_CODE3, SPH_SPL_CODE4, SPH_SPL_CODE5, SPH_SPL_CODE6, SPH_SPL_CODE7, SPH_SPL_CODE8, SPH_SPL_CODE9, NOM_NAME, NOM_SPACE, SRI_REF_NO, SRI_SUPP_SHP_INFO1, SRI_SUPP_SHP_INFO2, TR_TYPE
	    ,REF_PART_ID , REF_PART_CODE, REF_PART_APT_CODE , REF_OFFICE_DESI , REF_COMP_DESI ,REF_APT_CODE, REF_FILE_REF,VOL_CODE,VOLUME,DENSITY_IND,DENSITY_GRP,DIRECT_SHIPPER)
        VALUES (#trNo#,1,#awbNo#,to_date(#awbDate#,'DDMONYY'),#org#,#dest#,'T',#pcs#,'K',
		#wgt#,#fltCarr1#,#fltNum1#,#fltKey1#,#fltDate1#,#fltCarr2#,#fltNum2#,#fltKey2#,#fltDate2#,
		#rtgAptCode#,#rtgDesCarr#,#rtgOnwardCode1#,#rtgOnwardCarr1#,#rtgOnwardCode2#,#rtgOnwardCarr2#,
		#shprAccNo#,#shprName#,#shprAddr#,#shprAddr2#,#shprPlace#,#shprCtryCode#,#shprStateProvince#,#shprPinCode#,
		#shprContId#,#shprContNo#,#csgneAccNo#,#csgneName#,#csgneAddr#,#csgneAddr2#,#csgnePlace#,#csgneCtryCode#,
		#csgneStateProvince#,#csgnePinCode#,#csgneContId#,#csgneContNo#,#agentAccNo#,#agentIataCode#,
	    #agentIataAddr#,#agentPartId#,#agentName#,#agentPlace#,#agentSplServ1#,#agentSplServ2#,
		#agentSplServ3#,#notifyName#,#notifyAddr#,#notifyAddr2#,#notifyPlace#,#notifyCtryCode#,#notifyStateProvince#,
        #notifyPinCode#,#notifyContId#,#notifyContNo#,#cvdIsoCurrCode#,#cvdChgCode#,#cvdChgDeclWgt#,
		#cvdChgDeclOth#,#cvdChgCarrVal#,#cvdChgCarrInd#,#cvdChgCustVal#,#cvdChgCustInd#,
	    #cvdChgInsurVal#,#cvdChgInsurInd#,#ppdTotalWtAmt#,#ppdValueVcAmt#,#ppdTaxesTxAmt#,
		#ppdTotalOaAmt#,#ppdTotalOcAmt#,#ppdSummyCtAmt#,#colTotalWtAmt#,#colValueVcAmt#,
        #colTaxesTxAmt#,#colTotalOaAmt#,#colTotalIcAmt#,#colSummyCtAmt#,#cerSignature#,
		to_date(#isuAwbIssDate#,'DDMONYY'),#isuAwbPlace#,#isuSignature#,#osiServiceInfo1#,
		#ostServiceInfo2#,#ostServiceInfo3#,#cdcIsoCurrCode#,#cdeCurrRate#,#cdeCcIndesAmt#,#cdeCcAtdesAmt#,#cdeTotalChgAmt#,#corCustOriCode#,
	    #crUserId#,SYSDATE,#lmUserId#,SYSDATE,1,1,1,#fwbStatus#,#successMsgs#,#COI_CASS_IND#, #COI_CASS_AMT_FACT#, #COI_CASS_PER_FACT#, #SII_CHG_AMT#, #SII_CASS_IND#, #ARD_FILE_REF#, #SPH_SPL_CODE1#, #SPH_SPL_CODE2#, #SPH_SPL_CODE3#, #SPH_SPL_CODE4#, #SPH_SPL_CODE5#, #SPH_SPL_CODE6#, #SPH_SPL_CODE7#, #SPH_SPL_CODE8#, #SPH_SPL_CODE9#, #NOM_NAME#, #NOM_SPACE#, #SRI_REF_NO#, #SRI_SUPP_SHP_INFO1#, #SRI_SUPP_SHP_INFO2#, 'REFWB'
	    ,#sendrPartiI# ,#sendrPartiC# , #sendrPartAirpC# , #sendrOffFuncDesg# ,#sendrOffCoDesg# , #sendrOffAirpC#,#sendrOffFileRefNo#,#volCode#,#vol#,#density#,#densityGrp#,#directShipper#
	    )
    </insert>
	
	<insert id="INSERT_FWB_ACCT_INFO" parameterClass="cargo.cms.edi.bo.EdiFwbAccInfoBO"> 
	    INSERT INTO EDI_FWB_ACCT_INFO(TR_NO,DOC_LINE_NO,ACC_INFO_IND,ACC_INFO)
	    VALUES(#trNo#,#docLineNo#,#accInfoInd#,#accInfo#)
	</insert>
	<!-- Contact Starts -->
	<insert id="INSERT_FWB_CONTACT" parameterClass="cargo.cms.edi.bo.EdiFwbContactBO">
		INSERT INTO EDI_FWB_CONTACT(TR_NO,DOC_LINE_NO,CONT_ID,CONT_NAME,CONT_TYPE)
		VALUES(#trNo#,#docLineNo#,#contId#,#contName#,#contType#)
	</insert>
	<!-- Contact Ends-->
	<insert id="INSERT_FWB_OTH_CHARGES" parameterClass="cargo.cms.edi.bo.EdiFwbOthChgBO">
		 INSERT INTO EDI_FWB_OTH_CHARGES (TR_NO,DOC_LINE_NO,OTH_PC_I1,OTH_CHRG_C1, 
    	 OTH_ENTLEMT_C1,OTH_CHRG1,OTH_PC_I2,OTH_CHRG_C2,OTH_ENTLEMT_C2,OTH_CHRG2, 
	     OTH_PC_I3,OTH_CHRG_C3,OTH_ENTLEMT_C3, OTH_CHRG3)
	     VALUES
    	 (#trNo#,#docLineNo#,#othPcI1#,#othChrgC1#,#othEntlemtC1#,#othChrg1#,#othPcI2#,#othChrgC2#,
		 #othEntlemtC2#,#othChrg2#,#othPcI3#,#othChrgC3#,#othEntlemtC3#,#othChrg3#)	
	</insert>
	
    <select id = "checkAWBExistInFWB" parameterClass="java.lang.String" resultClass="java.lang.String">
   	       SELECT COUNT(1) FROM EDI_FWB WHERE AWB_NO = #awbNo#	
 	</select>	  	  
 	<select id = "checkAWBExistInFWB1" parameterClass="map" resultClass="java.lang.String">
   	       SELECT COUNT(1) FROM EDI_FWB WHERE AWB_NO = #awbNo#	and awb_date = #awbDate#
 	</select>	  

	<select id = "SELECT_EDI_FWB" resultClass="cargo.cms.edi.bo.EdiFwbBO" parameterClass="java.util.HashMap">  
		 SELECT EDI_FWB.TR_NO as trNo,
		 EDI_FWB.MSG_VER as msgVer,
		 EDI_FWB.AWB_NO as awbNo,
		 to_char(EDI_FWB.AWB_DATE,'DDMONYY') as awbDate,
		 EDI_FWB.ORG as org,
		 EDI_FWB.DES as dest,
		 EDI_FWB.SHIP_DESC_C as shipDescC,
		 EDI_FWB.PCS as pcs,
		 EDI_FWB.WGT_UNIT as wgtUnit,
		 EDI_FWB.WGT as wgt,
		 EDI_FWB.FLT_CARR1 as fltCarr1,
		 EDI_FWB.FLT_NUM1 as fltNum1,
		 EDI_FWB.FLT_KEY1 as fltKey1, 
         EDI_FWB.FLT_DATE1 as fltDate1,
		 EDI_FWB.FLT_CARR2 as fltcarr2,
		 EDI_FWB.FLT_NUM2  as fltNum2,
		 EDI_FWB.FLT_KEY2 as fltKey2,
		 EDI_FWB.FLT_DATE2 as fltDate2,
		 EDI_FWB.RTG_APT_CODE as rtgAptCode,
		 EDI_FWB.RTG_DES_CARR as rtgDesCarr,
		 EDI_FWB.RTG_ONWARD_CODE1 as rtgOnwardCode1,
		 EDI_FWB.RTG_ONWARD_CARR1 as rtgOnwardCarr1,
		 EDI_FWB.RTG_ONWARD_CODE2 as rtgOnwardCode2,
		 EDI_FWB.RTG_ONWARD_CARR2 as rtgOnwardCarr2,
		 EDI_FWB.SHPR_ACC_NO as shprAccNo,
		 EDI_FWB.DIRECT_SHIPPER as directShipper,
		 EDI_FWB.SHPR_NAME as shprName,
		 EDI_FWB.SHPR_ADDR as shprAddr,
		 EDI_FWB.SHPR_ADDR2  AS shprAddr2,
	     EDI_FWB.SHPR_PLACE as shprPlace,
		 EDI_FWB.SHPR_CTRY_CODE as shprCtryCode,
		 EDI_FWB.SHPR_STATE_PROVINCE as shprStateProvince,
		 EDI_FWB.SHPR_PIN_CODE as shprPinCode,
		 EDI_FWB.SHPR_CONT_ID as shprContId, 
	     EDI_FWB.SHPR_CONT_NO as shprContNo,
		 EDI_FWB.CSGNE_ACC_NO as csgneAccNo,
		 EDI_FWB.CSGNE_NAME as csgneName,
		 EDI_FWB.CSGNE_ADDR as csgneAddr,
		 EDI_FWB.CSGNE_ADDR2   AS csgneAddr2,
		 EDI_FWB.CSGNE_PLACE as csgnePlace,
		 EDI_FWB.CSGNE_CTRY_CODE as csgneCtryCode,
		 EDI_FWB.CSGNE_STATE_PROVINCE as csgneStateProvince,
		 EDI_FWB.CSGNE_PIN_CODE as csgnePinCode,
		 EDI_FWB.CSGNE_CONT_ID as csgneContId,
		 EDI_FWB.CSGNE_CONT_NO as csgneContNo,
		 EDI_FWB.AGENT_ACC_NO as agentAccNo,
		 EDI_FWB.AGENT_IATA_CODE as agentIataCode,
		 EDI_FWB.AGENT_IATA_ADDR as agentIataAddr,
		 EDI_FWB.AGENT_PART_ID as agentPartId,
		 EDI_FWB.AGENT_NAME as agentName,
		 EDI_FWB.AGENT_PLACE as agentPlace,
		 EDI_FWB.AGENT_SPL_SERV1 as agentSplServ1,
		 EDI_FWB.AGENT_SPL_SERV2 as agentSplServ2,
		 EDI_FWB.AGENT_SPL_SERV3 as agentSplServ3, 
         EDI_FWB.NOTIFY_NAME as notifyName,
		 EDI_FWB.NOTIFY_ADDR as notifyAddr,
		 EDI_FWB.NOTIFY_ADDR2  AS notifyAddr2,
		 EDI_FWB.NOTIFY_PLACE as notifyPlace,
		 EDI_FWB.NOTIFY_CTRY_CODE as notifyCtryCode,
		 EDI_FWB.NOTIFY_STATE_PROVINCE as notifyStateProvince,
		 EDI_FWB.NOTIFY_PIN_CODE as notifyPinCode,
		 EDI_FWB.NOTIFY_CONT_ID as notifyContId,
		 EDI_FWB.NOTIFY_CONT_NO as notifyContNo,
		 EDI_FWB.CVD_ISO_CURR_CODE as cvdIsoCurrCode,
		 EDI_FWB.CVD_CHG_CODE as cvdChgCode,
		 EDI_FWB.CVD_CHG_DECL_WGT as cvdChgDeclWgt,
		 EDI_FWB.CVD_CHG_DECL_OTH as cvdChgDeclOth,
		 EDI_FWB.CVD_CHG_CARR_VAL as cvdChgCarrVal,
		 EDI_FWB.CVD_CHG_CARR_IND as cvdChgCarrInd,
		 EDI_FWB.CVD_CHG_CUST_VAL as cvdChgCustVal,
		 EDI_FWB.CVD_CHG_CUST_IND as cvdChgCustInd,
		 EDI_FWB.CVD_CHG_INSUR_VAL as cvdChgInsurVal,
		 EDI_FWB.CVD_CHG_INSUR_IND as cvdChgInsurInd, 
		 EDI_FWB.PPD_TOTAL_WT_AMT as ppdTotalWtAmt,
		 EDI_FWB.PPD_VALUE_VC_AMT as ppdValueVcAmt,
		 EDI_FWB.PPD_TAXES_TX_AMT as ppdTaxesTxAmt, 
		 EDI_FWB.PPD_TOTAL_OA_AMT as ppdTotalOaAmt,
	     EDI_FWB.PPD_TOTAL_OC_AMT as ppdTotalOcAmt,
		 EDI_FWB.PPD_SUMMY_CT_AMT as ppdSummyCtAmt,
		 EDI_FWB.COL_TOTAL_WT_AMT as colTotalWtAmt,
		 EDI_FWB.COL_VALUE_VC_AMT as colValueVcAmt, 
 	     EDI_FWB.COL_TAXES_TX_AMT as colTaxesTxAmt,
		 EDI_FWB.COL_TOTAL_OA_AMT as colTotalOaAmt,
		 EDI_FWB.COL_TOTAL_OC_AMT as colTotalIcAmt,
		 EDI_FWB.COL_SUMMY_CT_AMT as colSummyCtAmt,
		 EDI_FWB.CER_SIGNATURE as cerSignature,
		 to_char(EDI_FWB.ISU_AWB_ISS_DATE,'DDMONYY') as isuAwbIssDate,
		 EDI_FWB.ISU_AWB_ISS_PLACE as isuAwbPlace,
		 EDI_FWB.ISU_SIGNATURE as isuSignature,
		 EDI_FWB.OSI_SERVICE_INFO1 as osiServiceInfo1,
		 EDI_FWB.OSI_SERVICE_INFO2 as ostServiceInfo2 ,
		 EDI_FWB.OSI_SERVICE_INFO3 as ostServiceInfo3,
		 EDI_FWB.CDC_ISO_CURR_CODE as cdcIsoCurrCode,
		 EDI_FWB.CDC_CURR_RATE as cdeCurrRate,
		 EDI_FWB.CDC_CC_INDES_AMT as cdeCcIndesAmt,
		 EDI_FWB.CDC_CC_ATDES_AMT as cdeCcAtdesAmt,
		 EDI_FWB.CDC_TOTAL_CHG_AMT as cdeTotalChgAmt,
		 EDI_FWB.COR_CUST_ORI_CODE as corCustOriCode, 
	     EDI_FWB.CR_USER_ID as crUserID,
		 EDI_FWB.CR_DATE as crDate,
		 EDI_FWB.LM_USER_ID as lmuserId,
		 EDI_FWB.LM_DATE as lmDate,
		 EDI_FWB.COPY_NO as copyNo,
		 EDI_FWB.MSG_SEQ_NUM as msgSeqNum,
		 EDI_FWB.TOTAL_COUNT as totalCount ,
		 COI_CASS_IND, COI_CASS_AMT_FACT, COI_CASS_PER_FACT, SII_CHG_AMT, SII_CASS_IND, ARD_FILE_REF, 
		 SPH_SPL_CODE1, SPH_SPL_CODE2, SPH_SPL_CODE3, SPH_SPL_CODE4, SPH_SPL_CODE5, SPH_SPL_CODE6, SPH_SPL_CODE7, SPH_SPL_CODE8, SPH_SPL_CODE9,NOM_NAME, NOM_SPACE, SRI_REF_NO, SRI_SUPP_SHP_INFO1, SRI_SUPP_SHP_INFO2,
		 VOL_CODE as volCode,
		VOLUME as vol,
		DENSITY_IND as density,
		decode(DENSITY_IND,'','',DENSITY_GRP) as densityGrp
		 FROM EDI_FWB 
		 left join AWB
		 ON EDI_FWB.AWB_NO = AWB.AWB_NO AND EDI_FWB.AWB_DATE = AWB.AWB_DATE
		<isNotEmpty property="actionFrom">
			<isNotEmpty property="loginCarrier">  			  	       				  
		       		 		AND	(AWB.CARR_CODE = #loginCarrier#
							OR AWB.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP 
							WHERE GRP_CARR_CODE	= #loginCarrier#))						
			</isNotEmpty>
		</isNotEmpty>
		 WHERE 
		 EDI_FWB.TR_NO = (SELECT MAX(A.TR_NO) FROM EDI_FWB A WHERE A.AWB_NO = #awbNo#)		
		<isNotEmpty property="actionFrom">
			<isNotEmpty property="loginCarrier">   	       			
		       		 		AND	(AWB.CARR_CODE = #loginCarrier# OR AWB.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE	= #loginCarrier#))						
			</isNotEmpty>
		</isNotEmpty>			 
	</select>		 
	<select id = "SELECT_EDI_FWB_ACCT_INFO" resultClass="cargo.cms.edi.bo.EdiFwbAccInfoBO" parameterClass="java.lang.String">
		 SELECT EDI_FWB_ACCT_INFO.TR_NO as trNo,
		 EDI_FWB_ACCT_INFO.DOC_LINE_NO as docLineNo,
		 EDI_FWB_ACCT_INFO.ACC_INFO_IND as accInfoInd,
		 EDI_FWB_ACCT_INFO.ACC_INFO as accInfo
		 FROM  EDI_FWB,EDI_FWB_ACCT_INFO 
		 WHERE 
		 EDI_FWB_ACCT_INFO.TR_NO = EDI_FWB.TR_NO
		 AND EDI_FWB.TR_NO = (SELECT MAX(A.TR_NO) FROM EDI_FWB A WHERE A.AWB_NO = #awbNo#)

   </select>
   <select id = "FETCH_AWB_DATE_FWB_EXISTS" resultClass="java.lang.String" parameterClass="java.lang.String">
   select to_char(awb_date,'DDMONYY')awb_date from EDI_FWB where TR_NO = (SELECT MAX(A.TR_NO) FROM EDI_FWB A WHERE A.AWB_NO = #PARAM#)
   </select>
   
   	<select id="SELECT_EDI_FWB_CONTACT" resultClass="cargo.cms.edi.bo.EdiFwbContactBO" parameterClass="java.lang.String">
		SELECT EDI_FWB_CONTACT.tr_no as trNo,
		  EDI_FWB_CONTACT.doc_line_no as docLineNo,
		  EDI_FWB_CONTACT.cont_id as contId,
		  EDI_FWB_CONTACT.cont_name as contName,
		  EDI_FWB_CONTACT.cont_type as contType
		 FROM EDI_FWB, EDI_FWB_CONTACT 
		 WHERE
  		  EDI_FWB_CONTACT.tr_no=EDI_FWB.tr_no
	      AND EDI_FWB.TR_NO = (SELECT MAX(A.TR_NO) FROM EDI_FWB A WHERE A.AWB_NO = #awbNo#)
	</select>
	
	<select id="SELECT_EDI_FWB_CHARGES" resultClass="cargo.cms.edi.bo.EdiFwbOthChgBO" parameterClass="java.lang.String">
		
		SELECT EDI_FWB_OTH_CHARGES.TR_NO as trNo,
		EDI_FWB_OTH_CHARGES.DOC_LINE_NO as docLineNo,
		EDI_FWB_OTH_CHARGES.OTH_PC_I1 as othPcI1,
		EDI_FWB_OTH_CHARGES.OTH_CHRG_C1 as othChrgC1, 
        EDI_FWB_OTH_CHARGES.OTH_ENTLEMT_C1 as othEntlemtC1,
		EDI_FWB_OTH_CHARGES.OTH_CHRG1 as othChrg1,
		EDI_FWB_OTH_CHARGES.OTH_PC_I2 as othPcI2,
		EDI_FWB_OTH_CHARGES.OTH_CHRG_C2 as othChrgC2,
		EDI_FWB_OTH_CHARGES.OTH_ENTLEMT_C2 as othEntlemtC2,
		EDI_FWB_OTH_CHARGES.OTH_CHRG2 as othChrg2, 
        EDI_FWB_OTH_CHARGES.OTH_PC_I3 as othPcI3,
		EDI_FWB_OTH_CHARGES.OTH_CHRG_C3 as othChrgC3,
		EDI_FWB_OTH_CHARGES.OTH_ENTLEMT_C3 as othEntlemtC3,
		EDI_FWB_OTH_CHARGES.OTH_CHRG3 as othChrg3
		FROM  EDI_FWB,EDI_FWB_OTH_CHARGES
		WHERE EDI_FWB_OTH_CHARGES.TR_NO=EDI_FWB.TR_NO
		AND EDI_FWB.TR_NO = (SELECT MAX(A.TR_NO) FROM EDI_FWB A WHERE A.AWB_NO = #awbNo#)
	</select>

	<!-- EdiFwb Update -->	
	 <update id="UPDATE_EDI_FWB" parameterClass="cargo.cms.edi.bo.EdiFwbBO">		 
		UPDATE EDI_FWB SET
		ORG=#org#,DES=#dest#,SHIP_DESC_C=#shipDescC#,
		PCS=#pcs#,WGT=#wgt#,FLT_CARR1=#fltCarr1#,
		FLT_NUM1=#fltNum1#,FLT_KEY1=#fltKey1#,FLT_DATE1=#fltDate1#,FLT_CARR2=#fltCarr2#,
		FLT_NUM2=#fltNum2#,FLT_KEY2=#fltKey2#,FLT_DATE2=#fltDate2#,RTG_APT_CODE=#rtgAptCode#,
		RTG_DES_CARR=#rtgDesCarr#,RTG_ONWARD_CODE1=#rtgOnwardCode1#,
		RTG_ONWARD_CARR1=#rtgOnwardCarr1#,RTG_ONWARD_CODE2=#rtgOnwardCode2#,
		RTG_ONWARD_CARR2=#rtgOnwardCarr2#,SHPR_ACC_NO=#shprAccNo#, DIRECT_SHIPPER = #directShipper#,
		SHPR_NAME=#shprName#,SHPR_ADDR=#shprAddr#,SHPR_ADDR2=#shprAddr2#,
		SHPR_PLACE=#shprPlace#,SHPR_CTRY_CODE=#shprCtryCode#,
		SHPR_STATE_PROVINCE=#shprStateProvince#,SHPR_PIN_CODE =#shprPinCode#,
		SHPR_CONT_ID=#shprContId#,SHPR_CONT_NO=#shprContNo#,
		CSGNE_ACC_NO=#csgneAccNo#,CSGNE_NAME=#csgneName#,
		CSGNE_ADDR=#csgneAddr#,CSGNE_ADDR2=#csgneAddr2#,CSGNE_PLACE=#csgnePlace#,
		CSGNE_CTRY_CODE=#csgneCtryCode#,CSGNE_STATE_PROVINCE=#csgneStateProvince#,
		CSGNE_PIN_CODE=#csgnePinCode#,CSGNE_CONT_ID=#csgneContId#,
		CSGNE_CONT_NO =#csgneContNo#,AGENT_ACC_NO =#agentAccNo#,
		AGENT_IATA_CODE =#agentIataCode#,AGENT_IATA_ADDR =#agentIataAddr#,
		AGENT_PART_ID=#agentPartId#,AGENT_NAME=#agentName#,
		AGENT_PLACE=#agentPlace#,AGENT_SPL_SERV1=#agentSplServ1#,
		AGENT_SPL_SERV2=#agentSplServ2#,AGENT_SPL_SERV3=#agentSplServ3#, 
		NOTIFY_NAME =#notifyName#,NOTIFY_ADDR =#notifyAddr#,NOTIFY_ADDR2 =#notifyAddr2#,
		NOTIFY_PLACE=#notifyPlace#,NOTIFY_CTRY_CODE=#notifyCtryCode#,
		NOTIFY_STATE_PROVINCE=#notifyStateProvince#,NOTIFY_PIN_CODE=#notifyPinCode#,
		NOTIFY_CONT_ID=#notifyContId#,NOTIFY_CONT_NO=#notifyContNo#,
		CVD_ISO_CURR_CODE=#cvdIsoCurrCode#,CVD_CHG_CODE =#cvdChgCode#,
		CVD_CHG_DECL_WGT=#cvdChgDeclWgt#,CVD_CHG_DECL_OTH=#cvdChgDeclOth#,
		CVD_CHG_CARR_VAL=#cvdChgCarrVal#,CVD_CHG_CARR_IND=#cvdChgCarrInd#,
		CVD_CHG_CUST_VAL=#cvdChgCustVal#,CVD_CHG_CUST_IND=#cvdChgCustInd#,
		CVD_CHG_INSUR_VAL=#cvdChgInsurVal#,CVD_CHG_INSUR_IND=#cvdChgInsurInd#, 
		PPD_TOTAL_WT_AMT=#ppdTotalWtAmt#,PPD_VALUE_VC_AMT=#ppdValueVcAmt#,
		PPD_TAXES_TX_AMT=#ppdTaxesTxAmt#,PPD_TOTAL_OA_AMT=#ppdTotalOaAmt#,
		PPD_TOTAL_OC_AMT=#ppdTotalOcAmt#,PPD_SUMMY_CT_AMT=#ppdSummyCtAmt#,
		COL_TOTAL_WT_AMT=#colTotalWtAmt#,COL_VALUE_VC_AMT=#colValueVcAmt#, 
		COL_TAXES_TX_AMT=#colTaxesTxAmt#,COL_TOTAL_OA_AMT=#colTotalOaAmt#,
		COL_TOTAL_OC_AMT=#colTotalIcAmt#,COL_SUMMY_CT_AMT=#colSummyCtAmt#,
		CER_SIGNATURE=#cerSignature#, ISU_AWB_ISS_DATE = to_date(#isuAwbIssDate#,'DDMONYY'),
		ISU_AWB_ISS_PLACE =#isuAwbPlace#,ISU_SIGNATURE =#isuSignature#,
		OSI_SERVICE_INFO1=#osiServiceInfo1#,OSI_SERVICE_INFO2=#ostServiceInfo2#,
		OSI_SERVICE_INFO3=#ostServiceInfo3#,CDC_ISO_CURR_CODE=#cdcIsoCurrCode#,
		CDC_CURR_RATE=#cdeCurrRate#,CDC_CC_INDES_AMT=#cdeCcIndesAmt#,
		CDC_CC_ATDES_AMT=#cdeCcAtdesAmt#,CDC_TOTAL_CHG_AMT=#cdeTotalChgAmt#,
		COR_CUST_ORI_CODE=#corCustOriCode#,LM_USER_ID=#lmUserId#,
		LM_DATE =SYSDATE,
		COI_CASS_IND=#COI_CASS_IND#,
		COI_CASS_AMT_FACT=#COI_CASS_AMT_FACT#,
		COI_CASS_PER_FACT=#COI_CASS_PER_FACT#,
		SII_CHG_AMT=#SII_CHG_AMT#,
		SII_CASS_IND=#SII_CASS_IND#,
		ARD_FILE_REF=#ARD_FILE_REF#,
		SPH_SPL_CODE1=#SPH_SPL_CODE1#,
		SPH_SPL_CODE2=#SPH_SPL_CODE2#,
		SPH_SPL_CODE3=#SPH_SPL_CODE3#,
		SPH_SPL_CODE4=#SPH_SPL_CODE4#,
		SPH_SPL_CODE5=#SPH_SPL_CODE5#,
		SPH_SPL_CODE6=#SPH_SPL_CODE6#,
		SPH_SPL_CODE7=#SPH_SPL_CODE7#,
		SPH_SPL_CODE8=#SPH_SPL_CODE8#,
		SPH_SPL_CODE9=#SPH_SPL_CODE9#,
		NOM_NAME=#NOM_NAME#,
		NOM_SPACE=#NOM_SPACE#,
		SRI_REF_NO=#SRI_REF_NO#,
		SRI_SUPP_SHP_INFO1=#SRI_SUPP_SHP_INFO1#,
		SRI_SUPP_SHP_INFO2=#SRI_SUPP_SHP_INFO2#,
		VOL_CODE = #volCode#,
		VOLUME = #vol#,
		DENSITY_IND = #density#,
		DENSITY_GRP = #densityGrp# ,
		TR_TYPE = 'UEFWB'
	    WHERE TR_No=#trNo#	
		</update>
	 
	 <update id="UPDATE_EDI_FWB_OTH_CHARGES" parameterClass="cargo.cms.edi.bo.EdiFwbOthChgBO">		 
		UPDATE EDI_FWB_OTH_CHARGES SET OTH_PC_I1=#othPcI1#,
		 OTH_CHRG_C1=#othChrgC1#,OTH_ENTLEMT_C1=#othEntlemtC1#,
		 OTH_CHRG1=#othChrg1#,OTH_PC_I2=#othPcI2#,
		 OTH_CHRG_C2=#othChrgC2#,OTH_ENTLEMT_C2=#othEntlemtC2#,
		 OTH_CHRG2=#othChrg2#,OTH_PC_I3=#othPcI3#,
		 OTH_CHRG_C3=#othChrgC3#,OTH_ENTLEMT_C3=#othEntlemtC3#,
		 OTH_CHRG3=#othChrg3#	 
		WHERE TR_NO=#trNo# 
		AND DOC_LINE_NO=#docLineNo#
	 </update>
		
	 <update id="UPDATE_EDI_FWB_ACCT_INFO" parameterClass="cargo.cms.edi.bo.EdiFwbAccInfoBO">
		 UPDATE EDI_FWB_ACCT_INFO SET ACC_INFO_IND=#accInfoInd#,ACC_INFO=#accInfo# 
		 WHERE TR_NO=#trNo#
		 AND DOC_LINE_NO=#docLineNo#
	 </update>
	 
	<!-- Contact UPDATE  -->
	<update id="UPDATE_EDI_FWB_CONTACT" parameterClass="cargo.cms.edi.bo.EdiFwbContactBO">
		 UPDATE EDI_FWB_CONTACT SET
		 CONT_ID=#contId#,
		 CONT_NAME=#contName#,
		 CONT_TYPE=#contType#
		WHERE
		 TR_NO=#trNo# and DOC_LINE_NO=#docLineNo#
	</update>
	
	<delete id="DEL_EDI_FWB" parameterClass="java.util.HashMap" >
         DELETE EDI_FWB WHERE AWB_NO = #awbNo# AND AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
    </delete>

	<delete id="del_edi_fwb_rate" parameterClass="java.util.HashMap" >
	     DELETE EDI_FWB_RATE WHERE TR_NO IN ( SELECT TR_NO FROM EDI_FWB WHERE AWB_NO = #awbNo# AND AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') )
    </delete>

	<delete id="del_edi_fwb_oth_charges" parameterClass="java.util.HashMap" >
	    DELETE EDI_FWB_OTH_CHARGES WHERE TR_NO IN ( SELECT TR_NO FROM EDI_FWB WHERE AWB_NO = #awbNo# AND AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') )
    </delete>

	<delete id="del_edi_fwb_contact" parameterClass="java.util.HashMap" >
        DELETE EDI_FWB_CONTACT WHERE TR_NO IN ( SELECT TR_NO FROM EDI_FWB WHERE AWB_NO = #awbNo# AND AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') )
    </delete>

	<delete id="del_edi_fwb_acct_info" parameterClass="java.util.HashMap" >
	     DELETE EDI_FWB_ACCT_INFO WHERE TR_NO IN ( SELECT TR_NO FROM EDI_FWB WHERE AWB_NO = #awbNo# AND AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') )
    </delete>

	<delete id="del_edi_fwb_oci" parameterClass="java.util.HashMap" >
	     DELETE EDI_FWB_OCI WHERE TR_NO IN ( SELECT TR_NO FROM EDI_FWB WHERE AWB_NO = #awbNo# AND AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') )
    </delete>

	<delete id="del_edi_fwb_oth_participant" parameterClass="java.util.HashMap" >
	     DELETE EDI_FWB_OTH_PARTICIPANT WHERE TR_NO IN ( SELECT TR_NO FROM EDI_FWB WHERE AWB_NO = #awbNo# AND AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') )
    </delete>
    
    
    <delete id="DEL_EDI_FWB_CHR_RATE" parameterClass="java.util.HashMap" >
	     DELETE  EDI_FWB_CHR_RATE WHERE TR_NO IN ( SELECT TR_NO FROM EDI_FWB WHERE AWB_NO = #awbNo# AND AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') )
    </delete>
	
	<delete id="DEL_EDI_FWB_DMN" parameterClass="java.util.HashMap">
	     DELETE EDI_FWB_DMN WHERE TR_NO IN ( SELECT TR_NO FROM EDI_FWB WHERE AWB_NO = #awbNo# AND AWB_DATE = TO_DATE(#awbDate#,'DDMONYY'))
    </delete>
	
	<delete id="delete_acc_info_only" parameterClass="cargo.cms.edi.bo.EdiFwbAccInfoBO">
	     DELETE EDI_FWB_ACCT_INFO WHERE TR_NO=#trNo# AND DOC_LINE_NO=#docLineNo#
	</delete>
	
	<delete id="delete_rate_only" parameterClass="cargo.cms.edi.bo.EdiFwbRateBO">
	     DELETE EDI_FWB_RATE WHERE TR_NO=#trNo# AND DOC_LINE_NO=#docLineNo#
	</delete>
	
	<delete id="delete_oth_chg_only" parameterClass="cargo.cms.edi.bo.EdiFwbOthChgBO">
	   DELETE EDI_FWB_OTH_CHARGES WHERE TR_NO=#trNo# AND DOC_LINE_NO=#docLineNo#
	</delete>
	
	<delete id="delete_opi_only" parameterClass="cargo.cms.edi.bo.EdiFwbOthPartiBO">
	   DELETE EDI_FWB_OTH_PARTICIPANT WHERE TR_NO=#trNo# AND DOC_LINE_NO=#docLineNo#
	</delete>

	<delete id="delete_oci_only" parameterClass="cargo.cms.edi.bo.EdiFwbOciBO">
	   DELETE EDI_FWB_OCI WHERE TR_NO=#trNo# AND DOC_LINE_NO=#docLineNo#
	</delete>
	  
	<!-- new FWB quires for  EDI_FWB_CHR_RATE,EDI_FWB_DMN -->	
	<insert id="INSERT_FWB_CHR_RATE" parameterClass="cargo.cms.edi.bo.EdiFwbChrRateBO">
         INSERT INTO EDI_FWB_CHR_RATE(TR_NO,DOC_LINE_NO,RATE_PCS,RATE_GWT_CODE,RATE_GWT,RATE_CL_CODE,
	     RATE_COMM_N,RATE_CHRGBLE_WT,RATE_CHRG_RATE,RATE_CHRG_A,RATE_GOODS_DATA_I,RATE_GOODS_NATR,
	     RTD_AWB_WGT_UNIT,RTD_AWB_WGT,RTD_AWB_DIM_UNIT,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE)
		VALUES
		 (#trNo#,#docLineNo#,#ratePcs#,#rateGwtCode#,#rateGwt#,#rateClCode#,#rateCommN#,#rateChrgbleWt#,
		  #rateChrgRate#,#rateChrgA#,#rateGoodsDataI#,#rateGoodsNatr#,#rtdAwbWgtUnit#,
		  #rtdAwbWgt#,#rtdAwbDimUnit#,#crUserId#,to_date(#crDate#,'DDMONYY'),#lmUserId#,#lmDate#)
	</insert>
	
	 <insert id="INSERT_FWB_DMN" parameterClass="cargo.cms.edi.bo.EdiFwbDmnBO">
	     INSERT INTO EDI_FWB_DMN(TR_NO,DOC_LINE_NO,LENGTH,WIDHT,HEIGHT,PCS,RTD_AWB_VOL_CODE,
		 RTD_AWB_VOL_AMT,RTD_ULD_TYPE,RTD_ULD_NUM,RTD_ULD_CARR,RTD_SLAC,RTD_HARM_COMM_C, 
         RTD_ISO_CNTY_CODE,RTD_SERVICE_CODE,RTD_CONS_NOG,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE)
         VALUES
         (#trNo#,#docLineNo#,#length#,#widht#,#height#,#pcs#,#rtdAwbVolCode#,
		 #rtdAwbVolAmt#,#rtdUldType#,#rtdUldNum#,#rtdUldCarr#,#rtdSlac#,#rtdHarmCommC#,
		 #rtdIsoCntyCode#,#rtdServiceCode#,#rtdConsNog#,#crUserId#,to_date(#crDate#,'DDMONYY'),#lmUserId#,#lmDate#)
     </insert>
	<insert id="INSERT_FWB_OPI" parameterClass="cargo.cms.edi.bo.EdiFwbOthPartiBO">
		INSERT INTO EDI_FWB_OTH_PARTICIPANT (TR_NO, DOC_LINE_NO, OPI_NAME, OPI_APT_CODE, OPI_OFFICE_DESI, OPI_COMP_DESI, OPI_FILE_REF, OPI_PART_ID, OPI_PART_CODE, OPI_OTH_APT_CODE) 
		VALUES (#trNo#, #docLineNo#, #opiName#, #opiAptCode#, #opiOfficeDesi#, #opiCompDesi#, #opiFileRef#, #opiPartId#, #opiPartCode#, #opiOthAptCode#)
	</insert>

	<insert id="INSERT_FWB_OCI" parameterClass="cargo.cms.edi.bo.EdiFwbOciBO">
		INSERT INTO EDI_FWB_OCI (TR_NO, DOC_LINE_NO, ISO_CTRY_CODE, INFO_IDENTIFIER, SUPP_CUST_INFO,CUST_INFO_IDENTIFIER) 
		VALUES ( #trNo#, #docLineNo#, #isoCtryCode#, #infoIdentifier#, #suppCustInfo#,#customsInfoIdentifier#)
	</insert>

	 <select id="SELECT_EDI_FWB_CHR_RATE" resultClass="cargo.cms.edi.bo.EdiFwbChrRateBO" parameterClass="java.lang.String">  
       SELECT  EDI_FWB_CHR_RATE.TR_NO as trNo,
		 EDI_FWB_CHR_RATE.DOC_LINE_NO as docLineNo,
		 EDI_FWB_CHR_RATE.RATE_PCS as ratePcs,
		 EDI_FWB_CHR_RATE.RATE_GWT_CODE as rateGwtCode,
		 EDI_FWB_CHR_RATE.RATE_GWT as rateGwt,
		 EDI_FWB_CHR_RATE.RATE_CL_CODE as rateClCode,
		 EDI_FWB_CHR_RATE.RATE_COMM_N as rateCommN,
		 EDI_FWB_CHR_RATE.RATE_CHRGBLE_WT as rateChrgbleWt,
		 EDI_FWB_CHR_RATE.RATE_CHRG_RATE as rateChrgRate,
		 EDI_FWB_CHR_RATE.RATE_CHRG_A as rateChrgA,
		 EDI_FWB_CHR_RATE.RATE_GOODS_DATA_I as rateGoodsDataI,
		 EDI_FWB_CHR_RATE.RATE_GOODS_NATR as rateGoodsNatr,
		 EDI_FWB_CHR_RATE.RTD_AWB_WGT_UNIT as rtdAwbWgt,
		 EDI_FWB_CHR_RATE.RTD_AWB_WGT as rtdAwbWgt,
		 EDI_FWB_CHR_RATE.RTD_AWB_DIM_UNIT as rtdAwbDimUnit,
		 EDI_FWB_CHR_RATE.CR_USER_ID as crUserId,
		 EDI_FWB_CHR_RATE.CR_DATE as crDate,
		 EDI_FWB_CHR_RATE.LM_USER_ID as lmUser,
		 EDI_FWB_CHR_RATE.LM_DATE as lmDate
		 FROM EDI_FWB,EDI_FWB_CHR_RATE 
		 WHERE EDI_FWB_CHR_RATE.TR_NO=EDI_FWB.TR_NO
		 AND EDI_FWB.TR_NO = (SELECT MAX(A.TR_NO) FROM EDI_FWB A WHERE A.AWB_NO = #awbNo#)
	</select>
	
	<select id="SELECT_EDI_FWB_DMN" resultClass="cargo.cms.edi.bo.EdiFwbDmnBO" parameterClass="java.lang.String">
	     SELECT EDI_FWB_DMN.TR_NO as trNo,
	     EDI_FWB_DMN.DOC_LINE_NO as docLineNo,
	     EDI_FWB_DMN.LENGTH as length,
		 EDI_FWB_DMN.WIDHT as widht,
		 EDI_FWB_DMN.HEIGHT as height,
		 EDI_FWB_DMN.PCS as pcs,
		 EDI_FWB_DMN.RTD_AWB_VOL_CODE as rtdAwbVolCode,
		 LTRIM(TO_CHAR(EDI_FWB_DMN.RTD_AWB_VOL_AMT,'999999999990.00')) AS rtdAwbVolAmt, 
		 EDI_FWB_DMN.RTD_ULD_TYPE as rtdUldType,
		 EDI_FWB_DMN.RTD_ULD_NUM as rtdUldNum,
		 EDI_FWB_DMN.RTD_ULD_CARR as rtdUldCarr,
		 EDI_FWB_DMN.RTD_ULD_TYPE || EDI_FWB_DMN.RTD_ULD_NUM || EDI_FWB_DMN.RTD_ULD_CARR as rtdUldKey,
		 EDI_FWB_DMN.RTD_SLAC as rtdSlac,
		 EDI_FWB_DMN.RTD_HARM_COMM_C as rtdHarmCommC, 
         EDI_FWB_DMN.RTD_ISO_CNTY_CODE as rtdIsoCntyCode,
		 EDI_FWB_DMN.RTD_SERVICE_CODE as rtdServiceCode,
		 EDI_FWB_DMN.RTD_CONS_NOG as rtdConsNog,
		 EDI_FWB_DMN.CR_USER_ID as crUserId,
		 EDI_FWB_DMN.CR_DATE as crDate,
		 EDI_FWB_DMN.LM_USER_ID as lmUser,
		 EDI_FWB_DMN.LM_DATE as lmDate
		 FROM EDI_FWB,EDI_FWB_DMN
		 WHERE EDI_FWB_DMN.TR_NO=EDI_FWB.TR_NO
		 AND EDI_FWB.TR_NO = (SELECT MAX(A.TR_NO) FROM EDI_FWB A WHERE A.AWB_NO = #awbNo#) 
		 AND EDI_FWB_DMN.RTD_CONS_NOG IS NULL
		 AND NVL(EDI_FWB_DMN.RTD_AWB_DIM_UNIT,'XYZ') != 'NDA'
	</select>
	
	<select id="SELECT_EDI_FWB_OCI" resultClass="cargo.cms.edi.bo.EdiFwbOciBO" parameterClass="java.lang.String">
		SELECT TR_NO trNo, 
		DOC_LINE_NO docLineNo, 
		ISO_CTRY_CODE isoCtryCode,
		INFO_IDENTIFIER infoIdentifier, 
		SUPP_CUST_INFO suppCustInfo, 
		CUST_INFO_IDENTIFIER customsInfoIdentifier  
		FROM EDI_FWB_OCI
		WHERE TR_NO = TR_NO AND TR_NO = (SELECT MAX(TR_NO) FROM EDI_FWB  WHERE AWB_NO = #awbNo#)
	</select>

	<select id="SELECT_EDI_FWB_OTH_PARTICIPANT" resultClass="cargo.cms.edi.bo.EdiFwbOthPartiBO" parameterClass="java.lang.String">
		SELECT TR_NO trNo, 
		DOC_LINE_NO docLineNo, 
		OPI_NAME opiName, 
		OPI_APT_CODE opiAptCode, 
		OPI_OFFICE_DESI opiOfficeDesi, 
		OPI_COMP_DESI opiCompDesi, 
		OPI_FILE_REF opiFileRef, 
		OPI_PART_ID opiPartId, 
		OPI_PART_CODE opiPartCode, 
		OPI_OTH_APT_CODE opiOthAptCode
		FROM EDI_FWB_OTH_PARTICIPANT
		WHERE TR_NO = TR_NO AND TR_NO = (SELECT MAX(TR_NO) FROM EDI_FWB  WHERE AWB_NO = #awbNo#)
	</select>
		
	<update id="UPDATE_EDI_FWB_CHR_RATE" parameterClass="cargo.cms.edi.bo.EdiFwbChrRateBO">
	   UPDATE EDI_FWB_CHR_RATE SET
		 RATE_PCS =#ratePcs#,
		 RATE_GWT_CODE=#rateGwtCode#,
		 RATE_GWT =#rateGwt#,
		 RATE_CL_CODE=#rateClCode#,
		 RATE_COMM_N=#rateCommN#,
		 RATE_CHRGBLE_WT=#rateChrgbleWt#,
		 RATE_CHRG_RATE=#rateChrgRate#,
		 RATE_CHRG_A =#rateChrgA#,
		 RATE_GOODS_DATA_I = NVL(#rateGoodsDataI#,RATE_GOODS_DATA_I),
		 RATE_GOODS_NATR =#rateGoodsNatr#,
		 RTD_AWB_WGT_UNIT =#rtdAwbWgtUnit#,
		 RTD_AWB_WGT =#rtdAwbWgt#,
		 RTD_AWB_DIM_UNIT =#rtdAwbDimUnit#,
         LM_USER_ID=#lmUserId#,
	 	 LM_DATE =to_date(#lmDate#,'DDMONYY')
		 WHERE TR_NO=#trNo#
		 AND DOC_LINE_NO=#docLineNo#
	</update>
	
	<update id="UPDATE_EDI_FWB_DMN" parameterClass="cargo.cms.edi.bo.EdiFwbDmnBO">
	     UPDATE EDI_FWB_DMN SET
	     LENGTH =#length#,
		 WIDHT =#widht#,
		 HEIGHT =#height#,
		 PCS =#pcs#,
		 RTD_AWB_VOL_CODE=#rtdAwbVolCode#,
		 RTD_AWB_VOL_AMT=#rtdAwbVolAmt#,
		 RTD_ULD_TYPE=#rtdUldType#,
		 RTD_ULD_NUM=#rtdUldNum#,
		 RTD_ULD_CARR=#rtdUldCarr#,
		 RTD_SLAC =#rtdSlac#,
		 RTD_HARM_COMM_C =#rtdHarmCommC#,
		 RTD_ISO_CNTY_CODE =#rtdIsoCntyCode#,
		 RTD_SERVICE_CODE =#rtdServiceCode#,
		 RTD_CONS_NOG =#rtdConsNog#,
		 LM_USER_ID=#lmUserId#,
	 	 LM_DATE =to_date(#lmDate#,'DDMONYY')
		 WHERE TR_NO=#trNo#
		 AND DOC_LINE_NO=#docLineNo#
	</update>   
	
	<update id="UPDATE_EDI_FWB_OCI" parameterClass="cargo.cms.edi.bo.EdiFwbOciBO">
		UPDATE EDI_FWB_OCI SET  
		ISO_CTRY_CODE = #isoCtryCode#, 
		INFO_IDENTIFIER = #infoIdentifier#, 
		SUPP_CUST_INFO = #suppCustInfo#,
		CUST_INFO_IDENTIFIER  = #customsInfoIdentifier# 		
		WHERE TR_NO=#trNo#
		AND DOC_LINE_NO=#docLineNo#
	</update>

	<update id="UPDATE_EDI_FWB_OPI" parameterClass="cargo.cms.edi.bo.EdiFwbOthPartiBO">
		UPDATE EDI_FWB_OTH_PARTICIPANT SET  
		OPI_NAME = #opiName#, 
		OPI_APT_CODE = #opiAptCode#,  
		OPI_OFFICE_DESI = #opiOfficeDesi#,  
		OPI_COMP_DESI = #opiCompDesi#, 
		OPI_FILE_REF = #opiFileRef#, 
		OPI_PART_ID = #opiPartId#, 
		OPI_PART_CODE = #opiPartCode# ,
		OPI_OTH_APT_CODE = #opiOthAptCode#		
		WHERE TR_NO=#trNo#
		AND DOC_LINE_NO=#docLineNo#
	</update> 

    <delete id="delete_fwb_chr_rate_only" parameterClass="cargo.cms.edi.bo.EdiFwbChrRateBO">
	  DELETE EDI_FWB_CHR_RATE WHERE TR_NO=#trNo# AND DOC_LINE_NO=#docLineNo#
	</delete>
	
	<delete id="delete_fwb_dmn_only" parameterClass="cargo.cms.edi.bo.EdiFwbDmnBO">
   	 DELETE EDI_FWB_DMN WHERE TR_NO=#trNo# AND DOC_LINE_NO=#docLineNo#
	</delete>	  
	<select id="fetchSitaAddresses" resultClass="cargo.cms.common.ext.bo.EDIOutboundRecipentLogBO" parameterClass="java.lang.String">
		 SELECT  SITAADDR.SITA_ADDR AS sitaAddress
   			FROM MAST_AWB_PREFIX AWB,
  				CUST_COMPANY CUST        ,
  				CUST_AIRL_SITA_GRPDTL SITAADDR
  			WHERE AWB.CARR_CODE = CUST.CARR_CODE
				AND SITAADDR.CUST_NO  = CUST.CODE
				AND CUST.AIRLINE_YN   = 'Y'
				AND AWB.CODE          = #awbPrefix#
	</select>
	<insert id="INSERT_AWB" parameterClass="cargo.cms.edi.bo.EdiFwbBO">		 
	INSERT INTO AWB (
		AWB_NO,AWB_DATE,AWB_TYPE,PPK_TYPE,CARR_CODE,CAR_YN,MANIFEST_YN,BLDUP_COMPL_YN,AWB_CLOSED_YN,LOCKED_YN,MISSING_YN,MANIFEST_PCS,MANIFEST_WT,
		RTN_PCS,RTN_WT,CATALOG,CC_CODE,ORIG,DEST,PCS,WT,CONTENT,SPL_CODE1,SPL_CODE2,SPL_CODE3,SPL_CODE4,SPL_CODE5,SPL_CODE6,SPL_CODE7,SPL_CODE8,
		RCL_PCS,RCL_WT,RCL_PPK_PCS,RCL_PPK_WT,RCL_MIX_PCS,RCL_MIX_WT,RCL_BULK_PCS,RCL_BULK_WT,PMAN_PCS,PMAN_WT,NON_PMAN_PCS,NON_PMAN_WT,PMAN_BULK_PCS,
		PMAN_BULK_WT,PMAN_MIX_PCS,PMAN_MIX_WT,PMAN_PPK_PCS,PMAN_PPK_WT,BLDUP_BULK_PCS,BLDUP_BULK_WT,AGENT_CODE,SHPR_CODE,CR_USER_ID,CR_DATE,LM_USER_ID,
		LM_DATE,CON_CLOSED_YN,CON_CLOSED_DATE,CON_CLOSED_RMK,ACCEPT_MODE,AGENT_NAME,SHIPPER_NAME,OFFLOAD_BULK_PCS,OFFLOAD_BULK_WT,OFFLOAD_PPK_PCS,
		OFFLOAD_PPK_WT,AWB_RMK,SPL_CODE9)
	VALUES(
		#awbNo#,#awbDate#,'T',NULL,#fltCarr1#,'Y','N','N','N','N','N',0,0,0,0,'TG',NULL,#org#,#dest#,#pcs#,#wgt#,NULL,#SPH_SPL_CODE1#,#SPH_SPL_CODE2#,#SPH_SPL_CODE3#,
		#SPH_SPL_CODE4#,#SPH_SPL_CODE5#,#SPH_SPL_CODE6#,#SPH_SPL_CODE7#,#SPH_SPL_CODE8#,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,#crUserId#,SYSDATE,
		#lmUserId#,SYSDATE,'N',NULL,NULL,'LCA',#agentName#,#shprName#,0,0,0,0,NULL,#SPH_SPL_CODE9#)
	</insert>
	<insert id="INSERT_AWB_IMPORT" parameterClass="cargo.cms.edi.bo.EdiFwbBO">		 
	INSERT INTO AWB (
		AWB_NO,AWB_DATE,AWB_TYPE,PPK_TYPE,CARR_CODE,CAR_YN,MANIFEST_YN,BLDUP_COMPL_YN,AWB_CLOSED_YN,LOCKED_YN,MISSING_YN,MANIFEST_PCS,MANIFEST_WT,
		RTN_PCS,RTN_WT,CATALOG,CC_CODE,ORIG,DEST,PCS,WT,CONTENT,SPL_CODE1,SPL_CODE2,SPL_CODE3,SPL_CODE4,SPL_CODE5,SPL_CODE6,SPL_CODE7,SPL_CODE8,
		RCL_PCS,RCL_WT,RCL_PPK_PCS,RCL_PPK_WT,RCL_MIX_PCS,RCL_MIX_WT,RCL_BULK_PCS,RCL_BULK_WT,PMAN_PCS,PMAN_WT,NON_PMAN_PCS,NON_PMAN_WT,PMAN_BULK_PCS,
		PMAN_BULK_WT,PMAN_MIX_PCS,PMAN_MIX_WT,PMAN_PPK_PCS,PMAN_PPK_WT,BLDUP_BULK_PCS,BLDUP_BULK_WT,AGENT_CODE,SHPR_CODE,CR_USER_ID,CR_DATE,LM_USER_ID,
		LM_DATE,CON_CLOSED_YN,CON_CLOSED_DATE,CON_CLOSED_RMK,ACCEPT_MODE,AGENT_NAME,SHIPPER_NAME,OFFLOAD_BULK_PCS,OFFLOAD_BULK_WT,OFFLOAD_PPK_PCS,
		OFFLOAD_PPK_WT,AWB_RMK,SPL_CODE9)
	VALUES(
		#awbNo#,#awbDate#,'I',NULL,#rtgDesCarr#,'N','N','N','N','N','N',0,0,0,0,'IG',NULL,#org#,#dest#,#pcs#,#wgt#,NULL,#SPH_SPL_CODE1#,#SPH_SPL_CODE2#,#SPH_SPL_CODE3#,
		#SPH_SPL_CODE4#,#SPH_SPL_CODE5#,#SPH_SPL_CODE6#,#SPH_SPL_CODE7#,#SPH_SPL_CODE8#,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,#crUserId#,SYSDATE,
		#lmUserId#,SYSDATE,'N',NULL,NULL,'LCA',#agentName#,#shprName#,0,0,0,0,NULL,#SPH_SPL_CODE9#)
	</insert>
	 <insert id="INSERT_EXP_CAR" parameterClass="cargo.cms.edi.bo.EdiFwbBO">		 
	INSERT INTO EXP_CAR(
		AWB_NO,AWB_DATE,AWB_PRFX,ACCEPT_MODE,HANDLER_CODE,CATALOG,CARR_CODE,TRNS_CARR_CODE,ORIGIN,DEST,PCS,WT,CONTENT,SHIPPER_CODE,
		AGENT_CODE,SPL_CODE1,SPL_CODE2,SPL_CODE3,SPL_CODE4,SPL_CODE5,SPL_CODE6,SPL_CODE7,SPL_CODE8,RMK,SECURITY_OPTION,EXEMPTION_CODE,
		SEC_AGENT_CODE,SEC_RMK,SEC_RC_CODE,SEC_KC_CODE,SHPR_NAME,AGENT_NAME,EDI_SHPR_ADDR_1,EDI_SHPR_ADDR_2,EDI_SHPR_ADDR_3,EDI_SHPR_ADDR_4,
		EDI_SHPR_ADDR_5,EDI_SHPR_PLACE,EDI_SHPR_CTRY_CODE,EDI_SHPR_PIN_CODE,EDI_CSGNE_NAME,EDI_CSGNE_ADDR_1,EDI_CSGNE_ADDR_2,EDI_CSGNE_ADDR_3,
		EDI_CSGNE_ADDR_4,EDI_CSGNE_ADDR_5,EDI_CSGNE_PLACE,EDI_CSGNE_CTRY_CODE,EDI_CSGNE_PIN_CODE,EDI_AGENT_ADDR_1,EDI_AGENT_ADDR_2,EDI_AGENT_ADDR_3,
		EDI_AGENT_ADDR_4,EDI_AGENT_ADDR_5,EDI_AGENT_PLACE,EDI_AGENT_CTRY_CODE,EDI_AGENT_PIN_CODE,DECLN_CURR_CODE,DECLN_CTM_VALN,ACCS_CARGO_HDLR,
		ACCS_REL_IND,ACCS_RMK,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,SEC_AGENT_NAME,DHL_DIRECT_TOW,SPL_CODE9,SHPR_ADDR,SHPR_ADDR2,SHPR_ADDR3,SHPR_ADDR4,
		SHPR_PLACE,SHPR_CTRY_CODE,SHPR_STATE_PROVINCE,SHPR_PIN_CODE,CSGNE_NAME,CSGNE_ADDR,CSGNE_ADDR2,CSGNE_ADDR3,CSGNE_ADDR4,CSGNE_PLACE,CSGNE_CTRY_CODE,
		CSGNE_STATE_PROVINCE,CSGNE_PIN_CODE,WH_RMK,AIRL_RMK,SLAC,LOCK_IND,INTELLIGENT_CHK_IND)
	VALUES(
		#awbNo#,#awbDate#,SUBSTR(#awbNo#,0,3),'A','CPCT','TG',#rtgDesCarr#,NULL,#org#,#dest#,#pcs#,#wgt#,#expContent#,NULL,
		NULL,#SPH_SPL_CODE1#,#SPH_SPL_CODE2#,#SPH_SPL_CODE3#,#SPH_SPL_CODE4#,#SPH_SPL_CODE5#,#SPH_SPL_CODE6#,#SPH_SPL_CODE7#,#SPH_SPL_CODE8#,
		NULL,NULL,NULL,NULL,NULL,NULL,NULL,
		#shprName#,#agentName#,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,
		NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,#crUserId#,SYSDATE,#lmUserId#,SYSDATE,NULL,'N',#SPH_SPL_CODE9#,#shprAddr#,
		NULL,NULL,NULL,
		#shprPlace#,#shprCtryCode#,#shprStateProvince#,#shprPinCode#,#csgneName#,#csgneAddr#,NULL,NULL,NULL,#csgnePlace#,
		#csgneCtryCode#,#csgneStateProvince#,#csgnePinCode#,NULL,NULL,NULL,'N',NULL
	)
	</insert>
	<!--
	==============================================================================================
		END OF Maintain FWB QUERIES
	==============================================================================================
	-->	
	<!-- 
	==============================================================================================
		START OF Maintain FHL and Enquire FHL Log QUERIES - Varadaraj Muni 14-OCT-2010
	==============================================================================================
	-->
	<!-- Create FHL Starts -->
	<select id="fetchCarrierCodeForAwb" parameterClass="java.util.HashMap" resultClass="java.lang.String">
			SELECT NVL(CARR_CODE, (SELECT CARR_CODE FROM MAST_AWB_PREFIX	WHERE CODE = SUBSTR(#awbNo#, 0, 3) AND DEF_YN = 'Y'))
			AS CARR_CODE FROM AWB where AWB_NO = #awbNo# AND AWB_DATE = to_date(#awbDate#,'DDMONYY')
		</select>		
		<select id="checkAwbNoExtExists" resultClass="java.lang.String" parameterClass="cargo.cms.edi.bo.EdiFhlBO">
	<!--As told by XXY select tr_no from edi_fhl a where a.awb_no = #awbNo# and rownum = 1 and si_type='ISACS' -->
			SELECT tr_no   FROM edi_fhl a  WHERE a.awb_no = #AWB_NO#  and 
			AWB_DATE = to_date(#AWB_DATE#,'DDMONYY')AND rownum = 1
		</select>		
		<select id="checkAwbNoFhlExists" parameterClass="java.util.HashMap" resultClass="java.lang.String">
	<!-- As told by XXY 	select tr_no from edi_fhl a where a.awb_no = #awbNo# and rownum = 1 and si_type='S' -->
			select tr_no  from edi_fhl a  where a.awb_no = #awbNo#  and a.awb_date = #awbDate# and rownum = 1

		</select>

		<select id="checkAwbNoIntExists" parameterClass="java.lang.String" resultClass="java.lang.String">
			select nvl(count(*),0) from awb a where a.awb_no = #awbNo# and a.awb_type='E' and a.awb_closed_yn='N'
		</select>
		<select id="checkAwbDateExists" parameterClass="java.lang.String" resultClass="java.lang.String">
	 		SELECT to_char(A.AWB_DATE,'DDMONYY') FROM AWB A WHERE AWB_NO = #awbNo# AND AWB_CLOSED_YN = 'N' AND ROWNUM = 1
		</select>

		<select id="fetchFromAwb" parameterClass="java.lang.String" resultClass="cargo.cms.edi.bo.EdiFhlBO">
			select awb_no,orig as AWB_ORG,dest as AWB_DEST,pcs AWB_PCS,wt as AWB_WT from awb a where a.awb_no = #awbNo# and a.awb_type='E' and 
			a.awb_closed_yn='N'
		</select>
		<select id="getAwbDateInAWB" parameterClass="cargo.cms.edi.bo.EdiFhlBO" resultClass="java.lang.String">
			select awb_type as awbType from awb a where a.awb_no = #AWB_NO# and a.awb_date=#AWB_DATE# and 
			a.awb_closed_yn='N' and rownum=1
		</select>
		<select id="checkHawbNoExists" parameterClass="java.util.HashMap" resultClass="java.lang.Integer" >	
			select count(*) from edi_fhl_hawb a where a.HAWB_NO=#HAWB_NO# AND a.tr_no in (select tr_no from 
				edi_fhl where awb_no=#AWB_NO# and awb_date = PKG_COMMON.GET_AWB_DATE(#AWB_NO#,''))
		</select>
		
		<select id="checkShipmentInd" parameterClass="cargo.cms.edi.bo.EdiFhlBO" resultClass="java.lang.String">	
			SELECT A.IMP_EXP_IND
			FROM EDI_FHL A 
			WHERE A.AWB_NO = #AWB_NO# AND A.FHL_OWNER = (SELECT CUST_NO FROM SEC_USER WHERE CODE = #LM_USER_ID#) AND ROWNUM = 1
			and exists (select null from awb b WHERE b.AWB_NO = a.AWB_NO and b.awb_type = nvl(a.IMP_EXP_IND, b.awb_type) AND AWB_CLOSED_YN = 'N' )			
		</select>	
		
		<select id="fetchAwbOrgDestFromFwb" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
			SELECT ORG, DES FROM EDI_FWB WHERE AWB_NO=#awbNo# AND AWB_DATE=TO_DATE(#awbDate#, 'DDMONYY')
		</select>
		
		<insert id="insertEdiFhl" parameterClass="cargo.cms.edi.bo.EdiFhlBO">
			INSERT INTO EDI_FHL(TR_NO,MSG_SEQ_NUM,MSG_VER,SI_TYPE,COPY_NO,AWB_NO,AWB_DATE,AWB_ORG,AWB_DEST,AWB_PCS,
			AWB_WT,AWB_WT_CODE,PART_SHMPT_YN,TOTAL_COUNT,FHL_STATUS,SUCCESS_MSGS,LM_USER_ID,LM_DATE,LM_VER,
			FLT_CARR,FLT_NO,FLT_ETA_DATE,FLT_ETA_TIME,FLT_DATE,FLT_TYPE,HTS_COMM_CODE1,HTS_COMM_CODE2,
			HTS_COMM_CODE3,HTS_COMM_CODE4,HTS_COMM_CODE5,HTS_COMM_CODE6,HTS_COMM_CODE7,HTS_COMM_CODE8,HTS_COMM_CODE9,
			FHL_OWNER,IMP_EXP_IND,CR_DATE,CR_USER_ID, TR_TYPE, GLS_IND)
			VALUES(#TR_NO#,#MSG_SEQ_NUM#,#MSG_VER#,#SI_TYPE#,#COPY_NO#,#AWB_NO#,
			to_date(#AWB_DATE#,'DDMONYY')
			,NVL(#AWB_ORG#,'HKG'),
			NVL(#AWB_DEST#,'HKG'),NVL(#AWB_PCS#,0),NVL(#AWB_WT#,0),NVL(#AWB_WT_CODE#,'K'),#PART_SHMPT_YN#,
			#TOTAL_COUNT#,#FHL_STATUS#,#SUCCESS_MSGS#,#LM_USER_ID#,to_date(#LM_DATE#,'dd/mm/yyyy hh24:mi:ss'),
			#LM_VER#,#FLT_CARR#,#FLT_NO#,
			#FLT_ETA_DATE#,#FLT_ETA_TIME#,#FLT_DATE#,#FLT_TYPE#,
			#HTS_COMM_CODE1#,#HTS_COMM_CODE2#,#HTS_COMM_CODE3#,#HTS_COMM_CODE4#,#HTS_COMM_CODE5#,#HTS_COMM_CODE6#,
			#HTS_COMM_CODE7#,#HTS_COMM_CODE8#,#HTS_COMM_CODE9#,#FHL_OWNER#,#IMP_EXP_IND#,to_date(#CR_DATE#,'dd/mm/yyyy hh24:mi:ss'),
			#CR_USER_ID#, 'REFHL', #glsInd#)
		</insert>
		<select id = "isHawbDupl" parameterClass="cargo.cms.edi.bo.EdiFhlHawb" resultClass="java.lang.String">
			select count(TR_NO) from EDI_FHL_HAWB where TR_NO =#TR_NO# and HAWB_NO = #HAWB_NO#
		</select>
		
		<insert id="insertEdiFhlHawb" parameterClass="cargo.cms.edi.bo.EdiFhlHawb">
			INSERT INTO EDI_FHL_HAWB( TR_NO,DOC_LINE_NO,HAWB_NO,HAWB_ORG,HAWB_DEST ,HAWB_PCS,HAWB_NET_WT,HAWB_WT_CODE,
			  FREE_TEXT_DESC1, FREE_TEXT_DESC2,FREE_TEXT_DESC3,FREE_TEXT_DESC4,FREE_TEXT_DESC5,FREE_TEXT_DESC6,
			  FREE_TEXT_DESC7,FREE_TEXT_DESC8, FREE_TEXT_DESC9,SPL_CODE1,SPL_CODE2,SPL_CODE3,SPL_CODE4,SPL_CODE5,
			  SPL_CODE6, SPL_CODE7,SPL_CODE8,SPL_CODE9,MANIFEST_DESC,SHPR_NAME,SHPR_ADD1,SHPR_ADD2,SHPR_ADD3,SHPR_ADD4,SHPR_ADD5,
  			  SHPR_PLACE,SHPR_CTRY_CODE,SHPR_STATE_PROVINCE,SHPR_PIN_CODE,SHPR_CONT_ID,SHPR_CONT_N,CSGNE_NAME,CSGNE_ADD1,
			  CSGNE_ADD2,CSGNE_ADD3,CSGNE_ADD4,CSGNE_ADD5,CSGNE_PLACE,CSGNE_CTRY_CODE,CSGNE_STATE_PROVINCE,CSGNE_PIN_CODE,
			  CSGNE_CONT_ID,CSGNE_CONT_N,NFY_NAME,NFY_ADD1,NFY_ADD2,NFY_ADD3,NFY_ADD4,NFY_ADD5,NFY_PLACE,NFY_CTRY_CODE,
			  NFY_PIN_CODE, NFY_CONT_ID,NFY_CONT_N,NFY_LICENSE1,NFY_LICENSE2,NFY_LICENSE3,NFY_LICENSE4,NFY_LICENSE5,
			  NFY_PERMIT1,NFY_PERMIT2,NFY_PERMIT3,NFY_PERMIT4,NFY_PERMIT5,DECLN_CURR_CODE,DECLN_WT_VALN_PPCC_I,
			  DECLN_OTH_CHRG_PPCC_I, DECLN_CARR, DECLN_CTM,DECLN_INSURCE,DECLN_FREE_TEXT,ACCS_I,SOURCE,RMK_CTM,FHL_OWNER,
			  LM_USER_ID,LM_DATE,LM_VER,RMK,NFY_LICENSE6,NFY_LICENSE7,NFY_LICENSE8,NFY_LICENSE9,NFY_PERMIT6,NFY_PERMIT7,
			  NFY_PERMIT8,NFY_PERMIT9,HBS_SLAC,HTS_COMM_CODE1,HTS_COMM_CODE2,HTS_COMM_CODE3,HTS_COMM_CODE4,HTS_COMM_CODE5,
			  HTS_COMM_CODE6,HTS_COMM_CODE7, HTS_COMM_CODE8,HTS_COMM_CODE9,CR_USER_ID,CR_DATE,CHARGE_AGENT,IMG_TRANS_ID,NFY_STATE_PROVINCE) 
			  VALUES(
				  #TR_NO#,#DOC_LINE_NO#,upper(#HAWB_NO#),upper(#HAWB_ORG#),upper(#HAWB_DEST#),#HAWB_PCS#,#HAWB_NET_WT#,upper(#HAWB_WT_CODE#),upper(#FREE_TEXT_DESC1#),
				  upper(#FREE_TEXT_DESC2#),upper(#FREE_TEXT_DESC3#),upper(#FREE_TEXT_DESC4#),upper(#FREE_TEXT_DESC5#),upper(#FREE_TEXT_DESC6#),upper(#FREE_TEXT_DESC7#),
				  upper(#FREE_TEXT_DESC8#),upper(#FREE_TEXT_DESC9#),upper(#SPL_CODE1#),upper(#SPL_CODE2#),upper(#SPL_CODE3#),upper(#SPL_CODE4#),upper(#SPL_CODE5#),upper(#SPL_CODE6#),
				  upper(#SPL_CODE7#),upper(#SPL_CODE8#),upper(#SPL_CODE9#),upper(#MANIFEST_DESC#),upper(#SHPR_NAME#),upper(#SHPR_ADD1#),upper(#SHPR_ADD2#),upper(#SHPR_ADD3#),upper(#SHPR_ADD4#),
				  upper(#SHPR_ADD5#),upper( #SHPR_PLACE#),upper(#SHPR_CTRY_CODE#),upper( #SHPR_STATE_PROVINCE#),upper(#SHPR_PIN_CODE#),upper(#SHPR_CONT_ID#),
				  upper(#SHPR_CONT_N#),upper(#CSGNE_NAME#),upper(#CSGNE_ADD1#),upper( #CSGNE_ADD2#),upper(#CSGNE_ADD3#),upper(#CSGNE_ADD4#),upper(#CSGNE_ADD5#),upper(#CSGNE_PLACE#),
				  upper(#CSGNE_CTRY_CODE#),upper(#CSGNE_STATE_PROVINCE#),upper(#CSGNE_PIN_CODE#),upper(#CSGNE_CONT_ID#),upper(#CSGNE_CONT_N#),upper(#NFY_NAME#),
				  upper(#NFY_ADD1#),upper( #NFY_ADD2#),upper(#NFY_ADD3#),upper(#NFY_ADD4#),upper(#NFY_ADD5#),upper(#NFY_PLACE#),upper(#NFY_CTRY_CODE#),upper(#NFY_PIN_CODE#),
				  upper(#NFY_CONT_ID#),upper(#NFY_CONT_N#),upper(#NFY_LICENSE1#),upper(#NFY_LICENSE2#),upper(#NFY_LICENSE3#),upper(#NFY_LICENSE4#),upper(#NFY_LICENSE5#),
				  upper(#NFY_PERMIT1#),upper(#NFY_PERMIT2#),upper(#NFY_PERMIT3#),upper(#NFY_PERMIT4#),upper(#NFY_PERMIT5#),upper(#DECLN_CURR_CODE#),upper(#DECLN_WT_VALN_PPCC_I#),
				  upper(#DECLN_OTH_CHRG_PPCC_I#),upper(#DECLN_CARR#),upper(#DECLN_CTM#),upper(#DECLN_INSURCE#),upper(#DECLN_FREE_TEXT#),upper(#ACCS_I#),upper(#SOURCE#),
				  upper(#RMK_CTM#),upper(#FHL_OWNER#),upper(#LM_USER_ID#),to_date(#LM_DATE#,'dd/mm/yyyy hh24:mi:ss'),#LM_VER#,upper(#RMK#),upper(#NFY_LICENSE6#),upper(#NFY_LICENSE7#),upper(#NFY_LICENSE8# ),
				  upper(#NFY_LICENSE9#),upper(#NFY_PERMIT6#),upper(#NFY_PERMIT7#),upper(#NFY_PERMIT8#),upper(#NFY_PERMIT9#),upper(#HBS_SLAC#),upper(#HTS_COMM_CODE1#),
				  upper(#HTS_COMM_CODE2#),upper(#HTS_COMM_CODE3#),upper(#HTS_COMM_CODE4#),upper(#HTS_COMM_CODE5#),upper(#HTS_COMM_CODE6#),upper(#HTS_COMM_CODE7#),
				  upper(#HTS_COMM_CODE8#),upper(#HTS_COMM_CODE9#),upper(#CR_USER_ID#),to_date(#CR_DATE#,'dd/mm/yyyy hh24:mi:ss'),upper(#chargeAgentIndicator#),upper(#transactionId#),upper(#NFY_STATE_PROVINCE#))
		</insert>
		<insert id="insertEdiFhlContact" parameterClass="cargo.cms.edi.bo.EdiFhlContact" >
			INSERT INTO EDI_FHL_CONTACT (TR_NO,DOC_LINE_NO,CONT_ID,CCNT_NAME,CONT_TYPE,LM_USER_ID,
			LM_DATE,LM_VER,HDOC_LINE_NO,CR_USER_ID,CR_DATE ) 
			VALUES ( #TR_NO#,#DOC_LINE_NO#,#CONT_ID#, #CCNT_NAME#,#CONT_TYPE#,#LM_USER_ID#,
    		to_date(#LM_DATE#,'dd/mm/yyyy hh24:mi:ss'),#LM_VER#,#HDOC_LINE_NO#,#CR_USER_ID#,
			to_date(#CR_DATE#,'dd/mm/yyyy hh24:mi:ss'))
		</insert>
		<insert id="insertEdiFhlLicPer" parameterClass="cargo.cms.edi.bo.EdiFhlHawbLicPer">
			INSERT INTO EDI_FHL_HAWB_LIC_PER(TR_NO,DOC_LINE_NO,HDOC_LINE_NO,LIC_PER_TYPE,LIC_PER_NO,CR_USER_ID,CR_DATE,
			LM_USER_ID,LM_DATE) VALUES(#TR_NO#, #DOC_LINE_NO#,#HDOC_LINE_NO#,#LIC_PER_TYPE#,#LIC_PER_NO#,#CR_USER_ID#,
			to_date(#CR_DATE#,'dd/mm/yyyy hh24:mi:ss'),#LM_USER_ID#,to_date(#LM_DATE#,'dd/mm/yyyy hh24:mi:ss'))
		</insert>
		
		<!--OCI Line in FHL-->
		<insert id="insertEdiFhlOci" parameterClass="cargo.cms.edi.bo.EdiFhlOciBO">
			INSERT INTO EDI_FHL_HAWB_OCI
			  (
			    TR_NO,
			    DOC_LINE_NO,
			    HDOC_LINE_NO,
			    ISO_CTRY_CODE, 
			    INFO_IDENTIFIER,
			    CUSTOMS_INFO_IDENTIFIER,
			    SUPP_CUSTOMS_INFO,
			    CR_USER_ID,
			    CR_DATE,
			    LM_USER_ID,
			    LM_DATE
			  )
			  VALUES
			  (
			    #trNo#,
			    #docLineNo#,
			    #hDocLineNo#,
			    #isoCtryCode#,
			    #infoIdentifier#,
			    #customsInfoIdentifier#,
			    #suppCustInfo#,
			    #crUserId#,
			    SYSDATE,
			    #lmUserId#,
			    SYSDATE
			  )
		</insert>
	<!-- Create FHL Ends -->
	<!-- Amend FHL Starts -->
<select id="fetchawbDtl" parameterClass="cargo.cms.edi.bo.EdiFhlBO" resultClass="cargo.cms.edi.bo.EdiFhlBO">
 	   SELECT A.AWB_NO AS AWB_NO,
 	   DECODE(D.PCS,null,(A.AWB_PCS||'/'||TRIM(TO_CHAR(A.AWB_WT,'99999990.00'))),(D.PCS||'/'||TRIM(TO_CHAR(D.WT,'99999990.00'))))
        AS tmpaPcsWt,TO_CHAR(A.LM_DATE , 'DDMONYY HH24:MI:SS') AS LM_DATE,
       SUM(B.HAWB_PCS)||'/'||TRIM(TO_CHAR(sum(HAWB_NET_WT),'99999990.00')) AS totHawbpcwt, COUNT(B.HAWB_NO) as hawbCount
       FROM EDI_FHL A, EDI_FHL_HAWB B,CUST_COMPANY C,AWB D  WHERE A.TR_NO=B.TR_NO 
       AND A.AWB_NO =#AWB_NO# and A.AWB_DATE = #AWB_DATE#
       AND B.FHL_OWNER = C.CODE(+)  
       AND D.awb_no  = A.awb_no(+) 
       and D.AWB_DATE=A.AWB_DATE(+) 
       AND
       (B.FHL_OWNER =(SELECT CUST_NO FROM SEC_USER WHERE CODE = #FHL_OWNER#) OR B.FHL_OWNER = #FHL_OWNER#)
       GROUP BY A.AWB_NO, DECODE(D.PCS,null,(A.AWB_PCS||'/'||TRIM(TO_CHAR(A.AWB_WT,'99999990.00'))),(D.PCS||'/'||TRIM(TO_CHAR(D.WT,'99999990.00')))), A.LM_DATE
	</select>
	<select id="fetchHawbNoCnt" parameterClass="cargo.cms.edi.bo.EdiFhlBO" resultClass="java.lang.String">		
		SELECT COUNT(B.HAWB_NO)CNT FROM
				(SELECT SI_TYPE,FHL_OWNER,TR_NO FROM EDI_FHL 
				LEFT JOIN AWB 
				ON EDI_FHL.AWB_NO = AWB.AWB_NO AND EDI_FHL.AWB_DATE = AWB.AWB_DATE
				WHERE EDI_FHL.AWB_NO=#AWB_NO# and EDI_FHL.awb_date = to_date(#AWB_DATE#,'DDMONYY')		 				
				) A,
				EDI_FHL_HAWB B
				WHERE A.TR_NO=B.TR_NO
	</select>

	<select id="fetchAmendAwbList" parameterClass="cargo.cms.edi.bo.EdiFhlBO" resultClass="cargo.cms.edi.bo.EdiFhlHawb">             
       SELECT  A.TR_NO,B.DOC_LINE_NO,B.HAWB_NO,B.MANIFEST_DESC,B.HAWB_ORG,B.HAWB_DEST,
       B.HAWB_PCS||'/'||TRIM(TO_CHAR(B.HAWB_NET_WT,'99999990.0')) AS tmpPcsWt,
	   B.HAWB_PCS AS HAWB_PCS,TRIM(TO_CHAR(B.HAWB_NET_WT,'99999990.0')) AS HAWB_NET_WT,
       DECODE(B.SOURCE,'CMS','WOS',B.SOURCE) AS tmpSrcDispName,	
       case when B.FHL_OWNER is null then
       		(select c.CODE_DESC from CUST_COMPANY C
       			where C.code = (SELECT S.CUST_NO FROM SEC_USER S WHERE S.CODE = B.CR_USER_ID))
       else (select c.CODE_DESC from CUST_COMPANY C
       			where (C.code = (SELECT S.CUST_NO FROM SEC_USER S WHERE S.CODE = B.FHL_OWNER)
       					or C.code = B.FHL_OWNER))
       end AS tmpCustName,
	   B.LM_USER_ID AS LM_USER_ID,TO_CHAR(B.LM_DATE,'DDMONYY HH24:MI') AS LM_DATE, CHARGE_AGENT as chargeAgentIndicator,
	   SHPR_NAME,CSGNE_NAME , #AWB_DATE# AS AWB_DATE,	   
       FUN_GET_RCSTYPE(#AWB_NO#,#AWB_DATE#,B.HAWB_NO) AS ACASCode
	   FROM 
     EDI_FHL A
     JOIN EDI_FHL_HAWB B ON B.TR_NO = A.TR_NO
     WHERE A.TR_NO=B.TR_NO 
       AND A.AWB_NO = #AWB_NO# AND A.AWB_DATE = to_date(#AWB_DATE#,'DDMONYY') 
       AND B.HAWB_NO =NVL(#tmpHawbNo#,B.HAWB_NO)  
       ORDER BY HAWB_NO  
	</select>

	<select id="checkFHLAWBExistsOrNot" parameterClass="cargo.cms.edi.bo.EdiFhlBO" resultClass="java.lang.Integer">
	select count(*) from edi_fhl_hawb a where a.tr_no in (select tr_no from 
				edi_fhl where awb_no=#AWB_NO# and awb_date=#AWB_DATE#)	
	</select>
	<delete id="deleteFHLAwb" parameterClass="cargo.cms.edi.bo.EdiFhlBO">
	delete from edi_fhl where awb_no=#AWB_NO# and awb_date=#AWB_DATE#
	</delete>

	<select id="fetchAmendFHLDetails" parameterClass="cargo.cms.edi.bo.EdiFhlHawb" resultClass="cargo.cms.edi.bo.EdiFhlBO">
		SELECT TR_NO,MSG_SEQ_NUM,MSG_VER ,SI_TYPE ,COPY_NO ,AWB_NO,substr(AWB_NO,0,3) as tmpAwbNoPfx,
		DECODE(AWB_WT_CODE, 'K', 'KGM', 'L', 'LBS') as AWB_WT_CODE, FLT_CARR as FLT_CARR, FLT_NO as FLT_NO, 
		to_CHAR(FLT_DATE, 'DD/MM/YYYY') as FLT_DATE, to_CHAR(transmissiondate, 'DD/MM/YYYY')as transmissionDate, to_CHAR(transmissiontime) as transmissionTime,
		substr(AWB_NO,4) as tmpAwbNoSfx, TO_CHAR(AWB_DATE,'DDMONYY') AWB_DATE,AWB_ORG ,AWB_DEST,AWB_PCS ,AWB_WT,AWB_WT_CODE,
		PART_SHMPT_YN,TOTAL_COUNT,FHL_STATUS,SUCCESS_MSGS,LM_USER_ID,LM_DATE,LM_VER,FLT_CARR,FLT_NO,FLT_ETA_DATE,
		FLT_ETA_TIME,FLT_DATE,FLT_TYPE,HBS_SLAC,HTS_COMM_CODE1,HTS_COMM_CODE2,HTS_COMM_CODE3,HTS_COMM_CODE4,HTS_COMM_CODE5,
		HTS_COMM_CODE6,HTS_COMM_CODE7,HTS_COMM_CODE8,HTS_COMM_CODE9 ,FHL_OWNER, IMP_EXP_IND FROM EDI_FHL WHERE TR_NO = #TR_NO#
	</select>
	<select id="fetchSTA"  parameterClass="cargo.cms.edi.bo.EdiFhlBO"  resultClass="cargo.cms.edi.bo.EdiFhlBO">
		 SELECT TO_CHAR(SCH_DATE,'DDMONYY') schDate,ltrim(SUBSTR(TRIM(TO_CHAR(SCH_TIME,'0000')),0,2)|| ':'|| SUBSTR(TRIM(TO_CHAR(SCH_TIME,'0000')),3,4), ':') as schTime
	     from FLT_OPR
	     WHERE FLT_NO = #FLT_NO#
		 AND CARR_CODE   = upper(#FLT_CARR#)
	     AND SCH_DATE = TO_DATE(#FLT_DATE#,'DDMONYY')
	     AND FLT_TYPE='A'
     </select>

		<select id="fetchAmendHawbDetails" parameterClass="cargo.cms.edi.bo.EdiFhlHawb" resultClass="cargo.cms.edi.bo.EdiFhlHawb" >
<!-- As told by XXY	    SELECT C.*,D.tmpSrcDispName,D.tmpCustName,D.LM_USER_ID 
		FROM 
        (SELECT TR_NO,DOC_LINE_NO,HAWB_NO,HAWB_ORG,HAWB_DEST,
		HAWB_PCS,HAWB_NET_WT,HAWB_WT_CODE,FREE_TEXT_DESC1,
		FREE_TEXT_DESC2,FREE_TEXT_DESC3,FREE_TEXT_DESC4,FREE_TEXT_DESC5,FREE_TEXT_DESC6,FREE_TEXT_DESC7,FREE_TEXT_DESC8,
	    FREE_TEXT_DESC9,SPL_CODE1,SPL_CODE2,SPL_CODE3,SPL_CODE4,SPL_CODE5,SPL_CODE6,SPL_CODE7,SPL_CODE8,MANIFEST_DESC,
		SHPR_NAME,SHPR_ADD1,SHPR_ADD2,SHPR_ADD3,SHPR_ADD4,SHPR_ADD5,SHPR_PLACE,SHPR_CTRY_CODE,SHPR_STATE_PROVINCE,
		SHPR_PIN_CODE,SHPR_CONT_ID ,SHPR_CONT_N,CSGNE_NAME,CSGNE_ADD1,CSGNE_ADD2,CSGNE_ADD3,CSGNE_ADD4,CSGNE_ADD5,
	    CSGNE_PLACE,CSGNE_CTRY_CODE,CSGNE_STATE_PROVINCE,CSGNE_PIN_CODE,CSGNE_CONT_ID,CSGNE_CONT_N,NFY_NAME ,
	    NFY_ADD1,NFY_ADD2,NFY_ADD3,NFY_ADD4,NFY_ADD5,NFY_PLACE,NFY_CTRY_CODE,NFY_PIN_CODE,NFY_CONT_ID,NFY_CONT_N,
	    NFY_LICENSE1,NFY_LICENSE2,NFY_LICENSE3,NFY_LICENSE4,NFY_LICENSE5,NFY_PERMIT1 ,NFY_PERMIT2 ,NFY_PERMIT3 ,
	    NFY_PERMIT4 ,NFY_PERMIT5 ,DECLN_CURR_CODE ,DECLN_WT_VALN_PPCC_I,DECLN_OTH_CHRG_PPCC_I,DECLN_CARR,DECLN_CTM,
	    DECLN_INSURCE,DECLN_FREE_TEXT,ACCS_I,SOURCE,RMK_CTM,FHL_OWNER,LM_USER_ID,LM_DATE,LM_VER ,RMK,NFY_LICENSE6,
	    NFY_LICENSE7,NFY_LICENSE8,NFY_LICENSE9,NFY_PERMIT6 ,NFY_PERMIT7 ,NFY_PERMIT8 ,NFY_PERMIT9 ,HBS_SLAC,HTS_COMM_CODE1,
		HTS_COMM_CODE2,HTS_COMM_CODE3,HTS_COMM_CODE4,HTS_COMM_CODE5,HTS_COMM_CODE6,HTS_COMM_CODE7,HTS_COMM_CODE8,
	    HTS_COMM_CODE9 FROM EDI_FHL_HAWB WHERE TR_NO = #TR_NO# AND HAWB_NO=#HAWB_NO#) C,
		(SELECT TR_NO,
	     DECODE(A.SI_TYPE,'AIMS','AIMS','ISACS','AIMS','FHL_I','SITA','TX_HM','TRAXON','S','CMS') AS tmpSrcDispName,
	     DECODE(A.SI_TYPE,'S',NULL,B.CODE_DESC) AS tmpCustName,
		 A.LM_USER_ID AS LM_USER_ID
	     FROM EDI_FHL A,
		      CUST_COMPANY B
	     WHERE A.FHL_OWNER = B.CODE(+)
		   AND A.TR_NO = #TR_NO#) D  
		 WHERE C.TR_NO = D.TR_NO -->
		 
	SELECT TR_NO,DOC_LINE_NO,HAWB_NO,HAWB_ORG,HAWB_DEST,
		DECODE(HAWB_WT_CODE, 'K', 'KGM', 'L', 'LBS') as HAWB_WT_CODE, NATURE_OF_GOODS, DECLN_INSURCE,
		HAWB_PCS,HAWB_NET_WT,HAWB_WT_CODE,FREE_TEXT_DESC1,	
		FREE_TEXT_DESC2,FREE_TEXT_DESC3,FREE_TEXT_DESC4,FREE_TEXT_DESC5,
		FREE_TEXT_DESC6,FREE_TEXT_DESC7,FREE_TEXT_DESC8,	
		FREE_TEXT_DESC9,SPL_CODE1,SPL_CODE2,SPL_CODE3,SPL_CODE4,SPL_CODE5,SPL_CODE6,
		SPL_CODE7,SPL_CODE8,SPL_CODE9,MANIFEST_DESC,decode(SPL_CODE1,NULL,'',SPL_CODE1)||decode(SPL_CODE2,null,'',','||SPL_CODE2)
		||decode(SPL_CODE3,null,'',','||SPL_CODE3)
		||decode(SPL_CODE4,null,'',','||SPL_CODE4)
		||decode(SPL_CODE5,null,'',','||SPL_CODE5)
		||decode(SPL_CODE6,null,'',','||SPL_CODE6)
		||decode(SPL_CODE7,null,'',','||SPL_CODE7)
		||decode(SPL_CODE8,null,'',','||SPL_CODE8)
		||decode(SPL_CODE9,null,'',','||SPL_CODE9) as finalSHC,	
		SHPR_NAME,SHPR_ADD1,SHPR_ADD2,SHPR_ADD3,SHPR_ADD4,SHPR_ADD5,SHPR_PLACE,
		SHPR_CTRY_CODE,SHPR_STATE_PROVINCE,SHPR_PIN_CODE,SHPR_CONT_ID,
		SHPR_CONT_N,CSGNE_NAME,CSGNE_ADD1,CSGNE_ADD2,CSGNE_ADD3,CSGNE_ADD4,CSGNE_ADD5,
		CSGNE_PLACE,CSGNE_CTRY_CODE,CSGNE_STATE_PROVINCE,CSGNE_PIN_CODE,CSGNE_CONT_ID,
		CSGNE_CONT_N,NFY_NAME ,NFY_ADD1,NFY_ADD2,NFY_ADD3,NFY_ADD4,NFY_ADD5,NFY_PLACE,
		NFY_CTRY_CODE,NFY_PIN_CODE,NFY_CONT_ID,NFY_CONT_N,
		NFY_LICENSE1,NFY_LICENSE2,NFY_LICENSE3,NFY_LICENSE4,NFY_LICENSE5,NFY_PERMIT1,
		NFY_PERMIT2 ,NFY_PERMIT3,NFY_PERMIT4 ,NFY_PERMIT5 ,DECLN_CURR_CODE,
		DECLN_WT_VALN_PPCC_I,DECLN_OTH_CHRG_PPCC_I,DECLN_CARR,DECLN_CTM,	
		DECLN_INSURCE,DECLN_FREE_TEXT,ACCS_I,SOURCE,RMK_CTM,FHL_OWNER,
		A.LM_DATE,LM_VER ,RMK,NFY_LICENSE6,NFY_LICENSE7,NFY_LICENSE8,NFY_LICENSE9,
		NFY_PERMIT6 ,NFY_PERMIT7,NFY_PERMIT8 ,NFY_PERMIT9 ,HBS_SLAC,HTS_COMM_CODE1,
		HTS_COMM_CODE2,HTS_COMM_CODE3,HTS_COMM_CODE4,HTS_COMM_CODE5,HTS_COMM_CODE6,
		HTS_COMM_CODE7,HTS_COMM_CODE8,HTS_COMM_CODE9,DECODE(SOURCE,'CMS','WOS',SOURCE) AS tmpSrcDispName,
		case when A.FHL_OWNER is null then
			(select c.CODE_DESC from CUST_COMPANY C
				where C.code = (SELECT S.CUST_NO FROM SEC_USER S WHERE S.CODE = A.CR_USER_ID))
		else (select c.CODE_DESC from CUST_COMPANY C
			where (C.code = (SELECT S.CUST_NO FROM SEC_USER S WHERE S.CODE = A.FHL_OWNER)
					or C.code = A.FHL_OWNER))
		end AS tmpCustName, 
		A.LM_USER_ID AS LM_USER_ID,CHARGE_AGENT AS chargeAgentIndicator,
		A.IMG_TRANS_ID as transactionId,NFY_STATE_PROVINCE,
		HBS_SLAC
		FROM  EDI_FHL_HAWB A
		WHERE A.TR_NO = #TR_NO#    
		AND A.HAWB_NO=#HAWB_NO#
		AND ROWNUM = 1
    </select>
	<select id="fetchAmendHawbDetailsInterface" parameterClass="cargo.cms.edi.bo.EdiFhlHawb" resultClass="cargo.cms.edi.bo.EdiFhlHawb" >
	    SELECT C.*,D.tmpSrcDispName,D.tmpCustName,D.LM_USER_ID 
		FROM 
        (SELECT TR_NO,DOC_LINE_NO,HAWB_NO,HAWB_ORG,HAWB_DEST,
		HAWB_PCS,HAWB_NET_WT,HAWB_WT_CODE,FREE_TEXT_DESC1,
		FREE_TEXT_DESC2,FREE_TEXT_DESC3,FREE_TEXT_DESC4,FREE_TEXT_DESC5,FREE_TEXT_DESC6,FREE_TEXT_DESC7,FREE_TEXT_DESC8,
	    FREE_TEXT_DESC9,SPL_CODE1,SPL_CODE2,SPL_CODE3,SPL_CODE4,SPL_CODE5,SPL_CODE6,SPL_CODE7,SPL_CODE8,MANIFEST_DESC,
		SHPR_NAME,SHPR_ADD1,SHPR_ADD2,SHPR_ADD3,SHPR_ADD4,SHPR_ADD5,SHPR_PLACE,SHPR_CTRY_CODE,SHPR_STATE_PROVINCE,
		SHPR_PIN_CODE,SHPR_CONT_ID ,SHPR_CONT_N,CSGNE_NAME,CSGNE_ADD1,CSGNE_ADD2,CSGNE_ADD3,CSGNE_ADD4,CSGNE_ADD5,
	    CSGNE_PLACE,CSGNE_CTRY_CODE,CSGNE_STATE_PROVINCE,CSGNE_PIN_CODE,CSGNE_CONT_ID,CSGNE_CONT_N,NFY_NAME ,
	    NFY_ADD1,NFY_ADD2,NFY_ADD3,NFY_ADD4,NFY_ADD5,NFY_PLACE,NFY_CTRY_CODE,NFY_PIN_CODE,NFY_CONT_ID,NFY_CONT_N,
	    NFY_LICENSE1,NFY_LICENSE2,NFY_LICENSE3,NFY_LICENSE4,NFY_LICENSE5,NFY_PERMIT1 ,NFY_PERMIT2 ,NFY_PERMIT3 ,
	    NFY_PERMIT4 ,NFY_PERMIT5 ,DECLN_CURR_CODE ,DECLN_WT_VALN_PPCC_I,DECLN_OTH_CHRG_PPCC_I,DECLN_CARR,DECLN_CTM,
	    DECLN_INSURCE,DECLN_FREE_TEXT,ACCS_I,SOURCE,RMK_CTM,FHL_OWNER,LM_USER_ID,LM_DATE,LM_VER ,RMK,NFY_LICENSE6,
	    NFY_LICENSE7,NFY_LICENSE8,NFY_LICENSE9,NFY_PERMIT6 ,NFY_PERMIT7 ,NFY_PERMIT8 ,NFY_PERMIT9 ,HBS_SLAC,HTS_COMM_CODE1,
		HTS_COMM_CODE2,HTS_COMM_CODE3,HTS_COMM_CODE4,HTS_COMM_CODE5,HTS_COMM_CODE6,HTS_COMM_CODE7,HTS_COMM_CODE8,
	    HTS_COMM_CODE9 FROM EDI_FHL_HAWB WHERE TR_NO = #TR_NO# AND HAWB_NO=#HAWB_NO#) C,
		(SELECT TR_NO,
	     DECODE(A.SI_TYPE,'AIMS','AIMS','ISACS','AIMS','FHL_I','SITA','TX_HM','TRAXON','S','CMS') AS tmpSrcDispName,
	     DECODE(A.SI_TYPE,'S',NULL,B.CODE_DESC) AS tmpCustName,
		 A.LM_USER_ID AS LM_USER_ID
	     FROM EDI_FHL A,
		      CUST_COMPANY B
	     WHERE A.FHL_OWNER = B.CODE(+)
		   AND A.TR_NO = #TR_NO#) D  
		 WHERE C.TR_NO = D.TR_NO AND ROWNUM = 1
    </select>


	<select id="fetchAmendLicPerDetails" parameterClass="cargo.cms.edi.bo.EdiFhlHawb" resultClass="cargo.cms.edi.bo.EdiFhlHawbLicPer" >
		SELECT TR_NO,DOC_LINE_NO ,HDOC_LINE_NO ,LIC_PER_TYPE ,LIC_PER_NO,CR_DATE,CR_USER_ID FROM EDI_FHL_HAWB_LIC_PER
		WHERE TR_NO = #TR_NO# AND HDOC_LINE_NO=#DOC_LINE_NO#
	</select>
	<select id="fetchAmendContactDetails" parameterClass="cargo.cms.edi.bo.EdiFhlHawb" resultClass="cargo.cms.edi.bo.EdiFhlContact" >
		SELECT TR_NO, DOC_LINE_NO,CONT_ID,CCNT_NAME,CONT_TYPE,LM_USER_ID,LM_DATE,LM_VER,HDOC_LINE_NO 
		FROM EDI_FHL_CONTACT WHERE TR_NO = #TR_NO# AND HDOC_LINE_NO=#DOC_LINE_NO#
	</select>
	<select id="fetchAmendOciDetails" parameterClass="cargo.cms.edi.bo.EdiFhlHawb" resultClass="cargo.cms.edi.bo.EdiFhlOciBO" >
		SELECT TR_NO trNo, DOC_LINE_NO docLineNo, HDOC_LINE_NO hDocLineNo, ISO_CTRY_CODE isoCtryCode, INFO_IDENTIFIER infoIdentifier, 
    	CUSTOMS_INFO_IDENTIFIER customsInfoIdentifier, SUPP_CUSTOMS_INFO suppCustInfo, LM_USER_ID lmUserId, LM_DATE lmDate
		FROM EDI_FHL_HAWB_OCI WHERE TR_NO = #TR_NO# AND HDOC_LINE_NO=#DOC_LINE_NO#
	</select>
	<select id="checkImageExistOrNot" parameterClass="cargo.cms.edi.bo.EdiFhlHawb" resultClass="java.lang.Integer" >
	select count(1) from fw_image_store where img_session_id=#sessionId# and img_name=#imageName# and rownum=1
	</select>
	<select id="fetchHawbImageLst" parameterClass="java.util.HashMap" resultClass="cargo.cms.edi.bo.EdiFhlHawb" >
	SELECT IMG_ID as imageId, IMG_SIZE as imageSize,IMG_NAME as imageName FROM FW_IMAGE_STORE WHERE IMG_SESSION_ID = #trnsId# AND IMG_HAWB_SESSION_ID=#hawbTransId#
	</select>
	<delete id="deleteAWBImageStore" parameterClass="cargo.cms.edi.bo.EdiFhlHawb">
	delete from fw_image_store where img_session_id=#sessionId# and img_name=#imageName#
	</delete>
	<parameterMap id="AmendFhl" class="map" >
		<parameter property="P_TR_NO"  jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="P_DOC_LINE_NO"  jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="P_TYPE"  jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	</parameterMap>
	<procedure id="sqledifhllogproc" parameterMap="AmendFhl" >
		{call PRO_EDI_FHL_LOG(?,?,?)}
	</procedure>
	
	<update id="updateFhlHawb" parameterClass="cargo.cms.edi.bo.EdiFhlHawb">
		UPDATE EDI_FHL_HAWB SET 
		HAWB_NO=upper(#HAWB_NO#),HAWB_ORG=upper(#HAWB_ORG#),HAWB_DEST=upper(#HAWB_DEST#),HAWB_PCS=#HAWB_PCS#,HAWB_NET_WT=#HAWB_NET_WT#,
		FREE_TEXT_DESC1=upper(#FREE_TEXT_DESC1#),FREE_TEXT_DESC2=upper(#FREE_TEXT_DESC2#),FREE_TEXT_DESC3=upper(#FREE_TEXT_DESC3#),
		FREE_TEXT_DESC4=upper(#FREE_TEXT_DESC4#),FREE_TEXT_DESC5=upper(#FREE_TEXT_DESC5#),SPL_CODE1=upper(#SPL_CODE1#),SPL_CODE2=upper(#SPL_CODE2#),
		SPL_CODE3=upper(#SPL_CODE3#),SPL_CODE4=upper(#SPL_CODE4#),SPL_CODE5=upper(#SPL_CODE5#),SPL_CODE6=upper(#SPL_CODE6#),
		SPL_CODE7=upper(#SPL_CODE7#),SPL_CODE8=upper(#SPL_CODE8#),SPL_CODE9=upper(#SPL_CODE9#),
		MANIFEST_DESC=upper(#MANIFEST_DESC#),SHPR_NAME=upper(#SHPR_NAME#),SHPR_ADD1=upper(#SHPR_ADD1#),
		SHPR_ADD2=upper(#SHPR_ADD2#),SHPR_ADD3=upper(#SHPR_ADD3#),SHPR_ADD4=upper(#SHPR_ADD4#),SHPR_ADD5=upper(#SHPR_ADD5#),
		SHPR_PLACE=upper(#SHPR_PLACE#),SHPR_STATE_PROVINCE=upper(#SHPR_STATE_PROVINCE#),SHPR_CTRY_CODE=upper(#SHPR_CTRY_CODE#),
		SHPR_PIN_CODE=upper(#SHPR_PIN_CODE#),CSGNE_NAME=upper(#CSGNE_NAME#),CSGNE_ADD1=upper(#CSGNE_ADD1#),CSGNE_ADD2=upper(#CSGNE_ADD2#),
		CSGNE_ADD3=upper(#CSGNE_ADD3#),CSGNE_ADD4=upper(#CSGNE_ADD4#),CSGNE_ADD5=upper(#CSGNE_ADD5#),CSGNE_PLACE=upper(#CSGNE_PLACE#),
		CSGNE_CTRY_CODE=upper(#CSGNE_CTRY_CODE#),CSGNE_STATE_PROVINCE=upper(#CSGNE_STATE_PROVINCE#),CSGNE_PIN_CODE=upper(#CSGNE_PIN_CODE#),
		NFY_NAME=upper(#NFY_NAME#),NFY_ADD1=upper(#NFY_ADD1#),NFY_ADD2=upper(#NFY_ADD2#),NFY_ADD3=upper(#NFY_ADD3#),NFY_ADD4=upper(#NFY_ADD4#),NFY_ADD5=upper(#NFY_ADD5#),
		NFY_PLACE=upper(#NFY_PLACE#),NFY_CTRY_CODE=upper(#NFY_CTRY_CODE#),NFY_PIN_CODE=upper(#NFY_PIN_CODE#),DECLN_CURR_CODE=upper(#DECLN_CURR_CODE#),
		DECLN_WT_VALN_PPCC_I=upper(#DECLN_WT_VALN_PPCC_I#),DECLN_OTH_CHRG_PPCC_I=upper(#DECLN_OTH_CHRG_PPCC_I#), DECLN_CARR=upper(#DECLN_CARR#), 
		DECLN_CTM=upper(#DECLN_CTM#),DECLN_INSURCE=upper(#DECLN_INSURCE#),RMK=upper(#RMK#),HBS_SLAC=upper(#HBS_SLAC#),
		LM_USER_ID=upper(#LM_USER_ID#),LM_DATE=sysdate,CHARGE_AGENT=upper(#chargeAgentIndicator#),NFY_STATE_PROVINCE=upper(#NFY_STATE_PROVINCE#),
		HTS_COMM_CODE1=upper(#HTS_COMM_CODE1#),HTS_COMM_CODE2=upper(#HTS_COMM_CODE2#),HTS_COMM_CODE3=upper(#HTS_COMM_CODE3#),
		HTS_COMM_CODE4=upper(#HTS_COMM_CODE4#),HTS_COMM_CODE5=upper(#HTS_COMM_CODE5#),HTS_COMM_CODE6=upper(#HTS_COMM_CODE6#),
		HTS_COMM_CODE7=upper(#HTS_COMM_CODE7#),HTS_COMM_CODE8=upper(#HTS_COMM_CODE8#),HTS_COMM_CODE9=upper(#HTS_COMM_CODE9#)
		 WHERE TR_NO=#TR_NO# AND DOC_LINE_NO=#DOC_LINE_NO# 
	</update>
	<update id="updateFhlContact" parameterClass="cargo.cms.edi.bo.EdiFhlContact">
		UPDATE EDI_FHL_CONTACT SET CONT_ID=#CONT_ID#,CCNT_NAME=#CCNT_NAME#,CONT_TYPE=#CONT_TYPE#,
		LM_USER_ID=#LM_USER_ID#,LM_DATE=to_date(#LM_DATE#,'dd/mm/yyyy hh24:mi:ss') 
		WHERE TR_NO=#TR_NO# AND DOC_LINE_NO=#DOC_LINE_NO# 
	</update>
	<update id="updateFhlLicPer" parameterClass="cargo.cms.edi.bo.EdiFhlHawbLicPer">
		UPDATE EDI_FHL_HAWB_LIC_PER SET LIC_PER_TYPE=#LIC_PER_TYPE#,LIC_PER_NO=#LIC_PER_NO#,
		LM_USER_ID=#LM_USER_ID#,LM_DATE=to_date(#LM_DATE#,'dd/mm/yyyy hh24:mi:ss')
		WHERE TR_NO=#TR_NO# AND DOC_LINE_NO=#DOC_LINE_NO# 
	</update>	
	<update id="updateFhlOci" parameterClass="cargo.cms.edi.bo.EdiFhlOciBO">
		UPDATE EDI_FHL_HAWB_OCI SET SUPP_CUSTOMS_INFO=#suppCustInfo#,
			<isNotEmpty property="isoCtryCode" >
			ISO_CTRY_CODE=#isoCtryCode#,
			</isNotEmpty>
			<isNotEmpty property="infoIdentifier" >
			INFO_IDENTIFIER=#infoIdentifier#,
			</isNotEmpty>
			<isNotEmpty property="customsInfoIdentifier" >
			CUSTOMS_INFO_IDENTIFIER=#customsInfoIdentifier#,
			</isNotEmpty>
		LM_USER_ID=#lmUserId#,LM_DATE=SYSDATE
		WHERE TR_NO=#trNo# AND DOC_LINE_NO=#docLineNo# 
	</update>
	<delete id="deleteLicPer" parameterClass="cargo.cms.edi.bo.EdiFhlHawbLicPer" >
		DELETE FROM EDI_FHL_HAWB_LIC_PER WHERE TR_NO=#TR_NO# AND DOC_LINE_NO=#DOC_LINE_NO# 
	</delete>
	
	<delete id="deleteLicPerExceptSaved_Not_In" parameterClass="cargo.cms.edi.bo.EdiFhlHawbLicPer" >
		DELETE FROM EDI_FHL_HAWB_LIC_PER WHERE TR_NO=#TR_NO# AND HDOC_LINE_NO=#HDOC_LINE_NO#  and DOC_LINE_NO not in 
		 <iterate  property="docLineNoList"
				open="(" close=")" conjunction="," >
				$docLineNoList[]$
		</iterate>	
	</delete>
	<delete id="deleteLicPerExceptSaved" parameterClass="cargo.cms.edi.bo.EdiFhlHawbLicPer" >
		DELETE FROM EDI_FHL_HAWB_LIC_PER WHERE TR_NO=#TR_NO# AND HDOC_LINE_NO=#HDOC_LINE_NO#  
		 <iterate prepend="AND" property="docLineNoList"
				open="(" close=")" conjunction="AND" >
				DOC_LINE_NO != $docLineNoList[]$
		</iterate>	
	</delete>
	
	<delete id="deleteContact" parameterClass="cargo.cms.edi.bo.EdiFhlContact" >
		DELETE FROM EDI_FHL_CONTACT WHERE TR_NO=#TR_NO# AND DOC_LINE_NO=#DOC_LINE_NO# 
	</delete>
	<select id="checkHAWBAvl" parameterClass="cargo.cms.edi.bo.EdiFhlHawb" resultClass="java.lang.String">
		select count(*) from edi_fhl_hawb where tr_no=#TR_NO#
	</select>
	<delete id="deleteHawbFHL" parameterClass="cargo.cms.edi.bo.EdiFhlHawb" >
		DELETE FROM EDI_FHL WHERE TR_NO=#TR_NO# 
	</delete>
	<delete id="deleteHawb" parameterClass="cargo.cms.edi.bo.EdiFhlHawb" >
		DELETE FROM EDI_FHL_HAWB WHERE TR_NO=#TR_NO# AND DOC_LINE_NO=#DOC_LINE_NO# 
	</delete>
	<delete id="deleteLicPerCont" parameterClass="cargo.cms.edi.bo.EdiFhlHawb" >
		DELETE FROM EDI_FHL_HAWB_LIC_PER WHERE TR_NO=#TR_NO# AND HDOC_LINE_NO=#DOC_LINE_NO# 
	</delete>
	<delete id="deleteContLicPer" parameterClass="cargo.cms.edi.bo.EdiFhlHawb" >
		DELETE FROM EDI_FHL_CONTACT WHERE TR_NO=#TR_NO# AND HDOC_LINE_NO=#DOC_LINE_NO# 
	</delete>
	<delete id="deleteOciCont" parameterClass="java.util.HashMap" >
		DELETE FROM EDI_FHL_HAWB_OCI WHERE TR_NO=#TR_NO# AND HDOC_LINE_NO=#DOC_LINE_NO# 
	</delete>
	<!-- Amend FHL Ends -->
	<!-- Enquire FHL Log Starts -->
		<select id="fetchEnquireLogAwbList" parameterClass="cargo.cms.edi.bo.EdiFhlBO" resultClass="cargo.cms.edi.bo.EdiFhlHawb">
	<!-- As told by XXY SELECT TR_NO,HAWB_NO,DOC_LINE_NO,MANIFEST_DESC,HAWB_ORG,HAWB_DEST,PCS_WT AS tmpPcsWt FROM (SELECT B.TR_NO,B.HAWB_NO,
		B.DOC_LINE_NO,B.MANIFEST_DESC,
	    B.HAWB_ORG, B.HAWB_DEST,B.HAWB_PCS||'/'||B.HAWB_NET_WT PCS_WT FROM EDI_FHL A,EDI_FHL_HAWB B WHERE 
	    A.TR_NO = B.TR_NO AND SI_TYPE = 'S' AND A.AWB_NO =#AWB_NO# UNION ALL SELECT B.TR_NO,B.HAWB_NO,
	   	B.DOC_LINE_NO,B.MANIFEST_DESC,
        B.HAWB_ORG, B.HAWB_DEST,B.HAWB_PCS||'/'||B.HAWB_NET_WT PCS_WT FROM EDI_FHL A, EDI_FHL_HAWB B WHERE 
        A.TR_NO = B.TR_NO AND A.SI_TYPE != 'S' AND A.TR_NO = (SELECT MAX(TR_NO) FROM EDI_FHL WHERE AWB_NO =#AWB_NO#))
        WHERE HAWB_NO = NVL(##,HAWB_NO) ORDER BY HAWB_NO             -->
		SELECT B.TR_NO,B.HAWB_NO,B.DOC_LINE_NO,B.MANIFEST_DESC,B.HAWB_ORG,B.HAWB_DEST, B.HAWB_PCS||'/'||B.HAWB_NET_WT AS tmpPcsWt 
  FROM EDI_FHL A,EDI_FHL_HAWB B  WHERE A.TR_NO = B.TR_NO    AND A.AWB_NO =#AWB_NO#))   AND 
			B.HAWB_NO = NVL(#HAWB_NO#,HAWB_NO)  ORDER BY B.HAWB_NO
		</select>
		
<select id="fetchAmendFHLLogDetails" parameterClass="cargo.cms.edi.bo.EdiFhlHawb" resultClass="cargo.cms.edi.bo.EdiFhlBO">
		SELECT TR_NO,MSG_SEQ_NUM,MSG_VER ,SI_TYPE ,COPY_NO ,AWB_NO,substr(AWB_NO,0,3) as tmpAwbNoPfx,
		substr(AWB_NO,4) as tmpAwbNoSfx, AWB_DATE,AWB_ORG ,AWB_DEST,AWB_PCS ,AWB_WT,AWB_WT_CODE,
		PART_SHMPT_YN,TOTAL_COUNT,FHL_STATUS,SUCCESS_MSGS,LM_USER_ID,LM_DATE,LM_VER,FLT_CARR,FLT_NO,FLT_ETA_DATE,
		FLT_ETA_TIME,FLT_DATE,FLT_TYPE,HBS_SLAC,HTS_COMM_CODE1,HTS_COMM_CODE2,HTS_COMM_CODE3,HTS_COMM_CODE4,HTS_COMM_CODE5,
		HTS_COMM_CODE6,HTS_COMM_CODE7,HTS_COMM_CODE8,HTS_COMM_CODE9 FROM EDI_FHL_LOG WHERE TR_NO = #TR_NO#
	</select>
	<select id="fetchAmendHawbLogDetails" parameterClass="cargo.cms.edi.bo.EdiFhlHawb" resultClass="cargo.cms.edi.bo.EdiFhlHawb" >
		SELECT TR_NO,DOC_LINE_NO,HAWB_NO,HAWB_ORG,HAWB_DEST,HAWB_PCS,HAWB_NET_WT,
		HAWB_WT_CODE,FREE_TEXT_DESC1,
		FREE_TEXT_DESC2,FREE_TEXT_DESC3,FREE_TEXT_DESC4,FREE_TEXT_DESC5,FREE_TEXT_DESC6,FREE_TEXT_DESC7,FREE_TEXT_DESC8,
	    FREE_TEXT_DESC9,SPL_CODE1,SPL_CODE2,SPL_CODE3,SPL_CODE4,SPL_CODE5,SPL_CODE6,SPL_CODE7,SPL_CODE8,MANIFEST_DESC,
		SHPR_NAME,SHPR_ADD1,SHPR_ADD2,SHPR_ADD3,SHPR_ADD4,SHPR_ADD5,SHPR_PLACE,SHPR_CTRY_CODE,SHPR_STATE_PROVINCE,
		SHPR_PIN_CODE,SHPR_CONT_ID ,SHPR_CONT_N,CSGNE_NAME,CSGNE_ADD1,CSGNE_ADD2,CSGNE_ADD3,CSGNE_ADD4,CSGNE_ADD5,
	    CSGNE_PLACE,CSGNE_CTRY_CODE,CSGNE_STATE_PROVINCE,CSGNE_PIN_CODE,CSGNE_CONT_ID,CSGNE_CONT_N,NFY_NAME ,
	    NFY_ADD1,NFY_ADD2,NFY_ADD3,NFY_ADD4,NFY_ADD5,NFY_PLACE,NFY_CTRY_CODE,NFY_PIN_CODE,NFY_CONT_ID,NFY_CONT_N,
	    NFY_LICENSE1,NFY_LICENSE2,NFY_LICENSE3,NFY_LICENSE4,NFY_LICENSE5,NFY_PERMIT1 ,NFY_PERMIT2 ,NFY_PERMIT3 ,
	    NFY_PERMIT4 ,NFY_PERMIT5 ,DECLN_CURR_CODE ,DECLN_WT_VALN_PPCC_I,DECLN_OTH_CHRG_PPCC_I,DECLN_CARR,DECLN_CTM,
	    DECLN_INSURCE,DECLN_FREE_TEXT,ACCS_I,SOURCE,RMK_CTM,FHL_OWNER,LM_USER_ID,LM_DATE,LM_VER ,RMK,NFY_LICENSE6,
	    NFY_LICENSE7,NFY_LICENSE8,NFY_LICENSE9,NFY_PERMIT6 ,NFY_PERMIT7 ,NFY_PERMIT8 ,NFY_PERMIT9 ,HBS_SLAC,HTS_COMM_CODE1,
		HTS_COMM_CODE2,HTS_COMM_CODE3,HTS_COMM_CODE4,HTS_COMM_CODE5,HTS_COMM_CODE6,HTS_COMM_CODE7,HTS_COMM_CODE8,
	    HTS_COMM_CODE9,NFY_STATE_PROVINCE,CHARGE_AGENT AS chargeAgentIndicator FROM EDI_FHL_HAWB_LOG WHERE TR_NO = #TR_NO# AND HAWB_NO=#HAWB_NO# AND ROWNUM = 1
    </select>
	<select id="fetchAmendLicPerLogDetails" parameterClass="cargo.cms.edi.bo.EdiFhlHawb" resultClass="cargo.cms.edi.bo.EdiFhlHawbLicPer" >
		SELECT TR_NO,DOC_LINE_NO ,HDOC_LINE_NO ,LIC_PER_TYPE ,LIC_PER_NO FROM EDI_FHL_HAWB_LIC_PER_LOG
		WHERE TR_NO = #TR_NO# AND HDOC_LINE_NO=#DOC_LINE_NO#
	</select>
	<select id="fetchAmendContactLogDetails" parameterClass="cargo.cms.edi.bo.EdiFhlHawb" resultClass="cargo.cms.edi.bo.EdiFhlContact" >
		SELECT TR_NO, DOC_LINE_NO,CONT_ID,CCNT_NAME,CONT_TYPE,LM_USER_ID,LM_DATE,LM_VER,HDOC_LINE_NO 
		FROM EDI_FHL_CONTACT_LOG WHERE TR_NO = #TR_NO# AND HDOC_LINE_NO=#DOC_LINE_NO#
	</select>
	
	<select id="fetchAmendOciLogDetails" parameterClass="cargo.cms.edi.bo.EdiFhlHawb" resultClass="cargo.cms.edi.bo.EdiFhlOciBO" >
		SELECT TR_NO trNo, DOC_LINE_NO docLineNo, HDOC_LINE_NO hDocLineNo, ISO_CTRY_CODE isoCtryCode, INFO_IDENTIFIER infoIdentifier, 
    	CUSTOMS_INFO_IDENTIFIER customsInfoIdentifier, SUPP_CUSTOMS_INFO suppCustInfo, LM_USER_ID lmUserId, LM_DATE lmDate
		FROM EDI_FHL_HAWB_OCI_LOG WHERE TR_NO = #TR_NO# AND HDOC_LINE_NO=#DOC_LINE_NO#
	</select>
	
	<!-- Enquire FHL Log Ends -->
	<select id="checkAmendDeleteHawb" parameterClass="cargo.cms.edi.bo.EdiFhlHawb" resultClass="java.lang.Integer">
	<![CDATA[
		select count(1) from cst_recv where awb_no = #AWB_NO# and hawb_no = #HAWB_NO# 
		and REC_TYPE in ('C', 'E') and not exists (select null from V_CST_CC_CODE_AWB where awb_no=#AWB_NO# and cc_code='ND')
	]]>
	</select>
	


<select id="isFlightFreezed" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		SELECT COUNT(PREP.FFM_FRZ_DATE) FROM 
		EDI_FFM_MSG MSG INNER JOIN EDI_FFM_SHP SHP ON MSG.TR_NO = SHP.TR_NO
		INNER JOIN START_PREP PREP ON MSG.FLT_KEY = PREP.FLT_KEY AND MSG.FLT_DATE = PREP.FLT_DATE
		WHERE 
		SHP.AWB_NO = #awbNo#
	</select>	
	<select id="fetchItemMasterDetails" parameterClass="java.util.HashMap" resultClass="cargo.cms.billing.bo.ItemBO">
		SELECT
			BILL_ITM_MASTER.ITM_CODE AS itemCode,				
			BILL_ITM_MASTER.ITM_CODE_SFX AS itemCodeSuffix,          
			BILL_ITM_MASTER.ITM_DESC AS itemDesc,  
			BILL_ITM_MASTER.ITM_CATEGORY AS itemCategory,         
			BILL_ITM_MASTER.REV_IND AS revenueIndicator,          
			BILL_ITM_MASTER.OWNER_IND AS ownerIndicator,       
			BILL_ITM_MASTER.STD_IND AS standardIndicator,			
			BILL_ITM_MASTER.CASH_IND AS cashIndicator,			   
			BILL_ITM_MASTER.WAVR_IND AS waiverIndicator,                
			BILL_ITM_MASTER.UOM AS uom,
			BILL_ITM_MASTER.GST_RATE AS gst,
			BILL_ITM_MASTER.MIN_CHRG AS minCharge,
			BILL_ITM_MASTER.MAX_CHRG AS maxCharge,
			BILL_ITM_MASTER.UPD_DESC AS updateDescIndicator,
			BILL_ITM_MASTER.UPD_RATE  AS updateRateIndicator,
			BILL_ITM_MASTER.ECT_HANDLER AS ectHandler			
		FROM 
			BILL_ITM_MASTER 
		WHERE 
		    UPPER(ITM_CODE) = UPPER(#itemCode#)		    
	</select>
	<select id="fetchFHLMessageFreeze" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT FHL_FRZ_DATE FROM START_PREP_DTL WHERE AWB_NO = #awbNo# AND MSG_TYPE = #messageType# AND AWB_DATE = #awbDate# AND ROWNUM = 1 
	</select>
	<select id="fetchFHLSystemFreeze" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM EDI_FFM_MSG FFM, EDI_FFM_SHP SHP, FLT_OPR OPR
		WHERE FFM.TR_NO = SHP.TR_NO AND FFM.FLT_KEY = OPR.FLT_KEY AND FFM.FLT_DATE = OPR.SCH_DATE AND
		TO_CHAR(SYSDATE, 'HH24MI') >  TO_CHAR(TO_DATE(TO_CHAR(OPR.SCH_DATE ||' ' || LPAD(OPR.SCH_TIME,4,0)),'DD-MON-YY HH24MI') - 
		(SELECT RULE_VALUE FROM CMSRULES WHERE RULE_CODE = 'FHL_FREEZE_HRS')/24,'HH24MI') AND
		AWB_NO = #awbNo# AND AWB_DATE = #awbDate#
	</select>	
	<insert id="insertFHLBillChargeDetail" parameterClass="cargo.cms.imprt.bo.ChargesListBO">
		INSERT INTO BILL_CHARGE_DTL(TR_NO,AWB_NO,AWB_DATE,ITM_CODE,ITM_CODE_SFX,ITM_DESC,MAX_CHRG_IND,MIN_CHRG_IND,
		REV_IND,STD_IND,WAVR_IND,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,CURR_CODE,STATUS,CASH_IND, QTY) 
		VALUES(BILL_CHARGE_DTL_SEQ.nextval,#awbNo#,#awbDate#,#itemCode#,#itemCodeSfx#,#itemDesc#,#maxChrgInd#,#minChrgInd#, 
		#revInd#,#stdInd#,#waiveCharges#,#crUserId#,SYSDATE,#lmUserId#,SYSDATE,#currencyCode#,'PENDING',#cashInd#,#qty#)
	</insert>
	<select id="checkExportReceiveDocument" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		select count(1) from exp_doc_recd a,awb b where a.awb_no = b.awb_no and a.awb_date = b.awb_date
		and b.awb_type = 'E' and b.awb_closed_yn='N' and b.awb_no = #awbNo# and a.AWB_FRZ_YN='Y'		
	</select>	
	<!--
	==============================================================================================
		END OF Maintain FHL and Enquire FHL Log QUERIES
	==============================================================================================
	-->		
	<!-- 
	==============================================================================================
		START OF Revert Inbound FFM/Flight QUERIES - Varadaraj Muni 14-OCT-2010
	==============================================================================================
	-->		
	<select id="isFlightValid" parameterClass="cargo.cms.edi.bo.EdiFFMMsgBO" resultClass="java.lang.String">
		SELECT COUNT(*) FROM FLT_OPR WHERE FLT_KEY=#fltKey# AND SCH_DATE=TO_DATE(#fltDate#,'DDMONYY') AND FLT_TYPE='A'
	</select>	
	<select id="importCARValidation" parameterClass="cargo.cms.edi.bo.EdiFFMMsgBO" resultClass="java.util.HashMap">
		<![CDATA[
		select (nvl(sum(decode(car_created,'Y',1,0)),0)) as cnt,(nvl(sum(b.locn_pcs),0)) as locn
  		from imp_car_shp a 
  		JOIN AWB awb ON UPPER(awb.AWB_NO) = UPPER(a.AWB_NO) 
		AND UPPER (awb.awb_date) = UPPER (a.awb_date)
		AND awb.awb_type = 'I'  
  		left join awb_inventory b on a.flt_key = b.flt_key
    	and a.flt_date = b.flt_date and a.awb_no = b.awb_no
        and a.awb_date = b.awb_date and a.ffm_flg = 'Y'
		where a.flt_key =#fltKey#
  		and a.flt_date = to_date(#fltDate#,'ddmonyy')		
  		]]>
	</select>
	<select id="isInitialConsignSubmitted" parameterClass="cargo.cms.edi.bo.EdiFFMMsgBO" resultClass="java.lang.String">
		<![CDATA[
		select count(*) from cst_subm where flt_type='I' and flt_key=#fltKey# and flt_date=to_date(#fltDate#,'ddmonyy')  and
		rec_type='INT'
		]]>
	</select>	
	<select id="isFlightFinalised" parameterClass="cargo.cms.edi.bo.EdiFFMMsgBO" resultClass="java.lang.String">
	<![CDATA[
		SELECT NVL(COUNT(1),0)  FROM EDI_FFM_MSG A WHERE A.FLT_KEY=#fltKey# AND A.FLT_DATE=to_date(#fltDate#,'ddmonyy') 
		AND A.FFM_STATUS='F' AND ROWNUM<=1
	]]>
	</select>	
	<select id="isFlightProcessed" parameterClass="cargo.cms.edi.bo.EdiFFMMsgBO" resultClass="java.lang.String">
	<![CDATA[
		SELECT NVL(COUNT(1),0)  FROM EDI_FFM_MSG A WHERE A.FLT_KEY=#fltKey# AND A.FLT_DATE=to_date(#fltDate#,'ddmonyy') 
		AND A.FFM_STATUS='P' AND ROWNUM<=1
	]]>
	</select>
	<update id="revertFFMProcess" parameterClass="cargo.cms.edi.bo.EdiFFMMsgBO" >	
		update edi_ffm_msg set carr_code = #altFlightCar#, flt_no = #altFlightNo# , flt_date = to_date(#altFlightDate#,'DDMONYY') , flt_key = #altFlightCar# || #altFlightNo# , 
		ffm_status = 'UNPRO', alt_flight_car = '', alt_flight_no = '', alt_flight_date = '' , LM_USER_ID=#LM_USER_ID#, LM_DATE=SYSDATE, TR_TYPE='REFFM'
		where si_type = 'I' and flt_key  =  #fltKey#	and flt_date = to_date(#fltDate#,'DDMONYY') and ffm_status = 'P' and tr_no = #trNo#
	</update>
	<select id="fetchMSGRevertProces" parameterClass="cargo.cms.edi.bo.EdiFFMMsgBO" resultClass="cargo.cms.edi.bo.EdiFFMMsgBO" >
		select tr_no as trNo,carr_code as carrCode,flt_no as fltNo,to_char(flt_date,'ddMONyy') as fltDate,flt_key as fltKey,ffm_status as ffmStatus,
		alt_flight_car as altFlightCar,alt_flight_no as altFlightNo, to_char(alt_flight_date,'ddMONyy') as altFlightDate from 
		edi_ffm_msg where flt_key=#fltKey# and flt_date=to_date(#fltDate#,'ddmonyy') and ffm_status = 'P'
		and si_type = 'I'
	</select>
	<select id="fetchFFMAWBAddedFromScreen" parameterClass="cargo.cms.edi.bo.EdiFFMMsgBO" resultClass="java.lang.String">
		select stragg(stringdelim(edi_ffm_shp.awb_no,',')) from edi_ffm_msg, edi_ffm_shp where edi_ffm_msg.tr_no = edi_ffm_shp.tr_no 
		and edi_ffm_msg.flt_key = #fltKey# and edi_ffm_msg.flt_date = to_date(#fltDate#,'DDMONYY')
		AND si_type = 'S' and edi_ffm_msg.ffm_status = 'P'
	</select>	
	
	<select id="getUnProFFMFlightCarr" parameterClass="cargo.cms.edi.bo.EdiFFMMsgBO" resultClass="java.lang.String">
		select carr_code from flt_opr where flt_key=#fltKey# and SCH_date=#fltDate# AND ROWNUM=1
	</select>
	
	<select id="unProFFMCount" parameterClass="cargo.cms.edi.bo.EdiFFMMsgBO" resultClass="java.lang.String">
		select count(1) from edi_ffm_msg where flt_key = #fltKey# and flt_date = to_date(#fltDate#,'DDMONYY') and ffm_status = 'CONT'
	</select>
	
	<select id="unProFFMList" parameterClass="cargo.cms.edi.bo.EdiFFMMsgBO" resultClass="cargo.cms.edi.bo.EdiFFMMsgBO">
		select TR_NO trNumber, replace(MSG_SEQ_NUM, ':', ',') seqNumber, MSG_VER version, FLT_KEY fltKey, to_char(FLT_DATE,'DDMONYY') fltDate, BRD_POINT unldgPoint,
			 PKG_COMMON.flt_route(FLT_KEY,FLT_DATE, 'A') portOfCall,
			 PKG_COMMON.get_flt_sta(FLT_KEY,FLT_DATE, 'A') as sta
			 from edi_ffm_msg where flt_key = #fltKey# and flt_date = to_date(#fltDate#,'DDMONYY') and ffm_status = 'CONT'
	</select>
	
	<select id="unProTransitionFFMList" parameterClass="cargo.cms.edi.bo.EdiFFMMsgBO" resultClass="cargo.cms.edi.bo.EdiFFMMsgBO">
		 select TR_NO trNumber from trn_ffm_msg where flt_key = #fltKey# and flt_date = to_date(#fltDate#,'DDMONYY') AND BRD_POINT = #unldgPoint# and ffm_status = 'CONT'
	</select>
	
	<update id="updateFFMStatus" parameterClass="cargo.cms.edi.bo.EdiFFMMsgBO" >	
		update edi_ffm_msg set ffm_status = 'UNPRO', LM_DATE = SYSDATE, LM_USER_ID = #LM_USER_ID#, TR_TYPE='UNFFM' where TR_NO = #trNumber#
	</update>
	<update id="updateTransitionFFMStatus" parameterClass="cargo.cms.edi.bo.EdiFFMMsgBO" >	
		update trn_ffm_msg set ffm_status = 'UNPRO', LM_DATE = SYSDATE, LM_USER_ID = #LM_USER_ID# where TR_NO = #trNumber#
	</update>
	
	
	<!--
	==============================================================================================
		END OF Revert Inbound FFM/Flight QUERIES
	==============================================================================================
	-->
	<!-- 
	==============================================================================================
		START OF Enquire CPM QUERIES - Varadaraj Muni 08-NOV-2010
	==============================================================================================
	-->	
	<select id="fetchCPMHeader" parameterClass="cargo.cms.edi.bo.EnquireCPMSearchBO" resultClass="cargo.cms.edi.ei.bo.CPMHeaderBO">
		SELECT OPR.FLT_KEY AS flightKey,TO_CHAR(OPR.SCH_DATE,'DDMONYY') AS flightDate,LOAD_DESK_VER AS versionNumber,SI_RMK AS siRemarks,OPR.ORIG AS origin, OPR.DEST AS destination, 
		CPM.ACFT_REG_NO AS arcftRegNo, OPR.TR_NO AS flighTxnNo,OPR.FLT_TYPE AS flightType,CPM.TR_NO AS trNo FROM FLT_OPR OPR LEFT OUTER JOIN EDI_CPM CPM ON
   		OPR.FLT_KEY = CPM.FLT_KEY AND CPM.FLT_DATE = OPR.SCH_DATE WHERE OPR.FLT_KEY = #fltCarr# ||''|| #fltNo# AND OPR.SCH_DATE = TO_DATE(#fltDate#, 'ddMONyy') AND OPR.FLT_TYPE = 'A'
		<isNotEmpty property="loginCustCode" >
		 AND OPR.RHO_ID=#loginCustCode#
		</isNotEmpty>
		AND (CPM.TR_NO IS NULL OR CPM.TR_NO = (SELECT MAX(TR_NO) FROM EDI_CPM WHERE FLT_KEY = #fltCarr# ||''|| #fltNo# AND FLT_DATE = TO_DATE(#fltDate#, 'ddMONyy') AND ORIG = #brdPoint#))     
		ORDER BY VER_NO DESC
	</select>
	<select id="fetchCPMDetail" parameterClass="cargo.cms.edi.bo.EnquireCPMSearchBO" resultClass="cargo.cms.edi.ei.bo.CPMDetailBO">
		SELECT FLT_KEY AS flightKey,FLT_DATE AS flightDate,VER_NO AS versionNumber,
		ULD_KEY AS uldKey,DEST AS dest,WT AS wt,LOAD_TYPE AS loadCode,LOAD_POS AS loadPos,NVL(SHC1,'') || DECODE(SHC2,NULL,'',','||SHC2) || DECODE(SHC3,NULL,'',','||SHC3)
		|| DECODE(SHC4,NULL,'',','||SHC4) || DECODE(SHC5,NULL,'',','||SHC5) || DECODE(SHC6,NULL,'',','||SHC6) || DECODE(SHC7,NULL,'',','||SHC7) 
    	|| DECODE(SHC8,NULL,'',','||SHC8) || DECODE(SHC9,NULL,'',','||SHC9) AS splHandlingCode1, 
    	(SELECT CODE_DESC FROM MAST_CODE_DTL WHERE CODE = LOAD_TYPE AND CODE_TYPE = 'LOAD_CODE') AS loadTypeDesc,TR_NO as trNo
		FROM EDI_CPM_DTL WHERE FLT_KEY = #fltCarr# || #fltNo# AND FLT_DATE = TO_DATE(#fltDate#, 'ddMONyy')
		AND TR_NO = #trNo# ORDER BY SEQ_NO ASC
	</select>
	<select id="fetchCPMLadingPoints" parameterClass="cargo.cms.edi.bo.EnquireCPMSearchBO" resultClass="cargo.cms.edi.ei.bo.CPMHeaderBO">
		SELECT BRD_POINT,OFF_POINT FROM FLT_OPR_SEG WHERE TR_NO IN (SELECT TR_NO FROM FLT_OPR WHERE FLT_KEY =  #fltCarr# || #fltNo#  AND 
		SCH_DATE=TO_DATE(#fltDate#, 'ddMONyy') AND FLT_TYPE = 'A') AND OFF_POINT='HKG'
	</select>
	<select id="fetchFlightLegOffPoint" parameterClass="cargo.cms.edi.bo.EnquireCPMSearchBO" resultClass="java.lang.String">
		SELECT OFF_POINT FROM FLT_OPR_LEG WHERE OFF_POINT != 'HKG' AND FLT_KEY = #fltCarr# || #fltNo# AND SCH_DATE = TO_DATE(#fltDate#,'DDMONYY') AND BRD_POINT = #brdPoint#
	</select>
	<select id="fetchCPMHeaderOthPort" parameterClass="cargo.cms.edi.bo.EnquireCPMSearchBO" resultClass="cargo.cms.edi.ei.bo.CPMHeaderBO">
		SELECT OPR.FLT_KEY AS flightKey,TO_CHAR(OPR.SCH_DATE,'DDMONYY') AS flightDate,LOAD_DESK_VER AS versionNumber,SI_RMK AS siRemarks,OPR.ORIG AS origin, OPR.DEST AS destination, 
		CPM.ACFT_REG_NO AS arcftRegNo, OPR.TR_NO AS flighTxnNo,OPR.FLT_TYPE AS flightType,CPM.TR_NO AS trNo FROM FLT_OPR OPR LEFT OUTER JOIN EDI_CPM_OTH_PORT CPM ON
   		OPR.FLT_KEY = CPM.FLT_KEY AND OPR.SCH_DATE  = CPM.FLT_DATE WHERE OPR.FLT_KEY = #fltCarr# ||''|| #fltNo# AND OPR.SCH_DATE = TO_DATE(#fltDate#, 'ddMONyy') AND OPR.FLT_TYPE = 'A'
   		<isNotEmpty property="loginCustCode" >
		 AND OPR.RHO_ID=#loginCustCode#
		</isNotEmpty>
   		AND (CPM.TR_NO IS NULL OR CPM.TR_NO = (SELECT MAX(TR_NO) FROM EDI_CPM_OTH_PORT WHERE FLT_KEY = #fltCarr# ||''|| #fltNo# AND 
   		FLT_DATE = TO_DATE(#fltDate#, 'ddMONyy') AND ORIG = #brdPoint#)) 
	</select>
	<select id="fetchCPMDetailOthPort" parameterClass="cargo.cms.edi.bo.EnquireCPMSearchBO" resultClass="cargo.cms.edi.ei.bo.CPMDetailBO">
		SELECT FLT_KEY AS flightKey,FLT_DATE AS flightDate,VER_NO AS versionNumber,
		ULD_KEY AS uldKey,DEST AS dest,WT AS wt,LOAD_TYPE AS loadCode,LOAD_POS AS loadPos,NVL(SHC1,'') || DECODE(SHC2,NULL,'',','||SHC2) || DECODE(SHC3,NULL,'',','||SHC3)
		|| DECODE(SHC4,NULL,'',','||SHC4) || DECODE(SHC5,NULL,'',','||SHC5) || DECODE(SHC6,NULL,'',','||SHC6) || DECODE(SHC7,NULL,'',','||SHC7) 
    	|| DECODE(SHC8,NULL,'',','||SHC8) || DECODE(SHC9,NULL,'',','||SHC9) AS splHandlingCode1, 
    	(SELECT CODE_DESC FROM MAST_CODE_DTL WHERE CODE = LOAD_TYPE AND CODE_TYPE = 'LOAD_CODE') AS loadTypeDesc,TR_NO as trNo
		FROM EDI_CPM_DTL_OTH_PORT WHERE FLT_KEY = #fltCarr# || #fltNo# AND FLT_DATE = TO_DATE(#fltDate#, 'ddMONyy')
		AND TR_NO = #trNo# ORDER BY SEQ_NO ASC
	</select>
	<!--
	==============================================================================================
		END OF Enquire CPM QUERIES
	==============================================================================================
	-->

	<!-- Enquire Telex Msg start -->
	
	<insert id="insAwbEvents" parameterClass="cargo.cms.edi.bo.TelexMessageDetailBO">
		
			INSERT INTO AWB_EVENTS 
			  (AWB_NO, AWB_DATE, EVENT_ID, EVENT_DESC,  TR_NO, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE ) 
			VALUES  
			  (#awbNo#, (select AWB_DATE from AWB where AWB_NO=#awbNo# and rownum=1) ,  #evntId#, (SELECT EVENT_DESC FROM MAST_AWB_EVENTS WHERE EVENT_ID = #evntId#), 
			   AWB_event_SEQ.nextval,  #createdUserId#,  sysdate, #modifiedUserId#,  sysdate)
	</insert>
	<select id="fetchMsg" parameterClass="cargo.cms.edi.bo.EnquireTelexMsgBO" resultClass="cargo.cms.edi.bo.EnquireTelexMsgBO">
		(select 'I' as msgFlow, LOG_IN.MSG_ID as msgId , LOG_IN.MSG_SEQ_NO as msgSeqNo,		
		TO_CHAR( MSG_DATE,'DDMONYY HH24:MI:SS') as msgDate,MSG_DATE as msgDate1, READ as read,
		(SELECT STRAGG(STRINGDELIM(RECIPIENT,' , ')) FROM EDI_MSG_RECIPIENT_IN WHERE MSG_ID = LOG_IN.MSG_ID) as addressee,
		PROCESSED as forward,
		decode(read,null,decode(attach_date,null,decode(PROCESSED,null,'N','Y'),'Y'),'Y') as processed,
		 LM_VER as ver,TO_CHAR( ATTACH_DATE,'DDMONYY') as attachDate, MSG_TITLE as msgHeader,
		FLT_KEY as fltKey,FLT_KEY_2 as fltKey2,FLT_KEY_3 as fltKey3,FLT_KEY_4 as fltKey4,FLT_KEY_5 as fltKey5 ,
		TO_CHAR(FLT_DATE,'DDMONYY') as fltDate,TO_CHAR(FLT_DAT_2,'DDMONYY') as fltDate2,TO_CHAR(FLT_DAT_3,'DDMONYY') as fltDate3,TO_CHAR(FLT_DAT_4,'DDMONYY') as fltDate4
		,TO_CHAR(FLT_DAT_5,'DDMONYY') as fltDate5,
		 REPLACE(REPLACE( SENDER_ID, CHR(10) ), CHR(13) ) as sender,ATTACH_DATE as attachDate,
		DECODE(AWB_NO,NULL,'',SUBSTR(AWB_NO,1,3)||'-'||SUBSTR(AWB_NO,4,8)) 
    ||DECODE(AWB_NO_2,null,'',','||SUBSTR(AWB_NO_2,1,3)||'-'||SUBSTR(AWB_NO_2,4,8)) 
    || DECODE(AWB_NO_3,null,'',','||SUBSTR(AWB_NO_3,1,3)||'-'||SUBSTR(AWB_NO_3,4,8)) 
    ||DECODE(AWB_NO_4,null,'',','||SUBSTR(AWB_NO_4,1,3)||'-'||SUBSTR(AWB_NO_4,4,8))
    || DECODE(AWB_NO_5,null,'',','||SUBSTR(AWB_NO_5,1,3)||'-'||SUBSTR(AWB_NO_5,4,8))   as  awbNo
		from EDI_MSG_LOG_IN LOG_IN
		<isNotEmpty property="addressee" >
		,EDI_MSG_RECIPIENT_IN RCPT_IN
		</isNotEmpty>
		where MSG_TYPE='TLX' 
		<isNotEmpty property="dtFr" >
		<isNotEmpty property="dtTo" >
		and  MSG_DATE BETWEEN TO_DATE(#dtFr#,'DDMONYYHH24MI') AND TO_DATE(#dtTo#,'DDMONYYHH24MI')
		</isNotEmpty>
		</isNotEmpty>	
		<isNotEmpty property="dtFr" >
		<isEmpty property="dtTo" >
		and  MSG_DATE>= TO_DATE(#dtFr#,'DDMONYYHH24MI')
		</isEmpty>
		</isNotEmpty>
		<isEmpty property="dtFr" >
		<isNotEmpty property="dtTo" >
		and TO_DATE(#dtTo#,'DDMONYYHH24MI') > MSG_DATE
		</isNotEmpty>
		</isEmpty>	
		<isNotEmpty property="msgHeader" >
		 and MSG_TITLE=#msgHeader#
		</isNotEmpty>
		<isNotEmpty property="sender" >
		 and SENDER_ID=#sender#
		</isNotEmpty>
		<isNotEmpty property="processed" >
			<isEqual property="processed" 
             compareValue="Y">
              AND (READ='Y' or ATTACH_DATE is not null or PROCESSED='Y')
             </isEqual>
            <isEqual  
             property="processed" 
             compareValue="N">
            	AND (nvl(READ,'N')!='Y' and ATTACH_DATE is null and nvl(PROCESSED,'N')!='Y')
		</isEqual>
		</isNotEmpty>
		<isNotEmpty property="fltKey"   >
			<isNotEmpty property="fltDate" >
			AND (( FLT_KEY=#fltKey# and  FLT_DATE=TO_DATE(#fltDate#,'DDMONYY')) or 
			( FLT_KEY_2=#fltKey# and  FLT_DAT_2=TO_DATE(#fltDate#,'DDMONYY')) or 
			( FLT_KEY_3=#fltKey# and  FLT_DAT_3=TO_DATE(#fltDate#,'DDMONYY')) or 
			( FLT_KEY_4=#fltKey# and  FLT_DAT_4=TO_DATE(#fltDate#,'DDMONYY')) or 
			( FLT_KEY_5=#fltKey# and  FLT_DAT_5=TO_DATE(#fltDate#,'DDMONYY')))
		    </isNotEmpty>
		    <isEmpty  property="fltDate" >
		    	AND ( FLT_KEY=#fltKey# or  FLT_KEY_2=#fltKey# or 
			     FLT_KEY_3=#fltKey# or  FLT_KEY_4=#fltKey# or  FLT_KEY_5=#fltKey#)
		    </isEmpty>
		</isNotEmpty>
		<isEmpty property="fltKey" >
			<isNotEmpty property="fltDate" >
				AND ( FLT_DATE=TO_DATE(#fltDate#,'DDMONYY') or  FLT_DAT_2=TO_DATE(#fltDate#,'DDMONYY') or 
			 FLT_DAT_3=TO_DATE(#fltDate#,'DDMONYY') or 	FLT_DAT_4=TO_DATE(#fltDate#,'DDMONYY') or FLT_DAT_5=TO_DATE(#fltDate#,'DDMONYY'))
			</isNotEmpty>
		</isEmpty>
		<isNotEmpty  property="awbNo">
			AND( AWB_NO=#awbNo# or  AWB_NO_2=#awbNo# or 
			 AWB_NO_3=#awbNo# or  AWB_NO_4=#awbNo# or  AWB_NO_5=#awbNo#)
		</isNotEmpty>
		<isNotEmpty  property="addressee">
		 	 and RCPT_IN.MSG_ID=LOG_IN.MSG_ID and (RCPT_IN.RECIPIENT=#addressee1# or RCPT_IN.RECIPIENT=#addressee2# or RCPT_IN.RECIPIENT=#addressee3#)
		</isNotEmpty>
		
		)
		union
		(select 'O' as msgFlow, LOG_OUT.MSG_ID as msgId , LOG_OUT.MSG_SEQ_NO as msgSeqNo,		
		TO_CHAR( MSG_DATE,'DDMONYY HH24:MI:SS') as msgDate,MSG_DATE as msgDate1, READ as read,
		(SELECT STRAGG(STRINGDELIM(RECIPIENT,' , ')) FROM EDI_MSG_RECIPIENT_OUT WHERE MSG_ID = LOG_OUT.MSG_ID)  as addressee,PROCESSED as forward,
		decode(read,null,decode(attach_date,null,decode(PROCESSED,null,'N','Y'),'Y'),'Y') as processed,
		 LM_VER as ver,TO_CHAR( ATTACH_DATE,'DDMONYY') as attachDate, MSG_TITLE as msgHeader,
		FLT_KEY as fltKey,FLT_KEY_2 as fltKey2,FLT_KEY_3 as fltKey3,FLT_KEY_4 as fltKey4,FLT_KEY_5 as fltKey5 ,
		TO_CHAR(FLT_DATE,'DDMONYY') as fltDate,TO_CHAR(FLT_DAT_2,'DDMONYY') as fltDate2,TO_CHAR(FLT_DAT_3,'DDMONYY') as fltDate3,TO_CHAR(FLT_DAT_4,'DDMONYY') as fltDate4
		,TO_CHAR(FLT_DAT_5,'DDMONYY') as fltDate5,
		 REPLACE(REPLACE( SENDER_ID, CHR(10) ), CHR(13) ) as sender,ATTACH_DATE as attachDate,
		DECODE(AWB_NO,NULL,'',SUBSTR(AWB_NO,1,3)||'-'||SUBSTR(AWB_NO,4,8)) 
    ||DECODE(AWB_NO_2,null,'',','||SUBSTR(AWB_NO_2,1,3)||'-'||SUBSTR(AWB_NO_2,4,8)) 
    || DECODE(AWB_NO_3,null,'',','||SUBSTR(AWB_NO_3,1,3)||'-'||SUBSTR(AWB_NO_3,4,8)) 
    ||DECODE(AWB_NO_4,null,'',','||SUBSTR(AWB_NO_4,1,3)||'-'||SUBSTR(AWB_NO_4,4,8))
    || DECODE(AWB_NO_5,null,'',','||SUBSTR(AWB_NO_5,1,3)||'-'||SUBSTR(AWB_NO_5,4,8))   as  awbNo
		from EDI_MSG_LOG_OUT LOG_OUT
		<isNotEmpty property="addressee" >
			,EDI_MSG_RECIPIENT_OUT RCPT_OUT
		</isNotEmpty>
		where MSG_TYPE='TLX'
		<isNotEmpty property="dtFr" >
		<isNotEmpty property="dtTo" >
		and  MSG_DATE BETWEEN TO_DATE(#dtFr#,'DDMONYYHH24MI') AND TO_DATE(#dtTo#,'DDMONYYHH24MI')
		</isNotEmpty>
		</isNotEmpty>	
		<isNotEmpty property="dtFr" >
		<isEmpty property="dtTo" >
		and  MSG_DATE>= TO_DATE(#dtFr#,'DDMONYYHH24MI')
		</isEmpty>
		</isNotEmpty>
		<isEmpty property="dtFr" >
		<isNotEmpty property="dtTo" >
		and TO_DATE(#dtTo#,'DDMONYYHH24MI') > MSG_DATE
		</isNotEmpty>
		</isEmpty>	
		<isNotEmpty property="msgHeader" >
		 and MSG_TITLE=#msgHeader#
		</isNotEmpty>
		<isNotEmpty property="sender" >
		 and SENDER_ID=#sender#
		</isNotEmpty>
		<isNotEmpty property="processed" >
			<isEqual property="processed" 
             compareValue="Y">
              AND (READ='Y' or ATTACH_DATE is not null or PROCESSED='Y')
             </isEqual>
            <isEqual  
             property="processed" 
             compareValue="N">
            AND (nvl(READ,'N')!='Y' and ATTACH_DATE is null and nvl(PROCESSED,'N')!='Y')
		</isEqual>
		</isNotEmpty>
		<isNotEmpty property="fltKey"   >
			<isNotEmpty property="fltDate" >
			AND (( FLT_KEY=#fltKey# and  FLT_DATE=TO_DATE(#fltDate#,'DDMONYY')) or 
			( FLT_KEY_2=#fltKey# and  FLT_DAT_2=TO_DATE(#fltDate#,'DDMONYY')) or 
			( FLT_KEY_3=#fltKey# and  FLT_DAT_3=TO_DATE(#fltDate#,'DDMONYY')) or 
			( FLT_KEY_4=#fltKey# and  FLT_DAT_4=TO_DATE(#fltDate#,'DDMONYY')) or 
			( FLT_KEY_5=#fltKey# and  FLT_DAT_5=TO_DATE(#fltDate#,'DDMONYY')))
		    </isNotEmpty>
		    <isEmpty  property="fltDate" >
		    	AND ( FLT_KEY=#fltKey# or  FLT_KEY_2=#fltKey# or 
			     FLT_KEY_3=#fltKey# or  FLT_KEY_4=#fltKey# or  FLT_KEY_5=#fltKey#)
		    </isEmpty>
		</isNotEmpty>
		<isEmpty property="fltKey" >
			<isNotEmpty property="fltDate" >
				AND ( FLT_DATE=TO_DATE(#fltDate#,'DDMONYY') or  FLT_DAT_2=TO_DATE(#fltDate#,'DDMONYY') or 
			 FLT_DAT_3=TO_DATE(#fltDate#,'DDMONYY') or 	FLT_DAT_4=TO_DATE(#fltDate#,'DDMONYY') or FLT_DAT_5=TO_DATE(#fltDate#,'DDMONYY'))
			</isNotEmpty>
		</isEmpty>
		<isNotEmpty  property="awbNo">
			AND( AWB_NO=#awbNo# or  AWB_NO_2=#awbNo# or 
			 AWB_NO_3=#awbNo# or  AWB_NO_4=#awbNo# or  AWB_NO_5=#awbNo#)
		</isNotEmpty>
		<isNotEmpty  property="addressee">
			 and RCPT_OUT.MSG_ID=LOG_OUT.MSG_ID and (RCPT_OUT.RECIPIENT=#addressee1# or RCPT_OUT.RECIPIENT=#addressee2# or RCPT_OUT.RECIPIENT=#addressee3#)
		</isNotEmpty>)
		
		<dynamic prepend="ORDER BY ">
           <isNotEmpty property="sortOrder.sortField">
             $sortOrder.sortField$
           </isNotEmpty>
            <isEmpty property="sortOrder.sortField">
             	msgDate1 desc
           </isEmpty>
        </dynamic>
	</select>
	<select id="fetchMsgCOUNT" parameterClass="cargo.cms.edi.bo.EnquireTelexMsgBO" resultClass="java.lang.Integer">
	SELECT count(*) as totalRowCount FROM(
	(select 'I' as msgFlow, LOG_IN.MSG_ID as msgId , LOG_IN.MSG_SEQ_NO as msgSeqNo,		
		TO_CHAR( MSG_DATE,'DDMONYY HH24:MI:SS') as msgDate,MSG_DATE as msgDate1, READ as read,
		(SELECT STRAGG(STRINGDELIM(RECIPIENT,' , ')) FROM EDI_MSG_RECIPIENT_IN WHERE MSG_ID = LOG_IN.MSG_ID)  as addressee,PROCESSED as forward,
		decode(read,null,decode(attach_date,null,decode(PROCESSED,null,'N','Y'),'Y'),'Y') as processed,
		 LM_VER as ver,TO_CHAR( ATTACH_DATE,'DDMONYY') as attachDate, MSG_TITLE as msgHeader,
		FLT_KEY as fltKey,FLT_KEY_2 as fltKey2,FLT_KEY_3 as fltKey3,FLT_KEY_4 as fltKey4,FLT_KEY_5 as fltKey5 ,
		TO_CHAR(FLT_DATE,'DDMONYY') as fltDate,TO_CHAR(FLT_DAT_2,'DDMONYY') as fltDate2,TO_CHAR(FLT_DAT_3,'DDMONYY') as fltDate3,TO_CHAR(FLT_DAT_4,'DDMONYY') as fltDate4
		,TO_CHAR(FLT_DAT_5,'DDMONYY') as fltDate5,
		SENDER_ID as sender,ATTACH_DATE as attachDate,
		DECODE(AWB_NO,NULL,'',SUBSTR(AWB_NO,1,3)||'-'||SUBSTR(AWB_NO,4,8)) 
    ||DECODE(AWB_NO_2,null,'',','||SUBSTR(AWB_NO_2,1,3)||'-'||SUBSTR(AWB_NO_2,4,8)) 
    || DECODE(AWB_NO_3,null,'',','||SUBSTR(AWB_NO_3,1,3)||'-'||SUBSTR(AWB_NO_3,4,8)) 
    ||DECODE(AWB_NO_4,null,'',','||SUBSTR(AWB_NO_4,1,3)||'-'||SUBSTR(AWB_NO_4,4,8))
    || DECODE(AWB_NO_5,null,'',','||SUBSTR(AWB_NO_5,1,3)||'-'||SUBSTR(AWB_NO_5,4,8))   as  awbNo
		from EDI_MSG_LOG_IN LOG_IN
		<isNotEmpty property="addressee" >
			,EDI_MSG_RECIPIENT_IN RCPT_IN
		</isNotEmpty>
		where MSG_TYPE='TLX' 
		<isNotEmpty property="dtFr" >
		<isNotEmpty property="dtTo" >
		and  MSG_DATE BETWEEN TO_DATE(#dtFr#,'DDMONYYHH24MI') AND TO_DATE(#dtTo#,'DDMONYYHH24MI')
		</isNotEmpty>
		</isNotEmpty>	
		<isNotEmpty property="dtFr" >
		<isEmpty property="dtTo" >
		and  MSG_DATE>= TO_DATE(#dtFr#,'DDMONYYHH24MI')
		</isEmpty>
		</isNotEmpty>
		<isEmpty property="dtFr" >
		<isNotEmpty property="dtTo" >
		and TO_DATE(#dtTo#,'DDMONYYHH24MI') > MSG_DATE
		</isNotEmpty>
		</isEmpty>
		<isNotEmpty property="msgHeader" >
		 and MSG_TITLE=#msgHeader#
		</isNotEmpty>
		<isNotEmpty property="sender" >
		 and SENDER_ID=#sender#
		</isNotEmpty>
		<isNotEmpty property="processed" >
			<isEqual property="processed" 
             compareValue="Y">
              AND (READ='Y' or ATTACH_DATE is not null or PROCESSED='Y')
             </isEqual>
            <isEqual  
             property="processed" 
             compareValue="N">
            	AND (nvl(READ,'N')!='Y' and ATTACH_DATE is null and nvl(PROCESSED,'N')!='Y')
		</isEqual>
		</isNotEmpty>
		<isNotEmpty property="fltKey"   >
			<isNotEmpty property="fltDate" >
			AND (( FLT_KEY=#fltKey# and  FLT_DATE=TO_DATE(#fltDate#,'DDMONYY')) or 
			( FLT_KEY_2=#fltKey# and  FLT_DAT_2=TO_DATE(#fltDate#,'DDMONYY')) or 
			( FLT_KEY_3=#fltKey# and  FLT_DAT_3=TO_DATE(#fltDate#,'DDMONYY')) or 
			( FLT_KEY_4=#fltKey# and  FLT_DAT_4=TO_DATE(#fltDate#,'DDMONYY')) or 
			( FLT_KEY_5=#fltKey# and  FLT_DAT_5=TO_DATE(#fltDate#,'DDMONYY')))
		    </isNotEmpty>
		    <isEmpty  property="fltDate" >
		    	AND ( FLT_KEY=#fltKey# or  FLT_KEY_2=#fltKey# or 
			     FLT_KEY_3=#fltKey# or  FLT_KEY_4=#fltKey# or  FLT_KEY_5=#fltKey#)
		    </isEmpty>
		</isNotEmpty>
		<isEmpty property="fltKey" >
			<isNotEmpty property="fltDate" >
				AND ( FLT_DATE=TO_DATE(#fltDate#,'DDMONYY') or  FLT_DAT_2=TO_DATE(#fltDate#,'DDMONYY') or 
			 FLT_DAT_3=TO_DATE(#fltDate#,'DDMONYY') or 	FLT_DAT_4=TO_DATE(#fltDate#,'DDMONYY') or FLT_DAT_5=TO_DATE(#fltDate#,'DDMONYY'))
			</isNotEmpty>
		</isEmpty>
		<isNotEmpty  property="awbNo">
			AND( AWB_NO=#awbNo# or  AWB_NO_2=#awbNo# or 
			 AWB_NO_3=#awbNo# or  AWB_NO_4=#awbNo# or  AWB_NO_5=#awbNo#)
		</isNotEmpty>
		<isNotEmpty  property="addressee">
		 and RCPT_IN.MSG_ID=LOG_IN.MSG_ID and (RCPT_IN.RECIPIENT=#addressee1# or RCPT_IN.RECIPIENT=#addressee2# or RCPT_IN.RECIPIENT=#addressee3#)
		</isNotEmpty>
		)
		union
		(select 'O' as msgFlow, LOG_OUT.MSG_ID as msgId , LOG_OUT.MSG_SEQ_NO as msgSeqNo,		
		TO_CHAR( MSG_DATE,'DDMONYY HH24:MI:SS') as msgDate,MSG_DATE as msgDate1, READ as read,
		(SELECT STRAGG(STRINGDELIM(RECIPIENT,' , ')) FROM EDI_MSG_RECIPIENT_OUT WHERE MSG_ID = LOG_OUT.MSG_ID)  as addressee,PROCESSED as forward,
		decode(read,null,decode(attach_date,null,decode(PROCESSED,null,'N','Y'),'Y'),'Y') as processed,
		 LM_VER as ver,TO_CHAR( ATTACH_DATE,'DDMONYY') as attachDate, MSG_TITLE as msgHeader,
		FLT_KEY as fltKey,FLT_KEY_2 as fltKey2,FLT_KEY_3 as fltKey3,FLT_KEY_4 as fltKey4,FLT_KEY_5 as fltKey5 ,
		TO_CHAR(FLT_DATE,'DDMONYY') as fltDate,TO_CHAR(FLT_DAT_2,'DDMONYY') as fltDate2,TO_CHAR(FLT_DAT_3,'DDMONYY') as fltDate3,TO_CHAR(FLT_DAT_4,'DDMONYY') as fltDate4
		,TO_CHAR(FLT_DAT_5,'DDMONYY') as fltDate5,
		SENDER_ID as sender,ATTACH_DATE as attachDate,
		DECODE(AWB_NO,NULL,'',SUBSTR(AWB_NO,1,3)||'-'||SUBSTR(AWB_NO,4,8)) 
    ||DECODE(AWB_NO_2,null,'',','||SUBSTR(AWB_NO_2,1,3)||'-'||SUBSTR(AWB_NO_2,4,8)) 
    || DECODE(AWB_NO_3,null,'',','||SUBSTR(AWB_NO_3,1,3)||'-'||SUBSTR(AWB_NO_3,4,8)) 
    ||DECODE(AWB_NO_4,null,'',','||SUBSTR(AWB_NO_4,1,3)||'-'||SUBSTR(AWB_NO_4,4,8))
    || DECODE(AWB_NO_5,null,'',','||SUBSTR(AWB_NO_5,1,3)||'-'||SUBSTR(AWB_NO_5,4,8))   as  awbNo
		from EDI_MSG_LOG_OUT LOG_OUT
		<isNotEmpty property="addressee" >
		,EDI_MSG_RECIPIENT_OUT RCPT_OUT
		</isNotEmpty>
		where MSG_TYPE='TLX'
		<isNotEmpty property="dtFr" >
		<isNotEmpty property="dtTo" >
		and  MSG_DATE BETWEEN TO_DATE(#dtFr#,'DDMONYYHH24MI') AND TO_DATE(#dtTo#,'DDMONYYHH24MI')
		</isNotEmpty>
		</isNotEmpty>	
		<isNotEmpty property="dtFr" >
		<isEmpty property="dtTo" >
		and  MSG_DATE>= TO_DATE(#dtFr#,'DDMONYYHH24MI')
		</isEmpty>
		</isNotEmpty>
		<isEmpty property="dtFr" >
		<isNotEmpty property="dtTo" >
		and TO_DATE(#dtTo#,'DDMONYYHH24MI') > MSG_DATE
		</isNotEmpty>
		</isEmpty>
		<isNotEmpty property="msgHeader" >
		 and MSG_TITLE=#msgHeader#
		</isNotEmpty>
		<isNotEmpty property="sender" >
		 and SENDER_ID=#sender#
		</isNotEmpty>
		<isNotEmpty property="processed" >
			<isEqual property="processed" 
             compareValue="Y">
              AND (READ='Y' or ATTACH_DATE is not null or PROCESSED='Y')
             </isEqual>
            <isEqual  
             property="processed" 
             compareValue="N">
            AND (nvl(READ,'N')!='Y' and ATTACH_DATE is null and nvl(PROCESSED,'N')!='Y')
		</isEqual>
		</isNotEmpty>
		<isNotEmpty property="fltKey"   >
			<isNotEmpty property="fltDate" >
			AND (( FLT_KEY=#fltKey# and  FLT_DATE=TO_DATE(#fltDate#,'DDMONYY')) or 
			( FLT_KEY_2=#fltKey# and  FLT_DAT_2=TO_DATE(#fltDate#,'DDMONYY')) or 
			( FLT_KEY_3=#fltKey# and  FLT_DAT_3=TO_DATE(#fltDate#,'DDMONYY')) or 
			( FLT_KEY_4=#fltKey# and  FLT_DAT_4=TO_DATE(#fltDate#,'DDMONYY')) or 
			( FLT_KEY_5=#fltKey# and  FLT_DAT_5=TO_DATE(#fltDate#,'DDMONYY')))
		    </isNotEmpty>
		    <isEmpty  property="fltDate" >
		    	AND ( FLT_KEY=#fltKey# or  FLT_KEY_2=#fltKey# or 
			     FLT_KEY_3=#fltKey# or  FLT_KEY_4=#fltKey# or  FLT_KEY_5=#fltKey#)
		    </isEmpty>
		</isNotEmpty>
		<isEmpty property="fltKey" >
			<isNotEmpty property="fltDate" >
				AND ( FLT_DATE=TO_DATE(#fltDate#,'DDMONYY') or  FLT_DAT_2=TO_DATE(#fltDate#,'DDMONYY') or 
			 FLT_DAT_3=TO_DATE(#fltDate#,'DDMONYY') or 	FLT_DAT_4=TO_DATE(#fltDate#,'DDMONYY') or FLT_DAT_5=TO_DATE(#fltDate#,'DDMONYY'))
			</isNotEmpty>
		</isEmpty>
		<isNotEmpty  property="awbNo">
			AND( AWB_NO=#awbNo# or  AWB_NO_2=#awbNo# or 
			 AWB_NO_3=#awbNo# or  AWB_NO_4=#awbNo# or  AWB_NO_5=#awbNo#)
		</isNotEmpty>
		<isNotEmpty  property="addressee">
		 	and RCPT_OUT.MSG_ID=LOG_OUT.MSG_ID and (RCPT_OUT.RECIPIENT=#addressee1# or RCPT_OUT.RECIPIENT=#addressee2# or RCPT_OUT.RECIPIENT=#addressee3#)
		</isNotEmpty>
		)
	)
	</select>
	<select id="fetchInMsg" parameterClass="cargo.cms.edi.bo.EnquireTelexMsgBO" resultClass="cargo.cms.edi.bo.EnquireTelexMsgBO">
		select 'I' as msgFlow, LOG_IN.MSG_ID as msgId , LOG_IN.MSG_SEQ_NO as msgSeqNo,		
		TO_CHAR( MSG_DATE,'DDMONYY HH24:MI:SS') as msgDate,MSG_DATE as msgDate1, READ as read,
		(SELECT STRAGG(STRINGDELIM(RECIPIENT,' , ')) FROM EDI_MSG_RECIPIENT_IN WHERE MSG_ID = LOG_IN.MSG_ID) as addressee,
		PROCESSED as forward,
		decode(read,null,decode(attach_date,null,decode(PROCESSED,null,'N','Y'),'Y'),'Y') as processed,
		 LM_VER as ver,TO_CHAR( ATTACH_DATE,'DDMONYY') as attachDate, MSG_TITLE as msgHeader,
		FLT_KEY as fltKey,FLT_KEY_2 as fltKey2,FLT_KEY_3 as fltKey3,FLT_KEY_4 as fltKey4,FLT_KEY_5 as fltKey5 ,
		TO_CHAR(FLT_DATE,'DDMONYY') as fltDate,TO_CHAR(FLT_DAT_2,'DDMONYY') as fltDate2,TO_CHAR(FLT_DAT_3,'DDMONYY') as fltDate3,TO_CHAR(FLT_DAT_4,'DDMONYY') as fltDate4
		,TO_CHAR(FLT_DAT_5,'DDMONYY') as fltDate5,
		REPLACE(REPLACE( SENDER_ID, CHR(10) ), CHR(13) ) as sender,ATTACH_DATE as attachDate,
		DECODE(AWB_NO,NULL,'',SUBSTR(AWB_NO,1,3)||'-'||SUBSTR(AWB_NO,4,8)) 
    ||DECODE(AWB_NO_2,null,'',','||SUBSTR(AWB_NO_2,1,3)||'-'||SUBSTR(AWB_NO_2,4,8)) 
    || DECODE(AWB_NO_3,null,'',','||SUBSTR(AWB_NO_3,1,3)||'-'||SUBSTR(AWB_NO_3,4,8)) 
    ||DECODE(AWB_NO_4,null,'',','||SUBSTR(AWB_NO_4,1,3)||'-'||SUBSTR(AWB_NO_4,4,8))
    || DECODE(AWB_NO_5,null,'',','||SUBSTR(AWB_NO_5,1,3)||'-'||SUBSTR(AWB_NO_5,4,8))   as  awbNo
		from EDI_MSG_LOG_IN LOG_IN
		<isNotEmpty property="addressee" >
		,EDI_MSG_RECIPIENT_IN RCPT_IN
		</isNotEmpty>
		where MSG_TYPE='TLX' 
		<isNotEmpty property="dtFr" >
		<isNotEmpty property="dtTo" >
		and  MSG_DATE BETWEEN TO_DATE(#dtFr#,'DDMONYYHH24MI') AND TO_DATE(#dtTo#,'DDMONYYHH24MI')
		</isNotEmpty>
		</isNotEmpty>	
		<isNotEmpty property="dtFr" >
		<isEmpty property="dtTo" >
		and  MSG_DATE>= TO_DATE(#dtFr#,'DDMONYYHH24MI')
		</isEmpty>
		</isNotEmpty>
		<isEmpty property="dtFr" >
		<isNotEmpty property="dtTo" >
		and TO_DATE(#dtTo#,'DDMONYYHH24MI') > MSG_DATE
		</isNotEmpty>	
		</isEmpty>
		<isNotEmpty property="msgHeader" >
		 and MSG_TITLE=#msgHeader#
		</isNotEmpty>
		<isNotEmpty property="sender" >
		 and SENDER_ID=#sender#
		</isNotEmpty>
		<isNotEmpty property="processed" >
			<isEqual property="processed" 
             compareValue="Y">
              AND (READ='Y' or ATTACH_DATE is not null or PROCESSED='Y')
             </isEqual>
            <isEqual  
             property="processed" 
             compareValue="N">
            	AND (nvl(READ,'N')!='Y' and ATTACH_DATE is null and nvl(PROCESSED,'N')!='Y')
		</isEqual>
		</isNotEmpty>
		<isNotEmpty property="fltKey"   >
			<isNotEmpty property="fltDate" >
			AND (( FLT_KEY=#fltKey# and  FLT_DATE=TO_DATE(#fltDate#,'DDMONYY')) or 
			( FLT_KEY_2=#fltKey# and  FLT_DAT_2=TO_DATE(#fltDate#,'DDMONYY')) or 
			( FLT_KEY_3=#fltKey# and  FLT_DAT_3=TO_DATE(#fltDate#,'DDMONYY')) or 
			( FLT_KEY_4=#fltKey# and  FLT_DAT_4=TO_DATE(#fltDate#,'DDMONYY')) or 
			( FLT_KEY_5=#fltKey# and  FLT_DAT_5=TO_DATE(#fltDate#,'DDMONYY')))
		    </isNotEmpty>
		    <isEmpty  property="fltDate" >
		    	AND ( FLT_KEY=#fltKey# or  FLT_KEY_2=#fltKey# or 
			     FLT_KEY_3=#fltKey# or  FLT_KEY_4=#fltKey# or  FLT_KEY_5=#fltKey#)
		    </isEmpty>
		</isNotEmpty>
		<isEmpty property="fltKey" >
			<isNotEmpty property="fltDate" >
				AND ( FLT_DATE=TO_DATE(#fltDate#,'DDMONYY') or  FLT_DAT_2=TO_DATE(#fltDate#,'DDMONYY') or 
			 FLT_DAT_3=TO_DATE(#fltDate#,'DDMONYY') or 	FLT_DAT_4=TO_DATE(#fltDate#,'DDMONYY') or FLT_DAT_5=TO_DATE(#fltDate#,'DDMONYY'))
			</isNotEmpty>
		</isEmpty>
		<isNotEmpty  property="awbNo">
			AND( AWB_NO=#awbNo# or  AWB_NO_2=#awbNo# or 
			 AWB_NO_3=#awbNo# or  AWB_NO_4=#awbNo# or  AWB_NO_5=#awbNo#)
		</isNotEmpty>
		<isNotEmpty  property="addressee">
		 	 and RCPT_IN.MSG_ID=LOG_IN.MSG_ID and (RCPT_IN.RECIPIENT=#addressee1# or RCPT_IN.RECIPIENT=#addressee2# or RCPT_IN.RECIPIENT=#addressee3#)
		</isNotEmpty>
		<dynamic prepend="ORDER BY ">
           <isNotEmpty property="sortOrder.sortField">
             $sortOrder.sortField$
           </isNotEmpty>
           <isEmpty property="sortOrder.sortField">
             	msgDate1 desc
           </isEmpty>
        </dynamic>
	</select>
	<select id="fetchInMsgCOUNT" parameterClass="cargo.cms.edi.bo.EnquireTelexMsgBO" resultClass="java.lang.Integer">
		SELECT count(*) as totalRowCount FROM(
		select 'I' as msgFlow, LOG_IN.MSG_ID as msgId , LOG_IN.MSG_SEQ_NO as msgSeqNo,		
		TO_CHAR( MSG_DATE,'DDMONYY HH24:MI:SS') as msgDate,MSG_DATE as msgDate1, READ as read,
		(SELECT STRAGG(STRINGDELIM(RECIPIENT,' , ')) FROM EDI_MSG_RECIPIENT_IN WHERE MSG_ID = LOG_IN.MSG_ID)  as addressee,PROCESSED as forward,
		decode(read,null,decode(attach_date,null,decode(PROCESSED,null,'N','Y'),'Y'),'Y') as processed,
		 LM_VER as ver,TO_CHAR( ATTACH_DATE,'DDMONYY') as attachDate, MSG_TITLE as msgHeader,
		FLT_KEY as fltKey,FLT_KEY_2 as fltKey2,FLT_KEY_3 as fltKey3,FLT_KEY_4 as fltKey4,FLT_KEY_5 as fltKey5 ,
		TO_CHAR(FLT_DATE,'DDMONYY') as fltDate,TO_CHAR(FLT_DAT_2,'DDMONYY') as fltDate2,TO_CHAR(FLT_DAT_3,'DDMONYY') as fltDate3,TO_CHAR(FLT_DAT_4,'DDMONYY') as fltDate4
		,TO_CHAR(FLT_DAT_5,'DDMONYY') as fltDate5,
		SENDER_ID as sender,ATTACH_DATE as attachDate,
		DECODE(AWB_NO,NULL,'',SUBSTR(AWB_NO,1,3)||'-'||SUBSTR(AWB_NO,4,8)) 
    ||DECODE(AWB_NO_2,null,'',','||SUBSTR(AWB_NO_2,1,3)||'-'||SUBSTR(AWB_NO_2,4,8)) 
    || DECODE(AWB_NO_3,null,'',','||SUBSTR(AWB_NO_3,1,3)||'-'||SUBSTR(AWB_NO_3,4,8)) 
    ||DECODE(AWB_NO_4,null,'',','||SUBSTR(AWB_NO_4,1,3)||'-'||SUBSTR(AWB_NO_4,4,8))
    || DECODE(AWB_NO_5,null,'',','||SUBSTR(AWB_NO_5,1,3)||'-'||SUBSTR(AWB_NO_5,4,8))   as  awbNo
		from EDI_MSG_LOG_IN LOG_IN
		<isNotEmpty property="addressee" >
		,EDI_MSG_RECIPIENT_IN RCPT_IN
		</isNotEmpty>
		where MSG_TYPE='TLX' 
		<isNotEmpty property="dtFr" >
		<isNotEmpty property="dtTo" >
		and  MSG_DATE BETWEEN TO_DATE(#dtFr#,'DDMONYYHH24MI') AND TO_DATE(#dtTo#,'DDMONYYHH24MI')
		</isNotEmpty>
		</isNotEmpty>	
		<isNotEmpty property="dtFr" >
		<isEmpty property="dtTo" >
		and  MSG_DATE>= TO_DATE(#dtFr#,'DDMONYYHH24MI')
		</isEmpty>
		</isNotEmpty>
		<isEmpty property="dtFr" >
		<isNotEmpty property="dtTo" >
		and TO_DATE(#dtTo#,'DDMONYYHH24MI') > MSG_DATE
		</isNotEmpty>
		</isEmpty>
		<isNotEmpty property="msgHeader" >
		 and MSG_TITLE=#msgHeader#
		</isNotEmpty>
		<isNotEmpty property="sender" >
		 and SENDER_ID=#sender#
		</isNotEmpty>
		<isNotEmpty property="processed" >
			<isEqual property="processed" 
             compareValue="Y">
              AND (READ='Y' or ATTACH_DATE is not null or PROCESSED='Y')
             </isEqual>
            <isEqual  
             property="processed" 
             compareValue="N">
            	AND (nvl(READ,'N')!='Y' and ATTACH_DATE is null and nvl(PROCESSED,'N')!='Y')
		</isEqual>
		</isNotEmpty>
		<isNotEmpty property="fltKey"   >
			<isNotEmpty property="fltDate" >
			AND (( FLT_KEY=#fltKey# and  FLT_DATE=TO_DATE(#fltDate#,'DDMONYY')) or 
			( FLT_KEY_2=#fltKey# and  FLT_DAT_2=TO_DATE(#fltDate#,'DDMONYY')) or 
			( FLT_KEY_3=#fltKey# and  FLT_DAT_3=TO_DATE(#fltDate#,'DDMONYY')) or 
			( FLT_KEY_4=#fltKey# and  FLT_DAT_4=TO_DATE(#fltDate#,'DDMONYY')) or 
			( FLT_KEY_5=#fltKey# and  FLT_DAT_5=TO_DATE(#fltDate#,'DDMONYY')))
		    </isNotEmpty>
		    <isEmpty  property="fltDate" >
		    	AND ( FLT_KEY=#fltKey# or  FLT_KEY_2=#fltKey# or 
			     FLT_KEY_3=#fltKey# or  FLT_KEY_4=#fltKey# or  FLT_KEY_5=#fltKey#)
		    </isEmpty>
		</isNotEmpty>
		<isEmpty property="fltKey" >
			<isNotEmpty property="fltDate" >
				AND ( FLT_DATE=TO_DATE(#fltDate#,'DDMONYY') or  FLT_DAT_2=TO_DATE(#fltDate#,'DDMONYY') or 
			 FLT_DAT_3=TO_DATE(#fltDate#,'DDMONYY') or 	FLT_DAT_4=TO_DATE(#fltDate#,'DDMONYY') or FLT_DAT_5=TO_DATE(#fltDate#,'DDMONYY'))
			</isNotEmpty>
		</isEmpty>
		<isNotEmpty  property="awbNo">
			AND( AWB_NO=#awbNo# or  AWB_NO_2=#awbNo# or 
			 AWB_NO_3=#awbNo# or  AWB_NO_4=#awbNo# or  AWB_NO_5=#awbNo#)
		</isNotEmpty>
		<isNotEmpty  property="addressee">
		 and RCPT_IN.MSG_ID=LOG_IN.MSG_ID and (RCPT_IN.RECIPIENT=#addressee1# or RCPT_IN.RECIPIENT=#addressee2# or RCPT_IN.RECIPIENT=#addressee3#)
		</isNotEmpty>
		)
	</select>
	<select id="fetchOutMsg" parameterClass="cargo.cms.edi.bo.EnquireTelexMsgBO" resultClass="cargo.cms.edi.bo.EnquireTelexMsgBO">
		select 'O' as msgFlow, LOG_OUT.MSG_ID as msgId , LOG_OUT.MSG_SEQ_NO as msgSeqNo,		
		TO_CHAR( MSG_DATE,'DDMONYY HH24:MI:SS') as msgDate,MSG_DATE as msgDate1, READ as read,
		(SELECT STRAGG(STRINGDELIM(RECIPIENT,' , ')) FROM EDI_MSG_RECIPIENT_OUT WHERE MSG_ID = LOG_OUT.MSG_ID)  as addressee,
		decode(read,null,decode(attach_date,null,decode(PROCESSED,null,'N','Y'),'Y'),'Y') as processed,
		 LM_VER as ver,TO_CHAR( ATTACH_DATE,'DDMONYY') as attachDate, MSG_TITLE as msgHeader,
		FLT_KEY as fltKey,FLT_KEY_2 as fltKey2,FLT_KEY_3 as fltKey3,FLT_KEY_4 as fltKey4,FLT_KEY_5 as fltKey5 ,PROCESSED as forward,
		TO_CHAR(FLT_DATE,'DDMONYY') as fltDate,TO_CHAR(FLT_DAT_2,'DDMONYY') as fltDate2,TO_CHAR(FLT_DAT_3,'DDMONYY') as fltDate3,TO_CHAR(FLT_DAT_4,'DDMONYY') as fltDate4
		,TO_CHAR(FLT_DAT_5,'DDMONYY') as fltDate5,
		REPLACE(REPLACE( SENDER_ID, CHR(10) ), CHR(13) ) as sender,ATTACH_DATE as attachDate,
		DECODE(AWB_NO,NULL,'',SUBSTR(AWB_NO,1,3)||'-'||SUBSTR(AWB_NO,4,8)) 
    ||DECODE(AWB_NO_2,null,'',','||SUBSTR(AWB_NO_2,1,3)||'-'||SUBSTR(AWB_NO_2,4,8)) 
    || DECODE(AWB_NO_3,null,'',','||SUBSTR(AWB_NO_3,1,3)||'-'||SUBSTR(AWB_NO_3,4,8)) 
    ||DECODE(AWB_NO_4,null,'',','||SUBSTR(AWB_NO_4,1,3)||'-'||SUBSTR(AWB_NO_4,4,8))
    || DECODE(AWB_NO_5,null,'',','||SUBSTR(AWB_NO_5,1,3)||'-'||SUBSTR(AWB_NO_5,4,8))  as  awbNo
		from EDI_MSG_LOG_OUT LOG_OUT
		<isNotEmpty property="addressee" >
		,EDI_MSG_RECIPIENT_OUT RCPT_OUT
		</isNotEmpty>
		where MSG_TYPE='TLX'
		<isNotEmpty property="dtFr" >
			<isNotEmpty property="dtTo" >
				and  MSG_DATE BETWEEN TO_DATE(#dtFr#,'DDMONYYHH24MI') AND TO_DATE(#dtTo#,'DDMONYYHH24MI')
			</isNotEmpty>
		</isNotEmpty>	
		<isNotEmpty property="dtFr" >
			<isEmpty property="dtTo" >
				and  MSG_DATE>= TO_DATE(#dtFr#,'DDMONYYHH24MI')
			</isEmpty>
		</isNotEmpty>
		<isEmpty property="dtFr" >
			<isNotEmpty property="dtTo" >
				and TO_DATE(#dtTo#,'DDMONYYHH24MI') > MSG_DATE
			</isNotEmpty>
		</isEmpty>	
		<isNotEmpty property="msgHeader" >
		 and MSG_TITLE=#msgHeader#
		</isNotEmpty>
		<isNotEmpty property="sender" >
		 and SENDER_ID=#sender#
		</isNotEmpty>
		<isNotEmpty property="processed" >
			<isEqual property="processed" 
             compareValue="Y">
              AND (READ='Y' or ATTACH_DATE is not null or PROCESSED='Y')
             </isEqual>
            <isEqual  
             property="processed" 
             compareValue="N">
            AND (nvl(READ,'N')!='Y' and ATTACH_DATE is null and nvl(PROCESSED,'N')!='Y')
		</isEqual>
		</isNotEmpty>
		<isNotEmpty property="fltKey"   >
			<isNotEmpty property="fltDate" >
			AND (( FLT_KEY=#fltKey# and  FLT_DATE=TO_DATE(#fltDate#,'DDMONYY')) or 
			( FLT_KEY_2=#fltKey# and  FLT_DAT_2=TO_DATE(#fltDate#,'DDMONYY')) or 
			( FLT_KEY_3=#fltKey# and  FLT_DAT_3=TO_DATE(#fltDate#,'DDMONYY')) or 
			( FLT_KEY_4=#fltKey# and  FLT_DAT_4=TO_DATE(#fltDate#,'DDMONYY')) or 
			( FLT_KEY_5=#fltKey# and  FLT_DAT_5=TO_DATE(#fltDate#,'DDMONYY')))
		    </isNotEmpty>
		    <isEmpty  property="fltDate" >
		    	AND ( FLT_KEY=#fltKey# or  FLT_KEY_2=#fltKey# or 
			     FLT_KEY_3=#fltKey# or  FLT_KEY_4=#fltKey# or  FLT_KEY_5=#fltKey#)
		    </isEmpty>
		</isNotEmpty>
		<isEmpty property="fltKey" >
			<isNotEmpty property="fltDate" >
				AND ( FLT_DATE=TO_DATE(#fltDate#,'DDMONYY') or  FLT_DAT_2=TO_DATE(#fltDate#,'DDMONYY') or 
			 FLT_DAT_3=TO_DATE(#fltDate#,'DDMONYY') or 	FLT_DAT_4=TO_DATE(#fltDate#,'DDMONYY') or FLT_DAT_5=TO_DATE(#fltDate#,'DDMONYY'))
			</isNotEmpty>
		</isEmpty>
		<isNotEmpty  property="awbNo">
			AND( AWB_NO=#awbNo# or  AWB_NO_2=#awbNo# or 
			 AWB_NO_3=#awbNo# or  AWB_NO_4=#awbNo# or  AWB_NO_5=#awbNo#)
		</isNotEmpty>
		<isNotEmpty  property="addressee">
		 and RCPT_OUT.MSG_ID=LOG_OUT.MSG_ID and (RCPT_OUT.RECIPIENT=#addressee1# or RCPT_OUT.RECIPIENT=#addressee2# or RCPT_OUT.RECIPIENT=#addressee3#)
		</isNotEmpty>
		<dynamic prepend="ORDER BY ">
           <isNotEmpty property="sortOrder.sortField">
             $sortOrder.sortField$
           </isNotEmpty>
           <isEmpty property="sortOrder.sortField">
             	msgDate1 desc
           </isEmpty>
        </dynamic>
	</select>
	<select id="fetchOutMsgCOUNT" parameterClass="cargo.cms.edi.bo.EnquireTelexMsgBO" resultClass="java.lang.Integer">
		SELECT count(*) as totalRowCount FROM
		 (
		select 'O' as msgFlow, LOG_OUT.MSG_ID as msgId , LOG_OUT.MSG_SEQ_NO as msgSeqNo,		
		TO_CHAR( MSG_DATE,'DDMONYY HH24:MI:SS') as msgDate, MSG_DATE as msgDate1,READ as read,
		(SELECT STRAGG(STRINGDELIM(RECIPIENT,' , ')) FROM EDI_MSG_RECIPIENT_OUT WHERE MSG_ID = LOG_OUT.MSG_ID)  as addressee,
		decode(read,null,decode(attach_date,null,decode(PROCESSED,null,'N','Y'),'Y'),'Y') as processed,
		 LM_VER as ver,TO_CHAR( ATTACH_DATE,'DDMONYY') as attachDate, MSG_TITLE as msgHeader,
		FLT_KEY as fltKey,FLT_KEY_2 as fltKey2,FLT_KEY_3 as fltKey3,FLT_KEY_4 as fltKey4,FLT_KEY_5 as fltKey5 ,PROCESSED as forward,
		TO_CHAR(FLT_DATE,'DDMONYY') as fltDate,TO_CHAR(FLT_DAT_2,'DDMONYY') as fltDate2,TO_CHAR(FLT_DAT_3,'DDMONYY') as fltDate3,TO_CHAR(FLT_DAT_4,'DDMONYY') as fltDate4
		,TO_CHAR(FLT_DAT_5,'DDMONYY') as fltDate5,
		SENDER_ID as sender,ATTACH_DATE as attachDate,
		DECODE(AWB_NO,NULL,'',SUBSTR(AWB_NO,1,3)||'-'||SUBSTR(AWB_NO,4,8)) 
    ||DECODE(AWB_NO_2,null,'',','||SUBSTR(AWB_NO_2,1,3)||'-'||SUBSTR(AWB_NO_2,4,8)) 
    || DECODE(AWB_NO_3,null,'',','||SUBSTR(AWB_NO_3,1,3)||'-'||SUBSTR(AWB_NO_3,4,8)) 
    ||DECODE(AWB_NO_4,null,'',','||SUBSTR(AWB_NO_4,1,3)||'-'||SUBSTR(AWB_NO_4,4,8))
    || DECODE(AWB_NO_5,null,'',','||SUBSTR(AWB_NO_5,1,3)||'-'||SUBSTR(AWB_NO_5,4,8))  as  awbNo		 
		from EDI_MSG_LOG_OUT LOG_OUT
		<isNotEmpty property="addressee" >
		,EDI_MSG_RECIPIENT_OUT RCPT_OUT
		</isNotEmpty>
		where MSG_TYPE='TLX'
		<isNotEmpty property="dtFr" >
		<isNotEmpty property="dtTo" >
		and  MSG_DATE BETWEEN TO_DATE(#dtFr#,'DDMONYYHH24MI') AND TO_DATE(#dtTo#,'DDMONYYHH24MI')
		</isNotEmpty>
		</isNotEmpty>	
		<isNotEmpty property="dtFr" >
		<isEmpty property="dtTo" >
		and  MSG_DATE>= TO_DATE(#dtFr#,'DDMONYYHH24MI')
		</isEmpty>
		</isNotEmpty>
		<isEmpty property="dtFr" >
		<isNotEmpty property="dtTo" >
		and TO_DATE(#dtTo#,'DDMONYYHH24MI') > MSG_DATE
		</isNotEmpty>
		</isEmpty>	
		<isNotEmpty property="msgHeader" >
		 and MSG_TITLE=#msgHeader#
		</isNotEmpty>
		<isNotEmpty property="sender" >
		 and SENDER_ID=#sender#
		</isNotEmpty>
		<isNotEmpty property="processed" >
			<isEqual property="processed" 
             compareValue="Y">
              AND (READ='Y' or ATTACH_DATE is not null or PROCESSED='Y')
             </isEqual>
            <isEqual  
             property="processed" 
             compareValue="N">
            AND (nvl(READ,'N')!='Y' and ATTACH_DATE is null and nvl(PROCESSED,'N')!='Y')
		</isEqual>
		</isNotEmpty>
		<isNotEmpty property="fltKey"   >
			<isNotEmpty property="fltDate" >
			AND (( FLT_KEY=#fltKey# and  FLT_DATE=TO_DATE(#fltDate#,'DDMONYY')) or 
			( FLT_KEY_2=#fltKey# and  FLT_DAT_2=TO_DATE(#fltDate#,'DDMONYY')) or 
			( FLT_KEY_3=#fltKey# and  FLT_DAT_3=TO_DATE(#fltDate#,'DDMONYY')) or 
			( FLT_KEY_4=#fltKey# and  FLT_DAT_4=TO_DATE(#fltDate#,'DDMONYY')) or 
			( FLT_KEY_5=#fltKey# and  FLT_DAT_5=TO_DATE(#fltDate#,'DDMONYY')))
		    </isNotEmpty>
		    <isEmpty  property="fltDate" >
		    	AND ( FLT_KEY=#fltKey# or  FLT_KEY_2=#fltKey# or 
			     FLT_KEY_3=#fltKey# or  FLT_KEY_4=#fltKey# or  FLT_KEY_5=#fltKey#)
		    </isEmpty>
		</isNotEmpty>
		<isEmpty property="fltKey" >
			<isNotEmpty property="fltDate" >
				AND ( FLT_DATE=TO_DATE(#fltDate#,'DDMONYY') or  FLT_DAT_2=TO_DATE(#fltDate#,'DDMONYY') or 
			 FLT_DAT_3=TO_DATE(#fltDate#,'DDMONYY') or 	FLT_DAT_4=TO_DATE(#fltDate#,'DDMONYY') or FLT_DAT_5=TO_DATE(#fltDate#,'DDMONYY'))
			</isNotEmpty>
		</isEmpty>
		<isNotEmpty  property="awbNo">
			AND( AWB_NO=#awbNo# or  AWB_NO_2=#awbNo# or 
			 AWB_NO_3=#awbNo# or  AWB_NO_4=#awbNo# or  AWB_NO_5=#awbNo#)
		</isNotEmpty>
		<isNotEmpty  property="addressee">
		 	and RCPT_OUT.MSG_ID=LOG_OUT.MSG_ID and (RCPT_OUT.RECIPIENT=#addressee1# or RCPT_OUT.RECIPIENT=#addressee2# or RCPT_OUT.RECIPIENT=#addressee3#)
		</isNotEmpty>
		)
	</select>
	<update id="inMsgAttach" parameterClass="cargo.cms.edi.bo.TelexMessageDetailBO" >	
		update EDI_MSG_LOG_IN set FLT_KEY=#fltKey1#, FLT_DATE=TO_date(#fltDate1#,'DDMONYY'),
		FLT_KEY_2=#fltKey2#, FLT_DAT_2=TO_DATE(#fltDate2#,'DDMONYY'),
		FLT_KEY_3=#fltKey3#, FLT_DAT_3=TO_DATE(#fltDate3#,'DDMONYY'),
		FLT_KEY_4=#fltKey4#, FLT_DAT_4=TO_DATE(#fltDate4#,'DDMONYY'),
		FLT_KEY_5=#fltKey5#, FLT_DAT_5=TO_DATE(#fltDate5#,'DDMONYY'),ATTACH_DATE=sysdate,
		AWB_NO=#awbNo#,AWB_NO_2=#awbNo2#,AWB_NO_3=#awbNo3#,AWB_NO_4=#awbNo4#,AWB_NO_5=#awbNo5#
		where MSG_ID =#msgId#  and MSG_SEQ_NO  =  #msgSeqNo#
	</update>
	<update id="outMsgAttach" parameterClass="cargo.cms.edi.bo.TelexMessageDetailBO" >	
		update EDI_MSG_LOG_OUT set FLT_KEY=#fltKey1#, FLT_DATE=TO_date(#fltDate1#,'DDMONYY'),
		FLT_KEY_2=#fltKey2#, FLT_DAT_2=TO_date(#fltDate2#,'DDMONYY'),
		FLT_KEY_3=#fltKey3#, FLT_DAT_3=TO_date(#fltDate3#,'DDMONYY'),
		FLT_KEY_4=#fltKey4#, FLT_DAT_4=TO_date(#fltDate4#,'DDMONYY'),
		FLT_KEY_5=#fltKey5#, FLT_DAT_5=TO_date(#fltDate5#,'DDMONYY'),ATTACH_DATE=sysdate,
		AWB_NO=#awbNo#,AWB_NO_2=#awbNo2#,AWB_NO_3=#awbNo3#,AWB_NO_4=#awbNo4#,AWB_NO_5=#awbNo5#
		where MSG_ID =#msgId#  and MSG_SEQ_NO  =  #msgSeqNo#
	</update>
	<update id="inMsgRead" parameterClass="cargo.cms.edi.bo.TelexMessageDetailBO" >
	update EDI_MSG_LOG_IN set READ='Y' where MSG_ID =#msgId#  and MSG_SEQ_NO  =  #msgSeqNo#
	</update>
	<update id="outMsgRead" parameterClass="cargo.cms.edi.bo.TelexMessageDetailBO" >
	update EDI_MSG_LOG_OUT set READ='Y' where MSG_ID =#msgId#  and MSG_SEQ_NO  =  #msgSeqNo#
	</update>
	<update id="fwdMsgIn" parameterClass="cargo.cms.edi.bo.TelexMessageDetailBO" >
	update EDI_MSG_LOG_IN set PROCESSED='Y' where MSG_ID =#msgId#  and MSG_SEQ_NO  =  #msgSeqNo#
	</update>
	<update id="fwdMsgOut" parameterClass="cargo.cms.edi.bo.TelexMessageDetailBO" >
	update EDI_MSG_LOG_OUT set PROCESSED='Y' where MSG_ID =#msgId#  and MSG_SEQ_NO  =  #msgSeqNo#
	</update>
	<select id="detailInMsg" parameterClass="cargo.cms.edi.bo.EnquireTelexMsgBO" resultClass="cargo.cms.edi.bo.TelexMessageDetailBO">
		select 'I' as msgFlow,LOG_IN.MSG_ID as msgId ,LOG_IN.MSG_SEQ_NO as msgSeqNo,(SELECT STRAGG(STRINGDELIM(RECIPIENT,' , ')) FROM EDI_MSG_RECIPIENT_IN WHERE MSG_ID = #msgId#) as addressee,
		MSG_TITLE as subject,ATTENTION as attention,COPY as copy,
		SENDER_ID as sender,MSG as messageText ,MSG_TYPE as msgType,
		FLT_KEY as fltKey1,FLT_KEY_2 as fltKey2,FLT_KEY_3 as fltKey3,FLT_KEY_4 as fltKey4,FLT_KEY_5 as fltKey5,
		TO_CHAR( FLT_DATE,'DDMONYY') as fltDate1,TO_CHAR(FLT_DAT_2,'DDMONYY') as fltDate2,TO_CHAR(FLT_DAT_3,'DDMONYY') as fltDate3,TO_CHAR(FLT_DAT_4,'DDMONYY') as fltDate4,
		TO_CHAR( FLT_DAT_5,'DDMONYY') as fltDate5,
		 substr(trim(AWB_NO), 0, 3) as awbPre1 ,substr(trim(AWB_NO), 4) as awbSuff1 ,
		 substr(trim(AWB_NO_2), 0, 3) as awbPre2 ,substr(trim(AWB_NO_2), 4) as awbSuff2 ,
		 substr(trim(AWB_NO_3), 0, 3) as awbPre3 ,substr(trim(AWB_NO_3), 4) as awbSuff3 ,
		 substr(trim(AWB_NO_4), 0, 3) as awbPre4 ,substr(trim(AWB_NO_4), 4) as awbSuff4 ,
		 substr(trim(AWB_NO_5), 0, 3) as awbPre5 ,substr(trim(AWB_NO_5), 4) as awbSuff5 
		from EDI_MSG_LOG_IN LOG_IN
		where MSG_ID=#msgId# and MSG_SEQ_NO=#msgSeqNo#
	</select>
	<select id="detailOutMsg" parameterClass="cargo.cms.edi.bo.EnquireTelexMsgBO" resultClass="cargo.cms.edi.bo.TelexMessageDetailBO">
		select 'O' as msgFlow,LOG_OUT.MSG_ID as msgId ,LOG_OUT.MSG_SEQ_NO as msgSeqNo,(SELECT STRAGG(STRINGDELIM(RECIPIENT,' , ')) FROM EDI_MSG_RECIPIENT_OUT WHERE MSG_ID = #msgId#) as addressee,
		MSG_TITLE as subject,ATTENTION as attention,COPY as copy,
		SENDER_ID as sender,MSG as messageText ,MSG_TYPE as msgType,
		FLT_KEY as fltKey1,FLT_KEY_2 as fltKey2,FLT_KEY_3 as fltKey3,FLT_KEY_4 as fltKey4,FLT_KEY_5 as fltKey5,
		TO_CHAR( FLT_DATE,'DDMONYY') as fltDate1,TO_CHAR(FLT_DAT_2,'DDMONYY') as fltDate2,TO_CHAR(FLT_DAT_3,'DDMONYY') as fltDate3,TO_CHAR(FLT_DAT_4,'DDMONYY') as fltDate4,
		TO_CHAR( FLT_DAT_5,'DDMONYY') as fltDate5,
		 substr(trim(AWB_NO), 0, 3) as awbPre1 ,substr(trim(AWB_NO), 4) as awbSuff1 ,
		 substr(trim(AWB_NO_2), 0, 3) as awbPre2 ,substr(trim(AWB_NO_2), 4) as awbSuff2 ,
		 substr(trim(AWB_NO_3), 0, 3) as awbPre3 ,substr(trim(AWB_NO_3), 4) as awbSuff3 ,
		 substr(trim(AWB_NO_4), 0, 3) as awbPre4 ,substr(trim(AWB_NO_4), 4) as awbSuff4 ,
		 substr(trim(AWB_NO_5), 0, 3) as awbPre5 ,substr(trim(AWB_NO_5), 4) as awbSuff5 
		from EDI_MSG_LOG_OUT LOG_OUT
		where MSG_ID=#msgId# and MSG_SEQ_NO=#msgSeqNo#
	</select>
	<select id="fetchFlight" parameterClass="java.lang.String" resultClass="cargo.cms.edi.bo.TelexMessageDetailBO">
	  select carr_code as carrCode,FLT_NO as fltNo from flt_opr
	  where flt_key=#PARAM# and rownum='1'
	</select>
	<select id="chkAWB" parameterClass="java.lang.String" resultClass="java.lang.Integer">
	 select 
				case when (select count(*) 
                           from trc_flt a, trc_awb b where a.awb_date= b.awb_date and a.awb_no=
                            b.awb_no and a.awb_no = #PARAM#  and  
                             (upper(a.DCRPNCY_STS) not in ('CLOSE','VOID')  or  a.DCRPNCY_STS is null  )) > 0
				then '1'
				else 
				case when (select count(*) value2 from
                              trc_loc a, trc_awb b where a.awb_date= b.awb_date and a.awb_no=
                              b.awb_no and a.awb_no = #PARAM#  and
                              (upper(a.DCRPNCY_STS) not in ('CLOSE','VOID')  or  a.DCRPNCY_STS is null  )) > 0
				then '1'
				else 
        case when(select count(*) from awb where awb_no=#PARAM# ) > 0
        then '1'
        else '0'
				end
				end
        end AS countOfRecords from dual
	</select>
	<select id="fetchAllInMsg" parameterClass="cargo.cms.edi.bo.EnquireTelexMsgBO" resultClass="cargo.cms.edi.bo.TelexMessageDetailBO">
		select 'Incoming' as msgFlow,LOG_IN.MSG_ID as msgId ,LOG_IN.MSG_SEQ_NO as msgSeqNo,
		(SELECT STRAGG(STRINGDELIM(RECIPIENT,' , ')) FROM EDI_MSG_RECIPIENT_IN WHERE MSG_ID = LOG_IN.MSG_ID) as addressee,
		MSG_TITLE as subject,ATTENTION as attention,COPY as copy,
		SENDER_ID as sender,MSG as messageText ,MSG_TYPE as msgType	 ,nvl(TO_CHAR( ATTACH_DATE,'DDMONYYYY'),'') as attachDate
		from EDI_MSG_LOG_IN LOG_IN
		<isNotEmpty property="addressee" >
		,EDI_MSG_RECIPIENT_IN RCPT_IN
		</isNotEmpty>
		where MSG_TYPE='TLX' 
		<isNotEmpty property="dtFr" >
		<isNotEmpty property="dtTo" >
		and  MSG_DATE BETWEEN TO_DATE(#dtFr#,'DDMONYYHH24MI') AND TO_DATE(#dtTo#,'DDMONYYHH24MI')
		</isNotEmpty>
		</isNotEmpty>	
		<isNotEmpty property="dtFr" >
		<isEmpty property="dtTo" >
		and  MSG_DATE>= TO_DATE(#dtFr#,'DDMONYYHH24MI')
		</isEmpty>
		</isNotEmpty>
		<isEmpty property="dtFr" >
		<isNotEmpty property="dtTo" >
		and TO_DATE(#dtTo#,'DDMONYYHH24MI') > MSG_DATE
		</isNotEmpty>	
		</isEmpty>
		<isNotEmpty property="msgHeader" >
		 and MSG_TITLE=#msgHeader#
		</isNotEmpty>
		<isNotEmpty property="sender" >
		 and SENDER_ID=#sender#
		</isNotEmpty>
		<isNotEmpty property="processed" >
			<isEqual property="processed" 
             compareValue="Y">
              AND (READ='Y' or ATTACH_DATE is not null or PROCESSED='Y')
             </isEqual>
            <isEqual  
             property="processed" 
             compareValue="N">
            AND (nvl(READ,'N')!='Y' and ATTACH_DATE is null and nvl(PROCESSED,'N')!='Y')
		</isEqual>
		</isNotEmpty>
		<isNotEmpty property="fltKey"   >
			<isNotEmpty property="fltDate" >
			AND (( FLT_KEY=#fltKey# and  FLT_DATE=TO_DATE(#fltDate#,'DDMONYY')) or 
			( FLT_KEY_2=#fltKey# and  FLT_DAT_2=TO_DATE(#fltDate#,'DDMONYY')) or 
			( FLT_KEY_3=#fltKey# and  FLT_DAT_3=TO_DATE(#fltDate#,'DDMONYY')) or 
			( FLT_KEY_4=#fltKey# and  FLT_DAT_4=TO_DATE(#fltDate#,'DDMONYY')) or 
			( FLT_KEY_5=#fltKey# and  FLT_DAT_5=TO_DATE(#fltDate#,'DDMONYY')))
		    </isNotEmpty>
		    <isEmpty  property="fltDate" >
		    	AND ( FLT_KEY=#fltKey# or  FLT_KEY_2=#fltKey# or 
			     FLT_KEY_3=#fltKey# or  FLT_KEY_4=#fltKey# or  FLT_KEY_5=#fltKey#)
		    </isEmpty>
		</isNotEmpty>
		<isEmpty property="fltKey" >
			<isNotEmpty property="fltDate" >
				AND ( FLT_DATE=TO_DATE(#fltDate#,'DDMONYY') or  FLT_DAT_2=TO_DATE(#fltDate#,'DDMONYY') or 
			 FLT_DAT_3=TO_DATE(#fltDate#,'DDMONYY') or 	FLT_DAT_4=TO_DATE(#fltDate#,'DDMONYY') or FLT_DAT_5=TO_DATE(#fltDate#,'DDMONYY'))
			</isNotEmpty>
		</isEmpty>
		<isNotEmpty  property="awbNo">
			AND( AWB_NO=#awbNo# or  AWB_NO_2=#awbNo# or 
			 AWB_NO_3=#awbNo# or  AWB_NO_4=#awbNo# or  AWB_NO_5=#awbNo#)
		</isNotEmpty>
		<isNotEmpty  property="addressee">
		 	and RCPT_IN.MSG_ID=LOG_IN.MSG_ID and (RCPT_IN.RECIPIENT=#addressee1# or RCPT_IN.RECIPIENT=#addressee2# or RCPT_IN.RECIPIENT=#addressee3#)
		</isNotEmpty>
	</select>
	<select id="fetchAllOutMsg" parameterClass="cargo.cms.edi.bo.EnquireTelexMsgBO" resultClass="cargo.cms.edi.bo.TelexMessageDetailBO">
		select 'Outgoing' as msgFlow,LOG_OUT.MSG_ID as msgId ,LOG_OUT.MSG_SEQ_NO as msgSeqNo,
		(SELECT STRAGG(STRINGDELIM(RECIPIENT,' , ')) FROM EDI_MSG_RECIPIENT_OUT WHERE MSG_ID = LOG_OUT.MSG_ID) as addressee,
		MSG_TITLE as subject,ATTENTION as attention,COPY as copy,
		SENDER_ID as sender,MSG as messageText ,MSG_TYPE as msgType	,nvl(TO_CHAR( ATTACH_DATE,'DDMONYYYY'),'') as attachDate	 
		from EDI_MSG_LOG_OUT LOG_OUT
		<isNotEmpty property="addressee" >
		,EDI_MSG_RECIPIENT_OUT RCPT_OUT
		</isNotEmpty>
		where MSG_TYPE='TLX'
		<isNotEmpty property="dtFr" >
		<isNotEmpty property="dtTo" >
		and  MSG_DATE BETWEEN TO_DATE(#dtFr#,'DDMONYYHH24MI') AND TO_DATE(#dtTo#,'DDMONYYHH24MI')
		</isNotEmpty>
		</isNotEmpty>	
		<isNotEmpty property="dtFr" >
		<isEmpty property="dtTo" >
		and  MSG_DATE>= TO_DATE(#dtFr#,'DDMONYYHH24MI')
		</isEmpty>
		</isNotEmpty>
		<isEmpty property="dtFr" >
		<isNotEmpty property="dtTo" >
		and TO_DATE(#dtTo#,'DDMONYYHH24MI') > MSG_DATE
		</isNotEmpty>	
		</isEmpty>		
		<isNotEmpty property="msgHeader" >
		 and MSG_TITLE=#msgHeader#
		</isNotEmpty>
		<isNotEmpty property="sender" >
		 and SENDER_ID=#sender#
		</isNotEmpty>
		<isNotEmpty property="processed" >
			<isEqual property="processed" 
             compareValue="Y">
              AND (READ='Y' or ATTACH_DATE is not null or PROCESSED='Y')
             </isEqual>
            <isEqual  
             property="processed" 
             compareValue="N">
            AND (nvl(READ,'N')!='Y' and ATTACH_DATE is null and nvl(PROCESSED,'N')!='Y')
		</isEqual>
		</isNotEmpty>
		<isNotEmpty property="fltKey"   >
			<isNotEmpty property="fltDate" >
			AND (( FLT_KEY=#fltKey# and  FLT_DATE=TO_DATE(#fltDate#,'DDMONYY')) or 
			( FLT_KEY_2=#fltKey# and  FLT_DAT_2=TO_DATE(#fltDate#,'DDMONYY')) or 
			( FLT_KEY_3=#fltKey# and  FLT_DAT_3=TO_DATE(#fltDate#,'DDMONYY')) or 
			( FLT_KEY_4=#fltKey# and  FLT_DAT_4=TO_DATE(#fltDate#,'DDMONYY')) or 
			( FLT_KEY_5=#fltKey# and  FLT_DAT_5=TO_DATE(#fltDate#,'DDMONYY')))
		    </isNotEmpty>
		    <isEmpty  property="fltDate" >
		    	AND ( FLT_KEY=#fltKey# or  FLT_KEY_2=#fltKey# or 
			     FLT_KEY_3=#fltKey# or  FLT_KEY_4=#fltKey# or  FLT_KEY_5=#fltKey#)
		    </isEmpty>
		</isNotEmpty>
		<isEmpty property="fltKey" >
			<isNotEmpty property="fltDate" >
				AND ( FLT_DATE=TO_DATE(#fltDate#,'DDMONYY') or  FLT_DAT_2=TO_DATE(#fltDate#,'DDMONYY') or 
			 FLT_DAT_3=TO_DATE(#fltDate#,'DDMONYY') or 	FLT_DAT_4=TO_DATE(#fltDate#,'DDMONYY') or FLT_DAT_5=TO_DATE(#fltDate#,'DDMONYY'))
			</isNotEmpty>
		</isEmpty>
		<isNotEmpty  property="awbNo">
			AND( AWB_NO=#awbNo# or  AWB_NO_2=#awbNo# or 
			 AWB_NO_3=#awbNo# or  AWB_NO_4=#awbNo# or  AWB_NO_5=#awbNo#)
		</isNotEmpty>
		<isNotEmpty  property="addressee">
		 	and RCPT_OUT.MSG_ID=LOG_OUT.MSG_ID and (RCPT_OUT.RECIPIENT=#addressee1# or RCPT_OUT.RECIPIENT=#addressee2# or RCPT_OUT.RECIPIENT=#addressee3#)
		</isNotEmpty>
	</select>
	<select id="valSITAAddr" parameterClass="java.lang.String" resultClass="java.lang.Integer">
	select count(1) from MAST_SITA_ADDRESS where CODE=#PARAM#
	</select>
	<!-- Enquire Telex Msg end -->

	<select id="fetchSitaAddressGroup"  parameterClass="map" resultClass="cargo.cms.edi.bo.EdiAddresseeBO">
		SELECT SITA_ADDR AS address FROM CUST_AIRL_SITA_GRPDTL
		WHERE
			UPPER(ADDR_GROUP) = UPPER(#addressGroup#)
		ORDER BY SITA_ADDR
	</select>
	
	<insert id="insertIntoEdi" parameterClass="cargo.cms.edi.bo.EdiAddresseeBO" >
	INSERT INTO EDI_TLX_OUT_DTL
    (MSG_SEQ_NO,FLT_KEY_1,FLT_DAT_1,AWB_NO_1,VER,MSG_DATE) VALUES('1',#flightKey#,#flightDt#,#awbNo#,'1',sysdate)
    </insert>
    <select id="checkFlightStatusCloseYN"  parameterClass="map" resultClass="java.lang.Integer">

		SELECT COUNT(*) 
	    FROM
	    FLT_OPR_EVENTS  
        WHERE
        FLT_KEY = #FlightKey# AND FLT_CLS_YN = 'Y' AND  SCH_DATE = #FlightDt# 
   
	</select>
	<select id="checkFlightStatus"  parameterClass="map" resultClass="java.lang.Integer">

		SELECT COUNT(*) 
	    FROM
	    FLT_OPR_EVENTS  
        WHERE
        FLT_KEY = #FlightKey# AND  SCH_DATE = #FlightDt# 
   
</select>
<select id="checkUserDetails"  parameterClass="cargo.cms.edi.bo.EdiAddresseeBO" resultClass="cargo.cms.edi.bo.EdiAddresseeBO">

	SELECT code as username,user_password As password
		    FROM
		    SEC_USER  
	        WHERE
	        UPPER(CODE) = UPPER(#username#) 
   
</select>

<select id="validateSitaAddress"  parameterClass="java.lang.String" resultClass="java.lang.Integer">

	SELECT COUNT(*) 
	    FROM
	   MAST_SITA_ADDRESS 
        WHERE
        CODE = #sitaAddress#
   
</select>		
<select id="fetchEnquireHouseManf" parameterClass="cargo.cms.edi.bo.EdiFhlBO" resultClass="cargo.cms.edi.bo.EdiFhlHawb" >
 SELECT E.TR_NO,E.HAWB_NO,E.MANIFEST_DESC,E.HAWB_ORG,
       E.HAWB_DEST,E.HAWB_PCS, E.DOC_LINE_NO,F.cc_code AS CONS_CODE,
	   E.HAWB_NET_WT,E.SOURCE,E.LM_USER_ID,E.SUBMIT_DATE,E.SHPR_NAME,E.CSGNE_NAME,
    E.CHARGE_AGENT,E.CR_USER_ID             
  FROM
(SELECT B.TR_NO,A.AWB_NO, B.HAWB_NO, B.MANIFEST_DESC, B.HAWB_ORG, 
        B.HAWB_DEST,B.HAWB_PCS, B.DOC_LINE_NO,
        TRIM(TO_CHAR(B.HAWB_NET_WT, '999999999990.0')) AS HAWB_NET_WT,
        B.SOURCE AS SOURCE,
        case when B.SOURCE = 'CMS' then
        	A.LM_USER_ID
        else (select c.CODE_DESC from CUST_COMPANY C
        		where (C.code = (SELECT S.CUST_NO FROM SEC_USER S WHERE S.CODE = B.FHL_OWNER)
        				or C.code = B.FHL_OWNER))
        end LM_USER_ID,
       TO_CHAR(B.CR_DATE,'DDMONYY HH24:MI:SS') SUBMIT_DATE,B.SHPR_NAME,B.CSGNE_NAME,
       B.CHARGE_AGENT,B.CR_USER_ID           
  FROM EDI_FHL A, EDI_FHL_HAWB B
 WHERE A.TR_NO = B.TR_NO
   AND A.AWB_NO = #AWB_NO#
   <isNotEqual property="intInd" compareValue="N">
   		and (B.FHL_OWNER =(SELECT CUST_NO FROM SEC_USER WHERE UPPER(CODE) = UPPER(#FHL_OWNER#) and rownum=1) OR UPPER(B.FHL_OWNER) = UPPER(#FHL_OWNER#))
   </isNotEqual>
   ) E,   
 V_CST_LATEST_CC_CODE F
 WHERE E.AWB_NO = F.awb_no(+)
   AND E.HAWB_NO = F.hawb_no(+) 
 ORDER BY E.HAWB_NO
</select>
<select id="fetchEnquireHouseManfByCustNo" parameterClass="cargo.cms.edi.bo.EdiFhlBO" resultClass="cargo.cms.edi.bo.EdiFhlBO" >
			SELECT B.TR_NO,B.HAWB_NO,B.MANIFEST_DESC,B.HAWB_ORG,B.HAWB_DEST, 
        B.HAWB_PCS,B.DOC_LINE_NO,B.CONS_CODE,B.HAWB_NET_WT,
        B.SOURCE AS SOURCE,
		DECODE(B.SOURCE,'S',A.LM_USER_ID,C.CODE_DESC) LM_USER_ID,   
		TO_CHAR(B.CR_DATE,'DDMONYY HH24:MI:SS') SUBMIT_DATE     
   FROM EDI_FHL A,EDI_FHL_HAWB B,CUST_COMPANY C
  WHERE A.TR_NO = B.TR_NO     AND A.AWB_NO = #AWB_NO# 	AND B.FHL_OWNER = C.CODE(+) 
	AND B.FHL_OWNER  = AND (B.FHL_OWNER =(SELECT CUST_NO FROM SEC_USER WHERE CODE = #FHL_OWNER#) OR B.FHL_OWNER = #FHL_OWNER#)
	</select>
<select id="fetchheadefInfo" parameterClass="cargo.cms.edi.bo.EdiFhlBO" resultClass="cargo.cms.edi.bo.EdiFhlBO">
  SELECT SUBSTR(A.AWB_NO,1,3)
  ||'-'
  ||SUBSTR(A.AWB_NO,4,8)     awbNo,
  NVL(D.PCS,A.AWB_PCS) awbPCS           ,
  NVL(D.WT,A.AWB_WT) awbWt             ,
  A.AWB_ORG AS AWB_ORG,
  A.AWB_DEST AS AWB_DEST,
  SUM(B.HAWB_PCS) totalHPcs  ,
  to_char(SUM(B.HAWB_NET_WT),'99999999999.99') totalHWt ,
  COUNT(HAWB_NO) AS noOfHawb
   FROM EDI_FHL A
  LEFT JOIN EDI_FHL_HAWB B  ON A.tr_no  = B.tr_no
  <isNotEqual property="intInd" compareValue="N"> 
  left join cust_company C on C.code = B.FHL_OWNER
  </isNotEqual>    
  LEFT JOIN AWB D  ON D.awb_no  = A.awb_no and D.AWB_DATE=A.AWB_DATE  
  WHERE A.AWB_NO = #AWB_NO#
  <isNotEqual property="intInd" compareValue="N">
  	and (B.FHL_OWNER =(SELECT CUST_NO FROM SEC_USER WHERE UPPER(CODE) = UPPER(#FHL_OWNER#) and rownum=1) OR UPPER(B.FHL_OWNER) = UPPER(#FHL_OWNER#))
  </isNotEqual>
  GROUP BY A.AWB_NO,
  NVL(D.PCS,A.AWB_PCS), NVL(D.WT,A.AWB_WT),
  AWB_ORG,
  AWB_DEST
</select>
<select id="fetchEnquireLicPerDetails" parameterClass="cargo.cms.edi.bo.EdiFhlHawb" resultClass="cargo.cms.edi.bo.EdiFhlHawbLicPer">
   SELECT 'LIC' as dummyValue,TR_NO,DOC_LINE_NO ,HDOC_LINE_NO ,LIC_PER_TYPE ,LIC_PER_NO,CR_DATE,CR_USER_ID FROM EDI_FHL_HAWB_LIC_PER
		WHERE TR_NO = #TR_NO# AND HDOC_LINE_NO=#DOC_LINE_NO# and lic_per_type = 'LIC'
    union all
    SELECT 'PER' as dummyValue,TR_NO,DOC_LINE_NO ,HDOC_LINE_NO ,LIC_PER_TYPE ,LIC_PER_NO,CR_DATE,CR_USER_ID FROM EDI_FHL_HAWB_LIC_PER
		WHERE TR_NO = #TR_NO# AND HDOC_LINE_NO=#DOC_LINE_NO# and lic_per_type = 'PER'
</select>

       <select id="fetchEtd" parameterClass="java.util.HashMap" resultClass="cargo.cms.edi.bo.EdiFblBO">
	   select 
		pkg_common.get_flt_eta(flt_opr.flt_key,flt_opr.sch_date,'D','DD') as etd,
		pkg_common.get_flt_sta(flt_opr.flt_key,flt_opr.sch_date,'D','DD') as std,
       flt_opr.acft_reg_no as acftRegNo , edi_fbl.flt_rmk as fltRmk , 
       (SELECT COUNT(1) FROM Edi_Fbl_Shp WHERE TR_NO IN
       (Select Max(TR_NO) From Edi_Fbl Where Flt_Key= Flt_Opr.Flt_Key And  Flt_Date = Flt_Opr.Sch_Date And Unldg_Pt = #unladingPt#)
       AND NIL_IND = 'Y') as nilInd,

     edi_fbl.tr_no as trNo
	   from flt_opr 
	   left outer join edi_fbl on flt_opr.flt_key = edi_fbl.flt_key  and flt_opr.sch_date = edi_fbl.flt_date
       join edi_fbl_shp on edi_fbl_shp.tr_no = edi_fbl.tr_no and edi_fbl_shp.ldg_pt =#ladingPt# where flt_opr.flt_key=#fltKey#
       and flt_opr.sch_date=to_date(#fltDate#,'ddmonyy')
       and flt_opr.flt_type='D'
       AND edi_fbl_shp.unldg_pt =  #unladingPt#
       and rownum = 1
   </select>	
   
   <select id="fetchEtdWhenEmpty" parameterClass="java.util.HashMap" resultClass="cargo.cms.edi.bo.EdiFblBO">
   	   select 
	   pkg_common.get_flt_eta(flt_opr.flt_key,flt_opr.sch_date,'D','DD') as etd,
	   pkg_common.get_flt_sta(flt_opr.flt_key,flt_opr.sch_date,'D','DD') as std,
       flt_opr.acft_reg_no as acftRegNo, '0' nilInd
	   from flt_opr 
	    where flt_opr.flt_key = #fltKey#
       and flt_opr.sch_date = to_date(#fltDate#,'ddmonyy')
       and flt_opr.flt_type = 'D'  	
   </select>
   <!-- FAT Bug Fix 6468 -->
   <select id="checkFblExists" parameterClass="java.util.HashMap" resultClass="java.lang.String">
   		select count(1) from edi_fbl where flt_key = #fltKey# AND FLT_DATE = to_date(#fltDate#,'ddmonyy')
   </select>
   
   
   <select id="fblfetchLadingPoints" parameterClass="cargo.cms.edi.bo.EdiFblBO" resultClass="cargo.cms.edi.bo.EdiFblBO">
	
    		select off_point as offPoint from flt_opr_seg where tr_no in (
					select tr_no from flt_opr where flt_key = #fltKey#  and 
					sch_date=to_date(#fltDate#,'dd-mon-yy') and flt_type = 'D')
			and brd_point='HKG' 
   	</select> 
   	<insert id="INSERT_FBL" parameterClass="cargo.cms.edi.bo.EdiFblBO">
	    INSERT INTO EDI_FBL(TR_NO,MSG_VER,MSG_SEQ_NUM,COPY_NO,CARR_CODE,FLT_NO,FLT_DATE,FLT_KEY,LDG_PT,FLT_RMK,SI_TYPE,LM_USER_ID,LM_DATE,LM_VER,SEND_DATE,FLT_TYPE,CR_USER_ID,CR_DATE,UNLDG_PT,FBL_STATUS, TR_TYPE)
	    VALUES(#trNo#,#msgVer#,#msgSeqNum#,#copyNo#,#carrCode#,#fltNo#,TO_DATE(#fltDate#,'ddmonyy'),#fltKey#,#ldgPt#,#fltRmk#,#siType#,#lmUserId#,sysdate,#lmVer#,TO_DATE(#sendDate#,'ddmonyy'),#fltType#,#crUserId#,sysdate,#offPoint#,'P', 'REFBL')
    </insert>
     <insert id="INSERT_FBL_SHP" parameterClass="cargo.cms.edi.bo.EdiFblShpBO" >
      INSERT INTO EDI_FBL_SHP 
      (TR_NO,DOC_LINE_NO,AWB_NO,ORG,DEST,SHMPT_CODE,PCS,WT_CODE,NET_WT,TOTAL_PCS,MAN_DESC,PART_SHMPT_YN,SPL_CODE1,SPL_CODE2,
      	SPL_CODE3,SPL_CODE4,SPL_CODE5,SPL_CODE6,SPL_CODE7,SPL_CODE8,SPL_CODE9,
      	CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,LDG_PT,UNLDG_PT,NIL_IND,ORG_AGENT_NAME,ORG_MOVT_PRTY_C,SPL_SVC_REQ1,SPL_SVC_REQ2,OTHER_SVC_INFO1,OTHER_SVC_INFO2,ORG_FLT_NO,ORG_FLT_CARR,ORG_FLT_KEY,ORG_FLT_DATE,AWB_DATE, TR_TYPE)
      VALUES (#trNo#,#docLineNo#,#awbNo#,#org#,#dest#,#shmptCode#,#pcs#,#wtCode#,#netWt#,#totalPcs#,#manDesc#,#partShmptYn#,#splCode1#,#splCode2#,
      	#splCode3#,#splCode4#,#splCode5#,#splCode6#,#splCode7#,#splCode8#,#splCode9#,
      	#crUserId#,sysdate,#lmUserId#,sysdate,#ldgPt#,#unldgPt#,#nilInd#,#orgAgentName#,#orgMovtPrtyC#,#splSvcReq1#,#splSvcReq2#,#otherSvcInfo1#,#otherSvcInfo2#,#orgFltNo#,#orgFltCarr#,#orgFltKey#,TO_DATE(#orgFltDate#,'ddmonyy'),TO_DATE(#awbDate#,'ddmonyy'), 'REFBL')
      </insert> 
	
	<update id="UPD_FBL_SHP" parameterClass="cargo.cms.edi.bo.EdiFblShpBO">
		UPDATE EDI_FBL_SHP
      	SET DOC_LINE_NO = #docLineNo#, AWB_NO = #awbNo#,ORG = #org#, DEST = #dest#, SHMPT_CODE = #shmptCode#, 
      	PCS = #pcs#, WT_CODE = #wtCode#, NET_WT = #netWt#, TOTAL_PCS = #totalPcs#, MAN_DESC = #manDesc#,
      	PART_SHMPT_YN = #partShmptYn#, SPL_CODE1 = #splCode1#, SPL_CODE2 = #splCode2#, LM_USER_ID = #lmUserId#,
      	LM_DATE = sysdate, LDG_PT = #ldgPt#, UNLDG_PT = #unldgPt#, NIL_IND = 'N', ORG_AGENT_NAME = #orgAgentName#,
      	ORG_MOVT_PRTY_C = #orgMovtPrtyC#, SPL_SVC_REQ1 = #splSvcReq1#, SPL_SVC_REQ2 = #splSvcReq2#, OTHER_SVC_INFO1 = #otherSvcInfo1#,
      	OTHER_SVC_INFO2 = #otherSvcInfo2#, ORG_FLT_NO = #orgFltNo#, ORG_FLT_CARR = #orgFltCarr#, ORG_FLT_KEY = #orgFltKey#,
      	ORG_FLT_DATE = TO_DATE(#orgFltDate#,'ddmonyy'), AWB_DATE= TO_DATE(#awbDate#,'ddmonyy')
      	WHERE TR_NO = #trNo#
    </update> 
		
	<insert id="INSERT_FBL_ULD" parameterClass="cargo.cms.edi.bo.EdiFblUldBO">
	 INSERT INTO  EDI_FBL_ULD(TR_NO,DOC_LINE_NO,SDOC_LINE_NO,ULD_TOTAL,ULD_TYPE,ULD_NO,ULD_CARR,ULD_KEY,ULD_FLG,LOAD_IND,ULD_WT_C,ULD_WT,RMK)
	 VALUES (#trNo#,#docLineNo#,#docLine#,#uldTotal#,#uldType#,#uldNo#,#uldCarr#,#uldKey#,#uldFlg#,#loadInd#,#uldWtC#,#uldWt#,#rmk#)
	</insert>

	 <select id="fblClosed" parameterClass="cargo.cms.edi.bo.EdiFblBO" resultClass="java.lang.String">
       select count(*) from flt_opr_events a where flt_type='D' and flt_key=#fltKey#
       and a.sch_date=to_date(#fltDate#,'ddmonyy') and a.FLT_CLS_YN ='Y'
     </select>
     	<select id="validateNilCargo_FBL" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		  select count(*) from edi_fbl a  where a.flt_key = #fltKey# and a.flt_date = TO_DATE(#fltDate#,'dd-mon-yy')
		 and a.unldg_pt = #offPoint#
	</select> 
	<select id="validateNilCargo_FBL_Yes" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		select NVL(max(decode(edi_fbl_shp.nil_ind,'Y',1,0)),0) as nilflag 
		from edi_fbl left outer join edi_fbl_shp
		on edi_fbl_shp.ldg_pt = 'HKG'
		and edi_fbl_shp.unldg_pt = #offPoint#
		and edi_fbl.tr_no = edi_fbl_shp.tr_no  
		where edi_fbl.tr_no = (select max(tr_no) from edi_fbl where flt_key = #fltKey# and flt_date = TO_DATE(#fltDate#,'dd-mon-yy') and fbl_status = 'P')		
	</select>
	
	<update id="updNilCargoForFbl" parameterClass="java.util.HashMap">
		update edi_fbl_shp 
    set nil_ind = 'N' 
    where tr_no = (select tr_no from edi_fbl where flt_key = #fltKey# and flt_date = TO_DATE(#fltDate#,'dd-mon-yy'))
    and ldg_pt = 'HKG'
    and unldg_pt = #offPoint#
	</update>
	
    <select id="checkPremanifestAWB" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		select count(1) from exp_pmanifest_awb
        where awb_no =#awbNo#
        and flt_key  =#fltKey#
        and flt_date = to_date(#fltDate#,'DDMONYY')
        and unldg_pt =#offPoint#
	</select>
	<select id="getFblOrgDestForCreate" parameterClass="map" resultClass="cargo.cms.edi.bo.EdiFblShpBO">
	<![CDATA[
		select org , dest from edi_fbl a , edi_fbl_shp b 
		where  a.tr_no = b.tr_no and a.flt_key = #fltKey# and a.FLT_DATE = to_date(#fltDate#,'DDMONYY')
		and b.awb_no = #awbNo# and rowNum = 1  
	]]>
</select>
	<select id="fbl_fetchAwbPrefix" parameterClass="cargo.cms.edi.bo.EdiFblBO" resultClass="java.lang.String">
		select code from mast_awb_prefix where carr_code=#carrCode# and DEF_YN='Y' and rownum=1
	</select>	
		<select id="isEdiFBLAwbNoExist" parameterClass="java.util.HashMap" resultClass="java.lang.String">
			
		select count(edi_fbl_shp.awb_no)as awbNo from 
		edi_fbl inner join edi_fbl_shp
		on edi_fbl.tr_no = edi_fbl_shp.tr_no
 		and edi_fbl_shp.nil_ind = 'N' 
		and edi_fbl_shp.awb_no =  #awbNo# 
		where edi_fbl.flt_key = #fltKey#
		and edi_fbl.flt_date = to_date(#fltDate#,'dd-mon-yy')
		and edi_fbl.si_type in ('S','I') and edi_fbl.FBL_STATUS in('P','CONT')
	</select>
	<select id="isEdiFBLShpNoExist" parameterClass="java.util.HashMap" resultClass="java.lang.String">
			
		select count(edi_fbl_shp.tr_no)as awbNo from 
		edi_fbl Join edi_fbl_shp
		on edi_fbl.tr_no = edi_fbl_shp.tr_no
 		where edi_fbl.flt_key = #fltKey#
		and edi_fbl.flt_date = to_date(#fltDate#,'dd-mon-yy')
		
		
	</select>
	<select id="isEdiFblExist" parameterClass="cargo.cms.edi.bo.EdiFblBO" resultClass="java.lang.String">
	  select edi_fbl.tr_no from edi_fbl where edi_fbl.flt_key=#fltKey# and edi_fbl.flt_date = to_date(#fltDate#,'dd-mon-yy') and unldg_pt=#offPoint# and edi_fbl.si_type ='S' and FBL_STATUS in('P')
	</select>
	
	<select id="getExistingFblTrNo" parameterClass="cargo.cms.edi.bo.EdiFblBO" resultClass="java.lang.String">
	  	select TR_NO  from EDI_FBL where FLT_KEY= #fltKey#  and FLT_DATE = TO_DATE(#fltDate#,'ddmonyy') and    FBL_STATUS = 'P'    and UNLDG_PT = #offPoint#   
	</select>
		
    <update id="fblfltremarks" parameterClass="cargo.cms.edi.bo.EdiFblBO" >
          update edi_fbl set flt_rmk = #fltRmk# where tr_no = #trNo#
      </update>
			<update id="updatefblStatusunpro" parameterClass="cargo.cms.edi.bo.EdiFblBO">
		UPDATE EDI_FBL SET FBL_STATUS = 'UNPRO'
		WHERE FLT_KEY = #fltKey# AND FLT_DATE = TO_DATE(#fltDate#,'MM/DD/YYYY') AND UNLDG_PT = #offPoint# 
		AND FBL_STATUS = 'P' AND SI_TYPE in('I','S') AND TR_NO != #trNo#
	</update>
      
	<update id="update_fbl_print_ind" parameterClass="java.util.HashMap">
	update edi_fbl_shp set print_ind='Y' where awb_no=#AWB_NO# and awb_date=#AWB_DATE# AND TR_NO IN (SELECT TR_NO FROM EDI_FBL WHERE FLT_KEY=#FLT_KEY# AND FLT_DATE=#FLT_DATE#)
	</update>
         
      		<select id="fblShpquery" resultClass="cargo.cms.edi.bo.EdiFblShpBO"  parameterClass="java.util.HashMap" >
	   select 
				   CASE
			          WHEN NVL(PMANIPCS, 0) = 0 AND NVL(INV.LOCN_PCS, 0) > 0 THEN 'A'
			          WHEN NVL(PMANIPCS, 0) = 0 AND NVL(INV.LOCN_PCS, 0) = 0 THEN 'B'
			          WHEN NVL(PMANIPCS, 0) > 0 AND NVL(INV.LOCN_PCS, 0) = 0 THEN 'C'
			          WHEN NVL(PMANIPCS, 0) > 0 AND NVL(INV.LOCN_PCS, 0) > 0 THEN 'D'
			        END SORTING,
			           awb.pcs AS awbpcs,
                       awb.wt  AS awbwt,
					(select cc_code from(SELECT t1.cc_code,awb_no FROM V_CST_IMP_CC_CODE_AWB t1,mast_constraint_code t2
  WHERE t1.cc_code = t2.code  AND NVL(hawb_no, '000000000000000000') = '000000000000000000'
  and t1.flt_key not like 'NB%' ORDER BY t1.PRTY DESC)where awb_no=edi_fbl_shp.awb_no and rownum=1) AS cccode,
  
  (SELECT DISTINCT cc_code FROM V_CST_VSL_CC_CODE_AWB  where flt_key= edi_fbl.flt_key and flt_date= edi_fbl.flt_date and awb_no = edi_fbl_shp.awb_no
	AND NVL(hawb_no, '000000000000000000') = '000000000000000000' and rownum = 1
	) stfsCode,
  
  
 ( SELECT COUNT(1) FROM mast_constraint_code WHERE code=((select cc_code from(SELECT t1.cc_code,awb_no FROM V_CST_IMP_CC_CODE_AWB t1,mast_constraint_code t2
  WHERE t1.cc_code = t2.code  AND NVL(hawb_no, '000000000000000000') = '000000000000000000'
  and t1.flt_key not like 'NB%' ORDER BY t1.PRTY DESC)where awb_no=edi_fbl_shp.awb_no and rownum=1)) AND CONSTRAINT='Y') as indicator,
					  DECODE(
					  (SELECT NVL(COUNT(1),'0') FROM uld_inventory u WHERE u.uld_key=inv.ULD_KEY
					  AND (NVL(locked,'N')                                          ='Y')
					  ),'0','N','Y') AS uldLock,
					  DECODE(
					  (SELECT NVL(COUNT(1),'0') FROM lsp_inventory l WHERE l.lsp_no=inv.LSP_NO
					  AND (NVL(locked,'N')                                         ='Y')
					  ),'0','N','Y')                                                                 AS lspLock,
					    inv.LSP_NO   AS lsp,
  						inv.ULD_KEY   AS uld,
	   			   edi_fbl_shp.tr_no as trNo,
			       edi_fbl_shp.doc_line_no as docLineNo,
			       edi_fbl_shp.print_ind as printInd,
			       concat(concat(substr(edi_fbl_shp.awb_no,0,3),'-'),substr(edi_fbl_shp.awb_no,4))as awbNo,
			       to_char(edi_fbl_shp.awb_date,'DDMONYY') as awbDate,
			       PKG_COMMON.get_flt_eta(#fltKey#, TO_DATE(#fltDate#,'DDMONYY'), 'D', 'DD') AS etd,
           		   <!-- SUBSTR(TRIM(TO_CHAR(NVL(SCH_TIME,0),'0000')),0,2)|| ':'|| SUBSTR(TRIM(TO_CHAR(NVL(SCH_TIME,0),'0000')),3,4) AS std, -->
           		   pkg_common.get_flt_sta(#fltKey#, TO_DATE(#fltDate#,'DDMONYY'), 'D', 'DD') as std,
           		               DECODE(awb.awb_type,'T','NA',(SELECT DECODE(COUNT(recd.awb_no),0,'N','Y') FROM exp_doc_recd recd WHERE awb.awb_no=recd.awb_no AND awb.awb_date=recd.awb_date AND awb_frz_yn  ='Y'))AS docRecv,
                   edi_fbl_shp.org as org,
			       edi_fbl_shp.dest as dest,
			    NVL(PMANIPCS,0) pmanPcs,
		        NVL(PMANIWT,0) pmanWt,
            	edi_fbl_shp.shmpt_code as shmptCode,
			       nvl(edi_fbl_shp.pcs,0) as pcs,
			       decode(trunc(TRIM(to_char(nvl(edi_fbl_shp.net_wt,0),'999999999.99'))),0,0|| nvl(edi_fbl_shp.net_wt,0), nvl(edi_fbl_shp.net_wt,0))as netWt,
			       decode(car.AWB_NO,'',decode(awb.awb_no,null,decode(edi_fbl_shp.spl_code1,null,'',edi_fbl_shp.spl_code1),awb.spl_code1),car.spl_code1) splCode1,
			       decode(car.AWB_NO,'',decode(awb.awb_no,null,decode(edi_fbl_shp.spl_code2,null,'',edi_fbl_shp.spl_code2),awb.spl_code2),car.spl_code2) splCode2,
                   decode(car.AWB_NO,'',decode(awb.awb_no,null,decode(edi_fbl_shp.spl_code3,null,'',edi_fbl_shp.spl_code3),awb.spl_code3),car.spl_code3) splCode3,
                   decode(car.AWB_NO,'',decode(awb.awb_no,null,decode(edi_fbl_shp.spl_code4,null,'',edi_fbl_shp.spl_code4),awb.spl_code4),car.spl_code4) splCode4,
                   decode(car.AWB_NO,'',decode(awb.awb_no,null,decode(edi_fbl_shp.spl_code5,null,'',edi_fbl_shp.spl_code5),awb.spl_code5),car.spl_code5) splCode5,
                   decode(car.AWB_NO,'',decode(awb.awb_no,null,decode(edi_fbl_shp.spl_code6,null,'',edi_fbl_shp.spl_code6),awb.spl_code6),car.spl_code6) splCode6,
                   decode(car.AWB_NO,'',decode(awb.awb_no,null,decode(edi_fbl_shp.spl_code7,null,'',edi_fbl_shp.spl_code7),awb.spl_code7),car.spl_code7) splCode7,
                   decode(car.AWB_NO,'',decode(awb.awb_no,null,decode(edi_fbl_shp.spl_code8,null,'',edi_fbl_shp.spl_code8),awb.spl_code8),car.spl_code8) splCode8,                   
                   decode(car.AWB_NO,'',decode(awb.awb_no,null,decode(edi_fbl_shp.spl_code9,null,'',edi_fbl_shp.spl_code9),awb.spl_code9),car.spl_code9) splCode9,
                   edi_fbl_shp.man_desc as manDesc,
			       nvl(edi_fbl_shp.total_pcs,0) as totalPcs,
		           edi_fbl_shp.org_agent_name as orgAgentName,
			       edi_fbl_shp.org_movt_prty_c as orgMovtPrtyC,
			       edi_fbl_shp.spl_svc_req1 as splSvcReq1,
			       edi_fbl_shp.spl_svc_req2 as splSvcReq2,
		           edi_fbl_shp.other_svc_info1 as otherSvcInfo1,
			       edi_fbl_shp.other_svc_info2 as otherSvcInfo2,
			       edi_fbl_shp.org_flt_carr as orgFltCarr,
			       edi_fbl_shp.org_flt_no as orgFltNo,
			       to_char(edi_fbl_shp.org_flt_date,'DDMONYY') as orgFltDate,
		           edi_fbl_shp.org_flt_key as orgFltKey,
                   edi_fbl_shp.ldg_pt as ldgPt,
                   edi_fbl_shp.unldg_pt as unldgPt,
                   edi_fbl_shp.nil_ind as nilInd,
 		           (select decode(count(edi_fbl_uld.tr_no),0,'N','Y') 
				   from edi_fbl_uld where edi_fbl_uld.tr_no = edi_fbl_shp.tr_no
				   and edi_fbl_uld.sdoc_line_no = edi_fbl_shp.doc_line_no ) as moreFlag ,
				   NVL(inv.LOCN_PCS,0) as invPcs,
            	   NVL(inv.LOCN_WT,0) as invWt,
            	   inv.loc_code locCode,NVL(inv.LSP_NO,inv.ULD_KEY) device,
            	   (select count (1) from awb_inventory where awb_inventory.awb_no = edi_fbl_shp.awb_No) as rowCount,
            	   (select nvl(sum (LOCN_PCS),0) from awb_inventory where awb_inventory.awb_no = edi_fbl_shp.awb_No) as totInvpc,
            		(select nvl(sum (LOCN_WT),0) from awb_inventory where awb_inventory.awb_no = edi_fbl_shp.awb_No) as totInvWt 
		    from 
			edi_fbl inner join edi_fbl_shp 
			on edi_fbl.tr_no = edi_fbl_shp.tr_no
			AND edi_fbl_shp.awb_no IS NOT NULL
			<isEmpty prepend="and" property="offPoint">
			(edi_fbl_shp.unldg_pt is null or 
			edi_fbl_shp.unldg_pt in (select t22.off_point 
                  from     flt_opr t11, flt_opr_leg t22
                  where    t11.tr_no = t22.tr_no
                  and      t11.flt_key = #fltKey#
                  and      t11.sch_date =  #fltDate#
                  and      t11.flt_type = 'D')
                  OR edi_fbl_shp.unldg_pt in (select t11.UNLDG_PT2 
                  from     ITM_TRK_FLT t11
                  where    t11.TRUCK_FLT_NO = #fltKey#
                  and      t11.TRUCK_FLT_DATE =  #fltDate#))
            </isEmpty>      
            <isNotEmpty prepend="and" property="offPoint">
            	edi_fbl_shp.unldg_pt = #offPoint# 
            </isNotEmpty>
             left join awb_inventory inv on edi_fbl_shp.awb_No=inv.awb_no and edi_fbl_shp.awb_date=inv.awb_date 
             LEFT JOIN EXP_CAR car on car.awb_no=edi_fbl_shp.awb_no and car.awb_date=edi_fbl_shp.awb_date
             LEFT JOIN AWB awb ON awb.awb_no=edi_fbl_shp.awb_no and awb.awb_date=edi_fbl_shp.awb_date
              LEFT JOIN (SELECT AWB_NO,AWB_DATE,FLT_KEY,FLT_DATE,UNLDG_PT,SUM(PMAN_PCS)PMANIPCS,SUM(PMAN_WT) PMANIWT FROM(
            SELECT EPA.AWB_NO AWB_NO,EPA.AWB_DATE AWB_DATE,EPA.FLT_KEY FLT_KEY,EPA.FLT_DATE FLT_DATE,EPA.UNLDG_PT UNLDG_PT,NVL(PMAN_PCS,0) PMAN_PCS,NVL(PMAN_WT,0) PMAN_WT FROM EXP_PMANIFEST_AWB EPA  
            UNION ALL
            SELECT EPTA.AWB_NO AWB_NO,EPTA.AWB_DATE AWB_DATE,EPTA.FLT_KEY FLT_KEY,EPTA.FLT_DATE FLT_DATE,EPTA.UNLDG_PT UNLDG_PT,NVL(BULK_PCS,0)+NVL(PPK_PCS,0) PMAN_PCS,NVL(BULK_WT,0)+NVL(PPK_WT,0) PMAN_WT FROM EXP_PMAN_TARMAC_AWB EPTA
            )GROUP BY AWB_NO,AWB_DATE,FLT_KEY,FLT_DATE,UNLDG_PT
            ) PMAN ON PMAN.awb_no =Edi_fbl_shp.awb_no   AND PMAN.awb_date =Edi_fbl_shp.awb_DATE  AND PMAN.FLT_KEY  =Edi_fbl.FLT_KEY  AND PMAN.FLT_DATE = Edi_fbl.FLT_DATE  and PMAN.UNLDG_PT = Edi_fbl_shp.UNLDG_PT
            JOIN flt_opr flt on flt.flt_key = edi_fbl.flt_key and nvl(flt.sch_date,'01JAN1981')= NVL(edi_fbl.flt_date,'01JAN1981') AND FLT.FLT_TYPE='D'
		 	where 
			edi_fbl.flt_key = #fltKey#
			and edi_fbl.flt_date = to_date(#fltDate#,'ddmonyy')
			and edi_fbl.si_type in('S','I') and edi_fbl.fbl_status ='P'
			AND edi_fbl_shp.awb_no NOT      IN
			 (SELECT awb_no
			 FROM exp_pmanifest_awb epa WHERE epa.awb_no = edi_fbl_shp.awb_no
			 AND epa.awb_date =edi_fbl_shp.awb_date
			 AND epa.flt_key  =edi_fbl.flt_key
			AND epa.flt_date = edi_fbl.flt_date  UNION ALL SELECT awb_no
			 FROM exp_pman_tarmac_awb epta
			 WHERE epta.awb_no = edi_fbl_shp.awb_no
			 AND epta.awb_date = edi_fbl_shp.awb_date
			 AND epta.flt_key  = edi_fbl.flt_key
			  AND epta.flt_date = edi_fbl.flt_date
			  )
			<dynamic prepend="ORDER BY ">
	           <isNotEmpty property="SORTORDER">
	           sorting,edi_fbl_shp.awb_no asc
	           </isNotEmpty>
	           <isEmpty property="SORTORDER">
	           edi_fbl_shp.awb_no asc
	           </isEmpty>
	        </dynamic>
	</select>
	
	<select id="fblShpqueryOne" resultClass="cargo.cms.edi.bo.EdiFblShpBO"  parameterClass="java.util.HashMap" >
	   select edi_fbl_shp.tr_no as trNo,
			       edi_fbl_shp.doc_line_no as docLineNo,
			       concat(concat(substr(edi_fbl_shp.awb_no,0,3),'-'),substr(edi_fbl_shp.awb_no,4))as awbNo,
			       to_char(edi_fbl_shp.awb_date,'DDMONYY') as awbDate,
		           edi_fbl_shp.org as org,
			       edi_fbl_shp.dest as dest,
			       (SELECT DISTINCT cc_code FROM V_CST_VSL_CC_CODE_AWB  where flt_key= edi_fbl.flt_key and flt_date= edi_fbl.flt_date and awb_no = edi_fbl_shp.awb_no AND NVL(hawb_no, '000000000000000000') = '000000000000000000' and rownum = 1) stfsCode,
		           edi_fbl_shp.shmpt_code as shmptCode,
			       nvl(edi_fbl_shp.pcs,0) as pcs,
			       decode(trunc(TRIM(to_char(nvl(edi_fbl_shp.net_wt,0),'999999999.99'))),0,0|| nvl(edi_fbl_shp.net_wt,0), nvl(edi_fbl_shp.net_wt,0))as netWt,
			       edi_fbl_shp.man_desc as manDesc,
			       nvl(edi_fbl_shp.total_pcs,0) as totalPcs,
		         decode(trunc(TRIM(to_char(nvl(edi_fbl_shp.net_wt,0),'999999999.99'))),0,0|| nvl(edi_fbl_shp.net_wt,0), nvl(edi_fbl_shp.net_wt,0))as netWt,
			       decode(car.AWB_NO,'',decode(awb.awb_no,null,decode(edi_fbl_shp.spl_code1,null,'',edi_fbl_shp.spl_code1),awb.spl_code1),car.spl_code1) splCode1,
			       decode(car.AWB_NO,'',decode(awb.awb_no,null,decode(edi_fbl_shp.spl_code2,null,'',edi_fbl_shp.spl_code2),awb.spl_code2),car.spl_code2) splCode2,
                   decode(car.AWB_NO,'',decode(awb.awb_no,null,decode(edi_fbl_shp.spl_code3,null,'',edi_fbl_shp.spl_code3),awb.spl_code3),car.spl_code3) splCode3,
                   decode(car.AWB_NO,'',decode(awb.awb_no,null,decode(edi_fbl_shp.spl_code4,null,'',edi_fbl_shp.spl_code4),awb.spl_code4),car.spl_code4) splCode4,
                   decode(car.AWB_NO,'',decode(awb.awb_no,null,decode(edi_fbl_shp.spl_code5,null,'',edi_fbl_shp.spl_code5),awb.spl_code5),car.spl_code5) splCode5,
                   decode(car.AWB_NO,'',decode(awb.awb_no,null,decode(edi_fbl_shp.spl_code6,null,'',edi_fbl_shp.spl_code6),awb.spl_code6),car.spl_code6) splCode6,
                   decode(car.AWB_NO,'',decode(awb.awb_no,null,decode(edi_fbl_shp.spl_code7,null,'',edi_fbl_shp.spl_code7),awb.spl_code7),car.spl_code7) splCode7,
                   decode(car.AWB_NO,'',decode(awb.awb_no,null,decode(edi_fbl_shp.spl_code8,null,'',edi_fbl_shp.spl_code8),awb.spl_code8),car.spl_code8) splCode8,
                   decode(car.AWB_NO,'',decode(awb.awb_no,null,'',awb.spl_code9),car.spl_code9) splCode9,
			       edi_fbl_shp.org_agent_name as orgAgentName,
			       edi_fbl_shp.org_movt_prty_c as orgMovtPrtyC,
			       edi_fbl_shp.spl_svc_req1 as splSvcReq1,
			       edi_fbl_shp.spl_svc_req2 as splSvcReq2,
		           edi_fbl_shp.other_svc_info1 as otherSvcInfo1,
			       edi_fbl_shp.other_svc_info2 as otherSvcInfo2,
			       edi_fbl_shp.org_flt_carr as orgFltCarr,
			       edi_fbl_shp.org_flt_no as orgFltNo,
			       to_char(edi_fbl_shp.org_flt_date,'DDMONYY') as orgFltDate,
		           edi_fbl_shp.org_flt_key as orgFltKey,
                   edi_fbl_shp.ldg_pt as ldgPt,
                   edi_fbl_shp.unldg_pt as unldgPt,
                   edi_fbl_shp.nil_ind as nilInd,
 		           (select decode(count(edi_fbl_uld.tr_no),0,'N','Y') 
				   from edi_fbl_uld where edi_fbl_uld.tr_no = edi_fbl_shp.tr_no
				   and edi_fbl_uld.sdoc_line_no = edi_fbl_shp.doc_line_no ) as moreFlag ,
				   (select sum (LOCN_PCS) from awb_inventory where awb_inventory.awb_no = edi_fbl_shp.awb_No) as invPcs,
            		(select sum (LOCN_WT) from awb_inventory where awb_inventory.awb_no = edi_fbl_shp.awb_No) as invWt
		    from 
			edi_fbl inner join edi_fbl_shp 
			on edi_fbl.tr_no = edi_fbl_shp.tr_no
			AND edi_fbl_shp.awb_no IS NOT NULL
			<isEmpty prepend="and" property="offPoint">
			(edi_fbl_shp.unldg_pt is null or 
			edi_fbl_shp.unldg_pt in (select t22.off_point 
                  from     flt_opr t11, flt_opr_leg t22
                  where    t11.tr_no = t22.tr_no
                  and      t11.flt_key = #fltKey#
                  and      t11.sch_date =  #fltDate#
                  and      t11.flt_type = 'D')
                  OR edi_fbl_shp.unldg_pt in (select t11.UNLDG_PT2 
                  from     ITM_TRK_FLT t11
                  where    t11.TRUCK_FLT_NO = #fltKey#
                  and      t11.TRUCK_FLT_DATE =  #fltDate#))
            </isEmpty>      
            <isNotEmpty prepend="and" property="offPoint">
            	edi_fbl_shp.unldg_pt = #offPoint# 
            </isNotEmpty>
            LEFT JOIN EXP_CAR car on car.awb_no=edi_fbl_shp.awb_no and car.awb_date=edi_fbl_shp.awb_date
      		LEFT JOIN AWB awb ON awb.awb_no=edi_fbl_shp.awb_no and awb.awb_date=edi_fbl_shp.awb_date
		 	where 
			edi_fbl.flt_key = #fltKey#
			and edi_fbl.flt_date = to_date(#fltDate#,'ddmonyy')
			and edi_fbl.si_type in('S','I') and edi_fbl.fbl_status ='P'
            <dynamic prepend="ORDER BY ">
	           <isNotEmpty property="SORTORDER">
	           sorting
	           </isNotEmpty>
	           <isEmpty property="SORTORDER">
	           edi_fbl_shp.awb_no asc
	           </isEmpty>
	        </dynamic>
		
	</select>
	
	<select id="fblShpqueryTwo" resultClass="cargo.cms.edi.bo.EdiFblShpBO"  parameterClass="java.util.HashMap" >
	   select edi_fbl_shp.tr_no as trNo,
			       edi_fbl_shp.doc_line_no as docLineNo,
			       concat(concat(substr(edi_fbl_shp.awb_no,0,3),'-'),substr(edi_fbl_shp.awb_no,4))as awbNo,
			       to_char(edi_fbl_shp.awb_date,'DDMONYY') as awbDate,
		           edi_fbl_shp.org as org,
			       edi_fbl_shp.dest as dest,
		           edi_fbl_shp.shmpt_code as shmptCode,
			       nvl(edi_fbl_shp.pcs,0) as pcs,
			       decode(trunc(TRIM(to_char(nvl(edi_fbl_shp.net_wt,0),'999999999.99'))),0,0|| nvl(edi_fbl_shp.net_wt,0), nvl(edi_fbl_shp.net_wt,0))as netWt,
			       edi_fbl_shp.man_desc as manDesc,
			       nvl(edi_fbl_shp.total_pcs,0) as totalPcs,
		           edi_fbl_shp.spl_code1 as splCode1,
			       edi_fbl_shp.spl_code2 as splCode2,
			       edi_fbl_shp.spl_code3 as splCode3,
			       edi_fbl_shp.spl_code4 as splCode4,
             	   edi_fbl_shp.spl_code5 as splCode5,
			       edi_fbl_shp.spl_code6 as splCode6,
             	   edi_fbl_shp.spl_code7 as splCode7,
			       edi_fbl_shp.spl_code8 as splCode8,
             	   edi_fbl_shp.spl_code9 as splCode9,
			       edi_fbl_shp.org_agent_name as orgAgentName,
			       edi_fbl_shp.org_movt_prty_c as orgMovtPrtyC,
			       edi_fbl_shp.spl_svc_req1 as splSvcReq1,
			       edi_fbl_shp.spl_svc_req2 as splSvcReq2,
		           edi_fbl_shp.other_svc_info1 as otherSvcInfo1,
			       edi_fbl_shp.other_svc_info2 as otherSvcInfo2,
			       edi_fbl_shp.org_flt_carr as orgFltCarr,
			       edi_fbl_shp.org_flt_no as orgFltNo,
			       to_char(edi_fbl_shp.org_flt_date,'DDMONYY') as orgFltDate,
		           edi_fbl_shp.org_flt_key as orgFltKey,
                   edi_fbl_shp.ldg_pt as ldgPt,
                   edi_fbl_shp.unldg_pt as unldgPt,
                   edi_fbl_shp.nil_ind as nilInd,
 		           (select decode(count(edi_fbl_uld.tr_no),0,'N','Y') 
				   from edi_fbl_uld where edi_fbl_uld.tr_no = edi_fbl_shp.tr_no
				   and edi_fbl_uld.sdoc_line_no = edi_fbl_shp.doc_line_no ) as moreFlag ,
				   (select sum (LOCN_PCS) from awb_inventory where awb_inventory.awb_no = edi_fbl_shp.awb_No) as invPcs,
            		(select sum (LOCN_WT) from awb_inventory where awb_inventory.awb_no = edi_fbl_shp.awb_No) as invWt
		    from 
			edi_fbl inner join edi_fbl_shp 
			on edi_fbl.tr_no = edi_fbl_shp.tr_no
			AND edi_fbl_shp.awb_no IS NOT NULL
			<isEmpty prepend="and" property="offPoint">
			(edi_fbl_shp.unldg_pt is null or 
			edi_fbl_shp.unldg_pt in (select t22.off_point 
                  from     flt_opr t11, flt_opr_leg t22
                  where    t11.tr_no = t22.tr_no
                  and      t11.flt_key = #fltKey#
                  and      t11.sch_date =  #fltDate#
                  and      t11.flt_type = 'D')
                  OR edi_fbl_shp.unldg_pt in (select t11.UNLDG_PT2 
                  from     ITM_TRK_FLT t11
                  where    t11.TRUCK_FLT_NO = #fltKey#
                  and      t11.TRUCK_FLT_DATE =  #fltDate#))
            </isEmpty>      
            <isNotEmpty prepend="and" property="offPoint">
            	edi_fbl_shp.unldg_pt = #offPoint# 
            </isNotEmpty>
		 	where 
			edi_fbl.flt_key = #fltKey#
			and edi_fbl.flt_date = to_date(#fltDate#,'ddmonyy')
			and edi_fbl.si_type in('S','I') and edi_fbl.fbl_status ='P'
            <dynamic prepend="ORDER BY ">
	           <isNotEmpty property="sortOrder.sortField">
	             $sortOrder.sortField$
	           </isNotEmpty>
	        </dynamic>
		
	</select>

<select id="fetchSHCRemainInCar" parameterClass="java.util.HashMap" resultClass="java.lang.String">
select STRAGG(STRINGDELIM(c.spl, ','))  from 
( select spl, splPriority from (
(select code spl,decode(remain_in_car,'Y',(priority+100000),priority) splPriority from mast_spl_hand_code where code in
(SELECT REGEXP_SUBSTR ((select  STRAGG(STRINGDELIM(b.spl, ',')) 
from 
 ((select T.spl spl  
                  from(
                  	(select spl_code1 spl,awb_no,awb_date from awb awb,mast_spl_hand_code splCode  
                    where spl_code1  is not null and awb.spl_code1=splCode.code and splCode.REMAIN_IN_CAR='Y')
			        union 
			        (select spl_code2 spl,awb_no,awb_date from awb awb,mast_spl_hand_code splCode    
                  where spl_code2  is not null and awb.spl_code2=splCode.code and splCode.REMAIN_IN_CAR='Y')
			        union 
			        (select spl_code3 spl,awb_no,awb_date from awb awb,mast_spl_hand_code splCode  
                  where spl_code3  is not null and awb.spl_code3=splCode.code and splCode.REMAIN_IN_CAR='Y')
			        union
			        (select spl_code4 spl,awb_no,awb_date from awb awb,mast_spl_hand_code splCode 
                where spl_code4  is not null and awb.spl_code4=splCode.code and splCode.REMAIN_IN_CAR='Y')
			        union
			        (select spl_code5 spl,awb_no,awb_date from awb awb,mast_spl_hand_code splCode  
                where spl_code5  is not null and awb.spl_code5=splCode.code and splCode.REMAIN_IN_CAR='Y')
			        union
			        (select spl_code6 spl,awb_no,awb_date from awb awb,mast_spl_hand_code splCode 
                where spl_code6  is not null and awb.spl_code6=splCode.code and splCode.REMAIN_IN_CAR='Y')
			        union
			        (select spl_code7 spl,awb_no,awb_date from awb awb,mast_spl_hand_code splCode 
                where spl_code7  is not null and awb.spl_code7=splCode.code and splCode.REMAIN_IN_CAR='Y')
			        union
			        (select spl_code8 spl,awb_no,awb_date from awb awb,mast_spl_hand_code splCode   
                where spl_code8  is not null and awb.spl_code8=splCode.code and splCode.REMAIN_IN_CAR='Y')
			        union
			        (select spl_code9 spl,awb_no,awb_date  from awb awb,mast_spl_hand_code splCode   
                where spl_code9  is not null and awb.spl_code9=splCode.code and splCode.remain_in_car='Y')               
              ) t
			        where awb_no = #awbNo# and awb_date = to_date(#awbDate#,'DDMONYY'))
              union
                select code spl from mast_spl_hand_code where code=#splCode1#
                union
                 select code spl from mast_spl_hand_code where code=#splCode2#
               union
                select code spl from mast_spl_hand_code where code=#splCode3#  
                union
                 select code spl from mast_spl_hand_code where code=#splCode4#
               union
                select code spl from mast_spl_hand_code where code=#splCode5#
                union
                 select code spl from mast_spl_hand_code where code=#splCode6#  
              union
                select code spl from mast_spl_hand_code where code=#splCode7#
                union
                 select code spl from mast_spl_hand_code where code=#splCode8#
                 union
                 select code spl from mast_spl_hand_code where code=#splCode9#
              UNION
              select WCAR.spl spl  
                  from(
                  (select spl_code1 spl,awb_no,awb_date from edi_fbl_shp where spl_code1  is not null )
			        union 
			        (select spl_code2 spl,awb_no,awb_date from edi_fbl_shp  where spl_code2  is not null )   
                  union 
			        (select spl_code3 spl,awb_no,awb_date from edi_fbl_shp  where spl_code3  is not null )  
                  union 
			        (select spl_code4 spl,awb_no,awb_date from edi_fbl_shp  where spl_code4  is not null )  
                  union 
			        (select spl_code5 spl,awb_no,awb_date from edi_fbl_shp  where spl_code5  is not null )  
                  union 
			        (select spl_code6 spl,awb_no,awb_date from edi_fbl_shp  where spl_code6  is not null )  
                  union 
			        (select spl_code7 spl,awb_no,awb_date from edi_fbl_shp  where spl_code7  is not null )  
                  union 
			        (select spl_code8 spl,awb_no,awb_date from edi_fbl_shp  where spl_code8  is not null )  
                  union 
			        (select spl_code9 spl,awb_no,awb_date from edi_fbl_shp  where spl_code9  is not null )        
              ) WCAR,mast_spl_hand_code MAST
			        where mast.code = WCAR.spl and mast.remain_in_car = 'Y' AND WCAR.awb_no = #awbNo# and WCAR.awb_date = to_date(#awbDate#,'DDMONYY')
              )b),'[^,]+',1,LEVEL)TXT  FROM DUAL
                                   CONNECT BY REGEXP_SUBSTR ((select  STRAGG(STRINGDELIM(b.spl, ',')) 
from 
 ((select T.spl spl  
                  from(
                  	(select spl_code1 spl,awb_no,awb_date from awb awb,mast_spl_hand_code splCode  
                    where spl_code1  is not null and awb.spl_code1=splCode.code and splCode.REMAIN_IN_CAR='Y')
			        union 
			        (select spl_code2 spl,awb_no,awb_date from awb awb,mast_spl_hand_code splCode    
                  where spl_code2  is not null and awb.spl_code2=splCode.code and splCode.REMAIN_IN_CAR='Y')
			        union 
			        (select spl_code3 spl,awb_no,awb_date from awb awb,mast_spl_hand_code splCode  
                  where spl_code3  is not null and awb.spl_code3=splCode.code and splCode.REMAIN_IN_CAR='Y')
			        union
			        (select spl_code4 spl,awb_no,awb_date from awb awb,mast_spl_hand_code splCode 
                where spl_code4  is not null and awb.spl_code4=splCode.code and splCode.REMAIN_IN_CAR='Y')
			        union
			        (select spl_code5 spl,awb_no,awb_date from awb awb,mast_spl_hand_code splCode  
                where spl_code5  is not null and awb.spl_code5=splCode.code and splCode.REMAIN_IN_CAR='Y')
			        union
			        (select spl_code6 spl,awb_no,awb_date from awb awb,mast_spl_hand_code splCode 
                where spl_code6  is not null and awb.spl_code6=splCode.code and splCode.REMAIN_IN_CAR='Y')
			        union
			        (select spl_code7 spl,awb_no,awb_date from awb awb,mast_spl_hand_code splCode 
                where spl_code7  is not null and awb.spl_code7=splCode.code and splCode.REMAIN_IN_CAR='Y')
			        union
			        (select spl_code8 spl,awb_no,awb_date from awb awb,mast_spl_hand_code splCode   
                where spl_code8  is not null and awb.spl_code8=splCode.code and splCode.REMAIN_IN_CAR='Y')
			        union
			        (select spl_code9 spl,awb_no,awb_date  from awb awb,mast_spl_hand_code splCode   
                where spl_code9  is not null and awb.spl_code9=splCode.code and splCode.remain_in_car='Y')               
              ) t
			        where awb_no = #awbNo# and awb_date = to_date(#awbDate#,'DDMONYY'))
               union
                select code spl from mast_spl_hand_code where code=#splCode1#
                union
                 select code spl from mast_spl_hand_code where code=#splCode2#
               union
                select code spl from mast_spl_hand_code where code=#splCode3#
                union
                 select code spl from mast_spl_hand_code where code=#splCode4#
               union
                select code spl from mast_spl_hand_code where code=#splCode5#
                union
                 select code spl from mast_spl_hand_code where code=#splCode6#
              union
                select code spl from mast_spl_hand_code where code=#splCode7#
                union
                 select code spl from mast_spl_hand_code where code=#splCode8#
                 union
                 select code spl from mast_spl_hand_code where code=#splCode9#
              UNION
              select WCAR.spl spl  
                  from(
                  (select spl_code1 spl,awb_no,awb_date from edi_fbl_shp where spl_code1  is not null )
			        union 
			        (select spl_code2 spl,awb_no,awb_date from edi_fbl_shp  where spl_code2  is not null )   
                  union 
			        (select spl_code3 spl,awb_no,awb_date from edi_fbl_shp  where spl_code3  is not null )  
                  union 
			        (select spl_code4 spl,awb_no,awb_date from edi_fbl_shp  where spl_code4  is not null )  
                  union 
			        (select spl_code5 spl,awb_no,awb_date from edi_fbl_shp  where spl_code5  is not null )  
                  union 
			        (select spl_code6 spl,awb_no,awb_date from edi_fbl_shp  where spl_code6  is not null )  
                  union 
			        (select spl_code7 spl,awb_no,awb_date from edi_fbl_shp  where spl_code7  is not null )  
                  union 
			        (select spl_code8 spl,awb_no,awb_date from edi_fbl_shp  where spl_code8  is not null )  
                  union 
			        (select spl_code9 spl,awb_no,awb_date from edi_fbl_shp  where spl_code9  is not null )        
              ) WCAR,mast_spl_hand_code MAST
			        where mast.code = WCAR.spl and mast.remain_in_car = 'Y' AND WCAR.awb_no = #awbNo# and WCAR.awb_date = to_date(#awbDate#,'DDMONYY')
              )b),'[^,]+',1,LEVEL)IS NOT NULL) )
union                
                (select ((CASE WHEN (SELECT COUNT(1) FROM MAST_SPL_HAND_CODE WHERE CODE = #splCode1#) > 0 THEN '' ELSE #splCode1# END)),nvl((select priority from mast_spl_hand_code where code=#splCode1#),0) FROM DUAL
                union                 
                select ((CASE WHEN (SELECT COUNT(1) FROM MAST_SPL_HAND_CODE WHERE CODE = #splCode2#) > 0 THEN '' ELSE #splCode2# END)), nvl((select priority from mast_spl_hand_code where code=#splCode2#),0) FROM DUAL
                union                
                select ((CASE WHEN (SELECT COUNT(1) FROM MAST_SPL_HAND_CODE WHERE CODE = #splCode3#) > 0 THEN '' ELSE #splCode3# END)), nvl((select priority from mast_spl_hand_code where code=#splCode3#),0) FROM DUAL
                union                 
                select ((CASE WHEN (SELECT COUNT(1) FROM MAST_SPL_HAND_CODE WHERE CODE = #splCode4#) > 0 THEN '' ELSE #splCode4# END)), nvl((select priority from mast_spl_hand_code where code=#splCode4#),0) FROM DUAL
                union                
                select ((CASE WHEN (SELECT COUNT(1) FROM MAST_SPL_HAND_CODE WHERE CODE = #splCode5#) > 0 THEN '' ELSE #splCode5# END)), nvl((select priority from mast_spl_hand_code where code=#splCode5#),0) FROM DUAL
                union                 
                select ((CASE WHEN (SELECT COUNT(1) FROM MAST_SPL_HAND_CODE WHERE CODE = #splCode6#) > 0 THEN '' ELSE #splCode6# END)), nvl((select priority from mast_spl_hand_code where code=#splCode6#),0) FROM DUAL
                union                
                select ((CASE WHEN (SELECT COUNT(1) FROM MAST_SPL_HAND_CODE WHERE CODE = #splCode7#) > 0 THEN '' ELSE #splCode7# END)), nvl((select priority from mast_spl_hand_code where code=#splCode7#),0) FROM DUAL
                union                 
                select ((CASE WHEN (SELECT COUNT(1) FROM MAST_SPL_HAND_CODE WHERE CODE = #splCode8#) > 0 THEN '' ELSE #splCode8# END)), nvl((select priority from mast_spl_hand_code where code=#splCode8#),0) FROM DUAL
                union                 
                select ((CASE WHEN (SELECT COUNT(1) FROM MAST_SPL_HAND_CODE WHERE CODE = #splCode9#) > 0 THEN '' ELSE #splCode9# END)), nvl((select priority from mast_spl_hand_code where code=#splCode9#),0) FROM DUAL)) A WHERE A.spl is not null
  order by splPriority desc) c where ROWNUM &lt;= 9
	</select>
		<select id="fblUldquery" resultClass="cargo.cms.edi.bo.EdiFblUldBO" parameterClass="java.util.HashMap">  
		 <![CDATA[
  		    select edi_fbl_uld.tr_no as trNo,
		           edi_fbl_uld.doc_line_no as docLineNo,
			       edi_fbl_uld.sdoc_line_no as docLine,
			       edi_fbl_uld.uld_total as uldTotal,
			       edi_fbl_uld.uld_type as uldType,
			       edi_fbl_uld.uld_no as uldNo,
			       edi_fbl_uld.uld_carr as uldCarr,
			       edi_fbl_uld.uld_key as  uldKey, 
			       edi_fbl_uld.uld_flg as uldFlg,
			       edi_fbl_uld.load_ind as loadInd,
			       edi_fbl_uld.uld_wt_c as uldWtC,
			       edi_fbl_uld.uld_wt as uldWt,
			       edi_fbl_uld.rmk as rmk
            from edi_fbl_uld
			where
		    edi_fbl_uld.tr_no = #trNo#
			and edi_fbl_uld.sdoc_line_no = #docLineNo#
		   ]]>
	</select>
	 
	  <update id="updateFblShpAwbDetails" parameterClass="cargo.cms.edi.bo.EdiFblShpBO">
    	update edi_fbl_shp set lm_user_id=#lmUserId# where tr_no=#trNo# and doc_line_no=#docLineNo#	
      </update>
	  <delete id="deleteFblUldDetails"  parameterClass="cargo.cms.edi.bo.EdiFblUldBO">
         delete from edi_fbl_uld where tr_no=#trNo# and sdoc_line_no=#docLine#
      </delete>
        <delete id="deleteFblShpAwbDetails" parameterClass="cargo.cms.edi.bo.EdiFblShpBO">
            delete from edi_fbl_shp where tr_no=#trNo# and doc_line_no=#docLineNo#
      </delete>
            <delete id="deleteFblUldDetailsOnly"  parameterClass="cargo.cms.edi.bo.EdiFblUldBO">
         delete from edi_fbl_uld where tr_no=#trNo# and doc_line_no=#docLineNo#
      </delete>
      <select id="getFblOrgDestForAmend" parameterClass="map" resultClass="cargo.cms.edi.bo.EdiFblShpBO">
	<![CDATA[
		select org , dest from edi_fbl a , edi_fbl_shp b 
		where  a.tr_no = b.tr_no and a.flt_key = #fltKey# and a.FLT_DATE = to_date(#fltDate#,'DDMONYY')
		and b.awb_no = #awbNo# and rowNum = 1 and doc_line_no != #docLineNo#   
	]]>
</select>
		<update id="updateHeaderFBL" parameterClass="cargo.cms.edi.bo.EdiFblBO">
			UPDATE EDI_FBL SET 
 			FLT_RMK=#fltRmk#
			where FLT_KEY=#fltKey# and 
			FLT_DATE=TO_DATE(#fltDate#,'ddmonyy') and
			FBL_STATUS='P'
			and UNLDG_PT=#offPoint#
		</update>
     <update id="updateFblShpDetails" parameterClass="cargo.cms.edi.bo.EdiFblShpBO">
         update edi_fbl_shp set org=#org#,dest=#dest#,shmpt_code=#shmptCode#,pcs=#pcs#,net_wt=#netWt#,total_pcs=#totalPcs#,man_desc=#manDesc#,spl_code1=#splCode1#,spl_code2=#splCode2#,
         spl_code3=#splCode3#,spl_code4=#splCode4#,spl_code5=#splCode5#,spl_code6=#splCode6#,spl_code7=#splCode7#,spl_code8=#splCode8#,spl_code9=#splCode9#,
         org_agent_name=#orgAgentName#,org_movt_prty_c=#orgMovtPrtyC#,spl_svc_req1=#splSvcReq1#,spl_svc_req2=#splSvcReq2#,
         other_svc_info1=#otherSvcInfo1#,other_svc_info2=#otherSvcInfo2#,org_flt_carr=#orgFltCarr#,org_flt_no=#orgFltNo#,org_flt_key=#orgFltKey#,org_flt_date=#orgFltDate#,
         lm_user_id=#lmUserId#,lm_date=#lmDate#,tr_type='RFBLU' where tr_no=#trNo# and doc_line_no=#docLineNo#
      </update>
            <update id="updateFblUldDetails" parameterClass="cargo.cms.edi.bo.EdiFblUldBO">
            update edi_fbl_uld set uld_type=#uldType#,uld_no=#uldNo#,uld_carr=#uldCarr#,uld_key=#uldKey#,load_ind=#loadInd#,uld_wt=#uldWt#,rmk=#rmk# where tr_no=#trNo# and doc_line_no=#docLineNo#
      </update>
      <select id="checkAWBLockStatus" parameterClass="map" resultClass="java.lang.String">
		SELECT decode(count(awb_lock.awb_no),0,'N','Y') 
		FROM awb_lock 
		WHERE awb_no = #awbNo#
			AND LOCK_YN = 'Y'
	</select>
	      <select id="checkAWBMissingStatus" parameterClass="map" resultClass="java.lang.String">
		SELECT decode(count(awb_lock.awb_no),0,'N','Y') 
		FROM awb_lock 
		WHERE awb_no = #awbNo#
			AND miss_yn = 'Y'
	</select>
	<select id="getAWBDate" parameterClass="cargo.cms.edi.bo.EdiFblShpBO" resultClass="cargo.cms.edi.bo.EdiFblShpBO">
		 SELECT to_char(t1.awb_date,'DDMONYY') as awbDate,t1.awb_no as awbNo from awb t1 where t1.awb_no=#awbNo# and t1.awb_closed_yn='N'and rownum=1
	</select>
	  <!-- Added for fix PR100645. Sanket 29SEP14 -->
    <select id="getAWBDateForAWBEnquiry" parameterClass="map" resultClass="java.lang.String">
    	 select awbDate from (SELECT to_char(t1.awb_date,'DDMONYY') as awbDate from awb t1 where t1.awb_no= #awbNo# order by t1.awb_date desc) where  rownum=1
	</select>
<delete id="deleteFBL" parameterClass="map">
		delete from edi_fbl where flt_key=#fltKey# and to_char(flt_date, 'DDMONYY')=to_date(#fltDate#, 'DDMONYY')
	</delete>
	<delete id="deleteFBLHeader" parameterClass="map">
		delete from edi_fbl where flt_key=#fltKey# and to_char(flt_date, 'DDMONYY')=to_date(#fltDate#, 'DDMONYY') and UNLDG_PT=#offPoint# 
	</delete>
	<delete id="deleteFBLShp" parameterClass="map">
		delete from edi_fbl_shp where tr_no in(select EF.tr_no from edi_fbl EF where EF.flt_key=#fltKey# and to_char(EF.flt_date, 'DDMONYY')=to_date(#fltDate#, 'DDMONYY'))
	</delete>
	
	<update id="deleteFBLShpLMUserID" parameterClass="cargo.cms.edi.bo.EdiFblBO">
    	update edi_fbl_shp set lm_user_id = #userID# where tr_no in (select EF.tr_no from edi_fbl EF where EF.flt_key=#fltKey# and to_char(EF.flt_date, 'DDMONYY')=to_date(#fltDate#, 'DDMONYY'))
      </update>
	
	<delete id="deleteFBLUld" parameterClass="map">
		delete from edi_fbl_uld where tr_no in(select EF.tr_no from edi_fbl EF where EF.flt_key=#fltKey# and to_char(EF.flt_date, 'DDMONYY')=to_date(#fltDate#, 'DDMONYY'))
	</delete>
      
     <select id="isFlightManFinalised" parameterClass="cargo.cms.edi.bo.EdiFblBO" resultClass="java.lang.String">
       select count(*) from flt_opr_events  where flt_type='D' and flt_key=#fltKey#
       and sch_date=to_date(#fltDate#,'ddmonyy') and FINAL_MANF_IND='Y'
		 
     </select>
     <select id="fetchFFMAwbDate" parameterClass="java.util.HashMap" resultClass="java.lang.String">
     	select nvl(pkg_imp.fun_get_awbdate_existing(#awbNo#, 'I', 'FFM'),TO_CHAR(SYSDATE,'DDMONYY')) AS awbDate from dual
     </select>
     <delete id="deleteImpCarChrgItm" parameterClass="java.util.HashMap">
      DELETE FROM imp_car_chrg_itm WHERE awb_no = #awbNo# AND awb_date = #awbDate#
     </delete>
   	<delete id="deleteAwbInventory" parameterClass="java.util.HashMap">
   	 DELETE FROM AWB_INVENTORY WHERE AWB_NO = #awbNo# AND AWB_DATE = #awbDate#
   	</delete>	
	<delete id="deleteImpCarAwb" parameterClass="java.util.HashMap">
		DELETE FROM imp_car_awb WHERE awb_no = #awbNo# AND awb_date = #awbDate#       
	</delete>
	<select id="fetchImpCarShp" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		 SELECT count(1) FROM imp_car_shp WHERE awb_no = #awbNo# AND awb_date = #awbDate# AND rownum = 1
	</select>
	<delete id="deleteImpCarShp" parameterClass="java.util.HashMap">
		DELETE FROM imp_car_shp WHERE flt_key = #carrCode# || '' || #fltNo# AND flt_date = TO_DATE(#fltDate#,'DDMONYY') AND ffm_flg = 'Y' AND awb_no = #awbNo# 
		AND awb_date = #awbDate# AND recd_pcs = 0 and car_created = 'N'
	</delete>
	<update id="updateImpCarShp" parameterClass="java.util.HashMap">
		 UPDATE imp_car_shp SET ffm_flg = 'N' WHERE flt_key = #carrCode# || '' || #fltNo# AND flt_date = TO_DATE(#fltDate#,'DDMONYY') AND ffm_flg = 'Y'
      	 AND awb_no  = #awbNo# AND AWB_DATE = #awbDate#  AND recd_pcs > 0
	</update>	
	<select id="fetchEdiFWB" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM EDI_FWB WHERE AWB_NO = #awbNo# AND AWB_DATE = #awbDate#
	</select>
	<delete id="deleteAwb" parameterClass="java.util.HashMap">
		  DELETE FROM AWB WHERE AWB_NO = #awbNo# AND AWB_DATE = #awbDate# AND AWB_TYPE = 'I'
	</delete>
<!-- Resend FSU Starts -->
	<parameterMap id="hParam" class="map">
		<parameter property="status" jdbcType="VARCHAR"
			javaType="java.lang.String" mode="OUT" />
		<parameter property="awbNo" jdbcType="VARCHAR"
			javaType="java.lang.String" mode="IN" />
	</parameterMap>
	<procedure id="sqlfunresendfsu" parameterMap="hParam">
		{? = call pkg_fsu.resend_fsu(?)}
	</procedure>

	<select id="fetchFsuMessageList" parameterClass="cargo.cms.edi.bo.OutboundMsgLogBO"	resultClass="cargo.cms.edi.bo.OutboundMsgLogBO">
		select 	awb_no as awbNo,msg_type as messageType,msg as messageContent,
				to_char(send_date,'ddMONyyyy hh24:mi') as messageSendDt 
		from 	gt_fsu 
		where awb_no=#awbNo# and  msg!='null'
	</select>

	<select id="fetchMessageList" parameterClass="cargo.cms.edi.bo.OutboundMsgLogBO" resultClass="cargo.cms.edi.bo.OutboundMsgLogBO">
		select 	msg_id as msgId, msg_seq_no as msgSeqNo, awb_no as awbNo,awb_date as awbDt, msg_date as messageSendDt, msg_type as
				messageType, msg as messageContent, msg_title as messageTitle
		from 	EDI_MSG_LOG_OUT where msg_id = ( select max(msg_id) from
				edi_msg_log_out where awb_no = #awbNo# and msg_type = 'FWB')
		order by msg_seq_no
	</select>

	<select id="fetchAddressList" parameterClass="cargo.cms.edi.bo.OutboundMsgLogBO" resultClass="cargo.cms.edi.bo.EdiAddresseeBO">
		select  cust_airl_sita_cimp_dtl.sita_addr as addrList 
		from 	mast_awb_prefix inner join cust_airl_sita_cimp_msg on
				mast_awb_prefix.carr_code = cust_airl_sita_cimp_msg.carr_code
				and cust_airl_sita_cimp_msg.msg_type like 'FSU%' inner join
				cust_airl_sita_cimp_dtl on cust_airl_sita_cimp_dtl.tr_no =
				cust_airl_sita_cimp_msg.tr_no where mast_awb_prefix.code =
				#carrierCode#
	</select>
	
	<select id="sqlFetchDefAddressList" parameterClass="cargo.cms.edi.bo.OutboundMsgLogBO"	resultClass="cargo.cms.edi.bo.EdiAddresseeBO">
		select 	distinct c.sita_addr as address 
		from 	mast_awb_prefix a,	cust_airl_sita_cimp_msg b, cust_airl_sita_cimp_dtl c 
		where	a.carr_code = b.carr_code and b.tr_no = c.tr_no and 
				a.code=#carrierCode# and a.def_yn='Y' and b.msg_type='FSU'
	</select>

	<select id="fetchAddressGrpList" parameterClass="java.util.HashMap" resultClass="cargo.cms.edi.bo.EdiAddresseeBO">
		select 	CUST_AIRL_SITA_GRPDTL.sita_addr as addrList 
		from	cust_airl_awb_pfx inner join CUST_AIRL_SITA_GRPDTL on
				cust_airl_awb_pfx.cust_no = CUST_AIRL_SITA_GRPDTL.cust_no and
				CUST_AIRL_SITA_GRPDTL.addr_group = #addrGrp# 
		where	cust_airl_awb_pfx.AWB_PFX = #awbPfx#
	</select>
<!-- Resend FSU End -->

<!-- Resend FWB & FHL Starts -->
	<select id="getCustNoResendFWB" parameterClass="java.util.HashMap" 	resultClass="java.lang.String">
		SELECT 	A.CUST_NO AS CUST_NO 
		FROM 	CUST_AIRL_SITA_GRP A,CUST_COMPANY B 
		WHERE 	UPPER(A.ADDR_GROUP) = UPPER(#addrGrp#) AND	A.CUST_NO = B.CODE
	</select>

	<select id="getAddrListResendFWB" parameterClass="java.util.HashMap" resultClass="cargo.cms.edi.bo.FWBDetailBO">
		SELECT 	SITA_ADDR AS address 
		FROM 	CUST_AIRL_SITA_GRPDTL 
		WHERE	CUST_NO = #custNo# AND UPPER(ADDR_GROUP) = UPPER(#addrGrp#)
		ORDER BY SITA_ADDR
	</select>

		<select id="fetchMessageListForResendFWB" parameterClass="cargo.cms.edi.bo.OutboundMsgLogBO" resultClass="cargo.cms.edi.bo.OutboundMsgLogBO">
		<!--	SELECT 	MSG_ID AS msgId,	MSG_SEQ_NO AS msgSeqNo,	SUBSTR(AWB_NO, 1,3) as awbNoPFX, 
			SUBSTR(AWB_NO, 4,11) as awbNoSFX,  	AWB_NO AS awbNo,AWB_DATE AS awbDt, 
			CARR_CODE AS carrierCode, FLT_NO AS flightNo,TO_CHAR(FLT_DATE, 'DDMONYY') AS flightDt, 
			FLT_KEY AS flightKey, 	to_char(MSG_DATE,'ddMONyy hh24:mi:ss') AS messageSendDt,  
			MSG_TYPE AS messageType, SENDER_ID AS messageSenderID,	MSG AS messageContent, 
			MSG_TITLE AS messageTitle,  ATTENTION AS messageAttn,	COPY AS messageCopyNo, 
			SRF_NO AS srfNo,  LM_USER_ID AS lmUserID,	LM_DATE AS lmDate,	LM_VER AS lmVersion
			FROM	EDI_MSG_LOG_OUT
			WHERE	MSG_ID = ( SELECT	MAX(MSG_ID)	FROM EDI_MSG_LOG_OUT	WHERE	MSG_TYPE ='FWB' 
			<isNotEmpty property="flightKey">
			AND UPPER(FLT_KEY)=UPPER(#flightKey#)
			</isNotEmpty>
			<isNotEmpty property="flightDt">
			AND FLT_DATE = TO_DATE(#flightDt#, 'DDMONYY')
			</isNotEmpty>
			<isNotEmpty property="awbNo">
			AND UPPER(AWB_NO)=UPPER(#awbNo#)
			</isNotEmpty> )				
			ORDER BY MSG_ID,MSG_SEQ_NO 
			SELECT DISTINCT		A.FLT_KEY flightKey,	TO_CHAR(A.FLT_DATE,'ddMONyy') flightDt,
			A.AWB_NO awbNo,	SUBSTR(C.AWB_NO, 1,3) as awbNoPFX,		SUBSTR(C.AWB_NO, 4,11) as awbNoSFX,
			C.MSG_ID AS msgId, 	C.MSG_SEQ_NO AS msgSeqNo,	TO_CHAR(C.AWB_DATE,'ddMONyy hh24:mi:ss') AS awbDt, 
			C.CARR_CODE AS carrierCode, C.FLT_NO AS flightNo,TO_CHAR(C.MSG_DATE,'ddMONyy hh24:mi:ss') AS messageSendDt,  
			C.MSG_TYPE AS messageType,  C.SENDER_ID AS messageSenderID,	C.MSG AS messageContent,
			C.MSG_TITLE AS messageTitle,  	C.ATTENTION AS messageAttn,	C.COPY AS messageCopyNo, 
			C.SRF_NO AS srfNo, 	C.LM_USER_ID AS lmUserID,	TO_CHAR(C.LM_DATE,'ddMONyy hh24:mi:ss') AS lmDate, 
			C.LM_VER AS lmVersion,	TO_CHAR(C.FWB_SEND_DATE,'DDMONYY HH24:MI:SS') fwb_send_date,
			TO_CHAR(C.FHL_SEND_DATE,'DDMONYY HH24:MI:SS') fhl_send_date,DECODE(B.AWB_NO,NULL,'N','Y') fwb_ind,
			DECODE(D.AWB_NO,NULL,'N','Y') fhl_ind
			FROM 	EXP_PMANIFEST_AWB A, EDI_FWB B, 
			(SELECT FLT_KEY,FLT_DATE,AWB_NO,MSG_ID,MSG_SEQ_NO,AWB_DATE,CARR_CODE,FLT_NO,MSG_DATE,MSG_TYPE,
			SENDER_ID,MSG,MSG_TITLE,ATTENTION,COPY,SRF_NO,LM_USER_ID,LM_DATE,LM_VER,
			MAX(DECODE(MSG_TYPE,'FWB',MSG_DATE)) FWB_SEND_DATE,
			MAX(DECODE(MSG_TYPE,'FHL',MSG_DATE)) FHL_SEND_DATE
			FROM EDI_MSG_LOG_OUT
			GROUP BY FLT_KEY,FLT_DATE,AWB_NO,MSG_ID,MSG_SEQ_NO,AWB_DATE,CARR_CODE,FLT_NO,MSG_DATE,MSG_TYPE,
			SENDER_ID,MSG,MSG_TITLE,ATTENTION,COPY,SRF_NO,LM_USER_ID,LM_DATE,LM_VER) C,
			MAST_HAWB D
			WHERE A.FLT_KEY = C.FLT_KEY(+)	AND A.FLT_DATE = C.FLT_DATE(+)
			AND A.AWB_NO = C.AWB_NO(+)	AND A.AWB_NO = B.AWB_NO(+)
			AND A.AWB_NO = D.AWB_NO(+)	AND A.FLT_KEY =#flightKey#
			AND A.FLT_DATE = TO_DATE(#flightDt#,'DDMONYY')	AND A.AWB_NO = NVL(#awbNo#,A.AWB_NO)
			ORDER BY flightKey,flightDt,awbNo-->
		SELECT 	DISTINCT A.AWB_NO,A.FLT_KEY flightKey,	TO_CHAR(A.FLT_DATE,'ddMONyy') flightDt, A.FLT_DATE, A.AWB_NO
				awbNo, SUBSTR(A.AWB_NO, 1,3) as awbNoPFX, SUBSTR(A.AWB_NO, 4,11)as awbNoSFX, 
				TO_CHAR(A.AWB_DATE,'ddMONyy hh24:mi:ss') AS awbDt,
				(SELECT TO_CHAR(MAX(MSG_DATE),'DDMONYY HH24:MI:SS') FROM
				EDI_MSG_LOG_OUT WHERE AWB_NO = A.AWB_NO AND FLT_KEY = A.FLT_KEY
				AND FLT_DATE = A.FLT_DATE AND MSG_TYPE = 'FWB') fwb_send_date,
				(SELECT TO_CHAR(MAX(MSG_DATE),'DDMONYY HH24:MI:SS') FROM
				EDI_MSG_LOG_OUT WHERE AWB_NO = A.AWB_NO AND FLT_KEY = A.FLT_KEY
				AND FLT_DATE = A.FLT_DATE AND MSG_TYPE = 'FHL') fhl_send_date,				
				'Y' fwb_ind,        
				'Y' fhl_ind,
				'Y' email_ind,
		        TO_CHAR(A.AWB_PRINT_DATE,'DDMONYY HH24:MI:SS') as print_send_date,
        		 TO_CHAR(A.AWB_SEND_DATE,'DDMONYY HH24:MI:SS') as email_send_date,
		        (SELECT SITA_ADDR as emailAddress FROM CUST_AIRL_SITA_ADDR 
          		WHERE CUST_NO = (SELECT code FROM CUST_COMPANY WHERE ACTIVE = 'Y' AND AIRLINE_YN = 'Y' AND BLACKLISTED='N' And Active = 'Y' 
          		AND Carr_Code = fo.carr_code AND CARR_CODE IS NOT NULL AND ROWNUM = 1)
          		AND TYPE = 'FCO' AND ADDR_TYPE = 'EMAIL' and PORT = a.unldg_pt and ROWNUM =1) as email1,
          		TO_CHAR(A.AWB_DATE,'DDMONYY') AS awbDate,
          		A.UNLDG_PT as supressUnldgpt,AWB.DEST as supressDest,(select carr_code from flt_opr opr where opr.flt_key=A.flt_key and opr.sch_date=A.flt_date and opr.flt_type='D') as supressCarrier,AWB.ACCEPT_MODE as acceptMode
		FROM	V_EXP_MANIFEST_AWB A
		JOIN FLT_OPR FO ON FO.FLT_KEY = A.FLT_KEY AND FO.SCH_DATE = A.FLT_DATE
    	LEFT JOIN AWB AWB ON AWB.AWB_NO = A.AWB_NO AND AWB.AWB_DATE = A.AWB_DATE
		WHERE 	A.FLT_KEY = #flightKey# AND A.FLT_DATE = TO_DATE(#flightDt#,'DDMONYY') AND A.AWB_NO =NVL(#awbNo#,A.AWB_NO)
		<isNotEmpty prepend="AND" property="unldgPt">
            A.UNLDG_PT = #unldgPt#
        </isNotEmpty>
		<isNotEmpty prepend="AND" property="loginCarrier">
            (FO.CARR_CODE = #loginCarrier#
             OR FO.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE= #loginCarrier#))
        </isNotEmpty>
		ORDER BY A.FLT_KEY,A.FLT_DATE,A.AWB_NO
	</select>
	<select id="fetchSuppressFWBFHLDetails" parameterClass="cargo.cms.edi.bo.OutboundMsgLogBO" resultClass="cargo.cms.edi.bo.OutboundMsgLogBO">
	<![CDATA[
	SELECT 
(CASE WHEN (
(SELECT count(1) FROM MAST_SUPRES_FWB_FHL_CONFIG WHERE AWB_PREFIX = #awbNoPFX#
	AND CARR_CODE = #supressCarrier#
	AND UNLDG_PT = #supressUnldgpt#
	AND (DEST = #supressDest# or COUNTRY = (SELECT CTRY_CODE FROM MAST_CITY WHERE CODE=#supressDest#))
	AND ACCEPT_MODE = #acceptMode#
	and NVL(SUPPRESS_FHL,'N') = 'Y')) > 0 THEN 'Y' ELSE 'N' END) AS supressFHL,
(CASE WHEN (
(SELECT count(1) FROM MAST_SUPRES_FWB_FHL_CONFIG WHERE AWB_PREFIX = #awbNoPFX#
	AND CARR_CODE = #supressCarrier#
	AND UNLDG_PT = #supressUnldgpt#
	AND (DEST = #supressDest# or COUNTRY = (SELECT CTRY_CODE FROM MAST_CITY WHERE CODE=#supressDest#))
	AND ACCEPT_MODE = #acceptMode#
	and NVL(SUPPRESS_FWB,'N') = 'Y')) > 0 THEN 'Y' ELSE 'N' END) AS supressFWB
FROM DUAL
 ]]>
	</select>
	<select id="fetchResendFWBByAwb" parameterClass="cargo.cms.edi.bo.OutboundMsgLogBO" resultClass="cargo.cms.edi.bo.OutboundMsgLogBO">
		<!--	SELECT DISTINCT  '' flightKey,'' flightDt,B.AWB_NO awbNo,	SUBSTR(B.AWB_NO, 1,3) as awbNoPFX, 
			SUBSTR(B.AWB_NO, 4,11) as awbNoSFX,	TO_CHAR(B.AWB_DATE,'ddMONyy hh24:mi:ss') AS awbDt, 
			TO_CHAR(C.FWB_SEND_DATE,'DDMONYY HH24:MI:SS') fwb_send_date,		TO_CHAR(C.FHL_SEND_DATE,'DDMONYY HH24:MI:SS') fhl_send_date,
			DECODE(B.AWB_NO,NULL,'N','Y') fwb_ind,		DECODE(D.AWB_NO,NULL,'N','Y') fhl_ind
			FROM EDI_FWB B,	(SELECT AWB_NO,	MAX(DECODE(MSG_TYPE,'FWB',MSG_DATE)) FWB_SEND_DATE,
			MAX(DECODE(MSG_TYPE,'FHL',MSG_DATE)) FHL_SEND_DATE
			FROM EDI_MSG_LOG_OUT
			WHERE AWB_NO =#awbNo# AND MSG_TYPE IN('FWB','FHL')
			GROUP BY AWB_NO) C,	MAST_HAWB D
			WHERE B.AWB_NO = C.AWB_NO(+)	AND B.AWB_NO = D.AWB_NO(+)
			AND B.AWB_NO = #awbNo#
			ORDER BY B.AWB_NO			-->
		SELECT 	DISTINCT E.FLT_KEY flightKey,to_char(E.FLT_DATE,'ddMONyy') flightDt, awb.AWB_NO awbNo,
				SUBSTR(awb.AWB_NO, 1, 3) AS awbNoPFX, SUBSTR(awb.AWB_NO, 4, 11) AS	awbNoSFX, 
				TO_CHAR(awb.AWB_DATE,'ddMONyy hh24:mi:ss') AS awbDt,TO_CHAR(C.FWB_SEND_DATE,'DDMONYY HH24:MI:SS') fwb_send_date,
				TO_CHAR(C.FHL_SEND_DATE,'DDMONYY HH24:MI:SS') fhl_send_date,
				'Y' fwb_ind,
        		'Y' fhl_ind,
        		'Y' email_ind,
        		TO_CHAR(E.AWB_PRINT_DATE,'DDMONYY HH24:MI:SS') as print_send_date,
        		TO_CHAR(E.AWB_SEND_DATE,'DDMONYY HH24:MI:SS') as email_send_date,
        		TO_CHAR(awb.AWB_DATE,'DDMONYY') AS awbDate,
        		E.UNLDG_PT as supressUnldgpt,awb.DEST as supressDest,(select carr_code from flt_opr opr where opr.flt_key=E.flt_key and opr.sch_date=E.flt_date and opr.flt_type='D') as supressCarrier,awb.ACCEPT_MODE as acceptMode 	 
		FROM  	AWB awb ,
				(SELECT NVL(E.AWB_NO,F.AWB_NO) AWB_NO,	NVL(F.AWB_DATE,TRUNC(SYSDATE)) AWB_DATE,
				DECODE(F.AWB_NO,NULL,'N','Y') fwb_ind FROM (SELECT #awbNo# AS
				AWB_NO FROM DUAL) E LEFT JOIN EDI_FWB F ON E.AWB_NO = F.AWB_NO
				WHERE ROWNUM = 1 ) B, (SELECT AWB_NO, MAX(DECODE(MSG_TYPE,
				'FWB', MSG_DATE)) FWB_SEND_DATE, MAX(DECODE(MSG_TYPE, 'FHL',
				MSG_DATE)) FHL_SEND_DATE FROM EDI_MSG_LOG_OUT WHERE AWB_NO =
				#awbNo# AND MSG_TYPE IN ('FWB', 'FHL') GROUP BY AWB_NO) C,
				(SELECT AWB_NO FROM MAST_HAWB WHERE AWB_NO = #awbNo# AND ROWNUM	= 1) D,
				(SELECT FLT_KEY,FLT_DATE,AWB_NO,UNLDG_PT,AWB_PRINT_DATE,AWB_SEND_DATE, DENSE_RANK()
				OVER(PARTITION BY FLT_KEY,FLT_DATE,AWB_NO ORDER BY FLT_DATE	DESC) SEQ 
				FROM V_EXP_MANIFEST_AWB WHERE AWB_NO=#awbNo#) E 
		WHERE	B.AWB_NO = C.AWB_NO(+) AND B.AWB_NO = D.AWB_NO(+) 
				AND B.AWB_NO =E.AWB_NO(+) AND E.SEQ(+) = 1   and awb.awb_no=#awbNo# and awb.awb_type in ('E','T') and awb.awb_closed_yn='N'
				<isNotEmpty prepend="AND" property="unldgPt">
		            E.UNLDG_PT = #unldgPt#
		        </isNotEmpty>
		ORDER BY awb.AWB_NO
	</select>

	<select id="fetchAddressListForResendFWBByAWB"	parameterClass="cargo.cms.edi.bo.OutboundMsgLogBO"	resultClass="cargo.cms.edi.bo.FWBDetailBO">
		<!--SELECT	CASCD.SITA_ADDR AS address
			FROM 	CUST_AIRL_AWB_PFX CAAP
					INNER JOIN CUST_AIRL_SITA_CIMP_MSG CASCM ON CAAP.CUST_NO = CASCM.CUST_NO AND CASCM.MSG_TYPE = 'FWB'
					INNER JOIN CUST_AIRL_SITA_CIMP_DTL CASCD ON CASCD.TR_NO = CASCM.TR_NO
			WHERE	CAAP.AWB_PFX=#awbNoPFX#-->
		SELECT 	DISTINCT C.SITA_ADDR AS address 
		FROM 	MAST_CARRIER A,CUST_AIRL_SITA_CIMP_MSG B, CUST_AIRL_SITA_CIMP_DTL C 
		WHERE	A.CODE = B.CARR_CODE AND B.TR_NO = C.TR_NO 
				AND A.CODE =#awbCarrier# AND B.MSG_TYPE = 'FWB'
	</select>

	<select id="fetchAddressListForResendFWBByCC" parameterClass="cargo.cms.edi.bo.OutboundMsgLogBO" resultClass="cargo.cms.edi.bo.FWBDetailBO">
		<!-- SELECT	CASCD.SITA_ADDR AS address
			 FROM	CUST_COMPANY CC
					INNER JOIN CUST_AIRL_SITA_CIMP_MSG CASCM ON CC.CODE = CASCM.CUST_NO AND CASCM.MSG_TYPE = 'FWB' AND CASCM.FLT_KEY = #flightKey#
					LEFT OUTER JOIN CUST_AIRL_SITA_CIMP_DTL CASCD ON CASCD.TR_NO = CASCM.TR_NO
			WHERE	CC.CARR_CODE=#carrierCode#	 -->
		SELECT 	DISTINCT B.SITA_ADDR AS address 
		FROM	CUST_AIRL_SITA_CIMP_MSG A, CUST_AIRL_SITA_CIMP_DTL B 
		WHERE	A.TR_NO = B.TR_NO AND A.MSG_TYPE = 'FWB' 
				AND A.CARR_CODE =DECODE(#flightKey#,'ZZZ99999',#carrierCode#,A.CARR_CODE) 
				AND	A.FLT_KEY=#flightKey#
	</select>

	<!--<select id="fetchAddressListForFFMByCC" parameterClass="cargo.cms.export.bo.FlightSearchBO"	resultClass="cargo.cms.export.bo.SitaAddressBO">
		SELECT 	DISTINCT B.SITA_ADDR AS sitaAddress 
		FROM	CUST_AIRL_SITA_CIMP_MSG A, CUST_AIRL_SITA_CIMP_DTL B 
		WHERE	A.TR_NO = B.TR_NO AND A.MSG_TYPE = 'FFM' 
				AND A.CARR_CODE =DECODE(#flightKey#,'ZZZ99999',#fltPfx#,A.CARR_CODE) 
				AND	A.FLT_KEY=#flightKey#
	</select>
	
	<select id="fetchAddressListForFSUByCC" parameterClass="java.util.HashMap" resultClass="cargo.cms.export.bo.SitaAddressBO">
		SELECT 	DISTINCT B.SITA_ADDR AS sitaAddress 
		FROM 	CUST_AIRL_SITA_CIMP_MSG A, CUST_AIRL_SITA_CIMP_DTL B 
		WHERE	A.TR_NO = B.TR_NO AND A.MSG_TYPE = #msgType# 
				AND	 A.CARR_CODE =DECODE(#flightKey#,'ZZZ99999',#fltPfx#,A.CARR_CODE) 
				AND	A.FLT_KEY=#flightKey#
	</select>	-->
	
	<select id="fetchAddressGrpListForResendFWBByAWB" parameterClass="cargo.cms.edi.bo.FWBDetailBO" resultClass="cargo.cms.edi.bo.FWBDetailBO">
		SELECT 	CASG.SITA_ADDR AS address 
		FROM 	CUST_AIRL_AWB_PFX CAAP
				INNER JOIN CUST_AIRL_SITA_GRPDTL CASG ON 
				CAAP.CUST_NO =CASG.CUST_NO AND CASG.ADDR_GROUP = #addrGrp# 
		WHERE	CAAP.AWB_PFX=#awbNoPFX#
	</select>

	<select id="fetchAddressGrpListForResendFWBByCC" parameterClass="cargo.cms.edi.bo.FWBDetailBO"	resultClass="cargo.cms.edi.bo.FWBDetailBO">
		SELECT 	CASG.SITA_ADDR AS address 
		FROM 	CUST_AIRL_AWB_PFX CAAP
				INNER JOIN CUST_AIRL_SITA_GRPDTL CASG ON 
				CAAP.CUST_NO =CASG.CUST_NO AND CASG.ADDR_GROUP = #addrGrp# 
		WHERE	CAAP.CARR_CODE=#carrierCode#
	</select>
	<!--  Resend FWB & FHL End -->
	<delete id="deleteAWBRecord" parameterClass="java.util.HashMap">
		DELETE FROM awb a
         WHERE NOT EXISTS (SELECT 1
                  FROM imp_car_awb
                 WHERE awb_no = a.awb_no
                   AND awb_date = a.awb_date)
            and NOT EXISTS(SELECT 1 FROM EDI_FWB WHERE AWB_NO = a.awb_no and awb_date = a.awb_date)
						and a.awb_no = #awbNo# and a.awb_date = TO_DATE(#awbDate#,'DDMONYY')
            and awb_type != 'E'
	</delete>
	<delete id="deleteEXPCARRecord" parameterClass="java.util.HashMap">
		DELETE FROM EXP_CAR a
        WHERE NOT EXISTS (SELECT 1 FROM imp_car_awb WHERE awb_no = a.awb_no AND awb_date = a.awb_date)
        AND NOT EXISTS(SELECT 1 FROM EDI_FWB WHERE AWB_NO = a.awb_no and awb_date = a.awb_date)						
		AND NOT EXISTS(SELECT 1 FROM AWB awb WHERE awb.AWB_NO = a.AWB_NO AND awb.AWB_DATE = a.AWB_DATE and awb.awb_type != 'E')
        AND a.awb_no = #awbNo# and a.awb_date = TO_DATE(#awbDate#,'DDMONYY')
	</delete>
	<!-- Submit to Finance -->
       <select id="fetchFinInfoDtList" parameterClass="cargo.cms.edi.bo.SendFinInfoBO" resultClass="cargo.cms.edi.bo.SendFinInfoBO">
	<![CDATA[
	select custCodeFinCode, custCode, carrCode,
		   chargeCode, 
		   accNo,
		   trim(to_char(sum(invsAmt),'9999999999990.99')) invAmt, 
		   itmDesc
		from ( select  /*+ ORDERED */ cc.fin_code || nvl(bid.carrCode,'XX') custCodeFinCode, cc.fin_code custCode, nvl(bid.carrCode,'XX') carrCode,
		             bid.itm_code chargeCode, 
					 replace(biga.gl_ac_no,'-','') accNo,
				 	 CASE WHEN BIGA.DSTBN_PER IS NOT NULL THEN NVL((BID.CHARGE_AMT*BIGA.DSTBN_PER/100),0) ELSE NVL((BID.CHARGE_AMT*BIGA.DSTBN_AMT/ BIR.UNIT_PRICE),0) END INVSAMT,
					 BIM.ITM_DESC itmDesc
				FROM BILL_INV_HD BIH  
        join (select a.inv_no inv_no, a.charge_amt charge_amt,a.itm_code,a.itm_code_sfx itm_code_sfx,b.ect_handler ect_handler,b.cust_no cust_no, bicd.AIRLINE carrCode
													FROM BILL_INV_DTL A 
                          JOIN BILL_CHARGE_DTL B ON A.CHRG_TR_NO = B.TR_NO
                          join (SELECT INV_NO, inv_doc_line_no , AIRLINE FROM BILL_INV_CRD_DTL where ADJ_NO is null and inv_no is not null GROUP BY INV_NO,inv_doc_line_no, AIRLINE) bicd  on bicd.INV_NO = A.INV_NO and bicd.inv_doc_line_no = A.doc_line_no
											where  a.cnsldt_inv_no is null 
											  and (a.rev_ind = 'G' OR( a.rev_ind = 'A' AND (((select count(1) from bill_inv_crd_dtl where inv_no = a.inv_no and (cr_lvl = 'AIRL_VIRTUAL' or cr_lvl = 'AIRL_VIRTUAL_CARR' 
											  											     or cr_lvl = 'AIRL_VIR_CATALOG' or cr_lvl = 'AIRL_VIR_CATALOG_CARR'
											  												 or cr_lvl = 'AIRL_GEN'  or cr_lvl = 'AIRL_GEN_CARR' or cr_lvl= 'AIRL_CATALOG' or cr_lvl = 'AIRL_CATALOG_CARR')) =0 
											  										   AND (select count(1) from bill_inv_crd_dtl where inv_no = a.inv_no and (cr_lvl = 'AGENT_LVL' or cr_lvl = 'AGENT_LVL_CARR') ) >0)   
																						   
																						   OR(
								                                                                  (select cpsl_collect from cust_company 
							                                                                 	     where carr_code=(SELECT (SELECT CARR_CODE FROM AWB WHERE AWB_NO = BCD.AWB_NO AND AWB_DATE =  BCD.AWB_DATE)  as aa
											                                                                            FROM BILL_INV_DTL D
											                                                                            JOIN BILL_INV_HD H ON D.INV_NO = H.INV_NO
											                                                                            LEFT JOIN BILL_CHARGE_DTL BCD ON D.CHRG_TR_NO = BCD.TR_NO
											                                                                            WHERE UPPER(D.INV_NO)=  UPPER(a.inv_no) and rownum=1
							                                                                 	     )and rownum=1) ='Y'
							                                                                 ))	
																					     )))bid
										    on bid.inv_no = bih.inv_no and bid.charge_amt >= 0                                  
				  join bill_itm_master bim  on bid.itm_code = bim.itm_code and NVL(bid.itm_code_sfx,'N') =  NVL(bim.itm_code_sfx,'N') and NVL(bid.ect_handler,'CPCT') = NVL(bim.ect_handler,'CPCT')
				  join bill_itm_gl_acc biga  on biga.itm_code = bid.itm_code and NVL(biga.itm_code_sfx,'N') =  NVL(bid.itm_code_sfx,'N') and NVL(biga.ect_handler,'CPCT') = NVL(bid.ect_handler,'CPCT')
				  join bill_itm_rate bir on bim.itm_code = bir.itm_code and NVL(bir.itm_code_sfx,'*') = NVL(bim.itm_code_sfx,'*') and NVL(bir.ect_handler,'CPCT') = NVL(bim.ect_handler,'CPCT')
				  join cust_company cc on cc.code= bid.cust_no and cc.fin_code is not null
				where
				bir.eff_date = (select max(eff_date) from bill_itm_rate where eff_date <= trunc(bih.inv_date) 
                          and  bim.itm_code = itm_code and NVL(itm_code_sfx,'*') = NVL(bim.itm_code_sfx,'*') and NVL(ect_handler,'CPCT') = NVL(bim.ect_handler,'CPCT') )
                and bih.inv_date>= to_date(#fromDate#||#fromTimeHr#||#fromTimeMin#||'00', 'DDMONYYHH24MISS') and bih.inv_date <= to_date(#toDate#||#toTimeHr#||#toTimeMin#||'59', 'DDMONYYHH24MISS')
					  and bih.inv_type='CRD'
			UNION ALL
				select  /*+ ORDERED */ cc.fin_code || nvl(bad.carrCode,'XX') custCodeFinCode, cc.fin_code custCode, nvl(bad.carrCode,'XX') carrCode,
				 bad.itm_code chargeCode, 
				 replace(biga.gl_ac_no,'-','') accNo,
	      		 CASE WHEN BIGA.DSTBN_PER IS NOT NULL THEN NVL((BAD.ADJ_AMT*BIGA.DSTBN_PER/100), 0) ELSE NVL((BAD.ADJ_AMT*BIGA.DSTBN_AMT/ BIR.UNIT_PRICE),0) END INVSAMT,
				 BIM.ITM_DESC ITMDESC
			  from bill_adj_hd bah join (select a.adj_no adj_no, a.adj_amt adj_amt,a.itm_code itm_code, a.itm_code_sfx itm_code_sfx, c.ect_handler ect_handler , c.cust_no cust_no, bih.inv_date, bicd.AIRLINE carrCode
												from bill_adj_dtl a 
                        join bill_inv_hd bih on a.inv_no = bih.inv_no
                        join bill_inv_dtl b on a.inv_no = b.inv_no and a.idoc_line_no = b.doc_line_no 
                        JOIN BILL_CHARGE_DTL C ON B.CHRG_TR_NO = C.TR_NO
                        join (SELECT adj_NO, adj_doc_line_no , AIRLINE FROM BILL_INV_CRD_DTL where adj_no is not null GROUP BY adj_NO, adj_doc_line_no , AIRLINE) bicd  on bicd.adj_NO = a.adj_NO and bicd.adj_doc_line_no = a.doc_line_no           
										where  a.cnsldt_inv_no is null 
										  and (a.rev_ind = 'G' OR( a.rev_ind = 'A' AND (((select count(1) from bill_inv_crd_dtl where adj_no = a.adj_no and (cr_lvl = 'AIRL_VIRTUAL' or cr_lvl = 'AIRL_VIRTUAL_CARR' 
											  											     or cr_lvl = 'AIRL_VIR_CATALOG' or cr_lvl = 'AIRL_VIR_CATALOG_CARR' 
											  												 or cr_lvl = 'AIRL_GEN'  or cr_lvl = 'AIRL_GEN_CARR' or cr_lvl= 'AIRL_CATALOG' or cr_lvl = 'AIRL_CATALOG_CARR' )) =0
											  									   AND (select count(1) from bill_inv_crd_dtl where adj_no = a.adj_no and (cr_lvl = 'AGENT_LVL' or cr_lvl = 'AGENT_LVL_CARR') ) >0)	

																						OR(
							                                                                  (select cpsl_collect from cust_company 
							                                                                 	      where carr_code=(SELECT (SELECT CARR_CODE FROM AWB WHERE AWB_NO = BCD.AWB_NO AND AWB_DATE =  BCD.AWB_DATE)  as aa
											                                                                            FROM BILL_ADJ_HD ADJ
					                                                                                                    JOIN BILL_INV_DTL A ON A.INV_NO = ADJ.INV_NO
					                                                                                                    LEFT JOIN BILL_CHARGE_DTL BCD ON A.CHRG_TR_NO = BCD.TR_NO
					                                                                                                    WHERE ADJ.ADJ_NO = a.adj_no and ROWNUM=1
							                                                                 	    		 )and rownum=1) ='Y'
							                                                                 ))
																				     )))bad
					                    on bad.adj_no= bah.adj_no and bad.adj_amt >= 0                              
				  join bill_itm_master bim  on  bad.itm_code = bim.itm_code and NVL(bad.itm_code_sfx,'N') =  NVL(bim.itm_code_sfx,'N') and NVL(bad.ect_handler,'CPCT') = NVL(bim.ect_handler,'CPCT')
				  join bill_itm_gl_acc biga	on biga.itm_code = bad.itm_code and NVL(biga.itm_code_sfx,'N') =  NVL(bad.itm_code_sfx,'N') and NVL(biga.ect_handler,'CPCT') = NVL(bad.ect_handler,'CPCT')	   
			      join bill_itm_rate bir on bim.itm_code = bir.itm_code and NVL(bir.itm_code_sfx,'*') = NVL(bim.itm_code_sfx,'*') and NVL(bir.ect_handler,'CPCT') = NVL(bim.ect_handler,'CPCT')
				  join cust_company cc on cc.code= bad.cust_no and cc.fin_code is not null
			   where bir.eff_date = (select max(eff_date) from bill_itm_rate where eff_date <= trunc(bad.inv_date) 
                          and  bim.itm_code = itm_code and NVL(itm_code_sfx,'*') = NVL(bim.itm_code_sfx,'*') and NVL(ect_handler,'CPCT') = NVL(bim.ect_handler,'CPCT') )
               and bah.adj_date >= to_date(#fromDate#||#fromTimeHr#||#fromTimeMin#||'00', 'DDMONYYHH24MISS') and bah.adj_date <= to_date(#toDate#||#toTimeHr#||#toTimeMin#||'59', 'DDMONYYHH24MISS')
				     and bah.adj_type='CRD') 
		group by custCodeFinCode, custCode, carrCode, chargeCode, accNo, itmDesc order by custCode, carrCode, chargeCode, accNo
		]]>
	</select>

	<select id="fetchFinInfoCrList" parameterClass="cargo.cms.edi.bo.SendFinInfoBO" resultClass="cargo.cms.edi.bo.SendFinInfoBO">
	<![CDATA[
	select custCodeFinCode, custCode, carrCode, chargeCode, accNo,
			 TRIM(TO_CHAR(SUM(INVSAMT),'9999999999990.99')) INVAMT, ITMDESC
	from ( select /*+ ORDERED */ cc.fin_code || nvl(bid.carrCode,'XX') custCodeFinCode, cc.fin_code custCode, nvl(bid.carrCode,'XX') carrCode,
		             bid.itm_code chargeCode, 
					 replace(biga.gl_ac_no,'-','') accNo,
				 	 CASE WHEN BIGA.DSTBN_PER IS NOT NULL THEN NVL((BID.CHARGE_AMT*BIGA.DSTBN_PER/100),0) ELSE NVL((BID.CHARGE_AMT*BIGA.DSTBN_AMT/ BIR.UNIT_PRICE),0) END INVSAMT,
					 BIM.ITM_DESC ITMDESC
				from bill_inv_hd bih  join (select a.inv_no inv_no, a.charge_amt charge_amt,a.itm_code,a.itm_code_sfx itm_code_sfx,b.ect_handler ect_handler,b.cust_no cust_no, bicd.AIRLINE carrCode
													FROM BILL_INV_DTL A JOIN BILL_CHARGE_DTL B ON A.CHRG_TR_NO = B.TR_NO
                          join (SELECT INV_NO, inv_doc_line_no , AIRLINE FROM BILL_INV_CRD_DTL where ADJ_NO is null and inv_no is not null GROUP BY INV_NO,inv_doc_line_no, AIRLINE) bicd  on bicd.INV_NO = A.INV_NO and bicd.inv_doc_line_no = A.doc_line_no
											where  a.cnsldt_inv_no is null 
											  and (a.rev_ind = 'G' OR( a.rev_ind = 'A' AND (((select count(1) from bill_inv_crd_dtl where inv_no = a.inv_no and (cr_lvl = 'AIRL_VIRTUAL' or cr_lvl = 'AIRL_VIRTUAL_CARR' 
											  											     or cr_lvl = 'AIRL_VIR_CATALOG' or cr_lvl = 'AIRL_VIR_CATALOG_CARR' 
											  												 or cr_lvl = 'AIRL_GEN' or cr_lvl = 'AIRL_GEN_CARR' or cr_lvl= 'AIRL_CATALOG' or cr_lvl = 'AIRL_CATALOG_CARR' )) =0
											  											AND (select count(1) from bill_inv_crd_dtl where inv_no = a.inv_no and (cr_lvl = 'AGENT_LVL' or cr_lvl = 'AGENT_LVL_CARR') ) >0)

																						OR(
							                                                                  (select cpsl_collect from cust_company 
							                                                                 	     where carr_code=(SELECT (SELECT CARR_CODE FROM AWB WHERE AWB_NO = BCD.AWB_NO AND AWB_DATE =  BCD.AWB_DATE)  as aa
											                                                                            FROM BILL_INV_DTL D
											                                                                            JOIN BILL_INV_HD H ON D.INV_NO = H.INV_NO
											                                                                            LEFT JOIN BILL_CHARGE_DTL BCD ON D.CHRG_TR_NO = BCD.TR_NO
											                                                                            WHERE UPPER(D.INV_NO)=  UPPER(a.inv_no) and rownum=1
							                                                                 	     )and rownum=1) ='Y'
							                                                                 ))
																					     )))bid
										    on bid.inv_no = bih.inv_no and bid.charge_amt < 0
				  join bill_itm_master bim  on bid.itm_code = bim.itm_code and NVL(bid.itm_code_sfx,'N') =  NVL(bim.itm_code_sfx,'N') and NVL(bid.ect_handler,'CPCT') = NVL(bim.ect_handler,'CPCT')
				  join bill_itm_gl_acc biga  on biga.itm_code = bid.itm_code and NVL(biga.itm_code_sfx,'N') =  NVL(bid.itm_code_sfx,'N') and NVL(biga.ect_handler,'CPCT') = NVL(bid.ect_handler,'CPCT')
				  join bill_itm_rate bir on bim.itm_code = bir.itm_code and NVL(bir.itm_code_sfx,'*') = NVL(bim.itm_code_sfx,'*') and NVL(bir.ect_handler,'CPCT') = NVL(bim.ect_handler,'CPCT')
				  join cust_company cc on cc.code= bid.cust_no and cc.fin_code is not null
				where bir.eff_date = (select max(eff_date) from bill_itm_rate where eff_date <= trunc(bih.inv_date) 
                          and  bim.itm_code = itm_code and NVL(itm_code_sfx,'*') = NVL(bim.itm_code_sfx,'*') and NVL(ect_handler,'CPCT') = NVL(bim.ect_handler,'CPCT') )
                and bih.inv_date>= to_date(#fromDate#||#fromTimeHr#||#fromTimeMin#||'00', 'DDMONYYHH24MISS') and bih.inv_date <= to_date(#toDate#||#toTimeHr#||#toTimeMin#||'59', 'DDMONYYHH24MISS')
					  and bih.inv_type='CRD'
			UNION ALL
				select /*+ ORDERED */  cc.fin_code || nvl(bad.carrCode,'XX') custCodeFinCode, cc.fin_code custCode, nvl(bad.carrCode,'XX') carrCode,
				 bad.itm_code chargeCode, 
				 replace(biga.gl_ac_no,'-','') accNo,
	      		 case when biga.dstbn_per is not null then nvl((bad.adj_amt*biga.dstbn_per/100), 0) else nvl((bad.adj_amt*biga.dstbn_amt/ bir.unit_price),0) end invsAmt,
				 bim.itm_desc itmDesc
			  from bill_adj_hd bah join (select a.adj_no adj_no, a.adj_amt adj_amt,a.itm_code itm_code, a.itm_code_sfx itm_code_sfx, c.ect_handler ect_handler , c.cust_no cust_no,  bih.inv_date, bicd.AIRLINE carrCode
												from bill_adj_dtl a 
                        join bill_inv_hd bih on a.inv_no = bih.inv_no 
                        join bill_inv_dtl b on a.inv_no = b.inv_no and a.idoc_line_no = b.doc_line_no 
                        join bill_charge_dtl c on b.chrg_tr_no = c.tr_no
                        join (SELECT adj_NO, adj_doc_line_no , AIRLINE FROM BILL_INV_CRD_DTL where adj_NO is not null  GROUP BY adj_NO, adj_doc_line_no , AIRLINE) bicd  on bicd.adj_NO = a.adj_NO and bicd.adj_doc_line_no = a.doc_line_no           
										where  a.cnsldt_inv_no is null 
										  and (a.rev_ind = 'G' OR( a.rev_ind = 'A' AND (((select count(1) from bill_inv_crd_dtl where adj_no = a.adj_no and (cr_lvl = 'AIRL_VIRTUAL' or cr_lvl = 'AIRL_VIRTUAL_CARR' 
											  											     or cr_lvl = 'AIRL_VIR_CATALOG' or cr_lvl = 'AIRL_VIR_CATALOG_CARR' 
											  												 or cr_lvl = 'AIRL_GEN' or cr_lvl = 'AIRL_GEN_CARR' or cr_lvl= 'AIRL_CATALOG' or cr_lvl = 'AIRL_CATALOG_CARR' )) =0
											  										AND (select count(1) from bill_inv_crd_dtl where adj_no = a.adj_no and (cr_lvl = 'AGENT_LVL' or cr_lvl = 'AGENT_LVL_CARR') ) >0)	
																						
																						OR(
							                                                                  (select cpsl_collect from cust_company 
							                                                                 	     where carr_code=(SELECT (SELECT CARR_CODE FROM AWB WHERE AWB_NO = BCD.AWB_NO AND AWB_DATE =  BCD.AWB_DATE)  as aa
											                                                                            FROM BILL_ADJ_HD ADJ
					                                                                                                    JOIN BILL_INV_DTL A ON A.INV_NO = ADJ.INV_NO
					                                                                                                    LEFT JOIN BILL_CHARGE_DTL BCD ON A.CHRG_TR_NO = BCD.TR_NO
					                                                                                                    WHERE ADJ.ADJ_NO = a.adj_no and ROWNUM=1
							                                                                 	    		 )and rownum=1) ='Y'
							                                                                 ))		 
																				     )))bad
					                    on bad.adj_no= bah.adj_no and bad.adj_amt < 0
				  join bill_itm_master bim  on  bad.itm_code = bim.itm_code and NVL(bad.itm_code_sfx,'N') =  NVL(bim.itm_code_sfx,'N') and NVL(bad.ect_handler,'CPCT') = NVL(bim.ect_handler,'CPCT')
				  join bill_itm_gl_acc biga	on biga.itm_code = bad.itm_code and NVL(biga.itm_code_sfx,'N') =  NVL(bad.itm_code_sfx,'N') and NVL(biga.ect_handler,'CPCT') = NVL(bad.ect_handler,'CPCT')	   
			      join bill_itm_rate bir on bim.itm_code = bir.itm_code and NVL(bir.itm_code_sfx,'*') = NVL(bim.itm_code_sfx,'*') and NVL(bir.ect_handler,'CPCT') = NVL(bim.ect_handler,'CPCT')
				  join cust_company cc on cc.code= bad.cust_no and cc.fin_code is not null
			   where bir.eff_date = (select max(eff_date) from bill_itm_rate where eff_date <= trunc(bad.inv_date) 
                          and  bim.itm_code = itm_code and NVL(itm_code_sfx,'*') = NVL(bim.itm_code_sfx,'*') and NVL(ect_handler,'CPCT') = NVL(bim.ect_handler,'CPCT') )
                and bah.adj_date >= to_date(#fromDate#||#fromTimeHr#||#fromTimeMin#||'00', 'DDMONYYHH24MISS') and bah.adj_date <= to_date(#toDate#||#toTimeHr#||#toTimeMin#||'59', 'DDMONYYHH24MISS')
				     and bah.adj_type='CRD') group by custCodeFinCode, custCode, carrCode, chargeCode, accNo, itmDesc order by custCode, carrCode, chargeCode, accNo
				     ]]>
	</select>

<select id="fetchFinCodeDtList" parameterClass="cargo.cms.edi.bo.SendFinInfoBO" resultClass="java.lang.String">
	<![CDATA[
	select custCode
	from ( select  /*+ ORDERED */ cc.fin_code || nvl(bid.carrCode,'XX') custCode,
		             bid.itm_code chargeCode, 
					 replace(biga.gl_ac_no,'-','') accNo,
				 	 CASE WHEN BIGA.DSTBN_PER IS NOT NULL THEN NVL((BID.CHARGE_AMT*BIGA.DSTBN_PER/100),0) ELSE NVL((BID.CHARGE_AMT*BIGA.DSTBN_AMT/ BIR.UNIT_PRICE),0) END INVSAMT,
					 BIM.ITM_DESC itmDesc
				FROM BILL_INV_HD BIH  
        join (select a.inv_no inv_no, a.charge_amt charge_amt,a.itm_code,a.itm_code_sfx itm_code_sfx,b.ect_handler ect_handler,b.cust_no cust_no, bicd.AIRLINE carrCode
													FROM BILL_INV_DTL A 
                          JOIN BILL_CHARGE_DTL B ON A.CHRG_TR_NO = B.TR_NO
                          join (SELECT INV_NO, inv_doc_line_no , AIRLINE FROM BILL_INV_CRD_DTL where ADJ_NO is null and inv_no is not null GROUP BY INV_NO,inv_doc_line_no, AIRLINE) bicd  on bicd.INV_NO = A.INV_NO and bicd.inv_doc_line_no = A.doc_line_no
											where  a.cnsldt_inv_no is null 
											  and (a.rev_ind = 'G' OR( a.rev_ind = 'A' AND (((select count(1) from bill_inv_crd_dtl where inv_no = a.inv_no and (cr_lvl = 'AIRL_VIRTUAL' or cr_lvl = 'AIRL_VIRTUAL_CARR' 
											  											     or cr_lvl = 'AIRL_VIR_CATALOG' or cr_lvl = 'AIRL_VIR_CATALOG_CARR'
											  												 or cr_lvl = 'AIRL_GEN'  or cr_lvl = 'AIRL_GEN_CARR' or cr_lvl= 'AIRL_CATALOG' or cr_lvl = 'AIRL_CATALOG_CARR')) =0 
											  										   AND (select count(1) from bill_inv_crd_dtl where inv_no = a.inv_no and (cr_lvl = 'AGENT_LVL' or cr_lvl = 'AGENT_LVL_CARR') ) >0)   
																						   
																						   OR(
								                                                                  (select cpsl_collect from cust_company 
							                                                                 	     where carr_code=(SELECT (SELECT CARR_CODE FROM AWB WHERE AWB_NO = BCD.AWB_NO AND AWB_DATE =  BCD.AWB_DATE)  as aa
											                                                                            FROM BILL_INV_DTL D
											                                                                            JOIN BILL_INV_HD H ON D.INV_NO = H.INV_NO
											                                                                            LEFT JOIN BILL_CHARGE_DTL BCD ON D.CHRG_TR_NO = BCD.TR_NO
											                                                                            WHERE UPPER(D.INV_NO)=  UPPER(a.inv_no) and rownum=1
							                                                                 	     )and rownum=1) ='Y'
							                                                                 ))	
																					     )))bid
										    on bid.inv_no = bih.inv_no and bid.charge_amt >= 0                                  
				  join bill_itm_master bim  on bid.itm_code = bim.itm_code and NVL(bid.itm_code_sfx,'N') =  NVL(bim.itm_code_sfx,'N') and NVL(bid.ect_handler,'CPCT') = NVL(bim.ect_handler,'CPCT')
				  join bill_itm_gl_acc biga  on biga.itm_code = bid.itm_code and NVL(biga.itm_code_sfx,'N') =  NVL(bid.itm_code_sfx,'N') and NVL(biga.ect_handler,'CPCT') = NVL(bid.ect_handler,'CPCT')
				  join bill_itm_rate bir on bim.itm_code = bir.itm_code and NVL(bir.itm_code_sfx,'*') = NVL(bim.itm_code_sfx,'*') and NVL(bir.ect_handler,'CPCT') = NVL(bim.ect_handler,'CPCT')
				  join cust_company cc on cc.code= bid.cust_no and cc.fin_code is not null
				where
				bir.eff_date = (select max(eff_date) from bill_itm_rate where eff_date <= trunc(bih.inv_date) 
                          and  bim.itm_code = itm_code and NVL(itm_code_sfx,'*') = NVL(bim.itm_code_sfx,'*') and NVL(ect_handler,'CPCT') = NVL(bim.ect_handler,'CPCT') )
                and bih.inv_date>= to_date(#fromDate#||#fromTimeHr#||#fromTimeMin#||'00', 'DDMONYYHH24MISS') and bih.inv_date <= to_date(#toDate#||#toTimeHr#||#toTimeMin#||'59', 'DDMONYYHH24MISS')
					  and bih.inv_type='CRD'
			UNION ALL
				select  /*+ ORDERED */ cc.fin_code || nvl(bad.carrCode,'XX') custCode,
				 bad.itm_code chargeCode, 
				 replace(biga.gl_ac_no,'-','') accNo,
	      		 CASE WHEN BIGA.DSTBN_PER IS NOT NULL THEN NVL((BAD.ADJ_AMT*BIGA.DSTBN_PER/100), 0) ELSE NVL((BAD.ADJ_AMT*BIGA.DSTBN_AMT/ BIR.UNIT_PRICE),0) END INVSAMT,
				 BIM.ITM_DESC ITMDESC
			  from bill_adj_hd bah join (select a.adj_no adj_no, a.adj_amt adj_amt,a.itm_code itm_code, a.itm_code_sfx itm_code_sfx, c.ect_handler ect_handler , c.cust_no cust_no, bih.inv_date, bicd.AIRLINE carrCode
												from bill_adj_dtl a 
                        join bill_inv_hd bih on a.inv_no = bih.inv_no
                        join bill_inv_dtl b on a.inv_no = b.inv_no and a.idoc_line_no = b.doc_line_no 
                        JOIN BILL_CHARGE_DTL C ON B.CHRG_TR_NO = C.TR_NO
                        join (SELECT adj_NO, adj_doc_line_no , AIRLINE FROM BILL_INV_CRD_DTL where adj_no is not null GROUP BY adj_NO, adj_doc_line_no , AIRLINE) bicd  on bicd.adj_NO = a.adj_NO and bicd.adj_doc_line_no = a.doc_line_no           
										where  a.cnsldt_inv_no is null 
										  and (a.rev_ind = 'G' OR( a.rev_ind = 'A' AND (((select count(1) from bill_inv_crd_dtl where adj_no = a.adj_no and (cr_lvl = 'AIRL_VIRTUAL' or cr_lvl = 'AIRL_VIRTUAL_CARR' 
											  											     or cr_lvl = 'AIRL_VIR_CATALOG' or cr_lvl = 'AIRL_VIR_CATALOG_CARR' 
											  												 or cr_lvl = 'AIRL_GEN'  or cr_lvl = 'AIRL_GEN_CARR' or cr_lvl= 'AIRL_CATALOG' or cr_lvl = 'AIRL_CATALOG_CARR' )) =0
											  									   AND (select count(1) from bill_inv_crd_dtl where adj_no = a.adj_no and (cr_lvl = 'AGENT_LVL' or cr_lvl = 'AGENT_LVL_CARR') ) >0)	

																						OR(
							                                                                  (select cpsl_collect from cust_company 
							                                                                 	      where carr_code=(SELECT (SELECT CARR_CODE FROM AWB WHERE AWB_NO = BCD.AWB_NO AND AWB_DATE =  BCD.AWB_DATE)  as aa
											                                                                            FROM BILL_ADJ_HD ADJ
					                                                                                                    JOIN BILL_INV_DTL A ON A.INV_NO = ADJ.INV_NO
					                                                                                                    LEFT JOIN BILL_CHARGE_DTL BCD ON A.CHRG_TR_NO = BCD.TR_NO
					                                                                                                    WHERE ADJ.ADJ_NO = a.adj_no and ROWNUM=1
							                                                                 	    		 )and rownum=1) ='Y'
							                                                                 ))
																				     )))bad
					                    on bad.adj_no= bah.adj_no and bad.adj_amt >= 0                              
				  join bill_itm_master bim  on  bad.itm_code = bim.itm_code and NVL(bad.itm_code_sfx,'N') =  NVL(bim.itm_code_sfx,'N') and NVL(bad.ect_handler,'CPCT') = NVL(bim.ect_handler,'CPCT')
				  join bill_itm_gl_acc biga	on biga.itm_code = bad.itm_code and NVL(biga.itm_code_sfx,'N') =  NVL(bad.itm_code_sfx,'N') and NVL(biga.ect_handler,'CPCT') = NVL(bad.ect_handler,'CPCT')	   
			      join bill_itm_rate bir on bim.itm_code = bir.itm_code and NVL(bir.itm_code_sfx,'*') = NVL(bim.itm_code_sfx,'*') and NVL(bir.ect_handler,'CPCT') = NVL(bim.ect_handler,'CPCT')
				  join cust_company cc on cc.code= bad.cust_no and cc.fin_code is not null
			   where bir.eff_date = (select max(eff_date) from bill_itm_rate where eff_date <= trunc(bad.inv_date) 
                          and  bim.itm_code = itm_code and NVL(itm_code_sfx,'*') = NVL(bim.itm_code_sfx,'*') and NVL(ect_handler,'CPCT') = NVL(bim.ect_handler,'CPCT') )
               and bah.adj_date >= to_date(#fromDate#||#fromTimeHr#||#fromTimeMin#||'00', 'DDMONYYHH24MISS') and bah.adj_date <= to_date(#toDate#||#toTimeHr#||#toTimeMin#||'59', 'DDMONYYHH24MISS')
				     and bah.adj_type='CRD') group by custCode order by custCode
				     ]]>
	</select>
	
	<select id="fetchFinCodeCrList" parameterClass="cargo.cms.edi.bo.SendFinInfoBO" resultClass="java.lang.String">
	<![CDATA[
	select custCode
	from ( select /*+ ORDERED */ cc.fin_code || nvl(bid.carrCode,'XX') custCode,
		             bid.itm_code chargeCode, 
					 replace(biga.gl_ac_no,'-','') accNo,
				 	 CASE WHEN BIGA.DSTBN_PER IS NOT NULL THEN NVL((BID.CHARGE_AMT*BIGA.DSTBN_PER/100),0) ELSE NVL((BID.CHARGE_AMT*BIGA.DSTBN_AMT/ BIR.UNIT_PRICE),0) END INVSAMT,
					 BIM.ITM_DESC ITMDESC
				from bill_inv_hd bih  join (select a.inv_no inv_no, a.charge_amt charge_amt,a.itm_code,a.itm_code_sfx itm_code_sfx,b.ect_handler ect_handler,b.cust_no cust_no, bicd.AIRLINE carrCode
													FROM BILL_INV_DTL A JOIN BILL_CHARGE_DTL B ON A.CHRG_TR_NO = B.TR_NO
                          join (SELECT INV_NO, inv_doc_line_no , AIRLINE FROM BILL_INV_CRD_DTL where ADJ_NO is null and inv_no is not null GROUP BY INV_NO,inv_doc_line_no, AIRLINE) bicd  on bicd.INV_NO = A.INV_NO and bicd.inv_doc_line_no = A.doc_line_no
											where  a.cnsldt_inv_no is null 
											  and (a.rev_ind = 'G' OR( a.rev_ind = 'A' AND (((select count(1) from bill_inv_crd_dtl where inv_no = a.inv_no and (cr_lvl = 'AIRL_VIRTUAL' or cr_lvl = 'AIRL_VIRTUAL_CARR' 
											  											     or cr_lvl = 'AIRL_VIR_CATALOG' or cr_lvl = 'AIRL_VIR_CATALOG_CARR' 
											  												 or cr_lvl = 'AIRL_GEN' or cr_lvl = 'AIRL_GEN_CARR' or cr_lvl= 'AIRL_CATALOG' or cr_lvl = 'AIRL_CATALOG_CARR' )) =0
											  											AND (select count(1) from bill_inv_crd_dtl where inv_no = a.inv_no and (cr_lvl = 'AGENT_LVL' or cr_lvl = 'AGENT_LVL_CARR') ) >0)

																						OR(
							                                                                  (select cpsl_collect from cust_company 
							                                                                 	     where carr_code=(SELECT (SELECT CARR_CODE FROM AWB WHERE AWB_NO = BCD.AWB_NO AND AWB_DATE =  BCD.AWB_DATE)  as aa
											                                                                            FROM BILL_INV_DTL D
											                                                                            JOIN BILL_INV_HD H ON D.INV_NO = H.INV_NO
											                                                                            LEFT JOIN BILL_CHARGE_DTL BCD ON D.CHRG_TR_NO = BCD.TR_NO
											                                                                            WHERE UPPER(D.INV_NO)=  UPPER(a.inv_no) and rownum=1
							                                                                 	     )and rownum=1) ='Y'
							                                                                 ))
																					     )))bid
										    on bid.inv_no = bih.inv_no and bid.charge_amt < 0
				  join bill_itm_master bim  on bid.itm_code = bim.itm_code and NVL(bid.itm_code_sfx,'N') =  NVL(bim.itm_code_sfx,'N') and NVL(bid.ect_handler,'CPCT') = NVL(bim.ect_handler,'CPCT')
				  join bill_itm_gl_acc biga  on biga.itm_code = bid.itm_code and NVL(biga.itm_code_sfx,'N') =  NVL(bid.itm_code_sfx,'N') and NVL(biga.ect_handler,'CPCT') = NVL(bid.ect_handler,'CPCT')
				  join bill_itm_rate bir on bim.itm_code = bir.itm_code and NVL(bir.itm_code_sfx,'*') = NVL(bim.itm_code_sfx,'*') and NVL(bir.ect_handler,'CPCT') = NVL(bim.ect_handler,'CPCT')
				  join cust_company cc on cc.code= bid.cust_no and cc.fin_code is not null
				where bir.eff_date = (select max(eff_date) from bill_itm_rate where eff_date <= trunc(bih.inv_date) 
                          and  bim.itm_code = itm_code and NVL(itm_code_sfx,'*') = NVL(bim.itm_code_sfx,'*') and NVL(ect_handler,'CPCT') = NVL(bim.ect_handler,'CPCT') )
                and bih.inv_date>= to_date(#fromDate#||#fromTimeHr#||#fromTimeMin#||'00', 'DDMONYYHH24MISS') and bih.inv_date <= to_date(#toDate#||#toTimeHr#||#toTimeMin#||'59', 'DDMONYYHH24MISS')
					  and bih.inv_type='CRD'
			UNION ALL
				select /*+ ORDERED */  cc.fin_code || nvl(bad.carrCode,'XX') custCode,
				 bad.itm_code chargeCode, 
				 replace(biga.gl_ac_no,'-','') accNo,
	      		 case when biga.dstbn_per is not null then nvl((bad.adj_amt*biga.dstbn_per/100), 0) else nvl((bad.adj_amt*biga.dstbn_amt/ bir.unit_price),0) end invsAmt,
				 bim.itm_desc itmDesc
			  from bill_adj_hd bah join (select a.adj_no adj_no, a.adj_amt adj_amt,a.itm_code itm_code, a.itm_code_sfx itm_code_sfx, c.ect_handler ect_handler , c.cust_no cust_no,  bih.inv_date, bicd.AIRLINE carrCode
												from bill_adj_dtl a 
                        join bill_inv_hd bih on a.inv_no = bih.inv_no 
                        join bill_inv_dtl b on a.inv_no = b.inv_no and a.idoc_line_no = b.doc_line_no 
                        join bill_charge_dtl c on b.chrg_tr_no = c.tr_no
                        join (SELECT adj_NO, adj_doc_line_no , AIRLINE FROM BILL_INV_CRD_DTL where adj_NO is not null  GROUP BY adj_NO, adj_doc_line_no , AIRLINE) bicd  on bicd.adj_NO = a.adj_NO and bicd.adj_doc_line_no = a.doc_line_no           
										where  a.cnsldt_inv_no is null 
										  and (a.rev_ind = 'G' OR( a.rev_ind = 'A' AND (((select count(1) from bill_inv_crd_dtl where adj_no = a.adj_no and (cr_lvl = 'AIRL_VIRTUAL' or cr_lvl = 'AIRL_VIRTUAL_CARR' 
											  											     or cr_lvl = 'AIRL_VIR_CATALOG' or cr_lvl = 'AIRL_VIR_CATALOG_CARR' 
											  												 or cr_lvl = 'AIRL_GEN' or cr_lvl = 'AIRL_GEN_CARR' or cr_lvl= 'AIRL_CATALOG' or cr_lvl = 'AIRL_CATALOG_CARR' )) =0
											  										AND (select count(1) from bill_inv_crd_dtl where adj_no = a.adj_no and (cr_lvl = 'AGENT_LVL' or cr_lvl = 'AGENT_LVL_CARR') ) >0)	
																						
																						OR(
							                                                                  (select cpsl_collect from cust_company 
							                                                                 	     where carr_code=(SELECT (SELECT CARR_CODE FROM AWB WHERE AWB_NO = BCD.AWB_NO AND AWB_DATE =  BCD.AWB_DATE)  as aa
											                                                                            FROM BILL_ADJ_HD ADJ
					                                                                                                    JOIN BILL_INV_DTL A ON A.INV_NO = ADJ.INV_NO
					                                                                                                    LEFT JOIN BILL_CHARGE_DTL BCD ON A.CHRG_TR_NO = BCD.TR_NO
					                                                                                                    WHERE ADJ.ADJ_NO = a.adj_no and ROWNUM=1
							                                                                 	    		 )and rownum=1) ='Y'
							                                                                 ))		 
																				     )))bad
					                    on bad.adj_no= bah.adj_no and bad.adj_amt < 0
				  join bill_itm_master bim  on  bad.itm_code = bim.itm_code and NVL(bad.itm_code_sfx,'N') =  NVL(bim.itm_code_sfx,'N') and NVL(bad.ect_handler,'CPCT') = NVL(bim.ect_handler,'CPCT')
				  join bill_itm_gl_acc biga	on biga.itm_code = bad.itm_code and NVL(biga.itm_code_sfx,'N') =  NVL(bad.itm_code_sfx,'N') and NVL(biga.ect_handler,'CPCT') = NVL(bad.ect_handler,'CPCT')	   
			      join bill_itm_rate bir on bim.itm_code = bir.itm_code and NVL(bir.itm_code_sfx,'*') = NVL(bim.itm_code_sfx,'*') and NVL(bir.ect_handler,'CPCT') = NVL(bim.ect_handler,'CPCT')
				  join cust_company cc on cc.code= bad.cust_no and cc.fin_code is not null
			   where bir.eff_date = (select max(eff_date) from bill_itm_rate where eff_date <= trunc(bad.inv_date) 
                          and  bim.itm_code = itm_code and NVL(itm_code_sfx,'*') = NVL(bim.itm_code_sfx,'*') and NVL(ect_handler,'CPCT') = NVL(bim.ect_handler,'CPCT') )
                and bah.adj_date >= to_date(#fromDate#||#fromTimeHr#||#fromTimeMin#||'00', 'DDMONYYHH24MISS') and bah.adj_date <= to_date(#toDate#||#toTimeHr#||#toTimeMin#||'59', 'DDMONYYHH24MISS')
				     and bah.adj_type='CRD') group by custCode order by custCode
				     ]]>
	</select>
	<select id="fetchFinCnslInvNo" parameterClass="java.lang.String" resultClass="java.lang.String">
	select trim(to_char(SQ_FIN_CNSL_INV_NO.nextval,'0000000000')) from dual
	</select>
	<select id="fetchFinCnslInvCarrierPfx" parameterClass="java.lang.String" resultClass="java.lang.String">
		select DECODE(LENGTH(FIMS_CNSLDT_PFX),null,'99',0,'99',1,'9'||FIMS_CNSLDT_PFX, FIMS_CNSLDT_PFX) from MAST_CARRIER  where code = #carrCode#
	</select>
	
	<update id="updateFinInfoDtInvoices" parameterClass="cargo.cms.edi.bo.SendFinInfoBO">	
	<![CDATA[
	UPDATE BILL_INV_DTL SET CNSLDT_INV_NO=#invId#,CNSLDT_INV_DATE=#cnslInvDate# 
	where rowid in (select bid.rwid
				from bill_inv_hd bih  join (select a.rowid as rwid, a.inv_no inv_no, a.charge_amt charge_amt,a.itm_code,a.itm_code_sfx itm_code_sfx,b.ect_handler ect_handler,b.cust_no cust_no, bicd.AIRLINE carrCode
													from bill_inv_dtl a join bill_charge_dtl b on a.chrg_tr_no = b.tr_no
                          join BILL_INV_CRD_DTL bicd on bicd.INV_NO is not null and bicd.INV_NO = A.INV_NO and bicd.inv_doc_line_no = A.doc_line_no and  nvl(bicd.AIRLINE,'XX') = #carrCode# 
											where  a.cnsldt_inv_no is null 
											  and (a.rev_ind = 'G' OR( a.rev_ind = 'A' AND (((select count(1) from bill_inv_crd_dtl where inv_no = a.inv_no and (cr_lvl = 'AIRL_VIRTUAL' or cr_lvl = 'AIRL_VIRTUAL_CARR' 
											  											     or cr_lvl = 'AIRL_VIR_CATALOG' or cr_lvl = 'AIRL_VIR_CATALOG_CARR' 
											  												 or cr_lvl = 'AIRL_GEN' or cr_lvl = 'AIRL_GEN_CARR' or cr_lvl= 'AIRL_CATALOG'or cr_lvl = 'AIRL_CATALOG_CARR' )) =0
											  										   AND (select count(1) from bill_inv_crd_dtl where inv_no = a.inv_no and (cr_lvl = 'AGENT_LVL' or cr_lvl = 'AGENT_LVL_CARR') ) >0)
																						
																						OR(
							                                                                  (select cpsl_collect from cust_company 
							                                                                 	     where carr_code=(SELECT (SELECT CARR_CODE FROM AWB WHERE AWB_NO = BCD.AWB_NO AND AWB_DATE =  BCD.AWB_DATE)  as aa
											                                                                            FROM BILL_INV_DTL D
											                                                                            JOIN BILL_INV_HD H ON D.INV_NO = H.INV_NO
											                                                                            LEFT JOIN BILL_CHARGE_DTL BCD ON D.CHRG_TR_NO = BCD.TR_NO
											                                                                            WHERE UPPER(D.INV_NO)=  UPPER(a.inv_no) and rownum=1
							                                                                 	     )and rownum=1) ='Y'
							                                                                 ))
																					     )))bid
										    on bid.inv_no = bih.inv_no and bid.charge_amt >= 0
				  join bill_itm_master bim  on bid.itm_code = bim.itm_code and NVL(bid.itm_code_sfx,'N') =  NVL(bim.itm_code_sfx,'N') and NVL(bid.ect_handler,'CPCT') = NVL(bim.ect_handler,'CPCT')
				  join bill_itm_gl_acc biga  on biga.itm_code = bid.itm_code and NVL(biga.itm_code_sfx,'N') =  NVL(bid.itm_code_sfx,'N') and NVL(biga.ect_handler,'CPCT') = NVL(bid.ect_handler,'CPCT')
				  join bill_itm_rate bir on bim.itm_code = bir.itm_code and NVL(bir.itm_code_sfx,'*') = NVL(bim.itm_code_sfx,'*') and NVL(bir.ect_handler,'CPCT') = NVL(bim.ect_handler,'CPCT')
				  join cust_company cc on cc.code= bid.cust_no and cc.fin_code is not null and cc.fin_code = #custCode#
				where bir.eff_date = (select max(eff_date) from bill_itm_rate where eff_date <= trunc(bih.inv_date	) 
                          and bim.itm_code = itm_code and NVL(itm_code_sfx,'*') = NVL(bim.itm_code_sfx,'*') and NVL(ect_handler,'CPCT') = NVL(bim.ect_handler,'CPCT') )
                and bih.inv_date>= to_date(#fromDate#||#fromTimeHr#||#fromTimeMin#||'00', 'DDMONYYHH24MISS') and bih.inv_date <= to_date(#toDate#||#toTimeHr#||#toTimeMin#||'59', 'DDMONYYHH24MISS')
					  and bih.inv_type='CRD')
					  ]]>
	</update>

	<update id="updateFinInfoDtAdjustments" parameterClass="cargo.cms.edi.bo.SendFinInfoBO">
	<![CDATA[
	UPDATE bill_adj_dtl SET CNSLDT_INV_NO=#invId#,CNSLDT_INV_DATE=#cnslInvDate# 
	where rowid in (select bad.rwid
			  from bill_adj_hd bah join (select a.rowid as rwid, a.adj_no adj_no, a.adj_amt adj_amt,a.itm_code itm_code, a.itm_code_sfx itm_code_sfx, c.ect_handler ect_handler , c.cust_no cust_no, bih.inv_date , bicd.AIRLINE carrCode
												from bill_adj_dtl a 
												join bill_inv_hd bih on a.inv_no = bih.inv_no
												join bill_inv_dtl b on a.inv_no = b.inv_no and a.idoc_line_no = b.doc_line_no 
												join bill_charge_dtl c on b.chrg_tr_no = c.tr_no
                        						join BILL_INV_CRD_DTL bicd on bicd.adj_no is not null and bicd.adj_doc_line_no is not null and bicd.adj_no = a.adj_no and bicd.adj_doc_line_no = a.doc_line_no and  nvl(bicd.AIRLINE,'XX') = #carrCode# 
										where  a.cnsldt_inv_no is null 
										  and (a.rev_ind = 'G' OR( a.rev_ind = 'A' AND (((select count(1) from bill_inv_crd_dtl where adj_no = a.adj_no and (cr_lvl = 'AIRL_VIRTUAL' or cr_lvl = 'AIRL_VIRTUAL_CARR' 
											  											     or cr_lvl = 'AIRL_VIR_CATALOG' or cr_lvl = 'AIRL_VIR_CATALOG_CARR' 
											  												 or cr_lvl = 'AIRL_GEN' or cr_lvl = 'AIRL_GEN_CARR' or cr_lvl= 'AIRL_CATALOG' or cr_lvl = 'AIRL_CATALOG_CARR' )) =0
											  									   AND (select count(1) from bill_inv_crd_dtl where adj_no = a.adj_no and (cr_lvl = 'AGENT_LVL' or cr_lvl = 'AGENT_LVL_CARR') ) >0)	
																						
																						OR(
							                                                                  (select cpsl_collect from cust_company 
							                                                                 	      where carr_code=(SELECT (SELECT CARR_CODE FROM AWB WHERE AWB_NO = BCD.AWB_NO AND AWB_DATE =  BCD.AWB_DATE)  as aa
											                                                                            FROM BILL_ADJ_HD ADJ
					                                                                                                    JOIN BILL_INV_DTL A ON A.INV_NO = ADJ.INV_NO
					                                                                                                    LEFT JOIN BILL_CHARGE_DTL BCD ON A.CHRG_TR_NO = BCD.TR_NO
					                                                                                                    WHERE ADJ.ADJ_NO = a.adj_no and ROWNUM=1
							                                                                 	    		 )and rownum=1) ='Y'
							                                                                 ))		
																				     )))bad
					                    on bad.adj_no= bah.adj_no and bad.adj_amt >= 0
				  join bill_itm_master bim  on  bad.itm_code = bim.itm_code and NVL(bad.itm_code_sfx,'N') =  NVL(bim.itm_code_sfx,'N') and NVL(bad.ect_handler,'CPCT') = NVL(bim.ect_handler,'CPCT')
				  join bill_itm_gl_acc biga	on biga.itm_code = bad.itm_code and NVL(biga.itm_code_sfx,'N') =  NVL(bad.itm_code_sfx,'N') and NVL(biga.ect_handler,'CPCT') = NVL(bad.ect_handler,'CPCT')	   
			      join bill_itm_rate bir on bim.itm_code = bir.itm_code and NVL(bir.itm_code_sfx,'*') = NVL(bim.itm_code_sfx,'*') and NVL(bir.ect_handler,'CPCT') = NVL(bim.ect_handler,'CPCT')
				  join cust_company cc on cc.code= bad.cust_no and cc.fin_code is not null and cc.fin_code = #custCode#
			   where bir.eff_date = (select max(eff_date) from bill_itm_rate where eff_date <= trunc(bad.inv_date) 
                          and  bim.itm_code = itm_code and NVL(itm_code_sfx,'*') = NVL(bim.itm_code_sfx,'*') and NVL(ect_handler,'CPCT') = NVL(bim.ect_handler,'CPCT') )
               and bah.adj_date >= to_date(#fromDate#||#fromTimeHr#||#fromTimeMin#||'00', 'DDMONYYHH24MISS') and bah.adj_date <= to_date(#toDate#||#toTimeHr#||#toTimeMin#||'59', 'DDMONYYHH24MISS')
				     and bah.adj_type='CRD')
				     ]]>
	</update>

	<update id="updateFinInfoCrInvoices" parameterClass="cargo.cms.edi.bo.SendFinInfoBO">
	<![CDATA[
	UPDATE BILL_INV_DTL SET CNSLDT_INV_NO=#invId#,CNSLDT_INV_DATE=#cnslInvDate# 
	where rowid in (select bid.rwid
				from bill_inv_hd bih  join (select a.rowid as rwid, a.inv_no inv_no, a.charge_amt charge_amt,a.itm_code,a.itm_code_sfx itm_code_sfx,b.ect_handler ect_handler,b.cust_no cust_no, bicd.AIRLINE carrCode
													from bill_inv_dtl a join bill_charge_dtl b on a.chrg_tr_no = b.tr_no
                          join BILL_INV_CRD_DTL bicd on bicd.INV_NO is not null and bicd.inv_doc_line_no is not null and bicd.INV_NO = A.INV_NO and bicd.inv_doc_line_no = A.doc_line_no  and  nvl(bicd.AIRLINE,'XX') = #carrCode# 
											where  a.cnsldt_inv_no is null 
											  and (a.rev_ind = 'G' OR( a.rev_ind = 'A' AND (((select count(1) from bill_inv_crd_dtl where inv_no = a.inv_no and (cr_lvl = 'AIRL_VIRTUAL' or cr_lvl = 'AIRL_VIRTUAL_CARR' 
											  											     or cr_lvl = 'AIRL_VIR_CATALOG'or cr_lvl = 'AIRL_VIR_CATALOG_CARR' 
											  												 or cr_lvl = 'AIRL_GEN' or cr_lvl = 'AIRL_GEN_CARR' or cr_lvl= 'AIRL_CATALOG' or cr_lvl = 'AIRL_CATALOG_CARR' )) =0
											  										   AND (select count(1) from bill_inv_crd_dtl where inv_no = a.inv_no and (cr_lvl = 'AGENT_LVL' or cr_lvl = 'AGENT_LVL_CARR') ) >0)   
																						   
																						   OR(
							                                                                  (select cpsl_collect from cust_company 
							                                                                 	     where carr_code=(SELECT (SELECT CARR_CODE FROM AWB WHERE AWB_NO = BCD.AWB_NO AND AWB_DATE =  BCD.AWB_DATE)  as aa
											                                                                            FROM BILL_INV_DTL D
											                                                                            JOIN BILL_INV_HD H ON D.INV_NO = H.INV_NO
											                                                                            LEFT JOIN BILL_CHARGE_DTL BCD ON D.CHRG_TR_NO = BCD.TR_NO
											                                                                            WHERE UPPER(D.INV_NO)=  UPPER(a.inv_no) and rownum=1
							                                                                 	     )and rownum=1) ='Y'
							                                                                 ))	  
																					     )))bid
										    on bid.inv_no = bih.inv_no and bid.charge_amt < 0
				  join bill_itm_master bim  on bid.itm_code = bim.itm_code and NVL(bid.itm_code_sfx,'N') =  NVL(bim.itm_code_sfx,'N') and NVL(bid.ect_handler,'CPCT') = NVL(bim.ect_handler,'CPCT')
				  join bill_itm_gl_acc biga  on biga.itm_code = bid.itm_code and NVL(biga.itm_code_sfx,'N') =  NVL(bid.itm_code_sfx,'N') and NVL(biga.ect_handler,'CPCT') = NVL(bid.ect_handler,'CPCT')
				  join bill_itm_rate bir on bim.itm_code = bir.itm_code and NVL(bir.itm_code_sfx,'*') = NVL(bim.itm_code_sfx,'*') and NVL(bir.ect_handler,'CPCT') = NVL(bim.ect_handler,'CPCT')
				  join cust_company cc on cc.code= bid.cust_no and cc.fin_code is not null and cc.fin_code = #custCode#
				where bir.eff_date = (select max(eff_date) from bill_itm_rate where eff_date <= trunc(bih.inv_date) 
                         and  bim.itm_code = itm_code and NVL(itm_code_sfx,'*') = NVL(bim.itm_code_sfx,'*') and NVL(ect_handler,'CPCT') = NVL(bim.ect_handler,'CPCT') )
                      and bih.inv_date>= to_date(#fromDate#||#fromTimeHr#||#fromTimeMin#||'00', 'DDMONYYHH24MISS') and bih.inv_date <= to_date(#toDate#||#toTimeHr#||#toTimeMin#||'59', 'DDMONYYHH24MISS')
					  and bih.inv_type='CRD')
					  ]]>
	</update>

	<update id="updateFinInfoCrAdjustments" parameterClass="cargo.cms.edi.bo.SendFinInfoBO">
	<![CDATA[
	UPDATE bill_adj_dtl SET CNSLDT_INV_NO=#invId#,CNSLDT_INV_DATE=#cnslInvDate# 
	where rowid in (select bad.rwid
			  from bill_adj_hd bah join (select a.rowid as rwid, a.adj_no adj_no, a.adj_amt adj_amt,a.itm_code itm_code, a.itm_code_sfx itm_code_sfx, c.ect_handler ect_handler , c.cust_no cust_no, bih.inv_date, bicd.AIRLINE carrCode
												from bill_adj_dtl a 
												join bill_inv_hd bih on a.inv_no = bih.inv_no
												join bill_inv_dtl b on a.inv_no = b.inv_no and a.idoc_line_no = b.doc_line_no 
												join bill_charge_dtl c on b.chrg_tr_no = c.tr_no
                        join BILL_INV_CRD_DTL bicd on bicd.adj_no is not null and bicd.adj_doc_line_no is not null and bicd.adj_no = a.adj_no and bicd.adj_doc_line_no = a.doc_line_no and  nvl(bicd.AIRLINE,'XX') = #carrCode#                                   
										where  a.cnsldt_inv_no is null 
										  and (a.rev_ind = 'G' OR( a.rev_ind = 'A' AND (((select count(1) from bill_inv_crd_dtl where adj_no = a.adj_no and (cr_lvl = 'AIRL_VIRTUAL' or cr_lvl = 'AIRL_VIRTUAL_CARR'  
											  											     or cr_lvl = 'AIRL_VIR_CATALOG' or cr_lvl = 'AIRL_VIR_CATALOG_CARR'
											  												 or cr_lvl = 'AIRL_GEN' or cr_lvl = 'AIRL_GEN_CARR' or cr_lvl= 'AIRL_CATALOG' or cr_lvl = 'AIRL_CATALOG_CARR' )) =0
											  									   AND (select count(1) from bill_inv_crd_dtl where adj_no = a.adj_no and (cr_lvl = 'AGENT_LVL' or cr_lvl = 'AGENT_LVL_CARR') ) >0)	
																						
																						OR(
							                                                                  (select cpsl_collect from cust_company 
							                                                                 	     where carr_code=(SELECT (SELECT CARR_CODE FROM AWB WHERE AWB_NO = BCD.AWB_NO AND AWB_DATE =  BCD.AWB_DATE)  as aa
											                                                                            FROM BILL_ADJ_HD ADJ
					                                                                                                    JOIN BILL_INV_DTL A ON A.INV_NO = ADJ.INV_NO
					                                                                                                    LEFT JOIN BILL_CHARGE_DTL BCD ON A.CHRG_TR_NO = BCD.TR_NO
					                                                                                                    WHERE ADJ.ADJ_NO = a.adj_no and ROWNUM=1
							                                                                 	    		 )and rownum=1) ='Y'
							                                                                 ))	
																				     )))bad
					                    on bad.adj_no= bah.adj_no and bad.adj_amt < 0
				  join bill_itm_master bim  on  bad.itm_code = bim.itm_code and NVL(bad.itm_code_sfx,'N') =  NVL(bim.itm_code_sfx,'N') and NVL(bad.ect_handler,'CPCT') = NVL(bim.ect_handler,'CPCT')
				  join bill_itm_gl_acc biga	on biga.itm_code = bad.itm_code and NVL(biga.itm_code_sfx,'N') =  NVL(bad.itm_code_sfx,'N') and NVL(biga.ect_handler,'CPCT') = NVL(bad.ect_handler,'CPCT')	   
			      join bill_itm_rate bir on bim.itm_code = bir.itm_code and NVL(bir.itm_code_sfx,'*') = NVL(bim.itm_code_sfx,'*') and NVL(bir.ect_handler,'CPCT') = NVL(bim.ect_handler,'CPCT')
				  join cust_company cc on cc.code= bad.cust_no and cc.fin_code is not null and cc.fin_code = #custCode#
			   where bir.eff_date = (select max(eff_date) from bill_itm_rate where eff_date <= trunc(bad.inv_date) 
                         and  bim.itm_code = itm_code and NVL(itm_code_sfx,'*') = NVL(bim.itm_code_sfx,'*') and NVL(ect_handler,'CPCT') = NVL(bim.ect_handler,'CPCT') )
                     and bah.adj_date >= to_date(#fromDate#||#fromTimeHr#||#fromTimeMin#||'00', 'DDMONYYHH24MISS') and bah.adj_date <= to_date(#toDate#||#toTimeHr#||#toTimeMin#||'59', 'DDMONYYHH24MISS')
				     and bah.adj_type='CRD')
				     ]]>
	</update>

	<select id="fetchHAWBPcsEdiFHL" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT HAWB_PCS FROM EDI_FHL, EDI_FHL_HAWB WHERE EDI_FHL.AWB_NO = #AWBNO# AND EDI_FHL_HAWB.HAWB_NO = #HAWBNO# and EDI_FHL.TR_NO = EDI_FHL_HAWB.tr_no
		AND EDI_FHL.TR_NO = (SELECT MAX(TR_NO) FROM EDI_FHL WHERE AWB_NO = #AWBNO#)
	</select>
	<select id="fetchACCSIndicator" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT NVL(accs_ind, 'N') AS ACCS_IND FROM cst_awb WHERE flt_type = 'I' AND flt_key = #fltKey# AND flt_date = #fltDate# AND awb_no = #awbNo# and rownum = 1
	</select>
	<select id="fetchSumManfPcsWt" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT NVL(SUM(b.man_pcs), 0) AS PCS,NVL(SUM(b.man_wt), 0) AS WT FROM edi_ffm_msg a,edi_ffm_shp b
		WHERE a.tr_no = b.tr_no AND a.flt_key = #fltKey# AND a.flt_date    = #fltDate# AND a.ffm_status IN ('P', 'F') 
		AND b.awb_no = #awbNo# and rownum = 1
	</select>
	<delete id="deleteCSTAWBRecord" parameterClass="java.util.HashMap">
		DELETE FROM cst_awb WHERE flt_type = 'I' AND flt_key = #fltKey# AND flt_date = #fltDate# AND awb_no = #awbNo#
	</delete>

	<delete id="delete_AWB_owner_ffm_Details" parameterClass="java.util.HashMap">
	delete from awb_owner where awb_no=#awbNo# and awb_date=#awbDate# and carr_code=#carr# and pcs = 0
	</delete>
	<update id="update_AWB_owner_ffm_Details" parameterClass="java.util.HashMap">
	update awb_owner set pcs = pcs - #manPcs#,wt = wt-#manWt# where awb_no=#awbNo# and awb_date=#awbDate# and carr_code=#carr#
	</update>
	<select id="fetchNilIndicatorForFFM" parameterClass="map" resultClass="java.lang.String">
		select decode(count(1), 0, 'Y', 'N') as tmpNilInd
		from edi_ffm_msg inner
		join edi_ffm_uld
		on edi_ffm_msg.tr_no = edi_ffm_uld.tr_no
		and
		edi_ffm_uld.brd_point = #brdPt#
		and edi_ffm_uld.off_point = #offPt#
		where
		edi_ffm_msg.flt_key = #fltKey#
		and edi_ffm_msg.flt_date =
		to_date(#fltDate#,'dd-mon-yy')
		and
		(edi_ffm_msg.si_type = 'S' or
		(edi_ffm_msg.si_type = 'I' and
		edi_ffm_msg.ffm_status='P'))
    and edi_ffm_uld.nil_ind = 'N'		
	</select>
	<!-- Submit to Finance -->
	<select id="sqlFetchCheckInUldAwb" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT EDI_FFM_SHP.AWB_NO AS AWB_NO, TO_CHAR(EDI_FFM_SHP.AWB_DATE,'DDMONYY') AS AWB_DATE, SUM(MAN_PCS) AS TOTAL_PCS FROM EDI_FFM_MSG,EDI_FFM_ULD,EDI_FFM_SHP WHERE 
  			EDI_FFM_MSG.TR_NO = EDI_FFM_ULD.TR_NO AND
  			EDI_FFM_ULD.DOC_LINE_NO = EDI_FFM_SHP.UDOC_LINE_NO AND
  			EDI_FFM_MSG.TR_NO = EDI_FFM_SHP.TR_NO 
			AND EDI_FFM_MSG.FLT_KEY = #fltKey# AND EDI_FFM_MSG.FLT_DATE = TO_DATE(#fltDate#,'DDMONYY')
    		AND EDI_FFM_ULD.ULD_KEY = #uldKey#
			AND EDI_FFM_MSG.FFM_STATUS = 'P'
		GROUP BY EDI_FFM_SHP.AWB_NO,EDI_FFM_SHP.AWB_DATE
	</select>
	<update id="sqlUpdateFFMUld" parameterClass="java.util.HashMap">
		UPDATE EDI_FFM_ULD SET ULD_TYPE = #uldType#, ULD_NO = #uldNo#, ULD_CARR = #uldCarr#, ULD_KEY=#uldKey# WHERE TR_NO = #trNo# AND DOC_LINE_NO = #docLineNo#
	</update>
	<delete id="sqlDeleteExpCarFromFWB" parameterClass="java.util.HashMap">
		DELETE FROM EXP_CAR WHERE AWB_NO = #awbNo# AND AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') 
		AND NOT EXISTS(SELECT AWB_NO FROM EDI_FWB WHERE AWB_NO = EXP_CAR.AWB_NO AND AWB_DATE = EXP_CAR.AWB_DATE)
	</delete>
	<update id="sqlUpdateExpCarIndicator"  parameterClass="java.util.HashMap">
		UPDATE AWB SET CAR_YN='Y',NON_PMAN_PCS=(PCS-PMAN_PCS),NON_PMAN_WT=(WT-PMAN_WT) WHERE awb_no=#AWB# AND AWB_DATE = TO_DATE(#AWBDATE#,'DDMONYY')
	</update> 
	<parameterMap id="hParam" class="map">
		<parameter property="awbDate" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT" />
	 	<parameter property="awbNo" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>  
	 	<parameter property="awbType" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/> 
	 	<parameter property="func" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/> 	             
	</parameterMap>
	<procedure id="fetchFFMAwbDateProc" parameterMap="hParam">
		{? = call pkg_imp.fun_get_awbdate_existing(?,?,?)  }
	</procedure>
	<update id="sqlUpdateAWBCatalog" parameterClass="cargo.cms.edi.bo.EdiFFMShpBO">
		UPDATE AWB SET CATALOG = #content# WHERE AWB_NO = #awbNo# AND AWB_DATE = TO_DATE(#awb_date#,'DDMONYY') 
	</update>
	<update id="sqlUpdateImpCarAWBCatalog" parameterClass="cargo.cms.edi.bo.EdiFFMShpBO">
		UPDATE IMP_CAR_AWB SET CATALOG = #content# WHERE AWB_NO = #awbNo# AND AWB_DATE = TO_DATE(#awb_date#,'DDMONYY')
	</update>
	<select id="sqlFetchShipmentLoadedOnULDForFFM" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM EDI_FFM_MSG, EDI_FFM_ULD, EDI_FFM_SHP WHERE EDI_FFM_MSG.TR_NO = EDI_FFM_ULD.TR_NO AND EDI_FFM_MSG.SI_TYPE = 'S' AND
		EDI_FFM_ULD.TR_NO = EDI_FFM_SHP.TR_NO AND EDI_FFM_SHP.UDOC_LINE_NO = EDI_FFM_ULD.DOC_LINE_NO AND EDI_FFM_MSG.FLT_KEY = #fltKey# AND 
		EDI_FFM_MSG.FLT_DATE = TO_DATE(#fltDate#, 'DDMONYY') AND EDI_FFM_ULD.ULD_KEY = #uldKey#
	</select>
	
	<update id="updateGLSINDInEDIFHL" parameterClass="java.util.HashMap">
		UPDATE EDI_FHL SET GLS_IND=#glsInd# WHERE AWB_NO=#awbNo# AND AWB_DATE=TO_DATE(#awbDate#, 'DDMONYY')
	</update>
	
	<!-- Start - GLS Changes to delete all the Houses in case function is REPLACE -->
	
	<select id="sqlFetchFhlTrNo" parameterClass="cargo.cms.edi.bo.EdiFhlBO" resultClass="java.lang.String">
		SELECT TR_NO FROM EDI_FHL WHERE AWB_NO = #AWB_NO# AND AWB_DATE = TO_DATE(#AWB_DATE#,'DDMONYY')
	</select>
	
	<delete id="sqlDeleteFhlOciForReplaceFunction" parameterClass="java.lang.String">
		DELETE FROM EDI_FHL_HAWB_OCI WHERE TR_NO = #trNo#
	</delete>
	
	<delete id="sqlDeleteFhlContactForReplaceFunction" parameterClass="java.lang.String">
		DELETE FROM EDI_FHL_CONTACT WHERE TR_NO = #trNo#
	</delete>
	
	<delete id="sqlDeleteFhlLicPerForReplaceFunction" parameterClass="java.lang.String">
		DELETE FROM EDI_FHL_HAWB_LIC_PER WHERE TR_NO = #trNo#
	</delete>
	
	<delete id="sqlDeleteFhlHawbForReplaceFunction" parameterClass="java.lang.String">
		DELETE FROM EDI_FHL_HAWB WHERE TR_NO = #trNo#
	</delete>
	
	<delete id="sqlDeleteFhlForReplaceFunction" parameterClass="java.lang.String">
		DELETE FROM EDI_FHL WHERE TR_NO = #trNo#
	</delete>
	
	<parameterMap id="prcupdShcFhlMap" class="map">		
		
		<parameter property="awbNo" jdbcType="VARCHAR"		mode="IN"/>
		<parameter property="awbDate" jdbcType="VARCHAR"	mode="IN"/>
		<parameter property="userId" jdbcType="VARCHAR"	mode="IN"/>
					
	</parameterMap>
	<procedure id="prcupdShcFhl" parameterMap="prcupdShcFhlMap" >
		{call PKG_IMP.prc_upd_shc_fhl(?,?,?)}
	</procedure>
	<!--  End -->
	<select id="sqlFetchPartShipmentCount" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM IMP_CAR_SHP WHERE  (FLT_KEY = #fltKey# AND FLT_DATE != TO_DATE(#fltDate#,'DDMONYY')) 
		AND AWB_NO = #awbNo# AND AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
	</select>
	 <delete id="sqlDeleteAWBOwnerOnFWBDelete" parameterClass="java.util.HashMap" >
		DELETE FROM AWB_OWNER WHERE NOT EXISTS(SELECT 1 FROM AWB WHERE AWB.AWB_NO = AWB_OWNER.AWB_NO AND AWB_OWNER.AWB_DATE = AWB.AWB_DATE)
		AND AWB_NO = #awbNo# AND AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
	</delete> 
	
	<!--  PRC_EDI_FFM_SHP_DEL Procedure Queries Start -->
	<select id="sqlPrcEdiFFMShpDelFetchAwbDate" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT PKG_IMP.FUN_GET_AWBDATE_EXISTING(#P_AWB_NO#, 'I', 'FFM') FROM DUAL
	</select>
	
	<select id="sqlPrcEdiFFMShpDelFetchManifestPcsWt" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT 
			NVL(SUM(MAN_PCS), 0) P_PCS, NVL(SUM(MAN_WT), 0) P_WT 
		FROM EDI_FFM_SHP S 
		WHERE 
		FLT_KEY = #P_FLT_KEY# AND FLT_DATE = #P_FLT_DATE# AND AWB_NO   = #P_AWB_NO#
	    AND EXISTS(SELECT NULL FROM EDI_FFM_MSG M WHERE M.TR_NO = S.TR_NO AND FFM_STATUS = 'P')
	</select>
	
	<select id="sqlPrcEdiFFMShpDelFetchOrgDestContent" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT 
		 	ORG AS P_ORG,DEST AS P_DEST ,CONTENT AS P_CONTENT    
    	FROM(SELECT 
    			ORG,DEST ,CONTENT
      		FROM EDI_FFM_SHP S
      		WHERE FLT_KEY = #P_FLT_KEY#        
      		AND FLT_DATE = #P_FLT_DATE#
      		AND AWB_NO   = #P_AWB_NO#
      		AND EXISTS(SELECT NULL FROM EDI_FFM_MSG M WHERE M.TR_NO = S.TR_NO AND FFM_STATUS = 'P')
      		ORDER BY LM_DATE DESC
      	) A
    	WHERE ROWNUM = 1
	</select>
	
	<update id="sqlPrcEdiFFMShpDelUpdateCARShpPcsWt" parameterClass="java.util.HashMap">
		UPDATE IMP_CAR_SHP
    		SET MANIFEST_PCS = #P_PCS#,
      		MANIFEST_WT    = #P_WT# ,      		
      		BULK_PCS     = (NVL(#P_PCS#,0) - NVL(#V_BUP_PCS#,0)),
            BULK_WT      = (NVL(#P_WT#,0) - NVL(#V_BUP_WT#,0)),
            BUP_PCS      = NVL(#V_BUP_PCS#,0),
            BUP_WT       = NVL(#V_BUP_WT#,0)
    	WHERE FLT_KEY    = #P_FLT_KEY#      
    	AND FLT_DATE = #P_FLT_DATE#
    	AND FFM_FLG  = 'Y'
    	AND AWB_NO   = #P_AWB_NO#
	</update>
	
	<delete id="sqlPrcEdiFFMShpDelCARShp" parameterClass="java.util.HashMap">
		DELETE 
    	FROM IMP_CAR_SHP
    	WHERE FLT_KEY = #P_FLT_KEY#      
    		AND FLT_DATE      = #P_FLT_DATE#
    		AND FFM_FLG       = 'Y'
    		AND AWB_NO        = #P_AWB_NO#
    		AND (MANIFEST_PCS = 0 OR #P_PCS# = 0)
    		AND RECD_PCS      = 0
	</delete>
	
	<update id="sqlPrcEdiFFMShpDelUpdateCARShpFFMFlag" parameterClass="java.util.HashMap">
		 UPDATE IMP_CAR_SHP
      		SET FFM_FLG   = 'N'
      	WHERE FLT_KEY = #P_FLT_KEY#        
      		AND FLT_DATE      = #P_FLT_DATE#
      		AND FFM_FLG       = 'Y'
      		AND AWB_NO        = #P_AWB_NO#
      		AND (MANIFEST_PCS = 0 OR #P_PCS# = 0)
      		AND RECD_PCS > 0
	</update>
	
	
	<select id="sqlgetAWBExistingCatalog" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		select catalog from AWB WHERE AWB_NO = #P_AWB_NO# AND AWB_DATE = #P_AWB_DATE#
	</select>
	
	<select id="sqlPrcEdiFFMShpDelFetchCARShpCount" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		 SELECT COUNT(1) FROM IMP_CAR_SHP WHERE AWB_NO = #P_AWB_NO# AND AWB_DATE = #P_AWB_DATE# AND ROWNUM = 1
	</select>
	
	<delete id="sqlPrcEdiFFMShpDelCARAwb" parameterClass="java.util.HashMap">
		DELETE FROM IMP_CAR_AWB WHERE AWB_NO = #P_AWB_NO# AND AWB_DATE = #P_AWB_DATE#
	</delete>
	
	<delete id="sqlPrcEdiFFMShpDelCARChargeItem" parameterClass="java.util.HashMap">
		DELETE FROM IMP_CAR_CHRG_ITM WHERE AWB_NO = #P_AWB_NO# AND AWB_DATE = #P_AWB_DATE#
	</delete>
	
	<update id="sqlPrcEdiFFMShpDelCARAwbOrgDestContent" parameterClass="java.util.HashMap">
		UPDATE IMP_CAR_AWB 
			SET AWB_ORIGIN = #P_ORG#,
			AWB_DEST = #P_DEST#,
			CONTENT = #P_CONTENT#,
			CATALOG = NVL(#P_CATALOG#,CATALOG)
      	WHERE AWB_NO   = #P_AWB_NO#
      		AND AWB_DATE   = #P_AWB_DATE#
      		AND #P_ORG#     IS NOT NULL
      		AND #P_DEST#    IS NOT NULL
      		AND #P_CONTENT# IS NOT NULL
	</update>
	
	<update id="sqlPrcEdiFFMShpDelAwbOrgDestContent" parameterClass="java.util.HashMap">
		UPDATE AWB
      		SET ORIG = #P_ORG# ,
        	DEST = #P_DEST#,
        	CONTENT = #P_CONTENT#
      	WHERE AWB_NO   = #P_AWB_NO#
      		AND AWB_DATE   = #P_AWB_DATE#
      		AND #P_ORG#     IS NOT NULL
      		AND #P_DEST#    IS NOT NULL
      		AND #P_CONTENT# IS NOT NULL
	</update>
	
	<select id="sqlPrcEdiFFMShpDelReFetchManifestPcsWt" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT NVL(SUM(B.MAN_PCS), 0) AS P_PCS,
      			NVL(SUM(B.MAN_WT), 0) AS P_WT
      	FROM EDI_FFM_MSG A,EDI_FFM_SHP B
    	WHERE A.TR_NO = B.TR_NO
    		AND A.FLT_KEY = #P_FLT_KEY#      
    		AND A.FLT_DATE = #P_FLT_DATE#
    		AND A.FFM_STATUS IN ('P', 'F')
    		AND B.AWB_NO = #P_AWB_NO#
	</select>
	
	<select id="sqlPrcEdiFFMShpDelFetchACCSIndicator" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT NVL(ACCS_IND, 'N')    	
    	FROM CST_AWB
    	WHERE FLT_TYPE = 'I'
    		AND FLT_KEY    = #P_FLT_KEY#      		
    		AND FLT_DATE = #P_FLT_DATE#
    		AND AWB_NO   = #P_AWB_NO#
	</select>
	
	<update id="sqlPrcEdiFFMShpDelUpdateCSTAwb" parameterClass="java.util.HashMap">
		 UPDATE CST_AWB
      		SET CHANGE_IND = 'D' ,
        	ACCS_IND     = #P_ACCS_STATUS# ,
        	LM_DATE      = SYSDATE,
        	LM_USER_ID   = USER ,
        	LM_VER       = LM_VER + 1
      	WHERE FLT_TYPE = 'I'
      		AND FLT_KEY    = #P_FLT_KEY#        	
      		AND FLT_DATE = #P_FLT_DATE#
      		AND AWB_NO   = #P_AWB_NO#
	</update>
	
	<delete id="sqlPrcEdiFFMShpDelCSTAwb" parameterClass="java.util.HashMap">
		DELETE
      	FROM CST_AWB
      	WHERE FLT_TYPE = 'I'
      	AND FLT_KEY    = #P_FLT_KEY#        
      	AND FLT_DATE = #P_FLT_DATE#
      	AND AWB_NO   = #P_AWB_NO#
	</delete>
	
	<update id="sqlPrcEdiFFMShpDelUpdateCSTAwbPcsWt" parameterClass="java.util.HashMap">
		UPDATE CST_AWB
      		SET MAN_PCS   = #P_PCS# ,
        	MAN_WGT     = #P_WT# ,
        	CHANGE_IND  = 'U' ,
        	LM_DATE     = SYSDATE,
        	LM_USER_ID  = USER ,
        	LM_VER      = LM_VER + 1
      	WHERE FLT_KEY = #P_FLT_KEY#        
      		AND FLT_DATE = #P_FLT_DATE#
      		AND FLT_TYPE = 'I'
      		AND AWB_NO   = #P_AWB_NO#
	</update>
	
	<update id="sqlPrcEdiFFMShpDelReUpdateCSTAwbPcsWt" parameterClass="java.util.HashMap">
		UPDATE CST_AWB
      	SET MAN_PCS   = #P_PCS# ,
        	MAN_WGT     = #P_WT# ,
        	LM_DATE     = SYSDATE,
        	LM_USER_ID  = USER
      	WHERE FLT_KEY = #P_FLT_KEY#        	
      		AND FLT_DATE = #P_FLT_DATE#
      		AND FLT_TYPE = 'I'
      		AND AWB_NO   = #P_AWB_NO#
	</update>
	
	<select id="sqlPrcEdiFFMShpDelImpCARShpCount" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM IMP_CAR_SHP 
		WHERE FLT_KEY    = #P_FLT_KEY#      
    	AND FLT_DATE = #P_FLT_DATE#
    	AND FFM_FLG  = 'Y'
    	AND AWB_NO   = #P_AWB_NO#
	</select>
	
	<select id="sqlPrcEdiFFMShpDelGetSumManPcsWt" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	 	SELECT
          SUM(MAN_PCS) AS V_BUP_PCS,
          SUM(MAN_WT) AS V_BUP_WT         
          FROM
          EDI_FFM_MSG, EDI_FFM_ULD, EDI_FFM_SHP, IMP_ULD_LIST
          WHERE
          EDI_FFM_MSG.TR_NO = EDI_FFM_ULD.TR_NO AND
          EDI_FFM_MSG.TR_NO = EDI_FFM_SHP.TR_NO AND
          EDI_FFM_ULD.TR_NO = EDI_FFM_SHP.TR_NO AND
          EDI_FFM_ULD.DOC_LINE_NO = EDI_FFM_SHP.UDOC_LINE_NO AND
          EDI_FFM_MSG.FLT_KEY = IMP_ULD_LIST.FLT_KEY AND 
          EDI_FFM_MSG.FLT_DATE = IMP_ULD_LIST.FLT_DATE AND 
          EDI_FFM_ULD.ULD_KEY = IMP_ULD_LIST.ULD_KEY AND
          IMP_ULD_LIST.HANDLING_MODE = 'PPK' AND
          EDI_FFM_SHP.AWB_NO = #P_AWB_NO# AND 
          EDI_FFM_MSG.FLT_KEY = #P_FLT_KEY# AND EDI_FFM_MSG.FLT_DATE = #P_FLT_DATE# AND
          EDI_FFM_MSG.FFM_STATUS = 'P'
	</select>
	
	<!--  PRC_EDI_FFM_SHP_DEL Procedure Queries End --> 
	
	<!-- IN147133 -->
	<select id="sqlValidateEdiCpm" parameterClass="cargo.cms.edi.bo.EnquireCPMSearchBO" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM EDI_CPM WHERE FLT_KEY = #fltCarr# ||''|| #fltNo# AND FLT_DATE = TO_DATE(#fltDate#, 'ddMONyy')
	</select>
	<select id="sqlValidateEdiCpmOthPort" parameterClass="cargo.cms.edi.bo.EnquireCPMSearchBO" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM EDI_CPM_OTH_PORT WHERE FLT_KEY = #fltCarr# ||''|| #fltNo# AND FLT_DATE = TO_DATE(#fltDate#, 'ddMONyy')
	</select>
<select id="sqlAmendFFMCountRampChkDtl" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM IMP_RAMP_CHK_DTL WHERE FLT_KEY  = #fltKey# AND FLT_DATE = TO_DATE(#fltDate#, 'DDMONYY') AND ULD_KEY = #uldKey# AND CHKIN_YN = 'Y'
	</select>
	<select id="sqlAmendFFMRampInbChkDtlData" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT FLT_KEY AS fltKey, TO_CHAR(FLT_DATE,'DDMONYY') AS fltDate, ULD_KEY AS uldKey FROM IMP_RAMP_INB_CHK_DTL WHERE FLT_KEY = #fltKey# AND FLT_DATE = TO_DATE(#fltDate#, 'DDMONYY')
		AND FFM_IND = 'Y' AND ULD_KEY NOT IN(SELECT ULD_KEY FROM EDI_FFM_ULD WHERE FLT_KEY = #fltKey# AND FLT_DATE = TO_DATE(#fltDate#, 'DDMONYY') AND ULD_KEY IS NOT NULL)
	</select>
	<delete id="sqlAmendFFMDeleteRampInbChkDtl" parameterClass="java.util.HashMap">
		DELETE FROM IMP_RAMP_INB_CHK_DTL WHERE FLT_KEY  = #FLTKEY# AND FLT_DATE = TO_DATE(#FLTDATE#, 'DDMONYY') AND ULD_KEY = #ULDKEY# AND CPM_IND = 'N' AND FFM_IND = 'Y'
	</delete>
	<update id="sqlAmendFFMUpdateRampInbChkDtl" parameterClass="java.util.HashMap">
		UPDATE IMP_RAMP_INB_CHK_DTL SET FFM_IND = 'N' WHERE FLT_KEY  = #FLTKEY# AND FLT_DATE = TO_DATE(#FLTDATE#, 'DDMONYY') AND ULD_KEY = #ULDKEY#
	</update>
	<delete id="sqlAmendFFMDeleteUldList" parameterClass="java.util.HashMap">
		DELETE FROM IMP_ULD_LIST WHERE FLT_KEY  = #FLTKEY# AND FLT_DATE = TO_DATE(#FLTDATE#, 'DDMONYY') AND ULD_KEY = #ULDKEY#
	</delete>
	<select id="getInboundFlightListfbl" parameterClass="java.util.HashMap"
		resultClass="cargo.cms.edi.bo.EdiFblShpBO">
		SELECT t1.flt_key inbFltKey,t1.awb_no awbNo,f1.flt_type as inbFltType,
   TO_CHAR(t1.flt_date,'DDMONYY')
  ||' '
  ||LPAD(f1.sch_time, 4, '0') schTime,
  TO_CHAR(t1.flt_date,'DDMONYY') inbDate,
   pkg_common.get_flt_ata(t1.flt_key, t1.flt_date,f1.flt_type) AS ata,
	  decode(pkg_common.get_flt_ata(t1.flt_key, t1.flt_date,f1.flt_type),null,decode(pkg_common.get_flt_eta(t1.flt_key, t1.flt_date,f1.flt_type),null,pkg_common.get_flt_sta(t1.flt_key, t1.flt_date,f1.flt_type),pkg_common.get_flt_eta(t1.flt_key, t1.flt_date,f1.flt_type)),pkg_common.get_flt_ata(t1.flt_key, t1.flt_date,f1.flt_type)) AS intime
		FROM v_ddt_dtl t1 join flt_opr f1 on t1.FLT_KEY = f1.flt_key
		and t1.flt_date = f1.sch_date and f1.FLT_type = 'A'
		WHERE t1.AWB_NO=#awb# and t1.awb_date = to_date(#awbDate#,'DDMONYY') AND t1.SHP_CNTG_FLT_KEY = #fltKey# AND
		t1.SHP_CNTG_FLT_DATE = to_date(#fltdate#,'DDMONYY')
		UNION
		SELECT A.flt_key inbFltKey,A.awb_no awbNo,B.flt_type as inbFltType,
		  TO_CHAR(A.flt_date,'DDMONYY')||' '
  ||LPAD(B.sch_time, 4, '0')  schTime,
 TO_CHAR(A.flt_date,'DDMONYY') inbDate,
  pkg_common.get_flt_ata(A.flt_key, A.flt_date,B.flt_type) AS ata,
		 decode(pkg_common.get_flt_ata(A.flt_key,A.flt_date,B.flt_type),null,decode(pkg_common.get_flt_eta(A.flt_key, A.flt_date,B.flt_type),null,pkg_common.get_flt_sta(A.flt_key, A.flt_date,B.flt_type),pkg_common.get_flt_eta(A.flt_key, A.flt_date,B.flt_type)),
   pkg_common.get_flt_ata(A.flt_key,A.flt_date,B.flt_type)) AS intime
		FROM IMP_CAR_SHP A,
		FLT_OPR B
		WHERE
		B.FLT_KEY = A.FLT_KEY AND
		B.SCH_DATE = A.FLT_DATE AND B.FLT_type = 'A' AND
		A.AWB_NO=#awb# AND A.awb_date = to_date(#awbDate#,'DDMONYY')
		AND NOT EXISTS (SELECT NULL
		FROM v_ddt_dtl t1 join flt_opr f1 on t1.FLT_KEY = f1.flt_key
		and t1.flt_date = f1.sch_date
		WHERE t1.AWB_NO=#awb# AND t1.SHP_CNTG_FLT_KEY = #fltKey# AND
		t1.SHP_CNTG_FLT_DATE = to_date(#fltdate#,'DDMONYY')
		) order by INTIME asc
	</select>
	<select id="sqlisShpconstrained" parameterClass="java.util.HashMap"
		resultClass="java.lang.Integer">
		SELECT COUNT(1)
		FROM V_CST_EXP_CC_CODE A,
		MAST_CONSTRAINT_CODE B
		WHERE B.CODE =A.CC_CODE
		AND A.AWB_NO =#awbNo#
		AND B.RESTRICT_BUILDUP_COMP_ULD='Y'  AND A.FLT_KEY=#fltKey# 
        AND A.FLT_DATE=TO_DATE(#fltDate#, 'DDMONYY')

	</select>
	
	<select id="checkNewHawbNoExists" parameterClass="java.util.HashMap" resultClass="java.lang.Integer" >	
			select count(*) from edi_fhl_hawb a where a.HAWB_NO=#HAWB_NO# AND a.tr_no = #TR_NO#
	</select>
		
     <select id="getSitaAddressEAWBCARR" parameterClass="java.util.HashMap"  resultClass="cargo.cms.common.ext.bo.EDIOutboundRecipentLogBO">
    	select ADDR as recipentSystem from MAST_SITA_ADDR_EAWB_CARR where carrier = #CARRIER# AND msg_type= #MTYPE# AND PROCESS = #PROCESS#
	</select>

	<select id="getVersionNumberEAWBCARR" parameterClass="java.util.HashMap"  resultClass="java.lang.String">
	    select ver as versionNumber from MAST_SITA_ADDR_EAWB_CARR where carrier = #CARRIER# AND msg_type= #MTYPE# AND PROCESS = #PROCESS# AND ROWNUM = 1
	</select>

	<select id="getCarrierCodeEAWB" parameterClass="java.util.HashMap"  resultClass="java.lang.String">
	    select carr_code from AWB where AWB_NO = #AWB_NO# and AWB_DATE = to_date(#AWB_DATE#,'DDMONYY')
	</select>
	
	<select id="getCarrierCodeAWBPriffix" parameterClass="java.lang.String"  resultClass="java.lang.String">
	    select carr_code from mast_awb_prefix where code = #awbPriffix#
	</select>
	
	<select id="getAWBTypeForEAWB" parameterClass="java.util.HashMap" resultClass="java.lang.String">
 	  select AWB_TYPE as awbType from AWB where AWB_NO = #AWB_NO# and AWB_DATE = to_date(#AWB_DATE#,'DDMONYY') 
	</select>

	<select id="checkEAWBConfigForCarrier" parameterClass="java.lang.String" resultClass="java.lang.String">
 	  select count(1) from mast_carrier where code = #carrierCode# AND NVL(EAWB_HNDLNG,'N') = 'Y'
	</select>
	
	<select id="getAgentCodeEAWBFHL" parameterClass="java.util.HashMap" resultClass="java.lang.String">
 	   SELECT CASE
		    WHEN B.FHL_OWNER IS NULL
		      THEN
		        (SELECT C.CODE FROM CUST_COMPANY C WHERE C.CODE = (SELECT S.CUST_NO FROM SEC_USER S WHERE S.CODE = B.CR_USER_ID) )
		      ELSE
		        (SELECT C.CODE FROM CUST_COMPANY C WHERE (C.CODE = (SELECT S.CUST_NO FROM SEC_USER S WHERE S.CODE = B.FHL_OWNER) OR C.CODE = B.FHL_OWNER) )
		    END    AS AGENTCODE
		FROM EDI_FHL_HAWB B 
		WHERE TR_NO IN (SELECT TR_NO FROM EDI_FHL WHERE AWB_NO = #AWB_NO# AND AWB_DATE = TO_DATE(#AWB_DATE#,'DDMONYY')) AND HAWB_NO = #HAWB# AND ROWNUM = 1		
	</select>
	
	<select id="getCurrentInventoryULDLst" parameterClass="java.lang.String" resultClass="java.lang.String">
		select awb_no || to_char(awb_date,'DDMONYY') || sum(locn_pcs) || sum(locn_wt) 
			from awb_inventory where uld_key = #uldKey# group by awb_no,awb_date order by awb_no,awb_date
	</select>
	
	<select id="getSnapShotInventoryULDLst" parameterClass="java.lang.String" resultClass="java.lang.String">
		select awb_no || to_char(awb_date,'DDMONYY') || sum(locn_pcs) || sum(locn_wt) 
			from awb_inv_snapshot_dtl where uld_key = #uldKey# group by awb_no,awb_date order by awb_no,awb_date
	</select>
		
	<select id="getCurrentInventoryLSPLst" parameterClass="java.lang.String" resultClass="java.lang.String">
		select awb_no || to_char(awb_date,'DDMONYY') || sum(locn_pcs) || sum(locn_wt) 
			from awb_inventory where LSP_NO = #lspNo# group by awb_no,awb_date order by awb_no,awb_date
	</select>
	
	<select id="getSnapShotInventoryLSPLst" parameterClass="java.lang.String" resultClass="java.lang.String">
		select awb_no || to_char(awb_date,'DDMONYY') || sum(locn_pcs) || sum(locn_wt) 
			from awb_inv_snapshot_dtl where LSP_NO = #lspNo# group by awb_no,awb_date order by awb_no,awb_date
	</select>
		
	<select id="getAWBListOnULD" parameterClass="java.lang.String" resultClass="java.lang.String">
		select awb_no || to_char(awb_date,'DDMONYY') from awb_inventory where uld_key = #uldKey# group by awb_no,awb_date order by awb_no,awb_date
	</select>
		
	<select id="getImportFlightDtlsForPPKNBKULD" parameterClass="java.lang.String" resultClass="cargo.cms.common.utils.bo.CommonUtilFunBO">
		select imp_flt_key as impFlightKey, to_char(imp_flt_date,'DDMONYY') as impFlightDate  from uld_inventory where uld_key = #uldKey# and handling_mode IN ('PPK','NBK') 
	 </select>
	
	<select id="getFFMShipmentList" parameterClass="cargo.cms.common.utils.bo.CommonUtilFunBO" resultClass="java.lang.String">
		select awb_no || to_char(awb_date,'DDMONYY') from V_FFM_DTL where uld_key = #uldKey# and flt_key = #impFlightKey# and flt_date = to_date(#impFlightDate#,'DDMONYY') 
				group by awb_no,awb_date order by awb_no,awb_date
	</select>
	
	<update id="updateULDInvHandlingMode" parameterClass="java.lang.String">
		UPDATE uld_inventory set handling_mode = '' where uld_key = #uldKey# 
	</update>
					
	<insert id="insertUAFErrorMessageLog" parameterClass="cargo.cms.common.utils.bo.CommonUtilFunBO">
		<![CDATA[
		INSERT INTO SERVICE_ERR_LOG
		  ( TR_NO, TR_TYPE, DOC_LINE_NO, TR_DATE,
		    OWNER_ID, CARR_CODE , FLT_KEY ,FLT_DATE, RMK1, RMK2, 
		    ERR_REASON,ULD_NO,ULD_CARR,ULD_TYPE,ULD_KEY,
		    CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE)
		  VALUES
		  (#msgLogId#, 'IR', SERVICE_ERR_LOG_DLN_SEQ.nextval, SYSDATE,
		    #uldCarr#,#flightCarr#, #flightKey# ,#flightDate#, (#errorMsgText# || ' ' || #errorFlightText#), (#errorMsgText# || ' ' || #errorFlightText#) , 
		    (#errorMsgText# || ' ' || #errorFlightText#),#uldNo#,#uldCarr#,#uldType#,#uldKey#,
		    NVL(#createdUserId#,'ADMIN'), SYSDATE, NVL(#createdUserId#,'ADMIN'), SYSDATE )	
	]]>
	</insert>		
				
		
  <select id="checkULDInventoryCountFFM" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
   	SELECT COUNT(1) FROM ULD_INVENTORY WHERE ULD_KEY  = #ULDKEY#
  </select>

<select id="checkShipmentCarrierCode" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
  		SELECT DISTINCT awb.carr_code as AWB_OWNER
		FROM edi_ffm_shp a
		join AWB awb on A.AWB_NO= awb.AWB_NO  AND A.AWB_DATE= awb.AWB_DATE  
		join edi_ffm_uld b on a.tr_no =b.tr_no and a.udoc_line_no= b.doc_line_no
		WHERE b.flt_key = #IFLT_KEY#
		AND b.flt_date = #IFLT_DATE#
		AND b.uld_key = #ULDKEY#
 </select>


<select id="checkShipmentCarrierCodeView" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
  		SELECT DISTINCT awb.carr_code as AWB_OWNER
		FROM v_ffm_dtl a
		join AWB awb on A.AWB_NO= awb.AWB_NO  AND A.AWB_DATE= awb.AWB_DATE  		
		WHERE flt_key = #IFLT_KEY#
		AND flt_date = #IFLT_DATE#
		AND uld_key = #ULDKEY#
 </select>

<update id="updateUldOwner" parameterClass="java.util.HashMap">
	UPDATE ULD_INVENTORY SET
		  owner_id             = #OWNER#,
		  PARENT_OWNER         = #POWNER#
		WHERE uld_key          = #ULDKEY#
	</update>
    
 <insert id="insertuldinvONFFM" parameterClass="java.util.HashMap" >
	INSERT INTO ULD_INVENTORY(ULD_KEY,OWNER_ID,PARENT_OWNER,STRG_DATE,LM_DATE,LM_USER_ID,SOURCE_CODE,TARE_WEIGHT,GROSS_WEIGHT,ULD_NO,ULD_TYPE,ULD_CARR,LOC_CODE,
		OWNED_INV,HANDLING_MODE,EMPTY_FLG,MIX_PPK_IND,TRANSIT_FLG,ULD_UNLOAD,DAM_IND,IMP_FLT_DATE,IMP_FLT_KEY) 
			values(#ULDKEY#,#OWNER#,#POWNER#,SYSDATE,SYSDATE,#USERID#,'',0,0,#ULD_NO#,#ULD_TYPE#,#ULD_CARR#,'','N','','Y','N','N','N','N',#IFLT_DATE#,#IFLT_KEY#)
 </insert>
	
<update id="updateuldinvONFFM" parameterClass="java.util.HashMap">
	UPDATE ULD_INVENTORY SET		  
		  IMP_FLT_DATE         = #IFLT_DATE#,
		  IMP_FLT_KEY          = #IFLT_KEY#,		  
		  owner_id             = #OWNER#,
		  PARENT_OWNER         = #POWNER#,
		  source_code          ='Others',
		  LM_USER_ID           =#USERID#,
		  LM_DATE              = SYSDATE,
		  CFM_STATUS           = 'CONFIRMED',
		  FLT_NO               = NULL,
		  FLT_TYPE             = NULL,
		  FLT_DATE             = NULL,
		  FLT_KEY              = NULL,
		  DAM_IND              ='N',
		  CONTR_CODE           = NULL,
		  gen_rmk              = NULL,
		  dam_rmk              = NULL,
		  eic_flg              = 'N',
		  empty_flg            = 'Y',
		  tare_weight          = 0,
		  gross_weight         = 0,
		  STRG_DATE            = SYSDATE,
		  PPK_IND              ='N',		  
		  AGENT_INV            ='N',
		  loc_code             = NULL,
		  OWNED_INV            = 'N',		  
		  AGENT_ID             = NULL,
		  REF_TR_NO            = ULD_TR_SEQ.NEXTVAL,
		  REF_DOC_LINE_NO      = '1',
		  REF_TR_TYPE          = 'EU',
		  REF_TR_DATE          = SYSDATE,
		  REF_OUT_CARR         = '',
		  REF_TR_EVENT         = 'UPDATE',
		  REF_RMK              = NULL,
		  BASE_PLT             = NULL,
		  SER_IND              ='N',
		  RESV_DATE            ='',
		  RESV_RMK             ='',
		  RMV_RMK              ='',
		  resv_flg             ='N',		 
		  TARGET               ='',
		  FIRST_WT             ='',
		  SECOND_WT            ='',
		  THIRD_WT             ='',
		  REF_WT               ='',
		  ULD_FLOW             ='' ,
		  EIC_TYPE             = NULL,
		  BASE_PAL_FLG         ='N',
		  ASV_INV              ='N',
		  OFLD_FLG             ='N',
		  TRANSIT_FLG          ='N',
		  BB_IND               ='N',
		  MIX_PPK_IND          ='N',
		  DG_IND               ='N',
		  HANDLING_MODE        = NULL,
		  TRANSIT_TYPE         = NULL,
		  FINAL_WEIGHT         = 'N',
		  DOUBLE_WGT_RSLT      = NULL,
		  MAN_WT_IND2          = 'N',
		  MAN_WT_IND3          = 'N',
		  ULDENTRY_MSG_RCVD_YN = 'N',
		  DIRECT_TOW           = 'N',
		  ULD_UNLOAD           = 'N' ,
		  H_OVER               = 'N',
		  TR_TYPE = 'CFFM'
		WHERE uld_key          = #ULDKEY#
	</update>
			
	<delete id="deleteOciLevel" parameterClass="cargo.cms.edi.bo.EdiFhlOciBO" >
		DELETE FROM EDI_FHL_HAWB_OCI WHERE TR_NO=#trNo# AND DOC_LINE_NO=#docLineNo# 
	</delete>
	
 
<select id="carditinfo" parameterClass="cargo.cms.mac.bo.MacCarditBO" resultClass="cargo.cms.mac.bo.MacCarditBO">
    		select TR_NO AS tr_no,AWB_NO as AWB_NO,to_char(awb_date,'DDMONYY') as AWB_DATE,POST_OFF_CODE as postOfficeCode,CSGNM_NUM as csgnmNo,ORIG as consgnOrigin,
    		DEST as consgnDest,MAIL_CATEGORY as mailCtgry
    		,MAIL_CLASS as mailClass,SPL_CODE1 as shc1,SPL_CODE2 as shc2,SPL_CODE3 as shc3,SPL_CODE4 as shc4,SPL_CODE5 as shc5,SPL_CODE6 as shc6
    		,SPL_CODE7 as shc7,SPL_CODE8 as shc8,SPL_CODE9 as shc9,TOT_NO_RECEPTACLE as totPcs,TOT_WT_RECEPTACLE as totWt, carr_code as carrCode    		
			from EDI_CARDIT_HD where AWB_NO=#PAWBNo# AND AWB_DATE = (SELECT MAX(AWB_DATE) FROM AWB WHERE AWB_NO = #PAWBNo#)
   	</select>
   	
   	 <select id="cardittransportinfo" parameterClass="cargo.cms.mac.bo.MacCarditBO" resultClass="cargo.cms.mac.bo.MacCarditBO">
   	     SELECT ect.TR_NO AS tr_no,ect.DOC_LINE_NO as docLineNo,ect.FLT_KEY as flt,ect.TRANSPORT_MODE as transpMode,ect.DEPT_PORT as depPt,
   	     TO_CHAR(TO_DATE(ect.DEPT_DATE), 'DDMONYY') as depDt
		 ,lpad(ect.DEPT_TIME,4,'0') as depTm,ect.ARR_PORT as arrPt FROM EDI_CARDIT_TRANSP_DTL ect
		 join EDI_CARDIT_HD ech on ech.TR_NO=ect.TR_NO where ech.AWB_NO=#PAWBNo# AND ech.AWB_DATE=#awbDate#
   	 </select>

<select id="carditreceptcalinfo" parameterClass="cargo.cms.mac.bo.MacCarditBO" resultClass="cargo.cms.mac.bo.MacCarditBO">
   	    SELECT ECTD.CONTAINER_TYPE AS uldType,ECTD.CONTAINER_WT AS uldWt,ECTD.CONTAINER_SEAL AS uldSeal,ECH.TR_NO AS tr_no,
   	    ECTD.DOC_LINE_NO AS ECTD_DOC_LINE,ECTD.CONTAINER_NO AS uldKey,ECTD.CONTAINER_TYPE AS uldType,
        ECTD.CONTAINER_WT AS uldWt,ECTD.CONTAINER_SEAL AS uldSeal,ECTD.ORG_EXCH_OFF AS orgOffice,
        ECTD.DEST_EXCH_OFF AS dstOffice,ECTD.DSPCH_CATEGORY AS dispCategory,ECTD.DSPCH_CLASS AS dispClass,
        to_char(ECTD.DSPCH_SN, '0000') AS dispSerial,to_char(ECTD.DSPCH_YEAR, '0') AS dispYear,ECTD.TAG_NO AS recpNo,ECTD.DG_IND AS dgInd,ECTD.TAG_WT AS wt,        
        (SELECT DECODE(COUNT(1),'0','N','Y') FROM AWB_INVENTORY AI JOIN HAWB_INVENTORY HI ON AI.SEQ_NO=HI.SEQ_NO
        	WHERE AI.AWB_NO= ECH.AWB_NO AND HI.HAWB_NO= ECTD.TAG_NO AND AI.AWB_DATE = ECH.AWB_DATE) as invCount        
        FROM  EDI_CARDIT_HD ECH JOIN EDI_CARDIT_TAG_DTL ECTD ON ECH.TR_NO = ECTD.TR_NO 
        WHERE ECH.AWB_NO=#PAWBNo# AND ECH.AWB_DATE=#awbDate#
   	 </select>
   	 
   	  <delete id="deleteCardit" parameterClass="cargo.cms.mac.bo.MacCarditBO" >
		 DELETE FROM EDI_CARDIT_HD WHERE AWB_NO=#PAWBNo# AND TO_DATE(AWB_DATE,'DD-MM-YY')=TO_DATE(#AWB_DATE#,'DD-MM-YY')
	 </delete> 
	
	<delete id="deleteCarditTransInfo" parameterClass="cargo.cms.mac.bo.MacCarditBO" >
		 DELETE FROM EDI_CARDIT_TRANSP_DTL WHERE TR_NO=#tr_no#
	</delete>
	
	<delete id="deleteCarditTagInfo" parameterClass="cargo.cms.mac.bo.MacCarditBO" >
		 DELETE FROM EDI_CARDIT_TAG_DTL WHERE TR_NO=#tr_no#
	</delete>
	
	 <delete id="deleteCarditTransInfoRows" parameterClass="cargo.cms.mac.bo.MacCarditBO"> 
		DELETE FROM EDI_CARDIT_TRANSP_DTL WHERE DOC_LINE_NO=#docLineNo#
	</delete>
	
	<delete id="deleteCarditTagInfoRows" parameterClass="cargo.cms.mac.bo.MacCarditBO"> 
		DELETE FROM EDI_CARDIT_TAG_DTL WHERE DOC_LINE_NO=#ECTD_DOC_LINE#
	</delete>
	
	<delete id="deleteFHLAwbByCardit" parameterClass="cargo.cms.mac.bo.MacCarditBO">
	  delete from edi_fhl where awb_no=#AWB_NO# and TO_CHAR(awb_date,'DDMONYY')=#AWB_DATE#
	</delete>
	
	<delete id="deleteMastHAWBInfoByCardit" parameterClass="cargo.cms.mac.bo.MacCarditBO">
	  delete from MAST_HAWB where awb_no=#AWB_NO# and TO_CHAR(awb_date,'DDMONYY')=#AWB_DATE#
	</delete>
	
	<delete id="deleteFhlHAWBInfoByCardit" parameterClass="cargo.cms.mac.bo.MacCarditBO">
	    DELETE FROM EDI_FHL_HAWB  p
	    WHERE EXISTS(
	    SELECT *
	    FROM edi_fhl  e
	    WHERE e.TR_NO = p.TR_NO
	    AND e.AWB_NO=#AWB_NO# AND TO_CHAR(e.AWB_DATE,'DDMONYY')=#AWB_DATE# 
	    )
	</delete>
	
	<select id="getFhlTrnoByCardit" parameterClass="cargo.cms.mac.bo.MacCarditBO" resultClass="cargo.cms.mac.bo.MacCarditBO">
			SELECT TR_NO AS fhlTrNo  FROM EDI_FHL WHERE AWB_NO=#AWB_NO# AND AWB_DATE=TO_DATE(#AWB_DATE#,'DDMONYY') AND ROWNUM = 1
   	</select> 
	
	<update id="updateCarditInfo" parameterClass="cargo.cms.mac.bo.MacCarditBO">
		UPDATE EDI_CARDIT_HD SET ORIG=#consgnOrigin#,DEST=#consgnDest#,
		MAIL_CATEGORY=#mailCtgry#,MAIL_CLASS=#mailClass#,SPL_CODE1=#shc1#,SPL_CODE2=#shc2#
		,SPL_CODE3=#shc3#,SPL_CODE4=#shc4#,SPL_CODE5=#shc5#,SPL_CODE6=#shc6#,SPL_CODE7=#shc7#
		,SPL_CODE8=#shc8#,SPL_CODE9=#shc9#,TOT_NO_RECEPTACLE=#totPcs#,TOT_WT_RECEPTACLE=#totWt#,
		TR_TYPE=#trtype#,LM_DATE=sysdate,LM_USER_ID=#userID#,CARR_CODE=#carrierCode#
		<isEqual property="carditMsgFlag" compareValue="Y">
				,POST_OFF_CODE = #postOfficeCode#,CSGNM_NUM=#consgnNo#,FILE_CR_DATE=TO_DATE(#CR_DATE#,'ddmonyy'),FILE_CR_TIME=#crTime#
			</isEqual>
		WHERE TR_NO=#tr_no# 
	</update> 
	
	<update id="updateFhlByCarditInfo" parameterClass="cargo.cms.mac.bo.MacCarditBO">
		UPDATE EDI_FHL SET AWB_ORG=#consgnOrigin#,AWB_DEST=#consgnDest#,AWB_PCS=#totPcs#,AWB_WT=#totWt#,
        HTS_COMM_CODE1=#shc1#,HTS_COMM_CODE2=#shc2#
		,HTS_COMM_CODE3=#shc3#,HTS_COMM_CODE4=#shc4#,HTS_COMM_CODE5=#shc5#,HTS_COMM_CODE6=#shc6#,HTS_COMM_CODE7=#shc7#
		,HTS_COMM_CODE8=#shc8#,HTS_COMM_CODE9=#shc9#,LM_DATE=sysdate,LM_USER_ID=#userID#
        WHERE AWB_NO=#AWB_NO# AND TO_DATE(AWB_DATE,'DD-MM-YY')=TO_DATE(#AWB_DATE#,'DD-MM-YY')
	</update>
	
	<insert id="insertTransportInfo" parameterClass="cargo.cms.mac.bo.MacCarditBO">
		INSERT INTO EDI_CARDIT_TRANSP_DTL
		(TR_NO,DOC_LINE_NO,FLT_KEY,TRANSPORT_MODE,DEPT_PORT,DEPT_DATE,DEPT_TIME,ARR_PORT,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE)
		VALUES
		(#transportInfoTrNo#,EDI_CARDIT_DOC_HD_SEQ.nextval,#flt#,#transpMode#,#depPt#,
		TO_DATE(#depDt#,'ddmonyy'),#depTm#,#arrPt#,#userID#,sysdate,#userID#,sysdate)
	</insert>
	
	<update id="updateTransportInfo" parameterClass="cargo.cms.mac.bo.MacCarditBO">
		UPDATE EDI_CARDIT_TRANSP_DTL SET FLT_KEY=#flt#,TRANSPORT_MODE=#transpMode#,DEPT_PORT=#depPt#,
		DEPT_DATE=TO_DATE(#depDt#,'ddmonyy'),DEPT_TIME=#depTm#,ARR_PORT=#arrPt#,LM_USER_ID=#userID#,LM_DATE=sysdate
		WHERE TR_NO=#tr_no# AND DOC_LINE_NO=#docLineNo#
	</update>
	
	<insert id="insertTagReceptacleInfo" parameterClass="cargo.cms.mac.bo.MacCarditBO">
	   INSERT INTO EDI_CARDIT_TAG_DTL
		(TR_NO,DOC_LINE_NO,CONTAINER_NO,TAG_NO,DG_IND,TAG_WT,CONTAINER_TYPE,CONTAINER_WT,CONTAINER_SEAL,ORG_EXCH_OFF,DEST_EXCH_OFF
        ,DSPCH_CATEGORY,DSPCH_CLASS,DSPCH_YEAR,DSPCH_SN,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE)
		VALUES (#transportInfoTrNo#,EDI_CARDIT_DOC_HD_SEQ.nextval,#uldKey#,#recpNo#,#dgInd#,#wt#,#uldType#,#uldWt#
       ,#uldSeal#,#orgOffice#,#dstOffice#,#dispCategory#,#dispClass#,#dispYear#,#dispSerial#,#userID#,sysdate,#userID#,sysdate)
	</insert>
	
	<update id="updateTagReceptacleInfo" parameterClass="cargo.cms.mac.bo.MacCarditBO">
		 UPDATE EDI_CARDIT_TAG_DTL SET CONTAINER_NO=#uldKey#,TAG_NO=#recpNo#,TAG_WT=#wt#,
		 CONTAINER_TYPE=#uldType#,CONTAINER_WT=#uldWt#,CONTAINER_SEAL=#uldSeal#,
     	 DG_IND=#dgInd#,LM_DATE=sysdate,LM_USER_ID=#userID#
			<isEqual property="carditMsgFlag" compareValue="Y">
				,ORG_EXCH_OFF = #orgOffice#,DEST_EXCH_OFF = #dstOffice#,DSPCH_CATEGORY = #dispCategory#,DSPCH_CLASS = #dispClass#,
				DSPCH_YEAR = #dispYear#,DSPCH_SN = #dispSerial#
			</isEqual>
		 WHERE TR_NO=#transportInfoTrNo# AND DOC_LINE_NO=#ECTD_DOC_LINE#
	</update> 
	
	<select id="tagBreakDownCount" parameterClass="cargo.cms.mac.bo.MacCarditBO"
		resultClass="java.lang.Integer">
		 select count(1) from IMP_HAWB_STRG_DTL where 
	 	 HAWB_NO=#recpNo# AND AWB_NO=#AWB_NO# AND AWB_DATE=to_date(#AWB_DATE#,'DDMONYY')
	 	 AND hawb_brkdn_pcs > 0
	</select>
	
	<select id="tagDuplicateCount" parameterClass="cargo.cms.mac.bo.MacCarditBO"
		resultClass="java.lang.Integer">
		
		 SELECT COUNT(1) FROM (SELECT ect.TAG_NO recpNo
		FROM EDI_CARDIT_TAG_DTL ect ,EDI_CARDIT_HD ech
		WHERE ect.TAG_NO=#recpNo# AND ech.AWB_NO!=#AWB_NO#
		UNION
		SELECT rtd.TAG_NO receptcalNo
		FROM EDI_RESDIT_TAG_DTL rtd ,EDI_RESDIT_AWB_DTL rad
		WHERE rtd.TAG_NO=#recpNo# AND rad.AWB_NO!=#AWB_NO#)
		
	</select>
	
	<select id="resditviewInfo" parameterClass="cargo.cms.mac.bo.MacRESDITMsgBo" resultClass="cargo.cms.mac.bo.MacRESDITMsgBo">
    		SELECT ERH.TR_NO AS trNo,ERH.POST_OFF_CODE AS postOfficeCode,ERH.FLT_KEY AS flt,erh.carr_code AS carrCode,
    		TO_CHAR(TO_DATE(ERH.FLT_DATE), 'DDMONYY') AS fltDate,ERH.DEPT_PORT AS depPort,TO_CHAR(TO_DATE(ERH.DEPT_DATE), 'DD-MON-YY') AS depDate,
    		ERH.DEPT_TIME AS depTime,TO_CHAR(TO_DATE(ERH.ARR_DATE), 'DD-MON-YY') AS arrDate,ERH.ARR_TIME AS arrTime,ERH.TRANSPORT_MODE AS transpMode,ERH.ARR_PORT AS arrPort,TO_CHAR(TO_DATE(ERH.DEPT_DATE), 'DDMONYY') AS amendDepDate
    		 FROM EDI_RESDIT_HD ERH JOIN FLT_OPR FO ON FO.FLT_KEY=ERH.FLT_KEY AND ERH.FLT_DATE=FO.SCH_DATE AND FO.FLT_TYPE='A'
            WHERE ERH.FLT_KEY=#flt# AND ERH.FLT_DATE=TO_DATE(#fltDate#,'DDMONYY')
            AND ERH.DEPT_PORT=#depPort#
   	</select> 
   	
   	<select id="resditPAWBInfoList" parameterClass="cargo.cms.mac.bo.MacRESDITMsgBo" resultClass="cargo.cms.mac.bo.PAWBBo">
    		SELECT TO_CHAR(TO_DATE(ERAD.AWB_DATE),'DDMONYY') AS AWB_DATE,ERAD.TR_AWB_NO AS trAWBNo,ERAD.DOC_LINE_NO AS docLineNo,ERAD.AWB_NO AS pawbNo,ERAD.CSGNM_NUM AS consgNo,ERAD.ORIG AS consgnOrg,
    		 ERAD.DEST AS cosgnDest,ERAD.MAIL_CLASS AS mailClass
    		,ERAD.TOT_NO_RECEPTACLE AS tTlPcs,ERAD.TOT_WT_RECEPTACLE AS tTlWt FROM EDI_RESDIT_AWB_DTL ERAD 
    		JOIN EDI_RESDIT_HD ERH ON ERH.TR_NO=ERAD.TR_NO WHERE ERH.FLT_KEY=#flt# AND
    		ERH.FLT_DATE=TO_DATE(#fltDate#,'DDMONYY')
    		
    		<isNotEmpty prepend="AND" property="trNo">
				ERH.TR_NO=#trNo#
			</isNotEmpty>
		 
   	</select>
   	
   		<select id="getAllResditPAWBInfoList" parameterClass="cargo.cms.mac.bo.MacRESDITMsgBo" resultClass="cargo.cms.mac.bo.PAWBBo">
    		SELECT TO_CHAR(TO_DATE(AWB_DATE),'DDMONYY') AS AWB_DATE,ERAD.TR_AWB_NO AS trAWBNo,ERAD.DOC_LINE_NO AS docLineNo,ERAD.AWB_NO AS pawbNo,ERAD.CSGNM_NUM AS consgNo,ERAD.ORIG AS orig,
    		 ERAD.DEST AS dest,ERAD.MAIL_CLASS AS mailClass
    		,ERAD.TOT_NO_RECEPTACLE AS tTlPcs,ERAD.TOT_WT_RECEPTACLE AS tTlWt FROM EDI_RESDIT_AWB_DTL ERAD 
    		JOIN EDI_RESDIT_HD ERH ON ERH.TR_NO=ERAD.TR_NO WHERE ERH.FLT_KEY=#flt# AND
    		ERH.FLT_DATE=TO_DATE(#fltDate#,'DDMONYY')
		 
   	</select>
   	
   	<select id="resditPAWBTagList" parameterClass="cargo.cms.mac.bo.MacRESDITMsgBo" resultClass="cargo.cms.mac.bo.TagBo">
    		SELECT ERTD.TR_AWB_NO AS trAWBNo,ERTD.DOC_LINE_NO AS docLineNo,ERTD.TAG_NO AS receptableNo,ERTD.TAG_WT AS tagWt,ERTD.NESTING_ID AS nestingId,
            ERTD.CONTAINER_NO uldKey,ERTD.CONTAINER_TYPE AS uldType,ERTD.THRU_UNIT_IND AS thruUnit,
            (SELECT DECODE(COUNT(1),'0','N','Y') FROM AWB_INVENTORY AI JOIN HAWB_INVENTORY HI ON AI.SEQ_NO=HI.SEQ_NO
        	WHERE AI.AWB_NO= ERAD.AWB_NO AND HI.HAWB_NO= ERTD.TAG_NO AND AI.AWB_DATE = ERAD.AWB_DATE) as invCount
            FROM EDI_RESDIT_TAG_DTL ERTD JOIN EDI_RESDIT_AWB_DTL ERAD ON ERAD.TR_AWB_NO=ERTD.TR_AWB_NO  WHERE ERTD.TR_AWB_NO=#hiddenTrAWBNo#
   	</select>
   	 
   	 <update id="updateResditInfo" parameterClass="cargo.cms.mac.bo.MacRESDITMsgBo">
		 UPDATE EDI_RESDIT_HD
		  SET 
		  DATA_TYPE=#dataType#,
		  CARR_CODE=#carrCode#,
		  POST_OFF_CODE=#postOfficeCode#,
		 FILE_CR_DATE=TO_DATE(#fileCrDate#,'DDMONYY'),
		 FILE_CR_TIME=#fileCrTime#,
		 FLT_KEY=#flt#,
		 FLT_DATE=TO_DATE(#fltDate#,'DDMONYY'),
		 DEPT_PORT=#depPort#,
		 DEPT_DATE=TO_DATE(#amendDepDate#,'DDMONYY'),
		 DEPT_TIME=#depTime#,
		 TRANSPORT_MODE=#transpMode#,
		 ARR_PORT=#arrPort#,
		 ARR_DATE=TO_DATE(#arrDate#,'DDMONYY'),
		 ARR_TIME=#arrTime#,
		 RESDIT_DATE=TO_DATE(#resditDate#,'DDMONYY'),
		 RESDIT_TIME=#resditTime#,
		 TR_TYPE=#trtype#,
		 LM_USER_ID=#userID#,
		 LM_DATE=SYSDATE WHERE TR_NO=#trNo#
	</update>
	
	<update id="updateResditPawbInfo" parameterClass="cargo.cms.mac.bo.PAWBBo">
			UPDATE EDI_RESDIT_AWB_DTL SET TR_TYPE=#trType#,AWB_NO=#pawbNo#,
	        MAIL_CLASS=#mailClass#,TOT_NO_RECEPTACLE=#tTlPcs#,TOT_WT_RECEPTACLE=#tTlWt#
	        ,CSGNM_NUM=#consgNo#,ORIG=#consgnOrg#,DEST=#cosgnDest#,LM_USER_ID=#userID#,LM_DATE=SYSDATE
	        WHERE TR_AWB_NO=#trAWBNo#
	</update>
	
	<update id="updateResditPawbTagInfo" parameterClass="cargo.cms.mac.bo.TagBo">
		 UPDATE EDI_RESDIT_TAG_DTL SET TAG_NO=#receptableNo#,TAG_WT=#tagWt#,NESTING_ID=#nestingId#,CONTAINER_NO=#uldKey#,
		 CONTAINER_TYPE=#uldType#,THRU_UNIT_IND=#thruUnit#,LM_USER_ID=#userID#,LM_DATE=SYSDATE
         WHERE TR_AWB_NO=#trAWBNo# AND DOC_LINE_NO=#docLineNo#
	</update>
	
	<insert id="insertResditPawbInfo" parameterClass="cargo.cms.mac.bo.PAWBBo">
	      INSERT INTO EDI_RESDIT_AWB_DTL
		 (TR_AWB_NO,TR_NO,DOC_LINE_NO,AWB_NO,AWB_DATE,CSGNM_NUM,ORIG,DEST,TR_TYPE,MAIL_CLASS,TOT_NO_RECEPTACLE,TOT_WT_RECEPTACLE
         ,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE) 
		  VALUES (#trAWBNo#,#trNo#,#docLineNo#,#pawbNo#,to_date(#pawbDate#,'DDMONYY'),#consgNo#,#consgnOrg#,#cosgnDest#,'M'
         ,#mailClass#,#tTlPcs#,#tTlWt#,#userID#,sysdate,#userID#,sysdate)
	</insert>
	
	<insert id="insertResditPawbTagInfo" parameterClass="cargo.cms.mac.bo.TagBo">
	  INSERT INTO EDI_RESDIT_TAG_DTL (TR_AWB_NO,DOC_LINE_NO,TAG_NO,TAG_WT,NESTING_ID,CONTAINER_NO,CONTAINER_TYPE,THRU_UNIT_IND,
      CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE)
      VALUES (#trAWBNo#,#docLineNo#,#receptableNo#,#tagWt#,#nestingId#,#uldKey#,#uldType#,#thruUnit#,#userID#,sysdate,#userID#,sysdate)
	</insert>
	
	<select id="resditTagBreakDownCount" parameterClass="cargo.cms.mac.bo.TagBo"
		resultClass="java.lang.Integer">
		 SELECT COUNT(*) FROM EDI_RESDIT_TAG_DTL ERTD 
    	JOIN EDI_RESDIT_AWB_DTL ERAD ON ERAD.TR_AWB_NO= ERTD.TR_AWB_NO 
    	WHERE ERTD.TAG_NO IN (SELECT TAG_NO FROM IMP_XPS_OBC_MAIL) AND ERAD.TR_AWB_NO=#trAWBNo# 
	</select> 
	
	<select id="resditTagInventryCount" parameterClass="cargo.cms.mac.bo.TagBo"
		resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM AWB_INVENTORY AI 
        JOIN HAWB_INVENTORY HI ON AI.SEQ_NO=HI.SEQ_NO
        WHERE AI.AWB_NO=#pawbNo# AND HI.HAWB_NO=#receptableNo# AND AI.AWB_DATE=to_date(#pawbDate#,'DDMONYY')
	</select>
	
	<select id="resditTagPmanCount" parameterClass="cargo.cms.mac.bo.PAWBBo"
		resultClass="cargo.cms.mac.bo.PAWBBo">
		SELECT COUNT(1) content FROM EXP_PMANIFEST_AWB  
    	WHERE AWB_NO=#pawbNo# AND AWB_DATE=to_date(#AWB_DATE#,'DDMONYY')
    	UNION
        SELECT COUNT(1) content FROM EXP_PMAN_TARMAC_AWB WHERE AWB_NO=#pawbNo# 
        AND AWB_DATE=to_date(#AWB_DATE#,'DDMONYY')
	</select>
	
	<delete id="deleteResditPawbTagInfo" parameterClass="cargo.cms.mac.bo.TagBo"> 
		DELETE FROM EDI_RESDIT_TAG_DTL WHERE DOC_LINE_NO=#docLineNo#
	</delete> 
	
	<delete id="deleteResditPawbInfo" parameterClass="cargo.cms.mac.bo.PAWBBo"> 
		DELETE FROM EDI_RESDIT_AWB_DTL WHERE TR_AWB_NO=#trAWBNo#
	</delete> 
	
	<select id="resditPAWBLdgPtList" parameterClass="cargo.cms.mac.bo.MacRESDITMsgBo" resultClass="cargo.cms.mac.bo.MacRESDITMsgBo">
    	 select TR_NO AS trNoList,DEPT_PORT AS depPortList from EDI_RESDIT_HD where FLT_KEY=#flt# AND
         TO_DATE(FLT_DATE,'DD-MM-YY')=TO_DATE(#fltDate#,'DD-MM-YY') ORDER BY TR_NO ASC
   	</select>
   	
   	<select id="carditTagInventoryCount" parameterClass="cargo.cms.mac.bo.MacCarditBO"
		resultClass="java.lang.Integer">
		 SELECT COUNT(1) FROM AWB_INVENTORY AI 
        JOIN HAWB_INVENTORY HI ON AI.SEQ_NO=HI.SEQ_NO
        WHERE AI.AWB_NO=#AWB_NO# AND HI.HAWB_NO=#recpNo# AND AI.AWB_DATE=to_date(#AWB_DATE#,'DDMONYY')
	</select>
	
	<select id="carditTagPmanCount" parameterClass="cargo.cms.mac.bo.MacCarditBO"
		resultClass="java.lang.Integer">
    		SELECT COUNT(1) FROM 
			  (SELECT null FROM EXP_PMANIFEST_AWB  WHERE AWB_NO=#AWB_NO# AND AWB_DATE=to_date(#AWB_DATE#,'DDMONYY')
			    union
			   SELECT null FROM EXP_PMAN_TARMAC_AWB WHERE AWB_NO=#AWB_NO# AND AWB_DATE=to_date(#AWB_DATE#,'DDMONYY')
			  )
	</select>
	 
<delete id="deleteTagInfoByPawb" parameterClass="cargo.cms.mac.bo.PAWBBo"> 
		 DELETE FROM EDI_RESDIT_TAG_DTL 
	 	WHERE  TR_AWB_NO= (SELECT ERAD.TR_AWB_NO FROM EDI_RESDIT_TAG_DTL ERTD 
	  	INNER JOIN EDI_RESDIT_AWB_DTL ERAD ON ERAD.TR_AWB_NO=ERTD.TR_AWB_NO
	  	WHERE ERAD.TR_AWB_NO = #trAWBNo# AND ROWNUM = 1)
	</delete> 
	
	<delete id="deleteResditHeaderEnquery" parameterClass="cargo.cms.mac.bo.MacRESDITMsgBo"> 
		DELETE FROM EDI_RESDIT_HD where FLT_KEY=#flt# AND TO_DATE(FLT_DATE,'DD-MM-YY')=TO_DATE(#fltDate#,'DD-MM-YY') 
	</delete>
	
	<select id="getTagCountFromCarditByResdit" parameterClass="cargo.cms.mac.bo.TagBo"
		resultClass="java.lang.Integer">
		SELECT count(1) FROM EDI_CARDIT_HD ECH JOIN 
   		EDI_CARDIT_TAG_DTL ECTD ON ECTD.TR_NO=ECH.TR_NO
    	WHERE ECH.AWB_NO=#pawbNo# AND ECTD.TAG_NO=#receptableNo# AND
    	ECH.AWB_DATE=TO_DATE(PKG_COMMON.GET_AWB_DATE(#pawbNo#,''),'ddmonyy')
	</select>
	
	<select id="getTagDuplicateCountFromCarditAndResdit" parameterClass="cargo.cms.mac.bo.TagBo"
		resultClass="java.lang.Integer">
		 SELECT COUNT(1) FROM (SELECT ect.TAG_NO recpNo
		FROM EDI_CARDIT_TAG_DTL ect JOIN EDI_CARDIT_HD ech ON ech.TR_NO=ect.TR_NO
		WHERE ect.TAG_NO=#receptableNo# AND ech.AWB_NO!=#pawbNo#
		UNION
		SELECT rtd.TAG_NO receptcalNo
		FROM EDI_RESDIT_TAG_DTL rtd JOIN EDI_RESDIT_AWB_DTL rad ON rad.TR_AWB_NO=rtd.TR_AWB_NO
		WHERE rtd.TAG_NO=#receptableNo# AND rad.AWB_NO!=#pawbNo#) 
	</select>
 
   	 <insert id="insertResdit" parameterClass="cargo.cms.mac.bo.MacRESDITMsgBo">
		insert into EDI_RESDIT_HD(TR_NO,
							DATA_TYPE,
							CARR_CODE,
							POST_OFF_CODE,
							FILE_CR_DATE,
							FILE_CR_TIME,
							FLT_KEY,
							FLT_DATE,
							TRANSPORT_MODE,
							DEPT_PORT,
							DEPT_DATE,
							DEPT_TIME,
							ARR_PORT,
							ARR_DATE,
							ARR_TIME,
							TR_TYPE,
							RESDIT_DATE,
							RESDIT_TIME,
							CR_USER_ID,
							CR_DATE,
							LM_USER_ID,
							LM_DATE) values (#trNo#,
											#dataType#,
											#carrCode#,
											#postOfficeCode#,
											#fileCrDate#,
											#fileCrTime#,
											#fltKeyDateConCat#,
											#fltDate#,
											#modeTransport#,
											#deptPt#,
											#depDate#,
											#depTime#,
											#arrPort#,
											#arrDate#,
											#arrTime#,
											#trType#,
											SYSDATE,
											'0000',
											#userID#,
											SYSDATE,
											#userID#,
											SYSDATE)
	</insert>
	
	
	
	
	<insert id="insertAwbResdit" parameterClass="cargo.cms.mac.bo.PAWBBo">
	Insert into EDI_RESDIT_AWB_DTL (TR_AWB_NO,TR_NO,DOC_LINE_NO,AWB_NO,AWB_DATE,CSGNM_NUM,ORIG,DEST,MAIL_CLASS,
	TOT_NO_RECEPTACLE,TOT_WT_RECEPTACLE,TR_TYPE,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE)
	values (#awbTrNo#,#trNo#,#docLineNo#,#pawbNo#,to_date(#pawbDate#,'DDMONYY'),#consgNo#,#consgnOrg#,#cosgnDest#,#mailClass#,
	#tTlPcs#,#tTlWt#,'C',#userID#,SYSDATE,#userID#,SYSDATE)
	</insert>
	
	<insert id="insertTagResdit" parameterClass="cargo.cms.mac.bo.TagBo">
	Insert into EDI_RESDIT_TAG_DTL (TR_AWB_NO,DOC_LINE_NO,TAG_NO,TAG_WT,NESTING_ID,CONTAINER_NO,CONTAINER_TYPE,THRU_UNIT_IND,CR_USER_ID,
	CR_DATE,LM_USER_ID,LM_DATE) values (#awbTrNo#,#docLineNo#,#receptableNo#,
	#tagWt#,#nestingId#,#uldKey#,#uldType#,#thruUnit#,#userID#,SYSDATE,#userID#,SYSDATE)
	</insert>
	
		<select id="fetchIfTagExist" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
			select COUNT(1)  from EDI_CARDIT_TAG_DTL where TAG_NO = #tagnumber# AND EXISTS (SELECT null FROM EDI_CARDIT_HD where awb_no = #awbnumber# and awb_date = to_date(pkg_common.get_awb_date(#awbnumber#),'DDMONYY'))
		</select>
		
		<select id="fetchInboundULDExist" parameterClass="java.util.HashMap" resultClass="cargo.cms.mac.bo.TagBo">
			select ULD_KEY as uldKey  from IMP_RAMP_CHK_DTL where ULD_KEY =#uldKey# AND CHKIN_YN = 'Y' AND FLT_KEY = #fltKey# and TO_CHAR(FLT_DATE, 'DDMONYY') = #fltDate#
		</select>
		
		<select id="fetchResditFlight" parameterClass="cargo.cms.mac.bo.MacRESDITMsgBo" resultClass="cargo.cms.mac.bo.MacRESDITMsgBo">
			select TR_NO as trNo from EDI_RESDIT_HD where FLT_KEY=#fltKeyDateConCat# and DEPT_PORT=#deptPt# and TO_CHAR(FLT_DATE, 'DDMONYY') = #fltDate#
		</select>
		
		<select id="fetchPAWBListForResditUpdate" parameterClass="java.util.HashMap" resultClass="cargo.cms.mac.bo.PAWBBo">
	    select TR_AWB_NO as awbTrNo,
	    		TR_NO as trNo,
	    		DOC_LINE_NO as docLineNo,
	    		AWB_NO as pawbNo,
	    		AWB_DATE as pawbDate
	    from EDI_RESDIT_AWB_DTL 
	    	where
	    	 AWB_NO = #awbNo#
	    	 and
	    	 TR_NO = #trNo#
	    </select>
	    
	    <select id="fetchPAWBListForResditGSLDelete" parameterClass="java.util.HashMap" resultClass="cargo.cms.mac.bo.PAWBBo">
	    select TR_AWB_NO as awbTrNo,
	    		TR_NO as trNo,
	    		DOC_LINE_NO as docLineNo,
	    		LM_USER_ID as lmUserId,
	    		AWB_NO as pawbNo,
	    		AWB_DATE as pawbDate
	    from EDI_RESDIT_AWB_DTL 
	    	where
	    	 TR_NO = #trNo#
	    	 AND 
	    	 AWB_NO NOT IN
			<iterate  property="awbNoArrList"
				open="(" close=")" conjunction="," >
				 #awbNoArrList[]#
			</iterate>
			
			
	    	 
	    </select>
	    
	     <select id="fetchTAGListForResditUpdate" parameterClass="java.util.HashMap" resultClass="cargo.cms.mac.bo.TagBo">
	    
	    select TR_AWB_NO as awbTrNo,
	    		DOC_LINE_NO as docLineNo,
	    		TAG_NO as receptableNo,
	    		container_no as uldKey,
          thru_unit_ind as thruUnit
	    from EDI_RESDIT_TAG_DTL 
	    	where
	    	 TR_AWB_NO = #trAwbNo#
	    	 AND 
	    	 TAG_NO=#tagNo#
	    </select>
	    
	    <select id="fetchTAGListForGLSResditDelete" parameterClass="java.util.HashMap" resultClass="cargo.cms.mac.bo.TagBo">
	    
	    select TR_AWB_NO as awbTrNo,
	    		DOC_LINE_NO as docLineNo,
	    		TAG_NO as receptableNo,
	    		container_no as uldKey,
          thru_unit_ind as thruUnit
	    from EDI_RESDIT_TAG_DTL 
	    	where
	    	 TR_AWB_NO = #trAwbNo#
	    	 AND
	    	 TAG_NO NOT IN
			<iterate  property="tagNoArrList"
				open="(" close=")" conjunction="," >
				#tagNoArrList[]#
			</iterate>
	    </select>
	    
	    <select id="checkSchFlightDate" parameterClass="cargo.cms.mac.bo.MacRESDITMsgBo" resultClass="java.lang.String">
		  SELECT  TO_CHAR(b.sch_date,'DDMONYY') FROM FLT_OPR A 
		  LEFT JOIN FLT_OPR_LEG b ON A.flt_key  = b.flt_key AND A.sch_date = b.sch_date AND A.flt_type = b.flt_type AND A.tr_no = b.tr_no 
		   	  WHERE A.FLT_KEY=#fltKeyDateConCat#
		      AND b.SCH_DEP_DATE = TO_DATE(#depDate#, 'DDMONYY') AND A.FLT_TYPE = 'A' AND b.BRD_POINT = #depPort# AND ROWNUM = 1
		</select>
		
	    
	    <select id="fetchResditFlightLeg" parameterClass="cargo.cms.mac.bo.MacRESDITMsgBo" resultClass="java.lang.Integer">
			SELECT COUNT(1) FROM 
		  FLT_OPR A 
		    LEFT JOIN 
		  FLT_OPR_LEG b 
		    ON A.flt_key  = b.flt_key 
		      AND A.sch_date = b.sch_date 
		      AND A.flt_type = b.flt_type 
		      AND A.tr_no = b.tr_no 
		    WHERE A.FLT_KEY=#fltKeyDateConCat#
		      AND A.SCH_DATE = TO_DATE(#fltDate#, 'DDMONYY') AND A.FLT_TYPE = 'A' AND b.BRD_POINT = #deptPt#
		</select>
		
		
		<update id="updateResditHDDtl" parameterClass="cargo.cms.mac.bo.MacRESDITMsgBo">
			UPDATE EDI_RESDIT_HD
		SET 
			DATA_TYPE = #dataType#,
			CARR_CODE=#carrCode#,
			POST_OFF_CODE=#postOfficeCode#,
			FILE_CR_DATE=#fileCrDate#,
			FILE_CR_TIME=#fileCrTime#,
			FLT_KEY=#fltKeyDateConCat#,
			FLT_DATE=#fltDate#,
			TRANSPORT_MODE=#modeTransport#,
			DEPT_PORT=#deptPt#,
			DEPT_DATE=#depDate#,
			DEPT_TIME=#depTime#,
			ARR_PORT=#arrPort#,
			ARR_DATE=#arrDate#,
			ARR_TIME=#arrTime#,
			TR_TYPE='GLSRESDIT',
			RESDIT_DATE=SYSDATE,
			RESDIT_TIME=#resditTime#,
			CR_USER_ID=#crUserId#,
			CR_DATE=SYSDATE,
			LM_USER_ID=#lmUserId#,
			LM_DATE=SYSDATE
		WHERE TR_NO=#trNo#
	    </update>
	
	<update id="updateResditPAWBDtl" parameterClass="cargo.cms.mac.bo.PAWBBo">
		UPDATE EDI_RESDIT_AWB_DTL
		SET 
			AWB_DATE=SYSDATE,
			CSGNM_NUM=#consgNo#,
			ORIG=#consgnOrg#,
			DEST=#cosgnDest#,
			MAIL_CLASS=#mailClass#,
			TOT_NO_RECEPTACLE=#awbPcs#,
			TOT_WT_RECEPTACLE=#tTlWt#,
			TR_TYPE=#trType#,
			CR_USER_ID=#crUserId#,
			CR_DATE=SYSDATE,
			LM_USER_ID=#lmUserId#,
			LM_DATE=SYSDATE
		WHERE
			TR_NO=#trNo#
		AND
			TR_AWB_NO=#awbTrNo#
	    </update>
	    
	     <update id="updateResditTAGDtl" parameterClass="cargo.cms.mac.bo.TagBo">
		UPDATE EDI_RESDIT_TAG_DTL
		SET 
			SET
			TAG_WT=#tagWt#,
			NESTING_ID=#nestingId#,
			CONTAINER_NO=#uldKey#,
			CONTAINER_TYPE=#uldType#,
			THRU_UNIT_IND=#thruUnit#,
			CR_USER_ID=#crUserId#,
			CR_DATE=SYSDATE,
			LM_USER_ID=#lmUserId#,
			LM_DATE=SYSDATE
		WHERE
			TR_AWB_NO=#awbTrNo#
			AND
			DOC_LINE_NO=#docLineNo#
	    </update>
	
	
	
	<select id="maxCarditNo" parameterClass="cargo.cms.mac.bo.MacCarditBO" resultClass="java.lang.Integer">
   		select max(edh.TR_NO)+1 from EDI_CARDIT_HD edh
  	</select>
  
	 
	<insert id="saveCardit" parameterClass="cargo.cms.mac.bo.MacCarditBO">
	  Insert into EDI_CARDIT_HD 
	(TR_NO,AWB_NO,AWB_DATE,ORIG,DEST,MAIL_CATEGORY,MAIL_CLASS,
	SPL_CODE1,SPL_CODE2,SPL_CODE3,SPL_CODE4,SPL_CODE5,SPL_CODE6,SPL_CODE7,SPL_CODE8,SPL_CODE9,TOT_NO_RECEPTACLE,
	TOT_WT_RECEPTACLE,CARDIT_DATE,CARDIT_TIME,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,TR_TYPE,DATA_TYPE,POST_OFF_CODE,CSGNM_NUM,FILE_CR_DATE,FILE_CR_TIME,CARR_CODE) 
  values (#trNo#,#awbNo#,TO_DATE(#awbDate#,'DDMONYY'),#consgnOrigin#,#consgnDest#,
  #mailCtgry#,#mailClass#,#shc1#,#shc2#,#shc3#,#shc4#,#shc5#,#shc6#,#shc7#,#shc8#,#shc9#,
  #totPcs#,#totWt#,SYSDATE,to_char(SYSDATE,'hh24miss'),#userID#,SYSDATE,#userID#,SYSDATE,#trtype#,#dataType#,#postOfficeCode#,#consgnNo#,#CR_DATE#,#crTime#,#carrierCode#)
	</insert>
	
		 
	<insert id="saveTransCardit" parameterClass="cargo.cms.mac.bo.MacCarditBO">
	 insert into EDI_CARDIT_TRANSP_DTL(TR_NO,DOC_LINE_NO,FLT_KEY,TRANSPORT_MODE,DEPT_PORT,DEPT_DATE,DEPT_TIME,
 	 ARR_PORT,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE) 
  	values(#trNo#,EDI_CARDIT_DOC_HD_SEQ.NEXTVAL,#flt#,#mOfTrans#,#depPt#,TO_DATE(#depDt#,'DDMONYY'),#depTm#,#arrPt#,#userID#,SYSDATE,#userID#,SYSDATE)
  	</insert>
  	
  	
  	<select id="printlablePAWBTag" parameterClass="cargo.cms.mac.bo.MacPrintPawbBO" resultClass="cargo.cms.mac.bo.MacPrintPawbBO">
				SELECT A.AWB_NO as PAWBNo,B.TR_NO AS TR_NO,B.TAG_NO AS tagNo 
                FROM EDI_CARDIT_HD A,EDI_CARDIT_TAG_DTL B,AWB C
                WHERE A.TR_NO = B.TR_NO  AND C.AWB_CLOSED_YN='N' AND  TO_CHAR( A.AWB_DATE,'DDMONYY') = TO_CHAR(C.AWB_DATE,'DDMONYY') AND B.TAG_NO=#prntTagNo#
		    	group by A.AWB_NO,B.TR_NO,B.TAG_NO
		    	ORDER BY A.AWB_NO  ASC
	</select>
	<select id="printlablePAWBFlight" parameterClass="cargo.cms.mac.bo.MacPrintPawbBO" resultClass="cargo.cms.mac.bo.MacPrintPawbBO">
		SELECT A.FLT_KEY AS fltKey, to_char(A.FLT_DATE,'DDMONYY')AS fltDate,B.AWB_NO as PAWBNo,B.TR_NO AS TR_NO 
        FROM EDI_RESDIT_HD A,EDI_RESDIT_AWB_DTL B,AWB C
        WHERE A.TR_NO = B.TR_NO AND A.FLT_KEY=#fltKey#  
         AND to_CHAR(A.FLT_DATE,'DDMONYY')= #fltDate#
         AND B.AWB_NO = C.AWB_NO
         AND TO_CHAR(B.AWB_DATE,'DDMONYY')  = TO_CHAR(C.AWB_DATE,'DDMONYY')
         AND C.AWB_CLOSED_YN='N'
    	group by A.FLT_KEY,A.FLT_DATE,B.AWB_NO,B.TR_NO
    	ORDER BY B.AWB_NO ASC
		</select>
	  
	  <select id="printlablePAWB" parameterClass="cargo.cms.mac.bo.MacPrintPawbBO" resultClass="cargo.cms.mac.bo.MacPrintPawbBO">
	   		select PAWBNo from (select AWB_NO as PAWBNo from AWB WHERE AWB_NO= #AWB_NO# AND AWB_CLOSED_YN='N' 
	   			UNION
	   		select #AWB_NO# as PAWBNo from DUAL ) GROUP BY PAWBNo ORDER BY PAWBNo ASC
		</select>
	
			
	<select id="chkAWBExistsCardit" parameterClass="cargo.cms.mac.bo.MacCarditBO" resultClass="java.lang.Integer">
		select count(1) FROM AWB WHERE AWB_NO = #awbNo# AND AWB_DATE = to_date(#awbDate#,'DDMONYY')
	</select>
	
	<select id="chkExportCARExistsCardit" parameterClass="cargo.cms.mac.bo.MacCarditBO" resultClass="java.lang.Integer">
		select count(1) FROM EXP_CAR WHERE AWB_NO = #awbNo# AND AWB_DATE = to_date(#awbDate#,'DDMONYY')
	</select>
	
	<select id="getCarrierCodeForPriffix" parameterClass="cargo.cms.mac.bo.MacCarditBO" resultClass="java.lang.String">
		SELECT CARR_CODE FROM MAST_AWB_PREFIX WHERE CODE = substr(#awbNo#,0,3)
	</select>
	
	<insert id="insAWBCardit" parameterClass="cargo.cms.mac.bo.MacCarditBO">
		<![CDATA[
		INSERT INTO AWB (		    AWB_TYPE,		    AWB_NO,		    AWB_DATE,		    CATALOG,		    SPL_CODE1,		    SPL_CODE2,		    SPL_CODE3,		    SPL_CODE4,		    SPL_CODE5,
		    SPL_CODE6,		    SPL_CODE7,		    SPL_CODE8,		    SPL_CODE9,		    LM_USER_ID ,		    LM_DATE,		    CR_USER_ID,		    CR_DATE,		    PPK_TYPE,		    CARR_CODE,
		       ORIG,		    DEST,		    PCS,		    WT,		    NON_PMAN_PCS,		    NON_PMAN_WT,		    TR_TYPE	, CONTENT	, HOUSE_FLG  )	
		    	  VALUES
		  (		    'T',		    #awbNo#,		    #awbDate#,		    'TM',		    #shc1#,	    #shc2#,		    #shc3#,		    #shc4#,		    #shc5#,		    #shc6#,		    #shc7#,		    #shc8#,
		    #shc9#,		    #userID#,		    SYSDATE,		    #userID#,		    SYSDATE,		    'B',	#carrCode# ,   	
		    	    #consgnOrigin#,		    #consgnDest#,		    NVL(#totPcs#,0),
		    NVL(#totWt#,0),		    NVL(#totPcs#,0),		    NVL(#totWt#,0),		    'CARDIT'	, 'TM'	, 'Y'  ) 
		]]>
	</insert>

	
	 
<select id="fetchTagIfExists" parameterClass="cargo.cms.mac.bo.MacCarditBO" resultClass="cargo.cms.mac.bo.MacCarditBO">
				 SELECT * FROM
			    (SELECT COUNT(*) recpNo, ech.AWB_NO as awbNo , ech.awb_date as awbDate
					FROM EDI_CARDIT_TAG_DTL ect 
					INNER JOIN EDI_CARDIT_HD ech ON ech.TR_NO =  ect.TR_NO 
					WHERE ect.TAG_NO= #recpNo# AND ech.AWB_NO!= #awbNo#  GROUP by ech.AWB_NO , ech.awb_date
					UNION
					SELECT COUNT(*) recpNo, rad.AWB_NO as awbNo ,  rad.awb_date as awbDate
					FROM EDI_RESDIT_TAG_DTL rtd 
					INNER JOIN EDI_RESDIT_AWB_DTL rad ON rad.TR_AWB_NO = rtd.TR_AWB_NO
					WHERE rtd.TAG_NO= #recpNo# AND rad.AWB_NO!= #awbNo# 		
					GROUP by rad.AWB_NO,rad.awb_date ) A
	        left JOIN AWB B ON b.awb_no = a.awbNo and b.awb_date = a.awbDate
	        where NVL(B.AWB_CLOSED_YN,'Y') = 'N' and rownum = 1
	</select>

	<update id="updAWBCardit" parameterClass="cargo.cms.mac.bo.MacCarditBO">
    UPDATE AWB
  SET PCS        = #totPcs#,
    WT           = #totWt#,
    ORIG         = #consgnOrigin#,
    DEST         = #consgnDest#,
    SPL_CODE1    = #shc1#,
    SPL_CODE2    = #shc2#,
    SPL_CODE3    = #shc3#,
    SPL_CODE4    = #shc4#,
    SPL_CODE5    = #shc5#,
    SPL_CODE6    = #shc6#,
    SPL_CODE7    = #shc7#,
    SPL_CODE8    = #shc8#,
    SPL_CODE9    = #shc9#,
    CARR_CODE = #carrCode#,
    NON_PMAN_PCS = #totPcs#,
    NON_PMAN_WT  = #totWt#,
    LM_USER_ID   = #userID#,
    HOUSE_FLG = 'Y',
    LM_DATE      = sysdate
  WHERE AWB_NO   = #awbNo#
  AND AWB_DATE   = TO_DATE(#awbDate#,'DDMONYY')				
	</update> 
	
	<select id="chkFHLCreatedForAWBCardit" parameterClass="cargo.cms.mac.bo.MacCarditBO" resultClass="java.lang.String">
		select TR_NO as tr_number FROM EDI_FHL WHERE AWB_NO = #awbNo# AND AWB_DATE = to_date(#awbDate#,'DDMONYY') 
	</select>
	
	<insert id="insAWBOWNERCardit" parameterClass="cargo.cms.mac.bo.MacCarditBO">
		INSERT
		INTO AWB_OWNER
		  (
		    AWB_NO,
		    AWB_DATE,
		    CARR_CODE,
		    PCS,
		    WT,
		    CR_USER_ID,
		    CR_DATE,
		    LM_USER_ID,
		    LM_DATE
		  )
		  VALUES
		  (
		    #awbNo#,
		    to_date(#awbDate#,'DDMONYY'),
		    #carrCode#,
		    #totPcs#,
		    #totWt#,
		    #userID#,
		    sysdate,
		    #userID#,
		    sysdate
		  )
	</insert>	
	
	<insert id="insEDI_FHL_Cardit" parameterClass="cargo.cms.mac.bo.MacCarditBO">
		Insert into EDI_FHL (TR_NO,MSG_VER,SI_TYPE,COPY_NO,AWB_NO,AWB_DATE,AWB_ORG,AWB_DEST,AWB_PCS,
		AWB_WT,AWB_WT_CODE,PART_SHMPT_YN,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,LM_VER,HTS_COMM_CODE1,HTS_COMM_CODE2,
		HTS_COMM_CODE3,HTS_COMM_CODE4,HTS_COMM_CODE5,HTS_COMM_CODE6,HTS_COMM_CODE7,HTS_COMM_CODE8,HTS_COMM_CODE9) values 
		(#trNo#,'0','2','1',#awbNo#,TO_DATE(#awbDate#,'DDMONYY'),#consgnOrigin#,#consgnDest#,#totPcs#,#totWt#,'K','N',#userID#,SYSDATE,#userID#,SYSDATE,'1'
		,#shc1#,#shc2#,#shc3#,#shc4#,#shc5#,#shc6#,#shc7#,#shc8#,#shc9#)
	</insert>
	
	<select id="sqlGetAWBDateCardit" parameterClass="java.lang.String" resultClass="java.lang.String">
			SELECT PKG_COMMON.GET_AWB_DATE(#awbNo#,'') FROM DUAL
	</select>
	
	<update id="updAWBOWNERCardit" parameterClass="cargo.cms.mac.bo.MacCarditBO">
		UPDATE AWB_OWNER
		SET PCS      = #totPcs#,
		  WT         = #totWt#,
		  CARR_CODE  = #carrCode#, LM_USER_ID = #userID#,
		  LM_DATE    = sysdate
		WHERE AWB_NO = #awbNo#
		AND AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')					
	</update> 
  	
  <update id="upd_expcar_cardit" parameterClass="cargo.cms.mac.bo.MacCarditBO">
	      UPDATE EXP_CAR
	    SET PCS      = #totPcs#,
	      WT         = #totWt#,
	      ORIGIN     = #consgnOrigin#,
	      DEST       = #consgnDest#,
	      CARR_CODE  = #carrCode#,
	      SPL_CODE1  = #shc1#,
	      SPL_CODE2  = #shc2#,
	      SPL_CODE3  = #shc3#,
	      SPL_CODE4  = #shc4#,
	      SPL_CODE5  = #shc5#,
	      SPL_CODE6  = #shc6#,
	      SPL_CODE7  = #shc7#,
	      SPL_CODE8  = #shc8#,
	      SPL_CODE9  = #shc9#,
	      LM_USER_ID = #userID#,
	      LM_DATE    = sysdate
	    WHERE AWB_NO = #awbNo#
	    AND AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')		
	</update>
	
	<update id="upd_impcar_cardit" parameterClass="cargo.cms.mac.bo.MacCarditBO">
	    UPDATE imp_car_awb
	    SET CONTENT    = 'TM',
	      SPL_CODE1  = #shc1#,
	      SPL_CODE2  = #shc2#,
	      SPL_CODE3  = #shc3#,
	      SPL_CODE4  = #shc4#,
	      SPL_CODE5  = #shc5#,
	      SPL_CODE6  = #shc6#,
	      SPL_CODE7  = #shc7#,
	      SPL_CODE8  = #shc8#,
	      SPL_CODE9  = #shc9#,
	      LM_USER_ID = #userID#,
	      LM_DATE    = sysdate
	    WHERE AWB_NO = #awbNo#
	    AND AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
	</update>
	
	<insert id="ins_expcar_cardit" parameterClass="cargo.cms.mac.bo.MacCarditBO">
		<![CDATA[
				INSERT
		INTO EXP_CAR
		  (
		    AWB_NO,
		    AWB_DATE,
		    AWB_PRFX,
		    ORIGIN,
		    DEST,
		    PCS,
		    WT,
		    CATALOG,
		    SPL_CODE1,
		    SPL_CODE2,
		    SPL_CODE3,
		    SPL_CODE4,
		    SPL_CODE5,
		    SPL_CODE6,
		    SPL_CODE7,
		    SPL_CODE8,
		    SPL_CODE9,
		    LM_USER_ID ,
		    LM_DATE,
		    CR_USER_ID,
		    CR_DATE,
		    CARR_CODE,
		    ACCEPT_MODE,
		    HANDLER_CODE,
		    CONTENT
		  )
		  VALUES
		  (
		    #awbNo#,
		    TO_DATE(#awbDate#,'DDMONYY'),
		    substr(#awbNo#,0,3),
		    #consgnOrigin#,
		    #consgnDest#,
		    NVL(#totPcs#,0),
		    NVL(#totWt#,0),
		    'TM',
		    #shc1#,
		    #shc2#,
		    #shc3#,
		    #shc4#,
		    #shc5#,
		    #shc6#,
		    #shc7#,
		    #shc8#,
		    #shc9#,
		    #userID#,
		    SYSDATE,
		    #userID#,
		    SYSDATE,
		    #carrCode#,
		    'TRN',
		    'CPCT',
		    'TM'
  		) 
		]]>
	</insert>	
	
	<insert id="insertFhlHAWBInfoByCardit" parameterClass="cargo.cms.mac.bo.MacCarditBO">
		Insert into edi_fhl_hawb (TR_NO,DOC_LINE_NO,HAWB_NO,HAWB_ORG,HAWB_DEST,HAWB_PCS,HAWB_NET_WT,HAWB_WT_CODE,MANIFEST_DESC,ACCS_I,SOURCE,
		 CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,LM_VER) values 
		(#fhlTrNo#,EDI_FHL_HAWB_SEQ.nextval,#recpNo#,#consgnOrigin#,#consgnDest#,'1',#wt#,'K','MANIFEST DESC','A','WOS',#userID#,SYSDATE,#userID#,SYSDATE,'1')
	</insert>
	
	<insert id="insertMastHAWBByCarditInfo" parameterClass="cargo.cms.mac.bo.MacCarditBO">
	  Insert into MAST_HAWB (AWB_NO,AWB_DATE,HAWB_NO,HAWB_ORG,HAWB_DES,HAWB_PCS,HAWB_WT) values 
			(#AWB_NO#,#AWB_DATE#,#recpNo#,#consgnOrigin#,#consgnDest#,'1',#wt#)
	</insert>
	
	
	
<select id="checkSHCForUpdate" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT STRAGG(STRINGDELIM(c.spl, ','))
		FROM
		  (SELECT code spl
		  FROM mast_spl_hand_code
		  WHERE code IN
		    (SELECT REGEXP_SUBSTR (
		      (SELECT STRAGG(STRINGDELIM(b.spl, ','))
		      FROM (
		        (SELECT T.spl spl
		        FROM
		          (SELECT DECODE(awb.spl_code1, NULL, '', awb.spl_code1)
		            || DECODE(awb.spl_code2, NULL, '', ','
		            || awb.spl_code2)
		            || DECODE(awb.spl_code3, NULL, '', ','
		            || awb.spl_code3)
		            || DECODE(awb.spl_code4, NULL, '', ','
		            || awb.spl_code4)
		            || DECODE(awb.spl_code5, NULL, '', ','
		            || awb.spl_code5)
		            || DECODE(awb.spl_code6, NULL, '', ','
		            || awb.spl_code6)
		            || DECODE(awb.spl_code7, NULL, '', ','
		            || awb.spl_code7)
		            || DECODE(awb.spl_code8, NULL, '', ','
		            || awb.spl_code8)
		            || DECODE(awb.spl_code9, NULL, '', ','
		            || awb.spl_code9) AS spl,
		            awb_no,
		            awb_date
		          FROM awb awb
		          ) t
		        WHERE awb_no = #awbNo#
		        AND awb_date = to_date(#awbDate#,'DDMONYY')
		        )
		      UNION
		      SELECT code spl FROM mast_spl_hand_code WHERE code=#splCode1#
		      UNION
		      SELECT code spl FROM mast_spl_hand_code WHERE code=#splCode2#
         	  UNION 
			  SELECT code spl FROM mast_spl_hand_code WHERE code=#splCode3#
			  UNION 
			  SELECT code spl FROM mast_spl_hand_code WHERE code=#splCode4#
			  UNION 
			  SELECT code spl FROM mast_spl_hand_code WHERE code=#splCode5#
			  UNION 
			  SELECT code spl FROM mast_spl_hand_code WHERE code=#splCode6#
			  UNION 
			  SELECT code spl FROM mast_spl_hand_code WHERE code=#splCode7#
			  UNION 
			  SELECT code spl FROM mast_spl_hand_code WHERE code=#splCode8#
			  UNION 
			  SELECT code spl FROM mast_spl_hand_code WHERE code=#splCode9#)b),'[^,]+',1,LEVEL)TXT
		    FROM DUAL
		      CONNECT BY REGEXP_SUBSTR (
		      (SELECT STRAGG(STRINGDELIM(b.spl, ','))
		      FROM (
		        (SELECT T.spl spl
		        FROM
		          (SELECT DECODE(awb.spl_code1, NULL, '', awb.spl_code1)
		            || DECODE(awb.spl_code2, NULL, '', ','
		            || awb.spl_code2)
		            || DECODE(awb.spl_code3, NULL, '', ','
		            || awb.spl_code3)
		            || DECODE(awb.spl_code4, NULL, '', ','
		            || awb.spl_code4)
		            || DECODE(awb.spl_code5, NULL, '', ','
		            ||awb.spl_code5)
		            || DECODE(awb.spl_code6, NULL, '', ','
		            || awb.spl_code6)
		            || DECODE(awb.spl_code7, NULL, '', ','
		            || awb.spl_code7)
		            || DECODE(awb.spl_code8, NULL, '', ','
		            || awb.spl_code8)
		            || DECODE(awb.spl_code9, NULL, '', ','
		            || awb.spl_code9) AS spl,
		            awb_no,
		            awb_date
		          FROM awb awb
		          ) t
		        WHERE awb_no = #awbNo#
		        AND awb_date = to_date(#awbDate#,'DDMONYY')
		        )
			      UNION
			      SELECT code spl FROM mast_spl_hand_code WHERE code=#splCode1#
			      UNION
			      SELECT code spl FROM mast_spl_hand_code WHERE code=#splCode2#
			      UNION 
			      SELECT code spl FROM mast_spl_hand_code WHERE code=#splCode3#
			      UNION 
			      SELECT code spl FROM mast_spl_hand_code WHERE code=#splCode4#
			      UNION 
			      SELECT code spl FROM mast_spl_hand_code WHERE code=#splCode5#
			      UNION 
			      SELECT code spl FROM mast_spl_hand_code WHERE code=#splCode6#
			      UNION 
			      SELECT code spl FROM mast_spl_hand_code WHERE code=#splCode7#
			      UNION 
			      SELECT code spl FROM mast_spl_hand_code WHERE code=#splCode8#
			      UNION 
			      SELECT code spl FROM mast_spl_hand_code WHERE code=#splCode9#)b),'[^,]+',1,LEVEL)IS NOT NULL
			    )
			  ORDER BY priority DESC
			  ) c
		WHERE ROWNUM &lt;= 9
		AND (SELECT COUNT(1)
		  FROM AWB a
		  WHERE a.awb_no = #awbNo#
		  AND a.awb_date = to_date(#awbDate#,'DDMONYY'))>0
	</select> 
<delete id="deleteFhlHAWBInfoByDeletingCarditTag" parameterClass="cargo.cms.mac.bo.MacCarditBO">
	    DELETE FROM EDI_FHL_HAWB  p
	    WHERE EXISTS(
	    SELECT *
	    FROM edi_fhl  e
	    WHERE e.TR_NO = p.TR_NO
	    AND e.AWB_NO=#AWB_NO# AND e.AWB_DATE=TO_DATE(#AWB_DATE#,'DDMONYY') AND p.HAWB_NO=#recpNo# )
	</delete>
	
	<delete id="deleteMastHAWBInfoByDeletingCarditTag" parameterClass="cargo.cms.mac.bo.MacCarditBO">
	  delete from MAST_HAWB where awb_no=#AWB_NO# and awb_date=TO_DATE(#AWB_DATE#,'DDMONYY') AND HAWB_NO=#recpNo#
	</delete>
	

	<delete id="deleteAWBRecordCARDIT" parameterClass="java.util.HashMap">
		DELETE FROM awb a
         WHERE NOT EXISTS (SELECT 1
                  FROM imp_car_awb
                 WHERE awb_no = a.awb_no
                   AND awb_date = a.awb_date)
            and NOT EXISTS(SELECT 1 FROM EDI_CARDIT_HD WHERE AWB_NO = a.awb_no and awb_date = a.awb_date)
						and a.awb_no = #awbNo# and a.awb_date = TO_DATE(#awbDate#,'DDMONYY')
            and awb_type != 'E'
	</delete>
	
	<delete id="deleteEXPCARRecordCARDIT" parameterClass="java.util.HashMap">
		DELETE FROM EXP_CAR a
        WHERE NOT EXISTS (SELECT 1 FROM imp_car_awb WHERE awb_no = a.awb_no AND awb_date = a.awb_date)
        AND NOT EXISTS(SELECT 1 FROM EDI_CARDIT_HD WHERE AWB_NO = a.awb_no and awb_date = a.awb_date)						
		AND NOT EXISTS(SELECT 1 FROM AWB awb WHERE awb.AWB_NO = a.AWB_NO AND awb.AWB_DATE = a.AWB_DATE and awb.awb_type != 'E')
        AND a.awb_no = #awbNo# and a.awb_date = TO_DATE(#awbDate#,'DDMONYY')
	</delete>
	
	 <delete id="sqlDeleteAWBOwnerOnFWBDeleteCARDIT" parameterClass="java.util.HashMap" >
		DELETE FROM AWB_OWNER WHERE NOT EXISTS(SELECT 1 FROM AWB WHERE AWB.AWB_NO = AWB_OWNER.AWB_NO AND AWB_OWNER.AWB_DATE = AWB.AWB_DATE)
		AND AWB_NO = #awbNo# AND AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
	</delete>

	<select id="fetchTagIfExists1" parameterClass="cargo.cms.mac.bo.MacCarditBO" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM (SELECT ect.TAG_NO recpNo
		FROM EDI_CARDIT_TAG_DTL ect ,EDI_CARDIT_HD ech
		WHERE ect.TAG_NO=#recpNo# AND ech.AWB_NO!=#awbNo#
		UNION
		SELECT rtd.TAG_NO recpNo
		FROM EDI_RESDIT_TAG_DTL rtd ,EDI_RESDIT_AWB_DTL rad
		WHERE rtd.TAG_NO=#recpNo# AND rad.AWB_NO!=#awbNo#)
		 
	</select>
 

<update id="updateCardit" parameterClass="cargo.cms.mac.bo.MacCarditBO">
	UPDATE EDI_CARDIT_HD SET ORIG = #consgnOrigin#,DEST = #consgnDest#,MAIL_CATEGORY = #mailCtgry#,
	MAIL_CLASS = #mailClass#,SPL_CODE1 = #shc1#,SPL_CODE2 = #shc2#,SPL_CODE3 = #shc3#,SPL_CODE4 = #shc4#,SPL_CODE5 = #shc5#,
	SPL_CODE6 = #shc6#,SPL_CODE7 = #shc7#,SPL_CODE8 = #shc8#,SPL_CODE9 = #shc9#,
	TOT_NO_RECEPTACLE = #totPcs#,
	TOT_WT_RECEPTACLE = #totWt#,LM_USER_ID =#userID#,LM_DATE =SYSDATE,TR_TYPE = #trtype#,DATA_TYPE = #dataType#,POST_OFF_CODE=#postoffCode#,CSGNM_NUM=#consgnNo#
	WHERE AWB_NO = #awbNo# AND AWB_DATE=to_date(#awbDate#,'DDMONYY')
</update>
<!-- awb exit -->

<select id="AwbExists" parameterClass="cargo.cms.mac.bo.MacCarditBO" resultClass="cargo.cms.mac.bo.MacCarditBO">
		SELECT TR_NO as trNo, TO_CHAR(AWB_DATE,'DDMONYY') as awbDate FROM EDI_CARDIT_HD WHERE AWB_NO=#awbNo# 
		AND awb_date = to_date(#awbDate#,'DDMONYY') 
		 </select>


<!-- update Transcardit with WSMSG -->
<update id="updateTransCarditMsg" parameterClass="cargo.cms.mac.bo.MacCarditBO">
	UPDATE EDI_CARDIT_TRANSP_DTL SET 
	TRANSPORT_MODE = #mOfTrans#,DEPT_PORT = #depPt#,DEPT_DATE = TO_DATE(#depDt#,'DDMONYY'),DEPT_TIME = #depTm#,
	ARR_PORT = #arrPt#,CR_USER_ID = #userID#,CR_DATE = SYSDATE,LM_USER_ID = #userID#,LM_DATE = SYSDATE
	WHERE TR_NO = #trNo# AND FLT_KEY= #flt#
</update>

<!--update TagCardit with WSMSG -->
<update id="updateTagCarditMsg" parameterClass="cargo.cms.mac.bo.MacCarditBO">
	UPDATE EDI_CARDIT_TAG_DTL SET
	CONTAINER_NO = #uldKey#,CONTAINER_TYPE = #uldType#,CONTAINER_WT = #uldWt#,CONTAINER_SEAL = #uldSeal#,
	DG_IND = #dgInd#,TAG_WT = #wt#,CR_USER_ID = #userID#,CR_DATE = SYSDATE,LM_USER_ID = #userID#,LM_DATE = SYSDATE,ORG_EXCH_OFF = #orgOffice#,DEST_EXCH_OFF= #dstOffice#,DSPCH_CATEGORY =#dispCategory# ,DSPCH_CLASS =#dispClass# ,DSPCH_YEAR = #dispYear#,DSPCH_SN = #dispSerial#
	WHERE TR_NO = #trNo# AND TAG_NO = #recpNo#
 </update>
 
 <!-- insert Tag cardit details -->
	<insert id="saveTagCardit" parameterClass="cargo.cms.mac.bo.MacCarditBO">
	 insert into EDI_CARDIT_TAG_DTL(TR_NO,DOC_LINE_NO,CONTAINER_NO,CONTAINER_TYPE,CONTAINER_WT,CONTAINER_SEAL,TAG_NO,DG_IND,TAG_WT,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,ORG_EXCH_OFF,DEST_EXCH_OFF,DSPCH_CATEGORY,DSPCH_CLASS,DSPCH_YEAR,DSPCH_SN) 
	 values(#trNo#,EDI_CARDIT_DOC_HD_SEQ.NEXTVAL,#uldKey#,#uldType#,#uldWt#,#uldSeal#,#recpNo#,#dgInd#,#wt#,#userID#,SYSDATE,#userID#,SYSDATE,#orgOffice#,#dstOffice#,#dispCategory#,#dispClass#,#dispYear#,#dispSerial#)
	</insert>

	<delete id="deleteTagsNotInMsg" parameterClass="cargo.cms.mac.bo.MacCarditBO">
		DELETE FROM EDI_CARDIT_TAG_DTL
		WHERE TR_NO=#trNo# AND TAG_NO NOT IN (SELECT hi.HAWB_NO FROM HAWB_INVENTORY hi 
        JOIN AWB_INVENTORY ai ON ai.SEQ_NO=hi.SEQ_NO
        WHERE ai.AWB_NO=#awbNo#) AND TAG_NO NOT IN 
		<iterate  property="carditMsgTags"
				open="('" close="')" conjunction="','" >$carditMsgTags[]$</iterate>	
	</delete>
	
	<delete id="deleteTransNotInMsg" parameterClass="cargo.cms.mac.bo.MacCarditBO">
		DELETE FROM EDI_CARDIT_TRANSP_DTL
		WHERE TR_NO=#trNo# AND FLT_KEY NOT IN 
		<iterate  property="carditMsgTrans"
				open="('" close="')" conjunction="','" >$carditMsgTrans[]$</iterate>	
		</delete>
	
	<update id="updEDI_FHL_Cardit" parameterClass="cargo.cms.mac.bo.MacCarditBO">
		UPDATE edi_fhl
		    SET awb_pcs = awb_pcs +  #totPcs#,
		           awb_wt = awb_wt + #totWt# , 
		           lm_user_id = #userID#,
		           lm_date = SYSDATE
		    WHERE tr_no = #trNo#
    </update>
    
	<select id="chkFhlHAWBCreatedCardit" parameterClass="cargo.cms.mac.bo.MacCarditBO" resultClass="java.lang.String">
		select DOC_LINE_NO as docLine FROM edi_fhl_hawb WHERE TR_NO = #trNo# AND HAWB_NO = #recpNo# 
	</select>
	
		<update id="updEDI_FHL_HAWB_Cardit" parameterClass="cargo.cms.mac.bo.MacCarditBO">
		UPDATE edi_fhl_hawb
		    SET HAWB_NET_WT = #wt# , 
		           lm_user_id = #userID#,
		           lm_date = SYSDATE
		    WHERE tr_no = #trNo# and DOC_LINE_NO = #docLine#
    </update>
    
    	<insert id="insEDI_FHL_HAWB_Cardit" parameterClass="cargo.cms.mac.bo.MacCarditBO">
		Insert into edi_fhl_hawb (TR_NO,DOC_LINE_NO,HAWB_NO,HAWB_ORG,HAWB_DEST,HAWB_PCS,HAWB_NET_WT,HAWB_WT_CODE,MANIFEST_DESC,ACCS_I,SOURCE,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,LM_VER) values 
		(#trNo#,EDI_FHL_HAWB_SEQ.nextval,#recpNo#,#consgnOrigin#,#consgnDest#,'1',#wt#,'K','TAG','A','TAG',#userID#,SYSDATE,#userID#,SYSDATE,1)
	</insert>	
	
	<select id="chkMastHAWBCntCardit" parameterClass="cargo.cms.mac.bo.MacCarditBO" resultClass="java.lang.String">
		select count(1) as hawbCnt FROM MAST_HAWB WHERE HAWB_NO = #recpNo# AND AWB_NO = #awbNo# AND AWB_DATE = to_date(#awbDate#,'DDMONYY') 
	</select>
	
	<update id="updMastHAWBCardit" parameterClass="cargo.cms.mac.bo.MacCarditBO">
		UPDATE MAST_HAWB
		    SET HAWB_WT = #wt# 
		    WHERE HAWB_NO = #recpNo# AND AWB_NO = #awbNo# AND AWB_DATE = to_date(#awbDate#,'DDMONYY') 
    </update>
    
    <insert id="insMastHAWBCardit" parameterClass="cargo.cms.mac.bo.MacCarditBO">
		Insert into MAST_HAWB (AWB_NO,AWB_DATE,HAWB_NO,HAWB_ORG,HAWB_DES,HAWB_PCS,HAWB_WT) values 
			(#awbNo#,#awbDate#,#recpNo#,#consgnOrigin#,#consgnDest#,'1',#wt#)
	</insert>

    <select id="validateOrig" parameterClass="map" resultClass="java.lang.Integer">
            SELECT count(*) FROM MAST_ARPT WHERE CODE=#orig#
      </select>
      
      <select id="validateUldtypeByCardit" parameterClass="map" resultClass="java.lang.Integer">
            SELECT count(*) FROM MAST_ULD_TYPE WHERE CODE=#uldType#
      </select>

<!-- RESDIT other tables operation -->
	<select id="sqlResditGetFltDtl" parameterClass="cargo.cms.mac.bo.MacRESDITMsgBo" resultClass="cargo.cms.mac.bo.MacRESDITMsgBo">
		SELECT SCH_TIME schTime, SCH_DATE fltDate FROM FLT_OPR WHERE FLT_KEY = #fltKey# AND SCH_DATE  = to_date(#fltDate#,'DDMONYY') AND FLT_TYPE  = 'A'
	</select>
	
	<select id="sqlResditRampHdExist" parameterClass="cargo.cms.mac.bo.MacRESDITMsgBo" resultClass="java.lang.String">
		select decode(count(1),0,'N','Y') rampHdExist from IMP_RAMP_CHK_HD where flt_key=#fltKey# and flt_date=to_date(#fltDate#,'DDMONYY')
	</select>

	<select id="checkULDNestingThUnitAreSame" parameterClass="cargo.cms.mac.bo.MacRESDITMsgBo" resultClass="java.lang.String">		
	<![CDATA[
		SELECT * FROM 
			(SELECT R.CONTAINER_NO FROM(
				SELECT B.CONTAINER_NO FROM EDI_RESDIT_AWB_DTL A 
						  JOIN EDI_RESDIT_TAG_DTL B ON A.TR_AWB_NO = B.TR_AWB_NO 
						  JOIN EDI_RESDIT_HD C ON C.TR_NO = A.TR_NO
						  WHERE C.flt_key = #fltKey# AND C.flt_date = TO_DATE(#fltDate#, 'DDMONYY') AND B.CONTAINER_NO IS NOT NULL
				      GROUP BY B.CONTAINER_NO,B.NESTING_ID,B.THRU_UNIT_IND) R
			GROUP BY R.CONTAINER_NO HAVING COUNT(R.CONTAINER_NO) > 1 ) F where 1 = 1 AND ROWNUM = 1
		]]>
	</select>
	

<select id="sqlResditRampHdTrNo" parameterClass="cargo.cms.mac.bo.MacRESDITMsgBo" resultClass="java.lang.String">
		select  tr_no rampchkSeq from IMP_RAMP_CHK_HD where flt_key=#fltKey# and flt_date=to_date(#fltDate#,'DDMONYY')
	</select>
	
	<insert id="sqlResditInsertRampHd" parameterClass="cargo.cms.mac.bo.MacRESDITMsgBo">
		 INSERT INTO IMP_RAMP_CHK_HD (TR_NO,FLT_NO,FLT_DATE,FLT_ATA,CARR_CODE, FLT_KEY,COMPL_DATE,COMPL_USER_ID,TR_TYPE,TR_STATUS,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,FLT_TYPE)
		 VALUES(#rampTrNo#,#fltNo#,#fltDate#,#schTime#,substr(#fltKey#, 1, 2),#fltKey#,NULL,NULL,'N','A',#userID#,SYSDATE,#userID#,SYSDATE,'I')
  	</insert>
  	
	<select id="sqlGetCarditAwbDtl" parameterClass="cargo.cms.mac.bo.PAWBBo" resultClass="cargo.cms.mac.bo.PAWBBo">
		select pcs awbPcs,wt awbWt,ORIG consgnOrg,DEST cosgnDest from AWB where (awb_no,awb_date) in (select awb_no,awb_date from EDI_CARDIT_HD where awb_no=#pawbNo# and awb_date=to_date(#pawbDate#,'DDMONYY'))
	</select>
	
  	<select id="sqlResditAwbExist" parameterClass="cargo.cms.mac.bo.PAWBBo" resultClass="java.lang.String">
		select decode(count(1),0,'N','Y') awbExist from AWB where awb_no=#pawbNo# and awb_date=to_date(#pawbDate#,'DDMONYY')
	</select>
	
<insert id="sqlResditInsertAwb" parameterClass="cargo.cms.mac.bo.PAWBBo">
		 INSERT INTO AWB (AWB_NO,AWB_DATE, AWB_TYPE,PPK_TYPE,CATALOG,ORIG,DEST,PCS,WT,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,CARR_CODE,CONTENT,HOUSE_FLG)
		 VALUES(#pawbNo#,#pawbDate#,'T','B','TM',#consgnOrg#,#cosgnDest#,#tTlPcs#,#tTlWt#,#userID#,SYSDATE,#userID#,SYSDATE,#carrCode#,'TM','Y')
  	</insert>
	
<update id="sqlResditUpdateAwb" parameterClass="cargo.cms.mac.bo.PAWBBo">
		UPDATE AWB SET
			PCS   = #tTlPcs#,
		    WT    = #tTlWt#,
		    LM_USER_ID = #userID#,
		    LM_DATE    = sysdate
		WHERE
			AWB_NO = #pawbNo# AND
			AWB_DATE = TO_DATE(#pawbDate#,'DDMONYY')				
	</update> 
	
	<update id="sqlResditUpdateAwbRoute" parameterClass="cargo.cms.mac.bo.PAWBBo">
		UPDATE AWB SET
			    ORIG = #consgnOrg#,
			    DEST = #cosgnDest#,
		    LM_USER_ID = #userID#,
		    LM_DATE    = sysdate
		WHERE
			AWB_NO = #pawbNo# AND
			AWB_DATE = TO_DATE(#pawbDate#,'DDMONYY')				
	</update> 
	
<select id="sqlResditAwbOwnExist" parameterClass="cargo.cms.mac.bo.PAWBBo" resultClass="java.lang.String">
		select decode(count(1),0,'N','Y') awbOwnExist from awb_owner where awb_no=#pawbNo# and awb_date=to_date(#pawbDate#,'DDMONYY') AND carr_code=#carrCode#
	</select>
	
	<insert id="sqlResditInsertAwbOwn" parameterClass="cargo.cms.mac.bo.PAWBBo">
		 Insert into AWB_OWNER (AWB_NO,AWB_DATE,CARR_CODE,PCS,WT,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE) 
		 values (#pawbNo#,#pawbDate#,#carrCode#,#tTlPcs#,#tTlWt#,#userID#,SYSDATE,#userID#,SYSDATE)
  	</insert>
  	
  	<update id="sqlResditUpdateAwbOwn" parameterClass="cargo.cms.mac.bo.PAWBBo">
		UPDATE AWB_OWNER SET
			PCS   = #tTlPcs#,
		    WT    = #tTlWt#,
		    LM_USER_ID = #userID#,
		    LM_DATE    = sysdate
		WHERE
			AWB_NO = #pawbNo# AND
			AWB_DATE = TO_DATE(#pawbDate#,'DDMONYY') AND	
			CARR_CODE = #carrCode#				
	</update>
	  
  	<select id="sqlResditImpCarAwbExist" parameterClass="cargo.cms.mac.bo.PAWBBo" resultClass="java.lang.String">
		select decode(count(1),0,'N','Y') impCarAwbExist from IMP_CAR_AWB where awb_no=#pawbNo# and awb_date=to_date(#pawbDate#,'DDMONYY')
	</select>
  	
  	
  	
  	<select id="sqlResditImpCarAwbGetSHC" parameterClass="cargo.cms.mac.bo.PAWBBo" resultClass="cargo.cms.mac.bo.PAWBBo">
		select SPL_CODE1 AS splCode1, SPL_CODE2 AS splCode2, SPL_CODE3 AS splCode3, 
		SPL_CODE4 AS splCode4, SPL_CODE5 AS splCode5, SPL_CODE6 AS splCode6,
		SPL_CODE7 AS splCode7, SPL_CODE8 AS splCode8,SPL_CODE9 AS splCode9,content as content
		from AWB where awb_no=#pawbNo# and awb_date=to_date(#pawbDate#,'DDMONYY')
	</select>
  	
<insert id="sqlResditInsertImpCarAwb" parameterClass="cargo.cms.mac.bo.PAWBBo">
		 INSERT INTO IMP_CAR_AWB (AWB_NO,AWB_DATE,AWB_PRFX,AWB_ORIGIN,AWB_DEST,AWB_PCS,AWB_WT,BULK_PCS,BULK_WT,PPK_TYPE,AWB_RMK,TR_STATUS,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,CATALOG,
		 SPL_CODE1,SPL_CODE2,SPL_CODE3,SPL_CODE4,SPL_CODE5,SPL_CODE6,SPL_CODE7,SPL_CODE8,SPL_CODE9,CONTENT,HOUSE_FLG,CONSOLE_IND)
		 VALUES(#pawbNo#,#pawbDate#, substr(#pawbNo#, 1, 3),#consgnOrg#,#cosgnDest#,#tTlPcs#,#tTlWt#,#tTlPcs#,#tTlWt#,'B',#remark#,'A',#userID#,SYSDATE,#userID#,SYSDATE,'TM',
		 #splCode1#,#splCode2#,#splCode3#,#splCode4#,#splCode5#,#splCode6#,#splCode7#,#splCode8#,#splCode9#,#content#,'Y','Y')
  	</insert>
  	
  	<update id="sqlResditUpdateImpCarAwb" parameterClass="cargo.cms.mac.bo.PAWBBo">
		UPDATE IMP_CAR_AWB SET
			AWB_PCS   = #awbPcs#,
		    AWB_WT    = #awbWt#,
		    BULK_PCS   = #tTlPcs#,
		    BULK_WT    = #tTlWt#,
		    <isNotEmpty property="userID">
			    <isEqual property="userID" compareValue="GLS">
			    AWB_ORIGIN = #consgnOrg#,
			    AWB_DEST = #cosgnDest#,
			    </isEqual>
		    </isNotEmpty>
		    LM_USER_ID = #userID#,
		    LM_DATE    = sysdate
		WHERE
			AWB_NO = #pawbNo# AND
			AWB_DATE = TO_DATE(#pawbDate#,'DDMONYY')		
	</update>
<select id="sqlResditImpCarShpExist" parameterClass="cargo.cms.mac.bo.PAWBBo" resultClass="java.lang.String">
		select decode(count(1),0,'N','Y') impCarShpExist from IMP_CAR_SHP where awb_no=#pawbNo# and awb_date=to_date(#pawbDate#,'DDMONYY') AND flt_key=#fltKey# and flt_date=to_date(#fltDate#,'DDMONYY')
	</select>
	
<insert id="sqlResditInsertImpCarShp" parameterClass="cargo.cms.mac.bo.PAWBBo">
		 INSERT INTO IMP_CAR_SHP (AWB_NO,AWB_DATE,AWB_PRFX,PPK_TYPE,LDG_POINT, CARR_CODE,FLT_DATE,FLT_KEY,MANIFEST_PCS,MANIFEST_WT,BULK_PCS, BULK_WT,TR_STATUS,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,FLT_TYPE,CAR_CREATED)
		 VALUES(#pawbNo#,#pawbDate#,substr(#pawbNo#, 1, 3),'B',#consgnOrg#,#carrCode#,#fltDate#,#fltKey#,#tTlPcs#,#tTlWt#,#tTlPcs#,#tTlWt#,'A',#userID#,SYSDATE,#userID#,SYSDATE,'I','Y')
  	</insert>
  	
  	<update id="sqlResditUpdateImpCarShp" parameterClass="cargo.cms.mac.bo.PAWBBo">
		UPDATE IMP_CAR_SHP SET
			MANIFEST_PCS   = #tTlPcs#,
		    MANIFEST_WT    = #tTlWt#,
		    BULK_PCS   = #tTlPcs#,
		    BULK_WT    = #tTlWt#,
		    LM_USER_ID = #userID#,
		    LM_DATE    = sysdate
		WHERE
			AWB_NO = #pawbNo# AND
			AWB_DATE = TO_DATE(#pawbDate#,'DDMONYY') AND flt_key=#fltKey# and flt_date=to_date(#fltDate#,'DDMONYY')		
	</update>
	
  	<select id="sqlResditImpUldExist" parameterClass="cargo.cms.mac.bo.TagBo" resultClass="java.lang.String">
		SELECT decode(count(1),0,'N','Y') impUldExist FROM IMP_ULD_LIST WHERE flt_key=#fltKey# and flt_date=to_date(#fltDate#,'DDMONYY') AND ULD_KEY = #uldKey#
	</select>
	
	<insert id="sqlResditInsertImpUld" parameterClass="cargo.cms.mac.bo.TagBo">
		 INSERT INTO IMP_ULD_LIST (FLT_KEY ,FLT_DATE,ULD_KEY ,IMX ,HANDLING_MODE ,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,TRANSIT_IND ,CONFIRM)
		 VALUES (#fltKey#,#fltDate#,#uldKey#,'N' ,#handlingMode#,#userID#,SYSDATE,#userID#,SYSDATE,'N','N')
  	</insert>
  	
  	<update id="sqlResditUpdateImpUld" parameterClass="cargo.cms.mac.bo.TagBo">
		UPDATE IMP_ULD_LIST SET
			HANDLING_MODE   = #handlingMode#,
		    LM_USER_ID = #userID#,
		    LM_DATE    = SYSDATE
		WHERE
			flt_key=#fltKey# AND
			flt_date=to_date(#fltDate#,'DDMONYY') AND
			ULD_KEY = #uldKey#		
	</update>
	
	<update id="sqlResditUpdateRampDtl" parameterClass="cargo.cms.mac.bo.TagBo">
		UPDATE IMP_RAMP_INB_CHK_DTL SET
			RESDIT_IND = 'Y',
		    LM_USER_ID = #userID#,
		    LM_DATE    = SYSDATE
		WHERE
			flt_key=#fltKey# 
			and flt_date=to_date(#fltDate#,'DDMONYY') 
			AND ULD_KEY = #uldKey#	
	</update>
	
  	<select id="sqlResditRampDtlExist" parameterClass="cargo.cms.mac.bo.TagBo" resultClass="java.lang.String">
		select decode(count(1),0,'N','Y') rampDtlExist from IMP_RAMP_INB_CHK_DTL where flt_key=#fltKey# and flt_date=to_date(#fltDate#,'DDMONYY') AND ULD_KEY = #uldKey#
	</select>
	
	<select id="sqlResditRampDtlDocNo" parameterClass="cargo.cms.mac.bo.TagBo" resultClass="java.lang.Integer">
		SELECT MAX(DOC_LINE_NO) AS V_DOC_LINE_NO  FROM IMP_RAMP_INB_CHK_DTL WHERE flt_key=#fltKey# and flt_date=to_date(#fltDate#,'DDMONYY') GROUP BY TR_NO
	</select>
	
	<insert id="sqlResditInsertRampDtl" parameterClass="cargo.cms.mac.bo.TagBo">
		 INSERT INTO IMP_RAMP_INB_CHK_DTL (TR_NO,DOC_LINE_NO,FLT_NO,FLT_DATE,FLT_KEY,ULD_TYPE,ULD_NO,ULD_CARR,ULD_KEY,CARR_CODE,RMK,TR_TYPE,TR_STATUS,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,RESDIT_IND)
		 VALUES(#rampTrNo#,#rampDocLineNo#,#fltNo#, #fltDate#,#fltKey#,#rampUldType#,#rampUldNo#,#rampUldCarr#,#uldKey#,substr(#fltKey#, 1, 2),#remark#,'N','A',#userID#,SYSDATE,#userID#,SYSDATE,#resditInd#)
  	</insert>
  	
  	<select id="sqlResditImpHawbExist" parameterClass="cargo.cms.mac.bo.TagBo" resultClass="java.lang.String">
		select decode(count(1),0,'N','Y') impHawbExist from IMP_HAWB_STRG_DTL where awb_no=#pawbNo# and awb_date=to_date(#pawbDate#,'DDMONYY') AND flt_key=#fltKey# and flt_date=to_date(#fltDate#,'DDMONYY') AND HAWB_NO=#receptableNo#
	</select>
	
  	<insert id="sqlResditInsertImpHawb" parameterClass="cargo.cms.mac.bo.TagBo">
		 INSERT INTO IMP_HAWB_STRG_DTL(CARR_CODE,AWB_PFX,AWB_NO,AWB_DATE,AWB_DEST,HAWB_NO,HAWB_PCS,HAWB_WT,TR_TYPE,TR_STATUS,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,FLT_TYPE,FLT_DATE,FLT_KEY)
		 VALUES(#carrCode#,substr(#pawbNo#, 1, 3),#pawbNo#,#pawbDate#, #cosgnDest#,#receptableNo#,1,#tagWt#, 'HA','A',#userID#,SYSDATE,#userID#,SYSDATE,'I',#fltDate#, #fltKey#)
  	</insert>
  	
  	<update id="sqlResditUpdateImpHawb" parameterClass="cargo.cms.mac.bo.TagBo">
		UPDATE IMP_HAWB_STRG_DTL SET
			HAWB_WT = #tagWt#,
		    LM_USER_ID = #userID#,
		    LM_DATE    = SYSDATE
		WHERE
			awb_no=#pawbNo# and 
			awb_date=to_date(#pawbDate#,'DDMONYY') AND 
			flt_key=#fltKey# and 
			flt_date=to_date(#fltDate#,'DDMONYY') AND 
			HAWB_NO=#receptableNo#	
	</update>
	
	<delete id="sqlResditImpCarShpDelete" parameterClass="cargo.cms.mac.bo.PAWBBo">
		delete from IMP_CAR_SHP where awb_no=#pawbNo# and awb_date=to_date(#pawbDate#,'DDMONYY') AND flt_key=#fltKey# and flt_date=to_date(#fltDate#,'DDMONYY')
	</delete>
	
	<delete id="sqlResditImpCarAwbDelete" parameterClass="cargo.cms.mac.bo.PAWBBo">
		delete from IMP_CAR_AWB where awb_no=#pawbNo# and awb_date=to_date(#pawbDate#,'DDMONYY')
	</delete>
	
	<delete id="sqlResditAwbOwnDelete" parameterClass="cargo.cms.mac.bo.PAWBBo">
		delete from awb_owner where awb_no=#pawbNo# and awb_date=to_date(#pawbDate#,'DDMONYY') AND carr_code=#carrCode#
	</delete>
	
	<delete id="sqlResditAwbDelete" parameterClass="cargo.cms.mac.bo.PAWBBo">
		delete from AWB where awb_no=#pawbNo# and awb_date=to_date(#pawbDate#,'DDMONYY')
	</delete>	
	<delete id="sqlResditEXP_CAR_Delete" parameterClass="cargo.cms.mac.bo.PAWBBo">
		delete from EXP_CAR where awb_no=#pawbNo# and awb_date=to_date(#pawbDate#,'DDMONYY')
	</delete>
     <delete id="sqlResditImpHawbDelete" parameterClass="cargo.cms.mac.bo.PAWBBo">
		delete from IMP_HAWB_STRG_DTL where awb_no=#pawbNo# AND awb_date=to_date(#pawbDate#,'DDMONYY') AND flt_key=#fltKey# and flt_date=to_date(#fltDate#,'DDMONYY')
	</delete>
	
	<delete id="sqlResditImpHawbUnitDelete" parameterClass="cargo.cms.mac.bo.TagBo">
		delete from IMP_HAWB_STRG_DTL where awb_no=#pawbNo# AND awb_date=to_date(#pawbDate#,'DDMONYY') AND flt_key=#fltKey# and flt_date=to_date(#fltDate#,'DDMONYY') and HAWB_NO=#receptableNo#
	</delete>
<delete id="sqlResditRampHdDelete" parameterClass="cargo.cms.mac.bo.TagBo">
		delete from IMP_RAMP_CHK_HD where flt_key=#fltKey# and flt_date=to_date(#fltDate#,'DDMONYY')
		AND not exists (select null from IMP_RAMP_CHK_DTL where flt_key=#fltKey# and flt_date=to_date(#fltDate#,'DDMONYY'))
		AND not exists (select null from IMP_RAMP_INB_CHK_DTL where flt_key=#fltKey# and flt_date=to_date(#fltDate#,'DDMONYY'))
	</delete>
  	<!-- RESDIT other tables operation -->
  	
  	<select id="getTransfromDummyPawbNo" parameterClass="cargo.cms.mac.bo.MacCarditBO" resultClass="cargo.cms.imprt.bo.TransformAWBBO">
		 SELECT 
			mail.CATALOG catalog,
		 	mail.TAG_NO tagNo, 
		 	mail.ACT_PCS actPcs, 
			mail.ACT_WT actWt,
			mail.EST_PCS estPcs,
			mail.EST_WT estWt,			
		 	mail.FLT_TYPE fltType,
		 	mail.FLT_KEY fltKey,	
		 	TO_CHAR(mail.FLT_DATE,'DDMONYY') fltDate,
			mail.ORIG orig, 
			mail.DEST dest, 
			inventory.loc_code locn, 
			inventory.LSP_NO lspNo,
			inventory.ULD_KEY uldKey, 
			mail.BD_ULD_KEY bduldno,			
			mail.DAM_IND damInd, 
			mail.RMK rmk, 		
			mail.LM_USER_ID lmUserId,
			mail.LM_DATE lmDate,
			mail.seq_no mailSeq,
      mail.AWB_NO oldAwbNo,
      TO_CHAR(mail.AWB_DATE,'DDMONYY') oldAwbDate,
      #AWB_NO# awbNo,
      #AWB_DATE# awbDate,
      'N' isDummyAwb,
      'Y' selList,
      inventory.LOC_CODE invLocn, 
	  inventory.ULD_KEY invUldKey,
	  inventory.LSP_NO invLspNo,
	  inventory.SEQ_NO invSeq
		 FROM 
			IMP_XPS_OBC_MAIL mail
			INNER JOIN IMP_HAWB_STRG_DTL st ON st.AWB_NO = mail.AWB_NO AND st.AWB_DATE = mail.AWB_DATE AND st.HAWB_NO = mail.TAG_NO AND st.HAWB_BRKDN_PCS > 0
			INNER JOIN AWB_INVENTORY inventory ON inventory.AWB_NO = mail.AWB_NO AND inventory.AWB_DATE = mail.AWB_DATE
			INNER JOIN HAWB_INVENTORY hinventory ON inventory.SEQ_NO = hinventory.SEQ_NO AND hinventory.HAWB_NO = mail.TAG_NO
		WHERE
			mail.AWB_NO=#AWB_NO#  AND mail.AWB_DATE=TO_DATE(#AWB_DATE#,'DDMONYY') AND mail.AWB_NO like '%M%'
			AND mail.TAG_NO IN <iterate  property="carditTags"
				open="('" close="')" conjunction="','" >$carditTags[]$</iterate>
		ORDER BY tagNo asc
   	</select>

   <select id="checkInboundULDCheckCount" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		select count(*)  from IMP_RAMP_CHK_DTL where ULD_KEY in (#uldKey#)
	</select>
	
	<insert id="ins_awbevents_cardit" parameterClass="cargo.cms.mac.bo.MacCarditBO">
		<![CDATA[
			INSERT INTO AWB_EVENTS 
			  (AWB_NO, AWB_DATE, EVENT_ID, EVENT_DESC, 
			  FLT_TYPE, TR_NO, ULD_KEY, PCS, WT, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE ) 
			VALUES  
			  (#awbNo#,  TO_DATE(#awbDate#,'DDMONYY') ,'ADIUCAR', 'Create CARDIT','I', AWB_event_SEQ.nextval
			, NULL, nvl(#totPcs#,0), nvl(#totWt#,0), #userID#,  sysdate, #userID#,  sysdate)
		]]>
	</insert>
		    
    <select id="getDuplicatePawbNoCountFromResdit" parameterClass="cargo.cms.mac.bo.PAWBBo"
		resultClass="java.lang.Integer">
		 SELECT COUNT(1) FROM EDI_RESDIT_AWB_DTL ERAD        
		JOIN EDI_RESDIT_HD ERH ON ERH.TR_NO=ERAD.TR_NO WHERE ERH.FLT_KEY!=#flt# AND    
		ERH.FLT_DATE!=TO_DATE(#fltDate#,'DDMONYY') AND ERAD.AWB_NO=#pawbNo# AND ERAD.AWB_DATE=TO_DATE(#AWB_DATE#,'DDMONYY')
	</select>
   	
    <select id="getDoclineForTag" parameterClass="cargo.cms.mac.bo.MacCarditBO" resultClass="cargo.cms.mac.bo.MacCarditBO">
   	    SELECT ec.DOC_LINE_NO as ECTD_DOC_LINE FROM EDI_CARDIT_TAG_DTL ec
		INNER JOIN EDI_CARDIT_HD eh ON eh.TR_NO = ec.TR_NO
		WHERE ec.TAG_NO = #recpNo# AND eh.AWB_NO = #awbNo# AND TO_CHAR(eh.AWB_DATE,'DDMONYY') = #awbDate# AND ROWNUM = 1
   	 </select>
   	
   	<select id="getDoclineForTrans" parameterClass="cargo.cms.mac.bo.MacCarditBO" resultClass="cargo.cms.mac.bo.MacCarditBO">
   	     SELECT et.DOC_LINE_NO as docLineNo FROM EDI_CARDIT_TRANSP_DTL et
		 INNER JOIN EDI_CARDIT_HD ec ON ec.TR_NO = et.TR_NO
		 WHERE et.FLT_KEY = #flt# AND TO_CHAR(et.DEPT_DATE,'DDMONYY') = #depDt# AND ec.AWB_NO = #awbNo# 
		 AND TO_CHAR(ec.AWB_DATE,'DDMONYY') = #awbDate# AND ROWNUM = 1
   	 </select>
   	 
   	 <select id="getPawbTagsCountFromResdit" parameterClass="cargo.cms.mac.bo.PAWBBo"
		resultClass="java.lang.Integer">
		SELECT COUNT(ERTD.TAG_NO) FROM EDI_RESDIT_AWB_DTL ERAD 
       JOIN EDI_RESDIT_TAG_DTL ERTD ON ERTD.TR_AWB_NO=ERAD.TR_AWB_NO WHERE ERAD.AWB_NO=#pawbNo# AND ERAD.AWB_DATE=TO_DATE(#AWB_DATE#,'DDMONYY')
	</select>
	
<select id="getResditAwbDtl" parameterClass="java.lang.String" resultClass="java.util.HashMap">
		select awb_no PAWB,to_char(awb_date,'DDMONYY') PAWBDATE,hd.carr_code CARR from EDI_RESDIT_HD hd join EDI_RESDIT_AWB_DTL dtl on hd.tr_no=dtl.tr_no where dtl.tr_awb_no=#trAWBNo#
	</select>
	
<select id="getResditFltDtl" parameterClass="java.lang.String" resultClass="java.util.HashMap">
		select flt_key FLT_KEY,to_char(flt_date,'DDMONYY') FLT_DATE from edi_resdit_hd where tr_no in (select tr_no from edi_resdit_awb_dtl where tr_awb_no=#trAWBNo#)
	</select>
	
	<select id="fetchLadingPoint" parameterClass="cargo.cms.mac.bo.MacRESDITMsgBo" resultClass="cargo.cms.mac.bo.MacRESDITMsgBo">
    		  select distinct f.brd_point AS depPortList from flt_opr_seg f join EDI_RESDIT_HD e
		      on e.FLT_KEY=F.FLT_KEY and e.FLT_DATE=F.SCH_DATE
		      where f.tr_no in (
			  select tr_no from flt_opr where flt_key = #flt#  and 
			  sch_date=to_date(#fltDate#,'dd-mon-yy') and flt_type = 'A')
			  and f.off_point='HKG' AND e.FLT_DATE=to_date(#fltDate#,'dd-mon-yy') AND e.flt_key =#flt#
   	</select>
	
   	<select id="getAwbListByCardit" parameterClass="cargo.cms.mac.bo.MacCarditBO" resultClass="cargo.cms.imprt.bo.TransformAWBBO">
   	  	SELECT * FROM(
			SELECT awbNo,awbDate, 
			  (SELECT AWB.CARR_CODE FROM AWB where awb_no = awbNo and awb_date = awbDate) dummyCarr, 
			  (SELECT AWB.CARR_CODE FROM AWB where AWB_NO = #AWB_NO# AND AWB_DATE = to_date(#AWB_DATE#,'dd-mon-yy')) carditCarr   
			  FROM (SELECT distinct mail.AWB_NO awbNo,TO_CHAR(mail.AWB_DATE,'DDMONYY') AS awbDate FROM
     IMP_XPS_OBC_MAIL mail
			INNER JOIN AWB_INVENTORY inventory ON inventory.AWB_NO = mail.AWB_NO AND inventory.AWB_DATE = mail.AWB_DATE
      INNER JOIN IMP_HAWB_STRG_DTL st ON st.AWB_NO = mail.AWB_NO AND st.AWB_DATE = mail.AWB_DATE AND st.HAWB_NO = mail.TAG_NO 
      AND st.HAWB_BRKDN_PCS > 0
			INNER JOIN HAWB_INVENTORY hinventory ON inventory.SEQ_NO = hinventory.SEQ_NO
      INNER JOIN EDI_CARDIT_TAG_DTL ct ON ct.TAG_NO = mail.TAG_NO
      INNER JOIN EDI_CARDIT_HD ch ON ch.TR_NO = ct.TR_NO AND ch.AWB_NO = #AWB_NO# AND ch.AWB_DATE = to_date(#AWB_DATE#,'dd-mon-yy')
			      WHERE mail.AWB_NO LIKE '%M%' ) A 
			    ) B WHERE
			      (select  FUN_GET_PARENT_CARR (B.dummyCarr) from dual)  = (select  FUN_GET_PARENT_CARR (B.carditCarr) from dual)
			      AND (SELECT DECODE(COUNT(1), 0, 'N', 'Y') as mailAsCargo FROM MAST_CARRIER where code =  B.dummyCarr and NVL(MAIL_AS_CARGO,'X') = 'Y') 
			        = (SELECT DECODE(COUNT(1), 0, 'N', 'Y') as mailAsCargo  FROM MAST_CARRIER where code = B.carditCarr and NVL(MAIL_AS_CARGO,'X') = 'Y')
   	</select>
	
	
<select id="getAllTagsInfoByAwb" parameterClass="cargo.cms.mac.bo.MacCarditBO" resultClass="cargo.cms.mac.bo.MacCarditBO">
              SELECT ECTD.TAG_NO recpNo ,ECTD.TR_NO trNo ,ECTD.DOC_LINE_NO ECTD_DOC_LINE , 'Y' as tagInfoFlag,ECH.AWB_NO AWB_NO,TO_CHAR(ECH.AWB_DATE,'DDMONYY') AWB_DATE FROM EDI_CARDIT_TAG_DTL ECTD 
        JOIN EDI_CARDIT_HD ECH ON ECH.TR_NO=ECTD.TR_NO WHERE ECH.AWB_NO=#awbNo# AND ECH.AWB_DATE=to_date(#awbDate#,'DDMONYY') AND ECTD.TAG_NO NOT IN 
              <iterate  property="carditMsgTags"
                           open="('" close="')" conjunction="','" >$carditMsgTags[]$</iterate>       
                  </select>
	
	            <select id="getAllTransInfoByAwb" parameterClass="cargo.cms.mac.bo.MacCarditBO" resultClass="cargo.cms.mac.bo.MacCarditBO">     
         SELECT ECTD.FLT_KEY flt ,ECTD.TR_NO trNo ,ECTD.DOC_LINE_NO docLineNo, 'Y' as transInfoFlag  FROM EDI_CARDIT_TRANSP_DTL ECTD  JOIN EDI_CARDIT_HD ECH ON ECH.TR_NO=ECTD.TR_NO
        WHERE ECH.AWB_NO=#awbNo# AND ECH.AWB_DATE=to_date(#awbDate#,'DDMONYY') AND ECTD.FLT_KEY ||'-'||TO_CHAR(ECTD.DEPT_DATE,'DDMONYY') NOT IN 
         <iterate  property="carditMsgTrans"
                           open="('" close="')" conjunction="','" >$carditMsgTrans[]$</iterate> 
            </select>
<delete id="sqlResditRampDtlDelete" parameterClass="cargo.cms.mac.bo.TagBo">
		delete from IMP_RAMP_INB_CHK_DTL where flt_key=#fltKey# and flt_date=to_date(#fltDate#,'DDMONYY') and NVL(resdit_ind,'N') = 'Y'
		<isNotEmpty prepend="and" property="uldKey">
          not exists (select null from edi_resdit_hd hd join edi_resdit_awb_dtl dtl on hd.tr_no=dtl.tr_no join edi_resdit_tag_dtl tags on dtl.tr_awb_no=tags.tr_awb_no
    	  where hd.flt_key=#fltKey# and hd.flt_date=to_date(#fltDate#,'DDMONYY') and tags.container_no=#uldKey#) 
    	  AND not exists (select null from IMP_RAMP_CHK_DTL where flt_key=#fltKey# and flt_date=to_date(#fltDate#,'DDMONYY') and chkin_yn='Y' and uld_key=#uldKey#)
    	  AND uld_key=#uldKey#
        </isNotEmpty>
	</delete>
  	
  	<delete id="sqlResditImpUldDelete" parameterClass="cargo.cms.mac.bo.TagBo">
		delete FROM IMP_ULD_LIST WHERE flt_key=#fltKey# and flt_date=to_date(#fltDate#,'DDMONYY')
		AND uld_key in (select IMP_RAMP_INB_CHK_DTL.uld_key from IMP_RAMP_INB_CHK_DTL where flt_key=#fltKey# and flt_date=to_date(#fltDate#,'DDMONYY')  and NVL(resdit_ind,'N') = 'Y')
		<isNotEmpty prepend="and" property="uldKey">
          not exists (select null from edi_resdit_hd hd join edi_resdit_awb_dtl dtl on hd.tr_no=dtl.tr_no join edi_resdit_tag_dtl tags on dtl.tr_awb_no=tags.tr_awb_no
    	  where hd.flt_key=#fltKey# and hd.flt_date=to_date(#fltDate#,'DDMONYY') and tags.container_no=#uldKey#) 
    	  AND not exists (select null from IMP_RAMP_CHK_DTL where flt_key=#fltKey# and flt_date=to_date(#fltDate#,'DDMONYY') and chkin_yn='Y' and uld_key=#uldKey#)
    	  AND exists (select null from IMP_RAMP_INB_CHK_DTL where flt_key=#fltKey# and flt_date=to_date(#fltDate#,'DDMONYY') and NVL(resdit_ind,'N') = 'Y' and uld_key=#uldKey#)
    	  AND uld_key=#uldKey#
        </isNotEmpty>
	</delete>

<select id="sqlGetImpCarShpDtl" parameterClass="cargo.cms.mac.bo.PAWBBo" resultClass="cargo.cms.mac.bo.PAWBBo">
		select sum(manifest_pcs) awbPcs,sum(manifest_wt) awbWt,nvl(sum(bulk_pcs),0) tTlPcs,nvl(sum(bulk_wt),0) tTlWt from IMP_CAR_SHP where 
		AWB_NO = #pawbNo# AND AWB_DATE = TO_DATE(#pawbDate#,'DDMONYY')	
	 </select>		
	
	<select id="getMaxfhlAwbDate" parameterClass="map" resultClass="java.lang.String">
		 SELECT to_char(max(awbDate),'DDMONYY') FROM (
		SELECT max(t1.awb_date) as awbDate from edi_fhl t1 where t1.awb_no=#awbNo#
		UNION ALL
		SELECT MAX(t1.awb_date) as awbDate from awb t1 where t1.awb_no=#awbNo#) 
	</select>

<select id="getResditULDList" parameterClass="cargo.cms.mac.bo.MacRESDITMsgBo" resultClass="cargo.cms.mac.bo.TagBo">
		select distinct(tags.container_no) uldKey, hd.flt_key fltKey,to_char(hd.flt_date,'DDMONYY') fltDate from edi_resdit_hd hd 
			join edi_resdit_awb_dtl dtl on hd.tr_no=dtl.tr_no join edi_resdit_tag_dtl tags on dtl.tr_awb_no=tags.tr_awb_no
			where hd.flt_key=#flt# and hd.flt_date=to_date(#fltDate#,'DDMONYY') and tags.container_no is not null
	</select>	
	
	<select id="sqlGetAwbRouteDtl" parameterClass="cargo.cms.mac.bo.PAWBBo" resultClass="cargo.cms.mac.bo.PAWBBo">
		select pcs awbPcs,wt awbWt,ORIG consgnOrg,DEST cosgnDest from AWB where awb_no=#pawbNo# and awb_date=to_date(#pawbDate#,'DDMONYY')
	</select>


	 <select id="checkAwbType" parameterClass="cargo.cms.mac.bo.MacCarditBO" resultClass="java.lang.String">
		SELECT AWB_TYPE awbType FROM AWB WHERE AWB_NO=#awbNo# AND AWB_DATE=TO_DATE(#awbDate#,'DDMONYY') AND ROWNUM=1	
	 </select>
	 
<select id="getFhlHawbInfoExist" parameterClass="cargo.cms.mac.bo.MacCarditBO" resultClass="cargo.cms.mac.bo.MacCarditBO">
		SELECT DOC_LINE_NO docLineNo,HAWB_NO recpNo FROM EDI_FHL_HAWB WHERE HAWB_NO=#recpNo# AND TR_NO=#fhlTrNo# AND ROWNUM=1	
	 </select>
	 
	 <update id="updateFhlHAWBInfoByCardit" parameterClass="java.util.HashMap">
		 UPDATE EDI_FHL_HAWB SET HAWB_NO=#recpNo#,HAWB_ORG=#consgnOrigin#,HAWB_DEST=#consgnDest#,
		 HAWB_PCS='1',HAWB_NET_WT=#wt#,LM_USER_ID=#userID#,LM_DATE=SYSDATE
   	     WHERE DOC_LINE_NO=#docLineNo# AND TR_NO=#fhlTrNo#
	</update>
	
	<select id="getMastHawbExist" parameterClass="cargo.cms.mac.bo.MacCarditBO" resultClass="java.lang.String">
		SELECT COUNT(1) count FROM MAST_HAWB WHERE AWB_NO=#AWB_NO# AND AWB_DATE=TO_DATE(#AWB_DATE#,'DDMONYY')
		 AND HAWB_NO=#recpNo# AND ROWNUM=1
	 </select>
	 
    <update id="updateMastHAWBByCarditInfo" parameterClass="java.util.HashMap">
		 UPDATE MAST_HAWB SET HAWB_NO=#recpNo#,HAWB_ORG=#consgnOrigin#,HAWB_DES=#consgnDest#,HAWB_PCS='1',
		 HAWB_WT=#wt#
         WHERE HAWB_NO=#recpNo# AND AWB_NO=#awbNo# AND AWB_DATE=#awbDate#
	</update>
	
	 <select id="getResditUldInventoryCount" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		 select count(1) from ULD_INVENTORY where ULD_KEY = #uldKey# and OWNED_INV='Y' 
		 AND loc_code is not null
	 </select>
	<select id="getTagBrkDnCnt" parameterClass="java.util.HashMap"
		resultClass="java.lang.Integer">
		 select count(1) from IMP_HAWB_STRG_DTL where 
	 	 HAWB_NO=#tagNo# AND AWB_NO=#awbNo# AND AWB_DATE=to_date(#awbDate#,'DDMONYY')
	 	 AND hawb_brkdn_pcs > 0
	</select>
	<select id="getResditTagInvCnt" parameterClass="java.util.HashMap"
		resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM AWB_INVENTORY AI 
        JOIN HAWB_INVENTORY HI ON AI.SEQ_NO=HI.SEQ_NO
        WHERE AI.AWB_NO=#awbNo# AND HI.HAWB_NO=#tagNo# AND AI.AWB_DATE=to_date(#awbDate#,'DDMONYY')
	</select>
	
	<select id="getCTAWBCnt" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		select count(*) from imp_trm_hd where status = 'POSTED' and AWB_NO = #awb# and to_char(awb_date, 'DDMONYY') =#awbDate#
	</select>
	
	<select id="sqlTagExistsInCardit" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		 select decode(count(1), 0, 'N', 'Y') from EDI_CARDIT_TAG_DTL where TR_NO=#trNo# and TAG_NO = #tagNo#
	</select>
	
	<select id="sqlTagExistsInResdit" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		 select decode(count(1), 0, 'N', 'Y') from EDI_RESDIT_TAG_DTL where TR_AWB_NO=#trAWBNo# and TAG_NO = #tagNo#
	</select>
	
	<select id="getFlightUnldgPtCount" parameterClass="cargo.cms.edi.bo.OutboundMsgLogBO" resultClass="java.lang.Integer">
		 SELECT COUNT(DISTINCT(T2.OFF_POINT)) FROM  FLT_OPR T1, FLT_OPR_LEG T2 
		  WHERE T1.FLT_KEY = T2.FLT_KEY AND  T1.SCH_DATE = T2.SCH_DATE  
		  AND T1.FLT_TYPE = T2.FLT_TYPE AND  T1.FLT_TYPE = 'D' 
		  AND T1.FLT_KEY=#flightKey# AND T1.SCH_DATE =TO_DATE(#flightDt#,'DDMONYY') ORDER BY T2.OFF_POINT
	</select>	
	<select id="createResditMsgStatus" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
	<![CDATA[
   		SELECT COUNT(1) FROM EDI_RESDIT_MSG_LOCK WHERE FLT_KEY=#fltKey# AND FLT_DATE=#fltDate# AND STATUS = 'P' AND (SYSDATE - CR_DATE)*24*60 < 5
   	]]>
  	</select>
  	<insert id="createResditMsgStatus_insert" parameterClass="java.util.HashMap">
  	INSERT INTO EDI_RESDIT_MSG_LOCK (SEQ_NO, FLT_KEY, FLT_DATE, STATUS, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE) VALUES (EDI_RESDIT_MSG_LOCK_SEQ.NEXTVAL,#fltKey#,#fltDate#,'P','GLS',SYSDATE,'GLS',SYSDATE)
  	</insert>
  	<update id="createResditMsgStatus_update" parameterClass="java.util.HashMap">
  	UPDATE EDI_RESDIT_MSG_LOCK SET STATUS='C',LM_DATE=SYSDATE WHERE FLT_KEY=#fltKey# AND FLT_DATE=#fltDate# AND STATUS = 'P'
  	</update>
</sqlMap>