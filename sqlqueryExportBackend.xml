<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="ExportBackEndBusModule">

	<!--  Queries for trigger trg_aus_exp_rtn_hd -->
	<select id="sqlGetAllGTCms" resultClass="java.util.HashMap">
		SELECT column_1,column_2 FROM GT_CMS_2	 
	</select>
	<update id="sqlUpdateBillChargeDtl" parameterClass="java.util.HashMap">
		UPDATE
		BILL_CHARGE_DTL bil
		SET bil.WAVR_IND = #column_2#
		WHERE bil.SRF_NO = #column_1# 
		AND exists (select null
				       from   awb
				       where  awb_no = bil.awb_no
				       and    awb_date = bil.awb_date
					   )
		AND bil.WAVR_DONE = 'N'		 
	</update>
	<delete id="sqlDeleteAllGTCms" >
		DELETE FROM
		GT_CMS
	</delete>
	<!--  Queries for trigger trg_aus_exp_rtn_hd Ends -->

	<!--  Queries for trigger trg_ai_stat_exp_rtn_hd -->
	<select id="sqlGetAllGtExpRtn" resultClass="java.util.HashMap">
		SELECT SRF_NO,RCL_NO,AWB_NO,to_char(AWB_DATE,'DDMONYY') AWB_DATE,ULD_KEY,WT,AGENT_NAME,WAVR_CHARGE_YN,CR_USER_ID	FROM GT_EXP_RTN 
	</select>
	<parameterMap id="aiStatExpRtnMap" class="java.util.HashMap">
		<parameter property="SRF_NO" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="IN" />
		<parameter property="RCL_NO" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="IN" />
		<parameter property="AWB_NO" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="IN" />
		<parameter property="AWB_DATE" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="IN" />
		<parameter property="ULD_KEY" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="IN" />
		<parameter property="WT" jdbcType="NUMBER" javaType="java.lang.String"
			mode="IN" />
		<parameter property="AGENT_NAME" jdbcType="VARCHAR"
			javaType="java.lang.String" mode="IN" />
		<parameter property="WAVR_CHARGE_YN" jdbcType="VARCHAR"
			javaType="java.lang.String" mode="IN" />
		<parameter property="CR_USER_ID" jdbcType="VARCHAR"
			javaType="java.lang.String" mode="IN" />
	</parameterMap>	
	<procedure id="sqlAiStatExpRtn" parameterMap="aiStatExpRtnMap">
		{ call pkg_exp_billing.rental_charge(?,?,?,?,?,?,?,?,?)}
	</procedure>	

	<delete id="sqlDeleteAllGTExpRtn" >
		DELETE FROM
		GT_EXP_RTN
	</delete>
	<!--  Queries for trigger trg_ai_stat_exp_rtn_hd ends -->

	<!--  Queries for trigger trg_au_exp_rtn_hd  -->

	<insert id="sqlInsertGtCms" parameterClass="java.util.HashMap">
		INSERT IN TO GT_CMS_2(COLUMN_1,COLUMN_2) VALUES
		(#NEW_SRF_NO#,#NEW_WAVR_CHARGE_YN#)
	</insert>
	<!--  Queries for trigger trg_au_exp_rtn_hd ends -->

	<!-- Queries for trigger trg_biud_exp_pre_rcl_brkdn -->
	<parameterMap id="expPreRclBrkdnMap" class="java.util.HashMap">
		<parameter property="PRE_RCL_NO" jdbcType="VARCHAR"
			javaType="java.lang.String" mode="IN" />
		<parameter property="AWB_NO" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="IN" />
		<parameter property="DEST" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="IN" />
		<parameter property="PCS" jdbcType="NUMBER" javaType="java.lang.String"
			mode="IN" />
		<parameter property="WEIGHT" jdbcType="NUMBER" javaType="java.lang.String"
			mode="IN" />
		<parameter property="EVNT_FlG" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="IN" />
		<parameter property="LM_USER_ID" jdbcType="VARCHAR"
			javaType="java.lang.String" mode="IN" />
	</parameterMap>
	<procedure id="sqlUpdPreRclBrkdn" parameterMap="expPreRclBrkdnMap">
		{ call pkg_exp_acpt.upd_pre_rcl_brkdn(?,?,?,?,?,?,?)}
	</procedure>	
	<!-- Queries for trigger trg_biud_exp_pre_rcl_brkdn ends-->
	<!-- Queries for trigger trg_biud_exp_rcl_brkdn-->
	
	<select id="sqlGetExpRclHd" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select carr_code, accpt_mode, status from   exp_rcl_hd where  rcl_no = #RCL_NO#	 
	</select>
	
	<select id="sqlGetExpRclDtl" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select loc_code, lsp_no from  exp_rcl_dtl where  rcl_no = #RCL_NO# 
		<isNotEmpty property="ULD_KEY" prepend="AND">
		uld_key = #ULD_KEY#	
		</isNotEmpty>		
	</select>
	
	<select id="sqlGetExpRclDtlDummyLoc" resultClass="java.lang.String">
		select rule_value from cmsrules where rule_code = 'DUMMY_LOC'
	</select>
	
	<select id="checkExpUldAwb"  parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM EXP_ULD_AWB WHERE ULD_KEY = #ULD_KEY# AND AWB_NO = #AWB_NO# AND AWB_DATE = NVL(TO_DATE(#AWB_DATE#,'DDMONYY'),TO_CHAR(SYSDATE,'DDMONYY'))
	</select>
	<insert id="sqlInsertExpUldAwb" parameterClass="java.util.HashMap">
		insert into exp_uld_awb (uld_key, awb_no, awb_date, rcl_no, rcl_date, ppk_type, pcs, wt)
               values (#ULD_KEY#, #AWB_NO#, NVL(TO_DATE(#AWB_DATE#,'DDMONYY'),TO_CHAR(SYSDATE,'DDMONYY')), #RCL_NO#, (select rcl_date from exp_rcl_hd where rcl_no = #RCL_NO#) ,'M', NVL(#PCS#,0), NVL(#WT#,0))
	</insert>
	
	
	<parameterMap id="updAwbBrkdnMap" class="java.util.HashMap">
		<parameter property="AWB_NO" jdbcType="VARCHAR"	javaType="java.lang.String" mode="IN" />
		<parameter property="AWB_DATE" jdbcType="VARCHAR" javaType="java.lang.String"	mode="IN" />
		<parameter property="CARR_CODE" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" />
		<parameter property="DEST" jdbcType="VARCHAR" javaType="java.lang.String"	mode="IN" />
		<parameter property="PCS" jdbcType="NUMBER" javaType="java.lang.String"	mode="IN" />
		<parameter property="WEIGHT" jdbcType="NUMBER"	javaType="java.lang.String" mode="IN" />
		<parameter property="CONTENT" jdbcType="VARCHAR" javaType="java.lang.String"	mode="IN" />
		<parameter property="SPL_CODE1" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" />
		<parameter property="SPL_CODE2" jdbcType="VARCHAR" javaType="java.lang.String"	mode="IN" />
		<parameter property="SPL_CODE3" jdbcType="VARCHAR" javaType="java.lang.String"	mode="IN" />
		<parameter property="SPL_CODE4" jdbcType="VARCHAR"	javaType="java.lang.String" mode="IN" />
		<parameter property="SPL_CODE5" jdbcType="VARCHAR" javaType="java.lang.String"	mode="IN" />
		<parameter property="SPL_CODE6" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" />
		<parameter property="SPL_CODE7" jdbcType="VARCHAR" javaType="java.lang.String"	mode="IN" />
		<parameter property="SPL_CODE8" jdbcType="VARCHAR" javaType="java.lang.String"	mode="IN" />
		<parameter property="LM_USER_ID" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" />
		<parameter property="ACCPT_MODE" jdbcType="VARCHAR"	javaType="java.lang.String" mode="IN" />
	</parameterMap>
	<procedure id="sqlUpdAwbBrkdn" parameterMap="updAwbBrkdnMap">
		{ call pkg_exp_acpt.upd_awb_breakdown(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)}
	</procedure>	
	
	<update id="sqlUpdExpUldAwb" parameterClass="java.util.HashMap">
		update exp_uld_awb set pcs = #PCS#, wt = #WT#
            where  uld_key = #ULD_KEY#
            and    awb_no = #AWB_NO#
            and    awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')	 
	</update>
	
	<update id="sqlUpdExpRclHd" parameterClass="java.util.HashMap">
		update exp_rcl_hd set brkdn_yn = 'Y' where  rcl_no = #RCL_NO#
	</update>
	
	<parameterMap id="updateAwbBrkdnMap" class="java.util.HashMap">
		<parameter property="AWB_NO" jdbcType="VARCHAR"	javaType="java.lang.String" mode="IN" />
		<parameter property="AWB_DATE" jdbcType="VARCHAR" javaType="java.lang.String"	mode="IN" />
		<parameter property="PCS" jdbcType="NUMBER" javaType="java.lang.String"	mode="IN" />
		<parameter property="WEIGHT" jdbcType="NUMBER"	javaType="java.lang.String" mode="IN" />		
	</parameterMap>
	<procedure id="sqlUpdateAwbBrkdn" parameterMap="updateAwbBrkdnMap">
		{ call pkg_exp_acpt.upd_awb_breakdown(?,?,?,?)}
	</procedure>
	
	<delete id="sqlDelExpUldAwb" parameterClass="java.util.HashMap">
		delete from exp_uld_awb	where  uld_key = #ULD_KEY# and awb_no = #AWB_NO# and awb_date = to_date(#AWB_DATE#,'DDMONYY')
	</delete>
	
	<parameterMap id="updBrkdnAwbInvMap" class="java.util.HashMap">
		<parameter property="AWB_NO" jdbcType="VARCHAR"	javaType="java.lang.String" mode="IN" />
		<parameter property="AWB_DATE" jdbcType="VARCHAR" javaType="java.lang.String"	mode="IN" />
		<parameter property="LOC_CODE" jdbcType="VARCHAR"	javaType="java.lang.String" mode="IN" />
		<parameter property="PCS" jdbcType="NUMBER" javaType="java.lang.String"	mode="IN" />
		<parameter property="WEIGHT" jdbcType="NUMBER"	javaType="java.lang.String" mode="IN" />
		<parameter property="ULD_KEY" jdbcType="VARCHAR" javaType="java.lang.String"	mode="IN" />
		<parameter property="LSP_NO" jdbcType="VARCHAR" javaType="java.lang.String"	mode="IN" />
		<parameter property="LM_USER_ID" jdbcType="VARCHAR"	javaType="java.lang.String" mode="IN" />
		<parameter property="CARR_CODE" jdbcType="VARCHAR"	javaType="java.lang.String" mode="IN" />
	</parameterMap>
	<procedure id="sqlUpdBrkdnAwbInv" parameterMap="updBrkdnAwbInvMap">
		{ call pkg_exp_acpt.upd_brkdn_awb_inv(?,?,?,?,?,?,?,?,?)}
	</procedure>
	
	<insert id="sqlInsrtAwbEvents" parameterClass="java.util.HashMap">
		insert into awb_events(awb_no, awb_date, event_id, event_desc, flt_key, flt_date, 
								flt_type, tr_no, uld_key, pcs,wt, cr_user_id, cr_date, lm_user_id, lm_date)
                values (#AWB_NO#, TO_DATE(TRIM(#AWB_DATE#),'DDMONYY'), #EVENT_ID#, NVL(#EVENT_DESC#,(select distinct event_desc
                                                                   from   mast_awb_events
                                                                   where  event_id = #EVENT_ID#)), #FLT_KEY#, TO_DATE(#FLT_DATE#,'DDMONYY'),
                         'E', #RCL_NO#, #ULD_KEY#, #PCS#, #WT#, #LM_USER_ID#, sysdate, #LM_USER_ID#, sysdate)
	</insert>
	
	<!-- Queries for trigger trg_biud_exp_rcl_brkdn ends-->
	<!-- Queries for trigger TRG_BI_EXP_RCL_HD-->
	<parameterMap id="updAwbRclHdMap" class="java.util.HashMap">
		<parameter property="AWB_NO" jdbcType="VARCHAR"	javaType="java.lang.String" mode="IN" />
		<parameter property="AWB_DATE" jdbcType="VARCHAR" javaType="java.lang.String"	mode="IN" />
		<parameter property="PPK_TYPE" jdbcType="VARCHAR" javaType="java.lang.String"	mode="IN" />
		<parameter property="CARR_CODE" jdbcType="VARCHAR"	javaType="java.lang.String" mode="IN" />
		<parameter property="AWB_DEST" jdbcType="VARCHAR"	javaType="java.lang.String" mode="IN" />
		<parameter property="AWB_CONTENT" jdbcType="VARCHAR"	javaType="java.lang.String" mode="IN" />
		<parameter property="SPL_CODE1" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" />
		<parameter property="SPL_CODE2" jdbcType="VARCHAR" javaType="java.lang.String"	mode="IN" />
		<parameter property="SPL_CODE3" jdbcType="VARCHAR" javaType="java.lang.String"	mode="IN" />
		<parameter property="SPL_CODE4" jdbcType="VARCHAR"	javaType="java.lang.String" mode="IN" />
		<parameter property="SPL_CODE5" jdbcType="VARCHAR" javaType="java.lang.String"	mode="IN" />
		<parameter property="SPL_CODE6" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" />
		<parameter property="SPL_CODE7" jdbcType="VARCHAR" javaType="java.lang.String"	mode="IN" />
		<parameter property="SPL_CODE8" jdbcType="VARCHAR" javaType="java.lang.String"	mode="IN" />
		<parameter property="CR_USER_ID" jdbcType="VARCHAR"	javaType="java.lang.String" mode="IN" />
		<parameter property="ACCPT_MODE" jdbcType="VARCHAR"	javaType="java.lang.String" mode="IN" />
	</parameterMap>
	<procedure id="sqlUpdAwbRclHd" parameterMap="updAwbRclHdMap">
		{ call pkg_exp_acpt.upd_awb_rcl_hd(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)}
	</procedure>
	<update id="sqlUpdExpPreRclHd" parameterClass="java.util.HashMap">
		update exp_pre_rcl_hd
        set rcl_pcs = rcl_pcs + #PCS#,
            rcl_wt = rcl_wt + #WT#,
            TR_TYPE_EVT = 'DUMMY'
        where  pre_rcl_no = #PRE_RCL_NO#
	</update>
	<insert id="sqlInsrtAwbEvent" parameterClass="java.util.HashMap">
		insert into awb_events(awb_no, awb_date, event_id, event_desc, flt_key, flt_date, 
								flt_type, tr_no, uld_key, pcs,wt, cr_user_id, cr_date, lm_user_id, lm_date)
                values (#AWB_NO#, to_date(TRIM(#AWB_DATE#),'DDMONYY'), #EVENT_ID#, (select distinct event_desc
                                                                   from   mast_awb_events
                                                                   where  event_id = #EVENT_ID#), #FLT_KEY#, TO_DATE(#FLT_DATE#,'DDMONYY'),
                         'E', #RCL_NO#, #ULD_KEY#, #PCS#,#WT#, #CR_USER_ID#, sysDate, #LM_USER_ID#, sysdate)
	</insert>
	<update id="sqlUpdBiExpRclHd" parameterClass="java.util.HashMap">
		update exp_rcl_hd set
			TR_TYPE_EVT = #TR_TYPE_EVT#, 
            hcarry_ind = #HCARRY_IND#, 
            rcl_fbl = #RCL_FBL#, aside_accept=#ASIDE_ACCEPT#,
            QCP_IND = #QCP_IND#, brk_down_yn = #BRK_DOWN_YN#,
            sec_check = #SEC_CHECK#, thick_ind = #THICK_IND#, 
            dut_commodity =#DUT_COMMODITY#, direct_ship = #DIRECT_SHIP#,
            rtn_ind = #RTN_IND#, car_ind = #CAR_IND#, wavr_ind=#WAVR_IND#,
            status=#STATUS#, tr_type = #TR_TYPE#,
            uld_key=#ULD_KEY#, awb_no=#AWB_NO#, uld_type=#ULD_TYPE#, flt_no=#FLT_NO#,
            flt_date= TO_DATE(#FLT_DATE#,'DDMONYY'), flt_key=#FLT_KEY#, flt_type='E', 
            ULD_NO=#ULD_NO#, ULD_CARR=#ULD_CARR# 
 	 where rcl_no = #RCL_NO#
	</update>	
	<!-- Queries for trigger TRG_BI_EXP_RCL_HD ends-->
	
	<!--  Queries for trigger TRG_EXP_RCL_SEC_CHK_DTL Starts  Santhosh K -->

	<select id="getBaseCurrency" parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT BASE_CURR  FROM   SYS_PARAM	 
	</select>
	
	<select id="getBillItmMasterDtls" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT UOM, ITM_DESC, REV_IND, CASH_IND, UPD_DESC, UPD_RATE, MIN_CHRG
		FROM   BILL_ITM_MASTER
        WHERE  ITM_CODE = #NEW_SC_ITM_CODE#
        AND    NVL(ITM_CODE_SFX, '**') = NVL(#NEW_SC_ITM_SFX#, '**')
	</select>
	
	<select id="getExpRclHdDtls" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT CUST_NO, AWB_NO, TO_CHAR(AWB_DATE,'DDMONYY') AWB_DATE, ULD_NO, ULD_TYPE, ULD_KEY, ULD_CARR, WAVR_IND, SEC_AGENT_NAME
		FROM   EXP_RCL_HD
        WHERE  RCL_NO = #NEW_RCL_NO#
	</select>
	
	<select id="getCustDtl" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT CODE_DESC FROM   CUST_COMPANY WHERE  CODE = #CUST_NO#
	</select>
	<parameterMap id="getUnitPriceMap" class="java.util.HashMap">
		<parameter property="UNIT_PRICE" jdbcType="VARCHAR" javaType="java.lang.String"	mode="OUT" />
		<parameter property="NEW_SC_ITM_CODE" jdbcType="VARCHAR"	javaType="java.lang.String" mode="IN" />
		<parameter property="NEW_SC_ITM_SFX" jdbcType="VARCHAR" javaType="java.lang.String"	mode="IN" />
		<parameter property="NEW_SC_WT" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" />		
	</parameterMap>
	<procedure id="callPkgGetUnitPrice" parameterMap="getUnitPriceMap">
		{? = call PKG_CALCULATE.GET_UNIT_PRICE(?,?,?)}
	</procedure>	
	
	<select id="getBillChargeDtl" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT NVL(SUM(bil.QTY), 0) QTY, NVL(SUM(bil.CHRG_AMT), 0) CHRG_AMT
        FROM   BILL_CHARGE_DTL bil
        JOIN AWB awb ON UPPER(awb.AWB_NO) = UPPER(bil.AWB_NO) 
		AND UPPER (awb.awb_date) = UPPER (bil.awb_date)		 
        WHERE  bil.AWB_NO = #AWB_NO#
        AND    bil.AWB_DATE = TO_DATE(#AWB_DATE#,'DDMONYY')      
        AND    bil.ITM_CODE = #NEW_SC_ITM_CODE#
        AND    NVL(bil.ITM_CODE_SFX, '***') = NVL(#NEW_SC_ITM_SFX#, '***')
	</select>
	<select id="getBalAmount" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		  select round(#totalAmt#-#billAmt#,1) from dual
	</select>
	<insert id="insertBillChrgDtl" parameterClass="java.util.HashMap">
	INSERT INTO BILL_CHARGE_DTL(
	TR_NO,CUST_NO,AWB_NO,AWB_DATE,
      SRF_NO,RCL_NO,ULD_TYPE,ULD_NO,ULD_CARR,
	ULD_KEY, CURR_CODE,PAID_AMT_CASH,PAID_AMT_CREDIT,BALANCE_AMT,
	ITM_CODE,ITM_CODE_SFX,UOM,STATUS,ITM_DESC,
	REV_IND,STD_IND,CASH_IND,WAVR_IND,WAVR_AMT,
	WAVR_RMK,WAVR_DONE,WAVR_FORM_NO,UPD_DESC_IND,UPD_RATE_IND,
	MIN_CHRG_IND,MAX_CHRG_IND,VOID_IND,QTY,UNIT_PRICE,
	CHRG_AMT,CALC_CHRG,ADJ_AMT,NET_AMT,OVRCHRG_AMT, 
	WT_QTY,ADJ_IND,ADJ_REF_TR_NO,CR_USER_ID, CR_DATE,
	LM_USER_ID,LM_DATE,WAVR_DATE,WAVR_USER_ID,CUST_NAME)
      
      VALUES (
	BILL_CHARGE_DTL_SEQ.NEXTVAL,#CUST_NO#,#AWB_NO#,TO_DATE(#AWB_DATE#,'DDMONYY'),
      NULL,#NEW_RCL_NO#,#ULD_TYPE#,#ULD_NO#,#ULD_CARR#,
	#ULD_KEY#,#LS_CURR#,0,0,NVL(#BAL_AMT#,0),
	#NEW_SC_ITM_CODE#,#NEW_SC_ITM_SFX#,#UOM#,'PENDING',#ITM_DESC#,
      NVL(#REV_IND#,'N'),NVL(#STD_IND#,'N'),NVL(#CASH_IND#,'N'),NVL(#WAVR_IND#,'N'),0,
	NULL, 'N', NULL,NVL(#UPD_DESC#,'N'),NVL(#UPD_RATE#,'N'),
	'N','N','N',#NEW_SC_WT#,NVL(#UNIT_PRICE#,0),
	NVL(#BAL_AMT#,0),0,0,NVL(#BAL_AMT#,0),0,
	0,'N',NULL,#NEW_CR_USER_ID#,sysdate,
	#NEW_LM_USER_ID#,sysdate,NULL,NULL,#SEC_AGENT_NAME#)
	</insert>
	
	<!--  Queries for trigger TRG_EXP_RCL_SEC_CHK_DTL ends -->
	
	<!--  Queries for trigger TRG_EXP_RCL_SEC_CHK_DTL Starts  Santhosh K -->
	
	<update id="updateExpRclHd" parameterClass="java.util.HashMap">
		UPDATE EXP_RCL_HD SET
            RCL_PCS = RCL_PCS + (#NEW_PCS# - #OLD_PCS#),
			 RCL_WT = RCL_WT + (#NEW_NET_WT# - #OLD_NET_WT#)
        WHERE RCL_NO = #NEW_RCL_NO#
	</update>
	<select id="getExpRclHdDtl" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT AWB_NO,to_char(AWB_DATE,'DDMONYY') AWB_DATE,
        FROM   EXP_RCL_HD
       WHERE RCL_NO = #NEW_RCL_NO#
     </select>
     <update id="updateAwb" parameterClass="java.util.HashMap">
		UPDATE AWB SET
             RCL_PPK_PCS = RCL_PPK_PCS + (#NEW_PCS# - #OLD_PCS#),
			 RCL_PPK_WT = RCL_PPK_WT + (#NEW_NET_WT# - #OLD_NET_WT#),			 	
			 RCL_PCS = RCL_PCS + (#NEW_PCS# - #OLD_PCS#),
			 RCL_WT = RCL_WT + (#NEW_NET_WT# - #OLD_NET_WT#)	
         WHERE  AWB_NO = #AWB_NO#
         AND    AWB_DATE = TO_DATE(#AWB_DATE#, 'DDMONYY')         
	</update>
	   <update id="updateExpUldAwb" parameterClass="java.util.HashMap">
		UPDATE EXP_ULD_AWB SET
             PCS = #NEW_PCS#,
			 WT = #NEW_NET_WT#
         WHERE ULD_KEY = #ULD_KEY#
         AND   AWB_NO = #AWB_NO#
         AND   AWB_DATE = TO_DATE(#AWB_DATE#,'DDMONYY')
	</update>
	<update id="updateAwbInventory" parameterClass="java.util.HashMap">
	UPDATE AWB_INVENTORY
            SET LOCN_PCS = #NEW_PCS#,
				LOCN_WT = #NEW_NET_WT#,
                REF_TR_NO = #NEW_RCL_NO#,
                REF_TR_TYPE = 'RC',
                REF_TR_DATE = TO_DATE(#NEW_CR_DATE#, 'DDMONYY'),
                REF_DOC_LINE_NO = #NEW_DOC_LINE_NO#,
                REF_LOC_FROM = #NEW_LOC_CODE#,
                REF_TR_EVENT = 'RC',
                REF_RMK = NULL,
                REF_MOV_FROM = #NEW_WH_DEST#,
				LM_DATE = sysdate,
				LM_USER_ID = #NEW_LM_USER_ID#
         WHERE AWB_NO = #AWB_NO#
         AND   AWB_DATE = TO_DATE(#AWB_DATE#,'DDMONYY')
         AND   ((#NEW_LOC_CODE# IS NOT NULL AND LOC_CODE = #NEW_LOC_CODE#) OR #NEW_LOC_CODE# IS NULL)
         AND   ULD_KEY = #NEW_ULD_KEY#
         </update>
	<!--  Queries for trigger TRG_EXP_RCL_SEC_CHK_DTL Ends  -->
<!-- Queries for trigger TRG_BI_EXP_RTN_DTL -->
	 <select id="sqlGetBiExpRtn" parameterClass="java.lang.String" resultClass="java.util.HashMap">
		select t3.rcl_no RCL_NO, t2.ppk_type PPK_TYPE , t2.car_ind CAR_YN, t2.accpt_mode  ACCEPT_MODE       
        from   exp_rtn_hd t1, exp_rcl_hd t2,exp_rtn_rcl t3
        where  t1.rtn_no = t3.rtn_no and t3.rcl_no = t2.rcl_no
        and t1.srf_no = #SRF_NO#
     </select>
   <update id="sqlUpdExpRcl" parameterClass="java.util.HashMap">
  	 	update exp_rcl_hd
       		set rtn_pcs = rtn_pcs + #PCS#,
           		rtn_wt = rtn_wt + #WT#,
           		rtn_ind = 'Y'
        where  rcl_no = #RCL_NO#
   </update>
   <delete id="sqlDelBiExpUldAWB" parameterClass="java.util.HashMap">
  	 delete from exp_uld_awb
	where  rcl_no = #RCL_NO#
	and    uld_key = #ULD_KEY#
   </delete>
   <update id="sqlUpdBiExpAWB" parameterClass="java.util.HashMap">
  	  update awb
            set rcl_bulk_pcs = decode(#PPK_TYPE#, 'B', rcl_bulk_pcs - to_number(#PCS#), rcl_bulk_pcs),
                rcl_bulk_wt = decode(#PPK_TYPE#, 'B', rcl_bulk_wt - to_number(#WT#), rcl_bulk_wt),
                rcl_ppk_pcs = decode(#PPK_TYPE#, 'P', rcl_ppk_pcs - to_number(#PCS#), rcl_ppk_pcs),
                rcl_ppk_wt = decode(#PPK_TYPE#, 'P', rcl_ppk_wt - to_number(#WT#), rcl_ppk_wt),
                rcl_mix_pcs = decode(#PPK_TYPE#, 'M', rcl_mix_pcs - to_number(#PCS#), rcl_mix_pcs),
                rcl_mix_wt = decode(#PPK_TYPE#, 'M', rcl_mix_wt - to_number(#WT#), rcl_mix_wt),
                rtn_pcs = rtn_pcs + to_number(#PCS#),
                rtn_wt = rtn_wt + to_number(#WT#)
            where  awb_no = #AWB_NO#
            and    awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')
    </update>
    
    <select id="sqlGetAwbPcWt" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
           select
                decode(#PPK_TYPE#, 'B', rcl_bulk_pcs - to_number(#PCS#), rcl_bulk_pcs) as RCL_BULK_PCS,
                decode(#PPK_TYPE#, 'B', rcl_bulk_wt - to_number(#WT#), rcl_bulk_wt) as RCL_BULK_WT,
                decode(#PPK_TYPE#, 'P', rcl_ppk_pcs - to_number(#PCS#), rcl_ppk_pcs) as RCL_PPK_PCS,
                decode(#PPK_TYPE#, 'P', rcl_ppk_wt - to_number(#WT#), rcl_ppk_wt) as RCL_PPK_WT,
                decode(#PPK_TYPE#, 'M', rcl_mix_pcs - to_number(#PCS#), rcl_mix_pcs) as RCL_MIX_PCS,
                decode(#PPK_TYPE#, 'M', rcl_mix_wt - to_number(#WT#), rcl_mix_wt) as RCL_MIX_WT,
                rtn_pcs = rtn_pcs + to_number(#PCS#),
                rtn_wt = rtn_wt + to_number(#WT#)
            from awb  
            where  awb_no = #AWB_NO#
            and    awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')
    </select>
    
    <update id="sqlUpdExpRtnRclDtls" parameterClass="java.util.HashMap">
  	 	update exp_rcl_dtl set 
  	 			rtn_pcs = rtn_pcs + #PCS#,
           		rtn_wt = rtn_wt + #WT#
        where  
        	 rcl_no = #RCL_NO#          
             and    nvl(loc_code, '***') = nvl(#LOC_CODE#, '***')
             and    nvl(uld_key, '***') = nvl(#ULD_KEY#, '***')
             and    nvl(lsp_no, 000) = nvl(#LSP_NO#, 000)
   </update>
          
    <update id="sqlUpdBiExpAWBInventory" parameterClass="java.util.HashMap">
   		 update awb_inventory
            set locn_pcs = locn_pcs - #PCS#,
                locn_wt = locn_wt -  #WT#,
                bulk_wt = decode(#PPK_TYPE#, 'B',(bulk_wt -  to_number(#WT#)), bulk_wt),
                bup_wt = decode(#PPK_TYPE#, 'M',(bup_wt -  to_number(#WT#)), 'P',(bup_wt -  to_number(#WT#)), bup_wt),
                lm_user_id = #LM_USER_ID#,
                lm_date = sysdate,
                ref_tr_no = #RTN_NO#,
                ref_tr_type = 'RT',
                ref_tr_date = sysdate,
                ref_doc_line_no = #DOC_LINE_NO#,
                ref_loc_from = #LOC_CODE#,
                ref_tr_event = 'RT',
                ref_rmk = #RMK#,              
                ref_awb_event = decode(#PPK_TYPE#, 'B','CRBULK','P','CRBUP','M','CRMIX')
            where  awb_no = #AWB_NO#
            and    awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')            
            and    nvl(loc_code, '***') = nvl(#LOC_CODE#, '***')
            and    nvl(uld_key, '***') = nvl(#ULD_KEY#, '***')
            and    nvl(lsp_no, 000) = nvl(#LSP_NO#, 000)
    </update>
    <delete id="sqlDelBiExpAWBInventory" parameterClass="java.util.HashMap">   
    	delete from awb_inventory 
    	where locn_pcs = 0 
    	and awb_no = #AWB_NO# and awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')
    	and    nvl(loc_code, '***') = nvl(#LOC_CODE#, '***')
        and    nvl(uld_key, '***') = nvl(#ULD_KEY#, '***')
        and    nvl(lsp_no, 000) = nvl(#LSP_NO#, 000)
    </delete>
    <select id="sqlGetBiExpRclBrkDwn" parameterClass="java.lang.String" resultClass="java.util.HashMap">
    	select AWB_NO,TO_CHAR(AWB_DATE,'DDMONYY') AWB_DATE,PCS,WEIGHT as "WT" from exp_rcl_brkdn where  rcl_no = #RCL_NO#
    </select>
    <select id="sqlGetUldRelHd" parameterClass="java.lang.String" resultClass="java.lang.String">
    	select agent_cust_no	            
	            from   uld_rel_hd
	            where  tr_no = (select max(to_number(b.tr_no))
	                            from   uld_rel_dtl b
	                            where  b.uld_key = #ULD_KEY#
	                            and    b.status = 'RETURNED')
    </select>
    <select id="sqlGetServiceErrLog" parameterClass="java.util.HashMap" resultClass="java.lang.String">
    	select org_owned_inv
	            from   service_err_log
	            where  tr_no = #RCL_NO# and    uld_key = #ULD_KEY#
    </select>
    <update id="sqlUpdUldInventory" parameterClass="java.util.HashMap">
    	update uld_inventory
            set cfm_status = decode (#INV_CHK#,'Y', decode (nvl (length (#AGENT_CUST_NO#), 0), 0, 'CONFIRMED', 'RELEASED'),'N', 'RELEASED'),
                lm_user_id = #CR_USER_ID#,
                lm_date = sysdate,
                carr_code = null,
                flt_no = null,
                flt_date = null,
                flt_key = null,
                flt_type = null,
                agent_inv = decode (#INV_CHK#, 'Y', decode (nvl (length (#AGENT_CUST_NO#), 0), 0, 'N', 'Y'), 'N', 'Y'),
                owned_inv = decode (#INV_CHK#, 'Y', decode (nvl (length (#AGENT_CUST_NO#), 0), 0, 'Y', 'N'), 'N', 'N'),                
                loc_code = decode (#INV_CHK#,'Y', decode (nvl (length (#AGENT_CUST_NO#), 0), 0, loc_code, null),'N', null),
                agent_id = #AGENT_CUST_NO#,
                ref_tr_no = #RTN_NO#,
                ref_tr_type = 'RT',
                ref_tr_date = TO_DATE(#CR_DATE#,'DDMONYY'),
                ref_in_carr = null,
                ref_out_carr = null,
                ref_doc_line_no = #DOC_LINE_NO#,
                ref_loc_from = #LOC_CODE#,
                ref_tr_event = 'RT',
                ref_rmk = #RMK#,
                TR_TYPE=''   
                <isEqual property="INV_CHK" compareValue="Y">		
				 ,ENTRY_TIME = sysdate
				</isEqual>             
            where  uld_key = #ULD_KEY#
    </update>
    <update id="sqlUpdRelDtl" parameterClass="java.lang.String">
    	update uld_rel_dtl a
            set a.status = 'RELEASED',
                a.ret_date = null,
                a.ret_user = null
            where  a.uld_key = #ULD_KEY#
            and    a.status = 'RETURNED'
            and    a.tr_no in (select max(to_number(b.tr_no))
                              from   uld_rel_dtl b
                              where  b.uld_key = #ULD_KEY#
                              and    b.status = 'RETURNED')
    </update>
	<!-- Queries for trigger TRG_BI_EXP_RTN_DTL ends-->
	
	<!-- Queries for trigger trg_exp_rcl_hd_void -->
	<select id="sqlGetExpRclDtlVoid" parameterClass="java.lang.String" resultClass="java.util.HashMap">
		select loc_code, pcs, net_wt, uld_key, lm_user_id, TO_CHAR(lm_date,'DDMONYY') LM_DATE, doc_line_no, lsp_no
        	from   exp_rcl_dtl
        	where  rcl_no = #RCL_NO#
    </select>
    <select id="sqlGetExpRclBrkdnVoid" parameterClass="java.lang.String" resultClass="java.util.HashMap">
		select awb_no, TO_CHAR(awb_date,'DDMONYY') AWB_DATE, NVL(pcs,0) "PCS", NVL(weight,0) "WT", lm_user_id, TO_CHAR(lm_date,'DDMONYY') LM_DATE
       		 from   exp_rcl_brkdn
      	 	 where  rcl_no = #RCL_NO#
    </select>
    <select id="sqlgetexprclbrkndtl" parameterClass="java.lang.String" resultClass="java.util.HashMap">
    	select awb_no, TO_CHAR(awb_date,'DDMONYY') AWB_DATE from   exp_rcl_brkdn where  rcl_no = #RCL_NO#
       		
    </select>
    <select id="sqlGetAwbInvExpRclVoid" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select inv.seq_no,inv.locn_pcs as LOC_PCS, inv.locn_wt as LOC_WT
        from   awb_inventory inv
       	JOIN AWB awb ON UPPER(awb.AWB_NO) = UPPER(inv.AWB_NO) 
  		AND UPPER (awb.awb_date) = UPPER (inv.awb_date)  		       
        where  inv.awb_no = #AWB_NO#
        and    inv.awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')        
        and    inv.flt_key is null        
        order by strg_date desc
    </select>
    <delete id="sqlDelExpUldAwbVoid" parameterClass="java.lang.String">
    	delete from exp_uld_awb where  rcl_no = #RCL_NO#
    </delete>
    <delete id="sqlDelBillChrgDtlVoid" parameterClass="java.lang.String">
    	delete from bill_charge_dtl
        where  rcl_no = #RCL_NO# and status = 'PENDING'
    </delete>
    <update id="sqlUpdAwbBulkPcsWt" parameterClass="java.util.HashMap">
    	update awb
	      		set rcl_bulk_pcs = NVL(#PCS#,0),
        			rcl_bulk_wt = NVL(#WT#,0),
        		   	rcl_pcs = NVL(#RCL_PCS#,rcl_pcs),
			       	rcl_wt = NVL(#RCL_WT#,rcl_wt)			    
    	  		where  awb_no = #AWB_NO#
            		and    awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')            		
    </update>
    <update id="sqlUpdAwbPpkPcsWt" parameterClass="java.util.HashMap">
   	 update awb
            set rcl_ppk_pcs = NVL(#PCS#,0),
                rcl_ppk_wt = NVL(#WT#,0),                
		       rcl_pcs = NVL(#RCL_PCS#,rcl_pcs),
		       rcl_wt = NVL(#RCL_WT#,rcl_wt)		       
            where  awb_no = #AWB_NO#
            and    awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')            
    </update>
    <update id="sqlUpdAwbMixPcsWt" parameterClass="java.util.HashMap">
   	 update awb
            set rcl_mix_pcs = NVL(#PCS#,0),
                rcl_mix_wt = NVL(#WT#,0),                
		       	rcl_pcs = NVL(#RCL_PCS#,rcl_pcs),
		       	rcl_wt = NVL(#RCL_WT#,rcl_wt)		       
            where  awb_no = #AWB_NO#
            and    awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')            
    </update>
    <select id="sqlGetBalPcsExpRclDtl" parameterClass="java.lang.String" resultClass="java.util.HashMap"> 
    	select nvl(sum(pcs), 0) as "BAL_PCS", nvl(sum(net_wt), 0) as "BAL_WT"                   
                    from   exp_rcl_dtl
                    where  rcl_no = #RCL_NO#
    </select>
    <update id="sqlUpdAwbInvLocPcsWt" parameterClass="java.util.HashMap">
    update awb_inventory
						set locn_pcs = locn_pcs - NVL(#PCS#,0),
						    locn_wt = locn_wt - NVL(#WT#,0),
						    ref_tr_no = #RCL_NO#,
						    ref_tr_type = 'RC',
						    ref_tr_date = TO_DATE(#LM_DATE#,'DDMONYY'),						 
						    ref_loc_from = loc_code,
						    ref_tr_event = 'VRCL',
						    ref_rmk = null
						where  seq_no = #SEQ_NO#    
    </update>
    <delete id="sqlDelAwbInvLocpcs">
    delete from awb_inventory where  locn_pcs = 0 and locn_wt = 0
    </delete>
    <select id="sqlGetAwbInvSumLocPcs" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
    	select nvl(sum(inv.locn_pcs), 0) as "ADJ_PCS", nvl(sum(inv.locn_wt), 0) as "ADJ_WT"                  
                    from   awb_inventory inv
                    JOIN AWB awb ON UPPER(awb.AWB_NO) = UPPER(inv.AWB_NO) 
			  		AND UPPER (awb.awb_date) = UPPER (inv.awb_date)			  		 
                    where  inv.awb_no = #AWB_NO#
			        and    inv.awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')				          
			        and    inv.flt_key is null
					and (inv.locn_pcs = 0 or inv.locn_wt = 0)
    </select>
    <select id="sqlGetSeqnoAwbInv" parameterClass="java.util.HashMap" resultClass="java.lang.String">
    	select seq_no					
					from (select inv.seq_no	                    
	                    from   awb_inventory inv
	                    JOIN AWB awb ON UPPER(awb.AWB_NO) = UPPER(inv.AWB_NO) 
				  		AND UPPER (awb.awb_date) = UPPER (inv.awb_date)				  		 
	                    where  inv.awb_no = #AWB_NO#
				        and    inv.awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')					        
				       	and    inv.flt_key is null
						and inv.locn_pcs != 0 and inv.locn_wt != 0
						order by inv.seq_no desc) a
					where rownum = 1
	</select>
	<update id="sqlUpdAwbInvLocPcs" parameterClass="java.util.HashMap">
		update awb_inventory 
	        set locn_pcs = locn_pcs + #PCS#,
	        	locn_wt = locn_wt + #WT#
			where seq_no = #SEQ_NO#
	</update>
	<delete id="sqlDelAwbInvLocn" parameterClass="java.util.HashMap">
		delete from  awb_inventory inv
                    where  inv.awb_no = #AWB_NO#
				    and    inv.awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')				   	       
			        and    inv.flt_key is null
					and   (inv.locn_pcs = 0 or inv.locn_wt = 0)
					and exists (select null
			        from   awb
			        where  awb_no = inv.awb_no
			        and    awb_date = inv.awb_date
			        )  
	</delete>
	<delete id="sqlDelAwbInvUld" parameterClass="java.lang.String">
		delete from awb_inventory
	                where  uld_key = #ULD_KEY#
	</delete>
	<select id="sqlGetAgentUldRelHd" parameterClass="java.lang.String" resultClass="java.lang.String">
		select agent_cust_no
	          from   uld_rel_hd
	          where  tr_no = (select max (to_number(b.tr_no))
	                                    from   uld_rel_dtl b
	                                    where  b.uld_key = #ULD_KEY#)   
	</select>
	<update id="sqlUpdUldInvVoid" parameterClass="java.util.HashMap">
		update uld_inventory
                            set owned_inv = 'Y',
                                agent_inv = 'N',
                                cfm_status = 'CONFIRMED',
                                flt_no = null,
                                flt_date = null,
                                flt_key = null,
                                flt_type = null,
                                empty_flg = 'Y',
                                lm_user_id = #VOID_USER_ID#,
                                ref_tr_no = #RCL_NO#,
                                ref_tr_type = 'RC',
                                ref_tr_date = TO_DATE(#VOID_DATE#,'DDMONYY'),
                                ref_in_carr = null,
                                ref_out_carr = null,
                                ref_doc_line_no = #DOC_LINE_NO#,
                                ref_loc_from = #LOC_CODE#,
                                ref_tr_event = 'VRCL',
                                ref_rmk = nvl (#RMK#, 'INSERTED FROM VOID RCL3'),
                                 PPK_IND = 'N',
                            	MIX_PPK_IND = 'N',
                            	 gross_weight = 0,
                            	tare_weight = 0,
                            	first_wt = null,second_wt=null,third_wt=null,MAN_WT_IND='N',MAN_WT_IND2 = 'N',MAN_WT_IND3 = 'N'
                            where  uld_key = #ULD_KEY#
   </update>
   <update id="sqlUpdUldInvChk" parameterClass="java.util.HashMap">
  	 update uld_inventory
         set cfm_status = decode (#INV_CHK#,'Y', 'CONFIRMED','RELEASED'),
                            carr_code = null,
                            flt_no = null,
                            flt_date = null,
                            flt_key = null,
                            flt_type = null,
                            agent_inv = decode (#INV_CHK#, 'Y','N', 'Y'),
                            owned_inv = decode (#INV_CHK#, 'Y', 'Y', 'N'),                          
                            loc_code = decode (#INV_CHK#,'Y', loc_code,null),
                            contr_code = null,
                            gross_weight = 0,
                            tare_weight = 0,
                            lm_user_id = #VOID_USER_ID#,
                            lm_date = NVL(TO_DATE(#VOID_DATE#,'DDMONYY'),sysdate),                            
                            agent_id = decode (#INV_CHK#,'Y', null,#AGENT_CUST_NO#),
                            ref_tr_no = #RCL_NO#,
                            ref_tr_type = 'RC',
                            ref_tr_date = TO_DATE(#LM_DATE#,'DDMONYY'),
                            ref_in_carr = null,
                            ref_out_carr = null,
                            ref_doc_line_no = #DOC_LINE_NO#,
                            ref_loc_from = #LOC_CODE#,
                            ref_tr_event = 'VRCL',
                            ref_rmk = nvl (#RMK#, 'INSERTED FROM VOID RCL'),
                            PPK_IND = 'N',
                            MIX_PPK_IND = 'N',
                            DIRECT_TOW='',
                            HANDLING_MODE='',
                            first_wt = null,second_wt=null,third_wt=null,MAN_WT_IND='N',MAN_WT_IND2 = 'N',MAN_WT_IND3 = 'N'  
                            <isEqual property="INV_CHK" compareValue="Y">		
 								,ENTRY_TIME = sysdate
							</isEqual>
                        where  uld_key = #ULD_KEY#
   </update>
   <update id="sqlUpdRelDtls" parameterClass="java.lang.String">
   update uld_rel_dtl a
            set a.status = 'RELEASED',
            a.ret_date = null,
            a.ret_user = null
    where  a.uld_key = #ULD_KEY#
            and    a.status = 'RETURNED'
            and    a.tr_no in (select max (to_number(b.tr_no))
                                from   uld_rel_dtl b
                                where  b.uld_key = #ULD_KEY#)
   </update>
   <insert id="sqlInsEdiPerfoTest" parameterClass="java.util.HashMap">
   		insert into edi_perfo_test (mm)
					select 'inside void RCL......'||#RCL_NO#||'/'||uld_key||'/'||owned_inv||'/'||agent_inv||'/'||
						   cfm_status||'...'||AGENT_ID||'...'||to_char(CURRENT_TIMESTAMP, 'ddmonyy hh24:mi:SS:FF3')
					from uld_inventory where  uld_key = #ULD_KEY#					  
   </insert>
   <update id="sqlUpdExpPreRclHdVoid" parameterClass="java.util.HashMap">
  	  update exp_pre_rcl_hd
            set rcl_pcs = rcl_pcs - #RCL_PCS#,
                rcl_wt = rcl_wt - #RCL_WT#,
                VOID_DATE = NULL,
                VOID_USER_ID = NULL,
                VOID_RMK = NULL,
                STATUS = 'SUBMITTED'
            where  pre_rcl_no = #PRE_RCL_NO#  
   </update>
   <update id="sqlUpdPreRclNumExpRclHd" parameterClass="java.util.HashMap">
   		UPDATE EXP_RCL_HD SET PRE_RCL_NO = NULL WHERE RCL_NO = #RCL_NO#
   </update>
   
   <update id="sqlUpdPreRclNumExpRclDtl" parameterClass="java.util.HashMap">
   		UPDATE EXP_RCL_DTL SET PRE_RCL_NO = NULL   WHERE RCL_NO = #RCL_NO#
   </update>
   
   <delete id="sqlDelAwb" parameterClass="java.util.HashMap">
   delete from awb
    where  awb_no = #AWB_NO#
    and    awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')
    and pcs = 0
   </delete>
	<!-- Queries for trigger trg_exp_rcl_hd_void ends-->
	
	<!-- Queries for trigger TRG_EXP_PRE_RCL_HD_BEF_UPD-->
	<update id="sqlUpdPreRclHdStatus" parameterClass="java.util.HashMap">
		update EXP_PRE_RCL_HD set status = #STATUS# where pre_rcl_no = #PRE_RCL_NO#
	</update>	
	<!-- Queries for trigger TRG_EXP_PRE_RCL_HD_BEF_UPD ends-->

	<!-- Query for trigger TRG_EXP_RCL_DTL_BD Starts :: RANJITH -->
	<insert id="sqlInsertExpRclDtlDel" parameterClass="java.util.HashMap">
		insert into exp_Rcl_dtl_del
        (RCL_NO,DOC_LINE_NO,PPK_TYPE,ULD_TYPE,ULD_NO,ULD_CARR,
        ULD_KEY,PRE_RCL_NO,PDOC_LINE_LNO,CONTENT,WH_DEST,LOC_CODE,
        LSP_NO,BT_NO,PCS,NET_WT,GROSS_WT,TARE_WT,
    	FSCALE_WT,CONTR_CODE,RTN_PCS,RTN_WT,PRE_MANIFEST,PRE_MAN_PCS,
    	PRE_MAN_WT,SHP_CHK_PCS,VOID_PCS,VOID_WT,CAR_IND,BLDUP_COMPLETE,
    	TR_TYPE,TR_STATUS,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE
   		) values
   		(#OLD_RCL_NO#,#OLD_DOC_LINE_NO#,#OLD_PPK_TYPE#,#OLD_ULD_TYPE#,#OLD_ULD_NO#,#OLD_ULD_CARR#,
    	#OLD_ULD_KEY#,#OLD_PRE_RCL_NO#,#OLD_PDOC_LINE_LNO#,#OLD_CONTENT#,#OLD_LOC_CODE#,
    	#OLD_LSP_NO#,#OLD_BT_NO#,#OLD_PCS#,#OLD_NET_WT#,#OLD_GROSS_WT#,#OLD_TARE_WT#,
    	#OLD_FSCALE_WT#,#OLD_CONTR_CODE#,#OLD_RTN_PCS#,#OLD_RTN_WT#,NVL(#OLD_PRE_MANIFEST#,'N'),#OLD_PRE_MAN_PCS#,
    	#OLD_PRE_MAN_WT#,#OLD_SHP_CHK_PCS#,#OLD_VOID_PCS#,#OLD_VOID_WT#,NVL(#OLD_CAR_IND#,'N'),NVL(#OLD_BLDUP_COMPLETE#,'N'),
    	NVL(#OLD_TR_TYPE#,'RC'),NVL(#OLD_TR_STATUS#,'N'),#OLD_CR_USER_ID#,NVL(TO_DATE(#OLD_CR_DATE#,'DDMONYY'),sysdate),#OLD_LM_USER_ID#,NVL(TO_DATE(#OLD_LM_DATE#,'DDMONYY'),sysdate))                
	</insert>
	<!-- Query for trigger TRG_EXP_RCL_DTL_BD ends :: RANJITH -->
 <!-- Query  for trigger TRG_EXP_CAR_SEC Starts :: RANJITH -->
    <select id="ExpCarSecGetAwbDateMap" parameterClass="java.lang.String" resultClass="java.lang.String">
    	select NVL(to_char(awb_date,'DDMONYY'),to_char(sysdate,'DDMONYY')) from awb where awb_no = #awb_no# and awb_closed_yn = 'N' and rownum = 1
    </select>
    
    <!-- Queries  for trigger TRG_EXP_AWB_REV_CHARGES_INS Ends :: RANJITH -->
	<select id="sqlExpAwbRevChargesProcValues" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	 		select shipper_code LS_SHIPPER,
	 		pcs LI_PCS, 
	 		shpr_name LS_SNAME
            from   exp_car
            where  awb_no = #NEW_AWB_NO#
            and    awb_date = TO_DATE(#NEW_AWB_DATE#,'DDMONYY')
    </select>
    
    <parameterMap id="trgExpAwbRevChargesIns" class="map" >
		<parameter property="NEW_AWB_NO" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="NEW_AWB_DATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="LS_SHIPPER" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="LI_PCS" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="NEW_CR_USER_ID" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="NEW_CR_DATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="NEW_LM_USER_ID" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="NEW_LM_DATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="NEW_LS_SNAME" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="NEW_ITEM_CODE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="NEW_ITEM_CODE_SFX" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="NEW_PREPAID_AMT" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	</parameterMap>

	<procedure id="sqlExpAwbRevChargesInsPkgBilling" parameterMap="trgExpAwbRevChargesIns" >
		{call PKG_BILLING.UPD_REV_CHRG_DTL(?,?,?,?,?,?,?,?,?,?,?,?)}
	</procedure>
	
	<!-- Queries  for trigger TRG_EXP_CAR_AINS_UP Starts :: RANJITH -->
	<select id="sqlExpCarAinsSelFltDtl" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	  	select flt_key V_FLT_KEY,
	  		   TO_CHAR(flt_date, 'DDMONYY') V_FLT_DATE
        from exp_pmanifest_awb
        where awb_no = #NEW_AWB_NO#
          	and awb_date = TO_DATE(#NEW_AWB_DATE#, 'DDMONYY')
	</select>

	<update id="sqlExpCarAinsUpdFltDtl" parameterClass="java.util.HashMap">
		update awb set awb_rmk = #NEW_RMK#
		where awb_no = #NEW_AWB_NO#
		and awb_date = TO_DATE(#NEW_AWB_DATE#, 'DDMONYY')
	</update>

	<insert id="sqlExpCarAinsInsFltDtl" parameterClass="java.util.HashMap">
	 insert into awb_rmk
      (SEQ_NO, AWB_NO, AWB_DATE,  
       FLT_KEY, FLT_DATE, FLT_TYPE, RMK_TYPE, RMK, 
       CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE) 
      values
      (awb_rmk_seq.nextval, #NEW_AWB_NO#, TO_DATE(TRIM(#NEW_AWB_DATE#),'DDMONYY'),
       #V_FLT_KEY#, TO_DATE(#V_FLT_DATE#, 'DDMONYY'), 'E','EXP_CAR',#NEW_RMK#,
       #NEW_LM_USER_ID#, sysdate, #NEW_LM_USER_ID#, sysdate)
	</insert>
	<!-- Queries  for trigger TRG_EXP_CAR_AINS_UP Ends :: RANJITH -->
	
	<!-- Queries  for trigger BU_EXP_DOC_RECD Starts :: RANJITH -->
	<parameterMap id="trgBuExpDocRecd" class="map">
		<parameter property="NEW_AWB_NO" jdbcType="VARCHAR"
			javaType="java.lang.String" mode="IN" />
		<parameter property="NEW_AWB_DATE" jdbcType="VARCHAR"
			javaType="java.lang.String" mode="IN" />
		<parameter property="NEW_NO_HAWB_RECD" jdbcType="VARCHAR"
			javaType="java.lang.String" mode="IN" />
		<parameter property="NEW_ULD_KEY" jdbcType="VARCHAR"
			javaType="java.lang.String" mode="IN" />
		<parameter property="NEW_AGEN_ID" jdbcType="VARCHAR"
			javaType="java.lang.String" mode="IN" />
		<parameter property="NEW_AGENT_NAME" jdbcType="VARCHAR"
			javaType="java.lang.String" mode="IN" />
		<parameter property="NEW_WV_CHARGE_YN" jdbcType="VARCHAR"
			javaType="java.lang.String" mode="IN" />
		<parameter property="NEW_RECD_STATUS" jdbcType="VARCHAR"
			javaType="java.lang.String" mode="IN" />
		<parameter property="NEW_LM_USER_ID" jdbcType="VARCHAR"
			javaType="java.lang.String" mode="IN" />
	</parameterMap>

	<procedure id="sqlExpAwbRevChargesInsPkgBilling1"
		parameterMap="trgBuExpDocRecd">
		{call PKG_EXP_BILLING.DOC_CHARGE(?)}
	</procedure>
	
	<insert id="sqlBuExpDocRecdLog" parameterClass="java.util.HashMap">
		insert into exp_doc_recd_log
               (awb_no, 
               awb_date, 
               recd_date, 
               recd_status, 
               no_hawb_recd)
        values (#NEW_AWB_NO#,
         		TO_DATE(#NEW_AWB_DATE#,'DDMONYY'),
         		TO_DATE(#OLD_RECD_DATE#,'ddMONYY hh24:mi'),
         		#OLD_RECD_STATUS#,
         		NVL(#OLD_NO_HAWB_RECD#,0)) 
	</insert>
	
	<insert id="sqlBuExpDocAwbEvents" parameterClass="java.util.HashMap">
		  insert into awb_events
    (AWB_NO, AWB_DATE,EVENT_ID,
     EVENT_DESC,
     FLT_KEY, FLT_DATE, FLT_TYPE, TR_NO,
     ULD_KEY, PCS, WT,
     CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE)
     values
     (#NEW_AWB_NO#, TO_DATE(TRIM(#NEW_AWB_DATE#),'DDMONYY'),'DRECVD',
      (select event_desc from mast_awb_events where event_id = 'DRECVD'),
       null, null,'E',#NEW_AWB_NO#,
       #NEW_ULD_KEY#, null, null,
       #NEW_LM_USER_ID#,sysdate,#NEW_LM_USER_ID#, sysdate
     )          
	</insert>
	
	<!-- Queries  for trigger BU_EXP_DOC_RECD Starts :: RANJITH -->
	
	<!-- Queries  for trigger trg_biud_exp_car Starts :: RANJITH -->
	<select id="sqlBiudExpCarSplCodes" parameterClass="java.lang.String" resultClass="java.util.HashMap">
	  	select column_value COLUMN_VALUE
				  from   table(pkg_common.inlist(#PARAM#))
				  where  column_value is not null
	</select>
		
	<parameterMap id="trgBiudExpCarAwbEvents" class="map" >
		<parameter property="AWB_NO" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="AWB_DATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="MODE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="PCS" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="WT" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="LM_USER_ID" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="LM_DATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	</parameterMap>
	
		<procedure id="pkgExpEvent_awbEvent" parameterMap="trgBiudExpCarAwbEvents" >
		{call PKG_EXP_EVENT.AWB_EVENT(?)}
	</procedure>
	
	<update id="sqlBiudExpCarUpdateExpSid" parameterClass="java.util.HashMap">
		    update exp_sid
            set status = 'PROCESSED'
            where  awb_no = #NEW_AWB_NO#
            and    awb_date = TO_DATE(#NEW_AWB_DATE#, 'DDMONYY')       
	</update>
	
	
	
	<!-- Queries  for trigger trg_biud_exp_car Starts :: RANJITH -->
	<!-- Queries for the Package PKG_DHL_DIRECT_TOW -->
	<select id="sqlPkgDhlFetchImpCarAwb" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select CATALOG, AWB_PCS, AWB_WT			
			from imp_car_awb 
			where awb_no = #AWB_NO# and awb_date = TO_DATE(#AWB_DATE#,'DDMONYY') and ECT_HANDLER in ('DHL', 'DH*')
	</select>
	<select id="sqlPkgDhlFetchImpCarShpCount" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		select count(1) 
		from imp_car_shp 
		where flt_key = #FLT_KEY# and flt_date = TO_DATE(#FLT_DATE#,'DDMONYY') and awb_no = #AWB_NO# and CAR_CREATED = 'Y'
	</select>
	<select id="sqlPkgDhlFetchImpSrf" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		select count(1) 
		from imp_srf s
		where ((<![CDATA[SRF_EXPY_DATE > sysdate ]]> and s.STATUS ='ISSUED') or s.STATUS ='POSTED' 
				  	  or s.SRF_NO in (select SRF_NO from IMP_CDIF where VOID_USER is null ))
			  and exists (select null from imp_srf_flt where flt_key = #FLT_KEY# and flt_date = TO_DATE(#FLT_DATE#,'DDMONYY') and srf_no = s.srf_no)
			  and awb_no = #AWB_NO#
	</select>
	<select id="sqlPkgDhlFetchCmsRules" resultClass="java.lang.String">
		select rule_value from cmsrules where rule_code = 'SRF_EXP_TIME'
	</select>
	<select id="sqlPkgDhlFetchImpCarShp" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select CARR_CODE, MANIFEST_PCS, MANIFEST_WT 
			from imp_car_shp where flt_key = #FLT_KEY# and flt_date = TO_DATE(#FLT_DATE#,'DDMONYY') and awb_no = #AWB_NO#
	</select>	
	<update id="sqlPkgDhlUpdImpCarShp" parameterClass="java.util.HashMap">
		update imp_car_shp set recd_pcs = manifest_pcs, recd_wt = manifest_wt
			where flt_key = #FLT_KEY# and flt_date = TO_DATE(#FLT_DATE#,'DDMONYY') and awb_no = #AWB_NO# and cir_proc_user is null
	</update>
	<insert id="sqlPkgDhlInsImpSrf" parameterClass="java.util.HashMap">
		INSERT INTO IMP_SRF ( AWB_NO, AWB_DATE, SRF_NO, DOC_LINE_NO, SRF_DATE, SRF_EXPY_DATE, SRF_PRT_CODE,
			COLL_NAME, COLL_HKID, REPEAT_YN, SRF_MODE, CARR_CODE, SRF_PCS, SRF_WT, ISSUE_USER, STATUS, TR_STATUS, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE) 
			VALUES (#AWB_NO#, NVL(TO_DATE(#AWB_DATE#,'DDMONYY'),sysdate), #SRF_NO#, 1, sysdate, sysdate + #EXP_HR#/24,(select code_desc from mast_prt_dtl where prt_type = #SRF_PRT_CODE# and rownum = 1),
			'A', 'A', 'N', 'CSH', #CARR_CODE#, #PCS#, #WT#, #LM_USER_ID#, 'ISSUED', 'N', #LM_USER_ID#, sysdate, #LM_USER_ID#, sysdate)
	</insert>
	<insert id="sqlPkgDhlInsImpSrfFlt" parameterClass="java.util.HashMap">
		INSERT INTO IMP_SRF_FLT (SRF_NO, AWB_NO, AWB_DATE, CARR_CODE, FLT_NO, FLT_KEY, FLT_TYPE, FLT_DATE, 
			INV_PCS, INV_WT, MANIFEST_PCS, MANIFEST_WT, CC_CODE, CTM_REF_NO, 
			CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE, ORIG_FLT_KEY, ORIG_FLT_DATE)
			values (#SRF_NO#, #AWB_NO#, NVL(TO_DATE(#AWB_DATE#,'DDMONYY'),sysdate), #CARR_CODE#, substr(#FLT_KEY#, 1, 2), #FLT_KEY#, 'I', NVL(TO_DATE(#FLT_DATE#,'DDMONYY'),sysdate),
			#PCS#, #WT#, #PCS#, #WT#, '','',
			#LM_USER_ID#, sysdate, #LM_USER_ID#, sysdate, #FLT_KEY#, TO_DATE(#FLT_DATE#,'DDMONYY'))
	</insert>
	<parameterMap id="hmGenerateSRNo" class="java.util.HashMap" >
		<parameter property="NUMBER" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
		<parameter property="TYPE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	</parameterMap>

	<procedure id="generatSRNumber" parameterMap="hmGenerateSRNo" >
		{? = call FUN_GET_TR_NO(?)}
	</procedure>
	<parameterMap id="pkgImpPrcSrfRmkMap" class="java.util.HashMap">
		<parameter property="SRF_NO" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" />		
	</parameterMap>	
	<procedure id="sqlPkgImpPrcSrfRmk" parameterMap="pkgImpPrcSrfRmkMap">
		{ call pkg_imp.prc_srf_rmk(?)}
	</procedure>	
	<parameterMap id="prcGetCcCodeMap" class="java.util.HashMap">
		<parameter property="AWB_NO" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="IN" />
		<parameter property="FLT_KEY" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="IN" />
		<parameter property="FLT_DATE" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="IN" />
		<parameter property="V_CC_CODE" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="OUT" />
		<parameter property="V_CTM_REF" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="OUT" />		
	</parameterMap>	
	<procedure id="sqlPrcGetCcCode" parameterMap="prcGetCcCodeMap">
		{ call PRC_GET_CC_CODE(?,?,?,?,?)}
	</procedure>	
	<insert id="sqlPkgDhlInsImpSrfAwbInv" parameterClass="java.util.HashMap">
		INSERT INTO IMP_SRF_AWB_INVENTORY (
			SRF_NO, AWB_NO, AWB_DATE, CARR_CODE, CATALOG, CC_CODE, CTM_REF_NO, 
			LOCN_PCS, LOCN_WT, FLT_DATE, FLT_KEY, CR_USER_ID, CR_DATE, DLV_PCS, DLV_WT)
			select #SRF_NO#, AWB_NO, AWB_DATE, #CARR_CODE#, 'IG', #CC#, #REF_NO#, 
			LOCN_PCS, LOCN_WT, FLT_DATE, FLT_KEY, #LM_USER_ID#, sysdate,#PCS#,#WT#
			from AWB_INVENTORY where flt_key = #FLT_KEY# and flt_date = TO_DATE(#FLT_DATE#,'DDMONYY') and awb_no = #AWB_NO#
	</insert>
	<insert id="sqlPkgDhlInsImpSrfAwbInvNull" parameterClass="java.util.HashMap">
		INSERT INTO IMP_SRF_AWB_INVENTORY (
				SRF_NO, AWB_NO, AWB_DATE, CARR_CODE, CATALOG, CC_CODE, CTM_REF_NO, 
				LOCN_PCS, LOCN_WT, FLT_DATE, FLT_KEY, CR_USER_ID, CR_DATE,DLV_PCS, DLV_WT)
				values (#SRF_NO#, #AWB_NO#, NVL(TO_DATE(#AWB_DATE#,'DDMONYY'),sysdate), #CARR_CODE#, 'IG', #CC#, #REF_NO#, 
				'ECT', #PCS#, #WT#, TO_DATE(#FLT_DATE#,'DDMONYY'), #FLT_KEY#, #LM_USER_ID#, sysdate,#PCS#,#WT#)
	</insert>
	<update id="sqlPkgDhlUpdImpSrf" parameterClass="java.util.HashMap">
		update imp_srf set
				   POST_USER = #LM_USER_ID#, POST_DATE = sysdate, POST_TIME = to_number(to_char(sysdate, 'HH24MI')), 
				   OFF_ARR_DATE = sysdate, OFF_ARR_USER = #LM_USER_ID#, 
				   FIRST_CG_ARR_DATE = sysdate, FIRST_CG_ARR_USER = #LM_USER_ID#, 
				   LAST_CG_ARR_DATE = sysdate, LAST_CG_ARR_USER = #LM_USER_ID#,
				   STATUS = 'POSTED'
			where SRF_NO = #SRF_NO#
	</update>
	<update id="sqlPkgDhlUpdAWB" parameterClass="java.util.HashMap">		
		UPDATE AWB SET AWB_CLOSED_YN = 'Y' , LM_USER_ID = #LM_USER_ID# , LM_DATE = sysdate  
			WHERE exists (SELECT COUNT(1)
						FROM IMP_CAR_AWB A
						JOIN (SELECT AWB_NO, AWB_DATE, SUM(MANIFEST_PCS) MANIFEST_PCS FROM IMP_CAR_SHP s 
							 GROUP BY AWB_NO, AWB_DATE) M ON A.AWB_NO = M.AWB_NO AND A.AWB_DATE = M.AWB_DATE
						JOIN (SELECT AWB_NO, AWB_DATE, SUM(SRF_PCS) SRF_PCS FROM IMP_SRF s
							 WHERE (( <![CDATA[ SRF_EXPY_DATE > sysdate and s.STATUS = 'ISSUED' ]]> ) or s.STATUS = 'POSTED' 
									  or s.SRF_NO in (select SRF_NO from IMP_CDIF where VOID_USER is null ))
							 and not exists (select null from IMP_CDIF where VOID_USER is null and CDIF_SRF_NO = s.SRF_NO)
							 GROUP BY AWB_NO, AWB_DATE) S
							ON A.AWB_NO = S.AWB_NO AND A.AWB_DATE = S.AWB_DATE
						WHERE NOT EXISTS (SELECT NULL FROM AWB_INVENTORY AI
										 JOIN AWB awb ON UPPER(awb.AWB_NO) = UPPER(AI.AWB_NO) 
								  		 AND UPPER (awb.awb_date) = UPPER (AI.awb_date)								  		   
										 WHERE AI.AWB_NO = A.AWB_NO 
										 AND AI.AWB_DATE = A.AWB_DATE 										 
										 AND (AI.SRF_NO IS NULL OR 
													 EXISTS (SELECT NULL FROM IMP_SRF WHERE STATUS = 'ISSUED' 
													 and <![CDATA[ SRF_EXPY_DATE < sysdate ]]> 
													 AND SRF_NO = AI.SRF_NO))) 
						AND A.AWB_NO = #AWB_NO# AND A.AWB_DATE = TO_DATE(#AWB_DATE#,'DDMONYY')
						AND <![CDATA[ A.AWB_PCS <= S.SRF_PCS AND A.AWB_PCS <= M.MANIFEST_PCS ]]>)
			AND AWB_NO = #AWB_NO# AND AWB_DATE = TO_DATE(#AWB_DATE#,'DDMONYY')
	</update>	
	<insert id="sqlPkgDhlInsAWBEvents" parameterClass="java.util.HashMap">
		INSERT INTO AWB_EVENTS
		    		(AWB_NO,AWB_DATE,EVENT_ID,
		    		EVENT_DESC,
		    		FLT_KEY,FLT_DATE,FLT_TYPE,TR_NO,ULD_KEY,
		    		PCS, WT, CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE
		    		)
		  		VALUES
		    		(#AWB_NO#, TO_DATE(TRIM(#AWB_DATE#),'DDMONYY'), 'CCREL',
		    		(SELECT EVENT_DESC FROM MAST_AWB_EVENTS WHERE EVENT_ID = 'CCREL'),
		    		#FLT_KEY#, TO_DATE(#FLT_DATE#,'DDMONYY'), 'I', #AWB_NO#,NULL,
		    		#PCS#, #WT#, #LM_USER_ID#, sysdate, #LM_USER_ID#, sysdate
		    		)
	</insert>
	
	<parameterMap id="pkgDhlFunGetAgentIataMap" class="java.util.HashMap">
		<parameter property="STATUS" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="OUT" />
		<parameter property="AGENT_NAME" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="IN" />
		<parameter property="IATA_CODE" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="INOUT" />		
		<parameter property="AGENT_CODE" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="OUT" />			
	</parameterMap>	
	<procedure id="sqlPkgDhlFunGetAgentIata" parameterMap="pkgDhlFunGetAgentIataMap">
		{ ? = call pkg_exp_val.get_agent_iata_code(?,?,?)}
	</procedure>	
	<parameterMap id="pkgDhlFunValDlsFinalizeMap" class="java.util.HashMap">
		<parameter property="DLS_FINALIZE" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="OUT" />	
		<parameter property="FLT_KEY" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="IN" />
		<parameter property="FLT_DATE" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="IN" />					
	</parameterMap>	
	<procedure id="sqlPkgDhlFunValDlsFinalize" parameterMap="pkgDhlFunValDlsFinalizeMap">
		{ ? = call pkg_exp_val.val_dls_finalize(?,?)}
	</procedure>
		
	<select id="sqlPkgDhlFetchFltOpr" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		select decode(TO_DATE(#FLT_DATE#,'DDMONYY'), est_date, lpad(est_time, 4, 0), to_char(est_date, 'DDMONYY')||' '||lpad(est_time, 4, 0))
		        as   "ETD"
		        from   flt_opr
		        where  flt_key = #FLT_KEY#
		        and    sch_date = TO_DATE(#FLT_DATE#,'DDMONYY')
		        and    flt_type = 'D'  
	</select>
	<!-- Queries for the Package PKG_DHL_DIRECT_TOW ends -->
	<!-- Queries for the Package PKG_EXP_ACPT -->
	<select id="sqlPkgAcptGetAwbDate" parameterClass="java.lang.String" resultClass="java.lang.String">
		select TO_CHAR(awb_date,'DDMONYY') AWB_DATE	       
	        from (select awb_date
                from   awb
                where  awb_no = #AWB_NO# and    (awb_type = 'E' OR awb_type='T')
                      and    awb_closed_yn = 'N'	order by cr_date desc)
            where rownum = 1 
	</select>	
	<select id="sqlPkgAcptGetRCLAwbDate" parameterClass="java.lang.String" resultClass="java.lang.String">
		select TO_CHAR(awb_date,'DDMONYY') AWB_DATE	       
	        from (select awb_date
                from   awb
                where  awb_no = #AWB_NO# and awb_closed_yn = 'N' order by cr_date desc)
            where rownum = 1 
	</select>
	<parameterMap id="pkgAcptGetFHLDateMap" class="java.util.HashMap">
		<parameter property="AWB_DATE" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="OUT" />	
		<parameter property="AWB_NO" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="IN" />
		<parameter property="AWB_TYPE" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="IN" />					
	</parameterMap>	
	<procedure id="sqlPkgAcptGetFHLDate" parameterMap="pkgAcptGetFHLDateMap">
		{ ? = call  pkg_common.fun_get_fhl_date(?,?)}
	</procedure>
	<parameterMap id="pkgAcptGetFwbDateMap" class="java.util.HashMap">
		<parameter property="AWB_DATE" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="OUT" />	
		<parameter property="AWB_NO" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="IN" />
		<parameter property="AWB_TYPE" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="IN" />					
	</parameterMap>	
	<procedure id="sqlPkgAcptGetFwbDate" parameterMap="pkgAcptGetFwbDateMap">
		{ ? = call  pkg_common.fun_get_fwb_date(?,?)}
	</procedure>
	<insert id="sqlPkgAcptInsAwb" parameterClass="java.util.HashMap">
		insert into awb(awb_no, awb_date, awb_type, ppk_type, carr_code, dest, content, accept_mode,
		        spl_code1, spl_code2, spl_code3, spl_code4, spl_code5, spl_code6, spl_code7, spl_code8, spl_code9, cr_user_id, cr_date, lm_user_id, lm_date,ORIG,TR_TYPE, CATALOG, 
		        AGENT_NAME, AGENT_CODE,CNSL_IND)
		    values (#AWB_NO#, NVL(TO_DATE(TRIM(#AWB_DATE#),'DDMONYY'),TO_CHAR(SYSDATE,'DDMONYY')), #AWB_TYPE#, #PPK_TYPE#, #CARR_CODE#, #DEST#, #CONTENT#, #ACCPT_MODE#,
		        #SPL_CODE1#, #SPL_CODE2#, #SPL_CODE3#, #SPL_CODE4#, #SPL_CODE5#, #SPL_CODE6#, #SPL_CODE7#, #SPL_CODE8#, #SPL_CODE9#, #LM_USER_ID#, sysdate, #LM_USER_ID#, 
		        sysdate,'HKG',#TR_TYPE#, #CATALOG#, #AGENT_NAME#, #AGENT_CODE#,#FHL_CNSL_YN#)
	</insert>
	<update id="sqlPkgAcptUpdAwb" parameterClass="java.util.HashMap">
		update awb set
		        carr_code = #CARR_CODE#,
		        dest = #DEST#,
		        ORIG = 'HKG',
		        content = #CONTENT#,		       
		        accept_mode = NVL(#ACCPT_MODE#,accept_mode),
		        spl_code1 = #SPL_CODE1#,
		        spl_code2 = #SPL_CODE2#, 
		        spl_code3 = #SPL_CODE3#, 
		        spl_code4 = #SPL_CODE4#, 
		        spl_code5 = #SPL_CODE5#, 
		        spl_code6 = #SPL_CODE6#,
		        spl_code7 = #SPL_CODE7#,
		        spl_code8 = #SPL_CODE8#,
		        spl_code9 = #SPL_CODE9#,
		        TR_TYPE   = #TR_TYPE#, 
		        CATALOG	  = #CATALOG#,
		        CNSL_IND =  #FHL_CNSL_YN# ,
		        AGENT_NAME = NVL(#AGENT_NAME#,AGENT_NAME), 
		        AGENT_CODE = NVL(#AGENT_CODE#,AGENT_CODE) 
		    where  awb_no = #AWB_NO#
		    and    TRIM(awb_date) = TO_DATE(#AWB_DATE#,'DDMONYY')		     
	</update>
	<select id="sqlFetchAllSplCodeForAwb" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT SPL_CODE1, SPL_CODE2, SPL_CODE3, SPL_CODE4, SPL_CODE5, SPL_CODE6, SPL_CODE7, SPL_CODE8, SPL_CODE9 FROM AWB WHERE AWB_NO=#AWB_NO# AND AWB_DATE=TO_DATE(#AWB_DATE#, 'DDMONYY')
	</select>
	<select id="sqlFetchAllCarSplCodeForAwb" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT SPL_CODE1, SPL_CODE2, SPL_CODE3, SPL_CODE4, SPL_CODE5, SPL_CODE6, SPL_CODE7, SPL_CODE8, SPL_CODE9 FROM EXP_CAR WHERE AWB_NO=#AWB_NO# AND AWB_DATE=TO_DATE(#AWB_DATE#, 'DDMONYY')
	</select>
	<update id="sqlUpdateExpCarSHCAwb" parameterClass="cargo.cms.export.bo.IssueRCLHeaderBO">
		UPDATE EXP_CAR SET 
		SPL_CODE1 = #splCode1#,
		SPL_CODE2 = #splCode2#,
		SPL_CODE3 = #splCode3#,
		SPL_CODE4 = #splCode4#,
		SPL_CODE5 = #splCode5#,
		SPL_CODE6 = #splCode6#,
		SPL_CODE7 = #splCode7#,
		SPL_CODE8 = #splCode8#,
		SPL_CODE9 = #splCode9#
		WHERE AWB_NO = #awbNum# AND AWB_DATE=TO_DATE(pkg_common.get_awb_date(#awbNum#, 'E'))
	</update>
	<!-- Queries for procedure upd_pre_rcl_brkdn -->
	<select id="sqlPkgAcptGetBrkdnYn" parameterClass="java.lang.String" resultClass="java.util.HashMap">
		select rcl_no RCL_NO, brkdn_yn BRKDN_YN, ppk_type PPK_TYPE	      
	        from   (select rcl_no, brkdn_yn, ppk_type
			        from   exp_rcl_hd
			        where  pre_rcl_no = #PRE_RCL_NO#
			        and    (status = 'S' OR status = 'P') 
			        order by rcl_date desc)
			where   rownum = 1
	</select>
	<delete id="sqlPkgAcptDelRclBrkdn" parameterClass="java.util.HashMap"> 
		delete from exp_rcl_brkdn
	        where  rcl_no = #RCL_NO#
	        and    awb_no = #AWB_NO#
	</delete>
	<select id="sqlPkgAcptGetRclBrkdn" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select TO_CHAR(awb_date,'DDMONYY') AWB_DATE, pcs, weight as "WT", dest		        
		        from   exp_rcl_brkdn
		        where  rcl_no = #RCL_NO#
            and    awb_no = #AWB_NO#
	</select>
	<update id="sqlPkgAcptUpdRclBrkdn" parameterClass="java.util.HashMap">
		update exp_rcl_brkdn set
	                    pcs = #PCS#,
	                    weight = #WT#,
	                    dest = #DEST#
	                where  rcl_no = #RCL_NO#
                    and    awb_no = #AWB_NO#
		            and    awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')  
	</update>
	<update id="sqlPkgAcptUpdRclHd" parameterClass="java.lang.String">
		update exp_rcl_hd set
				        brkdn_yn = 'N'
				    where  rcl_no =  #RCL_NO#
	</update>
	<select id="sqlPkgAcptGetUldKeyRclHd" parameterClass="java.lang.String" resultClass="java.lang.String">
		select uld_key  from   exp_pre_rcl_hd
		            where  pre_rcl_no = #PRE_RCL_NO#
	</select>
	<update id="sqlPkgAcptUpdSHCRclbrkdn" parameterClass="java.util.HashMap">
		UPDATE AWB set SPL_CODE1 = #SPL_CODE1#,SPL_CODE2 = #SPL_CODE2#,SPL_CODE3 = #SPL_CODE3#,SPL_CODE4 = #SPL_CODE4#,SPL_CODE5 = #SPL_CODE5#,SPL_CODE6 = #SPL_CODE6#,SPL_CODE7 = #SPL_CODE7#,SPL_CODE8 = #SPL_CODE8#,SPL_CODE9 = #SPL_CODE9# where AWB_NO=#AWB_NO# AND AWB_DATE=#AWB_DATE#
	</update>
	<insert id="sqlPkgAcptInsRclBrkdn" parameterClass="java.util.HashMap">
		insert into exp_rcl_brkdn(rcl_no, awb_no,awb_date, uld_key, pcs, weight, dest, cr_user_id, cr_date, lm_user_id, lm_date, CONTENT,SPL_CODE1,SPL_CODE2,SPL_CODE3,SPL_CODE4,SPL_CODE5,SPL_CODE6,SPL_CODE7,SPL_CODE8,SPL_CODE9,tr_type_evt,CARR_RF)
		        values (#RCL_NO#, #AWB_NO#,NVL(TO_DATE(#AWB_DATE#,'DDMONYY'),sysdate),#ULD_KEY#, NVL(#PCS#,0), NVL(#WT#,0), #DEST#, #LM_USER_ID#, 
		        sysdate, #LM_USER_ID#, sysdate, #CONTENT#,#SPL_CODE1#,#SPL_CODE2#,#SPL_CODE3#,#SPL_CODE4#,#SPL_CODE5#,#SPL_CODE6#,#SPL_CODE7#,#SPL_CODE8#,#SPL_CODE9#,'RAMIX',#CARR_RF#)                
	</insert>
	<!-- Queries for upd_brkdn_awb_inv -->
	<update id="sqlPkgAcptUpdAwbInv" parameterClass="java.util.HashMap"> 
		update awb_inventory inv set
          	inv.locn_pcs = inv.locn_pcs + #PCS#,
          	inv.locn_wt = inv.locn_wt + #WT#
	        where  inv.awb_no = #AWB_NO#
	        and    inv.awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')	     
	        and    inv.uld_key = #ULD_KEY#
	        and    exists (select null
			        from   awb
			        where  awb_no = inv.awb_no
			        and    awb_date = inv.awb_date
			        )  	        
	       
	</update>
	<insert id="sqlPkgAcptInsAwbInv" parameterClass="java.util.HashMap">
		insert into awb_inventory(awb_no, awb_date, carr_code, loc_code, locn_pcs, locn_wt, 
		uld_key, lsp_no, strg_date, ppk_ind, cr_user_id, cr_date, lm_user_id, lm_date,seq_no)
	        values (#AWB_NO#, NVL(TO_DATE(TRIM(#AWB_DATE#),'DDMONYY'), TO_CHAR(SYSDATE,'DDMONYY')), #CARR_CODE#, #LOC_CODE#, NVL(#PCS#,0), NVL(#WT#,0), 
	        #ULD_KEY#, #LSP_NO#,sysdate, 'M', #LM_USER_ID#, sysdate, #LM_USER_ID#, sysdate,AWB_INV_SEQ.NEXTVAL)  
	</insert>
	<delete id="sqlPkgAcptDelAwbInv" parameterClass="java.util.HashMap">
		delete from awb_inventory inv
	        where  inv.awb_no = #AWB_NO#
	        and    inv.awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')	      
	        and    inv.locn_pcs = 0  
	        and    exists (select null
			       from   awb
			       where  awb_no = inv.awb_no
			       and    awb_date = inv.awb_date
			       )   
	</delete>
	<!-- Queries upd_awb_breakdown -->
	<update id="sqlPkgAcptUpdAwbRclMix" parameterClass="java.util.HashMap">
		update awb set
		           rcl_mix_pcs = rcl_mix_pcs - NVL(#PCS#,0),
		           rcl_mix_wt = rcl_mix_wt - NVL(#WT#,0),		            
				   rcl_pcs = nvl(rcl_pcs,0) + NVL(#RCL_PCS#,0),
				   rcl_wt = nvl(rcl_wt,0) + NVL(#RCL_WT#,0),
				   TR_TYPE   = #TR_TYPE#,
				   CNSL_IND =  #FHL_CNSL_YN# 			       
		    where  awb_no = #AWB_NO#
		    and    awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')		    
	</update>
	<delete id="sqlPkgAcptDelAwbRclPcs" parameterClass="java.util.HashMap">
		delete awb
		    where  awb_no = #AWB_NO#
		    and    awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')		    
		    and    rcl_pcs = 0
		    and    car_yn = 'N' and pman_pcs=0  and not exists (select null from v_edi_fwb where awb_no=#AWB_NO# and awb_date=TO_DATE(#AWB_DATE#,'DDMONYY')) 
	</delete>
	<update id="sqlPkgAcptUpdAwbRclMixDest" parameterClass="java.util.HashMap">
		update awb set	
					   ORIG = 'HKG',		      
					   ACCEPT_MODE = 'LCA',		      
				       dest = #DEST#,
				       rcl_mix_pcs = rcl_mix_pcs + NVL(#RCL_MIX_PCS#,0),
				       rcl_mix_wt = rcl_mix_wt + NVL(#RCL_MIX_WT#,0),				       				       
				       rcl_pcs = nvl(rcl_pcs,0) + NVL(#RCL_PCS#,0),
				       rcl_wt = nvl(rcl_wt,0) + NVL(#RCL_WT#,0),				       
	           		 content = (Decode((select count(1) from v_edi_fwb where awb_no = #AWB_NO# and awb_date=#AWB_DATE#),0,#CONTENT#,content)),		        
	           		<isNotEqual property="PPK_TYPE" compareValue="M">	        
			        spl_code1 = #SPL_CODE1#,
			        spl_code2 = #SPL_CODE2#, 
			        spl_code3 = #SPL_CODE3#, 
			        spl_code4 = #SPL_CODE4#, 
			        spl_code5 = #SPL_CODE5#, 
			        spl_code6 = #SPL_CODE6#,
			        spl_code7 = #SPL_CODE7#,
			        spl_code8 = #SPL_CODE8#,
			        spl_code9 = #SPL_CODE9#,
					</isNotEqual>
					<isEqual property="IS_ONE_RECORD" compareValue="Y">
					spl_code1 = #SPL_CODE1#,
			        spl_code2 = #SPL_CODE2#, 
			        spl_code3 = #SPL_CODE3#, 
			        spl_code4 = #SPL_CODE4#, 
			        spl_code5 = #SPL_CODE5#, 
			        spl_code6 = #SPL_CODE6#,
			        spl_code7 = #SPL_CODE7#,
			        spl_code8 = #SPL_CODE8#,
			        spl_code9 = #SPL_CODE9#,
					</isEqual>
					lm_user_id = #LM_USER_ID#,
					lm_date   = sysdate,
					TR_TYPE   = #TR_TYPE#
				where  awb_no = #AWB_NO#
				and    awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')				
	</update>	
	<update id="sqlPkgAcptUpdAwbRclBulkPpkdtl" parameterClass="java.util.HashMap">
		update awb set
		       rcl_bulk_pcs = rcl_bulk_pcs + NVL(#BULK_PCS#,0),
		       rcl_bulk_wt = rcl_bulk_wt + NVL(#BULK_WT#,0),
		       rcl_ppk_pcs = rcl_ppk_pcs + NVL(#PPK_PCS#,0),
		       rcl_ppk_wt = rcl_ppk_wt + NVL(#PPK_WT#,0),		       
		       rcl_pcs = NVL(rcl_pcs,0) + NVL(#RCL_PCS#,0),
		       rcl_wt = NVL(rcl_wt,0) + NVL(#RCL_WT#,0),
		       TR_TYPE=#TR_TYPE#		       
		where  awb_no = #AWB_NO#
		and    TRIM(awb_date) = TO_DATE(#AWB_DATE#,'DDMONYY')		            
	</update>
	<update id="sqlPkgAcptUpdAwbOrigDest" parameterClass="java.util.HashMap">
		update awb set
					awb_type = nvl(#AWB_TYPE#, awb_type),
			       accept_mode = NVL(#ACPT_MODE#,accept_mode),
			       car_yn = #CAR_YN#,
			       carr_code = #CARR_CODE#,
			       pcs = #PCS#,
			       wt = #WT#,
			       orig = #ORIGIN#,
			       dest = #DEST#,
				   content = #CONTENT#,
				   catalog = #CATALOG#,
				   agent_code = #AGENT_CODE#,
				   shpr_code = #SHIPPER_CODE#,
				   agent_name = #AGENT_NAME#,
				   shipper_name = #SHIPPER_NAME#,
				    spl_code1 = #SPL_CODE1#,
			        spl_code2 = #SPL_CODE2#, 
			        spl_code3 = #SPL_CODE3#, 
			        spl_code4 = #SPL_CODE4#, 
			        spl_code5 = #SPL_CODE5#, 
			        spl_code6 = #SPL_CODE6#,
			        spl_code7 = #SPL_CODE7#,
			        spl_code8 = #SPL_CODE8#,
			        spl_code9 = #SPL_CODE9#,			        
				   lm_user_id = #LM_USER_ID#,
				   lm_date = sysdate,
				    NON_PMAN_PCS = (#PCS# - PMAN_PCS),
			        NON_PMAN_WT = (#WT# - PMAN_WT),
			        TR_TYPE=#TR_TYPE#      
			Where  awb_no = #AWB_NO#
				and    awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')				
	</update>
	<update id="sqlPkgAcptUpdAwbOrgDest" parameterClass="java.util.HashMap">
		update awb set
			       accept_mode = NVL(#ACPT_MODE#,accept_mode),
			       carr_code = #CARR_CODE#,
			       pcs = #PCS#,
			       wt = #WT#,
			       orig = #ORIGIN#,
			       dest = #DEST#,
				   content = #CONTENT#,
				   catalog = #CATALOG#,
				   agent_code = #AGENT_CODE#,
				   shpr_code = #SHIPPER_CODE#,
				   agent_name = #AGENT_NAME#,
				   shipper_name = #SHIPPER_NAME#,
				    spl_code1 = #SPL_CODE1#,
			        spl_code2 = #SPL_CODE2#, 
			        spl_code3 = #SPL_CODE3#, 
			        spl_code4 = #SPL_CODE4#, 
			        spl_code5 = #SPL_CODE5#, 
			        spl_code6 = #SPL_CODE6#,
			        spl_code7 = #SPL_CODE7#,
			        spl_code8 = #SPL_CODE8#,
			        spl_code9 = #SPL_CODE9#,
			        NON_PMAN_PCS = (#PCS# - PMAN_PCS),
			        NON_PMAN_WT = (#WT# - PMAN_WT),
			        TR_TYPE=#TR_TYPE#,
			        lm_user_id = #LM_USER_ID#,
				    lm_date = sysdate       
			Where  awb_no = #AWB_NO#
				and    awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')				
	</update>
	<insert id="sqlPkgAcptInsAwbOrgDest" parameterClass="java.util.HashMap">
		insert into awb(awb_no, awb_date, awb_type, accept_mode, ppk_type, car_yn, carr_code, pcs, wt, orig, dest, content, catalog, agent_code, shpr_code, agent_name, shipper_name,
		        spl_code1, spl_code2, spl_code3, spl_code4, spl_code5, spl_code6, spl_code7, spl_code8, spl_code9,cr_user_id, cr_date, lm_user_id, lm_date,
		        NON_PMAN_PCS,NON_PMAN_WT,TR_TYPE)
		    values (#AWB_NO#, NVL(TO_DATE(TRIM(#AWB_DATE#),'DDMONYY'),TO_CHAR(SYSDATE,'DDMONYY')), #AWB_TYPE#, #ACCPT_MODE#, 'B', NVL(#CAR_YN#,'N'), #CARR_CODE#, NVL(#PCS#,0), NVL(#WT#,0), #ORIGIN#, #DEST#, #CONTENT#, #CATALOG#, #AGENT_CODE#, #SHIPPER_CODE#, #AGENT_NAME#, #SHIPPER_NAME#,
		        #SPL_CODE1#, #SPL_CODE2#, #SPL_CODE3#, #SPL_CODE4#, #SPL_CODE5#, #SPL_CODE6#, #SPL_CODE7#, #SPL_CODE8#,#SPL_CODE9#, #LM_USER_ID#, sysdate, #LM_USER_ID#, sysdate,
		        #PCS#,#WT#,#TR_TYPE#)
	</insert>		          
	<insert id="sqlPkgAcptInsAwbRclMix" parameterClass="java.util.HashMap">
		insert into awb(awb_no, awb_date, awb_type, ppk_type, carr_code,rcl_mix_pcs,rcl_mix_wt, dest, content, accept_mode,
		        spl_code1, spl_code2, spl_code3, spl_code4, spl_code5, spl_code6, spl_code7, spl_code8, spl_code9, cr_user_id, cr_date, lm_user_id, lm_date,
		        rcl_pcs, rcl_wt, orig,TR_TYPE, CATALOG, AGENT_NAME, AGENT_CODE, CNSL_IND)
		    values (#AWB_NO#, NVL(TO_DATE(TRIM(#AWB_DATE#),'DDMONYY'),TO_CHAR(SYSDATE,'DDMONYY')), 'E', NVL(#PPK_TYPE#,'M'), #CARR_CODE#, NVL(#RCL_MIX_PCS#,0), NVL(#RCL_MIX_WT#,0), #DEST#, #CONTENT#, NVL(#ACCPT_MODE#,'LCA'),
		        #SPL_CODE1#, #SPL_CODE2#, #SPL_CODE3#, #SPL_CODE4#, #SPL_CODE5#, #SPL_CODE6#, #SPL_CODE7#, #SPL_CODE8#, #SPL_CODE9#, #LM_USER_ID#, sysdate, #LM_USER_ID#, sysdate, 
			    NVL(#RCL_PCS#,0),NVL(#RCL_WT#,0),'HKG',#TR_TYPE#, 'EG', #AGENT_NAME#, #AGENT_CODE#,#FHL_CNSL_YN#) 
	</insert>
	<update id="sqlPkgAcptUpdAwbPcsWt" parameterClass="java.util.HashMap">
		update awb set
	               car_yn = 'N',
		           pcs = 0,
		           wt = 0
		    where  awb_no = #AWB_NO#
		    and    awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')		    
	</update>	
	<select id="sqlPkgAcptGetAwbClosedYn" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		select count(*) 
				FROM awb
				WHERE awb_no = #AWB_NO#
				AND awb_closed_yn = 'Y'
				AND missing_yn = 'N'			  
	</select>
	<select id="sqlPkgAcptGetAwbReuseCount" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		select count(1)
				from awb_reuse inv
				where inv.awb_no = #AWB_NO#					
				and inv.awb_date is null
	</select>		
	<!-- Queries for function get_pre_rcl_no -->
	<select id="sqlPkgAcptGetPreRclnoHd" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		select pre_rcl_no	        
		        from   (select   pre_rcl_no
		                from     exp_pre_rcl_hd
		                where    uld_key = #ULD_KEY#
		                and      status =  'SUBMITTED'
	                    and      cr_date > sysdate - #EXP_HR# / 24
		                order by lm_date desc)
		        where  rownum = 1		
	</select>		 
	<select id="sqlPkgAcptGetPreRclnoDtl" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		select pre_rcl_no	               
	                from   (select   t1.pre_rcl_no
	                        from     exp_pre_rcl_hd t1, exp_pre_rcl_dtl t2
	                        where    t1.pre_rcl_no = t2.pre_rcl_no
	                        and      t2.uld_key = #ULD_KEY#
	                        and      t1.status = 'SUBMITTED'
                            and      t1.cr_date > sysdate - #EXP_HR# / 24
	                        order by t1.lm_date desc)
	                where  rownum = 1 	
	</select>
	<!-- Queries for procedure ins_brkdn -->	  
	<select id="getrclCarrCode" parameterClass="java.lang.String" resultClass="java.lang.String">
	SELECT CARR_CODE FROM EXP_RCL_HD WHERE RCL_NO=#PARAM#
	</select>	  
	  <select id="sqlPkgAcptGetPreRclBrkdn" parameterClass="java.lang.String" resultClass="java.util.HashMap">
		select awb_no,pkg_common.get_awb_date(awb_no,'E') AWB_DATE, dest, pcs, weight as "WT", QCP_GOODS_DESC as CONTENT,SPL_CODE1 as SPL_CODE1,SPL_CODE2 as SPL_CODE2,SPL_CODE3 as SPL_CODE3,SPL_CODE4 as SPL_CODE4,SPL_CODE5 as SPL_CODE5,SPL_CODE6 as SPL_CODE6,SPL_CODE7 as SPL_CODE7,SPL_CODE8 as SPL_CODE8,SPL_CODE9 as SPL_CODE9,CARR_RF AS CARR_RF
	        from   exp_pre_rcl_brkdn
	        where  pre_rcl_no = #PRE_RCL_NO#
	  </select>
	<select id="sqlPkgAcptGetPreRclHd" parameterClass="java.lang.String" resultClass="java.util.HashMap">
		select ppk_type, awb_no,pkg_common.get_awb_date(awb_no,'E') AWB_DATE            
            from   exp_pre_rcl_hd
            where  pre_rcl_no = #PRE_RCL_NO#
	  </select>
	  <select id="sqlPkgAcptGetDestRclHd" parameterClass="java.lang.String" resultClass="java.lang.String">
		select awb_dest
                from   exp_rcl_hd
                where  rcl_no = #RCL_NO# 
	  </select>   
	  <!-- Queries for procedure ins_service_log -->
      <select id="sqlPkgAcptGetRmkRclHd" parameterClass="java.lang.String" resultClass="java.util.HashMap">
    	  select cust_no, carr_code,rcl_pcs, rcl_wt, ppk_type, flt_no, TO_CHAR(flt_date,'DDMONYY') FLT_DATE, flt_key, rmk	     
		        from   exp_rcl_hd
		        where  rcl_no = #RCL_NO#
      </select>
      <insert id="sqlPkgAcptInsServiceErrlog" parameterClass="java.util.HashMap">
		insert into service_err_log
                   (tr_no, tr_type, tr_date, doc_line_no, owner_id, agent_no, flt_type, carr_code, flt_no, flt_date, flt_key,
                    uld_type, uld_no, uld_carr, uld_key, rmk1, rmk2, err_reason,
                    cr_user_id, cr_date, lm_user_id, lm_date, org_owned_inv)
            values (#RCL_NO#, #TR_TYPE#, NVL(TO_DATE(#CR_DATE#,'DDMONYY'),sysdate), SERVICE_ERR_LOG_DLN_SEQ.nextval, #OWNER_ID#, #CUST_NO#,'E', #CARR_CODE#, #FLT_NO#, TO_DATE(#FLT_DATE#,'DDMONYY'), #FLT_KEY#,
                    #ULD_TYPE#, #ULD_NO#, #ULD_CARR#, #ULD_KEY#,
                    nvl (#RMK#, 'RCL NO - ' || #RCL_NO# || ' Insert'), nvl (#RMK#, 'RCL NO - ' || #RCL_NO# || ' Insert'), #ERR_REASON#,
                    #LM_USER_ID#, sysdate, #LM_USER_ID#, sysdate, NVL(#OWNED_INV#,'N'))       
	 </insert>
	 <!-- Queries for function accpt_tran_cargo_awb -->
	 <select id="sqlPkgAcptGetLocPcsWtLspUld" parameterClass="java.util.HashMap">
		 select t2.loc_code LOC_CODE , t3.pcs PCS, t4.wt WT, t5.lsp_no LSP_NO, t6.uld_key ULD_KEY
	            from   (select column_value loc_code, rownum r2
	                    from   table(pkg_common.inlist(#LOC_CODE#))) t2,
	                   (select column_value pcs, rownum r3
	                    from   table(pkg_common.inlist(#PCS#))) t3,
	                   (select column_value wt, rownum r4
	                    from   table(pkg_common.inlist(#WT#))) t4,
	                   (select column_value lsp_no, rownum r5
	                    from   table(pkg_common.inlist(#LSP_NO#))) t5,
	                   (select column_value uld_key, rownum r6
	                    from   table(pkg_common.inlist(#ULD_KEY#))) t6
	            where  t2.r2 = t3.r3
	            and    t3.r3 = t4.r4
	            and    t4.r4 = t5.r5
	            and    t5.r5 = t6.r6
	 </select>
	 <parameterMap id="pkgAcptValLspNoMap" class="java.util.HashMap">
		<parameter property="STATUS" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="OUT" />
		<parameter property="LSP_NO" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="IN" />				
	</parameterMap>	
	<procedure id="sqlPkgAcptValLspNo" parameterMap="pkgAcptValLspNoMap">
		{ ? = call pkg_exp_val.val_lsp_no(?)}
	</procedure>
	<parameterMap id="pkgAcptValBtNoMap" class="java.util.HashMap">
		<parameter property="STATUS" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="OUT" />	
		<parameter property="ULD_KEY" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="IN" />			
	</parameterMap>	
	<procedure id="sqlPkgAcptValBtNo" parameterMap="pkgAcptValBtNoMap">
		{ ? = call pkg_exp_val.val_bt_no(?)}
	</procedure>	
	<parameterMap id="pkgAcptValUldKeyMap" class="java.util.HashMap">
		<parameter property="STATUS" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="OUT" />
		<parameter property="ULD_KEY" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="IN" />	
		<parameter property="CARR_CODE" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="IN" />				
	</parameterMap>	
	<procedure id="sqlPkgAcptValUldKey" parameterMap="pkgAcptValUldKeyMap">
		{ ? = call pkg_exp_val.val_uld_key(?,?)}
	</procedure>
	<insert id="sqlPkgAcptInsExpRclHd" parameterClass="java.util.HashMap">
		insert into exp_rcl_hd(rcl_no, rcl_date,uld_key ,awb_no, ppk_type, accpt_mode, carr_code, trans_carr_code, rcl_pcs, rcl_wt, cr_user_id, cr_date, lm_user_id, lm_date)
		values (#RCL_NO#, sysdate, #ULD_KEY#, #AWB_NO#, #PPK_TYPE#, #ACCPT_MODE#, #CARR_CODE#, #TRANS_CARR_CODE#, NVL(#PCS#,0), NVL(#WT#,0), #LM_USER_ID#, sysdate, #LM_USER_ID#, sysdate)            
	</insert>	
	<insert id="sqlPkgAcptInsExpRclDtl" parameterClass="java.util.HashMap">
		insert into exp_rcl_dtl(rcl_no, doc_line_no, ppk_type,loc_code, lsp_no, uld_key, pcs, gross_wt, net_wt, tare_wt,cr_user_id, cr_date, lm_user_id, lm_date)
			values (#RCL_NO#, #DOC_LINE_NO#, #PPK_TYPE#, #LOC_CODE#, #LSP_NO#, #ULD_KEY#, #PCS#, #GROSS_WT#,#WT#, #TARE_WT#,#LM_USER_ID#, sysdate, #LM_USER_ID#, sysdate)            
	</insert>
	<select id="sqlPkgSumInlist" parameterClass="java.lang.String" resultClass="java.lang.String">
		select sum(column_value)        
    	    from   table(pkg_common.inlist(#NUMBER#))
	</select> 
	<!-- Queries for function val_tran_cargo -->
	<select id="sqlPkgtranGetAwbInv" parameterClass="java.lang.String" resultClass="java.lang.String">
		select 'X'         
            from   awb_inventory
            where  uld_key = #ULD_KEY#
            and    locn_pcs > 0
            and    rownum = 1
	</select>
	<select id="sqlPkgtranGetUldInv" parameterClass="java.lang.String" resultClass="java.lang.String">
		select 'X'	            
            from   uld_inventory
            where  uld_key = #ULD_KEY#
            and    cfm_status = 'CONFIRMED'
	</select>
	<parameterMap id="pkgAcptValUldTypeMap" class="java.util.HashMap">
		<parameter property="STATUS" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="OUT" />	
		<parameter property="ULD_KEY" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="IN" />			
	</parameterMap>	
	<procedure id="sqlPkgAcptValUldType" parameterMap="pkgAcptValUldTypeMap">
		{ ? = call pkg_exp_val.val_uld_type(?)}
	</procedure>	
	<parameterMap id="pkgAcptValAwbNoMap" class="java.util.HashMap">
		<parameter property="STATUS" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="OUT" />
		<parameter property="AWB_NO" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="IN" />	
		<parameter property="CARR_CODE" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="IN" />				
	</parameterMap>	
	<procedure id="sqlPkgAcptValAwbNo" parameterMap="pkgAcptValAwbNoMap">
		{ ? = call pkg_exp_val.val_awb_no(?,?)}
	</procedure>
	<parameterMap id="pkgAcptGetUldCarrCodeMap" class="java.util.HashMap">
		<parameter property="STATUS" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="OUT" />	
		<parameter property="ULD_KEY" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="IN" />		
		<parameter property="CARR_CODE" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="OUT" />			
	</parameterMap>	
	<procedure id="sqlPkgAcptGetUldCarrCode" parameterMap="pkgAcptGetUldCarrCodeMap">
		{ ? = call pkg_exp_val.get_uld_carr_code(?,?)}
	</procedure>
	<select id="sqlPkgAcptGetOwnerId" parameterClass="java.lang.String" resultClass="java.lang.String">
		select owner_id	            
	            from   uld_inventory
	            where  uld_key = #ULD_KEY#          
	</select>
	<insert id="sqlPkgAcptInsUldInv" parameterClass="java.util.HashMap">
		insert into uld_inventory
		               (uld_key, uld_type, uld_no, uld_carr, base_plt, loc_code, eic_flg, empty_flg, base_pal_flg, contr_code,
		                 owner_id, resv_flg, strg_date, tare_weight, ppk_ind, gross_weight,
		                agent_inv, cfm_status, lm_user_id, lm_date, owned_inv ,ENTRY_TIME)
		        values (#ULD_KEY#, #ULD_TYPE#, #ULD_NO#, #ULD_CARR#, 'N', #LOC_CODE#, 'N', 'Y', 'N', #CONTR_CODE#,
		                 #CARR_CODE#, 'N', sysdate, NVL(#TARE_WT#,0), 'Y', NVL(#GROSS_WT#,0),
		                'N', 'CONFIRMED', #LM_USER_ID#, sysdate, 'Y' ,sysdate)          
	</insert>
	<select id="sqlPkgAcptGetAwbX" parameterClass="java.lang.String" resultClass="java.lang.String">
		select 'X'
            from   awb
            where  awb_no = #AWB_NO#
            and    awb_type = 'E'
            and    awb_closed_yn = 'N'
            and    car_yn = 'Y'
    </select>
    <!-- Queries for function val_accpt_obc -->
    <select id="sqlPkgAcptGetETDFltOpr" parameterClass="java.util.HashMap" resultClass="java.lang.String">
    	select decode(TO_DATE(#FLT_DATE#,'DDMONYY'), est_date, lpad(est_time, 4, 0), to_char(est_date, 'DDMONYY')||' '||lpad(est_time, 4, 0)) as "ETD"	        
		        from   flt_opr
		        where  flt_key = #FLT_KEY#
		        and    sch_date = TO_DATE(#FLT_DATE#,'DDMONYY')
		        and    flt_type = 'D' 
    </select>
    <parameterMap id="pkgAcptGetBasePortMap" class="java.util.HashMap">
		<parameter property="STATUS" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="OUT" />	
		<parameter property="BASE_PORT" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="OUT" />					
	</parameterMap>	
	<procedure id="sqlPkgAcptGetBasePort" parameterMap="pkgAcptGetBasePortMap">
		{ ? = call pkg_exp_val.get_base_port(?)}
	</procedure>
	<parameterMap id="pkgAcptValFltDestMap" class="java.util.HashMap">
		<parameter property="STATUS" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="OUT" />	
		<parameter property="FLT_KEY" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="IN" />	
		<parameter property="FLT_DATE" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="IN" />		
		<parameter property="DEST" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="IN" />							
	</parameterMap>	
	<procedure id="sqlPkgAcptValFltDest" parameterMap="pkgAcptValFltDestMap">
		{ ? = call pkg_exp_val.val_flight_dest(?,?,?)}
	</procedure>
	<parameterMap id="pkgAcptValUldContCodeMap" class="java.util.HashMap">
		<parameter property="STATUS" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="OUT" />	
		<parameter property="ULD_KEY" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="IN" />		
		<parameter property="CONTR_CODE" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="IN" />			
	</parameterMap>	
	<procedure id="sqlPkgAcptValUldContCode" parameterMap="pkgAcptValUldContCodeMap">
		{ ? = call pkg_exp_val.val_uld_cont_code(?,?)}
	</procedure>
	<parameterMap id="pkgAcptValSplCodeMap" class="java.util.HashMap">
		<parameter property="STATUS" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="OUT" />	
		<parameter property="SPL_CODE" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="IN" />					
	</parameterMap>	
	<procedure id="sqlPkgAcptValSplCode" parameterMap="pkgAcptValSplCodeMap">
		{ ? = call pkg_exp_val.val_spl_code(?)}
	</procedure>
	<parameterMap id="pkgAcptValEctHandlerMap" class="java.util.HashMap">
		<parameter property="STATUS" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="OUT" />	
		<parameter property="ECT_HANDLER" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="IN" />				
	</parameterMap>	
	<procedure id="sqlPkgAcptValEctHandler" parameterMap="pkgAcptValEctHandlerMap">
		{ ? = call pkg_exp_val.val_ect_handler(?)}
	</procedure>
	<!-- Queries for del_transfer_cargo -->
	<select id="sqlPkgAcptGetImpTrfDtl" parameterClass="java.lang.String" resultClass="java.util.HashMap">
		select flt_key, TO_CHAR(flt_date,'DDMONYY') FLT_DATE, TO_CHAR(awb_date,'DDMONYY') AWB_DATE
	      from   imp_trf_dtl
	      where  trf_no = #REF_TR_NO#
	</select>
	<select id="sqlPkgAcptGettrfExpRclHd" parameterClass="java.lang.String" resultClass="java.util.HashMap">
		select ppk_type, awb_no, TO_CHAR(awb_date,'DDMONYY') AWB_DATE, accpt_mode, uld_key, ref_trf_no            
	            from   exp_rcl_hd
	            where  rcl_no = #RCL_NO#
	</select>            
	<select id="sqlPkgAcptGetExpCarRclBrkdn" parameterClass="java.lang.String" resultClass="java.lang.String">
		select substr(t1.awb_no, 1, 3)||'-'||substr(t1.awb_no, 4) as "AWB_NO"	           
		            from   exp_car t1, exp_rcl_brkdn t2
		            where  t1.awb_no = t2.awb_no
		            and    t1.awb_date = t2.awb_date
	                and    t2.rcl_no = #RCL_NO#
		            and    rownum = 1            
	</select> 
	<select id="sqlPkgAcptGetExpCar" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		select 'X'	          
		            from   exp_car t1
		            where  t1.awb_no = #AWB_NO#
		            and    t1.awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')
	</select>
	<update id="sqlPkgAcptUpdUldInventory" parameterClass="java.lang.String">
		  update uld_inventory set
			            flt_type = 'I',
			            flt_no = imp_flt_no,
			            flt_key = imp_flt_key,
			            flt_date = imp_flt_date,
			            carr_code = imp_flt_carr
			        where  uld_key = #ULD_KEY#
	</update>
	<select id="sqlPkgAcptGetFltKeyDate" parameterClass="java.lang.String" resultClass="java.util.HashMap">
		select imp_flt_key, TO_CHAR(imp_flt_date,'DDMONYY') IMP_FLT_DATE from uld_inventory where uld_key = #ULD_KEY#
	</select>
	<update id="sqlPkgAcptUpdAwbInventory" parameterClass="java.util.HashMap">
		update awb_inventory t1 set
			            awb_date = (select awb_date 
			                        from   imp_trf_dtl 
			                        where  trf_no = #REF_TRF_NO# 
			                        and    uld_key = #ULD_KEY# 
			                        and    awb_no = t1.awb_no
			                        and    flt_key = #IMP_FLT_KEY# 
			                        and    flt_date = TO_DATE(#IMP_FLT_DATE#,'DDMONYY')),	           
			            flt_type = 'I',
			            flt_key = #IMP_FLT_KEY#,
			            flt_date = TO_DATE(#IMP_FLT_DATE#,'DDMONYY')
			        where  uld_key = #ULD_KEY#
	</update>
	<update id="sqlPkgAcptEdiFhl" parameterClass="java.util.HashMap">
		update edi_fhl t1
					set awb_date = (select awb_date 
			                        from   imp_trf_dtl 
			                        where  trf_no = #REF_TRF_NO# 
			                        and    uld_key = #ULD_KEY# 
			                        and    awb_no = t1.awb_no
			                        and    flt_key = #IMP_FLT_KEY# 
			                        and    flt_date = TO_DATE(#IMP_FLT_DATE#,'DDMONYY'))
					where  (awb_no, awb_date) in (select awb_no, awb_date
	                                              from   exp_rcl_brkdn
	                                              where  rcl_no = #RCL_NO#)
					and (AWB_ORG = 'HKG' or AWB_DEST != 'HKG' or IMP_EXP_IND = 'E')
	</update>
	<delete id="sqlPkgAcptDelAwbRclNo" parameterClass="java.lang.String">
		delete from awb
	                where  (awb_no, awb_date) in (select awb_no, awb_date
	                                              from   exp_rcl_brkdn
	                                              where  rcl_no = #RCL_NO#)	                
	</delete>
	<update id="sqlPkgAcptUpdAwbInvFlt" parameterClass="java.util.HashMap">     
		update awb_inventory inv set
				        inv.awb_date = NVL(TO_DATE(#AWB_DATE#,'DDMONYY'),sysdate),				              
				        inv.flt_type = 'I',
				        inv.flt_key = #FLT_KEY#,
				        inv.flt_date =  TO_DATE(#FLT_DATE#,'DDMONYY')
				        where  inv.awb_no = #AWB_NO#
				        and    inv.awb_date =  TO_DATE(#V_AWB_DATE#,'DDMONYY')				        
				        and    exists (select null
								       from   awb
								       where  awb_no = inv.awb_no
								       and    awb_date = inv.awb_date
									   )  			       
	</update>
	<update id="sqlPkgAcptUpdEdiFhl" parameterClass="java.util.HashMap">  
		update edi_fhl t1
						set awb_date = NVL(TO_DATE(#AWB_DATE#,'DDMONYY'),sysdate)
						where  awb_no = #AWB_NO#
				        and    awb_date = TO_DATE(#V_AWB_DATE#,'DDMONYY')
						and (AWB_ORG = 'HKG' or AWB_DEST != 'HKG' or IMP_EXP_IND = 'E')
	</update>
	<delete id="sqlPkgAcptDelAwbTypeNo" parameterClass="java.util.HashMap">
	   delete from awb
				    where  awb_no = #AWB_NO#
				    and    awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')				      
	</delete>
	<update id="sqlPkgAcptUpdateExpRclHd" parameterClass="java.util.HashMap">
		update exp_rcl_hd set
			        status = 'V',
		        void_user_id = #USER_ID#,
		        void_date = sysdate
		    where  rcl_no = #RCL_NO#          
	</update>   	
	<!-- Queries for function assign_sid_awb_no -->
	<select id ="sqlPkgAcptSidGetAwb" parameterClass="java.lang.String" resultClass="java.util.HashMap">
		select TO_CHAR(awb_date,'DDMONYY') AWB_DATE, car_yn		    
		    from   awb
		    where  awb_no = #AWB_NO#
		    and    awb_type = 'E'
		    and    awb_closed_yn = 'N'
	</select>
	<update id="sqlPkgAcptSidUpdAwb" parameterClass="java.util.HashMap">		    
		update awb set
			       ACCEPT_MODE = 'LDS'
			    where awb_no = #AWB_NO#
			    and   awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')		            
	</update>
	<update id="sqlPkgAcptUpdExpSid" parameterClass="java.util.HashMap">		    
		update exp_sid set
	        awb_no = #AWB_NO#,
	        awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')
	        lm_user_id = #LM_USER_ID#
	    where sid_no = #SID_NO#
	</update>	  
	<select id="sqlPkgAcptGetDexpRclBrkdn" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		select 'X'	        
	        from   exp_rcl_brkdn t1
	        where  uld_key = #ULD_KEY#
	        and    exists (select null
	                       from   exp_pre_rcl_brkdn t2
	                       where  t2.pre_rcl_no = #PRE_RCL_NO#
	                       and    t2.awb_no = t1.awb_no)
			and exists (select null
	                       from   exp_rcl_hd t2
	                       where  t2.rcl_no = t1.rcl_no
	                       and    t2.status = 'S')
	        and    rownum = 1
     </select>   
	       
	<!--  Queried for function accpt_obc -->   
	<select id="sqlPkgAcptObcGetTagDtl" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select t1.tag_no TAG_NO, t2.tag_pcs TAG_PCS, t3.tag_wt TAG_WT, t4.rmk RMK
		            from   (select column_value tag_no, rownum r1
		                    from   table(pkg_common.inlist(#TAG_LIST#))) t1,
		                   (select column_value tag_pcs, rownum r2
		                    from   table(pkg_common.inlist(#PCS_LIST#))) t2,
		                   (select column_value tag_wt, rownum r3
		                    from   table(pkg_common.inlist(#WT_LIST#))) t3,
		                   (select column_value rmk, rownum r4
		                    from   table(pkg_common.inlist_rmk(#RMK_LIST#))) t4
		            where  t1.r1 = t2.r2
		            and    t2.r2 = t3.r3
		            and    t3.r3 = t4.r4
	</select>
	<select id="sqlPkgAcptObcGetItmDtl" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">						
		select t1.itm_code ITM_CODE, t2.sec_pcs SEC_PCS, t3.sec_wt SEC_WT, t4.sec_payable_by SEC_PAYABLE_BY
		            from   (select column_value itm_code, rownum r1
		                    from   table(pkg_common.inlist(#ITM_LIST#))
							where  column_value is not null) t1,
		                   (select column_value sec_pcs, rownum r2
		                    from   table(pkg_common.inlist(#SEC_PCS_LIST#))
							where  column_value is not null) t2,
		                   (select column_value sec_wt, rownum r3
		                    from   table(pkg_common.inlist(#SEC_WT_LIST#))
							where  column_value is not null) t3,
		                   (select column_value sec_payable_by, rownum r4
		                    from   table(pkg_common.inlist_rmk(#SEC_PAYABLE_BY_LIST#))
							where  column_value is not null) t4
		            where  t1.r1 = t2.r2
		            and    t2.r2 = t3.r3
		            and    t3.r3 = t4.r4    
	</select>
	<select id="sqlPkgAcptObcGetSum" parameterClass="java.lang.String"	resultClass="java.lang.String">					
		select nvl(sum(column_value), 0) as "SUM"
		        from   table(pkg_common.inlist(#LIST#))				
		        where  column_value is not null  
	</select>				
	<select id="sqlPkgAcptObcGetUldInv" parameterClass="java.lang.String" resultClass="java.util.HashMap">
		select owned_inv, cfm_status                
		                from   uld_inventory
		                where  uld_key = #ULD_KEY#    
	</select>
	<update id="sqlPkgAcptObcUpdUldInv" parameterClass="java.util.HashMap">								
		update uld_inventory set
		                        owned_inv = 'Y',
		                        cfm_status = 'CONFIRMED',                        
		                        loc_code = #LOC_CODE#,
		                        ENTRY_TIME = sysdate
		                    where uld_key = #ULD_KEY#
	</update>
	<insert id="sqlPkgAcptObcInsUldInv" parameterClass="java.util.HashMap">										
		insert into uld_inventory(uld_key, flt_type, flt_key, flt_date, loc_code, owner_id,strg_date,agent_inv, cfm_status,
					    	lm_user_id, lm_date)
						values (#ULD_KEY#, 'E', #FLT_KEY#, TO_DATE(#FLT_DATE#,'DDMONYY'), #LOC_CODE#, '---', sysdate, 'N', 'CONFIRMED',
							#LM_USER_ID#, sysdate)    
	</insert>					
	<insert id="sqlPkgAcptObcInsRclHd" parameterClass="java.util.HashMap">					
		insert into exp_rcl_hd(rcl_no, rcl_date, awb_no, awb_dest, awb_content, ppk_type, accpt_mode, carr_code, rcl_pcs, rcl_wt, cr_user_id, cr_date, lm_user_id, lm_date,
						cust_no, flt_key, flt_date, truck_no, spl_code1, spl_code2, spl_code3, spl_code4, spl_code5, spl_code6, spl_code7, spl_code8, spl_code9,sec_check)
					values (#RCL_NO#, sysdate, #AWB_NO#, #DEST#, 'OUTBOUND OBC', 'B', 'LOB', #CARR_CODE#, NVL(#RCL_PCS#,0), NVL(#RCL_WT#,0), #LM_USER_ID#, sysdate, #LM_USER_ID#, sysdate,
						#AGENT_CODE#, #FLT_KEY#, TO_DATE(#FLT_DATE#,'DDMONYY'), #TRUCK_NO#, #SPL_CODE1#, #SPL_CODE2#, #SPL_CODE3#, #SPL_CODE4#, #SPL_CODE5#, #SPL_CODE6#, #SPL_CODE7#, #SPL_CODE8#, #SPL_CODE9#,'Y')          
	</insert>
	<select id="sqlPkgAcptObcGetAwbDate" parameterClass="java.lang.String" resultClass="java.lang.String">				
			select TO_CHAR(awb_date,'DDMONYY') AWB_DATE from  exp_rcl_hd where rcl_no = #RCL_NO#
	</select>
	<insert id="sqlPkgAcptObcGetRclDtl" parameterClass="java.util.HashMap">
		insert into exp_rcl_dtl(rcl_no, doc_line_no, ppk_type, loc_code, uld_key, contr_code, pcs, gross_wt, tare_wt, net_wt, cr_user_id, cr_date, lm_user_id, lm_date)
				values (#RCL_NO#, 1, 'B', #LOC_CODE#, #ULD_KEY#, #CONTR_CODE#, #PCS#, #GROSS_WT#, #TARE_WT#, #NET_WT#, #LM_USER_ID#, sysdate, #LM_USER_ID#, sysdate)
	</insert>
	<insert id="sqlPkgAcptObcInsRclobc" parameterClass="java.util.HashMap" >
		insert into exp_rcl_obc(rcl_no, tag_no, tag_pcs, tag_wt, rmk, cr_user_id, cr_date, lm_user_id, lm_date)
		            values (#RCL_NO#, #TAG_NO#, #TAG_PCS#, #TAG_WT#, #RMK#, #LM_USER_ID#, sysdate, #LM_USER_ID#, sysdate)
	</insert>						
	<insert id="sqlPkgAcptObcInsExpCar" parameterClass="java.util.HashMap">     
		insert into exp_car(awb_no, awb_date, awb_prfx, accept_mode, handler_code, catalog, carr_code, origin, dest,
					pcs, wt, content, agent_code, agent_name, security_option,
					spl_code1, spl_code2, spl_code3, spl_code4, spl_code5, spl_code6, spl_code7, spl_code8, spl_code9,
					cr_user_id, cr_date, lm_user_id, lm_date, sec_agent_name, sec_rc_code, sec_kc_code, sec_rmk, shpr_name)
				values (#AWB_NO#, NVL(TO_DATE(#AWB_DATE#,'DDMONYY'),sysdate), substr(#AWB_NO#, 1, 3), 'LOB', #ECT_HANDLER#, 'EO', #CARR_CODE#, #ORIGIN#, #DEST#,
					NVL(#PCS#,0), NVL(#WT#,0), 'OUTBOUND OBC', #AGENT_CODE#, #AGENT_NAME#, 'FREIGHTER',
					nvl(#SPL_CODE1#, 'OBC'), #SPL_CODE2#, #SPL_CODE3#, #SPL_CODE4#, #SPL_CODE5#, #SPL_CODE6#, #SPL_CODE7#, #SPL_CODE8#, #SPL_CODE9#,
					#LM_USER_ID#, sysdate, #LM_USER_ID#, sysdate, #SEC_AGENT_NAME#, #SEC_RA_CODE#, #SEC_KC_CODE#, #SEC_RMK#, #SEC_SHPR_NAME#)            
	</insert>			
	<insert id="sqlPkgAcptObcIncRclSecChk" parameterClass="java.util.HashMap">
		insert into exp_rcl_sec_chk_dtl(rcl_no, doc_line_no, sc_itm_code, sc_pcs, sc_wt, sc_paid_by, cr_user_id, cr_date, lm_user_id, lm_date, tr_type, tr_status)
					values (#RCL_NO#, #DOC_LINE_NO#, #ITM_CODE#, NVL(#SEC_PCS#,0), NVL(#SEC_WT#,0), #SEC_PAYABLE_BY#, #LM_USER_ID#, sysdate, #LM_USER_ID#, sysdate, 'T', 'T')            
	</insert>			
	<insert id="sqlPkgAcptObcInsExpCarSec" parameterClass="java.util.HashMap">
		insert into exp_car_sec(awb_no, awb_date, doc_line_no, itm_code, pcs, wt, payable_by, cr_user_id, cr_date, lm_user_id, lm_date)
					values (#AWB_NO#, NVL(TO_DATE(#AWB_DATE#,'DDMONYY'),sysdate), #DOC_LINE_NO#, #ITM_CODE#, NVL(#SEC_PCS#,0), NVL(#SEC_WT#,0), #SEC_PAYABLE_BY#, #LM_USER_ID#, sysdate, #LM_USER_ID#, sysdate)      
	</insert>				
	<insert id="sqlPkgAcptObcInsExpPman" parameterClass="java.util.HashMap"> 
		insert into exp_pmanifest_awb(flt_key, flt_date, unldg_pt,flt_type ,awb_no, awb_date, group_no, bulk_pcs, bulk_wt, shp_type, cr_user_id, cr_date, lm_user_id, lm_date)
				values (#FLT_KEY#, NVL(TO_DATE(#FLT_DATE#,'DDMONYY'),sysdate), #DEST#, 'E', #AWB_NO#, NVL(TO_DATE(#AWB_DATE#,'DDMONYY'),sysdate), 1, NVL(#PCS#,0), NVL(#WT#,0), 'OBC', #LM_USER_ID#, sysdate, #LM_USER_ID#, sysdate)        
	</insert>	
	<insert id="sqlPkgAcptObcInsExpUld" parameterClass="java.util.HashMap">
		insert into exp_pmanifest_uld(flt_key, flt_date, flt_type ,uld_bt_no, contr_code, ppk_type, BLDUP_COMPLETE, unldg_pt, group_no, gross_wt, tare_wt, shp_type,
						cr_user_id, cr_date, lm_user_id, lm_date,TRANSIT_FLG,HDLG_MODE)
					values (#FLT_KEY#, NVL(TO_DATE(#FLT_DATE#,'DDMONYY'),sysdate), 'E', #ULD_BT_NO#, #CONTR_CODE#, 'B', 'N', #DEST#, '97', NVL(#GROSS_WT#,0), NVL(#TARE_WT#,0), 'OBC',
						#LM_USER_ID#, sysdate, #LM_USER_ID#, sysdate,(SELECT TRANSIT_FLG FROM ULD_INVENTORY WHERE ULD_KEY=#ULD_BT_NO#),
						(SELECT HANDLING_MODE FROM ULD_INVENTORY WHERE ULD_KEY=#ULD_BT_NO#))                
	</insert>
	<update id="sqlPkgAcptObcUpdExpuld" parameterClass="java.util.HashMap">				
		update exp_pmanifest_uld set
					        gross_wt = gross_wt + #WT#
					    where  flt_key = #FLT_KEY#
					    and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
					    and    uld_bt_no = #ULD_BT_NO#
	</update>					
	<insert id="sqlPkgAcptObcInsUldAwb" parameterClass="java.util.HashMap">
		insert into exp_pmanifest_uld_awb(flt_key, flt_date, uld_bt_no, unldg_pt, awb_no, awb_date, assigned_pcs, assigned_wt, cr_user_id, cr_date, lm_user_id, lm_date)
				values (#FLT_KEY#, NVL(TO_DATE(#FLT_DATE#,'DDMONYY'),sysdate), #ULD_BT_NO#, #DEST#, #AWB_NO#,NVL( TO_DATE(#AWB_DATE#,'DDMONYY'),sysdate), NVL(#PCS#,0), NVL(#WT#,0), #LM_USER_ID#, sysdate, #LM_USER_ID#, sysdate)          
	</insert>	
	<select id="sqlPkgAcptObcGetUnldingPt" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		select UNLDG_PT from exp_pmanifest_uld where FLT_KEY = #FLT_KEY# and FLT_DATE = TO_DATE(#FLT_DATE#, 'DDMONYY') and ULD_BT_NO= #ULD_BT_NO# and FLT_TYPE= 'E'
	</select>	
	<update id="sqlPkgAcptObcUpdAwbInv" parameterClass="java.util.HashMap">
		update awb_inventory
				set flt_key = #FLT_KEY#,
					flt_date = NVL(TO_DATE(#FLT_DATE#,'DDMONYY'),sysdate),
					uld_key = #ULD_BT_NO#,
					flt_type = 'E',
					ref_tr_no = #ULD_BT_NO#,
					ref_tr_type = 'EF',
					ref_tr_date = sysdate,
					ref_doc_line_no = 1,
					ref_tr_event = 'EFP',
					lm_date = sysdate,
					lm_user_id = #LM_USER_ID#
				where  awb_no = #AWB_NO# and awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')    
	</update>	
	<parameterMap id="pkgAcptGetAgentCodeMap" class="java.util.HashMap">
		<parameter property="STATUS" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="OUT" />
		<parameter property="AGENT_NAME" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="IN" />	
		<parameter property="IATA_CODE" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="IN" />
		<parameter property="AGENT_CODE" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="OUT" />							
	</parameterMap>	
	<procedure id="sqlPkgAcptGetAgentCode" parameterMap="pkgAcptGetAgentCodeMap">
		{ ? = call pkg_exp_val.get_agent_code(?,?,?)}
	</procedure>
	<!-- Queries for  function val_local_transfer -->
	<select id="sqlPkgAcptLclGetOwnedCar" parameterClass="java.lang.String" resultClass="java.lang.String">	
		select nvl(owned_carr, 'N') OWNED_CARR	        
	        from   mast_carrier
	        where  code = #CARR_CODE#
	</select>	  
	<select id="sqlPkgAcptLclGetFltCar" parameterClass="java.lang.String" resultClass="java.util.HashMap">      
		select flt_key, carr_code	            
			            from   uld_inventory
			            where  uld_key = #ULD_KEY#
 	</select>
 	<select id="sqlPkgAcptLclGetAwbNo" parameterClass="java.lang.String" resultClass="java.lang.String">			               
		select awb_no	            
			            from   awb_inventory t1
			            where  uld_key = #ULD_KEY#
			            and    exists (select null
			                           from   exp_pmanifest_awb t2
			                           where  t2.awb_no = t1.awb_no
			                           and    t2.awb_date = t1.awb_date)
			            and    rownum = 1       
	</select>
	<select id="sqlPkgAcptLclGetAwbinv" parameterClass="java.util.HashMap" resultClass="java.lang.String">			            
		select 'x'	            
			            from   awb_inventory inv
			            JOIN AWB awb ON UPPER(awb.AWB_NO) = UPPER(inv.AWB_NO) 
						AND UPPER (awb.awb_date) = UPPER (inv.awb_date)						  
			            where  inv.awb_no = #AWB_NO#
			            and    inv.awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')				           
			            and    rownum = 1
	</select>
	<select id="sqlPkgAcptGetCarrCd" parameterClass="java.util.HashMap" resultClass="java.lang.String">			            
		<![CDATA[select inv.carr_code	            
			            from   awb_inventory inv
			            JOIN AWB awb ON UPPER(awb.AWB_NO) = UPPER(inv.AWB_NO) 
						AND UPPER (awb.awb_date) = UPPER (inv.awb_date)						  
			            where  inv.awb_no = #AWB_NO#
			            and    inv.awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')			              
			            and    inv.carr_code <> #CARR_CODE#
			            and    rownum = 1 ]]>
	</select>
	<select id="sqlPkgAcptGetNonPmanPcs" parameterClass="java.util.HashMap" resultClass="java.lang.String">			                          
		select non_pman_pcs                
		                from   awb
		                where  awb_no = #AWB_NO#
		                and    awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')		                
	</select>
	<select id="sqlPkgAcptLclGetFlt" parameterClass="java.util.HashMap" resultClass="java.lang.String">		                              
		select 'x'	            
			            from   awb_inventory inv
			            JOIN AWB awb ON UPPER(awb.AWB_NO) = UPPER(inv.AWB_NO) 
						AND UPPER (awb.awb_date) = UPPER (inv.awb_date)						  
			            where  inv.awb_no = #AWB_NO#
			            and    inv.awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')
			            and    inv.flt_key is not null 
	</select>
	<select id="sqlPkgAcptLclGetUld" parameterClass="java.util.HashMap" resultClass="java.lang.String">			            
		select 'x'	            
			            from   awb_inventory inv
			            JOIN AWB awb ON UPPER(awb.AWB_NO) = UPPER(inv.AWB_NO) 
						AND UPPER (awb.awb_date) = UPPER (inv.awb_date)						
			            where  inv.awb_no = #AWB_NO#
			            and    inv.awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')	
			            and    inv.uld_key is not null
			            and    rownum = 1      
	</select>				            
	<!-- Queries for the Package PKG_EXP_ACPT ends -->
	
	<!-- MarkUp Added By Mithun KK Starts Here -->
	<!-- Date	: 24-03-2011 -->
	<!-- Queries for the package PKG_EXP starts here -->
	
	<!-- Date	: 24-03-2011 -->
	<select id="sqlPkgExpGetCustName" parameterClass="java.lang.String" resultClass="java.lang.String">
		select code_desc
		from cust_company
		where code = #CODE#
	</select>
	
	<select id="sqlPkgExpGetCarrHandler" parameterClass="java.lang.String" resultClass="java.util.HashMap">
	 	select nvl(owned_carr,'N')
        from mast_carrier
        where code = #CODE#
	</select>
	
	<!-- Date	: 25-03-2011 -->
	<insert id="sqlPkgExpInsChkoutHd" parameterClass="java.util.HashMap">
		insert into exp_chkout_hd(flt_key, flt_date, osi_rmk, cr_user_id, cr_date, lm_user_id, lm_date)
		values (#FLT_KEY#, TO_DATE(#FLT_DATE#,'DDMONYY'), #OSI_RMK#, #USER_ID#, sysdate, #USER_ID#, sysdate)		
	</insert>
	
	<update id="sqlPkgExpUpdChkoutHd" parameterClass="java.util.HashMap">
		update exp_chkout_hd set
        	osi_rmk = #OSI_RMK#
        where flt_key = #FLT_KEY# and flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
	</update>
	
	<insert id="sqlPkgExpInsChkoutDtl" parameterClass="java.util.HashMap">
		insert into exp_chkout_dtl(flt_key, flt_date, uld_key, eic_ind, empty_ind, cr_user_id, cr_date, lm_user_id, lm_date)
   		values (#FLT_KEY#, TO_DATE(#FLT_DATE#,'DDMONYY'), #ULD_KEY#, NVL(#EIC_IND#,'N'), NVL(#EMPTY_IND#,'N'), #USER_ID#, sysdate, #USER_ID#, sysdate)
	</insert>
	
	<update id="sqlPkgExpUpdChkoutDtl" parameterClass="java.util.HashMap">
		update exp_chkout_dtl set
            eic_ind = #EIC_IND#, empty_ind = #EMPTY_IND#
        where flt_key = #FLT_KEY# and flt_date = TO_DATE(#FLT_DATE#,'DDMONYY') and uld_key = #ULD_KEY#
	</update>
	
	<delete id="sqlPkgExpDelChkoutDtl" parameterClass="java.util.HashMap">
		delete from exp_chkout_dtl
        where flt_key = #FLT_KEY# and flt_date = TO_DATE(#FLT_DATE#,'DDMONYY') and uld_key = #ULD_KEY#
	</delete>
	
	<update id="sqlPkgExpUpdExpDocRecd" parameterClass="java.util.HashMap">
		update exp_doc_recd set 
		FWB_FRZ_YN = 'Y', FWB_FRZ_DATE = sysdate, LM_USER_ID = #USER_ID#, LM_DATE = sysdate
		where awb_no = #AWB_NO# and awb_date = TO_DATE(#AWB_DATE#,'DDMONYY') and FWB_FRZ_YN = 'N'
		
	</update>
	
	<select id="sqlPkgExpGetMaxAwbDate" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		select max(awb_date) from exp_car where awb_no = #AWB_NO#
	</select>	
	
	<!-- Queries for the package PKG_EXP ends here -->
	
	<!-- Date	: 25-03-2011 -->
	<!-- Queries for the package PKG_EXP_ULD starts here -->
	
	<select id="sqlPkgExpUldGetExpFltUld" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		select 'X'
	    from exp_flt_uld
	    where flt_key = #FLT_KEY# and flt_date = TO_DATE(#FLT_DATE#,'DDMONYY') and uld_key = #ULD_KEY#
	</select>
	
	<select id="sqlPkgExpUldGetInvUldSts" parameterClass="java.lang.String" resultClass="java.lang.String">
		select empty_flg
	    from uld_inventory
	    where uld_key = #ULD_KEY# and cfm_status = 'CONFIRMED'
	</select>
	
	<select id="sqlPkgExpUldGetContrCode" parameterClass="java.lang.String" resultClass="java.lang.String">
		select contr_code 
		from uld_type_contr 
		where uld_type = substr(#ULD_KEY#, 1, 3) and
		1=(select count(contr_code) 
			from uld_type_contr 
			HAVING uld_type = substr(#ULD_KEY#, 1, 3) 
			GROUP BY uld_type)
	</select>
	
	<parameterMap id="valUldContCodeParamMap" class="java.util.HashMap">
		<parameter property="STATUS" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="OUT" />
		<parameter property="ULD_KEY" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="IN" />
		<parameter property="CONTR_CODE" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="IN" />				
	</parameterMap>
	
	<procedure id="sqlPkgExpValUldContCode" parameterMap="valUldContCodeParamMap">
		{ ? = call pkg_exp_val.val_uld_cont_code(?, ?)}
	</procedure>
	
	<parameterMap id="valUldAcftCompParamMap" class="java.util.HashMap">
		<parameter property="STATUS" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="OUT" />
		<parameter property="FLT_KEY" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="IN" />
		<parameter property="FLT_DATE" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="IN" />
		<parameter property="ULD_TYPE" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="IN" />
		<parameter property="CONTR_CODE" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="IN" />				
	</parameterMap>
	
	<procedure id="sqlPkgExpValUldAcftComp" parameterMap="valUldAcftCompParamMap">
		{?= call pkg_exp_val.val_uld_acft_compatible(?, ?, ?, ?)}
	</procedure>
	
	<parameterMap id="valFltDestParamMap" class="java.util.HashMap">
		<parameter property="STATUS" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="OUT" />	
		<parameter property="FLT_KEY" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="IN" />
		<parameter property="FLT_DATE" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="IN" />
		<parameter property="UNLDG_PT" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="IN" />			
	</parameterMap>
	
	<procedure id="sqlPkgExpValFltDest" parameterMap="valFltDestParamMap">
		{ ? = call pkg_exp_val.val_flight_dest(?, ?, ?)}
	</procedure>
	
	<parameterMap id="valFltCarrCodeParamMap" class="java.util.HashMap">
		<parameter property="CARR_CODE" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="OUT" />	
		<parameter property="FLT_KEY" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="IN" />
		<parameter property="FLT_DATE" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="IN" />			
	</parameterMap>
	
	<procedure id="sqlPkgExpValFltCarrCode" parameterMap="valFltCarrCodeParamMap">
		{? = call pkg_exp_val.get_flt_carr_code(?, ?)}
	</procedure>
	
	<parameterMap id="valUltTareWtParamMap" class="java.util.HashMap">
		<parameter property="TARE_WT" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="OUT" />
		<parameter property="ULD_KEY" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="IN" />
		<parameter property="CONTR_CODE" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="IN" />				
	</parameterMap>
	
	<procedure id="sqlPkgExpValUltTareWt" parameterMap="valUltTareWtParamMap">
		{ ? = call pkg_exp_val.get_uld_tare_weight(?, ?)}
	</procedure>
	
	<!-- Date	: 25-03-2011 -->
	
	<insert id="sqlPkgExpUldInsExpFltUld" parameterClass="java.util.HashMap">
		insert into exp_flt_uld(flt_key, flt_date,flt_type, uld_key, unldg_pt, contr_code, 
			gross_wt, tare_wt, net_wt, empty_yn, source, remarks, del_yn, 
			cr_user_id, cr_date, lm_user_id, lm_date,uld_type)
	    values (#FLT_KEY#, TO_DATE(#FLT_DATE#,'DDMONYY'),'E', #ULD_KEY#, #UNLDG_PT#, #CONTR_CODE#, 
	    	nvl(#GROSS_WT#,0), nvl(#TARE_WT#, 0), nvl(#GROSS_WT#,0) - nvl(#TARE_WT#, 0), 'Y', 'DLS-E', #REMARKS#, #DEL_YN#,
	    	#USER_ID#, sysdate, #USER_ID#, sysdate,#ULD_TYPE#)
	</insert>
	
	<parameterMap id="valSplCodeParamMap" class="java.util.HashMap">
		<parameter property="SPL_CODE" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="IN" />
		<parameter property="STATUS" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="OUT" />		
	</parameterMap>
	
	<procedure id="sqlPkgExpValSplCode" parameterMap="valSplCodeParamMap">
		{ call pkg_exp_val.val_spl_code(?)}
	</procedure>
	
	<insert id="sqlPkgExpUldInsExpFltLldUld" parameterClass="java.util.HashMap">
		insert into exp_flt_uld(flt_key, flt_date,flt_type, uld_key, unldg_pt, contr_code, man_pcs, 
			gross_wt, tare_wt, net_wt, civil_mail_yn, source,del_yn, 
			remarks,PMAN_YN,PPK_TYPE,SPL_CODE1,SPL_CODE2,cr_user_id, cr_date, lm_user_id, lm_date,actual_wt,est_wt,dummy_ind,uld_type,BB_IND,OBC_LOAD)
		values (#FLT_KEY#, TO_DATE(#FLT_DATE#,'DDMONYY'),'E', #ULD_KEY#, #UNLDG_PT#, #CONTR_CODE#, NVL(#PCS#,0), 
	    	nvl(#GROSS_WT#,0), nvl(#TARE_WT#, 0), nvl(#NET_WT#,0), NVL(#CIVIL_MAIL_YN#,'N'),#SOURCE#,#DEL_YN#,
	    	#REMARKS#,#PMAN_YN#,#PPK_TYPE#,#SPL_CODE1#,#SPL_CODE2#,#USER_ID#, sysdate, #USER_ID#, sysdate,#ACTUAL_WT#,#EST_WT#,#DUMMY_IND#,#ULD_TYPE#,#BREAK_BULK_YN#, NVL(#OBC_LOAD#,'N') )
	</insert>
	
	<!-- Date	: 28-03-2011 -->
	
	<parameterMap id="dlsFnlzYnParamMap" class="java.util.HashMap">
		<parameter property="STATUS" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="OUT" />	
		<parameter property="FLT_KEY" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="IN" />
		<parameter property="FLT_DATE" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="IN" />			
	</parameterMap>
	
	<procedure id="sqlPkgExpDlsFnlzYn" parameterMap="dlsFnlzYnParamMap">
		{ ? = call pkg_exp_val.dls_finalize_yn(?, ?)}
	</procedure>
	
	<select id="sqlPkgExpUldGetDlsDetails" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select t1.rec_type, replace(t2.uld_awb_no, '-', '') uld_awb_no, t3.contr_code, t4.tare_wt, t5.gross_wt, t6.spl_code1, 
			t7.spl_code2, t8.remarks, t9.unldg_pt,t10.exc_code,t11.brk_bulk,t12.net_wt,t13.spl_code,t14.final_ind
        from	
        		(select column_value rec_type, rownum r1
                from   table(pkg_common.inlist(#REC_TYPE#))) t1,
                (select column_value uld_awb_no, rownum r2
                from   table(pkg_common.inlist(#ULD_AWB_LST#))) t2,
                (select column_value contr_code, rownum r3
                from   table(pkg_common.inlist(#CNTR_COD_LST#))) t3,
                (select column_value tare_wt, rownum r4
                from   table(pkg_common.inlist(#TAR_WT_LST#))) t4,
                (select column_value gross_wt, rownum r5
                from   table(pkg_common.inlist(#GROS_WT_LST#))) t5,
                (select column_value spl_code1, rownum r6
                from   table(pkg_common.inlist(#SPL_COD1_LST#))) t6,
                (select column_value spl_code2, rownum r7
                from   table(pkg_common.inlist(#SPL_COD2_LST#))) t7,
                (select column_value remarks, rownum r8
                from   table(pkg_common.inlist_rmk(#RMRKS_LST#,'%'))) t8,
                (select column_value unldg_pt, rownum r9
                from   table(pkg_common.inlist(#UNLD_PT_LST#))) t9,
                (select column_value exc_code, rownum r10
                from   table(pkg_common.inlist(#EXC_CODE#))) t10,
                (select column_value brk_bulk, rownum r11
                from   table(pkg_common.inlist(#BRK_BULK#))) t11,
                (select column_value net_wt, rownum r12
                from   table(pkg_common.inlist(#NET_WT#))) t12,
                (select column_value spl_code, rownum r13
                from   table(pkg_common.inlist(#SHC_CODE#,'%'))) t13,
                (select column_value final_ind, rownum r14
                from   table(pkg_common.inlist(#FINAL_IND#))) t14
     	where  
     				t1.r1 = t2.r2
            and    	t2.r2 = t3.r3
            and    	t3.r3 = t4.r4
            and    	t4.r4 = t5.r5
            and    	t5.r5 = t6.r6
            and    	t6.r6 = t7.r7
            and    	t7.r7 = t8.r8
      	  	and    	t8.r8 = t9.r9	
            and    	t9.r9 = t10.r10	 
            and    	t10.r10 = t11.r11
            and    	t11.r11 = t12.r12            
            and    	t12.r12 = t13.r13
            and    	t13.r13 = t14.r14	 
	</select>
	
	<update id="sqlPkgExpUldUpdFltUld" parameterClass="java.util.HashMap">
		update exp_flt_uld set
			contr_code = #CONTR_CODE#,tare_wt = decode(sign(length(uld_key) - 8), 1, NVL(#TARE_WT#,0), 0),
            gross_wt = NVL(#GROSS_WT#,0),net_wt = NVL(#NET_WT#,0),spl_code1 = #SPL_CODE1#,spl_code2 = #SPL_CODE2#,EXC_CODE = #EXC_CODE#,
            BB_IND = #BRK_BULK#,remarks = #REMARKS#,SPL_CODE = #SPL_CODE#,FINALIZE_IND = #FINAL_IND#, LM_USER_ID = #LM_USER_ID#, LM_DATE = SYSDATE
       	where flt_key = #FLT_KEY# and flt_date = TO_DATE(#FLT_DATE#,'DDMONYY') and uld_key = #ULD_AWB_NO#		
	</update>	
	
	<update id="sqlPkgExpUldUpdManUld" parameterClass="java.util.HashMap">
		update exp_pmanifest_uld set
			contr_code = #CONTR_CODE#,gross_wt = NVL(#GROSS_WT#,0),BB_IND = #BRK_BULK#,
            tare_wt = decode(sign(length(uld_bt_no) - 8), 1,NVL(#TARE_WT#,0), 0),LM_USER_ID = #LM_USER_ID#, LM_DATE = SYSDATE
        where  flt_key = #FLT_KEY# and flt_date = TO_DATE(#FLT_DATE#,'DDMONYY') and uld_bt_no = #ULD_AWB_NO#		
	</update>
	
	<update id="sqlDLSUpdateULDInventory" parameterClass="java.util.HashMap">
		update uld_inventory set BB_IND = #BRK_BULK#,LM_USER_ID = #LM_USER_ID#, LM_DATE = SYSDATE  where uld_key = #ULD_AWB_NO#		
	</update>
	
	<update id="updateExpFltUldRmks" parameterClass="java.util.HashMap">
		update exp_flt_uld set
			spl_code1 = #SPL_CODE1#,spl_code2 = #SPL_CODE2#,EXC_CODE = #EXC_CODE#,
            BB_IND = #BRK_BULK#,remarks = #REMARKS#,SPL_CODE = #SPL_CODE#,FINALIZE_IND = #FINAL_IND#,LM_USER_ID = #LM_USER_ID#, LM_DATE = SYSDATE
       	where flt_key = #FLT_KEY# and flt_date = TO_DATE(#FLT_DATE#,'DDMONYY') and uld_key = #ULD_AWB_NO#		
	</update>
	
	<update id="updateExpManifestUldBBInd" parameterClass="java.util.HashMap">
		update exp_pmanifest_uld set BB_IND = #BRK_BULK#,LM_USER_ID = #LM_USER_ID#, LM_DATE = SYSDATE
        where  flt_key = #FLT_KEY# and flt_date = TO_DATE(#FLT_DATE#,'DDMONYY') and uld_bt_no = #ULD_AWB_NO#		
	</update>
	
	<update id="updateDlsGrossWtToUldInv" parameterClass="java.util.HashMap">
		update uld_inventory set GROSS_WEIGHT = NVL(#GROSS_WT#,0),contr_code = #CONTR_CODE#, BB_IND = #BRK_BULK#,LM_USER_ID = #LM_USER_ID#, LM_DATE = SYSDATE where uld_key = #ULD_AWB_NO#		
	</update>	
	
	<update id="updateDlsGrossWtToTarmacUld" parameterClass="java.util.HashMap">
		update exp_pman_tarmac_uld set gross_wt = NVL(#GROSS_WT#,0), contr_code = #CONTR_CODE#,LM_USER_ID = #LM_USER_ID#,
		LM_DATE = SYSDATE where  flt_key = #FLT_KEY# and flt_date = TO_DATE(#FLT_DATE#,'DDMONYY') and uld_bt_no = #ULD_AWB_NO#		
	</update>
	
	
	<update id="sqlPkgExpUldUpdManAwb" parameterClass="java.util.HashMap">
		update exp_pmanifest_awb set
			dls_remarks = upper(#REMARKS#)
        where  flt_key = #FLT_KEY# and flt_date = TO_DATE(#FLT_DATE#,'DDMONYY') and unldg_pt = #UNLDG_PT# and awb_no = #ULD_AWB_NO#	
	</update>
	
	<update id="sqlPkgExpUldUpdDlsHd" parameterClass="java.util.HashMap">
		update exp_dls_hd set TR_TYPE = 'MTDLS',
            osi_rmk = #OSI_RMK#,osi_rmk_2 = #OSI_RMK2#
        where dls_no = #DLS_NO#	
	</update>
	
	<select id="sqlPkgExpUldGetDlsNo" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		select dls_no
        from   exp_dls_hd
        where  flt_key = #FLT_KEY# and flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
	</select>
	
	<select id="sqlPkgExpUldGenDlsNo" resultClass="java.lang.String">		
		SELECT to_char(EXP_DLS_HD_SEQ.NEXTVAL) FROM dual
	</select>
	
	<insert id="sqlPkgExpUldInsDlsHd" parameterClass="java.util.HashMap">
		insert into exp_dls_hd(TR_TYPE,dls_no, flt_key, flt_date, cr_user_id, cr_date, lm_user_id, lm_date)
        values ('MTDLS',#DLS_NO#, #FLT_KEY#, TO_DATE(#FLT_DATE#,'DDMONYY'), #USER_ID#, sysdate, #USER_ID#, sysdate)
	</insert>
	
	<parameterMap id="valCarrRhoIdParamMap" class="java.util.HashMap">
		<parameter property="RHO_ID" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="OUT" />
		<parameter property="CARR_CODE" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="IN" />				
	</parameterMap>	
	<procedure id="sqlPkgExpGetCarrRhoId" parameterMap="valCarrRhoIdParamMap">
		{ ? = call pkg_exp_val.val_bt_no(?)}
	</procedure>
	
	<!-- Date	: 29-03-2011 -->
	
	<insert id="sqlPkgExpUldInsExpChkoutHd" parameterClass="java.util.HashMap">
		insert into exp_chkout_hd(flt_key, flt_date, carr_code, rho_id, cr_user_id,
			cr_date, lm_user_id, lm_date,flt_type)
	    values (#FLT_KEY#, TO_DATE(#FLT_DATE#,'DDMONYY'), #CARR_CODE#, #RHO_ID#, #USER_ID#, sysdate, #USER_ID#, sysdate,'E')
	</insert>
	
	<insert id="sqlPkgExpUldInsUldInvntry" parameterClass="java.util.HashMap">
		insert into uld_inventory(
uld_key, flt_type, flt_key, flt_date, 
			loc_code, owner_id, strg_date, agent_inv, cfm_status,
			lm_user_id, lm_date)
		values (#ULD_KEY#, 'E', #FLT_KEY#, TO_DATE(#FLT_DATE#,'DDMONYY'), 
			null, '---', sysdate, 'N', 'CONFIRMED',
			#USER_ID#, sysdate)
	</insert>
	
	<insert id="sqlPkgExpUldInsChkoutDtl" parameterClass="java.util.HashMap">
		insert into exp_chkout_dtl(flt_key, flt_date, uld_key, contr_code, eic_ind, 
			empty_ind, cr_user_id, cr_date, lm_user_id, lm_date,loc_code,TR_TYPE)
		values (#FLT_KEY#, TO_DATE(#FLT_DATE#,'DDMONYY'), #ULD_KEY#, #CONTR_CODE#, NVL(#EIC_IND#,'N'), 
			NVL(#EMPTY_IND#,'N'), #USER_ID#, sysdate, #USER_ID#, sysdate,#LOC_CODE#,#TR_TYPE#)
	</insert>
	<select id="checkPkgExpUldInsChkoutDtl" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM EXP_CHKOUT_DTL WHERE FLT_KEY = #FLT_KEY# AND FLT_DATE = TO_DATE(#FLT_DATE#,'DDMONYY') AND ULD_KEY = #ULD_KEY#
	</select>
	<update id="updatePkgExpUldInsChkoutDtl" parameterClass="java.util.HashMap">
		UPDATE EXP_CHKOUT_DTL SET LOC_CODE = #LOC_CODE#, contr_code=#CONTR_CODE# WHERE FLT_KEY = #FLT_KEY# AND FLT_DATE = TO_DATE(#FLT_DATE#,'DDMONYY') AND ULD_KEY = #ULD_KEY#
	</update>	
	<select id="sqlPkgExpUldGetUld" parameterClass="java.lang.String" resultClass="java.lang.String">
		 select 'X'
         from uld_inventory
         where uld_key = #ULD_KEY#		
	</select>
	
	<select id="sqlPkgExpUldGetChkoutHd" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		select 'X'
        from exp_chkout_hd
        where flt_key = #FLT_KEY# and flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
	</select>
	
	<insert id="sqlPkgExpUldInsFltUld" parameterClass="java.util.HashMap">
		insert into exp_flt_uld(flt_key, flt_date, uld_key, unldg_pt, contr_code, gross_wt, 
			tare_wt, net_wt, source, cr_user_id, cr_date, lm_user_id, lm_date, flt_type)
		values (#FLT_KEY#, TO_DATE(#FLT_DATE#,'DDMONYY'), #ULD_KEY#, #UNLDG_PT#, #CONTR_CODE#, NVL(#GROSS_WT#,0), 
			NVL(#TARE_WT#,0), NVL(#GROSS_WT#,0) - NVL(#TARE_WT#,0), 'TARMAC', #USER_ID#, sysdate, #USER_ID#, sysdate, 'E')
	</insert>
	
	<select id="sqlPkgExpUldGetManfAwb" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		select count(1)
        from exp_pmanifest_awb
        where flt_key = #FLT_KEY# and flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
	</select>
	
	<select id="sqlPkgExpUldGetTtlUld" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		select count(1)
        from exp_flt_uld
        where flt_key = #FLT_KEY# and flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
	</select>
	
	<select id="sqlPkgExpUldGetAwbSplCodes" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select t2.awb_no AWB_NO, TO_CHAR(t2.awb_date,'DDMONYY') AWB_DATE, t1.ppk_type PPK_TYPE
		from exp_pmanifest_uld_awb t1, exp_car t2
		where t1.awb_no = t2.awb_no and t1.awb_date = t2.awb_date and t1.flt_key = #FLT_KEY#
			and t1.flt_date = TO_DATE(#FLT_DATE#,'DDMONYY') and t1.uld_bt_no = #ULD_KEY#
	</select>	
	<select id="sqlPkgExpUldGetSplCodes" parameterClass= "java.lang.String" resultClass="java.lang.String">
		select code SPL_CODE from (
        	select code 
			    from   mast_spl_hand_code 
			    where  code in (select column_value from table (pkg_common.inlist(#SPL_LIST#))) 
          	    order by priority desc)           
		where <![CDATA[rownum < 3]]>
	</select>	
	
	<!-- Queries for the package PKG_EXP_ULD ends here -->
	
	<!-- MarkUp Added By Mithun KK Ends Here -->
	<!-- Queries for trigger trg_biu_exp_pmanifest_awb -->
	<insert id="sqlAiExpPmanUldIns" parameterClass="java.util.HashMap">
		insert into exp_tally_sheet
               (ref_no,flt_key, flt_date, trans_type, uld_key,  dest, content, rcl_no, unldg_pt, cr_user_id,
                cr_date, lm_user_id, lm_date,awb_no, awb_date,TR_NO,PRINT_IND)
        values (#REF_NO#,#FLT_KEY#, TO_DATE(#FLT_DATE#,'DDMONYY'), #TRANS_TYPE#, #ULD_BT_NO#, #DEST#, #CONTENT# ,#RCL_NO#, #UNLDG_PT#, #LM_USER_ID#,
                sysdate, #LM_USER_ID#, sysdate,#AWB_NO#,TO_DATE(#AWB_DATE#,'DDMONYY'),#TR_NO#,'N')
    </insert>
    <delete id="sqlDelExpPmanFbl" parameterClass="java.util.HashMap">
    	delete from exp_pman_fbl
			where  flt_key = #FLT_KEY# and flt_date = TO_DATE(#FLT_DATE#,'DDMONYY') and awb_no = #AWB_NO#
    </delete>
    <select id="sqlBiuAwbExistAwbData" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
    	select AWB_NO, TO_CHAR(AWB_DATE,'DDMONYY') AWB_DATE, AWB_TYPE, PPK_TYPE, CARR_CODE, CAR_YN,
    			PCS, WT, RCL_PCS, RCL_WT, RCL_PPK_PCS, RCL_PPK_WT, RCL_MIX_PCS, RCL_MIX_WT, RCL_BULK_PCS,
    			RCL_BULK_WT, PMAN_PCS, PMAN_WT, NON_PMAN_PCS, NON_PMAN_WT, NVL(PMAN_BULK_PCS,0) as PMAN_BULK_PCS, NVL(PMAN_BULK_WT,0) as PMAN_BULK_WT, NVL(PMAN_MIX_PCS,0) as PMAN_MIX_PCS,
    			NVL(PMAN_MIX_WT,0) as PMAN_MIX_WT, NVL(PMAN_PPK_PCS,0) as PMAN_PPK_PCS, NVL(PMAN_PPK_WT,0) as PMAN_PPK_WT, ACCEPT_MODE
    		from awb
    			where awb_no = #AWB_NO#
					and    awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')      			
    </select>
   <update id="sqlBiuAwbUpdAWBAdd" parameterClass="java.util.HashMap">
    	update awb
					set pman_bulk_pcs = pman_bulk_pcs + NVL(#BULK_PCS#,0),
						pman_bulk_wt = pman_bulk_wt + NVL(#BULK_WT#,0),
						pman_ppk_pcs = pman_ppk_pcs + NVL(#PPK_PCS#,0),
						pman_ppk_wt = pman_ppk_wt +  NVL(#PPK_WT#,0),
						pman_mix_pcs = pman_mix_pcs + NVL(#MIX_PCS#,0),
						pman_mix_wt = pman_mix_wt + NVL(#MIX_WT#,0),
						pcs = NVL(#PCS#,pcs),
				       	wt = NVL(#WT#,wt),				       
				       	pman_pcs = NVL(#PMAN_PCS#,pman_pcs),
				       	pman_wt = NVL(#PMAN_WT#,pman_wt),
				       	non_pman_pcs = NVL(#NON_PMAN_PCS#,non_pman_pcs),
				        non_pman_wt = NVL(#NON_PMAN_WT#,non_pman_wt)
					where  awb_no = #AWB_NO#
					and    awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')					      
	</update>
	<update id="sqlBiuAwbUpdAWBCalc" parameterClass="java.util.HashMap">
      update awb set pman_pcs = pman_bulk_pcs,
                               pman_wt = pman_bulk_wt,
                               non_pman_pcs = DECODE(PCS, 0, 0, DECODE(CAR_YN, 'N', 0, (PCS-(pman_bulk_pcs)))),
                               non_pman_wt = DECODE(WT, 0, 0, DECODE(CAR_YN, 'N', 0, (WT-(pman_bulk_wt)))),
                               TR_TYPE=NVL(#TR_TYPE#,TR_TYPE)
                              where  awb_no = #AWB_NO#
                              and    awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')                               
	</update>
	<update id="sqlBiuAwbUpdAWBSub" parameterClass="java.util.HashMap">
    	update awb
					set pman_bulk_pcs = case when (pman_bulk_pcs - NVL(#BULK_PCS#,0))&lt;0 then 0 else pman_bulk_pcs - NVL(#BULK_PCS#,0) end,
						pman_bulk_wt = case when (pman_bulk_wt - NVL(#BULK_WT#,0))&lt;0 then 0 else pman_bulk_wt - NVL(#BULK_WT#,0) end,
						pman_ppk_pcs = case when (pman_ppk_pcs - NVL(#PPK_PCS#,0))&lt;0 then 0 else pman_ppk_pcs - NVL(#PPK_PCS#,0) end,
						pman_ppk_wt = case when (pman_ppk_wt - NVL(#PPK_WT#,0))&lt;0 then 0 else pman_ppk_wt - NVL(#PPK_WT#,0) end,
						pman_mix_pcs = case when (pman_mix_pcs - NVL(#MIX_PCS#,0))&lt;0 then 0 else pman_mix_pcs - NVL(#MIX_PCS#,0) end,
						pman_mix_wt = case when (pman_mix_wt - NVL(#MIX_WT#,0))&lt;0 then 0 else pman_mix_wt - NVL(#MIX_WT#,0) end,
						pcs = NVL(#PCS#,pcs),
		     		 	wt = NVL(#WT#,wt),				       
				        pman_pcs = NVL(#PMAN_PCS#,pman_pcs),
				       	pman_wt = NVL(#PMAN_WT#,pman_wt),
				       	non_pman_pcs = NVL(#NON_PMAN_PCS#,non_pman_pcs),
				        non_pman_wt = NVL(#NON_PMAN_WT#,non_pman_wt),
				        TR_TYPE=#TR_TYPE#
					where  awb_no = #AWB_NO#
					and    awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')					 
	</update>
	<select id="sqlBiuAwbCheckCarYn" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		select car_yn from awb where awb_no = #AWB_NO#
                              and    to_char(awb_date, 'DDMONYY') = TO_DATE(#AWB_DATE#,'DDMONYY')                              
	</select>
	
<!-- Queries for trigger trg_biu_exp_pmanifest_awb ends -->
	<!-- Queries for trigger TRG_EXP_PMAN_ULD_AWB_INS  -->
	<parameterMap id="pkgValidateGetFltCarrMap" class="java.util.HashMap">	
		<parameter property="tmp_flt_no" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="OUT" />		
		<parameter property="FLT_KEY" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="IN" />	
		<parameter property="FLT_CARR" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="OUT" />
		<parameter property="FLT_NO" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="OUT" />							
	</parameterMap>	
	<procedure id="sqlPkgValidateGetFltCarr" parameterMap="pkgValidateGetFltCarrMap">
		{? = call PKG_VALIDATE.GET_FLT_CARR(?,?,?)}
	</procedure>
	<parameterMap id="pkgValidateUldMap" class="java.util.HashMap">		
		<parameter property="ULD_RES" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="OUT" />
		<parameter property="ULD_BT_NO" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="IN" />	
		<parameter property="ULD_TYPE" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="OUT" />
		<parameter property="ULD_NO" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="OUT" />		
		<parameter property="ULD_CARR" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="OUT" />						
	</parameterMap>	
	<procedure id="sqlPkgValidateUld" parameterMap="pkgValidateUldMap">
		{? = call PKG_VALIDATE.VALIDATE_ULD(?,?,?,?)}
	</procedure>
	<insert id="sqlExpPmanUldInsFltMov" parameterClass="java.util.HashMap">
		INSERT INTO FLT_MOV
		  (ULD_TYPE, ULD_NO, ULD_CARR, ULD_KEY, FLT_TYPE, 
		   CARR_CODE, FLT_NO, FLT_DATE, FLT_KEY, 
		   LOC_CODE, STRG_D, STRG_MM, SURP_IND, COND_C, 
		   EIC_I, EMPTY_I, CONTR_C, RMK, TR_NO, DOC_LINE_NO,
		   TR_TYPE, CR_USER_ID, CR_DATE, 
		   LM_USER_ID, LM_DATE, SEQ_NO, TR_STATUS, EVENT_ID
		  )
		  VALUES
		  (SUBSTR(#ULD_BT_NO#,1,3), #ULD_NO#, #ULD_CARR#, #ULD_BT_NO#, #FLT_TYPE#,
		   #FLT_CARR#, #FLT_NO#, TO_DATE(#FLT_DATE#,'DDMONYY'), #FLT_KEY#,
		   #LOC_CODE#, TO_DATE(#STRG_D#,'DDMONYY'), NULL,'N',NULL,
		   #EIC_IND#,#EMPTY_IND#,#CONTR_CODE#, #RMK#, NULL, #DOC_LINE_NO#,
		   #TR_TYPE#, #CR_USER_ID#, sysdate,
		   #LM_USER_ID#, sysdate,FLT_MOV_SEQ.NEXTVAL,'A',#EVENT_ID# 
		   )
	</insert>	
	<update id="sqlAiStatPmanUpdExpFltUld" parameterClass="java.util.HashMap">
		update exp_flt_uld
			set spl_code1 = #SPL_CODE1#,
				spl_code2 = #SPL_CODE2#
			where  flt_key = #FLT_KEY#
			and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
			and    uld_key = #ULD_KEY#
	</update>
	<!-- Queries for the trigger TRG_BIUD_EXP_PMAN_ULD_AWB -->
	<insert id="sqlBiudExpPmanEdiPerfoTest" parameterClass="java.util.HashMap">
		insert into edi_perfo_test values(to_char(CURRENT_TIMESTAMP, 'ddmonyy hh24:mi:SS:FF3')||
	                    ' problem in create ULD Assign trg ' || #FLT_KEY# || ' -- ' || TO_DATE(#FLT_DATE#, 'DDMONYY') || ' -- ' || #ULD_BT_NO# || ' -- ' || 
				  #AWB_NO# || ' TAG-- ' || #TAG# || ' updated-- ' || #PCS# || ' -- ' || #WT# || ' -- ' || #CR_USER_ID#)
	</insert>
	<update id="sqlUpdExpFltUldAdd" parameterClass="java.util.HashMap">
		update exp_flt_uld
			set man_pcs = man_pcs + NVL(#ASSIGNED_PCS#,0),
				man_wt = man_wt + NVL(#ASSIGNED_WT#,0),TR_TYPE='CRUAS1',
				handling_mode=(SELECT HANDLING_MODE FROM ULD_INVENTORY WHERE ULD_KEY=#ULD_BT_NO#) 
			where  flt_key = #FLT_KEY# and flt_date = TO_DATE(#FLT_DATE#,'DDMONYY') and uld_key = #ULD_BT_NO# 
	</update>
	<update id="sqlUpdateExpFltUldDetails" parameterClass="java.util.HashMap">
		update exp_flt_uld
			set UNLDG_PT = #ULDG_PT#,
				GROSS_WT = #GRSS_WT#,
				DEL_YN = #DEL_YN#,
				PMAN_YN = #PMAN_YN#,
				PPK_TYPE = #PPK_TYPE#,
				REMARKS = #REMARKS#,
				SPL_CODE1 = #SPL_CODE1# 
			where  flt_key = #FLT_KEY# and flt_date = TO_DATE(#FLT_DATE#,'DDMONYY') and uld_key = #ULD_BT_NO#     
	</update>
	<update id="sqlUpdExpFltUldSub" parameterClass="java.util.HashMap">
		update exp_flt_uld
			set man_pcs = man_pcs - NVL(#ASSIGNED_PCS#,0),
				man_wt = man_wt - NVL(#ASSIGNED_WT#,0),TR_TYPE=#TR_TYPE#
			where  flt_key = #FLT_KEY# and flt_date = TO_DATE(#FLT_DATE#,'DDMONYY') and uld_key = #ULD_BT_NO#     
	</update>
	<insert id="sqlInsExpPmanUldAwbDel" parameterClass="java.util.HashMap">
		insert into EXP_PMANIFEST_ULD_AWB_DEL
			(FLT_KEY, FLT_DATE, ULD_BT_NO, UNLDG_PT, AWB_NO, AWB_DATE, 
			ASSIGNED_PCS, ASSIGNED_WT, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE, PPK_TYPE)
		values(#FLT_KEY#, NVL(TO_DATE(#FLT_DATE#,'DDMONYY'),sysdate), #ULD_BT_NO#, #UNLDG_PT#, #AWB_NO#, NVL(TO_DATE(#AWB_DATE#,'DDMONYY'),sysdate), 
			#ASSIGNED_PCS#, #ASSIGNED_WT#, #CR_USER_ID#, sysdate, #LM_USER_ID#, sysdate, #PPK_TYPE#)  
	</insert>			

<!--  Queries  for package TRG_EXP_RCL_DTL_BEF_INS Starts :: RANJITH -->
	
	
	<select id="sqlRclDtlBeforeInsert" parameterClass="java.lang.String" resultClass="java.util.HashMap">
		SELECT CUST_NO V_AGENT, 
			   CARR_CODE V_CARR, 
			   FLT_NO V_FLT_NO, 
			   TO_CHAR(FLT_DATE,'DDMONYY') V_FLT_DATE, 
			   FLT_KEY V_FLT_KEY, RMK V_RMK, AWB_NO V_AWB_NO, 
			TO_CHAR(AWB_DATE,'DDMONYY') V_AWB_DATE, AWB_DEST V_DEST, 
			AWB_CONTENT V_AWB_CONTENT, ACCPT_MODE V_ACCPT_MODE , PRE_RCL_NO NEW_PRE_RCL_NO, 
			TR_TYPE NEW_TR_TYPE 
		FROM 
			EXP_RCL_HD 
		WHERE 
			RCL_NO=#rcl_no#
  </select>	
   
   	<select id="sqlRclBeforeInsertUldExists" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		select count(1) from lsp_inventory where lsp_no = #lsp_no# 	
    </select>
    <select id="sqlRclDtlBeforeInsertExpAwbExists" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		select count(1) from EXP_ULD_AWB where uld_key = #NEW_ULD_KEY# and awb_no=#V_AWB_NO# and awb_date=#V_AWB_DATE#	
    </select>
    <insert id="sqlRclDtlBeforeInsertUldInsert" parameterClass="java.util.HashMap">
     INSERT INTO LSP_INVENTORY
			(LSP_NO, EMPTY_FLG, LOC_CODE, STRG_DATE, LOCKED, STATUS, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE, 
			REF_TR_NO, REF_TR_TYPE, REF_TR_EVENT, REF_TR_DATE, REF_DOC_LINE_NO, LSP_TYPE, REF_RMK)
		VALUES (#NEW_ULD_KEY#, 'N', #NEW_LOC_CODE#, SYSDATE, 'N','CONFIRMED', #NEW_LM_USER_ID#, SYSDATE, #NEW_LM_USER_ID#, SYSDATE, 
				#NEW_RCL_NO#, #NEW_TR_TYPE#, #NEW_TR_TYPE#, SYSDATE, #NEW_DOC_LINE_NO#, SUBSTR(#NEW_ULD_KEY#, 0, 1),#V_RMK#)
	</insert>
    
    <update id="sqlRclDtlBeforeInsertUldUpdate" parameterClass="java.util.HashMap">
	UPDATE LSP_INVENTORY SET
		   STATUS = 'CONFIRMED',
		   EMPTY_FLG = 'N',
		   LOC_CODE = #NEW_LOC_CODE#,
		   LM_USER_ID = #NEW_LM_USER_ID#,
		   LM_DATE = SYSDATE
		WHERE LSP_NO = #NEW_ULD_KEY#
    </update>
   
    <select id="sqlUldDtlBeforeInsert" parameterClass="java.lang.String" resultClass="java.util.HashMap">
		 SELECT EMPTY_FLG V_EMPTY_FLG, NVL(AGENT_INV, 'N') V_AGENT_INV, OWNED_INV V_OWNED_INV, OWNER_ID V_OWNER_ID
	            FROM   ULD_INVENTORY
	            WHERE  ULD_KEY = #uld_key# 	
    </select>
   
   <select id="sqlMaxDocLineBeforeInsert" parameterClass="java.util.HashMap" resultClass="java.lang.String">
   		SELECT MAX(DOC_LINE_NO) V_DOC_LINE_NO FROM SERVICE_ERR_LOG
   				where tr_no = #rcl_no# and tr_type = #tr_type#
   </select>   
    <update id="sqlRclDtlBeforeInsertUpdUldInv" parameterClass="java.util.HashMap">
		UPDATE ULD_INVENTORY
		SET CFM_STATUS = DECODE(#NEW_PPK_TYPE#, 'M', 'RCLMIXPREPACK', 'P','RCLPREPACK', 'B', 'RCLBULK'),		
		PARENT_OWNER = #V_CARR#,
                owner_id = #V_CARR#,
		FLT_NO = #V_FLT_NO#,
		FLT_DATE = TO_DATE(#V_FLT_DATE#,'DDMONYY'),
		FLT_KEY = #V_FLT_KEY#,		
		FLT_TYPE = #V_FLT_TYPE#,
		LOC_CODE = #NEW_LOC_CODE#,
		CONTR_CODE = #NEW_CONTR_CODE#,
		GROSS_WEIGHT = NVL(#NEW_GROSS_WT#,GROSS_WEIGHT), 
		<!-- BugFix :: 4808 -->
		TARE_WEIGHT = DECODE(#NEW_PPK_TYPE#, 'P', #NEW_TARE_WT#, 'M', #NEW_TARE_WT#, TARE_WEIGHT), 
		<!-- TARE_WEIGHT = NVL(#NEW_TARE_WT#,TARE_WEIGHT), UAT bugfix: 2109 -->
		LM_USER_ID = #NEW_LM_USER_ID#,
		LM_DATE = SYSDATE,
		EMPTY_FLG = 'N',
		AGENT_ID = '',
		AGENT_INV = 'N',
		OWNED_INV = 'Y',
		OFLD_FLG =  'N',
		REF_TR_NO = #NEW_RCL_NO#,
		REF_TR_TYPE = 'RC',
		REF_TR_DATE = SYSDATE,
		<!-- REF_DOC_LINE_NO = #NEW_DOC_LINE_NO#,-->
		REF_DOC_LINE_NO = '1',
		REF_LOC_FROM = #NEW_LOC_CODE#,
		REF_TR_EVENT = #NEW_TR_TYPE#,
		REF_RMK = NVL(#V_RMK#, 'INSERTED FROM RCL INSERT'),
		GEN_RMK = #V_RMK#, 
		ULD_FLOW = 'E',
		PPK_IND = DECODE(#NEW_PPK_TYPE#,'P','Y','N'),
		MIX_PPK_IND = DECODE(#NEW_PPK_TYPE#,'M','Y','N'), 
		<!-- FIRST_WT = NVL(FIRST_WT, 0) + NVL(#NEW_GROSS_WT#,0) UAT BugFix :: 4228--> 
		<!-- FIRST_WT =  NVL(#NEW_GROSS_WT#,0), :: First Wt not to be updated in Bulk --> 
		FIRST_WT =  DECODE(#NEW_PPK_TYPE#, 'P', NVL(#NEW_GROSS_WT#, 0), 'M', NVL(#NEW_GROSS_WT#, 0), FIRST_WT), 
		MAN_WT_IND = NVL(#MAN_WT_YN#,'N'),
		TR_TYPE = #NEW_TR_TYPE# ,second_wt=null,third_wt=null,MAN_WT_IND2 = 'N',MAN_WT_IND3 = 'N',
		final_weight='N',double_wgt_rslt=null,X_RAY_RES=null, X_RAY_REQ = null, 
		TRANSIT_FLG = 'N', TRANSIT_TYPE = null, ULDENTRY_MSG_RCVD_YN = 'N',
    	DIRECT_TOW = 'N',HANDLING_MODE = null, eic_flg = 'N', EIC_TYPE = null,BASE_PAL_FLG='N',BASE_PLT=null,RESV_FLG = 'N', ENTRY_TIME = sysdate		
		WHERE ULD_KEY = #NEW_ULD_KEY#
    </update>
   <update id="updateUldInv_RemoveBasePallet_FromTopPallets" parameterClass="java.util.HashMap">
		UPDATE ULD_INVENTORY
		SET  eic_flg = 'N', EIC_TYPE = null,BASE_PAL_FLG='N',BASE_PLT=null		
		WHERE BASE_PLT = #NEW_ULD_KEY#
    </update>
   
   
   <update id="sqlRclDtlBeforeInsertUpdUldInvForBulk" parameterClass="java.util.HashMap">
		UPDATE ULD_INVENTORY
		SET CFM_STATUS = DECODE(#NEW_PPK_TYPE#, 'M', 'RCLMIXPREPACK', 'P','RCLPREPACK', 'B', 'RCLBULK'),		
		LOC_CODE = #NEW_LOC_CODE#,
		CONTR_CODE = #NEW_CONTR_CODE#,
		GROSS_WEIGHT = NVL(#NEW_GROSS_WT#,GROSS_WEIGHT), 	
		TARE_WEIGHT = NVL(#NEW_TARE_WT#,TARE_WEIGHT), 	
		LM_USER_ID = #NEW_LM_USER_ID#,
		LM_DATE = SYSDATE,
		EMPTY_FLG = 'N',		
		OFLD_FLG =  'N',
		REF_TR_NO = #NEW_RCL_NO#,
		REF_TR_TYPE = 'RC',
		REF_TR_DATE = SYSDATE,		
		REF_DOC_LINE_NO = '1',
		REF_LOC_FROM = #NEW_LOC_CODE#,
		REF_TR_EVENT = #NEW_TR_TYPE#,
		REF_RMK = NVL(#V_RMK#, 'INSERTED FROM RCL INSERT'),
		GEN_RMK = #V_RMK#, 
		ULD_FLOW = 'E',		
		TR_TYPE = #NEW_TR_TYPE# ,
		X_RAY_RES = null,X_RAY_REQ = null  
		WHERE  ULD_KEY = #NEW_ULD_KEY#
	</update>
   
    <update id="sqlRclDtlBeforeInsertUpdUldRelDtl" parameterClass="java.util.HashMap">
		UPDATE ULD_REL_DTL A
			SET A.STATUS = 'RETURNED',
			A.RET_DATE = SYSDATE,
			A.RET_USER = #NEW_CR_USER_ID#,TR_TYPE='RD'
				WHERE A.ULD_KEY = #NEW_ULD_KEY#
				AND A.STATUS = 'RELEASED'
				AND A.TR_NO IN(SELECT MAX(TO_NUMBER(B.TR_NO))
								FROM ULD_REL_DTL B
									WHERE B.ULD_KEY = #NEW_ULD_KEY#)
    </update>
       
   <update id="sqlRclDtlBeforeInsertUpdAwbInv" parameterClass="java.util.HashMap">
	UPDATE AWB_INVENTORY
		SET LOCN_PCS = LOCN_PCS + #NEW_PCS#,
		LOCN_WT = LOCN_WT + #NEW_NET_WT#,
		REF_TR_NO = #NEW_RCL_NO#,
		REF_TR_TYPE = 'RC',
		REF_TR_DATE = NVL(TO_DATE(#NEW_CR_DATE#,'DDMONYY'), sysdate),
		REF_DOC_LINE_NO = #NEW_DOC_LINE_NO#,
		REF_LOC_FROM = #NEW_LOC_CODE#,
		REF_TR_EVENT = 'RC',
		REF_MOV_FROM = #NEW_LOC_CODE#
	WHERE AWB_NO = #V_AWB_NO#
		AND AWB_DATE = TO_DATE(#V_AWB_DATE#,'DDMONYY')
		AND ((#NEW_LOC_CODE# IS NULL AND LOC_CODE IS NULL) OR (LOC_CODE = #NEW_LOC_CODE#))
		<!-- Changed on 29/9/2011. Multiple rows inserted for RCL Bulk. -->
		<!-- AND FLT_TYPE = 'E' -->
		AND FLT_TYPE IS NULL
		AND FLT_KEY IS NULL
		AND FLT_DATE IS NULL		
		AND ((#NEW_LSP_NO# IS NULL AND LSP_NO IS NULL) OR (LSP_NO = #NEW_LSP_NO#))
		AND ((#NEW_ULD_KEY# IS NULL AND ULD_KEY IS NULL) OR (ULD_KEY =	#NEW_ULD_KEY#))
   </update> 
    
   <insert id="sqlRclDtlBeforeInsertAwbInv" parameterClass="java.util.HashMap">
  			INSERT INTO AWB_INVENTORY
                       (SEQ_NO,AWB_NO, AWB_DATE, CARR_CODE, SRF_NO, TRM_NO, CDIF_NO, SCH_COLL_DATE, LSP_NO, LOC_CODE, LOCN_PCS, LOCN_WT,
                        RTRV_DATE, RTRV_USER_ID, STRG_DATE, STRG_RMK, DAM_IND, PPK_IND, BULK_WT,
                        BUP_WT, ULD_KEY, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE,
                        CATALOG, CC_CODE, FLT_TYPE, FLT_DATE, FLT_NO, FLT_KEY, 
						REF_TR_NO, REF_TR_TYPE, REF_TR_DATE, REF_DOC_LINE_NO, REF_LOC_FROM,
                        REF_TR_EVENT, REF_RMK)
                VALUES (AWB_INV_SEQ.nextVal, #V_AWB_NO#, NVL(TO_DATE(TRIM(#V_AWB_DATE#),'DDMONYY'),TO_CHAR(SYSDATE,'DDMONYY')), #V_CARR#, NULL, NULL, NULL, NULL, #NEW_LSP_NO#,#NEW_LOC_CODE#, NVL(#NEW_PCS#,0), NVL(#NEW_NET_WT#,0),
                        NULL, NULL, sysdate, #V_RMK#, 'N', #NEW_PPK_TYPE#, DECODE(#NEW_PPK_TYPE#, 'B', NVL(#NEW_NET_WT#,0), 'P', 0, 'M', 0),
                        DECODE(#NEW_PPK_TYPE#, 'B', 0 , 'P', NVL(#NEW_NET_WT#,0), 'M', NVL(#NEW_NET_WT#,0)), #NEW_ULD_KEY#, #NEW_LM_USER_ID#, sysdate, #NEW_LM_USER_ID#, sysdate,
                        NULL, NULL, NULL, NULL, NULL, NULL, 
						#NEW_RCL_NO#, #NEW_TR_TYPE#, NVL(TO_DATE(#NEW_LM_DATE#,'DDMONYY'),sysdate), #NEW_DOC_LINE_NO#, NULL,
                        'RC', #V_RMK#)
   </insert>
   
   <update id="sqlRclDtlBeforeInsertUpdExpPreRclHd" parameterClass="java.util.HashMap">
		UPDATE EXP_PRE_RCL_HD
		        SET RCL_PCS = RCL_PCS + NVL(#NEW_PCS#,0),
		            RCL_WT = RCL_WT + NVL(#NEW_NET_WT#,0),
		            status = #STATUS#,
		            TR_TYPE_EVT = #TR_TYPE#
		        WHERE  PRE_RCL_NO = #NEW_PRE_RCL_NO#
    </update>
    
     <select id ="sqlRclDtlBefInsGetTTlStatus" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
    	select (rcl_wt + NVL(#NEW_NET_WT#,0)) RCL_WT, ttl_wt, status, ppk_type from exp_pre_rcl_hd where pre_rcl_no = #NEW_PRE_RCL_NO#
    </select>
    
    <select id="sqlFetchDiffInRcleRcl" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
    	SELECT ((SELECT COUNT(*) FROM EXP_RCL_HD A, EXP_RCL_DTL B WHERE B.RCL_NO=A.RCL_NO AND A.AWB_NO=#V_AWB_NO# 
		AND A.AWB_DATE=TO_DATE(#V_AWB_DATE#, 'DDMONYY') AND A.PPK_TYPE='P')-(SELECT COUNT(*) FROM EXP_PRE_RCL_HD A, 
		EXP_PRE_RCL_DTL B WHERE B.PRE_RCL_NO=A.PRE_RCL_NO AND A.AWB_NO=#V_AWB_NO# AND A.AWB_DATE=TO_DATE(#V_AWB_DATE#, 'DDMONYY') 
		AND A.PPK_TYPE='P')) AS cnt FROM DUAL
    </select>
    
   <insert id="sqlRclDtlBeforeInsertGtCms" parameterClass="java.util.HashMap">
  INSERT INTO GT_CMS(COLUMN_1, COLUMN_2, COLUMN_3, COLUMN_4, COLUMN_5, COLUMN_6)
		        VALUES (#NEW_PRE_RCL_NO#, #NEW_RCL_NO#, #NEW_ULD_KEY#, #NEW_PCS#, #NEW_NET_WT#, #NEW_CR_USER_ID#)
   </insert>
   
    <insert id="sqlRclDtlBeforeInsertExpAwb" parameterClass="java.util.HashMap">
     INSERT INTO EXP_ULD_AWB(ULD_KEY, AWB_NO, AWB_DATE, RCL_NO, PPK_TYPE, PCS, WT,RCL_DATE)
        VALUES (#NEW_ULD_KEY#,#V_AWB_NO#,#V_AWB_DATE#, #NEW_RCL_NO#, 'P', NVL(#NEW_PCS#,0), NVL(#NEW_NET_WT#,0), NVL(TO_DATE(#NEW_RCL_DATE#,'DDMONYY'),sysdate))
    </insert>
    	<!--  Queries  for package TRG_EXP_RCL_DTL_BEF_INS Ends :: RANJITH -->	
	<select id="sqlPkgPmanAwbSplCodes" parameterClass="java.util.HashMap" resultClass="java.lang.String">
	        select    decode(spl_code1, null, '', spl_code1 || #DELEMETER#)
	               || decode(spl_code2, null, '', spl_code2 || #DELEMETER#)
	               || decode(spl_code3, null, '', spl_code3 || #DELEMETER#)
	               || decode(spl_code4, null, '', spl_code4 || #DELEMETER#)
	               || decode(spl_code5, null, '', spl_code5 || #DELEMETER#)
	               || decode(spl_code6, null, '', spl_code6 || #DELEMETER#)
	               || decode(spl_code7, null, '', spl_code7 || #DELEMETER#)
	               || decode(spl_code8, null, '', spl_code8 || #DELEMETER#)
	               || decode(spl_code9, null, '', spl_code9) SPL_CODES     
	        from   AWB
	        where  awb_no = #AWB_NO#
	        and    awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')
	</select>
	<!-- Pkg_EXP_ULD queries -->
	<select id="sqlPkgUldGetExpFltUld" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select flt_key, TO_CHAR(flt_date, 'DDMONYY') FLT_DATE, FLT_TYPE, uld_key, unldg_pt, contr_code, gross_wt, tare_wt, net_wt, ppk_type,
				empty_yn, eic_yn, buildup_yn, source, cr_user_id, TO_CHAR(cr_date, 'DDMONYY') CR_DATE, lm_user_id, TO_CHAR(lm_date, 'DDMONYY') LM_DATE
			from exp_flt_uld 
			 where  flt_key = #FLT_KEY#
                    and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
                    and    uld_key = #OLD_ULD_KEY#
	</select>
	<update id="sqlPkgExpUldUpdPreExpFltUld" parameterClass="java.util.HashMap">
		update exp_flt_uld set
                        source = #SOURCE#,
                        pman_yn = NVL(#PMAN_YN#,'N'),
                        unldg_pt = #UNLDG_PT#,
                        contr_code = #CONTR_CODE#,
                        gross_wt = #GROSS_WT#,
                        tare_wt = decode(#TARE_WT#,0,tare_wt,#TARE_WT#),
                        net_wt = #NET_WT#,
                        ppk_type = #PPK_TYPE#,
                        empty_yn = #EMPTY_YN#,
                        eic_yn = #EIC_YN#,
                        buildup_yn = #BUILDUP_YN#,
                        remarks = null,
                        lm_user_id = #LM_USER_ID#,
                        lm_date = sysdate,
                        TR_TYPE = #TR_TYPE#
                    where  flt_key = #FLT_KEY#
                    and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
                    and    uld_key = #ULD_KEY#
	</update>
	<insert id="sqlPkgExpUldInsPreExpFltULD" parameterClass="java.util.HashMap">
		insert into exp_flt_uld(flt_key, flt_date, FLT_TYPE, uld_key, unldg_pt, contr_code, gross_wt, tare_wt, net_wt, ppk_type,
				empty_yn, eic_yn, buildup_yn, source, cr_user_id, cr_date, lm_user_id, lm_date, del_yn, pman_yn, remarks, spl_code1,loc_code,TR_TYPE)
			values (#FLT_KEY#, TO_DATE(#FLT_DATE#,'DDMONYY'), 'E', #ULD_KEY#, #UNLDG_PT#, #CONTR_CODE#, NVL(#GROSS_WT#,0), NVL(#TARE_WT#,0), NVL(#NET_WT#,0), NVL(#PPK_TYPE#,'N'),
				NVL(#EMPTY_YN#,'N'), NVL(#EIC_YN#,'N'), NVL(#BUILDUP_YN#,'N'), #SOURCE#, #LM_USER_ID#, sysdate, #LM_USER_ID#, sysdate, NVL(#DEL_YN#,'N'), NVL(#PMAN_YN#,'N'), #REMARKS#, #SPL_CODE1#,#LOC_CODE#,#TR_TYPE#)
	</insert>
	<select id="checkPkgExpUldInsPreExpFltUld" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM EXP_FLT_ULD WHERE FLT_KEY = #FLT_KEY# AND FLT_DATE = TO_DATE(#FLT_DATE#,'DDMONYY') AND ULD_KEY = #ULD_KEY#
	</select>
	<!-- Pkg_EXP_ULD queries ends-->
	<!-- TRG_BI_EXP_TALLY_SHEET QUERIES -->
	<select id="sqlTallyGetREfNo" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		select EXP_TALLY_SHEET_SEQ.NEXTVAL from dual
    </select>
    <select id="sqlTallyGetTRNo" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT LPAD(NVL(MAX(TR_NO) + 1, 1), 5, '0') TR_NO        
        FROM   EXP_TALLY_SHEET
        WHERE  FLT_KEY = #FLT_KEY#
        AND    to_char(FLT_DATE,'DDMONYY') = TO_DATE(#FLT_DATE#,'DDMONYY')
    </select>
    <select id="generateawbType" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT awb_type from awb where awb_no = #awbNo# and awb_date=#awbDate#
    </select>
    <select id="sqlTallyGetAwbDestContent" parameterClass="java.lang.String" resultClass="java.util.HashMap">
    	SELECT AWB_DEST DEST, AWB_CONTENT CONTENT           
            FROM   EXP_RCL_HD
            WHERE  RCL_NO = #RCL_NO#
    </select>
    <select id="sqlTallyGetCarDestContent" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
    	SELECT DEST , CONTENT            
            FROM   EXP_CAR
            WHERE  AWB_NO = #AWB_NO#
            AND    AWB_DATE = TO_DATE(#AWB_DATE#,'DDMONYY')
    </select>
	<!-- TRG_BI_EXP_TALLY_SHEET QUERIES ends -->	
	<!-- TRG_BIUD_EXP_FLT_ULD Queries -->
	<parameterMap id="fltCarrCodeMap" class="java.util.HashMap">
		<parameter property="CARR_CODE" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="OUT" />	
		<parameter property="FLT_KEY" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="IN" />				
	</parameterMap>	
	<procedure id="sqlBEFUGetFltCarrCode" parameterMap="fltCarrCodeMap">
		{? = call pkg_exp_val.get_flt_carr_code(?)}
	</procedure>
	<update id="sqlbefuUpdUldInven" parameterClass="java.util.HashMap">
	update uld_inventory
	            set flt_key = null,
	                flt_date = null,
									flt_no = null,				
									carr_code = null,
	                flt_type = decode(#EIC_YN#, 'Y', flt_type, null)
	            where  uld_key = #ULD_KEY#
	</update>
	<update id="sqlbefuUpdUldInv" parameterClass="java.util.HashMap">
		update uld_inventory
	            set flt_key = null,
	                flt_date = null,
                    flt_no = null,				
                    carr_code = null,
	                flt_type = decode(#EIC_YN#, 'Y', flt_type, null),
                  <isEqual property="TRANSIT_PPK" compareValue="N">
                    gross_weight = decode(#PPK_TYPE#, 'P', gross_weight, 'M', gross_weight, decode(#EIC_YN#, 'Y', nvl(#TARE_WT#,tare_weight), 0)),
                  </isEqual>
                    tare_weight = decode(#PPK_TYPE#, 'P', tare_weight, 'M', tare_weight,decode(#EIC_YN#, 'Y', pkg_exp_val.get_uld_tare_weight(#ULD_KEY#, #CARR_CODE#), tare_weight)),
                    contr_code = decode(#PPK_TYPE#, 'B',null,contr_code),
                    tr_type=#TR_TYPE#
	            where  uld_key = #ULD_KEY#
	</update>
	<update id="sqlbefuUpdAwbInv" parameterClass="java.util.HashMap">	                        
		update awb_inventory
	            set flt_key = null,
	                flt_date = null,
                	flt_type = null,
            	    ref_tr_no =  #ULD_KEY#,  
	                ref_tr_type = 'EF',
	                ref_tr_date = TO_DATE(#CR_DATE#, 'DDMONYY'),
	                ref_doc_line_no = 1,
	                ref_tr_event = 'EFP',
	                lm_date = sysdate,
	                lm_user_id = #LM_USER_ID#
	            where  uld_key = #ULD_KEY#
	</update>
	<delete id="sqlbefuDelExpChkOutDtl" parameterClass="java.util.HashMap">	            
		delete from exp_chkout_dtl
            where  flt_key = #FLT_KEY#
            and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
            and    uld_key = #ULD_KEY#
	</delete>        
	<update id="sqlbefuUpdUldInvRef" parameterClass="java.util.HashMap">
		update uld_inventory
            set flt_key = #FLT_KEY#,
                flt_date = TO_DATE(#FLT_DATE#,'DDMONYY'),
                flt_type = 'E',
                uld_flow = 'E',
                contr_code = NVL(#CONTR_CODE#,contr_code),
                carr_code = #CARR_CODE#,
                flt_no = replace(#FLT_KEY#, #CARR_CODE#, ''),
	        	tare_weight = decode(#TARE_WT#,0,tare_weight,null,tare_weight,#TARE_WT#),
	            gross_weight = decode(#GROSS_WT#,0,gross_weight,null,gross_weight,#GROSS_WT#),              
            	lm_user_id = #LM_USER_ID#,
        		lm_date    = SYSDATE,
				ref_tr_date  = SYSDATE, 
                ref_tr_type = 'UA',
				ref_tr_event = #EVENT#,
				TR_TYPE = #TR_TYPE#,
	        	ofld_flg='N'
	        	<isEqual property="TR_TYPE" compareValue="DLSL">
                	,AGENT_ID = '' 
					,EMPTY_FLG = 'N'
					,FIRST_WT     = ''
					,SECOND_WT    =''
					,THIRD_WT     =''
					,REF_WT       =''
					,TARGET       = ''
					,FINAL_WEIGHT = 'N'					
					,IMP_FLT_CARR =''
					,IMP_FLT_DATE =''
					,IMP_FLT_KEY  =''
					,IMP_FLT_NO   =''
					,PPK_IND      ='N'
					,MIX_PPK_IND  = 'N'
					,MAN_WT_IND   = 'N'
					,man_wt_ind2  = 'N'
					,man_wt_ind3  = 'N'
					,RESV_FLG     = 'N'
					,RESV_DATE    = ''
					,RESV_RMK     = ''
					,RMV_RMK      = ''
					,BASE_PLT     = NULL
					,EIC_UNLDG_PT = NULL
					,EIC_TYPE     = NULL
					,BASE_PAL_FLG = 'N'
					,ASV_INV      = 'N'
					,HANDLING_MODE= ''	
                </isEqual>                
                <isEqual property="TR_TYPE" compareValue="DLSE">
                	,AGENT_ID = '' 
					,EMPTY_FLG = 'Y'
					,FIRST_WT     = ''
					,SECOND_WT    =''
					,THIRD_WT     =''
					,REF_WT       =''
					,TARGET       = ''
					,FINAL_WEIGHT = 'N'					
					,IMP_FLT_CARR =''
					,IMP_FLT_DATE =''
					,IMP_FLT_KEY  =''
					,IMP_FLT_NO   =''
					,PPK_IND      ='N'
					,MIX_PPK_IND  = 'N'
					,MAN_WT_IND   = 'N'
					,man_wt_ind2  = 'N'
					,man_wt_ind3  = 'N'
					,RESV_FLG     = 'N'
					,RESV_DATE    = ''
					,RESV_RMK     = ''
					,RMV_RMK      = ''
					,BASE_PLT     = NULL
					,EIC_UNLDG_PT = NULL
					,EIC_TYPE     = NULL
					,BASE_PAL_FLG = 'N'
					,ASV_INV      = 'N'
					,HANDLING_MODE= ''	
                </isEqual>
            where  uld_key = #ULD_KEY#
	</update>

	<update id="sqlbefuUpdAwbInven" parameterClass="java.util.HashMap">                        
		update awb_inventory
	            set flt_key = #FLT_KEY#,
                  flt_date = TO_DATE(#FLT_DATE#,'DDMONYY'),
                  flt_type = 'E',
	                ref_tr_no = #ULD_KEY#,
	                ref_tr_type = 'EF',
	                ref_tr_date = NVL(TO_DATE(#CR_DATE#,'DDMONYY'), sysdate),
	                ref_doc_line_no = 1,
	                ref_tr_event = 'EFP',
	                lm_date = sysdate,
	                lm_user_id = #LM_USER_ID#
	            where  uld_key = #ULD_KEY#
	</update>
	<update id="sqlbefuUpdUldInventory" parameterClass="java.util.HashMap">	                        
		update uld_inventory
	        set contr_code = NVL(#CONTR_CODE#,contr_code),            
	            eic_flg = NVL(#EIC_YN#,'N'),
	            <!-- tare_weight = NVL(#TARE_WT#,tare_weight),
	            gross_weight = NVL(#GROSS_WT#,gross_weight), --> 
	            bb_ind = NVL(#BB_IND#,bb_ind),
				lm_user_id = #LM_USER_ID#,
				uld_flow = 'E',
	        	lm_date    = sysdate           
	        where  uld_key = #ULD_KEY#
	</update>
	<!-- TRG_BIUD_EXP_FLT_ULD Queries ends-->
	<!--  TRG_EXP_CHKOUT_DTL_INS -->
	<parameterMap id="uldCarrCodeMap" class="java.util.HashMap">
		<parameter property="CARR_CODE" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="OUT" />	
		<parameter property="ULD_KEY" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="IN" />				
	</parameterMap>	
	<procedure id="sqlecdiGetUldCarrCode" parameterMap="uldCarrCodeMap">
		{? = call PKG_VALIDATE.sf_get_uld_carr(?)}
	</procedure>
	<parameterMap id="uldNoMap" class="java.util.HashMap">
		<parameter property="ULD_NO" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="OUT" />	
		<parameter property="ULD_KEY" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="IN" />				
	</parameterMap>	
	<procedure id="sqlecdiGetUldNo" parameterMap="uldNoMap">
		{? = call PKG_VALIDATE.sf_get_uld_no(?)}
	</procedure>
	<!--  TRG_EXP_CHKOUT_DTL_INS ends-->
	<!-- Queries for procedure procedure upd_pman_awb -->
	<update id="sqlPkgPmanUpdExpPmanAwb" parameterClass="java.util.HashMap">
		update exp_pmanifest_awb set
				bulk_pcs = NVL(#BULK_PCS#,bulk_pcs),
				bulk_wt = NVL(#BULK_WT#,bulk_wt),
		        ppk_pcs = NVL(#PPK_PCS#,ppk_pcs),
		        ppk_wt = NVL(#PPK_WT#,ppk_wt),
		        assigned_bulk_pcs = assigned_bulk_pcs + decode(#PPK_TYPE#, 'B', NVL(#PCS#,0), 0),
		        assigned_bulk_wt = assigned_bulk_wt + decode(#PPK_TYPE#, 'B', NVL(#WT#,0), 0),
		        mix_pcs = NVL(#MIX_PCS#,mix_pcs),
		        mix_wt = NVL(#MIX_WT#,mix_wt),
		        pman_pcs = NVL(#PMAN_PCS#,pman_pcs),
		        pman_wt = NVL(#PMAN_WT#,pman_wt),
				unassigned_bulk_pcs = NVL(#UNASSIGNED_BULK_PCS#,unassigned_bulk_pcs),		        
		        unassigned_bulk_wt = NVL(#UNASSIGNED_BULK_WT#,unassigned_bulk_wt),
		        TR_TYPE = #TR_TYPE#,
		        LM_USER_ID = NVL(#USER_ID#,'SYSTEM'),
		        LM_DATE = SYSDATE
		    where  flt_key = #FLT_KEY#
		    and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
		    and    flt_type = 'E'
		    and    unldg_pt = #UNLDG_PT#
		    and    awb_no = #AWB_NO#
		    and    awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')
	</update>	    
	<delete id="sqlPkgPmanDelExpPmanAwb" parameterClass="java.util.HashMap">      
		delete from exp_pmanifest_awb
      		where  flt_key = #FLT_KEY#
	    	and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
      		and    pman_pcs = 0
      		and    pman_wt = 0
     </delete>
     <select id="sqlfetchPkgPmanDelExpPmanAwb" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">      
		select count(1) from exp_pmanifest_awb
      		where  flt_key = #FLT_KEY#
	    	and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
      		and    pman_pcs = 0
     </select>
     <select id="sqlPkgPmanGetExpPmanAwb" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		 select AWB_NO, TO_CHAR(AWB_DATE,'DDMONYY') AWB_DATE, FLT_KEY, TO_CHAR(FLT_DATE,'DDMONYY') FLT_DATE, UNLDG_PT, GROUP_NO, BLDUP_INSTR, 
		 		MAN_RMK, SHP_TYPE,BULK_PCS as BULK_PCS, BULK_WT as BULK_WT, BULK_PCS I_BULK_PCS, BULK_WT I_BULK_WT, PPK_PCS, PPK_WT, MIX_PCS, MIX_WT, ASSIGNED_BULK_PCS, ASSIGNED_BULK_WT, 
		        PMAN_PCS, PMAN_WT, CR_USER_ID, TO_CHAR(CR_DATE,'DDMONYY HH24MISS') CR_DATE, 
		        LM_USER_ID,  TO_CHAR(LM_DATE,'DDMONYY HH24MISS')  LM_DATE, UNASSIGNED_BULK_PCS, UNASSIGNED_BULK_WT, DLS_REMARKS, 
		        DOC_ACCPT_IND, DOC_ACCPT_USER_ID, TO_CHAR(DOC_ACCPT_DATE,'DDMONYY') DOC_ACCPT_DATE, PRIORITY, ENDORSED_BY, ENDORSED_DATE, FLT_TYPE
		    from exp_pmanifest_awb
		    where  flt_key = #FLT_KEY#
		    	and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
		        and    flt_type = 'E'
		        and    unldg_pt = #UNLDG_PT#
		        and    awb_no = #AWB_NO#
		        and    awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')
     </select>
     <!-- Queries for procedure procedure upd_pman_awb ends -->
     <select id="sqlExpCarAinsUpFltDtl" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	     select flt_key V_FLT_KEY, TO_CHAR(flt_date,'DDMONYY') V_FLT_DATE        
         from exp_pmanifest_awb
        where awb_no = #NEW_AWB_NO#
          and awb_date = TO_DATE(#NEW_AWB_DATE#,'DDMONYY')
     </select>
     <update id="sqlExpCarAinsUpAwb" parameterClass="java.util.HashMap">
	     update awb set awb_rmk = #NEW_RMK#
			where awb_no = #NEW_AWB_NO#
	          and awb_date = TO_DATE(#NEW_AWB_DATE#,'DDMONYY')			   
     </update>
     <insert id="sqlExpCarAinsAwbRmk" parameterClass="java.util.HashMap">
	     insert into awb_rmk
	      (SEQ_NO, AWB_NO, AWB_DATE,  
	       FLT_KEY, FLT_DATE, FLT_TYPE, RMK_TYPE, RMK, 
	       CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE) 
	      values
	      (awb_rmk_seq.nextval, #NEW_AWB_NO#, TO_DATE(TRIM(#NEW_AWB_DATE#),'DDMONYY'), 
	       #V_FLT_KEY#,TO_DATE(#V_FLT_DATE#,'DDMONYY'), 'E','EXP_CAR',#NEW_RMK#,
	       #NEW_LM_USER_ID#, sysdate, #NEW_LM_USER_ID#, sysdate)     
     </insert>
     <!-- Queries for procedure upd_pman_uld_det -->
    <select id="sqlupudGetExpUldAwb" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	     select awb_no, TO_CHAR(awb_date,'DDMONYY') AWB_DATE, ppk_type, pcs, wt, WT NET_WT,
	             decode(ppk_type, 'P', pcs, 0) PPK_PCS, decode(ppk_type, 'P', wt, 0) PPK_WT,
	             decode(ppk_type, 'M', pcs, 0) MIX_PCS, decode(ppk_type, 'M', wt, 0) MIX_WT
	            from   exp_uld_awb
	            where  rcl_no = #RCL_NO#
	            and    uld_key = #ULD_KEY#
	</select>
	<update id="sqlupudUpdExpUldAwb" parameterClass="java.util.HashMap">             
		update exp_uld_awb
		        set manifest_yn = decode(#MODE#, 'INS', 'Y', 'N'),
		        	closed_yn = decode(#MODE#, 'INS', 'Y', 'N')
		        where  uld_key = #ULD_KEY#
		        and    rcl_no = #RCL_NO#            
	</update>
	<select id="sqlupudGetExpPmanAwb" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		select 'x'
		     from   exp_pmanifest_awb
		       where  flt_key = #FLT_KEY#
		            and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
		            and    flt_type = 'E'	
		            and    unldg_pt = #UNLDG_PT#
		            and    awb_no = #AWB_NO#
		            and    awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')
	</select>
	<insert id="sqlupudInsExpPmanAwb" parameterClass="java.util.HashMap">
		insert into exp_pmanifest_awb(flt_key, flt_date, flt_type,unldg_pt, awb_no, awb_date, cr_user_id, cr_date, lm_user_id, lm_date,
		PMAN_PCS,PMAN_WT, UNASSIGNED_BULK_PCS, UNASSIGNED_BULK_WT,
		PPK_PCS,PPK_WT, BULK_PCS, BULK_WT,
   		MIX_PCS, MIX_WT,GROUP_NO,TR_TYPE)
	  values (#FLT_KEY#, TO_DATE(#FLT_DATE#,'DDMONYY'), 'E',#UNLDG_PT#, #AWB_NO#, TO_DATE(#AWB_DATE#,'DDMONYY'), #LM_USER_ID#, sysdate, 
	  #LM_USER_ID#, sysdate, NVL(#PMAN_PCS#,0),NVL(#PMAN_WT#,0),NVL(#UNASSIGNED_BULK_PCS#,0),NVL(#UNASSIGNED_BULK_WT#,0),
	  DECODE(#PPK_TYPE#,'P',NVL(#PPK_PCS#,0),0), DECODE(#PPK_TYPE#,'P',NVL(#PPK_WT#,0),0), DECODE(#PPK_TYPE#, 'P', 0, 'M', 0, NVL(#PMAN_PCS#,0)),
	  DECODE(#PPK_TYPE#, 'P', 0, 'M', 0, NVL(#PMAN_WT#,0)),
    DECODE(#PPK_TYPE#,'M',NVL(#MIX_PCS#,0),0),DECODE(#PPK_TYPE#,'M',NVL(#MIX_WT#,0),0),#groupNo#,#TR_TYPE#)           
    </insert>

	<update id="sqlupudUpdExpPmanUldAwb" parameterClass="java.util.HashMap">	
		update exp_pmanifest_uld_awb
            set assigned_pcs = assigned_pcs + decode(#MODE#, 'INS', NVL(#PCS#,0), NVL(-#PCS#,0)),
                assigned_wt = assigned_wt + decode(#MODE#, 'INS', NVL(#PCS#,0), NVL(-#NET_WT#,0))
            where  flt_key = #FLT_KEY#
            and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
            and    uld_bt_no = #ULD_KEY#
            and    unldg_pt = #UNLDG_PT#
            and    awb_no = #AWB_NO#
            and    awb_date = TO_DATE(#AWB_DATE#,'DDMONYY') 
	</update>
	<select id="sqlupudGetOldExpPmanUldAwb" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select TR_NO, FLT_KEY, TO_CHAR(FLT_DATE,'DDMONYY'), ULD_BT_NO, UNLDG_PT, AWB_NO, TO_CHAR(AWB_DATE,'DDMONYY') AWB_DATE, ASSIGNED_PCS, ASSIGNED_WT
				LM_USER_ID, PPK_TYPE
			from exp_pmanifest_uld_awb
			where flt_key = #FLT_KEY#
            and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
            and    uld_bt_no = #ULD_KEY#
            and    unldg_pt = #UNLDG_PT#
            and    awb_no = #AWB_NO#
            and    awb_date = TO_DATE(#AWB_DATE#,'DDMONYY') 
	</select>
	<select id="sqlupudGetNewExpPmanUldAwb" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select TR_NO, FLT_KEY, TO_CHAR(FLT_DATE,'DDMONYY'), ULD_BT_NO, UNLDG_PT, AWB_NO, TO_CHAR(AWB_DATE,'DDMONYY'), 
				assigned_pcs + decode(#MODE#, 'INS', NVL(#PCS#,0), NVL(-#PCS#,0)) ASSIGNED_PCS, 
				assigned_wt + decode(#MODE#, 'INS', NVL(#PCS#,0), NVL(-#NET_WT#,0)) ASSIGNED_WT,
				LM_USER_ID, PPK_TYPE
			from exp_pmanifest_uld_awb
			where flt_key = #FLT_KEY#
            and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
            and    uld_bt_no = #ULD_KEY#
            and    unldg_pt = #UNLDG_PT#
            and    awb_no = #AWB_NO#
            and    awb_date = TO_DATE(#AWB_DATE#,'DDMONYY') 
	</select>
	<insert id="sqlupudInsExpPmanUldAwb" parameterClass="java.util.HashMap">
    	insert into exp_pmanifest_uld_awb
                       (TR_NO,flt_key, flt_date, uld_bt_no, unldg_pt, awb_no, awb_date, ppk_type, assigned_pcs, assigned_wt, UPD_PMAN_PCS, UPD_PMAN_WT, cr_user_id, cr_date, lm_user_id, lm_date)
                values (EXP_PMANF_ULD_AWB.nextval, #FLT_KEY#, NVL(TO_DATE(#FLT_DATE#,'DDMONYY'),sysdate), #ULD_KEY#, #UNLDG_PT#, #AWB_NO#, NVL(TO_DATE(#AWB_DATE#,'DDMONYY'),sysdate), #PPK_TYPE#, NVL(#PCS#,0), NVL(#WT#,0), NVL(#UPD_PMAN_PCS#,0), NVL(#UPD_PMAN_WT#,0), #LM_USER_ID#, sysdate, #LM_USER_ID#, sysdate)            
	</insert>

	<delete id="sqlupudDelExpPmanUldAwb" parameterClass="java.util.HashMap">
		<![CDATA[delete from exp_pmanifest_uld_awb
		            where  flt_key = #FLT_KEY#
		            and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
		            and    uld_bt_no = #ULD_KEY#
		            and    assigned_pcs <= 0 ]]>              
	</delete>
	<delete id="sqlupudDelExpPmanAwb" parameterClass="java.util.HashMap">		            
		<![CDATA[delete from exp_pmanifest_awb
		            where  flt_key = #FLT_KEY#
		            and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
		            and    pman_pcs <= 0]]>
	</delete>	             
     <!--  Queries for procedure upd_pman_uld_det ends-->
     <!-- Queries for  TRG_BU_EXP_PMANIFEST_ULD-->
     <update id="sqlBuExpPmanUldUpdOldBtNo" parameterClass="java.util.HashMap">
     update exp_flt_uld
            set uld_key = #NEW_ULD_BT_NO#,
                contr_code = #CONTR_CODE#,
               tare_wt = NVL(#TARE_WT#,0),
                gross_wt = NVL(#GROSS_WT#,0),
                net_wt = DECODE(#GROSS_WT#,'0','0',(NVL(#GROSS_WT#,0) - NVL(#TARE_WT#,0))),
                buildup_yn = #BLDUP_COMPLETE#,
                ppk_type = #PPK_TYPE#
            where  flt_key = #FLT_KEY#
            and    flt_type = 'E'
            and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
            and    uld_key = #OLD_ULD_BT_NO#
	</update>
	<update id="sqlBuExpPmanUldUpdNewUldBtno" parameterClass="java.util.HashMap">            
		update exp_flt_uld
                set tare_wt = tare_wt +  NVL(#TARE_WT#,0),
                    gross_wt = gross_wt + NVL(#GROSS_WT#,0),
                    net_wt = DECODE(#GROSS_WT#,'0','0',(gross_wt + NVL(#GROSS_WT#,0) -(tare_wt + NVL(#TARE_WT#,0)))),
                    buildup_yn = #BLDUP_COMPLETE#,
                    ppk_type = #PPK_TYPE#
                where  flt_key = #FLT_KEY#
                and    flt_type = 'E'
                 and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
                  and    uld_key = #NEW_ULD_BT_NO#
	</update>
	<update id="sqlBuExpPmanUldUpdExpFltUld" parameterClass="java.util.HashMap">                              
		update exp_flt_uld
		        set contr_code = NVL(#CONTR_CODE#,contr_code),
		            tare_wt = NVL(#TARE_WT#,tare_wt),
		            gross_wt = NVL(#GROSS_WT#,gross_wt),
		            net_wt = DECODE(#GROSS_WT#,'0','0',(NVL(#GROSS_WT#,gross_wt) - NVL(#TARE_WT#,tare_wt))),
		            buildup_yn = NVL(#BLDUP_COMPLETE#,buildup_yn),
		            bb_ind = NVL(#BB_IND#,bb_ind),
		            ppk_type = NVL(#PPK_TYPE#,ppk_type),
		            tr_type=''
		            where  flt_key = #FLT_KEY#
		            and    flt_type = 'E'
		            and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
		            and    uld_key = #NEW_ULD_BT_NO#
	</update>            
	<insert id="sqlBuExpPmanUldInsTallySheet" parameterClass="java.util.HashMap">            
		insert into exp_tally_sheet
               (ref_no, flt_key, flt_date, trans_type, uld_key, rcl_no, unldg_pt, cr_user_id, cr_date, lm_user_id, lm_date)
        values (#REF_NO#, #FLT_KEY#, TO_DATE(#FLT_DATE#,'DDMONYY'), #TRANS_TYPE#, #NEW_ULD_BT_NO#, #RCL_NO#, #UNLDG_PT#, #LM_USER_ID#, sysdate,  #LM_USER_ID#, sysdate)
	</insert>   
	<select id="sqlBuExpPmanUldGetExpFltUld" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select * from exp_flt_uld 
              where  flt_key = #FLT_KEY#
		            and    flt_type = 'E'
		            and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
		            and    uld_key = #ULD_KEY#       
	</select>       
	<insert id="sqlInsExpPmanAwbConflt" parameterClass="java.util.HashMap">
		INSERT INTO FLT_MOV
		  (ULD_TYPE, ULD_NO, ULD_CARR, ULD_KEY, FLT_TYPE, 
		   CARR_CODE, FLT_NO, FLT_DATE, FLT_KEY,  
		   LOC_CODE, STRG_D, STRG_MM, SURP_IND, COND_C, 
		   EIC_I, EMPTY_I, CONTR_C, RMK, TR_NO, DOC_LINE_NO,
		   TR_TYPE, CR_USER_ID, CR_DATE, 
		   LM_USER_ID, LM_DATE, SEQ_NO, TR_STATUS, EVENT_ID
		  )
		  VALUES
		  (NULL, NULL, NULL, NULL, 'E',
		   #CARR_CODE#, #FLT_NO#, TO_DATE(#FLT_DATE#, 'DDMONYY'), #FLT_KEY#,
		   NULL, NVL(TO_DATE(#CR_DATE#,'DDMONYY'),sysdate),  NULL,'N',NULL,
		   'N','N',NULL, #RMK#, NULL, 1,
		   'MN', #CR_USER_ID#, NVL(TO_DATE(#CR_DATE#,'DDMONYY'),sysdate),
		   #LM_USER_ID#, NVL(TO_DATE(#LM_DATE#, 'DDMONYY'),sysdate),FLT_MOV_SEQ.NEXTVAL,'A','MN' 
		   )
	</insert>  
        <!--  Queries for  TRG_BU_EXP_PMANIFEST_ULD ends-->
        <!--  Queries for tri_crud_fbl_shp -->
        <select id="sqlCrudGetEdiFbl" parameterClass="java.lang.String" resultClass="java.util.HashMap">
        	select flt_key, TO_CHAR(flt_date, 'DDMONYY') FLT_DATE     
			      from edi_fbl
			      where tr_no=#TR_NO#  
        </select>
        <select id="sqlCrudGetMaxAwbDate" parameterClass="java.lang.String" resultClass="java.lang.String">
        	select TO_CHAR(max(awb_date),'DDMONYY') AWB_DATE     
			      from awb
			      where awb_no = #AWB_NO#
			       and awb_type='E'
        </select>
        <parameterMap id="proAwbEventsMap" class="java.util.HashMap">
		<parameter property="AWB_NO" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="IN" />	
		<parameter property="AWB_DATE" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="IN" />
		<parameter property="AWB_TYPE" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="IN" />	
		<parameter property="EVENT_ID" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="IN" />
		<parameter property="FLT_KEY" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="IN" />	
		<parameter property="FLT_DATE" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="IN" />
		<parameter property="FLT_TYPE" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="IN" />	
		<parameter property="PCS" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="IN" />
		<parameter property="NET_WT" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="IN" />	
		<parameter property="CR_USER_ID" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="IN" />
		<parameter property="CR_DATE" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="IN" />	
		<parameter property="LM_USER_ID" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="IN" />
		<parameter property="LM_DATE" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="IN" />																
		</parameterMap>	
		<procedure id="sqlProAwbEvents" parameterMap="proAwbEventsMap">
			{call pro_awb_events(?,?,?,?,?,?,?,?,?,?,?,?,?)}
		</procedure>
        <!--  Queries for tri_crud_fbl_shp -->   
        <!-- Queries for CST_LICENSE -->
       	<select id="sqlCStlicSelEdiFhl" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
       	 select h.tr_no, l.hdoc_line_no, l.doc_line_no 
			from EDI_FHL h
			join EDI_FHL_HAWB ha on ha.tr_no = h.tr_no
			join EDI_FHL_HAWB_LIC_PER l on h.tr_no = l.tr_no and ha.DOC_LINE_NO = l.HDOC_LINE_NO
				where l.LIC_PER_TYPE = 'LIC' and h.awb_no = #AWB_NO# and ha.hawb_no = #HAWB_NO# and l.LIC_PER_NO = #LICENSE#
		</select>
		<delete id="sqlCStlicDelEdiFhl" parameterClass="java.util.HashMap">
			delete from EDI_FHL_HAWB_LIC_PER where tr_no = #TR_NO# and hdoc_line_no = #HDOC_LINE_NO# and doc_line_no = #DOC_LINE_NO#
		</delete>    
        <!-- Queries for CST_LICENSE ends-->
        <!--  Queries for pkg_pman.mofs_notify -->
        <select id="sqlPkgPmanMofsGetRhoId" parameterClass="java.util.HashMap" resultClass="java.lang.String">
	        select rho_id           
	            from   exp_mofs_notification
	            where  flt_key = #FLT_KEY#
	            and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
	            and    rownum = 1
        </select>
        <select id="sqlPkgPmanMofsGetMofsNo" resultClass="java.lang.String">
			select to_char(sysdate, 'DDMMYYYY')||lpad(nvl(max(to_number(substr(mofs_no, 9))), 0) + 1, 4, 0) MOFS_NO       
		        from   exp_mofs_notification
		        where  trunc(cr_date) = trunc(sysdate)            
		</select>
		<insert id="sqlPkgPmanMofsInsExpMofsNot" parameterClass="java.util.HashMap">
		 insert into exp_mofs_notification(flt_key, flt_date, mofs_no, rho_id, notify_send_date, notify_send_time, cr_user_id, cr_date, lm_user_id, lm_date)
			    values (#FLT_KEY#, TO_DATE(#FLT_DATE#,'DDMONYY'), #MOFS_NO#, #RHO_ID#,  sysdate, to_char(sysdate, 'HH24MI'), #LM_USER_ID#, sysdate, #LM_USER_ID#, sysdate)        
		</insert>
		<update id="sqlPkgPmanMofsUpdDtl" parameterClass="java.util.HashMap">      
		      update exp_chkout_dtl set
			            mofs_no = #MOFS_NO#,
			            notify_log = 'Y'
			        where  flt_key = #FLT_KEY#
			        and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
			        and    uld_key = #ULD_KEY#
		</update>
		<update id="sqlPkgPmanMofsUpdExpchkhd" parameterClass="java.util.HashMap">
			update exp_chkout_hd set
			        rho_id = #RHO_ID#	
		    	where  flt_key = #FLT_KEY#
		            and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
		</update>		                      
        <!--  Queries for pkg_pman.mofs_notify ends-->
        <!-- Queries for function pkg_exp_acpt.void_rcl_bulk -->
        <select id="sqlPkgAcptGetSeqNoPcsWt" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
        select t1.seq_no SEQ_NO, t2.pcs RCL_PCS, t3.wt RCL_WT
            from   (select column_value seq_no, rownum r1
                    from   table(pkg_common.inlist(#SEQ_NO#))) t1,
                   (select column_value pcs, rownum r2
                    from   table(pkg_common.inlist(#PCS#))) t2,
                   (select column_value wt, rownum r3
                    from   table(pkg_common.inlist(#WT#))) t3
            where  t1.r1 = t2.r2
            and    t2.r2 = t3.r3   
        </select>
        <update id="sqlPkgAcptUpdAwbInvlocPcsWt" parameterClass="java.util.HashMap">
		 update awb_inventory 
		 	set locn_pcs = locn_pcs - NVL(#RCL_PCS#,0), locn_wt = locn_wt - NVL(#RCL_WT#,0) 
		 	where seq_no = #SEQ_NO#  
	 </update>
	  <select id="sqlPkgAcptGetAwbInvLocPcsWt" parameterClass="java.lang.String" resultClass="java.util.HashMap">
		 select locn_pcs, locn_wt from awb_inventory		 	 
		 	where seq_no = #SEQ_NO#  
	 </select>

	 <delete id="sqlPkgAcptDelAwbInvSeq" parameterClass="java.lang.String">
		 delete from awb_inventory where seq_no = #SEQ_NO#
	 </delete> 
     <!-- Queries for function pkg_exp_acpt.void_rcl_bulk ends-->
     <!-- Queries for function pkg_pman.del_uld_assign -->
     <select id="sqlUldAsgnGetAwbInv" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	     select inv.SEQ_NO, TO_CHAR(inv.STRG_DATE,'DDMONYY') STRG_DATE, inv.LOCN_PCS, inv.LOCN_WT
	 		from  awb_inventory inv
	 		JOIN AWB awb ON UPPER(awb.AWB_NO) = UPPER(inv.AWB_NO) 
			AND UPPER (awb.awb_date) = UPPER (inv.awb_date)			  
	            where  inv.awb_no = #AWB_NO#
		        and    inv.awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')
		        and    inv.uld_key = #ULD_KEY#
		        and    inv.flt_key = #FLT_KEY#
		        and    inv.flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
	</select>	        
	<select id="sqlUldAsgnGetChkoutDtl" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		select chk_flg            
            from   exp_chkout_dtl
            where  flt_key = #FLT_KEY#
            and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
            and    uld_key = #ULD_KEY#
	</select>            
	<delete id="sqlUldAsgnDelPmanUldAwb" parameterClass="java.util.HashMap">
		delete from exp_pmanifest_uld_awb
		        where  flt_key = #FLT_KEY#
		        and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
		        and    uld_bt_no = #ULD_KEY#
		        and    unldg_pt = #UNLDG_PT#
		        and    awb_no = #AWB_NO#
		        and    awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')
	</delete>		        
	<delete id="sqlUldAsgnDelPmanUld" parameterClass="java.util.HashMap">
		delete from exp_pmanifest_uld t1
		        where  not exists (select null
	                       from   exp_pmanifest_uld_awb
                           where  flt_key = t1.flt_key
                           and    flt_date = t1.flt_date
                           and    uld_bt_no = t1.uld_bt_no)
							and flt_key = #FLT_KEY#
							and flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
	</delete>							
	<update id="sqlUldAsgnUpdAwbInv" parameterClass="java.util.HashMap">
		update awb_inventory set
	                locn_pcs = locn_pcs - NVL(#PCS#,0),
	                locn_wt = locn_wt - NVL(#WT#,0)
	            where seq_no = #SEQ_NO#
	</update>		                
	<update id="sqlUldAsgnUpdateAwbInv" parameterClass="java.util.HashMap">            	
		 update awb_inventory inv set
		            inv.locn_pcs = inv.locn_pcs + #PCS#,
		            inv.locn_wt = inv.locn_wt + #WT#
		        where  inv.awb_no = #AWB_NO#
		        and    inv.awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')	
		        and    ((#LOC_CODE# is null and inv.loc_code is null) or (inv.loc_code = #LOC_CODE#))
		        and    nvl(inv.uld_key, '***') = nvl(#BT_NO#, '***')
		        and    nvl(inv.lsp_no, 0) = nvl(#LSP_NO#, 0)
		        and    inv.flt_key is null
		        and    inv.flt_date is null
		        and    exists (select null
						       from   awb
						       where  awb_no = inv.awb_no
						       and    awb_date = inv.awb_date
									  )  
	</update>                    
	<insert id="sqlUldAsgnInsAwbInv" parameterClass="java.util.HashMap">        
		insert into awb_inventory(SEQ_NO,awb_no, awb_date, carr_code, lsp_no, uld_key, loc_code, locn_pcs, locn_wt, strg_date,
				cr_user_id, cr_date, lm_user_id, lm_date)
            values (AWB_INV_SEQ.NEXTVAL, #AWB_NO#, TO_DATE(TRIM(#AWB_DATE#),'DDMONYY'),  #CARR_CODE#, #LSP_NO#, #BT_NO#, #LOC_CODE#, NVL(#PCS#,0), NVL(#WT#,0), TO_DATE(#STRG_DATE#,'DDMONYY'),
            	#LM_USER_ID#, sysdate, #LM_USER_ID#, sysdate)
	</insert>            	 	
	<select id="sqlUldAsgnGetUldInv" parameterClass="java.lang.String" resultClass="java.util.HashMap">
		select contr_code, tare_weight TARE_WT, gross_weight GROSS_WT, empty_flg,
                  (case when (base_pal_flg = 'Y' AND flt_type = 'E') then 'Y'
                        else 'N'
                   end)            
            from   uld_inventory
            where  uld_key = #ULD_KEY#
	</select>                          
	<insert id="sqlUldAsgnInsExpFltUld" parameterClass="java.util.HashMap"> 
		insert into exp_flt_uld
				       (flt_key, flt_date, flt_type, uld_key, unldg_pt, contr_code, tare_wt, gross_wt, empty_yn, eic_yn, source, cr_user_id, cr_date, lm_user_id, lm_date)
					values (#FLT_KEY#, TO_DATE(#FLT_DATE#,'DDMONYY'), 'E',#ULD_KEY#, #UNLDG_PT#, #CONTR_CODE#, #TARE_WT#, #GROSS_WT#, #EMPTY_FLG#, 'Y', 'EIC', #LM_USER_ID#, sysdate, #LM_USER_ID#, sysdate)            
	</insert>
	<delete id="sqlUldAsgnDelAwbInv">
		delete from awb_inventory where locn_pcs = 0
	</delete>  
	<insert id="sqlUldAsgnInsUldMov" parameterClass="java.util.HashMap"> 
		insert into uld_mov(tr_type, event_id, uld_key, tr_no, tr_date, doc_line_no, flt_type, flt_key, flt_date,
					cr_user_id, cr_date, lm_user_id, lm_date, seq_no, DAM_IND)
				values ('EF', 'DEF', #ULD_KEY#, #ULD_KEY#, sysdate, 1, 'E', #FLT_KEY#, TO_DATE(#FLT_DATE#,'DDMONYY'),
					#LM_USER_ID#, sysdate, #LM_USER_ID#, sysdate, uld_mov_seq.nextval, #DAM_IND#)
	</insert>	
	<select id="sqlGetoldExpPmanUldAwb" parameterClass="java.util.HashMap" resultClass="java.util.HashMap"> 
		select * from EXP_PMANIFEST_ULD_AWB 
				where  flt_key = #FLT_KEY#
		        and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
		        and    uld_bt_no = #ULD_KEY#
		        and    unldg_pt = #UNLDG_PT#
		        and    awb_no = #AWB_NO#
		        and    awb_date = TO_DATE(#AWB_DATE#,'DDMONYY') 
	</select>	
	
	<select id="sqlGetoldExpPmanUld" parameterClass="java.util.HashMap" resultClass="java.util.HashMap"> 
		select flt_key,TO_CHAR(flt_date,'DDMONYY') FLT_DATE,uld_bt_no,rcl_no,unldg_pt,lm_user_id
		from EXP_PMANIFEST_ULD
				where  flt_key = #FLT_KEY#
		        and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
		        and    uld_bt_no = #ULD_KEY#
		       	and 	flt_type = 'E'
	</select>		
	<!-- Queries for function pkg_pman.del_uld_assign ends-->	
	
	 <!--  Queries for PKG_PMAN  -->  
       <select id="validateFlt" parameterClass="java.util.HashMap" resultClass="java.lang.String">    
        SELECT flt_cls_yn from flt_opr a, flt_opr_events b WHERE a.tr_no = b.tr_no 
			AND b.flt_type='D' AND a.flt_key = #FLT_KEY# AND a.sch_date = TO_DATE(#FLT_DATE#,'DDMONYY')
        </select>
        
       	<select id="get_flt_carr_code" parameterClass="java.util.HashMap" resultClass="java.lang.String">
       		  select carr_code FROM   FLT_OPR where  flt_key = #FLT_KEY# and    sch_date = TO_DATE(#FLT_DATE#,'DDMONYY')
			AND    FLT_TYPE = 'D'
        </select>
		
        <select id="getDLSStatusForFlt" parameterClass="java.util.HashMap" resultClass="java.lang.String">
       		 select 'X' from   flt_opr_events where  flt_key = #FLT_KEY#
            and    sch_date = TO_DATE(#FLT_DATE#,'DDMONYY')
            and    flt_type = 'D'
            and    dls_final_date is not null
        </select>
        <select id="PkgValidateUldKey" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
			 select manifest_yn MANIFEST_YN, ppk_type PPK_TYPE, rcl_no RCL_NO from   v_exp_uld where  uld_key = #ULD_KEY#
		</select>
		<select id="PkgCheckUldKeyIsPPKorMixPPK" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		 select ppk_ind PPK_IND, mix_ppk_ind MIX_PPK_IND from ULD_INVENTORY where  uld_key = #ULD_KEY#
		</select>
		
		 <select id="getNetWt" parameterClass="java.util.HashMap" resultClass="java.lang.String">
        	select net_wt from   exp_rcl_dtl where  rcl_no = #RCL_NO# and    uld_key = #ULD_KEY#
        </select>
         <select id="getBreakDownWt" parameterClass="java.util.HashMap" resultClass="java.lang.String">
       		 select nvl(sum(weight), 0) from   exp_rcl_brkdn where  rcl_no = #RCL_NO# and    uld_key = #ULD_KEY#
        </select>
        <select id="getUldInventoryDetails" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
			 select nvl(resv_flg, 'N') RESV_FLG, uld_type ULD_TYPE, contr_code CONTR_CODE, owner_id OWNER_ID 
			 from   uld_inventory where  uld_key = #ULD_KEY# and owned_inv = 'Y'
		</select>
		<select id="getAwbNo" parameterClass="java.util.HashMap" resultClass="java.lang.String">
       		 select awb_no from exp_uld_awb t1 where  t1.uld_key = #ULD_KEY# and    rcl_no = #RCL_NO#
            and not exists (select null from exp_car t2 where t2.awb_no = t1.awb_no and t2.awb_date = t2.awb_date)
            and    rownum = 1
        </select>
        <select id="getAwbListforPKG" parameterClass="java.util.HashMap" resultClass="java.lang.String">
       		select awb_no from   exp_uld_awb where  uld_key = #ULD_KEY# and    rcl_no = #RCL_NO#
        </select>
        <parameterMap id="ValRestrictedCCMap" class="map">
        <parameter property="STATUS" jdbcType="VARCHAR" javaType="java.lang.String"	mode="OUT" />
		<parameter property="FLT_KEY" jdbcType="VARCHAR" javaType="java.lang.String"	mode="IN" />
		<parameter property="FLT_DATE" jdbcType="VARCHAR"	javaType="java.lang.String" mode="IN" />
		<parameter property="AWB_NO" jdbcType="VARCHAR" javaType="java.lang.String"	mode="IN" />
		<parameter property="PROCESS" jdbcType="VARCHAR" javaType="java.lang.String"	mode="IN" />
	    </parameterMap>
		<procedure id="getValRestrictedCC" parameterMap="ValRestrictedCCMap">
		{? = call pkg_exp_val.val_restricted_cc(?,?,?,?)}
		</procedure>
		<select id="getExpUldAWbAndExpCARDetails" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
			<![CDATA[ select t1.awb_no AWB_NO, t2.carr_code AWB_CARR_CODE from   exp_uld_awb t1, exp_car t2 
			where  t1.awb_no = t2.awb_no
            and    t1.awb_date = t2.awb_date
            and    t1.uld_key = #ULD_KEY#
            and    t1.rcl_no = #RCL_NO#
            and    t2.carr_code <> #CARR_CODE#
            and    rownum = 1 ]]>
		</select>
		
		<select id="getUldTypeProhAcft" parameterClass="java.util.HashMap" resultClass="java.lang.String">
			  select 'X'
	   		 	from   uld_type_proh_acft
	   		 	where  uld_type = #ULD_TYPE#
	   			and    contr_code = #CONTR_CODE#
	   			and    acft_type = (select acft_type
	                       from   flt_opr
	                       where  flt_key = #FLT_KEY#
	                       and    sch_date = to_date(#FLT_DATE#,'DDMONYY')
	                       and    flt_type = 'D')
		</select>
		
		<select id="getPmanAwbDetails" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
			 select car_yn STATUS, carr_code AWB_CARR_CODE, non_pman_pcs  NON_PMAN_BULK_PCS, awb_closed_yn AWB_CLOSED_YN,awb_type AWB_TYPE
				from (select car_yn, carr_code, rcl_pcs, pman_pcs, awb_closed_yn,non_pman_pcs,awb_type
	                from   awb
	                where  awb_no = #AWB_NO# and awb_date =#AWB_DATE#
	                and    (awb_type = 'E' or awb_type = 'T')
					order by cr_date desc)
				where rownum = 1
		</select>
		
		<select id="validateCBXPreman" parameterClass="java.util.HashMap" resultClass="java.lang.String">
			SELECT COUNT(1) FROM cdt_pman_awb WHERE awb_no = #AWB_NO# and awb_date =#AWB_DATE#
		</select>
		
<select id="validateXTShipmentCnt" parameterClass="java.util.HashMap" resultClass="java.lang.String">
			SELECT COUNT(1) FROM XT_IMP_CAR_SHP_DTL WHERE awb_no = #AWB_NO# and awb_date =#AWB_DATE#
		</select>
		
		<select id="getffmfreezeStatus" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">			
			SELECT COUNT(1) FROM start_prep WHERE ffm_frz_date IS not NULL AND ffm_frz_user_id IS not NULL and flt_key=#fltKey# and flt_date=#fltDate#
		</select>

		<select id="getAwbLockStatus" parameterClass="java.util.HashMap" resultClass="java.lang.String">			
			select DECODE(AWB.EXP_AWB_LOCK, 'Y','X',DECODE(LOCK_IND,'Y','X')) from awb left join exp_car on awb.awb_no = exp_car.awb_no and awb.awb_date = exp_car.awb_date
			where awb.awb_no = #AWB_NO# and awb.awb_date = to_date(#AWB_DATE#,'DDMONYY')
		</select>
		
		<select id="getAwbMissStatus" parameterClass="java.util.HashMap" resultClass="java.lang.String">
			  select 'X' 
			  from awb_lock inv 	   
			  where inv.awb_no = #AWB_NO# 
			  and inv.miss_yn = 'Y'			  
		</select>
		
		<select id="getAwbInventoryStatus" parameterClass="java.util.HashMap" resultClass="java.lang.String">
			  select 'X' from   awb_inventory where  awb_no = #AWB_NO# and    ppk_ind in('B', 'P')
                and    rownum = 1
		</select>
		<select id="getNonPmanBulkPcs" parameterClass="java.util.HashMap" resultClass="java.lang.String">
			  select decode(rcl_bulk_pcs - pman_bulk_pcs,0, non_pman_pcs,rcl_bulk_pcs - pman_bulk_pcs) from   awb where  awb_no = #AWB_NO# and  (awb_type = 'E' or awb_type = 'T')
	           and    awb_closed_yn = 'N'
		</select>
       <!--  Queries for PKG_PMAN  --> 	
       <!--  Queries for trg_biud_exp_offload_uld begin -->
       <update id="sqlUldInvUpdate" parameterClass="java.lang.String">            	
		 	update uld_inventory set 
		 	flt_key = null, 
            flt_type = null, 
            flt_date = null
            where uld_key = #ULD_BT_NO#			
	</update>
	<update id="sqlUldInvUpdateOnTrig" parameterClass="java.util.HashMap">            	
		 	update uld_inventory set 
		    flt_key = #FLT_KEY#,
		    flt_type = 'E',
            flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
            where uld_key = #ULD_BT_NO#	
	</update>   
	<!--  Queries for trg_biud_exp_offload_uld end -->
	
	    <!--  Queries for TRG_EXP_FLT_ULD_CNTG_FLT_INS -->
	<insert id="sqlExpFltUldCntgFltIns" parameterClass="java.util.HashMap">
		 INSERT INTO FLT_MOV
		  (ULD_TYPE, ULD_NO, ULD_CARR, ULD_KEY, FLT_TYPE, 
		   CARR_CODE, FLT_NO, FLT_DATE, FLT_KEY, WH_DEST, 
		   LOC_CODE, STRG_D, STRG_MM, SURP_IND, COND_C, 
		   EIC_I, EMPTY_I, CONTR_C, RMK, TR_NO, DOC_LINE_NO,
		   TR_TYPE, CR_USER_ID, CR_DATE, 
		   LM_USER_ID, LM_DATE, SEQ_NO, TR_STATUS, EVENT_ID
		  )
		  VALUES
		  (#ULD_TYPE#, #ULD_NO#, #ULD_CARR#, #ULD_KEY#, 'E', 
		   #FLT_CARR#, #FLT_NO#, TO_DATE(#FLT_DATE#,'DDMONYY'), #FLT_KEY#, NULL, 
		   NULL, NULL,  NULL,'N',NULL,
		   'N','N',NULL,'EXP_FLT_ULD_CNTG_FLT',NULL,#DOC_LINE_NO#,
		   'EF', 'ADMIN', sysdate,
		   'ADMIN', sysdate ,FLT_MOV_SEQ.NEXTVAL,'A','EF' 
		   )
	</insert>
	<!--  Queries for TRG_EXP_FLT_ULD_CNTG_FLT_INS end -->
	<!--  Queries for TRG_BI_EXP_TRANSFER Begin -->
	<select id="sqlBiExpTransferGetRclNo" parameterClass="java.lang.String" resultClass="java.lang.String">
		select rcl_no from
						(select rcl_no from   exp_uld_awb
							where uld_key = #ULD_KEY#
							order by rcl_date desc)
              where  rownum = 1
	</select>
	<delete id="sqlBiExpTransferDel" parameterClass="java.util.HashMap">
	delete from exp_uld_awb
           where uld_key = #ULD_KEY#
           and rcl_no = #RCL_NO#
	</delete>
	<update id="sqlBiExpTransferUpd" parameterClass="java.lang.String">
	            update uld_inventory set
                      flt_key = null,
                      flt_date = null,
                      flt_type = null,
                      contr_code = null,
                      cfm_status = 'CONFIRMED'
              where  uld_key = #ULD_KEY#
	</update>
	<!--  Queries for TRG_BI_EXP_TRANSFER Begin -->
	
	<!--  Queries for TRG_BI_EXP_TRANSFER_DTL Begin -->
	<update id="sqlTriBiExpTransferDtl001" parameterClass="java.util.HashMap">
	update awb_inventory
    set locn_pcs = locn_pcs - #PCS#,
        locn_wt = locn_wt - #WT#
    where  seq_no = #SEQ_NO#
    </update>
    <select id="sqlTriBiExpTransferDtl002" parameterClass="java.lang.String" resultClass="java.util.HashMap">
	SELECT TO_CHAR(strg_date,'DDMONYY') STRG_DATE, locn_pcs, uld_key where  seq_no = #SEQ_NO#
	</select>
	<select id="sqlTriBiExpTransferDtl003" parameterClass="java.lang.String" resultClass="java.lang.String">
	select NVL(count(1),0) rec_count  from EXP_TRANSFER where tr_no = #TR_NO# and uld_key is not null
	</select>
	<select id="sqlTriBiExpTransferDtl004" parameterClass="java.lang.String" resultClass="java.lang.String">
	select rcl_no from   (select rcl_no from   exp_uld_awb
    		                where  awb_no = #AWB_NO# order by rcl_date desc)
            	where  rownum = 1
	</select>
	<delete id="sqlTriBiExpTransferDtl005" parameterClass="java.util.HashMap">
	delete from exp_uld_awb
            where  uld_key = #ULD_KEY#
            and    rcl_no = #RCL_NO#
   	</delete>
	<update id="sqlTriBiExpTransferDtl006" parameterClass="java.lang.String">
	update uld_inventory 
        	set flt_key = null, flt_date = null, flt_type = null, contr_code = null, cfm_status = 'CONFIRMED'
      	  where  uld_key = #ULD_KEY#
	</update>
	<update id="sqlTriBiExpTransferDtl007" parameterClass="java.util.HashMap">
	update awb
    	    set rcl_bulk_pcs = decode (#ULD_KEY#, null, rcl_bulk_pcs - NVL(#PCS#,0), rcl_bulk_pcs),
            rcl_bulk_wt = decode (#ULD_KEY#, null, rcl_bulk_wt - NVL(#WT#,0), rcl_bulk_wt),
            rcl_ppk_pcs = decode (#ULD_KEY#, null, rcl_ppk_pcs, rcl_ppk_pcs - NVL(#PCS#,0)),
            rcl_ppk_wt = decode (#ULD_KEY#, null, rcl_ppk_wt, rcl_ppk_wt - NVL(#WT#,0))
      where  awb_no = #AWB_NO#
      and    awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')      
	</update>
	<delete id="sqlTriBiExpTransferDtl008" parameterClass="java.lang.String">
	delete from awb_inventory where seq_no = #SEQ_NO#
	</delete>
	<update id="sqlTriBiExpTransferDtl009" parameterClass="java.util.HashMap">
	update awb_events
    	    set pcs = pcs + NVL(#PCS#,0),
            wt = wt + NVL(#WT#,0)
      	where  tr_no = #TR_NO#
      and    awb_no = #AWB_NO#
      and    awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')
	</update>
	<insert id="sqlTriBiExpTransferDtl010" parameterClass="java.util.HashMap">
	insert into awb_events (tr_no, awb_no, awb_date,  event_id, event_desc, 
                        pcs, wt, cr_user_id, cr_date, lm_user_id, lm_date)
       values (#TR_NO#, #AWB_NO#, TO_DATE(#AWB_DATE#,'DDMONYY'),  'LCATRF', 'Local Transfer(Create)', 
               #PCS#, #WT#, #CR_USER_ID#, TO_DATE(#CR_DATE#,'DDMONYY'), #LM_USER_ID#, TO_DATE(#LM_DATE#,'DDMONYY'))
	</insert>
	<!--  Queries for TRG_BI_EXP_TRANSFER_DTL End -->
	
	<!-- QUERIES FOR PKG_PMAN.AMEND_ULD_ASSIGN_DECREASE  Begin-->
	<select id="sqlPkgPmanAwbInventory" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select * from   awb_inventory inv
			JOIN AWB awb ON UPPER(awb.AWB_NO) = UPPER(inv.AWB_NO) 
			AND UPPER (awb.awb_date) = UPPER (inv.awb_date)			 
            where  inv.awb_no = #AWB_NO#
	        and    inv.awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')
	        and    inv.uld_key = #ULD_BT_NO#
	        and    inv.flt_key = #FLT_KEY#
	        and    inv.flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
	</select>
	<select id="sqlPkgPmanUldInventory" parameterClass="java.lang.String" resultClass="java.lang.String">
		select loc_code from   uld_inventory
            	where  uld_key = #ULD_BT_NO#		
	</select>
	<select id="sqlPkgPmanExpPmanifestAwbOld" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select ASSIGNED_PCS, ASSIGNED_WT, FLT_KEY, FLT_DATE, ULD_BT_NO 
    	from exp_pmanifest_uld_awb
       		where  flt_key = #FLT_KEY#
         		and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
         		and    uld_bt_no = #ULD_BT_NO#
         		and    unldg_pt = #UNLDG_PT#
         		and    awb_no = #AWB_NO#
         		and	   awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')
	</select>
	<update id="sqlPkgPmanExpPmanifestAwb" parameterClass="java.util.HashMap">
	update exp_pmanifest_uld_awb set
             assigned_pcs = assigned_pcs - NVL(#PCS#,0),
             assigned_wt = assigned_wt - NVL(#WT#,0)
        where  flt_key = #FLT_KEY#
        and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
        and    uld_bt_no = #ULD_BT_NO#
        and    unldg_pt = #UNLDG_PT#
        and    awb_no = #AWB_NO#
        and    awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')
	</update>
	<select id="sqlPkgPmanExpPmanifestUldOld" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select FLT_KEY, FLT_DATE, ULD_BT_NO, RCL_NO, PPK_TYPE, UNLDG_PT, LM_USER_ID 
		from exp_pmanifest_uld
		  where  flt_key = #FLT_KEY#
        	and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
        	and    uld_bt_no = #ULD_BT_NO#
        	and not exists (select null
                        from   exp_pmanifest_uld_awb
                        where  flt_key = t1.flt_key
                        and    flt_date = t1.flt_date
                        and    uld_bt_no = t1.uld_bt_no)
	</select>
	<delete id="sqlPkgPmanExpPmanifestUld" parameterClass="java.util.HashMap">
	delete from exp_pmanifest_uld t1
        where  flt_key = #FLT_KEY#
        and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
        and    uld_bt_no = #ULD_BT_NO#
        and not exists (select null
                        from   exp_pmanifest_uld_awb
                        where  flt_key = t1.flt_key
                        and    flt_date = t1.flt_date
                        and    uld_bt_no = t1.uld_bt_no)
	</delete>
	<update id="sqlPkgPmanAwbInventoryUpd" parameterClass="java.util.HashMap">
	update awb_inventory set
                locn_pcs = locn_pcs - NVL(#PCS#,0),
                locn_wt = locn_wt - NVL(#WT#,0)
            where seq_no = #SEQ_NO#
	</update>
	<update id="sqlPkgPmanAwbInventoryUpd2" parameterClass="java.util.HashMap">
	update awb_inventory inv set
            inv.locn_pcs = inv.locn_pcs + NVL(#PCS#,0),
            inv.locn_wt = inv.locn_wt + NVL(#WT#,0)
        where  inv.awb_no = #AWB_NO#
        and    inv.awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')
        and    ((#LOC_CODE# is null and inv.loc_code is null) or (inv.loc_code = #LOC_CODE#))
        and    nvl(inv.uld_key, '***') = nvl(#BT_NO#, '***')
        and    nvl(inv.lsp_no, 0) = nvl(#LSP_NO#, 0)
        and    inv.flt_key is null
        and    inv.flt_date is null
        and    exists (select null
		       from   awb
		       where  awb_no = inv.awb_no
		       and    awb_date = inv.awb_date
			   )        
	</update>

	<insert id="sqlPkgPmanAwbInvIns" parameterClass="java.util.HashMap">
	insert into awb_inventory(awb_no, awb_date, carr_code, lsp_no, uld_key, 
          loc_code, locn_pcs, locn_wt, strg_date,cr_user_id, cr_date, lm_user_id, lm_date, mov_from)
       values (#AWB_NO#, TO_DATE(#AWB_DATE#,'DDMONYY'), #CARR_CODE#, #LSP_NO#, #BT_NO#, 
          #LOC_CODE#, #PCS#, #WT#, To_DATE(#STRG_DATE#,'DDMONYY'),#USER_ID#, sysdate, #USER_ID#, sysdate,#LOC_CODE#)
	</insert>
	<delete id="sqlPkgPmanAwbInvDel">
	delete from awb_inventory where locn_pcs = 0 and locn_wt = 0
	</delete>	
	<insert id="sqlPkgPmanUldMovIns" parameterClass="java.util.HashMap">
		insert into uld_mov(tr_type, event_id, uld_key, tr_no, tr_date, doc_line_no, 
        	  flt_type, flt_key, flt_date,cr_user_id, cr_date, lm_user_id, lm_date, seq_no)
		values ('EF', 'EFA', #ULD_BT_NO#, #ULD_BT_NO#, sysdate, 1, 
        	  'E', #FLT_KEY#, TO_DATE(#FLT_DATE#,'DDMONYY'), #USER_ID#, sysdate, #USER_ID#, sysdate, uld_mov_seq.nextval)
	</insert>	
	
	<delete id="sqlPkgPmanHawbInvDel">
		DELETE FROM HAWB_INVENTORY WHERE STRG_PCS = 0 AND STRG_WT = 0
	</delete>	
	<!-- QUERIES FOR PKG_PMAN.AMEND_ULD_ASSIGN_DECREASE  End-->
	
	<!-- QUERIES FOR PKG_PMAN.AMEND_ULD_ASSIGN_INCREASE  Begin-->
	<select id="sqlPkgPmanFnAmendUldIncr001" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select t1.seq_no SEQ_NO, t2.pcs PCS, t3.wt WT
            from   (select column_value seq_no, rownum r1
                    from   table(pkg_common.inlist(#AWB_LIST#))) t1,
                   (select column_value pcs, rownum r2
                    from   table(pkg_common.inlist(#PCS_LIST#))) t2,
                   (select column_value wt, rownum r3
                    from   table(pkg_common.inlist(#WT_LIST#))) t3
            where  t1.r1 = t2.r2
            and    t2.r2 = t3.r3
	</select>
	<select id="sqlPkgPmanFnAmendUldIncr002" parameterClass="java.lang.String" resultClass="java.lang.String">
	select sum(column_value)PCS 
    		from   table(pkg_common.inlist(#PCS_LIST#))
    </select>
    <select id="sqlPkgPmanFnAmendUldIncr003" parameterClass="java.lang.String" resultClass="java.lang.String">
	select sum(column_value)WT 
    		from   table(pkg_common.inlist(#WT_LIST#))
    </select>
    <update id="sqlPkgPmanFnAmendUldIncr004" parameterClass="java.util.HashMap">
    update exp_pmanifest_uld_awb set
             assigned_pcs = assigned_pcs + NVL(#PCS#,0),
             assigned_wt = assigned_wt + NVL(#WT#,0)
        where  flt_key = #FLT_KEY#
        and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
        and    uld_bt_no = #ULD_BT_NO#
        and    unldg_pt = #UNLDG_PT#
        and    awb_no = #AWB_NO#
        and    awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')        
    </update>
    <update id="sqlPkgPmanFnAmendUldIncr005" parameterClass="java.util.HashMap">
    update awb_inventory set
                locn_pcs = locn_pcs - NVL(#PCS#,0),
                locn_wt = locn_wt - NVL(#WT#,0),
                LM_USER_ID = NVL(#USER_ID#,LM_USER_ID)
            where  seq_no = #SEQ_NO# 
	</update>
	<select id="sqlPkgPmanFnAmendUldIncr006" parameterClass="java.lang.String" resultClass="java.lang.String">
	select TO_CHAR(strg_date,'DDMONYYHH24MI') STRG_DATE from awb_inventory 
			where seq_no = #SEQ_NO#
    </select>
    
    <update id="sqlPkgPmanFnAmendUldIncr007" parameterClass="java.util.HashMap">
    update awb_inventory inv set
	            inv.locn_pcs = inv.locn_pcs + NVL(#PCS#,0),
	            inv.locn_wt = inv.locn_wt + NVL(#WT#,0)
	        where  inv.awb_no = #AWB_NO#
	        and    inv.awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')	
	        and    ((#LOC_CODE# is null and inv.loc_code is null) or (inv.loc_code = #LOC_CODE#))
	        and    inv.uld_key = #ULD_BT_NO#	        
	        and    inv.flt_key = #FLT_KEY#
	        and    inv.flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')  
	        and    exists (select null
					       from   awb
					       where  awb_no = inv.awb_no
					       and    awb_date = inv.awb_date
						   )         
    </update>
    <insert id="sqlPkgPmanFnAmendUldIncr008" parameterClass="java.util.HashMap">
   	INSERT INTO awb_inventory(
    	awb_no, awb_date,  carr_code, lsp_no, uld_key, loc_code, locn_pcs, locn_wt, 
    	strg_date, flt_type, flt_key, flt_date, cr_user_id, cr_date, lm_user_id, lm_date)
  	VALUES (#AWB_NO#, TO_DATE(#AWB_DATE#,'DDMONYY'),  #CARR_CODE#, NULL, #ULD_BT_NO#, #LOC_CODE#, #PCS#, #WT#,
    	TO_DATE(#STRG_DATE#,'DDMONYY'), 'E', #FLT_KEY#, TO_DATE(#FLT_DATE#,'DDMONYY'), #USER_ID#, sysdate, #USER_ID#, sysdate)
    </insert>
    
     <update id="sqlPkgPmanFnAmendUldIncr009" parameterClass="java.util.HashMap">
    	UPDATE HAWB_INVENTORY 
		   SET STRG_PCS = STRG_PCS - #HAWB_PCS#, 
		   STRG_WT = STRG_WT - #HAWB_WT#, 
		   LM_USER_ID = #USER_ID#, LM_DATE = SYSDATE
      	WHERE SEQ_NO = #SEQ_NO# AND HAWB_NO= #HAWB_NO#
	</update>
	
    <!-- QUERIES FOR PKG_PMAN.AMEND_ULD_ASSIGN_INCREASE  End-->
    <update id="updateERCLStatus" parameterClass="java.util.HashMap">       
    	UPDATE EXP_PRE_RCL_HD SET STATUS = #STATUS#,TR_TYPE_EVT=#DUMMY# WHERE PRE_RCL_NO = #PRE_RCL_NO#
    </update>
    
    <!-- QUERIES FOR TRG_BD_EXP_PMANIFEST_ULD  Begin-->
	<delete id="sqlTrgBdExpPmanUld001" parameterClass="java.util.HashMap">
	delete from exp_flt_uld  
		where  flt_key = #FLT_KEY#
    	and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
    	and    uld_key = #ULD_BT_NO#
    </delete>
    <update id="sqlTrgBdExpPmanUld002" parameterClass="java.util.HashMap">
    update exp_uld_awb
    set manifest_yn = 'N', closed_yn = 'N'
    where  uld_key = #ULD_BT_NO#
    and    rcl_no = #RCL_NO#
    </update>
    <select id="sqlTrgBdExpPmanUld003" parameterClass="java.util.HashMap" resultClass="java.lang.String">
    select 'x' from   exp_offload_pman_uld
	  	where  flt_key = #FLT_KEY#
	  	and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
	  	and    uld_bt_no = #ULD_BT_NO#
    </select>
    <insert id="sqlTrgBdExpPmanUld004" parameterClass="java.util.HashMap">
    insert into exp_tally_sheet (flt_key, flt_date, trans_type, uld_key, rcl_no, unldg_pt, cr_user_id, 
       cr_date, lm_user_id, lm_date, dest,ref_no, content)
		values (#FLT_KEY#, TO_DATE(#FLT_DATE#,'DDMONYY'), 'BUILDUP (DELETE)', #ULD_BT_NO#, #RCL_NO#, #UNLDG_PT#, #LM_USER_ID#,
            sysdate, #LM_USER_ID#, sysdate, #DEST#, #REF_NO#, #CONTENT#)
	</insert>
	<select id="sqlTrgBdExpPmanUld005" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select FLT_KEY, TO_CHAR(FLT_DATE,'DDMONYY') AS FLT_DATE, SOURCE, EIC_YN, PPK_TYPE, TARE_WT, ULD_KEY, TO_CHAR(#cr_date#,'DDMONYY') CR_DATE, LM_USER_ID
	from exp_flt_uld  
		where  flt_key = #FLT_KEY#
    	and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
    	and    uld_key = #ULD_BT_NO#
    </select>
	<!-- QUERIES FOR TRG_BD_EXP_PMANIFEST_ULD  End-->
	
      <!-- Queries for TRG_BIUD_PMAN_TARMAC_AWB -->
      <!-- Added By Mithun KK - Starts and awb_type=#AWB_TYPE#-->
 	<select id="sqlgettarmacawbdetails" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
     	select pcs, wt, pman_ppk_pcs, pman_ppk_wt, pman_bulk_pcs, pman_bulk_wt, pman_mix_pcs, pman_mix_wt, ppk_type, car_yn from awb where awb_no=#AWB_NO# and awb_date=TO_DATE(#AWB_DATE#,'DDMONYY') 
    </select>
      <!-- Added By Mithun KK - Ends -->
    <update id="sqlPmanTarmacUpdAwbSub" parameterClass="java.util.HashMap">
	    UPDATE AWB
	        SET PMAN_BULK_PCS = PMAN_BULK_PCS -  NVL(#BULK_PCS#,0),
	            PMAN_BULK_WT = PMAN_BULK_WT - NVL(#BULK_WT#,0),
	            PMAN_PPK_PCS = PMAN_PPK_PCS - NVL(#PPK_PCS#,0),
	            PMAN_PPK_WT = PMAN_PPK_WT - NVL(#PPK_WT#,0),
	            PMAN_PCS = NVL(#PMAN_PCS#,PMAN_PCS),
			    PMAN_WT = NVL(#PMAN_WT#,PMAN_WT),
			    NON_PMAN_PCS = NVL(#NON_PMAN_PCS#,NON_PMAN_PCS),
			    NON_PMAN_WT = NVL(#NON_PMAN_WT#,NON_PMAN_WT),
			    TR_TYPE=#TR_TYPE#
	        WHERE  AWB_NO = #AWB_NO#
	  		AND    AWB_DATE = TO_DATE(#AWB_DATE#,'DDMONYY')	        
	</update>
	<update id="sqlPmanTarmacUpdAwbAdd" parameterClass="java.util.HashMap">
		UPDATE AWB SET
		   PMAN_BULK_PCS = PMAN_BULK_PCS + NVL(#BULK_PCS#,0),
		   PMAN_BULK_WT = PMAN_BULK_WT + NVL(#BULK_WT#,0),
		   PMAN_PPK_PCS = PMAN_PPK_PCS + NVL(#PPK_PCS#,0),
		   PMAN_PPK_WT = PMAN_PPK_WT + NVL(#PPK_WT#,0),
		   PMAN_PCS = NVL(#PMAN_PCS#,PMAN_PCS),
		   PMAN_WT = NVL(#PMAN_WT#,PMAN_WT),
		   NON_PMAN_PCS = NVL(#NON_PMAN_PCS#,NON_PMAN_PCS),
		   NON_PMAN_WT = NVL(#NON_PMAN_WT#,NON_PMAN_WT),
		   TR_TYPE=#TR_TYPE#
		  WHERE  AWB_NO = #AWB_NO#
		  AND    AWB_DATE = TO_DATE(#AWB_DATE#,'DDMONYY')		          
  	</update>
  	<insert id="sqlPmanTarmacAwbEvents" parameterClass="java.util.HashMap">
		INSERT INTO AWB_EVENTS
			 (AWB_NO,AWB_DATE,EVENT_ID,
			  EVENT_DESC,
			  FLT_KEY,FLT_DATE,FLT_TYPE,TR_NO,
			  ULD_KEY,PCS,WT,
			  CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE)
			 VALUES
			  (#AWB_NO#,TO_DATE(TRIM(#AWB_DATE#),'DDMONYY'),#EVENT_ID#,
			   (SELECT EVENT_DESC FROM MAST_AWB_EVENTS WHERE EVENT_ID = #EVENT_ID#),
			   #FLT_KEY#, TO_DATE(#FLT_DATE#,'DDMONYY'), 'I', #AWB_NO#,
			   null, (nvl(#PPK_PCS#,0) + nvl(#ASSIGNED_BULK_PCS#,0)), (nvl(#PPK_WT#,0) + nvl(#ASSIGNED_BULK_WT#,0)),
			   #LM_USER_ID#,sysdate, #LM_USER_ID#,sysdate)  
     </insert>
    <!-- Queries for TRG_BIUD_PMAN_TARMAC_AWB ends-->  
	<!-- Queries for pkg_exp_acpt.del_return_cargo -->
    <update id="sqlDRCUpdAwb" parameterClass="java.util.HashMap">
    		update awb
		            set rcl_bulk_pcs = decode(#PPK_TYPE#, 'B', rcl_bulk_pcs + NVL(#PCS#,0), rcl_bulk_pcs),
		                rcl_bulk_wt = decode(#PPK_TYPE#, 'B', rcl_bulk_wt + NVL(#WT#,0), rcl_bulk_wt),
		                rcl_ppk_pcs = decode(#PPK_TYPE#, 'P', rcl_ppk_pcs + NVL(#PCS#,0), rcl_ppk_pcs),
		                rcl_ppk_wt = decode(#PPK_TYPE#, 'P', rcl_ppk_wt + NVL(#WT#,0), rcl_ppk_wt),
		                rcl_mix_pcs = decode(#PPK_TYPE#, 'M', rcl_mix_pcs + NVL(#PCS#,0), rcl_mix_pcs),
		                rcl_mix_wt = decode(#PPK_TYPE#, 'M', rcl_mix_wt + NVL(#WT#,0), rcl_mix_wt),
		                rcl_pcs = decode(#PPK_TYPE#, 'B', rcl_bulk_pcs + NVL(#PCS#,0), rcl_bulk_pcs) 
		                			+ decode(#PPK_TYPE#, 'P', rcl_ppk_pcs + NVL(#PCS#,0), rcl_ppk_pcs) 
		                			+ decode(#PPK_TYPE#, 'M', rcl_mix_pcs + NVL(#PCS#,0), rcl_mix_pcs),
						rcl_wt = decode(#PPK_TYPE#, 'B', rcl_bulk_wt + NVL(#WT#,0), rcl_bulk_wt) 
								  +	decode(#PPK_TYPE#, 'P', rcl_ppk_wt + NVL(#WT#,0), rcl_ppk_wt)
								  + decode(#PPK_TYPE#, 'M', rcl_mix_wt + NVL(#WT#,0), rcl_mix_wt),	                			    
		                rtn_pcs = rtn_pcs - NVL(#PCS#,0),
		                rtn_wt = rtn_wt - NVL(#WT#,0)
		            where  awb_no = #AWB_NO#
		            and    awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')   
	</update>	
	<select id="sqlDRCGetRclDtls" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">         
		select t1.del_yn, TO_CHAR(t2.rcl_date,'DDMONYY') RCL_DATE, t1.rmk, t2.ppk_type, t2.carr_code, t2.flt_no, TO_CHAR(t2.flt_date,'DDMONYY') FLT_DATE, t2.flt_key 	       
	        from   exp_rtn_hd t1, exp_rcl_hd t2, exp_rtn_rcl t3
          where t2.rcl_no = t3.rcl_no
          and  t1.rtn_no = t3.rtn_no
          and t1.rtn_no = #SRF_NO#
          and t3.rcl_no = #RCL_NO#
	</select>
	<update id="sqlDRCUpdRclHd" parameterClass="java.util.HashMap">          
		update exp_rcl_hd
		        set rtn_pcs = rtn_pcs - NVL(#PCS#,0),
		            rtn_wt = rtn_wt - NVL(#WT#,0),
		            rtn_ind = 'N'
		        where  rcl_no = #RCL_NO#
	</update>
	
	<update id="sqlDRCUpdRclHdForMix" parameterClass="java.util.HashMap">          
		update exp_rcl_hd
		        set rtn_pcs = 0,
		            rtn_wt = rtn_wt - NVL(#WT#,0),
		            rtn_ind = 'N'
		        where  rcl_no = #RCL_NO#
	</update>
	
	<select id="sqlDRCGetRtnDtl" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">		            
		select b.awb_no, TO_CHAR(b.awb_date,'DDMONYY') AWB_DATE, b.uld_key, b.pcs, b.wt, 
                        TO_CHAR(b.cr_date,'DDMONYY') CR_DATE, b.doc_line_no, b.loc_code,b.lsp_no
                        from exp_rtn_dtl b  where b.rtn_no = #SRF_NO#  	            
	</select>
	<insert id="sqlDRCInsExpUldAwb" parameterClass="java.util.HashMap">
		insert into exp_uld_awb (ULD_KEY, AWB_NO, AWB_DATE, RCL_NO, PPK_TYPE, MANIFEST_YN, CLOSED_YN, PCS, WT, RCL_DATE)
				values(#ULD_KEY#, #AWB_NO#, TO_DATE(#AWB_DATE#,'DDMONYY'), #RCL_NO#, #PPK_TYPE#, 'N', 'N', NVL(#PCS#,0), NVL(#WT#,0), TO_DATE(#RCL_DATE#,'DDMONYY'))            
	</insert>
	<update id="sqlDRCUpdAwbInvLoc" parameterClass="java.util.HashMap">
		update awb_inventory
		            set locn_pcs = locn_pcs + NVL(#PCS#,0),
		                locn_wt = locn_wt + NVL(#WT#,0),
		                bulk_wt = decode(#PPK_TYPE#, 'B',(bulk_wt + NVL(#WT#,0)), bulk_wt),
		                bup_wt = decode(#PPK_TYPE#, 'M',(bup_wt + NVL(#WT#,0)), 'P',(bup_wt + NVL(#WT#,0)), bup_wt),
		                srf_no = null,
		                lm_user_id = #LM_USER_ID#,
		                lm_date = sysdate,
		                ref_tr_no = #SRF_NO#,
		                ref_tr_type = 'DC',
		                ref_tr_date = TO_DATE(#CR_DATE#,'DDMONYY'),
		                ref_doc_line_no = #DOC_LINE_NO#,
		                ref_loc_from = #LOC_CODE#,
		                ref_tr_event = 'DC',
		                ref_rmk = #RMK#,		               
		                ref_awb_event = decode(#PPK_TYPE#, 'B','DRBULK','P','DRBUP','M','DRMIX')
		            where  awb_no = #AWB_NO#
		            and    awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')
		            and    nvl(loc_code, '***') = nvl(#LOC_CODE#, '***')
		            and    nvl(uld_key, '***') = nvl(#ULD_KEY#, '***')
		            and    nvl(lsp_no, 000) = nvl(#LSP_NO#, 000)
	</update>
	<insert id="sqlDRCInsAwbInv" parameterClass="java.util.HashMap">
		insert into awb_inventory(seq_no,awb_no, awb_date, carr_code, loc_code, locn_pcs, locn_wt, uld_key, lsp_no,
				            strg_date, ppk_ind, cr_user_id, cr_date, lm_user_id, lm_date )
				        values (AWB_INV_SEQ.NEXTVAL,#AWB_NO#,  TO_DATE(#AWB_DATE#,'DDMONYY'),  #CARR_CODE#, #LOC_CODE#, NVL(#PCS#,0), NVL(#WT#,0), #ULD_KEY#, #LSP_NO#,
				            sysdate, decode(#PPK_TYPE#, 'B', 'B', 'P'), #LM_USER_ID#, sysdate, #LM_USER_ID#, sysdate)                
	</insert>
	<insert id="sqlDrcInsAwbEvents" parameterClass="java.util.HashMap">
		insert into awb_events(awb_no, awb_date, event_id, event_desc, flt_key, flt_date, 
								flt_type, tr_no, uld_key, pcs,wt, cr_user_id, cr_date, lm_user_id, lm_date)
                values (#AWB_NO#, TO_DATE(TRIM(#AWB_DATE#),'DDMONYY'),  #EVENT_ID#, (select distinct event_desc
                                                                   from   mast_awb_events
                                                                   where  event_id = #EVENT_ID#), null, null,
                         'E', #AWB_NO#, #ULD_KEY#, #PCS#,#WT#, #LM_USER_ID#, sysdate, #LM_USER_ID#, sysdate)
	</insert>
	<select id="sqlDRCGetRclBrkdn" parameterClass="java.lang.String" resultClass="java.util.HashMap">
		select awb_no, TO_CHAR(awb_date,'DDMONYY') AWB_DATE, pcs, weight WT from exp_rcl_brkdn where  rcl_no = #RCL_NO#         
	</select>
	<update id="sqlDRCUpdAwbInv" parameterClass="java.util.HashMap">
		update awb_inventory
				            set locn_pcs = locn_pcs + NVL(#PCS#,0),
				                locn_wt = locn_wt + NVL(#WT#,0),
				                bulk_wt = decode(#PPK_TYPE#, 'B',(bulk_wt + NVL(#WT#,0)), bulk_wt),
				                bup_wt = decode(#PPK_TYPE#, 'M',(bup_wt + NVL(#WT#,0)T), 'P',(bup_wt + NVL(#WT#,0)), bup_wt),
				                srf_no = null,
				                lm_user_id = #LM_USER_ID#,
				                lm_date = sysdate,
				                ref_tr_no = #SRF_NO#,
				                ref_tr_type = 'DC',
				                ref_tr_date = sysdate,
				                ref_doc_line_no = 1,
				                ref_loc_from = #LOC_CODE#,
				                ref_tr_event = 'DC',
				                ref_rmk = #RMK#,				                
				                ref_awb_event = decode(#PPK_TYPE#, 'B','DRBULK','P','DRBUP','M','DRMIX')
				            where  awb_no = #AWB_NO#
				            and    awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')
				            and    nvl(uld_key, '***') = nvl(#ULD_KEY#, '***')
				            and    nvl(lsp_no, 000) = nvl(#LSP_NO#, 000)
	</update>
	<update id="sqlDRCUpdUldRelDtl" parameterClass="java.util.HashMap">
		update uld_rel_dtl a
			            set a.status = 'RETURNED',
			                a.ret_date = sysdate,
			                a.ret_user = #LM_USER_ID#
			            where  a.uld_key = #ULD_KEY#
			            and    a.status = 'RELEASED'
			            and    a.tr_no in(select max(to_number(b.tr_no))
			                              from   uld_rel_dtl b
			                              where  b.uld_key = #ULD_KEY#)
	</update>
	<update id="sqlDRCUpdUldInv" parameterClass="java.util.HashMap">			                              
		update uld_inventory
		            set cfm_status = decode(#PPK_TYPE#, 'M', 'RCLMIXPREPACK', 'P', 'RCLPREPACK', 'B', 'RCLBULK'),
		                carr_code = #CARR_CODE#,		               	                
		                loc_code = #LOC_CODE#,
		                lm_user_id = #LM_USER_ID#,
		                lm_date = sysdate,
		                empty_flg = 'N',
		                agent_id = '',
		                owned_inv = 'Y',
		                ENTRY_TIME = sysdate
		            where  uld_key = #ULD_KEY#
	</update>
	<delete id="sqlDRCDelBillChargeDtl" parameterClass="java.lang.String">
		delete from bill_charge_dtl where status != 'PAID' and wavr_done = 'N' and srf_no = #SRF_NO#
	</delete>
	<update id="sqlDRCUpdRtnHd" parameterClass="java.util.HashMap">
		update exp_rtn_hd set del_yn = 'Y', del_user_id = #LM_USER_ID#, del_date = sysdate where (srf_no = #SRF_NO# OR rtn_no = #RTN_NO#)
	</update>
	<select id="sqlDRCGetRclNos" parameterClass="java.lang.String" resultClass="java.lang.String">
		select  t2.rcl_no	        
	        from   exp_rtn_hd t1,  exp_rtn_rcl t2, exp_rcl_hd t3
	        where t1.rtn_no = #RTN_NO#     
          and  t1.rtn_no = t2.rtn_no
          and  t2.rcl_no = t3.rcl_no         
	</select>          
<!-- Queries for pkg_exp_acpt.del_return_cargo ends-->
<!-- Queries for PKG_PMAN.AMEND_FLT_NO -->
       
       <select id="getExpPmanifestAwbDtls" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
			 select to_char(awb_date, 'DDMONYY') AWB_DATE, group_no GROUP_NO, bldup_instr BLDUP_INSTR, man_rmk MAN_RMK,
			 bulk_pcs BULK_PCS, bulk_wt BULK_WT,AWB_NO AWB_NO
			 from exp_pmanifest_awb where flt_key = #FLT_KEY_FROM# and flt_date = to_date(#FLT_DATE_FROM#,'DDMONYY')
	         and    unldg_pt = #UNLDG_PT_FROM#  and    awb_no = #AWB_NO#  and   awb_date = to_date(#AWB_DATE#,'DDMONYY')
		</select>
		
        <delete id="delExpPmanifestAwbDtl" parameterClass="java.util.HashMap">
		 delete from exp_pmanifest_awb where  flt_key = #FLT_KEY_FROM# and    flt_date = to_date(#FLT_DATE_FROM#,'DDMONYY')
         and    unldg_pt = #UNLDG_PT_FROM# and    awb_no = #AWB_NO# and bulk_pcs = #PCS#
		</delete>
		
		<update id="updateExpPmanifestAwb" parameterClass="java.util.HashMap">
		 update exp_pmanifest_awb set
            bulk_pcs = bulk_pcs - #PCS#,
            bulk_wt = bulk_wt - #WT#
            where  flt_key = #FLT_KEY_FROM#
            and    flt_date = to_date(#FLT_DATE_FROM#,'DDMONYY')
            and    unldg_pt = #UNLDG_PT_FROM#
            and    awb_no = #AWB_NO#
            and    awb_date = to_date(#AWB_DATE#,'DDMONYY')
		</update>		
		
		 <select id="getExpPmanifestAwbUnassignDetails" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">		 	
 			select to_char(pman.awb_date, 'DDMONYY') AWB_DATE, pman.group_no GROUP_NO, 
			 	pman.bldup_instr BLDUP_INSTR, pman.man_rmk MAN_RMK, 
			 	pman.PMAN_PCS PMAN_PCS, pman.PMAN_WT PMAN_WT, pman.bulk_pcs BULK_PCS, 
       			pman.bulk_wt BULK_WT,pman.AWB_NO AWB_NO,
				pman.ASSIGNED_BULK_PCS ASSIGNED_BULK_PCS, pman.ASSIGNED_BULK_WT ASSIGNED_BULK_WT,
       			awb.awb_type AWB_TYPE      
			 	from exp_pmanifest_awb pman
       			join AWB awb on
       			awb.awb_no = pman.awb_no
			 	and awb.awb_date =  pman.awb_date	
			where 
       			pman.flt_key = #FLT_KEY_FROM#
			 	and pman.flt_date = to_date(#FLT_DATE_FROM#,'DDMONYY')
       			and pman.unldg_pt = #UNLDG_PT_FROM#  
       			and pman.awb_no = #AWB_NO#
	     		and pman.awb_date = to_date(#AWB_DATE#,'DDMONYY')		 
		</select>
		
		<update id="updateExpPmanAwbUnassignDetails" parameterClass="java.util.HashMap">
		 update exp_pmanifest_awb set
            bulk_pcs = bulk_pcs - #UNASSIGNED_BULK_PCS#,
            bulk_wt = bulk_wt - #UNASSIGNED_BULK_PCS# ,
            unassigned_bulk_pcs = unassigned_bulk_pcs - #UNASSIGNED_BULK_PCS#,
			unassigned_bulk_wt = unassigned_bulk_pcs - #UNASSIGNED_BULK_PCS#,
			pman_pcs = pman_pcs - #UNASSIGNED_BULK_PCS#,
			pman_wt = pman_wt - #UNASSIGNED_BULK_PCS#               
            where  flt_key = #FLT_KEY_FROM#
            and    flt_date = to_date(#FLT_DATE_FROM#,'DDMONYY')
            and    unldg_pt = #UNLDG_PT_FROM#
            and    awb_no = #AWB_NO#
            and    awb_date = to_date(#AWB_DATE#,'DDMONYY')
		</update>
		
		<insert id="insertExpPmanAwbUnassignDetails" parameterClass="java.util.HashMap"> 
		insert into exp_pmanifest_awb(flt_key, flt_date, unldg_pt, awb_no, awb_date, group_no, bldup_instr, man_rmk, bulk_pcs, bulk_wt,
                	cr_user_id, cr_date, lm_user_id, lm_date,FLT_TYPE,unassigned_bulk_pcs,unassigned_bulk_wt, pman_pcs, pman_wt)
                values (#FLT_KEY_TO#, to_date(#FLT_DATE_TO#,'DDMONYY'), #UNLDG_PT_TO#, #AWB_NO#, to_date(#AWB_DATE#,'DDMONYY'),#GROUP_NO#,#BLDUP_INSTR#, 
                	#MAN_RMK#, #PCS#, #WT#,	#USER_ID#, sysdate, #USER_ID#, sysdate,'E',#UNASSIGNED_BULK_PCS#,#UNASSIGNED_BULK_WT#,#UNASSIGNED_BULK_PCS#,#UNASSIGNED_BULK_WT#)
		</insert>
		<update id="updForUnqConstViolationAwbUnassignDetails" parameterClass="java.util.HashMap">
		  update exp_pmanifest_awb set
                        bulk_pcs = bulk_pcs + #PCS#,
                        bulk_wt = bulk_wt + #WT#,
                        unassigned_bulk_pcs = unassigned_bulk_pcs + #UNASSIGNED_BULK_PCS#,
						unassigned_bulk_wt = unassigned_bulk_pcs + #UNASSIGNED_BULK_WT#,
						pman_pcs = pman_pcs + #UNASSIGNED_BULK_PCS#,
						pman_wt = pman_wt + #UNASSIGNED_BULK_PCS#    
                        group_no = nvl(group_no, #GROUP_NO#),
                        bldup_instr = nvl(bldup_instr, #BLDUP_INSTR#),
                        man_rmk = nvl(man_rmk,  #MAN_RMK#),
                        lm_user_id =#USER_ID#,
                        lm_date = sysdate
		            where  flt_key = #FLT_KEY_TO#
		            and    flt_date = to_date(#FLT_DATE_TO#,'DDMONYY')
		            and    unldg_pt = #UNLDG_PT_TO#
		            and    awb_no = #AWB_NO#
		            and    awb_date =  to_date(#AWB_DATE#,'DDMONYY')
		</update>
		
		<insert id="insertExpPmanifestAwb" parameterClass="java.util.HashMap"> 
		insert into exp_pmanifest_awb(flt_key, flt_date, unldg_pt, awb_no, awb_date, group_no, bldup_instr, man_rmk, bulk_pcs, bulk_wt,
                	cr_user_id, cr_date, lm_user_id, lm_date,FLT_TYPE)
                values (#FLT_KEY_TO#, to_date(#FLT_DATE_TO#,'DDMONYY'), #UNLDG_PT_TO#, #AWB_NO#, to_date(#AWB_DATE#,'DDMONYY'),#GROUP_NO#,#BLDUP_INSTR#, #MAN_RMK#, #PCS#, #WT#,
                	#USER_ID#, sysdate, #USER_ID#, sysdate,'E')
		</insert>
		<update id="updForUnqConstViolation" parameterClass="java.util.HashMap">
		  update exp_pmanifest_awb set
                        bulk_pcs = bulk_pcs + #PCS#,
                        bulk_wt = bulk_wt + #WT#,
                        group_no = nvl(group_no, #GROUP_NO#),
                        bldup_instr = nvl(bldup_instr, #BLDUP_INSTR#),
                        man_rmk = nvl(man_rmk,  #MAN_RMK#),
                        lm_user_id =#USER_ID#,
                        lm_date = sysdate
		            where  flt_key = #FLT_KEY_TO#
		            and    flt_date = to_date(#FLT_DATE_TO#,'DDMONYY')
		            and    unldg_pt = #UNLDG_PT_TO#
		            and    awb_no = #AWB_NO#
		            and    awb_date =  to_date(#AWB_DATE#,'DDMONYY')
		</update>
		<!-- Queries for PKG_PMAN.AMEND_FLT_NO -->
			
		<!-- Queries for PKG_PMAN.FLT_PORTS -->
		<select id="getFltPortDtls" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		 select   t2.off_point from     flt_opr t1, flt_opr_leg t2 where    t1.tr_no = t2.tr_no
         and t1.flt_key = #FLT_KEY#  and t1.sch_date = to_date(#FLT_DATE#,'DDMONYY') and t1.flt_type = 'D' order by t2.leg_ord
       	</select>

		
       	<select id="getFltPortForDLS" parameterClass="java.util.HashMap" resultClass="java.lang.String">
			 select   t2.off_point from     flt_opr t1, flt_opr_leg t2 where    t1.tr_no = t2.tr_no
	         and t1.flt_key = #FLIGHTKEY#  and t1.sch_date = to_date(#FLIGHTDATE#,'DDMONYY') and t1.flt_type = 'D' 
	         AND ROWNUM = 1
       	</select>
       	
       	<select id="getBulkCargoLoadType" parameterClass="java.util.HashMap" resultClass="java.lang.String">
			 select decode(catalog,'EG','C','ES','C','IG','C','TG','C','TA','C','EU','M','TM','M','EO','Q','IO','Q','C') as uldType from 
			 awb where SUBSTR(AWB_NO,1,3)||'-'||SUBSTR(AWB_NO,4) = #AWBNO# and awb_date = to_date(#AWBDATE#,'DDMONYY')
       	</select>
       	
		<!-- Queries for PKG_PMAN.FLT_PORTS -->
		
		<!-- Queries for PKG_PMAN.VAL_PREMAN_BULK -->
		<select id="fetchPremanifestStatus" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		 select 'Premanifest has already been created for ' || #AWB_NO# || ' Please Use Amend option. '
         from   exp_pmanifest_awb where  awb_no = #AWB_NO# and    flt_key = #FLT_KEY#
         and    flt_date = to_date(#FLT_DATE#,'DDMONYY') and    unldg_pt = #UNLDG_PT# and    bulk_pcs > 0
       	</select>
		<!-- Queries for PKG_PMAN.FLT_PORTS -->
		
		<!-- Queries for PKG_PMAN.AWB_EVENT_INS_BY_AWB -->
		<select id="getExpUldAwbDtls" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		  select to_char(awb_date,'DDMONYY') AWB_DATE, pcs PCS, wt WT from   exp_uld_awb where  rcl_no = #RCL_NO#
	        and    uld_key = #ULD_KEY# and    awb_no = #AWB_NO#
       	</select>
       	<insert id="insertIntoUldMov" parameterClass="java.util.HashMap"> 
		insert into uld_mov(tr_type, event_id, uld_key, tr_no, tr_date, doc_line_no, mov_from, flt_type, flt_key, flt_date,
				cr_user_id, cr_date, lm_user_id, lm_date, seq_no, uld_status,DAM_IND)
			values ('EF', 'EFPA', #ULD_KEY#, '0', sysdate, 1, null, 'E', #FLT_KEY#, to_date(#FLT_DATE#,'DDMONYY'),
				#USER_ID#, sysdate, #USER_ID#, sysdate, uld_mov_seq.nextval, (select cfm_status from uld_inventory where uld_key = #ULD_KEY#),(select dam_ind from uld_inventory where uld_key = #ULD_KEY#))
		</insert>
		<!-- Queries for PKG_PMAN.AWB_EVENT_INS_BY_AWB -->
		<!-- Queries for PKG_PMAN.AWB_ULD_IND Begin -->
		<select id="sqlFnAwbUldInd001" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		select nvl(sum(locn_pcs), 0)
		  from   awb_inventory
		  where  awb_no = #AWB_NO#
		  and    awb_date = to_date(#AWB_DATE#, 'DDMONYY')
		  and    uld_key = #ULD_KEY#
  		</select>
  		<!-- Queries for PKG_PMAN.AWB_ULD_IND End -->
  		
  		<!-- Queries for PKG_PMAN.AWB_ULD_PCS_WT Begin -->
		<select id="sqlFnAwbUldPcsWt001" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		select nvl(sum(decode(#DATA_TYPE#, 'PCS', locn_pcs, locn_wt)),'0' )
        	from   awb_inventory
        	where  awb_no = #AWB_NO#
        	and    awb_date = TO_DATE(#AWB_DATE#, 'DDMONYY')
        	and    uld_key = #ULD_KEY#
  		</select>
  		<!-- Queries for PKG_PMAN.AWB_ULD_PCS_WT End -->
  		
  		<!-- Queries for PKG_PMAN.GET_FLT_CARR_CODE Begin -->
  		<select id="sqlFnGetFltCarrCd001" parameterClass="java.lang.String" resultClass="java.lang.String">
  		select code from   mast_carrier
  			where  code = substr(#FLT_KEY#, 1, 2)
  		</select>
  		<select id="sqlFnGetFltCarrCd002" parameterClass="java.lang.String" resultClass="java.lang.String">
  		select code from   mast_carrier
  			where  code = substr(#FLT_KEY#, 1, 3)
  		</select>
  		<!-- Queries for PKG_PMAN.GET_FLT_CARR_CODE End -->

<!--		Mahesh BN Updates On 02.05.2011 begin-->
		<!-- Queries for trg_bid_exp_break_bulk begin -->
		<update id="sqlupdate_ExpFltUld_BreakBulk_ToYes" parameterClass="java.util.HashMap">
			update exp_flt_uld
        	set break_bulk_yn = 'Y'
        	where  flt_key = #FLT_KEY#
        	and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
        	and    uld_key = #ULD_KEY#
		</update>
		<update id="sqlupdate_ExpFltUld_BreakBulk_ToNo" parameterClass="java.util.HashMap">
			update exp_flt_uld
        	set break_bulk_yn = 'N'
        	where  flt_key = #FLT_KEY#
        	and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
        	and    uld_key = #ULD_KEY#
		</update>
		<!-- Queries for trg_bid_exp_break_bulk end -->
		<!-- Queries for trg_bill_inv_hd begin -->
		<select id="getPcsAndWtDtls" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
			 SELECT PCS, WT 
   			 FROM AWB 
   			 WHERE AWB_NO = #AWB_NO# AND 
   			 AWB_DATE = TO_DATE(#AWB_DATE#,'DDMONYY') AND
		</select>
		<insert id="sqlInsertIntoAwbEvents" parameterClass="java.util.HashMap">
    		INSERT INTO AWB_EVENTS (AWB_NO,AWB_DATE,EVENT_ID, 
      		EVENT_DESC, FLT_KEY,FLT_DATE,FLT_TYPE,TR_NO, ULD_KEY,PCS,WT, 
      		CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE) 
      		VALUES (#AWB_NO#,TO_DATE(#AWB_DATE#,'DDMONYY'), #EVENT_ID#,
      		(SELECT EVENT_DESC FROM MAST_AWB_EVENTS WHERE EVENT_ID = #EVENT#),
      		#FLT_KEY#, TO_DATE(#FLT_DATE#,'DDMONYY'), #AWB_TYPE#, #AWB_NO#,NULL,#PCS#, #WT#, 
     		#LM_USER_ID#,sysdate,#LM_USER_ID#,sysdate)
    	</insert>
    	<!-- Queries for trg_bill_inv_hd end -->
    	<!-- Queries for trg_bid_exp_break_ppk begin -->
    	<select id="getexpPmanifestUldAwbDtls" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
			select unldg_pt, awb_no, TO_CHAR(awb_date, 'DDMONYY') AWB_DATE, NVL(assigned_pcs, 0) ASSIGNED_PCS, NVL(assigned_wt, 0) ASSIGNED_WT
        	from   exp_pmanifest_uld_awb
        	where  flt_key   =  #FLT_KEY#
        	and    flt_date  =  TO_DATE(#FLT_DATE#,'DDMONYY')
        	and    uld_bt_no =  #ULD_KEY#
		</select>
		<!-- Queries for trg_bid_exp_break_ppk end -->
<!--	Mahesh BN Updates On 02.05.2011 end-->
<!--	Mahesh BN Updates On 03.05.2011 begin-->
		<select id="getExpBreakPpkAwbDtls" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
			select unldg_pt, awb_no, TO_CHAR(awb_date, 'DDMONYY') AWB_DATE, NVL(assigned_pcs, 0) ASSIGNED_PCS, NVL(assigned_wt, 0) ASSIGNED_WT
        	from   exp_break_ppk_awb
        	where  flt_key   =  #FLT_KEY#
        	and    flt_date  =  TO_DATE(#FLT_DATE#,'DDMONYY')
        	and    uld_key =  #ULD_KEY#
		</select>
		<update id="sqlUpdatePpkToB" parameterClass="java.util.HashMap">
			update exp_pmanifest_uld set
            ppk_type = 'B'
        	where  flt_key = #FLT_KEY#
            and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
            and    uld_bt_no = #ULD_KEY#
		</update>
		<select id="sqlGetExpPmanifestUldDtls" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
			select bldup_instr, man_rmk, group_no, rcl_no, contr_code, NVL(tare_wt, 0) TARE_WT, NVL(gross_wt, 0) GROSS_WT
        	from   exp_pmanifest_uld_awb
        	where  flt_key = #FLT_KEY#
            and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
            and    uld_bt_no = #ULD_KEY#
		</select>
		<select id="sqlGetPpkFromExpRclHd" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
			select ppk_type
            from   exp_rcl_hd
            where  rcl_no = #RCL_NO#
		</select>
		<update id="sqlUpdatePpkInExpPmanifestUldAwb" parameterClass="java.util.HashMap">
		    update exp_pmanifest_uld_awb
		    set ppk_type = 'B'
	      	where  flt_key = #FLT_KEY#
	       	and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
	       	and    uld_bt_no = #ULD_KEY#
		</update>
		<update id="sqlUpdateInAwb" parameterClass="java.util.HashMap">
		    update awb
            set rcl_bulk_pcs = rcl_bulk_pcs + NVL(#ASSIGNED_PCS#, 0),
                rcl_bulk_wt = rcl_bulk_wt + NVL(#ASSIGNED_WT#, 0),
                rcl_ppk_pcs = rcl_ppk_pcs - decode(#PPK_TYPE#, 'P', NVL(#ASSIGNED_PCS#, 0), 0),
                rcl_ppk_wt = rcl_ppk_wt - decode(#PPK_TYPE#, 'P', NVL(#ASSIGNED_WT#, 0), 0),
                rcl_mix_pcs = rcl_mix_pcs - decode(#PPK_TYPE#, 'P', 0, NVL(#ASSIGNED_PCS#, 0)),
                rcl_mix_wt = rcl_mix_wt - decode(#PPK_TYPE#, 'P', 0, NVL(#ASSIGNED_WT#, 0))
            where  awb_no = #AWB_NO#
            and    awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')            
		</update>
		<update id="sqlUpdateExpPmaniFestAwbDtls" parameterClass="java.util.HashMap">
			update exp_pmanifest_awb
            set ppk_pcs = ppk_pcs - #ASSIGNED_PCS#,
                ppk_wt = ppk_wt - #ASSIGNED_WT#,
                bulk_pcs = bulk_pcs + #ASSIGNED_PCS#,
                bulk_wt = bulk_wt + #ASSIGNED_WT#,
                assigned_bulk_pcs = assigned_bulk_pcs + #ASSIGNED_PCS#,
                assigned_bulk_wt = assigned_bulk_wt + #ASSIGNED_WT#,
                group_no = nvl(group_no, #GROUP_NO#)
            where  flt_key = #FLT_KEY#
            and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
            and    unldg_pt = #UNLDG_PT#
            and    awb_no = #AWB_NO#
            and    awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')
       </update>
       <update id="sqlUpdateAwbInventoryDtls" parameterClass="java.util.HashMap">
       		update awb_inventory 
		    set    ppk_ind = 'B'
	        where  flt_key = #FLT_KEY#
	        and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
	        and    uld_key = #ULD_KEY#
			and    awb_no = #AWB_NO#
            and    awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')
	  </update>
       <insert id="sqlInsertToExpBreakPpkAwb" parameterClass="java.util.HashMap">      
            insert into exp_break_ppk_awb(flt_key, flt_date, uld_key, awb_no, awb_date, unldg_pt, assigned_pcs, assigned_wt)
			values (#FLT_KEY#, TO_DATE(#FLT_DATE#,'DDMONYY'), #ULD_KEY#, #AWB_NO#, TO_DATE(#AWB_DATE#,'DDMONYY'), #UNLDG_PT#, #ASSIGNED_PCS#, #ASSIGNED_WT#)
	   </insert>
	   <insert id="sqlInsertToAwbEvents" parameterClass="java.util.HashMap">	
			insert into awb_events(awb_no, awb_date, event_id, event_desc,
			 flt_key, flt_date, flt_type, pcs, wt,cr_user_id, cr_date, lm_user_id, lm_date)
			values (#AWB_NO#, TO_DATE(#AWB_DATE#,'DDMONYY'), 'BRKPPKA',  'Break PPK (Create)',
			#FLT_KEY#, TO_DATE(#FLT_DATE#,'DDMONYY'), 'E', #ASSIGNED_PCS#, #ASSIGNED_WT#,
			#CR_USER_ID#, sysdate, #LM_USER_ID#, sysdate)
       </insert> 
        <delete id="sqldelExpPmanifestUldAwb" parameterClass="java.util.HashMap">
	       	delete from exp_pmanifest_uld_awb
	        where  flt_key = #FLT_KEY#
	        and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
	        and    uld_bt_no = #ULD_KEY#
       </delete>
        <delete id="sqldelFromAwbEvents" parameterClass="java.util.HashMap">
       			delete from awb_events
        		where  rowid in (select rid 
                from  (select t2.rowid rid, row_number() over (partition by t2.awb_no, t2.awb_date order by t2.cr_date desc) rn
					   from   exp_break_ppk_awb t1, awb_events t2
					   where  t1.flt_key = t2.flt_key
					   and    t1.flt_date = t2.flt_date
					   and    t1.awb_no = t2.awb_no
					   and    t1.awb_date = t2.awb_date
					   and    t1.flt_key = #FLT_KEY#
					   and    t1.flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
					   and    t2.event_id = 'PMBAWBA')
                       where  rn = 1)
         </delete>
         <delete id="sqldelAwbEvents" parameterClass="java.util.HashMap">
            delete from awb_events
        	where  rowid in (select rid 
                         from  (select t2.rowid rid, row_number() over (partition by t2.awb_no, t2.awb_date order by t2.cr_date desc) rn
						        from   exp_break_ppk_awb t1, awb_events t2
						        where  t1.flt_key = t2.flt_key
						        and    t1.flt_date = t2.flt_date
						        and    t1.awb_no = t2.awb_no
						        and    t1.awb_date = t2.awb_date
						        and    t1.flt_key = #FLT_KEY#
						        and    t1.flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
						        and    t2.event_id = 'ULD_ASS_AWBD')
                         where  rn = 1)
         </delete>  
         <delete id="sqldelExpPmanifestUld" parameterClass="java.util.HashMap">
         	delete from exp_pmanifest_uld
        	where  flt_key = #FLT_KEY#
         	and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
        	and    uld_bt_no = #ULD_KEY#
         </delete>
          <delete id="sqldelExpUldAwbDtls" parameterClass="java.util.HashMap">
         	delete from exp_uld_awb
        	where  uld_key = #ULD_KEY#
        	and    rcl_no = #RCL_NO# 
        </delete>  
        <update id="sqlUpdateUldInventorySet" parameterClass="java.lang.String">
        	 update uld_inventory set
             cfm_status = 'CONFIRMED'
             where  uld_key = #ULD_KEY#
        </update> 
<!--	Mahesh BN Updates On 03.05.2011 end-->
<!--	Mahesh BN Updates On 04.05.2011 begin-->
        <update id="sqlUpdateAwbOnDelete" parameterClass="java.util.HashMap">
            update awb
            set rcl_bulk_pcs = rcl_bulk_pcs - #ASSIGNED_PCS#,
                rcl_bulk_wt = rcl_bulk_wt - #ASSIGNED_WT#,
                rcl_ppk_pcs = rcl_ppk_pcs + decode(#PPK_TYPE#, 'P', #ASSIGNED_PCS#, 0),
                rcl_ppk_wt = rcl_ppk_wt + decode(#PPK_TYPE#, 'P', #ASSIGNED_WT#, 0),
                rcl_mix_pcs = rcl_mix_pcs + decode(#PPK_TYPE#, 'P', 0, #ASSIGNED_PCS#),
                rcl_mix_wt = rcl_mix_wt + decode(#PPK_TYPE#, 'P', 0, #ASSIGNED_WT#)
            where  awb_no = #AWB_NO#
            and    awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')            
        </update> 
        <update id="sqlUpdateAwbInvenOnDelete" parameterClass="java.util.HashMap">
                update awb_inventory 
		        set    ppk_ind = #PPK_TYPE#
	            where  flt_key = #FLT_KEY#
                and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
	            and    uld_key = #ULD_KEY#
			    and    awb_no = #AWB_NO#
                and    awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')
        </update>
        <update id="sqlUpdateExpManiFestOnDelete" parameterClass="java.util.HashMap">
        	update exp_pmanifest_awb 
            set bulk_pcs = bulk_pcs - #ASSIGNED_PCS#,
                bulk_wt = bulk_wt - #ASSIGNED_WT#
            where  flt_key = #FLT_KEY#
            and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
            and    unldg_pt = #UNLDG_PT#
            and    awb_no = #AWB_NO#
            and    awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')
         </update> 
         <select id="sqlGetUnassignedBulkPcs" parameterClass="java.util.HashMap" resultClass="java.lang.String">
         		select unassigned_bulk_pcs
	            from   exp_pmanifest_awb
	            where  flt_key = #FLT_KEY#
	            and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
	            and    unldg_pt = #UNLDG_PT#
	            and    awb_no = #AWB_NO#
	            and    awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')
	     </select>  
	     <insert id="sqlInsertDtlsToExpUldAwb" parameterClass="java.util.HashMap">
	        insert into exp_uld_awb(uld_key, awb_no, awb_date, rcl_no, rcl_date, ppk_type, manifest_yn, pcs, wt)
	        values (#ULD_KEY#, #AWB_NO#, TO_DATE(#AWB_DATE#,'DDMONYY'), #RCL_NO#, to_date(substr(#RCL_NO#, 1, 6), 'ddmmyy'), #PPK_TYPE#, 'Y', #ASSIGNED_PCS#, #ASSIGNED_WT#)
	     </insert> 
	     <insert id="sqlInsertDtlsAwbEvents" parameterClass="java.util.HashMap">
	            insert into awb_events(awb_no, awb_date, event_id, event_desc, flt_key, flt_date, flt_type, pcs, wt,
				cr_user_id, cr_date, lm_user_id, lm_date)
			    values (#AWB_NO#, TO_DATE(#AWB_DATE#,'DDMONYY'), 'BRKPPKD',  'Break PPK (Delete)', #FLT_KEY#, TO_DATE(#FLT_DATE#,'DDMONYY'), 'E', #ASSIGNED_PCS#, #ASSIGNED_WT#,
				#CR_USER_ID#, sysdate, #LM_USER_ID#, sysdate)   
		 </insert>
		 <insert id="sqlInsertExpPmaniFestUld" parameterClass="java.util.HashMap">
		 	insert into exp_pmanifest_uld(flt_key, flt_date, uld_bt_no, unldg_pt, shp_type, ppk_type, bldup_instr, man_rmk, group_no, rcl_no, contr_code,
        	tare_wt, gross_wt, cr_user_id, cr_date, lm_user_id, lm_date,TRANSIT_FLG,HDLG_MODE)
          	values (#FLT_KEY#, TO_DATE(#FLT_DATE#,'DDMONYY'), #ULD_KEY#, #UNLDG_PT#, 'LOCAL', 'P', #BLDUP_INSTR#, #MAN_RMK#, #GROUP_NO#, #RCL_NO#, #CONTR_CODE#,
        	#TARE_WT#, #GROSS_WT#, #LM_USER_ID#, sysdate,  #LM_USER_ID#, sysdate,(SELECT TRANSIT_FLG FROM ULD_INVENTORY WHERE ULD_KEY=#ULD_KEY#),
			(SELECT HANDLING_MODE FROM ULD_INVENTORY WHERE ULD_KEY=#ULD_KEY#))
		 </insert>
		 <delete id="sqlDeleteExpBreakPpkAwb" parameterClass="java.util.HashMap">
			delete from exp_break_ppk_awb
	        where  flt_key = #FLT_KEY#
	        and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
	        and    uld_key = #ULD_KEY#
	      </delete>             
<!--	Mahesh BN Updates On 04.05.2011 end-->

  		<!-- Queries for PKG_PMAN.AWB_EVENT_INS_BY_AWB Begin -->
  		<select id="sqlAwbEventInsByAwb001" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
  		select to_char(awb_date,'DDMONYY') AWB_DATE, NVL(#PCS#,0), NVL(wt,0)	        
	        from   exp_uld_awb
	        where  rcl_no = #RCL_NO#
	        and    uld_key = #ULD_KEY#
	        and    awb_no = #AWB_NO#
		</select>
		<insert id="sqlAwbEventInsByAwb002" parameterClass="java.util.HashMap">
		insert into awb_events (awb_no, awb_date, event_id, event_desc, flt_key, 
                        flt_date, flt_type, pcs, wt, cr_user_id, cr_date, lm_user_id, lm_date)
		values (#AWB_NO#, TO_DATE(#AWB_DATE#,'DDMONYY'), 'PMBAWBC',  'Pre-manifest by AWB (Create)', #FLT_KEY#, 
                        TO_DATE(#FLT_DATE#,'DDMONYY'), 'E', NVL(#PCS#,0), NVL(#WT#,0), #USER_ID#, sysdate, #USER_ID#, sysdate)
		</insert>
		<insert id="sqlAwbEventInsByAwb003" parameterClass="java.util.HashMap">
		insert into uld_mov(tr_type, event_id, uld_key, tr_no, tr_date, doc_line_no, mov_from, 
                		    flt_type, flt_key, flt_date, cr_user_id, cr_date, lm_user_id, lm_date, 
                    		seq_no, uld_status)
		values ('EF', 'EFPA', #ULD_KEY#, #ULD_KEY#, sysdate, 1, null, 
        		'E', #FLT_KEY#, TO_DATE(#FLT_DATE#,'DDMONYY'), #USER_ID#, sysdate, #USER_ID#, sysdate, 
        		uld_mov_seq.nextval, (select cfm_status from uld_inventory where uld_key =  #ULD_KEY#))
        </insert>		
		<!-- Queries for PKG_PMAN.AWB_EVENT_INS_BY_AWB End -->
		<!-- Queries for PKG_PMAN.AWB_EVENT_INS_BY_ULD Begin -->
		<select id="sqlAwbEventInsByUld001" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select t1.awb_no AWB_NO, TO_CHAR(t1.awb_date,'DDMONYY') AWB_DATE, t1.ppk_type PPK_TYPE, NVL(pcs,0) PCS, NVL(wt,0) WT
	        from   exp_uld_awb t1
	        where  t1.rcl_no = #RCL_NO#
	        and    t1.uld_key = #ULD_KEY#
		</select>
		<insert id="sqlAwbEventInsByUld002" parameterClass="java.util.HashMap">
		insert into awb_events(awb_no, awb_date, event_id, event_desc, flt_key, flt_date, 
            					flt_type, pcs, wt, cr_user_id, cr_date, lm_user_id, lm_date)
			values (#AWB_NO#, TO_DATE(#AWB_DATE#,'DDMONYY'),  'PMBULDA',  'Pre-manifest by ULD (Create)', #FLT_KEY#, TO_DATE(#FLT_DATE#,'DDMONYY'), 
        						'E', NVL(#PCS#,0), NVL(#WT#,0), #USER_ID#, sysdate, #USER_ID#, sysdate)
        </insert>
		<!-- Queries for PKG_PMAN.AWB_EVENT_INS_BY_ULD End -->
		
		<!-- Queries for PKG_PMAN.AWB_EVENT_DEL_BY_ULD Begin -->
		<select id="sqlAwbEventDelByUld001" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select awb_no, TO_CHAR(awb_date,'DDMONYY') AWB_DATE, NVL(assigned_pcs,0) ASSIGNED_PCS, NVL(assigned_wt,0) ASSIGNED_WT
            from   exp_pmanifest_uld_awb
            where  flt_key = #FLT_KEY#
            and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
            and    uld_bt_no = #ULD_KEY#
		</select>
		<insert id="sqlAwbEventDelByUld002" parameterClass="java.util.HashMap">
		insert into awb_events(awb_no, awb_date, event_id, event_desc, flt_key,
				flt_date, flt_type, pcs, wt, cr_user_id, cr_date, lm_user_id, lm_date)
			   values (#AWB_NO#, #AWB_DATE#, 'PMBULDD',  'Pre-manifest by ULD (Delete)', #FLT_KEY#, 
					   TO_DATE(#FLT_DATE#,'DDMONYY'), 'E', NVL(#ASSIGNED_PCS#, 0), NVL(#ASSIGNED_WT#, 0), #USER_ID#, sysdate, #USER_ID#, sysdate)
		</insert>
		<!-- Queries for PKG_PMAN.AWB_EVENT_DEL_BY_ULD End -->
		
		<!-- Queries for PKG_PMAN.AWB_EVENT_DEL_BY_AWB Begin -->
		<select id="sqlAwbEventDelByAwb001" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select NVL(assigned_pcs, 0) ASSIGNED_PCS, NVL(assigned_wt, 0) ASSIGNED_WT from   exp_pmanifest_uld_awb
		    where  flt_key = #FLT_KEY#
		    and    flt_date = to_date(#FLT_DATE#,'DDMONYY')
		    and    uld_bt_no = #ULD_KEY#
		    and    unldg_pt = #UNLDG_PT#
		    and    awb_no = #AWB_NO#
		    and    awb_date = to_date(#AWB_DATE#,'DDMONYY')
		</select>
		<insert id="sqlAwbEventDelByAwb002" parameterClass="java.util.HashMap">
		insert into awb_events(awb_no, awb_date, event_id, event_desc, flt_key, 
                      flt_date, flt_type, pcs, wt, cr_user_id, cr_date, lm_user_id, lm_date)
		values (#AWB_NO#, TO_DATE(#AWB_DATE#,'DDMONYY'), 'PMBAWBC',  'Pre-manifest by AWB (Delete)', #FLT_KEY#, 
    				  TO_DATE(#FLT_DATE#,'DDMONYY'), 'E', NVL(#ASSIGNED_PCS#, 0), NVL(#ASSIGNED_WT#, 0), #USER_ID#, sysdate, #USER_ID#, sysdate)
    	</insert>
    	<!-- Queries for PKG_PMAN.AWB_EVENT_DEL_BY_AWB End -->
    	
    	<!-- Queries for PKG_PMAN.UPD_ULD_ASSIGN Begin -->
    	<select id="sqlUpdUldAssign001" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
    	select awb_no from   exp_pmanifest_uld_awb
			where  flt_key = #FLT_KEY#
			and    flt_date = TO_DATE(#FLT_DATE#, 'DDMONYY')
			and    uld_bt_no = #ULD_BT_NO#
		</select>
		<select id="sqlUpdUldAssign002" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		select 'x' from   awb_inventory
    		where  uld_key = #ULD_BT_NO#
    		and    flt_key is null
    		and    rownum = 1
    	</select>
    	<update id="sqlUpdUldAssign003" parameterClass="java.util.HashMap">
    	update exp_pmanifest_uld 
		    set   contr_code = #CONTR_CODE#,
		          gross_wt = NVL(#GROSS_WT#, gross_wt),
		          tare_wt = NVL(#TARE_WT#, tare_wt), 
		          bldup_complete = NVL(#BLDUP_COMPLETE#, bldup_complete) 
		    where  flt_key = #FLT_KEY#
		    and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
		    and    uld_bt_no = #ULD_BT_NO#
	    </update>
		<!-- Queries for PKG_PMAN.UPD_ULD_ASSIGN End -->
		
		<!--  Queries  for package PKG_PMAN_TO_MANIFEST Starts :: RANJITH -->
	<delete id="PkgPmanManifestDeleteFromExpMnfstDtl" parameterClass="java.util.HashMap">
	   DELETE FROM exp_manifest_dtl
       WHERE tr_no IN (SELECT tr_no
                         FROM exp_manifest_hd
                        WHERE flt_key = #P_FLT_KEY#
                          AND flt_date = TO_DATE(#V_FLT_DATE#,'DDMONYY'))
	</delete>
	
	
	<delete id="PkgPmanManifestDeleteFromExpMnfstUld" parameterClass="java.util.HashMap">
	    DELETE FROM exp_manifest_uld
       WHERE tr_no IN (SELECT tr_no
                         FROM exp_manifest_hd
                         WHERE flt_key = #P_FLT_KEY#
                          AND flt_date = TO_DATE(#V_FLT_DATE#,'DDMONYY'))
	</delete>
	
	<delete id="PkgPmanManifestDeleteFromExpMnfstHd" parameterClass="java.util.HashMap">
	    DELETE FROM exp_manifest_hd
          WHERE flt_key = #P_FLT_KEY#
                          AND flt_date = TO_DATE(#V_FLT_DATE#,'DDMONYY')
	</delete>
	
	<select id="PkgPmanMnfstVerNoFromCustAirlSitaCimpMsg" parameterClass="java.lang.String" resultClass="java.lang.String">
	 SELECT ver_no
        FROM cust_airl_sita_cimp_msg
       WHERE carr_code = substr(#flt_key#, 1, 2)
         AND flt_key = #flt_key#
         AND msg_type = 'FFM'
         AND rownum = 1
	</select>
	
	<select id="PkgPmanMnfstVerNoFromCustAirlSitaCimpMsg1" parameterClass="java.lang.String" resultClass="java.lang.String">
	 SELECT ver_no
            FROM cust_airl_sita_cimp_msg
           WHERE carr_code = substr(#flt_key#, 1, 2)
             AND flt_key = 'ZZZ99999'
             AND msg_type = 'FFM'
             AND rownum = 1
	</select>
	
	<select id="PkgPmanMnfstGetCarConfig" parameterClass="java.lang.String" resultClass="java.util.HashMap">
	      SELECT a.conn_flt_flg G_CONN_FLT, a.vol_grp_flg G_VOL_FLG
          FROM mast_carrier_edi a
          WHERE a.code = #carrCode#
           AND a.code_desc = 'FFM'
	</select>
	
	<select id="PkgPmanMnfstGetOfPointList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	     		SELECT a.off_point OFF_POINT
                FROM flt_opr_seg a
               WHERE a.flt_type = 'D'
                 AND a.flt_key = #P_FLT_KEY#
                 AND a.sch_date = TO_DATE(#V_FLT_DATE#,'DDMONYY')
                 AND a.brd_point = 'HKG'
               ORDER BY a.seg_order
	</select>
	
	<select id="PkgPmanMnfstDataForInsExpManfHd" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT '1' V_AWB_GRP_NO ,
	 'N' V_ULD_EMPTY_YN, 
	 F.SCH_TIME V_FLT_SCH_TIME , 
	 F.ACFT_REG_NO V_FLT_ACFT_REG_NO,
	 'MANIFEST' V_AWB_MAN_RMK,
	 'MANIFEST' V_ULD_MAN_RMK
	FROM FLT_OPR F
	WHERE F.FLT_KEY = #P_FLT_KEY#
	AND F.SCH_DATE = TO_DATE(#V_FLT_DATE#,'DDMONYY')
	AND F.FLT_TYPE = 'D'
	</select>
	
	<select id="PkgPmanMnfstGetGManfHdTrNo" parameterClass="java.lang.Object" resultClass="java.lang.String">
	    SELECT exp_manifest_seq.NEXTVAL  G_MANF_HD_TRNO FROM dual
	</select>
	
	<insert id="PkgPmanMnfstInsExpManfHd" parameterClass="java.util.HashMap">
	INSERT INTO EXP_MANIFEST_HD
        (TR_NO, MSG_VER, MAN_STATUS, FLT_KEY, FLT_DATE, FLT_ETD, ACRF_REG,
         ULDNG_PT, GRP_NO, NIL_IND, FLT_CLOSED, SHP_CLOSED, TR_TYPE,
         TR_STATUS, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE, LDNG_PT)
      VALUES
        (#G_MANF_HD_TRNO#, #V_VER_NO#, 'FINAL', #P_FLT_KEY#, TO_DATE(#V_FLT_DATE#,'DDMONYY'),
         #V_FLT_SCH_TIME#, #V_FLT_ACFT_REG_NO#, #OFF_POINT#, #V_AWB_GRP_NO#,
         #V_ULD_EMPTY_YN#, 'Y', 'Y', 'MN', 'A', #USER#, SYSDATE, #USER#, SYSDATE,
         'HKG')
	</insert>
	
	<insert id="PkgPmanMnfstInsExpManfUld" parameterClass="java.util.HashMap">
		INSERT INTO EXP_MANIFEST_ULD
        	(TR_NO, DOC_LINE_NO, ULD_TYPE, ULD_NO, ULD_CARR, ULD_KEY, BB_IND, ULD_LOD_IND, ULD_VOL_AVA, DIS_ODR, ULD_RMK, 
        	ONWARD_DEST1, ONWARD_CAR_COD1, ONWARD_FLT_NO1, ONVARD_FLT_DAT1, ONWARD_DEST2, ONWARD_CAR_COD2, ONWARD_FLT_NO2, 
        	ONVARD_FLT_DAT2, ONWARD_DEST3, ONWARD_CAR_COD3, ONWARD_FLT_NO3, ONVARD_FLT_DAT3, VOL_AVAIL_CODE)
      	VALUES
        	(#G_MANF_HD_TRNO#, #P_DOC_NO#, #P_ULD_TYPE#, #P_ULD_NO#, #P_ULD_CARR#, #P_ULD_KEY#, #BB_IND#, #ULD_LOD_IND#, 
        	#ULD_VOL_AVA#, #DIS_ODR#, #ULD_RMK#, #ONWARD_DEST1#, #ONWARD_CAR_COD1#, #ONWARD_FLT_NO1#, #ONVARD_FLT_DAT1#, 
        	#ONWARD_DEST2#, #ONWARD_CAR_COD2#, #ONWARD_FLT_NO2#, #ONVARD_FLT_DAT2#, #ONWARD_DEST3#, #ONWARD_CAR_COD3#, 
        	#ONWARD_FLT_NO3#, #ONVARD_FLT_DAT3#, #VOL_AVAIL_CODE#)
	</insert>
	
	<select id="PkgPmanManifestCursor1" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	<![CDATA[
		SELECT T1.AWB_NO AWB_NO ,
		  TO_CHAR(T1.AWB_DATE,'DDMONYY') AWB_DATE ,
		  T4.ASSIGNED_PCS PCS,
		  T4.ASSIGNED_WT WT  ,		  
		  T2.SPL_CODE1
		  || T2.SPL_CODE2
		  || T2.SPL_CODE3
		  || T2.SPL_CODE4 SPL_CODE1,
		  T2.SPL_CODE5
		  || T2.SPL_CODE6
		  || T2.SPL_CODE7
		  || T2.SPL_CODE8 SPL_CODE2,
		  T1.MAN_RMK MAN_RMK       ,
		  T2.CONTENT CONTENT              ,
		  T2.ORIG ORIG           ,
		  T2.DEST DEST                   ,
		  T2.PCS CAR_PCS           ,
		  T2.WT CAR_WT
		   FROM EXP_PMANIFEST_AWB T1
		LEFT JOIN AWB T2 ON T1.AWB_NO = T2.AWB_NO AND T1.AWB_DATE   = T2.AWB_DATE
		LEFT JOIN EXP_PMANIFEST_ULD_AWB T4 ON T1.AWB_NO = T4.AWB_NO	AND T1.AWB_DATE   = T4.AWB_DATE
					AND T1.FLT_KEY    = T4.FLT_KEY AND T1.FLT_DATE   = T4.FLT_DATE AND T1.UNLDG_PT   = T4.UNLDG_PT
	    WHERE T1.FLT_KEY = #P_FLT_KEY# AND T1.FLT_DATE    = TO_DATE(#V_FLT_DATE#,'DDMONYY') AND T1.UNLDG_PT    = #C_UNLDG_PT#
		AND FUN_VALIDATE_AWB(T1.AWB_NO,(select carr_code from awb where awb_no = T1.AWB_NO and awb_date = T1.AWB_DATE ),'A') not in ('N','C')
		AND NOT EXISTS
		  (SELECT NULL FROM EXP_CAR EXP WHERE EXP.AWB_NO  = T1.AWB_NO AND EXP.AWB_DATE    = T1.AWB_DATE AND EXP.ACCEPT_MODE = 'LOB')
		AND NOT EXISTS
		  (SELECT NULL
		     FROM EXP_PMANIFEST_ULD ULD ,
		    MAST_ULD_TYPE M1            ,
		    EXP_FLT_ULD FLTULD
		    WHERE ULD.FLT_KEY           =T4.FLT_KEY
		  AND ULD.FLT_DATE              = T4.FLT_DATE
		  AND ULD.UNLDG_PT              = T4.UNLDG_PT
		  AND ULD.ULD_BT_NO             =T4.ULD_BT_NO
		  AND T4.FLT_KEY                = FLTULD.FLT_KEY
		  AND T4.FLT_DATE               = FLTULD.FLT_DATE
		  AND T4.UNLDG_PT               = FLTULD.UNLDG_PT
		  AND T4.ULD_BT_NO              = FLTULD.ULD_KEY
		  AND SUBSTR(ULD.ULD_BT_NO,0,3) = CODE
		  AND M1.H_CONT_IND             = 'N'
		  AND M1.BT_IND                 = 'N'
		  AND ULD.BB_IND                = 'N'
		  AND FLTULD.BB_IND             = 'N'
		  )		
     ]]>
   	</select>

   	
   	<select id="PkgPmanMnfstGetShpVolume" parameterClass="java.lang.String" resultClass="java.util.HashMap">
	SELECT nvl(SUM((b.width * b.height * b.length * b.pcs)), 0) V_TTL_VOL,
           nvl(SUM(b.pcs), 0) V_TTL_PCS
      FROM exp_rcl_hd a, exp_rcl_dmn b
     WHERE a.rcl_no = b.rcl_no
       AND a.awb_no = #p_awb_no# AND a.STATUS != 'V' AND a.STATUS != 'R' 
   	</select>
   	
   	
	<select id="PkgPmanMnfstGetVAwbChk" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
	     SELECT COUNT(*)
         FROM exp_manifest_dtl
         WHERE tr_no = #G_MANF_HD_TRNO#
         AND udoc_line_no = #P_UDOC_LINE_NO#
         AND awb_no = #P_AWB_NO#
	</select>
	
	<update id="PkgPmanMnfstUpdExpManfDtl" parameterClass="java.util.HashMap">
	UPDATE EXP_MANIFEST_DTL
	SET SHP_PCS = NVL(SHP_PCS, 0) + nvl(#P_MAN_PCS#,0),
	SHP_WGT = NVL(SHP_WGT, 0) + nvl(#P_MAN_WT#,0),
	SHPM_ASSGN_PCS = NVL(SHP_PCS, 0) + nvl(#P_MAN_PCS#,0),
	SHPM_ASSGN_WT = NVL(SHP_WGT, 0) + nvl(#P_MAN_WT#,0),
	SHPM_VOL = DECODE(#G_VOL_FLG#,'Y',NVL(SHPM_VOL, 0) + nvl(#V_VOL#,0),0)
	WHERE TR_NO = #G_MANF_HD_TRNO#
	AND UDOC_LINE_NO = #P_UDOC_LINE_NO#
	AND AWB_NO = #P_AWB_NO#
	AND AWB_DATE = TO_DATE(#P_AWB_DATE#,'DDMONYY')
	</update>
	
	<update id="PkgPmanMnfstUpdExpManfDtlNO_VOL" parameterClass="java.util.HashMap">
	UPDATE EXP_MANIFEST_DTL
	SET SHP_PCS = NVL(SHP_PCS, 0) + nvl(#P_MAN_PCS#,0),
	SHP_WGT = NVL(SHP_WGT, 0) + nvl(#P_MAN_WT#,0),
	SHPM_ASSGN_PCS = NVL(SHP_PCS, 0) + nvl(#P_MAN_PCS#,0),
	SHPM_ASSGN_WT = NVL(SHP_WGT, 0) + nvl(#P_MAN_WT#,0)	
	WHERE TR_NO = #G_MANF_HD_TRNO#
	AND UDOC_LINE_NO = #P_UDOC_LINE_NO#
	AND AWB_NO = #P_AWB_NO#
	AND AWB_DATE = TO_DATE(#P_AWB_DATE#,'DDMONYY')
	</update>
	
	<select id="PkgPmanMnfstFunConvertContent" parameterClass="java.lang.String" resultClass="java.lang.String">
	   select fun_convert_content(#P_CONTENT#)  from dual
	</select>
	
	
	<insert id="PkgPmanMnfstInsExpManfDtl" parameterClass="java.util.HashMap" >
  		INSERT INTO EXP_MANIFEST_DTL
          (TR_NO, DOC_LINE_NO, UDOC_LINE_NO, FLT_CARR, FLT_NO, FLT_KEY,
           FLT_DATE, LDG_PT, UNLDG_PT, BUP_I, ULD_MAN_RMK, AWB_NO, AWB_DATE,
           AWB_PFX, AWB_ORIG, AWB_DEST, AWB_CONTENT, CC_CODE, AWB_DESC_C,
           AWB_TOTAL_PCS, AWB_TOTAL_WT, SHPM_DESC_C, SHPM_ASSGN_PCS,
           SHPM_ASSGN_WT, SHPM_VOL_C, SHPM_VOL, SHP_PCS, SHP_WGT, WGT_UNT,
           SHP_WGT_LBS, TML_CODE, AWB_MAN_RMK, SPL_CODE1, SPL_CODE2,
           BLDUP_COMPLETE, FLT_CLOSED, SHP_CLOSED, FFM_SND_FLG, FHL_SND_FLG,
           TR_TYPE, TR_STATUS, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE,
           MAN_DESC, CUS_ORI_CODE, ISO_CTRY_CODE1, INFO_IDENTIFIER1, CUSTOMS_INFO_IDENTIFIERI, 
           SUPP_CUSTOMS_INFO1, ISO_CTRY_CODE2, INFO_IDENTIFIER2, CUSTOMS_INFO_IDENTIFIER2, 
           SUPP_CUSTOMS_INFO2, ONWARD_DEST1, ONWARD_CAR_COD1, ONWARD_FLT_NO1, ONVARD_FLT_DAT1, 
           ONWARD_DEST2, ONWARD_CAR_COD2, ONWARD_FLT_NO2, ONVARD_FLT_DAT2, ONWARD_DEST3, 
           ONWARD_CAR_COD3, ONWARD_FLT_NO3, ONVARD_FLT_DAT3, MOV_PRI_CODE, DES_SHP_OSI_1, 
           DES_SHP_OSI_2)
        VALUES
          (#G_MANF_HD_TRNO#, #P_DOC_LINE_NO#,#P_UDOC_LINE_NO#,
           SUBSTR(#P_FLT_KEY#, 1, 2), SUBSTR(#P_FLT_KEY#, 3), #P_FLT_KEY#,
           TO_DATE(#P_FLT_DATE#, 'DDMONYY'), 'HKG', #P_UNDLG_PT#, 'N', '', #P_AWB_NO#, TO_DATE(#P_AWB_DATE#,'DDMONYY'),
           SUBSTR(#P_AWB_NO#, 1, 3), #P_ORIGIN#, #P_DEST#,
           FUN_CONVERT_CONTENT(SUBSTR(#P_CONTENT#, 1, 40)), 'CC', 'T',
           #P_AWB_PCS#, #P_AWB_WT#, #P_CATEGORY#, #P_MAN_PCS#, #P_MAN_WT#,
           DECODE(#G_VOL_FLG#, 'Y', 'MC', 'D', 'DG'), #V_VOL#, #P_MAN_PCS#, #P_MAN_WT#, 'K', 0,
           NULL, FUN_CONVERT_CONTENT(#P_MAN_RMK#), #P_SPL_CODE1#, #P_SPL_CODE2#,
           'N', 'Y', 'Y', 'N', 'N', 'MN', 'A', #USER#, SYSDATE, #USER#, SYSDATE,
           FUN_CONVERT_CONTENT(SUBSTR(#V_AWB_CONTENT#, 1, 15)), #CUS_ORI_CODE#, #ISO_CTRY_CODE1#, 
           #INFO_IDENTIFIER1#, #CUSTOMS_INFO_IDENTIFIERI#, #SUPP_CUSTOMS_INFO1#, #ISO_CTRY_CODE2#, 
           #INFO_IDENTIFIER2#, #CUSTOMS_INFO_IDENTIFIER2#, #SUPP_CUSTOMS_INFO2#, #CNTG_DEST1#, 
           #CNTG_FLT_CARR1#, #CNTG_FLT_NO1#, #CNTG_FLT_DATE1#, #CNTG_DEST2#, #CNTG_FLT_CARR2#, 
           #CNTG_FLT_NO2#, #CNTG_FLT_DATE2#, #CNTG_DEST3#, #CNTG_FLT_CARR3#, #CNTG_FLT_NO3#, 
           #CNTG_FLT_DATE3#, #MOV_PRI_CODE#, #DES_SHP_OSI_1#, #DES_SHP_OSI_2#)
   	</insert>
   	
   	<insert id="PkgPmanMnfstInsExpManfDtlDmn" parameterClass="java.util.HashMap">
   		INSERT INTO EXP_MANIFEST_DTL_DIM
   			(TR_NO, DOC_LINE_NO, SDOC_LINE_NO, LENGTH, WIDTH, HEIGHT, PCS, WT, WT_UNIT, DIM_UNT, DIM_WGT_LBS) 
   		VALUES
   			(#G_MANF_HD_TRNO#, #P_DOC_LINE_NO#, #P_SDOC_LINE_NO#, #LENGTH#, #WIDTH#, #HEIGHT#, #PCS#, #WT#, 
   			#WT_UNIT#, #DMN_UNT#, #DMN_WGT_LBS#)
   	</insert>
	
	   	
   	<select id="PkgPmanManifestCursor2" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	 	 SELECT T1.AWB_NO AWB_NO                                                ,
	 	  TO_CHAR(T1.AWB_DATE,'DDMONYY') AWB_DATE								,
		  SUM (TARULDAWB.ASSIGNED_PCS) PCS                                      ,
		  SUM (TARULDAWB.ASSIGNED_WT) WT                                        ,
		  T1.MAN_RMK MAN_RMK                                                    ,
		  T2.CONTENT CONTENT                                                    ,
		  T1.GROUP_NO GROUP_NO                                                  ,
		  PKG_EXP_VAL.GET_EXP_AWB_CC_CODE(#P_FLT_KEY#, #V_FLT_DATE#, T1.AWB_NO) CC_CODE,
		  T2.ORIG ORIG                                                        ,
		  T2.DEST DEST                                                               ,
		  T2.PCS CAR_PCS                                                        ,
		  T2.WT CAR_WT                                                          ,
		  T2.SPL_CODE1
		  || T2.SPL_CODE2
		  || T2.SPL_CODE3
		  || T2.SPL_CODE4 SPL_CODE1,
		  T2.SPL_CODE5
		  || T2.SPL_CODE6
		  || T2.SPL_CODE7
		  || T2.SPL_CODE8 SPL_CODE2
		 FROM EXP_PMAN_TARMAC_ULD_AWB TARULDAWB
		 JOIN EXP_FLT_ULD FLTULD  ON FLTULD.FLT_KEY  =TARULDAWB.FLT_KEY AND FLTULD.FLT_DATE =TARULDAWB.FLT_DATE	AND TARULDAWB.ULD_BT_NO = FLTULD.ULD_KEY AND FLTULD.BB_IND ='Y' AND TARULDAWB.UNLDG_PT  =FLTULD.UNLDG_PT
		 JOIN EXP_PMAN_TARMAC_AWB T1  ON TARULDAWB.FLT_KEY = T1.FLT_KEY	AND TARULDAWB.FLT_DATE    = T1.FLT_DATE	AND TARULDAWB.UNLDG_PT    = T1.UNLDG_PT	AND TARULDAWB.AWB_NO      = T1.AWB_NO AND TARULDAWB.AWB_DATE    = T1.AWB_DATE
		 JOIN AWB T2   ON T1.AWB_NO         = T2.AWB_NO AND T1.AWB_DATE           = T2.AWB_DATE
		 WHERE TARULDAWB.FLT_KEY = #P_FLT_KEY#
		 AND TARULDAWB.FLT_DATE    = #V_FLT_DATE#
		 AND TARULDAWB.UNLDG_PT    = #C_UNLDG_PT#
		 AND FUN_VALIDATE_AWB(T1.AWB_NO, (select carr_code from awb where awb_no = T1.AWB_NO and awb_date = T1.AWB_DATE ),'A') not in ('N','C')
		GROUP BY T1.AWB_NO      ,
		  T1.AWB_DATE,
		  T1.MAN_RMK            ,
		  T2.CONTENT            ,
		  T1.GROUP_NO           ,
		  T2.ORIG             ,
		  TARULDAWB.ASSIGNED_PCS,
		  TARULDAWB.ASSIGNED_WT ,
		  T2.DEST               ,
		  T2.PCS                ,
		  T2.WT                 ,
		  T2.SPL_CODE1          ,
		  T2.SPL_CODE2          ,
		  T2.SPL_CODE3          ,
		  T2.SPL_CODE4          ,
		  T2.SPL_CODE5          ,
		  T2.SPL_CODE6          ,
		  T2.SPL_CODE7          ,
		  T2.SPL_CODE8		
		UNION ALL		 
		 SELECT T1.AWB_NO AWB_NO                                                                   ,
		  TO_CHAR(T1.AWB_DATE,'DDMONYY') AWB_DATE  												   ,
		  T1.BULK_PCS  PCS                                            							   ,
		  T1.BULK_WT   WT                                                   					   ,
		  T1.MAN_RMK MAN_RMK                                                                       ,
		  T2.CONTENT CONTENT                                                                       ,
		  T1.GROUP_NO GROUP_NO                                                                     ,
		  PKG_EXP_VAL.GET_EXP_AWB_CC_CODE(#P_FLT_KEY#, TO_DATE(#V_FLT_DATE#,'DDMONYY'), T1.AWB_NO) CC_CODE,
		  T2.ORIG ORIG                                                                           ,
		  T2.DEST DEST                                                                             ,
		  T2.PCS CAR_PCS                                                                           ,
		  T2.WT CAR_WT                                                                             ,
		  T2.SPL_CODE1
		  || T2.SPL_CODE2
		  || T2.SPL_CODE3
		  || T2.SPL_CODE4 SPL_CODE1,
		  T2.SPL_CODE5
		  || T2.SPL_CODE6
		  || T2.SPL_CODE7
		  || T2.SPL_CODE8 SPL_CODE2
		   FROM EXP_PMAN_TARMAC_AWB T1
		   JOIN AWB T2    ON T1.AWB_NO = T2.AWB_NO	AND T1.AWB_DATE   = T2.AWB_DATE
		   LEFT JOIN EXP_PMANIFEST_AWB T4  ON T1.AWB_NO  = T4.AWB_NO AND T1.AWB_DATE    = T4.AWB_DATE AND T1.FLT_KEY     = T4.FLT_KEY AND T1.FLT_DATE    = T4.FLT_DATE AND T1.UNLDG_PT    = T4.UNLDG_PT
		  WHERE T1.FLT_KEY = #P_FLT_KEY#
		AND T1.FLT_DATE    = TO_DATE(#V_FLT_DATE#,'DDMONYY')
		AND T1.UNLDG_PT    = #C_UNLDG_PT#
		AND FUN_VALIDATE_AWB(T1.AWB_NO, (select carr_code from awb where awb_no = T1.AWB_NO and awb_date = T1.AWB_DATE ),'A') not in ('N','C')
		AND T1.BULK_PCS    > 0
   	</select>
   	
   	<select id="PkgPmanManifestCursor3" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
   	 	SELECT T1.ULD_BT_NO ULD_BT_NO,
		  T1.MAN_RMK MAN_RMK          ,
		  '' ULD_KEY                  ,
		  T1.PPK_TYPE PPK_TYPE        ,
		  T1.UNLDG_PT C_UNLDG_PT      ,
		  FLTULD.BB_IND AS BB_IND
		   FROM EXP_PMANIFEST_ULD T1
		LEFT JOIN EXP_PMANIFEST_ULD_AWB T2
		     ON T1.FLT_KEY = T2.FLT_KEY
		AND T1.FLT_DATE    = T2.FLT_DATE
		AND T1.ULD_BT_NO   = T2.ULD_BT_NO
		AND T1.UNLDG_PT    = T2.UNLDG_PT
		AND FUN_VALIDATE_AWB(T2.AWB_NO,(select carr_code from awb where awb_no = T2.AWB_NO and awb_date = T2.AWB_DATE ),'A') not in ('N','C')
		LEFT JOIN MAST_ULD_TYPE M1
		     ON SUBSTR(T1.ULD_BT_NO,0,3) = M1.CODE
		LEFT JOIN EXP_FLT_ULD FLTULD
		     ON T1.FLT_KEY = FLTULD.FLT_KEY
		AND T1.FLT_DATE    = FLTULD.FLT_DATE
		AND T1.ULD_BT_NO   = FLTULD.ULD_KEY
		AND T1.UNLDG_PT    = FLTULD.UNLDG_PT
		AND FLTULD.BB_IND  = 'N'
		  WHERE T1.FLT_KEY = #P_FLT_KEY#
		AND T1.FLT_DATE    = TO_DATE(#V_FLT_DATE#,'DDMONYY')
		AND T1.UNLDG_PT    = #C_UNLDG_PT#
		AND (((T1.PPK_TYPE = 'P'
		OR T1.PPK_TYPE     = 'M') )
		OR T1.PPK_TYPE     = 'B')
		AND (T1.BB_IND     = 'N'
		AND M1.H_CONT_IND  = 'N'
		AND M1.BT_IND      = 'N')
		AND T1.SHP_TYPE    = 'LOCAL'
		GROUP BY T1.ULD_BT_NO,
		  T1.GROUP_NO        ,
		  T1.MAN_RMK         ,
		  T1.PPK_TYPE        ,
		  T1.UNLDG_PT        ,
		  FLTULD.BB_IND
   	</select>
   	
   	<parameterMap id="PkgPmanMnfstPkgValidateParam" class="java.util.HashMap">
   		<parameter property="PKG_OUT" jdbcType="VARCHAR" javaType="java.lang.String"	mode="OUT" />	
		<parameter property="ULD_BT_NO" jdbcType="VARCHAR" javaType="java.lang.String"	mode="IN" />	
		<parameter property="V_ULD_TYPE" jdbcType="VARCHAR" javaType="java.lang.String"	mode="OUT" />
		<parameter property="V_ULD_NO" jdbcType="VARCHAR" javaType="java.lang.String"	mode="OUT" />	
		<parameter property="V_ULD_CARR" jdbcType="VARCHAR" javaType="java.lang.String"	mode="OUT" />		
			
	</parameterMap>	
	
	<procedure id="PkgPmanMnfstPkgValidate" parameterMap="PkgPmanMnfstPkgValidateParam">
		{ ? = call pkg_validate.validate_uld(?,?,?,?)}
	</procedure>
	
	<select id="PkgPmanManifestCursor4" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	<![CDATA[	
		 SELECT T1.AWB_NO P_AWB_NO ,
		  TO_CHAR(T1.AWB_DATE,'DDMONYY') P_AWB_DATE,
		  T1.ASSIGNED_PCS P_MAN_PCS,
		  T1.ASSIGNED_WT P_MAN_WT  ,
		  T4.CONTENT P_CONTENT     ,
		  rtrim(ltrim(T4.SPL_CODE1))     || rtrim(ltrim(T4.SPL_CODE2))     || rtrim(ltrim(T4.SPL_CODE3))     || rtrim(ltrim(T4.SPL_CODE4)) SPL_CODE1,    
		  rtrim(ltrim(T4.SPL_CODE5))     || rtrim(ltrim(T4.SPL_CODE6))     || rtrim(ltrim(T4.SPL_CODE7))     || rtrim(ltrim(T4.SPL_CODE8)) SPL_CODE2,
		  T4.ORIG P_ORIGIN       ,
		  T4.DEST P_DEST           ,
		  T4.PCS P_AWB_PCS         ,
		  T4.WT P_AWB_WT           ,
		  T1.FLT_KEY P_FLT_KEY     ,
		  TO_CHAR(T1.FLT_DATE, 'DDMONYY') P_FLT_DATE
		   FROM EXP_PMANIFEST_ULD_AWB T1	
		JOIN AWB T4 ON T1.AWB_NO = T4.AWB_NO	AND T1.AWB_DATE   = T4.AWB_DATE
		JOIN EXP_PMANIFEST_ULD T6 ON T6.FLT_KEY = T1.FLT_KEY AND T6.FLT_DATE    = T1.FLT_DATE AND T6.UNLDG_PT    = T1.UNLDG_PT AND T6.ULD_BT_NO   = T1.ULD_BT_NO
		WHERE T1.FLT_KEY = #P_FLT_KEY#
		AND T1.FLT_DATE    = TO_DATE(#V_FLT_DATE#,'DDMONYY')
		AND T1.UNLDG_PT    = #C_UNLDG_PT#
		AND T1.ULD_BT_NO   = #C_ULD_BT_NO#
		AND FUN_VALIDATE_AWB(T1.AWB_NO, (select carr_code from awb where awb_no = T1.AWB_NO and awb_date = T1.AWB_DATE ),'A') not in ('N','C')
		AND ((T1.PPK_TYPE  = 'B'
		OR (T1.PPK_TYPE    = 'P'
		OR T1.PPK_TYPE     = 'M')))
     ]]>
   	</select>
 
   	
   	<select id="PkgPmanMnfstGetVCount" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
  	 	SELECT COUNT(*)
        FROM EXP_MANIFEST_HD A, EXP_MANIFEST_ULD B, EXP_MANIFEST_DTL C
         WHERE A.TR_NO = B.TR_NO
           AND B.TR_NO = C.TR_NO
           AND B.DOC_LINE_NO = C.UDOC_LINE_NO
           AND A.FLT_KEY = #P_FLT_KEY#
           AND A.FLT_DATE = TO_DATE(#V_FLT_DATE#,'DDMONYY')
           AND C.AWB_NO = #AWB_NO#
           AND A.ULDNG_PT = #ULDNG_PT#
   	</select>
   	
   <update id="PkgPmanMnfstUpdateExpMnfstDtl" parameterClass="java.util.HashMap">
   		UPDATE EXP_MANIFEST_DTL G
           SET G.SHPM_DESC_C = #V_SHMPT_CODE#
           WHERE G.FLT_KEY = #P_FLT_KEY#
           AND G.FLT_DATE = TO_DATE(#V_FLT_DATE#,'DDMONYY')
           AND G.UNLDG_PT = #ULDNG_PT#
           AND G.AWB_NO = #AWB_NO#
           AND G.AWB_DATE = TO_DATE(#AWB_DATE#,'DDMONYY')
   </update>
   
   <delete id="PkgPmanMnfstDeleteExpMnfstDtl" parameterClass="java.util.HashMap">
   		DELETE FROM EXP_MANIFEST_DTL 
		WHERE TR_NO IN (SELECT TR_NO FROM EXP_MANIFEST_HD 
		WHERE FLT_KEY = #P_FLT_KEY#
		AND FLT_DATE =TO_DATE(#V_FLT_DATE#,'DDMONYY')
		AND ULDNG_PT = #OFF_POINT#)
   </delete>
   
   <select id="PkgPmanMnfstGetVNil" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
  	 	SELECT COUNT(*)
        FROM EXP_MANIFEST_HD A, EXP_MANIFEST_DTL B
        WHERE A.TR_NO = B.TR_NO
        AND A.FLT_KEY = #P_FLT_KEY#
        AND A.FLT_DATE = TO_DATE(#V_FLT_DATE#,'DDMONYY')
        AND A.ULDNG_PT = #OFF_POINT#
     
   	</select>
   
   <update id="PkgPmanMnfstUpdExpMnfstHd" parameterClass="java.util.HashMap">
	UPDATE EXP_MANIFEST_HD A
	SET A.NIL_IND = 'N'
	WHERE A.FLT_KEY = #P_FLT_KEY#
	AND A.FLT_DATE = TO_DATE(#V_FLT_DATE#,'DDMONYY')
	AND A.ULDNG_PT = #OFF_POINT#
   </update>
   
    <delete id="PkgPmanMnfstDelExpMnfstUld" parameterClass="java.util.HashMap">
      DELETE FROM EXP_MANIFEST_ULD B
       WHERE NOT EXISTS (SELECT 1
                FROM EXP_MANIFEST_DTL
               WHERE TR_NO = B.TR_NO
                 AND UDOC_LINE_NO = B.DOC_LINE_NO)
   </delete>
   
   	<select id="PkgPmanManifestCursor5" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
 		SELECT T1.ULD_BT_NO ULD_BT_NO,
		  T1.MAN_RMK MAN_RMK          ,
		  '' ULD_KEY                  ,
		  T1.UNLDG_PT C_UNLDG_PT
		   FROM EXP_PMAN_TARMAC_ULD T1
		LEFT JOIN EXP_PMAN_TARMAC_ULD_AWB T2
		     ON T1.FLT_KEY = T2.FLT_KEY
		AND T1.FLT_DATE    = T2.FLT_DATE
		AND T1.ULD_BT_NO   = T2.ULD_BT_NO
		AND T1.UNLDG_PT    = T2.UNLDG_PT
		AND FUN_VALIDATE_AWB(T2.AWB_NO, (select carr_code from awb where awb_no = T2.AWB_NO and awb_date = T2.AWB_DATE ),'A') not in ('N','C')
		LEFT JOIN ULD_INVENTORY U ON U.ULD_KEY = T1.ULD_BT_NO
    	LEFT JOIN EXP_FLT_ULD FLT ON FLT.ULD_KEY = T1.ULD_BT_NO AND FLT.FLT_KEY    = T1.FLT_KEY AND  FLT.FLT_DATE = T1.FLT_DATE  
		LEFT JOIN MAST_ULD_TYPE M1
		     ON SUBSTR(T1.ULD_BT_NO,0,3) = M1.CODE
		  WHERE NOT EXISTS
		  (SELECT NULL
		     FROM EXP_FLT_ULD FLTULD
		    WHERE T1.FLT_KEY = FLTULD.FLT_KEY
		  AND T1.FLT_DATE    = FLTULD.FLT_DATE
		  AND T1.ULD_BT_NO   = FLTULD.ULD_KEY
		  AND T1.UNLDG_PT    = FLTULD.UNLDG_PT
		  AND T1.FLT_KEY     = #P_FLT_KEY#
		  AND T1.FLT_DATE    = TO_DATE(#V_FLT_DATE#,'DDMONYY')
		  AND T1.UNLDG_PT    = #C_UNLDG_PT#
		  AND FLTULD.BB_IND  = 'Y'
		  )
		AND T1.FLT_KEY    = #P_FLT_KEY#
		AND T1.FLT_DATE   = TO_DATE(#V_FLT_DATE#,'DDMONYY')
		AND T1.UNLDG_PT   = #C_UNLDG_PT#
		AND (FLT.BB_IND   = 'N'
		AND M1.H_CONT_IND = 'N'
		AND M1.BT_IND     = 'N')
		GROUP BY T1.ULD_BT_NO,
		  T1.MAN_RMK         ,
		  T1.UNLDG_PT
   	</select>
   	
   	  
   	<select id="PkgPmanManifestCursor6" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
 		SELECT T1.AWB_NO AWB_NO                ,
		  TO_CHAR(T1.AWB_DATE,'DDMONYY') AWB_DATE,
		  SUM(T1.ASSIGNED_PCS) PCS              ,
		  SUM(T1.ASSIGNED_WT) WT                ,
		  T2.CONTENT CONTENT                    ,
		  T2.SPL_CODE1
		  ||T2.SPL_CODE2
		  ||T2.SPL_CODE3
		  ||T2.SPL_CODE4 SPL_CODE1,
		  T2.SPL_CODE5
		  ||T2.SPL_CODE6
		  ||T2.SPL_CODE7
		  ||T2.SPL_CODE8 SPL_CODE2 ,
		  T2.ORIG ORIG           ,
		  T3.MAN_RMK MAN_RMK       ,
		  T2.DEST DEST             ,
		  T2.PCS CAR_PCS           ,
		  T2.WT CAR_WT
		   FROM EXP_PMAN_TARMAC_ULD_AWB T1
		LEFT JOIN EXP_PMAN_TARMAC_AWB T3 ON T3.FLT_KEY = T1.FLT_KEY		AND T3.FLT_DATE    = T1.FLT_DATE		
		          AND T3.AWB_NO      = T1.AWB_NO		AND T3.AWB_DATE    = T1.AWB_DATE AND T3.UNLDG_PT    = T1.UNLDG_PT
		JOIN AWB T2    ON T1.AWB_NO  = T2.AWB_NO	AND T1.AWB_DATE    = T2.AWB_DATE
		WHERE T1.FLT_KEY = #P_FLT_KEY#
		AND T1.FLT_DATE    = TO_DATE(#V_FLT_DATE#,'DDMONYY')
		AND T1.UNLDG_PT    = #C_UNLDG_PT#
		AND ULD_BT_NO      = #C_ULD_BT_NO#
		AND FUN_VALIDATE_AWB(T1.AWB_NO, (select carr_code from awb where awb_no = T1.AWB_NO and awb_date = T1.AWB_DATE) ,'A') not in ('N','C')
		GROUP BY T1.AWB_NO,
		  T1.AWB_DATE     ,
		  T3.MAN_RMK      ,
		  T2.CONTENT      ,
		  T1.AWB_DATE     ,
		  T2.ORIG       ,
		  T2.DEST         ,
		  T2.PCS          ,
		  T2.WT           ,
		  T2.SPL_CODE1    ,
		  T2.SPL_CODE2    ,
		  T2.SPL_CODE3    ,
		  T2.SPL_CODE4    ,
		  T2.SPL_CODE5    ,
		  T2.SPL_CODE6    ,
		  T2.SPL_CODE7    ,
		  T2.SPL_CODE8    ,
		  T2.SPL_CODE9
   	</select>
   	  
   	<select id="PkgPmanManifestCursor7" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
 	 SELECT A.ULDNG_PT ULDNG_PT, #P_FLT_KEY# P_FLT_KEY, #V_FLT_DATE# V_FLT_DATE,
 	 AWB_NO AWB_NO,
 	 TO_CHAR(AWB_DATE,'DDMONYY') AWB_DATE,
 	 MAX(C.AWB_TOTAL_PCS) AWB_PCS,
     SUM(C.SHP_PCS) MAN_PCS, 
     SUM(C.SHP_WGT) MAN_WT
     FROM EXP_MANIFEST_HD A, EXP_MANIFEST_ULD B, EXP_MANIFEST_DTL C
       WHERE A.TR_NO = B.TR_NO
         AND B.TR_NO = C.TR_NO
         AND B.DOC_LINE_NO = C.UDOC_LINE_NO
         AND A.FLT_KEY = #P_FLT_KEY#
         AND A.FLT_DATE = TO_DATE(#V_FLT_DATE#,'DDMONYY')
         AND A.ULDNG_PT = #C_UNLDG_PT#
         AND FUN_VALIDATE_AWB(AWB_NO, (select carr_code from awb where awb_no = C.AWB_NO and awb_date = C.AWB_DATE ),'A') not in ('N','C')
       GROUP BY A.ULDNG_PT, AWB_NO,AWB_DATE
   	</select>
   	  
   	<select id="PkgPmanManifestCursor8" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
 	SELECT A.AWB_NO AWB_NO , 
 	TO_CHAR(A.AWB_DATE,'DDMONYY') AWB_DATE ,
 	A.CONN_FLT_NO CONN_FLT_NO, 
 	A.CONN_FLT_CARR CONN_FLT_CARR, 
 	TO_CHAR(A.CONN_FLT_DATE,'DDMONYY') CONN_FLT_DATE,
    A.UNLDG_PT UNLDG_PT, 
    A.SECTOR SECTOR,
    DENSE_RANK() OVER(PARTITION BY A.FLT_KEY, A.FLT_DATE, A.AWB_NO ORDER BY A.CONN_FLT_SNO) SEQ
    FROM EXP_PMANIFEST_AWB_CONN_FLT A
    WHERE A.FLT_KEY = #P_FLT_KEY#
    AND A.FLT_DATE = TO_DATE(#V_FLT_DATE#,'DDMONYY')
    AND FUN_VALIDATE_AWB(A.AWB_NO, (select carr_code from awb where awb_no = A.AWB_NO and awb_date = A.AWB_DATE ),'A') not in ('N','C')
   	</select>
   	  
   	<select id="PkgPmanManifestCursor9" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT A.ULD_BT_NO ULD_BT_NO, 
	A.CONN_FLT_NO CONN_FLT_NO, 
	A.CONN_FLT_CARR CONN_FLT_CARR, 
	TO_CHAR(A.CONN_FLT_DATE,'DDMONYY') CONN_FLT_DATE,
    A.UNLDG_PT UNLDG_PT, 
    A.SECTOR SECTOR,
    DENSE_RANK() OVER(PARTITION BY A.FLT_KEY, A.FLT_DATE, A.ULD_BT_NO ORDER BY A.CONN_FLT_SNO) SEQ
        FROM EXP_PMANIFEST_ULD_CONN_FLT A
       WHERE A.FLT_KEY = #P_FLT_KEY#
         AND A.FLT_DATE = TO_DATE(#V_FLT_DATE#,'DDMONYY')
         AND A.UNLDG_PT = #C_UNLDG_PT#
   	</select>
   	
   	<update id="PkgPmanManfstExpManifestUld" parameterClass="java.util.HashMap">
	UPDATE EXP_MANIFEST_ULD A
	SET A.ONWARD_DEST1 = DECODE(#SEQ#,1,#SECTOR#,A.ONWARD_DEST1),
	A.ONWARD_CAR_COD1 = DECODE(#SEQ#,1,#CONN_FLT_CARR#,A.ONWARD_CAR_COD1),
	A.ONWARD_FLT_NO1 = DECODE(#SEQ#,1,#CONN_FLT_NO#,A.ONWARD_FLT_NO1),
	A.ONVARD_FLT_DAT1 = DECODE(#SEQ#,1,TO_DATE(#CONN_FLT_DATE#,'DDMONYY'),A.ONVARD_FLT_DAT1),
	A.ONWARD_DEST2 = DECODE(#SEQ#,2,#SECTOR#,A.ONWARD_DEST2),
	A.ONWARD_CAR_COD2 = DECODE(#SEQ#,2,#CONN_FLT_CARR#,A.ONWARD_CAR_COD2),
	A.ONWARD_FLT_NO2 = DECODE(#SEQ#,2,#CONN_FLT_NO#,A.ONWARD_FLT_NO2),
	A.ONVARD_FLT_DAT2 = DECODE(#SEQ#,2,TO_DATE(#CONN_FLT_DATE#,'DDMONYY'),A.ONVARD_FLT_DAT2),
	A.ONWARD_DEST3 = DECODE(#SEQ#,3,#SECTOR#,A.ONWARD_DEST3),
	A.ONWARD_CAR_COD3 = DECODE(#SEQ#,3,#CONN_FLT_CARR#,A.ONWARD_CAR_COD3),
	A.ONWARD_FLT_NO3 = DECODE(#SEQ#,3,#CONN_FLT_NO#,A.ONWARD_FLT_NO3),
	A.ONVARD_FLT_DAT3 = DECODE(#SEQ#,3,TO_DATE(#CONN_FLT_DATE#,'DDMONYY'),A.ONVARD_FLT_DAT3)
	WHERE A.TR_NO = #G_MANF_HD_TRNO#
	AND A.ULD_KEY = #ULD_BT_NO#
   	</update>
   	
   	<update id="PkgPmanManfstExpManifestDtl" parameterClass="java.util.HashMap">
	UPDATE EXP_MANIFEST_DTL A
	SET A.ONWARD_DEST1 = DECODE(#SEQ#,1,#SECTOR#,A.ONWARD_DEST1),
	A.ONWARD_CAR_COD1 = DECODE(#SEQ#,1,#CONN_FLT_CARR#,A.ONWARD_CAR_COD1),
	A.ONWARD_FLT_NO1 = DECODE(#SEQ#,1,#CONN_FLT_NO#,A.ONWARD_FLT_NO1),
	A.ONVARD_FLT_DAT1 = DECODE(#SEQ#,1,TO_DATE(#CONN_FLT_DATE#,'DDMONYY'),A.ONVARD_FLT_DAT1),
	A.ONWARD_DEST2 = DECODE(#SEQ#,2,#SECTOR#,A.ONWARD_DEST2),
	A.ONWARD_CAR_COD2 = DECODE(#SEQ#,2,#CONN_FLT_CARR#,A.ONWARD_CAR_COD2),
	A.ONWARD_FLT_NO2 = DECODE(#SEQ#,2,#CONN_FLT_NO#,A.ONWARD_FLT_NO2),
	A.ONVARD_FLT_DAT2 = DECODE(#SEQ#,2,TO_DATE(#CONN_FLT_DATE#,'DDMONYY'),A.ONVARD_FLT_DAT2),
	A.ONWARD_DEST3 = DECODE(#SEQ#,3,#SECTOR#,A.ONWARD_DEST3),
	A.ONWARD_CAR_COD3 = DECODE(#SEQ#,3,#CONN_FLT_CARR#,A.ONWARD_CAR_COD3),
	A.ONWARD_FLT_NO3 = DECODE(#SEQ#,3,#CONN_FLT_NO#,A.ONWARD_FLT_NO3),
	A.ONVARD_FLT_DAT3 = DECODE(#SEQ#,3,TO_DATE(#CONN_FLT_DATE#,'DDMONYY'),A.ONVARD_FLT_DAT3)
	WHERE A.FLT_KEY = #P_FLT_KEY#
	AND A.FLT_DATE = TO_DATE(#P_FLT_DATE#,'DDMONYY')
	AND A.UNLDG_PT = #UNLDG_PT#
	AND A.AWB_NO = #AWB_NO#
	AND A.AWB_DATE = TO_DATE(#AWB_DATE#,'DDMONYY')
   	</update>
   	
   	
	<!--  Queries  for package PKG_PMAN_TO_MANIFEST Ends :: RANJITH -->
	<insert id="sqlTarmacInsAwbEvents" parameterClass="java.util.HashMap">
	INSERT INTO AWB_EVENTS
		(AWB_NO,AWB_DATE,EVENT_ID,
		EVENT_DESC,
		FLT_KEY,FLT_DATE,FLT_TYPE,TR_NO,ULD_KEY, PCS, WT,
		CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE
		)
	VALUES
		(#AWB_NO#, TO_DATE(#AWB_DATE#,'DDMONYY'), #EVENT_ID#,
		(SELECT EVENT_DESC FROM MAST_AWB_EVENTS WHERE EVENT_ID = #EVENT_ID#),
		'', '', 'I', #AWB_NO#,NULL, NVL(#PCS#,0), #WT#, 
		#LM_USER_ID#,sysdate,#LM_USER_ID#, sysdate)
	</insert>


		<!--  Queries  for package PKG_PMAN.CREATE_ULD_ASSIGN Begin-->
	<select id="sqlCreateUldAssign001" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select (SELECT ca.HOUSE_FLG FROM IMP_CAR_AWB ca WHERE ca.AWB_NO = t4.AWB_NO AND ca.AWB_DATE = t4.AWB_DATE) as HOUSE_FLAG,
		t1.seq_no SEQ_NO, NVL(t2.pcs, 0) PCS, NVL(t3.wt, 0) WT, t4.awb_no AWB_NO, TO_CHAR(t4.awb_date, 'DDMONYY') AWB_DATE
           from   (select column_value seq_no, rownum r1
                   from   table(pkg_common.inlist(#AWB_SEQ_LIST#))) t1,
                  (select column_value pcs, rownum r2
                   from   table(pkg_common.inlist(#PCS_LIST#))) t2,
                  (select column_value wt, rownum r3
                   from   table(pkg_common.inlist(#WT_LIST#))) t3,
                   awb_inventory t4
           where  t1.r1 = t2.r2
           and    t2.r2 = t3.r3
           and    t1.seq_no = t4.seq_no
	</select>
	<!--  and    t1.unassigned_bulk_pcs > 0 -->
	<select id="sqlCreateUldAssign002" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select NVL(t1.unassigned_bulk_pcs, 0) PCS, NVL(t1.unassigned_bulk_wt, 0) WT, t1.awb_no AWB_NO, TO_CHAR(t1.awb_date, 'DDMONYY') AWB_DATE
            from   exp_pmanifest_awb t1,
                  (select column_value awb_no, rownum r1
                   from   table(pkg_common.inlist(#AWB_LIST#))) t2
            where  t1.awb_no = t2.awb_no
            and    t1.flt_key = #FLT_KEY#
            and    t1.flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
            and    t1.unldg_pt = #UNLDG_PT#
            and    t1.unassigned_bulk_pcs > 0            
	</select>
	<select id="sqlCreateUldAssign025" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select (SELECT ca.HOUSE_FLG FROM IMP_CAR_AWB ca WHERE ca.AWB_NO = inv.AWB_NO AND ca.AWB_DATE = inv.AWB_DATE) as HOUSE_FLAG,
		inv.seq_no, NVL(inv.locn_pcs, 0) LOCN_PCS, NVL(inv.locn_wt, 0) LOCN_WT
            from   awb_inventory inv
            JOIN AWB awb ON UPPER(awb.AWB_NO) = UPPER(inv.AWB_NO) 
			AND UPPER (awb.awb_date) = UPPER (inv.awb_date)			   
            where  inv.awb_no = #AWB_NO#
            and    inv.awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')
            AND ULD_KEY=#NBK_ULD_KEY#
            AND 	NOT EXISTS(SELECT NULL FROM ULD_INVENTORY WHERE ULD_KEY = inv.ULD_KEY AND (PPK_IND = 'Y' OR MIX_PPK_IND = 'Y') AND (REBUILD_YN = 'N' AND TOPUP_YN = 'N'))                 
            AND not (flt_type = 'E' and FLT_KEY IS not NULL  )
	</select>
	<select id="sqlCreateUldAssign003" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select (SELECT ca.HOUSE_FLG FROM IMP_CAR_AWB ca WHERE ca.AWB_NO = inv.AWB_NO AND ca.AWB_DATE = inv.AWB_DATE) as HOUSE_FLAG,
		inv.seq_no, NVL(inv.locn_pcs, 0) LOCN_PCS, NVL(inv.locn_wt, 0) LOCN_WT
            from   awb_inventory inv
            JOIN AWB awb ON UPPER(awb.AWB_NO) = UPPER(inv.AWB_NO) 
			AND UPPER (awb.awb_date) = UPPER (inv.awb_date)			   
            where  inv.awb_no = #AWB_NO#
            and    inv.awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')
            AND 	NOT EXISTS(SELECT NULL FROM ULD_INVENTORY WHERE ULD_KEY = inv.ULD_KEY AND (PPK_IND = 'Y' OR MIX_PPK_IND = 'Y') AND (REBUILD_YN = 'N' AND TOPUP_YN = 'N'))                 
            AND not (flt_type = 'E' and FLT_KEY IS not NULL  )
	</select>
	<select id="sqlCreateUldAssign004" parameterClass="java.util.HashMap" resultClass="java.lang.String">
	select awb_no from   exp_pmanifest_uld_awb
            where  flt_key    = #FLT_KEY#
            and    flt_date   = TO_DATE(#FLT_DATE#,'DDMONYY')
            and    uld_bt_no  = #ULD_BT_NO#
	</select>
	<select id="sqlCreateUldAssign005" parameterClass="java.lang.String" resultClass="java.util.HashMap">
	select eic_flg, loc_code    , gross_weight gross_WT     
            from   uld_inventory
            where  uld_key = #ULD_BT_NO#
	</select>
	<update id="sqlCreateUldAssign006" parameterClass="java.lang.String" >
	update uld_inventory 
            set    cfm_status = 'CONFIRMED', owned_inv  = 'Y'
            where  uld_key    = #ULD_BT_NO#
	</update>
	<insert id="sqlCreateUldAssign007" parameterClass="java.util.HashMap" >
	insert into uld_inventory(uld_key, flt_type, flt_key, flt_date, loc_code, 
                          owned_inv, owner_id, strg_date, agent_inv, 
                          cfm_status, lm_user_id, lm_date, gross_weight ,ENTRY_TIME)
       values (#ULD_BT_NO#, 'E', #FLT_KEY#, TO_DATE(#FLT_DATE#,'DDMONYY'), null, 
               'Y', '---', sysdate, 'N', 
               'CONFIRMED', #USER_ID#, sysdate, #GROSS_WT# ,sysdate)
	</insert>
	<insert id="sqlCreateUldAssign008" parameterClass="java.util.HashMap" >
	insert into uld_mov(tr_type, event_id, uld_key, tr_no, tr_date, doc_line_no, 
                    mov_from, flt_type, flt_key, flt_date, cr_user_id, cr_date,
                    lm_user_id, lm_date, seq_no)
       values ('EF', 'EF', #ULD_BT_NO#, #ULD_BT_NO#, sysdate, 1, 
               #LOC_CODE#, 'E', #FLT_KEY#, TO_DATE(#FLT_DATE#,'DDMONYY'),#USER_ID#, sysdate, 
               #USER_ID#, sysdate, uld_mov_seq.nextval)
	</insert>
	<update id="sqlCreateUldAssign009" parameterClass="java.util.HashMap" >
	update exp_pmanifest_uld 
            set contr_code = #CONTR_CODE#, gross_wt = NVL(#GROSS_WT#, gross_wt), 
                tare_wt = NVL(#TARE_WT#, tare_wt), bldup_complete = NVL(#BLDUP_COMPLETE#, bldup_complete), 
                BLDUP_COMPLETE_USER_ID = decode(bldup_complete,'Y',#USER_ID#,null),
				BLDUP_COMPLETE_DATE = decode(bldup_complete,'Y',sysdate,null),
                eic_yn = NVL(#EIC_YN#, eic_yn), empty_yn = NVL(#EMPTY_YN#, empty_yn),
                TR_TYPE_EVT = #TR_TYPE_EVT#
                <isEqual property="SHP_TYPE" compareValue="OBC">
                	,shp_type = 'OBC',group_no='97' 
                </isEqual>
          where  flt_key = #FLT_KEY#
          and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
          and    uld_bt_no = #ULD_BT_NO#
	</update>	
	<select id="sqlCreateUldAssign010" parameterClass="java.lang.String" resultClass="java.lang.String">
	  SELECT 'OBC' FROM exp_car t3,awb_inventory t4 where t4.awb_no=t3.awb_no and t4.awb_date = t3.awb_date and t4.seq_no=#PARAM# and t3.accept_mode = 'LOB' and rownum=1
	</select>
	<select id="sqlCreateUldAssign011" parameterClass="java.util.HashMap" resultClass="java.lang.String">
	select 'OBC' from   exp_car t3
            where exists (
                  select null from exp_pmanifest_awb t1, 
                                (select column_value awb_no from table(pkg_common.inlist(#AWB_LIST#))) t2
						           where  t1.awb_no = t2.awb_no
						           and    t1.flt_key = #FLT_KEY#
						           and    t1.flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
						           and    t1.unldg_pt = #UNLDG_PT#
						           and    t1.awb_no = t3.awb_no
						           and    t1.awb_date = t3.awb_date)
		            and    accept_mode = 'LOB'
		            and    rownum = 1
	</select>
	<insert id="sqlCreateUldAssign012" parameterClass="java.util.HashMap" >
	insert into exp_pmanifest_uld(flt_key, flt_date, flt_type, unldg_pt, uld_bt_no, contr_code,
                              ppk_type, gross_wt, tare_wt, bldup_complete, eic_yn,
                              empty_yn, group_no, cr_user_id, cr_date, lm_user_id,
                              lm_date, shp_type,TRANSIT_FLG,HDLG_MODE)
       values (#FLT_KEY#, TO_DATE(#FLT_DATE#,'DDMONYY'), 'E', #UNLDG_PT#, #ULD_BT_NO#, #CONTR_CODE#,
               'B', NVL(#GR0SS_WT#, 0), NVL(#TARE_WT#, 0), nvl(#BLDUP_COMPLETE#, 'N'), nvl(#EIC_YN#, 'N'), 
               nvl(#EMPTY_YN#, 'N'), DECODE(#SHP_TYPE#,'OBC','97','000'), #USER_ID#, sysdate, #USER_ID#, 
               sysdate, nvl(#SHP_TYPE#, 'LOCAL'),
               (SELECT TRANSIT_FLG FROM ULD_INVENTORY WHERE ULD_KEY=#ULD_BT_NO#),
				(SELECT HANDLING_MODE FROM ULD_INVENTORY WHERE ULD_KEY=#ULD_BT_NO#))
	</insert>
	<update id="sqlCreateUldAssign013" parameterClass="java.util.HashMap" >
	update exp_pmanifest_uld_awb 
          set assigned_pcs = assigned_pcs + NVL(#PCS#,0), assigned_wt = assigned_wt + NVL(#WT#, 0),
              lm_user_id = NVL(#USER_ID#, lm_user_id), lm_date = sysdate , TR_TYPE = #TR_TYPE#
	        where  flt_key = #FLT_KEY#
	        and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
	        and    uld_bt_no = #ULD_BT_NO#
	        and    unldg_pt = #UNLDG_PT#
	        and    awb_no = #AWB_NO#
	        and    awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')
	</update>
	<select id="sqlCreateUldAssign019" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		select count(1) from exp_pmanifest_uld_awb where flt_key = #FLT_KEY# and 
		flt_date = TO_DATE(#FLT_DATE#,'DDMONYY') and  uld_bt_no = #ULD_BT_NO# and  unldg_pt = #UNLDG_PT# and  awb_no = #AWB_NO#
	</select>	
	<insert id="sqlCreateUldAssign014" parameterClass="java.util.HashMap" >
	insert into exp_pmanifest_uld_awb(tr_no,flt_key, flt_date, uld_bt_no, unldg_pt, awb_no,
                                  awb_date, assigned_pcs, assigned_wt, cr_user_id, 
                                  cr_date, lm_user_id, lm_date,tr_type)
       values (#AWB_SEQ_NO#,#FLT_KEY#, TO_DATE(#FLT_DATE#,'DDMONYY'), #ULD_BT_NO#, #UNLDG_PT#, #AWB_NO#,
               TO_DATE(#AWB_DATE#,'DDMONYY'), NVL(#PCS#,0), NVL(#WT#, 0), #USER_ID#, 
               sysdate, #USER_ID#, sysdate,#TR_TYPE#)
	</insert>
	<select id="sqlCreateUldAssign015" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select NVL(assigned_pcs, 0) ASSIGNED_PCS, NVL(assigned_wt, 0) ASSIGNED_WT from exp_pmanifest_uld_awb
		where  flt_key = #FLT_KEY#
        and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
        and    uld_bt_no = #ULD_BT_NO#
        and    unldg_pt = #UNLDG_PT#
        and    awb_no = #AWB_NO#
        and    awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')
	</select>
        <update id="sqlCreateUldAssign016" parameterClass="java.util.HashMap">
	update awb_inventory inv set
	            inv.locn_pcs = inv.locn_pcs + NVL(#PCS#,0),
	            inv.locn_wt = inv.locn_wt + NVL(#WT#, 0),LM_USER_ID=#LM_USER_ID#
        where  inv.awb_no = #AWB_NO#
        and    inv.awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')
        and    ((#LOC_CODE# is null and inv.loc_code is null) or (inv.loc_code = #LOC_CODE#))
        and    inv.uld_key = #ULD_BT_NO#
        and    inv.lsp_no is null
        and    inv.flt_key = #FLT_KEY#
        and    inv.flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
        and    exists (select null
				       from   awb
				       where  awb_no = inv.awb_no
				       and    awb_date = inv.awb_date
					   )  
	</update>
	<insert id="sqlCreateUldAssign017" parameterClass="java.util.HashMap">
	insert into awb_inventory(SEQ_NO,awb_no, awb_date, carr_code, lsp_no, uld_key,
							  loc_code, locn_pcs, locn_wt, strg_date, flt_type,flt_key,
                          	  flt_date, cr_user_id, cr_date, lm_user_id, lm_date)
    	values (#AWB_SEQ_NO#,#AWB_NO#, TO_DATE(#AWB_DATE#,'DDMONYY'), #CARR_CODE#, null, #ULD_BT_NO#,
	            #LOC_CODE#, NVL(#PCS#,0), NVL(#WT#, 0), TO_DATE(#STRG_DATE#,'DDMONYYHH24MI'), 'E', #FLT_KEY#,
	            TO_DATE(#FLT_DATE#,'DDMONYY'), #USER_ID#, sysdate, #USER_ID#, sysdate)
	</insert>
	<select id="sqlCreateUldAssign018" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select 
		FLT_KEY, to_char(FLT_DATE,'DDMONYY') FLT_DATE, ULD_BT_NO, UNLDG_PT, AWB_NO, to_char(AWB_DATE,'DDMONYY') AWB_DATE, 
		ASSIGNED_PCS, ASSIGNED_WT, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE, PPK_TYPE, TR_NO
	 from exp_pmanifest_uld_awb
			where  flt_key = #FLT_KEY#
	        and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
	        and    uld_bt_no = #ULD_BT_NO#
	        and    unldg_pt = #UNLDG_PT#
	        and    awb_no = #AWB_NO#
	        and    awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')
	</select>
	
	<update id="sqlCreateUldAssign020" parameterClass="java.util.HashMap">
		UPDATE HAWB_INVENTORY SET STRG_PCS = STRG_PCS + #HAWB_PCS#, STRG_WT = STRG_WT + #HAWB_WT#, 
          LM_USER_ID = #USER_ID#, LM_DATE = SYSDATE
      	WHERE SEQ_NO = #AWB_SEQ_NO# AND HAWB_NO= #HAWB_NO#
	</update>
	<insert id="sqlCreateUldAssign021" parameterClass="java.util.HashMap">
			INSERT INTO HAWB_INVENTORY(SEQ_NO,HAWB_NO, STRG_PCS, STRG_WT,CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE)
             VALUES (#AWB_SEQ_NO#,#HAWB_NO#,NVL(#HAWB_PCS#,0), NVL(#HAWB_WT#, 0),#USER_ID#, SYSDATE, #USER_ID#, SYSDATE)
    </insert>
    
    <select id="sqlCreateUldAssign022" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select t4.SEQ_NO SEQ_NO, NVL(t1.HAWB_PCS, 0) HAWB_PCS, NVL(t2.HAWB_WT, 0) HAWB_WT, t4.HAWB_NO HAWB_NO
           from  (select column_value HAWB_PCS, rownum r1
                   from   table(pkg_common.inlist(#HAWB_PCS_LIST#))) t1,
                  (select column_value HAWB_WT, rownum r2
                   from   table(pkg_common.inlist(#HAWB_WT_LIST#))) t2,
                   (select column_value HAWB_NO, rownum r3
                   from   table(pkg_common.inlist(#HAWB_LIST#))) t3,
                   HAWB_INVENTORY t4
           WHERE  t1.r1 = t2.r2
           AND    t2.r2 = t3.r3
           AND    t4.SEQ_NO = #SEQ_NO#
           AND    t3.HAWB_NO = t4.HAWB_NO
	</select>
	
	<select id="sqlCreateUldAssign023" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		 SELECT inv.SEQ_NO FROM AWB_INVENTORY inv 
        WHERE  inv.awb_no = #AWB_NO#
        AND    inv.awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')
        AND    ((#LOC_CODE# is null and inv.loc_code is null) or (inv.loc_code = #LOC_CODE#))
        AND    inv.uld_key = #ULD_BT_NO#
        AND    inv.lsp_no is null
        AND    inv.flt_key = #FLT_KEY#
        AND    inv.flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
        AND    exists (SELECT null
				       FROM   AWB
				       WHERE  awb_no = inv.awb_no
				       AND    awb_date = inv.awb_date
					   )  
	</select>
    <select id="sqlCreateUldAssign024" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT inv.SEQ_NO, NVL(hinv.STRG_PCS, 0) HAWB_PCS, NVL(hinv.STRG_WT, 0) HAWB_WT, hinv.HAWB_NO    
		  FROM   HAWB_INVENTORY hinv             
		  INNER JOIN AWB_INVENTORY inv ON hinv.SEQ_NO = inv.SEQ_NO
		  INNER JOIN AWB awb ON UPPER(awb.AWB_NO) = UPPER(inv.AWB_NO) AND UPPER (awb.AWB_DATE) = UPPER (inv.AWB_DATE)   	   
          WHERE  inv.AWB_NO = #AWB_NO#
          AND    inv.AWB_DATE = TO_DATE(#AWB_DATE#,'DDMONYY')
          AND  NOT EXISTS(SELECT NULL FROM ULD_INVENTORY WHERE ULD_KEY = inv.ULD_KEY AND (PPK_IND = 'Y' OR MIX_PPK_IND = 'Y') AND (REBUILD_YN = 'N' AND TOPUP_YN = 'N'))                    
          AND NOT (FLT_TYPE = 'E' AND FLT_KEY IS NOT NULL  )
          <isNotEmpty property="NBK_ULD_KEY" prepend="AND">
          	 inv.ULD_KEY = #NBK_ULD_KEY#
          </isNotEmpty>
	</select>
	<!--  Queries  for package PKG_PMAN.CREATE_ULD_ASSIGN Ends-->
	<!-- Queries for TRG_AD_EXP_PMAN_TARMAC_ULD_AWB -->
	<select id="sqlAdTarmacGetUldAwb" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT 'X'            
            FROM   EXP_PMAN_TARMAC_ULD_AWB
            WHERE  FLT_KEY = #FLT_KEY#
            AND    FLT_DATE = TO_DATE(#FLT_DATE#,'DDMONYY')
            AND    ULD_BT_NO = #ULD_BT_NO#
            AND    ROWNUM = 1
	</select>
	<delete id="sqlAdTarmacDelUldAwb" parameterClass="java.util.HashMap">
		DELETE EXP_PMAN_TARMAC_ULD
                WHERE  FLT_KEY = #FLT_KEY#
             AND    FLT_DATE = TO_DATE(#FLT_DATE#,'DDMONYY')
             AND    ULD_BT_NO = #ULD_BT_NO#    
	</delete>
	<delete id="sqlAdTarmacDelExpFltUld" parameterClass="java.util.HashMap">
	 	DELETE FROM EXP_FLT_ULD
			 WHERE  FLT_KEY = #FLT_KEY#
			 AND    FLT_DATE = TO_DATE(#FLT_DATE#,'DDMONYY')
			 AND    ULD_KEY = #ULD_BT_NO#
 	</delete>
 	<select id="sqlAdTarmacGetOldExpFltUld" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	 	select
	 	BB_IND AS BB_IND,
		SOURCE AS SOURCE,
		EIC_YN AS EIC_YN,
		PPK_TYPE AS PPK_TYPE,
		TARE_WT  AS TARE_WT,
		ULD_KEY AS ULD_KEY,
		TO_CHAR(CR_DATE,'DDMONYY') AS CR_DATE,
		LM_USER_ID AS LM_USER_ID,
		FLT_KEY AS FLT_KEY,
		TO_CHAR(FLT_DATE,'DDMONYY') AS FLT_DATE
	 	FROM EXP_FLT_ULD
		WHERE  FLT_KEY = #FLT_KEY#
			 AND    FLT_DATE = TO_DATE(#FLT_DATE#,'DDMONYY')
			 AND    ULD_KEY = #ULD_BT_NO#
 	</select>
	<!-- Queries for TRG_AD_EXP_PMAN_TARMAC_ULD_AWB ends-->
	<!-- Queries for PKG_PMAN.PMAN_FBL Begin-->
	<update id="sqlUpdPmanTarmac001" parameterClass="java.util.HashMap">
	update exp_pman_tarmac_awb set
			unldg_pt= #NEW_UNLDG_PT#,
            ppk_pcs = ppk_pcs + NVL(#PCS#,0),
            ppk_wt  = ppk_wt + NVL(#WT#,0),TR_TYPE=#TR_AWB_TYPE#
            <isNotEmpty property="GROUP_NO">
            ,group_no = #GROUP_NO#
            </isNotEmpty>
        where flt_key = #FLT_KEY#
        and   flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
        and   awb_no = #AWB_NO#
        and   awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')
	</update>
	<select id="sqlUpdPmanTarmac002" parameterClass="java.util.HashMap" resultClass="java.lang.String">
	select bulk_pcs+ppk_pcs FROM exp_pman_tarmac_awb 
        where flt_key = #FLT_KEY#
        and   flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
        and   unldg_pt = #UNLDG_PT#
        and   awb_no = #AWB_NO#
        and   awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')
    </select>
    <insert id="sqlUpdPmanTarmac003" parameterClass="java.util.HashMap">  
	insert into exp_pman_tarmac_awb(flt_key, flt_date, unldg_pt, awb_no, awb_date, 
                                ppk_pcs, ppk_wt, cr_user_id, cr_date, lm_user_id, 
                                lm_date,TR_TYPE
            				,group_no)
    	values (#FLT_KEY#, TO_DATE(#FLT_DATE#,'DDMONYY'), #UNLDG_PT#, #AWB_NO#, TO_DATE(#AWB_DATE#,'DDMONYY'), 
        	    NVL(#PCS#,0), NVL(#WT#,0), #USER_ID#, sysdate, #USER_ID#, 
            	sysdate,#TR_AWB_TYPE#
           		,#GROUP_NO#)
	</insert>
	<delete id="sqlUpdPmanTarmac004" parameterClass="java.util.HashMap">
	delete from exp_pman_tarmac_awb
        where flt_key = #FLT_KEY#
        and   flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
        and   unldg_pt = #UNLDG_PT#
        and   awb_no = #AWB_NO#
        and   awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')
	</delete>
	<select id="sqlUpdPmanTarmac005" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select ppk_pcs, ppk_wt FROM exp_pman_tarmac_awb 
        where flt_key = #FLT_KEY#
        and   flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
        
        and   awb_no = #AWB_NO#
        and   awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')
    </select>
    <!-- and   unldg_pt = #UNLDG_PT# -->
    
    
    <!-- Queries for PKG_PMAN.PMAN_FBL Ends-->
	<!-- Queries for PKG_PMAN.PMAN_FBL Begin-->
	<select id="sqlPmanFbl001" parameterClass="java.util.HashMap" resultClass="java.lang.String">
	select uld_key, uld_wt, decode(rmk, null, '', '/'||rmk) rmk
	    from   edi_fbl_uld
	    where  tr_no = #TR_NO#
	    and    sdoc_line_no = #LINE_NO#
	</select>
	<update id="sqlPmanFbl002" parameterClass="java.util.HashMap">
	update exp_pman_fbl set
	            unldg_pt = #UNLDG_PT#,
	            pcs = NVL(#PCS#, 0),
	            wt = NVL(#WT#, 0),
	            spl_code1 = #SPL_CODE_1#,
	            spl_code2 = #SPL_CODE_2#,
	            remarks = #REMARKS#,
	            lm_user_id = #USER_ID#,
	            lm_date = sysdate
	        where  flt_key = #FLT_KEY#
	        and    flt_date = T0_DATE(#FLT_DATE#,'DDMONYY')
	        and    awb_no = #AWB_NO#
	</update>
	<insert id="sqlPmanFbl003" parameterClass="java.util.HashMap">
	insert into exp_pman_fbl(flt_key, flt_date, awb_no, unldg_pt, pcs, wt, spl_code1, 
                         spl_code2, fbl_tr_no, fbl_line_no, remarks, cr_user_id, 
                         cr_date, lm_user_id, lm_date)
		values (#FLT_KEY#, T0_DATE(#FLT_DATE#,'DDMONYY'), #AWB_NO#, #UNLDG_PT#, NVL(#PCS#, 0), NVL(#WT#, 0), #SPL_CODE_1#, 
              	#SPL_CODE_2#, #TR_NO#, #LINE_NO#, #REMARKS#, #USER_ID#, 
              	sysdate, #USER_ID#, sysdate)
	</insert>
	<update id="sqlPmanFbl004" parameterClass="java.util.HashMap">
	update edi_fbl_shp 
		set		pman_status = 'Y'
		where 	tr_no = #TR_NO#
		and		doc_line_no = #LINE_NO#
	</update>
    <!-- Queries for PKG_PMAN.PMAN_FBL Ends-->
    <!-- Queries for PKG_PMAN.TARMAC_ULD Begins-->
    <select id="sqlTarmacUld001" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
    select t1.awb_no AWB_NO, t2.pcs PCS, t3.wt WT, t4.group_no GROUP_NO
      from   (select column_value awb_no, rownum r1
              from   table(pkg_common.inlist(#AWB_NO_LIST#))) t1,
             (select column_value pcs, rownum r2
              from   table(pkg_common.inlist(#AWB_PCS_LIST#))) t2,
             (select column_value wt, rownum r3
              from   table(pkg_common.inlist(#AWB_WT_LIST#))) t3,
             (select column_value group_no, rownum r4
              from   table(pkg_common.inlist(#AWB_GROUP_NO_LIST#))) t4
      where  t1.r1 = t2.r2
      and    t2.r2 = t3.r3
      and    t3.r3 = t4.r4
	</select>
	<select id="sqlTarmacUld002" parameterClass="java.lang.String" resultClass="java.lang.String">
	select awb_no
	    from   (select column_value awb_no
	            from   table(pkg_common.inlist(#AWB_NO_LIST#))
	            group by column_value having count(1) > 1)
	    where rownum = 1
	</select>
    <select  id="sqlTarmacUld003" parameterClass="java.util.HashMap" resultClass="java.lang.String">
	select 'X' from   exp_pman_tarmac_uld_awb
	    where  flt_key = #FLT_KEY#
	    and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
	    and    uld_bt_no = #ULD_KEY#
	    and    awb_no = #AWB_NO#
	    and    awb_date = TO_DATE(#AWB_DATE#, 'DDMONYY')
    </select>
    <select  id="sqlTarmacUld004" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select pcs, wt, pman_pcs, pman_wt
	    from   awb
	    where  awb_no = #AWB_NO#	    
	    and    awb_date = TO_DATE(#AWB_DATE#, 'DDMONYY')
	</select>
	<insert id="sqlTarmacUld005" parameterClass="java.util.HashMap">
	insert into exp_pman_tarmac_uld(flt_key, flt_date, uld_bt_no, unldg_pt, man_rmk, 
	                                cr_user_id, cr_date, lm_user_id, lm_date, gross_wt, tare_wt, tr_type)
	    values (#FLT_KEY#, TO_DATE(#FLT_DATE#,'DDMONYY'), #ULD_KEY#, #UNLDG_PT#, #MAN_RMK#,
	            #USER_ID#, sysdate, #USER_ID#, sysdate, #GROSS_WT#, #TARE_WT#, #TR_TYPE#)
	</insert>
	<insert id="sqlTarmacUld006" parameterClass="java.util.HashMap">
	insert into exp_pman_tarmac_uld_awb(flt_key, flt_date, unldg_pt, uld_bt_no, awb_no, 
	                                    awb_date, group_no, assigned_pcs, assigned_wt, 
	                                    cr_user_id, cr_date, lm_user_id, lm_date)
	    values (#FLT_KEY#, TO_DATE(#FLT_DATE#,'DDMONYY'), #UNLDG_PT#, #ULD_KEY#, #AWB_NO#,
	            TO_DATE(#AWB_DATE#, 'DDMONYY'), #GROUP_NO#, NVL(#PCS#,0), NVL(#WT#,0), 
	            #USER_ID#, sysdate, #USER_ID#, sysdate)
	</insert>

	
	

	<!-- Queries for PKG_PMAN.TARMAC_ULD End-->
	<!-- Queries for PKG_PMAN.VAL_FLIGHT Begins-->
	<select  id="sqlValFlight001" parameterClass="java.util.HashMap" resultClass="java.lang.String">
	select flt_cls_yn from   flt_opr_events
        where  flt_key = #FLT_KEY#
        and    sch_date = TO_DATE(#SCH_DATE#, 'DDMONYY')
        and    flt_type = 'D'
	</select>
	<!-- Queries for PKG_PMAN.VAL_FLIGHT End-->
	<!-- Queries for PKG_PMAN.VAL_CREATE_TARMAC_ULD Begins-->
	<select  id="sqlValCreateTarmacUld001" parameterClass="java.util.HashMap" resultClass="java.lang.String">
	select 'X'
	    from   flt_opr_events
	    where  flt_key = #FLT_KEY#
	    and    sch_date = TO_DATE(#FLT_DATE#, 'DDMONYY')
	    and    flt_type = 'D'
	    and    dls_final_date is not null
	</select>
	<select  id="sqlValCreateTarmacUld002" parameterClass="java.lang.String" resultClass="java.lang.String">
	select 'X'
	    from   uld_inventory
	    where  uld_key = #ULD_KEY#
	    and    owned_inv = 'Y'
	</select>
	<parameterMap id="pkgExpValValUldTypeMap" class="java.util.HashMap">
		<parameter property="STATUS" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="OUT" />	
		<parameter property="ULD_KEY" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="IN" />			
	</parameterMap>	
	<procedure id="sqlPkgExpValValUldType" parameterMap="pkgExpValValUldTypeMap">
		{ ? = call pkg_exp_val.val_uld_type(?)}
	</procedure>
	<select  id="sqlValCreateTarmacUld003" parameterClass="java.util.HashMap" resultClass="java.lang.String">
	select unldg_pt from   exp_pman_tarmac_uld
		where  flt_key = #FLT_KEY#
		and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
		and    uld_bt_no = #ULD_KEY#
	</select>
	<!-- Queries for PKG_PMAN.VAL_CREATE_TARMAC_ULD Begins-->	  
<!--Mahesh BN Updates for package Pkg_exp_uld from 05.05.2011 To 10.05.2011 Begin	-->
			<select id="sqlGetFltClsInfo" parameterClass="java.util.HashMap" resultClass="java.lang.String">	
				select flt_cls_yn
                from   flt_opr_events
                where  flt_key = #FLT_KEY#
                and    sch_date = TO_DATE(#FLT_DATE#,'DDMONYY')
                and    flt_type = 'D'
			</select>
			
			<update id="sqlUpdateFltOprEventSetDtls" parameterClass="java.util.HashMap">	
				update flt_opr_events 
			    set dls_ind = #OPTION#,
			    dls_final_date = decode(#OPTION#, 'Y', sysdate, null),
			    dls_final_time = decode(#OPTION#, 'Y', to_char(sysdate, 'HH24MI'), null),
			    dls_final_user_id = decode(#OPTION#, 'Y', #USER_ID#, null),
			    TR_TYPE = 'FIDLS',
			    lm_user_id = #USER_ID#,
	            lm_date = sysdate
				where flt_key = #FLT_KEY#
				and   sch_date = TO_DATE(#FLT_DATE#,'DDMONYY')
				and   flt_type = 'D'
			</update>
			
			<delete id="sqlDeleteDtlsOfExpDlsDtl" parameterClass="java.util.HashMap">
				delete from exp_dls_dtl where  flt_key = #FLT_KEY# 	and  TRUNC(flt_date) = TO_DATE(#FLT_DATE#,'DDMONYY')
	        <!--	
	        	and not exists (select null
	                        from   exp_offload_uld
	                        where  flt_key = t1.flt_key
	                        and    flt_date = t1.flt_date
	                        and    uld_bt_no = t1.uld_key
	                        and    offload_uld_yn = 'Y'
							and not exists (select null from exp_flt_uld 
										   where flt_key = t1.flt_key
					                       and   flt_date = t1.flt_date
					                       and   uld_key = t1.uld_key)) -->
			 </delete>        

	         <insert id="sqlInsExpDlsDtlsFromGtExpDlsDtls" parameterClass="java.util.HashMap">
				 	insert into exp_dls_dtl(flt_key, flt_date, unldg_pt, sno, awb_no, awb_date, uld_key, contr_code, manifest_wt, gross_wt, tare_wt, net_wt, pcs, variance,
	        		spl_code1, spl_code2, eic_yn, checkout_yn, bldup_yn, breakbulk_yn, rmk, rec_type, status, lm_user_id, lm_date,exc_code,SPL_CODE,FINALIZE_IND,ULD_TYPE)
	       			select flt_key, flt_date, unldg_pt, sno, replace(awb_no, '-', ''), awb_date, uld_key, contr_code, manifest_wt, gross_wt, tare_wt, net_wt, pcs, variance,
	        	    spl_code1, spl_code2, eic_yn, checkout_yn, bldup_yn, breakbulk_yn, rmk, rec_type, status, 'sys', sysdate,exc_code,SPL_CODE,FINALIZE_IND,ULD_TYPE
	        		from   gt_exp_dls_dtl
			 </insert>
			 
			 <update id="sqlUpdateExpDlshdDtls" parameterClass="java.util.HashMap">
			 		update exp_dls_hd 
		    		set TR_TYPE = 'FIDLS',		    		
		    		final_date = decode(#OPTION#, 'Y', sysdate, null),
		    		lm_user_id = #USER_ID#,
	        		lm_date = sysdate
					where flt_key = #FLT_KEY#
					and   flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
			 </update>
		
		<select id="sqlGetMosSummsryDtls" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">	
				select t1.flt_key, TO_CHAR(t1.flt_date,'DDMONYY') flt_date, t1.rho_id,
		             substr(lpad(t2.sch_time, 4, 0), 1, 2)||':'||substr(lpad(t2.sch_time, 3, 0), 1, 2) std, TO_CHAR(est_date, 'DDMONYY') EST_DATE,
		             decode(est_time, null, '', substr(lpad(t2.est_time, 4, 0), 1, 2)||':'||substr(lpad(t2.est_time, 4, 0), 3)) etd,
		             acft_prk_bay bay, (select CODE_DESC from mast_code_dtl where code_type = 'FLT_STATUS' and code = t2.status and rownum = 1) flt_status
		      from   exp_chkout_hd t1, flt_opr t2, cust_company t3
		      where  t1.flt_key = t2.flt_key
		      and    t1.flt_date = t2.sch_date
		      and    t2.flt_type = 'D'
		      and    t2.carr_code = t3.carr_code
		      and    (t3.rho_id = #RHO_ID# or t1.rho_id = #RHO_ID#)
		      --and    t1.rho_id = #RHO_ID#
		      and    t2.sch_date between TO_DATE(#FLT_DATE_FROM#, 'DDMONYY') and TO_DATE(#FLT_DATE_TO#, 'DDMONYY')
		      and    t2.carr_code = nvl(#CARR_CODE#, t2.carr_code)
		      and exists (select null from exp_chkout_dtl where MOFS_NO is not null
		   	   		  and flt_key = t1.flt_key and flt_date = t1.flt_date)
	   	  </select>
	   	  
	   	  <insert id="sqlInsertGtMosSummary" parameterClass="java.util.HashMap">
	   	    insert into gt_mofs_summary(flt_key, flt_date, sch_time, est_date, est_time, bay, flt_status, allotment, handover_status, rho_id)
	   	    values (#FLT_KEY#, TO_DATE(#FLT_DATE#,'DDMONYY'), #STD#, TO_DATE(#EST_DATE#, 'DDMONYY'), #ETD#, #BAY#, #FLT_STATUS#, #ALLOTMENT#, #HANDOVER_STATUS#, #RHO_ID#)
	   	  </insert>
	   	  
	   	  <select id="sqlGetMosSummsryAimsDtls" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		   	  	select t1.flt_key as flt_key, TO_CHAR(t1.flt_date,'DDMONYY') as flt_date, t1.rho_id as rho_id,
		             substr(lpad(t2.sch_time, 4, 0), 1, 2)||':'||substr(lpad(t2.sch_time, 4, 0), 3, 2) std, TO_CHAR(est_date, 'DDMONYY') EST_DATE,
		             decode(est_time, null, '', substr(lpad(t2.est_time, 4, 0), 1, 2)||':'||substr(lpad(t2.est_time, 4, 0), 3)) etd,
		             acft_prk_bay bay, (select CODE_DESC from mast_code_dtl where code_type = 'FLT_STATUS' and code = t2.status and rownum = 1) flt_status
		      from   exp_chkout_hd t1, flt_opr t2, cust_company t3
		      where  t1.flt_key = t2.flt_key
		      and    t1.flt_date = t2.sch_date
		      and    t2.flt_type = 'D'
		      and    t2.carr_code = t3.carr_code
		      and    (t3.rho_id =#RHO_ID# or t1.rho_id = #RHO_ID#)
		      and    t2.flt_key = nvl(#FLT_KEY#, t2.flt_key)
		      and    t2.sch_date between nvl(TO_DATE(#FLT_DATE_FROM#,'DDMONYY'), t2.sch_date) and nvl(TO_DATE(#FLT_DATE_TO#,'DDMONYY'), t2.sch_date)
		      and    ((#WH_LEVEL# is null) or (#WH_LEVEL# is not null and t2.wh_level = #WH_LEVEL#))
		      and exists (select null from exp_chkout_dtl where MOFS_NO is not null
		   	   		  and flt_key = t1.flt_key and flt_date = t1.flt_date)
	   	</select>
	   	
		  <insert id="sqlInsertGtMosSummaryDtls" parameterClass="java.util.HashMap"> 
		   		insert into gt_mofs_summary(flt_key, flt_date, sch_time, est_date, est_time, bay, flt_status, allotment, handover_status, rho_id)
			   	values (#FLT_KEY#, TO_DATE(#FLT_DATE#,'DDMONYY'), #STD#, #EST_DATE#, #ETD#, #BAY#, #FLT_STATUS#, #ALLOTMENT#, #HANDOVER_STATUS#, #RHO_ID#)	
		  </insert>
		  
		  <select id="sqlGetExpPmaniFestAwdData" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
			    select distinct awb_no 
	            from   exp_pmanifest_awb
	            where  flt_key = #FLT_KEY#
	            and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
          </select>
          
          <select id="sqlGetAwbInventoryCheckoutDtls" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	          	select *
			    from   awb_inventory_chkout inv
			    JOIN AWB awb ON UPPER(awb.AWB_NO) = UPPER(inv.AWB_NO) 
				AND UPPER (awb.awb_date) = UPPER (inv.awb_date)				   
			    where  inv.flt_type = 'E'
	            and    inv.flt_key = #FLT_KEY#
	            and    inv.flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
	            and    inv.uld_key = #ULD_KEY#
           </select>
           
           <select id="sqlGetAwbInvFromUldInvDtls" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	            select *
	            from   awb_inventory_chkout inv
	            JOIN AWB awb ON UPPER(awb.AWB_NO) = UPPER(inv.AWB_NO) 
				AND UPPER (awb.awb_date) = UPPER (inv.awb_date)				  
	            where  inv.flt_type = 'E'
	            and    inv.flt_key = #FLT_KEY#
	            and    inv.flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
	            and    inv.uld_key in (select uld_key
	                               from   uld_inventory
	                               where  base_plt = #ULD_KEY#)	           	
           </select>
           
           <update id="sqlUpdateUldInvDtlss" parameterClass="java.util.HashMap">
           		update uld_inventory
	            set cfm_status = 'CHECKED OUT',
	            wh_dest = null,
	            loc_code = null,
	            owned_inv = 'N',
	            lm_user_id = #LM_USER_ID#,
	            lm_date = sysdate,
	            ref_tr_no = #ULD_KEY#,
	            ref_doc_line_no = 100,
	            ref_tr_type = 'CH',
	            ref_tr_date = sysdate,
	            ref_tr_event = decode(#MODE#, 'CHECKOUT', 'CH', 'CHECKOUT HHT', 'CHH')
	            where  uld_key = #ULD_KEY#
	       </update>
	      
	       <select id="sqlGetUldInvDtlss" parameterClass="java.lang.String" resultClass="java.lang.String">
	       		select eic_flg
	       		from uld_inventory	
	       		where  uld_key = #ULD_KEY#
	       </select>
	       
	       <insert id="sqlInsertAwbInvChkoutFromAwbInv" parameterClass="java.util.HashMap" >		
	       		insert into awb_inventory_chkout
					(awb_no, awb_date, carr_code, catalog, cc_code, srf_no, trm_no, cdif_no,
					sch_coll_date, lsp_no, wh_dest, loc_code, locn_pcs, locn_wt, rtrv_date, rtrv_user_id, strg_date,
					strg_rmk, dam_ind, ppk_ind, bulk_wt, bup_wt, flt_no, flt_date, flt_type, flt_key, uld_key,
					cr_user_id, cr_date, lm_user_id, lm_date, seq_no, ref_rmk)
			    select awb_no, awb_date, carr_code, catalog, cc_code, srf_no, trm_no, cdif_no,
					sch_coll_date, lsp_no, wh_dest, loc_code, locn_pcs, locn_wt, rtrv_date, rtrv_user_id, strg_date,
					strg_rmk, dam_ind, ppk_ind, bulk_wt, bup_wt, flt_no, TO_DATE(#FLT_DATE#,'DDMONYY'), 'E', #FLT_KEY#, uld_key,
					cr_user_id, sysdate, lm_user_id, sysdate, seq_no, flt_key||to_char(flt_date,'DDMONYY')
	            from   awb_inventory
	            where  uld_key = #ULD_KEY#
	         </insert>
	         
	         <delete id="sqlDeleteAwbInvData" parameterClass="java.lang.String">
	         	delete from awb_inventory inv
	        	where  inv.uld_key = #ULD_KEY#
	        	 and    exists (select null
						       from   awb
						       where  awb_no = inv.awb_no
						       and    awb_date = inv.awb_date
									 )          	    
	        </delete>
	        
	        <update id="sqlUpdateUldInvData" parameterClass="java.util.HashMap">
	        		update uld_inventory 
		            set cfm_status = 'CHECKED OUT',
		            wh_dest = null,
		            loc_code = null,
		            owned_inv = 'N',
		            lm_user_id = #LM_USER_ID#,
		            lm_date = sysdate,
		            ref_tr_no = #ULD_KEY#,
		            ref_doc_line_no = 1,
		            ref_tr_type = 'CH',
		            ref_tr_date = sysdate,
		            ref_tr_event = decode(#MODE#, 'CHECKOUT', 'CH', 'CHECKOUT HHT', 'CHH')
		        where  base_plt = #ULD_KEY#
		     </update>
		     
		     <insert id="sqlInsToAwbInvChkOutFromAwbInv" parameterClass="java.util.HashMap" >
		     	insert into awb_inventory_chkout
					   (awb_no, awb_date, carr_code, catalog, cc_code, srf_no, trm_no, cdif_no,
						sch_coll_date, lsp_no, wh_dest, loc_code, locn_pcs, locn_wt, rtrv_date, rtrv_user_id, strg_date,
						strg_rmk, dam_ind, ppk_ind, bulk_wt, bup_wt, flt_no, flt_date, flt_type, flt_key, uld_key,
						cr_user_id, cr_date, lm_user_id, lm_date, seq_no, ref_rmk)
				select awb_no, awb_date, carr_code, catalog, cc_code, srf_no, trm_no, cdif_no,
					   sch_coll_date, lsp_no, wh_dest, loc_code, locn_pcs, locn_wt, rtrv_date, rtrv_user_id, strg_date,
					   strg_rmk, dam_ind, ppk_ind, bulk_wt, bup_wt, flt_no, TO_DATE(#FLT_DATE#,'DDMONYY'), 'E', #FLT_KEY#, uld_key,
					   cr_user_id, sysdate, lm_user_id, sysdate, seq_no, flt_key||to_char(flt_date,'DDMONYY')
				from   awb_inventory t1
				where  uld_key in (select uld_key
				                   from   uld_inventory
				                   where  base_plt = #ULD_KEY#)
		     </insert>
		    
		     <delete id="sqlDelAwbInvDetailsInPkgExpUld" parameterClass="java.lang.String">
		     	 delete from awb_inventory inv
		         where inv.uld_key in (select uld_key
		                           from   uld_inventory
		                           where  base_plt = #ULD_KEY#)
		          and    exists (select null
						       from   awb
						       where  awb_no = inv.awb_no
						       and    awb_date = inv.awb_date
									 )  		             
		     </delete>
				
			<select id="sqlGetRankingStatus" parameterClass="java.lang.String" resultClass="java.lang.String">	
				select nvl(decode(uld_status, 'CHECKED OUT', 'CONFIRMED', uld_status), 'CONFIRMED')
	            as   status
	            from   (select uld_status, dense_rank() over(partition by uld_key order by seq_no desc) rank
	                    from   uld_mov
	                    where  uld_key = #ULD_KEY#)
	            where  rank = 2	
	       </select>
	       
	       <update id="sqlUpdateUldInvDtlsForEicFig" parameterClass="java.util.HashMap">
	        update uld_inventory
	        set cfm_status = #CFM_STATUS#,
	            wh_dest = #WH_DEST#,
	            loc_code = #lOC_CODE#,
	            owned_inv = 'Y',
	            lm_user_id = #LM_USER_ID#,
	            lm_date = sysdate,
	            ref_tr_no = #ULD_KEY#,
	            ref_doc_line_no = 1,
	            ref_tr_type = 'UC',
	            ref_tr_date = sysdate,
	            ref_tr_event = decode(#MODE#, 'UNCHECKOUT', 'UC', 'UNCHECKOUT HHT', 'UCHH'), ENTRY_TIME = sysdate
	        where  uld_key = #ULD_KEY# 
	       </update>
	       
	       <select id="sqlGetEicFigValAfterUpdate" parameterClass="java.util.HashMap" resultClass="java.lang.String">
	       select eic_flg
	       from uld_inventory
	       where cfm_status = #CFM_STATUS#,
	            wh_dest = #WH_DEST#,
	            loc_code = #lOC_CODE#,
	            owned_inv = 'Y',
	            lm_user_id = #LM_USER_ID#,
	            lm_date = sysdate,
	            ref_tr_no = #ULD_KEY#,
	            ref_doc_line_no = 1,
	            ref_tr_type = 'UC',
	            ref_tr_date = sysdate,
	            ref_tr_event = decode(#MODE#, 'UNCHECKOUT', 'UC', 'UNCHECKOUT HHT', 'UCHH')
	            uld_key = #ULD_KEY#
	        </select>
	        
	        <insert id="sqlInsToAwbInvInFirstCur" parameterClass="java.util.HashMap">
	          insert into awb_inventory
					   (awb_no, awb_date, carr_code, catalog, cc_code, srf_no, trm_no, cdif_no,
						sch_coll_date, lsp_no, wh_dest, loc_code, locn_pcs, locn_wt, rtrv_date, rtrv_user_id, strg_date,
						strg_rmk, dam_ind, ppk_ind, bulk_wt, bup_wt, flt_no, flt_date, flt_type, flt_key, uld_key,
						cr_user_id, cr_date, lm_user_id, lm_date, seq_no, ref_rmk)
				values (#AWB_NO#, TO_DATE(#AWB_DATE#,'DDMONYY'), #CARR_CODE#, #CATALOG#, #CC_CODE#, #SRF_NO#, #TRM_NO#, #CDIF_NO#,
						TO_DATE(#SCH_COLL_DATE#,'DDMONYY'), #LSP_NO#, #WH_DEST#, #LOC_CODE#, #LOCN_PCS#, #LOCN_WT#, TO_DATE(#RTRV_DATE#, 'DDMONYY'), #RTRV_USER_ID#, TO_DATE(#STRG_DATE#,'DDMONYY'),
						#STRG_RMK#, #DAM_IND#, #PPK_IND#, #BULK_WT#, #BUP_WT#, #FLT_NO#, TO_DATE(#FLT_DATE#,'DDMONYY'), #FLT_TYPE#, #FLT_KEY#, #ULD_KEY#,
						#CR_USER_ID#, sysdate, #LM_USER_ID#, sysdate, #SEQ_NO#, #REF_RMK#)
			</insert>
			
			<delete id="sqlDeleteAwbInvChkoutDtls" parameterClass="java.util.HashMap">
				 delete from awb_inventory_chkout inv
		         where  inv.flt_type = 'E'
		         and    inv.flt_key = #flt_key#
		         and    inv.flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
		         and    inv.uld_key = #ULD_KEY#
		         and    exists (select null
						       from   awb
						       where  awb_no = inv.awb_no
						       and    awb_date = inv.awb_date
									 )  	             
		    </delete>
		    
		    <update id="sqlUpdUldInventoryDetails" parameterClass="java.util.HashMap">
		    	 update uld_inventory
		         set cfm_status = #STATUS#,
		            wh_dest = #WH_DEST#,
		            loc_code = #LOC_CODE#,
		            owned_inv = 'Y',
		            lm_user_id = #LM_USER_ID#,
		            lm_date = sysdate,
		            ref_tr_no = #ULD_KEY#,
		            ref_doc_line_no = 1,
		            ref_tr_type = 'UC',
		            ref_tr_date = sysdate,
		            ref_tr_event = decode(#MODE#, 'UNCHECKOUT', 'UC', 'UNCHECKOUT HHT', 'UCHH'),
		            ENTRY_TIME = sysdate
		         where  base_plt = #ULD_KEY#
		   </update>
		   
		   <insert id="sqlInsToAwbInvInSecondCur" parameterClass="java.util.HashMap">	
				    insert into awb_inventory
						   (awb_no, awb_date, carr_code, catalog, cc_code, srf_no, trm_no, cdif_no,
							sch_coll_date, lsp_no, wh_dest, loc_code, locn_pcs, locn_wt, rtrv_date, rtrv_user_id, strg_date,
							strg_rmk, dam_ind, ppk_ind, bulk_wt, bup_wt, flt_no, flt_date, flt_type, flt_key, uld_key,
	    					cr_user_id, cr_date, lm_user_id, lm_date, seq_no, ref_rmk)
					values (#AWB_NO#, TO_DATE(#AWB_DATE#,'DDMONYY'), #CARR_CODE#, #CATALOG#, #CC_CODE#, #SRF_NO#, #TRM_NO#, #CDIF_NO#,
							TO_DATE(#SCH_COLL_DATE#,'DDMONYY'), #LSP_NO#, #WH_DEST#, #LOC_CODE#, #LOCN_PCS#, #LOCN_WT#, TO_DATE(#RTRV_DATE#, 'DDMONYY'), #RTRV_USER_ID#, TO_DATE(#STRG_DATE#,'DDMONYY'),
							#STRG_RMK#, #DAM_IND#, #PPK_IND#, #BULK_WT#, #BUP_WT#, #FLT_NO#, TO_DATE(#FLT_DATE#,'DDMONYY'), #FLT_TYPE#, #FLT_KEY#, #ULD_KEY#,
							#CR_USER_ID#, sysdate, #LM_USER_ID#, sysdate, #SEQ_NO#, #REF_RMK#)
			</insert>
			
			<delete id="sqlDelAwbInvChkoutDetails" parameterClass="java.util.HashMap">
				delete from awb_inventory_chkout inv
		        where  inv.flt_type = 'E'
		        and    inv.flt_key = #FLT_KEY#
		        and    inv.flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
		        and    inv.uld_key in (select uld_key
		                           from   uld_inventory
		                           where  base_plt = #ULD_KEY#)
		        and    exists (select null
						       from   awb
						       where  awb_no = inv.awb_no
						       and    awb_date = inv.awb_date
									 )  
		   </delete>
		   
		   <update id="sqlUpdExpFltUldDetails" parameterClass="java.util.HashMap">
			   	update exp_flt_uld
			    set checkout_yn = decode(#MODE#, 'CHECKOUT', 'Y', 'CHECKOUT HHT', 'Y', 'N')
			    where  flt_key = #FLT_KEY#
			    and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
			    and    uld_key = #ULD_KEY#
		   </update>
		    
		   <update id="sqlUpdateExpFltUldDtls" parameterClass="java.util.HashMap">
		   		update exp_flt_uld
			    set checkout_yn = decode(#MODE#, 'CHECKOUT', 'Y', 'CHECKOUT HHT', 'Y', 'N')
		    	where  flt_key = #FLT_KEY#
		    	and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
		    	and    uld_key in (select uld_key
		                       from   uld_inventory
		                       where  base_plt = #ULD_KEY#)
		     </update>
		    
		     <select id="sqlGetBuildUpYn" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		     	    select buildup_yn
                    from   exp_flt_uld
                    where  flt_key = #FLT_KEY#
                    and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
                    and    uld_key = #ULD_KEY#
					and    pman_yn = 'Y'
			</select>
			
			<select id="sqlGetAwbNOFromExpPmanifestUldAwb" parameterClass="java.util.HashMap" resultClass="cargo.cms.export.bo.AWBBO">	
			
			select distinct pman.awb_no awbNo,awb.catalog catalog
	            from   exp_pmanifest_uld_awb pman LEFT JOIN AWB awb
              ON pman.awb_no=awb.awb_no and pman.awb_date=awb.awb_date
	            where  flt_key = #FLT_KEY#
	            and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
	            and    uld_bt_no = #ULD_KEY#
	           
              UNION
              select distinct pman.awb_no awbNo,awb.catalog catalog
	            from   EXP_PMAN_TARMAC_ULD_AWB pman LEFT JOIN AWB awb ON pman.awb_no=awb.awb_no and pman.awb_date=awb.awb_date
	            where  flt_key = #FLT_KEY#
	            and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
	            and    uld_bt_no = #ULD_KEY# AND NOT EXISTS (select null 
	            from   exp_pmanifest_uld_awb
	            where  flt_key = #FLT_KEY#
	            and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
	            and    uld_bt_no = #ULD_KEY#)
				
	       </select>
	       <select id="GET_AWBNO_FROM_AWB_INVENTORY" parameterClass="java.util.HashMap" resultClass="java.lang.String">	
				select distinct awb_no
	            from   awb_inventory
	            where  ULD_KEY = #ULD_KEY#
	       </select>
	        <select id="GET_PROHIBITED_SHC_FLT_OPR_LEG" parameterClass="java.util.HashMap" resultClass="java.lang.String">	
				select decode(prohibit_shc1, null, '', prohibit_shc1 || decode(prohibit_shc2, null, '', '/'))
							  || decode(prohibit_shc2, null, '', prohibit_shc2 || decode(prohibit_shc3, null, '', '/'))
							  || decode(prohibit_shc3, null, '', prohibit_shc3) as probshc
					from flt_opr_leg 
					where flt_type = 'D' and flt_key=#FLT_KEY# and sch_date = #FLT_DATE# and off_point = #UNLDG_PT#
	       </select>
	       <select id="GET_SHC_OF_AWB" parameterClass="map" resultClass="java.lang.String">	
				select  decode(spl_code1, null, '', spl_code1 || decode(spl_code2, null, '', '/'))
		               		|| decode(spl_code2, null, '', spl_code2 || decode(spl_code3, null, '', '/'))
		               		|| decode(spl_code3, null, '', spl_code3 || decode(spl_code4, null, '', '/'))
		              		|| decode(spl_code4, null, '', spl_code4 || decode(spl_code5, null, '', '/'))
		               		|| decode(spl_code5, null, '', spl_code5 || decode(spl_code6, null, '', '/'))
		              		|| decode(spl_code6, null, '', spl_code6 || decode(spl_code7, null, '', '/'))
		               		|| decode(spl_code7, null, '', spl_code7 || decode(spl_code8, null, '', '/'))
		               		|| decode(spl_code8, null, '', spl_code8 || decode(spl_code9, null, '', '/'))
		               		|| decode(spl_code9, null, '', spl_code9) as shcs 
			    from awb where awb_no=#awb_no# and awb_date=#awb_date# and awb_closed_yn='N'
	       </select>
	       <select id="isShipmentContainsSHCforAB" parameterClass="java.util.HashMap" resultClass="java.lang.String">
			SELECT STRAGG(STRINGDELIM(MAST_SPL_HAND_CODE.CODE,',')) as shc FROM AWB, MAST_SPL_HAND_CODE WHERE 
	         MAST_SPL_HAND_CODE.CODE in( AWB.SPL_CODE1 , AWB.SPL_CODE2 ,AWB.SPL_CODE3 , AWB.SPL_CODE4 ,AWB.SPL_CODE5 , AWB.SPL_CODE6 ,AWB.SPL_CODE7 , AWB.SPL_CODE8 , AWB.SPL_CODE9)
	         AND AWB.AWB_NO = #awbNo# AND AWB.AWB_DATE = to_date(#awbDate#,'DDMONYY') AND MAST_SPL_HAND_CODE.PMAN_PAX = 'N'
		  </select> 
	       
	       <select id="sqlGetDummy" parameterClass="java.lang.String" resultClass="java.lang.String">		
	       		    select 'X'
		            from   awb_inventory
		            where  uld_key = #ULD_KEY#
	 	            and    flt_key is null
		            and    rownum = 1	
		   </select>
	
	<!--	<Procedure Call for function pkg_exp_rpt.get_dls_fin begin-->
	<parameterMap id="valPkgExpRptGetDlsFin" class="java.util.HashMap">
		<parameter property="STATUS" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="OUT" />	
		<parameter property="FLT_KEY" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="IN" />
		<parameter property="FLT_DATE" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="IN" />
	</parameterMap>
	
	<procedure id="sqlPkgExpRptGetDlsFin" parameterMap="valPkgExpRptGetDlsFin">
		{ ? = call pkg_exp_rpt.get_dls_fin(?, ?)}
	</procedure>
	<!--	<Procedure Call for function pkg_exp_rpt.get_dls_fin end-->
	
	<!--	<Procedure Call for function pkg_exp_val.get_declare_bup_compl_flt begin-->
	<parameterMap id="valPkgExpValGetDupCmpl" class="java.util.HashMap">
		<parameter property="STATUS" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="OUT" />	
		<parameter property="FLT_KEY" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="IN" />
		<parameter property="FLT_DATE" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="IN" />
	</parameterMap>
	
	<procedure id="sqlPkgExpValGetDupCmpl" parameterMap="valPkgExpValGetDupCmpl">
		{ ? = call pkg_exp_val.get_declare_bup_compl_flt(?, ?)}
	</procedure>
	<!--	<Procedure Call for function pkg_exp_val.get_declare_bup_compl_flt end-->		
	
	<!--	<Procedure Call for function pkg_exp_val.get_uld_allot_summary_mofs begin-->
	<parameterMap id="valPkgExpValUldAllotSummary" class="java.util.HashMap">
		<parameter property="STATUS" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="OUT" />	
		<parameter property="FLT_KEY" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="IN" />
		<parameter property="FLT_DATE" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="IN" />
	</parameterMap>
	
	<procedure id="sqlPkgExpValUldAllotSummary" parameterMap="valPkgExpValUldAllotSummary">
		{ ? = call pkg_exp_val.get_uld_allot_summary_mofs(?, ?)}
	</procedure>
	<!--	<Procedure Call for function pkg_exp_val.get_uld_allot_summary_mofs end-->		
	
	<!--	<Procedure Call for function pkg_exp_val.get_mofs_handover_status begin-->
	<parameterMap id="valPkgExpvalMofsHandoverStat" class="java.util.HashMap">
		<parameter property="STATUS" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="OUT" />	
		<parameter property="FLT_KEY" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="IN" />
		<parameter property="FLT_DATE" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="IN" />
	</parameterMap>
	
	<procedure id="sqlPkgExpvalMofsHandoverStat" parameterMap="valPkgExpvalMofsHandoverStat">
		{ ? = call pkg_exp_val.get_mofs_handover_status(?, ?)}
	</procedure>
	<!--	<Procedure Call for function pkg_exp_val.get_mofs_handover_status end-->
	
	<!--	<Procedure Call for function pkg_exp_val.val_restricted_cc begin-->
	<parameterMap id="valPkgExpvalValRestCc" class="java.util.HashMap">
		<parameter property="STATUS" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="OUT" />	
		<parameter property="FLT_KEY" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="IN" />
		<parameter property="FLT_DATE" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="IN" />
		<parameter property="AWB_NO" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="IN" />
		<parameter property="PROCESS" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="IN" />
	</parameterMap>
	
	<procedure id="sqlPkgExpvalValRestCc" parameterMap="valPkgExpvalValRestCc">
		{ ? = call pkg_exp_val.val_restricted_cc(?, ?, ?, ?)}
	</procedure>
	<!--	<Procedure Call for function pkg_exp_val.val_restricted_cc end-->
<!--Mahesh BN Updates for package Pkg_exp_uld from 05.05.2011 To 10.05.2011 End	--> 
<!-- Queries for TRG_FLT_OPR_EVENTS_UPD Begins-->
	<select id="sqlFltOprGetImpFltFst" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT TO_CHAR(FST_FLT_CLS_DATE, 'DDMONYY') FST_FLT_CLS_DATE, TO_CHAR(FST_DOC_COMPL_DATE, 'DDMONYY') FST_DOC_COMPL_DATE, TO_CHAR(FST_RAMP_COMPL_DATE, 'DDMONYY') FST_RAMP_COMPL_DATE, TO_CHAR(FST_WHSE_COMPL_DATE, 'DDMONYY') FST_RAMP_COMPL_DATE, 1 V_COUNT    
		    FROM IMP_FLT_FST_EVENTS
		    WHERE FLT_KEY = #FLT_KEY# AND SCH_DATE = TO_DATE(#SCH_DATE#,'DDMONYY') AND FLT_TYPE = 'A'
    </select>
    <insert id="sqlFltOprInsImpFltFstEvents" parameterClass="java.util.HashMap">
		INSERT INTO IMP_FLT_FST_EVENTS (FLT_KEY, FLT_TYPE, SCH_DATE) VALUES (#FLT_KEY#, 'A', TO_DATE(#SCH_DATE#,'DDMONYY'))    
	</insert>
	<update id="sqlFltOprFstClsDate" parameterClass="java.util.HashMap">
		UPDATE IMP_FLT_FST_EVENTS SET FST_FLT_CLS_DATE = TO_DATE(#FLT_CLS_DATE#,'DDMONYY')
		     WHERE FLT_KEY = #FLT_KEY# AND SCH_DATE = TO_DATE(#SCH_DATE#,'DDMONYY') AND FLT_TYPE = 'A'
    </update>
    <update id="sqlFltOprDocDate" parameterClass="java.util.HashMap"> 
		UPDATE IMP_FLT_FST_EVENTS SET FST_DOC_COMPL_DATE = TO_DATE(#DOC_COMPL_DATE#,'DDMONYY')
		     WHERE FLT_KEY = #FLT_KEY# AND SCH_DATE = TO_DATE(#SCH_DATE#,'DDMONYY') AND FLT_TYPE = 'A'     
	</update>
	<update id="sqlFltOprUpdRampDate" parameterClass="java.util.HashMap">
		UPDATE IMP_FLT_FST_EVENTS SET FST_RAMP_COMPL_DATE = TO_DATE(#RAMP_COMPL_DATE#,'DDMONYY')
		     WHERE FLT_KEY = #FLT_KEY# AND SCH_DATE = TO_DATE(#SCH_DATE#,'DDMONYY') AND FLT_TYPE = 'A'     
	</update>
	<update id="sqlFltOprUpdComplDate" parameterClass="java.util.HashMap">     
		UPDATE IMP_FLT_FST_EVENTS SET FST_WHSE_COMPL_DATE = TO_DATE(#WHSE_COMPL_DATE#,'DDMONYY')
		     WHERE FLT_KEY = #FLT_KEY# AND SCH_DATE = TO_DATE(#SCH_DATE#,'DDMONYY') AND FLT_TYPE = 'A'       
     </update>
     <insert id="sqlFltOprInsAwbEvents" parameterClass="java.util.HashMap">
		INSERT INTO AWB_EVENTS
		        		(AWB_NO,AWB_DATE,EVENT_ID,
		        		EVENT_DESC,
		        		FLT_KEY,FLT_DATE,FLT_TYPE,TR_NO,
		        		ULD_KEY,PCS,WT,
		        		CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE
		        		)
		        VALUES
		        		(#AWB_NO#, TO_DATE(#AWB_DATE#,'DDMONYY'), #EVENT_ID#,
		        		(SELECT EVENT_DESC FROM MAST_AWB_EVENTS WHERE EVENT_ID = #EVENT_ID#),
		        		#FLT_KEY#, TO_DATE(#SCH_DATE#,'DDMONYY'), 'I', #AWB_NO#,
		        		NULL, NVL(#MANIFEST_PCS#,0), NVL(#MANIFEST_WT#,0),
		        		#LM_USER_ID#, SYSDATE,#LM_USER_ID#, SYSDATE
		        		)     
	</insert>
	<select id="sqlFltOprGetExpFltFst" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT TO_CHAR(FST_BUILDUP_CDATE, 'DDMONYY') FST_BUILDUP_CDATE, TO_CHAR(FST_FLT_CLS_DATE, 'DDMONYY') FST_FLT_CLS_DATE, TO_CHAR(FST_CTM_OUT_DATE, 'DDMONYY') FST_CTM_OUT_DATE, TO_CHAR(FST_DLS_FINAL_DATE, 'DDMONYY') FST_DLS_FINAL_DATE, 1 V_COUNT    
		    FROM EXP_FLT_FST_EVENTS
		    WHERE FLT_KEY = #FLT_KEY# AND SCH_DATE = TO_DATE(#SCH_DATE#,'DDMONYY') AND FLT_TYPE = 'E'
	</select>
	<insert id="sqlFltOprInsExpFltFstEvents" parameterClass="java.util.HashMap">
		INSERT INTO EXP_FLT_FST_EVENTS (FLT_KEY, FLT_TYPE, SCH_DATE) VALUES (#FLT_KEY#, 'E', TO_DATE(#SCH_DATE#,'DDMONYY'))    
	</insert>
	<update id="sqlFltOprBldUpCDate" parameterClass="java.util.HashMap">
		UPDATE EXP_FLT_FST_EVENTS SET FST_BUILDUP_CDATE = TO_DATE(#BUILDUP_CDATE#,'DDMONYY')
		     WHERE FLT_KEY = #FLT_KEY# AND SCH_DATE = TO_DATE(#SCH_DATE#,'DDMONYY') AND FLT_TYPE = 'E'
	</update>
	<update id="sqlFltoprClsDate" parameterClass="java.util.HashMap">
		UPDATE EXP_FLT_FST_EVENTS SET FST_FLT_CLS_DATE = TO_DATE(#FLT_CLS_DATE#,'DDMONYY')
		     WHERE FLT_KEY = #FLT_KEY# AND SCH_DATE = TO_DATE(#SCH_DATE#,'DDMONYY') AND FLT_TYPE = 'E'     
	</update>
	<update id="sqlFltOprCtmODate" parameterClass="java.util.HashMap">
		UPDATE EXP_FLT_FST_EVENTS SET FST_CTM_OUT_DATE = TO_DATE(#CTM_OUT_DATE#,'DDMONYY')
		     WHERE FLT_KEY = #FLT_KEY# AND SCH_DATE = TO_DATE(#SCH_DATE#,'DDMONYY') AND FLT_TYPE = 'E'
	</update>
	<update id="sqlFltOprDLSFDate" parameterClass="java.util.HashMap">		     	
		UPDATE EXP_FLT_FST_EVENTS SET FST_DLS_FINAL_DATE = TO_DATE(#DLS_FINAL_DATE#,'DDMONYY')
		     WHERE FLT_KEY = #FLT_KEY# AND SCH_DATE = TO_DATE(#SCH_DATE#,'DDMONYY') AND FLT_TYPE = 'E'
	</update>		   
 	<select id="sqlFltoprImpCarShp" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT AWB_NO, TO_CHAR(AWB_DATE,'DDMONYY') AWB_DATE, NVL(MANIFEST_PCS,0) MANIFEST_PCS, NVL(MANIFEST_WT,0) MANIFEST_WT
              FROM IMP_CAR_SHP
              WHERE CAR_CREATED = 'Y' AND FLT_KEY = #FLT_KEY# AND FLT_DATE = TO_DATE(#SCH_DATE#,'DDMONYY')     
	</select>  
    <!-- Queries for TRG_FLT_OPR_EVENTS_UPD ends-->  
     
	<!-- Queries for PKG_PMAN.TARMAC_AWB Begins-->
	<select id="sqlTarmacAwb001" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select upper(t1.uld_key) ULD_KEY, t2.pcs PCS, t3.wt WT, upper(t4.unldg_pt) UNLDG_PT, t5.group_no GROUP_NO, t6.gross_wt GROSS_WT
		from  (select column_value uld_key, rownum r1
		            from   table(pkg_common.inlist(#ULD_KEY_LIST#))
		                where  column_value is not null) t1,
		      (select column_value pcs, rownum r2
		            from   table(pkg_common.inlist(#ULD_PCS_LIST#))
		                where  column_value is not null) t2,
		      (select column_value wt, rownum r3
		            from   table(pkg_common.inlist(#ULD_WT_LIST#))
		                where  column_value is not null) t3,
		      (select column_value unldg_pt, rownum r4
		            from   table(pkg_common.inlist(#ULD_UNLDG_PT_LIST#))
		                where  column_value is not null) t4,
		      (select column_value group_no, rownum r5
		            from   table(pkg_common.inlist(#ULD_GROUP_NO_LIST#))
		                where  column_value is not null) t5,
          (select column_value gross_wt, rownum r6
		            from   table(pkg_common.inlist(#ULD_GROSS_WT_LIST#))
		                where  column_value is not null) t6
		where  t1.r1 = t2.r2
		and    t2.r2 = t3.r3
		and    t3.r3 = t4.r4
		and    t4.r4 = t5.r5
    	and    t5.r5 = t6.r6
	</select>
	<!-- Modified By Mithun KK -->
	<select id="sqlTarmacAwb002" parameterClass="java.util.HashMap" resultClass="java.lang.String">
	select 'X' from   exp_pman_tarmac_awb
		where  flt_key = #FLT_KEY#
		and    flt_date = TO_DATE(#FLT_DATE#, 'DDMONYY')
		and    unldg_pt = #BULK_UNLDG_PT#
		and    awb_no = #AWB_NO#
		and    awb_date = TO_DATE(#AWB_DATE#, 'DDMONYY')
		and 	bulk_pcs >0 
		and bulk_wt > 0
	</select>
	<select id="sqlTarmacAwb003" parameterClass="java.lang.String" resultClass="java.lang.String">
	select nvl(sum(column_value), 0)
		from   table(pkg_common.inlist(#ULD_PCS_LIST#))
	</select>
	<select id="sqlTarmacAwb004" parameterClass="java.lang.String" resultClass="java.lang.String">
	select nvl(sum(column_value), 0)
		from   table(pkg_common.inlist(#ULD_WT_LIST#))
	</select>
	<select id="sqlTarmacAwb005" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select NVL(pcs, 0) PCS, NVL(wt, 0) WT, NVL(pman_pcs, 0) PMAN_PCS, NVL(pman_wt, 0) PMAN_WT, NVL(non_pman_pcs, 0) NON_PMAN_PCS, 
	NVL(non_pman_wt, 0) NON_PMAN_WT, NVL(PMAN_PPK_PCS,0) PPK_PCS, NVL(PMAN_PPK_WT,0) PPK_WT, 
	NVL(PMAN_BULK_PCS,0) BULK_PCS,NVL(PMAN_BULK_PCS,0) BULK_WT from awb
		where  awb_no = #AWB_NO#
		and    awb_date = TO_DATE(#AWB_DATE#, 'DDMONYY')		
	</select>   
	<select id="sqlTarmacAwb006" parameterClass="java.lang.String" resultClass="java.lang.String">
	select uld_key from (select column_value uld_key 
							from table(pkg_common.inlist(#ULD_KEY_LIST#))
							     group by column_value having count(1) > 1)
		where rownum = 1
	</select>
	<select id="sqlTarmacAwb007" parameterClass="java.util.HashMap" resultClass="java.lang.String">
	select 'X' from   exp_pman_tarmac_uld_awb
		where  flt_key = #FLT_KEY#
		and    flt_date = TO_DATE(#FLT_DATE#, 'DDMONYY')
		and    uld_bt_no = #ULD_KEY#
		and    awb_no = #AWB_NO#
		and    awb_date = TO_DATE(#AWB_DATE#, 'DDMONYY')
	</select>
	<select id="sqlTarmacAwb008" parameterClass="java.lang.String" resultClass="java.lang.String">
	select 'X' from   uld_inventory
		where  uld_key = #ULD_KEY#
		and    owned_inv = 'Y' and loc_code is not null
	</select>
	<update id="sqlTarmacAwb009" parameterClass="java.util.HashMap">
	update exp_pman_tarmac_awb 
		set group_no = #BULK_GROUP_NO#,
		    bulk_pcs = NVL(#BULK_PCS#, bulk_pcs),
		    bulk_wt = NVL(#BULK_WT#, bulk_wt),
		    ASSIGNED_BULK_PCS = NVL(#ASSIGNED_BULK_PCS#, ASSIGNED_BULK_PCS),
		    ASSIGNED_BULK_WT = NVL(#ASSIGNED_BULK_WT#, ASSIGNED_BULK_WT)
		where  flt_key = #FLT_KEY#
		and    flt_date = TO_DATE(#FLT_DATE#, 'DDMONYY')
		and    unldg_pt = #BULK_UNLDG_PT#
		and    awb_no = #AWB_NO#
		and    awb_date = TO_DATE(#AWB_DATE#, 'DDMONYY')
	</update>
	<insert id="sqlTarmacAwb010" parameterClass="java.util.HashMap">
	insert into exp_pman_tarmac_awb(flt_key, flt_date, unldg_pt, awb_no, awb_date, 
									group_no, man_rmk, bulk_pcs, bulk_wt,
									cr_user_id, cr_date, lm_user_id, lm_date,tr_type,ASSIGNED_BULK_PCS,ASSIGNED_BULK_WT)
		values (#FLT_KEY#, TO_DATE(#FLT_DATE#, 'DDMONYY'), #BULK_UNLDG_PT#, #AWB_NO#, TO_DATE(#AWB_DATE#, 'DDMONYY'),
				#BULK_GROUP_NO#, #MAN_RMK#, NVL(#BULK_PCS#,0), NVL(#BULK_WT#, 0),
				#USER_ID#, sysdate, #USER_ID#, sysdate,'TMAWB',NVL(#ASSIGNED_BULK_PCS#,0),NVL(#ASSIGNED_BULK_WT#,0))
	</insert>
	<insert id="sqlTarmacAwb011" parameterClass="java.util.HashMap">
	insert into exp_pman_tarmac_uld(flt_key, flt_date, uld_bt_no, unldg_pt,
									group_no, man_rmk, cr_user_id,
									cr_date, lm_user_id, lm_date, gross_wt, tare_wt,TR_TYPE)
		values (#FLT_KEY#, TO_DATE(#FLT_DATE#, 'DDMONYY'), #ULD_KEY#, #UNLDG_PT#,
				#GROUP_NO#, #MAN_RMK#, #USER_ID#,
				sysdate, #USER_ID#, sysdate, #GROSS_WT#, #TARE_WT#,#TR_TYPE#)
	</insert>
	<insert id="sqlTarmacAwb012" parameterClass="java.util.HashMap">              
	insert into exp_pman_tarmac_uld_awb(flt_key, flt_date, unldg_pt, uld_bt_no, awb_no, 
										awb_date, group_no, assigned_pcs, assigned_wt, 
										cr_user_id, cr_date, lm_user_id, lm_date)
		values (#FLT_KEY#, TO_DATE(#FLT_DATE#, 'DDMONYY'), #UNLDG_PT#, #ULD_KEY#, #AWB_NO#,
				TO_DATE(#AWB_DATE#, 'DDMONYY'), #GROUP_NO#, NVL(#PCS#, 0), NVL(#WT#, 0), 
				#USER_ID#, sysdate, #USER_ID#, sysdate)
	</insert>
	<select id="sqlTarmacAwb013" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select FLT_KEY,TO_CHAR(FLT_DATE,'DDMONYY') FLT_DATE, UNLDG_PT, AWB_NO, TO_CHAR(AWB_DATE,'DDMONYY') AWB_DATE,
      		GROUP_NO, BLDUP_INSTR, MAN_RMK, BULK_PCS,BULK_WT,PPK_PCS,PPK_WT,ASSIGNED_BULK_PCS,ASSIGNED_BULK_WT
      	from exp_pman_tarmac_awb
		where  flt_key = #FLT_KEY#
		and    flt_date = TO_DATE(#FLT_DATE#, 'DDMONYY')
		and    unldg_pt = #BULK_UNLDG_PT#
		and    awb_no = #AWB_NO#
		and    awb_date = TO_DATE(#AWB_DATE#, 'DDMONYY')
	</select>
	<!-- Queries for PKG_PMAN.TARMAC_AWB End-->
	<!-- Queries for PKG_PMAN.VAL_TARMAC_AWB2 Begin-->
	<select id="sqlValTarmacAwb2001" parameterClass="java.lang.String" resultClass="java.util.HashMap">
	select t1.awb_type AWB_TYPE, t2.accept_mode ACCEPT_MODE, TO_CHAR(t1.awb_date, 'DDMONYY') AWB_DATE, 
      decode(
              NVL((select miss_yn from awb_lock where awb_no=t1.awb_no),'N'),
              'N',
              decode(
                    t1.locked_yn, 
                    'N',
                    decode(
                          t1.rcl_pcs, 
                          0, 
                          decode(
                                NVL((select restrict_preman from mast_constraint_code where code=t1.cc_code),'N'),
                                'N',
                                'TRUE',
                                'AWB '|| t1.awb_no ||' with contraint code ' || t1.cc_code || ' is not allowed for Premanifest'), 
                          'RCL raised for AWB:'|| t1.awb_no),
                    'AWB '|| t1.awb_no ||' is locked'),
              'AWB '|| t1.awb_no ||' is blacklisted') STATUS
    	from   awb t1
    	join exp_car t2
    	on  t1.AWB_NO = t2.AWB_NO AND
                  TO_CHAR(t1.AWB_DATE,'DDMONYY') = TO_CHAR(t2.AWB_DATE,'DDMONYY')
    	where  t1.awb_no = #AWB_NO#    	 
      and    t1.awb_closed_yn = 'N' and rownum = 1
    </select>
    <select id="sqlValTarmacAwb2002" parameterClass="java.util.HashMap" resultClass="java.lang.String">
	select carr_code from   exp_car
    	where  awb_no = #AWB_NO#
    	and    awb_date = TO_DATE(#AWB_DATE#, 'DDMONYY')  AND NVL(catalog,'XX') = 'TG' 	
	</select>
    <!-- Queries for PKG_PMAN.VAL_TARMAC_AWB2 End-->
    
    <!-- Queries for PKG_PMAN.VAL_TARMAC_AWB1 Begin-->
    <select id="sqlValTarmacAwb1001" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
    select carr_code, NVL(pcs, 0) PCS, NVL(wt, 0) WT, csgne_place CNSGN_CITY from exp_car
	    where  awb_no = #AWB_NO#
	    and    awb_date = TO_DATE(#AWB_DATE#, 'DDMONYY')  AND NVL(catalog,'XX') = 'TG'
    </select>
    <!-- Queries for PKG_PMAN.VAL_TARMAC_AWB1 eND-->
    
    <!-- Queries for PKG_PMAN.VAL_CREATE_TARMAC_AWB Begin-->
    <select id="sqlValCreTarmacAwb001" parameterClass="java.util.HashMap" resultClass="java.lang.String">
    select 'X' from   flt_opr_events
	    where  flt_key = #FLT_KEY#
	    and    sch_date = TO_DATE(#FLT_DATE#, 'DDMONYY')
	    and    flt_type = 'D'
	    and    final_manf_ind ='Y'
    </select>
    
    <select id="sqlValCreTarmacAwb002" parameterClass="java.util.HashMap" resultClass="java.lang.String">
    	select 'X' from exp_pman_tarmac_awb where flt_key=#FLT_KEY# 
      and flt_date=to_date(#FLT_DATE#,'DDMONYY') and awb_no=#AWB_NO#
      and awb_date = (select awb_date from awb where awb_no=#AWB_NO#)
      and rownum=1
    </select>
    
    <select  id="sqlValCreTarmacUldExists" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		select 'X'
		    from   exp_pman_tarmac_uld
		    where  flt_key = #FLT_KEY#
		    and    flt_date = TO_DATE(#FLT_DATE#, 'DDMONYY')
		    and 	uld_bt_no=#ULD_KEY#
		    and rownum=1
	</select>
    
    <!-- Queries for PKG_PMAN.VAL_CREATE_TARMAC_AWB End-->
    <!-- Queries for PKG_PMAN.GET_AWB_ULD Begin-->
    <select id="sqlGetAwbUld001" parameterClass="java.util.HashMap" resultClass="java.lang.String">
    select count(1) from   EXP_PMANIFEST_ULD_AWB
		where  flt_key = #FLT_KEY#
		and    flt_date = TO_DATE(#FLT_DATE#, 'DDMONYY')
		and    unldg_pt = #UNLDG_PT#
		and    awb_no = #AWB_NO#
		and    awb_date = TO_DATE(#AWB_DATE#, 'DDMONYY')
	</select>
	<!-- Queries for PKG_PMAN.GET_AWB_ULD End-->	
	<!--  Auto Build Up Starts Here -->
	<select id="sqlbuildupuldheaderdetails" parameterClass="java.util.HashMap"  resultClass="cargo.cms.export.buildup.bo.AutoBuildUpULDBO">
		SELECT CARR_CODE as fltPfx,FLT_NO as fltSfx, 
		SUBSTR(TRIM(TO_CHAR(NVL(EST_TIME,0),'0000')),0,2)|| ':'||  SUBSTR(TRIM(TO_CHAR(NVL(EST_TIME,0),'0000')),3,4)  as etd ,
		A.FLT_KEY as fltKey,TO_CHAR(A.SCH_DATE,'DDMONYY') as fltDate,
			to_char(EST_DATE,'DDMONYYYY') as fltEstDate ,
		 	pkg_exp_val.get_uld_assigned_wt(#FLTKEY#, #FLTDATE#, #ULDNO#) as totalAssignWt
		 	FROM FLT_OPR A  
				WHERE UPPER(A.FLT_KEY)=UPPER(#FLTKEY#) 		
					AND A.SCH_DATE = TO_DATE(#FLTDATE#, 'DDMONYY')
					AND A.FLT_TYPE = 'D'	
	</select>
	
	<select id="sqlautobuildupulddetails" parameterClass="java.util.HashMap"  resultClass="cargo.cms.export.buildup.bo.AutoBuildUpULDBO">
		select tare_weight as maxTareWt, 
      		(select MAX_WEIGHT from ULD_GROUP_CARR where  carr_code = #FLTPFX# and  uld_type = #ULDTYPE#)  as maxWt,
			nvl(decode(empty_flg, 'Y', tare_weight, gross_weight),0.0) as grossWt,
			(select count(*)  from uld_inventory where base_plt = #ULDNO# 
			and exists (select uld_key from uld_inventory b where base_pal_flg = 'Y' and uld_key = #ULDNO#)) as isEIC,
			ppk_ind  ppkInd,
			mix_ppk_ind as mixPpkInd
		from   uld_inventory
		where  uld_key = #ULDNO#
	</select>	
	
<select id="sqlMtnPmanfAndAutobuildup" parameterClass="java.util.HashMap"  resultClass="cargo.cms.export.buildup.bo.ManifestAWBBO">
	select uldKey,ppkType,grossWt,awbNo,awbNoDisplay ,assignedPcs, assignedWt,awbDate from (
	select  b.uld_key uldKey, b.ppk_type ppkType, b.gross_wt grossWt, a.awb_no awbNo,SUBSTR(a.AWB_NO,1,3)||'-'||SUBSTR(a.AWB_NO,4) as awbNoDisplay ,
	a.rcl_pcs assignedPcs, a.rcl_wt assignedWt,TO_CHAR(a.AWB_DATE,'DDMONYY') AS awbDate
	from exp_rcl_hd a,exp_rcl_dtl b
	left join exp_pmanifest_uld c on  c.uld_bt_no=b.uld_key and c.flt_key= #FLTKEY# and c.flt_date=to_date(#FLTDATE#,'DDMONYY')  
	where a.rcl_no= b.rcl_no and b.uld_key=#ULD_KEY# and a.PPK_TYPE='P' 
	<isNotEmpty property="AUTO_BU_FROM_RCL">
		and a.rcl_no = #RCL_NO#
	</isNotEmpty>
	union
	select   c.uld_key uldKey, c.ppk_type ppkType, b.gross_wt grossWt,a.awb_no awbNo,SUBSTR(a.AWB_NO,1,3)||'-'||SUBSTR(a.AWB_NO,4) as awbNoDisplay ,
	a.pcs assignedPcs, a.weight assignedWt,TO_CHAR(a.AWB_DATE,'DDMONYY') AS awbDate		
	from exp_rcl_brkdn a, exp_rcl_dtl b, exp_rcl_hd c 
	left join exp_pmanifest_uld d on  d.uld_bt_no=c.uld_key and d.flt_key= #FLTKEY# and d.flt_date=to_date(#FLTDATE#,'DDMONYY') 
	where a.rcl_no in (
	select rcl_no  from exp_rcl_brkdn where c.uld_key=#ULD_KEY#  ) and a.rcl_no=b.rcl_no and a.rcl_no=b.rcl_no and b.PPK_TYPE='M' and a.rcl_no=c.rcl_no
	<isNotEmpty property="AUTO_BU_FROM_RCL">
		and a.rcl_no = #RCL_NO#
	</isNotEmpty>
	)
</select>

<select id="sqluldpremanfbyULDAutobuildup" parameterClass="java.util.HashMap"  resultClass="cargo.cms.export.buildup.bo.ManifestAWBBO">
		SELECT ROWNUM,t1.RCL_NO, t1.ULD_KEY, CONCAT(CONCAT(SUBSTR(t1.AWB_NO,0,3),'-'),SUBSTR(t1.AWB_NO,4)) as awbNoDisplay , t1.AWB_NO as awbNo, 
                to_char(t1.AWB_DATE,'DDMONYY') as awbDate, 
	        t1.DEST as dest,	  
	        t1.PCS assignedPcs, t1.WEIGHT assignedWt
		FROM  EXP_RCL_BRKDN t1,  EXP_RCL_DTL t2
			WHERE  t1.RCL_NO = t2.RCL_NO and
                        t1.RCL_NO = #RCL_NO# and t1.ULD_KEY = #ULD_KEY#
</select>

<select id="sqluldpremanfbyULDAutobuildupForPpk" parameterClass="java.util.HashMap"  resultClass="cargo.cms.export.buildup.bo.ManifestAWBBO">
		SELECT 
			ROWNUM,t1.RCL_NO, t1.ULD_KEY, CONCAT(CONCAT(SUBSTR(t1.AWB_NO,0,3),'-'),SUBSTR(t1.AWB_NO,4)) as awbNoDisplay , t1.AWB_NO as awbNo,                  
			to_char(t1.AWB_DATE,'DDMONYY') as awbDate, t1.AWB_DEST as dest, t2.PCS assignedPcs, t2.NET_WT assignedWt 
		FROM 
			EXP_RCL_HD t1, EXP_RCL_DTL t2 
		WHERE 
			t1.RCL_NO=t2.RCL_NO and t1.RCL_NO=#RCL_NO# and t2.ULD_KEY=#ULD_KEY#
</select>

<select id="sqluldpremanfAutoBuildup" parameterClass="java.util.HashMap"  resultClass="cargo.cms.export.buildup.bo.ManifestAWBBO">
		SELECT ROWNUM, CONCAT(CONCAT(SUBSTR(T1.AWB_NO,0,3),'-'),SUBSTR(T1.AWB_NO,4)) as awbNoDisplay ,T1.AWB_NO as awbNo, to_char(T1.AWB_DATE,'DDMONYY') as awbDate, 
	         T2.CATALOG as catalog, T2.DEST as dest,
			  pkg_exp_val.get_exp_awb_cc_code(t1.flt_key, t1.flt_date, t1.awb_no) as cccode, 
	         UNLDG_PT as unLdgPt, GROUP_NO as groupno, BULK_PCS as preManfBulkPc, BULK_WT as preManfBulkWt, 
			 (BULK_PCS-ASSIGNED_BULK_PCS) as assignedPcs, (BULK_WT-ASSIGNED_BULK_WT) as assignedPcs, 
    	     (BULK_PCS-ASSIGNED_BULK_PCS) as unassignedPcs, (BULK_WT-ASSIGNED_BULK_WT) as unassignedWt, 	         
    	     MAN_RMK as manfRmk, BLDUP_INSTR as buldpInstr,
    	     FLT_KEY as fltNo,TO_CHAR(FLT_DATE,'DDMONYY')  as fltDate,UNLDG_PT as unLdgPt
		FROM   EXP_PMANIFEST_AWB T1, AWB T2 
			WHERE  T1.AWB_NO = T2.AWB_NO
				AND    T1.AWB_DATE = T2.AWB_DATE				   
				AND    FLT_KEY = #FLTKEY#
				AND    FLT_DATE = #FLTDATE#
				AND    UNLDG_PT = #UNLDGPT#
				AND    BULK_PCS-ASSIGNED_BULK_PCS > 0
				AND    NOT EXISTS
					 (SELECT NULL
                   		FROM   EXP_PMANIFEST_ULD_AWB T3
		                   WHERE  FLT_KEY = #FLTKEY#
        		           AND    FLT_DATE = #FLTDATE#
                		   AND    T3.ULD_BT_NO = #ULDNO#
		                   AND    UNLDG_PT = #UNLDGPT#
        		           AND    T3.AWB_NO = T1.AWB_NO
                		   AND    T3.AWB_DATE = T1.AWB_DATE
		              )
	</select>

	<select id="sqluldpremanfbuildup" parameterClass="java.util.HashMap"  resultClass="cargo.cms.export.buildup.bo.ManifestAWBBO">
		SELECT ROWNUM, CONCAT(CONCAT(SUBSTR(T1.AWB_NO,0,3),'-'),SUBSTR(T1.AWB_NO,4)) as awbNoDisplay ,T1.AWB_NO as awbNo, to_char(T1.AWB_DATE,'DDMONYY') as awbDate, 
	         T2.CATALOG as catalog, T2.DEST as dest,
			  pkg_exp_val.get_exp_awb_cc_code(t1.flt_key, t1.flt_date, t1.awb_no) as cccode, 
	         UNLDG_PT as unLdgPt, GROUP_NO as groupno, BULK_PCS as preManfBulkPc, BULK_WT as preManfBulkWt, 
    	     (BULK_PCS-ASSIGNED_BULK_PCS) as unassignedPcs, (BULK_WT-ASSIGNED_BULK_WT) as unassignedWt, 	         
    	     MAN_RMK as manfRmk, BLDUP_INSTR as buldpInstr,
    	     FLT_KEY as fltNo,TO_CHAR(FLT_DATE,'DDMONYY')  as fltDate,UNLDG_PT as unLdgPt
		FROM   EXP_PMANIFEST_AWB T1, AWB T2 
			WHERE  T1.AWB_NO = T2.AWB_NO
				AND    T1.AWB_DATE = T2.AWB_DATE				   
				AND    FLT_KEY = #FLTKEY#
				AND    FLT_DATE = #FLTDATE#
				AND    UNLDG_PT = #UNLDGPT#
				AND    BULK_PCS-ASSIGNED_BULK_PCS > 0
				AND    NOT EXISTS
					 (SELECT NULL
                   		FROM   EXP_PMANIFEST_ULD_AWB T3
		                   WHERE  FLT_KEY = #FLTKEY#
        		           AND    FLT_DATE = #FLTDATE#
                		   AND    T3.ULD_BT_NO = #ULDNO#
		                   AND    UNLDG_PT = #UNLDGPT#
        		           AND    T3.AWB_NO = T1.AWB_NO
                		   AND    T3.AWB_DATE = T1.AWB_DATE
		              )
	</select>	
	

<!--  Auto Build Up Starts Here -->
 <select id="buildup_amenduld_searchbyuld_header"
    	parameterClass="map"
    	resultClass="cargo.cms.export.buildup.bo.AutoBuildUpULDBO">

		select a.flt_key as fltKey,
			   to_char(a.flt_date, 'DDMONYY') as fltDate,
			   a.uld_bt_no as uldKey,
			   decode(b.est_time,null, '', (substr(trim(to_char(nvl(b.est_time, 0), '0000')), 0, 2) || ':' || substr(trim(to_char(nvl(b.est_time, 0), '0000')), 3, 4))) as etd,
			   a.contr_code as contrcode,
			   a.contr_code as newContrcode, 
			   a.unldg_pt as unldg_pt,			
			   a.bldup_complete as completedFlag, 
			   a.tare_wt as tareWt, 
			   a.gross_wt as grossWt, 
			   a.eic_yn as eicFlag,
			   pkg_exp_val.get_uld_assigned_wt(a.flt_key, a.flt_date, a.uld_bt_no) as totalAssignWt
		from   exp_pmanifest_uld a, flt_opr b
		where  a.flt_key = #fltKey#
		and    a.flt_date = to_date(#fltDate#, 'DDMONYY')
		and    a.uld_bt_no = #uldNo#
		and    b.flt_key = a.flt_key
		and    b.sch_date = a.flt_date
		and    b.flt_type = 'D'
		
    </select>

    <select id="sqlBuildUpAwbStorageQueryId" parameterClass="cargo.cms.export.buildup.bo.ManifestAWBBO"  resultClass="cargo.cms.export.buildup.bo.AutoBuildUpStorageBO">
		SELECT AWB_NO as awbNo , CONCAT(CONCAT(SUBSTR(AWB_NO,0,3),'-'),SUBSTR(AWB_NO,4)) as awbNoDisplay,
				to_char(AWB_DATE,'DDMONYY') as awbDate,LOC_CODE as whDest,SEQ_NO as seqNo,
				LSP_NO as lspno,LOCN_PCS as strgPcs,LOCN_WT as strgWt,CARR_CODE as carrCode
		 FROM AWB_INVENTORY 
 			WHERE AWB_NO = #awbNo#
 			AND to_char(AWB_DATE,'DDMONYY')=to_date(#awbDate#,'DDMONYY')
 			AND FLT_KEY IS NULL
	</select>
    
    <update id="sqluldAutoBuildUpHeaderupdate" parameterClass="cargo.cms.export.buildup.bo.AutoBuildUpULDBO"  >
		UPDATE EXP_PMANIFEST_ULD
			SET CONTR_CODE = #contrcode#,
				TARE_WT = #tareWt#,
				GROSS_WT = #grossWt#,
				eic_yn = NVL(#eicFlag#, eic_yn),
				EMPTY_YN = NVL(#emptyFlag#, EMPTY_YN),
				bldup_complete = nvl(#completedFlag#,bldup_complete),
				BLDUP_COMPLETE_DATE = sysdate,
				BLDUP_COMPLETE_USER_ID = #lastModUserId#,
				BLDUP_START = nvl(#completedFlag#,BLDUP_START),
				BLDUP_START_USER_ID = #lastModUserId#,
				BLDUP_START_DATE = sysdate,
				LM_USER_ID = #lastModUserId#,
				LM_DATE= sysdate,
				TR_TYPE_EVT = #trtypeEvt#
			WHERE
				ULD_BT_NO= #uldKey#
				AND FLT_KEY=#fltKey#
				AND	FLT_DATE=#fltDate#
	</update>
	
	<insert id="sqluldAutoBuildUpHeaderinsert" parameterClass="cargo.cms.export.buildup.bo.AutoBuildUpULDBO" >	
		INSERT INTO EXP_PMANIFEST_ULD (
			   FLT_KEY, FLT_DATE, UNLDG_PT, 
			   ULD_BT_NO,PPK_TYPE,CONTR_CODE,
			   TARE_WT,GROSS_WT,CR_USER_ID, 
			   CR_DATE, LM_USER_ID, LM_DATE,
			   BLDUP_COMPLETE,READY_WH,GROUP_NO,EMPTY_YN, 
			   EIC_YN, flt_type,BB_IND,FLT_USE,BLDUP_COMPLETE_USER_ID,BLDUP_COMPLETE_DATE,MAN_RMK,
			   BLDUP_START,BLDUP_START_USER_ID,BLDUP_START_DATE,TR_TYPE_EVT,TRANSIT_FLG,HDLG_MODE)
		VALUES ( #fltKey#, #fltDate#,#unldg_pt# ,
			    #uldKey#,nvl(#ppkType#,'P'),#contrcode#,#tareWt#,
			    #grossWt#,#crUserId#,sysdate ,
			    #lastModUserId# ,sysdate,
			    nvl(#completedFlag#,'Y'),nvl(#readyWh#,'N'),#groupNo#,NVL(#emptyFlag#, 'N'),
				NVL(#eicFlag#, 'N'),'E','N','N',#crUserId#,sysdate,#manRmks#,
				nvl(#completedFlag#,'Y'),#crUserId#,sysdate,#trtypeEvt#,
				(SELECT TRANSIT_FLG FROM ULD_INVENTORY WHERE ULD_KEY=#uldKey#),
				(SELECT HANDLING_MODE FROM ULD_INVENTORY WHERE ULD_KEY=#uldKey#))	    
	</insert>	
	
	<update id="sqluldpremanfAutoBuildUpupdate" parameterClass="cargo.cms.export.buildup.bo.ManifestAWBBO"  >
		UPDATE 	EXP_PMANIFEST_AWB
			SET ASSIGNED_BULK_PCS = NVL(#assignedPcs#, 0),
			    ASSIGNED_BULK_WT = NVL(#assignedWt#, 0)
			WHERE
			    FLT_KEY =#fltNo# 
			    AND FLT_DATE = #fltDate#
	            AND UNLDG_PT = #unLdgPt#
			    AND AWB_NO = #awbNo#
			    AND AWB_DATE=#awbDate#						
			
	</update>
	
	<update id="sqluldpremanfAutoBuildUpupdateMIXPPKIND" parameterClass="cargo.cms.export.buildup.bo.ManifestAWBBO"  >
		UPDATE 	EXP_PMANIFEST_AWB
			SET ASSIGNED_BULK_PCS = NVL(#assignedPcs#, 0),
			    ASSIGNED_BULK_WT = NVL(#assignedWt#, 0)
			WHERE
			    FLT_KEY =#fltNo# 
			    AND FLT_DATE = #fltDate#
	            AND UNLDG_PT = #unLdgPt#
			    AND AWB_NO = #awbNo#
			    AND AWB_DATE=#awbDate#						
			
	</update>
	
	<update id="sqluldpremanfAutoBuildUpupdatePPKIND" parameterClass="cargo.cms.export.buildup.bo.ManifestAWBBO"  >
		UPDATE 	EXP_PMANIFEST_AWB
			SET ASSIGNED_BULK_PCS = NVL(#assignedPcs#, 0),
			    ASSIGNED_BULK_WT = NVL(#assignedWt#, 0)
			WHERE
			    FLT_KEY =#fltNo# 
			    AND FLT_DATE = #fltDate#
	            AND UNLDG_PT = #unLdgPt#
			    AND AWB_NO = #awbNo#
			    AND AWB_DATE=#awbDate#						
			
	</update>
	
	<select id="sqlmanifestuldawbdetails" parameterClass="cargo.cms.export.buildup.bo.ManifestAWBBO"  resultClass="cargo.cms.export.buildup.bo.ManifestAWBBO">	
	
		SELECT tr_No preManfTrNo,
			FLT_KEY as fltNo , FLT_DATE as fltDate, ULD_BT_NO as uldKey, 
			UNLDG_PT as unLdgPt, AWB_NO as awbNo, AWB_DATE as awbDate, 
			ASSIGNED_PCS as assignedPcs, ASSIGNED_WT as assignedWt
		FROM EXP_PMANIFEST_ULD_AWB
		WHERE
			FLT_KEY = #fltNo#
			AND FLT_DATE=#fltDate#
			AND ULD_BT_NO=#uldKey#
			AND UNLDG_PT=#unLdgPt#
			AND AWB_NO=#awbNo#
			AND AWB_DATE=#awbDate#
	</select>
	
	<insert id="sqlmanifestuldawbdetailsinsert" parameterClass="cargo.cms.export.buildup.bo.ManifestAWBBO" >	
	
	INSERT INTO EXP_PMANIFEST_ULD_AWB ( tr_No,
		   FLT_KEY, FLT_DATE, ULD_BT_NO, 
		   UNLDG_PT, AWB_NO, AWB_DATE, 
		   ASSIGNED_PCS, ASSIGNED_WT, CR_USER_ID, 
		   CR_DATE, LM_USER_ID, LM_DATE,PPK_TYPE) 
	VALUES 
		(#preManfTrNo#,#fltNo# ,#fltDate# , #uldKey#,
	    #unLdgPt#,#awbNo# ,#awbDate# ,
    	#assignedPcs#, #assignedWt#, #crUserId#,
	    sysdate,#lastModUserId# , sysdate,#ppkType#)
	</insert>
			
	<update id="sqlmanifestuldawbdetailsupdate" parameterClass="cargo.cms.export.buildup.bo.ManifestAWBBO" >	
		UPDATE EXP_PMANIFEST_ULD_AWB
		SET ASSIGNED_PCS=ASSIGNED_PCS+#assignedPcs#,
			ASSIGNED_WT =ASSIGNED_WT+#assignedWt#
		WHERE tr_No = #preManfTrNo#			
	</update>
	
	<update id="sqluldAutoBuildUpstorageupdate" parameterClass="cargo.cms.export.buildup.bo.AutoBuildUpStorageBO"  >
		UPDATE AWB_INVENTORY
			SET LOCN_PCS=  LOCN_PCS - #retrvPc#,
			    LOCN_WT = LOCN_WT - #retrvWt#
		WHERE
			SEQ_NO = #seqNo#	
	</update>
	
	<select id="sqlgetSeqBuildUpStorage"  parameterClass="cargo.cms.export.buildup.bo.AutoBuildUpStorageBO" resultClass="java.lang.String"  >
		select SEQ_NO from awb_inventory 
	        where  AWB_NO = #awbNo#
	        and    awb_date = #awbDate#
	        and   loc_code = #loc#
	        and    uld_key = #uldKey#
	        and    lsp_no is null
	        and    flt_key = #fltKey#
	        and    flt_date = #fltDate#
	</select>
	
	<update id="sqlupdateSeqBuildUpStorage" parameterClass="cargo.cms.export.buildup.bo.AutoBuildUpStorageBO"  >
		update awb_inventory set
			PPK_IND = 'Y',
			locn_pcs = locn_pcs + #retrvPc#,
			locn_wt = locn_wt + #retrvWt#
		where AWB_NO = #awbNo#
		and	awb_date = #awbDate#
		and	loc_code = #loc#
		and	uld_key = #uldKey#
		and	lsp_no is null
		and	flt_key = #fltKey#
		and	flt_date = #fltDate#
		and	SEQ_NO = #seqNo#	
	</update>
	
	<delete id="sqlmanifestuldawbHAWBdetailsdelete" parameterClass="cargo.cms.export.buildup.bo.ManifestAWBBO" >	
	        delete EXP_PMANIFEST_ULD_AWB_HAWB WHERE tr_No = #preManfTrNo# 
	</delete>
	
	<insert id="sqlmanifestuldawbHAWBdetailsinsert" parameterClass="cargo.cms.export.buildup.bo.ManifestAWBBO" >	
	      Insert into EXP_PMANIFEST_ULD_AWB_HAWB (TR_NO,HAWB_NO,PC,WT,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE) 
	      values (#preManfTrNo#,#hawbNo#,#pc#,#wt#,#crUserId#,sysdate,#lastModUserId# , sysdate)
	</insert>
	
	<delete id="sqlmanifestuldawbSHCdetailsdelete" parameterClass="cargo.cms.export.buildup.bo.ManifestAWBBO" >	
	        delete EXP_PMANIFEST_ULD_AWB_SHC WHERE tr_No = #preManfTrNo# 
	</delete>
	
	<insert id="sqlmanifestuldawbSHCdetailsinsert" parameterClass="cargo.cms.export.buildup.bo.ManifestAWBBO" >	
	       Insert into EXP_PMANIFEST_ULD_AWB_SHC (TR_NO,DOC_LINE_NO,SHC,SHC2, SHC3, SHC4, SHC5, SHC6, SHC7, SHC8, SHC9, CR_USER_ID, CR_DATE, LM_USER_ID,LM_DATE,
          			  PCS,BULK_ULD_YN) 
		      values (#preManfTrNo#,EXP_PMAN_ULD_AWB_SHC_DOC_SEQ.NEXTVAL,#shcOne#,#shcTwo#,#shcThree#,#shcFour#,#shcFive#,#shcSix#,#shcSeven#,#shcEight#,#shcNine#,
         			 #crUserId#,sysdate,#lastModUserId#,sysdate, NVL(#pc#,(select assigned_pcs from exp_pmanifest_uld_awb where tr_no = #preManfTrNo# )),'N')
	</insert>
	
	<delete id="sqlmanifestuldawbTAGdetailsdelete" parameterClass="cargo.cms.export.buildup.bo.ManifestAWBBO" >	
	        delete EXP_PMANIFEST_ULD_AWB_TAG WHERE tr_No = #preManfTrNo# 
	</delete>
	
	<insert id="sqlmanifestuldawbTAGdetailsinsert" parameterClass="cargo.cms.export.buildup.bo.ManifestAWBBO" >	
	      Insert into EXP_PMANIFEST_ULD_AWB_TAG (TR_NO,TAG_NO,PC,WT,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE) 
	      values (#preManfTrNo#,#tagNo#,#pc#,#wt#,#crUserId#,sysdate,#lastModUserId# , sysdate)
	</insert>
	
	<delete id="sqlmanifestuldawbDGdetailsdelete" parameterClass="cargo.cms.export.buildup.bo.ManifestAWBBO" >	
	        delete EXP_PMANIFEST_ULD_AWB_UN WHERE tr_No = #preManfTrNo# 
	</delete>
	
	<insert id="sqlmanifestuldawbDGdetailsinsert" parameterClass="cargo.cms.export.buildup.bo.ManifestAWBBO" >	
	      Insert into EXP_PMANIFEST_ULD_AWB_UN (TR_NO,DOC_LINE_NO,OVERPACK_ID,APIO_ID,UN_TR_NO,LOAD_QTY,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE) 
	      values (#preManfTrNo#,#docLineNo#,#overpackApioUnid#,#apioUnid#,#unid#,NVL(#loadPkg#, 0),#crUserId#,sysdate,#lastModUserId# , sysdate)
	</insert>
	
	<select id="getAutoBuildUpDgType" parameterClass="cargo.cms.export.buildup.bo.ManifestAWBBO" resultClass="cargo.cms.export.buildup.bo.ManifestAWBBO">
	    select AWB_NO awbNo, to_char(AWB_DATE,'DDMONYY') awbDate , OVERPACK_ID overpackId, APIO_ID apioId, UN_ID unid  ,   
	    decode(OVERPACK_ID,null, decode(APIO_ID,null, 'UN','APIO'),'OVERPACK') dgType
	    from EXP_DGD 
	    where AWB_NO = #awbNo# AND AWB_DATE = #awbDate#
	</select> 
	
	<select id="getAutoBuildUpOverpackValues" parameterClass="cargo.cms.export.buildup.bo.ManifestAWBBO" resultClass="cargo.cms.export.buildup.bo.ManifestAWBBO">  
	    select AWB_NO awbNo, to_char(AWB_DATE,'DDMONYY') awbDate , OVERPACK_ID overpackApioUnid,
	    OVERPACK_ID overpackId, OVERPACK_PKG pkg,  OVERPACK_PKG pkgUnitQty 
	    from EXP_DGD_OP where AWB_NO = #awbNo# AND AWB_DATE = #awbDate# and OVERPACK_ID = nvl(#overpackId#,OVERPACK_ID)
	</select> 
	
	<select id="getAutoBuildUpAPIOValues" parameterClass="cargo.cms.export.buildup.bo.ManifestAWBBO" resultClass="cargo.cms.export.buildup.bo.ManifestAWBBO">  
	    select AWB_NO awbNo, to_char(AWB_DATE,'DDMONYY') awbDate , APIO_ID apioUnid,
	    APIO_ID apioId, APIO_PKG pkg, APIO_PKG pkgUnitQty, OVERPACK_ID overpackId
	    from EXP_DGD_APIO where  AWB_NO = #awbNo# AND AWB_DATE = #awbDate# and OVERPACK_ID = nvl(#overpackId#,OVERPACK_ID)  and APIO_ID = nvl(#apioId#,APIO_ID)
	</select> 
	
	<select id="getAutoBuildUpUNIDValues" parameterClass="cargo.cms.export.buildup.bo.ManifestAWBBO" resultClass="cargo.cms.export.buildup.bo.ManifestAWBBO">  
	    select AWB_NO awbNo, to_char(AWB_DATE,'DDMONYY') awbDate , UN_ID unid  ,  UN_ID overpackApioUnid,  
	    PKG_PCS ||'/' || QTY ||'/' || QU pkgUnitQty, PKG_PCS pkg,  QTY qty,  QU unit from EXP_DGD 
	    where AWB_NO = #awbNo# AND AWB_DATE = #awbDate#
	    and OVERPACK_ID = nvl(#overpackId#,OVERPACK_ID)  and APIO_ID = nvl(#apioId#,APIO_ID) and UN_ID = nvl(#unid#,UN_ID)
	</select> 

	<select id="getAutoBuildUpSplValues" parameterClass="cargo.cms.export.buildup.bo.ManifestAWBBO" resultClass="cargo.cms.export.buildup.bo.ManifestAWBBO">
		select SPL_CODE1 shcOne, SPL_CODE2 shcTwo, SPL_CODE3 shcThree, SPL_CODE4 shcFour, SPL_CODE5 shcFive,
		SPL_CODE6 shcSix, SPL_CODE7 shcSeven, SPL_CODE8 shcEight, SPL_CODE9 shcNine
		from  EXP_CAR where awb_no = #awbNo# and  awb_date = #awbDate# and rownum = 1
	</select>

	<select id="getAutoBuildUpTagInfoList" parameterClass="cargo.cms.export.buildup.bo.ManifestAWBBO" resultClass="cargo.cms.export.buildup.bo.ManifestAWBBO">
		select tab1.awb_no awbNo,  tab1.awb_date awbDate, tab2.TAG_NO tagNo, tab2.TAG_PCS pc, tab2.TAG_WT wt, tab1.AWB_DEST dest
		from  EXP_RCL_HD tab1 , EXP_RCL_OBC tab2 
		where tab1.RCL_NO = tab2.RCL_NO and tab1.awb_no = #awbNo# and  tab1.awb_date = #awbDate#
	</select>
	
	<select id="getAutoBuildUpHAWBInfoList" parameterClass="cargo.cms.export.buildup.bo.ManifestAWBBO" resultClass="cargo.cms.export.buildup.bo.ManifestAWBBO">
		select tab1.awb_no awbNo,  tab1.awb_date awbDate, tab2.HAWB_NO hawbNo, tab2.HAWB_PCS pc,  tab2.HAWB_NET_WT wt
		from edi_fhl tab1, edi_fhl_hawb tab2 
		where tab1.tr_no = tab2.tr_no and  tab1.awb_no = #awbNo# and  tab1.awb_date = #awbDate#
	</select>

	<select id="getPmanByUldAutoBuildUpHAWBInfoList" parameterClass="cargo.cms.export.buildup.bo.ManifestAWBBO" resultClass="cargo.cms.export.buildup.bo.ManifestAWBBO">
		select awb_no awbNo,  HAWB_NO hawbNo, PC pc,  WT wt
		from  EXP_RCL_ULD_MANF 
		where rcl_no = #rclNo# and awb_no = #awbNo# and uld_key = #uldKey#
	</select>  
	
	 <select id="getPmanByUldAutoBuildUpSplValues" parameterClass="cargo.cms.export.buildup.bo.ManifestAWBBO" resultClass="cargo.cms.export.buildup.bo.ManifestAWBBO">
		select SPL_CODE1 shcOne, SPL_CODE2 shcTwo, SPL_CODE3 shcThree, SPL_CODE4 shcFour, SPL_CODE5 shcFive,
		SPL_CODE6 shcSix, SPL_CODE7 shcSeven, SPL_CODE8 shcEight, SPL_CODE9 shcNine
		from  AWB where awb_no = #awbNo# and  awb_date = #awbDate# and rownum = 1
	</select>
	<insert id="sqluldBuildUpstorageinsert" parameterClass="cargo.cms.export.buildup.bo.AutoBuildUpStorageBO"  >
		INSERT INTO AWB_INVENTORY
			(AWB_NO,AWB_DATE,CARR_CODE,LOCN_PCS,LOCN_WT,STRG_DATE,
			PPK_IND,LSP_NO,LOC_CODE,
			CR_USER_ID, CR_DATE, 
		   LM_USER_ID, LM_DATE,SEQ_NO)
		   VALUES
		   (#awbNo#,#awbDate#,
		   #carrCode#,#retrvPc#,
		   #retrvWt#,sysdate,'Y',#lspno#,#loc#,
			#crUserId#,sysdate,#lastModUserId#,sysdate,AWB_INV_SEQ.NEXTVAL)
	</insert>
	<!--  Auto Build Up Ends Here -->
	
	<!-- Undo Auto Build Up :: Anup :: Starts -->
	<update id="sqlUpdateBuildUpStorageDtls" parameterClass="cargo.cms.export.buildup.bo.AutoBuildUpStorageBO">
		update awb_inventory set
			locn_pcs = locn_pcs - #retrvPc#,
			locn_wt = locn_wt - #retrvWt#
		where AWB_NO = #awbNo#
		and	awb_date = #awbDate#
		and	loc_code = #loc#
		and	uld_key = #uldKey#
		and	lsp_no is null
		and	flt_key = #fltKey#
		and	flt_date = #fltDate#
		and	SEQ_NO = #seqNo#	
	</update>
	<insert id="sqlInsertNewBuildUpStorageDtls" parameterClass="cargo.cms.export.buildup.bo.AutoBuildUpStorageBO">
		INSERT INTO AWB_INVENTORY 
			(SEQ_NO, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE, LOC_CODE, AWB_NO, AWB_DATE, CARR_CODE, CATALOG, CC_CODE, SRF_NO, CDIF_NO, LSP_NO, 
			LOCN_PCS, LOCN_WT, DAM_IND, PPK_IND, BULK_WT, BUP_WT, FLT_NO, FLT_DATE, FLT_TYPE, FLT_KEY, ULD_KEY, DAM_PCS, DAM_WT, STRG_DATE) 
			(SELECT AWB_INV_SEQ.nextval, #crUserId#, SYSDATE, #crUserId#, SYSDATE, #buildUpLoc#, AWB_NO, AWB_DATE, CARR_CODE, CATALOG, CC_CODE, SRF_NO, CDIF_NO, 
			LSP_NO, LOCN_PCS, LOCN_WT, DAM_IND, PPK_IND, BULK_WT, BUP_WT, FLT_NO, FLT_DATE, FLT_TYPE, FLT_KEY, ULD_KEY, DAM_PCS, DAM_WT, SYSDATE FROM AWB_INVENTORY WHERE SEQ_NO=#seqNo#)
	</insert>
	<update id="sqlUpdateNewBuildUpStorageDtls" parameterClass="cargo.cms.export.buildup.bo.AutoBuildUpStorageBO">
		update awb_inventory set
			locn_pcs = locn_pcs + #retrvPc#,
			locn_wt = locn_wt + #retrvWt#
		where AWB_NO = #awbNo#
		and	awb_date = #awbDate#
		and	loc_code = #buildUpLoc#
		and	uld_key = #uldKey#
		and	lsp_no is null
		and	flt_key = #fltKey#
		and	flt_date = #fltDate#
		and	SEQ_NO = #seqNo#	
	</update>
	<select id="sqlGetLocnDtlEmptyInAwbInv" parameterClass="cargo.cms.export.buildup.bo.AutoBuildUpStorageBO" resultClass="java.lang.Integer">
		SELECT 
			COUNT(*) 
		FROM 
			AWB_INVENTORY 
		WHERE 
			LOCN_PCS=0 AND LOCN_WT=0 AND AWB_NO=#awbNo# AND AWB_DATE=#awbDate# AND LOC_CODE=#loc# AND ULD_KEY=#uldKey# 
			AND LSP_NO IS NULL AND FLT_KEY=#fltKey# AND FLT_DATE=#fltDate# AND SEQ_NO=#seqNo#
	</select>
	<update id="sqlDeleteOldBuildUpStorageDtls" parameterClass="cargo.cms.export.buildup.bo.AutoBuildUpStorageBO">
		DELETE AWB_INVENTORY 
		WHERE 
			AWB_NO=#awbNo# AND AWB_DATE=#awbDate# AND LOC_CODE=#buildUpLoc# AND ULD_KEY=#uldKey# 
			AND LSP_NO IS NULL AND FLT_KEY=#fltKey# AND FLT_DATE=#fltDate# AND SEQ_NO=#seqNo#
	</update>
	<select id="sqlGetTrNoPManifstUldAwb" parameterClass="cargo.cms.export.buildup.bo.ManifestAWBBO" resultClass="java.lang.String">
		SELECT 
			TR_NO as preManfTrNo 
		FROM 
			EXP_PMANIFEST_ULD_AWB 
		WHERE 
			FLT_KEY=#fltNo# AND FLT_DATE=TO_DATE(#fltDate#, 'DDMONYY') AND ULD_BT_NO=#uldKey# AND AWB_NO=#awbNo# AND AWB_DATE=TO_DATE(#awbDate#, 'DDMONYY')
	</select>
	<update id="sqlUpdatePcsWtInPManfstUldAwb" parameterClass="cargo.cms.export.buildup.bo.ManifestAWBBO" >	
		UPDATE EXP_PMANIFEST_ULD_AWB SET ASSIGNED_PCS= ASSIGNED_PCS - #assignedPcs#, ASSIGNED_WT = ASSIGNED_WT - #assignedWt# WHERE TR_NO = #preManfTrNo#			
	</update> 
	<update id="updateExpFltUld" parameterClass="java.util.HashMap">
		UPDATE EXP_FLT_ULD 
			SET TARE_WT = TARE_WT - NVL(#TARE_WT#, 0), GROWSS_WT = GROWSS_WT - NVL(#GROSS_WT#,0), 
  			NET_WT = NET_WT - ((GROWSS_WT - NVL(#GROSS_WT#,0)) - (TARE_WT - NVL(#TARE_WT#, 0))), 
  			BUILDUP_YN = 'N' 
		WHERE 
			FLT_KEY = #FLT_KEY# AND FLT_TYPE = 'E' AND FLT_DATE = TO_DATE(#FLT_DATE#,'DDMONYY') 
			AND ULD_KEY = #NEW_ULD_BT_NO# AND PPK_TYPE =  #PPK_TYPE#
	</update>	
	<delete id="deleteExpTallySheet" parameterClass="java.util.HashMap">
		DELETE FROM EXP_TALLY_SHEET WHERE FLT_KEY=#fltKey# AND FLT_DATE=#fltDate# AND ULD_KEY=#uldKey# AND AWB_NO=#awbNo# AND AWB_DATE=#awbDate#
	</delete>
	<delete id="deleteExpPManifestUld" parameterClass="java.util.HashMap">
		DELETE FROM EXP_PMANIFEST_ULD WHERE ULD_BT_NO= #uldKey# AND FLT_KEY=#fltKey# AND FLT_DATE=#fltDate#
	</delete>
	<select id="sqlGetPcsWtEmptyPMnfstUldAwb" parameterClass="cargo.cms.export.buildup.bo.ManifestAWBBO" resultClass="java.lang.Integer">
		SELECT COUNT(*) FROM EXP_PMANIFEST_ULD_AWB WHERE ASSIGNED_PCS=0 AND ASSIGNED_WT=0 AND TR_NO = #preManfTrNo#
	</select>
	<delete id="deleteExpPMnfstUldAwb" parameterClass="cargo.cms.export.buildup.bo.ManifestAWBBO">
		DELETE FROM EXP_PMANIFEST_ULD_AWB WHERE TR_NO = #preManfTrNo#
	</delete>
	<select id="sqlGetShipmntForUldNo" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		SELECT COUNT(*) FROM AWB_INVENTORY WHERE ULD_KEY=#uldKey#
	</select>
	<update id="updateEmptyStsInUldInventory" parameterClass="java.lang.String">
		UPDATE ULD_INVENTORY SET EMPTY_FLY='Y', FLT_KEY='', FLT_DATE='', FLT_TYPE='' WHERE ULD_KEY=#uldKey#
	</update>
	<select id="sqlgetNewBuildUpStorageSeqNo" parameterClass="cargo.cms.export.buildup.bo.AutoBuildUpStorageBO" resultClass="java.lang.String">
		select SEQ_NO from awb_inventory 
	        where  AWB_NO = #awbNo#
	        and    awb_date = #awbDate#
	        and   loc_code = #buildUpLoc#
	        and    uld_key = #uldKey#
	        and    lsp_no is null
	        and    flt_key = #fltKey#
	        and    flt_date = #fltDate#
	</select>
	<!-- Undo Auto Build Up :: Anup :: Ends -->
	
	<!-- Queries for PKG_PMAN.VAL_VAL_CARGO_BLDUP Begin-->
	<select id="sqlValCargoBldup001" parameterClass="java.lang.String" resultClass="java.lang.String">
	select 1 from   mast_carrier where  code = #CARR#
	</select>
	<select id="sqlValCargoBldup002" parameterClass="java.lang.String" resultClass="java.lang.String">
	select 1 from   mast_arpt where  code = #DEST#
	</select>
	<select id="sqlValCargoBldup003" parameterClass="java.lang.String" resultClass="java.lang.String">
	select 1 from   mast_spl_hand_code where  code = #SPL_CODE#
	</select>
	<select id="sqlValCargoBldup004" parameterClass="java.lang.String" resultClass="java.util.HashMap">
	select 1 AGENT_NAME, code AGENT_CODE from   cust_company
                where  code_desc = #AGENT_NAME#
                and    agent_yn = 'Y'
	</select>
	<select id="sqlValCargoBldup005" parameterClass="java.lang.String" resultClass="java.util.HashMap">
	select 1 DIRECT_SHIPPER, code SHIPPER_CODE from   cust_company
                where  code_desc = #DIRECT_SHIPPER#
                and    cons_yn = 'Y'
	</select>
	<!-- Queries for PKG_PMAN.VAL_VAL_CARGO_BLDUP End-->
	
	<!-- Queries for PKG_PMAN.VAL_REBUILT_ULD_BT Begin-->
	<select id="sqlValRebuiltUldBt001" parameterClass="java.lang.String" resultClass="java.lang.String">
	select 'X' from   mast_uld_type where  code = substr(#ULD_BT_NO#, 1, 3)
	</select>
	<select id="sqlValRebuiltUldBt002" parameterClass="java.util.HashMap" resultClass="java.lang.String">
	select 'X' from   exp_rebuilt_advice
			where  flt_key = #FLT_KEY#
			and    flt_date = TO_DATE(#FLT_DATE#, 'DDMONYY')
			and    uld_key = #ULD_BT_NO#
			and    nvl(approve_status, 'N') = 'N'
	</select>
	<!-- Queries for PKG_PMAN.VAL_REBUILT_ULD_BT End-->
	
	<!-- Queries for PKG_PMAN.VAL_ULD_ASSIGN Begin-->
	
	<select id="sqlValUldAssign001" parameterClass="java.util.HashMap" resultClass="java.lang.String">
	select 'X' from   exp_pmanifest_uld
      where  flt_key = #FLT_KEY#
      and    flt_date = TO_DATE(#FLT_DATE#, 'DDMONYY')
      and    uld_bt_no = #ULD_KEY#
      and    unldg_pt = #UNLDG_PT#
    </select>  
    <select id="sqlValUldAssign002" parameterClass="java.util.HashMap" resultClass="java.lang.String">
	select chk_flg from   exp_chkout_dtl
	      where  flt_key = #FLT_KEY#
	      and    flt_date = TO_DATE(#FLT_DATE#, 'DDMONYY')
	      and    uld_key = #ULD_KEY# and chk_flg = 'Y'
	</select>
	<select id="sqlValUldAssign003" parameterClass="java.util.HashMap" resultClass="java.lang.String">
	select t2.buildup_cdate  from   flt_opr t1, flt_opr_events t2
	      where  t1.tr_no = t2.tr_no
	      and    t1.flt_key = #FLT_KEY#
	      and    t1.sch_date = TO_DATE(#FLT_DATE#, 'DDMONYY')
	      and    t1.flt_type = 'D'
	</select>
	<select id="sqlValUldAssign004" parameterClass="java.util.HashMap" resultClass="java.lang.String">
	select bldup_complete from   exp_pmanifest_uld
	      where  flt_key = #FLT_KEY#
	      and    flt_date = TO_DATE(#FLT_DATE#, 'DDMONYY')
	      and    uld_bt_no = #ULD_KEY#
	</select>
	
	<select id="sqlValUldAssign005_count" parameterClass="java.lang.String" resultClass="java.lang.Integer">
	select count(1)
	      from   uld_inventory
	      where  uld_key = #ULD_KEY#
	</select>
	
	<select id="sqlValUldAssign005" parameterClass="java.lang.String" resultClass="java.util.HashMap">
	select owner_id, nvl(resv_flg, 'N') RESV_FLG, nvl(owned_inv, 'N') OWNED_INV, nvl(agent_inv, 'N') AGENT_INV, 
		   uld_type, contr_code, flt_key, TO_CHAR(flt_date, 'DDMONYY') FLT_DATE, base_plt, empty_flg, flt_type, cfm_status
	      from   uld_inventory
	      where  uld_key = #ULD_KEY#
	</select>
	<select id="sqlValUldAssign006" parameterClass="java.util.HashMap" resultClass="java.lang.String">
	 select 'X' from   uld_type_proh_acft
	      where  uld_type = #ULD_TYPE#
	      and    contr_code = #CONTR_CODE#
	      and    acft_type = (select acft_type from  flt_opr
	                                where  flt_key = #FLT_KEY#
	                                and    sch_date = TO_DATE(#FLT_DATE#, 'DDMONYY')
	                                and    flt_type = 'D')
    </select>
    
    <parameterMap id="valFltSectorCloseYnParamMap" class="java.util.HashMap">
		<parameter property="STATUS" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="OUT" />	
		<parameter property="FLT_KEY" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="IN" />
		<parameter property="FLT_DATE" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="IN" />
		<parameter property="UNLDG_PT" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="IN" />
	</parameterMap>
	<procedure id="sqlPkgExpValFltSectorCloseYn" parameterMap="valFltSectorCloseYnParamMap">
		{? = call pkg_exp_val.flt_sector_close_yn(?, ?, ?)}
	</procedure>
	<!-- Queries for PKG_PMAN.VAL_ULD_ASSIGN End-->	  
	<insert id="sqlAwbLockInsAwbEvent" parameterClass="java.util.HashMap" >
		insert into awb_events
			 (awb_no,awb_date,event_id,
			  event_desc,
			  flt_key,flt_date,flt_type,tr_no,
			  uld_key,pcs,wt,
			  cr_user_id,cr_date,lm_user_id,lm_date
			 )
		values
			 (#AWB_NO#,TO_DATE(#AWB_DATE#,'DDMONYY'),#EVENT_ID#,
			  (select event_desc from mast_awb_events where event_id = #EVENT_ID#),
			  null,null,null, #AWB_NO#,
			  null,null,null,
			  #LM_USER_ID#,sysdate,#LM_USER_ID#, sysdate)
	</insert>
	<!-- Queries for pkg_exp_event  -->
	<select id="sqlPkgEventGetEventDesc" parameterClass="java.lang.String" resultClass="java.lang.String">
		select event_desc
	        from   mast_awb_events
	        where  event_id = #EVENT_ID#
	</select>
	<insert id="sqlPkgEventInsAwbEvents" parameterClass="java.util.HashMap">
		insert into awb_events (awb_no, awb_date, event_id, event_desc, flt_key, flt_date, flt_type, tr_no, uld_key, pcs, wt,
				cr_user_id, cr_date, lm_user_id, lm_date)
	        values (#AWB_NO#, TO_DATE(#AWB_DATE#,'DDMONYY'), #EVENT_ID#, #EVENT_DESC#, null, null, 'E', #AWB_NO#, null, NVL(#PCS#,0), NVL(#WT#,0),
				#LM_USER_ID#, sysdate, #LM_USER_ID#, sysdate)    
	</insert>
	<!-- Queries for pkg_exp_event ends -->
	<!-- Queries for TRG_FLT_LEG_STMNT1 -->
	<select id="sqlFltLegGetOprleg" parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT 'X'
           FROM   FLT_OPR_LEG
            WHERE  TR_NO = #TR_NO#
            AND    NVL(LEG_STATUS, 'N') = 'N'
            AND    ROWNUM = 1  
	</select>
	<update id="sqlFltLegUpdFltOprNull" parameterClass="java.lang.String">
		UPDATE FLT_OPR_EVENTS
            SET FLT_CLS_YN = 'N',
                FLT_CLS_DATE = NULL,
                FLT_CLS_TIME = NULL,
                FLT_CLS_USER_ID = NULL
            WHERE  TR_NO = #TR_NO#
	</update>
	<update id="sqlFltLegUpdFltOprEvents" parameterClass="java.util.HashMap">                        	
		UPDATE FLT_OPR_EVENTS
                SET FLT_CLS_YN = 'Y',
                    FLT_CLS_DATE = SYSDATE,
                    FLT_CLS_TIME = TO_NUMBER(TO_CHAR(SYSDATE, 'HH24MI')),
                    FLT_CLS_USER_ID = #USER_ID# 
                WHERE  TR_NO = #TR_NO#
	</update>                         
	<!-- Queries for TRG_FLT_LEG_STMNT1 ends-->
<!--Mahesh BN Updates for TRIGGER TRG_ULD_REL_DTL_INSUPD 11.05.2011 Begin	-->   
	<!--	<Procedure Call PKG_COMMON.PRC_DBMS_ERR begin-->
	<parameterMap id="valPkgCommonPrcDbmsErr" class="java.util.HashMap">
		
		<parameter property="MSG" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="IN" />
	</parameterMap>
	
	<procedure id="sqlPkgCommonPrcDbmsErr" parameterMap="valPkgCommonPrcDbmsErr">
		{  call pkg_common.prc_dbms_err(?)}
	</procedure>
	<!--	<Procedure Call PKG_COMMON.PRC_DBMS_ERR end-->
	<select id="sqlGetUldRelHdDetails" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
			 SELECT CORR_REL_FLG, TO_CHAR(REL_DATE,'DDMONYY') REL_DATE, REL_TIME, RMK, AGENT_CUST_NO,REF_ISS_NO, CARR_CODE
		     FROM ULD_REL_HD
		     WHERE TR_NO = #TR_NO#
    </select>
    <select id="sqlGetUldInvCount" parameterClass="java.lang.String" resultClass="java.lang.String">
    	    SELECT COUNT(1)
            FROM ULD_INVENTORY
            WHERE ULD_KEY = #ULD_KEY#
            AND CFM_STATUS = 'CONFIRMED'
     </select> 
     <select id="sqlGetUldInvDetails" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
     		 SELECT WH_DEST, LOC_CODE, CONTR_CODE, CONDN_CODE, OWNER_ID
             FROM ULD_INVENTORY
             WHERE ULD_KEY = #ULD_KEY# 
     </select>
     <update id="sqlUpdateUldInventoryDetails" parameterClass="java.util.HashMap">
     		UPDATE ULD_INVENTORY
            SET CFM_STATUS = 'RELEASED',
                AGENT_INV  = 'Y',
                OWNED_INV  = 'N',
                AGENT_ID   = #AGENT#,
                LM_USER_ID = #LM_USER_ID#,
                LM_DATE    = SYSDATE,
                WH_DEST    = null,
                LOC_CODE   = NULL,
                GROSS_WEIGHT = 0,
                GEN_RMK	   = #RMK#,
                RESV_RMK   = null,
                DAM_RMK	   = null,
                REF_TR_NO      = #EIR_NO#,
                REF_TR_TYPE    = 'UR',
                REF_TR_DATE    = TO_DATE(#CR_DATE#,'DDMONYY'),
                REF_IN_CARR    = NULL,
                REF_OUT_CARR   = NULL,
                CONTR_CODE	   = NULL,
                REF_DOC_LINE_NO  = #DOC_LINE_NO#,
                REF_LOC_FROM     = #WH_LOC#,
                REF_TR_EVENT     = #EVENT#,
                REF_RMK          = #RMK#,
                REF_MOV_FROM     = #WH_DEST#
             WHERE ULD_KEY = #ULD_KEY# AND CFM_STATUS = 'CONFIRMED'
       </update> 
       <select id="sqlGetUldGroup" parameterClass="java.util.HashMap" resultClass="java.lang.String">
       			SELECT ULD_GROUP
         		FROM ULD_GROUP_CARR
         		WHERE CARR_CODE    = #ULD_CARR#
               	AND ULD_TYPE = #ULD_TYPE#
       </select>
       <select id="sqlGetUldIssHdDetails" parameterClass="java.lang.String" resultClass="java.util.HashMap">
       		  SELECT TR_NO, ISS_NO
              FROM ULD_ISS_HD
              WHERE EIR_NO = #EIR_NO#  
       </select> 
       <select id="sqlGetUldIssSeqNo" parameterClass="java.lang.String" resultClass="java.lang.String">
				SELECT ULD_ISS_SEQ.NEXTVAL FROM  DUAL
       </select>
       <select id="sqlGetRuleValue" parameterClass="java.lang.String" resultClass="java.lang.String">
       		SELECT RULE_VALUE FROM CMSRULES WHERE RULE_CODE = 'EIR_EXP_TIME'
       </select>
		<insert id="sqlInsIntoUldIssHd" parameterClass="java.util.HashMap">       	
       		   INSERT INTO ULD_ISS_HD
              (TR_NO,ISS_NO,EIR_NO,EIR_DATE,EIR_TIME,CARR_CODE,REQ_BY_CARR,FLT_NO,FLT_DATE,
               ISS_RMK,EIR_RMK,AGENT_CUST_NO,STP_EFAX,PRT_CODE,STATUS,TR_TYPE,CR_USER_ID,
               CR_DATE, EIR_EXPIRY_DATE,LM_USER_ID,LM_DATE,REPT_VER)
              VALUES
              (#TR_NO#, #ISS_NO#,#EIR_NO#,TO_DATE(#REL_DATE#,'DDMONYY'),#REL_TIME#,#CARR_CODE#,NULL,NULL,NULL,
               null,NULL,#AGENT#,NULL,NULL,'COLLECTED',#TR_TYPE#,#CR_USER_ID#,TO_DATE(#CR_DATE#,'DDMONYY'),
               (SYSDATE + #EXP_TIME#/24),#LM_USER_ID#,TO_DATE(#LM_DATE#,'DDMONYY'),NULL)   
       </insert>
       <select id="sqlGetMaxDocLineNo" parameterClass="java.lang.String" resultClass="java.lang.String">
       	  SELECT MAX(DOC_LINE_NO)
          FROM ULD_ISS_DTL
          WHERE TR_NO = #TR_NO#
      </select>
      <select id="sqlGetDocLineNo" parameterClass="java.util.HashMap" resultClass="java.lang.String">
      		SELECT DOC_LINE_NO
            FROM ULD_ISS_DTL
            WHERE ULD_EQUIP  = 'E' AND EQUIP_TYPE = #EQUIP_TYPE# AND TR_NO = #TR_NO#
	  </select>
	   <select id="sqlGetUldGroup1" parameterClass="java.lang.String" resultClass="java.lang.String">		
			SELECT ULD_GROUP
            FROM ULD_GROUP_TYPE
            WHERE ULD_TYPE = #ULD_TYPE#
       </select>
       <select id="sqlGetDocLineNo1" parameterClass="java.util.HashMap" resultClass="java.lang.String">
       		 SELECT DOC_LINE_NO
             FROM ULD_ISS_DTL
             WHERE ULD_GROUP = #ULD_GRP# AND TR_NO = #TR_NO#
       </select>
       <update id="sqlUpdateUldIssDtlDetails" parameterClass="java.util.HashMap">
       		  UPDATE ULD_ISS_DTL
              SET ULD_REL_QTY   = ULD_REL_QTY   + DECODE(ULD_EQUIP,'G',1,'T',1,0),
                  ULD_REQ_QTY   = ULD_REQ_QTY   + DECODE(ULD_EQUIP,'G',1,'T',1,0),
                  ULD_APR_QTY   = ULD_APR_QTY   + DECODE(ULD_EQUIP,'G',1,'T',1,0),
                  EQUIP_REL_QTY = EQUIP_REL_QTY + DECODE(ULD_EQUIP, 'E', #EQUIP_QTY#, 0)
              WHERE TR_NO       = #TR_NO# AND
                    DOC_LINE_NO = #ISS_LDNO#
        </update>
        <insert id="sqlInsIntoUldIssDtl" parameterClass="java.util.HashMap"> 
        	INSERT INTO ULD_ISS_DTL
              (TR_NO,ISS_NO,EIR_NO,DOC_LINE_NO,
               ULD_EQUIP,ULD_GROUP,ULD_TYPE,ULD_REQ_QTY,ULD_APR_QTY,
               ULD_REL_QTY,EQUIP_TYPE,EQUIP_REQ_QTY,EQUIP_APR_QTY,EQUIP_REL_QTY,
               TR_TYPE,CR_USER_ID,CR_DATE,LM_USER_ID,
               LM_DATE)
              VALUES
              (#TR_NO#, #ISS_NO#,#EIR_NO#,#ISS_DNO# + 1,
               #ULD_EQUIP#,#ULD_GROUP#,null,1,1,
               1,#EQUIP_TYPE#,#EQUIP_QTY#,#EQUIP_QTY#,#EQUIP_QTY#,
               #TR_TYPE#,#CR_USER_ID#,TO_DATE(#CR_DATE#,'DDMONYY'),#LM_USER_ID#,
               TO_DATE(#LM_DATE#,'DDMONYY'))
       </insert>
       <insert id="sqlInsIntoUldIssDtl1" parameterClass="java.util.HashMap"> 
       		INSERT INTO ULD_ISS_DTL
           (TR_NO,ISS_NO,EIR_NO,DOC_LINE_NO,
            ULD_EQUIP,ULD_GROUP,ULD_TYPE,ULD_REQ_QTY,ULD_APR_QTY,
            ULD_REL_QTY,EQUIP_TYPE,EQUIP_REQ_QTY,EQUIP_APR_QTY,EQUIP_REL_QTY,
            TR_TYPE,CR_USER_ID,CR_DATE,LM_USER_ID,
            LM_DATE)
           VALUES
           (#TR_NO#,#ISS_NO#,#EIR_NO#, 1,
            #ULD_EQUIP#,#ULD_GROUP#,null,1,1,
            1,#EQUIP_TYPE#,#EQUIP_QTY#,#EQUIP_QTY#,#EQUIP_QTY#,
            #TR_TYPE#,#CR_USER_ID#,TO_DATE(#CR_DATE#,'DDMONYY'),#LM_USER_ID#,
            TO_DATE(#LM_DATE#,'DDMONYY'))
        </insert>
        <update id="sqlUpdateUldIssDtlData" parameterClass="java.util.HashMap">
        	UPDATE ULD_ISS_DTL
            SET ULD_REL_QTY   = ULD_REL_QTY   + DECODE(ULD_EQUIP,'G',1,'T',1,0),
                EQUIP_REL_QTY = EQUIP_REL_QTY + DECODE(ULD_EQUIP,'E',#EQUIP_QTY#,0)
            WHERE EIR_NO      = #EIR_NO# AND
                  DOC_LINE_NO = #IDOC_LINE_NO#
         </update>
<!--Mahesh BN Updates for TRIGGER TRG_ULD_REL_DTL_INSUPD 11.05.2011 end	-->

	<!-- Queries for PKG_PMAN.VAL_FLT_SECTOR_CLOSE Begin-->
	<select id="sqlValFltSectorClose001" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		select t1.awb_no AWB_NO
		from exp_pmanifest_awb t1
			join awb on t1.awb_no =  awb.awb_no and t1.awb_date = awb.awb_date
			where t1.flt_key = #FLT_KEY#
			and    t1.flt_date = TO_DATE(#SCH_DATE#, 'DDMONYY')
			and    t1.unldg_pt in (select column_value sector from table(pkg_common.inlist(#SECTOR_LIST#)))
			and    t1.pman_pcs > 0  and awb.awb_type != 'T'
			and    not exists(select null from   exp_doc_recd
								  where  awb_no = t1.awb_no
								  and    awb_date = t1.awb_date
								  and    recd_status = 'Confirmed')
    </select>                              
	<select id="sqlValFltSectorClose002" parameterClass="java.util.HashMap" resultClass="java.lang.String">
	select t1.awb_no AWB_NO from   exp_pmanifest_awb t1
		where  t1.flt_key = #FLT_KEY#
		and    t1.flt_date = TO_DATE(#SCH_DATE#, 'DDMONYY')
		and    t1.unldg_pt in (select column_value sector from table(pkg_common.inlist(#SECTOR_LIST#)))
		and    exists(select null from bill_charge_dtl bil
							 JOIN AWB awb ON UPPER(awb.AWB_NO) = UPPER(bil.AWB_NO) 
							AND UPPER (awb.awb_date) = UPPER (bil.awb_date)							  
							where  bil.awb_no = t1.awb_no
							and    bil.awb_date = t1.awb_date
							and    bil.status = 'PENDING' AND bil.NET_AMT&gt;0)
	UNION
	select t1.awb_no AWB_NO from   exp_pman_tarmac_awb t1
		where  t1.flt_key = #FLT_KEY#
		and    t1.flt_date = TO_DATE(#SCH_DATE#, 'DDMONYY')
		and    t1.unldg_pt in (select column_value sector from table(pkg_common.inlist(#SECTOR_LIST#)))
		and    exists(select null from bill_charge_dtl bil
							 JOIN AWB awb ON UPPER(awb.AWB_NO) = UPPER(bil.AWB_NO) 
							AND UPPER (awb.awb_date) = UPPER (bil.awb_date)							  
							where  bil.awb_no = t1.awb_no
							and    bil.awb_date = t1.awb_date
							and    bil.status = 'PENDING' AND bil.NET_AMT&gt;0) 
		and not exists(select null from   exp_pmanifest_awb t1
			where  t1.flt_key = #FLT_KEY#
			and    t1.flt_date = TO_DATE(#SCH_DATE#, 'DDMONYY')
			and    t1.unldg_pt = #SECTOR#)
	</select>
	<select id="sqlValFltSectorClose003" parameterClass="java.util.HashMap" resultClass="java.lang.String">
	select t1.awb_no AWB_NO from   exp_pmanifest_awb t1
		where  t1.flt_key = #FLT_KEY#
		and    t1.flt_date = TO_DATE(#SCH_DATE#, 'DDMONYY')
		and    t1.unldg_pt = #SECTOR#
	UNION 
	select t1.awb_no AWB_NO from   exp_pman_tarmac_awb t1
		where  t1.flt_key = #FLT_KEY#
		and    t1.flt_date = TO_DATE(#SCH_DATE#, 'DDMONYY')
		and    t1.unldg_pt = #SECTOR# 
		and not exists(select null from   exp_pmanifest_awb t1
			where  t1.flt_key = #FLT_KEY#
			and    t1.flt_date = TO_DATE(#SCH_DATE#, 'DDMONYY')
			and    t1.unldg_pt = #SECTOR#)
	</select>      
	<select id="sqlValFltSectorClose004" parameterClass="java.util.HashMap" resultClass="java.lang.String">
	select 'X' from   exp_chkout_dtl t1
		where  t1.flt_key = #FLT_KEY#
		and    t1.flt_date = TO_DATE(#SCH_DATE#, 'DDMONYY')
		and    t1.chkout_date is null
		and    exists (select null from   uld_inventory t2
							where  t2.uld_key = t1.uld_key
							and    t2.flt_key = t1.flt_key
							and    t2.flt_date = t1.flt_date
							and    t2.base_plt is null)
		and    rownum = 1
	</select>
	<select id="sqlValFltSectorClose005" parameterClass="java.util.HashMap" resultClass="java.lang.String">
	select 'X' from   exp_pmanifest_uld
		where  flt_key = #FLT_KEY#
		and    flt_date = TO_DATE(#SCH_DATE#, 'DDMONYY')
		and    unldg_pt = #SECTOR#
		and    bldup_complete = 'N'
		and    rownum = 1
	</select>
	<select id="sqlValFltSectorClose006" parameterClass="java.util.HashMap" resultClass="java.lang.String">
	select t1.awb_no AWB_NO from   exp_pmanifest_awb t1, awb_lock t2
		where  t1.awb_no = t2.awb_no
		and    t1.flt_key = #FLT_KEY#
		and    t1.flt_date = TO_DATE(#SCH_DATE#, 'DDMONYY')
		and    t1.unldg_pt = #SECTOR#
		and    rownum = 1
	</select>
	<!-- Queries for PKG_PMAN.VAL_FLT_SECTOR_CLOSE End-->
	
	
	<!-- Queries for PKG_EXP_HHT.VAL_ACCPT_OBC Begins -->
	<select id="sqlValAccptObc001" parameterClass="java.util.HashMap" resultClass="java.lang.String">
	select 'X' from   cust_company
		where  ((#AGENT_NAME# is not null and code_desc = #AGENT_NAME#) 
					or (#CUST_CODE# is not null and code = #CUST_CODE#))
		and    agent_yn = 'Y'
	</select>
	<select id="sqlValAccptObc002" resultClass="java.lang.String">
	select to_char(sysdate,'DDMONYY')||to_char(sysdate,'DDMMYY') FROM DUAL
	</select>
	<select id="sqlValAccptObc003" parameterClass="java.lang.String" resultClass="java.lang.String">
	select 'X' from   awb
		where  awb_no = #AWB_NO#
		and    (awb_type = 'E' or awb_type = 'T')
		and    awb_closed_yn = 'N'
		and    car_yn = 'Y'
	</select>
	<!-- Queries for PKG_EXP_HHT.VAL_ACCPT_OBC End -->
<!--Mahesh BN Updates on 12.05.2011 & 13.05.2011 begin	-->
		<!-- 	Queries for Triger TRG_ULD_GROUP_CARR_INS begin-->
		<select id="sqlGetOneFromUldCarrType" parameterClass="java.util.HashMap" resultClass="java.lang.String">	
			SELECT 1 
   			FROM ULD_CARTYPE
   			WHERE CARR_CODE = #CARR_CODE# AND
         	ULD_TYPE  = #ULD_TYPE#
        </select>
        <insert id="sqlInsIntoUldCarType" parameterClass="java.util.HashMap">
        	INSERT INTO ULD_CARTYPE
            (CARR_CODE,ULD_TYPE,CONT_PLT)
            VALUES
            (#CARR_CODE#,#ULD_TYPE#,#CONT_PLT#)
        </insert>
        <!--		Queries for Triger TRG_ULD_GROUP_CARR_INS end-->
		<!--	    Queries for Triger edi_fhl_hawb_lic_per begin    -->
	    <select id="sqlGetEdiFhlDetails" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	        select AWB_NO, TO_CHAR(AWB_DATE,'DDMONYY') AWB_DATE,HAWB_NO, AWB_ORG, AWB_DEST
			from EDI_FHL h
			join EDI_FHL_HAWB ha on ha.tr_no = h.tr_no
			where h.tr_no = #TR_NO# and ha.DOC_LINE_NO = #HDOC_LINE_NO#
		</select>
		<insert id="sqlInsIntoCstLicenceTable" parameterClass="java.util.HashMap">
			insert into CST_LICENSE (AWB_NO, HAWB_NO, LICENSE, ACCS_SUBM_YN, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE, FLT_TYPE, AWB_DATE)
		    values(#AWB_NO#, #HAWB_NO#, #LIC_PER_NO#, 'N', #CR_USER_ID#, 
		    TO_DATE(#CR_DATE#,'DDMONYY'), #LM_USER_ID#, TO_DATE(#LM_DATE#,'DDMONYY'), decode(#AWB_ORG#, 'HKG', 'E', 'I'), TO_DATE(#AWB_DATE#,'DDMONYY'))
		</insert>
		<!--		Queries for Triger edi_fhl_hawb_lic_per end-->
<!--Mahesh BN Updates on 12.05.2011 & 13.05.2011 end	-->
<!--  Queries for trigger TRG_FLT_OPR_DEL -->
	<select id="sqlOprDelGetpmanAwb" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		select 'X'
          from   exp_pmanifest_awb
            where  flt_key = #FLT_KEY# 
            and    flt_date = TO_DATE(#SCH_DATE#,'DDMONYY')
            and    rownum = 1
	</select>
	<select id="sqlOprDelGetPmanTarmacAwb" parameterClass="java.util.HashMap" resultClass="java.lang.String">	
		select 'X'
	         from   exp_pman_tarmac_awb
	            where  flt_key = #FLT_KEY# 
              and  flt_date = TO_DATE(#SCH_DATE#,'DDMONYY')
              and  rownum = 1
	</select>
	<select id="sqlOprDelGetFltUld" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		select 'X'
		      from   exp_flt_uld
		            where  flt_key = #FLT_KEY# 
                and    flt_date = TO_DATE(#SCH_DATE#,'DDMONYY')
                and    rownum = 1
	</select>
	<select id="sqlOprDelGetFltOpr" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">                
		select count (1)		
			from   flt_opr
			where  carr_code = #CARR_CODE# 
			and    flt_no = #FLT_NO# 
			and    sch_date = TO_DATE(#SCH_DATE#,'DDMONYY')
			and    flt_key = #FLT_KEY#                
	</select>
	<delete id="sqlOprDelFltOprHist" parameterClass="java.util.HashMap">	
		delete from flt_opr_hist
			where  carr_code = #CARR_CODE#
			and    flt_no = #FLT_NO# 
			and    flt_key = #FLT_KEY# 
			and    flt_date = TO_DATE(#SCH_DATE#,'DDMONYY')  
	</delete>
	<delete id="sqlOprDelFltOprSeg" parameterClass="java.lang.String">
		delete from flt_opr_seg
			where  tr_no = #TR_NO#     
	 </delete>
	 <select id="sqlOprDelGetCntFltOpr" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		select count (1)		
			from   flt_opr a
			where  exists (
					   select b.flt_key || to_char (b.flt_date, 'DDMONYY') || decode (b.flt_type, 'E', 'D', 'I', 'A')
				   from   uld_inventory b
				   where  b.flt_key = b.flt_key 
				   and    to_char (a.sch_date, 'DDMONYY') = to_char (b.flt_date, 'DDMONYY')
				   and    a.flt_key = #FLT_KEY# 
				   and    a.sch_date = to_date(#SCH_DATE#, 'DDMONYY'))
	</select>				       
<!--  Queries for trigger TRG_FLT_OPR_DEL ends-->

	<!-- Queries for PKG_EXP_HHT.ACCPT_OBC Begins -->
	<select id="sqlAccptObc001" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select t1.tag_no TAG_NO, t2.tag_pcs TAG_PCS, t3.tag_wt TAG_WT, t4.rmk RMK
		from (select column_value tag_no, rownum r1 from   table(pkg_common.inlist(#TAG_LIST#))) t1,
			 (select column_value tag_pcs, rownum r2 from  table(pkg_common.inlist(#PCS_LIST#))) t2,
			 (select column_value tag_wt, rownum r3 from   table(pkg_common.inlist(#WT_LIST#))) t3,
			 (select column_value rmk, rownum r4 from      table(pkg_common.inlist_rmk(#RMK_LIST#))) t4
		where  t1.r1 = t2.r2
		and    t2.r2 = t3.r3
		and    t3.r3 = t4.r4
	</select>
	<select id="sqlAccptObc002" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select t1.itm_code ITM_CODE, t2.sec_pcs SEC_PCS, t3.sec_wt SEC_WT, t4.sec_payable_by SEC_PAYABLE_BY
		from (select column_value itm_code, rownum r1 from table(pkg_common.inlist(#SEC_ITEM_LIST#))
                    where  column_value is not null) t1,
			 (select column_value sec_pcs, rownum r2 from table(pkg_common.inlist(#SEC_PCS_LIST#))
                    where  column_value is not null) t2,
             (select column_value sec_wt, rownum r3 from table(pkg_common.inlist(#SEC_WT_LIST#))
                    where  column_value is not null) t3,
             (select column_value sec_payable_by, rownum r4 from table(pkg_common.inlist_rmk(#SEC_PAYABLE_BY_LIST#))
                    where  column_value is not null) t4
		where  t1.r1 = t2.r2
		and    t2.r2 = t3.r3
		and    t3.r3 = t4.r4
	</select>
	<select id="sqlAccptObc003" parameterClass="java.lang.String" resultClass="java.lang.String">
	select nvl(sum(column_value), 0) from table(pkg_common.inlist(#LIST#))
		where  column_value is not null
	</select>
	<select id="sqlAccptObc004" parameterClass="java.util.HashMap" resultClass="java.lang.String">
	select code_desc from cust_company
		where ((#AGENT_NAME# is not null and code_desc = #AGENT_NAME#) 
					or (#CUST_CODE# is not null and code = #CUST_CODE#))
		and    agent_yn = 'Y'
	</select>
	<select id="sqlAccptObc005" parameterClass="java.lang.String" resultClass="java.util.HashMap">
	select owned_inv, cfm_status from uld_inventory where uld_key = #ULD_BT_NO#
	</select>
	<update id="sqlAccptObc006" parameterClass="java.util.HashMap">
	update uld_inventory set owned_inv = 'Y', cfm_status = 'CONFIRMED', loc_code = #LOC_CODE#, ENTRY_TIME = sysdate 
		where uld_key = #ULD_BT_NO#
	</update>
	<insert id="sqlAccptObc007" parameterClass="java.util.HashMap">
	insert into uld_inventory(uld_key, flt_type, flt_key, flt_date, loc_code, condn_code, 
							  owner_id, strg_date, agent_inv, cfm_status, lm_user_id, lm_date)
		values (#ULD_BT_NO#, 'E', #FLT_KEY#, TO_DATE(#FLT_DATE#, 'DDMONYY'), #LOC_CODE#, 'SER', 
				'---', sysdate, 'N', 'CONFIRMED', #USER_ID#, sysdate)
	</insert>
	<insert id="sqlAccptObc008" parameterClass="java.util.HashMap">
	insert into exp_rcl_hd(rcl_no, rcl_date, awb_no, awb_dest, awb_content, ppk_type,
						   accpt_mode, carr_code, rcl_pcs, rcl_wt, cr_user_id, cr_date,
						   lm_user_id, lm_date, cust_no, flt_key, flt_date, truck_no,
						   spl_code1, spl_code2, spl_code3, spl_code4, spl_code5, spl_code6,
						   spl_code7, spl_code8, sec_check)
		values (#RCL_NO#, sysdate, #AWB_NO#, #DEST#, 'OUTBOUND OBC', #PPK_TYPE#,
				'LOB', #CARR_CODE#, NVL(#TOTAL_PCS#, 0), NVL(#TOTAL_WT#, 0), #USER_ID#, sysdate,
				#USER_ID#, sysdate, #AGENT_CODE#, #FLT_KEY#, TO_DATE(#FLT_DATE#, 'DDMONYY'), #TRUCK_NO#,
				#SPL_CODE1#, #SPL_CODE2#, #SPL_CODE3#, #SPL_CODE4#, #SPL_CODE5#, #SPL_CODE6#,
				#SPL_CODE7#, #SPL_CODE8#, 'Y')
	</insert>
	<insert id="sqlAccptObc009" parameterClass="java.util.HashMap">
	insert into exp_rcl_dtl(rcl_no, doc_line_no, ppk_type, loc_code, uld_key,
							contr_code, pcs, gross_wt, tare_wt, net_wt,
							cr_user_id, cr_date, lm_user_id, lm_date)
   		values (#RCL_NO#, 1, 'B', #LOC_CODE#, #ULD_BT_NO#,
               #CONTR_CODE#, NVL(#TOTAL_PCS#, 0), NVL(#TOTAL_WT#+#TARE_WT#, 0), NVL(#TARE_WT#, 0), NVL(#TOTAL_WT#, 0),
               #USER_ID#, sysdate, #USER_ID#, sysdate)
	</insert>
	<insert id="sqlAccptObc010" parameterClass="java.util.HashMap">
	insert into exp_rcl_obc(rcl_no, tag_no, tag_pcs, tag_wt, rmk,
							cr_user_id, cr_date, lm_user_id, lm_date)
		values (#RCL_NO#, #TAG_NO#, NVL(#TAG_PCS#, 0), NVL(#TAG_WT#, 0), #RMK#,
				#USER_ID#, sysdate, #USER_ID#, sysdate)
	</insert>
	<insert id="sqlAccptObc011" parameterClass="java.util.HashMap">
	insert into exp_car(awb_no, awb_date, awb_prfx, accept_mode, handler_code,
						catalog, carr_code, origin, dest, pcs, wt, content,
						agent_code, agent_name, security_option, spl_code1,
						spl_code2, spl_code3, spl_code4, spl_code5, spl_code6,
						spl_code7, spl_code8, cr_user_id, cr_date, lm_user_id,
						lm_date, sec_agent_name, sec_rc_code, sec_kc_code, sec_rmk, shpr_name)
		values (#AWB_NO#, TO_DATE(#AWB_DATE#, 'DDMONYY'), substr(#AWB_NO#, 1, 3), 'LOB', #ECT_HANDLER#,
				'EO', #CARR_CODE#, #ORIGIN#, #DEST#, NVL(#TOTAL_PCS#, 0), NVL(#TOTAL_WT#, 0), 'OUTBOUND OBC',
				#AGENT_CODE#, #AGENT_NAME#, 'FREIGHTER', nvl(#SPL_CODE1#, 'OBC'),
				#SPL_CODE2#, #SPL_CODE3#, #SPL_CODE4#, #SPL_CODE5#, #SPL_CODE6#,
				#SPL_CODE7#, #SPL_CODE8#, #USER_ID#, sysdate, #USER_ID#,
				sysdate, #SEC_AGENT_NAME#, #SEC_RA_CODE#, #SEC_KC_CODE#, #SEC_RMK#, #SEC_SHPR_NAME#)
	</insert>
	<insert id="sqlAccptObc012" parameterClass="java.util.HashMap">
	insert into exp_rcl_sec_chk_dtl(rcl_no, doc_line_no, sc_itm_code, sc_pcs, sc_wt,
									sc_paid_by, cr_user_id, cr_date, lm_user_id,
									lm_date, tr_type, tr_status)
		values (#RCL_NO#, #COUNT#, #ITM_CODE#, NVL(#SEC_PCS#, 0), NVL(#SEC_WT#, 0),
				#SEC_PAYABLE_BY#, #USER_ID#, sysdate, #USER_ID#,
				sysdate, 'T', 'T')
	</insert>
	<insert id="sqlAccptObc013" parameterClass="java.util.HashMap">
	insert into exp_car_sec(awb_no, awb_date, doc_line_no, itm_code, pcs, wt,
							payable_by, cr_user_id, cr_date, lm_user_id, lm_date)
							values (#AWB_NO#, TO_DATE(#AWB_DATE#, 'DDMONYY'), #COUNT#, #ITM_CODE#, NVL(#SEC_PCS#, 0), NVL(#SEC_WT#, 0),
							#SEC_PAYABLE_BY#, #USER_ID#, sysdate, #USER_ID#, sysdate)
	</insert>
	<insert id="sqlAccptObc014" parameterClass="java.util.HashMap">
	insert into exp_pmanifest_awb(flt_key, flt_date, unldg_pt, awb_no, awb_date,
								  group_no, bulk_pcs, bulk_wt, shp_type, cr_user_id,
								  cr_date, lm_user_id, lm_date, pman_pcs, pman_wt, unassigned_bulk_pcs, unassigned_bulk_wt)
		values (#FLT_KEY#, TO_DATE(#FLT_DATE#, 'DDMONYY'), #DEST#, #AWB_NO#, TO_DATE(#AWB_DATE#, 'DDMONYY'),
				1, NVL(#TOTAL_PCS#, 0), NVL(#TOTAL_WT#, 0),'OBC', #USER_ID#,
				sysdate, #USER_ID#, sysdate, #PMAN_PCS#, #PMAN_WT#, #UN_AS_BULK_PCS#, #UN_AS_BULK_WT#)
	</insert>
	<insert id="sqlAccptObc015" parameterClass="java.util.HashMap">
	insert into exp_pmanifest_uld(flt_key, flt_date, uld_bt_no, contr_code, ppk_type,
								  BLDUP_COMPLETE, unldg_pt, group_no, gross_wt, tare_wt,
								  shp_type, cr_user_id, cr_date, lm_user_id, lm_date,TRANSIT_FLG,HDLG_MODE)
		values (#FLT_KEY#, TO_DATE(#FLT_DATE#, 'DDMONYY'), #ULD_BT_NO#, #CONTR_CODE#, 'B',
				'N', #DEST#, '97', NVL(#TOTAL_WT#+#TARE_WT#, 0), NVL(#TERE_WT#, 0),
				'OBC', #USER_ID#, sysdate, #USER_ID#, sysdate,(SELECT TRANSIT_FLG FROM ULD_INVENTORY WHERE ULD_KEY=#ULD_BT_NO#),
				(SELECT HANDLING_MODE FROM ULD_INVENTORY WHERE ULD_KEY=#ULD_BT_NO#))
	</insert>
	<update id="sqlAccptObc016" parameterClass="java.util.HashMap">
	update exp_pmanifest_uld
		set gross_wt = gross_wt + NVL(#TOTAL_WT#,0),
		shp_type = 'OBC',group_no='97' 
		where  flt_key = #FLT_KEY#
		and    flt_date = TO_DATE(#FLT_DATE#, 'DDMONYY')
		and    uld_bt_no = #ULD_BT_NO#
	</update>
	<select id="sqlAccptObc017" parameterClass="java.util.HashMap" resultClass="java.lang.String">
	SELECT unldg_pt FROM exp_pmanifest_uld 
		where  flt_key = #FLT_KEY#
		and    flt_date = TO_DATE(#FLT_DATE#, 'DDMONYY')
		and    uld_bt_no = #ULD_BT_NO#
	</select>
	<insert id="sqlAccptObc018" parameterClass="java.util.HashMap">
	insert into exp_pmanifest_uld_awb(flt_key, flt_date, uld_bt_no, unldg_pt, awb_no,
									  awb_date, assigned_pcs, assigned_wt, cr_user_id,
									  cr_date, lm_user_id, lm_date)
		values (#FLT_KEY#, TO_DATE(#FLT_DATE#, 'DDMONYY'), #ULD_BT_NO#, #DEST#, #AWB_NO#,
               TO_DATE(#AWB_DATE#, 'DDMONYY'), NVL(#TOTAL_PCS#, 0), NVL(#TOTAL_WT#, 0), #USER_ID#,
               sysdate, #USER_ID#, sysdate)
	</insert>
	<select id="sqlAccptObc019" parameterClass="java.lang.String" resultClass="java.util.HashMap">
	SELECT * FROM exp_rcl_hd where  RCL_NO=#RCL_NO#
	</select>
	<select id="sqlAccptObc020" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select * from exp_pmanifest_uld
		where  flt_key = #FLT_KEY#
		and    flt_date = TO_DATE(#FLT_DATE#, 'DDMONYY')
		and    uld_bt_no = #ULD_BT_NO#
	</select>
	<!-- Queries for PKG_EXP_HHT.ACCPT_OBC End -->
	
	<!-- Queries for trigger  TRG_AI_IMP_SRF_FLT-->
	<select id="sqlAiSrfGetImpSrfFltDtl" parameterClass="java.util.HashMap">
		SELECT FLT_KEY, TO_CHAR(FLT_DATE,'DDMONYY') FLT_DATE, AWB_NO, TO_CHAR(AWB_DATE,'DDMONYY') AWB_DATE,
				SRF_NO,INV_PCS, INV_WT, LM_USER_ID
			FROM IMP_SRF_FLT S
			JOIN GT_CMS T ON T.COLUMN_1 = S.SRF_NO AND T.COLUMN_2 = S.FLT_KEY AND T.COLUMN_3 = S.FLT_DATE
	</select>		
	<select id="sqlAiSrfGetImpSrfFlt" parameterClass="java.lang.String" resultClass="java.util.HashMap">    
		SELECT FLT_KEY, TO_CHAR(FLT_DATE,'DDMONYY') FLT_DATE
				FROM (SELECT FLT_KEY, FLT_DATE
						FROM IMP_SRF_FLT
						WHERE SRF_NO = (SELECT SRF_NO FROM IMP_CDIF WHERE CDIF_NO = #FLT_KEY#)
						ORDER BY FLT_DATE) A
				WHERE ROWNUM = 1
	</select>			    
	<insert id="sqlAiSrfInsAwbEvents" parameterClass="java.util.HashMap">
		INSERT INTO AWB_EVENTS
		        (AWB_NO,AWB_DATE,EVENT_ID,
		        EVENT_DESC,
		        FLT_KEY,FLT_DATE,FLT_TYPE,TR_NO,
		        ULD_KEY,PCS,WT,
		        CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE)
		      VALUES
		        (#AWB_NO#,TO_DATE(#AWB_DATE#,'DDMONYY'),#EVENT_ID#,
		        (SELECT EVENT_DESC FROM MAST_AWB_EVENTS WHERE EVENT_ID = #EVENT_ID#),
		        #FLT_KEY#, TO_DATE(#FLT_DATE#,'DDMONYY'), 'I', #SRF_NO#,
		        NULL,#INV_PCS#,#INV_WT#,
		        #LM_USER_ID#,SYSDATE,#LM_USER_ID#,SYSDATE)
	</insert>	              
	<update id="sqlAiSrfUpdImpSchColl" parameterClass="java.util.HashMap">
		UPDATE IMP_SCH_COLL S
			SET STATUS = 'ISSUED'
			WHERE STATUS IN ('APPROVED')
				  AND S.AWB_NO = #AWB_NO# AND S.AWB_Date = TO_DATE(#AWB_DATE#,'DDMONYY') AND S.Flt_Key = #FLT_KEY# AND S.FLT_DATE = TO_DATE(#FLT_DATE#,'DDMONYY')
	</update>			  
<!-- Queries for trigger  TRG_AI_IMP_SRF_FLT ends-->  
	<!-- Queries for trigger TRG_UPD_ROLE_FUNC -->
	<select id="sqlRoleGetSecUserRole" parameterClass="java.lang.String" resultClass="java.util.HashMap">
		SELECT DISTINCT USER_ID, ROLE_NAME
		        FROM SEC_USER_ROLE
		       WHERE ROLE_NAME = #ROLE_NAME#
	</select>       
    <update id="sqlRoleUpdSecUserPriv" parameterClass="java.util.HashMap">   
		UPDATE SEC_USER_PRIVILEGES
		         SET ROLE_CODE     = #ROLE_CODE#,
		             FUNCTION_CODE = #FUNCTION_CODE#,
		             READ_YN       = #READ_YN#,
		             FULL_YN       = #FULL_YN#,
		             LM_USER_ID    = #LM_USER_ID#,
		             LM_DATE       = SYSDATE
		       WHERE ROLE_CODE = #OLD_ROLE_CODE# AND FUNCTION_CODE = #OLD_FUNCTION_CODE#
	</update>	       
	<insert id="sqlRoleInsSecUserPriv" parameterClass="java.util.HashMap">
		INSERT INTO SEC_USER_PRIVILEGES
		                     (USER_ID, ROLE_CODE, FUNCTION_CODE,
		                      READ_YN, FULL_YN,
		                      CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE
		                     )
		              VALUES (#USER_ID#, #ROLE_CODE#, #FUNCTION_CODE#,
		                      #READ_YN#, #FULL_YN#,
		                      #LM_USER_ID#, SYSDATE, #LM_USER_ID#, SYSDATE
		                     )
	</insert>		                     
	<delete id="sqlRoleDelSecUserPriv" parameterClass="java.util.HashMap">                     
		DELETE FROM SEC_USER_PRIVILEGES
			   WHERE ROLE_CODE     = #ROLE_CODE#
				 AND FUNCTION_CODE = #FUNCTION_CODE#
	</delete>				                      
	<!-- Queries for trigger TRG_UPD_ROLE_FUNC ends-->
	
	<!-- Queries for PKG_EXP_HHT.VAL_RCL_AWB_ULD Begin -->
	<select id="sqlValRclAwbUld001" parameterClass="java.lang.String" resultClass="java.util.HashMap">
	select nvl(resv_flg, 'N') RESV_FLG, nvl(owned_inv, 'N') OWNED_INV, nvl(agent_inv, 'N') AGENT_INV, empty_flg
		from   uld_inventory
		where  uld_key = #ULD_KEY#
	</select>
	<select id="sqlValRclAwbUld002" parameterClass="java.lang.String" resultClass="java.util.HashMap">
	select awb_no from exp_pre_rcl_brkdn where pre_rcl_no = #PRE_RCL_NO#
	</select>
	<select id="sqlValRclAwbUld003" parameterClass="java.lang.String" resultClass="java.lang.String">
	select carr_code from   mast_awb_prefix
		where  code = substr(#AWB_NO#, 1, 3)
		and    def_yn = 'Y'
		and    rownum = 1
	</select>
	<select id="sqlValRclAwbUld004" parameterClass="java.util.HashMap" resultClass="java.lang.String">
	select spl_code1, spl_code2, spl_code3 from   exp_pre_rcl_hd
		where  pre_rcl_no = #PRE_RCL_NO#
	</select>
	<parameterMap id="pkgExpValAwbLockedMap" class="java.util.HashMap">
		<parameter property="STATUS" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="OUT" />
		<parameter property="AWB_NO" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="IN" />
	</parameterMap>
	<procedure id="sqlPkgExpValAwbLocked" parameterMap="pkgExpValAwbLockedMap">
		{ ? = call pkg_exp_val.awb_locked(?)}
	</procedure>
	<!-- Queries for PKG_EXP_HHT.VAL_RCL_AWB_ULD End -->
	
	
	<select id="sqlFETCHOldPmanDtls" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select pman_bulk_pcs BULK_PCS, pman_bulk_wt BULK_WT, 
		pman_ppk_pcs PPK_PCS, pman_ppk_wt PPK_WT, 
		pman_mix_pcs MIX_PCS, pman_mix_wt MIX_WT
		from awb
		where  awb_no = #AWB_NO#
		and    awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')		
	</select>
	
	<!-- Queries for PKG_EXP_HHT.VAL_RCL_LOC Begin -->
	<select id="sqlValRclLoc001" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select t2.loc_code LOC_CODE, t3.pcs PCS, t4.gross_wt GROSS_WT, t5.net_wt NET_WT,
		   t6.tare_wt TARE_WT, t7.lsp_no LSP_NO, t8.uld_key ULD_KEY
		from   (select column_value loc_code, rownum r2
		        from   table(pkg_common.inlist(#LOC_CODE_LIST#))) t2,
		       (select column_value pcs, rownum r3
		        from   table(pkg_common.inlist(#PCS_LIST#))) t3,
		       (select column_value gross_wt, rownum r4
		        from   table(pkg_common.inlist(#GROSS_WT_LIST#))) t4,
		       (select column_value net_wt, rownum r5
		        from   table(pkg_common.inlist(#NET_WT_LIST#))) t5,
		       (select column_value tare_wt, rownum r6
		        from   table(pkg_common.inlist(#TARE_WT_LIST#))) t6,
		       (select column_value lsp_no, rownum r7
		        from   table(pkg_common.inlist(#LSP_NO_LIST#))) t7,
		       (select column_value uld_key, rownum r8
		        from   table(pkg_common.inlist(#ULD_KEY_LIST#))) t8
		where  t2.r2 = t3.r3
		and    t3.r3 = t4.r4
		and    t4.r4 = t5.r5
		and    t5.r5 = t6.r6
		and    t6.r6 = t7.r7
		and    t7.r7 = t8.r8
	</select>
	<parameterMap id="pkgExpValUldKeyPpkMap" class="java.util.HashMap">
		<parameter property="STATUS" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="OUT" />
		<parameter property="ULD_KEY" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="IN" />	
		<parameter property="CARR_CODE" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="IN" />				
	</parameterMap>	
	<procedure id="sqlPkgExpValUldKeyPpk" parameterMap="pkgExpValUldKeyPpkMap">
		{ ? = call pkg_exp_val.val_uld_key_ppk(?,?)}
	</procedure>
	<!-- Queries for PKG_EXP_HHT.VAL_RCL_LOC End -->
	
	<!-- Queries for PKG_EXP_HHT.GET_AWB_PRE_RCL_INFO Begin -->
	<select id="sqlGetAwbPreRclInfo001" parameterClass="java.lang.String" resultClass="java.util.HashMap">
	<![CDATA[
	select pre_rcl_no, carr_code, awb_dest, agent_code, agent_name, qcp_ind, RMK
	    from  (select t1.pre_rcl_no, t1.carr_code, t1.awb_dest, t1.rmk RMK,
	                  t2.code agent_code, t2.code_desc agent_name, t2.co_iata_code as iata_code,
	                  t1.qcp_ind, t1.qcp_contact_person, t1.qcp_contact_no, t1.qcp_contact_no, 
	                  t1.qcp_fax_no, t1.qcp_pcs, t1.qcp_wt, t1.qcp_goods_desc, t1.qcp_delv_date, 
	                  t1.qcp_delv_time
	                from   exp_pre_rcl_hd t1, cust_company t2
	                where  t1.cust_no = t2.code
	                and    t1.awb_no = #AWB_NO#
	                and    t1.status <> 'EXPIRED'
	                order by t1.cr_date desc)
		where   rownum = 1]]>
	</select>
    <select id="sqlGetAwbPreRclInfo002" parameterClass="java.lang.String" resultClass="java.util.HashMap">
    <![CDATA[
	select pre_rcl_no, carr_code, awb_dest, awb_content, agent_code, agent_name, qcp_ind, RMK
	    from (select t1.pre_rcl_no, t1.carr_code, t1.awb_dest, t1.awb_content, t1.rmk RMK,
	                 t1.truck_no, t1.qcp_ind, t1.flt_key, t1.flt_date, t2.code agent_code, 
	                 t2.code_desc agent_name
	              from   exp_rcl_hd t1, cust_company t2
	              where  t1.cust_no = t2.code(+)
	              and    t1.awb_no = p_awb_no
	              and    t1.status <> 'V'
	              and    t1.rcl_pcs - t1.rtn_pcs > 0
	              order by t1.cr_date desc)
	    where   rownum = 1]]>
	</select>
    <!-- Queries for PKG_EXP_HHT.GET_AWB_PRE_RCL_INFO End -->
    
    <!-- Queries for PKG_EXP_HHT.GET_AWB_PRE_RCL_INFO_MIX Begin -->
	<select id="sqlGetAwbPreRclInfoMix001" parameterClass="java.lang.String" resultClass="java.util.HashMap">
	<![CDATA[
	select pre_rcl_no, carr_code, awb_dest, agent_code, agent_name, qcp_ind, RMK
	    from (select t1.pre_rcl_no, t1.carr_code, t1.awb_dest, t1.rmk RMK,
	                 t2.code agent_code, t2.code_desc agent_name, t2.co_iata_code as iata_code,
	                 t1.qcp_ind, t1.qcp_contact_person, t1.qcp_contact_no, t1.qcp_contact_no, 
	                 t1.qcp_fax_no, t1.qcp_pcs, t1.qcp_wt, t1.qcp_goods_desc, t1.qcp_delv_date, 
	                 t1.qcp_delv_time
	              from   exp_pre_rcl_hd t1, cust_company t2
	              where  t1.cust_no = t2.code
	              and    t1.uld_key = #ULD_KEY#
	              and    t1.status <> 'EXPIRED'
	              order by t1.cr_date desc)
		where   rownum = 1]]>
	</select>
    <select id="sqlGetAwbPreRclInfoMix002" parameterClass="java.lang.String" resultClass="java.util.HashMap">
    <![CDATA[
	select pre_rcl_no, carr_code, awb_dest, awb_content, agent_code, agent_name, qcp_ind, RMK
	    from (select t1.pre_rcl_no, t1.carr_code, t1.awb_dest, t1.awb_content, t1.rmk RMK,
						       t1.truck_no, t1.qcp_ind, t1.flt_key, t1.flt_date, t2.code agent_code, 
	                 t2.code_desc agent_name
						from   exp_rcl_hd t1, cust_company t2
						where  t1.cust_no = t2.code(+)
						and    t1.uld_key = #ULD_KEY#
						and    t1.status <> 'V'
						and    t1.rcl_pcs - t1.rtn_pcs > 0
						order by t1.cr_date desc)
		where   rownum = 1]]>
	</select>
    <!-- Queries for PKG_EXP_HHT.GET_AWB_PRE_RCL_INFO_MIX End -->
    
    <!-- Queries for PKG_EXP_HHT.GET_AWB_FLT_INFO Begin -->
    <select id="sqlGetAwbFltInfo001" parameterClass="java.lang.String" resultClass="java.util.HashMap">
    select flt_key, to_char(flt_date, 'DDMONYY') FLT_DATE
    from   (select flt_key, flt_date, unldg_pt, pcs, net_wt, total_pcs
                from   edi_fbl t1, edi_fbl_shp t2
                where  t1.tr_no = t2.tr_no
                and    awb_no = #AWB_NO#
                order by flt_date desc)
		where  rownum = 1
	</select>
	<!-- Queries for PKG_EXP_HHT.GET_AWB_FLT_INFO End -->
	
	<!-- Queries for PKG_EXP_HHT.GET_ULD_FLT_INFO Begin -->
    <select id="sqlGetUldFltInfo001" parameterClass="java.lang.String" resultClass="java.util.HashMap">
	select flt_key, to_char(flt_date, 'DDMONYY') FLT_DATE
		from   (select flt_key, flt_date
                from   edi_fbl t1, edi_fbl_uld t2
                where  t1.tr_no = t2.tr_no
                and    uld_key = #ULD_KEY#
                order by flt_date desc)
		where  rownum = 1
	</select>
	<!-- Queries for PKG_EXP_HHT.GET_ULD_FLT_INFO End -->
	
	<!-- Queries for PKG_EXP_HHT.INS_RCL_MIX Begin -->
	<select id="sqlInsRclMix001" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select sc_itm_code, sc_pcs, sc_wt, sc_paid_by
    from  (select column_value sc_itm_code, rownum r1
                from   table(pkg_common.inlist(#SC_ITM_CODE_LIST#))
                where  column_value is not null) t1,
          (select column_value sc_pcs, rownum r2
                from   table(pkg_common.inlist(#SC_PCS_LIST#))) t2,
          (select column_value sc_wt, rownum r3
                from   table(pkg_common.inlist(#SC_WT_LIST#))) t3,
          (select column_value sc_paid_by, rownum r4
                from   table(pkg_common.inlist(#SC_PAID_BY_LIST#))) t4
    where  t1.r1 = t2.r2
    and    t2.r2 = t3.r3
    and    t3.r3 = t4.r4
	</select>
	<insert id="sqlInsRclMix002" parameterClass="java.util.HashMap">
	insert into exp_rcl_hd(rcl_no, rcl_date, ppk_type, uld_key, awb_dest, 
	            awb_content, rcl_pcs, rcl_wt, carr_code, spl_code1, spl_code2, 
	            spl_code3, spl_code4, spl_code5, spl_code6, spl_code7, spl_code8, 
	            spl_code9, sec_ra_no, sec_kc_no, sec_agent_name, sec_rmk, cust_no, 
	            aside_accept, qcp_ind, sec_check, dut_commodity, truck_no, rmk, 
	            accpt_mode, pre_rcl_no, cr_user_id, cr_date, lm_user_id, lm_date)
	    values (#RCL_NO#, sysdate, 'M', #ULD_KEY#, #AWB_DEST#,
	            #AWB_CONTENT#, 1, #NET_WT#, #CARR_CODE#, #SPL_CODE1#, #SPL_CODE2#, 
	            #SPL_CODE3#, #SPL_CODE4#, #SPL_CODE5#, #SPL_CODE6#, #SPL_CODE7#, #SPL_CODE8#,
	            #SPL_CODE9#, #SEC_RA_NO#, #SEC_KC_NO#, #SEC_AGENT_NAME#, #SEC_RMK#, #CUST_NO#,
	            #ASIDE_ACCEPT#, #QCP_IND#, #SEC_CHECK#, #DUT_COMMODITY#, #TRUCK_NO#, #RMK#,
	            'LCA', #PRE_RCL_NO#, #USER_ID#, sysdate, #USER_ID#, sysdate)
	</insert>
	<insert id="sqlInsRclMix003" parameterClass="java.util.HashMap">
	insert into exp_rcl_dtl(rcl_no, doc_line_no, ppk_type, uld_key, pre_rcl_no, 
	                        loc_code, pcs, net_wt, gross_wt, tare_wt, contr_code,
	                        cr_user_id, cr_date, lm_user_id, lm_date)
	    values (#RCL_NO#, 1, 'M', #ULD_KEY#, #PRE_RCL_NO#, 
	            #LOC_CODE#, 1, #NET_WT#, #GROSS_WT#, #TARE_WT#, #CONTR_CODE#,
	            #USER_ID#, sysdate, #USER_ID#, sysdate)
	</insert>
	<!-- Queries for PKG_EXP_HHT.INS_RCL_MIX End -->
	
	<!-- Queries for PKG_EXP_HHT.VAL_RCL_HD Begin -->
	<select id="sqlValRclHd001" parameterClass="java.lang.String" resultClass="java.lang.String">
	select 'X' from   mast_arpt where  code = #AWB_DEST#
	</select>
	<!-- Queries for PKG_EXP_HHT.VAL_RCL_HD End -->
	
	<!-- Queries for PKG_EXP_HHT.INS_RCL_PPK Begin -->
	<select id="sqlInsRclPpk001" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select t2.loc_code LOC_CODE, t3.pcs PCS, t4.gross_wt GROSS_WT, t5.net_wt NET_WT, 
		   t6.tare_wt TARE_WT, t7.lsp_no LSP_NO, t8.uld_key ULD_KEY, t9.contr_code CONTR_CODE
		from   (select column_value loc_code, rownum r2
		        from   table(pkg_common.inlist(#LOC_CODE_LIST#))) t2,
		       (select column_value pcs, rownum r3
		        from   table(pkg_common.inlist(#PCS_LIST#))) t3,
		       (select column_value gross_wt, rownum r4
		        from   table(pkg_common.inlist(#GROSS_WT_LIST#))) t4,
		       (select column_value net_wt, rownum r5
		        from   table(pkg_common.inlist(#NET_WT_LIST#))) t5,
		       (select column_value tare_wt, rownum r6
		        from   table(pkg_common.inlist(#TARE_WT_LIST#))) t6,
		       (select column_value lsp_no, rownum r7
		        from   table(pkg_common.inlist(#LSP_NO_LIST#))) t7,
		       (select column_value uld_key, rownum r8
		        from   table(pkg_common.inlist(#ULD_KEY_LIST#))) t8,
		       (select column_value contr_code, rownum r9
		        from   table(pkg_common.inlist(#CONTR_CODE_LIST#))) t9
		where  t2.r2 = t3.r3
		and    t3.r3 = t4.r4
		and    t4.r4 = t5.r5
		and    t5.r5 = t6.r6
		and    t6.r6 = t7.r7
		and    t7.r7 = t8.r8
		and    t8.r8 = t9.r9
    </select>
    <select id="sqlInsRclPpk002" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
    select sc_itm_code, sc_pcs, sc_wt, sc_paid_by
	    from   (select column_value sc_itm_code, rownum r1
	            from   table(pkg_common.inlist(#SC_ITM_CODE_LIST#))
	            where  column_value is not null) t1,
	           (select column_value sc_pcs, rownum r2
	            from   table(pkg_common.inlist(#SC_PCS_LIST#))) t2,
	           (select column_value sc_wt, rownum r3
	            from   table(pkg_common.inlist(#SC_WT_LIST#))) t3,
	           (select column_value sc_paid_by, rownum r4
	            from   table(pkg_common.inlist(#SC_PAID_BY_LIST#))) t4
	    where  t1.r1 = t2.r2
	    and    t2.r2 = t3.r3
	    and    t3.r3 = t4.r4
    </select>
    <insert id="sqlInsRclPpk003" parameterClass="java.util.HashMap">
	insert into exp_rcl_hd(rcl_no, rcl_date, ppk_type, awb_no, awb_dest, 
	                       awb_content, rcl_pcs, rcl_wt, carr_code, spl_code1, spl_code2, 
	                       spl_code3, spl_code4, spl_code5, spl_code6, spl_code7, spl_code8,
	                       spl_code9, sec_ra_no, sec_kc_no, sec_agent_name, sec_rmk, cust_no, 
	                       aside_accept, qcp_ind, sec_check, dut_commodity, truck_no, rmk, 
	                       accpt_mode, pre_rcl_no, cr_user_id, cr_date, lm_user_id, lm_date)
	      values (#RCL_NO#, sysdate, 'P', #ULD_KEY#, #AWB_DEST#,
	              #AWB_CONTENT#, #RCL_PCS#, #RCL_WT#, #CARR_CODE#, #SPL_CODE1#, #SPL_CODE2#,
	              #SPL_CODE3#, #SPL_CODE4#, #SPL_CODE5#, #SPL_CODE6#, #SPL_CODE7#, #SPL_CODE8#,
		          #SPL_CODE9#, #SEC_RA_NO#, #SEC_KC_NO#, #SEC_AGENT_NAME#, #SEC_RMK#, #CUST_NO#,
	              #ASIDE_ACCEPT#, #QCP_IND#, #SEC_CHECK#, #DUT_COMMODITY#, #TRUCK_NO#, #RMK#,
		          'LCA', #PRE_RCL_NO#, #USER_ID#, sysdate, #USER_ID#, sysdate)
	</insert>
	<insert id="sqlInsRclPpk004" parameterClass="java.util.HashMap">
	insert into exp_rcl_dtl(rcl_no, doc_line_no, ppk_type, uld_key, contr_code, 
	                        pre_rcl_no, loc_code, lsp_no, pcs, net_wt, gross_wt, 
	                        tare_wt, cr_user_id, cr_date, lm_user_id, lm_date)
	      values (#RCL_NO#, #COUNT#, 'P', #ULD_KEY#, #CONTR_CODE#, 
	              #PRE_RCL_NO#, #LOC_CODE#, #LSP_NO#, #PCS#, #NET_WT#, #GROSS_WT#, 
	              #TARE_WT#, #USER_ID#, sysdate, #USER_ID#, sysdate)
	</insert>
	<!-- Queries for PKG_EXP_HHT.INS_RCL_BULK Begin -->
    <select id="sqlInsRclBulk001" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
    select t1.length LENGTH, t2.width WIDTH, t3.height HEIGHT, t4.pcs PCS
                                from   (select column_value length, rownum r1
                                            from   table(pkg_common.inlist(#DMN_LENGTH_LIST#))) t1,
                                       (select column_value width, rownum r2
                                            from   table(pkg_common.inlist(#DMN_WIDTH_LIST#))) t2,
                                       (select column_value height, rownum r3
                                            from   table(pkg_common.inlist(#DMN_HEIGHT_LIST#))) t3,
                                       (select column_value pcs, rownum r4
                                            from   table(pkg_common.inlist(#DMN_PCS_LIST#))) t4
                                where  t1.r1 = t2.r2
                                and    t2.r2 = t3.r3
                                and    t3.r3 = t4.r4
                </select>
                <insert id="sqlInsRclBulk002" parameterClass="java.util.HashMap">
                insert into exp_rcl_hd(rcl_no, rcl_date, ppk_type, awb_no, awb_dest,
                       awb_content, rcl_pcs, rcl_wt, carr_code, spl_code1, spl_code2,
                       spl_code3, spl_code4, spl_code5, spl_code6, spl_code7, spl_code8,
                       spl_code9, sec_ra_no, sec_kc_no, sec_agent_name, sec_rmk, cust_no,
                       aside_accept, hcarry_ind, qcp_ind, sec_check, dut_commodity, truck_no,
                       rmk, accpt_mode, pre_rcl_no, cr_user_id, cr_date, lm_user_id, lm_date)
                    values (#RCL_NO#, sysdate, 'B', #AWB_NO#, #AWB_DEST#,
                            #AWB_CONTENT#, #RCL_PCS#, #RCL_WT#, #CARR_CODE#, #SPL_CODE1#, #SPL_CODE2#,
                            #SPL_CODE3#, #SPL_CODE4#, #SPL_CODE5#, #SPL_CODE6#, #SPL_CODE7#, #SPL_CODE8#,
                            #SPL_CODE9#, #SEC_RA_NO#, #SEC_KC_NO#, #SEC_AGENT_NAME#, #SEC_RMK#, #CUST_NO#,
                            #ASIDE_ACCEPT#, #HCARRY_IND#, #QCP_IND#, #SEC_CHECK#, #DUT_COMMODITY#, #TRUCK_NO#,
                            #RMK#, 'LCA', #PRE_RCL_NO#, #USER_ID#, sysdate, #USER_ID#, sysdate)
                </insert>
                <insert id="sqlInsRclBulk003" parameterClass="java.util.HashMap">
                insert into exp_rcl_dtl(rcl_no, doc_line_no, ppk_type, uld_key, pre_rcl_no, 
                         loc_code, lsp_no, pcs, net_wt, gross_wt, tare_wt, 
                         cr_user_id, cr_date, lm_user_id, lm_date)
                                values (#RCL_NO#, #COUNT#, 'B', #ULD_KEY#, #PRE_RCL_NO#, 
                                        #LOC_CODE#, #LSP_NO#, #PCS#, #NET_WT#, #GROSS_WT#, #TARE_WT#,
                                        #USER_ID#, sysdate, #USER_ID#, sysdate)
                </insert>
                <insert id="sqlInsRclBulk004" parameterClass="java.util.HashMap">
                insert into exp_rcl_dmn(rcl_no, doc_line_no, length, width, height, pcs,
                        tr_type, cr_user_id, cr_date, lm_user_id, lm_date)
                                values (#RCL_NO#, #COUNT#, #LENGTH#, #WIDTH#, #HEIGHT#, #PCS#,
                                        'RC', #USER_ID#, sysdate, #USER_ID#, sysdate)
                </insert>
                <!-- Queries for PKG_EXP_HHT.INS_RCL_BULK End -->
	
    <!-- Queries for PKG_EXP_HHT.INS_RCL_PPK End -->
    <!-- Queries for Package PKG_TRM -->
	<select id="sqlPkgTrmGetImpTrmHd" parameterClass="java.lang.String" resultClass="java.util.HashMap">
		SELECT TRANSF_CARR, RECD_CARR, TRM_TYPE, STATUS 
			FROM IMP_TRM_HD WHERE TRM_NO = #TRM_NO#
	</select>
	<select id="sqlPkgTrmGetMastCarr" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		SELECT COUNT(1) 
				 FROM MAST_CARRIER WHERE CODE = #CARR_CODE# AND OWNED_CARR = 'Y'  
	</select>
	<insert id="sqlPkgTrmInsAwbMov" parameterClass="java.util.HashMap">		     	
		INSERT INTO AWB_MOV
		           (AWB_NO, AWB_DATE, CARR_CODE, FLT_NO, FLT_DATE, FLT_TYPE, FLT_KEY, SRF_NO,
		            TRM_NO, CDIF_NO, LSP_NO, ULD_TYPE, ULD_NO, ULD_CARR, ULD_KEY, LOC_CODE,
		            LOC_PCS, LOC_WT, STRG_DATE, RETRV_DATE, MOV_DATE, MOV_FROM, MOV_TO, PPK_IND,
		            BULK_WT, BUP_WT, TR_NO, DOC_LINE_NO, TR_TYPE, TR_STATUS, CR_USER_ID, CR_DATE, LM_USER_ID,
		            LM_DATE, SEQ_NO, EVENT_ID)
			SELECT AWB_NO, AWB_DATE, CARR_CODE, FLT_NO, FLT_DATE, FLT_TYPE, FLT_KEY, SRF_NO,
					TRM_NO, CDIF_NO, LSP_NO, null, null, null, ULD_KEY, LOC_CODE,
					LOCN_PCS, LOCN_WT, sysdate, null, sysdate, LOC_CODE, null, PPK_IND,
					BULK_WT, BUP_WT, #TRM_NO#, rownum, 'TR', 'A', LM_USER_ID, sysdate, LM_USER_ID,
		            sysdate, awb_mov_seq.nextval, 'PST'
			    FROM AWB_INVENTORY 
		            WHERE TRM_NO = #TRM_NO#
	</insert>
	<insert id="sqlPkgTrmInsImpTrmAwbInv" parameterClass="java.util.HashMap">
		INSERT INTO IMP_TRM_AWB_INVENTORY 
					   		  (TRM_NO, TRM_TYPE, AWB_NO, AWB_DATE, CARR_CODE, CATALOG, CC_CODE, ULD_KEY, LSP_NO, LOC_CODE, 
							  LOCN_PCS, LOCN_WT, FLT_DATE, FLT_KEY, CR_USER_ID, CR_DATE, DAM_IND, PPK_IND)
		   SELECT TRM_NO, #TRM_TYPE#, AWB_NO, AWB_DATE, CARR_CODE, CATALOG, CC_CODE, ULD_KEY, LSP_NO, LOC_CODE, 
		   		  NVL(LOCN_PCS,0), NVL(LOCN_WT,0), FLT_DATE, FLT_KEY, CR_USER_ID, CR_DATE, DAM_IND, PPK_IND 
		   FROM AWB_INVENTORY 
		   WHERE TRM_NO = #TRM_NO#            
	</insert>
	<delete id="sqlPkgTrmDelAwbInv" parameterClass="java.lang.String">		
		DELETE FROM AWB_INVENTORY WHERE TRM_NO = #TRM_NO#			
	</delete>
	<select id="sqlPkgTrmGetImpTrmDtl" parameterClass="java.lang.String" resultClass="java.util.HashMap"> 
		SELECT AWB_NO, TO_CHAR(AWB_DATE,'DDMONYY') AWB_DATE, NVL(PCS,0) PCS, NVL(WT,0) WT, TRM_NO FROM IMP_TRM_DTL WHERE TRM_NO = #TRM_NO#
	</select>
	<select id="sqlPkgTrmGetAwbInv" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT SEQ_NO, NVL(LOCN_PCS,0) LOCN_PCS, NVL(LOCN_WT,0) LOCN_WT FROM AWB_INVENTORY WHERE TRM_NO = #TRM_NO# AND AWB_NO = #AWB_NO# AND AWB_DATE = TO_DATE(#AWB_DATE#,'DDMONYY')
	</select>		
	<select id="sqlPkgTrmGetUldInv" parameterClass="java.lang.String" resultClass="java.util.HashMap">			
		SELECT CFM_STATUS, FLT_TYPE 
				FROM ULD_INVENTORY WHERE ULD_KEY = #ULD_KEY# 
	</select>
	<select id="sqlPkgTrmGetAwbInvCount" parameterClass="java.lang.String" resultClass="java.lang.Integer">		    
		SELECT COUNT(1) 
				FROM AWB_INVENTORY I
				JOIN IMP_CAR_AWB A ON A.AWB_NO = I.AWB_NO AND A.AWB_DATE = I.AWB_DATE
				WHERE ULD_KEY = #ULD_KEY#   AND A.CATALOG LIKE 'T%' 
	</select>

	<select id="sqlPkgTrmGetAwbInv2" parameterClass="java.lang.String" resultClass="java.util.HashMap">		
		SELECT SUM(LOCN_PCS) LOCN_PCS, SUM(LOCN_WT) LOCN_WT, COUNT(*) COUNT	
			FROM AWB_INVENTORY WHERE ULD_KEY = #ULD_KEY#
	</select>
	<insert id="sqlPkgTrmInsExpRclHd" parameterClass="java.util.HashMap">					  
		INSERT INTO EXP_RCL_HD (RCL_NO, RCL_DATE, PPK_TYPE
					, RCL_PCS, RCL_WT, RCL_FBL, CARR_CODE, ULD_KEY, HCARRY_IND, REF_TRM_NO, TRANS_CARR_CODE
					, ACCPT_MODE, STATUS, TR_TYPE, TR_STATUS, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE)
					SELECT #RCL_NO#, SYSDATE, 'M'
					, #LOCN_PCS#, #LOCN_WT#, 'N', #CARR_CODE#, ULD_KEY, 'N', #TRM_NO#, #TRANSF_CARR#
					, 'TIL', 'S', 'RC', 'N', #LM_USER_ID#, SYSDATE, #LM_USER_ID#, SYSDATE
					FROM ULD_INVENTORY WHERE ULD_KEY = #ULD_KEY#  
	</insert>		      
	<insert id="sqlPkgTrmInsExpRclDtl" parameterClass="java.util.HashMap">	
		INSERT INTO EXP_RCL_DTL ( RCL_NO, DOC_LINE_NO, PPK_TYPE, ULD_TYPE, ULD_NO, ULD_CARR
				, ULD_KEY, LOC_CODE, PCS, NET_WT, GROSS_WT, TARE_WT, CONTR_CODE
				, TR_TYPE, TR_STATUS, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE )
				SELECT #RCL_NO#, 1, 'M', ULD_TYPE, ULD_NO, ULD_CARR
				, ULD_KEY, LOC_CODE, NVL(#LOCN_PCS#,0), NVL(#LOCN_WT#,0) - NVL(TARE_WEIGHT, 0), NVL(#LOCN_WT#,0), nvl(TARE_WEIGHT, 0), CONTR_CODE
				, 'T', 'T', #LM_USER_ID#,  SYSDATE, #LM_USER_ID#, SYSDATE
				FROM ULD_INVENTORY
				WHERE ULD_KEY = #ULD_KEY#
	</insert>		    
		
	<select id="sqlPkgTrmGetAwbInv3" parameterClass="java.lang.String" resultClass="java.util.HashMap">	    
		SELECT AWB_NO, TO_CHAR(AWB_DATE,'DDMONYY') AWB_DATE, MIN(CARR_CODE) CARR_CODE, SUM(LOCN_PCS) LOCN_PCS, SUM(LOCN_WT) LOCN_WT
					  FROM AWB_INVENTORY
					  WHERE ULD_KEY = #ULD_KEY# 
					  GROUP BY AWB_NO, AWB_DATE  
	</select>
	<select id="sqlPkgTrmGetImpCarAwb" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">		
		SELECT AWB_NO, TO_CHAR(AWB_DATE,'DDMONYY') AWB_DATE,AWB_PRFX, CATALOG, AWB_ORIGIN, AWB_DEST, CONTENT, APPNTD_AGENT, SPL_CODE1, ECT_HANDLER 
		      FROM IMP_CAR_AWB
						  WHERE AWB_NO = #AWB_NO# AND AWB_DATE = TO_DATE(#AWB_DATE#,'DDMONYY')
	</select>
	<update id="sqlPkgTrmUpdExpCar" parameterClass="java.util.HashMap">			
		UPDATE EXP_CAR
				SET PCS = PCS + NVL(#LOCN_PCS#,0),
					WT	= WT + NVL(#LOCN_WT#,0)
				WHERE AWB_NO = #AWB_NO# AND AWB_DATE = TO_DATE(#AWB_DATE#,'DDMONYY')   
    </update>
    <insert id="sqlPkgTrmInsExpCar" parameterClass="java.util.HashMap">    
		INSERT INTO EXP_CAR ( AWB_NO, AWB_DATE, AWB_PRFX, ACCEPT_MODE, HANDLER_CODE, CATALOG
							, CARR_CODE, ORIGIN, DEST, PCS, WT, CONTENT, AGENT_NAME
							, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE )
							VALUES(#AWB_NO#, TO_DATE(#AWB_DATE#,'DDMONYY'), #AWB_PRFX#, 'TIL', NVL(#ECT_HANDLER#, 'CATHAY'), #CATALOG#
							, #CARR_CODE#, #AWB_ORIGIN#, #AWB_DEST#, NVL(#LOCN_PCS#,0), NVL(#LOCN_WT#,0), #CONTENT#, #APPNTD_AGENT#
							, #LM_USER_ID#, SYSDATE, #LM_USER_ID#, SYSDATE)      
	</insert>
	<insert id="sqlPkgTrmInsExpRclBrkdn" parameterClass="java.util.HashMap">		
		INSERT INTO EXP_RCL_BRKDN( RCL_NO, AWB_NO, AWB_DATE, ULD_KEY, PCS, WEIGHT, DEST, SPL_CODE1
							, CONTENT, TR_TYPE, TR_STATUS, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE, TRM_IND)
							VALUES (
							#RCL_NO#, #AWB_NO#,  TO_DATE(#AWB_DATE#,'DDMONYY'), #ULD_KEY#, NVL(#LOCN_PCS#,0), NVL(#LOCN_WT#,0), #AWB_DEST#, #SPL_CODE1#
							, #CONTENT#, 'A', 'A', #LM_USER_ID#, SYSDATE, #LM_USER_ID#, SYSDATE, 'Y') 
	</insert>
	
	<insert id="sqlPkgTrmInsAwbMov2" parameterClass="java.util.HashMap">		          
		INSERT INTO AWB_MOV
			           (AWB_NO, AWB_DATE, CARR_CODE, FLT_NO, FLT_DATE, FLT_TYPE, FLT_KEY, SRF_NO,
			            TRM_NO, CDIF_NO, LSP_NO, ULD_TYPE, ULD_NO, ULD_CARR, ULD_KEY, LOC_CODE,
			            LOC_PCS, LOC_WT, STRG_DATE, RETRV_DATE, MOV_DATE, MOV_FROM, MOV_TO, PPK_IND,
			            BULK_WT, BUP_WT, TR_NO, DOC_LINE_NO, TR_TYPE, TR_STATUS, CR_USER_ID, CR_DATE, LM_USER_ID,
			            LM_DATE, SEQ_NO, EVENT_ID)
				    SELECT AWB_NO, AWB_DATE, CARR_CODE, FLT_NO, FLT_DATE, FLT_TYPE, FLT_KEY, SRF_NO,
						TRM_NO, CDIF_NO, LSP_NO, null, null, null, ULD_KEY, LOC_CODE,
						LOCN_PCS, LOCN_WT, sysdate, null, sysdate, LOC_CODE, null, PPK_IND,
						BULK_WT, BUP_WT, nvl(TRM_NO, ULD_KEY), rownum, 'TR', 'A', #LM_USER_ID#, sysdate, #LM_USER_ID#,
			            sysdate, awb_mov_seq.nextval, 'PST'
				    FROM AWB_INVENTORY 
				    WHERE ULD_KEY = #ULD_KEY# 
	</insert>
		
	<delete id="sqlPkgTrmDelAwbInv2" parameterClass="java.lang.String">		        
		delete FROM AWB_INVENTORY
					  WHERE ULD_KEY = #ULD_KEY#      
	</delete>
	<update id="sqlPkgTrmUpdUldInv" parameterClass="java.util.HashMap">		
		UPDATE ULD_INVENTORY
					SET IMP_FLT_NO = FLT_NO,
						IMP_FLT_KEY = FLT_KEY,
						IMP_FLT_DATE = FLT_DATE,
						IMP_FLT_CARR = CARR_CODE,
						FLT_NO = NULL,
						FLT_TYPE = 'E',
						FLT_KEY = NULL,
						FLT_DATE = NULL,
						OWNER_ID = #CARR_CODE#
					WHERE  ULD_KEY = #ULD_KEY#
					AND    FLT_TYPE = 'I'        
	</update>
	<select id="sqlPkgTrmGetCatalog" parameterClass="java.util.HashMap" resultClass="java.lang.String">		
		SELECT CATALOG 
					FROM IMP_CAR_AWB
					WHERE AWB_NO = #AWB_NO# AND AWB_DATE = TO_DATE(#AWB_DATE#,'DDMONYY')
	</select>
	
	<insert id="sqlPkgTrmInsExpRclHd2" parameterClass="java.util.HashMap">		      
		INSERT INTO EXP_RCL_HD ( RCL_NO, RCL_DATE, AWB_NO, AWB_DATE, PPK_TYPE, AWB_DEST, AWB_CONTENT
					, RCL_PCS, RCL_WT, RCL_FBL, CARR_CODE, PRT_CODE, HCARRY_IND, TRUCK_NO, REF_TRM_NO, TRANS_CARR_CODE
					, SEC_AGENT_NO, ACCPT_MODE, STATUS, TR_TYPE, TR_STATUS, CR_USER_ID
					, CR_DATE, LM_USER_ID, LM_DATE)
					SELECT #RCL_NO#, SYSDATE, AWB_NO, AWB_DATE, 'B', DEST, CONTENT
					, NVL(#TOTAL_PCS#,0), NVL(#TOTAL_WT#,0), 'N', #CARR_CODE#, NULL, 'N', null, #TRM_NO#, #TRANSF_CARR#
					, NULL, 'TIL', 'S', 'RC', 'N', #LM_USER_ID#
					, SYSDATE, #LM_USER_ID#, SYSDATE
					FROM AWB WHERE AWB_NO = #AWB_NO# AND AWB_DATE = TO_DATE(#AWB_DATE#,'DDMONYY') 
	</insert>
	<select id="sqlPkgTrmGetExpRclHd" parameterClass="java.lang.String" resultClass="java.util.HashMap">		          
		SELECT TO_CHAR(AWB_DATE,'DDMONYY') AWB_DATE FROM EXP_RCL_HD WHERE RCL_NO = #RCL_NO#
	</select>
	<select id="sqlPkgTrmGetAwbInv4" parameterClass="java.lang.String" resultClass="java.util.HashMap">		
		SELECT LOC_CODE, ULD_KEY, LSP_NO
					  FROM AWB_INVENTORY
					  WHERE SEQ_NO = #SEQ_NO#
	</select>
	<insert id="sqlPkgTrmInsExpRclDtl2" parameterClass="java.util.HashMap">		        
		INSERT INTO EXP_RCL_DTL (RCL_NO, DOC_LINE_NO, PPK_TYPE, LOC_CODE, ULD_KEY, LSP_NO,
							PCS, NET_WT, GROSS_WT, TARE_WT, FSCALE_WT, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE )
							VALUES (#RCL_NO#, #SNO#, 'B', #LOC_CODE#, #ULD_KEY#, #LSP_NO#,
							#PCS#, #WT#, #WT#, 0, #WT#, #LM_USER_ID#,  SYSDATE, #LM_USER_ID#,  SYSDATE)       
	</insert>
	<update id="sqlPkgTrmUpdAwbInv" parameterClass="java.util.HashMap">		          
		UPDATE AWB_INVENTORY
						SET LOCN_PCS = LOCN_PCS - NVL(#PCS#,0),
							LOCN_WT = LOCN_WT - NVL(#WT#,0),
					        REF_TR_NO      = TRM_NO,
					        REF_TR_TYPE    = 'AS',
					        REF_TR_DATE    = sysdate,
					        REF_DOC_LINE_NO  = 1,
		        			REF_TR_EVENT     = 'PST'
						WHERE SEQ_NO = #SEQ_NO#
	</update>
	<select id="sqlPkgTrmGetLocnPcs" parameterClass="java.lang.String" resultClass="java.lang.String">			
		select LOCN_PCS from AWB_INVENTORY where  SEQ_NO = #SEQ_NO#
	</select>
	<select id="sqlPkgTrmGetExpRclHd2" parameterClass="java.lang.String" resultClass="java.util.HashMap">		 
		SELECT TO_CHAR(AWB_DATE,'DDMONYY') AWB_DATE FROM EXP_RCL_HD WHERE RCL_NO = #RCL_NO#
	</select>
	<delete id="sqlPkgTrmDelAwbInv3" parameterClass="java.lang.String">		
		DELETE FROM AWB_INVENTORY WHERE SEQ_NO = #SEQ_NO#
	</delete>	
	<select id="sqlPktTrmGetOldExpCar" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	select AWB_NO	,
		TO_CHAR(AWB_DATE,'DDMONYY')  AWB_DATE	,
		ACCEPT_MODE 	,
		CATALOG	,
		CARR_CODE	,
		ORIGIN	,
		DEST	,
		PCS	OLD_PCS,
		WT	OLD_WT,
		CONTENT	,
		SHIPPER_CODE	,
		AGENT_CODE	,
		SPL_CODE1 NEW_SPL_CODE1	,
		SPL_CODE2 NEW_SPL_CODE2	,
		SPL_CODE3 NEW_SPL_CODE3	,
		SPL_CODE4 NEW_SPL_CODE4	,
		SPL_CODE5 NEW_SPL_CODE5	,
		SPL_CODE6 NEW_SPL_CODE6	,
		SPL_CODE7 NEW_SPL_CODE7	,
		SPL_CODE8 NEW_SPL_CODE8	,
		SPL_CODE9 NEW_SPL_CODE9	,
		AGENT_NAME	
		from exp_car
	WHERE AWB_NO = #AWB_NO# AND AWB_DATE = TO_DATE(#AWB_DATE#,'DDMONYY') 
	</select>
	<!-- Queries for Package PKG_TRM ends-->
<!--	Mahesh BN Updates for package pkg.offload.pkg from 16.05.2011 to 25.05.2011 begin-->
	<!--		Queries for procedure pkg.offload.upd_preoffload_awb begin-->
	<select id="sqlGetPpkTypee" parameterClass="java.util.HashMap" resultClass="java.lang.String">
			select decode(ppk_type, 'B', 'B', 'P') 
			as ppk_type
			from   exp_offload_uld
		    where  flt_key = #FLT_KEY#
		    and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
		    and    uld_bt_no = #ULD_BT_NO#
	</select>
	
	<select id="sqlGetPpkTypePreoffload" parameterClass="java.util.HashMap" resultClass="java.lang.String">
			select decode(ppk_type, 'B', 'B', 'P') 
			as ppk_type
			from   exp_offload_uld
		    where  flt_key = #FLT_KEY#
		    and    flt_date = #FLT_DATE#
		    and    uld_bt_no = #ULD_BT_NO#
	</select>
	
	
	<update id="sqlUpdateExpOffloadAwb" parameterClass="java.util.HashMap" >
			update exp_offload_awb set
			       preoff_bulk_pcs = preoff_bulk_pcs + NVL(#PREOFF_BULK_PCS#,0),
			       preoff_bulk_wt = preoff_bulk_wt + NVL(#PREOFF_BULK_WT#,0),
			       preoff_ppk_pcs = preoff_ppk_pcs + NVL(#PREOFF_PPK_PCS#,0),
			       preoff_ppk_wt = preoff_ppk_wt + NVL(#PREOFF_PPK_WT#,0)
			where  flt_key = #FLT_KEY#
			and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
			and    unldg_pt = #UNLDG_PT#
			and    awb_no = #AWB_NO#
			and    awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')
	</update>
	
	<update id="sqlUpdateLooseExpOffloadAwb" parameterClass="java.util.HashMap" >
			update exp_offload_awb set
			       PRE_OFF_LOOSE_PCS = nvl(PRE_OFF_LOOSE_PCS,0) + NVL(#LOOSE_PRE_OFF_PCS#,0),
			       PRE_OFF_LOOSE_WT =  nvl(PRE_OFF_LOOSE_WT,0) + NVL(#LOOSE_PRE_OFF_WT#,0)
			where  flt_key = #FLT_KEY#
			and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
			and    unldg_pt = #UNLDG_PT#
			and    awb_no = #AWB_NO#
			and    awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')
	</update>
	
	<update id="sqlUpdateExpOffloadAwbByULD" parameterClass="java.util.HashMap" >
			update exp_offload_awb set
			       preoff_bulk_pcs = NVL(#PREOFF_BULK_PCS#,0),
			       preoff_bulk_wt = NVL(#PREOFF_BULK_WT#,0),
			       preoff_ppk_pcs = NVL(#PREOFF_PPK_PCS#,0),
			       preoff_ppk_wt = NVL(#PREOFF_PPK_WT#,0)
			where  flt_key = #FLT_KEY#
			and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
			and    unldg_pt = #UNLDG_PT#
			and    awb_no = #AWB_NO#
			and    awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')
	</update>
	
	
	<select id="sqlGetPreOffPcs" parameterClass="java.util.HashMap" resultClass = "java.lang.String"> 
		select (preoff_bulk_pcs + preoff_ppk_pcs) preoff_pcs
		from exp_offload_awb 
    	where  flt_key = #FLT_KEY#
		and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
		and    unldg_pt = #UNLDG_PT#
		and    awb_no = #AWB_NO#
		and    awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')
	</select>
	<delete id="sqlDelExpOffloadAwb" parameterClass="java.util.HashMap">
		    DELETE FROM EXP_OFFLOAD_AWB
			WHERE  FLT_KEY = #FLT_KEY#
			AND    FLT_DATE = TO_DATE(#FLT_DATE#,'DDMONYY')
			AND    UNLDG_PT = #UNLDG_PT#
			AND    AWB_NO = #AWB_NO#
			AND    AWB_DATE = TO_DATE(#AWB_DATE#,'DDMONYY')
	</delete>
	<select id="sqlGetExpPmaniFestAwbDtls" parameterClass="java.util.HashMap" resultClass = "java.util.HashMap">
				select bulk_pcs PMAN_BULK_PCS, bulk_wt PMAN_BULK_WT, (ppk_pcs + mix_pcs) PMAN_PPK_PCS, (ppk_wt + mix_wt) PMAN_PPK_WT			
		        from   exp_pmanifest_awb
		        where  flt_key = #FLT_KEY#
		        and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
		        and    unldg_pt = #UNLDG_PT#
		        and    awb_no = #AWB_NO#
		        and    awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')
	</select>
	<insert id="sqlInsExpOffloadDtls" parameterClass="java.util.HashMap">	
		    INSERT INTO EXP_OFFLOAD_AWB (FLT_KEY, FLT_DATE, UNLDG_PT, AWB_NO, AWB_DATE, PMAN_BULK_PCS, PMAN_BULK_WT, PMAN_PPK_PCS, PMAN_PPK_WT,
		    PREOFF_BULK_PCS, PREOFF_BULK_WT, PREOFF_PPK_PCS, PREOFF_PPK_WT, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE)
		    VALUES (#FLT_KEY#,TO_DATE(#FLT_DATE#,'DDMONYY'),#UNLDG_PT#,#AWB_NO#,TO_DATE(#AWB_DATE#,'DDMONYY'),#PMAN_BULK_PCS#,#PMAN_BULK_WT#,#PMAN_PPK_PCS#,#PMAN_PPK_WT#,
		    #PREOFF_BULK_PCS#,#PREOFF_BULK_WT#,#PREOFF_PPK_PCS#,#PREOFF_PPK_WT#,#CR_USER_ID#,SYSDATE,#LM_USER_ID#,SYSDATE)
	</insert>
	<insert id="sqlInsAwbEventsDtls1" parameterClass="java.util.HashMap">
		    INSERT INTO AWB_EVENTS
	       (AWB_NO, AWB_DATE, EVENT_ID, EVENT_DESC, FLT_KEY, FLT_DATE, FLT_TYPE,
	        PCS, WT, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE)
	        VALUES (#AWB_NO#,TO_DATE(#AWB_DATE#,'DDMONYY'), 'POFLDC', 'PRE OFFLOAD (CREATE)', #FLT_KEY#,TO_DATE(#FLT_DATE#,'DDMONYY'),'E',
	        #OFFLOAD_PCS#,#OFFLOAD_WT#,#USER_ID#,SYSDATE, #USER_ID#,SYSDATE)
	</insert>
	<insert id="sqlInsAwbEventsDtls2" parameterClass="java.util.HashMap">
		    INSERT INTO AWB_EVENTS
	       (AWB_NO, AWB_DATE, EVENT_ID, EVENT_DESC, FLT_KEY, FLT_DATE, FLT_TYPE,
	        PCS, WT, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE)
	        VALUES (#AWB_NO#,TO_DATE(#AWB_DATE#,'DDMONYY'), 'POFLDD', 'Pre Offload (Delete)', #FLT_KEY#,TO_DATE(#FLT_DATE#,'DDMONYY'),'E',
	        abs(#OFFLOAD_PCS#),abs(#OFFLOAD_WT#),#USER_ID#,SYSDATE, #USER_ID#,SYSDATE)
	</insert>
	<select id="sqlGetExpOffloadAwbDtls" parameterClass="java.util.HashMap" resultClass = "java.util.HashMap">		
			select OFF_BULK_PCS,OFF_PPK_PCS,OFF_BULK_WT,OFF_PPK_WT
			from exp_offload_awb
			where  flt_key = #FLT_KEY#
			and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
			and    unldg_pt = #UNLDG_PT#
			and    awb_no = #AWB_NO#
			and    awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')	
	</select>		
	<!--		Queries for procedure pkg.offload.upd_preoffload_awb end-->
	<!--		Queries for function pkg.offload.val_amend_preoffload_flt begin-->
	<select id="sqlGetConfirmedYnDtls" parameterClass="java.util.HashMap" resultClass = "java.lang.String">
			 select confirmed_yn
             from   (select confirmed_yn
                     from   exp_offload_uld_awb
		             where  flt_key = #FLT_KEY#
				     and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
				     order by confirmed_yn desc)
		    where  rownum = 1
	</select>
	
	<parameterMap id="valPkgGetEtdTime" class="java.util.HashMap">
	    <parameter property="STATUS" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="OUT" />
		<parameter property="FLT_KEY" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="IN" />
		<parameter property="FLT_DATE" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="IN" />
		</parameterMap>
	<procedure id="sqlPkgGetEtdTime" parameterMap="valPkgGetEtdTime">
		{ ?=call pkg_exp_val.get_etd_time(?, ?)}
	</procedure>
	<!--		Queries for function pkg.offload.val_amend_preoffload_flt end-->
	
	<!--		Queries for function pkg.offload.get_preoffload_uld begin-->
	<select id="sqlGetExpPmaniUldExpChkOut" parameterClass="java.util.HashMap" resultClass = "java.util.HashMap">
		SELECT *
		FROM
         (SELECT T1.AWB_NO, TO_CHAR(T1.AWB_DATE,'DDMONYY') AWB_DATE, T1.UNLDG_PT, T1.ASSIGNED_PCS, T1.ASSIGNED_WT,
         (CASE WHEN (select count(1) from exp_flt_uld X where (X.PPK_TYPE='P' OR X.PPK_TYPE='M' or X.handling_mode = 'NBK' or X.handling_mode ='PPK') AND X.flt_key = T1.FLT_KEY AND X.flt_date = T1.FLT_DATE AND X.ULD_KEY = T1.uld_bt_no AND X.unldg_pt = T1.unldg_pt) >0 THEN 'Y'                                 
          ELSE 'N' END) DISA_IND
            FROM   EXP_PMANIFEST_ULD_AWB T1, EXP_CHKOUT_DTL T2
            WHERE  T1.FLT_KEY = T2.FLT_KEY
            AND    T1.FLT_DATE = T2.FLT_DATE
            AND    T1.ULD_BT_NO = T2.ULD_KEY
            AND    T1.FLT_KEY = #FLT_KEY#
            AND    T1.FLT_DATE = TO_DATE(#FLT_DATE#,'DDMONYY')
            AND    T1.ULD_BT_NO = #ULD_KEY#
            AND    T2.CHKOUT_DATE IS NOT NULL
            AND    NOT EXISTS (SELECT NULL
                               FROM   EXP_OFFLOAD_ULD_AWB
                               WHERE  FLT_KEY = #FLT_KEY#
                               AND    FLT_DATE = TO_DATE(#FLT_DATE#,'DDMONYY')
                               AND    ULD_BT_NO = #ULD_KEY#
                               AND    UNLDG_PT = T1.UNLDG_PT
                               AND    AWB_NO = T1.AWB_NO
                               AND    TO_CHAR(AWB_DATE,'DDMONYY') = TO_CHAR(T1.AWB_DATE,'DDMONYY'))
            )
         UNION ALL
         ( SELECT T3.AWB_NO, TO_CHAR(T3.AWB_DATE,'DDMONYY') AWB_DATE, T3.UNLDG_PT, T3.ASSIGNED_PCS, T3.ASSIGNED_WT,
           'Y' DISA_IND
            from   exp_pman_tarmac_uld_awb t3 left join exp_chkout_dtl t4 On
            t3.flt_key = t4.flt_key
            and    t3.flt_date = t4.flt_date
            and    t3.uld_bt_no = t4.uld_key
            and    t4.chkout_date is not null
            where  t3.flt_key = #FLT_KEY#
            and    t3.flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
            and    t3.uld_bt_no = #ULD_KEY#
            and    not exists (select null         
                               FROM   EXP_OFFLOAD_ULD_AWB
                               WHERE  FLT_KEY = #FLT_KEY#
                               AND    FLT_DATE = TO_DATE(#FLT_DATE#,'DDMONYY')
                               AND    ULD_BT_NO = #ULD_KEY#
                               AND    UNLDG_PT = T3.UNLDG_PT
                               AND    AWB_NO = T3.AWB_NO
                               AND    TO_CHAR(AWB_DATE,'DDMONYY') = TO_CHAR(T3.AWB_DATE,'DDMONYY'))
            )		
       </select>

	<parameterMap id="valPkgGetFltClsYn" class="java.util.HashMap">
		<parameter property="STATUS" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="OUT" />
		<parameter property="FLT_KEY" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="IN" />
		<parameter property="FLT_DATE" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="IN" />
	</parameterMap>
	<procedure id="sqlPkgGetFltClsYn" parameterMap="valPkgGetFltClsYn">
		{ ?=call pkg_exp_val.flt_close_yn(?, ?)}
	</procedure>  
	<select id="sqlGetCountCodePpkType" parameterClass="java.util.HashMap" resultClass = "java.util.HashMap">
		    select contr_code, ppk_type
            from   exp_pmanifest_uld
            where  flt_key = #FLT_KEY#
            and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
            and    uld_bt_no = #ULD_KEY#
	</select> 
	<select id="sqlGetAwbCounnt" parameterClass="java.util.HashMap" resultClass = "java.lang.String">
			select count(awb_no) awb_count
            from   exp_pmanifest_uld_awb
            where  flt_key = #FLT_KEY#
            and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
            and    uld_bt_no = #ULD_KEY# 
   </select>
   
   <select id="sqlGetTarmacAwbCounnt" parameterClass="java.util.HashMap" resultClass = "java.lang.String">
			select count(awb_no) awb_count
            from   exp_pman_tarmac_uld_awb
            where  flt_key = #FLT_KEY#
            and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
            and    uld_bt_no = #ULD_KEY# 
   </select>
   <select id="getPkgIndCounnt" parameterClass="java.util.HashMap" resultClass = "java.lang.Integer">
			select COUNT(1) from uld_inventory where uld_key=#ULD_KEY# and (PPK_IND='Y' OR MIX_PPK_IND='Y' OR HANDLING_MODE IN ('PPK'))
   </select>
   <insert id="sqlInsGtPreOffloadUldDtls" parameterClass="java.util.HashMap">
   			INSERT INTO GT_PREOFFLOAD_ULD(SNO, AWB_NO, AWB_DATE, UNLDG_PT, PCS, WT, DISA_IND)
            VALUES (#COUNT#, #AWB_NO#, TO_DATE(#AWB_DATE#,'DDMONYY'), #UNLDG_PT#, #ASSIGNED_PCS#, #ASSIGNED_WT#, #DISA_IND#)    
   </insert>                         
	<!--		Queries for function pkg.offload.get_preoffload_uld end--> 
	
	<!--		Queries for function pkg.offload.get_offload_flight begin--> 
	   <select id="sqlGetExpPmaniUldAwbExpChkOut1" parameterClass="java.util.HashMap" resultClass = "java.util.HashMap">
			SELECT T1.AWB_NO, TO_CHAR(T1.AWB_DATE,'DDMONYY') AWB_DATE, T1.ULD_BT_NO, T1.UNLDG_PT, T1.ASSIGNED_PCS, T1.ASSIGNED_WT
            FROM   EXP_PMANIFEST_ULD_AWB T1, EXP_CHKOUT_DTL T2
            WHERE  T1.FLT_KEY = T2.FLT_KEY
            AND    T1.FLT_DATE = T2.FLT_DATE
            AND    T1.ULD_BT_NO = T2.ULD_KEY
            AND    T1.FLT_KEY = #FLT_KEY#
            AND    T1.FLT_DATE = TO_DATE(#FLT_DATE#,'DDMONYY')
            AND    LENGTH(T1.ULD_BT_NO) &lt; 9
            AND    T2.CHKOUT_DATE IS NOT NULL
            AND    NOT EXISTS (SELECT NULL
                               FROM   EXP_OFFLOAD_ULD_AWB
                               WHERE  FLT_KEY = #FLT_KEY#
                               AND    FLT_DATE = TO_DATE(#FLT_DATE#,'DDMONYY')
                               AND    ULD_BT_NO = T1.ULD_BT_NO
                               AND    UNLDG_PT = T1.UNLDG_PT
                               AND    AWB_NO = T1.AWB_NO
                               AND    TO_CHAR(AWB_DATE,'DDMONYY') = TO_CHAR(T1.AWB_DATE,'DDMONYY'))
	  </select> 
	  <select id="sqlGetExpPmaniUldAwbExpChkOutDtl" parameterClass="java.util.HashMap" resultClass = "java.util.HashMap">
	  		select t1.uld_bt_no, t1.unldg_pt, t1.ppk_type, t1.contr_code
	        from   exp_pmanifest_uld t1, exp_chkout_dtl t2
	        where  t1.flt_key = t2.flt_key
            and    t1.flt_date = t2.flt_date
            and    t1.uld_bt_no = t2.uld_key
            and    t1.flt_key = #FLT_KEY#
	        and    t1.flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
	        and    length(t1.uld_bt_no) > 8
            and    t2.chkout_date is not null
      </select>
      <insert id="sqlInsGtPreOffloadFlightDtls" parameterClass="java.util.HashMap">
      		INSERT INTO GT_PREOFFLOAD_FLIGHT(SNO, AWB_NO, AWB_DATE, ULD_KEY, UNLDG_PT, PPK_TYPE, PCS, WT, OFFLOAD_ULD_YN)
            VALUES (#COUNT#, #AWB_NO#, TO_DATE(#AWB_DATE#,'DDMONYY'), #ULD_BT_NO#, #UNLDG_PT#, 'BULK', #ASSIGNED_PCS#, #ASSIGNED_WT#, 'N')
      </insert> 
      <select id="sqlGetExpPmaniUldAwbDtl" parameterClass="java.util.HashMap" resultClass = "java.util.HashMap">
      		    select sum(assigned_pcs) total_pcs, sum(assigned_wt) total_wt, count(awb_no) awb_count
	            from   exp_pmanifest_uld_awb t1
	            where  flt_key = #FLT_KEY#
	            and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
	            and    uld_bt_no = #ULD_BT_NO#
	            and    not exists (select null
	                               from   exp_offload_uld_awb
	                               where  flt_key = #FLT_KEY#
	                               and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
	                               and    uld_bt_no = #ULD_BT_NO#
	                               and    unldg_pt = t1.unldg_pt
	                               and    awb_no = t1.awb_no
	                               and    awb_date = t1.awb_date)
	  </select>
	  <insert id="sqlInsGtPreOffFltDtls" parameterClass="java.util.HashMap">
	  		insert into gt_preoffload_flight
		    (sno, uld_key, unldg_pt, contr_code, ppk_type, pcs, wt, offload_uld_yn)
		    values (#COUNT#, #ULD_BT_NO#, #UNLDG_PT#, #CONTR_CODE#, #PPK_TYPE#, #TOTAL_PCS#, #TOTAL_WT#, 'Y')
	  </insert>    
	  <!--		Queries for function pkg.offload.get_offload_flight end--> 
	  
	  <!--		Queries for function pkg.offload.get_offload_awb begin--> 
	  <select id="sqlGetExpPmaniUldAwbChkOut" parameterClass="java.util.HashMap" resultClass = "java.util.HashMap">
	  SELECT *
		FROM
         (select t1.unldg_pt, t1.assigned_pcs, t1.assigned_wt, t1.uld_bt_no,
          (CASE WHEN (select count(1) from exp_flt_uld X where (X.PPK_TYPE='P' OR X.PPK_TYPE='M' or X.handling_mode = 'NBK' or X.handling_mode ='PPK') AND X.flt_key = T1.FLT_KEY AND X.flt_date = T1.FLT_DATE AND X.ULD_KEY = T1.uld_bt_no AND X.unldg_pt = T1.unldg_pt) >0 THEN 'Y'                                 
          ELSE 'N' END) DISA_IND
          from   exp_pmanifest_uld_awb t1, exp_chkout_dtl t2
                      where  t1.flt_key = t2.flt_key
                      and    t1.flt_date = t2.flt_date
                      and    t1.uld_bt_no = t2.uld_key
                      and    t1.flt_key = #FLT_KEY#
                      and    t1.flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
                      and    t2.chkout_date is not null
                      and    t1.awb_no = #AWB_NO#
                      and    not exists (select null
                                         from   exp_offload_uld_awb
                                         where  flt_key = #FLT_KEY#
                                         and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
                                         and    uld_bt_no = t1.uld_bt_no
                                         and    unldg_pt = t1.unldg_pt
                                         and    awb_no = t1.awb_no
                                         and    TO_CHAR(awb_date,'DDMONYY') = TO_CHAR(t1.awb_date,'DDMONYY'))  
                     AND NOT EXISTS (select NULL from exp_pmanifest_uld X where 
                                    (X.PPK_TYPE='P' OR X.PPK_TYPE='M' or X.hdlg_mode = 'NBK' or X.hdlg_mode ='PPK') AND
                                     X.flt_key = T1.FLT_KEY AND
                                     X.flt_date = T1.FLT_DATE AND
                                     X.uld_bt_no = T1.uld_bt_no AND
                                     X.unldg_pt = T1.unldg_pt)
          )
         UNION ALL
         (select t3.unldg_pt, t3.assigned_pcs, t3.assigned_wt, t3.uld_bt_no,
         'Y' DISA_IND
            from   exp_pman_tarmac_uld_awb t3 left join exp_chkout_dtl t4 On
              t3.flt_key = t4.flt_key
            and    t3.flt_date = t4.flt_date
            and    t3.uld_bt_no = t4.uld_key
            and    t4.chkout_date is not null
            where  t3.flt_key = #FLT_KEY#
            and    t3.flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
            and    t3.awb_no = #AWB_NO#
            and    not exists (select null
                               from   exp_offload_uld_awb
                               where  flt_key = #FLT_KEY#
                               and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
                               and    uld_bt_no = t3.uld_bt_no
                               and    unldg_pt = t3.unldg_pt
                               and    awb_no = t3.awb_no
                               and    TO_CHAR(awb_date,'DDMONYY') = TO_CHAR(t3.awb_date,'DDMONYY'))  
            AND NOT EXISTS (select NULL from ULD_INVENTORY X where 
                                    (X.PPK_IND='Y' OR X.MIX_PPK_IND='Y' or X.HANDLING_MODE = 'NBK' or X.HANDLING_MODE ='PPK') AND
                                     X.flt_key = T3.FLT_KEY AND
                                     X.flt_date = T3.FLT_DATE AND
                                     X.ULD_KEY = t3.uld_bt_no )
          )
           UNION ALL
          (select unldg_pt, BULK_PCS assigned_pcs, BULK_WT assigned_wt, 'TARMACBULK' uld_bt_no,'N' AS DISA_IND
            from   exp_pman_tarmac_awb T1
            where  T1.flt_key = #FLT_KEY#
            and    T1.flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
            and    T1.awb_no = #AWB_NO#
            AND    T1.BULK_PCS > 0
            and    not exists (select null
                               from   exp_offload_uld_awb
                               where  flt_key = #FLT_KEY#
                               and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
                               and    uld_bt_no = 'TARMACBULK'
                               and    awb_no = T1.awb_no)
            and    not exists (select null
                               from   exp_pman_tarmac_uld_awb
                               where  flt_key = #FLT_KEY#
                               and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
                               and    uld_bt_no = 'TARMACBULK'
                               and    awb_no = T1.awb_no)
          )  		
         </select>  
         
         <select id="sqlGetAwbNoCount" parameterClass="java.util.HashMap" resultClass = "java.lang.String">
         		select count(awb_no) awb_count
	            from   exp_pmanifest_uld_awb
	            where  flt_key = #FLT_KEY#
	            and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
	            and    uld_bt_no = #ULD_BT_NO#   
	     </select>
	     
	     <select id="sqlGetPpk" parameterClass="java.util.HashMap" resultClass = "java.lang.String">
	     	        select decode(ppk_type, 'B', 'Buildup', decode(#AWB_COUNT#, 1, 'BUP', 'Mix')) ppk_type
			        from   exp_pmanifest_uld
			        where  flt_key = #FLT_KEY#
			        and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
			        and    uld_bt_no = #ULD_BT_NO# 
	   	</select>
	   	
	   	<insert id="sqlInsGtPreOffAwbDtls" parameterClass="java.util.HashMap">
	   		insert into gt_preoffload_awb(sno, uld_key, unldg_pt, ppk_type, uld_type, total_pcs, total_wt, assigned_pcs, assigned_wt, DISA_IND)
		    values (#COUNT#, #ULD_BT_NO#, #UNLDG_PT#, #PPK_TYPE#, #ULD_TYPE#, #ASSIGNED_PCS#, #ASSIGNED_WT#, #ASSIGNED_PCS#, #ASSIGNED_WT#, #DISA_IND#)			                        
		</insert>
		
		<select id="checkTarmacUldCount" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">		    
		SELECT COUNT(1) 				
            from   exp_pman_tarmac_uld_awb t3 left join exp_chkout_dtl t4 On
            t3.flt_key = t4.flt_key
            and    t3.flt_date = t4.flt_date
            and    t3.uld_bt_no = t4.uld_key
            and    t4.chkout_date is not null
            where  t3.flt_key = #FLTKEY#
            and    t3.flt_date = TO_DATE(#FLTDATE#,'DDMONYY')
            and    t3.uld_bt_no = #ULDKEY#           
		</select>	
            
       	<select id="checkTarmacAwbCount" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
            SELECT COUNT(1) 
            from   exp_pman_tarmac_uld_awb t3 left join exp_chkout_dtl t4 On
            t3.flt_key = t4.flt_key
            and    t3.flt_date = t4.flt_date
            and    t3.uld_bt_no = t4.uld_key
            and    t4.chkout_date is not null
            where  t3.flt_key = #FLTKEY#
            and    t3.flt_date = TO_DATE(#FLTDATE#,'DDMONYY')
            and    t3.awb_no = #AWBNO#            
        </select>  
        <select id="checkTarmacBulkAwbCount" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
            SELECT COUNT(1) 
            from   exp_pman_tarmac_awb 
            where  flt_key = #FLTKEY#
            and    flt_date = TO_DATE(#FLTDATE#,'DDMONYY')
            and    awb_no = #AWBNO#
            and bulk_pcs > 0            
        </select>
		<!--		Queries for function pkg.offload.get_offload_awb end--> 
		
		<!--		Queries for function pkg.offload.ins_preoffload_awb begin--> 
		  <select id="sqlGetCursorData" parameterClass="java.util.HashMap" resultClass = "java.util.HashMap">
				select t1.unldg_pt, t2.uld_key, t3.offload_pcs, t4.offload_wt, t5.offload_uld_yn
	            from   (select column_value unldg_pt, rownum r1
	                    from   table(pkg_common.inlist(#UNLDG_PT_LIST#))) t1,
	                   (select column_value uld_key, rownum r2
	                    from   table(pkg_common.inlist(#ULD_KEY_LIST#))) t2,
	                   (select column_value offload_pcs, rownum r3
	                    from   table(pkg_common.inlist(#OFFLOAD_PCS_LIST#))) t3,
	                   (select column_value offload_wt, rownum r4
	                    from   table(pkg_common.inlist(#OFFLOAD_WT_LIST#))) t4,
	                   (select column_value offload_uld_yn, rownum r5
	                    from   table(pkg_common.inlist(#OFFLOAD_ULD_YN_LIST#))) t5
	            where  t1.r1 = t2.r2
	            and    t2.r2 = t3.r3
	            and    t3.r3 = t4.r4
	            and    t4.r4 = t5.r5 
          </select> 
          <select id="sqlGetExpPmaniUldAndAwb" parameterClass="java.util.HashMap" resultClass = "java.util.HashMap">
        	 		select TO_CHAR(t2.awb_date,'DDMONYY') awb_date, t2.assigned_pcs, t2.assigned_wt
		            from   exp_pmanifest_uld t1, exp_pmanifest_uld_awb t2
		            where  t1.flt_key = t2.flt_key
		            and    t1.flt_date = t2.flt_date
		            and    t1.uld_bt_no = t2.uld_bt_no
		            and    t1.flt_key = #FLT_KEY#
		            and    t1.flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
		            and    t1.uld_bt_no = #ULD_KEY#
		            and    t2.unldg_pt = #UNLDG_PT#
		            and    t2.awb_no = #AWB_NO#
		   </select> 
		   
		   <select id="sqlGetExpPmaniTarmacAwbDtl" parameterClass="java.util.HashMap" resultClass = "java.util.HashMap">
        	 		select TO_CHAR(t2.awb_date,'DDMONYY') awb_date, t2.BULK_PCS, t2.BULK_WT
		            from   exp_pman_tarmac_awb t2
		            where  t2.flt_key = #FLT_KEY#
		            and    t2.flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
		            and    t2.unldg_pt = #UNLDG_PT#
		            and    t2.awb_no = #AWB_NO#
		   </select> 
		   <select id="sqlGetExpPmaniTarmacUldAndAwbDtl" parameterClass="java.util.HashMap" resultClass = "java.util.HashMap">
        	 		select TO_CHAR(t2.awb_date,'DDMONYY') awb_date, t2.assigned_pcs, t2.assigned_wt
		            from   exp_pman_tarmac_uld t1, exp_pman_tarmac_uld_awb t2
		            where  t1.flt_key = t2.flt_key
		            and    t1.flt_date = t2.flt_date
		            and    t1.uld_bt_no = t2.uld_bt_no
		            and    t1.flt_key = #FLT_KEY#
		            and    t1.flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
		            and    t1.uld_bt_no = #ULD_KEY#
		            and    t2.unldg_pt = #UNLDG_PT#
		            and    t2.awb_no = #AWB_NO#
		   </select> 
		   
		    <insert id="sqlInsExpOffuldAwbDtls" parameterClass="java.util.HashMap">
		   		insert into exp_offload_uld_awb(TR_TYPE,flt_key, flt_date, uld_bt_no, unldg_pt, awb_no, awb_date, assigned_pcs, assigned_wt, offload_pcs, offload_wt, offload_type,
	            cr_user_id, cr_date, lm_user_id, lm_date, rmk,offload_reason,TR_NO,PRE_OFF_PCS,PRE_OFF_WT,BULK_IND)
	            values ('CPROF',#FLT_KEY#, TO_DATE(#FLT_DATE#,'DDMONYY'), #ULD_KEY#, #UNLDG_PT#, #AWB_NO#, #AWB_DATE#, #ASSIGNED_PCS#, #ASSIGNED_WT#, #OFFLOAD_PCS#, #OFFLOAD_WT#, 'A',
	            #USER_ID#, SYSDATE, #USER_ID#, SYSDATE, #REMARKS#,#OFFLOAD_REASON#,EXP_OFFLOAD_ULD_AWB_SEQ.nextval,#OFFLOAD_PCS#,#OFFLOAD_WT#,#BULK_IND#) 
	       </insert> 
	       <update id="sqlUpdateExpOffloadUldAwb" parameterClass="java.util.HashMap" >
	       		  update exp_offload_uld_awb
                  set  offload_pcs = #OFFLOAD_PCS#,
                       offload_wt = #OFFLOAD_WT#,
                       PRE_OFF_PCS = #OFFLOAD_PCS#,
                       PRE_OFF_WT = #OFFLOAD_WT#,
                       rmk = #REMARKS#,
                       lm_user_id = #USER_ID#,
                       offload_reason = #OFFLOAD_REASON#,                       
                       lm_date = sysdate
                where  flt_key = #FLT_KEY#
                and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
                and    uld_bt_no = #ULD_KEY#
                and    awb_no = #AWB_NO#
                and    unldg_pt = #UNLDG_PT# 
          </update> 
          <select id="sqlGetOldOfflaodPcsandWt" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
          		select 
          		FLT_KEY, TO_CHAR(FLT_DATE,'DDMONYY') FLT_DATE, ULD_BT_NO, AWB_NO, TO_CHAR(AWB_DATE,'DDMONYY') AWB_DATE, UNLDG_PT, OFFLOAD_PCS, OFFLOAD_WT, LM_USER_ID
				from exp_offload_uld_awb
				where  flt_key = #FLT_KEY#
                and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
                and    uld_bt_no = #ULD_KEY#
                and    awb_no = #AWB_NO#
                and    unldg_pt = #UNLDG_PT# 
          </select>
          <delete id="sqlDelExpOffloadUldAwb" parameterClass="java.util.HashMap">
          		delete exp_offload_uld_awb
                where  flt_key = #FLT_KEY#
                and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
                and    uld_bt_no = #ULD_KEY#
                and    awb_no = #AWB_NO#
                and    unldg_pt = #UNLDG_PT# 
		 </delete>
		 <delete id="sqlDelExpOffloadUldDtls" parameterClass="java.util.HashMap">
		 	delete exp_offload_uld t1
            where  flt_key = #FLT_KEY#
            and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
            and    uld_bt_no= #ULD_KEY#
            and    not exists (select null
                               from   exp_offload_uld_awb
					           where  flt_key = #FLT_KEY#
					           and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
					           and    uld_bt_no = t1.uld_bt_no) 
		</delete>
		<select id="sqlGetOldDtlsForTrig" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
			select t1.FLT_KEY,TO_CHAR(t1.FLT_DATE,'DDMONYY') FLT_DATE, t1.ULD_BT_NO
			from exp_offload_uld t1
			where  t1.flt_key = #FLT_KEY#
            and    t1.flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
            and    not exists (select null
                               from   exp_offload_uld_awb
					           where  flt_key = #FLT_KEY#
					           and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
					           and    uld_bt_no = t1.uld_bt_no)
		</select>						                                                         
        <!--		Queries for function pkg.offload.ins_preoffload_awb end--> 
        
        <!--		Queries for function pkg.offload.ins_preoffload_uld begin--> 
        <select id="sqlGetExpPmaniUldAndUldAwb" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
        	select t2.unldg_pt awb_unldg_pt, t2.awb_no, 
        	TO_CHAR(t2.awb_date,'DDMONYY') as awb_date, t2.assigned_pcs, t2.assigned_wt
            from   exp_pmanifest_uld t1, exp_pmanifest_uld_awb t2
            where  t1.flt_key = t2.flt_key
            and    t1.flt_date = t2.flt_date
            and    t1.uld_bt_no = t2.uld_bt_no
            and    t1.flt_key = #FLT_KEY#
            and    t1.flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
            and    t1.uld_bt_no = #ULD_KEY#
            and    not exists (select null
                               from   exp_offload_uld_awb
                               where  flt_key = #FLT_KEY#
                               and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
                               and    uld_bt_no = #ULD_KEY#
                               and    unldg_pt = t2.unldg_pt
                               and    awb_no = t2.awb_no
                               and    awb_date = t2.awb_date)
		</select>
			<insert id="sqlInsExpOffuldAwbDtls1" parameterClass="java.util.HashMap">
			insert into exp_offload_uld_awb(TR_TYPE,flt_key, flt_date, uld_bt_no, unldg_pt, awb_no, awb_date, assigned_pcs, assigned_wt, offload_pcs, offload_wt, offload_type,
            cr_user_id, cr_date, lm_user_id, lm_date, rmk,offload_reason,TR_NO,PRE_OFF_PCS,PRE_OFF_WT,BULK_IND)
            values ('CPROF',#FLT_KEY#, TO_DATE(#FLT_DATE#,'DDMONYY'), #ULD_KEY#, #AWB_UNLDG_PT#, #AWB_NO#, TO_DATE(#AWB_DATE#,'DDMONYY'), #ASSIGNED_PCS#, #ASSIGNED_WT#, #OFFLOAD_PCS#, #OFFLOAD_WT#, 'U',
             #USER_ID#, sysdate, #USER_ID#, sysdate, #REMARKS#,#OFFLOAD_REASON#,EXP_OFFLOAD_ULD_AWB_SEQ.nextval,#OFFLOAD_PCS#, #OFFLOAD_WT#,#BULK_IND#)
         </insert>
		<!--		Queries for function pkg.offload.ins_preoffload_uld end-->
		
		<!--		Queries for function pkg.offload.amend_preoffload_uld begin-->
		<update id="sqlUpdateExpOffLoadUldAmend" parameterClass="java.util.HashMap" >
			update exp_offload_uld 
	        set   rmk = #REMARKS#,
	        	  no_brk_ind = #NO_BRK_IND#,
	              lm_user_id = #USER_ID#,
	              lm_date = sysdate
		    where  flt_key = #FLT_KEY#
		    and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
		    and    uld_bt_no = #ULD_KEY#
	    </update>
	    <delete id="sqlDelExpOffloadUldAwdAmend" parameterClass="java.util.HashMap">
	    	delete from exp_offload_uld_awb
		    where  flt_key = #FLT_KEY#
		    and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
		    and    uld_bt_no = #ULD_KEY#
		    and    offload_type = 'U'
		    and    awb_no = #AWB_NO#
		    and    awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')
		</delete>
		<select id="sqlGetExpOffUldAwbForTrig" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
			SELECT FLT_KEY,TO_CHAR(FLT_DATE,'DDMONYY') FLT_DATE,ULD_BT_NO,AWB_NO,TO_CHAR(AWB_DATE,'DDMONYY') AWB_DATE,UNLDG_PT,OFFLOAD_PCS,OFFLOAD_WT,LM_USER_ID
			FROM EXP_OFFLOAD_ULD_AWB
		    WHERE  FLT_KEY = #FLT_KEY#
		    AND    FLT_DATE = TO_DATE(#FLT_DATE#,'DDMONYY')
		    AND    ULD_BT_NO = #ULD_KEY#
		    AND    OFFLOAD_TYPE = 'U'
		    AND    AWB_NO = #AWB_NO#
		    AND    AWB_DATE = TO_DATE(#AWB_DATE#,'DDMONYY') 
		</select>    
		<delete id="sqlDelExpOffloadUldAmend" parameterClass="java.util.HashMap">
			delete exp_offload_uld t1
            where  flt_key = #FLT_KEY#
            and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
            AND    ULD_BT_NO = #ULD_KEY#
            and    not exists (select null
                               from   exp_offload_uld_awb
					           where  flt_key = #FLT_KEY#
					           and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
					           and    uld_bt_no = t1.uld_bt_no)
		</delete>
		<select id="sqlGetConfYnUldBtNo" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
			select confirmed_yn,uld_bt_no
			from exp_offload_uld
			where  flt_key = #FLT_KEY#
		    and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
		    and    uld_bt_no = #ULD_KEY#	
		</select>	
        <select id="sqlGetCountOfCheckinULD" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		select count(1)
			from exp_offload_uld
			where  flt_key = #FLT_KEY#
		    and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
		    and    uld_bt_no = #ULD_KEY#
		    and    checked_in_flag = 'Y'
		</select>	
		<update id="updExpOffloadUldAmend" parameterClass="java.util.HashMap" >
			update exp_offload_uld 
	        set   offload_uld_yn='N',
	              lm_date = sysdate
		    where  flt_key = #FLT_KEY#
		    and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
		    and    uld_bt_no = #ULD_KEY#
	    </update>		
	    <!--		Queries for function pkg.offload.amend_preoffload_uld end-->  
	    
	    <!--		Queries for function pkg.offload.ins_preoffload_flt begin-->
	    <select id="sqlGetExpManifestUldAwbExpChkOut" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">	
	    	select t1.awb_no, t1.awb_date, t1.uld_bt_no, t1.unldg_pt, t1.assigned_pcs, t1.assigned_wt
            from   exp_pmanifest_uld_awb t1, exp_chkout_dtl t2
            where  t1.flt_key = t2.flt_key
            and    t1.flt_date = t2.flt_date
            and    t1.uld_bt_no = t2.uld_key
            and    t1.flt_key = #FLT_KEY#
            and    t1.flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
            and    t2.chkout_date is not null
            and    length(t1.uld_bt_no) &lt; 9
            and    not exists (select null
                               from   exp_offload_uld_awb
                               where  flt_key = #FLT_KEY#
                               and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
                               and    uld_bt_no = t1.uld_bt_no
                               and    unldg_pt = t1.unldg_pt
                               and    awb_no = t1.awb_no
                               and    TO_CHAR(awb_date,'DDMONYY') = TO_CHAR(t1.awb_date,'DDMONYY''))
	    </select>
	    <select id="sqlGetExpManifestUldExpChkOut" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	    	select t1.uld_bt_no, t1.unldg_pt, t1.ppk_type, t1.contr_code
	        from   exp_pmanifest_uld t1, exp_chkout_dtl t2
	        where  t1.flt_key = t2.flt_key
            and    t1.flt_date = t2.flt_date
            and    t1.uld_bt_no = t2.uld_key
            and    t1.flt_key = #FLT_KEY#
	        and    t1.flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
	        and    length(t1.uld_bt_no) &gt; 8
	    </select>
	    <select id="sqlGetDummyX" parameterClass="java.util.HashMap" resultClass="java.lang.String">
	    	    select 'X' 
	            from   exp_pmanifest_uld_awb t1
	            where  flt_key = #FLT_KEY#
	            and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
	            and    uld_bt_no = #ULD_BT_NO#
	            and    not exists (select null
	                               from   exp_offload_uld_awb
	                               where  flt_key = #FLT_KEY#
	                               and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
	                               and    uld_bt_no = #ULD_BT_NO#
	                               and    unldg_pt = t1.unldg_pt
	                               and    awb_no = t1.awb_no
	                               and    awb_date = t1.awb_date)
	            				   and   rownum = 1
	     </select>	
	    <!--		Queries for function pkg.offload.ins_preoffload_flt end--> 
	    
	    <!--		Queries for function pkg.offload.ins_upd_exp_offload_uld begin-->
	    <update id="sqlUpdExpOffLoadUldDtls" parameterClass="java.util.HashMap" >
	    	update exp_offload_uld 
	         set   
	         		TR_TYPE = 'CPROF',
	         	   offload_uld_yn = decode(#OFFLOAD_ULD_YN#,'Y',#OFFLOAD_ULD_YN#,'N'),
	               lm_user_id = #USER_ID#,
	               lm_date = sysdate
	        where  flt_key = #FLT_KEY#
	        and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
	        and    uld_bt_no = #ULD_KEY#                            
	     </update> 
	     <select id="sqlGetPpktypeUnldgptContrcode" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	     		select ppk_type, unldg_pt, contr_code
		        from   exp_pmanifest_uld
		        where  flt_key = #FLT_KEY#
	            and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
	            and    uld_bt_no = #ULD_KEY# 
	     </select>
	     <select id="sqlGetTarmacPpktypeUnldgptContrcode" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">	     		   
	     		select 'P' ppk_type, unldg_pt, contr_code
		        from   exp_pman_tarmac_uld
		        where  flt_key = #FLT_KEY#
	            and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
	            and    uld_bt_no = #ULD_KEY# 
	     </select>
	     <select id="sqlGetCountofAwbcount" parameterClass="java.util.HashMap" resultClass="java.lang.String">
	     		select count(awb_no) awb_count
	            from   exp_pmanifest_uld_awb
	            where  flt_key = #FLT_KEY#
	            and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
	            and    uld_bt_no = #ULD_KEY# 
		</select>
		<insert id="sqlInsExpOffuldData" parameterClass="java.util.HashMap">
				insert into exp_offload_uld(TR_TYPE,flt_key, flt_date, uld_bt_no, unldg_pt, contr_code, ppk_type, uld_type, offload_uld_yn, rmk,
		    	cr_user_id, cr_date, lm_user_id, lm_date,no_brk_ind)
	            values ('CPROF',#FLT_KEY#, TO_DATE(#FLT_DATE#,'DDMONYY'), #ULD_KEY#, #UNLDG_PT#, #CONTR_CODE#, #PPK_TYPE#, #ULD_TYPE#, #OFFLOAD_ULD_YN#, #REMARKS#,
	        	#USER_ID#, sysdate, #USER_ID#, sysdate,#NO_BRK_IND#)
	   </insert>
	    <select id="sqlGetConfirmedYn" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	   			select CONFIRMED_YN
				from exp_offload_uld
				where  flt_key = #FLT_KEY#
	       		and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
	            and    uld_bt_no = #ULD_KEY# 
	    </select>	            
	    <!--		Queries for function pkg.offload.ins_upd_exp_offload_uld end-->
	    
	    <!--		Queries for Procedure pkg.offload.get_offload_pcs_wt begin-->
	    <select id="sqlGetPcsWtAwbCount" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	    	select nvl(sum(assigned_pcs), 0) PCS, nvl(sum(assigned_wt), 0) WT, count(awb_no) awb_count
            from   exp_pmanifest_uld_awb
            where  flt_key = #FLT_KEY#
            and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
            and    uld_bt_no = #ULD_KEY#
       </select>
       <select id="sqlGetPcsWt" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
       		select #PCS# - nvl(sum(offload_pcs), 0) PCS, #WT# - nvl(sum(offload_wt), 0) WT
            from   exp_offload_uld_awb
            where  flt_key = #FLT_KEY#
            and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
            and    uld_bt_no = #ULD_KEY#
            and    awb_no = #AWB_NO#
      </select> 
      <select id="sqlGetpPpkType" parameterClass="java.util.HashMap" resultClass="java.lang.String">
      		select decode(ppk_type, 'B', 'Buildup', decode(#AWB_COUNT#, 1, 'BUP', 'Mix')) PPK_TYPE
	        from   exp_pmanifest_uld
	        where  flt_key = #FLT_KEY#
	        and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
	        and    uld_bt_no = #ULD_KEY#
	  </select>  
	  <!--		Queries for Procedure pkg.offload.get_offload_pcs_wt end-->
	  <!--		Queries for function pkg.offload.val_amend_preoffload_awb begin-->
	  <select id="sqlGetConfirmedYnRmk" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	  		select confirmed_yn, rmk, offload_reason
	        from   exp_offload_uld_awb
	        where  flt_key = #FLT_KEY#
			and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
			and    offload_type = 'A'
			and    rownum = 1  
	  </select>
	  <!--		Queries for function pkg.offload.val_amend_preoffload_awb end-->
	  
	  <!--		Queries for function pkg.offload.val_amend_preoffload_uld begin-->
	    <select id="sqlGetConfYn" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		  	select confirmed_yn
	        from   exp_offload_uld_awb
	        where  flt_key = #FLT_KEY#
			and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
			and    uld_bt_no = #ULD_KEY#
			and    offload_type = 'U'
			and    rownum = 1
	   </select>
	   <select id="sqlGetDtlsOfExpOffLoadUld" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
			select t1.contr_code, 
			CASE WHEN (select COUNT(1) from uld_inventory where uld_key=#ULD_KEY# and (PPK_IND='Y' OR MIX_PPK_IND='Y' OR HANDLING_MODE IN ('PPK'))) >0 THEN 'P'                                 
			ELSE 'B' END pkg_type,
				   t1.confirmed_yn,
			       t1.offload_uld_yn, t1.rmk, t2.offload_reason,t1.no_brk_ind			
			from   exp_offload_uld t1, exp_offload_uld_awb t2			
		    where  t1.flt_key = t2.flt_key
			and    t1.flt_date = t2.flt_date 
			and    t1.uld_bt_no = t2.uld_bt_no
			and    t2.offload_type = 'U'
			and    t1.flt_key = #FLT_KEY#
			and    t1.flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
			and    t1.uld_bt_no = #ULD_KEY#
			and    rownum = 1
	   </select>
	  <!--		Queries for function pkg.offload.val_amend_preoffload_uld end-->
	  
	  <!--		Queries for function pkg.offload.del_preoffload_flt begin-->
	  <select id="sqlGetStatus" parameterClass="java.util.HashMap" resultClass="java.lang.String">
	  		select 'Offloaded Shipment has been confirmed. Please delete confirm offload cargo first before deleting pre-offload details' STATUS
	        from   exp_offload_uld_awb
	        where  flt_key = #FLT_KEY#
			and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
			and    confirmed_yn = 'Y'
			and    rownum = 1
	  </select>
	  <delete id="sqlDelExpOffloadUldAwd" parameterClass="java.util.HashMap">
	    delete from exp_offload_uld_awb
        where  flt_key = #FLT_KEY#
        and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
	</delete>
	<delete id="sqlDelExpOffloadUld" parameterClass="java.util.HashMap">
        delete from exp_offload_uld
        where  flt_key = #FLT_KEY#
        and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
	</delete>
	<delete id="sqlDelExpOffloadAwwb" parameterClass="java.util.HashMap">
        delete from exp_offload_awb
        where  flt_key = #FLT_KEY#
      	and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
	</delete>
	<select id="sqlGetOldExpOffUldAwbDtls" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
         select *
		 from exp_offload_uld_awb
		 where  flt_key = #FLT_KEY#
         and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
      </select>
	  <!--		Queries for function pkg.offload.del_preoffload_flt end-->
	  
	  <!--		Queries for function pkg.offload.val_confirm_offload begin-->
      <select id="sqlGetExpOffUldAwbStatus" parameterClass="java.util.HashMap" resultClass="java.lang.String">
      		  select 'TRUE' STATUS
	          from   exp_offload_uld_awb
	          where  flt_key = #FLT_KEY#
	          and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
	          and    confirmed_yn = decode(#MODE#, 'INS', 'N', 'DEL', 'Y', 'ENQ','N',confirmed_yn)
	          and    rownum = 1
	  </select>
	  <select id="sqlGetExpeicOffuldAWB" parameterClass="java.util.HashMap" resultClass="java.lang.String">
      		  select COUNT(*) from exp_offload_uld A,ULD_INVENTORY B
              where B.ULD_KEY = A.ULD_BT_NO AND B.EIC_FLG='Y' AND A.CONFIRMED_YN='Y' AND
              A.FLT_KEY= #FLT_KEY# AND A.FLT_DATE=TO_DATE(#FLT_DATE#,'DDMONYY') AND NOT EXISTS (SELECT NULL FROM EXP_OFFLOAD_ULD_AWB B WHERE ULD_BT_NO=A.ULD_BT_NO AND B.FLT_KEY=A.FLT_KEY AND B.FLT_DATE=A.FLT_DATE)
	  </select>
	  <!--		Queries for function pkg.offload.val_confirm_offload end-->
	  
	  <!--		Queries for function pkg.offload.del_offload_awb begin-->
		  <select id="sqlGetCursorDtlsOfDelOffAwb" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		  		select t1.seq_no, t2.pcs, t3.wt, t4.awb_no, TO_CHAR(t4.awb_date,'DDMONYY') AWB_DATE
	            from   (select column_value seq_no, rownum r1
	                    from   table(pkg_common.inlist(#AWB_SEQ_LIST#))) t1,
	                   (select column_value pcs, rownum r2
	                    from   table(pkg_common.inlist(#PCS_LIST#))) t2,
	                   (select column_value wt, rownum r3
	                    from   table(pkg_common.inlist(#WT_LIST#))) t3,
	                    awb_inventory t4
	            where  t1.r1 = t2.r2
	            and    t2.r2 = t3.r3
	            and    t1.seq_no = t4.seq_no
	     </select>
	     <update id="sqlUpdExpOffLoadUldAwbData" parameterClass="java.util.HashMap" >
		    update exp_offload_uld_awb
	        set    confirmed_yn = 'N',
	               confirmed_user_id = null,
	               confirmed_date = null,
	               confirmed_rmk = null
	        where  flt_key = #FLT_KEY#
	        and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
	        and    uld_bt_no = #ULD_BT_NO#
	        and    awb_no = #AWB_NO#
	        and    unldg_pt = #UNLDG_PT#
	        and    offload_type = 'A'
	     </update>
	     <update id="sqlUpdAwbInvLocnPcs" parameterClass="java.util.HashMap" >
	     	update awb_inventory
            set locn_pcs = locn_pcs - #PCS#,
                locn_wt = locn_wt - #WT#
            where  seq_no = #SEQ_NO# 
         </update>  
        <select id="sqlGetLocnPcsFromAwbInv" parameterClass="java.lang.String" resultClass="java.lang.String">     
            select locn_pcs
            from awb_inventory
            where  where  seq_no = #SEQ_NO#
        </select> 
        <delete id="sqlDelAwbInvSeq" parameterClass="java.lang.String">
        	delete from awb_inventory
            where  seq_no = #SEQ_NO#
        </delete>
        <select id="sqlGetOffloadCount" parameterClass="java.util.HashMap" resultClass="java.lang.String">
	        select count(1) offload_count
	        from   exp_offload_uld_awb
	        where  flt_key = #FLT_KEY#
			and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
			and    confirmed_yn = 'Y'  
		</select>  
	  <!--		Queries for function pkg.offload.del_offload_awb end--> 
	  
	  <!--		Queries for function pkg.offload.confirm_offload_awb begin--> 
	   <select id="sqlGetCursorDtlsOfConOffloadAwb" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">		
	  		select t1.wh_dest, t2.loc_code, t3.pcs, t4.wt, t5.lsp_no, t6.uld_bt_no
            from   (select column_value wh_dest, rownum r1
                    from   table(pkg_common.inlist(#WH_DEST_LIST#))) t1,
                   (select column_value loc_code, rownum r2
                    from   table(pkg_common.inlist(#LOC_CODE_LIST#))) t2,
                   (select column_value pcs, rownum r3
                    from   table(pkg_common.inlist(#PCS_LIST#))) t3,
                   (select column_value wt, rownum r4
                    from   table(pkg_common.inlist(#NET_WT_LIST#))) t4,
                   (select column_value lsp_no, rownum r5
                    from   table(pkg_common.inlist(#LSP_NO_LIST#))) t5,
                   (select column_value uld_bt_no, rownum r6
                    from   table(pkg_common.inlist(#ULD_BT_NO_LIST#))) t6
            where  t1.r1 = t2.r2
            and    t2.r2 = t3.r3
            and    t3.r3 = t4.r4
            and    t4.r4 = t5.r5
            and    t5.r5 = t6.r6
	   </select>
	   <select id="sqlGetTotPcsAndTotWt" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	   		select offload_pcs total_pcs, offload_wt total_wt
            from   exp_offload_uld_awb
            where  flt_key = #FLT_KEY#
            and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
            and    uld_bt_no = #ULD_KEY#
            and    awb_no = #AWB_NO#
            and    awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')
            and    unldg_pt = #UNLDG_PT#
            and    offload_type = 'A'
         </select>
	 	<parameterMap id="valPkgExpValValWhLoc" class="java.util.HashMap">
			<parameter property="STATUS" jdbcType="VARCHAR" javaType="java.lang.String"
				mode="OUT" />	
			<parameter property="WH_DEST" jdbcType="VARCHAR" javaType="java.lang.String"
				mode="IN" />
			<parameter property="LOC_CODE" jdbcType="VARCHAR" javaType="java.lang.String"
				mode="IN" />			
		</parameterMap>
		
		<procedure id="sqlPkgExpValValWhLoc" parameterMap="valPkgExpValValWhLoc">
			{? = call pkg_exp_val.val_wh_loc(?, ?)}
		</procedure>
		<select id="sqlGetStrgDate" parameterClass="java.util.HashMap" resultClass="java.lang.String">
				select TO_CHAR(rcl_date,'DDMONYY') strg_date
                from   (select rcl_date
                        from   v_rcl_awb 
                        where  awb_no = #AWB_NO#
                        and    awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')
                        order by rcl_date)
                where  rownum = 1
        </select>
        <select id="sqlGetWhDest" parameterClass="java.lang.String" resultClass="java.lang.String">
        		select wh_dest
                from   uld_inventory
                where  uld_key = #ULD_KEY#
                and    owned_inv = 'Y'
        </select>
        <update id="sqlUpdUldInvDtls" parameterClass="java.util.HashMap">
        		update uld_inventory set
                wh_dest = #WH_DEST#,
                loc_code = #LOC_CODE#,
                cfm_status = 'CONFIRMED',
                flt_key = null,
                flt_date = null,
                flt_type = null
            where  uld_key = #ULD_KEY#
       </update>
       <insert id="sqlInsToUldMov" parameterClass="java.util.HashMap">
       		insert into uld_mov(tr_type, event_id, uld_key, tr_no, tr_date, doc_line_no, mov_from, mov_to, flt_type, flt_key, flt_date,
            cr_user_id, cr_date, lm_user_id, lm_date, seq_no)
            values ('OF', 'OF', #ULD_KEY#, #ULD_KEY#, sysdate, 1, #OLD_WH_DEST#, #WH_DEST#, 'E', #FLT_KEY#, TO_DATE(#FLT_DATE#,'DDMONYY'),
            #USER_ID#, sysdate,#USER_ID#, sysdate, uld_mov_seq.nextval)
       </insert>
       <update id="sqlUpdAwbInvDtls" parameterClass="java.util.HashMap">
       			update awb_inventory inv
	            set inv.locn_pcs = inv.locn_pcs + #TOTAL_PCS#,
	                inv.locn_wt = inv.locn_wt + #TOTAL_WT#
		        where  inv.awb_no = #AWB_NO#
			           and    inv.awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')
			           and    ((#LOC_CODE# is null and inv.loc_code is null) or (inv.loc_code = #LOC_CODE#))
			           and    inv.uld_key = #ULD_KEY#
			           and    inv.flt_key is null
			           and    exists (select null
								       from   awb
								       where  awb_no = inv.awb_no
								       and    awb_date = inv.awb_date
											 )  
		</update>
		<insert id="sqlInsToAwbInv" parameterClass="java.util.HashMap">
				insert into awb_inventory(awb_no, awb_date, carr_code, uld_key, wh_dest, loc_code, locn_pcs, locn_wt, strg_date,
                cr_user_id, cr_date, lm_user_id, lm_date)
	            values (#AWB_NO#, TO_DATE(#AWB_DATE#,'DDMONYY'), #CARR_CODE#, #ULD_KEY#, #WH_DEST#, #LOC_CODE#, #TOTAL_PCS#, #TOTAL_WT#, TO_DATE(#STRG_DATE#,'DDMONYY'),
	            #USER_ID#, sysdate, #USER_ID#, sysdate)
	   </insert>
	   <parameterMap id="valPkgCommonCountStr" class="java.util.HashMap">
			<parameter property="STRING_COUNT" jdbcType="VARCHAR" javaType="java.lang.String"
				mode="OUT" />	
			<parameter property="INPUT_STRING" jdbcType="VARCHAR" javaType="java.lang.String"
				mode="IN" />			
		</parameterMap>
		
		<procedure id="sqlPkgCommonCountStr" parameterMap="valPkgCommonCountStr">
			{? = call pkg_common.count_str(?)}
		</procedure>
		<select id="sqlGetOffPcsAndOffWt" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
				select offload_pcs, offload_wt
                from   exp_offload_uld_awb
                where  flt_key = #FLT_KEY#
                and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
                and    uld_bt_no = #ULD_KEY#
                and    awb_no = #AWB_NO#
                and    awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')
                and    unldg_pt = #UNLDG_PT#
                and    offload_type = 'A'
        </select>
        <select id="sqlGetTotPcs" parameterClass="java.lang.String" resultClass="java.lang.String">
        	select nvl(sum(column_value), 0) total_pcs
	        from   table(pkg_common.inlist(#PCS_LIST#))
	        where  column_value is not null
		</select>
		<select id="sqlGetTotWt" parameterClass="java.lang.String" resultClass="java.lang.String">
	        select nvl(sum(column_value), 0) total_wt
	        from   table(pkg_common.inlist(#NET_WT_LIST#))
	        where  column_value is not null
	    </select>
	    <update id="sqlUpdAwbInvData" parameterClass="java.util.HashMap">
	    	update awb_inventory inv
		    set     inv.locn_pcs = inv.locn_pcs + #PCS#,
		            inv.locn_wt = inv.locn_wt + #WT#
		        where  inv.awb_no = #AWB_NO#
		        and    inv.awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')	
		        and    ((#LOC_CODE# is null and inv.loc_code is null) or (inv.loc_code = #LOC_CODE#))
		        and    ((#ULD_BT_NO# is null and inv.uld_key is null) or (inv.uld_key = #ULD_BT_NO#))
		        and    ((#LSP_NO# is null and inv.lsp_no is null) or (inv.lsp_no = #LSP_NO#))
		        and    inv.flt_key is null
		        and    exists (select null
						       from   awb
						       where  awb_no = inv.awb_no
						       and    awb_date = inv.awb_date
									 )  
		</update>
		<select id="sqlGetStrgDate1" parameterClass="java.util.HashMap" resultClass="java.lang.String">
				select TO_CHAR(rcl_date,'DDMONYY') strg_date
		        from   (select rcl_date
		                from   v_rcl_awb
		                where  awb_no = #AWB_NO#
		                and    awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')
		                order by rcl_date)
		       where  rownum = 1
		</select>
		<insert id="sqlInsToAwbInvDtls" parameterClass="java.util.HashMap">
			  insert into awb_inventory(awb_no, awb_date, carr_code, lsp_no, uld_key, wh_dest, loc_code, locn_pcs, locn_wt, strg_date,
			  cr_user_id, cr_date, lm_user_id, lm_date)
		      values (#AWB_NO#, TO_DATE(#AWB_DATE#,'DDMONYY'), #CARR_CODE#, #LSP_NO#, #ULD_BT_NO#, #WH_DEST#, #LOC_CODE#, #PCS#, #WT#,TO_DATE(#STRG_DATE#,'DDMONYY'),
		      #USER_ID#, sysdate, #USER_ID#, sysdate)	
		</insert>
		<update id="sqlUpdExpOffUldAwbData" parameterClass="java.util.HashMap">
			update exp_offload_uld_awb 
            set confirmed_yn = 'Y',
                confirmed_user_id = #USER_ID#,
                confirmed_date = sysdate,
                confirmed_rmk = #CONFIRMED_RMK#
		   where  flt_key = #FLT_KEY#
		        and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
		        and    uld_bt_no = #ULD_KEY#
		        and    awb_no = #AWB_NO#
		        and    awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')
		        and    unldg_pt = #UNLDG_PT#
		        and    offload_type = 'A'
		</update>
		<select id="sqlGetPreoffloadCount" parameterClass="java.util.HashMap" resultClass="java.lang.String">
			select count(1) preoffload_count
	        from   exp_offload_uld_awb
	        where  flt_key = #FLT_KEY#
			and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
			and    confirmed_yn = 'N'
		</select>	
	  <!--		Queries for function pkg.offload.confirm_offload_awb end--> 
	  
	  <!--		Queries for function pkg.offload.confirm_offload_uldNew begin--> 
	   <update id="sqlUpdUldInvDataNew" parameterClass="java.util.HashMap">
        		update uld_inventory
                set loc_code = #LOC_CODE#,
                    cfm_status = 'CONFIRMED',
                    flt_key = null,
                    flt_date = null,
                    flt_type = null
               where  uld_key = #ULD_KEY#
		</update>
		
		<update id="sqlUpdateAwbInvenDataNew" parameterClass="java.util.HashMap">
			update awb_inventory inv
	        set inv.locn_pcs = inv.locn_pcs + #OFFLOAD_PCS#,
	            inv.locn_wt = inv.locn_wt + #OFFLOAD_WT#
	        where  inv.awb_no = #AWB_NO#
	        and    inv.awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')	
	        and    ((#LOC_CODE# is null and inv.loc_code is null) or (inv.loc_code = #LOC_CODE#))
	        and    ((#ULD_KEY# is null and inv.uld_key is null) or (inv.uld_key = #ULD_KEY#))
	        and    inv.flt_key is null  
	        and    exists (select null
					       from   awb
					       where  awb_no = inv.awb_no
					       and    awb_date = inv.awb_date
								 )  
	    </update> 
	    
	    <update id="sqlUpdateAwbInventoryLspdataNew" parameterClass="java.util.HashMap">
			update awb_inventory inv
	        set inv.locn_pcs = inv.locn_pcs + #OFFLOAD_PCS#,
	            inv.locn_wt = inv.locn_wt + #OFFLOAD_WT#
	        where  inv.awb_no = #AWB_NO#
	        and    inv.awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')	
	        and    ((#LOC_CODE# is null and inv.loc_code is null) or (inv.loc_code = #LOC_CODE#))
	        and    ((#LSP_NO# is null and inv.lsp_no is null) or (inv.lsp_no = #LSP_NO#))
	        and    inv.flt_key is null  
	        and    exists (select null
					       from   awb
					       where  awb_no = inv.awb_no
					       and    awb_date = inv.awb_date
								 )  
	    </update> 
	    
	    <insert id="sqlInsertAwbInvNew" parameterClass="java.util.HashMap">
	     	 insert into awb_inventory(awb_no, awb_date, carr_code, uld_key, LSP_NO,loc_code, locn_pcs, locn_wt, strg_date,
             cr_user_id, cr_date, lm_user_id, lm_date,SEQ_NO,REF_TR_NO)
	         values (#AWB_NO#, TO_DATE(#AWB_DATE#,'DDMONYY'),  #CARR_CODE#, #ULD_KEY#,#LSP_NO#, #LOC_CODE#, #OFFLOAD_PCS#, #OFFLOAD_WT#, 	nvl(TO_DATE(#STRG_DATE#,'DDMONYY HH24:MI'),sysdate),
	         #USER_ID#, sysdate, #USER_ID#, sysdate,#SEQ_NO#,#OLD_ULD_KEY#) 
	     </insert>
	     <update id="sqlUpdateEmptyNew" parameterClass="java.util.HashMap">
	     update uld_inventory set empty_flg = 'N' 
	     <isNotEmpty property="ULD_FLOW">
			,uld_flow = #ULD_FLOW#	
		</isNotEmpty> where uld_key=#ULD_KEY#
	     </update>
	     <update id="sqlUpdateLspEmptyNew" parameterClass="java.util.HashMap">
	     update lsp_inventory set EMPTY_FLG = 'N' where lsp_no=#LSP_NO#
	     </update>
	     <select id="sqlGetExpOffUldAwdOldDataNew" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">		
				SELECT 'Y' CONFIRMED_YN, OFFLOAD_PCS, OFFLOAD_WT, ULD_BT_NO, AWB_NO,
				TO_CHAR(AWB_DATE,'DDMONYY') AWB_DATE, UNLDG_PT, OFFLOAD_PCS, OFFLOAD_WT
				FROM   EXP_OFFLOAD_ULD_AWB
				WHERE  FLT_KEY = #FLT_KEY#
		        AND    FLT_DATE = TO_DATE(#FLT_DATE#,'DDMONYY')
		         AND    ULD_BT_NO = #ULD_KEY#
                AND     AWB_NO = #AWB_NO# 
                AND     AWB_DATE = #AWB_DATE#
		        AND     OFFLOAD_TYPE = 'U'
		</select>	  
	  <!--		Queries for function pkg.offload.confirm_offload_uldNew end--> 
	  
	  <!--		Queries for function pkg.offload.confirm_offload_uld begin--> 
	    <select id="sqlGetCursorDataForConOffUld" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">  
	    	  select unldg_pt, awb_no, TO_CHAR(awb_date,'DDMONYY') awb_date, offload_pcs, offload_wt
	          from   exp_offload_uld_awb
	          where  flt_key = #FLT_KEY#
	          and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
	          and    uld_bt_no = #ULD_KEY#
	          and    offload_type = 'U'
	     </select>     
	    <select id="sqlGetOldWhDest" parameterClass="java.lang.String" resultClass="java.lang.String">
	  		    select wh_dest old_wh_dest
                from   uld_inventory
                where  uld_key = #ULD_KEY#
                and    owned_inv = 'Y' 
        </select>
        <update id="sqlUpdUldInvData" parameterClass="java.util.HashMap">
        		update uld_inventory
                set wh_dest = #WH_DEST#,
                    loc_code = #LOC_CODE#,
                    cfm_status = 'CONFIRMED',
                    flt_key = null,
                    flt_date = null,
                    flt_type = null
               where  uld_key = #ULD_KEY#
		</update>
		<insert id="sqlInsToUldMovDtls" parameterClass="java.util.HashMap">
			insert into uld_mov(tr_type, event_id, uld_key, tr_no, tr_date, doc_line_no, mov_from, mov_to, flt_type, flt_key, flt_date,
			cr_user_id, cr_date, lm_user_id, lm_date, seq_no)
			values ('OF','OF', #ULD_KEY#, #ULD_KEY#, sysdate, 1, #OLD_WH_DEST#, #WH_DEST#, 'E', #FLT_KEY#, TO_DATE(#FLT_DATE#,'DDMONYY'),
			#USER_ID#, sysdate, #USER_ID#, sysdate, uld_mov_seq.nextval)  
		</insert> 
		<insert id="sqlInsToLspMovDtls" parameterClass="java.util.HashMap">
      insert into lsp_mov(tr_type, event_id, lsp_no, mov_date, doc_line_no, ORG_LOC_CODE, DEST_LOC_CODE, STRG_DATE, cr_user_id, cr_date, lm_user_id, lm_date, seq_no)
			values ( 'OF', #ULD_KEY#, #ULD_KEY#, sysdate, 1, #OLD_WH_DEST#, #WH_DEST#, sysdate,	#USER_ID#, sysdate, #USER_ID#, sysdate, lsp_mov_seq.nextval)    
		</insert> 
		<update id="sqlUpdateAwbInvenData" parameterClass="java.util.HashMap">
			update awb_inventory inv 
	        set inv.locn_pcs = inv.locn_pcs + #OFFLOAD_PCS#,
	            inv.locn_wt = inv.locn_wt + #OFFLOAD_WT#
	        where  inv.awb_no = #AWB_NO#
	        and    inv.awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')	
	        and    ((#LOC_CODE# is null and inv.loc_code is null) or (inv.loc_code = #LOC_CODE#))
	        and    ((#ULD_KEY# is null and inv.uld_key is null) or (inv.uld_key = #ULD_KEY#))
	        and    inv.flt_key is null  
	        and    exists (select null
					       from   awb
					       where  awb_no = inv.awb_no
					       and    awb_date = inv.awb_date
								 )  
	    </update> 
	   <select id="sqlGetRclDateAsStrgDate" parameterClass="java.util.HashMap" resultClass="java.lang.String"> 
	    	        select TO_CHAR(rcl_date,'DDMONYY HH24:MI') strg_date
	                from   (select rcl_date
	                        from   v_rcl_awb
	                        where  awb_no = #AWB_NO#
	                        and    awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')
	                        order by rcl_date)
	                where  rownum = 1  
	     </select> 
	     <insert id="sqlInsertAwbInv" parameterClass="java.util.HashMap">
	     	 insert into awb_inventory(awb_no, awb_date, carr_code, uld_key, wh_dest, loc_code, locn_pcs, locn_wt, strg_date,
             cr_user_id, cr_date, lm_user_id, lm_date)
	         values (#AWB_NO#, TO_DATE(#AWB_DATE#,'DDMONYY'), #CARR_CODE#, #ULD_KEY#, #WH_DEST#, #LOC_CODE#, #OFFLOAD_PCS#, #OFFLOAD_WT#, TO_DATE(#STRG_DATE#,'DDMONYY'),
	         #USER_ID#, sysdate, #USER_ID#, sysdate) 
	     </insert>
	     <update id="sqlUpdateExpoffUldAwbData" parameterClass="java.util.HashMap">
			    update exp_offload_uld_awb
		        set    confirmed_yn = 'Y',
		               confirmed_user_id = #USER_ID#,
		               confirmed_date = sysdate,
		               confirmed_rmk = #CONFIRMED_RMK#,
		               OFFLOAD_REASON = #OFFLOAD_REASON#
		        where  flt_key = #FLT_KEY#
		        and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
		        and    uld_bt_no = #ULD_KEY#
		        and    awb_no = #AWB_NO#
		        and    awb_date = #AWB_DATE#
		</update>
		<update id="sqlUpdateExpoffUldAwbDataNew" parameterClass="java.util.HashMap">
			    update exp_offload_uld_awb
		        set    confirmed_yn = 'Y',
		               OFFLOAD_PCS = #OFFLOAD_PCS#,
		               OFFLOAD_WT =  #OFFLOAD_WT#,
		               confirmed_user_id = #USER_ID#,
		               confirmed_date = sysdate,
		               confirmed_rmk = #CONFIRMED_RMK#,
		               OFFLOAD_REASON = #OFFLOAD_REASON#,
		               TR_TYPE=NVL(#TR_TYPE#,'COFFC')
		        where  flt_key = #FLT_KEY#
		        and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
		        and    uld_bt_no = #ULD_BT_NO#	     
		        and    awb_no = #AWB_NO#
		        and    awb_date = #AWB_DATE#   
		</update>
		<update id="sqlUpdateExpoffUldAwbDataNewafteroffload" parameterClass="java.util.HashMap">
			    update exp_offload_uld_awb
		        set    confirmed_yn = 'Y',
		               OFFLOAD_PCS = OFFLOAD_PCS + #OFFLOAD_PCS#,
		               OFFLOAD_WT =  OFFLOAD_WT + #OFFLOAD_WT#,
		               confirmed_user_id = #USER_ID#,
		               confirmed_date = sysdate,
		               confirmed_rmk = #CONFIRMED_RMK#,
		               OFFLOAD_REASON = #OFFLOAD_REASON#,
		                TR_TYPE=NVL(#TR_TYPE#,'COFFC')
		        where  flt_key = #FLT_KEY#
		        and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
		        and    uld_bt_no = #ULD_BT_NO#	     
		        and    awb_no = #AWB_NO#
		        and    awb_date = #AWB_DATE# 
		        and    confirmed_yn = 'Y'  
		</update>
		<update id="sqlUpdateExpPreoffUldAwbDataNew" parameterClass="java.util.HashMap">
			    update exp_offload_uld_awb
		        set    confirmed_yn = 'Y',
		               OFFLOAD_PCS = #OFFLOAD_PCS#,
		               OFFLOAD_WT =  #OFFLOAD_WT#,
		               confirmed_user_id = #CR_USER_ID#,
		               confirmed_date = sysdate,
		               confirmed_rmk = #CONFIRMED_RMK#,
		               OFFLOAD_REASON = #OFFLOAD_REASON#,
		               TR_TYPE=NVL(#TR_TYPE#,'COFFC'),
		               lm_user_id = #CR_USER_ID#,lm_date = sysdate
		        where  flt_key = #FLT_KEY#
		        and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
		        and    uld_bt_no = #ULD_BT_NO#	     
		        and    awb_no = #AWB_NO#
		        and    awb_date = #AWB_DATE#   
		</update>
		<update id="sqlUpdateExpPreoffUldAwbDataNewafteroffload" parameterClass="java.util.HashMap">
			    update exp_offload_uld_awb
		        set    confirmed_yn = 'Y',
		               OFFLOAD_PCS = OFFLOAD_PCS + #OFFLOAD_PCS#,
		               OFFLOAD_WT =  OFFLOAD_WT + #OFFLOAD_WT#,
		               confirmed_user_id = #USER_ID#,
		               confirmed_date = sysdate,
		               confirmed_rmk = #CONFIRMED_RMK#,
		               OFFLOAD_REASON = #OFFLOAD_REASON#,
		               TR_TYPE=NVL(#TR_TYPE#,'COFFC'),
		               lm_user_id = #CR_USER_ID#,lm_date = sysdate
		        where  flt_key = #FLT_KEY#
		        and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
		        and    uld_bt_no = #ULD_BT_NO#	     
		        and    awb_no = #AWB_NO#
		        and    awb_date = #AWB_DATE#  
		        and    confirmed_yn = 'Y'  
		</update>
		
		 <select id="checkRecordExistsInExpoffloaduld" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">  
	    	  select count(*) from exp_offload_uld where flt_key = #FLT_KEY#
		        and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
		        and    uld_bt_no = #ULD_BT_NO#
	     </select>     
	      <select id="checkRecordExistsInExpoffloaduldAWB" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">  
	    	   select count(*) from exp_offload_uld_awb where flt_key = #FLT_KEY#
		        and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
		        and    uld_bt_no = #ULD_BT_NO#
		        and    awb_no = #AWB_NO#
		        and    awb_date = #AWB_DATE#
		        and    confirmed_yn = 'Y'
	     </select>   
	     <select id="chaechUldExistsOrNotAutoSHC" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">  
	    	   select count(*) from exp_offload_uld_awb where awb_no = #AWB_NO#
		        and    awb_date = #AWB_DATE#
		        and    confirmed_yn = 'Y'
	     </select>
	     <select id="fetchAutoSHCsfromsysparam" parameterClass="java.util.HashMap" resultClass="java.lang.String">  
	    	   select rule_value from cmsrules  where rule_code='DEF_SPL_FOR_OFFLOAD'
	     </select>
	     <select id="fetchAwbSHCsforoffload" parameterClass="java.util.HashMap" resultClass="java.lang.String">  
	    	   SELECT decode(spl_code1, null, '', spl_code1 || decode(spl_code2, null, '',','))
		               || decode(spl_code2, null, '', spl_code2 || decode(spl_code3, null, '',','))
		               || decode(spl_code3, null, '', spl_code3 || decode(spl_code4, null, '',','))
		               || decode(spl_code4, null, '', spl_code4 || decode(spl_code5, null, '',','))
		               || decode(spl_code5, null, '', spl_code5 || decode(spl_code6, null, '',','))
		               || decode(spl_code6, null, '', spl_code6 || decode(spl_code7, null, '',','))
		               || decode(spl_code7, null, '', spl_code7 || decode(spl_code8, null, '',','))
		               || decode(spl_code8, null, '', spl_code8 || decode(spl_code9, null, '',',')) 
		               || decode(spl_code9, null, '', spl_code9 ) SHC FROM AWB WHERE AWB_NO=#AWB_NO# AND AWB_DATE=#AWB_DATE#
	     </select>
	     <select id="fetchpriorityAwbSHCsforoffload" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">  
	    	   SELECT DISTINCT SHC.CODE AS SHC,PRIORITY PRIORITY
    			FROM AWB A
    			JOIN MAST_SPL_HAND_CODE SHC ON SHC.CODE IN (A.SPL_CODE1, A.SPL_CODE2, A.SPL_CODE3, A.SPL_CODE4, A.SPL_CODE5, A.SPL_CODE6, A.SPL_CODE7, A.SPL_CODE8, A.SPL_CODE9)
    		where awb_no=#AWB_NO# and awb_date=#AWB_DATE# order by PRIORITY  asc
	     </select>
	     <select id="fetchpriorityOffloadSHCs" parameterClass="java.lang.String" resultClass="java.util.HashMap">
	     SELECT SHC.CODE AS SHC,PRIORITY PRIORITY FROM MAST_SPL_HAND_CODE SHC where SHC.CODE =#PARAM#
	     </select>
	     <select id="checkimpcarforoffload" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
	     select count(1) from imp_car_shp where awb_no=#AWB_NO# and awb_date=#AWB_DATE# and car_created='Y'
	     </select>
	     
	     <update id="autoshcupdateforoffload" parameterClass="java.util.HashMap" >
			update awb set 
				lm_user_id=#LM_USER_ID#,
				lm_date=sysdate
				<isNotEmpty property="SHC1">
				,SPL_CODE1=#SHC1#
				</isNotEmpty>
				<isNotEmpty property="SHC2">
				,SPL_CODE2=#SHC2#
				</isNotEmpty>
				<isNotEmpty property="SHC3">
				,SPL_CODE3=#SHC3#
				</isNotEmpty>
				<isNotEmpty property="SHC4">
				,SPL_CODE4=#SHC4#
				</isNotEmpty>
				<isNotEmpty property="SHC5">
				,SPL_CODE5=#SHC5#
				</isNotEmpty>
				<isNotEmpty property="SHC6">
				,SPL_CODE6=#SHC6#
				</isNotEmpty>
				<isNotEmpty property="SHC7">
				,SPL_CODE7=#SHC7#
				</isNotEmpty>
				<isNotEmpty property="SHC8">
				,SPL_CODE8=#SHC8#
				</isNotEmpty>
				<isNotEmpty property="SHC9">
				,SPL_CODE9=#SHC9# 
				</isNotEmpty>
				WHERE AWB_NO=#AWB_NO#
				AND AWB_DATE=#AWB_DATE#
    	</update>
    	<update id="autoshcupdateforoffloadimpcar" parameterClass="java.util.HashMap" >
			update imp_car_awb set 
				lm_user_id=#LM_USER_ID#,
				lm_date=sysdate
				<isNotEmpty property="SHC1">
				,SPL_CODE1=#SHC1#
				</isNotEmpty>
				<isNotEmpty property="SHC2">
				,SPL_CODE2=#SHC2#
				</isNotEmpty>
				<isNotEmpty property="SHC3">
				,SPL_CODE3=#SHC3#
				</isNotEmpty>
				<isNotEmpty property="SHC4">
				,SPL_CODE4=#SHC4#
				</isNotEmpty>
				<isNotEmpty property="SHC5">
				,SPL_CODE5=#SHC5#
				</isNotEmpty>
				<isNotEmpty property="SHC6">
				,SPL_CODE6=#SHC6#
				</isNotEmpty>
				<isNotEmpty property="SHC7">
				,SPL_CODE7=#SHC7#
				</isNotEmpty>
				<isNotEmpty property="SHC8">
				,SPL_CODE8=#SHC8#
				</isNotEmpty>
				<isNotEmpty property="SHC9">
				,SPL_CODE9=#SHC9# 
				</isNotEmpty>
				WHERE AWB_NO=#AWB_NO#
				AND AWB_DATE=#AWB_DATE#
    	</update>
    	<update id="autoshcupdateforoffloadexpcar" parameterClass="java.util.HashMap" >
			update EXP_CAR set 
				lm_user_id=#LM_USER_ID#,
				lm_date=sysdate
				<isNotEmpty property="SHC1">
				,SPL_CODE1=#SHC1#
				</isNotEmpty>
				<isNotEmpty property="SHC2">
				,SPL_CODE2=#SHC2#
				</isNotEmpty>
				<isNotEmpty property="SHC3">
				,SPL_CODE3=#SHC3#
				</isNotEmpty>
				<isNotEmpty property="SHC4">
				,SPL_CODE4=#SHC4#
				</isNotEmpty>
				<isNotEmpty property="SHC5">
				,SPL_CODE5=#SHC5#
				</isNotEmpty>
				<isNotEmpty property="SHC6">
				,SPL_CODE6=#SHC6#
				</isNotEmpty>
				<isNotEmpty property="SHC7">
				,SPL_CODE7=#SHC7#
				</isNotEmpty>
				<isNotEmpty property="SHC8">
				,SPL_CODE8=#SHC8#
				</isNotEmpty>
				<isNotEmpty property="SHC9">
				,SPL_CODE9=#SHC9# 
				</isNotEmpty>
				WHERE AWB_NO=#AWB_NO#
				AND AWB_DATE=#AWB_DATE#
    	</update>
	     <select id="checkRecordExistsInExpPreoffloaduldAWB" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">  
	    	   select count(*) from exp_offload_uld_awb where flt_key = #FLT_KEY#
		        and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
		        and    uld_bt_no = #ULD_BT_NO#
		        and    awb_no = #AWB_NO#
		        and    awb_date = #AWB_DATE#
	     </select>
		 <select id="checkoffloadisdoneornot" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">  
	    	   select count(*) from exp_offload_uld_awb where flt_key = #FLT_KEY#
		        and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
		        and    uld_bt_no = #ULD_BT_NO#
		        and    awb_no = #AWB_NO#
		        and    awb_date = #AWB_DATE#
		        and    confirmed_yn = 'Y'
	     </select>
	     <select id="chkrecoedexistsornotinexpoffldawb" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">  
	    	   select count(*) from exp_offload_awb where flt_key = #FLT_KEY#
		        and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
		        and    awb_no = #AWB_NO#
		        and    awb_date = #AWB_DATE#
	     </select>      
	     <select id="getppkTypeInExpOffloadAWB" parameterClass="java.util.HashMap" resultClass="java.lang.String">  
	    	   select ppk_type from exp_offload_uld where uld_bt_no=#ULD_BT_NO# and flt_key=#FLT_KEY# and flt_date=#FLT_DATE#
	     </select>     
	    <select id="getcontrCodeInExpOffloadAWB" parameterClass="java.util.HashMap" resultClass="java.lang.String">  
	    	  SELECT MAX(a.CONTR_CODE)
                     FROM
                     ULD_TYPE_CONTR a 
                     WHERE 
                     ULD_TYPE=SUBSTR(#ULD_BT_NO#,0,3) and rownum=1 GROUP BY a.ULD_TYPE
	     </select>      
	     
	     
	    <select id="getoffbulkppkDetailsInExpoffuldawb" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">  
	    	   select sum(assigned_pcs) as OFF_BULK_PCS,sum(assigned_wt) AS OFF_BULK_WT from exp_offload_uld_awb where flt_key=#FLT_KEY# and flt_date=#FLT_DATE# and awb_no=#AWB_NO#
	     </select>      
	    
	    <select id="sqlGetExpFltCarr" parameterClass="java.util.HashMap" resultClass="java.lang.String">  
	    	   select CARR_CODE from flt_opr where flt_key=#FLT_KEY# and SCH_date=#FLT_DATE# and flt_type='D' AND ROWNUM=1
	     </select>      
	      <select id="getTrnoFromExpOffloaduldAWB" parameterClass="java.util.HashMap" resultClass="java.lang.String">
	      select tr_no from exp_offload_uld_Awb where awb_no=#AWB_NO# and awb_date=TO_DATE(#AWB_DATE#,'DDMONYY') and flt_key=#FLT_KEY# and flt_date=#FLT_DATE# and unldg_pt=#UNLDG_PT# AND ULD_BT_NO=#OLD_ULD_KEY#
	      </select>
	      <select id="getNewtrnoforexpoffloaduldawb" parameterClass="java.util.HashMap" resultClass="java.lang.String">
	      select (EXP_OFFLOAD_ULD_AWB_SEQ.nextval) as tr_no from dual
	      </select>
	      <update id="updateTrnoInExpOffloaduldAWB" parameterClass="java.util.HashMap">
	      update exp_offload_uld_Awb set tr_no= #TR_NO# where awb_no=#AWB_NO# and awb_date=TO_DATE(#AWB_DATE#,'DDMONYY') and flt_key=#FLT_KEY# and flt_date=#FLT_DATE# and unldg_pt=#UNLDG_PT# AND ULD_BT_NO=#OLD_ULD_KEY# AND TR_NO IS NULL
	      </update>
		  <insert id="insertExpoffloaduldlspdtl" parameterClass="java.util.HashMap">
	     	insert into exp_offload_uld_lsp_dtl(FLT_KEY,FLT_DATE,UNLDG_PT,AWB_NO, AWB_DATE, ULD_BT_NO, LSP_NO,OFFLOAD_PCS, OFFLOAD_WT, TR_NO,
             cr_user_id, cr_date, lm_user_id, lm_date)
	         values (#FLT_KEY#,#FLT_DATE#,#UNLDG_PT#,#AWB_NO#, TO_DATE(#AWB_DATE#,'DDMONYY'), #ULD_KEY#,#LSP_NO#, #OFFLOAD_PCS#, #OFFLOAD_WT#,#TR_NO#, 
	         #USER_ID#, sysdate, #USER_ID#, sysdate)
	     </insert>
		<insert id="sqlInsertExpoffUldAwbDataNew" parameterClass="map">
		INSERT INTO EXP_OFFLOAD_ULD_AWB (TR_TYPE,
		   FLT_KEY, 
		   FLT_DATE, 
		   ULD_BT_NO, 
		   AWB_NO, 
		   AWB_DATE, 
		   UNLDG_PT, 
		   ASSIGNED_PCS, 
		   ASSIGNED_WT, 
		   OFFLOAD_PCS, 
		   OFFLOAD_WT, 
		   OFFLOAD_TYPE, 
		   CONFIRMED_RMK, 
		   OFFLOAD_REASON,
		   CR_USER_ID, 
		   CR_DATE, 
		   LM_USER_ID, 
		   LM_DATE,
		   confirmed_yn,
		   CONFIRMED_USER_ID,
		   CONFIRMED_DATE,
		   TR_NO)		    
		 values (NVL(#TR_TYPE#,'COFFC'),
		 #FLT_KEY#,
			#FLT_DATE#,
			#ULD_BT_NO#,
			#AWB_NO#, 
			#AWB_DATE#,
			#UNLDG_PT#,
			#ASSIGNED_PCS#,
			#ASSIGNED_WT#,
			#OFFLOAD_PCS#,
			#OFFLOAD_WT#,
			'U',
			#CONFIRMED_RMK#,
			#OFFLOAD_REASON#,
			#LM_USER_ID#,
			sysdate,
			#LM_USER_ID#,
			sysdate,
			'Y',
			#LM_USER_ID#,
			sysdate,
			EXP_OFFLOAD_ULD_AWB_SEQ.nextval)
	</insert>
	
	<insert id="sqlInsertExpoffUldDataNew" parameterClass="map">
		insert into exp_offload_uld(flt_key, flt_date, uld_bt_no, unldg_pt, contr_code, ppk_type, uld_type, offload_uld_yn, CONFIRMED_RMK,
		    	cr_user_id, cr_date, lm_user_id, lm_date,no_brk_ind,confirmed_yn)
	            values (#FLT_KEY#, TO_DATE(#FLT_DATE#,'DDMONYY'), #ULD_BT_NO#, #UNLDG_PT#,
	            #CONTR_CODE#, 
	            (SELECT CASE WHEN PPK_IND = 'N' AND MIX_PPK_IND = 'N' THEN 'B'
                         ELSE CASE WHEN PPK_IND = 'Y' AND MIX_PPK_IND = 'N' THEN 'P' 
                         ELSE CASE WHEN PPK_IND = 'N' AND MIX_PPK_IND = 'Y' THEN 'M'
                         ELSE NULL END END END FROM ULD_INVENTORY WHERE ULD_KEY=#ULD_BT_NO#), 
	            (select case when length(#ULD_BT_NO#) > 6 then 'ULD' ELSE 'BT' END FROM DUAL), 'N', #CONFIRMED_RMK#,
	        	#LM_USER_ID#, sysdate, #LM_USER_ID#, sysdate,'N','Y')
	</insert>
		<update id="sqlUpdateExpOffUldDataNew" parameterClass="java.util.HashMap">
		        update exp_offload_uld set
		               confirmed_yn = 'Y',
		               CONFIRMED_RMK = #CONFIRMED_RMK#,
		               LM_USER_ID = #CR_USER_ID#,
		               LM_DATE = SYSDATE
		        where  flt_key = #FLT_KEY#
		        and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
		        and    uld_bt_no = #ULD_BT_NO#
		</update>
	  <update id="sqlUpdateDataPPKinExpofflduld" parameterClass="java.util.HashMap">
	  update exp_offload_awb set
	          preoff_bulk_pcs = 0,
	          preoff_bulk_wt = 0,
	          preoff_ppk_pcs = 0,
	          preoff_ppk_wt = 0,
	          OFF_BULK_PCS = nvl(OFF_BULK_PCS,0) + #OFF_BULK_PCS#,
	          OFF_BULK_WT = nvl(OFF_BULK_WT,0) + #OFF_BULK_WT#
	   where  flt_key = #FLT_KEY#
	   and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
	   and    awb_no = #AWB_NO#
	   and    awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')
	  </update>


		<update id="sqlUpdateBucompIndInEXPPmanUld" parameterClass="java.util.HashMap">
		        update exp_pmanifest_uld set TR_TYPE =NVL(#TR_TYPE#,'COFFC'),
		               BLDUP_COMPLETE = 'N',
		               BLDUP_COMPLETE_USER_ID='',
		               BLDUP_COMPLETE_DATE=''
		        where  flt_key = #FLT_KEY#
		        and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
		        and    uld_bt_no = #ULD_BT_NO#
		</update>
	  <update id="sqlUpdateDataOFFinExpofflduld" parameterClass="java.util.HashMap">
  update exp_offload_awb set
          preoff_bulk_pcs = 0,
          preoff_bulk_wt = 0,
          preoff_ppk_pcs = 0,
          preoff_ppk_wt = 0,
          OFF_PPK_PCS = nvl(OFF_PPK_PCS,0) + #OFF_BULK_PCS#,
          OFF_PPK_WT = nvl(OFF_PPK_WT,0) + #OFF_BULK_WT#
   where  flt_key = #FLT_KEY#
   and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
   and    awb_no = #AWB_NO#
   and    awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')
  </update>
  <update id="sqlUpdateDataPPKinAWB" parameterClass="java.util.HashMap">
		update awb set
			       OFFLOAD_BULK_PCS = nvl(OFFLOAD_BULK_PCS,0) + #OFF_BULK_PCS#,
			       OFFLOAD_BULK_WT = nvl(OFFLOAD_BULK_WT,0) + #OFF_BULK_WT#,
			       TR_TYPE =#TR_TYPE#
			where  awb_no = #AWB_NO#
			and    awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')
  </update>
  <update id="sqlUpdateTarmacDataPPKinAWB" parameterClass="java.util.HashMap">
		update awb set
			       OFFLOAD_BULK_PCS =  nvl(OFFLOAD_BULK_PCS,0) + #OFF_BULK_PCS#,
			       OFFLOAD_BULK_WT = nvl(OFFLOAD_BULK_WT,0) + #OFF_BULK_WT#,
			       TR_TYPE =#TR_TYPE#
			where  awb_no = #AWB_NO#
			and    awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')
  </update>
		<update id="sqlUpdateDataOFFinAWB" parameterClass="java.util.HashMap">
		  update awb set
		          OFFLOAD_PPK_PCS = nvl(OFFLOAD_PPK_PCS,0) + #OFF_BULK_PCS#,
		          OFFLOAD_PPK_WT = nvl(OFFLOAD_PPK_WT,0) + #OFF_BULK_WT#,
		          TR_TYPE =#TR_TYPE#
		   where  awb_no = #AWB_NO#
		   and    awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')
		</update>
		<update id="sqlTarmacUpdateDataOFFinAWB" parameterClass="java.util.HashMap">
		  update awb set
		          OFFLOAD_PPK_PCS = nvl(OFFLOAD_PPK_PCS,0) + #OFF_BULK_PCS#,
		          OFFLOAD_PPK_WT = nvl(OFFLOAD_PPK_WT,0) + #OFF_BULK_WT#,
		          TR_TYPE =#TR_TYPE#
		   where  awb_no = #AWB_NO#
		   and    awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')
		</update>
		<update id="sqlUpdateTarmacAwbInvData" parameterClass="java.util.HashMap">
	      		update awb_inventory inv
	            set inv.locn_pcs = inv.locn_pcs - #LOCN_PCS#,
	                inv.locn_wt = inv.locn_wt - #LOCN_WT#
		        where  inv.awb_no = #AWB_NO#
		        and    awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')				
		        and    inv.uld_key = #ULD_KEY#
		        and    inv.flt_key is null	
		        and    exists (select null
						       from   awb
						       where  awb_no = inv.awb_no
						       and    awb_date = inv.awb_date)  
	     </update>
		 <update id="sqlUpdateTarmacAwbInvLspData" parameterClass="java.util.HashMap">
	      		update awb_inventory inv
	            set inv.locn_pcs = inv.locn_pcs - #LOCN_PCS#,
	                inv.locn_wt = inv.locn_wt - #LOCN_WT#
		        where  inv.awb_no = #AWB_NO#
		        and    awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')				
		        and    inv.lsp_no=#LSP_NO#
		        and    inv.flt_key is null	
		        and    exists (select null
						       from   awb
						       where  awb_no = inv.awb_no
						       and    awb_date = inv.awb_date)  
	     </update>
		 <select id="sqlGetDataOfLspAwbInv" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	     		SELECT inv.locn_pcs, inv.seq_no
	     		FROM  awb_inventory inv
	     		JOIN AWB awb ON UPPER(awb.AWB_NO) = UPPER(inv.AWB_NO) 
				AND UPPER (awb.awb_date) = UPPER (inv.awb_date)				 
	     		where  inv.awb_no = #AWB_NO#
		        and    inv.awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')					
		        and    inv.lsp_no = #LSP_NO#
		        and    inv.flt_key is null
		  </select>
		<update id="deleteAwbinPPKDataNew" parameterClass="java.util.HashMap">
		update awb set
			       OFFLOAD_BULK_PCS = nvl(OFFLOAD_BULK_PCS,0) - #OFF_BULK_PCS#,
			       OFFLOAD_BULK_WT = nvl(OFFLOAD_BULK_WT,0) - #OFF_BULK_WT#,
			       TR_TYPE =#TR_TYPE#
			where  awb_no = #AWB_NO#
			and    awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')
		</update>
	<update id="sqlUpdateTarmacBBinAWB" parameterClass="java.util.HashMap">
		update awb set
			       OFFLOAD_BULK_PCS = nvl(OFFLOAD_BULK_PCS,0) + #OFF_BULK_PCS#,
			       OFFLOAD_BULK_WT = nvl(OFFLOAD_BULK_WT,0) + #OFF_BULK_WT#,
			       TR_TYPE =#TR_TYPE#
			where  awb_no = #AWB_NO#
			and    awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')
  </update>

		<update id="sqlUpdateExpOffUldData" parameterClass="java.util.HashMap">
		        update exp_offload_uld set TR_TYPE = NVL(#TR_TYPE#,'COFFC'),
		               confirmed_yn = 'Y',
		               LM_USER_ID = #CR_USER_ID#,
		               LM_DATE = SYSDATE
		        where  flt_key = #FLT_KEY#
		        and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
		        and    uld_bt_no = #ULD_KEY#
		</update>
		<select id="sqlGetCountAsPreoffloadCount" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		        select count(1) preoffload_count
		        from   exp_offload_uld_awb
		        where  flt_key = #FLT_KEY#
				and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
				and    confirmed_yn = 'N'
		</select>  
		<select id="sqlGetExpOffUldAwdOldData" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">		
				SELECT CONFIRMED_YN, OFFLOAD_PCS, OFFLOAD_WT, ULD_BT_NO, AWB_NO,
				TO_CHAR(AWB_DATE,'DDMONYY') AWB_DATE, UNLDG_PT
				FROM   EXP_OFFLOAD_ULD_AWB
				WHERE  FLT_KEY = #FLT_KEY#
		        AND    FLT_DATE = TO_DATE(#FLT_DATE#,'DDMONYY')
		        AND    ULD_BT_NO = #ULD_KEY#
		</select>	  
	  <!--		Queries for function pkg.offload.confirm_offload_uld end-->
	  <!--		Queries for function pkg.offload.del_offload_uld end--> 
		  <select id="sqlGetDataOfExpOffUldAwb" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">		  
		  		  select unldg_pt, awb_no, TO_char(AWB_DATE,'DDMONYY') awb_date, offload_pcs, offload_wt
		          from   exp_offload_uld_awb
		          where  flt_key = #FLT_KEY#
		          and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
		          and    uld_bt_no = #ULD_KEY#
		   </select>
		   <select id="sqlGetFltKey" parameterClass="java.lang.String" resultClass="java.lang.String">
		   		 select flt_key
	             from   uld_inventory
	             where  uld_key = #ULD_KEY#
	      </select>
	      <select id="sqlGetCountFltKey" parameterClass="java.lang.String" resultClass="java.lang.String">
		   		 select count(*) count
	             from   uld_inventory
	             where  uld_key = #ULD_KEY#
	      </select>
	      <update id="sqlUpdateAwbInvData" parameterClass="java.util.HashMap">
	      		update awb_inventory inv
	            set inv.locn_pcs = inv.locn_pcs - #OFFLOAD_PCS#,
	                inv.locn_wt = inv.locn_wt - #OFFLOAD_WT#
		        where  inv.awb_no = #AWB_NO#
		        and    awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')				
		        and    inv.uld_key = #ULD_KEY#
		        and    inv.flt_key is null	
		        and    exists (select null
						       from   awb
						       where  awb_no = inv.awb_no
						       and    awb_date = inv.awb_date)  
	     </update>
	     <update id="sqlUpdateAwbInvLspData" parameterClass="java.util.HashMap">
	      		update awb_inventory inv
	            set inv.locn_pcs = inv.locn_pcs - #OFFLOAD_PCS#,
	                inv.locn_wt = inv.locn_wt - #OFFLOAD_WT#
		        where  inv.awb_no = #AWB_NO#
		        and    awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')				
		        and    (inv.lsp_no = '' or (inv.lsp_no is null and inv.uld_key is null and inv.loc_code=#LOCN#))
		        and    inv.flt_key is null	
		        and    exists (select null
						       from   awb
						       where  awb_no = inv.awb_no
						       and    awb_date = inv.awb_date)  
	     </update> 
	     <select id="sqlGetDataOfAwbInv" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	     		SELECT inv.locn_pcs, inv.seq_no
	     		FROM  awb_inventory inv
	     		JOIN AWB awb ON UPPER(awb.AWB_NO) = UPPER(inv.AWB_NO) 
				AND UPPER (awb.awb_date) = UPPER (inv.awb_date)				 
	     		where  inv.awb_no = #AWB_NO#
		        and    inv.awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')					
		        and    inv.uld_key = #ULD_KEY#
		        and    inv.flt_key is null
		  </select>
		  <select id="sqlGetDataOfAwbInvLsp" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	     		SELECT inv.locn_pcs, inv.seq_no
	     		FROM  awb_inventory inv
	     		JOIN AWB awb ON UPPER(awb.AWB_NO) = UPPER(inv.AWB_NO) 
				AND UPPER (awb.awb_date) = UPPER (inv.awb_date)				 
	     		where  inv.awb_no = #AWB_NO#
		        and    inv.awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')					
		        and    inv.flt_key is null and inv.locn_pcs = 0
		  </select>
		 <delete id="sqlDelAwbInvFromSeqNo" parameterClass="java.lang.String">
		 		delete from awb_inventory
	            where  seq_no = #SEQ_NO#
	     </delete> 
	     <update id="sqlUpdateExpOffUldAwbDtls" parameterClass="java.util.HashMap">		
	     		update exp_offload_uld_awb set
                confirmed_yn = 'N',
                confirmed_user_id = null,
                confirmed_date = null,
                confirmed_rmk = null,
                tr_type = 'DOFFC',
                lm_user_id = #LM_USER_ID#
		        where  flt_key = #FLT_KEY#
		        and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
		        and    uld_bt_no = #ULD_KEY#
		</update>
		<delete id="deleteExpoffloaduldlspdata" parameterClass="java.util.HashMap">
		delete from exp_offload_uld_lsp_dtl where tr_no in (select tr_no from exp_offload_uld_awb where flt_key=#FLT_KEY# and flt_date=#FLT_DATE# and uld_bt_no=#ULD_KEY#)
		</delete>
		<update id="sqlUpdateExpOffUldDtls" parameterClass="java.util.HashMap">
		        update exp_offload_uld set
		               confirmed_yn = 'N',
		               TR_TYPE = 'DOFFC',
		               checked_in_flag = 'N',
		               lm_user_id = #LM_USER_ID#
		        where  flt_key = #FLT_KEY#
		        and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
		        and    uld_bt_no = #ULD_KEY#
		</update>
		<update id="sqlUpdateExpChkoutDtls" parameterClass="java.util.HashMap">
		        update exp_chkout_dtl set
		        chk_flg = 'Y',
		        chkout_user = #LM_USER_ID#,
		        chkout_time = to_char(sysdate, 'HH24MI'),
		        chkout_date = sysdate
		        where  flt_key = #FLT_KEY#
		        and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
		        and    uld_key = #ULD_KEY#
	    </update> 
	    <select id="sqlGetCountAsOffloadCount" parameterClass="java.util.HashMap" resultClass="java.lang.String">
	    		select count(1) offload_count
		        from   exp_offload_uld_awb
		        where  flt_key = #FLT_KEY#
				and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
				and    confirmed_yn = 'Y'
		</select>
		
		 <select id="sqlGetCountAsCheckoutCount" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
	    		select count(*) from exp_chkout_dtl where flt_key = #FLT_KEY#  and  flt_date = TO_DATE(#FLT_DATE#,'DDMONYY') and uld_key = #ULD_KEY#
		</select>
		
		<select id="sqlGetExpCkhOutDataForTrig" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
				SELECT CHK_FLG, IU_FROM_IND, CHKOUT_USER, TO_CHAR(CHKOUT_DATE,'DDMONYY') CHKOUT_DATE, CHKOUT_TIME, LOC_CODE
				FROM EXP_CHKOUT_DTL
				WHERE  FLT_KEY = #FLT_KEY#
		        AND    FLT_DATE = TO_DATE(#FLT_DATE#,'DDMONYY')
		        AND    ULD_KEY = #ULD_KEY#
		</select>
	  <!--		Queries for function pkg.offload.del_offload_uld end--> 
	  <!--		Queries for procedure pkg.offload.upd_offload_awb begin--> 
	   <select id="sqlGetPpkTypeFromExpOffUld" parameterClass="java.util.HashMap" resultClass="java.lang.String">			
	  			select decode(ppk_type, 'B', 'B', 'P') ppk_type
				from   exp_offload_uld
			    where  flt_key = #FLT_KEY#
			    and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
			    and    uld_bt_no = #ULD_BT_NO#	
		</select>
		<update id="sqlUpdExpOffAwbDtls" parameterClass="java.util.HashMap">
			UPDATE EXP_OFFLOAD_AWB SET
		    OFF_BULK_PCS = OFF_BULK_PCS + #PREOFF_BULK_PCS#,
		    OFF_BULK_WT = OFF_BULK_WT + #PREOFF_BULK_WT#,
		    OFF_PPK_PCS = OFF_PPK_PCS + #PREOFF_PPK_PCS#,
		    OFF_PPK_WT = OFF_PPK_WT + #PREOFF_PPK_WT#,
		    LM_USER_ID = #USER_ID#,
		    LM_DATE = SYSDATE
			WHERE  FLT_KEY = #FLT_KEY#
			AND    FLT_DATE = TO_DATE(#FLT_DATE#,'DDMONYY')
			AND    UNLDG_PT = #UNLDG_PT#
			AND    AWB_NO = #AWB_NO#
			AND    AWB_DATE = TO_DATE(#AWB_DATE#,'DDMONYY')
		</update>	
		<update id="sqlUpdExpOffSubAwbDtls" parameterClass="java.util.HashMap">
			UPDATE EXP_OFFLOAD_AWB SET
		    OFF_BULK_PCS = OFF_BULK_PCS - #PREOFF_BULK_PCS#,
		    OFF_BULK_WT = OFF_BULK_WT - #PREOFF_BULK_WT#,
		    OFF_PPK_PCS = OFF_PPK_PCS - #PREOFF_PPK_PCS#,
		    OFF_PPK_WT = OFF_PPK_WT - #PREOFF_PPK_WT#,
		    LM_USER_ID = #USER_ID#,
		    LM_DATE = SYSDATE
			WHERE  FLT_KEY = #FLT_KEY#
			AND    FLT_DATE = TO_DATE(#FLT_DATE#,'DDMONYY')
			AND    UNLDG_PT = #UNLDG_PT#
			AND    AWB_NO = #AWB_NO#
			AND    AWB_DATE = TO_DATE(#AWB_DATE#,'DDMONYY')
		</update>
		<select id="sqlGetCountofExpOffAwbcount" parameterClass="java.util.HashMap" resultClass="java.lang.String">
	     		select count(*) count
	 	from   exp_offload_awb
   		where  FLT_KEY = #FLT_KEY#
			AND FLT_DATE = TO_DATE(#FLT_DATE#,'DDMONYY')
			AND UNLDG_PT = #UNLDG_PT#
			AND AWB_NO = #AWB_NO#
			AND AWB_DATE = TO_DATE(#AWB_DATE#,'DDMONYY')
      		AND PREOFF_BULK_PCS=0
      		AND PREOFF_BULK_WT=0
      		AND PREOFF_PPK_PCS=0
      		AND PREOFF_PPK_WT=0
      		AND OFF_BULK_PCS=0
      		AND OFF_BULK_WT=0
      		AND OFF_PPK_PCS=0
      		AND OFF_PPK_WT=0
		</select>
		<delete id="delete_exp_offload_awb_count0" parameterClass="java.util.HashMap">
		DELETE
            FROM exp_offload_awb
            where  FLT_KEY = #FLT_KEY#
                AND FLT_DATE = TO_DATE(#FLT_DATE#,'DDMONYY')
                AND UNLDG_PT = #UNLDG_PT#
          			AND AWB_NO = #AWB_NO#
                AND AWB_DATE = TO_DATE(#AWB_DATE#,'DDMONYY')
		</delete>
		<select id="sqlGetExpCffAwbDataForTrig" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
			SELECT OFF_BULK_PCS,OFF_PPK_PCS,OFF_BULK_WT,OFF_PPK_WT
			FROM EXP_OFFLOAD_AWB
			WHERE  FLT_KEY = #FLT_KEY#
			AND    FLT_DATE = TO_DATE(#FLT_DATE#,'DDMONYY')
			AND    UNLDG_PT = #UNLDG_PT#
			AND    AWB_NO = #AWB_NO#
			AND    AWB_DATE = TO_DATE(#AWB_DATE#,'DDMONYY') 
		</select>
		<insert id="sqlInsertExpOffPmanAwb" parameterClass="java.util.HashMap">
			 insert into exp_offload_pman_awb(flt_key, flt_date, unldg_pt, awb_no, awb_date, group_no, bldup_instr, man_rmk, shp_type,
	         cr_user_id, cr_date, lm_user_id, lm_date)
	         select flt_key, flt_date, unldg_pt, awb_no, awb_date, group_no, bldup_instr, man_rmk, shp_type,
	         #USER_ID#, cr_date, #USER_ID#, lm_date
	         from   exp_pmanifest_awb
	         where  flt_key = #FLT_KEY#
		     and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
			 and    unldg_pt = #UNLDG_PT#
			 and    awb_no = #AWB_NO#
			 and    awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')
		</insert> 
		<update id="sqlUpdExpPmaniuldDtls" parameterClass="java.util.HashMap">
			update exp_pmanifest_uld_awb
	        set assigned_pcs = assigned_pcs - #OFFLOAD_PCS#,
	            assigned_wt = assigned_wt - #OFFLOAD_WT#
			where  flt_key = #FLT_KEY#
			and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
			and    uld_bt_no = #ULD_BT_NO#
			and    unldg_pt = #UNLDG_PT#
			and    awb_no = #AWB_NO#
			and    awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')
		</update>
		<select id="sqlGetAssPcs" parameterClass="java.util.HashMap" resultClass="java.lang.String">	
			select assigned_pcs
			from exp_pmanifest_uld_awb
			where  flt_key = #FLT_KEY#
			and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
			and    uld_bt_no = #ULD_BT_NO#
			and    unldg_pt = #UNLDG_PT#
			and    awb_no = #AWB_NO#
			and    awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')
		</select>
		<select id="sqlGetExpPmaniUldAwbDtls" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
			select ASSIGNED_PCS, ASSIGNED_WT, FLT_TYPE, FLT_KEY, TO_CHAR(FLT_DATE,'DDMONYY') FLT_DATE, UNLDG_PT,
			       ULD_BT_NO, AWB_NO, TO_CHAR(AWB_DATE,'DDMONYY') AWB_DATE, PPK_TYPE , CR_USER_ID, LM_USER_ID
			from exp_pmanifest_uld_awb
			where  flt_key = #FLT_KEY#
				and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
				and    uld_bt_no = #ULD_BT_NO#
				and    unldg_pt = #UNLDG_PT#
				and    awb_no = #AWB_NO#
				and    awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')
		</select>
		<delete id="sqlDelExpPmaniUldAwb" parameterClass="java.util.HashMap">
			    delete from exp_pmanifest_uld_awb
			    where  flt_key = #FLT_KEY#
			    and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
				and    uld_bt_no = #ULD_BT_NO#
				and    unldg_pt = #UNLDG_PT#
				and    awb_no = #AWB_NO#
				and    awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')
		</delete>
		<select id="sqlGetXAsDummy" parameterClass="java.util.HashMap" resultClass="java.lang.String">	
				select 'x' dummy
				from   exp_pmanifest_uld_awb
				where  flt_key = #FLT_KEY#
				and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
				and    uld_bt_no = #ULD_BT_NO#
				and    rownum = 1
		</select>
		<insert id="sqlInsertExpOffPmanUld" parameterClass="java.util.HashMap">
				insert into exp_offload_pman_uld(flt_key, flt_date, uld_bt_no, unldg_pt, group_no, ppk_type, shp_type,
					   bldup_instr, man_rmk, rcl_no, contr_code, tare_wt, gross_wt, empty_yn, eic_yn, cr_user_id, cr_date, lm_user_id, lm_date)
				select flt_key, flt_date, uld_bt_no, unldg_pt, group_no, ppk_type, shp_type,
				       bldup_instr, man_rmk, rcl_no, contr_code, tare_wt, gross_wt, empty_yn, eic_yn, #USER_ID#, cr_date, #USER_ID#, lm_date
				from   exp_pmanifest_uld
				where  flt_key = #FLT_KEY#
				and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
				and    uld_bt_no = #ULD_BT_NO#
		</insert>
		<delete id="sqlDelExpPmaniUld" parameterClass="java.util.HashMap">
				delete from exp_pmanifest_uld
				where  flt_key = #FLT_KEY#
				and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
				and    uld_bt_no = #ULD_BT_NO#
		</delete>
		<select id="sqlGetExpPmaniUldForTrig" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
				SELECT FLT_KEY,TO_DATE(#FLT_DATE#,'DDMONYY') FLT_DATE,ULD_BT_NO,RCL_NO,PPK_TYPE,UNLDG_PT,LM_USER_ID
				FROM EXP_PMANIFEST_ULD
				WHERE  FLT_KEY = #FLT_KEY#
				AND    FLT_DATE = TO_DATE(#FLT_DATE#,'DDMONYY')
				AND    ULD_BT_NO = #ULD_BT_NO#	
		</select>
		<update id="sqlUpdExpPmaniAwbDtls" parameterClass="java.util.HashMap">
				update exp_pmanifest_awb set
			    bulk_pcs = bulk_pcs - #PREOFF_BULK_PCS#,
			    bulk_wt = bulk_wt - #PREOFF_BULK_WT#
				where  flt_key = #FLT_KEY#
				and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
				and    unldg_pt = #UNLDG_PT#
				and    awb_no = #AWB_NO#
				and    awb_date =TO_DATE(#AWB_DATE#,'DDMONYY')
		</update>
		<select id="sqlGetPmanPcs" parameterClass="java.util.HashMap" resultClass="java.lang.String">			
				select pman_pcs
				from exp_pmanifest_awb
				where  flt_key = #FLT_KEY#
				and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
				and    unldg_pt = #UNLDG_PT#
				and    awb_no = #AWB_NO#
				and    awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')
		</select>
		<select id="sqlGetExpPmaniAwbForTrig" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
				SELECT FLT_KEY,TO_CHAR(#FLT_DATE#,'DDMONYY') FLT_DATE, AWB_NO, TO_CHAR(#AWB_DATE#,'DDMONYY') AWB_DATE,
				BULK_PCS, BULK_WT, PPK_PCS, PPK_WT, MIX_PCS, MIX_WT,  
				LM_USER_ID,PMAN_PCS, PMAN_WT,ASSIGNED_BULK_PCS, ASSIGNED_BULK_WT
				FROM EXP_PMANIFEST_AWB
				WHERE  FLT_KEY = #FLT_KEY#
						AND    FLT_DATE = TO_DATE(#FLT_DATE#,'DDMONYY')
						AND    UNLDG_PT = #UNLDG_PT#
						AND    AWB_NO = #AWB_NO#
						AND    AWB_DATE = TO_DATE(#AWB_DATE#,'DDMONYY')	
		</select>
		<delete id="sqlDelExpPmaniAwb" parameterClass="java.util.HashMap">
				delete from exp_pmanifest_awb 
				where  flt_key = #FLT_KEY#
				and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
				and    unldg_pt = #UNLDG_PT#
				and    awb_no = #AWB_NO#
				and    awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')	
		</delete>
		<delete id="sqlDelAwbInvChkOut" parameterClass="java.util.HashMap">
				delete from awb_inventory_chkout
				where  flt_key = #FLT_KEY#
				and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
				and    uld_key = #ULD_BT_NO#
				and    awb_no = #AWB_NO#
				and    awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')	
		</delete>
		<insert id="sqlInsertAwbInvChkOut" parameterClass="java.util.HashMap">
				insert into awb_inventory_chkout
					   (AWB_NO, AWB_DATE, CARR_CODE, CATALOG, CC_CODE, SRF_NO, TRM_NO, CDIF_NO, SCH_COLL_DATE, 
					   LSP_NO, WH_DEST, LOC_CODE, LOCN_PCS, LOCN_WT, RTRV_DATE, RTRV_USER_ID, STRG_DATE, STRG_RMK, DAM_IND, 
					   PPK_IND, BULK_WT, BUP_WT, FLT_NO, FLT_DATE, FLT_TYPE, FLT_KEY, ULD_KEY, CR_USER_ID, CR_DATE, LM_USER_ID, 
					   LM_DATE, SEQ_NO, REF_LSP_TR_TYPE, REF_LSP_TR_EVENT, REF_TR_NO, REF_TR_TYPE, REF_TR_DATE, REF_DOC_LINE_NO, 
					   REF_LOC_FROM, REF_TR_EVENT, REF_RMK, REF_MOV_FROM, REF_AWB_EVENT)
				select AWB_NO, AWB_DATE, CARR_CODE, CATALOG, CC_CODE, SRF_NO, TRM_NO, CDIF_NO, SCH_COLL_DATE, 
					   LSP_NO, WH_DEST, LOC_CODE, LOCN_PCS, LOCN_WT, RTRV_DATE, RTRV_USER_ID, STRG_DATE, STRG_RMK, DAM_IND, 
					   PPK_IND, BULK_WT, BUP_WT, FLT_NO, FLT_DATE, FLT_TYPE, FLT_KEY, ULD_KEY, CR_USER_ID, CR_DATE, LM_USER_ID, 
					   LM_DATE, SEQ_NO, REF_LSP_TR_TYPE, REF_LSP_TR_EVENT, REF_TR_NO, REF_TR_TYPE, REF_TR_DATE, REF_DOC_LINE_NO, 
					   REF_LOC_FROM, REF_TR_EVENT, REF_RMK, REF_MOV_FROM, REF_AWB_EVENT
				from awb_inventory 
				where  flt_key = #FLT_KEY#
				and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
				and    uld_key = #ULD_BT_NO#
				and    awb_no = #AWB_NO#
		</insert>
		<update id="sqlUpdExpPmaniAwbData" parameterClass="java.util.HashMap">
				update exp_pmanifest_awb set
			    bulk_pcs = bulk_pcs - #PREOFF_BULK_PCS#,
			    bulk_wt = bulk_wt - #PREOFF_BULK_WT#
				where  flt_key = #FLT_KEY#
				and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
				and    unldg_pt = #UNLDG_PT#
				and    awb_no = #AWB_NO#
				and    awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')	
		</update>
		<insert id="sqlInsertExpPmaniAwb" parameterClass="java.util.HashMap">
				insert into exp_pmanifest_awb(flt_key, flt_date, unldg_pt, awb_no, awb_date, group_no, bldup_instr, man_rmk, shp_type, bulk_pcs, bulk_wt,
                       cr_user_id, cr_date, lm_user_id, lm_date)
                select flt_key, flt_date, unldg_pt, awb_no, awb_date, group_no, bldup_instr, man_rmk, shp_type, - #PREOFF_BULK_PCS#, - #preoff_bulk_wt#,
                       #USER_ID#, cr_date, #USER_ID#, lm_date
                from   exp_offload_pman_awb
                where  flt_key = #FLT_KEY#
				and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
				and    unldg_pt = #UNLDG_PT#
				and    awb_no = #AWB_NO#
				and    awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')
		</insert>
		<delete id="sqlDelExpOffPmanAwb" parameterClass="java.util.HashMap">
				delete from exp_offload_pman_awb
                where  flt_key = #FLT_KEY#
				and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
				and    unldg_pt = #UNLDG_PT#
				and    awb_no = #AWB_NO#
				and    awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')
        </delete> 
        <update id="sqlUpdExpPmaniUldData" parameterClass="java.util.HashMap">
        		update exp_pmanifest_uld_awb set
	            assigned_pcs = assigned_pcs - #OFFLOAD_PCS#,
	            assigned_wt = assigned_wt - #OFFLOAD_WT#
				where  flt_key = #FLT_KEY#
				and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
				and    unldg_pt = #UNLDG_PT#
				and    uld_bt_no = #ULD_BT_NO#
				and    awb_no = #AWB_NO#
				and    awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')
		</update>
		<select id="sqlGetXDummyVal" parameterClass="java.util.HashMap" resultClass="java.lang.String">	
				select 'x' dummy
                from   exp_pmanifest_uld
                where  flt_key = #FLT_KEY#
	            and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
	            and    uld_bt_no = #ULD_BT_NO#
		</select>
		<insert id="sqlInsertExpPmaniUld" parameterClass="java.util.HashMap">
				insert into exp_pmanifest_uld(flt_key, flt_date, uld_bt_no, unldg_pt, group_no, ppk_type, shp_type, offload_yn,
	            bldup_instr, man_rmk, rcl_no, contr_code, tare_wt, gross_wt, empty_yn, eic_yn, cr_user_id, cr_date, lm_user_id, lm_date,TRANSIT_FLG,HDLG_MODE)
	            select flt_key, flt_date, uld_bt_no, unldg_pt, group_no, ppk_type, shp_type, 'Y',
	            bldup_instr, man_rmk, rcl_no, contr_code, tare_wt, gross_wt, empty_yn, eic_yn, #USER_ID#, cr_date, #USER_ID#, lm_date, 
	            (SELECT TRANSIT_FLG FROM ULD_INVENTORY WHERE ULD_KEY=#ULD_BT_NO#),
				(SELECT HANDLING_MODE FROM ULD_INVENTORY WHERE ULD_KEY=#ULD_BT_NO#)
	            from   exp_offload_pman_uld
	            where  flt_key = #FLT_KEY#
	            and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
	            and    uld_bt_no = #ULD_BT_NO#
	    </insert> 
	    <select id="sqlGetNewValForTrig" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">				
	    		SELECT SHP_TYPE, CONTR_CODE, GROSS_WT, TARE_WT, EMPTY_YN, EIC_YN, BLDUP_COMPLETE, RCL_NO
				FROM exp_offload_pman_uld 
				where  flt_key = #FLT_KEY#
	            and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
	            and    uld_bt_no = #ULD_BT_NO# 
	    </select> 
	    <delete id="sqlDelExpOffLoadPmanUld" parameterClass="java.util.HashMap">
	    		delete from exp_offload_pman_uld
	            where  flt_key = #FLT_KEY#
	            and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
	            and    uld_bt_no = #ULD_BT_NO# 
	    </delete> 
	    <insert id="sqlInsertExpPmaniUldAwb" parameterClass="java.util.HashMap">
	    		insert into exp_pmanifest_uld_awb(flt_key, flt_date, uld_bt_no, unldg_pt, awb_no, awb_date, assigned_pcs, assigned_wt, ppk_type,
                cr_user_id, cr_date, lm_user_id, lm_date)
                values (#FLT_KEY#, TO_DATE(#FLT_DATE#,'DDMONYY'), #ULD_BT_NO# , #UNLDG_PT#, #AWB_NO#, TO_DATE(#AWB_DATE#,'DDMONYY'), - #OFFLOAD_PCS#, - #OFFLOAD_WT#, #PPK_TYPE#,
                #USER_ID#, sysdate, #USER_ID#, sysdate) 
        </insert>
        <select id="sqlGetArlHmForTrig" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">			
        		select flt_key, TO_DATE(#FLT_DATE#,'DDMONYY') FLT_DATE, uld_bt_no
        		from exp_pmanifest_uld_awb
        		where  flt_key = #FLT_KEY#
	            and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
	            and    uld_bt_no = #ULD_BT_NO#  
	    </select>		     
	  <!--		Queries for procedure pkg.offload.upd_offload_awb end-->  
<!--	Mahesh BN Updates for package pkg.offload.pkg from 16.05.2011 to 25.05.2011 end-->
	<!-- Queries for Package PKG_TRF  -->
	<select id="sqlTrfGetUldInventory" parameterClass="java.lang.String" resultClass="java.util.HashMap">
		SELECT CFM_STATUS, FLT_TYPE, PPK_IND
			 FROM ULD_INVENTORY
			 WHERE ULD_KEY = #ULD_KEY#
 	</select>
 	<select id="sqlTrfGetUldKey" parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT I.ULD_KEY
		    FROM AWB_INVENTORY I
			JOIN IMP_CAR_AWB A ON A.AWB_NO = I.AWB_NO AND A.AWB_DATE = I.AWB_DATE
			JOIN AWB awb ON UPPER(awb.AWB_NO) = UPPER(I.AWB_NO) 
			AND UPPER (awb.awb_date) = UPPER (I.awb_date)
			AND awb.awb_type = 'I' 
		    WHERE I.ULD_KEY = #ULD_KEY#			
		    AND A.CATALOG LIKE 'T%'
	        AND ROWNUM = 1
	</select>
	<select id="sqlTrfGetPcsWtCount" parameterClass="java.lang.String" resultClass="java.util.HashMap">
		SELECT SUM(inv.LOCN_PCS) PCS, SUM(inv.LOCN_WT) WT, COUNT(*) COUNT
		 FROM AWB_INVENTORY inv
		 JOIN AWB awb ON UPPER(awb.AWB_NO) = UPPER(inv.AWB_NO) 
		 AND UPPER (awb.awb_date) = UPPER (inv.awb_date)
		 AND awb.awb_type = 'I' 
		 WHERE inv.ULD_KEY = #ULD_KEY#				
 	</select>
 	<select id="sqlTrfGetImpTrfNextVal" resultClass="java.lang.String">
		SELECT IMP_TRF_SEQ.NEXTVAL TRF_NO FROM DUAL
	</select>
	<insert id="sqlTrfInsImpTrfDtl" parameterClass="java.util.HashMap">
		INSERT INTO IMP_TRF_DTL
				 (TRF_NO, TRF_TYPE, ULD_KEY, AWB_NO, AWB_DATE, FLT_KEY, FLT_DATE, CR_USER_ID, CR_DATE)
			SELECT DISTINCT #TRF_NO#, 'U', #ULD_KEY#, AWB_NO, AWB_DATE, FLT_KEY, FLT_DATE, #LM_USER_ID#, SYSDATE
			FROM AWB_INVENTORY WHERE ULD_KEY = #ULD_KEY#
	</insert>
	<insert id="sqlTrfInsExpRclHd" parameterClass="java.util.HashMap">      
		INSERT INTO EXP_RCL_HD
		 (RCL_NO, RCL_DATE, PPK_TYPE, RCL_PCS, RCL_WT, RCL_FBL, CARR_CODE, ULD_KEY, HCARRY_IND,REF_TRF_NO,
		 ACCPT_MODE, STATUS, TR_TYPE, TR_STATUS, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE)
		 SELECT #RCL_NO#, SYSDATE, 'M', #PCS#, #WT#, 'N', OWNER_ID, ULD_KEY, 'N', #TRF_NO#,
								 'TIH', 'S', 'RC', 'N', #LM_USER_ID#, SYSDATE, #LM_USER_ID#, SYSDATE
		 FROM ULD_INVENTORY
		 WHERE ULD_KEY = #ULD_KEY#      
 	</insert>
 	<insert id="sqlTrfInsExpRclDtl" parameterClass="java.util.HashMap">
		INSERT INTO EXP_RCL_DTL
		 (RCL_NO, DOC_LINE_NO, PPK_TYPE, ULD_TYPE, ULD_NO, ULD_CARR, ULD_KEY, PCS, NET_WT,
		 GROSS_WT, TARE_WT, CONTR_CODE, TR_TYPE, TR_STATUS, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE)
		 SELECT #RCL_NO#, 1, 'M', ULD_TYPE, ULD_NO, ULD_CARR, ULD_KEY, #PCS#,
		 GROSS_WEIGHT - TARE_WEIGHT, GROSS_WEIGHT, TARE_WEIGHT, CONTR_CODE, 'T', 'T', #LM_USER_ID#,
		 SYSDATE, #LM_USER_ID#, SYSDATE
		 FROM ULD_INVENTORY
		 WHERE ULD_KEY = #ULD_KEY#  
	</insert>
	<select id="sqlTrfGetUldInven" parameterClass="java.lang.String" resultClass="java.util.HashMap">
		SELECT 1 DOC_LINE_NO, 'M' PPK_TYPE, ULD_TYPE, ULD_NO, ULD_CARR, ULD_KEY, 
		 GROSS_WEIGHT - TARE_WEIGHT NET_WT, GROSS_WEIGHT GROSS_WT, TARE_WEIGHT TARE_WT, CONTR_CODE, 'T' TR_TYPE, 'T' TR_STATUS
		 FROM ULD_INVENTORY
		 WHERE ULD_KEY = #ULD_KEY#  
 	</select>
 	<select id="sqlTrfGetAwbInven" parameterClass="java.lang.String" resultClass="java.util.HashMap">
		SELECT inv.AWB_NO, TO_CHAR(inv.AWB_DATE,'DDMONYY') AWB_DATE, MIN(inv.CARR_CODE) CARR_CODE, 
		SUM(inv.LOCN_PCS) LOCN_PCS, SUM(inv.LOCN_WT) LOCN_WT
		 FROM AWB_INVENTORY inv
		 JOIN AWB awb ON UPPER(awb.AWB_NO) = UPPER(inv.AWB_NO) 
		 AND UPPER (awb.awb_date) = UPPER (inv.awb_date)
		 AND awb.awb_type = 'I' 
		 WHERE inv.ULD_KEY = #ULD_KEY#		 
		 GROUP BY inv.AWB_NO, inv.AWB_DATE
 	</select>
 	<select id="sqlTrfGetAllImpCarAwb" parameterClass="java.util.HashMap" resultClass="java.util.HashMap"> 
		SELECT AWB_NO, TO_CHAR(AWB_DATE,'DDMONYY') AWB_DATE, AWB_ORIGIN, AWB_DEST, ECT_HANDLER, AWB_PRFX, CATALOG, CONTENT, APPNTD_AGENT, SPL_CODE1
		 FROM IMP_CAR_AWB
		 WHERE AWB_NO = #AWB_NO#
		 AND AWB_DATE = TO_DATE(#AWB_DATE#,'DDMONYY')
 	</select>
 	<select id="sqlTrfGetAcptMode" parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT AWB.ACCEPT_MODE 
			FROM AWB
			LEFT JOIN EXP_CAR E ON AWB.AWB_NO = E.AWB_NO AND AWB.AWB_DATE = E.AWB_DATE
			WHERE AWB.AWB_NO = #AWB_NO# AND AWB_CLOSED_YN = 'N'
	</select>
	<update id="sqlTrfUpdExpCar" parameterClass="java.util.HashMap">
		UPDATE EXP_CAR
			 SET PCS = PCS + NVL(#LOCN_PCS#,0),
			 WT = WT + NVL(#LOCN_WT#,0)
			 WHERE AWB_NO = #AWB_NO#
			 AND AWB_DATE = TO_DATE(#AWB_DATE#,'DDMONYY')              
	</update>
	<insert id="sqlTrfInsAwb" parameterClass="java.util.HashMap">
		INSERT INTO AWB (AWB_NO, AWB_DATE, AWB_TYPE, PPK_TYPE, CARR_CODE, ORIG, DEST, ACCEPT_MODE,
						 		 CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE)
						 VALUES (#AWB_NO#, TO_DATE(#AWB_DATE#,'DDMONYY'), 'E', 'M', #CARR_CODE#, #AWB_ORIGIN#, #AWB_DEST#, 'TIH',
						 		 #LM_USER_ID#, SYSDATE, #LM_USER_ID#, SYSDATE)     
	</insert>
	<insert id="sqlTrfInsExpCar" parameterClass="java.util.HashMap">
		INSERT INTO EXP_CAR
			 (AWB_NO, AWB_DATE, AWB_PRFX, ACCEPT_MODE, HANDLER_CODE, CATALOG,
			 CARR_CODE, ORIGIN, DEST, PCS, WT, CONTENT,
			 AGENT_NAME, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE)
			 VALUES (#AWB_NO#, TO_DATE(#AWB_DATE#,'DDMONYY'), #AWB_PRFX#, 'TIH', NVL(#ECT_HANDLER#, 'CPCT'), #CATALOG#,
			 #CARR_CODE#, #AWB_ORIGIN#, #AWB_DEST#, #LOCN_PCS#, #LOCN_WT#, #CONTENT#,
			 #APPNTD_AGENT#, #LM_USER_ID#, SYSDATE, #LM_USER_ID#, SYSDATE)
	</insert>
	<insert id="sqlTrfInsExpRclBrkdn" parameterClass="java.util.HashMap">
		INSERT INTO EXP_RCL_BRKDN
			 (RCL_NO, AWB_NO, AWB_DATE, ULD_KEY, PCS, WEIGHT, DEST,
			 SPL_CODE1, CONTENT, TR_TYPE, TR_STATUS, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE)
			 VALUES (#RCL_NO#, #AWB_NO#, TO_DATE(#AWB_DATE#,'DDMONYY'), #ULD_KEY#, #LOCN_PCS#, #LOCN_WT#, #AWB_DEST#,
			#SPL_CODE1#, #CONTENT#, 'A', 'A', #LM_USER_ID#, SYSDATE, #LM_USER_ID#, SYSDATE)
	</insert>
	<delete id="sqlTrfDelAwbInventry" parameterClass="java.lang.String">  
		DELETE FROM AWB_INVENTORY inv
		 WHERE inv.ULD_KEY = #ULD_KEY#	
		 and    exists (select null
				       from   awb
				       where  awb_no = inv.awb_no
				       and    awb_date = inv.awb_date
					   and    awb_type = 'I')  	
 	</delete> 	
	<select id="sqlTrfGetImpCarAwb" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">      
		SELECT CATALOG, PPK_TYPE 
		 FROM IMP_CAR_AWB
		 WHERE AWB_NO = #AWB_NO#
		 AND AWB_DATE = TO_DATE(#AWB_DATE#,'DDMONYY')      
	</select>
	<insert id="sqlTrfInsImpTrfDtl2" parameterClass="java.util.HashMap">
		INSERT INTO IMP_TRF_DTL
					 (TRF_NO, TRF_TYPE, ULD_KEY, AWB_NO, AWB_DATE, FLT_KEY, FLT_DATE, CR_USER_ID, CR_DATE)
				SELECT DISTINCT #TRF_NO#, 'A', NULL, inv.AWB_NO, inv.AWB_DATE, inv.FLT_KEY, inv.FLT_DATE, 
				#LM_USER_ID#, SYSDATE
				FROM AWB_INVENTORY inv
				JOIN AWB awb ON UPPER(awb.AWB_NO) = UPPER(inv.AWB_NO) 
				AND UPPER (awb.awb_date) = UPPER (inv.awb_date)
				AND awb.awb_type = 'I'  
				WHERE inv.AWB_NO = #AWB_NO#
				AND inv.AWB_DATE = TO_DATE(#AWB_DATE#,'DDMONYY') 
 	</insert>
 	<insert id="sqlTrfInsExpRclHd2" parameterClass="java.util.HashMap">
		INSERT INTO EXP_RCL_HD
		 (RCL_NO, RCL_DATE, AWB_NO, AWB_DATE, PPK_TYPE, AWB_DEST, AWB_CONTENT, RCL_PCS, RCL_WT, RCL_FBL, REF_TRF_NO,
		 CARR_CODE, PRT_CODE, HCARRY_IND, TRUCK_NO, SEC_AGENT_NO, ACCPT_MODE, STATUS, TR_TYPE, TR_STATUS,
		 CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE)
		 SELECT #RCL_NO#, SYSDATE, AWB_NO, AWB_DATE, 'B', DEST, CONTENT, NVL(#TOTAL_PCS#,0), NVL(#TOTAL_WT#,0), 'N', #TRF_NO#,
		 CARR_CODE, NULL, 'N', NULL, NULL, 'TIH', 'S', 'RC', 'N', #LM_USER_ID#, SYSDATE, #LM_USER_ID#, SYSDATE
		 FROM AWB
		 WHERE AWB_NO =#AWB_NO#
		 AND AWB_DATE = TO_DATE(#AWB_DATE#,'DDMONYY')
		 AND AWB_TYPE = 'I' 
 	</insert>
 	<select id="sqlTrfGetAwbDate" parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT TO_CHAR(AWB_DATE,'DDMONYY') AWB_DATE
		 FROM EXP_RCL_HD
		 WHERE RCL_NO = #RCL_NO#
 	</select>
 	<select id="sqlTrfGetImpCarAwb2" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT AWB_NO, TO_CHAR(AWB_DATE,'DDMONYY') AWB_DATE, AWB_ORIGIN, AWB_DEST, AWB_PRFX, ECT_HANDLER, CATALOG, APPNTD_AGENT, SPL_CODE1
		 FROM IMP_CAR_AWB
		 WHERE AWB_NO = #AWB_NO#
		 AND AWB_DATE = TO_DATE(#AWB_DATE#,'DDMONYY')
 	</select>
 	<select id="sqlTrfGetCarrCode" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT CARR_CODE 
		 FROM AWB
		 WHERE AWB_NO = #AWB_NO#
		 AND AWB_DATE = TO_DATE(#AWB_DATE#,'DDMONYY')
		 AND AWB_TYPE = 'I' 
 	</select>
 	<select id="sqlTrfGetAwbInventry" parameterClass="java.lang.String" resultClass="java.util.HashMap">
		 SELECT A.AWB_NO, TO_CHAR(A.AWB_DATE,'DDMONYY') AWB_DATE, awb.AWB_TYPE, U.ULD_TYPE, U.ULD_NO, U.ULD_CARR, A.ULD_KEY, A.LOC_CODE, A.LSP_NO
		 FROM AWB_INVENTORY A
	     JOIN AWB awb ON UPPER(awb.AWB_NO) = UPPER(A.AWB_NO) 
	     AND UPPER (awb.awb_date) = UPPER (A.awb_date)
		 LEFT JOIN ULD_INVENTORY U ON U.ULD_KEY = A.ULD_KEY
		 WHERE A.SEQ_NO = #SEQ_NO#
	</select>
	<select id="sqlTrfGetPpkInd" parameterClass="java.lang.String" resultClass="java.lang.String"> 
 		SELECT PPK_IND		 
		 FROM ULD_INVENTORY WHERE ULD_KEY = #ULD_KEY#
    </select>
    <select id="sqlTrfGetAwbInvCount" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		SELECT COUNT(1)
			FROM AWB_INVENTORY inv
			JOIN AWB awb ON UPPER(awb.AWB_NO) = UPPER(inv.AWB_NO) 
			AND UPPER (awb.awb_date) = UPPER (inv.awb_date)
			AND awb.awb_type = 'I'  
			WHERE inv.ULD_KEY = #ULD_KEY# 
			AND NOT (inv.AWB_NO = #AWB_NO# 
			AND inv.AWB_DATE = TO_DATE(#AWB_DATE#,'DDMONYY')) 
	</select>

	<insert id="sqlTrfInsExpRclDtl2" parameterClass="java.util.HashMap">      
		INSERT INTO EXP_RCL_DTL
		 (RCL_NO, DOC_LINE_NO, PPK_TYPE, ULD_TYPE, ULD_NO, ULD_CARR, ULD_KEY, LSP_NO, WH_DEST, LOC_CODE, PCS, NET_WT, GROSS_WT, TARE_WT, FSCALE_WT, CR_USER_ID,
		 CR_DATE, LM_USER_ID, LM_DATE)
		 VALUES (#RCL_NO#, #SNO#, 'B', #ULD_TYPE#, #ULD_NO#, #ULD_CARR#,#ULD_KEY#, #LSP_NO#, #LOC_CODE#, #PCS#, #WT#, #WT#, 0, #WT#, #LM_USER_ID#,
		 SYSDATE, #LM_USER_ID#, SYSDATE)      
	</insert>
	<update id="sqlTrfUpdAwbInventry" parameterClass="java.util.HashMap"> 
		UPDATE AWB_INVENTORY
		 SET LOCN_PCS = LOCN_PCS - NVL(#PCS#,0),
		 LOCN_WT = LOCN_WT - NVL(#WT#,0)
		 WHERE SEQ_NO = #SEQ_NO#
 	</update>
 	<select id="sqlTrfGetLocnPcs" parameterClass="java.lang.String" resultClass="java.lang.String">
		select LOCN_PCS from AWB_INVENTORY WHERE SEQ_NO = #SEQ_NO#
	</select>
	<update id="sqlTrfUpdUldInventry" parameterClass="java.lang.String">
		UPDATE ULD_INVENTORY
			SET IMP_FLT_NO = FLT_NO,
				IMP_FLT_KEY = FLT_KEY,
				IMP_FLT_DATE = FLT_DATE,
				IMP_FLT_CARR = CARR_CODE,
				FLT_NO = NULL,
				FLT_TYPE = 'E',
				FLT_KEY = NULL,
				FLT_DATE = NULL
			WHERE ULD_KEY = #ULD_KEY#
	</update>
	<delete id="sqlTrfDelAwbInventry2" parameterClass="java.lang.String">       
		DELETE FROM AWB_INVENTORY
		 WHERE SEQ_NO = #SEQ_NO#
	</delete>		       
	<!-- Queries for Package PKG_TRF ends -->
<!--	Mahesh BN Updates for package pkg.pkg_dhl_direct_tow.pkg from 25.05.2011 to 30.05.2011 begin-->
		<!--		Queries for function pkg_dhl_direct_tow.val_create_exp_cargo begin-->
		 <select id="sqlGetEtdValue" parameterClass="java.util.HashMap" resultClass="java.lang.String">			
				select decode(TO_CHAR(#FLT_DATE#,'DDMONYY'), est_date, lpad(est_time, 4, 0), to_char(est_date, 'DDMONYY')||' '||lpad(est_time, 4, 0)) ETD
		        from   flt_opr
		        where  flt_key = #FLT_KEY#
		        and    sch_date = TO_DATE(#FLT_DATE#,'DDMONYY')
		        and    flt_type = 'D'
		 </select> 
		 <select id="sqlGetStatusFromMastCarrier" parameterClass="java.lang.String" resultClass="java.lang.String">
		 	    select 'TRUE' STATUS
	            from mast_carrier 
	            where code = #CARR_CODE# 
	            and DHL_EXP_CARGO_ALLOWED = 'Y'  
	     </select> 
	     <select id="sqlGetDummyXFromAWB" parameterClass="java.lang.String" resultClass="java.lang.String">
		     	select 'X' DUMMY
	            from   awb
	            where  awb_no = #AWB_NO#
	            and    (awb_type = 'E' or awb_type = 'T')
	            and    awb_closed_yn = 'N'
	            and    car_yn = 'Y'
	      </select>          			
		<!--		Queries for function pkg_dhl_direct_tow.val_create_exp_cargo end-->
		<!--		Queries for function pkg_dhl_direct_tow.fun_create_exp_cargo begin--> 
		  <select id="sqlGetCountAndDate" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
			select 1 exist_count, TO_CHAR(awb_date,'DDMONYY') awb_date 
			from exp_pmanifest_awb 
			where flt_key = #FLT_KEY# 
			and flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
			and awb_no = #AWB_NO#
			and rownum = 1
		 </select>	
		 <select id="sqlGetCarrier" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		 	select t1.carr_code carrier
			from flt_opr t1
			join flt_opr_leg t2 on t1.flt_key = t2.flt_key 
			and t1.sch_date = t2.sch_date  
			and t1.flt_type = t2.flt_type
			where t1.flt_type = 'D' 
			and  t1.flt_key = #FLT_KEY#  
			and  t1.sch_date = TO_DATE(#FLT_DATE#,'DDMONYY') 
			and t2.off_point = #UNLDG_PT#
		 </select>
		 <select id="sqlGetMode" parameterClass="java.lang.String" resultClass="java.lang.String">
		 	select decode(#EXIST_COUNT#, 0, 'C', 'M') MODE
		 	from dual
		  </select>
		  <select id="sqlGetBulkRclNo" parameterClass="java.util.HashMap" resultClass="java.lang.String">
			select rcl_no bulk_rcl_no
			from exp_rcl_hd 
			where awb_no = #AWB_NO# 
			and awb_date = TO_DATE(#AWB_DATE#,'DDMONYY') 
			and ppk_type = 'B' 
			and rownum = 1	
		  </select>	
		  <select id="sqlGetResult" parameterClass="java.lang.String" resultClass="java.lang.String">  
		  	SELECT to_char(sysdate, 'DDMMYY')||lpad(#TYPE#, 5, '0') RESULT
		  	FROM DUAL 
		  </select>	
		  <select id="sqlGetPpkRclNo" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		  	select rcl_no as ppk_rcl_no 
		  	from exp_rcl_hd 
		  	where awb_no = #AWB_NO#  
		  	and awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')
		  	and ppk_type = 'P' 
		  	and rownum = 1
		  </select>
		  <delete id="SqlDeleteGtLocDtls" parameterClass="java.lang.String">
		  	delete from gt_loc_dtl
		  </delete>
		  <insert id="sqlInsertGtLocDtl" parameterClass="java.util.HashMap">
		  	insert into gt_loc_dtl (ULD_KEY, CONTR_CODE, PCS, WT, PPK_TYPE)
		    select t1.uld_key, t2.contr_code, t3.pcs, t4.wt, t5.ppk_type
            from   (select column_value uld_key, rownum r1
                    from   table(pkg_common.inlist(#ULD_BT_NO#))) t1,
                   (select column_value contr_code, rownum r2
                    from   table(pkg_common.inlist(#CONTR_CODE#))) t2,
                   (select column_value pcs, rownum r3
                    from   table(pkg_common.inlist(#PCS#))) t3,
                   (select column_value wt, rownum r4
                    from   table(pkg_common.inlist(#WT#))) t4,
                   (select column_value ppk_type, rownum r5
                    from   table(pkg_common.inlist(#PPK_TYPE#))) t5
            where  t1.r1 = t2.r2
            and    t2.r2 = t3.r3
            and    t3.r3 = t4.r4
            and    t4.r4 = t5.r5
         </insert>
         <select id="sqlGetLocDtlDtls" parameterClass="java.lang.String" resultClass="java.util.HashMap">
         	select * from gt_loc_dtl 
         	where uld_key is not null
         </select>
         <select id="sqlGetOwnedInvCfmStatus" parameterClass="java.lang.String" resultClass="java.util.HashMap">
         	  select owned_inv, cfm_status
	          from   uld_inventory
	          where  uld_key = #ULD_KEY#
	     </select>
	     <update id="sqlUpdUldInv" parameterClass="java.util.HashMap">
	     		update uld_inventory 
	            set owned_inv = 'Y',
	                cfm_status = 'CONFIRMED',
	                wh_dest = #WH_DEST#,
	                loc_code = #LOC_CODE#,
	                ENTRY_TIME = sysdate
	           where uld_key = #ULD_KEY#
	      </update>
	      <insert id="sqlInsertUldInv" parameterClass="java.util.HashMap">
	      		 insert into uld_inventory(uld_key, flt_type, flt_key, flt_date, wh_dest, loc_code, condn_code,
	      		 owner_id, strg_date, agent_inv, cfm_status,lm_user_id, lm_date)
                 values (#ULD_KEY#, 'E', #FLT_KEY#, TO_DATE(#FLT_DATE#,'DDMONYY') , #WH_DEST#, #LOC_CODE#, 'SER',
                  '---', sysdate, 'N', 'CONFIRMED',#USER_ID#, sysdate)
          </insert>
          <update id="sqlUpdGtLocDtlTareWt" parameterClass="java.util.HashMap">
          		update gt_loc_dtl 
          		set tare_wt = #TARE_WT# 
          		where uld_key = #ULD_KEY#
          </update>
          <select id="sqlGetSum" parameterClass="java.lang.String" resultClass="java.util.HashMap">
          	   select sum(decode(ppk_type, 'B', pcs, 0)) total_bulk_pcs, sum(decode(ppk_type, 'B', wt, 0)) total_bulk_wt, 
			   sum(decode(ppk_type, 'P', pcs, 0)) total_ppk_pcs, sum(decode(ppk_type, 'P', wt, 0)) total_ppk_wt
               from gt_loc_dtl
          </select>
          <select id="sqlGetLocDtlDtls1" parameterClass="java.lang.String" resultClass="java.util.HashMap">
          		select ppk_type, sum(pcs) pcs, sum(wt) wt 
          		from gt_loc_dtl 
          		group by ppk_type
          </select>
          <insert id="sqlInsExpRclHd" parameterClass="java.util.HashMap">
          		insert into exp_rcl_hd(rcl_no, rcl_date, awb_no, awb_dest, awb_content, ppk_type, accpt_mode, carr_code, rcl_pcs, rcl_wt, cr_user_id, cr_date, lm_user_id, lm_date,
				cust_no, flt_key, flt_date, spl_code1, spl_code2, spl_code3, spl_code4, spl_code5, spl_code6, spl_code7, spl_code8, sec_check)
				values (#RCL_NO#, sysdate, #AWB_NO#, #DEST#, #CONTENT#, #PPK_TYPE#, 'LCA', #CARR_CODE#, #PCS#, #WT#, #USER_ID#, sysdate, #USER_ID#, sysdate,
				#AGENT_CODE#, #FLT_KEY#, to_date(#FLT_DATE#,'DDMONYY'), #SPL_CODE1#, #SPL_CODE2#, #SPL_CODE3#, #SPL_CODE4#, #SPL_CODE5#, #SPL_CODE6#, #SPL_CODE7#, #SPL_CODE8#, 'N')
   		  </insert>
   		   <select id="sqlGetLocDtlDtls2" parameterClass="java.lang.String" resultClass="java.util.HashMap">
   		  		select * from gt_loc_dtl 
   		  		where ppk_type = #PPK_TYPE#
   		  </select>	
   		  <insert id="sqlInsExpRclDtl" parameterClass="java.util.HashMap">
   		  	  insert into exp_rcl_dtl(rcl_no, doc_line_no, ppk_type, wh_dest, loc_code, uld_key, contr_code, pcs, gross_wt, tare_wt, net_wt, cr_user_id, cr_date, lm_user_id, lm_date)
			  values (#RCL_NO#, #DOC_LINE_NO#, #PPK_TYPE#, #WH_DEST#, #LOC_CODE#, #ULD_KEY#, #CONTR_CODE#, #PCS#, #WT# + #TARE_WT#, #TARE_WT#, #WT#, #USER_ID#, sysdate, #USER_ID#, sysdate)
		  </insert>
		  <select id="sqlGetDhlHandler" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		  		select 'DHL' handler
				from flt_opr_leg 
				where jnt_car_1||JNT_FLT_1 is not null 
				and flt_key = #FLT_KEY# 
				and sch_date = TO_DATE(#FLT_DATE#,'DDMONYY')
				and flt_type = 'D' 
				and rownum = 1 
		 </select>
		 <insert id="sqlInsExpCar" parameterClass="java.util.HashMap">
				insert into exp_car(awb_no, awb_date, awb_prfx, accept_mode, handler_code, catalog, carr_code, origin, dest,
				pcs, wt, content, agent_code, agent_name, edi_csgne_name, shpr_name, security_option, rmk,
				spl_code1, spl_code2, spl_code3, spl_code4, spl_code5, spl_code6, spl_code7, spl_code8,
				sec_rc_code, cr_user_id, cr_date, lm_user_id, lm_date, dhl_direct_tow)
			    values (#awb_no#, to_date(#awb_date#,'DDMONYY'), substr(#awb_no#, 1, 3), 'LCA', #handler#, 'EG', #carr_code#, #origin#, #dest#,
				#awb_pcs#, #awb_wt#,#content#, #agent_code#, #agent_name#, #csgn_name#, #shpr_name#, 'FREIGHTER', #awb_rmk#,
				#spl_code1#, #spl_code2#, #spl_code3#, #spl_code4#, #spl_code5#, #spl_code6#, #spl_code7#, #spl_code8#,
				#ra_no#, #user_id#, sysdate, #user_id#, sysdate, 'Y') 
   		  </insert>
   		  <insert id="sqlInsExpPmanifestAwbDetails" parameterClass="java.util.HashMap">
   		 		insert into exp_pmanifest_awb(flt_key, flt_date, unldg_pt, awb_no, awb_date, group_no, bulk_pcs, bulk_wt, shp_type, cr_user_id, cr_date, lm_user_id, lm_date)
				values (#flt_key#, to_date(#flt_date#,'DDMONYY'), #unldg_pt#, #awb_no#, to_date(#awb_date#,'DDMONYY'), 1, #total_bulk_pcs#, #total_bulk_wt#, 'LOCAL', #user_id#, sysdate, #user_id#, sysdate)
		  </insert>
		  <select id="sqlGetLocDtlDtls3" parameterClass="java.lang.String" resultClass="java.util.HashMap">
		 		select * from gt_loc_dtl
		  </select>
		  <insert id="sqlInsExpPmanifestAwbDetails1" parameterClass="java.util.HashMap">
		 		insert into exp_pmanifest_uld(flt_key, flt_date, uld_bt_no, rcl_no, contr_code, ppk_type, BLDUP_COMPLETE, unldg_pt, group_no, gross_wt, tare_wt, shp_type,
				cr_user_id, cr_date, lm_user_id, lm_date,TRANSIT_FLG,HDLG_MODE)
				values (#FLT_KEY#, to_date(#FLT_DATE#,'DDMONYY'), #ULD_KEY#, decode(#PPK_TYPE#, 'P', #PPK_RCL_NO#, ''), #CONTR_CODE#, #PPK_TYPE#, 'N', #UNLDG_PT#, '000', #WT# + #TARE_WT#, #TARE_WT#, 'LOCAL',
				#USER_ID#, sysdate, #USER_ID#, sysdate,(SELECT TRANSIT_FLG FROM ULD_INVENTORY WHERE ULD_KEY=#ULD_KEY#),
				(SELECT HANDLING_MODE FROM ULD_INVENTORY WHERE ULD_KEY=#ULD_KEY#))	
		  </insert>
		  <insert id="sqlInsExpPmanifestUldAwbDtls" parameterClass="java.util.HashMap">
		 		insert into exp_pmanifest_uld_awb(flt_key, flt_date, uld_bt_no, unldg_pt, awb_no, awb_date, assigned_pcs, assigned_wt, cr_user_id, cr_date, lm_user_id, lm_date)
				values (#FLT_KEY#, to_date(#FLT_DATE#,'DDMONYY'), #ULD_KEY#, #UNLDG_PT#, #AWB_NO#, TO_DATE(#AWB_DATE#,'DDMONYY'), #PCS#, #WT#, #USER_ID#, sysdate, #USER_ID#, sysdate)			
   		 </insert>
   		  <delete id="SqlDeleteAwbInvDtls" parameterClass="java.util.HashMap">
   		 		    delete from awb_inventory inv
			        where  inv.awb_no = #AWB_NO#
			        and    inv.awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')						
			        and    inv.uld_key = #ULD_KEY#
			        and    inv.lsp_no is null
			        and    inv.flt_key is null
			        and    exists (select null
									       from   awb
									       where  awb_no = inv.awb_no
									       and    awb_date = inv.awb_date
										   ) 
		  </delete>
		  <insert id="sqlInsAwbInvDtls" parameterClass="java.util.HashMap"> 
		  		insert into awb_inventory(awb_no, awb_date, carr_code, lsp_no, uld_key, wh_dest, loc_code, locn_pcs, locn_wt, strg_date,
                flt_type, flt_key, flt_date, cr_user_id, cr_date, lm_user_id, lm_date)
		        values (#AWB_NO#, TO_DATE(#AWB_DATE#,'DDMONYY'),  #carrier#, null, #uld_key#, #wh_dest#, #loc_code#, #pcs#, #wt#, sysdate,
		        'E', #flt_key#, to_date(#FLT_DATE#,'DDMONYY'), #user_id#, sysdate, #user_id#, sysdate)
		  </insert> 
		   <select id="sqlGetDupvalOnIndex" parameterClass="java.util.HashMap" resultClass="java.lang.String">
				  select 'X' as Dummy
				  From exp_pmanifest_uld
				  where flt_key= #FLT_KEY#
				  and  flt_date=TO_DATE(#FLT_DATE#,'DDMONYY')
				  and uld_bt_no=  #ULD_BT_NO#
			</select> 
			<update id="sqlUpdExpPmaniUld" parameterClass="java.util.HashMap">
					update exp_pmanifest_uld set
                           gross_wt = gross_wt + #WT#
                    where  flt_key = #FLT_KEY#
                    and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
                    and    uld_bt_no = #ULD_KEY#
            </update> 
			<select id="sqlGetUnldgPt" parameterClass="java.util.HashMap" resultClass="java.lang.String">		
					Select unldg_pt
					from exp_pmanifest_uld
					where  flt_key = #FLT_KEY#
                    and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
                    and    uld_bt_no = #ULD_KEY#
            </select> 
            <select id="sqlGetOldUldBtNo" parameterClass="java.util.HashMap" resultClass="java.lang.String">	
            		select uld_bt_no OLD_ULD_BT_NO
            		from exp_pmanifest_uld
            		where  flt_key = #FLT_KEY#
                    and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
                    and    uld_bt_no = #ULD_KEY# 
            </select>
            <update id="sqlUpdExpCar" parameterClass="java.util.HashMap">
            	   update exp_car 
				   set origin = #origin#,
					   dest = #dest#,
					   pcs = #awb_pcs#,
					   wt = #awb_wt#, 
					   content = #content#,
					   agent_code = #agent_code#,
					   agent_name = #agent_name#,
					   EDI_CSGNE_NAME = #csgn_name#,
					   shpr_name = #shpr_name#, 
					   spl_code1 = #spl_code1#,
					   spl_code2 = #spl_code2#,
					   spl_code3 = #spl_code3#,
					   spl_code4 = #spl_code4#,
					   spl_code5 = #spl_code5#,
					   spl_code6 = #spl_code6#,
					   spl_code7 = #spl_code7#,
					   spl_code8 = #spl_code7#, 
					   sec_rc_code = #ra_no#,
					   lm_user_id = #user_id#,
					   lm_date = sysdate,
					   rmk = #awb_rmk#,
					   dhl_direct_tow = 'Y'
				 where awb_no = #awb_no# 
				 and awb_date = TO_DATE(#awb_date#,'DDMONYY')
            </update> 
            <select id="sqlAllOfExpCar" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
            	select *, to_char(awb_date,'DDMONYY') awb_date 
            	from exp_car 
            	where awb_no = #awb_no# 
            	and awb_date = to_date(#awb_date#,'DDMONYY') 
            </select>
            <select id="sqlGetBulkCount" parameterClass="java.lang.String" resultClass="java.lang.String">
	            select count(1) bulk_count 
	            from gt_loc_dtl 
	            where ppk_type = 'B'
			</select>
			<select id="sqlGetPpk1" parameterClass="java.lang.String" resultClass="java.lang.String">
				select count(1)  ppk_count 
				from gt_loc_dtl 
				where ppk_type = 'P'
			</select>
			<delete id="SqlDelExpRclDtl1" parameterClass="java.lang.String">
				delete from exp_rcl_dtl 
				where rcl_no = #BULK_RCL_NO# 
				and uld_key not in (select uld_key 
									from gt_loc_dtl 
									where ppk_type = 'B')	
			</delete>
			<select id="sqlGetOldExpRcl1Dtl" parameterClass="java.lang.String" resultClass="java.util.HashMap">
				select * from exp_rcl_dtl
				where rcl_no = #BULK_RCL_NO# 
				and uld_key not in (select uld_key 
									from gt_loc_dtl 
									where ppk_type = 'B')
			 </select>	
			<delete id="SqlDelExpRclDtl2" parameterClass="java.lang.String">	
				delete from exp_rcl_dtl 
				where rcl_no = #PPK_RCL_NO#
				and uld_key not in (select uld_key 
									from gt_loc_dtl 
									where ppk_type = 'P')
			</delete>
			<select id="sqlGetOldExpRcl2Dtl" parameterClass="java.lang.String" resultClass="java.util.HashMap">
				select * from exp_rcl_dtl
				where rcl_no = #PPK_RCL_NO#
				and uld_key not in (select uld_key 
									from gt_loc_dtl 
									where ppk_type = 'P')
			 </select> 
			<select id="sqlGetLocalDtl" parameterClass="java.lang.String" resultClass="java.util.HashMap">	
				select ppk_type, sum(pcs) pcs, sum(wt) wt 
				from gt_loc_dtl 
				group by ppk_type
			</select>
			<insert id="sqlInsExpRclHd1" parameterClass="java.util.HashMap">
          		insert into exp_rcl_hd(rcl_no, rcl_date, awb_no, awb_dest, awb_content, ppk_type, accpt_mode, carr_code, rcl_pcs, rcl_wt, cr_user_id, cr_date, lm_user_id, lm_date,
				cust_no, flt_key, flt_date, spl_code1, spl_code2, spl_code3, spl_code4, spl_code5, spl_code6, spl_code7, spl_code8, sec_check)
				values (#RCL_NO#, sysdate, #AWB_NO#, #DEST#, #CONTENT#, #PPK_TYPE#, 'LCA', #CARR_CODE#, #PCS#, #WT#, #USER_ID#, sysdate, #USER_ID#, sysdate,
				#AGENT_CODE#, #FLT_KEY#, to_date(#FLT_DATE#,'DDMONYY'), #SPL_CODE1#, #SPL_CODE2#, #SPL_CODE3#, #SPL_CODE4#, #SPL_CODE5#, #SPL_CODE6#, #SPL_CODE7#, #SPL_CODE8#, 'N')
   		  </insert> 
   		  <select id="sqlGetDupvalOnIndex1" parameterClass="java.lang.String" resultClass="java.lang.String">
				  select 'X' as Dummy
				  From exp_rcl_hd
				  where rcl_no=#RCL_NO#
		 </select>
		 <update id="sqlUpdExpRclHd1" parameterClass="java.util.HashMap">
   		 		update exp_rcl_hd set 
				awb_dest = #dest#, 
				rcl_pcs = decode(#ppk_type#, 'P', rcl_pcs, #pcs#), 
				rcl_wt = decode(#ppk_type#, 'P', rcl_wt, #wt#),
				awb_content = #content#,
				cust_no = #agent_code#,
				spl_code1 = #spl_code1#,
				spl_code2 = #spl_code1#,
				spl_code3 = #spl_code1#,
				spl_code4 = #spl_code1#,
				spl_code5 = #spl_code1#,
				spl_code6 = #spl_code1#,
				spl_code7 = #spl_code1#,
				spl_code8 = #spl_code1#, 
				lm_user_id = #user_id#,
				lm_date = sysdate
				where rcl_no = #rcl_no# 		
		  </update>	
		  <update id="sqlUpdateAwd" parameterClass="java.util.HashMap">
		  		 UPDATE AWB SET
				 RCL_BULK_PCS = #pcs#,
                 RCL_BULK_WT = #wt#
				 WHERE  AWB_NO = #awb_no#
				 AND    AWB_DATE = TO_DATE(#AWB_DATE#,'DDMONYY')				 
		  </update>
		  <select id="sqlGetGtLocDtlForCursor" parameterClass="java.lang.String" resultClass="java.util.HashMap">	
		  	select * from gt_loc_dtl 
		  	where ppk_type = #ppk_type#
		  </select>
		  <select id="sqlGetMaxDocLineNo1" parameterClass="java.lang.String" resultClass="java.lang.String">
		  	select max(doc_line_no) doc_line_no 
		  	from exp_rcl_dtl 
		  	where rcl_no = #rcl_no#
		  </select>
		  <update id="sqlUpdateExpRclDtl" parameterClass="java.util.HashMap">
		  	UPDATE EXP_RCL_DTL SET 
			CONTR_CODE = #CONTR_CODE#,
			PCS = #PCS#,
			GROSS_WT = #WT# + #TARE_WT#, 
			TARE_WT = #TARE_WT#,
			NET_WT = #WT#,
			LM_USER_ID = #USER_ID#,
			LM_DATE = SYSDATE
            WHERE RCL_NO = #RCL_NO# 
            AND ULD_KEY = #ULD_KEY#
          </update>	
          <select id="sqlGetExpRclDtlDetails" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
          	select net_wt, pcs, wh_dest
          	from exp_rcl_dtl 
	        where rcl_no = #rcl_no# 
            and uld_key = #uld_key#
         </select>
         <insert id="sqlInsExpRclDtlDetails" parameterClass="java.util.HashMap">
         	insert into exp_rcl_dtl(rcl_no, doc_line_no, ppk_type, wh_dest, loc_code, uld_key, contr_code, pcs, gross_wt, tare_wt, net_wt, cr_user_id, cr_date, lm_user_id, lm_date)
			values (#rcl_no#, #doc_line_no# + 1, #ppk_type#, #wh_dest#, #loc_code#, #uld_key#, #contr_code#, #pcs#, #wt# + #tare_wt#, #tare_wt#, #wt#, #user_id#, sysdate, #user_id#, sysdate)   
   		 </insert>
   		 <delete id="SqlDeleteExpRclDtl" parameterClass="java.lang.String">
   		 	    delete from exp_rcl_dtl 
   		 	    where rcl_no = #bulk_rcl_no#
		 </delete>		
		 <delete id="SqlDeleteExpRclhd" parameterClass="java.lang.String">
				delete from exp_rcl_hd 
				where rcl_no = #bulk_rcl_no#
		 </delete>		
		 <delete id="SqlDeleteServiceErrLog" parameterClass="java.lang.String">
				delete from service_err_log 
				where tr_no = #bulk_rcl_no# 
				and tr_type = 'RC'
		 </delete>		
		<select id="sqlGetExpRcl1DtlForTrig" parameterClass="java.lang.String" resultClass="java.util.HashMap">
				select * from exp_rcl_dtl
				where tr_no = #bulk_rcl_no# 
				and tr_type = 'RC'
		</select>	
		
		 <delete id="SqlDeleteExpRclDtl1" parameterClass="java.lang.String">
   		 	    delete from exp_rcl_dtl 
   		 	    where rcl_no = #ppk_rcl_no#
		 </delete>		
		 <delete id="SqlDeleteExpRclhd1" parameterClass="java.lang.String">
				delete from exp_rcl_hd 
				where rcl_no = #ppk_rcl_no#
		 </delete>		
		 <delete id="SqlDeleteServiceErrLog1" parameterClass="java.lang.String">
				delete from service_err_log 
				where tr_no = #ppk_rcl_no# 
				and tr_type = 'RC'
		 </delete>		
		<select id="sqlGetExpRcl1DtlForTrig1" parameterClass="java.lang.String" resultClass="java.util.HashMap">
				select * from exp_rcl_dtl
				where tr_no = #ppk_rcl_no# 
				and tr_type = 'RC'
		</select>
		<select id="sqlGetRcls" parameterClass="java.util.HashMap" resultClass="java.lang.String">
			select decode(#CRCL_NO#, null,'', ' RCL Created : ' ||substr(#CRCL_NO#, 1, length(#CRCL_NO#)-2)||'\n')||
			decode(#URCL_NO#, null,'', ' RCL Updated : ' ||substr(#URCL_NO#, 1, length(#URCL_NO#)-2)||'\n')||
			decode(#DRCL_NO#, null,'', ' RCL Deleted : ' ||substr(#DRCL_NO#, 1, length(#DRCL_NO#)-2)) RCL_NO
			from dual	
		</select>
		<select id="sqlGetExpPmaniUldAwbDetails" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
			select * from exp_pmanifest_uld_awb t
			where flt_key = #FLT_KEY# 
			and flt_date = TO_DATE(#FLT_DATE#,'DDMONYY') 
			and awb_no = #AWB_NO# 
			and not exists (select null 
							from gt_loc_dtl 
							where ULD_KEY = t.ULD_BT_NO)
		</select>
		<delete id="SqlDelExpPmaniUldAwb1" parameterClass="java.util.HashMap">
			    delete from exp_pmanifest_uld_awb
		        where  flt_key = #flt_key#
		        and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY') 
		        and    uld_bt_no = #uld_bt_no#
		        and    unldg_pt = #unldg_pt#
		        and    awb_no = #awb_no#
		        and    awb_date = TO_DATE(#awb_date#,'DDMONYY') 
		</delete>
		<delete id="SqlDelExpPmaniuld1" parameterClass="java.util.HashMap">
		         delete from exp_pmanifest_uld t1
		         where  not exists (select null
			     					from   exp_pmanifest_uld_awb
		        					where  flt_key = t1.flt_key
		         					and    flt_date = t1.flt_date
		        					and    uld_bt_no = t1.uld_bt_no)
                 and flt_key = #flt_key#
                 and flt_date = TO_DATE(#FLT_DATE#,'DDMONYY') 
		</delete>
		<delete id="SqlDelExpUldAwb1" parameterClass="java.util.HashMap">
				delete from exp_uld_awb t1
		        where  not exists (select null
			    					from   exp_pmanifest_uld_awb
		       						where  awb_no = #awb_no#
		       						and    awb_date = TO_DATE(#awb_date#,'DDMONYY') 
		        					and uld_bt_no = t1.uld_key)
				and awb_no = #awb_no#
		       	and awb_date = TO_DATE(#awb_date#,'DDMONYY') 
		 </delete>
		 <select id="sqlGetExpPmaniUldAwbForTrig" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		 		SELECT *,TO_CHAR(#AWB_DATE#,'DDMONYY') AWB_DATE, TO_CHAR(#FLT_DATE#,'DDMONYY') FLT_DATE	
		 		FROM exp_pmanifest_uld_awb
		 		where  flt_key = #flt_key#
		        and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY') 
		        and    uld_bt_no = #uld_bt_no#
		        and    unldg_pt = #unldg_pt#
		        and    awb_no = #awb_no#
		        and    awb_date = TO_DATE(#awb_date#,'DDMONYY') 
		 </select>
		 <select id="sqlGetExpPmaniUldForTrig1" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		 		SELECT *, TO_char(#FLT_DATE#,'DDMONYY') FLT_DATE	
		 		FROM exp_pmanifest_uld
		 		where  flt_key = t1.flt_key
		         and    flt_date = t1.flt_date
		         and    uld_bt_no = t1.uld_bt_no)
                 and flt_key = #FLT_KEY#
                 and flt_date = TO_DATE(#FLT_DATE#,'DDMONYY') 
		 </select>
		 <select id="sqlGetGtLocDtlDtls" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		 		select * from gt_loc_dtl t
				where not exists (select null from exp_pmanifest_uld_awb 
					 	 	 		where ULD_BT_NO = t.ULD_KEY
									and flt_key = #FLT_KEY# 
									and flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')  
									and awb_no = #AWB_NO#)
		 </select>
		 <insert id="sqlInsExpPmanifestUldDetails" parameterClass="java.util.HashMap">
		 		insert into exp_pmanifest_uld(flt_key, flt_date, uld_bt_no, rcl_no, contr_code, ppk_type, BLDUP_COMPLETE, unldg_pt, group_no, gross_wt, tare_wt, shp_type,
				cr_user_id, cr_date, lm_user_id, lm_date,TRANSIT_FLG,HDLG_MODE)
				values (#flt_key#, TO_DATE(#FLT_DATE#,'DDMONYY') , #uld_key#, decode(#ppk_type#, 'P', #ppk_rcl_no#, ''), #contr_code#, #ppk_type#, 'N', #unldg_pt#, '000', #wt# + #tare_wt#, #tare_wt#, 'LOCAL',
				#user_id#, sysdate, #user_id#, sysdate,(SELECT TRANSIT_FLG FROM ULD_INVENTORY WHERE ULD_KEY=#uld_key#),
				(SELECT HANDLING_MODE FROM ULD_INVENTORY WHERE ULD_KEY=#uld_key#))	
		 </insert>
		 <update id="sqlUpdateExpPmanifestUldData" parameterClass="java.util.HashMap">
				update exp_pmanifest_uld
				set gross_wt = gross_wt + #WT#,
				    lm_user_id = #USER_ID#,
				    lm_date = sysdate
				where  flt_key = #flt_key#
				and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
				and    uld_bt_no = #ULD_KEY#
		 </update>
		 <select id="sqlGetUnldgPtFromExpPmaniUld" parameterClass="java.util.HashMap" resultClass="java.lang.String">		
				SELECT unldg_pt
				from  exp_pmanifest_uld
				where  flt_key = #flt_key#
				and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
				and    uld_bt_no = #ULD_KEY#
		 </select>
		 <select id="sqlGetExpPmaniUldForTriger" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">		
				SELECT *,TO_CHAR(#FLT_DATE#,'DDMONYY') FLT_DATE
				from  exp_pmanifest_uld
				where  flt_key = #flt_key#
				and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
				and    uld_bt_no = #ULD_KEY#
		 </select>
		 <insert id="sqlInsExpPmanifestUldDetails1" parameterClass="java.util.HashMap">
				insert into exp_pmanifest_uld_awb(flt_key, flt_date, uld_bt_no, unldg_pt, awb_no, awb_date, assigned_pcs, assigned_wt, cr_user_id, cr_date, lm_user_id, lm_date)
				values (#flt_key#, TO_DATE(#FLT_DATE#,'DDMONYY'), #uld_key#, #unldg_pt#, #awb_no#, TO_DATE(#awb_date#,'DDMONYY'), #pcs#, #wt#, #user_id#, sysdate, #user_id#, sysdate)
		 </insert>
		 <delete id="SqlDeleteAwbInventory" parameterClass="java.util.HashMap">
				    delete from awb_inventory inv 
			        where  inv.awb_no = #awb_no#
			        and    inv.awb_date = TO_DATE(#awb_date#,'DDMONYY')		  					
			        and    inv.uld_key = #uld_key#
			        and    inv.lsp_no is null
			        and    inv.flt_key is null	
			        and    exists (select null
							       from   awb
							       where  awb_no = inv.awb_no
							       and    awb_date = inv.awb_date
								   ) 
		  </delete> 
		  <insert id="sqlInsertTOAwbInv" parameterClass="java.util.HashMap">
		 		insert into awb_inventory(awb_no, awb_date, carr_code, lsp_no, uld_key, wh_dest, loc_code, locn_pcs, locn_wt, strg_date,
				flt_type, flt_key, flt_date, cr_user_id, cr_date, lm_user_id, lm_date)
		        values (#awb_no#, TO_DATE(#awb_date#,'DDMONYY'), #carrier#, null, #uld_key#, #wh_dest#, #loc_code#, #pcs#, #wt#, sysdate,
		        'E', #flt_key#, TO_DATE(#FLT_DATE#,'DDMONYY'), #user_id#, sysdate, #user_id#, sysdate)
		  </insert>
		  <select id="sqlGetGtLocDtlForCursorr" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		 		select t.*, e.assigned_pcs assigned_pcs, e.assigned_wt assigned_wt 
				from gt_loc_dtl t
				join exp_pmanifest_uld_awb e 
				on e.ULD_BT_NO = t.ULD_KEY 
				and flt_key = #FLT_KEY# 
				and flt_date = TO_DATE(#FLT_DATE#,'DDMONYY') 
				and awb_no = #AWB_NO#
		 </select>
		 <update id="sqlUpdExpPmaniUldAwbDetls" parameterClass="java.util.HashMap">
				update exp_pmanifest_uld_awb
		        set    assigned_pcs = assigned_pcs - #ASSIGNED_PCS# + #PCS#,
		               assigned_wt = assigned_wt - #ASSIGNED_WT# + #WT#,
					   unldg_pt = #UNLDG_PT#,
					   lm_user_id = #USER_ID#,
					   lm_date = sysdate
		        where  flt_key = #FLT_KEY#
		        and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY') 
		        and    uld_bt_no = #ULD_KEY#
		        and    awb_no = #AWB_NO#
		        and    awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')
		 </update>
		 <update id="sqlUpdExpPmanifestUldDetls" parameterClass="java.util.HashMap">
				update exp_pmanifest_uld
		        set    contr_code = #CONTR_CODE#,
		               gross_wt = #WT#,
		               tare_wt = #TARE_WT#,
					   unldg_pt = #UNLDG_PT#,
					   lm_user_id = #USER_ID#,
					   lm_date = sysdate
		        where  flt_key = #FLT_KEY#
		        and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY') 
		        and    uld_bt_no = #ULD_KEY#	
		 </update>
		 <select id="sqlGetExpPmanifestUldAwbForTrig" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">		
		 		SELECT *,TO_CHAR(FLT_DATE,'DDMONYY') FLT_DATE,TO_CHAR(AWB_DATE,'DDMONYY') AWB_DATE 
		 		FROM EXP_PMANIFEST_ULD_AWB	
		 		WHERE  FLT_KEY = #FLT_KEY#
		        AND    FLT_DATE = TO_DATE(#FLT_DATE#,'DDMONYY') 
		        AND    ULD_BT_NO = #ULD_KEY#
		        AND    AWB_NO = #AWB_NO#
		        AND    AWB_DATE = TO_DATE(#AWB_DATE#,'DDMONYY')	 
		 </select>
		 <update id="sqlUpdExpPmanifestAwbDetls" parameterClass="java.util.HashMap">
		 		UPDATE EXP_PMANIFEST_AWB 
		        SET BULK_PCS = #TOTAL_BULK_PCS#,
		            BULK_WT = #TOTAL_BULK_WT#, 
		            LM_USER_ID = #USER_ID#,
		            LM_DATE = SYSDATE
				WHERE AWB_NO = #AWB_NO# 
		        AND AWB_DATE = TO_DATE(#AWB_DATE#,'DDMONYY')	  
		        AND FLT_KEY = #FLT_KEY#
		        AND FLT_DATE = TO_DATE(#FLT_DATE#,'DDMONYY') 
		 </update>
		 <select id="sqlGetExpPmanifestAwbForTrig" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		 		SELECT *,TO_CHAR(FLT_DATE,'DDMONYY') FLT_DATE,TO_CHAR(AWB_DATE,'DDMONYY') AWB_DATE
		 		FROM EXP_PMANIFEST_AWB
		 		WHERE AWB_NO = #AWB_NO# 
		        AND AWB_DATE = TO_DATE(#AWB_DATE#,'DDMONYY')	  
		        AND FLT_KEY = #FLT_KEY#
		        AND FLT_DATE = TO_DATE(#FLT_DATE#,'DDMONYY') 
		 </select> 
		 <delete id="SqlDeleteAwbInventory1" parameterClass="java.util.HashMap">
		 		delete from awb_inventory 
		 		where awb_no = #awb_no# 
		 		and awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')
		 </delete>
		 <select id="sqlGetGtLocDtlDataForCursor" parameterClass="java.lang.String" resultClass="java.util.HashMap">
		 	select uld_key, sum(pcs) pcs, sum(wt) wt 
		 	from gt_loc_dtl 
		 	group by uld_key		
		 </select>
		 <insert id="sqlInsertTOAwbInvDetails" parameterClass="java.util.HashMap">
		 	        INSERT INTO AWB_INVENTORY ( awb_no, awb_date, carr_code, wh_dest, locn_pcs, locn_wt
					, strg_date, dam_ind, ppk_ind, flt_date, flt_type, flt_key
					, uld_key, cr_user_id, cr_date, lm_user_id, lm_date, seq_no, ref_tr_no, ref_tr_type
					, ref_tr_date, ref_doc_line_no, ref_tr_event ) 
				    VALUES(#AWB_NO#,  TO_DATE(#AWB_DATE#,'DDMONYY'), #CARR_CODE#, #WH_DEST#, #PCS#, #WT#
					, sysdate, 'N', 'P', TO_DATE(#FLT_DATE#,'DDMONYY'), 'E', #FLT_KEY#
					, '', #USER_ID#,  sysdate, #USER_ID#,  sysdate, AWB_INV_SEQ.nextval, '', 'EF'
					, sysdate, 1, 'EFP')
		 </insert>
		 <select id="sqlGetSeqNOFromAwbInv" parameterClass="java.lang.String" resultClass="java.util.HashMap">			
		 			SELECT 	AWB_INV_SEQ.CURRVAL FROM DUAL	
		 </select>
		  <update id="sqlUpdateAwbInventoryData" parameterClass="java.util.HashMap">
		 		update AWB_INVENTORY 
		 		set ULD_KEY = #ULD_KEY# 
		 		where SEQ_NO = #SEQ_NO# 
		 </update>
   		<!--	    Queries for function pkg_dhl_direct_tow.fun_create_exp_cargo end-->
<!--	Mahesh BN Updates for package pkg.pkg_dhl_direct_tow.pkg from 25.05.2011 to 30.05.2011 end-->
<!--	Mahesh BN Updates for package pkg.trf from 31.05.2011 to 01.06.2011 begin-->				
		 <select id="sqlGetUldInvForTrig" parameterClass="java.lang.String" resultClass="java.util.HashMap">	
			OWNER_ID as CARR_CODE, ULD_KEY, 'S' as STATUS, 'RC' as TR_TYPE
			FROM ULD_INVENTORY
			WHERE ULD_KEY = #ULD_KEY#
		</select>	
		<select id="sqlGetExpCarForTrig" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">		
			    SELECT *
				FROM EXP_CAR
				WHERE AWB_NO = #AWB_NO#
				AND AWB_DATE = TO_DATE(#AWB_DATE#,'DDMONYY') 
		</select>
		<select id="sqlGetExpCarForTrig1" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">		
			    SELECT AWB_NO, TO_CHAR(AWB_DATE,'DDMONYY') AWB_DATE, DEST as AWB_DEST, CONTENT as AWB_CONTENT,
				CARR_CODE, 'S' as ACCPT_MODE
				FROM AWB
				WHERE AWB_NO =#AWB_NO#
				AND AWB_DATE = TO_DATE(#AWB_DATE#,'DDMONYY')
				AND AWB_TYPE = 'I'
		</select>
		
		<select id = "checkDLSFinalized" parameterClass="java.util.HashMap"  resultClass="java.lang.Integer">
			select count(1) from flt_opr_events 
			where dls_final_date IS NOT NULL 		
			AND FLT_TYPE = 'D'
			AND FLT_KEY = #fltKey# 
			AND SCH_DATE = TO_DATE(#fltDate#,'DDMONYY') 
		</select>	
<!--	Mahesh BN Updates for package pkg.trf from 31.05.2011 to 01.06.2011 end-->

	<select id="sqlFetchAllULDsForUCS" parameterClass="java.lang.String"  resultClass="cargo.cms.common.ext.bo.ULDCMSBO">	
		<!-- SQL changed as per Abhisheks request on 4 Jan 07 and SQL given by Atul.-->
		select ULD_TYPE uldType, ULD_NO uldNumber, ULD_CARR uldOwner, OWNER_ID owner,
			u.FLT_KEY flightKey, TO_CHAR(u.FLT_DATE,'DDMONYYYY HH24:MI:SS') flightDate, EIC_FLG eicFlag, EMPTY_FLG emptyFlag,
			u.FLT_TYPE flightType, decode(u.flt_key, null, r.AWB_DEST, decode(u.flt_type, 'I', f.orig, 'E', f.dest)) destination, GEN_RMK remark, GROSS_WEIGHT weight, LOC_CODE area, 
			SPL_CODE1 || ',' || SPL_CODE2 || ',' ||  SPL_CODE3 shc
		from ULD_INVENTORY u
		left join flt_opr f on f.flt_key = u.flt_key and f.sch_date = u.flt_date and f.flt_type = decode(u.flt_type, 'I', 'A', 'D')
		left join (select AWB_DEST, uld_key 
			 	  from (select h.AWB_DEST, d.uld_key,
					  		  dense_rank() over ( partition by d.uld_key order by h.RCL_DATE desc) rank
					   from exp_rcl_hd h join exp_rcl_dtl d on h.rcl_no = d.rcl_no) m
				  where rank = 1) r on r.uld_key = u.uld_key and u.FLT_TYPE = 'E'
		where u.ULD_KEY = #PARAM#
	</select>
	
	<insert id="insert_INT_CNTRL" parameterClass="cargo.cms.common.ext.bo.ULDCMSBO"  >
		INSERT INTO INT_SCST2_CNTRL 
		(TR_NO, OPERATION, MESSAGE_ID, LM_USER_ID, CR_USER_ID, LM_DATE, CR_DATE, TARGET_SYSTEM)
		VALUES (
			   INT_SCST2_CNTRL_SEQ.NEXTVAL,
			   #operation#,
			   #messageId#,
			   #createdUserId#,
			   #modifiedUserId#,
			   SYSDATE,
			   SYSDATE,
			   'UCS'
		)
	</insert>
	<insert id="insert_INT_CNTRL_REQ" parameterClass="cargo.cms.common.ext.bo.ULDReqBO" >
		INSERT INTO INT_SCST2_CNTRL 
		(TR_NO, OPERATION, MESSAGE_ID, LM_USER_ID, CR_USER_ID, LM_DATE, CR_DATE,TARGET_SYSTEM)
		VALUES (
			   INT_SCST2_CNTRL_SEQ.NEXTVAL,
			   #operation#,
			   #messageId#,
			   #createdUserId#,
			   #modifiedUserId#,
			   SYSDATE,
			   SYSDATE,
			   'UCS'
		)
	</insert>
	<insert id="insert_INT_CNTRL_FLT" parameterClass="cargo.cms.common.ext.bo.FlightCMSBO" >
		INSERT INTO INT_SCST2_CNTRL 
		(TR_NO, OPERATION, MESSAGE_ID, LM_USER_ID, CR_USER_ID, LM_DATE, CR_DATE, TARGET_SYSTEM)
		VALUES (
			   INT_SCST2_CNTRL_SEQ.NEXTVAL,
			   #operation#,
			   #messageId#,
			   #createdUserId#,
			   #modifiedUserId#,
			   SYSDATE,
			   SYSDATE,
			   'UCS'
		)
	</insert>
	
	<select id="fetch_INT_SCST2_Curr_TR_NO" parameterClass="java.lang.String" resultClass="java.lang.String" >
		SELECT INT_SCST2_CNTRL_SEQ.CURRVAL FROM DUAL
	</select>
	<insert id="insert_INT_ULDCMS" parameterClass="cargo.cms.common.ext.bo.ULDCMSBO">
		insert into INT_SCST2_ULDCMS
		(TR_NO, ULD_TYPE, ULD_NO, ULD_OWNER, OWNER_ID, STATUS, DEST, INFLT_KEY, 
		INFLT_DATE, OUTFLT_KEY, OUTFLT_DATE, SHC, REMARKS, CMS_WT, AREA, 
		TIME_STAMP, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE)
		values(
			#trNo#,
			#uldType#,
			#uldNumber#,
			#uldOwner#,
			#owner#,
			#status#,
			#destination#,
			#inflight#,
			to_date(#inFlightDate#,'DDMONYYYY HH24:MI:SS'),
			#outFlight#,
			to_date(#outFlightDate#,'DDMONYYYY HH24:MI:SS'),
			#shc#,
			#remark#,
			#weight#,
			#area#,
			to_date(#timestamp#,'DDMONYYYY HH24:MI:SS'),
			#createdUserId#,
			sysdate,
			#modifiedUserId#,
			sysdate
		)
	</insert>
	
	<insert id="insert_INT_ULDREQ" parameterClass="cargo.cms.common.ext.bo.ULDReqBO">
		insert into INT_SCST2_ULDREQ
		(TR_NO, ULD_TYPE, ULD_NO, ULD_OWNER, PRIORITY, 
			AREA,  TIME_STAMP, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE)
		values(
			#trNo#,
			#uldType#,
			#uldNumber#,
			#uldOwner#,
			#priority#,
			#area#,
			to_date(#timestamp#,'DDMONYYYY HH24:MI:SS'),
			#createdUserId#,
			sysdate,
			#modifiedUserId#,
			sysdate
		)
	</insert>
	<insert id="insert_INT_FLTCMS" parameterClass="cargo.cms.common.ext.bo.FlightCMSBO">
		insert into INT_SCST2_FLTCMS
		(FLT_DATE, FLT_KEY, FLT_STATUS, TR_NO, FLT_TYPE, STD, ETD, 
		  STA, ATA,  TIME_STAMP, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE,ARRIVAL_DATE)
		values(
			to_date(#flightDate#,'DDMONYYYY HH24:MI:SS'),
			#flightId#,
			#flightStatus#,
			#transactionNo#,
			#flightType#,
			lpad(#scheduledDepartureTime#,4,0),
			lpad(#estimatedDeptTime#,4,0),
			lpad(#scheduledArrivalTime#,4,0),
			lpad(#actualArrivalTime#,4,0),
			to_date(#timestamp#,'DDMONYYYY HH24:MI:SS'),
			#createdUserId#,
			sysdate,
			#modifiedUserId#,
			sysdate,
			to_date(#arrivalDate#,'DDMONYYYY HH24:MI:SS')
		)
	</insert>
	<insert id="insert_INT_DEST" parameterClass="cargo.cms.common.ext.bo.FlightCMSBO">
		insert into INT_SCST2_DEST
		(FLT_DATE, FLT_KEY, FLT_STATUS, TR_NO, DESTINATION, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE)
		values(
			to_date(#flightDate#,'DDMONYYYY HH24:MI:SS'),
			#flightId#,
			#flightStatus#,
			#transactionNo#,
			#offPoint#,
			#createdUserId#,
			sysdate,
			#modifiedUserId#,
			sysdate
		)
	</insert>
	<select id="sqlFetchLSP" parameterClass="cargo.cms.common.ext.bo.LSPCMSBO" resultClass="cargo.cms.common.ext.bo.LSPCMSBO">
		select LSP_NO id, MESSAGE_ID messageId, SHIPMENT shipment, CONSTRAINT_IND constraintCode, 
			LOCKED_IND locked, CMS_WT cmsweight, OPERATION operation, to_char(TIME_STAMP,'DDMONYYYY HH24:MI:SS') timestamp
		from INT_SCST2_LSPCMS 
		where 
			LSP_NO = #id# and 
			MESSAGE_ID = #messageId#
		order by CR_DATE
	</select>
	<select id="sqlFetchAWBEntry" parameterClass="cargo.cms.common.ext.bo.LSPCMSBO" resultClass="cargo.cms.common.ext.bo.AWBCMSBO">
		select AWB_NO awbNo, PIECES pieces, SHC splHandlingCode from INT_SCST2_AWB_ENTRY
		where 
			LSP_NO = #id# and
			TR_NO = #trNo#
	</select>
	<select id="sqlFetchLSPRQ" parameterClass="java.lang.String" resultClass="cargo.cms.common.ext.bo.LSPReqBO">
		select MESSAGE_ID messageId, LSP_NO id, AWB_NO awb, PRIORITY priority, PDEST pdest, 
		OPERATION operation, to_char(TIME_STAMP,'DDMONYYYY HH24:MI:SS') timestamp
		from INT_SCST2_LSPRQ where SEND_STATUS = 'P' 
		order by CR_DATE
	</select>
	<select id="sqlFetchLSPReqInfoForSchedular" resultClass="cargo.cms.common.ext.bo.LSPReqBO" parameterClass="java.util.HashMap"  >
		select TR_NO trNo, LSP_NO id, AWB_NO awb, PRIORITY priority, PDEST pdest, 
		to_char(TIME_STAMP,'DDMONYYYY HH24:MI:SS') timestamp
		from INT_SCST2_LSPRQ 
		<iterate prepend="where" conjunction="OR" property="arlTrNos"  >
			TR_NO = #arlTrNos[]#
		</iterate>
		order by CR_DATE
	</select>
	<select id="sqlFetchLSPInfoForSchedular" resultClass="cargo.cms.common.ext.bo.LSPCMSBO"  parameterClass="java.util.HashMap" >
		select LSP_NO id, TR_NO trNo, SHIPMENT shipment, CONSTRAINT_IND constraintCode, 
			LOCKED_IND locked, CMS_WT cmsweight,
		to_char(TIME_STAMP,'DDMONYYYY HH24:MI:SS') timestamp
		from INT_SCST2_LSPCMS 
		<iterate property="arlTrNos" prepend="WHERE"  conjunction="OR" >
			TR_NO = #arlTrNos[]#
		</iterate>
		order by CR_DATE
	</select>
	<update id="sqlUpdateLSPSentStatus" parameterClass="cargo.cms.common.ext.bo.LSPCMSBO">
		update INT_SCST2_CNTRL
		set 
			STATUS = #sentStatus#,
			ERR_DESC = #errDesc#,
			ERR_SRC = #errSrc#,
			LM_USER_ID  = 'SYSTEM_ACS',
			LM_DATE     = sysdate
		where
			TR_NO = #trNo#
	</update>
	<update id="sqlUpdateLSPRequestSentStatus" parameterClass="cargo.cms.common.ext.bo.LSPReqBO">
		update INT_SCST2_CNTRL
		set 
			STATUS = #sentStatus#,
			ERR_SRC = #errSrc#,
			ERR_DESC = #errDesc#,
			LM_USER_ID  = 'SYSTEM_ACS',
			LM_DATE     = sysdate
		where
			TR_NO = #trNo#
	</update>
	<select id="sqlULDPendingMessages" parameterClass="java.lang.String" resultClass="cargo.cms.common.ext.bo.ULDCMSBO">
		select  MESSAGE_ID messageId,TR_NO trNo, ULD_TYPE uldType, ULD_NO uldNumber, ULD_OWNER uldOwner, OWNER_ID owner, STATUS status, 
			DEST destination, INFLT_KEY inflight, to_char(INFLT_DATE,'DDMONYYYY HH24:MI:SS') inFlightDate, 
			OUTFLT_KEY outFlight,  to_char(OUTFLT_DATE,'DDMONYYYY HH24:MI:SS') outFlightDate, 
			SHC shc, REMARKS remark, CMS_WT weight, AREA area,
			to_char(TIME_STAMP,'DDMONYYYY HH24:MI:SS') timestamp
		from INT_SCST2_ULDCMS
		where SEND_STATUS = 'P'
		order by CR_DATE
	</select>
	<select id="sqlULDFltPendingMessages" parameterClass="java.lang.String" resultClass="cargo.cms.common.ext.bo.FlightCMSBO">
		select to_char(FLT_DATE,'DDMONYYYY HH24:MI:SS') flightDate, FLT_KEY flightId, FLT_STATUS flightStatus, 
			TR_NO transactionNo ,FLT_TYPE flightType, STD scheduledDepartureTime, ETD estimatedDeptTime,   
			STA scheduledArrivalTime, ATA actualArrivalTime, to_char(TIME_STAMP,'DDMONYYYY HH24:MI:SS') timestamp
		from INT_SCST2_FLTCMS 
		where SEND_STATUS = 'P'
		order by CR_DATE
	</select>
	<select id="sqlULDRqPendingMessages" parameterClass="java.lang.String" resultClass="cargo.cms.common.ext.bo.ULDReqBO">
		select MESSAGE_ID messageId,TR_NO trNo ,ULD_TYPE uldType, ULD_NO uldNumber, ULD_OWNER uldOwner, 
			PRIORITY priority, AREA area, to_char(TIME_STAMP,'DDMONYYYY HH24:MI:SS') timestamp
		from INT_SCST2_ULDREQ
		where SEND_STATUS = 'P'
		order by CR_DATE
	</select>
	<update id="sqlUpdateULDSentStatus" parameterClass="cargo.cms.common.ext.bo.ULDCMSBO">
		update INT_SCST2_CNTRL
		set 
			STATUS = #sentStatus#,
			ERR_DESC = #errDesc#,
			ERR_SRC = #errSrc#,
			LM_USER_ID  = 'SYSTEM_SCST2',
			LM_DATE     = sysdate
		where 
			TR_NO = #trNo#
	</update>
	<update id="sqlUpdateULDFlightSentStatus" parameterClass="cargo.cms.common.ext.bo.FlightCMSBO">
		update INT_SCST2_CNTRL
		set 
			STATUS = #sentStatus#,
			ERR_SRC = #errSrc#,
			ERR_DESC = #errDesc#,
			LM_USER_ID  = 'SYSTEM_SCST2',
			LM_DATE     = sysdate
		where
			TR_NO = #transactionNo#
	</update>
	<update id="sqlUpdateULDRequestSentStatus" parameterClass="cargo.cms.common.ext.bo.ULDReqBO">
		update INT_SCST2_CNTRL
		set 
			STATUS = #sentStatus#,
			ERR_DESC = #errDesc#,
			ERR_SRC = #errSrc#,
			LM_USER_ID  = 'SYSTEM_SCST2',
			LM_DATE     = sysdate
		where
			TR_NO = #trNo# 
	</update>
	<select id="sqlFetchFlightDestination" parameterClass="cargo.cms.common.ext.bo.FlightCMSBO" resultClass="java.lang.String">
		select DESTINATION destination
		from INT_SCST2_DEST
		where 
			FLT_DATE = to_date(#flightDate#,'DDMONYYYY HH24:MI:SS') and  
			FLT_KEY = #flightId# and 
			FLT_STATUS = #flightStatus# and 
			TR_NO = #transactionNo#
	</select>
	<select id="sqlCountWarehouseLocation" parameterClass="java.lang.String" resultClass="java.lang.Integer" >
		select count(CODE) from MAST_WH_LOC_CODE where CODE = #PARAM#
	</select>
	<update id="update_ULD_GetData" parameterClass="cargo.cms.common.ext.bo.ULDUCSBO" >
		update ULD_INVENTORY
		set
			LOC_CODE = #location#,
			LM_USER_ID = #modifiedUserId#,
			LM_DATE = sysdate
		where
			ULD_TYPE = #uldType# and
			ULD_NO = #uldNumber# and
			OWNER_ID = #uldOwner#
	</update>
	<select id="sqlFetchUCSPendingMessages" parameterClass="java.lang.String"  resultClass="cargo.cms.common.ext.bo.ULDControlBO" >
		select TR_NO trNo, OPERATION operation, STATUS status from INT_SCST2_CNTRL 
			where STATUS = 'P' AND TARGET_SYSTEM=#MESSAGE_TYPE#  order by CR_DATE
	</select>
	<select id="sqlFetchFlightInfoForScheduledJob" parameterClass="java.util.HashMap"  resultClass="cargo.cms.common.ext.bo.FlightCMSBO" >
		select to_char(FLT_DATE,'DDMONYYYY HH24:MI:SS') flightDate, FLT_KEY flightId, FLT_STATUS flightStatus, 
			TR_NO transactionNo ,FLT_TYPE flightType, STD scheduledDepartureTime, ETD estimatedDeptTime,   
			STA scheduledArrivalTime, ATA actualArrivalTime, to_char(TIME_STAMP,'DDMONYYYY HH24:MI:SS') timestamp
		from INT_SCST2_FLTCMS
		<iterate prepend="where" conjunction="OR"   property="arlTrNos" >
			TR_NO = #arlTrNos[]#
		</iterate>
	</select>
	<select id="sqlFetchULDInfoForScheduledJob" parameterClass="java.util.HashMap"  resultClass="cargo.cms.common.ext.bo.ULDCMSBO" >
		select TR_NO trNo, ULD_TYPE uldType, ULD_NO uldNumber, ULD_OWNER uldOwner, OWNER_ID owner, STATUS status, 
			DEST destination, INFLT_KEY inflight, to_char(INFLT_DATE,'DDMONYYYY HH24:MI:SS') inFlightDate, 
			OUTFLT_KEY outFlight,  to_char(OUTFLT_DATE,'DDMONYYYY HH24:MI:SS') outFlightDate, 
			SHC shc, REMARKS remark, CMS_WT weight, AREA area,
			to_char(TIME_STAMP,'DDMONYYYY HH24:MI:SS') timestamp
		from INT_SCST2_ULDCMS
		<iterate prepend="where" conjunction="OR"  property="arlTrNos" >
			TR_NO = #arlTrNos[]#
		</iterate>
	</select>
	<select id="sqlFetchULDREQInfoForScheduledJob" parameterClass="java.util.HashMap"  resultClass="cargo.cms.common.ext.bo.ULDReqBO" >
		select TR_NO trNo ,ULD_TYPE uldType, ULD_NO uldNumber, ULD_OWNER uldOwner, 
			PRIORITY priority, AREA area, to_char(TIME_STAMP,'DDMONYYYY HH24:MI:SS') timestamp
		from INT_SCST2_ULDREQ
		<iterate prepend="where" conjunction="OR" property="arlTrNos">
			TR_NO = #arlTrNos[]#
		</iterate>
	</select>
	<insert id="sqlInsertGetDataCntrl" parameterClass="java.util.HashMap" >
			insert into INT_SCST2_CNTRL
			(TR_NO, OPERATION, MESSAGE_ID, STATUS, LM_USER_ID, CR_USER_ID, LM_DATE, CR_DATE, TARGET_SYSTEM)
			values(
				   INT_SCST2_CNTRL_SEQ.NEXTVAL,
				   #OPERATION#,
				   'MSG_ID',
				   'S',
				   'SYSTEM_SCST2',
				   'SYSTEM_SCST2',
				   sysdate,
				   sysdate,
				   #MESSAGE_TYPE#
			)
	</insert>
	<insert id="sqlInsertGetDataULDCMS" parameterClass="java.util.HashMap" >
		insert into INT_SCST2_ULDCMS
		(TR_NO, ULD_TYPE, ULD_NO, ULD_OWNER, OWNER_ID, STATUS, CR_USER_ID,LM_USER_ID, CR_DATE, LM_DATE)
		values(
			   INT_SCST2_CNTRL_SEQ.CURRVAL,
			   #ULD_TYPE#,
			   #ULD_NUMBER#,
			   #ULD_OWNER#,
			   #ULD_OWNER#,
			   'X',
			   'SYSTEM_SCST2',
			   'SYSTEM_SCST2',
			   sysdate,
			   sysdate
		)
		
	</insert>
	<insert id="sqlInsertINT_LSPCMS_CNTRL" parameterClass="cargo.cms.common.ext.bo.LSPCMSBO" >
		INSERT INTO INT_SCST2_CNTRL 
		(TR_NO, OPERATION, MESSAGE_ID, LM_USER_ID, CR_USER_ID, LM_DATE, CR_DATE, TARGET_SYSTEM)
		VALUES (
			   INT_SCST2_CNTRL_SEQ.NEXTVAL,
			   #operation#,
			   #messageId#,
			   #createdUserId#,
			   #modifiedUserId#,
			   SYSDATE,
			   SYSDATE,
			   'ACS'
		)
	</insert>
	<insert id="sqlInsertINT_LSPRQ_CNTRL" parameterClass="cargo.cms.common.ext.bo.LSPReqBO" >
		INSERT INTO INT_SCST2_CNTRL 
		(TR_NO, OPERATION, MESSAGE_ID, LM_USER_ID, CR_USER_ID, LM_DATE, CR_DATE, TARGET_SYSTEM)
		VALUES (
			   INT_SCST2_CNTRL_SEQ.NEXTVAL,
			   #operation#,
			   #messageId#,
			   #createdUserId#,
			   #modifiedUserId#,
			   SYSDATE,
			   SYSDATE,
			   'ACS'
		)
	</insert>
	<insert id="sqlInsertGetDataLSPCMS" parameterClass="java.util.HashMap">
		   insert into INT_SCST2_LSPCMS
		   (LSP_NO, TR_NO, CR_USER_ID, LM_USER_ID, CR_DATE,LM_DATE)
		   values(
				#LSP_NO#,
				INT_SCST2_CNTRL_SEQ.CURRVAL,
				'SYSTEM_SCST2',
				'SYSTEM_SCST2',
				sysdate,
				sysdate
		   )
	</insert>
	<!--Mahesh BN Updates for package pkg.exp_uld on 11.07.2011  starts-->
		<select id="sqlGetExpFltUldDetails" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">		
			   select * from exp_flt_uld
               where flt_key = #FLT_KEY# 
               and flt_date = TO_DATE(#FLT_DATE#,'DDMONYY') 
               and uld_key = #ULD_AWB_NO#
        </select>
        <select id="sqlGetExpPmanifestUldForTrig" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">		
				select * from exp_pmanifest_uld
                where  flt_key = #FLT_KEY# 
                and flt_date = TO_DATE(#FLT_DATE#,'DDMONYY') 
                and uld_bt_no = #ULD_AWB_NO#
        </select>
         <select id="sqlGetExpPmanifestAwbDtForTrig" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">		
				select * from exp_pmanifest_awb
                where  flt_key = #FLT_KEY# 
                and flt_date = TO_DATE(#FLT_DATE#,'DDMONYY') 
                and unldg_pt = #UNLDG_PT# 
                and awb_no = #ULD_AWB_NO#
        </select>

		<select id="getRclNoForULDKey" parameterClass="java.lang.String" resultClass="java.lang.String">		
				select rcl_no from (select rcl_no from EXP_RCL_HD where ULD_KEY = #uldKey# order by cr_date desc) where rownum=1
        </select>
		
<!--Mahesh BN Updates for package pkg.exp_uld on 11.07.2011  end-->
		<update id="sqlUpdateExpPmanifestUldAwbUpdPcsWt" parameterClass="java.util.HashMap">
			UPDATE EXP_PMANIFEST_ULD_AWB SET TR_TYPE = 'COFFC', UPD_PMAN_PCS = NVL(#updPmanPcs#,0), UPD_PMAN_WT = NVL(#updPmanWt#,0) 
			WHERE FLT_KEY = #fltKey# AND FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND ULD_BT_NO = #uldKey# AND AWB_NO = #awbNo# AND AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
			AND UNLDG_PT = #unLdgPt#
		</update>
                <delete id="sqlDeletEexpPmanScanDetails" parameterClass="java.util.HashMap">
		DELETE FROM EXP_PMANIFEST_ULD_AWB_SCAN WHERE TR_NO IN (SELECT TR_NO FROM EXP_PMANIFEST_ULD_AWB WHERE FLT_KEY = #fltKey# AND FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND ULD_BT_NO = #uldKey# AND AWB_NO = #awbNo# AND AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') AND UNLDG_PT = #unLdgPt#)
		</delete>
		<delete id="sqlDeleteAWBIfPcsZero" parameterClass="java.util.HashMap">
			DELETE FROM AWB WHERE AWB_NO = #awbNo# AND AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') AND PCS = 0 AND RCL_PCS = 0 AND PMAN_PCS = 0 and 
		    NOT EXISTS (select null from BILL_CHARGE_DTL where awb_no=#awbNo# and awb_date=TO_DATE(#awbDate#,'DDMONYY'))
		</delete>
		<update id="sqlUpdateppkmixppkInd" parameterClass="java.util.HashMap">
			UPDATE ULD_INVENTORY SET PPK_IND = 'N',MIX_PPK_IND = 'N',FINAL_WEIGHT = 'N', FIRST_WT=NULL,SECOND_WT=NULL, THIRD_WT=NULL,
			MAN_WT_IND = 'N',MAN_WT_IND2 = 'N',MAN_WT_IND3 = 'N' WHERE ULD_KEY = #uldKey#
		</update>
		<select id="fetchImportShipment" parameterClass="java.util.HashMap" resultClass="java.lang.String">
			select to_char(awb_date,'DDMONYY') from awb where awb_no = #awbNo# and awb_type = 'I' and awb_closed_yn='N'
		</select>
		
		<select id="fetchAwbMaxDate" parameterClass="java.util.HashMap" resultClass="java.lang.String">
			select to_char(max(awb_date),'DDMONYY') from awb WHERE AWB_NO = #awbNo# 
		</select>
		
		<select id="fetchExpPmanifestUldAwbCount" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
			SELECT COUNT(1) FROM EXP_PMANIFEST_ULD_AWB WHERE FLT_KEY = #fltKey# AND FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND ULD_BT_NO = #uldKey#
		</select>
		<update id="updateUldInventoryEmptyFlag" parameterClass="java.util.HashMap">
			UPDATE ULD_INVENTORY SET EMPTY_FLG = 'N' WHERE ULD_KEY = #uldKey#
		</update>
		<select id="fetchULDInventoryInfo" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
			SELECT FLT_KEY,TO_CHAR(FLT_DATE,'DDMONYY') AS FLT_DATE,EMPTY_FLG,FLT_TYPE from ULD_INVENTORY WHERE ULD_KEY = #ULD_KEY#
		</select>
					
		<!-- Added By Mithun KK for CheckOut/UnCheckout Update Trigger Starts Here-->
		
		<select id="sqlPkgExpUldChkOutUpdCr1" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
			  select AWB_NO, TO_CHAR(AWB_DATE,'DDMONYY') AWB_DATE, CARR_CODE, CATALOG, CC_CODE, SRF_NO,
			 TRM_NO, CDIF_NO, SCH_COLL_DATE, LSP_NO, LOC_CODE ,LOCN_PCS,LOCN_WT,
			 TO_CHAR(RTRV_DATE,'DDMONYY') RTRV_DATE, RTRV_USER_ID, TO_CHAR(STRG_DATE,'DDMONYY HH24MISS') STRG_DATE,STRG_RMK,
			 DAM_IND,PPK_IND,BULK_WT,BUP_WT,FLT_NO,TO_CHAR(FLT_DATE,'DDMONYY') FLT_DATE,FLT_TYPE,
			 FLT_KEY,ULD_KEY,CR_USER_ID,TO_CHAR(CR_DATE,'DDMONYY') CR_DATE,LM_USER_ID,TO_CHAR(LM_DATE,'DDMONYY') LM_DATE,
			 SEQ_NO,REF_LSP_TR_TYPE,REF_LSP_TR_EVENT,REF_TR_NO,REF_TR_TYPE,TO_CHAR(REF_TR_DATE,'DDMONYY') REF_TR_DATE,
			 REF_DOC_LINE_NO,REF_LOC_FROM,REF_TR_EVENT,REF_RMK,REF_MOV_FROM,REF_AWB_EVENT
				from   awb_inventory_chkout t1
				where  flt_type = 'E'
			  and    flt_key = #FLT_KEY#
			  and    to_char(flt_date,'DDMONYY') = #FLT_DATE#
			  and    uld_key = #ULD_KEY#
			  and    exists (select null
							       from   awb
							       where  awb_no = t1.awb_no
							       and    awb_date = t1.awb_date
								   and    awb_type in ('E','T')) 
		</select>
		
		<select id="sqlPkgExpUldChkOutUpdCr2" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
			  select AWB_NO, TO_CHAR(AWB_DATE,'DDMONYY') AWB_DATE, CARR_CODE, CATALOG, CC_CODE, SRF_NO,
			 TRM_NO, CDIF_NO, SCH_COLL_DATE, LSP_NO, LOC_CODE ,LOCN_PCS,LOCN_WT,
			 TO_CHAR(RTRV_DATE,'DDMONYY') RTRV_DATE, RTRV_USER_ID, TO_CHAR(STRG_DATE,'DDMONYY HH24MISS') STRG_DATE,STRG_RMK,
			 DAM_IND,PPK_IND,BULK_WT,BUP_WT,FLT_NO,TO_CHAR(FLT_DATE,'DDMONYY') FLT_DATE,FLT_TYPE,
			 FLT_KEY,ULD_KEY,CR_USER_ID,TO_CHAR(CR_DATE,'DDMONYY') CR_DATE,LM_USER_ID,TO_CHAR(LM_DATE,'DDMONYY') LM_DATE,
			 SEQ_NO,REF_LSP_TR_TYPE,REF_LSP_TR_EVENT,REF_TR_NO,REF_TR_TYPE,TO_CHAR(REF_TR_DATE,'DDMONYY') REF_TR_DATE,
			 REF_DOC_LINE_NO,REF_LOC_FROM,REF_TR_EVENT,REF_RMK,REF_MOV_FROM,REF_AWB_EVENT
				from   awb_inventory_chkout t1
				where  flt_type = 'E'
			  and    flt_key = #FLT_KEY#
			  and    to_char(flt_date,'DDMONYY') = #FLT_DATE#
			  and    uld_key in (select uld_key
                               from   uld_inventory
                               where  base_plt = #ULD_KEY#)
			  and    exists (select null
							       from   awb
							       where  awb_no = t1.awb_no
							       and    awb_date = t1.awb_date
								   and    awb_type in ('E','T')) 
		</select>
		
		<update id="sqlPkgExpUldChkOutUpdUldInvUpd" parameterClass="java.util.HashMap">
			update uld_inventory
              set cfm_status = 'CHECKED OUT',
	            loc_code = null,
	            owned_inv = 'N',
	            lm_user_id = #LM_USER_ID#,
	            lm_date = sysdate,
	            ref_tr_no = #ULD_KEY#,
	            ref_doc_line_no = 100,
	            ref_tr_type = 'CH',
	            ref_tr_date = sysdate,
	            ref_tr_event = decode(#MODE#, 'CHECKOUT', 'CH', 'CHECKOUT HHT', 'CHH'),
	            ULDENTRY_MSG_RCVD_YN = 'N',
	            TR_TYPE = 'DUMMY'
	        where  uld_key = #ULD_KEY#
		</update>
		
		<select id="sqlPkgExpUldChkOutUpdGetEicFlg" parameterClass="java.lang.String" resultClass="java.lang.String">
			SELECT eic_flg from uld_inventory where  uld_key = #ULD_KEY#
		</select>
		
		<insert id="sqlPkgExpUldChkOutUpdAwbInvChkIns" parameterClass="java.util.HashMap">
			insert into awb_inventory_chkout
				   (awb_no, awb_date,  carr_code, catalog, cc_code, srf_no, trm_no, cdif_no,
					sch_coll_date, lsp_no,  loc_code, locn_pcs, locn_wt, rtrv_date, rtrv_user_id, strg_date,
					strg_rmk, dam_ind, ppk_ind, bulk_wt, bup_wt, flt_no, flt_date, flt_type, flt_key, uld_key,
					cr_user_id, cr_date, lm_user_id, lm_date, seq_no, ref_rmk)
		    select awb_no, awb_date,  NVL(carr_code,substr(#FLT_KEY#,0,2)), catalog, cc_code, srf_no, trm_no, cdif_no,
				   sch_coll_date, lsp_no,  loc_code, locn_pcs, locn_wt, rtrv_date, rtrv_user_id, strg_date,
				   strg_rmk, dam_ind, ppk_ind, bulk_wt, bup_wt, flt_no, #FLT_DATE#, 'E', #FLT_KEY#, uld_key,
				   cr_user_id, sysdate, lm_user_id, sysdate, seq_no, flt_key||to_char(flt_date,'DDMONYY')
            from   awb_inventory t1
            where  uld_key = #ULD_KEY#
            and        exists (select null
				       from   awb
				       where  awb_no = t1.awb_no
				       and    awb_date = t1.awb_date
					   and    awb_type in ('E','T'))  		
		</insert>
		
		<delete id="sqlPkgExpUldChkOutUpdAwbInvDelByUld" parameterClass="java.lang.String">
			delete from awb_inventory t1
	        where  exists (select null
				       from   awb
				       where  awb_no = t1.awb_no
				       and    awb_date = t1.awb_date
					   and    awb_type in ('E','T')) 
	        and    uld_key = #ULD_KYE#
		</delete>
		
		<update id="sqlPkgExpUldChkOutUpdUldInvUpdOnEic" parameterClass="java.util.HashMap">
		
		update uld_inventory set
		            cfm_status = 'CHECKED OUT',
		            loc_code = null,
		            owned_inv = 'N',
		            lm_user_id = #LM_USER_ID#,
		            lm_date = sysdate,
		            ref_tr_no = uld_key,
		            ref_doc_line_no = 1,
		            ref_tr_type = 'CH',
		            ref_tr_date = sysdate,
		            ref_tr_event = decode(#MODE#, 'CHECKOUT', 'CH', 'CHECKOUT HHT', 'CHH')
		        where  base_plt = #ULD_KEY#
		</update>
		
		<insert id="sqlPkgExpUldChkOutUpdAwbInvChkInsOnEic" parameterClass="java.util.HashMap">
		insert into awb_inventory_chkout
					   (awb_no, awb_date,  carr_code, catalog, cc_code, srf_no, trm_no, cdif_no,
						sch_coll_date, lsp_no,  loc_code, locn_pcs, locn_wt, rtrv_date, rtrv_user_id, strg_date,
						strg_rmk, dam_ind, ppk_ind, bulk_wt, bup_wt, flt_no, flt_date, flt_type, flt_key, uld_key,
						cr_user_id, cr_date, lm_user_id, lm_date, seq_no, ref_rmk)
				select awb_no, awb_date,  carr_code, catalog, cc_code, srf_no, trm_no, cdif_no,
					   sch_coll_date, lsp_no,  loc_code, locn_pcs, locn_wt, rtrv_date, rtrv_user_id, strg_date,
					   strg_rmk, dam_ind, ppk_ind, bulk_wt, bup_wt, flt_no, #FLT_DATE#, 'E', #FLT_KEY#, uld_key,
					   cr_user_id, sysdate, lm_user_id, sysdate, seq_no, flt_key||to_char(flt_date,'DDMONYY')
				from   awb_inventory t1
				where  exists (select null
				       from   awb
				       where  awb_no = t1.awb_no
				       and    awb_date = t1.awb_date
					   and    awb_type in ('E','T')) 
			  and    uld_key in (select uld_key
				                   from   uld_inventory
				                   where  base_plt = #ULD_KEY#)
		</insert>
		
		<delete id="sqlPkgExpUldChkOutUpdAwbInvDelByUldOnEicBase" parameterClass="java.lang.String">
			delete from awb_inventory t1
		        where  exists (select null
				       from   awb
				       where  awb_no = t1.awb_no
				       and    awb_date = t1.awb_date
					   and    awb_type in ('E','T')) 
		        and    uld_key in (select uld_key
		                           from   uld_inventory
		                           where  base_plt = #ULD_KYE#)
		</delete>
		
		<select id="sqlPkgExpUldChkOutUpdGetUldStsFrmUldMov" parameterClass="java.lang.String" resultClass="java.lang.String">
			select nvl(decode(uld_status, 'CHECKED OUT', 'CONFIRMED', uld_status), 'CONFIRMED')
	            from   (select uld_status, dense_rank() over(partition by uld_key order by seq_no desc) rank
	                    from   uld_mov
	                    where  uld_key = #ULD_KEY#)
	            where  rank = 2
		</select>
		
		<update id="sqlPkgExpUldChkOutUpdUldInvUpdate" parameterClass="java.util.HashMap">
			update uld_inventory
              set cfm_status = #STATUS#,
	            loc_code = #LOC_CODE#,
	            owned_inv = 'Y',
	            lm_user_id = #LM_USER_ID#,
	            lm_date = sysdate,
	            ref_tr_no = #ULD_KEY#,
	            ref_doc_line_no = 1,
	            ref_tr_type = 'UC',
	            ref_tr_date = sysdate,
	            ref_tr_event = decode(#MODE#, 'UNCHECKOUT', 'UC', 'UNCHECKOUT HHT', 'UCHH'),
	            ENTRY_TIME = sysdate
              where  uld_key = #ULD_KEY#
		
		</update>
		
		<insert id="sqlPkgExpUldChkOutUpdAwbInvInsert" parameterClass="java.util.HashMap">
			insert into awb_inventory
					   (awb_no, awb_date, carr_code, catalog, cc_code, srf_no, trm_no, cdif_no,
						sch_coll_date, lsp_no,  loc_code, locn_pcs, locn_wt, rtrv_date, rtrv_user_id, strg_date,
						strg_rmk, dam_ind, ppk_ind, bulk_wt, bup_wt, flt_no, flt_date, flt_type, flt_key, uld_key,
						cr_user_id, cr_date, lm_user_id, lm_date, seq_no, ref_rmk)
				values (#AWB_NO#, #AWB_DATE#, #CARR_CODE#, #CATALOG#, #CC_CODE#, #SRF_NO#, #TRM_NO#, #CDIF_NO#,
						#SCH_COLL_DATE#, #LSP_NO#,  #LOC_CODE#, #LOCN_PCS#, #LOCN_WT#, #RTRV_DATE#, #RTRV_USER_ID#, To_Date(#STRG_DATE#,'DDMONYY HH24:MI:SS'),
						#STRG_RMK#, #DAM_IND#, #PPK_IND#, #BULK_WT#, #BUP_WT#, #FLT_NO#, #FLT_DATE#, #FLT_TYPE#, #FLT_KEY#, #ULD_KEY#,
						#CR_USER_ID#, SYSDATE, #LM_USER_ID#, SYSDATE, #SEQ_NO#, #REF_RMK#)
		</insert>
		
		<delete id="sqlPkgExpUldChkOutUpdAwbInvDelByUldOnEic" parameterClass="java.util.HashMap">
		delete from awb_inventory_chkout t1
	        where   exists (select null
				       from   awb
				       where  awb_no = t1.awb_no
				       and    awb_date = t1.awb_date
					   and    awb_type in ('E','T'))
	        and    flt_type = 'E'
	        and    flt_key = #FLT_KEY#
	        and    TO_CHAR(flt_date,'DDMONYY') = #FLT_DATE#
	        and    uld_key = #ULD_KEY#
	    </delete>
	    <update id="sqlPkgExpUldChkOutUpdUldInvUpdateBase" parameterClass="java.util.HashMap">
				update uld_inventory set
		            cfm_status = #STATUS#,
		            loc_code = #LOC_CODE#,
		            owned_inv = 'Y',
		            lm_user_id = #LM_USER_ID#,
		            lm_date = sysdate,
		            ref_tr_no = uld_key,
		            ref_doc_line_no = 1,
		            ref_tr_type = 'UC',
		            ref_tr_date = sysdate,
		            ref_tr_event = decode(#MODE#, 'UNCHECKOUT', 'UC', 'UNCHECKOUT HHT', 'UCHH'),
		            ENTRY_TIME = sysdate
		        where  base_plt = #ULD_KEY#
		</update>
		<delete id="sqlPkgExpUldChkOutUpdAwbInvDelete" parameterClass="java.util.HashMap">
		delete from awb_inventory_chkout t1
		        where   exists (select null
				       from   awb
				       where  awb_no = t1.awb_no
				       and    awb_date = t1.awb_date
					   and    awb_type in ('E','T')) 
		        and    flt_type = 'E'
		        and    flt_key = #FLT_KEY#
		        and    to_char(flt_date,'DDMONYY') = #FLT_DATE#
		        and    uld_key in (select uld_key
		                           from   uld_inventory
		                           where  base_plt = #ULD_KEY#)
	    </delete>
	    
	    <update id="sqlPkgExpUldChkOutUpdExpFltUpd" parameterClass="java.util.HashMap">
	    update exp_flt_uld
		    set checkout_yn = decode(#MODE#, 'CHECKOUT', 'Y', 'CHECKOUT HHT', 'Y', 'N')
	    where  flt_key = #FLT_KEY#
	    and     to_char(flt_date,'DDMONYY') = #FLT_DATE#
	    and    uld_key = #ULD_KEY#
	    </update>
	    
	    <update id="sqlPkgExpUldChkOutUpdExpFltUpdBase" parameterClass="java.util.HashMap">
	    update exp_flt_uld
			    set checkout_yn = decode(#MODE#, 'CHECKOUT', 'Y', 'CHECKOUT HHT', 'Y', 'N')
		    where  flt_key = #FLT_KEY#
		    and    flt_date = #FLT_DATE#
		    and    uld_key in (select uld_key
		                       from   uld_inventory
		                       where  base_plt = #ULD_KEY#)
		</update>
		
		
		<!-- Added By Mithun KK for CheckOut/UnCheckout Update Trigger Ends Here-->
		<!-- Added By Asha for NonColoadableSHC check Starts Here-->
		
			<select id="fetchSHCToCheckNonCoload" parameterClass="cargo.cms.export.buildup.bo.NonColoadableSHCBO" resultClass="cargo.cms.export.buildup.bo.NonColoadableSHCBO">
		select RTRIM(LTRIM
  	( spl_code1 ||
      NVL2( spl_code2, ',' || spl_code2  , null ) ||
      NVL2( spl_code3, ',' || spl_code3 , null ) || 
       NVL2( spl_code4, ',' || spl_code4 , null )|| 
        NVL2( spl_code5, ',' || spl_code5 , null )|| 
         NVL2( spl_code6, ',' || spl_code6 , null )|| 
          NVL2( spl_code7, ',' || spl_code7 , null )||
           NVL2( spl_code8, ',' || spl_code8 , null )||
            NVL2( spl_code9, ',' || spl_code9 , null )
      ,
    ','
  	)) as shc, awb_no as awbNo from awb where awb_no=#awbNo# and awb_date=#awbDate#
  </select>

	<select id="checkNonColoadShc" parameterClass="cargo.cms.export.buildup.bo.NonColoadableSHCBO" resultClass="java.lang.Integer">
		  SELECT COUNT(1) FROM (select count(1) AS CNT from mast_non_coload_shc where 1=1
		  and carr_code = #carrier# 
		  <isNotEmpty property="unldgPt"> 
		  and UNLDG_PT = #unldgPt# 
		  </isNotEmpty>
		  and non_coload_sch in 
  		  <iterate property="nonColoadableSch" open="(" close=")" conjunction=",">
	      #nonColoadableSch[]#  
	      </iterate>
	      and sch in
	  	  <iterate property="sch" open="(" close=")" conjunction=",">
	      #sch[]#  
	      </iterate>
	      UNION
	      select count(1) AS CNT from mast_non_coload_shc MO where MO.CARR_CODE=#carrier#
	  	  AND MO.non_coload_sch in 
	  	  <iterate property="nonColoadableSch" open="(" close=")" conjunction=",">
		  #nonColoadableSch[]#  
	  	  </iterate>
	  	  and MO.sch in
	  	  <iterate property="sch" open="(" close=")" conjunction=",">
	  	  #sch[]#  
	  	  </iterate>
	  	  AND MO.UNLDG_PT IS NULL 
	  	  AND NOT EXISTS (SELECT NULL FROM MAST_NON_COLOAD_SHC MI WHERE MI.CARR_CODE=#carrier# AND MI.UNLDG_PT = #unldgPt#  AND MI.SCH = MO.SCH AND mi.non_coload_sch = mo.non_coload_sch)) WHERE CNT > 0          
	</select>
<select id="checkNonColoadwotEndrseShc" parameterClass="cargo.cms.export.buildup.bo.NonColoadableSHCBO" resultClass="java.lang.Integer">
		  SELECT COUNT(1) FROM (select count(1) AS CNT from mast_non_coload_shc where CARR_CODE=#carrier#
		  <isNotEmpty property="unldgPt"> 
		  and UNLDG_PT = #unldgPt# 
		  </isNotEmpty> 
		  AND non_coload_sch in 
  		  <iterate property="nonColoadableSch" open="(" close=")" conjunction=",">
	      #nonColoadableSch[]#  
	      </iterate>
	      and sch in
	      <iterate property="sch" open="(" close=")" conjunction=",">
	      #sch[]#  
	      </iterate>
	      UNION
	      select count(1) AS CNT from mast_non_coload_shc MO where MO.CARR_CODE=#carrier#
	  	  AND MO.non_coload_sch in 
	  	  <iterate property="nonColoadableSch" open="(" close=")" conjunction=",">
		  #nonColoadableSch[]#  
	  	  </iterate>
	  	  and MO.sch in
	  	  <iterate property="sch" open="(" close=")" conjunction=",">
	  	  #sch[]#  
	  	  </iterate>
	  	  AND MO.UNLDG_PT IS NULL 
	  	  AND NOT EXISTS (SELECT NULL FROM MAST_NON_COLOAD_SHC MI WHERE MI.CARR_CODE=#carrier# AND MI.UNLDG_PT = #unldgPt#  AND MI.SCH = MO.SCH AND mi.non_coload_sch = mo.non_coload_sch)) WHERE CNT > 0          
	</select>
	<select id="checkNonColoadCarr" parameterClass="map" resultClass="java.lang.String">
	SELECT CARR_CODE FROM FLT_OPR WHERE FLT_KEY=#fltKey# AND SCH_DATE=#fltDate# AND FLT_TYPE='D' AND ROWNUM=1
	</select>
	<select id="checkNonColoadEndrShc" parameterClass="cargo.cms.export.buildup.bo.NonColoadableSHCBO" resultClass="java.lang.Integer">
		  SELECT COUNT(1) FROM (select count(1) AS CNT from mast_non_coload_shc where CARR_CODE=#carrier# AND ENDRSE_IND = 'Y'
		  <isNotEmpty property="unldgPt"> 
		  and UNLDG_PT = #unldgPt# 
		  </isNotEmpty> 
		  AND non_coload_sch in 
	  	  <iterate property="nonColoadableSch" open="(" close=")" conjunction=",">
		  #nonColoadableSch[]#  
	  	  </iterate>
	  	  and sch in
	  	  <iterate property="sch" open="(" close=")" conjunction=",">
	  	  #sch[]#  
	  	  </iterate>
	  	  UNION
	  	  select count(1) AS CNT from mast_non_coload_shc MO where MO.CARR_CODE=#carrier# AND MO.ENDRSE_IND = 'Y'
	  	  AND MO.non_coload_sch in 
	  	  <iterate property="nonColoadableSch" open="(" close=")" conjunction=",">
		  #nonColoadableSch[]#  
	  	  </iterate>
	  	  and MO.sch in
	  	  <iterate property="sch" open="(" close=")" conjunction=",">
	  	  #sch[]#  
	  	  </iterate>
	  	  AND MO.UNLDG_PT IS NULL 
	  	  AND NOT EXISTS (SELECT NULL FROM MAST_NON_COLOAD_SHC MI WHERE MI.CARR_CODE=#carrier# AND MI.UNLDG_PT = #unldgPt#  AND MI.SCH = MO.SCH AND mi.non_coload_sch = mo.non_coload_sch)) WHERE CNT > 0          
	</select>
	<select id="checkNonColoadEndrseNShc" parameterClass="cargo.cms.export.buildup.bo.NonColoadableSHCBO" resultClass="java.lang.Integer">
		  SELECT COUNT(1) FROM (select count(1) AS CNT from mast_non_coload_shc where CARR_CODE=#carrier# AND ENDRSE_IND = 'N' 
		  <isNotEmpty property="unldgPt"> 
		  and UNLDG_PT = #unldgPt# 
		  </isNotEmpty>
		  AND non_coload_sch in 
  	  	  <iterate property="nonColoadableSch" open="(" close=")" conjunction=",">
	      #nonColoadableSch[]#  
	      </iterate>
	  	  and sch in
	      <iterate property="sch" open="(" close=")" conjunction=",">
	      #sch[]#  
	      </iterate>
	      UNION
	      select count(1) AS CNT from mast_non_coload_shc MO where MO.CARR_CODE=#carrier# AND MO.ENDRSE_IND = 'N'
	  	  AND MO.non_coload_sch in 
	  	  <iterate property="nonColoadableSch" open="(" close=")" conjunction=",">
		  #nonColoadableSch[]#  
	  	  </iterate>
	  	  and MO.sch in
	  	  <iterate property="sch" open="(" close=")" conjunction=",">
	  	  #sch[]#  
	  	  </iterate>
	  	  AND MO.UNLDG_PT IS NULL 
	  	  AND NOT EXISTS (SELECT NULL FROM MAST_NON_COLOAD_SHC MI WHERE MI.CARR_CODE=#carrier# AND MI.UNLDG_PT = #unldgPt#  AND MI.SCH = MO.SCH AND mi.non_coload_sch = mo.non_coload_sch)) WHERE CNT > 0          
	</select>
	<select id="checkNonColoadAllShc" parameterClass="cargo.cms.export.buildup.bo.NonColoadableSHCBO" resultClass="java.lang.String">
	<![CDATA[
	SELECT COUNT(1) FROM (
	SELECT NVL((SELECT COUNT(1) FROM MAST_NON_COLOAD_SHC WHERE CARR_CODE   =#carrier# AND ENDRSE_IND = 'N'
	]]>
	<isNotEmpty property="unldgPt"> 
	and UNLDG_PT = #unldgPt# 
	</isNotEmpty>
	<![CDATA[
	AND NON_COLOAD_SCH='***' AND 
	((SCH  IN (B.SPL_CODE1,B.SPL_CODE2,B.SPL_CODE3,B.SPL_CODE4,B.SPL_CODE5,B.SPL_CODE6,B.SPL_CODE7,B.SPL_CODE8,B.SPL_CODE9))
	OR (SCH IN 
	]]>  
	<iterate property="sch" open="(" close=")" conjunction=",">
	  #sch[]#  
	  </iterate>
	 <![CDATA[)
	)
	),0) cnt
	FROM EXP_PMANIFEST_ULD_AWB A,
	  AWB B,FLT_OPR C
	WHERE 
	C.FLT_KEY = A.FLT_KEY
	AND C.SCH_DATE = A.FLT_DATE
	AND C.FLT_TYPE='D'
	AND B.AWB_NO = A.AWB_NO
	AND B.AWB_DATE = A.AWB_DATE
	AND A.FLT_KEY  =#fltKey#
	AND A.FLT_DATE =#fltDate#
	AND A.ULD_BT_NO=#uldKey#
	AND (SELECT COUNT(1) FROM EXP_PMANIFEST_ULD_AWB WHERE FLT_KEY=#fltKey# AND FLT_DATE=#fltDate# AND ULD_BT_NO=#uldKey#) > 1
	UNION
	SELECT NVL((SELECT COUNT(1) FROM MAST_NON_COLOAD_SHC MO WHERE MO.CARR_CODE   =#carrier# AND MO.ENDRSE_IND = 'N'
	AND MO.NON_COLOAD_SCH='***' AND 
	((MO.SCH  IN (B.SPL_CODE1,B.SPL_CODE2,B.SPL_CODE3,B.SPL_CODE4,B.SPL_CODE5,B.SPL_CODE6,B.SPL_CODE7,B.SPL_CODE8,B.SPL_CODE9))
	OR (MO.SCH IN 
	]]>  
	<iterate property="sch" open="(" close=")" conjunction=",">
	  #sch[]#  
	  </iterate>
	 <![CDATA[)
	)
	AND MO.UNLDG_PT IS NULL 
	AND NOT EXISTS (SELECT NULL FROM MAST_NON_COLOAD_SHC MI WHERE MI.CARR_CODE=#carrier# AND MI.UNLDG_PT = #unldgPt#  AND MI.SCH = MO.SCH AND mi.non_coload_sch = mo.non_coload_sch)
	),0) cnt
	FROM EXP_PMANIFEST_ULD_AWB A,
	  AWB B,FLT_OPR C
	WHERE 
	C.FLT_KEY = A.FLT_KEY
	AND C.SCH_DATE = A.FLT_DATE
	AND C.FLT_TYPE='D'
	AND B.AWB_NO = A.AWB_NO
	AND B.AWB_DATE = A.AWB_DATE
	AND A.FLT_KEY  =#fltKey#
	AND A.FLT_DATE =#fltDate#
	AND A.ULD_BT_NO=#uldKey# 
	AND (SELECT COUNT(1) FROM EXP_PMANIFEST_ULD_AWB WHERE FLT_KEY=#fltKey# AND FLT_DATE=#fltDate# AND ULD_BT_NO=#uldKey#) > 1) WHERE cnt > 0
	]]>
	</select>
	
	
	
	<select id="checkNonColoadAllShcForMobile" parameterClass="cargo.cms.export.buildup.bo.NonColoadableSHCBO" resultClass="java.lang.String">
	<![CDATA[
	SELECT COUNT(1) FROM (
	SELECT NVL((SELECT COUNT(1) FROM MAST_NON_COLOAD_SHC WHERE CARR_CODE   =#carrier# 
	]]>
	<isNotEmpty property="unldgPt"> 
	and UNLDG_PT = #unldgPt# 
	</isNotEmpty>
	<![CDATA[
	AND NON_COLOAD_SCH='***' AND 
	((SCH  IN (B.SPL_CODE1,B.SPL_CODE2,B.SPL_CODE3,B.SPL_CODE4,B.SPL_CODE5,B.SPL_CODE6,B.SPL_CODE7,B.SPL_CODE8,B.SPL_CODE9))
	OR (SCH IN 
	]]>  
	<iterate property="sch" open="(" close=")" conjunction=",">
	  #sch[]#  
	  </iterate>
	 <![CDATA[)
	)
	),0) cnt
	FROM EXP_PMANIFEST_ULD_AWB A,
	  AWB B,FLT_OPR C
	WHERE 
	C.FLT_KEY = A.FLT_KEY
	AND C.SCH_DATE = A.FLT_DATE
	AND C.FLT_TYPE='D'
	AND B.AWB_NO = A.AWB_NO
	AND B.AWB_DATE = A.AWB_DATE
	AND A.FLT_KEY  =#fltKey#
	AND A.FLT_DATE =#fltDate#
	AND A.ULD_BT_NO=#uldKey#
	AND (SELECT COUNT(1) FROM EXP_PMANIFEST_ULD_AWB WHERE FLT_KEY=#fltKey# AND FLT_DATE=#fltDate# AND ULD_BT_NO=#uldKey#) > 1
	UNION
	SELECT NVL((SELECT COUNT(1) FROM MAST_NON_COLOAD_SHC MO WHERE MO.CARR_CODE   =#carrier# 
	AND MO.NON_COLOAD_SCH='***' AND 
	((MO.SCH  IN (B.SPL_CODE1,B.SPL_CODE2,B.SPL_CODE3,B.SPL_CODE4,B.SPL_CODE5,B.SPL_CODE6,B.SPL_CODE7,B.SPL_CODE8,B.SPL_CODE9))
	OR (MO.SCH IN 
	]]>  
	<iterate property="sch" open="(" close=")" conjunction=",">
	  #sch[]#  
	  </iterate>
	 <![CDATA[)
	)
	AND MO.UNLDG_PT IS NULL 
	AND NOT EXISTS (SELECT NULL FROM MAST_NON_COLOAD_SHC MI WHERE MI.CARR_CODE=#carrier# AND MI.UNLDG_PT = #unldgPt#  AND MI.SCH = MO.SCH AND mi.non_coload_sch = mo.non_coload_sch)
	),0) cnt
	FROM EXP_PMANIFEST_ULD_AWB A,
	  AWB B,FLT_OPR C
	WHERE 
	C.FLT_KEY = A.FLT_KEY
	AND C.SCH_DATE = A.FLT_DATE
	AND C.FLT_TYPE='D'
	AND B.AWB_NO = A.AWB_NO
	AND B.AWB_DATE = A.AWB_DATE
	AND A.FLT_KEY  =#fltKey#
	AND A.FLT_DATE =#fltDate#
	AND A.ULD_BT_NO=#uldKey# 
	AND (SELECT COUNT(1) FROM EXP_PMANIFEST_ULD_AWB WHERE FLT_KEY=#fltKey# AND FLT_DATE=#fltDate# AND ULD_BT_NO=#uldKey#) > 1) WHERE cnt > 0
	]]>
	</select>
<select id="checkNonColoadAllNonEndorse" parameterClass="cargo.cms.export.buildup.bo.NonColoadableSHCBO" resultClass="java.lang.String">
	<![CDATA[
	SELECT COUNT(1) FROM (
	SELECT NVL((SELECT COUNT(1) FROM MAST_NON_COLOAD_SHC WHERE CARR_CODE   =#carrier# AND ENDRSE_IND = 'N'
	]]>
	<isNotEmpty property="unldgPt"> 
	and UNLDG_PT = #unldgPt# 
	</isNotEmpty>
	<![CDATA[
	AND NON_COLOAD_SCH='***' AND 
	((SCH  IN (B.SPL_CODE1,B.SPL_CODE2,B.SPL_CODE3,B.SPL_CODE4,B.SPL_CODE5,B.SPL_CODE6,B.SPL_CODE7,B.SPL_CODE8,B.SPL_CODE9))
	OR (SCH IN 
	]]>  
	<iterate property="sch" open="(" close=")" conjunction=",">
	  #sch[]#  
	  </iterate>
	 <![CDATA[)
	)
	),0) cnt
	FROM EXP_PMANIFEST_ULD_AWB A,
	  AWB B,FLT_OPR C
	WHERE 
	C.FLT_KEY = A.FLT_KEY
	AND C.SCH_DATE = A.FLT_DATE
	AND C.FLT_TYPE='D'
	AND B.AWB_NO = A.AWB_NO
	AND B.AWB_DATE = A.AWB_DATE
	AND A.FLT_KEY  =#fltKey#
	AND A.FLT_DATE =#fltDate#
	AND A.ULD_BT_NO=#uldKey#
	AND (SELECT COUNT(1) FROM EXP_PMANIFEST_ULD_AWB WHERE FLT_KEY=#fltKey# AND FLT_DATE=#fltDate# AND ULD_BT_NO=#uldKey#) > 0
	UNION
	SELECT NVL((SELECT COUNT(1) FROM MAST_NON_COLOAD_SHC MO WHERE MO.CARR_CODE   =#carrier# AND MO.ENDRSE_IND = 'N'
	AND MO.NON_COLOAD_SCH='***' AND 
	((MO.SCH  IN (B.SPL_CODE1,B.SPL_CODE2,B.SPL_CODE3,B.SPL_CODE4,B.SPL_CODE5,B.SPL_CODE6,B.SPL_CODE7,B.SPL_CODE8,B.SPL_CODE9))
	OR (MO.SCH IN 
	]]>  
	<iterate property="sch" open="(" close=")" conjunction=",">
	  #sch[]#  
	  </iterate>
	 <![CDATA[)
	)
	AND MO.UNLDG_PT IS NULL 
	AND NOT EXISTS (SELECT NULL FROM MAST_NON_COLOAD_SHC MI WHERE MI.CARR_CODE=#carrier# AND MI.UNLDG_PT = #unldgPt#  AND MI.SCH = MO.SCH AND mi.non_coload_sch = mo.non_coload_sch)
	),0) cnt
	FROM EXP_PMANIFEST_ULD_AWB A,
	  AWB B,FLT_OPR C
	WHERE 
	C.FLT_KEY = A.FLT_KEY
	AND C.SCH_DATE = A.FLT_DATE
	AND C.FLT_TYPE='D'
	AND B.AWB_NO = A.AWB_NO
	AND B.AWB_DATE = A.AWB_DATE
	AND A.FLT_KEY  =#fltKey#
	AND A.FLT_DATE =#fltDate#
	AND A.ULD_BT_NO=#uldKey# 
	AND (SELECT COUNT(1) FROM EXP_PMANIFEST_ULD_AWB WHERE FLT_KEY=#fltKey# AND FLT_DATE=#fltDate# AND ULD_BT_NO=#uldKey#) > 0) WHERE cnt > 0
	]]>
	</select>

        <select id="checkNonColoadAllEndorseBUP" parameterClass="cargo.cms.export.buildup.bo.NonColoadableSHCBO" resultClass="java.lang.String">
	<![CDATA[
	SELECT COUNT(1) FROM (
	SELECT NVL((SELECT COUNT(1) FROM MAST_NON_COLOAD_SHC WHERE CARR_CODE   =#carrier# AND ENDRSE_IND = 'Y'
	and UNLDG_PT = #unldgPt# 
	AND NON_COLOAD_SCH='***' AND 
	(SCH  IN (B.SPL_CODE1,B.SPL_CODE2,B.SPL_CODE3,B.SPL_CODE4,B.SPL_CODE5,B.SPL_CODE6,B.SPL_CODE7,B.SPL_CODE8,B.SPL_CODE9))),0) cnt
	FROM 
	  AWB B
	WHERE B.AWB_NO = #awbNo#
	AND B.AWB_DATE = #awbDate#
	UNION
	SELECT NVL((SELECT COUNT(1) FROM MAST_NON_COLOAD_SHC MO WHERE MO.CARR_CODE   =#carrier# AND MO.ENDRSE_IND = 'Y'
	AND MO.NON_COLOAD_SCH='***' AND 
	(MO.SCH  IN (B.SPL_CODE1,B.SPL_CODE2,B.SPL_CODE3,B.SPL_CODE4,B.SPL_CODE5,B.SPL_CODE6,B.SPL_CODE7,B.SPL_CODE8,B.SPL_CODE9))
	AND MO.UNLDG_PT IS NULL 
	AND NOT EXISTS (SELECT NULL FROM MAST_NON_COLOAD_SHC MI WHERE MI.CARR_CODE=#carrier# AND MI.UNLDG_PT = #unldgPt#  AND MI.SCH = MO.SCH AND mi.non_coload_sch = mo.non_coload_sch)
	),0) cnt
	FROM 
	  AWB B
	WHERE B.AWB_NO = #awbNo#
	AND B.AWB_DATE = #awbDate#
	) WHERE cnt > 0
	]]>
	</select>
<select id="checkNonColoadAllNonEndorseBUP" parameterClass="cargo.cms.export.buildup.bo.NonColoadableSHCBO" resultClass="java.lang.String">
	<![CDATA[
	SELECT COUNT(1) FROM (
	SELECT NVL((SELECT COUNT(1) FROM MAST_NON_COLOAD_SHC WHERE CARR_CODE   =#carrier# AND ENDRSE_IND = 'N'
	and UNLDG_PT = #unldgPt# 
	AND NON_COLOAD_SCH='***' AND 
	(SCH  IN (B.SPL_CODE1,B.SPL_CODE2,B.SPL_CODE3,B.SPL_CODE4,B.SPL_CODE5,B.SPL_CODE6,B.SPL_CODE7,B.SPL_CODE8,B.SPL_CODE9))),0) cnt
	FROM 
	  AWB B
	WHERE B.AWB_NO = #awbNo#
	AND B.AWB_DATE = #awbDate#
	UNION
	SELECT NVL((SELECT COUNT(1) FROM MAST_NON_COLOAD_SHC MO WHERE MO.CARR_CODE   =#carrier# AND MO.ENDRSE_IND = 'N'
	AND MO.NON_COLOAD_SCH='***' AND 
	(MO.SCH  IN (B.SPL_CODE1,B.SPL_CODE2,B.SPL_CODE3,B.SPL_CODE4,B.SPL_CODE5,B.SPL_CODE6,B.SPL_CODE7,B.SPL_CODE8,B.SPL_CODE9))
	AND MO.UNLDG_PT IS NULL 
	AND NOT EXISTS (SELECT NULL FROM MAST_NON_COLOAD_SHC MI WHERE MI.CARR_CODE=#carrier# AND MI.UNLDG_PT = #unldgPt#  AND MI.SCH = MO.SCH AND mi.non_coload_sch = mo.non_coload_sch)
	),0) cnt
	FROM 
	  AWB B
	WHERE B.AWB_NO = #awbNo#
	AND B.AWB_DATE = #awbDate#
	) WHERE cnt > 0
	]]>
	</select>
<select id="checkDummyOutstandingPieces" parameterClass="java.util.HashMap" resultClass="java.lang.String">
	<![CDATA[
		SELECT (nvl((SELECT SUM(PMAN_PCS) FROM EXP_PMANIFEST_AWB WHERE FLT_KEY=#P_FLT_KEY# AND FLT_DATE=TO_DATE(#P_FLT_DATE#,'DDMONYY') AND AWB_NO=#P_AWB_NO#),0) - nvl((SELECT SUM(ASSIGNED_PCS) FROM exp_pmanifest_uld_awb WHERE FLT_KEY=#P_FLT_KEY# AND FLT_DATE=TO_DATE(#P_FLT_DATE#,'DDMONYY') AND AWB_NO=#P_AWB_NO#),0)) as outstanding
     FROM DUAL WHERE 
    (SELECT COUNT(1) FROM EXP_PMANIFEST_ULD ULD,EXP_PMANIFEST_ULD_AWB ULDAWB WHERE 
    ULD.ULD_BT_NO = ULDAWB.ULD_BT_NO AND ULD.FLT_KEY = ULDAWB.FLT_KEY AND ULD.FLT_DATE=ULDAWB.FLT_DATE 
    AND ULD.FLT_KEY=#P_FLT_KEY# AND ULD.FLT_DATE=TO_DATE(#P_FLT_DATE#,'DDMONYY') AND ULD.ULD_BT_NO=#P_ULD_KEY# AND ULDAWB.AWB_NO=#P_AWB_NO#) > 0
    ]]> 
	</select>

	<select id="checkOutstandingPieces" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		select (pman_pcs - assigned_pcs) as outstanding from exp_pmanifest_awb, exp_pmanifest_uld_awb where exp_pmanifest_awb.flt_key = exp_pmanifest_uld_awb.flt_key and
                exp_pmanifest_awb.flt_date = exp_pmanifest_uld_awb.flt_date and
                exp_pmanifest_awb.awb_no = exp_pmanifest_uld_awb.awb_no and
                exp_pmanifest_awb.awb_date = exp_pmanifest_uld_awb.awb_date
                AND exp_pmanifest_awb.UNLDG_PT      = exp_pmanifest_uld_awb.UNLDG_PT
                and exp_pmanifest_awb.flt_key = #P_FLT_KEY# and exp_pmanifest_awb.flt_date = TO_DATE(#P_FLT_DATE#,'DDMONYY')
                and exp_pmanifest_uld_awb.awb_no = #P_AWB_NO# AND exp_pmanifest_uld_awb.uld_bt_no = #P_ULD_KEY#
	</select>
	<update id="updateAWBPreManifest" parameterClass="java.util.HashMap">
		UPDATE AWB SET PPK_TYPE = NVL(PPK_TYPE,'B'), CARR_CODE = NVL(CARR_CODE, #carrCode#), CATALOG = NVL(CATALOG, 'EG'), ORIG = NVL(ORIG, 'HKG'), DEST = NVL(DEST, #dest#),CNSL_IND =  NVL(CNSL_IND,#FHL_CNSL_YN#)  WHERE AWB_NO = #awbNo# AND AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
	</update>	
	<select id="fetchRCLStatus" parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT STATUS FROM EXP_RCL_HD WHERE RCL_NO = #rclNo# AND ROWNUM = 1
	</select>
	<select id="fetchAWBSplCodes" parameterClass="cargo.cms.export.bo.PreManifestAWBBO" resultClass="cargo.cms.export.bo.PreManifestAWBBO">
		SELECT SPL_CODE1 AS shcOne, SPL_CODE2 AS shcTwo, SPL_CODE3 AS shcThree, SPL_CODE4 AS shcFour, SPL_CODE5 AS shcFive, SPL_CODE6 AS shcSix,
		SPL_CODE7 AS shcSeven, SPL_CODE8 AS shcEight, SPL_CODE9 AS shcNine FROM AWB WHERE AWB_NO = #awbNo# AND AWB_DATE = #awbDate# AND ROWNUM = 1
	</select>
	<select id="sqlmanifestuldawbdetailsforppk" parameterClass="cargo.cms.export.buildup.bo.ManifestAWBBO"  resultClass="cargo.cms.export.buildup.bo.ManifestAWBBO">	
	
		SELECT tr_No preManfTrNo,
			FLT_KEY as fltNo , TO_CHAR(FLT_DATE,'DDMONYY') as fltDate, ULD_BT_NO as uldKey, 
			UNLDG_PT as unLdgPt, AWB_NO as awbNo, TO_CHAR(AWB_DATE,'DDMONYY') as awbDate, 
			ASSIGNED_PCS as assignedPcs, ASSIGNED_WT as assignedWt
		FROM EXP_PMANIFEST_ULD_AWB
		WHERE
			FLT_KEY = #fltNo#
			AND FLT_DATE=#fltDate#
			AND ULD_BT_NO=#uldKey#
			AND UNLDG_PT=#unLdgPt#			
	</select>
	<select id="sqlFnAwbUldIndForUndoBuildup" parameterClass="java.util.HashMap" resultClass="java.lang.String">
	select nvl(sum(locn_pcs), 0)
	  from   awb_inventory
	  where  awb_no = #AWB_NO#
	  and    awb_date = to_date(#AWB_DATE#, 'DDMONYY')
	  and    uld_key = #ULD_KEY#
	  and  (flt_type = 'E' and flt_key is not null)
 		</select>
 		
	<select id="sqlFnAwbUldPcsWtForUndoBuildup" parameterClass="java.util.HashMap" resultClass="java.lang.String">
	select nvl(sum(decode(#DATA_TYPE#, 'PCS', locn_pcs, locn_wt)),'0' )
       	from   awb_inventory
       	where  awb_no = #AWB_NO#
       	and    awb_date = TO_DATE(#AWB_DATE#, 'DDMONYY')
       	and    uld_key = #ULD_KEY#
       	and  (flt_type = 'E' and flt_key is not null)
 	</select>
	<select id="sqlPreManifestFetchOldAWBRecord" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT BULK_PCS ,BULK_WT,LM_USER_ID,PPK_PCS, PPK_WT, MIX_PCS, MIX_WT FROM EXP_PMANIFEST_AWB
			WHERE FLT_KEY = #FLT_KEY#
				AND FLT_DATE = to_date(#FLT_DATE#,'DDMONYY')
				AND AWB_NO =#AWB_NO#
				AND AWB_DATE = to_date(#AWB_DATE#,'DDMONYY')
				AND UNLDG_PT = #UNLDG_PT#
	</select>	
	<select id="sqlPkgPmanGetExpPmanUlDAwbPcs" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
			SELECT NVL(UPD_PMAN_PCS,0) UPD_PMAN_PCS,NVL(UPD_PMAN_WT,0) UPD_PMAN_WT FROM EXP_PMANIFEST_ULD_AWB WHERE flt_key = #FLT_KEY#
            and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
            and    uld_bt_no = #ULD_KEY#
            and    unldg_pt = #UNLDG_PT#
            and    awb_no = #AWB_NO#
            and    awb_date = TO_DATE(#AWB_DATE#,'DDMONYY') 
	</select>
	<select id="sqlBiuAWBTrgAwbPcs" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select NVL(pcs,0) PCS,NVL(wt,0) WT,NVL(non_pman_pcs,0) NON_PMAN_PCS,NVL(non_pman_wt,0) NON_PMAN_WT from AWB
		where  awb_no = #AWB_NO#
		and    awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')	
	</select>
	<delete id="sqlbefuDelExpChkOutHd" parameterClass="java.util.HashMap">	  
		delete from exp_chkout_hd where not exists (select null from exp_chkout_dtl where flt_key=#FLT_KEY# and flt_date=TO_DATE(#FLT_DATE#,'DDMONYY')) 
		and flt_key=#FLT_KEY# and flt_date=TO_DATE(#FLT_DATE#,'DDMONYY')  
	</delete>  
	
	<!--  TRG_BILL_ADJ_DTL_INS :: RANJITH :: 30MAR2012 -->
	
	<select id="sqlGetAdjItmDetails" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	 SELECT CHRG_TR_NO V_CHRG_TR_NO , ITM_CODE V_ITM_CODE, ITM_CODE_SFX V_ITM_CODE_SFX
  			 FROM BILL_INV_DTL
  			 WHERE INV_NO    = #NEW_INV_NO#
  			 AND   DOC_LINE_NO= #NEW_IDOC_LINE_NO#
	</select>
	
	<update id="sqlUpdateAdjInvDetail" parameterClass="java.util.HashMap">	  
		UPDATE BILL_INV_DTL
  		SET ACC_ADJ_AMT  = (NVL(ACC_ADJ_AMT, 0)) + NVL(#NEW_ADJ_AMT#, 0),
      		LM_USER_ID = #NEW_LM_USER_ID# ,
      		LM_DATE  = SYSDATE
  		WHERE INV_NO  = #NEW_INV_NO#
  		AND   DOC_LINE_NO = #NEW_IDOC_LINE_NO#
  	</update>
	
	<update id="sqlUpdateAdjChargeDetails" parameterClass="java.util.HashMap">	  
	UPDATE BILL_CHARGE_DTL
 	SET ADJ_AMT = (NVL(ADJ_AMT, 0)) + NVL(#NEW_ADJ_AMT#, 0),
        NET_AMT = NVL(NET_AMT,0) + NVL(#NEW_ADJ_AMT#, 0),
        LM_USER_ID = #NEW_LM_USER_ID#,
        LM_DATE = SYSDATE
 	WHERE TR_NO  = #V_CHRG_TR_NO# AND
     	ITM_CODE = #V_ITM_CODE# AND
     	NVL(ITM_CODE_SFX,'**') = NVL(#V_ITM_CODE_SFX#,'**')
	</update>
	
	<!--  TRG_BILL_ADJ_DTL_INS :: RANJITH :: 30MAR2012 -->
	
	<!--  UAT Bug :: -->
		 
	
	<select id="PkgPmanReturnCgoCreated" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
	 SELECT COUNT(1) FROM 
		EXP_RTN_HD RTN_HD JOIN EXP_RTN_RCL  RTN_RCL ON RTN_HD.RTN_NO = RTN_RCL.RTN_NO
		WHERE RTN_HD.ULD_KEY = #ULD_KEY# AND NVL(RTN_HD.DEL_YN,'N') = 'N' AND RTN_RCL.RCL_NO = (SELECT MAX(HD.RCL_NO) 
      																FROM EXP_RCL_HD HD JOIN EXP_RCL_DTL DTL  ON HD.RCL_NO  = DTL.RCL_NO 
      																WHERE (HD.ULD_KEY = #ULD_KEY# OR DTL.ULD_KEY = #ULD_KEY#)) 
	</select>
	<!--  UAT Bug :: -->
	<select id="checkFHLforAWBExists" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		select count(1) from edi_fhl where awb_no=#AWB_NO# and awb_date=#AWB_DATE#
	</select>
	<update id="sqlUpdateAwbBldUpPcwt" parameterClass="java.util.HashMap">
		UPDATE AWB SET  BLDUP_BULK_PCS = nvl(BLDUP_BULK_PCS,0)-NVL(#undoPcs#, 0),
			       BLDUP_BULK_WT = nvl(BLDUP_BULK_WT,0)-NVL(#undoWt#, 0) 
		WHERE AWB_NO=#awbNo# AND AWB_DATE=TO_DATE(#awbDate#,'DDMONYY')		   
	</update> 
	<select id="sqlDRCGetRCLRtnDtl" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">		            
      select NVL(RCL_RTN_PC,0) RCL_RTN_PC,NVL(RCL_RTN_WT,0) RCL_RTN_WT
        from exp_rtn_rcl where rtn_no = #RTN_NO# and rcl_no=#RCL_NO#            
    </select>
    <select id="sqlGetMaxDocLineNoExpMnfstULD" parameterClass="java.lang.String" resultClass="java.lang.Integer">		
    	SELECT MAX(DOC_LINE_NO) FROM EXP_MANIFEST_ULD WHERE TR_NO=#PARAM#
    </select>
    
    <select id="fetchAcftRegNoFrmFltOpr" parameterClass="java.util.HashMap" resultClass="java.lang.String">
    	SELECT ACFT_REG_NO FROM FLT_OPR WHERE FLT_KEY=#fltKey# AND SCH_DATE=TO_DATE(#fltDate#, 'DDMONYY') AND ORIG='HKG'
    </select>
    
    <select id="fetchAcftRegNoFrmHactlFFM" parameterClass="java.util.HashMap" resultClass="java.lang.String">
    	SELECT ACFT_REG_NO FROM TRN_FFM_OUT_MSG WHERE FLT_KEY=#fltKey# AND FLT_DATE=TO_DATE(#fltDate#, 'DDMONYY') AND BRD_POINT='HKG' AND FFM_STATUS='P'
    </select>
	<update id="sqlUpdateAwbInvDelOffldULDData" parameterClass="java.util.HashMap">
	      		update awb_inventory inv
	            set inv.locn_pcs = inv.locn_pcs - #OFFLOAD_PCS#,
	                inv.locn_wt = inv.locn_wt - #OFFLOAD_WT#
		        where  inv.awb_no = #AWB_NO#
		        and    awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')				
		        and    inv.uld_key = #ULD_KEY#
		        and    exists (select null
						       from   awb
						       where  awb_no = inv.awb_no
						       and    awb_date = inv.awb_date)  
	     </update> 
		 <select id="sqlGetDataOfAwbInvDelOffldULDData" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	     		SELECT inv.locn_pcs, inv.seq_no
	     		FROM  awb_inventory inv
	     		JOIN AWB awb ON UPPER(awb.AWB_NO) = UPPER(inv.AWB_NO) 
				AND UPPER (awb.awb_date) = UPPER (inv.awb_date)				 
	     		where  inv.awb_no = #AWB_NO#
		        and    inv.awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')					
		        and    inv.uld_key = #ULD_KEY#
		        and    inv.locn_pcs = 0
		  </select>
    
	<!-- Start of TRI_EDI_FHL_HAWB_INS_DEL Queries -->
		  <delete id="sqlDeleteMastHawb" parameterClass="java.util.Map">
		  	<![CDATA[
		  	 	DELETE MAST_HAWB A
     		 	WHERE A.AWB_NO = #AWB_NO#
       		 	AND A.AWB_DATE = #AWB_DATE#
       		 	AND A.HAWB_NO = #HAWB_NO#
       		 ]]>
		  </delete>
		  <select id="sqlGetMastHawbCount" parameterClass="java.util.Map" 
		  		resultClass="java.lang.Integer">
		  	<![CDATA[
		  		SELECT COUNT(1)
      			FROM MAST_HAWB A
     			WHERE A.AWB_NO = #AWB_NO#
       			AND A.AWB_DATE = #AWB_DATE#
       		]]>	
		  </select>
		  <select id="sqlGetCstHawbInfo" parameterClass="java.util.Map" 
		  		resultClass="java.util.HashMap">
		  	<![CDATA[
			  	SELECT NVL(ACCS_IND, 'N') AS ACCS_IND, TR_NO AS CST_TR_NO,FLT_KEY AS FLT_KEY,TO_CHAR(FLT_DATE,'DDMONYY') AS FLT_DATE,TO_CHAR(AWB_DATE,'DDMONYY') AS CST_AWB_DATE, AWB_NO, HAWB_NO AS CST_HAWB_NO       
	        	FROM CST_HAWB
	       		WHERE AWB_NO = #AWB_NO#      	
	         	AND HAWB_NO = #HAWB_NO#
	         	AND AWB_DATE = #AWB_DATE#
	         	AND CHANGE_IND NOT IN ('D')
         	]]>
		  </select>
		  <update id="sqlUpdateCstHawbChangeInd" parameterClass="java.util.Map">
		  	<![CDATA[
		  		UPDATE CST_HAWB
            	SET CHANGE_IND = 'D', LM_DATE = SYSDATE, LM_USER_ID = #LM_USER_ID#,
                LM_VER = NVL(LM_VER, 0) + 1
           		WHERE AWB_NO = #AWB_NO#
           		AND AWB_DATE = #CST_AWB_DATE# 
           		AND HAWB_NO = #HAWB_NO#
		  	]]>		  	
		  </update>
		  <delete id="sqlDeleteCstHawb" parameterClass="java.util.Map">
		  	<![CDATA[
		  		DELETE FROM CST_HAWB 
		  		WHERE AWB_NO = #AWB_NO# 
		  		AND AWB_DATE = #CST_AWB_DATE#
		  		AND HAWB_NO = #HAWB_NO#
		  	]]>	
		  </delete>
		  <update id="sqlUpdateMastHawb" parameterClass="java.util.Map">
		  	<![CDATA[
		  		UPDATE MAST_HAWB 
		  		SET HAWB_ORG = #HAWB_ORG#,
		   			HAWB_DES = #HAWB_DEST#,
					HAWB_PCS = #HAWB_PCS#,
					HAWB_WT = #HAWB_NET_WT#
				WHERE AWB_NO = #AWB_NO#
				AND AWB_DATE = #AWB_DATE#
				AND HAWB_NO = #HAWB_NO#
		  	]]>
		  </update>
		  <insert id="sqlInsertMastHawb" parameterClass="java.util.HashMap">
		  	<![CDATA[
		  		INSERT INTO MAST_HAWB
		      		(AWB_NO, AWB_DATE, HAWB_NO, HAWB_ORG, HAWB_DES, HAWB_PCS,
		      		HAWB_WT)
	    		VALUES
	      			(#AWB_NO#, #AWB_DATE#, #HAWB_NO#, #HAWB_ORG#,
	       			#HAWB_DEST#, #HAWB_PCS#, #HAWB_NET_WT#)
		  	]]>
		  </insert>
		  <update id="sqlUpdateCstHawb" parameterClass="java.util.Map">
		  	<![CDATA[
		  		 UPDATE CST_HAWB
		         SET ORG = #HAWB_ORG#, DES = #HAWB_DEST#, PCS = #HAWB_PCS#,
		             WGT = #HAWB_NET_WT#, SHPR_NAME = #SHPR_NAME#,
		             SHPR_ADDR = #SHPR_ADD1#, SHPR_ADDR2 = #SHPR_ADD2#,
		             SHPR_ADDR3 = #SHPR_ADD3#, SHPR_ADDR4 = #SHPR_ADD4#,
		             CSGNE_NAME = #CSGNE_NAME#, CSGNE_ADDR = #CSGNE_ADD1#,
		             CSGNE_ADDR2 = #CSGNE_ADD2#, CSGNE_ADDR3 = #CSGNE_ADD3#,
		             CSGNE_ADDR4 = #CSGNE_ADD4#,
		             CVD_ISO_CURR_CODE = DECODE(DECODE(#DECLN_CTM#, 'NCV', 'NCV', NULL, 'NCV'), NULL, NULL, #DECLN_CURR_CODE#),
		             CVD_CHG_CUST_VAL = DECODE(#DECLN_CTM#, 'NCV', NULL, NULL, NULL), CVD_CHG_CUST_IND = DECODE(#DECLN_CTM#, 'NCV', 'NCV', NULL, 'NCV'),
		             CONTENT = #MANIFEST_DESC#, SPH_SPL_CODE1 = #SPL_CODE1#,
		             SPH_SPL_CODE2 = #SPL_CODE2#, SPH_SPL_CODE3 = #SPL_CODE3#,
		             SPH_SPL_CODE4 = #SPL_CODE4#, SPH_SPL_CODE5 = #SPL_CODE5#,
		             SPH_SPL_CODE6 = #SPL_CODE6#, SPH_SPL_CODE7 = #SPL_CODE7#,
		             SPH_SPL_CODE8 = #SPL_CODE8#, SPH_SPL_CODE9 = #SPL_CODE9#, CHANGE_IND = #V_CHANGE_IND#, 
		             LM_USER_ID = #LM_USER_ID#, LM_DATE = SYSDATE,
		          CSGNE_PLACE                   = #CSGNE_PLACE#,  
				  CSGNE_CTRY_CODE               = #CSGNE_CTRY_CODE#,   
			      CSGNE_STATE_PROVINCE          = #CSGNE_STATE_PROVINCE#,   
				  CSGNE_PIN_CODE                = #CSGNE_PIN_CODE#,
				  SHPR_PLACE                    = #SHPR_PLACE#,  
				  SHPR_CTRY_CODE                = #SHPR_CTRY_CODE#,   
				  SHPR_STATE_PROVINCE           = #SHPR_STATE_PROVINCE#,   
				  SHPR_PIN_CODE         = #SHPR_PIN_CODE#,
				  NOTIFY_NAME = #NOTIFY_NAME#, 
					NOTIFY_ADDR = #NOTIFY_ADDR#, 
					NOTIFY_ADDR2 = #NOTIFY_ADDR2#, 
					NOTIFY_ADDR3 = #NOTIFY_ADDR3#,
					NOTIFY_ADDR4 = #NOTIFY_ADDR4#,
					NOTIFY_ADDR5 = #NOTIFY_ADDR5#, 
					SHPR_ADDR5 = #SHPR_ADD5#,
					CSGNE_ADDR5 = #CSGNE_ADD5#,
					NOTIFY_PLACE = #NOTIFY_PLACE#, 
					NOTIFY_CTRY_CODE = #NOTIFY_CTRY_CODE#, 
					NOTIFY_STATE_PROVINCE = #NOTIFY_STATE_PROVINCE#, 
					NOTIFY_PIN_CODE = #NOTIFY_PIN_CODE#
		       WHERE AWB_NO = #AWB_NO# AND AWB_DATE = #CST_AWB_DATE# AND HAWB_NO = #HAWB_NO#
		       AND CHANGE_IND NOT IN ('D')
		  	]]>
		  </update>
		 <insert id="sqlInsertCstHawb" parameterClass="java.util.HashMap">		  	
		  	<![CDATA[
		  		INSERT INTO CST_HAWB
		          (TR_NO, AWB_NO, AWB_DATE, HAWB_NO, ORG, DES, PCS, WGT, MAN_PCS,
		           MAN_WGT, WGT_UNIT, SHPR_NAME, SHPR_ADDR, SHPR_ADDR2, SHPR_ADDR3,
		           SHPR_ADDR4,SHPR_ADDR5, CSGNE_NAME, CSGNE_ADDR, CSGNE_ADDR2, CSGNE_ADDR3,
		           CSGNE_ADDR4,CSGNE_ADDR5, CVD_ISO_CURR_CODE, CVD_CHG_CUST_VAL, CVD_CHG_CUST_IND,
		           CONTENT, SPH_SPL_CODE1, SPH_SPL_CODE2, SPH_SPL_CODE3, SPH_SPL_CODE4,
		           SPH_SPL_CODE5, SPH_SPL_CODE6, SPH_SPL_CODE7, SPH_SPL_CODE8,SPH_SPL_CODE9,
		           CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE, LM_VER,
		          CSGNE_PLACE                   ,   
				  CSGNE_CTRY_CODE               ,    
			      CSGNE_STATE_PROVINCE          ,    
				  CSGNE_PIN_CODE                , 
				  SHPR_PLACE                    ,   
				  SHPR_CTRY_CODE                ,    
				  SHPR_STATE_PROVINCE           ,    
				  SHPR_PIN_CODE             ,
				  NOTIFY_NAME, NOTIFY_ADDR, NOTIFY_ADDR2, NOTIFY_ADDR3, NOTIFY_ADDR4, NOTIFY_ADDR5, NOTIFY_PLACE, NOTIFY_CTRY_CODE, NOTIFY_STATE_PROVINCE, NOTIFY_PIN_CODE    )
		        VALUES
		          (CST_HAWB_SEQ.NEXTVAL, #AWB_NO#, #AWB_DATE#, #HAWB_NO#,
		           #HAWB_ORG#, #HAWB_DEST#, #HAWB_PCS#, #HAWB_NET_WT#, 0,
		           0, 'K', #SHPR_NAME#, #SHPR_ADD1#, #SHPR_ADD2#,
		           #SHPR_ADD3#, #SHPR_ADD4#, #SHPR_ADD5#, #CSGNE_NAME#, #CSGNE_ADD1#,
		           #CSGNE_ADD2#, #CSGNE_ADD3#, #CSGNE_ADD4#,#CSGNE_ADD5#,
		           DECODE(DECODE(#DECLN_CTM#, 'NCV', 'NCV', NULL, 'NCV'), NULL, NULL, #DECLN_CURR_CODE#), 
		           DECODE(#DECLN_CTM#, 'NCV', NULL, NULL, NULL),
		           DECODE(#DECLN_CTM#, 'NCV', 'NCV', NULL, 'NCV'), #MANIFEST_DESC#, #SPL_CODE1#, #SPL_CODE2#,
		           #SPL_CODE3#, #SPL_CODE4#, #SPL_CODE5#, #SPL_CODE6#,
		           #SPL_CODE7#, #SPL_CODE8#,#SPL_CODE9#, #LM_USER_ID#, SYSDATE, #LM_USER_ID#, SYSDATE, 1,
				   #CSGNE_PLACE#,    
				   #CSGNE_CTRY_CODE#,    
				   #CSGNE_STATE_PROVINCE#, 
				   #CSGNE_PIN_CODE#,   
				   #SHPR_PLACE#,    
				   #SHPR_CTRY_CODE#,    
				   #SHPR_STATE_PROVINCE#,
				   #SHPR_PIN_CODE#,
				   #NOTIFY_NAME#, #NOTIFY_ADDR#, #NOTIFY_ADDR2#, #NOTIFY_ADDR3#,#NOTIFY_ADDR4#,#NOTIFY_ADDR5#, #NOTIFY_PLACE#, #NOTIFY_CTRY_CODE#, #NOTIFY_STATE_PROVINCE#, #NOTIFY_PIN_CODE#)
		  	]]>
		  </insert>
		  <select id="sqlGetCCNDCount" parameterClass="java.util.Map"
		  		resultClass="java.lang.Integer">
		  	<![CDATA[
		  		SELECT COUNT(1) 
        		FROM V_CST_CC_CODE_AWB CC
        		WHERE CC.FLT_KEY = #FLT_KEY# AND CC.FLT_DATE = TO_DATE(#FLT_DATE#,'DDMONYY')
        		AND CC.AWB_NO = #AWB_NO# AND CC.CC_CODE = 'ND'
        	]]>
		  </select>
		  <select id="sqlCallFunCheckMan" parameterClass="java.util.Map"
		  		resultClass="java.lang.String">
		  	<![CDATA[	
		  		SELECT FUN_CHECK_MAN(#FLT_TYPE#, #FLT_KEY#, #FLT_DATE#, 'INT') FROM DUAL
		  	]]>
		  </select>
		  <!-- End of TRI_EDI_FHL_HAWB_INS_DEL Queries -->

	<select id="getTrkFlightTripList"  parameterClass="cargo.cms.external.chinaDT.bo.CBXAgentPortalBO" resultClass="cargo.cms.external.chinaDT.bo.CBXAgentPortalBO">	  
		 SELECT 
	      trip AS tripID,
	      vehicle_no AS vehicleNo,
		  TO_CHAR(ARR_DATE,'DDMONYY')  AS arrDate,
		  LPAD(ARR_HR,2,0)             AS arrDateHr,
		  LPAD(ARR_MIN,2,0)            AS arrDateMin,
	      DECODE(ARR_DATE,'','N','Y')  AS arrDateInd,
	      TRK_FLT_KEY AS trkFlightNum,
     	   to_char(TRK_FLT_DATE,'DDMONYY') AS trkFlightDate
		FROM cdt_pman_trip_summary 
		WHERE trk_flt_key = #trkFlightNum#
		AND trk_flt_date  = to_date(#trkFlightDate#,'DDMONYY') 
	</select>
	
		  
	<select id="getCBXTrkFlightBreakDownList" parameterClass="cargo.cms.external.chinaDT.bo.CBXAgentPortalBO"
		resultClass="cargo.cms.external.chinaDT.bo.CBXAgentPortalBO">
		<![CDATA[
			WITH ROUTE AS (
			  SELECT UNLDG_PT1 ORIGIN, UNLDG_PT2 DEST, 1 ROUTE_SEQ
			  FROM ITM_TRK_FLT
			  WHERE TRUCK_FLT_NO = #trkFlightNum# AND TRUCK_FLT_DATE = TO_DATE(#trkFlightDate#, 'DDMONYY')
			  UNION 
			  SELECT ORIGIN, DEST, ROWNUM + 1 ROUTE_SEQ 
			  FROM (
			    SELECT ORIGIN, DEST
			    FROM ITM_TRK_FLT_LEG
			    WHERE TRUCK_FLT_NO = #trkFlightNum# AND TRUCK_FLT_DATE = TO_DATE(#trkFlightDate#, 'DDMONYY')
			    ORDER BY LEG_NO
			  )
			)
		 SELECT pman.awb_no AS awbNumber,
			  SUBSTR(pman.awb_no, 0, 3) ||'-' || SUBSTR(pman.awb_no, 4, 8) AS awbDisplay,
		  TO_CHAR(pman.awb_date,'DDMONYY') AS awbDate,
			  UAWB.awb_origin                  AS orig,
			  UAWB.awb_dest                    AS dest,
			  UAWB.awb_type                    AS awbType,
			  UAWB.AWB_PCS                     AS awbPcs,
			  UAWB.AWB_WT                      AS awbWt,
			  TRIP.PMAN_PCS                    AS manfPcs,
			  TRIP.PMAN_WT                     AS manfWt,
			  UAWB.AWB_PCS - NVL(PMAN.BD_PCS, 0) AS osPcs,
			  UAWB.AWB_WT - NVL(PMAN.BD_WT, 0) AS osWt,
			  TRIP.PMAN_PCS - NVL(TRIP.BD_PCS, 0) AS osBDPcs,
			  TRIP.PMAN_WT - NVL(TRIP.BD_WT, 0) AS osBDWt,
			  NVL(TRIP.BD_PCS, 0)              AS oldBDPcs,
			  NVL(TRIP.BD_WT, 0)               AS oldBDWt,
			  TRIP.BD_PCS	                   AS bdPcs,
			  TRIP.BD_WT                       AS bdWt,
			  TRIP.DAM_PCS                     AS damPcs,
			  TRIP.DAM_WT                      AS damWt,
			  TRIP.DAM_REMARKS                 AS damRemarks,
			  TRIP.DAM_REMARKS                 AS oldDamRemarks,
			  TRIP.WH_REMARKS                  AS warehouseRemarks,
			  TRIP.WH_REMARKS                  AS oldWarehouseRemarks,
		  uawb.CSGNE_NAME                  AS consignee,
			  SUMM.VEHICLE_NO as vehicleNo, SUMM.TRIP tripID,
			  SUMM.TRK_FLT_KEY trkFlightNum, TO_CHAR(SUMM.TRK_FLT_DATE, 'DDMONYY') trkFlightDate, (
				SELECT AWB_IMAGE_NAME 
				FROM AWB_IMAGE 
				WHERE SEQ_NO = (
			  		SELECT MAX(SEQ_NO) FROM AWB_IMAGE 
			  		WHERE AWB_NO = PMAN.AWB_NO AND AWB_DATE = PMAN.AWB_DATE
			  	)
			  ) transactionId,
			PMAN.UNLDG_PT unladingPnt,
			DECODE(PMAN.UNLDG_PT, #unladingPnt#, 'Y', 'N') finalDestinationFlag,
			CASE
			  WHEN DECODE(PMAN.UNLDG_PT, #unladingPnt#, 'Y', 'N') = 'Y' THEN 'N'
			  WHEN (
			    SELECT ROUTE_SEQ FROM ROUTE WHERE DEST = #unladingPnt#
			  ) = (
			    SELECT MAX(ROUTE_SEQ) FROM ROUTE
			  ) THEN 'N'
			  ELSE 'Y'
			END transit
			FROM CDT_PMAN_AWB PMAN
			JOIN CDT_AWB UAWB 
			ON uawb.awb_no = pman.awb_no AND uawb.awb_date = pman.awb_date
			JOIN ITM_TRK_FLT TRK 
			ON trk.TRUCK_FLT_NO  = pman.TRK_FLT_KEY	AND trk.TRUCK_FLT_DATE = pman.TRK_FLT_DATE
			JOIN CDT_PMAN_AWB_TRIP TRIP
			ON TRIP.TRK_FLT_KEY = PMAN.TRK_FLT_KEY AND TRIP.TRK_FLT_DATE = PMAN.TRK_FLT_DATE AND TRIP.AWB_NO = PMAN.AWB_NO AND TRIP.AWB_DATE = PMAN.AWB_DATE
			JOIN CDT_PMAN_TRIP_SUMMARY SUMM
			ON SUMM.TRK_FLT_KEY = TRIP.TRK_FLT_KEY AND SUMM.TRK_FLT_DATE = TRIP.TRK_FLT_DATE AND TRIP.TRIP = SUMM.TRIP AND NVL(SUMM.POSTED_YN, 'N') = 'Y'
			WHERE TRK.TRUCK_FLT_NO = #trkFlightNum# AND TRK.TRUCK_FLT_DATE = TO_DATE(#trkFlightDate#, 'DDMONYY')
			AND #unladingPnt# IN (
				SELECT DEST FROM ROUTE
			)
		]]>
		<isNotEmpty property="tripID">
			AND SUMM.TRIP = #tripID#
		</isNotEmpty>
		<isNotEmpty property="vehicleNo">
			AND SUMM.VEHICLE_NO = #vehicleNo#
		</isNotEmpty>
	</select>
	
	
         <select id="getAWBListForTrip"  parameterClass="cargo.cms.external.chinaDT.bo.CBXAgentPortalBO" resultClass="cargo.cms.external.chinaDT.bo.CBXAgentPortalBO">	  
		 SELECT trip.awb_no                 AS awbNumber,
			  TO_CHAR(trip.awb_date,'DDMONYY') AS awbDate,
			  uawb.awb_origin                  AS orig,
			  trip.pman_pcs                    AS awbPcs,
			  trip.pman_wt                     AS awbWt
			FROM cdt_pman_awb_trip trip
			JOIN cdt_awb uawb ON uawb.awb_no    = trip.awb_no AND uawb.awb_date = trip.awb_date
			WHERE (trip.tr_no IN  (SELECT DISTINCT tr_no FROM cdt_pman_hawb_trip WHERE trip = #tripID#) OR trip.trip = #tripID#)
			AND trip.trk_flt_key  = #trkFlightNum#
			AND trip.trk_flt_date = to_date(#trkFlightDate#,'DDMONYY') 
	</select>
	
	
	<update id="updateBreakDownInformation" parameterClass="cargo.cms.external.chinaDT.bo.CBXAgentPortalBO">
		UPDATE CDT_PMAN_AWB
			SET
			  dam_pcs         = #damPcs#,
			  dam_wt          = #damWt#,
			  DAM_REMARKS     = #damRemarks#,
			  WH_REMARKS     = #warehouseRemarks#,
			  LM_USER_ID      = #userID#,
			  LM_DATE         = SYSDATE,
			  TR_TYPE		  = 'CDBRK'
			WHERE TRK_FLT_KEY = #trkFlightNum# AND trk_flt_date  = to_date(#trkFlightDate#,'DDMONYY') 
			and awb_no = #awbNumber# and awb_date = to_date(#awbDate#,'DDMONYY')
 	</update>
	<insert id="sqlUpdateAWBImage" parameterClass="cargo.cms.external.chinaDT.bo.CBXAgentPortalBO">
	<![CDATA[
 		INSERT INTO AWB_IMAGE(
 			SEQ_NO, AWB_IMAGE_NAME, AWB_NO, AWB_DATE
 		)              
	   	VALUES (
	   		AWB_IMAGE_SEQ.NEXTVAL, #transactionId#, #awbNumber#, TO_DATE(#awbDate#, 'DDMONYY')			  
	   	)
	]]>
	</insert>
 	<update id="sqlUpdateAWBImageUploadDate" parameterClass="java.lang.String" >
		<![CDATA[
			UPDATE FW_IMAGE_STORE SET IMG_UPLOAD_DATE = SYSDATE WHERE IMG_SESSION_ID = #PARAM# and IMG_UPLOAD_DATE IS NULL
		]]>
	</update>	
 	<update id="updateDeliveryInformation" parameterClass="cargo.cms.external.chinaDT.bo.CBXAgentPortalBO">
		UPDATE CDT_PMAN_AWB
			SET
			  DLV_PCS = NVL(DLV_PCS, 0) + NVL(#newDlvPcs#, 0), DLV_WT = NVL(DLV_WT, 0) + NVL(#newDlvWt#, 0),
			  AWD_TIME = TO_DATE(#docTime#, 'DDMONYY HH24:MI'), AWD_REMARKS = #docRemarks#,
			  NFD_TIME = TO_DATE(#nfdTime#, 'DDMONYY HH24:MI'), NFD_REMARKS = #nfdRemarks#,
			  CCD_TIME = TO_DATE(#ccTime#, 'DDMONYY HH24:MI'), DLV_TIME = TO_DATE(#dlvTime#, 'DDMONYY HH24:MI'),
			  LM_USER_ID = #userID#, LM_DATE = SYSDATE, TR_TYPE = 'CDDLV'
			WHERE TRK_FLT_KEY = #trkFlightNum# AND TRK_FLT_DATE = TO_DATE(#trkFlightDate#, 'DDMONYY')
				AND AWB_NO = #awbNumber# AND AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY')
 	</update>
 	
 	<update id="revertDeliveryInformation" parameterClass="cargo.cms.external.chinaDT.bo.CBXAgentPortalBO">
		UPDATE CDT_PMAN_AWB
			SET DLV_PCS       = '',
			  DLV_WT          = '',
			  dlv_remarks     = '',			 
			  LM_USER_ID      = #userID#,
			  LM_DATE         = SYSDATE,
			  TR_TYPE		  = 'CDREV'
			WHERE TRK_FLT_KEY = #trkFlightNum# AND trk_flt_date  = to_date(#trkFlightDate#,'DDMONYY')
			      AND awb_no        = #awbNumber# AND awb_date      = to_date(#awbDate#,'DDMONYY')
 	</update>
 	
 	
 	<update id="updateArrivalInformation" parameterClass="cargo.cms.external.chinaDT.bo.CBXAgentPortalBO">
 		UPDATE cdt_pman_trip_summary
			set
			ARR_DATE = #arrDate#,
			ARR_HR = #arrDateHr#,
			ARR_MIN = #arrDateMin#,
			LM_USER_ID = #userID#,
			LM_DATE = SYSDATE
		WHERE TRK_FLT_KEY = #trkFlightNum# AND TRK_FLT_DATE  = to_date(#trkFlightDate#,'DDMONYY') and TRIP = #tripID#
	</update>
	
	<select id="getCBXTrkFlightPost"  parameterClass="cargo.cms.external.chinaDT.bo.CBXAgentPortalBO" resultClass="java.lang.String">	
		SELECT count(1)	FROM itm_trk_flt WHERE truck_flt_no = #trkFlightNum# AND truck_flt_date  = to_date(#trkFlightDate#,'DDMONYY') and post_dt IS NULL  
	</select>
		
	<select id="getCBXAWBCloseCount"  parameterClass="cargo.cms.external.chinaDT.bo.CBXAgentPortalBO" resultClass="java.lang.String">
		select count(1) from awb where awb_closed_yn = 'N' and 
			(awb_no,awb_date) in (select awb_no,awb_date from cdt_pman_awb where TRK_FLT_KEY = #trkFlightNum# AND trk_flt_date  = to_date(#trkFlightDate#,'DDMONYY') )
	</select>


	<select id="validateTruck"  parameterClass="cargo.cms.external.chinaDT.bo.CBXAgentPortalBO" resultClass="java.lang.String">	  
		select count(*) from itm_trk_flt where truck_flt_no = #trkFlightNum# and truck_flt_date = to_date(#trkFlightDate#,'DDMONYY')
	</select>
	
	<select id="validateTruckFinalize"  parameterClass="cargo.cms.external.chinaDT.bo.CBXAgentPortalBO" resultClass="java.lang.String">
		select count(*) from itm_trk_flt where truck_flt_no = #trkFlightNum# and truck_flt_date = to_date(#trkFlightDate#,'DDMONYY') and NVL(CLOSE_YN,'N') = 'Y'
	</select>
	
	<select id="getCBXBreakDownCompleteSts"  parameterClass="cargo.cms.external.chinaDT.bo.CBXAgentPortalBO" resultClass="java.lang.String">
		select count(*) from awb_shp_sts where cod_fsu_sts = 'RCF' and tr_type = 'CBX' and flt_no = #trkFlightNum# and flt_date = to_date(#trkFlightDate#,'DDMONYY') 
		AND awb_no = #awbNumber#  AND awb_date = to_date(#awbDate#,'DDMONYY')
	</select>
	
	<update id="updateCBXAWBClose" parameterClass="cargo.cms.external.chinaDT.bo.CBXAgentPortalBO">
				UPDATE AWB
				SET AWB_CLOSED_YN = 'Y',
				  lm_user_id      = #userID#,
				  lm_date         = sysdate
				WHERE awb_no = #awbNumber# AND awb_date = TO_DATE(#awbDate#,'DDMONYY') AND AWB_CLOSED_YN = 'N'
				AND EXISTS
				  (SELECT NULL
				  FROM cdt_pman_awb
				  WHERE TRK_FLT_KEY = #trkFlightNum#
				  AND trk_flt_date  = to_date(#trkFlightDate#,'DDMONYY')
				  AND awb_no          = #awbNumber#
				  AND awb_date        = to_date(#awbDate#,'DDMONYY')
				  AND (NVL(dlv_pcs,0) = pman_pcs AND NVL(dlv_wt,0)   = pman_wt)
				  )
	</update>
	
	<update id="colseCBXTruckFlight" parameterClass="cargo.cms.external.chinaDT.bo.CBXAgentPortalBO">
 		UPDATE itm_trk_flt
		set
	    CLOSE_YN    = 'Y',
	    CLOSE_DATE   = SYSDATE,
	    CLOSE_USER_ID  = #userID#,
		LM_USER_ID = #userID#,
		LM_DATE = SYSDATE
		WHERE truck_flt_no = #trkFlightNum# AND truck_flt_date  = to_date(#trkFlightDate#,'DDMONYY')
	</update>
	
	<update id="updateCBXAWBUNClose" parameterClass="cargo.cms.external.chinaDT.bo.CBXAgentPortalBO">
				UPDATE AWB
				SET AWB_CLOSED_YN = 'N',
				  lm_user_id      = #userID#,
				  lm_date         = sysdate
				WHERE awb_no      = #awbNumber#
				AND awb_date      = TO_DATE(#awbDate#,'DDMONYY')
				AND AWB_CLOSED_YN = 'Y'				
	</update>
	
	<update id="unColseCBXTruckFlight" parameterClass="cargo.cms.external.chinaDT.bo.CBXAgentPortalBO">
 		UPDATE itm_trk_flt
		set
	    CLOSE_YN    = '',
	    CLOSE_DATE   = '',
	    CLOSE_USER_ID  = '',
		LM_USER_ID = #userID#,
		LM_DATE = SYSDATE
		WHERE truck_flt_no = #trkFlightNum# AND truck_flt_date  = to_date(#trkFlightDate#,'DDMONYY') and CLOSE_YN = 'Y'
	</update>
	
	
	<select id="getCBXTrkFlightDeliveryList"  parameterClass="cargo.cms.external.chinaDT.bo.CBXAgentPortalBO" resultClass="cargo.cms.external.chinaDT.bo.CBXAgentPortalBO">	  
		 SELECT pman.awb_no AS awbNumber,
			  SUBSTR(pman.awb_no,0,3) ||'-' ||SUBSTR(pman.awb_no,4,8)  AS awbDisplay,
			  TO_CHAR(pman.awb_date,'DDMONYY')      AS awbDate,
			  pman.pman_pcs                         AS awbPcs,
			  pman.pman_wt                          AS awbWt,
			  pman.BD_PCS                          AS bdPcs,
			  pman.BD_WT                           AS bdWt,
			  pman.DLV_PCS                          AS dlvPcs,
			  pman.DLV_WT                           AS dlvWt,
			  (pman.pman_pcs - NVL(pman.DLV_PCS,0)) AS osPcs,
			  (pman.pman_wt  - NVL(pman.DLV_wt,0))  AS osWt,
			  PMAN.AWD_REMARKS                      AS docRemarks,
			  PMAN.AWD_REMARKS                      AS oldDocRemarks,
			  pman.nfd_remarks                      AS nfdRemarks,
			  pman.nfd_remarks                      AS oldNfdRemarks ,
			  PMAN.DLV_REMARKS                      AS dlvRemarks,
			  PMAN.DLV_REMARKS                      AS oldDlvRemarks ,
			  TO_CHAR(AWD_TIME, 'DDMONYY') docDate, TO_CHAR(AWD_TIME, 'HH24') docHour, TO_CHAR(AWD_TIME, 'MI') docMinute,
			  TO_CHAR(NFD_TIME, 'DDMONYY') nfdDate, TO_CHAR(NFD_TIME, 'HH24') nfdHour, TO_CHAR(NFD_TIME, 'MI') nfdMinute,
			  TO_CHAR(CCD_TIME, 'DDMONYY') ccDate, TO_CHAR(CCD_TIME, 'HH24') ccHour, TO_CHAR(CCD_TIME, 'MI') ccMinute,
			  TO_CHAR(DLV_TIME, 'DDMONYY') dlvDate, TO_CHAR(DLV_TIME, 'HH24') dlvHour, TO_CHAR(DLV_TIME, 'MI') dlvMinute,
			  trk.TRUCK_FLT_NO as trkFlightNum, TO_CHAR(trk.TRUCK_FLT_DATE,'DDMONYY') as trkFlightDate,
			  NVL(PMAN.SEND_DOC, 'N') sendAWD, NVL(PMAN.SEND_NFD, 'N') sendNFD, NVL(PMAN.SEND_CC, 'N') sendCCD,
			  CASE WHEN ((PMAN.PMAN_PCS - NVL(PMAN.DLV_PCS, 0)) = 0 OR NVL(PMAN.SEND_DOC, 'N') = 'Y') THEN 'N' ELSE 'Y' END displayAWD,
			  CASE WHEN ((PMAN.PMAN_PCS - NVL(PMAN.DLV_PCS, 0)) = 0 OR NVL(PMAN.SEND_NFD, 'N') = 'Y') THEN 'N' ELSE 'Y' END displayNFD,
			  CASE WHEN ((PMAN.PMAN_PCS - NVL(PMAN.DLV_PCS, 0)) = 0 OR NVL(PMAN.SEND_CC, 'N') = 'Y') THEN 'N' ELSE 'Y' END displayCCD,
			  CASE WHEN (PMAN.PMAN_PCS - NVL(PMAN.DLV_PCS, 0)) = 0 THEN 'N' ELSE 'Y' END displayDLV
			FROM cdt_pman_awb pman
			JOIN itm_trk_flt trk 
			ON trk.TRUCK_FLT_NO = pman.TRK_FLT_KEY AND trk.TRUCK_FLT_DATE = pman.TRK_FLT_DATE
			WHERE pman.unldg_pt = #unladingPnt#
			<isNotEmpty property="trkFlightNum">
				AND pman.trk_flt_key = #trkFlightNum#
			</isNotEmpty>
			<isNotEmpty property="trkFlightDate">
				AND pman.trk_flt_date  = to_date(#trkFlightDate#,'DDMONYY')
			</isNotEmpty>
			<isNotEmpty property="awbNumber">
				AND pman.awb_no = #awbNumber#
			</isNotEmpty>
			AND (
				SELECT COUNT(1)
				FROM CDT_PMAN_AWB_TRIP TRIP
				JOIN CDT_PMAN_TRIP_SUMMARY SUMM
				ON TRIP.TRK_FLT_KEY = SUMM.TRK_FLT_KEY AND TRIP.TRK_FLT_DATE = SUMM.TRK_FLT_DATE AND SUMM.POSTED_YN = 'Y'
				WHERE TRIP.AWB_NO = PMAN.AWB_NO AND TRIP.AWB_DATE = PMAN.AWB_DATE
				AND TRIP.TRK_FLT_KEY = PMAN.TRK_FLT_KEY AND TRIP.TRK_FLT_DATE = PMAN.TRK_FLT_DATE
			) > 0
			order by pman.awb_no
	</select>

<parameterMap id="prcMapOffload" class="map" >
		<parameter property="v_carr" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="v_carr_grp" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="v_port" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="v_flt_key" jdbcType="VARCHAR" javaType="java.lang.String"	mode="IN"/>
		<parameter property="v_flt_date" jdbcType="VARCHAR" javaType="java.lang.String"	mode="IN"/>
		<parameter property="v_country" jdbcType="VARCHAR" javaType="java.lang.String"	mode="IN"/>
		<parameter property="v_from_date" jdbcType="VARCHAR" javaType="java.lang.String"	mode="IN"/>
		<parameter property="v_to_date" jdbcType="VARCHAR" javaType="java.lang.String"	mode="IN"/>
		<parameter property="v_flow_type" jdbcType="VARCHAR" javaType="java.lang.String"	mode="IN"/>
	    <parameter property="v_login_carr" jdbcType="VARCHAR" javaType="java.lang.String"	mode="IN"/>
	</parameterMap>
	
	<procedure id="updateOffloadDetails" parameterMap="prcMapOffload" >
		{call prc_offload_crg_dtls(?,?,?,?,?,?,?,?,?,?)}
	</procedure>
	
	<select id="fetchOffloadDetails"  parameterClass="cargo.cms.export.bo.FlightSearchBO"  resultClass="cargo.cms.export.report.bo.OffLoadRept_068BO">
        SELECT A.fltKey AS fltKey,
  A.schDate     AS schDate,
  TO_CHAR(B.act_date,'DDMONYY')     AS actDate,
  PKG_COMMON.GET_FLT_ATA(B.FLT_KEY,B.SCH_DATE,'D','DD')     AS actTime,
  A.awbNumber   AS awbNumber,
  A.fltType     AS fltType,
  A.dest        AS dest,
  A.unldgpt     AS portOfPMAN,
  A.agentname	AS issueAgent,
  A.uldKey      AS uldKey,
  c.flt_cls_yn  AS fltClsInd,
  A.blkWp       AS blkWp,
  A.blkWop      AS blkWop,
  A.bupWp       AS bupWp,
  A.bupWop      AS bupWop,
  A.tsNBKWp     AS tsNBKWp,
  A.tsNBKWop    AS tsNBKWop,
		  (Select PKG_CALCULATE.FUN_GET_SPECIAL_CARGO_TYPE(A.awbNumber,A.awbDate,B.SCH_DATE,B.CARR_CODE) FROM DUAL) as cargoType,
		  (select DECODE(spl_code1, NULL, '', spl_code1 || DECODE(spl_code2, NULL, '', ','))
			  || DECODE(spl_code2, NULL, '', spl_code2 || DECODE(spl_code3, NULL, '', ','))
			  || DECODE(spl_code3, NULL, '', spl_code3 || DECODE(spl_code4, NULL, '', ','))
			  || DECODE(spl_code4, NULL, '', spl_code4 || DECODE(spl_code5, NULL, '', ','))
			  || DECODE(spl_code5, NULL, '', spl_code5 || DECODE(spl_code6, NULL, '', ','))
			  || DECODE(spl_code6, NULL, '', spl_code6 || DECODE(spl_code7, NULL, '', ','))
			  || DECODE(spl_code7, NULL, '', spl_code7 || DECODE(spl_code8, NULL, '', ','))
			  || DECODE(spl_code8, NULL, '', spl_code8 || DECODE(spl_code9, NULL, '', ','))
			  || DECODE(spl_code9, NULL, '', spl_code9 ) FROM AWB where awb_no = A.awbNumber AND awb_date = A.awbDate) as splCode,	  
  A.inv         AS inv,
      (
  CASE
    WHEN (TO_DATE(TO_CHAR(B.ACT_DATE,'DDMONYY')
      ||trim(TO_CHAR(B.ACT_TIME,'0000')), 'DDMONYYHH24MI')) IS NULL
    THEN (
      CASE
        WHEN (TO_DATE(TO_CHAR(B.EST_DATE,'DDMONYY')
          ||trim(TO_CHAR(B.EST_TIME,'0000')), 'DDMONYYHH24MI')) IS NULL
        THEN (TO_DATE(TO_CHAR(B.SCH_DATE,'DDMONYY')
          ||trim(TO_CHAR(B.SCH_TIME,'0000')), 'DDMONYYHH24MI'))
        ELSE (TO_DATE(TO_CHAR(B.EST_DATE,'DDMONYY')
          ||trim(TO_CHAR(B.EST_TIME,'0000')), 'DDMONYYHH24MI'))
      END)
    ELSE (TO_DATE(TO_CHAR(B.ACT_DATE,'DDMONYY')
      ||trim(TO_CHAR(B.ACT_TIME,'0000')), 'DDMONYYHH24MI'))
  END) searchDate
FROM
  (SELECT flt_key               AS fltKey,
    TO_CHAR(flt_date,'DDMONYY') AS schDate,
    TO_CHAR(act_date,'DDMONYY') AS actDate,
    act_time                    AS actTime,
    awb_no                      AS awbNumber,
		    TO_CHAR(awb_date,'DDMONYY') AS awbDate,
    flow_type                   AS fltType,
    dest                        AS dest,
    uld                         AS uldKey,
    SUM(blk_wp)                 AS blkWp,
    SUM(blk_wop)                AS blkWop,
    SUM(bup_wp)                 AS bupWp,
    SUM(bup_wop)                AS bupWop,
    SUM(ts_nbk_wp)              AS tsNBKWp,
    SUM(ts_nbk_wop)             AS tsNBKWop,
    inv                         AS inv,
    UNLDG_PT                    AS unldgPt,
    AGENT_NAME                  AS agentName
		  FROM GT_OFFLOAD_CRG_DTLS crg
  GROUP BY flt_Key,
    flt_date,
    act_date,
    act_time,
    awb_no,
		    awb_Date,
    flow_type,
    dest,
    uld,
    blk_wp,
    blk_wop,
    bup_wp,
    bup_wop,
    ts_nbk_wp,
    ts_nbk_wop,
    inv,
    UNLDG_PT,
    AGENT_NAME
  ) A,
  FLT_OPR B,
  FLT_OPR_EVENTS C
WHERE B.FLT_KEY = A.fltKey
AND B.SCH_DATE  = A.schDate
AND b.flt_type  ='D'
AND C.FLT_KEY   = A.fltKey
AND C.SCH_DATE  = A.schDate
AND C.flt_type  ='D'
<isNotEmpty property="fltClsInd"> 
<isEqual property="fltClsInd" compareValue="N">	
AND C.flt_cls_yn='Y'
</isEqual>
</isNotEmpty>
ORDER BY searchDate DESC
   </select>      
	<select id="sqlGetCBXAWBTripData" parameterClass="cargo.cms.external.chinaDT.bo.CBXAgentPortalBO"
		resultClass="cargo.cms.external.chinaDT.bo.CBXAgentPortalBO">
		<![CDATA[
			SELECT
			TRIP.AWB_NO awbNumber, TO_CHAR(TRIP.AWB_DATE, 'DDMONYY') awbDate,
			TRIP.TRIP tripID, TRIP.UNLDG_PT unladingPnt, AWB.AWB_DEST dest,
			NVL(TRIP.PMAN_PCS, 0) awbPcs, NVL(TRIP.PMAN_WT, 0) awbWt
			FROM CDT_PMAN_AWB_TRIP TRIP
			JOIN CDT_AWB AWB
			ON TRIP.AWB_NO = TRIP.AWB_NO AND TRIP.AWB_DATE = AWB.AWB_DATE
			JOIN CDT_PMAN_TRIP_SUMMARY SUMM
			ON SUMM.TRK_FLT_KEY = TRIP.TRK_FLT_KEY AND SUMM.TRK_FLT_DATE = TRIP.TRK_FLT_DATE AND SUMM.TRIP = TRIP.TRIP
			WHERE TRIP.TRK_FLT_KEY = #trkFlightNum# AND TRIP.TRK_FLT_DATE = TO_DATE(#trkFlightDate#, 'DDMONYY')
			AND AWB_NO = #awbNumber# AND AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY') 
			AND SUMM.VEHICLE_NO = #vehicleNo#
		]]>
	</select>
<select id="sqlGetCBXTripSummaryData" parameterClass="cargo.cms.external.chinaDT.bo.CBXAgentPortalBO"
		resultClass="cargo.cms.external.chinaDT.bo.CBXAgentPortalBO">
		<![CDATA[
			SELECT
			TRK_FLT_KEY trkFlightNum, TO_CHAR(TRK_FLT_DATE, 'DDMONYY') trkFlightDate,
			VEHICLE_NO vehicleNo, TRIP tripID,
			TO_CHAR(SDTL.ARRIVAL_TIME, 'DDMONYY HH24:MI') arrivalTime,TO_CHAR(SDTL.ARRIVAL_TIME, 'DDMONYY HH24:MI') oldArrivalTime, TO_CHAR(SDTL.BREAKDOWN_TIME, 'DDMONYY HH24:MI') breakdownTime,TO_CHAR(SDTL.BREAKDOWN_TIME, 'DDMONYY HH24:MI') oldBreakdownTime,
			TO_CHAR(SDTL.ARRIVAL_TIME, 'DDMONYY') arrDate, TO_CHAR(SDTL.ARRIVAL_TIME, 'HH24') arrDateHr, TO_CHAR(SDTL.ARRIVAL_TIME, 'MI') arrDateMin, 
			TO_CHAR(SDTL.BREAKDOWN_TIME, 'DDMONYY') bdDate, TO_CHAR(SDTL.BREAKDOWN_TIME, 'HH24') bdHour, TO_CHAR(SDTL.BREAKDOWN_TIME, 'MI') bdMinute
			FROM CDT_PMAN_TRIP_SUMMARY SUMM
			LEFT OUTER JOIN CDT_PMAN_TRIP_SUMMARY_DTL SDTL
			ON SDTL.TR_NO = SUMM.TR_NO AND SDTL.UNLDG_PT = #unladingPnt#
			WHERE TRK_FLT_KEY = #trkFlightNum# AND TRK_FLT_DATE = TO_DATE(#trkFlightDate#, 'DDMONYY')
		]]>
		<isNotEmpty property="tripID">
			AND TRIP = #tripID#
		</isNotEmpty>
		<isNotEmpty property="vehicleNo"> 
			AND VEHICLE_NO = #vehicleNo#
		</isNotEmpty>
		<dynamic>
			AND ROWNUM = 1
		</dynamic>
	</select>
	<select id="sqlGetCBXAWBFSUData" parameterClass="cargo.cms.external.chinaDT.bo.CBXAgentPortalBO"
		resultClass="cargo.cms.external.chinaDT.bo.CBXAgentPortalBO">
		<![CDATA[
			SELECT
			TO_CHAR(AWD_TIME, 'DDMONYY HH24:MI') awdTime,
			TO_CHAR(NFD_TIME, 'DDMONYY HH24:MI') nfdTime,
			TO_CHAR(CCD_TIME, 'DDMONYY HH24:MI') ccdTime,
			TO_CHAR(DLV_TIME, 'DDMONYY HH24:MI') dlvTime,
			TO_CHAR(RCF_TIME, 'DDMONYY HH24:MI') rcfTime,
			NVL(SEND_DOC, 'N') sendAWD, NVL(SEND_NFD, 'N') sendNFD, NVL(SEND_CC, 'N') sendCCD,
			NVL(PMAN_PCS, 0) awbPcs, NVL(PMAN_WT, 0) awbWt,
			NVL(BD_PCS, 0) bdPcs, NVL(BD_WT, 0) bdWt,
			NVL(DLV_PCS, 0) dlvPcs, NVL(DLV_WT, 0) dlvWt
			FROM CDT_PMAN_AWB
			WHERE TRK_FLT_KEY = #trkFlightNum# AND TRK_FLT_DATE = TO_DATE(#trkFlightDate#, 'DDMONYY')
			AND AWB_NO = #awbNumber# AND AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY')
		]]>
	</select>
	<update id="sqlUpdateCBXRCF" parameterClass="cargo.cms.external.chinaDT.bo.CBXAgentPortalBO">
	 	<![CDATA[
			UPDATE CDT_PMAN_AWB
			SET
			  RCF_TIME = TO_DATE(#breakdownTime#, 'DDMONYY HH24:MI'),
			  LM_USER_ID = #userID#, LM_DATE = SYSDATE, TR_TYPE = 'CDRCF'
			WHERE TRK_FLT_KEY = #trkFlightNum# AND TRK_FLT_DATE = TO_DATE(#trkFlightDate#, 'DDMONYY')
			AND AWB_NO = #awbNumber# AND AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY')
		]]>
	</update>
	<update id="sqlUpdateCBXAWD" parameterClass="cargo.cms.external.chinaDT.bo.CBXAgentPortalBO">
	 	<![CDATA[
			UPDATE CDT_PMAN_AWB
			SET
			  AWD_TIME = TO_DATE(#docTime#, 'DDMONYY HH24:MI'), AWD_REMARKS = #docRemarks#,
			  LM_USER_ID = #userID#, LM_DATE = SYSDATE, TR_TYPE = 'CDAWD', SEND_DOC = 'Y'
			WHERE TRK_FLT_KEY = #trkFlightNum# AND TRK_FLT_DATE = TO_DATE(#trkFlightDate#, 'DDMONYY')
			AND AWB_NO = #awbNumber# AND AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY')
		]]>
	</update>
	<update id="sqlUpdateCBXNFD" parameterClass="cargo.cms.external.chinaDT.bo.CBXAgentPortalBO">
	 	<![CDATA[
			UPDATE CDT_PMAN_AWB
			SET
			  NFD_TIME = TO_DATE(#nfdTime#, 'DDMONYY HH24:MI'), NFD_REMARKS = #nfdRemarks#,
			  LM_USER_ID = #userID#, LM_DATE = SYSDATE, TR_TYPE = 'CDNFD', SEND_NFD = 'Y'
			WHERE TRK_FLT_KEY = #trkFlightNum# AND TRK_FLT_DATE = TO_DATE(#trkFlightDate#, 'DDMONYY')
				AND AWB_NO = #awbNumber# AND AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY')
		]]>
	</update>   
	<update id="sqlUpdateCBXCCD" parameterClass="cargo.cms.external.chinaDT.bo.CBXAgentPortalBO">
	 	<![CDATA[
			UPDATE CDT_PMAN_AWB
			SET
			  CCD_TIME = TO_DATE(#ccTime#, 'DDMONYY HH24:MI'),
			  LM_USER_ID = #userID#, LM_DATE = SYSDATE, TR_TYPE = 'CDCCD', SEND_CC = 'Y'
			WHERE TRK_FLT_KEY = #trkFlightNum# AND TRK_FLT_DATE = TO_DATE(#trkFlightDate#, 'DDMONYY')
				AND AWB_NO = #awbNumber# AND AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY')
		]]>
	</update>    
       <update id="sqlUpdateCBXDLV" parameterClass="cargo.cms.external.chinaDT.bo.CBXAgentPortalBO">
	 	<![CDATA[
			UPDATE CDT_PMAN_AWB
			SET
			  DLV_TIME = TO_DATE(#dlvTime#, 'DDMONYY HH24:MI'), DLV_REMARKS = #dlvRemarks#,
			  LM_USER_ID = #userID#, LM_DATE = SYSDATE, TR_TYPE = 'CDDLV'
			WHERE TRK_FLT_KEY = #trkFlightNum# AND TRK_FLT_DATE = TO_DATE(#trkFlightDate#, 'DDMONYY')
				AND AWB_NO = #awbNumber# AND AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY')
		]]>
	</update>
	<update id="sqlUpdateCBXDeliveryData" parameterClass="cargo.cms.external.chinaDT.bo.CBXAgentPortalBO">
	 	<![CDATA[
			UPDATE CDT_PMAN_AWB
			SET
			  AWD_TIME = TO_DATE(#docTime#, 'DDMONYY HH24:MI'), AWD_REMARKS = #docRemarks#,
			  NFD_TIME = TO_DATE(#nfdTime#, 'DDMONYY HH24:MI'), NFD_REMARKS = #nfdRemarks#,
			  CCD_TIME = TO_DATE(#ccTime#, 'DDMONYY HH24:MI'),
			  DLV_PCS = NVL(DLV_PCS, 0) + NVL(#newDlvPcs#, 0), DLV_WT = NVL(DLV_WT, 0) + NVL(#newDlvWt#, 0),
			  DLV_TIME = TO_DATE(#dlvTime#, 'DDMONYY HH24:MI'), DLV_REMARKS = #dlvRemarks#,
			  LM_USER_ID = #userID#, LM_DATE = SYSDATE, TR_TYPE = 'CDDLV'
			WHERE TRK_FLT_KEY = #trkFlightNum# AND TRK_FLT_DATE = TO_DATE(#trkFlightDate#, 'DDMONYY')
			AND AWB_NO = #awbNumber# AND AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY')
		]]>
	</update>
	<select id="sqlGetCBXIsSummaryDetailExists" parameterClass="cargo.cms.external.chinaDT.bo.CBXAgentPortalBO"
		resultClass="java.lang.String">
		<![CDATA[
			SELECT
			DECODE(COUNT(1), 0, 'N', 'Y')
			FROM CDT_PMAN_TRIP_SUMMARY_DTL
			WHERE TR_NO = (
				SELECT MAX(TR_NO) FROM CDT_PMAN_TRIP_SUMMARY
				WHERE TRK_FLT_KEY = #trkFlightNum# AND TRK_FLT_DATE = TO_DATE(#trkFlightDate#, 'DDMONYY') AND TRIP = #tripID#
			) AND UNLDG_PT = #unladingPnt#
		]]>
	</select>
	<insert id="sqlInsertCBXSummaryDetail" parameterClass="cargo.cms.external.chinaDT.bo.CBXAgentPortalBO">
	 	<![CDATA[
			INSERT INTO CDT_PMAN_TRIP_SUMMARY_DTL (
			  TR_NO, UNLDG_PT,
			  BREAKDOWN_TIME,  ARRIVAL_TIME,
			  CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE 
			) VALUES (
				( 
				SELECT MAX(TR_NO) FROM CDT_PMAN_TRIP_SUMMARY
				WHERE TRK_FLT_KEY = #trkFlightNum# AND TRK_FLT_DATE = TO_DATE(#trkFlightDate#, 'DDMONYY') AND TRIP = #tripID#
				), #unladingPnt#,
				NULL, NULL,
				#userID#, SYSDATE, #userID#, SYSDATE
			)
		]]>
	</insert>
	<select id="sqlGetCBXIsAWBTripDetailExists" parameterClass="cargo.cms.external.chinaDT.bo.CBXAgentPortalBO"
		resultClass="java.lang.String">
		<![CDATA[
			SELECT
			DECODE(COUNT(1), 0, 'N', 'Y')
			FROM CDT_PMAN_AWB_TRIP_DTL
			WHERE TR_NO = (
				SELECT MAX(TR_NO) FROM CDT_PMAN_AWB_TRIP
				WHERE TRK_FLT_KEY = #trkFlightNum# AND TRK_FLT_DATE = TO_DATE(#trkFlightDate#, 'DDMONYY') AND TRIP = #tripID#
				AND AWB_NO = #awbNumber# AND AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY')
			) AND TRANSIT_PT = #unladingPnt#
		]]>
	</select>
	<insert id="sqlInsertCBXAWBTripDetail" parameterClass="cargo.cms.external.chinaDT.bo.CBXAgentPortalBO">
	 	<![CDATA[
			INSERT INTO CDT_PMAN_AWB_TRIP_DTL (
			  TR_NO, TRANSIT_PT, TRANSIT_TIME,
			  CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE
			) VALUES (
				( 
					SELECT MAX(TR_NO) FROM CDT_PMAN_AWB_TRIP
					WHERE TRK_FLT_KEY = #trkFlightNum# AND TRK_FLT_DATE = TO_DATE(#trkFlightDate#, 'DDMONYY') AND TRIP = #tripID#
					AND AWB_NO = #awbNumber# AND AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY')
				), #unladingPnt#, NULL,
				#userID#, SYSDATE, #userID#, SYSDATE
			)
		]]>
	</insert>
		<update id="sqlUpdateCBXArrivalTime" parameterClass="cargo.cms.external.chinaDT.bo.CBXAgentPortalBO">
	 	<![CDATA[
			UPDATE CDT_PMAN_TRIP_SUMMARY_DTL
			SET
			  ARRIVAL_TIME = TO_DATE(#arrivalTime#, 'DDMONYY HH24:MI'),
			  LM_USER_ID = #userID#, LM_DATE = SYSDATE, TR_TYPE = 'CBXFSUA'
			WHERE TR_NO = (
				SELECT MAX(TR_NO)
				FROM CDT_PMAN_TRIP_SUMMARY
				WHERE TRK_FLT_KEY = #trkFlightNum# AND TRK_FLT_DATE = TO_DATE(#trkFlightDate#, 'DDMONYY') AND TRIP = #tripID#
			) AND UNLDG_PT = #unladingPnt#
		]]>
	</update>
	<update id="sqlUpdateCBXBreakdownTime" parameterClass="cargo.cms.external.chinaDT.bo.CBXAgentPortalBO">
	 	<![CDATA[
			UPDATE CDT_PMAN_TRIP_SUMMARY_DTL
			SET
			  BREAKDOWN_TIME = TO_DATE(#breakdownTime#, 'DDMONYY HH24:MI'),
			  LM_USER_ID = #userID#, LM_DATE = SYSDATE, TR_TYPE = 'CBXFSUB'
			WHERE TR_NO = (
				SELECT MAX(TR_NO)
				FROM CDT_PMAN_TRIP_SUMMARY
				WHERE TRK_FLT_KEY = #trkFlightNum# AND TRK_FLT_DATE = TO_DATE(#trkFlightDate#, 'DDMONYY') AND TRIP = #tripID#
			) AND UNLDG_PT = #unladingPnt#
		]]>
	</update>
<update id="sqlUpdateCBXFinalTripArrivalTime" parameterClass="cargo.cms.external.chinaDT.bo.CBXAgentPortalBO">
	 	<![CDATA[
			UPDATE CDT_PMAN_TRIP_SUMMARY
			SET
			  ARRIVAL_TIME = TO_DATE(#arrivalTime#, 'DDMONYY HH24:MI'),
			  LM_USER_ID = #userID#, LM_DATE = SYSDATE, TR_TYPE = 'CBXFSUA'
			WHERE TRK_FLT_KEY = #trkFlightNum# AND TRK_FLT_DATE = TO_DATE(#trkFlightDate#, 'DDMONYY') AND TRIP = #tripID#
		]]>
	</update>
	<update id="sqlUpdateCBXFinalTripBreakdownTime" parameterClass="cargo.cms.external.chinaDT.bo.CBXAgentPortalBO">
	 	<![CDATA[
			UPDATE CDT_PMAN_TRIP_SUMMARY
			SET
			  BREAKDOWN_TIME = TO_DATE(#breakdownTime#, 'DDMONYY HH24:MI'),
			  LM_USER_ID = #userID#, LM_DATE = SYSDATE, TR_TYPE = 'CBXFSUB'
			WHERE TRK_FLT_KEY = #trkFlightNum# AND TRK_FLT_DATE = TO_DATE(#trkFlightDate#, 'DDMONYY') AND TRIP = #tripID#
		]]>
	</update>
	<update id="sqlUpdateCBXAWBTransitTime" parameterClass="cargo.cms.external.chinaDT.bo.CBXAgentPortalBO">
	 	<![CDATA[
			UPDATE CDT_PMAN_AWB_TRIP_DTL
			SET
			  TRANSIT_TIME = TO_DATE(#arrivalTime#, 'DDMONYY HH24:MI'),
			  LM_USER_ID = #userID#, LM_DATE = SYSDATE, TR_TYPE = 'CBXTRAN'
			WHERE TR_NO = (
				SELECT MAX(TR_NO)
				FROM CDT_PMAN_AWB_TRIP
				WHERE TRK_FLT_KEY = #trkFlightNum# AND TRK_FLT_DATE = TO_DATE(#trkFlightDate#, 'DDMONYY') AND TRIP = #tripID#
				AND AWB_NO = #awbNumber# AND AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY')
			) AND TRANSIT_PT = #unladingPnt#
		]]>
	</update>
        <update id="sqlUpdateCBXTripBreakdownPcsWt" parameterClass="cargo.cms.external.chinaDT.bo.CBXAgentPortalBO">
	 	<![CDATA[
			UPDATE CDT_PMAN_AWB_TRIP
			SET
			  BD_PCS = #bdPcs#, BD_WT = #bdWt#, DAM_PCS = #damPcs#, DAM_WT = #damWt#,
			  WH_REMARKS = #warehouseRemarks#, DAM_REMARKS = #damRemarks#,
			  LM_USER_ID = #userID#, LM_DATE = SYSDATE, TR_TYPE = 'CDBRK'
			WHERE TRK_FLT_KEY = #trkFlightNum# AND TRK_FLT_DATE = TO_DATE(#trkFlightDate#, 'DDMONYY')
			AND AWB_NO = #awbNumber# AND AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY') AND TRIP = #tripID#
		]]>
	</update>
	<update id="sqlUpdateCBXAWBBreakdownPcsWt" parameterClass="cargo.cms.external.chinaDT.bo.CBXAgentPortalBO">
	 	<![CDATA[
			UPDATE CDT_PMAN_AWB AWB
			SET
			  BD_PCS = (
			  	SELECT SUM(NVL(BD_PCS, 0)) FROM CDT_PMAN_AWB_TRIP TRIP
			  	WHERE TRIP.TRK_FLT_KEY = AWB.TRK_FLT_KEY AND TRIP.TRK_FLT_DATE = AWB.TRK_FLT_DATE
			  	AND TRIP.AWB_NO = AWB.AWB_NO AND TRIP.AWB_DATE = AWB.AWB_DATE
			  ),
			  BD_WT = (
			  	SELECT SUM(NVL(BD_WT, 0)) FROM CDT_PMAN_AWB_TRIP TRIP
			  	WHERE TRIP.TRK_FLT_KEY = AWB.TRK_FLT_KEY AND TRIP.TRK_FLT_DATE = AWB.TRK_FLT_DATE
			  	AND TRIP.AWB_NO = AWB.AWB_NO AND TRIP.AWB_DATE = AWB.AWB_DATE
			  ),
			  DAM_PCS = (
			  	SELECT SUM(NVL(DAM_PCS, 0)) FROM CDT_PMAN_AWB_TRIP TRIP
			  	WHERE TRIP.TRK_FLT_KEY = AWB.TRK_FLT_KEY AND TRIP.TRK_FLT_DATE = AWB.TRK_FLT_DATE
			  	AND TRIP.AWB_NO = AWB.AWB_NO AND TRIP.AWB_DATE = AWB.AWB_DATE
			  ),
			  DAM_WT = (
			  	SELECT SUM(NVL(DAM_WT, 0)) FROM CDT_PMAN_AWB_TRIP TRIP
			  	WHERE TRIP.TRK_FLT_KEY = AWB.TRK_FLT_KEY AND TRIP.TRK_FLT_DATE = AWB.TRK_FLT_DATE
			  	AND TRIP.AWB_NO = AWB.AWB_NO AND TRIP.AWB_DATE = AWB.AWB_DATE
			  ),
			  DAM_REMARKS = (
			  	SELECT MAX(DAM_REMARKS) FROM CDT_PMAN_AWB_TRIP TRIP
			  	WHERE TRIP.TRK_FLT_KEY = AWB.TRK_FLT_KEY AND TRIP.TRK_FLT_DATE = AWB.TRK_FLT_DATE
			  	AND TRIP.AWB_NO = AWB.AWB_NO AND TRIP.AWB_DATE = AWB.AWB_DATE AND TRIP.TRIP = #tripID#
			  ),
			  LM_USER_ID = #userID#, LM_DATE = SYSDATE, TR_TYPE = 'CDBRK'
			WHERE TRK_FLT_KEY = #trkFlightNum# AND TRK_FLT_DATE = TO_DATE(#trkFlightDate#, 'DDMONYY')
			AND AWB_NO = #awbNumber# AND AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY')
		]]>
	</update>
	<insert id="insertOffloadHawbInventry" parameterClass="cargo.cms.export.buildup.bo.HawbNewOffLoadItemBO">
	     	 INSERT INTO HAWB_INVENTORY (SEQ_NO,HAWB_NO,STRG_PCS,STRG_WT,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE)
           VALUES (#awbSeqNo#,#hawbNo#,#offPcs#,#offWt#,#userID#,SYSDATE,#userID#,SYSDATE)
	</insert>
	
	<select id="hawInvListByAwb" parameterClass="java.util.HashMap" resultClass="cargo.cms.export.buildup.bo.HawbOffLoadItemBO">
	   SELECT distinct HI.SEQ_NO hawbSeqNo,HI.HAWB_NO hawbNo,HI.STRG_PCS buPcs,HI.STRG_WT buWt      
		FROM HAWB_INVENTORY HI JOIN AWB_INVENTORY AI ON AI.SEQ_NO=HI.SEQ_NO WHERE 
		AI.AWB_NO=#AWB_NO# AND AI.AWB_DATE=TO_DATE(#AWB_DATE#,'DDMONYY')
	</select>
	
	<insert id="insertPmanHawbInfo" parameterClass="cargo.cms.export.buildup.bo.HawbOffLoadItemBO">
		INSERT INTO 
		EXP_PMANIFEST_ULD_AWB_HAWB
		 (TR_NO, HAWB_NO, PC, WT, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE)
		VALUES (#hawbSeqNo#, #hawbNo#, #buPcs#, #buWt#, #userID#, SYSDATE, #userID#, SYSDATE)
	</insert>
	
	<select id="getAwbPmanTrNo" parameterClass="java.util.HashMap" resultClass="cargo.cms.export.buildup.bo.HawbOffLoadItemBO">
	   SELECT TR_NO AS trNo FROM EXP_PMANIFEST_ULD_AWB WHERE FLT_KEY=#FLT_KEY# AND FLT_DATE=to_date(#FLT_DATE#,'DDMONYY')
        AND AWB_NO=#AWB_NO# AND AWB_DATE=to_date(#AWB_DATE#,'DDMONYY')
	</select>
	
	<select id="getAwbSeqNo" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT SEQ_NO as seqNo FROM AWB_INVENTORY WHERE AWB_NO=#AWB_NO# AND AWB_DATE=to_date(#AWB_DATE#,'DDMONYY')
		 AND FLT_KEY=#FLT_KEY# AND FLT_DATE=to_date(#FLT_DATE#,'DDMONYY') AND ULD_KEY=#ULD_KEY#
 	</select>
 	
 	<update id="updateTarmacHawbInvData" parameterClass="cargo.cms.export.buildup.bo.HawbNewOffLoadItemBO" >
		UPDATE HAWB_INVENTORY SET STRG_PCS=nvl(STRG_PCS,0)-#buPcs#,STRG_WT=nvl(STRG_WT,0)-#buWt#,
		LM_USER_ID=#userID#,LM_DATE=SYSDATE WHERE SEQ_NO=#hawbSeqNo#	
	</update>
	
        <select id="getAwbInventorySeqNo" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT SEQ_NO seqNo FROM AWB_INVENTORY
		WHERE AWB_NO=#AWB_NO#
		AND AWB_DATE=to_date(#AWB_DATE#,'DDMONYY')
		<isNotEmpty property="LOC_CODE">
		    AND LOC_CODE=#LOC_CODE#
		</isNotEmpty>
		<isNotEmpty property="ULD_KEY">
		    AND ULD_KEY =#ULD_KEY#
		</isNotEmpty>
		<isNotEmpty property="LSP_NO">
		   AND lsp_no=#LSP_NO#
		</isNotEmpty>
		AND ROWNUM  =1

 	</select>

<select id="getTrkFlightScheduleTime"  parameterClass="cargo.cms.external.chinaDT.bo.CBXAgentPortalBO" resultClass="cargo.cms.common.ext.bo.MvtBO">	  
		SELECT to_char(sch_dep_date,'DDMONYY') as schDepDate,
		SUBSTR(LPAD( sch_time,4,0),0,2)  AS schDepTimeHr ,
		SUBSTR(LPAD(sch_time,4,0),3,2)  AS schDepTimeMin 
		FROM itm_trk_flt
		where truck_flt_no = #trkFlightNum# and truck_flt_date = #trkFlightDate#
	</select>

	<select id="checkNonColoadAllShcEndorse" parameterClass="cargo.cms.export.buildup.bo.NonColoadableSHCBO" resultClass="java.lang.String">
	<![CDATA[
	SELECT COUNT(1) FROM (
	SELECT NVL((SELECT COUNT(1) FROM MAST_NON_COLOAD_SHC WHERE CARR_CODE   =#carrier# AND ENDRSE_IND = 'Y'
	]]>
	<isNotEmpty property="unldgPt"> 
	and UNLDG_PT = #unldgPt# 
	</isNotEmpty>
	<![CDATA[
	AND NON_COLOAD_SCH='***' AND 
	((SCH  IN (B.SPL_CODE1,B.SPL_CODE2,B.SPL_CODE3,B.SPL_CODE4,B.SPL_CODE5,B.SPL_CODE6,B.SPL_CODE7,B.SPL_CODE8,B.SPL_CODE9))
	OR (SCH IN 
	]]>  
	<iterate property="sch" open="(" close=")" conjunction=",">
	  #sch[]#  
	  </iterate>
	 <![CDATA[)
	)
	),0) cnt
	FROM EXP_PMANIFEST_ULD_AWB A,
	  AWB B,FLT_OPR C
	WHERE 
	C.FLT_KEY = A.FLT_KEY
	AND C.SCH_DATE = A.FLT_DATE
	AND C.FLT_TYPE='D'
	AND B.AWB_NO = A.AWB_NO
	AND B.AWB_DATE = A.AWB_DATE
	AND A.FLT_KEY  =#fltKey#
	AND A.FLT_DATE =#fltDate#
	AND A.ULD_BT_NO=#uldKey#
	AND (SELECT COUNT(1) FROM EXP_PMANIFEST_ULD_AWB WHERE FLT_KEY=#fltKey# AND FLT_DATE=#fltDate# AND ULD_BT_NO=#uldKey#) > 1
	UNION
	SELECT NVL((SELECT COUNT(1) FROM MAST_NON_COLOAD_SHC MO WHERE MO.CARR_CODE   =#carrier# AND MO.ENDRSE_IND = 'Y'
	AND MO.NON_COLOAD_SCH='***' AND 
	((MO.SCH  IN (B.SPL_CODE1,B.SPL_CODE2,B.SPL_CODE3,B.SPL_CODE4,B.SPL_CODE5,B.SPL_CODE6,B.SPL_CODE7,B.SPL_CODE8,B.SPL_CODE9))
	OR (MO.SCH IN 
	]]>  
	<iterate property="sch" open="(" close=")" conjunction=",">
	  #sch[]#  
	  </iterate>
	 <![CDATA[)
	)
	AND MO.UNLDG_PT IS NULL 
	AND NOT EXISTS (SELECT NULL FROM MAST_NON_COLOAD_SHC MI WHERE MI.CARR_CODE=#carrier# AND MI.UNLDG_PT = #unldgPt#  AND MI.SCH = MO.SCH AND mi.non_coload_sch = mo.non_coload_sch)
	),0) cnt
	FROM EXP_PMANIFEST_ULD_AWB A,
	  AWB B,FLT_OPR C
	WHERE 
	C.FLT_KEY = A.FLT_KEY
	AND C.SCH_DATE = A.FLT_DATE
	AND C.FLT_TYPE='D'
	AND B.AWB_NO = A.AWB_NO
	AND B.AWB_DATE = A.AWB_DATE
	AND A.FLT_KEY  =#fltKey#
	AND A.FLT_DATE =#fltDate#
	AND A.ULD_BT_NO=#uldKey# 
	AND (SELECT COUNT(1) FROM EXP_PMANIFEST_ULD_AWB WHERE FLT_KEY=#fltKey# AND FLT_DATE=#fltDate# AND ULD_BT_NO=#uldKey#) > 1) WHERE cnt > 0
	]]>
	</select>
	<select id="checkNonColoadAllEndorse" parameterClass="cargo.cms.export.buildup.bo.NonColoadableSHCBO" resultClass="java.lang.String">
	<![CDATA[
	SELECT COUNT(1) FROM (
	SELECT NVL((SELECT COUNT(1) FROM MAST_NON_COLOAD_SHC WHERE CARR_CODE   =#carrier# AND ENDRSE_IND = 'Y'
	]]>
	<isNotEmpty property="unldgPt"> 
	and UNLDG_PT = #unldgPt# 
	</isNotEmpty>
	<![CDATA[
	AND NON_COLOAD_SCH='***' AND 
	((SCH  IN (B.SPL_CODE1,B.SPL_CODE2,B.SPL_CODE3,B.SPL_CODE4,B.SPL_CODE5,B.SPL_CODE6,B.SPL_CODE7,B.SPL_CODE8,B.SPL_CODE9))
	OR (SCH IN 
	]]>  
	<iterate property="sch" open="(" close=")" conjunction=",">
	  #sch[]#  
	  </iterate>
	 <![CDATA[)
	)
	),0) cnt
	FROM EXP_PMANIFEST_ULD_AWB A,
	  AWB B,FLT_OPR C
	WHERE 
	C.FLT_KEY = A.FLT_KEY
	AND C.SCH_DATE = A.FLT_DATE
	AND C.FLT_TYPE='D'
	AND B.AWB_NO = A.AWB_NO
	AND B.AWB_DATE = A.AWB_DATE
	AND A.FLT_KEY  =#fltKey#
	AND A.FLT_DATE =#fltDate#
	AND A.ULD_BT_NO=#uldKey#
	AND (SELECT COUNT(1) FROM EXP_PMANIFEST_ULD_AWB WHERE FLT_KEY=#fltKey# AND FLT_DATE=#fltDate# AND ULD_BT_NO=#uldKey#) > 0
	UNION
	SELECT NVL((SELECT COUNT(1) FROM MAST_NON_COLOAD_SHC MO WHERE MO.CARR_CODE   =#carrier# AND MO.ENDRSE_IND = 'Y'
	AND MO.NON_COLOAD_SCH='***' AND 
	((MO.SCH  IN (B.SPL_CODE1,B.SPL_CODE2,B.SPL_CODE3,B.SPL_CODE4,B.SPL_CODE5,B.SPL_CODE6,B.SPL_CODE7,B.SPL_CODE8,B.SPL_CODE9))
	OR (MO.SCH IN 
	]]>  
	<iterate property="sch" open="(" close=")" conjunction=",">
	  #sch[]#  
	  </iterate>
	 <![CDATA[)
	)
	AND MO.UNLDG_PT IS NULL 
	AND NOT EXISTS (SELECT NULL FROM MAST_NON_COLOAD_SHC MI WHERE MI.CARR_CODE=#carrier# AND MI.UNLDG_PT = #unldgPt#  AND MI.SCH = MO.SCH AND mi.non_coload_sch = mo.non_coload_sch)
	),0) cnt
	FROM EXP_PMANIFEST_ULD_AWB A,
	  AWB B,FLT_OPR C
	WHERE 
	C.FLT_KEY = A.FLT_KEY
	AND C.SCH_DATE = A.FLT_DATE
	AND C.FLT_TYPE='D'
	AND B.AWB_NO = A.AWB_NO
	AND B.AWB_DATE = A.AWB_DATE
	AND A.FLT_KEY  =#fltKey#
	AND A.FLT_DATE =#fltDate#
	AND A.ULD_BT_NO=#uldKey# 
	AND (SELECT COUNT(1) FROM EXP_PMANIFEST_ULD_AWB WHERE FLT_KEY=#fltKey# AND FLT_DATE=#fltDate# AND ULD_BT_NO=#uldKey#) > 0) WHERE cnt > 0
	]]>
	</select>
	<select id="sqlGetExpRclDtlDummyLocExp" resultClass="java.lang.String">
		select rule_value from cmsrules where rule_code = 'Dummy_Location'
	</select>
	<select id="fetchExpPreRcl" parameterClass="java.lang.String" resultClass="java.util.HashMap">
		select spl_code1,spl_code2,spl_code3,spl_code4,spl_code5,spl_code6,spl_code7,spl_code8,spl_code9 from exp_rcl_hd 
		where rcl_no=#rclNo# and ppk_type='M'
	</select>
</sqlMap>