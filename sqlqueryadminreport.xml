<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<!-- The SQL in these maps files has purposely been typed with more verbosity than is actually required.
 For example, many of the selects could have just used SELECT * FROM... instead of listing all of the columns.
 This is to demonstrate that even complex SQL can be handled and coded and formatted the way SQL was meant
 to be (i.e. not a bunch of concatenated strings in a Java class). -->
 
	<!-- This XML file will hold only the queries which would be used for Admin module Reports -->
	<!-- Added by Varadaraj Muni 01-Sep-2010 -->
<sqlMap namespace="AdminReportModule">

<select id="sqlcustomerprofilesearch_1_245"  parameterClass="cargo.cms.admin.report.bo.CustomerProfileDetail_Rept245BO" resultClass="cargo.cms.admin.report.bo.CustomerProfileDetail_Rept245BO">
	<![CDATA[
		SELECT	
		AIRLINE_YN  AS airlineType,
		AGENT_YN AS agentType,
		CONS_YN AS consigneeType,
		RHO_YN AS rhoType,
		HAFFA_MEMBER AS haffaMember,
		(SELECT awb_pfx FROM CUST_AIRL_AWB_PFX WHERE cust_no=#custNo#) awbPrefix,
		replace(
		substr(decode(agent_yn, 'Y', 'AGENT') || decode(airline_yn, 'Y', '/AIRLINE')||decode(cons_yn, 'Y', '/CONSIGNEE')||decode(rho_yn, 'Y', '/RHO')||decode(SHPR_YN, 'Y', '/SHIPPER')||decode(SHA_YN, 'Y', '/SHA')||decode(TCS_YN, 'Y', '/TCS USER')||decode(TRUCKER_YN, 'Y', '/TRUCKER'), 1, 1), '/', '')||            
		substr(decode(agent_yn, 'Y', 'AGENT') || decode(airline_yn, 'Y', '/AIRLINE')||decode(cons_yn, 'Y', '/CONSIGNEE')||decode(rho_yn, 'Y', '/RHO')||decode(SHPR_YN, 'Y', '/SHIPPER')||decode(SHA_YN, 'Y', '/SHA')||decode(TCS_YN, 'Y', '/TCS USER')||decode(TRUCKER_YN, 'Y', '/TRUCKER'), 2)AS  type,
		BUS_REG_NO AS brNo,
		CODE AS	custNo,
		CODE_DESC AS name,
		CO_SNAME AS shortName,
		CARR_CODE AS carr,
		SELF_HANDLING AS selfHandling,
		URL_ADDR AS url,
		CO_IATA_CODE AS iataCode,
		ACTIVE AS active,
		add1 as address1,
	    add2 as address2,
	    add3 as address3,
	    add4 as address4,
	    add5 as address5,		
		CITY AS city,
		PIN_CODE AS pinCode,
		CTRY_CODE AS countryCode,
		(select code_desc from mast_country where mast_country.code = CUST_COMPANY.ctry_code) as countryDesc,
		TEL_IMP1 ||decode(TEL_IMP2, null,'',', '||TEL_IMP2) telImp,
		TEL_EXP1 ||decode(TEL_EXP2, null,'',', '||TEL_EXP2) telExp,
		TEL1 ||decode(TEL2, null,'',', '||TEL2) tel,
		MOB1 AS mob,
		FAX1 ||decode(FAX2, null,'',', '||FAX2) ||decode(FAX3, null,'',', '||FAX3) fax,		
		EMAIL1 ||decode(EMAIL2, null,'',', '||EMAIL2) ||decode(EMAIL3, null,'',', '||EMAIL3) 
		||decode(EMAIL4, null,'',', '||EMAIL4) ||decode(EMAIL5, null,'',', '||EMAIL5) email,
		TELEX AS telex,
		BILL_ADD1 as billAdd1,
	    BILL_ADD2 as billAdd2,
	    BILL_ADD3 as billAdd3,
	    BILL_ADD4 as billAdd4,
	    BILL_ADD5 as billAdd5,
		BILL_EMAIL1 ||decode(BILL_EMAIL2, null,'',', '||BILL_EMAIL2) ||decode(BILL_EMAIL3, null,'',', '||BILL_EMAIL3) 
		||decode(BILL_EMAIL4, null,'',', '||BILL_EMAIL4) ||decode(BILL_EMAIL5, null,'',', '||BILL_EMAIL5) billEmail,
		BILL_FAX1 ||decode(BILL_FAX2, null,'',', '||BILL_FAX2) ||decode(BILL_FAX3, null,'',', '||BILL_FAX3) billFax,		
		BILL_CITY AS billCity,
		BILL_PIN_CODE AS billPinCode,
		BILL_CTRY_CODE AS billCountryCode,
		(select code_desc from mast_country where mast_country.code = CUST_COMPANY.BILL_CTRY_CODE) as billCountryDesc,
		BILL_ATTN AS billAttention,
		ADM_ADD1 as admAdd1,
	    ADM_ADD2 as admAdd2,
	    ADM_ADD3 as admAdd3,
	    ADM_ADD4 as admAdd4,
	    ADM_ADD5 as admAdd5,
		ADM_CITY AS admCity,
		ADM_PIN_CODE AS admPinCode,
		ADM_CTRY_CODE AS admCountryCode,
		(select code_desc from mast_country where mast_country.code = CUST_COMPANY.ADM_CTRY_CODE) as admCountryDesc,
		ADM_TEL1 ||decode(ADM_TEL2, null,'',', '||ADM_TEL2) admTel,			
		ADM_MOB1 AS admHp,		
		ADM_EMAIL1 ||decode(ADM_EMAIL2, null,'',', '||ADM_EMAIL2) ||decode(ADM_EMAIL3, null,'',', '||ADM_EMAIL3) 
		||decode(ADM_EMAIL4, null,'',', '||ADM_EMAIL4) ||decode(ADM_EMAIL5, null,'',', '||ADM_EMAIL5) admEmail,
		ADM_FAX1 ||decode(ADM_FAX2, null,'',', '||ADM_FAX2) ||decode(ADM_FAX3, null,'',', '||ADM_FAX3) admFax,
		ADM_TELEX AS admTelex,
		ADMIN_USER_ID admUserId,
		ADMIN_PASSWD admPassword,
		ADMIN_NAME	 admName,
		ADMIN_TITLE	 admTitle
		FROM CUST_COMPANY
		WHERE CODE = #custNo#
	]]>
   	</select>
<select id="sqlcustomerprofilesearch_2_245"  parameterClass="cargo.cms.admin.report.bo.CustomerProfileDetail_Rept245BO" resultClass="cargo.cms.admin.report.bo.CustomerDetails_245BO">
	<![CDATA[
		
			SELECT
				CC.CODE_DESC AS customerName,
				CA.CUST_NO AS customerNo,
				CA.AGENT_ID AS agentId, 
				TO_CHAR(CA.APP_DATE,'DDMONYY') AS appDate, 
		        TO_CHAR(CA.LM_DATE,'DDMONYY HH24:MI') AS modifiedDate,
		        CA.LM_USER_ID AS modifiedId,
				CA.RMK AS remarks,
				CC.CODE_DESC AS oldCustomerName,
				CA.CUST_NO AS oldCustomerNo,
				CA.AGENT_ID AS oldAgentId, 
				TO_CHAR(CA.APP_DATE,'DDMONYY') AS oldAppDate, 
				CA.RMK AS oldRemarks, TO_CHAR(CA.EXP_DATE,'DDMONYY') AS expiryDate
			FROM CUST_COMPANY CC,CUST_APP_AGENT CA 
			WHERE CC.CODE = CA.AGENT_ID AND CA.CUST_NO = #custNo#
			Order by CC.CODE_DESC
		]]>
   	</select>		
<select id="maintain_auth_representative_234"  parameterClass="cargo.cms.admin.report.bo.MaintainAuthRepresentativeRept_234BO"  resultClass="cargo.cms.admin.report.bo.MaintainAuthRepresentativeRept_234BO">
			SELECT T2.AUTH_REP_NAME AS repName, AUTH_REP_ID AS repNo, DECODE((SELECT COUNT(1) FROM CUST_AGENT_AUTH_REP WHERE AUTH_REP_ID = T2.AUTH_REP_ID), 1, 'N', 'Y') otherCompany,
			T2.LM_USER_ID as lastUpatedByStaffId, T2.TWOFA_MOBILE_NO as twoFAMobile,
				(select code from sec_user where cust_no = t1.code and hkid = t2.auth_rep_id) userId,
				T2.BLACK_LISTED AS blockListed,
			 TO_CHAR(T2.LM_DATE, 'DDMONYY HH24:MI:SS') as lastUpdatedDate
		FROM   CUST_COMPANY T1, CUST_AGENT_AUTH_REP T2
		WHERE T1.CODE = T2.CUST_NO
			<isNotEmpty prepend="AND" property="customerNo">
				CODE = #customerNo#
			</isNotEmpty>
			<dynamic prepend="ORDER BY ">
	           <isNotEmpty property="sortOrder.sortField">
	             $sortOrder.sortField$
	           </isNotEmpty>
	        </dynamic>
</select>

<select id="adm_rept_205"  parameterClass="cargo.cms.admin.report.bo.EnqCompanyByRepRept_205BO"  resultClass="cargo.cms.admin.report.bo.EnqCompanyByRepRept_205BO">
	Select A.CODE_DESC as otherCompany, A.CODE as otherCompanyId, B.AUTH_REP_NAME AS repName, B.TWOFA_MOBILE_NO as twoFAMobile,B.BLACK_LISTED AS blockListed,B.AUTH_REP_ID as repNo, B.LM_USER_ID as lastUpatedByStaffId, TO_CHAR(B.LM_DATE, 'DDMONYY HH24:MI:SS') as lastUpdatedDate,
			(select code from sec_user where cust_no = A.code and hkid = B.auth_rep_id) as userId
			FROM  CUST_COMPANY A, CUST_AGENT_AUTH_REP B
			WHERE A.CODE = B.CUST_NO
		<isNotEmpty property="srepresentative">
			AND	B.AUTH_REP_NAME LIKE #srepresentative#
		</isNotEmpty>
		<isNotEmpty property="shkid">
			AND	B.AUTH_REP_ID = #shkid#
		</isNotEmpty>
		<isNotEmpty property="scompanyName">
			AND	A.CODE_DESC = #scompanyName#
		</isNotEmpty>	
		<dynamic prepend="ORDER BY ">
           <isNotEmpty property="sortOrder.sortField">
             $sortOrder.sortField$
           </isNotEmpty>
           <isEmpty property="sortOrder.sortField">
			 A.CODE_DESC
			</isEmpty>
        </dynamic>
	
</select>

<select id="adm_rept_025"  parameterClass="cargo.cms.admin.report.bo.EnquireAgentReptBO"  resultClass="cargo.cms.admin.report.bo.EnquireAgentReptBO">
	  SELECT #agentNameFrom#  as agentNameFrom, #agentNameTo#  as agentNameTo, #s_customerNo# as s_customerNo, #s_hafaMember# as s_hafaMember,
		#s_companyIataCode# as s_companyIataCode,code_desc AS customerName,row_number() over (order by CODE_DESC) serialNo,
		 code AS customerNo, code AS companyCustomerNo,
		         haffa_member AS hafaMember, co_iata_code AS companyIataCode,
		         cons_yn AS consigneeType
		    FROM cust_company
		   WHERE agent_yn = 'Y' 
				<dynamic>
					<isNotEmpty prepend="AND" property="agentNameFrom">
						<isEqual property="agentNameFrom" compareValue="%">
							 code_desc like #agentNameFrom# 
						</isEqual>
						<isNotEqual property="agentNameFrom" compareValue="%">
							<isNotEmpty property="agentNameTo">
						<!-- code_desc BETWEEN #agentNameFrom# AND NVL(#agentNameTo#, #agentNameFrom#)  || 'Z'-->						
							(code_desc &gt;= #agentNameFrom# and code_desc &lt;=#agentNameTo#) 
							</isNotEmpty>
							<isEmpty property="agentNameTo">
								code_desc like #agentNameFrom# 
							</isEmpty>
						</isNotEqual>
					</isNotEmpty>
					<isNotEmpty prepend="AND" property="s_customerNo">
						code = #s_customerNo#
					</isNotEmpty>
					<isNotEmpty prepend="AND" property="s_companyIataCode">
						co_iata_code = #s_companyIataCode#
					</isNotEmpty>
					<isNotEmpty prepend="AND" property="s_hafaMember">
						haffa_member = #s_hafaMember#
					</isNotEmpty>
				</dynamic>
				<dynamic prepend="ORDER BY ">
		           <isNotEmpty property="sortOrder.sortField">
		             $sortOrder.sortField$
		           </isNotEmpty>
		        </dynamic>
   	</select>
   	

<select id="adm_rept_027"  parameterClass="cargo.cms.admin.report.bo.ConsigneeReptBO"  resultClass="cargo.cms.admin.report.bo.ConsigneeReptBO">
		SELECT 
			#sconsigneeNameFrom# as sconsigneeNameFrom, #sconsigneeNameTo# as sconsigneeNameTo
			,#scustomerName# as scustomerName,#scustomerNo# as scustomerNo,
			CODE_DESC AS customerName,CODE AS customerNo,CODE_DESC AS csgnName,
                  decode((select count(1) from CUST_APP_AGENT where cust_no=A.CODE),1,
                  (SELECT CODE_DESC FROM CUST_COMPANY where code in (select agent_id
                  from CUST_APP_AGENT where cust_no=A.CODE)),decode((select count(1) from CUST_APP_AGENT where cust_no=A.CODE),0,'N',null)) agentName
                  FROM CUST_COMPANY A
                  WHERE CONS_YN='Y' and ACTIVE='Y' AND BLACKLISTED='N'
			  <dynamic>
					<isNotEmpty prepend="AND" property="sconsigneeNameFrom">
						<isEqual property="sconsigneeNameFrom" compareValue="%">
							 code_desc like #sconsigneeNameFrom# 
						</isEqual>
						<isNotEqual property="sconsigneeNameFrom" compareValue="%">
							 (code_desc BETWEEN #sconsigneeNameFrom# AND nvl(#sconsigneeNameTo#, #sconsigneeNameFrom#) OR code_desc like #sconsigneeNameTo#) 
						</isNotEqual>
					</isNotEmpty>
					<isNotEmpty prepend="AND" property="scustomerName">
						code_desc like #scustomerName#
					</isNotEmpty>
					<isNotEmpty prepend="AND" property="scustomerNo">
						code = #scustomerNo#
					</isNotEmpty>
				</dynamic> 
				<dynamic prepend="ORDER BY ">
		           <isNotEmpty property="sortOrder.sortField">
		             $sortOrder.sortField$
		           </isNotEmpty>
		           <isEmpty property="sortOrder.sortField">
		           CODE_DESC
		           </isEmpty>
		        </dynamic>
</select>
	
	<select id="adm_rept_028"  parameterClass="cargo.cms.admin.report.bo.RAReptBO"  resultClass="cargo.cms.admin.report.bo.RAReptBO">
	SELECT 
		#sraNo#  as sraNo, #scompName#  as scompName, #scustNo# as scustNo, 
		#siataCode# as siataCode, 							
		RA.CUST_NO AS customerNo, RA.TR_NO AS trNo, CC.CODE_DESC AS compName,
		DECODE(CC.CO_IATA_CODE,null,'',SUBSTR(CC.CO_IATA_CODE,1,2)||'-'||SUBSTR(CC.CO_IATA_CODE,3,1)||'-'||SUBSTR(CC.CO_IATA_CODE,4,4)) AS iataCode, 
		RA.RA_NO AS raNo, 
		TO_CHAR(RA.RA_EFF_DATE_FROM,'DDMONYY') AS raFromDate,TO_CHAR(RA.RA_EFF_DATE_TO,'DDMONYY') AS raToDate,RA.LM_USER_ID AS lmStaffId,TO_CHAR(RA.LM_DATE,'DDMONYY HH24:MI')AS lmdDate, TO_CHAR(RA.LM_DATE,'DDMONYYHH24:MI:SS')AS lastModifiedDate  
		FROM CUST_COMPANY CC, CUST_AGENT_RA RA WHERE CC.CODE = RA.CUST_NO 			
	<dynamic>
	<isNotEmpty prepend="AND" property="sraNo">
	RA.RA_NO = #sraNo#
	</isNotEmpty>
	<isNotEmpty prepend="AND" property="scompName">
	CC.CODE_DESC like #scompName#
	</isNotEmpty>
	<isNotEmpty prepend="AND" property="scustNo">
	RA.CUST_NO  = #scustNo#
	</isNotEmpty>
	<isNotEmpty prepend="AND" property="siataCode">
	CC.CO_IATA_CODE = #siataCode#
	</isNotEmpty>										
	</dynamic>
	ORDER BY CC.CODE_DESC
</select>

<select id="adm_rept_057"  parameterClass="cargo.cms.admin.report.bo.CustAccountReptBO"  resultClass="cargo.cms.admin.report.bo.CustAccountReptBO">
SELECT 
		#scustomerType# as scustomerType, #scustomerName# as scustomerName,#suffix# as suffix,
		CASE	
			WHEN #sblackListed# = 'Y' THEN 'Yes'
			WHEN #sblackListed# ='N' THEN 'No'
		END  as sblackListed,
		CASE	
			WHEN  #sactive# = 'Y' THEN 'Yes'
			WHEN  #sactive# ='N' THEN 'No'
		END as sactive,							
	CODE AS companyCustomerNo,CODE_DESC AS customerName,NAME as name,replace(
	 		substr(decode(agent_yn, 'Y', 'AGENT') || decode(airline_yn, 'Y', '/AIRLINE')||decode(cons_yn, 'Y', '/CONSIGNEE')||decode(rho_yn, 'Y', '/RHO')||decode(SHPR_YN, 'Y', '/SHIPPER')||decode(SHA_YN, 'Y', '/SHA')||decode(TCS_YN, 'Y', '/TCS USER')||decode(TRUCKER_YN, 'Y', '/TRUCKER'), 1, 1), '/', '')||            
			substr(decode(agent_yn, 'Y', 'AGENT') || decode(airline_yn, 'Y', '/AIRLINE')||decode(cons_yn, 'Y', '/CONSIGNEE')||decode(rho_yn, 'Y', '/RHO')||decode(SHPR_YN, 'Y', '/SHIPPER')||decode(SHA_YN, 'Y', '/SHA')||decode(TCS_YN, 'Y', '/TCS USER')||decode(TRUCKER_YN, 'Y', '/TRUCKER'), 2)AS  customerType,
			to_char(next_bdate, 'DDMONYY') as billingDate,suffix as s_suffix, blacklisted as blackListed, active as active, admin_name as adminName, TO_CHAR(LM_DATE,'DDMONYY HH24:MI:SS') AS lastModDate
			FROM cust_company 
			WHERE 1=1
			<isNotEmpty prepend="AND" property="scustomerType">
				(agent_yn = decode(#scustomerType#, 'Cargo Agent', 'Y')
				OR airline_yn = decode(#scustomerType#, 'Airline', 'Y')
				OR cons_yn = decode(#scustomerType#, 'Consignee', 'Y')
				OR RHO_YN = decode(#scustomerType#, 'RHO', 'Y')
				OR SHPR_YN = decode(#scustomerType#, 'Shipper', 'Y')
				OR TRUCKER_YN = decode(#scustomerType#, 'Trucker', 'Y')
				OR SHA_YN = decode(#scustomerType#, 'SHA', 'Y')
				OR TCS_YN = decode(#scustomerType#, 'TCS User', 'Y'))
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="scustomerName">
				code_desc  like UPPER(#scustomerName#)
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="suffix">
				suffix  = UPPER(#suffix#)
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sblackListed">
				blackListed = UPPER(#sblackListed#)
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sactive">
				active = UPPER(#sactive#)
			</isNotEmpty>
		Order By code_desc
	</select>
	

<select id="adm_rept_029"  parameterClass="cargo.cms.admin.report.bo.KCReptBO"  resultClass="cargo.cms.admin.report.bo.KCReptBO">
	
	SELECT #scarrier# as scarrier, #scompName#  as scompName, #scustNo# as scustNo,#siataCode# as siataCode,
	#sebfDate# as sebfDate, KC.CUST_NO AS customerNo, KC.TR_NO AS trNo,KC.CARR_CODE AS carrierCode, CC.CODE_DESC AS companyName,
	CC.CO_IATA_CODE AS companyIataCode, KC.KC_NO AS kcNumber, 
				TO_CHAR(KC.EFF_DATE_FROM,'DDMONYY') AS kcFromDate,TO_CHAR(KC.EFF_DATE_TO,'DDMONYY') AS kcToDate,KC.LM_USER_ID AS modifiedId,TO_CHAR(KC.LM_DATE,'DDMONYY HH24:MI')AS modifiedDate, TO_CHAR(KC.LM_DATE,'DDMONYYHH24:MI:SS')AS lastModifiedDate  
				FROM CUST_COMPANY CC, CUST_AGENT_KC KC WHERE CC.CODE = KC.CUST_NO AND UPPER(KC.CARR_CODE) LIKE UPPER(#scarrier#) AND UPPER(CC.CODE_DESC) LIKE UPPER(#scompName#) AND CC.CODE LIKE #scustNo# AND 
				NVL(CC.CO_IATA_CODE, '%') LIKE #siataCode# 
				AND TO_DATE(KC.EFF_DATE_TO,'DD/MM/YY')&lt;=NVL(TO_DATE(#sebfDate#,'DD/MM/YY'),KC.EFF_DATE_TO)
				   <isNotEmpty property="loginCarrier">
                                    AND   (KC.CARR_CODE = #loginCarrier# 
                                    OR KC.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP 
                                    WHERE GRP_CARR_CODE     = #loginCarrier#))                                          
                   </isNotEmpty>
			    <dynamic prepend="ORDER BY ">
		           <isNotEmpty property="sortOrder.sortField">
		             $sortOrder.sortField$
		           </isNotEmpty>
		        </dynamic>
</select>

<select id="adm_rept_761"  parameterClass="cargo.cms.admin.report.bo.ACReptBO"  resultClass="cargo.cms.admin.report.bo.ACReptBO">
	
	SELECT #scarrier# as scarrier, #scompName#  as scompName, #scustNo# as scustNo,#siataCode# as siataCode,
	#sebfDate# as sebfDate, AC.CUST_NO AS customerNo, AC.TR_NO AS trNo,AC.CARR_CODE AS carrierCode, CC.CODE_DESC AS companyName,
	CC.CO_IATA_CODE AS companyIataCode, AC.AC_NO AS acNumber, 
				TO_CHAR(AC.EFF_DATE_FROM,'DDMONYY') AS acFromDate,TO_CHAR(AC.EFF_DATE_TO,'DDMONYY') AS acToDate,AC.LM_USER_ID AS modifiedId,TO_CHAR(AC.LM_DATE,'DDMONYY HH24:MI')AS modifiedDate, TO_CHAR(AC.LM_DATE,'DDMONYYHH24:MI:SS')AS lastModifiedDate  
				FROM CUST_COMPANY CC, CUST_AGENT_AC AC WHERE CC.CODE = AC.CUST_NO AND UPPER(AC.CARR_CODE) LIKE UPPER(#scarrier#) AND UPPER(CC.CODE_DESC) LIKE UPPER(#scompName#) AND CC.CODE LIKE #scustNo# AND 
				NVL(CC.CO_IATA_CODE, '%') LIKE #siataCode# 
				AND TO_DATE(AC.EFF_DATE_TO,'DD/MM/YY')&lt;=NVL(TO_DATE(#sebfDate#,'DD/MM/YY'),AC.EFF_DATE_TO)
				   <isNotEmpty property="loginCarrier">
                                    AND   (AC.CARR_CODE = #loginCarrier# 
                                    OR AC.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP 
                                    WHERE GRP_CARR_CODE     = #loginCarrier#))                                          
                   </isNotEmpty>
			    <dynamic prepend="ORDER BY ">
		           <isNotEmpty property="sortOrder.sortField">
		             $sortOrder.sortField$
		           </isNotEmpty>
		        </dynamic>
</select>


<select id="adm_rept_038_addr"  parameterClass="cargo.cms.admin.report.bo.MaintainSITAReptBO"  resultClass="cargo.cms.admin.report.bo.MaintainSITAReptBO">
		select	upper(a.SITA_ADDR) AS sitaAddress
		from CUST_AIRL_SITA_GRPDTL a
		where a.CUST_NO = #customerNumber#
		AND a.addr_group = #addressGroup#
	</select>
	
	<select id="adm_rept_038"  parameterClass="cargo.cms.admin.report.bo.MaintainSITAReptBO"  resultClass="cargo.cms.admin.report.bo.MaintainSITAReptBO">
 			<![CDATA[
			SELECT DISTINCT
			  c.CUST_NO AS customerNumber,
			  b.CODE_DESC AS companyName,
			  c.ADDR_GROUP AS addressGroup,
			  b.carr_code AS carrier
			FROM
			  CUST_COMPANY b, CUST_AIRL_SITA_GRPDTL c
			WHERE 
			  b.CODE = c.CUST_NO
			  AND b.code_desc like nvl(#scompName#, b.code_desc)
			  AND c.CUST_NO = NVL(#scustNo#, c.CUST_NO)
			  AND b.CARR_CODE = nvl(#scarrier#, b.CARR_CODE)			 
		]]>
		<dynamic prepend="ORDER BY ">
       			 <isNotEmpty property="sortOrder.sortField">
             		$sortOrder.sortField$
        		</isNotEmpty>
 		</dynamic>
	</select>

<select id="adm_rept_183"  parameterClass="cargo.cms.admin.report.bo.MaintainSPLCodeRept_183BO"  resultClass="cargo.cms.admin.report.bo.MaintainSPLCodeRept_183BO">
			SELECT		#scompanyName# as scompanyName, #scarrier# as  scarrier, #scustNo# as scustNo, #stype# as stype,
								row_number() over (order by SPL_CODE) serialNo,    
								SPL_CODE as splCode, mastsplcode.CODE_DESC as splCodeDesc 
					FROM CUST_AIRL_SPL_CODE s, CUST_COMPANY c, MAST_SPL_HAND_CODE mastsplcode
					
						<dynamic prepend="WHERE">			
							
										<isNotEmpty prepend="AND" property="scompanyName">
											UPPER(c.Code_Desc) = #scompanyName#
										</isNotEmpty>
										
										<isNotEmpty prepend="AND" property="scarrier">
											UPPER(c.Carr_Code) = #scarrier# 
										</isNotEmpty>
										
										<isNotEmpty prepend="AND" property="scustNo">
											UPPER(c.Code) = #scustNo#
										</isNotEmpty>
										
										AND UPPER(s.Cust_No) = c.Code AND UPPER(mastsplcode.code) = UPPER(s.SPL_CODE) 
										AND s.SPL_Type = #stype#  ORDER BY SPL_CODE
						
						</dynamic>
  
	</select>
	<select id="adm_rept_183_combsplhandlecode"  parameterClass="cargo.cms.admin.report.bo.MaintainSPLCodeRept_183BO"  resultClass="cargo.cms.admin.report.bo.MaintainSPLCodeRept_183BO">
			SELECT DECODE(spl_code1, NULL, '', spl_code1
  || DECODE(spl_code2, NULL, '', ','))
  || DECODE(spl_code2, NULL, '', spl_code2
  || DECODE(spl_code3, NULL, '', ','))
  || DECODE(spl_code3, NULL, '', spl_code3
  || DECODE(spl_code4, NULL, '', ','))
  || DECODE(spl_code4, NULL, '', spl_code4
  || DECODE(spl_code5, NULL, '', ','))
  || DECODE(spl_code5, NULL, '   
', spl_code5
  || DECODE(spl_code6, NULL, '', ','))
  || DECODE(spl_code6, NULL, '', spl_code6
  || DECODE(spl_code7, NULL, '', ','))
  || DECODE(spl_code7, NULL, '', spl_code7
  || DECODE(spl_code8, NULL, '', ','))
  || DECODE(spl_code8, NULL, '', spl_code8
  || DECODE(spl_code9, NULL, '', ','))
  || DECODE(spl_code9, NULL, '', spl_code9) AS splHandlingCode,
  row_number() over (order by SEQ_NO desc) as serialNo,
  'false'                                   AS inputField1,
  Cust_No                                   AS customerNo,
  TO_CHAR(s.LM_DATE,'DDMONYY HH24:MI:SS')   AS lastModifiedDate,
  SEQ_NO                                    AS seqNo
FROM CUST_AIRL_COMB_SPL_CODE s,
  CUST_COMPANY c
					
						<dynamic prepend="WHERE">			
							
										<isNotEmpty prepend="AND" property="scompanyName">
											UPPER(c.Code_Desc) = #scompanyName#
										</isNotEmpty>
										
										<isNotEmpty prepend="AND" property="scarrier">
											UPPER(c.Carr_Code) = #scarrier# 
										</isNotEmpty>
										
										<isNotEmpty prepend="AND" property="scustNo">
											UPPER(c.Code) = #scustNo#
										</isNotEmpty>
										
										AND s.SPL_Type = #stype#  ORDER BY SEQ_NO DESC
						
						</dynamic>
  
	</select>
	
<select id="adm_rept_061"  parameterClass="cargo.cms.admin.report.bo.UntertakingReptBO"  resultClass="cargo.cms.admin.report.bo.UntertakingReptBO">
<![CDATA[
	SELECT #sagentName# as sagentName, #scarrier# as  scarrier, #seffectDateFrom# as seffectDateFrom, 
							#seffectiveToDate# as seffectiveToDate,CC.CODE_DESC as agentName,TO_CHAR(CU.EFF_FROM,'DDMONYY')AS effectDateFrom,TO_CHAR(CU.EFF_TO,'DDMONYY')AS effectDateTo,
			CU.CARR_CODE AS carrierCode, CC.CODE as agentNo 
			FROM CUST_COMPANY CC, CUST_UNDERTAKING CU 
			WHERE CC.CODE = CU.AGENT_CODE
			AND CC.CODE_DESC like NVL(#sagentName#,CODE_DESC) 
			AND CU.CARR_CODE=NVL(#scarrier#,CU.CARR_CODE)
			AND TO_DATE(CU.EFF_FROM,'DD/MM/YY')>=NVL(TO_DATE(#seffectDateFrom#,'DD/MM/YY'),CU.EFF_FROM)
			AND TO_DATE(CU.EFF_TO,'DD/MM/YY')<=NVL(TO_DATE(#seffectiveToDate#,'DD/MM/YY'),CU.EFF_TO)
			]]>  
			<isEmpty property="scarrier">	
				<isNotEmpty property="loginCarrier">
				  	AND   ( CU.CARR_CODE = #loginCarrier# OR CU.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE = #loginCarrier#))
				</isNotEmpty>
			</isEmpty>
			<dynamic prepend="ORDER BY ">
	        <isNotEmpty property="sortOrder.sortField">
	            $sortOrder.sortField$
	       </isNotEmpty>
	       <isEmpty property="sortOrder.sortField">
	            CC.CODE_DESC
	       </isEmpty>
	       </dynamic>
				
</select>
   	
 <select id="adm_rept_057_S"  parameterClass="cargo.cms.admin.report.bo.ShipperValidityBO"  resultClass="cargo.cms.admin.report.bo.ShipperValidityBO">
	SELECT #withinDays# as withinDays,#scountry# as scountry, rtrim((a.add1 || ','||a.add2||','||a.add3||','||a.add4||','||a.add5),',') as address,
	A.code_desc as shipperName,A.suffix as suffix,
    M.code_desc as country,
    TO_CHAR(ADD_MONTHS(A.valid_date,(M.shipper_validity_yrs*12)),'DDMONYY') as expiryDate 
    from cust_company A, mast_country M 
    where   A.SHPR_YN = 'Y'  and  m.shipper_validity_yrs is not null and A.valid_date is not null   
    <isEqual property="svalidityexp" compareValue="N">        
        AND add_months(valid_date, (shipper_validity_yrs * 12))   between  SYSDATE AND SYSDATE + #withinDays#
	</isEqual>
	<isEqual property="svalidityexp" compareValue="Y">
		AND add_months(valid_date, (shipper_validity_yrs * 12))   between  SYSDATE - #withinDays# AND SYSDATE				
	</isEqual>
	<isNotEmpty property="scountry">	
		AND UPPER(M.CODE) = #scountry#
	</isNotEmpty>	
	order by shipperName
 </select>

<select id="adm_rept_500"  parameterClass="cargo.cms.admin.report.bo.EnqAddressReptBO"  resultClass="cargo.cms.admin.report.bo.EnqAddressReptBO">
      SELECT	#scustName# as scustName,#scompName# as scompName,#siataCode# as siataCode,
      a.CUSTOMER_NAME companyName, decode(a.ADD1,NULL,' ',a.ADD1) add1, decode(a.ADD2,NULL,' ',a.ADD2) add2, decode(a.ADD3,NULL,' ',a.ADD3) add3,
      decode(a.ADD4,NULL,' ',a.ADD4) add4,decode(a.ADD5,NULL,' ',a.ADD5) add5, 
			    	a.city_code city,a.PIN_CODE postalCode, 
			    	(select code_desc from mast_country where code = a.ctry_code)country, a.STATE_CODE state, 
					decode(a.CONTACT_ID1,NULL,' ',a.CONTACT_ID1) contactId1, decode(a.CONTACT_ID2,NULL,' ',a.CONTACT_ID2) contactId2, 
					decode(a.CONTACT_ID3,NULL,' ',a.CONTACT_ID3) contactId3, decode(a.CONTACT_ID4,NULL,' ',a.CONTACT_ID4) contactId4, 
					decode(a.CONTACT_ID5,NULL,' ',a.CONTACT_ID5) contactId5, a.CONTACT_NO1 contactDetail1, a.CONTACT_NO2 contactDetail2, 
					a.CONTACT_NO3 contactDetail3,	a.CONTACT_NO4 contactDetail4, a.CONTACT_NO5 contactDetail5
			FROM	CUST_ADDRESS_BOOK a,CUST_COMPANY b
			WHERE	b.code=a.agent_id
			<isNotEqual property="scustName" compareValue="">
				AND UPPER(b.CODE_DESC) = UPPER(#scustName#)
			</isNotEqual>
			<isNotEqual property="scompName" compareValue="">	
				AND		UPPER(a.CUSTOMER_NAME) LIKE UPPER(#scompName#)	
			</isNotEqual>
			<isNotEqual property="siataCode" compareValue="">		
				AND	 UPPER(a.AGENT_ID) in	(SELECT UPPER(CODE) FROM CUST_COMPANY WHERE UPPER(CO_IATA_CODE) = UPPER(#siataCode#))
			</isNotEqual>
			<dynamic prepend="ORDER BY ">
	        <isNotEmpty property="sortOrder.sortField">
	            $sortOrder.sortField$
	       </isNotEmpty>
      </dynamic>
      </select>
      
<select id="adm_rept_501"  parameterClass="cargo.cms.admin.report.bo.MaintainWHSReptBO"  resultClass="cargo.cms.admin.report.bo.MaintainWHSReptBO">  
   	SELECT loc.code as locationId, loc.code as oldLocationId, loc.code_desc as locationDesc, loc.wh_group as groupId,loc.PREANNOUNCEMENT_IND as target,
         typ.wh_type as whType,
         typ.wh_type_desc as groupType,grp.wh_area as areaId, area.wh_area_desc as areaDesc, loc.CURR_LOCATION as currLoc, loc.MOVABLE as locMovable,
         (select code_desc from mast_code_dtl where code = loc.LOC_LEVEL and code_type='TCS_DOCK_LEVEL') locLevel,
         (SELECT distinct scale_name from WEIGHING_SCALE_DET where  scale_id = loc.SCALE_ID and rownum=1) as weighingScale,loc.PRINTER_ID as printerType, loc.SCDC_PRINTER_ID as scdcPrinter,
         TO_CHAR(loc.LM_DATE,'DDMONYY HH24:MI:SS') AS lastModDate,
         NEXT_LOC AS nextLoc
         FROM MAST_WH_LOC loc, MAST_WH_TYPE typ, MAST_WH_GROUP grp left outer join
         MAST_WH_AREA area on grp.wh_area = area.wh_area
         WHERE loc.wh_group = grp.wh_group and grp.wh_type = typ.wh_type                       
           <isNotEmpty property="sgroupType" prepend="AND">
               typ.wh_type = #sgroupType# 
           </isNotEmpty>
           <isNotEmpty property="sarea" prepend="AND">
               grp.wh_area like UPPER(#sarea#) 
           </isNotEmpty>
           <isNotEmpty property="sgroup" prepend="AND">
               grp.wh_group like UPPER(#sgroup#) 
           </isNotEmpty>
           <isNotEmpty property="slocation" prepend="AND">
               loc.code like UPPER(#slocation#) 
           </isNotEmpty>
       	order by loc.code
	</select>
	<select id="adm_rept_502"  parameterClass="cargo.cms.admin.report.bo.MaintainGroupTypeReptBO"  resultClass="cargo.cms.admin.report.bo.MaintainGroupTypeReptBO">  
	SELECT WH_TYPE as groupType, WH_TYPE_DESC as groupTypeDesc, PRIORITY as priority FROM MAST_WH_TYPE 
	</select>
<select id="adm_rept_503"  parameterClass="cargo.cms.admin.report.bo.MaintainMasterSHCReptBO"  resultClass="cargo.cms.admin.report.bo.MaintainMasterSHCReptBO">
 SELECT CODE       AS code        ,
  CODE_DESC        AS code_Desc   ,
  PRIORITY         AS priority    ,
  SCH_COLL_YN      AS sch_coll    ,
  IATA_YN          AS iata        ,
  LOCK_YN          AS lock_yn     ,
  NOA_YN           AS noa         ,
  ENDR_PMAN        AS endr_pman   ,
  ENDR_SRF         AS endr_srf    ,
  BLDUP_RELATED       AS buildup     ,
  INCLUDE_SLA      AS inclu_sla   ,
  PROCESS_FFM AS auto_process,
  SSR              AS ssr         ,
  ENDR_BD          AS endr_bd     ,
  BKG_YN           AS bkg_yn      ,
  TEMP_CLASS       AS temp_class  ,
  ECT_HANDLR       AS ect_handlr  ,
  DEFAULT_TARGET   AS def_trget   ,
  ENDR_RCL         AS endr_rcl    ,
  COLOAD_RELATED   AS coload,
  ENDR_SRF_CAP_DLV_LOC AS end_cap_del,
  DEF_HDLG_AREA AS def_hdlg_area,
  ENDR_BC as endorseBuildupomplete,
  DEF_HO_AREA as defaultHOArea,
  PMAN_PAX as PMANForPAX,
  ENDR_BLDUP as endorseBuildup,
  DLS_YN as DLS,
  FOH_YN as includeInFOH,
  REMAIN_IN_CAR as SHCInCAR,
  ENDR_TRANSHIPMENT as endorseTranshp,
  DG_CLASS_DIV as DGClassAndDivision,
  PRIORTY_INBD_TRNSFR as priorityInboundTransfer
   FROM MAST_SPL_HAND_CODE
ORDER BY CODE   ,
  CODE_DESC     ,
  PRIORITY      ,
  SCH_COLL_YN   ,
  IATA_YN       ,
  LOCK_YN       ,
  NOA_YN        ,
  ENDR_PMAN     ,
  ENDR_SRF      ,
  BLDUP_RELATED    ,
  INCLUDE_SLA   ,
  PROCESS_FFM   ,
  SSR           ,
  ENDR_BD       ,
  BKG_YN        ,
  TEMP_CLASS    ,
  ECT_HANDLR    ,
  DEFAULT_TARGET,
  ENDR_RCL      ,
  COLOAD_RELATED,
  ENDR_SRF_CAP_DLV_LOC,
  DEF_HDLG_AREA,
  ENDR_BC,
  DEF_HO_AREA,
  PMAN_PAX,
  ENDR_BLDUP,
  DLS_YN,
  FOH_YN,
  REMAIN_IN_CAR,
  ENDR_TRANSHIPMENT,
  DG_CLASS_DIV,
  PRIORTY_INBD_TRNSFR
	 </select>


<select id="adm_rept_103"  parameterClass="cargo.cms.admin.report.bo.AWBInventoryRept_103BO"  resultClass="cargo.cms.admin.report.bo.AWBInventoryRept_103BO">
     	     SELECT b.seq_no seqNo, B.AWB_NO,
                           SUBSTR( B.AWB_NO,1,3 ) AS awbNoPFX,
  			               SUBSTR( B.AWB_NO,4 ) as awbNoSFX,
                           A.CATALOG AS catalog,
                          (select awb_type from awb where awb_no = #sawbNo# and awb_date = #sawbDate# and rownum=1) AS awbType,
			               B.CARR_CODE AS carrier,
                           A.AGENT_NAME AS agentName,
                     	   B.LOC_CODE AS location,
                     	   (select curr_location from mast_wh_loc where code=B.LOC_CODE and MOVABLE='Y') as CURRLOCATION,
			    		   pkg_common.get_flt_ata(B.FLT_KEY, B.FLT_DATE,DECODE(A.AWB_TYPE,'E','D','A')) AS ata,	
			    		   PKG_COMMON.GET_FLT_ETA(B.FLT_KEY,B.FLT_DATE,DECODE(A.AWB_TYPE,'E','D','A'),'DD') AS etd,					
			               B.LOCN_PCS AS pc,
			   			    TO_CHAR(B.LOCN_WT,'9999990D99') AS wt,
               trim(DECODE(B.ULD_KEY,null,'',B.ULD_KEY||DECODE(D.CONTR_CODE,null,'','/')||D.CONTR_CODE)) as uld,
               B.LSP_NO as lspNo,
               B.FLT_TYPE AS fltType,
			   B.FLT_KEY AS fltNo,
			   TO_CHAR( B.FLT_DATE, 'DDMONYY') AS fltDate,
			    TO_CHAR( B.STRG_DATE, 'DDMONYY HH24:MI') AS strgDate,
			   B.SRF_NO AS srfNo,
			   B.TRM_NO AS trmno,
			   B.CDIF_NO AS cdifNo,
			   SUBSTR(B.CDIF_NO,1,6) AS cdifNoPrefix, 
			   SUBSTR(B.CDIF_NO,7) AS cdifNoSuffix,
			   C.TR_NO AS trNo
   FROM
     AWB A,
     AWB_INVENTORY B
     LEFT JOIN FLT_OPR C ON B.FLT_KEY = C.FLT_KEY AND B.FLT_DATE = C.SCH_DATE AND B.FLT_TYPE = decode(C.FLT_TYPE, 'A', 'I', 'E')
     LEFT JOIN ULD_INVENTORY D ON  B.ULD_KEY  = D.ULD_KEY
WHERE
     A.AWB_NO = B.AWB_NO AND
     A.AWB_DATE = B.AWB_DATE AND
     A.AWB_NO = UPPER(#sawbNo#) and
	 A.AWB_DATE   = to_date(#sawbDate#,'DDMONYY') 
     <isNotEmpty property="shawb">
     AND B.SEQ_NO in (SELECT SEQ_NO FROM HAWB_INVENTORY WHERE HAWB_NO = #shawb#) 
     </isNotEmpty> 
      order by seq_no
    </select> 
	
<!-- AWB Enquiry IMPORT START Here  -->
<select id="fetchAWBEnquiryImportDetails_102" parameterClass="cargo.cms.admin.report.bo.AWBEnquiry_102BO" resultClass="cargo.cms.admin.report.bo.AWBEnquiry_102BO">
	      SELECT 
			CA.ECT_HANDLER AS ectHandler, 
			pkg_common.get_awb_splcodes(CA.awb_no, CA.awb_date, 'I') spl, 	
 			CA.SHPR_NAME AS shprName, 
 			CA.APPNTD_AGENT AS appntdAgent, 
 			CA.AWB_CLOSE_RMK AS awbCloseRmark, 
 			CA.AWB_RMK AS oldAwbRemark,
		    A.AWB_NO AS awbNo,
		    SUBSTR( A.AWB_NO,1,3 ) AS awbNoPFX,
		    SUBSTR( A.AWB_NO,4 ) as awbNoSFX,
		    A.AWB_TYPE AS awbType, 
		    decode(A.CATALOG,'',CA.CATALOG,A.CATALOG) AS catalog,
            CA.LOCK_IND AS lockYN,
            decode(A.PCS,'','0',A.PCS) AS awbPcs, 
		    trim(TO_CHAR(NVL(A.WT,0),'9999990.00')) AS awbWt,						
 			A.CARR_CODE AS carrCode,
 			decode(A.PCS,'','0',A.PCS)||'/'||trim(TO_CHAR(NVL(A.WT,0),'9999990.00')) AS carrPcWt,	
            (SELECT COUNT(LICENSE) 
         FROM
            CST_LICENSE 
        WHERE
            AWB_NO = #awbNo# AND
            AWB_DATE = #awbDate#) AS licence,
            ICS.CAR_CREATED AS carYN,
            '' AS status,
            TO_CHAR( A.AWB_DATE, 'DDMONYY') AS awbDate,  
            A.IMPCAR_YN AS intelligentChk,
            CA.AGENT_CUST_NO AS agentCode,
            (A.SPL_CODE1 || DECODE(A.SPL_CODE2 ,null,'',DECODE(A.SPL_CODE1,NULL,'',',')) ||
			A.SPL_CODE2 || DECODE(A.SPL_CODE3 ,null,'',DECODE(A.SPL_CODE2,NULL,'',',')) || 
			A.SPL_CODE3 || DECODE(A.SPL_CODE4 ,null,'',DECODE(A.SPL_CODE3,NULL,'',',')) || 
			A.SPL_CODE4 || DECODE(A.SPL_CODE5 ,null,'',DECODE(A.SPL_CODE4,NULL,'',',')) || 
			A.SPL_CODE5 || DECODE(A.SPL_CODE6 ,null,'',DECODE(A.SPL_CODE5,NULL,'',',')) ||   
			A.SPL_CODE6 || DECODE(A.SPL_CODE7 ,null,'',DECODE(A.SPL_CODE6,NULL,'',',')) || 
			A.SPL_CODE7 || DECODE(A.SPL_CODE8 ,null,'',DECODE(A.SPL_CODE7,NULL,'',',')) ||  
			A.SPL_CODE8 || DECODE(A.SPL_CODE9 ,null,'',DECODE(A.SPL_CODE8,NULL,'',',')) ||  
			A.SPL_CODE9) AS splCode1,
            (SELECT COUNT(*) FROM CUST_AIRL_SPL_CODE WHERE SPL_CODE=CA.SPL_CODE1 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=CA.SPL_CODE2 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=CA.SPL_CODE3 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=CA.SPL_CODE4 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=CA.SPL_CODE5 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=CA.SPL_CODE6 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=CA.SPL_CODE7 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=CA.SPL_CODE8 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=CA.SPL_CODE9 AND SPL_TYPE='SPL_VAL') AS shpStatus, 
            CA.VAL_FOR_SCH_COLL AS schCollInd,
            CA.DOC_DLV AS docDlv,
            CA.AWB_ORIGIN AS awbOrigin, 
		    (SELECT SUM(CHRG_AMT) FROM BILL_CHARGE_DTL WHERE AWB_NO = #awbNo# AND AWB_DATE=#awbDate#) AS osCharge,
            CA.ALLOW_PACCO AS allowPacco,
            CA.DOC_CHK_REQ AS docChkReq,
            CA.AWB_DEST AS awbDest, 
            (select case when (select dut_commodity from exp_rcl_hd where awb_no=#awbNo# and awb_date=#awbDate# AND ROWNUM=1) = 'Y' then 'Y'
             else case when (select (select count(*) from cst_dc_dtl where awb_no=#awbNo#) + (select count(*) from cst_code_dtl where awb_no=#awbNo#) as result from dual) > 0
             then 'Y'
             else 'N'
             end
             end
             from dual) AS dcLock,
            CA.DOC_CHK_COMP AS docChkComp,
		    CA.CONTENT AS content, 
     		A.AWB_CLOSED_YN AS awbClosed,
            (SELECT COUNT(*) FROM CUST_UNDERTAKING CU WHERE 
                               CU.AGENT_CODE = (SELECT AGENT_CODE FROM AWB WHERE AWB_DATE=#awbDate# AND AWB_NO=#awbNo#) AND 
                               CU.CARR_CODE = (SELECT CARR_CODE FROM AWB WHERE AWB_DATE=#awbDate# AND AWB_NO=#awbNo#) AND 
                               CA.AWB_DATE BETWEEN CU.EFF_FROM AND CU.EFF_TO) AS licenceUnder,  
      
            ICS.NOA_IND AS noaSent,
            (SELECT COUNT(DOC_RCV) FROM IMP_CUST_CLR_LIST WHERE AWB_NO=#awbNo# AND AWB_DATE = #awbDate# AND DOC_RCV = 'Y') AS docRecieve,
            (SELECT cc_code FROM (SELECT t1.cc_code FROM V_CST_IMP_CC_CODE_AWB t1,mast_constraint_code t2 WHERE t1.cc_code = t2.code AND awb_no = #awbNo# AND NVL(hawb_no, '000000000000000000') = '000000000000000000' ORDER BY recv_date DESC, priority DESC) where rownum = 1) AS latestCc,
            CA.AWB_RMK AS awbRemark,
            (DECODE((select count(1) from awb where awb_no = #awbNo# and awb_date=#awbDate# and rownum=1),0,(select rmk from awb_rmk where awb_no=#awbNo# and awb_date=#awbDate# and rownum=1),CA.AIRLN_RMK)) AS airlRmk,
			(DECODE((select count(1) from awb where awb_no = #awbNo# and awb_date=#awbDate# and rownum=1),0,(select rmk from awb_rmk where awb_no=#awbNo# and awb_date=#awbDate# and rownum=1),CA.AIRLN_RMK)) AS oldAirlRmk,
			(select SEQ_NO from awb_rmk where awb_no=#awbNo# and awb_date=#awbDate# and rownum=1) AS seqNo,						
            (DECODE(A.INT_YN,'N','N',DECODE(A.AMD_YN,'N','N',DECODE(A.IMPCAR_YN,'N','N',DECODE(A.LBS_YN,'N','N',DECODE(A.DOCACC_YN,'N','N',DECODE(A.LPPS_YN,'N','N','Y'))))))) AS intStatus,
           (DECODE((select count(1) from imp_car_awb where awb_no = #awbNo# and awb_date=#awbDate# and rownum=1),0,(select awb_rmk from awb where awb_no=#awbNo# and awb_date=#awbDate# and rownum=1),CA.WH_RMK)) AS whRmk,
            (DECODE((select count(1) from imp_car_awb where awb_no = #awbNo# and awb_date=#awbDate# and rownum=1),0,(select awb_rmk from awb where awb_no=#awbNo# and awb_date=#awbDate# and rownum=1),CA.WH_RMK)) AS oldWHRmk,
            '' AS manRmk,
            (select DECODE(CONFIRMED_RMK,NULL,RMK,CONFIRMED_RMK) from exp_offload_uld_awb where awb_no=#awbNo# and awb_date=#awbDate# and (confirmed_rmk is not null OR RMK IS NOT NULL) AND ROWNUM=1) AS offloadRmk,
			CA.CSGNE_NAME as consignee,
            CA.CSGNE_ADDR AS consigneAddr,
            CA.CSGNE_ADDR1 AS consigneAddr1,
            CA.CSGNE_ADDR2 AS consigneAddr2,
            CA.CSGNE_ADDR3 AS consigneAddr3,
            CA.CSGNE_ADDR4 AS consigneAddr4,
            CA.CSGNE_ADDR5 AS consigneAddr5,
            decode(CA.CSGNE_PLACE,'','Hong Kong',CA.CSGNE_PLACE) as consCity,
	        decode(CA.CSGNE_CTRY_CODE,'',(select code_desc from mast_country mcntr where mcntr.code = 'HK'),(select code_desc from mast_country mcntr1 where mcntr1.code = CA.CSGNE_CTRY_CODE)) as consCountry,
            CA.SHPR_NAME AS shipperName,
            CA.SHPR_ADD1 AS shipperAddr,
            CA.SHPR_ADD2 AS shipperAddr1,
            CA.SHPR_ADD3 AS shipperAddr2,
            nvl(CA.SHPR_ADD4,CA.SHPR_STATE_PROVINCE) AS shipperAddr3,
            decode(CA.SHPR_CTRY_CODE,'',(select code_desc from mast_country mcntr where mcntr.code = 'HK'),(select code_desc from mast_country mcntr1 where mcntr1.code = CA.SHPR_CTRY_CODE)) as shprCountry,
	        decode(CA.SHPR_PLACE,'','',CA.SHPR_PLACE) as shprCity,
            CA.APPNTD_AGENT AS appiontedAgent,
            nvl(CA.AGENT_ADDR1,CA.AGENT_PLACE) as agentAddr,
	        CA.AGENT_ADDR2 AS agentAddr1,
	        CA.AGENT_ADDR3 AS agentAddr2,
	        CA.AGENT_ADDR4 AS agentAddr3,
	        CA.AGENT_ADDR5 AS agentAddr4,
	        ((select AWB_IMAGE_NAME FROM AWB_IMAGE WHERE seq_no = (SELECT MAX(SEQ_NO) FROM AWB_IMAGE WHERE AWB_NO = #awbNo# AND AWB_DATE = #awbDate#) )) AS transactionId,
	        DECODE(AI.AWB_IMAGE_NAME,'','Y','N') AS attachmentStatus,
	      (select count(*) from imp_car_shp shp,imp_car_awb awb where shp.awb_no = awb.awb_no and shp.awb_date = awb.awb_date and awb.awb_pcs > shp.manifest_pcs and shp.awb_no=#awbNo# and shp.awb_date=#awbDate#) AS partShipment,
	      case when (select count(1) from cust_interaction where awb_no = #awbNo# and comp_date is null and follow_up_date is not null) > 0 then 'Y' else 'N' end AS pendingAction,
			TO_CHAR(CA.LM_DATE, 'DDMONYY HH24:MI:SS') AS lmDate,
			CA.SHPR_STATE_PROVINCE shipperState,
			CA.CSGNE_STATE_PROVINCE consigneeState 
	  FROM 
	   AWB A,
	   IMP_CAR_AWB CA,
       IMP_CAR_SHP ICS,
       AWB_IMAGE AI  
   WHERE
       CA.AWB_NO(+) = A.AWB_NO AND
       CA.AWB_DATE(+) = A.AWB_DATE AND
       ICS.AWB_NO(+) = A.AWB_NO AND 
       ICS.AWB_DATE(+) = A.AWB_DATE AND
       AI.AWB_NO(+) = A.AWB_NO AND
       AI.AWB_DATE(+) = A.AWB_DATE AND
       A.AWB_NO = #awbNo# AND
       A.AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY')
       AND ((select count(1) from imp_car_awb where awb_no=#awbNo# and awb_date=#awbDate#) > 0)
        UNION
         SELECT 
			'' AS ectHandler, 
			pkg_common.get_awb_splcodes(FWB.awb_no, FWB.awb_date, 'I') spl, 	
 			FWB.SHPR_NAME AS shprName, 
 			FWB.AGENT_NAME AS appntdAgent, 
 			'' AS awbCloseRmark, 
 			'' AS oldAwbRemark,
		    A.AWB_NO AS awbNo,
		    SUBSTR( A.AWB_NO,1,3 ) AS awbNoPFX,
		    SUBSTR( A.AWB_NO,4 ) as awbNoSFX,
		    A.AWB_TYPE AS awbType, 
			A.CATALOG AS catalog,
            '' AS lockYN,
            decode(A.PCS,'','0',A.PCS) AS awbPcs, 
		    trim(TO_CHAR(NVL(A.WT,0),'9999990.00')) AS awbWt,
 			A.CARR_CODE AS carrCode,
 			decode(A.PCS,'','0',A.PCS)||'/'||trim(TO_CHAR(NVL(A.WT,0),'9999990.00')) AS carrPcWt,	
            (SELECT COUNT(LICENSE) 
         FROM
            CST_LICENSE 
        WHERE
            AWB_NO = #awbNo# AND
            AWB_DATE = #awbDate#) AS licence,
            NVL(ICS.CAR_CREATED,'N') AS carYN,
            '' AS status,
            TO_CHAR( A.AWB_DATE, 'DDMONYY') AS awbDate,  
            A.IMPCAR_YN AS intelligentChk,
            '' AS agentCode,
            (FWB.SPH_SPL_CODE1 || DECODE(FWB.SPH_SPL_CODE2 ,null,'',DECODE(FWB.SPH_SPL_CODE1,NULL,'',',')) ||
			FWB.SPH_SPL_CODE2 || DECODE(FWB.SPH_SPL_CODE3 ,null,'',DECODE(FWB.SPH_SPL_CODE2,NULL,'',',')) || 
			FWB.SPH_SPL_CODE3 || DECODE(FWB.SPH_SPL_CODE4 ,null,'',DECODE(FWB.SPH_SPL_CODE3,NULL,'',',')) || 
			FWB.SPH_SPL_CODE4 || DECODE(FWB.SPH_SPL_CODE5 ,null,'',DECODE(FWB.SPH_SPL_CODE4,NULL,'',',')) || 
			FWB.SPH_SPL_CODE5 || DECODE(FWB.SPH_SPL_CODE6 ,null,'',DECODE(FWB.SPH_SPL_CODE5,NULL,'',',')) ||   
			FWB.SPH_SPL_CODE6 || DECODE(FWB.SPH_SPL_CODE7 ,null,'',DECODE(FWB.SPH_SPL_CODE6,NULL,'',',')) || 
			FWB.SPH_SPL_CODE7 || DECODE(FWB.SPH_SPL_CODE8 ,null,'',DECODE(FWB.SPH_SPL_CODE7,NULL,'',',')) ||  
			FWB.SPH_SPL_CODE8 || DECODE(FWB.SPH_SPL_CODE9 ,null,'',DECODE(FWB.SPH_SPL_CODE8,NULL,'',',')) ||  
			FWB.SPH_SPL_CODE9) AS splCode1,
            (SELECT COUNT(*) FROM CUST_AIRL_SPL_CODE WHERE SPL_CODE=FWB.SPH_SPL_CODE1 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=FWB.SPH_SPL_CODE2 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=FWB.SPH_SPL_CODE3 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=FWB.SPH_SPL_CODE4 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=FWB.SPH_SPL_CODE5 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=FWB.SPH_SPL_CODE6 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=FWB.SPH_SPL_CODE7 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=FWB.SPH_SPL_CODE8 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=FWB.SPH_SPL_CODE9 AND SPL_TYPE='SPL_VAL') AS shpStatus, 
            '' AS schCollInd,
            '' AS docDlv,
            FWB.ORG AS awbOrigin, 
		    (SELECT SUM(CHRG_AMT) FROM BILL_CHARGE_DTL WHERE AWB_NO = #awbNo# AND AWB_DATE=#awbDate#) AS osCharge,
            '' AS allowPacco,
            '' AS docChkReq,
            FWB.DES AS awbDest, 
            (select case when (select dut_commodity from exp_rcl_hd where awb_no=#awbNo# and awb_date=#awbDate# AND ROWNUM=1) = 'Y' then 'Y'
             else case when (select (select count(*) from cst_dc_dtl where awb_no=#awbNo#) + (select count(*) from cst_code_dtl where awb_no=#awbNo#) as result from dual) > 0
             then 'Y'
             else 'N'
             end
             end
             from dual) AS dcLock,
            '' AS docChkComp,
		    '' AS content, 
     		A.AWB_CLOSED_YN AS awbClosed,
            (SELECT COUNT(*) FROM CUST_UNDERTAKING CU WHERE 
                               CU.AGENT_CODE = (SELECT AGENT_CODE FROM AWB WHERE AWB_DATE=#awbDate# AND AWB_NO=#awbNo#) AND 
                               CU.CARR_CODE = (SELECT CARR_CODE FROM AWB WHERE AWB_DATE=#awbDate# AND AWB_NO=#awbNo#) AND 
                               FWB.AWB_DATE BETWEEN CU.EFF_FROM AND CU.EFF_TO) AS licenceUnder,  
      
            ICS.NOA_IND AS noaSent,
            (SELECT COUNT(DOC_RCV) FROM IMP_CUST_CLR_LIST WHERE AWB_NO=#awbNo# AND AWB_DATE = #awbDate# AND DOC_RCV = 'Y') AS docRecieve,
			(select cc_code from V_CST_IMP_CC_CODE_AWB where awb_no=#awbNo# AND ROWNUM=1) AS latestCc,
            '' AS awbRemark,
            (DECODE((select rmk from awb_rmk where awb_no = #awbNo# and awb_date=#awbDate# and rownum=1),'','',(select rmk from awb_rmk where awb_no=#awbNo# and awb_date=#awbDate# and rownum=1))) AS airlRmk,
			(DECODE((select rmk from awb_rmk where awb_no = #awbNo# and awb_date=#awbDate# and rownum=1),'','',(select rmk from awb_rmk where awb_no=#awbNo# and awb_date=#awbDate# and rownum=1))) AS oldAirlRmk,
			(select SEQ_NO from awb_rmk where awb_no=#awbNo# and awb_date=#awbDate# and rownum=1) AS seqNo,						
            (DECODE(A.INT_YN,'N','N',DECODE(A.AMD_YN,'N','N',DECODE(A.IMPCAR_YN,'N','N',DECODE(A.LBS_YN,'N','N',DECODE(A.DOCACC_YN,'N','N',DECODE(A.LPPS_YN,'N','N','Y'))))))) AS intStatus,
            '' AS whRmk,
			'' AS oldWHRmk,
            '' AS manRmk,
            (select DECODE(CONFIRMED_RMK,NULL,RMK,CONFIRMED_RMK) from exp_offload_uld_awb where awb_no=#awbNo# and awb_date=#awbDate# and (confirmed_rmk is not null OR RMK IS NOT NULL) AND ROWNUM=1) AS offloadRmk,
			FWB.CSGNE_NAME as consignee,
            FWB.CSGNE_ADDR AS consigneAddr,
            FWB.CSGNE_STATE_PROVINCE AS consigneAddr1,
            '' AS consigneAddr2,
            '' AS consigneAddr3,
            '' AS consigneAddr4,
            '' AS consigneAddr5,
            decode(FWB.CSGNE_PLACE,'','Hong Kong',FWB.CSGNE_PLACE) as consCity,
	        decode(FWB.CSGNE_CTRY_CODE,'',(select code_desc from mast_country mcntr where mcntr.code = 'HK'),(select code_desc from mast_country mcntr1 where mcntr1.code = FWB.CSGNE_CTRY_CODE)) as consCountry,
            FWB.SHPR_NAME AS shipperName,
            FWB.SHPR_ADDR AS shipperAddr,
            decode(FWB.SHPR_PLACE,'','Hong Kong',FWB.SHPR_PLACE) AS shipperAddr1,
						'' AS shipperAddr2,            
            FWB.SHPR_STATE_PROVINCE AS shipperAddr3,
            decode(FWB.SHPR_CTRY_CODE,'',(select code_desc from mast_country mcntr where mcntr.code = 'HK'),(select code_desc from mast_country mcntr1 where mcntr1.code = FWB.SHPR_CTRY_CODE)) as shprCountry,
	        '' as shprCity,
            FWB.AGENT_NAME AS appiontedAgent,
	        FWB.AGENT_PLACE AS agentAddr,
	        '' AS agentAddr1,
	        '' AS agentAddr2,
	        '' AS agentAddr3,
	        '' AS agentAddr4,
	        ((select AWB_IMAGE_NAME FROM AWB_IMAGE WHERE seq_no = (SELECT MAX(SEQ_NO) FROM AWB_IMAGE WHERE AWB_NO = #awbNo# AND AWB_DATE = #awbDate#) )) AS transactionId,
	        DECODE(AI.AWB_IMAGE_NAME,'','Y','N') AS attachmentStatus,
	      (select count(*) from imp_car_shp shp,imp_car_awb awb where shp.awb_no = awb.awb_no and shp.awb_date = awb.awb_date and awb.awb_pcs > shp.manifest_pcs and shp.awb_no=#awbNo# and shp.awb_date=#awbDate#) AS partShipment,
	      case when (select count(1) from cust_interaction where awb_no = #awbNo# and comp_date is null and follow_up_date is not null) > 0 then 'Y' else 'N' end AS pendingAction,
			TO_CHAR(FWB.LM_DATE, 'DDMONYY HH24:MI:SS') AS lmDate,
			'' shipperState,
			'' consigneeState 
	  FROM 
	   AWB A,
	   EDI_FWB FWB,
       IMP_CAR_SHP ICS,
       AWB_IMAGE AI
   WHERE
       FWB.AWB_NO(+) = A.AWB_NO AND
       FWB.AWB_DATE(+) = A.AWB_DATE AND
       ICS.AWB_NO(+) = A.AWB_NO AND 
       ICS.AWB_DATE(+) = A.AWB_DATE AND
       A.AWB_NO = #awbNo# AND
       A.AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY')
        AND ((select count(1) from imp_car_awb where awb_no=#awbNo# and awb_date=#awbDate#) = 0)
        UNION
         SELECT 
			CA.ECT_HANDLER AS ectHandler, 
			pkg_common.get_awb_splcodes(CA.awb_no, CA.awb_date, 'I') spl, 	
 			CA.SHPR_NAME AS shprName, 
 			CA.APPNTD_AGENT AS appntdAgent, 
 			CA.AWB_CLOSE_RMK AS awbCloseRmark, 
 			CA.AWB_RMK AS oldAwbRemark,
		    A.AWB_NO AS awbNo,
		    SUBSTR( A.AWB_NO,1,3 ) AS awbNoPFX,
		    SUBSTR( A.AWB_NO,4 ) as awbNoSFX,
		    A.AWB_TYPE AS awbType, 
		    decode(A.CATALOG,'',CA.CATALOG,A.CATALOG) AS catalog,
            CA.LOCK_IND AS lockYN,
            decode(A.PCS,'','0',A.PCS) AS awbPcs, 
		    trim(TO_CHAR(NVL(A.WT,0),'9999990.00')) AS awbWt,						
 			A.CARR_CODE AS carrCode,
 			decode(A.PCS,'','0',A.PCS)||'/'||trim(TO_CHAR(NVL(A.WT,0),'9999990.00')) AS carrPcWt,	
            (SELECT COUNT(LICENSE) 
         FROM
            CST_LICENSE 
        WHERE
            AWB_NO = #awbNo# AND
            AWB_DATE = #awbDate#) AS licence,
            ICS.CAR_CREATED AS carYN,
            '' AS status,
            TO_CHAR( A.AWB_DATE, 'DDMONYY') AS awbDate,  
            A.IMPCAR_YN AS intelligentChk,
            CA.AGENT_CUST_NO AS agentCode,
            (CA.SPL_CODE1 || DECODE(CA.SPL_CODE2 ,null,'',DECODE(CA.SPL_CODE1,NULL,'',',')) ||
			CA.SPL_CODE2 || DECODE(CA.SPL_CODE3 ,null,'',DECODE(CA.SPL_CODE2,NULL,'',',')) || 
			CA.SPL_CODE3 || DECODE(CA.SPL_CODE4 ,null,'',DECODE(CA.SPL_CODE3,NULL,'',',')) || 
			CA.SPL_CODE4 || DECODE(CA.SPL_CODE5 ,null,'',DECODE(CA.SPL_CODE4,NULL,'',',')) || 
			CA.SPL_CODE5 || DECODE(CA.SPL_CODE6 ,null,'',DECODE(CA.SPL_CODE5,NULL,'',',')) ||   
			CA.SPL_CODE6 || DECODE(CA.SPL_CODE7 ,null,'',DECODE(CA.SPL_CODE6,NULL,'',',')) || 
			CA.SPL_CODE7 || DECODE(CA.SPL_CODE8 ,null,'',DECODE(CA.SPL_CODE7,NULL,'',',')) ||  
			CA.SPL_CODE8 || DECODE(CA.SPL_CODE9 ,null,'',DECODE(CA.SPL_CODE8,NULL,'',',')) ||  
			CA.SPL_CODE9) AS splCode1,
            (SELECT COUNT(*) FROM CUST_AIRL_SPL_CODE WHERE SPL_CODE=CA.SPL_CODE1 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=CA.SPL_CODE2 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=CA.SPL_CODE3 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=CA.SPL_CODE4 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=CA.SPL_CODE5 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=CA.SPL_CODE6 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=CA.SPL_CODE7 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=CA.SPL_CODE8 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=CA.SPL_CODE9 AND SPL_TYPE='SPL_VAL') AS shpStatus, 
            CA.VAL_FOR_SCH_COLL AS schCollInd,
            CA.DOC_DLV AS docDlv,
            CA.AWB_ORIGIN AS awbOrigin, 
		    (SELECT SUM(CHRG_AMT) FROM BILL_CHARGE_DTL WHERE AWB_NO = #awbNo# AND AWB_DATE=#awbDate#) AS osCharge,
            CA.ALLOW_PACCO AS allowPacco,
            CA.DOC_CHK_REQ AS docChkReq,
            CA.AWB_DEST AS awbDest, 
            (select case when (select dut_commodity from exp_rcl_hd where awb_no=#awbNo# and awb_date=#awbDate# AND ROWNUM=1) = 'Y' then 'Y'
             else case when (select (select count(*) from cst_dc_dtl where awb_no=#awbNo#) + (select count(*) from cst_code_dtl where awb_no=#awbNo#) as result from dual) > 0
             then 'Y'
             else 'N'
             end
             end
             from dual) AS dcLock,
            CA.DOC_CHK_COMP AS docChkComp,
		    CA.CONTENT AS content, 
     		A.AWB_CLOSED_YN AS awbClosed,
            (SELECT COUNT(*) FROM CUST_UNDERTAKING CU WHERE 
                               CU.AGENT_CODE = (SELECT AGENT_CODE FROM AWB WHERE AWB_DATE=#awbDate# AND AWB_NO=#awbNo#) AND 
                               CU.CARR_CODE = (SELECT CARR_CODE FROM AWB WHERE AWB_DATE=#awbDate# AND AWB_NO=#awbNo#) AND 
                               CA.AWB_DATE BETWEEN CU.EFF_FROM AND CU.EFF_TO) AS licenceUnder,  
      
            ICS.NOA_IND AS noaSent,
            (SELECT COUNT(DOC_RCV) FROM IMP_CUST_CLR_LIST WHERE AWB_NO=#awbNo# AND AWB_DATE = #awbDate# AND DOC_RCV = 'Y') AS docRecieve,
           (select cc_code from V_CST_IMP_CC_CODE_AWB where awb_no=#awbNo# AND ROWNUM=1) AS latestCc,
            CA.AWB_RMK AS awbRemark,
            (DECODE((select count(1) from awb where awb_no = #awbNo# and awb_date=#awbDate# and rownum=1),0,(select rmk from awb_rmk where awb_no=#awbNo# and awb_date=#awbDate# and rownum=1),CA.AIRLN_RMK)) AS airlRmk,
			(DECODE((select count(1) from awb where awb_no = #awbNo# and awb_date=#awbDate# and rownum=1),0,(select rmk from awb_rmk where awb_no=#awbNo# and awb_date=#awbDate# and rownum=1),CA.AIRLN_RMK)) AS oldAirlRmk,
			(select SEQ_NO from awb_rmk where awb_no=#awbNo# and awb_date=#awbDate# and rownum=1) AS seqNo,						
            (DECODE(A.INT_YN,'N','N',DECODE(A.AMD_YN,'N','N',DECODE(A.IMPCAR_YN,'N','N',DECODE(A.LBS_YN,'N','N',DECODE(A.DOCACC_YN,'N','N',DECODE(A.LPPS_YN,'N','N','Y'))))))) AS intStatus,
            (DECODE((select count(1) from imp_car_awb where awb_no = #awbNo# and awb_date=#awbDate# and rownum=1),0,(select awb_rmk from awb where awb_no=#awbNo# and awb_date=#awbDate# and rownum=1),CA.WH_RMK)) AS whRmk,
            (DECODE((select count(1) from imp_car_awb where awb_no = #awbNo# and awb_date=#awbDate# and rownum=1),0,(select awb_rmk from awb where awb_no=#awbNo# and awb_date=#awbDate# and rownum=1),CA.WH_RMK)) AS oldWHRmk,
            '' AS manRmk,
            (select DECODE(CONFIRMED_RMK,NULL,RMK,CONFIRMED_RMK) from exp_offload_uld_awb where awb_no=#awbNo# and awb_date=#awbDate# and (confirmed_rmk is not null OR RMK IS NOT NULL) AND ROWNUM=1) AS offloadRmk,
			CA.CSGNE_NAME as consignee,
            CA.CSGNE_ADDR AS consigneAddr,
            CA.CSGNE_ADDR1 AS consigneAddr1,
            CA.CSGNE_ADDR2 AS consigneAddr2,
            CA.CSGNE_ADDR3 AS consigneAddr3,
            CA.CSGNE_ADDR4 AS consigneAddr4,
            CA.CSGNE_ADDR5 AS consigneAddr5,
            decode(CA.CSGNE_PLACE,'','Hong Kong',CA.CSGNE_PLACE) as consCity,
	        decode(CA.CSGNE_CTRY_CODE,'',(select code_desc from mast_country mcntr where mcntr.code = 'HK'),(select code_desc from mast_country mcntr1 where mcntr1.code = CA.CSGNE_CTRY_CODE)) as consCountry,
            CA.SHPR_NAME AS shipperName,
            CA.SHPR_ADD1 AS shipperAddr,
            CA.SHPR_ADD2 AS shipperAddr1,
            CA.SHPR_ADD3 AS shipperAddr2,
            CA.SHPR_ADD4 AS shipperAddr3,
            decode(CA.SHPR_CTRY_CODE,'',(select code_desc from mast_country mcntr where mcntr.code = 'HK'),(select code_desc from mast_country mcntr1 where mcntr1.code = CA.SHPR_CTRY_CODE)) as shprCountry,
	        decode(CA.SHPR_PLACE,'','Hong Kong',CA.SHPR_PLACE) as shprCity,
            CA.APPNTD_AGENT AS appiontedAgent,
	        CA.AGENT_ADDR1 AS agentAddr,
	        CA.AGENT_ADDR2 AS agentAddr1,
	        CA.AGENT_ADDR3 AS agentAddr2,
	        CA.AGENT_ADDR4 AS agentAddr3,
	        CA.AGENT_ADDR5 AS agentAddr4,
	        ((select AWB_IMAGE_NAME FROM AWB_IMAGE WHERE seq_no = (SELECT MAX(SEQ_NO) FROM AWB_IMAGE WHERE AWB_NO = #awbNo# AND AWB_DATE = #awbDate#) )) AS transactionId,
	        DECODE(AI.AWB_IMAGE_NAME,'','Y','N') AS attachmentStatus,
	      (select count(*) from imp_car_shp shp,imp_car_awb awb where shp.awb_no = awb.awb_no and shp.awb_date = awb.awb_date and awb.awb_pcs > shp.manifest_pcs and shp.awb_no=#awbNo# and shp.awb_date=#awbDate#) AS partShipment,
	      case when (select count(1) from cust_interaction where awb_no = #awbNo# and comp_date is null and follow_up_date is not null) > 0 then 'Y' else 'N' end AS pendingAction,
			TO_CHAR(CA.LM_DATE, 'DDMONYY HH24:MI:SS') AS lmDate,
			CA.SHPR_STATE_PROVINCE shipperState,
			CA.CSGNE_STATE_PROVINCE consigneeState 
	  FROM 
	   AWB A,
	   IMP_CAR_AWB CA,
       IMP_CAR_SHP ICS,
       AWB_IMAGE AI      
   WHERE
       CA.AWB_NO(+) = A.AWB_NO AND
       CA.AWB_DATE(+) = A.AWB_DATE AND
       ICS.AWB_NO(+) = A.AWB_NO AND 
       ICS.AWB_DATE(+) = A.AWB_DATE AND
       AI.AWB_NO(+) = A.AWB_NO AND
       AI.AWB_DATE(+) = A.AWB_DATE AND
       A.AWB_NO = #awbNo# AND
       A.AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY')
         AND ((select count(1) from imp_car_awb where awb_no=#awbNo# and awb_date=#awbDate#) = 0)
        AND ((select count(1) from edi_fwb where awb_no=#awbNo# and awb_date=#awbDate#) = 0)
</select>
<!-- Common for IMPORT And TRANSHIPMENT -->
<select id="fetchAWBEnquiryImportOrTranshipmentSRFDetails_102" parameterClass="cargo.cms.admin.report.bo.AWBEnquiry_102BO" resultClass="cargo.cms.admin.report.bo.AWBEnquiry_102BO">
		SELECT 
		    T1.SRF_NO AS srfNo,
			SUBSTR(T1.SRF_NO,1,6)||'-'||SUBSTR(T1.SRF_NO,7) as srfNoDisp, 
			T1.SRF_PCS AS srfPcs,  
			DECODE(T1.SRF_WT,null,'',trim(TO_CHAR(NVL(T1.SRF_WT,0),'99999990.0'))) AS srfWt,
			<!-- T1.SRF_PCS AS dlvPcs, 
			T1.SRF_PCS AS dlvWt, -->
			(select sum(SF.DLV_PCS) from IMP_SRF_FLT SF WHERE SF.SRF_NO=T1.SRF_NO) AS relPcs,
            (select sum(SF.DLV_WT) from IMP_SRF_FLT SF WHERE SF.SRF_NO=T1.SRF_NO) AS relWt,
			CASE WHEN T1.SRF_EXPY_DATE &lt; SYSDATE and STATUS = 'ISSUED' THEN 'EXPIRED' 
				 WHEN STATUS = 'REISSUED' THEN 'VOID'
				 ELSE T1.STATUS END AS statusSrf,  
			SUBSTR(T4.CDIF_NO,1,6)  cdifNoPrefix , 
			SUBSTR(T4.CDIF_NO,7)  cdifNoSuffix , 
			T4.CDIF_NO AS cdifNo,  
			T4.UTLPCS AS utlPcs, 
			DECODE(T4.UTLWT,null,'',trim(TO_CHAR(NVL(T4.UTLWT,0),'99999990.0'))) AS utlWt, 
			T4.UTLWT AS utlWt, 
			T4.PSPCS AS psPcs,
			DECODE(T4.PSWT,null,'',trim(TO_CHAR(NVL(T4.PSWT,0),'99999990.0'))) AS psWt,   
			T4.DTPCS AS dtPcs,  
			DECODE(T4.DTWT,null,'',trim(TO_CHAR(NVL(T4.DTWT,0),'99999990.0'))) AS dtWt
		FROM 
			IMP_SRF T1
			LEFT JOIN (SELECT T2.SRF_NO,  T2.CDIF_NO, SUM(CDIF_UTL_PCS) AS UTLPCS, SUM(CDIF_UTL_WT) AS UTLWT, SUM(CDIF_PS_PCS) AS PSPCS, 
							  SUM(CDIF_PS_WT) AS PSWT, SUM(CDIF_DT_PCS) AS DTPCS, SUM(CDIF_DT_WT) AS DTWT 
						FROM IMP_CDIF T2, IMP_CDIF_HAWB T3 WHERE T2.CDIF_NO = T3.CDIF_NO and t2.VOID_USER is null
						GROUP BY T2.SRF_NO, T2.CDIF_NO) T4  
				ON T4.SRF_NO = T1.SRF_NO
		WHERE 
				T1.AWB_NO = #awbNo#
			AND TO_CHAR( T1.AWB_DATE, 'DDMONYY') = #awbDate#
		ORDER BY T1.SRF_DATE
</select>
<select id="fetchAWBEnquirySummaryDetails_102" parameterClass="cargo.cms.admin.report.bo.AWBEnquiry_102BO" resultClass="cargo.cms.admin.report.bo.AWBEnquiry_102BO">
     SELECT 
    (SELECT SUM(ICS.MANIFEST_PCS) FROM IMP_CAR_SHP ICS WHERE ICS.AWB_NO = #awbNo# AND ICS.AWB_DATE = #awbDate#  and car_created = 'Y') AS smanifestPcs,
    (SELECT DECODE(SUM(ICS.MANIFEST_WT),null,'',trim(TO_CHAR(NVL(SUM(ICS.MANIFEST_WT),0),'99999990.00'))) FROM IMP_CAR_SHP ICS WHERE ICS.AWB_NO = #awbNo# AND ICS.AWB_DATE = #awbDate#  and car_created = 'Y') AS smanifestWt,
    (SELECT DECODE(SUM(ICS.RECD_PCS),NULL,'',SUM(ICS.RECD_PCS)) FROM IMP_CAR_SHP ICS WHERE ICS.AWB_NO = #awbNo# AND ICS.AWB_DATE = #awbDate#) AS sbupPcs,
    (SELECT DECODE(sum(ICS.RECD_WT),null,'',trim(TO_CHAR(NVL(sum(ICS.RECD_WT),0),'99999990.00')))  FROM IMP_CAR_SHP ICS WHERE ICS.AWB_NO = #awbNo# AND ICS.AWB_DATE = #awbDate#) AS sbupWt,
    (SELECT decode(bupPcs,'','',bupPcs - (SELECT DECODE(SUM(LOCN_PCS),'',0,SUM(LOCN_PCS)) FROM AWB_INVENTORY WHERE AWB_NO=#awbNo# AND AWB_DATE=#awbDate#)) from( 
    SELECT DECODE(SUM(ICS.RECD_PCS),'','','0','',SUM(ICS.RECD_PCS)) bupPcs FROM IMP_CAR_SHP ICS WHERE ICS.AWB_NO = #awbNo# AND ICS.AWB_DATE = #awbDate#)) AS sreleasePcs,
    (SELECT decode(bupWt,'','','0','',bupWt - (SELECT DECODE(SUM(LOCN_WT),'',0,SUM(LOCN_WT)) FROM AWB_INVENTORY WHERE AWB_NO=#awbNo# AND AWB_DATE=#awbDate#)) from( 
    SELECT DECODE(SUM(ICS.RECD_WT),'','',SUM(ICS.RECD_WT)) bupWt FROM IMP_CAR_SHP ICS WHERE ICS.AWB_NO = #awbNo# AND ICS.AWB_DATE = #awbDate#)) AS sreleaseWt,
    (SELECT SUM(ICA.AWB_PCS) FROM IMP_CAR_AWB ICA WHERE ICA.AWB_NO = #awbNo# AND ICA.AWB_DATE = #awbDate#) As stotalPcs,
    (SELECT DECODE(SUM(ICA.AWB_WT),null,'','0','',trim(TO_CHAR(NVL(SUM(ICA.AWB_WT),0),'99999990.00'))) FROM IMP_CAR_AWB ICA WHERE ICA.AWB_NO = #awbNo# AND ICA.AWB_DATE = #awbDate#) As stotalWt
    FROM DUAL
</select>
<select id="fetchAWBEnquiryStorageDetails_102" parameterClass="cargo.cms.admin.report.bo.AWBEnquiry_102BO" resultClass="cargo.cms.admin.report.bo.AWBEnquiry_102BO">
		SELECT
		AWB.LSP_NO AS lspNo,
	      AWB.ULD_KEY AS uldKey,
	      AWB.LOCN_PCS AS locnPcs,
	      LOCN_WT AS locnWt,
        INV.contr_code contrCode, AWB.loc_code locnCode	      
	  FROM
	      AWB_INVENTORY AWB LEFT OUTER JOIN ULD_INVENTORY INV ON AWB.uld_key=INV.uld_key
	 WHERE
	      AWB_NO = #awbNo# AND 
	      AWB_DATE = #awbDate#
	       <isNotEmpty property="loginCarrier">
                AND   (AWB.CARR_CODE = #loginCarrier# 
                OR AWB.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP 
                WHERE GRP_CARR_CODE     = #loginCarrier#))                                          
          </isNotEmpty>
</select>
<select id="fetchAWBEnquiryFlightDetails_102" parameterClass="cargo.cms.admin.report.bo.AWBEnquiry_102BO" resultClass="cargo.cms.admin.report.bo.AWBEnquiry_102BO">
	 SELECT 
	  ICS.CARR_CODE carrCode,
      ICS.FLT_KEY AS fltNo,
      TO_CHAR (ICS.FLT_DATE, 'DDMONYY') AS fltDate,
      ICS.FLT_TYPE AS fltType,
     (select carr_code from flt_opr where flt_key = ICS.FLT_KEY and sch_date = ICS.FLT_DATE and flt_type = decode(ICS.FLT_TYPE,'I','A','A','A','D','D','D')) fltCarr,
      pkg_common.get_flt_ata(ICS.FLT_KEY, ICS.FLT_DATE,'A') AS ata,
      DECODE(ICS.MANIFEST_PCS,null,'','0','',ICS.MANIFEST_PCS) AS manifestPcs,
      DECODE(ICS.MANIFEST_WT,null,'','0','',DECODE(trim(TO_CHAR(NVL(ICS.MANIFEST_WT,0),'99999990.00')),'0.0','',trim(TO_CHAR(NVL(ICS.MANIFEST_WT,0),'99999990.00')))) AS manifestWt,
      DECODE(ICS.RECD_PCS,null,'','0','',ICS.RECD_PCS) AS bdPcs,
      DECODE(ICS.RECD_WT,null,'','0','',DECODE(trim(TO_CHAR(NVL(ICS.RECD_WT,0),'99999990.00')),'0.0','',trim(TO_CHAR(NVL(ICS.RECD_WT,0),'99999990.00')))) AS bdWt,
      DECODE(ISRF.SRFPCS,null,'','0','',ISRF.SRFPCS) AS  srfpcs,
      DECODE(ISRF.SRFWT,null,'','0','',DECODE(trim(TO_CHAR(NVL(ISRF.SRFWT,0),'99999990.00')),'0.0','',trim(TO_CHAR(NVL(ISRF.SRFWT,0),'99999990.00')))) AS  srfwt,
      (SELECT DECODE(ICS.RECD_PCS,null,'','0','',ICS.RECD_PCS - nvl((SELECT DECODE(SUM(LOCN_PCS),'0','',SUM(LOCN_PCS)) FROM AWB_INVENTORY WHERE AWB_NO=#awbNo# AND AWB_DATE=#awbDate# AND FLT_KEY = ICS.FLT_KEY AND FLT_DATE = ICS.FLT_DATE AND FLT_TYPE='I' ),'0'))  FROM DUAL) AS releasePcs,
      (select DECODE(ICS.RECD_WT,null,'','0','',DECODE(trim(TO_CHAR(NVL(ICS.RECD_WT,0),'99999990.00')),'0','',trim(TO_CHAR(NVL(ICS.RECD_WT - (SELECT DECODE(SUM(LOCN_WT),'',0,SUM(LOCN_WT)) FROM AWB_INVENTORY WHERE AWB_NO=#awbNo# AND AWB_DATE=#awbDate# AND FLT_KEY = ICS.FLT_KEY AND FLT_DATE = ICS.FLT_DATE AND FLT_TYPE='I' ),0),'99999990.00')))) from dual) AS releaseWt,
      VCCODE.CC_CODE AS cc,
(SELECT STRAGG(STRINGDELIM(A.TRF_TYPE , ',')) FROM
  (SELECT DS.AWB_NO,DS.AWB_DATE,DM.FLT_KEY,DM.FLT_DATE,TRF_TYPE
    FROM DDT_SHP_TRF_DTL DTL,      DDT_SHP DS,      DDT_MSG DM
    WHERE 
    DS.DOC_LINE_NO=DTL.DOC_LINE_NO
    AND DS.TR_NO      =DTL.TR_NO
    AND DM.TR_NO      = DTL.TR_NO
    AND DM.DDT_STATUS = 'P'
    GROUP BY TRF_TYPE,DS.AWB_NO,DS.AWB_DATE,DM.FLT_KEY,DM.FLT_DATE) A WHERE A.AWB_NO=ICS.AWB_NO AND A.AWB_DATE=ICS.AWB_DATE AND A.FLT_KEY=ICS.FLT_KEY AND A.FLT_DATE=ICS.FLT_DATE
    and exists(select null from flt_opr_events where flt_key=A.FLT_KEY and sch_date=A.FLT_DATE and flt_type='A' and ddt_finalise_date is not null)) AS subType,
      decode(ICS.BULK_PCS,null,'','0','',ICS.BULK_PCS) AS blkPcs,
      DECODE(ICS.BULK_WT,null,'','0','',trim(TO_CHAR(NVL(ICS.BULK_WT,0),'99999990.00'))) AS blkWt,
      decode(ICS.BUP_PCS,null,'','0','',ICS.BUP_PCS) AS ppkPcs,
      DECODE(ICS.BUP_WT,null,'','0','',trim(TO_CHAR(NVL(ICS.BUP_WT,0),'99999990.00'))) AS ppkWt
    FROM
    IMP_CAR_SHP ICS  
    LEFT JOIN (SELECT SF.AWB_NO, SF.AWB_DATE, SF.ORIG_FLT_KEY, SF.ORIG_FLT_DATE,SUM(SR.SRF_PCS) SRFPCS, SUM(SR.SRF_WT) SRFWT,SUM(SF.DLV_PCS) RELPCS,
               SUM(DLV_WT) RELWT
               FROM IMP_SRF SR 
			         join IMP_SRF_FLT SF ON SR.SRF_NO = SF.SRF_NO
               WHERE ((SR.STATUS ='ISSUED' and SR.SRF_EXPY_DATE > SYSDATE) OR (SR.STATUS ='POSTED' or
				       SR.SRF_NO IN (SELECT SRF_NO FROM IMP_CDIF WHERE VOID_DATE IS NULL)))  
              GROUP BY SF.AWB_NO, SF.AWB_DATE, SF.ORIG_FLT_KEY, SF.ORIG_FLT_DATE
		) ISRF ON ICS.AWB_NO = ISRF.AWB_NO AND
			ICS.AWB_DATE = ISRF.AWB_DATE AND
			ICS.FLT_KEY = ISRF.ORIG_FLT_KEY AND
			ICS.FLT_DATE = ISRF.ORIG_FLT_DATE
  LEFT JOIN V_CST_IMP_CC_CODE_AWB VCCODE ON VCCODE.FLT_KEY=ICS.FLT_KEY AND VCCODE.FLT_DATE=ICS.FLT_DATE AND VCCODE.AWB_NO=ICS.AWB_NO AND VCCODE.HAWB_NO='000000000000000000'
  Where ICS.AWB_NO = #awbNo# AND 
          ICS.AWB_DATE = to_date(#awbDate#,'DDMONYY')
ORDER BY ICS.AWB_DATE
</select>
<!-- Common List for All AWB TYPES -->
<select id="fetchAWBEnquiryConsignmentDetailsForAllTypes_102" parameterClass="cargo.cms.admin.report.bo.AWBEnquiry_102BO" resultClass="cargo.cms.admin.report.bo.AWBEnquiry_102BO">
	select 
    distinct
     (SELECT count(*)
   FROM
     AWB A,
     AWB_INVENTORY B
     LEFT JOIN FLT_OPR C ON B.FLT_KEY = C.FLT_KEY AND B.FLT_DATE = C.SCH_DATE AND B.FLT_TYPE = decode(C.FLT_TYPE, 'A', 'I', 'E')
     LEFT JOIN ULD_INVENTORY D ON  B.ULD_KEY  = D.ULD_KEY
WHERE
     A.AWB_NO = B.AWB_NO AND
     A.AWB_DATE = B.AWB_DATE AND
     A.AWB_NO = UPPER(#awbNo#) and
	 A.AWB_DATE   = to_date(#awbDate#,'DDMONYY')) AS storageLocation,
     PKG_CST_DC.awb_enq_licenses_count(#awbNo#,#awbDate#) AS licence,
     (SELECT			   
	    COUNT(*)
      FROM
      ( SELECT 
			  A.AWB_NO AS awbNo,
			  SUBSTR( A.AWB_NO,1,3 ) AS awbNoPFX,
			  SUBSTR( A.AWB_NO,4 ) as awbNoSFX,
			  A.CR_USER_ID AS rmkUserId,  	   
			  TO_CHAR( A.CR_DATE, 'DDMONYY HH24:MI' ) AS crDate,
			  A.RMK_TYPE AS type,
			  A.RMK AS remarks,
			  A.FLT_KEY AS fltKey,
			  TO_CHAR( A.FLT_DATE, 'DDMONYY' ) AS fltDate,
			  B.CODE_DESC AS typeDesc			  	 		  
		FROM  AWB_RMK A
        LEFT JOIN MAST_CODE_DTL B ON B.CODE = A.RMK_TYPE 
		WHERE     A.AWB_NO = #awbNo#
		and A.AWB_DATE = #awbDate#
    UNION
    SELECT 
    A.AWB_NO AS awbNo,
		SUBSTR( A.AWB_NO,1,3 ) AS awbNoPFX,
		SUBSTR( A.AWB_NO,4 ) as awbNoSFX,
		A.CR_USER_ID AS rmkUserId,  	   
		TO_CHAR( A.CR_DATE, 'DDMONYY HH24:MI' ) AS crDate,
		'AWB' AS type,
			  A.AIRLN_RMK AS remarks,
			  '' AS fltKey,
			  '' AS fltDate,
			  '' AS typeDesc		
    FROM AWB A WHERE A.AWB_NO=#awbNo# AND A.AWB_DATE=#awbDate# 
    AND NOT EXISTS (SELECT NULL FROM AWB_RMK WHERE AWB_NO=#awbNo#)
    UNION
    SELECT
    A.AWB_NO AS awbNo,
		SUBSTR( A.AWB_NO,1,3 ) AS awbNoPFX,
		SUBSTR( A.AWB_NO,4 ) as awbNoSFX,
		A.CR_USER_ID AS rmkUserId,  	   
		TO_CHAR( A.CR_DATE, 'DDMONYY HH24:MI' ) AS crDate,
		'AWB' AS type,
			  A.WH_RMK AS remarks,
			  '' AS fltKey,
			  '' AS fltDate,
			  '' AS typeDesc		
    FROM EXP_CAR A WHERE A.AWB_NO=#awbNo# AND A.AWB_DATE=#awbDate# 
	  union
      SELECT			   
	  SUBSTR(A.ENTITY_KEY,1,11) AS awbNo,
      SUBSTR(A.ENTITY_KEY,1,3) AS awbNoPFX,
      SUBSTR(A.ENTITY_KEY,4,11) as awbNoSFX,
      A.LM_USER_ID AS rmkUserId,
      TO_CHAR(A.LM_DATE,'DDMONYY HH24:MI') AS crDate,
      '' as type,
      A.RMK AS remarks,
      DECODE('I','I',SI.FLT_KEY,EA.FLT_KEY) AS fltKey,
      DECODE('I','I',TO_CHAR(SI.FLT_DATE,'DDMONYY'),TO_CHAR(EA.FLT_DATE,'DDMONYY')) AS fltDate,
      A.TAG_NAME AS typeDesc
      FROM
      RMK_HIST A
      LEFT JOIN EXP_PMANIFEST_AWB EA ON EA.AWB_NO = #awbNo# AND EA.AWB_DATE = #awbDate# 
      LEFT JOIN IMP_CAR_SHP SI ON SI.AWB_NO = #awbNo# AND SI.AWB_DATE = #awbDate# 
      WHERE
      <isNotEqual property="awbType" compareValue="E">
      A.ENTITY_KEY IN (DECODE(SI.AWB_NO,'','',SI.AWB_NO||SI.FLT_KEY)) OR A.ENTITY_KEY IN (DECODE(SI.AWB_NO,'','',SI.AWB_NO||TO_CHAR(SI.AWB_DATE,'DDMONYY')))
      <isNotEmpty property="type">
	  AND A.TAG_NAME = #type#
	  </isNotEmpty>		
      </isNotEqual>
      <isEqual property="awbType" compareValue="E">
      A.ENTITY_KEY IN (DECODE(EA.AWB_NO,'','',EA.AWB_NO||EA.FLT_KEY)) OR A.ENTITY_KEY IN (DECODE(EA.AWB_NO,'','',EA.AWB_NO||TO_CHAR(EA.AWB_DATE,'DDMONYY')))
      <isNotEmpty property="type">
	  AND A.TAG_NAME = #type#
	  </isNotEmpty>		
      </isEqual>)) AS remarksLog,
        (SELECT COUNT(*) FROM (SELECT 
     		TO_CHAR( A.CR_DATE, 'DDMONYY HH24:MI' ) AS crDate,
     		A.CR_USER_ID AS crUserId,
     		( select des_tag from his_mst_itm where cod_his_seq_num=b.cod_his_seq_num) AS eventId,
     		DECODE(B.cod_act,'A','ADD','U','UPD','D','DEL') as event,
     		B.DES_HIS_DTS as eventDesc
  		FROM HIS_AWB_EVNT A,HIS_AWB_EVNT_DTL B
  		WHERE B.awb_no= A.awb_no
  			AND B.awb_date = A.awb_date
  			AND A.COD_TRA_SEQ_NUM  = B.COD_TRA_SEQ_NUM
   			AND A.AWB_NO = #awbNo#
    		AND A.AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
    		AND A.MODULE = 'W'
    		AND A.COD_HIS_TYP = 'E'
    	group by a.awb_no, a.awb_date,A.CR_DATE,A.CR_USER_ID,A.COD_FUNC,B.cod_act,B.DES_HIS_DTS,b.cod_his_seq_num
		order by A.CR_DATE)) AS event,
	 (SELECT count(DISTINCT BID.INV_NO)
		FROM BILL_INV_DTL BID
		JOIN BILL_CHARGE_DTl BCD ON BID.CHRG_TR_NO = BCD.TR_NO
		JOIN awb awb ON awb.awb_no    = BCD.awb_no AND awb.awb_date =BCD.awb_date
		WHERE BCD.AWB_NO = #awbNo# AND BCD.AWB_DATE =TO_DATE(#awbDate#, 'DDMONYY')
		) AS invoiceAdjNote,
     <!--(SELECT COUNT(*)
  FROM
      BILL_INV_HD
 WHERE
      AWB_NO = #awbNo# AND 
      AWB_DATE=TO_DATE(#awbDate#, 'DDMONYY')) AS invoiceAdjNote, -->
      (SELECT COUNT(*)
		  FROM
		      EDI_MSG_LOG_OUT A  
		 WHERE
		      A.AWB_NO=UPPER(#awbNo#)) AS fsuMessage,
      
      (SELECT count(*)
       FROM V_CST_CONT_CODE R   
       LEFT JOIN FLT_OPR ON 
       R.FLT_KEY = FLT_OPR.FLT_KEY AND   
       R.FLT_DATE = FLT_OPR.SCH_DATE AND 
       FLT_OPR.FLT_TYPE =R.FLT_TYPE   
       WHERE R.AWB_NO = #awbNo#) AS constraintCode,
      (select count(*) from(<![CDATA[
		SELECT DISTINCT ITEMCODE 
		FROM (
			SELECT
				TR_NO AS trNo,
				AWB_NO AS awbNo,
				CUST_NO AS custNo,
				CUST_NAME AS agentName,
				ITM_CODE AS itemCode,
				ITM_CODE_SFX AS itemCodeSfx,
				ITM_DESC AS itemDesc,
				REV_IND AS revInd,
				CASH_IND AS cashInd,
				(CHRG_AMT + WAVR_AMT) AS chargeAmount,
				PAID_AMT_CASH AS paidAmtCash,
				PAID_AMT_CREDIT AS paidAmtCredit,
				STATUS AS awbStatus,
				ADJ_AMT AS adjAmount,
				nvl(WAVR_AMT,0) AS waverAmt
			FROM
				BILL_CHARGE_DTL
			WHERE
				STATUS != 'VOID'
				AND AWB_NO = #awbNo# and AWB_DATE = to_date(#awbDate#, 'DDMONYY')
				AND (STATUS = 'PAID'
					or (STATUS = 'PENDING' 
						AND SRF_NO IN (SELECT SRF_NO FROM IMP_SRF 
										  WHERE (SRF_EXPY_DATE > sysdate and STATUS ='ISSUED') or STATUS ='POSTED' 
				  	  					  or SRF_NO in (select SRF_NO from IMP_CDIF where VOID_USER is null)))
					or (STATUS = 'PENDING' 
					    AND WAVR_AMT > 0 AND WAVR_DONE = 'Y' 
						AND SRF_NO IN (SELECT SRF_NO FROM BILL_CHARGE_DTL WHERE STATUS = 'PAID'))
					or (STATUS = 'PENDING' AND SRF_NO IS NULL)
					)						
			UNION ALL
			SELECT '', awbNo, AGENT_CODE custNo, AGENT_NAME agentName, itemCode, itemCodeSfx, itemDesc, revInd, m.CASH_IND cashInd, 
				   chamt chargeAmount, 0 paidAmtCash, 0 paidAmtCredit, 'PENDING' awbStatus, 0 adjAmount, 0 waverAmt 
			FROM (
				SELECT G.AWB_NO awbNo, G.AWB_DATE awbDate, G.ITM_CODE itemCode , G.ITM_CODE_SFX itemCodeSfx, 
							 min(G.ITM_DESC) itemDesc, min(G.REV_IND) revInd,sum(G.QTY) qty, max(G.UNIT_PRICE) unitPrice, sum(G.AMT) chamt, 
							 min(G.MIN_CHRG_IND) minChrgInd, min(G.MAX_CHRG_IND) maxChrgInd
				FROM GT_SRF_CHARGES G
				WHERE LENGTH(FLT_KEY) > 8
				group by G.AWB_NO, G.AWB_DATE, G.ITM_CODE, G.ITM_CODE_SFX) C
			join IMP_CAR_AWB ica on ica.AWB_NO = c.awbNo AND ica.AWB_DATE = c.awbDate
			join BILL_ITM_MASTER m on m.ITM_CODE = c.itemCode and NVL(m.ITM_CODE_SFX, '**') = NVL(c.itemCodeSfx, '**') and nvl(m.ECT_HANDLER, NVL(ica.ECT_HANDLER, 'AAT')) = NVL(ica.ECT_HANDLER, 'AAT')
			join AWB a on a.AWB_NO = c.awbNo and a.AWB_DATE = c.awbDate and a.awb_type = 'I'
			UNION ALL
			select '', awbNo, AGENT_CODE custNo, AGENT_NAME agentName, itemCode, itemCodeSfx, itemDesc, m.REV_IND revInd, m.CASH_IND cashInd, 
				   (chamt - nvl(pchrg, 0) + NVL(cp.Wavr, 0)) chargeAmount, 0 paidAmtCash, 0 paidAmtCredit, 'PENDING' awbStatus, 0 adjAmount, nvl(cp.Wavr,0) waverAmt
			from 
				 (select G.AWB_NO awbNo, G.AWB_DATE awbDate, G.ITM_CODE itemCode , G.ITM_CODE_SFX itemCodeSfx, 
						  min(G.ITM_DESC) itemDesc, min(G.REV_IND) revInd,sum(G.QTY) qty, max(G.UNIT_PRICE) unitPrice, sum(G.AMT) chamt, 
						 min(G.MIN_CHRG_IND) minChrgInd, min(G.MAX_CHRG_IND) maxChrgInd
						 from GT_SRF_CHARGES G
						 where G.AWB_NO = #awbNo# and G.AWB_DATE = to_date(#awbDate#, 'DDMONYY')
						 and G.RMODE = 'SRF' and (LENGTH(FLT_KEY) <= 8 or FLT_KEY is null)
						 group by G.AWB_NO, G.AWB_DATE, G.ITM_CODE, G.ITM_CODE_SFX
				  union
				  Select AWB_NO, AWB_DATE, ITM_CODE, ITM_CODE_SFX, 
				  		 ITM_DESC, REV_IND, 1, 0, CHRG_AMT, 
						 'N', 'N'
						  from IMP_CHRG_ITM_REV_AWB 
						  where AWB_NO = #awbNo# and AWB_DATE = to_date(#awbDate#, 'DDMONYY')
						  AND ITM_CODE in ('CCIMPO', 'FCIMFC', 'DBIMPO')
				  ) c 
			join IMP_CAR_AWB ica on ica.AWB_NO = c.awbNo AND ica.AWB_DATE = c.awbDate
			join BILL_ITM_MASTER m on m.ITM_CODE = c.itemCode and NVL(m.ITM_CODE_SFX, '**') = NVL(c.itemCodeSfx, '**') and nvl(m.ECT_HANDLER, NVL(ica.ECT_HANDLER, 'AAT')) = NVL(ica.ECT_HANDLER, 'AAT')
			join AWB a on a.AWB_NO = c.awbNo and a.AWB_DATE = c.awbDate and a.awb_type = 'I'
			left join IMP_CHRG_ITM_REV_AWB ic on ic.AWB_NO = c.awbNo AND  ic.AWB_DATE = c.awbDate
				 AND ic.ITM_CODE = c.itemCode and NVL(ic.ITM_CODE_SFX, '**') = NVL(c.itemCodeSfx, '**')
			left join (select AWB_NO, AWB_DATE, ITM_CODE, ITM_CODE_SFX, sum(CHRG_AMT + Wavr_Amt) pchrg,  sum(Wavr_Amt) Wavr
				 from BILL_CHARGE_DTL where (Status = 'PAID' or (Status = 'PENDING' and Wavr_Amt > 0 and SRF_NO IN (SELECT SRF_NO FROM BILL_CHARGE_DTL WHERE STATUS = 'PAID' AND SRF_NO IS NOT NULL)))
				 group by AWB_NO, AWB_DATE, ITM_CODE, ITM_CODE_SFX) cp on cp.AWB_NO = c.awbNo AND  cp.AWB_DATE = c.awbDate
				 AND cp.ITM_CODE = c.itemCode and NVL(cp.ITM_CODE_SFX, '**') = NVL(c.itemCodeSfx, '**')
			left join (select AWB_NO, AWB_DATE from imp_car_awb a
				 	  where not exists (select null from BILL_CHARGE_DTL 
					  				   where ITM_CODE like 'SC%'
				 	  				   and awb_no = a.awb_no and awb_date = a.awb_date
									   and status != 'VOID')
						and exists (select null from BILL_CHARGE_DTL 
								   where status = 'PAID' and awb_no = a.awb_no and awb_date = a.awb_date)) chk 
							on chk.awb_no = ica.awb_no and chk.awb_date = ica.awb_date 
			left join (select * 
				 	  from (select s.srf_no, s.awb_no, s.awb_date, s.SRF_EXPY_DATE, s.STATUS
					 	  from imp_srf s 
					 	  left join imp_srf_flt sf on sf.srf_no = s.srf_no 
						  where s.AWB_NO = #awbNo# and s.AWB_DATE = to_date(#awbDate#, 'DDMONYY')
						  order by s.srf_date desc) si
					  where rownum = 1) s 
				on ica.awb_no = s.awb_no and ica.awb_date = s.awb_date 
			where (chamt - nvl(pchrg, 0)) > 0 AND NVL(ic.PAYMENT_MODE, 'Revenue') not in ('No value') 
			and not ((NVL(s.STATUS, '**') = 'ISSUED' and NVL(s.SRF_EXPY_DATE, '01JAN2000') < sysdate and c.itemCode like 'SC%' and nvl(cp.itm_code, chk.awb_no) is not null) 
						  	or (NVL(s.STATUS, '**') = 'ISSUED' and NVL(s.SRF_EXPY_DATE, '01JAN2000') >= sysdate)
							or (a.AWB_CLOSED_YN = 'Y' and NVL(s.STATUS, '**') = 'POSTED'))
		)
		order by itemCode
		]]>)) AS charges,
     ( SELECT COUNT(*)
  FROM
     (SELECT SI_TYPE,
             FHL_OWNER,
             MAX(TR_NO)TR_NO 
         FROM 
             EDI_FHL
        WHERE
             AWB_NO = #awbNo# and 
             awb_date = to_date(#awbDate#, 'DDMONYY') 
      GROUP BY SI_TYPE,FHL_OWNER) A,     EDI_FHL_HAWB B
 WHERE
      A.TR_NO=B.TR_NO) AS fhl,
     (select COUNT(*)
    FROM 
   AWB_IMAGE A,
   FW_IMAGE_STORE B
   WHERE 
   A.AWB_IMAGE_NAME = B.IMG_SESSION_ID AND
   A.seq_no = (SELECT MAX(SEQ_NO) FROM AWB_IMAGE WHERE AWB_NO = #awbNo# and AWB_DATE = TO_DATE(#awbDate#,'DDMONYY'))) AS attachment,
   (select ( select count(*)
		from EDI_MSG_LOG_OUT LOG_OUT where msg_type='TLX' and  ( AWB_NO=#awbNo# or  AWB_NO_2=#awbNo# or 
			 AWB_NO_3=#awbNo# or  AWB_NO_4=#awbNo# or  AWB_NO_5=#awbNo#)
    )+( select count(*)
		from EDI_MSG_LOG_IN LOG_OUT where msg_type='TLX' and  ( AWB_NO=#awbNo# or  AWB_NO_2=#awbNo# or 
			 AWB_NO_3=#awbNo# or  AWB_NO_4=#awbNo# or  AWB_NO_5=#awbNo#)) from dual) AS telex,
   <!--    (SELECT count(*)
  FROM
      IMP_CAR_AWB B, IMP_CAR_SHP A     
      JOIN FLT_OPR FLT ON 
      FLT.FLT_KEY = A.FLT_KEY AND   
      FLT.SCH_DATE = A.FLT_DATE  
 WHERE
      (A.DAM_PCS > 0 or A.MANIFEST_PCS != A.RECD_PCS or A.MANIFEST_WT != A.RECD_WT   or 
      A.DAM_PROC_USER is not null or A.CIR_PROC_USER is not null) AND 
      A.AWB_DATE = B.AWB_DATE AND  
      A.AWB_NO   = B.AWB_NO   AND
      A.AWB_NO = #awbNo# AND 
      TO_CHAR(A.AWB_DATE, 'DDMONYY') = #awbDate# ) AS cir,-->
      (SELECT COUNT(*) FROM IMP_CAR_SHP WHERE AWB_NO = #awbNo# AND AWB_DATE = #awbDate# AND CIR_PROC_USER IS NOT NULL) AS cir,
     (SELECT 
			count(*)
		FROM IMP_CAR_SHP shp 
		LEFT JOIN MAST_CODE_DTL mcd on DIR_ACTION = mcd.CODE AND mcd.CODE_TYPE='ACTION_CODE'
		JOIN IMP_CAR_AWB car ON shp.AWB_No = car.AWB_No AND shp.AWB_Date = car.AWB_Date
		WHERE 
		shp.AWB_NO = #awbNo# AND 
		shp.AWB_DATE = #awbDate# 
		 AND DOC_DISC in ('FDAW', 'MSAW','FDCN','MSCN'))AS dir,
     (SELECT count(*)		   
FROM IMP_CAR_AWB carawb,
IMP_CAR_SHP carshp
LEFT JOIN (SELECT AWB_NO, AWB_DATE, FLT_KEY, FLT_DATE, sum(LOCN_PCS) INV_DAM_PCS, sum(LOCN_WT) INV_DAM_WT		
            FROM 
            AWB_INVENTORY
            WHERE DAM_IND = 'Y'		
            GROUP BY AWB_NO, AWB_DATE, FLT_KEY, FLT_DATE		) I 		   ON carshp.AWB_NO = I.AWB_NO AND			carshp.AWB_DATE = I.AWB_DATE AND			carshp.FLT_KEY = I.FLT_KEY AND			carshp.FLT_DATE = I.FLT_DATE	
            WHERE 
            UPPER(carshp.awb_no) = UPPER(#awbNo#) AND
            UPPER(carshp.AWB_NO) = UPPER(carawb.AWB_NO) AND
            UPPER(carshp.AWB_DATE) = UPPER(carawb.AWB_DATE) AND
            UPPER(carshp.awb_DATE) = TO_DATE(#awbDate#,'DDMONYY') AND	
            (NVL(I.INV_DAM_PCS, 0) > 0 or carshp.DAM_PROC_USER is not null)) AS damage,
     (SELECT COUNT(*) 
   FROM
       GT_CST_DC_LIST
  WHERE
       AWB_NO = #awbNo# AND
       AWB_DATE = #awbDate# ) AS dc,
       
       (SELECT COUNT(*) 
   FROM
       EXP_PMANIFEST_AWB
  WHERE
       AWB_NO = #awbNo# AND
       AWB_DATE = #awbDate# ) AS manifest,
     (select COUNT(*)
  FROM
      edi_ffm_msg 
 inner join edi_ffm_uld on 
            edi_ffm_msg.tr_no = edi_ffm_uld.tr_no  
 inner join edi_ffm_shp on
            edi_ffm_msg.tr_no = edi_ffm_shp.tr_no and 
            edi_ffm_uld.doc_line_no = edi_ffm_shp.udoc_line_no where 
            edi_ffm_msg.flt_date =to_date(#awbDate#, 'dd-mon-yy') and 
           (edi_ffm_msg.si_type = 'S' or (edi_ffm_msg.si_type = 'I' and ffm_status = 'P'))     and 
            edi_ffm_shp.AWB_NO = nvl(#awbNo#, edi_ffm_shp.AWB_NO) ) AS ffm,
            (select count(*) from awb_owner where awb_no=#awbNo# and awb_date=#awbDate#) as owner
 FROM
     AWB where AWB_NO = #awbNo#
</select>
<!-- AWB Enquiry IMPORT END Here  -->

<!-- AWB Enquiry EXPORT STARTS Here  -->  

<select id="fetchAWBEnqExportDetails_FBL102" parameterClass="cargo.cms.admin.report.bo.AWBEnquiry_102BO" resultClass="cargo.cms.admin.report.bo.AWBEnquiry_102BO">
		SELECT A.AWB_NO                                    AS awbNo,
		  SUBSTR( A.AWB_NO,1,3 )                           AS awbNoPFX,
		  SUBSTR( A.AWB_NO,4 )                             AS awbNoSFX,
		  DECODE(A.ORG,'HKG','E','T')                      AS awbType,
		  ''                                               AS catalog,
		  ''                                               AS lockYN,
		  NVL(A.PCS,0)                                     AS awbPcs,
		  trim(TO_CHAR(NVL(A.NET_WT,0),'999999999990.00')) AS awbWt,
		  B.CARR_CODE                                      AS carrCode,
		  '' carrPcWt,
		  '' AS licence,
		  '' carYN,
		  (SELECT COD_FSU_STS
		  FROM AWB_SHP_STS
		  WHERE AWB_DATE='11MAR14 '
		  AND AWB_NO    ='77723874524 '
		  AND ROWNUM    =1
		  )                               AS status,
		  TO_CHAR( A.AWB_DATE, 'DDMONYY') AS awbDate,
		  ''                              AS agentCode,
		  ( DECODE(A.SPL_CODE1,'',A.SPL_CODE1,A.SPL_CODE1)
		  || DECODE(A.SPL_CODE2 ,NULL,DECODE(A.SPL_CODE2,NULL,'',DECODE(A.SPL_CODE1,NULL,'',',')),DECODE(A.SPL_CODE1,NULL,'',','))
		  || DECODE(A.SPL_CODE2,'',A.SPL_CODE2,A.SPL_CODE2)
		  || DECODE(A.SPL_CODE3 ,NULL,DECODE(A.SPL_CODE3,NULL,'',DECODE(A.SPL_CODE2,NULL,'',',')),DECODE(A.SPL_CODE2,NULL,'',','))
		  || DECODE(A.SPL_CODE3,'',A.SPL_CODE3,A.SPL_CODE3)
		  || DECODE(A.SPL_CODE4 ,NULL,DECODE(A.SPL_CODE4,NULL,'',DECODE(A.SPL_CODE3,NULL,'',',')),DECODE(A.SPL_CODE3,NULL,'',','))
		  || DECODE(A.SPL_CODE4,'',A.SPL_CODE4,A.SPL_CODE4)
		  || DECODE(A.SPL_CODE5 ,NULL,DECODE(A.SPL_CODE5,NULL,'',DECODE(A.SPL_CODE4,NULL,'',',')),DECODE(A.SPL_CODE4,NULL,'',','))
		  || DECODE(A.SPL_CODE5,'',A.SPL_CODE5,A.SPL_CODE5)
		  || DECODE(A.SPL_CODE6 ,NULL,DECODE(A.SPL_CODE6,NULL,'',DECODE(A.SPL_CODE5,NULL,'',',')),DECODE(A.SPL_CODE5,NULL,'',','))
		  || DECODE(A.SPL_CODE6,'',A.SPL_CODE6,A.SPL_CODE6)
		  || DECODE(A.SPL_CODE7 ,NULL,DECODE(A.SPL_CODE7,NULL,'',DECODE(A.SPL_CODE6,NULL,'',',')),DECODE(A.SPL_CODE6,NULL,'',','))
		  || DECODE(A.SPL_CODE7,'',A.SPL_CODE7,A.SPL_CODE7)
		  || DECODE(A.SPL_CODE8 ,NULL,DECODE(A.SPL_CODE8,NULL,'',DECODE(A.SPL_CODE7,NULL,'',',')),DECODE(A.SPL_CODE7,NULL,'',','))
		  || DECODE(A.SPL_CODE8,'',A.SPL_CODE8,A.SPL_CODE8) ) AS splCode1,
		  (SELECT COUNT(*) FROM CUST_AIRL_SPL_CODE  WHERE SPL_CODE=A.SPL_CODE1  AND SPL_TYPE  ='SPL_VAL'  OR SPL_CODE   =A.SPL_CODE2  AND SPL_TYPE  ='SPL_VAL'  OR SPL_CODE   =A.SPL_CODE3  
		     AND SPL_TYPE  ='SPL_VAL'  OR SPL_CODE   =A.SPL_CODE4  AND SPL_TYPE  ='SPL_VAL'  OR SPL_CODE   =A.SPL_CODE5  AND SPL_TYPE  ='SPL_VAL'  OR SPL_CODE   =A.SPL_CODE6  AND SPL_TYPE  ='SPL_VAL' 
		     OR SPL_CODE   =A.SPL_CODE7  AND SPL_TYPE  ='SPL_VAL' OR SPL_CODE   =A.SPL_CODE8  AND SPL_TYPE  ='SPL_VAL') AS shpStatus,
		  ''    AS schCollInd,
		  ''    AS docDlv,
		  A.ORG AS awbOrigin,
		  (SELECT SUM(CHRG_AMT) FROM BILL_CHARGE_DTL  WHERE AWB_NO = #awbNo#  AND AWB_DATE = #awbDate#)  AS osCharge,
		  ''     AS allowPacco,
		  ''     AS docChkReq,
		  A.DEST AS awbDest,
		  ''     AS intelligentChk,
		  ''     AS dcLock,
		  ''     AS docChkComp,
		  A.CNT  AS content,
		  ''     AS awbClosed,
		  '0' licenceUnder,
		  '' AS noaSent,
		  '' AS docRecieve,
		  '' AS latestCc,
		  '' AS airlRmk,
		  '' AS oldAirlRmk,
		  '' AS seqNo,
		  '' AS fltKey,
		  '' AS whRmk,
		  '' AS oldWHRmk,
		  '' AS manRmk,
		  '' AS offloadRmk,
		  '' consignee,
		  '' consigneAddr,
		  '' consigneAddr2,
		  '' consigneAddr3,
		  '' consigneAddr4,
		  '' AS consCity,
		  '' AS consCountry,
		  '' AS shipperName,
		  '' AS shipperAddr1,
		  '' AS shipperAddr2,
		  '' AS shipperAddr3,
		  '' AS shipperAddr4,
		  '' shprCountry,
		  ''              AS shprCity,
		  ''              AS appiontedAgent,
		  ''              AS agentAddr,
		  ''              AS agentAddr1,
		  ''              AS agentAddr2,
		  ''              AS agentAddr3,
		  ''              AS agentAddr4,
		  ''              AS intStatus,
		  A.PART_SHMPT_YN AS partShipment,
		  A.LM_DATE       AS lmDate,
		  DECODE(A.ORG,'HKG','N',null) AS docAccept,
		  ''              AS pendingAction,
		  ''              AS transactionId,
		  '' attachmentStatus,
		  '' holdingPeriod,
		  '' shipperState,
		  '' consigneeState
		FROM EDI_FBL_SHP A,
		  EDI_FBL B
		WHERE A.TR_NO    = B.TR_NO
		AND A.AWB_NO     = #awbNo#
		AND B.FBL_STATUS = 'P' AND A.tr_no = (SELECT MAX(tr_no) FROM EDI_FBL_SHP WHERE AWB_NO = #awbNo#)
	</select>


<select id="fetchAWBEnqExportDetails_102" parameterClass="cargo.cms.admin.report.bo.AWBEnquiry_102BO" resultClass="cargo.cms.admin.report.bo.AWBEnquiry_102BO">
	SELECT 
		A.AWB_NO AS awbNo,
		SUBSTR( A.AWB_NO,1,3 ) AS awbNoPFX,
		SUBSTR( A.AWB_NO,4 ) AS awbNoSFX,
		A.AWB_TYPE AS awbType, 
		decode(A.CATALOG,'',CA.CATALOG,A.CATALOG) AS catalog,
        NVL(A.EXP_AWB_LOCK,'N') AS lockYN,
        decode(A.PCS,'','0',A.PCS) AS awbPcs, 
		trim(TO_CHAR(NVL(A.WT,0),'9999990.00')) AS awbWt,
		(SELECT NVL(OW.PCS,0)||'/'||NVL(OW.WT,0) FROM AWB_OWNER OW WHERE OW.AWB_NO = A.AWB_NO AND OW.AWB_DATE = A.AWB_DATE AND OW.CARR_CODE = A.CARR_CODE) carrPcWt,
		A.CARR_CODE AS carrCode,
 			  (SELECT COUNT(LICENSE) 
         FROM
            CST_LICENSE 
        WHERE
            AWB_NO = #awbNo# AND
            AWB_DATE = #awbDate#) AS licence,
            A.CAR_YN AS carYN,
            (SELECT STRAGG(STRINGDELIM(COD_FSU_STS, ',')) FROM (SELECT  DISTINCT COD_FSU_STS FROM AWB_SHP_STS WHERE AWB_DATE=#awbDate# AND AWB_NO=#awbNo#)) AS status,
            TO_CHAR( A.AWB_DATE, 'DDMONYY') AS awbDate,  
            CA.AGENT_CODE AS agentCode,
           ( decode(CA.SPL_CODE1,'',A.SPL_CODE1,CA.SPL_CODE1) || DECODE(CA.SPL_CODE2 ,null,DECODE(A.SPL_CODE2,NULL,'',DECODE(A.SPL_CODE1,NULL,'',',')),DECODE(CA.SPL_CODE1,NULL,'',',')) ||
			decode(CA.SPL_CODE2,'',A.SPL_CODE2,CA.SPL_CODE2) || DECODE(CA.SPL_CODE3 ,null,DECODE(A.SPL_CODE3,NULL,'',DECODE(A.SPL_CODE2,NULL,'',',')),DECODE(CA.SPL_CODE2,NULL,'',',')) ||
 			decode(CA.SPL_CODE3,'',A.SPL_CODE3,CA.SPL_CODE3) || DECODE(CA.SPL_CODE4 ,null,DECODE(A.SPL_CODE4,NULL,'',DECODE(A.SPL_CODE3,NULL,'',',')),DECODE(CA.SPL_CODE3,NULL,'',',')) ||
 			decode(CA.SPL_CODE4,'',A.SPL_CODE4,CA.SPL_CODE4) || DECODE(CA.SPL_CODE5 ,null,DECODE(A.SPL_CODE5,NULL,'',DECODE(A.SPL_CODE4,NULL,'',',')),DECODE(CA.SPL_CODE4,NULL,'',',')) ||
 			decode(CA.SPL_CODE5,'',A.SPL_CODE5,CA.SPL_CODE5) || DECODE(CA.SPL_CODE6 ,null,DECODE(A.SPL_CODE6,NULL,'',DECODE(A.SPL_CODE5,NULL,'',',')),DECODE(CA.SPL_CODE5,NULL,'',',')) ||
 			decode(CA.SPL_CODE6,'',A.SPL_CODE6,CA.SPL_CODE6) || DECODE(CA.SPL_CODE7 ,null,DECODE(A.SPL_CODE7,NULL,'',DECODE(A.SPL_CODE6,NULL,'',',')),DECODE(CA.SPL_CODE6,NULL,'',',')) ||
 			decode(CA.SPL_CODE7,'',A.SPL_CODE7,CA.SPL_CODE7) || DECODE(CA.SPL_CODE8 ,null,DECODE(A.SPL_CODE8,NULL,'',DECODE(A.SPL_CODE7,NULL,'',',')),DECODE(CA.SPL_CODE7,NULL,'',',')) ||
 			decode(CA.SPL_CODE8,'',A.SPL_CODE8,CA.SPL_CODE8) || DECODE(CA.SPL_CODE9 ,null,DECODE(A.SPL_CODE9,NULL,'',DECODE(A.SPL_CODE8,NULL,'',',')),DECODE(CA.SPL_CODE8,NULL,'',',')) ||
 			decode(CA.SPL_CODE9,'',A.SPL_CODE9,CA.SPL_CODE9)) AS splCode1,
            <!--  UAT Bug :: 1515 :: ADDE splCode9 Fetch :: Ranjith -->
            (SELECT COUNT(*) FROM CUST_AIRL_SPL_CODE WHERE SPL_CODE=CA.SPL_CODE1 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=CA.SPL_CODE2 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=CA.SPL_CODE3 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=CA.SPL_CODE4 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=CA.SPL_CODE5 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=CA.SPL_CODE6 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=CA.SPL_CODE7 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=CA.SPL_CODE8 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=CA.SPL_CODE9 AND SPL_TYPE='SPL_VAL') AS shpStatus, 
            '' AS schCollInd,
            '' AS docDlv,
            A.ORIG AS awbOrigin, 
            (SELECT SUM(CHRG_AMT) FROM BILL_CHARGE_DTL WHERE AWB_NO = #awbNo# AND AWB_DATE=#awbDate#) AS osCharge,
            '' AS allowPacco,
            '' AS docChkReq,
            A.DEST AS awbDest,
            A.EXPCAR_YN AS intelligentChk, 
            (select case when (select dut_commodity from exp_rcl_hd where awb_no=#awbNo# and awb_date=#awbDate# AND ROWNUM=1) = 'Y' then 'Y'
             else case when (select (select count(*) from cst_dc_dtl where awb_no=#awbNo#) + (select count(*) from cst_code_dtl where awb_no=#awbNo#) as result from dual) > 0
             then 'Y'
             else 'N'
             end
             end
             from dual) AS dcLock,
            '' AS docChkComp,
		    A.CONTENT AS content, 
            A.AWB_CLOSED_YN AS awbClosed,
            (SELECT COUNT(*) FROM CUST_UNDERTAKING CU WHERE 
                               CU.AGENT_CODE = (SELECT AGENT_CODE FROM AWB WHERE AWB_DATE=#awbDate# AND AWB_NO=#awbNo#) AND 
                               CU.CARR_CODE = (SELECT CARR_CODE FROM AWB WHERE AWB_DATE=#awbDate# AND AWB_NO=#awbNo#) AND 
                               CA.AWB_DATE BETWEEN CU.EFF_FROM AND CU.EFF_TO) AS licenceUnder, 
      
            '' AS noaSent,
            (select DECODE(count(recd.awb_no),1,'Y','N') from exp_doc_recd recd where
                recd.awb_no=#awbNo# and recd.awb_date=#awbDate# and awb_frz_yn='Y') AS docRecieve,            
            (SELECT cc_code FROM (SELECT t1.cc_code FROM v_cst_cc_code t1,mast_constraint_code t2 WHERE t1.cc_code = t2.code 
                  AND awb_no = #awbNo# AND NVL(hawb_no, '000000000000000000') = '000000000000000000' ORDER BY recv_date DESC, priority DESC) where rownum = 1) AS latestCc,                  
            (DECODE((select count(1) from EXP_CAR where awb_no = #awbNo# and awb_date=#awbDate# and rownum=1),0,(select rmk from awb_rmk where awb_no=#awbNo# and awb_date=#awbDate# and rownum=1),CA.AIRL_RMK)) AS airlRmk,
			(DECODE((select count(1) from EXP_CAR where awb_no = #awbNo# and awb_date=#awbDate# and rownum=1),0,(select rmk from awb_rmk where awb_no=#awbNo# and awb_date=#awbDate# and rownum=1),CA.AIRL_RMK)) AS oldAirlRmk,
            (select SEQ_NO from awb_rmk where awb_no=#awbNo# and awb_date=#awbDate# and rownum=1) AS seqNo,            
            (select flt_key from awb_rmk where awb_no=#awbNo# and awb_date=#awbDate# and rownum=1) AS fltKey,
            (DECODE((select count(1) from EXP_CAR where awb_no = #awbNo# and awb_date=#awbDate# and rownum=1),0,a.AWB_RMK,CA.WH_RMK)) AS whRmk,
			(DECODE((select count(1) from EXP_CAR where awb_no = #awbNo# and awb_date=#awbDate# and rownum=1),0,a.AWB_RMK,CA.WH_RMK)) AS oldWHRmk,
            EPA.MAN_RMK AS manRmk,
            (select DECODE(CONFIRMED_RMK,NULL,RMK,CONFIRMED_RMK) from exp_offload_uld_awb where awb_no=#awbNo# and awb_date=#awbDate# and (confirmed_rmk is not null OR RMK IS NOT NULL) AND ROWNUM=1) AS offloadRmk,
		    CA.CSGNE_NAME as consignee,
            CA.CSGNE_ADDR AS consigneAddr,
            CA.CSGNE_ADDR2 AS consigneAddr2,
            CA.CSGNE_ADDR3 AS consigneAddr3,
            CA.CSGNE_ADDR4 AS consigneAddr4,
            decode(CA.CSGNE_PLACE,'','Hong Kong',CA.CSGNE_PLACE) as consCity,
	        decode(CA.CSGNE_CTRY_CODE,'',(select code_desc from mast_country mcntr where mcntr.code = 'HK'),(select code_desc from mast_country mcntr1 where mcntr1.code = CA.CSGNE_CTRY_CODE)) as consCountry,
            CA.SHPR_NAME AS shipperName,
            CA.SHPR_ADDR AS shipperAddr1,
            CA.SHPR_ADDR2 AS shipperAddr2,
            CA.SHPR_ADDR3 AS shipperAddr3,
            CA.SHPR_ADDR4 AS shipperAddr4,        
            decode(CA.SHPR_CTRY_CODE,'',(select code_desc from mast_country mcntr where mcntr.code = 'HK'),(select code_desc from mast_country mcntr1 where mcntr1.code = CA.SHPR_CTRY_CODE)) as shprCountry,
	        decode(CA.SHPR_PLACE,'','Hong Kong',CA.SHPR_PLACE) as shprCity,
            CA.AGENT_NAME AS appiontedAgent,
	        CA.EDI_AGENT_ADDR_1 AS agentAddr,
	        CA.EDI_AGENT_ADDR_2 AS agentAddr1,
	        CA.EDI_AGENT_ADDR_3 AS agentAddr2,
	        CA.EDI_AGENT_ADDR_4 AS agentAddr3,
	        CA.EDI_AGENT_ADDR_5 AS agentAddr4,
	        DECODE(A.INT_YN,'N','N',DECODE(A.AMD_YN,'N','N',DECODE(A.EXPCAR_YN,'N','N',DECODE(A.LBS_YN,'N','N',DECODE(A.DOCACC_YN,'N','N',DECODE(A.LPPS_YN,'N','N','Y')))))) AS intStatus,
	        (select count(*) from awb A,EXP_PMANIFEST_AWB B where B.AWB_NO = A.AWB_NO AND B.AWB_DATE = A.AWB_DATE AND A.CAR_YN='Y' AND A.pcs > B.pman_pcs AND A.AWB_NO =#awbNo# AND A.AWB_DATE=#awbDate#) AS partShipment, 
	        decode(A.DOCACC_USER,'',(decode(A.DOCACC_DATE,'','N','Y')),'Y') AS docAccept,
	        (select decode((select count(awb_no) from cust_interaction where awb_no = #awbNo# and rownum=1),'1',(decode((select count(awb_no) from cust_interaction where awb_no=#awbNo# and comp_date is null and rownum=1),'1','Y','N')),'N') from dual) AS pendingAction,
	        ((select AWB_IMAGE_NAME FROM AWB_IMAGE WHERE seq_no = (SELECT MAX(SEQ_NO) FROM AWB_IMAGE WHERE AWB_NO = #awbNo# AND AWB_DATE = #awbDate#) )) AS transactionId,
	        DECODE(AI.AWB_IMAGE_NAME,'','Y','N') AS attachmentStatus,
			TO_CHAR(CA.LM_DATE, 'DDMONYY HH24:MI:SS') AS lmDate,
			CA.HLDG_PERIOD as holdingPeriod,
			CA.SHPR_STATE_PROVINCE shipperState,
			CA.CSGNE_STATE_PROVINCE consigneeState 
	    FROM 
		   AWB A,
		   EXP_CAR CA,
		   AWB_IMAGE AI,
		   EXP_PMANIFEST_AWB EPA,
          <!-- FLT_OPR_EVENTS FOE, -->
           CUST_COMPANY CCC 
      WHERE
       CA.AWB_NO(+) = A.AWB_NO AND
       CA.AWB_DATE(+) = A.AWB_DATE  AND
       EPA.AWB_NO(+) = A.AWB_NO AND
       EPA.AWB_DATE(+) = A.AWB_DATE AND
      <!--  FOE.FLT_NO(+) = ASS.FLT_NO AND
       FOE.DOC_ARR_DATE = ASS.AWB_DATE AND -->
       CCC.CODE(+) = CA.AGENT_CODE AND
       AI.AWB_NO(+) = A.AWB_NO AND
       AI.AWB_DATE(+) = A.AWB_DATE AND
       A.AWB_NO = #awbNo# AND
       A.AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY')
       <isNotEmpty property="loginCarrier">
           AND   (A.CARR_CODE = #loginCarrier# 
           OR A.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP 
           WHERE GRP_CARR_CODE     = #loginCarrier#))                                          
       </isNotEmpty>
</select>
<select id="fetchAWBEnquiryExportSummaryDetails_102" parameterClass="cargo.cms.admin.report.bo.AWBEnquiry_102BO" resultClass="cargo.cms.admin.report.bo.AWBEnquiry_102BO">
	  select
		   (select DECODE(sum(rclPcs),NULL,'','0','',sum(rclPcs)) from(SELECT NVL(EH.RCL_PCS,0) AS rclPcs
				FROM  EXP_RCL_HD EH
				WHERE    EH.PPK_TYPE IN ('P','B') 
						 AND  EH.AWB_NO = #awbNo#
				         AND EH.AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY')
						 AND EH.STATUS != 'V' AND EH.STATUS != 'R'
				UNION ALL		 
				SELECT	NVL(BRK.PCS,0) AS rclPcs
			 FROM EXP_RCL_HD EH, EXP_RCL_BRKDN BRK
			 WHERE EH.RCL_NO = BRK.RCL_NO  AND EH.PPK_TYPE = 'M'  
		           AND BRK.AWB_NO = #awbNo# 
				   AND BRK.AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY')
				   AND EH.STATUS != 'V' AND EH.STATUS != 'R')) as srcsPcs,
		   (select DECODE(sum(rclWt),null,'','0','',trim(TO_CHAR(NVL(sum(rclWt),0),'99999990.00'))) from(SELECT
				        trim(TO_CHAR(NVL(EH.RCL_WT,0),'9999990D99')) AS rclWt
				FROM  EXP_RCL_HD EH
				WHERE    EH.PPK_TYPE IN ('P','B') 
						 AND  EH.AWB_NO = #awbNo#
				         AND EH.AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY')
						 AND EH.STATUS != 'V' AND EH.STATUS != 'R'
				UNION ALL		 
				SELECT	trim(TO_CHAR(NVL(BRK.WEIGHT,0),'999999999990.00')) AS rclWt
			 FROM EXP_RCL_HD EH, EXP_RCL_BRKDN BRK
			 WHERE EH.RCL_NO = BRK.RCL_NO  AND EH.PPK_TYPE = 'M'  
		           AND BRK.AWB_NO = #awbNo# 
				   AND BRK.AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY')
				   AND EH.STATUS != 'V' AND EH.STATUS != 'R')) as srcsWt,
		       (select DECODE(SUM(PMAN_PCS),NULL,'','0','',SUM(PMAN_PCS)) from AWB where  AWB_NO = #awbNo# AND AWB_DATE = #awbDate#) AS spmanifestPcs,
		      (select DECODE(SUM(pman_wt),null,'','0','',trim(TO_CHAR(NVL(SUM(pman_wt),0),'99999990.00'))) from AWB where  AWB_NO = #awbNo# AND AWB_DATE = #awbDate#) AS spmanifestWt,
		      (select sum(SHPM_ASSGN_PCS) from EXP_MANIFEST_DTL EM where EM.AWB_NO = #awbNo# AND AWB_DATE = #awbDate#) AS sdepPcs,
		      (select DECODE(sum(SHPM_ASSGN_WT),null,'',trim(TO_CHAR(NVL(sum(SHPM_ASSGN_WT),0),'99999990.00'))) from EXP_MANIFEST_DTL EM where EM.AWB_NO = #awbNo# AND AWB_DATE = #awbDate#) AS sdepWt
		    from
		   dual
</select>
<!-- Common for EXPORT and TRANSHIMENT -->
<select id="fetchAWBEnquiryExportOrTranshipmentStorageDetails_102" parameterClass="cargo.cms.admin.report.bo.AWBEnquiry_102BO" resultClass="cargo.cms.admin.report.bo.AWBEnquiry_102BO">
		SELECT
	      LSP_NO AS lspNo,
	      ULD_KEY AS uldKey,
	      LOCN_PCS AS locnPcs,
	      LOCN_WT AS locnWt,
	      loc_code locnCode
	  FROM
	      AWB_INVENTORY 
	 WHERE
	      AWB_NO = #awbNo# AND 
	      AWB_DATE = #awbDate#
         <isNotEmpty property="loginCarrier">
             AND   (CARR_CODE = #loginCarrier# 
             OR CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP 
             WHERE GRP_CARR_CODE     = #loginCarrier#))                                          
      </isNotEmpty>
</select>
<select id="fetchAWBEnquiryExpFlightDetails_102" parameterClass="cargo.cms.admin.report.bo.AWBEnquiry_102BO" resultClass="cargo.cms.admin.report.bo.AWBEnquiry_102BO">
	  SELECT
      EPA.FLT_KEY AS fltNo,
      TO_CHAR (EPA.FLT_DATE, 'DDMONYY') AS fltDate,
      EPA.FLT_TYPE AS fltType,
      (select carr_code from awb where awb_no=EPA.AWB_NO and awb_date=EPA.AWB_DATE AND ROWNUM=1) as carrCode,
      (select carr_code from flt_opr where flt_key = EPA.FLT_KEY and sch_date = EPA.FLT_DATE and flt_type = decode(EPA.FLT_TYPE,'I','A','D')) fltCarr,
      pkg_common.get_flt_ata(EPA.FLT_KEY, EPA.FLT_DATE,'D') AS ata,
      (SELECT STRAGG(STRINGDELIM(A.TRF_TYPE , ',')) FROM
  (SELECT DS.AWB_NO,DS.AWB_DATE,DM.FLT_KEY,DM.FLT_DATE,TRF_TYPE
    FROM DDT_SHP_TRF_DTL DTL,      DDT_SHP DS,      DDT_MSG DM
    WHERE 
    DS.DOC_LINE_NO=DTL.DOC_LINE_NO
    AND DS.TR_NO      =DTL.TR_NO
    AND DM.TR_NO      = DTL.TR_NO
    AND DM.DDT_STATUS = 'P'
    GROUP BY TRF_TYPE,DS.AWB_NO,DS.AWB_DATE,DM.FLT_KEY,DM.FLT_DATE) A WHERE A.AWB_NO=EPA.AWB_NO AND A.AWB_DATE=EPA.AWB_DATE AND A.FLT_KEY=EPA.flt_key AND A.FLT_DATE=EPA.FLT_DATE
    and exists(select null from flt_opr_events where flt_key=A.FLT_KEY and sch_date=A.FLT_DATE and flt_type='A' and ddt_finalise_date is not null)) AS subType,
      decode(EPA.manf_pc,NULL,'','0','',EPA.manf_pc) AS preManifestPcs,  
      decode(EPA.manf_wt,NULL,'','0','',trim(TO_CHAR(NVL(EPA.manf_wt,0),'99999990.00'))) AS preManifestWt,  
      decode(EPA.bup_pc,NULL,'','0','',EPA.bup_pc) AS buPcs,
      decode(EPA.bup_wt,NULL,'','0','',trim(TO_CHAR(NVL(EPA.bup_wt,0),'99999990.00'))) AS buWt, 
      case when (select FINAL_MANF_IND from flt_opr_events  where FLT_KEY = EPA.FLT_KEY AND SCH_DATE = EPA.FLT_DATE AND FLT_TYPE = 'D')  = 'Y' then decode(EPA.manf_pc,NULL,'','0','',EPA.manf_pc) else '' end AS emanifestPcs,  
      case when (select FINAL_MANF_IND from flt_opr_events  where FLT_KEY = EPA.FLT_KEY AND SCH_DATE = EPA.FLT_DATE AND FLT_TYPE = 'D')  = 'Y' then decode(EPA.manf_wt,NULL,'','0','',trim(TO_CHAR(NVL(EPA.manf_wt,0),'99999990.00'))) else '' end AS emanifestWt,  
      decode(EPA.BULK_PC,NULL,'','0','',EPA.BULK_PC) AS eblkPcs,  
      decode(EPA.BULK_WT,NULL,'','0','',trim(TO_CHAR(NVL(EPA.BULK_WT,0),'99999990.00'))) AS eblkWt,
      decode(EPA.PPK_PC,NULL,'','0','',EPA.PPK_PC) AS eppkPcs, 
      decode(EPA.PPK_WT,NULL,'','0','',trim(TO_CHAR(NVL(EPA.PPK_WT,0),'99999990.00'))) AS eppkWt,    
      
      (SELECT EM.TR_NO FROM EXP_MANIFEST_DTL EM WHERE EPA.AWB_NO = EM.AWB_NO AND EPA.AWB_DATE = EM.AWB_DATE AND
      EPA.FLT_KEY = EM.FLT_KEY AND EPA.FLT_DATE = EM.FLT_DATE AND ROWNUM = 1) AS etrNo,        
      (SELECT EM.FLT_NO FROM EXP_MANIFEST_DTL EM WHERE EPA.AWB_NO = EM.AWB_NO AND EPA.AWB_DATE = EM.AWB_DATE AND
      EPA.FLT_KEY = EM.FLT_KEY AND EPA.FLT_DATE = EM.FLT_DATE AND ROWNUM = 1) AS efltNo1,
      (select DECODE(sum(pcs),NULL,'','0','',sum(pcs)) from edi_fbl_shp shp,edi_fbl fbl
      where shp.awb_no= EPA.awb_no
      and shp.awb_date=EPA.awb_date
      and fbl.flt_key=EPA.flt_key
      and fbl.flt_date=EPA.flt_date
      AND shp.tr_no= fbl.tr_no AND fbl.FBL_STATUS = 'P') as fblPc,   
      (select DECODE(sum(net_wt),null,'','0','',trim(TO_CHAR(NVL(sum(net_wt),0),'99999990.00'))) from edi_fbl_shp shp,edi_fbl fbl
      where shp.awb_no= EPA.awb_no
      and shp.awb_date=EPA.awb_date
      and fbl.flt_key=EPA.flt_key
      and fbl.flt_date=EPA.flt_date
      AND shp.tr_no= fbl.tr_no AND fbl.FBL_STATUS = 'P') as fblWt,
      (select  decode(sum(offload_pcs),null,'','0','',sum(offload_pcs))||DECODE(sum(offload_pcs),NULL,'','0','','/')||decode(sum(offload_wt),null,'','0','',trim(TO_CHAR(NVL(sum(offload_wt),0),'99999990.00'))) from exp_offload_uld_awb uldAwb where uldAwb.awb_no=EPA.awb_no  and uldAwb.awb_date=EPA.awb_date and uldAwb.flt_key=EPA.flt_key and uldAwb.flt_date=EPA.flt_date AND CONFIRMED_YN='Y') as offPcWt,    
      (select rmk  from edi_fbl_shp shp,edi_fbl fbl 
      where shp.awb_no= EPA.awb_no
      and shp.awb_date=EPA.awb_date
      and fbl.flt_key=EPA.flt_key
      and fbl.flt_date=EPA.flt_date
      AND shp.tr_no= fbl.tr_no AND rownum = 1) as nonPreRmk,
      '' as fblFltNo,
      '' as fblFltDate  
  FROM
  	(select  flt_key,flt_date,flt_type,awb_no,awb_date,sum(manf_pc) manf_pc,sum(manf_wt) manf_wt,sum(bup_pc) bup_pc ,sum(bup_wt) bup_wt,sum(bulk_pc) bulk_pc,sum(bulk_wt) bulk_wt,sum(ppk_pc) ppk_pc,sum(ppk_wt) ppk_wt
         FROM ( select flt_key flt_key,flt_date flt_date,flt_type flt_type, awb_no awb_no,awb_date awb_date, sum(nvl(pman_pcs,0)) manf_pc, sum(nvl(pman_wt,0)) manf_wt, 
         sum(nvl(BULK_PCS,0)) bulk_pc,
         sum(nvl(BULK_WT,0)) bulk_wt,
         sum( nvl(PPK_PCS,0)+nvl(MIX_PCS,0)) ppk_pc,
         sum( nvl(PPK_WT,0)+nvl(MIX_WT,0)) ppk_wt,
         sum( nvl(PPK_PCS,0)+nvl(MIX_PCS,0)+nvl(ASSIGNED_BULK_PCS,0)) bup_pc,
         sum( nvl(PPK_WT,0)+nvl(MIX_WT,0)+nvl(ASSIGNED_BULK_WT,0) )bup_wt 
         from exp_pmanifest_awb GROUP BY flt_key, flt_date, awb_no, awb_date,flt_type
         UNION 
         select flt_key flt_key, flt_date flt_date,'E' flt_type, awb_no awb_no,awb_date awb_date, sum(nvl(bulk_pcs,0)+nvl(ppk_pcs,0)) manf_pc, sum(nvl(bulk_wt,0)+nvl(ppk_wt,0)) manf_wt,
         sum(nvl(bulk_pcs,0)) bulk_pc,sum(nvl(bulk_wt,0)) bulk_wt,
         sum(nvl(ppk_pcs,0)) ppk_pc,sum(nvl(ppk_wt,0)) ppk_wt,
         sum(nvl(bulk_pcs,0)+nvl(ppk_pcs,0)) bup_pc,
         sum(nvl(bulk_wt,0)+nvl(ppk_wt,0)) bup_wt 
         from EXP_PMAN_TARMAC_AWB
         group by flt_key,awb_no,awb_date,flt_date) 
         group by flt_key,flt_date,awb_no,awb_date,flt_type) EPA  
  WHERE
      EPA.AWB_NO = #awbNo# AND 
      EPA.AWB_DATE = #awbDate# 
  UNION
       select '',
            '',
    		'',
   			(select carr_code from flt_opr where flt_key = fbl.flt_key and sch_date = fbl.flt_date and rownum=1) as carrCode,
   			 '',
   			 '',
   			 '',
  			 '','','','','','',
			     '', 
			     '',
			     '',
			     '',
			     '',
			     '',
          (DECODE(sum(pcs),NULL,'','0','',sum(pcs))) as fblPc,   
		    (DECODE(sum(net_wt),null,'','0','',trim(TO_CHAR(NVL(sum(net_wt),0),'99999990.00')))) as fblWt,
		    (select  decode(sum(offload_pcs),null,'','0','',sum(offload_pcs))||DECODE(sum(offload_pcs),NULL,'','0','','/')||decode(sum(offload_wt),null,'','0','',trim(TO_CHAR(NVL(sum(offload_wt),0),'99999990.00'))) from exp_offload_uld_awb uldAwb where uldAwb.awb_no= #awbNo#  and uldAwb.awb_date=#awbDate# and uldAwb.flt_key=fbl.flt_key and uldAwb.flt_date=fbl.flt_date AND CONFIRMED_YN='Y') as offPcWt,        
		    '' as nonPreRmk,
		    fbl.flt_key as fblFltNo,
		     TO_CHAR ( fbl.flt_date, 'DDMONYY') as fblFltDate
     FROM edi_fbl_shp shp,edi_fbl fbl
     WHERE shp.tr_no= fbl.tr_no and  fbl.FBL_STATUS = 'P' AND
      shp.AWB_NO = #awbNo# AND 
      shp.AWB_DATE = #awbDate#  
      AND NOT EXISTS (select NULL from exp_pmanifest_awb where awb_no=#awbNo# and awb_date=#awbDate# AND FLT_KEY=fbl.flt_key AND FLT_DATE=fbl.flt_date) group by fbl.flt_key,fbl.flt_date,fbl.carr_code
      union
      select '',
            '',
    		'',
   			(select carr_code from flt_opr where flt_key = OFAWB.flt_key and sch_date = OFAWB.flt_date and rownum=1) as carrCode,
   			 '',
   			 '',
   			 '',
  			 '','','','','','',
			     '', 
			     '',
			     '',
			     '',
			     '',
			     '',
          (select DECODE(sum(PCS),NULL,'','0','',sum(PCS)) from edi_fbl_shp shp,edi_fbl fbl
           where shp.awb_no= OFAWB.AWB_NO
                 and shp.awb_date=OFAWB.AWB_DATE
                 and fbl.flt_key=OFAWB.flt_key
                 and fbl.flt_date=OFAWB.flt_date
                 AND shp.tr_no= fbl.tr_no AND fbl.FBL_STATUS = 'P') as fblPc,   
		     (select (DECODE(sum(net_wt),null,'','0','',trim(TO_CHAR(NVL(sum(net_wt),0),'99999990.00')))) from edi_fbl_shp shp,edi_fbl fbl
          where shp.awb_no= OFAWB.AWB_NO
                and shp.awb_date=OFAWB.AWB_DATE
                and fbl.flt_key=OFAWB.flt_key
                and fbl.flt_date=OFAWB.flt_date
                AND shp.tr_no= fbl.tr_no AND fbl.FBL_STATUS = 'P') as fblWt,
          (select decode(sum(offload_pcs),null,'',sum(offload_pcs))||DECODE(sum(offload_pcs),NULL,'','/')||decode(sum(offload_wt),null,'','0','',trim(TO_CHAR(NVL(sum(offload_wt),0),'99999990.00'))) from exp_offload_uld_awb uldAwb where uldAwb.awb_no= OFAWB.AWB_NO  and uldAwb.awb_date=OFAWB.AWB_DATE and uldAwb.flt_key=OFAWB.flt_key and uldAwb.flt_date=OFAWB.flt_date AND CONFIRMED_YN='Y') as offPcWt,        
          '' as nonPreRmk,
          OFAWB.flt_key as fblFltNo,
          TO_CHAR ( OFAWB.flt_date, 'DDMONYY') as fblFltDate
     	FROM EXP_OFFLOAD_ULD_AWB OFAWB
  		WHERE 
      	OFAWB.AWB_NO = #awbNo# AND 
      	OFAWB.AWB_DATE = #awbDate#  
      	AND NOT EXISTS (select NULL from exp_pmanifest_awb where awb_no=#awbNo# and awb_date=#awbDate# AND FLT_KEY=OFAWB.flt_key AND FLT_DATE=OFAWB.flt_date) 
      	AND NOT EXISTS (select NULL from edi_fbl_shp shp,edi_fbl fbl
    		where shp.awb_no= #awbNo#
    		and shp.awb_date=#awbDate#
    		and fbl.flt_key=OFAWB.flt_key
    		and fbl.flt_date=OFAWB.flt_date
    		AND shp.tr_no= fbl.tr_no AND fbl.FBL_STATUS = 'P')
    		AND NOT EXISTS(select NULL from exp_pman_tarmac_awb where awb_no=#awbNo# and awb_date=#awbDate# AND FLT_KEY=OFAWB.flt_key AND FLT_DATE=OFAWB.flt_date)
</select>
<!-- Common for EXPORT AND TRANSHIPMENT -->
<select id="fetchAWBEnqExportOrTranshipmentRCLDetails_102" parameterClass="cargo.cms.admin.report.bo.AWBEnquiry_102BO" resultClass="cargo.cms.admin.report.bo.AWBEnquiry_102BO">
	   SELECT     
		    NVL(EH.VCL_NO, EH.RCL_NO) AS rclNo, rcl_date,EH.AWB_NO as rclAwbNo,TO_CHAR(EH.AWB_DATE,'DDMONYY') as rclAwbDate,DECODE(EH.VCL_NO,null,'RCL','VCL') AS rclVclInd,
           (select code_desc from mast_code_dtl where code_type='PPK_TYPE' and code=EH.PPK_TYPE) AS pkgType,
           EH.ACCPT_MODE AS amType,
           EH.TRANS_CARR_CODE AS transCarr,
		   NVL(EH.RCL_PCS,0) AS rclPcs,	
		   trim(TO_CHAR(NVL(EH.RCL_WT,0),'9999990D99')) AS rclWt,	
		   trim(TO_CHAR(NVL((select sum((LENGTH*WIDTH*HEIGHT*pcs)/1000000) from EXP_RCL_DMN where rcl_no = EH.RCL_NO),0),'99999999999999990.00')) AS valueAmt,
		   NVL(EH.RTN_PCS,0) AS retPcs,		
		   DECODE(EH.RTN_IND,'Y',trim(TO_CHAR(NVL(EH.RTN_WT,0),'9999990D99')),'N','0.0') AS retWt,	 
		   (select code_desc from mast_code_dtl where code_type='RCL_STATUS' and code=EH.STATUS) AS rclstatus
		FROM  EXP_RCL_HD EH
		WHERE    EH.PPK_TYPE IN ('P','B') 
				 AND  EH.AWB_NO = #awbNo# 
		         AND EH.AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY')
				 AND EH.STATUS != 'V'
		UNION ALL		 
		SELECT	   
		    NVL(EH.VCL_NO, EH.RCL_NO) AS rclNo, rcl_date,BRK.AWB_NO as rclAwbNo,TO_CHAR(BRK.AWB_DATE,'DDMONYY') as rclAwbDate,DECODE(EH.VCL_NO,null,'RCL','VCL') AS rclVclInd,
           (select code_desc from mast_code_dtl where code_type='PPK_TYPE' and code=EH.PPK_TYPE) AS pkgType,
           EH.ACCPT_MODE AS amType,
           EH.TRANS_CARR_CODE AS transCarr,
		   NVL(BRK.PCS,0) AS rclPcs,	
		   trim(TO_CHAR(NVL(BRK.WEIGHT,0),'999999999990.00')) AS rclWt,	
		   '0.00' AS valueAmt,
		   NVL(EH.RTN_PCS,0) AS retPcs,		
		   DECODE(EH.RTN_IND,'Y',trim(TO_CHAR(NVL(EH.RTN_WT,0),'9999990D99')),'N','0.0') AS retWt,	 
		   (select code_desc from mast_code_dtl where code_type='RCL_STATUS' and code=EH.STATUS) AS rclstatus		 	 
	 FROM EXP_RCL_HD EH, EXP_RCL_BRKDN BRK
	 WHERE EH.RCL_NO = BRK.RCL_NO  AND EH.PPK_TYPE = 'M'  
           AND BRK.AWB_NO = #awbNo# 
		   AND BRK.AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY')
		   AND EH.STATUS != 'V'
	 order by 2 desc
</select>
<!-- AWB Enquiry EXPORT END Here  -->
	  
<!-- AWB Enquiry TRASHIPMENT STARTS Here  -->
<select id="fetchAWBEnquiryTranshipmentDetails_102" parameterClass="cargo.cms.admin.report.bo.AWBEnquiry_102BO" resultClass="cargo.cms.admin.report.bo.AWBEnquiry_102BO">
				SELECT 
        A.AWB_NO AS awbNo,
		SUBSTR( A.AWB_NO,1,3 ) AS awbNoPFX,
		SUBSTR( A.AWB_NO,4 ) as awbNoSFX,
		A.AWB_TYPE AS awbType, 
        A.CATALOG AS catalog,
        CA.LOCK_IND AS lockYN,
        decode(A.PCS,'','0',A.PCS) AS awbPcs, 
		trim(TO_CHAR(NVL(A.WT,0),'9999990.00')) AS awbWt,	
        A.CARR_CODE AS carrCode,
        (SELECT NVL(OW.PCS,0)||'/'||NVL(OW.WT,0) FROM AWB_OWNER OW WHERE OW.AWB_NO = A.AWB_NO AND OW.AWB_DATE = A.AWB_DATE AND OW.CARR_CODE = A.CARR_CODE) carrPcWt,
        (SELECT COUNT(LICENSE) 
         FROM
            CST_LICENSE 
        WHERE
            AWB_NO = #awbNo# AND
            AWB_DATE = #awbDate#) AS licence,
        A.CAR_YN AS carYN,
        '' AS status,
        TO_CHAR( A.AWB_DATE, 'DDMONYY') AS awbDate, 
        CA.AGENT_CUST_NO AS agentCode,
        (A.SPL_CODE1 || DECODE(A.SPL_CODE2 ,null,'',DECODE(A.SPL_CODE1,NULL,'',',')) ||
			A.SPL_CODE2 || DECODE(A.SPL_CODE3 ,null,'',DECODE(A.SPL_CODE2,NULL,'',',')) || 
			A.SPL_CODE3 || DECODE(A.SPL_CODE4 ,null,'',DECODE(A.SPL_CODE3,NULL,'',',')) || 
			A.SPL_CODE4 || DECODE(A.SPL_CODE5 ,null,'',DECODE(A.SPL_CODE4,NULL,'',',')) || 
			A.SPL_CODE5 || DECODE(A.SPL_CODE6 ,null,'',DECODE(A.SPL_CODE5,NULL,'',',')) ||   
			A.SPL_CODE6 || DECODE(A.SPL_CODE7 ,null,'',DECODE(A.SPL_CODE6,NULL,'',',')) || 
			A.SPL_CODE7 || DECODE(A.SPL_CODE8 ,null,'',DECODE(A.SPL_CODE7,NULL,'',',')) ||  
			A.SPL_CODE8 || DECODE(A.SPL_CODE9 ,null,'',DECODE(A.SPL_CODE8,NULL,'',',')) ||  
			A.SPL_CODE9) AS splCode1,
            (SELECT COUNT(*) FROM CUST_AIRL_SPL_CODE WHERE SPL_CODE=CA.SPL_CODE1 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=CA.SPL_CODE2 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=CA.SPL_CODE3 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=CA.SPL_CODE4 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=CA.SPL_CODE5 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=CA.SPL_CODE6 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=CA.SPL_CODE7 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=CA.SPL_CODE8 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=CA.SPL_CODE9 AND SPL_TYPE='SPL_VAL') AS shpStatus, 
             CA.VAL_FOR_SCH_COLL AS schCollInd,
            CA.DOC_DLV AS docDlv,
             CA.AWB_ORIGIN AS awbOrigin, 
		    (SELECT SUM(CHRG_AMT) FROM BILL_CHARGE_DTL WHERE AWB_NO = #awbNo# AND AWB_DATE=#awbDate#) AS osCharge,
         CA.ALLOW_PACCO AS allowPacco,
            CA.DOC_CHK_REQ AS docChkReq,
            CA.AWB_DEST AS awbDest, 
             A.IMPCAR_YN AS intelligentChk,
             (select case when (select dut_commodity from exp_rcl_hd where awb_no=#awbNo# and awb_date=#awbDate# AND ROWNUM=1) = 'Y' then 'Y'
             else case when (select (select count(*) from cst_dc_dtl where awb_no=#awbNo#) + (select count(*) from cst_code_dtl where awb_no=#awbNo#) as result from dual) > 0
             then 'Y'
             else 'N'
             end
             end
             from dual) AS dcLock,
              CA.DOC_CHK_COMP AS docChkComp,
               CA.CONTENT AS content, 
     		A.AWB_CLOSED_YN AS awbClosed,
          (SELECT COUNT(*) FROM CUST_UNDERTAKING CU WHERE 
                               CU.AGENT_CODE = (SELECT AGENT_CODE FROM AWB WHERE AWB_DATE=#awbDate# AND AWB_NO=#awbNo#) AND 
                               CU.CARR_CODE = (SELECT CARR_CODE FROM AWB WHERE AWB_DATE=#awbDate# AND AWB_NO=#awbNo#) AND 
                               CA.AWB_DATE BETWEEN CU.EFF_FROM AND CU.EFF_TO) AS licenceUnder,  
                                ICS.NOA_IND AS noaSent,
            (SELECT DECODE(COUNT(DOC_RCV),1,'Y','N') FROM IMP_CUST_CLR_LIST WHERE AWB_NO=#awbNo# AND AWB_DATE = #awbDate# AND DOC_RCV = 'Y') AS docRecieve,
   DECODE((SELECT cc_code FROM (SELECT t1.cc_code FROM V_CST_IMP_CC_CODE_AWB t1,mast_constraint_code t2 WHERE t1.cc_code = t2.code AND awb_no = #awbNo# AND NVL(hawb_no, '000000000000000000') = '000000000000000000') where rownum = 1),NULL,
(select CONST_CODE from CST_RECV WHERE AWB_NO = #awbNo# and LM_DATE = (SELECT MAX(LM_DATE) FROM CST_RECV WHERE AWB_NO=#awbNo#) AND rownum=1),
(SELECT cc_code FROM (SELECT t1.cc_code FROM V_CST_IMP_CC_CODE_AWB t1,mast_constraint_code t2 WHERE t1.cc_code = t2.code AND awb_no = #awbNo#  AND NVL(hawb_no, '000000000000000000') = '000000000000000000' ORDER BY t1.PRTY DESC) where rownum = 1)) AS latestCc,
            (DECODE((select count(1) from awb where awb_no = #awbNo# and awb_date=#awbDate# and rownum=1),0,(select rmk from awb_rmk where awb_no=#awbNo# and awb_date=#awbDate# and rownum=1),CA.AIRLN_RMK)) AS airlRmk,  
            (DECODE((select count(1) from awb where awb_no = #awbNo# and awb_date=#awbDate# and rownum=1),0,(select rmk from awb_rmk where awb_no=#awbNo# and awb_date=#awbDate# and rownum=1),CA.AIRLN_RMK)) AS oldAirlRmk,
            (select SEQ_NO from awb_rmk where awb_no=#awbNo# and awb_date=#awbDate# and rownum=1) AS seqNo,
            (DECODE((select count(1) from imp_car_awb where awb_no = #awbNo# and awb_date=#awbDate# and rownum=1),0,(select awb_rmk from awb where awb_no=#awbNo# and awb_date=#awbDate# and rownum=1),CA.WH_RMK)) AS whRmk,
            (DECODE((select count(1) from imp_car_awb where awb_no = #awbNo# and awb_date=#awbDate# and rownum=1),0,(select awb_rmk from awb where awb_no=#awbNo# and awb_date=#awbDate# and rownum=1),CA.WH_RMK)) AS oldWHRmk,		           
            '' AS manRmk,
            (select DECODE(CONFIRMED_RMK,NULL,RMK,CONFIRMED_RMK) from exp_offload_uld_awb where awb_no=#awbNo# and awb_date=#awbDate# and (confirmed_rmk is not null OR RMK IS NOT NULL) AND ROWNUM=1) AS offloadRmk,
            CA.CSGNE_NAME as consignee,
            CA.CSGNE_ADDR AS consigneAddr,
            CA.CSGNE_ADDR1 AS consigneAddr1,
            CA.CSGNE_ADDR2 AS consigneAddr2,
            CA.CSGNE_ADDR3 AS consigneAddr3,
            CA.CSGNE_ADDR4 AS consigneAddr4,
            CA.CSGNE_ADDR5 AS consigneAddr5,
            decode(CA.CSGNE_PLACE,'','Hong Kong',CA.CSGNE_PLACE) as consCity,
            decode(CA.CSGNE_CTRY_CODE,'',(select code_desc from mast_country mcntr where mcntr.code = 'HK'),(select code_desc from mast_country mcntr1 where mcntr1.code = CA.CSGNE_CTRY_CODE)) as consCountry,
             CA.SHPR_NAME AS shipperName,
            CA.SHPR_ADD1 AS shipperAddr,
            CA.SHPR_ADD2 AS shipperAddr1,
            CA.SHPR_ADD3 AS shipperAddr2,
            CA.SHPR_ADD4 AS shipperAddr3,
            '' AS shipperAddr4,
            decode(CA.SHPR_CTRY_CODE,'',(select code_desc from mast_country mcntr where mcntr.code = 'HK'),(select code_desc from mast_country mcntr1 where mcntr1.code = CA.SHPR_CTRY_CODE)) as shprCountry,
	        decode(CA.SHPR_PLACE,'','Hong Kong',CA.SHPR_PLACE) as shprCity,
          CA.APPNTD_AGENT AS appiontedAgent,
	        CA.AGENT_ADDR1 AS agentAddr,
	        CA.AGENT_ADDR2 AS agentAddr1,
	        CA.AGENT_ADDR3 AS agentAddr2,
	        CA.AGENT_ADDR4 AS agentAddr3,
	        CA.AGENT_ADDR5 AS agentAddr4,
          (DECODE(A.INT_YN,'N','N',DECODE(A.AMD_YN,'N','N',DECODE(A.IMPCAR_YN,'N','N',DECODE(A.LBS_YN,'N','N',DECODE(A.DOCACC_YN,'N','N',DECODE(A.LPPS_YN,'N','N','Y'))))))) AS intStatus,          
           DECODE( (select count(*) from imp_car_shp shp,imp_car_awb awb where shp.awb_no = awb.awb_no and shp.awb_date = awb.awb_date and 
             awb.awb_pcs > shp.manifest_pcs and shp.awb_no= #awbNo# and shp.awb_date = #awbDate#),0,
             (select  count(*) from awb where awb_no = #awbNo#  and awb_date= #awbDate# and  CAR_YN='Y' and pman_pcs > 0 and pcs > pman_pcs),1) AS partShipment,
          '' AS docAccept,
          case when (select count(1) from cust_interaction where awb_no = #awbNo# and comp_date is null and follow_up_date is not null) > 0 then 'Y' else 'N' end AS pendingAction,
          ((select AWB_IMAGE_NAME FROM AWB_IMAGE WHERE seq_no = (SELECT MAX(SEQ_NO) FROM AWB_IMAGE WHERE AWB_NO = #awbNo# AND AWB_DATE = #awbDate#) )) AS transactionId,
          DECODE(AI.AWB_IMAGE_NAME,'','Y','N') AS attachmentStatus,
          TO_CHAR(CA.LM_DATE, 'DDMONYY HH24:MI:SS') AS lmDate,
			CA.ECT_HANDLER AS ectHandler, 
			pkg_common.get_awb_splcodes(CA.awb_no, CA.awb_date, 'I') spl, 	
 			CA.SHPR_NAME AS shprName, 
 			CA.APPNTD_AGENT AS appntdAgent, 
 			CA.AWB_CLOSE_RMK AS awbCloseRmark, 
 			CA.AWB_RMK AS oldAwbRemark,
		  CA.AWB_RMK AS awbRemark,
		  NULL AS holdingPeriod,
		  CA.SHPR_STATE_PROVINCE shipperState,
		  CA.CSGNE_STATE_PROVINCE consigneeState 
      FROM 
	   IMP_CAR_AWB CA,
     AWB A,
     IMP_CAR_SHP ICS,
     AWB_IMAGE AI,
     V_CST_IMP_CC_CODE_AWB VCCODE
   WHERE
       A.AWB_NO(+) = CA.AWB_NO AND
       A.AWB_DATE(+) = CA.AWB_DATE AND
       ICS.AWB_NO(+) = CA.AWB_NO AND 
       ICS.AWB_DATE(+) = CA.AWB_DATE AND
       AI.AWB_NO(+) = CA.AWB_NO AND
       AI.AWB_DATE(+) = CA.AWB_DATE AND
       VCCODE.FLT_KEY(+) = ICS.FLT_KEY AND 
       VCCODE.FLT_DATE(+) = ICS.FLT_DATE AND
       VCCODE.AWB_NO(+)=ICS.AWB_NO AND
       VCCODE.HAWB_NO(+)='000000000000000000' AND
       A.AWB_NO = #awbNo# AND
       A.AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY')	
       UNION
       SELECT 
		A.AWB_NO AS awbNo,
		SUBSTR( A.AWB_NO,1,3 ) AS awbNoPFX,
		SUBSTR( A.AWB_NO,4 ) AS awbNoSFX,
		A.AWB_TYPE AS awbType, 
		decode(A.CATALOG,'',CA.CATALOG,A.CATALOG) AS catalog,
    NVL(CA.LOCK_IND,'N') AS lockYN,
    decode(A.PCS,'','0',A.PCS) AS awbPcs, 
		trim(TO_CHAR(NVL(A.WT,0),'9999990.00')) AS awbWt,
    A.CARR_CODE AS carrCode,
   (SELECT NVL(OW.PCS,0)||'/'||NVL(OW.WT,0) FROM AWB_OWNER OW WHERE OW.AWB_NO = A.AWB_NO AND OW.AWB_DATE = A.AWB_DATE AND OW.CARR_CODE = A.CARR_CODE) carrPcWt,
 			  (SELECT COUNT(LICENSE) 
         FROM
            CST_LICENSE 
        WHERE
            AWB_NO = #awbNo# AND
            AWB_DATE = #awbDate#) AS licence,
            A.CAR_YN AS carYN,
            (SELECT STRAGG(STRINGDELIM(COD_FSU_STS, ',')) FROM (SELECT  DISTINCT COD_FSU_STS FROM AWB_SHP_STS WHERE AWB_DATE=#awbDate# AND AWB_NO=#awbNo#)) AS status,
            TO_CHAR( A.AWB_DATE, 'DDMONYY') AS awbDate,  
            CA.AGENT_CODE AS agentCode,
            (A.SPL_CODE1 || DECODE(A.SPL_CODE2 ,null,'',DECODE(A.SPL_CODE1,NULL,'',',')) ||
			A.SPL_CODE2 || DECODE(A.SPL_CODE3 ,null,'',DECODE(A.SPL_CODE2,NULL,'',',')) || 
			A.SPL_CODE3 || DECODE(A.SPL_CODE4 ,null,'',DECODE(A.SPL_CODE3,NULL,'',',')) || 
			A.SPL_CODE4 || DECODE(A.SPL_CODE5 ,null,'',DECODE(A.SPL_CODE4,NULL,'',',')) || 
			A.SPL_CODE5 || DECODE(A.SPL_CODE6 ,null,'',DECODE(A.SPL_CODE5,NULL,'',',')) ||   
			A.SPL_CODE6 || DECODE(A.SPL_CODE7 ,null,'',DECODE(A.SPL_CODE6,NULL,'',',')) || 
			A.SPL_CODE7 || DECODE(A.SPL_CODE8 ,null,'',DECODE(A.SPL_CODE7,NULL,'',',')) ||  
			A.SPL_CODE8 || DECODE(A.SPL_CODE9 ,null,'',DECODE(A.SPL_CODE8,NULL,'',',')) ||  
			A.SPL_CODE9) AS splCode1,
            (SELECT COUNT(*) FROM CUST_AIRL_SPL_CODE WHERE SPL_CODE=CA.SPL_CODE1 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=CA.SPL_CODE2 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=CA.SPL_CODE3 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=CA.SPL_CODE4 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=CA.SPL_CODE5 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=CA.SPL_CODE6 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=CA.SPL_CODE7 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=CA.SPL_CODE8 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=CA.SPL_CODE9 AND SPL_TYPE='SPL_VAL') AS shpStatus, 
            '' AS schCollInd,
            '' AS docDlv,
            A.ORIG AS awbOrigin, 
            (SELECT SUM(CHRG_AMT) FROM BILL_CHARGE_DTL WHERE AWB_NO = #awbNo# AND AWB_DATE=#awbDate#) AS osCharge,
            CCC.ALLOW_PACCO AS allowPacco,
            '' AS docChkReq,
            A.DEST AS awbDest,
            A.EXPCAR_YN AS intelligentChk, 
            (select case when (select dut_commodity from exp_rcl_hd where awb_no=#awbNo# and awb_date=#awbDate# AND ROWNUM=1) = 'Y' then 'Y'
             else case when (select (select count(*) from cst_dc_dtl where awb_no=#awbNo#) + (select count(*) from cst_code_dtl where awb_no=#awbNo#) as result from dual) > 0
             then 'Y'
             else 'N'
             end
             end
             from dual) AS dcLock,
            '' AS docChkComp,
		    A.CONTENT AS content, 
            A.AWB_CLOSED_YN AS awbClosed,
            (SELECT COUNT(*) FROM CUST_UNDERTAKING CU WHERE 
                               CU.AGENT_CODE = (SELECT AGENT_CODE FROM AWB WHERE AWB_DATE=#awbDate# AND AWB_NO=#awbNo#) AND 
                               CU.CARR_CODE = (SELECT CARR_CODE FROM AWB WHERE AWB_DATE=#awbDate# AND AWB_NO=#awbNo#) AND 
                               CA.AWB_DATE BETWEEN CU.EFF_FROM AND CU.EFF_TO) AS licenceUnder, 
            '' AS noaSent,
            (select DECODE(count(recd.awb_no),1,'Y','N') from exp_doc_recd recd where
                recd.awb_no=#awbNo# and recd.awb_date=#awbDate# and awb_frz_yn='Y') AS docRecieve,
             (select CONST_CODE from CST_RECV WHERE AWB_NO = #awbNo# and LM_DATE = (SELECT MAX(LM_DATE) FROM CST_RECV WHERE AWB_NO=#awbNo#) AND rownum=1) AS latestCc,
            (DECODE((select count(1) from EXP_CAR where awb_no = #awbNo# and awb_date=#awbDate# and rownum=1),0,(select rmk from awb_rmk where awb_no=#awbNo# and awb_date=#awbDate# and rownum=1),CA.AIRL_RMK)) AS airlRmk,
			(DECODE((select count(1) from EXP_CAR where awb_no = #awbNo# and awb_date=#awbDate# and rownum=1),0,(select rmk from awb_rmk where awb_no=#awbNo# and awb_date=#awbDate# and rownum=1),CA.AIRL_RMK)) AS oldAirlRmk,
			(select SEQ_NO from awb_rmk where awb_no=#awbNo# and awb_date=#awbDate# and rownum=1) AS seqNo,
            (DECODE((select count(1) from EXP_CAR where awb_no = #awbNo# and awb_date=#awbDate# and rownum=1),0,a.AWB_RMK,CA.WH_RMK)) AS whRmk,
			(DECODE((select count(1) from EXP_CAR where awb_no = #awbNo# and awb_date=#awbDate# and rownum=1),0,a.AWB_RMK,CA.WH_RMK)) AS oldWHRmk,
            EPA.MAN_RMK AS manRmk,
            (select DECODE(CONFIRMED_RMK,NULL,RMK,CONFIRMED_RMK) from exp_offload_uld_awb where awb_no=#awbNo# and awb_date=#awbDate# and (confirmed_rmk is not null OR RMK IS NOT NULL) AND ROWNUM=1) AS offloadRmk,
		    CA.CSGNE_NAME as consignee,
            CA.CSGNE_ADDR AS consigneAddr,
            '' AS consigneAddr1,
            CA.CSGNE_ADDR2 AS consigneAddr2,
            CA.CSGNE_ADDR3 AS consigneAddr3,
            CA.CSGNE_ADDR4 AS consigneAddr4,
            '' AS consigneAddr5,
            decode(CA.CSGNE_PLACE,'','Hong Kong',CA.CSGNE_PLACE) as consCity,
	        decode(CA.CSGNE_CTRY_CODE,'',(select code_desc from mast_country mcntr where mcntr.code = 'HK'),(select code_desc from mast_country mcntr1 where mcntr1.code = CA.CSGNE_CTRY_CODE)) as consCountry,
            CA.SHPR_NAME AS shipperName,
            '' AS shipperAddr,
            CA.SHPR_ADDR AS shipperAddr1,
            CA.SHPR_ADDR2 AS shipperAddr2,
            CA.SHPR_ADDR3 AS shipperAddr3,
            CA.SHPR_ADDR4 AS shipperAddr4,        
            decode(CA.SHPR_CTRY_CODE,'',(select code_desc from mast_country mcntr where mcntr.code = 'HK'),(select code_desc from mast_country mcntr1 where mcntr1.code = CA.SHPR_CTRY_CODE)) as shprCountry,
	        decode(CA.SHPR_PLACE,'','Hong Kong',CA.SHPR_PLACE) as shprCity,
          CA.AGENT_NAME AS appiontedAgent,
	        CA.EDI_AGENT_ADDR_1 AS agentAddr,
	        CA.EDI_AGENT_ADDR_2 AS agentAddr1,
	        CA.EDI_AGENT_ADDR_3 AS agentAddr2,
	        CA.EDI_AGENT_ADDR_4 AS agentAddr3,
	        CA.EDI_AGENT_ADDR_5 AS agentAddr4,
	        DECODE(A.INT_YN,'N','N',DECODE(A.AMD_YN,'N','N',DECODE(A.EXPCAR_YN,'N','N',DECODE(A.LBS_YN,'N','N',DECODE(A.DOCACC_YN,'N','N',DECODE(A.LPPS_YN,'N','N','Y')))))) AS intStatus,
	        (select  count(*) from awb where awb_no = #awbNo# and awb_date = #awbDate# and  CAR_YN='Y' and pman_pcs > 0 and pcs > pman_pcs) AS partShipment,
	        decode(A.DOCACC_USER,'',(decode(A.DOCACC_DATE,'','N','Y')),'Y') AS docAccept,
	        (select decode((select count(awb_no) from cust_interaction where awb_no = #awbNo# and rownum=1),'1',(decode((select count(awb_no) from cust_interaction where awb_no=#awbNo# and comp_date is null and rownum=1),'1','Y','N')),'N') from dual) AS pendingAction,
	        ((select AWB_IMAGE_NAME FROM AWB_IMAGE WHERE seq_no = (SELECT MAX(SEQ_NO) FROM AWB_IMAGE WHERE AWB_NO = #awbNo# AND AWB_DATE = #awbDate#) )) AS transactionId,
	        DECODE(AI.AWB_IMAGE_NAME,'','Y','N') AS attachmentStatus,
			TO_CHAR(CA.LM_DATE, 'DDMONYY HH24:MI:SS') AS lmDate,
     		'' AS ectHandler, 
			'' AS spl, 	
 			'' AS shprName, 
 			'' AS appntdAgent, 
 			'' AS awbCloseRmark, 
 			'' AS oldAwbRemark,
		  '' AS awbRemark,
		  CA.HLDG_PERIOD AS holdingPeriod,
		  CA.SHPR_STATE_PROVINCE shipperState,
		  CA.CSGNE_STATE_PROVINCE consigneeState 
	    FROM 
       EXP_CAR CA,
		   AWB A,
		   AWB_IMAGE AI,
		   EXP_PMANIFEST_AWB EPA,
       CUST_COMPANY CCC 
      WHERE
       A.AWB_NO(+) = CA.AWB_NO AND
       A.AWB_DATE(+) = CA.AWB_DATE  AND
       EPA.AWB_NO(+) = CA.AWB_NO AND
       EPA.AWB_DATE(+) = CA.AWB_DATE AND
       CCC.CODE(+) = CA.AGENT_CODE AND
       AI.AWB_NO(+) = CA.AWB_NO AND
       AI.AWB_DATE(+) = CA.AWB_DATE AND
       A.AWB_NO = #awbNo# AND
       A.AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY')
       and  NOT EXISTS (select NULL from imp_car_awb where awb_no=#awbNo# and awb_date=#awbDate#)
</select> 
<select id="fetchAWBEnquiryTranshipmentSummaryDetails_102" parameterClass="cargo.cms.admin.report.bo.AWBEnquiry_102BO" resultClass="cargo.cms.admin.report.bo.AWBEnquiry_102BO">
	 SELECT 
   (SELECT DECODE(SUM(ICS.MANIFEST_PCS),NULL,'','0','',SUM(ICS.MANIFEST_PCS)) FROM IMP_CAR_SHP ICS WHERE ICS.AWB_NO = #awbNo# AND ICS.AWB_DATE = #awbDate# and car_created = 'Y') AS smanifestPcs,
   (SELECT DECODE(SUM(ICS.MANIFEST_WT),null,'','0','',trim(TO_CHAR(NVL(SUM(ICS.MANIFEST_WT),0),'99999990.00'))) FROM IMP_CAR_SHP ICS WHERE ICS.AWB_NO = #awbNo# AND ICS.AWB_DATE = #awbDate# and car_created = 'Y') AS smanifestWt,
   (SELECT DECODE(SUM(ICS.RECD_PCS),NULL,'','0','',SUM(ICS.RECD_PCS)) FROM IMP_CAR_SHP ICS WHERE ICS.AWB_NO = #awbNo# AND ICS.AWB_DATE = #awbDate#) AS sbupPcs,
   (SELECT DECODE(SUM(ICS.RECD_WT),null,'','0','',trim(TO_CHAR(NVL(SUM(ICS.RECD_WT),0),'99999990.00'))) FROM IMP_CAR_SHP ICS WHERE ICS.AWB_NO = #awbNo# AND ICS.AWB_DATE = #awbDate#) AS sbupWt,
   (SELECT DECODE(SUM(ICA.AWB_PCS),NULL,'','0','',SUM(ICA.AWB_PCS)) FROM IMP_CAR_AWB ICA WHERE ICA.AWB_NO = #awbNo# AND ICA.AWB_DATE = #awbDate#) As stotalPcs,
   (SELECT DECODE(SUM(ICA.AWB_WT),null,'','0','',trim(TO_CHAR(NVL(SUM(ICA.AWB_WT),0),'99999990.00'))) FROM IMP_CAR_AWB ICA WHERE ICA.AWB_NO = #awbNo# AND ICA.AWB_DATE = #awbDate#) As stotalWt,
   (select DECODE(sum(rclPcs),NULL,'','0','',sum(rclPcs)) from(SELECT NVL(EH.RCL_PCS,0) AS rclPcs
		FROM  EXP_RCL_HD EH
		WHERE    EH.PPK_TYPE IN ('P','B') 
				 AND  EH.AWB_NO = #awbNo#
		         AND EH.AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY')
				 AND EH.STATUS != 'V'
		UNION ALL		 
		SELECT	NVL(BRK.PCS,0) AS rclPcs
	 FROM EXP_RCL_HD EH, EXP_RCL_BRKDN BRK
	 WHERE EH.RCL_NO = BRK.RCL_NO  AND EH.PPK_TYPE = 'M'  
           AND BRK.AWB_NO = #awbNo# 
		   AND BRK.AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY')
		   AND EH.STATUS != 'V')) as srcsPcs,
   (select DECODE(sum(rclWt),null,'','0','',trim(TO_CHAR(NVL(sum(rclWt),0),'99999990.00'))) from(SELECT
		        trim(TO_CHAR(NVL(EH.RCL_WT,0),'9999990D99')) AS rclWt
		FROM  EXP_RCL_HD EH
		WHERE    EH.PPK_TYPE IN ('P','B') 
				 AND  EH.AWB_NO = #awbNo#
		         AND EH.AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY')
				 AND EH.STATUS != 'V'
		UNION ALL		 
		SELECT	trim(TO_CHAR(NVL(BRK.WEIGHT,0),'999999999990.00')) AS rclWt
	 FROM EXP_RCL_HD EH, EXP_RCL_BRKDN BRK
	 WHERE EH.RCL_NO = BRK.RCL_NO  AND EH.PPK_TYPE = 'M'  
           AND BRK.AWB_NO = #awbNo# 
		   AND BRK.AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY')
		   AND EH.STATUS != 'V')) as srcsWt,
	 (select DECODE(SUM(manf_pc),NULL,'','0','',SUM(manf_pc)) from  
	 (select  flt_key,flt_date,awb_no,awb_date,sum(manf_pc) manf_pc
		   FROM ( select flt_key flt_key,flt_date flt_date, awb_no awb_no,awb_date awb_date, sum(nvl(bulk_pcs,0)) manf_pc
		   from exp_pmanifest_awb GROUP BY flt_key, flt_date, awb_no, awb_date
		   UNION ALL
		   select flt_key flt_key, flt_date flt_date, awb_no awb_no,awb_date awb_date, sum(nvl(bulk_pcs,0)+nvl(ppk_pcs,0)) manf_pc
		   from EXP_PMAN_TARMAC_AWB group by flt_key,awb_no,awb_date,flt_date)  group by flt_key,flt_date,awb_no,awb_date)EPA       
		   where awb_no = #awbNo#
		   and awb_date  = #awbDate#)	 AS spmanifestPcs, 
		   
	(select DECODE(SUM(manf_wt),null,'','0','',trim(TO_CHAR(NVL(SUM(manf_wt),0),'99999990.00'))) from  
	 (select  flt_key,flt_date,awb_no,awb_date,sum(manf_wt) manf_wt
		   FROM ( select flt_key flt_key,flt_date flt_date, awb_no awb_no,awb_date awb_date, sum(nvl(bulk_wt,0)) manf_wt
		   from exp_pmanifest_awb GROUP BY flt_key, flt_date, awb_no, awb_date
		   UNION ALL
		   select flt_key flt_key, flt_date flt_date, awb_no awb_no,awb_date awb_date, sum(nvl(bulk_wt,0)+nvl(ppk_wt,0)) manf_wt
		   from EXP_PMAN_TARMAC_AWB group by flt_key,awb_no,awb_date,flt_date)  group by flt_key,flt_date,awb_no,awb_date)EPA       
		   where awb_no = #awbNo#
		   and awb_date  = #awbDate#)	 AS spmanifestWt,       
      (select DECODE(sum(SHPM_ASSGN_PCS),NULL,'','0','',sum(SHPM_ASSGN_PCS)) from EXP_MANIFEST_DTL EM where EM.AWB_NO = #awbNo# AND AWB_DATE = #awbDate#) AS sdepPcs,
      (select DECODE(sum(SHPM_ASSGN_WT),null,'','0','',trim(TO_CHAR(NVL(sum(SHPM_ASSGN_WT),0),'99999990.00'))) from EXP_MANIFEST_DTL EM where EM.AWB_NO = #awbNo# AND AWB_DATE = #awbDate#) AS sdepWt
   FROM DUAL
</select>
<select id="fetchAWBEnquiryTranshipmentFlightDetails_102" parameterClass="cargo.cms.admin.report.bo.AWBEnquiry_102BO" resultClass="cargo.cms.admin.report.bo.AWBEnquiry_102BO">
	  SELECT 
      (select carr_code from awb where awb_no=ICS.AWB_NO and awb_date=ICS.AWB_DATE AND ROWNUM=1) carrCode,
      (select carr_code from flt_opr where flt_key = ICS.FLT_KEY and sch_date = ICS.FLT_DATE and flt_type = decode(ICS.FLT_TYPE,'I','A','D')) fltCarr,
      ICS.FLT_KEY AS fltNo,
      TO_CHAR (ICS.FLT_DATE, 'DDMONYY') AS fltDate,
      ICS.FLT_TYPE AS fltType,
      pkg_common.get_flt_ata(ICS.FLT_KEY, ICS.FLT_DATE,'A') AS ata,
      DECODE(ICS.MANIFEST_PCS,NULL,'','0','',ICS.MANIFEST_PCS) AS manifestPcs,
      DECODE(ICS.MANIFEST_WT,null,'','0','',DECODE(trim(TO_CHAR(NVL(ICS.MANIFEST_WT,0),'99999990.00')),'0.0','',trim(TO_CHAR(NVL(ICS.MANIFEST_WT,0),'99999990.00')))) AS manifestWt,
      DECODE(ICS.RECD_PCS,NULL,'','0','',ICS.RECD_PCS) AS bdPcs,
      DECODE(ICS.RECD_WT,null,'','0','',DECODE(trim(TO_CHAR(NVL(ICS.RECD_WT,0),'99999990.00')),'0.0','',trim(TO_CHAR(NVL(ICS.RECD_WT,0),'99999990.00')))) AS bdWt,
      DECODE(ISRF.SRFPCS,'0','',NULL,'',ISRF.SRFPCS) AS  srfpcs,
      DECODE(ISRF.SRFWT,null,'','0','',DECODE(trim(TO_CHAR(NVL(ISRF.SRFWT,0),'99999990.00')),'0.0','',trim(TO_CHAR(NVL(ISRF.SRFWT,0),'99999990.00')))) AS  srfwt,
		  '' AS releasePcs,
      '' AS releaseWt,
      VCCODE.CC_CODE AS cc,
	    (SELECT STRAGG(STRINGDELIM(A.TRF_TYPE , ',')) FROM
  (SELECT DS.AWB_NO,DS.AWB_DATE,DM.FLT_KEY,DM.FLT_DATE,TRF_TYPE
    FROM DDT_SHP_TRF_DTL DTL,      DDT_SHP DS,      DDT_MSG DM
    WHERE 
    DS.DOC_LINE_NO=DTL.DOC_LINE_NO
    AND DS.TR_NO      =DTL.TR_NO
    AND DM.TR_NO      = DTL.TR_NO
    AND DM.DDT_STATUS = 'P'
    GROUP BY TRF_TYPE,DS.AWB_NO,DS.AWB_DATE,DM.FLT_KEY,DM.FLT_DATE) A WHERE A.AWB_NO=ICS.AWB_NO AND A.AWB_DATE=ICS.AWB_DATE AND A.FLT_KEY=ICS.FLT_KEY AND A.FLT_DATE=ICS.FLT_DATE
    and exists(select null from flt_opr_events where flt_key=A.FLT_KEY and sch_date=A.FLT_DATE and flt_type='A' and ddt_finalise_date is not null)) AS subType,
      DECODE(ICS.BULK_PCS,NULL,'','0','',ICS.BULK_PCS) AS blkPcs,
      DECODE(ICS.BULK_WT,null,'','0','',DECODE(trim(TO_CHAR(NVL(ICS.BULK_WT,0),'99999990.00')),'0.0','',trim(TO_CHAR(NVL(ICS.BULK_WT,0),'99999990.00')))) AS blkWt,
      DECODE(ICS.BUP_PCS,NULL,'','0','',ICS.BUP_PCS) AS ppkPcs,
      DECODE(ICS.BUP_WT,null,'','0','',DECODE(trim(TO_CHAR(NVL(ICS.BUP_WT,0),'99999990.00')),'0.0','',trim(TO_CHAR(NVL(ICS.BUP_WT,0),'99999990.00')))) AS ppkWt,
      '' efltCarr,
      '' AS efltNo,
      '' AS efltDate,
      '' AS efltType,
      '' AS preManifestPcs,
      '' AS preManifestWt,
      '' AS buPcs,
      '' AS buWt,      
      '' AS emanifestPcs,  
      '' AS emanifestWt,            
      '' AS eblkPcs,
      '' AS eblkWt,
      '' AS tpkOrTnb,
      '' AS eppkPcs,
      '' AS eppkWt,
      '' AS etrNo,        
      '' AS efltNo1,
      '' as fblPc,
      '' as fblWt,
      '' as offPcWt,
      '' as nonPreRmk,
      '' as fblFltNo,
      '' as fblFltDate
    FROM
    IMP_CAR_SHP ICS
    LEFT JOIN (SELECT SF.AWB_NO, SF.AWB_DATE, SF.ORIG_FLT_KEY, SF.ORIG_FLT_DATE,SUM(SR.SRF_PCS) SRFPCS, SUM(SR.SRF_WT) SRFWT,SUM(SF.DLV_PCS) RELPCS,
               SUM(DLV_WT) RELWT
               FROM IMP_SRF SR 
                           join IMP_SRF_FLT SF ON SR.SRF_NO = SF.SRF_NO
               WHERE ((SR.STATUS ='ISSUED' and SR.SRF_EXPY_DATE > SYSDATE) OR (SR.STATUS ='POSTED' or
                               SR.SRF_NO IN (SELECT SRF_NO FROM IMP_CDIF WHERE VOID_DATE IS NULL)))  
              GROUP BY SF.AWB_NO, SF.AWB_DATE, SF.ORIG_FLT_KEY, SF.ORIG_FLT_DATE
            ) ISRF ON ICS.AWB_NO = ISRF.AWB_NO AND
                  ICS.AWB_DATE = ISRF.AWB_DATE AND
                  ICS.FLT_KEY = ISRF.ORIG_FLT_KEY AND
                  ICS.FLT_DATE = ISRF.ORIG_FLT_DATE
  LEFT JOIN V_CST_IMP_CC_CODE_AWB VCCODE ON VCCODE.FLT_KEY=ICS.FLT_KEY AND VCCODE.FLT_DATE=ICS.FLT_DATE AND VCCODE.AWB_NO=ICS.AWB_NO AND VCCODE.HAWB_NO='000000000000000000'
  Where ICS.AWB_NO = #awbNo# AND 
        ICS.AWB_DATE = to_date(#awbDate#,'DDMONYY') 
UNION
SELECT
      (select carr_code from awb where awb_no=EPA.AWB_NO and awb_date=EPA.AWB_DATE AND ROWNUM=1) ecarrcode,
       '',
       '',
       '',
       '',
       pkg_common.get_flt_ata(EPA.FLT_KEY, EPA.FLT_DATE,'D') AS ata,
       '',
       '',   
       '',
       '',     
       '',
       '',
       (SELECT STRAGG(STRINGDELIM(A.TRF_TYPE , ',')) FROM
  (SELECT DS.AWB_NO,DS.AWB_DATE,DM.FLT_KEY,DM.FLT_DATE,TRF_TYPE
    FROM DDT_SHP_TRF_DTL DTL,      DDT_SHP DS,      DDT_MSG DM
    WHERE 
    DS.DOC_LINE_NO=DTL.DOC_LINE_NO
    AND DS.TR_NO      =DTL.TR_NO
    AND DM.TR_NO      = DTL.TR_NO
    AND DM.DDT_STATUS = 'P'
    GROUP BY TRF_TYPE,DS.AWB_NO,DS.AWB_DATE,DM.FLT_KEY,DM.FLT_DATE) A WHERE A.AWB_NO=EPA.awb_no AND A.AWB_DATE=EPA.awb_date AND A.FLT_KEY=EPA.flt_key AND A.FLT_DATE=EPA.FLT_DATE
    and exists(select null from flt_opr_events where flt_key=A.FLT_KEY and sch_date=A.FLT_DATE and flt_type='A' and ddt_finalise_date is not null)) AS subType,
       '',
       '',
       '',
       '',
       '',
       '',
       '',
      (select carr_code from flt_opr where flt_key = EPA.FLT_KEY and sch_date = EPA.FLT_DATE and flt_type ='D') efltCarr,
      EPA.FLT_KEY AS efltNo,
      TO_CHAR (EPA.FLT_DATE, 'DDMONYY') AS efltDate,
      'E' AS efltType,
      decode(EPA.manf_pc,NULL,'','0','',EPA.manf_pc) AS preManifestPcs,  
      decode(EPA.manf_wt,NULL,'','0','',trim(TO_CHAR(NVL(EPA.manf_wt,0),'99999990.00'))) AS preManifestWt,  
      decode(EPA.bup_pc,NULL,'','0','',EPA.bup_pc) AS buPcs,
      decode(EPA.bup_wt,NULL,'','0','',trim(TO_CHAR(NVL(EPA.bup_wt,0),'99999990.00'))) AS buWt,       
      case when (select FINAL_MANF_IND from flt_opr_events  where FLT_KEY = EPA.FLT_KEY AND SCH_DATE = EPA.FLT_DATE AND FLT_TYPE = 'D')  = 'Y' then decode(EPA.manf_pc,NULL,'','0','',EPA.manf_pc) else '' end AS emanifestPcs,  
      case when (select FINAL_MANF_IND from flt_opr_events  where FLT_KEY = EPA.FLT_KEY AND SCH_DATE = EPA.FLT_DATE AND FLT_TYPE = 'D')  = 'Y' then decode(EPA.manf_wt,NULL,'','0','',trim(TO_CHAR(NVL(EPA.manf_wt,0),'99999990.00'))) else '' end AS emanifestWt,  
      decode(EPA.BULK_PC,NULL,'','0','',EPA.BULK_PC) AS eblkPcs,  
      decode(EPA.BULK_WT,NULL,'','0','',trim(TO_CHAR(NVL(EPA.BULK_WT,0),'99999990.00'))) AS eblkWt, 
      decode((select count(1)	from exp_pmanifest_uld_awb pAwb 
      					join exp_pmanifest_uld pUld on pAwb.flt_key = pUld.flt_key and pAwb.flt_date = pUld.flt_date and pAwb.uld_bt_no = pUld.uld_bt_no  
               			 join uld_inventory uInv on pUld.uld_bt_no = uInv.uld_key
      					where pAwb.awb_no = #awbNo# and pAwb.awb_date = #awbDate# 
      					and  pUld.flt_key = EPA.FLT_KEY and to_char(pUld.Flt_date,'DDMONYY') = to_char(EPA.FLT_DATE,'DDMONYY')
      					and NVL(uInv.TRANSIT_FLG,'N') = 'Y' and uInv.HANDLING_MODE in ('PPK','NBK')),0,'N','Y') tpkOrTnb, 
      decode(EPA.PPK_PC,NULL,'','0','',EPA.PPK_PC) AS eppkPcs, 
      decode(EPA.PPK_WT,NULL,'','0','',trim(TO_CHAR(NVL(EPA.PPK_WT,0),'99999990.00'))) AS eppkWt,     
   (SELECT EM.TR_NO FROM EXP_MANIFEST_DTL EM WHERE EPA.AWB_NO = EM.AWB_NO AND EPA.AWB_DATE = EM.AWB_DATE AND
    EPA.FLT_KEY = EM.FLT_KEY AND EPA.FLT_DATE = EM.FLT_DATE AND ROWNUM = 1) AS etrNo,        
     EPA.FLT_KEY AS efltNo1,     
    (select DECODE(sum(pcs),NULL,'','0','',sum(pcs)) from edi_fbl_shp shp,edi_fbl fbl
    where shp.awb_no= EPA.awb_no
    and shp.awb_date=EPA.awb_date 	
    and fbl.flt_key=EPA.flt_key
    and fbl.flt_date=EPA.flt_date
    AND shp.tr_no= fbl.tr_no AND fbl.FBL_STATUS = 'P') as fblPc,   
    (select DECODE(sum(net_wt),NULL,'','0','',trim(TO_CHAR(NVL(sum(net_wt),0),'99999990.00'))) from edi_fbl_shp shp,edi_fbl fbl
    where shp.awb_no= EPA.awb_no
    and shp.awb_date=EPA.awb_date
    and fbl.flt_key=EPA.flt_key
    and fbl.flt_date=EPA.flt_date
    AND shp.tr_no= fbl.tr_no AND fbl.FBL_STATUS = 'P') as fblWt,
    (select  decode(sum(offload_pcs),null,'','0','',sum(offload_pcs))||DECODE(sum(offload_pcs),NULL,'','0','','/')||decode(sum(offload_wt),null,'','0','',trim(TO_CHAR(NVL(sum(offload_wt),0),'99999990.00'))) from exp_offload_uld_awb uldAwb where uldAwb.awb_no=EPA.awb_no  and uldAwb.awb_date=EPA.awb_date and uldAwb.flt_key=EPA.flt_key and uldAwb.flt_date=EPA.flt_date and confirmed_yn='Y') as offPcWt,    
    (select rmk  from edi_fbl_shp shp,edi_fbl fbl 
    where shp.awb_no= EPA.awb_no
    and shp.awb_date=EPA.awb_date
    and fbl.flt_key=EPA.flt_key
    and fbl.flt_date=EPA.flt_date
    AND shp.tr_no= fbl.tr_no AND rownum = 1) as nonPreRmk,
    '' as fblFltNo,
    '' as fblFltDate    
  FROM
   (select  flt_key,flt_date,awb_no,awb_date,sum(manf_pc) manf_pc,sum(manf_wt) manf_wt,sum(bup_pc) bup_pc ,sum(bup_wt) bup_wt,sum(bulk_pc) bulk_pc,sum(bulk_wt) bulk_wt,sum(ppk_pc) ppk_pc,sum(ppk_wt) ppk_wt
   FROM ( select flt_key flt_key,flt_date flt_date, awb_no awb_no,awb_date awb_date, sum(nvl(pman_pcs,0)) manf_pc, sum(nvl(pman_wt,0)) manf_wt, 
   sum(nvl(BULK_PCS,0)) bulk_pc,
   sum(nvl(BULK_WT,0)) bulk_wt,
   sum( nvl(PPK_PCS,0)+nvl(MIX_PCS,0)) ppk_pc,
   sum( nvl(PPK_WT,0)+nvl(MIX_WT,0)) ppk_wt,
   sum( nvl(PPK_PCS,0)+nvl(MIX_PCS,0)+nvl(ASSIGNED_BULK_PCS,0)) bup_pc,
   sum( nvl(PPK_WT,0)+nvl(MIX_WT,0)+nvl(ASSIGNED_BULK_WT,0) )bup_wt 
   from exp_pmanifest_awb GROUP BY flt_key, flt_date, awb_no, awb_date
   UNION 
   select flt_key flt_key, flt_date flt_date, awb_no awb_no,awb_date awb_date, sum(nvl(bulk_pcs,0)+nvl(ppk_pcs,0)) manf_pc, sum(nvl(bulk_wt,0)+nvl(ppk_wt,0)) manf_wt,
   sum(nvl(bulk_pcs,0)) bulk_pc,sum(nvl(bulk_wt,0)) bulk_wt,
   sum(nvl(ppk_pcs,0)) ppk_pc,sum(nvl(ppk_wt,0)) ppk_wt,
   sum(nvl(bulk_pcs,0)+nvl(ppk_pcs,0)) bup_pc,
   sum(nvl(bulk_wt,0)+nvl(ppk_wt,0)) bup_wt 
   from EXP_PMAN_TARMAC_AWB
   group by flt_key,awb_no,awb_date,flt_date) 
   group by flt_key,flt_date,awb_no,awb_date)EPA
  WHERE
   EPA.AWB_NO = #awbNo# AND 
   EPA.AWB_DATE = #awbDate#
      union
       select  
       (select carr_code from flt_opr where flt_key = fbl.flt_key and sch_date = fbl.flt_date and ROWNUM=1) ecarrcode,
       '',
       '',
       '',
       '',
       '' AS ata,
       '',
       '',   
       '',
       '',     
       '',
       '',
       (SELECT STRAGG(STRINGDELIM(A.TRF_TYPE , ',')) FROM
      (SELECT DS.AWB_NO,DS.AWB_DATE,DM.FLT_KEY,DM.FLT_DATE,TRF_TYPE
    FROM DDT_SHP_TRF_DTL DTL,      DDT_SHP DS,      DDT_MSG DM
    WHERE 
    DS.DOC_LINE_NO=DTL.DOC_LINE_NO
    AND DS.TR_NO      =DTL.TR_NO
    AND DM.TR_NO      = DTL.TR_NO
    AND DM.DDT_STATUS = 'P'
    GROUP BY TRF_TYPE,DS.AWB_NO,DS.AWB_DATE,DM.FLT_KEY,DM.FLT_DATE) A WHERE A.AWB_NO=#awbNo# AND A.AWB_DATE=#awbDate# AND A.FLT_KEY=FBL.flt_key AND A.FLT_DATE=FBL.FLT_DATE
    and exists(select null from flt_opr_events where flt_key=A.FLT_KEY and sch_date=A.FLT_DATE and flt_type='A' and ddt_finalise_date is not null)) AS subType,
       '',
       '',
       '',
       '',
       '',
       '',
       '',
       '' as efltCarr,
       '' AS efltNo,
       '' AS efltDate,
       'E' AS efltType,
       '' AS preManifestPcs,  
       '' AS preManifestWt,  
       '' AS buPcs,
       '' AS buWt, 
       '' AS emanifestPcs,
       '' AS emanifestWt,
       '' AS eblkPcs,
       '' AS eblkWt,
       '' AS tpkOrTnb,
       '' AS eppkPcs,
       '' AS eppkWt,
       '' AS etrNo,        
       '' AS efltNo1,
     (select DECODE(sum(pcs),NULL,'','0','',sum(pcs)) as fblPc 
        FROM edi_fbl_shp shp,edi_fbl fbl1
        WHERE shp.tr_no= fbl.tr_no 
        and shp.AWB_NO = #awbNo# 
        AND shp.AWB_DATE = #awbDate# 
        AND fbl1.FBL_STATUS = 'P'
        and fbl1.flt_key=fbl.flt_key
        and fbl1.flt_date=fbl.flt_date) as fblPc, 
     (select DECODE(sum(net_wt),NULL,'','0','',trim(TO_CHAR(NVL(sum(net_wt),0),'99999990.00')) ) as fblWt
        FROM edi_fbl_shp shp,edi_fbl fbl1
        WHERE shp.tr_no= fbl1.tr_no and 
        shp.AWB_NO = #awbNo# AND 
        shp.AWB_DATE = #awbDate# AND fbl.FBL_STATUS = 'P'
        and fbl1.flt_key=fbl.flt_key
        and fbl1.flt_date=fbl.flt_date) as fblWt,
     (select  decode(sum(offload_pcs),null,'','0','',sum(offload_pcs))||DECODE(sum(offload_pcs),NULL,'','0','','/')||decode(sum(offload_wt),null,'','0','',trim(TO_CHAR(NVL(sum(offload_wt),0),'99999990.00'))) from exp_offload_uld_awb uldAwb where uldAwb.awb_no=#awbNo#  and uldAwb.awb_date=#awbDate# and uldAwb.flt_key=fbl.flt_key and uldAwb.flt_date=fbl.flt_date AND CONFIRMED_YN='Y') as offPcWt,          
     '' as nonPreRmk,
    fbl.flt_key as fblFltNo,
     TO_CHAR ( fbl.flt_date, 'DDMONYY') as fblFltDate
     FROM edi_fbl_shp shp,edi_fbl fbl
  WHERE shp.tr_no= fbl.tr_no and 
      shp.AWB_NO = #awbNo# AND 
      shp.AWB_DATE = #awbDate# AND fbl.FBL_STATUS = 'P'
       AND  NOT EXISTS (select NULL from exp_pmanifest_awb where awb_no=#awbNo# and awb_date=#awbDate# AND FLT_KEY=fbl.flt_key AND FLT_DATE=fbl.flt_date)
       AND  NOT EXISTS (select NULL from EXP_PMAN_TARMAC_AWB where awb_no=#awbNo# and awb_date=#awbDate# AND FLT_KEY=fbl.flt_key AND FLT_DATE=fbl.flt_date)
       UNION
      SELECT 
      (select carr_code from flt_opr where flt_key = OFAWB.flt_key and sch_date = OFAWB.flt_date and ROWNUM=1) ecarrcode,
       '',
       '',
       '',
       '',
     '' AS ata,
       '',
       '',   
       '',
       '',     
       '',
       '',
       '' AS subType,
       '',
       '',
       '',
       '',
       '',
       '',
       '',
      '' as efltCarr,
     '' AS efltNo,
     '' AS efltDate,
      'E' AS efltType,
     '' AS preManifestPcs,  
     '' AS preManifestWt,  
     '' AS buPcs,
      '' AS buWt, 
      '' AS emanifestPcs,
     '' AS emanifestWt,
      '' AS eblkPcs,
     '' AS eblkWt,
     '' AS tpkOrTnb,
     '' AS eppkPcs,
     '' AS eppkWt,
     '' AS etrNo,        
     '' AS efltNo1,     
          (select decode(sum(PCS),null,'','0','',sum(PCS)) from edi_fbl_shp shp,edi_fbl fbl
           where shp.awb_no= OFAWB.AWB_NO
                 and shp.awb_date=OFAWB.AWB_DATE
                 and fbl.flt_key=OFAWB.flt_key
                 and fbl.flt_date=OFAWB.flt_date
                 AND shp.tr_no= fbl.tr_no AND fbl.FBL_STATUS = 'P') as fblPc,   
		     (select decode(sum(net_wt),null,'','0','',trim(TO_CHAR(NVL(sum(net_wt),0),'99999990.00'))) from edi_fbl_shp shp,edi_fbl fbl
          where shp.awb_no= OFAWB.AWB_NO
                and shp.awb_date=OFAWB.AWB_DATE
                and fbl.flt_key=OFAWB.flt_key
                and fbl.flt_date=OFAWB.flt_date
                AND shp.tr_no= fbl.tr_no AND fbl.FBL_STATUS = 'P') as fblWt,
          (select decode(sum(offload_pcs),null,'','0','',sum(offload_pcs))||DECODE(sum(offload_pcs),NULL,'','0','','/')||decode(sum(offload_wt),null,'','0','',trim(TO_CHAR(NVL(sum(offload_wt),0),'99999990.00'))) from exp_offload_uld_awb uldAwb where uldAwb.awb_no= OFAWB.AWB_NO  and uldAwb.awb_date=OFAWB.AWB_DATE and uldAwb.flt_key=OFAWB.flt_key and uldAwb.flt_date=OFAWB.flt_date AND CONFIRMED_YN='Y') as offPcWt,        
          '' as nonPreRmk,
          OFAWB.flt_key as fblFltNo,
          TO_CHAR ( OFAWB.flt_date, 'DDMONYY') as fblFltDate
     	FROM EXP_OFFLOAD_ULD_AWB OFAWB
  		WHERE 
      	OFAWB.AWB_NO = #awbNo# AND 
      	OFAWB.AWB_DATE = #awbDate#  
      	AND NOT EXISTS (select NULL from exp_pmanifest_awb where awb_no=#awbNo# and awb_date=#awbDate# AND FLT_KEY=OFAWB.flt_key AND FLT_DATE=OFAWB.flt_date) 
        AND  NOT EXISTS (select NULL from EXP_PMAN_TARMAC_AWB where awb_no=#awbNo# and awb_date=#awbDate# AND FLT_KEY=OFAWB.flt_key AND FLT_DATE=OFAWB.flt_date)
      	AND NOT EXISTS (select NULL from edi_fbl_shp shp,edi_fbl fbl
    		where shp.awb_no= #awbNo#
    		and shp.awb_date=#awbDate#
    		and fbl.flt_key=OFAWB.flt_key
    		and fbl.flt_date=OFAWB.flt_date
    		AND shp.tr_no= fbl.tr_no AND fbl.FBL_STATUS = 'P')
</select>
<!-- AWB Enquiry TRASHIPMENT END Here  -->
<!--To Fetch AWB Enquiry for Events-->
<select id="fetchAWBEnqEventDetails_580" parameterClass="cargo.cms.admin.report.bo.AWBEnquiry_102BO" resultClass="cargo.cms.admin.report.bo.AWBEnquiry_102BO">
	SELECT TO_CHAR( A.CR_DATE, 'DDMONYY HH24:MI:SS' ) AS crDate,
  A.CR_USER_ID                                    AS crUserId,
  ( SELECT des_tag FROM his_mst_itm WHERE cod_his_seq_num=b.cod_his_seq_num
  )                                               AS eventId,
  DECODE(B.cod_act,'A','ADD','U','UPD','D','DEL') AS event,
  B.DES_HIS_DTS                                   AS eventDesc
FROM HIS_AWB_EVNT A,
  HIS_AWB_EVNT_DTL B
WHERE B.awb_no        = A.awb_no
AND B.awb_date        = A.awb_date
AND A.COD_TRA_SEQ_NUM = B.COD_TRA_SEQ_NUM
AND A.AWB_NO          = #awbNo#
AND A.AWB_DATE        = TO_DATE(#awbDate#,'DDMONYY')
AND A.MODULE          = 'W'
AND A.COD_HIS_TYP     = 'E'
<isNotEmpty property="eventId">
AND B.COD_HIS_SEQ_NUM = NVL(#eventId#,B.COD_HIS_SEQ_NUM)
</isNotEmpty> 
GROUP BY a.awb_no,
  a.awb_date,
  A.CR_DATE,
  A.CR_USER_ID,
  A.COD_FUNC,
  B.cod_act,
  B.DES_HIS_DTS,
  b.cod_his_seq_num 
ORDER BY A.CR_DATE 
          
</select>

<select id="fetchAWBEnqForRmkLog_571" parameterClass="cargo.cms.admin.report.bo.ConsignmentRemarksLog_571BO" resultClass="cargo.cms.admin.report.bo.ConsignmentRemarksLog_571BO">
	SELECT			   
	  SUBSTR(A.ENTITY_KEY,1,11) AS awbNo,
      SUBSTR(A.ENTITY_KEY,1,3) AS awbNoPFX,
      SUBSTR(A.ENTITY_KEY,4,11) as awbNoSFX,
      A.LM_USER_ID AS rmkUserId,
      TO_CHAR(A.LM_DATE,'DDMONYY HH24:MI') AS crDate,
      A.TAG_NAME AS typeDesc,
      A.RMK AS remarks,
      DECODE(#awbType#,'I',SI.FLT_KEY,EA.FLT_KEY) AS fltKey,
      DECODE(#awbType#,'I',TO_CHAR(SI.FLT_DATE,'DDMONYY'),TO_CHAR(EA.FLT_DATE,'DDMONYY')) AS fltDate
      FROM
      RMK_HIST A
      LEFT JOIN EXP_PMANIFEST_AWB EA ON EA.AWB_NO = #awbNo# AND EA.AWB_DATE = #awbDate#
      LEFT JOIN IMP_CAR_SHP SI ON SI.AWB_NO = #awbNo# AND SI.AWB_DATE = #awbDate#
      WHERE
      <isNotEqual property="awbType" compareValue="E">
      A.ENTITY_KEY IN (DECODE(SI.AWB_NO,'','',SI.AWB_NO||SI.FLT_KEY)) OR A.ENTITY_KEY IN (DECODE(SI.AWB_NO,'','',SI.AWB_NO||TO_CHAR(SI.AWB_DATE,'DDMONYY')))
      <isNotEmpty property="type">
	  AND A.TAG_NAME = #type#
	  </isNotEmpty>		
      </isNotEqual>
      <isEqual property="awbType" compareValue="E">
      A.ENTITY_KEY IN (DECODE(EA.AWB_NO,'','',EA.AWB_NO||EA.FLT_KEY)) OR A.ENTITY_KEY IN (DECODE(EA.AWB_NO,'','',EA.AWB_NO||TO_CHAR(EA.AWB_DATE,'DDMONYY')))
      <isNotEmpty property="type">
	  AND A.TAG_NAME = #type#
	  </isNotEmpty>		
      </isEqual>	
		Order BY crDate
	</select>
<!-- REPT_105  -->
<select id="fetchAwbEnqByLocationAirline_rept_105"  parameterClass="cargo.cms.admin.report.bo.EnqAWBLocAirlineRept_105BO"  resultClass="cargo.cms.admin.report.bo.EnqAWBLocAirlineRept_105BO">
			SELECT A.AWB_NO AS awbNo,
 		      TO_CHAR(A.AWB_DATE, 'DDMONYY') AS awbDate,
                            LOC.WH_GROUP AS grpType,
 			 			    SUBSTR( A.AWB_NO,1,3 ) AS awbNoPFX,
						    SUBSTR( A.AWB_NO,4 ) as awbNoSFX, 
						    DECODE(CAR.CATALOG,'',ECAR.CATALOG,CAR.CATALOG) AS catalog,
						    A.CARR_CODE AS carrier, 
						    A.LOC_CODE AS location, 
						    A.LOCN_PCS AS pc, 
						    A.LOCN_WT AS wt,
						    DECODE(A.ULD_KEY,null,'',A.ULD_KEY||DECODE(C.CONTR_CODE,null,'','/')||C.CONTR_CODE) as uld,
                            DECODE(A.LSP_NO,null,'',A.LSP_NO||DECODE(C.CONTR_CODE,null,'','/')||C.CONTR_CODE) as lspNo,
                            A.FLT_TYPE AS fltType,
						    A.FLT_KEY AS fltNo, 
						    A.SEQ_NO AS seqNo, 
						    TO_CHAR( A.FLT_DATE, 'DDMONYY') AS fltDate, 
						    TO_CHAR( A.STRG_DATE, 'DDMONYY HH24:MI') AS strgDate,
						    LOC.CURR_LOCATION as curLocation,
                			B.DEST AS awbDest						  
		        FROM
                AWB_INVENTORY A
                LEFT JOIN AWB B ON B.AWB_NO = A.AWB_NO AND B.AWB_DATE = A.AWB_DATE
                LEFT JOIN ULD_INVENTORY C ON  NVL(A.ULD_KEY,'N') = NVL(C.ULD_KEY,'N') 
                LEFT JOIN EXP_CHKOUT_DTL D ON NVL(A.ULD_KEY,'N') = NVL(D.ULD_KEY,'N') 
			    LEFT JOIN MAST_WH_LOC LOC ON LOC.CODE = A.LOC_CODE
                LEFT JOIN MAST_WH_GROUP GRP ON GRP.WH_GROUP = LOC.WH_GROUP
                LEFT JOIN MAST_WH_AREA AR ON AR.WH_AREA = GRP.WH_AREA
                LEFT JOIN IMP_CAR_AWB CAR ON A.AWB_NO = CAR.AWB_NO AND A.AWB_DATE = CAR.AWB_DATE
                LEFT JOIN EXP_CAR ECAR ON  ECAR.AWB_NO = A.AWB_NO  AND ECAR.AWB_DATE = A.AWB_DATE 
           		<dynamic prepend="WHERE">
           		<isNotEmpty prepend="AND" property="scarrier">
						UPPER(A.CARR_CODE) = NVL(UPPER(#scarrier#),A.CARR_CODE)
				</isNotEmpty>	
				<isNotEmpty prepend="AND" property="slocation">
						UPPER(A.LOC_CODE) = NVL(UPPER(#slocation#),A.LOC_CODE)
				</isNotEmpty>	
				<isNotEmpty prepend="AND" property="scatalog">
						(UPPER(CAR.CATALOG) = NVL(UPPER(#scatalog#),CAR.CATALOG) or UPPER(ECAR.CATALOG) = NVL(UPPER(#scatalog#),ECAR.CATALOG))
				</isNotEmpty>	
				<isNotEmpty prepend="AND" property="sarea">
						UPPER(AR.WH_AREA) = NVL(UPPER(#sarea#),AR.WH_AREA)
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="sgroup">
						UPPER(GRP.WH_GROUP) = NVL(UPPER(#sgroup#),GRP.WH_GROUP)
				</isNotEmpty>
				</dynamic>
                <isEqual property="scurrId" compareValue="N">
                  AND LOC.WH_GROUP != 'MINISHP' 
                </isEqual>
                <isEqual property="scurrId" compareValue="Y">
                  AND LOC.WH_GROUP = 'MINISHP' 
                </isEqual>
                <isNotEmpty property="loginCarrier">
                    AND   (a.CARR_CODE = #loginCarrier# 
                    OR a.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP 
                    WHERE GRP_CARR_CODE     = #loginCarrier#))                                          
                </isNotEmpty>
                group by 
                (  			A.AWB_NO,
                			A.AWB_DATE,
                            LOC.WH_GROUP,
 			 			    CAR.CATALOG , 
 			 			    ECAR.CATALOG,
						    A.CARR_CODE , 
						    A.LOC_CODE , 
						    A.LOCN_PCS , 
						    A.LOCN_WT,
						    A.ULD_KEY,
						    C.CONTR_CODE,
                            A.LSP_NO,
                            A.SEQ_NO,
                            A.FLT_TYPE ,
						    A.FLT_KEY,  
						    A.FLT_DATE, 
						    A.STRG_DATE,
						    LOC.CURR_LOCATION,
                			B.DEST	
                )
           
		   	<dynamic prepend="ORDER BY ">
       			 <isNotEmpty property="sortOrder.sortField">
             		$sortOrder.sortField$
        		</isNotEmpty>
 			</dynamic>		
</select>	

   	<select id="adm_rept_024"  parameterClass="cargo.cms.admin.report.bo.CustomerProfileReptBO"  resultClass="cargo.cms.admin.report.bo.CustomerProfileReptBO">

		SELECT              	
			#scustomerName#   as scustomerName, #scustomerNo# as scustomerNo, 
			#scoIATACode# as scoIATACode, #scustomerType# as scustomerType,     
		
			CUST.CODE_DESC AS customerName,
			CUST.CO_SNAME AS customerSName,
			CUST.CODE AS customerNo,
			CUST.CO_IATA_CODE AS companyIataCode,
			CUST.ADD1 as add1,
			CUST.ADD2 as add2,
			CUST.ADD3 as add3,
			CUST.ADD4 as add4,
			CUST.ADD5 as add5,
			c.CODE_DESC as country,
			CUST.CITY as city,
			CUST.PIN_CODE as postalCode,
			CUST.ADMIN_CONTACT_NO as adminContactNo,
			Cust.Tel_Imp1||Decode(Cust.Tel_Imp2,'','',',')|| Cust.Tel_Imp2 As Imptel,
			Cust.Tel_Exp1||decode(CUST.TEL_EXP2,'','',',')||CUST.TEL_EXP2 As Exptel,
			Cust.TEL1 ||DECODE(CUST.TEL2,'','',',') ||CUST.TEL2 AS offTel,
			CUST.EMAIL1 as email,
			CUST.EMAIL2 as email2,
			CUST.EMAIL3 as email3,
			CUST.EMAIL4 as email4,
			CUST.EMAIL5 as email5,
			CUST.FAX1     AS fax1,
			CUST.FAX2     AS fax2,
			CUST.FAX3     AS fax3,
			CUST.TELEX as telex,
			CUST.SUFFIX AS suffix ,
			CUST.ADMIN_NAME AS adminName , 
			replace(
			substr(decode(CUST.airline_yn, 'Y', 'Airline')|| decode(CUST.agent_yn, 'Y', '/Cargo Agent') || decode(CUST.cons_yn, 'Y', '/Consignee')||decode(CUST.rho_yn, 'Y', '/RHO') ||decode(CUST.SHPR_YN, 'Y', '/Shipper')||decode(CUST.TRUCKER_YN, 'Y', '/Trucker')||decode(CUST.TCS_YN, 'Y', '/TCS User'), 1, 1), '/', '')||
		substr(decode(CUST.airline_yn, 'Y', 'Airline')|| decode(CUST.agent_yn, 'Y', '/Cargo Agent') || decode(CUST.cons_yn, 'Y', '/Consignee')||decode(CUST.rho_yn, 'Y', '/RHO')||decode(CUST.SHPR_YN, 'Y', '/Shipper')||decode(CUST.TRUCKER_YN, 'Y', '/Trucker')||decode(CUST.TCS_YN, 'Y', '/TCS User'), 2) AS  customerType
		FROM CUST_COMPANY CUST, CUST_REGISTRATION REG,mast_country c
		
		WHERE CUST.CTRY_CODE = c.CODE and REG.REG_PROC_ID = CUST.CODE 
		<dynamic>
			<isEqual prepend="AND" property="scustomerType" compareValue="Airline">
				CUST.AIRLINE_YN = 'Y' 
			</isEqual>
			<isEqual prepend="AND" property="scustomerType" compareValue="Cargo Agent">
				CUST.AGENT_YN = 'Y' 
			</isEqual>
			<isEqual prepend="AND" property="scustomerType" compareValue="Consignee">
				CUST.CONS_YN = 'Y' 
			</isEqual>		
			<isEqual prepend="AND" property="scustomerType" compareValue="Shipper">
				CUST.SHPR_YN =  'Y' 
			</isEqual>
			<isEqual prepend="AND" property="scustomerType" compareValue="RHO">
				CUST.RHO_YN =  'Y' 
			</isEqual>
			<isEqual prepend="AND" property="scustomerType" compareValue="Trucker">
				CUST.TRUCKER_YN =  'Y' 
			</isEqual>
			<isEqual prepend="AND" property="scustomerType" compareValue="SHA">
				CUST.SHA_YN =  'Y' 
			</isEqual>
			<isEqual prepend="AND" property="scustomerType" compareValue="TCS User">
				CUST.TCS_YN =  'Y' 
			</isEqual>
			<isNotEmpty prepend="AND" property="scustomerNo">
				CUST.CODE = #scustomerNo# 
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="scustomerName">
				CUST.CODE_DESC LIKE #scustomerName# 
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="scoIATACode">
				CUST.CO_IATA_CODE =  #scoIATACode# 
			</isNotEmpty>
		</dynamic>

   	</select>
   	<select id="adm_rept_056"  parameterClass="cargo.cms.admin.report.bo.CreditReptBO"  resultClass="cargo.cms.admin.report.bo.CreditReptBO">
<![CDATA[
 
	SELECT	
		#screditType# as screditType, 
		#scarrier# as scarrier,
		CAC.CR_TYPE as crdType,								
		CAC.CUST_NO AS customerNo, 
		CC.CO_IATA_CODE AS companyIataCode, 
		CC.CODE_DESC AS customerName, 
		CAC.CARR_CODE AS carrierCode, 
		TRIM(TO_CHAR(CAC.CR_AMT,'999999999999999990D99')) AS creditLimit ,
		TRIM(TO_CHAR(CAC.CR_BAL,'999999999999999990D99')) AS creditAvailability
	FROM	
		CUST_AGENT_AIRL_CREDIT CAC,
		CUST_COMPANY CC 
	WHERE
		UPPER(CAC.CR_TYPE)=UPPER(#screditType#) 
		AND CAC.CUST_NO=CC.CODE 
		AND instr( nvl(UPPER(CAC.CARR_CODE),'*'), nvl(UPPER(#scarrier#),'**') ) > 0 
		and nvl(upper(Status),'**') <> 'VOID'
		]]>
		<isNotEmpty prepend="AND" property="loginCarrier">
		<![CDATA[ 
        	 (CAC.CARR_CODE = #loginCarrier#
              OR CAC.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE= #loginCarrier#))
         ]]>
         </isNotEmpty>
		 <![CDATA[ 
		AND CR_EFF_DATE_FROM <= trunc(Sysdate)     
		AND CR_EFF_DATE_TO >= trunc(Sysdate)     
	order by CC.CODE_DESC
				
]]>
</select>

<select id="CE_FetchCurrencyExrateList_149" parameterClass="cargo.cms.admin.report.bo.CurrencyExRateReptBO" resultClass="cargo.cms.admin.report.bo.CurrencyExRateReptBO">
		SELECT
		E.TR_NO  AS trNo,      
        E.CURR_CODE AS currencyCode,  
        to_char(E.EFF_DATE,'DDMONYY HH24:MI') AS effectiveDate,  
        E.FORGN_UNIT AS  foreignUnit,
        E.EXCH_RATE AS exchangeRate,  
        E.CARR_CODE AS carrierCode,
		C.CODE_DESC AS codedescription
		FROM 
			MAST_CURR_EXRATE E ,MAST_CURRENCY C
		WHERE		
		C.CODE= E.CURR_CODE	
		<dynamic>
		<isNotEmpty property="effectiveDate">
			<![CDATA[	AND EFF_DATE >= (select max(i.EFF_DATE) from MAST_CURR_EXRATE i
										  where i.EFF_DATE < TO_DATE(#effectiveDate#, 'DDMONYY') + 1
										  and i.CURR_CODE	= E.CURR_CODE	
										  and NVL(i.CARR_CODE, '**') = NVL(E.CARR_CODE, '**'))
				AND EFF_DATE < TO_DATE(#effectiveDate#, 'DDMONYY') + 1  ]]>		 
		</isNotEmpty> 
		<isNotEmpty property="currencyCode">
		 AND  UPPER(CURR_CODE)=UPPER(#currencyCode#)
		</isNotEmpty>
		<isEmpty property="loginCarrier">			
			<isNotEmpty property="carrierCode">							
				AND (CARR_CODE = #carrierCode# OR CARR_CODE IS NULL) 			
			</isNotEmpty>
		</isEmpty>
		<isNotEmpty property="loginCarrier">
			<isNotEmpty property="carrierCode">		
				AND (CARR_CODE = #carrierCode#	OR CARR_CODE IS NULL)			
			</isNotEmpty>
			<isEmpty property="carrierCode">		
				AND (CARR_CODE = #loginCarrier#	OR CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE  = #loginCarrier#) OR CARR_CODE IS NULL)			
			</isEmpty>
		</isNotEmpty>
		</dynamic>
		ORDER BY E.CURR_CODE  ASC
	</select>
	
	<select id="sqlGetCargoInventoryList" parameterClass="java.util.HashMap" resultClass="cargo.cms.admin.report.bo.BacklogInventoryBO">
		SELECT 
    	awb_no awbNo, tag_no dnNo, awb_type shipmentType, orig origin, orig_region originRegion, dest destination, region region,
		pcs awbPieces, wt awbWeight, stgdate storageDate, ATA ata, imp_flt_key fltKey, imp_flt_date fltDate, locn "location",
		Locn_pcs locationPieces, Locn_wt locationWeight, dwell_time dwellTime, dwell_group dwellGroup, bkg_flt_key bookedFlight,
		bkg_flt_date flightDate, bkg_pcs bookedPieces, bkg_wt bookedWeight, ofld_cnt offloadTimes, shc
		FROM V_CARGO_INVENTORY WHERE awb_no is not null
	 <isNotEmpty property="grpCarrCode">
            AND   (CARR_CODE = #grpCarrCode# 
            OR CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP 
            WHERE GRP_CARR_CODE     = #grpCarrCode#))                                          
      </isNotEmpty>
      <isNotEmpty property="carrCode">
            AND   CARR_CODE = #carrCode# 
      </isNotEmpty>
      <isNotEmpty property="loginCarrier">
            AND (CARR_CODE = #loginCarrier#
            OR CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE= #loginCarrier#))
      </isNotEmpty>
	</select>
	
	<insert id="sqlInsertBacklogCargoInventoryList">
		Insert into gt_backlog_inventory (awb_no, awb_type, orig, orig_region, dest, region, pcs, wt, stgdate, ATA, locn, Locn_pcs, Locn_wt,
  		dwell_time, bkg_flt_key, bkg_flt_date, bkg_pcs, bkg_wt, ofld_cnt, shc) 
		select * from v_backlog_inventory
	</insert>
	
	<select id="sqlGetBacklogCargoInventoryList" resultClass="cargo.cms.admin.report.bo.BacklogInventoryBO">
	<![CDATA[
		select awb_no awbNo, awb_type shipmentType, orig origin, orig_region originRegion, dest destination, region region,
		pcs awbPieces, wt awbWeight, stgdate storageDate, ATA ata, locn "location",
		Locn_pcs locationPieces, Locn_wt locationWeight, dwell_time dwellTime, bkg_flt_key bookedFlight,
		bkg_flt_date flightDate, bkg_pcs bookedPieces, bkg_wt bookedWeight, ofld_cnt offloadTimes, shc
		from gt_backlog_inventory
	]]>
	</select>
	
	<select id="sqlGetBacklogCargoInventorySummary1" resultClass="cargo.cms.admin.report.bo.BacklogInventoryBO">
	<![CDATA[
		select sum(case when dwell_time <= 24 then round(locn_wt, 2) else 0 end) lessThan24,
		  sum(case when dwell_time > 24 and dwell_time <= 48 then round(locn_wt, 2) else 0 end) between24And48,
		  sum(case when dwell_time > 48 and dwell_time <= 72 then round(locn_wt, 2) else 0 end) between48And72,
		  sum(case when dwell_time > 72 then round(locn_wt, 2)  else 0 end) greaterThan72
		from gt_backlog_inventory
		where ofld_cnt > 0
	]]>
	</select>
	
	<select id="sqlGetBacklogCargoInventorySummary2" resultClass="cargo.cms.admin.report.bo.BacklogInventoryBO">
	<![CDATA[
		select dest destination, Region region, round(wt, 2) locationWeight
		from (select dest, Region, sum(locn_wt) wt
		  from gt_backlog_inventory
		  where ofld_cnt > 0
		  group by dest, Region
		  order by sum(locn_wt) desc)
		where rownum <= 5
	]]>
	</select>
	
	<select id="sqlGetTotalCargoInventorySummary1" resultClass="cargo.cms.admin.report.bo.BacklogInventoryBO">
	<![CDATA[
		select sum(case when dwell_time <= 24 then round(locn_wt, 2) else 0 end) lessThan24,
		  sum(case when dwell_time > 24 and dwell_time <= 48 then round(locn_wt, 2) else 0 end) between24And48,
		  sum(case when dwell_time > 48 and dwell_time <= 72 then round(locn_wt, 2) else 0 end) between48And72,
		  sum(case when dwell_time > 72 then round(locn_wt, 2)  else 0 end) greaterThan72
		from gt_backlog_inventory
		where ofld_cnt >= 0
	]]>
	</select>
	
	<select id="sqlGetTotalCargoInventorySummary2" resultClass="cargo.cms.admin.report.bo.BacklogInventoryBO">
	<![CDATA[
		select dest destination, Region region, round(wt, 2) locationWeight
		from (select dest, Region, sum(locn_wt) wt
		  from gt_backlog_inventory
		  where ofld_cnt >= 0
		  group by dest, Region
		  order by sum(locn_wt) desc)
		where rownum <= 5
	]]>
	</select>
	
	<insert id="sqlInsertBacklogTMInventoryList">
		Insert into gt_backlog_inventory_tm (awb_no, tag_no, orig, orig_region, dest, region, pcs, wt, stgdate, ATA, imp_flt_key, imp_flt_date, locn, 
		Locn_pcs, Locn_wt, dwell_time, bkg_flt_key, bkg_flt_date, bkg_pcs, bkg_wt, ofld_cnt, shc) 
		select * from v_backlog_inventory_tm
	</insert>
	
	<select id="sqlGetBacklogTMInventoryList" resultClass="cargo.cms.admin.report.bo.BacklogInventoryBO">
	<![CDATA[
		select awb_no awbNo, tag_no dnNo, orig origin, orig_region originRegion, dest destination, region region,
		pcs awbPieces, wt awbWeight, stgdate storageDate, ATA ata, imp_flt_key fltKey, imp_flt_date fltDate, locn "location",
		Locn_pcs locationPieces, Locn_wt locationWeight, dwell_time dwellTime, bkg_flt_key bookedFlight,
		bkg_flt_date flightDate, bkg_pcs bookedPieces, bkg_wt bookedWeight, ofld_cnt offloadTimes, shc
		from gt_backlog_inventory_tm
	]]>
	</select>
	
	<select id="sqlGetBacklogTMInventorySummary1" resultClass="cargo.cms.admin.report.bo.BacklogInventoryBO">
	<![CDATA[
		select sum(case when dwell_time <= 24 then round(locn_wt, 2) else 0 end) lessThan24,
		  sum(case when dwell_time > 24 and dwell_time <= 48 then round(locn_wt, 2) else 0 end) between24And48,
		  sum(case when dwell_time > 48 and dwell_time <= 72 then round(locn_wt, 2) else 0 end) between48And72,
		  sum(case when dwell_time > 72 then round(locn_wt, 2)  else 0 end) greaterThan72
		from gt_backlog_inventory_tm
		where ofld_cnt > 0
	]]>
	</select>
	
	<select id="sqlGetBacklogTMInventorySummary2" resultClass="cargo.cms.admin.report.bo.BacklogInventoryBO">
	<![CDATA[
		select dest destination, Region region, round(wt, 2) locationWeight
		from (select dest, Region, sum(locn_wt) wt
		  from gt_backlog_inventory_tm
		  where ofld_cnt > 0
		  group by dest, Region
		  order by sum(locn_wt) desc)
		where rownum <= 5
	]]>
	</select>
	
	<select id="sqlGetTotalTMInventorySummary1" resultClass="cargo.cms.admin.report.bo.BacklogInventoryBO">
	<![CDATA[
		select sum(case when dwell_time <= 24 then round(locn_wt, 2) else 0 end) lessThan24,
		  sum(case when dwell_time > 24 and dwell_time <= 48 then round(locn_wt, 2) else 0 end) between24And48,
		  sum(case when dwell_time > 48 and dwell_time <= 72 then round(locn_wt, 2) else 0 end) between48And72,
		  sum(case when dwell_time > 72 then round(locn_wt, 2)  else 0 end) greaterThan72
		from gt_backlog_inventory_tm
		where ofld_cnt >= 0
	]]>
	</select>
	
	<select id="sqlGetTotalTMInventorySummary2" resultClass="cargo.cms.admin.report.bo.BacklogInventoryBO">
	<![CDATA[
		select dest destination, Region region, round(wt, 2) locationWeight
		from (select dest, Region, sum(locn_wt) wt
		  from gt_backlog_inventory_tm
		  where ofld_cnt >= 0
		  group by dest, Region
		  order by sum(locn_wt) desc)
		where rownum <= 5
	]]>
	</select>
	
	<select id="sqlGetExpPaymentCollDtls" parameterClass="cargo.cms.admin.report.bo.ExportPaymentCollectionBO" resultClass="cargo.cms.admin.report.bo.ExportPaymentCollectionBO">
		select flt_key fltKey, to_char(flt_date,'DD-Mon-YY') fltDate, act_time fltAta, awb_no awbNo, inv_no invoiceNo,
		agent_code agentCode, fin_code finCode, agent_name agentName, chrg_amt amountCharged, 
		amt_pay_crd paidByCredit, amt_pay_cash paidByCash, os_payment outstandingPayment,
		ITM_CODE itemCode, ITM_DESC itemDesc, REV_IND revInd, QTY chargeQuantity
		from v_exp_payment where flt_date between #fromDate# and #toDate#
		<isNotEmpty property="carr">
			AND CARR_CODE = #carr#
		</isNotEmpty>
		<isNotEmpty property="carrGroup">
			AND (CARR_CODE = #carrGroup# or CARR_CODE in (SELECT CARR_CODE FROM MAST_CARR_GRP 
                        WHERE GRP_CARR_CODE  = #carrGroup#))
		</isNotEmpty>
		<isEmpty property="carr">
		<isEmpty property="carrGroup">
				<isNotEmpty property="loginCarrier">
				   AND ( CARR_CODE = #loginCarrier#
                        OR  CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP 
                        WHERE GRP_CARR_CODE  = #loginCarrier#))             
            	</isNotEmpty>
        </isEmpty>
        </isEmpty>
		
	</select>
	
	<select id="sqlGetImpExpDataExpFlt" parameterClass="java.util.HashMap" resultClass="cargo.cms.admin.report.bo.ImportExportDataBO">
		SELECT 
		FLIGHTKEY flightKey,
		TO_CHAR(FLIGHTDATE,'DDMONYY') flightDate,
		FLIGHTTYPE flightType,
		NILFLIGHT nilFltInd,
		ORIGIN origin,
		DEST dest,
		STA staStd,
		ETA ataAtd,
		ATA etaEtd,
		PRIMARYAREA primaryArea,
		SECONDARYAREA secondaryArea,
		CONTAINERCOUNT containerCount,
		PALLETCOUNT palletCount,
		HOUSECONTAINER houseContainer,
		PPKTONNAGE ppkTonnage, 
		BLKTONNAGE blkTonnage,
		TMTONNAGE tmTonnage,
		IFBULK ifBulk,
		TPKTONNAGE tpkTonnage,
		IFPPKTONNAGE ifPpkTonnage,
		TTTONNAGE ttTonnage,
		NON_IFTM_TONNAGE nonIfTmTonnage,
		FLTTONNAGE fltTonnage,
		SHIPCOUNT shipCount,
		ISTPREMANIFESTTIME istPManTime,
		LASTPREMANIFESTTIME lstPManTime,
		ISTJOBORDER istJO,
		LASTJOBORDER lstJO,
		ISTULDBUILDUPSTARTTIME istULDBDBUStartTime,
		LASTULDBUILDUPSTARTTIME lstULDBDBUStartTime,
		ISTULDBUILDUPCOMPTIME istULDBDBUCompleteTime,
		LASTULDBUILDUPCOMPTIME lstULDBDBUCompleteTime,
		ISTREADYFORDISPATCH istReadyForDispatch,
		LASTREADYFORDISPATCH lstReadyForDispatch
		FROM V_RAW_DATA_EXP_FLT
		WHERE FLIGHTDATE BETWEEN #FROM_DATE# AND #TO_DATE#
		<isNotEmpty property="CARR_CODE">
			AND CARRCODE = #CARR_CODE#
		</isNotEmpty>
		<isEmpty property="CARR_CODE">
				<isNotEmpty property="LOGIN_CARRIER">
				   AND ( CARRCODE = #LOGIN_CARRIER#
                        OR  CARRCODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP 
                        WHERE GRP_CARR_CODE  = #LOGIN_CARRIER#))             
            	</isNotEmpty>
        </isEmpty>
	</select>
	
	<select id="sqlGetImpExpDataImpFlt" parameterClass="java.util.HashMap" resultClass="cargo.cms.admin.report.bo.ImportExportDataBO">
		SELECT 
		FLIGHTKEY flightKey,
		TO_CHAR(FLIGHTDATE,'DDMONYY') flightDate,
		FLIGHTTYPE flightType,
		NILFLIGHT nilFltInd,
		ORIGIN origin,
		DEST dest,
		STA staStd,
		ETA ataAtd,
		ATA etaEtd,
		PRIMARYAREA primaryArea,
		SECONDARYAREA secondaryArea,
		CONTAINERCOUNT containerCount,
		PALLETCOUNT palletCount,
		HOUSECONTAINER houseContainer,
		PPKTONNAGE ppkTonnage, 
		BLKTONNAGE blkTonnage,
		TMTONNAGE tmTonnage,
		IFBULK ifBulk,
		IFPPKTONNAGE ifPpkTonnage,
		TTTONNAGE ttTonnage,
		NON_IFTM_TONNAGE nonIfTmTonnage,
		FLTTONNAGE fltTonnage,
		SHIPCOUNT shipCount,
		CONSTRAINT constraint,
		ISTULDBREAKDOWNSTARTTIME istULDBDBUStartTime,
		LASTULDBREAKDOWNSTARTTIME lstULDBDBUStartTime,
		ISTULDBREAKDOWNCOMPLETETIME istULDBDBUCompleteTime,
		LASTULDBREAKDOWNCOMPLETETIME lstULDBDBUCompleteTime
		FROM V_RAW_DATA_IMP_FLT
		WHERE FLIGHTDATE BETWEEN #FROM_DATE# AND #TO_DATE#
		<isNotEmpty property="CARR_CODE">
			AND CARRCODE = #CARR_CODE#
		</isNotEmpty>
		<isEmpty property="CARR_CODE">
				<isNotEmpty property="LOGIN_CARRIER">
				   AND ( CARRCODE = #LOGIN_CARRIER#
                        OR  CARRCODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP 
                        WHERE GRP_CARR_CODE  = #LOGIN_CARRIER#))             
            	</isNotEmpty>
            </isEmpty>
	</select>
	
	<select id="sqlGetImpExpDataExpUld" parameterClass="java.util.HashMap" resultClass="cargo.cms.admin.report.bo.ImportExportDataBO">
		SELECT
		EXPORT importExport,
		ULDKEY uldKey,
		CARGOTYPE cargoType,
		PPKIND ppkInd,
		CONTOURCODE contourCode,
		TNASFERZONE transferZone,
		HANDOVERTIME transferZone,
		AIRSIDECHKOUT airsideCheckInOut,
		BUILDUPSTART bdbuStart,
		BUILDUPCOMPL bdbuComplete,
		WORKSTATION workstation,
		FLTKEY flightKey,
		TO_CHAR(FLTDATE,'DDMONYY') flightDate,
		ORIGIN origin,
		DESTINATION dest,
		FLTTYPE flightType,
		STA staStd,
		ATA ataAtd,
		NOOFCONGINMENT noOfConsignment,
		PIECES pcs,
		WEIGHT wt,
		SHC shc
		FROM V_RAW_DATA_EXP_ULD
		WHERE FLTDATE BETWEEN #FROM_DATE# AND #TO_DATE#
		<isNotEmpty property="CARR_CODE">
			AND CARRCODE = #CARR_CODE#
		</isNotEmpty>
		<isEmpty property="CARR_CODE">
				<isNotEmpty property="LOGIN_CARRIER">
				   AND ( CARRCODE = #LOGIN_CARRIER#
                        OR  CARRCODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP 
                        WHERE GRP_CARR_CODE  = #LOGIN_CARRIER#))             
            	</isNotEmpty>
            </isEmpty>
	</select>
	
	<select id="sqlGetImpExpDataImpUld" parameterClass="java.util.HashMap" resultClass="cargo.cms.admin.report.bo.ImportExportDataBO">
		SELECT
		IMPORT importExport,
		ULDKEY uldKey,
		CARGOTYPE cargoType,
		BUPCODE cargoType,
		CONTOURCODE contourCode,
		TNASFERZONE transferZone,
		HANDOVERTIME handOverTime,
		AIRSIDECHKIN airsideCheckInOut,
		BRKDWNUPSTART bdbuStart,
		BRKDWNCOMPL bdbuStart,
		WORKSTATION workstation,
		FLTKEY flightKey,
		TO_CHAR(FLTDATE,'DDMONYY') flightDate,
		ORIGIN origin,
		DESTINATION dest,
		FLTTYPE flightType,
		STA staStd,
		ATA ataAtd,
		IMX imx,
		SLQIND slqInd,
		PPKIND ppkInd,
		EXPIND expInd,
		NBKIND nbkInd, 
		NOOFCONGINMENT noOfConsignment,
		PIECES pcs,
		WEIGHT wt,
		SHC shc
		FROM V_RAW_DATA_IMP_ULD
		WHERE FLTDATE BETWEEN #FROM_DATE# AND #TO_DATE#
		<isNotEmpty property="CARR_CODE">
			AND CARRCODE = #CARR_CODE#
		</isNotEmpty>
		<isEmpty property="CARR_CODE">
				<isNotEmpty property="LOGIN_CARRIER">
				   AND ( CARRCODE = #LOGIN_CARRIER#
                        OR  CARRCODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP 
                        WHERE GRP_CARR_CODE  = #LOGIN_CARRIER#))             
            	</isNotEmpty>
            </isEmpty>
	</select>
	
	
	<select id="sqlGetTransitPPKData" parameterClass="java.util.HashMap" resultClass="cargo.cms.admin.report.bo.TransitLocalPPKBO">
		select u.flt_key fltKey, to_char(u.flt_date,'DDMONYY') fltDate, u.uld_key uldKey, u.net_wt wt, u.handling_mode "mode", u.man_wt buWt
		from exp_flt_uld u
		<isNotEmpty property="LOGIN_CARRIER">
		join flt_opr opr on u.flt_key = opr.flt_key and u.flt_date = opr.sch_date and opr.flt_type = 'D'
		</isNotEmpty>
		left join (select cntg_flt_key, cntg_flt_date, uld_key, count(1) cnt
		  from v_ddt_dtl where trf_type = 'TT' group by cntg_flt_key, cntg_flt_date, uld_key) d on u.flt_key = d.cntg_flt_key and u.flt_date = d.cntg_flt_date and u.uld_key = d.uld_key 
		where handling_mode in ('PPK', 'NBK') and nvl(d.cnt, 0) = 0
		and u.flt_date between #FROM_DATE# and #TO_DATE#
		<isNotEmpty property="LOGIN_CARRIER">
				   AND ( opr.carr_code = #LOGIN_CARRIER#
                        OR  opr.carr_code IN (SELECT CARR_CODE FROM MAST_CARR_GRP 
                        WHERE GRP_CARR_CODE  = #LOGIN_CARRIER#))             
            	</isNotEmpty>
		ORDER BY u.flt_date, u.flt_key, u.uld_key
	</select>
	
	<select id="sqlGetLocalPPKData" parameterClass="java.util.HashMap" resultClass="cargo.cms.admin.report.bo.TransitLocalPPKBO">
		select  u.ppk_type "mode", u.flt_key fltKey, to_char(u.flt_date,'DDMONYY') fltDate, u.uld_bt_no uldKey, u.gross_wt - nvl(u.tare_wt,0) wt, f.man_wt buWt
		from exp_pmanifest_uld u
    	join exp_flt_uld f on f.flt_key = u.flt_key and f.flt_date = u.flt_date and f.uld_key = u.uld_bt_no
    	<isNotEmpty property="LOGIN_CARRIER">
		join flt_opr opr on u.flt_key = opr.flt_key and u.flt_date = opr.sch_date and opr.flt_type = 'D'
		</isNotEmpty>
		where u.ppk_type in ('P', 'M')
		and exists (select null from exp_uld_awb e
		  join exp_pmanifest_uld_awb ua on ua.uld_bt_no = e.uld_key and ua.awb_no = e.awb_no 
		  where flt_key = u.flt_key and flt_date = u.flt_date and ua.uld_bt_no = u.uld_bt_no)
		and u.flt_date between #FROM_DATE# and #TO_DATE#
		<isNotEmpty property="LOGIN_CARRIER">
				   AND ( opr.carr_code = #LOGIN_CARRIER#
                        OR  opr.carr_code IN (SELECT CARR_CODE FROM MAST_CARR_GRP 
                        WHERE GRP_CARR_CODE  = #LOGIN_CARRIER#))             
            	</isNotEmpty>
		ORDER BY u.flt_date, u.flt_key, u.uld_bt_no
	</select>
	
	<select id="sqlGetTSAXRayDetails" parameterClass="java.util.HashMap" resultClass="cargo.cms.admin.report.bo.TSAXRayTonnageBO">
		SELECT #MONTH_YEAR# || ' - ' || TO_CHAR(LAST_DAY(TO_DATE(#MONTH_YEAR#,'DDMONYY')),'DDMONYY') sourceDate,
		(SELECT CODE FROM MAST_CARRIER WHERE CODE = NVL(#CARR_CODE#,#LOGIN_CARRIER#)) airlineCode,
		(SELECT CODE_DESC FROM MAST_CARRIER WHERE CODE = #CARR_CODE#) airlineName,
		TO_CHAR(SYSDATE,'DD/MM/YY HH24:MI') reportTime
		FROM DUAL
	</select>

	<!-- Added for CR: Generate ACCS Data Start. Sanket 19SEP14 -->
	
	<parameterMap id="hMapParam" class="map">
		<parameter property="MSG_TYPE" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" />
		<parameter property="FLT_KEY" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" />
		<parameter property="FLT_DATE" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" />
		<parameter property="FLT_TYPE" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" />
		<parameter property="ITT_REQ_NO" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" />
		<parameter property="ITT_REQ_DATE" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" />
		<parameter property="ITT_REQ_CODE" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" />
	</parameterMap>
	
        <procedure id="updateACCSData" parameterMap="hMapParam">
		{ call PRO_AUTO_GENERATE_ACCS_DATA(?,?,?,?,?,?,?) }
	</procedure>

<select id="getACCS_ITT_AND_ITC_List" parameterClass="java.util.HashMap" resultClass="cargo.cms.admin.report.bo.GenerateACCSDataFlightBO">
select msg_type as msgType, 
ITT_REQ_NO as fltkey, 
TO_CHAR(ITT_REQ_DATE,'DDMONYY') as schDate
from gt_accs_data 
group by msg_type, ITT_REQ_NO, ITT_REQ_DATE
</select>

<select id="getACCS_ITF_List" parameterClass="java.util.HashMap" resultClass="cargo.cms.admin.report.bo.GenerateACCSDataFlightBO">
select msg_type as msgType, 
ITT_REQ_CODE as fltkey
from gt_accs_data 
group by msg_type, ITT_REQ_CODE
</select>


<select id="getACCSFlightList" parameterClass="java.util.HashMap" resultClass="cargo.cms.admin.report.bo.GenerateACCSDataFlightBO">
select msg_type as msgType, 
flt_key as fltkey, 
TO_CHAR(flt_date,'DDMONYY') as schDate, 
flt_type as fltType, 
ver_no as verNo
from gt_accs_data 
group by msg_type, flt_key, flt_date, flt_type, ver_no
</select>
	
<select id="getACCSDataList" parameterClass="java.util.HashMap" resultClass="cargo.cms.admin.report.bo.GenerateACCSDataReptListBO">	
select
FLT_KEY as fltKey,         
FLT_DATE as fltDate,
FLT_TYPE as fltType,
ITT_REQ_NO as ittReqNo,
ITT_REQ_DATE as ittReqDate,       
ITT_REQ_CODE as ittReqCode,  
VER_NO as verNo,
MSG_TYPE as msgType,       
MSG_COL_TYPE as msgColType,   
COL_TYPE as colType,       
DISPLAY_ORD as displayOrd,  
COLUMN_1 as column1,        
COLUMN_2 as column2,        
COLUMN_3 as column3,       
COLUMN_4 as column4,       
COLUMN_5 as column5,       
COLUMN_6 as column6,       
COLUMN_7 as column7,       
COLUMN_8 as column8,       
COLUMN_9 as column9,       
COLUMN_10 as column10,       
COLUMN_11 as column11, 
COLUMN_12 as column12,        
COLUMN_13 as column13,        
COLUMN_14 as column14,        
COLUMN_15 as column15,        
COLUMN_16 as column16,        
COLUMN_17 as column17,        
COLUMN_18 as column18,        
COLUMN_19 as column19,        
COLUMN_20 as column20,        
COLUMN_21 as column21,        
COLUMN_22 as column22,        
COLUMN_23 as column23,        
COLUMN_24 as column24,        
COLUMN_25 as column25,        
COLUMN_26 as column26,        
COLUMN_27 as column27,        
COLUMN_28 as column28,        
COLUMN_29 as column29,        
COLUMN_30 as column30,        
COLUMN_31 as column31,        
COLUMN_32 as column32,        
COLUMN_33 as column33,        
COLUMN_34 as column34,        
COLUMN_35 as column35,        
COLUMN_36 as column36,        
COLUMN_37 as column37,        
COLUMN_38 as column38,        
COLUMN_39 as column39,        
COLUMN_40 as column40,        
COLUMN_41 as column41,        
COLUMN_42 as column42,        
COLUMN_43 as column43,        
COLUMN_44 as column44,        
COLUMN_45 as column45,        
COLUMN_46 as column46,        
COLUMN_47 as column47,        
COLUMN_48 as column48,        
COLUMN_49 as column49,        
COLUMN_50 as column50,        
COLUMN_51 as column51,        
COLUMN_52 as column52,        
COLUMN_53 as column53,        
COLUMN_54 as column54,        
COLUMN_55 as column55,        
COLUMN_56 as column56 
from (select 
case        when msg_col_type = 'H' then 1
            when msg_col_type = 'T' then 2
            when msg_col_type = 'D' then 3 end  orderone,      
case when col_type = 'LABEL' then 1
             when col_type = 'DATA' then 2 end  orderTwo,
      a.*
from gt_accs_data a
where 
msg_type =#MSG_TYPE# and 
flt_key=#FLT_KEY# and 
flt_date = #FLT_DATE# and 
flt_type= #FLT_TYPE# and 
ver_no = #VER_NO#) a
order by display_ord,orderOne,orderTwo
</select>

<select id="getACCS_ITT_AND_ITC_DataList" parameterClass="java.util.HashMap" resultClass="cargo.cms.admin.report.bo.GenerateACCSDataReptListBO">	
select
FLT_KEY as fltKey,         
FLT_DATE as fltDate,
FLT_TYPE as fltType,
ITT_REQ_NO as ittReqNo,
ITT_REQ_DATE as ittReqDate,       
ITT_REQ_CODE as ittReqCode,  
VER_NO as verNo,
MSG_TYPE as msgType,       
MSG_COL_TYPE as msgColType,   
COL_TYPE as colType,       
DISPLAY_ORD as displayOrd,  
COLUMN_1 as column1,        
COLUMN_2 as column2,        
COLUMN_3 as column3,       
COLUMN_4 as column4,       
COLUMN_5 as column5,       
COLUMN_6 as column6,       
COLUMN_7 as column7,       
COLUMN_8 as column8,       
COLUMN_9 as column9,       
COLUMN_10 as column10,       
COLUMN_11 as column11, 
COLUMN_12 as column12,        
COLUMN_13 as column13,        
COLUMN_14 as column14,        
COLUMN_15 as column15,        
COLUMN_16 as column16,        
COLUMN_17 as column17,        
COLUMN_18 as column18,        
COLUMN_19 as column19,        
COLUMN_20 as column20,        
COLUMN_21 as column21,        
COLUMN_22 as column22,        
COLUMN_23 as column23,        
COLUMN_24 as column24,        
COLUMN_25 as column25,        
COLUMN_26 as column26,        
COLUMN_27 as column27,        
COLUMN_28 as column28,        
COLUMN_29 as column29,        
COLUMN_30 as column30,        
COLUMN_31 as column31,        
COLUMN_32 as column32,        
COLUMN_33 as column33,        
COLUMN_34 as column34,        
COLUMN_35 as column35,        
COLUMN_36 as column36,        
COLUMN_37 as column37,        
COLUMN_38 as column38,        
COLUMN_39 as column39,        
COLUMN_40 as column40,        
COLUMN_41 as column41,        
COLUMN_42 as column42,        
COLUMN_43 as column43,        
COLUMN_44 as column44,        
COLUMN_45 as column45,        
COLUMN_46 as column46,        
COLUMN_47 as column47,        
COLUMN_48 as column48,        
COLUMN_49 as column49,        
COLUMN_50 as column50,        
COLUMN_51 as column51,        
COLUMN_52 as column52,        
COLUMN_53 as column53,        
COLUMN_54 as column54,        
COLUMN_55 as column55,        
COLUMN_56 as column56 
from (select 
case        when msg_col_type = 'H' then 1
            when msg_col_type = 'T' then 2
            when msg_col_type = 'D' then 3 end  orderone,      
case when col_type = 'LABEL' then 1
             when col_type = 'DATA' then 2 end  orderTwo,
      a.*
from gt_accs_data a
where 
msg_type =#MSG_TYPE# and 
ITT_REQ_NO=#ITT_REQ_NO# and 
ITT_REQ_DATE = #ITT_REQ_DATE# ) a
order by display_ord,orderOne,orderTwo
</select>

<select id="getACCS_ITF_DataList" parameterClass="java.util.HashMap" resultClass="cargo.cms.admin.report.bo.GenerateACCSDataReptListBO">	
select
FLT_KEY as fltKey,         
FLT_DATE as fltDate,
FLT_TYPE as fltType,
ITT_REQ_NO as ittReqNo,
ITT_REQ_DATE as ittReqDate,       
ITT_REQ_CODE as ittReqCode,  
VER_NO as verNo,
MSG_TYPE as msgType,       
MSG_COL_TYPE as msgColType,   
COL_TYPE as colType,       
DISPLAY_ORD as displayOrd,  
COLUMN_1 as column1,        
COLUMN_2 as column2,        
COLUMN_3 as column3,       
COLUMN_4 as column4,       
COLUMN_5 as column5,       
COLUMN_6 as column6,       
COLUMN_7 as column7,       
COLUMN_8 as column8,       
COLUMN_9 as column9,       
COLUMN_10 as column10,       
COLUMN_11 as column11, 
COLUMN_12 as column12,        
COLUMN_13 as column13,        
COLUMN_14 as column14,        
COLUMN_15 as column15,        
COLUMN_16 as column16,        
COLUMN_17 as column17,        
COLUMN_18 as column18,        
COLUMN_19 as column19,        
COLUMN_20 as column20,        
COLUMN_21 as column21,        
COLUMN_22 as column22,        
COLUMN_23 as column23,        
COLUMN_24 as column24,        
COLUMN_25 as column25,        
COLUMN_26 as column26,        
COLUMN_27 as column27,        
COLUMN_28 as column28,        
COLUMN_29 as column29,        
COLUMN_30 as column30,        
COLUMN_31 as column31,        
COLUMN_32 as column32,        
COLUMN_33 as column33,        
COLUMN_34 as column34,        
COLUMN_35 as column35,        
COLUMN_36 as column36,        
COLUMN_37 as column37,        
COLUMN_38 as column38,        
COLUMN_39 as column39,        
COLUMN_40 as column40,        
COLUMN_41 as column41,        
COLUMN_42 as column42,        
COLUMN_43 as column43,        
COLUMN_44 as column44,        
COLUMN_45 as column45,        
COLUMN_46 as column46,        
COLUMN_47 as column47,        
COLUMN_48 as column48,        
COLUMN_49 as column49,        
COLUMN_50 as column50,        
COLUMN_51 as column51,        
COLUMN_52 as column52,        
COLUMN_53 as column53,        
COLUMN_54 as column54,        
COLUMN_55 as column55,        
COLUMN_56 as column56 
from (select 
case        when msg_col_type = 'H' then 1
            when msg_col_type = 'T' then 2
            when msg_col_type = 'D' then 3 end  orderone,      
case when col_type = 'LABEL' then 1
             when col_type = 'DATA' then 2 end  orderTwo,
      a.*
from gt_accs_data a
where 
msg_type =#MSG_TYPE# and 
ITT_REQ_CODE=#ITT_REQ_CODE# ) a
order by display_ord,orderOne,orderTwo
</select>

	<!-- Added for CR: Generate ACCS Data End. Sanket 19SEP14 -->
	
	<select id="sqlGetTSAXRayAWBList" parameterClass="java.util.HashMap" resultClass="cargo.cms.admin.report.bo.TSAXRayTonnageBO">
		SELECT pman.AWB_NO awbNo, to_char(pman.AWB_DATE,'DDMONYY') awbDate, pman.FLT_KEY outboundFlightNo, to_char(pman.FLT_DATE,'DDMONYY') outboundFlightDate, 
		pman.PMAN_PCS piece, pman.PMAN_WT weight, awb.CONTENT description, 
		to_char(DECODE(flt.ACT_DATE,NULL,DECODE(flt.EST_DATE,NULL,flt.SCH_DATE,flt.EST_DATE),flt.ACT_DATE),'DDMONYY') atd,
		awb.DEST destination, 
		DECODE((SELECT COUNT(1) FROM EXP_SEC_CHK_JO sec WHERE sec.AWB_NO = awb.AWB_NO AND sec.AWB_DATE = awb.AWB_DATE),0,
    	DECODE((SELECT COUNT(1) FROM EXP_RCL_SEC_CHK_DTL sec WHERE sec.AWB_NO = awb.AWB_NO AND sec.AWB_DATE = awb.AWB_DATE),0,NULL,'Y'),'Y') xRayed
		FROM EXP_PMANIFEST_AWB pman
		JOIN AWB awb ON pman.AWB_NO = awb.AWB_NO AND pman.AWB_DATE = awb.AWB_DATE
		JOIN MAST_CITY city ON awb.DEST = city.CODE
		JOIN FLT_OPR flt ON flt.FLT_KEY = pman.FLT_KEY AND flt.SCH_DATE = pman.FLT_DATE
		WHERE 
		awb.AWB_TYPE = 'E' AND
		flt.FLT_TYPE = 'D' AND
		flt.CGO_ACFT_TYPE = 'PSR' AND
		city.CTRY_CODE = 'US'
		<isNotEmpty property="CARR_CODE">
		AND flt.CARR_CODE = #CARR_CODE#
		</isNotEmpty>
		<isEmpty property="CARR_CODE">
			<isNotEmpty property="LOGIN_CARRIER">
			AND ( flt.CARR_CODE = #LOGIN_CARRIER#
                        OR  flt.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP 
                        WHERE GRP_CARR_CODE  = #LOGIN_CARRIER#))     
			</isNotEmpty>
		</isEmpty>
		<isNotEmpty property="MONTH_YEAR">
		AND pman.FLT_DATE BETWEEN TO_DATE(#MONTH_YEAR#,'DDMONYY') AND LAST_DAY(TO_DATE(#MONTH_YEAR#,'DDMONYY'))
		</isNotEmpty>
		ORDER BY pman.FLT_DATE, pman.FLT_KEY, awb.AWB_NO, awb.DEST, pman.PMAN_PCS, pman.PMAN_WT
	</select>
	<select id="sqlGetOutgoingSecCheckAWBList" parameterClass="cargo.cms.admin.report.bo.OutgoingSecCheckBO" resultClass="cargo.cms.admin.report.bo.OutgoingSecCheckBO">
		SELECT 
		TO_CHAR(SEC.LM_DATE,'DD/MM (Dy)') weekDay,
		TO_CHAR(SEC.LM_DATE,'DDMONYY HH24:MI') trDateTime, SUBSTR(SEC.AWB_NO,1,3) awbPrefix, SUBSTR(SEC.AWB_NO,4) awbNo, AWB.ORIG origin, AWB.DEST dest,  
		AWB.CARR_CODE carrier, AWB.CATALOG catalogue, AWB.WT awbWt,
		DECODE(AWB.AWB_TYPE,'E','Originating',DECODE(AWB.CATALOG,'TM','Transit Mail','Transit')) type, 
		INIT.CARR_CODE fltPrefix, INIT.FLT_NO fltNo, TO_CHAR(INIT.SCH_DATE,'DDMONYY') fltDate,
   		SEC.WT secCheckWt, SDTL.SEC_CHK secCheckItem
		FROM EXP_SEC_CHK_JO SEC
		JOIN EXP_SEC_CHK_JO_DTL SDTL ON SEC.JO_NO = SDTL.JO_NO
		JOIN AWB AWB ON AWB.AWB_NO = SEC.AWB_NO AND AWB.AWB_DATE = SEC.AWB_DATE
		JOIN (
	      SELECT PM.AWB_NO, PM.AWB_DATE, OPR.SCH_DATE, OPR.CARR_CODE, OPR.FLT_NO,
	      DENSE_RANK() OVER (PARTITION BY AWB_NO, AWB_DATE ORDER BY OPR.SCH_DATE, OPR.SCH_TIME) RANK
	      FROM 
	      (   SELECT AWB_NO, AWB_DATE, PMAN.FLT_KEY, PMAN.FLT_DATE FROM
	          EXP_PMANIFEST_AWB PMAN
	          UNION
	          SELECT AWB_NO, AWB_DATE, PMAN.FLT_KEY, PMAN.FLT_DATE FROM
	          EXP_PMAN_TARMAC_AWB PMAN
	      ) PM
	      JOIN FLT_OPR OPR ON OPR.FLT_KEY = PM.FLT_KEY AND OPR.SCH_DATE = PM.FLT_DATE AND OPR.FLT_TYPE = 'D') INIT
	      ON INIT.AWB_NO = AWB.AWB_NO AND INIT.AWB_DATE = AWB.AWB_DATE AND INIT.RANK = 1
    	WHERE 
		AWB.AWB_TYPE IN ('E','T')
		<isNotEmpty property="carrierCode">
		AND INIT.CARR_CODE = #carrierCode#
		</isNotEmpty>
		<isNotEmpty property="carrierGroup">
		AND (INIT.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE = #carrierGroup#))
		</isNotEmpty>
		<isEmpty property="carrierCode">
			<isEmpty property="carrierGroup">
				<isNotEmpty property="loginCarrier">
				AND ( INIT.CARR_CODE = #loginCarrier#
                        OR  INIT.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP 
                        WHERE GRP_CARR_CODE  = #loginCarrier#))     
                </isNotEmpty>
			</isEmpty>
		</isEmpty>
		AND SEC.LM_DATE BETWEEN TO_DATE(#fromDate#,'DDMONYYHH24MI') AND TO_DATE(#toDate#,'DDMONYYHH24MI')
		UNION
		SELECT 
		TO_CHAR(SEC.LM_DATE,'DD/MM (Dy)') weekDay,
		TO_CHAR(SEC.LM_DATE,'DDMONYY HH24:MI') trDateTime, SUBSTR(SEC.AWB_NO,1,3) awbPrefix, SUBSTR(SEC.AWB_NO,4) awbNo, AWB.ORIG origin, AWB.DEST dest,  
		AWB.CARR_CODE carrier, AWB.CATALOG catalogue, AWB.WT awbWt,
		DECODE(AWB.AWB_TYPE,'E','Originating',DECODE(AWB.CATALOG,'TM','Transit Mail','Transit')) type, 
		INIT.CARR_CODE fltPrefix, INIT.FLT_NO fltNo, TO_CHAR(INIT.SCH_DATE,'DDMONYY') fltDate,
		SEC.SC_WT secCheckWt, SEC.SC_ITM_CODE secCheckItem
		FROM EXP_RCL_SEC_CHK_DTL SEC
		JOIN AWB AWB ON AWB.AWB_NO = SEC.AWB_NO AND AWB.AWB_DATE = SEC.AWB_DATE
		JOIN (
	      SELECT PM.AWB_NO, PM.AWB_DATE, OPR.SCH_DATE, OPR.CARR_CODE, OPR.FLT_NO,
	      DENSE_RANK() OVER (PARTITION BY AWB_NO, AWB_DATE ORDER BY OPR.SCH_DATE, OPR.SCH_TIME) RANK
	      FROM 
	      (   SELECT AWB_NO, AWB_DATE, PMAN.FLT_KEY, PMAN.FLT_DATE FROM
	          EXP_PMANIFEST_AWB PMAN
	          UNION
	          SELECT AWB_NO, AWB_DATE, PMAN.FLT_KEY, PMAN.FLT_DATE FROM
	          EXP_PMAN_TARMAC_AWB PMAN
	      ) PM
	      JOIN FLT_OPR OPR ON OPR.FLT_KEY = PM.FLT_KEY AND OPR.SCH_DATE = PM.FLT_DATE AND OPR.FLT_TYPE = 'D') INIT
	      ON INIT.AWB_NO = AWB.AWB_NO AND INIT.AWB_DATE = AWB.AWB_DATE AND INIT.RANK = 1
	    WHERE 
		AWB_TYPE IN ('E','T')
		<isNotEmpty property="carrierCode">
		AND INIT.CARR_CODE = #carrierCode#
		</isNotEmpty>
		<isNotEmpty property="carrierGroup">
		AND (INIT.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE = #carrierGroup#))
		</isNotEmpty>
		<isEmpty property="carrierCode">
			<isEmpty property="carrierGroup">
				<isNotEmpty property="loginCarrier">
				AND ( INIT.CARR_CODE = #loginCarrier#
                        OR  INIT.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP 
                        WHERE GRP_CARR_CODE  = #loginCarrier#))     
                </isNotEmpty>
			</isEmpty>
		</isEmpty>
		AND SEC.LM_DATE BETWEEN TO_DATE(#fromDate#,'DDMONYYHH24MI') AND TO_DATE(#toDate#,'DDMONYYHH24MI')
		ORDER BY trDateTime
	</select>
	
	<select id="getISACChargesDataReport" parameterClass="cargo.cms.admin.report.bo.ISACChargesDataBO" resultClass="cargo.cms.admin.report.bo.ISACChargesDataBO">
		SELECT A.AGENT_NAME agentName,
			A.AGENT_CODE agentCode,
			SUBSTR(A.AWB_NO,0,3) awbPrefix,
			SUBSTR(A.AWB_NO,4) awbSufix,
			ECAR.SEC_RC_CODE raCode,
			A.CARR_CODE carrCode,
			ISAC.QUANTITY HAWBQTY,
      		SCH_DATE_TIME fltDate,
      		ITM.ITM_DESC NATUREOFIRR,
      		ISAC.QUANTITY * PKG_CALCULATE.GET_UNIT_PRICE(ITM.ITM_CODE,ITM.ITM_CODE_SFX,ISAC.QUANTITY) AMOUNT
			FROM AWB_ISAC_CHARGES ISAC 
			JOIN AWB A ON ISAC.AWB_NO = A.AWB_NO AND ISAC.AWB_DATE = A.AWB_DATE
      		left JOIN EXP_CAR ECAR ON ISAC.AWB_NO = ECAR.AWB_NO AND ISAC.AWB_DATE = ECAR.AWB_DATE
			JOIN BILL_ITM_MASTER ITM ON ITM.ITM_CODE = ISAC.CHARGES_TYPE AND ITM.OWNER_IND='CX CARGO' AND ITM.ITM_CATEGORY=#reportType#
      		LEFT JOIN (SELECT PM.AWB_NO, PM.AWB_DATE, TO_DATE(TO_CHAR(OPR.SCH_DATE,'DDMONYY')||TRIM(TO_CHAR(OPR.SCH_TIME,'0000')),'DDMONYYHH24MI') SCH_DATE_TIME, OPR.CARR_CODE, OPR.FLT_NO, OPR.FLT_KEY,
			      DENSE_RANK() OVER (PARTITION BY AWB_NO, AWB_DATE ORDER BY OPR.SCH_DATE, OPR.SCH_TIME) RANK
			      FROM 
			      (   SELECT AWB_NO, AWB_DATE, PMAN.FLT_KEY, PMAN.FLT_DATE FROM
			          EXP_PMANIFEST_AWB PMAN
			      ) PM
			      JOIN FLT_OPR OPR ON OPR.FLT_KEY = PM.FLT_KEY AND OPR.SCH_DATE = PM.FLT_DATE AND OPR.FLT_TYPE = 'D') PMAN
			      ON PMAN.AWB_NO = ISAC.AWB_NO AND PMAN.AWB_DATE = ISAC.AWB_DATE AND PMAN.RANK = 1
    		WHERE TO_CHAR(ISAC.CR_DATE, 'DDMONYY') BETWEEN TO_DATE(#fromDate#, 'DDMONYY') AND TO_DATE(#toDate#, 'DDMONYY')
    			and NVL(ISAC.CLOSED,'N')='N'
	</select>
	<select id="getDailyRampHndlgSumReport" parameterClass="cargo.cms.admin.report.bo.DailyRampHndlgSumReptBO" resultClass="cargo.cms.admin.report.bo.DailyRampHndlgSumReptBO">
	  SELECT FO.FLT_TYPE  AS fltType,
  FO.FLT_KEY  AS fltId,
  TO_CHAR(FO.SCH_DATE,'DDMONYY')  AS fltDate,
  PKG_COMMON.GET_FLT_STA(FO.FLT_KEY, FO.SCH_DATE, FO.FLT_TYPE) AS schDate,
  PKG_COMMON.GET_FLT_ATA(FO.FLT_KEY, FO.SCH_DATE, FO.FLT_TYPE) AS ataDate,
  FO.ACFT_PRK_BAY AS parkingBay,
  FO.ACFT_REG_NO AS regNo,
  
  (SELECT COUNT(*) AS TOTAL FROM EXP_FLT_ULD WHERE  FLT_KEY = FO.FLT_KEY AND FLT_DATE = FO.SCH_DATE AND FO.FLT_TYPE = 'D')  
  + (SELECT COUNT(*) AS TOTAL FROM IMP_ULD_LIST WHERE  FLT_KEY = FO.FLT_KEY AND FLT_DATE = FO.SCH_DATE AND FO.FLT_TYPE = 'A') AS uldTotal,
  
  (SELECT NVL(TO_NUMBER(TO_CHAR(SUM(MANIFEST_WT),'999999999.99'),'999999999.99'),0) AS WT
   FROM IMP_CAR_SHP  WHERE FLT_KEY = FO.FLT_KEY AND FLT_DATE = FO.SCH_DATE AND FO.FLT_TYPE = 'A')
  +
  (SELECT NVL(TO_NUMBER(TO_CHAR(SUM(ASSIGNED_WT),'999999999.99'),'999999999.99'),0) AS WT
   FROM EXP_PMANIFEST_ULD_AWB WHERE FLT_KEY = FO.FLT_KEY AND FLT_DATE = FO.SCH_DATE AND 
   FO.FLT_TYPE = 'D')
   +
   (SELECT NVL(TO_NUMBER(TO_CHAR(SUM(PPK_WT)+SUM(BULK_WT),'999999999.99'),'999999999.99'),0) AS WT
   FROM EXP_PMAN_TARMAC_AWB WHERE FLT_KEY = FO.FLT_KEY AND FLT_DATE = FO.SCH_DATE AND 
   FO.FLT_TYPE = 'D') 
   AS TonnageTotal,
  (SELECT CODE_DESC FROM CUST_COMPANY WHERE CODE=FO.RHO_ID) AS rho,
  FO.MANP_RMK AS manpowerRmk,
  FO.RMK AS fltRmk,
  FO.SVC_TYPE AS svcType
  from FLT_OPR FO where FLT_NO is not null
   <isNotEmpty property="schDateFrom" prepend="AND">
              FO.SCH_DATE between #schDateFrom# and #schDateTo#
   </isNotEmpty>
   <isNotEmpty property="ataFrom" prepend="AND">
              FO.ACT_DATE between #ataFrom# and #ataTo#
   </isNotEmpty>
   <isNotEmpty property="fltId" prepend="AND">
               FO.FLT_KEY = #fltId#
   </isNotEmpty>
   <isNotEmpty property="fltCarrList" prepend="AND">
               FO.CARR_CODE = #fltCarrList#
   </isNotEmpty>
   <isNotEmpty property="rho" prepend="AND">
               FO.RHO_ID = #rho#
   </isNotEmpty>
   <isNotEmpty property="fltType" prepend="AND">
               FO.FLT_TYPE = #fltType# 
   </isNotEmpty>
   order by fltDate, schDate, ataDate
	</select>
	<select id="getCCNAChargesDataReport" parameterClass="cargo.cms.admin.report.bo.ISACChargesDataBO" resultClass="cargo.cms.admin.report.bo.ISACChargesDataBO">
		SELECT
     		A.AGENT_CODE AGENTCODE,
     		A.AGENT_NAME AGENTNAME,
			SUBSTR(A.AWB_NO,0,3) AWBPREFIX,
			SUBSTR(A.AWB_NO,4) AWBSUFIX,
      		ISAC.REMARKS REMARKS,
      		ITM.ITM_DESC NATUREOFIRR,
      		ISAC.QUANTITY * PKG_CALCULATE.GET_UNIT_PRICE(ITM.ITM_CODE,ITM.ITM_CODE_SFX,ISAC.QUANTITY) AMOUNT
      		FROM AWB_ISAC_CHARGES ISAC 
			JOIN AWB A ON ISAC.AWB_NO = A.AWB_NO AND ISAC.AWB_DATE = A.AWB_DATE
     		join BILL_ITM_MASTER ITM on ITM.ITM_CODE = ISAC.CHARGES_TYPE and ITM.OWNER_IND='CX CARGO' and ITM.ITM_CATEGORY='CCNA'
			WHERE TO_CHAR(ISAC.CR_DATE, 'DDMONYY') BETWEEN TO_DATE(#fromDate#, 'DDMONYY') AND TO_DATE(#toDate#, 'DDMONYY')
	</select>
	<!-- CR16011201 - Starts-->
	<select id="checkIfPortIsValid" parameterClass="cargo.cms.admin.report.bo.UpliftingStatusReportBO" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM MAST_CITY WHERE CODE = #port#
	</select>
	
	<select id="getUpliftingStatusReportDataExportBUP" parameterClass="cargo.cms.admin.report.bo.UpliftingStatusReportBO" resultClass="cargo.cms.admin.report.bo.UpliftingStatusReportBO">
		select pman.flt_key fltKey,to_char(pman.flt_date,'DDMONYY') fltDate, a.catalog catalog, substr(pman.awb_no,1,3)||'-'||substr(pman.awb_no,4) awbNo, a.pcs awbPcs, a.wt awbWt, PMAN.UNLDG_PT unladingPort, 'Export BUP' upliftStatus, SUM(pman.assigned_pcs) manfPcs, SUM(pman.assigned_wt) manfWt
		from exp_pmanifest_uld_awb pman, awb a, flt_opr fo
		where pman.awb_no = a.awb_no and pman.awb_date = a.awb_date and a.awb_type = 'E'
		and pman.flt_key = fo.flt_key and pman.flt_date = fo.sch_date and fo.flt_type = 'D'
		and exists (select hd.awb_no, hd.awb_date, dtl.uld_key  
		from exp_rcl_hd hd, exp_rcl_dtl dtl where hd.rcl_no = dtl.rcl_no and hd.ppk_type = 'P' 
		and hd.awb_no = pman.awb_no and hd.awb_date = pman.awb_date and dtl.uld_key = pman.uld_bt_no)
		and pman.flt_date between TO_DATE(#fromDate#,'DDMONYY') and TO_DATE(#toDate#,'DDMONYY')
		and PMAN.UNLDG_PT = #port#
		<isNotEmpty property="carrier">
			and fo.carr_code = #carrier#
		</isNotEmpty>
		<isNotEmpty property="carrierGroup">
			AND (fo.carr_code = #carrierGroup# or fo.carr_code in (SELECT CARR_CODE FROM MAST_CARR_GRP 
                        WHERE GRP_CARR_CODE  = #carrierGroup#))
		</isNotEmpty>
		<isEmpty property="carrier">
		<isEmpty property="carrierGroup">
				<isNotEmpty property="loginCarrier">
				   AND ( fo.carr_code = #loginCarrier#
                        OR  fo.carr_code IN (SELECT CARR_CODE FROM MAST_CARR_GRP 
                        WHERE GRP_CARR_CODE  = #loginCarrier#))             
            	</isNotEmpty>
        </isEmpty>
        </isEmpty>
		group by pman.flt_key,pman.flt_date, a.catalog, pman.awb_no, a.pcs, a.wt, PMAN.UNLDG_PT
	</select>
	
	<select id="getUpliftingStatusReportDataExportMIX" parameterClass="cargo.cms.admin.report.bo.UpliftingStatusReportBO" resultClass="cargo.cms.admin.report.bo.UpliftingStatusReportBO">
		select pman.flt_key fltKey,to_char(pman.flt_date,'DDMONYY') fltDate, a.catalog catalog, substr(pman.awb_no,1,3)||'-'||substr(pman.awb_no,4) awbNo, a.pcs awbPcs, a.wt awbWt, PMAN.UNLDG_PT unladingPort, 'Export MIX' upliftStatus, SUM(pman.assigned_pcs) manfPcs, SUM(pman.assigned_wt) manfWt
		from exp_pmanifest_uld_awb pman, awb a, flt_opr fo
		where pman.awb_no = a.awb_no and pman.awb_date = a.awb_date and a.awb_type = 'E'
		and pman.flt_key = fo.flt_key and pman.flt_date = fo.sch_date and fo.flt_type = 'D'
		and exists (select brkdn.awb_no, brkdn.awb_date, brkdn.uld_key 
		from exp_rcl_hd hd, exp_rcl_brkdn brkdn where hd.rcl_no = brkdn.rcl_no and hd.ppk_type = 'M' 
		and brkdn.awb_no = pman.awb_no and brkdn.awb_date = pman.awb_date and brkdn.uld_key = pman.uld_bt_no)
		and pman.flt_date between TO_DATE(#fromDate#,'DDMONYY') and TO_DATE(#toDate#,'DDMONYY') 
		and PMAN.UNLDG_PT = #port#
		<isNotEmpty property="carrier">
			and fo.carr_code = #carrier#
		</isNotEmpty>
		<isNotEmpty property="carrierGroup">
			AND (fo.carr_code = #carrierGroup# or fo.carr_code in (SELECT CARR_CODE FROM MAST_CARR_GRP 
                        WHERE GRP_CARR_CODE  = #carrierGroup#))
		</isNotEmpty>
		<isEmpty property="carrier">
		<isEmpty property="carrierGroup">
				<isNotEmpty property="loginCarrier">
				   AND ( fo.carr_code = #loginCarrier#
                        OR  fo.carr_code IN (SELECT CARR_CODE FROM MAST_CARR_GRP 
                        WHERE GRP_CARR_CODE  = #loginCarrier#))             
            	</isNotEmpty>
        </isEmpty>
        </isEmpty>
		group by pman.flt_key,pman.flt_date, a.catalog, pman.awb_no, a.pcs, a.wt, PMAN.UNLDG_PT
	</select>
	
	<select id="getUpliftingStatusReportDataTransitBUP" parameterClass="cargo.cms.admin.report.bo.UpliftingStatusReportBO" resultClass="cargo.cms.admin.report.bo.UpliftingStatusReportBO">
		select pman.flt_key fltKey,to_char(pman.flt_date,'DDMONYY') fltDate, a.catalog catalog, substr(pman.awb_no,1,3)||'-'||substr(pman.awb_no,4) awbNo, a.pcs awbPcs, a.wt awbWt, PMAN.UNLDG_PT unladingPort, 'Transit BUP' upliftStatus, SUM(pman.assigned_pcs) manfPcs, SUM(pman.assigned_wt) manfWt
		from 
		(
		    select flt_key, flt_date, awb_no, awb_date, UNLDG_PT, ULD_BT_NO, assigned_pcs, assigned_wt from exp_pmanifest_uld_awb
		    where flt_date between TO_DATE(#fromDate#,'DDMONYY') and TO_DATE(#toDate#,'DDMONYY') 
			and UNLDG_PT = #port#
		    union all
		    select flt_key, flt_date, awb_no, awb_date, UNLDG_PT, ULD_BT_NO, assigned_pcs, assigned_wt from exp_pman_tarmac_uld_awb
		    where flt_date between TO_DATE(#fromDate#,'DDMONYY') and TO_DATE(#toDate#,'DDMONYY') 
			and UNLDG_PT = #port#
	    ) pman, awb a, flt_opr fo
		where pman.awb_no = a.awb_no and pman.awb_date = a.awb_date and a.awb_type = 'T'
		and pman.flt_key = fo.flt_key and pman.flt_date = fo.sch_date and fo.flt_type = 'D'
		and (exists
			    (SELECT FS.AWB_NO,
			      FS.AWB_DATE, FU.ULD_KEY
			    FROM (select * from edi_ffm_shp shp
			          where (shp.spl_code1 = 'BUP' or shp.spl_code2 = 'BUP' or shp.spl_code3 = 'BUP'
			          or shp.spl_code4 = 'BUP' or shp.spl_code5 = 'BUP' or shp.spl_code6 = 'BUP'
			          or shp.spl_code7 = 'BUP' or shp.spl_code8 = 'BUP' or shp.spl_code9 = 'BUP')) FS
			    JOIN EDI_FFM_ULD FU
			    ON FU.TR_NO           = FS.TR_NO
			    AND FU.DOC_LINE_NO    = FS.UDOC_LINE_NO
			    JOIN EDI_FFM_MSG FM
			    ON FM.TR_NO            = FU.TR_NO
			    AND FM.FFM_STATUS      = 'P'
			    where (select count(awb_no||awb_date)
			        from v_ffm_dtl where
			        flt_key = FS.flt_key and flt_date = FS.flt_date and uld_key = FU.ULD_KEY) = 1
			        and FS.awb_no = pman.awb_no and FS.awb_date = pman.awb_date and fu.uld_key = pman.uld_bt_no
			        )
			    or
			    exists
			    (select awb_no,awb_date from edi_fwb
			    where (SPH_SPL_CODE1 = 'BUP' or SPH_SPL_CODE2 = 'BUP' or SPH_SPL_CODE3 = 'BUP'
			    or SPH_SPL_CODE4 = 'BUP' or SPH_SPL_CODE5 = 'BUP' or SPH_SPL_CODE6 = 'BUP'
			    or SPH_SPL_CODE7 = 'BUP' or SPH_SPL_CODE8 = 'BUP' or SPH_SPL_CODE9 = 'BUP')
			    and  awb_no = pman.awb_no and awb_date = pman.awb_date ))
		and pman.flt_date between TO_DATE(#fromDate#,'DDMONYY') and TO_DATE(#toDate#,'DDMONYY') 
		and PMAN.UNLDG_PT = #port#
		<isNotEmpty property="carrier">
			and fo.carr_code = #carrier#
		</isNotEmpty>
		<isNotEmpty property="carrierGroup">
			AND (fo.carr_code = #carrierGroup# or fo.carr_code in (SELECT CARR_CODE FROM MAST_CARR_GRP 
                        WHERE GRP_CARR_CODE  = #carrierGroup#))
		</isNotEmpty>
		<isEmpty property="carrier">
		<isEmpty property="carrierGroup">
				<isNotEmpty property="loginCarrier">
				   AND ( fo.carr_code = #loginCarrier#
                        OR  fo.carr_code IN (SELECT CARR_CODE FROM MAST_CARR_GRP 
                        WHERE GRP_CARR_CODE  = #loginCarrier#))             
            	</isNotEmpty>
        </isEmpty>
        </isEmpty>
		group by pman.flt_key,pman.flt_date, a.catalog, pman.awb_no, a.pcs, a.wt, PMAN.UNLDG_PT
	</select>
	
	<select id="getUpliftingStatusReportDataLoose" parameterClass="cargo.cms.admin.report.bo.UpliftingStatusReportBO" resultClass="cargo.cms.admin.report.bo.UpliftingStatusReportBO">
		SELECT pman.flt_key fltKey,
  TO_CHAR(pman.flt_date,'DDMONYY') fltDate,
  a.catalog catalog,
  SUBSTR(pman.awb_no,1,3)
  ||'-'
  ||SUBSTR(pman.awb_no,4) awbNo,
  a.pcs awbPcs,
  a.wt awbWt,
  PMAN.UNLDG_PT unladingPort,
  'Loose' upliftStatus,
  SUM(pman.assigned_pcs) manfPcs,
  SUM(pman.assigned_wt) manfWt
FROM exp_pmanifest_uld_awb pman,
  awb a,
  flt_opr fo
WHERE pman.awb_no = a.awb_no
AND pman.awb_date = a.awb_date
AND a.awb_type    = 'E'
AND pman.flt_key  = fo.flt_key
AND pman.flt_date = fo.sch_date
AND fo.flt_type   = 'D'
AND a.catalog not in ('TM','TU')
AND NOT EXISTS
  (SELECT hd.awb_no,
    hd.awb_date,
    dtl.uld_key
  FROM exp_rcl_hd hd,
    exp_rcl_dtl dtl
  WHERE hd.rcl_no = dtl.rcl_no
  AND hd.ppk_type = 'P'
  AND hd.awb_no   = pman.awb_no
  AND hd.awb_date = pman.awb_date
  AND dtl.uld_key = pman.uld_bt_no
  )
AND NOT EXISTS
  (SELECT brkdn.awb_no,
    brkdn.awb_date,
    brkdn.uld_key
  FROM exp_rcl_hd hd,
    exp_rcl_brkdn brkdn
  WHERE hd.rcl_no    = brkdn.rcl_no
  AND hd.ppk_type    = 'M'
  AND brkdn.awb_no   = pman.awb_no
  AND brkdn.awb_date = pman.awb_date
  AND brkdn.uld_key  = pman.uld_bt_no
  )
AND pman.flt_date BETWEEN TO_DATE(#fromDate#,'DDMONYY') AND TO_DATE(#toDate#,'DDMONYY')
AND PMAN.UNLDG_PT = #port#
<isNotEmpty property="carrier">
			and fo.carr_code = #carrier#
		</isNotEmpty>
		<isNotEmpty property="carrierGroup">
			AND (fo.carr_code = #carrierGroup# or fo.carr_code in (SELECT CARR_CODE FROM MAST_CARR_GRP 
                        WHERE GRP_CARR_CODE  = #carrierGroup#))
		</isNotEmpty>
		<isEmpty property="carrier">
		<isEmpty property="carrierGroup">
				<isNotEmpty property="loginCarrier">
				   AND ( fo.carr_code = #loginCarrier#
                        OR  fo.carr_code IN (SELECT CARR_CODE FROM MAST_CARR_GRP 
                        WHERE GRP_CARR_CODE  = #loginCarrier#))             
            	</isNotEmpty>
        </isEmpty>
        </isEmpty>
GROUP BY pman.flt_key,
  pman.flt_date,
  a.catalog,
  pman.awb_no,
  a.pcs,
  a.wt,
  PMAN.UNLDG_PT
UNION
SELECT pman.flt_key fltKey,
  TO_CHAR(pman.flt_date,'DDMONYY') fltDate,
  a.catalog catalog,
  SUBSTR(pman.awb_no,1,3)
  ||'-'
  ||SUBSTR(pman.awb_no,4) awbNo,
  a.pcs awbPcs,
  a.wt awbWt,
  PMAN.UNLDG_PT unladingPort,
  'Loose' upliftStatus,
  SUM(pman.assigned_pcs) manfPcs,
  SUM(pman.assigned_wt) manfWt
FROM
  (SELECT flt_key,
    flt_date,
    awb_no,
    awb_date,
    UNLDG_PT,
    ULD_BT_NO,
    assigned_pcs,
    assigned_wt
  FROM exp_pmanifest_uld_awb
  WHERE flt_date BETWEEN TO_DATE(#fromDate#,'DDMONYY') AND TO_DATE(#toDate#,'DDMONYY')
  AND UNLDG_PT = #port#
  UNION ALL
  SELECT flt_key,
    flt_date,
    awb_no,
    awb_date,
    UNLDG_PT,
    ULD_BT_NO,
    assigned_pcs,
    assigned_wt
  FROM exp_pman_tarmac_uld_awb
  WHERE flt_date BETWEEN TO_DATE(#fromDate#,'DDMONYY') AND TO_DATE(#toDate#,'DDMONYY')
  AND UNLDG_PT = #port#
  UNION ALL
  SELECT flt_key,
    flt_date,
    awb_no,
    awb_date,
    UNLDG_PT,
    'BULK',
    bulk_pcs,
    bulk_wt
  FROM exp_pman_tarmac_awb
  WHERE flt_date BETWEEN TO_DATE(#fromDate#,'DDMONYY') AND TO_DATE(#toDate#,'DDMONYY')
  AND UNLDG_PT        = #port#
  AND NVL(bulk_pcs,0) > 0
  ) pman,
  awb a,
  flt_opr fo
WHERE pman.awb_no = a.awb_no
AND pman.awb_date = a.awb_date
AND a.awb_type    = 'T'
AND a.catalog not in ('TM','TU')
AND pman.flt_key  = fo.flt_key
AND pman.flt_date = fo.sch_date
AND fo.flt_type   = 'D'
AND (NOT EXISTS
  (SELECT FS.AWB_NO,
    FS.AWB_DATE,
    FU.ULD_KEY
  FROM
    (SELECT *
    FROM edi_ffm_shp shp
    WHERE (shp.spl_code1 = 'BUP'
    OR shp.spl_code2     = 'BUP'
    OR shp.spl_code3     = 'BUP'
    OR shp.spl_code4     = 'BUP'
    OR shp.spl_code5     = 'BUP'
    OR shp.spl_code6     = 'BUP'
    OR shp.spl_code7     = 'BUP'
    OR shp.spl_code8     = 'BUP'
    OR shp.spl_code9     = 'BUP')
    ) FS
  JOIN EDI_FFM_ULD FU
  ON FU.TR_NO        = FS.TR_NO
  AND FU.DOC_LINE_NO = FS.UDOC_LINE_NO
  JOIN EDI_FFM_MSG FM
  ON FM.TR_NO       = FU.TR_NO
  AND FM.FFM_STATUS = 'P'
  WHERE (SELECT COUNT(awb_no
      ||awb_date)
    FROM v_ffm_dtl
    WHERE flt_key = FS.flt_key
    AND flt_date  = FS.flt_date
    AND uld_key   = FU.ULD_KEY) = 1
  AND FS.awb_no   = pman.awb_no
  AND FS.awb_date = pman.awb_date
  AND fu.uld_key  = pman.uld_bt_no
  )
AND NOT EXISTS
  (SELECT awb_no,
    awb_date
  FROM edi_fwb
  WHERE (SPH_SPL_CODE1 = 'BUP'
  OR SPH_SPL_CODE2     = 'BUP'
  OR SPH_SPL_CODE3     = 'BUP'
  OR SPH_SPL_CODE4     = 'BUP'
  OR SPH_SPL_CODE5     = 'BUP'
  OR SPH_SPL_CODE6     = 'BUP'
  OR SPH_SPL_CODE7     = 'BUP'
  OR SPH_SPL_CODE8     = 'BUP'
  OR SPH_SPL_CODE9     = 'BUP')
  AND awb_no           = pman.awb_no
  AND awb_date         = pman.awb_date
  ))
AND pman.flt_date BETWEEN TO_DATE(#fromDate#,'DDMONYY') AND TO_DATE(#toDate#,'DDMONYY')
AND PMAN.UNLDG_PT = #port#
<isNotEmpty property="carrier">
			and fo.carr_code = #carrier#
		</isNotEmpty>
		<isNotEmpty property="carrierGroup">
			AND (fo.carr_code = #carrierGroup# or fo.carr_code in (SELECT CARR_CODE FROM MAST_CARR_GRP 
                        WHERE GRP_CARR_CODE  = #carrierGroup#))
		</isNotEmpty>
		<isEmpty property="carrier">
		<isEmpty property="carrierGroup">
				<isNotEmpty property="loginCarrier">
				   AND ( fo.carr_code = #loginCarrier#
                        OR  fo.carr_code IN (SELECT CARR_CODE FROM MAST_CARR_GRP 
                        WHERE GRP_CARR_CODE  = #loginCarrier#))             
            	</isNotEmpty>
        </isEmpty>
        </isEmpty>
GROUP BY pman.flt_key,
  pman.flt_date,
  a.catalog,
  pman.awb_no,
  a.pcs,
  a.wt,
  PMAN.UNLDG_PT
	</select>
<select id="getListELIELMLoadin"  parameterClass="cargo.cms.admin.report.bo.ELIELMLoadingFormBO"  resultClass="cargo.cms.admin.report.bo.ELIELMLoadingFormBO">
		WITH BKG_FLT AS (
		  SELECT OPR.FLT_KEY , TO_CHAR(OPR.SCH_DATE,'DDMONYY') SCH_DATE,
		  DENSE_RANK() OVER (PARTITION BY ercl.awb_no,ercl.awb_date ORDER BY DECODE(OPR.ACT_DATE,NULL,NVL(OPR.EST_DATE,OPR.SCH_DATE),OPR.ACT_DATE),DECODE(PKG_COMMON.GET_FLT_ATA(OPR.FLT_KEY,OPR.SCH_DATE, 'D', 'DD'),NULL,NVL(PKG_COMMON.GET_FLT_ETA(OPR.FLT_KEY,OPR.SCH_DATE, 'D', 'DD'),PKG_COMMON.GET_FLT_STA(OPR.FLT_KEY,OPR.SCH_DATE, 'D', 'DD')),PKG_COMMON.GET_FLT_ATA(OPR.FLT_KEY,OPR.SCH_DATE, 'D', 'DD')), OPR.TR_NO) AS RANK
		  FROM FLT_OPR OPR
		  JOIN (
            SELECT   
            prcl.PI_BK_FLT_KEY  , 
            prcl.PI_BK_FLT_DATE , 
            pi.awb_no , 
            pi.awb_date  
		    FROM exp_pre_rcl_pi_dtl pi
		    JOIN AWB awb
		    ON awb.awb_no    = pi.awb_no
		    AND awb.awb_date = pi.awb_date
		    JOIN exp_pre_rcl_hd prcl
		    ON prcl.pre_rcl_no = pi.pre_rcl_no
		    LEFT JOIN cust_company cust
		    ON cust.code    = prcl.cust_no
		    WHERE pi.awb_no = #awbNumber#
            AND pi.awb_date = #awbDate# and prcl.PI_BK_FLT_KEY  is not null
        AND prcl.STATUS IN ('CONFIRMED','WT_DIFFERENCE')
		    AND EXISTS (SELECT NULL FROM exp_uld_awb uld  WHERE uld.awb_no = pi.awb_no  AND uld.awb_date = pi.awb_date  AND uld.uld_key  = pi.uld_key)
		  ) ERCL ON 1 = 1
          WHERE ERCL.PI_BK_FLT_KEY = OPR.FLT_KEY AND ERCL.PI_BK_FLT_DATE = OPR.SCH_DATE)   
		SELECT pi.awb_no   AS awbNumber,
		  awb.orig         AS originShipment,
		  awb.dest         AS desShipment,
		  (select FLT_KEY from BKG_FLT where rank = 1 and rownum = 1)  AS flightNumber,
		  (select SCH_DATE from BKG_FLT where rank = 1 and rownum = 1)  AS flightDate,
		  cust.code_desc   AS ageName,
		  cust.add1        AS ageAddressA,
		  cust.add2        AS ageAddressB,
		  cust.add3        AS ageAddressC,
		  cust.add4        AS ageAddressD,
		  cust.tel1        AS agtContactNumber,
		  pi.pi_num        AS piNumber,
		  pi.uld_key       AS uldNumber,
		  pi.pi_pcs        AS noPackage,
		  pi.pi_wt         AS totalWegigt
		FROM exp_pre_rcl_pi_dtl pi
		JOIN AWB awb
		ON awb.awb_no    = pi.awb_no
		AND awb.awb_date = pi.awb_date
		JOIN exp_pre_rcl_hd prcl
		ON prcl.pre_rcl_no = pi.pre_rcl_no
		LEFT JOIN cust_company cust
		ON cust.code    = prcl.cust_no
		WHERE pi.awb_no = #awbNumber#
		AND pi.awb_date = #awbDate#
    AND prcl.STATUS IN ('CONFIRMED','WT_DIFFERENCE')
		AND EXISTS (SELECT NULL FROM exp_uld_awb uld  WHERE uld.awb_no = pi.awb_no  AND uld.awb_date = pi.awb_date  AND uld.uld_key  = pi.uld_key)
</select>

<select id="getListPINumber"  parameterClass="cargo.cms.admin.report.bo.UNPNInformation"  resultClass="cargo.cms.admin.report.bo.UNPNInformation">
	select Tr_No as trNo, Un_Number as unNumber, Pi_Number as piNumber, Un_Desc as unDesc from EXP_UN_PI_INFO
</select>


<select id="getcheckCCAIND"  parameterClass="cargo.cms.admin.report.bo.ELIELMLoadingFormBO"  resultClass="java.lang.String">
	select nvl(Cca_Yn,'N')  from EXP_CAR where Awb_No=#awbNumber# and Awb_Date=#awbDate#	
</select>


	<!-- CR16011201 - Ends-->
</sqlMap> 