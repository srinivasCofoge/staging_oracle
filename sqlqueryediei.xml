<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="EDI">

	<!-- Queries for GLS External Application Access Starts -->
   	<insert id="sqlInsertGlsAgentDetail" parameterClass="cargo.cms.gls.bo.GLSAccessBO">
   		INSERT INTO GLS_AGENT_DETAIL(AGENT_ID, AGENT_USER_ID, SESSION_ID, STATUS, REMARKS, LM_USER_ID, LM_DATE) VALUES(#agentId#, #agentUserId#, #sessionId#, 'PENDING', NULL, #userID#, SYSDATE)
   	</insert>
   	<update id="sqlUpdateGlsAgentDetail" parameterClass="cargo.cms.gls.bo.GLSAccessBO">
   		UPDATE GLS_AGENT_DETAIL SET STATUS = #status#, LM_USER_ID = #userID#, LM_DATE = SYSDATE WHERE  AGENT_ID = #agentId# AND SESSION_ID = #sessionId#
   	</update>
   	<select id="sqlFetchGlsAgentDetail" parameterClass="cargo.cms.gls.bo.GLSAccessBO" resultClass="cargo.cms.gls.bo.GLSAccessBO">
   		SELECT AGENT_ID, AGENT_USER_ID, SESSION_ID, STATUS, REMARKS, LM_USER_ID, LM_DATE FROM GLS_AGENT_DETAIL WHERE AGENT_ID = #agentId# AND SESSION_ID = #sessionId#
   	</select>

	<!-- Added By Srinivas for FSU message::::Starts -->
	<select id="checkFSUMsgExists"  parameterClass="map" resultClass="java.lang.Integer">			
		select count(1) from AWB_SHP_STS 
		where 	AWB_NO = #AWB_NO# AND AWB_DATE =  TO_date(#AWB_DATE#,'DDMONYY')
		AND COD_FSU_STS = #MSG_TYPE# 
		<isEqual property="MSG_TYPE" prepend="AND" compareValue="DIS">
		   COD_FSU_DIS = #DIS_TYPE# 
		</isEqual>	
		<isNotEmpty property="FLT_KEY" prepend="AND">	
		   FLT_NO = #FLT_KEY#
		   AND FLT_DATE = To_Date(#FLT_DATE# , 'DDMONYY')
	    </isNotEmpty>
	</select>	
	
	<insert id="fsuInsertAwbShpSts" parameterClass="map" >
		INSERT INTO AWB_SHP_STS(AWB_NO, AWB_DATE, DAT_FSU_CRE, COD_FSU_STS, COD_FSU_DIS, COD_FSU_SND, DES_FSU_DTS,QTY_TOT_PCS, FLT_NO, FLT_DATE,TR_TYPE,cr_user_id,cr_date,lm_user_id,lm_date)
			values (#AWB_NO# , #AWB_DATE# , sysdate , #MSG_TYPE#, #DIS_TYPE# , #CODE_FSU_SEND# , #MESSAGE# , NVL(#TOT_PCS#,0),#FLT_KEY#,#FLT_DATE#,#TR_TYPE#,#USER_ID#,sysdate,#USER_ID#,sysdate)			
	</insert>
	
	<update id="sqlExpCarSHC" parameterClass="java.util.HashMap">
		UPDATE EXP_CAR SET			
			SPL_CODE1=         #splCode1#,
			SPL_CODE2=         #splCode2#,
			SPL_CODE3=         #splCode3#,
			SPL_CODE4=         #splCode4#,
			SPL_CODE5=         #splCode5#,
			SPL_CODE6=         #splCode6#,
			SPL_CODE7=         #splCode7#,
			SPL_CODE8=         #splCode8#,
			SPL_CODE9=         #splCode9#,			
			LM_USER_ID=        #lastModUserId#,
			LM_DATE=           sysdate			
		WHERE AWB_NO = #awbNo#
		and awb_date = to_date(#awbDate#,'DDMONYY')
	</update>
	
	<select id="fsuSitaAddress" parameterClass="map" resultClass="cargo.cms.edi.ei.bo.FSUSitaAddressBO">			
		<![CDATA[
		SELECT DISTINCT D.SITA_ADDR sitaAddress
		FROM CUST_AIRL_SITA_CIMP_MSG M
		JOIN CUST_AIRL_SITA_CIMP_DTL D ON M.TR_NO = D.TR_NO
		WHERE CARR_CODE = #CARR_CODE# AND MSG_TYPE = #FSU_MSG_TYPE#
		]]>
		<isNotEmpty property="FLT_KEY">
		AND (FLT_KEY = #FLT_KEY# or FLT_KEY = 'ZZZ99999')
		</isNotEmpty>
	</select>
	
	
	<select id="fsuCBXSitaAddress" parameterClass="map" resultClass="cargo.cms.edi.ei.bo.FSUSitaAddressBO">			
		<![CDATA[
		SELECT DISTINCT D.SITA_ADDR sitaAddress
		FROM CUST_AIRL_SITA_CIMP_MSG M
		JOIN CUST_AIRL_SITA_CIMP_DTL D ON M.TR_NO = D.TR_NO
		WHERE CARR_CODE = #CARR_CODE# AND MSG_TYPE = #FSU_MSG_TYPE#
		]]>
		<isNotEmpty property="FLT_KEY">
		AND (FLT_KEY = #FLT_KEY# or FLT_KEY = 'XH99999')
		</isNotEmpty>
	</select>
	
	<!-- calling package FSU-RCS to generate the message-->
	<parameterMap id="fsuRCSMsgMap" class="map" >	
		<parameter property="AWB_NO" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="AWB_DATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="MESSAGE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
	</parameterMap>		
	<procedure id="getFsuRcsMsg" parameterMap="fsuRCSMsgMap" >
		{call PKG_FSU.FSU_RCS(?,?,?)}
	</procedure>
	
	<!-- calling package FSU-RCF to generate the message-->	
	<parameterMap id="fsuRCFMsgMap" class="map" >	
		<parameter property="AWB_NO" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="AWB_DATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="FLT_KEY" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="FLT_DATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="MESSAGE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
	</parameterMap>	
	<procedure id="getFsuRcfMsg" parameterMap="fsuRCFMsgMap" >
		{call PKG_FSU.FSU_RCF(?,?,?,?,?)}
	</procedure>
	

	
	<parameterMap id="fsuRCLRCFMsgMap" class="map" >	
		<parameter property="AWB_NO" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="AWB_DATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="FLT_KEY" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="FLT_DATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="MESSAGE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
	</parameterMap>	
	<procedure id="getFsu_Rcl_RcfMsg" parameterMap="fsuRCLRCFMsgMap" >
		{call PKG_FSU.FSU_RCL_RCF(?,?,?,?,?)}
	</procedure>
	
	<!-- calling package FSU-FIW to generate the message-->	
	<parameterMap id="fsuFIWMsgMap" class="map" >	
		<parameter property="AWB_NO" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="AWB_DATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="FLT_KEY" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="FLT_DATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="MESSAGE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
	</parameterMap>	
	<procedure id="getFsuFIWMsg" parameterMap="fsuFIWMsgMap" >
		{call PKG_FSU.FSU_FIW(?,?,?,?,?)}
	</procedure>
	
	
	
	<!-- calling package FSU-FOW to generate the message-->	
	<parameterMap id="fsuFOWMsgMap" class="map" >	
		<parameter property="AWB_NO" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="AWB_DATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="FLT_KEY" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="FLT_DATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="MESSAGE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
	</parameterMap>	
	<procedure id="getFsuFOWMsg" parameterMap="fsuFOWMsgMap" >
		{call PKG_FSU.FSU_FOW(?,?,?,?,?)}
	</procedure>



	<!-- calling package FSU-RCF_DHL to generate the message-->	
	<parameterMap id="fsuRCFDhlMap" class="map" >	
		<parameter property="AWB_NO"   jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="AWB_DATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="FLT_KEY"  jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="FLT_DATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="MESSAGE"  jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
	</parameterMap>
	<procedure id="getFsuRcfDhlMsg" parameterMap="fsuRCFDhlMap" >
		{call PKG_FSU.FSU_RCF_DHL(?,?,?,?,?)}
	</procedure>
	
	<!-- calling package FSU-RCT to generate the message-->	
	<parameterMap id="fsuRCTMsgMap" class="map" >	
	<parameter property="AWB_NO"   jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	<parameter property="AWB_DATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	<parameter property="AWB_TYPE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	<parameter property="MESSAGE"  jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
	</parameterMap>	
	<procedure id="getFsuRctMsg" parameterMap="fsuRCTMsgMap" >
		{call PKG_FSU.FSU_RCT(?,?,?,?)}
	</procedure>
	
	<!-- calling package FSU-RCT-EXP to generate the message-->
	<parameterMap id="fsuRCTExpMap" class="map" >	
		<parameter property="AWB_NO"   jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="AWB_DATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="RCL_NO"   jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="MESSAGE"  jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
	</parameterMap>
	<procedure id="getFsuRctExpMsg" parameterMap="fsuRCTExpMap" >
		{call PKG_FSU.FSU_RCT_EXP(?,?,?,?)}
	</procedure>
	
	<!-- calling package FSU-DEP to generate the message-->
	<parameterMap id="fsuDepMsgMap" class="map" >	
		<parameter property="AWB_NO"   jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="AWB_DATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="FLT_KEY"  jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="FLT_DATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="MESSAGE"  jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
	</parameterMap>
	<procedure id="getFsuDepMsg" parameterMap="fsuDepMsgMap" >
		{call PKG_FSU.FSU_DEP(?,?,?,?,?)}
	</procedure>
	
	<!-- calling package FSU-TRK-DEP to generate the message-->
	<parameterMap id="fsuTrkDepMsgMap" class="map" >	
		<parameter property="AWB_NO"   jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="AWB_DATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="FLT_KEY"  jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="FLT_DATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="MESSAGE"  jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
	</parameterMap>
	<procedure id="getFsuTrkDepMsg" parameterMap="fsuTrkDepMsgMap" >
		{call PKG_FSU.FSU_TRK_DEP(?,?,?,?,?)}
	</procedure>
	
	<!-- calling package FSU-DISC to generate the message-->
	<parameterMap id="fsuDiscMsgMap" class="map" >	
		<parameter property="AWB_NO"   jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="AWB_DATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="FLT_KEY"  jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="FLT_DATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="DISC_TYPE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="MESSAGE"  jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
	</parameterMap>
	<procedure id="getFsuDiscMsg" parameterMap="fsuDiscMsgMap" >
		{call PKG_FSU.FSU_DISC(?,?,?,?,?,?)}
	</procedure>
	
	<!-- calling package FSU-DiscOfld to generate the message-->
	<parameterMap id="fsuDiscOfldMap" class="map" >	
		<parameter property="AWB_NO"   jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="AWB_DATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="FLT_KEY"  jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="FLT_DATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="MESSAGE"  jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
	</parameterMap>
		<procedure id="getFsuDiscOfldMsg" parameterMap="fsuDiscOfldMap" >
		{call PKG_FSU.FSU_DISC_OFLD(?,?,?,?,?)}
	</procedure>
	
	<!-- calling package FSU-TFD to generate the message-->
	<parameterMap id="fsuTfdMsgMap" class="map" >	
		<parameter property="AWB_NO"   jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="AWB_DATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="MESSAGE"  jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
	</parameterMap>
	<procedure id="getFsuTfdMsg" parameterMap="fsuTfdMsgMap" >
		{call PKG_FSU.FSU_TFD(?,?,?)}
	</procedure>
	
	<!-- calling package FSU-TRM to generate the message-->
	<parameterMap id="fsuTrmMsgMap" class="map" >	
		<parameter property="AWB_NO"   jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="AWB_DATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="MESSAGE"  jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
	</parameterMap>
	<procedure id="getFsuTrmMsg" parameterMap="fsuTrmMsgMap" >
		{call PKG_FSU.FSU_TRM(?,?,?)}
	</procedure>
		
	<!-- calling package FSU-AWD to generate the message-->
	<parameterMap id="fsuAwdMap" class="map" >	
		<parameter property="AWB_NO"   jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="AWB_DATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="MESSAGE"  jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
	</parameterMap>
	<procedure id="getFsuAwdMsg" parameterMap="fsuAwdMap" >
		{call PKG_FSU.FSU_AWD(?,?,?)}
	</procedure>
	
	<!-- calling package FSU-NFD to generate the message-->
	<parameterMap id="fsuNfdMap" class="map" >	
		<parameter property="AWB_NO"   jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="AWB_DATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="FLT_KEY"  jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="FLT_DATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="MESSAGE"  jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
	</parameterMap>
	<procedure id="getFsuNfdMsg" parameterMap="fsuNfdMap" >
		{call PKG_FSU.FSU_NFD(?,?,?,?,?)}
	</procedure>
	
	<!-- calling package FSU-NFD-DHL to generate the message-->
	<parameterMap id="fsuNfdDhlMap" class="map" >	
		<parameter property="AWB_NO"   jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="AWB_DATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="FLT_KEY"  jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="FLT_DATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="MESSAGE"  jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
	</parameterMap>
	<procedure id="getFsuNfdDhlMsg" parameterMap="fsuNfdDhlMap" >
		{call PKG_FSU.FSU_NFD_DHL(?,?,?,?,?)}
	</procedure>

	<!-- calling package FSU-MAN to generate the message-->
	<parameterMap id="fsuManMsgMap" class="map" >	
		<parameter property="AWB_NO"   jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="AWB_DATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="FLT_KEY"  jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="FLT_DATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="MESSAGE"  jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
	</parameterMap>
	<procedure id="getFsuManMsg" parameterMap="fsuManMsgMap" >
		{call PKG_FSU.FSU_MAN(?,?,?,?,?)}
	</procedure>
	
	<!-- calling package FSU_PRE to generate the message-->
	<parameterMap id="fsuPreMsgMap" class="map" >	
		<parameter property="AWB_NO"   jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="AWB_DATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="FLT_KEY"  jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="FLT_DATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="MESSAGE"  jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
	</parameterMap>
	<procedure id="getFsuPreMsg" parameterMap="fsuPreMsgMap" >
		{call PKG_FSU.FSU_PRE(?,?,?,?,?)}
	</procedure>
	
	<!-- calling package FSU-FAR to generate the message-->
	<parameterMap id="fsuFarMsgMap" class="map" >	
		<parameter property="AWB_NO"   jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="AWB_DATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="FLT_KEY"  jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="FLT_DATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="MESSAGE"  jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
	</parameterMap>
	<procedure id="getFsuFarMsg" parameterMap="fsuFarMsgMap" >
		{call PKG_FSU.FSU_FAR(?,?,?,?,?)}
	</procedure>
	
	<!-- calling package FSU-DLV to generate the message-->
	<parameterMap id="fsuDlvMsgMap" class="map" >	
		<parameter property="AWB_NO"   jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="AWB_DATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="SRF_NO" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="MESSAGE"  jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
	</parameterMap>		
	<procedure id="getFsuDlvMsg" parameterMap="fsuDlvMsgMap" >
		{call PKG_FSU.FSU_DLV(?,?,?,?)}
	</procedure>
	
	<!-- calling package FSU-DLV_POST_SRF to generate the message-->
	<parameterMap id="fsuDlvPostSrfMap" class="map" >	
		<parameter property="SRF_NO"   jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="MESSAGE"  jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
	</parameterMap>		
	<procedure id="getFsuDlvPostSrfMsg" parameterMap="fsuDlvPostSrfMap" >
		{call PKG_FSU.FSU_DLV_POST_SRF(?,?)}
	</procedure>
	
	<!-- calling package FSU-AWR to generate the message-->
	<parameterMap id="fsuAwrMsgMap" class="map" >	
		<parameter property="AWB_NO"   jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="AWB_DATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="FLT_KEY"  jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="FLT_DATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="MESSAGE"  jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
	</parameterMap>
	<procedure id="getFsuAwrMsg" parameterMap="fsuAwrMsgMap" >
		{call PKG_FSU.FSU_AWR(?,?,?,?,?)}
	</procedure>
	
	<!-- calling package FSU-CCD to generate the message-->
	<parameterMap id="fsuCcdMsgMap" class="map" >	
		<parameter property="AWB_NO"   jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="AWB_DATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="FLT_KEY"  jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="FLT_DATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="FLT_TYPE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="MESSAGE"  jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
	</parameterMap>
	<procedure id="getFsuCcdMsg" parameterMap="fsuCcdMsgMap" >
		{call PKG_FSU.FSU_CCD(?,?,?,?,?,?)}
	</procedure>
		
	<!-- calling package FSU-SSPD to generate the message-->
	<parameterMap id="fsuSspdMsgMap" class="map" >	
		<parameter property="AWB_NO"   jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="AWB_DATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="FLT_KEY"  jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="FLT_DATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="MESSAGE"  jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
	</parameterMap>
	<procedure id="getSendSSPDMsg" parameterMap="fsuSspdMsgMap" >
		{call PKG_FSU.FSU_SSPD(?,?,?,?,?)}
	</procedure>
	
	<!-- calling package FSU-NOA to generate the message-->
	<parameterMap id="fsuNoaMsgMap" class="map" >	
		<parameter property="AWB_NO"   jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="AWB_DATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="FLT_KEY"  jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="FLT_DATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="MESSAGE"  jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
	</parameterMap>
	<procedure id="getSendNoaMsg" parameterMap="fsuNoaMsgMap" >
		{call PKG_FSU.FSU_NOA(?,?,?,?,?)}
	</procedure>
	
	
	<!-- calling package FSU-ARR to generate the message-->
	<parameterMap id="fsuArrMsgMap" class="map" >	
		<parameter property="AWB_NO"   jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="AWB_DATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="FLT_KEY"  jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="FLT_DATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="MESSAGE"  jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
	</parameterMap>
	<procedure id="getSendArrMsg" parameterMap="fsuArrMsgMap" >
		{call PKG_FSU.FSU_ARR(?,?,?,?,?)}
	</procedure>
	
	
	<!-- calling package FSU-FOH to generate the message-->
	<parameterMap id="fsuFohMsgMap" class="map" >	
		<parameter property="AWB_NO"   jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="AWB_DATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="RCL_NO"   jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="MESSAGE"  jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
	</parameterMap>		
	<procedure id="getFsuFohMsg" parameterMap="fsuFohMsgMap" >
		{call PKG_FSU.FSU_FOH(?,?,?,?)}
	</procedure>
	
	<update id="updateImpCarShpNoaInd" parameterClass="map">
		UPDATE IMP_CAR_SHP 
		SET 
			NOA_IND = 'Y',
			LM_USER_ID = #USER_ID#,
			LM_DATE = SYSDATE,
			TR_TYPE = 'INF'			
		WHERE 	
			UPPER(AWB_NO) = UPPER(#AWB_NO#) AND
			UPPER(FLT_KEY) = UPPER(#FLT_KEY#) AND
			UPPER(FLT_DATE) = TO_DATE(#FLT_DATE#,'DDMONYY') AND
			UPPER(AWB_DATE) = TO_DATE(#AWB_DATE#,'DDMONYY')  
	</update>
		
	<!-- Added By Srinivas for FSU message::::Ends -->
	
	
	<!-- calling package PKG_CD_FSU  to generate CBX FSU the message START-->
		<parameterMap id="fsuCDDepMsgMap" class="map" >	
		<parameter property="AWB_NO"   jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="AWB_DATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="FLT_KEY"  jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="FLT_DATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="PROCESS_TIME" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="MESSAGE"  jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
		</parameterMap>
	        <procedure id="getFsuCDDepMsg" parameterMap="fsuCDDepMsgMap" >
			{call PKG_CD_FSU.FSU_DEP(?,?,?,?,?,?)}
		</procedure>
		
		<parameterMap id="fsuCDArrMsgMap" class="map" >	
		<parameter property="AWB_NO"   jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="AWB_DATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="FLT_KEY"  jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="FLT_DATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="PROCESS_TIME" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="MESSAGE"  jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
		</parameterMap>
		<procedure id="getFsuCDArrMsg" parameterMap="fsuCDArrMsgMap" >
			{call PKG_CD_FSU.FSU_ARR(?,?,?,?,?,?)}
		</procedure>
		
	        <parameterMap id="fsuCDRCFMsgMap" class="map" >	
		<parameter property="AWB_NO" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="AWB_DATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="FLT_KEY" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="FLT_DATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="PROCESS_TIME" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="UNLADING_PORT" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="MESSAGE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
		</parameterMap>	
		<procedure id="getFsuCDRcfMsg" parameterMap="fsuCDRCFMsgMap" >
			{call PKG_CD_FSU.FSU_RCF(?,?,?,?,?,?,?)}
		</procedure>
		
		<parameterMap id="fsuCDDlvMsgMap" class="map" >	
		<parameter property="AWB_NO"   jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="AWB_DATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="FLT_KEY" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="FLT_DATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="PROCESS_TIME" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>	
		<parameter property="MESSAGE"  jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
		</parameterMap>		
			<procedure id="getFsuCDDlvMsg" parameterMap="fsuCDDlvMsgMap" >
			{call PKG_CD_FSU.FSU_DLV(?,?,?,?,?,?)}
		</procedure>
	
		<parameterMap id="fsuCDAwdMap" class="map" >	
		<parameter property="AWB_NO"   jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="AWB_DATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="FLT_KEY" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="FLT_DATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="PROCESS_TIME" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="MESSAGE"  jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
		</parameterMap>
		<procedure id="getFsuCDAwdMsg" parameterMap="fsuCDAwdMap" >
			{call PKG_CD_FSU.FSU_AWD(?,?,?,?,?,?)}
		</procedure>
				
	        <parameterMap id="fsuCDCcdMsgMap" class="map" >	
		<parameter property="AWB_NO"   jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="AWB_DATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="FLT_KEY"  jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="FLT_DATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>	
		<parameter property="PROCESS_TIME" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>	
		<parameter property="MESSAGE"  jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
		</parameterMap>
		<procedure id="getFsuCDCcdMsg" parameterMap="fsuCDCcdMsgMap" >
			{call PKG_CD_FSU.FSU_CCD(?,?,?,?,?,?)}
		</procedure>
		
	        <parameterMap id="fsuCDNfdMap" class="map" >	
		<parameter property="AWB_NO"   jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="AWB_DATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="FLT_KEY"  jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="FLT_DATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="PROCESS_TIME" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="MESSAGE"  jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
		</parameterMap>
			<procedure id="getFsuCDNfdMsg" parameterMap="fsuCDNfdMap" >
			{call PKG_CD_FSU.FSU_NFD(?,?,?,?,?,?)}
		</procedure>
		
	<!-- calling package PKG_CD_FSU  to generate CBX FSU the message END-->
	
	
	<!-- Added By Srinivas for LUC message::::Starts -->
	
	<select id="getUldReceiptNum"  parameterClass="map"  resultClass="java.util.HashMap">
		SELECT TO_CHAR(CR_DATE,'DDMONYY') as CR_DATE,TO_CHAR(SYSDATE,'DDMONYY HH24MI') as SYS_DATE, PRECEDING_CHAR as PRECEDING_CHAR , SEQ_NO as SEQ_NO, STARTRANGE as START_RANGE,
		 ENDRANGE as END_RANGE , CARR_CODE as CARR_CODE FROM REGISTER_CARR_SEQ_NO WHERE CARR_CODE = #CARR_CODE# 
   	</select>	
   	
   	
   	
   	<select id="getLUCULDDamageStatus"  parameterClass="java.lang.String"  resultClass="java.lang.String">
   		SELECT NVL(DAM_IND,'N' ) FROM ULD_INVENTORY WHERE ULD_KEY =#uldKey#
   	</select>
   	
   	<select id="getAgentCarrId"  parameterClass="map"  resultClass="java.lang.String">
   		select PARTICIPANT_CODE from CUST_AGENT_PARTICIPANT_CODE where CUST_NO = #AGENT_CODE# and CARR_CODE = #CARR_CODE# and rownum =1   		
   	</select>
   	
   	<select id="getLUCAgentCode"  parameterClass="java.lang.String"  resultClass="java.lang.String">
   		select CODE from CUST_COMPANY where CODE_DESC = #agentName# and rownum =1   		
   	</select>

<select id="getLatestURFAgentDetails"  parameterClass="java.lang.String" resultClass="java.util.HashMap">
		 SELECT URF,carrierCode as CARRIER, agentCustNo as AGENT_CODE,agent as AGENT FROM 
		   (SELECT IHD.eir_no URF,IHD.CARR_CODE as carrierCode, IHD.AGENT_CUST_NO as agentCustNo,(select code_desc from cust_company where code=IHD.AGENT_CUST_NO) agent FROM ULD_REL_HD IHD
		     JOIN ULD_REL_DTL RDTL ON RDTL.EIR_NO = IHD.EIR_NO
		    WHERE RDTL.ULD_KEY = #uldKey# AND REL_DATE IS NOT NULL ORDER BY TO_DATE(to_char(IHD.REL_DATE,'DDMONYY') ||  lpad(IHD.REL_TIME,4,0) , 'DDMONYYHH24MI') DESC ) WHERE ROWNUM = 1
	</select>

   	<update id="resetRegisterSeqNo" parameterClass="java.util.HashMap">
		UPDATE REGISTER_CARR_SEQ_NO SET seq_no = STARTRANGE ,cr_date = SYSDATE WHERE CARR_CODE = 'CX'
     </update>
     
     <update id="updateRegisterSeqNo" parameterClass="java.lang.String">
		UPDATE REGISTER_CARR_SEQ_NO SET seq_no = (seq_no+1) 
		WHERE carr_code	= DECODE(#CARR_CODE#,'CX','CX','KZ','KZ','LD','LD','CX') 
     </update>
   	
   	<select id="getAwbPriffx"  parameterClass="java.lang.String"  resultClass="java.lang.String">
		select CODE from MAST_AWB_PREFIX where CARR_CODE = #carr# and DEF_YN = 'Y' and rownum =1
   	</select>
   	
   	<!-- Added By Srinivas for LUC message::::ends -->
   	
   	<!-- Added By Srinivas for FFM Truck message:::: Starts -->
   	<select id="FFM_getHeaderInfo"	parameterClass="cargo.cms.edi.ei.bo.FFMTruckManfBO"	resultClass="cargo.cms.edi.ei.bo.FFMTruckManfBO">
   		SELECT trkFltKey,
			  trkFltDate,
			  schTime,
			  carrier,
			  SUBSTR(trkFltKey,LENGTH(carrier)+1,LENGTH(trkFltKey)) fltNum,
			  fltMon,
			  trkOperator,
			  fltDay,
			  unLadPnt1,
			  unLadPnt2,
			  unLadPnt3,
			  msgSeqNo
			FROM
			  (SELECT TRUCK_FLT_NO                          AS trkFltKey,
			    TO_CHAR(TRUCK_FLT_DATE,'DDMONYY')           AS trkFltDate,
			    sch_time                                    AS schTime,
			    PKG_COMMON.get_truck_flt_carr(TRUCK_FLT_NO) AS carrier,
			    ''                                          AS fltNum,
			    TO_CHAR (TRUCK_FLT_DATE, 'MON')             AS fltMon,
			    operator                                    AS trkOperator,
			    TO_CHAR(TRUCK_FLT_DATE, 'DD')               AS fltDay,
			    UNLDG_PT1                                   AS unLadPnt1,
			    UNLDG_PT2                                   AS unLadPnt2,
			    UNLDG_PT3                                   AS unLadPnt3,
			    '1'                                         AS msgSeqNo
			  FROM ITM_TRK_FLT where TRUCK_FLT_NO = #trkFltKey# and TRUCK_FLT_DATE = TO_DATE(#trkFltDate#,'DDMONYY'))
   	</select>
   	
   	<select id="getTruckFlightCarrier"	parameterClass="java.lang.String"	resultClass="java.lang.String">
   		select PKG_COMMON.get_truck_flt_carr(#fltKey#) from dual
   	</select>
   	
   	<select id="FFM_getConsigneeDtls" parameterClass="cargo.cms.edi.ei.bo.FFMTruckManfBO"	resultClass="cargo.cms.edi.ei.bo.FFMTruckManfBO">
   		SELECT 
			  SUBSTR(MA.awb_no, 1, 3)  ||'-' || SUBSTR(MA.awb_no, 4) AS awbNoDisp,
			  MA.awb_no              AS awbNo,
			  MS.ORIG                AS orig,
			  MS.DEST                AS dest,
			  MS.MANF_PCS            AS msnfPcs,
			  MS.MANF_WT             AS manfWt,
			  MS.TRK_MANF_PCS        AS trkManfPcs,
			  MS.TRK_MANF_WT         AS trkManfWt,
			  AWB.CONTENT            AS content,
			  AWB.PCS AS awbPcs,
			  AWB.WT  AS awbWt,
			  ma.bu_pcs AS buPcs,
  			  ma.bu_wt  AS buWt,
  			  CASE
    			WHEN AWB.PCS &gt; NVL(MS.TRK_MANF_PCS,0)
    				THEN 'P'
    			WHEN AWB.PCS &lt;= NVL(MS.TRK_MANF_PCS,0) 
    		  THEN 'T' END as shipDescCode  			 		  
			FROM ITM_TRK_MANF_HD MH
			LEFT JOIN ITM_TRK_MANF_AWB MA ON  MA.TR_NO = MH.TR_NO AND MA.TRUCK_FLT_NO = MH.TRUCK_FLT_NO AND MA.TRUCK_FLT_DATE = MH.TRUCK_FLT_DATE
			LEFT JOIN ITM_TRK_MANF_SHP MS	ON  MS.TR_NO = MH.TR_NO AND MS.TRUCK_FLT_NO = MH.TRUCK_FLT_NO AND MS.TRUCK_FLT_DATE = MH.TRUCK_FLT_DATE
			LEFT JOIN awb awb ON AWB.AWB_NO = MA.AWB_NO	AND AWB.AWB_DATE = MA.AWB_DATE
			WHERE MH.status not in ('VOID') and MH.TRUCK_FLT_NO = #trkFltKey#	AND MH.TRUCK_FLT_DATE =  TO_DATE(#trkFltDate#,'DDMONYY') AND MH.UNLDG_PT = #unldgPnt#
   	</select>
   	
   	
   	
   	<!-- Added By Srinivas for FFM Truck :::: ends -->
   	
	<!-- Added By Srinivas for Fum message::::Starts -->

	<select id="FFM_getSitaAddr"	parameterClass="java.util.HashMap"	resultClass="cargo.cms.common.ext.bo.EDIOutboundRecipentLogBO">	
		<![CDATA[
			SELECT SITA_ADDR as recipentSystem  FROM CUST_AIRL_SITA_TRUCK_DTL
			WHERE TR_NO IN(SELECT TR_NO FROM CUST_AIRL_SITA_TRUCK_MSG WHERE CARR_CODE= #carrCode# AND MSG_TYPE= #msgType# AND (FLT_KEY = #fltKey# or FLT_KEY = 'ZZZ99999'))
		 ]]>
	</select>	
	
	<select id="FWB_getSitaAddr"	parameterClass="java.util.HashMap"	resultClass="cargo.cms.common.ext.bo.EDIOutboundRecipentLogBO">	
		<![CDATA[
			Select Sita_Addr As Recipentsystem  From Cust_Airl_Sita_Cimp_Dtl
			Where Tr_No In (Select Tr_No From Cust_Airl_Sita_Cimp_Msg  
      		WHERE  CARR_CODE = #carrCode# AND MSG_TYPE = #msgType# AND (FLT_KEY = #fltKey# or FLT_KEY = 'ZZZ99999'))
		 ]]>
	</select>
	
	
	<select id="FUM_getSitaAdrress"	parameterClass="java.util.HashMap"	resultClass="cargo.cms.common.ext.bo.EDIOutboundRecipentLogBO">
		<![CDATA[
			SELECT SITA_ADDR as recipentSystem  FROM CUST_AIRL_SITA_CIMP_DTL
			WHERE TR_NO IN(SELECT TR_NO FROM CUST_AIRL_SITA_CIMP_MSG
			WHERE CUST_NO IN (SELECT CUST_NO FROM CUST_AIRL_AWB_PFX WHERE CARR_CODE=#carrCode#) AND MSG_TYPE=#msgType#)
		 ]]>
	</select>
		
	<select id="MVT_getSitaAdrress"	parameterClass="java.util.HashMap"	resultClass="cargo.cms.common.ext.bo.EDIOutboundRecipentLogBO">
		<![CDATA[
			SELECT SITA_ADDR as recipentSystem  FROM CUST_AIRL_SITA_CIMP_DTL
			WHERE TR_NO IN(SELECT TR_NO FROM CUST_AIRL_SITA_CIMP_MSG
			WHERE CUST_NO IN (SELECT CUST_NO FROM CUST_AIRL_AWB_PFX WHERE CARR_CODE=#carrCode#) AND MSG_TYPE=#msgType#)
		 ]]>
	</select>	
	
	
	<select id="MVT_getTrkSitaAdrress" parameterClass="java.util.HashMap"	resultClass="cargo.cms.common.ext.bo.EDIOutboundRecipentLogBO">		
		<![CDATA[
		SELECT DISTINCT D.SITA_ADDR as recipentSystem
		FROM CUST_AIRL_SITA_CIMP_MSG M
		JOIN CUST_AIRL_SITA_CIMP_DTL D ON M.TR_NO = D.TR_NO
		WHERE CARR_CODE = #CARR_CODE# AND MSG_TYPE = #FSU_MSG_TYPE#
		]]>
		<isNotEmpty property="FLT_KEY">
		AND (FLT_KEY = #FLT_KEY# or FLT_KEY = 'XH99999')
		</isNotEmpty>
	</select>
	
	<select id="FUM_ChkULDCarrier" parameterClass="java.lang.String" resultClass="java.lang.String">
	 	select count(*) from uld_inventory where uld_carr = owner_id and uld_key = #ULD_KEY#
	</select>
	
	<select id="chkFwbExists" parameterClass="java.util.HashMap" resultClass="java.lang.String">
	 	SELECT count(*)	FROM EDI_FWB WHERE AWB_NO = UPPER(#awbNo#) AND  AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
	</select>
	
	<select id="chkFhlExists" parameterClass="java.util.HashMap" resultClass="java.lang.String">
	 	SELECT count(*)	FROM EDI_FHL WHERE AWB_NO = UPPER(#awbNo#) AND  AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
	</select>
	
	
	<select id="FUM_ChkPortDest" parameterClass="java.lang.String" resultClass="java.lang.String">
	 	select count(*) from MAST_ARPT where code = #uldDest# and FUM_IND = 'Y'
	</select>
	
	<select id="chkUldBtContainer"  parameterClass="java.lang.String" resultClass="java.lang.String">	
		select count(*) from MAST_ULD_TYPE where code = substr(#ULDKEY#, 1, 3) and (H_CONT_IND = 'Y' or BT_IND = 'Y')
	</select>
	
	<select id="FUM_ChkTranshipmentInd" resultClass="java.lang.String">
	 	select rule_value from cmsrules where rule_code = 'TRANSHIPMENT_IND'
	</select>
	
	<select id="chkTranshipmentUldType" parameterClass="cargo.cms.common.ext.bo.FumBO" resultClass="java.lang.String">
		SELECT COUNT(1) FROM EXP_FLT_ULD WHERE ULD_KEY = #ULD_KEY# AND FLT_KEY = #FLT_KEY# AND FLT_DATE  = #FLT_DATE# and transit_type  in ('TT','IF','TA')
	</select>
	
	<select id="checkBBInd" parameterClass="cargo.cms.common.ext.bo.FumBO" resultClass="java.lang.String">
		SELECT COUNT(1) FROM EXP_FLT_ULD WHERE ULD_KEY = #ULD_KEY# AND FLT_KEY = #FLT_KEY# AND FLT_DATE  = #FLT_DATE# and BB_IND = 'Y'
	</select>
	
	
	<select id="FUM_UldDescription" parameterClass="java.lang.String" resultClass="cargo.cms.common.ext.bo.FumBO">
	 	select uld_type as uldType, uld_no as uldSerNo, owner_id as uldOwnerCode , contr_code as counterCode ,
	 	gross_weight as grossWt from uld_inventory where uld_key = #uldKey#
	</select>
	
	<select id="FUM_ULDList" parameterClass="cargo.cms.common.ext.bo.FumBO" resultClass="cargo.cms.common.ext.bo.FumBO">
		select distinct uld_key as uldKey, ppk_type ppkType, (select rcl_date from exp_rcl_hd where rcl_no = #RCL_NO#)  rclDate,
		(select awb_content from exp_rcl_hd where rcl_no = #RCL_NO#) as rclContent
		 from exp_uld_awb where rcl_no = #RCL_NO#
	</select>
	
	<select id="ListForULD" parameterClass="cargo.cms.common.ext.bo.FumBO" resultClass="cargo.cms.common.ext.bo.FumBO">
		 select distinct uld_key as uldKey, ppk_type ppkType, (select rcl_date from exp_rcl_hd where rcl_no = #RCL_NO#)  rclDate,
    	 decode ((select pcs from exp_rcl_dtl where rcl_no = #RCL_NO# and ULD_KEY = #ULD_KEY#),'1','Y','N') as manPcs,
		 (select awb_content from exp_rcl_hd where rcl_no = #RCL_NO#) as rclContent
		 from exp_uld_awb where rcl_no = #RCL_NO# and ULD_KEY = #ULD_KEY#
	</select>
	
	<select id="FUM_AWBListForCustomOut" parameterClass="cargo.cms.common.ext.bo.FumBO" resultClass="cargo.cms.common.ext.bo.FumBO">	
		select 
	    FLT_KEY as FLT_KEY,
	    to_char(FLT_DATE,'DDMONYY')as FLT_DATE,
	    ULD_BT_NO as uldKey,
	    UNLDG_PT unladgPnt,
	    AWB_NO awbNo,
	    to_char(AWB_DATE,'DDMONYY') as awbDate
	 	from  exp_pmanifest_uld_awb 
			where FLT_KEY = #FLT_KEY# and FLT_DATE = #FLT_DATE#  and uld_bt_no = #ULD_KEY# and UNLDG_PT = #unladgPnt#
	</select>
	
	
	<select id="FUM_AWBListForUldCong" parameterClass="cargo.cms.common.ext.bo.FumBO" resultClass="cargo.cms.common.ext.bo.FumBO">	
		select 
	    rcl_no as rclNo,
	    uld_key as uldKey,
	    AWB_NO awbNo,
	    to_char(AWB_DATE,'DDMONYY') as awbDate
	 	from  exp_rcl_brkdn
			where uld_key = #ULD_KEY# and RCL_NO = #RCL_NO#
	</select>
	
	
	<select id="FUM_AWBListForUldCongPPK" parameterClass="cargo.cms.common.ext.bo.FumBO" resultClass="cargo.cms.common.ext.bo.FumBO">	
		select 
	    rcl_no as rclNo,
	    uld_key as uldKey,
	    (select AWB_NO from exp_rcl_hd where rcl_no = #RCL_NO#) as  awbNo,
	    (select to_char(AWB_DATE,'DDMONYY') from exp_rcl_hd where rcl_no = #RCL_NO#)  as awbDate
	 	from  exp_rcl_dtl where uld_key = #ULD_KEY# and RCL_NO = #RCL_NO#
	</select>
	
	<select id="FUM_getUldListForCustOut" parameterClass="cargo.cms.common.ext.bo.FumBO" resultClass="cargo.cms.common.ext.bo.FumBO">	   
		select ULD_BT_NO as uldKey,UNLDG_PT AS dest,ppk_type as ppkType,
    	TOPUP_YN as topupInd, REBUILD_YN as rebuildInd
    	from exp_pmanifest_uld 
		where FLT_KEY = #FLT_KEY# and FLT_DATE = #FLT_DATE#  and FLT_TYPE = 'E' 
	</select>
	
	<select id="FUM_getTTUldListForCustOut" parameterClass="cargo.cms.common.ext.bo.FumBO" resultClass="cargo.cms.common.ext.bo.FumBO">	   
		select ULD_BT_NO as uldKey,UNLDG_PT AS dest,ppk_type as ppkType,
    	TOPUP_YN as topupInd, REBUILD_YN as rebuildInd,
    	(select decode(count(*), 0,'N','Y') from exp_pmanifest_uld_awb_hawb
       		where tr_no in (select tr_no from exp_pmanifest_uld_awb where flt_key = exp_pmanifest_uld.flt_key and flt_date = exp_pmanifest_uld.flt_date
        	and uld_bt_no = exp_pmanifest_uld.uld_bt_no and unldg_pt = exp_pmanifest_uld.unldg_pt)) as hawbCount
    	from exp_pmanifest_uld 
		where FLT_KEY = #FLT_KEY# and FLT_DATE = #FLT_DATE#  and FLT_TYPE = 'E' 
		UNION
		select ULD_BT_NO as uldKey,UNLDG_PT AS dest,'T' as ppkType,
    	'T' as topupInd, 'T' as rebuildInd,'Y' as hawbCount
    	from EXP_PMAN_TARMAC_ULD 
		where FLT_KEY = #FLT_KEY# and FLT_DATE = #FLT_DATE#
	</select>
	
	<!-- BugFix:: 10341 :: Begins -->
	<select id="FUN_isUldEmptyAndNotEIC" parameterClass="cargo.cms.common.ext.bo.FumBO" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM EXP_FLT_ULD WHERE EMPTY_FLG='Y' AND EIC_FLG='N' AND ULD_KEY = #ULD_KEY# AND FLT_KEY = #FLT_KEY# AND FLT_DATE  = #FLT_DATE#
	</select>
	<!-- BugFix:: 10341 :: Ends -->
	
	<select id="FUM_getTTUldDtlsForCustOut" parameterClass="cargo.cms.common.ext.bo.FumBO" resultClass="cargo.cms.common.ext.bo.FumBO">	   
	   select decode(exp_flt_uld.man_pcs,'1','Y','N') manPcs,
	    exp_flt_uld.ULD_KEY as uldKey,exp_flt_uld.UNLDG_PT AS dest,exp_pmanifest_uld.ppk_type as ppkType from exp_flt_uld,exp_pmanifest_uld  
		where exp_flt_uld.FLT_KEY = #FLT_KEY# and exp_flt_uld.FLT_DATE = #FLT_DATE#  and exp_flt_uld.FLT_TYPE = 'E' 
		and exp_flt_uld.uld_key = #ULD_KEY#
		and exp_flt_uld.flt_key = exp_pmanifest_uld.flt_key and exp_flt_uld.flt_date = exp_pmanifest_uld.flt_date
		and exp_flt_uld.uld_key = exp_pmanifest_uld.uld_bt_no
		UNION		
		select decode(exp_flt_uld.man_pcs,'1','Y','N') manPcs,
	    exp_flt_uld.ULD_KEY as uldKey,exp_flt_uld.UNLDG_PT AS dest,'T' as ppkType from exp_flt_uld,EXP_PMAN_TARMAC_ULD  
		where exp_flt_uld.FLT_KEY = #FLT_KEY# and exp_flt_uld.FLT_DATE = #FLT_DATE#  and exp_flt_uld.FLT_TYPE = 'E' 
		and exp_flt_uld.uld_key = #ULD_KEY#
		and exp_flt_uld.flt_key = EXP_PMAN_TARMAC_ULD.flt_key and exp_flt_uld.flt_date = EXP_PMAN_TARMAC_ULD.flt_date
		and exp_flt_uld.uld_key = EXP_PMAN_TARMAC_ULD.uld_bt_no
		
	</select>
	
	
	<select id="FUM_getUldDtlsForCustOut" parameterClass="cargo.cms.common.ext.bo.FumBO" resultClass="cargo.cms.common.ext.bo.FumBO">	   
	   select decode(exp_flt_uld.man_pcs,'1','Y','N') manPcs,
	    exp_flt_uld.ULD_KEY as uldKey,exp_flt_uld.UNLDG_PT AS dest,exp_pmanifest_uld.ppk_type as ppkType from exp_flt_uld,exp_pmanifest_uld  
		where exp_flt_uld.FLT_KEY = #FLT_KEY# and exp_flt_uld.FLT_DATE = #FLT_DATE#  and exp_flt_uld.FLT_TYPE = 'E' 
		and exp_flt_uld.uld_key = #ULD_KEY#
		and exp_flt_uld.flt_key = exp_pmanifest_uld.flt_key and exp_flt_uld.flt_date = exp_pmanifest_uld.flt_date
		and exp_flt_uld.uld_key = exp_pmanifest_uld.uld_bt_no
	</select>
	
	<select id="FUM_chkHouseMaintained" parameterClass="cargo.cms.common.ext.bo.FumBO" resultClass="java.util.HashMap">	 
			SELECT	
			CASE  WHEN ASSIGNED_PCS != NVL(H.PCS,0) THEN 1  ELSE 0 END PCCOUNT,
			CASE  WHEN ASSIGNED_WT != NVL(H.WT,0) THEN 1  ELSE 0 END WTCOUNT
			FROM exp_pmanifest_uld_awb UA
			LEFT JOIN (SELECT DISTINCT TR_NO,
			    SUM(PC) PCS,
			    SUM(WT) WT
			  FROM exp_pmanifest_uld_awb_hawb
			  GROUP BY TR_NO) H ON H.TR_NO       = UA.TR_NO
			WHERE UA.AWB_NO  = #awbNo#
			AND UA.AWB_DATE  = #awbDate#
			AND UA.FLT_KEY   = #FLT_KEY#
			AND UA.FLT_DATE  = #FLT_DATE#
			AND UA.ULD_BT_NO = #uldKey# 
			AND UA.UNLDG_PT  = #unladgPnt# 
	</select>
		    
	<select id="FUM_chkHouseMainForConsign" parameterClass="cargo.cms.common.ext.bo.FumBO" resultClass="java.util.HashMap">	 			
			SELECT CASE WHEN RB.PCS != NVL(H.PCS,0) THEN 1  ELSE 0  END PCCOUNT,
				   CASE  WHEN  RB.WEIGHT != NVL(H.WT,0) THEN 1 ELSE 0 END WTCOUNT
			FROM EXP_RCL_BRKDN RB
			LEFT JOIN (SELECT DISTINCT UM.RCL_NO,UM.AWB_NO,
			    SUM(UM.PC) PCS,
			    SUM(UM.WT) WT
			  FROM exp_rcl_uld_manf UM
			  GROUP BY UM.RCL_NO, UM.AWB_NO
			  ) H ON H.RCL_NO = RB.RCL_NO AND H.AWB_NO = RB.AWB_NO 
			WHERE RB.AWB_NO  = #awbNo#
			AND RB.AWB_DATE  = #awbDate#
			AND RB.ULD_KEY = #uldKey#
			AND RB.RCL_NO = #rclNo#
	</select>
	
	<select id="FUM_chkHouseMainForConsignPPK" parameterClass="cargo.cms.common.ext.bo.FumBO" resultClass="java.util.HashMap">	 
		SELECT  CASE   WHEN RD.PCS != NVL(H.PCS,0)  THEN 1    ELSE 0  END PCCOUNT,
	  	  		CASE   WHEN RD.NET_WT != NVL(H.WT,0)  THEN 1  ELSE 0  END WTCOUNT
		FROM EXP_RCL_HD RH
		LEFT JOIN EXP_RCL_DTL RD ON RD.RCL_NO   = RH.RCL_NO AND RD.ULD_KEY = #uldKey#
		LEFT JOIN (SELECT DISTINCT UM.RCL_NO, UM.AWB_NO, SUM(UM.PC) PCS, SUM(UM.WT) WT FROM exp_rcl_uld_manf UM GROUP BY UM.RCL_NO, UM.AWB_NO) H
		ON H.RCL_NO     = RH.RCL_NO
		AND H.AWB_NO    = RH.AWB_NO
		WHERE RH.AWB_NO = #awbNo#
		AND RH.AWB_DATE = #awbDate#
		AND RH.RCL_NO   = #rclNo#
	</select>
	
	<select id="FUM_UldDest" parameterClass="cargo.cms.common.ext.bo.FumBO" resultClass="java.lang.String">
		select awb_dest from exp_rcl_hd where rcl_no = #RCL_NO#
	</select>
	
	<select id="getCarrCodeForFUM"  parameterClass="cargo.cms.common.ext.bo.FumBO" resultClass="java.lang.String">			
		select carr_code from exp_rcl_hd where rcl_no = #RCL_NO#
	</select>
		
	<select id="FUM_versionNum"  parameterClass="cargo.cms.common.ext.bo.FumBO" resultClass="java.lang.String">			
		SELECT max(ver_no)  FROM cust_airl_sita_cimp_msg  WHERE carr_code = #CARR_CODE#  AND flt_key = nvl(#FLT_KEY#,'ZZZ99999')  
		AND msg_type = #MSG_TYPE#
	</select>
	<select id="FUM_Pman_AWBList" parameterClass="cargo.cms.common.ext.bo.FumBO" resultClass="cargo.cms.common.ext.bo.FumBO">
			select tr_no as trNo,ASSIGNED_PCS pcs,ASSIGNED_WT  wt, 
			awb_no awbNo, to_char(awb_date,'DDMONYY') awbDate, ppk_type ppkType from exp_pmanifest_uld_awb 
			where ULD_BT_NO = #ULD_KEY#	and FLT_KEY = #FLT_KEY# and FLT_DATE = #FLT_DATE# 
			UNION
			select '' as trNo,ASSIGNED_PCS pcs,ASSIGNED_WT  wt, 
			awb_no awbNo, to_char(awb_date,'DDMONYY') awbDate, '' ppkType from EXP_PMAN_TARMAC_ULD_AWB 
			where ULD_BT_NO = #ULD_KEY#	and FLT_KEY = #FLT_KEY# and FLT_DATE = #FLT_DATE# 			
	</select>	
	
	<select id="FUM_AWBList_PPK" parameterClass="cargo.cms.common.ext.bo.FumBO" resultClass="cargo.cms.common.ext.bo.FumBO">
		   select  (select AWB_NO from exp_rcl_hd where rcl_no = #RCL_NO# ) as  awbNo,
       	   (select to_char(AWB_DATE,'DDMONYY') from exp_rcl_hd where rcl_no = #RCL_NO#)  as awbDate,
      	   rcl_no rclNo,uld_key uldKey, pcs pcs, net_wt wt
		   from exp_rcl_dtl where rcl_no = #RCL_NO# and uld_key = #ULD_KEY#
	</select>	
	
	<select id="FUM_AWBList" parameterClass="cargo.cms.common.ext.bo.FumBO" resultClass="cargo.cms.common.ext.bo.FumBO">
		   select  awb_no awbNo, to_char(awb_date,'DDMONYY') awbDate, rcl_no rclNo,uld_key uldKey
		   from exp_rcl_brkdn where rcl_no = #RCL_NO# and uld_key = #ULD_KEY#
	</select>
	
	<select id="chkInterlineULDRCL" parameterClass="cargo.cms.common.ext.bo.FumBO" resultClass="java.lang.String">
		select count(*) from DUAL where  FUN_GET_PARENT_CARR(#CARR_CODE#) NOT IN ( select FUN_GET_PARENT_CARR(carr_code) from mast_awb_prefix 
  			where code in (select distinct SUBSTR(AWB_NO,1,3) from awb_inventory where uld_key = #ULD_KEY# ) )		  
	</select>
	
	<select id="chkInterlineULDFCO" parameterClass="cargo.cms.common.ext.bo.FumBO" resultClass="java.lang.String">
		select count(*) from DUAL where  FUN_GET_PARENT_CARR(#CARR_CODE#) NOT IN (
			select FUN_GET_PARENT_CARR(carr_code) from mast_awb_prefix 
			  where code in (
			      select distinct SUBSTR(AWB_NO,1,3) from exp_pmanifest_uld_awb where ULD_BT_NO = #ULD_KEY#	and FLT_KEY = #FLT_KEY# and FLT_DATE = #FLT_DATE# 
				   UNION
				  select distinct SUBSTR(AWB_NO,1,3) from EXP_PMAN_TARMAC_ULD_AWB where ULD_BT_NO = #ULD_KEY#	and FLT_KEY = #FLT_KEY# and FLT_DATE = #FLT_DATE# 	
			))	  
	</select>
	
	<select id="FUM_AWBDetails" parameterClass="cargo.cms.common.ext.bo.FumBO" resultClass="cargo.cms.common.ext.bo.FumBO">
		select SUBSTR(AWB_NO,1,3)||'-'||SUBSTR(AWB_NO,4) as awbNo,orig as origin, dest as dest, 'T' as shipType,
		(select pcs from exp_uld_awb where AWB_NO = #awbNo# and awb_date = TO_DATE(#awbDate#, 'DDMONYY') and rcl_no = #rclNo# and uld_key = #uldKey#) as pcs,
    	(select wt from exp_uld_awb where AWB_NO = #awbNo# and awb_date = TO_DATE(#awbDate#, 'DDMONYY') and rcl_no = #rclNo# and uld_key = #uldKey#) as wt,  
		content as goodsDesc, 
		TRIM(TRAILING '/' FROM DECODE(SPL_CODE1, NULL, '', SPL_CODE1 || DECODE(NVL(SPL_CODE2,'***'), NULL, '', '/'))
		       || DECODE(SPL_CODE2, NULL, '', SPL_CODE2 || DECODE(NVL(SPL_CODE3,'***'), NULL, '', '/'))
		       || DECODE(SPL_CODE3, NULL, '', SPL_CODE3 || DECODE(NVL(SPL_CODE4,'***'), NULL, '', '/'))
		       || DECODE(SPL_CODE4, NULL, '', SPL_CODE4 || DECODE(NVL(SPL_CODE5,'***'), NULL, '', '/'))
		       || DECODE(SPL_CODE5, NULL, '', SPL_CODE5 || DECODE(NVL(SPL_CODE6,'***'), NULL, '', '/'))
		       || DECODE(SPL_CODE6, NULL, '', SPL_CODE6 || DECODE(NVL(SPL_CODE7,'***'), NULL, '', '/'))
		       || DECODE(SPL_CODE7, NULL, '', SPL_CODE7 || DECODE(NVL(SPL_CODE8,'***'), NULL, '', '/'))
		       || decode(spl_code8, null, '', spl_code8 || decode(NVL(spl_code9,'***'), null, '', '/'))
               || DECODE(SPL_CODE9, NULL, '', SPL_CODE9)) AS splHandCode		
		from awb where AWB_NO = #awbNo# and awb_date = TO_DATE(#awbDate#, 'DDMONYY')
	</select>
	
	 <select id="FFR_AWBDetails" parameterClass="cargo.cms.common.ext.bo.FumBO" resultClass="cargo.cms.common.ext.bo.FumBO">
	    select 
	    NVL((SELECT RATE_GOODS_NATR FROM EXP_SID_RATE WHERE SID_NO IN (select SID_NO from exp_sid where awb_no = #awbNo# and awb_date =  TO_DATE(#awbDate#, 'DDMONYY')) AND ROWNUM = 1),
	    content) as goodsDesc, 
		decode(spl_code1, null, '', spl_code1 || decode(spl_code2, null, '', '/'))
		       || decode(spl_code2, null, '', spl_code2 || decode(spl_code3, null, '', '/'))
		       || decode(spl_code3, null, '', spl_code3 || decode(spl_code4, null, '', '/'))
		       || decode(spl_code4, null, '', spl_code4 || decode(spl_code5, null, '', '/'))
		       || decode(spl_code5, null, '', spl_code5 || decode(spl_code6, null, '', '/'))
		       || decode(spl_code6, null, '', spl_code6 || decode(spl_code7, null, '', '/'))
		       || decode(spl_code7, null, '', spl_code7 || decode(spl_code8, null, '', '/'))
		       || decode(spl_code8, null, '', spl_code8 || decode(spl_code9, null, '', '/'))
		       || decode(spl_code9, null, '', spl_code9) as splHandCode
		from awb where AWB_NO = #awbNo# and awb_date = TO_DATE(#awbDate#, 'DDMONYY')
   </select>
   
	<!--
	<select id="FUM_HawbDtls" parameterClass="cargo.cms.common.ext.bo.FumBO" resultClass="cargo.cms.common.ext.bo.FumBO">
		select hawb_no hawbNo,HAWB_ORG hawbOrg,HAWB_DEST hawbDest,HAWB_PCS hawbPcs,HAWB_WT_CODE hawbWtCode, hawb_net_wt hawbWt,
		manifest_desc hawbGdsDesc,HAWB_PCS onBoardPcs, hawb_net_wt onBoardWt,HBS_SLAC hawbSlac
		from edi_fhl_hawb 
		where tr_no = (select max(tr_no) from edi_fhl where awb_no = #awbNo# and awb_date = TO_DATE(#awbDate#, 'DDMONYY'))
	</select>
	-->
	
	<select id="FUM_HawbDtls" parameterClass="cargo.cms.common.ext.bo.FumBO" resultClass="cargo.cms.common.ext.bo.FumBO">	
		select um.hawb_no hawbNo,fh.HAWB_ORG hawbOrg,fh.HAWB_DEST hawbDest,fh.HAWB_WT_CODE hawbWtCode, fh.manifest_desc hawbGdsDesc,fh.HBS_SLAC hawbSlac,
		um.PC onBoardPcs, um.WT onBoardWt, um.PC hawbPcs,um.WT hawbWt
	    from exp_rcl_uld_manf um
	    left join (select hawb_no,HAWB_ORG,HAWB_DEST,HAWB_WT_CODE, manifest_desc,HBS_SLAC
	    from edi_fhl_hawb where tr_no = (select max(tr_no) from edi_fhl where awb_no = #awbNo# and awb_date = TO_DATE(#awbDate#, 'DDMONYY'))) fh on um.hawb_no = fh.hawb_no 
	    where um.rcl_no = #rclNo# and um.uld_key = #uldKey# and um.awb_no = #awbNo#
    </select>
    
    <select id="FUM_CustomOutHawbDtls" parameterClass="cargo.cms.common.ext.bo.FumBO" resultClass="cargo.cms.common.ext.bo.FumBO">
	    select um.hawb_no hawbNo,fh.HAWB_ORG hawbOrg,fh.HAWB_DEST hawbDest,fh.HAWB_WT_CODE hawbWtCode, fh.manifest_desc hawbGdsDesc,fh.HBS_SLAC hawbSlac,
	    um.PC onBoardPcs, um.WT onBoardWt, um.PC hawbPcs,um.WT hawbWt
	    from exp_pmanifest_uld_awb_hawb um
	    left join (select hawb_no,HAWB_ORG,HAWB_DEST,HAWB_WT_CODE, manifest_desc,HBS_SLAC
	    from edi_fhl_hawb where tr_no = (select max(tr_no) from edi_fhl where awb_no = #awbNo# and awb_date = TO_DATE(#awbDate#, 'DDMONYY'))) fh on um.hawb_no = fh.hawb_no 
	    where tr_no = #trNo#
    </select>
    
    
	<!-- Added By Srinivas for Fum message::::Ends -->

	<!-- Added By Srinivas for FFR message::::Starts -->
	
		<select id="FFR_ULDList" parameterClass="cargo.cms.common.ext.bo.FWBBO" resultClass="cargo.cms.common.ext.bo.FumBO">
		   select uld_key as uldKey, locn_pcs as locnPcs, locn_wt as locnWt  from awb_inventory 
		    where awb_no = #awbNo# and awb_date = TO_DATE(#awbDate#, 'DDMONYY') and uld_key is not null
		</select>
	<!-- Added By Srinivas for FFR message::::Ends -->
	
	<!-- Added By Srinivas for DLMQ message::::Starts -->
	
		<select id="getAwbListForDecBrkDwm" parameterClass="map" resultClass="cargo.cms.imprt.bo.DBDCFltBO">
		   select A.awb_no as awbNo, TO_CHAR(A.awb_date,'DDMONYY') awbDate, A.MANIFEST_PCS locPcs from  imp_car_shp A, AWB B
		   where B.AWB_NO=A.AWB_NO AND B.AWB_DATE=A.AWB_DATE AND B.AWB_TYPE !='T' AND A.flt_key = #FLT_KEY# and A.flt_date = TO_DATE(#FLT_DATE#, 'DDMONYY')
		</select>
		
		<select id="checkForShcVal" parameterClass="cargo.cms.imprt.bo.DBDCFltBO" resultClass="java.lang.String">									
			SELECT COUNT(1) FROM AWB WHERE AWB_NO = #awbNo# AND AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')  
			  AND 'VAL' IN (SPL_CODE1,SPL_CODE2,SPL_CODE3,SPL_CODE4,SPL_CODE5,SPL_CODE6,SPL_CODE7,SPL_CODE8,SPL_CODE9)
		</select>		
		
		<select id="getAwbListOfFllght" parameterClass="map" resultClass="cargo.cms.imprt.bo.DBDCFltBO">
         select 
         AWB.PCS AS pcsAWB,
         AWB.WT AS wtAWB,
         ISF.DLV_PCS AS dlvPcs,
         ISF.DLV_WT AS dlvWt,
         CA.SHPR_NAME ShprName,
         CS.CAR_CREATED carYN,
         CA.AWB_ORIGIN orig,
         CA.CONTENT AS content,
         CA.CSGNE_NAME csgneName,
         inv.invPcs as invPcs,
         inv.invWt as invWt,
         TO_CHAR(pkg_Calculate.GET_FREE_DAYS(CS.FLT_DATE, CS.FLT_KEY,CS.AWB_NO,CS.AWB_DATE), 'DDMONYY') as freeStrorageExpiry,
         cs.awb_no as awbNo, TO_CHAR(cs.awb_date,'DDMONYY') awbDate,ca.agent_cust_no as agentCustNo,ca.appntd_agent as appointedAgent,
			decode(cc.code,null,'Y','N') as directConsignee,
			ca.EMAIL1 as emailAddress1,ca.EMAIL2 as emailAddress2,ca.EMAIL3 as emailAddress3,ca.EMAIL4 as emailAddress4,ca.EMAIL5 as emailAddress5,
			ca.FAX1 as fax1,ca.FAX2 as fax2,ca.FAX3 as fax3,
			cs.flt_key as fltKey,
			to_char(cs.flt_date,'DDMONYY') as fltDate,
			TO_CHAR(nvl(f.ACT_DATE, f.sch_date),'DDMONYY') as ata,
      		cs.awb_no as awbNo,
      		to_char(cs.awb_date,'DDMONYY') as awbDate,
      		awb.awb_type awbType,
      		cs.manifest_pcs as mnfstPcs,
      		cs.manifest_wt as mnfstWt,
      		ca.awb_pcs as awbPcs,
      		ca.awb_wt as awbWt,
      		ca.CSGNE_ADDR1 addr1,
          	ca.CSGNE_ADDR2 addr2,
          	ca.CSGNE_ADDR3 addr3,
          	ca.CSGNE_ADDR4 addr4,
          	ca.CSGNE_ADDR5 addr5,
          	cs.carr_code as carrierCode,
          	ca.CSGNE_PLACE as place,
	        (select code_desc from mast_country mcntr1 where mcntr1.code = ca.CSGNE_CTRY_CODE) as country,
	        ca.CSGNE_PIN_CODE as pincode,
	        ca.mobile1 as mobile1,
          	ca.mobile2 as mobile2,
          	ca.mobile3 as mobile3
			from imp_car_shp cs
			join imp_car_awb ca on ca.awb_no = cs.awb_no and ca.awb_date = cs.awb_date
			join awb awb on ca.awb_no = awb.awb_no and ca.awb_date = awb.awb_date	
			JOIN FLT_OPR F ON F.FLT_KEY = CS.FLT_KEY AND F.SCH_DATE = CS.FLT_DATE AND F.FLT_TYPE='A' 		
			join (Select awb_no,awb_date,flt_key,flt_date,sum(locn_pcs) inv_pcs,SUM(locn_wt) locn_wt From 
			AWB_INVENTORY  GROUP BY awb_no, awb_date, flt_key, flt_date) AI	ON AI.AWB_NO = CS.AWB_NO AND AI.AWB_DATE = CS.AWB_DATE AND AI.FLT_KEY = CS.FLT_KEY AND AI.FLT_DATE = CS.FLT_DATE			
	        LEFT JOIN (SELECT  SRF.AWB_DATE, SRF.AWB_NO, SUM(SRF.DLV_PCS) DLV_PCS, SUM(SRF.DLV_WT) DLV_WT FROM IMP_SRF_FLT SRF 
            			GROUP BY SRF.AWB_DATE, SRF.AWB_NO) ISF on ISF.AWB_DATE = CS.AWB_DATE AND ISF.AWB_NO = CS.AWB_NO
     	    LEFT JOIN CUST_COMPANY CC ON CC.CODE = CA.AGENT_CUST_NO
     	    left join (select i.awb_no,i.awb_date, sum(locn_pcs) invpcs,sum(locn_wt) invwt 
		                  from awb_inventory i
		                  join flt_opr_events foe on i.flt_key = foe.flt_key and i.flt_date = foe.sch_date and foe.flt_type = 'A' and foe.whse_compl_date is not null
		                  group by i.awb_date, i.awb_no) inv on inv.awb_date = cs.awb_date and inv.awb_no = cs.awb_no
			where cs.flt_key = #FLT_KEY# and cs.flt_date = TO_DATE(#FLT_DATE#, 'DDMONYY')  and NVL(CS.NOA_IND,'N') ='N'
			AND  NOT EXISTS (SELECT ISF.AWB_NO FROM IMP_SRF_FLT ISF JOIN IMP_SRF SRF ON ISF.SRF_NO=SRF.SRF_NO AND SRF.STATUS !='VOID'
      								where ISF.FLT_KEY = CS.FLT_KEY and ISF.FLT_DATE=CS.FLT_DATE and ISF.AWB_NO=cs.awb_no)
      		<!-- Added by YUGA for CR Send NOA which has no SRF and not Sent NOA Earlier  -->
		</select>
		
		<select id="getOutStandingChanrges_DBCD" parameterClass="cargo.cms.imprt.bo.DBDCFltBO" resultClass="java.lang.String">
			select nvl(GT.AIRL_OS,0) AS airlOSch from GT_OS_CHARGES GT  where  GT.AWB_NO = #awbNo# AND GT.AWB_DATE = #awbDate#
		</select>
		
		
		<parameterMap id="OSCHGAMTMAP" class="map" >
			<parameter property="AWBNO" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
			<parameter property="AWBDATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>			
			<parameter property="AAT_OS" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
			<parameter property="AIRL_OS" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
		</parameterMap>	
		<procedure id="prc_os_chrgs_amount" parameterMap="OSCHGAMTMAP" >
			{call PRC_GET_OS_CHRG_AMT(?,?,?,?)}
		</procedure>
	
		
		
		<select id="getAgentInfo" parameterClass="map" resultClass="cargo.cms.imprt.bo.DBDCFltBO">
			select  email1 as emailAddress1,email2 as emailAddress2,email3 as emailAddress3,email4 as emailAddress4,email5 as emailAddress5,
			FAX1 as fax1,FAX2 as fax2,FAX3 as fax3
			from CUST_CONTACT where  CONTACT_TYPE = 'ECA' 
			AND (email1 IS NOT NULL OR email2 IS NOT NULL OR email3 IS NOT NULL OR email4 IS NOT NULL OR email5 IS NOT NULL 
      				OR FAX1 IS NOT NULL OR FAX2 IS NOT NULL OR FAX3 IS NOT NULL)
			<isNotEmpty property="CUST_NO">
      			AND CUST_NO = #CUST_NO# 
      	 	</isNotEmpty> 
      	 	<isEmpty property="CUST_NO">
      	 	  <isNotEmpty property="AGENT_NAME">
      			AND CUST_NO = (select CODE from CUST_COMPANY where CODE_DESC = #AGENT_NAME#)
      		  </isNotEmpty> 
      	 	</isEmpty>			 
		</select>
		
		
		<select id="getAgentInfoForCustomOut" parameterClass="map" resultClass="java.util.HashMap">
			select  email1 as EMAIL1,email2 as EMAIL2,email3 as EMAIL3,email4 as EMAIL4,email5 as EMAIL5,
			FAX1 as FAX1,FAX2 as FAX2,FAX3 as FAX3
			from CUST_CONTACT where  CONTACT_TYPE = 'DCA' 
			AND (email1 IS NOT NULL OR email2 IS NOT NULL OR email3 IS NOT NULL OR email4 IS NOT NULL OR email5 IS NOT NULL 
      				OR FAX1 IS NOT NULL OR FAX2 IS NOT NULL OR FAX3 IS NOT NULL)
			<isNotEmpty property="CUST_NO">
      			AND CUST_NO = #CUST_NO# 
      	 	</isNotEmpty> 
      	 	<isEmpty property="CUST_NO">
      	 	  <isNotEmpty property="AGENT_NAME">
      			AND CUST_NO = (select CODE from CUST_COMPANY where CODE_DESC = #AGENT_NAME#)
      		  </isNotEmpty> 
      	 	</isEmpty>			 
		</select>
		
		<select id="getAgentInfoFromCar" parameterClass="map" resultClass="java.util.HashMap">
			select agent_name as AGTNAME, agent_code AGTCODE from exp_car where awb_no = #AWB_NO# and awb_date = TO_DATE(#AWB_DATE#, 'DDMONYY') 
		</select>
		
		

	<!-- Added By Srinivas for DLMQ message::::Ends -->
	<select id="getDLMQMsgTimeStamp" parameterClass="map" resultClass="java.util.HashMap">
		   SELECT carr_code as CARR_CODE, to_char(sch_date,'yyyymmdd') as LOCAL_DATE,TO_CHAR(sch_date,'MM') as MONTH,
		   TO_CHAR(sch_date,'DD') as DAY,to_char(SYSDATE-((select TIM_GMT_DIF from sys_param where co_code = 'AAT')/24),'yyyymmddhh24miss') MSG_TIME,
		   DLMQ_MSG_SEQ.nextval MSG_SEQ,FLT_NO AS FLT_NO
		   from  FLT_OPR  where flt_key = #FLT_KEY# and sch_date = TO_DATE(#FLT_DATE#, 'DDMONYY') and flt_type = 'D'
	</select>
	
	<select id="getGreatestThrSHC" parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT STRAGG(STRINGDELIM(CODE,'/'))  FROM (SELECT  MAST_SPL_HAND_CODE.CODE FROM AWB,AWB_INVENTORY,MAST_SPL_HAND_CODE WHERE 
		AWB.AWB_NO = AWB_INVENTORY.AWB_NO AND AWB.AWB_DATE = AWB_INVENTORY.AWB_DATE
		AND (MAST_SPL_HAND_CODE.CODE = AWB.SPL_CODE1 OR MAST_SPL_HAND_CODE.CODE = AWB.SPL_CODE2 OR MAST_SPL_HAND_CODE.CODE = AWB.SPL_CODE3 OR 
		MAST_SPL_HAND_CODE.CODE = AWB.SPL_CODE4 OR MAST_SPL_HAND_CODE.CODE = AWB.SPL_CODE5 OR MAST_SPL_HAND_CODE.CODE = AWB.SPL_CODE6 OR 
		MAST_SPL_HAND_CODE.CODE = AWB.SPL_CODE7 OR MAST_SPL_HAND_CODE.CODE = AWB.SPL_CODE8 OR MAST_SPL_HAND_CODE.CODE = AWB.SPL_CODE9)
		AND AWB_INVENTORY.ULD_KEY = #uldKey#  AND ROWNUM &lt; 14 ORDER BY PRIORITY)
	</select>
		
	<select id="chkUldEICInd" parameterClass="java.lang.String" resultClass="java.lang.String">
		select EIC_FLG as eicInd from uld_inventory where ULD_KEY = #uldNo#
	</select>
				 
	<select id="getAwbDtlsForFltClose" parameterClass="cargo.cms.imprt.bo.FlightBO" resultClass="cargo.cms.imprt.bo.FlightBO">
		select awb_no as awbNo, TO_CHAR(awb_date, 'DDMONYY') as awbDate,flt_key as flightKey, TO_CHAR(flt_date, 'DDMONYY')as flightDate , 
		(select decode(count(1),0,'N','Y')  from awb_shp_sts where awb_no = shp.awb_no and awb_date = shp.awb_date and cod_fsu_sts = 'RCF' and flt_no = #flightKey# and flt_date = TO_DATE(#flightDate#, 'DDMONYY')) as rcfNotSent,
		(select decode(count(1),0,'N','Y')  from awb_shp_sts where awb_no = shp.awb_no and awb_date = shp.awb_date and cod_fsu_sts = 'FIW' and flt_no = #flightKey# and flt_date = TO_DATE(#flightDate#, 'DDMONYY')) as fiwNotSent    
		from imp_car_shp shp where flt_key = #flightKey# and flt_date = TO_DATE(#flightDate#, 'DDMONYY') and FLT_TYPE = 'I'
	</select>
	
	<select id="chkTransitMail" parameterClass="cargo.cms.imprt.bo.FlightBO" resultClass="java.util.HashMap">
		select a.doc_disc as DOC_DISC, a.cir_pcs as CIR_PCS,a.cir_wt as CIR_WT, b.catalog as CATALOG, b.PCS as PCS from imp_car_shp a
	    inner join awb b on a.awb_no = b.awb_no and a.awb_date = b.awb_date 
	    where a.awb_no = #awbNo# and a.awb_date = TO_DATE(#awbDate#, 'DDMONYY') and a.flt_key = #flightKey# and 
	    a.flt_date = TO_DATE(#flightDate#, 'DDMONYY') and FLT_TYPE = 'I'
	</select>
		
	<insert id="insertDLMQMessageHd" parameterClass="map">
		INSERT INTO dlmq_hd(SEQ_NO ,SOURCE,RECIPIENT ,MSG_TIME ,MSG_TYPE ,CARR_CODE ,FLT_NUM ,FLT_DATE,
      	FLT_STATUS ,FLT_DEPT,CR_USER_ID,CR_DATE,WEIGHT_UNIT ,FLT_REMARKS,TOT_MANF_WT,TOT_GROSS_WT)
      	VALUES(to_number(#SEQUENCE#),#SOURCE#,#RECIPIENT#,TO_DATE(#MSG_TIME#,'yyyymmddhh24miss'),#MSG_TYPE#,#CARR_CODE#,#FLT_NUM#,
      	TO_DATE(#FLT_DATE#,'yyyymmdd'),#FLT_STATUS#,#DEPARTURE#,#CR_USER_ID#,SYSDATE,#UNIT_WEIGHT#,'',#TOT_MANF_WT#,#TOT_GROSS_WT#)
	</insert>
	
	<insert id="insertDLMQMessageDtls" parameterClass="cargo.cms.export.bo.DLSSummaryBO">
		INSERT INTO DLMQ_DTL(SEQ_NO ,DEST,GROSS_WT ,VOLUME_PERCENTAGE ,LOAD_STATUS ,FRIGHT_TYPE ,ULD_KEY ,BULK_IND ,
      	CONTR_CODE ,PCS,PRIORITY,SPL_CODE1,SPL_CODE2 ,SPL_CODE3,ICE_WT,REMARKS,STACK_PALLET,
      	SPL_CODE4,SPL_CODE5,SPL_CODE6,SPL_CODE7,SPL_CODE8,SPL_CODE9, SPL_CODE10,SPL_CODE11,SPL_CODE12,SPL_CODE13,SPL_CODE14,SPL_CODE15,
      	ULD_TYPE,UNLDG_PT,TOW_IND,ACTUAL_WT,TI_WT,EST_WT)
      	VALUES(to_number(#msgSeqNo#),#unldgPnt#,nvl(to_number(#grossWt#),'0'),'',#loadStatus#,'B',#uldNo#,#bbInd#,
      	#counterCode#,to_number(NVL(#pcs#,0)),#priority#,#shc1#,#shc2#,#shc3#,#dryIceWt#,#dlsRemarks#,#topPallet#,
      	#shc4#,#shc5#,#shc6#,#shc7#,#shc8#,#shc9#,#shc10#,#shc11#,#shc12#,#shc13#,#shc14#,#shc15#,
      	#uldType#,#unldgPnt#,#directTow#,#actualWt#,#tiWeight#,#estWt#)
     </insert>
	
	<insert id="insertDlmrErrMsgs" parameterClass="cargo.cms.edi.ei.bo.DLMRBO">
		INSERT INTO DLMQ_ERR_CODE(SEQ_NO ,MSG_TIME,ERR_CODE ,ERR_DESC ,CARR_CODE ,FLT_NUM ,FLT_DATE ,FLT_DEPT,
      	SOURCE ,RECIPIENT,MSG_TYPE)
      	VALUES(#seqNo#,TO_DATE(#msgTime#,'yyyymmddhh24miss'),#errCode#,#errDes#,#carrCode#,#fltKey#,TO_DATE(#fltDate#,'yyyymmdd'),#fltDept#,
      	#source#,#recipient#,#msgType#)
	</insert>
	
	
	<!--
	#######################################################################
					EDI INTERFACE QUERIES STARTS
	#######################################################################-->
	<select id="fetchUpdateImpCarShp" parameterClass="cargo.cms.edi.ei.bo.FFMMsgBO" resultClass="cargo.cms.edi.ei.bo.FFMShippmentBO">		
		SELECT DISTINCT AWB_NO as awbNo FROM EDI_FFM_SHP WHERE TR_NO = #trNo# AND (SPL_CODE1 IN ('EAW','MAL','EAP') OR SPL_CODE2 IN ('EAW','MAL','EAP') OR SPL_CODE3 IN ('EAW','MAL','EAP') OR 
     	SPL_CODE4 IN ('EAW','MAL','EAP') OR SPL_CODE5 IN ('EAW','MAL','EAP') OR SPL_CODE6 IN ('EAW','MAL','EAP') OR SPL_CODE7 IN ('EAW','MAL','EAP') 
     	OR SPL_CODE8 IN ('EAW','MAL','EAP') OR SPL_CODE9 IN ('EAW','MAL','EAP'))
     </select>
	<update id="sqlqueryUpdateImpCarShp" parameterClass="java.util.HashMap">
		UPDATE IMP_CAR_SHP SET CAR_CREATED = 'Y' WHERE FLT_KEY = #flightKey# AND FLT_DATE = TO_DATE(#flightDate#,'MM/DD/YYYY') AND AWB_NO = #awbNo#
     </update>
	<update id="updateFHLFreezeDetailMessage" parameterClass="cargo.cms.edi.ei.bo.StartPreparationBO">
		UPDATE START_PREP_DTL
		SET FHL_FRZ_DATE = SYSDATE, FHL_FRZ_USER_ID = #freezeUserId#,
		LM_DATE = SYSDATE, LM_USER_ID = #freezeUserId#,AUTO_FRZ_YN=#autoFrzMan#
		WHERE AWB_NO = #awbNo# AND AWB_DATE = #awbDate# AND	
		MSG_TYPE = 'FHL' AND FHL_FRZ_DATE IS NULL
	</update>
	<update id="autoFreezeFHL_FLT" parameterClass="map">
		UPDATE START_PREP
		SET FHL_FRZ_DATE = SYSDATE, FHL_FRZ_USER_ID = #freezeUserId#, fhl_frz_ind = 'Y',
		LM_DATE = SYSDATE, LM_USER_ID = #freezeUserId#, TR_TYPE='FHLFR'
		WHERE FLT_KEY = #flightKey# AND FLT_DATE = #flightDate# AND	
		MSG_TYPE = 'FHL'
	</update>
	<insert id="autoFreezeFHL_FLT_Insert" parameterClass="map">
		INSERT INTO START_PREP(
		FLT_KEY,FLT_DATE,FHL_FRZ_DATE,FHL_FRZ_USER_ID,
		CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE, MSG_TYPE, FHL_FRZ_IND,TR_TYPE)
		VALUES(#flightKey#,TO_DATE(#flightDate#,'DDMONYY'),SYSDATE,#freezeUserId#,
		#freezeUserId#,SYSDATE,#freezeUserId#,SYSDATE, 'FHL','Y','FHLFR')
	</insert>
	<select id="validateSHCForTM" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		select count(*) from imp_car_shp a,imp_car_awb b where a.flt_key=#fltKey# and a.FLT_DATE=TO_DATE(#fltDate#,'MM/DD/YYYY') 
		AND b.CATALOG='TM' AND b.AWB_DEST=#awbDestination# AND A.awb_no = b.awb_no AND A.awb_no != #awbNo#
	</select>
	<select id="checkFFMMsgVerNoLesser" parameterClass="cargo.cms.edi.ei.bo.FFMMsgBO" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM EDI_FFM_MSG WHERE FLT_KEY = #flightKey# AND FLT_DATE = TO_DATE(#flightDate#,'MM/DD/YYYY') AND MSG_VER &gt; #msgVersionNumber#
	</select>
	<select id="checkFWBMsgVerNoLesser" parameterClass="cargo.cms.edi.ei.bo.FWBDetailBO" resultClass="java.lang.Integer">
		SELECT COUNT(1)  FROM EDI_FWB WHERE AWB_NO = #awbNo# AND ORG = #origin# AND DES = #destination# AND MSG_VER &gt; #msgVerNo#
	</select>
	<select id="checkFHLMsgVerNoLesser" parameterClass="cargo.cms.edi.ei.bo.FHLBO" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM EDI_FHL WHERE AWB_NO = #awbNo# AND AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') AND MSG_VER &gt; #msgVer#
	</select>
	<!--EDI INBOUND........Common queries Start-->
	<select id="selectqueryforcarriercode"
		parameterClass="cargo.cms.edi.ei.bo.EDIMsgBO"
		resultClass="java.lang.Integer">

		SELECT COUNT(*) FROM MAST_CARRIER WHERE CODE = #carrierCode#

	</select>

	<select id="checkFlightValid" parameterClass="cargo.cms.edi.ei.bo.FFMMsgBO" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM FLT_OPR WHERE FLT_KEY=#flightKey# AND SCH_DATE=TO_DATE(#flightDate#,'MM/DD/YYYY') AND FLT_TYPE='A'
	</select>
	<select id="checkMsgVerExists" parameterClass="cargo.cms.edi.ei.bo.FFMMsgBO" resultClass="java.lang.Integer">	
		SELECT COUNT(1) FROM EDI_FFM_MSG WHERE FLT_KEY = #flightKey# AND FLT_DATE = TO_DATE(#flightDate#,'MM/DD/YYYY') 
		AND MSG_VER = #msgVersionNumber# AND SI_TYPE = 'I' AND FFM_STATUS = 'P'
	</select>
	<!--EDI INBOUND..........Common queries End-->

	<!--EDI INBOUND.........FFM queries Start-->
	<!-- Modified for OSI CR Starts -->
	<update id="updateLastIndicator" parameterClass="java.util.HashMap">
		UPDATE 	EDI_FFM_MSG SET LAST_IND = #lastIndicator#,
				TOTAL_PCS=nvl(#totalPcs#,TOTAL_PCS),TOTAL_WT=nvl(#totalWt#,TOTAL_WT),TOTAL_UAWB=nvl(#totalUAWB#,TOTAL_UAWB)
		WHERE TR_NO = #trNo#
	</update>
	<!-- Modified for OSI CR Ends -->
	<update id="updateEdiFFMMsg" parameterClass="java.util.HashMap">
		UPDATE EDI_FFM_MSG SET ALT_FLIGHT_CAR = #altFlightCarrierCode#, ALT_FLIGHT_NO = #altFlightNo#, ALT_FLIGHT_DATE =TO_Date(
		#altFlightDate#, 'MM/DD/YYYY'), SI_TYPE = #siType#, TR_TYPE='DUMMY' WHERE TR_NO = #TR_NO#
	</update>
	<!-- Added for OSI CR Starts -->
	<select id="getTotPcsWtUAWB" parameterClass="cargo.cms.edi.ei.bo.FFMMsgBO" resultClass="cargo.cms.edi.ei.bo.FFMMsgBO">
		SELECT 	sum(a.man_pcs) as ctotalPcs , sum(a.man_wt) as ctotalWt,count(DISTINCT a.awb_no) as ctotalUAWB,
        		b.TOTAL_PCS as totalPcs, b.TOTAL_WT as totalWt, b.TOTAL_UAWB as totalUAWB
		FROM 	edi_ffm_shp a, edi_ffm_msg b
		WHERE 	a.FLT_KEY = #flightKey# AND a.FLT_DATE = TO_DATE(#flightDate#,'MM/DD/YYYY') AND a.TR_NO=#trNo#
				and a.tr_no=b.tr_no
		GROUP BY b.TOTAL_PCS,b.TOTAL_WT ,b.TOTAL_UAWB 
	</select>
	<!-- Added for OSI CR Ends -->
	<!-- Modified for OSI CR Starts -->
	<insert id="insertqueryffmmsg"
		parameterClass="cargo.cms.edi.ei.bo.FFMMsgBO">

		INSERT INTO EDI_FFM_MSG ( TR_NO, CARR_CODE, FLT_NO, FLT_DATE,
		FLT_KEY, BRD_POINT, MSG_SEQ_NUM , COPY_NO, MSG_VER, SEND_DATE,
		ACFT_REG_NO, FFM_STATUS, ALT_FLIGHT_CAR, ALT_FLIGHT_NO,
		ALT_FLIGHT_DATE, SI_TYPE,ACCESS_LEVEL, TOTAL_COUNT, TR_TYPE ,TOTAL_PCS,TOTAL_WT,TOTAL_UAWB, MSG_HDR) VALUES
		(#trNo#, #carrierCode#, #flightNo#, TO_Date(
		#flightDate#, 'MM/DD/YYYY'), #flightKey#, #loadingPoint#,
		#msgSeqNo#, #copyNo#, #msgVersionNumber#, SUBSTR(SYSDATE,1,9), #arcftRegNo#,
		#status# , NULL, NULL, NULL, 'I', NULL, 1, 'MEFFM',nvl(#totalPcs#,0),nvl(#totalWt#,0),nvl(#totalUAWB#,0),#messageAddressHeader#)
	</insert>
	<!-- Modified for OSI CR Ends -->

	<insert id="insertqueryffmuld"
		parameterClass="cargo.cms.edi.ei.bo.FFMUldBO">

		INSERT INTO EDI_FFM_ULD ( TR_NO, DOC_LINE_NO, ULD_TYPE, ULD_NO,
		ULD_CARR, ULD_KEY, BRD_POINT,OFF_POINT,CNTG_FLT_CARR1,
		CNTG_FLT_NO1, CNTG_FLT_DATE1, CNTG_DEST1, CNTG_FLT_CARR2,
		CNTG_FLT_NO2, CNTG_FLT_DATE2, CNTG_DEST2, CNTG_FLT_CARR3,
		CNTG_FLT_NO3, CNTG_FLT_DATE3, CNTG_DEST3, ULD_LOD_IND,
		ULD_VOL_AVA, DIS_ODR,ULD_RMK ,NIL_IND, VOL_AVAIL_CODE )

		VALUES (#trNo#,#docLineNo#, #uldType#, #uldNo#,
		#uldCarrierCode# , #uldKey# , #loadingPoint#, #unLoadingPoint#,
		#uldCntgFlightCarrierCode1#, #uldCntgFlightNo1#, TO_Date(
		#uldCntgFlightDate1#, 'MM/DD/YYYY') ,
		#uldCntgNextDestAirportCode1#, #uldCntgFlightCarrierCode2#,
		#uldCntgFlightNo2#, TO_Date( #uldCntgFlightDate2#, 'MM/DD/YYYY')
		, #uldCntgNextDestAirportCode2#, #uldCntgFlightCarrierCode3#,
		#uldCntgFlightNo3#, TO_Date( #uldCntgFlightDate3#, 'MM/DD/YYYY')
		, #uldCntgNextDestAirportCode3#, #uldLoadingIndicator#,
		#uldVolumeAvailability#, #uldDisorder#,#uldRemarks#
		,#nilCargoIndicator#, #uldVolumeCode#)

	</insert>

	<insert id="insertqueryffmshp"
		parameterClass="cargo.cms.edi.ei.bo.FFMShippmentBO">
		INSERT INTO EDI_FFM_SHP ( TR_NO, DOC_LINE_NO, UDOC_LINE_NO,
		BRD_POINT,OFF_POINT,AWB_NO, AWB_DATE, ORG , DEST, CONTENT, WT,
		WT_UNIT, VOL_UNIT, VOL_AMT, CNSL_IND, ACCS_IND, LBS_IND,
		EMPTY_IND, EIC_IND, SURPLUS_IND, CFM_IND, 
		LOC_CODE, RMK, COD_APT_FDS, CNG_TYPE, MAN_PCS, MAN_WT, MAN_VOL,
		PCS, DES_SHP_NOG, PART_SHMPT_YN, SPL_CODE1, SPL_CODE2,
		SPL_CODE3, SPL_CODE4, SPL_CODE5, SPL_CODE6, SPL_CODE7,
		SPL_CODE8,spl_code9, COD_DEN, DES_SHP_OSI_1, DES_SHP_OSI_2,
		COD_COM_TRN_STS, CNTG_FLT_CARR1, CNTG_FLT_NO1, CNTG_FLT_DATE1,
		CNTG_DEST1, CNTG_FLT_CARR2, CNTG_FLT_NO2, CNTG_FLT_DATE2,
		CNTG_DEST2, CNTG_FLT_CARR3, CNTG_FLT_NO3, CNTG_FLT_DATE3,
		CNTG_DEST3, COD_ONW_PRI, COD_DIS_ODR, DES_CUS_REF, SHP_WGT_LBS
		,MOV_PRI_CODE ,SHMPT_CODE, TR_TYPE, CUST_ORG_CODE, ISO_CTRY_CODE1, INFO_IDENTIFIER1, CUSTOMS_INFO_IDENTIFIERI, SUPP_CUSTOMS_INFO1, ISO_CTRY_CODE2, 
			INFO_IDENTIFIER2, CUSTOMS_INFO_IDENTIFIER2, SUPP_CUSTOMS_INFO2)

		VALUES ( #trNo#, #docLineNo# , #udocLineNo#,
		#loadingPoint#, #unLoadingPoint#, #awbNo#, SUBSTR(SYSDATE,1,9), #origin#,
		#dest#, #natureOfGoods#, #weight#, #weightCode#, #volumeCode#,
		#volumeAmount#, #cnslIndicator#, NULL, NULL, NULL, NULL, NULL, NULL,
		#locCode#, NULL, 'COD', 'T', #manPieces#, #manWeight#,
		#manVolume#, #totalPieces#, NULL, #partShippment#,
		#specialCode1#, #specialCode2#, #specialCode3#, #specialCode4#, #specialCode5#, #specialCode6#, #specialCode7#,
		#specialCode8#, #specialCode9#, NULL , #osiText1#, #osiText2#, NULL,
		#cntgFlightCarrierCode1#, #cntgFlightNo1#, TO_Date(
		#cntgFlightDate1#, 'MM/DD/YYYY'), #cntgNextDestAirportCode1#,
		#cntgFlightCarrierCode2#, #cntgFlightNo2#, TO_Date(
		#cntgFlightDate2#, 'MM/DD/YYYY'), #cntgNextDestAirportCode2#,
		#cntgFlightCarrierCode3#, #cntgFlightNo3#, TO_Date(
		#cntgFlightDate3#, 'MM/DD/YYYY'), #cntgNextDestAirportCode3#,
		#mvtPriorityCode#, NULL, NULL, NULL, #mvtPriorityCode#
		,#shipmentDescCode#, 'MEFFM', #customsOriginCode#, #isoCountryCode1#, #informationIdentifier1#, #customsInformationIdentifier1#, 
			#suppCustomsInformation1#, #isoCountryCode2#, #informationIdentifier2#, #customsInformationIdentifier2#, #suppCustomsInformation2#)

	</insert>

	<insert id="insertqueryffmdim"
		parameterClass="cargo.cms.edi.ei.bo.EDIDimBO">

		INSERT INTO EDI_FFM_SHP_DMN ( TR_NO, DOC_LINE_NO, SDOC_LINE_NO,
		LENGTH, WIDTH, HEIGHT, PCS, WT, WT_UNIT, DMN_UNT, DMN_WGT_LBS,CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE)

		VALUES (#trNo#, EDI_FFM_SHP_DMN_SEQ.nextval, #sdocLineNo#,
		#dim_Length#, #dim_Width#, #dim_Height#, #dim_NoOfPieces#,
		#dim_Weight#, #dim_WeightCode#, #dim_MsrUnitCode#,NULL, 'SYSUSER', SYSDATE, 'SYSUSER', SYSDATE)
	</insert>

	<select id="selectqueryuldcartype"
		resultClass="cargo.cms.edi.ei.bo.UldCarType">

		SELECT CARR_CODE, ULD_TYPE FROM ULD_CARTYPE

	</select>
	<select id ="selectqueryffmmsgForMaxTrNo" 
		resultClass="java.lang.String">
		select 	EDI_FFM_MSG_SEQ.nextval as trNo FROM DUAL
	</select>

	<select id="selectqueryffmuldForMaxDoclineNo"
		resultClass="java.lang.Integer">

		SELECT EDI_FFM_ULD_SEQ.nextval AS docLineNo FROM DUAL

	</select>

	<select id="selectqueryffmshpForMaxDoclineNo"
		resultClass="java.lang.Integer">

		SELECT EDI_FFM_SHP_SEQ.nextval AS docLineNo FROM DUAL

	</select>

	<select id="selectqueryffmmsgByFltdata"
		parameterClass="cargo.cms.edi.ei.bo.FFMMsgBO"
		resultClass="cargo.cms.edi.ei.bo.FFMMsgBO">

		SELECT TR_NO AS trNo, FFM_STATUS AS status , SUCCESS_MSGS AS
		successMsgsSeqNo , MSG_SEQ_NUM AS msgSeqNo ,TOTAL_COUNT AS
		totalSplitMsgs, COPY_NO AS copyNo , FLT_NO AS flightNo ,FLT_KEY as flightKey ,
		TO_CHAR(FLT_DATE ,'MM/DD/YYYY')AS flightDate , BRD_POINT AS
		loadingPoint, LAST_IND AS lastIndicator FROM EDI_FFM_MSG WHERE FLT_KEY = #flightKey# AND
		FLT_DATE = TO_DATE(#flightDate#,'MM/DD/YYYY') AND BRD_POINT =
		#loadingPoint# AND FFM_STATUS ='CONT' AND SI_TYPE ='I' 
		<isNotNull prepend = "AND" property="trNo" >	
		 TR_NO = #trNo#
		 </isNotNull>
		
	</select>

	<!-- Removed message version no :: 29JAN13 -->
	<select id="selectqueryffmmsgmaxcopynoByFltdata"
		parameterClass="cargo.cms.edi.ei.bo.FFMMsgBO"
		resultClass="cargo.cms.edi.ei.bo.FFMMsgBO">
		
		SELECT TR_NO AS trNo, FFM_STATUS AS status , SUCCESS_MSGS AS
		successMsgsSeqNo , MSG_SEQ_NUM AS msgSeqNo ,TOTAL_COUNT AS
		totalSplitMsgs, COPY_NO AS copyNo , FLT_NO AS flightNo ,FLT_KEY as flightKey ,
		TO_CHAR(FLT_DATE ,'MM/DD/YYYY')AS flightDate , BRD_POINT AS
		loadingPoint , MSG_VER AS msgVersionNumber, MSG_HDR AS messageAddressHeader FROM EDI_FFM_MSG WHERE FLT_KEY = #flightKey# AND
		FLT_DATE = TO_DATE(#flightDate#,'MM/DD/YYYY') AND BRD_POINT =
		#loadingPoint#  AND SI_TYPE ='I' 
		<!-- AND MSG_VER = #msgVersionNumber# --> 
		AND MSG_HDR = #messageAddressHeader# AND COPY_NO =
		(SELECT MAX(COPY_NO) AS copyNo FROM EDI_FFM_MSG WHERE FLT_KEY 
		= #flightKey# AND FLT_DATE = TO_DATE(#flightDate#,'MM/DD/YYYY') AND
		BRD_POINT = #loadingPoint# AND SI_TYPE ='I' AND MSG_HDR = #messageAddressHeader#
		<!-- AND MSG_VER = #msgVersionNumber# -->
		)		
		ORDER BY TR_NO DESC
	</select>
	
	<select id="selectqueryffmmsgbyseqno"
		parameterClass="cargo.cms.edi.ei.bo.FFMMsgBO"
		resultClass="java.lang.String">

		SELECT MSG_SEQ_NUM AS msgSeqNo FROM EDI_FFM_MSG WHERE FLT_KEY = #flightKey#
		AND FLT_DATE = TO_DATE(#flightDate#,'MM/DD/YYYY') AND
		BRD_POINT = #loadingPoint# AND SI_TYPE ='I'
		
	</select>

	<select id="selectqueryffmuldbyuldkey"
		parameterClass="cargo.cms.edi.ei.bo.FFMUldBO"
		resultClass="java.lang.Integer">

		SELECT MAX(DOC_LINE_NO) AS docLineNo FROM EDI_FFM_ULD WHERE
		ULD_KEY = #uldKey# and TR_NO = #trNo# AND OFF_POINT = #unLoadingPoint#
	</select>
	
	<select id="selectqueryffmbulkshpuldbytrno" 
		parameterClass="cargo.cms.edi.ei.bo.FFMUldBO"
		resultClass="java.lang.Integer">
		SELECT MAX(DOC_LINE_NO) AS docLineNo FROM EDI_FFM_ULD WHERE
		ULD_KEY is null and TR_NO = #trNo# AND OFF_POINT = #unLoadingPoint#
	</select>
	
	<select id="selectqueryffmdimbysdoclinetrno"
		parameterClass="cargo.cms.edi.ei.bo.EDIDimBO"
		resultClass="java.util.ArrayList">

		SELECT MAX(DOC_LINE_NO) AS docLineNo FROM EDI_FFM_SHP_DMN WHERE
		TR_NO = #trNo# AND SDOC_LINE_NO = #sdocLineNo#
		
	</select>


	<update id="updatequeryffmmsgsucessmsgsbyfltdata"
		parameterClass="cargo.cms.edi.ei.bo.FFMMsgBO">

		UPDATE EDI_FFM_MSG SET SUCCESS_MSGS = #successMsgsSeqNo# WHERE
		FLT_KEY = #flightKey# AND FLT_DATE =
		TO_DATE(#flightDate#,'MM/DD/YYYY') AND BRD_POINT =
		#loadingPoint# AND FFM_STATUS = 'CONT' AND SI_TYPE ='I'
		<isNotNull prepend = "AND" property="trNo" >	
		 TR_NO = #trNo#
		</isNotNull>

	</update>

	<update id="updatequeryffmmsgseqnobyfltdata"
		parameterClass="cargo.cms.edi.ei.bo.FFMMsgBO">

		UPDATE EDI_FFM_MSG SET MSG_SEQ_NUM = #msgSeqNo# WHERE FLT_KEY = #flightKey#
		AND FLT_DATE = TO_DATE(#flightDate#,'MM/DD/YYYY') AND
		BRD_POINT = #loadingPoint# AND FFM_STATUS = 'CONT' AND SI_TYPE ='I' 
		<isNotNull prepend = "AND" property="trNo" >	
		 TR_NO = #trNo#
		</isNotNull>
		
	</update>

	<update id="updatequeryffmmsgtotalcountbyfltdata"
		parameterClass="cargo.cms.edi.ei.bo.FFMMsgBO">

		UPDATE EDI_FFM_MSG SET TOTAL_COUNT = (NVL(TOTAL_COUNT, 0) + 1) WHERE
		FLT_KEY = #flightKey# AND FLT_DATE =
		TO_DATE(#flightDate#,'MM/DD/YYYY') AND BRD_POINT =
		#loadingPoint# AND FFM_STATUS = 'CONT' AND SI_TYPE ='I'
		<isNotNull prepend = "AND" property="trNo" >	
		 TR_NO = #trNo#
		</isNotNull>
		
	</update>
	
		<update id="updatequeryAllffmmsgunpro" parameterClass="cargo.cms.edi.ei.bo.FFMMsgBO">
		UPDATE EDI_FFM_MSG SET FFM_STATUS = 'UNPRO'
		WHERE FLT_KEY = #flightKey# AND FLT_DATE = TO_DATE(#flightDate#,'MM/DD/YYYY') AND BRD_POINT = #loadingPoint# 
		AND FFM_STATUS = 'P' AND SI_TYPE ='I' AND TR_NO != #trNo#
	</update>
	
	<update id="updatequeryffmmsgunpro"
		parameterClass="cargo.cms.edi.ei.bo.FFMMsgBO">

		UPDATE EDI_FFM_MSG SET FFM_STATUS = #status# WHERE FLT_KEY = 
		#flightKey# AND FLT_DATE = TO_DATE(#flightDate#,'MM/DD/YYYY') AND
		BRD_POINT = #loadingPoint# AND FFM_STATUS = 'UNPRO' AND SI_TYPE ='I'
		<isNotNull prepend = "AND" property="trNo" >	
		 TR_NO = #trNo#
		</isNotNull>

	</update>
	<update id="updatefltopreventsffmind"
		parameterClass="cargo.cms.edi.ei.bo.FFMMsgBO">
			UPDATE FLT_OPR_EVENTS SET FFM_IND = 'Y' WHERE FLT_KEY = #flightKey# AND SCH_DATE = TO_DATE(#flightDate#,'MM/DD/YYYY')
	</update>	
	
	<update id="updatequeryffmmsgstatusbyfltdata"
		parameterClass="cargo.cms.edi.ei.bo.FFMMsgBO">

		UPDATE EDI_FFM_MSG SET FFM_STATUS = #status# WHERE FLT_KEY = 
		#flightKey# AND FLT_DATE = TO_DATE(#flightDate#,'MM/DD/YYYY') AND
		BRD_POINT = #loadingPoint# AND FFM_STATUS = 'CONT' AND SI_TYPE ='I'
		<isNotNull prepend = "AND" property="trNo" >	
		 TR_NO = #trNo#
		</isNotNull>

	</update>
	<!-- Added by Varadaraj Muni 14-Oct-2010 -->
	<select id="validateFlightLegForMessageLogSummary" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT TO_CHAR(SCH_ARR_DATE,'MM/DD/YYYY') FROM FLT_OPR_LEG WHERE TR_NO = 
		(SELECT TR_NO FROM FLT_OPR_LEG WHERE FLT_KEY = #flightKey# AND SCH_DATE = TO_DATE(#flightDate#,'MM/DD/YYYY') AND BRD_POINT = #boardingPoint#  AND FLT_TYPE = 'A')
		AND OFF_POINT = 'HKG'		
	</select>


	<select id="checkMatchingVesselOutBound" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT opr.FLT_KEY as FLT_KEY, air.carr_code as CARR_CODE FROM FLT_OPR opr, FLT_OPR_AIRLINE air 
			WHERE FLT_TYPE = 'D' AND opr.tr_no = air.tr_no
			AND air.flt_key = #flightKey# AND SCH_DATE=TO_DATE(#flightDate#,'MM/DD/YYYY') 
			AND exists (SELECT null FROM FLT_OPR_LEG WHERE tr_no = opr.tr_no AND SCH_DATE = TO_DATE(#flightDate#,'MM/DD/YYYY') AND BRD_POINT = #boardingPoint#)
	</select>

	<select id="checkMatchingVesselDDTOutBound" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT opr.FLT_KEY  
		 FROM FLT_OPR opr, FLT_OPR_AIRLINE air 
			WHERE FLT_TYPE = 'D' AND opr.tr_no = air.tr_no
			AND air.flt_key = #flightKey# AND SCH_DATE=TO_DATE(#flightDate#,'MM/DD/YYYY') 
			AND exists (SELECT null FROM FLT_OPR_LEG WHERE tr_no = opr.tr_no AND SCH_DATE = TO_DATE(#flightDate#,'MM/DD/YYYY') AND BRD_POINT = #boardingPoint#)
	</select>

<select id="checkMatchingVesselInbound" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT opr.FLT_KEY  FROM FLT_OPR opr, FLT_OPR_AIRLINE air 
			WHERE FLT_TYPE = 'A' AND opr.tr_no = air.tr_no
			AND air.flt_key = #flightKey# 
			AND SCH_DATE = (SELECT SCH_ARR_DATE FROM FLT_OPR_LEG WHERE tr_no = opr.tr_no AND SCH_DEP_DATE = TO_DATE(#flightDate#,'MM/DD/YYYY') 
						AND BRD_POINT = #boardingPoint# AND FLT_TYPE = 'A' AND OFF_POINT = 'HKG')
	</select>


	<select id="getAirlineFltsOutBound" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT air.FLT_KEY as FLT_KEY , air.carr_code as CARR_CODE FROM FLT_OPR opr, FLT_OPR_AIRLINE air 
			WHERE FLT_TYPE = 'D' AND opr.tr_no = air.tr_no
			AND opr.flt_key = #flightKey# AND SCH_DATE=TO_DATE(#flightDate#,'DDMONYY') 
	</select>
	
	<select id="getAirlineFltsInBound" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT air.FLT_KEY  as FLT_KEY , air.carr_code as CARR_CODE FROM FLT_OPR opr, FLT_OPR_AIRLINE air 
			WHERE FLT_TYPE = 'A' AND opr.tr_no = air.tr_no
			AND opr.flt_key = #flightKey# AND SCH_DATE=TO_DATE(#flightDate#,'DDMONYY')			
	</select>
		
	

	<select id="fetchFlightDate" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT TO_CHAR(SCH_ARR_DATE,'MM/DD/YYYY') FROM FLT_OPR_LEG WHERE TR_NO = 
		(SELECT TR_NO FROM FLT_OPR_LEG WHERE FLT_KEY = #flightKey# AND SCH_DEP_DATE = TO_DATE(#flightDate#,'MM/DD/YYYY') AND BRD_POINT = #boardingPoint#
		AND FLT_TYPE = 'A')
		AND OFF_POINT = 'HKG'		
	</select>	
    <select id="checkFHLMessageExists" parameterClass="java.lang.String" resultClass="java.lang.Integer">
    	SELECT COUNT(1) FROM EDI_FHL,EDI_FHL_HAWB WHERE EDI_FHL.TR_NO = EDI_FHL_HAWB.TR_NO AND EDI_FHL.AWB_NO = #awbNo# AND EDI_FHL.AWB_DATE = pkg_common.get_awb_date(#awbNo#,NULL) 
    </select>
    <select id="fetchConsolMasterDetails" parameterClass="java.lang.String" resultClass="cargo.cms.afw.bo.MasterBO">
    	SELECT CODE_DESC as codeDesc FROM MAST_CODE_DTL WHERE CODE_TYPE = 'CONSOLIDATION'
    </select>
	<!-- EDI INBOUND.....FFM queries End-->

	<!--EDI INBOUND.......FBL queries Start-->

	<insert id="insertqueryfbl"
		parameterClass="cargo.cms.edi.ei.bo.FBLBO">

		INSERT INTO EDI_FBL ( TR_NO, MSG_VER, MSG_SEQ_NUM, COPY_NO,
		CARR_CODE, FLT_NO, FLT_DATE, FLT_KEY, ACFT_REG_NO, LDG_PT,
		FLT_RMK, SI_TYPE, LM_USER_ID, LM_DATE, LM_VER, SEND_DATE,
		TOTAL_COUNT, FBL_STATUS, FLT_TYPE,UNLDG_PT, TR_TYPE)

		VALUES (#trNo#, #msgVersionNumber# ,#successMsgsSeqNo# ,
		#copyNo#, #carrierCode#, #flightNo#, TO_Date( #flightDate#,
		'MM/DD/YYYY'), #flightKey#, #arcftRegNo#, #loadingPoint#, NULL ,
		#siType# ,'SYSUSER' , SYSDATE , 1 , SUBSTR(SYSDATE,1,9), #totalSplitMsgs# ,
		#status#, 'E',#unLoadingPoint#, 'MEFBL')

	</insert>


	<update id="updateAWBOSIRmk"  parameterClass="cargo.cms.edi.ei.bo.FBLShpBO">
		UPDATE  AWB_RMK 
		SET		RMK = #osiText#,lm_date = sysdate,TR_TYPE='AWBRU'
		WHERE  AWB_NO=#awbNo# AND AWB_DATE = to_date(#awbDate#,'DDMONYY')		
	</update>
	
	
	<insert id="insertAWBOSIRmk" parameterClass="cargo.cms.edi.ei.bo.FBLShpBO">
		INSERT INTO AWB_RMK (
			SEQ_NO,AWB_NO, RMK_TYPE,AWB_DATE,RMK ,CR_USER_ID,CR_DATE, LM_USER_ID,LM_DATE,TR_TYPE)
		values(
			 AWB_RMK_SEQ.nextval,
			 #awbNo#,
			'AWB_RMK',
			 NVL(TO_DATE(#awbDate#,'DDMONYY'),TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY')),			
			 #osiText#,
             'SYSUSER',
			 sysdate,
			 'SYSUSER',
			 sysdate,
			 'MAWBR')
	</insert>
	
		<insert id="insertqueryfblshp" parameterClass="cargo.cms.edi.ei.bo.FBLShpBO">

		INSERT INTO EDI_FBL_SHP ( TR_NO, DOC_LINE_NO, AWB_NO, ORG, DEST,
		PCS, WT_CODE, NET_WT, VOL_CODE, VOL_AMT, DENSITY_I, DENSITY_G,
		TOTAL_PCS,MAN_DESC, CNT, SPL_CODE1, SPL_CODE2, SPL_CODE3, SPL_CODE4,
		SPL_CODE5, SPL_CODE6, SPL_CODE7, SPL_CODE8, SPL_CODE9 , ORG_AGENT_NAME,
		ORG_FLT_CARR, ORG_FLT_NO, ORG_LDG_PT, ORG_FLT_DATE, ORG_FLT_KEY,
		ORG_MOVT_PRTY_C, SPL_SVC_REQ1, SPL_SVC_REQ2, OTHER_SVC_INFO1,
		OTHER_SVC_INFO2, DES_SHP_OSI_1, DES_SHP_OSI_2, CR_USER_ID,
		CR_DATE, LM_USER_ID, LM_DATE, LDG_PT, UNLDG_PT, NIL_IND,
		SHMPT_CODE, PART_SHMPT_YN,AWB_DATE, TR_TYPE, ISO_CTRY_CODE1, INFO_IDENTIFIER1, CUSTOMS_INFO_IDENTIFIERI, SUPP_CUSTOMS_INFO1, ISO_CTRY_CODE2, 
			INFO_IDENTIFIER2, CUSTOMS_INFO_IDENTIFIER2, SUPP_CUSTOMS_INFO2)
		VALUES (#trNo# ,EDI_FBL_SHP_SEQ.nextval ,#awbNo# , #origin# ,
		#dest#, #qtyPieces# , #weightCode# , #weight# , #volumeCode# ,
		#volumeAmount# , #densityInd# , #densityGroup# , #totalPieces# ,
		#natureOfGoods# , NULL , #specialCode1#, #specialCode2#, #specialCode3#, #specialCode4# ,
		#specialCode5#, #specialCode6#, #specialCode7#, #specialCode8#, #specialCode9#, #orgAgentName#, #orgCarrierCode#
		,#orgFlightNo# ,#orgAirportCode#,
		TO_DATE(#orgDate#,'MM/DD/YYYY') , #orgFlightKey#,
		#orgMvtPriorityCode# , #ssrText1# , #ssrText2# , #osiText1# ,
		#osiText2# , NULL , NULL , 'SYSUSER', SYSDATE , 'SYSUSER' , SYSDATE,
		#loadingPoint#, #unLoadingPoint# , #nilCargoIndicator# ,
		#shipmentDescCode# , #partShippment#, #awbDate# , 'MEFBL' , #isoCountryCode1#, #informationIdentifier1#, #customsInformationIdentifier1#, 
			#suppCustomsInformation1#, #isoCountryCode2#, #informationIdentifier2#, #customsInformationIdentifier2#, #suppCustomsInformation2#)

	</insert>

	<select id="validNilCargo" parameterClass="cargo.cms.edi.ei.bo.FBLBO" resultClass="java.lang.String">
		select NVL(max(decode(edi_fbl_shp.nil_ind,'N',1,0)),0) as nilflag 
		from edi_fbl left outer join edi_fbl_shp
		on edi_fbl_shp.ldg_pt = 'HKG'
		and edi_fbl_shp.unldg_pt = #unLoadingPoint#
		and edi_fbl.tr_no = edi_fbl_shp.tr_no  
		where edi_fbl.tr_no = (select max(tr_no) from edi_fbl where flt_key = #flightKey# and flt_date = TO_DATE(#flightDate#,'MM/DD/YYYY') and fbl_status = 'P')		
	</select>
	<select id="trNoFbl" parameterClass="cargo.cms.edi.ei.bo.FBLBO" resultClass="cargo.cms.edi.ei.bo.FBLBO">		
	select tr_no as trNo 
		from edi_fbl 
		 where flt_key = #flightKey# and flt_date = TO_DATE(#flightDate#,'MM/DD/YYYY') and fbl_status ='P'
	</select>

	<insert id="insertqueryfbluld"
		parameterClass="cargo.cms.edi.ei.bo.FBLUldBO">
		INSERT INTO EDI_FBL_ULD ( TR_NO, DOC_LINE_NO, SDOC_LINE_NO,
		ULD_TOTAL, ULD_TYPE, ULD_NO, ULD_CARR, ULD_KEY, ULD_FLG,
		LOAD_IND, ULD_WT_C, ULD_WT, RMK )

		VALUES ( #trNo#, EDI_FBL_ULD_SEQ.nextval , EDI_FBL_SHP_SEQ.currval ,
		#uldTotal#, #uldType#, #uldNo#, #uldCarrierCode# , #uldKey#,
		#uldFlag# , #uldLoadingIndicator#, #uldWeightCode# , #uldWeight#
		, NULL)

	</insert>

	<insert id="insertqueryfbldim"
		parameterClass="cargo.cms.edi.ei.bo.EDIDimBO">

		INSERT INTO EDI_FBL_DMN ( TR_NO, DOC_LINE_NO, SDOC_LINE_NO,
		WT_UNIT_CODE, TOTAL_WEIGHT, UNIT_CODE, LENGTH, WIDTH, HEIGHT,
		PCS, LM_USER_ID, LM_DATE, LM_VER, CR_USER_ID, CR_DATE )

		VALUES (#trNo#, EDI_FBL_DMN_SEQ.nextval, EDI_FBL_SHP_SEQ.currval,
		#dim_WeightCode#, #dim_Weight#, #dim_MsrUnitCode#, #dim_Length#,
		#dim_Width#, #dim_Height#, #dim_NoOfPieces# , 'SYSUSER' , SYSDATE ,
		1, 'SYSUSER' , SYSDATE )

	</insert>
	
	<select id ="selectqueryfblForMaxTrNo" 
		resultClass="java.lang.String">
		select 	EDI_FBL_SEQ.nextval as trNo FROM DUAL
	</select>
	
	<select id="selectqueryfblshpForMaxDoclineNo"
		resultClass="java.lang.Integer">

		SELECT EDI_FBL_SHP_SEQ.nextval AS docLineNo FROM DUAL

	</select>
	<select id="selectqueryfblseqNo"
		parameterClass="cargo.cms.edi.ei.bo.FBLBO"
		resultClass="cargo.cms.edi.ei.bo.FBLBO">
 SELECT TR_NO AS trNo,(select decode(count(nil_ind),0,'N','Y')  from edi_fbl_shp where edi_fbl_shp.tr_no=EDI_FBL.tr_no and edi_fbl_shp.nil_ind='Y' ) as nilCargoIndicator, COPY_NO AS copyNo, FBL_STATUS AS status,SUCCESS_MSGS AS successMsgsSeqNo,MSG_SEQ_NUM AS msgSeqNo,TOTAL_COUNT AS totalSplitMsgs,UNLDG_PT AS unLoadingPoint from EDI_FBL
 WHERE FLT_KEY =#flightKey# AND FLT_DATE
		= TO_DATE(#flightDate#,'MM/DD/YYYY') 
		AND LDG_PT = #loadingPoint# AND FBL_STATUS = 'CONT'
		AND SI_TYPE ='I' 
	</select>
	
	<select id="getFFMULdDetailsformilestone" parameterClass="map"	resultClass="cargo.cms.edi.ei.bo.EDIUldBO">
 		SELECT ULD.ULD_KEY as uldKey FROM EDI_FFM_MSG FFM, FLT_OPR OPR,EDI_FFM_ULD ULD
		WHERE FFM.ffm_status = 'P' and FFM.FLT_KEY = OPR.FLT_KEY AND FFM.FLT_DATE = OPR.SCH_DATE AND ULD.TR_NO = FFM.TR_NO
    	AND OPR.flt_type = 'A' AND FFM.FLT_KEY = #fltKey# AND FFM.FLT_DATE = #fltDate# order by uld.brd_point desc
	</select>
	
	<select id="sqlFetchSeqNosForFBLFlight" parameterClass="cargo.cms.edi.ei.bo.FBLBO" resultClass="java.lang.String">
		SELECT STRAGG(STRINGDELIM(MSG_SEQ_NUM,':')) FROM EDI_FBL WHERE FLT_KEY = #flightKey# AND FLT_DATE = TO_DATE(#flightDate#,'MM/DD/YYYY') AND LDG_PT = #loadingPoint# AND FBL_STATUS='CONT'
	</select>
	
	<select id="sqlcHECKSeqNosForFBLFlight" parameterClass="cargo.cms.edi.ei.bo.FBLBO" resultClass="java.lang.Integer">
	<![CDATA[
	SELECT COUNT(1) FROM EDI_FBL WHERE FLT_KEY = #flightKey# AND FLT_DATE = TO_DATE(#flightDate#,'MM/DD/YYYY') AND LDG_PT = #loadingPoint# and instr(':'||msg_seq_num||':',':'||#msgSeqNo#||':') > 0 AND FBL_STATUS='CONT'
	]]>
	</select>
	
	<select id="selectqueryfblmaxcopynoByFltdata"
		parameterClass="cargo.cms.edi.ei.bo.FBLBO"
		resultClass="cargo.cms.edi.ei.bo.FBLBO">

		  SELECT TR_NO AS trNo, FBL_STATUS AS status ,MSG_SEQ_NUM AS msgSeqNo ,
  COPY_NO AS copyNo , FLT_NO AS flightNo ,FLT_KEY as flightKey ,
		TO_CHAR(FLT_DATE ,'MM/DD/YYYY')AS flightDate , LDG_PT AS
		loadingPoint,UNLDG_PT AS unLoadingPoint FROM EDI_FBL WHERE FLT_KEY = #flightKey# AND FLT_DATE
		= TO_DATE(#flightDate#,'MM/DD/YYYY') AND UNLDG_PT = #unLoadingPoint#
		AND LDG_PT = #loadingPoint# AND FBL_STATUS='CONT'
		AND SI_TYPE ='I' AND COPY_NO = (SELECT MAX(COPY_NO) AS copyNo 
		FROM EDI_FBL WHERE FLT_KEY = #flightKey# AND FLT_DATE = 
		TO_DATE(#flightDate#,'MM/DD/YYYY') AND UNLDG_PT = #unLoadingPoint# AND SI_TYPE ='I')
	</select>

	<select id="selectqueryfblbyfltdata"
		parameterClass="cargo.cms.edi.ei.bo.FBLBO"
		resultClass="cargo.cms.edi.ei.bo.FBLBO">

		SELECT TR_NO AS trNo, FBL_STATUS AS status , SUCCESS_MSGS AS
		successMsgsSeqNo , MSG_SEQ_NUM AS msgSeqNo ,TOTAL_COUNT AS
		totalSplitMsgs, COPY_NO AS copyNo , FLT_NO AS flightNo , FLT_KEY as flightKey ,
		TO_CHAR(FLT_DATE ,'MM/DD/YYYY')AS flightDate , LDG_PT AS
		loadingPoint,UNLDG_PT AS unLoadingPoint,ACFT_REG_NO arcftRegNo FROM EDI_FBL WHERE FLT_KEY = #flightKey# AND FLT_DATE
		= TO_DATE(#flightDate#,'MM/DD/YYYY') AND LDG_PT = #loadingPoint#
		AND FBL_STATUS ='CONT' AND SI_TYPE ='I'AND UNLDG_PT = #unLoadingPoint#
		<isNotNull prepend = "AND" property="trNo" >	
		 TR_NO = #trNo#
		 </isNotNull>
	</select>
	<select id="selectFblFlightData"
		parameterClass="cargo.cms.edi.ei.bo.FBLBO"
		resultClass="cargo.cms.edi.ei.bo.FBLBO">

		SELECT TR_NO AS trNo, FBL_STATUS AS status , SUCCESS_MSGS AS
		successMsgsSeqNo , MSG_SEQ_NUM AS msgSeqNo ,TOTAL_COUNT AS
		totalSplitMsgs, COPY_NO AS copyNo , FLT_NO AS flightNo , FLT_KEY as flightKey ,
		TO_CHAR(FLT_DATE ,'MM/DD/YYYY')AS flightDate , LDG_PT AS
		loadingPoint,UNLDG_PT AS unLoadingPoint,ACFT_REG_NO arcftRegNo FROM EDI_FBL WHERE FLT_KEY = #flightKey# AND FLT_DATE
		= TO_DATE(#flightDate#,'MM/DD/YYYY') AND LDG_PT = #loadingPoint#
		AND FBL_STATUS in('CONT','P') AND SI_TYPE ='I'AND UNLDG_PT = #unLoadingPoint#
		<isNotNull prepend = "AND" property="trNo" >	
		 TR_NO = #trNo#
		 </isNotNull>
	</select>
	
	<select id="selecttotalcountbyfltdata"
		parameterClass="cargo.cms.edi.ei.bo.FBLBO"
		resultClass="cargo.cms.edi.ei.bo.FBLBO">
		SELECT TOTAL_COUNT AS totalSplitMsgs FROM EDI_FBL WHERE FLT_KEY = #flightKey# AND FLT_DATE
		= TO_DATE(#flightDate#,'MM/DD/YYYY') AND LDG_PT = #loadingPoint#
		AND FBL_STATUS ='CONT' AND SI_TYPE ='I'AND TOTAL_COUNT is not null		
	</select>
	
	<select id="checkIfAcftRegNoExists"
		parameterClass="cargo.cms.edi.ei.bo.FBLBO"
		resultClass="java.lang.String">

		SELECT decode(count(1),0,'N','Y') arcftRegNo FROM EDI_FBL WHERE FLT_KEY = #flightKey# AND FLT_DATE
		= TO_DATE(#flightDate#,'MM/DD/YYYY') AND LDG_PT = #loadingPoint#
		AND FBL_STATUS ='P' AND SI_TYPE ='I' AND UNLDG_PT = #unLoadingPoint# and ACFT_REG_NO is not null
		
	</select>
	<insert id="insertMHCSError" parameterClass="map">
		INSERT INTO MHCS_REJECT_ERROR(
		REF_NO ,RJCT_CODE ,RJCT_REASON ,HODA_HOST_ID )
		VALUES(#refNo#,#rejectCode#,#rejectReason#,#hodaHostId#)
	</insert>
<!-- FBL Data Concurrency Issue Resolving Queries Added on 10JUL12 By Asha Joshi -->
	<insert id="sqlInsertEdiFBLMsgLock" parameterClass="cargo.cms.edi.ei.bo.FBLBO">
		INSERT INTO EDI_FBL_MSG_LOCK(FLT_KEY,FLT_DATE,OFF_POINT,VER_NO) VALUES(#flightKey#, TO_DATE(#flightDate#,'MM/DD/YYYY'),NVL(#unLoadingPoint#,'HKG'),0)
	</insert>
	<select id="sqlSelectEdiFBLMsgLockForUpdate" parameterClass="cargo.cms.edi.ei.bo.FBLBO" resultClass="java.util.HashMap">
		SELECT FLT_KEY, FLT_DATE, OFF_POINT,VER_NO FROM EDI_FBL_MSG_LOCK WHERE FLT_KEY = #flightKey# AND FLT_DATE = TO_DATE(#flightDate#,'MM/DD/YYYY') AND OFF_POINT = NVL(#unLoadingPoint#,'HKG')
		FOR UPDATE OF VER_NO
	</select>
	<update id="sqlUpdateEdiFBLMsgLock" parameterClass="cargo.cms.edi.ei.bo.FBLBO">
		UPDATE EDI_FBL_MSG_LOCK SET VER_NO = (VER_NO + 1) WHERE FLT_KEY = #flightKey# AND FLT_DATE = TO_DATE(#flightDate#,'MM/DD/YYYY') AND OFF_POINT = NVL(#unLoadingPoint#,'HKG')
	</update>
	

	<update id="updatequeryfblsucessmsgsbyfltdata"
		parameterClass="cargo.cms.edi.ei.bo.FBLBO">

		UPDATE EDI_FBL SET SUCCESS_MSGS = #successMsgsSeqNo# WHERE
		FLT_KEY = #flightKey# AND FLT_DATE =
		TO_DATE(#flightDate#,'MM/DD/YYYY') AND LDG_PT = #loadingPoint#		
		AND FBL_STATUS = 'CONT' AND SI_TYPE ='I'
		

	</update>

	<update id="updatequeryfblstatusbyfltdata"
		parameterClass="cargo.cms.edi.ei.bo.FBLBO">

		UPDATE EDI_FBL SET FBL_STATUS = #status# WHERE FLT_KEY = 
		#flightKey# AND FLT_DATE = TO_DATE(#flightDate#,'MM/DD/YYYY') AND
		LDG_PT = #loadingPoint# AND FBL_STATUS = 'CONT' AND SI_TYPE ='I' AND UNLDG_PT = #unLoadingPoint#
		<isNotNull prepend = "AND" property="trNo" >	
		 TR_NO = #trNo#
		</isNotNull>
	</update>

	<update id="updatequeryfbltotalcountbyfltdata"
		parameterClass="cargo.cms.edi.ei.bo.FBLBO">

		UPDATE EDI_FBL SET TOTAL_COUNT = #totalSplitMsgs# WHERE FLT_KEY 
		= #flightKey# AND FLT_DATE = TO_DATE(#flightDate#,'MM/DD/YYYY') AND
		LDG_PT = #loadingPoint# AND FBL_STATUS = 'CONT' AND SI_TYPE ='I' 
		
	</update>

	<update id="updatequeryfblseqnobyfltdata"
		parameterClass="cargo.cms.edi.ei.bo.FBLBO">

		UPDATE EDI_FBL SET MSG_SEQ_NUM = #successMsgsSeqNo# WHERE FLT_KEY 
		= #flightKey# AND FLT_DATE = TO_DATE(#flightDate#,'MM/DD/YYYY') AND
		LDG_PT = #loadingPoint# AND FBL_STATUS = 'CONT' AND SI_TYPE ='I' 
		

	</update>
	<select id="isEdiFBLAwbNoPresent" parameterClass="java.util.HashMap" resultClass="java.lang.String">	
		select sum(awbNo) as awbNo from( 
	    	select count(edi_fbl_shp.awb_no)as awbNo from 
			edi_fbl inner join edi_fbl_shp
			on edi_fbl.tr_no = edi_fbl_shp.tr_no
	 		and edi_fbl_shp.nil_ind = 'N' 
			and edi_fbl_shp.awb_no =  #awbNo#
			where edi_fbl.flt_key = #fltKey#
			and edi_fbl.flt_date = to_date(#fltDate#,'MM/DD/YYYY')
			and edi_fbl.si_type in ('I') and edi_fbl.FBL_STATUS in('CONT') 
      		and edi_fbl.unldg_pt not in (#loadingPoint#)
	    	UNION
	    	select count(edi_fbl_shp.awb_no)as awbNo from 
			edi_fbl inner join edi_fbl_shp
			on edi_fbl.tr_no = edi_fbl_shp.tr_no
	 		and edi_fbl_shp.nil_ind = 'N' 
			and edi_fbl_shp.awb_no =  #awbNo#
			where edi_fbl.flt_key = #fltKey#
			and edi_fbl.flt_date = to_date(#fltDate#,'MM/DD/YYYY')
			and edi_fbl.si_type in ('I') and edi_fbl.FBL_STATUS in('CONT') 
      		and edi_fbl.unldg_pt in (#loadingPoint#)
	    	UNION
	    	select count(edi_fbl_shp.awb_no)as awbNo from 
			edi_fbl inner join edi_fbl_shp
			on edi_fbl.tr_no = edi_fbl_shp.tr_no
	 		and edi_fbl_shp.nil_ind = 'N'     		
			and edi_fbl_shp.awb_no = #awbNo#
			where edi_fbl.flt_key = #fltKey#
			and edi_fbl.flt_date = to_date(#fltDate#,'MM/DD/YYYY')
			and edi_fbl.si_type = 'S' and edi_fbl.fbl_status = 'P')
	</select>
	<update id="updatequeryAllfblmsgunpro" parameterClass="cargo.cms.edi.ei.bo.FBLBO">
		UPDATE EDI_FBL SET FBL_STATUS = 'UNPRO'
		WHERE FLT_KEY = #flightKey# AND FLT_DATE = TO_DATE(#flightDate#,'MM/DD/YYYY') AND SI_TYPE ='I'  AND tr_no =	#trNo#	
	             
		
	</update>
	<update id="updatequeryfblmsgpro" parameterClass="cargo.cms.edi.ei.bo.FBLBO">
		UPDATE EDI_FBL SET FBL_STATUS = 'P'
		WHERE FLT_KEY = #flightKey# AND FLT_DATE = TO_DATE(#flightDate#,'MM/DD/YYYY') AND UNLDG_PT = #unLoadingPoint# 
		AND TR_NO = #trNo#
	</update>
	<update id="updatecontpro" parameterClass="cargo.cms.edi.ei.bo.FBLBO">
		UPDATE EDI_FBL SET FBL_STATUS = 'P'
		WHERE FLT_KEY = #flightKey# AND FLT_DATE = TO_DATE(#flightDate#,'MM/DD/YYYY') AND FBL_STATUS='CONT'
	</update>
	<select id="isValidUnloadingPt" parameterClass="cargo.cms.edi.ei.bo.FBLBO" resultClass="java.lang.String">	
    		select count(*) from flt_opr_seg where tr_no in (
					select tr_no from flt_opr where flt_key = #flightKey#  and 
					sch_date=to_date(#flightDate#,'MM/DD/YYYY') and flt_type = 'D')
			and brd_point='HKG' 			
			and off_point=#unLoadingPoint#
   	</select>
   	<select id="checkFlightValidity" parameterClass="cargo.cms.edi.ei.bo.FBLBO" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM FLT_OPR WHERE FLT_KEY=#flightKey# AND SCH_DATE=TO_DATE(#flightDate#,'MM/DD/YYYY') AND FLT_TYPE='D'
	</select>
	<select id="checkTruckRecordExists" parameterClass="cargo.cms.edi.ei.bo.FBLBO" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM ITM_TRK_FLT WHERE TRUCK_FLT_NO=#flightKey# AND TRUCK_FLT_DATE=TO_DATE(#flightDate#,'MM/DD/YYYY')
	</select>
	
	<!--EDI INBOUND.......FBL queries End-->

	<!--EDI INBOUND.....FHL queries Start-->

	<insert id="insertqueryfhl"
		parameterClass="cargo.cms.edi.ei.bo.FHLBO">

		INSERT INTO EDI_FHL ( TR_NO, MSG_SEQ_NUM , MSG_VER, SI_TYPE,
		COPY_NO, AWB_NO, AWB_DATE, AWB_ORG, AWB_DEST, AWB_PCS, AWB_WT,
		AWB_WT_CODE, PART_SHMPT_YN , LM_USER_ID, LM_DATE, LM_VER,
		TOTAL_COUNT, FHL_STATUS, SUCCESS_MSGS, TR_TYPE)

		VALUES(#trNo#, #msgSeqNo#, #msgVer#, 'FHL_I',
		#copyNo#, #awbNo#, to_date(#awbDate#,'DDMONYY'), #awbOrg#, #awbDest#, #awbPcs#,
		#awbWt#, #awbWtCode#, #partShippment# , 'SYSUSER' , SYSDATE , 1
		,#totalSplitMsgs# , #status# , #successMsgsSeqNo#, 'MEFHL')

	</insert>

	<insert id="insertqueryfhlhawb"
		parameterClass="cargo.cms.edi.ei.bo.FHLHawbBO">
		INSERT INTO EDI_FHL_HAWB ( TR_NO, DOC_LINE_NO, HAWB_NO,
		HAWB_ORG, HAWB_DEST, HAWB_PCS, HAWB_NET_WT, HAWB_WT_CODE,
		FREE_TEXT_DESC1, FREE_TEXT_DESC2, FREE_TEXT_DESC3,
		FREE_TEXT_DESC4, FREE_TEXT_DESC5, FREE_TEXT_DESC6,
		FREE_TEXT_DESC7, FREE_TEXT_DESC8, FREE_TEXT_DESC9, SPL_CODE1,
		SPL_CODE2, SPL_CODE3, SPL_CODE4, SPL_CODE5, SPL_CODE6,
		SPL_CODE7, SPL_CODE8,SPL_CODE9, MANIFEST_DESC, LM_USER_ID, LM_DATE,
		LM_VER, SHPR_NAME, SHPR_ADD1, SHPR_ADD2, SHPR_ADD3, SHPR_ADD4,
		SHPR_ADD5, SHPR_PLACE, SHPR_CTRY_CODE, SHPR_STATE_PROVINCE,
		SHPR_PIN_CODE, CSGNE_NAME, CSGNE_ADD1, CSGNE_ADD2, CSGNE_ADD3,
		CSGNE_ADD4, CSGNE_ADD5, CSGNE_PLACE, CSGNE_CTRY_CODE,
		CSGNE_STATE_PROVINCE, CSGNE_PIN_CODE, NFY_NAME, NFY_ADD1,
		NFY_ADD2, NFY_ADD3, NFY_ADD4, NFY_ADD5, NFY_PLACE,
		NFY_CTRY_CODE, NFY_PIN_CODE, NFY_LICENSE1, NFY_LICENSE2,
		NFY_LICENSE3, NFY_LICENSE4, NFY_LICENSE5, NFY_PERMIT1,
		NFY_PERMIT2, NFY_PERMIT3, NFY_PERMIT4, NFY_PERMIT5,
		DECLN_CURR_CODE, DECLN_WT_VALN_PPCC_I, DECLN_OTH_CHRG_PPCC_I,
		DECLN_CARR, DECLN_CTM, DECLN_INSURCE, DECLN_FREE_TEXT, ACCS_I,
		SOURCE, RMK_CTM, FHL_OWNER ,HBS_SLAC ,HTS_COMM_CODE1 ,HTS_COMM_CODE2,
		HTS_COMM_CODE3 ,HTS_COMM_CODE4 ,HTS_COMM_CODE5, HTS_COMM_CODE6 ,
		HTS_COMM_CODE7 , HTS_COMM_CODE8 , HTS_COMM_CODE9, CHARGE_AGENT, ISO_CTRY_CODE1, INFO_IDENTIFIER1, CUSTOMS_INFO_IDENTIFIERI, SUPP_CUSTOMS_INFO1, ISO_CTRY_CODE2, 
			INFO_IDENTIFIER2, CUSTOMS_INFO_IDENTIFIER2, SUPP_CUSTOMS_INFO2)

		VALUES (#trNo#, #docLineNo#, upper(#hawbNo#), upper(#hawbOrg#),
		upper(#hawbDest#), #hawbPcs#, #hawbWeight#, upper(#hawbWeightCode#),
		upper(#freeTextDesc1#), upper(#freeTextDesc2#), upper(#freeTextDesc3#),
		upper(#freeTextDesc4#), upper(#freeTextDesc5#), upper(#freeTextDesc6#),
		upper(#freeTextDesc7#), upper(#freeTextDesc8#), upper(#freeTextDesc9#), upper(#splCode1#),
		upper(#splCode2#), upper(#splCode3#), upper(#splCode4#), upper(#splCode5#), upper(#splCode6#),
		upper(#splCode7#), upper(#splCode8#), upper(#splCode9#), upper(#manifestDesc#), 'SYSUSER' , SYSDATE , 1 ,
		upper(#shipperName#), upper(#shipperAddress1#), upper(#shipperAddress2#),
		upper(#shipperAddress3#), upper(#shipperAddress4#), upper(#shipperAddress5#),
		upper(#shipperPlace#), upper(#shipperCountryCode#), upper(#shipperState#),
		upper(#shipperPostalCode#), upper(#consigneeName#), upper(#consigneeAddress1#),
		upper(#consigneeAddress2#), upper(#consigneeAddress3#), upper(#consigneeAddress4#),
		upper(#consigneeAddress5#), upper(#consigneePlace#), upper(#consigneeCountryCode#),
		upper(#consigneeState#), upper(#consigneePostalCode#), upper(#nfyName#), upper(#nfyAdd1#),
		upper(#nfyAdd2#), upper(#nfyAdd3#), upper(#nfyAdd4#), upper(#nfyAdd5#), upper(#nfyPlace#),
		upper(#nfyCtryCode#), upper(#nfyPinCode#), upper(#nfyLicense1#), upper(#nfyLicense2#),
		upper(#nfyLicense3#), upper(#nfyLicense4#), upper(#nfyLicense5#), upper(#nfyPermit1#),
		upper(#nfyPermit2#), upper(#nfyPermit3#), upper(#nfyPermit4#), upper(#nfyPermit5#),
		upper(#declnCurrencyCode#), upper(#declnWtValnPpccInd#),
		upper(#declnOtherChrgPpccInd#), upper(#declnCarrier#), upper(#declnCustom#),
		upper(#declnInsurance#), upper(#declnFreeText#), 'I', upper(#source#), upper(#rmkCtm#),
		upper(#fhlOwner#), upper(#hbsSLAC#), upper(#htsCommCode1#), upper(#htsCommCode2#) ,
		upper(#htsCommCode3#), upper(#htsCommCode4#), upper(#htsCommCode5#), upper(#htsCommCode6#)  ,
		upper(#htsCommCode7#), upper(#htsCommCode8#), upper(#htsCommCode9#), upper(NVL(#chargeAgentIndicator#,'N')), #isoCountryCode1#, #informationIdentifier1#, #customsInformationIdentifier1#, 
		#suppCustomsInformation1#, #isoCountryCode2#, #informationIdentifier2#, #customsInformationIdentifier2#, #suppCustomsInformation2#)

	</insert>

	<insert id="insertqueryfhlcontacts"
		parameterClass="cargo.cms.edi.ei.bo.FHLContactBO">

		INSERT INTO EDI_FHL_CONTACT ( TR_NO, DOC_LINE_NO, HDOC_LINE_NO ,
		CONT_ID, CCNT_NAME, CONT_TYPE ,LM_USER_ID, LM_DATE, LM_VER )

		VALUES (#trNo#, EDI_FHL_CONTACT_SEQ.nextval, #hdocLineNo#,
		#contactId#, #contactNo#, #contactType# , 'SYSUSER' , SYSDATE , 1)

	</insert>
	
	<select id ="selectqueryfhlformaxtrno" 
		resultClass="java.lang.String">
		
		SELECT 	EDI_FHL_SEQ.nextval as trNo FROM DUAL
		
	</select>
	
	<select id="selectqueryfhlhawbformaxdoclineno"
		resultClass="java.lang.Integer">

		SELECT EDI_FHL_HAWB_SEQ.nextval AS docLineNo FROM DUAL

	</select>
	<select id="selectqueryfhlbyawbdata"
		parameterClass="cargo.cms.edi.ei.bo.FHLBO"
		resultClass="cargo.cms.edi.ei.bo.FHLBO">

		SELECT TR_NO AS trNo, FHL_STATUS AS status , SUCCESS_MSGS AS
		successMsgsSeqNo , MSG_SEQ_NUM AS msgSeqNo ,TOTAL_COUNT AS
		totalSplitMsgs, COPY_NO AS copyNo , AWB_NO AS awbNo , AWB_ORG AS
		awbOrg , AWB_DEST AS awbDest , to_char(AWB_DATE,'DDMONYY') FROM EDI_FHL WHERE AWB_NO = #awbNo#	
		and awb_date = to_date(#awbDate#,'DDMONYY')  and tr_no = (select max(tr_no) from edi_fhl where AWB_NO = #awbNo#
		and awb_date = to_date(#awbDate#,'DDMONYY'))

	</select>
	<select id="selectqueryfhlhawbsbyawbno"
		parameterClass="java.util.HashMap"
		resultClass="cargo.cms.edi.ei.bo.FHLHawbBO">

		SELECT TR_NO as trNo , DOC_LINE_NO AS docLineNo , HAWB_NO AS
		hawbNo , SOURCE AS source FROM EDI_FHL_HAWB WHERE TR_NO IN (SELECT TR_NO AS trNo
		FROM EDI_FHL awb WHERE AWB_NO = #awbNo#  and awb_date = to_date(#awbDate#,'DDMONYY') ) 
		<dynamic prepend="AND">
			<iterate open="(" property="hwbNoList" close=")"
				conjunction="OR">
				HAWB_NO = #hwbNoList[]#
			</iterate>
		</dynamic>

	</select>
	
        <select id="checkExportDocReceived" parameterClass="java.util.HashMap" resultClass="java.lang.Integer" >
		select count(1) from exp_doc_recd a,awb b where a.awb_no = b.awb_no and a.awb_date = b.awb_date
		and b.awb_type = 'E' and b.awb_closed_yn='N' and b.awb_no = #AWB_NO#  and b.awb_date = to_date(#AWB_DATE#,'DDMONYY') and a.AWB_FRZ_YN='Y'
	</select>
	
	<select id="checkGlsReceived" parameterClass="java.util.HashMap" resultClass="java.lang.String" >
		 select distinct gls_ind from edi_fhl where awb_no = #AWB_NO# 
		 <isNotEmpty property="AWB_DATE" prepend="AND">
      		awb_date=TO_DATE(#AWB_DATE#,'DDMONYY')
      	 </isNotEmpty> 
      	 <isEmpty property="AWB_DATE" prepend="AND">
      	 	awb_date= pkg_common.get_awb_date(#AWB_NO#,NULL)
      	 </isEmpty>
		 and rownum=1		 
	</select>
	
	<select id="checkImportFltFrozen" parameterClass="cargo.cms.edi.ei.bo.FHLBO" resultClass="java.lang.String">
		<!-- select count(*) from imp_car_shp a,flt_opr_events b where a.flt_key = b.flt_key and a.flt_date = b.sch_date
		and a.awb_no = #AWB_NO#  and b.flt_type='A' and b.freeze_ind ='Y' -->

		select count(1)
			from imp_car_shp a, flt_opr_events b, awb
			where a.flt_key = b.flt_key and a.flt_date = b.sch_date
			and a.awb_no = awb.awb_no and a.awb_date = awb.awb_date and awb.awb_type = 'I'
			and a.awb_no =  #awbNo# and a.AWB_DATE = to_date(#awbDate#,'DDMONYY')		
			and b.flt_type='A' and b.freeze_ind ='Y' and awb_closed_yn = 'N'

	</select>

	<delete id="deletequeryfhlhawbbytrnoandhawbno"
		parameterClass="cargo.cms.edi.ei.bo.FHLHawbBO">

		DELETE FROM EDI_FHL_HAWB WHERE TR_NO = #trNo# AND DOC_LINE_NO =
		#docLineNo#
	</delete>

	<delete id="deletequeryfhlcontactsbytrnoanddoclineno"
		parameterClass="cargo.cms.edi.ei.bo.FHLHawbBO">

		DELETE FROM EDI_FHL_CONTACT WHERE TR_NO = #trNo# AND
		HDOC_LINE_NO = #docLineNo#

	</delete>
	 

	<!--EDI INBOUND....FHL queries End-->
	<!--EDI INBOUND.......DDT queries Start-->
	<select id="getDDTMsg" parameterClass="cargo.cms.edi.ei.bo.DDTMessageBO" resultClass="cargo.cms.edi.ei.bo.DDTMessageBO" >
		   select ddt_msg.TR_NO as trNo, ddt_msg.MSG_SEQ_NUM as msgSeqNo,DDT_STATUS as ddtStatus from ddt_msg  where 		
    ddt_msg.FLT_KEY=#flightKey# and ddt_msg.FLT_DATE=to_date(#flightDate#,'MM/DD/YYYY') and ddt_msg.DDT_STATUS='CONT'  
	</select>
	<select id="isDDTMessageExists" parameterClass="cargo.cms.edi.ei.bo.DDTMessageBO" resultClass="cargo.cms.edi.ei.bo.DDTMessageBO" >
	<![CDATA[
	    select TR_NO trNo,TRANSIT_MAIL_AWB_NO transitMailAwbNo from DDT_MSG where FLT_KEY = #flightKey# and FLT_DATE = to_date(#flightDate#,'MM/DD/YYYY') and DDT_STATUS = 'P'
	]]>
	</select>
	<select id="transitMailAWB" parameterClass="cargo.cms.edi.ei.bo.DDTMessageBO" resultClass="cargo.cms.edi.ei.bo.DDTMessageBO" >
	<![CDATA[
	    select TRANSIT_MAIL_AWB_NO transitMailAwbNo  from DDT_MSG where FLT_KEY = #flightKey# and FLT_DATE = to_date(#flightDate#,'MM/DD/YYYY') and DDT_STATUS in('P','CONT')
	]]>
	</select>
	<select id="isDDTMessageFinal" parameterClass="java.util.HashMap" resultClass="java.lang.String" >
	<![CDATA[
	    select FINAL_VER_IND finalVersion  from DDT_MSG where FLT_KEY = #flightKey# and FLT_DATE = to_date(#flightDate#,'MM/DD/YYYY') and DDT_STATUS = 'P' and rownum=1
	]]>
	</select>
	<select id="isDDTFinalInFltOpr" parameterClass="java.util.HashMap" resultClass="java.lang.String" >
	<![CDATA[
	    select decode(count(1),0,'N','Y') from flt_opr opr,flt_opr_events event where opr.flt_key=#flightKey# and opr.sch_date=to_date(#flightDate#,'MM/DD/YYYY') and opr.tr_no=event.tr_no and event.ddt_finalise_date is not null
	    and opr.flt_type='A'
	]]>
	</select>
	<insert id="insert_into_DDT_MSG" parameterClass="cargo.cms.edi.ei.bo.DDTMessageBO" >
	insert into DDT_MSG (TR_NO,FLT_KEY,FLT_DATE,MSG_VER,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,BASELINE_ETA,DDT_STATUS,FINAL_VER_IND,MSG_YN,MSG_SEQ_NUM, TR_TYPE,NIL_DDT,BRD_POINT, COPY_NO,  SI_TYPE, TOTAL_COUNT) 
	values (#trNo#,#flightKey#,to_date(#flightDate#,'MM/DD/YYYY'),#versionNumber#,'SYSUSER' , SYSDATE,'SYSUSER' , SYSDATE, to_date(#baselineETA#,'DDMONYY HH24:MI') ,nvl(#ddtStatus#,'P'),nvl(#finalVersion#,'N'),'Y',#msgSeqNo#, 'MEDDT',#nilDDT#,#loadingPoint#,#copyNo#,'I',1)
	</insert>
	<update id="updateDDTMessageSeq" parameterClass="cargo.cms.edi.ei.bo.DDTMessageBO">
	update DDT_MSG set MSG_SEQ_NUM =#msgSeqNo#,DDT_STATUS=#ddtStatus#,MSG_YN='Y' where TR_NO = #trNo#   
	</update>
	<update id="updateDDTMsg" parameterClass="cargo.cms.edi.ei.bo.DDTMessageBO" >
update DDT_MSG set 
      MSG_VER = nvl(#versionNumber#,MSG_VER) , 
      BASELINE_ETA = to_date(#baselineETA#,'DDMONYY HH24:MI'), 
      DDT_STATUS = nvl(#ddtStatus#,DDT_STATUS),
      FINAL_VER_IND =  nvl(#finalVersion#,FINAL_VER_IND),
      MSG_SEQ_NUM =#msgSeqNo#,
      MSG_YN='Y',
      NIL_DDT=#nilDDT#,
      LM_USER_ID = 'SYSUSER',
      LM_DATE = sysdate 
      where TR_NO = #trNo# 
</update>
<update id="updateTransitMailAwbNo" parameterClass="cargo.cms.edi.ei.bo.DDTMessageBO" >
update DDT_MSG set 
      TRANSIT_MAIL_AWB_NO = #transitMailAwbNo#      
      where TR_NO = #trNo# 
</update>
	<select id="selectAWBPrefix" parameterClass="java.lang.String"  resultClass="java.lang.String">
		SELECT CODE  FROM MAST_AWB_PREFIX WHERE CARR_CODE = #carr#
	</select>
<select id="DDT_ULD_TR_NO_DOCLINENO" parameterClass="java.util.HashMap" resultClass="java.lang.String" >
<![CDATA[
       select nvl(maxUDoclineNo,0) from (select max(to_number(DOC_LINE_NO)) maxUDoclineNo from DDT_ULD where TR_NO = #ddtTrNo#) 
]]>
</select>
<select id="get_DDT_ULD_DOCLINENO_FOR_ULD" parameterClass="java.util.HashMap" resultClass="java.lang.String" >
<![CDATA[
    select DOC_LINE_NO  from DDT_ULD where TR_NO = #ddtTrNo# and nvl(ULD_KEY,'XX') = nvl(#uldKey#,'XX')
]]>
</select>
<select id="get_DDT_ULD_DATA" parameterClass="java.lang.String" resultClass="cargo.cms.edi.ei.bo.DDTULDBO" >
<![CDATA[
    select TR_NO ddtTrNo,DOC_LINE_NO ddtUdocLineNo,ULD_KEY uldKey,CNTG_FLT_KEY ctgFltKey,to_char(CNTG_FLT_DATE,'MM/DD/YYYY') ctgFltDate,UNLDG_PT unLdgPt,TRF_TYPE trfType,BRK_BULK brkBulk from DDT_ULD
where TR_NO=#trNo#
]]>
</select>
<insert id="insertDDT_ULD" parameterClass="cargo.cms.edi.ei.bo.DDTULDBO" >
Insert into DDT_ULD (TR_NO,DOC_LINE_NO,ULD_KEY,CNTG_FLT_KEY,CNTG_FLT_DATE,UNLDG_PT,TRF_TYPE,BRK_BULK,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,BRD_POINT) 
values (#ddtTrNo#,#ddtUdocLineNo#,#uldKey#,#ctgFltKey#,to_date(#ctgFltDate#,'MM/DD/YYYY'),#unLdgPt#,#trfType#,#brkBulk#,'SYSUSER',sysdate,'SYSUSER',sysdate,#loadingPoint#)
</insert>


<insert id="insert_DDT_ULD_OLD_Version" parameterClass="cargo.cms.edi.ei.bo.DDTULDBO" >
	Insert into DDT_ULD (TR_NO,DOC_LINE_NO,ULD_KEY,CNTG_FLT_KEY,CNTG_FLT_DATE,UNLDG_PT,TRF_TYPE,BRK_BULK,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,BRD_POINT) 
	 (select #ddtTrNo#,#ddtUdocLineNo#,ULD_KEY,CNTG_FLT_KEY,CNTG_FLT_DATE,UNLDG_PT,TRF_TYPE,BRK_BULK,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,BRD_POINT FROM DDT_ULD where TR_NO = #oldDdtTrNo# and NVL(ULD_KEY,'XXX') = NVL(#uldKey#,'XXX'))
</insert>


<update id="updateDDT_ULD" parameterClass="cargo.cms.edi.ei.bo.DDTULDBO" >
update DDT_ULD set 
CNTG_FLT_KEY = #ctgFltKey# , 
      CNTG_FLT_DATE = to_date(#ctgFltDate#,'MM/DD/YYYY'), 
      UNLDG_PT = #unLdgPt#,
      TRF_TYPE = #trfType#,
      BRK_BULK =  #brkBulk#,     
      LM_USER_ID = 'SYSUSER',
      LM_DATE = sysdate 
      where TR_NO = #ddtTrNo# and DOC_LINE_NO = #ddtUdocLineNo#
</update>

<update id="updateDDT_ULD_NoBreak" parameterClass="cargo.cms.edi.ei.bo.DDTULDBO" >
	update DDT_ULD set NO_BREAK = #noBreak# where TR_NO = #ddtTrNo# and DOC_LINE_NO = #ddtUdocLineNo#
</update>

<select id="ddt_Shp_MaxDocLineNo" parameterClass="java.util.HashMap" resultClass="java.lang.String" >
<![CDATA[
    select nvl(maxSDoclineNo,0) from (select max(to_number(DOC_LINE_NO)) maxSDoclineNo from DDT_SHP where TR_NO = #ddtTrNo#) 
]]>
</select>
<select id="ddt_Shp_SDoclineNo" parameterClass="java.util.HashMap" resultClass="java.lang.String" >
<![CDATA[
    select DOC_LINE_NO from DDT_SHP where TR_NO = #ddtTrNo# and UDOC_LINE_NO = #ddtUdocLineNo# and awb_no = #awbNo# and AWB_DATE = to_date(#awbDate#,'DDMONYY')
]]>
</select>
<select id="ddt_Shp_Data" parameterClass="java.lang.String" resultClass="cargo.cms.edi.ei.bo.DDTShipmentBO" >
<![CDATA[
    select TR_NO ddtTrNo,DOC_LINE_NO ddtSdocLineNo,UDOC_LINE_NO ddtUdocLineNo,AWB_NO awbNo,to_char(AWB_DATE,'DDMONYY') awbDate from DDT_SHP where TR_NO=#trNo#
]]>
</select>

<insert id="insertDDTSHP" parameterClass="cargo.cms.edi.ei.bo.DDTShipmentBO" >
	Insert into DDT_SHP (TR_NO,DOC_LINE_NO,UDOC_LINE_NO,AWB_NO,AWB_DATE,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE, TR_TYPE , MANUAL_IND, SHP_TYPE) 
	values (#ddtTrNo#,#ddtSdocLineNo#,#ddtUdocLineNo#,#awbNo#,to_date(#awbDate#,'DDMONYY'),'SYSUSER',sysdate,'SYSUSER',sysdate, 'MEDDT' , #manualInd#, #shpType#)
</insert>


<select id="getAWBListFromOldVersion" parameterClass="java.util.HashMap" resultClass="cargo.cms.edi.ei.bo.DDTShipmentBO">
		SELECT s.awb_no as awbNo, TO_CHAR(s.awb_date,'DDMONYY') as awbDate , 
		m.tr_no as oldDdtTrNo , s.UDOC_LINE_NO as oldDdtULDLineNo , 
		s.DOC_LINE_NO as oldDdtSdocLineNo
		FROM ddt_msg m
		JOIN ddt_uld u ON u.tr_no = m.tr_no
		JOIN ddt_shp s ON s.tr_no = m.tr_no AND s.udoc_line_no = u.doc_line_no
		WHERE m.flt_key = #FLT_KEY# AND m.flt_date = TO_DATE(#FLT_DATE#,'MM/DD/YYYY')
		AND NVL(u.uld_key,'XXX')  = NVL(#ULD_KEY#,'XXX')
		AND NVL(s.MANUAL_IND,'N') = 'Y' AND m.tr_no = #OLD_TR_NO# 		
 </select>

 <select id="getULDListFromOldVersion" parameterClass="java.util.HashMap" resultClass="cargo.cms.edi.ei.bo.DDTULDBO">
		SELECT DISTINCT u.uld_key as uldKey , m.tr_no as oldDdtTrNo 
		FROM ddt_msg m
		JOIN ddt_uld u ON u.tr_no = m.tr_no
		JOIN ddt_shp s ON s.tr_no = m.tr_no AND s.udoc_line_no = u.doc_line_no
		WHERE m.flt_key = #FLT_KEY# AND m.flt_date = TO_DATE(#FLT_DATE#,'MM/DD/YYYY')		
		AND m.ddt_status ='P' AND NVL(s.MANUAL_IND,'N') = 'Y'
		AND NOT EXISTS (SELECT NULL FROM ddt_uld WHERE tr_no = #TR_NO# AND NVL(uld_key,'XXX')  = NVL(u.uld_key,'XXX'))
 </select>
 
   
<insert id="insertDDTSHP_OLDVERSION" parameterClass="cargo.cms.edi.ei.bo.DDTShipmentBO" >
	Insert into DDT_SHP (TR_NO,DOC_LINE_NO,UDOC_LINE_NO,AWB_NO,AWB_DATE,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE, TR_TYPE , MANUAL_IND) 
	(select #ddtTrNo#,#ddtSdocLineNo#,#ddtUdocLineNo#,AWB_NO,AWB_DATE,'SYSUSER',SYSDATE,'SYSUSER',SYSDATE,'MEDDT', MANUAL_IND FROM DDT_SHP where AWB_NO = #awbNo# AND AWB_DATE = to_date(#awbDate#,'DDMONYY') AND TR_NO = #oldDdtTrNo# AND UDOC_LINE_NO = #oldDdtULDLineNo# and DOC_LINE_NO = #oldDdtSdocLineNo#)
</insert>

<select id="getManualDeleteCountDDTOLDVersion" parameterClass="java.util.HashMap" resultClass="java.lang.String">
	select count(*) from ddt_shp_del where  NVL(uld_key,'XXX')  = NVL(#ULD_KEY#,'XXX') AND  AWB_NO = #AWB_NO# AND AWB_DATE = to_date(#AWB_DATE#,'DDMONYY')
	and flt_key = #FLT_KEY# AND flt_date = TO_DATE(#FLT_DATE#,'MM/DD/YYYY')
</select>

 <delete id="delete_DDT_ULD_IF_NO_AWB" parameterClass="java.util.HashMap" >
	delete from DDT_ULD where  TR_NO = #ddtTrNo# and DOC_LINE_NO = #ddtUdocLineNo#
</delete>  

<update id="updateDDTSHP" parameterClass="cargo.cms.edi.ei.bo.DDTShipmentBO" >
update DDT_SHP set      
      LM_USER_ID = 'SYSUSER',
      LM_DATE = sysdate 
      where TR_NO = #ddtTrNo# and DOC_LINE_NO = #ddtSdocLineNo# and UDOC_LINE_NO = #ddtUdocLineNo#
</update>

<select id="DDT_SHP_TRF_DTL_maxDocLineNo" parameterClass="java.util.HashMap" resultClass="java.lang.String" >
<![CDATA[
	select nvl(maxDoclineNo,0) from (select nvl(max(DOC_LINE_NO),'0') maxDoclineNo  from DDT_SHP_TRF_DTL where TR_NO = #ddtTrNo#)
]]>
</select>
<select id="DDT_SHP_TRF_DTL_docLineNo" parameterClass="java.util.HashMap" resultClass="java.lang.String" >
<![CDATA[
   select DOC_LINE_NO from DDT_SHP_TRF_DTL where TR_NO = #ddtTrNo# and SDOC_LINE_NO = #ddtSdocLineNo# and CNTG_FLT_KEY = #cntgFltKey# and CNTG_FLT_DATE = to_date(#cntgFltDate#,'MM/DD/YYYY')											  
]]>
</select>
<select id="DDT_SHP_TRF_DTL_DATA" parameterClass="java.lang.String" resultClass="cargo.cms.edi.ei.bo.DDTShipmentBO" >
<![CDATA[
   select TR_NO ddtTrNo,
	DOC_LINE_NO ddtDocLineNo,
	SDOC_LINE_NO ddtSdocLineNo,
	CNTG_FLT_KEY ctgFltKey,
	to_char(CNTG_FLT_DATE,'MM/DD/YYYY') ctgFltDate,
	UNLDG_PT unLdgPt,
	TRF_TYPE trfType,
	BRK_BULK brkBulk,
	TRF_PC trfPieces,
	TRF_WT trfWeight,
	QT_BU qtBu,	
	ACTON_CODE_2 actionCode2,
	ACTON_CODE_1 actionCode1 from DDT_SHP_TRF_DTL where TR_NO=#trNo#											  
]]>
</select>
<update id="updateDDT_SHP_TRF_DTL" parameterClass="cargo.cms.edi.ei.bo.DDTShipmentBO" >
	update DDT_SHP_TRF_DTL set 
      CNTG_FLT_KEY = #ctgFltKey# , 
      CNTG_FLT_DATE = to_date(#ctgFltDate#,'MM/DD/YYYY'), 
      UNLDG_PT = #unLdgPt#, 
      TRF_TYPE = #trfType#,
      TRF_PC = #trfPieces#,
      TRF_WT = #trfWeight#,
      BRK_BULK =  #brkBulk#,
      QT_BU =  #qtBu#,
      BASELINE_ETD = to_date(#baselineEtd#,'DDMONYY HH24:MI'),
      LM_USER_ID = 'SYSUSER',
      LM_DATE = sysdate 
      where TR_NO = #ddtTrNo# and DOC_LINE_NO = #ddtDocLineNo# and SDOC_LINE_NO = #ddtSdocLineNo#
</update>
<insert id="insertDDT_SHP_TRF_DTL" parameterClass="cargo.cms.edi.ei.bo.DDTShipmentBO" >
	Insert into DDT_SHP_TRF_DTL 
	(TR_NO,
	DOC_LINE_NO,
	SDOC_LINE_NO,
	CNTG_FLT_KEY,
	CNTG_FLT_DATE,
	UNLDG_PT,
	TRF_TYPE,
	BRK_BULK,
	TRF_PC,
	TRF_WT,
	QT_BU,
	CR_USER_ID,
	CR_DATE,
	LM_USER_ID,
	LM_DATE,
	BASELINE_ETD,
	ACTON_CODE_2,
	ACTON_CODE_1,ACTUAL_PCS,ACTUAL_WT) 
	values (#ddtTrNo#,
	#ddtDocLineNo#,
	#ddtSdocLineNo#,
	#ctgFltKey#,
	to_date(#ctgFltDate#,'MM/DD/YYYY'),
	#unLdgPt#,
	#trfType#,
	#brkBulk#,
	#trfPieces#,
	#trfWeight#,
	#qtBu#,
	'SYSUSER',
	sysdate,
	'SYSUSER',
	sysdate,
	to_date(#baselineEtd#,'DDMONYY HH24:MI'),
	#actionCode2#,
	#actionCode1#,#actualPc#,#actualWt#)
</insert>


<select id="getTransferDetailsForShipment" parameterClass="cargo.cms.edi.ei.bo.DDTShipmentBO" resultClass="cargo.cms.edi.ei.bo.DDTShipmentBO" >
	SELECT      
    CNTG_FLT_KEY as ctgFltKey,
    to_char(CNTG_FLT_DATE,'MM/dd/yyyy') as ctgFltDate,
    UNLDG_PT as unLdgPt,
    TRF_TYPE as trfType,
    BRK_BULK as brkBulk,
    TRF_PC as trfPieces,
    TRF_WT as trfWeight,
    QT_BU as qtBu,    
    ACTON_CODE_2 as actionCode2,
    ACTON_CODE_1 as actionCode1,
    ACTUAL_PCS as actualPc,
    ACTUAL_WT as actualWt
	FROM ddt_shp_trf_dtl WHERE 
	TR_NO = #oldDdtTrNo#	
	AND SDOC_LINE_NO = #oldDdtSdocLineNo#
</select>

	
<insert id="insertDDT_SHP_TRF_DTL_COPY" parameterClass="cargo.cms.edi.ei.bo.DDTShipmentBO" >
<![CDATA[
	Insert into DDT_SHP_TRF_DTL 
	(TR_NO,
	DOC_LINE_NO,
	SDOC_LINE_NO,
	CNTG_FLT_KEY,
	CNTG_FLT_DATE,
	UNLDG_PT,
	TRF_TYPE,
	BRK_BULK,
	TRF_PC,
	TRF_WT,
	QT_BU,
	CR_USER_ID,
	CR_DATE,
	LM_USER_ID,
	LM_DATE,
	BASELINE_ETD,
	ACTON_CODE_2,
	ACTON_CODE_1,
	ACTUAL_PCS,
	ACTUAL_WT) 
	(select  
    #ddtTrNo#,
    (#ddtDocLineNo# + rownum),
    #ddtSdocLineNo#,
    CNTG_FLT_KEY,
    CNTG_FLT_DATE,
    UNLDG_PT,
    TRF_TYPE,
    BRK_BULK,
    TRF_PC,
    TRF_WT,
    QT_BU,
    CR_USER_ID,
    CR_DATE,
    LM_USER_ID,
    SYSDATE,	
    BASELINE_ETD,
    ACTON_CODE_2,
    ACTON_CODE_1,
    ACTUAL_PCS,
    ACTUAL_WT
	FROM ddt_shp_trf_dtl WHERE 
	TR_NO = #oldDdtTrNo#	
	AND SDOC_LINE_NO = #oldDdtSdocLineNo#
	)
	]]>
</insert>

   <select id="fetchMessageLogVersionNo" parameterClass="java.util.HashMap" resultClass = "java.lang.Integer">
    	SELECT MAX(VER_NO) FROM MESSAGE_LOG WHERE MSG_TYPE = 'DDT' AND FLT_KEY = #flightKey# AND FLT_DATE = TO_DATE(#flightDate#,'MM/DD/YYYY')
    </select>
    <select id="getAwbDateForDDT"  parameterClass="java.util.HashMap" resultClass="java.lang.String">	
			SELECT NVL(pkg_common.get_awb_date(#awbNo#,'I'), TRUNC(SYSDATE)) FROM DUAL 
	</select>
	<select id="etaDDT_MSG" parameterClass="cargo.cms.edi.ei.bo.DDTMessageBO" resultClass="java.lang.String" >
	select  to_char(T.eta,'DDMONYY HH24:MI') from  (select B.flt_key flt_key , B.sch_date flt_date,B.flt_type flt_type, decode(est_time,null,to_date((to_char(B.SCH_DATE,'DDMONYY')||to_char(B.SCH_TIME,'0000')),'DDMONYYHH24mi') , to_date((to_char(B.EST_DATE,'DDMONYY')||to_char(B.EST_TIME,'0000')),'DDMONYYHH24mi')) eta  from flt_opr B)T
	where FLT_KEY = #flightKey# and FLT_DATE = to_date(#flightDate#,'MM/DD/YYYY') AND FLT_TYPE = 'A'  and rownum=1 	
	</select>
	<select id="etdDDT_SHP_TRF_DTL" parameterClass="cargo.cms.edi.ei.bo.DDTShipmentBO" resultClass="java.lang.String" >
	select  to_char(T.eta,'DDMONYY HH24:MI')  from  (select B.flt_key flt_key , B.sch_date flt_date,B.flt_type flt_type,decode(est_time,null,to_date((to_char(B.SCH_DATE,'DDMONYY')||to_char(B.SCH_TIME,'0000')),'DDMONYYHH24mi') , to_date((to_char(B.EST_DATE,'DDMONYY')||to_char(B.EST_TIME,'0000')),'DDMONYYHH24mi')) eta  from flt_opr B)T
	where FLT_KEY = #ctgFltKey#  and FLT_DATE = to_date(#ctgFltDate#,'MM/DD/YYYY') AND FLT_TYPE = 'D'  and rownum=1 	
	</select>
<delete id="deleteDDTUld"	parameterClass="java.lang.String">

		DELETE FROM DDT_ULD WHERE TR_NO = #trNo# 
		
	</delete>
	<delete id="deleteDDTShp"	parameterClass="java.lang.String">

		DELETE FROM DDT_SHP WHERE TR_NO = #ddtTrNo# 
		
	</delete>
	<delete id="deleteDDTShpTrfDtl"	parameterClass="java.lang.String">

		DELETE FROM DDT_SHP_TRF_DTL WHERE TR_NO = #ddtTrNo# 
		
	</delete>
	<select id="rollUpDdtUld" parameterClass="cargo.cms.edi.ei.bo.DDTULDBO" resultClass="java.lang.String" >
	select decode(count(1),0,'Y','N') rollUp from
	(select msg.flt_key,msg.flt_date,uld.uld_key,shp.awb_no,shp.awb_date,trf.cntg_flt_key from ddt_msg msg,ddt_uld uld ,ddt_shp shp ,
ddt_shp_trf_dtl trf
where uld.tr_no= msg.tr_no and uld.doc_line_no=shp.udoc_line_no
and shp.tr_no=msg.tr_no and trf.sdoc_line_no= shp.doc_line_no  and
 trf.tr_no=msg.tr_no) ddt 
 FULL OUTER JOIN
 (select msg.flt_key,msg.flt_date,uld.uld_key,shp.awb_no,shp.dest from edi_ffm_msg msg,edi_ffm_uld uld ,edi_ffm_shp shp 
where uld.tr_no= msg.tr_no and uld.doc_line_no=shp.udoc_line_no
and shp.tr_no=msg.tr_no and msg.ffm_status='P') ffm
 ON 
ddt.flt_key=ffm.flt_key and ddt.flt_date=ffm.flt_date
and ddt.ULD_KEY =  ffm.ULD_KEY and  NVL(ddt.awb_No,ffm.awb_No)=ffm.awb_no
 where
NVL(ddt.flt_key,ffm.flt_key)=#ffmFltKey# and NVL(ddt.flt_date,ffm.flt_date)=to_date(#ffmFltDate#,'MM/DD/YYYY')
	 and nvl(ddt.uld_key,FFM.ULD_KEY)=#uldKey# and (ffm.dest ='HKG' or (ffm.awb_no is null AND ddt.awb_no in( select awb_no from AWB where catalog != 'TM' and awb_no = ddt.awb_no and awb_date = ddt.awb_date)) or ddt.cntg_flt_key is null) 
	</select>
<select id="rollUpDdtUld1" parameterClass="cargo.cms.edi.ei.bo.DDTULDBO" resultClass="java.lang.String" >
	select decode(count(1),0,'Y','N') rollUp from
 ( select decode(shp.dest,'HKG','Y','N') dest
 from edi_ffm_msg msg,edi_ffm_uld uld ,edi_ffm_shp shp 
where uld.tr_no= msg.tr_no and uld.doc_line_no=shp.udoc_line_no
and shp.tr_no=msg.tr_no and msg.ffm_status='P' and msg.flt_key=#ffmFltKey#
and msg.flt_date=to_date(#ffmFltDate#,'MM/DD/YYYY')  and uld.uld_key=#uldKey#
and shp.awb_no  not in(
select  shp.awb_no from ddt_msg msg,ddt_uld uld ,ddt_shp shp ,
ddt_shp_trf_dtl trf
where uld.tr_no= msg.tr_no and uld.doc_line_no=shp.udoc_line_no
and shp.tr_no=msg.tr_no and trf.doc_line_no= shp.doc_line_no  and
 trf.tr_no=msg.tr_no and
 flt_key=#ffmFltKey# and flt_date=to_date(#ffmFltDate#,'MM/DD/YYYY') and uld_key=#uldKey# )
 UNION
 select decode(shp.dest,'HKG','N','Y') dest
 from edi_ffm_msg msg,edi_ffm_uld uld ,edi_ffm_shp shp 
where uld.tr_no= msg.tr_no and uld.doc_line_no=shp.udoc_line_no
and shp.tr_no=msg.tr_no and msg.ffm_status='P' and msg.flt_key=#ffmFltKey#
and msg.flt_date=to_date(#ffmFltDate#,'MM/DD/YYYY')  and uld.uld_key=#uldKey#
and  shp.dest='HKG'
) where dest='N'
	</select>
 <update id="update_Ddt_Ctg_flt_Trf_type" parameterClass="cargo.cms.edi.ei.bo.DDTULDBO" >
update ddt_uld set cntg_flt_key = null , cntg_flt_date = null,trf_type=null,UNLDG_PT=null,BRK_BULK='N' where tr_no=#ddtTrNo# and uld_key=#uldKey#
</update>  
 <insert id="save_into_imp_car_shp" parameterClass="cargo.cms.edi.ei.bo.DDTShipmentBO">
	<![CDATA[
		INSERT INTO IMP_CAR_SHP (FLT_TYPE,AWB_NO, AWB_DATE, AWB_PRFX, CARR_CODE, FLT_DATE, FLT_KEY, MANIFEST_PCS, 
			MANIFEST_WT,BUP_PCS ,BUP_WT,	LDG_POINT ,CNTG_FLT_CARR,CNTG_FLT_NO,CNTG_FLT_DATE,
			CNTG_FLT_DEST,LM_USER_ID ,LM_DATE,TR_STATUS,CR_USER_ID, CR_DATE, PPK_TYPE,CAR_CREATED)
		VALUES( 'I',#awbNo# ,TO_CHAR(SYSDATE,'DDMONYY'),#awbPrefix#, #carrCode#,TO_DATE(#flightDate#,'MM/DD/YYYY'),#flightKey#,nvl(#trfPieces#,0),nvl(#trfWeight#,0),nvl(#trfPieces#,0),
		nvl(#trfWeight#,0), #ldgPt#,SUBSTR(#ctgFltKey#, 1, 2),SUBSTR(#ctgFltKey#, 3, 5),
		TO_DATE(#ctgFltDate#,'MM/DD/YYYY'),#unLdgPt#,
		'SYSUSER',SYSDATE,'A','SYSUSER',SYSDATE,'P','Y')		
	]]>
 </insert>
 <insert id="save_into_imp_car_awb" parameterClass="cargo.cms.edi.ei.bo.DDTShipmentBO">
	<![CDATA[
		INSERT INTO IMP_CAR_AWB (AWB_NO,AWB_DATE,AWB_PRFX,AWB_DEST,AWB_ORIGIN,AWB_PCS,AWB_WT,			
			LM_USER_ID ,LM_DATE,TR_STATUS,CR_USER_ID, CR_DATE, PPK_TYPE,
			BUP_PCS,BUP_WT,CATALOG			
			) 
		VALUES(#awbNo#,TO_CHAR(SYSDATE,'DDMONYY'),#awbPrefix#,#unLdgPt#,#ldgPt#, 
			nvl(#trfPieces#,0),nvl(#trfWeight#,0),
			'SYSUSER',SYSDATE,'A','SYSUSER',SYSDATE,'P',
			nvl(#trfPieces#,0),nvl(#trfWeight#,0),'TM')  
	]]>
</insert>	
<insert id="INSERT_INTO_AWB" parameterClass="cargo.cms.edi.ei.bo.DDTShipmentBO">		 
	INSERT INTO AWB (
		AWB_NO,AWB_DATE,AWB_TYPE,PPK_TYPE,CARR_CODE,CAR_YN,MANIFEST_YN,BLDUP_COMPL_YN,AWB_CLOSED_YN,LOCKED_YN,MISSING_YN,MANIFEST_PCS,MANIFEST_WT,
		RTN_PCS,RTN_WT,CC_CODE,ORIG,DEST,PCS,WT,
		RCL_PCS,RCL_WT,RCL_PPK_PCS,RCL_PPK_WT,RCL_MIX_PCS,RCL_MIX_WT,RCL_BULK_PCS,RCL_BULK_WT,PMAN_PCS,PMAN_WT,NON_PMAN_PCS,NON_PMAN_WT,PMAN_BULK_PCS,
		PMAN_BULK_WT,PMAN_MIX_PCS,PMAN_MIX_WT,PMAN_PPK_PCS,PMAN_PPK_WT,BLDUP_BULK_PCS,BLDUP_BULK_WT,AGENT_CODE,SHPR_CODE,CR_USER_ID,CR_DATE,LM_USER_ID,
		LM_DATE,OFFLOAD_BULK_PCS,OFFLOAD_BULK_WT,OFFLOAD_PPK_PCS,
		OFFLOAD_PPK_WT,AWB_RMK,CATALOG)
	VALUES(
	 #awbNo#,TO_CHAR(SYSDATE,'DDMONYY'),'T','P',#carrCode#,'N','N','N','N','N','N',0,0,0,0,NULL,#ldgPt#,#unLdgPt#,#trfPieces#,#trfWeight#,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,'SYSUSER',SYSDATE,    'SYSUSER',SYSDATE,0,0,0,0,NULL,'TM'
		)
	</insert>
	<!-- End of old query --> 
	<update id="updatequeryddtmsgunpro"
		parameterClass="cargo.cms.edi.ei.bo.DDTMessageBO">

		UPDATE DDT_MSG SET DDT_STATUS = #ddtStatus# WHERE FLT_KEY = 
		#flightKey# AND FLT_DATE = TO_DATE(#flightDate#,'MM/DD/YYYY') AND
		BRD_POINT = #loadingPoint# AND DDT_STATUS = 'UNPRO' AND SI_TYPE ='I'
		<isNotNull prepend = "AND" property="trNo" >	
		 TR_NO = #trNo#
		</isNotNull>

	</update>
	
	<update id="updatequeryddtmsgstatusbyfltdata"
		parameterClass="cargo.cms.edi.ei.bo.DDTMessageBO">

		UPDATE DDT_MSG SET DDT_STATUS = #ddtStatus# WHERE FLT_KEY = 
		#flightKey# AND FLT_DATE = TO_DATE(#flightDate#,'MM/DD/YYYY') AND
		BRD_POINT = #loadingPoint# AND DDT_STATUS = 'CONT' AND SI_TYPE ='I'
		<isNotNull prepend = "AND" property="trNo" >	
		 TR_NO = #trNo#
		</isNotNull>

	</update>
	
	<update id="updatequeryddtmsgtotalcountbyfltdata"
		parameterClass="cargo.cms.edi.ei.bo.DDTMessageBO">

		UPDATE DDT_MSG SET TOTAL_COUNT = (NVL(TOTAL_COUNT, 0) + 1) WHERE
		FLT_KEY = #flightKey# AND FLT_DATE =
		TO_DATE(#flightDate#,'MM/DD/YYYY') AND BRD_POINT =
		#loadingPoint# AND DDT_STATUS = 'CONT' AND SI_TYPE ='I'
		<isNotNull prepend = "AND" property="trNo" >	
		 TR_NO = #trNo#
		</isNotNull>
		
	</update>
	
	<update id="updatequeryddtmsgseqnobyfltdata"
		parameterClass="cargo.cms.edi.ei.bo.DDTMessageBO">

		UPDATE DDT_MSG SET MSG_SEQ_NUM = #msgSeqNo#,ddt_split_ind=#ddtSplit# WHERE FLT_KEY = #flightKey#
		AND FLT_DATE = TO_DATE(#flightDate#,'MM/DD/YYYY') AND
		BRD_POINT = #loadingPoint# AND DDT_STATUS = 'CONT' AND SI_TYPE ='I' 
		<isNotNull prepend = "AND" property="trNo" >	
		 TR_NO = #trNo#
		</isNotNull>
		
	</update>
	<select id="selectqueryddtmsgByFltdata"
		parameterClass="cargo.cms.edi.ei.bo.DDTMessageBO"
		resultClass="cargo.cms.edi.ei.bo.DDTMessageBO">

		SELECT TR_NO AS trNo, DDT_STATUS AS ddtStatus , SUCCESS_MSGS AS
		successMsgsSeqNo , MSG_SEQ_NUM AS msgSeqNo ,TOTAL_COUNT AS
		totalSplitMsgs, COPY_NO AS copyNo ,FLT_KEY as flightKey ,
		TO_CHAR(FLT_DATE ,'MM/DD/YYYY')AS flightDate , BRD_POINT AS
		loadingPoint, LAST_IND AS lastIndicator FROM DDT_MSG WHERE FLT_KEY = #flightKey# AND
		FLT_DATE = TO_DATE(#flightDate#,'MM/DD/YYYY') AND BRD_POINT =
		#loadingPoint# AND DDT_STATUS ='CONT' AND SI_TYPE ='I' 
		<isNotNull prepend = "AND" property="trNo" >	
		 TR_NO = #trNo#
		 </isNotNull>
		
	</select>	
	
	<!-- DDT Data Concurrency Issue  -->
	<insert id="sqlInsertDDTMsgLock" parameterClass="cargo.cms.edi.ei.bo.DDTMessageBO">
		INSERT INTO DDT_MSG_LOCK(FLT_KEY,FLT_DATE,BRD_POINT,VER_NO) VALUES(#flightKey#, TO_DATE(#flightDate#,'MM/DD/YYYY'),#loadingPoint#,0)
	</insert>
	<select id="sqlSelectDDTMsgLockForUpdate" parameterClass="cargo.cms.edi.ei.bo.DDTMessageBO" resultClass="java.util.HashMap">
		SELECT FLT_KEY, FLT_DATE, BRD_POINT,VER_NO FROM DDT_MSG_LOCK WHERE FLT_KEY = #flightKey# AND FLT_DATE = TO_DATE(#flightDate#,'MM/DD/YYYY') AND BRD_POINT = #loadingPoint#
		FOR UPDATE OF VER_NO
	</select>
	<update id="sqlUpdateDDTMsgLock" parameterClass="cargo.cms.edi.ei.bo.DDTMessageBO">
		UPDATE DDT_MSG_LOCK SET VER_NO = (VER_NO + 1) WHERE FLT_KEY = #flightKey# AND FLT_DATE = TO_DATE(#flightDate#,'MM/DD/YYYY') AND BRD_POINT = #loadingPoint#
	</update>
	<!-- End -->
	
	<select id="selectqueryddtmsgmaxcopynoByFltdata"
		parameterClass="cargo.cms.edi.ei.bo.DDTMessageBO"
		resultClass="cargo.cms.edi.ei.bo.DDTMessageBO">
		
		SELECT TR_NO AS trNo, DDT_STATUS AS ddtStatus , SUCCESS_MSGS AS
		successMsgsSeqNo , MSG_SEQ_NUM AS msgSeqNo ,TOTAL_COUNT AS
		totalSplitMsgs, COPY_NO AS copyNo ,FLT_KEY as flightKey ,
		TO_CHAR(FLT_DATE ,'MM/DD/YYYY')AS flightDate , BRD_POINT AS
		loadingPoint , MSG_VER AS versionNumber FROM DDT_MSG WHERE FLT_KEY = #flightKey# AND
		FLT_DATE = TO_DATE(#flightDate#,'MM/DD/YYYY') AND BRD_POINT =
		#loadingPoint#  AND SI_TYPE ='I' AND MSG_VER = #versionNumber# AND COPY_NO =
		(SELECT MAX(COPY_NO) AS copyNo FROM DDT_MSG WHERE FLT_KEY 
		= #flightKey# AND FLT_DATE = TO_DATE(#flightDate#,'MM/DD/YYYY') AND
		BRD_POINT = #loadingPoint# AND SI_TYPE ='I' AND MSG_VER = #versionNumber#)		
		ORDER BY TR_NO DESC
	</select>	

	
	<update id="updateDDTLastIndicator" parameterClass="java.util.HashMap">
	UPDATE 	DDT_MSG SET LAST_IND = #lastIndicator#
	WHERE TR_NO = #trNo#
	</update>
	
	<update id="updatequeryAllddtmsgunpro" parameterClass="cargo.cms.edi.ei.bo.DDTMessageBO">
		UPDATE DDT_MSG SET DDT_STATUS = 'UNPRO'
		WHERE FLT_KEY = #flightKey# AND FLT_DATE = TO_DATE(#flightDate#,'MM/DD/YYYY') AND BRD_POINT = #loadingPoint# 
		AND DDT_STATUS = 'P' AND TR_NO != #trNo#
	</update>
	
	<update id="updatequeryddtmsgsucessmsgsbyfltdata"
		parameterClass="cargo.cms.edi.ei.bo.DDTMessageBO">

		UPDATE DDT_MSG SET SUCCESS_MSGS = #successMsgsSeqNo#,TRANSIT_MAIL_AWB_NO = #transitMailAwbNo#  WHERE
		FLT_KEY = #flightKey# AND FLT_DATE =
		TO_DATE(#flightDate#,'MM/DD/YYYY') AND BRD_POINT =
		#loadingPoint# AND DDT_STATUS = 'CONT' AND SI_TYPE ='I'
		<isNotNull prepend = "AND" property="trNo" >	
		 TR_NO = #trNo#
		</isNotNull>

	</update>
	
	<select id="selectqueryddtuldbyuldkey"
		parameterClass="cargo.cms.edi.ei.bo.DDTULDBO"
		resultClass="java.lang.Integer">

		SELECT MAX(DOC_LINE_NO) AS ddtUdocLineNo FROM DDT_ULD WHERE
		ULD_KEY = #uldKey# and TR_NO = #ddtTrNo# 
	</select>
	
	<select id="selectqueryddtbulkshpuldbytrno" 
		parameterClass="cargo.cms.edi.ei.bo.DDTULDBO"
		resultClass="java.lang.Integer">
		SELECT MAX(DOC_LINE_NO) AS ddtUdocLineNo FROM DDT_ULD WHERE
		ULD_KEY is null and TR_NO = #ddtTrNo# 
	</select>
		<select id="checkDuplicateAWB" 
		parameterClass="java.util.HashMap"
		resultClass="java.lang.String">
		select sum(awbNo) as awbNo from( 
	    	select count(shp.awb_no)as awbNo from 
			ddt_msg msg inner join ddt_shp shp
			on msg.tr_no = shp.tr_no
				and shp.awb_no =#awbNo#
      		and msg.nil_ddt = 'N', ddt_uld uld
			where msg.flt_key = #flightKey#
			and msg.flt_date = to_date(#flightDate#,'MM/DD/YYYY')
			 and msg.DDT_STATUS in('CONT')    and    
       shp.udoc_line_no=uld.doc_line_no and uld.tr_no=msg.tr_no	and uld_key is null and msg.brd_point  in (#loadingPoint#)	
	    	UNION         
      		select count(ddt_shp.awb_no)as awbNo from 
			ddt_msg inner join ddt_shp
			on ddt_msg.tr_no = ddt_shp.tr_no
	 		and ddt_msg.nil_ddt = 'N'      		
			and ddt_shp.awb_no =#awbNo#, ddt_uld uld
			where ddt_msg.flt_key = #flightKey#
			and ddt_msg.brd_point not in (#loadingPoint#)
			and ddt_msg.flt_date = to_date(#flightDate#,'MM/DD/YYYY')
			 and ddt_shp.udoc_line_no=uld.doc_line_no and uld.tr_no=ddt_msg.tr_no and uld_key is null
			 and ddt_msg.DDT_STATUS = 'P')
	</select>
	<select id="checkDuplicateUld" 
		parameterClass="java.util.HashMap"
		resultClass="java.lang.String">
		       select sum(uld_key) as uld_key from( 
	    	select count(uld.uld_key)as uld_key from 
			ddt_msg msg inner join ddt_uld uld
			on msg.tr_no = uld.tr_no
     		 and msg.nil_ddt = 'N' 
			and uld.uld_key = #uldKey#
			where msg.flt_key = #flightKey#
			and msg.flt_date = to_date(#flightDate#,'MM/DD/YYYY')			
			 and msg.DDT_STATUS in('CONT')      	
	    	UNION    	
     		 select count(ddt_uld.uld_key)as uld_key from 
			ddt_msg inner join ddt_uld
			on ddt_msg.tr_no = ddt_uld.tr_no
	 		and ddt_msg.nil_ddt = 'N'     	
			and ddt_uld.uld_key =#uldKey#
			where ddt_msg.flt_key = #flightKey#
			and ddt_msg.flt_date = to_date(#flightDate#,'MM/DD/YYYY')
			and ddt_msg.brd_point not in (#loadingPoint#)
			 and ddt_msg.DDT_STATUS = 'P'       
       )
	</select>
	<select id="checkDuplicateAWBInUld" 
		parameterClass="java.util.HashMap"
		resultClass="java.lang.String">		
	    	select count(shp.awb_no)as awbNo from 
			ddt_msg msg inner join ddt_shp shp
			on msg.tr_no = shp.tr_no
      		and msg.nil_ddt = 'N' 
			and shp.awb_no =  #awbNo#,ddt_uld uld
			where msg.flt_key = #flightKey#
			and msg.flt_date = to_date(#flightDate#,'MM/DD/YYYY')
			and msg.brd_point  in (#loadingPoint#)
			 and msg.DDT_STATUS in('CONT')and    
       shp.udoc_line_no=uld.doc_line_no and uld.tr_no=msg.tr_no	and uld_key is not null	and uld_key  in(#uldKey#)	    	
      
	</select>
	
<!--EDI INBOUND.......DDT queries end-->

<!-- EDI INBOUND....SSM    Queries Start   -->

<select id="getexistingschedule"  parameterClass="cargo.cms.edi.ei.bo.FlightScheduleMessageBO" resultClass="java.lang.String" >
		SELECT TO_CHAR(min(START_DATE),'MM/DD/YYYY')|| TO_CHAR( max(END_DATE),'MM/DD/YYYY') existingSchedules
		FROM 
			FLT_SCH
		WHERE 
			CARR_CODE = upper(#flightCarr#) 
			AND FLT_NO = #flightNo# 			
			 AND ROWNUM = 1 		
			 AND FLT_SCH.MON_FLG = #monFlg#
					AND	FLT_SCH.TUE_FLG = #tueFlg#
					AND	FLT_SCH.WED_FLG = #wedFlg#
					AND	FLT_SCH.THU_FLG = #thuFlg#
					AND	FLT_SCH.FRI_FLG = #friFlg#  
					AND	FLT_SCH.SAT_FLG = #satFlg# 
					AND FLT_SCH.SUN_FLG = #sunFlg#
	      AND (TO_DATE(#fromDate#,'MM/DD/YYYY') &lt;= END_DATE AND TO_DATE(#toDate#,'MM/DD/YYYY') &gt;= START_DATE
  	  	)
	</select>
	
        <insert id="fltinsert_flt_sch" parameterClass="cargo.cms.edi.ei.bo.FlightScheduleMessageBO" >
			INSERT INTO FLT_SCH(TR_NO,CARR_CODE, FLT_NO,START_DATE,END_DATE,FRQ_NO, FLT_KEY, MON_FLG,TUE_FLG,WED_FLG,
					 THU_FLG,FRI_FLG,SAT_FLG,SUN_FLG,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,wh_level ,
					 flt_module1  ,flt_module2 , exp_flt_module1  , exp_flt_module2 ,chkout_area ,svc_type , to_ind ,jv_code,outstanding,LEG_ACFT_TYPE,CGO_ACFT_TYPE,rho_id  )
			VALUES(#trNo#,upper(#flightCarr#),upper(#flightNo#),TO_DATE(#fromDate#,'MM/DD/YYYY'),
					TO_DATE(#toDate#,'MM/DD/YYYY'),#frqNumber#,upper(#flightKey#),
					upper(#monFlg#),upper(#tueFlg#),upper(#wedFlg#),upper(#thuFlg#),upper(#friFlg#),
					upper(#satFlg#),upper(#sunFlg#),#createdUserId#, sysdate,#createdUserId#,sysdate,#whLevel#,
					#primaryModule#,#secModule#,#expPrimaryModule#,#expSecModule#,#chkoutarea#,#serviceType#,decode(#transportInd#,null,'N',#transportInd#),#jvCode#,#outstanding#,#legAcftType#,#cgoAircraftType#,#rhoId#)	
	</insert>

	<insert id="fltinsert_flt_sch_leg" parameterClass="cargo.cms.edi.ei.bo.FlightScheduleMessageBO" >
			INSERT INTO FLT_SCH_LEG(TR_NO,DOC_LINE_NO,CARR_CODE,FLT_NO,FLT_KEY,START_DATE,END_DATE,FRQ_NO, LEG_ORDER,
					BRD_POINT,OFF_POINT,CGO_PASS_IND,SCH_ARR_TIME,SCH_DEP_TIME,
					CGO_WGT,CGO_VOL,NO_OF_PLT,ACFT_TYPE,				
					CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,ARR_DAY_CHANGE,DEP_DAY_CHANGE,hse_bu_ind ,prohibit_shc1 , prohibit_shc2 ,prohibit_shc3  ,auto_assgn_uld  )
				VALUES(	#trNo#,#docLineNumber#,UPPER(#flightCarr#),#flightNo#,UPPER(#flightKey#),TO_DATE(#fromDate#,'MM/DD/YYYY'),
					TO_DATE(#toDate#,'MM/DD/YYYY'),#frqNumber#,#legOrder#,UPPER(#brdPoint#),UPPER(#offPoint#),
					'P',#arrTime#,#depTime#,
					1,1,1,#aircraftType#,#createdUserId#,sysdate,#createdUserId#,sysdate,nvl(#arrDayChange#,0),nvl(#depDayChange#,0),#houseBuInd#,#shc1#,#shc2#,#shc3#,#autoAssignUld#)	
	</insert>
	<update id="fltupdate_flt_sch" parameterClass="cargo.cms.edi.ei.bo.FlightScheduleMessageBO">
		UPDATE FLT_SCH SET
			MON_FLG = upper(#monFlg#),
			TUE_FLG = upper(#tueFlg#),
			WED_FLG = upper(#wedFlg#),
			THU_FLG = upper(#thuFlg#),
			FRI_FLG = upper(#friFlg#),
			SAT_FLG = upper(#satFlg#),
			SUN_FLG = upper(#sunFlg#),
			wh_level=#whLevel#,
			flt_module1=#primaryModule#,
			flt_module2=#secModule#,
			exp_flt_module1=#expPrimaryModule#,
			exp_flt_module2=#expSecModule#,
			chkout_area=#chkoutarea#,
			svc_type=#serviceType#,
			cgo_acft_type=#aircraftType#,
			to_ind=decode(#transportInd#,null,'N',#transportInd#),
			jv_code=#jvCode#,
			outstanding=#outstanding#			
		where tr_no = #trNo#
	</update>	

	<update id="fltupdate_flt_sch_leg" parameterClass="cargo.cms.edi.ei.bo.FlightScheduleMessageBO">
		UPDATE FLT_SCH_LEG SET BRD_POINT = UPPER(#brdPoint#), 
			OFF_POINT = UPPER(#offPoint#), 
			SCH_ARR_TIME = #arrTime#,
			SCH_DEP_TIME = #depTime#,
			ACFT_TYPE= #aircraftType#, 			
			ARR_DAY_CHANGE =nvl(#arrDayChange#,0),
			DEP_DAY_CHANGE = nvl(#depDayChange#,0)
			,hse_bu_ind = #houseBuInd#
			,prohibit_shc1=	#shc1#
			,prohibit_shc2 = #shc2#
			,prohibit_shc3=	#shc3#
			,auto_assgn_uld=#autoAssignUld#	
		WHERE TR_NO = #trNo# AND DOC_LINE_NO = #docLineNumber#
	</update>
	<update id="update_flt_sch_leg_EQT" parameterClass="cargo.cms.edi.ei.bo.FlightScheduleMessageBO">
		UPDATE FLT_SCH_LEG SET			
			ACFT_TYPE= #aircraftType#		
		WHERE TR_NO = #trNo# 
	</update>
	<update id="update_flt_sch_leg_EQT_With_Leg" parameterClass="cargo.cms.edi.ei.bo.FlightScheduleMessageBO">
		UPDATE FLT_SCH_LEG SET 
			ACFT_TYPE= #aircraftType#			
		WHERE TR_NO = #trNo# AND BRD_POINT = UPPER(#brdPoint#) AND OFF_POINT = UPPER(#offPoint#)
	</update>
	<update id="update_flt_sch_leg_TIM" parameterClass="cargo.cms.edi.ei.bo.FlightScheduleMessageBO">
		UPDATE FLT_SCH_LEG SET 
			SCH_ARR_TIME = #arrTime#,
			SCH_DEP_TIME = #depTime#		
		WHERE TR_NO = #trNo# AND BRD_POINT = UPPER(#brdPoint#) AND OFF_POINT = UPPER(#offPoint#)
	</update>
	<select id="getTrNo_flt_sch" parameterClass="cargo.cms.edi.ei.bo.FlightScheduleMessageBO" resultClass="java.lang.String">
	SELECT  TR_NO trNo
	FROM FLT_SCH 
	WHERE CARR_CODE = upper(#flightCarr#)
	and FLT_NO = upper(#flightNo#) 
	and START_DATE =TO_DATE(#fromDate#,'MM/DD/YYYY') 
	and END_DATE = TO_DATE(#toDate#,'MM/DD/YYYY') 
	AND FLT_SCH.MON_FLG = #monFlg#
					AND	FLT_SCH.TUE_FLG = #tueFlg#
					AND	FLT_SCH.WED_FLG = #wedFlg#
					AND	FLT_SCH.THU_FLG = #thuFlg#
					AND	FLT_SCH.FRI_FLG = #friFlg#  
					AND	FLT_SCH.SAT_FLG = #satFlg# 
					AND FLT_SCH.SUN_FLG = #sunFlg#	
	</select>

	<select id="get_flt_sch_hdr" parameterClass="cargo.cms.edi.ei.bo.FlightScheduleMessageBO" resultClass="cargo.cms.edi.ei.bo.FlightScheduleMessageBO">
        	select * from (select tr_no as maxTrNo, wh_level whLevel,flt_module1 as primaryModule,flt_module2 as secModule,
	        exp_flt_module1 as expPrimaryModule,exp_flt_module2 as expSecModule,chkout_area chkoutarea,svc_type as serviceType,cgo_acft_type as cgoAircraftType, to_ind as transportInd,jv_code as jvCode, 
	        rho_id rhoId from flt_sch where flt_key=#flightKey# and cr_user_id not in('SSMCNL', 'SSMRPL', 'SSMEQT', 'SSMTIM') order by to_number (tr_no) desc ) where rownum=1	
	</select>

	<select id="get_flt_sch_dtl" parameterClass="cargo.cms.edi.ei.bo.FlightScheduleMessageBO" resultClass="cargo.cms.edi.ei.bo.FlightScheduleMessageBO">
	select * from (select hse_bu_ind as houseBuInd,prohibit_shc1 shc1, prohibit_shc2 shc2,prohibit_shc3 shc3 ,auto_assgn_uld autoAssignUld,acft_type aircraftType from flt_sch_leg where
 	flt_key=#flightKey# and brd_point=#brdPoint# and off_point=#offPoint# and tr_no=#maxTrNo# order by to_number (doc_line_no) desc ) where rownum=1
	</select>
	<select id="getDocLineNo_flt_sch_leg" parameterClass="cargo.cms.edi.ei.bo.FlightScheduleMessageBO" resultClass="java.lang.String">
	select doc_line_no from flt_sch_leg where tr_no=#trNo# and brd_point=UPPER(#brdPoint#) and off_point=UPPER(#offPoint#)	
	</select>
	<delete id="deleteFltSch"	parameterClass="java.lang.String">

		DELETE FROM FLT_SCH WHERE TR_NO = #trNo# 
		
	</delete>
	<delete id="deleteFltSchLeg"	parameterClass="java.lang.String">

		DELETE FROM FLT_SCH_LEG WHERE TR_NO = #trNo# 
		
	</delete>
	<select id="checkValidityOfFlight" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM FLT_OPR WHERE FLT_KEY=#flightKey# AND SCH_DATE=TO_DATE(#flightDate#,'MM/DD/YYYY') AND FLT_TYPE='D'
	</select>
	<select id="getSSIMPath" parameterClass="cargo.cms.edi.ei.bo.FlightScheduleMessageBO" resultClass="java.lang.String">
	SELECT RULE_VALUE FROM CMSRULES WHERE RULE_CODE = 'SSIM_PATH'	
	</select>

<!--EDI INBOUND.......SSM queries end-->
<!-- EDI INBOUND....ASM    Queries Start   -->
<select id="carrCodeCheck"
		parameterClass="java.lang.String"
		resultClass="java.lang.Integer">

		SELECT COUNT(*) FROM MAST_CARRIER WHERE CODE = #flightCarr#

	</select>
	<select id="FLTcheckExistingSchedule"  parameterClass="cargo.cms.edi.ei.bo.ASMMessageBO"  resultClass="cargo.cms.edi.ei.bo.ASMMessageBO">
	<![CDATA[
		SELECT	TR_NO trNo, ACFT_TYPE aircraftType,TO_CHAR(SCH_DATE,'MM/DD/YYYY') schDate,status flightStatus
				FROM FLT_OPR 
				WHERE UPPER(CARR_CODE) = UPPER(#flightCarr#) 
				AND UPPER(FLT_NO) = UPPER(#flightNo#)				
			AND TO_CHAR(ORG_FLT_DATE,'MM/DD/YYYY') = UPPER(#orgFltDate#)
				AND FLT_TYPE=#flightType#
		]]>
   	</select>
   	
   	<select id="checkASMFltExistsARCH"  parameterClass="cargo.cms.edi.ei.bo.ASMMessageBO"  resultClass="java.lang.String">
		SELECT TO_CHAR(COUNT(*)) FROM ARCHIVE_LOG_MON WHERE FLT_KEY= #flightKey#  AND FLT_DATE = TO_DATE(#schDate#,'MM/DD/YYYY') AND FLT_TYPE= #flightType#		
   </select>

   <insert id="FLTinsertInFLTOPR" parameterClass="cargo.cms.edi.ei.bo.ASMMessageBO">
		<![CDATA[
			INSERT INTO FLT_OPR(
				TR_NO, CARR_CODE, FLT_NO, FLT_KEY, ORG_FLT_DATE, SCH_DATE, FLT_TYPE, ACFT_TYPE,
				CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE,ORIG,DEST,ORIG_DATE,DEST_DATE,ORIG_TIME,DEST_TIME,GROUND_HANDLER, 
				SCH_TIME,CGO_ACFT_TYPE,PRTY_IND,wh_level,flt_module1,flt_module2,chkout_area,svc_type,to_ind,jv_code,rho_id)
			VALUES(
				#trNo#,UPPER(#flightCarr#),UPPER(#flightNo#),UPPER(#flightKey#),TO_DATE(#orgFltDate#,'MM/DD/YYYY'),
				TO_DATE(#schDate#,'MM/DD/YYYY'),#flightType#,#aircraftType#,#createdUserId#,SYSDATE,#createdUserId#,SYSDATE,
				#orig#,#dest#,TO_DATE(#origDate#,'MM/DD/YYYY'),TO_DATE(#destDate#,'MM/DD/YYYY'),#origTime#,#destTime#,'CPT', 
	  			DECODE(#flightType#, 'A', #destTime#, #origTime#),#cgoAircraftType#,0,#whLevel#,#primaryModule#,#secModule#,#chkoutarea#,NVL(#serviceType#,'S'),NVL(#transportInd#,'N'),#jvCode#,#rhoId#)	
		]]>
	</insert>

	<insert id="FLTinsertInFLTOPRLEG" parameterClass="cargo.cms.edi.ei.bo.ASMMessageBO" >
	<![CDATA[
		INSERT INTO FLT_OPR_LEG(
		TR_NO, DOC_LINE_NO, CARR_CODE, FLT_NO, FLT_KEY, ORG_FLT_DATE, SCH_DATE,
		BRD_POINT, OFF_POINT, LEG_ORD,SCH_DEP_DATE, SCH_DEP_TIME,
		SCH_ARR_DATE, SCH_ARR_TIME, ACFT_TYPE, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE,FLT_TYPE,hse_bu_ind,prohibit_shc1,prohibit_shc2,prohibit_shc3,auto_assgn_uld)
	  	VALUES(
		#trNo#,#docLineNumber#,UPPER(#flightCarr#),UPPER(#flightNo#),UPPER(#flightKey#),TO_DATE(#orgFltDate#,'MM/DD/YYYY'),
		TO_DATE(#schDate#,'MM/DD/YYYY'), UPPER(#brdPoint#), UPPER(#offPoint#),#legOrder#,TO_DATE(#depDate#,'MM/DD/YYYY'),
		#depTime#,TO_DATE(#arrDate#,'MM/DD/YYYY'),#arrTime#,#aircraftType#,
		#createdUserId#,SYSDATE,#createdUserId#,SYSDATE,#flightType#,#houseBuInd#,#shc1#,#shc2#,#shc3#,#autoAssignUld#)
		
	]]>
	</insert>
	
	<select id="checkForFFM" parameterClass="cargo.cms.edi.ei.bo.ASMMessageBO" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM EDI_FFM_MSG WHERE FLT_KEY=#flightKey# AND FLT_DATE=TO_DATE(#schDate#,'MM/DD/YYYY') AND FFM_STATUS ='P'
	</select>
	
	<select id="checkForPMAN" parameterClass="cargo.cms.edi.ei.bo.ASMMessageBO" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM EXP_PMANIFEST_AWB WHERE FLT_KEY=#flightKey# AND FLT_DATE=TO_DATE(#schDate#,'MM/DD/YYYY') AND FLT_TYPE='E'
	</select>	
	
	
	<select id="getDocLineNo_flt_opr_leg" parameterClass="cargo.cms.edi.ei.bo.ASMMessageBO" resultClass="java.lang.String">
	select doc_line_no as docLineNumber from flt_opr_leg where tr_no=#trNo# and brd_point=UPPER(#brdPoint#) and off_point=UPPER(#offPoint#)	
	</select>
	
		<update id="FLTupdateFLTOPR" parameterClass="cargo.cms.edi.ei.bo.ASMMessageBO">
	<![CDATA[
			UPDATE  FLT_OPR SET ORG_FLT_DATE =TO_DATE(#orgFltDate#,'MM/DD/YYYY'),SCH_DATE=DECODE(#flightType#, 'A', TO_DATE(#destDate#,'MM/DD/YYYY'), TO_DATE(#origDate#,'MM/DD/YYYY')),  ORIG = UPPER(#orig#), ORIG_DATE = TO_DATE(#origDate#,'MM/DD/YYYY'), 
					ORIG_TIME = #origTime#, DEST =  UPPER(#dest#),					
					DEST_DATE = TO_DATE(#destDate#,'MM/DD/YYYY'), DEST_TIME = #destTime#,ACFT_TYPE = nvl(#aircraftType#,ACFT_TYPE),
					SCH_TIME=DECODE(#flightType#, 'A', #destTime#, #origTime#),LM_USER_ID=#createdUserId#,LM_DATE=SYSDATE,CGO_ACFT_TYPE=#cgoAircraftType# 
			WHERE	TR_NO = #trNo#
		]]>
	</update>
	<update id="FLTupdateFLTOPREQT" parameterClass="cargo.cms.edi.ei.bo.ASMMessageBO">
	<![CDATA[
			UPDATE  FLT_OPR SET ACFT_TYPE = nvl(#aircraftType#,ACFT_TYPE), LM_USER_ID=#createdUserId#, LM_DATE=SYSDATE
			WHERE	TR_NO = #trNo#
		]]>
	</update>
	<insert id="insertSSMFLTSCHLOG" parameterClass="cargo.cms.edi.ei.bo.ASMMessageBO" >
		insert into SSM_FLT_SCH_LOG(FLT_KEY,FLT_DATE,SSM_TYPE,FLT_SCH_TR_NO,CR_DATE) values(#flightKey#,TO_DATE(#orgFltDate#,'MM/DD/YYYY'),#ssmType#,null,SYSDATE) 
	</insert>
	<select id="selectExistingFltOprLeg"  parameterClass="cargo.cms.edi.ei.bo.ASMMessageBO"  resultClass="cargo.cms.edi.ei.bo.ASMMessageBO">
	<![CDATA[
		  select TO_CHAR(ORG_FLT_DATE,'MM/DD/YYYY') orgFltDate,TO_CHAR(SCH_DATE,'MM/DD/YYYY') schDate,BRD_POINT brdPoint,OFF_POINT offPoint,TO_CHAR(SCH_DEP_DATE,'MM/DD/YYYY') depDate,SCH_DEP_TIME depTime,TO_CHAR(SCH_ARR_DATE,'MM/DD/YYYY') arrDate,SCH_ARR_TIME arrTime
    from FLT_OPR_LEG where TR_NO =#trNo#  order by leg_ord
		]]>
   	</select>
   		<select id="getDefaultFltOprVal" parameterClass="cargo.cms.edi.ei.bo.ASMMessageBO" resultClass="java.lang.String">
   	select STRAGG(STRINGDELIM(rule_code||'-'||rule_value,',')) from cmsrules where rule_code in
   	<iterate property="module" open="(" close=")" conjunction=",">
	             #module[]#  
	    	</iterate>	
	</select>
		<update id="FLTupdateFLTOPRLEG" parameterClass="cargo.cms.edi.ei.bo.ASMMessageBO">
		UPDATE	FLT_OPR_LEG SET ORG_FLT_DATE =TO_DATE(#orgFltDate#,'MM/DD/YYYY'),SCH_DATE=TO_DATE(#schDate#,'MM/DD/YYYY'),BRD_POINT =  UPPER(#brdPoint#), OFF_POINT =  UPPER(#offPoint#),
				SCH_DEP_DATE = TO_DATE(#depDate#,'MM/DD/YYYY'), SCH_DEP_TIME = #depTime#,
				SCH_ARR_DATE = TO_DATE(#arrDate#,'MM/DD/YYYY'), SCH_ARR_TIME = #arrTime#,
				LM_USER_ID=#createdUserId#, LM_DATE=SYSDATE				
		WHERE	TR_NO = #trNo# AND DOC_LINE_NO = #docLineNumber#
	</update>
	<update id="updateFltOprLegEQT" parameterClass="cargo.cms.edi.ei.bo.ASMMessageBO">
		UPDATE FLT_OPR_LEG SET ACFT_TYPE = #aircraftType#, LM_USER_ID=#createdUserId#, LM_DATE=SYSDATE 				
		WHERE	TR_NO = #trNo# 
	</update>
	<delete id="FLTdeleteFLTOPRLEG" parameterClass="java.lang.String">
	<![CDATA[
			DELETE FLT_OPR_LEG WHERE TR_NO = #trNo# 
		]]>
	</delete>

	<delete id="FLTdeleteFLTOPREVENT" parameterClass="java.lang.String">
	<![CDATA[
			DELETE FLT_OPR_EVENTS WHERE TR_NO = #trNo# 
		]]>
	</delete>

	<delete id="FLTdeleteFLTOPRSEG" parameterClass="java.lang.String">
	<![CDATA[
			DELETE FLT_OPR_SEG WHERE TR_NO = #trNo# 
		]]>
	</delete>

	<delete id="FLTdeleteFLTOPR" parameterClass="java.lang.String">
	<![CDATA[
			DELETE FLT_OPR WHERE TR_NO = #trNo# 
		]]>
	</delete>
	<update id="cancelFltOpr" parameterClass="cargo.cms.edi.ei.bo.ASMMessageBO">
		UPDATE FLT_OPR SET STATUS = #flightStatus#, LM_USER_ID=#createdUserId#, LM_DATE=SYSDATE 				
		WHERE	TR_NO = #trNo# 
	</update>
       <select id="get_flt_sch_hdr_asm" parameterClass="cargo.cms.edi.ei.bo.ASMMessageBO" resultClass="cargo.cms.edi.ei.bo.ASMMessageBO">
	select * from (select tr_no as maxTrNo, wh_level whLevel,flt_module1 as primaryModule,flt_module2 as secModule,
	exp_flt_module1 as expPrimaryModule, exp_flt_module2 as expSecModule, chkout_area chkoutarea,svc_type as serviceType,cgo_acft_type as cgoAircraftType, to_ind as transportInd,jv_code as jvCode,rho_id rhoId 
	from flt_sch where flt_key=#flightKey# and outstanding='N' order by to_number (tr_no) desc ) where rownum=1	
	</select>
	<select id="get_flt_opr" parameterClass="cargo.cms.edi.ei.bo.ASMMessageBO" resultClass="java.lang.Integer">
	select count(1) from flt_opr where  flt_key=#flightKey# and sch_date=TO_DATE(#schDate#,'MM/DD/YYYY') and flt_type='A'	
	</select>
	<select id="get_flt_sch_dtl_asm" parameterClass="cargo.cms.edi.ei.bo.ASMMessageBO" resultClass="cargo.cms.edi.ei.bo.ASMMessageBO">
	select * from (select hse_bu_ind as houseBuInd,prohibit_shc1 shc1, prohibit_shc2 shc2,prohibit_shc3 shc3 ,auto_assgn_uld autoAssignUld,acft_type aircraftType from flt_sch_leg where
 	flt_key=#flightKey# and brd_point=#brdPoint# and off_point=#offPoint# and tr_no=#maxTrNo# order by to_number (doc_line_no) desc ) where rownum=1
	</select>
<!--EDI INBOUND.......ASM queries end-->
<!-- EDI INBOUND....FDD    Queries Start   -->
	<insert id="saveDGDRecord" parameterClass="cargo.cms.edi.ei.bo.FDDMessageBO" >
   		INSERT INTO EXP_DGD (UN_TR_NO,AWB_NO,AWB_DATE,UN_ID,PGP,DPCS,QTY,QU,OPCS,OP_ON,PINS,PTYP_MATERIAL,PTYP_TYPE,PSN,SPL_CODE1,TECH_NM,SHIPPER,DRILL_CODE,CL_DV,SR1,SR2,RADIO_ACTIVE,ACTIVITY,TI,HGT,ACTION,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,PKG_PCS) VALUES
		(EXP_DGD_SEQNO.nextVal,#awbNo#,(SELECT NVL(pkg_common.get_awb_date(#awbNo#,'E'), TO_CHAR(SYSDATE,'DDMONYY')) FROM DUAL),#unId#,#pgp#,#dgdPcs#,#qtyPcs#,#qu#,#opcs#,#opId#,#pins#,#ptypeMat#,#ptype#,#psn#,#splCode1#,#techNm#,#shprName#,#drillCode#,#cldv#,#sr1#,#sr2#,#radioActvty#,#activity#,#ti#,#hgt#,#action#,'SYSUSER',sysdate,'SYSUSER',sysdate,NVL(#pkgNos#,1))
   	</insert>
   	<insert id="saveAPIOGrp" parameterClass="cargo.cms.edi.ei.bo.FDDMessageBO" >
   		Insert into EXP_DGD_APIO 
		(APIO_ID,AWB_NO,AWB_DATE,APIO_PTYP_MATERIAL,APIO_PTYP_TYPE,APIO_PKG,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE) values 
		(#apioId#,#awbNo#,(SELECT NVL(pkg_common.get_awb_date(#awbNo#,'E'), TO_CHAR(SYSDATE,'DDMONYY')) FROM DUAL),#ptypeMat#,#ptype#,#dgdPcs#,'SYSUSER',sysdate,'SYSUSER',sysdate)
	</insert>
	<insert id="saveOpGrp" parameterClass="cargo.cms.edi.ei.bo.FDDMessageBO" >
   		Insert into EXP_DGD_OP 
		(OVERPACK_ID,AWB_NO,AWB_DATE,OVERPACK_PTYP_MATERIAL,OVERPACK_PTYP_TYPE,OVERPACK_PKG,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE) values 
		(#opId#,#awbNo#,(SELECT NVL(pkg_common.get_awb_date(#awbNo#,'E'), TO_CHAR(SYSDATE,'DDMONYY')) FROM DUAL),#ptypeMat#,#ptype#,#dgdPcs#,'SYSUSER',sysdate,'SYSUSER',sysdate)
	</insert>
<!--EDI INBOUND.......FDD queries end-->
	<!-- EDI INBOUND....ISAC     Queries Start   -->


	<select id="selectqueryisacdoclinenobytrnoandhawbno"
		parameterClass="cargo.cms.edi.ei.bo.FHLHawbBO"
		resultClass="java.lang.Integer">

		SELECT MAX(DOC_LINE_NO) AS docLineNo FROM EDI_FHL_HAWB WHERE
		TR_NO = #trNo# AND HAWB_NO = #hawbNo#

	</select>

	<select id="selectqueryisactotalhawbsbyawbno"
		parameterClass="cargo.cms.edi.ei.bo.FHLBO"
		resultClass="java.lang.Integer">

		SELECT COUNT(*) FROM EDI_FHL_HAWB WHERE TR_NO IN (SELECT MAX(TR_NO) AS trNo
		FROM EDI_FHL awb WHERE AWB_NO = #awbNo# AND AWB_ORG = #awbOrg#
		AND AWB_DEST = #awbDest# AND SI_TYPE = #siType#
		
		<dynamic prepend="AND">
		<isNotEmpty prepend="AND" property="fhlOwner">
		FHL_OWNER = #fhlOwner#
		</isNotEmpty>
		</dynamic> 
		)
		
	</select>
	
	<select id="selectqueryisachawbsbyawbno"
		parameterClass="java.util.HashMap"
		resultClass="cargo.cms.edi.ei.bo.FHLHawbBO">

		SELECT TR_NO as trNo , DOC_LINE_NO AS docLineNo , HAWB_NO AS
		hawbNo FROM EDI_FHL_HAWB WHERE TR_NO IN 
		(SELECT TR_NO AS trNo	FROM EDI_FHL awb WHERE AWB_NO = #awbNo# 
		AND AWB_ORG = #awbOrg#	AND AWB_DEST = #awbDest# AND SI_TYPE = #siType# 

		<dynamic prepend="AND">
		<isNotEmpty prepend="AND" property="fhlOwner">
		FHL_OWNER = #fhlOwner#
		</isNotEmpty>
		</dynamic> 
		)		
		<dynamic prepend="AND">
			<iterate open="(" property="hwbNoList" close=")"
				conjunction="OR">
				HAWB_NO = #hwbNoList[]#
			</iterate>
		</dynamic>

	</select>

	<select id="selectqueryisachawbbytrno"
		parameterClass="cargo.cms.edi.ei.bo.FHLHawbBO"
		resultClass="cargo.cms.edi.ei.bo.FHLHawbBO">

		SELECT TR_NO as trNo , DOC_LINE_NO AS docLineNo , HAWB_NO AS hawbNo , FHL_OWNER AS fhlOwner FROM EDI_FHL_HAWB hawb WHERE
		TR_NO = #trNo# AND SOURCE =#source#
		

	</select>

	<select id="selectqueryisaccontactsbytrno"
		parameterClass="cargo.cms.edi.ei.bo.FHLBO"
		resultClass="cargo.cms.edi.ei.bo.FHLContactBO">

		SELECT DOC_LINE_NO AS docLineNo , CONT_ID AS contactId ,
		CCNT_NAME AS contactNo , CONT_TYPE AS contactType FROM
		EDI_FHL_CONTACT fhlcontacts WHERE TR_NO = #trNo#
	</select>
	<select id="selectqueryisacmaxtrnobyawbdata"
		parameterClass="cargo.cms.edi.ei.bo.FHLBO"
		resultClass="cargo.cms.edi.ei.bo.FHLBO">
		SELECT MAX(TR_NO) AS trNo FROM EDI_FHL WHERE AWB_NO = #awbNo#	AND SI_TYPE = #siType#
	</select>

	<insert id="insertqueryisacawb"
		parameterClass="cargo.cms.edi.ei.bo.FHLBO">

		INSERT INTO EDI_FHL ( TR_NO, MSG_SEQ_NUM , MSG_VER, SI_TYPE,
		COPY_NO, AWB_NO, AWB_DATE, AWB_ORG, AWB_DEST, AWB_PCS, AWB_WT,
		AWB_WT_CODE, LM_USER_ID, LM_DATE, LM_VER, TOTAL_COUNT,
		FHL_STATUS, SUCCESS_MSGS , FLT_CARR, FLT_NO, FLT_ETA_DATE,
		FLT_ETA_TIME , FHL_OWNER, TR_TYPE )

		VALUES(#trNo#, #msgSeqNo# , #msgVer#, #siType#,
		#copyNo#, #awbNo#, to_date(#awbDate#,'DDMONYY'), #awbOrg#, #awbDest#, #awbPcs#,
		#awbWt#, #awbWtCode#, 'SYSUSER' , SYSDATE , 1 ,#totalSplitMsgs# ,
		#status# , #successMsgsSeqNo# , #fltCarrierCode# , #fltNo# ,
		TO_DATE(#fltArrivalDate# ,'MM/DD/YYYY'),
		TO_DATE(#fltArrivalTime# ,'MM/DD/YYYY') ,#fhlOwner#, 'MEFHL')

	</insert>

	<parameterMap id="ediAimsFhlAwbInsertParMap" class="map">		
		<parameter property="trNo" jdbcType="VARCHAR" javaType="java.lang.String"	mode="OUT"/>
		<parameter property="msgVer" jdbcType="VARCHAR"	javaType="java.lang.String" mode="IN"/>
		<parameter property="awbNo" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="awbOrg" jdbcType="VARCHAR"   javaType="java.lang.String" mode="IN"/>
		<parameter property="awbDest"  jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="awbPcs" jdbcType="VARCHAR" javaType="java.lang.String"	mode="IN"/>
		<parameter property="awbWt" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="fhlOwner" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="siType"  jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="fltCarr"  jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="fltNo"  jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="fltDate"  jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="transmissionDate"  jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="transmissionTime"  jdbcType="NUMBER" javaType="java.lang.String" mode="IN"/>
		<parameter property="userID"  jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>

	</parameterMap>

	<procedure id="ediAimsFhlAwbInsert" parameterMap="ediAimsFhlAwbInsertParMap" >
		{? = call PKG_FHL.FUN_INS_FHL(?,?,?,?,?,?,?,?,?,?,?,?,?,?)}
	</procedure>
	
	<insert id="insertqueryisachawb"
		parameterClass="cargo.cms.edi.ei.bo.FHLHawbBO">
		INSERT INTO EDI_FHL_HAWB ( TR_NO, DOC_LINE_NO, HAWB_NO,
		HAWB_ORG, HAWB_DEST, HAWB_PCS, HAWB_NET_WT, HAWB_WT_CODE,
		FREE_TEXT_DESC1, FREE_TEXT_DESC2, FREE_TEXT_DESC3,
		FREE_TEXT_DESC4, FREE_TEXT_DESC5, FREE_TEXT_DESC6,
		FREE_TEXT_DESC7, FREE_TEXT_DESC8, FREE_TEXT_DESC9, SPL_CODE1,
		SPL_CODE2, SPL_CODE3, SPL_CODE4, SPL_CODE5, SPL_CODE6,
		SPL_CODE7, SPL_CODE8, MANIFEST_DESC, LM_USER_ID, LM_DATE,
		LM_VER, SHPR_NAME, SHPR_ADD1, SHPR_ADD2, SHPR_ADD3, SHPR_ADD4,
		SHPR_ADD5, SHPR_PLACE, SHPR_CTRY_CODE, SHPR_STATE_PROVINCE,
		SHPR_PIN_CODE, CSGNE_NAME, CSGNE_ADD1, CSGNE_ADD2, CSGNE_ADD3,
		CSGNE_ADD4, CSGNE_ADD5, CSGNE_PLACE, CSGNE_CTRY_CODE,
		CSGNE_STATE_PROVINCE, CSGNE_PIN_CODE, NFY_NAME, NFY_ADD1,
		NFY_ADD2, NFY_ADD3, NFY_ADD4, NFY_ADD5, NFY_PLACE,
		NFY_CTRY_CODE, NFY_PIN_CODE, NFY_LICENSE1, NFY_LICENSE2,
		NFY_LICENSE3, NFY_LICENSE4, NFY_LICENSE5, NFY_PERMIT1,
		NFY_PERMIT2, NFY_PERMIT3, NFY_PERMIT4, NFY_PERMIT5,
		DECLN_CURR_CODE, DECLN_WT_VALN_PPCC_I, DECLN_OTH_CHRG_PPCC_I,
		DECLN_CARR, DECLN_CTM, DECLN_INSURCE, DECLN_FREE_TEXT, ACCS_I,
		SOURCE, RMK_CTM, FHL_OWNER,HBS_SLAC ,HTS_COMM_CODE1 ,HTS_COMM_CODE2,
		HTS_COMM_CODE3 ,HTS_COMM_CODE4 ,HTS_COMM_CODE5, HTS_COMM_CODE6 ,
		HTS_COMM_CODE7 , HTS_COMM_CODE8 , HTS_COMM_CODE9)

		VALUES (#trNo#, #docLineNo#, #hawbNo#, #hawbOrg#,
		#hawbDest#, #hawbPcs#, #hawbWeight#, #hawbWeightCode#,
		#freeTextDesc1#, #freeTextDesc2#,#freeTextDesc3#,
		#freeTextDesc4#, #freeTextDesc5#, #freeTextDesc6#,
		#freeTextDesc7#, #freeTextDesc8#, #freeTextDesc9#, #splCode1#,
		#splCode2#, #splCode3#, #splCode4#, #splCode5#, #splCode6#,
		#splCode7#, #splCode8#, #manifestDesc#, 'SYSUSER' , SYSDATE , 1 ,
		#shipperName#, #shipperAddress1#, #shipperAddress2#,
		#shipperAddress3#,#shipperAddress4#, #shipperAddress5#,
		#shipperPlace#, #shipperCountryCode#, #shipperState#,
		#shipperPostalCode#, #consigneeName#, #consigneeAddress1#,
		#consigneeAddress2#, #consigneeAddress3#, #consigneeAddress4#,
		#consigneeAddress5#, #consigneePlace#, #consigneeCountryCode#,
		#consigneeState#,#consigneePostalCode#, #nfyName#, #nfyAdd1#,
		#nfyAdd2#, #nfyAdd3#, #nfyAdd4#, #nfyAdd5#, #nfyPlace#,
		#nfyCtryCode#, #nfyPinCode#, #nfyLicense1#, #nfyLicense2#,
		#nfyLicense3#, #nfyLicense4#, #nfyLicense5#, #nfyPermit1#,
		#nfyPermit2#, #nfyPermit3#, #nfyPermit4#, #nfyPermit5#,
		#declnCurrencyCode#, #declnWtValnPpccInd#,
		#declnOtherChrgPpccInd#, #declnCarrier#, #declnCustom#,
		#declnInsurance#, #declnFreeText#, 'I', #source#, #rmkCtm#,
		#fhlOwner#, #hbsSLAC# , #htsCommCode1# , #htsCommCode2# ,
		#htsCommCode3# , #htsCommCode4# , #htsCommCode5# , #htsCommCode6#  ,
		#htsCommCode7#  , #htsCommCode8#  ,  #htsCommCode9#)
	</insert>

	<parameterMap id="ediAimsFhlHAwbInsertParMap" class="map">		
		<parameter property="docLineNo" jdbcType="VARCHAR" javaType="java.lang.String"	mode="OUT"/>				
		<parameter property="trNo" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="hawbNo" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="hawbOrg" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>		
		<parameter property="hawbDest" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="hawbPcs" jdbcType="VARCHAR" javaType="java.lang.String"	mode="IN"/>
		<parameter property="hawbWeight" jdbcType="VARCHAR"	javaType="java.lang.String" mode="IN"/>

		<parameter property="freeTextDesc1" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="freeTextDesc2" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>				
		<parameter property="freeTextDesc3" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="freeTextDesc4" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="freeTextDesc5" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="freeTextDesc6" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="freeTextDesc7" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="freeTextDesc8" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="freeTextDesc9" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>

		<parameter property="splCode1" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="splCode2" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>				
		<parameter property="splCode3" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="splCode4" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="splCode5" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="splCode6" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="splCode7" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="splCode8" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>

		<parameter property="manifestDesc" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>

		<parameter property="shipperName" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>		
		<parameter property="shipperAddress1" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="shipperAddress2" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>				
		<parameter property="shipperAddress3" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="shipperAddress4" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="shipperAddress5" jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="shipperPlace" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="shipperCountryCode" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>				
		<parameter property="shipperState" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="shipperPostalCode" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		
		<parameter property="consigneeName" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>		
		<parameter property="consigneeAddress1" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="consigneeAddress2" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>				
		<parameter property="consigneeAddress3" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="consigneeAddress4" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="consigneeAddress5" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="consigneePlace" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="consigneeCountryCode" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>				
		<parameter property="consigneeState" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="consigneePostalCode" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		
		<parameter property="nfyName" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>		
		<parameter property="nfyAdd1" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="nfyAdd2" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>				
		<parameter property="nfyAdd3" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="nfyAdd4" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="nfyAdd5" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="nfyPlace" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="nfyCtryCode" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="nfyState" jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>						
		<parameter property="nfyPinCode" jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>

		<parameter property="nfyLicense1" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="nfyLicense2" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>				
		<parameter property="nfyLicense3" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="nfyLicense4" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="nfyLicense5" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		
		<parameter property="nfyPermit1" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="nfyPermit2" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>				
		<parameter property="nfyPermit3" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="nfyPermit4" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="nfyPermit5" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		
		<parameter property="declnCurrencyCode" jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>
		<parameter property="declnWtValnPpccInd" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>				
		<parameter property="declnOtherChrgPpccInd" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="declnCarrier" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="declnCustom" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>		
		<parameter property="declnInsurance" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="declnFreeText" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		
		<parameter property="accsI" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="source" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>				
		<parameter property="rmkCtm" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="fhlOwner" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>	
		<parameter property="remark" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>		
		
		<parameter property="nfyLicense6" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>				
		<parameter property="nfyLicense7" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="nfyLicense8" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="nfyLicense9" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		
		<parameter property="nfyPermit6" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>				
		<parameter property="nfyPermit7" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="nfyPermit8" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="nfyPermit9" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>

		<parameter property="hbsSLAC" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>				
		<parameter property="htsCommCode1" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="htsCommCode2" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="htsCommCode3" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>		
		<parameter property="htsCommCode4" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>				
		<parameter property="htsCommCode5" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="htsCommCode6" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="htsCommCode7" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="htsCommCode8" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="htsCommCode9" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>

		<parameter property="cons_code" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>	
		<parameter property="submit_date" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="nature_of_goods" jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN"/>	
		<parameter property="type_of_package" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		
		<parameter property="value_decl1" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="value_decl2" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="value_decl3" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>		
		<parameter property="value_decl4" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>				
		<parameter property="value_decl5" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="value_decl6" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="value_decl7" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="value_decl8" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="value_decl9" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="value_decl10" jdbcType="VARCHAR"  mode="IN"/>
		<parameter property="userID" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="functionCode" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		
		<parameter property="fltCarr"  jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="fltNo"  jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="fltDate"  jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="transmissionDate"  jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="transmissionTime"  jdbcType="NUMBER" javaType="java.lang.String" mode="IN"/>
		
		<parameter property="errorMsg" jdbcType="VARCHAR" javaType="java.lang.String" mode="INOUT"/>
	</parameterMap>
	 
	<procedure id="ediAimsFhlHAwbInsert" parameterMap="ediAimsFhlHAwbInsertParMap" >
		{? = call PKG_FHL.FUN_INS_HAWB(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)}
	</procedure>
		
	<insert id="insertqueryisaccontacts"
		parameterClass="cargo.cms.edi.ei.bo.FHLContactBO">
		INSERT INTO EDI_FHL_CONTACT ( TR_NO, DOC_LINE_NO, HDOC_LINE_NO ,
		CONT_ID, CCNT_NAME, CONT_TYPE ,LM_USER_ID, LM_DATE, LM_VER)
		VALUES (#trNo#, EDI_FHL_CONTACT_SEQ.nextval, #hdocLineNo#,
		#contactId#, #contactNo#, #contactType# , 'SYSUSER' , SYSDATE , 1)
	</insert>

	<parameterMap id="ediAimsFhlContactInsertParMap" class="map">		
		<parameter property="status" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
		<parameter property="trNo" jdbcType="VARCHAR" javaType="java.lang.String"	mode="IN"/>
		<parameter property="hdocLineNo" jdbcType="VARCHAR" javaType="java.lang.String"	mode="IN"/>
		<parameter property="contactId" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="contactNo" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="contactType" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>		
		<parameter property="userID" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="functionCode" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
	</parameterMap>
	
	<procedure id="ediAimsFhlContactInsert" parameterMap="ediAimsFhlContactInsertParMap" >
		{? = call PKG_FHL.FUN_INS_CONTACT(?,?,?,?,?,?,?)}
	</procedure>

	<delete id="deletequeryisacawbbytrno"
		parameterClass="cargo.cms.edi.ei.bo.FHLBO">
		DELETE FROM EDI_FHL WHERE TR_NO = #trNo# AND SI_TYPE = #siType#		
	</delete>

	<parameterMap id="ediAimsFhlDeleteMap" class="map">		
		<parameter property="status" jdbcType="VARCHAR"  mode="OUT"/>	
		<parameter property="awbNo" jdbcType="VARCHAR"		mode="IN"/>
		<parameter property="hawbNo" jdbcType="VARCHAR"	mode="IN"/>
		<parameter property="fhlOwner" jdbcType="VARCHAR"  mode="IN"/>
		<parameter property="errorMsg" jdbcType="VARCHAR"	mode="OUT"/>			
	</parameterMap>
	<procedure id="ediAimsFhlDelete" parameterMap="ediAimsFhlDeleteMap" >
		{? = call PKG_FHL.FUN_DEL_HAWB(?,?,?,?)}
	</procedure>

	<delete id="deletequeryisachawbbytrno"
		parameterClass="cargo.cms.edi.ei.bo.FHLBO">
		DELETE FROM EDI_FHL_HAWB WHERE TR_NO = #trNo#
	</delete>

	<delete id="deletequeryisaccontactsbytrno"
		parameterClass="cargo.cms.edi.ei.bo.FHLBO">
		DELETE FROM EDI_FHL_CONTACT WHERE TR_NO = #trNo#
	</delete>

	<delete id="deletequeryisachawbbytrnoandhawbno"
		parameterClass="cargo.cms.edi.ei.bo.FHLHawbBO">
		DELETE FROM EDI_FHL_HAWB WHERE TR_NO = #trNo# AND HAWB_NO =
		#hawbNo#
	</delete>

	<delete id="deletequeryisaccontactsbytrnoanddoclineno"
		parameterClass="cargo.cms.edi.ei.bo.FHLHawbBO">
		DELETE FROM EDI_FHL_CONTACT WHERE TR_NO = #trNo# AND
		HDOC_LINE_NO = #docLineNo#
	</delete>	
	
	<update id="ediAimsFhlHAwbUpdate" parameterClass="java.util.HashMap">
		UPDATE EDI_FHL_HAWB 
		SET CHARGE_AGENT = 'Y'
		WHERE TR_NO = #trNo# AND DOC_LINE_NO = #docLineNo#
	</update>

	<insert id="inserCuexpProcsInfo" parameterClass="java.util.HashMap">
		INSERT INTO CUSEXP_PROCS_INFO(TR_NO,AWB_NO,TRANSACTION_NO,HAWB_NO, EXT_USER_ID,FILE_NAME,ERR_MSG, HAWB_PROCESSED, HAWB_REJECTED, EXPIRY_DATE) 
		VALUES(CUSEXP_PROCS_INFO_SEQ.NEXTVAL,#AWB_NO#,#TRANSACTION#,#HAWB#, #USER#,#FILE_NAME#,#ERR#, #PROCCESSED#, #REJECTED#, SYSDATE + 1)
	</insert>
		
	<update id="updateUploadProcessStatusSTART" parameterClass="java.lang.String">
		UPDATE UPLOAD_PROCESS_CTRL SET PROCESS_STATUS = 'P' WHERE SEQ_NO = #seqNumber#
	</update>
	
	<update id="updateUploadProcessStatusEND" parameterClass="java.lang.String">
		UPDATE UPLOAD_PROCESS_CTRL SET PROCESS_STATUS = 'C',END_TIME = SYSDATE WHERE SEQ_NO = #seqNumber#
	</update>
	
	<select id="getFileUploadProcessIND" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT count(*) FROM UPLOAD_PROCESS_CTRL WHERE END_TIME is null
		<isNotEmpty property="AGENT_CHK">
			<isNotEmpty property="AGENT_NAME">
				<isEqual property="AGENT_CHK" compareValue="Y">
					AND user_name = #AGENT_NAME#
			    </isEqual>			
			</isNotEmpty>
		</isNotEmpty>
	</select>
	
	<select id="checkSameTxtFileIsInProcess" parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT count(*) FROM UPLOAD_PROCESS_CTRL WHERE END_TIME is null AND file_name like '%_' || #fileNamechk#
	</select>
	
	
	<update id="updateEndDateForTMZIP" parameterClass="java.lang.String">
		UPDATE UPLOAD_PROCESS_CTRL SET PROCESS_STATUS = 'C', END_TIME = SYSDATE WHERE SEQ_NO = #seqNumber#
	</update>
	
	<insert id="InsertFileUploadProcessDtls" parameterClass="java.util.HashMap">
		INSERT INTO UPLOAD_PROCESS_CTRL (SEQ_NO,PROCESS_NAME,USER_NAME,FILE_PATH,FILE_NAME,START_TIME,END_TIME,PROCESS_STATUS)  
		VALUES (#SEQ#,#PROCESS_NAME#,#USER#,#FILE_PATH#,#FILE_NAME#,SYSDATE,'',#PROCESS_STATUS#)
	</insert>
		
	<!-- EDI INBOUND.....ISAC     Queries End   -->

	<!-- EDI INBOUND....FWB  Queries Start-->

	<insert id="insertEdiFwb"
		parameterClass="cargo.cms.edi.ei.bo.FWBDetailBO">
		INSERT INTO EDI_FWB ( AWB_NO , AWB_DATE, ORG , DES , SHIP_DESC_C , PCS ,
		WGT_UNIT , WGT ,TR_NO , MSG_VER , RTG_DES_CARR ,
		RTG_ONWARD_CODE1 , RTG_ONWARD_CODE2 , CR_USER_ID , CR_DATE ,
		LM_USER_ID , LM_DATE , MSG_SEQ_NUM, COPY_NO,
		TOTAL_COUNT,FWB_STATUS, SHPR_ACC_NO , SHPR_NAME , SHPR_ADDR ,SHPR_ADDR2,
		SHPR_PLACE , SHPR_STATE_PROVINCE , SHPR_CTRY_CODE ,
		SHPR_PIN_CODE , CSGNE_ACC_NO , CSGNE_NAME , CSGNE_ADDR ,CSGNE_ADDR2,
		CSGNE_PLACE , CSGNE_STATE_PROVINCE, CSGNE_CTRY_CODE , CSGNE_PIN_CODE ,
		CVD_ISO_CURR_CODE , CVD_CHG_CODE , CVD_CHG_DECL_WGT ,
		CVD_CHG_DECL_OTH , CVD_CHG_CARR_IND , CVD_CHG_CARR_VAL ,
		CVD_CHG_CUST_VAL , CVD_CHG_CUST_IND , CVD_CHG_INSUR_VAL ,
		CVD_CHG_INSUR_IND , PPD_TOTAL_WT_AMT , PPD_VALUE_VC_AMT ,
		PPD_TAXES_TX_AMT , PPD_TOTAL_OA_AMT , PPD_TOTAL_OC_AMT ,
		PPD_SUMMY_CT_AMT , COL_TOTAL_WT_AMT , COL_VALUE_VC_AMT ,
		COL_TAXES_TX_AMT , COL_TOTAL_OA_AMT , COL_TOTAL_OC_AMT ,
		COL_SUMMY_CT_AMT , CER_SIGNATURE , ISU_AWB_ISS_DATE ,
		ISU_AWB_ISS_PLACE , ISU_SIGNATURE , REF_PART_ID , REF_PART_CODE
		, REF_PART_APT_CODE , REF_OFFICE_DESI , REF_COMP_DESI ,
		REF_APT_CODE , CDC_CURR_RATE , CDC_CC_INDES_AMT ,
		CDC_CC_ATDES_AMT , CDC_TOTAL_CHG_AMT , COR_CUST_ORI_CODE ,
		OSI_SERVICE_INFO1 , OSI_SERVICE_INFO2 , OSI_SERVICE_INFO3 ,
		RTG_APT_CODE , RTG_ONWARD_CARR1 , RTG_ONWARD_CARR2 , FLT_DATE1 ,
		FLT_DATE2 , FLT_NUM1 , FLT_NUM2, FLT_KEY1, FLT_KEY2 , FLT_CARR1, FLT_CARR2, AGENT_ACC_NO , AGENT_IATA_CODE
		, AGENT_IATA_ADDR , AGENT_PART_ID , AGENT_NAME , AGENT_PLACE ,
		SII_CHG_AMT , SII_CASS_IND, SPH_SPL_CODE1, SPH_SPL_CODE2,
		SPH_SPL_CODE3, SPH_SPL_CODE4, SPH_SPL_CODE5, SPH_SPL_CODE6,
		SPH_SPL_CODE7, SPH_SPL_CODE8, SPH_SPL_CODE9, NOM_NAME,
		NOM_SPACE,SRI_REF_NO, SRI_SUPP_SHP_INFO1, SRI_SUPP_SHP_INFO2,
		AGENT_SPL_SERV1, AGENT_SPL_SERV2, AGENT_SPL_SERV3, ARD_FILE_REF,
		NOTIFY_NAME,NOTIFY_ADDR,NOTIFY_ADDR2, NOTIFY_PLACE,NOTIFY_CTRY_CODE,
		NOTIFY_STATE_PROVINCE,NOTIFY_PIN_CODE, TR_TYPE, RA_NO,COI_CASS_IND, COI_CASS_AMT_FACT, COI_CASS_PER_FACT, 
		CDC_ISO_CURR_CODE,vol_code,volume,density_ind,density_grp,REF_FILE_REF
		)

		VALUES( #awbNo# ,#awbDate#, #origin# , #destination#, #shpmDescCode# ,
		#totalPieces# , #weightCode# , #totalWeight# ,
		#trNo#, #msgVerNo# , #routeCarrierCode# ,
		#onwardAirportCode# , #onwardAirportCode2# , 'SYSUSER' , SYSDATE
		, 'SYSUSER' , SYSDATE , #msgSeqNo#, #copyNo#,
		#totalSplitMsgs#, #status#,#shipperAcctNo# , #shipperName# ,
		#shipperAddr# ,#shipperAddr2#, #shipperPlace# , #shipperState# ,
		#shipperCountryCode# , #shipperPostalCode# , #consigneeAcctNo# ,
		#consigneeName# , #consigneeAddr# ,#consigneeAddr2#, #consigneePlace# , #consigneeState#, 
		#consigneeCountryCode# , #consigneePostalCode# , #declnCurrCode#
		, #declnChargeCode# , #declnWtValnInd# , #declnOtherChrgInd# ,
		#declnCarrierInd# , #declnCarrier# , #declnCustom# ,
		#declnCustomInd# , #declnInsurance# , #declnInsuranceInd# ,
		#ppccWeightChrg# , #ppccValnChrg# , #ppccTaxes# ,
		#ppccOtherChrgDueAgent# , #ppccOtherChrgDueCarrier# ,
		#ppccTotalChrg# , #colWeightChrg# , #colValnChrg# , #colTaxes# ,
		#colOtherChrgDueAgent# , #colOtherChrgDueCarrier# ,
		#colTotalChrg# , NVL(#shpSignature#,#shprCertification#) , to_DATE(#executionDate#,'DDMONYY') ,
		#executionPlace# , #executionSignature# , #sendrPartiI# ,
		#sendrPartiC# , #sendrPartAirpC# , #sendrOffFuncDesg# ,
		#sendrOffCoDesg# , #sendrOffAirpC# ,#currConverExchangeRate# ,
		#currConverDestChrg# , #currConverTotalDestChrg# ,
		#currConverTotalChrg# , #ctmOrgCode# , #otherServiceInfo# ,
		#otherServiceInfo2# , #otherServiceInfo3# , #routeAirportCode# ,
		#onwardCarrierCode# , #onwardCarrierCode2# , #flightDate# ,
		#flightDate2# , #flightNo# , #flightNo2# ,#flightKey#, #flightKey2#, #fltCarrierCode# , #fltCarrierCode2#, #agentAcctNo# ,
		#agentIATACode# , #agentCASSAddr# , #agentParticipantCode# ,
		#agentName# , #agentPlace#, #chargeAmount#, #caasIndicator#,
		#specialHandCode1#, #specialHandCode2#, #specialHandCode3#,
		#specialHandCode4#, #specialHandCode5#, #specialHandCode6#,
		#specialHandCode7#, #specialHandCode8#, #specialHandCode9#,
		#nomName#, #nomPlace#, #shipRefNumber#,
		#shipSupplementaryInfo1#,
		#shipSupplementaryInfo2#,#specialServiceRequest#,
		#specialServiceRequest2#,
		#specialServiceRequest3#,#fileReference#,
		#notifyName#,#notifyAddr#,#notifyAddr2#, #notifyPlace#,#notifyCountryCode#,
		#notifyState#,#notifyPostalCode#, 'MEFWB', #raNumber#,#commissionIndicator#,#cassSettlementFactorAmount#,#cassSettlementFactorPercentage#,
		#currConverChrgDestCurr#,#volCode#,#volAmount#,#densityIndicator#,#densityGroup#,#sendrOffFileRefNo#)
	</insert>

	<insert id="insertEdiFwbrate"
		parameterClass="cargo.cms.edi.ei.bo.FWBRateBO">
		INSERT INTO EDI_FWB_RATE ( TR_NO, DOC_LINE_NO, CR_USER_ID,
		CR_DATE, LM_USER_ID, LM_DATE, RATE_PCS, RATE_GWT_CODE, RATE_GWT,
		RATE_CL_CODE, RATE_COMM_N, RATE_CHRGBLE_WT, RATE_CHRG_RATE, RATE_CHRG_A,
		RATE_GOODS_DATA_I, RATE_GOODS_NATR, RTD_CONS_NOG,
		RTD_AWB_WGT_UNIT, RTD_AWB_WGT, RTD_AWB_DIM_UNIT, LENGTH, WIDHT,
		HEIGHT, PCS, RTD_AWB_VOL_CODE, RTD_AWB_VOL_AMT, RTD_ULD_CARR,RTD_ULD_TYPE,
		RTD_ULD_NUM, RTD_SLAC, RTD_HARM_COMM_C, RTD_ISO_CNTY_CODE,
		RTD_SERVICE_CODE )
		VALUES(#trNo# ,
		EDI_FWB_RATE_SEQ.nextval , 'SYSUSER' , SYSDATE , 'SYSUSER' ,
		SYSDATE ,#ratePieces#, #rateGrossWeightCode#, #rateGrossWeight#,
		#rateClassCode#, #rateCommodityItemNo#, #weight#, #discount#, #rateChargeAmt#,
		#rateGoodsDataIdentifier#, #rateGoodsNatureDesc#,
		#rateGoodsNatureConsolidation#, #ndGrossWeightCode#,
		#ndGrossWeight#, #measureUnitCode#, #ndLength#, #ndWidth#,
		#ndHeight#, #ndPcs#, #nvVolumnCode#, #nvVolumnAmt#,#nuOwnerCode#, #nuULDType#,
		#nuSlNo#, #nsSLAC#, #nhCommodityCode#, #noCountryCode#,
		#serviceCode#)
	</insert>

	<insert id="insertEdiFwbShipperContact"
		parameterClass="cargo.cms.common.ext.bo.FWBContactDetailsBO">
		INSERT INTO EDI_FWB_CONTACT ( TR_NO , DOC_LINE_NO , CONT_TYPE ,
		CONT_ID , CONT_NAME ) VALUES ( #trNo# ,EDI_FWB_CONTACT_SEQ.nextval , 'SHP', #contactID# , #contactNo# )
	</insert>

	<insert id="insertEdiFwbConsigneeContact"
		parameterClass="cargo.cms.common.ext.bo.FWBContactDetailsBO">
		INSERT INTO EDI_FWB_CONTACT ( TR_NO , DOC_LINE_NO , CONT_TYPE ,
		CONT_ID , CONT_NAME ) VALUES ( #trNo# ,
		EDI_FWB_CONTACT_SEQ.nextval , 'CNE', #contactID#, #contactNo# )
	</insert>
	<insert id="insertEdiFwbnotifyContact"
		parameterClass="cargo.cms.common.ext.bo.FWBContactDetailsBO">
		INSERT INTO EDI_FWB_CONTACT ( TR_NO , DOC_LINE_NO , CONT_TYPE ,
		CONT_ID , CONT_NAME ) VALUES ( #trNo# ,
		EDI_FWB_CONTACT_SEQ.nextval , 'NFY', #contactID#, #contactNo# )
	</insert>

	<insert id="insertEdiFwbAcc"
		parameterClass="cargo.cms.edi.ei.bo.FWBAcctInfoBO">
		INSERT INTO EDI_FWB_ACCT_INFO ( TR_NO, DOC_LINE_NO,
		ACC_INFO_IND, ACC_INFO ) VALUES(#trNo# ,
		EDI_FWB_ACCT_INFO_SEQ.NEXTVAL, #accountingInfoIndicator#,
		#accountingInfo# )
	</insert>

	<insert id="insertEdiFwbOtherCharges"
		parameterClass="cargo.cms.edi.ei.bo.FWBOtherChargesBO">
		INSERT INTO EDI_FWB_OTH_CHARGES( TR_NO, DOC_LINE_NO , OTH_PC_I1
		, OTH_CHRG_C1 , OTH_ENTLEMT_C1 , OTH_CHRG1 , OTH_PC_I2 ,
		OTH_CHRG_C2 , OTH_ENTLEMT_C2 , OTH_CHRG2 , OTH_PC_I3 ,
		OTH_CHRG_C3 , OTH_ENTLEMT_C3 , OTH_CHRG3)
		VALUES ( #trNo#,
		(EDI_FWB_OTH_CHRG_SEQ.nextval), #otherChargesInd# ,
		#otherChargesCode# , #otherEntitlementCode# , #otherCharge# ,
		#otherChargesInd# , #otherChargesCode1# ,
		#otherEntitlementCode1# , #otherCharge1# , #otherChargesInd# ,
		#otherChargesCode2# , #otherEntitlementCode2# , #otherCharge2# )
	</insert>

	<insert id="insertEdiFwbOtherParticipants"
		parameterClass="cargo.cms.common.ext.bo.FWBOtherParticipantBO">
		INSERT INTO EDI_FWB_OTH_PARTICIPANT ( TR_NO, DOC_LINE_NO,
		OPI_NAME, OPI_APT_CODE, OPI_OFFICE_DESI, OPI_COMP_DESI,
		OPI_FILE_REF, OPI_PART_ID, OPI_PART_CODE, OPI_OTH_APT_CODE )
		VALUES (#trNo#,
		(EDI_FWB_OTH_PART_SEQ.nextval), #opiName#, #opiAptCode#,
		#opiOfficeDesi#, #opiCompDesi#, #opiFileRef#, #opiPartId#,
		#opiPartCode#, #opiOthAptCode# )
	</insert>

	<!-- OCI changed -->
	<insert id="insertEdiFwbOtherCustomInfomation"
		parameterClass="cargo.cms.common.ext.bo.FWBOtherCustomInformationBO">
		insert into EDI_FWB_OCI (TR_NO, DOC_LINE_NO, ISO_CTRY_CODE, INFO_IDENTIFIER, SUPP_CUST_INFO, CUST_INFO_IDENTIFIER) 
		values(#trNo#,  (EDI_FWB_OTH_CHRG_SEQ.nextval), #isoCountryCode#, #informationIdentifier#, #supplementaryCustomsInfo# , #customsInformationIdentifier#)	
	</insert>


	<insert id="test" parameterClass="java.util.HashMap">
		insert into EDI_FWB_CONTACT (TR_NO, DOC_LINE_NO, CONT_ID,
		CONT_NAME, CONT_TYPE)
		values(#TR_NO#,(EDI_FWB_OTH_CHRG_SEQ.nextval), #CONT_ID#,
		#CONT_NAME#, #CONT_TYPE#)
	</insert>

	<select id="selectQueryFwbMaxCopyNoByOriDest"
		parameterClass="cargo.cms.edi.ei.bo.FWBDetailBO"
		resultClass="cargo.cms.edi.ei.bo.FWBDetailBO">

		SELECT MAX(COPY_NO) AS copyNo FROM EDI_FWB WHERE AWB_NO =
		#awbNo# AND ORG = #origin# AND DES = #destination#

	</select>

	<select id="selectQueryFwbStatusByMaxCopyNo"
		parameterClass="cargo.cms.edi.ei.bo.FWBDetailBO"
		resultClass="cargo.cms.edi.ei.bo.FWBDetailBO">

		SELECT  TR_NO AS trNo, FWB_STATUS AS status FROM EDI_FWB WHERE AWB_NO = #awbNo#
		AND ORG = #origin# AND DES = #destination# AND COPY_NO=#copyNo#


	</select>

	<select id="selectQueryFwbStatusByMaxCopyNo_Exp"
		parameterClass="cargo.cms.edi.ei.bo.FWBDetailBO"
		resultClass="cargo.cms.edi.ei.bo.FWBDetailBO">

		SELECT TR_NO AS trNo, FWB_STATUS AS status FROM EDI_FWB WHERE AWB_NO = #awbNo#
		AND ORG = #origin# AND DES = #destination# AND COPY_NO=#copyNo#
		and tr_no=(select max(to_number(tr_no))tr_no from edi_fwb WHERE
		AWB_NO = #awbNo# AND ORG = #origin# AND DES = #destination# )
	</select>

	<select id="selectFWBSeqNo"
		parameterClass="cargo.cms.edi.ei.bo.FWBDetailBO"
		resultClass="cargo.cms.edi.ei.bo.FWBDetailBO">
		select EDI_FWB_SEQ.nextval as trNo from dual
	</select>

	<select id="selectqueryffblformaxtrno"
		parameterClass="cargo.cms.afw.bo.base.BaseBO"
		resultClass="java.lang.String">
		select EDI_FBL_SEQ.nextval as trNo from dual
	</select>

	<select id="selectQueryFwbMsgByOriDes"
		parameterClass="cargo.cms.edi.ei.bo.FWBDetailBO"
		resultClass="cargo.cms.edi.ei.bo.FWBDetailBO">

		SELECT TR_NO AS trNo, FWB_STATUS AS status , SUCCESS_MSGS AS
		successMsgsSeqNo , MSG_SEQ_NUM AS msgSeqNo , TOTAL_COUNT AS
		totalSplitMsgs, COPY_NO AS copyNo , AWB_NO AS awbNo , ORG AS
		origin , DES AS destination FROM EDI_FWB WHERE AWB_NO = #awbNo#
		AND ORG = #origin# AND DES = #destination# AND FWB_STATUS
		='CONT' AND tr_no=(select max(to_number(tr_no))tr_no from
		edi_fwb WHERE AWB_NO = #awbNo# AND ORG = #origin# AND DES =
		#destination# )
	</select>

	<select id="selectQueryFwbMsgByOriDesUpdateStatus"
		parameterClass="cargo.cms.edi.ei.bo.FWBDetailBO"
		resultClass="cargo.cms.edi.ei.bo.FWBDetailBO">

		SELECT TR_NO AS trNo, FWB_STATUS AS status , SUCCESS_MSGS AS
		successMsgsSeqNo , MSG_SEQ_NUM AS msgSeqNo , TOTAL_COUNT AS
		totalSplitMsgs, COPY_NO AS copyNo , AWB_NO AS awbNo , ORG AS
		origin , DES AS destination FROM EDI_FWB WHERE AWB_NO = #awbNo#
		AND ORG = #origin# AND DES = #destination# AND FWB_STATUS
		='CONT' AND tr_no=(select max(to_number(tr_no))tr_no from
		edi_fwb WHERE AWB_NO = #awbNo# AND ORG = #origin# AND DES =
		#destination# )
	</select>
	
	<select id="selectQueryFwbMsgByOriDes_Exp"
		parameterClass="cargo.cms.edi.ei.bo.FWBDetailBO"
		resultClass="cargo.cms.edi.ei.bo.FWBDetailBO">

		SELECT TR_NO AS trNo, FWB_STATUS AS status , SUCCESS_MSGS AS
		successMsgsSeqNo , MSG_SEQ_NUM AS msgSeqNo ,TOTAL_COUNT AS
		totalSplitMsgs, COPY_NO AS copyNo , AWB_NO AS awbNo ,ORG AS
		origin , DES AS destination FROM EDI_FWB WHERE AWB_NO = #awbNo#
		AND ORG = #origin# AND DES = #destination# AND FWB_STATUS
		='CONT' and tr_no=(select max(to_number(tr_no))tr_no from
		edi_fwb WHERE AWB_NO = #awbNo# AND ORG = #origin# AND DES =
		#destination# )
	</select>

	<update id="updateFwbMsgTotalCountByOriDes"
		parameterClass="cargo.cms.edi.ei.bo.FWBDetailBO">

		UPDATE EDI_FWB SET TOTAL_COUNT = #totalSplitMsgs# WHERE AWB_NO = #awbNo#
		AND ORG = #origin# AND DES = #destination# AND FWB_STATUS = 'CONT'


	</update>

	<update id="updatequeryfwbmsgstatusbyfltdata"
		parameterClass="cargo.cms.edi.ei.bo.FWBDetailBO">

		UPDATE EDI_FWB SET FWB_STATUS = #status# WHERE AWB_NO = #awbNo#
		AND ORG = #origin# AND DES = #destination# AND FWB_STATUS =
		'CONT'

	</update>

	<update id="updateFwbMsgSeqNoByOriDes"
		parameterClass="cargo.cms.edi.ei.bo.FWBDetailBO">

		UPDATE EDI_FWB SET MSG_SEQ_NUM = #msgSeqNo# WHERE AWB_NO = #awbNo# AND ORG = #origin#
		AND DES = #destination# AND FWB_STATUS = 'CONT'

	</update>
	<update id="updatequeryfwbmsgsucessmsgsbyfltdata"
		parameterClass="cargo.cms.edi.ei.bo.FWBDetailBO">

		UPDATE EDI_FWB SET SUCCESS_MSGS = #successMsgsSeqNo# WHERE AWB_NO = #awbNo# AND ORG =
		#origin# AND DES = #destination# AND FWB_STATUS = 'CONT'

	</update>
	<insert id="INSERT_EDI_AWB_IMPORT" parameterClass="cargo.cms.edi.ei.bo.FWBDetailBO">		 
	INSERT INTO AWB (
		AWB_NO,AWB_DATE,AWB_TYPE,PPK_TYPE,CARR_CODE,CAR_YN,MANIFEST_YN,BLDUP_COMPL_YN,AWB_CLOSED_YN,LOCKED_YN,MISSING_YN,MANIFEST_PCS,MANIFEST_WT,
		RTN_PCS,RTN_WT,CATALOG,CC_CODE,ORIG,DEST,PCS,WT,CONTENT,SPL_CODE1,SPL_CODE2,SPL_CODE3,SPL_CODE4,SPL_CODE5,SPL_CODE6,SPL_CODE7,SPL_CODE8,
		RCL_PCS,RCL_WT,RCL_PPK_PCS,RCL_PPK_WT,RCL_MIX_PCS,RCL_MIX_WT,RCL_BULK_PCS,RCL_BULK_WT,PMAN_PCS,PMAN_WT,NON_PMAN_PCS,NON_PMAN_WT,PMAN_BULK_PCS,
		PMAN_BULK_WT,PMAN_MIX_PCS,PMAN_MIX_WT,PMAN_PPK_PCS,PMAN_PPK_WT,BLDUP_BULK_PCS,BLDUP_BULK_WT,AGENT_CODE,SHPR_CODE,CR_USER_ID,CR_DATE,LM_USER_ID,
		LM_DATE,CON_CLOSED_YN,CON_CLOSED_DATE,CON_CLOSED_RMK,ACCEPT_MODE,AGENT_NAME,SHIPPER_NAME,OFFLOAD_BULK_PCS,OFFLOAD_BULK_WT,OFFLOAD_PPK_PCS,
		OFFLOAD_PPK_WT,AWB_RMK,SPL_CODE9)
	VALUES(
		#awbNo#,#awbDate#,'I',NULL,#routeCarrierCode#,'N','N','N','N','N','N',0,0,0,0,'IG',NULL,#origin#,#destination#,#totalPieces#,#totalWeight#,NULL,#specialHandCode1#,#specialHandCode2#,#specialHandCode3#,
		#specialHandCode4#,#specialHandCode5#,#specialHandCode6#,#specialHandCode7#,#specialHandCode8#,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,'SYSUSER',SYSDATE,
		 'SYSUSER',SYSDATE,'N',NULL,NULL,'LCA',#agentName#,#shipperName#,0,0,0,0,NULL,#specialHandCode9#)
	</insert>
	<!-- EDI INBOUND....FWB  Queries End-->
	
	<!--  TRAXON - EDI- XWB QUERIES START	...Added By Venkat Keesara -->
	<insert id="insertEdiXwb"
		parameterClass="cargo.cms.edi.ei.bo.FWBDetailBO">
		INSERT INTO EDI_FWB ( AWB_NO , ORG , DES , SHIP_DESC_C , PCS ,
		WGT_UNIT , WGT ,TR_NO , MSG_VER , RTG_DES_CARR ,
		RTG_ONWARD_CODE1 , RTG_ONWARD_CODE2 , CR_USER_ID , CR_DATE ,
		LM_USER_ID , LM_DATE , AWB_DATE ,MSG_SEQ_NUM, COPY_NO,
		TOTAL_COUNT,FWB_STATUS, SHPR_ACC_NO , SHPR_NAME , SHPR_ADDR ,
		SHPR_PLACE , SHPR_STATE_PROVINCE , SHPR_CTRY_CODE ,
		SHPR_PIN_CODE , CSGNE_ACC_NO , CSGNE_NAME , CSGNE_ADDR ,
		CSGNE_PLACE , CSGNE_CTRY_CODE , CSGNE_PIN_CODE ,CSGNE_STATE_PROVINCE,
		CVD_ISO_CURR_CODE , CVD_CHG_CODE , CVD_CHG_DECL_WGT ,
		CVD_CHG_DECL_OTH , CVD_CHG_CARR_IND , CVD_CHG_CARR_VAL ,
		CVD_CHG_CUST_VAL , CVD_CHG_CUST_IND , CVD_CHG_INSUR_VAL ,
		CVD_CHG_INSUR_IND , PPD_TOTAL_WT_AMT , PPD_VALUE_VC_AMT ,
		PPD_TAXES_TX_AMT , PPD_TOTAL_OA_AMT , PPD_TOTAL_OC_AMT ,
		PPD_SUMMY_CT_AMT , COL_TOTAL_WT_AMT , COL_VALUE_VC_AMT ,
		COL_TAXES_TX_AMT , COL_TOTAL_OA_AMT , COL_TOTAL_OC_AMT ,
		COL_SUMMY_CT_AMT , CER_SIGNATURE , ISU_AWB_ISS_DATE ,
		ISU_AWB_ISS_PLACE , ISU_SIGNATURE , REF_PART_ID , REF_PART_CODE
		, REF_PART_APT_CODE , REF_OFFICE_DESI , REF_COMP_DESI ,
		REF_APT_CODE ,  COR_CUST_ORI_CODE ,
		OSI_SERVICE_INFO1 , OSI_SERVICE_INFO2 , OSI_SERVICE_INFO3 ,
		RTG_APT_CODE , RTG_ONWARD_CARR1 , RTG_ONWARD_CARR2 , FLT_DATE1 ,
		FLT_DATE2 , FLT_NUM1 , FLT_NUM2 , FLT_CARR1, FLT_CARR2, AGENT_ACC_NO , AGENT_IATA_CODE
		, AGENT_IATA_ADDR , AGENT_PART_ID , AGENT_NAME , AGENT_PLACE ,
		SII_CHG_AMT , SII_CASS_IND, SPH_SPL_CODE1, SPH_SPL_CODE2,
		SPH_SPL_CODE3, SPH_SPL_CODE4, SPH_SPL_CODE5, SPH_SPL_CODE6,
		SPH_SPL_CODE7, SPH_SPL_CODE8, SPH_SPL_CODE9, NOM_NAME,
		NOM_SPACE,SRI_REF_NO, SRI_SUPP_SHP_INFO1, SRI_SUPP_SHP_INFO2,
		AGENT_SPL_SERV1, AGENT_SPL_SERV2, AGENT_SPL_SERV3, ARD_FILE_REF,
		NOTIFY_NAME,NOTIFY_ADDR,NOTIFY_PLACE,NOTIFY_CTRY_CODE,
		NOTIFY_STATE_PROVINCE,NOTIFY_PIN_CODE, 
		REF_FILE_REF, CDC_ISO_CURR_CODE, CDC_CURR_RATE, CDC_TOTAL_CHG_AMT,
		CDC_CC_ATDES_AMT , CDC_CC_INDES_AMT)
		VALUES( #awbNo# , #origin# , #destination#, #shpmDescCode# ,
		#totalPieces# , #weightCode# , #totalWeight# ,
		#trNo#, #msgVerNo# , #routeCarrierCode# ,
		#onwardAirportCode# , #onwardAirportCode2# , 'SYSUSER' , SYSDATE
		, 'SYSUSER' , SYSDATE , SUBSTR(SYSDATE,1,9) , #msgSeqNo#, #copyNo#,
		#totalSplitMsgs#, #status#,#shipperAcctNo# , #shipperName# ,
		#shipperAddr# , #shipperPlace# , #shipperState# ,
		#shipperCountryCode# , #shipperPostalCode# , #consigneeAcctNo# ,
		#consigneeName# , #consigneeAddr# , #consigneePlace# ,
		#consigneeCountryCode# , #consigneePostalCode# ,#consigneeState#, #declnCurrCode#
		, #declnChargeCode# , #declnWtValnInd# , #declnOtherChrgInd# ,
		#declnCarrierInd# , #declnCarrier# , #declnCustom# ,
		#declnCustomInd# , #declnInsurance# , #declnInsuranceInd# ,
		#ppccWeightChrg# , #ppccValnChrg# , #ppccTaxes# ,
		#ppccOtherChrgDueAgent# , #ppccOtherChrgDueCarrier# ,
		#ppccTotalChrg# , #colWeightChrg# , #colValnChrg# , #colTaxes# ,
		#colOtherChrgDueAgent# , #colOtherChrgDueCarrier# ,
		#colTotalChrg# , #shpSignature# , to_date(#executionDate#,'YYYY-MM-DD HH24:MI:SS') ,
		#executionPlace# , #executionSignature# , #sendrPartiI# ,
		#sendrPartiC# , #sendrPartAirpC# , #sendrOffFuncDesg# ,
		#sendrOffCoDesg# , #sendrOffAirpC# ,#ctmOrgCode# , #otherServiceInfo# ,
		#otherServiceInfo2# , #otherServiceInfo3# , #routeAirportCode# ,
		#onwardCarrierCode# , #onwardCarrierCode2# , nullif(#flightDate#,0) ,
		nullif(#flightDate2#,0) , #flightNo# , #flightNo2# , #fltCarrierCode# , #fltCarrierCode2#, #agentAcctNo# ,
		#agentIATACode# , #agentCASSAddr# , #agentParticipantCode# ,
		#agentName# , #agentPlace#, #chargeAmount#, #caasIndicator#,
		#specialHandCode1#, #specialHandCode2#, #specialHandCode3#,
		#specialHandCode4#, #specialHandCode5#, #specialHandCode6#,
		#specialHandCode7#, #specialHandCode8#, #specialHandCode9#,
		#nomName#, #nomPlace#, #shipRefNumber#,
		#shipSupplementaryInfo1#,
		#shipSupplementaryInfo2#,#specialServiceRequest#,
		#specialServiceRequest2#,
		#specialServiceRequest3#,#fileReference#,
		#notifyName#,#notifyAddr#,#notifyPlace#,#notifyCountryCode#,
		#notifyState#,#notifyPostalCode#,
		#sendrOffFileRefNo#,#ccCurrencyCode#,#ccCurrConverExchangeRate#,#ccCurrConverTotalChrg#,
		#ccCurrConverDestChrg# , #ccCharges#)
	</insert>

	<insert id="insertEdiXwbrate"
		parameterClass="cargo.cms.edi.ei.bo.FWBRateBO">
		INSERT INTO EDI_FWB_RATE (TR_NO, DOC_LINE_NO, CR_USER_ID,CR_DATE, LM_USER_ID, LM_DATE,
		RATE_PCS,RATE_GWT,RATE_GWT_CODE,RATE_CL_CODE,
		RATE_COMM_N,RATE_CHRGBLE_WT, RATE_CHRG_RATE,RATE_CHRG_A,RATE_GOODS_NATR,
		RTD_CONS_NOG, RTD_AWB_DIM_UNIT,LENGTH,WIDHT,HEIGHT,PCS,
		RTD_AWB_WGT,RTD_AWB_WGT_UNIT,RTD_AWB_VOL_AMT,RTD_AWB_VOL_CODE,
		RTD_ULD_CARR,RTD_ULD_NUM,RTD_ULD_TYPE,RTD_SLAC,RTD_HARM_COMM_C,
		RTD_ISO_CNTY_CODE,RTD_SERVICE_CODE,RATE_GOODS_DATA_I)
		VALUES(#trNo# ,EDI_FWB_RATE_SEQ.nextval ,'SYSUSER' ,SYSDATE , 'SYSUSER' ,SYSDATE ,
		#ratePiecesOrCombinationPoints#,#rateGrossWeight#,#rateGrossWeightCode#,
		#rateClassCode#,#rateCommodityItemNo#,#rateChargeableWeight#,#discount#,
		#ttlDtl#,#rateGoodsNatureDesc#,#rateGoodsNatureConsolidation#,
		#measureUnitCode#,nullif(#ndLength#,0),nullif(#ndWidth#,0),nullif(#ndHeight#,0),nullif(#ndPcs#,0),
		#ndGrossWeight#,#ndGrossWeightCode#,#nvVolumnAmt#,#nvVolumnCode#,
		#nuOwnerCode#,#nuSlNo#,#nuULDType#,nullif(#nsSLAC#,0),#nhCommodityCode#,
		#noCountryCode#,#serviceCode#,#rateGoodsDataIdentifier#)
	</insert>

	<insert id="insertEdiXwbContacts"
		parameterClass="cargo.cms.common.ext.bo.FWBContactDetailsBO">
		INSERT INTO EDI_FWB_CONTACT ( TR_NO , DOC_LINE_NO , CONT_TYPE ,
		CONT_ID , CONT_NAME ) VALUES ( #trNo# ,EDI_FWB_CONTACT_SEQ.nextval ,#contactType# , #contactID# , #contactNo# )
	</insert>

	<insert id="insertEdiXwbAcc"
		parameterClass="cargo.cms.edi.ei.bo.FWBAcctInfoBO">
		INSERT INTO EDI_FWB_ACCT_INFO ( TR_NO, DOC_LINE_NO,
		ACC_INFO_IND, ACC_INFO ) VALUES(#trNo# ,
		EDI_FWB_ACCT_INFO_SEQ.NEXTVAL, #accountingInfoIndicator#,
		#accountingInfo# )
	</insert>

	<insert id="insertEdiXwbOtherCharges"
		parameterClass="cargo.cms.edi.ei.bo.FWBOtherChargesBO">
		INSERT INTO EDI_FWB_OTH_CHARGES( TR_NO, DOC_LINE_NO , OTH_PC_I1
		, OTH_CHRG_C1 , OTH_ENTLEMT_C1 , OTH_CHRG1 , OTH_PC_I2 ,
		OTH_CHRG_C2 , OTH_ENTLEMT_C2 , OTH_CHRG2 , OTH_PC_I3 ,
		OTH_CHRG_C3 , OTH_ENTLEMT_C3 , OTH_CHRG3)
		VALUES ( #trNo#,
		(EDI_FWB_OTH_CHRG_SEQ.nextval), #otherChargesInd# ,
		#otherChargesCode# , #otherEntitlementCode# , #otherCharge# ,
		#otherChargesInd# , #otherChargesCode1# ,
		#otherEntitlementCode1# , #otherCharge1# , #otherChargesInd# ,
		#otherChargesCode2# , #otherEntitlementCode2# , #otherCharge2# )
	</insert>

	<insert id="insertEdiXwbOtherParticipants"
		parameterClass="cargo.cms.common.ext.bo.FWBOtherParticipantBO">
		INSERT INTO EDI_FWB_OTH_PARTICIPANT ( TR_NO, DOC_LINE_NO,
		OPI_NAME, OPI_APT_CODE, OPI_OFFICE_DESI, OPI_COMP_DESI,
		OPI_FILE_REF, OPI_PART_ID, OPI_PART_CODE, OPI_OTH_APT_CODE )
		VALUES (#trNo#,
		(EDI_FWB_OTH_PART_SEQ.nextval), #opiName#, #opiAptCode#,
		#opiOfficeDesi#, #opiCompDesi#, #opiFileRef#, #opiPartId#,
		#opiPartCode#, #opiOthAptCode# )
	</insert>

	<insert id="insertEdiXwbOtherCustomInfomation"
		parameterClass="cargo.cms.common.ext.bo.FWBOtherCustomInformationBO">
		insert into EDI_FWB_OCI (TR_NO, DOC_LINE_NO, ISO_CTRY_CODE, INFO_IDENTIFIER, SUPP_CUST_INFO) 
		values(#trNo#,  (EDI_FWB_OTH_CHRG_SEQ.nextval), #isoCountryCode#, #informationIdentifier#, #supplementaryCustomsInfo#)	
	</insert>


	<select id="selectQueryXwbMaxCopyNoByOriDest"
		parameterClass="cargo.cms.edi.ei.bo.FWBDetailBO"
		resultClass="cargo.cms.edi.ei.bo.FWBDetailBO">
		SELECT  TR_NO AS trNo, FWB_STATUS AS status , COPY_NO As copyNo FROM EDI_FWB WHERE AWB_NO = #awbNo#
		AND ORG = #origin# AND DES = #destination# AND 
		COPY_NO=(SELECT MAX(COPY_NO) AS copyNo FROM EDI_FWB WHERE AWB_NO =
		#awbNo# AND ORG = #origin# AND DES = #destination#)

	</select>
	
	<select id="selectXWBSeqNo"	resultClass="java.lang.String">
		
		SELECT EDI_FWB_SEQ.nextval as trNo FROM DUAL
		
	</select>
	
	<!--  TRAXON- EDI- XWB QUERIES END	 -->

	<!-- EDI OUTBOUND  Start....... -->

	<!-- The following SQL statements were written for constructing  FFM messages -->
	<select id="selectexpmfthdr"
		parameterClass="cargo.cms.common.ext.bo.FFMHeaderBO"
		resultClass="cargo.cms.common.ext.bo.FFMHeaderBO">
		<![CDATA[
			SELECT 	
				NVL(emd.TR_NO,'')  AS trNo,  
				TO_CHAR(NVL(MSG_VER,0))  AS msgVersion,  
				NVL(MSG_SEQ_NUM,0)  AS msgSeqNo,  
				NVL(emd.FLT_KEY,' ')  AS flightKey,  
				NVL(TO_CHAR(FLT_DATE, 'DDMON'),' ') AS flightDate, 
				NVL(LDNG_PT,' ') AS loadingPoint, 
				NVL(ULDNG_PT,' ') AS unLoadingPoint, 
				NVL(ACRF_REG,' ') AS airCraftRegNo, 
				NVL(NIL_IND,' ') AS nilIndicator,
		        TO_CHAR(opr.SCH_TIME, '0000') AS fltSchTime,
		        (select ctry_code from mast_city where code = ( select off_point from flt_opr_leg where tr_no = opr.tr_no and brd_point = 'HKG' and leg_ord = '1') ) as firstArrCtry,
		        (select off_point from flt_opr_leg where tr_no = opr.tr_no and brd_point = 'HKG' and leg_ord = '1') as firstArrArpt,
		        (select TO_CHAR(SCH_ARR_DATE, 'DD') from flt_opr_leg where tr_no = opr.tr_no and brd_point = 'HKG' and leg_ord = '1') as firstArrSchDay,
		        (select TO_CHAR(SCH_ARR_DATE, 'MON') from flt_opr_leg where tr_no = opr.tr_no and brd_point = 'HKG' and leg_ord = '1') as firstArrSchMon,
		        (select TO_CHAR(SCH_ARR_TIME, '0000') from flt_opr_leg where tr_no = opr.tr_no and brd_point = 'HKG' and leg_ord = '1') as firstArrSchTime,
		        (select TO_CHAR(SCH_ARR_DATE, 'DD') from flt_opr_leg where tr_no = opr.tr_no and off_point = opr.dest) as destSchArrDay,
		        (select TO_CHAR(SCH_ARR_DATE, 'MON') from flt_opr_leg where tr_no = opr.tr_no and off_point = opr.dest ) as destSchArrMon,
		        (select TO_CHAR(SCH_ARR_TIME, '0000') from flt_opr_leg where tr_no = opr.tr_no and off_point = opr.dest ) as destSchArrTime,		        
		        (select TO_CHAR(SCH_DEP_DATE, 'DD') from flt_opr_leg where tr_no = opr.tr_no and off_point = opr.dest ) as destSchDepDay,
		        (select TO_CHAR(SCH_DEP_DATE, 'MON') from flt_opr_leg where tr_no = opr.tr_no and off_point = opr.dest ) as destSchDepMon,
		        (select TO_CHAR(SCH_DEP_TIME, '0000') from flt_opr_leg where tr_no = opr.tr_no and off_point = opr.dest ) as destSchDepTime 
				FROM EXP_MANIFEST_HD emd
      			join flt_opr opr  on opr.FLT_KEY =  emd.FLT_KEY AND  opr.SCH_DATE = emd.FLT_DATE 	and opr.FLT_TYPE = 'D'
				WHERE 
				emd.FLT_KEY=#flightKey# AND 
				TO_CHAR(emd.FLT_DATE,'DDMONYY')=#flightDate# 	
 		]]>
	</select>

	<select id="selectexpmftdtl"
				parameterClass="cargo.cms.common.ext.bo.FFMDetailBO"
				resultClass="cargo.cms.common.ext.bo.FFMDetailBO">
				<![CDATA[
				
				select 					trxnNo, 
										docLineNo, 
										uldDocLineNo, 
										flightCarrier,
										flightNo,
										flightKey,
										flightDate, 
										loadingPoint,
										unLoadingPoint,
										awbNo,
										awbOrigin, 
										awbDest, 
										shipmentPieces, 
										shipmentDescriptionCode, 
										shipmentWeightUnit, 
										shipmentWeight, 
										shipmentVolumeCode, 
										shipmentVolume, 
										densityIndi, 
										densityGrp, 
										awbTotalPcs,        
										mftDesc, 
					          			splCode3,
					          			splCode4,
					          			splCode5,
					          			splCode6,
					          			splCode7,
					          			splCode8,
					          			splCode9,
					          			onwardDest1, 
										onwardCarrCode1,
										onwardFlightNo1,
										onwardFlightDt1, 
										onwardDest2, 
										onwardCarrCode2,
										onwardFlightNo2,
										onwardFlightDt2, 
										onwardDest3, 
										onwardCarrCode3,
										onwardFlightNo3,
										onwardFlightDt3, 
										otherSvcInfo1,
										otherSvcInfo2,
										customsRef,
										customsOriginCode,
										movementProrityCode, 
										isoCountryCode1, 
										informationIdentifier1, 
										customsInformationIdentifier1, 
										suppCustomsInformation1, 
										isoCountryCode2, 
										informationIdentifier2, 
										customsInformationIdentifier2, 
										suppCustomsInformation2,
					 CASE When length (splCode1 || splCode2 || splCode3 || splCode4 || splCode5 || splCode6 || splCode7 || splCode8) > 2
					  THEN substr( (splCode1 || splCode2 || splCode3 || splCode4 || splCode5 || splCode6 || splCode7 || splCode8) ,0,3) 
					  else ' ' end as splCode1,
					 CASE When length (splCode1 || splCode2 || splCode3 || splCode4 || splCode5 || splCode6 || splCode7 || splCode8) > 5
					  THEN substr( (splCode1 || splCode2 || splCode3 || splCode4 || splCode5 || splCode6 || splCode7 || splCode8),4,3) 
					  else ' ' end as splCode2, 
					 (decode(A.splCode1, null, '', A.splCode1 || ',')
					  || decode(A.splCode2, null, '', A.splCode2 || ',')
					  || decode(A.splCode3, null, '', A.splCode3 || ',')
					  || decode(A.splCode4, null, '', A.splCode4 || ',')
					  || decode(A.splCode5, null, '', A.splCode5 || ',')
					  || decode(A.splCode6, null, '', A.splCode6 || ',')
					  || decode(A.splCode7, null, '', A.splCode7 || ',')
					  || decode(A.splCode8, null, '', A.splCode8 || ',')
					  || decode(A.splCode9, null, '', A.splCode9) ) concatSplCodes		
					from (
							SELECT 
										NVL(TR_NO,' ') as trxnNo, 
										NVL(DOC_LINE_NO ,0) as docLineNo, 
										NVL(UDOC_LINE_NO,0) as uldDocLineNo, 
										NVL(FLT_CARR,' ') as flightCarrier,
										NVL(FLT_NO,' ') as flightNo,
										NVL(FLT_KEY,' ') as flightKey,
										NVL(TO_CHAR(FLT_DATE, 'DDMON'),' ')  as flightDate, 
										NVL(LDG_PT,' ') as loadingPoint,
										NVL(UNLDG_PT,' ') as unLoadingPoint,
										NVL(AWB_NO,' ') as awbNo,
										NVL(AWB_ORIG,' ') as awbOrigin, 
										NVL(AWB_DEST,' ') as awbDest, 
										NVL(SHP_PCS,0) as shipmentPieces, 
										NVL(SHPM_DESC_C, ' ') as shipmentDescriptionCode, 
										NVL(WGT_UNT,' ')  as shipmentWeightUnit, 
										NVL(SHP_WGT ,0) as shipmentWeight, 
										NVL(SHPM_VOL_C,' ') as shipmentVolumeCode, 
										NVL(SHPM_VOL,0) as shipmentVolume, 
										NVL(DEN_IND,' ')  as densityIndi, 
										NVL(DEN_GRP,0) as densityGrp, 
										NVL(AWB_TOTAL_PCS,0) as awbTotalPcs,        
										NVL(MAN_DESC,' ')  as mftDesc, 
																				
										( select spl_code1 from AWB awb  left join MAST_CARR_SPL_HAND_CODE spl ON CARRIER = awb.carr_code
					                     where awb_no = EXP_MANIFEST_DTL.AWB_NO and AWB_date = EXP_MANIFEST_DTL.AWB_DATE and ( spl.SPL_CODE is null OR ( spl.SPL_CODE is not null AND instr(spl.SPL_CODE,spl_code1) = 0 ) ) ) as splCode1,
					                    ( select spl_code2 from AWB awb  left join MAST_CARR_SPL_HAND_CODE spl ON CARRIER = awb.carr_code
					                     where awb_no = EXP_MANIFEST_DTL.AWB_NO and AWB_date = EXP_MANIFEST_DTL.AWB_DATE and ( spl.SPL_CODE is null OR ( spl.SPL_CODE is not null AND instr(spl.SPL_CODE,spl_code2) = 0 ) ) ) as splCode2,
					                    ( select spl_code3 from AWB awb  left join MAST_CARR_SPL_HAND_CODE spl ON CARRIER = awb.carr_code
					                     where awb_no = EXP_MANIFEST_DTL.AWB_NO and AWB_date = EXP_MANIFEST_DTL.AWB_DATE and ( spl.SPL_CODE is null OR ( spl.SPL_CODE is not null AND instr(spl.SPL_CODE,spl_code3) = 0 ) ) ) as splCode3,
					                    ( select spl_code4 from AWB awb  left join MAST_CARR_SPL_HAND_CODE spl ON CARRIER = awb.carr_code
					                     where awb_no = EXP_MANIFEST_DTL.AWB_NO and AWB_date = EXP_MANIFEST_DTL.AWB_DATE and ( spl.SPL_CODE is null OR ( spl.SPL_CODE is not null AND instr(spl.SPL_CODE,spl_code4) = 0 ) ) ) as splCode4,
					                     ( select spl_code5 from AWB awb  left join MAST_CARR_SPL_HAND_CODE spl ON CARRIER = awb.carr_code
					                     where awb_no = EXP_MANIFEST_DTL.AWB_NO and AWB_date = EXP_MANIFEST_DTL.AWB_DATE and ( spl.SPL_CODE is null OR ( spl.SPL_CODE is not null AND instr(spl.SPL_CODE,spl_code5) = 0 ) ) ) as splCode5,
					                    ( select spl_code6 from AWB awb  left join MAST_CARR_SPL_HAND_CODE spl ON CARRIER = awb.carr_code
					                     where awb_no = EXP_MANIFEST_DTL.AWB_NO and AWB_date = EXP_MANIFEST_DTL.AWB_DATE and ( spl.SPL_CODE is null OR ( spl.SPL_CODE is not null AND instr(spl.SPL_CODE,spl_code6) = 0 ) ) ) as splCode6,
					                    ( select spl_code7 from AWB awb  left join MAST_CARR_SPL_HAND_CODE spl ON CARRIER = awb.carr_code
					                     where awb_no = EXP_MANIFEST_DTL.AWB_NO and AWB_date = EXP_MANIFEST_DTL.AWB_DATE and ( spl.SPL_CODE is null OR ( spl.SPL_CODE is not null AND instr(spl.SPL_CODE,spl_code7) = 0 ) ) ) as splCode7,
					                    ( select spl_code8 from AWB awb  left join MAST_CARR_SPL_HAND_CODE spl ON CARRIER = awb.carr_code
					                     where awb_no = EXP_MANIFEST_DTL.AWB_NO and AWB_date = EXP_MANIFEST_DTL.AWB_DATE and ( spl.SPL_CODE is null OR ( spl.SPL_CODE is not null AND instr(spl.SPL_CODE,spl_code8) = 0 ) ) ) as splCode8,
					                    ( select spl_code9 from AWB awb  left join MAST_CARR_SPL_HAND_CODE spl ON CARRIER = awb.carr_code
					                     where awb_no = EXP_MANIFEST_DTL.AWB_NO and AWB_date = EXP_MANIFEST_DTL.AWB_DATE and ( spl.SPL_CODE is null OR ( spl.SPL_CODE is not null AND instr(spl.SPL_CODE,spl_code9) = 0 ) ) ) as splCode9,
					                                           
										NVL(ONWARD_DEST1,' ') as onwardDest1, 
										NVL(ONWARD_CAR_COD1,' ')  as onwardCarrCode1,
										NVL(ONWARD_FLT_NO1,' ')  as onwardFlightNo1,
										NVL(TO_CHAR(ONVARD_FLT_DAT1, 'DDMON'),' ')  as onwardFlightDt1, 
										NVL(ONWARD_DEST2,' ') as onwardDest2, 
										NVL(ONWARD_CAR_COD2,' ')  as onwardCarrCode2,
										NVL(ONWARD_FLT_NO2,' ')  as onwardFlightNo2,
										NVL(TO_CHAR(ONVARD_FLT_DAT2, 'DDMON'),' ')  as onwardFlightDt2, 
										NVL(ONWARD_DEST3,' ') as onwardDest3, 
										NVL(ONWARD_CAR_COD3,' ')  as onwardCarrCode3,
										NVL(ONWARD_FLT_NO3,' ')  as onwardFlightNo3,
										NVL(TO_CHAR(ONVARD_FLT_DAT3, 'DDMON'),' ')  as onwardFlightDt3, 
										NVL(DES_SHP_OSI_1,' ')  as otherSvcInfo1,
										NVL(DES_SHP_OSI_2,' ')  as otherSvcInfo2,
										NVL(DES_CUS_REF,' ')  as customsRef,
										NVL(CUS_ORI_CODE,' ')  as customsOriginCode,
										NVL(MOV_PRI_CODE,' ')  as movementProrityCode, 
										NVL(ISO_CTRY_CODE1,' ')  as isoCountryCode1, 
										NVL(INFO_IDENTIFIER1,' ')  as informationIdentifier1, 
										NVL(CUSTOMS_INFO_IDENTIFIERI,' ')  as customsInformationIdentifier1, 
										NVL(SUPP_CUSTOMS_INFO1,' ')  as suppCustomsInformation1, 
										NVL(ISO_CTRY_CODE2,' ')  as isoCountryCode2, 
										NVL(INFO_IDENTIFIER2,' ')  as informationIdentifier2, 
										NVL(CUSTOMS_INFO_IDENTIFIER2,' ')  as customsInformationIdentifier2, 
										NVL(SUPP_CUSTOMS_INFO2,' ')  as suppCustomsInformation2,
                    (SELECT AWB.CARR_CODE FROM AWB AWB WHERE AWB.AWB_NO=EXP_MANIFEST_DTL.AWB_NO AND AWB.AWB_DATE=EXP_MANIFEST_DTL.AWB_DATE) as carrCode
							FROM EXP_MANIFEST_DTL  
							WHERE 
							TR_NO = #trxnNo# 
              AND SHP_PCS > 0 order by UDOC_LINE_NO, DOC_LINE_NO 
              ) A 
				]]>
            <isNotEmpty property="vesselFltInd">
			<isEqual property="vesselFltInd" compareValue="Y">
			<isNotEmpty property="vesselFltCar">
			WHERE
             (a.carrCode = #vesselFltCar#
                                    OR a.carrCode IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE= #vesselFltCar#))
            </isNotEmpty></isEqual></isNotEmpty>
			
	</select>

	<select id="selectexpmftdim" parameterClass="cargo.cms.common.ext.bo.FFMDimensionBO"
		resultClass="cargo.cms.common.ext.bo.FFMDimensionBO">
		<![CDATA[
			SELECT 
				TR_NO as trxnNo, DOC_LINE_NO as docLineNo, SDOC_LINE_NO as sDocLineNo, LENGTH as length, 
				WIDTH as width, HEIGHT as height, PCS as pieces, WT as weight, NVL(WT_UNIT, ' ') as weightCode, 
				NVL(DIM_UNT, ' ') as unitOfMeasurement, DIM_WGT_LBS as weightLbs 
			FROM 
				EXP_MANIFEST_DTL_DIM 
			WHERE 
				TR_NO=#trxnNo# 
			ORDER BY SDOC_LINE_NO, DOC_LINE_NO
		]]>
	</select>

	<select id="selectexpmftuld"
		parameterClass="cargo.cms.common.ext.bo.FFMftULDBO"
				resultClass="cargo.cms.common.ext.bo.FFMftULDBO">
				<![CDATA[
						SELECT * FROM (
						SELECT 
									TR_NO as trxnNo, 
									DOC_LINE_NO as docLineNo, 
									NVL(ULD_TYPE,' ') as uldType, 
									NVL(ULD_NO,' ') as uldNo, 
									NVL(ULD_CARR,' ') as uldCarrierCode, 
									NVL(ULD_KEY,' ') as uldKey, 
									NVL(ULD_LOD_IND,' ') as uldLoadingIndi,                                         
									NVL(TO_CHAR(VOL_AVAIL_CODE),' ') as volumeAvailCode,
									NVL(ULD_RMK,' ')  as uldRemarks,
									NVL(ONWARD_DEST1,' ') as onwardDest1, 
									NVL(ONWARD_CAR_COD1,' ')  as onwardCarrCode1,
									NVL(ONWARD_FLT_NO1,' ')  as onwardFlightNo1,
									NVL(TO_CHAR(ONVARD_FLT_DAT1, 'DDMON'),' ')  as onwardFlightDt1, 
									NVL(ONWARD_DEST2,' ') as onwardDest2, 
									NVL(ONWARD_CAR_COD2,' ')  as onwardCarrCode2,
									NVL(ONWARD_FLT_NO2,' ')  as onwardFlightNo2,
									NVL(TO_CHAR(ONVARD_FLT_DAT2, 'DDMON'),' ')  as onwardFlightDt2, 
									NVL(ONWARD_DEST3,' ') as onwardDest3, 
									NVL(ONWARD_CAR_COD3,' ')  as onwardCarrCode3,
									NVL(ONWARD_FLT_NO3,' ')  as onwardFlightNo3,
									NVL(TO_CHAR(ONVARD_FLT_DAT3, 'DDMON'),' ')  as onwardFlightDt3,
                  (SELECT OWNER_ID FROM ULD_INVENTORY INV WHERE INV.ULD_KEY=EXP_MANIFEST_ULD.ULD_KEY) AS carrCode
						FROM EXP_MANIFEST_ULD
						WHERE 
						TR_NO = #trxnNo# AND BB_IND = 'N' 
            			AND ULD_TYPE NOT IN (SELECT CODE FROM MAST_ULD_TYPE WHERE (DUMMY_H_CONT_IND = 'Y' OR H_CONT_IND = 'Y' AND BT_IND = 'Y'))
            ) A ]]>
            <isNotEmpty property="vesselFltInd">
			<isEqual property="vesselFltInd" compareValue="Y">
			<isNotEmpty property="vesselFltCar"> 
            WHERE 
             (A.carrCode = #vesselFltCar#
                                    OR a.carrCode IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE= #vesselFltCar#))
            </isNotEmpty></isEqual></isNotEmpty>
           	order by A.docLineNo
				 
	</select>
	<!-- SQL Statements for FFM ends here -->
	<!-- The following SQL statements were written for constructing  FHL messages -->

	<select id="selectedifhl"
		parameterClass="cargo.cms.common.ext.bo.FHLDetailBO"
		resultClass="cargo.cms.common.ext.bo.FHLDetailBO">
		<![CDATA[
			  SELECT B.TR_NO as trNo, B.MSG_VER AS msgVersion, NVL(B.AWB_NO, ' ') as awbNo,
			     NVL(AWB.ORIG,NVL(B.AWB_ORG,' ')) as awbOrigin,
                 NVL(AWB.DEST,NVL(B.AWB_DEST,' ')) as awbDest,  
			     NVL(TO_CHAR(B.AWB_DATE, 'DDMON'), ' ') as awbDt,
			     NVL((select NVL(PCS, 0) from AWB where awb_no = B.AWB_NO and  awb_date = B.AWB_DATE),B.AWB_PCS) as awbPieces, 
           		 NVL((select NVL(WT, 0) from AWB where awb_no = B.AWB_NO and  awb_date = B.AWB_DATE),B.AWB_WT) as awbWeight,
			     NVL(trim(B.AWB_WT_CODE), 'K') as awbWeightCode,
			     NVL(PART_SHMPT_YN, 'N') as awbShipmentDescCode,
			     (select carr_code from AWB  where awb_no = B.AWB_NO and AWB_DATE = B.AWB_DATE) as awbOwner
			 FROM
			 (SELECT MAX(to_number(TR_NO)) TR_NO FROM EDI_FHL WHERE AWB_NO = #awbNo#) A,
			 EDI_FHL B 
			 LEFT JOIN AWB awb ON awb.awb_no = B.awb_no and awb.awb_date = B.awb_date
			 WHERE A.TR_NO = B.TR_NO			
		]]>
	</select>

	<select id="selectedifhlhawb"
		parameterClass="cargo.cms.common.ext.bo.FHLHwbBO"
		resultClass="cargo.cms.common.ext.bo.FHLHwbBO">
		<![CDATA[
		SELECT
			TR_NO as trNo,
			DOC_LINE_NO as docLineNo, 
			HAWB_NO	 as hawbNo, 
			NVL(HAWB_ORG,' ') as hawbOrigin,  
			NVL(HAWB_DEST,' ') as hawbDestination, 
			NVL(HAWB_PCS,0) as hawbPieces, 
			NVL(HAWB_NET_WT,0) as hawbNetWeight, 
			NVL(HAWB_WT_CODE,'K') as hawbNetWeightCode,
			NVL(SPL_CODE1,' ') as splCode1,
			NVL(SPL_CODE2,' ') as splCode2,			
			( decode(spl_code1, null, '', spl_code1 || ',')
			  || decode(spl_code2, null, '', spl_code2 || ',')
			  || decode(spl_code3, null, '', spl_code3 || ',')
			  || decode(spl_code4, null, '', spl_code4 || ',')
			  || decode(spl_code5, null, '', spl_code5 || ',')
			  || decode(spl_code6, null, '', spl_code6 || ',')
			  || decode(spl_code7, null, '', spl_code7 || ',')
			  || decode(spl_code8, null, '', spl_code8 || ',')
			  || decode(spl_code9, null, '', spl_code9) ) concatSplCodes,			
			NVL(FUN_CONVERT_CONTENT(FREE_TEXT_DESC1),' ') as freeTextDesc1,
			NVL(FUN_CONVERT_CONTENT(FREE_TEXT_DESC2),' ') as freeTextDesc2,
			NVL(FUN_CONVERT_CONTENT(FREE_TEXT_DESC3),' ') as freeTextDesc3,
			NVL(FUN_CONVERT_CONTENT(FREE_TEXT_DESC4),' ') as freeTextDesc4,
			NVL(FUN_CONVERT_CONTENT(FREE_TEXT_DESC5),' ') as freeTextDesc5,
			NVL(FUN_CONVERT_CONTENT(FREE_TEXT_DESC6),' ') as freeTextDesc6,
			NVL(FUN_CONVERT_CONTENT(FREE_TEXT_DESC7),' ') as freeTextDesc7,
			NVL(FUN_CONVERT_CONTENT(FREE_TEXT_DESC8),' ') as freeTextDesc8,
			NVL(FUN_CONVERT_CONTENT(FREE_TEXT_DESC9),' ') as freeTextDesc9,
			NVL(FUN_CONVERT_CONTENT(MANIFEST_DESC),' ') as manifestDesc,
			NVL(FUN_CONVERT_CONTENT(SHPR_NAME),' ') as shipperName,
			NVL(FUN_CONVERT_CONTENT(SHPR_ADD1),' ') as shipperAddress1,
			NVL(FUN_CONVERT_CONTENT(SHPR_ADD2),' ') as shipperAddress2,
			FUN_CONVERT_CONTENT(nvl(SHPR_PLACE,'NA')) as shipperPlace,
			NVL(FUN_CONVERT_CONTENT(SHPR_STATE_PROVINCE),' ') as shipperState,
			NVL(SHPR_CTRY_CODE,'HK') as shipperCountryCode,
			NVL(FUN_CONVERT_CONTENT(SHPR_PIN_CODE),' ') as shipperPostCode,  
			NVL(FUN_CONVERT_CONTENT(CSGNE_NAME),' ') as consigneeName,
			NVL(FUN_CONVERT_CONTENT(CSGNE_ADD1),' ') as consigneeAddress1,
			NVL(FUN_CONVERT_CONTENT(CSGNE_ADD2),' ') as consigneeAddress2,
			FUN_CONVERT_CONTENT(NVL(CSGNE_PLACE,'NA')) as consigneePlace,
			NVL(FUN_CONVERT_CONTENT(CSGNE_STATE_PROVINCE),' ') as consigneeState,
			NVL(CSGNE_CTRY_CODE,'NA') as consigneeCountryCode,
			NVL(FUN_CONVERT_CONTENT(CSGNE_PIN_CODE),' ') as consigneePostCode,  
			NVL(DECLN_CURR_CODE,' ') as declCurrencyCode,
			NVL( trim(DECLN_WT_VALN_PPCC_I) , 'P') as declWeightPrepaidIndi,
			NVL( trim(DECLN_OTH_CHRG_PPCC_I) , 'P') as declOtherChargesIndi,
			NVL(DECLN_CARR,' ') as declValCarriage,
			NVL(DECLN_CTM,' ') as declValCustoms,
			NVL(DECLN_INSURCE,' ') as declValInsurance,
			NVL(HBS_SLAC,  0) as hbsSLAC, 
			NVL(HTS_COMM_CODE1, ' ') as htsCommCode1, 
			NVL(HTS_COMM_CODE2, ' ') as htsCommCode2, 
			NVL(HTS_COMM_CODE3, ' ') as htsCommCode3, 
			NVL(HTS_COMM_CODE4, ' ') as htsCommCode4, 
			NVL(HTS_COMM_CODE5, ' ') as htsCommCode5, 
			NVL(HTS_COMM_CODE6, ' ') as htsCommCode6, 
			NVL(HTS_COMM_CODE7, ' ') as htsCommCode7, 
			NVL(HTS_COMM_CODE8, ' ') as htsCommCode8, 
			NVL(HTS_COMM_CODE9, ' ') as htsCommCode9,			
			NVL(ISO_CTRY_CODE1, ' ')  as isoCountryCode1, 
			NVL(INFO_IDENTIFIER1, ' ')  as informationIdentifier1, 
			NVL(CUSTOMS_INFO_IDENTIFIERI, ' ') as customsInformationIdentifier1,
			NVL(SUPP_CUSTOMS_INFO1, ' ') as suppCustomsInformation1,
			NVL(ISO_CTRY_CODE2, ' ') as isoCountryCode2,
			NVL(INFO_IDENTIFIER2, ' ') as informationIdentifier2,
			NVL(CUSTOMS_INFO_IDENTIFIER2, ' ') as customsInformationIdentifier2,
			NVL(SUPP_CUSTOMS_INFO2, ' ') as suppCustomsInformation2
			FROM EDI_FHL_HAWB  WHERE TR_NO = #trNo#  
	 	]]>
			<isNotEmpty prepend="AND" property="hawbSearch">
				HAWB_NO = #hawbSearch#
			</isNotEmpty>
			ORDER BY DOC_LINE_NO
	</select>
	
	
	<select id="selectedifhlcontacts"
		parameterClass="cargo.cms.common.ext.bo.FHLContactBO"
		resultClass="cargo.cms.common.ext.bo.FHLContactBO">
		<![CDATA[
			SELECT
			TR_NO as trNo,
			DOC_LINE_NO as docLineNo, 
			HDOC_LINE_NO  as hdocLineNo, 
			NVL(CONT_ID,' ') as contactID, 
			NVL(FUN_CONVERT_CONTENT(CCNT_NAME),' ') as contactNo, 
			NVL(CONT_TYPE,' ') as contactType 		
			FROM EDI_FHL_CONTACT  
			WHERE 
				TR_NO = #trNo#  AND 
				CONT_TYPE=#contactType# 
				ORDER BY DOC_LINE_NO
	 	]]>
	</select>
	<!-- SQL Statements for FHL ends here -->
	<!-- The following SQL statements were written to find valid data exisits for input -->
	<select id="selectcountfltopr" parameterClass="java.util.HashMap"
		resultClass="java.lang.Integer">
		<![CDATA[
			SELECT COUNT(*) FROM FLT_OPR  WHERE FLT_KEY=#fltKey#

			AND TO_CHAR(SCH_DATE,'DDMONYY')=#fltDt#  and flt_type='D'
		 ]]>
	</select>

	<!-- SQL Statements to find SITA Address for given Flight No and Message Type -->
	<select id="selectsitaaddressfltno"
		parameterClass="java.util.HashMap"
		resultClass="cargo.cms.common.ext.bo.EDIOutboundRecipentLogBO">
		<![CDATA[
			SELECT SITA_ADDR as recipentSystem FROM CUST_AIRL_SITA_CIMP_DTL
			WHERE TR_NO IN (SELECT TR_NO  FROM CUST_AIRL_SITA_CIMP_MSG
			WHERE (FLT_KEY = #fltKey# or FLT_KEY = 'ZZZ99999') AND  MSG_TYPE=#msgType# AND CARR_CODE = #carrCode# )
		 ]]>
	</select>
	
	<select id="selectsitaaddressLUC" parameterClass="cargo.cms.common.ext.bo.LUCBO" resultClass="cargo.cms.common.ext.bo.EDIOutboundRecipentLogBO">
		SELECT distinct SITA_ADDR as recipentSystem FROM CUST_AIRL_SITA_CIMP_DTL
		WHERE TR_NO  IN (SELECT TR_NO FROM CUST_AIRL_SITA_CIMP_MSG WHERE (FLT_KEY = #fltKey# or FLT_KEY = 'ZZZ99999') AND MSG_TYPE=#msgType# AND CARR_CODE 
		IN 
		<iterate property="carrList" open="(" close=")" conjunction=",">
	                 #carrList[]#  
	    </iterate>)
	</select>
	
	
	<!-- SQL Statements to find SITA Address for given AWB No and Message Type -->
	<select id="selectsitaaddressawbno"
		parameterClass="java.util.HashMap"
		resultClass="cargo.cms.common.ext.bo.EDIOutboundRecipentLogBO">
		<![CDATA[
			SELECT SITA_ADDR as recipentSystem  FROM CUST_AIRL_SITA_CIMP_DTL
			WHERE TR_NO IN(SELECT TR_NO FROM CUST_AIRL_SITA_CIMP_MSG
			WHERE CUST_NO IN 
			(SELECT CUST_NO FROM CUST_AIRL_AWB_PFX WHERE AWB_PFX=#awbPfx#)
			AND MSG_TYPE=#msgType#)
		 ]]>
	</select>

	<!-- The following SQL statements were written to find valid data exisits for input -->

	<select id="selectmaxmsgid" resultClass="java.lang.Integer">
		<![CDATA[
			SELECT EDI_MSG_LOG_SEQ.nextval AS MAXMSGID FROM DUAL
		]]>
	</select>
	<insert id="insertedimsglog"
		parameterClass="cargo.cms.common.ext.bo.EDIOutboundMsgLogBO">
		<![CDATA[
				INSERT INTO 
					EDI_MSG_LOG_OUT (
						MSG_ID, 
						MSG_SEQ_NO, 
						AWB_NO, 
						AWB_DATE, 
						CARR_CODE, 
						FLT_NO, 
						FLT_DATE,
						FLT_KEY, 
						MSG_DATE, 
						MSG_TYPE, 
						SENDER_ID, 
						MSG, 
						MSG_TITLE, 
						ATTENTION, 
						COPY, 
						SRF_NO,
						LM_USER_ID, 
						LM_DATE,
						ENDORSE_USER,
						ENDORSE_USER_TIME,
						ADDRESSEE,
						PRIORITY, 
						LM_VER,
						TR_TYPE, TRANSITION_YN,
						UNIQUE_ID,
						MSG_ACK) 
					VALUES (
						#msgId#,
						#msgSeqNo#,
						#awbNo#,
						to_date(#awbDt#, 'DDMONYY'),
						#carrierCode#,
						#flightNo#,
						to_date(#flightDt#, 'DDMONYY'),
						#flightKey#,
						sysdate,
						#messageType#,
						#messageSenderID#,
						#messageContent#,
						#messageTitle#,
						#messageAttn#,
						#messageCopyNo#,
						#srfNo#,
						#lmUserID#,
						sysdate,
						#username#,
						#endorseTime#,
						#addressee#,
						#messagePriority#,
						#lmVersion#,
						#trtype#, NVL(#transitionYN#, 'N'),
						#msgUniqeNo#,
						nvl(#msgAck#,'N')
					)
 ]]>
	</insert>
	<insert id="insertedimsgrecipentlog"
		parameterClass="cargo.cms.common.ext.bo.EDIOutboundRecipentLogBO">
		<![CDATA[
					INSERT INTO 
						EDI_MSG_RECIPIENT_OUT (
								MSG_ID, 
								MSG_SEQ_NO, 
								RECIPIENT
								) VALUES (
								#msgId#,
								#msgSeqNo#,
								#recipentSystem#
						)
	 ]]>
	</insert>
	
		<select id="selectedifwb" parameterClass="java.lang.String" resultClass="cargo.cms.common.ext.bo.FWBBO">		
		  SELECT 
		  NVL( A.TR_NO , ' ')                   AS trNo,
	      NVL( A.MSG_VER , 0)                        AS msgVerNo,
		  NVL( A.AWB_NO , ' ')                       AS awbNo,
		  NVL( TO_CHAR(A.AWB_DATE, 'DDMON') , ' ')   AS awbDt,
		  NVL( TO_CHAR(A.AWB_DATE, 'DDMONYY') , ' ') AS awbDate,
		  DECODE(B.ORIGIN,'',A.ORG,B.ORIGIN)         AS origin,
		  DECODE(B.DEST,'',A.DES,B.DEST)             AS destination,
		  NVL( A.SHIP_DESC_C , ' ')                  AS shpmDescCode,
		  NVL(B.PCS,NVL(A.PCS,0))                    AS totalPieces,
		  NVL( A.WGT_UNIT , ' ')                     AS weightCode,
		  NVL(B.WT,NVL(A.WGT,0))                     AS totalWeight,
		  NVL( A.FLT_CARR1 , ' ')                    AS carrier1,
		  NVL( A.FLT_NUM1 , ' ')                     AS flightNo,
		  NVL( A.FLT_CARR1 || FLT_NUM1 , ' ')        AS flightKey1,
		  NVL(LPAD(A.FLT_DATE1,2,0), '0') AS flightDate,
		  NVL( A.FLT_CARR2 , ' ')         AS carrier2,
		  NVL( A.FLT_NUM2 , ' ')          AS flightNo2,
		  NVL( A.FLT_CARR2 ||FLT_NUM2 , ' ')  AS flightKey2,
		  NVL(LPAD(A.FLT_DATE2,2,0), '0') AS flightDate2,
		  NVL( A.RTG_APT_CODE , ' ')  as routeAirportCode,
		  NVL( A.RTG_DES_CARR , ' ')    AS routeCarrierCode,
		  NVL( A.RTG_ONWARD_CODE1 , ' ')    AS onwardAirportCode,
		  NVL( A.RTG_ONWARD_CARR1 , ' ')    AS onwardCarrierCode,
		  NVL( A.RTG_ONWARD_CODE2 , ' ')    AS onwardAirportCode2,
		  NVL( A.RTG_ONWARD_CARR2 , ' ')    AS onwardCarrierCode2, 
		  NVL( FUN_CONVERT_CONTENT(A.SHPR_ACC_NO) , ' ')  as shipperAcctNo,
		  NVL(DECODE(B.SHPR_NAME , '' ,A.SHPR_NAME,B.SHPR_NAME),' ')  AS shipperName,
		  NVL(DECODE(B.SHPR_ADDR , '',A.SHPR_ADDR,B.SHPR_ADDR),' ')   AS shipperAddr,
		  NVL(DECODE(B.SHPR_ADDR2 , '',A.SHPR_ADDR2,B.SHPR_ADDR2),' ')   AS shipperAddr2,
		  NVL(DECODE((B.SHPR_PLACE) , '',(A.SHPR_PLACE),(B.SHPR_PLACE)),' ')   AS shipperPlace,
		  NVL(DECODE((B.SHPR_STATE_PROVINCE) , '',(A.SHPR_STATE_PROVINCE),(B.SHPR_STATE_PROVINCE)),' ')   AS shipperState,
		  NVL(DECODE((B.SHPR_CTRY_CODE) , '',(A.SHPR_CTRY_CODE),(B.SHPR_CTRY_CODE)),' ')   AS shipperCountryCode,
		  NVL(DECODE((B.SHPR_PIN_CODE) , '',(A.SHPR_PIN_CODE),(B.SHPR_PIN_CODE)),' ')   AS shipperPostalCode,  
		  NVL((A.CSGNE_ACC_NO) , ' ')  as consigneeAcctNo,
		  NVL(DECODE((B.CSGNE_NAME) , '',(A.CSGNE_NAME),(B.CSGNE_NAME)),' ')   AS consigneeName,
		  NVL(DECODE((B.CSGNE_ADDR) , '',(A.CSGNE_ADDR),(B.CSGNE_ADDR)),' ')   AS consigneeAddr,
		  NVL(DECODE((B.CSGNE_ADDR2) , '',(A.CSGNE_ADDR2),(B.CSGNE_ADDR2)),' ')   AS consigneeAddr2,
		  NVL(DECODE((B.CSGNE_PLACE) , '',(A.CSGNE_PLACE),(B.CSGNE_PLACE)),' ')   AS consigneePlace,
		  NVL(DECODE((B.CSGNE_STATE_PROVINCE) , '',(A.CSGNE_STATE_PROVINCE),(B.CSGNE_STATE_PROVINCE)),' ')   AS consigneeState,
		  NVL(DECODE((B.CSGNE_CTRY_CODE) , '',(A.CSGNE_CTRY_CODE),(B.CSGNE_CTRY_CODE)),' ')   AS consigneeCountryCode,
		  NVL(DECODE((B.CSGNE_PIN_CODE) , '',(A.CSGNE_PIN_CODE),(B.CSGNE_PIN_CODE)),' ')   AS consigneePostalCode,
		  NVL(DECODE((select co_iata_code from cust_company c where B.agent_name = c.code_desc), '',A.AGENT_IATA_CODE,(select co_iata_code from cust_company c where B.agent_name = 		    	c.code_desc)),-1)   AS agentIATACode,
		  NVL( FUN_CONVERT_CONTENT(A.AGENT_ACC_NO) , ' ')  as agentAcctNo,
		  DECODE(B.AGENT_NAME,'',A.AGENT_NAME,B.AGENT_NAME)  AS agentName,
		  NVL( FUN_CONVERT_CONTENT(A.AGENT_PART_ID) , ' ')  as agentParticipantCode,
		  NVL( FUN_CONVERT_CONTENT(A.AGENT_PLACE) , ' ')  as agentPlace,
		  NVL( A.AGENT_IATA_ADDR , -1)  as agentCASSAddr,
		  NVL( FUN_CONVERT_CONTENT(A.AGENT_SPL_SERV1) , ' ')  as specialServiceRequest,
		  NVL( FUN_CONVERT_CONTENT(A.AGENT_SPL_SERV2) , ' ')  as specialServiceRequest2,
		  NVL( FUN_CONVERT_CONTENT(A.AGENT_SPL_SERV3) , ' ')  as specialServiceRequest3,            
		  NVL( FUN_CONVERT_CONTENT(A.NOTIFY_NAME) , ' ')  as notifyName,
		  NVL( FUN_CONVERT_CONTENT(A.NOTIFY_ADDR) , ' ')  as notifyAddr,
		  NVL( FUN_CONVERT_CONTENT(A.NOTIFY_ADDR2) , ' ')  as notifyAddr2,
		  NVL( FUN_CONVERT_CONTENT(A.NOTIFY_PLACE) , ' ')  as notifyPlace,
		  NVL( FUN_CONVERT_CONTENT(A.NOTIFY_CTRY_CODE) , ' ')  as notifyCountryCode,
		  NVL( FUN_CONVERT_CONTENT(A.NOTIFY_STATE_PROVINCE) , ' ')  as notifyState,
		  NVL( FUN_CONVERT_CONTENT(A.NOTIFY_PIN_CODE) , ' ')  as notifyPostalCode,
 		  DECODE(A.CVD_ISO_CURR_CODE,'','HKD',A.CVD_ISO_CURR_CODE)  AS declnCurrCode,
	  	NVL( trim(CVD_CHG_DECL_WGT) , 'P')  as declnWtValnInd,
	  	NVL( trim(CVD_CHG_DECL_OTH) , 'P')  as declnOtherChrgInd,	  	
	  	NVL( trim(cvd_chg_code) , ' ') as declnChargeCode,	  	
		NVL( CVD_CHG_CARR_VAL , 0)  as declnCarrier,
		NVL( CVD_CHG_CARR_IND , ' ')  as declnCarrierInd,
	  	NVL( CVD_CHG_CUST_VAL , 0)  as declnCustom,
	  	NVL( CVD_CHG_CUST_IND , ' ')  as declnCustomInd,
		NVL( CVD_CHG_INSUR_VAL , 0)  as declnInsurance,
    	DECODE(A.CVD_CHG_INSUR_IND,'','XXX',A.CVD_CHG_INSUR_IND)  AS declnInsuranceInd,
    	NVL( PPD_TOTAL_WT_AMT , 0)  as ppccWeightChrg,
	  	NVL( PPD_VALUE_VC_AMT , 0)  as ppccValnChrg,
	  	NVL( PPD_TAXES_TX_AMT , 0)  as ppccTaxes,
		NVL( PPD_TOTAL_OA_AMT , 0)  as ppccOtherChrgDueAgent,
	  	NVL( PPD_TOTAL_OC_AMT , 0)  as ppccOtherChrgDueCarrier,
	  	NVL( PPD_SUMMY_CT_AMT , 0)  as ppccTotalChrg,
	  	NVL( COL_TOTAL_WT_AMT , 0)  as colWeightChrg,
		NVL( COL_VALUE_VC_AMT , 0)  as colValnChrg,
	  	NVL( COL_TAXES_TX_AMT , 0)  as colTaxes,
	  	NVL( COL_TOTAL_OA_AMT , 0)  as colOtherChrgDueAgent,
	  	NVL( COL_TOTAL_OC_AMT , 0)  as colOtherChrgDueCarrier,
	  	NVL( COL_SUMMY_CT_AMT , 0)  as colTotalChrg,
    	NVL( CER_SIGNATURE , ' ')  as shprCertification,
    	NVL(TO_CHAR(ISU_AWB_ISS_DATE,'DD'), 0) AS carDay,
	  	NVL(TO_CHAR(ISU_AWB_ISS_DATE,'MON'), ' ') AS carMonth,
	  	NVL(TO_CHAR(ISU_AWB_ISS_DATE,'YY'), 0) AS carYear,
	  	NVL( TO_CHAR(ISU_AWB_ISS_DATE, 'DDMONYY') , ' ')  as awbIssuedDate,
	  	NVL( FUN_CONVERT_CONTENT(ISU_AWB_ISS_PLACE) , ' ')  as carPlace,
	  	NVL( ISU_SIGNATURE , ' ')  as carSignature,
    	NVL( FUN_CONVERT_CONTENT(OSI_SERVICE_INFO1) , ' ')  as otherServiceInfo,
	  	NVL( FUN_CONVERT_CONTENT(OSI_SERVICE_INFO2) , ' ')  as otherServiceInfo2,
  		NVL( FUN_CONVERT_CONTENT(OSI_SERVICE_INFO3) , ' ')  as otherServiceInfo3,
 	  	NVL( CDC_ISO_CURR_CODE , ' ')  as ccCurrCode,
	  	NVL( CDC_CURR_RATE , 0)  as ccCurrConverExchangeRate,
	  	NVL( CDC_CC_INDES_AMT , 0)  as ccCurrConverDestChrg,
	  	NVL( CDC_CC_ATDES_AMT , 0)  as ccCurrConverTotalDestChrg,
    	NVL( CDC_TOTAL_CHG_AMT , 0)  as ccCurrConverTotalChrg,
    	NVL( REF_APT_CODE , ' ')  as sendrOffAirpC,
    	NVL( REF_OFFICE_DESI , ' ')  as sendrOffFuncDesg,
	    NVL( REF_COMP_DESI , ' ')  as sendrOffCoDesg,
	    NVL( REF_FILE_REF , ' ')  as sendrOffFileRefNo,
	    NVL( REF_PART_ID , ' ')  as sendrPartiI,
	    NVL( REF_PART_CODE , ' ')  as sendrPartiC,
	    NVL( REF_PART_APT_CODE , ' ')  as sendrAirpC,
	    NVL( COR_CUST_ORI_CODE , ' ')  as ctmOrgCode,
	    NVL( COI_CASS_IND , ' ')  as caasIndicator,
	    NVL( COI_CASS_AMT_FACT , 0)  as caasSettlement,
	    NVL( COI_CASS_PER_FACT , 0)  as cassCommPerc,
	    NVL( SII_CHG_AMT , 0)  as salesChrgAmt,
	    NVL( SII_CASS_IND , ' ')  as salesCaasIndicator,
	    NVL( ARD_FILE_REF , ' ')  as agFileRef,
	     (select NVL(SPL_CODE1,'') from AWB awb  left join MAST_CARR_SPL_HAND_CODE spl ON CARRIER = awb.carr_code
		  where awb_no = c.AWB_NO and AWB_date = c.AWB_DATE and ( spl.SPL_CODE is null OR ( spl.SPL_CODE is not null AND instr(spl.SPL_CODE,spl_code1) = 0 ) ) ) as specialHandCode,
		(select NVL(SPL_CODE2,'') from AWB awb  left join MAST_CARR_SPL_HAND_CODE spl ON CARRIER = awb.carr_code
		  where awb_no = c.AWB_NO and AWB_date = c.AWB_DATE and ( spl.SPL_CODE is null OR ( spl.SPL_CODE is not null AND instr(spl.SPL_CODE,spl_code2) = 0 ) ) ) as specialHandCode2,
		(select NVL(SPL_CODE3,'') from AWB awb  left join MAST_CARR_SPL_HAND_CODE spl ON CARRIER = awb.carr_code
		  where awb_no = c.AWB_NO and AWB_date = c.AWB_DATE and ( spl.SPL_CODE is null OR ( spl.SPL_CODE is not null AND instr(spl.SPL_CODE,spl_code3) = 0 ) ) ) as specialHandCode3,
		(select NVL(SPL_CODE4,'') from AWB awb  left join MAST_CARR_SPL_HAND_CODE spl ON CARRIER = awb.carr_code
		  where awb_no = c.AWB_NO and AWB_date = c.AWB_DATE and ( spl.SPL_CODE is null OR ( spl.SPL_CODE is not null AND instr(spl.SPL_CODE,spl_code4) = 0 ) ) ) as specialHandCode4,
		(select NVL(SPL_CODE5,'') from AWB awb  left join MAST_CARR_SPL_HAND_CODE spl ON CARRIER = awb.carr_code
		 where awb_no = c.AWB_NO and AWB_date = c.AWB_DATE and ( spl.SPL_CODE is null OR ( spl.SPL_CODE is not null AND instr(spl.SPL_CODE,spl_code5) = 0 ) ) ) as specialHandCode5,
		(select NVL(SPL_CODE6,'') from AWB awb  left join MAST_CARR_SPL_HAND_CODE spl ON CARRIER = awb.carr_code
		 where awb_no = c.AWB_NO and AWB_date = c.AWB_DATE and ( spl.SPL_CODE is null OR ( spl.SPL_CODE is not null AND instr(spl.SPL_CODE,spl_code6) = 0 ) ) ) as specialHandCode6,
		(select NVL(SPL_CODE7,'') from AWB awb  left join MAST_CARR_SPL_HAND_CODE spl ON CARRIER = awb.carr_code
		 where awb_no = c.AWB_NO and AWB_date = c.AWB_DATE and ( spl.SPL_CODE is null OR ( spl.SPL_CODE is not null AND instr(spl.SPL_CODE,spl_code7) = 0 ) ) ) as specialHandCode7,
		(select NVL(SPL_CODE8,'') from AWB awb  left join MAST_CARR_SPL_HAND_CODE spl ON CARRIER = awb.carr_code
		 where awb_no = c.AWB_NO and AWB_date = c.AWB_DATE and ( spl.SPL_CODE is null OR ( spl.SPL_CODE is not null AND instr(spl.SPL_CODE,spl_code8) = 0 ) ) ) as specialHandCode8,
		(select NVL(SPL_CODE9,'') from AWB awb  left join MAST_CARR_SPL_HAND_CODE spl ON CARRIER = awb.carr_code
		 where awb_no = c.AWB_NO and AWB_date = c.AWB_DATE and ( spl.SPL_CODE is null OR ( spl.SPL_CODE is not null AND instr(spl.SPL_CODE,spl_code9) = 0 ) ) ) as specialHandCode9, 			  			  
	    NVL( FUN_CONVERT_CONTENT(NOM_NAME) , ' ')  as nomName,
	    NVL( FUN_CONVERT_CONTENT(NOM_SPACE) , ' ')  as nomPlace,
	    NVL( FUN_CONVERT_CONTENT(SRI_REF_NO) , ' ')  as shipRefNumber,
	    NVL( FUN_CONVERT_CONTENT(SRI_SUPP_SHP_INFO1) , ' ')  as shipSupplementaryInfo1,
	    NVL( FUN_CONVERT_CONTENT(SRI_SUPP_SHP_INFO2) , ' ')  as shipSupplementaryInfo2,
	    NVL( FUN_CONVERT_CONTENT(B.SEC_RC_CODE) , ' ')  as secRANumber,
	    NVL( B.CONTENT , ' ')  as content 
		  FROM EDI_FWB A
		  LEFT JOIN exp_car B ON A.AWB_NO = B.AWB_NO AND A.AWB_DATE = B.AWB_DATE
  		  LEFT JOIN AWB C ON C.AWB_NO = A.AWB_NO AND C.AWB_DATE = A.AWB_DATE
    	  WHERE  TR_NO=#param#				
	</select>
	
	<select id="selectmaxedifwb" parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT MAX(TO_NUMBER(TR_NO)) FROM  EDI_FWB B WHERE B.AWB_NO = #param#
	</select>
	
	<select id="checkEdiRecordExists" parameterClass="map" resultClass="java.lang.String">
		SELECT count(1) FROM  EDI_FWB  WHERE AWB_NO = #AWB_NO#
	</select>
	
	<select id="validateAwbFromCar" parameterClass="map" resultClass="java.lang.String">
		select count(1) from exp_car where awb_no = #AWB_NO# 
	</select>
	
	<select id="validateAwbFromSID" parameterClass="map" resultClass="java.lang.String">
		select sid_no from exp_sid where awb_no = #AWB_NO#		
	</select>
	
	<select id="selectedifwbaccntinfo"
		parameterClass="cargo.cms.common.ext.bo.FWBAccountInfoBO"
		resultClass="cargo.cms.common.ext.bo.FWBAccountInfoBO">
		<![CDATA[
			SELECT 
				NVL( TR_NO,  ' ')  as trNo,
				NVL( DOC_LINE_NO,  0)  as docLineNo,
				NVL( ACC_INFO_IND , ' ')  as accountingInfoIndicator,
				NVL( ACC_INFO  , ' ')  as accountingInfo
			FROM EDI_FWB_ACCT_INFO
			WHERE 
				TR_NO = #trNo# 
				order by   DOC_LINE_NO
	 	]]>
	</select>

	<select id="selectExpCarFwbotherchrages" parameterClass="map"	resultClass="cargo.cms.common.ext.bo.FWBOtherChargeBO">
		<![CDATA[
		SELECT 
		ITM_CODE    AS	chargeCode,
		PREPAID_AMT AS	prepaidAmount,
		COLLECT_AMT AS	collectAmount  
		FROM EXP_AWB_REV_CHARGES	WHERE awb_no = #AWB_NO#  and awb_date = #AWB_DATE# 
		and TO_NUMBER(length(itm_code),99) = 2  AND (PREPAID_AMT != '0' OR COLLECT_AMT != '0')
    	UNION ALL
   		SELECT 
		ITM_CODE    AS	chargeCode,
		CHRG_AMT AS	prepaidAmount,
		TO_NUMBER('0',9)  AS	collectAmount  
		FROM EXP_AWB_NONREV_CHARGES	WHERE awb_no = #AWB_NO#  and awb_date = #AWB_DATE# 
		and  TO_NUMBER(length(itm_code),99) = 2 AND (CHRG_AMT != '0')
	 	]]>
	</select>
	
	<select id="selectedifwbotherchrages"
		parameterClass="cargo.cms.common.ext.bo.FWBOtherChargeBO"
		resultClass="cargo.cms.common.ext.bo.FWBOtherChargeBO">
		<![CDATA[
			SELECT 
				NVL( TR_NO, ' ') as trNo, 
				NVL( DOC_LINE_NO, 0) as docLineNo, 
				NVL( OTH_PC_I1, ' ') as otherChargesInd, 
				NVL( OTH_CHRG_C1, ' ') as otherChargesCode, 
				NVL( OTH_ENTLEMT_C1, ' ') as otherEntitlementCode, 
				NVL( OTH_CHRG1, 0) as otherCharge , 			
				NVL( OTH_CHRG_C2, ' ') as otherChargesCode1, 
				NVL( OTH_ENTLEMT_C2, ' ') as otherEntitlementCode1, 
				NVL( OTH_CHRG2, 0) as otherCharge1, 
				NVL( OTH_CHRG_C3, ' ') as otherChargesCode2, 
				NVL( OTH_ENTLEMT_C3, ' ') as otherEntitlementCode2, 
				NVL( OTH_CHRG3 , 0) as otherCharge2
			FROM EDI_FWB_OTH_CHARGES
			WHERE 
				TR_NO = #trNo# 
				order by   DOC_LINE_NO
	 	]]>
	</select>

	<select id="selectedifwbotherparticipant"
		parameterClass="cargo.cms.common.ext.bo.FWBOtherParticipantBO"
		resultClass="cargo.cms.common.ext.bo.FWBOtherParticipantBO">
		<![CDATA[
			SELECT 
				NVL(TR_NO, ' ') as trNo,
				NVL(DOC_LINE_NO, 0) as docLineNo,
				NVL( OPI_NAME, ' ') as opiName,
				NVL( OPI_APT_CODE, ' ') as opiAptCode,
				NVL( OPI_OFFICE_DESI, ' ') as opiOfficeDesi,
				NVL( OPI_COMP_DESI, ' ') as opiCompDesi,
				NVL( OPI_FILE_REF, ' ') as opiFileRef,
				NVL( OPI_PART_ID, ' ') as opiPartId,
				NVL( OPI_PART_CODE, ' ') as opiPartCode,
				NVL( OPI_OTH_APT_CODE , ' ') as opiOthAptCode
			FROM EDI_FWB_OTH_PARTICIPANT
			WHERE 
				TR_NO = #trNo# 
				order by   DOC_LINE_NO
		 ]]>
	</select>

	<select id="selectedifwbcontact"
		parameterClass="cargo.cms.common.ext.bo.FWBContactDetailsBO"
		resultClass="cargo.cms.common.ext.bo.FWBContactDetailsBO">
		<![CDATA[
			SELECT 
				NVL(TR_NO, ' ') as trNo,
				NVL(DOC_LINE_NO, 0) as docLineNo,
				NVL(CONT_ID, ' ') as contactID,
				NVL(FUN_CONVERT_CONTENT(CONT_NAME), ' ') as contactName,
				NVL(CONT_TYPE, ' ') as contactType 
			FROM EDI_FWB_CONTACT
			WHERE 
				TR_NO = #trNo# 
				AND 
				CONT_TYPE = #contactType# 
				ORDER BY  DOC_LINE_NO
		 ]]>
	</select>

	<select id="selectedifwbrate"
		parameterClass="cargo.cms.common.ext.bo.FWBRatesBO"
		resultClass="cargo.cms.common.ext.bo.FWBRatesBO">
		
		<![CDATA[

		SELECT NVL(A.TR_NO, ' ') as trNo,
			ROWNUM docLineNo,
			NVL( A.RATE_PCS, 0) as ratePieces,
			NVL( A.RATE_GWT_CODE, ' ') as rateGrossWeightCode,
			NVL( A.RATE_GWT, 0) as rateGrossWeight,
			NVL( A.RATE_CL_CODE, ' ') as rateClassCode,
			NVL( A.RATE_COMM_N, ' ') as rateCommodityName,
			NVL( A.RATE_CHRGBLE_WT, 0) as rateChargeableWeight,
			NVL( A.RATE_CHRG_RATE, 0) as rateChargeRate,
			NVL( A.RATE_CHRG_A, 0) as rateChargeAmt,
			NVL( A.RATE_GOODS_DATA_I, ' ') as rateGoodsDataIdentifier,
			NVL( FUN_CONVERT_CONTENT(substr(A.RATE_GOODS_NATR,1,20)), ' ') as rateGoodsNatureDesc,
			NVL( A.RTD_AWB_WGT_UNIT, ' ') as ndGrossWeightCode,
			NVL( A.RTD_AWB_WGT,0) as ndGrossWeight,
			NVL( A.RTD_AWB_DIM_UNIT, ' ') as measureUnitCode,
			NVL( A.LENGTH, 0) as ndLength,
			NVL( A.WIDHT, 0) as ndWidth,
			NVL( A.HEIGHT, 0) as ndHeight,
			NVL( A.PCS, 0) as ndPcs,
			NVL( A.RTD_AWB_VOL_CODE, ' ') as nvVolumnCode,
			NVL( A.RTD_AWB_VOL_AMT, 0) as ndVolumnAmt,
			NVL( A.RTD_ULD_TYPE, ' ') as nuULDType,
			NVL( A.RTD_ULD_NUM, ' ') as nuSlNo,
			NVL( A.RTD_ULD_CARR, ' ') as nuOwnerCode,
			NVL( A.RTD_SLAC, 0) as shipperLoadCount,
			NVL( A.RTD_SLAC, -1) as nsSLAC,
			NVL( A.RTD_HARM_COMM_C, ' ') as harmCommCode,
			NVL( A.RTD_HARM_COMM_C, ' ') as nhCommodityCode, 
			NVL( A.RTD_ISO_CNTY_CODE, ' ') as noCountryCode,
			NVL( A.RTD_SERVICE_CODE, ' ') as serviceCode,
			NVL( A.RTD_CONS_NOG, ' ') as rateGoodsNatureConsolidation	
		FROM
		((SELECT TR_NO, 'A' seq, RATE_PCS, RATE_GWT_CODE, RATE_GWT,
			RATE_CL_CODE, RATE_COMM_N, RATE_CHRGBLE_WT, RATE_CHRG_RATE,
			RATE_CHRG_A, RATE_GOODS_DATA_I, RATE_GOODS_NATR,
			RTD_AWB_WGT_UNIT, RTD_AWB_WGT, RTD_AWB_DIM_UNIT, null LENGTH, null WIDHT, null HEIGHT, null PCS,
			null RTD_AWB_VOL_CODE, null RTD_AWB_VOL_AMT, null RTD_ULD_TYPE,
			null RTD_ULD_NUM, null RTD_ULD_CARR, null RTD_SLAC, null RTD_HARM_COMM_C,
			null RTD_ISO_CNTY_CODE, null RTD_SERVICE_CODE, null RTD_CONS_NOG
			FROM EDI_FWB_CHR_RATE
			WHERE TR_NO = #trNo# AND (RATE_PCS>0 OR RATE_GWT>0 OR RATE_GOODS_NATR IS NOT NULL)) 
		union all 
		(SELECT TR_NO, 'B' seq, null RATE_PCS, null RATE_GWT_CODE, null RATE_GWT,
			null RATE_CL_CODE, null RATE_COMM_N, null RATE_CHRGBLE_WT, null RATE_CHRG_RATE,
			null RATE_CHRG_A, null RATE_GOODS_DATA_I, null RATE_GOODS_NATR,
			RTD_AWB_WGT_UNIT, RTD_AWB_WGT, RTD_AWB_DIM_UNIT, LENGTH, WIDHT, HEIGHT, PCS,
			RTD_AWB_VOL_CODE, RTD_AWB_VOL_AMT, RTD_ULD_TYPE,
			RTD_ULD_NUM, RTD_ULD_CARR, RTD_SLAC, RTD_HARM_COMM_C,
			RTD_ISO_CNTY_CODE, RTD_SERVICE_CODE, RTD_CONS_NOG
			FROM EDI_FWB_DMN
			WHERE TR_NO = #trNo# ) ) A
	 	]]>
	</select>
		
	<select id="selectedifwboci"
		parameterClass="cargo.cms.common.ext.bo.FWBOtherCustomInformationBO"
		resultClass="cargo.cms.common.ext.bo.FWBOtherCustomInformationBO">
		<![CDATA[
			SELECT 
				NVL(TR_NO, ' ') as trNo,
				NVL(DOC_LINE_NO, 0) as docLineNo,
				NVL( ISO_CTRY_CODE, ' ') as isoCountryCode,
				NVL( INFO_IDENTIFIER, ' ') as informationIdentifier,			
				NVL( SUPP_CUST_INFO, ' ') as supplementaryCustomsInfo,
				NVL( cust_info_identifier, ' ') as customsInformationIdentifier			
			FROM EDI_FWB_OCI
			WHERE 
				TR_NO = #trNo# 
				order by   DOC_LINE_NO
	 	]]>
	</select>
	
	<parameterMap id="edioutboundupdatemap" class="map" >		
		<parameter property="AWBNUMBER" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	</parameterMap>
	<procedure id="edioutbound_update_EDI_FHL" parameterMap="edioutboundupdatemap" >
		{call PRO_UPDATE_EDI(?)}
	</procedure>
	
	<parameterMap id="ediOutboundMsgVersionMap" class="map">		
		<parameter property="VERSIONNUM" jdbcType="VARCHAR"	javaType="java.lang.String" mode="OUT"/>
		<parameter property="FLTKEY" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="AWBPFX" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="MSGTYPE" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
	</parameterMap>
	<procedure id="getEdiMsgVersionNum" parameterMap="ediOutboundMsgVersionMap" >
		{? = call FUN_MSG_VER_NO(?,?,?)}
	</procedure>
	<!-- added for FSR /FSA start -->
	<parameterMap id="selectquery_edi_fsa_msgMap" class="map">		
		<parameter property="AWBNO" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="FSAMESSAGE" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
	</parameterMap>
	<procedure id="selectquery_edi_fsa_msg" parameterMap="selectquery_edi_fsa_msgMap" >
		{call PKG_FSU.SEND_FSA(?,?)}
	</procedure>
	
	
	<select id="ediOutboundFSASitaAddress" parameterClass="java.util.HashMap" resultClass="cargo.cms.common.ext.bo.EDIOutboundRecipentLogBO">
	select  distinct c.sita_addr as recipentSystem from mast_awb_prefix a,     cust_airl_sita_cimp_msg b,
	cust_airl_sita_cimp_dtl c where b.tr_no = c.tr_no   and b.carr_code = a.carr_code
  	and b.msg_type='FSA'  and a.def_yn = 'Y' and a.code = #awb_prefix# 
	</select>
	
	<select id="edioutbound_default_origian_address" resultClass="java.lang.String">
	  SELECT DISTINCT RULE_VALUE FROM CMSRULES WHERE RULE_CODE ='SITA_ORI_ADD'
	</select>
	<!-- added for FSR /FSA End -->
	
	<!-- added for FAR Start-->
	<parameterMap id="selectquery_edi_far_msgMap" class="map">		
		<parameter property="AWBNO" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="AWBDATE" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="FLTKEY" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="FLTDATE" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="FARMESSAGE" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
	</parameterMap>
	<procedure id="selectquery_edi_far_msg" parameterMap="selectquery_edi_far_msgMap"  >
		{call PKG_FSU.FSU_FAR(?,?,?,?,?)}
	</procedure>

	<select id="isAwbNoExistsinawbshpsts" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		select count(*) from awb_shp_sts where awb_no=#AWBNO# and flt_no=#FLTKEY# and flt_date=#FLTDATE# and  COD_FSU_STS='FAR'
	</select>	
	
	<insert id="insertintoawbshpsts" parameterClass="java.util.HashMap">
		INSERT INTO AWB_SHP_STS(AWB_NO, AWB_DATE, DAT_FSU_CRE, COD_FSU_STS, COD_FSU_SND, DES_FSU_DTS, 
		QTY_TOT_PCS, FLT_NO, FLT_DATE)
		values (#awbNo# , #awbDate# , sysdate , #msgType#, #codeFsuSend# , #msg# , #qtyTotPcs#,
		#fltKey#,#fltDate#)
	</insert>
	
	<select id="selectquery_edi_far_fltdetails" parameterClass="cargo.cms.common.ext.bo.EDIOutboundMsgLogBO" resultClass="cargo.cms.common.ext.bo.EDIOutboundMsgLogBO">
		select b.flt_key as flightKey , TO_CHAR(b.flt_date ,'DDMONYY') as flightDt , a.awb_no as awbNo , TO_CHAR(a.awb_date ,'DDMONYY') as awbDt from imp_car_awb a ,  imp_car_shp b
		where a.awb_no = b.awb_no   and a.awb_date = b.awb_date   and b.flt_key = #flightKey#	and b.flt_date = to_date(#flightDt#,'ddmonyy')
		
    </select>
    
    <parameterMap id="select_edi_far_fltcarrMap" class="map">		
		<parameter property="ERRMESSAGE" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
		<parameter property="FLTKEY" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="CARR" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
		<parameter property="FLTNO" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
	</parameterMap>
	<procedure id="select_edi_far_fltcarr" parameterMap="select_edi_far_fltcarrMap" >
		{?=call PKG_VALIDATE.GET_FLT_CARR(?,?,?)}
	</procedure>
	
	<select id="edioutbound_far_sitaaddress" parameterClass="cargo.cms.common.ext.bo.EDIOutboundMsgLogBO"  resultClass="cargo.cms.common.ext.bo.EDIOutboundRecipentLogBO">
	select  distinct b.sita_addr as recipentSystem  from cust_airl_sita_cimp_msg a,cust_airl_sita_cimp_dtl b 
	where a.tr_no = b.tr_no  and a.msg_type='FSU/FAR' and a.flt_key = #flightKey#
	</select>

   <select id="edioutbound_far_default_sitaaddress" parameterClass="cargo.cms.common.ext.bo.EDIOutboundMsgLogBO" resultClass="cargo.cms.common.ext.bo.EDIOutboundRecipentLogBO">
   select  distinct b.sita_addr as recipentSystem from cust_airl_sita_cimp_msg a,cust_airl_sita_cimp_dtl b 
   where a.tr_no = b.tr_no  and a.msg_type='FSU/FAR' and a.carr_code = substr(#flightKey#,1,2)  and a.flt_key = 'ZZZ99999'
   </select>
   <select id ="selectFFMOutFileSeqNo"	resultClass="java.lang.Integer">
		SELECT EDI_FFM_OUT_FILE_SEQ.nextval AS sequnceNo FROM DUAL
	</select>
	<select id ="selectFHLOutFileSeqNo"	resultClass="java.lang.Integer">
		SELECT EDI_FHL_OUT_FILE_SEQ.nextval AS sequnceNo FROM DUAL
	</select>
	<select id ="selectFWBOutFileSeqNo"	resultClass="java.lang.Integer">
		SELECT EDI_FWB_OUT_FILE_SEQ.nextval AS sequnceNo FROM DUAL
	</select>
    
	<!-- 	count gt then 0 error - cannot process as FWB is Freezed.	-->

	<select id ="checkAwbFreeze" parameterClass="java.lang.String"	resultClass="java.lang.Integer">
		select count(1) from exp_doc_recd 
		where awb_no =#awbNo# and 
		awb_date = (select max(awb_date) from exp_doc_recd  
		where awb_no =#awbNo#) 
		and FWB_FRZ_YN = 'Y'
	</select>

	<!-- added for FAR End-->

	<select id ="checkEnableFmaFna" parameterClass="java.lang.String"	resultClass="java.lang.String">
		select send_fma_fna from MAST_CARRIER where code = #param#
	</select>

	<!-- SQL Queries for Message_Log table 
	Added by Varadaraj Muni 15-Sep-2010
	 -->
	 <select id="fetchMaxMessageLogCopyNoFlightLevel" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">		
		SELECT (COUNT(1) + 1) AS copyNo FROM MESSAGE_LOG WHERE FLT_KEY = #flightKey# AND FLT_DATE = TO_DATE(#flightDate#,'MM/DD/YYYY') AND MSG_TYPE = #msgType#
	</select>
	<select id="fetchMaxMessageLogCopyNoAwbLevel" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		SELECT COPY_NO FROM EDI_FWB WHERE AWB_NO = #awbNo#
		AND ORG = #origin# AND DES = #destination# AND tr_no=(select max(to_number(tr_no))tr_no from
		edi_fwb WHERE AWB_NO = #awbNo# AND ORG = #origin# AND DES =
		#destination# ) AND ROWNUM = 1
	</select>
	<select id="fetchMaxMessageLogCopyNoFhlAwbLevel" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
			SELECT (COUNT(1) + 1) FROM MESSAGE_LOG WHERE AWB_NO = #awbNo# AND MSG_TYPE = 'FHL'
	</select>
	<insert id="insertMessageLogQuery"
		parameterClass="cargo.cms.edi.ei.bo.MessageLogBO">

		INSERT INTO MESSAGE_LOG ( MSG_TYPE,VER_NO,FROM_ADR,MSG_HDR,RECV_DATE,FLT_KEY,FLT_DATE,AWB_NO,
		MSG_STATUS,MSG_PATH,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,MSG_LOG_ID, MSG_CONTENT)

		VALUES (#messageType#, #versionNumber# ,#fromAddress# ,
		#messageHeader#, TO_DATE(#receiveDate#,'YYYY/MM/DD HH24:MI'), UPPER(#flightKey#), TO_DATE( #flightDate#,
		'MM/DD/YYYY'), #awbNo#, #messageStatus#, #messagePath#,NVL(#createdUserId#, 'SYSUSER') , SYSDATE , 
		NVL(#createdUserId#, 'SYSUSER') , SYSDATE, #messageId#, #messageContentBytes#)		
	</insert>
	
	<insert id="insertMessageLogTransHouse"
		parameterClass="cargo.cms.edi.ei.bo.FHLHawbBO">

		INSERT INTO MESSAGE_LOG ( MSG_TYPE,VER_NO,FROM_ADR,MSG_HDR,RECV_DATE,FLT_KEY,FLT_DATE,AWB_NO,
		MSG_STATUS,MSG_PATH,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,MSG_LOG_ID,MSG_CONTENT)

		VALUES (#messageType#, #versionNumber# ,#fromAddress# ,
		#messageHeader#, SYSDATE, UPPER(#flightKey#), TO_DATE(#flightDate#,'DDMONYY'), #awbNo#, #messageStatus#, #messagePath#, #userID# , SYSDATE , 
		#userID# , SYSDATE, EDI_MESSAGE_LOG_SEQ.NEXTVAL,#messageContentBytes#)		
	</insert>	
	
	<select id="fetchMessageLogId" parameterClass="cargo.cms.edi.ei.bo.MessageLogBO" resultClass="java.lang.String">		
		SELECT EDI_MESSAGE_LOG_SEQ.NEXTVAL FROM DUAL
	</select>
	
	<!-- SQL Queries for ErrorMsg_Log table 
	Added by Varadaraj Muni 15-Sep-2010
	 -->
	
	<insert id="insertErrorMessageLogQuery" parameterClass="cargo.cms.edi.ei.bo.ErrorMessageLogBO">		
		INSERT INTO EDI_ERRORMSG_LOG(MSG_LOG_ID,ERR_ID,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,ERR_MSG_TEXT,ERR_FLIGHT_DESC,ERR_PLACEHOLDER_TEXT) 		
		VALUES (#msgLogId#, #errorId#,NVL(#createdUserId#,'ADMIN') , SYSDATE ,NVL(#createdUserId#,'ADMIN') , SYSDATE,#errorMsgText#,#errorFlightText#,#errorPlaceHolderText#)
	</insert>

	<insert id="insertSSIMErrorMessageLogQuery" parameterClass="cargo.cms.edi.ei.bo.ErrorMessageLogBO">
		<![CDATA[
		INSERT INTO SERVICE_ERR_LOG
		  ( TR_NO, TR_TYPE, DOC_LINE_NO, TR_DATE,
		    OWNER_ID, CARR_CODE , FLT_KEY , RMK1, RMK2, 
		    ERR_REASON,
		    CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE)
		  VALUES
		  (#msgLogId#, 'SS', SERVICE_ERR_LOG_DLN_SEQ.nextval, SYSDATE,
		    #flightCarr#,#flightCarr#, #flightKey# , (#errorMsgText# || ' ' || #errorFlightText#), (#errorMsgText# || ' ' || #errorFlightText#) , 
		    (#errorId# || ' ' || #errorMsgText# || ' ' || #errorFlightText#),		  
		   NVL(#createdUserId#,'ADMIN'), SYSDATE, NVL(#createdUserId#,'ADMIN'), SYSDATE )	
	]]>
	</insert>

	<!--  SQL Query to fetch FFM Message Freeze status -->
	<select id="fetchFFMMessageFreezeStatus" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT FFM_FRZ_DATE FROM START_PREP WHERE FLT_KEY = #flightKey# AND FLT_DATE = TO_DATE( #flightDate#,'MM/DD/YYYY')
		AND MSG_TYPE = #messageType# AND ROWNUM = 1
	</select>
	<!--  SQL Query to fetch FWB Message Freeze status -->
	<select id="fetchFWBMessageFreezeStatus" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT FWB_FRZ_DATE FROM START_PREP_DTL WHERE AWB_NO = #awbNo# AND MSG_TYPE = #messageType# AND ROWNUM = 1
	</select>
	<!--  SQL Query to fetch FHL Message Freeze status -->
		<select id="fetchFHLMessageFreezeStatus" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT FHL_FRZ_DATE FROM START_PREP_DTL WHERE AWB_NO = #awbNo# AND AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') AND MSG_TYPE = #messageType# AND ROWNUM = 1
	</select>
        <select id="fetchFHLSystemFreezeStatus" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		SELECT COUNT(1)  FROM EDI_FFM_MSG FFM, EDI_FFM_SHP SHP, FLT_OPR OPR
		WHERE FFM.TR_NO = SHP.TR_NO AND FFM.FLT_KEY = OPR.FLT_KEY AND FFM.FLT_DATE = OPR.SCH_DATE AND
		SYSDATE >  (TO_DATE(TO_CHAR(SCH_DATE,'DDMONYY')||LPAD(SCH_TIME,4,0),'DDMONYYHH24MI') - (SELECT RULE_VALUE FROM CMSRULES WHERE RULE_CODE = 'FHL_FREEZE_HRS')/24) AND
		SHP.AWB_NO = #awbNo# and SHP.AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') AND FFM.FFM_STATUS = 'P' AND OPR.FLT_TYPE = 'A' AND SHP.AWB_DATE = PKG_IMP.FUN_GET_AWBDATE_EXISTING(SHP.AWB_NO,'')
	</select>	
	<select id="fetchFlightCustomSubmissionStatus" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT DISTINCT SUBM.REC_TYPE FROM EDI_FFM_MSG MSG,CST_SUBM SUBM 
		WHERE SUBM.FLT_KEY = MSG.FLT_KEY AND SUBM.FLT_DATE = MSG.FLT_DATE AND SUBM.REC_TYPE = 'INT' AND
		MSG.FLT_KEY = #flightKey# AND MSG.FLT_DATE = TO_DATE( #flightDate#,'MM/DD/YYYY') AND SUBM.SEND_STATUS NOT IN ('E','R')
	</select>
	<select  id="fetchAwbCustomSubmissionStatus" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT DISTINCT SUBM.REC_TYPE FROM EDI_FFM_MSG MSG,EDI_FFM_SHP SHP,CST_SUBM SUBM
		WHERE SUBM.FLT_KEY = MSG.FLT_KEY AND SUBM.FLT_DATE = MSG.FLT_DATE AND MSG.TR_NO = SHP.TR_NO AND
		SUBM.REC_TYPE = 'INT' AND SHP.AWB_NO=#awbNo# AND SHP.AWB_DATE=PKG_COMMON.GET_AWB_DATE(#awbNo#, '') AND 
		SUBM.SEND_STATUS NOT IN ('E','R')
	</select>
	<delete id="deletePendingMessageLog" parameterClass="java.util.HashMap">
		DELETE MESSAGE_LOG WHERE MSG_TYPE = #messageType# AND MSG_LOG_ID = #messageLogId#
	</delete>
	<select id="checkATAForFlight" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM FLT_OPR WHERE FLT_KEY = #flightKey# AND SCH_DATE = TO_DATE( #flightDate#,'MM/DD/YYYY') AND
		(SELECT RULE_VALUE FROM CMSRULES WHERE RULE_CODE = 'PRE_SET_TIME') > ((TO_CHAR(SYSDATE, 'HH24') * 60 + TO_CHAR(SYSDATE, 'MI')) - (DECODE(ACT_TIME,NULL,0,SUBSTR(ACT_TIME,0,2)) * 60 + SUBSTR(ACT_TIME,2,4)))   
		AND ACT_TIME IS NOT NULL
	</select>
	<select id="fetchSpecialHandlingCode" parameterClass="java.util.HashMap" resultClass="cargo.cms.afw.bo.MasterBO">
		SELECT CODE as codeId, PROCESS_FFM  as codeDesc FROM MAST_SPL_HAND_CODE
	</select>
	<!--	
	#######################################################################
					EDI INTERFACE QUERIES ENDS
	#######################################################################-->	
	<!-- 
	==============================================================================================
		START OF Enquire CPM QUERIES - Varadaraj Muni 14-OCT-2010
	==============================================================================================
	-->
	<select id="fetchCPMMessageFreezeStatus" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT CPM_FRZ_DATE FROM START_PREP WHERE FLT_KEY = #flightKey# AND FLT_DATE = TO_DATE( #flightDate#,'MM/DD/YYYY') 
		AND MSG_TYPE = 'CPM' AND ROWNUM = 1
	</select>
	<select id="checkCPMMsgVerExists" parameterClass="cargo.cms.edi.ei.bo.CPMHeaderBO" resultClass="java.lang.Integer">	
		SELECT COUNT(1) FROM EDI_FFM_MSG WHERE FLT_KEY = #flightKey# AND FLT_DATE = TO_DATE(#flightDate#,'MM/DD/YYYY') 
		AND MSG_VER = #versionNumber#
	</select>
	<select id="fetchMaxTrNo" parameterClass="cargo.cms.edi.ei.bo.CPMHeaderBO" resultClass="java.lang.String">
		SELECT EDI_CPM_TR_NO_SEQ.NEXTVAL FROM DUAL
	</select>
	<select id="fetchMaxTrNoForOthPort" parameterClass="cargo.cms.edi.ei.bo.CPMHeaderBO" resultClass="java.lang.String">
		SELECT EDI_CPM_OTH_PORT_TR_NOD_SEQ.NEXTVAL FROM DUAL
	</select>
	<insert id="insertEdiCPM" parameterClass="cargo.cms.edi.ei.bo.CPMHeaderBO">
		INSERT INTO EDI_CPM (FLT_KEY,FLT_DATE,VER_NO,SI_RMK,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,ACFT_REG_NO,ORIG,LOAD_DESK_VER,TR_NO, TR_TYPE,OVERHANGMSG,FREETXT)
		VALUES(#flightKey#,TO_DATE(#flightDate#,'MM/DD/YYYY'),#versionNumber#,#siRemarks#,'SYSUSER', SYSDATE , 'SYSUSER' , SYSDATE, #arcftRegNo#, #origin#,#configurationCode#,#trNo#, 'CPMMS',#overHangPosition#,#freeText#)
	</insert>
	<insert id="insertEdiCPMDetail" parameterClass="cargo.cms.edi.ei.bo.CPMDetailBO">
		INSERT INTO EDI_CPM_DTL (FLT_KEY,FLT_DATE,VER_NO,ULD_KEY,DEST,WT,LOAD_TYPE,LOAD_POS,SHC1,SHC2,SHC3,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,CNTR,TR_NO,
		SHC4,SHC5,SHC6,SHC7,SHC8,SHC9,SEQ_NO,CONTOUR_CODE)
		VALUES(#flightKey#,TO_DATE(#flightDate#,'MM/DD/YYYY'),#versionNumber#,#uldKey#,#dest#,#wt#,#loadCode#,#loadPos#,#splHandlingCode1#,#splHandlingCode2#,#splHandlingCode3#,
		'SYSUSER', SYSDATE , 'SYSUSER' , SYSDATE, #contourCode#,#trNo#,#splHandlingCode4#,#splHandlingCode5#,#splHandlingCode6#,#splHandlingCode7#,#splHandlingCode8#,#splHandlingCode9#,#seqNo#,#contr#)
	</insert>
	<select id="checkImpUldListExists" parameterClass="cargo.cms.edi.ei.bo.CPMDetailBO" resultClass="java.lang.Integer">
		 SELECT COUNT(1) FROM IMP_ULD_LIST WHERE FLT_KEY = #flightKey# AND FLT_DATE = TO_DATE(#flightDate#,'MM/DD/YYYY') AND ULD_KEY = #uldKey#
	</select>
	<insert id="insertImpUldList" parameterClass="cargo.cms.edi.ei.bo.CPMDetailBO">
		INSERT INTO IMP_ULD_LIST(FLT_KEY ,FLT_DATE,ULD_KEY ,HO_AREA ,IMX ,HANDLING_MODE ,SPL_CODE1 ,SPL_CODE2 ,
      	SPL_CODE3 ,WH_RMK,AIRL_RMK,CR_USER_ID,CR_DATE ,LM_USER_ID,LM_DATE ,TRANSFER_TYPE ,SHC ,TRANSIT_IND ,SYSTEM_HDLY_AREA,
      	MANUAL_HDLY_AREA,WH_INSTRUCTION,CONFIRM)
      	VALUES(#flightKey#,TO_DATE(#flightDate#,'MM/DD/YYYY'),#uldKey#,NULL,'N' ,NULL,#splHandlingCode1#,#splHandlingCode2#,
      	#splHandlingCode3#,NULL, NULL,'SYSUSER',SYSDATE,'SYSUSER' ,SYSDATE,NULL,NULL,'N' ,NULL,NULL,NULL,'N')
	</insert>
	<select id="fetchImpRampChkHdTrNo" parameterClass="cargo.cms.edi.ei.bo.CPMDetailBO" resultClass="java.lang.String">
	  SELECT TR_NO FROM IMP_RAMP_CHK_HD WHERE FLT_KEY = #flightKey# AND FLT_DATE = TO_DATE(#flightDate#,'MM/DD/YYYY')
	</select>	
	<select id="fetchScheduleFlightTime" parameterClass="cargo.cms.edi.ei.bo.CPMDetailBO" resultClass="java.lang.String">
		SELECT SCH_TIME  FROM FLT_OPR  WHERE FLT_KEY = #flightKey# AND SCH_DATE = TO_DATE(#flightDate#,'MM/DD/YYYY') AND FLT_TYPE     = 'A'
	</select>	 
	<insert id="insertImpRampChkHd" parameterClass="cargo.cms.edi.ei.bo.CPMDetailBO">	
	 	INSERT INTO IMP_RAMP_CHK_HD (TR_NO, FLT_NO, FLT_DATE, FLT_ATA,CARR_CODE, FLT_KEY, COMPL_DATE,COMPL_USER_ID, TR_TYPE, TR_STATUS, CR_USER_ID, CR_DATE,
       	LM_USER_ID, LM_DATE,FLT_TYPE)
      	VALUES (#rampHeaderTrNo#, #flightNo#, TO_DATE(#flightDate#,'MM/DD/YYYY'), #schTime#,#flightCarr#, #flightKey#, NULL,NULL, 'N', 'A','SYSUSER', SYSDATE,
       	'SYSUSER', SYSDATE,'I')
    </insert>
    <select id="fetchImpRampChkDtlDocLineNo" parameterClass="cargo.cms.edi.ei.bo.CPMDetailBO" resultClass="java.lang.Integer">
    	SELECT MAX(DOC_LINE_NO) FROM IMP_RAMP_INB_CHK_DTL WHERE  FLT_KEY  = #flightKey# AND FLT_DATE = TO_DATE(#flightDate#,'MM/DD/YYYY') GROUP BY TR_NO
    </select>
    <select id="checkImpRampChkDtlExists" parameterClass="cargo.cms.edi.ei.bo.CPMDetailBO" resultClass="java.lang.Integer">
    	SELECT COUNT(1) FROM IMP_RAMP_INB_CHK_DTL WHERE FLT_KEY = #flightKey# AND FLT_DATE = TO_DATE(#flightDate#,'MM/DD/YYYY') AND ULD_KEY  = #uldKey#
    </select>
    <select id="fetchImpRampChkDtlSeqNo" parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT IMP_RAMP_CHK_DTL_SEQ.NEXTVAL FROM DUAL
	</select>
	<insert id="insertImpRampChkDtl" parameterClass="cargo.cms.edi.ei.bo.CPMDetailBO">
		INSERT INTO IMP_RAMP_INB_CHK_DTL (TR_NO, DOC_LINE_NO, FLT_NO, FLT_DATE, FLT_KEY,ULD_TYPE, ULD_NO, ULD_CARR, ULD_KEY, CARR_CODE, FFM_IND,CPM_IND
        ,RMK, TR_TYPE, TR_STATUS, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE,EMPTY_IND,LOAD_TYPE)
       	VALUES (#rampDetailTrNo#, #docLineNo#, #flightNo#, TO_DATE(#flightDate#,'MM/DD/YYYY'), #flightKey#,#uldType#, #uldNo#, 
       	#uldCarr#, #uldKey#, #flightCarr#, 'N','Y',NULL, 'N', 'A', 'SYSUSER',SYSDATE, 'SYSUSER', SYSDATE, DECODE(#loadCode#,'X','Y','N'),#loadCode#)
	</insert>
    <update id="updateImpRampChkDtl" parameterClass="cargo.cms.edi.ei.bo.CPMDetailBO">
    	UPDATE IMP_RAMP_INB_CHK_DTL SET CPM_IND = 'Y',EMPTY_IND=DECODE(#loadCode#,'X','Y','N') , LOAD_TYPE = #loadCode# WHERE  FLT_KEY  = #flightKey# AND FLT_DATE = TO_DATE(#flightDate#,'MM/DD/YYYY') AND ULD_KEY  = #uldKey#   
    </update>         
    <select id="fetchMessageLogVersionNumber" parameterClass="java.util.HashMap" resultClass = "java.lang.Integer">
    	SELECT (COUNT(1) + 1) FROM MESSAGE_LOG WHERE MSG_TYPE = 'CPM' AND FLT_KEY = #flightKey# AND FLT_DATE = TO_DATE(#flightDate#,'MM/DD/YYYY')
    </select>
    <insert id="insertEdiCPMOthPort" parameterClass="cargo.cms.edi.ei.bo.CPMHeaderBO">
		INSERT INTO EDI_CPM_OTH_PORT (FLT_KEY,FLT_DATE,VER_NO,SI_RMK,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,ACFT_REG_NO,ORIG,LOAD_DESK_VER,TR_NO, TR_TYPE,OVERHANGMSG,FREETXT)
		VALUES(#flightKey#,TO_DATE(#flightDate#,'MM/DD/YYYY'),#versionNumber#,#siRemarks#,'SYSUSER', SYSDATE , 'SYSUSER' , SYSDATE, #arcftRegNo#, #origin#,#configurationCode#, #trNo#, 'CPMMS',#overHangPosition#,#freeText#)
	</insert>
	<insert id="insertEdiCPMDetailOthPort" parameterClass="cargo.cms.edi.ei.bo.CPMDetailBO">
		INSERT INTO EDI_CPM_DTL_OTH_PORT (FLT_KEY,FLT_DATE,VER_NO,ULD_KEY,DEST,WT,LOAD_TYPE,LOAD_POS,SHC1,SHC2,SHC3,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,TR_NO,
		SHC4,SHC5,SHC6,SHC7,SHC8,SHC9,SEQ_NO,CNTR)
		VALUES(#flightKey#,TO_DATE(#flightDate#,'MM/DD/YYYY'),#versionNumber#,#uldKey#,#dest#,#wt#,#loadCode#,#loadPos#,#splHandlingCode1#,#splHandlingCode2#,#splHandlingCode3#,
		'SYSUSER', SYSDATE , 'SYSUSER' , SYSDATE,#trNo#,#splHandlingCode4#,#splHandlingCode5#,#splHandlingCode6#,#splHandlingCode7#,#splHandlingCode8#,#splHandlingCode9#,#seqNo#,#contourCode#)
	</insert>
	<select id="fetchOffPointFromLeg" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT OFF_POINT FROM FLT_OPR_LEG WHERE OFF_POINT != 'HKG' AND FLT_KEY = #flightKey#  AND SCH_DATE = TO_DATE(#flightDate#,'MM/DD/YYYY') AND BRD_POINT = #origin#
	</select>
	<update id="updateCPMIndicator" parameterClass="java.util.HashMap"> 	
		UPDATE IMP_RAMP_INB_CHK_DTL SET CPM_IND = 'N'
		WHERE FFM_IND = 'N' AND CPM_IND = 'Y' AND FLT_KEY = #flightKey# AND FLT_DATE = TO_DATE(#flightDate#,'MM/DD/YYYY')
	</update>
	<delete id="deleteImpUldList" parameterClass="java.util.HashMap"> 
		DELETE FROM IMP_ULD_LIST WHERE FLT_KEY = #flightKey#  AND FLT_DATE = TO_DATE(#flightDate#,'MM/DD/YYYY')
		AND ULD_KEY IN( SELECT ULD_KEY FROM IMP_RAMP_INB_CHK_DTL 
		WHERE FFM_IND = 'N' AND CPM_IND = 'N' AND NVL(RESDIT_IND,'N') = 'N'  AND FLT_KEY = #flightKey# AND FLT_DATE = TO_DATE(#flightDate#,'MM/DD/YYYY'))
	</delete>
	<delete id="deleteInboundRampChkDtl" parameterClass="java.util.HashMap">
		DELETE FROM IMP_RAMP_INB_CHK_DTL WHERE FFM_IND = 'N' AND CPM_IND = 'N' AND NVL(RESDIT_IND,'N') = 'N' AND FLT_KEY = #flightKey# AND FLT_DATE = TO_DATE(#flightDate#,'MM/DD/YYYY')
	</delete>
	<delete id="deleteInboundRampChkDtlUld" parameterClass="cargo.cms.edi.ei.bo.CPMDetailBO">
		DELETE FROM IMP_RAMP_INB_CHK_DTL WHERE FFM_IND = 'N' AND CPM_IND = 'N' AND NVL(RESDIT_IND,'N') = 'N'  AND FLT_KEY = #flightKey# AND FLT_DATE = TO_DATE(#flightDate#,'MM/DD/YYYY') AND ULD_KEY  = #uldKey#
	</delete>
	<select id="fetchTrNoForCPMOthPort" parameterClass="cargo.cms.edi.ei.bo.CPMHeaderBO" resultClass="cargo.cms.edi.ei.bo.CPMHeaderBO">
		SELECT TR_NO AS trNo FROM EDI_CPM_OTH_PORT WHERE FLT_KEY = #flightKey# AND FLT_DATE = TO_DATE(#flightDate#,'MM/DD/YYYY') AND ORIG = #origin#
	</select>
	<select id="fetchTrNoForCPMPort" parameterClass="cargo.cms.edi.ei.bo.CPMHeaderBO" resultClass="cargo.cms.edi.ei.bo.CPMHeaderBO">
		SELECT TR_NO AS trNo FROM EDI_CPM WHERE FLT_KEY = #flightKey# AND FLT_DATE = TO_DATE(#flightDate#,'MM/DD/YYYY') AND ORIG = #origin#
	</select>
	<delete id="deleteEdiCpm" parameterClass="cargo.cms.edi.ei.bo.CPMHeaderBO">
		DELETE FROM EDI_CPM WHERE TR_NO = #trNo# AND FLT_KEY = #flightKey# AND FLT_DATE = TO_DATE(#flightDate#,'MM/DD/YYYY') AND ORIG = #origin#
	</delete>
	<delete id="deleteEdiCpmDtl" parameterClass="cargo.cms.edi.ei.bo.CPMHeaderBO">
		DELETE FROM EDI_CPM_DTL WHERE TR_NO = #trNo# AND FLT_KEY = #flightKey# AND FLT_DATE = TO_DATE(#flightDate#,'MM/DD/YYYY') 
	</delete>
	<delete id="deleteEdiCpmOthPort" parameterClass="cargo.cms.edi.ei.bo.CPMHeaderBO">
		DELETE FROM EDI_CPM_OTH_PORT WHERE TR_NO = #trNo# AND FLT_KEY = #flightKey# AND FLT_DATE = TO_DATE(#flightDate#,'MM/DD/YYYY') AND ORIG = #origin#
	</delete>
	<delete id="deleteEdiCpmDtlOthPort" parameterClass="cargo.cms.edi.ei.bo.CPMHeaderBO">
		DELETE FROM EDI_CPM_DTL_OTH_PORT WHERE TR_NO = #trNo# AND FLT_KEY = #flightKey# AND FLT_DATE = TO_DATE(#flightDate#,'MM/DD/YYYY') 
	</delete>
	<select id="fetchMaxVersionEdiCpm" parameterClass="cargo.cms.edi.ei.bo.CPMHeaderBO" resultClass="java.lang.String">
		SELECT MAX(VER_NO) as versionNumber FROM EDI_CPM WHERE FLT_KEY = #flightKey# AND FLT_DATE = TO_DATE(#flightDate#,'MM/DD/YYYY')
	</select>
	<select id="fetchMaxVersionEdiCpmOthPort" parameterClass="cargo.cms.edi.ei.bo.CPMHeaderBO" resultClass="java.lang.String">
		SELECT MAX(VER_NO) as versionNumber FROM EDI_CPM_OTH_PORT WHERE FLT_KEY = #flightKey# AND FLT_DATE = TO_DATE(#flightDate#,'MM/DD/YYYY')
	</select>
	<delete id="deleteImpUldListOnLoadType" parameterClass="java.util.HashMap">
		DELETE FROM IMP_ULD_LIST WHERE FLT_KEY = #flightKey#  AND FLT_DATE = TO_DATE(#flightDate#,'MM/DD/YYYY')
		AND ULD_KEY IN(SELECT ULD_KEY FROM EDI_CPM_DTL WHERE FLT_KEY = #flightKey# AND FLT_DATE = TO_DATE(#flightDate#,'MM/DD/YYYY') AND 
		ULD_KEY IS NOT NULL AND (LOAD_TYPE IN ('D','B','FB') OR LOAD_TYPE LIKE 'D/%' OR LOAD_TYPE LIKE 'B/%' OR LOAD_TYPE LIKE 'FB/%'))
	</delete>
	<delete id="deleteImpRampInbChkDtlOnLoadType" parameterClass="java.util.HashMap">
		DELETE FROM IMP_RAMP_INB_CHK_DTL WHERE FLT_KEY = #flightKey# AND FLT_DATE = TO_DATE(#flightDate#,'MM/DD/YYYY') AND ULD_KEY IN 
		(SELECT ULD_KEY FROM EDI_CPM_DTL WHERE FLT_KEY = #flightKey# AND FLT_DATE = TO_DATE(#flightDate#,'MM/DD/YYYY') AND 
		ULD_KEY IS NOT NULL AND (LOAD_TYPE IN ('D','B','FB') OR LOAD_TYPE LIKE 'D/%' OR LOAD_TYPE LIKE 'B/%' OR LOAD_TYPE LIKE 'FB/%'))
	</delete>
	<select id="checkFlightLegExists" parameterClass="cargo.cms.edi.ei.bo.CPMHeaderBO" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM FLT_OPR_LEG WHERE TR_NO = 
		(SELECT TR_NO FROM FLT_OPR_LEG WHERE FLT_KEY = #flightKey# AND SCH_DATE = TO_DATE(#flightDate#,'MM/DD/YYYY') AND 
		BRD_POINT = #origin# AND OFF_POINT = #destination# AND FLT_TYPE = 'A') AND OFF_POINT = #destination#		
	</select>
	<select id="checkFlightHasMultiPort_CPM" parameterClass="map" resultClass="java.lang.Integer">
		SELECT COUNT(off_point) FROM FLT_OPR_LEG WHERE FLT_KEY = #flightKey# and SCH_DATE = TO_DATE(#flightDate#,'MM/DD/YYYY')  and FLT_TYPE = 'A'		
	</select>
	<select id="getSingleLegInfo_CPM" parameterClass="cargo.cms.edi.ei.bo.CPMHeaderBO" resultClass="cargo.cms.edi.ei.bo.CPMHeaderBO">
		SELECT BRD_POINT origin, OFF_POINT destination FROM FLT_OPR_LEG WHERE FLT_KEY = #flightKey# and SCH_DATE = TO_DATE(#flightDate#,'MM/DD/YYYY')  and FLT_TYPE = 'A'		
	</select>
	
	<select id="fetchContrCodeforBRContrCode" parameterClass="cargo.cms.edi.ei.bo.CPMDetailBO" resultClass="java.lang.String">
		SELECT CONTR_CODE FROM MAST_BR_CONTR_CODE WHERE BR_CONTR_CODE=#contourCode#		
	</select>
	
	<!--
	==============================================================================================
		END OF Enquire CPM QUERIES
	==============================================================================================
	-->
	<!--
	==============================================================================================
		START OF QUERIES FOR OBM MESSAGE
	==============================================================================================
	-->
	<select id="validateOBMMessageVersion" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM MESSAGE_LOG WHERE FLT_KEY = #fltKey# AND FLT_DATE = TO_DATE(#fltDate#,'MM/DD/YYYY') AND VER_NO = #verNo# AND MSG_TYPE = 'OBM' AND MSG_STATUS = 'F'
	</select>
	<select id="validateFlight" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM FLT_OPR WHERE FLT_KEY=#fltKey# AND SCH_DATE=TO_DATE(#fltDate#,'MM/DD/YYYY') AND FLT_TYPE='A'
	</select>
	<select id="validateFlightForObmm" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT TO_CHAR(SCH_DATE,'MM/DD/YYYY') FROM FLT_OPR_LEG WHERE FLT_KEY=#fltKey# AND SCH_DEP_DATE=TO_DATE(#fltDate#, 'MM/DD/YYYY') AND FLT_TYPE='A' AND ROWNUM = 1
	</select>
	<select id="validateFlightForDuo" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT flt_module1 module FROM FLT_OPR WHERE FLT_KEY=#fltKey# AND SCH_DATE=TO_DATE(#fltDate#, 'MM/DD/YYYY') AND FLT_TYPE='D' 
	</select>
	<select id="validateFlightForLIF" parameterClass="java.util.HashMap" resultClass="java.lang.String">		
		select TO_CHAR(SCH_DATE,'MM/DD/YYYY')  from
		(SELECT sch_date FROM FLT_OPR_LEG WHERE TR_NO IN 
			(SELECT TR_NO FROM FLT_OPR_LEG WHERE FLT_KEY = #fltKey# AND SCH_DEP_DATE=TO_DATE(#fltDate#, 'MM/DD/YYYY')  AND FLT_TYPE = 'A' AND OFF_POINT='HKG' AND 'HKG' = #dest#)
        AND BRD_POINT=#orig# 
        UNION
        SELECT sch_date FROM FLT_OPR_LEG WHERE TR_NO IN 
			(SELECT TR_NO FROM FLT_OPR_LEG WHERE FLT_KEY = #fltKey# AND SCH_DEP_DATE=TO_DATE(#fltDate#, 'MM/DD/YYYY')   AND FLT_TYPE = 'D' AND OFF_POINT=#dest# AND 'HKG' = #orig#)
         AND BRD_POINT='HKG'  )a		
	</select>
	<select id="validateFlightForLDM" parameterClass="java.util.HashMap" resultClass="java.lang.String">		
		SELECT TO_CHAR(SCH_DATE,'MM/DD/YYYY') FROM FLT_OPR_LEG WHERE FLT_KEY=#fltKey# AND TRUNC(TO_DATE(TO_CHAR(SCH_DEP_DATE,'DDMONYY')||LPAD(SCH_DEP_TIME,4,0),'DDMONYYHH24MI') -
			(GET_TIME_GMT_DIFF(BRD_POINT))/24)= TO_DATE(#fltDate#, 'MM/DD/YYYY') AND FLT_TYPE='A' AND BRD_POINT=#orig# 
		UNION
		SELECT TO_CHAR(SCH_DATE,'MM/DD/YYYY') FROM FLT_OPR_LEG WHERE FLT_KEY=#fltKey# AND TRUNC(TO_DATE(TO_CHAR(SCH_DEP_DATE,'DDMONYY')||LPAD(SCH_DEP_TIME,4,0),'DDMONYYHH24MI') -
			(GET_TIME_GMT_DIFF(BRD_POINT))/24)= TO_DATE(#fltDate#, 'MM/DD/YYYY') AND FLT_TYPE='D' AND BRD_POINT=#orig#  		
	</select>
	<select id="getDuoEmailAddress" parameterClass="java.lang.String" resultClass="java.lang.String">
		select duo_email_addresses email from mast_module_off_email where MODULE_OFFICE=#module# 
	</select>
	<!--
	==============================================================================================
		END OF QUERIES FOR OBM MESSAGE
	==============================================================================================
	-->	
	<!--
	==============================================================================================
		START OF QUERIES FOR TELEX MESSAGE - 30-JANUARY-2011
	==============================================================================================
	-->
	<select id="fetchEdiMsgLogInMsgId" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		SELECT TELEX_MSG_SEQ.NEXTVAL FROM DUAL	
	</select>
	<insert id="insertEdiMsgLogIn" parameterClass="java.util.HashMap">
		INSERT INTO EDI_MSG_LOG_IN (MSG_ID,MSG_SEQ_NO,MSG_DATE,MSG_TYPE,SENDER_ID,MSG,LM_USER_ID,LM_DATE,LM_VER,MSG_TITLE,TR_TYPE,UNIQUE_ID)
		VALUES(TO_NUMBER(#msgId#), 1, SYSDATE, nvl(#msgType#,'TLX'), #sender#, #msg#, 'SYSUSER', SYSDATE, 1,#msgTitle#,'TLXIN',#uniqueId#)
	</insert>
	<insert id="insertEdiMsgRecipientIn" parameterClass="java.util.HashMap">
		INSERT INTO EDI_MSG_RECIPIENT_IN (MSG_ID,MSG_SEQ_NO,RECIPIENT)
		VALUES(TO_NUMBER(#msgId#), 1, #recipient#)
	</insert>
	<!--
	==============================================================================================
		END OF QUERIES FOR TELEX MESSAGE
	==============================================================================================
	-->	
	<!--
	==============================================================================================
		START - FWB - TRANSHIPMENT CHANGES VARADARAJ MUNI - 23 AUGUST 2011
	==============================================================================================
	-->	
	<insert id="sqlInsertExpCar" parameterClass="java.util.HashMap">
		INSERT INTO EXP_CAR (
			AWB_NO,
			AWB_DATE,
			AWB_PRFX,
			CARR_CODE,			
			ORIGIN,
			DEST,
			PCS,
			WT,
			CONTENT,
			SHPR_NAME,
			AGENT_CODE,
			AGENT_NAME,
			SPL_CODE1,
			SPL_CODE2,
			SPL_CODE3,
			SPL_CODE4,
			SPL_CODE5,
			SPL_CODE6,
			SPL_CODE7,
			SPL_CODE8,
			SPL_CODE9,
			ACCEPT_MODE,
			CR_USER_ID,
			CR_DATE,
			LM_USER_ID,
			LM_DATE,			
			SHPR_ADDR,
			SHPR_CTRY_CODE,
			SHPR_PLACE ,
			SHPR_PIN_CODE,
			SHPR_STATE_PROVINCE,
			CSGNE_ADDR,
			CSGNE_CTRY_CODE,
			CSGNE_NAME,
			CSGNE_PIN_CODE,
			CSGNE_PLACE,
			CSGNE_STATE_PROVINCE,
			CATALOG,
			HANDLER_CODE,
			AIRL_RMK,
			SHPR_ADDR2,
			CSGNE_ADDR2)			
		VALUES (
			#awb#,
			to_date(#awbDate#,'DDMONYY'),
			#awb1#,
			#carrCode#,			
			#origin#,
			#dest#,
			#pcs#,
			#wt#,
			#content#,
			#shprName#,
			#agentCode#,
			#agentName#,
			#splCode1#,
			#splCode2#,
			#splCode3#,
			#splCode4#,
			#splCode5#,
			#splCode6#,
			#splCode7#,
			#splCode8#,
			#splCode9#,
			#acceptMode#,
			#crUserId#,
			sysdate,
			#lastModUserId#,
			sysdate,
			#shprAddrOne#,
			#shprCountry#,
			#shprCity#,
			#shprPin#,
			#shipperState#,
			#consAddrOne#,
			#consCountry#,
			#consigneeName#,
			#consPin#,
			#consCity#,
			#consigneeState#,
			#catalog#,
			'CPCT',
			#airlineRemark#,
			#shprAddrTwo#,
			#consAddrTwo#)
	</insert>
	
	<update id="sqlUpdateExpCar" parameterClass="java.util.HashMap">
		UPDATE EXP_CAR SET
			CATALOG 	= #catalog#,								
			CARR_CODE=         #carrCode#,			
			ORIGIN=            #origin#,
			DEST=              #dest#,
			PCS=               #pcs#,
			WT=                #wt#,
			CONTENT=           #content#,
			SHPR_NAME=         #shprName#,
			AGENT_CODE=        #agentCode#,
			AGENT_NAME=        #agentName#,
			SPL_CODE1=         #splCode1#,
			SPL_CODE2=         #splCode2#,
			SPL_CODE3=         #splCode3#,
			SPL_CODE4=         #splCode4#,
			SPL_CODE5=         #splCode5#,
			SPL_CODE6=         #splCode6#,
			SPL_CODE7=         #splCode7#,
			SPL_CODE8=         #splCode8#,
			SPL_CODE9=         #splCode9#,
			ACCEPT_MODE =      #acceptMode#,
			LM_USER_ID=        #lastModUserId#,
			LM_DATE=           sysdate,
			SHPR_ADDR = #shprAddrOne#,
			SHPR_ADDR2 = #shprAddrTwo#,
			SHPR_CTRY_CODE = #shprCountry#,
			SHPR_PLACE = #shprCity#,
			SHPR_PIN_CODE = #shprPin#,
			CSGNE_ADDR = #consAddrOne#,
			CSGNE_ADDR2 = #consAddrTwo#,
			CSGNE_CTRY_CODE = #consCountry#,
			CSGNE_NAME = #consigneeName#,
			CSGNE_PIN_CODE = #consPin#,
			CSGNE_PLACE = #consCity#,
			CSGNE_STATE_PROVINCE = #consigneeState#,
			SHPR_STATE_PROVINCE = #shipperState#
		WHERE AWB_NO = #awb#
		and awb_date = to_date(#awbDate#,'DDMONYY')
	</update>
	
	<select id="getAirlineRemarkIfExistsInAWB_RMK" parameterClass="java.util.HashMap" resultClass="java.lang.String">
	
		SELECT RMK
		FROM (
		  SELECT AIRLN_RMK RMK FROM awb WHERE awb_no = #awb# AND awb_date=#awbDate# AND rownum=1
		  UNION
		  SELECT rmk RMK FROM awb_rmk WHERE awb_no=#awb# AND rownum=1 
		  UNION
		  SELECT AIRLN_RMK RMK FROM IMP_CAR_AWB WHERE awb_no = #awb# AND awb_date=#awbDate# AND rownum=1
		 )
		WHERE ROWNUM = 1
	</select>
	
	<select id="sqlCheckAWBExistsEXPCAR_AWBOwner" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		SELECT count(*) 
		FROM AWB_OWNER 
		WHERE awb_no=#awb# 
		   AND AWB_DATE =  to_date(#awbDate#,'DDMONYY')
			AND CARR_CODE = #carrCode#
	</select>
	<insert id="sqlInsertEXPCAR_AWBOwner" parameterClass="java.util.HashMap">
		Insert into AWB_OWNER (AWB_NO,AWB_DATE,CARR_CODE,PCS,WT,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,BU_PCS,OFFLOAD_PCS) 
		values (#awb#,to_date(#awbDate#,'DDMONYY'),#carrCode#,(#pcs# - #oldOwnerPcs#),(#wt# - #oldOwnerWt#),
		#crUserId#,sysdate,#lastModUserId#,sysdate,null,null)
	</insert>
	<update id="sqlUpdateEXPCAR_AWBOwner" parameterClass="java.util.HashMap">
		UPDATE AWB_OWNER SET PCS=(#pcs#- NVL(#oldOwnerPcs#,0)),
		WT=(#wt#-NVL(#oldOwnerWt#,0)),LM_USER_ID=#lastModUserId#,LM_DATE=sysdate 
		WHERE awb_no=#awb# 
		   AND AWB_DATE =  to_date(#awbDate#,'DDMONYY')
			AND CARR_CODE = #carrCode#
	</update>
	<delete id="sqlDeleteExpCar" parameterClass="java.util.HashMap" >
		DELETE from EXP_CAR	WHERE AWB_NO = #awbNo# AND AWB_DATE  = TO_DATE(#awbDate#,'DDMONYY')
	</delete>
	
	<delete id="sqlDeleteExpCarAWBOwner" parameterClass="java.util.HashMap" >
		DELETE from AWB_OWNER	WHERE AWB_NO = #awbNo# AND AWB_DATE  = TO_DATE(#awbDate#,'DDMONYY') AND CARR_CODE = #carrCode#
	</delete>
	<select id="sqlFetchExpCarOldPcsWt" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT PCS, WT FROM EXP_CAR	WHERE AWB_NO = #AWB# AND AWB_DATE  = TO_DATE(#AWBDATE#,'DDMONYY')
	</select>
	<update id="sqlUpdatePcWtAwb" parameterClass="java.util.HashMap">
		UPDATE AWB SET NON_PMAN_PCS = 0, NON_PMAN_WT = 0, CAR_YN = 'N' WHERE AWB_NO = #awbNo# AND AWB_DATE  = TO_DATE(#awbDate#,'DDMONYY')
	</update>
	<select id="sqlFetchAwbOwnerPcsWt" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT SUM(PCS) AS PCS, SUM(WT) AS WT FROM AWB_OWNER WHERE AWB_NO = #awb# AND AWB_DATE  = TO_DATE(#awbDate#,'DDMONYY') AND CARR_CODE != #oldCarrier#  
	</select>	
	<!--
	==============================================================================================
		END - FWB - TRANSHIPMENT CHANGES VARADARAJ MUNI - 23 AUGUST 2011
	==============================================================================================
	-->
	<!--
	==============================================================================================
		START - MHCS CHANGES VARADARAJ MUNI - 07 OCTOBER 2011
	==============================================================================================
	-->
	<select id="fetchULDForPreAnnounceAndDataChange" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">	
	SELECT 
		ULD_INVENTORY.ULD_TYPE AS ULDTYPE, 
		ULD_INVENTORY.ULD_NO AS ULDSN,
		ULD_INVENTORY.ULD_CARR AS ULD_ARLI,
		(SELECT ULD_GROUP FROM ULD_GROUP_CARR WHERE ULD_INVENTORY.ULD_TYPE = ULD_GROUP_CARR.ULD_TYPE AND ULD_INVENTORY.ULD_CARR = ULD_GROUP_CARR.CARR_CODE) AS ULDGRP,
		(SELECT SPECIFICATION FROM ULD_TYPE_CARR_TARE_WT WHERE ULD_TYPE = ULD_INVENTORY.ULD_TYPE AND ULD_CARR = ULD_INVENTORY.ULD_CARR AND 
		ULD_INVENTORY.ULD_NO BETWEEN ULD_NO_FROM AND ULD_NO_TO AND SPECIFICATION IS NOT NULL AND ROWNUM = 1) AS INTERIOR,
		ULD_INVENTORY.IMP_FLT_CARR AS IN_ARLI,
		ULD_INVENTORY.IMP_FLT_NO AS IMP_FLT_NO,
		TO_CHAR(ULD_INVENTORY.IMP_FLT_DATE,'YYYY-MM-DD') AS IMP_FLT_DATE,
		(SELECT FLT_OPR.ORIG FROM FLT_OPR WHERE FLT_OPR.FLT_KEY = ULD_INVENTORY.IMP_FLT_CARR||ULD_INVENTORY.IMP_FLT_NO
		AND FLT_OPR.SCH_DATE = ULD_INVENTORY.IMP_FLT_DATE AND FLT_OPR.FLT_TYPE = DECODE(ULD_INVENTORY.FLT_TYPE, 'I', 'A','E','D')) AS IN_ARPO,
		DECODE(ULD_INVENTORY.FLT_KEY,NULL,ULD_INVENTORY.CARR_CODE,SUBSTR(FLT_KEY, 0, 2)) AS CARR_CODE,
		DECODE(ULD_INVENTORY.FLT_KEY,NULL,ULD_INVENTORY.FLT_NO,SUBSTR(FLT_KEY, 3)) AS FLT_NO,
		TO_CHAR(ULD_INVENTORY.FLT_DATE, 'YYYY-MM-DD') AS FLT_DATE,
		(SELECT UNLDG_PT FROM EXP_PMANIFEST_ULD WHERE FLT_KEY = DECODE(ULD_INVENTORY.FLT_KEY,NULL,ULD_INVENTORY.CARR_CODE,SUBSTR(FLT_KEY, 0, 2)) || ULD_INVENTORY.FLT_NO AND FLT_DATE = ULD_INVENTORY.FLT_DATE AND ULD_BT_NO = ULD_INVENTORY.ULD_KEY) AS OU_PORT,
		(SELECT UNLDG_PT FROM EXP_PMANIFEST_ULD WHERE FLT_KEY = DECODE(ULD_INVENTORY.FLT_KEY,NULL,ULD_INVENTORY.CARR_CODE,SUBSTR(FLT_KEY, 0, 2)) || ULD_INVENTORY.FLT_NO AND FLT_DATE = ULD_INVENTORY.FLT_DATE AND ULD_BT_NO = ULD_INVENTORY.ULD_KEY) AS OU_PORT,
		FUN_GET_TEMP_CAT4_CLASS(ULD_INVENTORY.ULD_KEY,#function#) AS TEMPCLASS,			
		DECODE(ULD_INVENTORY.EMPTY_FLG,'Y','00','01') AS LOADSTAT,
		DECODE(ULD_INVENTORY.EIC_FLG,'Y','01','00') AS EICSTAT,
		DECODE(ULD_INVENTORY.DAM_IND,'Y','03','99') AS INSPSTAT,
		DECODE(ULD_INVENTORY.LOCK_RQS,'Y','01','00') AS LOCKSTAT,
		ULD_INVENTORY.CONTR_CODE AS CONTR_CODE,		
		DECODE(FIRST_WT, NULL, '00', 0, '00', DECODE(FINAL_WEIGHT, 'Y','00','02')) AS FIRST_WEIGHT,
		DECODE(X_RAY_REQ, 'Y','03', '00') AS XRAYRQST,
		DECODE(FIRST_WT, NULL, '', 0, '', FIRST_WT) AS GROSS_WGHT,		
		fun_get_uld_shc(ULD_INVENTORY.ULD_KEY) AS SHCS,	    
		FUN_GET_BUSINESS_PROCESS(#uldKey#) AS BUSIPROC,
		CASE WHEN (ULD_INVENTORY.TRANSIT_TYPE IN ('TT','IF') AND OFLD_FLG = 'N') 
    	THEN
      		'01'
    	ELSE
      		CASE WHEN (ULD_INVENTORY.OFLD_FLG = 'Y')
      		THEN
        		'02'
      		ELSE
        		CASE WHEN (SELECT COUNT(1) FROM EXP_PMANIFEST_ULD WHERE FLT_KEY = ULD_INVENTORY.FLT_KEY AND
                        FLT_DATE = ULD_INVENTORY.FLT_DATE AND ULD_BT_NO = ULD_INVENTORY.ULD_KEY AND ULD_INVENTORY.FLT_TYPE = 'E' AND 
                        EXP_PMANIFEST_ULD.READY_DISP = 'Y' AND EXP_PMANIFEST_ULD.READY_WH = 'Y') > 0
        		THEN
            		'01'
        		ELSE
          			CASE WHEN (SELECT COUNT(1) FROM EXP_PMANIFEST_ULD WHERE FLT_KEY = ULD_INVENTORY.FLT_KEY AND FLT_DATE = ULD_INVENTORY.FLT_DATE AND 
                          ULD_BT_NO = ULD_INVENTORY.ULD_KEY AND ULD_INVENTORY.FLT_TYPE = 'E' AND (EXP_PMANIFEST_ULD.READY_DISP = 'N' OR EXP_PMANIFEST_ULD.READY_DISP IS NULL) AND EXP_PMANIFEST_ULD.READY_WH = 'Y') > 0
          			THEN                          
            			'03'
          			ELSE
            			'00'
          			END
        		END
    		END     
   		END  AS OUFLSTAT,
		'' AS OU_DISPFL1,
		'' AS OU_DISPFL2,
		'' AS COM1_TEXT,
		'' AS COM2_TEXT,
		'' AS STORAGE_ZONE,
		(SELECT DECODE(COUNT(1),'0','00','01') FROM AWB,
         AWB_INVENTORY,V_CST_CC_CODE_AWB
         WHERE AWB.AWB_NO = AWB_INVENTORY.AWB_NO AND AWB.AWB_DATE =
         AWB_INVENTORY.AWB_DATE AND V_CST_CC_CODE_AWB.AWB_NO = AWB.AWB_NO
         and exists (select null from MAST_CONSTRAINT_CODE m where m.CODE = V_CST_CC_CODE_AWB.CC_CODE and constraint = 'Y')
         AND AWB_INVENTORY.ULD_KEY = ULD_INVENTORY.ULD_KEY) AS CUSTSTAT,
		CASE
      		WHEN (SELECT COUNT(1) FROM ULD_INVENTORY where (HANDLING_MODE='NBK' OR HANDLING_MODE='PPK') AND ULD_KEY = #uldKey#) > 0        
      		THEN
        		'01'
      		ELSE
        		CASE
        		WHEN (SELECT COUNT(1) FROM ULD_INVENTORY LEFT JOIN EXP_PMANIFEST_ULD ON EXP_PMANIFEST_ULD.ULD_BT_NO = ULD_INVENTORY.ULD_KEY 
                	AND EXP_PMANIFEST_ULD.FLT_KEY = ULD_INVENTORY.FLT_KEY AND EXP_PMANIFEST_ULD.FLT_DATE = ULD_INVENTORY.FLT_DATE WHERE                     
                	(PPK_IND = 'Y' OR MIX_PPK_IND = 'Y' OR EXP_PMANIFEST_ULD.BLDUP_COMPLETE = 'Y') AND ULD_INVENTORY.ULD_KEY = #uldKey#) > 0
        		THEN
          			'01'
        		ELSE
          			'00'
      		END
      	END AS INTCSTAT,
        DECODE(EIC_FLG, 'Y',(SELECT COUNT(1)||'' FROM ULD_INVENTORY WHERE (ULD_KEY = #uldKey# OR BASE_PLT = #uldKey# OR BASE_PLT IN (SELECT BASE_PLT FROM ULD_INVENTORY 
        						WHERE ULD_KEY =#uldKey#) OR ULD_KEY IN (SELECT BASE_PLT FROM ULD_INVENTORY WHERE ULD_KEY = #uldKey#))),'0') AS STACK_CNT,
		DECODE(FLT_TYPE, 'E', 'ULDEXP', 'I', DECODE(EMPTY_FLG, 'Y', 'ULDEMP','ULDIMP'), NULL, DECODE(EMPTY_FLG, 'Y', 'ULDEMP', decode(transit_flg,'Y', 'ULDEXP',decode(ULD_FLOW, 'E', 'ULDEXP', 'ULDIMP')))) AS HOSTTARG,
		NVL(FIRST_WT||'','0') AS FRWT,
    	NVL(SECOND_WT||'','0') AS SCWT,
    	NVL(THIRD_WT||'','0') AS THWT,
    	NVL(FINAL_WEIGHT, 'N') AS FNIND,    	
		CASE WHEN (FUN_GET_BUSINESS_PROCESS(#uldKey#) IN ('IM')) OR (SELECT COUNT(1) FROM IMP_RAMP_CHK_DTL WHERE (ULD_INVENTORY.FLT_TYPE = 'I' AND NVL(BRKDN_COMPL_YN,'N') = 'N')
        	AND FLT_KEY = ULD_INVENTORY.IMP_FLT_KEY AND FLT_DATE = ULD_INVENTORY.IMP_FLT_DATE AND IMP_RAMP_CHK_DTL.ULD_KEY = ULD_INVENTORY.ULD_KEY) > 0 THEN        	
        		PKG_IMP.FUN_GET_HDLG_AREA(ULD_INVENTORY.IMP_FLT_KEY,TO_CHAR(ULD_INVENTORY.IMP_FLT_DATE,'DDMONYY'),ULD_INVENTORY.ULD_KEY)
      	ELSE
        	NULL
      	END AS HANDLING_ZONE,
	    FLT_TYPE,
	    EMPTY_FLG,
	    NVL(TRANSIT_FLG,'N') AS TRANSIT_FLG,
      	HANDLING_MODE,
      	(SELECT decode(MAST_ULD_ALLOT.PLT_CNT,'Pallet','P','C') AS ULD_ALLOT FROM MAST_ULD_ALLOT, MAST_ULD_ALLOT_GROUP, ULD_GROUP_TYPE WHERE  
          MAST_ULD_ALLOT.ULD_ALLOT = MAST_ULD_ALLOT_GROUP.ULD_ALLOT AND MAST_ULD_ALLOT_GROUP.ULD_GROUP = ULD_GROUP_TYPE.ULD_GROUP AND 
          ULD_GROUP_TYPE.ULD_TYPE = ULD_INVENTORY.ULD_TYPE) AS ALLOT_PALLET,
        FUN_GET_CARGO_TYPE(#uldKey#, NULL) AS CARGO_TYPE,
        TARGET AS TARGET,
        LOAD_TYPE AS LOAD_TYPE
	FROM 
		ULD_INVENTORY
	WHERE 
		ULD_KEY = #uldKey#
	</select>
	<select id="fetchAWBForPreAnnounceAndDataChange" parameterClass="java.util.HashMap" resultClass="cargo.cms.ws.ei.bo.MHCSAwbBO">
		SELECT 
		  AWB.AWB_NO AS awbNo,
		  '000000000000000000' AS hawbNo,
		  SUM(AWB_INVENTORY.LOCN_PCS) AS awbQty,
		  AWB.DEST AS awbDest,  
		  AWB.ORIG AS awbOrigin,  
		  SUBSTR(AWB.CONTENT, 0, 28) AS comText1,
      	  (SELECT A.SHC FROM(SELECT SHC,AWB_NO, AWB_DATE FROM V_EXP_SHC_PRIORITY ORDER BY PRIORITY DESC) A  
      	  WHERE A.AWB_NO = AWB.AWB_NO AND A.AWB_DATE= AWB_DATE AND ROWNUM = 1) AS shc,
          AWB_INVENTORY.FLT_TYPE as flightType,
          DECODE(AWB_INVENTORY.FLT_TYPE, 'I',SUBSTR(AWB_INVENTORY.FLT_KEY,0,2), NULL) AS inCarrier,
      	  DECODE(AWB_INVENTORY.FLT_TYPE, 'I',SUBSTR(AWB_INVENTORY.FLT_KEY,3), NULL) AS inFlightNo, 
      	  DECODE(AWB_INVENTORY.FLT_TYPE, 'I',TO_CHAR(AWB_INVENTORY.FLT_DATE,'YYYY-MM-DD'), NULL) AS inFlightDate,
          DECODE(AWB_INVENTORY.FLT_TYPE, 'E',SUBSTR(AWB_INVENTORY.FLT_KEY,0,2), NULL) AS outCarrier,
      	  DECODE(AWB_INVENTORY.FLT_TYPE, 'E',SUBSTR(AWB_INVENTORY.FLT_KEY,3), NULL) AS outFlightNo, 
      	  DECODE(AWB_INVENTORY.FLT_TYPE, 'E',TO_CHAR(AWB_INVENTORY.FLT_DATE,'YYYY-MM-DD'), NULL) AS outFlightDate
		FROM
			AWB, AWB_INVENTORY
		WHERE
		  	AWB.AWB_NO = AWB_INVENTORY.AWB_NO AND
		  	AWB.AWB_DATE = AWB_INVENTORY.AWB_DATE AND
		  	AWB_INVENTORY.ULD_KEY = #uldKey#
    	GROUP BY AWB.AWB_NO,AWB.DEST,AWB.ORIG,AWB.CONTENT,AWB_INVENTORY.FLT_KEY, AWB_INVENTORY.FLT_DATE, AWB_INVENTORY.FLT_TYPE
	</select>

<select id="getReceiveCargoAwbDataLsp" parameterClass="java.lang.String" resultClass="cargo.cms.ws.ei.bo.MHCSAwbBO">
				SELECT 
				  DISTINCT
          		  hd.AWB_NO AS awbNo,
				  '000000000000000000' AS hawbNo,
				  ttl_pcs AS awbQty,
				  AWB_DEST AS awbDest,
				  'HKG' AS awbOrigin,  
				  SUBSTR(CONTENT, 0, 28) AS comText1,
			      spl_code1 AS shc,
			      '' as flightType,
			      '' AS inCarrier,
			      '' AS inFlightNo, 
			      '' AS inFlightDate,
			      '' AS outCarrier,
			      '' AS outFlightNo, 
			      '' AS outFlightDate
				FROM EXP_PRE_RCL_HD hd
        		JOIN EXP_CARGO_RECEIVE_RECORD recv on recv.PRE_RCL_NO = hd.PRE_RCL_NO
        		where RECV.LSP_NO = #lspUldNum# AND recv.RCL_NO is null
	</select>
	
	<select id="getReceiveCargoAwbDataUld" parameterClass="java.lang.String" resultClass="cargo.cms.ws.ei.bo.MHCSAwbBO">
				SELECT 
				  DISTINCT
          		  hd.AWB_NO AS awbNo,
				  '000000000000000000' AS hawbNo,
				  ttl_pcs AS awbQty,
				  AWB_DEST AS awbDest,
				  'HKG' AS awbOrigin,  
				  SUBSTR(CONTENT, 0, 28) AS comText1,
			      spl_code1  AS shc,
			      '' as flightType,
			      '' AS inCarrier,
			      '' AS inFlightNo, 
			      '' AS inFlightDate,
			      '' AS outCarrier,
			      '' AS outFlightNo, 
			      '' AS outFlightDate
				FROM EXP_PRE_RCL_HD hd
        		JOIN EXP_CARGO_RECEIVE_RECORD recv on recv.PRE_RCL_NO = hd.PRE_RCL_NO
        		where RECV.ULD_KEY = #lspUldNum# AND recv.RCL_NO is null
	</select>
	
	<select id="fetchBINForPreAnnounceAndDataChange" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT 
			LSP_INVENTORY.LSP_NO  AS CARR,
			'' AS OU_DISPFL1,
			'' AS OU_DISPFL2,
			'' AS STACK_CNT, 
			DECODE((SELECT A.AWB_TYPE FROM (SELECT AWB.AWB_TYPE,AWB.AWB_NO,AWB_INVENTORY.LSP_NO,AWB_INVENTORY.AWB_NO, AWB_INVENTORY.AWB_DATE FROM 
        	AWB_INVENTORY,AWB WHERE AWB_INVENTORY.AWB_NO = AWB.AWB_NO AND AWB_INVENTORY.AWB_DATE = AWB.AWB_DATE AND AWB.AWB_CLOSED_YN = 'N'
   			AND AWB_INVENTORY.LSP_NO = #lspNo# ORDER BY AWB.AWB_DATE DESC) A WHERE ROWNUM = 1), 'I','IM','T','TR','E','EX',DECODE(EMPTY_FLG , 'Y', 'OT','')) AS BUSIPROC,
			'' AS COM1_TEXT,
			'' AS COM2_TEXT,
			'' AS CARGOTYPE,
			TARGET AS TARGET,
			(SELECT TARE_WT FROM MAST_CSD WHERE CODE = LSP_INVENTORY.LSP_NO) + (SELECT SUM(LOCN_WT) FROM AWB_INVENTORY WHERE LSP_NO = LSP_INVENTORY.LSP_NO)||'' AS GROSS_WGHT, 
			DECODE(LSP_INVENTORY.LOCK_RQS,'Y','01','00') AS LOCKSTAT,
			DECODE(LSP_INVENTORY.EMPTY_FLG,'Y','00','01') AS LOADSTAT,
			(SELECT STRAGG(STRINGDELIM(CODE,',')) FROM (SELECT DISTINCT CODE FROM (SELECT MAST_SPL_HAND_CODE.CODE AS CODE FROM AWB,AWB_INVENTORY,MAST_SPL_HAND_CODE WHERE 
					AWB.AWB_NO = AWB_INVENTORY.AWB_NO AND AWB.AWB_DATE = AWB_INVENTORY.AWB_DATE
					AND (MAST_SPL_HAND_CODE.CODE = AWB.SPL_CODE1 OR MAST_SPL_HAND_CODE.CODE = AWB.SPL_CODE2 OR MAST_SPL_HAND_CODE.CODE = AWB.SPL_CODE3 OR 
								MAST_SPL_HAND_CODE.CODE = AWB.SPL_CODE4 OR MAST_SPL_HAND_CODE.CODE = AWB.SPL_CODE5 OR MAST_SPL_HAND_CODE.CODE = AWB.SPL_CODE6 OR 
								MAST_SPL_HAND_CODE.CODE = AWB.SPL_CODE7 OR MAST_SPL_HAND_CODE.CODE = AWB.SPL_CODE8 OR MAST_SPL_HAND_CODE.CODE = AWB.SPL_CODE9)
					AND AWB_INVENTORY.LSP_NO = #lspNo# ORDER BY PRIORITY)) WHERE ROWNUM &lt; 10) AS SHCS,
			 (SELECT DECODE(COUNT(1),'0','00','01') FROM AWB, AWB_INVENTORY,V_CST_CC_CODE_AWB
                       WHERE AWB.AWB_NO = AWB_INVENTORY.AWB_NO AND AWB.AWB_DATE = AWB_INVENTORY.AWB_DATE AND V_CST_CC_CODE_AWB.AWB_NO = AWB.AWB_NO
                       AND exists (select null from mast_constraint_code where CODE = V_CST_CC_CODE_AWB.CC_CODE AND CONSTRAINT = 'Y')
               AND AWB_INVENTORY.LSP_NO = LSP_INVENTORY.LSP_NO)AS CUSTSTAT,
			DECODE((SELECT A.AWB_TYPE FROM (SELECT AWB.AWB_TYPE,AWB.AWB_NO,AWB_INVENTORY.LSP_NO,AWB_INVENTORY.AWB_NO, AWB_INVENTORY.AWB_DATE FROM AWB_INVENTORY,AWB WHERE AWB_INVENTORY.AWB_NO = AWB.AWB_NO 
   			AND AWB_INVENTORY.AWB_DATE = AWB.AWB_DATE AND AWB.AWB_CLOSED_YN = 'N'
   			AND AWB_INVENTORY.LSP_NO = #lspNo# ORDER BY AWB.AWB_DATE DESC) A WHERE ROWNUM = 1), 'I','BINIMP','T','BINIMP','E','BINEXP',DECODE(EMPTY_FLG , 'Y', 'BINEMP','BINIMP')) AS HOSTTARG,
   			FUN_GET_CARGO_TYPE(NULL, #lspNo#) AS CARGO_TYPE,
        (SELECT TEMP_CLASS FROM MAST_SPL_HAND_CODE WHERE CODE IN (SELECT SHC FROM V_IMP_FLT_LSP_SHC WHERE LSP_NO = #lspNo#) AND TEMP_CLASS IS NOT NULL AND ROWNUM = 1) AS TEMPCLASS
		FROM 
			LSP_INVENTORY
		WHERE 
			LSP_NO = #lspNo#
	</select>
	<select id="fetchAWBForBinPreAnnounceAndDataChange" parameterClass="java.util.HashMap" resultClass="cargo.cms.ws.ei.bo.MHCSAwbBO">
		SELECT 
		  AWB.AWB_NO AS awbNo,
		  '000000000000000000' AS hawbNo,
      	  SUM(AWB_INVENTORY.LOCN_PCS) AS awbQty,
		  AWB.DEST AS awbDest,  
		  SUBSTR(AWB.CONTENT, 0, 28) AS comText1,
      	  (SELECT A.SHC FROM(SELECT SHC,AWB_NO, AWB_DATE FROM V_EXP_SHC_PRIORITY ORDER BY PRIORITY DESC) A  
      	  WHERE A.AWB_NO = AWB.AWB_NO AND A.AWB_DATE= AWB_DATE AND ROWNUM = 1) AS shc
		FROM
			AWB, AWB_INVENTORY
		WHERE
		  	AWB.AWB_NO = AWB_INVENTORY.AWB_NO AND
		  	AWB.AWB_DATE = AWB_INVENTORY.AWB_DATE AND
		  	AWB_INVENTORY.LSP_NO = #lspNo#
		GROUP BY AWB.AWB_NO,AWB.DEST,AWB.CONTENT
	</select>
	<select id="getPreannouncementInd" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM(
			SELECT COUNT(1) AS A FROM MAST_WH_LOC WHERE PREANNOUNCEMENT_IND = 'Y' AND CODE = #location#
			UNION ALL
			SELECT COUNT(1) AS A FROM MAST_WH_AREA WHERE PREANNOUNCEMENT_IND = 'Y' AND WH_AREA = #location#
			UNION ALL
			SELECT COUNT(1) AS A FROM MAST_WH_GROUP WHERE PREANNOUNCEMENT_IND = 'Y' AND WH_GROUP = #location#) WHERE A = 1		
	</select>	
	<select id="fetchTrNoImpHoAreaHd" parameterClass="java.lang.Object" resultClass="java.lang.Integer">
		SELECT IMP_HOAREA_HD_SEQ_NO.NEXTVAL FROM DUAL
	</select>
	<select id="fetchDocLineNoHoAreaDtl" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		SELECT MAX(DOC_LINE_NO) FROM IMP_HOAREA_DTL where TR_NO = #trNo# ORDER BY DOC_LINE_NO
	</select>
	<insert id="insertImpHOAreaHd" parameterClass="java.util.HashMap">
		INSERT INTO IMP_HOAREA_HD(TR_NO, FLT_KEY, FLT_DATE, CR_DATE, CR_USER_ID, LM_DATE, LM_USER_ID) VALUES(#trNo#, #fltKey#, #fltDate#, SYSDATE, 'MHS', SYSDATE, 'MHS')
	</insert>
	<insert id="insertImpHOAreaDtl" parameterClass="java.util.HashMap">
		INSERT INTO IMP_HOAREA_DTL(TR_NO, DOC_LINE_NO, OPS_AREA, HO_AREA, DELAY_TIME, CR_DATE, CR_USER_ID, LM_DATE, LM_USER_ID) 
		VALUES(#trNo#, #docLineNo#, #opsArea#, #hoArea#, #delayTime#, SYSDATE, 'MHS', SYSDATE, 'MHS')
	</insert>
	<parameterMap id="prcgetopareamap" class="map">		
		<parameter property="fltKey" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="IN" />
		<parameter property="fltDate" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="IN" />
		<parameter property="fltType" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="IN" />
		<parameter property="carrCode" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="IN" />			
	</parameterMap>
	<procedure id="procedureGetOpArea" parameterMap="prcgetopareamap">
		{ call PRC_GET_OP_AREA(?,?,?,?) }
	</procedure>
	<select	id="fetchGtOpArea" parameterClass="java.util.HashMap" resultClass="cargo.cms.ws.ei.bo.MHCSOpAreaBO">
		SELECT OP_AREA AS opArea, ULD_QTY AS uldQty, HANDLING_ZONE AS handlingZone FROM GT_OP_AREA WHERE FLT_KEY = #fltKey# AND FLT_DATE = TO_DATE(#fltDate#,'DDMONYY')
	</select>	
	<select id="detailsExistsfhl" parameterClass="cargo.cms.edi.ei.bo.StartPreparationBO" resultClass="cargo.cms.edi.ei.bo.StartPreparationBO">
		SELECT TO_CHAR(LM_DATE, 'ddMMYY HH24:MI:SS') AS lastModifiedDate FROM START_PREP_DTL WHERE AWB_NO = #awbNo# AND AWB_DATE = #awbDate# AND MSG_TYPE = #messageType#
	</select>  
	<insert id="insertFHLMessageStartPrepDetail" parameterClass="cargo.cms.edi.ei.bo.StartPreparationBO">
		INSERT INTO START_PREP_DTL(
		AWB_NO,AWB_DATE,FWB_FRZ_DATE,FWB_FRZ_USER_ID,FHL_FRZ_DATE,
		FHL_FRZ_USER_ID,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE, MSG_TYPE,AUTO_FRZ_YN)
		VALUES(#awbNo#,TO_DATE(#awbDate#,'DDMONYY'),null,
		null,SYSDATE,#freezeUserId#,#freezeUserId#,
		SYSDATE,#freezeUserId#,SYSDATE, 'FHL',#autoFrzMan#)
	</insert>
	<select id="createChangeFlightData" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT CARR_CODE AS IN_ARLI,FLT_NO AS IN_FLGTSN,TO_CHAR(SCH_DATE,'DDMONYY') AS SCHED_FLGTDT,LPAD(SCH_TIME,4,0) AS SCHED_FLGTTM,TO_CHAR(EST_DATE,'DDMONYY') AS EXPCT_FLGTDT,
				LPAD(EST_TIME,4,0) AS EXPCT_FLGTTM,TO_CHAR(ACT_DATE,'DDMONYY') AS ACTU_FLGTDT,LPAD(ACT_TIME,4,0) AS ACTU_FLGTTM,SUBSTR(RMK,0,28) AS COM1_TEXT,
				DECODE(CGO_ACFT_TYPE,'FRE','01','PSR','02','01') AS FLGTTYPE,DECODE(TO_IND, 'Y','03','01') AS ACLOADING
				FROM FLT_OPR WHERE FLT_KEY = #fltKey# AND SCH_DATE = TO_DATE(#fltDate#,'DDMONYY') AND FLT_TYPE = #fltType#
	</select>

<select id="getULDCheckINDtlsTOUpdateATW" parameterClass="java.lang.String" resultClass="java.util.HashMap">
		SELECT ULD_INVENTORY.ULD_KEY AS ULD_KEY,
			  ULD_INVENTORY.IMP_FLT_KEY AS IMP_FLT_KEY,
			  TO_CHAR(ULD_INVENTORY.IMP_FLT_DATE,'DDMONYY') AS IMP_FLT_DATE,
			  TO_CHAR(IMP_RAMP_CHK_DTL.TIME_OF_ARRIVAL,'DDMONYY') AS TIME_OF_ARRIVAL
			FROM IMP_RAMP_CHK_DTL, ULD_INVENTORY
			WHERE ULD_INVENTORY.FLT_TYPE  = 'I'
			AND IMP_RAMP_CHK_DTL.FLT_KEY  = ULD_INVENTORY.IMP_FLT_KEY
			AND IMP_RAMP_CHK_DTL.FLT_DATE = ULD_INVENTORY.IMP_FLT_DATE
			AND IMP_RAMP_CHK_DTL.ULD_KEY  = ULD_INVENTORY.ULD_KEY
			AND NVL(IMP_RAMP_CHK_DTL.CHKIN_YN,'N') = 'Y'
			AND ULD_INVENTORY.ULD_KEY  = #uldKey#
	</select>
	<select id="getULDCheckINDtlsTOUpdateATWEntry" parameterClass="java.lang.String" resultClass="java.util.HashMap">
		SELECT ULD_INVENTORY.ULD_KEY AS ULD_KEY,
			  ULD_INVENTORY.IMP_FLT_KEY AS IMP_FLT_KEY,
			  TO_CHAR(ULD_INVENTORY.IMP_FLT_DATE,'DDMONYY') AS IMP_FLT_DATE,
			  TO_CHAR(IMP_RAMP_CHK_DTL.TIME_OF_ARRIVAL,'DDMONYY') AS TIME_OF_ARRIVAL
			FROM IMP_RAMP_CHK_DTL, ULD_INVENTORY
			WHERE NVL(ULD_INVENTORY.FLT_TYPE,'I')  = 'I'
			AND IMP_RAMP_CHK_DTL.FLT_KEY  = ULD_INVENTORY.IMP_FLT_KEY
			AND IMP_RAMP_CHK_DTL.FLT_DATE = ULD_INVENTORY.IMP_FLT_DATE
			AND IMP_RAMP_CHK_DTL.ULD_KEY  = ULD_INVENTORY.ULD_KEY
			AND NVL(IMP_RAMP_CHK_DTL.CHKIN_YN,'N') = 'Y'
			AND ULD_INVENTORY.ULD_KEY  = #uldKey#
	</select>
<select id="getFltBreakdnDtlsTOUpdateATW" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT decode(count(1),0,'N','Y') FROM FLT_OPR A, FLT_OPR_EVENTS B WHERE B.FLT_KEY = A.FLT_KEY AND B.SCH_DATE = A.SCH_DATE AND B.FLT_TYPE = A.FLT_TYPE
		AND A.FLT_KEY = #IMP_FLT_KEY# AND A.SCH_DATE=#IMP_FLT_DATE# AND A.FLT_TYPE='A' AND B.WHSE_COMPL_DATE is not null
	</select>
<select id="getFstEntryDtlsTOUpdateATW" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM IMP_RAMP_CHK_DTL WHERE FLT_KEY=#fltKey# AND FLT_DATE=#fltDate# AND ULD_KEY=#uldKey# AND FST_MHCS_ETRY_TIME IS NULL
	</select>
	
	<select id="checkRefNetWeightCapturedULD" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM ULD_INVENTORY WHERE ULD_KEY=#uldKey# AND REF_NET_WT IS NULL
	</select>
	
	<select id="checkRefNetWeightCapturedLSP" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM LSP_INVENTORY WHERE lsp_no = #binNo# AND REF_NET_WT IS NULL
	</select>
	
<select id="getUldEntryIdentificationRcvdInd" parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT NVL(ULDENTRY_MSG_RCVD_YN,'N') FROM ULD_INVENTORY WHERE ULD_KEY=#uldKey#
</select>
	<select id="getUldEntryIdentificationFirstWt" parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT NVL(first_wt,0) FROM ULD_INVENTORY WHERE ULD_KEY=#uldKey#
	</select>

<select id="getULDCheckINDtlsTOSendADL" parameterClass="java.lang.String" resultClass="java.util.HashMap">
		SELECT ULD_INVENTORY.ULD_KEY AS ULD_KEY,
			  ULD_INVENTORY.IMP_FLT_KEY AS IMP_FLT_KEY,
			  TO_CHAR(ULD_INVENTORY.IMP_FLT_DATE,'DDMONYY') AS IMP_FLT_DATE,
			  TO_CHAR(IMP_RAMP_CHK_DTL.TIME_OF_ARRIVAL,'DDMONYY') AS TIME_OF_ARRIVAL
			FROM IMP_RAMP_CHK_DTL, ULD_INVENTORY
			WHERE ULD_INVENTORY.FLT_TYPE  = 'I'
			AND IMP_RAMP_CHK_DTL.FLT_KEY  = ULD_INVENTORY.IMP_FLT_KEY
			AND IMP_RAMP_CHK_DTL.FLT_DATE = ULD_INVENTORY.IMP_FLT_DATE
			AND IMP_RAMP_CHK_DTL.ULD_KEY  = ULD_INVENTORY.ULD_KEY			
			AND ULD_INVENTORY.ULD_KEY  = #uldKey# AND ULD_INVENTORY.LOC_CODE IS NOT NULL
			AND (IMP_RAMP_CHK_DTL.BRKDN_START_DATE IS NULL AND IMP_RAMP_CHK_DTL.BRKDN_COMPL_DATE IS NULL)
	</select>

	<select id="checkLocationIsWorkstation" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM MAST_WH_LOC loc,  MAST_WH_TYPE typ,  MAST_WH_GROUP grp
			WHERE loc.wh_group = grp.wh_group AND grp.wh_type    = typ.wh_type
			AND typ.wh_type    = 'WS' AND loc.code    = #locCode#
	</select>

<update id="updateTimeOFArrivalTOWorkstation" parameterClass="java.util.HashMap">
		UPDATE IMP_RAMP_CHK_DTL SET TIME_OF_ARRIVAL = SYSDATE , LM_USER_ID = 'MHCS', LM_DATE = SYSDATE 
			WHERE FLT_KEY  = #IMP_FLT_KEY# AND FLT_DATE = TO_DATE(#IMP_FLT_DATE#,'DDMONYY') AND ULD_KEY  = #ULD_KEY#
	</update>
	
	<select id="getXTConnectingFltDtls" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT EXP_FLT_KEY AS EXP_FLT_KEY, TO_CHAR(EXP_FLT_DATE,'DDMONYY') AS EXP_FLT_DATE, ULD_KEY AS ULD_KEY 
			FROM xt_imp_car_shp_dtl WHERE IMP_FLT_KEY = #IMP_FLT_KEY# AND IMP_FLT_DATE  = TO_DATE(#IMP_FLT_DATE#,'DDMONYY') AND ULD_KEY = #ULD_KEY# AND ROWNUM = 1
	</select>

	<select id="getCaluclatedADLDATETime" parameterClass="java.util.HashMap" resultClass="java.lang.String">
	 <![CDATA[
		SELECT TO_CHAR( (to_date( (TO_CHAR( DECODE(EST_DATE,NULL,SCH_DATE,EST_DATE), 'DDMONYY' )
			  || ' '
			  || LPAD(DECODE(EST_DATE,NULL,SCH_TIME,EST_TIME),4, 0)), 'DDMONYYHH24MI' ) -
			  (SELECT (
			    NVL((SELECT TIME_MINS FROM MAST_ACFT_TYPE_CONFIG WHERE ACFT_TYPE = opr.CGO_ACFT_TYPE), 0)
			      +
			    CASE WHEN (select count(1) from MAST_ULD_GROUP where plt_cnt_size = 'Full size' and uld_group in (select uld_group from uld_group_type where uld_type = substr(#ULD_KEY#, 1, 3) and rownum = 1) ) > 0
			      THEN (SELECT rule_value FROM cmsrules WHERE rule_code = 'XT_BKDU_FULL') 
			      ELSE (SELECT rule_value FROM cmsrules WHERE rule_code = 'XT_BKDU_HALF') 
			    END
			   ) /60
			  FROM dual
			  )/24 ) , 'YYYY-MM-DDHH24MI' )
			FROM flt_opr opr
			WHERE flt_type = 'D'
			AND flt_key    = #EXP_FLT_KEY#
			AND sch_date   = TO_DATE(#EXP_FLT_DATE#,'DDMONYY')
	  ]]> 
	</select>	
	<select id="fetchFirstSecondThirdWeightUldInventory" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT FIRST_WT||'' AS FIRST_WT, SECOND_WT||'' AS SECOND_WT, THIRD_WT||'' AS THIRD_WT,TRANSIT_FLG,HANDLING_MODE,FINAL_WEIGHT||'' AS FINAL_WEIGHT,TARGET,TRANSIT_TYPE  FROM ULD_INVENTORY WHERE ULD_KEY = #uldKey#
	</select>
	<update id="updateLocCodeAndWeightUldInventory" parameterClass="java.util.HashMap">
		UPDATE ULD_INVENTORY SET
			LOC_CODE = #locCode#, LOCKED = DECODE(#lockStat#, '1', 'Y', '0', 'N', '01', 'Y', '00', 'N'),LOCK_RQS = DECODE(#lockStat#, '1', 'Y', '0', 'N', '01', 'Y', '00', 'N'), 
			TR_TYPE = 'MHCS',LM_DATE = SYSDATE, LM_USER_ID = 'MHCS',ULDENTRY_MSG_RCVD_YN = NVL(#uldEntryIdentificationReceived#,ULDENTRY_MSG_RCVD_YN),
			DOUBLE_WGT_RSLT=DECODE(final_weight, 'Y', DOUBLE_WGT_RSLT, #dwgtRslt#),X_RAY_RES = #xrayRslt#,X_RAY_REQ = DECODE(#xrayRslt#, '01', 'N','1', 'N', X_RAY_REQ),
			STRG_DATE = SYSDATE
			<isPropertyAvailable property="refWeight"> 
				,REF_WT = #refWeight#
			</isPropertyAvailable> 
			<isPropertyAvailable property="firstWeight"> 
				,FIRST_WT = #firstWeight#,MAN_WT_IND = 'N'
			</isPropertyAvailable>
			<isPropertyAvailable property="secondWeight">
				,SECOND_WT = #secondWeight#,MAN_WT_IND2 = 'N'
			</isPropertyAvailable>
			<isPropertyAvailable property="thirdWeight"> 
				,THIRD_WT = #thirdWeight#,MAN_WT_IND3 = 'N'
			</isPropertyAvailable>
			<isPropertyAvailable property="finalWt"> 
				,GROSS_WEIGHT = #finalWt#
			</isPropertyAvailable>
			<isPropertyAvailable property="finalInd"> 
				,FINAL_WEIGHT  =  #finalInd#
			</isPropertyAvailable>
			<isEqual  property="updTargetFlg"  compareValue="Y">
		    	,TARGET = null
		   	</isEqual>
                        <isEqual  property="updtareWtInd"  compareValue="Y">
		   	<isEqual  property="updRefNetWt"  compareValue="Y">
		   	,REF_NET_WT = (#refNetWt# - NVL(#tareWt#,0) )
		   	,tare_weight = NVL(#tareWt#,0)
		   	</isEqual>
		   	</isEqual>
		   	<isNotEqual  property="updtareWtInd"  compareValue="Y">
		   	<isEqual  property="updRefNetWt"  compareValue="Y">
		   	,REF_NET_WT = (#refNetWt# - NVL(TARE_WEIGHT,0) )
		   	</isEqual>
		   	</isNotEqual>
		WHERE ULD_KEY = #uldKey#
	</update>
	
        <update id="updatefstMhcsEntryInUldInventory" parameterClass="java.util.HashMap">
	 UPDATE IMP_RAMP_CHK_DTL SET FST_MHCS_ETRY_TIME = NVL(FST_MHCS_ETRY_TIME,SYSDATE) WHERE ULD_KEY = #uldKey# AND FLT_KEY=#fltKey# AND FLT_DATE=#fltDate#
	</update>
<update id="updateLstMhcsExittonullInUldInventory" parameterClass="java.util.HashMap">
		UPDATE ULD_INVENTORY SET
			LST_MHCS_EXIT_TIME=''
			WHERE ULD_KEY = #uldKey#
	</update>
        <update id="updateLstMhcsEntryInUldInventory" parameterClass="java.util.HashMap">
		UPDATE ULD_INVENTORY SET
			LST_MHCS_ETRY_TIME = SYSDATE
			WHERE ULD_KEY = #uldKey#
	</update>
	<update id="updateLstMhcsExitInUldInventory" parameterClass="java.util.HashMap">
		UPDATE ULD_INVENTORY SET
			LST_MHCS_EXIT_TIME=SYSDATE
			WHERE ULD_KEY = #uldKey#
	</update>

	<update id="updateLSPRefWtRCLSnapshot" parameterClass="java.util.HashMap">
		update EXP_CARGO_RECEIVE_RECORD set REF_WT = #refWt# , LM_USER_ID = 'SYSTEM' , lm_date = SYSDATE where tr_no IN (
		  WITH LSP_INV AS (
		      select inv.awb_no,inv.awb_date, inv.lsp_no , recv.tr_no from awb_inventory inv
		      JOIN LSP_INVENTORY lsp ON lsp.lsp_no = inv.lsp_no
		      JOIN (
		        select tr_no , awb_no , awb_date, lsp_no from EXP_CARGO_RECEIVE_RECORD where lsp_no is not null and rcl_no is not null and ref_wt is null
		      ) recv ON recv.awb_no = inv.awb_no and recv.awb_date = inv.awb_date and recv.lsp_no = inv.lsp_no
		     where inv.lsp_no is not null and inv.lsp_no = #binNo#  AND NVL(BINENTRY_MSG_RCVD_YN, 'N') = 'Y'
		   )
		  select tr_no from LSP_INV
		)
	</update>
	
	<update id="updateULDRefWtRCLSnapshot" parameterClass="java.util.HashMap">
		update EXP_CARGO_RECEIVE_RECORD set REF_WT = #refWeight# , LM_USER_ID = 'SYSTEM' , lm_date = SYSDATE where tr_no IN (
		  WITH ULD_INV AS (
		      select inv.awb_no,inv.awb_date, inv.uld_key , recv.tr_no from awb_inventory inv
		      JOIN ULD_INVENTORY uld ON uld.uld_key = inv.uld_key
		      JOIN (
		        select tr_no , awb_no , awb_date, uld_key from EXP_CARGO_RECEIVE_RECORD where uld_key is not null and rcl_no is not null and ref_wt is null
		      ) recv ON recv.awb_no = inv.awb_no and recv.awb_date = inv.awb_date and recv.uld_key = inv.uld_key
		     where inv.uld_key is not null and inv.uld_key = #uldKey#  AND NVL(uld.ULDENTRY_MSG_RCVD_YN, 'N') = 'Y'
		   )
		  select tr_no from ULD_INV
		)
	</update>

	<update id="updateLocCodeLspInventory" parameterClass="java.util.HashMap">
		UPDATE lsp_inventory SET loc_code = #locCode#, LOCKED = DECODE(#lockStat#, '1', 'Y', '0', 'N', '01', 'Y', '00', 'N'),
		LOCK_RQS = DECODE(#lockStat#, '1', 'Y', '0', 'N', '01', 'Y', '00', 'N'), REF_WT = #refWt#,LM_DATE = SYSDATE, LM_USER_ID = 'MHCS',
		BINENTRY_MSG_RCVD_YN = NVL(#binEntryIdentificationReceived#,BINENTRY_MSG_RCVD_YN),STRG_DATE = SYSDATE,tr_type='MHRW'
		<isEqual  property="updTargetFlg"  compareValue="Y">
			,TARGET = NULL
		</isEqual>
		<isEqual  property="updRefNetWt"  compareValue="Y">
			,REF_NET_WT = (#refWt# - NVL((select TARE_WT FROM mast_csd where CODE = #binNo#),0) )
		</isEqual>
		WHERE lsp_no = #binNo#
	</update>
	<select id="isULDLocationInMHS" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM ULD_INVENTORY,MAST_WH_LOC,MAST_WH_GROUP WHERE ULD_INVENTORY.LOC_CODE = MAST_WH_LOC.CODE AND
		MAST_WH_LOC.WH_GROUP = MAST_WH_GROUP.WH_GROUP AND MAST_WH_GROUP.WH_TYPE = 'MHS' AND
		ULD_KEY = #uldKey#
	</select>
	<select id="isLSPLocationInMHS" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM LSP_INVENTORY,MAST_WH_LOC,MAST_WH_GROUP WHERE LSP_INVENTORY.LOC_CODE = MAST_WH_LOC.CODE AND
		MAST_WH_LOC.WH_GROUP = MAST_WH_GROUP.WH_GROUP AND MAST_WH_GROUP.WH_TYPE = 'MHS' AND
		LSP_NO = #lspNo#
	</select>
	<select id="checkULDInventoryDataExistsForImport" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
	  SELECT COUNT(1) FROM ULD_INVENTORY WHERE ULD_KEY = #uldKey# AND IMP_FLT_KEY = #impFltKey# AND IMP_FLT_DATE = TO_DATE(#impFltDate#, 'DDMONYY') AND OWNED_INV = 'Y'
	</select>
	<select id="getImpRampInbChkDtl" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT 
		IMP_RAMP_INB_CHK_DTL.ULD_TYPE AS ULDTYPE, 
		IMP_RAMP_INB_CHK_DTL.ULD_NO AS ULDSN,
		IMP_RAMP_INB_CHK_DTL.ULD_CARR AS ULD_ARLI,
		(SELECT ULD_GROUP FROM ULD_GROUP_CARR WHERE IMP_RAMP_INB_CHK_DTL.ULD_TYPE = ULD_GROUP_CARR.ULD_TYPE AND IMP_RAMP_INB_CHK_DTL.ULD_CARR = ULD_GROUP_CARR.CARR_CODE) AS ULDGRP,
		(SELECT SPECIFICATION FROM ULD_TYPE_CARR_TARE_WT WHERE ULD_TYPE = IMP_RAMP_INB_CHK_DTL.ULD_TYPE AND ULD_CARR = IMP_RAMP_INB_CHK_DTL.ULD_CARR AND 
		IMP_RAMP_INB_CHK_DTL.ULD_NO BETWEEN ULD_NO_FROM AND ULD_NO_TO AND SPECIFICATION IS NOT NULL AND ROWNUM = 1) AS INTERIOR,
		IMP_RAMP_INB_CHK_DTL.CARR_CODE AS CARR_CODE,
		IMP_RAMP_INB_CHK_DTL.FLT_NO AS FLT_NO,
		TO_CHAR(IMP_RAMP_INB_CHK_DTL.FLT_DATE,'YYYY-MM-DD') AS FLT_DATE,
		(SELECT FLT_OPR.ORIG FROM FLT_OPR WHERE FLT_OPR.FLT_KEY = IMP_RAMP_INB_CHK_DTL.FLT_KEY
		AND FLT_OPR.SCH_DATE = IMP_RAMP_INB_CHK_DTL.FLT_DATE AND FLT_OPR.FLT_TYPE = 'A') AS IN_ARPO,
		'' AS CARR_CODE,
		'' AS FLT_NO,
		'' AS FLT_DATE,
		'' AS OU_PORT,
		(CASE WHEN FUN_GET_TEMP_CAT4_CLASS(IMP_RAMP_INB_CHK_DTL.ULD_KEY,'') IS NOT NULL THEN 
    	FUN_GET_TEMP_CAT4_CLASS(IMP_RAMP_INB_CHK_DTL.ULD_KEY,'') ELSE
    	'' END) AS TEMPCLASS,
		DECODE(IMP_RAMP_INB_CHK_DTL.EMPTY_IND,'Y','00','01') AS LOADSTAT,
		'00' AS EICSTAT,
		DECODE((SELECT DAM_IND FROM ULD_INVENTORY WHERE ULD_KEY = IMP_RAMP_INB_CHK_DTL.ULD_KEY),'Y','03','99') AS INSPSTAT,
		'00' AS LOCKSTAT,
    	'00' AS CUSTSTAT,
    	DECODE(IMP_ULD_LIST.HANDLING_MODE, 'PPK','01','NBK','01','00') AS INTCSTAT,
		'' CONTR_CODE,				
		'00' AS XRAYRQST,	
		CASE WHEN IMP_RAMP_INB_CHK_DTL.EMPTY_IND = 'Y' THEN ''
			ELSE	
				NVL((SELECT  STRAGG(STRINGDELIM(SHC,',')) FROM (SELECT DISTINCT SHC FROM V_IMP_FLT_ULD_SHC WHERE ULD_KEY = #uldKey#  
				AND FLT_KEY = #impFltKey# AND FLT_DATE = TO_DATE(#impFltDate#, 'DDMONYY'))  WHERE  ROWNUM &lt;= 9), 
    			(SELECT STRAGG(STRINGDELIM(CODE,',')) FROM(SELECT DISTINCT CODE FROM V_EXP_ULD_SHC WHERE ULD_KEY = #uldKey#) WHERE ROWNUM &lt;= 9)) 
    	END AS SHCS,
		'IM' AS BUSIPROC,
		'' AS OUFLSTAT,
		'' AS OU_DISPFL1,
		'' AS OU_DISPFL2,
		'' AS COM1_TEXT,
		'' AS COM2_TEXT,
		'' AS STORAGE_ZONE,
		(SELECT DECODE(COUNT(1),'0','00','01') FROM AWB, AWB_INVENTORY,V_CST_CC_CODE_AWB,MAST_CONSTRAINT_CODE 
			WHERE AWB.AWB_NO = AWB_INVENTORY.AWB_NO AND AWB.AWB_DATE = AWB_INVENTORY.AWB_DATE AND V_CST_CC_CODE_AWB.AWB_NO = AWB.AWB_NO
			AND MAST_CONSTRAINT_CODE.CODE = V_CST_CC_CODE_AWB.CC_CODE AND MAST_CONSTRAINT_CODE.CONSTRAINT = 'Y'
		AND AWB_INVENTORY.ULD_KEY = IMP_RAMP_INB_CHK_DTL.ULD_KEY) AS CUSTSTAT,
		'' AS HANDLING_ZONE,
      	'I' AS FLT_TYPE,
      	IMP_ULD_LIST.HANDLING_MODE AS HANDLING_MODE,
        NVL(IMP_ULD_LIST.TRANSIT_IND,'N') AS TRANSIT_FLG,
        '0' AS FRWT,
        'ULDIMP' AS HOSTTARG
	FROM 
		IMP_RAMP_INB_CHK_DTL, IMP_ULD_LIST
	WHERE 
		IMP_RAMP_INB_CHK_DTL.FLT_KEY = IMP_ULD_LIST.FLT_KEY AND
    	IMP_RAMP_INB_CHK_DTL.FLT_DATE = IMP_ULD_LIST.FLT_DATE AND
    	IMP_RAMP_INB_CHK_DTL.ULD_KEY = IMP_ULD_LIST.ULD_KEY AND
		IMP_RAMP_INB_CHK_DTL.ULD_KEY = #uldKey# AND 
    	IMP_RAMP_INB_CHK_DTL.FLT_KEY = #impFltKey# AND
    	IMP_RAMP_INB_CHK_DTL.FLT_DATE = TO_DATE(#impFltDate#, 'DDMONYY')
	</select>
	<update id="updateMessageIdRtrvMoveOrder" parameterClass="java.util.HashMap">
		update rtrv_move_order set mhcs_msg_id = #messageNo# where 
		rowid = (select rowid from (select rowid from rtrv_move_order where 
		(cr_date BETWEEN (sysdate - 10/1440) AND SYSDATE) AND (lsp = #no# or uld = #no#) and curr_locn = #locn# and 
		target = #target# order by cr_date desc) where rownum=1)
	</update>
	<select id="getRclNumberForBkgDtls" parameterClass="java.lang.String" resultClass="java.lang.String">
	SELECT h.rcl_no FROM EXP_RCL_HD H
	JOIN (SELECT rcl_no, uld_key, dense_rank() over (partition BY uld_key order by rcl_date DESC) rank
    	FROM exp_uld_awb ) r ON r.rcl_no = h.rcl_no AND r.rank  =1
	JOIN uld_inventory u ON u.uld_key = r.uld_key
	WHERE h.void_user_id IS NULL AND (u.mix_ppk_ind = 'Y' OR u.ppk_ind = 'Y') AND u.uld_key = #uldkey# AND rownum = 1
	</select>
	<select id="fetchULDGrpAndInterior" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT (SELECT ULD_GROUP FROM ULD_GROUP_CARR WHERE ULD_GROUP_CARR.ULD_TYPE = #uldType# AND ULD_GROUP_CARR.CARR_CODE = #uldCarr#) AS ULDGRP,   
		(SELECT SPECIFICATION FROM ULD_TYPE_CARR_TARE_WT WHERE ULD_TYPE = #uldType# AND ULD_CARR = #uldCarr# AND #uldNo# BETWEEN ULD_NO_FROM AND ULD_NO_TO) AS INTERIOR
		FROM DUAL
	</select>
	<select id="fetchUldReqQty" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		SELECT SUM(ULD_REQ_QTY) AS ULD_REQ_QTY FROM ULD_ISS_DTL WHERE EIR_NO = #param#
	</select>
	<select id="checkFlightAreaInMHS" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT FLT_OPR.CHKOUT_AREA FROM FLT_OPR WHERE FLT_KEY = #flightKey# AND SCH_DATE = TO_DATE(#flightDate#,'DDMONYY') AND CHKOUT_AREA = 'MHS' AND FLT_TYPE = 'D'		
	</select>
	<select id="checkFlightAreaInMHSfromConf" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT MAST_AUTO_CHKOUT.CHKOUT_AREA  FROM MAST_AUTO_CHKOUT,FLT_OPR WHERE MAST_AUTO_CHKOUT.CARR_CODE = FLT_OPR.CARR_CODE AND
		MAST_AUTO_CHKOUT.ACFT_TYPE = FLT_OPR.CGO_ACFT_TYPE
		AND FLT_OPR.FLT_KEY = #flightKey# AND FLT_OPR.SCH_DATE = TO_DATE(#flightDate#,'DDMONYY') AND FLT_TYPE = 'D'
		AND MAST_AUTO_CHKOUT.CHKOUT_AREA = 'MHS' AND ROWNUM = 1
	</select>
	<select id="fetchExpPmanifestULDData" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT EXP_PMANIFEST_ULD.READY_DISP AS READY_DISP, EXP_PMANIFEST_ULD.BLDUP_COMPLETE AS BLDUP_COMPLETE, EXP_PMANIFEST_ULD.CONTR_CODE AS CONTR_CODE FROM EXP_PMANIFEST_ULD		
		WHERE EXP_PMANIFEST_ULD.FLT_KEY = #flightKey# AND EXP_PMANIFEST_ULD.FLT_DATE = TO_DATE(#flightDate#,'DDMONYY') AND EXP_PMANIFEST_ULD.ULD_BT_NO = #uldKey#		
	</select>
	<select id="sqlFetchImpBookingDetails" parameterClass="java.lang.String" resultClass="java.util.HashMap">
		<![CDATA[
		SELECT 
  			IMP_BOOKING.BOOKING_NO AS AGENT_BOOKNO, TO_CHAR(IMP_BOOKING.BKG_SLOT_DATE,'YYYY-MM-DD') || LPAD(IMP_BOOKING.BKG_SLOT_FROM,4, 0) AS NEXT_DTTM,
  			IMP_BOOKING.DEL_ZONE AS HANDLING_ZONE  
		FROM 
  			IMP_BOOKING, IMP_BOOKING_DTL,AWB_INVENTORY 
		WHERE 
		  IMP_BOOKING.BOOKING_NO = IMP_BOOKING_DTL.BOOKING_NO AND
		  IMP_BOOKING_DTL.FLT_KEY = AWB_INVENTORY.FLT_KEY AND
		  IMP_BOOKING_DTL.FLT_DATE = AWB_INVENTORY.FLT_DATE AND
		  IMP_BOOKING_DTL.AWB_NO = AWB_INVENTORY.AWB_NO AND
		  IMP_BOOKING_DTL.AWB_DATE = AWB_INVENTORY.AWB_DATE AND
		  IMP_BOOKING.STATUS = 'ISSUED' AND 
		  TO_DATE(TO_CHAR(IMP_BOOKING.BKG_SLOT_DATE, 'DDMONYY') || TO_CHAR(IMP_BOOKING.BKG_SLOT_FROM, '0000'),'DDMONYY HH24MI') > TO_DATE(TO_CHAR(SYSDATE,'DDMONYY HH24MI'),'DDMONYY HH24MI') AND
		  (AWB_INVENTORY.LSP_NO = #uldLspNo# OR AWB_INVENTORY.ULD_KEY = #uldLspNo#) AND 
		  ROWNUM = 1  
		]]>	  	
	</select>
		<update id="sqlMHCSUpdateRtrvMovOrder" parameterClass="java.util.HashMap">
		<![CDATA[
			UPDATE rtrv_move_order
			SET status='COMPLETED',
			LM_USER_ID='MHCS',
			LM_DATE=sysdate
			WHERE ULD = UPPER(#uldKey#)
			AND (status IS NULL OR (status <> 'E' AND status <>'CANCELLED' AND status <> 'TIMEOUT'))				
		]]>
	</update>
	<update id="sqlMHCSUpdateLSPMovOrder" parameterClass="java.util.HashMap">
		<![CDATA[
			UPDATE rtrv_move_order
			SET status='COMPLETED', LM_DATE = SYSDATE
			where LSP = UPPER(#binNo#)
			AND (status IS NULL OR(status <> 'E' AND status <>'CANCELLED'))
		]]>
	</update>
	<update id="sqlMHCSUpdateULDSrfShipments" parameterClass="java.util.HashMap">
		<![CDATA[
			UPDATE imp_srf_awb_inventory 
			SET 
	  			LOC_CODE = #locCode#, 
	   			LM_USER_ID = 'MHCS',
	   			TR_TYPE = 'MHCS', 
	   			LM_DATE = SYSDATE
			WHERE ULD_KEY = #uldKey# and srf_no in (select srf_no from awb_inventory  WHERE ULD_KEY = #uldKey# AND SRF_NO IS NOT NULL)	
		]]>
	</update>
	<update id="sqlMHCSUpdateLSPSrfShpmnt" parameterClass="java.util.HashMap">
		<![CDATA[
			UPDATE imp_srf_awb_inventory 
			SET 
	   			LOC_CODE = #locCode#, 
	   			LM_USER_ID = 'MHCS',
	   			LM_DATE = SYSDATE,
	   			TR_TYPE = 'MHCS' 
			WHERE LSP_NO = #binNo#	and srf_no in (select srf_no from awb_inventory  WHERE LSP_NO = #binNo# AND SRF_NO IS NOT NULL)				
		]]>
	</update>
	<update id="sqlMHCSUpdateAsvShpDtlsforHAWB" parameterClass="java.util.HashMap">
		<![CDATA[
			UPDATE ASV_INVENTORY 
			SET 
		   		LOC_CODE = #locCode#, 
		   		LM_USER_ID = 'MHCS', 
		   		LM_DATE = SYSDATE
			WHERE uld_key = #uldKey#
		]]>
	</update>
	<update id="sqlMHCSUpdateLSPASVShpforHAWB" parameterClass="java.util.HashMap">
		<![CDATA[
			UPDATE ASV_INVENTORY 
			SET 
		   		LOC_CODE = #locCode#, 
		   		LM_USER_ID = 'MHCS',
		   		LM_DATE = SYSDATE
			WHERE LSP_NO = #binNo#
		]]>	
	</update>
	<select id="sqlFetchLSPInventoryData" parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT TARGET  FROM LSP_INVENTORY WHERE LSP_NO = #binNo#
	</select>
	 <select id="getExportFlightTOInd" parameterClass="java.util.HashMap" resultClass="java.lang.String">
	    SELECT DECODE(TO_IND, 'Y','03','01') FROM FLT_OPR WHERE FLT_KEY = #fltKey# AND SCH_DATE = #fltDate# AND FLT_TYPE = #fltType#
	 </select>
	<!--
	==============================================================================================
		END - MHCS CHANGES VARADARAJ MUNI - 07 OCTOBER 2011
	==============================================================================================
	-->
	<!--
	==============================================================================================
		START - EDI - DERIVING MESSAGE DESTINATION VARADARAJ MUNI - 03 NOVEMBER 2011
	==============================================================================================
	-->
		<insert id="insertDgShipmentCon" parameterClass="cargo.cms.edi.ei.bo.DGShipmentBO">
			INSERT INTO DG_SHIPMENT_CON(ITEM_NO,AWB_TYPE,FLIGHT_TYPE,CARRIER,FLT_NO,FLT_DATE,ACN,AWB_SERIAL,UN_OR_ID,SERIAL_NO,CLASS,SHIPPER_NAME,AWB_CR_DATE,AWB_ORIG,AWB_DEST,A,B,
			C,D,E,F,G,H) VALUES(#itemNo#,#awbType#,#fltType#,#fltCarr#,#fltNo#,TO_DATE(#fltDate#,'DD-MON-YY'),#awbPrefix#,#awbSuffix#,#unId#,#unIdNo#,#clazz#,#shpName#,
			TO_DATE(#awbDate#,'DD-MON-YY'),#awbOrig#,#awbDest#,#box#,#woodenBarrel#,#drum#,#jerrican#,#bag#,#pressureReceptacle#,#compositePackaging#,#otherPackaging#)
		</insert>
		<select id="getAWBCarrier" parameterClass="java.util.HashMap" resultClass="java.lang.String">
			SELECT CARR_CODE FROM AWB WHERE AWB_NO = #awbNo# 
			<isNotEmpty prepend="AND" property="awbDate">
				AWB_DATE = #awbDate#
			</isNotEmpty>
			AND ROWNUM = 1
		</select>
		
		<select id="getAWBOwnerExportForAirFns" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
			SELECT count(1) FROM AWB_OWNER WHERE AWB_NO = #awbNo# AND AWB_DATE = #awbDate#	
			AND CARR_CODE = #carrCode#				
		</select>
		
		<select id="getAWBOwnerForAirFns" parameterClass="java.util.HashMap" resultClass="java.lang.String">
			SELECT CARR_CODE FROM AWB WHERE AWB_NO = #awbNo# AND AWB_DATE = #awbDate# 			
		</select>			
		
		<select id="getAWBCarrForAirFns" parameterClass="java.util.HashMap" resultClass="java.lang.String">
			SELECT CARR_CODE FROM MAST_AWB_PREFIX WHERE CODE = #awbPfx# 			
		</select>	
		
		<select id="getAWBParentOwnerForAirFns" parameterClass="java.util.HashMap" resultClass="java.lang.String">
			SELECT CARR_CODE FROM AWB WHERE AWB_NO = #awbNo# AND AWB_DATE = #awbDate# 			
		</select>
		
		<select id="getULDOwnerForAirFns" parameterClass="java.util.HashMap" resultClass="java.lang.String">
			SELECT OWNER_ID FROM ULD_INVENTORY WHERE ULD_KEY = #uldKey# 		
		</select>
		<select id="getULDParentOwnerForAirFns" parameterClass="java.lang.String" resultClass="java.lang.String">
			SELECT PARENT_OWNER FROM ULD_INVENTORY WHERE ULD_KEY = #uldKey# 		
		</select>
		
		<select id="getRCLCarrierForAirFns" parameterClass="java.util.HashMap" resultClass="java.lang.String">
			SELECT CARR_CODE FROM EXP_RCL_HD WHERE RCL_NO = #rclNo# 		
		</select>	
		
		<select id="checkGroupCarrForAirFns" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
			 SELECT count(1) FROM MAST_CARR_GRP WHERE CARR_CODE = #carrCode# and GRP_CARR_CODE	= #loginCarrier#
		</select>	
		
		<select id="getSITAAddressForCarr" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
			SELECT count(1) FROM CUST_AIRL_SITA_ADDR WHERE CUST_NO = #custCode# AND SITA_ADDR = #sitaAddr#				
		</select>
		
		<select id="getErrorMessage" parameterClass="java.lang.String" resultClass="cargo.cms.edi.ei.bo.ErrorMessageLogBO">
		        SELECT ERR_DESC AS errorDesc FROM ERR_MSG WHERE ERR_CODE IN ($errorCodes$) AND err_lcode = 'en_US'
		</select>
		<select id="sqlAgentCodeFromEDIFWB" parameterClass="java.util.HashMap" resultClass="java.lang.String">
			SELECT CODE FROM CUST_COMPANY WHERE CODE_DESC = (SELECT AGENT_NAME FROM EDI_FWB WHERE AWB_NO = #awbNo# AND AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY') AND TR_NO = 
			(SELECT MAX(TR_NO) FROM EDI_FWB WHERE AWB_NO = #awbNo# AND AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY')))
		</select>
		<select id="sqlCountASVHawb" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
			SELECT COUNT(1) FROM ASV_HAWB WHERE HAWB_NO = #hawbNo# AND AGENT_CODE = #agentCode#
		</select>
		<select id="sqlCountASVInventory" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
			SELECT COUNT(1) FROM ASV_INVENTORY WHERE HAWB_NO = #hawbNo# AND AGENT_CODE = #agentCode#
		</select>
		<update id="sqlUpdateASVHawb" parameterClass="java.util.HashMap">
			UPDATE ASV_HAWB SET AWB_NO = #awbNo#, AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY') WHERE HAWB_NO = #hawbNo# AND AGENT_CODE = #agentCode#
		</update>
		<update id="sqlUpdateASVInventory" parameterClass="java.util.HashMap">
			UPDATE ASV_INVENTORY SET AWB_NO = #awbNo#, AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY') WHERE HAWB_NO = #hawbNo# AND AGENT_CODE = #agentCode#
		</update>
		<update id="sqlUnAssignASVHawb" parameterClass="java.util.HashMap">
			UPDATE ASV_HAWB SET AWB_NO = NULL, AWB_DATE = NULL WHERE HAWB_NO = #hawbNo# AND AWB_NO = #awbNo# AND AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY')
		</update>
		<update id="sqlUnAssignASVInventory" parameterClass="java.util.HashMap">
			UPDATE ASV_INVENTORY SET AWB_NO = NULL, AWB_DATE = NULL WHERE HAWB_NO = #hawbNo# AND AWB_NO = #awbNo# AND AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY')
		</update>
	<!--
	==============================================================================================
		END - EDI - DERIVING MESSAGE DESTINATION VARADARAJ MUNI - 03 NOVEMBER 2011
	==============================================================================================
	-->	
	<!-- Added by santhosh k to validate target locn -->
	<select id="isValidTargetLocn" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		select cnt1+cnt2+cnt3 from 
		(select count(1) cnt1 from mast_wh_loc where code = #target#),
		(select count(1) cnt2 from mast_wh_group where wh_group = #target#),
		(select count(1) cnt3 from mast_wh_area where wh_area = #target#)
	</select>
	<!-- Added by santhosh k to validate target locn Ends -->
	
	<!-- Mhcs Flt Msg Queries starts -->
	<select id="getflightDetailslist" parameterClass="java.lang.String" resultClass="cargo.cms.export.bo.MhcsFltMsgBO">
		select flt_key as fltKey,to_char(sch_date,'DDMONYY') as fltDate,flt_type as fltType from FLT_OPR where nvl(mhcssend_yn,'N') = 'N'
	</select>	
	<update id="updateMhcsFltMsgInd"  parameterClass="cargo.cms.export.bo.MhcsFltMsgBO">
		update flt_opr set mhcssend_yn = 'Y' where flt_key=#fltKey# and sch_date = to_date(#fltDate#,'DDMONYY') and flt_type =#fltType#
	</update>
	<!--  Mhcs Flt Msg Queries Ends -->
		<delete id="deleteGtOpArea" parameterClass="java.util.HashMap" >
		DELETE from GT_OP_AREA	WHERE FLT_KEY = #fltKey# AND FLT_DATE  = TO_DATE(#fltDate#,'DDMONYY')
	</delete>
	<!-- Mhcs Flt Del Queries starts -->
	<select id="getDeleteflightDetailslist" parameterClass="java.lang.String" resultClass="cargo.cms.export.bo.MhcsFltMsgBO">
		select flt_key as fltKey,to_char(flt_date,'DDMONYY') as fltDate,flt_type as fltType from mhcs_flt_del
	</select>	
	<delete id="deleteFltFromMhcsFltDel" parameterClass="cargo.cms.export.bo.MhcsFltMsgBO">
		delete from mhcs_flt_del where  flt_key=#fltKey# and flt_date = to_date(#fltDate#,'DDMONYY') and flt_type =#fltType#
	</delete>
	<!--  Mhcs Flt Del Queries Ends -->
	<select id="fetchProcessFFMFinalize" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM EDI_FFM_MSG WHERE FLT_KEY = #flightKey# AND FLT_DATE = TO_DATE(#flightDate#,'DDMONYY')
		AND FINALIZE_DATE IS NOT
		NULL AND FINALIZE_USER_ID IS NOT NULL
	</select>
	<!-- Mhcs Resource Planning Queries starts -->
	<insert id="insertPlnWSNonAvl" parameterClass="java.util.HashMap">
		INSERT INTO PLN_WS_NON_AVL(TR_NO, WORKSTN_ID, START_DATE,END_DATE,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE) VALUES(PLN_WS_NON_AVL_SEQ.nextval, #fctp#, TO_DATE(#startTime#,'DDMONYY'),TO_DATE(#endTime#,'DDMONYY'),'SYSUSER',sysdate,'SYSUSER',sysdate)
	</insert>
	<select id="getPlnWSNonAvl" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		select tr_no from PLN_WS_NON_AVL where (start_Date=TO_DATE(#startTime#,'DDMONYY') or end_Date=TO_DATE(#endTime#,'DDMONYY')) and WORKSTN_ID=#fctp#
	</select>
	<update id="updatePlnWSNonAvl" parameterClass="java.util.HashMap">
			UPDATE PLN_WS_NON_AVL set end_date=TO_DATE(#startTime#,'DDMONYY') where tr_no=#trNo#
		</update>
	<!-- Mhcs Resource Planning Queries ends -->
	
	<select id="getAWBPrefixForCarrier" parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT CODE FROM MAST_AWB_PREFIX WHERE CARR_CODE= #PARAM# and def_yn='Y'
	</select>
	<select id="getRCLCarrierCode" parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT CARR_CODE FROM EXP_RCL_HD WHERE RCL_NO=#PARAM#
	</select>
	<update id="updateAWBType" parameterClass="java.util.HashMap">
		UPDATE AWB SET AWB_TYPE = #awbType# WHERE AWB_NO = #awbNo# and AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
	</update>
	<select id="validateAWBOriginDestination" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT ORG AS ORIG, DES AS DEST FROM EDI_FWB WHERE AWB_NO = #awbNo# AND AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY')
		AND TR_NO = (SELECT MAX(TR_NO) FROM EDI_FWB WHERE AWB_NO = #awbNo# AND AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY'))
	</select>
	<select id="validateAWBOriginDestinationFFM" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">		
		SELECT DISTINCT ORG AS ORIG, DEST AS DEST,TR_NO FROM EDI_FFM_SHP WHERE 
 		TR_NO = (SELECT MAX(EDI_FFM_SHP.TR_NO) FROM EDI_FFM_MSG,EDI_FFM_SHP WHERE EDI_FFM_MSG.TR_NO = EDI_FFM_SHP.TR_NO 
		AND EDI_FFM_SHP.AWB_NO = #awbNo# AND EDI_FFM_SHP.AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY') AND EDI_FFM_MSG.FFM_STATUS = 'P')
    	AND AWB_NO = #awbNo# AND AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY')
	</select>
	<select id="fetchAWBPmanPcs" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT PMAN_PCS FROM AWB WHERE AWB_NO = #AWB_NO# AND AWB_DATE = TO_DATE(#AWB_DATE#,'DDMONYY')
	</select>
	
	<select id="fetchAWBCarrier_fwb" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT CARR_CODE FROM AWB awb
		join mast_carrier mc on mc.code = awb.CARR_CODE  
		WHERE AWB_NO = #AWB_NO# AND AWB_DATE = TO_DATE(#AWB_DATE#,'DDMONYY')
		AND NVL(VESSEL_FLT_YN,'N') = 'N'
 	</select>
 	
 	<select id="fetchAWBCarrier" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT CARR_CODE FROM AWB WHERE AWB_NO = #AWB_NO# AND AWB_DATE = TO_DATE(#AWB_DATE#,'DDMONYY')
	</select>

	<select id="checkFWBOthParticipantExists" parameterClass="cargo.cms.common.ext.bo.FWBOtherParticipantBO" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM EDI_FWB_OTH_PARTICIPANT WHERE TR_NO = #trNo# 
		AND OPI_NAME = #opiName# AND OPI_APT_CODE = #opiAptCode# AND OPI_OFFICE_DESI = #opiOfficeDesi# AND OPI_COMP_DESI = #opiCompDesi# AND OPI_FILE_REF = #opiFileRef#		
	</select>
	<select id="fetchCurrencyCodeFromFWB" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT CVD_ISO_CURR_CODE FROM EDI_FWB WHERE AWB_NO = #awbNo# AND AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') AND TR_NO = 
		(SELECT MAX(TR_NO) FROM EDI_FWB WHERE AWB_NO = #awbNo# AND AWB_DATE = TO_DATE(#awbDate#,'DDMONYY'))
	</select>
	<select id="fetchAwbOrigDest" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT ORIG, DEST FROM AWB WHERE AWB_NO = #awbNo# AND AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
	</select>
	<select id="fetchFHLManuallyUnFreezed" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT AUTO_FRZ_YN FROM START_PREP_DTL WHERE MSG_TYPE = 'FHL' AND AWB_NO = #awbNo# AND AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
	</select>
	<select id="fetchFFMShpSHC" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT DISTINCT SPL_CODE FROM (
    SELECT SPL_CODE1 AS SPL_CODE FROM EDI_FFM_MSG MSG, EDI_FFM_SHP SHP WHERE MSG.TR_NO = SHP.TR_NO AND AWB_NO = #awbNo# AND AWB_DATE =   	TO_DATE(#awbDate#, 'DDMONYY')
		AND SPL_CODE1 IS NOT NULL AND MSG.FFM_STATUS = 'P'
		UNION ALL
    SELECT SPL_CODE2 AS SPL_CODE FROM EDI_FFM_MSG MSG, EDI_FFM_SHP SHP WHERE MSG.TR_NO = SHP.TR_NO AND AWB_NO = #awbNo# AND AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY')
		AND SPL_CODE2 IS NOT NULL AND MSG.FFM_STATUS = 'P'
    UNION ALL
    SELECT SPL_CODE3 AS SPL_CODE FROM EDI_FFM_MSG MSG, EDI_FFM_SHP SHP WHERE MSG.TR_NO = SHP.TR_NO AND AWB_NO = #awbNo# AND AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY')
		AND SPL_CODE3 IS NOT NULL AND MSG.FFM_STATUS = 'P'
    UNION ALL
    SELECT SPL_CODE4 AS SPL_CODE FROM EDI_FFM_MSG MSG, EDI_FFM_SHP SHP WHERE MSG.TR_NO = SHP.TR_NO AND AWB_NO = #awbNo# AND AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY')
		AND SPL_CODE4 IS NOT NULL AND MSG.FFM_STATUS = 'P'
    UNION ALL
    SELECT SPL_CODE5 AS SPL_CODE FROM EDI_FFM_MSG MSG, EDI_FFM_SHP SHP WHERE MSG.TR_NO = SHP.TR_NO AND AWB_NO = #awbNo# AND AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY')
		AND SPL_CODE5 IS NOT NULL AND MSG.FFM_STATUS = 'P'
    UNION ALL
    SELECT SPL_CODE6 AS SPL_CODE FROM EDI_FFM_MSG MSG, EDI_FFM_SHP SHP WHERE MSG.TR_NO = SHP.TR_NO AND AWB_NO = #awbNo# AND AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY')
		AND SPL_CODE6 IS NOT NULL AND MSG.FFM_STATUS = 'P'
    UNION ALL
    SELECT SPL_CODE7 AS SPL_CODE FROM EDI_FFM_MSG MSG, EDI_FFM_SHP SHP WHERE MSG.TR_NO = SHP.TR_NO AND AWB_NO = #awbNo# AND AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY')
		AND SPL_CODE7 IS NOT NULL AND MSG.FFM_STATUS = 'P'
    UNION ALL
    SELECT SPL_CODE8 AS SPL_CODE FROM EDI_FFM_MSG MSG, EDI_FFM_SHP SHP WHERE MSG.TR_NO = SHP.TR_NO AND AWB_NO = #awbNo# AND AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY')
		AND SPL_CODE8 IS NOT NULL AND MSG.FFM_STATUS = 'P'
    UNION ALL
    SELECT SPL_CODE9 AS SPL_CODE FROM EDI_FFM_MSG MSG, EDI_FFM_SHP SHP WHERE MSG.TR_NO = SHP.TR_NO AND AWB_NO = #awbNo# AND AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY')
		AND SPL_CODE9 IS NOT NULL AND MSG.FFM_STATUS = 'P')
	</select>
	<update id="updateFFMShpSHC" parameterClass="java.util.HashMap">
		UPDATE AWB SET SPL_CODE1=#SPL_CODE1#, SPL_CODE2=#SPL_CODE2#, SPL_CODE3=#SPL_CODE3#, SPL_CODE4=#SPL_CODE4#, SPL_CODE5=#SPL_CODE5#, 
		SPL_CODE6=#SPL_CODE6#, SPL_CODE7=#SPL_CODE7#, SPL_CODE8=#SPL_CODE8#,SPL_CODE9=#SPL_CODE9#,TR_TYPE=NULL WHERE AWB_NO = #awbNo# AND AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY')		
	</update>
	<select id="sqlFetchFWBCount" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM EDI_FWB WHERE AWB_NO = #awbNo# AND AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') AND TR_NO = 
		(SELECT MAX(TR_NO) FROM EDI_FWB WHERE AWB_NO = #awbNo# AND AWB_DATE = TO_DATE(#awbDate#,'DDMONYY'))
	</select> 
	<select id="fetchCatalogBasedOnAcceptMode" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select catalog AS CATALOG,awb_type AS AWBTYPE from awb where accept_mode in ('LIT','TIT','LDM') and awb_no = #awbNo# and awb_date = to_date(#awbDate#,'DDMONYY') and rownum = 1
	</select>
	<update id="updateCatalogBasedOnAcceptMode" parameterClass="java.util.HashMap">
		update awb set catalog = #catalog#, awb_type = nvl(#awbType#,awb_type) where accept_mode in ('LIT','TIT','LDM') and awb_no = #awbNo# and awb_date = to_date(#awbDate#,'DDMONYY')
	</update>
	
         <!-- ULD_KEY IN (SELECT ULD_KEY FROM ULD_INVENTORY WHERE BASE_PLT = #uldKey#) -->
	<update id="updateLocCodeToBasePlt" parameterClass="java.util.HashMap">
		UPDATE ULD_INVENTORY SET LOC_CODE = #locCode#, TR_TYPE = 'MHCS' WHERE ULD_KEY = #uldKey# OR BASE_PLT = #uldKey#
	</update>

	<update id="updateAwbInventoryLocByLsp" parameterClass="java.util.HashMap">
	UPDATE AWB_INVENTORY
			SET LOC_CODE 		= #locCode#,				
				LM_USER_ID 		= 'MHCS',
				LM_DATE			= SYSDATE,
				REF_AWB_EVENT = 'MHCS'
			WHERE LSP_NO = #binNo#
			AND (LOC_CODE != #locCode#)
	</update>
		<update id="updateAwbInventoryLocByUld" parameterClass="java.util.HashMap">		
			UPDATE AWB_INVENTORY
			SET LOC_CODE 		= #locCode#,				
				LM_USER_ID 		= 'MHCS',
				LM_DATE			= SYSDATE,
				REF_AWB_EVENT = 'MHCS'
			WHERE ULD_KEY = #uldKey#
			AND (LOC_CODE != #locCode#)
	</update>
	<select id="fetchULDEntryIdentificationMessageReceived" parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT NVL(ULDENTRY_MSG_RCVD_YN, 'N') FROM ULD_INVENTORY WHERE ULD_KEY = #uldKey# AND ROWNUM = 1
	</select>	
	<select id="isLocationInMHS" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM MAST_WH_LOC,MAST_WH_GROUP WHERE MAST_WH_LOC.WH_GROUP = MAST_WH_GROUP.WH_GROUP AND MAST_WH_GROUP.WH_TYPE = 'MHS' AND
		MAST_WH_LOC.CODE = #location#
	</select>
	<select id="fetchBINEntryIdentificationMessageReceived" parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT NVL(BINENTRY_MSG_RCVD_YN, 'N') FROM LSP_INVENTORY WHERE LSP_NO = #binNo# AND ROWNUM = 1
	</select>
	
	<select id="sqlLSPInventoryRefNetWt" parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT REF_NET_WT FROM LSP_INVENTORY WHERE LSP_NO = #binNo#
	</select>
	
	<select id="sqlULDInventoryRefNetWt" parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT REF_NET_WT FROM ULD_INVENTORY WHERE ULD_KEY = #uldKey#
	</select>
	
	<select id="getAWBCountofULD" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		select count(1) from (select count(1) from AWB_INVENTORY where uld_key = #uldKey# group by awb_no,awb_date)
	</select>
	
	<select id="getAWBCountofCSD" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		select count(1) from (select count(1) from AWB_INVENTORY where LSP_NO = #lspNo# group by awb_no,awb_date)
	</select>
	
	
	<select id="sqlInventoryWtForAWB" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT sum(locn_wt)FROM AWB_INVENTORY WHERE awb_no = #AWB_NO# and awb_date = to_date(#AWB_DATE#,'DDMONYY') AND (ULD_KEY = #ULD# OR LSP_NO = #LSP#)
	</select>
	
	<insert id="insertInvSnapShotHD" parameterClass="java.util.HashMap">
		INSERT INTO AWB_INV_SNAPSHOT_HD (TR_NO ,ULD_DEVICE, REF_NET_WT, MSG_TYPE , CR_USER_ID , CR_DATE , LM_USER_ID , LM_DATE )
  				VALUES (#TR_NO#,#ULDDEVICE#,#REF_NET_WT#,#MSG_TYPE#,#CR_USER_ID#,SYSDATE,#CR_USER_ID#,SYSDATE)
	</insert>
	
	<insert id="insertInvSnapShotDtl" parameterClass="java.util.HashMap">
		INSERT INTO AWB_INV_SNAPSHOT_DTL (SEQ_NO, TR_NO , ULD_KEY, LSP_NO , AWB_NO , AWB_DATE, LOC_CODE , LOCN_PCS , LOCN_WT, CR_USER_ID, CR_DATE , LM_USER_ID, LM_DATE) 
 		 (SELECT AWB_INV_SNAPSHOT_DTL_PK_SEQ.NEXTVAL , #TR_NO#,ULD_KEY, LSP_NO , AWB_NO , AWB_DATE, LOC_CODE , LOCN_PCS , LOCN_WT,#CR_USER_ID#,SYSDATE,#CR_USER_ID#,SYSDATE FROM AWB_INVENTORY WHERE (ULD_KEY = #ULDDEVICE# OR LSP_NO = #ULDDEVICE#))
	</insert>
	
	<update id="resetLSPRefNetWEight" parameterClass="java.lang.String">		
			UPDATE LSP_INVENTORY SET REF_NET_WT = '', LM_USER_ID = 'MHCS', LM_DATE = SYSDATE,TR_TYPE='RNWCL' WHERE LSP_NO = #LSP_NO#
	</update>

<update id="resetLSPRefNetWEightwithuser" parameterClass="map">		
			UPDATE LSP_INVENTORY SET REF_NET_WT = '', LM_USER_ID = NVL(#userID#,'MHCS'), LM_DATE = SYSDATE,TR_TYPE='RNWCL' WHERE LSP_NO = #uldKeyDevice#
	</update>
	
	<delete id="clearLSPInventorySnapShot" parameterClass="java.lang.String">
		delete from AWB_INV_SNAPSHOT_HD WHERE ULD_DEVICE = #LSP_NO#
	</delete>
	
	<update id="resetULDRefNetWEight" parameterClass="java.lang.String">		
			UPDATE ULD_INVENTORY SET REF_NET_WT = '',TOPUP_YN='N',REBUILD_YN='N', LM_USER_ID = 'MHCS', LM_DATE = SYSDATE,TR_TYPE='RNWCU' WHERE ULD_KEY = #ULD_KEY#
	</update>
	
	<update id="resetULDRefNetWEightwithuser" parameterClass="map">		
			UPDATE ULD_INVENTORY SET REF_NET_WT = '', LM_USER_ID = NVL(#userID#,'MHCS'), LM_DATE = SYSDATE,TR_TYPE='RNWCU' WHERE ULD_KEY = #uldKeyDevice#
	</update>
	
	<delete id="clearULDInventorySnapShot" parameterClass="java.lang.String">
		delete from AWB_INV_SNAPSHOT_HD WHERE ULD_DEVICE = #ULD_KEY#
	</delete>
	
	<select id="uldInCPCTInventory" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM ULD_INVENTORY WHERE (OWNED_INV = 'Y' OR ASV_INV = 'Y') AND ULD_KEY = #uldKey#
	</select>
	<select id="sqlCheckDDTFinalized" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		select count(1) from v_ddt_dtl where flt_key = #flightKey# and flt_date = to_date(#flightDate#,'DDMONYY') and awb_no = #awbNo# and awb_date = to_date(#awbDate#,'DDMONYY')
	</select>		
	
	<select id="chkFwbExportAwb" parameterClass="cargo.cms.common.ext.bo.EDIOutboundMsgLogBO" resultClass="java.lang.String">	
		select count(1) from EXP_CAR where awb_no = #awbNo# and awb_date = to_date(#awbDt#,'DDMONYY') 
    </select>
        
    <select id="chkFwbImportAwb" parameterClass="cargo.cms.common.ext.bo.EDIOutboundMsgLogBO" resultClass="java.lang.String">
    	select count(1) from imp_car_awb where awb_no = #awbNo# and awb_date = to_date(#awbDt#,'DDMONYY')	
    </select>
    <select id="sqlCheckDDTFinalizedForAWB" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		select stragg(stringdelim(awb_no, ',')) from v_ddt_dtl where flt_key = #flightKey# and flt_date = to_date(#flightDate#,'DDMONYY')
	</select>
	<update id="sqlUpdateFltOprFFMInd" parameterClass="java.util.HashMap">
		UPDATE FLT_OPR_EVENTS SET FFM_IND = #ffmInd# WHERE FLT_KEY = #flightKey# AND SCH_DATE = TO_DATE(#flightDate#,'DDMONYY') AND FLT_TYPE = 'A'
	</update>
	<select id="sqlCheckDDTFinalizedForListOfAWB" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		select STRAGG(STRINGDELIM(awb_no, ',')) from v_ddt_dtl where flt_key = #flightKey# and flt_date = to_date(#flightDate#,'DDMONYY') and awb_no in 
		 <iterate open="(" close=")" conjunction="," property="arlAWB">
		     #arlAWB[]#   
		 </iterate>
	</select>
	<select id="sqlFetchGMTTimeDiff" parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT NVL(TIM_GMT_DIF, 0) FROM MAST_CITY WHERE CODE = #origin#
	</select>
	<select id="sqlFetchHandOverArea" parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT WH_GROUP FROM MAST_WH_GROUP WHERE (WH_GROUP = (SELECT WH_GROUP FROM MAST_WH_LOC WHERE CODE = #area#) OR WH_GROUP = #area#)
	</select>
	<select id="sqlFetchURFNo" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT EIR_NO AS URF_NO, PURPOSE FROM ULD_ISS_HD WHERE  URF_FLT_KEY = #flightKey# AND URF_FLT_DATE = TO_DATE(#flightDate#,'DDMONYY')
	</select>
	<select id="sqlValidateFlight" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM FLT_OPR_LEG WHERE FLT_KEY = #flightKey# AND SCH_DATE = TO_DATE(#flightDate#,'DDMONYY')
	</select>
	<select id="sqlFetchCPMFlightDate" parameterClass="java.util.HashMap" resultClass="java.lang.String">		
		<!-- SELECT TO_CHAR(SCH_ARR_DATE,'MM/DD/YYYY') FROM FLT_OPR_LEG WHERE TR_NO = 
		(SELECT TR_NO FROM FLT_OPR_LEG WHERE FLT_KEY = #flightKey# AND 
		TRUNC(TO_DATE(TO_CHAR(SCH_DEP_DATE,'DDMONYY')||LPAD(SCH_DEP_TIME,4,0),'DDMONYYHH24MI') - (GET_TIME_GMT_DIFF(#boardingPoint#))/24) = 
		TO_DATE(#flightDate#,'MM/DD/YYYY') AND BRD_POINT = #boardingPoint# AND FLT_TYPE = 'A')
		AND OFF_POINT = 'HKG' -->
		SELECT TO_CHAR(SCH_DATE,'MM/DD/YYYY') FROM FLT_OPR_LEG WHERE TR_NO IN 
			(SELECT TR_NO FROM FLT_OPR_LEG WHERE FLT_KEY = #flightKey# AND TRUNC(TO_DATE(TO_CHAR(SCH_DEP_DATE,'DDMONYY')||LPAD(SCH_DEP_TIME,4,0),'DDMONYYHH24MI') -
			(GET_TIME_GMT_DIFF(BRD_POINT))/24) = TO_DATE(#flightDate#, 'MM/DD/YYYY') AND LEG_ORD=1 AND FLT_TYPE = 'A')
        AND BRD_POINT = #boardingPoint#		
	</select>
	<select id="sqlFetchCPMFlightDateCount" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">		
		
		SELECT count(1) FROM FLT_OPR_LEG WHERE TR_NO IN 
			(SELECT TR_NO FROM FLT_OPR_LEG WHERE FLT_KEY = #flightKey# AND TRUNC(TO_DATE(TO_CHAR(SCH_DEP_DATE,'DDMONYY')||LPAD(SCH_DEP_TIME,4,0),'DDMONYYHH24MI') -
			(GET_TIME_GMT_DIFF(BRD_POINT))/24) = TO_DATE(#flightDate#, 'MM/DD/YYYY') AND LEG_ORD=1 AND FLT_TYPE = 'A')
        AND BRD_POINT = #boardingPoint#		
	</select>
	<!-- FFM Data Concurrency Issue Resolving Queries Added on 22MAY2012 By Varadaraj Muni -->
	<insert id="sqlInsertEdiFFMMsgLock" parameterClass="cargo.cms.edi.ei.bo.FFMMsgBO">
		INSERT INTO EDI_FFM_MSG_LOCK(FLT_KEY,FLT_DATE,BRD_POINT,VER_NO) VALUES(#flightKey#, TO_DATE(#flightDate#,'MM/DD/YYYY'),#loadingPoint#,0)
	</insert>
	<select id="sqlSelectEdiFFMMsgLockForUpdate" parameterClass="cargo.cms.edi.ei.bo.FFMMsgBO" resultClass="java.util.HashMap">
		SELECT FLT_KEY, FLT_DATE, BRD_POINT,VER_NO FROM EDI_FFM_MSG_LOCK WHERE FLT_KEY = #flightKey# AND FLT_DATE = TO_DATE(#flightDate#,'MM/DD/YYYY') AND BRD_POINT = #loadingPoint#
		FOR UPDATE OF VER_NO
	</select>
	<update id="sqlUpdateEdiFFMMsgLock" parameterClass="cargo.cms.edi.ei.bo.FFMMsgBO">
		UPDATE EDI_FFM_MSG_LOCK SET VER_NO = (VER_NO + 1) WHERE FLT_KEY = #flightKey# AND FLT_DATE = TO_DATE(#flightDate#,'MM/DD/YYYY') AND BRD_POINT = #loadingPoint#
	</update>
	<!-- End -->
	<!-- FHL Data Concurrency Issue Resolving Queries Added on 28MAY2012 By Varadaraj Muni -->
	<insert id="sqlInsertEdiFHLLock" parameterClass="cargo.cms.edi.ei.bo.FHLBO">
		INSERT INTO EDI_FHL_LOCK(AWB_NO,AWB_DATE,VER_NO) VALUES(#awbNo#, TO_DATE(#awbDate#,'DDMONYY'),1)
	</insert>
	<select id="sqlSelectEdiFHLLockForUpdate" parameterClass="cargo.cms.edi.ei.bo.FHLBO" resultClass="java.util.HashMap">
		SELECT AWB_NO, AWB_DATE, VER_NO FROM EDI_FHL_LOCK WHERE AWB_NO = #awbNo# AND AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
		FOR UPDATE OF VER_NO
	</select>
	<update id="sqlUpdateEdiFHLLock" parameterClass="cargo.cms.edi.ei.bo.FHLBO">
		UPDATE EDI_FHL_LOCK SET VER_NO = (VER_NO + 1) WHERE AWB_NO = #awbNo# AND AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
	</update>
	<!-- End -->
	<!-- FHL Data Concurrency Issue Resolving Queries Added on 28MAY2012 By Varadaraj Muni -->
	<insert id="sqlInsertEdiFWBLock" parameterClass="cargo.cms.edi.ei.bo.FWBDetailBO">
		INSERT INTO EDI_FWB_LOCK(AWB_NO,AWB_DATE,VER_NO) VALUES(#awbNo#, TO_DATE(#awbDate#,'DDMONYY'),1)
	</insert>
	<select id="sqlSelectEdiFWBLockForUpdate" parameterClass="cargo.cms.edi.ei.bo.FWBDetailBO" resultClass="java.util.HashMap">
		SELECT AWB_NO, AWB_DATE, VER_NO FROM EDI_FWB_LOCK WHERE AWB_NO = #awbNo# AND AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
		FOR UPDATE OF VER_NO
	</select>
	<update id="sqlUpdateEdiFWBLock" parameterClass="cargo.cms.edi.ei.bo.FWBDetailBO">
		UPDATE EDI_FWB_LOCK SET VER_NO = (VER_NO + 1) WHERE AWB_NO = #awbNo# AND AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
	</update>
	<select id="getMainAWBRmk" parameterClass="java.util.HashMap" resultClass="java.lang.String">
	select rmk from awb_rmk where awb_no=#awbNo#
	</select>
	<update id="updateMainAWBRmk" parameterClass="java.util.HashMap">
	update awb set airln_rmk=#remark# where awb_no=#awbNo#
	</update>
	<delete id="deleteMainAWBRmk" parameterClass="java.util.HashMap">
		delete from awb_rmk where awb_no=#awbNo#
	</delete>
	<!-- End -->
	<select id="sqlFetchFlightDetailsFHLSystemFreeze" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT DISTINCT FFM.FLT_KEY AS FLT_KEY,TO_CHAR(FFM.FLT_DATE,'DDMONYY') AS FLT_DATE  FROM EDI_FFM_MSG FFM, EDI_FFM_SHP SHP, FLT_OPR OPR
		WHERE FFM.TR_NO = SHP.TR_NO AND FFM.FLT_KEY = OPR.FLT_KEY AND FFM.FLT_DATE = OPR.SCH_DATE AND
		SYSDATE >  (TO_DATE(TO_CHAR(SCH_DATE,'DDMONYY')||LPAD(SCH_TIME,4,0),'DDMONYYHH24MI') - (SELECT RULE_VALUE FROM CMSRULES WHERE RULE_CODE = 'FHL_FREEZE_HRS')/24) AND
		SHP.AWB_NO = #awbNo# AND FFM.FFM_STATUS = 'P' AND OPR.FLT_TYPE = 'A' AND SHP.AWB_DATE = PKG_IMP.FUN_GET_AWBDATE_EXISTING(SHP.AWB_NO,'')
	</select>
	<update id="updateStartPrepFHLFreeze" parameterClass="java.util.HashMap">
		UPDATE START_PREP SET FHL_FRZ_DATE = SYSDATE, FHL_FRZ_USER_ID = 'SYSUSER', TR_TYPE = 'FHLUF',FHL_FRZ_IND='Y' WHERE 
		FLT_KEY = #FLT_KEY# AND FLT_DATE = TO_DATE(#FLT_DATE#,'DDMONYY') AND MSG_TYPE = 'FHL'
	</update>
	<insert id="insertStartPrepFHLFreeze" parameterClass="java.util.HashMap">
		INSERT INTO START_PREP(FLT_KEY,FLT_DATE,FHL_FRZ_DATE,FHL_FRZ_USER_ID,CR_DATE,CR_USER_ID,LM_USER_ID,LM_DATE, MSG_TYPE, FHL_FRZ_IND,TR_TYPE)
		VALUES(#FLT_KEY#,TO_DATE(#FLT_DATE#,'DDMONYY'),SYSDATE,'SYSUSER',SYSDATE,'SYSUSER','SYSUSER',SYSDATE,'FHL','Y','FHLFR')
	</insert>
	<select id="sqlFetchTargetFlag" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT
  			CASE WHEN (SELECT COUNT(1) FROM MAST_WH_LOC, MAST_WH_GROUP, MAST_WH_AREA WHERE MAST_WH_LOC.WH_GROUP = MAST_WH_GROUP.WH_GROUP AND 
  						MAST_WH_GROUP.WH_AREA = MAST_WH_AREA.WH_AREA AND MAST_WH_LOC.CODE = #locCode# AND MAST_WH_AREA.WH_AREA = #target#) > 0
  			THEN  
      			'Y'
  			ELSE
    			CASE WHEN (SELECT COUNT(1) FROM MAST_WH_LOC, MAST_WH_GROUP WHERE MAST_WH_LOC.WH_GROUP = MAST_WH_GROUP.WH_GROUP 
          					AND MAST_WH_LOC.CODE = #locCode# AND MAST_WH_GROUP.WH_GROUP = #target#) > 0
    			THEN  
      				'Y'
    			ELSE 
      				'N'
    			END
  			END AS UPDTARGETFLG
		FROM DUAL
	</select>
	<select id="sqlValidateCreateAWBDate" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT PKG_IMP.FUN_GET_AWBDATE_CREATE(#awbNo#, #fltKey#, #fltDate#, 'Y') FROM DUAL
	</select>

	<select id="sqlValidateCreateAWBDateTrk" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT PKG_IMP.FUN_GET_TRK_AWBDATE_CREATE(#awbNo#, #fltKey#, #fltDate#, 'Y') FROM DUAL
	</select>


	<select id="sqlFetchAwbTypeBasedOnPmanPcsForTranshipment" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT AWB_TYPE AS awbType FROM AWB WHERE AWB_NO = #awbNo# AND AWB_DATE = PKG_COMMON.GET_AWB_DATE(#awbNo#,'') AND AWB_TYPE = 'T' AND PMAN_PCS > 0
	</select>
	
	<select id="sqlFetchExportAwbTypeBasedOnPmanPcs" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT AWB_TYPE AS awbType FROM AWB WHERE AWB_NO = #awbNo# AND AWB_DATE = PKG_COMMON.GET_AWB_DATE(#awbNo#,'') AND AWB_TYPE = 'E' AND PMAN_PCS > 0
	</select>
	<select id="sqlFetchExportAwbTypeBasedOnRclPcs" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT AWB_TYPE AS awbType FROM AWB WHERE AWB_NO = #awbNo# AND AWB_DATE = PKG_COMMON.GET_AWB_DATE(#awbNo#,'') AND AWB_TYPE = 'E' AND (rcl_pcs- rtn_pcs) > 0
	</select>
	
	<select id="sqlFetchAcceptModeforExportAwbType" parameterClass="java.lang.String" resultClass="java.lang.String">
		select accept_mode from awb where awb_no=#PARAM# AND AWB_DATE = PKG_COMMON.GET_AWB_DATE(#PARAM#,'')
	</select>
	
	
	<parameterMap id="hParam" class="map">
		<parameter property="bl" jdbcType="VARCHAR" javaType="java.lang.String"	mode="OUT"/>
		<parameter property="carrCode" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" />
	 	<parameter property="awbNo" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>  
	 	<parameter property="scrType" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/> 
	</parameterMap>
	<procedure id="checkAwbOwnerGen" parameterMap="hParam">
		{? = call pkg_common.check_AWBOwner(?,?,?)}
	</procedure>
	<select id="sqlFetchCountForBUPShc" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM V_IMP_FLT_ULD_SHC WHERE FLT_KEY = #flightKey# AND FLT_DATE = TO_DATE(#flightDate#, 'DDMONYY') AND ULD_KEY = #uldKey# AND SHC = 'BUP'
	</select>
	<update id="sqlUpdateHandlingModeForULDList" parameterClass="java.util.HashMap">
		UPDATE IMP_ULD_LIST SET HANDLING_MODE = 'PPK' WHERE FLT_KEY = #flightKey# AND FLT_DATE = TO_DATE(#flightDate#, 'DDMONYY') AND ULD_KEY = #uldKey#
	</update>
	<select id="sqlFetchMastSitaPrtList" resultClass="cargo.cms.afw.bo.MasterBO">
		SELECT CODE AS codeId, CODE_DESC AS codeDesc, PRINTER_NAME AS param1, PRINTER_TYPE AS param2 FROM MAST_SITA_MSG_PRINTER ORDER BY CODE
	</select>
	<select id="sqlFetchFlightMessageLogVersionNumber" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		SELECT VER_NO FROM EDI_FLIGHT_MSG_LOG_VER_NO WHERE MSG_TYPE = #msgType# AND FLT_KEY = #fltKey# AND FLT_DATE = TO_DATE(#fltDate#,'DDMONYY')		
	</select>
	<update id="sqlUpdateFlightMessageLogVersionNumber" parameterClass="java.util.HashMap">
		UPDATE EDI_FLIGHT_MSG_LOG_VER_NO SET VER_NO = (VER_NO + 1) WHERE MSG_TYPE = #msgType# AND FLT_KEY = #fltKey# AND FLT_DATE = TO_DATE(#fltDate#,'DDMONYY')
			
	</update>
	<insert id="sqlInsertFlightMessageLogVersionNumber" parameterClass="java.util.HashMap">
		INSERT INTO EDI_FLIGHT_MSG_LOG_VER_NO(MSG_TYPE, FLT_KEY, FLT_DATE, VER_NO) VALUES(#msgType#, #fltKey#, TO_DATE(#fltDate#,'DDMONYY'), 1)
	</insert>
	<select id="sqlFetchAwbMessageLogVersionNumber" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		SELECT VER_NO FROM EDI_AWB_MSG_LOG_VER_NO WHERE MSG_TYPE = #msgType# AND AWB_NO = #awbNo# and ROWNUM = 1
	</select>
	<update id="sqlUpdateAwbMessageLogVersionNumber" parameterClass="java.util.HashMap">
		UPDATE EDI_AWB_MSG_LOG_VER_NO SET VER_NO = (VER_NO + 1) WHERE MSG_TYPE = #msgType# AND AWB_NO = #awbNo#
			
	</update>
	<insert id="sqlInsertAwbMessageLogVersionNumber" parameterClass="java.util.HashMap">
		INSERT INTO EDI_AWB_MSG_LOG_VER_NO(MSG_TYPE, AWB_NO, VER_NO) VALUES(#msgType#, #awbNo#, 1)
	</insert>
	<select id="checkExportDocReceivedForGLS" parameterClass="java.util.HashMap" resultClass="java.lang.Integer" >
		select count(1) from exp_doc_recd a,awb b where a.awb_no = b.awb_no and a.awb_date = b.awb_date
		and b.awb_type = 'E' and b.awb_closed_yn='N' and b.awb_no = #AWB_NO# and a.AWB_FRZ_YN='Y' and GLS_YN = 'Y'
	</select>
	<select id="sqlFetchURFPurpose" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT PURPOSE FROM ULD_ISS_HD WHERE URF_FLT_KEY = #FLT_KEY# AND URF_FLT_DATE = TO_DATE(#FLT_DATE#,'DDMONYY')
	</select>
	<select id="sqlFetchFFMProcessedCount" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM(
			SELECT DISTINCT EDI_FFM_MSG.FLT_KEY, EDI_FFM_MSG.FLT_DATE, EDI_FFM_SHP.AWB_NO FROM EDI_FFM_MSG, EDI_FFM_SHP WHERE 
			EDI_FFM_MSG.FFM_STATUS IN ('P','CONT') AND EDI_FFM_MSG.TR_NO = EDI_FFM_SHP.TR_NO AND EDI_FFM_SHP.AWB_NO = #awbNo#)
	</select>
	<update id="sqlUpdateAWBCarrierFromFFM" parameterClass="java.util.HashMap">
		UPDATE AWB SET CARR_CODE = #carrCode# WHERE AWB_NO = #awbNo# AND AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY')
	</update>
	<update id="sqlUpdateExpCarAWBCarrierFromFFM" parameterClass="java.util.HashMap">
		UPDATE EXP_CAR SET CARR_CODE = #carrCode# WHERE AWB_NO = #awbNo# AND AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY')
	</update>
	<select id="sqlFetchAwbPcsWtFromFFM" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT PCS, WT FROM AWB WHERE AWB_NO = #awbNo# AND AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY')
	</select>
	<select id="sqlFetchImpCarShpCount" parameterClass="java.util.HashMap" resultClass="java.lang.Integer" >
		SELECT COUNT(1) FROM IMP_CAR_SHP WHERE AWB_NO=#awbNo# AND AWB_DATE=TO_DATE(#awbDate#, 'DDMONYY') AND ( (NVL(car_created,'N') = 'Y' AND ( NVL(MANIFEST_PCS,0) > 0 OR NVL(RECD_PCS,0) > 0 ) ) OR NVL(FFM_FLG,'N') = 'Y' )
	</select>
	
	<select id="checkImpCarFFMRecv" parameterClass="java.util.HashMap" resultClass="java.lang.Integer" >
		SELECT COUNT(1) FROM IMP_CAR_SHP WHERE AWB_NO=#awbNo# AND AWB_DATE=TO_DATE(#awbDate#, 'DDMONYY') AND ( (NVL(car_created,'N') = 'Y' AND ( NVL(MANIFEST_PCS,0) > 0 OR NVL(RECD_PCS,0) > 0 ) ) OR NVL(FFM_FLG,'N') = 'Y' )
	</select>
	
	<select id="sqlFetchMastCarrierGroupCodes" parameterClass="java.lang.Object" resultClass="java.lang.String">
		SELECT STRAGG(STRINGDELIM(MAST_CODE_DTL.CODE, ',')) AS CUBIC_RECIPIENT_ADDRESS FROM MAST_CODE_HD, MAST_CODE_DTL WHERE MAST_CODE_HD.CODE = MAST_CODE_DTL.CODE_TYPE 
		AND MAST_CODE_HD.CODE = 'MAST_CUBIC_ADDRESS'
	</select>
        <select id="sqlFetchMastCarrierGroupCodes_GLS" parameterClass="java.lang.Object" resultClass="java.lang.String">
		SELECT STRAGG(STRINGDELIM(MAST_CODE_DTL.CODE, ',')) AS CUBIC_RECIPIENT_ADDRESS FROM MAST_CODE_HD, MAST_CODE_DTL WHERE MAST_CODE_HD.CODE = MAST_CODE_DTL.CODE_TYPE 
		AND MAST_CODE_HD.CODE = 'MAST_GLS_ADDRESS'
	</select>

        <select id="getGLSRecipientAddressesEAWB" parameterClass="java.lang.Object" resultClass="java.lang.String">
		SELECT STRAGG(STRINGDELIM(MAST_CODE_DTL.CODE, ',')) AS CUBIC_RECIPIENT_ADDRESS FROM MAST_CODE_HD, MAST_CODE_DTL WHERE MAST_CODE_HD.CODE = MAST_CODE_DTL.CODE_TYPE 
		AND MAST_CODE_HD.CODE = 'MAST_GLS_EAWB_ADDR'
	</select>
	
	<select id="getGLSRecipientAddressesCSS" parameterClass="java.lang.Object" resultClass="java.lang.String">
		SELECT STRAGG(STRINGDELIM(MAST_CODE_DTL.CODE, ',')) AS CUBIC_RECIPIENT_ADDRESS FROM MAST_CODE_HD, MAST_CODE_DTL WHERE MAST_CODE_HD.CODE = MAST_CODE_DTL.CODE_TYPE 
		AND MAST_CODE_HD.CODE = 'MAST_GLS_CCS_ADDR'
	</select>


	<select id="sqlFetchHouseForIntellgentCheck" parameterClass="cargo.cms.admin.bo.IntelligentCheckProcessBO" resultClass="cargo.cms.admin.bo.IntelligentCheckProcessBO">
		SELECT B.HAWB_NO AS hawbNo,B.MANIFEST_DESC AS fhlContent,SHPR_NAME AS fhlShipper,CSGNE_NAME AS fhlConsignee FROM EDI_FHL A, EDI_FHL_HAWB B WHERE A.TR_NO=B.TR_NO 
       	AND A.AWB_NO = #awbNo# AND A.AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') 
	</select>
	<update id="sqlUpdateAWBOwnerCarrierCode" parameterClass="java.util.HashMap">
		UPDATE AWB_OWNER SET CARR_CODE = #carrCode# WHERE AWB_NO = #awbNo# AND AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY') AND CARR_CODE = #oldCarrierCode#
	
	</update>
	
	<select id="getMHCHMsgPlannedULD" resultClass="cargo.cms.ws.ei.bo.MHCSULDBo" >
		SELECT ULD_KEY uldKey, FLT_KEY fltKey, TO_CHAR(FLT_DATE,'DDMONYY') fltDate, 'Y' awbSwitch, 'Resource Planning' func, 'PLANNER' userID FROM IMP_ULD_LIST WHERE PLAN_UPDATED = 'Y'
	</select>
	
	<update id="updateMHCHMsgPlannedULD" parameterClass="cargo.cms.ws.ei.bo.MHCSULDBo">
		UPDATE IMP_ULD_LIST SET PLAN_UPDATED = 'N', LM_DATE = SYSDATE, LM_USER_ID = 'PLANNER' WHERE FLT_KEY = #fltKey# AND TO_CHAR(FLT_DATE,'DDMONYY') = #fltDate# AND ULD_KEY = #uldKey# AND PLAN_UPDATED = 'Y'
	</update>
	
	<update id="UPDATE_EDI_AWB_IMPORT" parameterClass="cargo.cms.edi.ei.bo.FWBDetailBO">
		UPDATE AWB SET		
		CAR_YN = NVL(CAR_YN, 'N'),
		MANIFEST_YN = NVL(MANIFEST_YN, 'N'),
		BLDUP_COMPL_YN = NVL(BLDUP_COMPL_YN, 'N'),
		AWB_CLOSED_YN = NVL(AWB_CLOSED_YN, 'N'),
		LOCKED_YN = NVL(LOCKED_YN, 'N'),
		MISSING_YN = NVL(MISSING_YN, 'N'),
		MANIFEST_PCS = NVL(MANIFEST_PCS, 0),
		MANIFEST_WT = NVL(MANIFEST_WT, 0),
		RTN_PCS = NVL(RTN_PCS, 0),
		RTN_WT = NVL(RTN_WT, 0),
		CATALOG = NVL(CATALOG, 'IG'),		
		ORIG = #origin#,
		DEST = #destination#,
		PCS = #totalPieces#,
		WT = #totalWeight#,
		CONTENT = NVL(CONTENT, NULL),
		SPL_CODE1 = #specialHandCode1#,
		SPL_CODE2 = #specialHandCode2#,
		SPL_CODE3 = #specialHandCode3#,
		SPL_CODE4 = #specialHandCode4#,
		SPL_CODE5 = #specialHandCode5#,
		SPL_CODE6 = #specialHandCode6#,
		SPL_CODE7 = #specialHandCode7#,
		SPL_CODE8 = #specialHandCode8#,
		LM_USER_ID = 'SYSUSER',
		LM_DATE = SYSDATE,
		ACCEPT_MODE = NVL(ACCEPT_MODE, 'LCA'),
		AGENT_NAME = NVL(AGENT_NAME, #agentName#),
		SHIPPER_NAME = NVL(SHIPPER_NAME, #shipperName#),		
		SPL_CODE9 = NVL(SPL_CODE9, #specialHandCode9#)
		WHERE AWB_NO = #awbNo# AND AWB_DATE = #awbDate# AND AWB_TYPE = 'I'		
	</update>
	<select id="sqlFetchAgentOrTruckerName" parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT CODE_DESC FROM CUST_COMPANY WHERE CODE = #param#
	</select>
	<!-- MHCS 921, 149, 119 message integration changes Start -->
	<update id="sqlUpdateULDWithDummyLocation" parameterClass="java.lang.String">
		 UPDATE ULD_INVENTORY SET LOC_CODE = #dummyLoc#,ULDENTRY_MSG_RCVD_YN='N',LM_DATE=SYSDATE,TR_TYPE='MHCS' WHERE 
    		ULD_KEY IN (SELECT U1.ULD_KEY
    			FROM ULD_INVENTORY U1 ,MAST_WH_LOC,MAST_WH_GROUP WHERE U1.LOC_CODE = MAST_WH_LOC.CODE AND 
    			MAST_WH_LOC.WH_GROUP = MAST_WH_GROUP.WH_GROUP AND MAST_WH_GROUP.WH_TYPE = 'MHS')
	</update>
	<update id="sqlUpdateBINWithDummyLocation" parameterClass="java.lang.String">
		 UPDATE LSP_INVENTORY SET LOC_CODE = #dummyLoc# WHERE 
    		LSP_NO IN (SELECT L1.LSP_NO
    			FROM LSP_INVENTORY L1 ,MAST_WH_LOC,MAST_WH_GROUP WHERE L1.LOC_CODE = MAST_WH_LOC.CODE AND 
    			MAST_WH_LOC.WH_GROUP = MAST_WH_GROUP.WH_GROUP AND MAST_WH_GROUP.WH_TYPE = 'MHS')
	</update>
	<insert id="sqlInsertPhyInvChkHd" parameterClass="java.util.HashMap">
		<![CDATA[
		INSERT INTO PHY_INV_CHECKING_HD
		(TR_NO,GRP_CODE,LOC_CODE,CHK_OPT,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE) 
		VALUES(INV_CHK_SEQ.NEXTVAL,'MHS',NULL,'All','MHCS',SYSDATE,'MHCS',SYSDATE)]]>
	</insert>
	<insert id="sqlInsertPhyInvChkDtl" parameterClass="java.util.HashMap">
		<![CDATA[
		INSERT INTO PHY_INV_CHECKING_DTL
		(TR_NO,DOC_LINE_NO,ULD_KEY,DISC_CODE,DISCR_YN,EIC_YN,DAM_YN,REMARKS,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE)
		VALUES(INV_CHK_SEQ.CURRVAL,#DOC_LINE_NO#,#ULD_KEY#,'INV_LOC_UPD','Y',#EIC_FLG#,#DAM_IND#,'No synchronization done as ULD not in CPCT Inventory','MHCS',SYSDATE,'MHCS',SYSDATE)]]>
	</insert>
	<select id="sqlFetchULDEICDAMDetails" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT NVL(EIC_FLG,'N') AS EIC_FLG,NVL(DAM_IND,'N') AS DAM_IND FROM ULD_INVENTORY WHERE ULD_KEY = #ULD_KEY# 
	</select>
	<!-- MHCS 921, 149, 119 message integration changes End -->
	
	<!-- COSAC Duplication Message AWB Event Creation :: Starts -->
	<select id="fetchCosacDupAwbEvntSeqNo" parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT SQ_IMP_CAR_SHP_TRA.NEXTVAL FROM DUAL
	</select>
	
	<insert id="createHisAwbEvntForCOSACDup" parameterClass="java.util.HashMap">
		INSERT INTO HIS_AWB_EVNT 
			(AWB_NO, AWB_DATE, COD_TRA_SEQ_NUM, COD_HIS_TYP, COD_FUNC, MODULE, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE)
		VALUES 
			(#awbNo#, TO_DATE(#awbDate#, 'DDMONYY'), #traSeqNo#, 'E', 'COSDUP', 'W', #userId#, SYSDATE, #userId#, SYSDATE)
	</insert>
	
	<insert id="createHisAwbEvntDtlForCOSACDup" parameterClass="java.util.HashMap">
		INSERT INTO HIS_AWB_EVNT_DTL 
			(AWB_NO, AWB_DATE, COD_TRA_SEQ_NUM, COD_SEQ_NUM, COD_ACT, COD_HIS_SEQ_NUM, DES_HIS_DTS, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE)
		VALUES 
			(#awbNo#, TO_DATE(#awbDate#, 'DDMONYY'), #traSeqNo#, SQ_IMP_CAR_SHP_HIS.NEXTVAL, 'A', '555', #desHisDtls#, #userId#, SYSDATE, #userId#, SYSDATE)
	</insert>
	
	<select id="getAwbDateForCosacDup"  parameterClass="java.util.HashMap" resultClass="java.lang.String">	
			SELECT NVL(PKG_COMMON.GET_AWB_DATE(#awbNo#, #awbType#), TRUNC(SYSDATE)) FROM DUAL 
	</select>
	<!-- COSAC Duplication Message AWB Event Creation :: Ends -->
	<!-- CPM Lock queries -->
	<insert id="sqlInsertCPMMsgLock" parameterClass="cargo.cms.edi.ei.bo.CPMHeaderBO">
		INSERT INTO EDI_FFM_MSG_LOCK(FLT_KEY,FLT_DATE,BRD_POINT,VER_NO) VALUES(#flightKey#, TO_DATE(#flightDate#,'MM/DD/YYYY'),#origin#,0)
	</insert>
	<select id="sqlSelectCPMMsgLockForUpdate" parameterClass="cargo.cms.edi.ei.bo.CPMHeaderBO" resultClass="java.util.HashMap">
	    SELECT FLT_KEY, FLT_DATE, BRD_POINT,VER_NO FROM EDI_FFM_MSG_LOCK WHERE FLT_KEY = #flightKey# AND FLT_DATE = TO_DATE(#flightDate#,'MM/DD/YYYY')
           AND BRD_POINT = #origin#
           FOR UPDATE OF VER_NO
	</select>
	<update id="sqlUpdateCPMMsgLock" parameterClass="cargo.cms.edi.ei.bo.CPMHeaderBO">
		UPDATE EDI_FFM_MSG_LOCK SET VER_NO = (VER_NO + 1) WHERE FLT_KEY = #flightKey# AND FLT_DATE = TO_DATE(#flightDate#,'MM/DD/YYYY') AND BRD_POINT = #origin#
	</update>	
	<!-- End of CPM Lock queries -->
	<!-- Update FFM indicator in table imp_ramp_inb_chk_dtl -->
	 <select id="sqlFetchFFMIndicatorImpRampInbChkDtl" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
    	SELECT COUNT(1) FROM IMP_RAMP_INB_CHK_DTL WHERE FLT_KEY = #flightKey# AND FLT_DATE = TO_DATE(#flightDate#,'DDMONYY') AND ULD_KEY  = #uldKey#
    </select>		
	 <select id="getAWBRmkAirlRmk" parameterClass="cargo.cms.edi.ei.bo.FFMShippmentBO" resultClass="java.util.HashMap">
    	SELECT DECODE((select count(1) from imp_car_awb where awb_no = #awbNo# and awb_date=#awbDate# and rownum=1),0,awb_rmk,
			(select wh_rmk from imp_car_awb where awb_no = #awbNo# and awb_date=#awbDate# and rownum=1)) AS  awbRmk, AIRLN_RMK airlineRmk FROM AWB WHERE AWB_NO=#awbNo# AND AWB_DATE=#awbDate# and awb_closed_yn='N'
    </select>
	<select id="getAWBRmk" parameterClass="cargo.cms.edi.ei.bo.FFMShippmentBO" resultClass="java.lang.String">
    select SEQ_NO seqNo from awb_rmk where awb_no=#awbNo# and awb_date=#awbDate# and rownum=1
    </select>
	<update id="updateAWB" parameterClass="cargo.cms.edi.ei.bo.FFMShippmentBO">
    	UPDATE AWB SET AWB_RMK=#awbRmk#,AIRLN_RMK=#airlineRmk# WHERE AWB_NO=#awbNo# AND AWB_DATE=#awbDate#
    </update>	
    
    <delete id="removeAWBRemark" parameterClass="cargo.cms.edi.ei.bo.FFMShippmentBO">
    	DELETE FROM AWB_RMK WHERE AWB_NO=#awbNo# AND AWB_DATE=#awbDate#
	</delete>
	
	 <update id="updateAWBEnqAIRLINERMK" parameterClass="cargo.cms.edi.ei.bo.FFMShippmentBO">	
		UPDATE awb_rmk
		SET tr_type = 'AWBEQ',
				rmk = #airlineRmk#, 
			  LM_USER_ID = 'SYSUSER', 
			  LM_DATE = sysdate 			 
		WHERE SEQ_NO = #seqNo#		      
	</update>
	<update id="updateCARForImportWHRMK" parameterClass="cargo.cms.edi.ei.bo.FFMShippmentBO">	
		UPDATE IMP_CAR_AWB
		SET TR_TYPE = 'AWBEQ' ,
			AIRLN_RMK = nvl(#airlineRmk#, AIRLN_RMK),
			WH_RMK = nvl(#awbRmk#,WH_RMK), 
			  LM_USER_ID = 'SYSUSER', 
			  LM_DATE = sysdate 			 
		WHERE AWB_NO = #awbNo#
		      AND  AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY')	
		      
	</update>	
	<select id="selectFFMShpData" parameterClass="cargo.cms.edi.ei.bo.FFMMsgBO" resultClass="cargo.cms.edi.ei.bo.FFMShippmentBO">
    	SELECT AWB_NO as awbNo,AWB_DATE awbDate FROM EDI_FFM_SHP WHERE TR_NO=#trNo#
    </select>
	<update id="sqlUpdateFFMIndicatorImpRampInbChkDtl" parameterClass="java.util.HashMap">
    	UPDATE IMP_RAMP_INB_CHK_DTL SET FFM_IND = 'Y' WHERE  FLT_KEY  = #flightKey# AND FLT_DATE = TO_DATE(#flightDate#,'DDMONYY') AND ULD_KEY  = #uldKey#   
    </update> 
	<update id="sqlUpdateExpBuJoLocnForBIN" parameterClass="java.util.HashMap">
    	UPDATE EXP_BU_JO_LOCN SET LOC_CODE = #locCode# WHERE LSP = #binNo#
		AND AWB_NO IN (SELECT AWB_NO FROM AWB_INVENTORY WHERE LSP_NO = #binNo#)
    </update>
	<update id="sqlUpdateExpBuJoLocnForULD" parameterClass="java.util.HashMap">
    	UPDATE EXP_BU_JO_LOCN SET LOC_CODE = #locCode# WHERE ULD_KEY = #uldKey#
		AND AWB_NO IN (SELECT AWB_NO FROM AWB_INVENTORY WHERE ULD_KEY = #uldKey#)
    </update>
	<select id="fetchConstrainedAWBForPreAnnounceAndDataChange" parameterClass="java.util.HashMap" resultClass="cargo.cms.ws.ei.bo.MHCSAwbBO">
		SELECT 
		  AWB.AWB_NO AS awbNo,
		  NVL(EDI_FHL_HAWB.HAWB_NO,'000000000000000000') AS hawbNo,
		  NVL(EDI_FHL_HAWB.HAWB_PCS,SUM(AWB_INVENTORY.LOCN_PCS)) AS awbQty,
		  AWB.DEST AS awbDest,  
		  AWB.ORIG AS awbOrigin,  
		  SUBSTR(AWB.CONTENT, 0, 28) AS comText1,
      	  (SELECT A.SHC FROM(SELECT SHC,AWB_NO, AWB_DATE FROM V_EXP_SHC_PRIORITY ORDER BY PRIORITY DESC) A  
      	  WHERE A.AWB_NO = AWB.AWB_NO AND A.AWB_DATE= AWB_DATE AND ROWNUM = 1) AS shc,
      	  V_CST_CONT_CODE.REF_NO AS customRefernceNo,
      	  V_CST_CONT_CODE.CC_CODE AS ccCode,
      	  AWB_INVENTORY.FLT_TYPE as flightType,
      	  DECODE(AWB_INVENTORY.FLT_TYPE, 'I',SUBSTR(AWB_INVENTORY.FLT_KEY,0,2), NULL) AS inCarrier,
      	  DECODE(AWB_INVENTORY.FLT_TYPE, 'I',SUBSTR(AWB_INVENTORY.FLT_KEY,3), NULL) AS inFlightNo, 
      	  DECODE(AWB_INVENTORY.FLT_TYPE, 'I',TO_CHAR(AWB_INVENTORY.FLT_DATE,'YYYY-MM-DD'), NULL) AS inFlightDate,
          DECODE(AWB_INVENTORY.FLT_TYPE, 'E',SUBSTR(AWB_INVENTORY.FLT_KEY,0,2), NULL) AS outCarrier,
      	  DECODE(AWB_INVENTORY.FLT_TYPE, 'E',SUBSTR(AWB_INVENTORY.FLT_KEY,3), NULL) AS outFlightNo, 
      	  DECODE(AWB_INVENTORY.FLT_TYPE, 'E',TO_CHAR(AWB_INVENTORY.FLT_DATE,'YYYY-MM-DD'), NULL) AS outFlightDate
		FROM
			AWB
			INNER JOIN AWB_INVENTORY ON AWB.AWB_NO = AWB_INVENTORY.AWB_NO AND AWB.AWB_DATE = AWB_INVENTORY.AWB_DATE      
      		INNER JOIN V_CST_CONT_CODE ON AWB.AWB_NO = V_CST_CONT_CODE.AWB_NO
      		INNER JOIN MAST_CONSTRAINT_CODE ON V_CST_CONT_CODE.CC_CODE = MAST_CONSTRAINT_CODE.CODE AND MAST_CONSTRAINT_CODE.CONSTRAINT = 'Y'
      		LEFT JOIN EDI_FHL ON AWB.AWB_NO = EDI_FHL.AWB_NO AND AWB.AWB_DATE = EDI_FHL.AWB_DATE
      		LEFT JOIN EDI_FHL_HAWB ON EDI_FHL.TR_NO = EDI_FHL_HAWB.TR_NO AND  V_CST_CONT_CODE.HAWB_NO = NVL(EDI_FHL_HAWB.HAWB_NO,'000000000000000000')
		WHERE		  	
		  	AWB_INVENTORY.ULD_KEY = #uldKey#
		  	GROUP BY AWB.AWB_NO, EDI_FHL_HAWB.HAWB_NO, EDI_FHL_HAWB.HAWB_PCS, AWB.CONTENT, AWB.DEST,AWB.ORIG, AWB_INVENTORY.LOCN_PCS,
            V_CST_CONT_CODE.REF_NO,V_CST_CONT_CODE.CC_CODE,AWB_INVENTORY.FLT_KEY, AWB_INVENTORY.FLT_DATE, AWB_INVENTORY.FLT_TYPE
	</select>
	<select id="sqlFetchFFMProcessedUldDetails" parameterClass="java.lang.String" resultClass="cargo.cms.edi.ei.bo.FFMUldBO">
		SELECT EDI_FFM_ULD.TR_NO trNo,
			EDI_FFM_ULD.DOC_LINE_NO docLineNo,
			EDI_FFM_ULD.ULD_TYPE uldType,
			EDI_FFM_ULD.ULD_NO uldNo,
			EDI_FFM_ULD.ULD_CARR uldCarrierCode,
			EDI_FFM_ULD.ULD_KEY uldKey,
			EDI_FFM_ULD.BRD_POINT loadingPoint,
			EDI_FFM_ULD.OFF_POINT unLoadingPoint
		FROM 
			EDI_FFM_MSG,
			EDI_FFM_ULD
		WHERE
			EDI_FFM_MSG.TR_NO = EDI_FFM_ULD.TR_NO AND 
			EDI_FFM_MSG.FFM_STATUS = 'P' AND
			EDI_FFM_ULD.TR_NO = #trNo#
	</select>
	<select id="sqlFetchFFMProcessedShipmentDetails" parameterClass="cargo.cms.edi.ei.bo.FFMUldBO" resultClass="cargo.cms.edi.ei.bo.FFMShippmentBO">
		SELECT TR_NO trNo,
		  	DOC_LINE_NO docLineNo,
		  	UDOC_LINE_NO udocLineNo,
		  	BRD_POINT loadingPoint,
		  	OFF_POINT unLoadingPoint,
		  	AWB_NO awbNo,
		  	AWB_DATE,
		  	ORG origin,
		  	DEST dest,
		  	CONTENT natureOfGoods,  
		  	SPL_CODE1 specialCode1,
		  	SPL_CODE2 specialCode2  
		FROM 
			EDI_FFM_SHP
		WHERE 
			TR_NO = #trNo# AND 
			UDOC_LINE_NO = #docLineNo#
	</select>
	<!-- URF CR - Release URF Multi Part Release - Starts -->
	<select id="sqlFetchNextLocation" parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT NVL(NEXT_LOC,#location#) FROM MAST_WH_LOC WHERE CODE = #location#
	</select>  
	<!-- URF CR - Release URF Multi Part Release - Ends -->
	
	<select id="getERCLDestinationForULD" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		select ercl.awb_dest as EDEST from EXP_PRE_RCL_HD ercl, exp_rcl_hd rcl where rcl.rcl_no = #RCL_NO# and rcl.pre_rcl_no = ercl.pre_rcl_no and rownum = 1
	</select>
	<select id="getFLTListForULD" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT F.*
			FROM
			  (SELECT opr.carr_code CARR,
			    opr.flt_no FLTNUM,
			    TO_CHAR(opr.sch_date,'YYYY-MM-DD') FLTDATE,
			    fbl.UNLDG_PT UNLADG
			  FROM flt_opr opr
			  JOIN
			    ( SELECT DISTINCT a.FLT_KEY, a.FLT_DATE, a.UNLDG_PT FROM EDI_FBL a, EDI_FBL_SHP b
			        WHERE a.TR_NO=b.TR_NO AND a.TR_NO IN (SELECT TR_NO FROM EDI_FBL_SHP WHERE (AWB_NO,AWB_DATE) IN
			        (SELECT awb_no, awb_date FROM exp_uld_awb WHERE rcl_no = #RCL_NO#  and uld_key =  #ULD_KEY#) )
			    AND A.FBL_STATUS='P' ) fbl ON fbl.FLT_KEY  = opr.FLT_KEY AND fbl.FLT_DATE=opr.SCH_DATE
			  JOIN FLT_OPR_EVENTS E ON E.TR_NO = opr.TR_NO
			  WHERE opr.FLT_TYPE  ='D' AND opr.ACT_DATE   IS NULL AND E.CTM_OUT_DATE IS NULL
			  ORDER BY TO_DATE ( ( TO_CHAR(NVL(opr.EST_DATE, opr.SCH_DATE),'DDMONYY') || ' ' || TO_CHAR(NVL(opr.EST_TIME, opr.SCH_TIME), '0000') ), 'DD-MON-YY HH24MI') ASC ) F
			WHERE rownum = 1
	</select>
	<select id="sqlFetchMastCarrierGroupCodes_EVA" parameterClass="java.lang.Object" resultClass="java.lang.String">
		SELECT STRAGG(STRINGDELIM(MAST_CODE_DTL.CODE, ',')) AS CUBIC_RECIPIENT_ADDRESS FROM MAST_CODE_HD, MAST_CODE_DTL WHERE MAST_CODE_HD.CODE = MAST_CODE_DTL.CODE_TYPE 
		AND MAST_CODE_HD.CODE = 'MAST_EVA_ADDRESS'
	</select>
	<update id="updateEdiMsgLogOut" parameterClass="java.util.HashMap">
		UPDATE EDI_MSG_LOG_OUT SET MSG_ACK = 'Y' where UNIQUE_ID = #uniqueId# and MSG_TYPE = #msgType#
	</update>
	<parameterMap id="ftpDIMMsgMap" class="map" >	
		<parameter property="AWB_NO"   jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="AWB_DATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="MSG_ID"   jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
		<parameter property="MESSAGE"  jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
	</parameterMap>		
	<procedure id="getFtpDimMsg" parameterMap="ftpDIMMsgMap" >
		{call PKG_NCIMP_MSG.DIM_MSG(?,?,?,?)}
	</procedure>
	
	<parameterMap id="ftpCNRMsgMap" class="map" >	
		<parameter property="RCL_NO"   jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="AWB_NO"   jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="MSG_ID"   jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
		<parameter property="MESSAGE"  jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
	</parameterMap>		
	<procedure id="getFtpCnrMsg" parameterMap="ftpCNRMsgMap" >
		{call PKG_NCIMP_MSG.CNR_MSG(?,?,?,?)}
	</procedure>
	
	
	<select id="getAWBCarrierCodeForCNR" parameterClass="map" resultClass="java.lang.String">
		select carr_code from awb where awb_no = #AWB_NO# and AWB_CLOSED_YN = 'N' and rownum = 1
	</select>
	
	
	<parameterMap id="ftpPBUMsgMap" class="map" >	
		<parameter property="FLT_KEY"  jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="FLT_DATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="ULD_KEY"  jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="MSG_ID"   jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
		<parameter property="MESSAGE"  jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
	</parameterMap>		
	<procedure id="getFtpPbuMsg" parameterMap="ftpPBUMsgMap" >
		{call PKG_NCIMP_MSG.PBU_MSG(?,?,?,?,?)}
	</procedure>
	
	<parameterMap id="ftpULEMsgMap" class="map" >	
		<parameter property="FLT_KEY"   jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="FLT_DATE"  jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="MSG_ID"    jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
		<parameter property="MESSAGE"   jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
	</parameterMap>		
	<procedure id="getFtpUleMsg" parameterMap="ftpULEMsgMap" >
		{call PKG_NCIMP_MSG.ULE_MSG(?,?,?,?)}
	</procedure>
	
	<parameterMap id="ftpHhcMsgMap" class="map" >	
		<parameter property="CARR_CODE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="SYS_DATE"  jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="MSG_ID"    jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
	</parameterMap>		
	<procedure id="getFtpHhcMsg" parameterMap="ftpHhcMsgMap" >
		{call PKG_NCIMP_MSG.HHC_MSG(?,?,?)}
	</procedure>
	
	<select id="getFtpHhcMsgData" parameterClass="java.lang.String" resultClass="java.lang.String">
		select line_desc from gt_hhc_msg_data where msg_id=#msgID# order by line_no asc
	</select>
	<update id="updateFHLHAwb_ChineseChar_YN" parameterClass="java.util.HashMap">
		UPDATE EDI_FHL_HAWB 
		SET chinese_char_yn = #hasChineseChar#
		WHERE TR_NO = #trNo# AND DOC_LINE_NO = #docLineNo# and HAWB_NO = #hawbNo#
	</update>
	<select id="getFWBVolDensityINFO" parameterClass="cargo.cms.common.ext.bo.FWBBO" resultClass="cargo.cms.edi.ei.bo.FWBDetailBO">
		SELECT vol_code as volCode,  NVL( volume , 0)  as volAmount, density_ind as densityIndicator, 
		 NVL( density_grp , 0)  as densityGroup FROM EDI_FWB WHERE  TR_NO = #trNo#
	</select>
	<select id="getraexpDateINFO" parameterClass="java.lang.String" resultClass="java.lang.String">
		select TO_CHAR(ra_eff_date_to,'MMYY') expDate from CUST_AGENT_RA where RA_NO=#PARAM#
	</select>

        <select id="fetchFwbRateDefalutConfigured" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		select count(1) from mast_carrier where code = ( select carr_code from mast_awb_prefix where code = #awbPriffix# ) and NVL(RTD_YN,'N') = 'Y'
	</select>

	<select id="chkMessageOrgWithFltOrg" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT count(*) FROM FLT_OPR where flt_key = #fltKey# and sch_date = TO_DATE(#fltDate#, 'MM/DD/YYYY') and orig = #port# and flt_type = 'A'
	</select>
	<select id="get_cubic_incoming_address_configured" parameterClass="java.lang.Object" resultClass="java.lang.String">
		SELECT STRAGG(STRINGDELIM(MAST_CODE_DTL.CODE, ',')) AS CUBIC_RECIPIENT_ADDRESS FROM MAST_CODE_HD, MAST_CODE_DTL WHERE MAST_CODE_HD.CODE = MAST_CODE_DTL.CODE_TYPE 
		AND MAST_CODE_HD.CODE = 'IN_CUBIC_ADDRESS'
	</select>

<select id="checkShipmentManualUpdateForULD" parameterClass="java.util.HashMap" resultClass="cargo.cms.edi.ei.bo.DDTShipmentBO">
		select s.TR_NO as oldDdtTrNo, s.DOC_LINE_NO  as oldDdtSdocLineNo
		from ddt_msg m 
		join ddt_uld u on u.tr_no = m.tr_no  
   		join ddt_shp s on s.tr_no = m.tr_no and s.udoc_line_no = u.doc_line_no
		where m.flt_key = #FLT_KEY# and m.flt_date = TO_DATE(#FLT_DATE#,'MM/DD/YYYY') and u.uld_key = #ULD_KEY# 
    	and s.awb_no = #AWB_NO# and s.awb_date = TO_DATE(#AWB_DATE#,'DDMONYY') and m.ddt_status='P' and u.uld_key is not null AND NVL(s.MANUAL_IND,'N') = 'Y'
	</select>
	
	
	<select id="getAWBListForOldVersion" parameterClass="java.util.HashMap" resultClass="cargo.cms.edi.ei.bo.DDTShipmentBO">
		SELECT s.awb_no as awbNo, s.tr_no as oldDdtTrNo , s.DOC_LINE_NO as oldDdtSdocLineNo ,
		substr(s.awb_no,0,3) as awbPrefix, substr(s.awb_no,4) as awbSuffix		
		FROM ddt_msg m
		JOIN ddt_uld u ON u.tr_no = m.tr_no
		JOIN ddt_shp s ON s.tr_no = m.tr_no AND s.udoc_line_no = u.doc_line_no
		WHERE m.flt_key = #FLT_KEY# AND m.flt_date = TO_DATE(#FLT_DATE#,'MM/DD/YYYY')
		AND NVL(u.uld_key,'XXX')  = NVL(#ULD_KEY#,'XXX')
		AND m.ddt_status ='P' AND NVL(s.MANUAL_IND,'N') = 'Y'
	</select>
	
	<select id="checkShipmentManualUpdate" parameterClass="java.util.HashMap" resultClass="cargo.cms.edi.ei.bo.DDTShipmentBO">
		select s.TR_NO as oldDdtTrNo, s.DOC_LINE_NO  as oldDdtSdocLineNo
		from ddt_msg m 
		join ddt_uld u on u.tr_no = m.tr_no  
   		join ddt_shp s on s.tr_no = m.tr_no and s.udoc_line_no = u.doc_line_no
		where m.flt_key = #FLT_KEY# and m.flt_date = TO_DATE(#FLT_DATE#,'MM/DD/YYYY')  
    	and s.awb_no = #AWB_NO# and s.awb_date = TO_DATE(#AWB_DATE#,'DDMONYY') and m.ddt_status='P' and u.uld_key is null  AND NVL(s.MANUAL_IND,'N') = 'Y'
	</select>

        <select id="fetchSIDRateCount" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		SELECT count(1) FROM EXP_SID_RATE WHERE SID_NO in ( select sid_no from exp_sid where  AWB_NO= #awbNo# )
	</select>

		<select id="chkCarrierRcsConfig" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		select count(1) from mast_carrier where code = 
			DECODE( (select carr_code from AWB where AWB_NO = #awbNumber# and AWB_DATE = to_date(#awbDate#,'DDMONYY')) , null , 
			  (select carr_code from mast_awb_prefix where code = #awbPriffix#) , (select carr_code from AWB where AWB_NO = #awbNumber# and AWB_DATE = to_date(#awbDate#,'DDMONYY')))
			and NVL(CUSEXP_RCS,'N') = 'Y'
	</select>

<select id="checkCarrierAgentConfigForCSTEXPMSG" parameterClass="java.util.HashMap"  resultClass="java.lang.Integer">
		select count(*) from MAST_CUST_CARR_AGT_CONFIG where carrier = DECODE( (select carr_code from AWB where AWB_NO = #awbNumber# and AWB_DATE = to_date(#awbDate#,'DDMONYY')) , null , 
			  (select carr_code from mast_awb_prefix where code = #awbPriffix#) , (select carr_code from AWB where AWB_NO = #awbNumber# and AWB_DATE = to_date(#awbDate#,'DDMONYY')))
      		and (agent_code IN (select cust_no from sec_user where code = #agentCode#) OR agent_code = #agentCode#)
	</select>

<select id="checkRcsPlusXminsConfig" parameterClass="java.util.HashMap"  resultClass="java.lang.Integer">
		<![CDATA[
			select count(*) FROM (
				SELECT rcsDate
				FROM
				  (SELECT dat_fsu_cre as rcsDate
				  FROM awb_shp_sts
				  WHERE awb_no    = #awbNumber#
				  AND awb_date    = to_date(#awbDate#,'DDMONYY')
				  AND cod_fsu_sts = 'RCS'
				  ORDER BY dat_fsu_cre asc
				  ) 
				WHERE rownum = 1 )
				DUAL WHERE SYSDATE  < ( rcsDate + ( (SELECT TO_NUMBER(rule_value)	FROM CMSRULES WHERE RULE_CODE='X_MINS_AFTER_RCS') / (24 * 60) ) ) 
	  	]]>  
	</select>

<select id="sqlChkLocationConfiguredInMastCodeDtl" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT
		  CASE
		    WHEN (SELECT COUNT(1) FROM mast_code_dtl WHERE code_type = 'AUTO_JO_LOCN' AND code = #locCode#) > 0
		    THEN 'Y' ELSE 'N' END AS UPDTARGETFLG
		FROM DUAL
	</select>
		
	<update id="sqlMHCSUpdateRtrvMovOrderFC" parameterClass="java.util.HashMap">
		<![CDATA[
			UPDATE rtrv_move_order
			SET status='FCOMPLETED',
			LM_USER_ID='MHCS',
			LM_DATE=sysdate
			WHERE ULD = UPPER(#uldKey#)
			AND ( status IS NULL OR (status <>'CANCELLED' AND status <> 'COMPLETED' AND status <> 'TIMEOUT') )				
		]]>
	</update>
	<select id="sqlGetCarrierCargoAircraftType" parameterClass="java.util.Map" resultClass="java.lang.String">
		<![CDATA[
			SELECT
			NVL(MAX(CGO_ACFT_TYPE), 'PSR')
			FROM MAST_CARR_CGO_ACFT_TYPE
			WHERE CARR_CODE = #CARRIER_CODE# AND SVC_TYPE = #SERVICE_TYPE#
		]]>
	</select>

<insert id="awbEventFORCUSTEXP" parameterClass="java.util.HashMap">
		INSERT INTO HIS_AWB_EVNT 
			(AWB_NO, AWB_DATE, COD_TRA_SEQ_NUM, COD_HIS_TYP, COD_FUNC, MODULE, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE)
		VALUES 
			(#awbNo#, TO_DATE(#awbDate#, 'DDMONYY'), #traSeqNo#, 'E', 'CUSEXP', 'W', #userId#, SYSDATE, #userId#, SYSDATE)
	</insert>

<insert id="awbEventFORCUSTEXPDTLS" parameterClass="java.util.HashMap">
		INSERT INTO HIS_AWB_EVNT_DTL 
			(AWB_NO, AWB_DATE, COD_TRA_SEQ_NUM, COD_SEQ_NUM, COD_ACT, COD_HIS_SEQ_NUM, DES_HIS_DTS,COD_HWB_NUM, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE)
		VALUES 
			(#awbNo#, TO_DATE(#awbDate#, 'DDMONYY'), #traSeqNo#, SQ_IMP_CAR_SHP_HIS.NEXTVAL, 'A', '687', #desHisDtls#,#transactionNUM#, #userId#, SYSDATE, #userId#, SYSDATE)
	</insert>

<select id="checkAWBEventMsgForCUSEXP" parameterClass="java.util.HashMap"  resultClass="java.lang.String">
		SELECT ( 'AWB NO: ' || awbNO ||  ', Result : ' || 
			 (case when hawbRej > 0 then 'FAIL' || ', Err Msg : ' || (select err_msg from CUSEXP_PROCS_INFO where TRANSACTION_NO = #transactionNUM#  and err_msg is not null and rownum =1)  else 'PASS' end) )
			FROM CUSEXP_PROCS_INFO CUSINFO
			JOIN 
			(SELECT AWB_NO awbNO,  SUM(HAWB_PROCESSED) hawbProc, SUM(HAWB_REJECTED) hawbRej , TRANSACTION_NO transNO FROM CUSEXP_PROCS_INFO
			WHERE TRANSACTION_NO = #transactionNUM# AND AWB_NO = #awbNumber# GROUP BY TRANSACTION_NO,AWB_NO) CUSEXP ON CUSINFO.TRANSACTION_NO = CUSEXP.transNO
     WHERE 1 =1 and rownum = 1
	</select>

	<update id="updateImpCarShpRcfDate" parameterClass="map">
		UPDATE IMP_CAR_SHP 
		SET 
			RCF_SENT_DATE = SYSDATE,
			LM_USER_ID = #USER_ID#,
			LM_DATE = SYSDATE		
		WHERE 	
			UPPER(AWB_NO) = UPPER(#AWB_NO#) AND
			UPPER(FLT_KEY) = UPPER(#FLT_KEY#) AND
			UPPER(FLT_DATE) = TO_DATE(#FLT_DATE#,'DDMONYY') AND
			UPPER(AWB_DATE) = TO_DATE(#AWB_DATE#,'DDMONYY')  
	</update>
	<update id="updateImpCarShpNfdDate" parameterClass="map">
		UPDATE IMP_CAR_SHP 
		SET 
			NFD_SENT_DATE = SYSDATE,
			LM_USER_ID = #USER_ID#,
			LM_DATE = SYSDATE		
		WHERE 	
			UPPER(AWB_NO) = UPPER(#AWB_NO#) AND
			UPPER(FLT_KEY) = UPPER(#FLT_KEY#) AND
			UPPER(FLT_DATE) = TO_DATE(#FLT_DATE#,'DDMONYY') AND
			UPPER(AWB_DATE) = TO_DATE(#AWB_DATE#,'DDMONYY')  
	</update>
	<insert id="insertMHCSErrorMessageLog" parameterClass="cargo.cms.edi.ei.bo.ErrorMessageLogBO">
		<![CDATA[
		INSERT INTO SERVICE_ERR_LOG
		  ( TR_NO, TR_TYPE, DOC_LINE_NO, TR_DATE,
		    OWNER_ID, RMK1, RMK2, ERR_REASON,
		    ULD_TYPE,ULD_NO,ULD_CARR,ULD_KEY, 
		    CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE)
		  VALUES
		  (SERVICE_ERR_LOG_DLN_SEQ.nextval, 'MH', SERVICE_ERR_LOG_DLN_SEQ.nextval, SYSDATE,
		    NVL(#uldCarr#,'XX'), #errorMsgText#, #errorMsgText#, #errorMsgText#,
		    #uldType#, #uldNo#, #uldCarr#, #uldKey#,			  
		   NVL(#userID#,'SYSUSER'), SYSDATE, NVL(#userID#,'SYSUSER'), SYSDATE )	
	]]>
	</insert>
	<select id="fetchFlightDateDDT" parameterClass="java.util.HashMap" resultClass="java.lang.String">
	  SELECT TO_CHAR(SCH_ARR_DATE,'MM/DD/YYYY')
		  FROM FLT_OPR_LEG
		  WHERE FLT_KEY    = #flightKey#
		  AND SCH_DEP_DATE = TO_DATE(#flightDate#,'MM/DD/YYYY')
		  AND BRD_POINT    = #boardingPoint#
		  AND FLT_TYPE     = 'A'
		  AND OFF_POINT = 'HKG'
    </select>
	<update id="updateDUORececivedOffload" parameterClass="java.util.HashMap">
		UPDATE flt_opr_events set DUO_RECD_DATE = NVL(DUO_RECD_DATE,SYSDATE) , DUO_OFLD_IND = 'Y' where flt_key = #flt_key# and sch_date = TO_DATE(#flt_date#,'MM/DD/YYYY') and flt_type = 'D'
	</update>
	
	<update id="updateDUORececived" parameterClass="java.util.HashMap">
		UPDATE flt_opr_events set DUO_RECD_DATE = NVL(DUO_RECD_DATE,SYSDATE) , DUO_OFLD_IND = 'N' where flt_key = #flt_key# and sch_date = TO_DATE(#flt_date#,'MM/DD/YYYY') and flt_type = 'D'
	</update>
	 
<select id="getLatestURFReleaseAgentDetails"  parameterClass="java.lang.String" resultClass="java.util.HashMap">
		SELECT carrierCode as CARRIER, agentCustNo as AGENT_CODE FROM 
				(SELECT IHD.CARR_CODE as carrierCode, IHD.AGENT_CUST_NO as agentCustNo FROM ULD_REL_HD IHD
				 	JOIN ULD_REL_DTL RDTL ON RDTL.EIR_NO = IHD.EIR_NO
					WHERE RDTL.ULD_KEY = #uldKey# AND REL_DATE IS NOT NULL ORDER BY TO_DATE(to_char(IHD.REL_DATE,'DDMONYY') ||  lpad(IHD.REL_TIME,4,0) , 'DDMONYYHH24MI') DESC ) WHERE ROWNUM = 1
	</select>

	<select id="checkAwbCarrier" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
			WITH PMAN as(
			select awb_no,awb_date,flt_key from exp_pmanifest_uld_awb 
			where flt_key=#fltKey# and
			trunc(flt_date)=to_date(#fltDate#,'DDMONYY')
				) SELECT count(1) FROM AWB owner join PMAN on owner.awb_no=PMAN.awb_no and owner.awb_date=PMAN.awb_date
			WHERE (owner.CARR_CODE =#loginCarrier# OR owner.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE =#loginCarrier#)) 
			and owner.awb_type='E'
	</select>	
	<select id="checkURFFlightAreaInMHSfromConf" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT RULE_VALUE FROM CMSRULES WHERE RULE_CODE='CHK_OUT_AREA_URF_ULD' AND RULE_VALUE = 'MHS'
	</select>
	
	<select id="isLSPEntryIndON" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		SELECT count(1)  FROM LSP_INVENTORY WHERE LSP_NO = #lspNo# AND NVL(BINENTRY_MSG_RCVD_YN, 'N') = 'Y'
	</select>
	
	<select id="isULDEntryIndON" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		SELECT count(1)  FROM ULD_INVENTORY WHERE ULD_KEY = #uldKey# AND NVL(ULDENTRY_MSG_RCVD_YN, 'N') = 'Y'
	</select>	
	
	<select id="sqlGetMVTDepartureFlightEstDateTime" parameterClass="java.util.Map" resultClass="cargo.cms.edi.ei.bo.MVTMessageBO">
		<![CDATA[
			SELECT 
			TO_CHAR(TO_DATE(#EST_DAY# || #EST_MON# || ' ' || #EST_TIME#, 'DDMONYY HH24MI') + (GET_TIME_GMT_DIFF('HKG')/24), 'DD/MM/YYYY') estDate,
			TO_CHAR(TO_DATE(#EST_DAY# || #EST_MON# || ' ' || #EST_TIME#, 'DDMONYY HH24MI') + (GET_TIME_GMT_DIFF('HKG')/24), 'HH24MI') estTime
			FROM DUAL
		]]>
   	</select>
   	<update id="sqlUpdateMVTFlightEstTime" parameterClass="java.util.Map">
		<![CDATA[
			UPDATE FLT_OPR
			SET 
			EST_DATE = TO_DATE(#EST_DATE#, 'DD/MM/YYYY'), EST_TIME = #EST_TIME#,
			EST_TIME_SOURCE = 'AIRLINE', LM_DATE = SYSDATE, LM_USER_ID = #USER_ID#,TR_TYPE='MVTCR'
			WHERE
			FLT_KEY = #FLT_KEY# AND SCH_DATE = TO_DATE(#FLT_DATE#, 'DD/MM/YYYY') AND FLT_TYPE = #FLT_TYPE#
		]]>
	</update>
	<select id="sqlGetMVTSenderAddressForAirline" parameterClass="java.util.Map" resultClass="java.lang.String">
		<![CDATA[
			SELECT CARR.MVT_SITA_SEND_ADDRESS
			FROM MAST_CARRIER CARR
			JOIN FLT_OPR FLT
			ON FLT.CARR_CODE = CARR.CODE
			WHERE NVL(CARR.ETD_FROM_AIRLINE_YN, 'N') = 'Y'
			AND FLT.FLT_KEY = #FLT_KEY# AND FLT.SCH_DATE = TO_DATE(#FLT_DATE#, 'DD/MM/YYYY') AND FLT_TYPE = #FLT_TYPE#
		]]>
   	</select>
   	<select id="sqlGetConfigMailIdsForFBLRejectReference" parameterClass="java.lang.String" resultClass="java.lang.String">
		Select FBL_FAIL_EMAIL_IDS from MAST_CARRIER where code=#ruleId#
   	</select>
   	
   	<select id="sqlGetErrMsgDetails" parameterClass="java.lang.String" resultClass="java.util.HashMap">
		Select ERR_CODE, ERR_DESC from err_msg where err_code=#errorMsgs# and upper(err_lcode)='EN_US'
   	</select>
   	
   	<select id="FUM_BOOKING_DETAILS_MIX" parameterClass="java.lang.String" resultClass="cargo.cms.common.ext.bo.FumBO">
		select NVL(ercl.bkd_ind,'N') booked,ercl.pr_awb_no primaryAWB,ercl.bk_flt_key bookFlight,to_char(ercl.bk_flt_date,'DDMONYY') bookFlightDate from EXP_PRE_RCL_HD ercl, exp_rcl_hd rcl 
			where rcl.rcl_no = #rcl_NO# and rcl.pre_rcl_no = ercl.pre_rcl_no and rcl.ppk_type='M'
	</select>

	<insert id="insertqueryfhloci"
		parameterClass="cargo.cms.edi.ei.bo.FHLOciBO">
		INSERT INTO EDI_FHL_HAWB_OCI
			  (
			    TR_NO,DOC_LINE_NO,HDOC_LINE_NO,ISO_CTRY_CODE, 
			    INFO_IDENTIFIER,CUSTOMS_INFO_IDENTIFIER,SUPP_CUSTOMS_INFO,
			    CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE
			  )
			  VALUES
			  (
			    #trNo#,EDI_FHL_HAWB_OCI_SEQ.nextval,#hDocLineNo#,#isoCtryCode#,
			    #infoIdentifier#,#customsInfoIdentifier#,#suppCustInfo#,
			    'SYSUSER',SYSDATE,'SYSUSER',SYSDATE
			  )
	</insert>
	
	<select id="selectedifhloci"
		parameterClass="cargo.cms.edi.ei.bo.FHLOciBO"
		resultClass="cargo.cms.edi.ei.bo.FHLOciBO">
			SELECT TR_NO trNo, DOC_LINE_NO docLineNo, HDOC_LINE_NO hDocLineNo, ISO_CTRY_CODE isoCtryCode, INFO_IDENTIFIER infoIdentifier, 
    		CUSTOMS_INFO_IDENTIFIER customsInfoIdentifier, SUPP_CUSTOMS_INFO suppCustInfo, LM_USER_ID lmUserId, LM_DATE lmDate
			FROM EDI_FHL_HAWB_OCI WHERE TR_NO = #trNo# ORDER BY DOC_LINE_NO
	</select>
	
	<select id="chkSitaAddressForCUBIC" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		SELECT count(1) FROM MAST_CODE_HD, MAST_CODE_DTL WHERE MAST_CODE_HD.CODE = MAST_CODE_DTL.CODE_TYPE AND MAST_CODE_HD.CODE = 'MAST_CUBIC_ADDRESS' AND MAST_CODE_DTL.CODE = #sitaAddress#
	</select>
	<select id="chkSitaAddressForEVA" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		SELECT count(1) FROM MAST_CODE_HD, MAST_CODE_DTL WHERE MAST_CODE_HD.CODE = MAST_CODE_DTL.CODE_TYPE AND MAST_CODE_HD.CODE = 'MAST_EVA_ADDRESS' AND MAST_CODE_DTL.CODE = #sitaAddress#
	</select>
	
	<select id="chkSitaAddressForGLS" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		SELECT count(1) FROM MAST_CODE_HD, MAST_CODE_DTL WHERE MAST_CODE_HD.CODE = MAST_CODE_DTL.CODE_TYPE AND MAST_CODE_HD.CODE = 'MAST_GLS_ADDRESS' AND MAST_CODE_DTL.CODE = #sitaAddress#
	</select>
	
	<select id="chkSitaAddressForEAWB" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		SELECT count(1) FROM MAST_CODE_HD, MAST_CODE_DTL WHERE MAST_CODE_HD.CODE = MAST_CODE_DTL.CODE_TYPE AND MAST_CODE_HD.CODE = 'MAST_GLS_EAWB_ADDR' AND MAST_CODE_DTL.CODE = #sitaAddress#
	</select>
	
	<select id="chkSitaAddressForCSS" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		SELECT count(1) FROM MAST_CODE_HD, MAST_CODE_DTL WHERE MAST_CODE_HD.CODE = MAST_CODE_DTL.CODE_TYPE AND MAST_CODE_HD.CODE = 'MAST_GLS_CCS_ADDR' AND MAST_CODE_DTL.CODE = #sitaAddress#		
	</select>

<select id="checkTrkFlightValid" parameterClass="cargo.cms.edi.ei.bo.FFMMsgBO" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM itm_trk_flt WHERE TRUCK_FLT_NO=#flightKey# AND TRUCK_FLT_DATE=TO_DATE(#flightDate#,'MM/DD/YYYY') AND TRUCK_FLT_TYPE = 'A'
	</select>

	<insert id="insertTrkFFM_Msg" parameterClass="cargo.cms.edi.ei.bo.FFMMsgBO">

		INSERT INTO EDI_TRK_FFM_MSG ( TR_NO, CARR_CODE, FLT_NO, FLT_DATE,
		FLT_KEY, BRD_POINT, MSG_SEQ_NUM , COPY_NO, MSG_VER, SEND_DATE,
		ACFT_REG_NO, FFM_STATUS, ALT_FLIGHT_CAR, ALT_FLIGHT_NO,
		ALT_FLIGHT_DATE, SI_TYPE,ACCESS_LEVEL, TOTAL_COUNT, TR_TYPE ,TOTAL_PCS,TOTAL_WT,TOTAL_UAWB, MSG_HDR) VALUES
		(#trNo#, #carrierCode#, #flightNo#, TO_Date(
		#flightDate#, 'MM/DD/YYYY'), #flightKey#, #loadingPoint#,
		#msgSeqNo#, #copyNo#, #msgVersionNumber#, SUBSTR(SYSDATE,1,9), #arcftRegNo#,
		#status# , NULL, NULL, NULL, 'I', NULL, 1, 'MEFFM',nvl(#totalPcs#,0),nvl(#totalWt#,0),nvl(#totalUAWB#,0),#messageAddressHeader#)
	</insert>


<insert id="insertTrkFFM_ULD" parameterClass="cargo.cms.edi.ei.bo.FFMUldBO">

		INSERT INTO EDI_TRK_FFM_ULD ( TR_NO, DOC_LINE_NO, ULD_TYPE, ULD_NO,
		ULD_CARR, ULD_KEY, BRD_POINT,OFF_POINT,CNTG_FLT_CARR1,
		CNTG_FLT_NO1, CNTG_FLT_DATE1, CNTG_DEST1, CNTG_FLT_CARR2,
		CNTG_FLT_NO2, CNTG_FLT_DATE2, CNTG_DEST2, CNTG_FLT_CARR3,
		CNTG_FLT_NO3, CNTG_FLT_DATE3, CNTG_DEST3, ULD_LOD_IND,
		ULD_VOL_AVA, DIS_ODR,ULD_RMK ,NIL_IND, VOL_AVAIL_CODE )

		VALUES (#trNo#,#docLineNo#, #uldType#, #uldNo#,
		#uldCarrierCode# , #uldKey# , #loadingPoint#, #unLoadingPoint#,
		#uldCntgFlightCarrierCode1#, #uldCntgFlightNo1#, TO_Date(
		#uldCntgFlightDate1#, 'MM/DD/YYYY') ,
		#uldCntgNextDestAirportCode1#, #uldCntgFlightCarrierCode2#,
		#uldCntgFlightNo2#, TO_Date( #uldCntgFlightDate2#, 'MM/DD/YYYY')
		, #uldCntgNextDestAirportCode2#, #uldCntgFlightCarrierCode3#,
		#uldCntgFlightNo3#, TO_Date( #uldCntgFlightDate3#, 'MM/DD/YYYY')
		, #uldCntgNextDestAirportCode3#, #uldLoadingIndicator#,
		#uldVolumeAvailability#, #uldDisorder#,#uldRemarks#
		,#nilCargoIndicator#, #uldVolumeCode#)

	</insert>

<insert id="insertTrkFFM_Shp" parameterClass="cargo.cms.edi.ei.bo.FFMShippmentBO">
		INSERT INTO EDI_TRK_FFM_SHP ( TR_NO, DOC_LINE_NO, UDOC_LINE_NO,
		BRD_POINT,OFF_POINT,AWB_NO, AWB_DATE, ORG , DEST, CONTENT, WT,
		WT_UNIT, VOL_UNIT, VOL_AMT, CNSL_IND, ACCS_IND, LBS_IND,
		EMPTY_IND, EIC_IND, SURPLUS_IND, CFM_IND, 
		LOC_CODE, RMK, COD_APT_FDS, CNG_TYPE, MAN_PCS, MAN_WT, MAN_VOL,
		PCS, DES_SHP_NOG, PART_SHMPT_YN, SPL_CODE1, SPL_CODE2,
		SPL_CODE3, SPL_CODE4, SPL_CODE5, SPL_CODE6, SPL_CODE7,
		SPL_CODE8,spl_code9, COD_DEN, DES_SHP_OSI_1, DES_SHP_OSI_2,
		COD_COM_TRN_STS, CNTG_FLT_CARR1, CNTG_FLT_NO1, CNTG_FLT_DATE1,
		CNTG_DEST1, CNTG_FLT_CARR2, CNTG_FLT_NO2, CNTG_FLT_DATE2,
		CNTG_DEST2, CNTG_FLT_CARR3, CNTG_FLT_NO3, CNTG_FLT_DATE3,
		CNTG_DEST3, COD_ONW_PRI, COD_DIS_ODR, DES_CUS_REF, SHP_WGT_LBS
		,MOV_PRI_CODE ,SHMPT_CODE, TR_TYPE, CUST_ORG_CODE, ISO_CTRY_CODE1, INFO_IDENTIFIER1, CUSTOMS_INFO_IDENTIFIERI, SUPP_CUSTOMS_INFO1, ISO_CTRY_CODE2, 
			INFO_IDENTIFIER2, CUSTOMS_INFO_IDENTIFIER2, SUPP_CUSTOMS_INFO2)

		VALUES ( #trNo#, #docLineNo# , #udocLineNo#,
		#loadingPoint#, #unLoadingPoint#, #awbNo#, (SELECT NVL(pkg_common.get_awb_date(#awbNo#,'E'), TO_CHAR(SYSDATE,'DDMONYY')) FROM DUAL) , #origin#,
		#dest#, #natureOfGoods#, #weight#, #weightCode#, #volumeCode#,
		#volumeAmount#, #cnslIndicator#, NULL, NULL, NULL, NULL, NULL, NULL,
		#locCode#, NULL, 'COD', 'T', #manPieces#, #manWeight#,
		#manVolume#, #totalPieces#, NULL, #partShippment#,
		#specialCode1#, #specialCode2#, #specialCode3#, #specialCode4#, #specialCode5#, #specialCode6#, #specialCode7#,
		#specialCode8#, #specialCode9#, NULL , #osiText1#, #osiText2#, NULL,
		#cntgFlightCarrierCode1#, #cntgFlightNo1#, TO_Date(
		#cntgFlightDate1#, 'MM/DD/YYYY'), #cntgNextDestAirportCode1#,
		#cntgFlightCarrierCode2#, #cntgFlightNo2#, TO_Date(
		#cntgFlightDate2#, 'MM/DD/YYYY'), #cntgNextDestAirportCode2#,
		#cntgFlightCarrierCode3#, #cntgFlightNo3#, TO_Date(
		#cntgFlightDate3#, 'MM/DD/YYYY'), #cntgNextDestAirportCode3#,
		#mvtPriorityCode#, NULL, NULL, NULL, #mvtPriorityCode#
		,#shipmentDescCode#, 'MEFFM', #customsOriginCode#, #isoCountryCode1#, #informationIdentifier1#, #customsInformationIdentifier1#, 
			#suppCustomsInformation1#, #isoCountryCode2#, #informationIdentifier2#, #customsInformationIdentifier2#, #suppCustomsInformation2#)

	</insert>


<select id="selectqueryTrkffmmsgByFltdata" parameterClass="cargo.cms.edi.ei.bo.FFMMsgBO" resultClass="cargo.cms.edi.ei.bo.FFMMsgBO">
		SELECT TR_NO AS trNo, FFM_STATUS AS status , SUCCESS_MSGS AS
		successMsgsSeqNo , MSG_SEQ_NUM AS msgSeqNo ,TOTAL_COUNT AS
		totalSplitMsgs, COPY_NO AS copyNo , FLT_NO AS flightNo ,FLT_KEY as flightKey ,
		TO_CHAR(FLT_DATE ,'MM/DD/YYYY')AS flightDate , BRD_POINT AS
		loadingPoint, LAST_IND AS lastIndicator FROM EDI_TRK_FFM_MSG WHERE FLT_KEY = #flightKey# AND
		FLT_DATE = TO_DATE(#flightDate#,'MM/DD/YYYY') AND BRD_POINT =
		#loadingPoint# AND FFM_STATUS ='CONT' AND SI_TYPE ='I' 
		<isNotNull prepend = "AND" property="trNo" >	
		 TR_NO = #trNo#
		</isNotNull>		
	</select>

	<select id="selectqueryffmmsgmaxcopynoByTrkFltdata" parameterClass="cargo.cms.edi.ei.bo.FFMMsgBO" resultClass="cargo.cms.edi.ei.bo.FFMMsgBO">		
		SELECT TR_NO AS trNo, FFM_STATUS AS status , SUCCESS_MSGS AS
		successMsgsSeqNo , MSG_SEQ_NUM AS msgSeqNo ,TOTAL_COUNT AS
		totalSplitMsgs, COPY_NO AS copyNo , FLT_NO AS flightNo ,FLT_KEY as flightKey ,
		TO_CHAR(FLT_DATE ,'MM/DD/YYYY')AS flightDate , BRD_POINT AS
		loadingPoint , MSG_VER AS msgVersionNumber, MSG_HDR AS messageAddressHeader FROM EDI_FFM_MSG WHERE FLT_KEY = #flightKey# AND
		FLT_DATE = TO_DATE(#flightDate#,'MM/DD/YYYY') AND BRD_POINT =
		#loadingPoint#  AND SI_TYPE ='I' 
		<!-- AND MSG_VER = #msgVersionNumber# --> 
		AND MSG_HDR = #messageAddressHeader# AND COPY_NO =
		(SELECT MAX(COPY_NO) AS copyNo FROM EDI_FFM_MSG WHERE FLT_KEY 
		= #flightKey# AND FLT_DATE = TO_DATE(#flightDate#,'MM/DD/YYYY') AND
		BRD_POINT = #loadingPoint# AND SI_TYPE ='I' AND MSG_HDR = #messageAddressHeader#
		<!-- AND MSG_VER = #msgVersionNumber# -->
		)		
		ORDER BY TR_NO DESC
	</select>

<update id="updatequeryTrkffmmsgseqnobyfltdata"
		parameterClass="cargo.cms.edi.ei.bo.FFMMsgBO">

		UPDATE EDI_TRK_FFM_MSG SET MSG_SEQ_NUM = #msgSeqNo# WHERE FLT_KEY = #flightKey#
		AND FLT_DATE = TO_DATE(#flightDate#,'MM/DD/YYYY') AND
		BRD_POINT = #loadingPoint# AND FFM_STATUS = 'CONT' AND SI_TYPE ='I' 
		<isNotNull prepend = "AND" property="trNo" >	
		 TR_NO = #trNo#
		</isNotNull>
		
	</update>

	<update id="updatequeryTrkffmmsgtotalcountbyfltdata"
		parameterClass="cargo.cms.edi.ei.bo.FFMMsgBO">

		UPDATE EDI_TRK_FFM_MSG SET TOTAL_COUNT = (NVL(TOTAL_COUNT, 0) + 1) WHERE
		FLT_KEY = #flightKey# AND FLT_DATE =
		TO_DATE(#flightDate#,'MM/DD/YYYY') AND BRD_POINT =
		#loadingPoint# AND FFM_STATUS = 'CONT' AND SI_TYPE ='I'
		<isNotNull prepend = "AND" property="trNo" >	
		 TR_NO = #trNo#
		</isNotNull>
		
	</update>


	<select id="fetchTrkFlightDate" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT TO_CHAR(SCH_ARR_DATE,'MM/DD/YYYY') FROM itm_trk_flt WHERE 
		TRUCK_FLT_NO = #flightKey# AND SCH_DEP_DATE = TO_DATE(#flightDate#,'MM/DD/YYYY') AND UNLDG_PT1 = #boardingPoint#
		AND UNLDG_PT2 = 'HKG'	AND TRUCK_FLT_TYPE = 'A' AND ROWNUM =1
	</select>

	<select id="fetchTrkFlightLegDate" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT TO_CHAR(SCH_ARR_DATE,'MM/DD/YYYY') FROM itm_trk_flt_leg WHERE 
		TRUCK_FLT_NO = #flightKey# AND SCH_DEP_DATE = TO_DATE(#flightDate#,'MM/DD/YYYY') AND ORIGIN = #boardingPoint# AND DEST = 'HKG' AND ROWNUM =1
	</select>

<update id="updateTrkEdiFFMMsg" parameterClass="java.util.HashMap">
		UPDATE EDI_TRK_FFM_MSG SET ALT_FLIGHT_CAR = #altFlightCarrierCode#, ALT_FLIGHT_NO = #altFlightNo#, ALT_FLIGHT_DATE =TO_Date(#altFlightDate#, 'MM/DD/YYYY'), SI_TYPE = #siType#, TR_TYPE='DUMMY' WHERE TR_NO = #TR_NO#
	</update>

	<select id="verifyTrkBulkShpUldKeyRecordExist" parameterClass="cargo.cms.edi.ei.bo.FFMUldBO" resultClass="java.lang.Integer">
		SELECT MAX(DOC_LINE_NO) AS docLineNo FROM edi_trk_ffm_uld WHERE	ULD_KEY is null and TR_NO = #trNo# AND OFF_POINT = #unLoadingPoint#
	</select>

	<insert id="insertTrkFFM_Dim" parameterClass="cargo.cms.edi.ei.bo.EDIDimBO">
		INSERT INTO edi_trk_ffm_shp_dmn ( TR_NO, DOC_LINE_NO, SDOC_LINE_NO,
		LENGTH, WIDTH, HEIGHT, PCS, WT, WT_UNIT, DMN_UNT, DMN_WGT_LBS,CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE)
		VALUES (#trNo#, EDI_FFM_SHP_DMN_SEQ.nextval, #sdocLineNo#,
		#dim_Length#, #dim_Width#, #dim_Height#, #dim_NoOfPieces#,
		#dim_Weight#, #dim_WeightCode#, #dim_MsrUnitCode#,NULL, 'SYSUSER', SYSDATE, 'SYSUSER', SYSDATE)
	</insert>

<select id="verifyTrkUldKeyRecordExist" parameterClass="cargo.cms.edi.ei.bo.FFMUldBO" resultClass="java.lang.Integer">
		SELECT MAX(DOC_LINE_NO) AS docLineNo FROM edi_trk_ffm_uld WHERE ULD_KEY = #uldKey# and TR_NO = #trNo# AND OFF_POINT = #unLoadingPoint#
	</select>

<update id="updateTrkSuccessMsgsSeqNoByFltData" parameterClass="cargo.cms.edi.ei.bo.FFMMsgBO">
		UPDATE EDI_TRK_FFM_MSG SET SUCCESS_MSGS = #successMsgsSeqNo# WHERE
		FLT_KEY = #flightKey# AND FLT_DATE =
		TO_DATE(#flightDate#,'MM/DD/YYYY') AND BRD_POINT =
		#loadingPoint# AND FFM_STATUS = 'CONT' AND SI_TYPE ='I'
		<isNotNull prepend = "AND" property="trNo" >	
		 TR_NO = #trNo#
		</isNotNull>
	</update>

<update id="updateTrkLastIndicator" parameterClass="java.util.HashMap">
		UPDATE 	EDI_TRK_FFM_MSG SET LAST_IND = #lastIndicator#,
				TOTAL_PCS=nvl(#totalPcs#,TOTAL_PCS),TOTAL_WT=nvl(#totalWt#,TOTAL_WT),TOTAL_UAWB=nvl(#totalUAWB#,TOTAL_UAWB)
		WHERE TR_NO = #trNo#
	</update>

	<update id="updatequeryTrkffmmsgunpro"	parameterClass="cargo.cms.edi.ei.bo.FFMMsgBO">
		UPDATE EDI_TRK_FFM_MSG SET FFM_STATUS = #status# WHERE FLT_KEY = 
		#flightKey# AND FLT_DATE = TO_DATE(#flightDate#,'MM/DD/YYYY') AND
		BRD_POINT = #loadingPoint# AND FFM_STATUS = 'UNPRO' AND SI_TYPE ='I'
		<isNotNull prepend = "AND" property="trNo" >	
		 TR_NO = #trNo#
		</isNotNull>
	</update>

<update id="updatequeryTrkffmmsgstatusbyfltdata" parameterClass="cargo.cms.edi.ei.bo.FFMMsgBO">
		UPDATE EDI_TRK_FFM_MSG SET FFM_STATUS = #status# WHERE FLT_KEY = 
		#flightKey# AND FLT_DATE = TO_DATE(#flightDate#,'MM/DD/YYYY') AND
		BRD_POINT = #loadingPoint# AND FFM_STATUS = 'CONT' AND SI_TYPE ='I'
		<isNotNull prepend = "AND" property="trNo" >	
		 TR_NO = #trNo#
		</isNotNull>
	</update>

	<select id="getTotPcsWtTrkUAWB" parameterClass="cargo.cms.edi.ei.bo.FFMMsgBO" resultClass="cargo.cms.edi.ei.bo.FFMMsgBO">
		SELECT 	sum(a.man_pcs) as ctotalPcs , sum(a.man_wt) as ctotalWt,count(DISTINCT a.awb_no) as ctotalUAWB,
        		b.TOTAL_PCS as totalPcs, b.TOTAL_WT as totalWt, b.TOTAL_UAWB as totalUAWB
		FROM 	edi_trk_ffm_shp a, EDI_TRK_FFM_MSG b
		WHERE 	a.FLT_KEY = #flightKey# AND a.FLT_DATE = TO_DATE(#flightDate#,'MM/DD/YYYY') AND a.TR_NO=#trNo#
				and a.tr_no=b.tr_no
		GROUP BY b.TOTAL_PCS,b.TOTAL_WT ,b.TOTAL_UAWB 
	</select>

	<update id="updatequeryAllTrkffmmsgunpro" parameterClass="cargo.cms.edi.ei.bo.FFMMsgBO">
		UPDATE EDI_TRK_FFM_MSG SET FFM_STATUS = 'UNPRO'
		WHERE FLT_KEY = #flightKey# AND FLT_DATE = TO_DATE(#flightDate#,'MM/DD/YYYY') AND BRD_POINT = #loadingPoint# 
		AND FFM_STATUS = 'P' AND SI_TYPE ='I' AND TR_NO != #trNo#
	</update>

<select id="checkRCLIssuedForAWB" parameterClass="java.lang.String"  resultClass="java.lang.Integer">
	    SELECT COUNT(rclType) FROM (
	      SELECT COUNT(1) AS rclType FROM EXP_RCL_HD RCLHD WHERE AWB_NO=#awbNo# AND AWB_DATE= pkg_common.get_awb_date(#awbNo#,NULL)  AND RCLHD.STATUS NOT IN ('V','R') 
	      UNION ALL
	      SELECT COUNT(1) AS rclType FROM EXP_RCL_HD RCLHD,EXP_RCL_BRKDN RCLBRKDN WHERE RCLHD.RCL_NO = RCLBRKDN.RCL_NO AND RCLBRKDN.AWB_NO=#awbNo# AND RCLBRKDN.AWB_DATE= pkg_common.get_awb_date(#awbNo#,NULL)
	      AND RCLHD.STATUS NOT IN ('V','R') AND RCLHD.PPK_TYPE='M'  
	   ) WHERE rclType > 0
	</select>


	<select id="sqlFetchTrkFFMProcessedUldDetails" parameterClass="java.lang.String" resultClass="cargo.cms.edi.ei.bo.FFMUldBO">
		SELECT edi_trk_ffm_uld.TR_NO trNo,
			edi_trk_ffm_uld.DOC_LINE_NO docLineNo,
			edi_trk_ffm_uld.ULD_TYPE uldType,
			edi_trk_ffm_uld.ULD_NO uldNo,
			edi_trk_ffm_uld.ULD_CARR uldCarrierCode,
			edi_trk_ffm_uld.ULD_KEY uldKey,
			edi_trk_ffm_uld.BRD_POINT loadingPoint,
			edi_trk_ffm_uld.OFF_POINT unLoadingPoint
		FROM 
			EDI_TRK_FFM_MSG,
			edi_trk_ffm_uld
		WHERE
			EDI_TRK_FFM_MSG.TR_NO = edi_trk_ffm_uld.TR_NO AND 
			EDI_TRK_FFM_MSG.FFM_STATUS = 'P' AND
			edi_trk_ffm_uld.TR_NO = #trNo#
	</select>


	<select id="checkFWBForShipment" parameterClass="java.util.HashMap" resultClass="java.lang.Integer" >
		SELECT COUNT(1) FROM EDI_FWB WHERE AWB_NO=#awbNo# AND AWB_DATE=TO_DATE(#awbDate#, 'DDMONYY') 
	</select>
	
</sqlMap>
