<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<!--
 	XML Document 	: sqlquerytransition.xml
 	Module			: Transition
 	Authors			: Santosh D, Swapneswari Jena, Anup Sekar, Asha joshi, Varadaraj Muni, Mithun KK  	
 
 -->
 
 
 
 
<sqlMap namespace="transition">
	
	<!-- 
		Function	: Part Shipment List
		Author		: Mithun KK
		DAO Class	: cargo.cms.trn.data.TrnPartShipmentDAO
	 -->
	 
	<!-- 
		DAO Constant	: SQL_TRN_GET_PARTSHIPMENT_LIST
		DAO Method		: BOHolder cargo.cms.trn.data.TrnPartShipmentDAO.getPartshipmentList(TrnPartShipmentBO searchBO)
		Description		: Selects part shipment list based on the search criteria
	 -->	 
	<select id="sqlTrnGetPartShipmentList" parameterClass="cargo.cms.trn.bo.TrnPartShipmentBO"
	resultClass="cargo.cms.trn.bo.TrnPartShipmentBO">	
	<![CDATA[
				select * from (SELECT
			TFS.AWB_NO awbNo, TO_CHAR(TFS.AWB_DATE,'DDMONYY') awbDate, ABT.awb_type	awbType, ABT.PCS pcs, ABT.WT wt,'FFM' typeOfMsg
			FROM
			TRN_FFM_MSG TFM
			JOIN
			TRN_FFM_SHP TFS
			ON
			TFM.TR_NO = TFS.TR_NO
			JOIN AWB ABT
		    ON
		    TFS.AWB_NO = ABT.AWB_NO
		    AND TFS.AWB_DATE = ABT.AWB_DATE
			WHERE
        	NVL(ABT.AWB_CLOSED_YN,'N') = 'N'
		    AND ABT.MANIFEST_PCS < ABT.PCS      
		    AND TFM.FFM_STATUS = 'P'
        	AND (TFS.SHMPT_CODE = 'P' OR TFS.SHMPT_CODE = 'D')        
        	AND TFS.ORG <> 'HKG'
		    AND	TFM.FLT_DATE BETWEEN TO_DATE(#fltFromDate#,'DDMONYY') AND TO_DATE(#fltToDate#,'DDMONYY')
				]]>
					<isEqual property="handledAt" compareValue="C" prepend="AND">
					TFS.CTO = 'CPCT'
					</isEqual>
					<isEqual property="handledAt" compareValue="H" prepend="AND">
					TFS.CTO = 'HACTL'
					</isEqual>		
					<isNotEmpty prepend="AND" property="awbNo">
					TFS.AWB_NO = #awbNo#
					</isNotEmpty>
					<isNotEmpty prepend="AND" property="awbType">
					ABT.awb_type = #awbType#
					</isNotEmpty>         
        	
			UNION
			
		<![CDATA[
			SELECT
			TBS.AWB_NO awbNo, TO_CHAR(TBS.AWB_DATE,'DDMONYY') awbDate, DECODE(TBS.DEST,'HKG','I',DECODE(TBS.ORG,'HKG','E','T'))awbType, NVL(ABT.PCS,TBS.PCS) pcs, NVL(ABT.WT,TBS.NET_WT) wt,'FBL' typeOfMsg
			FROM
			TRN_FBL TBM
			JOIN
			TRN_FBL_SHP TBS
			ON
			TBM.TR_NO = TBS.TR_NO
			LEFT JOIN AWB ABT
		    ON
		    TBS.AWB_NO = ABT.AWB_NO
		    AND TBS.AWB_DATE = ABT.AWB_DATE
			WHERE
		    NVL(ABT.AWB_CLOSED_YN,'N') = 'N'
		    AND (DECODE(TBS.DEST,'HKG','I',DECODE(TBS.ORG,'HKG','E','T')) = 'T' OR TBS.PCS <= TBS.TOTAL_PCS)
        AND TBM.FBL_STATUS = 'P'
			AND (TBS.SHMPT_CODE = 'P' OR TBS.SHMPT_CODE = 'D')  
		    AND TBS.DEST <> 'HKG'		    
            AND	TBM.FLT_DATE BETWEEN TO_DATE(#fltFromDate#,'DDMONYY') AND TO_DATE(#fltToDate#,'DDMONYY')
            AND TBS.AWB_NO NOT IN (SELECT TFS.AWB_NO FROM TRN_FFM_MSG TFM
					JOIN
					TRN_FFM_SHP TFS
					ON
					TFM.TR_NO = TFS.TR_NO
					JOIN AWB ABT
		   			ON
		    		TFS.AWB_NO = ABT.AWB_NO
		    		AND TFS.AWB_DATE = ABT.AWB_DATE
					WHERE
        			NVL(ABT.AWB_CLOSED_YN,'N') = 'N'
		    		AND ABT.MANIFEST_PCS < ABT.PCS      
		    		AND TFM.FFM_STATUS = 'P'
        			AND (TFS.SHMPT_CODE = 'P' OR TFS.SHMPT_CODE = 'D')        
        			AND TFS.ORG <> 'HKG'
		    		AND	TFM.FLT_DATE  BETWEEN TO_DATE(#fltFromDate#,'DDMONYY') AND TO_DATE(#fltToDate#,'DDMONYY'))	
		]]>			
			<isEqual property="handledAt" compareValue="C" prepend="AND">
					TBS.EXPORT_CTO = 'CPCT'
			</isEqual>
			<isEqual property="handledAt" compareValue="H" prepend="AND">
					TBS.EXPORT_CTO = 'HACTL'
			</isEqual>			
			<isNotEmpty prepend="AND" property="awbNo">
					TBS.AWB_NO = #awbNo#
					</isNotEmpty>
					<isNotEmpty prepend="AND" property="awbType">
					DECODE(TBS.DEST,'HKG','I',DECODE(TBS.ORG,'HKG','E','T')) = #awbType#
					</isNotEmpty> ) order by awbno, awbdate            
	</select> 
	
	<!-- 
		DAO Constant	: SQL_TRN_GET_PARTSHIPMENT_FLT_LIST
		DAO Method		: BOHolder cargo.cms.trn.data.TrnPartShipmentDAO.getPartshipmentFlightList(TrnPartShipmentBO partShipment)
		Description		: Selects flight list for a part shipment
	 -->	
	<select id="sqlTrnGetPartShipmentFltList" parameterClass="cargo.cms.trn.bo.TrnPartShipmentBO"
	resultClass="cargo.cms.trn.bo.TrnPartShipmentBO">	
		SELECT * FROM 
		(SELECT
		TFM.FLT_KEY fltKey, TFM.FLT_NO fltNo, TFM.CARR_CODE carrCode, TO_CHAR(TFM.FLT_DATE,'DDMONYY') fltDate, DECODE(FOT.FLT_TYPE,'A','I','D','E') fltType,		
		TO_DATE(TO_CHAR(FOT.SCH_DATE,'DDMONYY')|| LPAD(FOT.SCH_TIME,4,'0'),'DDMONYYHH24MI') fltSchDateTime,   
		DECODE(VDD.AWB_NO,TFS.AWB_NO,'Y','N')	ddtShpmExist, TFS.CTO cto, TFS.MAN_PCS pcs, TFS.MAN_WT wt, TO_DATE(TO_CHAR(FOT.SCH_DATE,'DDMONYY')|| LPAD(FOT.SCH_TIME,4,'0'),'DDMONYYHH24MI') as schDateTime, 
		VDD.TR_NO ddtTrNo, VDD.DOC_LINE_NO ddtDocLineNo ,'FFM' typeOfMsg
		FROM
		TRN_FFM_MSG TFM
		JOIN TRN_FFM_ULD TFU 
    	ON TFM.TR_NO=TFU.TR_NO AND TFM.FFM_STATUS = 'P' 
		JOIN
		TRN_FFM_SHP TFS
		ON
		TFM.TR_NO = TFS.TR_NO
		AND TFM.FFM_STATUS = 'P' AND TFU.DOC_LINE_NO=TFS.UDOC_LINE_NO 
		JOIN TRN_FLT_OPR FOT
		ON
		TFM.FLT_KEY = FOT.FLT_KEY
		AND TFM.FLT_DATE = FOT.SCH_DATE
		AND FOT.FLT_TYPE = 'A'
		LEFT JOIN
		V_DDT_DTL VDD
		ON
		TFM.FLT_KEY||#trnFltSfx# = VDD.FLT_KEY
		AND TFM.FLT_DATE = VDD.FLT_DATE
		AND TFS.AWB_NO = VDD.AWB_NO
		AND TFS.AWB_DATE = VDD.AWB_DATE
		AND VDD.SHP_TRF_TYPE IN ('TT','IF','QT') AND NVL(VDD.ULD_KEY, 'FF')=NVL(TFU.ULD_KEY, 'FF') 
		LEFT JOIN IMP_CAR_SHP ICS
    	ON
    	TFM.FLT_KEY||#trnFltSfx# = ICS.FLT_KEY
		AND TFM.FLT_DATE = ICS.FLT_DATE
		AND TFS.AWB_NO = ICS.AWB_NO
		AND TFS.AWB_DATE = ICS.AWB_DATE
		WHERE
		TFS.AWB_NO = #awbNo#
		AND TO_CHAR(TFS.AWB_DATE,'DDMONYY') = #awbDate#
		AND DECODE(TFS.DEST,'HKG','I',DECODE(TFS.ORG,'HKG','E','T')) = #awbType#
		
		UNION ALL 
	
		SELECT
		TBM.FLT_KEY fltKey, TBM.FLT_NO fltNo, TBM.CARR_CODE carrCode, TO_CHAR(TBM.FLT_DATE,'DDMONYY') fltDate, DECODE(FOT.FLT_TYPE,'A','I','D','E') fltType,
		TO_DATE(TO_CHAR(FOT.SCH_DATE,'DDMONYY')|| LPAD(FOT.SCH_TIME,4,'0'),'DDMONYYHH24MI') fltSchDateTime, 
    	'N' ddtShpmExist, TBS.EXPORT_CTO cto, TBS.PCS pcs, TBS.NET_WT wt, 
		TO_DATE(TO_CHAR(FOT.SCH_DATE,'DDMONYY')|| LPAD(FOT.SCH_TIME,4,'0'),'DDMONYYHH24MI') as schDateTime, null ddtTrNo, null ddtDocLineNo ,'FBL' typeOfMsg
		FROM
		TRN_FBL TBM
		JOIN
		TRN_FBL_SHP TBS
		ON
		TBM.TR_NO = TBS.TR_NO
		AND TBM.FBL_STATUS = 'P'
		JOIN TRN_FLT_OPR FOT
		ON
		TBM.FLT_KEY = FOT.FLT_KEY
		AND TBM.FLT_DATE = FOT.SCH_DATE
		AND FOT.FLT_TYPE = 'D'		
		WHERE
		TBS.AWB_NO = #awbNo#
		AND TO_CHAR(TBS.AWB_DATE,'DDMONYY') = #awbDate#
		AND DECODE(TBS.DEST,'HKG','I',DECODE(TBS.ORG,'HKG','E','T')) = #awbType#			
		)
		ORDER BY schDateTime
	</select>
	
	<!-- 
		DAO Constant	: SQL_TRN_GET_PARTSHIPMENT_CNCTG_FLT_LIST
		DAO Method		: BOHolder cargo.cms.trn.data.TrnPartShipmentDAO.getPartshipmentCnctgFlightList(TrnPartShipmentBO partShipmentFlight)
		Description		: Selects connecting flight list for a part shipment flight if the flight is an 
						  Import flight and there DDT shipment exists for the flight
	 -->	
	<select id="sqlTrnGetPartShipmentCnctgFltList" parameterClass="cargo.cms.trn.bo.TrnPartShipmentBO"
	resultClass="cargo.cms.trn.bo.TrnPartShipmentBO">
		SELECT SHP_CNTG_FLT_KEY fltKey, TO_CHAR(SHP_CNTG_FLT_DATE,'DDMONYY') fltDate, SHP_TRF_PC pcs, SHP_TRF_WT wt  
		FROM V_DDT_DTL
		WHERE 
		TR_NO=#ddtTrNo# AND DOC_LINE_NO=#ddtDocLineNo#
		<!-- AWB_NO = #awbNo#
		AND TO_CHAR(AWB_DATE,'DDMONYY') = #awbDate#
		AND FLT_KEY = #fltKey#||'A'
		AND TO_CHAR(FLT_DATE,'DDMONYY') = #fltDate# -->
	</select>
	
	<select id="sqlTrnGetPartShipmentCtInd" parameterClass="cargo.cms.trn.bo.TrnPartShipmentBO"
	resultClass="java.lang.Integer">
		SELECT SUM(X) FROM (
		  	SELECT COUNT(1) X FROM IMP_TRM_HD WHERE AWB_NO=#awbNo# AND TO_CHAR(AWB_DATE,'DDMONYY') = #awbDate#
         	UNION
          	SELECT COUNT(1) X FROM EXP_RCL_HD WHERE AWB_NO=#awbNo# AND TO_CHAR(AWB_DATE,'DDMONYY') = #awbDate# AND TRANSITION_YN='Y'
          	UNION
        	SELECT COUNT(1) X FROM EXP_RCL_HD, EXP_RCL_BRKDN WHERE EXP_RCL_BRKDN.RCL_NO=EXP_RCL_HD.RCL_NO AND EXP_RCL_BRKDN.AWB_NO=#awbNo# AND TO_CHAR(EXP_RCL_BRKDN.AWB_DATE,'DDMONYY') = #awbDate# AND EXP_RCL_HD.TRANSITION_YN='Y'
    	)
    </select>
	
	
<!-- Added by swapneswari for SuperSede Transition By Flight :Start -->

	<select id="fetchtransitionList" parameterClass="cargo.cms.trn.bo.SuperSedeTransitionBO"
		resultClass="cargo.cms.trn.bo.SuperSedeTransitionBO">
		select a.flt_key fltNo,
		to_char(a.flt_date,'DDMONYY') fltdate,
		a.flt_type fltType,
		decode(a.flt_type,'I',(select imp_cto from trn_setup_carr where CARR_CODE =substr(a.flt_key,0,2)),
		(select exp_cto from trn_setup_carr where CARR_CODE =substr(a.flt_key,0,2))) orgHndlBy,
		a.handled_by handledBy,
		a.tr_no trNo
		from trn_setup_flt a where
		a.tr_no is not null
		<isNotEmpty property="fltNo">
			and a.flt_key=#fltNo#
	    </isNotEmpty>
		<isNotEmpty property="fltdate">
			and to_char(a.flt_date,'DDMONYY')=to_date(#fltdate#,'DDMONYY')
		</isNotEmpty>
		<isNotEmpty property="fltType">
			and	a.flt_type = #fltType#
		</isNotEmpty>
		<isNotEmpty property="carr">
			and substr(a.flt_key,0,2)=#carr#
				</isNotEmpty>
		<isNotEmpty property="handledBy">
			<isEqual compareValue="CPCT" property="handledBy">
				and (a.handled_by ='Manual' or a.handled_by ='CPCT')
			        </isEqual>
			<isEqual compareValue="HACTL" property="handledBy">
				and (a.handled_by ='Manual' or a.handled_by ='HACTL')
			        </isEqual>
			<isEqual compareValue="Manual" property="handledBy">
				and (a.handled_by ='Manual' or a.handled_by ='HACTL' or a.handled_by ='CPCT')
			        </isEqual>
		</isNotEmpty>
		order by a.flt_date,a.flt_key
	</select>
	<insert id="saveTransitDetails" parameterClass="cargo.cms.trn.bo.SuperSedeTransitionBO">
		INSERT INTO trn_setup_flt
		(tr_no,flt_type,flt_key,flt_date,handled_by,cr_date,cr_user_id,lm_user_id,lm_date)
		VALUES
		(TRN_SETUP_FLT_SEQ.nextval,#crtype#,#crfltNum#,to_date(#crdate#,'DDMONYY'),#crhndlBy#,sysdate,#userID#,#userID#,sysdate)
	</insert>

<update id="updateTransitDetails" parameterClass="cargo.cms.trn.bo.SuperSedeTransitionBO">
		update trn_setup_flt 
		set handled_by=#crhndlBy# 
		where
		flt_key=#crfltNum# and flt_date=to_date(#crdate#,'DDMONYY')
		and flt_type=#crtype# 
	</update>
	<delete id="deleteTransitList" parameterClass="cargo.cms.trn.bo.SuperSedeTransitionBO">
		delete from trn_setup_flt where tr_no=#trNo# 
	</delete>
	<select id="chkTrnFlightExistorNot" parameterClass="map" resultClass="java.lang.Integer">
		select count(1) from trn_setup_flt where
		flt_key=#crfltNum# and flt_date=to_date(#crdate#,'DDMONYY')
		and flt_type=#crtype# 
		<isNotEmpty property="crhndlBy">
      			and handled_by=#crhndlBy#
      	        </isNotEmpty>		
	</select>
	<select id="chkFFMReceivedorNot" parameterClass="cargo.cms.trn.bo.SuperSedeTransitionBO"
		resultClass="java.lang.Integer">
		select count(1) from trn_ffm_msg where
		flt_key=#fltNo# and flt_date=to_date(#fltdate#,'DDMONYY')
		and flt_type=#fltType#
	</select>
	<select id="chkFFMConfirmedorNot" parameterClass="cargo.cms.trn.bo.SuperSedeTransitionBO"
		resultClass="java.lang.Integer">
		select count(1) from trn_ffm_msg where
		flt_key=#fltNo# and flt_date=to_date(#fltdate#,'DDMONYY')
		and flt_type=#fltType# and confirm_yn = 'Y'
	</select>
	<select id="chkFBLReceivedorNot" parameterClass="cargo.cms.trn.bo.SuperSedeTransitionBO"
		resultClass="java.lang.Integer">
		select count(1) from trn_fbl where
		flt_key=#fltNo# and flt_date=to_date(#fltdate#,'DDMONYY')
		and flt_type=#fltType#
	</select>
	<select id="chkFBLConfirmedorNot" parameterClass="cargo.cms.trn.bo.SuperSedeTransitionBO"
		resultClass="java.lang.Integer">
		select count(1) from trn_fbl where
		flt_key=#fltNo# and flt_date=to_date(#fltdate#,'DDMONYY')
		and flt_type=#fltType# and confirm_yn = 'Y'
	</select>
	
	<select id="isCTOIsSameToOrginal" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM TRN_SETUP_CARR WHERE CARR_CODE=#carrCode# AND DECODE(#fltType#, 'I', IMP_CTO, EXP_CTO)=#orgHandledBy#
	</select>
	
	<select id="trn_flt_validate_by_type"  parameterClass="map"  resultClass="java.lang.Integer">
		SELECT NVL(COUNT(1),0) FROM TRN_FLT_OPR WHERE CARR_CODE=#carrierCode# AND FLT_NO=#flightNo# 
			AND SCH_DATE= TO_DATE( #flightDate#, 'DDMONYY') 
			<isEqual property="flightType" prepend="AND" compareValue="I">
	        	FLT_TYPE = 'A'
	        </isEqual>
            <isEqual property="flightType" prepend="AND" compareValue="E">
	            FLT_TYPE = 'D'
	        </isEqual>
   	</select>
<!-- Added by swapneswari for SuperSede Transition By Flight :End -->	

<!-- Transition Setup - Starts - Santosh D   -->

	<select id="transitsetup_getNextTrNo" parameterClass="map" resultClass="java.lang.Integer">	   	
	   	 SELECT TRN_SETUP_SEQ.NEXTVAL from DUAL
   	</select>
   	
   	
   	<delete id="deleteTransitSetup" parameterClass="map">
		delete trn_setup
	</delete>
	
	<delete id="deleteTransitSetupCarr" parameterClass="map">
		delete trn_setup_carr
	</delete>
	
	<delete id="deleteTransitSetupEload" parameterClass="map">
		delete trn_setup_eload
	</delete>
	
	<delete id="deleteTransitSetupShc" parameterClass="map">
		delete trn_setup_shc
	</delete>
	
	<delete id="deleteTransitSetupShcDetails" parameterClass="cargo.cms.trn.bo.TransitionSetupBO">
		delete from trn_setup_shc
		where tr_no = #trNo#
		and doc_line_no	= #docLineNo#	
	</delete>	
	
	<select id="fetchTransitSetup" parameterClass="map" resultClass="cargo.cms.trn.bo.TransitionSetupBO">
		select 
		to_char(period_frm,'DDMONYY') transPeriodFrom,
		to_char(period_to,'DDMONYY') transPeriodTo,
		auto_split_ffm autoSplitffm,
		auto_split_fbl autoSplitfbl,
		part_shpmnt partShipment, 
		trn_stage stage 
		from trn_setup
	</select>	
	
	<select id="fetchTransitSetupCarr" parameterClass="map" resultClass="cargo.cms.trn.bo.TransitionSetupBO">
		select 		
		carr_code carrier,
		exp_cto expCTO,
		imp_cto impCTO,
		exp_cto_lt expCTOLT,
		imp_cto_tm impCTOTMULD,
		imp_cto_cour impCTOCourULD,
		imp_cto_oth impCTOothrCPMULD,
		TT_TRF_TYPE trfTypett,
		IF_TRF_TYPE trfTypeif, 
		QT_TRF_TYPE trfTypeqt
		from trn_setup_carr
	</select>	
	
	<select id="fetchTransitSetupEload" parameterClass="map" resultClass="cargo.cms.trn.bo.TransitionSetupBO">
		select 		
		exp_local_bu exportLocalBUCargoType,
		courier courierCargoType,
		exp_local_ppk exportLocalPPKCargoType,
		mail mailCargoType,
		open openCargoType,
		eic eicCargoType		
		from trn_setup_eload	
	</select>
	
	<select id="fetchTransitSetupShc" parameterClass="map" resultClass="cargo.cms.trn.bo.TransitionSetupBO">
		select 	
		tr_no trNo,
		doc_line_no docLineNo,	
		shc_type shcType,
		shc shc,
		exp_trmnl expShip,
		imp_trshp_trmnl impTransShip			
		from trn_setup_shc		
	</select>		
	
	<insert id="insertTransitSetup" parameterClass="cargo.cms.trn.bo.TransitionSetupBO">
		insert into trn_setup(tr_no,period_frm,period_to,auto_split_ffm,auto_split_fbl,part_shpmnt,
		cr_user_id,cr_date,lm_user_id,lm_date,TRN_STAGE)
		values(#trNo#,to_date(#transPeriodFrom#,'DDMONYY'),to_date(#transPeriodTo#,'DDMONYY'),
		#autoSplitffm#,#autoSplitfbl#,#partShipment#,#createdUserId#,SYSDATE,#createdUserId#,SYSDATE,
		#stage#)
	</insert>
	
	<insert id="insertTransitSetupCarr" parameterClass="cargo.cms.trn.bo.TransitionSetupBO">
		insert into trn_setup_carr(tr_no,doc_line_no,carr_code,exp_cto,imp_cto,exp_cto_lt,
		imp_cto_tm,imp_cto_cour,imp_cto_oth,cr_user_id,cr_date,lm_user_id,lm_date,TT_TRF_TYPE,IF_TRF_TYPE,QT_TRF_TYPE) 
		values (#trNo#,TRN_SETUP_CARR_SEQ.nextval,#carrier#,#expCTO#,#impCTO#,#expCTOLT#,
		#impCTOTMULD#,#impCTOCourULD#,#impCTOothrCPMULD#,#createdUserId#,SYSDATE,
		#createdUserId#,SYSDATE,#trfTypett#,#trfTypeif#,#trfTypeqt#)
	</insert>
	
	<insert id="insertTransitSetupEload" parameterClass="cargo.cms.trn.bo.TransitionSetupBO">
		insert into trn_setup_eload(tr_no,doc_line_no,exp_local_bu,courier,exp_local_ppk,
		mail,open,eic,cr_user_id,cr_date,lm_user_id,lm_date) 
		values (#trNo#,TRN_SETUP_ELOAD_SEQ.nextval,#exportLocalBUCargoType#,#courierCargoType#,
		#exportLocalPPKCargoType#,#mailCargoType#,#openCargoType#,#eicCargoType#,#createdUserId#,
		SYSDATE,#createdUserId#,SYSDATE)
	</insert>
	
	<insert id="insertTransitSetupShc" parameterClass="cargo.cms.trn.bo.TransitionSetupBO">
		insert into trn_setup_shc(tr_no,doc_line_no,shc_type,shc,exp_trmnl,imp_trshp_trmnl,
		cr_user_id,cr_date,lm_user_id,lm_date) 
		values (#trNo#,TRN_SETUP_SHC_SEQ.nextval,#shcType#,#shc#,#expShip#,#impTransShip#,
		#createdUserId#,SYSDATE,#createdUserId#,SYSDATE)
	</insert>
	
	<select id="fetchCarrierSetup" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		SELECT 
			COUNT(1) 
		FROM 
			TRN_SETUP, TRN_SETUP_CARR 
		WHERE 
			TRN_SETUP_CARR.TR_NO=TRN_SETUP.TR_NO AND TRN_SETUP_CARR.CARR_CODE=#carrierCode# AND SYSDATE BETWEEN TRN_SETUP.PERIOD_FRM 
			AND TRN_SETUP.PERIOD_TO
	</select>
	
	<select id="fetchSchDateByOutboundFlt" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT TO_CHAR(SCH_DATE, 'MM/DD/YYYY') FROM TRN_FLT_OPR_LEG WHERE FLT_KEY=#fltKey# AND SCH_DATE=TO_DATE(#fltDate#, 'MM/DD/YYYY') AND OFF_POINT=#port# AND FLT_TYPE='D'
	</select>
	
	<select id="fetchSchDateByInboundFlt" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT TO_CHAR(SCH_DATE, 'MM/DD/YYYY') FROM TRN_FLT_OPR_LEG WHERE FLT_KEY=#fltKey# AND SCH_DEP_DATE=TO_DATE(#fltDate#, 'MM/DD/YYYY') AND BRD_POINT=#port# AND FLT_TYPE='A'
	</select>
	
	<select id="fetchDateSetup" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM TRN_SETUP WHERE TO_DATE(#fltDate#, 'MM/DD/YYYY') BETWEEN TRN_SETUP.PERIOD_FRM AND TRN_SETUP.PERIOD_TO
	</select>
	
	<select id="fetchIfSysdateInSetup" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM TRN_SETUP WHERE TRUNC(SYSDATE) BETWEEN PERIOD_FRM AND PERIOD_TO
	</select>
	
	<select id="fetchFlightIsUnderTrnPeriod" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		SELECT 
			COUNT(1) 
		FROM 
			TRN_SETUP, TRN_SETUP_CARR 
		WHERE 
			TRN_SETUP_CARR.TR_NO=TRN_SETUP.TR_NO AND TRN_SETUP_CARR.CARR_CODE=#carrCode# AND TO_DATE(#fltDate#, 'DDMONYY') BETWEEN TRN_SETUP.PERIOD_FRM 
			AND TRN_SETUP.PERIOD_TO
	</select>	
	
	<select id="fetchPDDTSITAAddress" parameterClass="java.lang.String" resultClass="cargo.cms.afw.bo.MasterBO">
		SELECT CODE AS codeId, CODE_DESC  as codeDesc FROM MAST_CODE_DTL WHERE CODE_TYPE='PDDT_SITA_ADD'
	</select>
<!-- Transition Setup - Ends - Santosh D   -->

<!-- Daily Flight Changes :: Starts -->
	<insert id="FLT_insertInTrnFLTOPR" parameterClass="cargo.cms.flight.bo.FlightBO">
		<![CDATA[
			INSERT INTO TRN_FLT_OPR(
				TR_NO, CARR_CODE, FLT_NO, FLT_KEY, ORG_FLT_DATE, SCH_DATE, FLT_TYPE, EST_DATE, 
				EST_TIME, ACT_DATE, ACT_TIME, SVC_TYPE, ACFT_TYPE, ACFT_REG_NO, STATUS, SCH_GATE,
				ACFT_PRK_BAY, DELAY_CODE,GROUND_HANDLER, PRTY_IND, WTHR_COND, RMK, JV_CODE, 
				WH_LEVEL, BRKBUP_OFF, TR_STATUS,CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE,CGO_ACFT_TYPE,
				FLT_MODULE1,FLT_MODULE2,CHKOUT_AREA,TO_IND
				)
			VALUES(
				#txnNo#,UPPER(#flightCarr#),UPPER(#flightNo#),UPPER(#flightKey#),TO_DATE(#orgFltDate#,'DDMONYY'),
				TO_DATE(#schDate#,'DDMONYY'),#flightType#,TO_DATE(#estDate#,'DDMONYY'),#hrAndMinEst#,
				TO_DATE(#actDate#,'DDMONYY'),#hrAndMinAct#,#svcType#,#airCraftType#,#arcftRegionNo#,
				#arrDepStatus#,#gate#,#bay#,#delayCode#,#handler#,#priorityInd#,#weather#,#remarks#,
				#jvInd#,#warehouselvl#,#buildBreakDown#,'N',#userId#,SYSDATE,#userId#,SYSDATE,
				#cargoArcftType#,#fltModule1#,#fltModule2#,#chkOutArea#,#toIndicator#
	  			)	
		]]>
	</insert>
	
	<update id="FLT_updateTrnFLTOPROther" parameterClass="cargo.cms.flight.bo.FlightBO">
		UPDATE	TRN_FLT_OPR SET EST_DATE = TO_DATE(#estDate#,'DDMONYY'), EST_TIME = #hrAndMinEst#,
				ACT_DATE = TO_DATE(#actDate#,'DDMONYY'), ACT_TIME = #hrAndMinAct#,
				SVC_TYPE = #svcType#, ACFT_TYPE = #airCraftType#, ACFT_REG_NO = #arcftRegionNo#,
				STATUS = #arrDepStatus#, SCH_GATE = #gate#, ACFT_PRK_BAY = #bay#, DELAY_CODE = #delayCode#,
				GROUND_HANDLER = #handler#, PRTY_IND = #priorityInd#, WTHR_COND = #weather#, RMK = #remarks#,
				JV_CODE = #jvInd#, WH_LEVEL = #warehouselvl#, TR_STATUS = 'U',
				LM_USER_ID = #userId#, LM_DATE = SYSDATE,
				CGO_ACFT_TYPE = #cargoArcftType#, FLT_MODULE1 = #fltModule1#,FLT_MODULE2 = #fltModule2# , 
				CHKOUT_AREA = #chkOutArea# , TO_IND = #toIndicator#, TR_TYPE =#trtype#
		WHERE	TR_NO = #txnNo#
	</update>
	
	<insert id="FLT_insertInTrnFLTOPRLEG" parameterClass="cargo.cms.flight.bo.FlightLegBO" >
	<![CDATA[
		INSERT INTO TRN_FLT_OPR_LEG(
			TR_NO, DOC_LINE_NO, CARR_CODE, FLT_NO, FLT_KEY, ORG_FLT_DATE, SCH_DATE,
			BRD_POINT, OFF_POINT, LEG_ORD,SCH_DEP_DATE, SCH_DEP_TIME,
			SCH_ARR_DATE, SCH_ARR_TIME, ACFT_TYPE,JNT_CAR_1,JNT_FLT_1,
			JNT_CAR_2,JNT_FLT_2,JNT_CAR_3,JNT_FLT_3,JNT_CAR_4,JNT_FLT_4,
			JNT_CAR_5,JNT_FLT_5,JNT_CAR_6,JNT_FLT_6,
			TR_STATUS, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE,FLT_TYPE,PROHIBIT_SHC1,PROHIBIT_SHC2,PROHIBIT_SHC3,HSE_BU_IND,AUTO_ASSGN_ULD, TR_TYPE)
	  	VALUES(
			#txnNo#,#docLineNo#,UPPER(#flightCarr#),UPPER(#flightNo#),UPPER(#flightKey#),TO_DATE(#orgFltDate#,'DDMONYY'),
			TO_DATE(#schDate#,'DDMONYY'), UPPER(#fromLoc#), UPPER(#toLoc#),#srlNo#,TO_DATE(#schDepDate#,'DDMONYY'),
			#hrAndMinSchDep#,TO_DATE(#schArrDate#,'DDMONYY'),#hrAndMinSchArr#,#airCraftType#,
			UPPER(#jointFltCar1#),UPPER(#jointFltNo1#), UPPER(#jointFltCar2#), UPPER(#jointFltNo2#), UPPER(#jointFltCar3#),
			UPPER(#jointFltNo3#), UPPER(#jointFltCar4#), UPPER(#jointFltNo4#), UPPER(#jointFltCar5#), UPPER(#jointFltNo5#), 
			UPPER(#jointFltCar6#), UPPER(#jointFltNo6#),'N',#userId#,SYSDATE,#userId#,SYSDATE,#flightType#,#prohibitedShc1#,#prohibitedShc2#,
			#prohibitedShc3#,NVL(#houseBldConfig#,'N'),#autoAssignUld#, 'FLTCR')
	]]>
	</insert>
	
	<update id="FLT_updateTrnFLTOPRLEG" parameterClass="cargo.cms.flight.bo.FlightLegBO">
		UPDATE	TRN_FLT_OPR_LEG SET BRD_POINT =  UPPER(#fromLoc#), OFF_POINT =  UPPER(#toLoc#),LEG_ORD = #srlNo#,
				SCH_DEP_DATE = TO_DATE(#schDepDate#,'DDMONYY'), SCH_DEP_TIME = #hrAndMinSchDep#,
				SCH_ARR_DATE = TO_DATE(#schArrDate#,'DDMONYY'), SCH_ARR_TIME = #hrAndMinSchArr#, ACFT_TYPE = #airCraftType#,
				JNT_CAR_1 =  UPPER(#jointFltCar1#), JNT_FLT_1 = UPPER(#jointFltNo1#), JNT_CAR_2 =  UPPER(#jointFltCar2#), 
				JNT_FLT_2 =  UPPER(#jointFltNo2#), JNT_CAR_3 =  UPPER(#jointFltCar3#), JNT_FLT_3 = UPPER(#jointFltNo3#),
				JNT_CAR_4 =  UPPER(#jointFltCar4#), JNT_FLT_4 = UPPER(#jointFltNo4#),	JNT_CAR_5 =  UPPER(#jointFltCar5#), 
				JNT_FLT_5 =  UPPER(#jointFltNo5#), JNT_CAR_6 =  UPPER(#jointFltCar6#), JNT_FLT_6 =  UPPER(#jointFltNo6#),
				PROHIBIT_SHC1 = UPPER(#prohibitedShc1#),PROHIBIT_SHC2 = UPPER(#prohibitedShc2#),PROHIBIT_SHC3 = UPPER(#prohibitedShc3#),
				HSE_BU_IND = #houseBldConfig#, AUTO_ASSGN_ULD = #autoAssignUld#, LM_USER_ID=#userId#, LM_DATE=SYSDATE 
		WHERE	TR_NO = #txnNo# AND DOC_LINE_NO = #docLineNo#
	</update>
	
	<update id="FLT_updateTrnFLTOPR" parameterClass="cargo.cms.flight.bo.FlightBO">
	<![CDATA[
			UPDATE  TRN_FLT_OPR SET ORIG = UPPER(#fromLoc#), ORIG_DATE = TO_DATE(#orgFltDate#,'DDMONYY'), 
					ORIG_TIME = #fromLocHrMin#, DEST =  UPPER(#toLoc#), 
					SCH_TIME = DECODE(FLT_TYPE,'A',#toLocHrMin#,'D', #fromLocHrMin#, 'B', #fromLocHrMin#),
					DEST_DATE = TO_DATE(#schDateTo#,'DDMONYY'), DEST_TIME = #toLocHrMin#,
					CGO_ACFT_TYPE = #cargoArcftType#, TR_TYPE=#trtype#, LM_USER_ID=#userId#, LM_DATE=SYSDATE 
			WHERE	TR_NO = #txnNo#
		]]>
	</update>
	
	<parameterMap id="FLT_trn_proc_callmap" class="map" >
		<parameter property="TRXN_NO"  jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	</parameterMap>
	<procedure id="FLT_trn_proc_call" parameterMap="FLT_trn_proc_callmap" >
		{call PRO_TRN_CREATE_SEGMENT(?)}
	</procedure>
	
	<select id="fetchTrnFltOprTrNo" parameterClass="cargo.cms.flight.bo.FlightBO" resultClass="java.lang.String">
		SELECT TR_NO FROM TRN_FLT_OPR WHERE FLT_KEY=#flightKey# AND SCH_DATE=TO_DATE(#schDate#, 'DDMONYY') AND FLT_TYPE=#flightType#
	</select>
	
	<select id="fetchTrnFltOprLegDocLineNo" parameterClass="cargo.cms.flight.bo.FlightLegBO" resultClass="java.lang.String">
		SELECT DOC_LINE_NO FROM TRN_FLT_OPR_LEG WHERE TR_NO=#txnNo# AND BRD_POINT=#fromLoc#
	</select>
	
	<delete id="deleteTrnFltOprSeq" parameterClass="java.lang.String">
		DELETE FROM TRN_FLT_OPR_SEG WHERE TR_NO = #trNo#
	</delete>
	
	<insert id="insertTrnFltOprSeq" parameterClass="java.util.HashMap">
		<![CDATA[
		INSERT INTO TRN_FLT_OPR_SEG
    		(TR_NO, DOC_LINE_NO, CARR_CODE, FLT_NO, FLT_KEY, FLT_TYPE, ORG_FLT_DATE,
     		SCH_DATE, BRD_POINT, OFF_POINT, SEG_ORDER, SCH_DEP_DATE, LEG_FLG,
     		NFL_FLG, TECH_STP_FLG, FFM_FLG, ARM_DATE, PRTY_IND, FIN_FLG, FFM_DATE,
     		SEG_STATUS, TR_STATUS, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE)
    		(SELECT #trNo#, ROWNUM, CARR_CODE, FLT_NO, FLT_KEY, FLT_TYPE,
            ORG_FLT_DATE, SCH_DATE, BRD_POINT, OFF_POINT, ROWNUM,
            SCH_DEP_DATE, LEG_FLG, NULL, 'N', NULL, NULL, NULL, NULL, NULL,
            NULL, 'N', CR_USER_ID, SYSDATE, LM_USER_ID, SYSDATE
       		FROM (SELECT A.CARR_CODE, A.FLT_NO, A.FLT_KEY, A.FLT_TYPE,
                     A.ORG_FLT_DATE, A.SCH_DATE, A.BRD_POINT, B.OFF_POINT,
                     A.LEG_ORD, A.SCH_DEP_DATE,
                     DECODE(A.OFF_POINT, B.OFF_POINT, 'Y', '') LEG_FLG,
                     A.CR_USER_ID, A.LM_USER_ID
                	FROM TRN_FLT_OPR_LEG A, TRN_FLT_OPR_LEG B
               		WHERE A.TR_NO = B.TR_NO
                 	AND A.LEG_ORD <= B.LEG_ORD
                 	AND A.TR_NO = #trNo#
               		ORDER BY A.LEG_ORD, DECODE(A.OFF_POINT, B.OFF_POINT, 'Y', '')))
    	]]>
	</insert>
	
	<select id="FLT_selectDailyFlightDataExternalforTrn"  parameterClass="map"  resultClass="cargo.cms.flight.bo.FlightBO">
	<![CDATA[
		SELECT 	TO_CHAR(OPR.TR_NO) txnNo, OPR.CARR_CODE flightCarr, OPR.FLT_NO flightNo, TO_CHAR(OPR.SCH_DATE,'DDMONYY') schDate,
				TO_CHAR(OPR.EST_DATE,'DDMONYY') estDate,TO_CHAR(OPR.ACT_DATE,'DDMONYY') actDate,OPR.FLT_TYPE flightType, 
				SUBSTR(TRIM(TO_CHAR(OPR.SCH_TIME,'0000')),0,2) schTimeHr,
				SUBSTR(TRIM(TO_CHAR(OPR.SCH_TIME,'0000')),3,4) schTimeMin,
				SUBSTR(TRIM(TO_CHAR(OPR.EST_TIME,'0000')),0,2) estTimeHr,
				SUBSTR(TRIM(TO_CHAR(OPR.EST_TIME,'0000')),3,4) estTimeMin,
				SUBSTR(TRIM(TO_CHAR(OPR.ACT_TIME,'0000')),0,2) actTimeHr,
				SUBSTR(TRIM(TO_CHAR(OPR.ACT_TIME,'0000')),3,4) actTimeMin,
				SUBSTR(TRIM(TO_CHAR(OPR.ORIG_TIME,'0000')),0,2) schTimeDepHr,
				SUBSTR(TRIM(TO_CHAR(OPR.ORIG_TIME,'0000')),3,4) schTimeDepMin,
				SUBSTR(TRIM(TO_CHAR(OPR.DEST_TIME,'0000')),0,2) schTimeArrHr,
				SUBSTR(TRIM(TO_CHAR(OPR.DEST_TIME,'0000')),3,4) schTimeArrMin,
				OPR.ORIG fromLoc, OPR.DEST toLoc, OPR.SVC_TYPE svcType,OPR.CGO_ACFT_TYPE cargoArcftType, 
				OPR.ACFT_REG_NO arcftRegionNo,OPR.STATUS arrDepStatus,OPR.SCH_GATE gate,OPR.ACFT_PRK_BAY bay,
				OPR.DELAY_CODE delayCode,OPR.GROUND_HANDLER handler,TO_CHAR(OPR.PRTY_IND) priorityInd,OPR.WTHR_COND weather,
				OPR.RMK remarks,OPR.JV_CODE jvInd,OPR.WH_LEVEL warehouselvl,OPR.BRKBUP_OFF buildBreakDown,
				NVL(EVENT.FFM_IND,'N') ffmInd, NVL(EVENT.DLS_IND,'N') dlsInd,
				OPR.FLT_MODULE1 fltmodule1, OPR.FLT_MODULE2 fltmodule2, CHKOUT_AREA chkOutArea, ACFT_PRK_BAY arrDepStatus,
				TO_IND toIndicator,
			   (select cc.CODE_DESC from CUST_COMPANY cc where cc.code=
			   (select rho_id from CUST_COMPANY where CARR_CODE=OPR.CARR_CODE) )  rhoUserName 
		FROM	TRN_FLT_OPR OPR, TRN_FLT_OPR_EVENTS EVENT
		WHERE	OPR.FLT_KEY  = #flightKey#
		AND     OPR.SCH_DATE = to_date(#flightDate#,'DDMONYY')
		AND     OPR.FLT_TYPE = #flightType#
		AND		OPR.TR_NO = EVENT.TR_NO(+)		
		]]>
   	</select>
   	
   	<select id="FLT_selectDailyFlightLegDataforTrn"  parameterClass="map"  resultClass="cargo.cms.flight.bo.FlightLegBO">
	<![CDATA[
		SELECT 	TO_CHAR(TR_NO) txnNo, TO_CHAR(DOC_LINE_NO) docLineNo, BRD_POINT fromLoc,
				OFF_POINT toLoc, TO_CHAR(LEG_ORD) srlNo,
				TO_CHAR(SCH_ARR_DATE,'DDMONYY') schArrDate,
				SUBSTR(TRIM(TO_CHAR(NVL(SCH_ARR_TIME,0),'0000')),0,2) schArrTimeHr,
				SUBSTR(TRIM(TO_CHAR(NVL(SCH_ARR_TIME,0),'0000')),3,4) schArrTimeMin,
				TO_CHAR(SCH_DEP_DATE,'DDMONYY') schDepDate,
				SUBSTR(TRIM(TO_CHAR(NVL(SCH_DEP_TIME,0),'0000')),0,2) schDepTimeHr,
				SUBSTR(TRIM(TO_CHAR(NVL(SCH_DEP_TIME,0),'0000')),3,4) schDepTimeMin,
				ACFT_TYPE airCraftType, 
				JNT_CAR_1 jointFltCar1,JNT_FLT_1 jointFltNo1,JNT_CAR_2 jointFltCar2,JNT_FLT_2 jointFltNo2,
				JNT_CAR_3 jointFltCar3,JNT_FLT_3 jointFltNo3,JNT_CAR_4 jointFltCar4,JNT_FLT_4 jointFltNo4,
				JNT_CAR_5 jointFltCar5,JNT_FLT_5 jointFltNo5,JNT_CAR_6 jointFltCar6,JNT_FLT_6 jointFltNo6,
				PROHIBIT_SHC1 prohibitedShc1, PROHIBIT_SHC2 prohibitedShc2, PROHIBIT_SHC3 prohibitedShc3, HSE_BU_IND houseBldConfig, 
				AUTO_ASSGN_ULD autoAssignUld 
		FROM	TRN_FLT_OPR_LEG
		WHERE	TR_NO = #txnNo#	Order by LEG_ORD
		]]>
   	</select>
   	
   	<delete id="FLT_deleteFLTOPRLEGSingleForTrn" parameterClass="java.util.HashMap">
		DELETE TRN_FLT_OPR_LEG WHERE TR_NO = #txnNo# AND DOC_LINE_NO = #docLineNo#
	</delete>
	
	<delete id="FLT_deleteFLTOPRLEGSForTrn" parameterClass="java.lang.String">
		DELETE FROM TRN_FLT_OPR_LEG WHERE TR_NO=#txnNo#
	</delete>
	<delete id="FLT_deleteFLTOPREventsForTrn" parameterClass="java.lang.String">
		DELETE FROM TRN_FLT_OPR_EVENTS WHERE TR_NO=#txnNo#
	</delete>
	<delete id="FLT_deleteFLTOPRForTrn" parameterClass="java.lang.String">
		DELETE FROM TRN_FLT_OPR WHERE TR_NO=#txnNo#
	</delete>
<!-- Daily Flight Changes :: Ends -->

<!-- FFM Inbound Message :: Anup :: Begins -->
	<insert id="createTrnFfmMsg" parameterClass="cargo.cms.trn.bo.TrnFFMMessageBO">
		INSERT INTO TRN_FFM_MSG 
			(TR_NO, CARR_CODE, FLT_NO, FLT_DATE, FLT_KEY, BRD_POINT, MSG_SEQ_NUM , COPY_NO, MSG_VER, SEND_DATE, ACFT_REG_NO, FFM_STATUS, 
			ALT_FLIGHT_CAR, ALT_FLIGHT_NO, ALT_FLIGHT_DATE, SI_TYPE,ACCESS_LEVEL, TOTAL_COUNT, TR_TYPE, TOTAL_PCS, TOTAL_WT, TOTAL_UAWB, VERSION_NO, 
			AUTO_IND, CONFIRM_YN, CTO, VER_NO_AFTER_CONF, MSG_HDR) 
		VALUES 
			(#trNo#, #carrierCode#, #flightNo#, TO_Date(#flightDate#, 'MM/DD/YYYY'), #flightKey#, #loadingPoint#, #msgSeqNo#, #copyNo#, 
			#msgVersionNumber#, SUBSTR(SYSDATE,1,9), #arcftRegNo#, #status# , NULL, NULL, NULL, 'I', NULL, 1, 'MEFFM', nvl(#totalPcs#,0), 
			nvl(#totalWt#,0), nvl(#totalUAWB#,0), (SELECT NVL(MAX(VERSION_NO), 0) + 1 FROM TRN_FFM_MSG WHERE FLT_KEY=#flightKey# 
			AND FLT_DATE=TO_DATE(#flightDate#, 'MM/DD/YYYY')), NVL(#autoInd#, 'N'), NVL(#confirmYN#, 'N'), #fltCTO#, (SELECT NVL(MAX(VERSION_NO), 0) + 1 FROM TRN_FFM_MSG WHERE FLT_KEY=#flightKey# 
			AND FLT_DATE=TO_DATE(#flightDate#, 'MM/DD/YYYY')), #messageAddressHeader#)
	</insert>
	
	<insert id="createTrnFfmShp" parameterClass="cargo.cms.trn.bo.TrnFFMShipmentBO">
		INSERT INTO TRN_FFM_SHP 
			(TR_NO, DOC_LINE_NO, UDOC_LINE_NO, BRD_POINT, OFF_POINT, AWB_NO, AWB_DATE, ORG, DEST, CONTENT, WT, WT_UNIT, VOL_UNIT, VOL_AMT, CNSL_IND, 
			ACCS_IND, LBS_IND, EMPTY_IND, EIC_IND, SURPLUS_IND, CFM_IND, LOC_CODE, RMK, COD_APT_FDS, CNG_TYPE, MAN_PCS, MAN_WT, MAN_VOL, PCS, 
			DES_SHP_NOG, PART_SHMPT_YN, SPL_CODE1, SPL_CODE2, SPL_CODE3, SPL_CODE4, SPL_CODE5, SPL_CODE6, SPL_CODE7, SPL_CODE8, COD_DEN, DES_SHP_OSI_1, 
			DES_SHP_OSI_2, COD_COM_TRN_STS, CNTG_FLT_CARR1, CNTG_FLT_NO1, CNTG_FLT_DATE1, CNTG_DEST1, CNTG_FLT_CARR2, CNTG_FLT_NO2, CNTG_FLT_DATE2, 
			CNTG_DEST2, CNTG_FLT_CARR3, CNTG_FLT_NO3, CNTG_FLT_DATE3, CNTG_DEST3, COD_ONW_PRI, COD_DIS_ODR, DES_CUS_REF, SHP_WGT_LBS, MOV_PRI_CODE, 
			SHMPT_CODE, TR_TYPE, CTO,CUST_ORG_CODE, ISO_CTRY_CODE1, INFO_IDENTIFIER1, CUSTOMS_INFO_IDENTIFIERI, SUPP_CUSTOMS_INFO1, ISO_CTRY_CODE2, 
			INFO_IDENTIFIER2, CUSTOMS_INFO_IDENTIFIER2, SUPP_CUSTOMS_INFO2) 
		VALUES 
			(#trNo#, #docLineNo#, #udocLineNo#, #loadingPoint#, #unLoadingPoint#, #awbNo#, #awbDate#, #origin#, #dest#, #natureOfGoods#, 
			#weight#, #weightCode#, #volumeCode#, #volumeAmount#, #cnslIndicator#, NULL, NULL, NULL, NULL, NULL, NULL, #locCode#, NULL, 'COD', 'T', 
			#manPieces#, #manWeight#, #manVolume#, #totalPieces#, NULL, #partShippment#, #specialCode1#, #specialCode2#, NULL, NULL, NULL, NULL, NULL, 
			NULL, NULL, #osiText1#, #osiText2#, NULL, #cntgFlightCarrierCode1#, #cntgFlightNo1#, TO_Date(#cntgFlightDate1#, 'MM/DD/YYYY'), 
			#cntgNextDestAirportCode1#, #cntgFlightCarrierCode2#, #cntgFlightNo2#, TO_Date(#cntgFlightDate2#, 'MM/DD/YYYY'), #cntgNextDestAirportCode2#, 
			#cntgFlightCarrierCode3#, #cntgFlightNo3#, TO_Date(#cntgFlightDate3#, 'MM/DD/YYYY'), #cntgNextDestAirportCode3#, #mvtPriorityCode#, NULL, 
			NULL, NULL, #mvtPriorityCode#, #shipmentDescCode#, 'MEFFM', #awbCTO#,#customsOriginCode#, #isoCountryCode1#, #informationIdentifier1#, #customsInformationIdentifier1#, 
			#suppCustomsInformation1#, #isoCountryCode2#, #informationIdentifier2#, #customsInformationIdentifier2#, #suppCustomsInformation2#)
	</insert>
	
	<insert id="createTrnFfmUld" parameterClass="cargo.cms.trn.bo.TrnFFMUldBO">
		INSERT INTO TRN_FFM_ULD 
			(TR_NO, DOC_LINE_NO, ULD_TYPE, ULD_NO, ULD_CARR, ULD_KEY, BRD_POINT, OFF_POINT, CNTG_FLT_CARR1, CNTG_FLT_NO1, CNTG_FLT_DATE1, 
			CNTG_DEST1, CNTG_FLT_CARR2, CNTG_FLT_NO2, CNTG_FLT_DATE2, CNTG_DEST2, CNTG_FLT_CARR3, CNTG_FLT_NO3, CNTG_FLT_DATE3, CNTG_DEST3, 
			ULD_LOD_IND, ULD_VOL_AVA, DIS_ODR, ULD_RMK, NIL_IND, VOL_AVAIL_CODE) 
		VALUES 
			(#trNo#,#docLineNo#, #uldType#, #uldNo#, #uldCarrierCode#, #uldKey#, #loadingPoint#, #unLoadingPoint#, #uldCntgFlightCarrierCode1#, 
			#uldCntgFlightNo1#, TO_Date(#uldCntgFlightDate1#, 'MM/DD/YYYY'), #uldCntgNextDestAirportCode1#, #uldCntgFlightCarrierCode2#, #uldCntgFlightNo2#, 
			TO_Date(#uldCntgFlightDate2#, 'MM/DD/YYYY'), #uldCntgNextDestAirportCode2#, #uldCntgFlightCarrierCode3#, #uldCntgFlightNo3#, 
			TO_Date(#uldCntgFlightDate3#, 'MM/DD/YYYY'), #uldCntgNextDestAirportCode3#, #uldLoadingIndicator#, #uldVolumeAvailability#, #uldDisorder#, 
			#uldRemarks#, #nilCargoIndicator#, #uldVolumeCode#)
	</insert>
	
	<insert id="createTrnFfmShpDmn" parameterClass="cargo.cms.trn.bo.TrnFFMShpDmnBO">
		INSERT INTO TRN_FFM_SHP_DMN 
			(TR_NO, DOC_LINE_NO, SDOC_LINE_NO, LENGTH, WIDTH, HEIGHT, PCS, WT, WT_UNIT, DMN_UNT, DMN_WGT_LBS,CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE) 
		VALUES 
			(#trNo#, TRN_FFM_SHP_DMN_SEQ.NEXTVAL, #sdocLineNo#, #dim_Length#, #dim_Width#, #dim_Height#, #dim_NoOfPieces#, #dim_Weight#, #dim_WeightCode#, 
			#dim_MsrUnitCode#, NULL, 'SYSUSER', SYSDATE, 'SYSUSER', SYSDATE)
	</insert>
	
	<select id ="fetchTrnFfmMsgSeqNo" resultClass="java.lang.String">
		SELECT TRN_FFM_MSG_SEQ.NEXTVAL as trNo FROM DUAL
	</select>
	
	<select id="fetchTrnFfmUldSeqNo" resultClass="java.lang.Integer">
		SELECT TRN_FFM_ULD_SEQ.NEXTVAL AS docLineNo FROM DUAL
	</select>

	<select id="fetchTrnFfmShpSeqNo" resultClass="java.lang.Integer">
		SELECT TRN_FFM_SHP_SEQ.NEXTVAL AS docLineNo FROM DUAL
	</select>
	
	<select id="fetchTrnFfmMsgByFlt" parameterClass="cargo.cms.trn.bo.TrnFFMMessageBO" resultClass="cargo.cms.trn.bo.TrnFFMMessageBO">
		SELECT 
			TR_NO AS trNo, FFM_STATUS AS status, SUCCESS_MSGS AS successMsgsSeqNo, MSG_SEQ_NUM AS msgSeqNo, TOTAL_COUNT AS totalSplitMsgs, 
			COPY_NO AS copyNo, FLT_NO AS flightNo, FLT_KEY as flightKey, TO_CHAR(FLT_DATE ,'MM/DD/YYYY')AS flightDate, BRD_POINT AS loadingPoint, 
			LAST_IND AS lastIndicator 
		FROM 
			TRN_FFM_MSG 
		WHERE 
			FLT_KEY=#flightKey# AND FLT_DATE=TO_DATE(#flightDate#,'MM/DD/YYYY') AND BRD_POINT=#loadingPoint# AND FFM_STATUS='CONT' AND SI_TYPE='I' 
		<isNotNull prepend = "AND" property="trNo">
		 	TR_NO=#trNo#
		 </isNotNull>
	</select>

	<select id="fetchTrnFfmMsgByMaxCopyNoAndFlt" parameterClass="cargo.cms.trn.bo.TrnFFMMessageBO" resultClass="cargo.cms.trn.bo.TrnFFMMessageBO">		
		SELECT 
			TR_NO AS trNo, FFM_STATUS AS status, SUCCESS_MSGS AS successMsgsSeqNo, MSG_SEQ_NUM AS msgSeqNo, TOTAL_COUNT AS totalSplitMsgs, 
			COPY_NO AS copyNo, FLT_NO AS flightNo, FLT_KEY as flightKey, TO_CHAR(FLT_DATE ,'MM/DD/YYYY') AS flightDate, BRD_POINT AS loadingPoint, 
			MSG_VER AS msgVersionNumber, MSG_HDR AS messageAddressHeader 
		FROM 
			TRN_FFM_MSG 
		WHERE 
			FLT_KEY=#flightKey# AND FLT_DATE=TO_DATE(#flightDate#,'MM/DD/YYYY') AND BRD_POINT=#loadingPoint# AND SI_TYPE='I' 
			AND MSG_HDR = #messageAddressHeader# AND COPY_NO=(SELECT MAX(COPY_NO) AS copyNo FROM TRN_FFM_MSG WHERE FLT_KEY=#flightKey# AND FLT_DATE=TO_DATE(#flightDate#,'MM/DD/YYYY') 
			AND BRD_POINT=#loadingPoint# AND SI_TYPE='I' AND MSG_HDR = #messageAddressHeader#) 
		ORDER BY TR_NO DESC
	</select>
	
	<select id="fetchMaxDocLnNoForFfmUld" parameterClass="cargo.cms.trn.bo.TrnFFMUldBO" resultClass="java.lang.Integer">
		SELECT 
			MAX(DOC_LINE_NO) AS docLineNo 
		FROM 
			TRN_FFM_ULD 
		WHERE 
			ULD_KEY=#uldKey# AND TR_NO=#trNo# AND OFF_POINT=#unLoadingPoint#
	</select>
	
	<select id="fetchMaxDocLnNoForBulkShpInFfmUld" parameterClass="cargo.cms.trn.bo.TrnFFMUldBO" resultClass="java.lang.Integer">
		SELECT 
			MAX(DOC_LINE_NO) AS docLineNo 
		FROM 
			TRN_FFM_ULD 
		WHERE 
			ULD_KEY IS NULL AND TR_NO=#trNo# AND OFF_POINT=#unLoadingPoint#
	</select>
	
	<update id="updatesuccessMsgsSeqNoInFfmMsg" parameterClass="cargo.cms.trn.bo.TrnFFMMessageBO">
		UPDATE 
			TRN_FFM_MSG 
		SET 
			SUCCESS_MSGS=#successMsgsSeqNo# 
		WHERE 
			FLT_KEY=#flightKey# AND FLT_DATE=TO_DATE(#flightDate#,'MM/DD/YYYY') AND BRD_POINT=#loadingPoint# AND FFM_STATUS='CONT' AND SI_TYPE='I' 
		<isNotNull prepend="AND" property="trNo">	
			TR_NO=#trNo#
		</isNotNull>
	</update>
	
	<update id="updateFfmStatusInFfmMsg" parameterClass="cargo.cms.trn.bo.TrnFFMMessageBO">
		UPDATE 
			TRN_FFM_MSG 
		SET 
			FFM_STATUS=#status# 
		WHERE 
			FLT_KEY=#flightKey# AND FLT_DATE=TO_DATE(#flightDate#,'MM/DD/YYYY') AND BRD_POINT=#loadingPoint# AND FFM_STATUS='CONT' AND SI_TYPE='I'
		<isNotNull prepend="AND" property="trNo">	
		 	TR_NO=#trNo#
		</isNotNull>
	</update>
	
	<update id="updateFfmStatusForUnprocessedInFfmMsg" parameterClass="cargo.cms.trn.bo.TrnFFMMessageBO">
		UPDATE 
			TRN_FFM_MSG 
		SET 
			FFM_STATUS=#status# 
		WHERE 
			FLT_KEY=#flightKey# AND FLT_DATE=TO_DATE(#flightDate#,'MM/DD/YYYY') AND BRD_POINT=#loadingPoint# AND FFM_STATUS='UNPRO' AND SI_TYPE='I'
		<isNotNull prepend="AND" property="trNo">	
		 	TR_NO=#trNo#
		</isNotNull>
	</update>
	
	<update id="updateMsgSeqNoInFfmMsgByFlt" parameterClass="cargo.cms.trn.bo.TrnFFMMessageBO">
		UPDATE 
			TRN_FFM_MSG 
		SET 
			MSG_SEQ_NUM=#msgSeqNo# 
		WHERE 
			FLT_KEY=#flightKey# AND FLT_DATE=TO_DATE(#flightDate#,'MM/DD/YYYY') AND BRD_POINT=#loadingPoint# AND FFM_STATUS='CONT' AND SI_TYPE='I' 
		<isNotNull prepend="AND" property="trNo">	
			TR_NO=#trNo#
		</isNotNull>		
	</update>
	
	<update id="updateTotCntInFfmMsgByFlt" parameterClass="cargo.cms.trn.bo.TrnFFMMessageBO">
		UPDATE 
			TRN_FFM_MSG 
		SET 
			TOTAL_COUNT=(NVL(TOTAL_COUNT, 0) + 1) 
		WHERE 
			FLT_KEY=#flightKey# AND FLT_DATE=TO_DATE(#flightDate#,'MM/DD/YYYY') AND BRD_POINT=#loadingPoint# AND FFM_STATUS='CONT' AND SI_TYPE='I'
		<isNotNull prepend="AND" property="trNo">	
		 	TR_NO=#trNo#
		</isNotNull>		
	</update>
	
	<select id="fetchFltSubStatusInCustoms" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		SELECT 
			COUNT(1) 
		FROM 
			TRN_FFM_MSG MSG, CST_SUBM SUBM 
		WHERE 
			SUBM.FLT_KEY=MSG.FLT_KEY AND SUBM.FLT_DATE=MSG.FLT_DATE AND SUBM.REC_TYPE='INT' AND MSG.FLT_KEY=#flightKey# AND 
			MSG.FLT_DATE=TO_DATE( #flightDate#, 'MM/DD/YYYY') AND SUBM.SEND_STATUS NOT IN ('E','R')
	</select>
	
	<update id="updateAlFltDtlsInFfmMsg" parameterClass="java.util.HashMap">
		UPDATE 
			TRN_FFM_MSG 
		SET 
			ALT_FLIGHT_CAR=#altFlightCarrierCode# ,ALT_FLIGHT_NO=#altFlightNo#, ALT_FLIGHT_DATE=TO_Date(#altFlightDate#, 'MM/DD/YYYY'), 
			SI_TYPE=#siType# 
		WHERE 
			TR_NO=#TR_NO#
	</update>
	
	<update id="updateLastIndInFfmMsg" parameterClass="java.util.HashMap">
		UPDATE 
			TRN_FFM_MSG 
		SET 
			LAST_IND=#lastIndicator#, TOTAL_PCS=nvl(#totalPcs#,TOTAL_PCS), TOTAL_WT=nvl(#totalWt#,TOTAL_WT), TOTAL_UAWB=nvl(#totalUAWB#,TOTAL_UAWB) 
		WHERE 
			TR_NO=#trNo#
	</update>
	
	<update id="updateUnprocessedFfmStatusInFfmMsg" parameterClass="cargo.cms.trn.bo.TrnFFMMessageBO">
		UPDATE 
			TRN_FFM_MSG 
		SET 
			FFM_STATUS='UNPRO' 
		WHERE 
			FLT_KEY=#flightKey# AND FLT_DATE=TO_DATE(#flightDate#,'MM/DD/YYYY') AND BRD_POINT=#loadingPoint# AND FFM_STATUS='P' 
			AND SI_TYPE='I' AND TR_NO!=#trNo#
	</update>
	
	<select id="fetchAwbNoFromFfmShp" parameterClass="cargo.cms.trn.bo.TrnFFMMessageBO" resultClass="cargo.cms.trn.bo.TrnFFMShipmentBO">		
		SELECT 
			DISTINCT AWB_NO as awbNo 
		FROM 
			TRN_FFM_SHP 
		WHERE 
			TR_NO=#trNo# AND (SPL_CODE1 IN ('EAW','MAL','EAP') OR SPL_CODE2 IN ('EAW','MAL','EAP') OR SPL_CODE3 IN ('EAW','MAL','EAP') 
			OR SPL_CODE4 IN ('EAW','MAL','EAP') OR SPL_CODE5 IN ('EAW','MAL','EAP') OR SPL_CODE6 IN ('EAW','MAL','EAP') OR SPL_CODE7 
			IN ('EAW','MAL','EAP') OR SPL_CODE8 IN ('EAW','MAL','EAP') OR SPL_CODE9 IN ('EAW','MAL','EAP'))
     </select>
     
     <select id="fetchFinalizedFFMFromFfmMsg" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		SELECT 
			COUNT(1) 
		FROM 
			TRN_FFM_MSG 
		WHERE 
			FLT_KEY=#flightKey# AND FLT_DATE=TO_DATE(#flightDate#,'DDMONYY') AND FINALIZE_DATE IS NOT NULL AND FINALIZE_USER_ID IS NOT NULL
	</select>
	
	<select id="fetchFfmMsgByMaxCopNoFrmFfmMsg" parameterClass="cargo.cms.trn.bo.TrnFFMMessageBO" resultClass="cargo.cms.trn.bo.TrnFFMMessageBO">		
		SELECT 
			TR_NO AS trNo, FFM_STATUS AS status, SUCCESS_MSGS AS successMsgsSeqNo, MSG_SEQ_NUM AS msgSeqNo, TOTAL_COUNT AS totalSplitMsgs, 
			COPY_NO AS copyNo, FLT_NO AS flightNo, FLT_KEY as flightKey, TO_CHAR(FLT_DATE ,'MM/DD/YYYY')AS flightDate, BRD_POINT AS loadingPoint, 
			MSG_VER AS msgVersionNumber 
		FROM 
			TRN_FFM_MSG 
		WHERE 
			FLT_KEY=#flightKey# AND FLT_DATE=TO_DATE(#flightDate#,'MM/DD/YYYY') AND BRD_POINT=#loadingPoint# AND SI_TYPE='I' AND 
			MSG_VER=#msgVersionNumber# AND COPY_NO=(SELECT MAX(COPY_NO) AS copyNo FROM TRN_FFM_MSG WHERE FLT_KEY=#flightKey# AND 
			FLT_DATE=TO_DATE(#flightDate#,'MM/DD/YYYY') AND BRD_POINT=#loadingPoint# AND SI_TYPE='I' AND MSG_VER=#msgVersionNumber#)		
		FOR UPDATE
	</select>
	
	<select id="checkIfFlightIsValid" parameterClass="cargo.cms.trn.bo.TrnFFMMessageBO" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM TRN_FLT_OPR WHERE FLT_KEY=#flightKey# AND SCH_DATE=TO_DATE(#flightDate#,'MM/DD/YYYY') AND FLT_TYPE='A'
	</select>
	
	<select id="fetchAwbExistsForTrnFFM" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM AWB WHERE AWB_NO=#awbNo# AND AWB_DATE=TO_DATE(#awbDate#, 'DDMONYY') 
		<!-- AND IMP_DEF_CTO IS NOT NULL -->
	</select>
	
	<insert id="insertAwbForTrnFfm" parameterClass="cargo.cms.trn.bo.TrnFFMShipmentBO">	
		INSERT INTO AWB
			(AWB_NO, AWB_DATE, AWB_TYPE, PPK_TYPE, CATALOG, ORIG, DEST, PCS, WT, CONTENT, SPL_CODE1, SPL_CODE2, CR_USER_ID, CR_DATE, 
			LM_USER_ID, LM_DATE, IMP_DEF_CTO, CARR_CODE) 
		VALUES
			(#awbNo#, TO_DATE(#awbDate#, 'DDMONYY'), DECODE(#dest#, 'HKG', 'I', 'T'), 'B', 
			DECODE(#dest#, 'HKG', 'IG', DECODE(#origin#, 'HKG', 'EG', 'TG')), #origin#, #dest#, #totalPieces#, #weight#, #natureOfGoods#, 
			#specialCode1#, #specialCode2#, 'SYSTEM', SYSDATE, 'SYSTEM', SYSDATE, #awbCTO#, #carrierCode#)
	</insert>
	
	<update id="updateImpCTOinAwb" parameterClass="cargo.cms.trn.bo.TrnFFMShipmentBO">
		UPDATE AWB SET IMP_DEF_CTO=#awbCTO# WHERE AWB_NO=#awbNo# AND AWB_DATE=TO_DATE(#awbDate#, 'DDMONYY') AND 
			AWB_TYPE=DECODE(#dest#, 'HKG', 'I', 'T')
	</update>
	
	<select id="fetchAutoSplitInd" parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT NVL((SELECT AUTO_SPLIT FROM TRN_SETUP WHERE TRUNC(SYSDATE) BETWEEN PERIOD_FRM AND PERIOD_TO), 'N') FROM DUAL
	</select>
	<select id="fetchAutoSplitIndFFM" parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT NVL((SELECT AUTO_SPLIT_FFM FROM TRN_SETUP WHERE TRUNC(TO_DATE(#fltDate#,'DDMONYY')) BETWEEN PERIOD_FRM AND PERIOD_TO), 'N') FROM DUAL
	</select>
	<select id="fetchAutoSplitIndFBL" parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT NVL((SELECT AUTO_SPLIT_FBL FROM TRN_SETUP WHERE TRUNC(SYSDATE) BETWEEN PERIOD_FRM AND PERIOD_TO), 'N') FROM DUAL
	</select>
	
	<update id="updateCPCTMsgLogIdInTrnFFMMsg" parameterClass="java.util.HashMap">
		UPDATE TRN_FFM_MSG SET CPCT_MSG_LOG_ID=#msgLogId# WHERE FLT_KEY=#fltKey# AND FLT_DATE=TO_DATE(#fltDate#, 'MM/DD/YYYY') AND BRD_POINT=#ldgPt# AND FFM_STATUS='P'
	</update>
	
	<update id="updateHactlMsgLogIdInTrnFFMMsg" parameterClass="java.util.HashMap">
		UPDATE TRN_FFM_MSG SET HACTL_MSG_LOG_ID=#msgLogId# WHERE FLT_KEY=#fltKey# AND FLT_DATE=TO_DATE(#fltDate#, 'DDMONYY') AND FFM_STATUS='P'
	</update>

	<update id="updateCPCTMsgLogIdInTrnFFMMsgAsZero" parameterClass="java.util.HashMap">
		UPDATE TRN_FFM_MSG SET CPCT_MSG_LOG_ID='0' WHERE FLT_KEY=#fltKey# AND FLT_DATE=TO_DATE(#fltDate#, 'DDMONYY') AND FFM_STATUS='P'
	</update>
	
	<select id="fetchFlightDateForTrn" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT 
			TO_CHAR(SCH_ARR_DATE,'MM/DD/YYYY') 
		FROM 
			TRN_FLT_OPR_LEG 
		WHERE 
			TR_NO=(SELECT TR_NO FROM TRN_FLT_OPR_LEG WHERE FLT_KEY=#flightKey# AND SCH_DEP_DATE=TO_DATE(#flightDate#,'MM/DD/YYYY') AND 
			BRD_POINT=#boardingPoint#) AND OFF_POINT = 'HKG'		
	</select>
	
	<select id="validateFlightLegForMessageLogSummaryForTrn" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT 
			TO_CHAR(SCH_ARR_DATE,'MM/DD/YYYY') 
		FROM 
			TRN_FLT_OPR_LEG 
		WHERE 
			TR_NO=(SELECT TR_NO FROM TRN_FLT_OPR_LEG WHERE FLT_KEY=#flightKey# AND SCH_DATE=TO_DATE(#flightDate#,'MM/DD/YYYY') AND BRD_POINT=#boardingPoint#) 
			AND OFF_POINT='HKG'		
	</select>
	
	<update id="sqlUpdateFltOprFFMIndForTrn" parameterClass="java.util.HashMap">
		UPDATE TRN_FLT_OPR_EVENTS SET FFM_IND=#ffmInd# WHERE FLT_KEY=#flightKey# AND SCH_DATE=TO_DATE(#flightDate#,'DDMONYY') AND FLT_TYPE='A'
	</update>
	
	<select id="fetchFFMMsgVersionExists" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM TRN_FFM_MSG WHERE FLT_KEY=#fltKey# AND FLT_DATE=TO_DATE(#fltDate#, 'MM/DD/YYYY') AND BRD_POINT=#brdPoint# 
			<!-- AND MSG_VER=#msgVersionNo# -->
			AND FFM_STATUS='P' AND CONFIRM_YN='Y'
	</select>
	
	<select id="fetchIfHactlMsgIdIsZeroForFlt" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM TRN_FFM_MSG WHERE FLT_KEY=#fltKey# AND FLT_DATE=TO_DATE(#fltDate#, 'DDMONYY') AND FFM_STATUS='P' AND HACTL_MSG_LOG_ID=0
	</select>
	
	<update id="updateConfirmAutoInd" parameterClass="java.util.HashMap">
		UPDATE TRN_FFM_MSG 
			SET CONFIRM_YN=#confirmYN#, AUTO_IND=#autoInd# 
		WHERE FLT_KEY=#fltKey# AND FLT_DATE=TO_DATE(#fltDate#, 'DDMONYY') AND BRD_POINT=#ldgPt# AND NOT EXISTS (SELECT NULL FROM TRN_FFM_MSG 
    		WHERE FLT_KEY=#fltKey# AND FLT_DATE=TO_DATE(#fltDate#, 'DDMONYY') AND BRD_POINT=#ldgPt# AND CONFIRM_YN='N' AND FFM_STATUS='P')
	</update>
	<update id="updateConfirmAutoIndFrmProcsr" parameterClass="java.util.HashMap">
		UPDATE TRN_FFM_MSG 
			SET CONFIRM_YN=#confirmYN#, AUTO_IND=#autoInd# 
		WHERE FLT_KEY=#fltKey# AND FLT_DATE=TO_DATE(#fltDate#, 'MM/DD/YYYY') AND BRD_POINT=#ldgPt# AND NOT EXISTS (SELECT NULL FROM TRN_FFM_MSG 
    		WHERE FLT_KEY=#fltKey# AND FLT_DATE=TO_DATE(#fltDate#, 'MM/DD/YYYY') AND BRD_POINT=#ldgPt# AND CONFIRM_YN='N' AND (FFM_STATUS='P' OR FFM_STATUS='CONT'))
	</update>
	
	<select id="sqlFetchTrnFFMLtstConfirmFlag" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM TRN_FFM_MSG WHERE FLT_KEY = #fltKey# AND FLT_DATE = TO_DATE(#fltDate#, 'MM/DD/YYYY') AND BRD_POINT = #ldgPt# AND FFM_STATUS = 'P' AND CONFIRM_YN = 'Y'
	</select>
	
	<select id="sqlFetchAwbDateForTrnFFM" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT PKG_COMMON.GET_AWB_DATE(#awbNo#, #awbType#) awbDate FROM DUAL
	</select>
<!-- FFM Inbound Message :: Anup :: Ends -->
	
<!-- Maintain Pre-FFM :: Anup :: Begins -->
	<select id="fetchFfmFltDtlsByFlt" parameterClass="java.util.HashMap" resultClass="cargo.cms.trn.bo.TrnFFMMessageBO">
		SELECT 
			DECODE(ACT_TIME, NULL, NULL, SUBSTR(LPAD(ACT_TIME, 4, '0'), 1, 2) || ':' || SUBSTR(LPAD(ACT_TIME, 4, '0'), 3)) || DECODE(TRUNC(ACT_DATE), 
			TRUNC(SCH_DATE), '', NULL, NULL, '/' || TO_CHAR(ACT_DATE, 'dd')) AS fltATA, ACFT_REG_NO AS arcftRegNo 
		FROM 
			TRN_FLT_OPR 
		WHERE 
			FLT_KEY=#fltKey# AND SCH_DATE=TO_DATE(#fltDate#,'DDMONYY') AND FLT_TYPE='A' AND ROWNUM=1
	</select>
	
	<select id="fetchLadingPointsByFlt" parameterClass="java.util.HashMap" resultClass="cargo.cms.trn.bo.TrnFFMMessageBO">
		SELECT 
			BRD_POINT AS loadingPoint, OFF_POINT AS unLoadingPoint 
		FROM 
			TRN_FLT_OPR_SEG 
		WHERE 
			TR_NO IN (SELECT TR_NO FROM TRN_FLT_OPR WHERE FLT_KEY=#fltKey# AND SCH_DATE=TO_DATE(#fltDate#, 'dd-mon-yy') AND FLT_TYPE='A') AND OFF_POINT='HKG'
	</select>
	
	<select id="fetchFFMRecvdFromLadingPort" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT DECODE(COUNT(1), 0, 'N', 'Y') AS ldgPtInd FROM TRN_FFM_MSG WHERE BRD_POINT=#ldgPt# AND FLT_KEY=#fltKey# AND FLT_DATE=TO_DATE(#fltDate#, 'DDMONYY')
	</select>
	
	<select id="fetchFFMTotalPcsWtByLdgPt" parameterClass="java.util.HashMap" resultClass="cargo.cms.trn.bo.TrnFFMMessageBO">
		SELECT 
			SUM(TRN_FFM_SHP.MAN_PCS) AS totalPcs, SUM(TRN_FFM_SHP.MAN_WT) AS totalWt 
		FROM 
			TRN_FFM_MSG INNER JOIN TRN_FFM_ULD ON TRN_FFM_MSG.TR_NO=TRN_FFM_ULD.TR_NO AND TRN_FFM_ULD.BRD_POINT=#ldgPt# AND TRN_FFM_ULD.OFF_POINT=#unldgPt# 
			LEFT JOIN TRN_FFM_SHP ON TRN_FFM_MSG.TR_NO=TRN_FFM_SHP.TR_NO AND TRN_FFM_ULD.DOC_LINE_NO=TRN_FFM_SHP.UDOC_LINE_NO 
		WHERE 
			TRN_FFM_MSG.FLT_KEY=#fltKey# AND TRN_FFM_MSG.FLT_DATE=TO_DATE(#fltDate#,'dd-mon-yy') AND (TRN_FFM_MSG.SI_TYPE='S' 
			OR (TRN_FFM_MSG.SI_TYPE='I' AND TRN_FFM_MSG.FFM_STATUS='P'))
	</select>
	
	<select id="fetchFFMNilIndByFlt" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT 
			DECODE(COUNT(1), 0, 'Y', 'N') AS TMPNILIND 
		FROM 
			TRN_FFM_MSG INNER JOIN TRN_FFM_ULD ON TRN_FFM_MSG.TR_NO=TRN_FFM_ULD.TR_NO AND TRN_FFM_ULD.BRD_POINT=#ldgPt# AND TRN_FFM_ULD.OFF_POINT=#unldgPt# 
		WHERE 
			TRN_FFM_MSG.FLT_KEY=#fltKey# AND TRN_FFM_MSG.FLT_DATE=TO_DATE(#fltDate#,'dd-mon-yy') AND (TRN_FFM_MSG.SI_TYPE='S' OR (TRN_FFM_MSG.SI_TYPE='I' 
			AND TRN_FFM_MSG.FFM_STATUS='P')) AND TRN_FFM_ULD.NIL_IND='N'
	</select>
	
	<select id="fetchFFMTtlNoOfAwbByFlt" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT 
			NVL(COUNT(DISTINCT C.AWB_NO),0) AS noOfAWB 
		FROM 
			TRN_FFM_MSG A, TRN_FFM_ULD B, TRN_FFM_SHP C 
		WHERE 
			A.TR_NO=B.TR_NO AND B.TR_NO=C.TR_NO AND B.DOC_LINE_NO=C.UDOC_LINE_NO AND A.FLT_KEY=#fltKey# AND A.FLT_DATE=TO_DATE(#fltDate#,'dd-mon-yy') 
			AND B.BRD_POINT=#ldgPt# AND B.OFF_POINT=#unldgPt# AND (A.SI_TYPE='S' OR (A.SI_TYPE = 'I' AND A.FFM_STATUS='P'))
	</select>
	
	<select id="fetchPreFFMAwbDetailsByFlt" parameterClass="java.util.HashMap" resultClass="cargo.cms.trn.bo.TrnFFMShipmentBO">
		SELECT * FROM 
		(SELECT 
			DISTINCT TRN_FFM_MSG.TR_NO AS trNo, TRN_FFM_ULD.DOC_LINE_NO AS udocLineNo, TRN_FFM_SHP.DOC_LINE_NO AS docLineNo, TRN_FFM_ULD.ULD_KEY AS uldKey, 
			DECODE(TRN_FFM_SHP.AWB_NO, NULL, NULL, SUBSTR(TRN_FFM_SHP.AWB_NO, 1, 3) || '-' || SUBSTR(TRN_FFM_SHP.AWB_NO, 4)) AS awbNoDisp, 
			TRN_FFM_SHP.ORG AS origin, TRN_FFM_SHP.DEST AS dest, TRN_FFM_SHP.SHMPT_CODE AS shipmentDescCode, TRN_FFM_SHP.AWB_NO  AS awbNo, 
			TO_CHAR(TRN_FFM_SHP.AWB_DATE, 'DDMONYY') AS awbDate, TRN_FFM_SHP.MAN_PCS AS manPieces, TRIM(TO_CHAR(TRN_FFM_SHP.MAN_WT, 'FM9999990.90')) AS manWeight, 
			DECODE(TRN_FFM_SHP.SHMPT_CODE, 'T', '', TRN_FFM_SHP.PCS) AS totalPieces, DECODE(TRN_FFM_SHP.SHMPT_CODE, 'T', '', TRN_FFM_SHP.WT) AS totalWeight, 
			TRN_FFM_SHP.CONTENT AS natureOfGoods, TRN_FFM_SHP.SPL_CODE1 AS specialCode1, TRN_FFM_SHP.SPL_CODE2 AS specialCode2, V_UNFIN_DDT_DTL.SHP_TRF_TYPE AS transferType, 
			V_UNFIN_DDT_DTL.SHP_CNTG_FLT_KEY AS cntgFlightKey1, TRN_FFM_SHP.CNSL_IND AS cnslIndicator, DECODE((SELECT NVL((SELECT PART_SHPMNT FROM TRN_SETUP 
			WHERE TRUNC(SYSDATE) BETWEEN PERIOD_FRM AND PERIOD_TO), 'N') FROM DUAL), 'Y', (SELECT TRNFFM.CTO FROM TRN_FFM_SHP TRNFFM WHERE TRNFFM.AWB_NO=TRN_FFM_SHP.AWB_NO 
			AND TRNFFM.AWB_DATE=TRN_FFM_SHP.AWB_DATE AND TRNFFM.TR_NO &lt; TRN_FFM_SHP.TR_NO AND ROWNUM=1)) AS shipmentDescCodeCTO, TRN_FFM_MSG.CTO AS fltCTO, 
			TRN_FFM_ULD.CTO AS uldCTO, TRN_FFM_SHP.CTO AS awbCTO, NVL(TRN_FFM_SHP.CTO, PKG_TRN_CTO.FUN_GET_CTO(TRN_FFM_MSG.FLT_KEY,TO_CHAR(TRN_FFM_MSG.FLT_DATE,
			'DDMONYY'),'I',TRN_FFM_MSG.CARR_CODE, TRN_FFM_SHP.AWB_NO,TO_CHAR(TRN_FFM_SHP.AWB_DATE, 'DDMONYY'),DECODE(TRN_FFM_SHP.DEST,'HKG','I','T'),
			TRN_FFM_SHP.SPL_CODE1,TRN_FFM_SHP.SPL_CODE2,'FFM')) expectedShpCTO 
		FROM 
			TRN_FFM_MSG INNER JOIN TRN_FFM_ULD ON TRN_FFM_MSG.TR_NO=TRN_FFM_ULD.TR_NO AND TRN_FFM_ULD.BRD_POINT=#ldgPt# AND TRN_FFM_ULD.OFF_POINT=#unldgPt# 
			LEFT JOIN TRN_FFM_SHP ON TRN_FFM_MSG.TR_NO=TRN_FFM_SHP.TR_NO AND TRN_FFM_ULD.DOC_LINE_NO=TRN_FFM_SHP.UDOC_LINE_NO 
			LEFT JOIN V_UNFIN_DDT_DTL ON V_UNFIN_DDT_DTL.AWB_NO=TRN_FFM_SHP.AWB_NO AND V_UNFIN_DDT_DTL.AWB_DATE=TRN_FFM_SHP.AWB_DATE AND 
			V_UNFIN_DDT_DTL.FLT_KEY=#fltKey#||#trnFltSfx# AND V_UNFIN_DDT_DTL.FLT_DATE=TO_DATE(#fltDate#, 'DDMONYY') AND 
			NVL(V_UNFIN_DDT_DTL.ULD_KEY, 'FF')=NVL(TRN_FFM_ULD.ULD_KEY, 'FF') 
		WHERE 
			TRN_FFM_MSG.FLT_KEY=#fltKey# AND TRN_FFM_MSG.FLT_DATE=TO_DATE(#fltDate#, 'DDMONYY') AND (TRN_FFM_MSG.SI_TYPE='S' OR (TRN_FFM_MSG.SI_TYPE='I' 
			AND FFM_STATUS='P')))
			<isNotEmpty property="importCTO">
				WHERE expectedShpCTO=#importCTO# 
			</isNotEmpty>			
		ORDER BY uldKey NULLS FIRST, awbNo
	</select>
	
	<select id="isFlightKeyAndDateValid" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		SELECT 
			COUNT(1) 
		FROM 
			TRN_FLT_OPR 
		WHERE 
			UPPER(CARR_CODE)=UPPER(#carrCode#) AND SCH_DATE=TO_DATE(#fltDate#,'DDMONYY') AND UPPER(FLT_TYPE)=UPPER(#fltType#) 
			AND UPPER(FLT_NO)=UPPER(#fltNo#)
	</select>
	
	<select id="fetchPreFFMStatusAndVersion" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT 
			NVL(CTO, 'N') AS confirmed, MSG_VER AS msgVersion, CTO AS fltCTO, CONFIRM_YN AS confirmYN, COPY_NO AS COPYNO 
		FROM 
			TRN_FFM_MSG 
		WHERE 
			TRN_FFM_MSG.FLT_KEY=#fltKey# AND TRN_FFM_MSG.FLT_DATE=TO_DATE(#fltDate#,'DDMONYY') AND BRD_POINT=#ldgPt# AND 
			(TRN_FFM_MSG.SI_TYPE='S' OR (TRN_FFM_MSG.SI_TYPE = 'I' AND TRN_FFM_MSG.FFM_STATUS='P'))
	</select>
	
	<update id="updateCtoInTrnFFMMessage" parameterClass="java.util.HashMap">
		UPDATE 
			TRN_FFM_MSG 
		SET 
			CTO=#fltCTO#, LM_USER_ID=#modifiedUserId#, LM_DATE=SYSDATE 
		WHERE 
			FLT_KEY=#fltKey# AND FLT_DATE=TO_DATE(#fltDate#,'DDMONYY') AND (SI_TYPE='S' OR (SI_TYPE='I' AND FFM_STATUS='P'))
	</update>
	
	<update id="updateCtoInTrnFFMUld" parameterClass="java.util.HashMap">
		UPDATE TRN_FFM_ULD SET CTO=#uldCTO#, LM_USER_ID=#modifiedUserId#, LM_DATE=SYSDATE WHERE TR_NO=#trNo# AND DOC_LINE_NO=#docLineNo#
	</update>
	
	<update id="updateCtoInTrnFFMShipment" parameterClass="java.util.HashMap">
		UPDATE TRN_FFM_SHP SET CTO=#awbCTO#, LM_USER_ID=#modifiedUserId#, LM_DATE=SYSDATE WHERE TR_NO=#trNo# AND DOC_LINE_NO=#docLineNo# AND UDOC_LINE_NO=#uDocLineNo#
	</update>
	
	<update id="updateCTOInAwbForTrnFFMShipment" parameterClass="java.util.HashMap">
		UPDATE AWB SET IMP_CTO=#awbCTO#, LM_USER_ID=#modifiedUserId#, LM_DATE=SYSDATE WHERE AWB_NO=#awbNo# AND AWB_DATE=TO_DATE(#awbDate#, 'DDMONYY') 
			AND AWB_TYPE=#awbType# 
			<!-- AND AWB_CLOSED_YN='N' AND AWB_TYPE=#awbType# -->
	</update>
	
	<select id="isPreFFMMaintained" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM TRN_FFM_MSG WHERE CTO IS NULL AND FLT_KEY=#fltKey# AND FLT_DATE=TO_DATE(#fltDate#, 'DDMONYY') AND (SI_TYPE='S' OR (SI_TYPE='I' AND FFM_STATUS='P'))
	</select>
	
	<select id="isFFMAlreadySent" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM TRN_FFM_MSG WHERE FLT_KEY=#fltKey# AND FLT_DATE=TO_DATE(#fltDate#, 'DDMONYY') AND BRD_POINT=#ldgPt# AND CONFIRM_YN='N' AND FFM_STATUS='P'
	</select>
	
	<select id="getAWBShcs" parameterClass="cargo.cms.edi.ei.bo.DDTShipmentBO" resultClass="cargo.cms.edi.ei.bo.DDTMessageBO">
		SELECT spl_code1 shc1 ,spl_code2 shc2 from awb where awb_no=#awbNo# and awb_date=#awbDate# and awb_closed_yn='N'
	</select>
	
	<update id="updateConfirmFlgInTrnFFMMsg" parameterClass="java.util.HashMap">
		UPDATE 
			TRN_FFM_MSG 
		SET 
			CONFIRM_YN='Y', LM_USER_ID=#modifiedUserId#, LM_DATE=SYSDATE 
		WHERE 
			FLT_KEY=#fltKey# AND FLT_DATE=TO_DATE(#fltDate#, 'DDMONYY') AND (SI_TYPE='S' OR (SI_TYPE='I' AND FFM_STATUS='P'))
	</update>
	
	<select id="fetchShpCodeHndlgTrmnl" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT 
			DECODE((SELECT NVL((SELECT PART_SHPMNT FROM TRN_SETUP WHERE TRUNC(SYSDATE) BETWEEN PERIOD_FRM AND PERIOD_TO), 'N') FROM DUAL), 'Y', 
			(SELECT IMP_DEF_CTO FROM AWB WHERE AWB_NO=#awbNo# AND AWB_DATE=TO_DATE(#awbDate#, 'DDMONYY') AND AWB_TYPE='I')) 
		FROM DUAL
	</select>
	
	<!-- Outbound Message Construction -->
	<select id="fetchTrnFFMCPSLHactlHdr" parameterClass="cargo.cms.trn.bo.TrnFFMMessageBO" resultClass="cargo.cms.trn.bo.TrnFFMMessageBO">
		SELECT 
			NVL(A.TR_NO, 0) AS trNo, TO_CHAR(NVL(A.MSG_VER, 0)) AS msgVersionNumber, NVL(A.MSG_SEQ_NUM, 0) AS msgSeqNo, NVL(A.FLT_KEY, ' ') AS flightKey, 
			NVL(TO_CHAR(A.FLT_DATE, 'DDMON'), ' ') AS flightDate, NVL(A.BRD_POINT, ' ') AS loadingPoint, 'HKG' AS unLoadingPoint, NVL(A.ACFT_REG_NO, ' ') AS arcftRegNo, 
			(SELECT DECODE(COUNT(1), 0, 'Y', 'N') AS TMPNILIND FROM TRN_FFM_MSG INNER JOIN TRN_FFM_ULD ON TRN_FFM_MSG.TR_NO=TRN_FFM_ULD.TR_NO WHERE 
      		TRN_FFM_MSG.FLT_KEY=#flightKey# AND TRN_FFM_MSG.FLT_DATE=TO_DATE(#flightDate#,'DDMONYY') AND (TRN_FFM_MSG.SI_TYPE='S' OR (TRN_FFM_MSG.SI_TYPE='I' 
      		AND TRN_FFM_MSG.FFM_STATUS='P')) AND TRN_FFM_ULD.NIL_IND='N') AS nilCargoIndicator 
		FROM 
			TRN_FFM_MSG A 
		WHERE 
			<isNotEmpty property="trNo">
				A.TR_NO = #trNo# AND A.FFM_STATUS='P'
			</isNotEmpty>
			<isEmpty property="trNo">
				A.FLT_KEY=#flightKey# AND A.FLT_DATE=TO_DATE(#flightDate#, 'DDMONYY') AND A.FFM_STATUS='P' AND BRD_POINT=#loadingPoint# 
			 	and (select count(1) from trn_ffm_msg where FLT_KEY=#flightKey# and FLT_DATE=TO_DATE(#flightDate#, 'DDMONYY') and ffm_status='CONT' AND BRD_POINT=#loadingPoint#)=0			
			</isEmpty>

			<!--  <isEqual prepend="and" property="nilCargoIndicator" compareValue="Y">
            	CTO in('HACTL','Manual')
        	</isEqual> -->
	</select>
	
	<select id="fetchTrnFFMHactlShp" parameterClass="cargo.cms.trn.bo.TrnFFMShipmentBO" resultClass="cargo.cms.trn.bo.TrnFFMShipmentBO">
	<![CDATA[
		SELECT 
  			NVL(TR_NO, 0) AS trNo, NVL(DOC_LINE_NO, 0) AS docLineNo, NVL(UDOC_LINE_NO, 0) AS udocLineNo, NVL(BRD_POINT, ' ') AS loadingPoint, 
  			NVL(OFF_POINT, ' ') AS unLoadingPoint, NVL(AWB_NO, ' ') AS awbNo, NVL(ORG, ' ') AS origin, NVL(DEST, ' ') AS dest, 
  			NVL(MAN_PCS,0) AS manPieces, NVL(SHMPT_CODE, ' ') AS shipmentDescCode, NVL(WT_UNIT, ' ') AS weightCode, NVL(MAN_WT, 0) AS manWeight, 
  			NVL(VOL_UNIT, ' ') AS volumeCode, NVL(VOL_AMT, 0) AS volumeAmount, NVL(COD_DEN, 0) AS densityGroup, NVL(PCS, 0) AS totalPieces, 
  			NVL(SPL_CODE1, ' ') AS specialCode1, NVL(SPL_CODE2, ' ') AS specialCode2, NVL(CNTG_DEST1, ' ') AS cntgNextDestAirportCode1, 
  			NVL(CNTG_FLT_CARR1, ' ') AS cntgFlightCarrierCode1, NVL(CNTG_FLT_NO1, ' ')  AS cntgFlightNo1, NVL(TO_CHAR(CNTG_FLT_DATE1, 'DDMON'), ' ') AS cntgFlightDate1, 
  			NVL(CNTG_DEST2, ' ') AS cntgNextDestAirportCode2, NVL(CNTG_FLT_CARR2, ' ') AS cntgFlightCarrierCode2, NVL(CNTG_FLT_NO2, ' ') AS cntgFlightNo2, 
  			NVL(TO_CHAR(CNTG_FLT_DATE2, 'DDMON'), ' ') AS cntgFlightDate2, NVL(CNTG_DEST3, ' ') AS cntgNextDestAirportCode3, NVL(CNTG_FLT_CARR3, ' ') 
  			AS cntgFlightCarrierCode3, NVL(CNTG_FLT_NO3, ' ') AS cntgFlightNo3, NVL(TO_CHAR(CNTG_FLT_DATE3, 'DDMON'),' ') AS cntgFlightDate3, NVL(DES_SHP_OSI_1, ' ') 
  			AS osiText1, NVL(DES_SHP_OSI_2, ' ') AS osiText2, NVL(DES_CUS_REF, ' ') AS desCusref, NVL(CUST_ORG_CODE,' ') AS customsOriginCode, NVL(MOV_PRI_CODE, ' ') 
  			AS mvtPriorityCode, CONTENT AS natureOfGoods, LOC_CODE AS locCode,ISO_CTRY_CODE1 AS isoCountryCode1, INFO_IDENTIFIER1 AS informationIdentifier1, CUSTOMS_INFO_IDENTIFIERI AS customsInformationIdentifier1, 
        	SUPP_CUSTOMS_INFO1 AS suppCustomsInformation1, ISO_CTRY_CODE2 AS isoCountryCode2, INFO_IDENTIFIER2 AS informationIdentifier2, 
        	CUSTOMS_INFO_IDENTIFIER2 AS customsInformationIdentifier2, SUPP_CUSTOMS_INFO2 AS suppCustomsInformation2 
  		FROM 
  			TRN_FFM_SHP 
  		WHERE 
  			TR_NO=#trNo# AND PCS>0 AND CTO='HACTL' ORDER BY UDOC_LINE_NO, DOC_LINE_NO
	]]>
	</select>
	
	<select id="fetchTrnFFMHactlShpDmn" parameterClass="cargo.cms.trn.bo.TrnFFMShpDmnBO" resultClass="cargo.cms.trn.bo.TrnFFMShpDmnBO">
		SELECT 
			TR_NO as trNo, DOC_LINE_NO as docLineNo, SDOC_LINE_NO as sdocLineNo, LENGTH as dim_Length, WIDTH as dim_Width, HEIGHT as dim_Height, PCS as dim_NoOfPieces, 
			WT as dim_Weight, NVL(WT_UNIT, ' ') as dim_WeightCode, NVL(DMN_UNT, ' ')  AS dim_MsrUnitCode 
		FROM 
			TRN_FFM_SHP_DMN 
		WHERE 
			TR_NO IN (SELECT TR_NO FROM TRN_FFM_SHP WHERE TR_NO=#trNo# AND CTO='HACTL') AND TR_NO=#trNo# ORDER BY SDOC_LINE_NO, DOC_LINE_NO
	</select>
	
	<select id="fetchTrnFFMHactlUld" parameterClass="cargo.cms.trn.bo.TrnFFMUldBO" resultClass="cargo.cms.trn.bo.TrnFFMUldBO">
		SELECT 
			TR_NO as trNo, DOC_LINE_NO as docLineNo, NVL(ULD_TYPE, ' ') as uldType, NVL(ULD_NO, ' ') as uldNo, NVL(ULD_CARR, ' ') as uldCarrierCode, 
			NVL(ULD_KEY, ' ') as uldKey, NVL(ULD_LOD_IND, ' ') as uldLoadingIndicator, NVL(TO_CHAR(VOL_AVAIL_CODE), ' ') as uldVolumeCode, NVL(ULD_RMK, ' ') as uldRemarks, 
			NVL(CNTG_DEST1, ' ') as uldCntgNextDestAirportCode1, NVL(CNTG_FLT_CARR1, ' ') as uldCntgFlightCarrierCode1, NVL(CNTG_FLT_NO1, ' ') as uldCntgFlightNo1, 
			NVL(TO_CHAR(CNTG_FLT_DATE1, 'DDMON'),' ') as uldCntgFlightDate1, NVL(CNTG_DEST2, ' ') AS uldCntgNextDestAirportCode2, NVL(CNTG_FLT_CARR2, ' ') 
			as uldCntgFlightCarrierCode2, NVL(CNTG_FLT_NO2, ' ') as uldCntgFlightNo2, NVL(TO_CHAR(CNTG_FLT_DATE2, 'DDMON'), ' ') as uldCntgFlightDate2, 
			NVL(CNTG_DEST3,' ') as uldCntgNextDestAirportCode3, NVL(CNTG_FLT_CARR3, ' ') as uldCntgFlightCarrierCode3, NVL(CNTG_FLT_NO3, ' ') as uldCntgFlightNo3, 
			NVL(TO_CHAR(CNTG_FLT_DATE3, 'DDMON'), ' ')  as uldCntgFlightDate3 
		FROM 
			TRN_FFM_ULD 
		WHERE 
			TR_NO=#trNo# AND ULD_TYPE NOT IN (SELECT CODE FROM MAST_ULD_TYPE WHERE (DUMMY_H_CONT_IND='Y' OR H_CONT_IND='Y' AND BT_IND='Y')) 
		ORDER BY DOC_LINE_NO
	</select>
	
	<select id="fetchFltDepDateForFFMMsgConstr" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT TO_CHAR(SCH_DEP_DATE, 'DDMON') FROM FLT_OPR_LEG WHERE FLT_TYPE='A' AND FLT_KEY=#fltKey#||(SELECT TRN_FLT_SUFFIX FROM SYS_PARAM) AND SCH_DATE=TO_DATE(#fltDate#, 'DDMONYY') AND BRD_POINT=#brdPoint#
	</select>
	
	<select id="fetchTrnFFMCPSLHdr" parameterClass="cargo.cms.trn.bo.TrnFFMMessageBO" resultClass="cargo.cms.trn.bo.TrnFFMMessageBO">
		SELECT 
			NVL(A.TR_NO, 0) AS trNo, TO_CHAR(NVL(A.MSG_VER,0)) AS msgVersionNumber, NVL(A.MSG_SEQ_NUM,0) AS msgSeqNo, DECODE(FLT_KEY, NULL, ' ', FLT_KEY||(SELECT TRN_FLT_SUFFIX FROM SYS_PARAM)) AS flightKey, 
			NVL(TO_CHAR(A.FLT_DATE, 'DDMON'), ' ') AS flightDate, NVL(A.BRD_POINT, ' ') AS loadingPoint, 'HKG' AS unLoadingPoint, NVL(A.ACFT_REG_NO, ' ') AS arcftRegNo, 
			(SELECT DECODE(COUNT(1), 0, 'Y', 'N') AS TMPNILIND FROM TRN_FFM_MSG INNER JOIN TRN_FFM_ULD ON TRN_FFM_MSG.TR_NO=TRN_FFM_ULD.TR_NO WHERE 
      		TRN_FFM_MSG.FLT_KEY=#flightKey# AND TRN_FFM_MSG.FLT_DATE=TO_DATE(#flightDate#,'DDMONYY') AND (TRN_FFM_MSG.SI_TYPE='S' OR (TRN_FFM_MSG.SI_TYPE='I' 
      		AND TRN_FFM_MSG.FFM_STATUS='P')) AND TRN_FFM_ULD.NIL_IND='N') AS nilCargoIndicator 
		FROM 
			TRN_FFM_MSG A 
		WHERE 
			<isNotEmpty property="trNo">
				A.TR_NO = #trNo# AND A.FFM_STATUS='P'
			</isNotEmpty>
			<isEmpty property="trNo">
				A.FLT_KEY=#flightKey# AND A.FLT_DATE=TO_DATE(#flightDate#, 'DDMONYY') AND A.FFM_STATUS='P' AND BRD_POINT=#loadingPoint#
			 	and (select count(1) from trn_ffm_msg where FLT_KEY=#flightKey# and FLT_DATE=TO_DATE(#flightDate#, 'DDMONYY') and ffm_status='CONT' AND BRD_POINT=#loadingPoint#)=0
			</isEmpty> 
			<!-- <isEqual prepend="and" property="nilCargoIndicator" compareValue="Y">
            	CTO in('CPCT','Manual')
        	</isEqual> -->
	</select>
	
	<select id="fetchTrnFFMCPSLShp" parameterClass="cargo.cms.trn.bo.TrnFFMShipmentBO" resultClass="cargo.cms.trn.bo.TrnFFMShipmentBO">
	<![CDATA[
		SELECT 
  			NVL(TR_NO, 0) AS trNo, NVL(DOC_LINE_NO, 0) AS docLineNo, NVL(UDOC_LINE_NO, 0) AS udocLineNo, NVL(BRD_POINT, ' ') AS loadingPoint, 
  			NVL(OFF_POINT, ' ') AS unLoadingPoint, NVL(AWB_NO, ' ') AS awbNo, NVL(ORG, ' ') AS origin, NVL(DEST, ' ') AS dest, 
  			NVL(MAN_PCS,0) AS manPieces, NVL(SHMPT_CODE, ' ') AS shipmentDescCode, NVL(WT_UNIT, ' ') AS weightCode, NVL(MAN_WT ,0) AS manWeight, 
  			NVL(VOL_UNIT,' ') AS volumeCode, NVL(VOL_AMT,0) AS volumeAmount, NVL(COD_DEN, 0) AS densityGroup, NVL(PCS,0) AS totalPieces, 
  			NVL(SPL_CODE1,' ') AS specialCode1, NVL(SPL_CODE2,' ') AS specialCode2, NVL(CNTG_DEST1, ' ') AS cntgNextDestAirportCode1, NVL(CNTG_FLT_CARR1, ' ') 
  			AS cntgFlightCarrierCode1, NVL(CNTG_FLT_NO1,' ')  AS cntgFlightNo1, NVL(TO_CHAR(CNTG_FLT_DATE1, 'DDMON'),' ') AS cntgFlightDate1, NVL(CNTG_DEST2,' ') 
  			AS cntgNextDestAirportCode2, NVL(CNTG_FLT_CARR2,' ') AS cntgFlightCarrierCode2, NVL(CNTG_FLT_NO2, ' ') AS cntgFlightNo2, NVL(TO_CHAR(CNTG_FLT_DATE2, 'DDMON'),' ') 
  			AS cntgFlightDate2, NVL(CNTG_DEST3,' ') AS cntgNextDestAirportCode3, NVL(CNTG_FLT_CARR3, ' ') AS cntgFlightCarrierCode3, NVL(CNTG_FLT_NO3, ' ') AS cntgFlightNo3, 
  			NVL(TO_CHAR(CNTG_FLT_DATE3, 'DDMON'),' ') AS cntgFlightDate3,  
  			NVL(DES_CUS_REF,' ') AS desCusref, NVL(CUST_ORG_CODE,' ') AS customsOriginCode, NVL(MOV_PRI_CODE, ' ') AS mvtPriorityCode, CONTENT AS natureOfGoods,
  			ISO_CTRY_CODE1 AS isoCountryCode1, INFO_IDENTIFIER1 AS informationIdentifier1, CUSTOMS_INFO_IDENTIFIERI AS customsInformationIdentifier1, 
        	SUPP_CUSTOMS_INFO1 AS suppCustomsInformation1, ISO_CTRY_CODE2 AS isoCountryCode2, INFO_IDENTIFIER2 AS informationIdentifier2, 
        	CUSTOMS_INFO_IDENTIFIER2 AS customsInformationIdentifier2, SUPP_CUSTOMS_INFO2 AS suppCustomsInformation2 
  		FROM 
  			TRN_FFM_SHP 
  		WHERE 
  			TR_NO=#trNo# AND PCS>0 AND CTO='CPCT' ORDER BY UDOC_LINE_NO, DOC_LINE_NO
	]]>
	</select>
	
	<select id="fetchTrnFFMCPSLShpDmn" parameterClass="cargo.cms.trn.bo.TrnFFMShpDmnBO" resultClass="cargo.cms.trn.bo.TrnFFMShpDmnBO">
		SELECT 
			TR_NO as trNo, DOC_LINE_NO as docLineNo, SDOC_LINE_NO as sdocLineNo, LENGTH as dim_Length, WIDTH as dim_Width, HEIGHT as dim_Height, PCS as dim_NoOfPieces, 
			WT as dim_Weight, NVL(WT_UNIT, ' ') as dim_WeightCode, NVL(DMN_UNT, ' ')  AS dim_MsrUnitCode 
		FROM 
			TRN_FFM_SHP_DMN 
		WHERE 
			TR_NO IN (SELECT TR_NO FROM TRN_FFM_SHP WHERE TR_NO=#trNo# AND CTO='CPCT') AND TR_NO=#trNo# ORDER BY SDOC_LINE_NO, DOC_LINE_NO
	</select>
	
	<select id="fetchTrnFFMCPSLUld" parameterClass="cargo.cms.trn.bo.TrnFFMUldBO" resultClass="cargo.cms.trn.bo.TrnFFMUldBO">
		SELECT 
			TR_NO as trNo, DOC_LINE_NO as docLineNo, NVL(ULD_TYPE, ' ') as uldType, NVL(ULD_NO, ' ') as uldNo, NVL(ULD_CARR, ' ') as uldCarrierCode, 
			NVL(ULD_KEY, ' ') as uldKey, NVL(ULD_LOD_IND, ' ') as uldLoadingIndicator, NVL(TO_CHAR(VOL_AVAIL_CODE), ' ') as uldVolumeCode, NVL(ULD_RMK, ' ') as uldRemarks, 
			NVL(CNTG_DEST1, ' ') as uldCntgNextDestAirportCode1, NVL(CNTG_FLT_CARR1, ' ') as uldCntgFlightCarrierCode1, NVL(CNTG_FLT_NO1, ' ') as uldCntgFlightNo1, 
			NVL(TO_CHAR(CNTG_FLT_DATE1, 'DDMON'),' ') as uldCntgFlightDate1, NVL(CNTG_DEST2, ' ') AS uldCntgNextDestAirportCode2, NVL(CNTG_FLT_CARR2, ' ') 
			as uldCntgFlightCarrierCode2, NVL(CNTG_FLT_NO2, ' ') as uldCntgFlightNo2, NVL(TO_CHAR(CNTG_FLT_DATE2, 'DDMON'), ' ') as uldCntgFlightDate2, 
			NVL(CNTG_DEST3,' ') as uldCntgNextDestAirportCode3, NVL(CNTG_FLT_CARR3, ' ') as uldCntgFlightCarrierCode3, NVL(CNTG_FLT_NO3, ' ') as uldCntgFlightNo3, 
			NVL(TO_CHAR(CNTG_FLT_DATE3, 'DDMON'), ' ')  as uldCntgFlightDate3 
		FROM 
			TRN_FFM_ULD 
		WHERE 
			TR_NO=#trNo# AND ULD_TYPE NOT IN (SELECT CODE FROM MAST_ULD_TYPE WHERE (DUMMY_H_CONT_IND='Y' OR H_CONT_IND='Y' AND BT_IND='Y')) 
		ORDER BY DOC_LINE_NO
	</select>
	
	<select id="checkIfFFMExistsForTrn" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		SELECT 
			COUNT(1) 
		FROM 
			TRN_FFM_MSG INNER JOIN TRN_FFM_ULD ON TRN_FFM_MSG.TR_NO=TRN_FFM_ULD.TR_NO AND TRN_FFM_ULD.BRD_POINT=#ldgPt# 
			AND TRN_FFM_MSG.FLT_KEY=#fltKey# AND TRN_FFM_MSG.FLT_DATE=TO_DATE(#fltDate#, 'DD-MON-YY') AND (TRN_FFM_MSG.SI_TYPE='S' OR 
			(TRN_FFM_MSG.SI_TYPE='I' AND TRN_FFM_MSG.FFM_STATUS='P'))
	</select>
	
	<resultMap class="cargo.cms.afw.ei.core.OutboundMessage" id="blobObjMap">
		<result property="payload" column="payload" typeHandler="cargo.cms.afw.ei.dao.ObjectToBlobTypeHandler"/>		
	</resultMap>
	<select id="fetchExtsingMsgFrmMsgLog" parameterClass="java.util.HashMap" resultMap="blobObjMap">
		SELECT * FROM (SELECT MSG_CONTENT payload FROM MESSAGE_LOG WHERE FLT_KEY=#fltKey# AND FLT_DATE=TO_DATE(#fltDate#, 'DDMONYY') AND MSG_STATUS='T' 
		AND MSG_TYPE=#msgType# ORDER BY MSG_LOG_ID DESC) WHERE ROWNUM=1
	</select>

<!-- Maintain Pre-FFM :: Anup :: Ends -->

<!-- FFM Outbound Message :: Anup :: Begins -->
	<insert id="createTrnFfmOutMsg" parameterClass="cargo.cms.trn.bo.TrnFFMMessageBO">
		INSERT INTO TRN_FFM_OUT_MSG 
			(TR_NO, CARR_CODE, FLT_NO, FLT_DATE, FLT_KEY, BRD_POINT, MSG_SEQ_NUM , COPY_NO, MSG_VER, SEND_DATE, ACFT_REG_NO, FFM_STATUS, 
			ALT_FLIGHT_CAR, ALT_FLIGHT_NO, ALT_FLIGHT_DATE, SI_TYPE,ACCESS_LEVEL, TOTAL_COUNT, TR_TYPE, TOTAL_PCS, TOTAL_WT, TOTAL_UAWB, OFF_POINT) 
		VALUES 
			(#trNo#, #carrierCode#, #flightNo#, TO_Date(#flightDate#, 'MM/DD/YYYY'), #flightKey#, #loadingPoint#, #msgSeqNo#, #copyNo#, 
			#msgVersionNumber#, SUBSTR(SYSDATE,1,9), #arcftRegNo#, #status# , NULL, NULL, NULL, 'E', NULL, 1, 'MEFFM', nvl(#totalPcs#,0), 
			nvl(#totalWt#,0), nvl(#totalUAWB#,0), #unLoadingPoint#)
	</insert>
	
	<insert id="createTrnFfmOutShp" parameterClass="cargo.cms.trn.bo.TrnFFMShipmentBO">
		INSERT INTO TRN_FFM_OUT_SHP 
			(TR_NO, DOC_LINE_NO, UDOC_LINE_NO, BRD_POINT, OFF_POINT, AWB_NO, AWB_DATE, ORG, DEST, CONTENT, WT, WT_UNIT, VOL_UNIT, VOL_AMT, CNSL_IND, 
			ACCS_IND, LBS_IND, EMPTY_IND, EIC_IND, SURPLUS_IND, CFM_IND, LOC_CODE, RMK, COD_APT_FDS, CNG_TYPE, MAN_PCS, MAN_WT, MAN_VOL, PCS, 
			DES_SHP_NOG, PART_SHMPT_YN, SPL_CODE1, SPL_CODE2, SPL_CODE3, SPL_CODE4, SPL_CODE5, SPL_CODE6, SPL_CODE7, SPL_CODE8, COD_DEN, DES_SHP_OSI_1, 
			DES_SHP_OSI_2, COD_COM_TRN_STS, CNTG_FLT_CARR1, CNTG_FLT_NO1, CNTG_FLT_DATE1, CNTG_DEST1, CNTG_FLT_CARR2, CNTG_FLT_NO2, CNTG_FLT_DATE2, 
			CNTG_DEST2, CNTG_FLT_CARR3, CNTG_FLT_NO3, CNTG_FLT_DATE3, CNTG_DEST3, COD_ONW_PRI, COD_DIS_ODR, DES_CUS_REF, SHP_WGT_LBS, MOV_PRI_CODE, 
			SHMPT_CODE, TR_TYPE,CUST_ORG_CODE, ISO_CTRY_CODE1, INFO_IDENTIFIER1, CUSTOMS_INFO_IDENTIFIERI, SUPP_CUSTOMS_INFO1, ISO_CTRY_CODE2, 
			INFO_IDENTIFIER2, CUSTOMS_INFO_IDENTIFIER2, SUPP_CUSTOMS_INFO2) 
		VALUES 
			(#trNo#, #docLineNo#, #udocLineNo#, #loadingPoint#, #unLoadingPoint#, #awbNo#, SUBSTR(SYSDATE,1,9), #origin#, #dest#, #natureOfGoods#, 
			#weight#, #weightCode#, #volumeCode#, #volumeAmount#, #cnslIndicator#, NULL, NULL, NULL, NULL, NULL, NULL, #locCode#, NULL, 'COD', 'T', 
			#manPieces#, #manWeight#, #manVolume#, #totalPieces#, NULL, #partShippment#, #specialCode1#, #specialCode2#, NULL, NULL, NULL, NULL, NULL, 
			NULL, NULL, #osiText1#, #osiText2#, NULL, #cntgFlightCarrierCode1#, #cntgFlightNo1#, TO_Date(#cntgFlightDate1#, 'MM/DD/YYYY'), 
			#cntgNextDestAirportCode1#, #cntgFlightCarrierCode2#, #cntgFlightNo2#, TO_Date(#cntgFlightDate2#, 'MM/DD/YYYY'), #cntgNextDestAirportCode2#, 
			#cntgFlightCarrierCode3#, #cntgFlightNo3#, TO_Date(#cntgFlightDate3#, 'MM/DD/YYYY'), #cntgNextDestAirportCode3#, #mvtPriorityCode#, NULL, 
			NULL, NULL, #mvtPriorityCode#, #shipmentDescCode#, 'MEFFM',#customsOriginCode#, #isoCountryCode1#, #informationIdentifier1#, #customsInformationIdentifier1#, 
			#suppCustomsInformation1#, #isoCountryCode2#, #informationIdentifier2#, #customsInformationIdentifier2#, #suppCustomsInformation2#)
	</insert>
	
	<insert id="createTrnFfmOutUld" parameterClass="cargo.cms.trn.bo.TrnFFMUldBO">
		INSERT INTO TRN_FFM_OUT_ULD 
			(TR_NO, DOC_LINE_NO, ULD_TYPE, ULD_NO, ULD_CARR, ULD_KEY, BRD_POINT, OFF_POINT, CNTG_FLT_CARR1, CNTG_FLT_NO1, CNTG_FLT_DATE1, 
			CNTG_DEST1, CNTG_FLT_CARR2, CNTG_FLT_NO2, CNTG_FLT_DATE2, CNTG_DEST2, CNTG_FLT_CARR3, CNTG_FLT_NO3, CNTG_FLT_DATE3, CNTG_DEST3, 
			ULD_LOD_IND, ULD_VOL_AVA, DIS_ODR, ULD_RMK, NIL_IND, VOL_AVAIL_CODE) 
		VALUES 
			(#trNo#,#docLineNo#, #uldType#, #uldNo#, #uldCarrierCode#, #uldKey#, #loadingPoint#, #unLoadingPoint#, #uldCntgFlightCarrierCode1#, 
			#uldCntgFlightNo1#, TO_Date(#uldCntgFlightDate1#, 'MM/DD/YYYY'), #uldCntgNextDestAirportCode1#, #uldCntgFlightCarrierCode2#, #uldCntgFlightNo2#, 
			TO_Date(#uldCntgFlightDate2#, 'MM/DD/YYYY'), #uldCntgNextDestAirportCode2#, #uldCntgFlightCarrierCode3#, #uldCntgFlightNo3#, 
			TO_Date(#uldCntgFlightDate3#, 'MM/DD/YYYY'), #uldCntgNextDestAirportCode3#, #uldLoadingIndicator#, #uldVolumeAvailability#, #uldDisorder#, 
			#uldRemarks#, #nilCargoIndicator#, #uldVolumeCode#)
	</insert>
	
	<insert id="createTrnFfmOutShpDmn" parameterClass="cargo.cms.trn.bo.TrnFFMShpDmnBO">
		INSERT INTO TRN_FFM_OUT_SHP_DMN 
			(TR_NO, DOC_LINE_NO, SDOC_LINE_NO, LENGTH, WIDTH, HEIGHT, PCS, WT, WT_UNIT, DMN_UNT, DMN_WGT_LBS,CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE) 
		VALUES 
			(#trNo#, TRN_FFM_SHP_DMN_SEQ.NEXTVAL, #sdocLineNo#, #dim_Length#, #dim_Width#, #dim_Height#, #dim_NoOfPieces#, #dim_Weight#, #dim_WeightCode#, 
			#dim_MsrUnitCode#, NULL,'SYSUSER', SYSDATE, 'SYSUSER', SYSDATE)
	</insert>
	
	<select id ="fetchTrnFfmOutMsgSeqNo" resultClass="java.lang.String">
		SELECT TRN_FFM_OUT_MSG_SEQ.NEXTVAL as trNo FROM DUAL
	</select>
	
	<select id="fetchTrnFfmOutUldSeqNo" resultClass="java.lang.Integer">
		SELECT TRN_FFM_OUT_ULD_SEQ.NEXTVAL AS docLineNo FROM DUAL
	</select>

	<select id="fetchTrnFfmOutShpSeqNo" resultClass="java.lang.Integer">
		SELECT TRN_FFM_OUT_SHP_SEQ.NEXTVAL AS docLineNo FROM DUAL
	</select>
	
	<select id="fetchTrnFfmOutMsgByFlt" parameterClass="cargo.cms.trn.bo.TrnFFMMessageBO" resultClass="cargo.cms.trn.bo.TrnFFMMessageBO">
		SELECT 
			TR_NO AS trNo, FFM_STATUS AS status, SUCCESS_MSGS AS successMsgsSeqNo, MSG_SEQ_NUM AS msgSeqNo, TOTAL_COUNT AS totalSplitMsgs, 
			COPY_NO AS copyNo, FLT_NO AS flightNo, FLT_KEY as flightKey, TO_CHAR(FLT_DATE ,'MM/DD/YYYY')AS flightDate, BRD_POINT AS loadingPoint, 
			LAST_IND AS lastIndicator, OFF_POINT AS unLoadingPoint
		FROM 
			TRN_FFM_OUT_MSG 
		WHERE 
			FLT_KEY=#flightKey# AND FLT_DATE=TO_DATE(#flightDate#,'MM/DD/YYYY') AND BRD_POINT=#loadingPoint#
			AND FFM_STATUS='CONT' AND SI_TYPE='I' 
		<isNotNull prepend = "AND" property="trNo">
		 	TR_NO=#trNo#
		 </isNotNull>
	</select>

	<select id="fetchTrnFfmOutMsgByMaxCopyNoAndFlt" parameterClass="cargo.cms.trn.bo.TrnFFMMessageBO" resultClass="cargo.cms.trn.bo.TrnFFMMessageBO">		
		SELECT 
			TR_NO AS trNo, FFM_STATUS AS status, SUCCESS_MSGS AS successMsgsSeqNo, MSG_SEQ_NUM AS msgSeqNo, TOTAL_COUNT AS totalSplitMsgs, 
			COPY_NO AS copyNo, FLT_NO AS flightNo, FLT_KEY as flightKey, TO_CHAR(FLT_DATE ,'MM/DD/YYYY') AS flightDate, BRD_POINT AS loadingPoint, 
			MSG_VER AS msgVersionNumber, OFF_POINT AS unLoadingPoint 
		FROM 
			TRN_FFM_OUT_MSG 
		WHERE 
			FLT_KEY=#flightKey# AND FLT_DATE=TO_DATE(#flightDate#,'MM/DD/YYYY') AND BRD_POINT=#loadingPoint#
			AND SI_TYPE='I' AND COPY_NO=(SELECT MAX(COPY_NO) AS copyNo FROM TRN_FFM_OUT_MSG WHERE FLT_KEY=#flightKey# 
			AND FLT_DATE=TO_DATE(#flightDate#,'MM/DD/YYYY') AND BRD_POINT=#loadingPoint# AND SI_TYPE='I') 
		ORDER BY TR_NO DESC
	</select>
	
	<select id="fetchMaxDocLnNoForFfmOutUld" parameterClass="cargo.cms.trn.bo.TrnFFMUldBO" resultClass="java.lang.Integer">
		SELECT 
			MAX(DOC_LINE_NO) AS docLineNo 
		FROM 
			TRN_FFM_OUT_ULD 
		WHERE 
			ULD_KEY=#uldKey# AND TR_NO=#trNo# AND OFF_POINT=#unLoadingPoint#
	</select>
	
	<select id="fetchMaxDocLnNoForBulkShpInFfmOutUld" parameterClass="cargo.cms.trn.bo.TrnFFMUldBO" resultClass="java.lang.Integer">
		SELECT 
			MAX(DOC_LINE_NO) AS docLineNo 
		FROM 
			TRN_FFM_OUT_ULD 
		WHERE 
			ULD_KEY IS NULL AND TR_NO=#trNo# AND OFF_POINT=#unLoadingPoint#
	</select>
	
	<update id="updatesuccessMsgsSeqNoInFfmOutMsg" parameterClass="cargo.cms.trn.bo.TrnFFMMessageBO">
		UPDATE 
			TRN_FFM_OUT_MSG 
		SET 
			SUCCESS_MSGS=#successMsgsSeqNo# 
		WHERE 
			FLT_KEY=#flightKey# AND FLT_DATE=TO_DATE(#flightDate#,'MM/DD/YYYY') AND BRD_POINT=#loadingPoint# 
			AND FFM_STATUS='CONT' AND SI_TYPE='I' 
		<isNotNull prepend="AND" property="trNo">	
			TR_NO=#trNo#
		</isNotNull>
	</update>
	
	<update id="updateFfmStatusInFfmOutMsg" parameterClass="cargo.cms.trn.bo.TrnFFMMessageBO">
		UPDATE 
			TRN_FFM_OUT_MSG 
		SET 
			FFM_STATUS=#status# 
		WHERE 
			FLT_KEY=#flightKey# AND FLT_DATE=TO_DATE(#flightDate#,'MM/DD/YYYY') AND BRD_POINT=#loadingPoint# AND 
			FFM_STATUS='CONT' AND SI_TYPE='I'
		<isNotNull prepend="AND" property="trNo">	
		 	TR_NO=#trNo#
		</isNotNull>
	</update>
	
	<update id="updateFfmStatusForUnprocessedInFfmOutMsg" parameterClass="cargo.cms.trn.bo.TrnFFMMessageBO">
		UPDATE 
			TRN_FFM_OUT_MSG 
		SET 
			FFM_STATUS=#status# 
		WHERE 
			FLT_KEY=#flightKey# AND FLT_DATE=TO_DATE(#flightDate#,'MM/DD/YYYY') AND BRD_POINT=#loadingPoint# AND 
			FFM_STATUS='UNPRO' AND SI_TYPE='I'
		<isNotNull prepend="AND" property="trNo">	
		 	TR_NO=#trNo#
		</isNotNull>
	</update>
	
	<update id="updateMsgSeqNoInFfmOutMsgByFlt" parameterClass="cargo.cms.trn.bo.TrnFFMMessageBO">
		UPDATE 
			TRN_FFM_OUT_MSG 
		SET 
			MSG_SEQ_NUM=#msgSeqNo# 
		WHERE 
			FLT_KEY=#flightKey# AND FLT_DATE=TO_DATE(#flightDate#,'MM/DD/YYYY') AND BRD_POINT=#loadingPoint# 
			AND FFM_STATUS='CONT' AND SI_TYPE='I' 
		<isNotNull prepend="AND" property="trNo">	
			TR_NO=#trNo#
		</isNotNull>		
	</update>
	
	<update id="updateTotCntInFfmOutMsgByFlt" parameterClass="cargo.cms.trn.bo.TrnFFMMessageBO">
		UPDATE 
			TRN_FFM_OUT_MSG 
		SET 
			TOTAL_COUNT=(NVL(TOTAL_COUNT, 0) + 1) 
		WHERE 
			FLT_KEY=#flightKey# AND FLT_DATE=TO_DATE(#flightDate#,'MM/DD/YYYY') AND BRD_POINT=#loadingPoint# AND 
			FFM_STATUS='CONT' AND SI_TYPE='I'
		<isNotNull prepend="AND" property="trNo">	
		 	TR_NO=#trNo#
		</isNotNull>		
	</update>
	
	<select id="fetchFltSubStatusInCustomsForFFMOut" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		SELECT 
			COUNT(1) 
		FROM 
			TRN_FFM_OUT_MSG MSG, CST_SUBM SUBM 
		WHERE 
			SUBM.FLT_KEY=MSG.FLT_KEY AND SUBM.FLT_DATE=MSG.FLT_DATE AND SUBM.REC_TYPE='INT' AND MSG.FLT_KEY=#flightKey# AND 
			MSG.FLT_DATE=TO_DATE( #flightDate#, 'MM/DD/YYYY') AND SUBM.SEND_STATUS NOT IN ('E','R')
	</select>
	
	<update id="updateAlFltDtlsInFfmOutMsg" parameterClass="java.util.HashMap">
		UPDATE 
			TRN_FFM_OUT_MSG 
		SET 
			ALT_FLIGHT_CAR=#altFlightCarrierCode# ,ALT_FLIGHT_NO=#altFlightNo#, ALT_FLIGHT_DATE=TO_Date(#altFlightDate#, 'MM/DD/YYYY'), 
			SI_TYPE=#siType# 
		WHERE 
			TR_NO=#TR_NO#
	</update>
	
	<update id="updateLastIndInFfmOutMsg" parameterClass="java.util.HashMap">
		UPDATE 
			TRN_FFM_OUT_MSG 
		SET 
			LAST_IND=#lastIndicator#, TOTAL_PCS=nvl(#totalPcs#,TOTAL_PCS), TOTAL_WT=nvl(#totalWt#,TOTAL_WT), TOTAL_UAWB=nvl(#totalUAWB#,TOTAL_UAWB) 
		WHERE 
			TR_NO=#trNo#
	</update>
	
	<update id="updateUnprocessedFfmStatusInFfmOutMsg" parameterClass="cargo.cms.trn.bo.TrnFFMMessageBO">
		UPDATE 
			TRN_FFM_OUT_MSG 
		SET 
			FFM_STATUS='UNPRO' 
		WHERE 
			FLT_KEY=#flightKey# AND FLT_DATE=TO_DATE(#flightDate#,'MM/DD/YYYY') AND BRD_POINT=#loadingPoint# AND FFM_STATUS='P' 
			AND SI_TYPE='I' AND TR_NO!=#trNo#
	</update>
	
	<select id="fetchAwbNoFromFfmOutShp" parameterClass="cargo.cms.trn.bo.TrnFFMMessageBO" resultClass="cargo.cms.trn.bo.TrnFFMShipmentBO">		
		SELECT 
			DISTINCT AWB_NO as awbNo 
		FROM 
			TRN_FFM_OUT_SHP 
		WHERE 
			TR_NO=#trNo# AND (SPL_CODE1 IN ('EAW','MAL','EAP') OR SPL_CODE2 IN ('EAW','MAL','EAP') OR SPL_CODE3 IN ('EAW','MAL','EAP') 
			OR SPL_CODE4 IN ('EAW','MAL','EAP') OR SPL_CODE5 IN ('EAW','MAL','EAP') OR SPL_CODE6 IN ('EAW','MAL','EAP') OR SPL_CODE7 
			IN ('EAW','MAL','EAP') OR SPL_CODE8 IN ('EAW','MAL','EAP') OR SPL_CODE9 IN ('EAW','MAL','EAP'))
     </select>
     
     <select id="fetchFinalizedFFMFromFfmOutMsg" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		SELECT 
			COUNT(1) 
		FROM 
			TRN_FFM_OUT_MSG 
		WHERE 
			FLT_KEY=#flightKey# AND FLT_DATE=TO_DATE(#flightDate#,'DDMONYY') AND FINALIZE_DATE IS NOT NULL AND FINALIZE_USER_ID IS NOT NULL
	</select>
	
	<select id="fetchFfmMsgByMaxCopNoFrmFfmOutMsg" parameterClass="cargo.cms.trn.bo.TrnFFMMessageBO" resultClass="cargo.cms.trn.bo.TrnFFMMessageBO">		
		SELECT 
			TR_NO AS trNo, FFM_STATUS AS status, SUCCESS_MSGS AS successMsgsSeqNo, MSG_SEQ_NUM AS msgSeqNo, TOTAL_COUNT AS totalSplitMsgs, 
			COPY_NO AS copyNo, FLT_NO AS flightNo, FLT_KEY as flightKey, TO_CHAR(FLT_DATE ,'MM/DD/YYYY')AS flightDate, BRD_POINT AS loadingPoint, 
			MSG_VER AS msgVersionNumber, OFF_POINT AS unLoadingPoint 
		FROM 
			TRN_FFM_OUT_MSG 
		WHERE 
			FLT_KEY=#flightKey# AND FLT_DATE=TO_DATE(#flightDate#,'MM/DD/YYYY') AND BRD_POINT=#loadingPoint# 
			AND SI_TYPE='I' AND MSG_VER=#msgVersionNumber# AND COPY_NO=(SELECT MAX(COPY_NO) AS copyNo FROM TRN_FFM_OUT_MSG WHERE FLT_KEY=#flightKey# 
			AND FLT_DATE=TO_DATE(#flightDate#,'MM/DD/YYYY') AND BRD_POINT=#loadingPoint# AND SI_TYPE='I' 
			AND MSG_VER=#msgVersionNumber#)		
		FOR UPDATE
	</select>
	
	<select id="checkIfFlightIsValidForFFMOut" parameterClass="cargo.cms.trn.bo.TrnFFMMessageBO" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM TRN_FLT_OPR WHERE FLT_KEY=#flightKey# AND SCH_DATE=TO_DATE(#flightDate#,'MM/DD/YYYY') AND FLT_TYPE='D'
	</select>
	
	<insert id="insertAwbForTrnFfmOut" parameterClass="cargo.cms.trn.bo.TrnFFMShipmentBO">	
		INSERT INTO AWB
			(AWB_NO, AWB_DATE, AWB_TYPE, PPK_TYPE, CATALOG, ORIG, DEST, PCS, WT, CONTENT, SPL_CODE1, SPL_CODE2, CR_USER_ID, CR_DATE, 
			LM_USER_ID, LM_DATE) 
		VALUES
			(#awbNo#, SUBSTR(SYSDATE,1,9), DECODE(#dest#, 'HKG', 'I', 'T'), 'B', DECODE(#dest#, 'HKG', 'IG', DECODE(#origin#, 'HKG', 'EG', 'TG')), 
			#origin#, #dest#, #totalPieces#, #weight#, #natureOfGoods#, #specialCode1#, #specialCode2#, 'SYSTEM', SYSDATE, 'SYSTEM', SYSDATE)
	</insert>
	
	<select id="fetchFlightDateForFFMOutbound" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT 
			TO_CHAR(SCH_ARR_DATE,'MM/DD/YYYY') 
		FROM 
			TRN_FLT_OPR_LEG 
		WHERE 
			TR_NO=(SELECT TR_NO FROM TRN_FLT_OPR_LEG WHERE FLT_KEY=#flightKey# AND SCH_DEP_DATE=TO_DATE(#flightDate#,'MM/DD/YYYY') 
			AND OFF_POINT=#boardingPoint#) AND BRD_POINT='HKG' AND FLT_TYPE='D'
	</select>
	
	<update id="updateLastIndInFfmMsgForFFMOutbound" parameterClass="java.util.HashMap">
		UPDATE 
			TRN_FFM_OUT_MSG 
		SET 
			LAST_IND=#lastIndicator#, TOTAL_PCS=nvl(#totalPcs#,TOTAL_PCS), TOTAL_WT=nvl(#totalWt#,TOTAL_WT), TOTAL_UAWB=nvl(#totalUAWB#,TOTAL_UAWB) 
		WHERE 
			TR_NO=#trNo#
	</update>
	
	<update id="updateAlFltDtlsInFfmMsgForFFMOutbound" parameterClass="java.util.HashMap">
		UPDATE 
			TRN_FFM_OUT_MSG 
		SET 
			ALT_FLIGHT_CAR=#altFlightCarrierCode# ,ALT_FLIGHT_NO=#altFlightNo#, ALT_FLIGHT_DATE=TO_Date(#altFlightDate#, 'MM/DD/YYYY'), 
			SI_TYPE=#siType# 
		WHERE 
			TR_NO=#TR_NO#
	</update>
	
	<update id="updateUnprocessedFfmStatusInFfmMsgForOutboundFFM" parameterClass="cargo.cms.trn.bo.TrnFFMMessageBO">
		UPDATE 
			TRN_FFM_OUT_MSG 
		SET 
			FFM_STATUS='UNPRO' 
		WHERE 
			FLT_KEY=#flightKey# AND FLT_DATE=TO_DATE(#flightDate#,'MM/DD/YYYY') AND BRD_POINT=#loadingPoint#
			AND FFM_STATUS='P' AND SI_TYPE='I' AND TR_NO!=#trNo#
	</update>
	
	<insert id="sqlInsertEdiFFMMsgLockForHactlFFM" parameterClass="cargo.cms.trn.bo.TrnFFMMessageBO">
		INSERT INTO EDI_FFM_MSG_LOCK(FLT_KEY,FLT_DATE,BRD_POINT,VER_NO,MSG_TYPE) VALUES(#flightKey#, TO_DATE(#flightDate#,'MM/DD/YYYY'),#loadingPoint#,0,'HFM')
	</insert>
	<select id="sqlSelectEdiFFMMsgLockForUpdateForHactlFFM" parameterClass="cargo.cms.trn.bo.TrnFFMMessageBO" resultClass="java.util.HashMap">
		SELECT FLT_KEY, FLT_DATE, BRD_POINT,VER_NO FROM EDI_FFM_MSG_LOCK WHERE FLT_KEY = #flightKey# AND FLT_DATE = TO_DATE(#flightDate#,'MM/DD/YYYY') 
		AND BRD_POINT = #loadingPoint# AND MSG_TYPE='HFM'
		FOR UPDATE OF VER_NO
	</select>
	<update id="sqlUpdateEdiFFMMsgLockForHactlFFM" parameterClass="cargo.cms.trn.bo.TrnFFMMessageBO">
		UPDATE EDI_FFM_MSG_LOCK SET VER_NO = (VER_NO + 1) WHERE FLT_KEY = #flightKey# AND FLT_DATE = TO_DATE(#flightDate#,'MM/DD/YYYY') AND BRD_POINT = #loadingPoint# 
		AND MSG_TYPE='HFM'
	</update>
<!-- FFM Outbound Message :: Anup :: Ends -->

<!-- Maintain Outbound FFM :: Anup :: Begins -->
	<select id="fetchLadingPointsByFltMtnOutbdFFM" parameterClass="java.util.HashMap" resultClass="cargo.cms.trn.bo.TrnFFMMessageBO">
		SELECT 
			BRD_POINT AS loadingPoint, OFF_POINT AS unLoadingPoint 
		FROM 
			TRN_FLT_OPR_SEG 
		WHERE 
			TR_NO IN (SELECT TR_NO FROM TRN_FLT_OPR WHERE FLT_KEY=#fltKey# AND SCH_DATE=TO_DATE(#fltDate#, 'dd-mon-yy') AND FLT_TYPE='D') AND BRD_POINT='HKG'
	</select>
	<select id="fetchFfmFltDtlsByFltForMtnOutbndFfm" parameterClass="java.util.HashMap" resultClass="cargo.cms.trn.bo.TrnFFMMessageBO">
		SELECT 
			<!-- NVL(pkg_common.get_flt_ata(TRN_FLT_OPR.FLT_KEY,TRN_FLT_OPR.SCH_DATE,TRN_FLT_OPR.FLT_TYPE), TO_CHAR(SCH_DATE, 'DDMONYY')) AS fltATA, ACFT_REG_NO AS arcftRegNo -->
			pkg_common.get_flt_final_ata_eta_sta(TRN_FLT_OPR.FLT_KEY||(SELECT TRN_FLT_SUFFIX FROM SYS_PARAM),TRN_FLT_OPR.SCH_DATE,TRN_FLT_OPR.FLT_TYPE) AS fltATA, ACFT_REG_NO AS arcftRegNo
		FROM 
			TRN_FLT_OPR 
		WHERE 
			FLT_KEY=#fltKey# AND SCH_DATE=TO_DATE(#fltDate#,'DDMONYY') AND FLT_TYPE='D' AND ROWNUM=1
	</select>
	
	<select id="fetchFFMTotalPcsWtByLdgPtForMtnOutbndFfm" parameterClass="java.util.HashMap" resultClass="cargo.cms.trn.bo.TrnFFMMessageBO">
		SELECT 
			SUM(TRN_FFM_OUT_SHP.MAN_PCS) AS totalPcs, SUM(TRN_FFM_OUT_SHP.MAN_WT) AS totalWt 
		FROM 
			TRN_FFM_OUT_MSG INNER JOIN TRN_FFM_OUT_ULD ON TRN_FFM_OUT_MSG.TR_NO=TRN_FFM_OUT_ULD.TR_NO AND TRN_FFM_OUT_ULD.BRD_POINT=#ldgPt# 
			AND TRN_FFM_OUT_ULD.OFF_POINT=#unldgPt# LEFT JOIN TRN_FFM_OUT_SHP ON TRN_FFM_OUT_MSG.TR_NO=TRN_FFM_OUT_SHP.TR_NO AND 
			TRN_FFM_OUT_ULD.DOC_LINE_NO=TRN_FFM_OUT_SHP.UDOC_LINE_NO 
		WHERE 
			TRN_FFM_OUT_MSG.FLT_KEY=#fltKey# AND TRN_FFM_OUT_MSG.FLT_DATE=TO_DATE(#fltDate#,'DDMONYY') AND (TRN_FFM_OUT_MSG.SI_TYPE='S' 
			OR (TRN_FFM_OUT_MSG.SI_TYPE='I' AND TRN_FFM_OUT_MSG.FFM_STATUS='P'))
	</select>
	
	<select id="fetchFFMNilIndByFltForMtnOutbndFfm" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT 
			DECODE(COUNT(1), 0, 'Y', 'N') AS TMPNILIND 
		FROM 
			TRN_FFM_OUT_MSG INNER JOIN TRN_FFM_OUT_ULD ON TRN_FFM_OUT_MSG.TR_NO=TRN_FFM_OUT_ULD.TR_NO AND TRN_FFM_OUT_ULD.BRD_POINT=#ldgPt# 
			AND TRN_FFM_OUT_ULD.OFF_POINT=#unldgPt# 
		WHERE 
			TRN_FFM_OUT_MSG.FLT_KEY=#fltKey# AND TRN_FFM_OUT_MSG.FLT_DATE=TO_DATE(#fltDate#,'DDMONYY') AND (TRN_FFM_OUT_MSG.SI_TYPE='S' OR (TRN_FFM_OUT_MSG.SI_TYPE='I' 
			AND TRN_FFM_OUT_MSG.FFM_STATUS='P')) AND TRN_FFM_OUT_ULD.NIL_IND='N'
	</select>
	
	<select id="fetchFFMTtlNoOfAwbByFltForMtnOutbndFfm" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT 
			NVL(COUNT(DISTINCT C.AWB_NO),0) AS noOfAWB 
		FROM 
			TRN_FFM_OUT_MSG A, TRN_FFM_OUT_ULD B, TRN_FFM_OUT_SHP C 
		WHERE 
			A.TR_NO=B.TR_NO AND B.TR_NO=C.TR_NO AND B.DOC_LINE_NO=C.UDOC_LINE_NO AND A.FLT_KEY=#fltKey# AND A.FLT_DATE=TO_DATE(#fltDate#,'dd-mon-yy') 
			AND B.BRD_POINT=#ldgPt# AND B.OFF_POINT=#unldgPt# AND (A.SI_TYPE='S' OR (A.SI_TYPE = 'I' AND A.FFM_STATUS='P'))
	</select>
	
	<select id="fetchConsolidatedFFMForMtnOutbndFfm" parameterClass="java.util.HashMap" resultClass="cargo.cms.trn.bo.TrnFFMShipmentBO">
		SELECT * FROM (
		SELECT 
			DISTINCT TO_CHAR(TRN_FFM_OUT_MSG.TR_NO) AS trNo, TRN_FFM_OUT_ULD.DOC_LINE_NO AS udocLineNo, TRN_FFM_OUT_SHP.DOC_LINE_NO AS docLineNo, TRN_FFM_OUT_ULD.ULD_KEY AS uldKey, 
			DECODE(TRN_FFM_OUT_SHP.AWB_NO, NULL, NULL, SUBSTR(TRN_FFM_OUT_SHP.AWB_NO, 1, 3) || '-' || SUBSTR(TRN_FFM_OUT_SHP.AWB_NO, 4)) AS awbNoDisp, 
			TRN_FFM_OUT_SHP.ORG AS origin, TRN_FFM_OUT_SHP.DEST AS dest, TRN_FFM_OUT_SHP.SHMPT_CODE AS shipmentDescCode, TRN_FFM_OUT_SHP.AWB_NO  AS awbNo, 
			TO_CHAR(TRN_FFM_OUT_SHP.AWB_DATE, 'DDMONYY') AS awbDate, TRN_FFM_OUT_SHP.MAN_PCS AS manPieces, TRIM(TO_CHAR(TRN_FFM_OUT_SHP.MAN_WT, 'FM9999990.90')) AS manWeight, 
			DECODE(TRN_FFM_OUT_SHP.SHMPT_CODE, 'T', '', TRN_FFM_OUT_SHP.PCS) AS totalPieces, DECODE(TRN_FFM_OUT_SHP.SHMPT_CODE, 'T', '', TRN_FFM_OUT_SHP.WT) AS totalWeight, 
			TRN_FFM_OUT_SHP.CONTENT AS natureOfGoods, TRN_FFM_OUT_SHP.SPL_CODE1 AS specialCode1, TRN_FFM_OUT_SHP.SPL_CODE2 AS specialCode2, V_UNFIN_DDT_DTL.SHP_TRF_TYPE AS transferType, 
			V_UNFIN_DDT_DTL.CNTG_FLT_KEY AS cntgFlightKey1 
		FROM 
			TRN_FFM_OUT_MSG INNER JOIN TRN_FFM_OUT_ULD ON TRN_FFM_OUT_MSG.TR_NO=TRN_FFM_OUT_ULD.TR_NO AND TRN_FFM_OUT_ULD.BRD_POINT=#ldgPt# AND TRN_FFM_OUT_ULD.OFF_POINT=#unldgPt# 
			LEFT JOIN TRN_FFM_OUT_SHP ON TRN_FFM_OUT_MSG.TR_NO=TRN_FFM_OUT_SHP.TR_NO AND TRN_FFM_OUT_ULD.DOC_LINE_NO=TRN_FFM_OUT_SHP.UDOC_LINE_NO 
			LEFT JOIN V_UNFIN_DDT_DTL ON V_UNFIN_DDT_DTL.AWB_NO=TRN_FFM_OUT_SHP.AWB_NO AND V_UNFIN_DDT_DTL.AWB_DATE=TRN_FFM_OUT_SHP.AWB_DATE AND 
			V_UNFIN_DDT_DTL.FLT_KEY=#fltKey#||#trnFltSfx# AND V_UNFIN_DDT_DTL.FLT_DATE=TO_DATE(#fltDate#, 'DDMONYY')
		WHERE 
			TRN_FFM_OUT_MSG.FLT_KEY=#fltKey# AND TRN_FFM_OUT_MSG.FLT_DATE=TO_DATE(#fltDate#, 'DDMONYY') AND (TRN_FFM_OUT_MSG.SI_TYPE='S' OR (TRN_FFM_OUT_MSG.SI_TYPE='I' 
			AND FFM_STATUS='P')) 
		UNION 
		SELECT 
			DISTINCT TRN_EXP_MANIFEST_HD.TR_NO AS trNo, TRN_EXP_MANIFEST_ULD.DOC_LINE_NO AS udocLineNo, TRN_EXP_MANIFEST_DTL.DOC_LINE_NO AS docLineNo, TRN_EXP_MANIFEST_ULD.ULD_KEY AS uldKey, 
			DECODE(TRN_EXP_MANIFEST_DTL.AWB_NO, NULL, NULL, SUBSTR(TRN_EXP_MANIFEST_DTL.AWB_NO, 1, 3) || '-' || SUBSTR(TRN_EXP_MANIFEST_DTL.AWB_NO, 4)) AS awbNoDisp, 
			TRN_EXP_MANIFEST_DTL.AWB_ORIG AS ORIGIN, TRN_EXP_MANIFEST_DTL.UNLDG_PT AS DEST, TRN_EXP_MANIFEST_DTL.SHPM_DESC_C AS shipmentDescCode, TRN_EXP_MANIFEST_DTL.AWB_NO AS awbNo, 
			TO_CHAR(TRN_EXP_MANIFEST_DTL.AWB_DATE, 'DDMONYY') AS AWBDATE, TRN_EXP_MANIFEST_DTL.SHP_PCS AS MANPIECES, TRIM(TO_CHAR(TRN_EXP_MANIFEST_DTL.SHP_WGT, 'FM9999990.90')) 
			AS MANWEIGHT, DECODE(TRN_EXP_MANIFEST_DTL.SHPM_DESC_C, 'T', '', TRN_EXP_MANIFEST_DTL.AWB_TOTAL_PCS) AS TOTALPIECES, DECODE(TRN_EXP_MANIFEST_DTL.SHPM_DESC_C, 'T', '', 
			TRN_EXP_MANIFEST_DTL.AWB_TOTAL_WT) AS TOTALWEIGHT, NVL( TRIM(TRN_EXP_MANIFEST_DTL.AWB_CONTENT),TRN_EXP_MANIFEST_DTL.MAN_DESC) AS natureOfGoods, TRN_EXP_MANIFEST_DTL.SPL_CODE1 AS specialCode1, 
			TRN_EXP_MANIFEST_DTL.SPL_CODE2 AS specialCode2, V_UNFIN_DDT_DTL.SHP_TRF_TYPE AS transferType, V_UNFIN_DDT_DTL.CNTG_FLT_KEY AS cntgFlightKey1 
		FROM 
			TRN_EXP_MANIFEST_HD INNER JOIN TRN_EXP_MANIFEST_ULD ON TRN_EXP_MANIFEST_HD.TR_NO=TRN_EXP_MANIFEST_ULD.TR_NO 
			LEFT JOIN TRN_EXP_MANIFEST_DTL ON TRN_EXP_MANIFEST_HD.TR_NO=TRN_EXP_MANIFEST_DTL.TR_NO AND TRN_EXP_MANIFEST_ULD.DOC_LINE_NO=TRN_EXP_MANIFEST_DTL.UDOC_LINE_NO 
			LEFT JOIN V_UNFIN_DDT_DTL ON V_UNFIN_DDT_DTL.AWB_NO=TRN_EXP_MANIFEST_DTL.AWB_NO AND V_UNFIN_DDT_DTL.AWB_DATE=TRN_EXP_MANIFEST_DTL.AWB_DATE AND 
			V_UNFIN_DDT_DTL.FLT_KEY=#fltKey#||#trnFltSfx# AND V_UNFIN_DDT_DTL.FLT_DATE=TO_DATE(#fltDate#, 'DDMONYY')
		WHERE 
			TRN_EXP_MANIFEST_HD.LDNG_PT=#ldgPt# AND TRN_EXP_MANIFEST_HD.ULDNG_PT=#unldgPt# AND TRN_EXP_MANIFEST_HD.FLT_KEY=#fltKey#||#trnFltSfx# AND 
			TRN_EXP_MANIFEST_HD.FLT_DATE=TO_DATE(#fltDate#, 'DDMONYY')
		 )
		ORDER BY ULDKEY NULLS FIRST, AWBNO
	</select>
	
	<select id="fetchHACTLFFMForMtnOutbndFfm" parameterClass="java.util.HashMap" resultClass="cargo.cms.trn.bo.TrnFFMShipmentBO">
		SELECT 
			DISTINCT TO_CHAR(TRN_FFM_OUT_MSG.TR_NO) AS trNo, TRN_FFM_OUT_ULD.DOC_LINE_NO AS udocLineNo, TRN_FFM_OUT_SHP.DOC_LINE_NO AS docLineNo, TRN_FFM_OUT_ULD.ULD_KEY AS uldKey, 
			DECODE(TRN_FFM_OUT_SHP.AWB_NO, NULL, NULL, SUBSTR(TRN_FFM_OUT_SHP.AWB_NO, 1, 3) || '-' || SUBSTR(TRN_FFM_OUT_SHP.AWB_NO, 4)) AS awbNoDisp, 
			TRN_FFM_OUT_SHP.ORG AS origin, TRN_FFM_OUT_SHP.DEST AS dest, TRN_FFM_OUT_SHP.SHMPT_CODE AS shipmentDescCode, TRN_FFM_OUT_SHP.AWB_NO  AS awbNo, 
			TO_CHAR(TRN_FFM_OUT_SHP.AWB_DATE, 'DDMONYY') AS awbDate, TRN_FFM_OUT_SHP.MAN_PCS AS manPieces, TRIM(TO_CHAR(TRN_FFM_OUT_SHP.MAN_WT, 'FM9999990.90')) AS manWeight, 
			DECODE(TRN_FFM_OUT_SHP.SHMPT_CODE, 'T', '', TRN_FFM_OUT_SHP.PCS) AS totalPieces, DECODE(TRN_FFM_OUT_SHP.SHMPT_CODE, 'T', '', TRN_FFM_OUT_SHP.WT) AS totalWeight, 
			TRN_FFM_OUT_SHP.CONTENT AS natureOfGoods, TRN_FFM_OUT_SHP.SPL_CODE1 AS specialCode1, TRN_FFM_OUT_SHP.SPL_CODE2 AS specialCode2, V_UNFIN_DDT_DTL.SHP_TRF_TYPE AS transferType, 
			V_UNFIN_DDT_DTL.CNTG_FLT_KEY AS cntgFlightKey1 
		FROM 
			TRN_FFM_OUT_MSG INNER JOIN TRN_FFM_OUT_ULD ON TRN_FFM_OUT_MSG.TR_NO=TRN_FFM_OUT_ULD.TR_NO AND TRN_FFM_OUT_ULD.BRD_POINT=#ldgPt# AND TRN_FFM_OUT_ULD.OFF_POINT=#unldgPt# 
			LEFT JOIN TRN_FFM_OUT_SHP ON TRN_FFM_OUT_MSG.TR_NO=TRN_FFM_OUT_SHP.TR_NO AND TRN_FFM_OUT_ULD.DOC_LINE_NO=TRN_FFM_OUT_SHP.UDOC_LINE_NO 
			LEFT JOIN V_UNFIN_DDT_DTL ON V_UNFIN_DDT_DTL.AWB_NO=TRN_FFM_OUT_SHP.AWB_NO AND V_UNFIN_DDT_DTL.AWB_DATE=TRN_FFM_OUT_SHP.AWB_DATE AND 
			V_UNFIN_DDT_DTL.FLT_KEY=#fltKey#||#trnFltSfx# AND V_UNFIN_DDT_DTL.FLT_DATE=TO_DATE(#fltDate#, 'DDMONYY')
		WHERE 
			TRN_FFM_OUT_MSG.FLT_KEY=#fltKey# AND TRN_FFM_OUT_MSG.FLT_DATE=TO_DATE(#fltDate#, 'DDMONYY') AND (TRN_FFM_OUT_MSG.SI_TYPE='S' OR (TRN_FFM_OUT_MSG.SI_TYPE='I' 
			AND FFM_STATUS='P')) 
		ORDER BY ULDKEY NULLS FIRST, AWBNO
	</select>
	
	<update id="updateManPcWtInTrnFFMOutShp" parameterClass="java.util.HashMap">
		UPDATE 
			TRN_FFM_OUT_SHP 
		SET 
			MAN_PCS=#manPcs#, MAN_WT=#manWt#, LM_USER_ID=#modifiedUserId#, LM_DATE=SYSDATE 
		WHERE 
			TR_NO=#trNo# AND DOC_LINE_NO=#docLineNo# AND UDOC_LINE_NO=#uDocLineNo#
	</update>
	
	<update id="updateFFMSentIndForAmned" parameterClass="java.util.HashMap">
		UPDATE TRN_FFM_OUT_MSG SET FFM_SENT='N', LM_USER_ID=#modifiedUserId#, LM_DATE=SYSDATE WHERE TR_NO=#trNo#
	</update>
	
	<delete id="deleteTrnFFMOutUld" parameterClass="java.util.HashMap">
		DELETE FROM TRN_FFM_OUT_ULD WHERE TR_NO=#trNo# AND DOC_LINE_NO=#docLineNo#
	</delete>
	
	<delete id="deleteTrnFFMOutShp" parameterClass="java.util.HashMap">
		DELETE FROM TRN_FFM_OUT_SHP WHERE TR_NO=#trNo# AND DOC_LINE_NO=#docLineNo# AND UDOC_LINE_NO=#uDocLineNo#
	</delete>
	
	<select id="fetchMtnOutFFMHactlfFFMStatus" parameterClass="java.util.HashMap" resultClass="cargo.cms.trn.bo.TrnFFMMessageBO">
		SELECT 
			DECODE(COUNT(1), 0, 'N', 'Y') AS hactlFFM, FFM_SENT AS ffmSent 
		FROM 
			TRN_FFM_OUT_MSG 
		WHERE 
			FLT_KEY=#fltKey# AND FLT_DATE=TO_DATE(#fltDate#, 'DDMONYY') AND (SI_TYPE='S' OR (SI_TYPE='I' AND FFM_STATUS='P')) GROUP BY FFM_SENT 
	</select>
	
	<select id="checkIfFFMExistsForTrnOBFFM" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		SELECT 
			COUNT(1) 
		FROM 
			TRN_FFM_OUT_MSG INNER JOIN TRN_FFM_OUT_ULD ON TRN_FFM_OUT_MSG.TR_NO=TRN_FFM_OUT_ULD.TR_NO AND TRN_FFM_OUT_ULD.BRD_POINT=#ldgPt# AND 
			TRN_FFM_OUT_ULD.OFF_POINT=#unLdgPt# AND TRN_FFM_OUT_MSG.FLT_KEY=#fltKey# AND TRN_FFM_OUT_MSG.FLT_DATE=TO_DATE(#fltDate#, 'DD-MON-YY') 
			AND (TRN_FFM_OUT_MSG.SI_TYPE='S' OR (TRN_FFM_OUT_MSG.SI_TYPE='I' AND TRN_FFM_OUT_MSG.FFM_STATUS='P'))
	</select>
	
	<select id="checkIfFFMExistsInFltCstOutForTrnOBFFM" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		SELECT 
			COUNT(1) 
		FROM 
			TRN_EXP_MANIFEST_HD 
		WHERE 
			TRN_EXP_MANIFEST_HD.LDNG_PT=#ldgPt# AND TRN_EXP_MANIFEST_HD.ULDNG_PT=#unLdgPt# AND TRN_EXP_MANIFEST_HD.FLT_KEY=#fltKey# 
			AND TRN_EXP_MANIFEST_HD.FLT_DATE=TO_DATE(#fltDate#, 'DD-MON-YY') 
	</select>
	
	<select id="PkgTrnPmanManifestCursor7" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
 	 SELECT A.ULDNG_PT ULDNG_PT, #P_FLT_KEY# P_FLT_KEY, #V_FLT_DATE# V_FLT_DATE,
 	 AWB_NO AWB_NO, 
 	 MAX(C.AWB_TOTAL_PCS) AWB_PCS,
     SUM(C.SHP_PCS) MAN_PCS, 
     SUM(C.SHP_WGT) MAN_WT
     FROM TRN_EXP_MANIFEST_HD A, TRN_EXP_MANIFEST_ULD B, TRN_EXP_MANIFEST_DTL C
       WHERE A.TR_NO = B.TR_NO
         AND B.TR_NO = C.TR_NO
         AND B.DOC_LINE_NO = C.UDOC_LINE_NO
         AND A.FLT_KEY = #P_FLT_KEY#
         AND A.FLT_DATE = TO_DATE(#V_FLT_DATE#,'DDMONYY')
         AND A.ULDNG_PT = #C_UNLDG_PT#
       GROUP BY A.ULDNG_PT, AWB_NO
   	</select>


    <delete id="PkgTrnPmanManifestDeleteFromExpMnfstDtl" parameterClass="java.util.HashMap">
	   DELETE FROM TRN_EXP_MANIFEST_DTL
       WHERE tr_no IN (SELECT tr_no
                         FROM TRN_EXP_MANIFEST_HD
                        WHERE flt_key = #P_FLT_KEY#
                          AND flt_date = TO_DATE(#V_FLT_DATE#,'DDMONYY'))
	</delete>

    <delete id="PkgTrnPmanManifestDeleteFromExpMnfstUld" parameterClass="java.util.HashMap">
	    DELETE FROM TRN_EXP_MANIFEST_ULD
       WHERE tr_no IN (SELECT tr_no
                         FROM TRN_EXP_MANIFEST_HD
                         WHERE flt_key = #P_FLT_KEY#
                          AND flt_date = TO_DATE(#V_FLT_DATE#,'DDMONYY'))
	</delete>

    <delete id="PkgTrnPmanManifestDeleteFromExpMnfstHd" parameterClass="java.util.HashMap">
	    DELETE FROM TRN_EXP_MANIFEST_HD
          WHERE flt_key = #P_FLT_KEY#
                          AND flt_date = TO_DATE(#V_FLT_DATE#,'DDMONYY')
	</delete>

    <select id="PkgTrnPmanMnfstGetGManfHdTrNo" parameterClass="java.lang.Object" resultClass="java.lang.String">
	    SELECT TRN_EXP_MANIFEST_SEQ.NEXTVAL  G_MANF_HD_TRNO FROM dual
	</select>

    <insert id="PkgTrnPmanMnfstInsExpManfHd" parameterClass="java.util.HashMap">
	INSERT INTO TRN_EXP_MANIFEST_HD
        (TR_NO, MSG_VER, MAN_STATUS, FLT_KEY, FLT_DATE, FLT_ETD, ACRF_REG,
         ULDNG_PT, GRP_NO, NIL_IND, FLT_CLOSED, SHP_CLOSED, TR_TYPE,
         TR_STATUS, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE, LDNG_PT)
      VALUES
        (#G_MANF_HD_TRNO#, #V_VER_NO#, 'FINAL', #P_FLT_KEY#, TO_DATE(#V_FLT_DATE#,'DDMONYY'),
         #V_FLT_SCH_TIME#, #V_FLT_ACFT_REG_NO#, #OFF_POINT#, #V_AWB_GRP_NO#,
         #V_ULD_EMPTY_YN#, 'Y', 'Y', 'MN', 'A', #USER#, SYSDATE, #USER#, SYSDATE,
         'HKG')
	</insert>

    <insert id="PkgTrnPmanMnfstInsExpManfUld" parameterClass="java.util.HashMap">
		 INSERT INTO TRN_EXP_MANIFEST_ULD
        (TR_NO, DOC_LINE_NO, ULD_TYPE, ULD_NO, ULD_CARR, ULD_KEY, BB_IND)
      VALUES
        (#G_MANF_HD_TRNO#, #P_DOC_NO#, #P_ULD_TYPE#, #P_ULD_NO#, #P_ULD_CARR#,
         #P_ULD_KEY#, #BB_IND#)
	</insert>

    <select id="PkgTrnPmanMnfstGetVAwbChk" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
	     SELECT COUNT(*)
         FROM TRN_EXP_MANIFEST_DTL
         WHERE tr_no = #G_MANF_HD_TRNO#
         AND udoc_line_no = #P_UDOC_LINE_NO#
         AND awb_no = #P_AWB_NO#
	</select>

    <update id="PkgTrnPmanMnfstUpdExpManfDtl" parameterClass="java.util.HashMap">
	UPDATE TRN_EXP_MANIFEST_DTL
	SET SHP_PCS = NVL(SHP_PCS, 0) + nvl(#P_MAN_PCS#,0),
	SHP_WGT = NVL(SHP_WGT, 0) + nvl(#P_MAN_WT#,0),
	SHPM_VOL = DECODE(#G_VOL_FLG#,'Y',NVL(SHPM_VOL, 0) + nvl(#V_VOL#,0),0)
	WHERE TR_NO = #G_MANF_HD_TRNO#
	AND UDOC_LINE_NO = #P_UDOC_LINE_NO#
	AND AWB_NO = #P_AWB_NO#
	</update>

    <insert id="PkgTrnPmanMnfstInsExpManfDtl" parameterClass="java.util.HashMap" >
  		INSERT INTO TRN_EXP_MANIFEST_DTL
          (TR_NO, DOC_LINE_NO, UDOC_LINE_NO, FLT_CARR, FLT_NO, FLT_KEY,
           FLT_DATE, LDG_PT, UNLDG_PT, BUP_I, ULD_MAN_RMK, AWB_NO, AWB_DATE,
           AWB_PFX, AWB_ORIG, AWB_DEST, AWB_CONTENT, CC_CODE, AWB_DESC_C,
           AWB_TOTAL_PCS, AWB_TOTAL_WT, SHPM_DESC_C, SHPM_ASSGN_PCS,
           SHPM_ASSGN_WT, SHPM_VOL_C, SHPM_VOL, SHP_PCS, SHP_WGT, WGT_UNT,
           SHP_WGT_LBS, TML_CODE, AWB_MAN_RMK, SPL_CODE1, SPL_CODE2,
           BLDUP_COMPLETE, FLT_CLOSED, SHP_CLOSED, FFM_SND_FLG, FHL_SND_FLG,
           TR_TYPE, TR_STATUS, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE,
           MAN_DESC)
        VALUES
          (#G_MANF_HD_TRNO#, #P_DOC_LINE_NO#,#P_UDOC_LINE_NO#,
           SUBSTR(#P_FLT_KEY#, 1, 2), SUBSTR(#P_FLT_KEY#, 3), #P_FLT_KEY#,
           TO_DATE(#P_FLT_DATE#, 'DDMONYY'), 'HKG', #P_UNDLG_PT#, 'N', '', #P_AWB_NO#, TRUNC(SYSDATE),
           SUBSTR(#P_AWB_NO#, 1, 3), #P_ORIGIN#, #P_DEST#,
           FUN_CONVERT_CONTENT(SUBSTR(#P_CONTENT#, 1, 40)), 'CC', 'T',
           #P_AWB_PCS#, #P_AWB_WT#, #P_CATEGORY#, #P_MAN_PCS#, #P_MAN_WT#,
           DECODE(#G_VOL_FLG#, 'Y', 'MC'), #V_VOL#, #P_MAN_PCS#, #P_MAN_WT#, 'K', 0,
           NULL, FUN_CONVERT_CONTENT(#P_MAN_RMK#), #P_SPL_CODE1#, #P_SPL_CODE2#,
           'N', 'Y', 'Y', 'N', 'N', 'MN', 'A', #USER#, SYSDATE, #USER#, SYSDATE,
           FUN_CONVERT_CONTENT(SUBSTR(#V_AWB_CONTENT#, 1, 15)))
   	</insert>

    <select id="PkgTrnPmanMnfstGetVCount" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
  	 	SELECT COUNT(*)
        FROM TRN_EXP_MANIFEST_HD A, TRN_EXP_MANIFEST_ULD B, TRN_EXP_MANIFEST_DTL C
         WHERE A.TR_NO = B.TR_NO
           AND B.TR_NO = C.TR_NO
           AND B.DOC_LINE_NO = C.UDOC_LINE_NO
           AND A.FLT_KEY = #P_FLT_KEY#
           AND A.FLT_DATE = TO_DATE(#V_FLT_DATE#,'DDMONYY')
           AND C.AWB_NO = #AWB_NO#
           AND A.ULDNG_PT = #ULDNG_PT#
   	</select>

     <update id="PkgTrnPmanMnfstUpdateExpMnfstDtl" parameterClass="java.util.HashMap">
   		UPDATE TRN_EXP_MANIFEST_DTL G
           SET G.SHPM_DESC_C = #V_SHMPT_CODE#
           WHERE G.FLT_KEY = #P_FLT_KEY#
           AND G.FLT_DATE = TO_DATE(#V_FLT_DATE#,'DDMONYY')
           AND G.UNLDG_PT = #ULDNG_PT#
           AND G.AWB_NO = #AWB_NO#
   </update>
   
   <delete id="PkgTrnPmanMnfstDeleteExpMnfstDtl" parameterClass="java.util.HashMap">
   		DELETE FROM TRN_EXP_MANIFEST_DTL 
		WHERE TR_NO IN (SELECT TR_NO FROM TRN_EXP_MANIFEST_HD 
		WHERE FLT_KEY = #P_FLT_KEY#
		AND FLT_DATE =TO_DATE(#V_FLT_DATE#,'DDMONYY')
		AND ULDNG_PT = #OFF_POINT#)
   </delete>
   
   <select id="PkgTrnPmanMnfstGetVNil" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
  	 	SELECT COUNT(*)
        FROM TRN_EXP_MANIFEST_HD A, TRN_EXP_MANIFEST_DTL B
        WHERE A.TR_NO = B.TR_NO
        AND A.FLT_KEY = #P_FLT_KEY#
        AND A.FLT_DATE = TO_DATE(#V_FLT_DATE#,'DDMONYY')
        AND A.ULDNG_PT = #OFF_POINT#
     
   	</select>

    <update id="PkgTrnPmanMnfstUpdExpMnfstHd" parameterClass="java.util.HashMap">
	UPDATE TRN_EXP_MANIFEST_HD A
	SET A.NIL_IND = 'N'
	WHERE A.FLT_KEY = #P_FLT_KEY#
	AND A.FLT_DATE = TO_DATE(#V_FLT_DATE#,'DDMONYY')
	AND A.ULDNG_PT = #OFF_POINT#
   </update>

   <delete id="PkgTrnPmanMnfstDelExpMnfstUld" parameterClass="java.util.HashMap">
      DELETE FROM TRN_EXP_MANIFEST_ULD B
       WHERE NOT EXISTS (SELECT 1
                FROM TRN_EXP_MANIFEST_DTL
               WHERE TR_NO = B.TR_NO
                 AND UDOC_LINE_NO = B.DOC_LINE_NO)
   </delete>

   <update id="PkgTrnPmanManfstExpManifestUld" parameterClass="java.util.HashMap">
	UPDATE TRN_EXP_MANIFEST_ULD A
	SET A.ONWARD_DEST1 = DECODE(#SEQ#,1,#SECTOR#,A.ONWARD_DEST1),
	A.ONWARD_CAR_COD1 = DECODE(#SEQ#,1,#CONN_FLT_CARR#,A.ONWARD_CAR_COD1),
	A.ONWARD_FLT_NO1 = DECODE(#SEQ#,1,#CONN_FLT_NO#,A.ONWARD_FLT_NO1),
	A.ONVARD_FLT_DAT1 = DECODE(#SEQ#,1,TO_DATE(#CONN_FLT_DATE#,'DDMONYY'),A.ONVARD_FLT_DAT1),
	A.ONWARD_DEST2 = DECODE(#SEQ#,2,#SECTOR#,A.ONWARD_DEST2),
	A.ONWARD_CAR_COD2 = DECODE(#SEQ#,2,#CONN_FLT_CARR#,A.ONWARD_CAR_COD2),
	A.ONWARD_FLT_NO2 = DECODE(#SEQ#,2,#CONN_FLT_NO#,A.ONWARD_FLT_NO2),
	A.ONVARD_FLT_DAT2 = DECODE(#SEQ#,2,TO_DATE(#CONN_FLT_DATE#,'DDMONYY'),A.ONVARD_FLT_DAT2),
	A.ONWARD_DEST3 = DECODE(#SEQ#,3,#SECTOR#,A.ONWARD_DEST3),
	A.ONWARD_CAR_COD3 = DECODE(#SEQ#,3,#CONN_FLT_CARR#,A.ONWARD_CAR_COD3),
	A.ONWARD_FLT_NO3 = DECODE(#SEQ#,3,#CONN_FLT_NO#,A.ONWARD_FLT_NO3),
	A.ONVARD_FLT_DAT3 = DECODE(#SEQ#,3,TO_DATE(#CONN_FLT_DATE#,'DDMONYY'),A.ONVARD_FLT_DAT3)
	WHERE A.TR_NO = #G_MANF_HD_TRNO#
	AND A.ULD_KEY = #ULD_BT_NO#
   	</update>

     	<update id="PkgTrnPmanManfstExpManifestDtl" parameterClass="java.util.HashMap">
	UPDATE TRN_EXP_MANIFEST_DTL A
	SET A.ONWARD_DEST1 = DECODE(#SEQ#,1,#SECTOR#,A.ONWARD_DEST1),
	A.ONWARD_CAR_COD1 = DECODE(#SEQ#,1,#CONN_FLT_CARR#,A.ONWARD_CAR_COD1),
	A.ONWARD_FLT_NO1 = DECODE(#SEQ#,1,#CONN_FLT_NO#,A.ONWARD_FLT_NO1),
	A.ONVARD_FLT_DAT1 = DECODE(#SEQ#,1,TO_DATE(#CONN_FLT_DATE#,'DDMONYY'),A.ONVARD_FLT_DAT1),
	A.ONWARD_DEST2 = DECODE(#SEQ#,2,#SECTOR#,A.ONWARD_DEST2),
	A.ONWARD_CAR_COD2 = DECODE(#SEQ#,2,#CONN_FLT_CARR#,A.ONWARD_CAR_COD2),
	A.ONWARD_FLT_NO2 = DECODE(#SEQ#,2,#CONN_FLT_NO#,A.ONWARD_FLT_NO2),
	A.ONVARD_FLT_DAT2 = DECODE(#SEQ#,2,TO_DATE(#CONN_FLT_DATE#,'DDMONYY'),A.ONVARD_FLT_DAT2),
	A.ONWARD_DEST3 = DECODE(#SEQ#,3,#SECTOR#,A.ONWARD_DEST3),
	A.ONWARD_CAR_COD3 = DECODE(#SEQ#,3,#CONN_FLT_CARR#,A.ONWARD_CAR_COD3),
	A.ONWARD_FLT_NO3 = DECODE(#SEQ#,3,#CONN_FLT_NO#,A.ONWARD_FLT_NO3),
	A.ONVARD_FLT_DAT3 = DECODE(#SEQ#,3,TO_DATE(#CONN_FLT_DATE#,'DDMONYY'),A.ONVARD_FLT_DAT3)
	WHERE A.FLT_KEY = #P_FLT_KEY#
	AND A.FLT_DATE = TO_DATE(#P_FLT_DATE#,'DDMONYY')
	AND A.UNLDG_PT = #UNLDG_PT#
	AND A.AWB_NO = #AWB_NO#
   	</update>
<!-- Maintain Outbound FFM :: Anup :: Ends -->

<!-- Common Package :: Anup :: Begins -->
	<parameterMap id="handlingTerminalMap" class="java.util.HashMap">
		<parameter property="CTO" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT" />
		<parameter property="fltKey" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" />
		<parameter property="fltDate" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" />
		<parameter property="fltType" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" />
		<parameter property="carrCode" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" />
		<parameter property="awbNo" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" />
		<parameter property="awbDate" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" />
		<parameter property="awbType" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" />
		<parameter property="splCode1" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" />
		<parameter property="splCode2" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" />
		<parameter property="funcName" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" />
	</parameterMap>
	
	<procedure id="fetchHandlingTerminal" parameterMap="handlingTerminalMap">
		{ ? = call PKG_TRN_CTO.FUN_GET_CTO(?, ?, ?, ?, ?, ?, ?, ?, ?, ?) }
	</procedure>
	<parameterMap id="flightTerminalMap" class="java.util.HashMap">
		<parameter property="CTO" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT" />
		<parameter property="fltKey" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" />
		<parameter property="fltDate" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" />
		<parameter property="fltType" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" />				
	</parameterMap>
	
	<procedure id="fetchflightTerminal" parameterMap="flightTerminalMap">
		{ ? = call PKG_TRN_CTO.FUN_GET_CTO_FLT(?, ?, ?) }
	</procedure>
	
	<parameterMap id="updCTOMap" class="java.util.HashMap">
		<parameter property="CTO" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT" />
		<parameter property="fltKey" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" />
		<parameter property="fltDate" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" />
		<parameter property="carrCode" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" />				
	</parameterMap>
	
	<procedure id="fetchUpdCTOImport" parameterMap="updCTOMap">
		{ ? = call PKG_TRN_CTO.FUN_TRN_FLT_MNTR_IMP_CTO(?, ?, ?) }
	</procedure>
        
	<parameterMap id="flightAllotMap" class="java.util.HashMap">
		<parameter property="FltKey" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" />
		<parameter property="FltDate" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" />
		<parameter property="CarrCode" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" />
		<parameter property="FltType" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" />	
		<parameter property="PortDocLineNo" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" />	
		<parameter property="TrNo" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" />	
		<parameter property="OpenCTO" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT" />	
		<parameter property="MailCTO" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT" />		
		<parameter property="CouCTO" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT" />
		<parameter property="ExpLocBuCTO" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT" />
		<parameter property="ExpLocPpkCTO" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT" />
		<parameter property="EICCTO" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT" />
		<parameter property="StandbyCTO" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT" />
		
		
	</parameterMap>

	<procedure id="fetchAllotTerminal" parameterMap="flightAllotMap">
		{ call PKG_TRN_CTO.PROC_FLT_ALLOTMENT_CTO(?, ?, ?, ?, ?, ?, ?,?,?,?,?,?,?) }
	</procedure>
	
	<parameterMap id="carrierTerminalMap" class="java.util.HashMap">
		<parameter property="CTO" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT" />
		<parameter property="carrCode" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" />
		<parameter property="fltType" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" />	
		<parameter property="fltDate" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN" />			
	</parameterMap>
	
	<procedure id="fetchcarrierTerminal" parameterMap="carrierTerminalMap">
		{ ? = call PKG_TRN_CTO.FUN_GET_CTO_CARR(?, ?, ?) }
	</procedure>
<!-- Common Package :: Anup :: Ends -->
<insert id="insertquerytrnfbl"
		parameterClass="cargo.cms.trn.bo.TrnFBLBO">

		INSERT INTO TRN_FBL ( TR_NO, MSG_VER, MSG_SEQ_NUM, COPY_NO,
		CARR_CODE, FLT_NO, FLT_DATE, FLT_KEY, ACFT_REG_NO, LDG_PT,
		FLT_RMK, SI_TYPE,CR_USER_ID,CR_DATE, LM_USER_ID, LM_DATE, LM_VER, SEND_DATE,
		TOTAL_COUNT, FBL_STATUS, FLT_TYPE,UNLDG_PT, TR_TYPE,VERSION_NO,AUTO_IND,CTO,CONFIRM_YN)

		VALUES (#trNo#, #msgVersionNumber# ,#successMsgsSeqNo# ,
		#copyNo#, #carrierCode#, #flightNo#, TO_Date( #flightDate#,
		'MM/DD/YYYY'), #flightKey#, #arcftRegNo#, #loadingPoint#, NULL ,
		#siType# ,'SYSUSER' , SYSDATE ,'SYSUSER' , SYSDATE , 1 , SUBSTR(SYSDATE,1,9), #totalSplitMsgs# ,
		#status#, 'E',#unLoadingPoint#, 'MEFBL',#versionNo#,#autoInd#,#cto#,#confirmyn#)

	</insert>
	

	<insert id="insertquerytrnfblshp"
		parameterClass="cargo.cms.trn.bo.TrnFBLShpBO">

		INSERT INTO TRN_FBL_SHP ( TR_NO, DOC_LINE_NO, AWB_NO, ORG, DEST,
		PCS, WT_CODE, NET_WT, VOL_CODE, VOL_AMT, DENSITY_I, DENSITY_G,
		TOTAL_PCS,MAN_DESC, CNT, SPL_CODE1, SPL_CODE2, SPL_CODE4,
		SPL_CODE5, SPL_CODE6, SPL_CODE7, SPL_CODE8, ORG_AGENT_NAME,
		ORG_FLT_CARR, ORG_FLT_NO, ORG_LDG_PT, ORG_FLT_DATE, ORG_FLT_KEY,
		ORG_MOVT_PRTY_C, SPL_SVC_REQ1, SPL_SVC_REQ2, OTHER_SVC_INFO1,
		OTHER_SVC_INFO2, DES_SHP_OSI_1, DES_SHP_OSI_2, CR_USER_ID,
		CR_DATE, LM_USER_ID, LM_DATE, LDG_PT, UNLDG_PT, NIL_IND,
		SHMPT_CODE, PART_SHMPT_YN,AWB_DATE, TR_TYPE,OLD_SHIPMENT,EXPORT_CTO,DEFAULT_CTO)

		VALUES (#trNo# ,TRN_FBL_SHP_SEQ.nextval ,#awbNo# , #origin# ,
		#dest#, #qtyPieces# , #weightCode# , #weight# , #volumeCode# ,
		#volumeAmount# , #densityInd# , #densityGroup# , #totalPieces# ,
		#natureOfGoods# , NULL , #specialCode1#, #specialCode2#, NULL ,
		NULL, NULL, NULL, NULL, #orgAgentName#, #orgCarrierCode#
		,#orgFlightNo# ,#orgAirportCode#,
		TO_DATE(#orgDate#,'MM/DD/YYYY') , #orgFlightKey#,
		#orgMvtPriorityCode# , #ssrText1# , #ssrText2# , #osiText1# ,
		#osiText2# , NULL , NULL , 'SYSUSER', SYSDATE , 'SYSUSER' , SYSDATE
		, #loadingPoint#, #unLoadingPoint# , #nilCargoIndicator# ,
		#shipmentDescCode# , #partShippment#,#awbDate#, 'MEFBL',#oldShipment#,#exportCto#,#defaultCto#)


	</insert>
	
		<select id="validTrnNilCargo" parameterClass="cargo.cms.trn.bo.TrnFBLBO" resultClass="java.lang.String">
		select NVL(max(decode(trn_fbl_shp.nil_ind,'N',1,0)),0) as nilflag 
		from trn_fbl left outer join trn_fbl_shp
		on trn_fbl_shp.ldg_pt = 'HKG'
		and trn_fbl_shp.unldg_pt = #unLoadingPoint#
		and trn_fbl.tr_no = trn_fbl_shp.tr_no  
		where trn_fbl.tr_no = (select max(tr_no) from trn_fbl where flt_key = #flightKey# and flt_date = TO_DATE(#flightDate#,'MM/DD/YYYY') and fbl_status = 'P')		
	</select>
		<select id="selectTrnqueryfblseqNo"
		parameterClass="cargo.cms.trn.bo.TrnFBLBO"
		resultClass="cargo.cms.trn.bo.TrnFBLBO">
 SELECT TR_NO AS trNo,(select decode(count(nil_ind),0,'N','Y')  from trn_fbl_shp where trn_fbl_shp.tr_no=trn_FBL.tr_no and trn_fbl_shp.nil_ind='Y' ) as nilCargoIndicator, COPY_NO AS copyNo, FBL_STATUS AS status,SUCCESS_MSGS AS successMsgsSeqNo,MSG_SEQ_NUM AS msgSeqNo,TOTAL_COUNT AS totalSplitMsgs,UNLDG_PT AS unLoadingPoint from trn_FBL
 WHERE FLT_KEY =#flightKey# AND FLT_DATE
		= TO_DATE(#flightDate#,'MM/DD/YYYY') 
		AND LDG_PT = #loadingPoint# AND FBL_STATUS = 'CONT'
		AND SI_TYPE ='I' 
	</select>
	
	
	<!-- FBL Data Concurrency Issue Resolving Queries Added on 10JUL12 By Asha Joshi -->
	<insert id="sqlInsertTrnFBLMsgLock" parameterClass="cargo.cms.trn.bo.TrnFBLBO">
		INSERT INTO TRN_FBL_MSG_LOCK(FLT_KEY,FLT_DATE,OFF_POINT,VER_NO) VALUES(#flightKey#, TO_DATE(#flightDate#,'MM/DD/YYYY'),NVL(#unLoadingPoint#,'HKG'),0)
	</insert>
	<select id="sqlSelectTrnFBLMsgLockForUpdate" parameterClass="cargo.cms.trn.bo.TrnFBLBO" resultClass="java.util.HashMap">
		SELECT FLT_KEY, FLT_DATE, OFF_POINT,VER_NO FROM TRN_FBL_MSG_LOCK WHERE FLT_KEY = #flightKey# AND FLT_DATE = TO_DATE(#flightDate#,'MM/DD/YYYY') AND OFF_POINT = NVL(#unLoadingPoint#,'HKG')
		FOR UPDATE OF VER_NO
	</select>
	<update id="sqlUpdateTrnFBLMsgLock" parameterClass="cargo.cms.trn.bo.TrnFBLBO">
		UPDATE TRN_FBL_MSG_LOCK SET VER_NO = (VER_NO + 1) WHERE FLT_KEY = #flightKey# AND FLT_DATE = TO_DATE(#flightDate#,'MM/DD/YYYY') AND OFF_POINT = NVL(#unLoadingPoint#,'HKG')
	</update>


	<select id="trNoTrnFbl" parameterClass="cargo.cms.trn.bo.TrnFBLBO" resultClass="cargo.cms.trn.bo.TrnFBLBO">		
	select tr_no as trNo 
		from trn_fbl 
		 where flt_key = #flightKey# and flt_date = TO_DATE(#flightDate#,'MM/DD/YYYY') and fbl_status ='P'
	</select>
	<update id="updateTrncontpro" parameterClass="cargo.cms.trn.bo.TrnFBLBO">
		UPDATE TRN_FBL SET FBL_STATUS = 'P'
		WHERE FLT_KEY = #flightKey# AND FLT_DATE = TO_DATE(#flightDate#,'MM/DD/YYYY') AND FBL_STATUS='CONT'
	</update>
	<insert id="insertquerytrnfbluld"
		parameterClass="cargo.cms.trn.bo.TrnFBLUldBO">
		INSERT INTO TRN_FBL_ULD ( TR_NO, DOC_LINE_NO, SDOC_LINE_NO,
		ULD_TOTAL, ULD_TYPE, ULD_NO, ULD_CARR, ULD_KEY, ULD_FLG,
		LOAD_IND, ULD_WT_C, ULD_WT, RMK, CR_USER_ID,
		CR_DATE, LM_USER_ID, LM_DATE)

		VALUES ( #trNo#, TRN_FBL_ULD_SEQ.nextval ,  TRN_FBL_SHP_SEQ.currval ,
		#uldTotal#, #uldType#, #uldNo#, #uldCarrierCode# , #uldKey#,
		#uldFlag# , #uldLoadingIndicator#, #uldWeightCode# , #uldWeight#
		, NULL,'SYSUSER' , SYSDATE ,'SYSUSER' , SYSDATE)

	</insert>

	<insert id="insertquerytrnfbldim"
		parameterClass="cargo.cms.edi.ei.bo.EDIDimBO">

		INSERT INTO TRN_FBL_DMN ( TR_NO, DOC_LINE_NO, SDOC_LINE_NO,
		WT_UNIT_CODE, TOTAL_WEIGHT, UNIT_CODE, LENGTH, WIDTH, HEIGHT,
		PCS, CR_USER_ID,
		CR_DATE,LM_USER_ID, LM_DATE, LM_VER )

		VALUES (#trNo#, TRN_FBL_DMN_SEQ.nextval, TRN_FBL_SHP_SEQ.currval,
		#dim_WeightCode#, #dim_Weight#, #dim_MsrUnitCode#, #dim_Length#,
		#dim_Width#, #dim_Height#, #dim_NoOfPieces# , 'SYSUSER' , SYSDATE,'SYSUSER' , SYSDATE ,	1 )

	</insert>
	<select id="selectqueryfortrncarriercode"
		parameterClass="cargo.cms.edi.ei.bo.EDIMsgBO"
		resultClass="java.lang.Integer">

		SELECT COUNT(*) FROM MAST_CARRIER WHERE CODE = #carrierCode#

	</select>
	
	<select id ="selectquerytrnfblForMaxTrNo" 
		resultClass="java.lang.String">
		select 	TRN_FBL_SEQ.nextval as trNo FROM DUAL
	</select>
	
	<select id="selectquerytrnfblshpForMaxDoclineNo"
		resultClass="java.lang.Integer">

		SELECT TRN_FBL_SHP_SEQ.nextval AS docLineNo FROM DUAL

	</select>

   <select id="sqlFetchSeqNosForTrnFBLFlight" parameterClass="cargo.cms.trn.bo.TrnFBLBO" resultClass="java.lang.String">
		SELECT STRAGG(STRINGDELIM(MSG_SEQ_NUM,':')) FROM trn_fbl WHERE FLT_KEY = #flightKey# AND FLT_DATE = TO_DATE(#flightDate#,'MM/DD/YYYY') AND LDG_PT = #loadingPoint# AND FBL_STATUS='CONT'
	</select>

	<select id="selectquerytrnfblmaxcopynoByFltdata"
		parameterClass="cargo.cms.trn.bo.TrnFBLBO"
		resultClass="cargo.cms.trn.bo.TrnFBLBO">

		 SELECT TR_NO AS trNo, FBL_STATUS AS status ,MSG_SEQ_NUM AS msgSeqNo ,
  COPY_NO AS copyNo , FLT_NO AS flightNo ,FLT_KEY as flightKey ,
		TO_CHAR(FLT_DATE ,'MM/DD/YYYY')AS flightDate , LDG_PT AS
		loadingPoint,UNLDG_PT AS unLoadingPoint FROM trn_fbl WHERE FLT_KEY = #flightKey# AND FLT_DATE
		= TO_DATE(#flightDate#,'MM/DD/YYYY') AND UNLDG_PT = #unLoadingPoint#
		AND LDG_PT = #loadingPoint# AND FBL_STATUS='CONT'
		AND SI_TYPE ='I' AND COPY_NO = (SELECT MAX(COPY_NO) AS copyNo 
		FROM trn_fbl WHERE FLT_KEY = #flightKey# AND FLT_DATE = 
		TO_DATE(#flightDate#,'MM/DD/YYYY') AND UNLDG_PT = #unLoadingPoint# AND SI_TYPE ='I')
	</select>

	<select id="selectquerytrnfblbyfltdata"
		parameterClass="cargo.cms.trn.bo.TrnFBLBO"
		resultClass="cargo.cms.trn.bo.TrnFBLBO">

		SELECT TR_NO AS trNo, FBL_STATUS AS status , SUCCESS_MSGS AS
		successMsgsSeqNo , MSG_SEQ_NUM AS msgSeqNo ,TOTAL_COUNT AS
		totalSplitMsgs, COPY_NO AS copyNo , FLT_NO AS flightNo , FLT_KEY as flightKey ,
		TO_CHAR(FLT_DATE ,'MM/DD/YYYY')AS flightDate , LDG_PT AS
		loadingPoint,UNLDG_PT AS unLoadingPoint,ACFT_REG_NO arcftRegNo FROM TRN_FBL WHERE FLT_KEY = #flightKey# AND FLT_DATE
		= TO_DATE(#flightDate#,'MM/DD/YYYY') AND LDG_PT = #loadingPoint#
		AND FBL_STATUS ='CONT' AND SI_TYPE ='I'AND UNLDG_PT = #unLoadingPoint#
		<isNotNull prepend = "AND" property="trNo" >	
		 TR_NO = #trNo#
		 </isNotNull>
	</select>
	<select id="selectquerytrnfblshpAwb"
		parameterClass="cargo.cms.trn.bo.TrnFBLBO"
		resultClass="cargo.cms.trn.bo.TrnFBLShpBO">

		select trn_fbl_shp.awb_No awbNo,trn_fbl.tr_no trNo  from 
		trn_fbl inner join trn_fbl_shp
		on trn_fbl.tr_no = trn_fbl_shp.tr_no
 		and trn_fbl_shp.nil_ind = 'N'		
		where trn_fbl.flt_key = #flightKey#
		and trn_fbl.flt_date = to_date(#flightDate#,'MM/DD/YYYY')
		and trn_fbl.si_type in ('S','I') and trn_fbl.FBL_STATUS ='P' 
	</select>
	<select id="selectquerytrnfbl"
		parameterClass="cargo.cms.trn.bo.TrnFBLBO"
		resultClass="cargo.cms.trn.bo.TrnFBLBO">

		select trn_fbl.tr_no trNo from 
		trn_fbl				
		where trn_fbl.flt_key = #flightKey#
		and trn_fbl.flt_date = to_date(#flightDate#,'MM/DD/YYYY')
		and trn_fbl.unldg_pt= #unLoadingPoint#
		and trn_fbl.si_type in ('S','I') and trn_fbl.FBL_STATUS ='P' and TR_NO != #trNo#
	</select>
	<select id="selectmaxtrnotrnfbl"
		parameterClass="cargo.cms.trn.bo.TrnFBLBO"
		resultClass="java.lang.Integer">

		select max(version_no) msgVersionNumber from 
		trn_fbl				
		where trn_fbl.flt_key = #flightKey#
		and trn_fbl.flt_date = to_date(#flightDate#,'MM/DD/YYYY')		
		and trn_fbl.si_type in ('S','I') and trn_fbl.FBL_STATUS ='P' 
	</select>
	<select id="checkIftrnAcftRegNoExists"
		parameterClass="cargo.cms.trn.bo.TrnFBLBO"
		resultClass="java.lang.String">

		SELECT decode(count(1),0,'N','Y') arcftRegNo FROM TRN_FBL WHERE FLT_KEY = #flightKey# AND FLT_DATE
		= TO_DATE(#flightDate#,'MM/DD/YYYY') AND LDG_PT = #loadingPoint#
		AND FBL_STATUS ='P' AND SI_TYPE ='I' AND UNLDG_PT = #unLoadingPoint# and ACFT_REG_NO is not null
		
	</select>
	<select id="selecttrntotalcountbyfltdata"
		parameterClass="cargo.cms.trn.bo.TrnFBLBO"
		resultClass="cargo.cms.trn.bo.TrnFBLBO">
		SELECT TOTAL_COUNT AS totalSplitMsgs FROM trn_fbl WHERE FLT_KEY = #flightKey# AND FLT_DATE
		= TO_DATE(#flightDate#,'MM/DD/YYYY') AND LDG_PT = #loadingPoint#
		AND FBL_STATUS ='CONT' AND SI_TYPE ='I'AND TOTAL_COUNT is not null		
	</select>

	<update id="updatequerytrnfblsucessmsgsbyfltdata"
		parameterClass="cargo.cms.trn.bo.TrnFBLBO">

		UPDATE trn_fbl SET SUCCESS_MSGS = #successMsgsSeqNo# WHERE
		FLT_KEY = #flightKey# AND FLT_DATE =
		TO_DATE(#flightDate#,'MM/DD/YYYY') AND LDG_PT = #loadingPoint#		
		AND FBL_STATUS = 'CONT' AND SI_TYPE ='I'

	</update>
	<update id="updatequerytrnfblmsgpro" parameterClass="cargo.cms.trn.bo.TrnFBLBO">
		UPDATE TRN_FBL SET FBL_STATUS = 'P'
		WHERE FLT_KEY = #flightKey# AND FLT_DATE = TO_DATE(#flightDate#,'MM/DD/YYYY') AND UNLDG_PT = #unLoadingPoint# 
		AND TR_NO = #trNo#
	</update>
	<update id="updateFblMessageLogIdForCPCT" parameterClass="java.util.HashMap">
		UPDATE TRN_FBL SET CPCT_MSG_LOG_ID = #cpctLogId# WHERE FLT_KEY = #flightKey# AND FLT_DATE = TO_DATE(#flightDate#,'DDMONYY') AND FBL_STATUS='P'		
	</update>
	<update id="updateFblMessageLogIdForHATCL" parameterClass="java.util.HashMap">
		UPDATE TRN_FBL SET HACTL_MSG_LOG_ID=#hactlLogId# WHERE FLT_KEY = #flightKey# AND FLT_DATE = TO_DATE(#flightDate#,'DDMONYY') AND FBL_STATUS='P'		
	</update>

	<update id="updatequerytrnfblstatusbyfltdata"
		parameterClass="cargo.cms.trn.bo.TrnFBLBO">

		UPDATE TRN_FBL SET FBL_STATUS = #status# WHERE FLT_KEY = 
		#flightKey# AND FLT_DATE = TO_DATE(#flightDate#,'MM/DD/YYYY') AND
		LDG_PT = #loadingPoint# AND FBL_STATUS = 'CONT' AND SI_TYPE ='I' AND UNLDG_PT = #unLoadingPoint#
		<isNotNull prepend = "AND" property="trNo" >	
		 TR_NO = #trNo#
		</isNotNull>
	</update>

	<update id="updatequerytrnfbltotalcountbyfltdata"
		parameterClass="cargo.cms.trn.bo.TrnFBLBO">

		UPDATE trn_fbl SET TOTAL_COUNT = #totalSplitMsgs# WHERE FLT_KEY 
		= #flightKey# AND FLT_DATE = TO_DATE(#flightDate#,'MM/DD/YYYY') AND
		LDG_PT = #loadingPoint# AND FBL_STATUS = 'CONT' AND SI_TYPE ='I' 
	</update>

	<update id="updatequerytrnfblseqnobyfltdata"
		parameterClass="cargo.cms.trn.bo.TrnFBLBO">

			UPDATE trn_fbl SET MSG_SEQ_NUM = #successMsgsSeqNo# WHERE FLT_KEY 
		= #flightKey# AND FLT_DATE = TO_DATE(#flightDate#,'MM/DD/YYYY') AND
		LDG_PT = #loadingPoint# AND FBL_STATUS = 'CONT' AND SI_TYPE ='I' 

	</update>
	
	
	<select id="isEditrnFBLAwbNoPresent" parameterClass="java.util.HashMap" resultClass="java.lang.String">			
		select sum(awbNo) as awbNo from( 
	    	select count(trn_fbl_shp.awb_no)as awbNo from 
			trn_fbl inner join trn_fbl_shp
			on trn_fbl.tr_no = trn_fbl_shp.tr_no
	 		and trn_fbl_shp.nil_ind = 'N' 
			and trn_fbl_shp.awb_no =  #awbNo#
			where trn_fbl.flt_key = #fltKey#
			and trn_fbl.flt_date = to_date(#fltDate#,'MM/DD/YYYY')
			and trn_fbl.si_type in ('I') and trn_fbl.FBL_STATUS in('CONT') 
      		and trn_fbl.unldg_pt not in (#loadingPoint#)
	    	UNION
	    	select count(trn_fbl_shp.awb_no)as awbNo from 
			trn_fbl inner join trn_fbl_shp
			on trn_fbl.tr_no = trn_fbl_shp.tr_no
	 		and trn_fbl_shp.nil_ind = 'N' 
			and trn_fbl_shp.awb_no =  #awbNo#
			where trn_fbl.flt_key = #fltKey#
			and trn_fbl.flt_date = to_date(#fltDate#,'MM/DD/YYYY')
			and trn_fbl.si_type in ('I') and trn_fbl.FBL_STATUS in('CONT') 
      		and trn_fbl.unldg_pt in (#loadingPoint#)
	    	UNION
	    	select count(trn_fbl_shp.awb_no)as awbNo from 
			trn_fbl inner join trn_fbl_shp
			on trn_fbl.tr_no = trn_fbl_shp.tr_no
	 		and trn_fbl_shp.nil_ind = 'N' 
     		and trn_fbl.unldg_pt not in (#loadingPoint#)
			and trn_fbl_shp.awb_no = #awbNo#
			where trn_fbl.flt_key = #fltKey#
			and trn_fbl.flt_date = to_date(#fltDate#,'MM/DD/YYYY')
			and trn_fbl.si_type = 'S' and trn_fbl.fbl_status = 'P')
	</select>
	
	<update id="updatequeryAlltrnfblmsgunpro" parameterClass="cargo.cms.trn.bo.TrnFBLBO">
		UPDATE trn_fbl SET FBL_STATUS = 'UNPRO'
		WHERE FLT_KEY = #flightKey# AND FLT_DATE = TO_DATE(#flightDate#,'MM/DD/YYYY') AND SI_TYPE ='I'  AND tr_no =	#trNo#	
	</update>
	<delete id="deleteAlltrnfblmsgunpro" parameterClass="cargo.cms.trn.bo.TrnFBLBO">
		DELETE FROM TRN_FBL 
		WHERE  TR_NO =#trNo#
	</delete>
	<delete id="deleteAlltrnfblshpmsgunpro" parameterClass="cargo.cms.trn.bo.TrnFBLBO">
		DELETE FROM TRN_FBL_SHP 
		WHERE  TR_NO =#trNo#
	</delete>
	<delete id="deleteAlltrnfbluldmsgunpro" parameterClass="cargo.cms.trn.bo.TrnFBLBO">
		DELETE FROM TRN_FBL_ULD 
		WHERE  TR_NO =#trNo#
	</delete>
	<delete id="deleteAlltrnfbldimmsgunpro" parameterClass="cargo.cms.trn.bo.TrnFBLBO">
		DELETE FROM TRN_FBL_DMN 
		WHERE  TR_NO =#trNo#
	</delete>
		

	<select id="istrnValidUnloadingPt" parameterClass="cargo.cms.trn.bo.TrnFBLBO" resultClass="java.lang.String">	
    		select count(*) from trn_flt_opr_seg where tr_no in (
					select tr_no from trn_flt_opr where flt_key = #flightKey#  and 
					sch_date=to_date(#flightDate#,'MM/DD/YYYY') and flt_type = 'D')
			<!-- and brd_point='HKG' -->			
			and off_point=#unLoadingPoint#
   	</select>
   	<select id="checktrnFlightValidity" parameterClass="cargo.cms.trn.bo.TrnFBLBO" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM TRN_FLT_OPR WHERE FLT_KEY=#flightKey# AND SCH_DATE=TO_DATE(#flightDate#,'MM/DD/YYYY') AND FLT_TYPE='D'
	</select>
		<select id="fetchtrnheader" parameterClass="java.util.HashMap" resultClass="cargo.cms.trn.bo.TrnFBLBO">	    
          select PKG_COMMON.GET_FLT_ETA(trn_fbl.FLT_KEY,to_char(trn_fbl.FLT_DATE,'DDMONYY'),'D','DD')  as etd,
       flt_opr.acft_reg_no as acftRegNo , trn_fbl.flt_rmk as fltRmk , 
		(select max(decode(trn_fbl_shp.nil_ind,'Y',1,0)) from
		  trn_fbl_shp where trn_fbl_shp.tr_no = trn_fbl.tr_no
		  and trn_fbl_shp.unldg_pt =	#unLoadingPoint#
		) as nilCargoIndicator, trn_fbl.tr_no as trNo,
		(select trn_fbl.confirm_yn from trn_fbl where flt_key=flt_opr.flt_key and flt_date=flt_opr.sch_date
		and version_no= (select max(version_no) from trn_fbl where flt_key=#flightKey# and flt_date=TO_Date( #flightDate#,'DDMONYY') 
			and trn_fbl.unldg_pt=#unLoadingPoint# and trn_fbl.fbl_status='P' 
    	 ) and trn_fbl.unldg_pt=#unLoadingPoint# and trn_fbl.fbl_status='P'
    	 ) 		 as confirmyn,
		(select max(version_no) from trn_fbl where flt_key=flt_opr.flt_key and flt_date=flt_opr.sch_date and fbl_status='P'
    	 )  as versionNo,
		(select max(version_no) from trn_fbl where flt_key=flt_opr.flt_key and flt_date=flt_opr.sch_date
    and confirm_yn='Y') as lastConfVersion,	flt_opr.flt_key as 	flightKey,TO_CHAR(flt_opr.sch_date ,'DDMONYY') as flightDate,
    cto as cto , (SELECT decode(count(1),0,'N','Y') arcftRegNo FROM TRN_FBL WHERE TRN_FBL.flt_key=flt_opr.flt_key 
    AND TRN_FBL.FLT_DATE=flt_opr.sch_date	AND FBL_STATUS ='P' AND ACFT_REG_NO is not null) as fblFinalise
	   from trn_flt_opr flt_opr left outer join trn_fbl on flt_opr.flt_key = trn_fbl.flt_key
	   and flt_opr.sch_date = trn_fbl.flt_date
       where flt_opr.flt_key=#flightKey#
       and flt_opr.sch_date=TO_Date( #flightDate#,'DDMONYY')
       and trn_fbl.fbl_status='P'
       and flt_opr.flt_type='D' 
       and trn_fbl.unldg_pt=#unLoadingPoint# 
       and rownum=1  
   </select>		
   <select id="trnfblUnladingPoint" parameterClass="cargo.cms.trn.bo.TrnFBLBO" resultClass="cargo.cms.trn.bo.TrnFBLBO">
	
    		select off_point as unLoadingPoint from trn_flt_opr_seg where tr_no in (
					select tr_no from trn_flt_opr where flt_key = #flightKey#  and 
					sch_date=to_date(#flightDate#,'DDMONYY') and flt_type = 'D')
			and brd_point='HKG' 
   	</select> 
   		
	<select id="trnFblShpquery" resultClass="cargo.cms.trn.bo.TrnFBLShpBO"  parameterClass="java.util.HashMap" >
				SELECT * FROM (		
			select 'header' as headerOrDetail,trn_fbl_shp.tr_no as trNo,
			       trn_fbl_shp.doc_line_no as docLineNo,
			       concat(concat(substr(trn_fbl_shp.awb_no,0,3),'-'),substr(trn_fbl_shp.awb_no,4))as awbNoDisplay,
			       trn_fbl_shp.awb_no as awbNo,			       
			       TO_CHAR(trn_fbl_shp.awb_date ,'DDMONYY') as awbDate,
		           trn_fbl_shp.org as origin,
			       trn_fbl_shp.dest as dest,
		           trn_fbl_shp.shmpt_code as shipmentDescCode,
			       nvl(trn_fbl_shp.pcs,0) as qty,
			       nvl(trn_fbl_shp.net_wt,0) as weightCode,
			       trn_fbl_shp.man_desc as natureOfGoods,
			       nvl(trn_fbl_shp.total_pcs,0) as ttlPieces,
		           trn_fbl_shp.spl_code1 as specialCode1,
			       trn_fbl_shp.spl_code2 as specialCode2
             		, trn_fbl_shp.default_cto defaultCto,        
			      decode(trn_fbl_shp.old_shipment,'Y','Old','New')	oldShipment,	       
                  (select sum (LOCN_PCS) from awb_inventory where awb_inventory.awb_no = trn_fbl_shp.awb_No) as invPcs,
            		(select sum (LOCN_WT) from awb_inventory where awb_inventory.awb_no = trn_fbl_shp.awb_No) as invWt,
                null as impFltKey, null as impFltDate,  null as sta,
                 null as man_pcs,
                  null as man_wt,
                  null as trfType,
                  trn_fbl_shp.export_cto as exportCto,
                 (select decode(count(1),0,'N','Y') from trn_fbl_shp shp where shp.tr_no=trn_fbl_shp.tr_no
                 and shp.awb_no=trn_fbl_shp.awb_no and shp.awb_date=trn_fbl_shp.awb_date and (other_svc_info1  is not null or other_svc_info2  is not null)) as osiRmk,
                  decode((SELECT COUNT(1) FROM IMP_TRM_HD WHERE AWB_NO=trn_fbl_shp.awb_no AND AWB_DATE=TO_CHAR(trn_fbl_shp.awb_date, 'DDMONYY')),0,
                (DECODE((SELECT COUNT(1) FROM EXP_RCL_HD WHERE AWB_NO=trn_fbl_shp.awb_no AND AWB_DATE=TO_CHAR(trn_fbl_shp.awb_date, 'DDMONYY') AND TRANSITION_YN='Y'),0,
                (DECODE(( SELECT COUNT(1) FROM EXP_RCL_HD, EXP_RCL_BRKDN WHERE EXP_RCL_BRKDN.RCL_NO=EXP_RCL_HD.RCL_NO AND EXP_RCL_BRKDN.AWB_NO=trn_fbl_shp.awb_no 
                          AND EXP_RCL_BRKDN.AWB_DATE=TO_CHAR(trn_fbl_shp.awb_date, 'DDMONYY') AND EXP_RCL_HD.TRANSITION_YN='Y'),0,'N','Y')),'Y')),'Y') as ctInd            
                
		    from 	trn_fbl inner join trn_fbl_shp on trn_fbl.tr_no = trn_fbl_shp.tr_no     
           <isNotEmpty prepend="and" property="unLoadingPoint">
            	 trn_fbl_shp.unldg_pt = #unLoadingPoint# 
               </isNotEmpty>     
                   
		 	where trn_fbl.flt_key = #flightKey#			and trn_fbl.flt_date = to_date(#flightDate#,'DDMONYY')		and trn_fbl.si_type in('S','I') and trn_fbl.fbl_status ='P'	
			UNION ALL
 		 select 'detail' as headerOrDetail,trn_fbl_shp.tr_no as trNo,
			       trn_fbl_shp.doc_line_no as docLineNo,
			       concat(concat(substr(trn_fbl_shp.awb_no,0,3),'-'),substr(trn_fbl_shp.awb_no,4))as awbNoDisplay,
			        trn_fbl_shp.awb_no as awbNo,
			       TO_CHAR(trn_fbl_shp.awb_date ,'DDMONYY') as awbDate,
		           trn_fbl_shp.org as origin,
			       trn_fbl_shp.dest as dest,
		           trn_fbl_shp.shmpt_code as shipmentDescCode,
			       nvl(trn_fbl_shp.pcs,0) as qty,
			       nvl(trn_fbl_shp.net_wt,0) as weightCode,
			       trn_fbl_shp.man_desc as natureOfGoods,
			       nvl(trn_fbl_shp.total_pcs,0) as ttlPieces,
		           trn_fbl_shp.spl_code1 as specialCode1,
			       trn_fbl_shp.spl_code2 as specialCode2
             ,	ddt.cto defaultCto,
			       decode(trn_fbl_shp.old_shipment,'Y','Old','New')	oldShipment,	       
                  (select sum (LOCN_PCS) from awb_inventory where awb_inventory.awb_no = trn_fbl_shp.awb_No and awb_inventory.awb_date = trn_fbl_shp.awb_date) as invPcs,
            		(select sum (LOCN_WT) from awb_inventory where awb_inventory.awb_no = trn_fbl_shp.awb_No and awb_inventory.awb_date = trn_fbl_shp.awb_date) as invWt,
                NVL(ddt.ft_key,ddt.ffm_flt_key) as impFltKey,   NVL(TO_CHAR(ddt.ft_date ,'DDMONYY'),TO_CHAR(ddt.ffm_flt_date,'DDMONYY')) as impFltDate,  
                PKG_COMMON.GET_FLT_STA(NVL(ddt.ft_key, ddt.ffm_flt_key||#trnFltSfx#), to_char(NVL(ddt.ft_date, ddt.ffm_flt_date), 'DDMONYY'),'A','DD') as sta,
        NVL((select manifest_pcs from imp_car_shp where awb_no=trn_fbl_shp.awb_no and awb_date=trn_fbl_shp.awb_date and flt_key=trn_fbl.flt_key and flt_date=trn_fbl.flt_date and flt_type='A'),ddt.pc)
                  as man_pcs,
          NVL((select manifest_wt from imp_car_shp where awb_no=trn_fbl_shp.awb_no and awb_date=trn_fbl_shp.awb_date and flt_key=trn_fbl.flt_key and flt_date=trn_fbl.flt_date and flt_type='A'),ddt.wt)
                  as man_wt,
                  ddt.shp_trf_type as trfType,
                  trn_fbl_shp.export_cto as exportCto,
                 (select decode(count(1),0,'N','Y') from trn_fbl_shp shp where shp.tr_no=trn_fbl_shp.tr_no
                 and shp.awb_no=trn_fbl_shp.awb_no and shp.awb_date=trn_fbl_shp.awb_date and (other_svc_info1  is not null or other_svc_info2  is not null)) as osiRmk,
                  null as ctInd                  
		    from 	trn_fbl inner join trn_fbl_shp 	on trn_fbl.tr_no = trn_fbl_shp.tr_no                  
             <isNotEmpty prepend="and" property="unLoadingPoint">
            trn_fbl_shp.unldg_pt = #unLoadingPoint# 
            </isNotEmpty> 
           JOIN           
           ( select ddt.flt_key ft_key,ddt.flt_date ft_date,ddt.shp_cntg_flt_date  flt_date,ddt.shp_cntg_flt_key  flt_key,null ffm_flt_key,null ffm_flt_date,ddt.awb_no,ddt.awb_date,ddt.shp_trf_type
           ,ddt.shp_trf_pc pc,ddt.shp_trf_wt wt,ffmCTO.cto
          from V_UNFIN_DDT_DTL ddt JOIN
          (select shp.awb_no,shp.awb_date,shp.dest,msg.flt_key,msg.flt_date,shp.pcs,shp.wt,shp.cto  from
          trn_ffm_shp shp,trn_ffm_msg msg where msg.tr_no=shp.tr_no and msg.ffm_status='P' and shp.dest!='HKG') ffm
          ON ffm.awb_no=ddt.awb_no and ffm.awb_date=ddt.awb_date 
                          and ffm.flt_key || #trnFltSfx#=ddt.flt_key and ffm.flt_date=ddt.flt_date
          LEFT OUTER JOIN
            (select shp.cto,shp.awb_no,shp.awb_date,msg.flt_key,msg.flt_date  from
          trn_ffm_shp shp,trn_ffm_msg msg where msg.tr_no=shp.tr_no and msg.ffm_status='P' and msg.confirm_yn='Y' and shp.dest!='HKG') ffmCTO
          ON ffmCTO.awb_no=ddt.awb_no and ffmCTO.awb_date=ddt.awb_date 
                          and ffmCTO.flt_key || 'P'=ddt.flt_key and ffmCTO.flt_date=ddt.flt_date
          UNION 
          select distinct  null ft_key,null ft_date, null flt_date ,null flt_key ,ffm.flt_key ffm_flt_key ,ffm.flt_date ffm_flt_date,ffm.awb_no,ffm.awb_date,'NT' shp_trf_type
          ,(ffm.man_pcs-NVL(ddt_ttif.pcs,0)) pc,(ffm.man_wt-NVL(ddt_ttif.wt,0)) wt,ffmCTO.cto
          from  
        (select shp.awb_no,shp.awb_date,msg.flt_key,msg.flt_date,nvl(SUM(shp.man_pcs),0) man_pcs,nvl(SUM(shp.man_wt),0) man_wt from
      trn_ffm_shp shp,trn_ffm_msg msg where msg.tr_no=shp.tr_no and msg.ffm_status='P' and shp.dest!='HKG' group by msg.flt_key,msg.flt_date,shp.awb_no,shp.awb_date) ffm 
      LEFT OUTER JOIN
            (select shp.cto,shp.awb_no,shp.awb_date,msg.flt_key,msg.flt_date  from
          trn_ffm_shp shp,trn_ffm_msg msg where msg.tr_no=shp.tr_no and msg.ffm_status='P' and msg.confirm_yn='Y' and shp.dest!='HKG') ffmCTO
          ON ffm.awb_no=ffmCTO.awb_no and ffm.awb_date=ffmCTO.awb_date 
                          and ffm.flt_key=ffmCTO.flt_key and ffm.flt_date=ffmCTO.flt_date
      LEFT OUTER JOIN
  (select m.AWB_NO,m.awb_date,m.flt_key,m.flt_date,nvl(SUM(m.shp_trf_pc),0) pcs,nvl(SUM(m.shp_trf_wt),0) wt 
      from V_UNFIN_DDT_DTL m where m.SHP_TRF_TYPE in('TT','IF','QT')
                          group by      m.awb_no,m.awb_date,m.flt_key,m.flt_date
                          ) ddt_ttif  ON ffm.awb_no=ddt_ttif.awb_no and ffm.awb_date=ddt_ttif.awb_date 
                          and ffm.flt_key || #trnFltSfx#=ddt_ttif.flt_key and ffm.flt_date=ddt_ttif.flt_date where (ffm.man_pcs-NVL(ddt_ttif.pcs,0))>0
      ) ddt ON NVL(ddt.flt_date,trn_fbl.flt_date)=trn_fbl.flt_date and trn_fbl.flt_key||#trnFltSfx#=NVL(ddt.flt_key ,trn_fbl.flt_key||#trnFltSfx#)
      and ddt.awb_no=trn_fbl_shp.awb_no and ddt.awb_date=trn_fbl_shp.awb_date where trn_fbl.flt_key = #flightKey#	and trn_fbl.flt_date = to_date(#flightDate#,'DDMONYY')	and trn_fbl.si_type in('S','I')
      and trn_fbl.fbl_status ='P'	and trn_fbl.tr_no = trn_fbl_shp.tr_no  ) ORDER BY oldShipment, awbNo
	</select>
	
	
	
	<select id="trnFblShpquery_LTShipment" resultClass="cargo.cms.trn.bo.TrnFBLShpBO"  parameterClass="java.util.HashMap" >			
			 		                  select trn_fbl_shp.tr_no as trNo,
                         trn_fbl_shp.doc_line_no as docLineNo,
                         concat(concat(substr(trn_fbl_shp.awb_no,0,3),'-'),substr(trn_fbl_shp.awb_no,4))as awbNoDisplay,
                          trn_fbl_shp.awb_no as awbNo,
                         TO_CHAR(trn_fbl_shp.awb_date ,'DDMONYY') as awbDate,
                       trn_fbl_shp.org as origin,
                         trn_fbl_shp.dest as dest,
                       trn_fbl_shp.shmpt_code as shipmentDescCode,
                         nvl(trn_fbl_shp.pcs,0) as qty,
                         nvl(trn_fbl_shp.net_wt,0) as weightCode,
                         trn_fbl_shp.man_desc as natureOfGoods,
                         nvl(trn_fbl_shp.total_pcs,0) as ttlPieces,
                       trn_fbl_shp.spl_code1 as specialCode1,
                         trn_fbl_shp.spl_code2 as specialCode2
             ,    ddt.cto defaultCto,
                         decode(trn_fbl_shp.old_shipment,'Y','Old','New')     oldShipment,             
                  (select sum (LOCN_PCS) from awb_inventory where awb_inventory.awb_no = trn_fbl_shp.awb_No and awb_inventory.awb_date = trn_fbl_shp.awb_date) as invPcs,
                        (select sum (LOCN_WT) from awb_inventory where awb_inventory.awb_no = trn_fbl_shp.awb_No and awb_inventory.awb_date = trn_fbl_shp.awb_date) as invWt,
                NVL(ddt.ft_key,ddt.ffm_flt_key) as impFltKey,   NVL(TO_CHAR(ddt.ft_date ,'DDMONYY'),TO_CHAR(ddt.ffm_flt_date,'DDMONYY')) as impFltDate,  
                PKG_COMMON.GET_FLT_STA(NVL(ddt.ft_key, ddt.ffm_flt_key||#trnFltSfx#), to_char(NVL(ddt.ft_date, ddt.ffm_flt_date), 'DDMONYY'),'A','DD') as sta,
        		ddt.pc as man_pcs,
         		ddt.wt as man_wt,
                  ddt.shp_trf_type as trfType,
                  trn_fbl_shp.export_cto as exportCto,
                 (select decode(count(1),0,'N','Y') from trn_fbl_shp shp where shp.tr_no=trn_fbl_shp.tr_no
                 and shp.awb_no=trn_fbl_shp.awb_no and shp.awb_date=trn_fbl_shp.awb_date and (other_svc_info1  is not null or other_svc_info2  is not null)) as osiRmk,
                  null as ctInd,
                  ddt.brd_point, 
                  PKG_TRN_CTO.fun_get_exp_cto_awb(trn_fbl.flt_key,TO_CHAR(trn_fbl.flt_date, 'DDMONYY'),substr(trn_fbl.flt_key,0,2),trn_fbl_shp.awb_no,
                        TO_CHAR(trn_fbl_shp.awb_date, 'DDMONYY'), trn_fbl.unldg_pt) awbExpCTO, 
                  PKG_TRN_CTO.fun_get_imp_cto_awb(ddt.ffm_flt_key,TO_CHAR(ddt.ffm_flt_date, 'DDMONYY'),substr(ddt.ffm_flt_key,0,2),ddt.awb_no,
                        TO_CHAR(ddt.awb_date, 'DDMONYY'), ddt.brd_point) awbImpCTO 
                from    trn_fbl inner join trn_fbl_shp      on trn_fbl.tr_no = trn_fbl_shp.tr_no                  
          <isNotEmpty prepend="and" property="unLoadingPoint">
            trn_fbl_shp.unldg_pt = #unLoadingPoint# 
            </isNotEmpty>       
           JOIN           
           ( select  null ft_key,null ft_date, null flt_date ,null flt_key ,ffm.flt_key ffm_flt_key ,ffm.flt_date ffm_flt_date,ffm.awb_no,ffm.awb_date,'NT' shp_trf_type
          ,(ffm.man_pcs-NVL(ddt_ttif.pcs,0)) pc,(ffm.man_wt-NVL(ddt_ttif.wt,0)) wt,ffmCTO.cto,ffm.brd_point
          from  
       (select shp.awb_no,shp.awb_date,shp.dest,msg.flt_key,msg.flt_date,shp.man_pcs,shp.man_wt,shp.cto,msg.brd_point  from
      trn_ffm_shp shp,trn_ffm_msg msg where msg.tr_no=shp.tr_no and msg.ffm_status='P' and shp.dest!='HKG') ffm
      LEFT OUTER JOIN
            (select shp.cto,shp.awb_no,shp.awb_date,msg.flt_key,msg.flt_date  from
          trn_ffm_shp shp,trn_ffm_msg msg where msg.tr_no=shp.tr_no and msg.ffm_status='P' and msg.confirm_yn='Y' and shp.dest!='HKG') ffmCTO
          ON ffm.awb_no=ffmCTO.awb_no and ffm.awb_date=ffmCTO.awb_date 
                          and ffm.flt_key=ffmCTO.flt_key and ffm.flt_date=ffmCTO.flt_date
      LEFT OUTER JOIN
  (select m.AWB_NO,m.awb_date,m.flt_key,m.flt_date,nvl(SUM(m.shp_trf_pc),0) pcs,nvl(SUM(m.shp_trf_wt),0) wt 
      from V_UNFIN_DDT_DTL m where m.SHP_TRF_TYPE in('TT','IF','QT')
                          group by      m.awb_no,m.awb_date,m.flt_key,m.flt_date
                          ) ddt_ttif  ON ffm.awb_no=ddt_ttif.awb_no and ffm.awb_date=ddt_ttif.awb_date 
                          and ffm.flt_key ||  #trnFltSfx#=ddt_ttif.flt_key and ffm.flt_date=ddt_ttif.flt_date where (ffm.man_pcs-NVL(ddt_ttif.pcs,0))>0
      ) ddt ON NVL(ddt.flt_date,trn_fbl.flt_date)=trn_fbl.flt_date and trn_fbl.flt_key|| #trnFltSfx#=NVL(ddt.flt_key ,trn_fbl.flt_key||#trnFltSfx#)
      and ddt.awb_no=trn_fbl_shp.awb_no and ddt.awb_date=trn_fbl_shp.awb_date where trn_fbl.flt_key = #flightKey# and trn_fbl.flt_date = to_date(#flightDate#,'DDMONYY')      and trn_fbl.si_type in('S','I')
      and trn_fbl.fbl_status ='P'   and trn_fbl.tr_no = trn_fbl_shp.tr_no     
			
	</select>

	<select id="checkFlightStatusClose"  parameterClass="map" resultClass="java.lang.Integer">
		SELECT COUNT(*) 
	    FROM
	    TRN_FLT_OPR_EVENTS  
        WHERE
        FLT_KEY = #FlightKey# AND FLT_CLS_YN = 'Y' AND  SCH_DATE = #FlightDt#  and flt_type='D'   
	</select>
	<update id="confirmFbl" parameterClass="cargo.cms.trn.bo.TrnFBLBO">
		UPDATE TRN_FBL SET CONFIRM_YN = 'Y'
		WHERE FLT_KEY = #flightKey# AND FLT_DATE = TO_DATE(#flightDate#,'DDMONYY') 
		AND FBL_status='P'
	</update>
	<update id="saveFbl" parameterClass="cargo.cms.trn.bo.TrnFBLBO">
		UPDATE TRN_FBL SET CTO=#cto#
		WHERE FLT_KEY = #flightKey# AND FLT_DATE = TO_DATE(#flightDate#,'DDMONYY') 
		AND FBL_status='P'
	</update>
	<update id="saveFblShp" parameterClass="cargo.cms.trn.bo.TrnFBLShpBO">
		UPDATE TRN_FBL_SHP SET EXPORT_CTO = #exportCto#
		WHERE  TR_NO =#trNo# and awb_no=#awbNo# and awb_date=#awbDate#
	</update>
	<select id="validatefligtwithdateandtypeForTrnFbl" parameterClass="map" resultClass="java.lang.String">
		SELECT count(1) FROM TRN_FLT_OPR WHERE
		UPPER(CARR_CODE) =
		UPPER(#carrCode#) AND
		SCH_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
		UPPER(FLT_TYPE) = UPPER(#fltType#) AND UPPER(FLT_NO) = UPPER(#fltNo#)
	</select>
		<select id="trnfblHactal" parameterClass="cargo.cms.trn.bo.TrnFBLBO" resultClass="cargo.cms.trn.bo.TrnFBLBO">

		select TR_NO trNo, MSG_VER msgVersionNumber, MSG_SEQ_NUM msgSeqNo, COPY_NO copyNo,
		CARR_CODE carrierCode, FLT_NO flightNo, TO_CHAR(FLT_DATE ,'DDMON') flightDate, FLT_KEY flightKey, ACFT_REG_NO arcftRegNo, LDG_PT loadingPoint,
		 SI_TYPE siType,UNLDG_PT unLoadingPoint, 
		(select max(decode(trn_fbl_shp.nil_ind,'Y','Y','N')) from
		  trn_fbl_shp where trn_fbl_shp.tr_no = trn_fbl.tr_no
		  and trn_fbl_shp.unldg_pt = trn_fbl.unldg_pt	 
		) as nilCargoIndicator  from TRN_FBL 
		WHERE FLT_KEY = #flightKey# AND FLT_DATE = TO_DATE(#flightDate#,'DDMONYY')  
		and FBL_STATUS='P' and (select count(1) from TRN_FBL where FLT_KEY = #flightKey# AND FLT_DATE = TO_DATE(#flightDate#,'DDMONYY') and fbl_status='CONT')=0 
	</select>
	

	<select id="trnfblshpHactal" parameterClass="cargo.cms.trn.bo.TrnFBLBO" resultClass="cargo.cms.trn.bo.TrnFBLShpBO">
		SELECT  TR_NO trNo,DOC_LINE_NO docLineNo, AWB_NO awbNo, ORG origin, DEST dest,
		PCS qtyPieces, WT_CODE weightCode, NET_WT weight, VOL_CODE volumeCode, 
		VOL_AMT volumeAmount, DENSITY_I densityInd, DENSITY_G densityGroup,
		TOTAL_PCS totalPieces,MAN_DESC natureOfGoods,  SPL_CODE1 specialCode1, SPL_CODE2 specialCode2,
		 ORG_AGENT_NAME orgAgentName,
		ORG_FLT_CARR orgCarrierCode, ORG_FLT_NO orgFlightNo, ORG_LDG_PT orgAirportCode,  TO_CHAR(ORG_FLT_DATE ,'DD') orgDatedd, TO_CHAR(ORG_FLT_DATE ,'MM') orgDatemm, 
		ORG_FLT_KEY orgFlightKey,
		ORG_MOVT_PRTY_C orgMvtPriorityCode, SPL_SVC_REQ1 ssrText1, SPL_SVC_REQ2 ssrText2, OTHER_SVC_INFO1 osiText1,
		OTHER_SVC_INFO2 osiText2,  LDG_PT loadingPoint, UNLDG_PT unLoadingPoint, NIL_IND nilCargoIndicator,
		SHMPT_CODE shipmentDescCode, PART_SHMPT_YN partShippment,AWB_DATE awbDate from TRN_FBL_SHP WHERE TR_NO = #trNo#	and (NIL_IND='Y' or export_cto='HACTL')
	</select>

	<select id="trnfbluldHactal" parameterClass="cargo.cms.trn.bo.TrnFBLBO" resultClass="cargo.cms.trn.bo.TrnFBLUldBO">		
		SELECT uld.TR_NO trNo , uld.DOC_LINE_NO docLineNo, uld.SDOC_LINE_NO sdocLineNo,uld.ULD_TOTAL uldTotal, uld.ULD_TYPE uldType, uld.ULD_NO uldNo, uld.ULD_CARR uldCarrierCode, uld.ULD_KEY uldKey, uld.ULD_FLG uldFlag,
		uld.LOAD_IND uldLoadingIndicator, uld.ULD_WT_C uldWeightCode, uld.ULD_WT uldWeight FROM TRN_FBL_ULD uld,TRN_FBL_SHP shp  WHERE 
    	uld.TR_NO = #trNo# and uld.sdoc_line_no=shp.doc_line_no and shp.export_cto='HACTL'
	</select>
	<select id="trnfblCpsl" parameterClass="cargo.cms.trn.bo.TrnFBLBO" resultClass="cargo.cms.trn.bo.TrnFBLBO">

		select TR_NO trNo, MSG_VER msgVersionNumber, MSG_SEQ_NUM msgSeqNo, COPY_NO copyNo,
		CARR_CODE carrierCode, FLT_NO flightNo, TO_CHAR(FLT_DATE ,'DDMON') flightDate, FLT_KEY||(SELECT TRN_FLT_SUFFIX FROM SYS_PARAM) flightKey, ACFT_REG_NO arcftRegNo, LDG_PT loadingPoint,
		 SI_TYPE siType,UNLDG_PT unLoadingPoint, 
		(select max(decode(trn_fbl_shp.nil_ind,'Y','Y','N')) from
		  trn_fbl_shp where trn_fbl_shp.tr_no = trn_fbl.tr_no
		  and trn_fbl_shp.unldg_pt = trn_fbl.unldg_pt	 
		) as nilCargoIndicator  from TRN_FBL 
		WHERE FLT_KEY = #flightKey# AND FLT_DATE = TO_DATE(#flightDate#,'DDMONYY')  
		and FBL_STATUS='P' and (select count(0) from TRN_FBL where FLT_KEY = #flightKey# AND FLT_DATE = TO_DATE(#flightDate#,'DDMONYY') and fbl_status='CONT')=0
	</select>	

	<select id="trnfblshpCpsl" parameterClass="cargo.cms.trn.bo.TrnFBLBO" resultClass="cargo.cms.trn.bo.TrnFBLShpBO">
		SELECT  TR_NO trNo,DOC_LINE_NO docLineNo, AWB_NO awbNo, ORG origin, DEST dest,
		PCS qtyPieces, WT_CODE weightCode, NET_WT weight, VOL_CODE volumeCode, 
		VOL_AMT volumeAmount, DENSITY_I densityInd, DENSITY_G densityGroup,
		TOTAL_PCS totalPieces,MAN_DESC natureOfGoods,  SPL_CODE1 specialCode1, SPL_CODE2 specialCode2,
		 ORG_AGENT_NAME orgAgentName,
		ORG_FLT_CARR orgCarrierCode, ORG_FLT_NO orgFlightNo, ORG_LDG_PT orgAirportCode,  TO_CHAR(ORG_FLT_DATE ,'DD') orgDatedd, TO_CHAR(ORG_FLT_DATE ,'MM') orgDatemm, 
		ORG_FLT_KEY orgFlightKey,
		ORG_MOVT_PRTY_C orgMvtPriorityCode, SPL_SVC_REQ1 ssrText1, SPL_SVC_REQ2 ssrText2, OTHER_SVC_INFO1 osiText1,
		OTHER_SVC_INFO2 osiText2,  LDG_PT loadingPoint, UNLDG_PT unLoadingPoint, NIL_IND nilCargoIndicator,
		SHMPT_CODE shipmentDescCode, PART_SHMPT_YN partShippment,AWB_DATE awbDate from TRN_FBL_SHP WHERE TR_NO = #trNo#	and (NIL_IND='Y' or export_cto='CPCT')
	</select>

	<select id="trnfbluldCpsl" parameterClass="cargo.cms.trn.bo.TrnFBLBO" resultClass="cargo.cms.trn.bo.TrnFBLUldBO">		
		SELECT uld.TR_NO trNo , uld.DOC_LINE_NO docLineNo, uld.SDOC_LINE_NO sdocLineNo,uld.ULD_TOTAL uldTotal, uld.ULD_TYPE uldType, uld.ULD_NO uldNo, uld.ULD_CARR uldCarrierCode, uld.ULD_KEY uldKey, uld.ULD_FLG uldFlag,
		uld.LOAD_IND uldLoadingIndicator, uld.ULD_WT_C uldWeightCode, uld.ULD_WT uldWeight FROM TRN_FBL_ULD uld,TRN_FBL_SHP shp  WHERE 
    	uld.TR_NO = #trNo# and uld.sdoc_line_no=shp.doc_line_no and shp.export_cto='CPCT'
	</select>
	<select id="trnfbldim" parameterClass="cargo.cms.trn.bo.TrnFBLBO" resultClass="cargo.cms.edi.ei.bo.EDIDimBO">

		SELECT TR_NO trNo,DOC_LINE_NO docLineNo, SDOC_LINE_NO sdocLineNo,WT_UNIT_CODE dim_WeightCode, TOTAL_WEIGHT dim_Weight, UNIT_CODE dim_MsrUnitCode, LENGTH dim_Length, WIDTH dim_Width, HEIGHT dim_Height,
		PCS dim_NoOfPieces FROM  TRN_FBL_DMN WHERE TR_NO = #trNo#		

	</select>
	
	<select id ="selectFBLOutFileSeqNo"	resultClass="java.lang.Integer">
		SELECT TRN_FBL_OUT_FILE_SEQ.nextval AS sequnceNo FROM DUAL
	</select>
	<select id="isPreFBLMaintained" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		 SELECT COUNT(1) FROM TRN_FBL_SHP shp, TRN_FBL fbl WHERE fbl.FLT_KEY=#flightKey# AND fbl.FLT_DATE=TO_DATE(#flightDate#, 'DDMONYY') AND fbl.FBL_STATUS='P' and shp.export_cto is null and 
 		shp.tr_no=fbl.tr_no and shp.nil_ind='N'
	</select>
	<select id="fetchTransitionRule" parameterClass="java.lang.String" resultClass="java.lang.String">
	select RULE_VALUE from CMSRULES where RULE_CODE = 'Transition_Setup'
	</select>
	
	<update id="updateConfirmAutoIndFrFbl" parameterClass="java.util.HashMap">
		UPDATE TRN_FBL 
			SET CONFIRM_YN=#confirmYN#, AUTO_IND=#autoInd# 
		WHERE FLT_KEY=#fltKey# AND FLT_DATE=TO_DATE(#fltDate#, 'MM/DD/YYYY') AND UNLDG_PT=#ldgPt# AND NOT EXISTS (SELECT NULL FROM TRN_FBL 
    		WHERE FLT_KEY=#fltKey# AND FLT_DATE=TO_DATE(#fltDate#, 'MM/DD/YYYY') AND UNLDG_PT=#ldgPt# AND CONFIRM_YN='N' AND (FBL_STATUS='P' OR FBL_STATUS='CONT'))
	</update>
	<!--EDI INBOUND.......FBL queries End-->
	
	<!--EDI INBOUND.......FlightMonitoring Start-->
	<select id="fetchInboundFlight" parameterClass="cargo.cms.trn.bo.FlightMonitoringBO" resultClass="cargo.cms.trn.bo.FlightMonitoringBO">       
       select distinct opr.flt_key flightKey, to_char( opr.sch_date,'DDMONYY') flightDate,
		  opr.sch_date, PKG_COMMON.GET_FLT_STA(opr1.FLT_KEY, to_char(opr1.sch_date,'DDMONYY'), 'A', 'DD') as sta, 
	      PKG_COMMON.GET_FLT_ETA(opr1.FLT_KEY,to_char(opr1.sch_date,'DDMONYY'),'A','DD')  as eta, 
	      PKG_COMMON.GET_FLT_ATA(OPR1.FLT_KEY,TO_CHAR(OPR1.SCH_DATE,'DDMONYY'),'A','DD')  AS ATA, 
	      (SELECT COUNT(1) FROM MESSAGE_LOG WHERE FLT_KEY=OPR.FLT_KEY||#trnFltSfx# AND FLT_DATE=OPR.SCH_DATE AND MSG_STATUS='A' AND MSG_TYPE='FFM') AS CPCTLOGID,            
				(SELECT COUNT(1) FROM edi_msg_log_out WHERE FLT_KEY=OPR.FLT_KEY||#trnFltSfx# AND FLT_DATE=OPR.SCH_DATE AND MSG_TYPE='FFM')as hactlLogId, 
	      (select decode(count(1),0,'N','Y') from trn_setup_flt setUpFlt where setUpFlt.flt_key=opr.flt_key and to_char(setUpFlt.flt_date,'DDMONYY')=
	        to_char(opr.sch_date,'DDMONYY') and setUpFlt.flt_type='I') superTrnsetup, 
	      NVL(PKG_TRN_CTO.FUN_TRN_FLT_MNTR_IMP_CTO(OPR.FLT_KEY,TO_CHAR(OPR.SCH_DATE,'DDMONYY'),TO_CHAR(SUBSTR(OPR.FLT_KEY,0,2))),'') HANDLEDBY, 
	      DECODE (FFM.AUTO_IND, NULL, 'N', (SELECT DECODE(COUNT(AUTO_IND), 0, 'N', 'Y') FROM TRN_FFM_MSG WHERE FLT_KEY=OPR.FLT_KEY AND TO_CHAR(FLT_DATE,'DDMONYY')=TO_CHAR(OPR.SCH_DATE,'DDMONYY') AND FFM_STATUS='P' AND AUTO_IND='N')) ASTERICKYN,
	      decode(ffm.ddt_cto_disc,'Y','Y','N') ddtCtodisc,decode(ffm.tr_no,null,'N','Y') ffmReceived,
	      ffm1.version_no ffmVersionno, decode(ffm2.confirm_yn, null, 'N', 'N', 'N', 'Y') lastVerconf, ffm2.version_no lastConfVersionFfm,
	      ffm3.ver_no_conf latestVersionNoAfterConfirm,
	      DECODE((SELECT COUNT(1) FROM TRN_FLT_OPR_LEG WHERE TR_NO=opr.tr_no), (SELECT COUNT(1) FROM TRN_FFM_MSG WHERE flt_key=opr.flt_key and flt_date=opr.sch_date AND 
	       	CONFIRM_YN='Y' AND FFM_STATUS='P'), 'Y', 'N') confirmInd, 
	      (SELECT STRAGG(STRINGDELIM(BRD_POINT,'/')) from trn_flt_opr_leg where tr_no=opr.tr_no )  port,
	      decode(ddt1.ddtRecCnt, 0, 'N', null, 'N', 'Y') ddtReceived, decode(ddt2.ddtSplit, 0, 'N', null, 'N', 'Y') ddtSplit,
	      decode(decode(opr_events.ddt_finalise_date,null,'N','Y'),null,'N','N','N','Y') ddtProcessed,
	      decode((select decode(event.uws_rcvd,null,'N','Y') from trn_flt_opr_events event where event.tr_no=opr.tr_no ),null,'N','N','N','Y') uwsRec,
	      decode(cstsubm.cstsubcnt, 0, 'N', null, 'N', 'Y') intSubm
	      from trn_flt_opr opr 
	      INNER JOIN flt_opr opr1 ON opr.flt_key||#trnFltSfx#=opr1.flt_key and opr.sch_date=opr1.sch_date and opr1.flt_type='A' AND  opr.flt_type='A' 
	      INNER JOIN flt_opr_events opr_events on opr_events.tr_no = Opr1.tr_no
	      LEFT OUTER JOIN trn_ffm_msg ffm ON opr.flt_key=ffm.flt_key and opr.sch_date=ffm.flt_date and ffm.ffm_status='P' 
	        and opr.carr_code=substr(ffm.flt_key,0,2)
	      LEFT OUTER JOIN (select MAX(version_no) as version_no, flt_key, flt_date from trn_ffm_msg GROUP BY flt_key, flt_date) ffm1 
	        on opr.flt_key = ffm1.flt_key AND opr.sch_date = ffm1.flt_date
	      LEFT OUTER JOIN (select MAX(version_no) as version_no, flt_key, flt_Date, confirm_yn from trn_ffm_msg where confirm_yn='Y'
	        GROUP BY flt_key, flt_Date, confirm_yn) ffm2 on opr.flt_key = ffm2.flt_key AND opr.sch_date = ffm2.flt_date
	      LEFT OUTER JOIN (select MAX(VER_NO_AFTER_CONF) as ver_no_conf, flt_key, flt_Date from trn_ffm_msg where confirm_yn='Y'
	        group by flt_key, flt_Date) ffm3 on opr.flt_key = ffm3.flt_key AND opr.sch_date = ffm3.flt_date
	      LEFT OUTER JOIN (select count(1) ddtRecCnt, flt_key, flt_date from ddt_msg where ddt_status='P' group by flt_key, flt_date) ddt1 on opr1.flt_key = ddt1.flt_key 
	        AND opr1.sch_date = ddt1.flt_date
	      LEFT OUTER JOIN (select count(1) ddtSplit, flt_key, flt_date from ddt_msg where ddt_status='P' and ddt_split_ind='Y' group by flt_key, flt_date) ddt2 
	        on opr1.flt_key = ddt2.flt_key AND opr1.sch_date = ddt2.flt_date
	      LEFT OUTER JOIN (select count(1) cstsubcnt, FLT_KEY, FLT_DATE from CST_SUBM WHERE REC_TYPE='INT' AND SEND_STATUS NOT IN ('E','R') group by FLT_KEY, FLT_DATE) cstsubm 
	        on opr1.flt_key = cstsubm.flt_key AND opr1.sch_date = cstsubm.flt_date
	      where 
	      (TO_DATE(TO_CHAR(opr.SCH_DATE,'DDMONYY') || substr(LPAD(opr.SCH_TIME,4,0),0,2) ||substr(LPAD(opr.SCH_TIME,4,0),3,2),'DDMONYYHH24MI') &gt;= TO_DATE(#fromDate#,'DDMONYYHH24MI') 
	      AND  TO_DATE(TO_CHAR(opr.SCH_DATE,'DDMONYY') || substr(LPAD(opr.SCH_TIME,4,0),0,2) ||substr(LPAD(opr.SCH_TIME,4,0),3,2),'DDMONYYHH24MI') &lt;= TO_DATE(#toDate#,'DDMONYYHH24MI')) 
	      and opr.flt_type='A'
            <isNotEmpty prepend="and" property="carrierCode">
                  opr.carr_code=#carrierCode#
         </isNotEmpty>
         <isNotEmpty prepend="and" property="flightNumber">
                  opr.flt_key=#flightNumber#
         </isNotEmpty>
         
          <isEqual prepend="and" property="superTrnsetup" compareValue="Y">
                  (select count(1) from trn_setup_flt setUpFlt  where setUpFlt.flt_key=opr.flt_key and setUpFlt.flt_date=opr.sch_date and setUpFlt.flt_type='I')>0
         </isEqual>
          <isEqual prepend="and" property="superTrnsetup" compareValue="N">
                  (select count(1) from trn_setup_flt setUpFlt  where setUpFlt.flt_key=opr.flt_key and setUpFlt.flt_date=opr.sch_date and setUpFlt.flt_type='I')=0
         </isEqual>
         <isEqual prepend="and" property="ddtReceived" compareValue="Y">
                  (select count(1) from ddt_msg ddt  where ddt.flt_key=opr1.flt_key and ddt.flt_date=opr1.sch_date and ddt.ddt_status='P')>0
         </isEqual>
         <isEqual prepend="and" property="ddtReceived" compareValue="N">
                  (select count(1) from ddt_msg ddt  where ddt.flt_key=opr1.flt_key and ddt.flt_date=opr1.sch_date and ddt.ddt_status='P')=0
         </isEqual>
         <isEqual prepend="and" property="ddtProcessed" compareValue="Y">
         		   (SELECT DECODE(event.ddt_finalise_date,NULL,'N','Y') FROM flt_opr_events event WHERE event.tr_no=opr1.tr_no)='Y'
					AND (SELECT DECODE(event.ddt_finalise_user_id,NULL,'N','Y') FROM flt_opr_events event WHERE event.tr_no=opr1.tr_no)='Y'  
         </isEqual>
         <isEqual prepend="and" property="ddtProcessed" compareValue="N">
                  (SELECT DECODE(event.ddt_finalise_date,NULL,'N','Y') FROM flt_opr_events event WHERE event.tr_no=opr1.tr_no)='N'
				   AND (SELECT DECODE(event.ddt_finalise_user_id,NULL,'N','Y') FROM flt_opr_events event WHERE event.tr_no=opr1.tr_no)='N'  
         </isEqual>
         <isEqual prepend="and" property="intSubm" compareValue="Y">
                  (select count(1) from CST_SUBM SUBM WHERE SUBM.FLT_KEY = OPR1.FLT_KEY AND SUBM.FLT_DATE = OPR1.sch_DATE AND SUBM.REC_TYPE = 'INT' AND SUBM.SEND_STATUS NOT IN ('E','R')) >0 
         </isEqual>
          <isEqual prepend="and" property="intSubm" compareValue="N">
                  (select count(1) from CST_SUBM SUBM WHERE SUBM.FLT_KEY = OPR1.FLT_KEY AND SUBM.FLT_DATE = OPR1.sch_DATE AND SUBM.REC_TYPE = 'INT' AND SUBM.SEND_STATUS NOT IN ('E','R')) =0 
         </isEqual>
          <isNotEmpty prepend="and" property="handledBy">
            	NVL(PKG_TRN_CTO.FUN_TRN_FLT_MNTR_IMP_CTO(opr.flt_key,to_char(opr.sch_date,'DDMONYY'),to_char(SUBSTR(opr.flt_key,0,2))),'')=#handledBy#
         </isNotEmpty>
         UNION           
            select distinct opr.flt_key flightKey, to_char( opr.flt_date,'DDMONYY') flightDate, 
            opr.flt_date,
            PKG_COMMON.GET_FLT_STA(opr.FLT_KEY, to_char(opr.flt_date, 'DDMONYY'), 'A', 'DD') as sta, 
            PKG_COMMON.GET_FLT_ETA(opr.FLT_KEY,to_char(opr.flt_date,'DDMONYY'),'A','DD')  as eta, 
            PKG_COMMON.GET_FLT_ATA(opr.FLT_KEY,to_char(opr.flt_date,'DDMONYY'),'A','DD')  as ata, 
            (SELECT COUNT(1) FROM MESSAGE_LOG WHERE FLT_KEY=OPR.FLT_KEY||#trnFltSfx# AND FLT_DATE=OPR.flt_date AND MSG_STATUS='A'            
			AND MSG_TYPE='FFM') AS CPCTLOGID,            
			(SELECT COUNT(1) FROM edi_msg_log_out WHERE FLT_KEY=OPR.FLT_KEY||#trnFltSfx# AND FLT_DATE=OPR.flt_date            
			AND MSG_TYPE='FFM')as hactlLogId, 
            (select decode(count(1),0,'N','Y') from trn_setup_flt setUpFlt  where setUpFlt.flt_key=opr.flt_key and to_char(setUpFlt.flt_date,'DDMONYY')=to_char(opr.flt_date,'DDMONYY') and setUpFlt.flt_type=opr.flt_type) superTrnsetup, 
            NVL(PKG_TRN_CTO.FUN_TRN_FLT_MNTR_IMP_CTO(opr.flt_key,to_char( opr.flt_date,'DDMONYY'),to_char(SUBSTR(opr.flt_key,0,2))),'') handledBy, 
            decode(NVL(ffm.auto_ind,'Y'),'Y','N','Y') asterickYn,
            decode(ffm.ddt_cto_disc,'Y','Y','N') ddtCtodisc,
           decode(ffm.tr_no,null,'N','Y') ffmReceived,
            (select max(version_no) from trn_ffm_msg where flt_key=opr.flt_key and to_char(flt_date,'DDMONYY')=to_char(opr1.sch_date,'DDMONYY') )  as ffmVersionno,      
            NVL(ffm.confirm_yn,'N') as lastVerconf,   
            (select max(version_no) from trn_ffm_msg where flt_key=opr.flt_key and to_char(flt_date,'DDMONYY')=to_char(opr.flt_date,'DDMONYY') and confirm_yn='Y')  lastConfVersionFfm,
            (select max(VER_NO_AFTER_CONF) from trn_ffm_msg where flt_key=opr.flt_key and to_char(flt_date,'DDMONYY')=to_char(opr.flt_date,'DDMONYY') and confirm_yn='Y')  latestVersionNoAfterConfirm,
            (select decode(count(1),0,'N','Y') from trn_ffm_msg where flt_key=opr.flt_key and flt_date=opr.flt_date  and confirm_yn='Y') confirmInd,
            (SELECT STRAGG(STRINGDELIM(BRD_POINT,'/')) from trn_flt_opr_leg where tr_no=opr.tr_no )  port,
            (select decode(count(1),0,'N','Y') from ddt_msg ddt  where ddt.flt_key=opr1.flt_key and to_char(ddt.flt_date,'DDMONYY')=to_char(opr.flt_date,'DDMONYY') and ddt.ddt_status='P') ddtReceived,
            (select decode(count(1),0,'N','Y') from ddt_msg ddt  where ddt.flt_key=opr1.flt_key and to_char(ddt.flt_date,'DDMONYY')=to_char(opr1.sch_date,'DDMONYY') and ddt.ddt_status='P' and ddt_split_ind='Y') ddtSplit,
            'N' ddtProcessed,
            'N' uwsRec,
            (select  decode(count(1),0,'N','Y') from CST_SUBM SUBM WHERE SUBM.FLT_KEY = OPR1.FLT_KEY AND SUBM.FLT_DATE = OPR.flt_DATE AND SUBM.REC_TYPE = 'INT' AND SUBM.SEND_STATUS NOT IN ('E','R')) intSubm    
            from trn_setup_flt opr LEFT OUTER JOIN trn_ffm_msg ffm ON opr.flt_key=ffm.flt_key and opr.flt_date=ffm.flt_date and ffm.ffm_status='P' 
            and substr(opr.flt_key,0,2)=substr(ffm.flt_key,0,2) 
            LEFT OUTER JOIN flt_opr opr1 ON opr.flt_key||#trnFltSfx#=opr1.flt_key and opr.flt_date=opr1.sch_date and opr1.flt_type='A'  
            where  (opr.flt_date &gt;= TO_DATE(#fromDate#,'DDMONYYHH24MI') AND  opr.flt_date &lt;= TO_DATE(#toDate#,'DDMONYYHH24MI')) and opr.flt_type='I'
            and not exists(select null from trn_flt_opr where flt_key=opr.flt_key and sch_date=opr.flt_date)
            <isNotEmpty prepend="and" property="carrierCode">
                  substr(opr.flt_key,0,2)=#carrierCode#
         </isNotEmpty>
         <isNotEmpty prepend="and" property="flightNumber">
                  opr.flt_key=#flightNumber#
         </isNotEmpty>
         
          <isEqual prepend="and" property="superTrnsetup" compareValue="Y">
                  (select count(1) from trn_setup_flt setUpFlt  where setUpFlt.flt_key=opr.flt_key and setUpFlt.flt_date=opr.flt_date and setUpFlt.flt_type=opr.flt_type)>0
         </isEqual>
         <isEqual prepend="and" property="superTrnsetup" compareValue="N">
                  (select count(1) from trn_setup_flt setUpFlt  where setUpFlt.flt_key=opr.flt_key and setUpFlt.flt_date=opr.flt_date and setUpFlt.flt_type=opr.flt_type)=0
         </isEqual>
         <isEqual prepend="and" property="ddtReceived" compareValue="Y">
                  (select count(1) from ddt_msg ddt  where ddt.flt_key=opr.flt_key and ddt.flt_date=opr.flt_date and ddt.ddt_status='P')>0
         </isEqual>
         <isEqual prepend="and" property="ddtReceived" compareValue="N">
                  (select count(1) from ddt_msg ddt  where ddt.flt_key=opr.flt_key and ddt.flt_date=opr.flt_date and ddt.ddt_status='P')=0
         </isEqual>
         <isEqual prepend="and" property="ddtProcessed" compareValue="Y">
                  1=1
         </isEqual>
         <isEqual prepend="and" property="ddtProcessed" compareValue="N">
                  1=1
         </isEqual>
         <isEqual prepend="and" property="intSubm" compareValue="Y">
                  (select count(1) from CST_SUBM SUBM WHERE SUBM.FLT_KEY = OPR1.FLT_KEY AND SUBM.FLT_DATE = OPR.flt_DATE AND SUBM.REC_TYPE = 'INT' AND SUBM.SEND_STATUS NOT IN ('E','R')) >0 
         </isEqual>
         <isEqual prepend="and" property="intSubm" compareValue="N">
                  (select count(1) from CST_SUBM SUBM WHERE SUBM.FLT_KEY = OPR1.FLT_KEY AND SUBM.FLT_DATE = OPR.flt_DATE AND SUBM.REC_TYPE = 'INT' AND SUBM.SEND_STATUS NOT IN ('E','R')) =0 
         </isEqual>
          <isNotEmpty prepend="and" property="handledBy">
            	NVL(PKG_TRN_CTO.FUN_TRN_FLT_MNTR_IMP_CTO(opr.flt_key,to_char( opr.flt_date,'DDMONYY'),to_char(SUBSTR(opr.flt_key,0,2))),'')=#handledBy#
         </isNotEmpty>
         <dynamic prepend="ORDER BY ">
                 <isNotEmpty property="sortOrder.sortField">
                   $sortOrder.sortField$, 3 desc, sta asc
                 </isNotEmpty>
                 <isEmpty property="sortOrder.sortField">
					3 desc, sta asc
				 </isEmpty>
              </dynamic>
	</select>
<select id="fetchOutboundFlight" parameterClass="cargo.cms.trn.bo.FlightMonitoringBO" resultClass="cargo.cms.trn.bo.FlightMonitoringBO"> 		 
 		 SELECT
		  DISTINCT opr.flt_key flightKey, TO_CHAR( opr.sch_date,'DDMONYY') flightDate,
		  opr.sch_date, rtrim(SUBSTR(TRIM(TO_CHAR(OPR.SCH_TIME,'0000')),0,2) || ':' || SUBSTR(TRIM(TO_CHAR(OPR.SCH_TIME,'0000')),3,4), ':') AS std,
		  PKG_COMMON.GET_FLT_ETA(opr1.FLT_KEY,TO_CHAR(opr1.sch_date,'DDMONYY'),'D','DD') AS etd,
		  PKG_COMMON.GET_FLT_ATA(opr1.FLT_KEY,TO_CHAR(opr1.sch_date,'DDMONYY'),'D','DD') AS atd,
		  (SELECT COUNT(1) FROM MESSAGE_LOG WHERE FLT_KEY=OPR.FLT_KEY||'P' AND FLT_DATE=OPR.SCH_DATE AND MSG_STATUS='A' AND MSG_TYPE='FBL') AS CPCTLOGID,            
			(SELECT COUNT(1) FROM edi_msg_log_out WHERE FLT_KEY=OPR.FLT_KEY||'P' AND FLT_DATE=OPR.SCH_DATE AND MSG_TYPE='FBL')as hactlLogId, 
		  (SELECT DECODE(COUNT(1),0,'N','Y') FROM trn_setup_flt setUpFlt WHERE setUpFlt.flt_key=opr.flt_key AND TO_CHAR(setUpFlt.flt_date,'DDMONYY')=
		  TO_CHAR(opr.sch_date,'DDMONYY') AND setUpFlt.flt_type='E') superTrnsetup,
      NVL(PKG_TRN_CTO.FUN_TRN_FLT_MNTR_EXP_CTO(opr.flt_key,TO_CHAR(opr.sch_date,'DDMONYY'),opr.carr_code),'') handledBy,
		  DECODE(fbl.tr_no,NULL,'N','Y') fblReceived, DECODE(NVL(fbl.auto_ind,'Y'),'Y','N','Y') asterickYn, 
		  fbl1.version_no fblVersionNo, nvl(fbl2.confirm_yn, 'N') lastVerconf, fbl2.version_no lastConfVersion, 
		  DECODE((SELECT COUNT(1) FROM TRN_FLT_OPR_LEG WHERE TR_NO=opr.tr_no), (SELECT COUNT(1) FROM TRN_FBL WHERE flt_key=opr.flt_key and flt_date=opr.sch_date AND 
	       	CONFIRM_YN='Y' AND FBL_STATUS='P'), 'Y', 'N') confirmInd, 
		  DECODE (trnelpmsg.eloadplnrec, 0, 'N', null, 'N', 'Y') eloadPlanRec,
		  (SELECT finalize_ind FROM (SELECT * FROM (SELECT t.*, dense_rank() over (partition BY flt_key, flt_date order by to_number(tr_no) DESC) rank 
		    FROM trn_elp_msg t ) WHERE rank=1) msg WHERE msg.flt_key=opr.flt_key AND TO_CHAR(msg.flt_date,'DDMONYY')=TO_CHAR(opr.sch_date,'DDMONYY')) eloadPlanFinal,  
		  DECODE(opr_events.dls_final_date,NULL,'N','N', 'N', 'Y') dlsFinalise, decode(opr_events.ctm_out_date,NULL,'N','N', 'N', 'Y') customOut,
		  case when ((opr_events.final_manf_date) is not null And (hactlffmreceived)>0) then 'Y' else 'N' end as flightManifest,
		  DECODE(ffmout.hactlffmreceived,0,'N',null,'N','Y') hactalFfmrec, DECODE(expoffld.expOffldCnt,0,'N',null,'N','Y') preOffloadInd,
		  DECODE((SELECT DECODE(Event.Uws_Rcvd,NULL,'N','N', 'N', 'Y') FROM trn_Flt_Opr_Events Event WHERE Event.Tr_No=Opr.Tr_No),NULL,'N','N','N','Y') Uwsrec,
		  (SELECT Stragg(Stringdelim(Off_Point,'/')) FROM trn_Flt_Opr_Leg WHERE Tr_No=Opr.Tr_No) AS Port FROM trn_flt_opr opr
		  INNER JOIN Flt_Opr Opr1 oN Opr.Flt_Key||'P' = Opr1.Flt_Key aND Opr.Sch_Date =Opr1.Sch_Date AND Opr1.Flt_Type='D' AND  Opr.Flt_Type='D' 
		  INNER JOIN flt_opr_events opr_events on opr_events.tr_no = Opr1.tr_no
		  LEFT OUTER JOIN trn_fbl fbl ON opr.flt_key    =fbl.flt_key AND opr.sch_date=fbl.flt_date AND fbl.fbl_status='P'
		  LEFT OUTER JOIN (select MAX(version_no) as version_no, flt_key, flt_date from trn_fbl GROUP BY flt_key, flt_date) fbl1 
		    on opr.flt_key = fbl1.flt_key AND opr.sch_date = fbl1.flt_date
		  LEFT OUTER JOIN (select MAX(version_no) as version_no, flt_key, flt_Date, confirm_yn from trn_fbl where confirm_yn='Y'
		    GROUP BY flt_key, flt_Date, confirm_yn) fbl2 on opr.flt_key = fbl2.flt_key AND opr.sch_date = fbl2.flt_date
		  LEFT OUTER JOIN (select count(1) as hactlffmreceived, flt_key, flt_date from trn_ffm_out_msg where ffm_status = 'P' group by flt_key, flt_date) ffmout on
		    ffmout.flt_key =opr.flt_key and ffmout.flt_date=opr.sch_date 
		  LEFT OUTER JOIN (SELECT COUNT(1) eloadplnrec, flt_key, flt_date FROM trn_elp_msg where load_plan_ind='Y' GROUP BY flt_key, flt_date) trnelpmsg on 
		    trnelpmsg.flt_key =opr.flt_key and trnelpmsg.flt_date=opr.sch_date 
		  LEFT OUTER JOIN (SELECT COUNT(1) expOffldCnt, flt_key, flt_date FROM exp_offload_uld group by flt_key, flt_date) expoffld on expoffld.flt_key=Opr1.flt_key 
		    and expoffld.flt_date=Opr1.sch_date 
		  WHERE (TO_DATE(TO_CHAR(opr.SCH_DATE,'DDMONYY')|| SUBSTR(LPAD(opr.SCH_TIME,4,0),0,2)||SUBSTR(LPAD(opr.SCH_TIME,4,0),3,2),'DDMONYYHH24MI') &gt;= TO_DATE(#fromDate#,'DDMONYYHH24MI')
		  AND TO_DATE(TO_CHAR(opr.SCH_DATE,'DDMONYY')|| SUBSTR(LPAD(opr.SCH_TIME,4,0),0,2)||SUBSTR(LPAD(opr.SCH_TIME,4,0),3,2),'DDMONYYHH24MI') &lt;= TO_DATE(#toDate#,'DDMONYYHH24MI'))  
		<isNotEmpty prepend="and" property="carrierCode">
            	opr.carr_code=#carrierCode#
         </isNotEmpty>
         <isNotEmpty prepend="and" property="flightNumber">
            	opr.flt_key=#flightNumber#
         </isNotEmpty>
         <isEqual prepend="AND" property="dlsFinalise" compareValue="Y">          
            	(SELECT DECODE(event.dls_final_date,NULL,'N','Y') FROM flt_opr_events event WHERE event.tr_no=opr1.tr_no)='Y'
         </isEqual>
         <isEqual prepend="AND" property="dlsFinalise" compareValue="N">          
            	(SELECT DECODE(event.dls_final_date,NULL,'N','Y') FROM flt_opr_events event WHERE event.tr_no=opr1.tr_no)='N'
         </isEqual>
          <isEqual prepend="and" property="preOffloadInd" compareValue="Y">
            	(select count(1) from exp_offload_uld where flt_key=opr1.flt_key and flt_date=opr1.sch_date )>0
         </isEqual>
         <isEqual prepend="and" property="preOffloadInd" compareValue="N">
            	(select count(1) from exp_offload_uld where flt_key=opr1.flt_key and flt_date=opr1.sch_date )=0
         </isEqual>
         <isEqual prepend="and" property="superTrnsetup" compareValue="Y">
            	(select count(1) from trn_setup_flt setUpFlt  where setUpFlt.flt_key=opr.flt_key and setUpFlt.flt_date=opr.sch_date and setUpFlt.flt_type='E')>0
         </isEqual>
         <isEqual prepend="and" property="superTrnsetup" compareValue="N">
            	(select count(1) from trn_setup_flt setUpFlt  where setUpFlt.flt_key=opr.flt_key and setUpFlt.flt_date=opr.sch_date and setUpFlt.flt_type='E')=0
         </isEqual>
         <isNotEmpty prepend="and" property="handledBy" >
            	NVL(PKG_TRN_CTO.FUN_TRN_FLT_MNTR_EXP_CTO(opr.flt_key,to_char(opr.sch_date,'DDMONYY'),to_char(SUBSTR(opr.flt_key,0,2))),'')=#handledBy#
         </isNotEmpty>
         <isEqual prepend="and" property="uwsRec" compareValue="Y">
            	(select decode(event.uws_rcvd,null,'N','N', 'N', 'Y') from trn_flt_opr_events event where event.tr_no=opr.tr_no )='Y'
         </isEqual>
          <isEqual prepend="and" property="uwsRec" compareValue="N">
            	(select decode(event.uws_rcvd,null,'N','N', 'N', 'Y') from trn_flt_opr_events event where event.tr_no=opr.tr_no )='N'
         </isEqual>
         UNION
         select distinct opr.flt_key flightKey, to_char( opr.flt_date,'DDMONYY') flightDate, 
         opr.flt_date,
         PKG_COMMON.GET_FLT_STA(opr.FLT_KEY, to_char(opr.flt_date, 'DDMONYY'), 'D', 'DD') as std, 
		 PKG_COMMON.GET_FLT_ETA(opr.FLT_KEY,to_char(opr.flt_date,'DDMONYY'),'D','DD')  as etd, 
		PKG_COMMON.GET_FLT_ATA(opr.FLT_KEY,to_char(opr.flt_date,'DDMONYY'),'D','DD')  as atd, 
		(SELECT COUNT(1) FROM MESSAGE_LOG WHERE FLT_KEY=OPR.FLT_KEY||#trnFltSfx# AND FLT_DATE=OPR.flt_date AND MSG_STATUS='A'            
			AND MSG_TYPE='FBL') AS CPCTLOGID,            
			(SELECT COUNT(1) FROM edi_msg_log_out WHERE FLT_KEY=OPR.FLT_KEY||#trnFltSfx# AND FLT_DATE=OPR.flt_date            
			AND MSG_TYPE='FBL')as hactlLogId, 
		(select decode(count(1),0,'N','Y') from trn_setup_flt setUpFlt  where setUpFlt.flt_key=opr.flt_key and  to_char(setUpFlt.flt_date,'DDMONYY')=to_char(opr.flt_date,'DDMONYY') and setUpFlt.flt_type=opr.flt_type) superTrnsetup, 
		NVL(PKG_TRN_CTO.FUN_TRN_FLT_MNTR_EXP_CTO(opr.flt_key,to_char( opr.flt_date,'DDMONYY'),to_char(SUBSTR(opr.flt_key,0,2))),'') handledBy, 
 		decode(fbl.tr_no,null,'N','Y') fblReceived,
 		decode(NVL(fbl.auto_ind,'Y'),'Y','N','Y') asterickYn,
		(select max(version_no) from trn_fbl where flt_key=opr.flt_key and to_char(flt_date,'DDMONYY')=to_char(opr.flt_date,'DDMONYY'))  as fblVersionNo,
		NVL(fbl.confirm_yn,'N') as lastVerconf,		
		(select max(version_no) from trn_fbl where flt_key=opr.flt_key and to_char(flt_date,'DDMONYY')=to_char(opr.flt_date,'DDMONYY') and confirm_yn='Y')  lastConfVersion,
		(select decode(count(1),0,'N','Y') from trn_fbl where flt_key=opr.flt_key and flt_date=opr.flt_date  and confirm_yn='Y') confirmInd,
		(select decode(count(1),0,'N','Y') from trn_elp_msg where flt_key=opr.flt_key and to_char(flt_date,'DDMONYY')=to_char(opr.flt_date,'DDMONYY') and load_plan_ind='Y') eloadPlanRec,
		<!-- BugFix:: 10318 -->
		  (select finalize_ind from (select * from
			(select t.*, dense_rank() over (partition by flt_key, flt_date order by to_number(tr_no) desc) rank from trn_elp_msg t ) where rank = 1) 
 			msg  where msg.flt_key=opr.flt_key and to_char(msg.flt_date,'DDMONYY')=to_char(opr.flt_date,'DDMONYY') 
      		)
      		eloadPlanFinal,
 		'N' dlsFinalise,
		'N' customOut,
   		 'N' as flightManifest,
		(select decode(count(1),0,'N','Y') from trn_ffm_out_msg where flt_key=opr.flt_key and to_char(flt_date,'DDMONYY')=to_char(opr.flt_date,'DDMONYY') and ffm_status='P')hactalFfmrec,
		(select decode(count(1),0,'N','Y') from exp_offload_uld where flt_key=opr1.flt_key and flt_date=opr1.sch_date ) preOffloadInd,
		'N' uwsRec,
		(SELECT STRAGG(STRINGDELIM(OFF_POINT,'/')) from trn_flt_opr_leg where tr_no=opr.tr_no ) as port    
		from trn_setup_flt opr  LEFT OUTER JOIN trn_fbl fbl ON opr.flt_key=fbl.flt_key and opr.flt_date=fbl.flt_date and fbl.fbl_status='P'  and substr(opr.flt_key,0,2)=substr(fbl.flt_key,0,2)
		 LEFT OUTER JOIN flt_opr opr1 ON opr.flt_key||#trnFltSfx#=opr1.flt_key and opr.flt_date=opr1.sch_date and opr1.flt_type='A' 
 		 where  (opr.flt_date &gt;= TO_DATE(#fromDate#,'DDMONYYHH24MI') AND  opr.flt_date &lt;= TO_DATE(#toDate#,'DDMONYYHH24MI')) and opr.flt_type='E'
 		 and not exists(select null from trn_flt_opr where flt_key=opr.flt_key and sch_date=opr.flt_date) 
 		 <isNotEmpty prepend="and" property="carrierCode">
            	substr(opr.flt_key,0,2)=#carrierCode#
         </isNotEmpty>
         <isNotEmpty prepend="and" property="flightNumber">
            	opr.flt_key=#flightNumber#
         </isNotEmpty>
         <isEqual prepend="AND" property="dlsFinalise" compareValue="Y">          
            	1=1
         </isEqual>
         <isEqual prepend="AND" property="dlsFinalise" compareValue="N">          
            	1=1
         </isEqual>
          <isEqual prepend="and" property="preOffloadInd" compareValue="Y">
            	1=1
         </isEqual>
         <isEqual prepend="and" property="preOffloadInd" compareValue="N">
            	1=1
         </isEqual>
         <isEqual prepend="and" property="superTrnsetup" compareValue="Y">
            	(select count(1) from trn_setup_flt setUpFlt  where setUpFlt.flt_key=opr.flt_key and setUpFlt.flt_date=opr.flt_date and setUpFlt.flt_type=opr.flt_type)>0
         </isEqual>
         <isEqual prepend="and" property="superTrnsetup" compareValue="N">
            	(select count(1) from trn_setup_flt setUpFlt  where setUpFlt.flt_key=opr.flt_key and setUpFlt.flt_date=opr.flt_date and setUpFlt.flt_type=opr.flt_type)=0
         </isEqual>
         <isNotEmpty prepend="and" property="handledBy">
            	NVL(PKG_TRN_CTO.FUN_TRN_FLT_MNTR_EXP_CTO(opr.flt_key,to_char( opr.flt_date,'DDMONYY'),to_char(SUBSTR(opr.flt_key,0,2))),'')=#handledBy#
         </isNotEmpty>
          <isEqual prepend="and" property="uwsRec" compareValue="Y">
            	1=1
         </isEqual>
          <isEqual prepend="and" property="uwsRec" compareValue="N">
            	1=1
         </isEqual>
         <dynamic prepend="ORDER BY ">
	           <isNotEmpty property="sortOrder.sortField">
	             $sortOrder.sortField$,3 desc,std asc
	           </isNotEmpty>
	           <isEmpty property="sortOrder.sortField">
					3 desc, std asc
			   </isEmpty>
	        </dynamic>
	</select>

	
		<select id="ddtFfmDisc" parameterClass="cargo.cms.trn.bo.FlightMonitoringBO" resultClass="java.lang.String" >
		select decode(count(1),0,'N','Y') ddtFfmdisc  from
(select  msg.flt_key,msg.flt_date,uld.uld_key,shp.awb_no, trf.cntg_flt_key from ddt_msg msg,ddt_uld uld ,ddt_shp shp ,
ddt_shp_trf_dtl trf
where uld.tr_no= msg.tr_no and uld.doc_line_no=shp.udoc_line_no
and shp.tr_no=msg.tr_no and trf.sdoc_line_no= shp.doc_line_no  and
 trf.tr_no=msg.tr_no) ddt 
 LEFT JOIN
 (select msg.flt_key,msg.flt_date,uld.uld_key,shp.awb_no,shp.dest from edi_ffm_msg msg,edi_ffm_uld uld ,edi_ffm_shp shp 
where uld.tr_no= msg.tr_no and uld.doc_line_no=shp.udoc_line_no
and shp.tr_no=msg.tr_no and msg.ffm_status='P') ffm
 ON 
ddt.flt_key=ffm.flt_key and  to_char(ddt.flt_date,'DDMONYY')=to_char(ffm.flt_date,'DDMONYY')
 and  NVL(ddt.awb_No,ffm.awb_No)=ffm.awb_no
 where
NVL(ddt.flt_key,#flightKey#||(SELECT TRN_FLT_SUFFIX FROM SYS_PARAM))=#flightKey#||(SELECT TRN_FLT_SUFFIX FROM SYS_PARAM) and NVL(ddt.flt_date,to_date(#flightDate#,'DDMONYY'))=to_date(#flightDate#,'DDMONYY')
 and NVL(ddt.ULD_KEY,'ULDDUMMY')=NVL(ffm.uld_key,NVL(ddt.ULD_KEY,'ULDDUMMY')) and (ffm.dest ='HKG' or ffm.awb_no is null or ddt.cntg_flt_key is null) 
	
	</select>
<select id="ddtFfmDisc1" parameterClass="cargo.cms.trn.bo.FlightMonitoringBO" resultClass="java.lang.String" >
 select decode(count(1),0,'N','Y') ddtFfmdisc from
 ( 
 select  shp.awb_no from ddt_msg msg,ddt_uld uld ,ddt_shp shp ,
ddt_shp_trf_dtl trf
where uld.tr_no= msg.tr_no and uld.doc_line_no=shp.udoc_line_no
and shp.tr_no=msg.tr_no and trf.doc_line_no= shp.doc_line_no  and
 trf.tr_no=msg.tr_no and
 flt_key=#flightKey#||(SELECT TRN_FLT_SUFFIX FROM SYS_PARAM) and flt_date=to_date(#flightDate#,'DDMONYY')
 and shp.awb_no in(
 select shp.awb_no
 from edi_ffm_msg msg,edi_ffm_uld uld ,edi_ffm_shp shp 
where uld.tr_no= msg.tr_no and uld.doc_line_no=shp.udoc_line_no
and shp.tr_no=msg.tr_no and msg.ffm_status='P' and msg.flt_key=#flightKey#||(SELECT TRN_FLT_SUFFIX FROM SYS_PARAM)
and msg.flt_date=to_date(#flightDate#,'DDMONYY') 
and  shp.dest='HKG')
) 
	</select>
	<update id="unconfirmFbl" parameterClass="cargo.cms.trn.bo.FlightMonitoringBO">
		UPDATE TRN_FBL SET CONFIRM_YN = 'N',LM_USER_ID=#lmUserId#,LM_DATE=SYSDATE
		WHERE FLT_KEY = #flightKey# AND FLT_DATE = TO_DATE(#flightDate#,'DDMONYY') 
		AND FBL_status='P'
		
	</update>
	<update id="unconfirmFfm" parameterClass="cargo.cms.trn.bo.FlightMonitoringBO">
		UPDATE TRN_FFM_MSG SET CONFIRM_YN = 'N',LM_USER_ID=#lmUserId#,LM_DATE=SYSDATE
		WHERE FLT_KEY = #flightKey# AND FLT_DATE = TO_DATE(#flightDate#,'DDMONYY') 
		AND FFM_status='P' 
	</update>
	<select id="summaryFbl" parameterClass="cargo.cms.trn.bo.FlightMonitoringBO" resultClass="cargo.cms.trn.bo.FlightMonitoringBO" >
	select 
 count(distinct opr.flt_key) ttlFlight , count(distinct a.exp_cto) ttlHactal, count(distinct b.exp_cto) ttlCpct, count(distinct c.exp_cto) ttlBoth
from
flt_opr opr
LEFT OUTER JOIN trn_fbl fbl ON
opr.flt_key=fbl.flt_key and opr.sch_date=fbl.flt_date and fbl.fbl_status='P'
LEFT OUTER JOIN
(select setCarr.exp_cto,setCarr.carr_code from trn_setup_carr setCarr,trn_setup setUp  where 
 (TO_DATE(#fromDate#,'DDMONYYHH24MI') &lt;= setUp.period_to AND TO_DATE(#toDate#,'DDMONYYHH24MI') &gt;= setUp.period_frm
  	  		OR  TO_DATE(#toDate#,'DDMONYYHH24MI') &gt;= setUp.period_frm AND TO_DATE(#fromDate#,'DDMONYYHH24MI') &lt;= setUp.period_to) ) a
      ON a.carr_code=substr(opr.flt_key,0,2)     and   a.exp_cto='HACTL'
 LEFT OUTER JOIN
(select setCarr.exp_cto,setCarr.carr_code from trn_setup_carr setCarr,trn_setup setUp  where 
(TO_DATE(#fromDate#,'DDMONYYHH24MI') &lt;= setUp.period_to AND TO_DATE(#toDate#,'DDMONYYHH24MI') &gt;= setUp.period_frm
  	  		OR  TO_DATE(#toDate#,'DDMONYYHH24MI') &gt;= setUp.period_frm AND TO_DATE(#fromDate#,'DDMONYYHH24MI') &lt;= setUp.period_to) ) b
      ON b.carr_code=substr(opr.flt_key,0,2)     and   b.exp_cto='CPCT'
LEFT OUTER JOIN
(select setCarr.exp_cto,setCarr.carr_code from trn_setup_carr setCarr,trn_setup setUp  where 
 (TO_DATE(#fromDate#,'DDMONYYHH24MI') &lt;= setUp.period_to AND TO_DATE(#toDate#,'DDMONYYHH24MI') &gt;= setUp.period_frm
  	  		OR  TO_DATE(#toDate#,'DDMONYYHH24MI') &gt;= setUp.period_frm AND TO_DATE(#fromDate#,'DDMONYYHH24MI') &lt;= setUp.period_to) ) c
      ON c.carr_code=substr(opr.flt_key,0,2)     and   c.exp_cto='Manual'
where
 (opr.sch_date &gt;= TO_DATE(#fromDate#,'DDMONYYHH24MI') AND  opr.sch_date &lt;= TO_DATE(#toDate#,'DDMONYYHH24MI')) and opr.flt_type='D'
	</select>
	<select id="summaryFfm" parameterClass="cargo.cms.trn.bo.FlightMonitoringBO" resultClass="cargo.cms.trn.bo.FlightMonitoringBO" >
select 
 count(distinct opr.flt_key) ttlFlight , count(distinct a.imp_cto) ttlHactal, count(distinct b.imp_cto) ttlCpct, count(distinct c.imp_cto) ttlBoth
from
flt_opr opr
LEFT OUTER JOIN trn_ffm_msg ffm ON
opr.flt_key=ffm.flt_key and opr.sch_date=ffm.flt_date and ffm.ffm_status='P'
LEFT OUTER JOIN
(select setCarr.imp_cto,setCarr.carr_code from trn_setup_carr setCarr,trn_setup setUp  where 
 (TO_DATE(#fromDate#,'DDMONYYHH24MI') &lt;= setUp.period_to AND TO_DATE(#toDate#,'DDMONYYHH24MI') &gt;= setUp.period_frm
  	  		OR  TO_DATE(#toDate#,'DDMONYYHH24MI') &gt;= setUp.period_frm AND TO_DATE(#fromDate#,'DDMONYYHH24MI') &lt;= setUp.period_to)) a
      ON a.carr_code=substr(opr.flt_key,0,2)     and   a.imp_cto='HACTL'
 LEFT OUTER JOIN
(select setCarr.imp_cto,setCarr.carr_code from trn_setup_carr setCarr,trn_setup setUp  where 
 (TO_DATE(#fromDate#,'DDMONYYHH24MI') &lt;= setUp.period_to AND TO_DATE(#toDate#,'DDMONYYHH24MI') &gt;= setUp.period_frm
  	  		OR  TO_DATE(#toDate#,'DDMONYYHH24MI') &gt;= setUp.period_frm AND TO_DATE(#fromDate#,'DDMONYYHH24MI') &lt;= setUp.period_to)) b
      ON b.carr_code=substr(opr.flt_key,0,2)     and   b.imp_cto='CPCT'
LEFT OUTER JOIN
(select setCarr.imp_cto,setCarr.carr_code from trn_setup_carr setCarr,trn_setup setUp  where 
 (TO_DATE(#fromDate#,'DDMONYYHH24MI') &lt;= setUp.period_to AND TO_DATE(#toDate#,'DDMONYYHH24MI') &gt;= setUp.period_frm
  	  		OR  TO_DATE(#toDate#,'DDMONYYHH24MI') &gt;= setUp.period_frm AND TO_DATE(#fromDate#,'DDMONYYHH24MI') &lt;= setUp.period_to)) c
      ON c.carr_code=substr(opr.flt_key,0,2)     and   c.imp_cto='Manual'
where
 (opr.sch_date &gt;= TO_DATE(#fromDate#,'DDMONYYHH24MI') AND  opr.sch_date &lt;= TO_DATE(#toDate#,'DDMONYYHH24MI')) and opr.flt_type='A'
	</select>
	
	<select id="fetchOutboundFlightCOUNT" parameterClass="cargo.cms.trn.bo.FlightMonitoringBO"
		resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM (
		SELECT
		  DISTINCT opr.flt_key flightKey, TO_CHAR( opr.sch_date,'DDMONYY') flightDate,
		  opr.sch_date, rtrim(SUBSTR(TRIM(TO_CHAR(OPR.SCH_TIME,'0000')),0,2) || ':' || SUBSTR(TRIM(TO_CHAR(OPR.SCH_TIME,'0000')),3,4), ':') AS std,
		  PKG_COMMON.GET_FLT_ETA(opr1.FLT_KEY,TO_CHAR(opr1.sch_date,'DDMONYY'),'D','DD') AS etd,
		  PKG_COMMON.GET_FLT_ATA(opr1.FLT_KEY,TO_CHAR(opr1.sch_date,'DDMONYY'),'D','DD') AS atd,
		  (SELECT COUNT(1) FROM MESSAGE_LOG WHERE FLT_KEY=OPR.FLT_KEY||'P' AND FLT_DATE=OPR.SCH_DATE AND MSG_STATUS='A' AND MSG_TYPE='FBL') AS CPCTLOGID,            
			(SELECT COUNT(1) FROM edi_msg_log_out WHERE FLT_KEY=OPR.FLT_KEY||'P' AND FLT_DATE=OPR.SCH_DATE AND MSG_TYPE='FBL')as hactlLogId, 
		  (SELECT DECODE(COUNT(1),0,'N','Y') FROM trn_setup_flt setUpFlt WHERE setUpFlt.flt_key=opr.flt_key AND TO_CHAR(setUpFlt.flt_date,'DDMONYY')=
		  TO_CHAR(opr.sch_date,'DDMONYY') AND setUpFlt.flt_type='E') superTrnsetup,
      NVL(PKG_TRN_CTO.FUN_TRN_FLT_MNTR_EXP_CTO(opr.flt_key,TO_CHAR(opr.sch_date,'DDMONYY'),opr.carr_code),'') handledBy,
		  DECODE(fbl.tr_no,NULL,'N','Y') fblReceived, DECODE(NVL(fbl.auto_ind,'Y'),'Y','N','Y') asterickYn, 
		  fbl1.version_no fblVersionNo, nvl(fbl2.confirm_yn, 'N') lastVerconf, fbl2.version_no lastConfVersion, 
		  DECODE((SELECT COUNT(1) FROM TRN_FLT_OPR_LEG WHERE TR_NO=opr.tr_no), (SELECT COUNT(1) FROM TRN_FBL WHERE flt_key=opr.flt_key and flt_date=opr.sch_date AND 
	       	CONFIRM_YN='Y' AND FBL_STATUS='P'), 'Y', 'N') confirmInd, 
		  DECODE (trnelpmsg.eloadplnrec, 0, 'N', null, 'N', 'Y') eloadPlanRec,
		  (SELECT finalize_ind FROM (SELECT * FROM (SELECT t.*, dense_rank() over (partition BY flt_key, flt_date order by to_number(tr_no) DESC) rank 
		    FROM trn_elp_msg t ) WHERE rank=1) msg WHERE msg.flt_key=opr.flt_key AND TO_CHAR(msg.flt_date,'DDMONYY')=TO_CHAR(opr.sch_date,'DDMONYY')) eloadPlanFinal,  
		  DECODE(opr_events.dls_final_date,NULL,'N','N', 'N', 'Y') dlsFinalise, decode(opr_events.ctm_out_date,NULL,'N','N', 'N', 'Y') customOut,
		  case when ((opr_events.final_manf_date) is not null And (hactlffmreceived)>0) then 'Y' else 'N' end as flightManifest,
		  DECODE(ffmout.hactlffmreceived,0,'N',null,'N','Y') hactalFfmrec, DECODE(expoffld.expOffldCnt,0,'N',null,'N','Y') preOffloadInd,
		  DECODE((SELECT DECODE(Event.Uws_Rcvd,NULL,'N','N', 'N', 'Y') FROM trn_Flt_Opr_Events Event WHERE Event.Tr_No=Opr.Tr_No),NULL,'N','N','N','Y') Uwsrec,
		  (SELECT Stragg(Stringdelim(Off_Point,'/')) FROM trn_Flt_Opr_Leg WHERE Tr_No=Opr.Tr_No) AS Port FROM trn_flt_opr opr
		  INNER JOIN Flt_Opr Opr1 oN Opr.Flt_Key||'P' = Opr1.Flt_Key aND Opr.Sch_Date =Opr1.Sch_Date AND Opr1.Flt_Type='D'
		  INNER JOIN flt_opr_events opr_events on opr_events.tr_no = Opr1.tr_no
		  LEFT OUTER JOIN trn_fbl fbl ON opr.flt_key    =fbl.flt_key AND opr.sch_date=fbl.flt_date AND fbl.fbl_status='P'
		  LEFT OUTER JOIN (select MAX(version_no) as version_no, flt_key, flt_date from trn_fbl GROUP BY flt_key, flt_date) fbl1 
		    on opr.flt_key = fbl1.flt_key AND opr.sch_date = fbl1.flt_date
		  LEFT OUTER JOIN (select MAX(version_no) as version_no, flt_key, flt_Date, confirm_yn from trn_fbl where confirm_yn='Y'
		    GROUP BY flt_key, flt_Date, confirm_yn) fbl2 on opr.flt_key = fbl2.flt_key AND opr.sch_date = fbl2.flt_date
		  LEFT OUTER JOIN (select count(1) as hactlffmreceived, flt_key, flt_date from trn_ffm_out_msg where ffm_status = 'P' group by flt_key, flt_date) ffmout on
		    ffmout.flt_key =opr.flt_key and ffmout.flt_date=opr.sch_date 
		  LEFT OUTER JOIN (SELECT COUNT(1) eloadplnrec, flt_key, flt_date FROM trn_elp_msg where load_plan_ind='Y' GROUP BY flt_key, flt_date) trnelpmsg on 
		    trnelpmsg.flt_key =opr.flt_key and trnelpmsg.flt_date=opr.sch_date 
		  LEFT OUTER JOIN (SELECT COUNT(1) expOffldCnt, flt_key, flt_date FROM exp_offload_uld group by flt_key, flt_date) expoffld on expoffld.flt_key=Opr1.flt_key 
		    and expoffld.flt_date=Opr1.sch_date 
		  WHERE (TO_DATE(TO_CHAR(opr.SCH_DATE,'DDMONYY')|| SUBSTR(LPAD(opr.SCH_TIME,4,0),0,2)||SUBSTR(LPAD(opr.SCH_TIME,4,0),3,2),'DDMONYYHH24MI') &gt;= TO_DATE(#fromDate#,'DDMONYYHH24MI')
		  AND TO_DATE(TO_CHAR(opr.SCH_DATE,'DDMONYY')|| SUBSTR(LPAD(opr.SCH_TIME,4,0),0,2)||SUBSTR(LPAD(opr.SCH_TIME,4,0),3,2),'DDMONYYHH24MI') &lt;= TO_DATE(#toDate#,'DDMONYYHH24MI'))  
		<isNotEmpty prepend="and" property="carrierCode">
            	opr.carr_code=#carrierCode#
         </isNotEmpty>
         <isNotEmpty prepend="and" property="flightNumber">
            	opr.flt_key=#flightNumber#
         </isNotEmpty>
         <isEqual prepend="AND" property="dlsFinalise" compareValue="Y">          
            	(SELECT DECODE(event.dls_final_date,NULL,'N','Y') FROM flt_opr_events event WHERE event.tr_no=opr1.tr_no)='Y'
         </isEqual>
         <isEqual prepend="AND" property="dlsFinalise" compareValue="N">          
            	(SELECT DECODE(event.dls_final_date,NULL,'N','Y') FROM flt_opr_events event WHERE event.tr_no=opr1.tr_no)='N'
         </isEqual>
          <isEqual prepend="and" property="preOffloadInd" compareValue="Y">
            	(select count(1) from exp_offload_uld where flt_key=opr1.flt_key and flt_date=opr1.sch_date )>0
         </isEqual>
         <isEqual prepend="and" property="preOffloadInd" compareValue="N">
            	(select count(1) from exp_offload_uld where flt_key=opr1.flt_key and flt_date=opr1.sch_date )=0
         </isEqual>
         <isEqual prepend="and" property="superTrnsetup" compareValue="Y">
            	(select count(1) from trn_setup_flt setUpFlt  where setUpFlt.flt_key=opr.flt_key and setUpFlt.flt_date=opr.sch_date and setUpFlt.flt_type='E')>0
         </isEqual>
         <isEqual prepend="and" property="superTrnsetup" compareValue="N">
            	(select count(1) from trn_setup_flt setUpFlt  where setUpFlt.flt_key=opr.flt_key and setUpFlt.flt_date=opr.sch_date and setUpFlt.flt_type='E')=0
         </isEqual>
         <isNotEmpty prepend="and" property="handledBy" >
            	NVL(PKG_TRN_CTO.FUN_TRN_FLT_MNTR_EXP_CTO(opr.flt_key,to_char(opr.sch_date,'DDMONYY'),to_char(SUBSTR(opr.flt_key,0,2))),'')=#handledBy#
         </isNotEmpty>
         <isEqual prepend="and" property="uwsRec" compareValue="Y">
            	(select decode(event.uws_rcvd,null,'N','N', 'N', 'Y') from trn_flt_opr_events event where event.tr_no=opr.tr_no )='Y'
         </isEqual>
          <isEqual prepend="and" property="uwsRec" compareValue="N">
            	(select decode(event.uws_rcvd,null,'N','N', 'N', 'Y') from trn_flt_opr_events event where event.tr_no=opr.tr_no )='N'
         </isEqual>
         UNION
         select distinct opr.flt_key flightKey, to_char( opr.flt_date,'DDMONYY') flightDate, 
         opr.flt_date,
         PKG_COMMON.GET_FLT_STA(opr.FLT_KEY, to_char(opr.flt_date, 'DDMONYY'), 'D', 'DD') as std, 
		 PKG_COMMON.GET_FLT_ETA(opr.FLT_KEY,to_char(opr.flt_date,'DDMONYY'),'D','DD')  as etd, 
		PKG_COMMON.GET_FLT_ATA(opr.FLT_KEY,to_char(opr.flt_date,'DDMONYY'),'D','DD')  as atd, 
		(SELECT COUNT(1) FROM MESSAGE_LOG WHERE FLT_KEY=OPR.FLT_KEY||#trnFltSfx# AND FLT_DATE=OPR.flt_date AND MSG_STATUS='A'            
			AND MSG_TYPE='FBL') AS CPCTLOGID,            
			(SELECT COUNT(1) FROM edi_msg_log_out WHERE FLT_KEY=OPR.FLT_KEY||#trnFltSfx# AND FLT_DATE=OPR.flt_date            
			AND MSG_TYPE='FBL')as hactlLogId, 
		(select decode(count(1),0,'N','Y') from trn_setup_flt setUpFlt  where setUpFlt.flt_key=opr.flt_key and  to_char(setUpFlt.flt_date,'DDMONYY')=to_char(opr.flt_date,'DDMONYY') and setUpFlt.flt_type=opr.flt_type) superTrnsetup, 
		NVL(PKG_TRN_CTO.FUN_TRN_FLT_MNTR_EXP_CTO(opr.flt_key,to_char( opr.flt_date,'DDMONYY'),to_char(SUBSTR(opr.flt_key,0,2))),'') handledBy, 
 		decode(fbl.tr_no,null,'N','Y') fblReceived,
 		decode(NVL(fbl.auto_ind,'Y'),'Y','N','Y') asterickYn,
		(select max(version_no) from trn_fbl where flt_key=opr.flt_key and to_char(flt_date,'DDMONYY')=to_char(opr.flt_date,'DDMONYY'))  as fblVersionNo,
		NVL(fbl.confirm_yn,'N') as lastVerconf,		
		(select max(version_no) from trn_fbl where flt_key=opr.flt_key and to_char(flt_date,'DDMONYY')=to_char(opr.flt_date,'DDMONYY') and confirm_yn='Y')  lastConfVersion,
		(select decode(count(1),0,'N','Y') from trn_fbl where flt_key=opr.flt_key and flt_date=opr.flt_date  and confirm_yn='Y') confirmInd,
		(select decode(count(1),0,'N','Y') from trn_elp_msg where flt_key=opr.flt_key and to_char(flt_date,'DDMONYY')=to_char(opr.flt_date,'DDMONYY') and load_plan_ind='Y') eloadPlanRec,
		<!-- BugFix:: 10318 -->
		  (select finalize_ind from (select * from
			(select t.*, dense_rank() over (partition by flt_key, flt_date order by to_number(tr_no) desc) rank from trn_elp_msg t ) where rank = 1) 
 			msg  where msg.flt_key=opr.flt_key and to_char(msg.flt_date,'DDMONYY')=to_char(opr.flt_date,'DDMONYY') 
      		)
      		eloadPlanFinal,
 		'N' dlsFinalise,
		'N' customOut,
   		 'N' as flightManifest,
		(select decode(count(1),0,'N','Y') from trn_ffm_out_msg where flt_key=opr.flt_key and to_char(flt_date,'DDMONYY')=to_char(opr.flt_date,'DDMONYY') and ffm_status='P')hactalFfmrec,
		(select decode(count(1),0,'N','Y') from exp_offload_uld where flt_key=opr1.flt_key and flt_date=opr1.sch_date ) preOffloadInd,
		'N' uwsRec,
		(SELECT STRAGG(STRINGDELIM(OFF_POINT,'/')) from trn_flt_opr_leg where tr_no=opr.tr_no ) as port    
		from trn_setup_flt opr  LEFT OUTER JOIN trn_fbl fbl ON opr.flt_key=fbl.flt_key and opr.flt_date=fbl.flt_date and fbl.fbl_status='P'  and substr(opr.flt_key,0,2)=substr(fbl.flt_key,0,2)
		 LEFT OUTER JOIN flt_opr opr1 ON opr.flt_key||#trnFltSfx#=opr1.flt_key and opr.flt_date=opr1.sch_date and opr1.flt_type='A' 
 		 where  (opr.flt_date &gt;= TO_DATE(#fromDate#,'DDMONYYHH24MI') AND  opr.flt_date &lt;= TO_DATE(#toDate#,'DDMONYYHH24MI')) and opr.flt_type='E'
 		 and not exists(select null from trn_flt_opr where flt_key=opr.flt_key and sch_date=opr.flt_date) 
 		 <isNotEmpty prepend="and" property="carrierCode">
            	substr(opr.flt_key,0,2)=#carrierCode#
         </isNotEmpty>
         <isNotEmpty prepend="and" property="flightNumber">
            	opr.flt_key=#flightNumber#
         </isNotEmpty>
         <isEqual prepend="AND" property="dlsFinalise" compareValue="Y">          
            	1=1
         </isEqual>
         <isEqual prepend="AND" property="dlsFinalise" compareValue="N">          
            	1=1
         </isEqual>
          <isEqual prepend="and" property="preOffloadInd" compareValue="Y">
            	1=1
         </isEqual>
         <isEqual prepend="and" property="preOffloadInd" compareValue="N">
            	1=1
         </isEqual>
         <isEqual prepend="and" property="superTrnsetup" compareValue="Y">
            	(select count(1) from trn_setup_flt setUpFlt  where setUpFlt.flt_key=opr.flt_key and setUpFlt.flt_date=opr.flt_date and setUpFlt.flt_type=opr.flt_type)>0
         </isEqual>
         <isEqual prepend="and" property="superTrnsetup" compareValue="N">
            	(select count(1) from trn_setup_flt setUpFlt  where setUpFlt.flt_key=opr.flt_key and setUpFlt.flt_date=opr.flt_date and setUpFlt.flt_type=opr.flt_type)=0
         </isEqual>
         <isNotEmpty prepend="and" property="handledBy">
            	NVL(PKG_TRN_CTO.FUN_TRN_FLT_MNTR_EXP_CTO(opr.flt_key,to_char( opr.flt_date,'DDMONYY'),to_char(SUBSTR(opr.flt_key,0,2))),'')=#handledBy#
         </isNotEmpty>
          <isEqual prepend="and" property="uwsRec" compareValue="Y">
            	1=1
         </isEqual>
          <isEqual prepend="and" property="uwsRec" compareValue="N">
            	1=1
         </isEqual>
         )
	</select>	
	<select id="fetchInboundFlightCOUNT" parameterClass="cargo.cms.trn.bo.FlightMonitoringBO"
		resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM (
		select distinct opr.flt_key flightKey, to_char( opr.sch_date,'DDMONYY') flightDate,
		  opr.sch_date, PKG_COMMON.GET_FLT_STA(opr1.FLT_KEY, to_char(opr1.sch_date,'DDMONYY'), 'A', 'DD') as sta, 
	      PKG_COMMON.GET_FLT_ETA(opr1.FLT_KEY,to_char(opr1.sch_date,'DDMONYY'),'A','DD')  as eta, 
	      PKG_COMMON.GET_FLT_ATA(OPR1.FLT_KEY,TO_CHAR(OPR1.SCH_DATE,'DDMONYY'),'A','DD')  AS ATA, 
	      (SELECT COUNT(1) FROM MESSAGE_LOG WHERE FLT_KEY=OPR.FLT_KEY||#trnFltSfx# AND FLT_DATE=OPR.SCH_DATE AND MSG_STATUS='A' AND MSG_TYPE='FFM') AS CPCTLOGID,            
				(SELECT COUNT(1) FROM edi_msg_log_out WHERE FLT_KEY=OPR.FLT_KEY||#trnFltSfx# AND FLT_DATE=OPR.SCH_DATE AND MSG_TYPE='FFM')as hactlLogId, 
	      (select decode(count(1),0,'N','Y') from trn_setup_flt setUpFlt where setUpFlt.flt_key=opr.flt_key and to_char(setUpFlt.flt_date,'DDMONYY')=
	        to_char(opr.sch_date,'DDMONYY') and setUpFlt.flt_type='I') superTrnsetup, 
	      NVL(PKG_TRN_CTO.FUN_TRN_FLT_MNTR_IMP_CTO(OPR.FLT_KEY,TO_CHAR(OPR.SCH_DATE,'DDMONYY'),TO_CHAR(SUBSTR(OPR.FLT_KEY,0,2))),'') HANDLEDBY, 
	      DECODE (FFM.AUTO_IND, NULL, 'N', (SELECT DECODE(COUNT(AUTO_IND), 0, 'N', 'Y') FROM TRN_FFM_MSG WHERE FLT_KEY=OPR.FLT_KEY AND TO_CHAR(FLT_DATE,'DDMONYY')=TO_CHAR(OPR.SCH_DATE,'DDMONYY') AND FFM_STATUS='P' AND AUTO_IND='N')) ASTERICKYN,
	      decode(ffm.ddt_cto_disc,'Y','Y','N') ddtCtodisc,decode(ffm.tr_no,null,'N','Y') ffmReceived,
	      ffm1.version_no ffmVersionno, decode(ffm2.confirm_yn, null, 'N', 'N', 'N', 'Y') lastVerconf, ffm2.version_no lastConfVersionFfm,
	      ffm3.ver_no_conf latestVersionNoAfterConfirm,
	      DECODE((SELECT COUNT(1) FROM TRN_FLT_OPR_LEG WHERE TR_NO=opr.tr_no), (SELECT COUNT(1) FROM TRN_FFM_MSG WHERE flt_key=opr.flt_key and flt_date=opr.sch_date AND 
	       	CONFIRM_YN='Y' AND FFM_STATUS='P'), 'Y', 'N') confirmInd, 
	      (SELECT STRAGG(STRINGDELIM(BRD_POINT,'/')) from trn_flt_opr_leg where tr_no=opr.tr_no )  port,
	      decode(ddt1.ddtRecCnt, 0, 'N', null, 'N', 'Y') ddtReceived, decode(ddt2.ddtSplit, 0, 'N', null, 'N', 'Y') ddtSplit,
	      decode(decode(opr_events.ddt_finalise_date,null,'N','Y'),null,'N','N','N','Y') ddtProcessed,
	      decode((select decode(event.uws_rcvd,null,'N','Y') from trn_flt_opr_events event where event.tr_no=opr.tr_no ),null,'N','N','N','Y') uwsRec,
	      decode(cstsubm.cstsubcnt, 0, 'N', null, 'N', 'Y') intSubm
	      from trn_flt_opr opr 
	      INNER JOIN flt_opr opr1 ON opr.flt_key||#trnFltSfx#=opr1.flt_key and opr.sch_date=opr1.sch_date and opr1.flt_type='A'
	      INNER JOIN flt_opr_events opr_events on opr_events.tr_no = Opr1.tr_no
	      LEFT OUTER JOIN trn_ffm_msg ffm ON opr.flt_key=ffm.flt_key and opr.sch_date=ffm.flt_date and ffm.ffm_status='P' 
	        and opr.carr_code=substr(ffm.flt_key,0,2)
	      LEFT OUTER JOIN (select MAX(version_no) as version_no, flt_key, flt_date from trn_ffm_msg GROUP BY flt_key, flt_date) ffm1 
	        on opr.flt_key = ffm1.flt_key AND opr.sch_date = ffm1.flt_date
	      LEFT OUTER JOIN (select MAX(version_no) as version_no, flt_key, flt_Date, confirm_yn from trn_ffm_msg where confirm_yn='Y'
	        GROUP BY flt_key, flt_Date, confirm_yn) ffm2 on opr.flt_key = ffm2.flt_key AND opr.sch_date = ffm2.flt_date
	      LEFT OUTER JOIN (select MAX(VER_NO_AFTER_CONF) as ver_no_conf, flt_key, flt_Date from trn_ffm_msg where confirm_yn='Y'
	        group by flt_key, flt_Date) ffm3 on opr.flt_key = ffm3.flt_key AND opr.sch_date = ffm3.flt_date
	      LEFT OUTER JOIN (select count(1) ddtRecCnt, flt_key, flt_date from ddt_msg where ddt_status='P' group by flt_key, flt_date) ddt1 on opr1.flt_key = ddt1.flt_key 
	        AND opr1.sch_date = ddt1.flt_date
	      LEFT OUTER JOIN (select count(1) ddtSplit, flt_key, flt_date from ddt_msg where ddt_status='P' and ddt_split_ind='Y' group by flt_key, flt_date) ddt2 
	        on opr1.flt_key = ddt2.flt_key AND opr1.sch_date = ddt2.flt_date
	      LEFT OUTER JOIN (select count(1) cstsubcnt, FLT_KEY, FLT_DATE from CST_SUBM WHERE REC_TYPE='INT' AND SEND_STATUS NOT IN ('E','R') group by FLT_KEY, FLT_DATE) cstsubm 
	        on opr1.flt_key = cstsubm.flt_key AND opr1.sch_date = cstsubm.flt_date
	      where 
	      (TO_DATE(TO_CHAR(opr.SCH_DATE,'DDMONYY') || substr(LPAD(opr.SCH_TIME,4,0),0,2) ||substr(LPAD(opr.SCH_TIME,4,0),3,2),'DDMONYYHH24MI') &gt;= TO_DATE(#fromDate#,'DDMONYYHH24MI') 
	      AND  TO_DATE(TO_CHAR(opr.SCH_DATE,'DDMONYY') || substr(LPAD(opr.SCH_TIME,4,0),0,2) ||substr(LPAD(opr.SCH_TIME,4,0),3,2),'DDMONYYHH24MI') &lt;= TO_DATE(#toDate#,'DDMONYYHH24MI')) 
	      and opr.flt_type='A'
            <isNotEmpty prepend="and" property="carrierCode">
                  opr.carr_code=#carrierCode#
         </isNotEmpty>
         <isNotEmpty prepend="and" property="flightNumber">
                  opr.flt_key=#flightNumber#
         </isNotEmpty>
         
          <isEqual prepend="and" property="superTrnsetup" compareValue="Y">
                  (select count(1) from trn_setup_flt setUpFlt  where setUpFlt.flt_key=opr.flt_key and setUpFlt.flt_date=opr.sch_date and setUpFlt.flt_type='I')>0
         </isEqual>
          <isEqual prepend="and" property="superTrnsetup" compareValue="N">
                  (select count(1) from trn_setup_flt setUpFlt  where setUpFlt.flt_key=opr.flt_key and setUpFlt.flt_date=opr.sch_date and setUpFlt.flt_type='I')=0
         </isEqual>
         <isEqual prepend="and" property="ddtReceived" compareValue="Y">
                  (select count(1) from ddt_msg ddt  where ddt.flt_key=opr1.flt_key and ddt.flt_date=opr1.sch_date and ddt.ddt_status='P')>0
         </isEqual>
         <isEqual prepend="and" property="ddtReceived" compareValue="N">
                  (select count(1) from ddt_msg ddt  where ddt.flt_key=opr1.flt_key and ddt.flt_date=opr1.sch_date and ddt.ddt_status='P')=0
         </isEqual>
         <isEqual prepend="and" property="ddtProcessed" compareValue="Y">
         		   (SELECT DECODE(event.ddt_finalise_date,NULL,'N','Y') FROM flt_opr_events event WHERE event.tr_no=opr1.tr_no)='Y'
					AND (SELECT DECODE(event.ddt_finalise_user_id,NULL,'N','Y') FROM flt_opr_events event WHERE event.tr_no=opr1.tr_no)='Y'  
         </isEqual>
         <isEqual prepend="and" property="ddtProcessed" compareValue="N">
                  (SELECT DECODE(event.ddt_finalise_date,NULL,'N','Y') FROM flt_opr_events event WHERE event.tr_no=opr1.tr_no)='N'
				   AND (SELECT DECODE(event.ddt_finalise_user_id,NULL,'N','Y') FROM flt_opr_events event WHERE event.tr_no=opr1.tr_no)='N'  
         </isEqual>
         <isEqual prepend="and" property="intSubm" compareValue="Y">
                  (select count(1) from CST_SUBM SUBM WHERE SUBM.FLT_KEY = OPR1.FLT_KEY AND SUBM.FLT_DATE = OPR1.sch_DATE AND SUBM.REC_TYPE = 'INT' AND SUBM.SEND_STATUS NOT IN ('E','R')) >0 
         </isEqual>
          <isEqual prepend="and" property="intSubm" compareValue="N">
                  (select count(1) from CST_SUBM SUBM WHERE SUBM.FLT_KEY = OPR1.FLT_KEY AND SUBM.FLT_DATE = OPR1.sch_DATE AND SUBM.REC_TYPE = 'INT' AND SUBM.SEND_STATUS NOT IN ('E','R')) =0 
         </isEqual>
          <isNotEmpty prepend="and" property="handledBy">
            	NVL(PKG_TRN_CTO.FUN_TRN_FLT_MNTR_IMP_CTO(opr.flt_key,to_char(opr.sch_date,'DDMONYY'),to_char(SUBSTR(opr.flt_key,0,2))),'')=#handledBy#
         </isNotEmpty>
         UNION           
            select distinct opr.flt_key flightKey, to_char( opr.flt_date,'DDMONYY') flightDate, 
            opr.flt_date,
            PKG_COMMON.GET_FLT_STA(opr.FLT_KEY, to_char(opr.flt_date, 'DDMONYY'), 'A', 'DD') as sta, 
            PKG_COMMON.GET_FLT_ETA(opr.FLT_KEY,to_char(opr.flt_date,'DDMONYY'),'A','DD')  as eta, 
            PKG_COMMON.GET_FLT_ATA(opr.FLT_KEY,to_char(opr.flt_date,'DDMONYY'),'A','DD')  as ata, 
            (SELECT COUNT(1) FROM MESSAGE_LOG WHERE FLT_KEY=OPR.FLT_KEY||#trnFltSfx# AND FLT_DATE=OPR.flt_date AND MSG_STATUS='A'            
			AND MSG_TYPE='FFM') AS CPCTLOGID,            
			(SELECT COUNT(1) FROM edi_msg_log_out WHERE FLT_KEY=OPR.FLT_KEY||#trnFltSfx# AND FLT_DATE=OPR.flt_date            
			AND MSG_TYPE='FFM')as hactlLogId, 
            (select decode(count(1),0,'N','Y') from trn_setup_flt setUpFlt  where setUpFlt.flt_key=opr.flt_key and to_char(setUpFlt.flt_date,'DDMONYY')=to_char(opr.flt_date,'DDMONYY') and setUpFlt.flt_type=opr.flt_type) superTrnsetup, 
            NVL(PKG_TRN_CTO.FUN_TRN_FLT_MNTR_IMP_CTO(opr.flt_key,to_char( opr.flt_date,'DDMONYY'),to_char(SUBSTR(opr.flt_key,0,2))),'') handledBy, 
            decode(NVL(ffm.auto_ind,'Y'),'Y','N','Y') asterickYn,
            decode(ffm.ddt_cto_disc,'Y','Y','N') ddtCtodisc,
           decode(ffm.tr_no,null,'N','Y') ffmReceived,
            (select max(version_no) from trn_ffm_msg where flt_key=opr.flt_key and to_char(flt_date,'DDMONYY')=to_char(opr1.sch_date,'DDMONYY') )  as ffmVersionno,      
            NVL(ffm.confirm_yn,'N') as lastVerconf,   
            (select max(version_no) from trn_ffm_msg where flt_key=opr.flt_key and to_char(flt_date,'DDMONYY')=to_char(opr.flt_date,'DDMONYY') and confirm_yn='Y')  lastConfVersionFfm,
            (select max(VER_NO_AFTER_CONF) from trn_ffm_msg where flt_key=opr.flt_key and to_char(flt_date,'DDMONYY')=to_char(opr.flt_date,'DDMONYY') and confirm_yn='Y')  latestVersionNoAfterConfirm,
            (select decode(count(1),0,'N','Y') from trn_ffm_msg where flt_key=opr.flt_key and flt_date=opr.flt_date  and confirm_yn='Y') confirmInd,
            (SELECT STRAGG(STRINGDELIM(BRD_POINT,'/')) from trn_flt_opr_leg where tr_no=opr.tr_no )  port,
            (select decode(count(1),0,'N','Y') from ddt_msg ddt  where ddt.flt_key=opr1.flt_key and to_char(ddt.flt_date,'DDMONYY')=to_char(opr.flt_date,'DDMONYY') and ddt.ddt_status='P') ddtReceived,
            (select decode(count(1),0,'N','Y') from ddt_msg ddt  where ddt.flt_key=opr1.flt_key and to_char(ddt.flt_date,'DDMONYY')=to_char(opr1.sch_date,'DDMONYY') and ddt.ddt_status='P' and ddt_split_ind='Y') ddtSplit,
            'N' ddtProcessed,
            'N' uwsRec,
            (select  decode(count(1),0,'N','Y') from CST_SUBM SUBM WHERE SUBM.FLT_KEY = OPR1.FLT_KEY AND SUBM.FLT_DATE = OPR.flt_DATE AND SUBM.REC_TYPE = 'INT' AND SUBM.SEND_STATUS NOT IN ('E','R')) intSubm    
            from trn_setup_flt opr LEFT OUTER JOIN trn_ffm_msg ffm ON opr.flt_key=ffm.flt_key and opr.flt_date=ffm.flt_date and ffm.ffm_status='P' 
            and substr(opr.flt_key,0,2)=substr(ffm.flt_key,0,2) 
            LEFT OUTER JOIN flt_opr opr1 ON opr.flt_key||#trnFltSfx#=opr1.flt_key and opr.flt_date=opr1.sch_date and opr1.flt_type='A'  
            where  (opr.flt_date &gt;= TO_DATE(#fromDate#,'DDMONYYHH24MI') AND  opr.flt_date &lt;= TO_DATE(#toDate#,'DDMONYYHH24MI')) and opr.flt_type='I'
            and not exists(select null from trn_flt_opr where flt_key=opr.flt_key and sch_date=opr.flt_date)
            <isNotEmpty prepend="and" property="carrierCode">
                  substr(opr.flt_key,0,2)=#carrierCode#
         </isNotEmpty>
         <isNotEmpty prepend="and" property="flightNumber">
                  opr.flt_key=#flightNumber#
         </isNotEmpty>
         
          <isEqual prepend="and" property="superTrnsetup" compareValue="Y">
                  (select count(1) from trn_setup_flt setUpFlt  where setUpFlt.flt_key=opr.flt_key and setUpFlt.flt_date=opr.flt_date and setUpFlt.flt_type=opr.flt_type)>0
         </isEqual>
         <isEqual prepend="and" property="superTrnsetup" compareValue="N">
                  (select count(1) from trn_setup_flt setUpFlt  where setUpFlt.flt_key=opr.flt_key and setUpFlt.flt_date=opr.flt_date and setUpFlt.flt_type=opr.flt_type)=0
         </isEqual>
         <isEqual prepend="and" property="ddtReceived" compareValue="Y">
                  (select count(1) from ddt_msg ddt  where ddt.flt_key=opr.flt_key and ddt.flt_date=opr.flt_date and ddt.ddt_status='P')>0
         </isEqual>
         <isEqual prepend="and" property="ddtReceived" compareValue="N">
                  (select count(1) from ddt_msg ddt  where ddt.flt_key=opr.flt_key and ddt.flt_date=opr.flt_date and ddt.ddt_status='P')=0
         </isEqual>
         <isEqual prepend="and" property="ddtProcessed" compareValue="Y">
                  1=1
         </isEqual>
         <isEqual prepend="and" property="ddtProcessed" compareValue="N">
                  1=1
         </isEqual>
         <isEqual prepend="and" property="intSubm" compareValue="Y">
                  (select count(1) from CST_SUBM SUBM WHERE SUBM.FLT_KEY = OPR1.FLT_KEY AND SUBM.FLT_DATE = OPR.flt_DATE AND SUBM.REC_TYPE = 'INT' AND SUBM.SEND_STATUS NOT IN ('E','R')) >0 
         </isEqual>
         <isEqual prepend="and" property="intSubm" compareValue="N">
                  (select count(1) from CST_SUBM SUBM WHERE SUBM.FLT_KEY = OPR1.FLT_KEY AND SUBM.FLT_DATE = OPR.flt_DATE AND SUBM.REC_TYPE = 'INT' AND SUBM.SEND_STATUS NOT IN ('E','R')) =0 
         </isEqual>
          <isNotEmpty prepend="and" property="handledBy">
            	NVL(PKG_TRN_CTO.FUN_TRN_FLT_MNTR_IMP_CTO(opr.flt_key,to_char( opr.flt_date,'DDMONYY'),to_char(SUBSTR(opr.flt_key,0,2))),'')=#handledBy#
         </isNotEmpty>
		)
	</select>	

	<!-- INSERT INTO TEMP TABLE -->
	<insert id="insertFltMonitoringTemp" parameterClass="cargo.cms.trn.bo.FlightMonitoringBO">
		insert into TRN_FLT_MNTR_TEMP(FLT_KEY,FLT_DATE,FLT_TYPE)
		values(#flightKey#,to_date(#flightDate#,'DDMONYY'),#flightType#)
	</insert>
	
	<parameterMap id="summaryMapFltMntr" class="map" >
	        <parameter property="FLT_TYPE"     		jdbcType="VARCHAR"   javaType="java.lang.String"   mode="IN"/>
           
            <parameter property="TOT_BOTH_CTO" 	   		jdbcType="VARCHAR"   javaType="java.lang.String"   mode="OUT"/>
            <parameter property="TOT_CPCT_CTO" 	  		jdbcType="VARCHAR"   javaType="java.lang.String"   mode="OUT"/>
            <parameter property="TOT_HACTL_CTO"    		jdbcType="VARCHAR"   javaType="java.lang.String"   mode="OUT"/>
            <parameter property="TOT_FLIGHT" 	  		jdbcType="VARCHAR"   javaType="java.lang.String"   mode="OUT"/>
            
    </parameterMap>
      
      <procedure id="SqlCallFltMntrSummaryImp" parameterMap="summaryMapFltMntr">
           {call PKG_TRN_FLT_MONITORING.PRO_TRN_FLT_MNTR_IMP_SUMMARY(?,?,?,?,?)}
     </procedure>
      <procedure id="SqlCallFltMntrSummaryExp" parameterMap="summaryMapFltMntr">
           {call PKG_TRN_FLT_MONITORING.PRO_TRN_FLT_MNTR_EXP_SUMMARY(?,?,?,?,?)}
     </procedure>
	
	<!--EDI INBOUND.......FlightMonitoring End-->
	<select id="checkIfFlightIsValidForUWS" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM FLT_OPR WHERE FLT_KEY=#flightKey# AND SCH_DATE=TO_DATE(#flightDate#,'MM/DD/YYYY') AND FLT_TYPE='D'
	</select>	
	<select id="fetchHContainer" parameterClass="cargo.cms.trn.bo.UWSBO" resultClass="java.lang.String" >	
	select cms.RULE_VALUE as dummyUldKey  from cmsrules cms where cms.RULE_CODE='Dummy_H_Container' 
	</select>
	
	 <insert id="sqlDlsAllotment" parameterClass="cargo.cms.trn.bo.UWSBO" >
			INSERT
			   INTO exp_dls_allotment
			  (DLS_NO,DOC_LINE_NO,SEQ,ALLOT_TYPE,ULD_KEY,CNTR_CODE,SOURCE,EST_WT, DLS_SHC1, DLS_SHC2,DLS_SHC3,DLS_SHC4,DLS_SHC5,DLS_SHC6,MANF_WT,GROSS_WEIGHT,
			  	DLS_SHC7,DLS_SHC8,DLS_SHC9,BB_IND,TYPE,UNLDG_PT,ACTUAL_WT,PCS,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,HACTL_ULD_IND)
			  VALUES(#dlsNo#,EXP_DLS_ALLOTMENT_SEQ.nextval,#sequence#,'*',#uldKey#,#contourCode#,'M',#estWt#,#shc1#,#shc2#,#shc3#,#shc4#,#shc5#,#shc6#,#manifestWt#,#grossWt#,
			  #shc7#,#shc8#,#shc9#,#bulkInd#,#type#,#unLdgPt#,#actualWt#,#pcs#,'UWS',sysdate,'UWS',sysdate,'Y')
		 </insert>
		 <select id="selectDLSAllotment" parameterClass="cargo.cms.trn.bo.UWSBO" resultClass="cargo.cms.trn.bo.UWSBO" >	
	select allot.DLS_NO dlsNo,DOC_LINE_NO docLineNo,SEQ sequence,ULD_KEY uldKey  from exp_dls_allotment allot,exp_dls_hd hd where hd.dls_no=allot.dls_no 
	and hd.flt_key=#flightKey# and  hd.flt_date=TO_DATE(#flightDate#,'MM/DD/YYYY')
	</select>
	<delete id="deleteDls" parameterClass="cargo.cms.trn.bo.UWSBO">
		delete from exp_dls_allotment where DLS_NO=#dlsNo# and DOC_LINE_NO=#docLineNo#
	</delete>
	
	<select id="fetchHatclUldFromDlsAlltForTrn" parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT ULD_KEY FROM EXP_DLS_ALLOTMENT WHERE HACTL_ULD_IND='Y' AND DLS_NO=#dlsNo#
	</select>
	
	<delete id="deleteHactlUldFrmExpFltUldForTrn" parameterClass="cargo.cms.trn.bo.UWSBO">
		DELETE FROM EXP_FLT_ULD WHERE FLT_KEY=#flightKey# AND FLT_DATE=TO_DATE(#flightDate#, 'MM/DD/YYYY') AND ULD_KEY=#uldKey#
	</delete>
	
	<delete id="deleteExpDlsAlltForTrn" parameterClass="java.lang.String">
		DELETE FROM EXP_DLS_ALLOTMENT WHERE HACTL_ULD_IND='Y' AND DLS_NO=#dlsNo#
	</delete>
	
	<parameterMap id="funGetFMTDateMap" class="map">
		<parameter property="RESULT" jdbcType="VARCHAR" javaType="java.lang.String"	mode="OUT"/>
		<parameter property="P_FLT_KEY" jdbcType="VARCHAR" javaType="java.lang.String"	mode="IN"/>
		<parameter property="P_FLT_DATE" jdbcType="VARCHAR" javaType="java.lang.String"	mode="IN"/>
		<parameter property="P_FLT_TYPE" jdbcType="VARCHAR" javaType="java.lang.String"	mode="IN"/>
		<parameter property="P_PORT" jdbcType="VARCHAR" javaType="java.lang.String"	mode="IN"/>
	</parameterMap>	
	<procedure id="getGMTDate" parameterMap="funGetFMTDateMap">
		{? = call FUN_GET_GMT_DATE(?, ?, ?, ?)  }
	</procedure>
	
	<select id="checkUldInUldInventory" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM ULD_INVENTORY WHERE ULD_KEY=#uldKey# AND LOC_CODE IS NOT NULL
   	</select>

	<!--Check-in offload ULD.......:Starts here Santosh D -->
	<select id="checkULDInCPCT" parameterClass="cargo.cms.export.bo.ExpOffloadUld" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM EXP_FLT_ULD 
    	WHERE ULD_KEY = #uldBtNo# 
     	AND FLT_KEY = #fltKey# 
     	AND FLT_DATE = to_date(#fltDate#,'DDMONYY')
	</select>
	
	<select id="checkULDInHACTL" parameterClass="cargo.cms.export.bo.ExpOffloadUld" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM TRN_FFM_OUT_MSG MSG
		JOIN TRN_FFM_OUT_ULD ULD ON
		MSG.TR_NO = ULD.TR_NO
		WHERE ULD.ULD_KEY = #uldBtNo# 
		AND MSG.FLT_KEY = substr(#fltKey#, 0,LENGTH(#fltKey#)-1) 
		AND MSG.FLT_DATE = to_date(#fltDate#,'DDMONYY')
	</select>
	<select id="validateFlightKeyImp"  parameterClass="map" resultClass="java.lang.Integer">
		SELECT COUNT(1) from TRN_FLT_OPR 
			WHERE SCH_DATE BETWEEN TO_DATE(#fltDtFrom#,'DDMONYYHH24MI') AND TO_DATE(#fltDtTo# ,'DDMONYYHH24MI') 
			and FLT_KEY= #fltKey# and FLT_TYPE = 'A' 
	</select>
	<select id="validateFlightKeyExp"  parameterClass="map" resultClass="java.lang.Integer">
		SELECT COUNT(1) from TRN_FLT_OPR 
			WHERE SCH_DATE BETWEEN TO_DATE(#fltDtFrom#,'DDMONYYHH24MI') AND TO_DATE(#fltDtTo# ,'DDMONYYHH24MI') 
			and FLT_KEY= #fltKey# and FLT_TYPE = 'D' 
	</select>
	<update id="updateUWSInd" parameterClass="java.util.HashMap">
		UPDATE 
			trn_flt_opr_events 
		SET 
			uws_rcvd='Y'
		WHERE 
			FLT_KEY || (SELECT TRN_FLT_SUFFIX FROM SYS_PARAM)=#FLT_KEY# AND sch_DATE=TO_DATE(#FLT_DATE#,'DDMONYY')  and flt_type='D'
		
	</update>
	<!--Check-in offload ULD.......:Ends here Santosh D -->
	
	
	<!--Flt Custom out.......:Starts here Santosh D -->
	
	<select id="chkFFMReceivedForTerminal"  parameterClass="map" resultClass="java.lang.Integer">
		SELECT COUNT(1) 
		FROM        
		TRN_FFM_OUT_MSG A
		WHERE
      	A.FLT_KEY=#p_flt_key#
      	AND A.FLT_DATE=TO_DATE(#p_flt_date#,'DDMONYY')
      	AND A.FFM_STATUS = 'P'     
	</select>	
	
	<select id="checkForNilCargoHACTLFFM"  parameterClass="map" resultClass="java.lang.String">		
		SELECT 
			DECODE(COUNT(1), 0, 'Y', 'N') AS TMPNILIND 
		FROM 
			TRN_FFM_OUT_MSG INNER JOIN TRN_FFM_OUT_ULD
			ON TRN_FFM_OUT_MSG.TR_NO=TRN_FFM_OUT_ULD.TR_NO 
			AND TRN_FFM_OUT_ULD.BRD_POINT=#p_flt_org#  
			AND TRN_FFM_OUT_ULD.OFF_POINT=#p_flt_dest# 
		WHERE 
			TRN_FFM_OUT_MSG.FLT_KEY=#p_flt_key# 
			AND TRN_FFM_OUT_MSG.FLT_DATE=TO_DATE(#p_flt_date#,'DDMONYY') 
			AND TRN_FFM_OUT_MSG.FFM_STATUS='P'
			AND TRN_FFM_OUT_ULD.NIL_IND='N'
	</select>	
	
	<select id="PkgPmanManifestCursor1Copy" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	<![CDATA[
		SELECT AWB_NO, AWB_DATE, SUM(PCS) PCS, SUM(WT) WT, SPL_CODE1, SPL_CODE2, MAN_RMK, CONTENT, ORIG, DEST, CAR_PCS, CAR_WT  FROM (
		  SELECT DISTINCT T1.AWB_NO AWB_NO       ,
		  TO_CHAR(T1.AWB_DATE,'DDMONYY') AWB_DATE ,
		  T1.ASSIGNED_BULK_PCS PCS,
		  T1.ASSIGNED_BULK_WT WT  ,
		  T2.SPL_CODE1
		  || T2.SPL_CODE2
		  || T2.SPL_CODE3
		  || T2.SPL_CODE4 SPL_CODE1,
		  T2.SPL_CODE5
		  || T2.SPL_CODE6
		  || T2.SPL_CODE7
		  || T2.SPL_CODE8 SPL_CODE2,
		  T1.MAN_RMK MAN_RMK       ,
		  T2.CONTENT CONTENT              ,
		  T2.ORIGIN ORIG           ,
		  T2.DEST DEST                   ,
		  T2.PCS CAR_PCS           ,
		  T2.WT CAR_WT
		   FROM EXP_PMANIFEST_AWB T1
		LEFT JOIN EXP_CAR T2
		     ON T1.AWB_NO = T2.AWB_NO
		AND T1.AWB_DATE   = T2.AWB_DATE
		LEFT JOIN EXP_PMANIFEST_ULD_AWB T4
		     ON T1.AWB_NO = T4.AWB_NO
		AND T1.AWB_DATE   = T4.AWB_DATE
		AND T1.FLT_KEY    = T4.FLT_KEY
		AND T1.FLT_DATE   = T4.FLT_DATE
		AND T1.UNLDG_PT   = T4.UNLDG_PT
		LEFT JOIN
		  (SELECT T7.AWB_NO                 ,
		    T7.UNLDG_PT                     ,
		    T7.FLT_DATE                     ,
		    T7.FLT_KEY                      ,
		    SUM(T7.ASSIGNED_PCS) ASSIGNEDPCS,
		    SUM(T7.ASSIGNED_WT) ASSIGNEDWT  ,
		    SUM(T7.ASSIGNED_PCS) BUPPCS     ,
		    SUM (T7.ASSIGNED_WT) BUPWT
		     FROM EXP_PMANIFEST_ULD_AWB T7,
		    EXP_PMANIFEST_ULD ULD         ,
		    MAST_ULD_TYPE M1              ,
		    EXP_FLT_ULD FLTULD
		    WHERE ULD.FLT_KEY           = T7.FLT_KEY
		  AND ULD.FLT_DATE              = T7.FLT_DATE
		  AND ULD.UNLDG_PT              = T7.UNLDG_PT
		  AND ULD.ULD_BT_NO             = T7.ULD_BT_NO
		  AND T7.FLT_KEY                = FLTULD.FLT_KEY
		  AND T7.FLT_DATE               = FLTULD.FLT_DATE
		  AND T7.UNLDG_PT               = FLTULD.UNLDG_PT
		  AND T7.ULD_BT_NO              = FLTULD.ULD_KEY
		  AND SUBSTR(ULD.ULD_BT_NO,0,3) = CODE
		  AND (M1.H_CONT_IND            = 'Y'
		  OR M1.BT_IND                  = 'Y'
		  OR ULD.BB_IND                 = 'Y'
		  OR FLTULD.BB_IND              = 'Y' )
		 GROUP BY T7.AWB_NO,
		    T7.UNLDG_PT    ,
		    T7.FLT_DATE    ,
		    T7.FLT_KEY     ,
		    T7.PPK_TYPE
		  )A
		     ON A.AWB_NO   = T4.AWB_NO
		AND A.FLT_KEY      = T4.FLT_KEY
		AND A.FLT_DATE     = T4.FLT_DATE
		AND A.UNLDG_PT     = T4.UNLDG_PT
		  WHERE T1.FLT_KEY = #P_FLT_KEY#
		AND T1.FLT_DATE    = TO_DATE(#V_FLT_DATE#,'DDMONYY')
		AND T1.UNLDG_PT    = #C_UNLDG_PT#
		AND FUN_VALIDATE_AWB(T1.AWB_NO,(select carr_code from awb where awb_no = T1.AWB_NO and awb_date = T1.AWB_DATE ),'A') not in ('N','C')
		AND NOT EXISTS
		  (SELECT NULL
		     FROM EXP_CAR EXP
		    WHERE EXP.AWB_NO  = T1.AWB_NO
		  AND EXP.AWB_DATE    = T1.AWB_DATE
		  AND EXP.ACCEPT_MODE = 'LOB'
		  )
		AND NOT EXISTS
		  (SELECT NULL
		     FROM EXP_PMANIFEST_ULD ULD ,
		    MAST_ULD_TYPE M1            ,
		    EXP_FLT_ULD FLTULD
		    WHERE ULD.FLT_KEY           =T4.FLT_KEY
		  AND ULD.FLT_DATE              = T4.FLT_DATE
		  AND ULD.UNLDG_PT              = T4.UNLDG_PT
		  AND ULD.ULD_BT_NO             =T4.ULD_BT_NO
		  AND T4.FLT_KEY                = FLTULD.FLT_KEY
		  AND T4.FLT_DATE               = FLTULD.FLT_DATE
		  AND T4.UNLDG_PT               = FLTULD.UNLDG_PT
		  AND T4.ULD_BT_NO              = FLTULD.ULD_KEY
		  AND SUBSTR(ULD.ULD_BT_NO,0,3) = CODE
		  AND M1.H_CONT_IND             = 'N'
		  AND M1.BT_IND                 = 'N'
		  AND ULD.BB_IND                = 'N'
		  AND FLTULD.BB_IND             = 'N'
		  AND T1.UNASSIGNED_BULK_PCS    =0
		  )
      )
      GROUP BY AWB_NO, AWB_DATE, PCS, WT, SPL_CODE1, SPL_CODE2, MAN_RMK, CONTENT, ORIG, DEST, CAR_PCS, CAR_WT
     ]]>
   	</select>
	
	<select id="PkgPmanManifestCursor10" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	SELECT DISTINCT C.AWB_NO AWB_NO, TO_CHAR(C.AWB_DATE,'DDMONYY') AWB_DATE,
		  C.MAN_PCS PCS,
		  C.MAN_WT WT  ,
		  C.SPL_CODE1
		  || C.SPL_CODE2
		  || C.SPL_CODE3
		  || C.SPL_CODE4 SPL_CODE1,
		  C.SPL_CODE5
		  || C.SPL_CODE6
		  || C.SPL_CODE7
		  || C.SPL_CODE8 SPL_CODE2,
		  C.RMK MAN_RMK       ,
		  C.CONTENT CONTENT              ,
		  C.ORG ORIG           ,
		  C.DEST DEST                   ,
		  C.PCS CAR_PCS           ,
		  C.WT CAR_WT, 
		  C.CUST_ORG_CODE CUS_ORI_CODE, C.ISO_CTRY_CODE1 ISO_CTRY_CODE1, C.INFO_IDENTIFIER1 INFO_IDENTIFIER1, 
		  C.CUSTOMS_INFO_IDENTIFIERI CUSTOMS_INFO_IDENTIFIERI, C.SUPP_CUSTOMS_INFO1 SUPP_CUSTOMS_INFO1, 
		  C.ISO_CTRY_CODE2 ISO_CTRY_CODE2, C.INFO_IDENTIFIER2 INFO_IDENTIFIER2, C.CUSTOMS_INFO_IDENTIFIER2 CUSTOMS_INFO_IDENTIFIER2, 
		  C.SUPP_CUSTOMS_INFO2 SUPP_CUSTOMS_INFO2, C.CNTG_DEST1 CNTG_DEST1, C.CNTG_FLT_CARR1 CNTG_FLT_CARR1, C.CNTG_FLT_NO1 CNTG_FLT_NO1, 
		  C.CNTG_FLT_DATE1 CNTG_FLT_DATE1, C.CNTG_DEST2 CNTG_DEST2, C.CNTG_FLT_CARR2 CNTG_FLT_CARR2, C.CNTG_FLT_NO2 CNTG_FLT_NO2, 
		  C.CNTG_FLT_DATE2 CNTG_FLT_DATE2, C.CNTG_DEST3 CNTG_DEST3, C.CNTG_FLT_CARR3 CNTG_FLT_CARR3, C.CNTG_FLT_NO3 CNTG_FLT_NO3, 
      	  C.CNTG_FLT_DATE3 CNTG_FLT_DATE3, C.MOV_PRI_CODE MOV_PRI_CODE, C.DES_SHP_OSI_1 DES_SHP_OSI_1, C.DES_SHP_OSI_2 DES_SHP_OSI_2, 
      	  C.VOL_AMT VOL_AMT, C.VOL_UNIT VOL_UNIT, 
		  C.DOC_LINE_NO P_DOC_LINE_NO, 
		  A.TR_NO TR_NO, 
		  B.ULD_KEY ULD_KEY, 
		  B.ULD_NO V_ULD_NO, 
		  B.ULD_CARR V_ULD_CARR, 
		  B.ULD_TYPE V_ULD_TYPE, 
		  B.ULD_LOD_IND ULD_LOD_IND, B.ULD_VOL_AVA ULD_VOL_AVA, B.DIS_ODR DIS_ODR, 
		  B.ULD_RMK ULD_RMK, B.CNTG_DEST1 ONWARD_DEST1, B.CNTG_FLT_CARR1 ONWARD_CAR_COD1, 
		  B.CNTG_FLT_NO1 ONWARD_FLT_NO1, B.CNTG_FLT_DATE1 ONVARD_FLT_DAT1, B.CNTG_DEST2 ONWARD_DEST2, 
		  B.CNTG_FLT_CARR2 ONWARD_CAR_COD2, B.CNTG_FLT_NO2 ONWARD_FLT_NO2, B.CNTG_FLT_DATE2 ONVARD_FLT_DAT2, 
		  B.CNTG_DEST3 ONWARD_DEST3, B.CNTG_FLT_CARR3 ONWARD_CAR_COD3, B.CNTG_FLT_NO3 ONWARD_FLT_NO3, 
		  B.CNTG_FLT_DATE3 ONVARD_FLT_DAT3, B.VOL_AVAIL_CODE VOL_AVAIL_CODE, C.SHMPT_CODE P_CATEGORY 
    FROM        
		TRN_FFM_OUT_MSG A, TRN_FFM_OUT_ULD B, TRN_FFM_OUT_SHP C 
	WHERE 
	  A.TR_NO=B.TR_NO 
      AND B.TR_NO=C.TR_NO 
      AND B.DOC_LINE_NO=C.UDOC_LINE_NO 
      AND A.FLT_KEY=#P_FLT_KEY#
      AND A.FLT_DATE=TO_DATE(#V_FLT_DATE#,'DDMONYY') 	 
      AND B.OFF_POINT=#C_UNLDG_PT#
      AND (A.SI_TYPE='S' OR (A.SI_TYPE = 'I' AND A.FFM_STATUS='P'))
   	</select>
   	
   	
   	<select id="PkgPmanManifestCursor11" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
   	 	SELECT T1.ULD_KEY ULD_BT_NO,
		T1.ULD_RMK MAN_RMK          ,
		'' ULD_KEY                  ,
		'' PPK_TYPE        ,
		T1.OFF_POINT C_UNLDG_PT      ,
		FLTULD.BB_IND AS BB_IND
		FROM TRN_FFM_OUT_ULD T1
		LEFT JOIN TRN_FFM_OUT_SHP_ULD T2
		ON T1.FLT_KEY = T2.FLT_KEY
		AND T1.FLT_DATE    = T2.FLT_DATE
		AND T1.ULD_KEY   = T2.ULD_KEY
		AND T1.OFF_POINT    = T2.OFF_POINT
		LEFT JOIN MAST_ULD_TYPE M1
		ON SUBSTR(T1.ULD_KEY,0,3) = M1.CODE
		LEFT JOIN EXP_FLT_ULD FLTULD
		ON T1.FLT_KEY = FLTULD.FLT_KEY
		AND T1.FLT_DATE    = FLTULD.FLT_DATE
		AND T1.ULD_KEY   = FLTULD.ULD_KEY
		AND T1.OFF_POINT    = FLTULD.UNLDG_PT
		AND FLTULD.BB_IND  = 'N'
		WHERE T1.FLT_KEY = #P_FLT_KEY#
		AND T1.FLT_DATE    = TO_DATE(#V_FLT_DATE#,'DDMONYY')
		<!-- AND T1.OFF_POINT    = #C_UNLDG_PT#	-->
		AND (M1.H_CONT_IND  = 'N'
		AND M1.BT_IND      = 'N')
    	<!--	AND T1.SHP_TYPE    = 'LOCAL'-->
		GROUP BY T1.ULD_KEY,
		<!--T1.GROUP_NO        ,-->
		T1.ULD_RMK         ,		 
		T1.OFF_POINT        ,
		FLTULD.BB_IND
	</select>
   	
   	<select id="PkgPmanManifestCursor12" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	<![CDATA[	
	 SELECT T3.AWB_NO P_AWB_NO ,
		  T3.AWB_DATE P_AWB_DATE   ,
		  T3.MAN_PCS P_MAN_PCS,
		  T3.MAN_WT P_MAN_WT  ,
		  T2.CONTENT P_CONTENT     ,
		  T3.SPL_CODE1
		  || T3.SPL_CODE2
		  || T3.SPL_CODE3
		  || T3.SPL_CODE4 SPL_CODE1,
		  T3.SPL_CODE5
		  || T3.SPL_CODE6
		  || T3.SPL_CODE7
		  || T3.SPL_CODE8 SPL_CODE2,
		  T2.ORIGIN P_ORIGIN       ,
		  T2.DEST P_DEST           ,
		  T2.PCS P_AWB_PCS         ,
		  T2.WT P_AWB_WT           ,
		  T1.FLT_KEY P_FLT_KEY     ,
		  TO_CHAR(T1.FLT_DATE, 'DDMONYY') P_FLT_DATE
		  FROM TRN_FFM_OUT_SHP_ULD T1
       	  JOIN TRN_FFM_OUT_SHP T3
          ON  T1.TR_NO                  = T3.TR_NO
          AND T1.DOC_LINE_NO            = T3.DOC_LINE_NO       
          LEFT JOIN EXP_CAR T2
          ON T3.AWB_NO = T2.AWB_NO
		  AND T3.AWB_DATE   = T2.AWB_DATE
		  LEFT JOIN AWB T4
          ON T3.AWB_NO = T4.AWB_NO
		  AND T3.AWB_DATE   = T4.AWB_DATE
		  LEFT JOIN TRN_FFM_OUT_SHP T5
        ON T3.AWB_NO = T5.AWB_NO
		AND T3.AWB_DATE   = T5.AWB_DATE
		AND T1.FLT_KEY    = T5.FLT_KEY
		AND T1.FLT_DATE   = T5.FLT_DATE
		JOIN TRN_FFM_OUT_ULD T6
        ON T6.FLT_KEY = T1.FLT_KEY
		AND T6.FLT_DATE    = T1.FLT_DATE
		AND T6.OFF_POINT    = T1.OFF_POINT
		AND T6.ULD_KEY   = T1.ULD_KEY
        WHERE T1.FLT_KEY = #P_FLT_KEY#
		AND T1.FLT_DATE    = TO_DATE(#V_FLT_DATE#,'DDMONYY')		
		AND T1.ULD_KEY   = #C_ULD_BT_NO#		 
     ]]>
     
     <!--   WHERE T1.FLT_KEY = #P_FLT_KEY#
		AND T1.FLT_DATE    = TO_DATE(#V_FLT_DATE#,'DDMONYY')
		AND T1.OFF_POINT     = #C_UNLDG_PT#
		AND T1.ULD_KEY   = #C_ULD_BT_NO#	 -->
   	</select>
   	
   	
   	<select id="PkgPmanManifestCursor13" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
   	 SELECT 
 	 'HKG' ULDNG_PT, 
 	 #P_FLT_KEY# P_FLT_KEY, 
     #V_FLT_DATE# V_FLT_DATE,
 	 AWB_NO AWB_NO, 
 	 MAX(C.AWB_TOTAL_PCS) AWB_PCS,
     SUM(C.SHP_PCS) MAN_PCS, 
     SUM(C.SHP_WGT) MAN_WT
     FROM TRN_FFM_OUT_MSG A, EXP_MANIFEST_ULD B, EXP_MANIFEST_DTL C
     WHERE A.TR_NO = B.TR_NO
     AND B.TR_NO = C.TR_NO
     AND B.DOC_LINE_NO = C.UDOC_LINE_NO
     AND A.FLT_KEY = #P_FLT_KEY#
     AND A.FLT_DATE = TO_DATE(#V_FLT_DATE#,'DDMONYY')
     GROUP BY 	
	 AWB_NO	
   	</select>
   	
   	<select id="PkgPmanManifestCursor14" parameterClass="java.lang.String" resultClass="java.util.HashMap">
   		SELECT ULD_TYPE V_ULD_TYPE, ULD_NO V_ULD_NO, ULD_CARR V_ULD_CARR, ULD_KEY ULD_KEY, DOC_LINE_NO P_UDOC_LINE_NO FROM TRN_FFM_OUT_ULD WHERE TR_NO=#trNo#
   	</select>
   	
   	<select id="PkgPmanManifestCursor15" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
   		SELECT LENGTH, WIDTH, HEIGHT, PCS, WT, WT_UNIT, DMN_UNT, DMN_WGT_LBS FROM TRN_FFM_OUT_SHP_DMN WHERE TR_NO=#TR_NO# AND SDOC_LINE_NO=#P_DOC_LINE_NO#
   	</select>
   	
   	<update id="fltCstmOutClsAwbHACTLFFM" parameterClass="cargo.cms.export.bo.FlightCustomBO">
	<![CDATA[
		update awb a 
		set a.awb_closed_yn='Y'		
		where 
	  	(a.awb_no, a.awb_date) 
	  	in (select awb_no, awb_date from trn_ffm_out_shp shp 
	    join trn_ffm_out_msg msg 
	    on shp.tr_no = msg.tr_no
		where msg.flt_key = #fltKey# 
		and msg.flt_date = #fltDate#)
	    ]]>
	</update>
   	
   	<update id="updateFFMStatusToTRNFFMOUTMSG" parameterClass="java.util.HashMap">
		UPDATE 
			TRN_FFM_OUT_MSG 
		SET 
			FFM_SENT='Y',
			LM_DATE = SYSDATE,
			LM_USER_ID = #USER#
		WHERE 
			FLT_KEY = #P_FLT_KEY#
			AND FLT_DATE = TO_DATE(#P_FLT_DATE#,'DDMONYY')		
			AND FFM_STATUS = 'P'
	</update>

<select id="sqlGetFltOrgDest" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT 
			a.ORIG fltOrig,
			a.DEST fltDest
		from flt_opr a, flt_opr_events b
		WHERE a.tr_no = b.tr_no 
			AND b.flt_type=#p_flt_type#
			AND a.flt_key = #p_flt_key#
			AND a.sch_date = #p_flt_date#
	</select>
	
	<select id="fetchUldExistsInManfUld" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT DOC_LINE_NO FROM EXP_MANIFEST_ULD WHERE TR_NO=#trNo# AND ULD_KEY=#uldKey#
	</select>
	
	<!--Flt Custom out.......:Ends here Santosh D -->


<!--EDI INBOUND.......DDT queries Start-->
		<select id="validateFlightCpct" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM FLT_OPR WHERE FLT_KEY=#fltKey#||(SELECT TRN_FLT_SUFFIX FROM SYS_PARAM) AND SCH_DATE=TO_DATE(#fltDate#,'MM/DD/YYYY') AND FLT_TYPE='A'
	</select>
	<select id="getDDTMsgCpct" parameterClass="cargo.cms.edi.ei.bo.DDTMessageBO" resultClass="cargo.cms.edi.ei.bo.DDTMessageBO" >
		   select ddt_msg.TR_NO as trNo, ddt_msg.MSG_SEQ_NUM as msgSeqNo,DDT_STATUS as ddtStatus from ddt_msg  where 		
    ddt_msg.FLT_KEY=#flightKey# ||(SELECT TRN_FLT_SUFFIX FROM SYS_PARAM) and ddt_msg.FLT_DATE=to_date(#flightDate#,'MM/DD/YYYY') and ddt_msg.DDT_STATUS='CONT'  
	</select>
	<select id="isDDTMessageExistsCpct" parameterClass="cargo.cms.edi.ei.bo.DDTMessageBO" resultClass="cargo.cms.edi.ei.bo.DDTMessageBO" >
	<![CDATA[
	    select TR_NO trNo,TRANSIT_MAIL_AWB_NO transitMailAwbNo from DDT_MSG where FLT_KEY = #flightKey#||(SELECT TRN_FLT_SUFFIX FROM SYS_PARAM) and FLT_DATE = to_date(#flightDate#,'MM/DD/YYYY') and DDT_STATUS = 'P'
	]]>
	</select>
	<select id="transitMailAWBCpct" parameterClass="cargo.cms.edi.ei.bo.DDTMessageBO" resultClass="cargo.cms.edi.ei.bo.DDTMessageBO" >
	<![CDATA[
	    select TRANSIT_MAIL_AWB_NO transitMailAwbNo  from DDT_MSG where FLT_KEY = #flightKey#||(SELECT TRN_FLT_SUFFIX FROM SYS_PARAM) and FLT_DATE = to_date(#flightDate#,'MM/DD/YYYY') and DDT_STATUS in('P','CONT')
	]]>
	</select>
	<select id="isDDTMessageFinalCpct" parameterClass="java.util.HashMap" resultClass="java.lang.String" >
	<![CDATA[
	    select FINAL_VER_IND finalVersion  from DDT_MSG where FLT_KEY = #flightKey#||(SELECT TRN_FLT_SUFFIX FROM SYS_PARAM) and FLT_DATE = to_date(#flightDate#,'MM/DD/YYYY') and DDT_STATUS = 'P' and rownum=1
	]]>
	</select>
	<select id="isDDTFinalInFltOprCpct" parameterClass="java.util.HashMap" resultClass="java.lang.String" >
	<![CDATA[
	    select decode(count(1),0,'N','Y') from flt_opr opr,flt_opr_events event where opr.flt_key=#flightKey#||(SELECT TRN_FLT_SUFFIX FROM SYS_PARAM) and opr.sch_date=to_date(#flightDate#,'MM/DD/YYYY') and opr.tr_no=event.tr_no and event.ddt_finalise_date is not null
	    and opr.flt_type='A'
	]]>
	</select>
	<insert id="insert_into_DDT_MSGCpct" parameterClass="cargo.cms.edi.ei.bo.DDTMessageBO" >
	insert into DDT_MSG (TR_NO,FLT_KEY,FLT_DATE,MSG_VER,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,BASELINE_ETA,DDT_STATUS,FINAL_VER_IND,MSG_YN,MSG_SEQ_NUM, TR_TYPE,NIL_DDT,BRD_POINT, COPY_NO,  SI_TYPE, TOTAL_COUNT) 
	values (#trNo#,#flightKey#||(SELECT TRN_FLT_SUFFIX FROM SYS_PARAM),to_date(#flightDate#,'MM/DD/YYYY'),#versionNumber#,'SYSUSER' , SYSDATE,'SYSUSER' , SYSDATE, to_date(#baselineETA#,'DDMONYY HH24:MI') ,nvl(#ddtStatus#,'P'),nvl(#finalVersion#,'N'),'Y',#msgSeqNo#, 'MEDDT',#nilDDT#,#loadingPoint#,#copyNo#,'I',1)
	</insert>
	<update id="updateDDTMessageSeqCpct" parameterClass="cargo.cms.edi.ei.bo.DDTMessageBO">
	update DDT_MSG set MSG_SEQ_NUM =#msgSeqNo#,DDT_STATUS=#ddtStatus#,MSG_YN='Y' where TR_NO = #trNo#   
	</update>
	<update id="updateDDTMsgCpct" parameterClass="cargo.cms.edi.ei.bo.DDTMessageBO" >
update DDT_MSG set 
      MSG_VER = nvl(#versionNumber#,MSG_VER) , 
      BASELINE_ETA = to_date(#baselineETA#,'DDMONYY HH24:MI'), 
      DDT_STATUS = nvl(#ddtStatus#,DDT_STATUS),
      FINAL_VER_IND =  nvl(#finalVersion#,FINAL_VER_IND),
      MSG_SEQ_NUM =#msgSeqNo#,
      MSG_YN='Y',
      NIL_DDT=#nilDDT#,
      LM_USER_ID = 'SYSUSER',
      LM_DATE = sysdate 
      where TR_NO = #trNo# 
</update>
<update id="updateTransitMailAwbNoCpct" parameterClass="cargo.cms.edi.ei.bo.DDTMessageBO" >
update DDT_MSG set 
      TRANSIT_MAIL_AWB_NO = #transitMailAwbNo#      
      where TR_NO = #trNo# 
</update>
	<select id="selectAWBPrefixCpct" parameterClass="java.lang.String"  resultClass="java.lang.String">
		SELECT CODE  FROM MAST_AWB_PREFIX WHERE CARR_CODE = #carr#
	</select>
<select id="DDT_ULD_TR_NO_DOCLINENOCpct" parameterClass="java.util.HashMap" resultClass="java.lang.String" >
<![CDATA[
       select nvl(maxUDoclineNo,0) from (select max(to_number(DOC_LINE_NO)) maxUDoclineNo from DDT_ULD where TR_NO = #ddtTrNo#) 
]]>
</select>
<select id="get_DDT_ULD_DOCLINENO_FOR_ULDCpct" parameterClass="java.util.HashMap" resultClass="java.lang.String" >
<![CDATA[
    select DOC_LINE_NO  from DDT_ULD where TR_NO = #ddtTrNo# and nvl(ULD_KEY,'XX') = nvl(#uldKey#,'XX')
]]>
</select>
<select id="get_DDT_ULD_DATACpct" parameterClass="java.lang.String" resultClass="cargo.cms.edi.ei.bo.DDTULDBO" >
<![CDATA[
    select TR_NO ddtTrNo,DOC_LINE_NO ddtUdocLineNo,ULD_KEY uldKey,CNTG_FLT_KEY||(SELECT TRN_FLT_SUFFIX FROM SYS_PARAM) ctgFltKey,to_char(CNTG_FLT_DATE,'MM/DD/YYYY') ctgFltDate,UNLDG_PT unLdgPt,TRF_TYPE trfType,BRK_BULK brkBulk from DDT_ULD
where TR_NO=#trNo#
]]>
</select>
<insert id="insertDDT_ULDCpct" parameterClass="cargo.cms.edi.ei.bo.DDTULDBO" >
	Insert into DDT_ULD (TR_NO,DOC_LINE_NO,ULD_KEY,
	<isNotEmpty property="ctgFltKey"> 	
		CNTG_FLT_KEY,
	</isNotEmpty>
	<isNotEmpty property="ctgFltDate"> 	
		CNTG_FLT_DATE,
	</isNotEmpty>
	UNLDG_PT,TRF_TYPE,BRK_BULK,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,BRD_POINT) 
	values (#ddtTrNo#,#ddtUdocLineNo#,#uldKey#,
	<isNotEmpty property="ctgFltKey"> 	
		#ctgFltKey#||(SELECT TRN_FLT_SUFFIX FROM SYS_PARAM),
	</isNotEmpty>
	<isNotEmpty property="ctgFltDate"> 	
		to_date(#ctgFltDate#,'MM/DD/YYYY'),
	</isNotEmpty>	
	#unLdgPt#,#trfType#,#brkBulk#,'SYSUSER',sysdate,'SYSUSER',sysdate,#loadingPoint#)
</insert>

<update id="updateDDT_ULDCpct" parameterClass="cargo.cms.edi.ei.bo.DDTULDBO" >
update DDT_ULD set 
	  <isNotEmpty property="ctgFltKey"> 	
CNTG_FLT_KEY = #ctgFltKey#||(SELECT TRN_FLT_SUFFIX FROM SYS_PARAM) , 
	  </isNotEmpty>
	  <isNotEmpty property="ctgFltDate"> 	
      CNTG_FLT_DATE = to_date(#ctgFltDate#,'MM/DD/YYYY'), 
      </isNotEmpty>
      UNLDG_PT = #unLdgPt#,
      TRF_TYPE = #trfType#,
      BRK_BULK =  #brkBulk#,     
      LM_USER_ID = 'SYSUSER',
      LM_DATE = sysdate 
      where TR_NO = #ddtTrNo# and DOC_LINE_NO = #ddtUdocLineNo#
</update>
<update id="updateDDT_ULD_NoBreakCpct" parameterClass="cargo.cms.edi.ei.bo.DDTULDBO" >
update DDT_ULD set 
NO_BREAK = #noBreak#       
      where TR_NO = #ddtTrNo# and DOC_LINE_NO = #ddtUdocLineNo#
</update>
<select id="ddt_Shp_MaxDocLineNoCpct" parameterClass="java.util.HashMap" resultClass="java.lang.String" >
<![CDATA[
    select nvl(maxSDoclineNo,0) from (select max(to_number(DOC_LINE_NO)) maxSDoclineNo from DDT_SHP where TR_NO = #ddtTrNo#) 
]]>
</select>
<select id="ddt_Shp_SDoclineNoCpct" parameterClass="java.util.HashMap" resultClass="java.lang.String" >
<![CDATA[
    select DOC_LINE_NO from DDT_SHP where TR_NO = #ddtTrNo# and UDOC_LINE_NO = #ddtUdocLineNo# and awb_no = #awbNo# and AWB_DATE = to_date(#awbDate#,'DDMONYY')
]]>
</select>
<select id="ddt_Shp_DataCpct" parameterClass="java.lang.String" resultClass="cargo.cms.edi.ei.bo.DDTShipmentBO" >
<![CDATA[
    select TR_NO ddtTrNo,DOC_LINE_NO ddtSdocLineNo,UDOC_LINE_NO ddtUdocLineNo,AWB_NO awbNo,to_char(AWB_DATE,'DDMONYY') awbDate from DDT_SHP where TR_NO=#trNo#
]]>
</select>

<insert id="insertDDTSHPCpct" parameterClass="cargo.cms.edi.ei.bo.DDTShipmentBO" >
Insert into DDT_SHP (TR_NO,DOC_LINE_NO,UDOC_LINE_NO,AWB_NO,AWB_DATE,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE, TR_TYPE, SHP_TYPE) 
values (#ddtTrNo#,#ddtSdocLineNo#,#ddtUdocLineNo#,#awbNo#,to_date(#awbDate#,'DDMONYY'),'SYSUSER',sysdate,'SYSUSER',sysdate, 'MEDDT', #shpType#)
</insert>

<update id="updateDDTSHPCpct" parameterClass="cargo.cms.edi.ei.bo.DDTShipmentBO" >
update DDT_SHP set      
      LM_USER_ID = 'SYSUSER',
      LM_DATE = sysdate 
      where TR_NO = #ddtTrNo# and DOC_LINE_NO = #ddtSdocLineNo# and UDOC_LINE_NO = #ddtUdocLineNo#
</update>

<select id="DDT_SHP_TRF_DTL_maxDocLineNoCpct" parameterClass="java.util.HashMap" resultClass="java.lang.String" >
<![CDATA[
	select nvl(maxDoclineNo,0) from (select nvl(max(DOC_LINE_NO),'0') maxDoclineNo  from DDT_SHP_TRF_DTL where TR_NO = #ddtTrNo#)
]]>
</select>
<select id="DDT_SHP_TRF_DTL_docLineNoCpct" parameterClass="java.util.HashMap" resultClass="java.lang.String" >
<![CDATA[
   select DOC_LINE_NO from DDT_SHP_TRF_DTL where TR_NO = #ddtTrNo# and SDOC_LINE_NO = #ddtSdocLineNo# and CNTG_FLT_KEY = #cntgFltKey#||(SELECT TRN_FLT_SUFFIX FROM SYS_PARAM) and CNTG_FLT_DATE = to_date(#cntgFltDate#,'MM/DD/YYYY')											  
]]>
</select>
<select id="DDT_SHP_TRF_DTL_DATACpct" parameterClass="java.lang.String" resultClass="cargo.cms.edi.ei.bo.DDTShipmentBO" >
<![CDATA[
   select TR_NO ddtTrNo,
	DOC_LINE_NO ddtDocLineNo,
	SDOC_LINE_NO ddtSdocLineNo,
	CNTG_FLT_KEY||(SELECT TRN_FLT_SUFFIX FROM SYS_PARAM) ctgFltKey,
	to_char(CNTG_FLT_DATE,'MM/DD/YYYY') ctgFltDate,
	UNLDG_PT unLdgPt,
	TRF_TYPE trfType,
	BRK_BULK brkBulk,
	TRF_PC trfPieces,
	TRF_WT trfWeight,
	QT_BU qtBu,	
	ACTON_CODE_2 actionCode2,
	ACTON_CODE_1 actionCode1 from DDT_SHP_TRF_DTL where TR_NO=#trNo#											  
]]>
</select>
<update id="updateDDT_SHP_TRF_DTLCpct" parameterClass="cargo.cms.edi.ei.bo.DDTShipmentBO" >
	update DDT_SHP_TRF_DTL set 
      CNTG_FLT_KEY = #ctgFltKey#||(SELECT TRN_FLT_SUFFIX FROM SYS_PARAM) , 
      CNTG_FLT_DATE = to_date(#ctgFltDate#,'MM/DD/YYYY'), 
      UNLDG_PT = #unLdgPt#, 
      TRF_TYPE = #trfType#,
      TRF_PC = #trfPieces#,
      TRF_WT = #trfWeight#,
      BRK_BULK =  #brkBulk#,
      QT_BU =  #qtBu#,
      BASELINE_ETD = to_date(#baselineEtd#,'DDMONYY HH24:MI'),
      LM_USER_ID = 'SYSUSER',
      LM_DATE = sysdate 
      where TR_NO = #ddtTrNo# and DOC_LINE_NO = #ddtDocLineNo# and SDOC_LINE_NO = #ddtSdocLineNo#
</update>
<insert id="insertDDT_SHP_TRF_DTLCpct" parameterClass="cargo.cms.edi.ei.bo.DDTShipmentBO" >
	Insert into DDT_SHP_TRF_DTL 
	(TR_NO,
	DOC_LINE_NO,
	SDOC_LINE_NO,
	CNTG_FLT_KEY,
	CNTG_FLT_DATE,
	UNLDG_PT,
	TRF_TYPE,
	BRK_BULK,
	TRF_PC,
	TRF_WT,
	QT_BU,
	CR_USER_ID,
	CR_DATE,
	LM_USER_ID,
	LM_DATE,
	BASELINE_ETD,
	ACTON_CODE_2,
	ACTON_CODE_1) 
	values (#ddtTrNo#,
	#ddtDocLineNo#,
	#ddtSdocLineNo#,
	#ctgFltKey#||(SELECT TRN_FLT_SUFFIX FROM SYS_PARAM),
	to_date(#ctgFltDate#,'MM/DD/YYYY'),
	#unLdgPt#,
	#trfType#,
	#brkBulk#,
	#trfPieces#,
	#trfWeight#,
	#qtBu#,
	'SYSUSER',
	sysdate,
	'SYSUSER',
	sysdate,
	to_date(#baselineEtd#,'DDMONYY HH24:MI'),
	#actionCode2#,
	#actionCode1#)
</insert>
   <select id="fetchMessageLogVersionNoCpct" parameterClass="java.util.HashMap" resultClass = "java.lang.Integer">
    	SELECT MAX(VER_NO) FROM MESSAGE_LOG WHERE MSG_TYPE = 'DDT' AND FLT_KEY = #flightKey#||(SELECT TRN_FLT_SUFFIX FROM SYS_PARAM) AND FLT_DATE = TO_DATE(#flightDate#,'MM/DD/YYYY')
    </select>
    <select id="getAwbDateForDDTCpct"  parameterClass="java.util.HashMap" resultClass="java.lang.String">	
			SELECT NVL(pkg_common.get_awb_date(#awbNo#,'I'), TRUNC(SYSDATE)) FROM DUAL 
	</select>
	 <select id="getTTIFQTTrnSetUp"  parameterClass="cargo.cms.edi.ei.bo.DDTMessageBO" resultClass="java.util.HashMap">	
			select tt_trf_type tt,if_trf_type if,qt_trf_type qt from trn_setup_carr where carr_code = (substr(#flightKey#,0,2))
	</select>
	<select id="etaDDT_MSGCpct" parameterClass="cargo.cms.edi.ei.bo.DDTMessageBO" resultClass="java.lang.String" >
	select  to_char(T.eta,'DDMONYY HH24:MI') from  (select B.flt_key flt_key , B.sch_date flt_date,B.flt_type flt_type, decode(est_time,null,to_date((to_char(B.SCH_DATE,'DDMONYY')||to_char(B.SCH_TIME,'0000')),'DDMONYYHH24mi') , to_date((to_char(B.EST_DATE,'DDMONYY')||to_char(B.EST_TIME,'0000')),'DDMONYYHH24mi')) eta  from flt_opr B)T
	where FLT_KEY = #flightKey#||(SELECT TRN_FLT_SUFFIX FROM SYS_PARAM) and FLT_DATE = to_date(#flightDate#,'MM/DD/YYYY') AND FLT_TYPE = 'A'  and rownum=1 	
	</select>
	<select id="etdDDT_SHP_TRF_DTLCpct" parameterClass="cargo.cms.edi.ei.bo.DDTShipmentBO" resultClass="java.lang.String" >
	select  to_char(T.eta,'DDMONYY HH24:MI')  from  (select B.flt_key flt_key , B.sch_date flt_date,B.flt_type flt_type,decode(est_time,null,to_date((to_char(B.SCH_DATE,'DDMONYY')||to_char(B.SCH_TIME,'0000')),'DDMONYYHH24mi') , to_date((to_char(B.EST_DATE,'DDMONYY')||to_char(B.EST_TIME,'0000')),'DDMONYYHH24mi')) eta  from flt_opr B)T
	where FLT_KEY = #ctgFltKey#||(SELECT TRN_FLT_SUFFIX FROM SYS_PARAM)  and FLT_DATE = to_date(#ctgFltDate#,'MM/DD/YYYY') AND FLT_TYPE = 'D'  and rownum=1 	
	</select>
<delete id="deleteDDTUldCpct"	parameterClass="java.lang.String">

		DELETE FROM DDT_ULD WHERE TR_NO = #trNo# 
		
	</delete>
	<delete id="deleteDDTShpCpct"	parameterClass="java.lang.String">

		DELETE FROM DDT_SHP WHERE TR_NO = #ddtTrNo# 
		
	</delete>
	<delete id="deleteDDTShpTrfDtlCpct"	parameterClass="java.lang.String">

		DELETE FROM DDT_SHP_TRF_DTL WHERE TR_NO = #ddtTrNo# 
		
	</delete>
		<select id="rollUpDdtUldCpct" parameterClass="cargo.cms.edi.ei.bo.DDTULDBO" resultClass="java.lang.String" >
	select decode(count(1),0,'Y','N') rollUp from
(select  msg.flt_key,msg.flt_date,uld.uld_key,shp.awb_no, trf.cntg_flt_key from ddt_msg msg,ddt_uld uld ,ddt_shp shp ,
ddt_shp_trf_dtl trf
where uld.tr_no= msg.tr_no and uld.doc_line_no=shp.udoc_line_no
and shp.tr_no=msg.tr_no and trf.sdoc_line_no= shp.doc_line_no  and
 trf.tr_no=msg.tr_no) ddt
  FULL OUTER JOIN 
 (select msg.flt_key,msg.flt_date,uld.uld_key,shp.awb_no,shp.dest from edi_ffm_msg msg,edi_ffm_uld uld ,edi_ffm_shp shp 
where uld.tr_no= msg.tr_no and uld.doc_line_no=shp.udoc_line_no
and shp.tr_no=msg.tr_no and msg.ffm_status='P') ffm
 ON 
ddt.flt_key=ffm.flt_key and ddt.flt_date=ffm.flt_date
and ddt.ULD_KEY =  ffm.ULD_KEY and  NVL(ddt.awb_No,ffm.awb_No)=ffm.awb_no
 where
NVL(ddt.flt_key,#ffmFltKey#||(SELECT TRN_FLT_SUFFIX FROM SYS_PARAM))=#ffmFltKey#||(SELECT TRN_FLT_SUFFIX FROM SYS_PARAM) and NVL(ddt.flt_date,to_date(#ffmFltDate#,'MM/DD/YYYY'))=to_date(#ffmFltDate#,'MM/DD/YYYY')
 and ddt.uld_key=#uldKey# and (ffm.dest ='HKG' or ffm.awb_no is null or ddt.cntg_flt_key is null) 
	
	</select>
<select id="rollUpDdtUld1Cpct" parameterClass="cargo.cms.edi.ei.bo.DDTULDBO" resultClass="java.lang.String" >
	select decode(count(1),0,'Y','N') rollUp from
 ( select decode(shp.dest,'HKG','Y','N') dest
 from edi_ffm_msg msg,edi_ffm_uld uld ,edi_ffm_shp shp 
where uld.tr_no= msg.tr_no and uld.doc_line_no=shp.udoc_line_no
and shp.tr_no=msg.tr_no and msg.ffm_status='P' and msg.flt_key=#ffmFltKey#||(SELECT TRN_FLT_SUFFIX FROM SYS_PARAM)
and msg.flt_date=to_date(#ffmFltDate#,'MM/DD/YYYY')  and uld.uld_key=#uldKey#
and shp.awb_no  not in(
select  shp.awb_no from ddt_msg msg,ddt_uld uld ,ddt_shp shp ,
ddt_shp_trf_dtl trf
where uld.tr_no= msg.tr_no and uld.doc_line_no=shp.udoc_line_no
and shp.tr_no=msg.tr_no and trf.doc_line_no= shp.doc_line_no  and
 trf.tr_no=msg.tr_no and
 flt_key=#ffmFltKey#||(SELECT TRN_FLT_SUFFIX FROM SYS_PARAM) and flt_date=to_date(#ffmFltDate#,'MM/DD/YYYY') and uld_key=#uldKey# )
 UNION
 select decode(shp.dest,'HKG','N','Y') dest
 from edi_ffm_msg msg,edi_ffm_uld uld ,edi_ffm_shp shp 
where uld.tr_no= msg.tr_no and uld.doc_line_no=shp.udoc_line_no
and shp.tr_no=msg.tr_no and msg.ffm_status='P' and msg.flt_key=#ffmFltKey#||(SELECT TRN_FLT_SUFFIX FROM SYS_PARAM)
and msg.flt_date=to_date(#ffmFltDate#,'MM/DD/YYYY')  and uld.uld_key=#uldKey#
and  shp.dest='HKG'
) where dest='N'
	</select>
 <update id="update_Ddt_Ctg_flt_Trf_typeCpct" parameterClass="cargo.cms.edi.ei.bo.DDTULDBO" >
update ddt_uld set cntg_flt_key = null , cntg_flt_date = null,trf_type=null,UNLDG_PT=null,BRK_BULK='N' where tr_no=#ddtTrNo# and uld_key=#uldKey#
</update>   
<select id="fetchFlightDateCpct" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT TO_CHAR(SCH_ARR_DATE,'MM/DD/YYYY') FROM FLT_OPR_LEG WHERE TR_NO = 
		(SELECT TR_NO FROM FLT_OPR_LEG WHERE FLT_KEY = #flightKey#||(SELECT TRN_FLT_SUFFIX FROM SYS_PARAM) AND SCH_DEP_DATE = TO_DATE(#flightDate#,'MM/DD/YYYY') AND BRD_POINT = #boardingPoint#)
		AND OFF_POINT = 'HKG'		
	</select>
	
	<update id="updatequeryddtmsgunproCpct"
		parameterClass="cargo.cms.edi.ei.bo.DDTMessageBO">

		UPDATE DDT_MSG SET DDT_STATUS = #ddtStatus# WHERE FLT_KEY = 
		#flightKey# AND FLT_DATE = TO_DATE(#flightDate#,'MM/DD/YYYY') AND
		BRD_POINT = #loadingPoint# AND DDT_STATUS = 'UNPRO' AND SI_TYPE ='I'
		<isNotNull prepend = "AND" property="trNo" >	
		 TR_NO = #trNo#
		</isNotNull>

	</update>
	
	<update id="updatequeryddtmsgstatusbyfltdataCpct"
		parameterClass="cargo.cms.edi.ei.bo.DDTMessageBO">

		UPDATE DDT_MSG SET DDT_STATUS = #ddtStatus# WHERE FLT_KEY = 
		#flightKey# AND FLT_DATE = TO_DATE(#flightDate#,'MM/DD/YYYY') AND
		BRD_POINT = #loadingPoint# AND DDT_STATUS = 'CONT' AND SI_TYPE ='I'
		<isNotNull prepend = "AND" property="trNo" >	
		 TR_NO = #trNo#
		</isNotNull>

	</update>
	
	<update id="updatequeryddtmsgtotalcountbyfltdataCpct"
		parameterClass="cargo.cms.edi.ei.bo.DDTMessageBO">

		UPDATE DDT_MSG SET TOTAL_COUNT = (NVL(TOTAL_COUNT, 0) + 1) WHERE
		FLT_KEY = #flightKey# AND FLT_DATE =
		TO_DATE(#flightDate#,'MM/DD/YYYY') AND BRD_POINT =
		#loadingPoint# AND DDT_STATUS = 'CONT' AND SI_TYPE ='I'
		<isNotNull prepend = "AND" property="trNo" >	
		 TR_NO = #trNo#
		</isNotNull>
		
	</update>
	
	<update id="updatequeryddtmsgseqnobyfltdataCpct"
		parameterClass="cargo.cms.edi.ei.bo.DDTMessageBO">

		UPDATE DDT_MSG SET MSG_SEQ_NUM = #msgSeqNo# WHERE FLT_KEY = #flightKey#
		AND FLT_DATE = TO_DATE(#flightDate#,'MM/DD/YYYY') AND
		BRD_POINT = #loadingPoint# AND DDT_STATUS = 'CONT' AND SI_TYPE ='I' 
		<isNotNull prepend = "AND" property="trNo" >	
		 TR_NO = #trNo#
		</isNotNull>
		
	</update>
	<select id="selectqueryddtmsgByFltdataCpct"
		parameterClass="cargo.cms.edi.ei.bo.DDTMessageBO"
		resultClass="cargo.cms.edi.ei.bo.DDTMessageBO">

		SELECT TR_NO AS trNo, DDT_STATUS AS ddtStatus , SUCCESS_MSGS AS
		successMsgsSeqNo , MSG_SEQ_NUM AS msgSeqNo ,TOTAL_COUNT AS
		totalSplitMsgs, COPY_NO AS copyNo ,FLT_KEY as flightKey ,
		TO_CHAR(FLT_DATE ,'MM/DD/YYYY')AS flightDate , BRD_POINT AS
		loadingPoint, LAST_IND AS lastIndicator FROM DDT_MSG WHERE FLT_KEY = #flightKey#||(SELECT TRN_FLT_SUFFIX FROM SYS_PARAM) AND
		FLT_DATE = TO_DATE(#flightDate#,'MM/DD/YYYY') AND BRD_POINT =
		#loadingPoint# AND DDT_STATUS ='CONT' AND SI_TYPE ='I' 
		<isNotNull prepend = "AND" property="trNo" >	
		 TR_NO = #trNo#
		 </isNotNull>
		
	</select>	
	
	<!-- DDT Data Concurrency Issue  -->
	<insert id="sqlInsertDDTMsgLockCpct" parameterClass="cargo.cms.edi.ei.bo.DDTMessageBO">
		INSERT INTO DDT_MSG_LOCK(FLT_KEY,FLT_DATE,BRD_POINT,VER_NO) VALUES(#flightKey#||(SELECT TRN_FLT_SUFFIX FROM SYS_PARAM), TO_DATE(#flightDate#,'MM/DD/YYYY'),#loadingPoint#,0)
	</insert>
	<select id="sqlSelectDDTMsgLockForUpdateCpct" parameterClass="cargo.cms.edi.ei.bo.DDTMessageBO" resultClass="java.util.HashMap">
		SELECT FLT_KEY, FLT_DATE, BRD_POINT,VER_NO FROM DDT_MSG_LOCK WHERE FLT_KEY = #flightKey#||(SELECT TRN_FLT_SUFFIX FROM SYS_PARAM) AND FLT_DATE = TO_DATE(#flightDate#,'MM/DD/YYYY') AND BRD_POINT = #loadingPoint#
		FOR UPDATE OF VER_NO
	</select>
	<update id="sqlUpdateDDTMsgLockCpct" parameterClass="cargo.cms.edi.ei.bo.DDTMessageBO">
		UPDATE DDT_MSG_LOCK SET VER_NO = (VER_NO + 1) WHERE FLT_KEY = #flightKey#||(SELECT TRN_FLT_SUFFIX FROM SYS_PARAM) AND FLT_DATE = TO_DATE(#flightDate#,'MM/DD/YYYY') AND BRD_POINT = #loadingPoint#
	</update>
	<!-- End -->
	
	<select id="selectqueryddtmsgmaxcopynoByFltdataCpct"
		parameterClass="cargo.cms.edi.ei.bo.DDTMessageBO"
		resultClass="cargo.cms.edi.ei.bo.DDTMessageBO">
		
		SELECT TR_NO AS trNo, DDT_STATUS AS ddtStatus , SUCCESS_MSGS AS
		successMsgsSeqNo , MSG_SEQ_NUM AS msgSeqNo ,TOTAL_COUNT AS
		totalSplitMsgs, COPY_NO AS copyNo ,FLT_KEY as flightKey ,
		TO_CHAR(FLT_DATE ,'MM/DD/YYYY')AS flightDate , BRD_POINT AS
		loadingPoint , MSG_VER AS versionNumber FROM DDT_MSG WHERE FLT_KEY = #flightKey#||(SELECT TRN_FLT_SUFFIX FROM SYS_PARAM) AND
		FLT_DATE = TO_DATE(#flightDate#,'MM/DD/YYYY') AND BRD_POINT =
		#loadingPoint#  AND SI_TYPE ='I' AND MSG_VER = #versionNumber# AND COPY_NO =
		(SELECT MAX(COPY_NO) AS copyNo FROM DDT_MSG WHERE FLT_KEY 
		= #flightKey#||(SELECT TRN_FLT_SUFFIX FROM SYS_PARAM) AND FLT_DATE = TO_DATE(#flightDate#,'MM/DD/YYYY') AND
		BRD_POINT = #loadingPoint# AND SI_TYPE ='I' AND MSG_VER = #versionNumber#)		
		ORDER BY TR_NO DESC
	</select>		
	
	
	<update id="updatequeryAllddtmsgunproCpct" parameterClass="cargo.cms.edi.ei.bo.DDTMessageBO">
		UPDATE DDT_MSG SET DDT_STATUS = 'UNPRO'
		WHERE FLT_KEY = #flightKey# AND FLT_DATE = TO_DATE(#flightDate#,'MM/DD/YYYY') AND BRD_POINT = #loadingPoint# 
		AND DDT_STATUS = 'P' AND TR_NO != #trNo#
	</update>
	
	<update id="updatequeryddtmsgsucessmsgsbyfltdataCpct"
		parameterClass="cargo.cms.edi.ei.bo.DDTMessageBO">

		UPDATE DDT_MSG SET SUCCESS_MSGS = #successMsgsSeqNo#,DDT_SPLIT_IND=#ddtSplit#,TRANSIT_MAIL_AWB_NO = #transitMailAwbNo#  WHERE
		FLT_KEY = #flightKey# AND FLT_DATE =
		TO_DATE(#flightDate#,'MM/DD/YYYY') AND BRD_POINT =
		#loadingPoint# AND DDT_STATUS = 'CONT' AND SI_TYPE ='I'
		<isNotNull prepend = "AND" property="trNo" >	
		 TR_NO = #trNo#
		</isNotNull>

	</update>
	
	<select id="checkTrnDuplicateAWB" 
		parameterClass="java.util.HashMap"
		resultClass="java.lang.String">
		select sum(awbNo) as awbNo from( 
	    	select count(shp.awb_no)as awbNo from 
			ddt_msg msg inner join ddt_shp shp
			on msg.tr_no = shp.tr_no
				and shp.awb_no =#awbNo#
      		and msg.nil_ddt = 'N', ddt_uld uld
			where msg.flt_key = #flightKey#||(SELECT TRN_FLT_SUFFIX FROM SYS_PARAM)
			and msg.flt_date = to_date(#flightDate#,'MM/DD/YYYY')
			 and msg.DDT_STATUS in('CONT')    and    
       shp.udoc_line_no=uld.doc_line_no and uld.tr_no=msg.tr_no	and uld_key is null and msg.brd_point  in (#loadingPoint#)	
	    	UNION         
      		select count(ddt_shp.awb_no)as awbNo from 
			ddt_msg inner join ddt_shp
			on ddt_msg.tr_no = ddt_shp.tr_no
	 		and ddt_msg.nil_ddt = 'N'      		
			and ddt_shp.awb_no =#awbNo#, ddt_uld uld
			where ddt_msg.flt_key = #flightKey#||(SELECT TRN_FLT_SUFFIX FROM SYS_PARAM)
			and ddt_msg.brd_point not in (#loadingPoint#)
			and ddt_msg.flt_date = to_date(#flightDate#,'MM/DD/YYYY')
			and ddt_shp.udoc_line_no=uld.doc_line_no and uld.tr_no=ddt_msg.tr_no and uld_key is null
			 and ddt_msg.DDT_STATUS = 'P')
	</select>
	<select id="checkTrnDuplicateUld" 
		parameterClass="java.util.HashMap"
		resultClass="java.lang.String">
		       select sum(uld_key) as uld_key from( 
	    	select count(uld.uld_key)as uld_key from 
			ddt_msg msg inner join ddt_uld uld
			on msg.tr_no = uld.tr_no
     		 and msg.nil_ddt = 'N' 
			and uld.uld_key = #uldKey#
			where msg.flt_key = #flightKey#||(SELECT TRN_FLT_SUFFIX FROM SYS_PARAM)
			and msg.flt_date = to_date(#flightDate#,'MM/DD/YYYY')			
			 and msg.DDT_STATUS in('CONT')      	
	    	UNION    	
     		 select count(ddt_uld.uld_key)as uld_key from 
			ddt_msg inner join ddt_uld
			on ddt_msg.tr_no = ddt_uld.tr_no
	 		and ddt_msg.nil_ddt = 'N'     	
			and ddt_uld.uld_key =#uldKey#
			where ddt_msg.flt_key = #flightKey#||(SELECT TRN_FLT_SUFFIX FROM SYS_PARAM)
			and ddt_msg.flt_date = to_date(#flightDate#,'MM/DD/YYYY')
			and ddt_msg.brd_point not in (#loadingPoint#)
			 and ddt_msg.DDT_STATUS = 'P'       
       )
	</select>
	<select id="checkTrnDuplicateAWBInUld" 
		parameterClass="java.util.HashMap"
		resultClass="java.lang.String">		
	    		select count(shp.awb_no)as awbNo from 
			ddt_msg msg inner join ddt_shp shp
			on msg.tr_no = shp.tr_no
      		and msg.nil_ddt = 'N' 
			and shp.awb_no =  #awbNo#,ddt_uld uld
			where msg.flt_key = #flightKey#||(SELECT TRN_FLT_SUFFIX FROM SYS_PARAM)
			and msg.flt_date = to_date(#flightDate#,'MM/DD/YYYY')
			and msg.brd_point  in (#loadingPoint#)
			 and msg.DDT_STATUS in('CONT')and    
       shp.udoc_line_no=uld.doc_line_no and uld.tr_no=msg.tr_no	and uld_key is not null	and uld_key in(#uldKey#)	    	
      
	</select>	
	
<!--EDI INBOUND.......DDT queries end-->
	
<!-- Confirm Offload Cargo Changes -->
	<update id="updateOffldFFMSentFlag" parameterClass="cargo.cms.export.bo.OffLoadCargoDetailsBO">
 		update TRN_FFM_OUT_MSG set FFM_SENT='N' WHERE FLT_KEY=#fltKey# AND FLT_DATE=#fltDate# AND BRD_POINT=#unldgpt#
        </update>
<!-- flt allotment transition starts -->
	<select id="isFlightTrnExport" parameterClass="map" resultClass="java.lang.String">
		SELECT TO_CHAR(COUNT(1)) FROM trn_flt_opr
		WHERE flt_key = #flightNumber#
			AND sch_date =  to_date(#flightDate#,'DDMONYY')
			AND flt_type = 'D'
	</select>
	
	<select id="isTrnFlightExist" parameterClass="map" resultClass="java.lang.String">
		SELECT TO_CHAR(COUNT(1)) FROM trn_flt_opr
		WHERE flt_key = #flightNumber#
	</select>
	
	
	
	<select id="getTrnFlightAllotmentHeader" parameterClass="cargo.cms.trn.buildup.bo.TrnFlightAllotmentBO"  resultClass="cargo.cms.trn.buildup.bo.TrnFlightAllotmentBO">
	 select * from (select opr.flt_key as fltKey,to_char(opr.sch_date,'DDMONYY') as fltDate,PKG_COMMON.get_flt_eta(opr.FLT_KEY, opr.SCH_DATE, 'D') as etd, opr.TR_NO as oprTrNo,
	  elpmsg.CALL_SIGN as callSign, decode(elpmsg.FINALIZE_IND,null,null,decode(elpmsg.FINALIZE_IND,'Y','Y','N')) as finalizeInd,
	  decode(elpmsg.LOAD_PLAN_FINALIZE,null,'N',decode(elpmsg.LOAD_PLAN_FINALIZE,'Y','Y','N')) as messageFinalizeInd, 
	  decode(event.allot_freeze_ind,null,'N',decode(event.allot_freeze_ind,'Y','Y','N')) as freezeInd, 	elpmsg.load_plan_ind as loadPlanInd, 
	  elpmsg.acft_type as acftType,elpmsg.exceed as exceed,elpmsg.uco_rmk as ucoRmk,elpmsg.VER_NO as versionNo,elpmsg.TR_NO as trNo,
	  elpmsg.BAGGAGE_NO as  baggageNo from  trn_flt_opr_events event,trn_flt_opr opr   LEFT OUTER JOIN trn_elp_msg elpmsg  ON elpmsg.flt_key=opr.flt_key 
	  and to_char(elpmsg.flt_date, 'DDMONYY')=to_char(opr.sch_date, 'DDMONYY')   where
 	  opr.flt_key=#fltKey# and opr.sch_date=TO_DATE(#fltDate#, 'DDMONYY') and opr.flt_type = 'D' 
  	  and opr.flt_key= event.flt_key and opr.sch_date=event.sch_date and opr.flt_type= event.flt_type order by to_number(elpmsg.tr_no) desc) where rownum=1
	</select>

	<select id="isTrnPassengerFlight" parameterClass="java.util.HashMap" resultClass="java.lang.String">
	SELECT TO_CHAR(COUNT(1)) FROM trn_flt_opr
		WHERE flt_key = #flightNumber#
			AND sch_date =  to_date(#flightDate#,'DDMONYY')
			AND flt_type = 'D'
			AND CGO_ACFT_TYPE = 'PSR'
	</select>
	<select id="getTrnFlightAllotmentDetails" parameterClass="cargo.cms.trn.buildup.bo.TrnFlightAllotmentBO"  resultClass="cargo.cms.trn.buildup.bo.TrnFlightAllotmentBO">
	select elpallot.INSTRUCTION as instruction,'Y' as hardDelete, elpallot.QTY_Q7 as qtyQ7,elpallot.QTY_Q6 as qtyQ6,elpallot.QTY_X8 as qtyX8,elpallot.QTY_PEB as qtyPEB, 
	elpallot.QTY_H5 as qtyH5 ,elpallot.QTY_A2 as qtyA2 ,elpallot.QTY_LDC as qtyLDC ,elpallot.QTY_H2 as qtyH2 , 'Transit' as cgoType,elpallot.rmk as rmk,elpmsg.TR_NO as trNo,
  	elpport.DOC_LINE_NO as portDocLineNo,elpallot.DOC_LINE_NO as docLineNo,	elpallot.WT as wt,	elpallot.H5WT as h5Wt,
  	null transitCTO
	from trn_elp_msg elpmsg,trn_elp_port elpport,trn_elp_allot elpallot where  elpmsg.TR_NO=elpport.tr_no and elpmsg.tr_no=elpallot.tr_no and elpallot.port_doc_line_no=elpport.DOC_LINE_NO
	and  elpallot.CGO_TYPE='Transit' and elpport.port=#unLdgPoint# and elpmsg.flt_key=#fltKey# and elpmsg.flt_date=TO_DATE(#fltDate#, 'DDMONYY')
	
		<isNotEmpty property="trNo">AND elpmsg.TR_NO = #trNo#</isNotEmpty>
	
	UNION ALL
	select elpallot.INSTRUCTION as instruction,'Y' as hardDelete, elpallot.QTY_Q7 as qtyQ7,elpallot.QTY_Q6 as qtyQ6,elpallot.QTY_X8 as qtyX8,elpallot.QTY_PEB as qtyPEB, 
	elpallot.QTY_H5 as qtyH5 ,elpallot.QTY_A2 as qtyA2 ,elpallot.QTY_LDC as qtyLDC ,elpallot.QTY_H2 as qtyH2 , 'Export Local B/U' as cgoType,elpallot.rmk as rmk,elpmsg.TR_NO as trNo,
  	elpport.DOC_LINE_NO as portDocLineNo,elpallot.DOC_LINE_NO as docLineNo,	elpallot.WT as wt,	elpallot.H5WT as h5Wt,
    decode(elpallot.handling_terminal, null,
  	(select EXP_LOCAL_BU from trn_setup a join  trn_setup_eload b on a.tr_no=b.tr_no 
  	where TO_DATE(#fltDate#, 'DDMONYY') BETWEEN PERIOD_FRM AND PERIOD_TO),elpallot.handling_terminal) expLocBuCTO
	from trn_elp_msg elpmsg,trn_elp_port elpport,trn_elp_allot elpallot where  elpmsg.TR_NO=elpport.tr_no 
	and elpmsg.tr_no=elpallot.tr_no and elpallot.port_doc_line_no=elpport.DOC_LINE_NO
	and  elpallot.CGO_TYPE='Export Local B/U' and elpport.port=#unLdgPoint# and elpmsg.flt_key=#fltKey# and elpmsg.flt_date=TO_DATE(#fltDate#, 'DDMONYY')

		<isNotEmpty property="trNo">AND elpmsg.TR_NO = #trNo#</isNotEmpty>
	
	UNION ALL
	select elpallot.INSTRUCTION as instruction,'Y' as hardDelete, elpallot.QTY_Q7 as qtyQ7,elpallot.QTY_Q6 as qtyQ6,elpallot.QTY_X8 as qtyX8,elpallot.QTY_PEB as qtyPEB, 
	elpallot.QTY_H5 as qtyH5 ,elpallot.QTY_A2 as qtyA2 ,elpallot.QTY_LDC as qtyLDC ,elpallot.QTY_H2 as qtyH2 , 'Export Local Pre-Pack' as cgoType,elpallot.rmk as rmk,elpmsg.TR_NO as trNo,
  	elpport.DOC_LINE_NO as portDocLineNo,elpallot.DOC_LINE_NO as docLineNo,	elpallot.WT as wt,	elpallot.H5WT as h5Wt,
  	 decode(elpallot.handling_terminal, null,(select EXP_LOCAL_PPK from trn_setup a join  trn_setup_eload b on a.tr_no=b.tr_no 
  	where TO_DATE(#fltDate#, 'DDMONYY') BETWEEN PERIOD_FRM AND PERIOD_TO),elpallot.handling_terminal)  expLocPpkCTO
	from trn_elp_msg elpmsg,trn_elp_port elpport,trn_elp_allot elpallot where  elpmsg.TR_NO=elpport.tr_no 
	and elpmsg.tr_no=elpallot.tr_no and elpallot.port_doc_line_no=elpport.DOC_LINE_NO
	and  elpallot.CGO_TYPE='Export Local Pre-Pack'and elpport.port=#unLdgPoint# and elpmsg.flt_key=#fltKey# and elpmsg.flt_date=TO_DATE(#fltDate#, 'DDMONYY')

		<isNotEmpty property="trNo">AND elpmsg.TR_NO = #trNo#</isNotEmpty>

	UNION ALL
	select elpallot.INSTRUCTION as instruction,'Y' as hardDelete, elpallot.QTY_Q7 as qtyQ7,elpallot.QTY_Q6 as qtyQ6,elpallot.QTY_X8 as qtyX8,elpallot.QTY_PEB as qtyPEB, 
	elpallot.QTY_H5 as qtyH5 ,elpallot.QTY_A2 as qtyA2 ,elpallot.QTY_LDC as qtyLDC ,elpallot.QTY_H2 as qtyH2 , 'Transit PPK' as cgoType,elpallot.rmk as rmk,elpmsg.TR_NO as trNo,
  	elpport.DOC_LINE_NO as portDocLineNo,elpallot.DOC_LINE_NO as docLineNo,	elpallot.WT as wt,	elpallot.H5WT as h5Wt,
  	null transitPpkCTO
	from trn_elp_msg elpmsg,trn_elp_port elpport,trn_elp_allot elpallot where  elpmsg.TR_NO=elpport.tr_no 
	and elpmsg.tr_no=elpallot.tr_no and elpallot.port_doc_line_no=elpport.DOC_LINE_NO
	and  elpallot.CGO_TYPE='Transit PPK' and elpport.port=#unLdgPoint# and elpmsg.flt_key=#fltKey# and elpmsg.flt_date=TO_DATE(#fltDate#, 'DDMONYY')
	
		<isNotEmpty property="trNo">AND elpmsg.TR_NO = #trNo#</isNotEmpty>
	
	UNION ALL
	select elpallot.INSTRUCTION as instruction,'Y' as hardDelete, elpallot.QTY_Q7 as qtyQ7,elpallot.QTY_Q6 as qtyQ6,elpallot.QTY_X8 as qtyX8,elpallot.QTY_PEB as qtyPEB, 
	elpallot.QTY_H5 as qtyH5 ,elpallot.QTY_A2 as qtyA2 ,elpallot.QTY_LDC as qtyLDC ,elpallot.QTY_H2 as qtyH2 , 'Tarmac' as cgoType,elpallot.rmk as rmk,elpmsg.TR_NO as trNo,
  	elpport.DOC_LINE_NO as portDocLineNo,elpallot.DOC_LINE_NO as docLineNo,	elpallot.WT as wt,	elpallot.H5WT as h5Wt,
  	null tarmacCTO
	from trn_elp_msg elpmsg,trn_elp_port elpport,trn_elp_allot elpallot where  elpmsg.TR_NO=elpport.tr_no 
	and elpmsg.tr_no=elpallot.tr_no and elpallot.port_doc_line_no=elpport.DOC_LINE_NO
	and  elpallot.CGO_TYPE='Tarmac' and elpport.port=#unLdgPoint# and elpmsg.flt_key=#fltKey# and elpmsg.flt_date=TO_DATE(#fltDate#, 'DDMONYY')
	
		<isNotEmpty property="trNo">AND elpmsg.TR_NO = #trNo#</isNotEmpty>

	UNION ALL
	select elpallot.INSTRUCTION as instruction,'Y' as hardDelete, elpallot.QTY_Q7 as qtyQ7,elpallot.QTY_Q6 as qtyQ6,elpallot.QTY_X8 as qtyX8,elpallot.QTY_PEB as qtyPEB, 
	elpallot.QTY_H5 as qtyH5 ,elpallot.QTY_A2 as qtyA2 ,elpallot.QTY_LDC as qtyLDC ,elpallot.QTY_H2 as qtyH2 , 'Courier' as cgoType,elpallot.rmk as rmk,elpmsg.TR_NO as trNo,
  	elpport.DOC_LINE_NO as portDocLineNo,elpallot.DOC_LINE_NO as docLineNo,	elpallot.WT as wt,	elpallot.H5WT as h5Wt,
  	 decode(elpallot.handling_terminal, null,(select COURIER from trn_setup a join  trn_setup_eload b on a.tr_no=b.tr_no 
  where TO_DATE(#fltDate#, 'DDMONYY') BETWEEN PERIOD_FRM AND PERIOD_TO),elpallot.handling_terminal) couCTO
	from trn_elp_msg elpmsg,trn_elp_port elpport,trn_elp_allot elpallot where  elpmsg.TR_NO=elpport.tr_no 
	and elpmsg.tr_no=elpallot.tr_no and elpallot.port_doc_line_no=elpport.DOC_LINE_NO
	and  elpallot.CGO_TYPE='Courier'  and elpport.port=#unLdgPoint# and elpmsg.flt_key=#fltKey# and elpmsg.flt_date=TO_DATE(#fltDate#, 'DDMONYY')

		<isNotEmpty property="trNo">AND elpmsg.TR_NO = #trNo#</isNotEmpty>
	
	UNION ALL
	select elpallot.INSTRUCTION as instruction,'Y' as hardDelete, elpallot.QTY_Q7 as qtyQ7,elpallot.QTY_Q6 as qtyQ6,elpallot.QTY_X8 as qtyX8,elpallot.QTY_PEB as qtyPEB, 
	elpallot.QTY_H5 as qtyH5 ,elpallot.QTY_A2 as qtyA2 ,elpallot.QTY_LDC as qtyLDC ,elpallot.QTY_H2 as qtyH2 , 'Mail' as cgoType,elpallot.rmk as rmk,elpmsg.TR_NO as trNo,
  	elpport.DOC_LINE_NO as portDocLineNo,elpallot.DOC_LINE_NO as docLineNo,	elpallot.WT as wt,	elpallot.H5WT as h5Wt,
  	 decode(elpallot.handling_terminal, null,(select MAIL from trn_setup a join  trn_setup_eload b on a.tr_no=b.tr_no 
  	where TO_DATE(#fltDate#, 'DDMONYY') BETWEEN PERIOD_FRM AND PERIOD_TO),elpallot.handling_terminal) mailCTO
	from trn_elp_msg elpmsg,trn_elp_port elpport,trn_elp_allot elpallot where  elpmsg.TR_NO=elpport.tr_no 
	and elpmsg.tr_no=elpallot.tr_no and elpallot.port_doc_line_no=elpport.DOC_LINE_NO
	and  elpallot.CGO_TYPE='Mail' and elpport.port=#unLdgPoint# and elpmsg.flt_key=#fltKey# and elpmsg.flt_date=TO_DATE(#fltDate#, 'DDMONYY')

		<isNotEmpty property="trNo">AND elpmsg.TR_NO = #trNo#</isNotEmpty>

	UNION ALL
	select elpallot.INSTRUCTION as instruction,'Y' as hardDelete, elpallot.QTY_Q7 as qtyQ7,elpallot.QTY_Q6 as qtyQ6,elpallot.QTY_X8 as qtyX8,elpallot.QTY_PEB as qtyPEB, 
	elpallot.QTY_H5 as qtyH5 ,elpallot.QTY_A2 as qtyA2 ,elpallot.QTY_LDC as qtyLDC ,elpallot.QTY_H2 as qtyH2 , 'Open' as cgoType,elpallot.rmk as rmk,elpmsg.TR_NO as trNo,
  	elpport.DOC_LINE_NO as portDocLineNo,elpallot.DOC_LINE_NO as docLineNo,	elpallot.WT as wt,	elpallot.H5WT as h5Wt,
  	decode(elpallot.handling_terminal, null,(select OPEN from trn_setup a join  trn_setup_eload b on a.tr_no=b.tr_no 
  	where TO_DATE(#fltDate#, 'DDMONYY') BETWEEN PERIOD_FRM AND PERIOD_TO),elpallot.handling_terminal) openCTO
	from trn_elp_msg elpmsg,trn_elp_port elpport,trn_elp_allot elpallot where  elpmsg.TR_NO=elpport.tr_no 
	and elpmsg.tr_no=elpallot.tr_no and elpallot.port_doc_line_no=elpport.DOC_LINE_NO
	and  elpallot.CGO_TYPE='Open'  and elpport.port=#unLdgPoint# and elpmsg.flt_key=#fltKey# and elpmsg.flt_date=TO_DATE(#fltDate#, 'DDMONYY')

		<isNotEmpty property="trNo">AND elpmsg.TR_NO = #trNo#</isNotEmpty>

	UNION ALL
	select elpallot.INSTRUCTION as instruction,'Y' as hardDelete, elpallot.QTY_Q7 as qtyQ7,elpallot.QTY_Q6 as qtyQ6,elpallot.QTY_X8 as qtyX8,elpallot.QTY_PEB as qtyPEB, 
	elpallot.QTY_H5 as qtyH5 ,elpallot.QTY_A2 as qtyA2 ,elpallot.QTY_LDC as qtyLDC ,elpallot.QTY_H2 as qtyH2 , 'EIC' as cgoType,elpallot.rmk as rmk,elpmsg.TR_NO as trNo,
  	elpport.DOC_LINE_NO as portDocLineNo,elpallot.DOC_LINE_NO as docLineNo,	elpallot.WT as wt,	elpallot.H5WT as h5Wt,
  	decode(elpallot.handling_terminal, null,(select EIC from trn_setup a join  trn_setup_eload b on a.tr_no=b.tr_no 
  	where TO_DATE(#fltDate#, 'DDMONYY') BETWEEN PERIOD_FRM AND PERIOD_TO),elpallot.handling_terminal) eicCTO
	from trn_elp_msg elpmsg,trn_elp_port elpport,trn_elp_allot elpallot where  elpmsg.TR_NO=elpport.tr_no 
	and elpmsg.tr_no=elpallot.tr_no and elpallot.port_doc_line_no=elpport.DOC_LINE_NO
	and  elpallot.CGO_TYPE='EIC'  and elpport.port=#unLdgPoint# and elpmsg.flt_key=#fltKey# and elpmsg.flt_date=TO_DATE(#fltDate#, 'DDMONYY')

		<isNotEmpty property="trNo">AND elpmsg.TR_NO = #trNo#</isNotEmpty>
	
	UNION ALL
	select elpallot.INSTRUCTION as instruction,'Y' as hardDelete, elpallot.QTY_Q7 as qtyQ7,elpallot.QTY_Q6 as qtyQ6,elpallot.QTY_X8 as qtyX8,elpallot.QTY_PEB as qtyPEB, 
	elpallot.QTY_H5 as qtyH5 ,elpallot.QTY_A2 as qtyA2 ,elpallot.QTY_LDC as qtyLDC ,elpallot.QTY_H2 as qtyH2 , 'Standby' as cgoType,elpallot.rmk as rmk,elpmsg.TR_NO as trNo,
  	elpport.DOC_LINE_NO as portDocLineNo,elpallot.DOC_LINE_NO as docLineNo,	elpallot.WT as wt,	elpallot.H5WT as h5Wt,
  	null standByCto
	from trn_elp_msg elpmsg,trn_elp_port elpport,trn_elp_allot elpallot where  elpmsg.TR_NO=elpport.tr_no 
	and elpmsg.tr_no=elpallot.tr_no and elpallot.port_doc_line_no=elpport.DOC_LINE_NO
	and  elpallot.CGO_TYPE='Standby' and elpport.port=#unLdgPoint# and elpmsg.flt_key=#fltKey# and elpmsg.flt_date=TO_DATE(#fltDate#, 'DDMONYY')

		<isNotEmpty property="trNo">AND elpmsg.TR_NO = #trNo#</isNotEmpty>

	UNION ALL
	select elpallot.INSTRUCTION as instruction,'Y' as hardDelete, elpallot.QTY_Q7 as qtyQ7,elpallot.QTY_Q6 as qtyQ6,elpallot.QTY_X8 as qtyX8,elpallot.QTY_PEB as qtyPEB, 
	elpallot.QTY_H5 as qtyH5 ,elpallot.QTY_A2 as qtyA2 ,elpallot.QTY_LDC as qtyLDC ,elpallot.QTY_H2 as qtyH2 , 'Transit Main HACTL' as cgoType,elpallot.rmk as rmk,elpmsg.TR_NO as trNo,
    elpport.DOC_LINE_NO as portDocLineNo,elpallot.DOC_LINE_NO as docLineNo,	elpallot.WT as wt,	elpallot.H5WT as h5Wt,
    null transitHactlCto
	from trn_elp_msg elpmsg,trn_elp_port elpport,trn_elp_allot elpallot where  elpmsg.TR_NO=elpport.tr_no 
	and elpmsg.tr_no=elpallot.tr_no and elpallot.port_doc_line_no=elpport.DOC_LINE_NO
	and  elpallot.CGO_TYPE='Transit HACTL' and elpport.port=#unLdgPoint# and elpmsg.flt_key=#fltKey# and elpmsg.flt_date=TO_DATE(#fltDate#, 'DDMONYY')

		<isNotEmpty property="trNo">AND elpmsg.TR_NO = #trNo#</isNotEmpty>
	
	UNION ALL
    select elpallot.INSTRUCTION as instruction,'Y' as hardDelete, elpallot.QTY_Q7 as qtyQ7,elpallot.QTY_Q6 as qtyQ6,elpallot.QTY_X8 as qtyX8,elpallot.QTY_PEB as qtyPEB, 
	elpallot.QTY_H5 as qtyH5 ,elpallot.QTY_A2 as qtyA2 ,elpallot.QTY_LDC as qtyLDC ,elpallot.QTY_H2 as qtyH2 , 'Tarmac Main HACTL' as cgoType,elpallot.rmk as rmk,elpmsg.TR_NO as trNo,
    elpport.DOC_LINE_NO as portDocLineNo,elpallot.DOC_LINE_NO as docLineNo,	elpallot.WT as wt,	elpallot.H5WT as h5Wt,
    null tarmacHactlCto
	from trn_elp_msg elpmsg,trn_elp_port elpport,trn_elp_allot elpallot where  elpmsg.TR_NO=elpport.tr_no 
	and elpmsg.tr_no=elpallot.tr_no and elpallot.port_doc_line_no=elpport.DOC_LINE_NO
	and  elpallot.CGO_TYPE='Tarmac HACTL' and elpport.port=#unLdgPoint# and elpmsg.flt_key=#fltKey# and elpmsg.flt_date=TO_DATE(#fltDate#, 'DDMONYY')
	
		<isNotEmpty property="trNo">AND elpmsg.TR_NO = #trNo#</isNotEmpty>

	</select>
	
	<select id="getTrnUnLdgPoints" parameterClass="cargo.cms.trn.buildup.bo.TrnFlightAllotmentBO"  resultClass="cargo.cms.trn.buildup.bo.TrnFlightAllotmentBO">
	    select off_point as unLdgPoint from trn_flt_opr_seg where tr_no in (select tr_no from trn_flt_opr where flt_key = #fltKey# and sch_date=to_date(#fltDate#,'dd-mon-yy') and flt_type = 'D') and brd_point='HKG' 
	 </select>
	 
	 <select id="fetchDefaultCto" parameterClass="cargo.cms.trn.buildup.bo.TrnFlightAllotmentBO"  resultClass="cargo.cms.trn.buildup.bo.TrnFlightAllotmentBO">
	 select EXP_LOCAL_BU expLocBuCTO,EXP_LOCAL_PPK expLocPpkCTO,COURIER couCTO,MAIL mailCTO,OPEN openCTO,EIC eicCTO from trn_setup a join  trn_setup_eload b on a.tr_no=b.tr_no 
  	where TO_DATE(#fltDate#, 'DDMONYY') BETWEEN PERIOD_FRM AND PERIOD_TO
	  </select>
	 
	 <insert id="insertTrnFlightAllotHeader" parameterClass="cargo.cms.trn.buildup.bo.TrnFlightAllotmentBO">
	insert into trn_elp_msg  (TR_NO,	FLT_KEY , 	FLT_DATE , 	VER_NO , 	CALL_SIGN , 	ACFT_TYPE , 	BAGGAGE_NO , 	TRF_IND, 	TRF_USER_ID , 
	TRF_DATE , 	CR_USER_ID , 	CR_DATE , 	LM_USER_ID , 	LM_DATE , 	UCO_RMK, EXCEED,FINALIZE_IND,LOAD_PLAN_FINALIZE,LOAD_PLAN_IND , TR_TYPE,RECEIVE_DATE ) values (#trNo#, 	#fltKey# , 	#fltDate# , 	#versionNo# , 	#callSign# , 	#acftType# , 	#baggageNo# , 	#transferInd#, 	#transferUserId# , 	#transferDate# , 	#crUserId# ,	SYSDATE , 	#lmUserId# , 
	SYSDATE , 	#ucoRmk#,#exceed#,#finalizeInd#,#messageFinalizeInd#,#loadPlanInd#,#trtype#,TO_DATE(#receiveDate#,'YYYY/MM/DD HH24:MI'))
 	</insert>
	
	<insert id="insertTrnIntoEdiElpPort" parameterClass="cargo.cms.trn.buildup.bo.TrnFlightAllotmentBO">
	insert into trn_elp_port (TR_NO , DOC_LINE_NO	 , 	PORT , 	CR_USER_ID , 	CR_DATE, 	LM_USER_ID , 	LM_DATE ) values (#trNo# , 	#portDocLineNo# , 
	#unLdgPoint#, #crUserId#, SYSDATE, #lmUserId#, SYSDATE)
 	</insert>
	<insert id="ediInsert_edi_elp_allot_awb" parameterClass="cargo.cms.trn.buildup.bo.TrnFlightAllotmentBO">
	 insert into edi_elp_allot_awb  (TR_NO, 	C_DOC_LINE_NO,	DOC_LINE_NO , 	AWB_NO , 	PCS , 	WT , 	INSTRUCTION, 	CR_USER_ID , 	CR_DATE , 	LM_USER_ID , 	LM_DATE  )values(#trNo#, 
	#docLineNo#, 	EDI_ELP_ALLOT_AWB_SEQ.NEXTVAL , 	#awbNo# , 	#awbPcs# , 	#awbWt# ,	#awbInstruction#, 	 	#crUserId# ,	SYSDATE , 	#lmUserId# , 	SYSDATE )
 	</insert>
	<insert id="ediInsert_edi_elp_summary" parameterClass="cargo.cms.trn.buildup.bo.TrnFlightAllotmentBO">
	 insert into EDI_ELP_SUMMARY    (	FLT_KEY, 	FLT_DATE, 	VER_NO , 	ALLOT_TYPE , 	SUMMARY, 	CR_USER_ID , 	CR_DATE ,	LM_USER_ID , 	LM_DATE ) values(#fltKey#,#fltDate#,#versionNo#,#allotType#,#summary#,#crUserId#,SYSDATE,#lmUserId#,SYSDATE)
 	</insert>
	<insert id="insertTrnFlightAllotDtl" parameterClass="cargo.cms.trn.buildup.bo.TrnFlightAllotmentBO">
	  insert into trn_elp_allot (TR_NO , DOC_LINE_NO	 , 	PORT_DOC_LINE_NO , 	CGO_TYPE , 	INSTRUCTION , 	QTY_Q7 , 	QTY_Q6 , 	QTY_X8 , 	QTY_PEB , 	QTY_H5 , QTY_A2 ,QTY_LDC ,QTY_H2,
	WT , H5WT,	RMK , 	CR_USER_ID , 	CR_DATE , 	LM_USER_ID , 	LM_DATE,   HANDLING_TERMINAL) values (#trNo# , #docLineNo#	 , 	#portDocLineNo# , 	#cgoType# , 	#instruction# , 	#qtyQ7# , 
	#qtyQ6# , 	#qtyX8# , 	#qtyPEB# , 	#qtyH5# ,#qtyA2# ,#qtyLDC# ,#qtyH2# , 	#wt# ,#h5Wt# , 	#rmk# , #crUserId# ,	SYSDATE , 	#lmUserId# , 	SYSDATE,   #handlingTerminal#)
 	</insert> 
	
	<insert id="ediInsertFlightAllotHeader" parameterClass="cargo.cms.trn.buildup.bo.TrnFlightAllotmentBO">
	insert into edi_elp_msg  (TR_NO,	FLT_KEY , 	FLT_DATE , 	VER_NO , 	CALL_SIGN , 	ACFT_TYPE , 	BAGGAGE_NO , 	TRF_IND, 	TRF_USER_ID , 
	TRF_DATE , 	CR_USER_ID , 	CR_DATE , 	LM_USER_ID , 	LM_DATE , 	UCO_RMK, EXCEED,FINALIZE_IND,LOAD_PLAN_FINALIZE,LOAD_PLAN_IND , TR_TYPE ) values (#trNo#, 	#fltKey#||(SELECT TRN_FLT_SUFFIX FROM SYS_PARAM) , 	#fltDate# , 	#versionNo# , 	#callSign# , 	#acftType# , 	#baggageNo# , 	#transferInd#, 	#transferUserId# , 	#transferDate# , 	#crUserId# ,	SYSDATE , 	#lmUserId# , 
	SYSDATE , 	#ucoRmk#,#exceed#,#finalizeInd#,#messageFinalizeInd#,#loadPlanInd#,#trtype# )
 	</insert>
 	<insert id="ediInsertIntoEdiElpPort" parameterClass="cargo.cms.trn.buildup.bo.TrnFlightAllotmentBO">
	insert into edi_elp_port (TR_NO , DOC_LINE_NO	 , 	PORT , 	CR_USER_ID , 	CR_DATE, 	LM_USER_ID , 	LM_DATE ) values (#trNo# , 	#portDocLineNo# , 
	#unLdgPoint# , 	 	#crUserId# ,	SYSDATE , 	#lmUserId# , 	SYSDATE  )
 	</insert>
 	<insert id="ediInsertFlightAllotDtl" parameterClass="cargo.cms.trn.buildup.bo.TrnFlightAllotmentBO">
	  insert into edi_elp_allot (TR_NO , DOC_LINE_NO	 , 	PORT_DOC_LINE_NO , 	CGO_TYPE , 	INSTRUCTION , 	QTY_Q7 , 	QTY_Q6 , 	QTY_X8 , 	QTY_PEB , 	QTY_H5 , QTY_A2 ,QTY_LDC ,QTY_H2,
	WT , H5WT,	RMK , 	CR_USER_ID , 	CR_DATE , 	LM_USER_ID , 	LM_DATE) values (#trNo# , #docLineNo#	 , 	#portDocLineNo# , 	#cgoType# , 	#instruction# , 	#qtyQ7# , 
	#qtyQ6# , 	#qtyX8# , 	#qtyPEB# , 	#qtyH5# ,#qtyA2# ,#qtyLDC# ,#qtyH2# , 	#wt# ,#h5Wt# , 	#rmk# , #crUserId# ,	SYSDATE , 	#lmUserId# , 	SYSDATE)
 	</insert> 
	
	<update id="updateTrnFlightAllotDtl" parameterClass="cargo.cms.trn.buildup.bo.TrnFlightAllotmentBO" >
 	  update trn_elp_allot set INSTRUCTION=#instruction#,QTY_Q7=#qtyQ7# , 	QTY_Q6=#qtyQ6# , 	QTY_X8=#qtyX8# , 	QTY_PEB=#qtyPEB# , 	QTY_H5=#qtyH5# , QTY_A2=#qtyA2# ,QTY_LDC=#qtyLDC# ,QTY_H2=#qtyH2#, WT=#wt#,H5WT=#h5Wt#,RMK=#rmk#  ,LM_USER_ID=#lmUserId# , LM_DATE=	SYSDATE  where DOC_LINE_NO=#docLineNo#
 	</update> 	
	
	<delete id="deleteTrnFlightAllotDtl" parameterClass="cargo.cms.trn.buildup.bo.TrnFlightAllotmentBO">		        	
		delete from trn_elp_allot where doc_line_no=#docLineNo#
  </delete>
	
	 <select id="fetch_trn_trn_elp_msg_seq" resultClass="java.lang.String">	
   	 select trn_elp_msg_seq.nextval from dual
   	</select>
		
		<select id="fetch_trn_trn_elp_port_seq" resultClass="java.lang.String">	
   	 select trn_elp_port_seq.nextval from dual
   	</select>
		
		<select id="fetchTrnflightport" parameterClass="cargo.cms.trn.buildup.bo.TrnFlightAllotmentBO"  resultClass="java.lang.String">
	 select doc_line_no from trn_elp_port where tr_no=#trNo# and port=#unLdgPoint#
	</select> 
	<select id="fetchEnqTrnflightport" parameterClass="cargo.cms.trn.buildup.bo.EnqTrnFlightAllotmentBO"  resultClass="java.lang.String">
	 select doc_line_no from trn_elp_port where tr_no=#trNo# and port=#unLdgPoint#
	</select> 
		<update id="updateTrnTrfInd" parameterClass="cargo.cms.trn.buildup.bo.TrnFlightAllotmentBO" >
 	  update trn_elp_msg set TR_TYPE = #trtype# , TRF_IND=#transferInd#,TRF_USER_ID=#transferUserId# , 	TRF_DATE=SYSDATE ,LM_USER_ID=#lmUserId# , LM_DATE=	SYSDATE where TR_NO=#trNo#
 	</update>
	
	<select id="fetch_trn_TtlandGDTtl_Allot" parameterClass="cargo.cms.trn.buildup.bo.TrnFlightAllotmentBO"  resultClass="cargo.cms.trn.buildup.bo.TrnFlightAllotmentBO">   	
				select (select (decode(sum(allot.qty_Q7 ), null, '', sum(allot.qty_Q7 ) ||'Q7')
               || decode(sum(allot.qty_Q6 ), null, '',','||  sum(allot.qty_Q6 ) ||'Q6')
               || decode(sum(allot.qty_X8 ), null, '', ','|| sum(allot.qty_X8 ) ||'X8')
               || decode( sum(allot.QTY_PEB ), null, '', ','|| sum(allot.QTY_PEB ) ||'PEB')
               || decode(sum(allot.QTY_H2 ), null, '', ','|| sum(allot.QTY_H2 ) ||'H2')
               || decode(sum(allot.QTY_A2 ), null, '', ','|| sum(allot.QTY_A2 ) ||'A2')
               || decode(sum(allot.QTY_LDC ), null, '', ','|| sum(allot.QTY_LDC ) ||'LDC')
               ||  decode( count(allot.QTY_H5 ), 0, '', ','||'H5' ) || decode(sum(allot.WT ), null, '', ' (' || sum(allot.WT )||')') )     from trn_elp_allot allot,trn_elp_port port
                where port.doc_line_no= allot.port_doc_line_no  and msg.TR_NO=port.tr_no  and port.port=#unLdgPoint#
                and allot.CGO_TYPE in('Transit','Export Local B/U','Export Local Pre-Pack','Tarmac',
                'Courier','Mail','Open','EIC')
                
                )as portTotal ,
                (select (decode(sum(allot.qty_Q7 ), null, '', sum(allot.qty_Q7 ) ||'Q7')
               || decode(sum(allot.qty_Q6 ), null, '',','||  sum(allot.qty_Q6 ) ||'Q6')
               || decode(sum(allot.qty_X8 ), null, '', ','|| sum(allot.qty_X8 ) ||'X8')
               || decode( sum(allot.QTY_PEB ), null, '', ','|| sum(allot.QTY_PEB ) ||'PEB')
               || decode(sum(allot.QTY_H2 ), null, '', ','|| sum(allot.QTY_H2 ) ||'H2')
               || decode(sum(allot.QTY_A2 ), null, '', ','|| sum(allot.QTY_A2 ) ||'A2')
               || decode(sum(allot.QTY_LDC ), null, '', ','|| sum(allot.QTY_LDC ) ||'LDC')
               ||  decode( count(allot.QTY_H5 ), 0, '', ','||'H5' ) || decode(sum(allot.WT ), null, '', ' (' || sum(allot.WT )||')') ) from trn_elp_allot allot
                where allot.tr_no= msg.tr_no and allot.CGO_TYPE in('Transit','Export Local B/U','Export Local Pre-Pack','Tarmac',
                'Courier','Mail','Open','EIC') ) as grandTotal                
                from 
               trn_elp_msg msg                
             where msg.flt_key=#fltKey# and msg.flt_date=TO_DATE(#fltDate#, 'DDMONYY') and msg.tr_no=#trNo#
   	</select>
		
		<select id="fetch_trn_trn_elp_allot_awb" parameterClass="cargo.cms.trn.buildup.bo.TrnFlightAllotmentBO"  resultClass="cargo.cms.trn.buildup.bo.TrnFlightAllotmentBO">   	
		select DOC_LINE_NO as awbDocLineNo,AWB_NO as awbNo,PCS as awbPcs,WT as awbWt,INSTRUCTION as awbInstruction,TR_NO as trNo,C_DOC_LINE_NO as docLineNo,
		substr(AWB_NO,0,3) as awbNoPfx,substr(AWB_NO,4) as awbNoSfx from trn_elp_allot_awb	where tr_no=#trNo#
   	</select> 
		
		<insert id="insert_trn_trn_elp_allot_awb" parameterClass="cargo.cms.trn.buildup.bo.TrnFlightAllotmentBO">
	 insert into trn_elp_allot_awb  (TR_NO, 	C_DOC_LINE_NO,	DOC_LINE_NO , 	AWB_NO , 	PCS , 	WT , 	INSTRUCTION, 	CR_USER_ID , 	CR_DATE , 	LM_USER_ID , 	LM_DATE  )values(#trNo#, 
	#docLineNo#, 	trn_elp_allot_AWB_SEQ.NEXTVAL , 	#awbNo# , 	#awbPcs# , 	#awbWt# ,	#awbInstruction#, 	 	#crUserId# ,	SYSDATE , 	#lmUserId# , 	SYSDATE )
 	</insert>
	
	<update id="update_trn_trn_elp_allot_awb" parameterClass="cargo.cms.trn.buildup.bo.TrnFlightAllotmentBO" >
 	  update trn_elp_allot_awb set 	AWB_NO=#awbNo# , 	PCS =#awbPcs#, 	WT=	#awbWt#  , 	INSTRUCTION=#awbInstruction# ,LM_USER_ID=#lmUserId# , LM_DATE=	SYSDATE where DOC_LINE_NO=#awbDocLineNo#
 	</update>  
	
	<delete id="delete_trn_trn_elp_allot_awb" parameterClass="cargo.cms.trn.buildup.bo.TrnFlightAllotmentBO">		        	
	  delete from trn_elp_allot_awb where c_doc_line_no=#docLineNo#
    </delete>
		
		<update id="updateTrnFinalizeInd" parameterClass="cargo.cms.trn.buildup.bo.TrnFlightAllotmentBO" >
 	  update trn_elp_msg set TR_TYPE = #trtype# ,FINALIZE_IND=#finalizeInd#,FINALIZE_USER_ID=#finalizeUserId# , 	FINALIZE_DATE=SYSDATE ,LM_USER_ID=#lmUserId# , LM_DATE=	SYSDATE where TR_NO=#trNo#
 	</update>
	
		<insert id="insert_trn_flt_mov" parameterClass="cargo.cms.trn.buildup.bo.TrnFlightAllotmentBO">
	 insert into FLT_MOV    ( 	FLT_TYPE , 	CARR_CODE , 	FLT_NO , 	FLT_DATE , 	FLT_KEY , RMK, 	TR_NO ,DOC_LINE_NO ,	TR_TYPE , 	TR_STATUS , 	CR_USER_ID , 	CR_DATE , 
	LM_USER_ID , 	LM_DATE, 	SEQ_NO , 	EVENT_ID    ) values('D',#carrCode#,#fltNo#,#fltDate#,#fltKey#,'EXP_FLIGHT_ALLOTMENT',#oprTrNo#,'1','FA','A',#crUserId# ,	SYSDATE , 	#lmUserId# , 	SYSDATE 
   ,FLT_MOV_SEQ.NEXTVAL,'FAF')
 	</insert>
	
	<select id="fetch_trn_Allotment_Summary" parameterClass="cargo.cms.trn.buildup.bo.TrnFlightAllotmentBO"  resultClass="cargo.cms.trn.buildup.bo.TrnFlightAllotmentBO">   	
	select (select (decode(d.qtyQ7 , null, '',  d.qtyQ7 ||'Q7' )
               || decode(d.qtyQ6, null, '',','||  d.qtyQ6 ||'Q6')
               || decode(d.qtyX8, null, '', ','|| d.qtyX8 ||'X8')
               || decode( d.qtyPEB, null, '', ','|| d.qtyPEB ||'PEB')
               || decode(d.qtyH2, null, '', ','||d.qtyH2 ||'H2')
               || decode(d.qtyA2, null, '', ','|| d.qtyA2 ||'A2')
               || decode(d.qtyLDC, null, '', ','|| d.qtyLDC ||'LDC')
               ||  decode(d.countH5 , 0, '', ','||'H5' ))  from
              (select a.countH5,(a.totalQ6-b.totalQ6) as qtyQ6,(a.totalQ7-b.totalQ7) as qtyQ7,(a.totalX8-b.totalX8) as qtyX8,
              (a.totalPEB-b.totalPEB) as qtyPEB,(a.totalA2-b.totalA2) as qtyA2,(a.totalLDC-b.totalLDC) as qtyLDC,(a.totalH2-b.totalH2) as qtyH2,             
              a.tr_no as tr_no 
              from (select count(QTY_H5 )as countH5, sum(qty_Q6 ) as totalQ6,sum(qty_Q7 ) as totalQ7,
               sum(QTY_X8 ) as totalX8,sum(QTY_PEB ) as totalPEB,sum(QTY_A2 ) as totalA2, sum(QTY_LDC ) as totalLDC,
                sum(QTY_H2 ) as totalH2,
              tr_no from trn_elp_allot where CGO_TYPE in('Transit','Export Local B/U')   group by tr_no) a, 
              (select NVL(sum(qty_Q6 ),0) as totalQ6,NVL(sum(qty_Q7 ),0) as totalQ7,
              NVL(sum(QTY_X8 ),0) as totalX8,NVL(sum(QTY_PEB ),0) as totalPEB,NVL(sum(QTY_A2 ),0) as totalA2,NVL( sum(QTY_LDC ),0) as totalLDC,
                NVL(sum(QTY_H2 ),0) as totalH2,
              tr_no from trn_elp_allot where CGO_TYPE in('Transit PPK')  group by tr_no) b
              where a.tr_no=b.tr_no )d where d.tr_no =msg.tr_no) as whBuildUpTotal, 
                (select (decode(sum(allot.qty_Q7 ), null, '', sum(allot.qty_Q7) ||'Q7')
               || decode(sum(allot.qty_Q6 ), null, '',','||  sum(allot.qty_Q6 ) ||'Q6')
               || decode(sum(allot.qty_X8 ), null, '', ','|| sum(allot.qty_X8 ) ||'X8')
               || decode( sum(allot.QTY_PEB ), null, '', ','|| sum(allot.QTY_PEB ) ||'PEB')
               || decode(sum(allot.QTY_H2 ), null, '', ','|| sum(allot.QTY_H2 ) ||'H2')
               || decode(sum(allot.QTY_A2 ), null, '', ','|| sum(allot.QTY_A2 ) ||'A2')
               || decode(sum(allot.QTY_LDC ), null, '', ','|| sum(allot.QTY_LDC ) ||'LDC')
               ||  decode( count(allot.QTY_H5 ), 0, '', ','||'H5' )) from trn_elp_allot allot
                where allot.tr_no= msg.tr_no and allot.CGO_TYPE in('Export Local Pre-Pack','Transit PPK') ) as ppkTotal,
                (select (decode(sum(allot.qty_Q7 ), null, '', sum(allot.qty_Q7 ) ||'Q7')
               || decode(sum(allot.qty_Q6 ), null, '',','||  sum(allot.qty_Q6 ) ||'Q6')
               || decode(sum(allot.qty_X8 ), null, '', ','|| sum(allot.qty_X8 ) ||'X8')
               || decode( sum(allot.QTY_PEB ), null, '', ','|| sum(allot.QTY_PEB ) ||'PEB')
               || decode(sum(allot.QTY_H2 ), null, '', ','|| sum(allot.QTY_H2 ) ||'H2')
               || decode(sum(allot.QTY_A2 ), null, '', ','|| sum(allot.QTY_A2 ) ||'A2')
               || decode(sum(allot.QTY_LDC ), null, '', ','|| sum(allot.QTY_LDC ) ||'LDC')
               ||  decode( count(allot.QTY_H5 ), 0, '', ','||'H5' )) from trn_elp_allot allot
                where allot.tr_no= msg.tr_no and allot.CGO_TYPE in('Tarmac') ) as tarmacTotal,
                (select (decode(sum(allot.qty_Q7 ), null, '', sum(allot.qty_Q7 ) ||'Q7')
               || decode(sum(allot.qty_Q6 ), null, '',','||  sum(allot.qty_Q6 ) ||'Q6')
               || decode(sum(allot.qty_X8 ), null, '', ','|| sum(allot.qty_X8 ) ||'X8')
               || decode( sum(allot.QTY_PEB ), null, '', ','|| sum(allot.QTY_PEB ) ||'PEB')
               || decode(sum(allot.QTY_H2 ), null, '', ','|| sum(allot.QTY_H2 ) ||'H2')
               || decode(sum(allot.QTY_A2 ), null, '', ','|| sum(allot.QTY_A2 ) ||'A2')
               || decode(sum(allot.QTY_LDC ), null, '', ','|| sum(allot.QTY_LDC ) ||'LDC')
               ||  decode( count(allot.QTY_H5 ), 0, '', ','||'H5' )) from trn_elp_allot allot
                where allot.tr_no= msg.tr_no and allot.CGO_TYPE in('Courier','Mail','Open','EIC') ) as othersTotal ,
                 (select (decode(sum(allot.qty_Q7 ), null, '', sum(allot.qty_Q7 ) ||'Q7')
               || decode(sum(allot.qty_Q6 ), null, '',','||  sum(allot.qty_Q6 ) ||'Q6')
               || decode(sum(allot.qty_X8 ), null, '', ','|| sum(allot.qty_X8 ) ||'X8')
               || decode( sum(allot.QTY_PEB ), null, '', ','|| sum(allot.QTY_PEB ) ||'PEB')
               || decode(sum(allot.QTY_H2 ), null, '', ','|| sum(allot.QTY_H2 ) ||'H2')
               || decode(sum(allot.QTY_A2 ), null, '', ','|| sum(allot.QTY_A2 ) ||'A2')
               || decode(sum(allot.QTY_LDC ), null, '', ','|| sum(allot.QTY_LDC ) ||'LDC')
               ||  decode( count(allot.QTY_H5 ), 0, '', ','||'H5' )|| decode(sum(allot.WT ), null, '', ' (' || sum(allot.WT )||')')) from trn_elp_allot allot
                where allot.tr_no= msg.tr_no and allot.CGO_TYPE in('Transit','Export Local B/U','Export Local Pre-Pack','Tarmac',
                'Courier','Mail','Open','EIC')  ) as grandTotal                
                from trn_elp_msg msg where  msg.flt_key=#fltKey#   and msg.flt_date=TO_DATE(#fltDate#, 'DDMONYY') and msg.tr_no in(
                SELECT b.trNO FROM (SELECT rownum r, a.trNo  FROM (select elpmsg.tr_no as trNo from  trn_elp_msg elpmsg  where elpmsg.flt_key=#fltKey# and elpmsg.flt_date=TO_DATE(#fltDate#, 'DDMONYY')  order by to_number(elpmsg.tr_no) desc)a
                WHERE rownum &lt;=2) b WHERE r=#rownum#)
   	</select>
		
		 	<insert id="insert_trn_TRN_ELP_SUMMARY" parameterClass="cargo.cms.trn.buildup.bo.TrnFlightAllotmentBO">
	 insert into TRN_ELP_SUMMARY    (	FLT_KEY, 	FLT_DATE, 	VER_NO , 	ALLOT_TYPE , 	SUMMARY, 	CR_USER_ID , 	CR_DATE ,	LM_USER_ID , 	LM_DATE ) values(#fltKey#,#fltDate#,#versionNo#,#allotType#,#summary#,#crUserId#,SYSDATE,#lmUserId#,SYSDATE)
 	</insert>
	
	<select id="fetch_trn_trn_elp_allot_seq" resultClass="java.lang.String">	
   	 select trn_elp_allot_SEQ.NEXTVAL from dual
   	</select>
		
	<update id="updateTrnFreezeInd" parameterClass="cargo.cms.trn.buildup.bo.TrnFlightAllotmentBO" >
 	  update trn_flt_opr_events set ALLOT_FREEZE_IND = #freezeInd# , ALLOT_FREEZE_USER_ID=#freezeUserId# , ALLOT_FREEZE_DATE=	#freezeDate#, TR_TYPE=#trtype# where flt_key=#fltKey# and sch_date=TO_DATE(#fltDate#, 'DDMONYY') and FLT_TYPE='D'
 	</update> 
	
		<select id="fetchTrnfreezeStatus" parameterClass="cargo.cms.trn.buildup.bo.TrnFlightAllotmentBO"  resultClass="java.lang.String">
	 select ALLOT_FREEZE_IND from trn_flt_opr_events where flt_key=#fltKey# and sch_date=TO_DATE(#fltDate#, 'DDMONYY') and FLT_TYPE='D'
	</select> 
	
	
		<select id="fetchTrnLPFinalizeStatus" parameterClass="cargo.cms.trn.buildup.bo.TrnFlightAllotmentBO"  resultClass="java.lang.String">
	 select decode(FINALIZE_IND,'Y','Y','N') from trn_elp_msg where TR_NO=#trNo# 
	</select> 	
	
	<select id="checkTrnValidLegForELP" parameterClass="java.util.HashMap"  resultClass="java.lang.Integer">
	  select COUNT(1) from trn_flt_opr opr,trn_flt_opr_leg leg where opr.flt_key=#fltKey# and opr.sch_date=TO_DATE(#fltDate#, 'DDMONYY')  and leg.tr_no=opr.tr_no and leg.OFF_POINT =#unLdgPoint# and opr.flt_type = 'D'
	</select>
	
	<select id="fetch_trn_transit_details" parameterClass="cargo.cms.trn.buildup.bo.TrnFlightAllotmentBO"  resultClass="cargo.cms.trn.buildup.bo.TrnFlightAllotmentBO">
					select DISTINCT concat(concat(substr(trn_fbl_shp.awb_no,0,3),'-'),substr(trn_fbl_shp.awb_no,4))as awbNoDisplay,
       trn_fbl_shp.awb_no as awbNo,
       nvl(awb.orig,trn_fbl_shp.org) as origin,
       nvl(awb.dest,trn_fbl_shp.dest) as dest,
       (NVL(awb.spl_code1,trn_fbl_shp.SPL_CODE1) ||''|| decode(NVL(awb.spl_code2,trn_fbl_shp.SPL_CODE2), null, '', ','|| NVL(awb.spl_code2,trn_fbl_shp.SPL_CODE2))
      		||''|| decode(NVL(awb.spl_code3,trn_fbl_shp.SPL_CODE3), null, '', ','|| NVL(awb.spl_code3,trn_fbl_shp.SPL_CODE3))
      		||''|| decode(NVL(awb.spl_code4,trn_fbl_shp.SPL_CODE4), null, '', ','|| NVL(awb.spl_code4,trn_fbl_shp.SPL_CODE4))
      		||''|| decode(NVL(awb.spl_code5,trn_fbl_shp.SPL_CODE5), null, '', ','|| NVL(awb.spl_code5,trn_fbl_shp.SPL_CODE5))
      		||''|| decode(NVL(awb.spl_code6,trn_fbl_shp.SPL_CODE6), null, '', ','||NVL(awb.spl_code6,trn_fbl_shp.SPL_CODE6))
      		||''|| decode(NVL(awb.spl_code7,trn_fbl_shp.SPL_CODE7), null, '', ','|| NVL(awb.spl_code7,trn_fbl_shp.SPL_CODE7))
      		||''|| decode(NVL(awb.spl_code8,trn_fbl_shp.SPL_CODE8), null, '', ','|| NVL(awb.spl_code8,trn_fbl_shp.SPL_CODE8))
      		||''|| decode(NVL(awb.spl_code9,trn_fbl_shp.SPL_CODE9), null, '', ','|| NVL(awb.spl_code9,trn_fbl_shp.SPL_CODE9))) as shipmentDescCode,
       nvl(trn_fbl_shp.pcs,0) as qty,
       nvl(trn_fbl_shp.net_wt,0) as weightCode,
       ffm.cto as impCTO,
       trn_fbl_shp.export_cto as expCTO,ffm.FLT_KEY,ddt.flt_key
	from 
       trn_fbl
       JOIN trn_fbl_shp ON  trn_fbl.TR_NO= trn_fbl_shp.TR_NO 
      and trn_fbl_shp.org!='HKG'                
       LEFT join awb on trn_fbl_shp.awb_no=awb.awb_no and awb.awb_date=trn_fbl_shp.awb_date
       LEFT JOIN
       (SELECT DISTINCT msg.flt_key,
		    msg.flt_date,		  
		    shp.awb_no,
        shp.awb_date,
		    trf.cntg_flt_key,
		    trf.cntg_flt_date,
		    trf.UNLDG_PT,
		    trf.TRF_TYPE,
		    trf.TRF_PC,
		    trf.TRF_WT
		  FROM ddt_msg msg,		   
		    ddt_shp shp ,
		    ddt_shp_trf_dtl trf
		  WHERE 
		   shp.tr_no       =msg.tr_no
		  AND trf.sdoc_line_no= shp.doc_line_no
		  AND trf.tr_no       =msg.tr_no
		  ) ddt  
      ON   trn_fbl.flt_key ||#trnFltSfx#=ddt.cntg_flt_key and trn_fbl.flt_date=ddt.cntg_flt_DATE
     and ddt.awb_no= trn_fbl_shp.awb_no and ddt.awb_date=trn_fbl_shp.awb_date
     LEFT JOIN 
      (select  trn_ffm_msg.flt_key,trn_ffm_msg.flt_date,shp.cto,shp.dest,shp.awb_no,shp.awb_date from  
      trn_ffm_msg ,trn_ffm_shp shp
     where trn_ffm_msg.ffm_status='P' and trn_ffm_msg.tr_no=shp.tr_no and
     trn_ffm_msg.flt_date in (select max(trn_ffm_msg.flt_date)  from trn_ffm_msg ,trn_ffm_shp where  trn_ffm_msg.ffm_status='P' and trn_ffm_msg.tr_no=trn_ffm_shp.tr_no
       and trn_ffm_shp.awb_no =shp.awb_no and trn_ffm_shp.awb_date=shp.awb_date group by  trn_ffm_shp.awb_no, 
       trn_ffm_shp.awb_date)) ffm
     ON  trn_fbl_shp.awb_no= ffm.awb_no and trn_fbl_shp.awb_date=ffm.awb_date and ffm.dest!='HKG' 
	where 
        trn_fbl.flt_key =#fltKey#
        and trn_fbl.flt_date = TO_DATE(#fltDate#, 'DDMONYY')
        and trn_fbl.unldg_pt = #unLdgPoint#
        and trn_fbl.si_type in('S','I') and trn_fbl.fbl_status ='P'

	</select>	
	
	<select id="fetch_trn_transit_qt_details" parameterClass="cargo.cms.trn.buildup.bo.TrnFlightAllotmentBO"  resultClass="cargo.cms.trn.buildup.bo.TrnFlightAllotmentBO">
	select DISTINCT concat(concat(substr(ddt.awb_no,0,3),'-'),substr(ddt.awb_no,4))as awbNoDisplay,
       ddt.awb_no as awbNo,
       awb.orig as origin,
       awb.dest as dest,
       (awb.spl_code1 ||''|| decode(awb.spl_code2, null, '', ','|| awb.spl_code2)
      		||''|| decode(awb.spl_code3, null, '', ','|| awb.spl_code3)
      		||''|| decode(awb.spl_code4, null, '', ','|| awb.spl_code4)
      		||''|| decode(awb.spl_code5, null, '', ','||  awb.spl_code5)
      		||''|| decode(awb.spl_code6, null, '', ','||awb.spl_code6)
      		||''|| decode(awb.spl_code7, null, '', ','|| awb.spl_code7)
      		||''|| decode(awb.spl_code8, null, '', ','|| awb.spl_code8)
      		||''|| decode(awb.spl_code9, null, '', ','|| awb.spl_code9)) as shipmentDescCode,
       nvl(ddt.TRF_PC,0) as qty,
       nvl(ddt.TRF_WT,0) as weightCode,
       ffm.cto as impCTO,
       '*' as expCTO
   		from 
     (SELECT DISTINCT msg.flt_key,
		    msg.flt_date,		  
		    shp.awb_no,
        shp.awb_date,
		    trf.cntg_flt_key,
		    trf.cntg_flt_date,
		    trf.UNLDG_PT,
		    trf.TRF_TYPE,
		    trf.TRF_PC,
		    trf.TRF_WT
		  FROM ddt_msg msg,		   
		    ddt_shp shp ,
		    ddt_shp_trf_dtl trf
		  WHERE 
		   shp.tr_no       =msg.tr_no
		  AND trf.sdoc_line_no= shp.doc_line_no
		  AND trf.tr_no       =msg.tr_no
      ) ddt
      LEFT JOIN 
      (  select  trn_ffm_msg.flt_key,trn_ffm_msg.flt_date,trn_ffm_shp.cto,trn_ffm_shp.awb_no,trn_ffm_shp.awb_date  from   trn_ffm_msg ,trn_ffm_shp
     where trn_ffm_msg.ffm_status='P' and trn_ffm_msg.tr_no=trn_ffm_shp.tr_no ) ffm
     ON ffm.flt_key ||#trnFltSfx#=ddt.flt_key and ffm.flt_date=ddt.flt_date and ddt.awb_no= ffm.awb_no  and ddt.awb_date=ffm.awb_date
      LEFT join awb on DDT.awb_no=awb.awb_no and ddt.awb_date=awb.awb_date
       		where 
        ddt.cntg_flt_date=TO_DATE(#fltDate#, 'DDMONYY') and ddt.cntg_flt_key=#fltKey# ||#trnFltSfx#
        AND ddt.UNLDG_PT=#unLdgPoint#
        and ddt.TRF_TYPE=#trtype#
	</select>	
	
	<select id="fetch_trn_transit_cpct_details" parameterClass="cargo.cms.trn.buildup.bo.TrnFlightAllotmentBO"  resultClass="cargo.cms.trn.buildup.bo.TrnFlightAllotmentBO">
		select elpallot.INSTRUCTION as instruction,'Y' as hardDelete,elpallot.QTY_Q7 as qtyQ7,elpallot.QTY_Q6 as qtyQ6,elpallot.QTY_X8 as qtyX8,
	    elpallot.QTY_PEB as qtyPEB,elpallot.QTY_H5 as qtyH5 ,elpallot.QTY_A2 as qtyA2 ,elpallot.QTY_LDC as qtyLDC ,elpallot.QTY_H2 as qtyH2 ,
	    'Transit CPCT' as cgoType,elpallot.rmk as rmk,elpmsg.TR_NO as trNo,elpport.DOC_LINE_NO as portDocLineNo,elpallot.DOC_LINE_NO as docLineNo,
	    elpallot.WT as wt,elpallot.H5WT as h5Wt
		from  trn_elp_msg elpmsg,trn_elp_port elpport,trn_elp_allot elpallot 
		where elpmsg.TR_NO=elpport.tr_no and elpmsg.tr_no=elpallot.tr_no and elpallot.port_doc_line_no=elpport.DOC_LINE_NO and  elpallot.CGO_TYPE='Transit CPCT' 
	    and elpport.port=#unLdgPoint# and elpmsg.flt_key=#fltKey# and elpmsg.flt_date=TO_DATE(#fltDate#, 'DDMONYY')
	  	<isNotEmpty property="trNo">
		AND elpmsg.TR_NO = #trNo#
		</isNotEmpty>
		
	    UNION ALL
	    
		select elpallot.INSTRUCTION as instruction,'Y' as hardDelete, elpallot.QTY_Q7 as qtyQ7,elpallot.QTY_Q6 as qtyQ6,elpallot.QTY_X8 as qtyX8,elpallot.QTY_PEB as qtyPEB, 
		elpallot.QTY_H5 as qtyH5 ,elpallot.QTY_A2 as qtyA2 ,elpallot.QTY_LDC as qtyLDC ,elpallot.QTY_H2 as qtyH2 , 'Transit HACTL' as cgoType,elpallot.rmk as rmk,elpmsg.TR_NO as trNo,
	    elpport.DOC_LINE_NO as portDocLineNo,elpallot.DOC_LINE_NO as docLineNo,	elpallot.WT as wt,	elpallot.H5WT as h5Wt
		from trn_elp_msg elpmsg,trn_elp_port elpport,trn_elp_allot elpallot where  elpmsg.TR_NO=elpport.tr_no 
		and elpmsg.tr_no=elpallot.tr_no and elpallot.port_doc_line_no=elpport.DOC_LINE_NO
		and  elpallot.CGO_TYPE='Transit HACTL' and elpport.port=#unLdgPoint# and elpmsg.flt_key=#fltKey# and elpmsg.flt_date=TO_DATE(#fltDate#, 'DDMONYY')
		<isNotEmpty property="trNo">
			AND elpmsg.TR_NO = #trNo#
		</isNotEmpty>
		
	</select>	
	
	<select id="fetch_trn_transit_summary_details" parameterClass="cargo.cms.trn.buildup.bo.TrnFlightAllotmentBO"  resultClass="cargo.cms.trn.buildup.bo.TrnFlightAllotmentBO">
				SELECT trn_fbl_shp.export_cto    AS expCTO,
		  'FBL'                          AS summaryType,
		  NVL(SUM(trn_fbl_shp.pcs),0)    AS qty,
		  NVL(SUM(trn_fbl_shp.net_wt),0) AS weightCode,
		  NULL                           AS qtLoosePc,
		  NULL                           AS qtLooseWeight,
		  NULL                           AS fullUldAllot,
		  (DECODE(ROUND((NVL(SUM(trn_fbl_shp.net_wt),0)/
		  (SELECT to_number(CODE_DESC)
		  FROM MAST_CODE_DTL
		  WHERE CODE= 'FBL_ALLOT_P'
		  )),0),'0','',((ROUND((NVL(SUM(trn_fbl_shp.net_wt),0)/
		  (SELECT to_number(CODE_DESC)
		  FROM MAST_CODE_DTL
		  WHERE CODE= 'FBL_ALLOT_P'
		  )),0)||'P')))) estFblQuotient,
		  (DECODE(ROUND((MOD(NVL(SUM(trn_fbl_shp.net_wt),0),
		  (SELECT to_number(CODE_DESC) FROM MAST_CODE_DTL WHERE CODE= 'FBL_ALLOT_P'
		  )) /
		  (SELECT to_number(CODE_DESC) FROM MAST_CODE_DTL WHERE CODE= 'FBL_ALLOT_A'
		  )),0),'0','',((ROUND((MOD(NVL(SUM(trn_fbl_shp.net_wt),0),
		  (SELECT to_number(CODE_DESC) FROM MAST_CODE_DTL WHERE CODE= 'FBL_ALLOT_P'
		  )) /
		  (SELECT to_number(CODE_DESC) FROM MAST_CODE_DTL WHERE CODE= 'FBL_ALLOT_A'
		  )),0))||#trnFltSfx#))) estFblRemainder
			FROM trn_fbl
			INNER JOIN trn_fbl_shp
			ON trn_fbl.tr_no = trn_fbl_shp.tr_no  and trn_fbl_shp.org!='HKG'  
			LEFT JOIN awb
			ON trn_fbl_shp.awb_no=awb.awb_no
			AND awb.awb_date     =trn_fbl_shp.awb_date
             LEFT JOIN
       (SELECT DISTINCT msg.flt_key,
		    msg.flt_date,		  
		    shp.awb_no,
        shp.awb_date,
		    trf.cntg_flt_key,
		    trf.cntg_flt_date,
		    trf.UNLDG_PT,
		    trf.TRF_TYPE,
		    trf.TRF_PC,
		    trf.TRF_WT
		  FROM ddt_msg msg,		   
		    ddt_shp shp ,
		    ddt_shp_trf_dtl trf
		  WHERE 
		   shp.tr_no       =msg.tr_no
		  AND trf.sdoc_line_no= shp.doc_line_no
		  AND trf.tr_no       =msg.tr_no
		  ) ddt  
      ON   trn_fbl.flt_key ||#trnFltSfx#=ddt.cntg_flt_key and trn_fbl.flt_date=ddt.cntg_flt_DATE
      and ddt.awb_no= trn_fbl_shp.awb_no and ddt.awb_date=trn_fbl_shp.awb_date
     ,
			 trn_elp_msg msg
			WHERE trn_fbl.flt_key    =#fltKey#
			AND trn_fbl.flt_date     = TO_DATE(#fltDate# , 'DDMONYY')
			AND trn_fbl_shp.unldg_pt =  #unLdgPoint#
			AND trn_fbl.si_type     IN('S','I')
			AND trn_fbl.fbl_status   ='P'
		AND trn_fbl.flt_key      =msg.flt_key
		AND trn_fbl.flt_date     = msg.flt_date
			AND trn_fbl.tr_no        = trn_fbl_shp.tr_no
		AND msg.tr_no           IN
			  (SELECT b.trNO
			 FROM
			   (SELECT rownum r,
			      a.trNo
			    FROM
			      (SELECT elpmsg.tr_no AS trNo
			      FROM trn_elp_msg elpmsg,
			        trn_fbl
			      where elpmsg.flt_key=#fltKey# and elpmsg.flt_date=TO_DATE(#fltDate#, 'DDMONYY')
			      ORDER BY to_number(elpmsg.tr_no)  desc
			      )a
			    WHERE rownum &lt;=2
			    ) b
			  WHERE r=#rownum#
			  )
			AND trn_fbl_shp.export_cto IS NOT NULL   
			GROUP BY trn_fbl_shp.export_cto
			UNION
			SELECT trn_ffm_shp.cto AS expCTO,
        'DDT' AS summaryType,
        (select nvl(SUM(SHP_TRF_PC),0) from 
        V_DDT_DTL 
        where 
        SHP_cntg_flt_date=ddt.cntg_flt_date and SHP_cntg_flt_key=ddt.cntg_flt_key and ddt.UNLDG_PT=SHP_UNLDG_PT
        and SHP_TRF_TYPE='QT') AS qty,
       (select nvl(SUM(SHP_TRF_WT),0) from 
        V_DDT_DTL 
        where 
        SHP_cntg_flt_date=ddt.cntg_flt_date and SHP_cntg_flt_key=ddt.cntg_flt_key and ddt.UNLDG_PT=SHP_UNLDG_PT
        and SHP_TRF_TYPE='QT' ) AS weightCode,
        (select nvl(SUM(SHP_TRF_PC),0) from 
        V_DDT_DTL 
          where 
         SHP_cntg_flt_date=ddt.cntg_flt_date and SHP_cntg_flt_key=ddt.cntg_flt_key and ddt.UNLDG_PT=SHP_UNLDG_PT
        and SHP_TRF_TYPE='QT' AND TRF_TYPE IS NULL ) AS qtLoosePc,
        (select nvl(SUM(SHP_TRF_WT),0) from 
        V_DDT_DTL 
          where 
         SHP_cntg_flt_date=ddt.cntg_flt_date and SHP_cntg_flt_key=ddt.cntg_flt_key and ddt.UNLDG_PT=SHP_UNLDG_PT
        and SHP_TRF_TYPE='QT' AND TRF_TYPE IS NULL ) AS qtLooseWeight,
       (  SELECT STRAGG(STRINGDELIM((COUNT(SUBSTR(ULD_KEY,0,3)))
    		|| (SELECT  uld_allot  FROM MAST_ULD_ALLOT_GROUP a, uld_group_type c where a.uld_group = c.uld_group and c.uld_type=SUBSTR(ULD_KEY,0,3) AND ROWNUM=1) ,','))
          FROM V_DDT_DTL
          WHERE SHP_cntg_flt_date  =ddt.cntg_flt_date
          AND SHP_cntg_flt_key     =ddt.cntg_flt_key
          AND ddt.UNLDG_PT=SHP_UNLDG_PT
          AND SUBSTR(ULD_KEY,0,3) IS NOT NULL
          AND SHP_TRF_TYPE         ='QT'
          AND TRF_TYPE            IS NOT NULL 
          GROUP BY ULD_KEY) AS fullUldAllot,
       (decode(ROUND((NVL(((select nvl(SUM(SHP_TRF_WT),0) from 
        V_DDT_DTL 
          where 
         SHP_cntg_flt_date=ddt.cntg_flt_date and SHP_cntg_flt_key=ddt.cntg_flt_key and ddt.UNLDG_PT=SHP_UNLDG_PT 
        and SHP_TRF_TYPE='QT' AND TRF_TYPE IS NULL)),0)/(SELECT to_number(CODE_DESC)  FROM MAST_CODE_DTL WHERE CODE= 'QT_ALLOT_P')),0),'0','',((ROUND((NVL(((select nvl(SUM(SHP_TRF_WT),0) from 
        V_DDT_DTL 
          where 
         SHP_cntg_flt_date=ddt.cntg_flt_date and SHP_cntg_flt_key=ddt.cntg_flt_key and ddt.UNLDG_PT=SHP_UNLDG_PT 
        and SHP_TRF_TYPE='QT' AND TRF_TYPE IS NULL)),0)/(SELECT to_number(CODE_DESC)  FROM MAST_CODE_DTL WHERE CODE= 'QT_ALLOT_P')),0))||'P'))) estFblQuotient,
       (decode(ROUND((MOD((NVL((select nvl(SUM(SHP_TRF_WT),0) from 
        V_DDT_DTL 
          where 
         SHP_cntg_flt_date=ddt.cntg_flt_date and SHP_cntg_flt_key=ddt.cntg_flt_key and ddt.UNLDG_PT=SHP_UNLDG_PT 
        and SHP_TRF_TYPE='QT' AND TRF_TYPE IS NULL),0)),(SELECT to_number(CODE_DESC)  FROM MAST_CODE_DTL WHERE CODE= 'QT_ALLOT_P'))
        /(SELECT to_number(CODE_DESC)  FROM MAST_CODE_DTL WHERE CODE= 'QT_ALLOT_A')),0),'0','',((ROUND((MOD((NVL((select nvl(SUM(SHP_TRF_WT),0) from 
        V_DDT_DTL 
          where 
         SHP_cntg_flt_date=ddt.cntg_flt_date and SHP_cntg_flt_key=ddt.cntg_flt_key and ddt.UNLDG_PT=SHP_UNLDG_PT 
        and SHP_TRF_TYPE='QT' AND TRF_TYPE IS NULL),0)),(SELECT to_number(CODE_DESC)  FROM MAST_CODE_DTL WHERE CODE= 'QT_ALLOT_P'))
        /(SELECT to_number(CODE_DESC)  FROM MAST_CODE_DTL WHERE CODE= 'QT_ALLOT_A')),0))||#trnFltSfx#))) estFblRemainder
        from 
        (select  msg.flt_key,msg.flt_date,uld.uld_key,shp.awb_no,shp.awb_date, trf.cntg_flt_key,trf.cntg_flt_date,trf.UNLDG_PT,trf.TRF_TYPE,trf.TRF_PC,trf.TRF_WT 
        from ddt_msg msg,ddt_uld uld ,ddt_shp shp ,
        ddt_shp_trf_dtl trf
        where uld.tr_no= msg.tr_no and uld.doc_line_no=shp.udoc_line_no
        and shp.tr_no=msg.tr_no and trf.sdoc_line_no= shp.doc_line_no  and
        trf.tr_no=msg.tr_no) ddt
          ,
          trn_ffm_msg join trn_ffm_shp on trn_ffm_msg.tr_no=trn_ffm_shp.tr_no,
          trn_elp_msg msg
   	where 
   	 trn_ffm_msg.flt_key || #trnFltSfx#=ddt.flt_key
            and trn_ffm_msg.flt_date = ddt.flt_date and
        ddt.cntg_flt_date=TO_DATE(#fltDate#, 'DDMONYY') and ddt.cntg_flt_key=#fltKey#||#trnFltSfx#
        AND ddt.UNLDG_PT=#unLdgPoint#
        and ddt.TRF_TYPE='QT'
        and trn_ffm_msg.flt_key ||#trnFltSfx#=ddt.flt_key and trn_ffm_msg.flt_date=ddt.flt_date
        and trn_ffm_shp.awb_no=ddt.awb_no
        AND ddt.cntg_flt_key   =msg.flt_key ||#trnFltSfx#
        AND ddt.cntg_flt_date    = msg.flt_date
        and msg.tr_no in(SELECT b.trNO FROM 
        (SELECT rownum r, a.trNo  FROM (select elpmsg.tr_no as trNo from  trn_elp_msg elpmsg where elpmsg.flt_key=#fltKey# and elpmsg.flt_date=TO_DATE(#fltDate#, 'DDMONYY')  order by to_number(elpmsg.tr_no) desc)a
		                WHERE rownum &lt;=2) b WHERE r=#rownum#)
        AND trn_ffm_shp.cto IS NOT NULL  AND trn_ffm_shp.awb_no=ddt.awb_no and trn_ffm_shp.awb_date=ddt.awb_date and trn_ffm_msg.ffm_status='P'
            
	</select>
	
	<select id="fetch_trn_tarmac_cpct_details" parameterClass="cargo.cms.trn.buildup.bo.TrnFlightAllotmentBO"  resultClass="cargo.cms.trn.buildup.bo.TrnFlightAllotmentBO">
		select elpallot.INSTRUCTION as instruction,'Y' as hardDelete,elpallot.QTY_Q7 as qtyQ7,elpallot.QTY_Q6 as qtyQ6,elpallot.QTY_X8 as qtyX8,
	    elpallot.QTY_PEB as qtyPEB,elpallot.QTY_H5 as qtyH5 ,elpallot.QTY_A2 as qtyA2 ,elpallot.QTY_LDC as qtyLDC ,elpallot.QTY_H2 as qtyH2 ,
	    'Tarmac CPCT' as cgoType,elpallot.rmk as rmk,elpmsg.TR_NO as trNo,elpport.DOC_LINE_NO as portDocLineNo,elpallot.DOC_LINE_NO as docLineNo,
	    elpallot.WT as wt,elpallot.H5WT as h5Wt
		from  trn_elp_msg elpmsg,trn_elp_port elpport,trn_elp_allot elpallot 
		where elpmsg.TR_NO=elpport.tr_no and elpmsg.tr_no=elpallot.tr_no and elpallot.port_doc_line_no=elpport.DOC_LINE_NO and  elpallot.CGO_TYPE='Tarmac CPCT' 
	    and elpport.port=#unLdgPoint# and elpmsg.flt_key=#fltKey# and elpmsg.flt_date=TO_DATE(#fltDate#, 'DDMONYY')
	  	<isNotEmpty property="trNo">
		AND elpmsg.TR_NO = #trNo#
		</isNotEmpty>
		
	    UNION ALL
	    
		select elpallot.INSTRUCTION as instruction,'Y' as hardDelete, elpallot.QTY_Q7 as qtyQ7,elpallot.QTY_Q6 as qtyQ6,elpallot.QTY_X8 as qtyX8,elpallot.QTY_PEB as qtyPEB, 
		elpallot.QTY_H5 as qtyH5 ,elpallot.QTY_A2 as qtyA2 ,elpallot.QTY_LDC as qtyLDC ,elpallot.QTY_H2 as qtyH2 , 'Tarmac HACTL' as cgoType,elpallot.rmk as rmk,elpmsg.TR_NO as trNo,
	    elpport.DOC_LINE_NO as portDocLineNo,elpallot.DOC_LINE_NO as docLineNo,	elpallot.WT as wt,	elpallot.H5WT as h5Wt
		from trn_elp_msg elpmsg,trn_elp_port elpport,trn_elp_allot elpallot where  elpmsg.TR_NO=elpport.tr_no 
		and elpmsg.tr_no=elpallot.tr_no and elpallot.port_doc_line_no=elpport.DOC_LINE_NO
		and  elpallot.CGO_TYPE='Tarmac HACTL' and elpport.port=#unLdgPoint# and elpmsg.flt_key=#fltKey# and elpmsg.flt_date=TO_DATE(#fltDate#, 'DDMONYY')
		<isNotEmpty property="trNo">
			AND elpmsg.TR_NO = #trNo#
		</isNotEmpty>
	</select>	
	
	<select id="fetch_trn_tarmac_summary_details" parameterClass="cargo.cms.trn.buildup.bo.TrnFlightAllotmentBO"  resultClass="cargo.cms.trn.buildup.bo.TrnFlightAllotmentBO">
	SELECT distinct trn_ffm_shp.cto                       AS expCTO,
        (select nvl(SUM(SHP_TRF_PC),0) from 
        V_DDT_DTL 
        where 
        SHP_cntg_flt_date=ddt.cntg_flt_date and SHP_cntg_flt_key=ddt.cntg_flt_key and ddt.UNLDG_PT=SHP_UNLDG_PT
        and SHP_TRF_TYPE='TT'  ) AS ttPc,
      (select nvl(SUM(SHP_TRF_WT),0) from 
        V_DDT_DTL 
        where 
        SHP_cntg_flt_date=ddt.cntg_flt_date and SHP_cntg_flt_key=ddt.cntg_flt_key and ddt.UNLDG_PT=SHP_UNLDG_PT
        and SHP_TRF_TYPE='TT' ) AS ttWeight,
       (select nvl(SUM(SHP_TRF_PC),0) from 
        V_DDT_DTL 
          where 
         SHP_cntg_flt_date=ddt.cntg_flt_date and SHP_cntg_flt_key=ddt.cntg_flt_key and ddt.UNLDG_PT=SHP_UNLDG_PT
        and SHP_TRF_TYPE='TT'  AND TRF_TYPE IS NULL) AS ttLoosePc,
        (select nvl(SUM(SHP_TRF_WT),0) from 
        V_DDT_DTL 
          where 
         SHP_cntg_flt_date=ddt.cntg_flt_date and SHP_cntg_flt_key=ddt.cntg_flt_key  and ddt.UNLDG_PT=SHP_UNLDG_PT
        and SHP_TRF_TYPE='TT'  AND TRF_TYPE IS NULL) AS ttLooseWeight,
        (  SELECT STRAGG(STRINGDELIM((COUNT(SUBSTR(ULD_KEY,0,3)))
          || (SELECT  uld_allot  FROM MAST_ULD_ALLOT_GROUP a, uld_group_type c where a.uld_group = c.uld_group and c.uld_type=SUBSTR(ULD_KEY,0,3) AND ROWNUM=1) ,','))
          FROM V_DDT_DTL
          WHERE SHP_cntg_flt_date  =ddt.cntg_flt_date
          AND SHP_cntg_flt_key     =ddt.cntg_flt_key
          AND ddt.UNLDG_PT=SHP_UNLDG_PT
          AND SUBSTR(ULD_KEY,0,3) IS NOT NULL
          AND SHP_TRF_TYPE         ='TT'
         
          AND TRF_TYPE            IS NOT NULL
          GROUP BY ULD_KEY) AS ttfullUldAllot,
        (DECODE(ROUND((NVL(((select nvl(SUM(SHP_TRF_WT),0) from 
        V_DDT_DTL 
        where 
        SHP_cntg_flt_date=ddt.cntg_flt_date and SHP_cntg_flt_key=ddt.cntg_flt_key and ddt.UNLDG_PT=SHP_UNLDG_PT 
        and SHP_TRF_TYPE='TT' AND TRF_TYPE IS NULL)),0)/(SELECT to_number(CODE_DESC)  FROM MAST_CODE_DTL WHERE CODE= 'TT_ALLOT')),0),'0','',((ROUND((NVL(((select nvl(SUM(SHP_TRF_WT),0) from 
        V_DDT_DTL 
        where 
        SHP_cntg_flt_date=ddt.cntg_flt_date and SHP_cntg_flt_key=ddt.cntg_flt_key and ddt.UNLDG_PT=SHP_UNLDG_PT 
        and SHP_TRF_TYPE='TT' AND TRF_TYPE IS NULL)),0)/(SELECT to_number(CODE_DESC)  FROM MAST_CODE_DTL WHERE CODE= 'TT_ALLOT')),0))||'H5'))) AS ttestOutput,
       (select nvl(SUM(SHP_TRF_PC),0) from 
        V_DDT_DTL 
        where 
        SHP_cntg_flt_date=ddt.cntg_flt_date and SHP_cntg_flt_key=ddt.cntg_flt_key and ddt.UNLDG_PT=SHP_UNLDG_PT 
        and SHP_TRF_TYPE='IF') AS ifPc,
      (select nvl(SUM(SHP_TRF_WT),0) from 
        V_DDT_DTL 
        where 
        SHP_cntg_flt_date=ddt.cntg_flt_date and SHP_cntg_flt_key=ddt.cntg_flt_key and ddt.UNLDG_PT=SHP_UNLDG_PT 
        and SHP_TRF_TYPE='IF') AS ifWeight,
        (select nvl(SUM(SHP_TRF_PC),0) from 
        V_DDT_DTL 
          where 
         SHP_cntg_flt_date=ddt.cntg_flt_date and SHP_cntg_flt_key=ddt.cntg_flt_key  and ddt.UNLDG_PT=SHP_UNLDG_PT 
        and SHP_TRF_TYPE='IF' AND TRF_TYPE IS NULL) AS ifLoosePc,
        (select nvl(SUM(SHP_TRF_WT),0) from 
        V_DDT_DTL 
          where 
         SHP_cntg_flt_date=ddt.cntg_flt_date and SHP_cntg_flt_key=ddt.cntg_flt_key  and ddt.UNLDG_PT=SHP_UNLDG_PT 
        and SHP_TRF_TYPE='IF' AND TRF_TYPE IS NULL) AS ifLooseWeight,
        (  SELECT STRAGG(STRINGDELIM((COUNT(SUBSTR(ULD_KEY,0,3)))
          || (SELECT  uld_allot  FROM MAST_ULD_ALLOT_GROUP a, uld_group_type c where a.uld_group = c.uld_group and c.uld_type=SUBSTR(ULD_KEY,0,3) AND ROWNUM=1) ,','))
          FROM V_DDT_DTL
          WHERE SHP_cntg_flt_date  =ddt.cntg_flt_date
          AND SHP_cntg_flt_key     =ddt.cntg_flt_key
          AND ddt.UNLDG_PT=SHP_UNLDG_PT
        
          AND SUBSTR(ULD_KEY,0,3) IS NOT NULL
          AND SHP_TRF_TYPE         ='IF'
          AND TRF_TYPE            IS NOT NULL
          GROUP BY ULD_KEY) AS iffullUldAllot,
        (DECODE(ROUND((NVL(((select nvl(SUM(SHP_TRF_WT),0) from 
        V_DDT_DTL 
          where 
        SHP_cntg_flt_date=ddt.cntg_flt_date and SHP_cntg_flt_key=ddt.cntg_flt_key and ddt.UNLDG_PT=SHP_UNLDG_PT 
        and SHP_TRF_TYPE='IF' AND TRF_TYPE IS NULL)),0)/(SELECT to_number(CODE_DESC)  FROM MAST_CODE_DTL WHERE CODE= 'IF_ALLOT')),0),'0','',((ROUND((NVL(((select nvl(SUM(SHP_TRF_WT),0) from 
        V_DDT_DTL 
          where 
        SHP_cntg_flt_date=ddt.cntg_flt_date and SHP_cntg_flt_key=ddt.cntg_flt_key and ddt.UNLDG_PT=SHP_UNLDG_PT 
        and SHP_TRF_TYPE='IF' AND TRF_TYPE IS NULL)),0)/(SELECT to_number(CODE_DESC)  FROM MAST_CODE_DTL WHERE CODE= 'IF_ALLOT')),0))||'H5'))) AS ifestOutput
      FROM  trn_elp_msg msg,            
      trn_ffm_msg join trn_ffm_shp on trn_ffm_msg.tr_no=trn_ffm_shp.tr_no, 
      (select  msg.flt_key,msg.flt_date,uld.uld_key,shp.awb_no,shp.awb_date, trf.cntg_flt_key,trf.cntg_flt_date,trf.UNLDG_PT,trf.TRF_TYPE,trf.TRF_PC,trf.TRF_WT from ddt_msg msg,ddt_uld uld ,ddt_shp shp ,
        ddt_shp_trf_dtl trf
        where uld.tr_no= msg.tr_no and uld.doc_line_no=shp.udoc_line_no
        and shp.tr_no=msg.tr_no and trf.sdoc_line_no= shp.doc_line_no  and
        trf.tr_no=msg.tr_no) ddt 
            WHERE 
            trn_ffm_msg.flt_key || (SELECT TRN_FLT_SUFFIX FROM SYS_PARAM)=ddt.flt_key
            and trn_ffm_msg.flt_date = ddt.flt_date and
            ddt.cntg_flt_key    =#fltKey# ||(SELECT TRN_FLT_SUFFIX FROM SYS_PARAM)
            AND ddt.cntg_flt_date     = TO_DATE(#fltDate#, 'DDMONYY')
            AND ddt.UNLDG_PT = #unLdgPoint#
            AND ddt.cntg_flt_key    =msg.flt_key ||(SELECT TRN_FLT_SUFFIX FROM SYS_PARAM)
            AND ddt.cntg_flt_date     = msg.flt_date
            and msg.tr_no in(SELECT b.trNO FROM 
        (SELECT rownum r, a.trNo  FROM (select elpmsg.tr_no as trNo from  trn_elp_msg elpmsg where elpmsg.flt_key=#fltKey# and elpmsg.flt_date=TO_DATE(#fltDate#, 'DDMONYY')  order by to_number(elpmsg.tr_no) desc)a
		                WHERE rownum &lt;=2) b WHERE r=#rownum#)
      AND trn_ffm_shp.cto IS NOT NULL and trn_ffm_msg.ffm_status='P'
      AND trn_ffm_shp.awb_no=ddt.awb_no and trn_ffm_shp.awb_date=ddt.awb_date 
	
	</select>
	
	<select id="fetch_trn_handled_cto" parameterClass="cargo.cms.trn.buildup.bo.TrnFlightAllotmentBO"  resultClass="cargo.cms.trn.buildup.bo.TrnFlightAllotmentBO">
	   select EXP_LOCAL_PPK expLocPpkCTO,MAIL mailCTO,EXP_LOCAL_BU expLocBuCTO,COURIER couCTO,OPEN openCTO,EIC eicCTO from trn_setup a join  trn_setup_eload b on a.tr_no=b.tr_no 
	   where TO_DATE(#fltDate#, 'DDMONYY') BETWEEN PERIOD_FRM AND PERIOD_TO
	</select>
	
	<select id="fetchTrnUldAllotType" parameterClass="java.lang.String"  resultClass="java.lang.String">	
   	  SELECT  uld_allot  FROM MAST_ULD_ALLOT_GROUP a, uld_group_type c where a.uld_group = c.uld_group and c.uld_type=#flightAllotTypeFirst# 
   	</select>
		
	<select id="checkTrnMaintainFltAllot" parameterClass="java.util.HashMap"  resultClass="java.lang.Integer">
	 select count(1)
	from TRN_elp_msg elpmsg where elpmsg.flt_key=#fltKey# and elpmsg.flt_date=TO_DATE(#fltDate#, 'DDMONYY')
	</select>  
	
	<select id="checkFltAllotDtl" parameterClass="java.util.HashMap"  resultClass="java.lang.Integer">
		 select count(1)
		 from  trn_elp_msg elpmsg,trn_elp_port elpport,trn_elp_allot elpallot 
		 where elpmsg.TR_NO=elpport.tr_no and elpmsg.tr_no=elpallot.tr_no 
	     and elpallot.port_doc_line_no=elpport.DOC_LINE_NO 
		 and elpport.port=#unLdgPoint# and elpmsg.flt_key=#fltKey# 
	     and elpmsg.flt_date=TO_DATE(#fltDate#, 'DDMONYY')
		 and elpallot.cgo_type=#cgoType#
		 <isNotEmpty property="trNo">
			AND elpmsg.TR_NO = #trNo#
		 </isNotEmpty>
	</select> 
	
	<select id="fetch_trn_elp_allot_awb" parameterClass="cargo.cms.trn.buildup.bo.TrnFlightAllotmentBO"  resultClass="cargo.cms.trn.buildup.bo.TrnFlightAllotmentBO">   	
		select DOC_LINE_NO as awbDocLineNo,AWB_NO as awbNo,PCS as awbPcs,WT as awbWt,INSTRUCTION as awbInstruction,TR_NO as trNo,C_DOC_LINE_NO as docLineNo,
		substr(AWB_NO,0,3) as awbNoPfx,substr(AWB_NO,4) as awbNoSfx from trn_elp_allot_awb	where tr_no=#trNo# and c_doc_line_no=#docLineNo#
   	</select>   
   	<select id="fetch_all_trn_elp_allot_awb" parameterClass="cargo.cms.trn.buildup.bo.TrnFlightAllotmentBO"  resultClass="cargo.cms.trn.buildup.bo.TrnFlightAllotmentBO">   	
		select DOC_LINE_NO as awbDocLineNo,AWB_NO as awbNo,PCS as awbPcs,WT as awbWt,INSTRUCTION as awbInstruction,TR_NO as trNo,C_DOC_LINE_NO as docLineNo,
		substr(AWB_NO,0,3) as awbNoPfx,substr(AWB_NO,4) as awbNoSfx from trn_elp_allot_awb	where tr_no=#trNo# 
   	</select> 
		
	<select id="fetch_trn_elp_msg_seq" resultClass="java.lang.String">	
   	 select trn_elp_msg_seq.nextval from dual
   	</select>
   	<select id="fetch_trn_elp_port_seq" resultClass="java.lang.String">	
   	 select trn_elp_port_seq.nextval from dual
   	</select>
		<insert id="insert_trn_elp_allot_awb" parameterClass="cargo.cms.trn.buildup.bo.TrnFlightAllotmentBO">
	 insert into trn_elp_allot_awb  (TR_NO, 	C_DOC_LINE_NO,	DOC_LINE_NO , 	AWB_NO , 	PCS , 	WT , 	INSTRUCTION, 	CR_USER_ID , 	CR_DATE , 	LM_USER_ID , 	LM_DATE  )values(#trNo#, 
	#docLineNo#, 	trn_ELP_ALLOT_AWB_SEQ.NEXTVAL , 	#awbNo# , 	#awbPcs# , 	#awbWt# ,	#awbInstruction#, 	 	#crUserId# ,	SYSDATE , 	#lmUserId# , 	SYSDATE )
 	</insert>
	
	<update id="update_trn_elp_allot_awb" parameterClass="cargo.cms.trn.buildup.bo.TrnFlightAllotmentBO" >
 	  update trn_elp_allot_awb set 	AWB_NO=#awbNo# , 	PCS =#awbPcs#, 	WT=	#awbWt#  , 	INSTRUCTION=#awbInstruction# ,LM_USER_ID=#lmUserId# , LM_DATE=	SYSDATE where DOC_LINE_NO=#awbDocLineNo#
 	</update>  	
 	<delete id="delete_trn_elp_allot_awb" parameterClass="cargo.cms.trn.buildup.bo.TrnFlightAllotmentBO">		        	
	  delete from trn_elp_allot_awb where c_doc_line_no=#docLineNo#
    </delete>
		<insert id="insert_trn_elp_summary" parameterClass="cargo.cms.trn.buildup.bo.TrnFlightAllotmentBO">
	 insert into trn_ELP_SUMMARY    (	FLT_KEY, 	FLT_DATE, 	VER_NO , 	ALLOT_TYPE , 	SUMMARY, 	CR_USER_ID , 	CR_DATE ,	LM_USER_ID , 	LM_DATE ) values(#fltKey#,#fltDate#,#versionNo#,#allotType#,#summary#,#crUserId#,SYSDATE,#lmUserId#,SYSDATE)
 	</insert>
 		<select id="fetch_trn_elp_allot_seq" resultClass="java.lang.String">	
   	 select trn_ELP_ALLOT_SEQ.NEXTVAL from dual
   	</select>
   	<!-- insert data to edi_elp table starts -->
	<select id="fetch_trn_msg_data" parameterClass="cargo.cms.trn.buildup.bo.TrnFlightAllotmentBO"  resultClass="cargo.cms.trn.buildup.bo.TrnFlightAllotmentBO">   
		select TR_NO trNo,	FLT_KEY fltKey, 	TO_CHAR(FLT_DATE,'DDMONYY') fltDate, 	VER_NO versionNo, 	CALL_SIGN callSign, 	ACFT_TYPE acftType, 
		  BAGGAGE_NO baggageNo, 	TRF_IND transferInd, 	TRF_USER_ID transferUserId, LM_USER_ID lmUserId,
		  TO_CHAR(TRF_DATE,'DDMONYY') transferDate, 	CR_USER_ID crUserId, 	TO_CHAR(CR_DATE,'DDMONYY') crDate, TO_CHAR(LM_DATE,'DDMONYY') lmDate, 	
		  UCO_RMK ucoRmk, EXCEED exceed,FINALIZE_IND finalizeInd,LOAD_PLAN_FINALIZE messageFinalizeInd,
		  LOAD_PLAN_IND loadPlanInd, TR_TYPE trtype
		from trn_elp_msg where flt_key=#fltKey#
		  AND FLT_DATE=TO_DATE(#fltDate#, 'DDMONYY') AND TRF_IND=#transferInd#
		  AND TR_NO=#trNo#
	</select>	
	<select id="fetch_trn_port_data" parameterClass="cargo.cms.trn.buildup.bo.TrnFlightAllotmentBO"  resultClass="cargo.cms.trn.buildup.bo.TrnFlightAllotmentBO">   
		select TR_NO trNo, DOC_LINE_NO	portDocLineNo , 	PORT unLdgPoint, 	CR_USER_ID crUserId, 	TO_CHAR(CR_DATE,'DDMONYY') crDate, 	LM_USER_ID lmUserId, 	TO_CHAR(LM_DATE,'DDMONYY') lmDate
  		from trn_elp_port where TR_NO=#trNo# and PORT=#unLdgPoint#
	</select>	
	<select id="fetch_trn_allot_data" parameterClass="cargo.cms.trn.buildup.bo.TrnFlightAllotmentBO"  resultClass="cargo.cms.trn.buildup.bo.TrnFlightAllotmentBO">   
		  select TR_NO trNo, DOC_LINE_NO	docLineNo , 	PORT_DOC_LINE_NO portDocLineNo , 	CGO_TYPE cgoType, 	INSTRUCTION instruction, 	QTY_Q7 qtyQ7 , 
  			QTY_Q6 qtyQ6, QTY_X8 qtyX8,  QTY_PEB qtyPEB, 	QTY_H5 qtyH5, QTY_A2 qtyA2 ,QTY_LDC qtyLDC ,QTY_H2 qtyH2,
			WT wt, H5WT h5Wt,	RMK rmk, 	CR_USER_ID crUserId , 	TO_CHAR(CR_DATE,'DDMONYY') crDate, 	LM_USER_ID lmUserId , 	TO_CHAR(LM_DATE,'DDMONYY') lmDate 
  		from trn_elp_allot where TR_NO=#trNo# and PORT_DOC_LINE_NO=#portDocLineNo#
  			and handling_terminal =('CPCT')
  			  UNION
  			 select TR_NO trNo, DOC_LINE_NO	docLineNo , 	PORT_DOC_LINE_NO portDocLineNo , 	CGO_TYPE cgoType, 	INSTRUCTION instruction, 	QTY_Q7 qtyQ7 , 
  			QTY_Q6 qtyQ6, QTY_X8 qtyX8,  QTY_PEB qtyPEB, 	QTY_H5 qtyH5, QTY_A2 qtyA2 ,QTY_LDC qtyLDC ,QTY_H2 qtyH2,
			WT wt, H5WT h5Wt,	RMK rmk, 	CR_USER_ID crUserId , 	TO_CHAR(CR_DATE,'DDMONYY') crDate, 	LM_USER_ID lmUserId , 	TO_CHAR(LM_DATE,'DDMONYY') lmDate 
  		from trn_elp_allot where TR_NO=#trNo# and PORT_DOC_LINE_NO=#portDocLineNo#
  			and CGO_TYPE='Transit PPK'  
  			
  			
	</select>	
		
	<select id="fetch_trn_summary_data" parameterClass="cargo.cms.trn.buildup.bo.TrnFlightAllotmentBO"  resultClass="cargo.cms.trn.buildup.bo.TrnFlightAllotmentBO">   
    select FLT_KEY fltKey, 	TO_CHAR(FLT_DATE,'DDMONYY') fltDate, 	VER_NO versionNo, 	ALLOT_TYPE allotType, 	
    SUMMARY summary, 	CR_USER_ID crUserId, 	TO_CHAR(CR_DATE,'DDMONYY') crDate,	LM_USER_ID lmUserId, 	TO_CHAR(LM_DATE,'DDMONYY') lmDate 
    from trn_ELP_SUMMARY
    where FLT_KEY=#fltKey# and FLT_DATE=#fltDate# AND VER_NO=#versionNo#
	</select>	
	
	<select id="checkTrnoForTransfer" parameterClass="cargo.cms.trn.buildup.bo.TrnFlightAllotmentBO"  resultClass="java.lang.Integer">   
        select count(1) from trn_elp_msg where flt_key=#fltKey# AND FLT_DATE=TO_DATE(#fltDate#, 'DDMONYY') and TRF_IND='Y' and VER_NO=#versionNo#
	</select>	
	
	<select id="checkEdiBeforeConfirm" parameterClass="cargo.cms.trn.buildup.bo.TrnFlightAllotmentBO"  resultClass="java.lang.Integer">   
        select count(1) from edi_elp_msg where tr_no=#trNo# and flt_key=#fltKey#||(SELECT TRN_FLT_SUFFIX FROM SYS_PARAM) AND FLT_DATE=TO_DATE(#fltDate#, 'DDMONYY') and VER_NO=#versionNo# and TRF_IND='Y'
	</select>		
		
	<select id="fetch_enq_flight_list_detailsCpct" parameterClass="cargo.cms.trn.buildup.bo.EnqTrnFlightAllotmentBO"  resultClass="cargo.cms.trn.buildup.bo.EnqTrnFlightListBO">   
  select opr.FLT_KEY                AS fltKey,
  TO_CHAR(opr.SCH_DATE,'DDMONYY') AS fltDate,
  (ltrim(SUBSTR(TRIM(TO_CHAR(opr.SCH_TIME,'0000')),0,2)
  || ':'
  || SUBSTR(TRIM(TO_CHAR(opr.SCH_TIME,'0000')),3,2),':')) std,
  PKG_COMMON.get_flt_eta(opr.FLT_KEY, opr.SCH_DATE, 'D') etd,
  opr.dest      AS dest,
  opr.ACFT_TYPE AS acType,
  ver_no as verNo,
  trf_ind as alltTranfInd,
  LOAD_PLAN_IND as loadPlanInd  
  FROM (select * from
(select t.*, dense_rank() over (partition by flt_key, flt_date order by to_number(tr_no) desc) rank from trn_elp_msg t ) where rank = 1) 
 msg ,
  trn_FLT_OPR opr

 <isNotEmpty property="unldgPt1" >
                                     <isEmpty property="unldgPt2" >
                                           <isEmpty property="unldgPt3" >
                                           INNER JOIN trn_FLT_OPR_LEG LEG
											ON OPR.TR_NO = LEG.TR_NO
                                           AND (OFF_POINT =#unldgPt1#)
                                           </isEmpty>                                
                                     </isEmpty>          
                     </isNotEmpty>                 
                     <isNotEmpty property="unldgPt1" >
                                     <isNotEmpty property="unldgPt2" >
                                           <isEmpty property="unldgPt3" >
                                            INNER JOIN trn_FLT_OPR_LEG LEG
											ON OPR.TR_NO = LEG.TR_NO
                                           AND (OFF_POINT =#unldgPt1# OR OFF_POINT =#unldgPt2#)
                                           </isEmpty>                                
                                     </isNotEmpty>             
                     </isNotEmpty>
                      <isNotEmpty property="unldgPt1" >
                                     <isNotEmpty property="unldgPt2" >
                                           <isNotEmpty property="unldgPt3" >
                                            INNER JOIN trn_FLT_OPR_LEG LEG
											ON OPR.TR_NO = LEG.TR_NO
                                           AND (OFF_POINT =#unldgPt1# OR OFF_POINT =#unldgPt2# OR OFF_POINT =#unldgPt3#)
                                           </isNotEmpty>                                   
                                     </isNotEmpty>             
                     </isNotEmpty>                 
                     <isEmpty property="unldgPt1" >
                                     <isNotEmpty property="unldgPt2" >
                                           <isNotEmpty property="unldgPt3" >
                                            INNER JOIN trn_FLT_OPR_LEG LEG
											ON OPR.TR_NO = LEG.TR_NO
                                           AND (OFF_POINT =#unldgPt2# OR OFF_POINT =#unldgPt3#)
                                           </isNotEmpty>                                   
                                     </isNotEmpty>             
                     </isEmpty>
                     <isEmpty property="unldgPt1" >
                                     <isEmpty property="unldgPt2" >
                                           <isNotEmpty property="unldgPt3" >
                                            INNER JOIN trn_FLT_OPR_LEG LEG
											ON OPR.TR_NO = LEG.TR_NO
                                           AND (OFF_POINT =#unldgPt3#)
                                           </isNotEmpty>                                   
                                     </isEmpty>          
                     </isEmpty>
                      <isNotEmpty property="unldgPt1" >
                                     <isEmpty property="unldgPt2" >
                                           <isNotEmpty property="unldgPt3" >
                                            INNER JOIN trn_FLT_OPR_LEG LEG
											ON OPR.TR_NO = LEG.TR_NO
                                           AND (OFF_POINT =#unldgPt1# OR OFF_POINT =#unldgPt3#)
                                           </isNotEmpty>                                   
                                     </isEmpty>          
                     </isNotEmpty>
where TO_DATE(TO_CHAR(opr.SCH_DATE,'DDMONYY')|| LPAD(opr.SCH_TIME,4,'0'),'DDMONYYHH24MI') &gt;= to_date(#fromFltDate#, 'DDMONYYHH24MI')
and TO_DATE(TO_CHAR(opr.SCH_DATE,'DDMONYY')|| LPAD(opr.SCH_TIME,4,'0'),'DDMONYYHH24MI')&lt;= to_date(#toFltDate#, 'DDMONYYHH24MI')
AND OPR.FLT_TYPE ='D'
AND msg.flt_key  =opr.FLT_KEY
AND msg.flt_date =opr.SCH_DATE
AND msg.ver_no  IS NOT NULL
<isNotEmpty property="fltKey" prepend="AND">
            opr.FLT_KEY= #fltKey#
            </isNotEmpty> 
 order by opr.SCH_DATE,opr.SCH_TIME,opr.EST_TIME,opr.dest
</select>  


<select id="getEnqFlightAllotmentHeaderCpct" parameterClass="cargo.cms.trn.buildup.bo.EnqTrnFlightAllotmentBO"  resultClass="cargo.cms.trn.buildup.bo.EnqTrnFlightAllotmentBO">
      select * from (select PKG_COMMON.get_flt_eta(opr.flt_key, opr.SCH_DATE, 'D') as etd,opr.TR_NO as oprTrNo
     ,  elpmsg.CALL_SIGN as callSign, elpmsg.acft_type as acftType,elpmsg.exceed as exceed,elpmsg.uco_rmk as ucoRmk,elpmsg.VER_NO as versionNo,elpmsg.TR_NO as trNo,
      elpmsg.BAGGAGE_NO as  baggageNo,elpmsg.load_plan_finalize AS finalized, to_char(elpmsg.RECEIVE_DATE,'DDMONYY HH24:MI') as reciveDate,elpmsg.trf_ind AS trfInd,elpmsg.finalize_ind as finalizedInd 
      from trn_flt_opr opr LEFT OUTER JOIN trn_elp_msg elpmsg  ON elpmsg.flt_key=opr.flt_key and to_char(elpmsg.flt_date, 'DDMONYY')=to_char(opr.sch_date, 'DDMONYY')   where
     opr.flt_key=#fltKey# and opr.sch_date=TO_DATE(#fltDate#, 'DDMONYY') and opr.flt_type = 'D' order by  to_number(elpmsg.tr_no) desc) where rownum=1
</select>
      
<select id="getEnqFlightAllotmentDetailsCpct" parameterClass="cargo.cms.trn.buildup.bo.EnqTrnFlightAllotmentBO"  resultClass="cargo.cms.trn.buildup.bo.EnqTrnFlightAllotmentBO">
      select elpallot.INSTRUCTION as instruction,'Y' as hardDelete, elpallot.QTY_Q7 as qtyQ7,elpallot.QTY_Q6 as qtyQ6,elpallot.QTY_X8 as qtyX8,elpallot.QTY_PEB as qtyPEB, 
      elpallot.QTY_H5 as qtyH5 ,elpallot.QTY_A2 as qtyA2 ,elpallot.QTY_LDC as qtyLDC ,elpallot.QTY_H2 as qtyH2 , 'Transit' as cgoType,elpallot.rmk as rmk,elpmsg.TR_NO as trNo,
      elpport.DOC_LINE_NO as portDocLineNo,elpallot.DOC_LINE_NO as docLineNo, elpallot.WT as wt,   elpallot.H5WT as h5Wt
      from trn_elp_msg elpmsg,trn_elp_port elpport,trn_elp_allot elpallot where  elpmsg.TR_NO=elpport.tr_no and elpmsg.tr_no=elpallot.tr_no and elpallot.port_doc_line_no=elpport.DOC_LINE_NO
      and  elpallot.CGO_TYPE='Transit' and elpport.port=#unLdgPoint# and elpmsg.flt_key=#fltKey# and elpmsg.flt_date=TO_DATE(#fltDate#, 'DDMONYY')
      <isNotEmpty property="trNo">
            AND elpmsg.TR_NO = #trNo#
      </isNotEmpty>     
      <isNotEmpty property="versionNo">
            AND elpmsg.ver_no = #versionNo#
      </isNotEmpty>
      UNION ALL
      select elpallot.INSTRUCTION as instruction,'Y' as hardDelete, elpallot.QTY_Q7 as qtyQ7,elpallot.QTY_Q6 as qtyQ6,elpallot.QTY_X8 as qtyX8,elpallot.QTY_PEB as qtyPEB, 
      elpallot.QTY_H5 as qtyH5 ,elpallot.QTY_A2 as qtyA2 ,elpallot.QTY_LDC as qtyLDC ,elpallot.QTY_H2 as qtyH2 , 'Export Local B/U' as cgoType,elpallot.rmk as rmk,elpmsg.TR_NO as trNo,
      elpport.DOC_LINE_NO as portDocLineNo,elpallot.DOC_LINE_NO as docLineNo, elpallot.WT as wt,   elpallot.H5WT as h5Wt
      from trn_elp_msg elpmsg,trn_elp_port elpport,trn_elp_allot elpallot where  elpmsg.TR_NO=elpport.tr_no 
      and elpmsg.tr_no=elpallot.tr_no and elpallot.port_doc_line_no=elpport.DOC_LINE_NO
      and  elpallot.CGO_TYPE='Export Local B/U' and elpport.port=#unLdgPoint# and elpmsg.flt_key=#fltKey# and elpmsg.flt_date=TO_DATE(#fltDate#, 'DDMONYY')
      <isNotEmpty property="trNo">
            AND elpmsg.TR_NO = #trNo#
      </isNotEmpty>
      <isNotEmpty property="versionNo">
            AND elpmsg.ver_no = #versionNo#
      </isNotEmpty>
      UNION ALL
      select elpallot.INSTRUCTION as instruction,'Y' as hardDelete, elpallot.QTY_Q7 as qtyQ7,elpallot.QTY_Q6 as qtyQ6,elpallot.QTY_X8 as qtyX8,elpallot.QTY_PEB as qtyPEB, 
      elpallot.QTY_H5 as qtyH5 ,elpallot.QTY_A2 as qtyA2 ,elpallot.QTY_LDC as qtyLDC ,elpallot.QTY_H2 as qtyH2 , 'Export Local Pre-Pack' as cgoType,elpallot.rmk as rmk,elpmsg.TR_NO as trNo,
      elpport.DOC_LINE_NO as portDocLineNo,elpallot.DOC_LINE_NO as docLineNo, elpallot.WT as wt,   elpallot.H5WT as h5Wt
      from trn_elp_msg elpmsg,trn_elp_port elpport,trn_elp_allot elpallot where  elpmsg.TR_NO=elpport.tr_no 
      and elpmsg.tr_no=elpallot.tr_no and elpallot.port_doc_line_no=elpport.DOC_LINE_NO
      and  elpallot.CGO_TYPE='Export Local Pre-Pack'and elpport.port=#unLdgPoint# and elpmsg.flt_key=#fltKey# and elpmsg.flt_date=TO_DATE(#fltDate#, 'DDMONYY')
      <isNotEmpty property="trNo">
            AND elpmsg.TR_NO = #trNo#
      </isNotEmpty>
      <isNotEmpty property="versionNo">
            AND elpmsg.ver_no = #versionNo#
      </isNotEmpty>
      UNION ALL
      select elpallot.INSTRUCTION as instruction,'Y' as hardDelete, elpallot.QTY_Q7 as qtyQ7,elpallot.QTY_Q6 as qtyQ6,elpallot.QTY_X8 as qtyX8,elpallot.QTY_PEB as qtyPEB, 
      elpallot.QTY_H5 as qtyH5 ,elpallot.QTY_A2 as qtyA2 ,elpallot.QTY_LDC as qtyLDC ,elpallot.QTY_H2 as qtyH2 , 'Transit PPK' as cgoType,elpallot.rmk as rmk,elpmsg.TR_NO as trNo,
      elpport.DOC_LINE_NO as portDocLineNo,elpallot.DOC_LINE_NO as docLineNo, elpallot.WT as wt,   elpallot.H5WT as h5Wt
      from trn_elp_msg elpmsg,trn_elp_port elpport,trn_elp_allot elpallot where  elpmsg.TR_NO=elpport.tr_no 
      and elpmsg.tr_no=elpallot.tr_no and elpallot.port_doc_line_no=elpport.DOC_LINE_NO
      and  elpallot.CGO_TYPE='Transit PPK' and elpport.port=#unLdgPoint# and elpmsg.flt_key=#fltKey# and elpmsg.flt_date=TO_DATE(#fltDate#, 'DDMONYY')
      <isNotEmpty property="trNo">
            AND elpmsg.TR_NO = #trNo#
      </isNotEmpty>
      <isNotEmpty property="versionNo">
            AND elpmsg.ver_no = #versionNo#
      </isNotEmpty>
      UNION ALL
      select elpallot.INSTRUCTION as instruction,'Y' as hardDelete, elpallot.QTY_Q7 as qtyQ7,elpallot.QTY_Q6 as qtyQ6,elpallot.QTY_X8 as qtyX8,elpallot.QTY_PEB as qtyPEB, 
      elpallot.QTY_H5 as qtyH5 ,elpallot.QTY_A2 as qtyA2 ,elpallot.QTY_LDC as qtyLDC ,elpallot.QTY_H2 as qtyH2 , 'Tarmac' as cgoType,elpallot.rmk as rmk,elpmsg.TR_NO as trNo,
      elpport.DOC_LINE_NO as portDocLineNo,elpallot.DOC_LINE_NO as docLineNo, elpallot.WT as wt,   elpallot.H5WT as h5Wt
      from trn_elp_msg elpmsg,trn_elp_port elpport,trn_elp_allot elpallot where  elpmsg.TR_NO=elpport.tr_no 
      and elpmsg.tr_no=elpallot.tr_no and elpallot.port_doc_line_no=elpport.DOC_LINE_NO
      and  elpallot.CGO_TYPE='Tarmac' and elpport.port=#unLdgPoint# and elpmsg.flt_key=#fltKey# and elpmsg.flt_date=TO_DATE(#fltDate#, 'DDMONYY')
      <isNotEmpty property="trNo">
            AND elpmsg.TR_NO = #trNo#
      </isNotEmpty>
      <isNotEmpty property="versionNo">
            AND elpmsg.ver_no = #versionNo#
      </isNotEmpty>
      UNION ALL
      select elpallot.INSTRUCTION as instruction,'Y' as hardDelete, elpallot.QTY_Q7 as qtyQ7,elpallot.QTY_Q6 as qtyQ6,elpallot.QTY_X8 as qtyX8,elpallot.QTY_PEB as qtyPEB, 
      elpallot.QTY_H5 as qtyH5 ,elpallot.QTY_A2 as qtyA2 ,elpallot.QTY_LDC as qtyLDC ,elpallot.QTY_H2 as qtyH2 , 'Courier' as cgoType,elpallot.rmk as rmk,elpmsg.TR_NO as trNo,
      elpport.DOC_LINE_NO as portDocLineNo,elpallot.DOC_LINE_NO as docLineNo, elpallot.WT as wt,   elpallot.H5WT as h5Wt
      from trn_elp_msg elpmsg,trn_elp_port elpport,trn_elp_allot elpallot where  elpmsg.TR_NO=elpport.tr_no 
      and elpmsg.tr_no=elpallot.tr_no and elpallot.port_doc_line_no=elpport.DOC_LINE_NO
      and  elpallot.CGO_TYPE='Courier'  and elpport.port=#unLdgPoint# and elpmsg.flt_key=#fltKey# and elpmsg.flt_date=TO_DATE(#fltDate#, 'DDMONYY')
      <isNotEmpty property="trNo">
            AND elpmsg.TR_NO = #trNo#
      </isNotEmpty>
      <isNotEmpty property="versionNo">
            AND elpmsg.ver_no = #versionNo#
      </isNotEmpty>
      UNION ALL
      select elpallot.INSTRUCTION as instruction,'Y' as hardDelete, elpallot.QTY_Q7 as qtyQ7,elpallot.QTY_Q6 as qtyQ6,elpallot.QTY_X8 as qtyX8,elpallot.QTY_PEB as qtyPEB, 
      elpallot.QTY_H5 as qtyH5 ,elpallot.QTY_A2 as qtyA2 ,elpallot.QTY_LDC as qtyLDC ,elpallot.QTY_H2 as qtyH2 , 'Mail' as cgoType,elpallot.rmk as rmk,elpmsg.TR_NO as trNo,
      elpport.DOC_LINE_NO as portDocLineNo,elpallot.DOC_LINE_NO as docLineNo, elpallot.WT as wt,   elpallot.H5WT as h5Wt
      from trn_elp_msg elpmsg,trn_elp_port elpport,trn_elp_allot elpallot where  elpmsg.TR_NO=elpport.tr_no 
      and elpmsg.tr_no=elpallot.tr_no and elpallot.port_doc_line_no=elpport.DOC_LINE_NO
      and  elpallot.CGO_TYPE='Mail' and elpport.port=#unLdgPoint# and elpmsg.flt_key=#fltKey# and elpmsg.flt_date=TO_DATE(#fltDate#, 'DDMONYY')
      <isNotEmpty property="trNo">
            AND elpmsg.TR_NO = #trNo#
      </isNotEmpty>
      <isNotEmpty property="versionNo">
            AND elpmsg.ver_no = #versionNo#
      </isNotEmpty>
      UNION ALL
      select elpallot.INSTRUCTION as instruction,'Y' as hardDelete, elpallot.QTY_Q7 as qtyQ7,elpallot.QTY_Q6 as qtyQ6,elpallot.QTY_X8 as qtyX8,elpallot.QTY_PEB as qtyPEB, 
      elpallot.QTY_H5 as qtyH5 ,elpallot.QTY_A2 as qtyA2 ,elpallot.QTY_LDC as qtyLDC ,elpallot.QTY_H2 as qtyH2 , 'Open' as cgoType,elpallot.rmk as rmk,elpmsg.TR_NO as trNo,
      elpport.DOC_LINE_NO as portDocLineNo,elpallot.DOC_LINE_NO as docLineNo, elpallot.WT as wt,   elpallot.H5WT as h5Wt
      from trn_elp_msg elpmsg,trn_elp_port elpport,trn_elp_allot elpallot where  elpmsg.TR_NO=elpport.tr_no 
      and elpmsg.tr_no=elpallot.tr_no and elpallot.port_doc_line_no=elpport.DOC_LINE_NO
      and  elpallot.CGO_TYPE='Open'  and elpport.port=#unLdgPoint# and elpmsg.flt_key=#fltKey# and elpmsg.flt_date=TO_DATE(#fltDate#, 'DDMONYY')
      <isNotEmpty property="trNo">
            AND elpmsg.TR_NO = #trNo#
      </isNotEmpty>
      <isNotEmpty property="versionNo">
            AND elpmsg.ver_no = #versionNo#
      </isNotEmpty>
      UNION ALL
      select elpallot.INSTRUCTION as instruction,'Y' as hardDelete, elpallot.QTY_Q7 as qtyQ7,elpallot.QTY_Q6 as qtyQ6,elpallot.QTY_X8 as qtyX8,elpallot.QTY_PEB as qtyPEB, 
      elpallot.QTY_H5 as qtyH5 ,elpallot.QTY_A2 as qtyA2 ,elpallot.QTY_LDC as qtyLDC ,elpallot.QTY_H2 as qtyH2 , 'EIC' as cgoType,elpallot.rmk as rmk,elpmsg.TR_NO as trNo,
      elpport.DOC_LINE_NO as portDocLineNo,elpallot.DOC_LINE_NO as docLineNo, elpallot.WT as wt,   elpallot.H5WT as h5Wt
      from trn_elp_msg elpmsg,trn_elp_port elpport,trn_elp_allot elpallot where  elpmsg.TR_NO=elpport.tr_no 
      and elpmsg.tr_no=elpallot.tr_no and elpallot.port_doc_line_no=elpport.DOC_LINE_NO
      and  elpallot.CGO_TYPE='EIC'  and elpport.port=#unLdgPoint# and elpmsg.flt_key=#fltKey# and elpmsg.flt_date=TO_DATE(#fltDate#, 'DDMONYY')
      <isNotEmpty property="trNo">
            AND elpmsg.TR_NO = #trNo#
      </isNotEmpty>
      <isNotEmpty property="versionNo">
            AND elpmsg.ver_no = #versionNo#
      </isNotEmpty>
      UNION ALL
      select elpallot.INSTRUCTION as instruction,'Y' as hardDelete, elpallot.QTY_Q7 as qtyQ7,elpallot.QTY_Q6 as qtyQ6,elpallot.QTY_X8 as qtyX8,elpallot.QTY_PEB as qtyPEB, 
      elpallot.QTY_H5 as qtyH5 ,elpallot.QTY_A2 as qtyA2 ,elpallot.QTY_LDC as qtyLDC ,elpallot.QTY_H2 as qtyH2 , 'Standby' as cgoType,elpallot.rmk as rmk,elpmsg.TR_NO as trNo,
      elpport.DOC_LINE_NO as portDocLineNo,elpallot.DOC_LINE_NO as docLineNo, elpallot.WT as wt,   elpallot.H5WT as h5Wt
      from trn_elp_msg elpmsg,trn_elp_port elpport,trn_elp_allot elpallot where  elpmsg.TR_NO=elpport.tr_no 
      and elpmsg.tr_no=elpallot.tr_no and elpallot.port_doc_line_no=elpport.DOC_LINE_NO
      and  elpallot.CGO_TYPE='Standby' and elpport.port=#unLdgPoint# and elpmsg.flt_key=#fltKey# and elpmsg.flt_date=TO_DATE(#fltDate#, 'DDMONYY')
      <isNotEmpty property="trNo">
            AND elpmsg.TR_NO = #trNo#
      </isNotEmpty>
      <isNotEmpty property="versionNo">
            AND elpmsg.ver_no = #versionNo#
      </isNotEmpty>
</select>



<select id="fetch_enq_trn_elp_allot_awbCpct" parameterClass="cargo.cms.trn.buildup.bo.EnqTrnFlightAllotmentBO"  resultClass="cargo.cms.trn.buildup.bo.EnqTrnFlightAllotmentBO">         
            select DOC_LINE_NO as awbDocLineNo,CONCAT(CONCAT(SUBSTR(AWB_NO,0,3),'-'),SUBSTR(AWB_NO,4)) as awbNo,PCS as awbPcs,WT as awbWt,INSTRUCTION as awbInstruction,TR_NO as trNo,C_DOC_LINE_NO as docLineNo,
            substr(AWB_NO,0,3) as awbNoPfx,substr(AWB_NO,4) as awbNoSfx from trn_elp_allot_awb where tr_no=#trNo#
</select>
<select id="getEnqVerNumberCpct" parameterClass="cargo.cms.trn.buildup.bo.EnqTrnFlightAllotmentBO"  resultClass="cargo.cms.trn.buildup.bo.EnqTrnFlightAllotmentBO">
         select * from (select elpmsg.VER_NO as versionNo from trn_flt_opr opr LEFT OUTER JOIN trn_elp_msg elpmsg  ON elpmsg.flt_key=opr.flt_key and to_char(elpmsg.flt_date, 'DDMONYY')=to_char(opr.sch_date, 'DDMONYY')   where
     opr.flt_key=#fltKey# and opr.sch_date=TO_DATE(#fltDate#, 'DDMONYY') and opr.flt_type = 'D' order by to_number(elpmsg.tr_no) asc)
</select>

 
 
 <select id="fetch_enq_TtlandGDTtl_AllotCpct" parameterClass="cargo.cms.trn.buildup.bo.EnqTrnFlightAllotmentBO"  resultClass="cargo.cms.trn.buildup.bo.EnqTrnFlightAllotmentBO">         
            select (select (decode(sum(allot.qty_Q7 ), null, '', sum(allot.qty_Q7 ) ||'Q7')
               || decode(sum(allot.qty_Q6 ), null, '',','||  sum(allot.qty_Q6 ) ||'Q6')
               || decode(sum(allot.qty_X8 ), null, '', ','|| sum(allot.qty_X8 ) ||'X8')
               || decode( sum(allot.QTY_PEB ), null, '', ','|| sum(allot.QTY_PEB ) ||'PEB')
               || decode(sum(allot.QTY_H2 ), null, '', ','|| sum(allot.QTY_H2 ) ||'H2')
               || decode(sum(allot.QTY_A2 ), null, '', ','|| sum(allot.QTY_A2 ) ||'A2')
               || decode(sum(allot.QTY_LDC ), null, '', ','|| sum(allot.QTY_LDC ) ||'LDC')
               ||  decode( count(allot.QTY_H5 ), 0, '', ','||'H5' )
                || decode(sum(allot.WT ), null, '', ' (' || sum(allot.WT )||')')) from trn_elp_allot allot,trn_elp_port port,trn_elp_msg elpmsg
                where port.doc_line_no= allot.port_doc_line_no  and msg.TR_NO=port.tr_no  and port.port=#unLdgPoint# and elpmsg.ver_no=#versionNo# and allot.tr_no= elpmsg.tr_no
                and allot.CGO_TYPE in('Transit','Export Local B/U','Export Local Pre-Pack','Tarmac',
                'Courier','Mail','Open','EIC')
                
                )as portTotal ,
                (select (decode(sum(allot.qty_Q7 ), null, '', sum(allot.qty_Q7 ) ||'Q7')
               || decode(sum(allot.qty_Q6 ), null, '',','||  sum(allot.qty_Q6 ) ||'Q6')
               || decode(sum(allot.qty_X8 ), null, '', ','|| sum(allot.qty_X8 ) ||'X8')
               || decode( sum(allot.QTY_PEB ), null, '', ','|| sum(allot.QTY_PEB ) ||'PEB')
               || decode(sum(allot.QTY_H2 ), null, '', ','|| sum(allot.QTY_H2 ) ||'H2')
               || decode(sum(allot.QTY_A2 ), null, '', ','|| sum(allot.QTY_A2 ) ||'A2')
               || decode(sum(allot.QTY_LDC ), null, '', ','|| sum(allot.QTY_LDC ) ||'LDC')
               ||  decode( count(allot.QTY_H5 ), 0, '', ','||'H5' )
                || decode(sum(allot.WT ), null, '', ' (' || sum(allot.WT )||')')) from trn_elp_allot allot
                where allot.tr_no= msg.tr_no and allot.CGO_TYPE in('Transit','Export Local B/U','Export Local Pre-Pack','Tarmac',
                'Courier','Mail','Open','EIC') ) as grandTotal                
                from 
               trn_elp_msg msg               
             where msg.flt_key=#fltKey# and msg.flt_date=TO_DATE(#fltDate#, 'DDMONYY') and msg.tr_no=#trNo#
      </select>
      
      <select id="fetch_enq_TtlandGDTtl_Allot_Pass_FltCpct" parameterClass="cargo.cms.trn.buildup.bo.EnqTrnFlightAllotmentBO"  resultClass="cargo.cms.trn.buildup.bo.EnqTrnFlightAllotmentBO">         
            select (select (decode(sum(allot.QTY_H2 ), null, '', ','|| sum(allot.QTY_H2 ) ||'H2')
               || decode(sum(allot.QTY_A2 ), null, '', ','|| sum(allot.QTY_A2 ) ||'A2')
               || decode(sum(allot.QTY_LDC ), null, '', ','|| sum(allot.QTY_LDC ) ||'LDC')
               ||  decode( count(allot.QTY_H5 ), 0, '', ','||'H5' )
                || decode(sum(allot.WT ), null, '', ' (' || sum(allot.WT )||')')) from trn_elp_allot allot,trn_elp_port port,trn_elp_msg elpmsg
                where port.doc_line_no= allot.port_doc_line_no  and msg.TR_NO=port.tr_no  and port.port=#unLdgPoint# and elpmsg.ver_no=#versionNo# and allot.tr_no= elpmsg.tr_no
                and allot.CGO_TYPE in('Transit','Export Local B/U','Export Local Pre-Pack','Tarmac',
                'Courier','Mail','Open','EIC')
                
                )as portTotal ,
                (select (decode(sum(allot.QTY_H2 ), null, '', ','|| sum(allot.QTY_H2 ) ||'H2')
               || decode(sum(allot.QTY_A2 ), null, '', ','|| sum(allot.QTY_A2 ) ||'A2')
               || decode(sum(allot.QTY_LDC ), null, '', ','|| sum(allot.QTY_LDC ) ||'LDC')
               ||  decode( count(allot.QTY_H5 ), 0, '', ','||'H5' )
                || decode(sum(allot.WT ), null, '', ' (' || sum(allot.WT )||')')) from trn_elp_allot allot
                where allot.tr_no= msg.tr_no and allot.CGO_TYPE in('Transit','Export Local B/U','Export Local Pre-Pack','Tarmac',
                'Courier','Mail','Open','EIC') ) as grandTotal                
                from 
               trn_elp_msg msg               
             where msg.flt_key=#fltKey# and msg.flt_date=TO_DATE(#fltDate#, 'DDMONYY') and msg.tr_no=#trNo#
      </select>
      
      
      
      
   <select id="getLatestVerNoAndTrNoCpct" parameterClass="cargo.cms.trn.buildup.bo.EnqTrnFlightAllotmentBO"  resultClass="cargo.cms.trn.buildup.bo.EnqTrnFlightAllotmentBO">
   
    select elpmsg.tr_no as trNo,elpmsg.VER_NO as versionNo from  trn_elp_msg elpmsg  where elpmsg.flt_key=#fltKey# and elpmsg.flt_date=TO_DATE(#fltDate#, 'DDMONYY')  order by to_number(elpmsg.tr_no) desc
   
      </select> 
      
      
            <select id="fetch_Enq_Allotment_SummaryCpct" parameterClass="cargo.cms.trn.buildup.bo.EnqTrnFlightAllotmentBO"  resultClass="cargo.cms.trn.buildup.bo.EnqTrnFlightAllotmentBO">         
      select (select (decode(d.qtyQ7 , null, '',0,'',  d.qtyQ7 ||'Q7' )
               || decode(d.qtyQ6, null, '',0,'',','||  d.qtyQ6 ||'Q6')
               || decode(d.qtyX8, null, '',0,'',','|| d.qtyX8 ||'X8')
               || decode( d.qtyPEB, null, '',0,'',','|| d.qtyPEB ||'PEB')
               || decode(d.qtyH2, null, '',0,'',','||d.qtyH2 ||'H2')
               || decode(d.qtyA2, null, '',0,'',','|| d.qtyA2 ||'A2')
               || decode(d.qtyLDC, null, '',0,'',','|| d.qtyLDC ||'LDC')
               ||  decode(d.countH5 , 0, '', ','||'H5' ))  from
              (select a.countH5,(a.totalQ6-b.totalQ6) as qtyQ6,(a.totalQ7-b.totalQ7) as qtyQ7,(a.totalX8-b.totalX8) as qtyX8,
              (a.totalPEB-b.totalPEB) as qtyPEB,(a.totalA2-b.totalA2) as qtyA2,(a.totalLDC-b.totalLDC) as qtyLDC,(a.totalH2-b.totalH2) as qtyH2,             
              a.tr_no as tr_no 
              from (select count(QTY_H5 )as countH5, sum(qty_Q6 ) as totalQ6,sum(qty_Q7 ) as totalQ7,
               sum(QTY_X8 ) as totalX8,sum(QTY_PEB ) as totalPEB,sum(QTY_A2 ) as totalA2, sum(QTY_LDC ) as totalLDC,
                sum(QTY_H2 ) as totalH2,
              tr_no from trn_elp_allot where CGO_TYPE in('Transit','Export Local B/U')   group by tr_no) a, 
              (select NVL(sum(qty_Q6 ),0) as totalQ6,NVL(sum(qty_Q7 ),0) as totalQ7,
              NVL(sum(QTY_X8 ),0) as totalX8,NVL(sum(QTY_PEB ),0) as totalPEB,NVL(sum(QTY_A2 ),0) as totalA2,NVL( sum(QTY_LDC ),0) as totalLDC,
                NVL(sum(QTY_H2 ),0) as totalH2,
              tr_no from trn_elp_allot where CGO_TYPE in('Transit PPK')  group by tr_no) b
              where a.tr_no=b.tr_no )d where d.tr_no =msg.tr_no) as whBuildUpTotal, 
                (select (decode(sum(allot.qty_Q7 ), null, '',0,'', sum(allot.qty_Q7) ||'Q7')
               || decode(sum(allot.qty_Q6 ), null, '',0,'',','||  sum(allot.qty_Q6 ) ||'Q6')
               || decode(sum(allot.qty_X8 ), null, '',0,'', ','|| sum(allot.qty_X8 ) ||'X8')
               || decode( sum(allot.QTY_PEB ), null, '',0,'', ','|| sum(allot.QTY_PEB ) ||'PEB')
               || decode(sum(allot.QTY_H2 ), null, '',0,'', ','|| sum(allot.QTY_H2 ) ||'H2')
               || decode(sum(allot.QTY_A2 ), null, '',0,'', ','|| sum(allot.QTY_A2 ) ||'A2')
               || decode(sum(allot.QTY_LDC ), null, '',0,'', ','|| sum(allot.QTY_LDC ) ||'LDC')
               ||  decode( count(allot.QTY_H5 ), 0, '', ','||'H5' )) from trn_elp_allot allot
                where allot.tr_no= msg.tr_no and allot.CGO_TYPE in('Export Local Pre-Pack','Transit PPK') ) as ppkTotal,
                (select (decode(sum(allot.qty_Q7 ), null, '',0,'', sum(allot.qty_Q7) ||'Q7')
               || decode(sum(allot.qty_Q6 ), null, '',0,'',','||  sum(allot.qty_Q6 ) ||'Q6')
               || decode(sum(allot.qty_X8 ), null, '',0,'', ','|| sum(allot.qty_X8 ) ||'X8')
               || decode( sum(allot.QTY_PEB ), null, '',0,'', ','|| sum(allot.QTY_PEB ) ||'PEB')
               || decode(sum(allot.QTY_H2 ), null, '',0,'', ','|| sum(allot.QTY_H2 ) ||'H2')
               || decode(sum(allot.QTY_A2 ), null, '',0,'', ','|| sum(allot.QTY_A2 ) ||'A2')
               || decode(sum(allot.QTY_LDC ), null, '',0,'', ','|| sum(allot.QTY_LDC ) ||'LDC')
               ||  decode( count(allot.QTY_H5 ), 0, '', ','||'H5' )) from trn_elp_allot allot
                where allot.tr_no= msg.tr_no and allot.CGO_TYPE in('Tarmac') ) as tarmacTotal,
                (select (decode(sum(allot.qty_Q7 ), null, '',0,'', sum(allot.qty_Q7) ||'Q7')
               || decode(sum(allot.qty_Q6 ), null, '',0,'',','||  sum(allot.qty_Q6 ) ||'Q6')
               || decode(sum(allot.qty_X8 ), null, '',0,'', ','|| sum(allot.qty_X8 ) ||'X8')
               || decode( sum(allot.QTY_PEB ), null, '',0,'', ','|| sum(allot.QTY_PEB ) ||'PEB')
               || decode(sum(allot.QTY_H2 ), null, '',0,'', ','|| sum(allot.QTY_H2 ) ||'H2')
               || decode(sum(allot.QTY_A2 ), null, '',0,'', ','|| sum(allot.QTY_A2 ) ||'A2')
               || decode(sum(allot.QTY_LDC ), null, '',0,'', ','|| sum(allot.QTY_LDC ) ||'LDC')
               ||  decode( count(allot.QTY_H5 ), 0, '', ','||'H5' )) from trn_elp_allot allot
                where allot.tr_no= msg.tr_no and allot.CGO_TYPE in('Courier','Mail','Open','EIC') ) as othersTotal ,
                 (select 
               (decode(sum(allot.qty_Q7 ), null, '',0,'', sum(allot.qty_Q7) ||'Q7')
               || decode(sum(allot.qty_Q6 ), null, '',0,'',','||  sum(allot.qty_Q6 ) ||'Q6')
               || decode(sum(allot.qty_X8 ), null, '',0,'', ','|| sum(allot.qty_X8 ) ||'X8')
               || decode( sum(allot.QTY_PEB ), null, '',0,'', ','|| sum(allot.QTY_PEB ) ||'PEB')
               || decode(sum(allot.QTY_H2 ), null, '',0,'', ','|| sum(allot.QTY_H2 ) ||'H2')
               || decode(sum(allot.QTY_A2 ), null, '',0,'', ','|| sum(allot.QTY_A2 ) ||'A2')
               || decode(sum(allot.QTY_LDC ), null, '',0,'', ','|| sum(allot.QTY_LDC ) ||'LDC')
               ||  decode( count(allot.QTY_H5 ), 0, '', ','||'H5' )
                || decode(sum(allot.WT ), null, '', ' (' || sum(allot.WT )||')')) from trn_elp_allot allot
                where allot.tr_no= msg.tr_no and allot.CGO_TYPE in('Transit','Export Local B/U','Export Local Pre-Pack','Tarmac',
                'Courier','Mail','Open','EIC') ) as grandTotal                
                from trn_elp_msg msg where  msg.flt_key=#fltKey#   and msg.flt_date=TO_DATE(#fltDate#, 'DDMONYY') and msg.tr_no in(
                SELECT b.trNO FROM (SELECT rownum r, a.trNo  FROM (select elpmsg.tr_no as trNo from  trn_elp_msg elpmsg  where elpmsg.flt_key=#fltKey# and elpmsg.flt_date=TO_DATE(#fltDate#, 'DDMONYY')  and elpmsg.VER_NO=#versionNo# )a
                WHERE rownum &lt;=1) b WHERE r=1)
      </select>
      
      
      
  <select id="getTrNoPassingSelVerNoCpct" parameterClass="cargo.cms.trn.buildup.bo.EnqTrnFlightAllotmentBO"  resultClass="java.lang.String">
       select 
            elpmsg.TR_NO as trNo
           from TRN_flt_opr opr LEFT OUTER JOIN trn_elp_msg elpmsg  ON elpmsg.flt_key=opr.flt_key and to_char(elpmsg.flt_date, 'DDMONYY')=to_char(opr.sch_date, 'DDMONYY')   where
           opr.flt_key=#fltKey# and opr.sch_date=TO_DATE(#fltDate#, 'DDMONYY') and 
            opr.flt_type = 'D' AND elpmsg.VER_NO = #versionNo#
      </select>
      
      
      <select id="getEnqFlightAllotHeaderForSelVerNumberCpct" parameterClass="cargo.cms.trn.buildup.bo.EnqTrnFlightAllotmentBO"  resultClass="cargo.cms.trn.buildup.bo.EnqTrnFlightAllotmentBO">
      select * from (select decode(opr.est_time,null,null,substr(lpad(opr.est_time,4,'0'),1,2)||':'||substr(lpad(opr.est_time,4,'0'),3)) as etd,opr.TR_NO as oprTrNo
     ,  elpmsg.CALL_SIGN as callSign, elpmsg.acft_type as acftType,elpmsg.exceed as exceed,elpmsg.uco_rmk as ucoRmk,elpmsg.VER_NO as versionNo,elpmsg.TR_NO as trNo,
      elpmsg.BAGGAGE_NO as  baggageNo,elpmsg.load_plan_finalize AS finalized, to_char(elpmsg.RECEIVE_DATE,'DDMONYY HH24:MI') as reciveDate,elpmsg.trf_ind AS trfInd,elpmsg.finalize_ind as finaliztrnnd 
      from TRN_flt_opr opr LEFT OUTER JOIN trn_elp_msg elpmsg  ON elpmsg.flt_key=opr.flt_key and to_char(elpmsg.flt_date, 'DDMONYY')=to_char(opr.sch_date, 'DDMONYY')   where
     opr.flt_key=#fltKey# and opr.sch_date=TO_DATE(#fltDate#, 'DDMONYY') and opr.flt_type = 'D' and elpmsg.VER_NO =#versionNo#) 
 </select>



      
      
            <select id="fetch_Enq_Allotment_Summary_Unldng_PortCpct" parameterClass="cargo.cms.trn.buildup.bo.EnqTrnFlightAllotmentBO"  resultClass="cargo.cms.trn.buildup.bo.EnqTrnFlightAllotmentUnldngBO">         
            select (select (decode(d.qtyQ7 , null, '',0,'',  d.qtyQ7 ||'Q7' )
               || decode(d.qtyQ6, null, '',0,'',','||  d.qtyQ6 ||'Q6')
               || decode(d.qtyX8, null, '',0,'',','|| d.qtyX8 ||'X8')
               || decode( d.qtyPEB, null, '',0,'',','|| d.qtyPEB ||'PEB')
               || decode(d.qtyH2, null, '',0,'',','||d.qtyH2 ||'H2')
               || decode(d.qtyA2, null, '',0,'',','|| d.qtyA2 ||'A2')
               || decode(d.qtyLDC, null, '',0,'',','|| d.qtyLDC ||'LDC')
               ||  decode(d.countH5 , 0, '', ','||'H5' ))  from
              (select a.countH5,(a.totalQ6-b.totalQ6) as qtyQ6,(a.totalQ7-b.totalQ7) as qtyQ7,(a.totalX8-b.totalX8) as qtyX8,
              (a.totalPEB-b.totalPEB) as qtyPEB,(a.totalA2-b.totalA2) as qtyA2,(a.totalLDC-b.totalLDC) as qtyLDC,(a.totalH2-b.totalH2) as qtyH2,             
              b.tr_no as tr_no ,b.PORT_DOC_LINE_NO as PORT_DOC_LINE_NO
              from (select count(QTY_H5 )as countH5, sum(qty_Q6 ) as totalQ6,sum(qty_Q7 ) as totalQ7,
               sum(QTY_X8 ) as totalX8,sum(QTY_PEB ) as totalPEB,sum(QTY_A2 ) as totalA2, sum(QTY_LDC ) as totalLDC,
                sum(QTY_H2 ) as totalH2,
              tr_no,PORT_DOC_LINE_NO from trn_elp_allot where CGO_TYPE in('Transit','Export Local B/U')   group by tr_no,PORT_DOC_LINE_NO) a, 
              (select NVL(sum(qty_Q6 ),0) as totalQ6,NVL(sum(qty_Q7 ),0) as totalQ7,
              NVL(sum(QTY_X8 ),0) as totalX8,NVL(sum(QTY_PEB ),0) as totalPEB,NVL(sum(QTY_A2 ),0) as totalA2,NVL( sum(QTY_LDC ),0) as totalLDC,
                NVL(sum(QTY_H2 ),0) as totalH2,
              tr_no,PORT_DOC_LINE_NO from trn_elp_allot where CGO_TYPE in('Transit PPK')  group by tr_no,PORT_DOC_LINE_NO) b
              where a.tr_no=b.tr_no and a.port_doc_line_no=b.port_doc_line_no )d where d.tr_no =msg.tr_no and d.PORT_DOC_LINE_NO=port.DOC_LINE_NO) as whBuildUpTotal,  
                (select  (decode(sum(allot.qty_Q7 ), null, '',0,'', sum(allot.qty_Q7) ||'Q7')
               || decode(sum(allot.qty_Q6 ), null, '',0,'',','||  sum(allot.qty_Q6 ) ||'Q6')
               || decode(sum(allot.qty_X8 ), null, '',0,'', ','|| sum(allot.qty_X8 ) ||'X8')
               || decode( sum(allot.QTY_PEB ), null, '',0,'', ','|| sum(allot.QTY_PEB ) ||'PEB')
               || decode(sum(allot.QTY_H2 ), null, '',0,'', ','|| sum(allot.QTY_H2 ) ||'H2')
               || decode(sum(allot.QTY_A2 ), null, '',0,'', ','|| sum(allot.QTY_A2 ) ||'A2')
               || decode(sum(allot.QTY_LDC ), null, '',0,'', ','|| sum(allot.QTY_LDC ) ||'LDC')
               ||  decode( count(allot.QTY_H5 ), 0, '', ','||'H5' )) from trn_elp_allot allot
                where allot.tr_no= msg.tr_no and allot.PORT_DOC_LINE_NO=port.DOC_LINE_NO and
                allot.CGO_TYPE in('Export Local Pre-Pack','Transit PPK') ) as ppkTotal,
                (select (decode(sum(allot.qty_Q7 ), null, '',0,'', sum(allot.qty_Q7) ||'Q7')
               || decode(sum(allot.qty_Q6 ), null, '',0,'',','||  sum(allot.qty_Q6 ) ||'Q6')
               || decode(sum(allot.qty_X8 ), null, '',0,'', ','|| sum(allot.qty_X8 ) ||'X8')
               || decode( sum(allot.QTY_PEB ), null, '',0,'', ','|| sum(allot.QTY_PEB ) ||'PEB')
               || decode(sum(allot.QTY_H2 ), null, '',0,'', ','|| sum(allot.QTY_H2 ) ||'H2')
               || decode(sum(allot.QTY_A2 ), null, '',0,'', ','|| sum(allot.QTY_A2 ) ||'A2')
               || decode(sum(allot.QTY_LDC ), null, '',0,'', ','|| sum(allot.QTY_LDC ) ||'LDC')
               ||  decode( count(allot.QTY_H5 ), 0, '', ','||'H5' )) from trn_elp_allot allot
                where allot.tr_no= msg.tr_no and allot.PORT_DOC_LINE_NO=port.DOC_LINE_NO and allot.CGO_TYPE in('Tarmac') ) as tarmacTotal,
                (select (decode(sum(allot.qty_Q7 ), null, '',0,'', sum(allot.qty_Q7) ||'Q7')
               || decode(sum(allot.qty_Q6 ), null, '',0,'',','||  sum(allot.qty_Q6 ) ||'Q6')
               || decode(sum(allot.qty_X8 ), null, '',0,'', ','|| sum(allot.qty_X8 ) ||'X8')
               || decode( sum(allot.QTY_PEB ), null, '',0,'', ','|| sum(allot.QTY_PEB ) ||'PEB')
               || decode(sum(allot.QTY_H2 ), null, '',0,'', ','|| sum(allot.QTY_H2 ) ||'H2')
               || decode(sum(allot.QTY_A2 ), null, '',0,'', ','|| sum(allot.QTY_A2 ) ||'A2')
               || decode(sum(allot.QTY_LDC ), null, '',0,'', ','|| sum(allot.QTY_LDC ) ||'LDC')
               ||  decode( count(allot.QTY_H5 ), 0, '', ','||'H5' )) from trn_elp_allot allot
                where allot.tr_no= msg.tr_no and allot.PORT_DOC_LINE_NO=port.DOC_LINE_NO and allot.CGO_TYPE in('Courier','Mail','Open','EIC') ) as othersTotal ,
                (select      
               (decode(sum(allot.qty_Q7 ), null, '',0,'', sum(allot.qty_Q7) ||'Q7')
               || decode(sum(allot.qty_Q6 ), null, '',0,'',','||  sum(allot.qty_Q6 ) ||'Q6')
               || decode(sum(allot.qty_X8 ), null, '',0,'', ','|| sum(allot.qty_X8 ) ||'X8')
               || decode( sum(allot.QTY_PEB ), null, '',0,'', ','|| sum(allot.QTY_PEB ) ||'PEB')
               || decode(sum(allot.QTY_H2 ), null, '',0,'', ','|| sum(allot.QTY_H2 ) ||'H2')
               || decode(sum(allot.QTY_A2 ), null, '',0,'', ','|| sum(allot.QTY_A2 ) ||'A2')
               || decode(sum(allot.QTY_LDC ), null, '',0,'', ','|| sum(allot.QTY_LDC ) ||'LDC')
               ||  decode( count(allot.QTY_H5 ), 0, '', ','||'H5' )
                || decode(sum(allot.WT ), null, '', ' (' || sum(allot.WT )||')')) from trn_elp_allot allot
                where   allot.tr_no= msg.tr_no and allot.PORT_DOC_LINE_NO=port.DOC_LINE_NO and allot.CGO_TYPE in('Transit','Export Local B/U','Export Local Pre-Pack','Tarmac',
                'Courier','Mail','Open','EIC') ) as grandTotal                
                from trn_elp_msg msg,trn_elp_port port  where port.port=#unldgPt1# and port.TR_NO =msg.TR_NO  and  msg.flt_key=#fltKey#   and msg.flt_date=TO_DATE(#fltDate#, 'DDMONYY')
                and msg.tr_no in(
                SELECT b.trNO FROM (SELECT rownum r, a.trNo  FROM (select elpmsg.tr_no as trNo from  trn_elp_msg elpmsg  where elpmsg.flt_key=#fltKey# and elpmsg.flt_date=TO_DATE(#fltDate#, 'DDMONYY')  and elpmsg.VER_NO=#versionNo#)a
                WHERE rownum &lt;=1) b WHERE r=1)
      </select>
      <!-- enq flight allotment -->
   
   	<select id="fetch_transit_enq_details" parameterClass="cargo.cms.trn.buildup.bo.EnqTrnFlightAllotmentBO"  resultClass="cargo.cms.trn.buildup.bo.EnqTrnFlightAllotmentBO">
		select DISTINCT concat(concat(substr(ddt.awb_no,0,3),'-'),substr(ddt.awb_no,4))as awbNoDisplay,
       ddt.awb_no as awbNo,
       awb.orig as origin,
       awb.dest as dest,
       (awb.spl_code1 ||''|| decode(awb.spl_code2, null, '', ','|| awb.spl_code2)
      		||''|| decode(awb.spl_code3, null, '', ','|| awb.spl_code3)
      		||''|| decode(awb.spl_code4, null, '', ','|| awb.spl_code4)
      		||''|| decode(awb.spl_code5, null, '', ','||  awb.spl_code5)
      		||''|| decode(awb.spl_code6, null, '', ','||awb.spl_code6)
      		||''|| decode(awb.spl_code7, null, '', ','|| awb.spl_code7)
      		||''|| decode(awb.spl_code8, null, '', ','|| awb.spl_code8)
      		||''|| decode(awb.spl_code9, null, '', ','|| awb.spl_code9)) as shipmentDescCode,
       nvl(ddt.TRF_PC,0) as qty,
       nvl(ddt.TRF_WT,0) as weightCode,
       ffm.cto as impCTO,
       '*' as expCTO
   		from 
     (SELECT DISTINCT msg.flt_key,
		    msg.flt_date,		  
		    shp.awb_no,
        shp.awb_date,
		    trf.cntg_flt_key,
		    trf.cntg_flt_date,
		    trf.UNLDG_PT,
		    trf.TRF_TYPE,
		    trf.TRF_PC,
		    trf.TRF_WT
		  FROM ddt_msg msg,		   
		    ddt_shp shp ,
		    ddt_shp_trf_dtl trf
		  WHERE 
		   shp.tr_no       =msg.tr_no
		  AND trf.sdoc_line_no= shp.doc_line_no
		  AND trf.tr_no       =msg.tr_no
      ) ddt
      LEFT JOIN 
      (  select  trn_ffm_msg.flt_key,trn_ffm_msg.flt_date,trn_ffm_shp.cto,trn_ffm_shp.awb_no,trn_ffm_shp.awb_date  from   trn_ffm_msg ,trn_ffm_shp
     where trn_ffm_msg.ffm_status='P' and trn_ffm_msg.tr_no=trn_ffm_shp.tr_no ) ffm
     ON ffm.flt_key ||#trnFltSfx#=ddt.flt_key and ffm.flt_date=ddt.flt_date and ddt.awb_no= ffm.awb_no  and ddt.awb_date=ffm.awb_date
      LEFT join awb on DDT.awb_no=awb.awb_no and ddt.awb_date=awb.awb_date
       		where 
        ddt.cntg_flt_date=TO_DATE(#fltDate#, 'DDMONYY') and ddt.cntg_flt_key=#fltKey# ||#trnFltSfx#
        AND ddt.UNLDG_PT=#unLdgPoint#
        and ddt.TRF_TYPE=#trtype#
	</select>	
	<!-- transistion enq flight allotment -->
	   	<select id="fetch_enq_transit_details" parameterClass="cargo.cms.trn.buildup.bo.EnqTrnFlightAllotmentBO"  resultClass="cargo.cms.trn.buildup.bo.EnqTrnFlightAllotmentBO">
	select DISTINCT concat(concat(substr(trn_fbl_shp.awb_no,0,3),'-'),substr(trn_fbl_shp.awb_no,4))as awbNoDisplay,
       trn_fbl_shp.awb_no as awbNo,
       nvl(awb.orig,trn_fbl_shp.org) as origin,
       nvl(awb.dest,trn_fbl_shp.dest) as dest,
       (NVL(awb.spl_code1,trn_fbl_shp.SPL_CODE1) ||''|| decode(NVL(awb.spl_code2,trn_fbl_shp.SPL_CODE2), null, '', ','|| NVL(awb.spl_code2,trn_fbl_shp.SPL_CODE2))
      		||''|| decode(NVL(awb.spl_code3,trn_fbl_shp.SPL_CODE3), null, '', ','|| NVL(awb.spl_code3,trn_fbl_shp.SPL_CODE3))
      		||''|| decode(NVL(awb.spl_code4,trn_fbl_shp.SPL_CODE4), null, '', ','|| NVL(awb.spl_code4,trn_fbl_shp.SPL_CODE4))
      		||''|| decode(NVL(awb.spl_code5,trn_fbl_shp.SPL_CODE5), null, '', ','|| NVL(awb.spl_code5,trn_fbl_shp.SPL_CODE5))
      		||''|| decode(NVL(awb.spl_code6,trn_fbl_shp.SPL_CODE6), null, '', ','||NVL(awb.spl_code6,trn_fbl_shp.SPL_CODE6))
      		||''|| decode(NVL(awb.spl_code7,trn_fbl_shp.SPL_CODE7), null, '', ','|| NVL(awb.spl_code7,trn_fbl_shp.SPL_CODE7))
      		||''|| decode(NVL(awb.spl_code8,trn_fbl_shp.SPL_CODE8), null, '', ','|| NVL(awb.spl_code8,trn_fbl_shp.SPL_CODE8))
      		||''|| decode(NVL(awb.spl_code9,trn_fbl_shp.SPL_CODE9), null, '', ','|| NVL(awb.spl_code9,trn_fbl_shp.SPL_CODE9))) as shipmentDescCode,
       nvl(trn_fbl_shp.pcs,0) as qty,
       nvl(trn_fbl_shp.net_wt,0) as weightCode,
       ffm.cto as impCTO,
       trn_fbl_shp.export_cto as expCTO,ffm.FLT_KEY,ddt.flt_key
	from 
       trn_fbl
       JOIN trn_fbl_shp ON  trn_fbl.TR_NO= trn_fbl_shp.TR_NO 
      and trn_fbl_shp.org!='HKG'                
       LEFT join awb on trn_fbl_shp.awb_no=awb.awb_no and awb.awb_date=trn_fbl_shp.awb_date
       LEFT JOIN
       (SELECT DISTINCT msg.flt_key,
		    msg.flt_date,		  
		    shp.awb_no,
        shp.awb_date,
		    trf.cntg_flt_key,
		    trf.cntg_flt_date,
		    trf.UNLDG_PT,
		    trf.TRF_TYPE,
		    trf.TRF_PC,
		    trf.TRF_WT
		  FROM ddt_msg msg,		   
		    ddt_shp shp ,
		    ddt_shp_trf_dtl trf
		  WHERE 
		   shp.tr_no       =msg.tr_no
		  AND trf.sdoc_line_no= shp.doc_line_no
		  AND trf.tr_no       =msg.tr_no
		  ) ddt  
      ON   trn_fbl.flt_key ||#trnFltSfx#=ddt.cntg_flt_key and trn_fbl.flt_date=ddt.cntg_flt_DATE
     and ddt.awb_no= trn_fbl_shp.awb_no and ddt.awb_date=trn_fbl_shp.awb_date
     LEFT JOIN 
      (select  trn_ffm_msg.flt_key,trn_ffm_msg.flt_date,shp.cto,shp.dest,shp.awb_no,shp.awb_date from  
      trn_ffm_msg ,trn_ffm_shp shp
     where trn_ffm_msg.ffm_status='P' and trn_ffm_msg.tr_no=shp.tr_no and
     trn_ffm_msg.flt_date in (select max(trn_ffm_msg.flt_date)  from trn_ffm_msg ,trn_ffm_shp where  trn_ffm_msg.ffm_status='P' and trn_ffm_msg.tr_no=trn_ffm_shp.tr_no
       and trn_ffm_shp.awb_no =shp.awb_no and trn_ffm_shp.awb_date=shp.awb_date group by  trn_ffm_shp.awb_no, 
       trn_ffm_shp.awb_date)) ffm
     ON  trn_fbl_shp.awb_no= ffm.awb_no and trn_fbl_shp.awb_date=ffm.awb_date and ffm.dest!='HKG' 
	where 
        trn_fbl.flt_key =#fltKey#
        and trn_fbl.flt_date = TO_DATE(#fltDate#, 'DDMONYY')
        and trn_fbl.unldg_pt = #unLdgPoint#
        and trn_fbl.si_type in('S','I') and trn_fbl.fbl_status ='P'

	</select>	
	
	<select id="fetch_enq_transit_cpct_details" parameterClass="cargo.cms.trn.buildup.bo.EnqTrnFlightAllotmentBO"  resultClass="cargo.cms.trn.buildup.bo.EnqTrnFlightAllotmentBO">
		select elpallot.INSTRUCTION as instruction,'Y' as hardDelete,elpallot.QTY_Q7 as qtyQ7,elpallot.QTY_Q6 as qtyQ6,elpallot.QTY_X8 as qtyX8,
	    elpallot.QTY_PEB as qtyPEB,elpallot.QTY_H5 as qtyH5 ,elpallot.QTY_A2 as qtyA2 ,elpallot.QTY_LDC as qtyLDC ,elpallot.QTY_H2 as qtyH2 ,
	    'Transit' as cgoType,elpallot.rmk as rmk,elpmsg.TR_NO as trNo,elpport.DOC_LINE_NO as portDocLineNo,elpallot.DOC_LINE_NO as docLineNo,
	    elpallot.WT as wt,elpallot.H5WT as h5Wt
		from  edi_elp_msg elpmsg,edi_elp_port elpport,edi_elp_allot elpallot 
		where elpmsg.TR_NO=elpport.tr_no and elpmsg.tr_no=elpallot.tr_no and elpallot.port_doc_line_no=elpport.DOC_LINE_NO and  elpallot.CGO_TYPE='Transit' 
	    and elpport.port=#unLdgPoint# and elpmsg.flt_key=#fltKey# and elpmsg.flt_date=TO_DATE(#fltDate#, 'DDMONYY')
	  	<isNotEmpty property="trNo">
		AND elpmsg.TR_NO = #trNo#
		</isNotEmpty>
		
	    UNION ALL
	    
		select elpallot.INSTRUCTION as instruction,'Y' as hardDelete, elpallot.QTY_Q7 as qtyQ7,elpallot.QTY_Q6 as qtyQ6,elpallot.QTY_X8 as qtyX8,elpallot.QTY_PEB as qtyPEB, 
		elpallot.QTY_H5 as qtyH5 ,elpallot.QTY_A2 as qtyA2 ,elpallot.QTY_LDC as qtyLDC ,elpallot.QTY_H2 as qtyH2 , 'Transit HACTL' as cgoType,elpallot.rmk as rmk,elpmsg.TR_NO as trNo,
	    elpport.DOC_LINE_NO as portDocLineNo,elpallot.DOC_LINE_NO as docLineNo,	elpallot.WT as wt,	elpallot.H5WT as h5Wt
		from edi_elp_msg elpmsg,edi_elp_port elpport,edi_elp_allot elpallot where  elpmsg.TR_NO=elpport.tr_no 
		and elpmsg.tr_no=elpallot.tr_no and elpallot.port_doc_line_no=elpport.DOC_LINE_NO
		and  elpallot.CGO_TYPE='Transit HACTL' and elpport.port=#unLdgPoint# and elpmsg.flt_key=#fltKey# and elpmsg.flt_date=TO_DATE(#fltDate#, 'DDMONYY')
		<isNotEmpty property="trNo">
			AND elpmsg.TR_NO = #trNo#
		</isNotEmpty>
		
	</select>	
	<select id="fetch_enq_tarmac_cpct_details" parameterClass="cargo.cms.trn.buildup.bo.EnqTrnFlightAllotmentBO"  resultClass="cargo.cms.trn.buildup.bo.EnqTrnFlightAllotmentBO">
		select elpallot.INSTRUCTION as instruction,'Y' as hardDelete,elpallot.QTY_Q7 as qtyQ7,elpallot.QTY_Q6 as qtyQ6,elpallot.QTY_X8 as qtyX8,
	    elpallot.QTY_PEB as qtyPEB,elpallot.QTY_H5 as qtyH5 ,elpallot.QTY_A2 as qtyA2 ,elpallot.QTY_LDC as qtyLDC ,elpallot.QTY_H2 as qtyH2 ,
	    'Tarmac' as cgoType,elpallot.rmk as rmk,elpmsg.TR_NO as trNo,elpport.DOC_LINE_NO as portDocLineNo,elpallot.DOC_LINE_NO as docLineNo,
	    elpallot.WT as wt,elpallot.H5WT as h5Wt
		from  edi_elp_msg elpmsg,edi_elp_port elpport,edi_elp_allot elpallot 
		where elpmsg.TR_NO=elpport.tr_no and elpmsg.tr_no=elpallot.tr_no and elpallot.port_doc_line_no=elpport.DOC_LINE_NO and  elpallot.CGO_TYPE='Tarmac CPCT' 
	    and elpport.port=#unLdgPoint# and elpmsg.flt_key=#fltKey# and elpmsg.flt_date=TO_DATE(#fltDate#, 'DDMONYY')
	  	<isNotEmpty property="trNo">
		AND elpmsg.TR_NO = #trNo#
		</isNotEmpty>
		
	    UNION ALL
	    
		select elpallot.INSTRUCTION as instruction,'Y' as hardDelete, elpallot.QTY_Q7 as qtyQ7,elpallot.QTY_Q6 as qtyQ6,elpallot.QTY_X8 as qtyX8,elpallot.QTY_PEB as qtyPEB, 
		elpallot.QTY_H5 as qtyH5 ,elpallot.QTY_A2 as qtyA2 ,elpallot.QTY_LDC as qtyLDC ,elpallot.QTY_H2 as qtyH2 , 'Tarmac HACTL' as cgoType,elpallot.rmk as rmk,elpmsg.TR_NO as trNo,
	    elpport.DOC_LINE_NO as portDocLineNo,elpallot.DOC_LINE_NO as docLineNo,	elpallot.WT as wt,	elpallot.H5WT as h5Wt
		from edi_elp_msg elpmsg,edi_elp_port elpport,edi_elp_allot elpallot where  elpmsg.TR_NO=elpport.tr_no 
		and elpmsg.tr_no=elpallot.tr_no and elpallot.port_doc_line_no=elpport.DOC_LINE_NO
		and  elpallot.CGO_TYPE='Tarmac HACTL' and elpport.port=#unLdgPoint# and elpmsg.flt_key=#fltKey# and elpmsg.flt_date=TO_DATE(#fltDate#, 'DDMONYY')
		<isNotEmpty property="trNo">
			AND elpmsg.TR_NO = #trNo#
		</isNotEmpty>
	</select>	
	<select id="fetch_enq_handled_cto" parameterClass="cargo.cms.trn.buildup.bo.EnqTrnFlightAllotmentBO"  resultClass="cargo.cms.trn.buildup.bo.EnqTrnFlightAllotmentBO">
	   select EXP_LOCAL_PPK expLocPpkCTO,MAIL mailCTO,EXP_LOCAL_BU expLocBuCTO,COURIER couCTO,OPEN openCTO,EIC eicCTO from trn_setup a join  trn_setup_eload b on a.tr_no=b.tr_no 
	   where TO_DATE(#fltDate#, 'DDMONYY') BETWEEN PERIOD_FRM AND PERIOD_TO
	</select>
	<!-- transistion enq flt allotment ends -->
	<select id="fetch_enq_tarmac_cpct_detailsCpct" parameterClass="cargo.cms.trn.buildup.bo.EnqTrnFlightAllotmentBO"  resultClass="cargo.cms.trn.buildup.bo.EnqTrnFlightAllotmentBO">
		select elpallot.INSTRUCTION as instruction,'Y' as hardDelete,elpallot.QTY_Q7 as qtyQ7,elpallot.QTY_Q6 as qtyQ6,elpallot.QTY_X8 as qtyX8,
	    elpallot.QTY_PEB as qtyPEB,elpallot.QTY_H5 as qtyH5 ,elpallot.QTY_A2 as qtyA2 ,elpallot.QTY_LDC as qtyLDC ,elpallot.QTY_H2 as qtyH2 ,
	    'Tarmac' as cgoType,elpallot.rmk as rmk,elpmsg.TR_NO as trNo,elpport.DOC_LINE_NO as portDocLineNo,elpallot.DOC_LINE_NO as docLineNo,
	    elpallot.WT as wt,elpallot.H5WT as h5Wt
		from  trn_elp_msg elpmsg,trn_elp_port elpport,trn_elp_allot elpallot 
		where elpmsg.TR_NO=elpport.tr_no and elpmsg.tr_no=elpallot.tr_no and elpallot.port_doc_line_no=elpport.DOC_LINE_NO and  elpallot.CGO_TYPE='Tarmac CPCT' 
	    and elpport.port=#unLdgPoint# and elpmsg.flt_key=#fltKey# and elpmsg.flt_date=TO_DATE(#fltDate#, 'DDMONYY')
	  	<isNotEmpty property="trNo">
		AND elpmsg.TR_NO = #trNo#
		</isNotEmpty>
		
	    UNION ALL
	    
		select elpallot.INSTRUCTION as instruction,'Y' as hardDelete, elpallot.QTY_Q7 as qtyQ7,elpallot.QTY_Q6 as qtyQ6,elpallot.QTY_X8 as qtyX8,elpallot.QTY_PEB as qtyPEB, 
		elpallot.QTY_H5 as qtyH5 ,elpallot.QTY_A2 as qtyA2 ,elpallot.QTY_LDC as qtyLDC ,elpallot.QTY_H2 as qtyH2 , 'Tarmac HACTL' as cgoType,elpallot.rmk as rmk,elpmsg.TR_NO as trNo,
	    elpport.DOC_LINE_NO as portDocLineNo,elpallot.DOC_LINE_NO as docLineNo,	elpallot.WT as wt,	elpallot.H5WT as h5Wt
		from trn_elp_msg elpmsg,trn_elp_port elpport,trn_elp_allot elpallot where  elpmsg.TR_NO=elpport.tr_no 
		and elpmsg.tr_no=elpallot.tr_no and elpallot.port_doc_line_no=elpport.DOC_LINE_NO
		and  elpallot.CGO_TYPE='Tarmac HACTL' and elpport.port=#unLdgPoint# and elpmsg.flt_key=#fltKey# and elpmsg.flt_date=TO_DATE(#fltDate#, 'DDMONYY')
		<isNotEmpty property="trNo">
			AND elpmsg.TR_NO = #trNo#
		</isNotEmpty>
	</select>	
	<select id="fetch_enq_transit_summary_detailsCpct" parameterClass="cargo.cms.trn.buildup.bo.EnqTrnFlightAllotmentBO"  resultClass="cargo.cms.trn.buildup.bo.EnqTrnFlightAllotmentBO">
	SELECT trn_fbl_shp.export_cto    AS expCTO,
		  'FBL'                          AS summaryType,
		  NVL(SUM(trn_fbl_shp.pcs),0)    AS qty,
		  NVL(SUM(trn_fbl_shp.net_wt),0) AS weightCode,
		  NULL                           AS qtLoosePc,
		  NULL                           AS qtLooseWeight,
		  NULL                           AS fullUldAllot,
		  (DECODE(ROUND((NVL(SUM(trn_fbl_shp.net_wt),0)/
		  (SELECT to_number(CODE_DESC)
		  FROM MAST_CODE_DTL
		  WHERE CODE= 'FBL_ALLOT_P'
		  )),0),'0','',((ROUND((NVL(SUM(trn_fbl_shp.net_wt),0)/
		  (SELECT to_number(CODE_DESC)
		  FROM MAST_CODE_DTL
		  WHERE CODE= 'FBL_ALLOT_P'
		  )),0)||'P')))) estFblQuotient,
		  (DECODE(ROUND((MOD(NVL(SUM(trn_fbl_shp.net_wt),0),
		  (SELECT to_number(CODE_DESC) FROM MAST_CODE_DTL WHERE CODE= 'FBL_ALLOT_P'
		  )) /
		  (SELECT to_number(CODE_DESC) FROM MAST_CODE_DTL WHERE CODE= 'FBL_ALLOT_A'
		  )),0),'0','',((ROUND((MOD(NVL(SUM(trn_fbl_shp.net_wt),0),
		  (SELECT to_number(CODE_DESC) FROM MAST_CODE_DTL WHERE CODE= 'FBL_ALLOT_P'
		  )) /
		  (SELECT to_number(CODE_DESC) FROM MAST_CODE_DTL WHERE CODE= 'FBL_ALLOT_A'
		  )),0))||#trnFltSfx#))) estFblRemainder
			FROM trn_fbl
			INNER JOIN trn_fbl_shp
			ON trn_fbl.tr_no = trn_fbl_shp.tr_no  and trn_fbl_shp.org!='HKG'  
			LEFT JOIN awb
			ON trn_fbl_shp.awb_no=awb.awb_no
			AND awb.awb_date     =trn_fbl_shp.awb_date
             LEFT JOIN
       (SELECT DISTINCT msg.flt_key,
		    msg.flt_date,		  
		    shp.awb_no,
        shp.awb_date,
		    trf.cntg_flt_key,
		    trf.cntg_flt_date,
		    trf.UNLDG_PT,
		    trf.TRF_TYPE,
		    trf.TRF_PC,
		    trf.TRF_WT
		  FROM ddt_msg msg,		   
		    ddt_shp shp ,
		    ddt_shp_trf_dtl trf
		  WHERE 
		   shp.tr_no       =msg.tr_no
		  AND trf.sdoc_line_no= shp.doc_line_no
		  AND trf.tr_no       =msg.tr_no
		  ) ddt  
      ON   trn_fbl.flt_key || #trnFltSfx#=ddt.cntg_flt_key and trn_fbl.flt_date=ddt.cntg_flt_DATE
      and ddt.awb_no= trn_fbl_shp.awb_no and ddt.awb_date=trn_fbl_shp.awb_date
     ,
			 trn_elp_msg msg
			WHERE trn_fbl.flt_key    =#fltKey#
			AND trn_fbl.flt_date     = TO_DATE(#fltDate# , 'DDMONYY')
			AND trn_fbl_shp.unldg_pt =  #unLdgPoint#
			AND trn_fbl.si_type     IN('S','I')
			AND trn_fbl.fbl_status   ='P'
		AND trn_fbl.flt_key      =msg.flt_key
		AND trn_fbl.flt_date     = msg.flt_date
			AND trn_fbl.tr_no        = trn_fbl_shp.tr_no
		AND msg.tr_no           IN
			  (SELECT b.trNO
			 FROM
			   (SELECT rownum r,
			      a.trNo
			    FROM
			      (SELECT elpmsg.tr_no AS trNo
			      FROM trn_elp_msg elpmsg,
			        trn_fbl
			      where elpmsg.flt_key=#fltKey# and elpmsg.flt_date=TO_DATE(#fltDate#, 'DDMONYY')
			      ORDER BY to_number(elpmsg.tr_no)  desc
			      )a
			    WHERE rownum &lt;=2
			    ) b
			  WHERE r=#rownum#
			  )
			AND trn_fbl_shp.export_cto IS NOT NULL   
			GROUP BY trn_fbl_shp.export_cto
			UNION
			SELECT trn_ffm_shp.cto AS expCTO,
        'DDT' AS summaryType,
        (select nvl(SUM(SHP_TRF_PC),0) from 
        V_DDT_DTL 
        where 
        SHP_cntg_flt_date=ddt.cntg_flt_date and SHP_cntg_flt_key=ddt.cntg_flt_key and ddt.UNLDG_PT=SHP_UNLDG_PT
        and SHP_TRF_TYPE='QT') AS qty,
       (select nvl(SUM(SHP_TRF_WT),0) from 
        V_DDT_DTL 
        where 
        SHP_cntg_flt_date=ddt.cntg_flt_date and SHP_cntg_flt_key=ddt.cntg_flt_key and ddt.UNLDG_PT=SHP_UNLDG_PT
        and SHP_TRF_TYPE='QT' ) AS weightCode,
        (select nvl(SUM(SHP_TRF_PC),0) from 
        V_DDT_DTL 
          where 
         SHP_cntg_flt_date=ddt.cntg_flt_date and SHP_cntg_flt_key=ddt.cntg_flt_key and ddt.UNLDG_PT=SHP_UNLDG_PT
        and SHP_TRF_TYPE='QT' AND TRF_TYPE IS NULL ) AS qtLoosePc,
        (select nvl(SUM(SHP_TRF_WT),0) from 
        V_DDT_DTL 
          where 
         SHP_cntg_flt_date=ddt.cntg_flt_date and SHP_cntg_flt_key=ddt.cntg_flt_key and ddt.UNLDG_PT=SHP_UNLDG_PT
        and SHP_TRF_TYPE='QT' AND TRF_TYPE IS NULL ) AS qtLooseWeight,
       (  SELECT STRAGG(STRINGDELIM((COUNT(SUBSTR(ULD_KEY,0,3)))
    		|| (SELECT  uld_allot  FROM MAST_ULD_ALLOT_GROUP a, uld_group_type c where a.uld_group = c.uld_group and c.uld_type=SUBSTR(ULD_KEY,0,3) AND ROWNUM=1) ,','))
          FROM V_DDT_DTL
          WHERE SHP_cntg_flt_date  =ddt.cntg_flt_date
          AND SHP_cntg_flt_key     =ddt.cntg_flt_key
          AND ddt.UNLDG_PT=SHP_UNLDG_PT
          AND SUBSTR(ULD_KEY,0,3) IS NOT NULL
          AND SHP_TRF_TYPE         ='QT'
          AND TRF_TYPE            IS NOT NULL 
          GROUP BY ULD_KEY) AS fullUldAllot,
       (decode(ROUND((NVL(((select nvl(SUM(SHP_TRF_WT),0) from 
        V_DDT_DTL 
          where 
         SHP_cntg_flt_date=ddt.cntg_flt_date and SHP_cntg_flt_key=ddt.cntg_flt_key and ddt.UNLDG_PT=SHP_UNLDG_PT 
        and SHP_TRF_TYPE='QT' AND TRF_TYPE IS NULL)),0)/(SELECT to_number(CODE_DESC)  FROM MAST_CODE_DTL WHERE CODE= 'QT_ALLOT_P')),0),'0','',((ROUND((NVL(((select nvl(SUM(SHP_TRF_WT),0) from 
        V_DDT_DTL 
          where 
         SHP_cntg_flt_date=ddt.cntg_flt_date and SHP_cntg_flt_key=ddt.cntg_flt_key and ddt.UNLDG_PT=SHP_UNLDG_PT 
        and SHP_TRF_TYPE='QT' AND TRF_TYPE IS NULL)),0)/(SELECT to_number(CODE_DESC)  FROM MAST_CODE_DTL WHERE CODE= 'QT_ALLOT_P')),0))||'P'))) estFblQuotient,
       (decode(ROUND((MOD((NVL((select nvl(SUM(SHP_TRF_WT),0) from 
        V_DDT_DTL 
          where 
         SHP_cntg_flt_date=ddt.cntg_flt_date and SHP_cntg_flt_key=ddt.cntg_flt_key and ddt.UNLDG_PT=SHP_UNLDG_PT 
        and SHP_TRF_TYPE='QT' AND TRF_TYPE IS NULL),0)),(SELECT to_number(CODE_DESC)  FROM MAST_CODE_DTL WHERE CODE= 'QT_ALLOT_P'))
        /(SELECT to_number(CODE_DESC)  FROM MAST_CODE_DTL WHERE CODE= 'QT_ALLOT_A')),0),'0','',((ROUND((MOD((NVL((select nvl(SUM(SHP_TRF_WT),0) from 
        V_DDT_DTL 
          where 
         SHP_cntg_flt_date=ddt.cntg_flt_date and SHP_cntg_flt_key=ddt.cntg_flt_key and ddt.UNLDG_PT=SHP_UNLDG_PT 
        and SHP_TRF_TYPE='QT' AND TRF_TYPE IS NULL),0)),(SELECT to_number(CODE_DESC)  FROM MAST_CODE_DTL WHERE CODE= 'QT_ALLOT_P'))
        /(SELECT to_number(CODE_DESC)  FROM MAST_CODE_DTL WHERE CODE= 'QT_ALLOT_A')),0))||#trnFltSfx#))) estFblRemainder
        from 
        (select  msg.flt_key,msg.flt_date,uld.uld_key,shp.awb_no,shp.awb_date, trf.cntg_flt_key,trf.cntg_flt_date,trf.UNLDG_PT,trf.TRF_TYPE,trf.TRF_PC,trf.TRF_WT 
        from ddt_msg msg,ddt_uld uld ,ddt_shp shp ,
        ddt_shp_trf_dtl trf
        where uld.tr_no= msg.tr_no and uld.doc_line_no=shp.udoc_line_no
        and shp.tr_no=msg.tr_no and trf.sdoc_line_no= shp.doc_line_no  and
        trf.tr_no=msg.tr_no) ddt
          ,
          trn_ffm_msg join trn_ffm_shp on trn_ffm_msg.tr_no=trn_ffm_shp.tr_no,
          trn_elp_msg msg
   	where 
   	 trn_ffm_msg.flt_key || #trnFltSfx#=ddt.flt_key
            and trn_ffm_msg.flt_date = ddt.flt_date and
        ddt.cntg_flt_date=TO_DATE(#fltDate#, 'DDMONYY') and ddt.cntg_flt_key=#fltKey#||#trnFltSfx#
        AND ddt.UNLDG_PT=#unLdgPoint#
        and ddt.TRF_TYPE='QT'
        and trn_ffm_msg.flt_key ||#trnFltSfx#=ddt.flt_key and trn_ffm_msg.flt_date=ddt.flt_date
        and trn_ffm_shp.awb_no=ddt.awb_no
        AND ddt.cntg_flt_key   =msg.flt_key ||#trnFltSfx#
        AND ddt.cntg_flt_date    = msg.flt_date
        and msg.tr_no in(SELECT b.trNO FROM 
        (SELECT rownum r, a.trNo  FROM (select elpmsg.tr_no as trNo from  trn_elp_msg elpmsg where elpmsg.flt_key=#fltKey# and elpmsg.flt_date=TO_DATE(#fltDate#, 'DDMONYY')  order by to_number(elpmsg.tr_no) desc)a
		                WHERE rownum &lt;=2) b WHERE r=#rownum#)
        AND trn_ffm_shp.cto IS NOT NULL  AND trn_ffm_shp.awb_no=ddt.awb_no and trn_ffm_shp.awb_date=ddt.awb_date and trn_ffm_msg.ffm_status='P'
            
	</select>
	
	<select id="fetch_enq_tarmac_summary_detailsCpct" parameterClass="cargo.cms.trn.buildup.bo.EnqTrnFlightAllotmentBO"  resultClass="cargo.cms.trn.buildup.bo.EnqTrnFlightAllotmentBO">
	    SELECT distinct trn_ffm_shp.cto                       AS expCTO,
        (select nvl(SUM(SHP_TRF_PC),0) from 
        V_DDT_DTL 
        where 
        SHP_cntg_flt_date=ddt.cntg_flt_date and SHP_cntg_flt_key=ddt.cntg_flt_key and ddt.UNLDG_PT=SHP_UNLDG_PT
        and SHP_TRF_TYPE='TT'  ) AS ttPc,
      (select nvl(SUM(SHP_TRF_WT),0) from 
        V_DDT_DTL 
        where 
        SHP_cntg_flt_date=ddt.cntg_flt_date and SHP_cntg_flt_key=ddt.cntg_flt_key and ddt.UNLDG_PT=SHP_UNLDG_PT
        and SHP_TRF_TYPE='TT' ) AS ttWeight,
       (select nvl(SUM(SHP_TRF_PC),0) from 
        V_DDT_DTL 
          where 
         SHP_cntg_flt_date=ddt.cntg_flt_date and SHP_cntg_flt_key=ddt.cntg_flt_key and ddt.UNLDG_PT=SHP_UNLDG_PT
        and SHP_TRF_TYPE='TT'  AND TRF_TYPE IS NULL) AS ttLoosePc,
        (select nvl(SUM(SHP_TRF_WT),0) from 
        V_DDT_DTL 
          where 
         SHP_cntg_flt_date=ddt.cntg_flt_date and SHP_cntg_flt_key=ddt.cntg_flt_key  and ddt.UNLDG_PT=SHP_UNLDG_PT
        and SHP_TRF_TYPE='TT'  AND TRF_TYPE IS NULL) AS ttLooseWeight,
        (  SELECT STRAGG(STRINGDELIM((COUNT(SUBSTR(ULD_KEY,0,3)))
          || (SELECT  uld_allot  FROM MAST_ULD_ALLOT_GROUP a, uld_group_type c where a.uld_group = c.uld_group and c.uld_type=SUBSTR(ULD_KEY,0,3) AND ROWNUM=1) ,','))
          FROM V_DDT_DTL
          WHERE SHP_cntg_flt_date  =ddt.cntg_flt_date
          AND SHP_cntg_flt_key     =ddt.cntg_flt_key
          AND ddt.UNLDG_PT=SHP_UNLDG_PT
          AND SUBSTR(ULD_KEY,0,3) IS NOT NULL
          AND SHP_TRF_TYPE         ='TT'
         
          AND TRF_TYPE            IS NOT NULL
          GROUP BY ULD_KEY) AS ttfullUldAllot,
        (DECODE(ROUND((NVL(((select nvl(SUM(SHP_TRF_WT),0) from 
        V_DDT_DTL 
        where 
        SHP_cntg_flt_date=ddt.cntg_flt_date and SHP_cntg_flt_key=ddt.cntg_flt_key and ddt.UNLDG_PT=SHP_UNLDG_PT 
        and SHP_TRF_TYPE='TT' AND TRF_TYPE IS NULL)),0)/(SELECT to_number(CODE_DESC)  FROM MAST_CODE_DTL WHERE CODE= 'TT_ALLOT')),0),'0','',((ROUND((NVL(((select nvl(SUM(SHP_TRF_WT),0) from 
        V_DDT_DTL 
        where 
        SHP_cntg_flt_date=ddt.cntg_flt_date and SHP_cntg_flt_key=ddt.cntg_flt_key and ddt.UNLDG_PT=SHP_UNLDG_PT 
        and SHP_TRF_TYPE='TT' AND TRF_TYPE IS NULL)),0)/(SELECT to_number(CODE_DESC)  FROM MAST_CODE_DTL WHERE CODE= 'TT_ALLOT')),0))||'H5'))) AS ttestOutput,
       (select nvl(SUM(SHP_TRF_PC),0) from 
        V_DDT_DTL 
        where 
        SHP_cntg_flt_date=ddt.cntg_flt_date and SHP_cntg_flt_key=ddt.cntg_flt_key and ddt.UNLDG_PT=SHP_UNLDG_PT 
        and SHP_TRF_TYPE='IF') AS ifPc,
      (select nvl(SUM(SHP_TRF_WT),0) from 
        V_DDT_DTL 
        where 
        SHP_cntg_flt_date=ddt.cntg_flt_date and SHP_cntg_flt_key=ddt.cntg_flt_key and ddt.UNLDG_PT=SHP_UNLDG_PT 
        and SHP_TRF_TYPE='IF') AS ifWeight,
        (select nvl(SUM(SHP_TRF_PC),0) from 
        V_DDT_DTL 
          where 
         SHP_cntg_flt_date=ddt.cntg_flt_date and SHP_cntg_flt_key=ddt.cntg_flt_key  and ddt.UNLDG_PT=SHP_UNLDG_PT 
        and SHP_TRF_TYPE='IF' AND TRF_TYPE IS NULL) AS ifLoosePc,
        (select nvl(SUM(SHP_TRF_WT),0) from 
        V_DDT_DTL 
          where 
         SHP_cntg_flt_date=ddt.cntg_flt_date and SHP_cntg_flt_key=ddt.cntg_flt_key  and ddt.UNLDG_PT=SHP_UNLDG_PT 
        and SHP_TRF_TYPE='IF' AND TRF_TYPE IS NULL) AS ifLooseWeight,
        (  SELECT STRAGG(STRINGDELIM((COUNT(SUBSTR(ULD_KEY,0,3)))
          || (SELECT  uld_allot  FROM MAST_ULD_ALLOT_GROUP a, uld_group_type c where a.uld_group = c.uld_group and c.uld_type=SUBSTR(ULD_KEY,0,3) AND ROWNUM=1) ,','))
          FROM V_DDT_DTL
          WHERE SHP_cntg_flt_date  =ddt.cntg_flt_date
          AND SHP_cntg_flt_key     =ddt.cntg_flt_key
          AND ddt.UNLDG_PT=SHP_UNLDG_PT
        
          AND SUBSTR(ULD_KEY,0,3) IS NOT NULL
          AND SHP_TRF_TYPE         ='IF'
          AND TRF_TYPE            IS NOT NULL
          GROUP BY ULD_KEY) AS iffullUldAllot,
        (DECODE(ROUND((NVL(((select nvl(SUM(SHP_TRF_WT),0) from 
        V_DDT_DTL 
          where 
        SHP_cntg_flt_date=ddt.cntg_flt_date and SHP_cntg_flt_key=ddt.cntg_flt_key and ddt.UNLDG_PT=SHP_UNLDG_PT 
        and SHP_TRF_TYPE='IF' AND TRF_TYPE IS NULL)),0)/(SELECT to_number(CODE_DESC)  FROM MAST_CODE_DTL WHERE CODE= 'IF_ALLOT')),0),'0','',((ROUND((NVL(((select nvl(SUM(SHP_TRF_WT),0) from 
        V_DDT_DTL 
          where 
        SHP_cntg_flt_date=ddt.cntg_flt_date and SHP_cntg_flt_key=ddt.cntg_flt_key and ddt.UNLDG_PT=SHP_UNLDG_PT 
        and SHP_TRF_TYPE='IF' AND TRF_TYPE IS NULL)),0)/(SELECT to_number(CODE_DESC)  FROM MAST_CODE_DTL WHERE CODE= 'IF_ALLOT')),0))||'H5'))) AS ifestOutput
      FROM  trn_elp_msg msg,            
      trn_ffm_msg join trn_ffm_shp on trn_ffm_msg.tr_no=trn_ffm_shp.tr_no, 
      (select  msg.flt_key,msg.flt_date,uld.uld_key,shp.awb_no,shp.awb_date, trf.cntg_flt_key,trf.cntg_flt_date,trf.UNLDG_PT,trf.TRF_TYPE,trf.TRF_PC,trf.TRF_WT from ddt_msg msg,ddt_uld uld ,ddt_shp shp ,
        ddt_shp_trf_dtl trf
        where uld.tr_no= msg.tr_no and uld.doc_line_no=shp.udoc_line_no
        and shp.tr_no=msg.tr_no and trf.sdoc_line_no= shp.doc_line_no  and
        trf.tr_no=msg.tr_no) ddt 
            WHERE 
            trn_ffm_msg.flt_key || (SELECT TRN_FLT_SUFFIX FROM SYS_PARAM)=ddt.flt_key
            and trn_ffm_msg.flt_date = ddt.flt_date and
            ddt.cntg_flt_key    =#fltKey# ||(SELECT TRN_FLT_SUFFIX FROM SYS_PARAM)
            AND ddt.cntg_flt_date     = TO_DATE(#fltDate#, 'DDMONYY')
            AND ddt.UNLDG_PT = #unLdgPoint#
            AND ddt.cntg_flt_key    =msg.flt_key ||(SELECT TRN_FLT_SUFFIX FROM SYS_PARAM)
            AND ddt.cntg_flt_date     = msg.flt_date
            and msg.tr_no in(SELECT b.trNO FROM 
        (SELECT rownum r, a.trNo  FROM (select elpmsg.tr_no as trNo from  trn_elp_msg elpmsg where elpmsg.flt_key=#fltKey# and elpmsg.flt_date=TO_DATE(#fltDate#, 'DDMONYY')  order by to_number(elpmsg.tr_no) desc)a
		                WHERE rownum &lt;=2) b WHERE r=#rownum#)
      AND trn_ffm_shp.cto IS NOT NULL and trn_ffm_msg.ffm_status='P'
      AND trn_ffm_shp.awb_no=ddt.awb_no and trn_ffm_shp.awb_date=ddt.awb_date 
    
	
	</select>
	
	<select id="fetch_enq_transit_cpct_detailsCpct" parameterClass="cargo.cms.trn.buildup.bo.EnqTrnFlightAllotmentBO"  resultClass="cargo.cms.trn.buildup.bo.EnqTrnFlightAllotmentBO">
		select elpallot.INSTRUCTION as instruction,'Y' as hardDelete,elpallot.QTY_Q7 as qtyQ7,elpallot.QTY_Q6 as qtyQ6,elpallot.QTY_X8 as qtyX8,
	    elpallot.QTY_PEB as qtyPEB,elpallot.QTY_H5 as qtyH5 ,elpallot.QTY_A2 as qtyA2 ,elpallot.QTY_LDC as qtyLDC ,elpallot.QTY_H2 as qtyH2 ,
	    'Transit' as cgoType,elpallot.rmk as rmk,elpmsg.TR_NO as trNo,elpport.DOC_LINE_NO as portDocLineNo,elpallot.DOC_LINE_NO as docLineNo,
	    elpallot.WT as wt,elpallot.H5WT as h5Wt
		from  trn_elp_msg elpmsg,trn_elp_port elpport,trn_elp_allot elpallot 
		where elpmsg.TR_NO=elpport.tr_no and elpmsg.tr_no=elpallot.tr_no and elpallot.port_doc_line_no=elpport.DOC_LINE_NO and  elpallot.CGO_TYPE='Transit CPCT' 
	    and elpport.port=#unLdgPoint# and elpmsg.flt_key=#fltKey# and elpmsg.flt_date=TO_DATE(#fltDate#, 'DDMONYY')
	  	<isNotEmpty property="trNo">
		AND elpmsg.TR_NO = #trNo#
		</isNotEmpty>
		
	    UNION ALL
	    
		select elpallot.INSTRUCTION as instruction,'Y' as hardDelete, elpallot.QTY_Q7 as qtyQ7,elpallot.QTY_Q6 as qtyQ6,elpallot.QTY_X8 as qtyX8,elpallot.QTY_PEB as qtyPEB, 
		elpallot.QTY_H5 as qtyH5 ,elpallot.QTY_A2 as qtyA2 ,elpallot.QTY_LDC as qtyLDC ,elpallot.QTY_H2 as qtyH2 , 'Transit HACTL' as cgoType,elpallot.rmk as rmk,elpmsg.TR_NO as trNo,
	    elpport.DOC_LINE_NO as portDocLineNo,elpallot.DOC_LINE_NO as docLineNo,	elpallot.WT as wt,	elpallot.H5WT as h5Wt
		from trn_elp_msg elpmsg,trn_elp_port elpport,trn_elp_allot elpallot where  elpmsg.TR_NO=elpport.tr_no 
		and elpmsg.tr_no=elpallot.tr_no and elpallot.port_doc_line_no=elpport.DOC_LINE_NO
		and  elpallot.CGO_TYPE='Transit HACTL' and elpport.port=#unLdgPoint# and elpmsg.flt_key=#fltKey# and elpmsg.flt_date=TO_DATE(#fltDate#, 'DDMONYY')
		<isNotEmpty property="trNo">
			AND elpmsg.TR_NO = #trNo#
		</isNotEmpty>
		
	</select>	
	<select id="checkTrnForValidDateToAndFromTime" parameterClass="cargo.cms.trn.buildup.bo.EnqTrnFlightAllotmentBO"  resultClass="java.lang.String">
	select (case
         when (SELECT TO_CHAR(TO_DATE(#fromFltDate#,'DDMONYY') - TO_DATE(#toFltDate#,'DD-MON-YY')) DAYDIFF FROM DUAL) >= 1
         then 'Y'
         ELSE 
          'N'      
         end) AS dateInd         
         FROM DUAL
 </select>
 <select id="checkTrnValidExportFlight" parameterClass="map" resultClass="java.lang.Integer">	
		SELECT COUNT(1) FROM trn_flt_opr   WHERE flt_key = #fltKey#    AND sch_date between   to_date(#fromDate#,'DDMONYY') AND  to_date(#toDate#,'DDMONYY') AND flt_type = 'D'            
    </select>
 <select id="getTrnEnqUnLdgPoints" parameterClass="cargo.cms.trn.buildup.bo.EnqTrnFlightAllotmentBO"  resultClass="cargo.cms.trn.buildup.bo.EnqTrnFlightAllotmentBO">
	    select off_point as unLdgPoint from trn_flt_opr_seg where tr_no in (select tr_no from trn_flt_opr where flt_key = #fltKey# and sch_date=to_date(#fltDate#,'dd-mon-yy') and flt_type = 'D') and brd_point='HKG' 
	</select>
	<select id="checkTrnUnladingPortValid" parameterClass="java.lang.String" resultClass="java.lang.Integer">
	    	    SELECT COUNT(1) FROM trn_FLT_OPR_LEG where off_point= #dest#
	</select>
	<!-- transistion enq flt allotment ends -->
	
	<!-- Transition changes for transit control checklist - starts -->
	<select id="getFfmCto" parameterClass="java.util.HashMap" resultClass="java.lang.String">
	 	select shp.cto 
			from trn_ffm_msg msg 
			     join trn_ffm_shp shp 
			     on msg.tr_no=shp.tr_no
			where msg.flt_key=#fltKey#
			      AND msg.flt_date=TO_DATE(#fltDate#,'DDMONYY')
			      AND SHP.AWB_NO=UPPER(#awbNo#)
			      AND SHP.AWB_DATE=TO_DATE(#awbDate#,'DDMONYY')
			      and msg.FFM_STATUS='P'
			      and rownum=1
	</select>
	
	<update id="updateCtoDisc" parameterClass="java.util.HashMap">
		update trn_ffm_msg 
		set ddt_cto_disc='Y'
      	where flt_key=#fltKey#
      	and flt_date=TO_DATE(#fltDate#,'DDMONYY')
      	and FFM_STATUS='P' 
	</update>	
	<!-- Transition changes for transit control checklist - ends -->
	
	<!-- FFM Data Concurrency Issue Resolving Queries Added on 22MAY2012 By Varadaraj Muni -->
	<insert id="sqlInsertEdiFFMMsgLockForTrn" parameterClass="cargo.cms.trn.bo.TrnFFMMessageBO">
		INSERT INTO EDI_FFM_MSG_LOCK(FLT_KEY,FLT_DATE,BRD_POINT,VER_NO,MSG_TYPE) VALUES(#flightKey#, TO_DATE(#flightDate#,'MM/DD/YYYY'),#loadingPoint#,0,'TFM')
	</insert>
	<select id="sqlSelectEdiFFMMsgLockForUpdateForTrn" parameterClass="cargo.cms.trn.bo.TrnFFMMessageBO" resultClass="java.util.HashMap">
		SELECT FLT_KEY, FLT_DATE, BRD_POINT,VER_NO FROM EDI_FFM_MSG_LOCK WHERE FLT_KEY = #flightKey# AND FLT_DATE = TO_DATE(#flightDate#,'MM/DD/YYYY') 
		AND BRD_POINT = #loadingPoint# AND MSG_TYPE='TFM'
		FOR UPDATE OF VER_NO
	</select>
	<update id="sqlUpdateEdiFFMMsgLockForTrn" parameterClass="cargo.cms.trn.bo.TrnFFMMessageBO">
		UPDATE EDI_FFM_MSG_LOCK SET VER_NO = (VER_NO + 1) WHERE FLT_KEY = #flightKey# AND FLT_DATE = TO_DATE(#flightDate#,'MM/DD/YYYY') AND BRD_POINT = #loadingPoint# 
		AND MSG_TYPE='TFM'
	</update>
	<!-- End -->
	<update id="sqlUpdateTrnFFMMsgVersionNo" parameterClass="java.util.HashMap">
		UPDATE TRN_FFM_MSG SET VER_NO_AFTER_CONF = (TO_NUMBER(VER_NO_AFTER_CONF) + 1) WHERE 
		FLT_KEY = #fltKey# AND FLT_DATE = TO_DATE(#fltDate#,'MM/DD/YYYY') AND BRD_POINT = #brdPoint# AND FFM_STATUS = 'P' AND SI_TYPE = 'I' AND CONFIRM_YN = 'Y'
	</update>	
	
	<!-- FLIGHT Allotment Concurrency Issue Resolving Queries Added on 28MAY2012 By Asha Joshi-->
	<insert id="sqlInsertTrnFlightAllotLock" parameterClass="cargo.cms.trn.buildup.bo.TrnFlightAllotmentBO">
		INSERT INTO TRN_ELP_MSG_LOCK(FLT_KEY, FLT_DATE, VER_NO) VALUES(#fltKey#, TO_DATE(#fltDate#,'DDMONYY'),1)
	</insert>
	<select id="sqlSelectTrnFlightAllotLockForUpdate" parameterClass="cargo.cms.trn.buildup.bo.TrnFlightAllotmentBO" resultClass="java.util.HashMap">
		SELECT FLT_KEY, FLT_DATE, VER_NO FROM TRN_ELP_MSG_LOCK WHERE FLT_KEY = #fltKey# AND FLT_DATE = TO_DATE(#fltDate#,'DDMONYY')
		FOR UPDATE OF VER_NO
	</select>
	<update id="sqlUpdateTrnFlightAllotLock" parameterClass="cargo.cms.trn.buildup.bo.TrnFlightAllotmentBO">
		UPDATE TRN_ELP_MSG_LOCK SET VER_NO = #versionNo# WHERE FLT_KEY = #fltKey# AND FLT_DATE = TO_DATE(#fltDate#,'DDMONYY')
	</update>

<!-- Send FWB/FHL Message :: Anup :: Begins -->
	<select id="fetchFFMAWBShpForHactl" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT 
			SUBSTR(TFS.AWB_NO, 1, 3) AWB_PFX, SUBSTR(TFS.AWB_NO, 4) AWB_SFX, TFS.AWB_NO AWB_NO, TO_CHAR(TFS.AWB_DATE, 'DDMONYY') AWB_DATE, (SELECT AGENT_CODE FROM 
			AWB WHERE AWB_NO=TFS.AWB_NO AND AWB_DATE=TFS.AWB_DATE) AGENT_CODE, DECODE(TFS.DEST, 'HKG', 'I', DECODE(TFS.ORG, 'HKG', 'E', 'T')) AWB_TYPE, 
			TFS.CTO AWB_CTO 
		FROM 
			TRN_FFM_MSG TFM, TRN_FFM_SHP TFS 
		WHERE 
			TFM.TR_NO=TFS.TR_NO AND TFM.FLT_KEY=#fltKey# AND TFM.FLT_DATE=TO_DATE(#fltDate#, 'DDMONYY') AND TFM.BRD_POINT=#ldgPt# AND TFM.FFM_STATUS='P'
			
	</select>
	
	<select id="fetchFBLAWBShpForHactl" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT 
			TFS.AWB_NO AWB_NO, TO_CHAR(TFS.AWB_DATE, 'DDMONYY') AWB_DATE, DECODE(TFS.DEST, 'HKG', 'I', DECODE(TFS.ORG, 'HKG', 'E', 'T')) AWB_TYPE, 
			TFS.EXPORT_CTO AWB_CTO 
		FROM 
			TRN_FBL TFM, TRN_FBL_SHP TFS 
		WHERE 
			TFM.TR_NO=TFS.TR_NO AND TFM.FLT_KEY=#fltKey# AND TFM.FLT_DATE=TO_DATE(#fltDate#, 'DDMONYY') AND TFM.UNLDG_PT=#unldgPt# AND TFM.FBL_STATUS='P'
			
	</select>
	
	<select id="isFWBReceivedForAWB" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM EDI_FWB WHERE AWB_NO=#awbNo# AND AWB_DATE=TO_DATE(#awbDate#, 'DDMONYY')
	</select>
	
	<select id="isFHLReceivedForAWB" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM EDI_FHL WHERE AWB_NO=#awbNo# AND AWB_DATE=TO_DATE(#awbDate#, 'DDMONYY')
	</select>
	
	<select id="isFHLReceivedForAWBFrmGLS" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM EDI_FHL WHERE AWB_NO=#awbNo# AND AWB_DATE=TO_DATE(#awbDate#, 'DDMONYY') AND GLS_IND='Y'
	</select>
	
	<select id="isFFMShpConfirmed" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM TRN_FFM_MSG TFM, TRN_FFM_SHP TFS WHERE TFS.TR_NO=TFM.TR_NO AND TFS.AWB_NO=#awbNo# AND TFS.AWB_DATE=TO_DATE(#awbDate#, 'DDMONYY') 
			AND TFM.CONFIRM_YN='Y' AND TFS.CTO='HACTL' AND TFM.FFM_STATUS='P'
	</select>
	
	<select id="isFFMShpConfirmedForCpct" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM TRN_FFM_MSG TFM, TRN_FFM_SHP TFS WHERE TFS.TR_NO=TFM.TR_NO AND TFS.AWB_NO=#awbNo# AND TFS.AWB_DATE=TO_DATE(#awbDate#, 'DDMONYY') 
			AND TFM.CONFIRM_YN='Y' AND TFS.CTO='CPCT' AND TFM.FFM_STATUS='P'
	</select>
	
	<select id="isFBLShpConfirmed" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM TRN_FBL TF, TRN_FBL_SHP TFS WHERE TFS.TR_NO=TF.TR_NO AND TFS.AWB_NO=#awbNo# AND TFS.AWB_DATE=TO_DATE(#awbDate#, 'DDMONYY') 
			AND TF.CONFIRM_YN='Y' AND TFS.EXPORT_CTO='HACTL' AND TF.FBL_STATUS='P'
	</select>
	
	<select id="isFBLShpConfirmedForCpct" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM TRN_FBL TF, TRN_FBL_SHP TFS WHERE TFS.TR_NO=TF.TR_NO AND TFS.AWB_NO=#awbNo# AND TFS.AWB_DATE=TO_DATE(#awbDate#, 'DDMONYY') 
			AND TF.CONFIRM_YN='Y' AND TFS.EXPORT_CTO='CPCT' AND TF.FBL_STATUS='P'
	</select>
	
	<select id="fetchAwbAgentCode" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT AGENT_CODE FROM AWB WHERE AWB_NO=#awbNo# AND AWB_DATE=TO_DATE(#awbDate#, 'DDMONYY')
	</select>
	
	<select id="fetchAwbDateTypeByAwbNo" parameterClass="java.lang.String" resultClass="java.util.HashMap">
		SELECT * FROM (SELECT TO_CHAR(AWB_DATE, 'DDMONYY') AWB_DATE, AWB_TYPE FROM AWB WHERE AWB_NO=#awbNo# ORDER BY AWB_DATE DESC) WHERE ROWNUM=1
	</select>
	
	<select id="fetchAwbDateTypeByAwbNoFromTrnFbl" parameterClass="java.lang.String" resultClass="java.util.HashMap">
		SELECT * FROM (SELECT TO_CHAR(AWB_DATE, 'DDMONYY') AWB_DATE, DECODE(ORG, 'HKG', 'E', 'T') AWB_TYPE FROM TRN_FBL_SHP WHERE AWB_NO=#awbNo# 
			ORDER BY AWB_DATE DESC) WHERE ROWNUM=1
	</select>
	
	<!-- Send FWB/FHL Message :: Anup :: Ends -->
	
	<select id="fetchSchDateByInboundFltforCPM" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		<!-- >SELECT TO_CHAR(SCH_DATE, 'MM/DD/YYYY') FROM TRN_FLT_OPR_LEG WHERE FLT_KEY=#fltKey# AND 
		TRUNC(TO_DATE(TO_CHAR(SCH_DEP_DATE,'DDMONYY')||LPAD(SCH_DEP_TIME,4,0),'DDMONYYHH24MI') - (GET_TIME_GMT_DIFF(#port#))/24)=TO_DATE(#fltDate#, 'MM/DD/YYYY') 
		AND BRD_POINT=#port# AND FLT_TYPE='A' -->
		SELECT TO_CHAR(SCH_DATE,'MM/DD/YYYY') FROM TRN_FLT_OPR_LEG WHERE TR_NO IN
			(SELECT TR_NO FROM TRN_FLT_OPR_LEG WHERE FLT_KEY=#fltKey# AND TRUNC(TO_DATE(TO_CHAR(SCH_DEP_DATE,'DDMONYY')||LPAD(SCH_DEP_TIME,4,0),'DDMONYYHH24MI') - 
    		(GET_TIME_GMT_DIFF(BRD_POINT))/24)=TO_DATE(#fltDate#, 'MM/DD/YYYY') AND LEG_ORD=1 AND FLT_TYPE = 'A')
    	AND BRD_POINT = #port#
	</select>
	<insert id="insert_AWB_HACTL_FWB_FHL" parameterClass="java.util.HashMap">
		INSERT INTO TRN_AWB_HACTL_FWBFHL(AWB_NO, AWB_DATE, FHL_SENT_INDICATOR, FWB_SENT_INDICATOR, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE) 
			VALUES(#awbNo#, TO_DATE(#awbDate#,'DDMONYY'), #fhlInd#, #fwbInd#, 'SYSTEM', SYSDATE, 'SYSTEM', SYSDATE)
	</insert>
	<update id="update_AWB_HACTL_FWB" parameterClass="java.util.HashMap">
		UPDATE TRN_AWB_HACTL_FWBFHL SET FWB_SENT_INDICATOR = #fwbInd#, LM_USER_ID='SYSTEM', LM_DATE=SYSDATE 
			WHERE AWB_NO = #awbNo# AND AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
	</update>
	<update id="update_AWB_HACTL_FHL" parameterClass="java.util.HashMap">
		UPDATE TRN_AWB_HACTL_FWBFHL SET FHL_SENT_INDICATOR = #fhlInd#, LM_USER_ID='SYSTEM', LM_DATE=SYSDATE 
			WHERE AWB_NO = #awbNo# AND AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
	</update>
	<select id="select_AWB_HACTL_FWB_FHL" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM TRN_AWB_HACTL_FWBFHL WHERE AWB_NO = #awbNo# AND AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
	</select>
	<select id="IS_SENT_FWB" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM TRN_AWB_HACTL_FWBFHL WHERE AWB_NO = #awbNo# AND AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') and FWB_SENT_INDICATOR='Y'
	</select>
	<select id="IS_SENT_FHL" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM TRN_AWB_HACTL_FWBFHL WHERE AWB_NO = #awbNo# AND AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') and FHL_SENT_INDICATOR='Y'
	</select>
	
	<!-- Forwarding Message to HACTL :: For FFM, FBL, FFMH, FWB, FHL -->
	<select id="GET_HACTL_MSG_TRNO" parameterClass="cargo.cms.common.trn.bo.MsgForwarderHactlBO" resultClass="cargo.cms.common.trn.bo.MsgForwarderHactlBO">
		select msgLog.msg_content messageContentBytes from  MSG_FWD_HACTL_CONFIG fwd ,message_log msgLog
		where fwd.msg_type=#msgType# and msglog.msg_log_id=fwd.msg_log_id and fwd.msg_tr_no in		
	            <iterate property="trNo" open="(" close=")" conjunction=",">
	                 #trNo[]#  
	            </iterate>
	</select>
	<select id="GET_HACTL_MSG_NO_TRNO" parameterClass="cargo.cms.common.trn.bo.MsgForwarderHactlBO" resultClass="cargo.cms.common.trn.bo.MsgForwarderHactlBO">
		select * from (select msg_content messageContentBytes, cr_date from message_log 
				where msg_type=#msgType# and awb_no=#awbNo# order by cr_date desc) where rownum=1
	</select>
	<insert id="createMsgFwdHactlConfiguration" parameterClass="java.util.HashMap">
		INSERT INTO MSG_FWD_HACTL_CONFIG VALUES(#msgTrNo#, #msgLogId#, #msgType#, SYSDATE)
	</insert>
	<select id="isAnyFFMShpForCpct" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM TRN_FFM_MSG TFM, TRN_FFM_SHP TFS WHERE TFM.TR_NO=TFS.TR_NO AND TFM.FLT_KEY=#fltKey# AND TFM.FLT_DATE=TO_DATE(#fltDate#, 'DDMONYY') 
			AND TFM.FFM_STATUS='P' AND TFM.BRD_POINT=#ldgPt# AND TFS.CTO='CPCT'
	</select>
	<select id="isAnyFBLShpForCpct" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM TRN_FBL TF, TRN_FBL_SHP TFS WHERE TFS.TR_NO=TF.TR_NO AND TF.FLT_KEY=#fltKey# AND TF.FLT_DATE=TO_DATE(#fltDate#, 'DDMONYY') 
			AND TF.UNLDG_PT=#unLdgPt# AND TF.FBL_STATUS='P' AND TFS.EXPORT_CTO='CPCT'
	</select>
	<select id="fetchTrNoForFWBReceivedForAWB" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT TR_NO FROM EDI_FWB WHERE AWB_NO=#awbNo# AND AWB_DATE=TO_DATE(#awbDate#, 'DDMONYY')
	</select>	
	<select id="fetchTrNoForFHLReceivedForAWB" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT TR_NO FROM EDI_FHL WHERE AWB_NO=#awbNo# AND AWB_DATE=TO_DATE(#awbDate#, 'DDMONYY')
	</select>
	<select id="isShpPresentForHactlFFM" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		select count(1) from
  			(select awb_no from exp_pman_tarmac_awb where flt_key=#fltKey# and flt_Date=to_date(#fltDate#, 'DDMONYY')
    			union
  			select awb_no from exp_pmanifest_awb where flt_key=#fltKey# and flt_Date=to_date(#fltDate#, 'DDMONYY'))
	</select>
	<select id="fetchAllTrnFFMTrNoForFlt" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT STRAGG(STRINGDELIM(TR_NO, ',')) FROM TRN_FFM_MSG WHERE FLT_KEY=#fltKey# AND FLT_DATE=TO_DATE(#fltDate#, 'DDMONYY') AND FFM_STATUS='P'
	</select>
	<select id="fetchAllTrnFBLTrNoForFlt" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT STRAGG(STRINGDELIM(TR_NO, ',')) FROM TRN_FBL WHERE FLT_KEY=#fltKey# AND FLT_DATE=TO_DATE(#fltDate#, 'DDMONYY') AND FBL_STATUS='P'
	</select>
	<select id="fetchAllTrnHactlFFMTrNo" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT STRAGG(STRINGDELIM(TR_NO, ',')) FROM TRN_FFM_OUT_MSG WHERE FLT_KEY=#fltKey# AND FLT_DATE=TO_DATE(#fltDate#, 'DDMONYY') AND FFM_STATUS='P'
	</select>
	<select id="isMessageRcvdInLog" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM MESSAGE_LOG WHERE MSG_TYPE=#msgType# AND AWB_NO=#awbNo#
	</select>
	
	<select id="checkExistingFltOprWithSuffix"  parameterClass="cargo.cms.edi.ei.bo.ASMMessageBO"  resultClass="cargo.cms.edi.ei.bo.ASMMessageBO">
	<![CDATA[
		SELECT	TR_NO trNo, ACFT_TYPE aircraftType,TO_CHAR(SCH_DATE,'MM/DD/YYYY') schDate,status flightStatus
				FROM FLT_OPR 
				WHERE UPPER(CARR_CODE) = UPPER(#flightCarr#) 
				AND UPPER(FLT_NO) = UPPER(#flightNo# ||#trnFltSfx#)				
				AND TO_CHAR(ORG_FLT_DATE,'MM/DD/YYYY') = UPPER(#orgFltDate#)
				AND FLT_TYPE=#flightType#
		]]>
   	</select>  	 	
  
	 <insert id="FLTinsertInFLTOPR_TRN" parameterClass="cargo.cms.edi.ei.bo.ASMMessageBO">
		<![CDATA[
			INSERT INTO FLT_OPR(
				TR_NO, CARR_CODE, FLT_NO, FLT_KEY, ORG_FLT_DATE, SCH_DATE, FLT_TYPE, ACFT_TYPE,
				CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE,ORIG,DEST,ORIG_DATE,DEST_DATE,ORIG_TIME,DEST_TIME,GROUND_HANDLER, 
				SCH_TIME,CGO_ACFT_TYPE,PRTY_IND,wh_level,flt_module1,flt_module2,chkout_area,svc_type,to_ind,jv_code)
			VALUES(
				#trNo#,UPPER(#flightCarr#),UPPER(#flightNo#||#trnFltSfx#),UPPER(#flightKey#||#trnFltSfx#),TO_DATE(#orgFltDate#,'MM/DD/YYYY'),
				TO_DATE(#schDate#,'MM/DD/YYYY'),#flightType#,#aircraftType#,#createdUserId#,SYSDATE,#createdUserId#,SYSDATE,
				#orig#,#dest#,TO_DATE(#origDate#,'MM/DD/YYYY'),TO_DATE(#destDate#,'MM/DD/YYYY'),#origTime#,#destTime#,'CPT', 
	  			DECODE(#flightType#, 'A', #destTime#, #origTime#),#cgoAircraftType#,0,#whLevel#,#primaryModule#,#secModule#,#chkoutarea#,NVL(#serviceType#,'S'),NVL(#transportInd#,'N'),#jvCode#)	
		]]>
	</insert>

	<insert id="FLTinsertInFLTOPRLEG_TRN" parameterClass="cargo.cms.edi.ei.bo.ASMMessageBO" >
	<![CDATA[
		INSERT INTO FLT_OPR_LEG(
		TR_NO, DOC_LINE_NO, CARR_CODE, FLT_NO, FLT_KEY, ORG_FLT_DATE, SCH_DATE,
		BRD_POINT, OFF_POINT, LEG_ORD,SCH_DEP_DATE, SCH_DEP_TIME,
		SCH_ARR_DATE, SCH_ARR_TIME, ACFT_TYPE, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE,FLT_TYPE,hse_bu_ind,prohibit_shc1,prohibit_shc2,prohibit_shc3,auto_assgn_uld)
	  	VALUES(
		#trNo#,#docLineNumber#,UPPER(#flightCarr#),UPPER(#flightNo#||#trnFltSfx#),UPPER(#flightKey#||#trnFltSfx#),TO_DATE(#orgFltDate#,'MM/DD/YYYY'),
		TO_DATE(#schDate#,'MM/DD/YYYY'), UPPER(#brdPoint#), UPPER(#offPoint#),#legOrder#,TO_DATE(#depDate#,'MM/DD/YYYY'),
		#depTime#,TO_DATE(#arrDate#,'MM/DD/YYYY'),#arrTime#,#aircraftType#,
		#createdUserId#,SYSDATE,#createdUserId#,SYSDATE,#flightType#,#houseBuInd#,#shc1#,#shc2#,#shc3#,#autoAssignUld#)
		
	]]>
	</insert>	
	<select id="checkForFFMSuffix" parameterClass="cargo.cms.edi.ei.bo.ASMMessageBO" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM EDI_FFM_MSG WHERE FLT_KEY=#flightKey#||#trnFltSfx# AND FLT_DATE=TO_DATE(#schDate#,'MM/DD/YYYY') AND FFM_STATUS ='P'
	</select>
	
	<select id="checkForPMANSuffix" parameterClass="cargo.cms.edi.ei.bo.ASMMessageBO" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM EXP_PMANIFEST_AWB WHERE FLT_KEY=#flightKey#||#trnFltSfx# AND FLT_DATE=TO_DATE(#schDate#,'MM/DD/YYYY') AND FLT_TYPE='E'
	</select>
	 	<select id="checkExistingTrnFltOpr"  parameterClass="cargo.cms.edi.ei.bo.ASMMessageBO"  resultClass="cargo.cms.edi.ei.bo.ASMMessageBO">
	<![CDATA[
		SELECT	TR_NO trNo, ACFT_TYPE aircraftType,TO_CHAR(SCH_DATE,'MM/DD/YYYY') schDate,status flightStatus
				FROM TRN_FLT_OPR 
				WHERE UPPER(CARR_CODE) = UPPER(#flightCarr#) 
				AND UPPER(FLT_NO) = UPPER(#flightNo# )				
				AND TO_CHAR(ORG_FLT_DATE,'MM/DD/YYYY') = UPPER(#orgFltDate#)
				AND FLT_TYPE=#flightType#
		]]>
   	</select>
   		
	<insert id="FLTinsertInTRNFLTOPR" parameterClass="cargo.cms.edi.ei.bo.ASMMessageBO">
		<![CDATA[
			INSERT INTO TRN_FLT_OPR(
				TR_NO, CARR_CODE, FLT_NO, FLT_KEY, ORG_FLT_DATE, SCH_DATE, FLT_TYPE, ACFT_TYPE,
				CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE,ORIG,DEST,ORIG_DATE,DEST_DATE,ORIG_TIME,DEST_TIME,GROUND_HANDLER, 
				SCH_TIME,CGO_ACFT_TYPE,PRTY_IND,wh_level,flt_module1,flt_module2,chkout_area,svc_type,to_ind,jv_code)
			VALUES(
				#trNo#,UPPER(#flightCarr#),UPPER(#flightNo#),UPPER(#flightKey#),TO_DATE(#orgFltDate#,'MM/DD/YYYY'),
				TO_DATE(#schDate#,'MM/DD/YYYY'),#flightType#,#aircraftType#,#createdUserId#,SYSDATE,#createdUserId#,SYSDATE,
				#orig#,#dest#,TO_DATE(#origDate#,'MM/DD/YYYY'),TO_DATE(#destDate#,'MM/DD/YYYY'),#origTime#,#destTime#,'CPT', 
	  			DECODE(#flightType#, 'A', #destTime#, #origTime#),#cgoAircraftType#,0,#whLevel#,#primaryModule#,#secModule#,#chkoutarea#,NVL(#serviceType#,'S'),NVL(#transportInd#,'N'),#jvCode#)	
		]]>
	</insert>
	<insert id="FLTinsertInTRNFLTOPRLEG" parameterClass="cargo.cms.edi.ei.bo.ASMMessageBO" >
	<![CDATA[
		INSERT INTO TRN_FLT_OPR_LEG(
		TR_NO, DOC_LINE_NO, CARR_CODE, FLT_NO, FLT_KEY, ORG_FLT_DATE, SCH_DATE,
		BRD_POINT, OFF_POINT, LEG_ORD,SCH_DEP_DATE, SCH_DEP_TIME,
		SCH_ARR_DATE, SCH_ARR_TIME, ACFT_TYPE, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE,FLT_TYPE,hse_bu_ind,prohibit_shc1,prohibit_shc2,prohibit_shc3,auto_assgn_uld)
	  	VALUES(
		#trNo#,#docLineNumber#,UPPER(#flightCarr#),UPPER(#flightNo#),UPPER(#flightKey#),TO_DATE(#orgFltDate#,'MM/DD/YYYY'),
		TO_DATE(#schDate#,'MM/DD/YYYY'), UPPER(#brdPoint#), UPPER(#offPoint#),#legOrder#,TO_DATE(#depDate#,'MM/DD/YYYY'),
		#depTime#,TO_DATE(#arrDate#,'MM/DD/YYYY'),#arrTime#,#aircraftType#,
		#createdUserId#,SYSDATE,#createdUserId#,SYSDATE,#flightType#,#houseBuInd#,#shc1#,#shc2#,#shc3#,#autoAssignUld#)
		
	]]>
	</insert>
	<update id="FLTupdateTRNFLTOPR" parameterClass="cargo.cms.edi.ei.bo.ASMMessageBO">
	<![CDATA[
			UPDATE  TRN_FLT_OPR SET ORG_FLT_DATE =TO_DATE(#orgFltDate#,'MM/DD/YYYY'),SCH_DATE=DECODE(#flightType#, 'A', TO_DATE(#destDate#,'MM/DD/YYYY'), TO_DATE(#origDate#,'MM/DD/YYYY')), 
			ORIG = UPPER(#orig#), ORIG_DATE = TO_DATE(#origDate#,'MM/DD/YYYY'), 
					ORIG_TIME = #origTime#, DEST =  UPPER(#dest#),					
					DEST_DATE = TO_DATE(#destDate#,'MM/DD/YYYY'), DEST_TIME = #destTime#,ACFT_TYPE = nvl(#aircraftType#,ACFT_TYPE),
					SCH_TIME=DECODE(#flightType#, 'A', #destTime#, #origTime#), LM_USER_ID=#createdUserId#, LM_DATE=SYSDATE,CGO_ACFT_TYPE=#cgoAircraftType# 
			WHERE	TR_NO = #trNo#
		]]>
	</update>
	<update id="FLTupdateTRNFLTOPREQT" parameterClass="cargo.cms.edi.ei.bo.ASMMessageBO">
	<![CDATA[
			UPDATE  TRN_FLT_OPR SET ACFT_TYPE = nvl(#aircraftType#,ACFT_TYPE), LM_USER_ID=#createdUserId#, LM_DATE=SYSDATE 
			WHERE	TR_NO = #trNo#
		]]>
	</update>
	<update id="FLTupdateTRNFLTOPRLEG" parameterClass="cargo.cms.edi.ei.bo.ASMMessageBO">
		UPDATE	TRN_FLT_OPR_LEG SET ORG_FLT_DATE =TO_DATE(#orgFltDate#,'MM/DD/YYYY'),SCH_DATE=TO_DATE(#schDate#,'MM/DD/YYYY'),
				BRD_POINT =  UPPER(#brdPoint#), OFF_POINT =  UPPER(#offPoint#), SCH_DEP_DATE = TO_DATE(#depDate#,'MM/DD/YYYY'), 
				SCH_DEP_TIME = #depTime#, SCH_ARR_DATE = TO_DATE(#arrDate#,'MM/DD/YYYY'), SCH_ARR_TIME = #arrTime#, 
				LM_USER_ID=#createdUserId#, LM_DATE=SYSDATE 
		WHERE	TR_NO = #trNo# AND DOC_LINE_NO = #docLineNumber#
	</update>
	<update id="updateTrnFltOprLegEQT" parameterClass="cargo.cms.edi.ei.bo.ASMMessageBO">
		UPDATE TRN_FLT_OPR_LEG SET ACFT_TYPE = #aircraftType#, LM_USER_ID=#createdUserId#, LM_DATE=SYSDATE 
		WHERE	TR_NO = #trNo# 
	</update>
	<delete id="FLTdeleteTRNFLTOPRLEG" parameterClass="java.lang.String">
	<![CDATA[
			DELETE TRN_FLT_OPR_LEG WHERE TR_NO = #trNo# 
		]]>
	</delete>

	<delete id="FLTdeleteTRNFLTOPREVENT" parameterClass="java.lang.String">
	<![CDATA[
			DELETE TRN_FLT_OPR_EVENTS WHERE TR_NO = #trNo# 
		]]>
	</delete>

	<delete id="FLTdeleteTRNFLTOPRSEG" parameterClass="java.lang.String">
	<![CDATA[
			DELETE TRN_FLT_OPR_SEG WHERE TR_NO = #trNo# 
		]]>
	</delete>

	<delete id="FLTdeleteTRNFLTOPR" parameterClass="java.lang.String">
	<![CDATA[
			DELETE TRN_FLT_OPR WHERE TR_NO = #trNo# 
		]]>
	</delete>
	<update id="cancelTrnFltOpr" parameterClass="cargo.cms.edi.ei.bo.ASMMessageBO">
		UPDATE TRN_FLT_OPR SET STATUS = #flightStatus#, LM_USER_ID=#createdUserId#, LM_DATE=SYSDATE 				
		WHERE	TR_NO = #trNo# 
	</update>
	<select id="getDocLineNo_trn_flt_opr_leg" parameterClass="cargo.cms.edi.ei.bo.ASMMessageBO" resultClass="java.lang.String">
	select doc_line_no as docLineNumber from trn_flt_opr_leg where tr_no=#trNo# and brd_point=UPPER(#brdPoint#) and off_point=UPPER(#offPoint#)	
	</select>
	
	<select id="isExportShpConfigForCPCT" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM TRN_SETUP TS, TRN_SETUP_SHC TSS WHERE TSS.TR_NO=TS.TR_NO AND TRUNC(SYSDATE) BETWEEN TS.PERIOD_FRM AND TS.PERIOD_TO AND TSS.SHC IN (
  			#splCode1#, #splCode2#, #splCode3#, #splCode4#, #splCode5#, #splCode6#, #splCode1#, #splCode1#, #splCode1#
		) AND EXP_TRMNL='CPCT'
	</select>
	
	<select id="fetchTransitionStage" parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT TRN_STAGE FROM TRN_SETUP WHERE TRUNC(SYSDATE) BETWEEN PERIOD_FRM AND PERIOD_TO
	</select>
	<select id="sqlFetchLatestFBLConfirmYN" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM TRN_FBL WHERE FLT_KEY = #fltKey# AND FLT_DATE = TO_DATE(#fltDate#,'MM/DD/YYYY') AND UNLDG_PT = #unldgPt# AND FBL_STATUS = 'P' AND CONFIRM_YN = 'Y'
	</select>
	
</sqlMap>