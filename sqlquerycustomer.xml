<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<!-- The SQL in these maps files has purposely been typed with more verbosity than is actually required.
 For example, many of the selects could have just used SELECT * FROM... instead of listing all of the columns.
 This is to demonstrate that even complex SQL can be handled and coded and formatted the way SQL was meant
 to be (i.e. not a bunch of concatenated strings in a Java class).
 
 Version No	Changed By	Changed On	Purpose
==============================================================
1.0			Mayank		13Mar07		change for def . - 5494 (Production Support)

 -->
<sqlMap namespace="Customer">

<!-- Create Customer Account Starts -->
	<select id="checkValidCarrierCode"  parameterClass="cargo.cms.customer.bo.CustomerBO" resultClass="java.lang.Integer">
      <![CDATA[
                  SELECT COUNT(*) as count FROM MAST_CARRIER WHERE OWNED_CARR = 'Y' and CODE = #carrierCode# 
            ]]>
      </select>
      
   	 	<select id="checkUniqueCarrierCode"  parameterClass="cargo.cms.customer.bo.CustomerBO" resultClass="java.lang.Integer">
			SELECT COUNT(*) as count FROM cust_company WHERE carr_code=#carrierCode# 
					<isNotEmpty prepend="AND" property="companyCustomerNo">
						code != #companyCustomerNo#
					</isNotEmpty>
	   	</select>      

	<select id="checkLoginSubAccess" parameterClass="map"	resultClass="java.lang.String">
	select ENABLE_YN from SEC_ROLE_SUB_FUNCTION a,  SEC_USER_ROLE  b 
	where a.Role_CODE = b.Role_name and Function_code = #functionCode# and Sub_FUNCTION_CODE = #subFunctionCode#
	and b.User_ID = #userId# and ENABLE_YN = 'Y' and rownum = 1
	</select>
	
	<select id="fetchShipperDates"  parameterClass="cargo.cms.customer.bo.CustomerBO" resultClass="cargo.cms.customer.bo.CustomerBO">
	<![CDATA[
		SELECT VERIFICATION_DATE as shipperVerificationDate, VALID_DATE as shipperValidDate FROM CUST_COMPANY where CODE=#companyCustomerNo#
		
	]]>
   	</select>
   	<select id="checkCity"  parameterClass="cargo.cms.customer.bo.CustomerBO" resultClass="java.lang.Integer">
	<![CDATA[
			select COUNT(*) from MAST_CITY where ctry_code=#countryDesc# and code_desc=#cityDesc#
		]]>
   	</select>
   	
   	<select id="checkCustomerCity"  parameterClass="java.lang.String" resultClass="java.lang.Integer">
	<![CDATA[
			select COUNT(1) from MAST_CITY where code=#PARAM#
		]]>
   	</select>
   	
   	<select id="checkCustomerCityForCust"  parameterClass="java.lang.String" resultClass="java.lang.Integer">
	<![CDATA[
			select COUNT(1) from MAST_CITY where code_desc=#PARAM#
		]]>
   	</select>
   	<select id="fetchCustomerCityCodeForCust"  parameterClass="java.lang.String" resultClass="java.lang.String">
	<![CDATA[
			select CODE from MAST_CITY where code_desc=#PARAM#
		]]>
   	</select>
   	<select id="fetchPrevCustName"  parameterClass="java.lang.String" resultClass="java.lang.String">
	<![CDATA[
			SELECT CODE_DESC FROM CUST_COMPANY WHERE CODE=#PARAM#
		]]>
   	</select>
   	<select id="checkCustomerCountry"  parameterClass="java.lang.String" resultClass="java.lang.Integer">
	<![CDATA[
			select COUNT(*) from MAST_COUNTRY where code=#PARAM#
		]]>
   	</select>
   	
   	<select id="checkDuplicateBRNO"  parameterClass="cargo.cms.customer.bo.CustomerBO" resultClass="java.lang.Integer">
			SELECT COUNT(*) as count FROM CUST_COMPANY WHERE bus_reg_no =#busRegNo#
			<isNotEmpty prepend="AND" property="companyCustomerNo">
				code != #companyCustomerNo#
			</isNotEmpty>
   	</select>
	<select id="foreignkeyforcarrierandawbprefixcheck"  parameterClass="cargo.cms.customer.bo.CustomerBO" resultClass="java.lang.Integer">
	<![CDATA[
	SELECT NVL(COUNT(*),0)
	FROM MAST_AWB_PREFIX
	WHERE CODE = #awb# AND  
	CARR_CODE = #carrierCode# 
	]]>
   	</select>
	
	
	<select id="sqlFetchCustomerDetails" parameterClass="cargo.cms.customer.bo.CustomerBO" resultClass="cargo.cms.customer.bo.CustomerBO">
		SELECT name, suffix FROM CUST_COMPANY where UPPER(name) = UPPER(#name#)
			<isNotEmpty prepend="AND" property="suffix">
				upper(suffix) = upper(#suffix#)
			</isNotEmpty>
			<isEmpty prepend="AND" property="suffix">
				upper(suffix) is null
			</isEmpty> 
	</select>
	<select id="sqlFetchCustCompanyDetails" parameterClass="cargo.cms.customer.bo.CustomerBO" resultClass="cargo.cms.customer.bo.CustomerBO">
		SELECT CODE as agentId, CODE_DESC as agentName FROM CUST_COMPANY WHERE upper(CODE_DESC) = upper(#agentName#) 
	</select>
	
	<select id="sqlCarrierNoCount"  parameterClass="cargo.cms.customer.bo.CustomerBO" resultClass="java.lang.Integer">
		<![CDATA[
				SELECT COUNT(*) as count FROM MAST_CARRIER WHERE CODE = #carrierCode# 
			]]>
   	</select>
   	<select id="sqlCountryCount"  parameterClass="cargo.cms.customer.bo.CustomerBO" resultClass="java.lang.Integer">
		<![CDATA[
				SELECT COUNT(*) as count FROM MAST_COUNTRY WHERE CODE = #countryCode# 
			]]>
   	</select>
   	<select id="sqlBillCountryCount"  parameterClass="cargo.cms.customer.bo.CustomerBO" resultClass="java.lang.Integer">
		<![CDATA[
				SELECT COUNT(*) as count FROM MAST_COUNTRY WHERE CODE = #billCountryCode# 
			]]>
   	</select>
   	   	   	<select id="sqlAdmCountryCount"  parameterClass="cargo.cms.customer.bo.CustomerBO" resultClass="java.lang.Integer">
		<![CDATA[
				SELECT COUNT(*) as count FROM MAST_COUNTRY WHERE CODE = #admCountryCode# 
			]]>
   	</select>  
   	
   		<update id="updateAppAgentDetails" parameterClass="cargo.cms.customer.bo.CustomerBO" >
	<![CDATA[
		UPDATE CUST_APP_AGENT SET 
					AGENT_ID = #agentId#, 
					APP_DATE = TO_DATE(#appDate#,'DDMONYY'), 
					EXP_DATE = TO_DATE(#expiryDate#,'DDMONYY'),		       
					RMK = #remarks#,
					LM_USER_ID     = #modifiedId#,
					LM_DATE        = SYSDATE					
					WHERE
					AGENT_ID = #agentId# 
						]]>
	</update>
	 
   		<select id="sqlagentdetailsbycustomerno"  parameterClass="cargo.cms.customer.bo.CustomerBO" resultClass="cargo.cms.customer.bo.CustomerBO">
	<![CDATA[
		
			SELECT
                 CC1.CODE_DESC AS agentName,
                 CA.CUST_NO AS companyCustomerNo,
                 CA.AGENT_ID AS agentId,
                 TO_CHAR(CA.APP_DATE,'DDMONYY') AS appDate,
                 TO_CHAR(CA.APP_DATE,'DDMONYY') AS oldAppDate,
                 TO_CHAR(CA.EXP_DATE,'DDMONYY') AS expiryDate,
                 TO_CHAR(CA.EXP_DATE,'DDMONYY') AS oldExpiryDate,
                 TO_CHAR(CA.LM_DATE,'DDMONYY HH24:MI') AS modifiedDate,
                 CA.LM_USER_ID AS modifiedId,
                 CA.RMK AS remarks,
                 CA.CARR_CODE AS carrierCode
             FROM CUST_COMPANY CC,CUST_APP_AGENT CA, CUST_COMPANY CC1
             WHERE CC.CODE = CA.CUST_NO and CC1.CODE=CA.AGENT_ID AND 
			 CC.CODE = #companyCustomerNo#
		]]>
   	</select>
   	
   	<select id="fetchParticipentCodeDtls"  parameterClass="cargo.cms.customer.bo.CustomerBO" resultClass="cargo.cms.customer.bo.CustomerBO">
			SELECT CARR_CODE as carrierCode,PARTICIPANT_CODE as nonCarrId  FROM CUST_AGENT_PARTICIPANT_CODE where CUST_NO = #companyCustomerNo#
   	</select>
   	
   	<select id="sqlagentsearchbyagentid"  parameterClass="cargo.cms.customer.bo.CustomerBO" resultClass="cargo.cms.customer.bo.CustomerBO">
	<![CDATA[
		
			SELECT
				CC.CODE_DESC AS agentName,
				CA.CUST_NO AS companyCustomerNo,
				CA.AGENT_ID AS agentId, 
				TO_CHAR(CA.APP_DATE,'DDMONYY') AS appDate, 
				TO_CHAR(CA.EXP_DATE,'DDMONYY') AS expiryDate, 
		        TO_CHAR(CA.LM_DATE,'DDMONYY HH24:MI') AS modifiedDate,
		        CA.LM_USER_ID AS modifiedId,
				CA.RMK AS remarks,
				CA.CARR_CODE AS carrierCode
			FROM CUST_COMPANY CC,CUST_APP_AGENT CA 
			WHERE CC.CODE = CA.AGENT_ID AND CA.AGENT_ID = #agentId#
		]]>
			<isNotEmpty prepend="AND" property="carrierCode">
				CA.CARR_CODE = #carrierCode#
			</isNotEmpty>
   	</select>
   	
  <select id="sqlawbdetails"  parameterClass="cargo.cms.customer.bo.CustomerBO" resultClass="cargo.cms.customer.bo.CustomerBO">
	<![CDATA[
			SELECT 
				awb_pfx as awb 
			FROM CUST_AIRL_AWB_PFX 
			WHERE cust_no=#companyCustomerNo#
		]]>
   	</select>	
   	
   <update id="updateAWBPrefixDetails" parameterClass="cargo.cms.customer.bo.CustomerBO" >
	<![CDATA[
		UPDATE CUST_AIRL_AWB_PFX SET 
					CARR_CODE = #carrierCode#, 
					AWB_PFX = #awb#,
					LM_USER_ID = #modifiedId#,
					LM_DATE    = SYSDATE					
					WHERE
					CUST_NO = #companyCustomerNo# 
						]]>
	</update>
	 <select id="checkSitaAdr"  parameterClass="cargo.cms.customer.bo.CustomerBO" resultClass="java.lang.Integer">
	<![CDATA[
		select count(1) from cust_airl_sita_addr where cust_no = #companyCustomerNo#
	]]>
	</select>
	<select id="checkSitaGrp"  parameterClass="cargo.cms.customer.bo.CustomerBO" resultClass="java.lang.Integer">
		<![CDATA[
			select count(1) from cust_airl_sita_grp where cust_no = #companyCustomerNo#
		]]>
	</select>
	<select id="checkAgentKC"  parameterClass="cargo.cms.customer.bo.CustomerBO" resultClass="java.lang.Integer">
		<![CDATA[
			select count(1) from cust_agent_kc where cust_no = #companyCustomerNo#
		]]>
	</select>
	<select id="checkAgentRA"  parameterClass="cargo.cms.customer.bo.CustomerBO" resultClass="java.lang.Integer">
		<![CDATA[
			select count(1) from cust_agent_ra where cust_no = #companyCustomerNo#
		]]>
	</select>
	
	   	<select id="checkAliasName"  parameterClass="cargo.cms.customer.bo.CustomerBO" resultClass="java.lang.Integer">
	<![CDATA[
		select count(1) from CUST_AGENT_ALIAS where cust_no = #companyCustomerNo#
	]]>
	</select>
	<select id="checkAuthRep"  parameterClass="cargo.cms.customer.bo.CustomerBO" resultClass="java.lang.Integer">
		<![CDATA[
			select count(1) from CUST_AGENT_AUTH_REP where cust_no = #companyCustomerNo#
		]]>
	</select>
	<select id="checkRCL"  parameterClass="cargo.cms.customer.bo.CustomerBO" resultClass="java.lang.Integer">
		<![CDATA[
			select count(1) from EXP_RCL_HD where cust_no = #companyCustomerNo#
		]]>
	</select>
	<select id="checkExportCar"  parameterClass="cargo.cms.customer.bo.CustomerBO" resultClass="java.lang.Integer">
		<![CDATA[
			select count(1) from EXP_CAR where SHIPPER_CODE = #companyCustomerNo# OR AGENT_CODE = #companyCustomerNo#
		]]>
	</select>
		<select id="checkImportCar"  parameterClass="cargo.cms.customer.bo.CustomerBO" resultClass="java.lang.Integer">
		<![CDATA[
			select count(1) from IMP_CAR_AWB where CNS_CUST_NO=#companyCustomerNo# OR AGENT_CUST_NO=#companyCustomerNo#
		]]>
	</select>
	<select id="checkCredit"  parameterClass="cargo.cms.customer.bo.CustomerBO" resultClass="java.lang.Integer">
		<![CDATA[
			select count(1) from CUST_AGENT_CREDIT where CUST_NO = #companyCustomerNo# and nvl(status,'*') <> 'VOID'
		]]>
	</select>
		<select id="checkUndertaking"  parameterClass="cargo.cms.customer.bo.CustomerBO" resultClass="java.lang.Integer">
		<![CDATA[
			select count(1) from CUST_UNDERTAKING where AGENT_CODE =#companyCustomerNo#
		]]>
	</select>
	<insert id="sqlcustomerinsert" parameterClass="cargo.cms.customer.bo.CustomerBO" >
	<![CDATA[
		INSERT INTO CUST_COMPANY (CODE,
	   					 CODE_DESC,
						 BUS_REG_NO,
						 AIRLINE_YN,
						 AGENT_YN,
						 CONS_YN,
						 CO_SNAME,
						 CARR_CODE,
						 SELF_HANDLING,
						 URL_ADDR,
						 CO_IATA_CODE,
						 HAFFA_MEMBER,
						 PAY_CRITERIA,
						 PAY_MODE_CAS,
						 PAY_MODE_CHQ,
						 PAY_MODE_CCD,
						 PAY_MODE_EPS,
						 BILL_FRQ,
						 NEXT_BDATE,
						 BLACKLISTED,
						 BLACK_AMT,
						 ACTIVE,
						 ADD1,
						 ADD2,
						 ADD3,
						 ADD4,
						 ADD5,
						 CITY,
						 PIN_CODE,
						 CTRY_CODE,
						 EMAIL1,
						 EMAIL2,
						 EMAIL3,
						 EMAIL4,
						 EMAIL5,
						 TEL_IMP1,
						 TEL_IMP2,
						 TEL_EXP1,
						 TEL_EXP2,
						 TEL1,TEL2,
						 FAX1,FAX2,FAX3,
						 MOB1,TELEX,
						 BILL_ADD1,
						 BILL_ADD2,
						 BILL_ADD3,
						 BILL_ADD4,
						 BILL_ADD5,
						 BILL_CITY,
						 BILL_PIN_CODE,
						 BILL_CTRY_CODE,
						 BILL_ATTN,
						 BILL_EMAIL1,BILL_EMAIL2,
						 BILL_EMAIL3,BILL_EMAIL4,
						 BILL_EMAIL5,
						 BILL_FAX1,BILL_FAX2,BILL_FAX3,
						 ADM_ADD1,
						 ADM_ADD2,
						 ADM_ADD3,
						 ADM_ADD4,
						 ADM_ADD5,
						 ADM_CITY,
						 ADM_PIN_CODE,
						 ADM_CTRY_CODE,
						 ADM_TEL1,
						 ADM_TEL2,
						 ADM_MOB1,
						 ADM_EMAIL1,
						 ADM_EMAIL2,
						 ADM_EMAIL3,
						 ADM_EMAIL4,
						 ADM_EMAIL5,
						 ADM_FAX1,
						 ADM_FAX2,
						 ADM_FAX3,
						 ADM_TELEX,
						 CR_USER_ID,
						 CR_DATE,
						 LM_USER_ID,
						 LM_DATE,
						 RHO_YN,
						 SUFFIX,
						 HSE_LVL_HNDL_YN,
						 HNDL_BY_AGT_SRV_YN,
						 VERIFICATION_DATE,
						 VALID_DATE,
						 DIR_CSGN,
						 SHPR_YN,
						 TRUCKER_YN,
						 NAME,
						 FIN_CODE,
						 HKID,
						 CUST_TYPE,
						 SHA_YN,
						 TCS_YN,
						 ALLOW_PACCO,
						 NO_OF_BOOKING_PERDAY,
						 CERTIFIED_YN,
						 NON_CARR_ID,
						 CASS_AGT_CODE,
						 BYPASS_EXP_CAR,
						 DEF_SC_CHRG_TO,
						 CPSL_COLLECT,
						 SAP_CUSTOMER_ID,
						 ALLOW_ESRF_AA,
						 PRIORITY,
						 CX_CODE
						 )
						 VALUES(
						 #custNo#,
						 trim(#customerName#),
						 #busRegNo#,
						 #airlineType#,
						 #agentType#,
						 #consigneeType#,
						 #customerShortName#,
						 #carrierCode#,
						 #selfHandling#,
						 #urlAddress#,
						 #companyIataCode#,
						 #hafaMember#,
						 #payCriteria#,
						 #payModeCash#,
						 #payModeCheque#,
						 #payModeCreditCard#,
						 #payModeEps#,
						 #billFrequency#,
						 #nextBillDate#,
						 #blackListed#,
						 #blackAmount#,
						 #active#,
						 #add1#,
						 #add2#,
						 #add3#,
						 #add4#,
						 #add5#,
						 #city#,
						 #pinCode#,
						 #countryCode#,
						 #email1#,
						 #email2#,
						 #email3#,
						 #email4#,
						 #email5#,
						 #telImp1#,
						 #telImp2#,
						 #telExp1#,
						 #telExp2#,
						 #tel1#,
						 #tel2#,
						 #fax1#,
						 #fax2#,
						 #fax3#,
						 #mob1#,
						 #telex#,
						 #billAdd1#,
						 #billAdd2#,
						 #billAdd3#,
						 #billAdd4#,
						 #billAdd5#,
						 #billCity#,
						 #billPinCode#,
						 #billCountryCode#,
						 #billAttention#,
						 #billEmail1#,
						 #billEmail2#,
						 #billEmail3#,
						 #billEmail4#,
						 #billEmail5#,
						 #billFax1#,
						 #billFax2#,
						 #billFax3#,
						 #admAdd1#,
						 #admAdd2#,
						 #admAdd3#,
						 #admAdd4#,
						 #admAdd5#,
						 #admCity#,
						 #admPinCode#,
						 #admCountryCode#,
						 #admTel1#,
						 #admTel2#,
						 #admHp#,
						 #admEmail1#,
						 #admEmail2#,
						 #admEmail3#,
						 #admEmail4#,
						 #admEmail5#,
						 #admFax1#,
						 #admFax2#,
						 #admFax3#,
						 #admTelex#,
						 #createdId#,
						 SYSDATE,
						 #modifiedId#,
						 SYSDATE,						 
						 #rhoType#,
						 #suffix#,
						 #houseLevelHandling#,
						 #agentServices#,
						 #verificationDate#,
						 #validDate#,
						 #directConsignee#,
						 #shipperType#,
						 #truckerType#,
						 #name#,
						 #finCode#,
						 #hkId#,
						 #type#,
						 #shaType#,
						 #tcsUserType#,
						 NVL(#allowPacco#,'N'),
						 #bkgQuotaPerDay#,
						 #certifiedYn#,
						 #nonCarrId#,
						 #cassCode#,
						 #byPassExportCar#,
						 #defltSCCharge#,
						 #custCollect#,
						 #sapCustomerNo#,
						 #allowEsrf#,
						 #custPriority#,
						 #cxCode#
						 )
	
	]]>
	</insert>
		
		<select id="sqlcustomerdetails"  parameterClass="cargo.cms.customer.bo.CustomerBO" resultClass="cargo.cms.customer.bo.CustomerBO">
	
			SELECT CODE AS companyCustomerNo,CODE_DESC AS customerName,
						replace(
						 substr(decode(agent_yn, 'Y', 'AGENT') || decode(airline_yn, 'Y', '/AIRLINE')||decode(cons_yn, 'Y', '/CONSIGNEE')||decode(rho_yn, 'Y', '/RHO')||decode(SHPR_YN, 'Y', '/SHIPPER')||decode(SHA_YN, 'Y', '/SHA')||decode(TCS_YN, 'Y', '/TCS USER')||decode(TRUCKER_YN, 'Y', '/TRUCKER'), 1, 1), '/', '')||            
						 substr(decode(agent_yn, 'Y', 'AGENT') || decode(airline_yn, 'Y', '/AIRLINE')||decode(cons_yn, 'Y', '/CONSIGNEE')||decode(rho_yn, 'Y', '/RHO')||decode(SHPR_YN, 'Y', '/SHIPPER')||decode(SHA_YN, 'Y', '/SHA')||decode(TCS_YN, 'Y', '/TCS USER')||decode(TRUCKER_YN, 'Y', '/TRUCKER'), 2)AS  type,
						 BUS_REG_NO as busRegNo,
						 AIRLINE_YN as airlineType,
						 AGENT_YN as agentType,
						 RHO_YN AS rhoType,
						 CONS_YN as consigneeType,
						 SHPR_YN as shipperType,
						 TRUCKER_YN as truckerType,
						 SHA_YN as shaType,
						 TCS_YN as tcsUserType,
						 CO_SNAME as customerShortName,
						 CARR_CODE as carrierCode,
						 (select code3 from mast_carrier where mast_carrier.code = cust_company.CARR_CODE ) as carrier3Code,
						 SELF_HANDLING as selfHandling,
						 URL_ADDR as urlAddress,
						 substr(CO_IATA_CODE,1,2) AS iata1,
						 substr(CO_IATA_CODE,3,1) AS iata2,
						 substr(CO_IATA_CODE,4) AS iata3,
						 HAFFA_MEMBER as hafaMember,
						 PAY_CRITERIA as payCriteria,
						 PAY_MODE_CAS as payModeCash,
						 PAY_MODE_CHQ as payModeCheque,
						 PAY_MODE_CCD as payModeCreditCard,
						 PAY_MODE_EPS as payModeEps,
						 BILL_FRQ as billFrequency,
						 NEXT_BDATE as nextBillDate,
						 BLACKLISTED as blackListed,
						 BLACK_AMT as blackAmount,
						 ACTIVE as active,
						 ADD1 as add1,
						 ADD2 as add2,
						 ADD3 as add3,
						 ADD4 as add4,
						 ADD5 as add5,
						 (select CODE_DESC from MAST_CITY where code=CITY) as city,
						 PIN_CODE as pinCode,
						 CTRY_CODE as countryCode,
						 (select code_desc from mast_country where mast_country.code = CUST_COMPANY.ctry_code) as countryDesc,
						 EMAIL1 as email1,
						 EMAIL2 as email2,
						 EMAIL3 as email3,
						 EMAIL4 as email4,
						 EMAIL5 as email5,
						 TEL_IMP1 as telImp1,
						 TEL_IMP2 as telImp2,
						 TEL_EXP1 as telExp1,
						 TEL_EXP2 as telExp2,
						 TEL1 as tel1,TEL2 as tel2,
						 FAX1 as fax1,FAX2 as fax2,FAX3 as fax3,
						 MOB1 as mob1,TELEX as telex,
						 BILL_ADD1 as billAdd1,
						 BILL_ADD2 as billAdd2,
						 BILL_ADD3 as billAdd3,
						 BILL_ADD4 as billAdd4,
						 BILL_ADD5 as billAdd5,
						 (select CODE_DESC from MAST_CITY where code=BILL_CITY) as billCity,
						 BILL_PIN_CODE as billPinCode,
						 BILL_CTRY_CODE as billCountryCode,
						 (select code_desc from mast_country where mast_country.code = CUST_COMPANY.BILL_CTRY_CODE) as billCountryDesc,
						 BILL_ATTN as billAttention,
						 BILL_EMAIL1 as billEmail1,BILL_EMAIL2 as billEmail2,
						 BILL_EMAIL3 as billEmail3,BILL_EMAIL4 as billEmail4,
						 BILL_EMAIL5 as billEmail5,
						 BILL_FAX1 as billFax1,BILL_FAX2 as billFax2,BILL_FAX3 as billFax3,
						 ADM_ADD1 as admAdd1,
						 ADM_ADD2 as admAdd2,
						 ADM_ADD3 as admAdd3,
						 ADM_ADD4 as admAdd4,
						 ADM_ADD5 as admAdd5,
						 (select CODE_DESC from MAST_CITY where code=ADM_CITY) as admCity,
						 ADM_PIN_CODE as admPinCode,
						 ADM_CTRY_CODE as admCountryCode,
						 (select code_desc from mast_country where mast_country.code = CUST_COMPANY.ADM_CTRY_CODE) as admCountryDesc,
						 ADM_TEL1 as admTel1,
						 ADM_TEL2 as admTel2,
						 ADM_MOB1 as admHp,
						 ADM_EMAIL1 as admEmail1,
						 ADM_EMAIL2 as admEmail2,
						 ADM_EMAIL3 as admEmail3,
						 ADM_EMAIL4 as admEmail4,
						 ADM_EMAIL5 as admEmail5,
						 ADM_FAX1 as admFax1,
						 ADM_FAX2 as admFax2,
						 ADM_FAX3 as admFax3,
						 ADM_TELEX as admTelex,
						 CR_USER_ID as createdId,
						 LM_USER_ID as modifiedId,
						 LM_DATE as modifiedDate,
						 ADMIN_USER_ID as adminUserId,
						 ADMIN_NAME as adminName,
						 ADMIN_TITLE as adminTitle,
						 RHO_YN as rhoType,
						 SUFFIX as suffix,
						 HSE_LVL_HNDL_YN as houseLevelHandling,
						 HNDL_BY_AGT_SRV_YN as agentServices,
					 	 TO_CHAR(VERIFICATION_DATE,'DDMONYY') AS verificationDate,
						 TO_CHAR(VALID_DATE,'DDMONYY') AS validDate,
						 DIR_CSGN as directConsignee,
						 NAME as name,
						 CUST_TYPE AS custType,
						 FIN_CODE as finCode,
						 HKID as hkId,
						 ALLOW_PACCO as allowPacco,
						 NO_OF_BOOKING_PERDAY as bkgQuotaPerDay,
						 CERTIFIED_YN as certifiedYn,
						 NON_CARR_ID as nonCarrId,
						 TO_CHAR(LM_DATE,'DDMONYY HH24:MI:SS') AS lastModDate,
						 CASS_AGT_CODE cassCode ,
						 BYPASS_EXP_CAR as byPassExportCar,
						 DEF_SC_CHRG_TO as defltSCCharge,
						 CPSL_COLLECT AS custCollect,
						 SAP_CUSTOMER_ID sapCustomerNo,
						 ALLOW_ESRF_AA as allowEsrf,
						 priority as custPriority,
						 CX_CODE as cxCode
			FROM cust_company where CODE = #companyCustomerNo#
	</select>
	<insert id="sqlagentinsert" parameterClass="cargo.cms.customer.bo.CustomerBO" >
	<![CDATA[
		INSERT INTO CUST_APP_AGENT (CUST_NO, AGENT_ID, APP_DATE, RMK,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,EXP_DATE,CARR_CODE)
			VALUES (#custNo#, #agentId#, TO_DATE(#appDate#,'DDMONYY'), #remarks#,#userID#,SYSDATE,#userID#,SYSDATE,#expiryDate#,#carrierCode#)
	]]>
	</insert>
	
	<update id="updateUserToLocked" parameterClass="map">
		UPDATE SEC_USER SET STATUS = 'L', LM_USER_ID = #LM_USER# , LM_DATE = SYSDATE WHERE  CUST_NO = #CUST_NO#
	</update>
	<select id="checkCarrierAsignToOtherAgent" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		select count(1) from CUST_APP_AGENT where CARR_CODE=#PARAM#
	</select>
	<insert id="sqlagentinsert1" parameterClass="cargo.cms.customer.bo.CustomerBO" >
	<![CDATA[
		INSERT INTO CUST_APP_AGENT (CUST_NO, AGENT_ID, APP_DATE, RMK,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,EXP_DATE,CARR_CODE)
		VALUES (#companyCustomerNo#, #agentId#, TO_DATE(#appDate#,'DDMONYY'), #remarks#,#userID#,SYSDATE,#userID#,SYSDATE,#expiryDate#,#carrierCode#)
	]]>
	</insert>
	<!-- 
	<insert id="sqlApptAgentHSInsert" parameterClass="cargo.cms.customer.bo.CustomerDetailsBO" >
	<![CDATA[
		INSERT INTO CUST_APP_AGENT (CUST_NO, AGENT_ID, APP_DATE, RMK,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE)
			VALUES (lpad(CUSTOMER_SEQ.currVal,7, '0'), lpad(CUSTOMER_SEQ.currVal,7, '0'), SYSDATE, #remarks#,#userID#,SYSDATE,#userID#,SYSDATE)
	]]>
	</insert>
-->	
	<insert id="sqlawbinsert" parameterClass="cargo.cms.customer.bo.CustomerBO" >
		<![CDATA[
			INSERT INTO CUST_AIRL_AWB_PFX VALUES 
			(lpad(CUSTOMER_SEQ.currVal,7, '0'),#carrierCode#,#awb#,#createdId#,SYSDATE,#modifiedId#,SYSDATE)
		]]>
	</insert>


		<insert id="sqlawbinsert1" parameterClass="cargo.cms.customer.bo.CustomerBO" >
		<![CDATA[
			INSERT INTO CUST_AIRL_AWB_PFX VALUES 
			(#companyCustomerNo#,#carrierCode#,#awb#,#createdId#,SYSDATE,#modifiedId#,SYSDATE)
		]]> 
	</insert>

  
	<select id="sqlcustomersearch"  parameterClass="cargo.cms.customer.bo.CustomerBO" resultClass="cargo.cms.customer.bo.CustomerBO">
			SELECT CODE AS companyCustomerNo,CODE_DESC AS customerName,NAME as name,replace(
		    substr(decode(agent_yn, 'Y', 'AGENT') || decode(airline_yn, 'Y', '/AIRLINE')||decode(cons_yn, 'Y', '/CONSIGNEE')||decode(rho_yn, 'Y', '/RHO')||decode(SHPR_YN, 'Y', '/SHIPPER')||decode(SHA_YN, 'Y', '/SHA')||decode(TCS_YN, 'Y', '/TCS USER')||decode(TRUCKER_YN, 'Y', '/TRUCKER'), 1, 1), '/', '')||            
			substr(decode(agent_yn, 'Y', 'AGENT') || decode(airline_yn, 'Y', '/AIRLINE')||decode(cons_yn, 'Y', '/CONSIGNEE')||decode(rho_yn, 'Y', '/RHO')||decode(SHPR_YN, 'Y', '/SHIPPER')||decode(SHA_YN, 'Y', '/SHA')||decode(TCS_YN, 'Y', '/TCS USER')||decode(TRUCKER_YN, 'Y', '/TRUCKER'), 2)AS  type,
			to_char(next_bdate, 'DDMONYY') as billingDate,suffix as suffix, blacklisted as blackListed, active as active, admin_name as adminName, TO_CHAR(LM_DATE,'DDMONYY HH24:MI:SS') AS lastModDate
			FROM cust_company 
			WHERE 1=1
			<isNotEmpty prepend="AND" property="type">
				(agent_yn = decode(#type#, 'Cargo Agent', 'Y')
				OR airline_yn = decode(#type#, 'Airline', 'Y')
				OR cons_yn = decode(#type#, 'Consignee', 'Y')
				OR RHO_YN = decode(#type#, 'RHO', 'Y')
				OR SHPR_YN = decode(#type#, 'Shipper', 'Y')
				OR TRUCKER_YN = decode(#type#, 'Trucker', 'Y')
				OR SHA_YN = decode(#type#, 'SHA', 'Y')
				OR TCS_YN = decode(#type#, 'TCS User', 'Y'))
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="customerName">
			
			<isNotEmpty property="companyCustomerNo">
			   (UPPER(code_desc)  like UPPER(#customerName#) or code = #companyCustomerNo#)
			</isNotEmpty>
			<isEmpty property="companyCustomerNo">
				UPPER(code_desc)  like UPPER(#customerName#)
			</isEmpty>

			</isNotEmpty>
			<isNotEmpty prepend="AND" property="suffix">
				UPPER(suffix)  = UPPER(#suffix#)
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="blackListedQuery">
				UPPER(blackListed) = UPPER(#blackListedQuery#)
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="activeQuery">
				UPPER(active) = UPPER(#activeQuery#)
			</isNotEmpty>
		Order By code_desc
	</select>
	
		<select id="sqlcustomersearchCOUNT"  parameterClass="cargo.cms.customer.bo.CustomerBO" resultClass="java.lang.Integer">
			SELECT COUNT(*) as totalRowCount FROM cust_company 
			WHERE 1=1
			<isNotEmpty prepend="AND" property="type">
				(agent_yn = decode(#type#, 'Cargo Agent', 'Y')
				OR airline_yn = decode(#type#, 'Airline', 'Y')
				OR cons_yn = decode(#type#, 'Consignee', 'Y')
				OR RHO_YN = decode(#type#, 'RHO', 'Y')
				OR SHPR_YN = decode(#type#, 'Shipper', 'Y')
				OR TRUCKER_YN = decode(#type#, 'Trucker', 'Y')
				OR SHA_YN = decode(#type#, 'SHA', 'Y')
				OR TCS_YN = decode(#type#, 'TCS User', 'Y'))
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="customerName">
				UPPER(code_desc)  like UPPER(#customerName#)
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="suffix">
				UPPER(suffix)  = UPPER(#suffix#)
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="blackListedQuery">
				UPPER(blackListed) = UPPER(#blackListedQuery#)
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="activeQuery">
				UPPER(active) = UPPER(#activeQuery#)
			</isNotEmpty>
			Order By code_desc
	</select>
   <!-- 
	
	 The new query added for to get the number of records (POC) by sundar ... Entry starts
	<select id="sqlcustomersearchCOUNT"  parameterClass="cargo.cms.customer.bo.CustomerSearchBO" resultClass="java.lang.Integer">
	
			Select COUNT(*) as totalRowCount
			FROM     cust_company 
			WHERE    agent_yn = decode(#customerType#, 'Cargo Agent', 'Y', agent_yn)
			AND      airline_yn = decode(#customerType#, 'Airline', 'Y', airline_yn)
			AND      cons_yn = decode(#customerType#, 'Consignee', 'Y', cons_yn)
			AND      RHO_YN = decode(#customerType#, 'RHO', 'Y', RHO_YN)		
			AND      code_desc like nvl(#customerName#, code_desc)
			AND      code like nvl(#customerNo#, code)
			AND      blacklisted = nvl(#blackListed#, blacklisted)
			AND      active = nvl(#active#, active)
	</select>
	 The new query added for to get the number of records (POC) by sundar ... Entry Ends
	
	
	
	
	
	
	 <parameterMap id="userProgramMap" class="map" >
		<parameter property="a"	jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="mesg"	jdbcType="VARCHAR"	javaType="java.lang.String"	mode="INOUT"/>
	</parameterMap> 
	 Needs to add mapping laters ,,, 

     Kishore added the last modified date and user id 
	
	 Needs to add mapping laters ,,, 

-->
	<update id="sqlcustomerupdate" parameterClass="cargo.cms.customer.bo.CustomerBO" >
	<![CDATA[
		UPDATE CUST_COMPANY SET 

                    CODE_DESC      = #customerName#,
                    NAME           = #customerName#,
					MOB1	       = #mob1#,
					PAY_MODE_CAS   = #payModeCash#,
					PAY_MODE_CHQ   = #payModeCheque#,
					PAY_MODE_CCD   = #payModeCreditCard#,
					PAY_MODE_EPS   = #payModeEps#,
					NEXT_BDATE     = TO_DATE(#nextBillDate#,'DDMONYY'),
					BILL_FRQ       = #billFrequency#,
					BLACK_AMT      = #blackAmount#,
					BLACKLISTED    = #blackListed#,
					SELF_HANDLING  = #selfHandling#,
					HAFFA_MEMBER   = #hafaMember#,
					BUS_REG_NO     = #busRegNo#,
					ACTIVE         = #active#,
					AGENT_YN       = #agentType#,
					AIRLINE_YN     = #airlineType#, 
					CONS_YN        = #consigneeType#, 
					RHO_YN         = #rhoType#,
					SHPR_YN 	   = #shipperType#,
					TRUCKER_YN 	   = #truckerType#,
					SHA_YN         = #shaType#,
					TCS_YN         = #tcsUserType#,
					CO_SNAME       = #customerShortName#, 
					CARR_CODE      = #carrierCode#, 
					URL_ADDR       = #urlAddress#, 
					CO_IATA_CODE   = #companyIataCode#, 
					PAY_CRITERIA   = #payCriteria#,  
					ADD1           = #add1#, 
					ADD2           = #add2#, 
					ADD3           = #add3#, 
					ADD4           = #add4#, 
					ADD5           = #add5#, 
					CITY           = #city#, 
					PIN_CODE       = #pinCode#, 
					CTRY_CODE      = #countryCode#, 
					TEL_IMP1       = #telImp1#, 
					TEL_IMP2       = #telImp2#, 
					TEL_EXP1       = #telExp1#, 
					TEL_EXP2       = #telExp2#, 
					TEL1           = #tel1#, 
					TEL2           = #tel2#, 
					EMAIL1	       = #email1#,
					EMAIL2	       = #email2#,
					EMAIL3	       = #email3#,
					EMAIL4	       = #email4#,
					EMAIL5         = #email5#,
					FAX1           = #fax1#,
					FAX2           = #fax2#, 
					FAX3           = #fax3#, 
					TELEX          = #telex#, 
					BILL_ADD1      = #billAdd1#,
					BILL_ADD2      = #billAdd2#,
					BILL_ADD3      = #billAdd3#, 
					BILL_ADD4      = #billAdd4#, 
					BILL_ADD5      = #billAdd5#,
					BILL_EMAIL1    = #billEmail1#,
					BILL_EMAIL2    = #billEmail2#,
					BILL_EMAIL3    = #billEmail3#,
					BILL_EMAIL4    = #billEmail4#,
					BILL_EMAIL5    = #billEmail5#,
					BILL_FAX1    = #billFax1#,
					BILL_FAX2    = #billFax2#,
					BILL_FAX3    = #billFax3#,
					BILL_CITY      = #billCity#, 
					BILL_PIN_CODE  = #billPinCode#,
					BILL_CTRY_CODE = #billCountryCode#,
					BILL_ATTN      = #billAttention#, 
					ADM_ADD1       = #admAdd1#, 
					ADM_ADD2       = #admAdd2#, 
					ADM_ADD3       = #admAdd3#,
					ADM_ADD4       = #admAdd4#, 
					ADM_ADD5       = #admAdd5#,
					ADM_CITY       = #admCity#,
					ADM_PIN_CODE   = #admPinCode#,
					ADM_CTRY_CODE  = #admCountryCode#, 
					ADM_TEL1       = #admTel1#, 
					ADM_TEL2       = #admTel2#, 
					ADM_MOB1       = #admHp#, 
					ADM_EMAIL1     = #admEmail1#, 
					ADM_EMAIL2     = #admEmail2#,
					ADM_EMAIL3     = #admEmail3#,
					ADM_EMAIL4     = #admEmail4#,
					ADM_EMAIL5     = #admEmail5#,	
					ADM_FAX1       = #admFax1#, 
					ADM_FAX2       = #admFax2#,
					ADM_FAX3       = #admFax3#,
					ADM_TELEX      = #admTelex#,
					FIN_CODE       = #finCode#,
					HKID           = #hkId#,
					ALLOW_PACCO    = NVL(#allowPacco#,'N'),
					LM_USER_ID     = #modifiedId#,
					LM_DATE        = SYSDATE,
					HSE_LVL_HNDL_YN = #houseLevelHandling#,
					HNDL_BY_AGT_SRV_YN = #agentServices#,
					VERIFICATION_DATE = #verificationDate#,
					VALID_DATE = #validDate#,
					DIR_CSGN = #directConsignee#,
					NO_OF_BOOKING_PERDAY = #bkgQuotaPerDay#,
					CERTIFIED_YN = #certifiedYn#,
					NON_CARR_ID = #nonCarrId#,
					CASS_AGT_CODE = #cassCode#,
					BYPASS_EXP_CAR = #byPassExportCar#,
					DEF_SC_CHRG_TO = #defltSCCharge#,
					CPSL_COLLECT = #custCollect#,
					SAP_CUSTOMER_ID = #sapCustomerNo#,
					ALLOW_ESRF_AA = #allowEsrf#,
					PRIORITY = #custPriority#,
					CX_CODE = #cxCode#
					WHERE
					 CODE = #companyCustomerNo# and TO_CHAR(LM_DATE,'DDMONYY HH24:MI:SS') = #lastModDate#
						]]>
	</update>



	<delete id="sqlagentdelete" parameterClass="cargo.cms.customer.bo.CustomerBO" >
	<![CDATA[
		DELETE FROM CUST_APP_AGENT WHERE CUST_NO=#companyCustomerNo#
	]]>
	</delete>

	<delete id="deleteParticipentCodeDetails" parameterClass="cargo.cms.customer.bo.CustomerBO" >
		DELETE FROM CUST_AGENT_PARTICIPANT_CODE WHERE CUST_NO = #custNo#
	</delete>
	
	<insert id="insertParticipentCodeDetails" parameterClass="cargo.cms.customer.bo.CustomerBO" >
			INSERT
			INTO CUST_AGENT_PARTICIPANT_CODE
			  (
			    CUST_NO,
			    CARR_CODE,
			    PARTICIPANT_CODE,
			    CR_USER_ID,
			    CR_DATE
			  )
			  VALUES
			  (
			    #custNo#,
			    #carrierCode#,
			    #nonCarrId#,
			    #createdUserId#,
			    SYSDATE
			  )
	</insert>
	
	<delete id="deleteParticipentCodeDtls" parameterClass="cargo.cms.customer.bo.CustomerBO" >
		DELETE FROM CUST_AGENT_PARTICIPANT_CODE WHERE CUST_NO = #companyCustomerNo#	
	</delete>
	
        <delete id="sqlappagentdelete" parameterClass="cargo.cms.customer.bo.CustomerBO" >
	<![CDATA[
		DELETE FROM CUST_APP_AGENT WHERE CUST_NO=#companyCustomerNo# AND AGENT_ID = #agentId# AND CARR_CODE = #carrierCode#
	]]>
	</delete>
	<delete id="sqlappagentdeletebyagentid" parameterClass="cargo.cms.customer.bo.CustomerBO" >
	<![CDATA[
		DELETE FROM CUST_APP_AGENT WHERE AGENT_ID = #companyCustomerNo#
	]]>
	</delete>
	<!-- 
	<delete id="sqlApptAgentDelete" parameterClass="cargo.cms.customer.bo.CustomerDetailsBO" >
	<![CDATA[
		DELETE FROM CUST_APP_AGENT WHERE CUST_NO=#customerNo# AND AGENT_ID = #customerNo#
	]]>
	</delete>
	-->
	<delete id="sqlawbdelete" parameterClass="cargo.cms.customer.bo.CustomerBO" >
	<![CDATA[
		DELETE FROM CUST_AIRL_AWB_PFX WHERE CUST_NO=#companyCustomerNo#
	]]>
	</delete>
	
<!-- 
	<update id="sqlcustregupdate" parameterClass="cargo.cms.customer.bo.CustomerDetailsBO" >
		<![CDATA[
			UPDATE CUST_REGISTRATION SET
				ADD1           = #add1#,
				ADD2           = #add2#, 
				ADD3           = #add3#, 
				ADD4           = #add4#, 
				ADD5           = #add5#, 
				CITY           = #city#, 
	        	PIN_CODE       = #pinCode#, 
				CTRY_CODE      = #countryCode#, 
				TEL            = #tel1#, 
				EMAIL1         = #email1#,
				EMAIL2         = #email2#,
				FAX1           = #fax1#,
				FAX2           = #fax2#
			WHERE REG_PROC_ID    = #customerNo#
		]]>
	</update>
-->
	<delete id="sqlcustomerdelete" parameterClass="cargo.cms.customer.bo.CustomerBO" >
	<![CDATA[
		DELETE FROM CUST_COMPANY WHERE CODE = #companyCustomerNo# and TO_CHAR(LM_DATE,'DDMONYY HH24:MI:SS') = #lastModDate#
	]]>
	</delete>

	<select id="sqliatacountbeforeupdate"  parameterClass="cargo.cms.customer.bo.CustomerBO" resultClass="java.lang.Integer">
	<![CDATA[
			SELECT COUNT(*) as count FROM CUST_COMPANY WHERE CO_IATA_CODE =  #companyIataCode# AND CODE != #companyCustomerNo#
		]]>
   	</select>
	<select id="sqliatacountbeforeinsert"  parameterClass="cargo.cms.customer.bo.CustomerBO" resultClass="java.lang.Integer">
	<![CDATA[
			SELECT COUNT(*) as count FROM CUST_COMPANY WHERE CO_IATA_CODE =  #companyIataCode# 
		]]>
   	</select>
 
	<select id="sqlcustomeragentcount"  parameterClass="cargo.cms.customer.bo.CustomerBO" resultClass="java.lang.Integer">
	<![CDATA[
			select count(*)as count from cust_app_agent where cust_no = #companyCustomerNo# 
		]]>
   	</select>
   	
   	<select id="checkCarrierExistsInMaster" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		select count(1) from MAST_CARRIER where CODE = #carrierCode#
	</select>
	
	<select id="particpentCodeLengthConfig" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		select NVL(PARTICIPANT_CODE_LEN,0) from MAST_CARRIER where CODE = #carrierCode#
	</select>
	
   	<!-- Create Customer Account Ends -->
   	<!--
   	<select id="sqlCustomerApptAgentCount"  parameterClass="cargo.cms.customer.bo.CustomerSearchBO" resultClass="java.lang.Integer">
	<![CDATA[
			select count(*)as count from cust_app_agent where cust_no=#customerNo# and agent_id=#customerNo#
		]]>
   	</select>


	<select id="sqlcustomernamecount"  parameterClass="cargo.cms.customer.bo.CustomerDetailsBO" resultClass="java.lang.Integer">
	<![CDATA[
			SELECT COUNT(*) as count FROM CUST_COMPANY WHERE UPPER(CODE_DESC) =UPPER(#customerName#) 
		]]>
   	</select>
	 Onsite Changed on 25 May 2006 by mayank Starts here 
	<select id="sqlcustnamecount"  parameterClass="java.lang.String" resultClass="java.lang.Integer">
	<![CDATA[
			SELECT COUNT(*) as count FROM CUST_COMPANY WHERE UPPER(CODE_DESC) =UPPER(#PARAM#) 
		]]>
   	</select>
	
	 Onsite Changed on 25 May 2006 by mayank Ends here 
	 Add Vimala : start 09 may 06
	<select id="sqlcarriercodeduplicate"  parameterClass="cargo.cms.customer.bo.CustomerDetailsBO" resultClass="java.lang.Integer">
	<![CDATA[
			SELECT COUNT(*) as count FROM CUST_COMPANY WHERE UPPER(CARR_CODE) =UPPER(#carrierCode#)
		]]>
   	</select>

	<select id="sqlcarriercodeduplicateupdate"  parameterClass="cargo.cms.customer.bo.CustomerDetailsBO" resultClass="java.lang.Integer">
	<![CDATA[
			SELECT COUNT(*) as count FROM CUST_COMPANY WHERE UPPER(CARR_CODE) =UPPER(#carrierCode#) AND CODE != #customerNo#
		]]>
   	</select>

	 Add Vimala : end 09 may 06

	<select id="sqlagentnamecountinalias"  parameterClass="cargo.cms.customer.bo.CustomerDetailsBO" resultClass="java.lang.Integer">
	<![CDATA[
			SELECT COUNT(*) as count FROM CUST_AGENT_ALIAS WHERE UPPER(ALIAS_NAME) =UPPER(#customerName#)
		]]>
   	</select>


	<select id="sqlcustomercountreg"  parameterClass="cargo.cms.customer.bo.CustomerDetailsBO" resultClass="java.lang.Integer">
	<![CDATA[
			select count(*)as count from cust_registration where reg_proc_id=#customerNo#
		]]>
   	</select>

	<select id="sqlcustomercountawb"  parameterClass="cargo.cms.customer.bo.CustomerSearchBO" resultClass="java.lang.Integer">
	<![CDATA[
			select count(*)as count from CUST_AIRL_AWB_PFX where cust_no=#customerNo#
		]]>
   	</select>

	  Check 
	<select id="sqlagentsearch"  parameterClass="cargo.cms.customer.bo.CustomerDetailsBO" resultClass="cargo.cms.customer.bo.CustomerDetailsBO">
		SELECT   code_desc AS customerName, code AS customerNo,
		         haffa_member AS hafaMember, co_iata_code AS companyIataCode,
		         cons_yn AS consigneeType
		    FROM cust_company
		   WHERE agent_yn = 'Y'
				<dynamic>
					<isNotEmpty prepend="AND" property="agentNameFrom">
						code_desc BETWEEN #agentNameFrom# AND NVL(#agentNameTo#, #agentNameFrom#)  || 'Z'
					</isNotEmpty>
					<isNotEmpty prepend="AND" property="customerNo">
						code = #customerNo#
					</isNotEmpty>
					<isNotEmpty prepend="AND" property="companyIataCode">
						co_iata_code = #companyIataCode#
					</isNotEmpty>
					<isNotEmpty prepend="AND" property="hafaMember">
						haffa_member = #hafaMember#
					</isNotEmpty>
				</dynamic>
		ORDER BY code_desc
   	</select>

	<select id="sqlairlinesearch"  parameterClass="cargo.cms.customer.bo.CustomerDetailsBO" resultClass="cargo.cms.customer.bo.CustomerDetailsBO">
		SELECT   CODE_DESC AS customerName,CODE AS customerNo,CARR_CODE AS carrierCode
		    FROM cust_company
		   WHERE AIRLINE_YN='Y'
				<dynamic>
					<isNotEmpty prepend="AND" property="airlineNameFrom">
						code_desc BETWEEN #airlineNameFrom# AND NVL(#airlineNameTo#, #airlineNameFrom#)  || 'Z'
					</isNotEmpty>
					<isNotEmpty prepend="AND" property="customerNo">
						code = #customerNo#
					</isNotEmpty>
					<isNotEmpty prepend="AND" property="carrierCode">
						CARR_CODE = UPPER(#carrierCode#)
					</isNotEmpty>
				</dynamic>
		ORDER BY code_desc
   	</select>
	 Onsite Changed on 25 May 2006 by mayank Starts here 
	

     Onsite Changed on 25 May 2006 by mayank Ends here 
     changed on 05/09/06 for defect # 2293 by ilango increased the numeric format 
	
  
   	
	
	 Customer Ends 
 ============================  Added For Agent ======================================= 
		 offshore Asha 24may06 changed for the Maintain RA screen Start -->
	
			<select id="sqlagentcontactlist" parameterClass="cargo.cms.customer.bo.AgentContactSearchBO" resultClass="cargo.cms.customer.bo.AgentContactSearchBO" >			
				select CUST_CONTACT.Cust_NO as customerNo, CUST_COMPANY.CODE_DESC as customerName,co_iata_code as iataCode,
				Contact_type as type,MAST_CODE_DTL.code_Desc	as contactTypeDesc, TO_CHAR(CUST_CONTACT.LM_DATE,'DDMONYY HH24:MI:SS') AS lastModDate				
				FROM  CUST_CONTACT,CUST_COMPANY	,MAST_CODE_DTL		
				WHERE   CUST_COMPANY.Code_desc like NVL(#customerName#, CUST_COMPANY.Code_Desc) 
				And Cust_NO  = NVL(#customerNo#, Cust_NO) 
				AND NVL(CO_IATA_CODE,'$$') = NVL(#iataCode#, NVL(CO_IATA_CODE,'$$'))				
				And Contact_type  = NVL(#type#, Contact_type) 
				and CUST_CONTACT.cust_no = cust_company.code		
				AND CUST_CONTACT.contact_Type=MAST_CODE_DTL.CODE	
				AND MAST_CODE_DTL.CODE_TYPE='NOTIF_TYPE'
				AND (dir_csgn='Y' or AGENT_YN='Y') 
				<dynamic prepend="ORDER BY ">
       			 	<isNotEmpty property="sortOrder.sortField">
             			$sortOrder.sortField$
        			</isNotEmpty>
 				</dynamic>
			</select>
			<select id="sqlagentcontactlistCOUNT" parameterClass="cargo.cms.customer.bo.AgentContactSearchBO" resultClass="java.lang.Integer" >			
				select COUNT(*) as totalRowCount
				FROM  CUST_CONTACT,CUST_COMPANY	,MAST_CODE_DTL		
				WHERE   CUST_COMPANY.Code_desc like NVL(#customerName#, CUST_COMPANY.Code_Desc) 
				And Cust_NO  = NVL(#customerNo#, Cust_NO) 
				AND NVL(CO_IATA_CODE,'$$') = NVL(#iataCode#, NVL(CO_IATA_CODE,'$$'))				
				And Contact_type  = NVL(#type#, Contact_type) 
				and CUST_CONTACT.cust_no = cust_company.code		
				AND CUST_CONTACT.contact_Type=MAST_CODE_DTL.CODE	
				AND MAST_CODE_DTL.CODE_TYPE='NOTIF_TYPE'
				AND AGENT_YN='Y'  
			</select>
<!--			 offshore Asha 24may06 changed for the Maintain RA screen Start-->

		
<!--		 onsite Modified by Lokesh 10May06 For the Agent Contact Create Screen -->
		<select id="sqlagentcontactdetails"   parameterClass="cargo.cms.customer.bo.AgentContactBO" resultClass="cargo.cms.customer.bo.AgentContactBO" >
				select CUST_CONTACT.Cust_NO as customerNo, CUST_COMPANY.CODE_DESC as customerName,co_iata_code as iataCode,
						Contact_type as type,MAST_CODE_DTL.code_Desc	as contactTypeDesc,
						Cust_Contact.Email1 as email1,Cust_Contact.Email2 as email2,Cust_Contact.Email3 as email3,Cust_Contact.Email4 as email4,Cust_Contact.Email5 as email5,
						Cust_Contact.fax1 as fax1,Cust_Contact.fax2 as fax2,Cust_Contact.fax3 as fax3,Cust_Contact.fax4 as fax4,Cust_Contact.fax5 as fax5,Cust_Contact.CR_USER_ID AS crUserId,Cust_Contact.CR_DATE AS crDate,Cust_Contact.LM_USER_ID AS lastModUserId, TO_CHAR(Cust_Contact.LM_DATE,'DDMONYY HH24:MI:SS') AS lastModDate
						,cust_contact.email_type as emailType, cust_contact.fax_type as faxType, cust_contact.email_remarks as emailRemark, cust_contact.fax_remarks as faxRemark
						FROM  CUST_CONTACT,CUST_COMPANY	,MAST_CODE_DTL				
						WHERE  CUST_CONTACT.cust_no = cust_company.code	
						AND    CUST_CONTACT.cust_no =#customerNo#
						AND    CUST_CONTACT.Contact_type =#type#
						AND CUST_CONTACT.contact_Type=MAST_CODE_DTL.CODE	
						AND MAST_CODE_DTL.CODE_TYPE='NOTIF_TYPE'
						AND (dir_csgn='Y' or AGENT_YN='Y') 
						ORDER BY CUST_COMPANY.CODE_DESC 
			</select>
			
			<select id="sqlagentcontactteldetails"   parameterClass="cargo.cms.customer.bo.AgentContactBO" resultClass="cargo.cms.customer.bo.AgentContactBO" >
				select CUST_COMPANY.CODE_DESC as customerName,CUST_CONTACT_DTL.type as telType,CUST_CONTACT_DTL.CONTACT_NO as tel,CUST_CONTACT_DTL.remarks as telRemark
						FROM  CUST_COMPANY,CUST_CONTACT_DTL				
						WHERE  CUST_CONTACT_DTL.cust_no = cust_company.code	
						AND    CUST_CONTACT_DTL.cust_no =#customerNo#
						AND    CUST_CONTACT_DTL.Contact_type =#type#
						AND (dir_csgn='Y' or AGENT_YN='Y') 
						ORDER BY CUST_COMPANY.CODE_DESC 
			</select>
<!--		 onsite Modified by Lokesh 10May06 For the Agent Contact Create Screen 	-->

		<delete id="sqlagentcontactdelete" parameterClass="cargo.cms.customer.bo.AgentContactSearchBO">
			
				DELETE CUST_CONTACT WHERE CUST_NO = #customerNo#  and CONTACT_TYPE=#type# and TO_CHAR(LM_DATE,'DDMONYY HH24:MI:SS') = #lastModDate#				
		</delete>
		
		<delete id="sqlagentcontactteldelete" parameterClass="cargo.cms.customer.bo.AgentContactSearchBO">
			
				DELETE CUST_CONTACT_DTL WHERE CUST_NO = #customerNo#  and CONTACT_TYPE=#type#				
		</delete>
		
<!--	 onsite Edited by Lokesh 10May06 For the Create Funtionality in the Agent Contact Details(Modifed the existing screen also)STARTS 		-->
		<update id ="sqlagentcontactupdate" parameterClass="cargo.cms.customer.bo.AgentContactBO">		
				UPDATE CUST_CONTACT SET
				Email1= #email1#,Email2 = #email2# ,Email3 = #email3# ,Email4 = #email4# ,Email5 = #email5# ,
						fax1 = #fax1# ,fax2 = #fax2# ,fax3 = #fax3# ,fax4 = #fax4# ,fax5 = #fax5#,
						 EMAIL_TYPE = #emailType#, FAX_TYPE = #faxType#, EMAIL_REMARKS = #emailRemark#, FAX_REMARKS = #faxRemark#
						,LM_USER_ID = #lastModUserId# ,LM_DATE = sysdate 
						WHERE CUST_NO = #customerNo#  and CONTACT_TYPE = #type#						
		</update>
		
		<update id ="sqlagentcontacttelupdate" parameterClass="cargo.cms.customer.bo.AgentContactBO">
			UPDATE CUST_CONTACT_DTL SET
						TYPE=#telType#, CONTACT_NO=#tel#, REMARKS=#telRemark#
						,LM_USER_ID = #lastModUserId# ,LM_DATE = sysdate 
						WHERE CUST_NO = #customerNo#  and CONTACT_TYPE = #type#					
		</update>
		
<!--	 onsite Edited by Lokesh 10May06 For the Create Funtionality in the Agent Contact Details(Modifed the existing screen also)ENDS 	-->

		<update id="sqlagentemail1update" parameterClass="cargo.cms.customer.bo.AgentContactBO" >
		
				UPDATE CUST_CONTACT SET 
				email1=#address# ,
						LM_USER_ID = #lastModUserId# ,LM_DATE = sysdate
						WHERE CUST_NO = #customerNo# 
		</update>
		<update id="sqlagentemail2update" parameterClass="cargo.cms.customer.bo.AgentContactBO" >
		
				UPDATE CUST_CONTACT SET 
				email2=#address# ,
						LM_USER_ID = #lastModUserId# ,LM_DATE = sysdate
						WHERE CUST_NO = #customerNo# 
		</update>
		<update id="sqlagentemail3update" parameterClass="cargo.cms.customer.bo.AgentContactBO" >
		
				UPDATE CUST_CONTACT SET 
				email3=#address# ,
						LM_USER_ID = #lastModUserId# ,LM_DATE = sysdate
						WHERE CUST_NO = #customerNo# 
		</update>
		<update id="sqlagentemail4update" parameterClass="cargo.cms.customer.bo.AgentContactBO" >
		
				UPDATE CUST_CONTACT SET 
				email4=#address# ,
						LM_USER_ID = #lastModUserId# ,LM_DATE = sysdate
						WHERE CUST_NO = #customerNo# 
		</update>
		<update id="sqlagentemail5update" parameterClass="cargo.cms.customer.bo.AgentContactBO" >
		
				UPDATE CUST_CONTACT SET 
				email5=#address# ,
						LM_USER_ID = #lastModUserId# ,LM_DATE = sysdate
						WHERE CUST_NO = #customerNo# 
		</update>
		<update id="sqlagentemail1reset" parameterClass="cargo.cms.customer.bo.AgentContactBO" >
			
				UPDATE CUST_CONTACT SET 
				email1=''  ,LM_USER_ID = #lastModUserId# ,LM_DATE = sysdate
						WHERE CUST_NO = #customerNo# 
		</update>
		<update id="sqlagentemail2reset" parameterClass="cargo.cms.customer.bo.AgentContactBO" >
			
				UPDATE CUST_CONTACT SET 
				email2='' ,	LM_USER_ID = #lastModUserId# ,LM_DATE = sysdate
						WHERE CUST_NO = #customerNo# 
		</update>
		<update id="sqlagentemail3reset" parameterClass="cargo.cms.customer.bo.AgentContactBO" >
			
				UPDATE CUST_CONTACT SET 
				email3='' ,LM_USER_ID = #lastModUserId# ,LM_DATE = sysdate
						WHERE CUST_NO = #customerNo# 
		</update>
		<update id="sqlagentemail4reset" parameterClass="cargo.cms.customer.bo.AgentContactBO" >
			
				UPDATE CUST_CONTACT SET 
				email4='' ,LM_USER_ID = #lastModUserId# ,LM_DATE = sysdate
						WHERE CUST_NO = #customerNo# 
		</update>
		<update id="sqlagentemail5reset" parameterClass="cargo.cms.customer.bo.AgentContactBO" >
			
				UPDATE CUST_CONTACT SET 
				email5='' ,LM_USER_ID = #lastModUserId# ,LM_DATE = sysdate
						WHERE CUST_NO = #customerNo# 
		</update>
		
	<update id="sqlagentfax1reset" parameterClass="cargo.cms.customer.bo.AgentContactBO" >
			
				UPDATE CUST_CONTACT SET 
				fax1='' ,LM_USER_ID = #lastModUserId# ,LM_DATE = sysdate
						WHERE CUST_NO = #customerNo# 
	</update>	
	<update id="sqlagentfax2reset" parameterClass="cargo.cms.customer.bo.AgentContactBO" >
			
				UPDATE CUST_CONTACT SET 
				fax2='' ,LM_USER_ID = #lastModUserId# ,LM_DATE = sysdate
						WHERE CUST_NO = #customerNo# 
	</update>	
	<update id="sqlagentfax3reset" parameterClass="cargo.cms.customer.bo.AgentContactBO" >
			
				UPDATE CUST_CONTACT SET 
				fax3='' ,LM_USER_ID = #lastModUserId# ,LM_DATE = sysdate
						WHERE CUST_NO = #customerNo# 
	</update>	
	<update id="sqlagentfax4reset" parameterClass="cargo.cms.customer.bo.AgentContactBO" >
			
				UPDATE CUST_CONTACT SET 
				fax4='' ,LM_USER_ID = #lastModUserId# ,LM_DATE = sysdate
						WHERE CUST_NO = #customerNo# 
	</update>	
	<update id="sqlagentfax5reset" parameterClass="cargo.cms.customer.bo.AgentContactBO" >
		UPDATE CUST_CONTACT SET
		fax5='' ,LM_USER_ID = #lastModUserId# ,LM_DATE = sysdate
		WHERE CUST_NO = #customerNo# 
	</update>
	
	<update id="sqlagentfax1update" parameterClass="cargo.cms.customer.bo.AgentContactBO" >		
		UPDATE CUST_CONTACT SET
			fax1=#address# ,
			LM_USER_ID = #lastModUserId# ,
			LM_DATE = sysdate
		WHERE CUST_NO = #customerNo#
	</update>
			
	<update id="sqlagentfax2update" parameterClass="cargo.cms.customer.bo.AgentContactBO" >		
			UPDATE CUST_CONTACT SET 
			fax2=#address# ,LM_USER_ID = #lastModUserId# ,LM_DATE = sysdate 
					WHERE CUST_NO = #customerNo# 
	</update>

	<update id="sqlagentfax3update" parameterClass="cargo.cms.customer.bo.AgentContactBO" >		
			UPDATE CUST_CONTACT SET 
			fax3=#address# ,LM_USER_ID = #lastModUserId# ,LM_DATE = sysdate 
					WHERE CUST_NO = #customerNo# 
	</update>

	<update id="sqlagentfax4update" parameterClass="cargo.cms.customer.bo.AgentContactBO" >		
			UPDATE CUST_CONTACT SET 
			fax4=#address# ,LM_USER_ID = #lastModUserId# ,LM_DATE = sysdate 
					WHERE CUST_NO = #customerNo# 
	</update>
	<update id="sqlagentfax5update" parameterClass="cargo.cms.customer.bo.AgentContactBO" >		
			UPDATE CUST_CONTACT SET 
			fax5=#address# ,LM_USER_ID = #lastModUserId# ,LM_DATE = sysdate 
					WHERE CUST_NO = #customerNo# 
	</update>
	
	<!-- fetch company name  for AutoComplete -->	
	 <select id="fetchCompanyNameForAjax" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	 	select code_desc as customerName from CUST_COMPANY where UPPER(code_desc) like UPPER(#keySearchStr# ||'%') and ROWNUM &lt;= #maxRecFetch# and active = 'Y' ORDER BY code_desc    
	</select>
	 <select id="fetchCompanyNameDirConForAjax" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	 	select code_desc as customerName from CUST_COMPANY where UPPER(code_desc) like UPPER(#keySearchStr# ||'%') and ROWNUM &lt;= #maxRecFetch# and active = 'Y' and (dir_csgn='Y' or AGENT_YN='Y') and blacklisted = 'N' ORDER BY code_desc    
	</select>
	
	<select id="fetchMaintainCustCompForAjax" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	 	select code_desc as customerName from CUST_COMPANY where UPPER(code_desc) like UPPER(#keySearchStr# ||'%') and ROWNUM &lt;= #maxRecFetch# and active = 'Y' and blacklisted = 'N' ORDER BY code_desc    
	</select>
	
	<select id="fetchMaintainCustCompForAjax_2" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	 	select code_desc as customerName from CUST_COMPANY where UPPER(code_desc) like UPPER(#keySearchStr# ||'%') and ROWNUM &lt;= #maxRecFetch# and blacklisted = 'N' ORDER BY code_desc    
	</select>
	
	<select id="fetchAuthRepCompNameForAjax" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	 	select code_desc as companyName from CUST_COMPANY where UPPER(code_desc) like UPPER(#keySearchStr# ||'%') and ROWNUM &lt;= #maxRecFetch# and active = 'Y' AND BLACKLISTED='N' ORDER BY code_desc    
	</select>
	<select id="fetchAuthRepCompNameActiveAgentForAjax" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	 	select code_desc as companyName from CUST_COMPANY where UPPER(code_desc) like UPPER(#keySearchStr# ||'%') and ROWNUM &lt;= #maxRecFetch# and active = 'Y' AND agent_yn = 'Y' AND haffa_member = 'Y' and blacklisted = 'N' ORDER BY code_desc    
	</select>
	<select id="fetchShpCnsgnForAjax" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	 	select CUSTOMER_NAME as shipperName from CUST_ADDRESS_BOOK where UPPER(CUSTOMER_NAME) like UPPER(#keySearchStr# ||'%') and ROWNUM &lt;= #maxRecFetch# and AGENT_ID IN (select DISTINCT(cust_no) from    sec_user where user_type='E') order by customer_name asc    
	</select>
		<!--  ============================  End For Agent ======================================= 
	 ============================  Added For airline ======================================= 
	<select id="sqlairlinecontactlist"	parameterClass="cargo.cms.customer.bo.AirlineContactSearchBO"
		resultClass="cargo.cms.customer.bo.AirlineContactSearchBO" >
				select CUST_CONTACT.Cust_NO as customerNo, CUST_COMPANY.CODE_DESC as customerName,CARR_CODE as carrierCode,CARR_CODE as carrierDesc,
				Contact_type as type,MAST_CODE_DTL.code_Desc	as contactTypeDesc
				FROM  CUST_CONTACT,CUST_COMPANY	,MAST_CODE_DTL
				WHERE CUST_CONTACT.cust_no 		= cust_company.code
				AND CUST_CONTACT.contact_Type	= MAST_CODE_DTL.CODE
				AND MAST_CODE_DTL.CODE_TYPE		= 'AIRLINE_CONTACT'
				AND AIRLINE_YN='Y' 
				<dynamic>
					<isNotEmpty prepend="AND" property="customerName">
						CUST_COMPANY.Code_Desc LIKE #customerName#
					</isNotEmpty>
					<isNotEmpty prepend="AND" property="customerNo">
						cust_company.code = #customerNo#
					</isNotEmpty>
					<isNotEmpty prepend="AND" property="carrierDesc">
						cust_company.CARR_CODE = #carrierDesc#
					</isNotEmpty>
					<isNotEmpty prepend="AND" property="type">
						Contact_type = #type#
					</isNotEmpty>
				</dynamic>
		</select>
		
		 onsite modified by Lokesh for Airline Agent create screen Starts, [Modified the Maintain screens also.]
		
		<select id="sqlairlinecontactdetails"   parameterClass="cargo.cms.customer.bo.AirlineContactBO" resultClass="cargo.cms.customer.bo.AirlineContactBO" >
				select CUST_CONTACT.Cust_NO as customerNo, CUST_COMPANY.CODE_DESC as customerName,CARR_CODE as carrierCode,CARR_CODE as carrierDesc,
						Contact_type as type,MAST_CODE_DTL.code_Desc	as contactTypeDesc,
						Cust_Contact.Email1 as email1,Cust_Contact.Email2 as email2,Cust_Contact.Email3 as email3,Cust_Contact.Email4 as email4,Cust_Contact.Email5 as email5,
						Cust_Contact.fax1 as fax1,Cust_Contact.fax2 as fax2,Cust_Contact.fax3 as fax3,Cust_Contact.fax4 as fax4,Cust_Contact.fax5 as fax5,Cust_Contact.CR_USER_ID AS crUserId,Cust_Contact.CR_DATE AS crDate,Cust_Contact.LM_USER_ID AS lastModUserId,Cust_Contact.LM_DATE AS lastModDate
						FROM  CUST_CONTACT,CUST_COMPANY	,MAST_CODE_DTL				
						WHERE  CUST_CONTACT.cust_no = cust_company.code	
						AND    CUST_CONTACT.cust_no =#customerNo#
						AND    CUST_CONTACT.Contact_type =#type#
						AND CUST_CONTACT.contact_Type=MAST_CODE_DTL.CODE	
						AND MAST_CODE_DTL.CODE_TYPE='AIRLINE_CONTACT'
						AND AIRLINE_YN='Y' 
			</select>
		 onsite modified by Lokesh for Airline Agent create screen Ends 	

		<delete id="sqlairlinecontactdelete" parameterClass="cargo.cms.customer.bo.AirlineContactSearchBO">
			
				DELETE CUST_CONTACT WHERE CUST_NO = #customerNo# and CONTACT_TYPE=#type#
		</delete>
		
		<update id ="sqlairlinecontactupdate" parameterClass="cargo.cms.customer.bo.AirlineContactBO">
		
				UPDATE CUST_CONTACT SET
				Email1= #email1#,Email2 = #email2# ,Email3 = #email3# ,Email4 = #email4# ,Email5 = #email5# ,
						fax1 = #fax1# ,fax2 = #fax2# ,fax3 = #fax3# ,fax4 = #fax4# ,fax5 = #fax5# 
						,LM_USER_ID = #lastModUserId# ,LM_DATE = sysdate
						WHERE CUST_NO = #customerNo# 
		</update>

		<update id="sqlairlineemail1update" parameterClass="cargo.cms.customer.bo.AirlineContactBO" >
		
				UPDATE CUST_CONTACT SET 
				email1=#address# ,
						LM_USER_ID = #lastModUserId# ,LM_DATE = sysdate
						WHERE CUST_NO = #customerNo# 
		</update>
		<update id="sqlairlineemail2update" parameterClass="cargo.cms.customer.bo.AirlineContactBO" >
		
				UPDATE CUST_CONTACT SET 
				email2=#address# ,
						LM_USER_ID = #lastModUserId# ,LM_DATE = sysdate
						WHERE CUST_NO = #customerNo# 
		</update>
		<update id="sqlairlineemail3update" parameterClass="cargo.cms.customer.bo.AirlineContactBO" >
		
				UPDATE CUST_CONTACT SET 
				email3=#address# ,
						LM_USER_ID = #lastModUserId# ,LM_DATE = sysdate
						WHERE CUST_NO = #customerNo# 
		</update>
		<update id="sqlairlineemail4update" parameterClass="cargo.cms.customer.bo.AirlineContactBO" >
		
				UPDATE CUST_CONTACT SET 
				email4=#address# ,
						LM_USER_ID = #lastModUserId# ,LM_DATE = sysdate
						WHERE CUST_NO = #customerNo# 
		</update>
		<update id="sqlairlineemail5update" parameterClass="cargo.cms.customer.bo.AirlineContactBO" >
		
				UPDATE CUST_CONTACT SET 
				email5=#address# ,
						LM_USER_ID = #lastModUserId# ,LM_DATE = sysdate
						WHERE CUST_NO = #customerNo# 
		</update>
		<update id="sqlairlineemail1reset" parameterClass="cargo.cms.customer.bo.AirlineContactBO" >
			
				UPDATE CUST_CONTACT SET 
				email1=''  ,LM_USER_ID = #lastModUserId# ,LM_DATE = sysdate
						WHERE CUST_NO = #customerNo# 
		</update>
		<update id="sqlairlineemail2reset" parameterClass="cargo.cms.customer.bo.AirlineContactBO" >
			
				UPDATE CUST_CONTACT SET 
				email2='' ,	LM_USER_ID = #lastModUserId# ,LM_DATE = sysdate
						WHERE CUST_NO = #customerNo# 
		</update>
		<update id="sqlairlineemail3reset" parameterClass="cargo.cms.customer.bo.AirlineContactBO" >
			
				UPDATE CUST_CONTACT SET 
				email3='' ,LM_USER_ID = #lastModUserId# ,LM_DATE = sysdate
						WHERE CUST_NO = #customerNo# 
		</update>
		<update id="sqlairlineemail4reset" parameterClass="cargo.cms.customer.bo.AirlineContactBO" >
			
				UPDATE CUST_CONTACT SET 
				email4='' ,LM_USER_ID = #lastModUserId# ,LM_DATE = sysdate
						WHERE CUST_NO = #customerNo# 
		</update>
		<update id="sqlairlineemail5reset" parameterClass="cargo.cms.customer.bo.AirlineContactBO" >
			
				UPDATE CUST_CONTACT SET 
				email5='' ,LM_USER_ID = #lastModUserId# ,LM_DATE = sysdate
						WHERE CUST_NO = #customerNo# 
		</update>
		
	<update id="sqlairlinefax1reset" parameterClass="cargo.cms.customer.bo.AirlineContactBO" >
			
				UPDATE CUST_CONTACT SET 
				fax1='' ,LM_USER_ID = #lastModUserId# ,LM_DATE = sysdate
						WHERE CUST_NO = #customerNo# 
	</update>	
	<update id="sqlairlinefax2reset" parameterClass="cargo.cms.customer.bo.AirlineContactBO" >
			
				UPDATE CUST_CONTACT SET 
				fax2='' ,LM_USER_ID = #lastModUserId# ,LM_DATE = sysdate
						WHERE CUST_NO = #customerNo# 
	</update>	
	<update id="sqlairlinefax3reset" parameterClass="cargo.cms.customer.bo.AirlineContactBO" >
			
				UPDATE CUST_CONTACT SET 
				fax3='' ,LM_USER_ID = #lastModUserId# ,LM_DATE = sysdate
						WHERE CUST_NO = #customerNo# 
	</update>	
	<update id="sqlairlinefax4reset" parameterClass="cargo.cms.customer.bo.AirlineContactBO" >
			
				UPDATE CUST_CONTACT SET 
				fax4='' ,LM_USER_ID = #lastModUserId# ,LM_DATE = sysdate
						WHERE CUST_NO = #customerNo# 
	</update>	
	<update id="sqlairlinefax5reset" parameterClass="cargo.cms.customer.bo.AirlineContactBO" >
			
				UPDATE CUST_CONTACT SET 
				fax5='' ,LM_USER_ID = #lastModUserId# ,LM_DATE = sysdate
						WHERE CUST_NO = #customerNo# 
	</update>	
	
	<update id="sqlairlinefax1update" parameterClass="cargo.cms.customer.bo.AirlineContactBO" >		
			UPDATE CUST_CONTACT SET 
			fax1=#address# ,LM_USER_ID = #lastModUserId# ,LM_DATE = sysdate 
					WHERE CUST_NO = #customerNo# 
	</update>
			
	<update id="sqlairlinefax2update" parameterClass="cargo.cms.customer.bo.AirlineContactBO" >		
			UPDATE CUST_CONTACT SET 
			fax2=#address# ,LM_USER_ID = #lastModUserId# ,LM_DATE = sysdate 
					WHERE CUST_NO = #customerNo# 
	</update>



	<update id="sqlairlinefax3update" parameterClass="cargo.cms.customer.bo.AirlineContactBO" >		
			UPDATE CUST_CONTACT SET 
			fax3=#address# ,LM_USER_ID = #lastModUserId# ,LM_DATE = sysdate 
					WHERE CUST_NO = #customerNo# 
	</update>

	<update id="sqlairlinefax4update" parameterClass="cargo.cms.customer.bo.AirlineContactBO" >		
			UPDATE CUST_CONTACT SET 
			fax4=#address# ,LM_USER_ID = #lastModUserId# ,LM_DATE = sysdate 
					WHERE CUST_NO = #customerNo# 
	</update>
	<update id="sqlairlinefax5update" parameterClass="cargo.cms.customer.bo.AirlineContactBO" >
			UPDATE CUST_CONTACT SET 
			fax5=#address# ,LM_USER_ID = #lastModUserId# ,LM_DATE = sysdate 
					WHERE CUST_NO = #customerNo# 
	</update>
	<update id="sqlairlinesitaupdate" parameterClass="cargo.cms.customer.bo.AirlineContactBO" >		
			UPDATE CUST_AIRL_SITA_ADDR  SET 
			 SITA_ADDR=#address# ,LM_USER_ID = #lastModUserId# ,LM_DATE = sysdate 
					WHERE CUST_NO = #customerNo#  And SITA_ADDR=#editNo#
	</update>
	
	<select id="sqlairlinesitalist"   parameterClass="cargo.cms.customer.bo.AirlineContactBO" resultClass="cargo.cms.customer.bo.AirlineSitaBO" >
		SELECT CUST_NO  as customerNo,SITA_ADDR as sitaAddress  FROM CUST_AIRL_SITA_ADDR where Cust_no= #customerNo# 
		
	</select>
	<delete id="sqlairlinesitadelete" parameterClass="cargo.cms.customer.bo.AirlineSitaBO" >		
		DELETE  CUST_AIRL_SITA_ADDR  WHERE CUST_NO = #customerNo#  And SITA_ADDR=#sitaAddress#
	</delete>
	<insert id="sqlairlinesitaAdd" parameterClass="cargo.cms.customer.bo.AirlineSitaBO" >	
		INSERT INTO CUST_AIRL_SITA_ADDR (CUST_NO, SITA_ADDR, CR_USER_ID,CR_DATE, LM_USER_ID, LM_DATE) 
			VALUES ( #customerNo# ,#sitaAddress# ,#crUserId#,sysdate,#crUserId#,sysdate)
	</insert>
	<select id="sqlduplicateSita" parameterClass="cargo.cms.customer.bo.AirlineSitaBO" resultClass="java.lang.String">
		SELECT to_char(count(SITA_ADDR))  FROM CUST_AIRL_SITA_ADDR where Cust_no= #customerNo# AND SITA_ADDR=#sitaAddress#
	</select>


	 ============================================================================ 
	                                   SITA                                       
	 ============================================================================--> 
	
  

	<select id="sqlGetSITAGroupingList" parameterClass="cargo.cms.customer.bo.SITAGroupingBO" resultClass="cargo.cms.customer.bo.SITAGroupingBO">
		<![CDATA[
			SELECT DISTINCT
			  c.CUST_NO AS customerNumber,
			  b.CODE_DESC AS companyName,
			  c.ADDR_GROUP AS addressGroup,
			  b.carr_code AS carrier
			FROM
			  CUST_COMPANY b, CUST_AIRL_SITA_GRPDTL c
			WHERE 
			  b.CODE = c.CUST_NO
			  AND b.code_desc like nvl(#companyName#, b.code_desc)
			  AND c.CUST_NO = NVL(#customerNumber#, c.CUST_NO)
			  AND b.CARR_CODE = nvl(#carrier#, b.CARR_CODE)			 
		]]>
		<dynamic prepend="ORDER BY ">
       			 <isNotEmpty property="sortOrder.sortField">
             		$sortOrder.sortField$
        		</isNotEmpty>
 		</dynamic>	
	</select>



	<select id="sqlGetSITGroupingAAddressList" parameterClass="cargo.cms.customer.bo.SITAGroupingBO" resultClass="cargo.cms.customer.bo.SITAAddressBO">
		select
		    a.SITA_ADDR AS SITAAddress
		from CUST_AIRL_SITA_GRPDTL a
		where a.CUST_NO = #customerNumber#
		AND a.addr_group = #addressGroup#
	</select>



	<select id="sqlGetSITAGroupingDetails" parameterClass="cargo.cms.customer.bo.SITAGroupingBO" resultClass="cargo.cms.customer.bo.SITAGroupingBO">
		SELECT DISTINCT
			b.code_desc AS companyName,
			a.CUST_NO AS customerNumber,
			b.CARR_CODE AS carrier,
			a.ADDR_GROUP AS addressGroup
		FROM CUST_AIRL_SITA_GRPDTL a, CUST_COMPANY b
		WHERE a.cust_no = #customerNumber#
		      AND b.code = a.cust_no
			  AND a.ADDR_GROUP = #addressGroup#
	</select>



	<delete id="sqlDeleteSITAGroupingEntryData" parameterClass="cargo.cms.customer.bo.SITAGroupingBO">
		delete from cust_airl_sita_grpdtl
		where cust_no = #customerNumber#
		and addr_group = #addressGroup# 
	</delete>

	<delete id="sqlDeleteSITAGroupingEntryMaster" parameterClass="cargo.cms.customer.bo.SITAGroupingBO">
		delete from cust_airl_sita_grp
		where cust_no = #customerNumber#
		and addr_group = #addressGroup#
	</delete>

	<select id="sqlValidateFlightKey" parameterClass="cargo.cms.customer.bo.SITAIMPBO" resultClass="java.lang.String">
		select count(1) from flt_opr where flt_key = upper(#flightNumber#)
	</select>
	
	<select id="sqlValidateTruckFlightKey" parameterClass="cargo.cms.customer.bo.SITAIMPBO" resultClass="java.lang.String">
		select count(1) from ITM_TRK_FLT where TRUCK_FLT_NO = upper(#flightNumber#)
	</select>

	<select id="sqlValidateFlightNumber" parameterClass="cargo.cms.customer.bo.SITAIMPBO" resultClass="java.lang.String">
		select to_char(FUN_VALIDATE_FLT_NO(#flightNumber#)) from dual
	</select>
	
	
	<update id="sqlUpdateSITAGroupingAddress" parameterClass="cargo.cms.customer.bo.SITAAddressBO">
		update CUST_AIRL_SITA_GRPDTL
		set SITA_ADDR=#SITAAddress#,
			ADDR_GROUP = #addressGroup#,
			LM_USER_ID=#userID#,
			LM_DATE=sysdate 
		WHERE SITA_ADDR=#SITAAddressOld# 
			AND CUST_NO=#customerNumber# 
			AND ADDR_GROUP=#addressGroup# 
	</update>

	<insert id="sqlInsertSITAGroupingAddress" parameterClass="cargo.cms.customer.bo.SITAAddressBO">
		INSERT INTO CUST_AIRL_SITA_GRPDTL (
			CUST_NO,       
			ADDR_GROUP,    
			SITA_ADDR,     
			CR_USER_ID,
			CR_DATE,       
			LM_USER_ID,    
			LM_DATE)       
		VALUES ( 
			#customerNumber#,
			#addressGroup#, 
			#SITAAddress#,
			#userID#,
			sysdate,
			#userID#,
			sysdate) 
	</insert>

	<delete id="sqldeleteSITAGroupingAddress" parameterClass="cargo.cms.customer.bo.SITAAddressBO">
		delete from CUST_AIRL_SITA_GRPDTL
		WHERE SITA_ADDR=#SITAAddressOld# 
			AND CUST_NO=#customerNumber# 
			AND ADDR_GROUP=#addressGroup#
	</delete>
	
	<select id="sqlCheckSITGroupingDetailsExists" parameterClass="cargo.cms.customer.bo.SITAGroupingBO" resultClass="java.lang.String">
		select to_char(count(*)) from CUST_AIRL_SITA_GRP where cust_no=#customerNumber# and upper(addr_group)=upper(#addressGroup#)
	</select>



	<select id="sqlPopulateCompanyDetails" parameterClass="map" resultClass="java.util.HashMap">
		select CODE_DESC AS companyName, CODE AS customerNumber, CARR_CODE AS carrier from cust_company
		<dynamic prepend="WHERE">
			<isNotEmpty prepend="AND" property="customerNumber">
				upper(CODE) = upper(#customerNumber#)
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="companyName">
				upper(CODE_DESC) = upper(#companyName#)
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="carrier">
				upper(CARR_CODE) = upper(#carrier#)
			</isNotEmpty>
			and rownum = 1
		</dynamic>
	</select>

	<insert id="insertSITAGroupingToMasterTable" parameterClass="cargo.cms.customer.bo.SITAAddressBO">
		insert into CUST_AIRL_SITA_GRP(CUST_NO, ADDR_GROUP)
		VALUES (#customerNumber#, #addressGroup#)
	</insert>

	<insert id="insertSITAGroupingToDataTable" parameterClass="cargo.cms.customer.bo.SITAAddressBO">
		insert into CUST_AIRL_SITA_GRPDTL(CUST_NO, ADDR_GROUP, SITA_ADDR, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE)
		VALUES (#customerNumber#, #addressGroup#, #SITAAddress#, #userID#, sysdate, #userID#, sysdate)
	</insert>




	<select id="searchauthrep"  parameterClass="cargo.cms.customer.bo.MaintainAuthBO" resultClass="cargo.cms.customer.bo.AuthRepListBO">
		SELECT T2.AUTH_REP_NAME AS repName, AUTH_REP_ID AS repNo, DECODE((SELECT COUNT(1) FROM CUST_AGENT_AUTH_REP WHERE AUTH_REP_ID = T2.AUTH_REP_ID), 1, 'N', 'Y') otherCompany,
			T2.LM_USER_ID as lastUpatedByStaffId, T2.TWOFA_MOBILE_NO as twoFAMobile,
				(select code from sec_user where cust_no = t1.code and hkid = t2.auth_rep_id) userId,
				T2.BLACK_LISTED AS blockListed,
			 TO_CHAR(T2.LM_DATE, 'DDMONYY HH24:MI:SS') as lastUpdatedDate
		FROM   CUST_COMPANY T1, CUST_AGENT_AUTH_REP T2
		WHERE T1.CODE = T2.CUST_NO
			<isNotEmpty prepend="AND" property="customerNo">
				CODE = #customerNo#
			</isNotEmpty>
			<dynamic prepend="ORDER BY ">
	           <isNotEmpty property="sortOrder.sortField">
	             $sortOrder.sortField$
	           </isNotEmpty>
	        </dynamic>
   	</select>
   	
   	
   	<select id="searchauthrepCOUNT"  parameterClass="cargo.cms.customer.bo.MaintainAuthBO" resultClass="java.lang.Integer">
		SELECT COUNT(*) as totalRowCount FROM CUST_COMPANY T1, CUST_AGENT_AUTH_REP T2 WHERE T1.CODE = T2.CUST_NO
			<isNotEmpty prepend="AND" property="customerNo">
				CODE = #customerNo#
			</isNotEmpty>
   	</select>
   	
   	
   	
   	
   	

	<select id="searchauthcompany" parameterClass="cargo.cms.customer.bo.MaintainAuthBO" resultClass="cargo.cms.customer.bo.MaintainAuthBO">
		SELECT CODE_DESC AS companyName, CODE AS customerNo, CO_IATA_CODE AS iataCode FROM CUST_COMPANY 
		<dynamic prepend="WHERE">
			<isNotEmpty prepend="AND" property="companyName">
				CODE_DESC = #companyName#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="customerNo">
				CODE = #customerNo#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="iataCode">
				CO_IATA_CODE = #iataCode#
			</isNotEmpty>
		</dynamic>
   	</select>

	<delete id="deleterep" parameterClass="map">
		delete from CUST_AGENT_AUTH_REP where AUTH_REP_ID = #AUTH_REP_ID# AND CUST_NO = #CUST_NO# and TO_CHAR(LM_DATE,'DDMONYY HH24:MI:SS') = #lastUpdatedDate#		
	</delete>

	<select id="enquirecompanybyrep" parameterClass="map" resultClass="cargo.cms.customer.bo.AuthRepListBO">	
		Select A.CODE_DESC as otherCompany, A.CODE as otherCompanyId, B.AUTH_REP_NAME AS repName, B.AUTH_REP_ID as repNo, B.LM_USER_ID as lastUpatedByStaffId, TO_CHAR(B.LM_DATE, 'DDMONYY HH:MI:SS') as lastUpdatedDate,
		case when 1=(SELECT count(1) from cust_company where code_desc = #logUserId# and HAFFA_MEMBER = 'Y' ) 
				then '' else (select CR_USER_ID from SEC_USER where code = #logUserId# AND HKID is not null) end as userId
		FROM  CUST_COMPANY A, CUST_AGENT_AUTH_REP B
		WHERE A.CODE = B.CUST_NO
		<isNotEmpty property="REP_NAME">
			AND	B.AUTH_REP_NAME LIKE #REP_NAME#
		</isNotEmpty>
		<isNotEmpty property="REP_ID">
			AND	B.AUTH_REP_ID = #REP_ID#
		</isNotEmpty>
		<isNotEmpty property="COMP_NAME">
			AND	A.CODE_DESC = #COMP_NAME#
		</isNotEmpty>	
		ORDER BY A.CODE_DESC	
	</select>
	
	
	<select id="chkAgentAdmin" parameterClass="java.lang.String" resultClass="java.lang.String">
		select count(1) from CUST_COMPANY where  code_desc = #agentName# AND   AGENT_YN = 'Y' AND ACTIVE = 'Y'
	</select>
	
	<select id="chkHaffMem" parameterClass="java.lang.String" resultClass="java.lang.String">
		select count(1) from CUST_COMPANY where  code_desc = #agentName# AND HAFFA_MEMBER = 'Y' AND ACTIVE = 'Y'
	</select>
	
	<select id="validAgentForCreateAuthRep" parameterClass="cargo.cms.customer.bo.MaintainAuthBO" resultClass="java.lang.Integer">
		select count(1) from CUST_COMPANY 
		where ACTIVE = 'Y' and 
		blacklisted = 'N' AND (agent_yn = 'Y' or TRUCKER_YN='Y')
		<isNotEmpty property="companyName">
			AND CODE_DESC = #companyName#
		</isNotEmpty> 
		<isNotEmpty property="customerNo">
			AND CODE = #customerNo#
		</isNotEmpty> 
		<isNotEmpty property="iataCode">
			AND NVL(CO_IATA_CODE,'**') = #iataCode#
		</isNotEmpty> 
	</select>
	
	 	<select id="enquirecompanybyenqauthrep" parameterClass="cargo.cms.customer.bo.AuthRepListBO" resultClass="cargo.cms.customer.bo.AuthRepListBO">	
		Select A.CODE_DESC as otherCompany, A.CODE as otherCompanyId, B.AUTH_REP_NAME AS repName, B.TWOFA_MOBILE_NO as twoFAMobile,B.BLACK_LISTED AS blockListed,B.AUTH_REP_ID as repNo, B.LM_USER_ID as lastUpatedByStaffId, TO_CHAR(B.LM_DATE, 'DDMONYY HH24:MI:SS') as lastUpdatedDate,
		(select code from sec_user where cust_no = A.code and hkid = B.auth_rep_id) as userId
		FROM  CUST_COMPANY A, CUST_AGENT_AUTH_REP B
		WHERE A.CODE = B.CUST_NO
		<isNotEmpty property="repName">
			AND	B.AUTH_REP_NAME LIKE #repName#
		</isNotEmpty>
		<isNotEmpty property="repId">
			AND	B.AUTH_REP_ID = #repId#
		</isNotEmpty>
		<isNotEmpty property="companyName">
			AND	A.CODE_DESC = #companyName#
		</isNotEmpty>	
		<isNotEmpty property="agentName">
			AND	A.CODE_DESC = #agentName#
		</isNotEmpty>	
		<dynamic prepend="ORDER BY ">
           <isNotEmpty property="sortOrder.sortField">
             $sortOrder.sortField$
           </isNotEmpty>
            <isEmpty property="sortOrder.sortField">
			 A.CODE_DESC
			</isEmpty>
        </dynamic>
	</select>	
	<select id="enquirecompanybyenqauthrepHaffa" parameterClass="cargo.cms.customer.bo.AuthRepListBO" resultClass="cargo.cms.customer.bo.AuthRepListBO">	
		 Select A.CODE_DESC as otherCompany, A.CODE as otherCompanyId, B.AUTH_REP_NAME AS repName, B.TWOFA_MOBILE_NO as twoFAMobile,B.BLACK_LISTED AS blockListed,
    B.AUTH_REP_ID as repNo, B.LM_USER_ID as lastUpatedByStaffId, TO_CHAR(B.LM_DATE, 'DDMONYY HH24:MI:SS') as lastUpdatedDate  ,  
    (select code from sec_user where cust_no = A.code and hkid = B.auth_rep_id) as userId   
    FROM  CUST_COMPANY A, CUST_AGENT_AUTH_REP B     
    WHERE A.CODE = B.CUST_NO   and AGENT_YN='Y' and HAFFA_MEMBER='Y'   
		<isNotEmpty property="repName">
			AND	B.AUTH_REP_NAME LIKE #repName#
		</isNotEmpty>
		<isNotEmpty property="repId">
			AND	B.AUTH_REP_ID = #repId#
		</isNotEmpty>
		<isNotEmpty property="companyName">
			AND	A.CODE_DESC like #companyName#
		</isNotEmpty>	
		<dynamic prepend="ORDER BY ">
           <isNotEmpty property="sortOrder.sortField">
             $sortOrder.sortField$
           </isNotEmpty>
        </dynamic>
	</select>	
	
	<select id="enquirecompanybyenqauthrepCOUNT" parameterClass="cargo.cms.customer.bo.AuthRepListBO" resultClass="java.lang.Integer">	
		Select COUNT(*) as totalRowCount
		FROM  CUST_COMPANY A, CUST_AGENT_AUTH_REP B
		WHERE A.CODE = B.CUST_NO
		<isNotEmpty property="repName">
			AND	B.AUTH_REP_NAME LIKE #repName#
		</isNotEmpty>
		<isNotEmpty property="repId">
			AND	B.AUTH_REP_ID = #repId#
		</isNotEmpty>
		<isNotEmpty property="companyName">
			AND	A.CODE_DESC = #companyName#
		</isNotEmpty>
		<isNotEmpty property="agentName">
			AND	A.CODE_DESC = #agentName#
		</isNotEmpty>	
	</select>
	<select id="enquirecompanybyenqauthrepHaffaCOUNT" parameterClass="cargo.cms.customer.bo.AuthRepListBO" resultClass="java.lang.Integer">	
		Select COUNT(*) as totalRowCount
		FROM  CUST_COMPANY A, CUST_AGENT_AUTH_REP B
		WHERE A.CODE = B.CUST_NO and AGENT_YN='Y' and HAFFA_MEMBER='Y'  
		<isNotEmpty property="repName">
			AND	B.AUTH_REP_NAME LIKE #repName#
		</isNotEmpty>
		<isNotEmpty property="repId">
			AND	B.AUTH_REP_ID = #repId#
		</isNotEmpty>
		<isNotEmpty property="companyName">
			AND	A.CODE_DESC like #companyName#
		</isNotEmpty>					
	</select>
	
	
	
	<select id="checkForValidRepName" parameterClass="java.lang.String" resultClass="java.lang.Integer">
	<![CDATA[
	SELECT COUNT(*) as count from CUST_AGENT_AUTH_REP WHERE AUTH_REP_NAME = #dest#
	]]>
	</select>
	
	<select id="checkForValidHKID" parameterClass="java.lang.String" resultClass="java.lang.Integer">
	<![CDATA[
	SELECT COUNT(*) as count from CUST_AGENT_AUTH_REP WHERE AUTH_REP_ID = #dest#
	]]>
	</select>
	

	<resultMap id="companyprofile_map" class="cargo.cms.customer.bo.CompanyBO">
		<result property="companyName" column="CO_SNAME"/>
		<result property="customerNo" column="CODE"/>
		<result property="isAgent" column="AGENT_YN"/>
		<result property="isAirline" column="AIRLINE_YN"/>
		<result property="isConsignee" column="CONS_YN"/>
		<result property="iataCode" column="CO_IATA_CODE"/>
		<result property="businessRegNo" column="BUS_REG_NO"/>
		<result property="address1" column="ADD1"/>
		<result property="address2" column="ADD2"/>
		<result property="address3" column="ADD3"/>
		<result property="address4" column="ADD4"/>
		<result property="address5" column="ADD5"/>
		<result property="city" column="CITY"/>
		<result property="country" column="PIN_CODE"/>
		<result property="pinCode" column="CTRY_CODE"/>
		<result property="telephone1" column="TEL1"/>
		<result property="telephone2" column="TEL2"/>
		<result property="email1" column="EMAIL1"/>
		<result property="email2" column="EMAIL2"/>
		<result property="fax1" column="FAX1"/>
		<result property="fax1" column="FAX2"/>
		<result property="adminName" column="ADMIN_NAME"/>
		<result property="adminTitle" column="ADMIN_TITLE"/>
		<result property="adminUserID" column="ADMIN_USER_ID"/>
		<result property="adminEmail" column="ADMIN_EMAIL"/>
		<result property="adminContact" column="ADMIN_CONTACT_NO"/>
	</resultMap>
	<select id="companyprofile" parameterClass="java.lang.String" resultMap="companyprofile_map">
		SELECT * FROM CUST_COMPANY WHERE CODE = #PARAM#
   	</select>


	<resultMap id="companynotifications_map" class="cargo.cms.customer.bo.NotificationsBO">
		<result property="email" column="EMAIL"/>
		<result property="fax" column="FAX"/>
		<result property="description" column="CODE_DESC"/>
	</resultMap>
	<select id="companynotifications" parameterClass="java.lang.String" resultMap="companynotifications_map">
		Select CODE_DESC, replace(replace(trim(both ',' from EMAIL1 || ',' || EMAIL2 || ',' || EMAIL3 || ',' || EMAIL4 || ',' || EMAIL5), ',,', ','), ',,', ',') AS EMAIL, replace(replace(trim(both ',' from FAX1 || ',' || FAX2 || ',' || FAX3 || ',' || FAX4 || ',' || FAX5), ',,', ','), ',,', ',') AS FAX from MAST_CODE_DTL t1, CUST_CONTACT t2 where CODE_TYPE = 'CUST_CONTACT_TYPE' AND t1.CODE=t2.CONTACT_TYPE AND CUST_NO = #PARAM#
	</select>


	<resultMap id="companyusers_map" class="cargo.cms.customer.bo.UserBO">
		<result property="name" column="CODE_DESC"/>
		<result property="email" column="EMAIL"/>
		<result property="phone" column="CONTACT_NO"/>
		<result property="userId" column="CODE"/>
	</resultMap>
	<select id="companyusers" parameterClass="java.lang.String" resultMap="companyusers_map">
		SELECT CODE, CODE_DESC, EMAIL, CONTACT_NO FROM SEC_USER WHERE CUST_NO = #PARAM#
	</select>

	<resultMap id="companylist_map"  class="cargo.cms.customer.bo.CompanyBO">
		<result property="repName" column="AUTH_REP_NAME"/>
		<result property="repNo" column="AUTH_REP_ID"/>
		<result property="companyName" column="CODE_DESC"/>
		<result property="customerNo" column="CODE"/>
		<result property="lastUpatedByStaffId" column="LM_USER_ID"/>
		<result property="lastUpdatedDate" column="LM_DATE"/>
	</resultMap>
	<select id="companylist" parameterClass="java.lang.String" resultMap="companylist_map">
		SELECT 
			CAAR.AUTH_REP_NAME,CAAR.AUTH_REP_ID,CC.CODE_DESC, CC.CODE,CAAR.LM_USER_ID, TO_CHAR(CAAR.LM_DATE, 'DD MON YY HH:MI') AS LM_DATE
		FROM  
			CUST_COMPANY CC, CUST_AGENT_AUTH_REP CAAR
		WHERE 
			CC.CODE = CAAR.CUST_NO AND CAAR.AUTH_REP_ID = #REP_ID# 
   	</select>
	<select id="checkHkidexistOrNot" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT count(1) FROM SEC_USER WHERE CUST_NO=#CUST_NO# AND HKID=UPPER(#USER_ID#)
    </select>
	<insert id="addrep" parameterClass="map">
		INSERT INTO CUST_AGENT_AUTH_REP (CUST_NO, AUTH_REP_NAME, AUTH_REP_ID, TWOFA_MOBILE_NO,BLACK_LISTED, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE) VALUES ( #CUST_NO#, UPPER(#AUTH_REP_NAME#), UPPER(#AUTH_REP_ID#), #AUTH_PHONE#,#BLACK_LISTED#,#USER_ID#, SYSDATE, #USER_ID#, SYSDATE)
	</insert>
	<select id="fetchOldHkidForMsg" parameterClass="java.util.HashMap" resultClass="java.lang.String">
	SELECT HKID FROM SEC_USER WHERE CUST_NO=#CUST_NO# AND CODE_DESC=UPPER(#AUTH_REP_NAME#) and rownum=1
    </select>
    <select id="fetchOldUserIdForMsg" parameterClass="java.util.HashMap" resultClass="java.lang.String">
	select admin_user_id from cust_company where code=#CUST_NO#
    </select>
 	<select id="fetchExpDateForMsg" parameterClass="java.util.HashMap" resultClass="java.lang.String">
	select to_char(sysdate+10,'DDMONYY') from dual
    </select>
    <select id="fetchSenderNameForMsg" parameterClass="java.util.HashMap" resultClass="java.lang.String">
	SELECT code_desc FROM SEC_USER WHERE CODE=#USER_ID#
    </select>
    <insert id="insertAuthRepMsg" parameterClass="java.util.HashMap">
		INSERT INTO BOARD_MESSAGE (MSG_ID, SENDER_ID, SENDER_NAME, RECIPIENT_GROUP, RECIPIENT, SENT_DATE, EXPIRY_DATE, MSG, 
		CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE) VALUES ( BRD_MSG_ID_SEQ.NEXTVAL, #userId#, #senderName#, #recipientGroup#, 
		#recipient#, SYSDATE, to_date(#expiryDate#,'DDMONYY HH24:MI'), #message#, #userId#, SYSDATE, #userId#, SYSDATE)
	</insert>
	<delete id="deleteBoardMessage" parameterClass="java.util.HashMap">
    delete from BOARD_MESSAGE where msg like 'Authorized Representative%'||#AUTH_REP_ID#||'%'
    </delete>
	<select id="fetchOldAuthHkidForMsg" parameterClass="java.util.HashMap" resultClass="java.lang.String">
	select auth_rep_id from CUST_AGENT_AUTH_REP where AUTH_REP_ID=#AUTH_REP_ID# and cust_no=#CUST_NO#
    </select>
	<resultMap id="repamend_map" class="cargo.cms.customer.bo.AuthRepListBO">
		<result property="repName" column="AUTH_REP_NAME"/>
		<result property="repNo" column="AUTH_REP_ID"/>
		<result property="mobileNo" column="TWOFA_MOBILE_NO"/>		
		<result property="oldHKID" column="AUTH_REP_ID"/>
		<result property="blockListed" column="BLACK_LISTED"/>
		<result property="lastUpdatedDate" column="lastUpdatedDate"/>
		<result property="rowId" column="ROWID"/>
	</resultMap>
	<select id="repamend" parameterClass="map" resultMap="repamend_map">
		Select AUTH_REP_NAME, AUTH_REP_ID, TWOFA_MOBILE_NO, BLACK_LISTED,TO_CHAR(LM_DATE, 'DDMONYY HH24:MI:SS') as lastUpdatedDate, ROWID FROM CUST_AGENT_AUTH_REP WHERE CUST_NO = #CUST_NO# AND AUTH_REP_ID = #REP_ID#
   	</select>

	<update id="updaterep" parameterClass="map">
		update CUST_AGENT_AUTH_REP set AUTH_REP_NAME = UPPER(#AUTH_REP_NAME#), AUTH_REP_ID = UPPER(#AUTH_REP_ID#), TWOFA_MOBILE_NO = #MOBILE_NO#,BLACK_LISTED = #BLACK_LISTED#,LM_USER_ID = #LM_USER_ID#, LM_DATE = SYSDATE WHERE CUST_NO = #CUST_NO# AND AUTH_REP_ID = #REP_ID#				
   	</update>

<!--	
 added by Kishore start

	<select id="companyregistrationcheck" parameterClass="cargo.cms.customer.bo.UpdateCompanyProfileBO" resultClass="java.lang.Integer">
	<![CDATA[
	SELECT COUNT(*) as count from CUST_REGISTRATION WHERE REG_PROC_ID = #code#
	]]>
	</select>

 	<select id="getcompanyprofilebypk"  parameterClass="cargo.cms.customer.bo.CompanyProfileBO"  			   resultClass="cargo.cms.customer.bo.CompanyProfileBO">
		<![CDATA[
			SELECT a.CODE as code,
			a.CODE_DESC as codeDesc, 
			a.CO_IATA_CODE as coIataCode, 
			a.BUS_REG_NO as busRegNo,
			a.CARR_CODE as carrCode, 
			a.tel1 as tel1,
			a.tel2 as tel2,
			a.email1 as email1,
			a.email2 as email2,
			a.fax1 as fax1,
			a.fax2 as fax2,
			a.ADMIN_NAME as adminName, 
			a.ADMIN_TITLE as adminTitle,
			a.ADMIN_EMAIL as adminEmail,
			a.ADMIN_CONTACT_NO as adminContactNo, 
		    a.ADMIN_USER_ID as adminUserId, 
			a.ADMIN_PASSWD as adminPassword,
			a.EMAIL1 as email1, 
			a.EMAIL2 as email2,
			a.ADD1 as addr1, 
			a.ADD2 as addr2,
			a.ADD3 as addr3,
			a.ADD4 as addr4,
			a.ADD5 as addr5,
			a.CITY as city,
			a.PIN_CODE as pinCode,
			a.CTRY_CODE as countryCode,
			b.CO_NATURE as natureOfBusiness,
			c.CODE_DESC as country,
			AIRLINE_YN as airLineYn, 
			AGENT_YN as agentYn, 
			CONS_YN as consYn
			FROM CUST_COMPANY a, cust_registration b, mast_country c
			WHERE a.code = b.REG_PROC_ID
			AND   b.CTRY_CODE = c.CODE
			AND   a.code =#code#
		]]>
   	</select>
	
	<select id="fetchUserDetails" parameterClass="cargo.cms.customer.bo.UserBO" resultClass="cargo.cms.customer.bo.UserBO">
		SELECT 
			CODE AS userId , CODE_DESC AS name,
			EMAIL AS email, CONTACT_NO AS phone,CUST_NO AS customerNo
		FROM SEC_USER
		WHERE CUST_NO=#customerNo#
		ORDER BY CODE_DESC
	</select>

<select id="getcompanyprofilebypk_from_cust_contact" parameterClass="cargo.cms.customer.bo.CompanyProfileBO" resultClass="cargo.cms.customer.bo.CustContactBO">
	<![CDATA[
SELECT
c.Cust_No as custNo,
decode(c.Contact_type,null,d.CODE,c.contact_type) AS contactType,
NVL(c.cust_no,'') AS custNo,
NVL(c.email1,'') AS email1,
NVL(c.email2,'') AS email2,
NVL(c.email3,'') AS email3,
NVL(c.email4,'') AS email4,
NVL(c.email5,'') AS email5,
NVL(c.fax1,'') AS fax1,
NVL(c.fax2,'')  AS fax2,
NVL(c.fax3,'') AS fax3,
NVL(c.fax4,'') AS fax4,
NVL(c.fax5,'') AS fax5,   
d.CODE_Desc AS contactTypeCode 
FROM 
  (SELECT ROWNUM SNO, a.code, a.code_type, a.CODE_Desc
   FROM MAST_CODE_DTL a
   WHERE a.code_type='NOTIF_TYPE') D
   LEFT JOIN
   (SELECT ROWNUM SNO,B.*
   FROM CUST_CONTACT B
   WHERE B.CUST_NO = #code#) C ON d.code = c.Contact_type
]]>
</select>
	
<select id="companycontactentycheck" parameterClass="cargo.cms.customer.bo.CustContactBO" resultClass="java.lang.Integer">
SELECT COUNT (*) FROM CUST_CONTACT WHERE CUST_NO = #custNo# AND CONTACT_TYPE = #contactType#
</select>

<insert id="companycontactentryinsertion" parameterClass="cargo.cms.customer.bo.CustContactBO">
<![CDATA[
 INSERT INTO CUST_CONTACT(CUST_NO,CONTACT_TYPE,EMAIL1,EMAIL2,EMAIL3,EMAIL4,EMAIL5,FAX1,FAX2,FAX3,FAX4,FAX5,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE)
 VALUES(
#custNo#,
#contactType#,
#email1#,
#email2#,
#email3#,
#email4#,
#email5#,
#fax1#,
#fax2#,
#fax3#,
#fax4#,
#fax5#,
#crUserId#,
SYSDATE,
#lmUserId#,
SYSDATE)
]]>
</insert>

<update id="companycontactentryupdation" parameterClass="cargo.cms.customer.bo.CustContactBO" >
<![CDATA[
UPDATE CUST_CONTACT SET 
EMAIL1=#email1#,
EMAIL2=#email2#,
EMAIL3=#email3#,
EMAIL4=#email4#,
EMAIL5=#email5#,
FAX1=#fax1#,
FAX2=#fax2#,
FAX3=#fax3#,
FAX4=#fax4#,
FAX5=#fax5#,
LM_USER_ID=#lmUserId#,
LM_DATE=SYSDATE
WHERE CUST_NO = #custNo# AND CONTACT_TYPE = #contactType#
]]>
</update>

<delete id="companycontactentrydeletion" parameterClass="cargo.cms.customer.bo.CustContactBO" >
DELETE FROM CUST_CONTACT WHERE CUST_NO = #custNo# AND CONTACT_TYPE = #contactType#
</delete>

<update id="updatecompanydetails" parameterClass="cargo.cms.customer.bo.CompanyProfileBO" >
UPDATE CUST_COMPANY SET
CO_IATA_CODE=#coIataCode#,
BUS_REG_NO=#busRegNo#,
ADD1=#addr1#,
ADD2=#addr2#,
ADD3=#addr3#,
ADD4=#addr4#,
ADD5=#addr5#,
CITY=#city#,
PIN_CODE=#pinCode#,
CTRY_CODE=#countryCode#,
TEL1 =#tel1#,
TEL2 =#tel2#,
EMAIL1 =#email1#,
EMAIL2 =#email2#,
FAX1 =#fax1#,
FAX2 =#fax2#,
ADMIN_NAME =#adminName#, 
ADMIN_TITLE =#adminTitle#,
ADMIN_PASSWD=#adminPassword#,
ADMIN_EMAIL =#adminEmail#,
ADMIN_CONTACT_NO =#adminContactNo#,
LM_USER_ID=#lmUserId#,
LM_DATE=SYSDATE
WHERE CODE=#code#
</update>


 added by Kishore end -->

<!--  	 Onsite Changed on 08 May 2006 by mayank Starts here  (Replace field CO_SNAME with CODE_DESC in where clause) -->
	<select id="validatecompany" parameterClass="cargo.cms.customer.bo.CompanyBO" resultClass="java.lang.String">
		SELECT CODE AS customerNo FROM CUST_COMPANY 
		<dynamic prepend="WHERE">
			<isNotEmpty prepend="AND" property="companyName">
				CODE_DESC = #companyName#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="customerNo">
				CODE = #customerNo#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="iataCode">
				CO_IATA_CODE = #iataCode#
			</isNotEmpty>
		</dynamic>
   	</select>
<!--   	 Onsite Changed on 08 May 2006 by mayank Ends here  (Replace field CO_SNAME with CODE_DESC in where clause) -->

	<select id="existPhneNumInCustAuthRep" parameterClass="cargo.cms.customer.bo.UserBO" resultClass="java.lang.Integer">
	select count(twofa_mobile_no) from cust_agent_auth_rep where cust_no=#customerNo# and twofa_mobile_no is not null
	</select>

   	<select id="validateauthid" parameterClass="cargo.cms.customer.bo.UserBO" resultClass="java.lang.Integer">
	SELECT COUNT(1) FROM CUST_AGENT_AUTH_REP 
		<dynamic prepend="WHERE">
			<isNotEmpty prepend="AND" property="customerNo">
				CUST_NO = #customerNo#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="userId">
				AUTH_REP_ID = #userId#
			</isNotEmpty>	
			<isNotEmpty prepend="AND" property="oldHKID">
				AUTH_REP_ID != #oldHKID#
			</isNotEmpty>			
		</dynamic>
	</select>
	
	<select id="validateauthidForOtherCompany" parameterClass="cargo.cms.customer.bo.UserBO" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM CUST_AGENT_AUTH_REP 
		<dynamic prepend="WHERE">
			<isNotEmpty prepend="AND" property="customerNo">
				CUST_NO = #customerNo#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="userId">
				AUTH_REP_ID = #userId#
			</isNotEmpty>	
		</dynamic>
	</select>
	
	<select id="validateauthidForOtherCompanyMtn" parameterClass="cargo.cms.customer.bo.UserBO" resultClass="java.lang.Integer">
		<!-- SELECT COUNT(1) FROM CUST_AGENT_AUTH_REP 
		<dynamic prepend="WHERE">
			<isNotEmpty prepend="AND" property="customerNo">
				CUST_NO != #customerNo#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="userId">
				AUTH_REP_ID = #userId#
			</isNotEmpty>	
		</dynamic> -->
		SELECT COUNT(1) FROM CUST_AGENT_AUTH_REP WHERE CUST_NO = #customerNo# and AUTH_REP_ID = #userId# and rowid != #rowId#
	</select>
	
	
<!--   	 Onsite Changed on 08 May 2006 by mayank Ends here  (Add Query for validation) -->
	<!-- onsite lokesh 10may06 added for the agent contact maintain screen Starts 
<select id="sqlFetchCustContact" parameterClass="cargo.cms.customer.bo.AgentContactBO" resultClass="java.lang.Integer" >
	select count(CUST_NO) from CUST_CONTACT
	<dynamic prepend="WHERE" >
		<isNotEmpty property="customerNo" prepend="AND" >
			CUST_NO = #customerNo# 
		</isNotEmpty>
		<isNotEmpty property="" prepend="AND" >
			 CONTACT_TYPE = #type#
		</isNotEmpty>
	</dynamic>
</select> -->
	<select id="sqlCustomerCompDesc" parameterClass="cargo.cms.customer.bo.AgentContactSearchBO" resultClass="cargo.cms.customer.bo.AgentContactBO" >
		SELECT c.CO_IATA_CODE iataCode, c.CODE_DESC customerName, b.CODE_DESC contactTypeDesc   
		 FROM CUST_COMPANY c , MAST_CODE_DTL b where c.CODE = #customerNo#  and (b.CODE_TYPE='NOTIF_TYPE' and b.code =#type#)
	</select>
	<select id="sqlCustomerNumber" parameterClass="cargo.cms.customer.bo.AgentContactSearchBO" resultClass="java.lang.String">
		SELECT CODE FROM CUST_COMPANY 
		<dynamic prepend="WHERE">
			<isNotEmpty prepend="AND" property="customerName">
				CODE_DESC = #customerName#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="customerNo">
				CODE = #customerNo#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="iataCode">
				CO_IATA_CODE = #iataCode#
			</isNotEmpty>
		</dynamic>
   	</select>
   	<select id="sqlValidateCustomerNumber" parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT CODE FROM CUST_COMPANY  WHERE CODE_DESC = #PARAM# AND (dir_csgn='Y' or AGENT_YN='Y')
   	</select>
	<insert id="sqlAgentContactInsert" parameterClass="cargo.cms.customer.bo.AgentContactBO" >
		INSERT INTO CUST_CONTACT
			(CUST_NO, CONTACT_TYPE, EMAIL1, EMAIL2, EMAIL3, EMAIL4, EMAIL5, FAX1, FAX2, FAX3, FAX4, FAX5, 
				CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE, EMAIL_TYPE, FAX_TYPE, EMAIL_REMARKS, FAX_REMARKS)
			values(#customerNo#,#type#,#email1#,#email2#,#email3#,#email4#,#email5#,
				#fax1#,#fax2#,#fax3#,#fax4#,#fax5#,#lastModUserId#,sysdate,#lastModUserId#,sysdate, #emailType#, #faxType#, #emailRemark#, #faxRemark#)
	</insert>
	<insert id="sqlAgentContactTelInsert" parameterClass="cargo.cms.customer.bo.AgentContactBO" >
		INSERT INTO CUST_CONTACT_DTL
			(CUST_NO, CONTACT_TYPE, TYPE, CONTACT_NO, REMARKS, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE)
			values(#customerNo#,#type#,#telType#,#tel#,#telRemark#,#lastModUserId#,sysdate,#lastModUserId#,sysdate)
	</insert>
	 <!--
 onsite lokesh 10may06 added for the agent contact maintain screen Ends
 onsite lokesh 10may06 added for the Airline contact maintain screen Starts
	<select id="sqlAirlineCustomerNumber" parameterClass="cargo.cms.customer.bo.AirlineContactSearchBO" resultClass="java.lang.String">
		SELECT CODE FROM CUST_COMPANY 
		<dynamic prepend="WHERE AIRLINE_YN = 'Y' AND ">
			<isNotEmpty prepend="AND" property="customerName">
				UPPER(CODE_DESC) = UPPER(#customerName#)
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="customerNo">
				CODE = #customerNo#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="carrierDesc">
				CARR_CODE = #carrierDesc#
			</isNotEmpty>
		</dynamic>
   	</select>
	<select id="sqlAirlineCustomerCompDesc" parameterClass="cargo.cms.customer.bo.AirlineContactSearchBO" resultClass="cargo.cms.customer.bo.AirlineContactBO" >
		SELECT c.CARR_CODE carrierDesc, c.CARR_CODE carrierCode, c.CODE_DESC customerName, b.CODE_DESC contactTypeDesc   
		 FROM CUST_COMPANY c , MAST_CODE_DTL b where c.CODE = #customerNo#  and (b.CODE_TYPE='AIRLINE_CONTACT' and b.code =#type#)
	</select>
	
	<insert id="sqlAirlineContactInsert" parameterClass="cargo.cms.customer.bo.AirlineContactBO" >
		INSERT INTO CUST_CONTACT
			(CUST_NO, CONTACT_TYPE, EMAIL1, EMAIL2, EMAIL3, EMAIL4, EMAIL5, FAX1, FAX2, FAX3, FAX4, FAX5, 
				CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE)
			values(#customerNo#,#type#,#email1#,#email2#,#email3#,#email4#,#email5#,
				#fax1#,#fax2#,#fax3#,#fax4#,#fax5#,#lastModUserId#,sysdate,#lastModUserId#,sysdate)
	</insert>
 onsite lokesh 10may06 added for the Airline contact maintain screen Ends
-->
	
<select id="authrepsqlPopulateCompanyDetails" parameterClass="map" resultClass="java.util.HashMap">
	select CODE_DESC AS companyName, CODE AS customerNumber, CO_IATA_CODE AS iataCode from cust_company
	<dynamic prepend="WHERE">
		<isNotEmpty prepend="AND" property="customerNumber">
			upper(CODE) = upper(#customerNumber#)
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="companyName">
			upper(CODE_DESC) = upper(#companyName#)
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="iataCode">
			upper(CO_IATA_CODE) = upper(#iataCode#)
		</isNotEmpty>
		and rownum = 1
	</dynamic>
</select>
	<!--
    ITERATION II  QUERY STARTS HERE  	
 <select id="sqlagentinfoquery"	 parameterClass="cargo.cms.customer.bo.CustomerDetailsBO" resultClass="cargo.cms.customer.bo.CustomerDetailsBO">
	SELECT CODE as customerNo FROM CUST_COMPANY 
		<dynamic prepend="WHERE">
			<isNotEmpty prepend="AND" property="customerName">
					UPPER(CODE_DESC) = UPPER(#customerName#)
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="companyIataCode">
					CO_IATA_CODE = #companyIataCode#
			</isNotEmpty>
				AND ROWNUM=1
		</dynamic>
</select>
    ITERATION II  QUERY ENDS HERE  	
 
 
  Prabhakar, Credit Fecility Mantain Starts    
 
    To make Customer Name dropdown. It should be done in framework 
	<select id="fetchCustomerNameList"  parameterClass="java.lang.Object" resultClass="cargo.cms.customer.bo.MaintainCreditFecilityBO">
		SELECT CODE_DESC AS companyName FROM CUST_COMPANY		
	</select>
	
    To make Customer Number dropdown. It should be done in framework 
	<select id="fetchCustomerNoList"  parameterClass="java.lang.Object" resultClass="cargo.cms.customer.bo.MaintainCreditFecilityBO">
		SELECT CODE AS customerNo FROM CUST_COMPANY		
	</select>
	
	To FetchCredit Fecility List For Maintain 
	<select id="fetchCreditFecilityList"  parameterClass="cargo.cms.customer.bo.MaintainCreditFecilityBO" resultClass="cargo.cms.customer.bo.MaintainCreditFecilityBO">
		SELECT
			CODE AS customerNo,
			CODE_DESC AS companyName,
			CO_IATA_CODE AS iataCode,
			FIN_CODE AS finCustCode
		FROM 
			CUST_COMPANY
		<dynamic prepend="WHERE">
			<isNotEmpty prepend="AND" property="customerNo">
				UPPER(CODE)=UPPER(#customerNo#)
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="companyName">
				UPPER(CODE_DESC) like UPPER(#companyName#)
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="iataCode">
				UPPER(CO_IATA_CODE)=UPPER(#iataCode#)
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="finCustCode">
				UPPER(FIN_CODE)=UPPER(#finCustCode#)
			</isNotEmpty>
		</dynamic>
	</select>
	
	To create Credit Fecilty in CUST_AGENT_CREDIT
	<insert id="insertCreditFecilityToAAT" parameterClass="cargo.cms.customer.bo.MaintainCreditFecilityBO">
		INSERT INTO CUST_AGENT_CREDIT (
			  TR_NO,
			  CUST_NO,
			  CR_AMT,
			  CR_BAL,
			  CR_EFF_DATE_FROM,
			  CR_EFF_DATE_TO,
			  CR_USER_ID,
			  CR_DATE,            
			  LM_USER_ID,         
			  LM_DATE )            
		VALUES ( 
			  CUST_AGENT_CREDIT_SEQ.nextval,
			  #customerNo#,
			  #creditLimit#,
			  #creditBalance#,
			  TO_DATE(#creditEffDateFrom#,'DDMONYY'),
			  TO_DATE(#creditEffDateTo#,'DDMONYY'),
		      #crUserId#,
		      sysdate,
		      #lmUserId#,
		      sysdate )
	</insert>
	
	To create Credit Fecilty in CUST_AGENT_CREDIT
	<insert id="insertCreditFecilityToAirLine" parameterClass="cargo.cms.customer.bo.MaintainCreditFecilityBO">
		INSERT INTO CUST_AGENT_AIRL_CREDIT (			  
			  TR_NO,
			  CUST_NO,
			  CR_TYPE,
			  CARR_CODE,
			  CR_AMT,
			  CR_BAL,
			  CR_EFF_DATE_FROM,
			  CR_EFF_DATE_TO,
			  CR_USER_ID,
			  CR_DATE,
			  LM_USER_ID,
			  LM_DATE )            
		VALUES ( 
			  CUST_AGENT_AIRL_CR_SEQ.nextval,
			  #customerNo#,
			  #type#,
			  UPPER(#airline#),
			  #creditLimit#,
			  #creditBalance#,
			  TO_DATE(#creditEffDateFrom#,'DDMONYY'),
			  TO_DATE(#creditEffDateTo#,'DDMONYY'),
		      #crUserId#,
		      sysdate,
		      #lmUserId#,
		      sysdate )
	</insert>
	
	To fetch Credit Fecility details from AAT 
	<select id="fetchCreditFecilityAAT" parameterClass="java.lang.String" resultClass="cargo.cms.customer.bo.MaintainCreditFecilityBO">
		SELECT DISTINCT
			  TR_NO AS trNo,
			  CUST_NO AS customerNo,
			  CR_AMT AS creditLimit,
			  CR_BAL AS creditBalance,
			  TO_CHAR(CR_EFF_DATE_FROM, 'DDMONYY') AS creditEffDateFrom,
			  TO_CHAR(CR_EFF_DATE_TO, 'DDMONYY') AS creditEffDateTo,
			  LM_USER_ID AS lmUserId,
			  TO_CHAR(LM_DATE, 'DDMONYY HH24:MI:SS') AS lmDate
		FROM  CUST_AGENT_CREDIT 
		WHERE
				 UPPER(CUST_NO)=UPPER(#PARAM#)
	</select>
	
	To fetch Credit Fecility details from Airline List
	<select id="fetchCreditFecilityAIRList" parameterClass="cargo.cms.customer.bo.MaintainCreditFecilityBO" resultClass="cargo.cms.customer.bo.MaintainCreditFecilityBO">
	<![CDATA[
		SELECT DISTINCT
			  TR_NO AS trNo,
			  CUST_NO AS customerNo,
			  CR_TYPE AS type,
			  CARR_CODE AS airline,
			  CR_AMT AS creditLimit,
			  CR_BAL AS creditBalance,
			  TO_CHAR(CR_EFF_DATE_FROM, 'DDMONYY') AS creditEffDateFrom,
			  TO_CHAR(CR_EFF_DATE_TO, 'DDMONYY') AS creditEffDateTo,
			  LM_USER_ID AS lmUserId,
			  TO_CHAR(LM_DATE, 'DDMONYY HH24:MI:SS') AS lmDate
		FROM  CUST_AGENT_AIRL_CREDIT 
		WHERE
				 UPPER(CUST_NO)=UPPER(#customerNo#)
			AND  UPPER(CR_TYPE)=UPPER(#type#)
		]]>
	</select>
	
	To fetch Credit Fecility details from Airline
	<select id="fetchCreditFecilityAIR" parameterClass="cargo.cms.customer.bo.MaintainCreditFecilityBO" resultClass="cargo.cms.customer.bo.MaintainCreditFecilityBO">
	
		SELECT DISTINCT
			  TR_NO AS trNo,
			  CUST_NO AS customerNo,
			  CR_TYPE AS type,
			  CARR_CODE AS airline,
			  CR_AMT AS creditLimit,
			  CR_BAL AS creditBalance,
			  TO_CHAR(CR_EFF_DATE_FROM, 'DDMONYY') AS creditEffDateFrom,
			  TO_CHAR(CR_EFF_DATE_TO, 'DDMONYY') AS creditEffDateTo,
			  LM_USER_ID AS lmUserId,
			  TO_CHAR(LM_DATE, 'DDMONYY HH24:MI:SS') AS lmDate
		FROM  CUST_AGENT_AIRL_CREDIT 
		WHERE
				 UPPER(TR_NO)=UPPER(#trNo#)
			AND  UPPER(CR_TYPE)=UPPER(#type#)
						
	</select>
	
	To Update Credit Fecilty in CUST_AGENT_CREDIT
	<update id="updateCreditFecilityAAT" parameterClass="cargo.cms.customer.bo.MaintainCreditFecilityBO" >	
		UPDATE CUST_AGENT_CREDIT
		SET   CUST_NO = #customerNo#,        
			  CR_AMT = #creditLimit#,        
			  CR_BAL = #creditBalance#,        
			  CR_EFF_DATE_FROM = TO_DATE(#creditEffDateFrom#,'DDMONYY'),
			  CR_EFF_DATE_TO = TO_DATE(#creditEffDateTo#,'DDMONYY'),   
			  LM_USER_ID = #lmUserId#,         
			  LM_DATE = sysdate
		WHERE 
		        UPPER(TR_NO) = UPPER(#trNo#)
	</update>
	
	To Update Credit Fecilty in CUST_AGENT_AIRL_CREDIT
	<update id="updateCreditFecilityAIR" parameterClass="cargo.cms.customer.bo.MaintainCreditFecilityBO" >	
		UPDATE CUST_AGENT_AIRL_CREDIT
		SET   CUST_NO = #customerNo#,
			  CR_TYPE = #type#,
			  CARR_CODE = UPPER(#airline#),   
			  CR_AMT = #creditLimit#,        
			  CR_BAL = #creditBalance#,        
			  CR_EFF_DATE_FROM = TO_DATE(#creditEffDateFrom#,'DDMONYY'),
			  CR_EFF_DATE_TO = TO_DATE(#creditEffDateTo#,'DDMONYY'),    
			  LM_USER_ID = #lmUserId#,         
			  LM_DATE = sysdate
		WHERE 
		        UPPER(TR_NO) = UPPER(#trNo#)
	</update>
	
	To Delete Credit Fecility In AAT By Customer No
	<delete id="deleteCreditFecilityAATByCustNo" parameterClass="java.lang.String" >
	<![CDATA[
		DELETE FROM CUST_AGENT_CREDIT WHERE 
			UPPER(CUST_NO) = UPPER(#PARAM#)						
	]]>
	</delete>	
	
	To Delete Credit Fecility In AirLine By  Customer No
	<delete id="deleteCreditFecilityAIRByCustNo" parameterClass="java.lang.String" >
	<![CDATA[
		DELETE FROM CUST_AGENT_AIRL_CREDIT WHERE 
			UPPER(CUST_NO) = UPPER(#PARAM#)						
	]]>
	</delete>		
	
	To Delete Credit Fecility In AirLine By TrNo
	<delete id="deleteCreditFecilityAIRByTrNo" parameterClass="java.lang.String" >
	<![CDATA[
		DELETE FROM CUST_AGENT_AIRL_CREDIT WHERE 
			UPPER(TR_NO) = UPPER(#PARAM#)						
	]]>
	</delete>	
	
	To Check CustNo/Company Name/iataCode/finCustcode has been Exist or Not
	<select id="checkCompanyExistOrNot" parameterClass="cargo.cms.customer.bo.MaintainCreditFecilityBO" resultClass="java.lang.Integer" >
		SELECT COUNT(*) 
		FROM
			CUST_COMPANY
		<dynamic prepend="WHERE">
			<isNotEmpty prepend="AND" property="customerNo">
				UPPER(CODE)=UPPER(#customerNo#)
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="companyName">
				UPPER(CODE_DESC)=UPPER(#companyName#)
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="iataCode">
				UPPER(CO_IATA_CODE)=UPPER(#iataCode#)
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="finCustCode">
				UPPER(FIN_CODE)=UPPER(#finCustCode#)
			</isNotEmpty>
		</dynamic>
	</select>
	
	To Check The Record has been Duplicate or Not for AAT while create
	<select id="checkAATExistOrNot" parameterClass="cargo.cms.customer.bo.MaintainCreditFecilityBO" resultClass="java.lang.Integer" >
		SELECT COUNT(*) 
		FROM
			CUST_AGENT_CREDIT
		WHERE
				UPPER(CUST_NO) = UPPER(#customerNo#)
			AND	UPPER(TO_CHAR(CR_EFF_DATE_FROM, 'DDMONYY')) = UPPER(#creditEffDateFrom#)
			AND UPPER(TO_CHAR(CR_EFF_DATE_TO, 'DDMONYY')) = UPPER(#creditEffDateTo#)				
	</select>
	
	To Check The Record has been Duplicate or Not for Airline while create
	<select id="checkAirlineExistOrNot" parameterClass="cargo.cms.customer.bo.MaintainCreditFecilityBO" resultClass="java.lang.Integer" >
		SELECT COUNT(*) 
		FROM
			CUST_AGENT_AIRL_CREDIT
		WHERE
				UPPER(CR_TYPE) = UPPER(#type#)
			AND UPPER(CUST_NO) = UPPER(#customerNo#)
			AND UPPER(CARR_CODE) = UPPER(#airline#)
			AND	UPPER(TO_CHAR(CR_EFF_DATE_FROM, 'DDMONYY')) = UPPER(#creditEffDateFrom#)
			AND UPPER(TO_CHAR(CR_EFF_DATE_TO, 'DDMONYY')) = UPPER(#creditEffDateTo#)				
	</select>
	To Check The Record has been Duplicate or Not for AAT while update
	<select id="checkAATExistOrNotForUpdate" parameterClass="cargo.cms.customer.bo.MaintainCreditFecilityBO" resultClass="java.lang.Integer" >
		SELECT COUNT(*) 
		FROM
			CUST_AGENT_CREDIT
		WHERE
				TR_NO != #trNo#
			AND UPPER(CUST_NO) = UPPER(#customerNo#)
			AND UPPER(TO_CHAR(CR_EFF_DATE_FROM, 'DDMONYY')) = UPPER(#creditEffDateFrom#)
			AND UPPER(TO_CHAR(CR_EFF_DATE_TO, 'DDMONYY')) = UPPER(#creditEffDateTo#)				
	</select>
	
	To Check The Record has been Duplicate or Not for Airline  while update
	<select id="checkAirlineExistOrNotForUpdate" parameterClass="cargo.cms.customer.bo.MaintainCreditFecilityBO" resultClass="java.lang.Integer" >
		SELECT COUNT(*) 
		FROM
			CUST_AGENT_AIRL_CREDIT
		WHERE
				TR_NO != #trNo#
			AND UPPER(CUST_NO) = UPPER(#customerNo#)
			AND UPPER(CR_TYPE) = UPPER(#type#)
			AND UPPER(CARR_CODE) = UPPER(#airline#)
			AND	UPPER(TO_CHAR(CR_EFF_DATE_FROM, 'DDMONYY')) = UPPER(#creditEffDateFrom#)
			AND UPPER(TO_CHAR(CR_EFF_DATE_TO, 'DDMONYY')) = UPPER(#creditEffDateTo#)				
	</select>
	
	 Sutharman 18SEP06, Added    
	<update id="updateFinanceCustomerCode" parameterClass="map" > 
    	UPDATE   CUST_COMPANY 
		SET   FIN_CODE=#FINCUSTCODE#
		WHERE   CODE=#CUSTNO#
   	</update>
	
  Prabhakar, Credit Fecility Mantain Ends    
	-->
<!--	To fecth Company Details for Authorized Rep-->
	<select id="fetchCompanyDetailsForAuthRep_count" parameterClass="cargo.cms.customer.bo.MaintainAuthBO" resultClass="java.lang.Integer">
		SELECT
			count(1)
		FROM 
			CUST_COMPANY
		<dynamic prepend="WHERE">
			<isNotEmpty prepend="AND" property="customerNo">
				UPPER(CODE)=UPPER(#customerNo#)
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="companyName">
				UPPER(CODE_DESC)=UPPER(#companyName#)
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="iataCode">
				UPPER(CO_IATA_CODE)=UPPER(#iataCode#)
			</isNotEmpty>
		</dynamic>
	</select>

	<select id="fetchCompanyDetailsForAuthRep" parameterClass="cargo.cms.customer.bo.MaintainAuthBO" resultClass="cargo.cms.customer.bo.CompanyBO">
		SELECT
			CODE AS customerNo,
			CODE_DESC AS companyName,
			CO_IATA_CODE AS iataCode
		FROM 
			CUST_COMPANY
		<dynamic prepend="WHERE">
			<isNotEmpty prepend="AND" property="customerNo">
				UPPER(CODE)=UPPER(#customerNo#)
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="companyName">
				UPPER(CODE_DESC)=UPPER(#companyName#)
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="iataCode">
				UPPER(CO_IATA_CODE)=UPPER(#iataCode#)
			</isNotEmpty>
		</dynamic>
	</select>
	
<!--	To fecth Company Details for Maitain Alias Name-->
	<select id="fetchCompanyDtlForMtnAlias_count" parameterClass="cargo.cms.admin.bo.MaintainAliasNamesBO" resultClass="java.lang.Integer">
		SELECT
			count(1)
		FROM 
			CUST_COMPANY
		<dynamic prepend="WHERE">
			<isNotEmpty prepend="AND" property="customerNo">
				UPPER(CODE)=UPPER(#customerNo#)
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="companyName">
				UPPER(CODE_DESC)=UPPER(#companyName#)
			</isNotEmpty>			
		</dynamic>
	</select>
	<select id="fetchCompanyDtlForMtnAlias" parameterClass="cargo.cms.admin.bo.MaintainAliasNamesBO" resultClass="cargo.cms.admin.bo.MaintainAliasNamesBO">
		SELECT
			CODE AS customerNo,
			CODE_DESC AS companyName,
			CO_IATA_CODE AS iataCode
		FROM 
			CUST_COMPANY
		<dynamic prepend="WHERE">
			<isNotEmpty prepend="AND" property="customerNo">
				UPPER(CODE)=UPPER(#customerNo#)
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="companyName">
				UPPER(CODE_DESC)=UPPER(#companyName#)
			</isNotEmpty>			
		</dynamic>
	</select>
	<select id="fetchCompanyDtls" parameterClass="cargo.cms.admin.bo.MaintainAliasNamesBO" resultClass="cargo.cms.admin.bo.MaintainAliasNamesBO">
		SELECT
			CODE AS customerNo,
			CODE_DESC AS companyName
		FROM 
			CUST_COMPANY
		<dynamic prepend="WHERE">
			<isNotEmpty prepend="AND" property="companyName">
				UPPER(CODE_DESC)=UPPER(#companyName#)
			</isNotEmpty>			
		</dynamic>
	</select>
<select id="checkRHO"  parameterClass="cargo.cms.customer.bo.CustomerBO" resultClass="java.lang.Integer">
	<![CDATA[
	 select count(1) from flt_opr where rho_id=#companyCustomerNo#
	]]>
</select>
<select id="checkShipment"  parameterClass="cargo.cms.customer.bo.CustomerBO" resultClass="java.lang.Integer">
	<![CDATA[
		select count(1) from awb where agent_code = #companyCustomerNo#
	]]>
</select>
<select id="searchAgentExist"  parameterClass="cargo.cms.customer.bo.CustomerBO" resultClass="java.lang.Integer">
	<![CDATA[
		 select count(1) from CUST_APP_AGENT where agent_Id = #companyCustomerNo#
	]]>
</select>
<select id="checkInvoice"  parameterClass="cargo.cms.customer.bo.CustomerBO" resultClass="java.lang.Integer">
	<![CDATA[
		select count(1) from BILL_INV_HD where CUST_NO = #companyCustomerNo#
	]]>
</select>

<select id="getCmsRulesData"  parameterClass="cargo.cms.customer.bo.CmsRulesBO" resultClass="cargo.cms.customer.bo.CmsRulesBO">
	<![CDATA[	
		select  RULE_CODE, SNO, RULE_DESC, RULE_VALUE, VIEW_IND, CR_USER_ID, CR_DATE, LM_USER_ID, 
		to_char(LM_DATE,'DDMMYYYY HH24:MI:SS') LM_DATE, ADMIN_YN ,
		DECODE((select count(*) from sec_user t1, sec_user_role t2, sec_role_sub_function t3 
		where  t1.code = t2.user_id and t2.role_name = t3.role_code and t3.function_code = 'ADM_23' 
		and t3.sub_function_code = 'ADM_23_001' and enable_yn ='Y' and t1.code = #USER_ID#),0,'N','Y') ENABLE_YN 
		from CMSRULES where RULE_CODE = nvl( #RULE_CODE#,RULE_CODE ) AND VIEW_IND = 'Y'
		ORDER BY RULE_DESC
	]]>
</select>

<update id="updateCmsRules" parameterClass="cargo.cms.customer.bo.CmsRulesBO" >
	<![CDATA[
	UPDATE CMSRULES SET RULE_DESC = #RULE_DESC# , RULE_VALUE = #RULE_VALUE# ,  ADMIN_YN = nvl(#ADMIN_YN#,ADMIN_YN), LM_DATE = SYSDATE, LM_USER_ID = #userID# where RULE_CODE = #RULE_CODE#  and  LM_DATE = to_DATE(#LM_DATE#,'DDMMYYYY HH24:MI:SS')
	]]>
</update> 

<delete id="deleteEctHandlerData" parameterClass="cargo.cms.customer.bo.ECTHandlerBO" >
	<![CDATA[
	Delete from MAST_HANDLER_LOCAL_DEST where ECT_HANDLER = #ECT_HANDLER# AND DEST = #DEST#
	]]>
</delete>

<delete id="deleteEctHandler" parameterClass="cargo.cms.customer.bo.ECTHandlerBO" >
	<![CDATA[
	Delete from MAST_HANDLER_LOCAL_DEST where ECT_HANDLER = #ECT_HANDLER# 
	]]>
</delete>

<select id="getEctHandlerData"  parameterClass="cargo.cms.customer.bo.ECTHandlerBO" resultClass="cargo.cms.customer.bo.ECTHandlerBO">
	<![CDATA[
	Select ECT_HANDLER, DEST, DEST  OLD_DEST, CR_USER_ID, CR_DATE from MAST_HANDLER_LOCAL_DEST where ECT_HANDLER = #ECT_HANDLER#
	]]>
</select>

<insert id="insertEctHandlerData" parameterClass="cargo.cms.customer.bo.ECTHandlerBO" >
	<![CDATA[
	insert into MAST_HANDLER_LOCAL_DEST (ECT_HANDLER, DEST, CR_USER_ID, CR_DATE) values (#ECT_HANDLER#, #DEST#, #CR_USER_ID#, SYSDATE)
	]]>
</insert>

<select id="checkDestExist"  parameterClass="java.lang.String" resultClass="java.lang.Integer">
	<![CDATA[
	select count(1) from MAST_ARPT where code = #dest#
	]]>
</select>

<!-- ============================================================================ -->
	<!--                                   SITA                                       -->
	<!-- ============================================================================ -->
	<select id="sqlGetSITAList" parameterClass="cargo.cms.customer.bo.SITAIMPBO" resultClass="cargo.cms.customer.bo.SITAIMPBO">
		<![CDATA[
			SELECT
			  c.CUST_NO AS customerNumber,
			  b.CODE_DESC AS companyName,
			  c.FLT_KEY AS flightNumber,
			  c.VER_NO AS versionNumber,
			  c.tr_no AS transactionNumber,
			  c.CR_USER_ID,
			  c.CR_DATE,
			  c.LM_USER_ID,
			  c.LM_DATE,
			  c.carr_code AS carrier,
			  c.msg_type AS messageType
			FROM
			  CUST_COMPANY b, CUST_AIRL_SITA_CIMP_MSG c
			WHERE
			  b.CODE = c.CUST_NO
			  AND b.code_desc like nvl(#companyName#, b.code_desc)
			  AND c.CUST_NO = NVL(#customerNumber#, c.CUST_NO)
			  AND c.CARR_CODE = nvl(#carrier#, c.CARR_CODE)
			  ORDER BY MSG_TYPE
  			]]>
	</select>
	
	<select id="sqlGetSITATruckList" parameterClass="cargo.cms.customer.bo.SITAIMPBO" resultClass="cargo.cms.customer.bo.SITAIMPBO">
			SELECT
			  c.CUST_NO AS customerNumber,
			  C.COMP_NAME AS companyName,
			  c.FLT_KEY AS flightNumber,
			  c.VER_NO AS versionNumber,
			  c.tr_no AS transactionNumber,
			  c.CR_USER_ID,
			  c.CR_DATE,
			  c.LM_USER_ID,
			  c.LM_DATE,
			  c.carr_code AS carrier,
			  c.msg_type AS messageType
			FROM   CUST_AIRL_SITA_TRUCK_MSG c
			WHERE 1 = 1
			<isNotEmpty property="companyName">
				AND c.COMP_NAME  = #companyName#
			</isNotEmpty>
			<isNotEmpty property="customerNumber">
				AND  c.CUST_NO = #customerNumber#
			</isNotEmpty>
			<isNotEmpty property="carrier">
				AND  c.CARR_CODE = #carrier#
			</isNotEmpty>
			  	ORDER BY c.MSG_TYPE		
	</select>
	
	<select id="sqlGetSITATruckListCOUNT" parameterClass="cargo.cms.customer.bo.SITAIMPBO" resultClass="java.lang.Integer">
			SELECT
			  COUNT (*) as totalRowCount			
			FROM   CUST_AIRL_SITA_TRUCK_MSG 
			WHERE 1 = 1
			<isNotEmpty property="companyName">
				AND COMP_NAME = #companyName#
			</isNotEmpty>
			<isNotEmpty property="customerNumber">
				AND  CUST_NO = #customerNumber#
			</isNotEmpty>
			<isNotEmpty property="carrier">
				AND  CARR_CODE = #carrier#
			</isNotEmpty>
	</select>
	
	<select id="sqlGetSITAListCOUNT" parameterClass="cargo.cms.customer.bo.SITAIMPBO" resultClass="java.lang.Integer">
		<![CDATA[
			SELECT
			  COUNT (*) as totalRowCount
			FROM
			  CUST_COMPANY b, CUST_AIRL_SITA_CIMP_MSG c
			WHERE
			  b.CODE = c.CUST_NO
			AND b.code_desc like nvl(#companyName#, b.code_desc)
			  AND c.CUST_NO = NVL(#customerNumber#, c.CUST_NO)
			  AND c.CARR_CODE = nvl(#carrier#, c.CARR_CODE)
			]]>
	</select>
  	<select id="sqlGetSITAAddressList" parameterClass="cargo.cms.customer.bo.SITAIMPBO" resultClass="cargo.cms.customer.bo.SITAAddressBO">
		select 
			a.SITA_ADDR AS SITAAddress
		from cust_airl_sita_cimp_dtl a, cust_airl_sita_cimp_msg b
		where a.tr_no = b.tr_no
		AND b.tr_no = #transactionNumber#
	</select>
	
    <select id="sqlGetSITAtruckAddressList" parameterClass="cargo.cms.customer.bo.SITAIMPBO" resultClass="cargo.cms.customer.bo.SITAAddressBO">
		select 
			a.SITA_ADDR AS SITAAddress
		from cust_airl_sita_truck_dtl a, cust_airl_sita_truck_msg b
		where a.tr_no = b.tr_no
		AND b.tr_no = #transactionNumber#
	</select>
	
	<select id="sqlGetSITAAddressDetails" parameterClass="cargo.cms.customer.bo.SITAIMPBO" resultClass="cargo.cms.customer.bo.SITAIMPBO">
		SELECT DISTINCT a.TR_NO AS transactionNumber,
  b.code_desc           AS companyName      ,
  a.CUST_NO             AS customerNumber   ,
  a.MSG_TYPE            AS messageType      ,
  a.CARR_CODE           AS carrier          ,
  a.FLT_KEY             AS flightNumber     ,
  a.VER_NO              AS versionNumber,
  c.ADDR_GROUP     as addressGroup
   FROM CUST_AIRL_SITA_CIMP_MSG a,
  CUST_COMPANY b
  Left Join CUST_AIRL_SITA_GRP c on b.code = c.cust_no 
  WHERE TR_NO = #transactionNumber#  
  AND b.code    = a.cust_no and rownum=1
	</select>

	<select id="sqlGetSITATruckAddressDetails" parameterClass="cargo.cms.customer.bo.SITAIMPBO" resultClass="cargo.cms.customer.bo.SITAIMPBO">
		  SELECT DISTINCT      
      	  TR_NO AS transactionNumber,
		  #companyName#       AS companyName      ,
		  CUST_NO             AS customerNumber   ,
		  MSG_TYPE            AS messageType      ,
		  CARR_CODE           AS carrier          ,
		  FLT_KEY             AS flightNumber     ,
		  VER_NO              AS versionNumber		  
		  FROM CUST_AIRL_SITA_TRUCK_MSG    
		  WHERE TR_NO = #transactionNumber# and rownum=1		
		<!--
		SELECT DISTINCT a.TR_NO AS transactionNumber,
		  b.code_desc           AS companyName      ,
		  a.CUST_NO             AS customerNumber   ,
		  a.MSG_TYPE            AS messageType      ,
		  a.CARR_CODE           AS carrier          ,
		  a.FLT_KEY             AS flightNumber     ,
		  a.VER_NO              AS versionNumber,
		  c.ADDR_GROUP     as addressGroup
		   FROM CUST_AIRL_SITA_TRUCK_MSG a,
		  CUST_COMPANY b
		  Left Join CUST_TRUCK_SITA_GRP c on b.code = c.cust_no 
		  WHERE TR_NO = #transactionNumber#  
		  AND b.code    = a.cust_no and rownum=1
		-->
	</select>
	
	<select id="sqlSitaAddressGroupCount"  parameterClass="java.lang.String" resultClass="java.lang.Integer">
	   SELECT COUNT(ADDR_GROUP) FROM CUST_AIRL_SITA_GRPDTL  WHERE SITA_ADDR = #sitaAdd#
    </select>
    
    <select id="sqlAddressGroupCount"  parameterClass="java.lang.String" resultClass="java.lang.Integer">
   	 SELECT COUNT(1) FROM CUST_AIRL_SITA_GRP WHERE ADDR_GROUP = #PARAM#
    </select>
    
	<delete id="sqlDeleteSITAEntry" parameterClass="cargo.cms.customer.bo.SITAIMPBO">
		DELETE FROM CUST_AIRL_SITA_CIMP_DTL 
		WHERE TR_NO = #transactionNumber#
	</delete>
	
	<delete id="sqlDeleteSITATruckEntry" parameterClass="cargo.cms.customer.bo.SITAIMPBO">
		DELETE FROM CUST_AIRL_SITA_TRUCK_DTL 
		WHERE TR_NO = #transactionNumber#
	</delete>
	
	
	<update id="sqlUpdateSITAAddressDetails" parameterClass="cargo.cms.customer.bo.SITAIMPBO">
		update CUST_AIRL_SITA_CIMP_MSG
		SET ver_no=#versionNumber#,
			LM_USER_ID=#userID#,
			LM_DATE=sysdate
		WHERE TR_NO=#transactionNumber#
	</update>
	
	<update id="sqlUpdateSITATruckAddressDetails" parameterClass="cargo.cms.customer.bo.SITAIMPBO">
		update CUST_AIRL_SITA_TRUCK_MSG
		SET		
		ver_no=#versionNumber#,
		LM_USER_ID=#userID#,
		LM_DATE=sysdate
		WHERE TR_NO=#transactionNumber#
	</update>
	
	
	<insert id="sqlInsertSITAAddressList" parameterClass="cargo.cms.customer.bo.SITAAddressBO">
		insert into CUST_AIRL_SITA_CIMP_DTL
		values (#transactionNumber#, #SITAAddress#)
	</insert>

	<insert id="sqlInsertSITATruckAddressList" parameterClass="cargo.cms.customer.bo.SITAAddressBO">
		insert into CUST_AIRL_SITA_TRUCK_DTL
		values (#transactionNumber#, #SITAAddress#)
	</insert>


	<select id="sqlCheckExistingAddress" parameterClass="cargo.cms.customer.bo.SITAAddressBO" resultClass="java.lang.String">
		select to_char(count(*)) from CUST_AIRL_SITA_CIMP_DTL
		where upper(SITA_ADDR) = upper(#SITAAddress#)
		AND tr_no = #transactionNumber#
	</select>

	<insert id="sqlInsertSITADetails" parameterClass="cargo.cms.customer.bo.SITAIMPBO">
		INSERT INTO CUST_AIRL_SITA_CIMP_MSG (
		   TR_NO, 		   
		   CUST_NO,
		   MSG_TYPE,
		   CARR_CODE,
		   FLT_NO,
		   FLT_KEY,
		   VER_NO, 
		   CR_USER_ID, 
		   CR_DATE,
		   LM_USER_ID, 
		   LM_DATE)
		VALUES (
			CUST_ARSITAMSG_SEQ.nextval,			
			#customerNumber#,
			#messageType#,
			#carrier#,
			#flightNo#,
			#flightKey#,
			#versionNumber#,
			#userID#,
			sysdate,
			#userID#,
			sysdate)
	</insert>
	<insert id="sqlInsertTruckSITADetails" parameterClass="cargo.cms.customer.bo.SITAIMPBO">
		INSERT INTO CUST_AIRL_SITA_TRUCK_MSG (
		   TR_NO,
		   COMP_NAME, 
		   CUST_NO,
		   MSG_TYPE,
		   CARR_CODE,
		   FLT_NO,
		   FLT_KEY,
		   VER_NO, 
		   CR_USER_ID, 
		   CR_DATE,
		   LM_USER_ID, 
		   LM_DATE)
		VALUES (
			CUST_ARSITAMSG_SEQ.nextval,
			#companyName#,
			#customerNumber#,
			#messageType#,
			#carrier#,
			#flightNumber#,
			#flightKey#,
			#versionNumber#,
			#userID#,
			sysdate,
			#userID#,
			sysdate)
	</insert>
	<select id="sqlSITACheckCompanyExists" parameterClass="map" resultClass="java.lang.String">
		select code from cust_company
		<dynamic prepend="WHERE">
			<isNotEmpty prepend="AND" property="customerNumber">
				upper(CODE) = upper(#customerNumber#)
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="companyName">
				upper(CODE_DESC) = upper(#companyName#)
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="carrier">
				upper(CARR_CODE) = upper(#carrier#)
			</isNotEmpty>
			and rownum = 1
		</dynamic>
	</select>
	
	<select id="sqlValidateSITAAddressWithMasters" parameterClass="map" resultClass="java.lang.String">
		select to_char(count(*)) from MAST_SITA_ADDRESS where code=#sitaAddress#
	</select>

	<select id="sqlCheckRecordExists" parameterClass="cargo.cms.customer.bo.SITAIMPBO" resultClass="java.lang.String">
		select to_char(count(*)) 
		from cust_airl_sita_cimp_msg
		where cust_no = #customerNumber#
			and msg_type = #messageType#
			and flt_key = #flightKey#
	</select>

<select id="sqlCheckTruckRecordExists" parameterClass="cargo.cms.customer.bo.SITAIMPBO" resultClass="java.lang.String">
		select to_char(count(*)) 
		from cust_airl_sita_truck_msg
		where comp_name = #companyName#
			and CARR_CODE = #carrier#
			and msg_type = #messageType#
			and flt_key = #flightKey#
			and ver_no = #versionNumber#
	</select>

	<select id="sqlCheckRecordExistsForUpdate" parameterClass="cargo.cms.customer.bo.SITAIMPBO" resultClass="java.lang.String">
		select to_char(count(*)) 
		from cust_airl_sita_cimp_msg
		where cust_no = #customerNumber#
			and msg_type = #messageType#
			and flt_key = #flightKey#
			and ver_no = #versionNumber#
			and tr_no != #transactionNumber#
	</select>

<select id="sqlCheckRecordExistsForTruckUpdate" parameterClass="cargo.cms.customer.bo.SITAIMPBO" resultClass="java.lang.String">
		select to_char(count(*)) from CUST_AIRL_SITA_TRUCK_MSG	where comp_name = #companyName# and CARR_CODE = #carrier# and msg_type = #messageType#
			and flt_key = #flightKey#	and ver_no = #versionNumber# and tr_no != #transactionNumber#
	</select>
	
	<select id="sqlGetCurrentSITAAddressTransactionNumber" parameterClass="java.lang.String" resultClass="java.lang.String">
		select to_char(CUST_ARSITAMSG_SEQ.currval) from dual
	</select>
	<delete id="sqlDeleteSITAMsg" parameterClass="cargo.cms.customer.bo.SITAIMPBO">
		DELETE FROM CUST_AIRL_SITA_CIMP_MSG
		WHERE TR_NO = #transactionNumber#
	</delete>
	
	<delete id="sqlDeleteSITATruckMsg" parameterClass="cargo.cms.customer.bo.SITAIMPBO">
		DELETE FROM CUST_AIRL_SITA_TRUCK_MSG
		WHERE TR_NO = #transactionNumber#
	</delete>
	
	<select id="getSitaAddressForCreate"  parameterClass="map" resultClass="cargo.cms.customer.bo.SITAAddressBO">
		SELECT SITA_ADDR AS sitaAddress FROM CUST_AIRL_SITA_GRPDTL
		WHERE
			CUST_NO = #customerId# AND
			UPPER(ADDR_GROUP) = UPPER(#addressGroup#)
		ORDER BY SITA_ADDR
	</select>
	
	<select id="getSitaTruckAddressForCreate"  parameterClass="map" resultClass="cargo.cms.customer.bo.SITAAddressBO">
		SELECT SITA_ADDR AS sitaAddress FROM CUST_TRUCK_SITA_GRPDTL
		WHERE
			CUST_NO = #customerId# AND
			UPPER(ADDR_GROUP) = UPPER(#addressGroup#)
		ORDER BY SITA_ADDR
	</select>
	
	<select id="validateSITAAddressGroup"  parameterClass="map" resultClass="java.lang.String">
		SELECT A.CUST_NO AS CUST_NO FROM CUST_AIRL_SITA_GRP A, CUST_COMPANY B
			WHERE
				UPPER(A.ADDR_GROUP) = UPPER(#addressGroup#) AND
				A.CUST_NO = B.CODE 
				<isNotEmpty prepend="AND" property="carrierCode">
					B.CARR_CODE = #carrierCode#
				</isNotEmpty>			
	</select>
	<select id="validateSITATruckAddressGroup"  parameterClass="map" resultClass="java.lang.String">
		SELECT A.CUST_NO AS CUST_NO FROM CUST_TRUCK_SITA_GRP A, CUST_COMPANY B
			WHERE
				UPPER(A.ADDR_GROUP) = UPPER(#addressGroup#) AND
				A.CUST_NO = B.CODE 
				<isNotEmpty prepend="AND" property="carrierCode">
					B.CARR_CODE = #carrierCode#
				</isNotEmpty>			
	</select>
	
	<select id="sqlSITAListCreate" parameterClass="cargo.cms.customer.bo.SITAIMPBO" resultClass="cargo.cms.customer.bo.SITAIMPBO">
			select CODE as customerNumber, CODE_DESC as companyName, CARR_CODE as carrier 
			from CUST_COMPANY
			where 0=0
			<isNotEmpty prepend="AND" property="customerNumber">
				CODE = #customerNumber#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="companyName">
				CODE_DESC = #companyName#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="carrier">
				CARR_CODE = #carrier#
           </isNotEmpty>
	</select>
	
	
	<select id="validateTruckCarrier" parameterClass="java.lang.String" resultClass="java.lang.String">	 
	      select count(1) from MAST_TRUCK_CARRIER where UPPER(CODE) = UPPER(#param#)		   
	</select>	
	
	<select id="validateCompName" parameterClass="java.lang.String" resultClass="java.lang.String">
	     select count(1) from MAST_TRUCK_CARRIER where UPPER(CODE_DESC) = UPPER(#param#)	
	</select>
	
	<select id="sqlTruckSITAListCreate" parameterClass="cargo.cms.customer.bo.SITAIMPBO" resultClass="cargo.cms.customer.bo.SITAIMPBO">
			select #customerNumber# as customerNumber, CODE_DESC as companyName, code as carrier 
			from mast_truck_carrier
			where 0=0			
			<isNotEmpty prepend="AND" property="companyName">
				CODE_DESC = #companyName#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="carrier">
				code = #carrier#
           </isNotEmpty>
	</select>
	
	<select id="fetchCustomerNoForAjax" parameterClass="map" resultClass="java.util.HashMap">
	SELECT CODE AS codeId, CODE_DESC AS companyName FROM CUST_COMPANY WHERE AIRLINE_YN = 'Y' AND ACTIVE = 'Y' AND
	CODE_DESC like (#keySearchStr# ||'%') and ROWNUM &lt;= #maxRecFetch# ORDER BY CODE_DESC 
	</select>
	<!--  Added by Surendra Gollapalli on 10Mar2010 for Company Profile START -->
<select id="fetchCompanyProfileForAjax" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
select CODE_DESC AS codeDesc from CUST_COMPANY where CODE_DESC like (#keySearchStr# ||'%') and ROWNUM &lt;= #maxRecFetch#
</select>


<!-- UAT Bug Fix Bug Id 17,36 Start-->
<select id="getcompanyprofilelist" parameterClass="cargo.cms.customer.bo.UpdateCompanyProfileBO" resultClass="cargo.cms.customer.bo.UpdateCompanyProfileBO">
		SELECT CUST.CODE AS code , CUST.CODE_DESC AS codeDesc , 
    	replace(
    	Substr(Decode(Cust.Agent_Yn, 'Y', 'AGENT') || Decode(Cust.Airline_Yn, 'Y', '/AIRLINE')||Decode(Cust.Cons_Yn, 'Y', '/CONSIGNEE')||Decode(Cust.Rho_Yn, 'Y', '/RHO')||Decode(Cust.Shpr_Yn, 'Y', '/SHIPPER')||Decode(Cust.Sha_Yn, 'Y', '/SHA')||Decode(Cust.Tcs_Yn, 'Y', '/TCS USER')||Decode(Cust.Trucker_Yn, 'Y', '/TRUCKER'), 1, 1), '/', '')||            
        Substr(Decode(Cust.Agent_Yn, 'Y', 'AGENT') || Decode(Cust.Airline_Yn, 'Y', '/AIRLINE')||Decode(Cust.Cons_Yn, 'Y', '/CONSIGNEE')||Decode(Cust.Rho_Yn, 'Y', '/RHO')||Decode(Cust.Shpr_Yn, 'Y', '/SHIPPER')||Decode(Cust.Sha_Yn, 'Y', '/SHA')||Decode(Cust.Tcs_Yn, 'Y', '/TCS USER')||Decode(Cust.Trucker_Yn, 'Y', '/TRUCKER'), 2) As  companyType,		
		CUST.AIRLINE_YN AS airlineUser , CUST.AGENT_YN AS agentUser , 
		CUST.CONS_YN AS consigneeUser,CUST.SHPR_YN AS shipperUser , CUST.RHO_YN AS rhoUser , CUST.TRUCKER_YN AS truckerUser, 
		CUST.CO_IATA_CODE AS coIataCode ,CUST.TEL1 AS telImpOne , CUST.EMAIL1 AS emailOne ,CUST.EMAIL2 AS emailTwo, CUST.ADMIN_NAME AS adminName , 
		CUST.ADMIN_TITLE AS adminTitle , CUST.ADMIN_USER_ID AS adminUserId , CUST.ADMIN_PASSWD AS adminPassword , CUST.ADD1 AS addressOne , 
		CUST.CTRY_CODE AS countryCode , CUST.PAY_MODE_CHQ AS paymentModeChq , CUST.PAY_MODE_CCD AS paymentModeCcd , 
		CUST.PAY_MODE_EPS AS payamentModeEps , CUST.BLACKLISTED AS blackListed , CUST.ACTIVE AS active, CUST.CR_USER_ID AS crUserId , 
		TO_CHAR(CUST.CR_DATE,'DD MON YY') AS crDate , CUST.LM_USER_ID AS lmUserId , TO_CHAR(CUST.LM_DATE , 'DDMMYY HH24:MI')AS lmDate,
		TO_CHAR(CUST.LM_DATE , 'DDMMYY HH24:MI:SS')AS lastModifiedDate,CUST.CO_SNAME AS coSname , CUST.HAFFA_MEMBER AS haffaMember , 
		CUST.SELF_HANDLING AS selfHandling ,CUST.BUS_REG_NO AS busRegNo ,CUST.SUFFIX AS suffix
		 FROM CUST_COMPANY CUST
		WHERE 1=1 and exists ( select null from  cust_registration b where CUST.code = b.REG_PROC_ID)
		<dynamic>
			<isEqual prepend="AND" property="user" compareValue="Airline">
				CUST.AIRLINE_YN = 'Y' 
			</isEqual>
			<isEqual prepend="AND" property="user" compareValue="Cargo Agent">
				CUST.AGENT_YN = 'Y' 
			</isEqual>
			<isEqual prepend="AND" property="user" compareValue="Consignee">
				CUST.CONS_YN = 'Y' 
			</isEqual>		
			<isEqual prepend="AND" property="user" compareValue="Shipper">
				CUST.SHPR_YN =  'Y' 
			</isEqual>
			<isEqual prepend="AND" property="user" compareValue="RHO">
				CUST.RHO_YN =  'Y' 
			</isEqual>
			<isEqual prepend="AND" property="user" compareValue="Trucker">
				CUST.TRUCKER_YN =  'Y' 
			</isEqual>
			<isEqual prepend="AND" property="user" compareValue="SHA">
				CUST.SHA_YN =  'Y' 
			</isEqual>
			<isEqual prepend="AND" property="user" compareValue="TCS User">
				CUST.TCS_YN =  'Y' 
			</isEqual>
			<isNotEmpty prepend="AND" property="code">
				CUST.CODE = #code# 
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="codeDesc">
				CUST.CODE_DESC LIKE #codeDesc# 
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="coIataCode">
				CUST.CO_IATA_CODE =  #coIataCode# 
			</isNotEmpty>
		</dynamic>
		<dynamic prepend="ORDER BY ">
           <isNotEmpty property="sortOrder.sortField">
             $sortOrder.sortField$
           </isNotEmpty>
           <isEmpty property="sortOrder.sortField">
           companyType,codeDesc asc
           </isEmpty>
        </dynamic>
	</select>
	<!-- UAT Bug Fix Bug Id 17,36 End-->
	<select id="getcompanyprofilebypk"  parameterClass="cargo.cms.customer.bo.CompanyProfileBO"  
				   resultClass="cargo.cms.customer.bo.CompanyProfileBO">
		<![CDATA[
			SELECT a.CODE as code,
			a.CODE_DESC as codeDesc, 
			a.CO_IATA_CODE as coIataCode, 
			a.BUS_REG_NO as busRegNo,
			a.CARR_CODE as carrCode, 
			a.tel1 as tel1,
			a.tel2 as tel2,
			a.email1 as email1,
			a.email2 as email2,
			a.fax1 as fax1,
			a.fax2 as fax2,
			a.ADMIN_NAME as adminName, 
			a.ADMIN_TITLE as adminTitle,
			a.ADMIN_EMAIL as adminEmail,
			a.ADMIN_CONTACT_NO as adminContactNo, 
		    a.ADMIN_USER_ID as adminUserId, 
			a.ADMIN_PASSWD as adminPassword,
			a.EMAIL1 as email1, 
			a.EMAIL2 as email2,
			a.ADD1 as addr1, 
			a.ADD2 as addr2,
			a.ADD3 as addr3,
			a.ADD4 as addr4,
			a.ADD5 as addr5,
			a.CITY as city,
			a.PIN_CODE as pinCode,
			a.CTRY_CODE as countryCode,
	      	replace(
	    	Substr(Decode(A.Agent_Yn, 'Y', 'AGENT') || Decode(A.Airline_Yn, 'Y', '/AIRLINE')||Decode(A.Cons_Yn, 'Y', '/CONSIGNEE')||Decode(A.Rho_Yn, 'Y', '/RHO')||Decode(A.Shpr_Yn, 'Y', '/SHIPPER')||Decode(A.Sha_Yn, 'Y', '/SHA')||Decode(A.Tcs_Yn, 'Y', '/TCS USER')||Decode(A.Trucker_Yn, 'Y', '/TRUCKER'), 1, 1), '/', '')||            
			substr(decode(a.agent_yn, 'Y', 'AGENT') || decode(a.airline_yn, 'Y', '/AIRLINE')||decode(a.cons_yn, 'Y', '/CONSIGNEE')||decode(a.rho_yn, 'Y', '/RHO')||decode(a.SHPR_YN, 'Y', '/SHIPPER')||decode(a.SHA_YN, 'Y', '/SHA')||decode(a.TCS_YN, 'Y', '/TCS USER')||decode(a.TRUCKER_YN, 'Y', '/TRUCKER'), 2)AS  natureOfBusiness,
			c.CODE_DESC as country,
			AIRLINE_YN as airLineYn, 
			AGENT_YN as agentYn, 
			CONS_YN as consYn,
			TO_CHAR(a.LM_DATE , 'DDMMYY HH24:MI:SS')AS lastModifiedDate 
			FROM CUST_COMPANY a,  mast_country c
			WHERE 
			a.CTRY_CODE = c.CODE
			AND   a.code =#code#
      and exists ( select null from  cust_registration b where a.code = b.REG_PROC_ID)
		]]>
   	</select>
   	
   	
<select id="getcompanyprofilebypk_from_cust_contact" parameterClass="cargo.cms.customer.bo.CompanyProfileBO" resultClass="cargo.cms.customer.bo.CustContactBO">
	<![CDATA[
	    SELECT c.Cust_No as custNo,
		decode(c.Contact_type,null,d.CODE,c.contact_type) AS contactType,
		decode(Decode(C.Contact_Type,Null,D.Code,C.Contact_Type),'ECA','1','DCA','2','MRC','3','HMA','4','SCO','5','EIR','6') as ordType,
		NVL(c.cust_no,'') AS custNo,
		NVL(c.email1,'') AS email1,
		NVL(c.email2,'') AS email2,
		NVL(c.email3,'') AS email3,
		NVL(c.email4,'') AS email4,
		NVL(c.email5,'') AS email5,
		NVL(c.fax1,'') AS fax1,
		NVL(c.fax2,'')  AS fax2,
		NVL(c.fax3,'') AS fax3,
		NVL(c.fax4,'') AS fax4,
		NVL(c.fax5,'') AS fax5,   
		d.CODE_Desc AS contactTypeCode 
		FROM 
		  (SELECT ROWNUM SNO, a.code, a.code_type, a.CODE_Desc
		   FROM MAST_CODE_DTL a
		   WHERE a.code_type='NOTIF_TYPE') D
		   LEFT JOIN
		   (SELECT ROWNUM SNO,B.*
		   FROM CUST_CONTACT B
		   WHERE B.CUST_NO = #code#) C ON d.code = c.Contact_type order by ordType
	]]>
</select>

<select id="companyregistrationcheck" parameterClass="cargo.cms.customer.bo.UpdateCompanyProfileBO" resultClass="java.lang.Integer">
	<![CDATA[
	SELECT COUNT(*) as count from CUST_REGISTRATION WHERE REG_PROC_ID = #code#
	]]>
	</select>
	
	<select id="getCountryCode" parameterClass="cargo.cms.customer.bo.CompanyProfileBO" resultClass="java.lang.String">
	<![CDATA[
	SELECT CODE AS codeId FROM MAST_COUNTRY WHERE CODE_DESC=#country# ORDER BY CODE
	]]>
	</select>
<update id="updatecompanydetails" parameterClass="cargo.cms.customer.bo.CompanyProfileBO" >
		UPDATE CUST_COMPANY SET
			CO_IATA_CODE=#coIataCode#,
			BUS_REG_NO=#busRegNo#,
			ADD1=#addr1#,
			ADD2=#addr2#,
			ADD3=#addr3#,
			ADD4=#addr4#,
			ADD5=#addr5#,
			CITY=#city#,
			PIN_CODE=#pinCode#,
			CTRY_CODE=#countryCode#,
			TEL1 =#tel1#,
			TEL2 =#tel2#,
			EMAIL1 =#email1#,
			EMAIL2 =#email2#,
			FAX1 =#fax1#,
			FAX2 =#fax2#,
			ADMIN_NAME =#adminName#, 
			ADMIN_TITLE =#adminTitle#,
			ADMIN_PASSWD=#adminNewPassword#,
			ADMIN_EMAIL =#adminEmail#,
			ADMIN_CONTACT_NO =#adminContactNo#,
			LM_USER_ID=#lmUserId#,
			LM_DATE=SYSDATE			
			WHERE CODE=#code# 
			and LM_DATE = to_date( #lastModifiedDate#,'DDMMYY HH24:MI:SS') 
						
			<!-- need to be add for concurency check  --> 
</update>

<select id="companycontactentycheck" parameterClass="cargo.cms.customer.bo.CustContactBO" resultClass="java.lang.Integer">
SELECT COUNT (*) FROM CUST_CONTACT WHERE CUST_NO = #custNo# AND CONTACT_TYPE = #contactType#
</select>

<delete id="companycontactentrydeletion" parameterClass="cargo.cms.customer.bo.CustContactBO" >
DELETE FROM CUST_CONTACT WHERE CUST_NO = #custNo# AND CONTACT_TYPE = #contactType#
</delete>


<insert id="companycontactentryinsertion" parameterClass="cargo.cms.customer.bo.CustContactBO">
<![CDATA[
 INSERT INTO CUST_CONTACT(CUST_NO,CONTACT_TYPE,EMAIL1,EMAIL2,EMAIL3,EMAIL4,EMAIL5,FAX1,FAX2,FAX3,FAX4,FAX5,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE)
 VALUES(
		#custNo#,
		#contactType#,
		#email1#,
		#email2#,
		#email3#,
		#email4#,
		#email5#,
		#fax1#,
		#fax2#,
		#fax3#,
		#fax4#,
		#fax5#,
		#crUserId#,
		SYSDATE,
		#lmUserId#,
		SYSDATE)
]]>
</insert>

<update id="companycontactentryupdation" parameterClass="cargo.cms.customer.bo.CustContactBO" >
	<![CDATA[
		UPDATE CUST_CONTACT SET 
			EMAIL1=#email1#,
			EMAIL2=#email2#,
			EMAIL3=#email3#,
			EMAIL4=#email4#,
			EMAIL5=#email5#,
			FAX1=#fax1#,
			FAX2=#fax2#,
			FAX3=#fax3#,
			FAX4=#fax4#,
			FAX5=#fax5#,
			LM_USER_ID=#lmUserId#,
			LM_DATE=SYSDATE
			WHERE CUST_NO = #custNo# AND CONTACT_TYPE = #contactType#
	]]>
</update>
	<select id="fetchUserDetails" parameterClass="cargo.cms.customer.bo.UserBO" resultClass="cargo.cms.customer.bo.UserBO">
		SELECT 
			CODE AS userId , CODE_DESC AS name,
			EMAIL AS email, CONTACT_NO AS phone,CUST_NO AS customerNo
		FROM SEC_USER
		WHERE CUST_NO=#customerNo#
		ORDER BY CODE_DESC
	</select>
	<!-- UAT Bug Fix Bug Id 17,36 Start-->
	 <select id="getcompanyprofilelistCOUNT"  parameterClass="cargo.cms.customer.bo.UpdateCompanyProfileBO" resultClass="java.lang.Integer">
      
                  Select COUNT(*) as totalRowCount
                  FROM CUST_COMPANY CUST,CUST_REGISTRATION REG
		WHERE REG.REG_PROC_ID = CUST.CODE 
		<dynamic>
			<isEqual prepend="AND" property="user" compareValue="Airline">
				CUST.AIRLINE_YN = 'Y' 
			</isEqual>
			<isEqual prepend="AND" property="user" compareValue="Cargo Agent">
				CUST.AGENT_YN = 'Y' 
			</isEqual>
			<isEqual prepend="AND" property="user" compareValue="Consignee">
				CUST.CONS_YN = 'Y' 
			</isEqual>		
			<isEqual prepend="AND" property="user" compareValue="Shipper">
				CUST.SHPR_YN =  'Y' 
			</isEqual>
			<isEqual prepend="AND" property="user" compareValue="RHO">
				CUST.RHO_YN =  'Y' 
			</isEqual>
			<isEqual prepend="AND" property="user" compareValue="Trucker">
				CUST.TRUCKER_YN =  'Y' 
			</isEqual>
			<isEqual prepend="AND" property="user" compareValue="SHA">
				CUST.SHA_YN =  'Y' 
			</isEqual>
			<isEqual prepend="AND" property="user" compareValue="TCS User">
				CUST.TCS_YN =  'Y' 
			</isEqual>
			<isNotEmpty prepend="AND" property="code">
				CUST.CODE = #code# 
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="codeDesc">
			CUST.CODE_DESC LIKE #codeDesc# 
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="coIataCode">
				CUST.CO_IATA_CODE =  #coIataCode# 
			</isNotEmpty>
		</dynamic>
     </select>
     
     <!-- UAT Bug Fix Bug Id 17,36 End-->
     <select id="checkBusinessNumberExist"  parameterClass="cargo.cms.customer.bo.CompanyProfileBO" resultClass="java.lang.Integer">
			<![CDATA[
				select count(1) from CUST_COMPANY where BUS_REG_NO = #busRegNo# and CODE != #code#
			]]>
	</select>
	
	<select id="checkIataCodeExist"  parameterClass="cargo.cms.customer.bo.CompanyProfileBO" resultClass="java.lang.Integer">
			<![CDATA[
				select count(1) from CUST_COMPANY where CO_IATA_CODE = #coIataCode# and CODE != #code#
			]]>
	</select>
	
	<select id="checkValidCompany"  parameterClass="java.lang.String" resultClass="java.lang.Integer">
			<![CDATA[
				select count(1) from CUST_COMPANY where CODE_DESC = #dest#
			]]>
	</select>
	
	
	
	
<!--  Added by Surendra Gollapalli on 10Mar2010 for Company Profile END -->

<!--  Enquire Print Agent Start -->
<select id="sqlagentsearch"  parameterClass="cargo.cms.customer.bo.CustomerDetailsBO" resultClass="cargo.cms.customer.bo.CustomerDetailsBO">
		SELECT   code_desc AS customerName, code AS customerNo, code AS companyCustomerNo,
		         haffa_member AS hafaMember, co_iata_code AS companyIataCode,
		         cons_yn AS consigneeType
		    FROM cust_company
		   WHERE agent_yn = 'Y'
				<dynamic>
					<isNotEmpty prepend="AND" property="agentNameFrom">
						<isEqual property="agentNameFrom" compareValue="%">
							 code_desc like #agentNameFrom# 
						</isEqual>
						<isNotEqual property="agentNameFrom" compareValue="%">
							<isNotEmpty property="agentNameTo">
							<!-- code_desc BETWEEN #agentNameFrom# AND NVL(#agentNameTo#, #agentNameFrom#)  || 'Z'-->
							(code_desc &gt;= #agentNameFrom# and code_desc &lt;=#agentNameTo#) 
							</isNotEmpty>
							<isEmpty property="agentNameTo">
								code_desc like #agentNameFrom# 
							</isEmpty>
						</isNotEqual>
					</isNotEmpty>
					<isNotEmpty prepend="AND" property="customerNo">
						code = #customerNo#
					</isNotEmpty>
					<isNotEmpty prepend="AND" property="companyIataCode">
						co_iata_code = #companyIataCode#
					</isNotEmpty>
					<isNotEmpty prepend="AND" property="hafaMember">
						haffa_member = #hafaMember#
					</isNotEmpty>
				</dynamic> 
				<dynamic>
					order by
		           <isNotEmpty property="sortOrder.sortField">
		             $sortOrder.sortField$
		           </isNotEmpty>
		           <isEmpty property="sortOrder.sortField">
		           			 CODE_DESC
		           </isEmpty>
		        </dynamic>
		         
   	</select>
   	
   	<select id="sqlagentsearchwithwildcard"  parameterClass="cargo.cms.customer.bo.CustomerDetailsBO" resultClass="cargo.cms.customer.bo.CustomerDetailsBO">
		SELECT   code_desc AS customerName, code AS customerNo, code AS companyCustomerNo,
		         haffa_member AS hafaMember, co_iata_code AS companyIataCode,
		         cons_yn AS consigneeType
		    FROM cust_company
		   WHERE agent_yn = 'Y' 
				<dynamic>
					<isNotEmpty prepend="AND" property="agentNameFrom">
						$agentNameFrom$
					</isNotEmpty>
					<isNotEmpty prepend="AND" property="customerNo">
						code = #customerNo#
					</isNotEmpty>
					<isNotEmpty prepend="AND" property="companyIataCode">
						co_iata_code = #companyIataCode#
					</isNotEmpty>
					<isNotEmpty prepend="AND" property="hafaMember">
						haffa_member = #hafaMember#
					</isNotEmpty>
				</dynamic> 
				<dynamic>
					order by
		           <isNotEmpty property="sortOrder.sortField">
		             $sortOrder.sortField$
		           </isNotEmpty>
		           <isEmpty property="sortOrder.sortField">
		           			 CODE_DESC
		           </isEmpty>
		        </dynamic>
		         
   	</select>
   	
   		<select id="sqlagentsearchwithwildcardCOUNT"  parameterClass="cargo.cms.customer.bo.CustomerDetailsBO" resultClass="java.lang.Integer">
		SELECT  COUNT (*) as totalRowCount
		    FROM cust_company
		   WHERE agent_yn = 'Y' 
				<dynamic>
					<isNotEmpty prepend="AND" property="agentNameFrom">
						$agentNameFrom$
					</isNotEmpty>
					<isNotEmpty prepend="AND" property="customerNo">
						code = #customerNo#
					</isNotEmpty>
					<isNotEmpty prepend="AND" property="companyIataCode">
						co_iata_code = #companyIataCode#
					</isNotEmpty>
					<isNotEmpty prepend="AND" property="hafaMember">
						haffa_member = #hafaMember#
					</isNotEmpty>
				</dynamic> 
					         
   	</select>	
   	<select id="sqlagentsearchCOUNT"  parameterClass="cargo.cms.customer.bo.CustomerDetailsBO" resultClass="java.lang.Integer">
		SELECT
			  COUNT (*) as totalRowCount
		    FROM cust_company
		   WHERE agent_yn = 'Y'
				<dynamic>
					<isNotEmpty prepend="AND" property="agentNameFrom">
						<isEqual property="agentNameFrom" compareValue="%">
							 code_desc like #agentNameFrom# 
						</isEqual>
						<isNotEqual property="agentNameFrom" compareValue="%">
							<isNotEmpty property="agentNameTo">
							<!-- code_desc BETWEEN #agentNameFrom# AND NVL(#agentNameTo#, #agentNameFrom#)  || 'Z'-->
							(code_desc &gt;= #agentNameFrom# and code_desc &lt;=#agentNameTo#) 
							</isNotEmpty>
							<isEmpty property="agentNameTo">
								code_desc like #agentNameFrom# 
							</isEmpty>
						</isNotEqual>
					</isNotEmpty>
					<isNotEmpty prepend="AND" property="customerNo">
						code = #customerNo#
					</isNotEmpty>
					<isNotEmpty prepend="AND" property="companyIataCode">
						co_iata_code = #companyIataCode#
					</isNotEmpty>
					<isNotEmpty prepend="AND" property="hafaMember">
						haffa_member = #hafaMember#
					</isNotEmpty>
				</dynamic> 
				 
	</select>
   	
   	
   	<select id="sqlAgentInfoForConsignee"  parameterClass="cargo.cms.customer.bo.CustomerDetailsBO" resultClass="cargo.cms.customer.bo.CustomerDetailsBO">
	<![CDATA[
		
			SELECT
				CC.CODE_DESC AS customerName,
				CA.CUST_NO AS customerNo,
				CA.AGENT_ID AS agentId, 
				TO_CHAR(CA.APP_DATE,'DDMONYY') AS appDate, 
		        TO_CHAR(CA.LM_DATE,'DDMONYY HH24:MI') AS modifiedDate,
		        CA.LM_USER_ID AS modifiedId,
				CA.RMK AS remarks,TO_CHAR(CA.EXP_DATE,'DDMONYY') AS expiryDate
			FROM CUST_COMPANY CC,CUST_APP_AGENT CA 
			WHERE CC.CODE = CA.AGENT_ID AND CA.CUST_NO = #customerNo#

		]]>
   	</select>
   	
   	<select id="cus_agentsearch"  parameterClass="cargo.cms.customer.bo.CustomerDetailsBO" resultClass="cargo.cms.customer.bo.CustomerDetailsBO">
		SELECT   code_desc AS customerName, code AS customerNo,
		         haffa_member AS hafaMember, co_iata_code AS companyIataCode,
		         cons_yn AS consigneeType
		    FROM cust_company
		   WHERE agent_yn = 'Y' AND code = #customerNo#
   	</select>
   	
   	<!-- fetch Agent name  for AutoComplete -->	
	 <select id="fetchPrintAgentNameForAjax" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	 	select code_desc as agentName from CUST_COMPANY where UPPER(code_desc) like UPPER(#keySearchStr# ||'%') and ROWNUM &lt;= #maxRecFetch# and active = 'Y' AND AGENT_YN = 'Y' AND BLACKLISTED='N' ORDER BY code_desc    
	</select>
   	
   	<select id="sqlcustomersearchbycustomerno"  parameterClass="cargo.cms.customer.bo.CustomerDetailsBO" resultClass="cargo.cms.customer.bo.CustomerDetailsBO">
	<![CDATA[
		SELECT	HAFFA_MEMBER AS hafaMember,
			BILL_FRQ AS billFrequency,
			replace(
			substr(decode(agent_yn, 'Y', 'AGENT') || decode(airline_yn, 'Y', '/AIRLINE')||decode(cons_yn, 'Y', '/CONSIGNEE')||decode(rho_yn, 'Y', '/RHO')||decode(SHPR_YN, 'Y', '/SHIPPER')||decode(SHA_YN, 'Y', '/SHA')||decode(TCS_YN, 'Y', '/TCS USER')||decode(TRUCKER_YN, 'Y', '/TRUCKER'), 1, 1), '/', '')||            
		    substr(decode(agent_yn, 'Y', 'AGENT') || decode(airline_yn, 'Y', '/AIRLINE')||decode(cons_yn, 'Y', '/CONSIGNEE')||decode(rho_yn, 'Y', '/RHO')||decode(SHPR_YN, 'Y', '/SHIPPER')||decode(SHA_YN, 'Y', '/SHA')||decode(TCS_YN, 'Y', '/TCS USER')||decode(TRUCKER_YN, 'Y', '/TRUCKER'), 2) AS  companyType,
			BUS_REG_NO AS busRegNo,
			substr(CO_IATA_CODE,1,2) AS iata1,
			substr(CO_IATA_CODE,3,1) AS iata2,
			substr(CO_IATA_CODE,4) AS iata3,
			CODE AS	customerNo,
			AIRLINE_YN  AS airlineType,
			AGENT_YN AS agentType,
			CONS_YN AS consigneeType,
			RHO_YN AS rhoType,
			LM_DATE AS modifiedDate,
			MOB1 AS mob1,
			CODE_DESC AS customerName,
			CO_SNAME AS customerShortName,
			CARR_CODE AS carrierCode,
		    (select code3 from mast_carrier where mast_carrier.code = cust_company.CARR_CODE ) as carrier3Code,
			SELF_HANDLING AS selfHandling,
			URL_ADDR AS urlAddress,
			CO_IATA_CODE AS companyIataCode,
			HAFFA_MEMBER AS haffaMember,
			PAY_CRITERIA AS payCriteria,
			PAY_MODE_CAS AS payModeCash,
			PAY_MODE_CHQ AS payModeCheque,
			PAY_MODE_CCD AS payModeCreditCard,
			PAY_MODE_EPS AS payModeEps,
			BLACKLISTED AS blackListed,
			ACTIVE AS active,
			TO_CHAR(NEXT_BDATE,'DDMONYY') AS nextBillDate,
			BLACK_AMT AS blackAmount,
			ADD1 AS add1,
			ADD2 AS add2,
			ADD3 AS add3,
			ADD4 AS add4,
			ADD5 AS add5,
			CITY AS city,
			PIN_CODE AS pinCode,
			CTRY_CODE AS countryCode,
		    (select code_desc from mast_country where mast_country.code = CUST_COMPANY.ctry_code) as countryDesc,
			TEL_IMP1 AS telImp1,
			TEL_IMP2 AS telImp2,
			TEL_EXP1 AS telExp1,
			TEL_EXP2 AS telExp2,
			TEL1 AS tel1,
			TEL2 AS tel2,
			FAX1 AS fax1,
			FAX2 AS fax2,
			FAX3 AS fax3,
			EMAIL1 AS email1,
			EMAIL2 AS email2,
			EMAIL3 AS email3,
			EMAIL4 AS email4,
			EMAIL5 AS email5,
			TELEX AS telex,
			BILL_ADD1 AS billAdd1,
			BILL_ADD2  AS billAdd2,
			BILL_ADD3  AS billAdd3,
			BILL_ADD4  AS billAdd4,
			BILL_ADD5  AS billAdd5,
			BILL_EMAIL1 AS billEmail1,
			BILL_EMAIL2 AS billEmail2,
			BILL_EMAIL3 AS billEmail3,
			BILL_EMAIL4 AS billEmail4,
			BILL_EMAIL5 AS billEmail5,
			BILL_FAX1 AS billFax1,
			BILL_FAX2 AS billFax2,
			BILL_FAX3 AS billFax3,
			BILL_CITY AS billCity,
			BILL_PIN_CODE AS billPinCode,
			BILL_CTRY_CODE AS billCountryCode,
		    (select code_desc from mast_country where mast_country.code = CUST_COMPANY.BILL_CTRY_CODE) as billCountryDesc,
			BILL_ATTN AS billAttention,
			ADM_ADD1 AS admAdd1,
			ADM_ADD2 AS admAdd2,
			ADM_ADD3 AS admAdd3,
			ADM_ADD4 AS admAdd4,
			ADM_ADD5 AS admAdd5,
			ADM_CITY AS admCity,
			ADM_PIN_CODE AS admPinCode,
			ADM_CTRY_CODE AS admCountryCode,
		    (select code_desc from mast_country where mast_country.code = CUST_COMPANY.ADM_CTRY_CODE) as admCountryDesc,
			ADM_TEL1 AS admTel1,
			ADM_TEL2 AS admTel2,
			ADM_MOB1 AS admHp,
			ADM_EMAIL1 AS admEmail1,
			ADM_EMAIL2 AS admEmail2,
			ADM_EMAIL3 AS admEmail3,
			ADM_EMAIL4 AS admEmail4,
			ADM_EMAIL5 AS admEmail5,
			ADM_FAX1 AS admFax1,
			ADM_FAX2 AS admFax2,
			ADM_FAX3 AS admFax3,
			ADM_TELEX AS admTelex,
			CR_USER_ID AS createdId,
			CR_DATE,
			LM_USER_ID AS modifiedId,
			LM_DATE,
			ADMIN_USER_ID,
			ADMIN_PASSWD,
			ADMIN_NAME,
			ADMIN_TITLE
			FROM CUST_COMPANY
			WHERE CODE = #customerNo#
		]]>
   	</select>
   	
   	<select id="sqlawbsearch"  parameterClass="cargo.cms.customer.bo.CustomerDetailsBO" resultClass="cargo.cms.customer.bo.CustomerDetailsBO">
	<![CDATA[
			SELECT 
				awb_pfx as awb 
			FROM CUST_AIRL_AWB_PFX 
			WHERE cust_no=#customerNo#
		]]>
   	</select>
   	<select id="sqlagentsearchbycustomerno"  parameterClass="cargo.cms.customer.bo.CustomerDetailsBO" resultClass="cargo.cms.customer.bo.CustomerDetailsBO">
	<![CDATA[
		
			SELECT
				CC.CODE_DESC AS customerName,
				CA.CUST_NO AS customerNo,
				CA.AGENT_ID AS agentId, 
				TO_CHAR(CA.APP_DATE,'DDMONYY') AS appDate, 
		        TO_CHAR(CA.LM_DATE,'DDMONYY HH24:MI') AS modifiedDate,
		        CA.LM_USER_ID AS modifiedId,
		        CA.carr_code AS carrierCode,
				CA.RMK AS remarks,
				CC.CODE_DESC AS oldCustomerName,
				CA.CUST_NO AS oldCustomerNo,
				CA.AGENT_ID AS oldAgentId, 
				TO_CHAR(CA.APP_DATE,'DDMONYY') AS oldAppDate, 
				CA.RMK AS oldRemarks,
				TO_CHAR(CA.EXP_DATE,'DDMONYY') AS expiryDate,
				CA.CARR_CODE AS carrierCode
			FROM CUST_COMPANY CC,CUST_APP_AGENT CA 
			WHERE CC.CODE = CA.AGENT_ID AND CA.CUST_NO = #customerNo# 
		]]>
		  <isNotEmpty property="loginCarrier">
		   AND ( CA.CARR_CODE = #loginCarrier#
                      OR  CA.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP 
                      WHERE GRP_CARR_CODE  = #loginCarrier#))             
            </isNotEmpty>
          order by customerName  
   	</select>
   	<!-- Enquire Print Agent End -->

	<select id="sqlconsigneesearch"  parameterClass="cargo.cms.customer.bo.CustomerDetailsBO" 
		resultClass="cargo.cms.customer.bo.CustomerDetailsBO">
			SELECT CODE_DESC AS customerName,CODE AS customerNo,CODE_DESC AS companyName ,
                  decode((select count(1) from CUST_APP_AGENT where cust_no=A.CODE),1,
                  (SELECT CODE_DESC FROM CUST_COMPANY where code in (select agent_id
                  from CUST_APP_AGENT where cust_no=A.CODE
                  <isNotEmpty property="loginCarrier">
                  AND (CARR_CODE = #loginCarrier# OR  CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE  = #loginCarrier#))
                  </isNotEmpty> 
                  )),decode((select count(1) from CUST_APP_AGENT where cust_no=A.CODE),0,'N',null)) agentName
                  FROM CUST_COMPANY A
                  WHERE CONS_YN='Y'
			  <dynamic>
					<isNotEmpty prepend="AND" property="consigneeNameFrom">
						<isEqual property="consigneeNameFrom" compareValue="%">
							 code_desc like #consigneeNameFrom# 
						</isEqual>
						<isNotEqual property="consigneeNameFrom" compareValue="%">
            			<isNotEmpty  property="consigneeNameTo">
            				(code_desc &gt;= #consigneeNameFrom# and code_desc &lt;=#consigneeNameTo#) 
						</isNotEmpty>
            			<isEmpty property="consigneeNameTo">
								code_desc like #consigneeNameFrom# 
						</isEmpty>
						</isNotEqual>
					</isNotEmpty>
					<isNotEmpty prepend="AND" property="customerName">
						code_desc like #customerName#
					</isNotEmpty>
					<isNotEmpty prepend="AND" property="customerNo">
						code = #customerNo#
					</isNotEmpty>
				</dynamic> 
				<dynamic prepend="ORDER BY ">
		           <isNotEmpty property="sortOrder.sortField">
		             $sortOrder.sortField$
		           </isNotEmpty>
		           <isEmpty property="sortOrder.sortField">
		           CODE_DESC
		           </isEmpty>
		        </dynamic>
   	</select>
<select id="validateAppointedDate"  parameterClass="java.util.HashMap"  resultClass="java.lang.Integer">
	select count(1) from dual where #SEARCH_DATE# BETWEEN #APP_DATE# AND #EXP_DATE#
</select>
	<select id="sqlconsigneesearchWildCard"  parameterClass="cargo.cms.customer.bo.CustomerDetailsBO" 
		resultClass="cargo.cms.customer.bo.CustomerDetailsBO">
			SELECT CODE_DESC AS customerName,CODE AS customerNo,CODE_DESC AS companyName ,
                  decode((select count(1) from CUST_APP_AGENT where cust_no=A.CODE),1,
                  (SELECT CODE_DESC FROM CUST_COMPANY where code in (select agent_id
                  from CUST_APP_AGENT where cust_no=A.CODE)),decode((select count(1) from CUST_APP_AGENT where cust_no=A.CODE),0,'N',null)) agentName
                  FROM CUST_COMPANY A
                  WHERE CONS_YN='Y'
			  <dynamic>
					<isNotEmpty prepend="AND" property="consigneeNameFrom">
						$consigneeNameFrom$
					</isNotEmpty>
					<isNotEmpty prepend="AND" property="customerName">
						code_desc like #customerName#
					</isNotEmpty>
					<isNotEmpty prepend="AND" property="customerNo">
						code = #customerNo#
					</isNotEmpty>
				</dynamic> 
				<dynamic prepend="ORDER BY ">
		           <isNotEmpty property="sortOrder.sortField">
		             $sortOrder.sortField$
		           </isNotEmpty>
		           <isEmpty property="sortOrder.sortField">
		           CODE_DESC
		           </isEmpty>
		        </dynamic>
   	</select>
	<select id="sqlconsigneesearchWildCardCOUNT"  parameterClass="cargo.cms.customer.bo.CustomerDetailsBO" 
		resultClass="java.lang.Integer">
			SELECT COUNT (1) as totalRowCount
                  FROM CUST_COMPANY A
                  WHERE CONS_YN='Y'
			  <dynamic>
					<isNotEmpty prepend="AND" property="consigneeNameFrom">
						$consigneeNameFrom$
					</isNotEmpty>
					<isNotEmpty prepend="AND" property="customerName">
						code_desc like #customerName#
					</isNotEmpty>
					<isNotEmpty prepend="AND" property="customerNo">
						code = #customerNo#
					</isNotEmpty>
				</dynamic> 
				
   	</select>
	<!-- fetch Consigne name  for AutoComplete -->	
	 <select id="fetchConsigneNameForAjax" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	 	select code_desc as agentName from CUST_COMPANY where UPPER(code_desc) like UPPER(#keySearchStr# ||'%') and ROWNUM &lt;= #maxRecFetch# AND CONS_YN = 'Y' AND ACTIVE = 'Y' AND BLACKLISTED='N' ORDER BY code_desc    
	</select>
    
    
    <select id="sqlconsigneesearchCOUNT"  parameterClass="cargo.cms.customer.bo.CustomerDetailsBO" resultClass="java.lang.Integer">
		SELECT
			  COUNT (*) as totalRowCount
		    FROM CUST_COMPANY 
			WHERE CONS_YN='Y'
				<dynamic>
					<isNotEmpty prepend="AND" property="consigneeNameFrom">
						<isEqual property="consigneeNameFrom" compareValue="%">
							 code_desc like #consigneeNameFrom# 
						</isEqual>
						<isNotEqual property="consigneeNameFrom" compareValue="%">
            			<isNotEmpty  property="consigneeNameTo">
            				(code_desc &gt;= #consigneeNameFrom# and code_desc &lt;=#consigneeNameTo#) 
						</isNotEmpty>
            			<isEmpty property="consigneeNameTo">
								code_desc like #consigneeNameFrom# 
						</isEmpty>
						</isNotEqual>
					</isNotEmpty>
					<isNotEmpty prepend="AND" property="customerName">
						code_desc like #customerName#
					</isNotEmpty>
					<isNotEmpty prepend="AND" property="customerNo">
						code = #customerNo#
					</isNotEmpty>
				</dynamic> 
			</select>
<!-- Maintain RA Start -->
		<select id="sqlrasearch"  parameterClass="cargo.cms.customer.bo.RADetailsBO" resultClass="cargo.cms.customer.bo.RADetailsBO">
				SELECT RA.CUST_NO AS customerNo, RA.TR_NO AS trNo, CC.CODE_DESC AS companyName,
				DECODE(CC.CO_IATA_CODE,null,'',SUBSTR(CC.CO_IATA_CODE,1,2)||'-'||SUBSTR(CC.CO_IATA_CODE,3,1)||'-'||SUBSTR(CC.CO_IATA_CODE,4,4)) AS companyIataCode, 
				RA.RA_NO AS raNumber, 
				TO_CHAR(RA.RA_EFF_DATE_FROM,'DDMONYY') AS raFromDate,TO_CHAR(RA.RA_EFF_DATE_TO,'DDMONYY') AS raToDate,RA.LM_USER_ID AS modifiedId,TO_CHAR(RA.LM_DATE,'DDMONYY HH24:MI')AS modifiedDate, TO_CHAR(RA.LM_DATE,'DDMONYYHH24:MI:SS')AS lastModifiedDate  
				FROM CUST_COMPANY CC, CUST_AGENT_RA RA WHERE CC.CODE = RA.CUST_NO 			
				<dynamic prepend="AND">
				<isNotEmpty prepend="AND" property="raNumber">
				RA.RA_NO = #raNumber#
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="companyName">
				Trim(UPPER(CC.CODE_DESC)) like Trim(UPPER(#companyName#))
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="customerNo">
				RA.CUST_NO  = #customerNo#
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="companyIataCode">
				CC.CO_IATA_CODE = #companyIataCode#
				</isNotEmpty>
				</dynamic>
	            ORDER BY CC.CODE_DESC
	   	</select> 

		<select id="sqlrasearchCOUNT"  parameterClass="cargo.cms.customer.bo.RADetailsBO" resultClass="java.lang.Integer">
			SELECT COUNT (*) as totalRowCount 
			FROM CUST_COMPANY CC, CUST_AGENT_RA RA WHERE CC.CODE = RA.CUST_NO 			
			<dynamic prepend="AND">
			<isNotEmpty prepend="AND" property="raNumber">
			RA.RA_NO = #raNumber#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="companyName">
			Trim(UPPER(CC.CODE_DESC)) like Trim(UPPER(#companyName#))
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="customerNo">
			RA.CUST_NO  = #customerNo#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="companyIataCode">
			CC.CO_IATA_CODE = #companyIataCode#
			</isNotEmpty>
			</dynamic>
            ORDER BY CC.CODE_DESC
		</select> 

		<select id="sqlracheckduplicate" parameterClass="cargo.cms.customer.bo.RADetailsBO" resultClass="java.lang.String">
			select to_Char(count(RA_NO)) from CUST_AGENT_RA where RA_NO=#raNumber#
		</select>

		<select id="customernumberbyname"  parameterClass="cargo.cms.customer.bo.RADetailsBO" resultClass="cargo.cms.customer.bo.RADetailsBO">
		   SELECT CODE as customerNo , CO_IATA_CODE as companyIataCode from CUST_COMPANY WHERE Trim(UPPER(CODE_DESC)) = TRIM(UPPER(#companyName#)) AND AGENT_YN = 'Y'
		</select>

		<select id="sqlrasearchbydate"  parameterClass="cargo.cms.customer.bo.RADetailsBO" resultClass="java.lang.Integer">
			<![CDATA[
			SELECT COUNT(*) FROM CUST_AGENT_RA WHERE CUST_NO=#customerNo# AND  
		    ((
			( TO_DATE(#raFromDate#,'DD/MM/YY')) BETWEEN (TO_DATE(RA_EFF_DATE_FROM,'DD/MM/YY')) AND (TO_DATE(RA_EFF_DATE_TO,'DD/MM/YY')) )
			OR(  ((TO_DATE(#raToDate#,'DD/MM/YY')) BETWEEN (TO_DATE(RA_EFF_DATE_FROM,'DD/MM/YY')) AND (TO_DATE(RA_EFF_DATE_TO,'DD/MM/YY')) )
			OR ( ((TO_DATE(#raFromDate#,'DD/MM/YY')) < (TO_DATE(RA_EFF_DATE_FROM,'DD/MM/YY')) AND ( TO_DATE(#raToDate#,'DD/MM/YY'))> TO_DATE(RA_EFF_DATE_TO,'DD/MM/YY')))
		    ))
			]]>
	   	</select>
	   	
	   	<insert id="sqlrasave" parameterClass="cargo.cms.customer.bo.RADetailsBO"  >
			<![CDATA[
				INSERT INTO CUST_AGENT_RA (TR_NO,CUST_NO,RA_NO,RA_EFF_DATE_FROM,RA_EFF_DATE_TO,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE) VALUES (CUST_AGRA_SEQ.nextVal,#customerNo#,UPPER(#raNumber#),TO_DATE(#raFromDate#,'DDMONYY'),TO_DATE(#raToDate#,'DDMONYY'),#createdId#,SYSDATE,#createdId#,SYSDATE)
			]]>
		</insert>
		
		<select id="sqlrasearchbytrno"  parameterClass="cargo.cms.customer.bo.RADetailsBO" resultClass="cargo.cms.customer.bo.RADetailsBO">
			<![CDATA[
					SELECT RA.RA_NO AS raNumber,CC.CODE_DESC AS companyName, 
					DECODE(CC.CO_IATA_CODE,null,'',SUBSTR(CC.CO_IATA_CODE,1,2)||'-'||SUBSTR(CC.CO_IATA_CODE,3,1)||'-'||SUBSTR(CC.CO_IATA_CODE,4,4)) AS companyIataCode, 
					RA.TR_NO AS trNo,RA.CUST_NO AS customerNo,TO_CHAR(RA_EFF_DATE_FROM,'DDMONYY') 
					AS raFromDate,TO_CHAR(RA_EFF_DATE_TO,'DDMONYY') AS raToDate,RA.LM_USER_ID AS modifiedId,TO_CHAR(RA.LM_DATE,'DDMONYY HH24:MI')AS modifiedDate, TO_CHAR(RA.LM_DATE,'DDMONYY HH24:MI:SS')AS lastModifiedDate  
					FROM CUST_AGENT_RA RA, CUST_COMPANY CC WHERE RA.CUST_NO = CC.CODE AND RA.TR_NO = #trNo# AND TO_CHAR(RA.LM_DATE,'DDMONYYHH24:MI:SS')=#lastModifiedDate#
				]]>
	   	</select>
	   	
	   	<select id="sqlrasearchbydateforupdate"  parameterClass="cargo.cms.customer.bo.RADetailsBO" resultClass="java.lang.Integer">
			<![CDATA[
			SELECT COUNT(*) FROM CUST_AGENT_RA WHERE CUST_NO=#customerNo# AND  TR_NO != #trNo# AND
		    ((
			( TO_DATE(#raFromDate#,'DD/MM/YY')) BETWEEN (TO_DATE(RA_EFF_DATE_FROM,'DD/MM/YY')) AND (TO_DATE(RA_EFF_DATE_TO,'DD/MM/YY')) )
			OR(  ((TO_DATE(#raToDate#,'DD/MM/YY')) BETWEEN (TO_DATE(RA_EFF_DATE_FROM,'DD/MM/YY')) AND (TO_DATE(RA_EFF_DATE_TO,'DD/MM/YY')) )
			OR ( ((TO_DATE(#raFromDate#,'DD/MM/YY')) < (TO_DATE(RA_EFF_DATE_FROM,'DD/MM/YY')) AND ( TO_DATE(#raToDate#,'DD/MM/YY'))> TO_DATE(RA_EFF_DATE_TO,'DD/MM/YY')))
		    ))
			]]>
	   	</select>

		<update id="sqlraupdatebytrno" parameterClass="cargo.cms.customer.bo.RADetailsBO" >
			<![CDATA[
				UPDATE CUST_AGENT_RA SET RA_NO = UPPER(#raNumber#),RA_EFF_DATE_FROM = TO_DATE(#raFromDate#,'DDMONYY'),RA_EFF_DATE_TO = TO_DATE(#raToDate#,'DDMONYY'),
				LM_USER_ID = #modifiedId#,LM_DATE = SYSDATE WHERE TR_NO = #trNo# AND TO_CHAR(LM_DATE,'DDMONYY HH24:MI:SS')=#lastModifiedDate#
				]]>
		</update>
		
		<delete id="sqlradelete" parameterClass="cargo.cms.customer.bo.RADetailsBO" >
			<![CDATA[
				DELETE FROM CUST_AGENT_RA WHERE TR_NO=#trNo# AND TO_CHAR(LM_DATE,'DDMONYYHH24:MI:SS')=#lastModifiedDate#
			]]>
		</delete>
		
		<select id="getGovtYN" parameterClass="java.lang.String" resultClass="java.lang.String">	
			SELECT GOVT_YN FROM SEC_USER where UPPER(CODE) = UPPER(#userId#)
		</select>
		
		<!-- fetch Consigne name  for AutoComplete -->	
		 <select id="fetchCustCompanyNameForAjax" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		 	select code_desc as companyName,CO_IATA_CODE as IATACODE from CUST_COMPANY where UPPER(code_desc) like UPPER(#keySearchStr# ||'%') and ROWNUM &lt;= #maxRecFetch# AND ACTIVE = 'Y' ORDER BY code_desc    
		</select>
		
		<select id="sqliatacount"  parameterClass="java.lang.String" resultClass="java.lang.Integer">
			<![CDATA[
					SELECT COUNT(*) as count FROM CUST_COMPANY WHERE Trim(UPPER(CO_IATA_CODE)) LIKE UPPER(#companyIataCode#)
				]]>
	   	</select>
	   	
	   	<select id="sqlcustnocount"  parameterClass="java.lang.String" resultClass="java.lang.Integer">
			<![CDATA[
					SELECT COUNT(*) as count FROM CUST_COMPANY WHERE Trim(UPPER(CODE)) LIKE UPPER(#customerNo#)
				]]>
	   	</select>
		
<!-- Maintain RA End -->

<!-- Maintain KC Start -->
	<select id="sqlkcsearch"  parameterClass="cargo.cms.customer.bo.KCDetailsBO" resultClass="cargo.cms.customer.bo.KCDetailsBO">
		SELECT KC.CUST_NO AS customerNo, KC.TR_NO AS trNo,KC.CARR_CODE AS carrierCode, CC.CODE_DESC AS companyName,CC.CO_IATA_CODE AS companyIataCode, KC.KC_NO AS kcNumber, 
				TO_CHAR(KC.EFF_DATE_FROM,'DDMONYY') AS kcFromDate,TO_CHAR(KC.EFF_DATE_TO,'DDMONYY') AS kcToDate,KC.LM_USER_ID AS modifiedId,TO_CHAR(KC.LM_DATE,'DDMONYY HH24:MI')AS modifiedDate, TO_CHAR(KC.LM_DATE,'DDMONYYHH24:MI:SS')AS lastModifiedDate  
				FROM CUST_COMPANY CC, CUST_AGENT_KC KC WHERE CC.CODE = KC.CUST_NO AND UPPER(KC.CARR_CODE) LIKE UPPER(#carrierCode#) AND UPPER(CC.CODE_DESC) LIKE UPPER(#companyName#) AND CC.CODE LIKE #customerNo# AND 
				NVL(CC.CO_IATA_CODE, '%') LIKE #companyIataCode# AND KC.KC_NO LIKE #kcNumber#
				AND TO_DATE(KC.EFF_DATE_TO,'DD/MM/YY')&lt;=NVL(TO_DATE(#expiredBeforeDate#,'DD/MM/YY'),KC.EFF_DATE_TO)
				<isEmpty property="carrierCode1">
                              <isNotEmpty property="loginCarrier">
                                    AND   (KC.CARR_CODE = #loginCarrier#
                                    OR KC.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP 
                                    WHERE GRP_CARR_CODE     = #loginCarrier#))                                          
                              </isNotEmpty>
                  </isEmpty>   	
			    <dynamic prepend="ORDER BY ">
		           <isNotEmpty property="sortOrder.sortField">
		             $sortOrder.sortField$
		           </isNotEmpty>
		        </dynamic>
	</select>
	<select id="sqlkcsearchbydate"  parameterClass="cargo.cms.customer.bo.KCDetailsBO" resultClass="java.lang.Integer">
		<![CDATA[
				SELECT COUNT(*) FROM CUST_AGENT_KC KC,CUST_COMPANY CC WHERE KC.CARR_CODE like #carrierCode#  AND KC.CUST_NO = CC.CODE AND UPPER(CC.CODE_DESC) = UPPER(#companyName#) 
				AND  ((TO_DATE(#kcFromDate#,'DD/MM/YY')) BETWEEN (TO_DATE(EFF_DATE_FROM,'DD/MM/YY')) AND (TO_DATE(EFF_DATE_TO,'DD/MM/YY'))
				OR  ((TO_DATE(#kcToDate#,'DD/MM/YY')) BETWEEN (TO_DATE(EFF_DATE_FROM,'DD/MM/YY')) AND (TO_DATE(EFF_DATE_TO,'DD/MM/YY'))))
		]]>
   	</select>
	<select id="sqlkccheckduplicate" parameterClass="cargo.cms.customer.bo.KCDetailsBO" resultClass="java.lang.String">
			select to_Char(count(KC_NO)) from CUST_AGENT_KC where KC_NO=#kcNumber#
	</select>
	
	<insert id="sqlkcsave" parameterClass="cargo.cms.customer.bo.KCDetailsBO"  >
		<![CDATA[
			INSERT INTO CUST_AGENT_KC (TR_NO,CUST_NO,CARR_CODE,KC_NO,EFF_DATE_FROM,EFF_DATE_TO,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE) VALUES (CUST_AGKC_SEQ.nextVal,#customerNo#,#carrierCode#,#kcNumber#,TO_DATE(#kcFromDate#,'DDMONYY'),TO_DATE(#kcToDate#,'DDMONYY'),#createdId#,SYSDATE,#modifiedId#,SYSDATE)
		]]>
	</insert>
	
	<select id="sqlkcsearchbytrno"  parameterClass="cargo.cms.customer.bo.KCDetailsBO" resultClass="cargo.cms.customer.bo.KCDetailsBO">
		<![CDATA[
				SELECT KC.KC_NO AS kcNumber,CC.CODE_DESC AS companyName, CC.CO_IATA_CODE AS companyIataCode, KC.TR_NO AS trNo,KC.CUST_NO AS customerNo,KC.CARR_CODE AS carrierCode,TO_CHAR(KC.EFF_DATE_FROM,'DDMONYY') 
				AS kcFromDate,TO_CHAR(KC.EFF_DATE_TO,'DDMONYY') AS kcToDate,KC.LM_USER_ID AS modifiedId,TO_CHAR(KC.LM_DATE,'DDMONYY HH24:MI')AS modifiedDate,TO_CHAR(KC.LM_DATE,'DDMONYY HH24:MI:SS')AS lastModifiedDate 
				FROM CUST_AGENT_KC KC, CUST_COMPANY CC WHERE KC.CUST_NO = CC.CODE AND KC.TR_NO LIKE #trNo# AND TO_CHAR(KC.LM_DATE,'DDMONYYHH24:MI:SS')=#lastModifiedDate#
			]]>
   	</select>
   	
   	<update id="sqlkcupdatebytrno" parameterClass="cargo.cms.customer.bo.KCDetailsBO" >
		<![CDATA[
			UPDATE CUST_AGENT_KC SET KC_NO = #kcNumber#,EFF_DATE_FROM = TO_DATE(#kcFromDate#,'DDMONYY'),EFF_DATE_TO = TO_DATE(#kcToDate#,'DDMONYY'),
			LM_USER_ID = #modifiedId#,LM_DATE = SYSDATE WHERE TR_NO = #trNo# and TO_CHAR(LM_DATE,'DDMONYY HH24:MI:SS') = #lastModifiedDate#
			]]>
	</update>
	
	<delete id="sqlkcdelete" parameterClass="cargo.cms.customer.bo.KCDetailsBO" >
		<![CDATA[
			DELETE FROM CUST_AGENT_KC WHERE TR_NO=#trNo# and TO_CHAR(LM_DATE,'DDMONYYHH24:MI:SS') = #lastModifiedDate#
		]]>
	</delete> 
	
	<select id="sqlcarriercount"  parameterClass="cargo.cms.customer.bo.CustomerDetailsBO" resultClass="java.lang.Integer">
		<![CDATA[
				SELECT COUNT(*) as count FROM MAST_CARRIER WHERE CODE = #carrierCode# 
			]]>
   	</select>
   	
   	<select id="sqlagentnamecount"  parameterClass="cargo.cms.customer.bo.CustomerDetailsBO" resultClass="java.lang.Integer">
		<![CDATA[
				SELECT COUNT(*) as count FROM CUST_COMPANY WHERE Trim(UPPER(CODE_DESC)) LIKE UPPER(#customerName#)
			]]>
   	</select>
   	
   	<select id="sqlkcsearchCOUNT"  parameterClass="cargo.cms.customer.bo.KCDetailsBO" resultClass="java.lang.Integer">
			SELECT COUNT (*) as totalRowCount FROM CUST_COMPANY CC, CUST_AGENT_KC KC WHERE CC.CODE = KC.CUST_NO AND UPPER(KC.CARR_CODE) LIKE UPPER(#carrierCode#) AND UPPER(CC.CODE_DESC) LIKE UPPER(#companyName#) AND CC.CODE LIKE #customerNo# AND 
				NVL(CC.CO_IATA_CODE, '%') LIKE #companyIataCode# AND KC.KC_NO LIKE #kcNumber#
				AND TO_DATE(KC.EFF_DATE_TO,'DD/MM/YY')&lt;=NVL(TO_DATE(#expiredBeforeDate#,'DD/MM/YY'),KC.EFF_DATE_TO)
				<isEmpty property="carrierCode1">
                              <isNotEmpty property="loginCarrier">
                                    AND   (KC.CARR_CODE = #loginCarrier#
                                    OR KC.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP 
                                    WHERE GRP_CARR_CODE     = #loginCarrier#))                                          
                              </isNotEmpty>
                  </isEmpty>
	</select>
   	
<!-- Maintain KC End -->
<!-- Maintain AC Start -->
	<select id="sqlacsearch"  parameterClass="cargo.cms.customer.bo.ACDetailsBO" resultClass="cargo.cms.customer.bo.ACDetailsBO">
		SELECT AC.CUST_NO AS customerNo, AC.TR_NO AS trNo,AC.CARR_CODE AS carrierCode, CC.CODE_DESC AS companyName,CC.CO_IATA_CODE AS companyIataCode, AC.AC_NO AS acNumber, 
				TO_CHAR(AC.EFF_DATE_FROM,'DDMONYY') AS acFromDate,TO_CHAR(AC.EFF_DATE_TO,'DDMONYY') AS acToDate,AC.LM_USER_ID AS modifiedId,TO_CHAR(AC.LM_DATE,'DDMONYY HH24:MI')AS modifiedDate, TO_CHAR(AC.LM_DATE,'DDMONYYHH24:MI:SS')AS lastModifiedDate  
				FROM CUST_COMPANY CC, CUST_AGENT_AC AC WHERE CC.CODE = AC.CUST_NO AND UPPER(AC.CARR_CODE) LIKE UPPER(#carrierCode#) AND UPPER(CC.CODE_DESC) LIKE UPPER(#companyName#) AND CC.CODE LIKE #customerNo# AND 
				NVL(CC.CO_IATA_CODE, '%') LIKE #companyIataCode# 
				AND TO_DATE(AC.EFF_DATE_TO,'DD/MM/YY')&lt;=NVL(TO_DATE(#expiredBeforeDate#,'DD/MM/YY'),AC.EFF_DATE_TO)
				<isEmpty property="carrierCode1">
                              <isNotEmpty property="loginCarrier">
                                    AND   (AC.CARR_CODE = #loginCarrier#
                                    OR AC.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP 
                                    WHERE GRP_CARR_CODE     = #loginCarrier#))                                          
                              </isNotEmpty>
                  </isEmpty>   	
			    <dynamic prepend="ORDER BY ">
		           <isNotEmpty property="sortOrder.sortField">
		             $sortOrder.sortField$
		           </isNotEmpty>
		        </dynamic>
	</select>
	<select id="sqlacsearchbydate"  parameterClass="cargo.cms.customer.bo.ACDetailsBO" resultClass="java.lang.Integer">
		<![CDATA[
				SELECT COUNT(*) FROM CUST_AGENT_AC AC,CUST_COMPANY CC WHERE AC.CARR_CODE like #carrierCode#  AND AC.CUST_NO = CC.CODE AND UPPER(CC.CODE_DESC) = UPPER(#companyName#) 
				AND  ((TO_DATE(#acFromDate#,'DD/MM/YY')) BETWEEN (TO_DATE(EFF_DATE_FROM,'DD/MM/YY')) AND (TO_DATE(EFF_DATE_TO,'DD/MM/YY'))
				OR  ((TO_DATE(#acToDate#,'DD/MM/YY')) BETWEEN (TO_DATE(EFF_DATE_FROM,'DD/MM/YY')) AND (TO_DATE(EFF_DATE_TO,'DD/MM/YY'))))
		]]>
   	</select>
	<select id="sqlaccheckduplicate" parameterClass="cargo.cms.customer.bo.ACDetailsBO" resultClass="java.lang.String">
			select to_Char(count(AC_NO)) from CUST_AGENT_AC where AC_NO=#acNumber#
	</select>
	
	<insert id="sqlacsave" parameterClass="cargo.cms.customer.bo.ACDetailsBO"  >
		<![CDATA[
			INSERT INTO CUST_AGENT_AC (TR_NO,CUST_NO,CARR_CODE,AC_NO,EFF_DATE_FROM,EFF_DATE_TO,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE) VALUES (CUST_AGAC_SEQ.nextVal,#customerNo#,#carrierCode#,#acNumber#,TO_DATE(#acFromDate#,'DDMONYY'),TO_DATE(#acToDate#,'DDMONYY'),#createdId#,SYSDATE,#modifiedId#,SYSDATE)
		]]>
	</insert>
	
	<select id="sqlacsearchbytrno"  parameterClass="cargo.cms.customer.bo.ACDetailsBO" resultClass="cargo.cms.customer.bo.ACDetailsBO">
		<![CDATA[
				SELECT AC.AC_NO AS acNumber,CC.CODE_DESC AS companyName, CC.CO_IATA_CODE AS companyIataCode, AC.TR_NO AS trNo,AC.CUST_NO AS customerNo,AC.CARR_CODE AS carrierCode,TO_CHAR(AC.EFF_DATE_FROM,'DDMONYY') 
				AS acFromDate,TO_CHAR(AC.EFF_DATE_TO,'DDMONYY') AS acToDate,AC.LM_USER_ID AS modifiedId,TO_CHAR(AC.LM_DATE,'DDMONYY HH24:MI')AS modifiedDate,TO_CHAR(AC.LM_DATE,'DDMONYY HH24:MI:SS')AS lastModifiedDate 
				FROM CUST_AGENT_AC AC, CUST_COMPANY CC WHERE AC.CUST_NO = CC.CODE AND AC.TR_NO LIKE #trNo# AND TO_CHAR(AC.LM_DATE,'DDMONYYHH24:MI:SS')=#lastModifiedDate#
			]]>
   	</select>
	
	<update id="sqlacupdatebytrno" parameterClass="cargo.cms.customer.bo.ACDetailsBO" >
		<![CDATA[
			UPDATE CUST_AGENT_AC SET AC_NO = #acNumber#,EFF_DATE_FROM = TO_DATE(#acFromDate#,'DDMONYY'),EFF_DATE_TO = TO_DATE(#acToDate#,'DDMONYY'),
			LM_USER_ID = #modifiedId#,LM_DATE = SYSDATE WHERE TR_NO = #trNo# and TO_CHAR(LM_DATE,'DDMONYY HH24:MI:SS') = #lastModifiedDate#
			]]>
	</update>
	
	<delete id="sqlacdelete" parameterClass="cargo.cms.customer.bo.ACDetailsBO" >
		<![CDATA[
			DELETE FROM CUST_AGENT_AC WHERE TR_NO=#trNo# and TO_CHAR(LM_DATE,'DDMONYYHH24:MI:SS') = #lastModifiedDate#
		]]>
	</delete>
	
	<select id="sqlacsearchCOUNT"  parameterClass="cargo.cms.customer.bo.ACDetailsBO" resultClass="java.lang.Integer">
			SELECT COUNT (*) as totalRowCount FROM CUST_COMPANY CC, CUST_AGENT_AC AC WHERE CC.CODE = AC.CUST_NO AND UPPER(AC.CARR_CODE) LIKE UPPER(#carrierCode#) AND UPPER(CC.CODE_DESC) LIKE UPPER(#companyName#) AND CC.CODE LIKE #customerNo# AND 
				NVL(CC.CO_IATA_CODE, '%') LIKE #companyIataCode# 
				AND TO_DATE(AC.EFF_DATE_TO,'DD/MM/YY')&lt;=NVL(TO_DATE(#expiredBeforeDate#,'DD/MM/YY'),AC.EFF_DATE_TO)
				<isEmpty property="carrierCode1">
                              <isNotEmpty property="loginCarrier">
                                    AND   (AC.CARR_CODE = #loginCarrier#
                                    OR AC.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP 
                                    WHERE GRP_CARR_CODE     = #loginCarrier#))                                          
                              </isNotEmpty>
                  </isEmpty>
	</select>
   	
<!-- Maintain AC End -->	
<!-- Undertaking Start -->
	<select id="sqlagentundertakingsearch"  parameterClass="cargo.cms.customer.bo.UndertakingBO" resultClass="cargo.cms.customer.bo.UndertakingBO">
			SELECT CC.CODE_DESC as agentName,TO_CHAR(CU.EFF_FROM,'DDMONYY')AS effectDateFrom,TO_CHAR(CU.EFF_TO,'DDMONYY')AS effectDateTo,
			CU.CARR_CODE AS carrierCode, CC.CODE as agentNo ,CU.TR_NO trNo 
			FROM CUST_COMPANY CC, CUST_UNDERTAKING CU 
			WHERE CC.CODE = CU.AGENT_CODE
			AND CC.CODE_DESC like NVL(#agentName#,CODE_DESC) 
			AND CU.CARR_CODE=NVL(#carrierCode#,CU.CARR_CODE)
			AND CU.EFF_FROM &lt;= NVL(TO_DATE(#effectDateTo#,'DDMONYY'),CU.EFF_TO)
			AND CU.EFF_TO &gt;= NVL(TO_DATE(#effectDateFrom#,'DDMONYY'),CU.EFF_FROM)
			<isEmpty property="carrierCode">	
				<isNotEmpty property="loginCarrier">
				  	AND   ( CU.CARR_CODE = #loginCarrier# OR CU.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE = #loginCarrier#))
				</isNotEmpty>
			</isEmpty>
		<dynamic prepend="ORDER BY ">
	        <isNotEmpty property="sortOrder.sortField">
	            $sortOrder.sortField$
	       </isNotEmpty>
	       <isEmpty property="sortOrder.sortField">
	            CC.CODE_DESC
	       </isEmpty>
	       </dynamic> 
   	</select>
	<select id="sqlagentcodesearch"  parameterClass="cargo.cms.customer.bo.UndertakingBO" resultClass="java.lang.String">
		<![CDATA[
				SELECT CODE FROM CUST_COMPANY WHERE upper(CODE_DESC) = upper(#agentName#)
			]]>
   	</select>
   	<delete id="sqlagentundertakingdelete" parameterClass="cargo.cms.customer.bo.UndertakingBO" >
		<![CDATA[
			DELETE FROM CUST_UNDERTAKING WHERE AGENT_CODE=(SELECT CODE FROM CUST_COMPANY WHERE CODE_DESC = #agentName#) AND tr_no = #trNo#
		]]>
	</delete>
	<insert id="sqlagentundertakingsave" parameterClass="cargo.cms.customer.bo.UndertakingBO"  >
		<![CDATA[
			INSERT INTO CUST_UNDERTAKING VALUES(CUST_UTAKING_SEQ.NEXTVAL,#carrierCode#,#agentNo#,to_date(#effectDateFrom#,'DDMONYY'),TO_DATE(#effectDateTo#,'DDMONYY'),
			SYSDATE,#createdId#,SYSDATE,#modifiedId#,SYSDATE)
		]]>
	</insert>
	<update id="sqlagentundertakingupdate" parameterClass="cargo.cms.customer.bo.UndertakingBO" >
		<![CDATA[
			UPDATE CUST_UNDERTAKING SET CARR_CODE=#carrierCode#, EFF_FROM=TO_DATE(#effectDateFrom#,'DDMONYY'), EFF_TO=TO_DATE(#effectDateTo#,'DDMONYY'), APPRD_DATE=SYSDATE, LM_USER_ID=#modifiedId#, LM_DATE=SYSDATE WHERE AGENT_CODE=(SELECT CODE FROM CUST_COMPANY WHERE CODE_DESC = #agentName#) AND tr_no = #trNo#
		]]>
	</update>
	<select id="sqlagententruduplicatesearch"  parameterClass="cargo.cms.customer.bo.UndertakingBO" resultClass="java.lang.String">
		<![CDATA[
				SELECT tr_no FROM CUST_UNDERTAKING WHERE CARR_CODE=#carrierCode# AND TO_DATE(EFF_FROM,'DD/MM/YY')=TO_DATE(#effectDateFrom#,'DD/MM/YY')
				AND TO_DATE(EFF_TO,'DD/MM/YY')=TO_DATE(#effectDateTo#,'DD/MM/YY') AND AGENT_CODE=#agentNo#	
			]]>
	</select>
   	<select id="sqlagentundertakingmaintainsearch"  parameterClass="cargo.cms.customer.bo.UndertakingBO" resultClass="cargo.cms.customer.bo.UndertakingBO">
		<![CDATA[
			SELECT CU.CARR_CODE AS carrierCode,TO_CHAR(CU.EFF_FROM,'DDMONYY')AS effectDateFrom,TO_CHAR(CU.EFF_TO,'DDMONYY')AS effectDateTo,CC.CODE_DESC as agentName,cu.tr_no trNo FROM CUST_COMPANY CC,CUST_UNDERTAKING CU WHERE CC.AGENT_YN = 'Y' AND CU.AGENT_CODE = CC.CODE 
			AND (upper(CC.CODE_DESC)= upper(#agentName#) OR CC.CODE = #agentNo#)
		]]>
		  <isNotEmpty property="trNo">
		  		AND cu.tr_no = #trNo#
		  </isNotEmpty>
   	</select>
   	
   	<select id="fetchAgentNameUTForAjax" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	 	select code_desc as agentName from CUST_COMPANY where UPPER(code_desc) like UPPER(#keySearchStr# ||'%') and ROWNUM &lt;= #maxRecFetch# AND ACTIVE = 'Y' AND AGENT_YN = 'Y' AND BLACKLISTED='N' ORDER BY code_desc    
	</select>
	
	<select id="sqlagentundertakingsearchCOUNT"  parameterClass="cargo.cms.customer.bo.UndertakingBO" resultClass="java.lang.Integer">
			SELECT count(*) as totalRowCount
			FROM CUST_COMPANY CC, CUST_UNDERTAKING CU 
			WHERE CC.CODE = CU.AGENT_CODE
			AND CC.CODE_DESC like NVL(#agentName#,CODE_DESC) 
			AND CU.CARR_CODE=NVL(#carrierCode#,CU.CARR_CODE)
			AND CU.EFF_FROM &lt;= NVL(TO_DATE(#effectDateTo#,'DDMONYY'),CU.EFF_TO)
			AND CU.EFF_TO &gt;= NVL(TO_DATE(#effectDateFrom#,'DDMONYY'),CU.EFF_FROM)
			<isEmpty property="carrierCode">	
				<isNotEmpty property="loginCarrier">
				  	AND   ( CU.CARR_CODE = #loginCarrier# OR CU.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE = #loginCarrier#))
				</isNotEmpty>
			</isEmpty>
			Order by CC.CODE_DESC 		
   	</select>
   	<select id="sqlvalidagentsearch"  parameterClass="cargo.cms.customer.bo.CustomerDetailsBO" resultClass="java.lang.Integer">
		<![CDATA[
				SELECT COUNT(*) as count FROM CUST_COMPANY WHERE (Trim(UPPER(CODE_DESC)) LIKE UPPER(#customerName#)) AND ACTIVE = 'Y' AND AGENT_YN = 'Y'
			]]>
   	</select>
   		<select id="sqlgetUTCarrList"  parameterClass="cargo.cms.customer.bo.UndertakingBO"  resultClass="cargo.cms.customer.bo.UndertakingBO">
			SELECT CODE AS carrierCode FROM MAST_CARRIER where owned_carr='Y' ORDER BY Code 
	</select>
<!-- Undertaking End -->
<!--  Added by Surendra Gollapalli	on 31March2010 for Maintain Airline Contact START -->

<!-- ============================  Added For airline ======================================= -->
	<select id="sqlairlinecontactlist"	parameterClass="cargo.cms.customer.bo.AirlineContactSearchBO"
		resultClass="cargo.cms.customer.bo.AirlineContactSearchBO" >
				select CUST_CONTACT.Cust_NO as customerNo, CUST_COMPANY.CODE_DESC as customerName,CARR_CODE as carrierCode,CARR_CODE as carrierDesc,
				Contact_type as type,MAST_CODE_DTL.code_Desc	as contactTypeDesc
				FROM  CUST_CONTACT,CUST_COMPANY	,MAST_CODE_DTL
				WHERE CUST_CONTACT.cust_no 		= cust_company.code
				AND CUST_CONTACT.contact_Type	= MAST_CODE_DTL.CODE
				AND MAST_CODE_DTL.CODE_TYPE		= 'AIRLINE_CONTACT'
				AND AIRLINE_YN='Y' 
				<dynamic>
					<isNotEmpty prepend="AND" property="customerName">
						CUST_COMPANY.Code_Desc LIKE #customerName#
					</isNotEmpty>
					<isNotEmpty prepend="AND" property="customerNo">
						cust_company.code = #customerNo#
					</isNotEmpty>
					<isNotEmpty prepend="AND" property="carrierDesc">
						cust_company.CARR_CODE = #carrierDesc#
					</isNotEmpty>
					<isNotEmpty prepend="AND" property="type">
						Contact_type = #type#
					</isNotEmpty>
				</dynamic>
		</select>
		<select id="sqlairlinecontactFcolist"	parameterClass="cargo.cms.customer.bo.AirlineContactSearchBO"
		resultClass="cargo.cms.customer.bo.AirlineContactSearchBO" >
				select
					distinct(port) as portName, CUST_CONTACT.Cust_NO as customerNo, CUST_COMPANY.CODE_DESC as customerName,CARR_CODE as carrierCode,CARR_CODE as carrierDesc,
				Contact_type as type,MAST_CODE_DTL.code_Desc	as contactTypeDesc
				FROM  MAST_CODE_DTL, CUST_COMPANY, CUST_CONTACT
				 left JOIN cust_airl_sita_addr cas on 
  				 CUST_CONTACT.cust_no    = cas.cust_no  and CUST_CONTACT.contact_Type = cas.type
  				 <isEqual prepend="AND" compareValue="create" property="optionCriteria">
					<isEmpty property="portName">
						port IS NULL
					</isEmpty>
					<isNotEmpty property="portName">
						port = #portName#
					</isNotEmpty>
				</isEqual>
				<isNotEqual prepend="AND" compareValue="create" property="optionCriteria">
					<isNotEmpty property="portName">
						port = #portName#
					</isNotEmpty>	
				</isNotEqual>
				WHERE CUST_CONTACT.cust_no 		= cust_company.code
				AND CUST_CONTACT.contact_Type	= MAST_CODE_DTL.CODE
				AND MAST_CODE_DTL.CODE_TYPE		= 'AIRLINE_CONTACT'
				AND AIRLINE_YN='Y' 
				<dynamic>
					<isNotEmpty prepend="AND" property="customerName">
						CUST_COMPANY.Code_Desc LIKE #customerName#
					</isNotEmpty>
					<isNotEmpty prepend="AND" property="customerNo">
						cust_company.code = #customerNo#
					</isNotEmpty>
					<isNotEmpty prepend="AND" property="carrierDesc">
						cust_company.CARR_CODE = #carrierDesc#
					</isNotEmpty>
					<isNotEmpty prepend="AND" property="type">
						Contact_type = #type#
					</isNotEmpty>
					<isEqual prepend="AND" compareValue="create" property="optionCriteria">
						<isEmpty property="portName">
							 ROWNUM =1
						</isEmpty>
					</isEqual>
					
			   </dynamic>
		</select>
		<select id="validateAiportcode" parameterClass="java.lang.String" resultClass="java.lang.Integer">
			select count(1) from mast_arpt where code = #port#
		</select>
		
		<!-- onsite modified by Lokesh for Airline Agent create screen Starts, [Modified the Maintain screens also.]-->
		
		<select id="sqlairlinecontactdetails"   parameterClass="cargo.cms.customer.bo.AirlineContactBO" resultClass="cargo.cms.customer.bo.AirlineContactBO" >
				select CUST_CONTACT.Cust_NO as customerNo, CUST_COMPANY.CODE_DESC as customerName,CARR_CODE as carrierCode,CARR_CODE as carrierDesc,
						Contact_type as type,MAST_CODE_DTL.code_Desc	as contactTypeDesc,
						Cust_Contact.Email1 as email1,Cust_Contact.Email2 as email2,Cust_Contact.Email3 as email3,Cust_Contact.Email4 as email4,Cust_Contact.Email5 as email5,
						Cust_Contact.fax1 as fax1,Cust_Contact.fax2 as fax2,Cust_Contact.fax3 as fax3,Cust_Contact.fax4 as fax4,Cust_Contact.fax5 as fax5,Cust_Contact.CR_USER_ID AS crUserId,Cust_Contact.CR_DATE AS crDate,Cust_Contact.LM_USER_ID AS lastModUserId,TO_CHAR(Cust_Contact.LM_DATE , 'DDMMYY HH24:MI:SS')AS lastModDate 
						FROM  CUST_CONTACT,CUST_COMPANY	,MAST_CODE_DTL				
						WHERE  CUST_CONTACT.cust_no = cust_company.code	
						AND    CUST_CONTACT.cust_no =#customerNo#
						AND    CUST_CONTACT.Contact_type =#type#
						AND CUST_CONTACT.contact_Type=MAST_CODE_DTL.CODE	
						AND MAST_CODE_DTL.CODE_TYPE='AIRLINE_CONTACT'
						AND AIRLINE_YN='Y' 
			</select>
			<select id="sqlairlinecontactFcodetails"   parameterClass="cargo.cms.customer.bo.AirlineContactBO" resultClass="cargo.cms.customer.bo.AirlineContactBO" >
				select CUST_CONTACT.Cust_NO as customerNo, CUST_COMPANY.CODE_DESC as customerName,CARR_CODE as carrierCode,CARR_CODE as carrierDesc,
						Contact_type as type,MAST_CODE_DTL.code_Desc	as contactTypeDesc, #portName# as portName,
						Cust_Contact.CR_USER_ID AS crUserId,Cust_Contact.CR_DATE AS crDate,Cust_Contact.LM_USER_ID AS lastModUserId,TO_CHAR(Cust_Contact.LM_DATE , 'DDMMYY HH24:MI:SS')AS lastModDate 
						FROM  CUST_CONTACT,CUST_COMPANY	,MAST_CODE_DTL				
						WHERE  CUST_CONTACT.cust_no = cust_company.code	
						AND    CUST_CONTACT.cust_no =#customerNo#
						AND    CUST_CONTACT.Contact_type =#type#
						AND CUST_CONTACT.contact_Type=MAST_CODE_DTL.CODE	
						AND MAST_CODE_DTL.CODE_TYPE='AIRLINE_CONTACT'
						AND AIRLINE_YN='Y' 
			</select>
			<select id="airLine_contact_FCO_email_list"   parameterClass="cargo.cms.customer.bo.AirlineContactBO" resultClass="cargo.cms.customer.bo.AirlineContactBO" >
				select 
				  sita_addr as email1 
				 from cust_airl_sita_addr where CUST_NO=#customerNo# AND type='FCO' AND addr_type='EMAIL' 
				<isEqual prepend="AND" property="portName" compareValue="null">
				  PORT IS NULL
				</isEqual>
				 <isNotEqual prepend="AND" property="portName" compareValue="null">
				  PORT = #portName#
				 </isNotEqual>
			</select>
			<select id="airLine_contact_FCO_fax_list"   parameterClass="cargo.cms.customer.bo.AirlineContactBO" resultClass="cargo.cms.customer.bo.AirlineContactBO" >
				select 
				  sita_addr as fax1 
				 from cust_airl_sita_addr where CUST_NO=#customerNo# AND type='FCO' AND addr_type='FAX' 
				<isEqual prepend="AND" property="portName" compareValue="null">
				  PORT IS NULL
				</isEqual>
				 <isNotEqual prepend="AND" property="portName" compareValue="null">
				  PORT = #portName#
				 </isNotEqual>
			</select>
		<!-- onsite modified by Lokesh for Airline Agent create screen Ends -->	

		<delete id="sqlairlinecontactdelete" parameterClass="cargo.cms.customer.bo.AirlineContactSearchBO">
			
				DELETE CUST_CONTACT WHERE CUST_NO = #customerNo# and CONTACT_TYPE=#type#
		</delete>
		
		<delete id="delete_airline_contact_Fco_emails" parameterClass="cargo.cms.customer.bo.AirlineContactBO">
				DELETE CUST_AIRL_SITA_ADDR WHERE CUST_NO=#customerNo# AND ADDR_TYPE in ('EMAIL','FAX') 
				<isEqual property="portName" compareValue="null">
				and port IS NULL
				</isEqual>
				<isNotEqual property="portName" compareValue="null">
				and port = #portName#
				</isNotEqual>
		</delete>
		
		<insert id="insert_airline_contact_emails" parameterClass="cargo.cms.customer.bo.AirlineContactBO">
			INSERT INTO CUST_AIRL_SITA_ADDR (CUST_NO, SITA_ADDR, CR_USER_ID,CR_DATE, LM_USER_ID, LM_DATE,TYPE,ADDR_TYPE
				<isNotEqual compareValue="null" property="portName">
				,PORT
				</isNotEqual>
				) 
				VALUES ( #customerNo# ,#email1# ,#lastModUserId#,sysdate,#lastModUserId#,sysdate,#type#,#addrType#
				<isNotEqual compareValue="null" property="portName">
				,#portName#
				</isNotEqual>
				)
		</insert>
		<insert id="insert_airline_contact_Fax" parameterClass="cargo.cms.customer.bo.AirlineContactBO">
			INSERT INTO CUST_AIRL_SITA_ADDR (CUST_NO, SITA_ADDR, CR_USER_ID,CR_DATE, LM_USER_ID, LM_DATE,TYPE,ADDR_TYPE
				<isNotEqual compareValue="null" property="portName">
				,PORT
				</isNotEqual>
				) 
				VALUES ( #customerNo# ,#fax1# ,#lastModUserId#,sysdate,#lastModUserId#,sysdate,#type#,#addrType#
				<isNotEqual compareValue="null" property="portName">
				,#portName#
				</isNotEqual>
				)
		</insert>
		<update id ="sqlairlinecontactupdate" parameterClass="cargo.cms.customer.bo.AirlineContactBO">
		
				UPDATE CUST_CONTACT SET
				Email1= #email1#,Email2 = #email2# ,Email3 = #email3# ,Email4 = #email4# ,Email5 = #email5# ,
						fax1 = #fax1# ,fax2 = #fax2# ,fax3 = #fax3# ,fax4 = #fax4# ,fax5 = #fax5# 
						,LM_USER_ID = #lastModUserId# ,LM_DATE = SYSDATE
						WHERE CUST_NO = #customerNo# and LM_DATE = to_date( #lastModDate#,'DDMMYY HH24:MI:SS')
		</update>

		<update id="sqlairlineemail1update" parameterClass="cargo.cms.customer.bo.AirlineContactBO" >
		
				UPDATE CUST_CONTACT SET 
				email1=#address# ,
						LM_USER_ID = #lastModUserId# ,LM_DATE = sysdate
						WHERE CUST_NO = #customerNo# 
		</update>
		<update id="sqlairlineemail2update" parameterClass="cargo.cms.customer.bo.AirlineContactBO" >
		
				UPDATE CUST_CONTACT SET 
				email2=#address# ,
						LM_USER_ID = #lastModUserId# ,LM_DATE = sysdate
						WHERE CUST_NO = #customerNo# 
		</update>
		<update id="sqlairlineemail3update" parameterClass="cargo.cms.customer.bo.AirlineContactBO" >
		
				UPDATE CUST_CONTACT SET 
				email3=#address# ,
						LM_USER_ID = #lastModUserId# ,LM_DATE = sysdate
						WHERE CUST_NO = #customerNo# 
		</update>
		<update id="sqlairlineemail4update" parameterClass="cargo.cms.customer.bo.AirlineContactBO" >
		
				UPDATE CUST_CONTACT SET 
				email4=#address# ,
						LM_USER_ID = #lastModUserId# ,LM_DATE = sysdate
						WHERE CUST_NO = #customerNo# 
		</update>
		<update id="sqlairlineemail5update" parameterClass="cargo.cms.customer.bo.AirlineContactBO" >
		
				UPDATE CUST_CONTACT SET 
				email5=#address# ,
						LM_USER_ID = #lastModUserId# ,LM_DATE = sysdate
						WHERE CUST_NO = #customerNo# 
		</update>
		<update id="sqlairlineemail1reset" parameterClass="cargo.cms.customer.bo.AirlineContactBO" >
			
				UPDATE CUST_CONTACT SET 
				email1=''  ,LM_USER_ID = #lastModUserId# ,LM_DATE = sysdate
						WHERE CUST_NO = #customerNo# 
		</update>
		<update id="sqlairlineemail2reset" parameterClass="cargo.cms.customer.bo.AirlineContactBO" >
			
				UPDATE CUST_CONTACT SET 
				email2='' ,	LM_USER_ID = #lastModUserId# ,LM_DATE = sysdate
						WHERE CUST_NO = #customerNo# 
		</update>
		<update id="sqlairlineemail3reset" parameterClass="cargo.cms.customer.bo.AirlineContactBO" >
			
				UPDATE CUST_CONTACT SET 
				email3='' ,LM_USER_ID = #lastModUserId# ,LM_DATE = sysdate
						WHERE CUST_NO = #customerNo# 
		</update>
		<update id="sqlairlineemail4reset" parameterClass="cargo.cms.customer.bo.AirlineContactBO" >
			
				UPDATE CUST_CONTACT SET 
				email4='' ,LM_USER_ID = #lastModUserId# ,LM_DATE = sysdate
						WHERE CUST_NO = #customerNo# 
		</update>
		<update id="sqlairlineemail5reset" parameterClass="cargo.cms.customer.bo.AirlineContactBO" >
			
				UPDATE CUST_CONTACT SET 
				email5='' ,LM_USER_ID = #lastModUserId# ,LM_DATE = sysdate
						WHERE CUST_NO = #customerNo# 
		</update>
		
	<update id="sqlairlinefax1reset" parameterClass="cargo.cms.customer.bo.AirlineContactBO" >
			
				UPDATE CUST_CONTACT SET 
				fax1='' ,LM_USER_ID = #lastModUserId# ,LM_DATE = sysdate
						WHERE CUST_NO = #customerNo# 
	</update>	
	<update id="sqlairlinefax2reset" parameterClass="cargo.cms.customer.bo.AirlineContactBO" >
			
				UPDATE CUST_CONTACT SET 
				fax2='' ,LM_USER_ID = #lastModUserId# ,LM_DATE = sysdate
						WHERE CUST_NO = #customerNo# 
	</update>	
	<update id="sqlairlinefax3reset" parameterClass="cargo.cms.customer.bo.AirlineContactBO" >
			
				UPDATE CUST_CONTACT SET 
				fax3='' ,LM_USER_ID = #lastModUserId# ,LM_DATE = sysdate
						WHERE CUST_NO = #customerNo# 
	</update>	
	<update id="sqlairlinefax4reset" parameterClass="cargo.cms.customer.bo.AirlineContactBO" >
			
				UPDATE CUST_CONTACT SET 
				fax4='' ,LM_USER_ID = #lastModUserId# ,LM_DATE = sysdate
						WHERE CUST_NO = #customerNo# 
	</update>	
	<update id="sqlairlinefax5reset" parameterClass="cargo.cms.customer.bo.AirlineContactBO" >
			
				UPDATE CUST_CONTACT SET 
				fax5='' ,LM_USER_ID = #lastModUserId# ,LM_DATE = sysdate
						WHERE CUST_NO = #customerNo# 
	</update>	
	
	<update id="sqlairlinefax1update" parameterClass="cargo.cms.customer.bo.AirlineContactBO" >		
			UPDATE CUST_CONTACT SET 
			fax1=#address# ,LM_USER_ID = #lastModUserId# ,LM_DATE = sysdate 
					WHERE CUST_NO = #customerNo# 
	</update>
			
	<update id="sqlairlinefax2update" parameterClass="cargo.cms.customer.bo.AirlineContactBO" >		
			UPDATE CUST_CONTACT SET 
			fax2=#address# ,LM_USER_ID = #lastModUserId# ,LM_DATE = sysdate 
					WHERE CUST_NO = #customerNo# 
	</update>
	<update id="sqlairlinefax3update" parameterClass="cargo.cms.customer.bo.AirlineContactBO" >		
			UPDATE CUST_CONTACT SET 
			fax3=#address# ,LM_USER_ID = #lastModUserId# ,LM_DATE = sysdate 
					WHERE CUST_NO = #customerNo# 
	</update>

	<update id="sqlairlinefax4update" parameterClass="cargo.cms.customer.bo.AirlineContactBO" >		
			UPDATE CUST_CONTACT SET 
			fax4=#address# ,LM_USER_ID = #lastModUserId# ,LM_DATE = sysdate 
					WHERE CUST_NO = #customerNo# 
	</update>
	<update id="sqlairlinefax5update" parameterClass="cargo.cms.customer.bo.AirlineContactBO" >
			UPDATE CUST_CONTACT SET 
			fax5=#address# ,LM_USER_ID = #lastModUserId# ,LM_DATE = sysdate 
					WHERE CUST_NO = #customerNo# 
	</update>
	<update id="sqlairlinesitaupdate" parameterClass="cargo.cms.customer.bo.AirlineContactBO" >		
			UPDATE CUST_AIRL_SITA_ADDR  SET 
			 SITA_ADDR=#address# ,LM_USER_ID = #lastModUserId# ,LM_DATE = sysdate 
					WHERE CUST_NO = #customerNo#  And SITA_ADDR=#editNo# AND TYPE = #type#
	</update>
	
	<select id="sqlairlinesitalist"   parameterClass="cargo.cms.customer.bo.AirlineContactBO" resultClass="cargo.cms.customer.bo.AirlineSitaBO" >
		SELECT CUST_NO  as customerNo,SITA_ADDR as sitaAddress,SITA_ADDR as sitaAddress1  FROM CUST_AIRL_SITA_ADDR where Cust_no= #customerNo# and TYPE = #type#
		<isEqual property="type" compareValue="FCO">
		AND addr_type = 'SITA'
		<isEqual property="portName" prepend="AND" compareValue="null"> port IS NULL</isEqual>
			<isNotEqual property="portName" prepend="AND" compareValue="null"> port = #portName#</isNotEqual>
		
		</isEqual>
	</select>
	<delete id="sqlairlinesitadelete" parameterClass="cargo.cms.customer.bo.AirlineSitaBO" >		
		DELETE  CUST_AIRL_SITA_ADDR  WHERE CUST_NO = #customerNo#  And SITA_ADDR=#sitaAddress# AND TYPE = #type#
	</delete>
	<insert id="sqlairlinesitaAdd" parameterClass="cargo.cms.customer.bo.AirlineSitaBO" >	
		INSERT INTO CUST_AIRL_SITA_ADDR (CUST_NO, SITA_ADDR, CR_USER_ID,CR_DATE, LM_USER_ID, LM_DATE,TYPE) 
			VALUES ( #customerNo# ,#sitaAddress# ,#crUserId#,sysdate,#crUserId#,sysdate,#type#)
	</insert>
	<insert id="sqlairlinesitaFCOAdd" parameterClass="cargo.cms.customer.bo.AirlineSitaBO" >	
		INSERT INTO CUST_AIRL_SITA_ADDR (CUST_NO, SITA_ADDR, CR_USER_ID,CR_DATE, LM_USER_ID, LM_DATE,TYPE,addr_type
		<isNotEqual property="portName" compareValue="null">
		,port
		</isNotEqual>
		) 
			VALUES ( #customerNo# ,#sitaAddress# ,#crUserId#,sysdate,#crUserId#,sysdate,#type#,'SITA' 
			<isNotEqual property="portName" compareValue="null">,#portName#</isNotEqual>)
	</insert>
	
	<select id="sqlduplicateSita" parameterClass="cargo.cms.customer.bo.AirlineSitaBO" resultClass="java.lang.String">
		SELECT to_char(count(SITA_ADDR))  FROM CUST_AIRL_SITA_ADDR where Cust_no= #customerNo# 
			AND SITA_ADDR=#sitaAddress# and type = #type#
	</select>
	<delete id="delete_Fco_sita" parameterClass="cargo.cms.customer.bo.AirlineSitaBO">
				DELETE CUST_AIRL_SITA_ADDR WHERE CUST_NO=#customerNo# AND ADDR_TYPE in ('SITA') 
				<isEqual property="portName" compareValue="null">
				and port IS NULL
				</isEqual>
				<isNotEqual property="portName" compareValue="null">
				and port = #portName#
				</isNotEqual>
		</delete>
	
	<update id ="sqlairlineSitaAddRUpdate" parameterClass="cargo.cms.customer.bo.AirlineSitaBO">		
		UPDATE CUST_AIRL_SITA_ADDR SET SITA_ADDR = #sitaAddress# ,CR_USER_ID = #crUserId# ,
				LM_USER_ID = #crUserId# ,LM_DATE = SYSDATE
				WHERE CUST_NO = #customerNo# and SITA_ADDR=#sitaAddress1# and type = #type#
	</update>
	
	<!--  Added by Surendra Gollapalli on 10Mar2010 for Company Profile START -->
	<select id="fetchCustCompanyWithIATACodeAirline" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select CODE_DESC AS codeDesc from CUST_COMPANY where AIRLINE_YN = 'Y' AND ACTIVE = 'Y' and CODE_DESC like (#keySearchStr# ||'%') and ROWNUM &lt;= #maxRecFetch#
	</select>
	
	<!--  Added by Surendra Gollapalli	on 31March2010 for Maintain Airline Contact START -->

<!-- Enquire/Print Credit by Airline Start -->
	<select id="sqlcreditairlinebyexpgen"  parameterClass="cargo.cms.customer.bo.CreditInformationBO" resultClass="cargo.cms.customer.bo.CreditInformationBO">
		<![CDATA[
				SELECT CAC.CUST_NO AS customerNo, 
					   CC.CO_IATA_CODE AS companyIataCode, 
					   CC.CODE_DESC AS customerName, 
					   CAC.CARR_CODE AS carrierCode, 
					   TO_CHAR(CAC.CR_AMT,'999999999999999990D99') AS creditLimit ,
					   TO_CHAR(NVL(CAC.CR_BAL,0)-NVL(BOOKING.AIRL_CHRG,0),'999999999999999990D99') AS creditAvailability,
					    TO_CHAR(NVL(BOOKING.AIRL_CHRG,0),'999999999999999990D99') AS bookingAmt
				FROM CUST_AGENT_AIRL_CREDIT CAC
				JOIN CUST_COMPANY CC ON CAC.CUST_NO=CC.CODE		
				LEFT JOIN (SELECT A.AGENT_CODE AGENT_CODE,
						  decode(A.CATALOG,'IG','Import_GEN','IO','Import_OBC','EG','Export_GEN','EO','Export_OBC') CATALOG,
       	      			  A.CARR_CODE CARR_CODE,
       	      			  SUM(BKNG.AIRL_CHRG) AIRL_CHRG
						  FROM IMP_BOOKING HD 
						  JOIN IMP_BOOKING_DTL BKNG ON HD.BOOKING_NO = BKNG.BOOKING_NO
		                  join AWB A on BKNG.AWB_NO = A.AWB_NO AND BKNG.AWB_DATE = A.AWB_DATE 
		                  joiN FLT_OPR FLT ON BKNG.FLT_KEY = FLT.FLT_KEY AND BKNG.FLT_DATE = FLT.SCH_DATE AND FLT.FLT_TYPE = 'A'
		            	  WHERE to_date(to_char(HD.BKG_SLOT_DATE, 'DDMONYY') || to_char(HD.BKG_SLOT_FROM, '0000'),'DDMONYY HH24MI') > to_date(to_char(sysdate,'DDMONYY HH24MI'),'DDMONYY HH24MI')
						  group by A.AGENT_CODE, A.CATALOG, A.CARR_CODE)BOOKING
				ON CAC.CUST_NO = NVL(BOOKING.AGENT_CODE,'*') AND CAC.CR_TYPE =  BOOKING.CATALOG AND CAC.CARR_CODE = BOOKING.CARR_CODE
				WHERE UPPER(CAC.CR_TYPE) IN UPPER(#creditType#)
				AND  CAC.CARR_CODE=#carrierCode# and nvl(CAC.status,'*') <> 'VOID'
				]]>
				<isNotEmpty prepend="AND" property="loginCarrier">
				<![CDATA[ 
                    (CAC.CARR_CODE = #loginCarrier#
                     OR CAC.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE= #loginCarrier#))
                ]]>
                </isNotEmpty>
				<![CDATA[ 
				AND CR_EFF_DATE_FROM <= trunc(Sysdate) 
				AND CR_EFF_DATE_TO >= trunc(Sysdate) 
				ORDER BY CC.CODE_DESC
		]]>
	</select>
	
	<!-- Enquire/Print Credit by Airline End -->
	<!-- Credit Fecility Mantain Starts     -->
 
    <!-- To make Customer Name dropdown. It should be done in framework  -->
	<select id="fetchCustomerNameList"  parameterClass="java.lang.Object" resultClass="cargo.cms.customer.bo.MaintainCreditFecilityBO">
		SELECT CODE_DESC AS companyName FROM CUST_COMPANY		
	</select>
	
    <!-- To make Customer Number dropdown. It should be done in framework   -->
	<select id="fetchCustomerNoList"  parameterClass="java.lang.Object" resultClass="cargo.cms.customer.bo.MaintainCreditFecilityBO">
		SELECT CODE AS customerNo FROM CUST_COMPANY		
	</select>
	
	<!-- To FetchCredit Fecility List For Maintain   -->
	<!--PAY_CRITERIA = 'Y'  removed issue-782-->
	<select id="fetchCreditFecilityList"  parameterClass="cargo.cms.customer.bo.MaintainCreditFecilityBO" resultClass="cargo.cms.customer.bo.MaintainCreditFecilityBO">
		SELECT
			CODE AS customerNo,
			CODE_DESC AS companyName,
			CO_IATA_CODE AS iataCode,
			FIN_CODE AS finCustCode,
			ADD1 AS address1,
			ADD2 AS address2,
			ADD3 AS address3,
			ADD4 AS address4,
			ADD5 AS address5,
			CITY AS city,
			PIN_CODE AS pinCode,
			TO_CHAR(LM_DATE,'DDMONYY HH24:MI:SS') as lmDate,
			VIRTUAL_CR_ACC as virtualCrAccount 		
		FROM 
			CUST_COMPANY WHERE 1=1
			<isNotEmpty prepend="AND" property="customerNo">
				UPPER(CODE)=UPPER(#customerNo#)
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="companyName">
				UPPER(CODE_DESC) like UPPER(#companyName#)
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="iataCode">
				UPPER(CO_IATA_CODE)=UPPER(#iataCode#)
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="finCustCode">
				UPPER(FIN_CODE)=UPPER(#finCustCode#)
			</isNotEmpty>
	</select>
	
	<!-- To create Credit Fecilty in CUST_AGENT_CREDIT  -->
	<!-- remove for credit facilty CR , CARR_GROUP , #airlineGroup#-->
	<insert id="insertCreditFecilityToCPCT" parameterClass="cargo.cms.customer.bo.MaintainCreditFecilityBO">
		INSERT INTO CUST_AGENT_CREDIT (
			  TR_NO,
			  CUST_NO,
			  CR_AMT,
			  CR_BAL,
			  CR_EFF_DATE_FROM,
			  CR_EFF_DATE_TO,
			  CR_USER_ID,
			  CR_DATE,            
			  LM_USER_ID,         
			  LM_DATE,
			  CR_TYPE,
			  CARR_CODE,
			  SEQ_NO,
			  SECURE_YN,
			  REMARKS )            
		VALUES ( 
			  CUST_AGENT_CREDIT_SEQ.nextval,
			  #customerNo#,
			  #creditLimit#,
			  #creditBalance#,
			  TO_DATE(#creditEffDateFrom#,'DDMONYY'),
			  TO_DATE(#creditEffDateTo#,'DDMONYY'),
		      #crUserId#,
		      sysdate,
		      #lmUserId#,
		      sysdate,
		      #type#,
		      #airline#,
		      CUST_AGENT_AIRL_CREDIT_INV_SEQ.NEXTVAL,
		      nvl(#secureYn#,'N'),
		      #remarks# )
	</insert>
	
	<!-- To create Credit Fecilty in CUST_AGENT_CREDIT  -->
	<!-- remove for credir facility CR CARR_GROUP, #airlineGroup#,-->
	<insert id="insertCreditFecilityToAirLine" parameterClass="cargo.cms.customer.bo.MaintainCreditFecilityBO">
		INSERT INTO CUST_AGENT_AIRL_CREDIT (			  
			  TR_NO,
			  CUST_NO,
			  CR_TYPE,
			  CARR_CODE,
			  CR_AMT,
			  CR_BAL,
			  CR_EFF_DATE_FROM,
			  CR_EFF_DATE_TO,
			  CR_USER_ID,
			  CR_DATE,
			  LM_USER_ID,
			  LM_DATE,
			  SEQ_NO,
			  SECURE_YN,
			  REMARKS )            
		VALUES ( 
			  CUST_AGENT_AIRL_CR_SEQ.nextval,
			  #customerNo#,
			  #type#,
			  UPPER(#airline#),
			  #creditLimit#,
			  #creditBalance#,
			  TO_DATE(#creditEffDateFrom#,'DDMONYY'),
			  TO_DATE(#creditEffDateTo#,'DDMONYY'),
		      #crUserId#,
		      sysdate,
		      #lmUserId#,
		      sysdate,
		      CUST_AGENT_AIRL_CREDIT_INV_SEQ.NEXTVAL,
		      nvl(#secureYn#,'N' ),
		      #remarks#  )
	</insert>
	<!-- To create Credit Fecilty in CUST_AGENT_VIRTUAL_CREDIT  -->
	<!-- remove for credit facility CR CARR_GROUP, #airlineGroup#,-->
	<insert id="insertCreditFecilityToVirtualAcc" parameterClass="cargo.cms.customer.bo.MaintainCreditFecilityBO">
		INSERT INTO CUST_AGENT_VIRTUAL_CREDIT (			  
			  TR_NO,
			  CUST_NO,
			  CARR_CODE,
			  CR_TYPE,
			  CR_EFF_DATE_FROM,
			  CR_EFF_DATE_TO,
			  VIRTUAL_ACC,
			  CR_USER_ID,
			  CR_DATE,
			  LM_USER_ID,
			  LM_DATE,
			  SEQ_NO )     
		VALUES ( 
			  CUST_VIRTUAL_LEVEL_CRD_SEQ.nextval,
			  #customerNo#,
			  UPPER(#airline#),
			  #type#,
			  TO_DATE(#creditEffDateFrom#,'DDMONYY'),
			  TO_DATE(#creditEffDateTo#,'DDMONYY'),
		      #virtualCrAccount#,
		      #crUserId#,
		      sysdate,
		      #lmUserId#,
		      sysdate,
		      CUST_AGENT_AIRL_CREDIT_INV_SEQ.NEXTVAL)
	</insert>
	
	<!-- To create Credit Fecilty in CUST_NON_AWB_CREDIT  -->
	<!--<insert id="insertCreditFecilityToNonAwbChrg" parameterClass="cargo.cms.customer.bo.MaintainCreditFecilityBO">
		INSERT INTO CUST_NON_AWB_CREDIT (			  
			  TR_NO,
			  CUST_NO,
			  CR_AMT,
			  CR_BAL,
			  CR_EFF_DATE_FROM,
			  CR_EFF_DATE_TO,
			  CR_USER_ID,
			  CR_DATE,
			  LM_USER_ID,
			  LM_DATE,
			  SEQ_NO )            
		VALUES ( 
			  CUST_NON_AWB_CREDIT_SEQ.nextval,
			  #customerNo#,			 
			  #nonAwbCreditLimit#,
			  #nonAwbCreditBalance#,
			  TO_DATE(#nonAwbCreditEffDateFrom#,'DDMONYY'),
			  TO_DATE(#nonAwbCreditEffDateTo#,'DDMONYY'),
		      #crUserId#,
		      sysdate,
		      #lmUserId#,
		      sysdate,
		      CUST_NON_AWB_CREDIT_INV_SEQ.NEXTVAL )
	</insert>
	
	--><!-- To fetch Credit Fecility details from CPCT   -->
	<!--  remove for Credit Facility CR ,  CARR_GROUP airlineGroup -->
	<select id="fetchCreditFecilityCPCT" parameterClass="java.lang.String" resultClass="cargo.cms.customer.bo.MaintainCreditFecilityBO">
		<![CDATA[
		SELECT DISTINCT
			  TR_NO AS trNo,
			  CUST_NO AS customerNo,
			  CR_AMT AS creditLimit,
			  CR_BAL AS creditBalance,
			  CR_BAL AS oldCreditBalance,
			  CR_TYPE AS type,
			  TO_CHAR(CR_EFF_DATE_FROM, 'DDMONYY') AS creditEffDateFrom,
			  TO_CHAR(CR_EFF_DATE_FROM, 'DDMONYY') AS oldCreditEffDateFrom,
			  TO_CHAR(CR_EFF_DATE_TO, 'DDMONYY') AS creditEffDateTo,
			  LM_USER_ID AS lmUserId,
			  TO_CHAR(LM_DATE,'DDMONYY HH24:MI:SS') as lmDate,
			  CARR_CODE airline,
			  SECURE_YN secureYn,
			  seq_no seqNo,
			  REMARKS remarks
		FROM  CUST_AGENT_CREDIT 
		WHERE
				 UPPER(CUST_NO)=UPPER(#PARAM#)
		AND  to_date(to_char(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY')	 > = to_date(to_char(SYSDATE,'DDMONYY'),'DDMONYY')		 
		AND nvl(upper(Status),'**') <> 'VOID' 
    ]]>
	</select>
	
	<!-- To fetch Credit Fecility details from Airline List  -->
	<!--  remove for Credit Facility CR  CARR_GROUP airlineGroup, -->
	<select id="fetchCreditFecilityAIRList" parameterClass="cargo.cms.customer.bo.MaintainCreditFecilityBO" resultClass="cargo.cms.customer.bo.MaintainCreditFecilityBO">
	<![CDATA[
		SELECT DISTINCT
			  TR_NO AS trNo,
			  CUST_NO AS customerNo,
			  CR_TYPE AS type,
			  CARR_CODE AS airline,
			  CR_AMT AS creditLimit,
			  CR_BAL AS creditBalance,
			  CR_BAL AS oldCreditBalance,
			  TO_CHAR(CR_EFF_DATE_FROM, 'DDMONYY') AS creditEffDateFrom,
			  TO_CHAR(CR_EFF_DATE_FROM, 'DDMONYY') AS oldCreditEffDateFrom,
			  TO_CHAR(CR_EFF_DATE_TO, 'DDMONYY') AS creditEffDateTo,
			  LM_USER_ID AS lmUserId,
			  TO_CHAR(LM_DATE,'DDMONYY HH24:MI:SS') as lmDate,
			  SECURE_YN secureYn,
			  seq_no seqNo,
			  REMARKS remarks
		FROM  CUST_AGENT_AIRL_CREDIT 
		WHERE
				 UPPER(CUST_NO)=UPPER(#customerNo#)
			AND  UPPER(CR_TYPE)=UPPER(#type#)
			AND  to_date(to_char(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY')	 > = to_date(to_char(SYSDATE,'DDMONYY'),'DDMONYY')
			and nvl(status,'*') <> 'VOID'
  			  	]]>
	</select>
	
	<!-- To fetch Credit Fecility details from Airline  -->
	<!--  remove for Credit Facility CR  CARR_GROUP AS airlineGroup, -->
	<select id="fetchCreditFecilityAIR" parameterClass="cargo.cms.customer.bo.MaintainCreditFecilityBO" resultClass="cargo.cms.customer.bo.MaintainCreditFecilityBO">
	<![CDATA[
		SELECT DISTINCT
			  TR_NO AS trNo,
			  CUST_NO AS customerNo,
			  CR_TYPE AS type,
			  CARR_CODE AS airline,
			  CR_AMT AS creditLimit,
			  CR_BAL AS creditBalance,
			  CR_BAL AS oldCreditBalance,
			  TO_CHAR(CR_EFF_DATE_FROM, 'DDMONYY') AS creditEffDateFrom,
			  TO_CHAR(CR_EFF_DATE_FROM, 'DDMONYY') AS oldCreditEffDateFrom,
			  TO_CHAR(CR_EFF_DATE_TO, 'DDMONYY') AS creditEffDateTo,
			  LM_USER_ID AS lmUserId,
			  TO_CHAR(LM_DATE,'DDMONYY HH24:MI:SS') as lmDate  ,
			  SECURE_YN secureYn,
			  seq_no seqNo,
			  REMARKS remarks
		FROM  CUST_AGENT_AIRL_CREDIT 
		WHERE
				 UPPER(TR_NO)=UPPER(#trNo#)
			AND  UPPER(CR_TYPE)=UPPER(#type#)
			AND  to_date(to_char(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY') <=to_date(to_char(SYSDATE,'DDMONYY'),'DDMONYY')
  			AND  to_date(to_char(SYSDATE,'DDMONYY'),'DDMONYY') <= to_date(to_char(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY')
  			and nvl(status,'*') <> 'VOID'
  			  	]]>
						
	</select>
	
	
	<!-- To fetch Credit Fecility details from CPCT   -->
	<!--  remove for Credit Facility CR  ,  CARR_GROUP airlineGroup -->
	<select id="fetchAgentLevelCreditBalancedForView" parameterClass="java.lang.String" resultClass="cargo.cms.customer.bo.MaintainCreditFecilityBO">
		<![CDATA[
		SELECT DISTINCT
			  TR_NO AS trNo,
			  CUST_NO AS customerNo,
			  CR_AMT AS agtCrdLimit,
			  CR_BAL AS agtCrdbalnce,
			  CR_BAL AS agtOldCrdbalnce,
			  TO_CHAR(CR_EFF_DATE_FROM, 'DDMONYY') AS agtCrdEffFrom,
			  TO_CHAR(CR_EFF_DATE_FROM, 'DDMONYY') AS oldAgtCrdEffFrom,
			  TO_CHAR(CR_EFF_DATE_TO, 'DDMONYY') AS agtCrdEffTo,
			  LM_USER_ID AS lmUserId,
			  TO_CHAR(LM_DATE,'DDMONYY HH24:MI:SS') as lmDate,
			  CARR_CODE airline,
			  SECURE_YN secureYn,
			  seq_no seqNo,
			  REMARKS remarks
		FROM  CUST_AGENT_LEVEL_CRD 
		WHERE
				 UPPER(CUST_NO)=UPPER(#PARAM#)
  		AND  to_date(to_char(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY')	 > = to_date(to_char(SYSDATE,'DDMONYY'),'DDMONYY')		 
  		AND nvl(upper(Status),'**') <> 'VOID'	 
			 
    ]]>
	</select>
	
	<!-- To fetch Credit Fecility details from CPCT   -->
	<!--<select id="fetchAgentNonAwbLevelCreditBalancedForView" parameterClass="java.lang.String" resultClass="cargo.cms.customer.bo.MaintainCreditFecilityBO">
		<![CDATA[
		SELECT DISTINCT
			  TR_NO AS trNo,
			  CUST_NO AS customerNo,
			  CR_AMT AS nonAwbCreditLimit,
			  CR_BAL AS nonAwbCreditBalance,
			  TO_CHAR(CR_EFF_DATE_FROM, 'DDMONYY') AS nonAwbCreditEffDateFrom,
			  TO_CHAR(CR_EFF_DATE_TO, 'DDMONYY') AS nonAwbCreditEffDateTo,
			  LM_USER_ID AS lmUserId,
			  TO_CHAR(LM_DATE,'DDMONYY HH24:MI:SS') as lmDate
		FROM  CUST_NON_AWB_CREDIT 
		WHERE
				 UPPER(CUST_NO)=UPPER(#PARAM#)
  		AND  to_date(to_char(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY')	 > = to_date(to_char(SYSDATE,'DDMONYY'),'DDMONYY')		 
			 
    ]]>
	</select>
	
	--><!-- To fetch Credit Fecility details from Virtual   -->
	<!--  remove for Credit Facility CR   CARR_GROUP airlineGroup, -->
	<select id="fetchVirtualLevelCreditBalancedForView" parameterClass="java.lang.String" resultClass="cargo.cms.customer.bo.MaintainCreditFecilityBO">
		<![CDATA[
		SELECT DISTINCT
			  TR_NO AS trNo,
			  CUST_NO AS customerNo,
			  CARR_CODE airline,
			  CR_TYPE type,
			  TO_CHAR(CR_EFF_DATE_FROM, 'DDMONYY') AS creditEffDateFrom,
			  TO_CHAR(CR_EFF_DATE_FROM, 'DDMONYY') AS oldCreditEffDateFrom,
			  TO_CHAR(CR_EFF_DATE_TO, 'DDMONYY') AS creditEffDateTo,
			  VIRTUAL_ACC virtualCrAccount,
			  VIRTUAL_ACC oldVirtualCrAccount,
			  LM_USER_ID AS lmUserId,
			  TO_CHAR(LM_DATE,'DDMONYY HH24:MI:SS') as lmDate,
			  seq_no seqNo
		FROM  CUST_AGENT_VIRTUAL_CREDIT 
		WHERE
		UPPER(CUST_NO)=UPPER(#PARAM#)
  		AND  to_date(to_char(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY')	 > = to_date(to_char(SYSDATE,'DDMONYY'),'DDMONYY')		 
  		AND nvl(upper(Status),'**') <> 'VOID'		 
    ]]>
	</select>
	
	<!-- To Update Credit Fecilty in CUST_AGENT_CREDIT  -->
	<!--  remove for Credit Facility CR   nvl(CARR_GROUP,'*') <> nvl(UPPER(#airlineGroup#),'*') OR  -->
	<select id="checkCreditFecilityCPCTUpdated" parameterClass="cargo.cms.customer.bo.MaintainCreditFecilityBO" resultClass="java.lang.Integer">
	<![CDATA[	
		SELECT COUNT(1) FROM CUST_AGENT_CREDIT WHERE UPPER(TR_NO) = UPPER(#trNo#) AND
		(CR_TYPE <> #type# OR  CUST_NO <> #customerNo# OR nvl(CARR_CODE,'*') <> nvl(UPPER(#airline#),'*') OR 
		 CR_AMT <> #creditLimit# OR CR_BAL <> #creditBalance# OR CR_EFF_DATE_FROM <> TO_DATE(#creditEffDateFrom#,'DDMONYY')
			  OR CR_EFF_DATE_TO <> TO_DATE(#creditEffDateTo#,'DDMONYY') OR nvl(SECURE_YN,'N') <> nvl(#secureYn#,'N') OR nvl(REMARKS,'*') <> nvl(#remarks#,'*')) and nvl(status,'*') <> 'VOID'
			  ]]>
	</select>
	
	<select id="checkCpctRecordUpdatedIsCurrEff" parameterClass="cargo.cms.customer.bo.MaintainCreditFecilityBO" resultClass="java.lang.Integer">
	<![CDATA[
		SELECT count(1) FROM CUST_AGENT_CREDIT WHERE UPPER(TR_NO) = UPPER(#trNo#) AND  to_date(to_char(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY') <=to_date(to_char(SYSDATE,'DDMONYY'),'DDMONYY')
  			AND  to_date(to_char(SYSDATE,'DDMONYY'),'DDMONYY') <= to_date(to_char(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') and nvl(status,'*') <> 'VOID'
  			]]>
	</select>
	
	<select id="getCpctOldBalance" parameterClass="cargo.cms.customer.bo.MaintainCreditFecilityBO" resultClass="java.lang.String">
		SELECT NVL(CR_BAL,0)  FROM CUST_AGENT_CREDIT WHERE UPPER(TR_NO) = UPPER(#trNo#) and nvl(status,'*') &lt;&gt; 'VOID'
	</select>
	
	<select id="get_CUST_AGENT_LEVEL_CRD_SEQ_NO" parameterClass="cargo.cms.customer.bo.MaintainCreditFecilityBO" resultClass="java.lang.String">
		SELECT seq_no  FROM CUST_AGENT_LEVEL_CRD WHERE UPPER(TR_NO) = UPPER(#trNo#) and nvl(status,'*') &lt;&gt; 'VOID'
	</select>
	
	<insert id="sqlCreateMaintainCrdTrasnRec" parameterClass="cargo.cms.customer.bo.MaintainCreditFecilityBO">
	INSERT INTO BILL_INV_CRD_DTL(INV_NO,CR_TYPE,CR_LVL,CR_AMT,CUST_NO,CR_AIRLINE,CR_DATE,BALANCE, trans_desc,MAST_SEQ_NO,MAST_TABLE_NAME) VALUES (null,
	DECODE(#crLvl#,'AGENT_LVL',null,(DECODE(UPPER(#crType#),'GENERAL','GEN','IMPORT_GEN','IG','IMPORT_OBC','IO','EXPORT_GEN','EG','EXPORT_OBC','EO',UPPER(#crType#))))
	,#crLvl#,#crAmt#,#customerNo#,DECODE(#crLvl#,'AGENT_LVL',null,#airline#),sysdate,#balance#,#transDesc#,#seqNo#,#tableName#)
	</insert>
	
	<select id="checkAirlRecordUpdatedIsCurrEff" parameterClass="cargo.cms.customer.bo.MaintainCreditFecilityBO" resultClass="java.lang.Integer">
		<![CDATA[
		SELECT count(1) FROM CUST_AGENT_AIRL_CREDIT WHERE UPPER(TR_NO) = UPPER(#trNo#) AND  to_date(to_char(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY') <=to_date(to_char(SYSDATE,'DDMONYY'),'DDMONYY')
  			AND  to_date(to_char(SYSDATE,'DDMONYY'),'DDMONYY') <= to_date(to_char(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') and nvl(status,'*') <> 'VOID'
  			]]>
	</select>
	
	<select id="getAirlOldBalance" parameterClass="cargo.cms.customer.bo.MaintainCreditFecilityBO" resultClass="java.lang.String">
		SELECT NVL(CR_BAL,0)  FROM CUST_AGENT_AIRL_CREDIT WHERE UPPER(TR_NO) = UPPER(#trNo#) and nvl(status,'*') &lt;&gt; 'VOID'
	</select>
	
	<!--  remove for Credit Facility CR   OR nvl(CARR_GROUP,'*') <> nvl(UPPER(#airlineGroup#),'*')  -->
	<select id="checkCreditFecilityAgtLvlUpdated" parameterClass="cargo.cms.customer.bo.MaintainCreditFecilityBO" resultClass="java.lang.Integer">
	<![CDATA[	
		SELECT COUNT(1) FROM CUST_AGENT_LEVEL_CRD WHERE UPPER(TR_NO) = UPPER(#trNo#) AND
		(CUST_NO <> #customerNo# OR  CR_AMT <> #agtCrdLimit# OR  nvl(UPPER(CARR_CODE),'*') = nvl(UPPER(#airline#),'*')
				OR CR_BAL <> #agtCrdbalnce# OR CR_EFF_DATE_FROM <> TO_DATE(#agtCrdEffFrom#,'DDMONYY')
			  	OR CR_EFF_DATE_TO <> TO_DATE(#agtCrdEffTo#,'DDMONYY') OR nvl(SECURE_YN,'N') <> nvl(#secureYn#,'N') OR nvl(REMARKS,'*') <> nvl(#remarks#,'*')) and nvl(status,'*') <> 'VOID'
			  ]]>
	</select>
	
	<select id="checkAgLvlRecordUpdatedIsCurrEff" parameterClass="cargo.cms.customer.bo.MaintainCreditFecilityBO" resultClass="java.lang.Integer">
		<![CDATA[
		SELECT count(1) FROM CUST_AGENT_LEVEL_CRD WHERE UPPER(TR_NO) = UPPER(#trNo#) AND  to_date(to_char(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY') <=to_date(to_char(SYSDATE,'DDMONYY'),'DDMONYY')
  			AND  to_date(to_char(SYSDATE,'DDMONYY'),'DDMONYY') <= to_date(to_char(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') and nvl(status,'*') <> 'VOID'
  			]]>
	</select>
	
	<select id="getAgtLvlOldBalance" parameterClass="cargo.cms.customer.bo.MaintainCreditFecilityBO" resultClass="java.lang.String">
		SELECT NVL(CR_BAL,0)  FROM CUST_AGENT_LEVEL_CRD WHERE UPPER(TR_NO) = UPPER(#trNo#) and nvl(status,'*') &lt;&gt; 'VOID'
	</select>
	
	<!--  remove for Credit Facility CR   OR nvl(CARR_GROUP,'*') <> nvl(UPPER(#airlineGroup#),'*')  -->
	<select id="checkCreditFecilityVarLvlUpdated" parameterClass="cargo.cms.customer.bo.MaintainCreditFecilityBO" resultClass="java.lang.Integer">
	<![CDATA[	
		SELECT COUNT(1) FROM CUST_AGENT_VIRTUAL_CREDIT WHERE UPPER(TR_NO) = UPPER(#trNo#) AND
		(CUST_NO <> #customerNo# OR  nvl(UPPER(CARR_CODE),'*') = nvl(UPPER(#airline#),'*') OR CR_EFF_DATE_FROM <> TO_DATE(#agtCrdEffFrom#,'DDMONYY')
			  OR CR_EFF_DATE_TO <> TO_DATE(#agtCrdEffTo#,'DDMONYY') OR VIRTUAL_ACC <> #virtualCrAccount# OR CR_TYPE <> #type#)
			  and nvl(status,'*') <> 'VOID'
			  ]]>
	</select>
	<select id="checkVarLvlRecordUpdatedIsCurrEff" parameterClass="cargo.cms.customer.bo.MaintainCreditFecilityBO" resultClass="java.lang.Integer">
		<![CDATA[
		SELECT count(1) FROM CUST_AGENT_LEVEL_CRD WHERE UPPER(TR_NO) = UPPER(#trNo#) AND  to_date(to_char(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY') <=to_date(to_char(SYSDATE,'DDMONYY'),'DDMONYY')
  			AND  to_date(to_char(SYSDATE,'DDMONYY'),'DDMONYY') <= to_date(to_char(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') and nvl(status,'*') <> 'VOID'
  			]]>
	</select>
	
	<!--  remove for Credit Facility CR   CARR_GROUP = UPPER(#airlineGroup#),    -->
	<update id="updateCreditFecilityCPCT" parameterClass="cargo.cms.customer.bo.MaintainCreditFecilityBO" >	
		UPDATE CUST_AGENT_CREDIT
		SET   CR_TYPE = #type#,
			  CUST_NO = #customerNo#,        
			  CR_AMT = #creditLimit#,        
			  CARR_CODE = UPPER(#airline#),   
			  CR_BAL = #creditBalance#,        
			  CR_EFF_DATE_FROM = TO_DATE(#creditEffDateFrom#,'DDMONYY'),
			  CR_EFF_DATE_TO = TO_DATE(#creditEffDateTo#,'DDMONYY'),   
			  LM_USER_ID = #lmUserId#,         
			  LM_DATE = sysdate,
			  SECURE_YN = nvl(#secureYn#,SECURE_YN),
			  REMARKS = #remarks#
		WHERE 
		        UPPER(TR_NO) = UPPER(#trNo#) AND 
		        to_char(LM_DATE, 'DDMONYY HH24:MI:SS')  = #lmDate#
		        AND nvl(upper(Status),'**') &lt;&gt; 'VOID'
	</update>
	
	<!-- To Update Credit Fecilty in CUST_AGENT_AIRL_CREDIT  -->
	<!--  remove for Credit Facility CR   OR nvl(CARR_GROUP,'*') <> nvl(UPPER(#airlineGroup#),'*')    -->
	<select id="checkCreditFecilityAIRUpdated" parameterClass="cargo.cms.customer.bo.MaintainCreditFecilityBO"  resultClass="java.lang.Integer">
	<![CDATA[	
		SELECT COUNT(1) FROM CUST_AGENT_AIRL_CREDIT	WHERE UPPER(TR_NO) = UPPER(#trNo#) AND
			  (CR_TYPE <> #type# OR nvl(UPPER(CARR_CODE),'*') = nvl(UPPER(#airline#),'**')
			  	OR CR_AMT <> #creditLimit# OR CR_BAL <> #creditBalance# OR  CR_EFF_DATE_FROM <> TO_DATE(#creditEffDateFrom#,'DDMONYY')
			  	OR CR_EFF_DATE_TO <> TO_DATE(#creditEffDateTo#,'DDMONYY') OR nvl(SECURE_YN,'N') <> nvl(#secureYn#,'N')
			  	OR nvl(REMARKS,'*') <> nvl(#remarks#,'*')) and nvl(status,'*') <> 'VOID'
			  	]]>
	</select>
	
	<!--  remove for Credit Facility CR   CARR_GROUP = UPPER(#airlineGroup#),    -->
	<update id="updateCreditFecilityAIR" parameterClass="cargo.cms.customer.bo.MaintainCreditFecilityBO" >	
		UPDATE CUST_AGENT_AIRL_CREDIT
		SET   CUST_NO = #customerNo#,
			  CR_TYPE = #type#,
			  CARR_CODE = UPPER(#airline#),   
			  CR_AMT = #creditLimit#,        
			  CR_BAL = #creditBalance#,        
			  CR_EFF_DATE_FROM = TO_DATE(#creditEffDateFrom#,'DDMONYY'),
			  CR_EFF_DATE_TO = TO_DATE(#creditEffDateTo#,'DDMONYY'),    
			  SECURE_YN = nvl(#secureYn#,SECURE_YN),    
			  REMARKS = #remarks#,  
			  LM_USER_ID = #lmUserId#,         
			  LM_DATE = sysdate
		WHERE 
		        UPPER(TR_NO) = UPPER(#trNo#) AND 
		        to_char(LM_DATE, 'DDMONYY HH24:MI:SS')  = #lmDate#
		        AND nvl(upper(Status),'**') &lt;&gt; 'VOID'
	</update>
	<!-- Start mayank Update -->
	
	<update id="updateCreditFecilityCPCTByCustNo_STATUS" parameterClass="cargo.cms.customer.bo.MaintainCreditFecilityBO">
	<![CDATA[
		UPDATE CUST_AGENT_CREDIT 
		SET
			 STATUS = 'VOID', 
			  LM_USER_ID = #lmUserId#,         
			  LM_DATE = sysdate
		WHERE 
			UPPER(CUST_NO) = UPPER(#customerNo#)						
	]]>
	</update>
	
	<update id="updateCreditFecilityAIRByCustNo_STATUS" parameterClass="cargo.cms.customer.bo.MaintainCreditFecilityBO" >
	<![CDATA[
		UPDATE CUST_AGENT_AIRL_CREDIT 
		SET
			 STATUS = 'VOID', 
			  LM_USER_ID = #lmUserId#,         
			  LM_DATE = sysdate
		WHERE 
			UPPER(CUST_NO) = UPPER(#customerNo#)					
	]]>
	</update>
	
	<update id="updateCreditFecilityDMByCustNo_STATUS"  parameterClass="cargo.cms.customer.bo.MaintainCreditFecilityBO" >
	<![CDATA[
		UPDATE CUST_AGENT_DM_APP 
		SET
			 STATUS = 'VOID', 
			  LM_USER_ID = #lmUserId#,         
			  LM_DATE = sysdate
		WHERE 
			UPPER(CUST_NO) = UPPER(#customerNo#)						
	]]>
	</update>
	
	<update id="updateCreditFecilityAgentServByCustNo_STATUS" parameterClass="cargo.cms.customer.bo.MaintainCreditFecilityBO"  >
	<![CDATA[
		UPDATE CUST_AGENT_AGT_SVC_CREDIT 
		SET
			 STATUS = 'VOID', 
			 LM_USER_ID = #lmUserId#,         
			 LM_DATE = sysdate
		WHERE 
			UPPER(CUST_NO) = UPPER(#customerNo#)								
	]]>
	</update>
	
	<update id="updateCreditFecilityAgentByCustNo_STATUS" parameterClass="cargo.cms.customer.bo.MaintainCreditFecilityBO"  >
	<![CDATA[
		UPDATE CUST_AGENT_LEVEL_CRD 
		SET
			 STATUS = 'VOID', 
			 LM_USER_ID = #lmUserId#,         
			 LM_DATE = sysdate
		WHERE 
			UPPER(CUST_NO) = UPPER(#customerNo#)						
	]]>
	</update>
	
	<update id="updateCreditFecilityVirtualByCustNo_STATUS" parameterClass="cargo.cms.customer.bo.MaintainCreditFecilityBO" >
	<![CDATA[
		UPDATE CUST_AGENT_VIRTUAL_CREDIT 
		SET
			 STATUS = 'VOID', 
			 LM_USER_ID = #lmUserId#,         
			 LM_DATE = sysdate
		WHERE 
			UPPER(CUST_NO) = UPPER(#customerNo#)							
	]]>
	</update>
	
	<!-- End mayank Update -->
	<!-- To Delete Credit Fecility In CPCT By Customer No  -->
	<!--<delete id="deleteCreditFecilityCPCTByCustNo" parameterClass="java.lang.String" >
	<![CDATA[
		DELETE FROM CUST_AGENT_CREDIT WHERE 
			UPPER(CUST_NO) = UPPER(#PARAM#)						
	]]>
	</delete>	
	
	--><!-- To Delete Credit Fecility In AirLine By  Customer No  -->
	<!--<delete id="deleteCreditFecilityAIRByCustNo" parameterClass="java.lang.String" >
	<![CDATA[
		DELETE FROM CUST_AGENT_AIRL_CREDIT WHERE 
			UPPER(CUST_NO) = UPPER(#PARAM#)						
	]]>
	</delete>		
	
	--><!-- To Delete Credit Fecility In AirLine By TrNo  -->
	<!--<delete id="deleteCreditFecilityAIRByTrNo" parameterClass="java.lang.String" >
	<![CDATA[
		DELETE FROM CUST_AGENT_AIRL_CREDIT WHERE 
			UPPER(TR_NO) = UPPER(#PARAM#)						
	]]>
	</delete>	
	--><!-- To Delete Credit Fecility In CPCT By TrNo  -->
	<!--<delete id="deleteCreditFecilityCPCTByTrNo" parameterClass="java.lang.String" >
	<![CDATA[
		DELETE FROM CUST_AGENT_CREDIT WHERE UPPER(TR_NO) = UPPER(#PARAM#)						
	]]>
	</delete>
	--><!-- To Delete Credit Fecility In Agent By TrNo  -->
	<!--<delete id="deleteCreditFecilityAGTByTrNo" parameterClass="java.lang.String" >
	<![CDATA[
		DELETE FROM CUST_AGENT_LEVEL_CRD WHERE UPPER(TR_NO) = UPPER(#PARAM#)						
	]]>
	</delete>
	--><!-- To Delete Credit Fecility In Virtual By TrNo  -->
	<!--<delete id="deleteCreditFecilityVIRByTrNo" parameterClass="java.lang.String" >
	<![CDATA[
		DELETE FROM CUST_AGENT_VIRTUAL_CREDIT WHERE UPPER(TR_NO) = UPPER(#PARAM#)						
	]]>
	</delete>
	
	--><!-- Start -->
	<!-- To update Credit Fecility In AirLine By TrNo  -->
	<update id="updateCreditFecilityAIRByTrNo_Status" parameterClass="cargo.cms.customer.bo.MaintainCreditFecilityBO" >
	<![CDATA[
		UPDATE CUST_AGENT_AIRL_CREDIT 
		SET
			 STATUS = 'VOID', 
			 LM_USER_ID = #lmUserId#,         
			 LM_DATE = sysdate
		WHERE 
			UPPER(TR_NO) = UPPER(#trNo#)					
	]]>
	</update>
	
	
	<update id="updateCreditFecilityCPCTByTrNo_Status" parameterClass="cargo.cms.customer.bo.MaintainCreditFecilityBO" >
	<![CDATA[
		UPDATE CUST_AGENT_CREDIT 
		SET
			 STATUS = 'VOID', 
			 LM_USER_ID = #lmUserId#,         
			 LM_DATE = sysdate
		WHERE 
			UPPER(TR_NO) = UPPER(#trNo#)					
	]]>
	</update>
	
	<update id="updateCreditFecilityAGTByTrNo_Status" parameterClass="cargo.cms.customer.bo.MaintainCreditFecilityBO" >
	<![CDATA[
		UPDATE CUST_AGENT_LEVEL_CRD 
		SET
			 STATUS = 'VOID', 
			 LM_USER_ID = #lmUserId#,         
			 LM_DATE = sysdate
		WHERE 
			UPPER(TR_NO) = UPPER(#trNo#)					
	]]>
	</update>
	
	<update id="updateCreditFecilityVIRByTrNo_Status" parameterClass="cargo.cms.customer.bo.MaintainCreditFecilityBO" >
	<![CDATA[
		UPDATE CUST_AGENT_VIRTUAL_CREDIT 
		SET
			 STATUS = 'VOID', 
			 LM_USER_ID = #lmUserId#,         
			 LM_DATE = sysdate
		WHERE 
			UPPER(TR_NO) = UPPER(#trNo#)					
	]]>
	</update>
	
	<!-- End -->
	
	<!-- To Delete Credit Fecility In Non Awb By TrNo  -->
	<!--<delete id="deleteCreditFecilityNonAwbByTrNo" parameterClass="java.lang.String" >
	<![CDATA[
		DELETE FROM CUST_NON_AWB_CREDIT WHERE UPPER(TR_NO) = UPPER(#PARAM#)						
	]]>
	</delete>	
	
	--><!-- To Check CustNo/Company Name/iataCode/finCustcode has been Exist or Not -->
	<select id="checkCompanyExistOrNot" parameterClass="cargo.cms.customer.bo.MaintainCreditFecilityBO" resultClass="java.lang.Integer" >
		SELECT COUNT(*) 
		FROM
			CUST_COMPANY
		<dynamic prepend="WHERE">
			<isNotEmpty prepend="AND" property="customerNo">
				UPPER(CODE)=UPPER(#customerNo#)
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="companyName">
				UPPER(CODE_DESC)=UPPER(#companyName#)
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="iataCode">
				UPPER(CO_IATA_CODE)=UPPER(#iataCode#)
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="finCustCode">
				UPPER(FIN_CODE)=UPPER(#finCustCode#)
			</isNotEmpty>
		</dynamic>
	</select>
	
	<!-- To Check The Record has been Duplicate or Not for CPCT while create -->
	<select id="checkAATExistOrNot" parameterClass="cargo.cms.customer.bo.MaintainCreditFecilityBO" resultClass="java.lang.Integer" >
		SELECT COUNT(1) 
		FROM
			CUST_AGENT_CREDIT
		WHERE
				UPPER(CUST_NO) = UPPER(#customerNo#)
			AND	UPPER(TO_CHAR(CR_EFF_DATE_FROM, 'DDMONYY')) = UPPER(#creditEffDateFrom#)
			AND UPPER(TO_CHAR(CR_EFF_DATE_TO, 'DDMONYY')) = UPPER(#creditEffDateTo#)				
			and nvl(status,'*') &lt;&gt; 'VOID'			
	</select>
	
	<!-- To Check The Record has been Duplicate or Not for Airline while create -->
	<select id="checkAirlineExistOrNot" parameterClass="cargo.cms.customer.bo.MaintainCreditFecilityBO" resultClass="java.lang.Integer" >
		   SELECT COUNT(1) 
		FROM
			CUST_AGENT_AIRL_CREDIT
		WHERE
				UPPER(CR_TYPE) = UPPER(#type#)
			AND UPPER(CUST_NO) = UPPER(#customerNo#)
			AND nvl(UPPER(CARR_CODE),'*') = nvl(UPPER(#airline#),'**')
			AND nvl(SECURE_YN,'N') = nvl(#secureYn#,nvl(SECURE_YN,'N'))
			AND	(TO_DATE(CR_EFF_DATE_FROM,'DD-MON-YY') BETWEEN TO_DATE(#creditEffDateFrom#, 'DD-MON-YY')  AND TO_DATE(#creditEffDateTo#, 'DD-MON-YY')	
			OR TO_DATE(CR_EFF_DATE_TO,'DD-MON-YY') BETWEEN TO_DATE(#creditEffDateFrom#, 'DD-MON-YY')  AND TO_DATE(#creditEffDateTo#,'DD-MON-YY')
            OR TO_DATE(#creditEffDateFrom#,'DD-MON-YY') BETWEEN TO_DATE(CR_EFF_DATE_FROM, 'DD-MON-YY')  AND TO_DATE(CR_EFF_DATE_TO, 'DD-MON-YY')
            OR TO_DATE(#creditEffDateTo#,'DD-MON-YY') BETWEEN TO_DATE(CR_EFF_DATE_FROM, 'DD-MON-YY')  AND TO_DATE(CR_EFF_DATE_TO, 'DD-MON-YY'))		
            and nvl(status,'*') &lt;&gt; 'VOID'	
   </select>
	
	<!-- To Check The Record has been Duplicate or Not for CPCT while update -->
	<select id="checkCPCTExistOrNotForUpdate" parameterClass="cargo.cms.customer.bo.MaintainCreditFecilityBO" resultClass="java.lang.Integer" >
		SELECT COUNT(1) 
		FROM
			CUST_AGENT_CREDIT
		WHERE
				TR_NO != #trNo#
			AND UPPER(CUST_NO) = UPPER(#customerNo#)
			AND nvl(SECURE_YN,'N') = nvl(#secureYn#,nvl(SECURE_YN,'N'))
			AND (	(CR_EFF_DATE_FROM BETWEEN TO_DATE(#creditEffDateFrom#, 'DD-MON-YY')  AND TO_DATE(#creditEffDateTo#, 'DD-MON-YY')	
			OR CR_EFF_DATE_TO BETWEEN TO_DATE(#creditEffDateFrom#, 'DD-MON-YY')  AND TO_DATE(#creditEffDateTo#, 'DD-MON-YY'))	
			OR 	(#creditEffDateFrom# BETWEEN TO_DATE(CR_EFF_DATE_FROM, 'DD-MON-YY')  AND TO_DATE(CR_EFF_DATE_TO, 'DD-MON-YY')	
			OR #creditEffDateTo# BETWEEN TO_DATE(CR_EFF_DATE_FROM, 'DD-MON-YY')  AND TO_DATE(CR_EFF_DATE_TO, 'DD-MON-YY'))	)			
			and nvl(status,'*') &lt;&gt; 'VOID'		
	</select>

	
	<!-- To Check The Record has been Duplicate or Not for Airline  while update  -->
	<select id="checkAirlineExistOrNotForUpdate" parameterClass="cargo.cms.customer.bo.MaintainCreditFecilityBO" resultClass="java.lang.Integer" >
		SELECT COUNT(1) 
		FROM
			CUST_AGENT_AIRL_CREDIT
		WHERE
				TR_NO != #trNo#
			AND UPPER(CUST_NO) = UPPER(#customerNo#)
			AND UPPER(CR_TYPE) = UPPER(#type#)
			AND instr( nvl(UPPER(CARR_CODE),'*'), nvl(UPPER(#airline#),'**') ) &gt; 0
			AND nvl(SECURE_YN,'N') = nvl(#secureYn#,nvl(SECURE_YN,'N'))
			AND (	(CR_EFF_DATE_FROM BETWEEN TO_DATE(#creditEffDateFrom#, 'DD-MON-YY')  AND TO_DATE(#creditEffDateTo#, 'DD-MON-YY')	
			OR CR_EFF_DATE_TO BETWEEN TO_DATE(#creditEffDateFrom#, 'DD-MON-YY')  AND TO_DATE(#creditEffDateTo#, 'DD-MON-YY'))
			OR 	(#creditEffDateFrom# BETWEEN TO_DATE(CR_EFF_DATE_FROM, 'DD-MON-YY')  AND TO_DATE(CR_EFF_DATE_TO, 'DD-MON-YY')	
			OR #creditEffDateTo# BETWEEN TO_DATE(CR_EFF_DATE_FROM, 'DD-MON-YY')  AND TO_DATE(CR_EFF_DATE_TO, 'DD-MON-YY')))				
			and nvl(status,'*') &lt;&gt; 'VOID'			
	</select>
	
	 <!-- Sutharman 18SEP06, Added     -->
	<update id="updateFinanceCustomerCode" parameterClass="map" > 
    	UPDATE   CUST_COMPANY 
		SET   FIN_CODE=#FINCUSTCODE#	
		WHERE   CODE=#CUSTNO#
			AND to_char(LM_DATE, 'DDMONYY HH24:MI:SS')  = #lmDate#
   	</update>
   	
   <!-- check for DM approval insert status *Bharath* on 13-Apr-2010-->
   	<select id="checkDMApprovalForInsert" parameterClass="cargo.cms.customer.bo.MaintainCreditFecilityBO" resultClass="java.lang.Integer" >
	SELECT COUNT(1)
		FROM CUST_AGENT_DM_APP
		WHERE UPPER(CUST_NO) = UPPER(#customerNo#)
			AND	(TO_DATE(CR_EFF_DATE_FROM,'DD-MON-YY') BETWEEN TO_DATE(#dmDateFm#, 'DD-MON-YY')  AND TO_DATE(#dmDateTo#, 'DD-MON-YY')	
			OR TO_DATE(CR_EFF_DATE_TO,'DD-MON-YY') BETWEEN TO_DATE(#dmDateFm#, 'DD-MON-YY')  AND TO_DATE(#dmDateTo#, 'DD-MON-YY')
            OR TO_DATE(#dmDateFm#,'DD-MON-YY') BETWEEN TO_DATE(CR_EFF_DATE_FROM, 'DD-MON-YY')  AND TO_DATE(CR_EFF_DATE_TO, 'DD-MON-YY')
            OR TO_DATE(#dmDateTo#,'DD-MON-YY') BETWEEN TO_DATE(CR_EFF_DATE_FROM, 'DD-MON-YY')  AND TO_DATE(CR_EFF_DATE_TO, 'DD-MON-YY'))		
            and nvl(status,'*') &lt;&gt; 'VOID'		
	</select>
	
	<!-- Mayank Charges CR start -->
	<!--<select id="checkExistForNonAWBInsert" parameterClass="cargo.cms.customer.bo.MaintainCreditFecilityBO" resultClass="java.lang.Integer" >
		 SELECT COUNT(1) 
		FROM
			CUST_NON_AWB_CREDIT
		WHERE
		UPPER(CUST_NO) = UPPER(#customerNo#)
			AND	(TO_DATE(CR_EFF_DATE_FROM,'DD-MON-YY') BETWEEN TO_DATE(#nonAwbCreditEffDateFrom#, 'DD-MON-YY')  AND TO_DATE(#nonAwbCreditEffDateTo#, 'DD-MON-YY')	
			OR TO_DATE(CR_EFF_DATE_TO,'DD-MON-YY') BETWEEN TO_DATE(#nonAwbCreditEffDateFrom#, 'DD-MON-YY')  AND TO_DATE(#nonAwbCreditEffDateTo#, 'DD-MON-YY')
            OR TO_DATE(#nonAwbCreditEffDateFrom#,'DD-MON-YY') BETWEEN TO_DATE(CR_EFF_DATE_FROM, 'DD-MON-YY')  AND TO_DATE(CR_EFF_DATE_TO, 'DD-MON-YY')
            OR TO_DATE(#nonAwbCreditEffDateTo#,'DD-MON-YY') BETWEEN TO_DATE(CR_EFF_DATE_FROM, 'DD-MON-YY')  AND TO_DATE(CR_EFF_DATE_TO, 'DD-MON-YY'))		
	</select>
	--><!-- Mayank Charges CR end -->
	
	<!-- check for CPCT Approval insert status *Bharath* on 13-Apr-2010-->
	<!--  remove for Credit Facility CR   AND UPPER(CARR_GROUP) = UPPER(#airlineGroup#)    -->
	<select id="checkCPCTExistForInsertParent" parameterClass="cargo.cms.customer.bo.MaintainCreditFecilityBO" resultClass="java.lang.Integer" >
		 SELECT COUNT(1) 
		FROM
			CUST_AGENT_CREDIT
		WHERE
			UPPER(CR_TYPE) = UPPER(#type#)
			AND UPPER(CUST_NO) = UPPER(#customerNo#)
			AND	(TO_DATE(CR_EFF_DATE_FROM,'DD-MON-YY') BETWEEN TO_DATE(#creditEffDateFrom#, 'DD-MON-YY')  AND TO_DATE(#creditEffDateTo#, 'DD-MON-YY')	
			OR TO_DATE(CR_EFF_DATE_TO,'DD-MON-YY') BETWEEN TO_DATE(#creditEffDateFrom#, 'DD-MON-YY')  AND TO_DATE(#creditEffDateTo#, 'DD-MON-YY')
            OR TO_DATE(#creditEffDateFrom#,'DD-MON-YY') BETWEEN TO_DATE(CR_EFF_DATE_FROM, 'DD-MON-YY')  AND TO_DATE(CR_EFF_DATE_TO, 'DD-MON-YY')
            OR TO_DATE(#creditEffDateTo#,'DD-MON-YY') BETWEEN TO_DATE(CR_EFF_DATE_FROM, 'DD-MON-YY')  AND TO_DATE(CR_EFF_DATE_TO, 'DD-MON-YY'))		
            and nvl(status,'*') &lt;&gt; 'VOID'	
    </select>
    <select id="checkCPCTExistForInsertCarr" parameterClass="cargo.cms.customer.bo.MaintainCreditFecilityBO" resultClass="java.lang.Integer" >
		 SELECT COUNT(1) 
		FROM
			CUST_AGENT_CREDIT
		WHERE
			UPPER(CR_TYPE) = UPPER(#type#)
			AND UPPER(CARR_CODE) = UPPER(#airline#)
			AND nvl(SECURE_YN,'N') = nvl(#secureYn#,nvl(SECURE_YN,'N'))
			AND UPPER(CUST_NO) = UPPER(#customerNo#)
			AND	(TO_DATE(CR_EFF_DATE_FROM,'DD-MON-YY') BETWEEN TO_DATE(#creditEffDateFrom#, 'DD-MON-YY')  AND TO_DATE(#creditEffDateTo#, 'DD-MON-YY')	
			OR TO_DATE(CR_EFF_DATE_TO,'DD-MON-YY') BETWEEN TO_DATE(#creditEffDateFrom#, 'DD-MON-YY')  AND TO_DATE(#creditEffDateTo#, 'DD-MON-YY')
            OR TO_DATE(#creditEffDateFrom#,'DD-MON-YY') BETWEEN TO_DATE(CR_EFF_DATE_FROM, 'DD-MON-YY')  AND TO_DATE(CR_EFF_DATE_TO, 'DD-MON-YY')
            OR TO_DATE(#creditEffDateTo#,'DD-MON-YY') BETWEEN TO_DATE(CR_EFF_DATE_FROM, 'DD-MON-YY')  AND TO_DATE(CR_EFF_DATE_TO, 'DD-MON-YY'))		
            and nvl(status,'*') &lt;&gt; 'VOID'
    </select>
    
    <!--  remove for Credit Facility CR   and CARR_GROUP is null    -->
	<select id="checkCPCTExistForInsert" parameterClass="cargo.cms.customer.bo.MaintainCreditFecilityBO" resultClass="java.lang.Integer" >
		 SELECT COUNT(1) 
		FROM
			CUST_AGENT_CREDIT
		WHERE
			UPPER(CR_TYPE) = UPPER(#type#)
			AND UPPER(CUST_NO) = UPPER(#customerNo#) and CARR_CODE is null 
			AND nvl(SECURE_YN,'N') = nvl(#secureYn#,nvl(SECURE_YN,'N'))
			AND	(TO_DATE(CR_EFF_DATE_FROM,'DD-MON-YY') BETWEEN TO_DATE(#creditEffDateFrom#, 'DD-MON-YY')  AND TO_DATE(#creditEffDateTo#, 'DD-MON-YY')	
			OR TO_DATE(CR_EFF_DATE_TO,'DD-MON-YY') BETWEEN TO_DATE(#creditEffDateFrom#, 'DD-MON-YY')  AND TO_DATE(#creditEffDateTo#, 'DD-MON-YY')
            OR TO_DATE(#creditEffDateFrom#,'DD-MON-YY') BETWEEN TO_DATE(CR_EFF_DATE_FROM, 'DD-MON-YY')  AND TO_DATE(CR_EFF_DATE_TO, 'DD-MON-YY')
            OR TO_DATE(#creditEffDateTo#,'DD-MON-YY') BETWEEN TO_DATE(CR_EFF_DATE_FROM, 'DD-MON-YY')  AND TO_DATE(CR_EFF_DATE_TO, 'DD-MON-YY'))		
            and nvl(status,'*') &lt;&gt; 'VOID'		
    </select>
    <!-- check for Virtual Approval insert status *Bharath* on 13-Apr-2010-->
    <!--  remove for Credit Facility CR  UPPER(CARR_GROUP) = UPPER(#airlineGroup#)	AND     -->
    <select id="checkVirtualExistForInsertParent" parameterClass="cargo.cms.customer.bo.MaintainCreditFecilityBO" resultClass="java.lang.Integer" >
		 SELECT COUNT(1) 
		FROM
			CUST_AGENT_VIRTUAL_CREDIT
		WHERE
			UPPER(CUST_NO) = UPPER(#customerNo#) and VIRTUAL_ACC='Y' AND UPPER(CR_TYPE) = UPPER(#type#)
			AND	(TO_DATE(CR_EFF_DATE_FROM,'DD-MON-YY') BETWEEN TO_DATE(#creditEffDateFrom#, 'DD-MON-YY')  AND TO_DATE(#creditEffDateTo#, 'DD-MON-YY')	
			OR TO_DATE(CR_EFF_DATE_TO,'DD-MON-YY') BETWEEN TO_DATE(#creditEffDateFrom#, 'DD-MON-YY')  AND TO_DATE(#creditEffDateTo#, 'DD-MON-YY')
            OR TO_DATE(#creditEffDateFrom#,'DD-MON-YY') BETWEEN TO_DATE(CR_EFF_DATE_FROM, 'DD-MON-YY')  AND TO_DATE(CR_EFF_DATE_TO, 'DD-MON-YY')
            OR TO_DATE(#creditEffDateTo#,'DD-MON-YY') BETWEEN TO_DATE(CR_EFF_DATE_FROM, 'DD-MON-YY')  AND TO_DATE(CR_EFF_DATE_TO, 'DD-MON-YY'))		
            and nvl(status,'*') &lt;&gt; 'VOID'
    </select>
    <select id="checkVirtualExistForInsertCarr" parameterClass="cargo.cms.customer.bo.MaintainCreditFecilityBO" resultClass="java.lang.Integer" >
		 SELECT COUNT(1) 
		FROM
			CUST_AGENT_VIRTUAL_CREDIT
		WHERE
			nvl(UPPER(CARR_CODE),'*') = nvl(UPPER(#airline#),'**') 
			AND UPPER(CUST_NO) = UPPER(#customerNo#) and VIRTUAL_ACC='Y' AND UPPER(CR_TYPE) = UPPER(#type#)
			AND	(TO_DATE(CR_EFF_DATE_FROM,'DD-MON-YY') BETWEEN TO_DATE(#creditEffDateFrom#, 'DD-MON-YY')  AND TO_DATE(#creditEffDateTo#, 'DD-MON-YY')	
			OR TO_DATE(CR_EFF_DATE_TO,'DD-MON-YY') BETWEEN TO_DATE(#creditEffDateFrom#, 'DD-MON-YY')  AND TO_DATE(#creditEffDateTo#, 'DD-MON-YY')
            OR TO_DATE(#creditEffDateFrom#,'DD-MON-YY') BETWEEN TO_DATE(CR_EFF_DATE_FROM, 'DD-MON-YY')  AND TO_DATE(CR_EFF_DATE_TO, 'DD-MON-YY')
            OR TO_DATE(#creditEffDateTo#,'DD-MON-YY') BETWEEN TO_DATE(CR_EFF_DATE_FROM, 'DD-MON-YY')  AND TO_DATE(CR_EFF_DATE_TO, 'DD-MON-YY'))		
            and nvl(status,'*') &lt;&gt; 'VOID'	
    </select>
    
    <!--  remove for Credit Facility CR  and CARR_GROUP is null     -->
	<select id="checkVirtualExistForInsert" parameterClass="cargo.cms.customer.bo.MaintainCreditFecilityBO" resultClass="java.lang.Integer" >
		 SELECT COUNT(1) 
		FROM
			CUST_AGENT_VIRTUAL_CREDIT
		WHERE
			UPPER(CUST_NO) = UPPER(#customerNo#)
			and CARR_CODE is null and VIRTUAL_ACC='Y' AND UPPER(CR_TYPE) = UPPER(#type#)
			AND	(TO_DATE(CR_EFF_DATE_FROM,'DD-MON-YY') BETWEEN TO_DATE(#creditEffDateFrom#, 'DD-MON-YY')  AND TO_DATE(#creditEffDateTo#, 'DD-MON-YY')	
			OR TO_DATE(CR_EFF_DATE_TO,'DD-MON-YY') BETWEEN TO_DATE(#creditEffDateFrom#, 'DD-MON-YY')  AND TO_DATE(#creditEffDateTo#, 'DD-MON-YY')
            OR TO_DATE(#creditEffDateFrom#,'DD-MON-YY') BETWEEN TO_DATE(CR_EFF_DATE_FROM, 'DD-MON-YY')  AND TO_DATE(CR_EFF_DATE_TO, 'DD-MON-YY')
            OR TO_DATE(#creditEffDateTo#,'DD-MON-YY') BETWEEN TO_DATE(CR_EFF_DATE_FROM, 'DD-MON-YY')  AND TO_DATE(CR_EFF_DATE_TO, 'DD-MON-YY'))		
            and nvl(status,'*') &lt;&gt; 'VOID'	
    </select>
	
	<!-- check for Agent Service Approval insert status *Bharath* on 13-Apr-2010-->
	<select id="checkAgentServExistForInsert" parameterClass="cargo.cms.customer.bo.MaintainCreditFecilityBO" resultClass="java.lang.Integer" >
		    SELECT COUNT(1) 
		FROM
			CUST_AGENT_AGT_SVC_CREDIT
		WHERE
			UPPER(CUST_NO) = UPPER(#customerNo#)
			AND	(TO_DATE(CR_EFF_DATE_FROM,'DD-MON-YY') BETWEEN TO_DATE(#creditEffDateFrom#, 'DD-MON-YY')  AND TO_DATE(#creditEffDateTo#, 'DD-MON-YY')	
			OR TO_DATE(CR_EFF_DATE_TO,'DD-MON-YY') BETWEEN TO_DATE(#creditEffDateFrom#, 'DD-MON-YY')  AND TO_DATE(#creditEffDateTo#, 'DD-MON-YY')
            OR TO_DATE(#creditEffDateFrom#,'DD-MON-YY') BETWEEN TO_DATE(CR_EFF_DATE_FROM, 'DD-MON-YY')  AND TO_DATE(CR_EFF_DATE_TO, 'DD-MON-YY')
            OR TO_DATE(#creditEffDateTo#,'DD-MON-YY') BETWEEN TO_DATE(CR_EFF_DATE_FROM, 'DD-MON-YY')  AND TO_DATE(CR_EFF_DATE_TO, 'DD-MON-YY'))		
            and nvl(status,'*') &lt;&gt; 'VOID'	
     </select>
     
     <!-- check for Agent Level Credit :: Ranjith-->
      <!--  remove for Credit Facility CR  AND UPPER(CARR_GROUP) = UPPER(#airlineGroup#)     -->
     <select id="checkAgentLvlCrdExistForInsertParent" parameterClass="cargo.cms.customer.bo.MaintainCreditFecilityBO" resultClass="java.lang.Integer" >
		    SELECT COUNT(1) 
		FROM
			cust_agent_level_crd
		WHERE
			UPPER(CUST_NO) = UPPER(#customerNo#)
			AND	(TO_DATE(CR_EFF_DATE_FROM,'DD-MON-YY') BETWEEN TO_DATE(#agtCrdEffFrom#, 'DD-MON-YY')  AND TO_DATE(#agtCrdEffTo#, 'DD-MON-YY')	
			OR TO_DATE(CR_EFF_DATE_TO,'DD-MON-YY') BETWEEN TO_DATE(#agtCrdEffFrom#, 'DD-MON-YY')  AND TO_DATE(#agtCrdEffTo#, 'DD-MON-YY')
            OR TO_DATE(#agtCrdEffFrom#,'DD-MON-YY') BETWEEN TO_DATE(CR_EFF_DATE_FROM, 'DD-MON-YY')  AND TO_DATE(CR_EFF_DATE_TO, 'DD-MON-YY')
            OR TO_DATE(#agtCrdEffTo#,'DD-MON-YY') BETWEEN TO_DATE(CR_EFF_DATE_FROM, 'DD-MON-YY')  AND TO_DATE(CR_EFF_DATE_TO, 'DD-MON-YY'))		
            and nvl(status,'*') &lt;&gt; 'VOID'	
     </select>
     <select id="checkAgentLvlCrdExistForInsertCarr" parameterClass="cargo.cms.customer.bo.MaintainCreditFecilityBO" resultClass="java.lang.Integer" >
		    SELECT COUNT(1) 
		FROM
			cust_agent_level_crd
		WHERE
			UPPER(CUST_NO) = UPPER(#customerNo#)
			AND nvl(UPPER(CARR_CODE),'*') = nvl(UPPER(#airline#),'**')
			AND nvl(SECURE_YN,'N') = nvl(#secureYn#,nvl(SECURE_YN,'N'))
			AND	(TO_DATE(CR_EFF_DATE_FROM,'DD-MON-YY') BETWEEN TO_DATE(#agtCrdEffFrom#, 'DD-MON-YY')  AND TO_DATE(#agtCrdEffTo#, 'DD-MON-YY')	
			OR TO_DATE(CR_EFF_DATE_TO,'DD-MON-YY') BETWEEN TO_DATE(#agtCrdEffFrom#, 'DD-MON-YY')  AND TO_DATE(#agtCrdEffTo#, 'DD-MON-YY')
            OR TO_DATE(#agtCrdEffFrom#,'DD-MON-YY') BETWEEN TO_DATE(CR_EFF_DATE_FROM, 'DD-MON-YY')  AND TO_DATE(CR_EFF_DATE_TO, 'DD-MON-YY')
            OR TO_DATE(#agtCrdEffTo#,'DD-MON-YY') BETWEEN TO_DATE(CR_EFF_DATE_FROM, 'DD-MON-YY')  AND TO_DATE(CR_EFF_DATE_TO, 'DD-MON-YY'))		
            and nvl(status,'*') &lt;&gt; 'VOID'
     </select>
     
     <!--  remove for Credit Facility CR  and CARR_GROUP is null   -->
	<select id="checkAgentLvlCrdExistForInsert" parameterClass="cargo.cms.customer.bo.MaintainCreditFecilityBO" resultClass="java.lang.Integer" >
		    SELECT COUNT(1) 
		FROM
			cust_agent_level_crd
		WHERE
			UPPER(CUST_NO) = UPPER(#customerNo#) and CARR_CODE is null 
			AND nvl(SECURE_YN,'N') = nvl(#secureYn#,nvl(SECURE_YN,'N'))
			AND	(TO_DATE(CR_EFF_DATE_FROM,'DD-MON-YY') BETWEEN TO_DATE(#agtCrdEffFrom#, 'DD-MON-YY')  AND TO_DATE(#agtCrdEffTo#, 'DD-MON-YY')	
			OR TO_DATE(CR_EFF_DATE_TO,'DD-MON-YY') BETWEEN TO_DATE(#agtCrdEffFrom#, 'DD-MON-YY')  AND TO_DATE(#agtCrdEffTo#, 'DD-MON-YY')
            OR TO_DATE(#agtCrdEffFrom#,'DD-MON-YY') BETWEEN TO_DATE(CR_EFF_DATE_FROM, 'DD-MON-YY')  AND TO_DATE(CR_EFF_DATE_TO, 'DD-MON-YY')
            OR TO_DATE(#agtCrdEffTo#,'DD-MON-YY') BETWEEN TO_DATE(CR_EFF_DATE_FROM, 'DD-MON-YY')  AND TO_DATE(CR_EFF_DATE_TO, 'DD-MON-YY'))		
            and nvl(status,'*') &lt;&gt; 'VOID'	
     </select>
	
	<!-- Insert into DM Approval table *Bharath* on 13-Apr-2010-->
	<insert id="insertCreditFecilityToDM" parameterClass="cargo.cms.customer.bo.MaintainCreditFecilityBO">
		INSERT INTO CUST_AGENT_DM_APP (
			  TR_NO,
			  CUST_NO,
			  CR_AMT,
			  CR_EFF_DATE_FROM,
			  CR_EFF_DATE_TO,
			  CR_USER_ID,
			  CR_DATE,            
			  LM_USER_ID,         
			  LM_DATE,
			  SEQ_NO )            
		VALUES ( 
			  CUST_AGENT_DM_APP_SEQ.nextval,
			  #customerNo#,
			  #dmApprovedAmt#,
			  TO_DATE(#dmDateFm#,'DDMONYY'),
			  TO_DATE(#dmDateTo#,'DDMONYY'),
		      #crUserId#,
		      sysdate,
		      #lmUserId#,
		      sysdate,
			  CUST_AGENT_AIRL_CREDIT_INV_SEQ.NEXTVAL )
	</insert>
	
	<!-- Insert into Agent Service Approval table *Bharath* on 13-Apr-2010-->
	<insert id="insertCreditFecilityToAgentServ" parameterClass="cargo.cms.customer.bo.MaintainCreditFecilityBO">
		INSERT INTO CUST_AGENT_AGT_SVC_CREDIT (		
				TR_NO,                                                                                                                                                                                  
				CUST_NO,                                                                                                                                                                                                 
				CR_EFF_DATE_FROM,                                                                                                                                                                                                        
				CR_EFF_DATE_TO,                                                                                                                                                                                                        
				CR_AMT,                                                                                                                                                                                                             
				CR_BAL,                                                                                                                                                                                                                 
				CR_USER_ID,                                                                                                                                                                                                       
				CR_DATE,                                                                                                                                                                                                        
				LM_USER_ID,                                                                                                                                                                                       
				LM_DATE	  
			   )            
		VALUES ( 
			  CUST_AGENT_AGT_SVC_CR_SEQ.nextval,
			  #customerNo#,
			  TO_DATE(#creditEffDateFrom#,'DDMONYY'),
			  TO_DATE(#creditEffDateTo#,'DDMONYY'),
			  #creditLimit#,
			  #creditBalance#,
			  #crUserId#,
		      sysdate,
		      #lmUserId#,
		      sysdate )
	</insert>
	
	
	<!-- Insert into Agent Level Credit table *Ranjith* -->
	<!--  remove for Credit Facility CR  ,CARR_GROUP ,	#airlineGroup#  -->
	<insert id="insertCreditFecilityToAgentCredit" parameterClass="cargo.cms.customer.bo.MaintainCreditFecilityBO">
		INSERT INTO CUST_AGENT_LEVEL_CRD (
				TR_NO,
				CUST_NO,
				CR_EFF_DATE_FROM,
				CR_EFF_DATE_TO,
				CR_AMT,
				CR_BAL,
				CR_USER_ID,
				CR_DATE,
				LM_USER_ID,
				LM_DATE,
				CARR_CODE,
			  	SEQ_NO,
			  	SECURE_YN,
			  	REMARKS
			   ) VALUES (
			   	CUST_AGENT_LEVEL_CRD_SEQ.nextval,
			   	#customerNo#,
			   	TO_DATE(#agtCrdEffFrom#,'DDMONYY'),
			   	TO_DATE(#agtCrdEffTo#,'DDMONYY'),
			   	#agtCrdLimit#,
			   	#agtCrdbalnce#,
			   	#crUserId#,
			   	sysdate,
			   	#lmUserId#,
			   	sysdate,
			   	#airline#,
			  	CUST_AGENT_AIRL_CREDIT_INV_SEQ.NEXTVAL,
			  	nvl(#secureYn#,'N'),
			  	#remarks#)

	</insert>
	
	<!-- To fetch DM approval revenue for a given customer -->
	<select id="fetchDMApprovalDetails" parameterClass="java.lang.String" resultClass="cargo.cms.customer.bo.MaintainCreditFecilityBO">
		<![CDATA[
		SELECT DISTINCT
			  TR_NO AS trNo,
			  CR_AMT as dmApprovedAmt,
			  TO_CHAR(CR_EFF_DATE_FROM, 'DDMONYY') as dmDateFm,
			  TO_CHAR(CR_EFF_DATE_FROM, 'DDMONYY') as oldDmDateFm,
			  TO_CHAR(CR_EFF_DATE_TO, 'DDMONYY') as dmDateTo,
			  LM_USER_ID as dmLmUserId,         
			  TO_CHAR(LM_DATE,'DDMONYY HH24:MI:SS') as dmLmDate,
			  seq_no seqNo
		FROM  CUST_AGENT_DM_APP 
		WHERE
				 UPPER(CUST_NO)=UPPER(#PARAM#)
				AND   to_date(to_char(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY')	 > = to_date(to_char(SYSDATE,'DDMONYY'),'DDMONYY')
				and nvl(status,'*') <> 'VOID'
		]]>
	</select>
	
	<!-- To fetch Agent Service approval revenue for a given customer -->
	<select id="fetchAgentServApprovalDetails" parameterClass="java.lang.String" resultClass="cargo.cms.customer.bo.MaintainCreditFecilityBO">
	<![CDATA[
		SELECT DISTINCT
				TR_NO AS trNo,
			  	TO_CHAR(CR_EFF_DATE_FROM, 'DDMONYY') AS creditEffDateFrom,                                                                                                                                                                                                        
			  	TO_CHAR(CR_EFF_DATE_FROM, 'DDMONYY') AS oldCreditEffDateFrom,                                                                                                                                                                                                       
				TO_CHAR(CR_EFF_DATE_TO, 'DDMONYY') AS creditEffDateTo,                                                                                                                                                                                                        
				CR_AMT AS creditLimit,                                                                                                                                                                                                             
				CR_BAL AS creditBalance,
				LM_USER_ID as lmUserId,         
			  	TO_CHAR(LM_DATE,'DDMONYY HH24:MI:SS') as lmDate
		FROM  CUST_AGENT_AGT_SVC_CREDIT 
		WHERE
				 UPPER(CUST_NO)=UPPER(#PARAM#)
				AND   to_date(to_char(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY')	 > = to_date(to_char(SYSDATE,'DDMONYY'),'DDMONYY')				
				and nvl(status,'*') <> 'VOID'			
   		]]> 
	</select>
	
	<!-- To create virtual account for a customer *Bharath* -->
	<update id="createVirtualAccount" parameterClass="cargo.cms.customer.bo.MaintainCreditFecilityBO" > 
    	UPDATE   CUST_COMPANY 
		SET   VIRTUAL_CR_ACC='Y'
		WHERE   UPPER(CODE)=UPPER(#customerNo#)
				AND to_char(LM_DATE, 'DDMONYY HH24:MI:SS')  = #lmDate#
   	</update>
   	
   	<!-- To Update Credit Fecilty in CUST_AGENT_AGT_SVC_CREDIT *Bharath* -->
   	<select id="checkAgentServCreditFecilityUpdated" parameterClass="cargo.cms.customer.bo.MaintainCreditFecilityBO"  resultClass="java.lang.Integer" >
   	<![CDATA[	
		SELECT COUNT(1) FROM CUST_AGENT_AGT_SVC_CREDIT	WHERE UPPER(TR_NO) = UPPER(#trNo#) AND  
			  (CR_AMT <> #creditLimit# OR CR_BAL <> #creditBalance# OR CR_EFF_DATE_FROM <> TO_DATE(#creditEffDateFrom#,'DDMONYY') OR CR_EFF_DATE_TO <> TO_DATE(#creditEffDateTo#,'DDMONYY'))    
			  AND nvl(upper(Status),'**') <> 'VOID'    
			 ]]>          
	</select>
   	
   	
	<update id="updateAgentServCreditFecility" parameterClass="cargo.cms.customer.bo.MaintainCreditFecilityBO" >	
		UPDATE CUST_AGENT_AGT_SVC_CREDIT
		SET   
			  CR_AMT = #creditLimit#,        
			  CR_BAL = #creditBalance#,        
			  CR_EFF_DATE_FROM = TO_DATE(#creditEffDateFrom#,'DDMONYY'),
			  CR_EFF_DATE_TO = TO_DATE(#creditEffDateTo#,'DDMONYY'),    
			  LM_USER_ID = #lmUserId#,         
			  LM_DATE = sysdate
		WHERE 
		        UPPER(TR_NO) = UPPER(#trNo#)
		        AND to_char(LM_DATE, 'DDMONYY HH24:MI:SS')  = #lmDate#
		        AND nvl(upper(Status),'**') &lt;&gt; 'VOID'
	</update>
	
	<!--  remove for Credit Facility CR  CARR_GROUP = UPPER(#airlineGroup#),     -->
	<update id="updateAgentLevelCreditFacility" parameterClass="cargo.cms.customer.bo.MaintainCreditFecilityBO" >	
		UPDATE CUST_AGENT_LEVEL_CRD
		SET   
			  CR_AMT = #agtCrdLimit#,        
			  CR_BAL = #agtCrdbalnce#,        
			  CARR_CODE = UPPER(#airline#),
			  CR_EFF_DATE_FROM = TO_DATE(#agtCrdEffFrom#,'DDMONYY'),
			  CR_EFF_DATE_TO = TO_DATE(#agtCrdEffTo#,'DDMONYY'),    
			  LM_USER_ID = #lmUserId#,         
			  LM_DATE = sysdate,
			  SECURE_YN = nvl(#secureYn#,SECURE_YN),
			  REMARKS =	#remarks#
		WHERE 
		        UPPER(TR_NO) = UPPER(#trNo#)
		        AND to_char(LM_DATE, 'DDMONYY HH24:MI:SS')  = #lmDate#
		        AND nvl(upper(Status),'**') &lt;&gt; 'VOID'
	</update>
	
	<!--  remove for Credit Facility CR  CARR_GROUP = UPPER(#airlineGroup#),     -->
	<update id="updateVirtualLevelCreditFacility" parameterClass="cargo.cms.customer.bo.MaintainCreditFecilityBO" >	
		UPDATE CUST_AGENT_VIRTUAL_CREDIT
		SET   
			  CARR_CODE = UPPER(#airline#),
			  CR_TYPE = #type#,   
			  CR_EFF_DATE_FROM = TO_DATE(#creditEffDateFrom#,'DDMONYY'),
			  CR_EFF_DATE_TO = TO_DATE(#creditEffDateTo#,'DDMONYY'),    
			  LM_USER_ID = #lmUserId#,         
			  LM_DATE = sysdate,
			  VIRTUAL_ACC = #virtualCrAccount#
		WHERE 
		        UPPER(TR_NO) = UPPER(#trNo#)
		        AND nvl(upper(Status),'**') &lt;&gt; 'VOID'
	</update>
	
	
	<!-- To Update Credit Fecilty in CUST_AGENT_DM_APP *Bharath* -->
	<update id="updateDMCreditFecility" parameterClass="cargo.cms.customer.bo.MaintainCreditFecilityBO" >	
		UPDATE CUST_AGENT_DM_APP
		SET  
			  CR_AMT = #dmApprovedAmt#,           
			  CR_EFF_DATE_FROM = TO_DATE(#dmDateFm#,'DDMONYY'),
			  CR_EFF_DATE_TO = TO_DATE(#dmDateTo#,'DDMONYY'),    
			  LM_USER_ID = #lmUserId#,         
			  LM_DATE = sysdate
		WHERE 
		        UPPER(TR_NO) = UPPER(#trNo#)
		        AND to_char(LM_DATE, 'DDMONYY HH24:MI:SS')  = #dmLmDate#
 				AND nvl(upper(Status),'**') &lt;&gt; 'VOID'
 	</update>
 	
 	<!-- To Update Credit Fecilty in CUST_NON_AWB_CREDIT *Mayank* -->
   	<!--<select id="checkAgentNonAwbCreditFecilityUpdated" parameterClass="cargo.cms.customer.bo.MaintainCreditFecilityBO"  resultClass="java.lang.Integer" >
   	<![CDATA[	
		SELECT COUNT(1) FROM CUST_NON_AWB_CREDIT	WHERE UPPER(TR_NO) = UPPER(#trNo#) AND  
			  (CR_AMT <> #nonAwbCreditLimit# OR CR_BAL <> #nonAwbCreditBalance# OR CR_EFF_DATE_FROM <> TO_DATE(#nonAwbCreditEffDateFrom#,'DDMONYY') 
			  OR CR_EFF_DATE_TO <> TO_DATE(#nonAwbCreditEffDateTo#,'DDMONYY'))    
			 ]]>          
	</select>
 	
 	--><!--<update id="updateAgentNonAWBCreditFecility" parameterClass="cargo.cms.customer.bo.MaintainCreditFecilityBO" >	
		UPDATE CUST_NON_AWB_CREDIT
		SET   
			  CR_AMT = #nonAwbCreditLimit#,        
			  CR_BAL = #nonAwbCreditBalance#,        
			  CR_EFF_DATE_FROM = TO_DATE(#nonAwbCreditEffDateFrom#,'DDMONYY'),
			  CR_EFF_DATE_TO = TO_DATE(#nonAwbCreditEffDateTo#,'DDMONYY'),    
			  LM_USER_ID = #lmUserId#,         
			  LM_DATE = sysdate
		WHERE 
		        UPPER(TR_NO) = UPPER(#trNo#)
		        AND to_char(LM_DATE, 'DDMONYY HH24:MI:SS')  = #lmDate#
 	</update>

	--><select id="checkDmUpdated" parameterClass="cargo.cms.customer.bo.MaintainCreditFecilityBO"  resultClass="java.lang.Integer">	
		<![CDATA[
		SELECT COUNT(1) FROM CUST_AGENT_DM_APP where UPPER(TR_NO) = UPPER(#trNo#) 
		AND (CR_AMT <> #dmApprovedAmt# OR CR_EFF_DATE_FROM <> TO_DATE(#dmDateFm#,'DDMONYY') OR CR_EFF_DATE_TO <> TO_DATE(#dmDateTo#,'DDMONYY'))
		and nvl(status,'*') <> 'VOID'
		]]>
 	</select>
 	
 	
	
	<!-- To Delete Credit Fecility In DM approval By Customer No  -->
	<!--<delete id="deleteCreditFecilityDMByCustNo" parameterClass="java.lang.String" >
	<![CDATA[
		DELETE FROM CUST_AGENT_DM_APP WHERE 
			UPPER(CUST_NO) = UPPER(#PARAM#)						
	]]>
	</delete>	
	
	 To Delete Credit Fecility In Agent Service By Customer No  
	<delete id="deleteCreditFecilityAgentServByCustNo" parameterClass="java.lang.String" >
	<![CDATA[
		DELETE FROM CUST_AGENT_AGT_SVC_CREDIT WHERE 
			UPPER(CUST_NO) = UPPER(#PARAM#)						
	]]>
	</delete>	
	<delete id="deleteCreditFecilityAgentByCustNo" parameterClass="java.lang.String" >
	<![CDATA[
		DELETE FROM CUST_AGENT_LEVEL_CRD WHERE UPPER(CUST_NO) = UPPER(#PARAM#)						
	]]>
	</delete>	
	<delete id="deleteCreditFecilityVirtualByCustNo" parameterClass="java.lang.String" >
	<![CDATA[
		DELETE FROM CUST_AGENT_VIRTUAL_CREDIT WHERE UPPER(CUST_NO) = UPPER(#PARAM#)						
	]]>
	</delete>	
	
	--><!-- Start Credit Facility CR -->
	
	<update id="updateCreditFecilityCPCT_STATUS" parameterClass="cargo.cms.customer.bo.MaintainCreditFecilityBO" >	
		UPDATE CUST_AGENT_CREDIT
		SET   
      STATUS = 'VOID', 
			LM_USER_ID = #lmUserId#,         
			LM_DATE = sysdate
		WHERE 
		        UPPER(TR_NO) = UPPER(#trNo#) AND 
		        to_char(LM_DATE, 'DDMONYY HH24:MI:SS')  = #lmDate#
	</update>
  
    <update id="updateCreditFecilityAIR_STATUS" parameterClass="cargo.cms.customer.bo.MaintainCreditFecilityBO" >	
		UPDATE CUST_AGENT_AIRL_CREDIT
		SET   
      		STATUS = 'VOID', 
			LM_USER_ID = #lmUserId#,         
			LM_DATE = sysdate			  
		WHERE 
		        UPPER(TR_NO) = UPPER(#trNo#) AND 
		        to_char(LM_DATE, 'DDMONYY HH24:MI:SS')  = #lmDate#
	</update>
  
  	<update id="updateDMCreditFecility_STATUS" parameterClass="cargo.cms.customer.bo.MaintainCreditFecilityBO" >	
		UPDATE CUST_AGENT_DM_APP
		SET  
			STATUS = 'VOID', 
			LM_USER_ID = #lmUserId#,         
			LM_DATE = sysdate
		WHERE 
		        UPPER(TR_NO) = UPPER(#trNo#)
		        AND to_char(LM_DATE, 'DDMONYY HH24:MI:SS')  = #dmLmDate# 	
 	</update>
	
	<update id="updateAgentLevelCreditFacility_STATUS" parameterClass="cargo.cms.customer.bo.MaintainCreditFecilityBO" >	
		UPDATE CUST_AGENT_LEVEL_CRD
		SET   
			  STATUS = 'VOID', 
			  LM_USER_ID = #lmUserId#,         
			  LM_DATE = sysdate
		WHERE 
		        UPPER(TR_NO) = UPPER(#trNo#)
		        AND to_char(LM_DATE, 'DDMONYY HH24:MI:SS')  = #lmDate#
	</update>
	
	<update id="updateVirtualLevelCreditFacility_STATUS" parameterClass="cargo.cms.customer.bo.MaintainCreditFecilityBO" >	
		UPDATE CUST_AGENT_VIRTUAL_CREDIT
		SET   
			  STATUS = 'VOID',
			  LM_USER_ID = #lmUserId#,         
			  LM_DATE = sysdate		  
		WHERE 
		        UPPER(TR_NO) = UPPER(#trNo#)
	</update>
	
	<!-- End Credit Facility CR -->
	
	<!--<delete id="deleteCreditFecilityNonAwbCustNo" parameterClass="java.lang.String" >
	<![CDATA[
		DELETE FROM CUST_NON_AWB_CREDIT WHERE UPPER(CUST_NO) = UPPER(#PARAM#)						
	]]>
	</delete>	
	
	--><update id="unsetFCCVCreditByCNo" parameterClass="cargo.cms.customer.bo.MaintainCreditFecilityBO" >	
		UPDATE CUST_COMPANY
		SET  
			  VIRTUAL_CR_ACC = 'N',           
			  FIN_CODE = '',
			  LM_USER_ID = #lmUserId#,         
			  LM_DATE = sysdate
		WHERE 
		        UPPER(CODE) = UPPER(#customerNo#)
		        
	</update>
	
	<!-- check for FCC Existance*create* *Bharath* on 13-Apr-2010-->
	<select id="checkForDupFCC" parameterClass="cargo.cms.customer.bo.MaintainCreditFecilityBO" resultClass="java.lang.Integer" >
		SELECT COUNT(*) 
		FROM
			CUST_COMPANY
		WHERE
				UPPER(FIN_CODE) = UPPER(#finCustCode#)
				and UPPER(CODE) != UPPER(#customerNo#)
	</select>
	
	<!-- check for FCC Existance *update**Bharath* on 13-Apr-2010-->
	<select id="checkForDupFCCUpdate" parameterClass="cargo.cms.customer.bo.MaintainCreditFecilityBO" resultClass="java.lang.Integer" >
		SELECT COUNT(*) 
		FROM
			CUST_COMPANY
		WHERE
				UPPER(FIN_CODE) = UPPER(#finCustCode#)
				and UPPER(CODE) != UPPER(#customerNo#)
	</select>
	<!--  Credit Fecility Mantain Ends   -->
	<!-- Create Airline Contact Start -->
	<select id="sqlairlinecontacthdrdetails"   parameterClass="cargo.cms.customer.bo.AirlineContactSearchBO" resultClass="cargo.cms.customer.bo.AirlineContactSearchBO" >
		SELECT 'create' as optionCriteria,CODE as customerNo, CODE_DESC as customerName,CARR_CODE as carrierCode,d.contactTypeDesc as contactTypeDesc
		FROM  CUST_COMPANY,(SELECT a.code_Desc as contactTypeDesc FROM MAST_CODE_DTL a WHERE a.CODE_TYPE= 'AIRLINE_CONTACT' AND a.CODE=#type#) D
		WHERE AIRLINE_YN='Y' 
        <dynamic>
          <isNotEmpty prepend="AND" property="customerName">
            CODE_DESC = #customerName#
          </isNotEmpty>
          <isNotEmpty prepend="AND" property="customerNo">
            CODE = #customerNo#
          </isNotEmpty>
          <isNotEmpty prepend="AND" property="carrierDesc">
            CARR_CODE = #carrierDesc#
          </isNotEmpty>
		</dynamic>
	</select>
	<select id="sqlairlinecontacthdrFcodetails"   parameterClass="cargo.cms.customer.bo.AirlineContactSearchBO" resultClass="cargo.cms.customer.bo.AirlineContactSearchBO" >
		SELECT 'create' as optionCriteria,CODE as customerNo, CODE_DESC as customerName,CARR_CODE as carrierCode,d.contactTypeDesc as contactTypeDesc, #portName# as portName, #type# as type
		FROM  CUST_COMPANY,(SELECT a.code_Desc as contactTypeDesc FROM MAST_CODE_DTL a WHERE a.CODE_TYPE= 'AIRLINE_CONTACT' AND a.CODE=#type#) D
		WHERE AIRLINE_YN='Y' 
        <dynamic>
          <isNotEmpty prepend="AND" property="customerName">
            CODE_DESC = #customerName#
          </isNotEmpty>
          <isNotEmpty prepend="AND" property="customerNo">
            CODE = #customerNo#
          </isNotEmpty>
          <isNotEmpty prepend="AND" property="carrierDesc">
            CARR_CODE = #carrierDesc#
          </isNotEmpty>
		</dynamic>
	</select>
	<insert id="sqlairlineinsertairlinecontact" parameterClass="cargo.cms.customer.bo.AirlineContactBO" >
		INSERT INTO CUST_CONTACT
			(CUST_NO, CONTACT_TYPE, EMAIL1, EMAIL2, EMAIL3, EMAIL4, EMAIL5, FAX1, FAX2, FAX3, FAX4, FAX5, 
				CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE)
			values(#customerNo#,#type#,#email1#,#email2#,#email3#,#email4#,#email5#,
				#fax1#,#fax2#,#fax3#,#fax4#,#fax5#,#lastModUserId#,sysdate,#lastModUserId#,sysdate)
	</insert>
	<insert id="sqlairlineinsertairlineFCOcontact" parameterClass="cargo.cms.customer.bo.AirlineContactBO" >
		INSERT INTO CUST_CONTACT
			(CUST_NO, CONTACT_TYPE, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE)
			values(#customerNo#,#type#,#lastModUserId#,sysdate,#lastModUserId#,sysdate)
	</insert>
	<!-- Create Airline Contact End -->
	<select id="fetchCustCompanyNameRAForAjax" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		 	select code_desc as companyName,CO_IATA_CODE as IATACODE from CUST_COMPANY where UPPER(code_desc) like UPPER(#keySearchStr# ||'%') and ROWNUM &lt;= #maxRecFetch# AND ACTIVE = 'Y' AND AGENT_YN = 'Y' AND BLACKLISTED='N' ORDER BY code_desc    
		</select>
	<select id="fetchCustCompanyNameREGForAjax" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		 	select code_desc as companyName,CUST.CO_IATA_CODE as IATACODE from CUST_COMPANY CUST,CUST_REGISTRATION REG where UPPER(code_desc) like UPPER(#keySearchStr# ||'%') and ROWNUM &lt;= #maxRecFetch# AND ACTIVE = 'Y' AND AGENT_YN = 'Y' AND BLACKLISTED='N' AND REG.REG_PROC_ID = CUST.CODE ORDER BY code_desc    
	</select>
	
	<select id="sqlcustomernamecount"  parameterClass="cargo.cms.customer.bo.AirlineContactSearchBO" resultClass="java.lang.Integer">
		SELECT COUNT(*) as count FROM CUST_COMPANY 
		WHERE AIRLINE_YN='Y' 
		<isNotEmpty property="customerName" prepend="AND">
			UPPER(CODE_DESC) =UPPER(#customerName#)
		</isNotEmpty>
		<isNotEmpty property="carrierDesc" prepend="AND">
			UPPER(CARR_CODE) =UPPER(#carrierDesc#)
		</isNotEmpty>
		<isNotEmpty property="customerNo" prepend="AND">
			UPPER(CODE) =UPPER(#customerNo#)
		</isNotEmpty>
   	</select>
   	<!--PAY_CRITERIA = 'Y'  removed issue-782-->
		<select id="fetchCompNameForConsigneeAjax" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	 	select code_desc as agentName from CUST_COMPANY where UPPER(code_desc) like UPPER(#keySearchStr# ||'%') and ROWNUM &lt;= #maxRecFetch# and active = 'Y' AND agent_yn = 'Y' AND blacklisted = 'N' ORDER BY code_desc    
	</select>
	<!--		Added by Mahesh BN for Assign HAWB to AWB Starts-->
		<select id="AssignHAWBList" parameterClass="cargo.cms.hawb.bo.AssignHAWBBO" resultClass="cargo.cms.hawb.bo.AssignHAWBBO">
			select t2.awb_no awbNo,t2.agent_code agentCode,
	        decode(substr(t2.AWB_NO,0,3)||'-'||substr(t2.AWB_NO,4),'-','',substr(t2.AWB_NO,0,3)||'-'||substr(t2.AWB_NO,4)) as awbDisp,
	        t2.dest awbDest , t2.hawb_no hawb,
	        t2.hawb_pcs  pc, t2.hawb_wt wt, t2.orig org , t2.dest dest,
	        (SELECT CODE_DESC FROM CUST_COMPANY WHERE CODE=t2.CSGN_CODE) consignee,
	        t2.SPL_CODE1 || DECODE(t2.SPL_CODE2,NULL,'',','||t2.SPL_CODE2)
	        || DECODE(t2.SPL_CODE3,NULL,'',','||t2.SPL_CODE3)  AS shc,NVL(t2.ASSIGN_MANUAL_YN,'N') assignManual, t2.remarks remarks,t2.flow flow
	        from asv_hawb t2  
	        where 1=1
          <isNotEmpty prepend="AND" property="agent">
           	<isNotEqual property="agent" compareValue="">
             	t2.agent_code=(SELECT CODE  FROM CUST_COMPANY WHERE CODE_DESC=#agent#) 
             </isNotEqual>
           </isNotEmpty>
           <isNotEmpty prepend="AND" property="agentCode">
           	<isNotEqual property="agentCode" compareValue="">
             	t2.agent_code=#agentCode#
             </isNotEqual>
           </isNotEmpty>
           <isNotEmpty prepend="AND" property="awbNo">
             <isNotEqual property="awbNo" compareValue="">
             	t2.awb_no=#awbNo#
             </isNotEqual>
           </isNotEmpty>
          <isNotEmpty prepend="AND" property="dest">
            <isNotEqual property="dest" compareValue="">
             	t2.dest=#dest#
             </isNotEqual>
          </isNotEmpty>
          <isNotEmpty prepend="AND" property="consignee">
              <isNotEqual property="consignee" compareValue="">
             	t2.CSGN_CODE=(SELECT CODE  FROM CUST_COMPANY WHERE CODE_DESC=#consignee#)
              </isNotEqual>
           </isNotEmpty>
           <isNotEmpty prepend="AND" property="shc">
           	 <isNotEqual property="shc" compareValue="">
             	(t2.SPL_CODE1=#shc# or t2.SPL_CODE2=#shc# or t2.SPL_CODE3=#shc#)
             </isNotEqual>
           </isNotEmpty> 
		 </select>
		<select id="AssignHAWBValidateInvPcs" parameterClass="cargo.cms.hawb.bo.AssignHAWBBO" resultClass="java.lang.String">
		 	select nvl(sum(locn_pcs),0) from asv_inventory  where hawb_no=#hawb#
	    </select>
  		<select id="AssignHAWBValidateInvPcs1" parameterClass="cargo.cms.hawb.bo.AssignHAWBBO" resultClass="java.lang.String">
  			select recd_pcs from asv_hawb where hawb_no=#hawb#
	  	 </select>
	   <select id="AssignHAWBValidateeRcl" parameterClass="cargo.cms.hawb.bo.AssignHAWBBO" resultClass="java.lang.String">
		 select count(*) from (
	        select hawb_no as Count  
			from exp_rcl_uld_manf 
			where hawb_no=#hawb#
    	 UNION
	        select hawb_no as Count  
			from exp_pre_rcl_uld_manf 
			where hawb_no=#hawb#)
	  </select>
	  <select id="AssignHAWBValidateDocAccept" parameterClass="cargo.cms.hawb.bo.AssignHAWBBO" resultClass="java.lang.String">
	    select NVL(docacc_yn,'N') as doAccVal from awb
		Where awb_no=#awbNo# and rownum=1
	  </select>
	  <select id="AssignHAWBValidateAgentCode" parameterClass="cargo.cms.hawb.bo.AssignHAWBBO" resultClass="cargo.cms.hawb.bo.AssignHAWBBO">  
	    select distinct agent_code agentCode 
		from asv_Inventory
		where awb_no= #awbNo#
	 </select> 
	  <update id="UpdateAsvInventoryforAssign" parameterClass="cargo.cms.hawb.bo.AssignHAWBBO" >
	    update asv_hawb
		set awb_no=#awbNo#,
			awb_date=trim(sysdate),
			ASSIGN_MANUAL_YN='Y',
			TR_TYPE='AWBAN',
			remarks=#remarks#,
			lm_user_id=#userID#,
			lm_date=sysdate
		where hawb_no=#hawb#
		and agent_code=#agentCode#
	</update>
	 <update id="UpdateAsvInventoryforAssign1" parameterClass="cargo.cms.hawb.bo.AssignHAWBBO" >
	    update asv_inventory
		set awb_no=#awbNo#,
			awb_date=trim(sysdate),
			lm_user_id=#userID#,
			lm_date=sysdate
		where hawb_no=#hawb#
		and agent_code=#agentCode#
	</update>
	 <update id="UpdateAsvInventoryforDelAssign" parameterClass="cargo.cms.hawb.bo.AssignHAWBBO" >
	    update asv_hawb
		set awb_no='',
			awb_date='',
			TR_TYPE='AWBAN',
			remarks=#remarks#,
			lm_user_id=#userID#,
			lm_date=sysdate
		where hawb_no=#hawb#
		and agent_code=#agentCode#
	</update>
	<update id="UpdateAsvInventoryforDelAssign1" parameterClass="cargo.cms.hawb.bo.AssignHAWBBO" >
	    update asv_inventory
		set awb_no='',
		awb_date='',
		lm_user_id=#userID#,
		lm_date=sysdate
		where hawb_no=#hawb#
		and agent_code=#agentCode#
	</update>
	<select id="sqlAgentNameValidation" parameterClass="cargo.cms.hawb.bo.AssignHAWBBO" resultClass="java.lang.String"> 
		 SELECT code_desc FROM cust_company
		 where agent_yn='Y' 
		 AND ACTIVE = 'Y' 
		 AND BLACKLISTED='N' 
		 and code_desc=#agent#
	 </select>
	 <select id="sqlAgentCodeValidation" parameterClass="cargo.cms.hawb.bo.AssignHAWBBO" resultClass="java.lang.String"> 
		 SELECT code FROM cust_company
		 where code=#agentCode# and rownum=1
	 </select>
	 <select id="sqlConsigneeValidation" parameterClass="cargo.cms.hawb.bo.AssignHAWBBO" resultClass="java.lang.String"> 
		 SELECT code_desc FROM cust_company
		 where cons_yn='Y' AND ACTIVE = 'Y'
		 and code_desc=#consignee#
	 </select>
	 <select id="sqlAWBValidation" parameterClass="cargo.cms.hawb.bo.AssignHAWBBO" resultClass="java.lang.String">
	 	select awb_no from Awb_inventory where awb_no=#awbNo# and rownum=1 
	 </select>
	 <select id="sqlDestValidation" parameterClass="cargo.cms.hawb.bo.AssignHAWBBO" resultClass="java.lang.String">
	 	SELECT CODE FROM MAST_ARPT where CODE=#dest#
	 </select>
	 <select id="sqlshcValidation" parameterClass="cargo.cms.hawb.bo.AssignHAWBBO" resultClass="java.lang.String">
	 	select code from mast_spl_hand_code where code=#shc#
	 </select>
	<select id="sqlgetForediFHLtoediFHL" parameterClass="java.lang.String" resultClass="java.util.HashMap"> 
	        select * from edi_fhl
			where tr_no in (select tr_no 
			                 from edi_fhl_hawb 
			                 where hawb_no=#hawb#)
	</select>
	<select id="sqlgetForediFHLHAWBtoediFHLHAWB"  parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	    select * 
		from edi_fhl_hawb
		where tr_no=#TR_NO# and HAWB_no=#HAWB_NO#
	</select>
	<select id="sqlGetediFhlSeqNo"  parameterClass="java.lang.String" resultClass="java.lang.String">
		select EDI_FHL_SEQ.nextval from dual
	</select>
	<insert id="sqlInsertForediFHLtoediFHL" parameterClass="java.util.HashMap">
	insert into edi_fhl 
	(
		TR_NO,
		MSG_SEQ_NUM,
		MSG_VER,
		SI_TYPE,
		COPY_NO,
		AWB_NO,
		AWB_DATE,
		AWB_ORG,
		AWB_DEST,
		AWB_PCS,
		AWB_WT,
		AWB_WT_CODE,
		PART_SHMPT_YN,
		TOTAL_COUNT,
		FHL_STATUS,
		SUCCESS_MSGS,
		LM_USER_ID,
		LM_DATE,
		LM_VER,
		FLT_CARR,
		FLT_NO,
		FLT_ETA_DATE,
		FLT_ETA_TIME,
		FLT_DATE,
		FLT_TYPE,
		HBS_SLAC,
		HTS_COMM_CODE1,
		HTS_COMM_CODE2,
		HTS_COMM_CODE3,
		HTS_COMM_CODE4,
		HTS_COMM_CODE5,
		HTS_COMM_CODE6,
		HTS_COMM_CODE7,
		HTS_COMM_CODE8,
		HTS_COMM_CODE9,
		FHL_OWNER,
		IMP_EXP_IND,
		CR_USER_ID,
		CR_DATE,
		TRANSMISSIONDATE,
		TRANSMISSIONTIME
	)
	values
	(
		#TR_NO#,       
		#MSG_SEQ_NUM#,        
		#MSG_VER#,              
		#SI_TYPE#,          
		#COPY_NO#,               
		#AWB_NO#,          
		#AWB_DATE#,           
		#AWB_ORG#,          
		#AWB_DEST#,          
		#AWB_PCS#,           
		#AWB_WT#,             
		#AWB_WT_CODE#,          
		#PART_SHMPT_YN#,     
		#TOTAL_COUNT#,             
		#FHL_STATUS#,         
		#SUCCESS_MSGS#,        
		#LM_USER_ID#,        
		sysdate,                
		#LM_VER#,              
		#FLT_CARR#,          
		#FLT_NO#,       
		#FLT_ETA_DATE#,                
		#FLT_ETA_TIME#,                 
		#FLT_DATE#,                
		#FLT_TYPE#,         
		#HBS_SLAC#,              
		#HTS_COMM_CODE1#,       
		#HTS_COMM_CODE2#,       
		#HTS_COMM_CODE3#,        
		#HTS_COMM_CODE4#,       
		#HTS_COMM_CODE5#,        
		#HTS_COMM_CODE6#,       
		#HTS_COMM_CODE7#,        
		#HTS_COMM_CODE8#,         
		#HTS_COMM_CODE9#,    
		#FHL_OWNER#,        
		#IMP_EXP_IND#,       
		#CR_USER_ID#,         
		sysdate,                
		#TRANSMISSIONDATE#,                
		#TRANSMISSIONTIME#
	)
	</insert>
	<insert id="sqlInsertForediFHLHAWBtoediFHLHAWB" parameterClass="java.util.HashMap">
	insert into edi_fhl_hawb 
	(
		TR_NO,DOC_LINE_NO,HAWB_NO,HAWB_ORG,HAWB_DEST,HAWB_PCS,HAWB_NET_WT,HAWB_WT_CODE,FREE_TEXT_DESC1,FREE_TEXT_DESC2,
		FREE_TEXT_DESC3,FREE_TEXT_DESC4,FREE_TEXT_DESC5,FREE_TEXT_DESC6,FREE_TEXT_DESC7,FREE_TEXT_DESC8,FREE_TEXT_DESC9,
		SPL_CODE1,SPL_CODE2,SPL_CODE3,SPL_CODE4,SPL_CODE5,SPL_CODE6,SPL_CODE7,SPL_CODE8,MANIFEST_DESC,SHPR_NAME,
		SHPR_ADD1,SHPR_ADD2,SHPR_ADD3,SHPR_ADD4,SHPR_ADD5,SHPR_PLACE,SHPR_CTRY_CODE,SHPR_STATE_PROVINCE,SHPR_PIN_CODE,
		SHPR_CONT_ID,SHPR_CONT_N,CSGNE_NAME,CSGNE_ADD1,CSGNE_ADD2,CSGNE_ADD3,CSGNE_ADD4,CSGNE_ADD5,CSGNE_PLACE,
		CSGNE_CTRY_CODE,CSGNE_STATE_PROVINCE,CSGNE_PIN_CODE,CSGNE_CONT_ID,CSGNE_CONT_N,NFY_NAME,NFY_ADD1,NFY_ADD2,
		NFY_ADD3,NFY_ADD4,NFY_ADD5,NFY_PLACE,NFY_CTRY_CODE,NFY_PIN_CODE,NFY_CONT_ID,NFY_CONT_N,NFY_LICENSE1,NFY_LICENSE2,
		NFY_LICENSE3,NFY_LICENSE4,NFY_LICENSE5,NFY_PERMIT1,NFY_PERMIT2,NFY_PERMIT3,NFY_PERMIT4,NFY_PERMIT5,DECLN_CURR_CODE,
		DECLN_WT_VALN_PPCC_I,DECLN_OTH_CHRG_PPCC_I,DECLN_CARR,DECLN_CTM,DECLN_INSURCE,DECLN_FREE_TEXT,ACCS_I,SOURCE,
		RMK_CTM,FHL_OWNER,LM_USER_ID,LM_DATE,LM_VER,RMK,NFY_LICENSE6,NFY_LICENSE7,NFY_LICENSE8,NFY_LICENSE9,NFY_PERMIT6,
		NFY_PERMIT7,NFY_PERMIT8,NFY_PERMIT9,HBS_SLAC,HTS_COMM_CODE1,HTS_COMM_CODE2,HTS_COMM_CODE3,HTS_COMM_CODE4,HTS_COMM_CODE5,
		HTS_COMM_CODE6,HTS_COMM_CODE7,HTS_COMM_CODE8,HTS_COMM_CODE9,CONS_CODE,SUBMIT_DATE,NATURE_OF_GOODS,TYPE_OF_PACKAGE,
		VALUE_DECL1,VALUE_DECL2,VALUE_DECL3,VALUE_DECL4,VALUE_DECL5,VALUE_DECL6,VALUE_DECL7,VALUE_DECL8,VALUE_DECL9,VALUE_DECL10,
		CR_USER_ID,CR_DATE,FLT_KEY,FLT_DATE,TRANSMISSIONDATE,TRANSMISSIONTIME,CHARGE_AGENT,IMG_TRANS_ID
	)
	values
	(
		#TR_NO#,                                                                                                                                                                              
		#DOC_LINE_NO#,                                                                                                                                                                                   
		upper(#HAWB_NO#),                                                                                                                                                                                 
		upper(#HAWB_ORG#),                                                                                                                                                                                 
		upper(#HAWB_DEST#),                                                                                                                                                                                 
		#HAWB_PCS#,                                                                                                                                                                                       
		#HAWB_NET_WT#,                                                                                                                                                                                        
		upper(#HAWB_WT_CODE#),                                                                                                                                                                                 
		upper(#FREE_TEXT_DESC1#),                                                                                                                                                                                
		upper(#FREE_TEXT_DESC2#),                                                                                                                                                                                 
		upper(#FREE_TEXT_DESC3#),                                                                                                                                                                                 
		upper(#FREE_TEXT_DESC4#),                                                                                                                                                                                
		upper(#FREE_TEXT_DESC5#),                                                                                                                                                                                  
		upper(#FREE_TEXT_DESC6#),                                                                                                                                                                                 
		upper(#FREE_TEXT_DESC7#),                                                                                                                                                                                
		upper(#FREE_TEXT_DESC8#),                                                                                                                                                                                
		upper(#FREE_TEXT_DESC9#),                                                                                                                                                                                 
		upper(#SPL_CODE1#),                                                                                                                                                                                  
		upper(#SPL_CODE2#),                                                                                                                                                                                  
		upper(#SPL_CODE3#),
		upper(#SPL_CODE4#),
		upper(#SPL_CODE5#),
		upper(#SPL_CODE6#),
		upper(#SPL_CODE7#),
		upper(#SPL_CODE8#),
		upper(#MANIFEST_DESC#),
		upper(#SHPR_NAME#),
		upper(#SHPR_ADD1#),
		upper(#SHPR_ADD2#),                                                                                              
		upper(#SHPR_ADD3#),                                                                                              
		upper(#SHPR_ADD4#),                                                                                              
		upper(#SHPR_ADD5#),                                                                                              
		upper(#SHPR_PLACE#),
		upper(#SHPR_CTRY_CODE#),
		upper(#SHPR_STATE_PROVINCE#),
		upper(#SHPR_PIN_CODE#),
		upper(#SHPR_CONT_ID#),
		upper(#SHPR_CONT_N#),
		upper(#CSGNE_NAME#),                                                                                             
		upper(#CSGNE_ADD1#),                                                                                             
		upper(#CSGNE_ADD2#),                                                                                             
		upper(#CSGNE_ADD3#),                                                                                             
		upper(#CSGNE_ADD4#),                                                                                             
		upper(#CSGNE_ADD5#),                                                                                             
		upper(#CSGNE_PLACE#),                                                                                                                                                                                
		upper(#CSGNE_CTRY_CODE#),
		upper(#CSGNE_STATE_PROVINCE#),
		upper(#CSGNE_PIN_CODE#),
		upper(#CSGNE_CONT_ID#),
		upper(#CSGNE_CONT_N#),
		upper(#NFY_NAME#),
		upper(#NFY_ADD1#),
		upper(#NFY_ADD2#),
		upper(#NFY_ADD3#),
		upper(#NFY_ADD4#),
		upper(#NFY_ADD5#),
		upper(#NFY_PLACE#),                                                                                              
		upper(#NFY_CTRY_CODE#),                                                                                          
		upper(#NFY_PIN_CODE#),
		upper(#NFY_CONT_ID#),                                                                                          
		upper(#NFY_CONT_N#),                                                                                             
		upper(#NFY_LICENSE1#),                                                                                           
		upper(#NFY_LICENSE2#),                                                                                           
		upper(#NFY_LICENSE3#),                                                                                           
		upper(#NFY_LICENSE4#),                                                                                           
		upper(#NFY_LICENSE5#),                                                                                           
		upper(#NFY_PERMIT1 #),                                                                                           
		upper(#NFY_PERMIT2 #),                                                                                           
		upper(#NFY_PERMIT3 #),                                                                                           
		upper(#NFY_PERMIT4 #),                                                                                           
		upper(#NFY_PERMIT5 #),                                                                                           
		upper(#DECLN_CURR_CODE#),                                                                                                                                                                                
		upper(#DECLN_WT_VALN_PPCC_I#),                                                                                                                                                                                  
		upper(#DECLN_OTH_CHRG_PPCC_I#),                                                                                                                                                                                
		upper(#DECLN_CARR#),                                                                                                                                                                                 
		upper(#DECLN_CTM#),                                                                                                                                                                                
		upper(#DECLN_INSURCE#),                                                                                                                                                                               
		upper(#DECLN_FREE_TEXT#),                                                                                                                                                                                
		upper(#ACCS_I#),                                                                                                                                                                                
		upper(#SOURCE#),                                                                                                                                                                                
		upper(#RMK_CTM#),                                                                                                                                                                                
		upper(#FHL_OWNER#),                                                                                                                                                                                
		upper(#LM_USER_ID#),                                                                                                                                                                             
		sysdate,                                                                                                                                                                                         
		#LM_VER#,                                                                                                                                                                                 
		upper(#RMK#),                                                         
		upper(#NFY_LICENSE6#),                                                                                           
		upper(#NFY_LICENSE7#),                                                                                           
		upper(#NFY_LICENSE8#),                                                                                           
		upper(#NFY_LICENSE9#),                                                                                           
		upper(#NFY_PERMIT6#),                                                                                           
		upper(#NFY_PERMIT7#),                                                                                           
		upper(#NFY_PERMIT8#),                                                                                           
		upper(#NFY_PERMIT9#),                                                                                           
		upper(#HBS_SLAC#),                                                                                            
		upper(#HTS_COMM_CODE1#),                                                                                         
		upper(#HTS_COMM_CODE2#),                                                                                         
		upper(#HTS_COMM_CODE3#),                                                                                         
		upper(#HTS_COMM_CODE4#),                                                                                         
		upper(#HTS_COMM_CODE5#),                                                                                         
		upper(#HTS_COMM_CODE6#),                                                                                         
		upper(#HTS_COMM_CODE7#),                                                                                         
		upper(#HTS_COMM_CODE8#),                                                                                         
		upper(#HTS_COMM_CODE9#),                                                                                         
		upper(#CONS_CODE#),                                                                                          
		upper(#SUBMIT_DATE#),                                                                                                                                                                                       
		upper(#NATURE_OF_GOODS#),                                                                                                                                                                               
		upper(#TYPE_OF_PACKAGE#),                                                                                                                                                                              
		upper(#VALUE_DECL1#),                                                                                            
		upper(#VALUE_DECL2#),                                                                                            
		upper(#VALUE_DECL3#),                                                                                            
		upper(#VALUE_DECL4#),                                                                                            
		upper(#VALUE_DECL5#),                                                                                            
		upper(#VALUE_DECL6#),                                                                                            
		upper(#VALUE_DECL7#),                                                                                            
		upper(#VALUE_DECL8#),                                                                                            
		upper(#VALUE_DECL9#),                                                                                            
		upper(#VALUE_DECL10#),                                                                                                                                                                                       
		upper(#CR_USER_ID#),                                                                                                                                                                                
		sysdate,                                                                                                                                                                                        
		upper(#FLT_KEY#),                                                                                              
		#FLT_DATE#,                                                                                                                                                                                        
		upper(#TRANSMISSIONDATE#),                                                                                                                                                                                        
		upper(#TRANSMISSIONTIME#),                                                                                                                                                                                      
		upper(#CHARGE_AGENT#),                                                                                                                                                                             
		upper(#IMG_TRANS_ID#)
		)
	</insert>
	<select id="sqlgetTrNoForDelete"  parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	   select distinct tr_no from edi_fhl		
	   where tr_no in (select tr_no 			             
	                   from edi_fhl_hawb 			                 
	                   where hawb_no=#HAWB_NO#)	
	   and awb_no=#AWB_NO#
   </select>
   <delete id="sqldelTrNoFromEdiFhlHawb"  parameterClass="java.lang.String">
  	 delete from edi_fhl_hawb where tr_no=#trNo#
   </delete>
   <delete id="sqldelTrNoFromEdiFhl"  parameterClass="java.lang.String">
  	 delete from edi_fhl where tr_no=#trNo#
  </delete>
	<!--		Added by Mahesh BN for HAWB - Assign HAWB to AWB End-->
	
	<!--		Added by Mahesh BN for HAWB - Create Picking Orer Starts-->
	 <select id="sqlgetPickingOrderList" parameterClass="cargo.cms.hawb.bo.CreatePickingOrderBO" resultClass="cargo.cms.hawb.bo.CreatePickingOrderBO">	
			select distinct         
			t2.awb_no awbNo,           
			decode(substr(t2.AWB_NO,0,3)||'-'||substr(t2.AWB_NO,4),'-','',substr(t2.AWB_NO,0,3)||'-'||substr(t2.AWB_NO,4)) as awbDisp,            
			t2.hawb_no hawbNo,
			t2.hawb_pcs  hawbPc,
			t2.hawb_wt hawbWt,
			NVL(t2.recd_pcs,0)-NVL(T.PO_PCS,0) invPc,
			NVL(t2.recd_wt,0)-NVL(T.PO_WT,0) invWt,
			t2.SPL_CODE1 || DECODE(t2.SPL_CODE2,NULL,'',','||t2.SPL_CODE2)
			|| DECODE(t2.SPL_CODE3,NULL,'',','||t2.SPL_CODE3)  AS shc, 
			(SELECT CODE_DESC FROM CUST_COMPANY WHERE CODE=t2.CSGN_CODE) consignee,
			(SELECT CODE_DESC FROM CUST_COMPANY WHERE CODE=t2.AGENT_CODE) agentName,
			t2.AGENT_CODE agentCode,
			to_char(t2.awb_date,'DDMONYY') awbDate,
			#userID# userID
			from asv_hawb t2 
			<![CDATA[
			LEFT JOIN(SELECT A.hawb_no hawb_no,A.AGENT_CODE AGENT_CODE,SUM(LOCN_PCS) PO_PCS, SUM(LOCN_WT) PO_WT  FROM asv_inventory A WHERE PO_NO IS NOT NULL 
			 GROUP BY A.hawb_no ,A.AGENT_CODE)T
			 ]]>
			 ON t2.HAWB_NO = T.HAWB_NO AND t2.AGENT_CODE = T.AGENT_CODE
			where t2.hawb_no not in (select t3.hawb_no 
                  from  asv_pick_order_dtl t3 		
                  join asv_pick_order_hd t4 on t3.po_no= t4.po_no AND t4.status='Complete'
                  where t3.hawb_no=t2.hawb_no and t3.agent_code=t2.agent_code)
			<isNotEmpty prepend="AND" property="awbNo">
			      <isNotEqual property="awbNo" compareValue="">
			             	t2.awb_no=#awbNo#
			     </isNotEqual>
			 </isNotEmpty>
			<isNotEmpty prepend="AND" property="hawbNo">
			      <isNotEqual property="hawbNo" compareValue="">
			             	t2.hawb_no=#hawbNo#
			      </isNotEqual>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="consignee">
			      <isNotEqual property="consignee" compareValue="">
			             	t2.CSGN_CODE=(SELECT CODE  FROM CUST_COMPANY WHERE CODE_DESC=#consignee#)    
			      </isNotEqual>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="agentCode">
			      <isNotEqual property="agentCode" compareValue="">
			             	t2.agent_code=#agentCode#
			      </isNotEqual>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="shc">
			       <isNotEqual property="shc" compareValue="">
			             	(t2.SPL_CODE1=#shc# or t2.SPL_CODE2=#shc# or t2.SPL_CODE2=#shc#)
			       </isNotEqual>
			</isNotEmpty> 
			<isNotEmpty prepend="AND" property="agentName">
			     <isNotEqual property="agentName" compareValue="">
			             	t2.agent_code=(SELECT CODE  FROM CUST_COMPANY WHERE CODE_DESC=#agentName#) 
			      </isNotEqual>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="purpose">
			     <isEqual property="purpose" compareValue="HRF">
			             t2.flow='I' and t2.dest='HKG'
			     </isEqual>
			     <isNotEqual property="purpose" compareValue="HRF">
			             (t2.Flow='E' or t2.Flow='T') or (t2.Flow='I' and t2.dest!='HKG')
			     </isNotEqual>
			</isNotEmpty>
		</select>

		<select id="sqlgetPickingOrderLocnList" parameterClass="cargo.cms.hawb.bo.CreatePickingOrderBO" resultClass="cargo.cms.hawb.bo.CreatePickingOrderBO">	
			select 
			NVL(#selLoc#,'N') isSel,
			hawb_no hawbNo,
			agent_code agentCode,
			awb_no awbNo,
			LSP_NO lspNo, 
			uld_key uldKey,
			nvl(LSP_NO,uld_key) lspUld, 
			loc_code locnCode,
			locn_pcs locnPc,
			locn_wt locnWt,
			seq_no seqNo,
			#userID# userID
			from asv_inventory
			where hawb_no=#hawbNo# and agent_code=#agentCode# and po_no is null
		</select>
		<select id="sqlGetPONoForSave" parameterClass="java.lang.String" resultClass="java.lang.String">
			select PO_NO_SEQ.NEXTVAL from dual
		</select>
		<insert id="sqlInsertPickOrderDtl" parameterClass="cargo.cms.hawb.bo.CreatePickingOrderBO" >
			INSERT INTO asv_pick_order_dtl
			(
				PO_NO,
				HAWB_NO,
				AGENT_CODE,
				CR_USER_ID,
				CR_DATE,
				LM_USER_ID,
				LM_DATE
			)
			values
			(
				#poNo#,
				#hawbNo#,
				#agentCode#,
				#userID#, 
				sysdate,
				#userID#,
				sysdate
			)
		</insert>
		<insert id="sqlInsertPickOrderHd" parameterClass="cargo.cms.hawb.bo.CreatePickingOrderBO" >
			INSERT INTO ASV_PICK_ORDER_HD
			(
				PO_NO,
				PO_DATE,
				PURPOSE,
				TRUCK_NO,
				TARGET,
				DLV_TO,
				DLV_TO_HKID,
				DOC_REF_NO,
				ULD_KEY,
				STATUS,
				COMPL_USER,
				COMPL_DATE,
				CR_USER_ID,
				CR_DATE,
				LM_USER_ID,
				LM_DATE
			)
			values
			(
				#poNo#,
				sysdate,
				#purpose#,
				#truckNo#,
				#target#,
				#dlvTo#,  
				#hkld#,  
				#docRefNo#, 
				#uldKey#,  
				decode(#purpose#,'BUP','COMPLETE','ISSUED'),
				decode(#purpose#,'BUP',#userID#,null),
				decode(#purpose#,'BUP',sysdate,null),
				#userID#, 
				sysdate,
				#userID#,
				sysdate
			)
		</insert>
		<insert id="sqlInsertPickOrderHd1" parameterClass="cargo.cms.hawb.bo.CreatePickingOrderBO" >
			INSERT INTO ASV_PICK_ORDER_HD
			(
				PO_NO,
				PO_DATE,
				PURPOSE,
				TRUCK_NO,
				TARGET,
				DLV_TO,
				DLV_TO_HKID,
				DOC_REF_NO,
				ULD_KEY,
				STATUS,
				CR_USER_ID,
				CR_DATE,
				LM_USER_ID,
				LM_DATE
			)
			values
			(
				#poNo#,
				sysdate,
				#purpose#,
				#truckNo#,
				#target#,
				#dlvTo#,  
				#hkld#,  
				#docRefNo#, 
				#uldKey#,  
				#status#,
				#userID#, 
				sysdate,
				#userID#,
				sysdate
			)
		</insert>
		<insert id="sqlInsertPickOrderLocn" parameterClass="cargo.cms.hawb.bo.CreatePickingOrderBO" >
			INSERT INTO ASV_PICK_ORDER_LOCN
			(
				PO_NO, 
				HAWB_NO, 
				AGENT_CODE,
				DOC_LINE_NO, 
				SEQ_NO,
				LSP_NO, 
				ULD_KEY,
				LOC_CODE,
				LOCN_PCS,
				LOCN_WT,
				DLV_PCS,
				DLV_WT,
				CR_USER_ID, 
				CR_DATE, 
				LM_USER_ID, 
				LM_DATE 
			)
			VALUES
			(
				#poNo#,
				#hawbNo#,
				#agentCode#,
				#docLineNo#,
				#seqNo#, 
				#lspNo#, 
				#uldKey#,
				#locnCode#,
				#locnPc#,
				#locnWt#,
				#invPc#,
				#invWt#,
				#userID#, 
				sysdate,
				#userID#,
				sysdate
			)
		</insert>
		
		<update id="sqlUpdatePoNoAsvInv" parameterClass="cargo.cms.hawb.bo.CreatePickingOrderBO" >
			UPDATE ASV_INVENTORY 
			SET PO_NO = #poNo#
			WHERE SEQ_NO = #seqNo#
		</update>
		
		<select id="sqlAgentNameValidation1" parameterClass="cargo.cms.hawb.bo.CreatePickingOrderBO" resultClass="java.lang.String"> 
			 SELECT code_desc FROM cust_company
			 where agent_yn='Y' 
			 and code_desc=#agentName#
	 	</select>
	 	<select id="sqlAgentCodeValidation1" parameterClass="cargo.cms.hawb.bo.CreatePickingOrderBO" resultClass="java.lang.String"> 
			 SELECT code FROM cust_company
			 where agent_yn='Y' 
			 and code=#agentCode#
	 	</select>
	 	<select id="sqlConsigneeValidation1" parameterClass="cargo.cms.hawb.bo.CreatePickingOrderBO" resultClass="java.lang.String"> 
			 SELECT code_desc FROM cust_company
			 where cons_yn='Y' 
			 and code_desc=#consignee#
	 	</select>
	 	<select id="sqlshcValidation1" parameterClass="cargo.cms.hawb.bo.CreatePickingOrderBO" resultClass="java.lang.String">
	 		select code from mast_spl_hand_code where code=#shc#
	 	</select>
	 	<select id="sqlHAWBValidation1" parameterClass="cargo.cms.hawb.bo.CreatePickingOrderBO" resultClass="java.lang.String">
			select hawb_no as hawb from asv_inventory
			where hawb_no=#hawbNo# and rownum=1
		</select>
		
		<select id="sqlHawbIsInAsvHawb" parameterClass="cargo.cms.hawb.bo.CreatePickingOrderBO" resultClass="java.lang.Integer">
			select count(1) as hawb from asv_hawb where hawb_no=#hawbNo#
		</select>
		
		<select id="sqlHawbIsInAsvInv" parameterClass="cargo.cms.hawb.bo.CreatePickingOrderBO" resultClass="java.lang.Integer">
			select count(1) as hawb from asv_inventory where hawb_no=#hawbNo#
		</select>
		
		<select id="sqlgetPONoForRep" parameterClass="cargo.cms.hawb.bo.CreatePickingOrderBO" resultClass="java.lang.String">
			SELECT max(PO_NO) as poNo
			FROM ASV_PICK_ORDER_DTL
			where hawb_no=#hawbNo#
		</select>
		<select id="sqlValidateLspLocked" parameterClass="java.lang.String" resultClass="java.lang.String">
			select LOCKED from lsp_inventory
			where lsp_no=#lspNo#
		</select>
		<select id="sqlValidateULDLocked" parameterClass="java.lang.String" resultClass="java.lang.String">
			select LOCKED from uld_inventory
			where uld_key=#uldKey#
		</select>
		<select id="sqlValidatePOStatus" parameterClass="cargo.cms.hawb.bo.CreatePickingOrderBO" resultClass="cargo.cms.hawb.bo.CreatePickingOrderBO">
		 select t4.status  status
		 from asv_pick_order_dtl t3 join asv_pick_order_hd t4 on t3.po_no= t4.po_no 
		 where t3.hawb_no=#hawbNo# and t3.agent_code=#agentCode#
		</select> 
		
		<select id="sqlHawbPoNoReptHd"  parameterClass="java.lang.String" resultClass="cargo.cms.hawb.bo.CreatePickingOrderBO" >
		SELECT 	PO_NO poNo,
				PURPOSE purpose,
				TARGET target,
				DLV_TO dlvTo,
				DLV_TO_HKID hkld,
				DOC_REF_NO docRefNo,
				ULD_KEY uldKey,
				STATUS status
		FROM ASV_PICK_ORDER_HD WHERE PO_NO = #poNo#
		</select>
		
		<select id="sqlHawbPoNoReptLocList"  parameterClass="java.lang.String" resultClass="cargo.cms.hawb.bo.CreatePickingOrderBO" >
		SELECT 	PICK.PO_NO poNo, 
				PICK.HAWB_NO hawbNo, 
				PICK.AGENT_CODE agentCode,
				nvl(PICK.LSP_NO,PICK.ULD_KEY) lspUld, 
				PICK.LOC_CODE locnCode,
				PICK.LOCN_PCS||'/'||PICK.LOCN_WT locnPc,
        decode(HWB.AWB_NO,null,'',substr(HWB.AWB_NO,0,3)||'-'||substr(HWB.AWB_NO,4)) awbNo,
        (select code_desc from cust_company where code = PICK.AGENT_CODE) agentName,
        decode(HWB.CSGN_CODE,null,HWB.USER_CSGN_SHPR,(select code_desc from cust_company where code =HWB.CSGN_CODE )) shprCnsgn,
        spl_code1 splCode1,
        spl_code2 splCode2,
        spl_code3 splCode3
  		FROM ASV_PICK_ORDER_LOCN PICK  JOIN ASV_HAWB  HWB ON  PICK.HAWB_NO = HWB.HAWB_NO AND PICK.AGENT_CODE = HWB.AGENT_CODE
   		 WHERE PICK.PO_NO = #poNo#
		</select>
		
	<!--		Added by Mahesh BN for HAWB - Create Picking Orer End-->
	
    <!--		Added by Mahesh BN for HAWB - Enquire Agent HAWB Inventory Starts-->
	 	<select id="sqlValAreaForEnqAgtHAWBInv" parameterClass="cargo.cms.hawb.bo.EnquireAgentHAWBBO" resultClass="java.lang.String"> 
			 select wh_area as area 
			 from mast_wh_area
			 where wh_area=#area#
	 	</select>
	 	<select id="sqlValGrpForEnqAgtHAWBInv" parameterClass="cargo.cms.hawb.bo.EnquireAgentHAWBBO" resultClass="java.lang.String">
			select wh_group as cgroup from mast_wh_group where wh_group= #group# and rownum=1 
     	</select>
		<select id="sqlValLocForEnqAgtHAWBInv" parameterClass="cargo.cms.hawb.bo.EnquireAgentHAWBBO" resultClass="java.lang.String">
			select code as location from mast_wh_loc where code=#location# and rownum=1 
	   	</select>
		<select id="sqlValAgtForEnqAgtHAWBInv" parameterClass="cargo.cms.hawb.bo.EnquireAgentHAWBBO" resultClass="java.lang.String"> 
			 select code_desc FROM cust_company
			 where agent_yn='Y' 
			 and code_desc=#agent#
	 	</select>
	 	<select id="sqlValHAWBForEnqAgtHAWBInv" parameterClass="cargo.cms.hawb.bo.EnquireAgentHAWBBO" resultClass="java.lang.String">
			select hawb_no as hawb from asv_inventory
			where hawb_no=#hawb# and rownum=1 
		</select>
	 	<select id="sqlValAWBForEnqAgtHAWBInv" parameterClass="cargo.cms.hawb.bo.EnquireAgentHAWBBO" resultClass="java.lang.String">
	 		select awb_no from Awb_inventory where awb_no=#awb# and rownum=1 
		</select>
		<select id="sqlFetchHAWBListForEnqAgtHAWBInv" parameterClass="cargo.cms.hawb.bo.EnquireAgentHAWBBO" resultClass="cargo.cms.hawb.bo.EnquireAgentHAWBBO">
	 		select distinct t1.hawb_no hawb,
      		(SELECT CODE_DESC FROM CUST_COMPANY WHERE CODE=t1.AGENT_CODE) agent,
      		t1.awb_no awb, 
			decode(substr(t1.AWB_NO,0,3)||'-'||substr(t1.AWB_NO,4),'-','',substr(t1.AWB_NO,0,3)||'-'||substr(t1.AWB_NO,4)) as awbDisp,
			t2.original_awb_no oawb, 
			decode(substr(t2.original_AWB_NO,0,3)||'-'||substr(t2.original_AWB_NO,4),'-','',substr(t2.original_AWB_NO,0,3)||'-'||substr(t2.original_AWB_NO,4)) as oawbDisp,
			t2.flow flow, t1.loc_code location, t1.locn_pcs pcs, t1.locn_wt wt, t1.lsp_no lsp,
			t1.uld_key uld, nvl(t1.lsp_no, t1.uld_key) uldLsp, 
			to_char(t1.cr_date,'DDMONYY HH:MM') storageDate
			from asv_inventory t1 join asv_hawb t2 on t1.hawb_no=t2.hawb_no and t1.agent_code=t2.agent_code
            where 1=1
			<isNotEmpty prepend="AND" property="area">
				t1.loc_code in (select code 
                                from  MAST_WH_loc  
                                WHERE wh_group in (select wh_group 
                                                   from  MAST_WH_group 
                                                   where wh_area=#area#))
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="group">
				t1.loc_code in (select code from  MAST_WH_LOC  WHERE wh_group=#group#)
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="location">
				t1.loc_code=#location#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="agent">
				t1.agent_code=(SELECT CODE  FROM CUST_COMPANY WHERE CODE_DESC=#agent#)
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="awb">
				t1.awb_no=#awb#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="hawb">
				t1.hawb_no=#hawb#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="oawb">
				t2.original_awb_no=#oawb#
			</isNotEmpty>
			order by agent, hawb
		</select>
	<!--		Added by Mahesh BN for HAWB - Enquire Agent HAWB Inventory End--> 
	<!--		Added by Mahesh BN for HAWB - HAWB Report Starts-->
		<select id="sqlGetHawbListForTonnageRepCheckIn" parameterClass="cargo.cms.hawb.bo.HAWBReportTonnageReportBO" resultClass="cargo.cms.hawb.bo.HAWBReportTonnageReportBO">
			<![CDATA[  
				select distinct
				(select code_desc from cust_company where code=t1.agent_code) agent,
				t1.agent_code agentCode,t1.hawb_no hawb, 
				decode(substr(t1.AWB_NO,0,3)||'-'||substr(t1.AWB_NO,4),'-','',substr(t1.AWB_NO,0,3)||'-'||substr(t1.AWB_NO,4)) awbDisp,
				t2.locn_pcs checkinPcs,t1.recd_pcs consolidatedPcs, t2.locn_wt weight,
				t1.flow flow,to_char(t1.cr_date,'DDMONYY HH24:MI') checkinDate
				from asv_hawb t1 left join asv_inventory t2  on  t1.hawb_no= t2.hawb_no and t1.agent_code= t2.agent_code
				where t1.hawb_no in (
                                select distinct hawb_no 
                                from asv_pick_order_dtl t3 join asv_pick_order_hd t4 on t3.po_no= t4.po_no 
                                where t4.status!='Complete' and t3.hawb_no=t1.hawb_no and t3.agent_code=t1.agent_code and rownum=1
                                )
				and to_char(t1.cr_date,'DDMONYY') >= to_date(#dateFrom#,'DDMONYY')
	            and to_char(t1.cr_date,'DDMONYY') <= to_date(#dateTo#,'DDMONYY')
			]]>
			<isNotEmpty prepend="AND" property="agentCode">
				t1.agent_code=#agentCode#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="agent">
				t1.agent_code=(SELECT CODE  FROM CUST_COMPANY WHERE CODE_DESC=#agent#)
			</isNotEmpty>
			UNION
			<![CDATA[ 
                select distinct
				(select code_desc from cust_company where code=t1.agent_code) agent,
				t1.agent_code agentCode,t1.hawb_no hawb, 
				decode(substr(t1.AWB_NO,0,3)||'-'||substr(t1.AWB_NO,4),'-','',substr(t1.AWB_NO,0,3)||'-'||substr(t1.AWB_NO,4)) awbDisp,
				t2.locn_pcs checkinPcs,t1.recd_pcs consolidatedPcs, t2.locn_wt weight,
				t1.flow flow,to_char(t1.cr_date,'DDMONYY HH24:MI') checkinDate
				from asv_hawb t1 left join asv_inventory t2  on  t1.hawb_no= t2.hawb_no and t1.agent_code= t2.agent_code
				where t1.hawb_no not in (select distinct hawb_no from asv_pick_order_locn t3 where t3.hawb_no= t1.hawb_no and t3.agent_code= t1.agent_code and t3.locn_wt= t2.locn_wt)
				and to_char(t1.cr_date,'DDMONYY') >= to_date(#dateFrom#,'DDMONYY')
	            and to_char(t1.cr_date,'DDMONYY') <= to_date(#dateTo#,'DDMONYY')
	            ]]>
			<isNotEmpty prepend="AND" property="agentCode">
				t1.agent_code=#agentCode#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="agent">
				t1.agent_code=(SELECT CODE  FROM CUST_COMPANY WHERE CODE_DESC=#agent#)
			</isNotEmpty>
		</select>
		<select id="sqlGetHawbListForTonnageRepCheckOut" parameterClass="cargo.cms.hawb.bo.HAWBReportTonnageReportBO" resultClass="cargo.cms.hawb.bo.HAWBReportTonnageReportBO">
			<![CDATA[  
			    select distinct
				(select code_desc from cust_company where code=t1.agent_code) agent,
				t1.agent_code agentCode,t1.hawb_no hawb, 
				decode(substr(t1.AWB_NO,0,3)||'-'||substr(t1.AWB_NO,4),'-','',substr(t1.AWB_NO,0,3)||'-'||substr(t1.AWB_NO,4)) awbDisp,
				t2.locn_pcs checkinPcs,t1.recd_pcs consolidatedPcs, t2.locn_wt weight,
				t1.flow flow,to_char(t1.cr_date,'DDMONYY HH24:MI') checkinDate
				from asv_hawb t1 left join asv_inventory t2  on  t1.hawb_no= t2.hawb_no and t1.agent_code= t2.agent_code
				where t1.hawb_no in (
                                select distinct hawb_no 
                                from asv_pick_order_dtl t3 join asv_pick_order_hd t4 on t3.po_no= t4.po_no 
                                where t4.status='Complete' and t3.hawb_no=t1.hawb_no and t3.agent_code=t1.agent_code and rownum=1
                                )
				and to_char(t1.cr_date,'DDMONYY') >= to_date(#dateFrom#,'DDMONYY')
	            and to_char(t1.cr_date,'DDMONYY') <= to_date(#dateTo#,'DDMONYY')
			]]>
			<isNotEmpty prepend="AND" property="agentCode">
				t1.agent_code=#agentCode#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="agent">
				t1.agent_code=(SELECT CODE  FROM CUST_COMPANY WHERE CODE_DESC=#agent#)
			</isNotEmpty>
		</select>
		<select id="sqlGetHawbListForTonnageRepDisc" parameterClass="cargo.cms.hawb.bo.HAWBReportTonnageReportBO" resultClass="cargo.cms.hawb.bo.HAWBReportTonnageReportBO">
			<![CDATA[  
				select distinct
				t1.hawb_no hawb,decode(substr(t1.AWB_NO,0,3)||'-'||substr(t1.AWB_NO,4),'-','',substr(t1.AWB_NO,0,3)||'-'||substr(t1.AWB_NO,4)) awbDisp,
				decode(t1.dam_pcs,null,t1.disc_pcs,t1.dam_pcs) pcs,
		        decode(t1.dam_pcs,null,t1.disc_wt,t1.dam_wt) weight,
		        decode(t1.dam_pcs,null,t1.disc_pcs_type,'Damage') disc 
		        from asv_hawb t1 
				where((t1.disc_pcs is not null) or (t1.dam_pcs is not null)) 
				and to_char(t1.cr_date,'DDMONYY') >= to_date(#dateFrom#,'DDMONYY')
	            and to_char(t1.cr_date,'DDMONYY') <= to_date(#dateTo#,'DDMONYY')
			]]>
			<isNotEmpty prepend="AND" property="agentCode">
				t1.agent_code=#agentCode#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="agent">
				t1.agent_code=(SELECT CODE  FROM CUST_COMPANY WHERE CODE_DESC=#agent#)
			</isNotEmpty>
		</select>
		<select id="sqlGetHawbListForVolumeRep" parameterClass="cargo.cms.hawb.bo.HAWBReportVolumeReportBO" resultClass="cargo.cms.hawb.bo.HAWBReportVolumeReportBO">
			<![CDATA[  
			select distinct
			to_char(sysdate,'DDMONYY') sourceDate,
			(select code_desc from cust_company where code=t1.agent_code) agent,
			t1.agent_code agentCode,t1.hawb_no hawb, 
			case  
			when t1.flow='I' or t1.flow='T' then t2.locn_wt*(select rule_value from CMSRULES where sno=19 and rule_desc='DENSITY') 
			when t1.flow='E' then (select round((sum(length)*sum(width)*sum(height)*sum(pcs))/6000,2)
			                      from asv_hcl_dmn
			                      where hcl_no in (select distinct hcl_no 
			                      from asv_hcl_hd 
			                      where hawb_no=t1.hawb_no and agent_code=t1.agent_code))
			end volume,t2.locn_pcs pc,t2.locn_wt weight,t1.flow flow
			from asv_hawb t1 left join asv_inventory t2  on  t1.hawb_no= t2.hawb_no and t1.agent_code= t2.agent_code
		    where 1=1
		    ]]>
		    <isNotEmpty prepend="AND" property="agentCode">
				t1.agent_code=#agentCode#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="agent">
				t1.agent_code=(SELECT CODE  FROM CUST_COMPANY WHERE CODE_DESC=#agent#)
			</isNotEmpty>
		</select>
	  <select id="GetSysTime" parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT TO_CHAR(SYSDATE, 'DDMONYY HH24:MI') FROM DUAL
	  </select>
	  <select id="sqlAgentNameValidation2" parameterClass="java.lang.String" resultClass="java.lang.String"> 
			 SELECT code_desc FROM cust_company
			 where agent_yn='Y' and rownum=1
			 and code_desc=#agent# 
	 	</select>
	 	<select id="sqlAgentCodeValidation2" parameterClass="java.lang.String" resultClass="java.lang.String"> 
			 SELECT code FROM cust_company
			 where agent_yn='Y' and rownum=1
			 and code=#agentCode#
	 	</select>
	<!--		Added by Mahesh BN for HAWB - HAWB Report end-->
	<!--	Queries for EMAN Carrier Information starts by Mahesh B N end-->
	<select id="sqlGetEMCISeqNo" parameterClass="java.lang.String" resultClass="java.lang.String">
			Select nvl(Trans_Seq_No,1) From Eman_Car_Mast Where Carr_Code = #carrCode#
	</select>
	<select id="GetSysDateAndTime" parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT TO_CHAR(SYSDATE, 'DDMONYY HH24:MI') FROM DUAL
	</select>
	<select id="GetCarrierDetailsforEMCI" parameterClass="java.lang.String" resultClass="cargo.cms.customs.bo.EMCICarrierDetailsBO">
		SELECT carr_code carrierId
		,id_type carrierIdType
		,id_number messageReference
		,carr_name carrierName
		,addr1 carrierAddress
		,addr2 carrierAddress2
		,addr3 carrierAddress3
		,addr4 carrierAddress4
		,cont_per_name firstContactName
		,cont_per_title firstContactTitle
		,cont_per_phone firstContactTelNo
		,cont_per_fax firstContactFaxNo
		,cont_per_email contactEmail
		FROM EMAN_CAR_MAST 
		WHERE carr_code=#carrCode#
		and rownum=1
	</select>
	<select id="GetAgentDetailsforEMCI" parameterClass="java.util.HashMap" resultClass="cargo.cms.customs.bo.EMCIAgentBO">
		SELECT 
		 carr_name agentName
		,id_type agentIdType
		,id_number agentId
		,addr1 agentAddress
		,addr2 agentAddress2
		,addr3 agentAddress3
		,addr4 agentAddress4
		,cont_per_name agentContactName
		,cont_per_phone agentTelNo
		FROM EMAN_CAR_MAST 
		WHERE carr_code=#AGENT_NAME#
	</select>
<!--	Queries for EMAN Carrier Information starts by Mahesh B N end-->
<!--	Queries for EMAN Cargo manifest starts by Mahesh B N starts-->
	<select id="sqlGetCarrforEMCICM" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT carr_code FROM flT_OPR
		WHERE flt_key=#FLT_KEY# AND sch_date=to_date(#FLT_DATE#,'DDMONYY') AND flt_type=decode(#FLT_TYPE#,'E','D','A')
	</select>
	<select id="sqlGetCarrNameforEMCICM" parameterClass="java.lang.String" resultClass="java.lang.String">
		select carr_name from eman_car_mast where carr_code=#CarrCode# and rownum=1
	</select>
	<select id="sqlGetEMANSubmDtlEMCICM" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select SUBSTR(CSGNE_NAME,1,35) CSGNE_NAME, CSGNE_ADDR_1, CSGNE_CTRY_CODE, ETD_ETA_TIME
		from EMAN_SUBM_DTL 
		where flt_key=#FLT_KEY# AND flt_date=to_date(#FLT_DATE#,'DDMONYY') AND flt_type=#FLT_TYPE# and rownum=1
	</select>
	<select id="sqlGetPermitNoEMCICM" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		select PMT_NO from CST_PERMIT_DTL 
		where flt_key=#FLT_KEY# and flt_date=to_date(#FLT_DATE#,'DDMONYY') and flt_type=#FLT_TYPE# and rownum=1
	</select>
	<select id="sqlGetDutTypeEMCICM" parameterClass="java.util.HashMap" resultClass="java.lang.String">
	select DUT_TYPE from CST_DC_DTL
	where flt_key=#FLT_KEY# and flt_date=to_date(#FLT_DATE#,'DDMONYY') and rownum=1 
	</select>
	<select id="sqlGetEverNoEMCICM" resultClass="java.lang.String" parameterClass="java.util.HashMap">
		select ver_no from eman_ctrl
		WHERE flt_key=#FLT_KEY# AND flt_date=to_date(#FLT_DATE#,'DDMONYY') 
		AND flt_type=#FLT_TYPE# <isNotEmpty prepend="AND" property="TRNO"> tr_no=#TRNO#</isNotEmpty> and rownum=1 
	</select>
	<select id="sqlGetStmtEMCICM" parameterClass="java.lang.String" resultClass="java.lang.String">
	select stmnt_type
	from eman_car_mast
	where carr_code=#carrCode# and rownum=1
	</select>
	<select id="sqlGetCarrDetailsEMCICM" parameterClass="java.lang.String" resultClass="java.util.HashMap">
		select CARR_CODE,CARR_NAME,ID_TYPE,ADDR1,CONT_PER_FAX,CONT_PER_PHONE,CONT_PER_NAME,lpad(ID_NUMBER,12,0) as ID_NUMBER
		from eman_car_mast
		where carr_code=#carrCode#
	</select>
	
	<!-- Updated for PR100697. Sanket 29OCT14 -->
	<select id="sqlGetAwbsEMCICM" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select AGENT_NAME, AGENT_ADDR_1, AGENT_ADDR_2, AGENT_ADDR_3, AGENT_ADDR_4, AGENT_ADDR_5, AWB_NO,TO_CHAR(AWB_DATE,'DDMONYY') AWB_DATE,
		decode(substr(AWB_NO,0,3)||'-'||substr(AWB_NO,4),'-','',substr(AWB_NO,0,3)||'-'||substr(AWB_NO,4)) AWB_NO1
		from EMAN_SHP  
		WHERE flt_key=#FLT_KEY# AND flt_date=to_date(#FLT_DATE#,'DDMONYY') AND flt_type=#FLT_TYPE# AND nvl(flg_del, 'N')!='Y'
		<isNotEmpty prepend="AND" property="TRNO"> tr_no=#TRNO#</isNotEmpty> 
	</select>
	<select id="sqlGetAmstInfoAmendIndEMCICM" resultClass="java.lang.String" parameterClass="java.util.HashMap">
		select decode(flg_upd,'Y','Y','N') as ind from eman_shp
		WHERE flt_key=#FLT_KEY# AND flt_date=to_date(#FLT_DATE#,'DDMONYY') AND flt_type=#FLT_TYPE#
		<isNotEmpty prepend="AND" property="TRNO"> tr_no=#TRNO#</isNotEmpty> and awb_no=#AWB_NO# and awb_date=to_date(#AWB_DATE#,'DDMONYY') and nvl(flg_del, 'N')!='Y' and rownum=1
	</select>
	<select id="sqlGetTranShpIndEMCICM"  resultClass="java.lang.String" parameterClass="java.util.HashMap">
		select awb_type 
		from eman_mst_dtl
		WHERE awb_no=#AWB_NO# and awb_date=to_date(#AWB_DATE#,'DDMONYY') 
		and rownum=1
	</select>
	<select id="sqlGetConsignorEMCICM" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select SUBSTR(SHIPPER_NAME,1,35) SHIPPER_NAME, SHPR_ADDR_1, SHPR_ADDR_2, SHPR_ADDR_3, SHPR_ADDR_4, SHPR_ADDR_5, SHPR_CTRY_CODE 
		from eman_shp 
		WHERE flt_key=#FLT_KEY# AND flt_date=to_date(#FLT_DATE#,'DDMONYY') AND flt_type=#FLT_TYPE# 
		<isNotEmpty prepend="AND" property="TRNO"> tr_no=#TRNO#</isNotEmpty> and awb_no=#AWB_NO# and awb_date=to_date(#AWB_DATE#,'DDMONYY') and nvl(flg_del, 'N')!='Y' and rownum=1
	</select>
	<select id="sqlGetConsigneeEMCICM" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select SUBSTR(CSGNE_NAME,1,35) CSGNE_NAME, CSGNE_ADDR_1, CSGNE_ADDR_2, CSGNE_ADDR_3, CSGNE_ADDR_4, CSGNE_ADDR_5, CSGNE_CTRY_CODE
		from EMAN_SHP 
		where flt_key=#FLT_KEY# AND flt_date=to_date(#FLT_DATE#,'DDMONYY') AND flt_type=#FLT_TYPE# 
		<isNotEmpty prepend="AND" property="TRNO"> tr_no=#TRNO#</isNotEmpty> and awb_no=#AWB_NO# and awb_date=to_date(#AWB_DATE#,'DDMONYY') and nvl(flg_del, 'N')!='Y' and rownum=1
	</select>
	<select id="sqlGetPermitDtlEMCICM"  resultClass="java.lang.String" parameterClass="java.util.HashMap">
		select pmt_no from cst_permit_dtl
		where flt_key=#FLT_KEY# and flt_date=to_date(#FLT_DATE#,'DDMONYY') and flt_type=#FLT_TYPE# and AWB_NO=#AWB_NO# and awb_date=to_date(#AWB_DATE#,'DDMONYY')
	</select>
	<select id="sqlGetLicDtlEMCICM"  resultClass="java.lang.String" parameterClass="java.util.HashMap">
		select distinct license from eman_lic
		where AWB_NO=#AWB_NO# and awb_date=to_date(#AWB_DATE#,'DDMONYY')
		<isNotEmpty prepend="AND" property="TRNO"> tr_no=#TRNO#</isNotEmpty>
		<isNotEmpty prepend="AND" property = "HAWB_NO"> hawb_no = #HAWB_NO#</isNotEmpty>
		<isEmpty prepend="AND" property = "HAWB_NO"> hawb_no is null</isEmpty>
	</select>
	<select id="sqlGetStoresDetails"  resultClass="java.util.HashMap" parameterClass="java.util.HashMap">
		select distinct t1.DUT_CODE, t1.DUT_QTY, t1.DUT_UNIT, t2.DUT_TYPE  
		from CST_CODE_DTL t1 join CST_dc_DTL  t2 on t1.FLT_KEY=t2.FLT_KEY and t1.FLT_DATE=t2.FLT_DATE
		WHERE t1.FLT_TYPE=#FLT_TYPE# AND t1.FLT_KEY=#FLT_KEY# AND t1.FLT_DATE = TO_DATE(#FLT_DATE#,'DDMONYY')
	</select>
<!--	Queries for EMAN  Cargo manifest starts by Mahesh B N starts-->
<!--    Queries for EMAN ErrorProcessor & Acknowledge Processor by Mahesh B N strats-->
	<insert id="sqlInsIntoEmanSyntaxError" parameterClass="java.util.HashMap">
		INSERT INTO EMAN_SYNTAX_ERROR
        (
	        SEQ_NO,
	        MESSAGE_TYPE,
			ERROR_TYPE,
			UNIQUE_REFERENCE_NO,
			ORGIN_TCH_CONTROL_REF,
			ELEMENT_NAME,
			ATTRIBUTE_NAME,
			ERROR_DESC,
	        CONVERSATION_ID,
	        MSG,
	        CR_USER_ID,
	        CR_DATE,
	        LM_USER_ID,
	        LM_DATE
			)
        VALUES
        (
        	EMAN_SYNTAX_ERROR_SEQ.NEXTVAL,
        	#MESSAGE_TYPE#,
			#ERROR_TYPE#,
			#UNIQUE_REFERENCE_NO#,
			#ORGIN_TCH_CONTROL_REF#,
			#ELEMENT_NAME#,
			#ATTRIBUTE_NAME#,
			#ERROR_DESC#,
	        #CONVERSATION_ID#,
	        #MSG#,
	        #USER_ID#,
	        SYSDATE,
	        #USER_ID#,
	        SYSDATE)
	</insert>
	<insert id="sqlInsIntoEmanSystemError" parameterClass="java.util.HashMap">
		INSERT INTO EMAN_QRY 
		(
			TR_NO,
			MSG_TYP,
			ERROR_TYPE,
			MNFST_REF_NO,
			ORGIN_TCH_CONTROL_REF, 
			ERROR_CODE_LIST,
			ERROR_CODE,
			ERROR_DESC_ENGLISH,
			CR_USER_ID, 
			CR_DATE,
			LM_USER_ID,
			LM_DATE,
			FLT_TYPE,
			FLT_KEY,
			FLT_DATE,
			MNFST_REF_VER_NO,
			OFFICER_NAME,
			OFFICER_TITILE,
			OFFICE_NAME,
			DEPT_NAME,
			ADDRESS1,
			ADDRESS2,
			ADDRESS3,
			ADDRESS4,
			CONT_TEL,
			CARR_CODE,
			CARR_NAME
		)
		VALUES
		(
			EMAN_MAIL_SEQ.nextVal,
			#MESSAGE_TYPE#,
			#ERROR_TYPE#,
			#UNIQUE_REFERENCE_NO#,
			#ORGIN_TCH_CONTROL_REF#,
			#ERR_CODE_LIST#,
			#ERR_CODE#,
			#ERROR_DESC_ENGLISH#,
			#USER_ID#,
			SYSDATE,
			#USER_ID#,
			SYSDATE,
			#FLT_TYPE#,
			#FLT_KEY#,
			#FLT_DATE#,
			#MANF_VER_NO#,
			#OFFICER_NAME#,
			#OFFICER_TITILE#,
			#OFFICE_NAME#,
			#DEPT_NAME#,
			#CONT_ADDR1#,
			#CONT_ADDR2#,
			#CONT_ADDR3#,
			#CONT_ADDR4#,
			#CONT_TEL#,
			#CARRIER#,
			#CARRIER_NAME#
			
		)
	</insert>
	<insert id="sqlInsIntoEmanAck" parameterClass="java.util.HashMap">
		INSERT INTO EMAN_QRY 
		(
			TR_NO,
			MSG_TYP,
			ERROR_TYPE,
			MNFST_REF_NO,
			ORGIN_TCH_CONTROL_REF, 
			ERROR_CODE_LIST,
			ERROR_CODE,
			gen_remarks,
			CR_USER_ID, 
			CR_DATE,
			LM_USER_ID,
			LM_DATE,
			FLT_TYPE,
			FLT_KEY,
			FLT_DATE,
			MNFST_REF_VER_NO,
			OFFICER_NAME,
			OFFICER_TITILE,
			OFFICE_NAME,
			DEPT_NAME,
			ADDRESS1,
			ADDRESS2,
			ADDRESS3,
			ADDRESS4,
			CONT_TEL,
			CARR_CODE,
			CARR_NAME
		)
		VALUES
		(
			EMAN_MAIL_SEQ.nextVal,
			#MESSAGE_TYPE#,
			#ERROR_TYPE#,
			#UNIQUE_REFERENCE_NO#,
			#ORGIN_TCH_CONTROL_REF#,
			#ERR_CODE_LIST#,
			#ERR_CODE#,
			#ERROR_DESC_ENGLISH#,
			#USER_ID#,
			SYSDATE,
			#USER_ID#,
			SYSDATE,
			#FLT_TYPE#,
			#FLT_KEY#,
			#FLT_DATE#,
			#MANF_VER_NO#,
			#OFFICER_NAME#,
			#OFFICER_TITILE#,
			#OFFICE_NAME#,
			#DEPT_NAME#,
			#CONT_ADDR1#,
			#CONT_ADDR2#,
			#CONT_ADDR3#,
			#CONT_ADDR4#,
			#CONT_TEL#,
			#CARRIER#,
			#CARRIER_NAME#
		)
	</insert>
	<insert id="sqlInsIntoEmanAcknowledge" parameterClass="java.util.HashMap">
		INSERT INTO EMAN_ACKNOWLEDGE
        (
	        SEQ_NO,
	        MESSAGE_TYPE,
			MANIFEST_VERSION_NO,
			ACK_DATE,
			ACK_DESC,
			ORGC_TRL_REF_NO,
	        CR_USER_ID,
	        CR_DATE,
	        LM_USER_ID,
	        LM_DATE
        )
        VALUES
        (
        	EMAN_ACKNOWLEDGE_SEQ.NEXTVAL,
        	#MESSAGE_TYPE#,
			#MANIFEST_VERSION_NO#,
			#ACK_DATE#,
			#ACK_DESC#,
			#ORG_CTRL_REF_NO#,
	        #USER_ID#,
	        SYSDATE,
	        #USER_ID#,
	        SYSDATE
        )
	</insert>
	<select id="sqlGetConverIdPart" parameterClass="java.lang.String" resultClass="java.lang.String">
		select to_char(sysdate,'hh24miss') as converId from dual
	</select>
	<select id="sqlGetCurYearForGovtQry" parameterClass="java.lang.String" resultClass="java.lang.String">
		select to_char(sysdate,'DDMONYY') as curDate from dual
	</select>
<!--Queries for EMAN ErrorProcessor & Acknowledge Processor  by Mahesh B N end-->
	<select id="sqlGetCargoInfoForCagoMani" parameterClass="java.lang.String" resultClass="java.util.HashMap">
		 select ID_NUMBER, lpad(ID_NUMBER,12,0) as ID_NUMBER1,id_type,carr_name, ADDR1, ADDR2, ADDR3, ADDR4, cont_per_phone, cont_per_fax, cont_per_name
         from eman_car_mast where carr_code=#carrCode#
	</select>
	<select id="sqlGetTransDtlsForCagoMani" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		 select orig,dest,
         (select code_desc from mast_city where code = orig) as lastPortofCall,
         (select code_desc from mast_city where code = dest) as NextPortofCall,
         (select code_desc from mast_country where code in (select ctry_code from mast_city where code = orig)) lastCountry,
         (select code_desc from mast_country where code in (select ctry_code from mast_city where code = dest)) nextCountry
         from eman_flt 
         where flt_key=#FLT_KEY# AND flt_date=to_date(#FLT_DATE#,'DDMONYY') AND flt_type=#FLT_TYPE# 
         <isNotEmpty prepend="AND" property="TRNO"> tr_no=#TRNO#</isNotEmpty> 
	</select>
	<select id="sqlGetConsolIndForCagoMani" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		  select orig,dest,
		  case when
		  	(select count(*) from eman_hawb eh where eh.awb_no=es.awb_no and eh.awb_date= es.awb_date and nvl(FLG_DEL, 'N')!='Y' and eh.TR_NO=es.tr_no) = 0 
		  	then 'N'
		  else 'Y' end flg_consol,
		  decode(flg_upd,'Y','Y','N') flg_upd,
         (select code_desc from mast_city where code = orig) as lastPortofCall,
         (select code_desc from mast_city where code = dest) as NextPortofCall,
         (select code from mast_country where code in (select ctry_code from mast_city where code = orig)) lastCountry,
         (select code from mast_country where code in (select ctry_code from mast_city where code = dest)) nextCountry,
         dis_port disPort 
		 from eman_shp es
		 where flt_key=#FLT_KEY# and flt_date=to_date(#FLT_DATE#,'DDMONYY') and flt_type=#FLT_TYPE# and awb_no=#AWB_NO# 
		 and to_char(awb_date,'DDMONYY')=to_date(#AWB_DATE#,'DDMONYY')
		 <isNotEmpty prepend="AND" property="TRNO"> tr_no=#TRNO#</isNotEmpty> AND nvl(flg_del, 'N')!='Y'
	</select>
	<select id="sqlGetConsolIndForCagoManiHawb" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		    select orig,dest,
         (select code_desc from mast_city where code = orig) as lastPortofCall,
         (select code_desc from mast_city where code = dest) as NextPortofCall,
         (select code from mast_country where code in (select ctry_code from mast_city where code = orig)) lastCountry,
         (select code from mast_country where code in (select ctry_code from mast_city where code = dest)) nextCountry 
		 from eman_hawb
		 where flt_key=#FLT_KEY# AND flt_date=to_date(#FLT_DATE#,'DDMONYY') AND flt_type=#FLT_TYPE#  AND HAWB_NO=#HAWB_NO#
		<isNotEmpty prepend="AND" property="TRNO"> tr_no=#TRNO#</isNotEmpty> and awb_no=#AWB_NO# and awb_date=to_date(#AWB_DATE#,'DDMONYY') AND nvl(flg_del, 'N')!='Y'
	</select>
	<select id="sqlGetParShpIndForCagoMani" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		select t1.part_shipment
		from eman_mst_dtl t1,eman_shp t2 
		where t1.awb_no= t2.awb_no 
		and t1.awb_no=#AWB_NO# 
		and t1.awb_date=to_date(#AWB_DATE#,'DDMONYY')
		and t2.flt_key=#FLT_KEY# 
		and t2.flt_date=to_date(#FLT_DATE#,'DDMONYY')
		and t2.flt_type=#FLT_TYPE#
		and nvl(t2.flg_del, 'N')!='Y'
		<isNotEmpty prepend="AND" property="TRNO"> t2.tr_no=#TRNO#</isNotEmpty> 
		and rownum=1
	</select>
	<select id="sqlGethawbDtlsForCagoMani" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select hawb_no,shpr_name
		from eman_hawb
		WHERE flt_key=#FLT_KEY# AND flt_date=to_date(#FLT_DATE#,'DDMONYY') AND flt_type=#FLT_TYPE#
		<isNotEmpty prepend="AND" property="TRNO"> tr_no=#TRNO#</isNotEmpty> and awb_no=#AWB_NO# and awb_date=to_date(#AWB_DATE#,'DDMONYY') AND nvl(flg_del, 'N')!='Y'
	</select>
	<select id="sqlGetGoodsDescForCagoMani" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select decode(content,null, (select content from eman_mst_dtl  where awb_no=#AWB_NO#),content) goodsDesc from eman_shp 
		where awb_no=#AWB_NO# and flt_key=#FLT_KEY# AND flt_date=to_date(#FLT_DATE#,'DDMONYY') and flt_type=#FLT_TYPE#
		<isNotEmpty prepend="AND" property="TRNO"> tr_no=#TRNO#</isNotEmpty> and nvl(flg_del, 'N')!='Y' 
	</select>
	<select id="sqlGetPkgTypeWt" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT SHP_PCS NOOFPACKAGES,SHP_WGT GROSSWEIGHT,FLG_UPD AMENDIND  from eman_shp where flt_key=#FLT_KEY# 
		AND flt_date=to_date(#FLT_DATE#,'DDMONYY') AND flt_type=#FLT_TYPE#  and awb_no=#AWB_NO#
		<isNotEmpty prepend="AND" property="TRNO"> tr_no=#TRNO#</isNotEmpty> and nvl(flg_del, 'N')!='Y'
	</select>
	<select id="sqlGetCarrierContactNo" parameterClass="java.lang.String" resultClass="java.lang.String">
		select cont_per_phone contactno from eman_car_mast where carr_code=#carrCode# and rownum=1
	</select>
	<select id="sqlGetEMCMSeqNo" parameterClass="java.lang.String" resultClass="java.lang.String">
			select ver_no transferSeqNo from eman_ctrl where tr_no=#PARAM#
	</select>
	<select id="sqlGetSenderPartyId" parameterClass="java.lang.String" resultClass="java.lang.String">
	   select code_desc from  mast_code_dtl where  code_type = 'CARR_EDI_GO_IMP_MSG' and code = substr(#fltKey#,0,2)
	</select>
	<update id="sqlUpdateStatustoAccept" parameterClass="java.lang.String">
		update eman_ctrl
		set status='Confirmed'
		where umr_no in (select umr_no from EMAN_MSG_ACKNOWLEDGE where conver_id=#umrNo#) and conver_id=#umrNo#
	</update>
	<update id="sqlUpdateStatustoReject" parameterClass="java.lang.String">
	<![CDATA[
		update eman_ctrl
		set status='Rejected'
		where umr_no in (select umr_no from EMAN_MSG_ACKNOWLEDGE where conver_id=#umrNo#) and conver_id=#umrNo#
		and STATUS != 'Confirmed'
		]]>   
	</update>
	<select id="sqlGetMessageStaus" parameterClass="java.util.HashMap" resultClass="java.lang.String">
	  select status from eman_ctrl
	  WHERE flt_key=#FLT_KEY# AND flt_date=to_date(#FLT_DATE#,'DDMONYY') AND flt_type=#FLT_TYPE# and umr_no=#UMR_NO#
	</select>
	<select id="sqlGetEMCM1SeqNo" parameterClass="java.lang.String" resultClass="java.lang.String">
			select EMCM1_SEQ.NEXTVAL from dual
	</select>
	<select id="sqlGetManifestNo" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		select max(to_number(manifest_no)) from eman_ctrl
		WHERE flt_key=#FLT_KEY# AND flt_date=to_date(#FLT_DATE#,'DDMONYY') AND flt_type=#FLT_TYPE#
	</select>
    <update id="sqlUpdateManifestNo" parameterClass="java.util.HashMap">
	    update eman_ctrl
		set manifest_no=#MANIFEST_NO#
		where flt_key=#FLT_KEY#
		AND flt_date=to_date(#FLT_DATE#,'DDMONYY') 
		AND flt_type=#FLT_TYPE# 
		and umr_no=#UMR_NO#
    </update>   
    <update id="sqlUpdateManifestNoConv" parameterClass="java.util.HashMap">
	    update eman_ctrl
		set CONVER_ID =#CONVERSATION_ID#
		where flt_key=#FLT_KEY#
		AND flt_date=to_date(#FLT_DATE#,'DDMONYY') 
		AND flt_type=#FLT_TYPE# 
		and umr_no=#UMR_NO# 
		<isNotEmpty prepend="AND" property="TRNO"> tr_no=#TRNO#</isNotEmpty>
    </update>     
    <update id="sqlInsertMsgConvAck" parameterClass="java.util.HashMap">
    	INSERT INTO EMAN_MSG_ACKNOWLEDGE (SEQ_NO,MESSAGE_TYPE,MANIFEST_VERSION_NO,CONVER_ID,UMR_NO,ACK_DATE,ACK_DESC,FNL_STS_RCVD,FNL_STS,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE) 
		VALUES (EMAN_MSG_ACK_SEQ.NEXTVAL,#MSG_TYPE#,#VER_NO#,#CONVERSATION_ID#,#UMR_NO#,NULL,NULL,'N',NULL,'ADMIN',sysdate,NULL,NULL)
	</update>  
	<update id="sqlUpdateStatusforCargoEmnfst" parameterClass="java.lang.String">
		update eman_ctrl set status='Rejected',lm_user_id='SYSTEM',lm_date=sysdate where umr_no = (select umr_no from EMAN_MSG_ACKNOWLEDGE where conver_id=#PARAM#) and conver_id=#PARAM#
	</update>
	<select id="sqlGetFlightInfoRespMsg" parameterClass="java.lang.String" resultClass="cargo.cms.customs.bo.EMANMailProcessingBO">
		select flt_type flightType,flt_key flightKey,to_char(flt_date,'DDMONYY') flightDate,ver_no manifestVerNo,carr_key carrCode from eman_ctrl where umr_no=#umrNo#
    </select>
    <select id="sqlGetCarrierInfoRespMsg" parameterClass="java.lang.String" resultClass="cargo.cms.customs.bo.EMANMailProcessingBO">
		select carr_code carrier,carr_name carrierName,addr1,addr2,addr3,addr4,addr5, 
		cont_per_name contOfficerName,cont_per_title contOfficerTitle,cont_per_phone contOfficerTelNo,offc_name contOfficeName,dept_name contDeptName from EMAN_CAR_MAST 
		where carr_code = (select carr_key from eman_ctrl where umr_no=#umrNo#)
    </select>
    <select id="sqlGetUMRNofromConverId" parameterClass="java.lang.String" resultClass="java.lang.String">
		select umr_no from EMAN_MSG_ACKNOWLEDGE where conver_id=#PARAM#
    </select>
        <select id="sqlGetConsignorEMCICMforHAWB" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select SUBSTR(SHPR_NAME,1,35) SHIPPER_NAME, SHPR_ADDR_1, SHPR_ADDR_2, SHPR_ADDR_3, SHPR_ADDR_4, SHPR_ADDR_5, SHPR_CTRY_CODE 
		from eman_hawb 
		WHERE HAWB_NO = #HAWB_NO# 
		<isNotEmpty prepend="AND" property="TRNO"> tr_no=#TRNO#</isNotEmpty> and awb_no=#AWB_NO# and awb_date=to_date(#AWB_DATE#,'DDMONYY') and nvl(flg_del, 'N')!='Y' and rownum=1
	</select>
	<select id="sqlGetConsigneeEMCICMforHAWB" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select SUBSTR(CSGNE_NAME,1,35) CSGNE_NAME, CSGNE_ADDR_1, CSGNE_ADDR_2, CSGNE_ADDR_3, CSGNE_ADDR_4, CSGNE_ADDR_5, CSGNE_CTRY_CODE
		from eman_hawb 
		WHERE HAWB_NO = #HAWB_NO# 
		<isNotEmpty prepend="AND" property="TRNO"> tr_no=#TRNO#</isNotEmpty> and awb_no=#AWB_NO# and awb_date=to_date(#AWB_DATE#,'DDMONYY') and nvl(flg_del, 'N')!='Y' and rownum=1
	</select>
	<select id="sqlGetGoodsDescForCagoManiforHAWB" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		select decode(content,null, (select content from eman_mst_dtl  where awb_no=#AWB_NO#),content) goodsDesc from eman_hawb 
		where awb_no=#AWB_NO# and HAWB_NO = #HAWB_NO# 
		<isNotEmpty prepend="AND" property="TRNO"> tr_no=#TRNO#</isNotEmpty> and nvl(flg_del, 'N')!='Y' 
	</select>
	<select id="sqlGetPkgTypeWtforHAWB" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT HAWB_PCS NOOFPACKAGES,HAWB_WGT GROSSWEIGHT,FLG_UPD AMENDIND  from eman_hawb where HAWB_NO = #HAWB_NO#  and awb_no=#AWB_NO#
		<isNotEmpty prepend="AND" property="TRNO"> tr_no=#TRNO#</isNotEmpty> and nvl(flg_del, 'N')!='Y'
	</select>
	<select id="sqlGetTranShpIndEMCICMforHawb"  resultClass="java.lang.String" parameterClass="java.util.HashMap">
		select awb_type as ind
		from eman_hawb
		WHERE awb_no=#AWB_NO# and awb_date=to_date(#AWB_DATE#,'DDMONYY') and HAWB_NO = #HAWB_NO# 
		<isNotEmpty prepend="AND" property="TRNO"> tr_no=#TRNO#</isNotEmpty> and nvl(flg_del, 'N')!='Y' and rownum=1
	</select>
	
         <!-- fix for PR100933. Sanket 11Feb2015 -->
	<select id="fetchFltActualDate"  resultClass="java.lang.String" parameterClass="java.util.HashMap">
	select TO_CHAR(act_date,'DDMONYY') as actDate from flt_opr where flt_key = #FLT_KEY# and sch_date = #FLT_DATE# and flt_type = DECODE(#FLT_TYPE#,'E','D','A')
	</select>
	
	<update id="sqlUpdateSelfHandlingCarrier" parameterClass="cargo.cms.customer.bo.CustomerBO" >
		UPDATE MAST_CARRIER 
				SET SELF_CARR = #selfHandling#  
					WHERE
					CODE = #carrierCode# 
	</update>	
	
	<update id="updateCustBillDebitNoteDtls" parameterClass="cargo.cms.customer.bo.CustomerBO" >
	UPDATE BILL_DEBIT_NOTE_DTLS SET CUST_NAME = #customerName# WHERE CUST_CODE =#companyCustomerNo# OR CUST_NAME=#prevCustName#
	</update>
	<update id="updateCustBillInvHd" parameterClass="cargo.cms.customer.bo.CustomerBO" >
	UPDATE BILL_INV_HD SET CUST_NAME = #customerName# WHERE CUST_NO =#companyCustomerNo# OR CUST_NAME=#prevCustName#
	</update>
	<update id="updateCustBillChargeDtl" parameterClass="cargo.cms.customer.bo.CustomerBO" >
	UPDATE BILL_CHARGE_DTL SET CUST_NAME = #customerName# WHERE CUST_NO =#companyCustomerNo# OR CUST_NAME=#prevCustName#
	</update>
	<update id="updateCustBillAdjHd" parameterClass="cargo.cms.customer.bo.CustomerBO" >
	UPDATE BILL_ADJ_HD SET CUST_NAME = #customerName# WHERE CUST_NO =#companyCustomerNo# OR CUST_NAME=#prevCustName#
	</update>
	<update id="updateCustBillSkippedCharge" parameterClass="cargo.cms.customer.bo.CustomerBO" >
	UPDATE BILL_SKIPPED_CHARGE SET CUST_NAME = #customerName# WHERE CUST_NO =#companyCustomerNo# OR CUST_NAME=#prevCustName#
	</update>
	<update id="updateApAgntImpCarAWB" parameterClass="cargo.cms.customer.bo.CustomerBO" >
	UPDATE IMP_CAR_AWB SET APPNTD_AGENT = #customerName# WHERE AGENT_CUST_NO = #companyCustomerNo# OR APPNTD_AGENT=#prevCustName#
	</update>

	<update id="updateAgntBillVoidSrfChrgDtls" parameterClass="cargo.cms.customer.bo.CustomerBO" >
	UPDATE BILL_VOID_SRF_CHRG_DTLS SET AGENT_NAME = #customerName# WHERE AGENT_CODE =#companyCustomerNo# OR AGENT_NAME=#prevCustName#
	</update>
	<update id="updateAgntExpDocRecd" parameterClass="cargo.cms.customer.bo.CustomerBO" >
	UPDATE EXP_DOC_RECD SET AGENT_NAME = #customerName# WHERE AGENT_ID =#companyCustomerNo# OR AGENT_NAME=#prevCustName#
	</update>
	<update id="updateAgntExpCar" parameterClass="cargo.cms.customer.bo.CustomerBO" >
	UPDATE EXP_CAR SET AGENT_NAME = #customerName# WHERE AGENT_CODE =#companyCustomerNo# OR AGENT_NAME=#prevCustName#
	</update>
	<update id="updateAgntExpRtnHd" parameterClass="cargo.cms.customer.bo.CustomerBO" >
	UPDATE EXP_RTN_HD SET AGENT_NAME = #customerName# WHERE AGENT_CUST_NO =#companyCustomerNo# OR AGENT_NAME=#prevCustName#
	</update>
	<update id="updateAgntExpSID" parameterClass="cargo.cms.customer.bo.CustomerBO" >
	UPDATE EXP_SID SET AGENT_NAME = #customerName# WHERE AGENT_NAME =#prevCustName#
	</update>
	<update id="updateAgntAWB" parameterClass="cargo.cms.customer.bo.CustomerBO" >
	UPDATE AWB SET AGENT_NAME = #customerName# WHERE AGENT_CODE =#companyCustomerNo# OR AGENT_NAME=#prevCustName#
	</update>

	<update id="updateCnsImpCarAWB" parameterClass="cargo.cms.customer.bo.CustomerBO" >
	UPDATE IMP_CAR_AWB SET CSGNE_NAME = #customerName# WHERE CNS_CUST_NO=#companyCustomerNo# OR CSGNE_NAME=#prevCustName#
	</update>
	<update id="updateCnsExpCar" parameterClass="cargo.cms.customer.bo.CustomerBO" >
	UPDATE EXP_CAR SET CSGNE_NAME = #customerName# WHERE CSGNE_NAME=#prevCustName#
	</update>
	<update id="updateCnsImpXpsObcMail" parameterClass="cargo.cms.customer.bo.CustomerBO" >
	UPDATE IMP_XPS_OBC_MAIL SET CSGNE_NAME = #customerName# WHERE CNS_CUST_NO=#companyCustomerNo# OR CSGNE_NAME=#prevCustName#
	</update>
	<update id="updateCnsExpSID" parameterClass="cargo.cms.customer.bo.CustomerBO" >
	UPDATE EXP_SID SET CSGNE_NAME = #customerName# WHERE CSGNE_NAME=#prevCustName#
	</update>

	<update id="updateShprExpRtnHd" parameterClass="cargo.cms.customer.bo.CustomerBO" >
	UPDATE EXP_RTN_HD SET SHIPPER_NAME = #customerName# WHERE SHIPPER_NAME=#prevCustName#
	</update>
	<update id="updateShprExpAwbBooking" parameterClass="cargo.cms.customer.bo.CustomerBO" >
	UPDATE EXP_AWB_BOOKING SET SHIPPER_NAME = #customerName# WHERE SHIPPER_NAME=#prevCustName#
	</update>
	<update id="updateShprAWB" parameterClass="cargo.cms.customer.bo.CustomerBO" >
	UPDATE AWB SET SHIPPER_NAME = #customerName# WHERE AGENT_CODE =#companyCustomerNo# OR SHIPPER_NAME=#prevCustName#
	</update>
	<update id="updateShprExpSID" parameterClass="cargo.cms.customer.bo.CustomerBO" >
	UPDATE EXP_SID SET SHPR_NAME = #customerName# WHERE SHPR_NAME=#prevCustName#
	</update>
	
	<select id="checkEdiEmanKeyExists" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		select count(1)  FROM mast_code_dtl  WHERE code_type = 'CARR_EDI_GO_IMP_MSG'  AND code = #PARAM#
	</select>
	<select id="sqlGetSenderPartyIdCarr" parameterClass="java.lang.String" resultClass="java.lang.String">
	   select code_desc from  mast_code_dtl where  code_type = 'CARR_EDI_GO_IMP_MSG' and code = #fltKey#
	</select>
	<select id="sqlagentDateOverlap"  parameterClass="cargo.cms.customer.bo.UndertakingBO" resultClass="java.lang.Integer">
		<![CDATA[
				SELECT count(1) FROM CUST_UNDERTAKING WHERE CARR_CODE=#carrierCode# AND AGENT_CODE=#agentNo# AND 
				(EFF_FROM <= TO_DATE(#effectDateTo#,'DDMONYY') AND EFF_TO>=TO_DATE(#effectDateFrom#,'DDMONYY')) 
			]]>
			<isNotEmpty prepend="AND" property="trNo"> tr_no!=#trNo#</isNotEmpty>
	</select>
	<select id="generateCustomerSeqNum" parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT lpad(customer_seq.nextval,7, '0') FROM DUAL
	</select>
	<select id="sqlCheckIATACodeExists"  parameterClass="java.lang.String" resultClass="java.lang.Integer">
	<![CDATA[
			SELECT COUNT(*) as count FROM CUST_COMPANY WHERE CO_IATA_CODE =  #PARAM# 
		]]>
   	</select>
   	<select id="chkDuplicateUMRNo" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		select count(1) from eman_ctrl where umr_no=#PARAM# 
    </select>
    <update id="sqlUpdateStatustoAcceptAck" parameterClass="java.lang.String">
		update eman_ctrl
		set status='Confirmed'
		where conver_id in (select orgc_trl_ref_no from EMAN_ACKNOWLEDGE where orgc_trl_ref_no=#umrNo# and message_type='EMAK01')
	</update>
	<update id="sqlUpdateStatustoRejectAck" parameterClass="java.lang.String">
		update eman_ctrl
		set status='Rejected'
		where conver_id in (select orgc_trl_ref_no from EMAN_ACKNOWLEDGE where orgc_trl_ref_no=#umrNo# and message_type!='EMAK01')
	</update>
    <select id="chkDuplicateUMRNoSub" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		select count(1) from eman_subm_dtl where umr_no=#PARAM# 
    </select>
    <select id="chkDuplicateUMRNoSubTable" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		select count(1) from mast_umr_no where umr_no=#PARAM# 
    </select>
    <select id="chkUMRNoExistsForFlight" parameterClass="cargo.cms.customs.bo.EmanQueryBO" resultClass="java.lang.Integer">
   		select count(1) from eman_ctrl where flt_key=#fltNo# and flt_date=#fltDate# and flt_type = #fltType# and UMR_NO is not null and status='Sent'
	</select>
	<select id="sqlGetFlightInfoRespMsgConverID" parameterClass="java.lang.String" resultClass="cargo.cms.customs.bo.EMANMailProcessingBO">
		select flt_type flightType,flt_key flightKey,to_char(flt_date,'DDMONYY') flightDate,ver_no manifestVerNo,carr_key carrCode,umr_no umrNo from eman_ctrl where umr_no = (select umr_no from EMAN_MSG_ACKNOWLEDGE where conver_id=#PARAM#) and conver_id=#PARAM#
	</select>
	 <update id="sqlUpdateStatustoAcceptAckScreen" parameterClass="java.lang.String">
		UPDATE EMAN_CTRL CTRL SET CTRL.STATUS='Confirmed' WHERE CTRL.STATUS='Sent' AND EXISTS (SELECT NULL FROM EMAN_ACKNOWLEDGE WHERE ORGC_TRL_REF_NO = CTRL.CONVER_ID AND CR_DATE &gt; CTRL.SUBM_DATE) 
	</update>
	<update id="sqlUpdateStatustoRejectAckScreen" parameterClass="java.lang.String">
		UPDATE EMAN_CTRL CTRL SET CTRL.STATUS='Rejected' WHERE CTRL.STATUS='Sent' AND EXISTS (SELECT NULL FROM EMAN_QRY WHERE MNFST_REF_NO = CTRL.UMR_NO AND MSG_TYP='ERRM01' AND CR_DATE &gt; CTRL.SUBM_DATE) 
	</update>
	<select id="sqlGetSenderPartyIdCarrOMAReply" parameterClass="java.lang.String" resultClass="java.lang.String">
	    select code_desc from  mast_code_dtl where  code_type = 'CARR_EMAN_OMA_CFG' and code = #fltKey#
	</select>
	 <select id="sqlGetSenderPartyIdOMAReply" parameterClass="java.lang.String" resultClass="java.lang.String">
	    select code_desc from  mast_code_dtl where  code_type = 'CARR_EMAN_OMA_CFG' and code = substr(#fltKey#,0,2)
	</select>

      <select id="checkCarrierCodeValid"  parameterClass="java.lang.String" resultClass="java.lang.Integer">
      <![CDATA[
                  SELECT COUNT(1) as count FROM MAST_CARRIER WHERE CODE = #carrierCode# 
            ]]>
      </select>
	
	<select id="sqltsacheckduplicate" parameterClass="cargo.cms.customer.bo.RADetailsBO" resultClass="java.lang.Integer">
			select count(1) from CUST_CARR_RA_AGENT where cust_no=#customerNo# and carr_code=#tsaCarrCode#
			and (port = #port# or ctry_code = #countryCode#)
	</select>
	
	<insert id="sqltsasave" parameterClass="cargo.cms.customer.bo.RADetailsBO"  >
		<![CDATA[
				Insert into CUST_CARR_RA_AGENT (TR_NO,CUST_NO,CARR_CODE,ACTIVE,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,PORT,CTRY_CODE) 
				values (CUST_CARR_RA_AGENT_SEQ.nextval,#customerNo#,#tsaCarrCode#,#tsaCarrActive#,#createdId#,SYSDATE,#createdId#,SYSDATE,#port#,#countryCode#)
		]]>
	</insert>
	
	<select id="sqltsasearch" parameterClass="cargo.cms.customer.bo.RADetailsBO" resultClass="cargo.cms.customer.bo.RADetailsBO">
			SELECT b.code customerNo,
			  b.code_desc companyName,
			  b.co_iata_code companyIataCode,
			  a.carr_code tsaCarrCode,
			  a.active tsaCarrActive,
			  a.port port,
			  a.ctry_code countryCode,
			  a.TR_NO trNo
			FROM CUST_CARR_RA_AGENT A
			JOIN cust_company B
			ON a.cust_no=b.code
			where 1=1
			<isNotEmpty prepend="AND" property="customerNo">
				A.cust_no = #customerNo#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="companyName">
				B.code_desc = #companyName#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="companyIataCode">
				B.CO_IATA_CODE = #companyIataCode#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="tsaCarrCode">
				A.CARR_CODE = #tsaCarrCode#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="tsaCarrActive">
				A.active = #tsaCarrActive#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="port">
				A.port = #port#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="countryCode">
				A.ctry_code = #countryCode#
			</isNotEmpty>
	        ORDER BY B.CODE_DESC
	</select>
	
	<update id="sqltsaupdate" parameterClass="cargo.cms.customer.bo.RADetailsBO" >
		<![CDATA[
			UPDATE CUST_CARR_RA_AGENT SET ACTIVE = #tsaCarrActive#,LM_USER_ID = #modifiedId#, LM_DATE = SYSDATE,port=#port#,ctry_code=#countryCode# WHERE TR_NO = #trNo# 
		]]>
	</update>
	
	<delete id="sqltsadelete" parameterClass="cargo.cms.customer.bo.RADetailsBO" >
		<![CDATA[
			DELETE FROM CUST_CARR_RA_AGENT WHERE TR_NO = #trNo#
		]]>
	</delete>
	
	<select id="customernumberbytsaname"  parameterClass="cargo.cms.customer.bo.RADetailsBO" resultClass="cargo.cms.customer.bo.RADetailsBO">
		   SELECT CODE as customerNo , CO_IATA_CODE as companyIataCode from CUST_COMPANY WHERE Trim(UPPER(CODE_DESC)) = TRIM(UPPER(#companyName#)) AND AGENT_YN = 'Y' AND NVL(ACTIVE,'N')='Y' AND ROWNUM = 1
	</select>
				
	<select id="customernumberbynameVKC"  parameterClass="cargo.cms.customer.bo.VKCDetailsBO" resultClass="cargo.cms.customer.bo.VKCDetailsBO">
		   SELECT CODE as companyCode from CUST_COMPANY WHERE Trim(UPPER(CODE_DESC)) = TRIM(UPPER(#companyName#)) and rownum = 1
	</select>
		
	<select id="searchVKCDetails" parameterClass="cargo.cms.customer.bo.VKCDetailsBO" resultClass="cargo.cms.customer.bo.VKCDetailsBO">
			
			SELECT vkc_code companyCode,
			code_desc companyName,
			CASE when active = 'Y' then 'Active' 
            when active = 'N' then 'In-Active' 
            else '' end as  status,
			to_char(FROM_DATE,'DDMONYY') as fromDate,
			to_char(TO_DATE,'DDMONYY') as toDate,
	        active as activeInd,
	        REMARKS as remarks,
	        TR_NO as trNo
			FROM MAST_VKC_CODE			
			where 1=1
			<isNotEmpty prepend="AND" property="companyCode">
				vkc_code = #companyCode#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="companyName">
				code_desc = #companyName#
			</isNotEmpty>			
			<isNotEmpty prepend="AND" property="activeInd">
				active = #activeInd#
			</isNotEmpty>                 
			<isNotEmpty prepend="AND" property="fromDate">
				 ( (FROM_DATE BETWEEN TO_DATE(#fromDate#,'DDMONYY') and TO_DATE(#toDate#,'DDMONYY'))
				 	OR (TO_DATE BETWEEN TO_DATE(#fromDate#,'DDMONYY') and TO_DATE(#toDate#,'DDMONYY')) )
			</isNotEmpty> 			
	        ORDER BY CODE_DESC
	</select>
	
	<select id="validateConfigRangeExistsAlready" parameterClass="cargo.cms.customer.bo.VKCDetailsBO" resultClass="java.lang.Integer">	  
	 	SELECT count(1) FROM MAST_VKC_CODE WHERE vkc_code = #companyCode# AND upper(code_desc) != upper(#companyName#)	 		   
  	</select>
  	
  	<select id="validateConfigCompanyExistsAlready" parameterClass="cargo.cms.customer.bo.VKCDetailsBO" resultClass="java.lang.Integer">	  
	 	SELECT count(1) FROM MAST_VKC_CODE WHERE upper(code_desc) = upper(#companyName#) AND 
	 		( (TO_DATE(#fromDate#,'DDMONYY') between FROM_DATE AND TO_DATE) OR (TO_DATE(#toDate#,'DDMONYY') between FROM_DATE AND TO_DATE) )       
  	</select>
  	
  	<select id="validateConfigRangeExists" parameterClass="cargo.cms.customer.bo.VKCDetailsBO" resultClass="java.lang.Integer">
	  <![CDATA[
	 	SELECT count(1) FROM MAST_VKC_CODE 
  			WHERE  ( 
  				((FROM_DATE <= TO_DATE(#fromDate#,'DDMONYY') AND TO_DATE >= TO_DATE(#toDate#,'DDMONYY')) AND nvl(ACTIVE,'N') = 'Y')
      				OR ((TO_DATE BETWEEN TO_DATE(#fromDate#,'DDMONYY') and TO_DATE(#toDate#,'DDMONYY')) AND nvl(ACTIVE,'N') = 'Y')
      		) AND tr_no <> #trNo#
       ]]>
  	</select>
  	
	<insert id="saveVkcDetails" parameterClass="cargo.cms.customer.bo.VKCDetailsBO"  >
			<![CDATA[
				INSERT INTO  MAST_VKC_CODE (TR_NO, VKC_CODE, CODE_DESC, FROM_DATE, TO_DATE, ACTIVE, REMARKS, 
					CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE) 
				VALUES (MAST_VKC_CODE_SEQ_NO.nextVal,#companyCode#,#companyName#,to_date(#fromDate#,'DDMONYY'),to_date(#toDate#,'DDMONYY'),#activeInd#, #remarks#,#crUserId#,SYSDATE,#crUserId#,SYSDATE)
			]]>
	</insert>
	
	<update id="updateVkcDetails" parameterClass="cargo.cms.customer.bo.VKCDetailsBO" >
		UPDATE MAST_VKC_CODE SET		
		ACTIVE = #activeInd#, 
		REMARKS = #remarks#,
		LM_USER_ID     = #crUserId#,
		LM_DATE        = SYSDATE		
		WHERE
		tr_no = #trNo# 
	</update>
	
	<delete id="deleteVKCDetails" parameterClass="cargo.cms.customer.bo.VKCDetailsBO" >
		DELETE FROM MAST_VKC_CODE WHERE tr_no = #trNo#
	</delete>					
	

<insert id="sqlrarfsave" parameterClass="cargo.cms.customer.bo.UpstreamRaRfsBO">
		<![CDATA[
				Insert into MAST_SEC_CHECK (TR_NO,CARR_CODE,CTRY_CODE,PORT,HAWB_IND,PAX_IND,FRE_IND,COMBI_IND,SCREENING_METHOD,ACTIVE,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE) 
				values (MAST_SEC_CHECK_SEQ.NEXTVAL,#carrierCode#,#countryCode#,#port#,#hawbInd#,#paxInd#,#freInd#,#combiInd#,#screeningMethod#,#active#,#userID#,SYSDATE,#userID#,SYSDATE)
		]]>
	</insert>

	<select id="getScreeningMethodListDescription" parameterClass="java.lang.String" resultClass="java.lang.String">
	SELECT DTL.CODE_DESC FROM MAST_CODE_HD HD, MAST_CODE_DTL DTL WHERE HD.CODE = DTL.CODE_TYPE AND DTL.code_type='SCREENING_METHOD' AND DTL.CODE = #PARAM#
	</select>
	<select id="getScreeningMethodListCode" parameterClass="java.lang.String" resultClass="java.lang.String">
	SELECT DTL.CODE FROM MAST_CODE_HD HD, MAST_CODE_DTL DTL WHERE HD.CODE = DTL.CODE_TYPE AND DTL.code_type='SCREENING_METHOD' AND DTL.CODE_DESC = #PARAM#
	</select>

	<select id="getScreeningMethodList" parameterClass="java.lang.String" resultClass="cargo.cms.customer.bo.UpstreamRaRfsBO">
	SELECT DTL.CODE as screeningCode,DTL.CODE_DESC as screeningDesc FROM MAST_CODE_HD HD, MAST_CODE_DTL DTL WHERE HD.CODE = DTL.CODE_TYPE AND DTL.code_type=#PARAM# ORDER BY DTL.CODE_DESC ASC
	</select>

	<select id="sqlrarfsearch" parameterClass="cargo.cms.customer.bo.UpstreamRaRfsBO"
		resultClass="cargo.cms.customer.bo.UpstreamRaRfsBO">
		SELECT TR_NO as trNo,
		CARR_CODE as carrierCode,
		CTRY_CODE as countryCode,
		PORT as port,
		HAWB_IND as hawbInd,
		PAX_IND as paxInd,
		FRE_IND as freInd,
		COMBI_IND as combiInd,
		SCREENING_METHOD as screeningMethod,
		ACTIVE as active
		FROM MAST_SEC_CHECK SEC WHERE 1=1
		<isNotEmpty property="carrierCode">
			AND SEC.CARR_CODE = #carrierCode#
		</isNotEmpty>
		<isNotEmpty property="countryCode">
			AND SEC.CTRY_CODE = #countryCode#
		</isNotEmpty>
		<isNotEmpty property="port">
			AND SEC.PORT = #port#
		</isNotEmpty>
		<isNotEmpty property="active">
			AND SEC.ACTIVE = #active#
		</isNotEmpty>
		<isNotEmpty property="trNo">
			AND SEC.TR_NO = #trNo#
		</isNotEmpty>
	</select>


	
	<update id="updaterarfDetails" parameterClass="cargo.cms.customer.bo.UpstreamRaRfsBO">
		UPDATE
		MAST_SEC_CHECK SET
		ACTIVE = #active#,
		HAWB_IND = #hawbInd#,
		PAX_IND =#paxInd#,		
		FRE_IND =	#freInd#,	
		COMBI_IND =	#combiInd#,
		SCREENING_METHOD =	#screeningMethod#,	
		LM_DATE = SYSDATE
		WHERE
		TR_NO = #trNo#
	</update>
	
	
	<delete id="sqlupdaterarfdelete" parameterClass="cargo.cms.customer.bo.UpstreamRaRfsBO">
		<![CDATA[
			DELETE FROM MAST_SEC_CHECK WHERE TR_NO = #trNo# 
		]]>
	</delete>	
	
	<select id="checkDublicatCPC"  parameterClass="cargo.cms.customer.bo.UpstreamRaRfsBO" resultClass="java.lang.Integer">
	<![CDATA[
	SELECT COUNT(1) FROM MAST_SEC_CHECK WHERE CARR_CODE=#carrierCode# AND (CTRY_CODE=#countryCode# OR PORT=#port#)
	]]>
</select>
	

	<insert id="saveShiftUser" parameterClass="cargo.cms.admin.bo.MaintainAliasNamesBO" > 
  INSERT INTO MAST_SHIFT_HD (SHIFT_NAME,FROM_TIME,TO_TIME,CR_USER_ID, CR_DATE,LM_USER_ID,LM_DATE)
			VALUES (#shiftUserName#,#shiftFromHr#,#shiftToHr#,#createdUserId#,SYSDATE,#createdUserId#,SYSDATE)
  </insert>
  <insert id="saveShiftUserDetails" parameterClass="cargo.cms.admin.bo.MaintainAliasNamesBO" > 
  INSERT INTO MAST_SHIFT_USER_DTL (SHIFT_NAME,USER_NAME,CR_USER_ID, CR_DATE,LM_USER_ID,LM_DATE)
			VALUES (#shiftUserName#,#shiftUserID#,#createdUserId#,SYSDATE,#createdUserId#,SYSDATE)
  </insert>
  
  <delete id="deleteShiftUserDetail" parameterClass="cargo.cms.admin.bo.MaintainAliasNamesBO">       	 
			delete from MAST_SHIFT_USER_DTL where SHIFT_NAME = #shiftUserName#
  </delete>
  <delete id="deleteShiftUserID" parameterClass="cargo.cms.admin.bo.MaintainAliasNamesBO">       	 
			delete from MAST_SHIFT_USER_DTL where SHIFT_NAME = #shiftUserName# and USER_NAME=#shiftUserID#
  </delete>
  
  <select id="getShiftUserList" parameterClass="cargo.cms.admin.bo.MaintainAliasNamesBO" resultClass="cargo.cms.admin.bo.MaintainAliasNamesBO">
  SELECT SHIFT_NAME AS shiftUserName,
  trim(SUBSTR(TO_CHAR(TRIM(FROM_TIME),'0000'),0,3))||':'||trim(SUBSTR(TO_CHAR(TRIM(FROM_TIME),'0000'),4,2)) AS shiftFromHr,
  trim(SUBSTR(TO_CHAR(TRIM(TO_TIME),'0000'),0,3))||':'||trim(SUBSTR(TO_CHAR(TRIM(TO_TIME),'0000'),4,2)) AS shiftToHr
  FROM MAST_SHIFT_HD
  WHERE 1=1
  <isNotEmpty property="shiftUserName">
  and SHIFT_NAME = #shiftUserName#
  </isNotEmpty>
  </select>
  
   <select id="getShiftUserDetails" parameterClass="cargo.cms.admin.bo.MaintainAliasNamesBO" resultClass="cargo.cms.admin.bo.MaintainAliasNamesBO">
  SELECT USER_NAME AS shiftUserID FROM MAST_SHIFT_USER_DTL
  WHERE 1=1
  <isNotEmpty property="shiftUserName">
  and SHIFT_NAME = #shiftUserName#
  </isNotEmpty>
  </select>
  
 <delete id="deleteShiftUser" parameterClass="cargo.cms.admin.bo.MaintainAliasNamesBO">       	 
			delete from MAST_SHIFT_HD where SHIFT_NAME = #shiftUserName#
  </delete>
  
     <select id="checkValidShiftUser" parameterClass="cargo.cms.admin.bo.MaintainAliasNamesBO" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM SEC_USER WHERE STATUS = 'A' AND (APP_ACCESS_EXT='Y' OR APP_ACCESS_INT='Y') and CODE= #shiftUserID#
	</select> 
  
  <select id="exitShiftUser" parameterClass="cargo.cms.admin.bo.MaintainAliasNamesBO" resultClass="java.lang.Integer">
		SELECT count(1)	FROM MAST_SHIFT_HD where SHIFT_NAME = #shiftUserName#
	</select>
	
	<select id="getIataCodeForAgent"  parameterClass="cargo.cms.customer.bo.CustomerBO" resultClass="java.lang.String">
		select co_iata_code  from cust_company where code = #companyCustomerNo#  and nvl(ALLOW_ESRF_AA,'N') = 'Y' 
	</select>
	
	<select id="getAgentExistsBeforeSave" parameterClass="cargo.cms.customer.bo.CustomerBO" resultClass="java.lang.Integer">
		select count(1) as agtCnt  from cust_company where code = #companyCustomerNo#  and nvl(ALLOW_ESRF_AA,'N') = 'Y' 
	</select>
	
	<select id="getAgentNameBeforeSave" parameterClass="cargo.cms.customer.bo.CustomerBO" resultClass="java.lang.String">
		select CODE_DESC as agentname  from cust_company where code = #companyCustomerNo#   
	</select>
	<select id="checkCustomerCXCode"  parameterClass="map" resultClass="java.lang.String">
	<![CDATA[
			select code_desc from cust_company where cx_code=#CX_CODE# and code_desc NOT IN  (#CUST_NAME#) AND ROWNUM=1
		]]>
   	</select>	
</sqlMap>
