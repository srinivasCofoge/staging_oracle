<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">

	<!--
		The SQL in these maps files has purposely been typed with more
		verbosity than is actually required. For example, many of the selects
		could have just used SELECT * FROM... instead of listing all of the
		columns. This is to demonstrate that even complex SQL can be handled
		and coded and formatted the way SQL was meant to be (i.e. not a bunch
		of concatenated strings in a Java class).
	-->
	<!--
		This XML file will hold only the queries which would be used for
		Export module Reports
	-->
	<!-- Added by Varadaraj Muni 01-Sep-2010 -->
<sqlMap namespace="ExportReportModule">
<!-- Added by swapna Issue RCL: VCL Reports::::543:::Starts -->
<select id="createVclHeader1" parameterClass="cargo.cms.export.report.bo.CreateVclReptBO" resultClass="cargo.cms.export.report.bo.CreateVclReptBO">
	select VCL_NO vclNo,FLT_KEY fltKey,FLT_DATE fltDate,substr(awb_no, 0, 3)||'-'||substr(awb_no, 4, 11) awbNo,to_char(AWB_DATE,'DDMONYY') awbDate,DLV_BY deliveredBy,
	decode(FLT_TYPE,'I','Import','Export') vclType,
	to_char(RCL_DATE,'HH24:MI') rcptTime,RMK remarks,RCL_WT ttlWt,ULD_KEY uldKey,to_char(CR_DATE,'DDMONYYYY') vclDate,rcl_no rclNo, truck_no truckNo
	from exp_rcl_hd 
	where rcl_no = #rclNo#
</select>
<select id="sqlQueryMonthlyEHURept" parameterClass="cargo.cms.export.report.bo.MonthlyEHUReportBO" resultClass="cargo.cms.export.report.bo.MonthlyEHUReportBO">
SELECT MONTH_LIST.MONTHS ehuMonths,
	nvl(ehuTonnage,'0.00') ehuTonnage, 
	nvl(totalTonnage,'0.00') totalTonnage,
	nvl(DECODE(TRUNC(trim(TO_CHAR(ehuPercentage,'999999999999.9999'))),'0','0'
	||trim(TO_CHAR(ehuPercentage,'999999999999.9999')),trim(TO_CHAR(ehuPercentage,'999999999999.9999'))),'0.0000') ehuPercentage
	FROM
	(select to_char(add_months(to_date(#startMonth#, 'MONYYYY'), l - 1), 'MON-YY') as MONTHS
		from (select level l
		from dual
		connect by level &lt;= months_between(trunc(to_date(#toMonth#, 'MONYYYY'), 'MONTH'),
		trunc(to_date(#startMonth#, 'MONYYYY'), 'MONTH')) + 1)) MONTH_LIST  
	LEFT JOIN
	(SELECT TO_CHAR(TO_DATE(MONTH_NAME,'MON-YY'),'MON-YY') ehuMonths,
	DECODE(TRUNC(trim(TO_CHAR(NVL(SUM(EHU_RCL_WT)  /1000,0),'999999999999.99'))),'0','0'
	||trim(TO_CHAR(NVL(SUM(EHU_RCL_WT)             /1000,0),'999999999999.99')),trim(TO_CHAR(NVL(SUM(EHU_RCL_WT)/1000,0),'999999999999.99'))) ehuTonnage,
	DECODE(TRUNC(trim(TO_CHAR(NVL(SUM(TOTAL_RCL_WT)/1000,0),'999999999999.99'))),'0','0'
	||trim(TO_CHAR(NVL(SUM(TOTAL_RCL_WT)           /1000,0),'999999999999.99')),trim(TO_CHAR(NVL(SUM(TOTAL_RCL_WT)/1000,0),'999999999999.99'))) totalTonnage ,
	CASE
	WHEN SUM(TOTAL_RCL_WT)/1000=0
	THEN 0.00
	ELSE NVL(((SUM(EHU_RCL_WT)/1000)/(SUM(TOTAL_RCL_WT)/1000)),0)
	END ehuPercentage
	FROM rept_monthly_ehu
	WHERE TO_DATE(MONTH_NAME,'MONYYYY') BETWEEN TO_DATE(#startMonth#,'MONYYYY') AND TO_DATE(#toMonth#,'MONYYYY')
	<isNotEmpty property="groupCarrCode">
	AND   (CARR_CODE = #groupCarrCode# 
	OR CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP 
	WHERE GRP_CARR_CODE     = #groupCarrCode#))                                          
	</isNotEmpty>
	<isNotEmpty property="carrCode">
	AND   CARR_CODE = #carrCode# 
	</isNotEmpty>
	GROUP BY TO_CHAR(TO_DATE(MONTH_NAME,'MON-YY'),'MON-YY')
	ORDER BY TO_DATE(ehuMonths,'MON-YY')
	)
	A on MONTH_LIST.MONTHS=a.ehuMonths
	ORDER BY TO_DATE(MONTH_LIST.MONTHS,'MON-YY')
    
</select>
<select id="createVclListAwb1" parameterClass="cargo.cms.export.report.bo.CreateVclReptBO" resultClass="cargo.cms.export.report.bo.CreateVclReptBO">
	SELECT DECODE(A.LENGTH, NULL, '', A.LENGTH || 'x') || 
	    DECODE(A.WIDTH, NULL, '', A.WIDTH || 'x') || 
	    DECODE(A.HEIGHT, NULL, '', A.HEIGHT) || '(' || A.PCS || ')' lenWidHei,
	    NVL(A.WIDTH, 0) breadth, NVL(A.HEIGHT, 0) height, NVL(A.LENGTH, 0) length, NVL(A.PCS, 0) pcs,
	A.REMARKS rmks
	FROM EXP_RCL_DMN A
	WHERE A.RCL_NO = #rclNo#
</select>
<select id="createVclListAwbLoc1" parameterClass="cargo.cms.export.report.bo.CreateVclReptBO" resultClass="cargo.cms.export.report.bo.CreateVclReptBO">
	SELECT PCS pcs, NET_WT netWt, LOC_CODE ||decode(lsp_no,'',decode(uld_key,'','','/'||uld_key),'/'||lsp_no) locCode 
	FROM EXP_RCL_DTL
	WHERE RCL_NO = #rclNo#
</select>
<select id="uldAwbDetails1" parameterClass="cargo.cms.export.report.bo.CreateVclReptBO" resultClass="cargo.cms.export.report.bo.CreateVclReptBO">
select awb_no awbNo,TO_CHAR(awb_date,'DDMONYY') awbDate from exp_rcl_brkdn where rcl_no=#rclNo#
</select>
<!-- Added by swapna Issue RCL: VCL Reports::::543:::Ends -->
<!-- Added by Manorama Create VCL Reports::::543:::Starts -->
<select id="createVclHeader" parameterClass="cargo.cms.export.report.bo.CreateVclReptBO" resultClass="cargo.cms.export.report.bo.CreateVclReptBO">
	select VCL_NO vclNo,FLT_KEY fltKey,FLT_DATE fltDate,substr(awb_no, 0, 3)||'-'||substr(awb_no, 4, 11) awbNo,to_char(AWB_DATE,'DDMONYY') awbDate,DLV_BY deliveredBy,
	decode(VCL_TYPE,'I','Import','Export') vclType,
	to_char(RECEIPT_DATE,'HH24:MI') rcptTime,RMK remarks,VCL_WT ttlWt,ULD_KEY uldKey,to_char(RECEIPT_DATE,'DDMONYYYY') vclDate
	from val_vcl_hd 
	where vcl_no = #vclNo#
</select>
<select id="createVclListAwb" parameterClass="cargo.cms.export.report.bo.CreateVclReptBO" resultClass="cargo.cms.export.report.bo.CreateVclReptBO">
	SELECT DECODE(A.LENGTH, NULL, '', A.LENGTH || 'x') || 
	    DECODE(A.WIDTH, NULL, '', A.WIDTH || 'x') || 
	    DECODE(A.HEIGHT, NULL, '', A.HEIGHT) || '(' || A.PCS || ')' lenWidHei,
	    NVL(A.WIDTH, 0) breadth, NVL(A.HEIGHT, 0) height, NVL(A.LENGTH, 0) length, NVL(A.PCS, 0) pcs,
	A.RMK rmks
	FROM VAL_VCL_DMN A
	WHERE A.VCL_NO = #vclNo#
</select>
<select id="createVclListAwbLoc" parameterClass="cargo.cms.export.report.bo.CreateVclReptBO" resultClass="cargo.cms.export.report.bo.CreateVclReptBO">
	SELECT PCS pcs, NET_WT netWt, LOC_CODE ||decode(lsp_no,'',decode(uld_key,'','','/'||uld_key),'/'||lsp_no) locCode 
	FROM VAL_VCL_DTL
	WHERE VCL_NO = #vclNo#
</select>
<select id="createVclListUld" parameterClass="cargo.cms.export.report.bo.CreateVclReptBO" resultClass="cargo.cms.export.report.bo.CreateVclReptBO">
	select LOC_CODE locCode, PCS pcs
	from VAL_VCL_DTL
	where vcl_no =#vclNo#
</select>
<select id="netGrossWt" parameterClass="cargo.cms.export.report.bo.CreateVclReptBO" resultClass="cargo.cms.export.report.bo.CreateVclReptBO">
select sum(net_wt) netWt,sum(gross_wt) grossWt from val_vcl_dtl where vcl_no =#vclNo#
</select>
<select id="createVclListUld1" parameterClass="cargo.cms.export.report.bo.CreateVclReptBO" resultClass="cargo.cms.export.report.bo.CreateVclReptBO">
	select LOC_CODE locCode, PCS pcs
	from EXP_RCL_DTL
	where RCL_NO =#rclNo#
</select>
<select id="netGrossWt1" parameterClass="cargo.cms.export.report.bo.CreateVclReptBO" resultClass="cargo.cms.export.report.bo.CreateVclReptBO">
select sum(net_wt) netWt,sum(gross_wt) grossWt from EXP_RCL_DTL where RCL_NO =#rclNo#
</select>
<select id="uldAwbDetails" parameterClass="cargo.cms.export.report.bo.CreateVclReptBO" resultClass="cargo.cms.export.report.bo.CreateVclReptBO">
select awb_no awbNo,TO_CHAR(awb_date,'DDMONYY') awbDate from val_vcl_brkdn where vcl_no=#vclNo#
</select>
<select id="destShcInbound" parameterClass="cargo.cms.export.report.bo.CreateVclReptBO" resultClass="cargo.cms.export.report.bo.CreateVclReptBO">
SELECT ica.awb_dest dest,
  DECODE(ica.spl_code1, NULL, '', ica.spl_code1
  || ',')
  || DECODE(ica.spl_code2, NULL, '', ica.spl_code2
  || ',')
  || DECODE(ica.spl_code3, NULL, '', ica.spl_code3
  || ',')
  || DECODE(ica.spl_code4, NULL, '', ica.spl_code4
  || ',')
  || DECODE(ica.spl_code5, NULL, '', ica.spl_code5
  || ',')
  || DECODE(ica.spl_code6, NULL, '', ica.spl_code6
  || ',')
  || DECODE(ica.spl_code7, NULL, '', ica.spl_code7
  || ',')
  || DECODE(ica.spl_code8, NULL, '', ica.spl_code8
  || ',')
  || DECODE(ica.spl_code9, NULL, '', ica.spl_code9) shc
FROM imp_car_awb ica
WHERE substr(ica.awb_no, 0, 3)||'-'||substr(ica.awb_no, 4, 11) = #awbNo#
AND ica.awb_date = to_date(#awbDate#,'DDMONYY')
</select>
<select id="destShcOutbound" parameterClass="cargo.cms.export.report.bo.CreateVclReptBO" resultClass="cargo.cms.export.report.bo.CreateVclReptBO">
SELECT ec.dest as dest, 
  decode(ec.spl_code1, null, '', ec.spl_code1 || ',') ||
		     decode(ec.spl_code2, null, '', ec.spl_code2 || ',') || 
		     decode(ec.spl_code3, null, '', ec.spl_code3 || ',') ||
		     decode(ec.spl_code4, null, '', ec.spl_code4 || ',') ||
		     decode(ec.spl_code5, null, '', ec.spl_code5 || ',') ||
		     decode(ec.spl_code6, null, '', ec.spl_code6 || ',') || 
		     decode(ec.spl_code7, null, '', ec.spl_code7 || ',') || 
		     decode(ec.spl_code8, null, '', ec.spl_code8 || ',') || 
		     decode(ec.spl_code9, null, '', ec.spl_code9) as shc
FROM exp_car ec
WHERE ec.awb_no = #awbNo#
AND ec.awb_date = to_date(#awbDate#,'DDMONYY')
</select>
<select id="destShcOutbound1" parameterClass="cargo.cms.export.report.bo.CreateVclReptBO" resultClass="cargo.cms.export.report.bo.CreateVclReptBO">
select dest, decode(shc,'','',substr(shc,1,length(shc)-1)) shc from 
(SELECT ec.awb_dest as dest, 
  decode(ec.spl_code1, null, '', ec.spl_code1 || ',') ||
		     decode(ec.spl_code2, null, '', ec.spl_code2 || ',') || 
		     decode(ec.spl_code3, null, '', ec.spl_code3 || ',') ||
		     decode(ec.spl_code4, null, '', ec.spl_code4 || ',') ||
		     decode(ec.spl_code5, null, '', ec.spl_code5 || ',') ||
		     decode(ec.spl_code6, null, '', ec.spl_code6 || ',') || 
		     decode(ec.spl_code7, null, '', ec.spl_code7 || ',') || 
		     decode(ec.spl_code8, null, '', ec.spl_code8 || ',') || 
		     decode(ec.spl_code9, null, '', ec.spl_code9) as shc
FROM exp_rcl_hd ec
WHERE ec.rcl_no=#rclNo#)
</select>
<select id="destShcOffload" parameterClass="cargo.cms.export.report.bo.CreateVclReptBO" resultClass="cargo.cms.export.report.bo.CreateVclReptBO">
SELECT distinct veud.dest ,  (select stragg(stringdelim(code,',')) from v_exp_uld_awb_shc where uld_key =#uldKey#) shc
    from v_exp_uld_dtl veud
    where uld_key=#uldKey#
</select>
<!-- Added by Manorama Create VCL Reports::::543:::Ends -->
<!-- Added by Manorama for Print Cargo Manifest::::Starts -->
<select id="fetchOwner" parameterClass="java.lang.String" resultClass="java.lang.String">
select code_desc from mast_carrier where code = #PARAM#
</select>

<select id="fetchSHCforRCL" parameterClass="java.lang.String" resultClass="java.lang.String">
SELECT    
  (A.SPL_CODE1
  || ' '
  || A.SPL_CODE2
  || ' '
  || A.SPL_CODE3
  || ' '
  || A.SPL_CODE4
  || ' '
  || A.SPL_CODE5
  || ' '
  || A.SPL_CODE6
  || ' '
  || A.SPL_CODE7
  || ' '
  || A.SPL_CODE8
  || ' '
  || A.SPL_CODE9) AS SPLCODE1
FROM EXP_RCL_HD A WHERE
(A.RCL_NO      = #PARAM#
OR A.VCL_NO        = #PARAM#)
</select>
<select id="fetchsecCheckforRCL" parameterClass="java.lang.String" resultClass="cargo.cms.export.report.bo.IssueRCLBulkRept_010BO">
SELECT DECODE(A.SCREENING_OPTION,null,'','RAKC_SC','RA','CTO_SC','Security Check','EXEMPTED_SC','Exempted','RACF_SC','RACSF','VKC_CODE','VKCCODE',A.SCREENING_OPTION) AS screeningOptn,
            A.RACSF_CODE AS racfCode,A.vkc_code as vkcCode FROM EXP_RCL_HD A WHERE (A.RCL_NO=#PARAM# OR A.VCL_NO=#PARAM#)
</select>
<select id="fetchUndgPt" parameterClass="cargo.cms.export.report.bo.PrintCgoManfReptBO" resultClass="cargo.cms.export.report.bo.PrintCgoManfReptBO">
select off_point unldgPt,flt_key fltKey,to_char(SCH_DATE,'DDMONYY') fltDate from flt_opr_leg where flt_key = #fltKey# and sch_date = #fltDate# and flt_type = 'D'
</select>
<parameterMap id="printCgo" class="map" >
		<parameter property="RESULT" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>         
		<parameter property="FLIGHTKEY" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>    
		<parameter property="DEPDATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>    
		<parameter property="FORMAT" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="UNLDGPT" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>   
	</parameterMap>

	<procedure id="printCgoProcCall" parameterMap="printCgo" >
		{? = call PKG_EXP_PRINT_CGO_MANIFEST.CARGO_MANIFEST_RPT(?,?,?,?)}
	</procedure>
<select id="exp_rept_542_US_ULD_AWB" parameterClass="cargo.cms.export.report.bo.PrintCgoManfReptBO" resultClass="cargo.cms.export.report.bo.PrintCgoManfReptBO">
	SELECT    	
	SNO as serialNum, UNLDG_PT  dest,UNLDG_PT  unldgPt, AWB_ULD_NO as awbNo,
				(select trim(to_char(sum(awb_wt),'999999990.99')) from PRINT_CGO_MANIFEST b where a.AWB_ULD_NO=b.AWB_ULD_NO) as wt,
        		(select sum(AWB_PCS) from PRINT_CGO_MANIFEST b where a.AWB_ULD_NO=b.AWB_ULD_NO) as pcs,
				decode(AWB_TOT_PCS,null,'',AWB_TOT_PCS) awbTotPcs,decode(AWB_TOT_WT,null,'',trim(to_char(AWB_TOT_WT,'999999990.99'))) awbTotWt,
				uld_key as uldNo, decode(AWB_PCS,null,'0',AWB_PCS) uldPcs,decode(bk_ind,null,' ',bk_ind) bkkField,decode(awb_wt,null,'0',trim(to_char(awb_wt,'999999990.99'))) uldGrossWgt,
				CONTENT nature, decode(SPL_CODE,null,'',SPL_CODE) shcCode,first_flt partFltKey,to_char(first_flt_dt,'DDMONYY') partFltDate,upper(awb_remark) awbRemark,upper(uld_remark) uldRemark, 
				decode(ORIGIN,null,'',ORIGIN||'/')|| decode(DEST,null,'',DEST) orig, DEST destination,awb_uld_ind awbUldInd,uld_key uldKey,group_no groupNo,CONNECT_FLT connFlt,to_char(CONNECT_FLT_DT,'DDMONYY') connFltDate		
			   FROM 
				PRINT_CGO_MANIFEST a 
				<isEqual compareValue="AWB ULD" property="format">
				order by awbNo,uldKey
				</isEqual>
				<isEqual compareValue="ULD AWB" property="format">
				order by uldKey,awbNo
				</isEqual>
</select>
<select id="exp_rept_542_US_ULD_AWB_BU" parameterClass="cargo.cms.export.report.bo.PrintCgoManfReptBO" resultClass="cargo.cms.export.report.bo.PrintCgoManfReptBO">
SELECT    	
	SNO as serialNum, UNLDG_PT  dest,UNLDG_PT  unldgPt, AWB_ULD_NO as awbNo,
				(select trim(to_char(sum(awb_wt),'999999990.99')) from PRINT_CGO_MANIFEST b where a.AWB_ULD_NO=b.AWB_ULD_NO) as wt,
        		(select sum(AWB_PCS) from PRINT_CGO_MANIFEST b where a.AWB_ULD_NO=b.AWB_ULD_NO) as pcs,
				decode(AWB_TOT_PCS,null,'',AWB_TOT_PCS) awbTotPcs,decode(AWB_TOT_WT,null,'',trim(to_char(AWB_TOT_WT,'999999990.99'))) awbTotWt,
				uld_key as uldNo, decode(AWB_PCS,null,'0',AWB_PCS) uldPcs,decode(bk_ind,null,' ',bk_ind) bkkField,decode(awb_wt,null,'0',trim(to_char(awb_wt,'999999990.99'))) uldGrossWgt,
				CONTENT nature, decode(SPL_CODE,null,'',SPL_CODE) shcCode,first_flt partFltKey,to_char(first_flt_dt,'DDMONYY') partFltDate,upper(awb_remark) awbRemark,upper(uld_remark) uldRemark, 
				decode(ORIGIN,null,'',ORIGIN||'/')|| decode(DEST,null,'',DEST) orig, DEST destination,awb_uld_ind awbUldInd,uld_key uldKey,group_no groupNo,CONNECT_FLT connFlt,to_char(CONNECT_FLT_DT,'DDMONYY') connFltDate		
			   FROM 
				PRINT_CGO_MANIFEST a
				where ASSIGNED_BULK_PCS is not null or (rpt_type = 'U' and awb_pcs is null)
				<isEqual compareValue="AWB ULD" property="format">
				order by awbNo,uldKey
				</isEqual>
				<isEqual compareValue="ULD AWB" property="format">
				order by uldKey,awbNo
				</isEqual>
				
</select>

<select id="sqlQueryDgAndShcReptLocnDtls" parameterClass="cargo.cms.export.report.bo.DGandShcReptBO" resultClass="cargo.cms.export.report.bo.DGandShcReptBO">
SELECT INV.ULD_KEY AS uldKey,ULDINV.contr_code AS contrCode,INV.PPK_IND AS ppkInd,INV.LSP_NO AS lspNo FROM AWB_INVENTORY INV
LEFT JOIN ULD_INVENTORY ULDINV ON ULDINV.ULD_KEY = INV.ULD_KEY
WHERE AWB_NO=#awbNo# AND AWB_DATE=#awbDate#
</select>

<select id="sqlQueryDgAndShcReptExp" parameterClass="cargo.cms.export.report.bo.DGandShcReptBO" resultClass="cargo.cms.export.report.bo.DGandShcReptBO">
select rownum serialNo,awbNo,awbDate,orig,dest,awbPcs,
awbWt,
manifestPcs,
manifestWt,
commodity,shc,fltKey,fltDate,ata,awbFlow,fltRoute,pmanPort,fltCgoType,partSpmnt,shpName,cnsgnName,agentName,uldKey,loadPc,loadWt,contour,transType,hdlgMode,eta,sta,ppkInd from(
select rownum serialNo,awbNo,awbDate,orig,dest,awbPcs,
decode(trunc(TRIM(to_char(awbWt,'999999999999999.99'))),0,0|| TRIM(to_char(awbWt,'999999999999999.99')), TRIM(to_char(awbWt,'999999999999999.99'))) awbWt,
manifestPcs,
decode(trunc(TRIM(to_char(manifestWt,'999999999999999.99'))),0,0|| TRIM(to_char(manifestWt,'999999999999999.99')), TRIM(to_char(manifestWt,'999999999999999.99'))) manifestWt,
commodity,shc,fltKey,TO_CHAR(fltDate,'DDMONYY') fltDate,ata,awbFlow,fltRoute,pmanPort,fltCgoType,partSpmnt,shpName,cnsgnName,agentName,uldKey,loadPc,loadWt,contour,transType,hdlgMode,eta,sta,ppkInd from(
select A.AWB_NO awbNo,TO_CHAR(A.AWB_DATE,'DDMONYY') AS awbDate, B.ORIG orig,B.DEST dest,B.PCS awbPcs,B.WT awbWt,A.PMAN_PCS manifestPcs,A.PMAN_WT manifestWt,B.CONTENT commodity,b.AWB_TYPE awbFlow,
decode(B.spl_code1, null, '', B.spl_code1 || decode(B.spl_code2, null, '', ','))
      || decode(B.spl_code2, null, '', B.spl_code2 || decode(B.spl_code3, null, '', ','))
      || decode(B.spl_code3, null, '', B.spl_code3 || decode(B.spl_code4, null, '', ','))
      || decode(B.spl_code4, null, '', B.spl_code4 || decode(B.spl_code5, null, '', ','))
      || decode(B.spl_code5, null, '', B.spl_code5 || decode(B.spl_code6, null, '', ','))
      || decode(B.spl_code6, null, '', B.spl_code6 || decode(B.spl_code7, null, '', ','))
      || decode(B.spl_code7, null, '', B.spl_code7 || decode(B.spl_code8, null, '', ','))
      || decode(B.spl_code8, null, '', B.spl_code8 || decode(B.spl_code9, null, '', ','))
      || decode(B.spl_code9, null, '', B.spl_code9) shc,
  a.flt_key fltKey,a.flt_date fltDate,
  CASE WHEN C.act_date IS NOT NULL AND C.act_TIME IS NOT NULL THEN
  SUBSTR(lpad(c.act_time,4,0),0,2)||':'||SUBSTR(lpad(c.act_time,4,0),3,2)||'/'||TO_CHAR(c.act_date,'DDMON')
  END ata,
  CASE WHEN C.est_date IS NOT NULL AND C.est_TIME IS NOT NULL THEN
  SUBSTR(lpad(c.est_time,4,0),0,2)||':'||SUBSTR(lpad(c.est_time,4,0),3,2)||'/'||TO_CHAR(c.est_DATE,'DDMON')  END eta,
  CASE WHEN C.sch_date IS NOT NULL AND C.sch_TIME IS NOT NULL THEN
  SUBSTR(lpad(c.sch_time,4,0),0,2)||':'||SUBSTR(lpad(c.sch_time,4,0),3,2)||'/'||TO_CHAR(c.sch_date,'DDMON')  END sta,
  pkg_common.flt_route(a.flt_key,a.flt_date,'D') as fltRoute,
  a.unldg_pt as pmanPort,
  c.cgo_acft_type as fltCgoType,
  (SELECT COUNT(*) FROM awb awb,  EXP_PMANIFEST_AWB pmanawb WHERE pmanawb.AWB_NO = awb.AWB_NO AND pmanawb.AWB_DATE = awb.AWB_DATE AND awb.CAR_YN   ='Y' AND awb.pcs      > pmanawb.pman_pcs AND awb.AWB_NO   =b.awb_no AND awb.AWB_DATE =b.awb_date ) AS partSpmnt,
  car.SHPR_NAME as shpName,car.CSGNE_NAME as cnsgnName,car.AGENT_NAME as agentName,BUPDTL.ULD_KEY uldKey,BUPDTL.LOAD_PCS loadPc,BUPDTL.LOAD_WT loadWt,
  nvl((select contr_code from exp_flt_uld where flt_key=a.flt_key and flt_date=a.flt_date and uld_key=BUPDTL.ULD_KEY and flt_type='E'),uld.contr_code) as contour,'NA' as transType,uld.handling_mode as hdlgMode,decode(uld.ppk_ind,'Y','PPK',decode(ULD.mix_ppk_ind,'Y','Mix','')) ppkInd
from exp_pmanifest_awb a,awb b,flt_opr c,exp_car car,
(SELECT ULD.FLT_KEY FLT_KEY,TO_CHAR(ULD.FLT_DATE,'DDMONYY') FLT_DATE,ULD.ULD_BT_NO ULD_KEY,ULDAWB.AWB_NO AWB_NO,TO_CHAR(ULDAWB.AWB_DATE,'DDMONYY') AWB_DATE,SUM(ULDAWB.ASSIGNED_PCS) LOAD_PCS,SUM(ULDAWB.ASSIGNED_WT) LOAD_WT
	FROM EXP_PMANIFEST_ULD ULD,EXP_PMANIFEST_ULD_AWB ULDAWB
  WHERE ULDAWB.FLT_KEY     = ULD.FLT_KEY AND ULDAWB.FLT_DATE = ULD.FLT_DATE AND ULDAWB.ULD_BT_NO = ULD.ULD_BT_NO
        GROUP BY ULD.FLT_KEY,ULD.FLT_DATE,ULD.ULD_BT_NO,ULDAWB.AWB_NO,ULDAWB.AWB_DATE) BUPDTL,ULD_INVENTORY ULD
where a.awb_no=b.awb_no 
and a.awb_date=b.awb_date
and a.flt_key=c.flt_key
and a.flt_date=c.sch_date
and car.awb_no(+) = b.awb_no and car.awb_date(+) = b.awb_date
AND BUPDTL.FLT_KEY(+) = a.flt_key AND BUPDTL.FLT_DATE(+) =a.flt_date AND BUPDTL.AWB_NO(+)=A.AWB_NO AND BUPDTL.AWB_DATE(+) = A.AWB_DATE
 AND ULD.ULD_KEY (+) = BUPDTL.ULD_KEY
AND C.FLT_TYPE='D'
<isEmpty property="searchFltKey">
<isEmpty property="searchFltDate">
<isEqual property="active" compareValue="Y">
	AND C.SCH_DATE BETWEEN TO_DATE(#fromDate#,'DDMONYY') AND TO_DATE(#toDate#,'DDMONYY')
</isEqual>
<isEqual property="active" compareValue="N">
	AND C.ACT_DATE BETWEEN TO_DATE(#actFromDate#,'DDMONYY') AND TO_DATE(#actToDate#,'DDMONYY')
</isEqual>
</isEmpty></isEmpty>
AND (B.spl_code1 IS NOT NULL
OR b.spl_code2 IS NOT NULL
OR b.spl_code3 IS NOT NULL
OR b.spl_code4 IS NOT NULL
OR b.spl_code5 IS NOT NULL
OR b.spl_code6 IS NOT NULL
OR b.spl_code7 IS NOT NULL
OR b.spl_code8 IS NOT NULL
OR b.spl_code9 IS NOT NULL
)
and (
#shc1# in (b.spl_code1,b.spl_code2,b.spl_code3,b.spl_code4,b.spl_code5,b.spl_code6,b.spl_code7,b.spl_code8,B.SPL_CODE9)
or #shc2# in (b.spl_code1,b.spl_code2,b.spl_code3,b.spl_code4,b.spl_code5,b.spl_code6,b.spl_code7,b.spl_code8,B.SPL_CODE9)
or #shc3# in (b.spl_code1,b.spl_code2,b.spl_code3,b.spl_code4,b.spl_code5,b.spl_code6,b.spl_code7,b.spl_code8,B.SPL_CODE9)
<isEmpty property="shc1">
<isEmpty property="shc2">
<isEmpty property="shc3">
or 1=1
 </isEmpty>  
</isEmpty>
</isEmpty>

)
<isNotEmpty property="groupCarrCode">
      AND   (C.CARR_CODE = #groupCarrCode# 
      OR C.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP 
      WHERE GRP_CARR_CODE     = #groupCarrCode#))                                          
</isNotEmpty>
<isNotEmpty property="carrCode">
      AND   C.CARR_CODE = #carrCode# 
</isNotEmpty>
<isNotEmpty property="arrDep">
  and c.flt_type=#arrDep#
</isNotEmpty>
<isNotEmpty property="origDest">
  and (#origDest# = b.orig or #origDest# = b.dest)
</isNotEmpty>
<isNotEmpty property="searchFltKey">
<isNotEmpty property="searchFltDate">
AND a.flt_key = #searchFltKey# and a.flt_date=#searchFltDate#
</isNotEmpty>
</isNotEmpty>


<isEqual compareValue="Y" property="dgYN">
AND (B.SPL_CODE1 IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
OR B.SPL_CODE2 IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
OR B.SPL_CODE3 IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
OR B.SPL_CODE4 IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
OR B.SPL_CODE5 IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
OR B.SPL_CODE6 IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
OR B.SPL_CODE7 IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
OR B.SPL_CODE8 IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
OR B.SPL_CODE9 IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG'))
</isEqual>
<isEqual compareValue="N" property="dgYN">
AND (NVL(B.SPL_CODE1,'*') NOT IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
AND NVL(B.SPL_CODE2,'*') NOT IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
AND NVL(B.SPL_CODE3,'*') NOT IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
AND NVL(B.SPL_CODE4,'*') NOT IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
AND NVL(B.SPL_CODE5,'*') NOT IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
AND NVL(B.SPL_CODE6,'*') NOT IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
AND NVL(B.SPL_CODE7,'*') NOT IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
AND NVL(B.SPL_CODE8,'*') NOT IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
AND NVL(B.SPL_CODE9,'*') NOT IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG'))
</isEqual>
)
union all
select rownum serialNo,awbNo,awbDate,orig,dest,awbPcs,
decode(trunc(TRIM(to_char(awbWt,'999999999999999.99'))),0,0|| TRIM(to_char(awbWt,'999999999999999.99')), TRIM(to_char(awbWt,'999999999999999.99'))) awbWt,
manifestPcs,
decode(trunc(TRIM(to_char(manifestWt,'999999999999999.99'))),0,0|| TRIM(to_char(manifestWt,'999999999999999.99')),TRIM(to_char(manifestWt,'999999999999999.99'))) manifestWt,
commodity,shc,fltKey,TO_CHAR(fltDate,'DDMONYY') fltDate,ata,awbFlow,fltRoute,pmanPort,fltCgoType,partSpmnt,shpName,cnsgnName,agentName,uldKey,loadPc,loadWt,contour,transType,hdlgMode,eta,sta,'' as ppkInd from(
select A.AWB_NO awbNo,TO_CHAR(A.AWB_DATE,'DDMONYY') AS awbDate, B.ORIG orig,B.DEST dest,B.PCS awbPcs,B.WT awbWt,(A.ppk_pcs+a.bulk_pcs) manifestPcs,(A.ppk_wt+a.bulk_wt) manifestWt,B.CONTENT commodity,b.AWB_TYPE awbFlow,
decode(B.spl_code1, null, '', B.spl_code1 || decode(B.spl_code2, null, '', ','))
      || decode(B.spl_code2, null, '', B.spl_code2 || decode(B.spl_code3, null, '', ','))
      || decode(B.spl_code3, null, '', B.spl_code3 || decode(B.spl_code4, null, '', ','))
      || decode(B.spl_code4, null, '', B.spl_code4 || decode(B.spl_code5, null, '', ','))
      || decode(B.spl_code5, null, '', B.spl_code5 || decode(B.spl_code6, null, '', ','))
      || decode(B.spl_code6, null, '', B.spl_code6 || decode(B.spl_code7, null, '', ','))
      || decode(B.spl_code7, null, '', B.spl_code7 || decode(B.spl_code8, null, '', ','))
      || decode(B.spl_code8, null, '', B.spl_code8 || decode(B.spl_code9, null, '', ','))
      || decode(B.spl_code9, null, '', B.spl_code9) shc,
  a.flt_key fltKey,a.flt_date fltDate,
  CASE WHEN C.act_date IS NOT NULL AND C.act_TIME IS NOT NULL THEN
  SUBSTR(lpad(c.act_time,4,0),0,2)||':'||SUBSTR(lpad(c.act_time,4,0),3,2)||'/'||TO_CHAR(c.act_date,'DDMON')
  END ata,
   CASE WHEN C.est_date IS NOT NULL AND C.est_TIME IS NOT NULL THEN
  SUBSTR(lpad(c.est_time,4,0),0,2)||':'||SUBSTR(lpad(c.est_time,4,0),3,2)||'/'||TO_CHAR(c.est_DATE,'DDMON')  END eta,
  CASE WHEN C.sch_date IS NOT NULL AND C.sch_TIME IS NOT NULL THEN
  SUBSTR(lpad(c.sch_time,4,0),0,2)||':'||SUBSTR(lpad(c.sch_time,4,0),3,2)||'/'||TO_CHAR(c.sch_date,'DDMON')  END sta,
   pkg_common.flt_route(a.flt_key,a.flt_date,'D') as fltRoute,
  a.unldg_pt as pmanPort,
  c.cgo_acft_type as fltCgoType,
  (SELECT COUNT(*) FROM awb awb,  exp_pman_tarmac_awb pmanawb WHERE pmanawb.AWB_NO = awb.AWB_NO AND pmanawb.AWB_DATE = awb.AWB_DATE AND awb.CAR_YN   ='Y' AND awb.pcs      > (pmanawb.ppk_wt+pmanawb.bulk_wt) AND awb.AWB_NO   =b.awb_no AND awb.AWB_DATE =b.awb_date ) AS partSpmnt,
  car.SHPR_NAME as shpName,car.CSGNE_NAME as cnsgnName,car.AGENT_NAME as agentName,BUPDTL.ULD_KEY uldKey,BUPDTL.LOAD_PCS loadPc,BUPDTL.LOAD_WT loadWt,
  nvl((select contr_code from exp_flt_uld where flt_key=a.flt_key and flt_date=a.flt_date and uld_key=BUPDTL.ULD_KEY and flt_type='E'),uld.contr_code) as contour,'NA' as transType,uld.handling_mode as hdlgMode
from exp_pman_tarmac_awb a,awb b,flt_opr c,exp_car car,
(SELECT ULD.FLT_KEY FLT_KEY,TO_CHAR(ULD.FLT_DATE,'DDMONYY') FLT_DATE,ULD.ULD_BT_NO ULD_KEY,ULDAWB.AWB_NO AWB_NO,TO_CHAR(ULDAWB.AWB_DATE,'DDMONYY') AWB_DATE,SUM(ULDAWB.ASSIGNED_PCS) LOAD_PCS,SUM(ULDAWB.ASSIGNED_WT) LOAD_WT
	FROM EXP_PMAN_TARMAC_ULD ULD,EXP_PMAN_TARMAC_ULD_AWB ULDAWB
  WHERE ULDAWB.FLT_KEY     = ULD.FLT_KEY AND ULDAWB.FLT_DATE = ULD.FLT_DATE AND ULDAWB.ULD_BT_NO = ULD.ULD_BT_NO
        GROUP BY ULD.FLT_KEY,ULD.FLT_DATE,ULD.ULD_BT_NO,ULDAWB.AWB_NO,ULDAWB.AWB_DATE) BUPDTL,ULD_INVENTORY ULD
where a.awb_no=b.awb_no 
and a.awb_date=b.awb_date
and a.flt_key=c.flt_key
and a.flt_date=c.sch_date
and car.awb_no(+) = b.awb_no and car.awb_date(+) = b.awb_date
AND BUPDTL.FLT_KEY(+) = a.flt_key AND BUPDTL.FLT_DATE(+) =a.flt_date AND BUPDTL.AWB_NO(+)=A.AWB_NO AND BUPDTL.AWB_DATE(+) = A.AWB_DATE
 AND ULD.ULD_KEY (+) = BUPDTL.ULD_KEY
AND C.FLT_TYPE='D'
<isEmpty property="searchFltKey">
<isEmpty property="searchFltDate">
<isEqual property="active" compareValue="Y">
	AND C.SCH_DATE BETWEEN TO_DATE(#fromDate#,'DDMONYY') AND TO_DATE(#toDate#,'DDMONYY')
</isEqual>
<isEqual property="active" compareValue="N">
	AND C.ACT_DATE BETWEEN TO_DATE(#actFromDate#,'DDMONYY') AND TO_DATE(#actToDate#,'DDMONYY')
</isEqual>
</isEmpty></isEmpty>
AND (B.spl_code1 IS NOT NULL
OR b.spl_code2 IS NOT NULL
OR b.spl_code3 IS NOT NULL
OR b.spl_code4 IS NOT NULL
OR b.spl_code5 IS NOT NULL
OR b.spl_code6 IS NOT NULL
OR b.spl_code7 IS NOT NULL
OR b.spl_code8 IS NOT NULL
OR b.spl_code9 IS NOT NULL
)
and (
#shc1# in (b.spl_code1,b.spl_code2,b.spl_code3,b.spl_code4,b.spl_code5,b.spl_code6,b.spl_code7,b.spl_code8,B.SPL_CODE9)
or #shc2# in (b.spl_code1,b.spl_code2,b.spl_code3,b.spl_code4,b.spl_code5,b.spl_code6,b.spl_code7,b.spl_code8,B.SPL_CODE9)
or #shc3# in (b.spl_code1,b.spl_code2,b.spl_code3,b.spl_code4,b.spl_code5,b.spl_code6,b.spl_code7,b.spl_code8,B.SPL_CODE9)
<isEmpty property="shc1">
<isEmpty property="shc2">
<isEmpty property="shc3">
or 1=1
 </isEmpty>  
</isEmpty>
</isEmpty>

)
<isEmpty property="searchFltKey">
<isEmpty property="searchFltDate">
<isNotEmpty property="groupCarrCode">
      AND   (C.CARR_CODE = #groupCarrCode# 
      OR C.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP 
      WHERE GRP_CARR_CODE     = #groupCarrCode#))                                          
</isNotEmpty>
<isNotEmpty property="carrCode">
      AND   C.CARR_CODE = #carrCode# 
</isNotEmpty>
</isEmpty></isEmpty>
<isNotEmpty property="arrDep">
  and c.flt_type=#arrDep#
</isNotEmpty>
<isNotEmpty property="origDest">
  and (#origDest# = b.orig or #origDest# = b.dest)
</isNotEmpty>
<isNotEmpty property="searchFltKey">
<isNotEmpty property="searchFltDate">
AND a.flt_key = #searchFltKey# and a.flt_date=#searchFltDate#
</isNotEmpty>
</isNotEmpty>
<isEqual compareValue="Y" property="dgYN">
AND (B.SPL_CODE1 IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
OR B.SPL_CODE2 IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
OR B.SPL_CODE3 IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
OR B.SPL_CODE4 IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
OR B.SPL_CODE5 IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
OR B.SPL_CODE6 IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
OR B.SPL_CODE7 IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
OR B.SPL_CODE8 IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
OR B.SPL_CODE9 IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG'))
</isEqual>
<isEqual compareValue="N" property="dgYN">
AND (NVL(B.SPL_CODE1,'*') NOT IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
AND NVL(B.SPL_CODE2,'*') NOT IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
AND NVL(B.SPL_CODE3,'*') NOT IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
AND NVL(B.SPL_CODE4,'*') NOT IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
AND NVL(B.SPL_CODE5,'*') NOT IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
AND NVL(B.SPL_CODE6,'*') NOT IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
AND NVL(B.SPL_CODE7,'*') NOT IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
AND NVL(B.SPL_CODE8,'*') NOT IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
AND NVL(B.SPL_CODE9,'*') NOT IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG'))
</isEqual>
)
union all
select rownum serialNo,awbNo,awbDate,orig,dest,awbPcs,
decode(trunc(TRIM(to_char(awbWt,'999999999999999.99'))),0,0|| TRIM(to_char(awbWt,'999999999999999.99')), TRIM(to_char(awbWt,'999999999999999.99'))) awbWt,
manifestPcs,
decode(trunc(TRIM(to_char(manifestWt,'999999999999999.99'))),0,0|| TRIM(to_char(manifestWt,'999999999999999.99')),TRIM(to_char(manifestWt,'999999999999999.99'))) manifestWt,
commodity,shc,fltKey,TO_CHAR(fltDate,'DDMONYY') fltDate,ata,awbFlow,fltRoute,pmanPort,fltCgoType,partSpmnt,shpName,cnsgnName,agentName,uldKey,loadPc,loadWt,contour,transType,hdlgMode,eta,sta,ppkInd from(
select A.AWB_NO awbNo,TO_CHAR(A.AWB_DATE,'DDMONYY') AS awbDate, B.ORIG orig,B.DEST dest,B.PCS awbPcs,B.WT awbWt,(A.ppk_pcs+a.bulk_pcs) manifestPcs,(A.ppk_wt+a.bulk_wt) manifestWt,B.CONTENT commodity,b.AWB_TYPE awbFlow,
decode(B.spl_code1, null, '', B.spl_code1 || decode(B.spl_code2, null, '', ','))
      || decode(B.spl_code2, null, '', B.spl_code2 || decode(B.spl_code3, null, '', ','))
      || decode(B.spl_code3, null, '', B.spl_code3 || decode(B.spl_code4, null, '', ','))
      || decode(B.spl_code4, null, '', B.spl_code4 || decode(B.spl_code5, null, '', ','))
      || decode(B.spl_code5, null, '', B.spl_code5 || decode(B.spl_code6, null, '', ','))
      || decode(B.spl_code6, null, '', B.spl_code6 || decode(B.spl_code7, null, '', ','))
      || decode(B.spl_code7, null, '', B.spl_code7 || decode(B.spl_code8, null, '', ','))
      || decode(B.spl_code8, null, '', B.spl_code8 || decode(B.spl_code9, null, '', ','))
      || decode(B.spl_code9, null, '', B.spl_code9) shc,
  a.flt_key fltKey,a.flt_date fltDate,
  CASE WHEN C.act_date IS NOT NULL AND C.act_TIME IS NOT NULL THEN
  SUBSTR(lpad(c.act_time,4,0),0,2)||':'||SUBSTR(lpad(c.act_time,4,0),3,2)||'/'||TO_CHAR(c.act_date,'DDMON')
  END ata,
   CASE WHEN C.est_date IS NOT NULL AND C.est_TIME IS NOT NULL THEN
  SUBSTR(lpad(c.est_time,4,0),0,2)||':'||SUBSTR(lpad(c.est_time,4,0),3,2)||'/'||TO_CHAR(c.est_DATE,'DDMON')  END eta,
  CASE WHEN C.sch_date IS NOT NULL AND C.sch_TIME IS NOT NULL THEN
  SUBSTR(lpad(c.sch_time,4,0),0,2)||':'||SUBSTR(lpad(c.sch_time,4,0),3,2)||'/'||TO_CHAR(c.sch_date,'DDMON')  END sta,
   pkg_common.flt_route(a.flt_key,a.flt_date,'D') as fltRoute,
  a.unldg_pt as pmanPort,
  c.cgo_acft_type as fltCgoType,
  (SELECT COUNT(*) FROM awb awb,  exp_pman_tarmac_awb pmanawb WHERE pmanawb.AWB_NO = awb.AWB_NO AND pmanawb.AWB_DATE = awb.AWB_DATE AND awb.CAR_YN   ='Y' AND awb.pcs      > (pmanawb.ppk_wt+pmanawb.bulk_wt) AND awb.AWB_NO   =b.awb_no AND awb.AWB_DATE =b.awb_date ) AS partSpmnt,
  car.SHPR_NAME as shpName,car.CSGNE_NAME as cnsgnName,car.AGENT_NAME as agentName,'' uldKey,BUPDTL.LOAD_PCS loadPc,BUPDTL.LOAD_WT loadWt,'' as contour,'NA' as transType,'' as hdlgMode, '' AS ppkInd
from exp_pman_tarmac_awb a,awb b,flt_opr c,exp_car car,
(SELECT BULKAWB.FLT_KEY FLT_KEY,TO_CHAR(BULKAWB.FLT_DATE,'DDMONYY') FLT_DATE,'XXXXXXXXXXXX' ULD_KEY,BULKAWB.AWB_NO AWB_NO,TO_CHAR(BULKAWB.AWB_DATE,'DDMONYY') AWB_DATE,SUM(BULKAWB.BULK_PCS) LOAD_PCS,SUM(BULKAWB.BULK_WT) LOAD_WT
	FROM EXP_PMAN_TARMAC_AWB BULKAWB WHERE BULKAWB.BULK_PCS IS NOT NULL AND BULKAWB.BULK_WT IS NOT NULL AND BULKAWB.BULK_PCS > 0 AND BULKAWB.PPK_PCS > 0
  GROUP BY BULKAWB.FLT_KEY,BULKAWB.FLT_DATE,BULKAWB.AWB_NO,BULKAWB.AWB_DATE) BUPDTL
where a.awb_no=b.awb_no 
and a.awb_date=b.awb_date
and a.flt_key=c.flt_key
and a.flt_date=c.sch_date
and car.awb_no(+) = b.awb_no and car.awb_date(+) = b.awb_date
AND BUPDTL.FLT_KEY = a.flt_key AND BUPDTL.FLT_DATE =a.flt_date AND BUPDTL.AWB_NO=A.AWB_NO AND BUPDTL.AWB_DATE = A.AWB_DATE
 AND BUPDTL.ULD_KEY = 'XXXXXXXXXXXX'
AND C.FLT_TYPE='D'
<isEmpty property="searchFltKey">
<isEmpty property="searchFltDate">
<isEqual property="active" compareValue="Y">
	AND C.SCH_DATE BETWEEN TO_DATE(#fromDate#,'DDMONYY') AND TO_DATE(#toDate#,'DDMONYY')
</isEqual>
<isEqual property="active" compareValue="N">
	AND C.ACT_DATE BETWEEN TO_DATE(#actFromDate#,'DDMONYY') AND TO_DATE(#actToDate#,'DDMONYY')
</isEqual>
</isEmpty></isEmpty>
AND (B.spl_code1 IS NOT NULL
OR b.spl_code2 IS NOT NULL
OR b.spl_code3 IS NOT NULL
OR b.spl_code4 IS NOT NULL
OR b.spl_code5 IS NOT NULL
OR b.spl_code6 IS NOT NULL
OR b.spl_code7 IS NOT NULL
OR b.spl_code8 IS NOT NULL
OR b.spl_code9 IS NOT NULL
)
and (
#shc1# in (b.spl_code1,b.spl_code2,b.spl_code3,b.spl_code4,b.spl_code5,b.spl_code6,b.spl_code7,b.spl_code8,B.SPL_CODE9)
or #shc2# in (b.spl_code1,b.spl_code2,b.spl_code3,b.spl_code4,b.spl_code5,b.spl_code6,b.spl_code7,b.spl_code8,B.SPL_CODE9)
or #shc3# in (b.spl_code1,b.spl_code2,b.spl_code3,b.spl_code4,b.spl_code5,b.spl_code6,b.spl_code7,b.spl_code8,B.SPL_CODE9)
<isEmpty property="shc1">
<isEmpty property="shc2">
<isEmpty property="shc3">
or 1=1
 </isEmpty>  
</isEmpty>
</isEmpty>

)
<isEmpty property="searchFltKey">
<isEmpty property="searchFltDate">
<isNotEmpty property="groupCarrCode">
      AND   (C.CARR_CODE = #groupCarrCode# 
      OR C.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP 
      WHERE GRP_CARR_CODE     = #groupCarrCode#))                                          
</isNotEmpty>
<isNotEmpty property="carrCode">
      AND   C.CARR_CODE = #carrCode# 
</isNotEmpty>
</isEmpty></isEmpty>
<isNotEmpty property="arrDep">
  and c.flt_type=#arrDep#
</isNotEmpty>
<isNotEmpty property="origDest">
  and (#origDest# = b.orig or #origDest# = b.dest)
</isNotEmpty>
<isNotEmpty property="searchFltKey">
<isNotEmpty property="searchFltDate">
AND a.flt_key = #searchFltKey# and a.flt_date=#searchFltDate#
</isNotEmpty>
</isNotEmpty>
<isEqual compareValue="Y" property="dgYN">
AND (B.SPL_CODE1 IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
OR B.SPL_CODE2 IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
OR B.SPL_CODE3 IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
OR B.SPL_CODE4 IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
OR B.SPL_CODE5 IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
OR B.SPL_CODE6 IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
OR B.SPL_CODE7 IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
OR B.SPL_CODE8 IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
OR B.SPL_CODE9 IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG'))
</isEqual>
<isEqual compareValue="N" property="dgYN">
AND (NVL(B.SPL_CODE1,'*') NOT IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
AND NVL(B.SPL_CODE2,'*') NOT IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
AND NVL(B.SPL_CODE3,'*') NOT IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
AND NVL(B.SPL_CODE4,'*') NOT IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
AND NVL(B.SPL_CODE5,'*') NOT IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
AND NVL(B.SPL_CODE6,'*') NOT IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
AND NVL(B.SPL_CODE7,'*') NOT IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
AND NVL(B.SPL_CODE8,'*') NOT IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
AND NVL(B.SPL_CODE9,'*') NOT IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG'))
</isEqual>
)) A ORDER BY A.fltDate,A.fltKey,A.awbNo asc

</select>
<select id="sqlQueryDgAndShcReptImp" parameterClass="cargo.cms.export.report.bo.DGandShcReptBO" resultClass="cargo.cms.export.report.bo.DGandShcReptBO">
select rownum serialNo,awbNo,awbDate,orig,dest,awbPcs,
decode(trunc(TRIM(to_char(awbWt,'999999999999999.99'))),0,0|| TRIM(to_char(awbWt,'999999999999999.99')), TRIM(to_char(awbWt,'999999999999999.99'))) awbWt,
manifestPcs,
decode(trunc(TRIM(to_char(manifestWt,'999999999999999.99'))),0,0|| TRIM(to_char(manifestWt,'999999999999999.99')), TRIM(to_char(manifestWt,'999999999999999.99'))) manifestWt,
commodity,shc,fltKey,TO_CHAR(fltDate,'DDMONYY') fltDate,ata,awbFlow,fltRoute,fltCgoType,partSpmnt,agentName,cnsgnName,shpName,uldKey,loadPc,loadWt,contour,transType,hdlgMode,eta,sta from(
select A.AWB_NO awbNo,TO_CHAR(A.AWB_DATE,'DDMONYY') AS awbDate, B.ORIG orig,B.DEST dest,B.PCS awbPcs,B.WT awbWt,A.MANIFEST_PCS manifestPcs,A.MANIFEST_WT manifestWt,B.CONTENT commodity,b.AWB_TYPE awbFlow,
decode(B.spl_code1, null, '', B.spl_code1 || decode(B.spl_code2, null, '', ','))
      || decode(B.spl_code2, null, '', B.spl_code2 || decode(B.spl_code3, null, '', ','))
      || decode(B.spl_code3, null, '', B.spl_code3 || decode(B.spl_code4, null, '', ','))
      || decode(B.spl_code4, null, '', B.spl_code4 || decode(B.spl_code5, null, '', ','))
      || decode(B.spl_code5, null, '', B.spl_code5 || decode(B.spl_code6, null, '', ','))
      || decode(B.spl_code6, null, '', B.spl_code6 || decode(B.spl_code7, null, '', ','))
      || decode(B.spl_code7, null, '', B.spl_code7 || decode(B.spl_code8, null, '', ','))
      || decode(B.spl_code8, null, '', B.spl_code8 || decode(B.spl_code9, null, '', ','))
      || decode(B.spl_code9, null, '', B.spl_code9) shc,
  a.flt_key fltKey,a.flt_date fltDate,
  CASE WHEN C.act_date IS NOT NULL AND C.act_TIME IS NOT NULL THEN
  SUBSTR(lpad(c.act_time,4,0),0,2)||':'||SUBSTR(lpad(c.act_time,4,0),3,2)||'/'||TO_CHAR(c.act_date,'DDMON')
  END ata,
  CASE WHEN C.est_date IS NOT NULL AND C.est_TIME IS NOT NULL THEN
  SUBSTR(lpad(c.est_time,4,0),0,2)||':'||SUBSTR(lpad(c.est_time,4,0),3,2)||'/'||TO_CHAR(c.est_DATE,'DDMON')  END eta,
  CASE WHEN C.sch_date IS NOT NULL AND C.sch_TIME IS NOT NULL THEN
  SUBSTR(lpad(c.sch_time,4,0),0,2)||':'||SUBSTR(lpad(c.sch_time,4,0),3,2)||'/'||TO_CHAR(c.sch_date,'DDMON')  END sta,
  pkg_common.flt_route(a.flt_key,a.flt_date,'A') as fltRoute,
  c.cgo_acft_type as fltCgoType,
  (SELECT COUNT(*) FROM imp_car_shp shp,  imp_car_awb awb WHERE shp.awb_no = awb.awb_no AND shp.awb_date = awb.awb_date AND awb.awb_pcs  > shp.manifest_pcs AND shp.awb_no   =b.awb_no AND shp.awb_date =b.awb_date ) AS   partSpmnt,
  carawb.SHPR_NAME as shpName,carawb.CSGNE_NAME as cnsgnName,carawb.APPNTD_AGENT as agentName,DECODE(FFMDTL.ULD_KEY,'XXXXXXXXXXX','','','',FFMDTL.ULD_KEY) uldKey,FFMDTL.LOAD_PCS loadPc,FFMDTL.LOAD_WT loadWt,
  (SELECT CNTR FROM EDI_CPM_DTL WHERE FLT_KEY=A.FLT_KEY AND FLT_DATE=A.FLT_DATE AND uld_key=FFMDTL.ULD_KEY AND ROWNUM=1) as contour,
  (CASE WHEN FFMDTL.ULD_KEY IS NOT NULL THEN 
  (CASE WHEN (SELECT COUNT(1) FROM xt_imp_car_shp_dtl WHERE AWB_NO=A.AWB_NO AND AWB_DATE=A.AWB_DATE AND IMP_FLT_KEY=A.FLT_KEY AND IMP_FLT_DATE=A.FLT_DATE AND ULD_KEY=FFMDTL.ULD_KEY AND FFMDTL.ULD_KEY IS NOT NULL AND ROWNUM=1) > 0 THEN 'XT' 
  ELSE
  (SELECT  STRAGG(STRINGDELIM(DDT.SHP_TRF_TYPE, ',')) FROM V_DDT_DTL DDT WHERE DDT.FLT_KEY     = A.FLT_KEY AND DDT.FLT_DATE    = A.FLT_DATE  AND DDT.AWB_NO = A.AWB_NO AND DDT.AWB_DATE = A.AWB_DATE and DDT.uld_key=FFMDTL.ULD_KEY AND FFMDTL.ULD_KEY IS NOT NULL)
  END)
   ELSE 
  (SELECT  STRAGG(STRINGDELIM(DDT.SHP_TRF_TYPE, ',')) FROM V_DDT_DTL DDT WHERE DDT.FLT_KEY     = A.FLT_KEY AND DDT.FLT_DATE    = A.FLT_DATE  AND DDT.AWB_NO = A.AWB_NO AND DDT.AWB_DATE = A.AWB_DATE AND DDT.ULD_KEY IS NULL) END) as transType,
  (SELECT HANDLING_MODE FROM IMP_ULD_LIST WHERE FLT_KEY=A.FLT_KEY AND FLT_DATE=A.FLT_DATE AND uld_key=FFMDTL.ULD_KEY AND ROWNUM=1) as hdlgMode
from imp_car_shp a,awb b,flt_opr c,IMP_CAR_AWB carawb,
(SELECT M.FLT_KEY FLT_KEY,TO_CHAR(M.FLT_DATE,'DDMONYY') FLT_DATE,K.ULD_KEY ULD_KEY,A.AWB_NO AWB_NO,TO_CHAR(A.AWB_DATE,'DDMONYY') AWB_DATE,SUM(A.MAN_PCS) LOAD_PCS,SUM(A.MAN_WT) LOAD_WT,K.ULD_KEY uldKey
	FROM edi_ffm_shp a, edi_ffm_uld K, edi_ffm_msg m	
  WHERE a.tr_no     =K.tr_no AND a.udoc_line_no= K.doc_line_no	AND K.tr_no       = m.tr_no		AND m.ffm_status  = 'P'
        GROUP BY M.FLT_KEY,M.FLT_DATE,K.ULD_KEY,a.AWB_NO,a.AWB_DATE) FFMDTL,ULD_INVENTORY ULD 
where a.awb_no=b.awb_no 
and a.awb_date=b.awb_date
and a.flt_key=c.flt_key
and a.flt_date=c.sch_date
 and carawb.AWB_NO(+) = b.AWB_NO 
 AND carawb.AWB_DATE(+) = b.AWB_DATE
 AND FFMDTL.FLT_KEY(+) = a.flt_key AND FFMDTL.FLT_DATE(+)=a.flt_date AND FFMDTL.AWB_NO(+)=A.AWB_NO AND FFMDTL.AWB_DATE(+) = A.AWB_DATE
 AND ULD.ULD_KEY (+) = FFMDTL.ULD_KEY
AND C.FLT_TYPE='A'
<isEmpty property="searchFltKey">
<isEmpty property="searchFltDate">
<isEqual property="active" compareValue="Y">
	AND C.SCH_DATE BETWEEN TO_DATE(#fromDate#,'DDMONYY') AND TO_DATE(#toDate#,'DDMONYY')
</isEqual>
<isEqual property="active" compareValue="N">
	AND C.ACT_DATE BETWEEN TO_DATE(#actFromDate#,'DDMONYY') AND TO_DATE(#actToDate#,'DDMONYY')
</isEqual>
</isEmpty></isEmpty>
AND (B.spl_code1 IS NOT NULL
OR b.spl_code2 IS NOT NULL
OR b.spl_code3 IS NOT NULL
OR b.spl_code4 IS NOT NULL
OR b.spl_code5 IS NOT NULL
OR b.spl_code6 IS NOT NULL
OR b.spl_code7 IS NOT NULL
OR b.spl_code8 IS NOT NULL
OR b.spl_code9 IS NOT NULL
)
and (
#shc1# in (b.spl_code1,b.spl_code2,b.spl_code3,b.spl_code4,b.spl_code5,b.spl_code6,b.spl_code7,b.spl_code8,B.SPL_CODE9)
or #shc2# in (b.spl_code1,b.spl_code2,b.spl_code3,b.spl_code4,b.spl_code5,b.spl_code6,b.spl_code7,b.spl_code8,B.SPL_CODE9)
or #shc3# in (b.spl_code1,b.spl_code2,b.spl_code3,b.spl_code4,b.spl_code5,b.spl_code6,b.spl_code7,b.spl_code8,B.SPL_CODE9)
<isEmpty property="shc1">
<isEmpty property="shc2">
<isEmpty property="shc3">
or 1=1
 </isEmpty>  
</isEmpty>
</isEmpty>

)
<isEmpty property="searchFltKey">
<isEmpty property="searchFltDate">
<isNotEmpty property="groupCarrCode">
      AND   (C.CARR_CODE = #groupCarrCode# 
      OR C.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP 
      WHERE GRP_CARR_CODE     = #groupCarrCode#))                                          
</isNotEmpty>
<isNotEmpty property="carrCode">
      AND   C.CARR_CODE = #carrCode# 
</isNotEmpty>
</isEmpty></isEmpty>
<isNotEmpty property="arrDep">
  and c.flt_type=#arrDep#
</isNotEmpty>
<isNotEmpty property="origDest">
  and (#origDest# = b.orig or #origDest# = b.dest)
</isNotEmpty>
<isNotEmpty property="searchFltKey">
<isNotEmpty property="searchFltDate">
AND a.flt_key = #searchFltKey# and a.flt_date=#searchFltDate#
</isNotEmpty>
</isNotEmpty>
<isEqual compareValue="Y" property="dgYN">
AND (B.SPL_CODE1 IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
OR B.SPL_CODE2 IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
OR B.SPL_CODE3 IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
OR B.SPL_CODE4 IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
OR B.SPL_CODE5 IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
OR B.SPL_CODE6 IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
OR B.SPL_CODE7 IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
OR B.SPL_CODE8 IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
OR B.SPL_CODE9 IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG'))
</isEqual>
<isEqual compareValue="N" property="dgYN">
AND (NVL(B.SPL_CODE1,'*') NOT IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
AND NVL(B.SPL_CODE2,'*') NOT IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
AND NVL(B.SPL_CODE3,'*') NOT IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
AND NVL(B.SPL_CODE4,'*') NOT IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
AND NVL(B.SPL_CODE5,'*') NOT IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
AND NVL(B.SPL_CODE6,'*') NOT IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
AND NVL(B.SPL_CODE7,'*') NOT IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
AND NVL(B.SPL_CODE8,'*') NOT IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
AND NVL(B.SPL_CODE9,'*') NOT IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG'))
</isEqual>
) A ORDER BY A.fltDate,A.fltKey,A.awbNo asc

</select>
<select id="sqlQueryDgAndShcRept" parameterClass="cargo.cms.export.report.bo.DGandShcReptBO" resultClass="cargo.cms.export.report.bo.DGandShcReptBO">
select rownum serialNo,awbNo,awbDate,orig,dest,awbPcs,
awbWt,
manifestPcs,
manifestWt,
commodity,shc,fltKey,fltDate,ata,eta,sta,awbFlow,fltRoute,'' as pmanPort,fltCgoType,partSpmnt,shpName,cnsgnName,agentName,uldKey,loadPc,loadWt,contour,transType,hdlgMode from(
select rownum serialNo,awbNo,awbDate,orig,dest,awbPcs,
decode(trunc(TRIM(to_char(awbWt,'999999999999999.99'))),0,0|| TRIM(to_char(awbWt,'999999999999999.99')), TRIM(to_char(awbWt,'999999999999999.99'))) awbWt,
manifestPcs,
decode(trunc(TRIM(to_char(manifestWt,'999999999999999.99'))),0,0|| TRIM(to_char(manifestWt,'999999999999999.99')), TRIM(to_char(manifestWt,'999999999999999.99'))) manifestWt,
commodity,shc,fltKey,TO_CHAR(fltDate,'DDMONYY') fltDate,ata,eta,sta,awbFlow,fltRoute,'' as pmanPort,fltCgoType,partSpmnt,shpName,cnsgnName,agentName,uldKey,loadPc,loadWt,contour,transType,hdlgMode from(
select A.AWB_NO awbNo,TO_CHAR(A.AWB_DATE,'DDMONYY') AS awbDate, B.ORIG orig,B.DEST dest,B.PCS awbPcs,B.WT awbWt,A.MANIFEST_PCS manifestPcs,A.MANIFEST_WT manifestWt,B.CONTENT commodity,b.AWB_TYPE awbFlow,
decode(B.spl_code1, null, '', B.spl_code1 || decode(B.spl_code2, null, '', ','))
      || decode(B.spl_code2, null, '', B.spl_code2 || decode(B.spl_code3, null, '', ','))
      || decode(B.spl_code3, null, '', B.spl_code3 || decode(B.spl_code4, null, '', ','))
      || decode(B.spl_code4, null, '', B.spl_code4 || decode(B.spl_code5, null, '', ','))
      || decode(B.spl_code5, null, '', B.spl_code5 || decode(B.spl_code6, null, '', ','))
      || decode(B.spl_code6, null, '', B.spl_code6 || decode(B.spl_code7, null, '', ','))
      || decode(B.spl_code7, null, '', B.spl_code7 || decode(B.spl_code8, null, '', ','))
      || decode(B.spl_code8, null, '', B.spl_code8 || decode(B.spl_code9, null, '', ','))
      || decode(B.spl_code9, null, '', B.spl_code9) shc,
  a.flt_key fltKey,a.flt_date fltDate,
  CASE WHEN C.act_date IS NOT NULL AND C.act_TIME IS NOT NULL THEN
  SUBSTR(lpad(c.act_time,4,0),0,2)||':'||SUBSTR(lpad(c.act_time,4,0),3,2)||'/'||TO_CHAR(c.act_date,'DDMON')
  END ata,
  CASE WHEN C.est_date IS NOT NULL AND C.est_TIME IS NOT NULL THEN
  SUBSTR(lpad(c.est_time,4,0),0,2)||':'||SUBSTR(lpad(c.est_time,4,0),3,2)||'/'||TO_CHAR(c.est_DATE,'DDMON')  END eta,
  CASE WHEN C.sch_date IS NOT NULL AND C.sch_TIME IS NOT NULL THEN
  SUBSTR(lpad(c.sch_time,4,0),0,2)||':'||SUBSTR(lpad(c.sch_time,4,0),3,2)||'/'||TO_CHAR(c.sch_date,'DDMON')  END sta,
  pkg_common.flt_route(a.flt_key,a.flt_date,'A') as fltRoute,
  '' AS pmanPort,
  c.cgo_acft_type as fltCgoType,
  (SELECT COUNT(*) FROM imp_car_shp shp,  imp_car_awb awb WHERE shp.awb_no = awb.awb_no AND shp.awb_date = awb.awb_date AND awb.awb_pcs  > shp.manifest_pcs AND shp.awb_no   =b.awb_no AND shp.awb_date =b.awb_date ) AS   partSpmnt,
  carawb.SHPR_NAME as shpName,carawb.CSGNE_NAME as cnsgnName,carawb.APPNTD_AGENT as agentName,FFMDTL.ULD_KEY uldKey,FFMDTL.LOAD_PCS loadPc,FFMDTL.LOAD_WT loadWt,uld.contr_code as contour,uld.transit_type as transType,uld.handling_mode as hdlgMode
from imp_car_shp a,awb b,flt_opr c,IMP_CAR_AWB carawb,
(SELECT M.FLT_KEY FLT_KEY,TO_CHAR(M.FLT_DATE,'DDMONYY') FLT_DATE,K.ULD_KEY ULD_KEY,A.AWB_NO AWB_NO,TO_CHAR(A.AWB_DATE,'DDMONYY') AWB_DATE,SUM(A.MAN_PCS) LOAD_PCS,SUM(A.MAN_WT) LOAD_WT,NVL(K.ULD_KEY,'XXXXXXXXXXX') uldKey
	FROM edi_ffm_shp a, edi_ffm_uld K, edi_ffm_msg m	
  WHERE a.tr_no     =K.tr_no AND a.udoc_line_no= K.doc_line_no	AND K.tr_no       = m.tr_no		AND m.ffm_status  = 'P'
        AND K.ULD_KEY IS NOT NULL 
        GROUP BY M.FLT_KEY,M.FLT_DATE,K.ULD_KEY,a.AWB_NO,a.AWB_DATE) FFMDTL,ULD_INVENTORY ULD 
where a.awb_no=b.awb_no 
and a.awb_date=b.awb_date
and a.flt_key=c.flt_key
and a.flt_date=c.sch_date
 and carawb.AWB_NO(+) = b.AWB_NO 
 AND carawb.AWB_DATE(+) = b.AWB_DATE
 AND FFMDTL.FLT_KEY(+) = a.flt_key AND FFMDTL.FLT_DATE(+)=a.flt_date AND FFMDTL.AWB_NO(+)=A.AWB_NO AND FFMDTL.AWB_DATE(+) = A.AWB_DATE
 AND ULD.ULD_KEY (+) = FFMDTL.ULD_KEY
AND C.FLT_TYPE='A'
<isEmpty property="searchFltKey">
<isEmpty property="searchFltDate">
<isEqual property="active" compareValue="Y">
AND C.SCH_DATE BETWEEN TO_DATE(#fromDate#,'DDMONYY') AND TO_DATE(#toDate#,'DDMONYY')
</isEqual>
<isEqual property="active" compareValue="N">
	AND C.ACT_DATE BETWEEN TO_DATE(#actFromDate#,'DDMONYY') AND TO_DATE(#actToDate#,'DDMONYY')
</isEqual>
</isEmpty></isEmpty>
AND (B.spl_code1 IS NOT NULL
OR b.spl_code2 IS NOT NULL
OR b.spl_code3 IS NOT NULL
OR b.spl_code4 IS NOT NULL
OR b.spl_code5 IS NOT NULL
OR b.spl_code6 IS NOT NULL
OR b.spl_code7 IS NOT NULL
OR b.spl_code8 IS NOT NULL
OR b.spl_code9 IS NOT NULL
)
and (
#shc1# in (b.spl_code1,b.spl_code2,b.spl_code3,b.spl_code4,b.spl_code5,b.spl_code6,b.spl_code7,b.spl_code8,B.SPL_CODE9)
or #shc2# in (b.spl_code1,b.spl_code2,b.spl_code3,b.spl_code4,b.spl_code5,b.spl_code6,b.spl_code7,b.spl_code8,B.SPL_CODE9)
or #shc3# in (b.spl_code1,b.spl_code2,b.spl_code3,b.spl_code4,b.spl_code5,b.spl_code6,b.spl_code7,b.spl_code8,B.SPL_CODE9)
<isEmpty property="shc1">
<isEmpty property="shc2">
<isEmpty property="shc3">
or 1=1
 </isEmpty>  
</isEmpty>
</isEmpty>

)
<isEmpty property="searchFltKey">
<isEmpty property="searchFltDate">
<isNotEmpty property="groupCarrCode">
      AND   (C.CARR_CODE = #groupCarrCode# 
      OR C.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP 
      WHERE GRP_CARR_CODE     = #groupCarrCode#))                                          
</isNotEmpty>
<isNotEmpty property="carrCode">
      AND   C.CARR_CODE = #carrCode# 
</isNotEmpty>
</isEmpty></isEmpty>
<isNotEmpty property="arrDep">
  and c.flt_type=#arrDep#
</isNotEmpty>
<isNotEmpty property="origDest">
  and (#origDest# = b.orig or #origDest# = b.dest)
</isNotEmpty>
<isNotEmpty property="searchFltKey">
<isNotEmpty property="searchFltDate">
AND a.flt_key = #searchFltKey# and a.flt_date=#searchFltDate#
</isNotEmpty>
</isNotEmpty>
<isEqual compareValue="Y" property="dgYN">
AND (B.SPL_CODE1 IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
OR B.SPL_CODE2 IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
OR B.SPL_CODE3 IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
OR B.SPL_CODE4 IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
OR B.SPL_CODE5 IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
OR B.SPL_CODE6 IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
OR B.SPL_CODE7 IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
OR B.SPL_CODE8 IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
OR B.SPL_CODE9 IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG'))
</isEqual>
<isEqual compareValue="N" property="dgYN">
AND (NVL(B.SPL_CODE1,'*') NOT IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
AND NVL(B.SPL_CODE2,'*') NOT IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
AND NVL(B.SPL_CODE3,'*') NOT IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
AND NVL(B.SPL_CODE4,'*') NOT IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
AND NVL(B.SPL_CODE5,'*') NOT IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
AND NVL(B.SPL_CODE6,'*') NOT IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
AND NVL(B.SPL_CODE7,'*') NOT IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
AND NVL(B.SPL_CODE8,'*') NOT IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
AND NVL(B.SPL_CODE9,'*') NOT IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG'))
</isEqual>
UNION ALL
select A.AWB_NO awbNo,TO_CHAR(A.AWB_DATE,'DDMONYY') AS awbDate, B.ORIG orig,B.DEST dest,B.PCS awbPcs,B.WT awbWt,A.PMAN_PCS manifestPcs,A.PMAN_WT manifestWt,B.CONTENT commodity,B.AWB_TYPE awbFlow,
decode(B.spl_code1, null, '', B.spl_code1 || decode(B.spl_code2, null, '', ','))
      || decode(B.spl_code2, null, '', B.spl_code2 || decode(B.spl_code3, null, '', ','))
      || decode(B.spl_code3, null, '', B.spl_code3 || decode(B.spl_code4, null, '', ','))
      || decode(B.spl_code4, null, '', B.spl_code4 || decode(B.spl_code5, null, '', ','))
      || decode(B.spl_code5, null, '', B.spl_code5 || decode(B.spl_code6, null, '', ','))
      || decode(B.spl_code6, null, '', B.spl_code6 || decode(B.spl_code7, null, '', ','))
      || decode(B.spl_code7, null, '', B.spl_code7 || decode(B.spl_code8, null, '', ','))
      || decode(B.spl_code8, null, '', B.spl_code8 || decode(B.spl_code9, null, '', ','))
      || decode(B.spl_code9, null, '', B.spl_code9) shc,
  a.flt_key fltKey,a.flt_date fltDate,
  CASE WHEN C.act_date IS NOT NULL AND C.act_TIME IS NOT NULL THEN
  SUBSTR(lpad(c.act_time,4,0),0,2)||':'||SUBSTR(lpad(c.act_time,4,0),3,2)||'/'||TO_CHAR(c.act_date,'DDMON')
  END ata,
  CASE WHEN C.est_date IS NOT NULL AND C.est_TIME IS NOT NULL THEN
  SUBSTR(lpad(c.est_time,4,0),0,2)||':'||SUBSTR(lpad(c.est_time,4,0),3,2)||'/'||TO_CHAR(c.est_DATE,'DDMON')  END eta,
  CASE WHEN C.sch_date IS NOT NULL AND C.sch_TIME IS NOT NULL THEN
  SUBSTR(lpad(c.sch_time,4,0),0,2)||':'||SUBSTR(lpad(c.sch_time,4,0),3,2)||'/'||TO_CHAR(c.sch_date,'DDMON')  END sta,
  pkg_common.flt_route(a.flt_key,a.flt_date,'D') as fltRoute,
  a.unldg_pt as pmanPort,
  c.cgo_acft_type as fltCgoType,
  (SELECT COUNT(*) FROM awb awb,  EXP_PMANIFEST_AWB pmanawb WHERE pmanawb.AWB_NO = awb.AWB_NO AND pmanawb.AWB_DATE = awb.AWB_DATE AND awb.CAR_YN   ='Y' AND awb.pcs      > pmanawb.pman_pcs AND awb.AWB_NO   =b.awb_no AND awb.AWB_DATE =b.awb_date ) AS partSpmnt,
  car.SHPR_NAME as shpName,car.CSGNE_NAME as cnsgnName,car.AGENT_NAME as agentName,BUPDTL.ULD_KEY uldKey,BUPDTL.LOAD_PCS loadPc,BUPDTL.LOAD_WT loadWt,uld.contr_code as contour,uld.transit_type as transType,uld.handling_mode as hdlgMode
from exp_pmanifest_awb a,awb b,flt_opr c,exp_car car,
(SELECT ULD.FLT_KEY FLT_KEY,TO_CHAR(ULD.FLT_DATE,'DDMONYY') FLT_DATE,ULD.ULD_BT_NO ULD_KEY,ULDAWB.AWB_NO AWB_NO,TO_CHAR(ULDAWB.AWB_DATE,'DDMONYY') AWB_DATE,SUM(ULDAWB.ASSIGNED_PCS) LOAD_PCS,SUM(ULDAWB.ASSIGNED_WT) LOAD_WT
	FROM EXP_PMANIFEST_ULD ULD,EXP_PMANIFEST_ULD_AWB ULDAWB
  WHERE ULDAWB.FLT_KEY     = ULD.FLT_KEY AND ULDAWB.FLT_DATE = ULD.FLT_DATE AND ULDAWB.ULD_BT_NO = ULD.ULD_BT_NO
        GROUP BY ULD.FLT_KEY,ULD.FLT_DATE,ULD.ULD_BT_NO,ULDAWB.AWB_NO,ULDAWB.AWB_DATE) BUPDTL,ULD_INVENTORY ULD
where a.awb_no=b.awb_no 
and a.awb_date=b.awb_date
and a.flt_key=c.flt_key
and a.flt_date=c.sch_date
and car.awb_no(+) = b.awb_no and car.awb_date(+) = b.awb_date
AND BUPDTL.FLT_KEY(+) = a.flt_key AND BUPDTL.FLT_DATE(+) =a.flt_date AND BUPDTL.AWB_NO(+)=A.AWB_NO AND BUPDTL.AWB_DATE(+) = A.AWB_DATE
 AND ULD.ULD_KEY (+) = BUPDTL.ULD_KEY
AND C.FLT_TYPE='D'
<isEmpty property="searchFltKey">
<isEmpty property="searchFltDate">
<isEqual property="active" compareValue="Y">
AND C.SCH_DATE BETWEEN  TO_DATE(#fromDate#,'DDMONYY') AND TO_DATE(#toDate#,'DDMONYY')
</isEqual>
<isEqual property="active" compareValue="N">
	AND C.ACT_DATE BETWEEN TO_DATE(#actFromDate#,'DDMONYY') AND TO_DATE(#actToDate#,'DDMONYY')
</isEqual>
</isEmpty></isEmpty>
AND (B.spl_code1 IS NOT NULL
OR b.spl_code2 IS NOT NULL
OR b.spl_code3 IS NOT NULL
OR b.spl_code4 IS NOT NULL
OR b.spl_code5 IS NOT NULL
OR b.spl_code6 IS NOT NULL
OR b.spl_code7 IS NOT NULL
OR b.spl_code8 IS NOT NULL
OR b.spl_code9 IS NOT NULL
)
and (
#shc1# in (b.spl_code1,b.spl_code2,b.spl_code3,b.spl_code4,b.spl_code5,b.spl_code6,b.spl_code7,b.spl_code8,B.SPL_CODE9)
or #shc2# in (b.spl_code1,b.spl_code2,b.spl_code3,b.spl_code4,b.spl_code5,b.spl_code6,b.spl_code7,b.spl_code8,B.SPL_CODE9)
or #shc3# in (b.spl_code1,b.spl_code2,b.spl_code3,b.spl_code4,b.spl_code5,b.spl_code6,b.spl_code7,b.spl_code8,B.SPL_CODE9)
<isEmpty property="shc1">
<isEmpty property="shc2">
<isEmpty property="shc3">
or 1=1
 </isEmpty>  
</isEmpty>
</isEmpty>

)
<isEmpty property="searchFltKey">
<isEmpty property="searchFltDate">
<isNotEmpty property="groupCarrCode">
      AND   (C.CARR_CODE = #groupCarrCode# 
      OR C.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP 
      WHERE GRP_CARR_CODE     = #groupCarrCode#))                                          
</isNotEmpty>
<isNotEmpty property="carrCode">
      AND   C.CARR_CODE = #carrCode# 
</isNotEmpty>
</isEmpty></isEmpty>
<isNotEmpty property="arrDep">
  and c.flt_type=#arrDep#
</isNotEmpty>
<isNotEmpty property="origDest">
  and (#origDest# = b.orig or #origDest# = b.dest)
</isNotEmpty>
<isNotEmpty property="searchFltKey">
<isNotEmpty property="searchFltDate">
AND a.flt_key = #searchFltKey# and a.flt_date=#searchFltDate#
</isNotEmpty>
</isNotEmpty>
<isEqual compareValue="Y" property="dgYN">
AND (B.SPL_CODE1 IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
OR B.SPL_CODE2 IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
OR B.SPL_CODE3 IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
OR B.SPL_CODE4 IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
OR B.SPL_CODE5 IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
OR B.SPL_CODE6 IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
OR B.SPL_CODE7 IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
OR B.SPL_CODE8 IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
OR B.SPL_CODE9 IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG'))
</isEqual>
<isEqual compareValue="N" property="dgYN">
AND (NVL(B.SPL_CODE1,'*') NOT IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
AND NVL(B.SPL_CODE2,'*') NOT IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
AND NVL(B.SPL_CODE3,'*') NOT IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
AND NVL(B.SPL_CODE4,'*') NOT IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
AND NVL(B.SPL_CODE5,'*') NOT IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
AND NVL(B.SPL_CODE6,'*') NOT IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
AND NVL(B.SPL_CODE7,'*') NOT IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
AND NVL(B.SPL_CODE8,'*') NOT IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
AND NVL(B.SPL_CODE9,'*') NOT IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG'))
</isEqual>
UNION ALL
select A.AWB_NO awbNo,TO_CHAR(A.AWB_DATE,'DDMONYY') AS awbDate, B.ORIG orig,B.DEST dest,B.PCS awbPcs,B.WT awbWt,(A.PPK_PCS+A.BULK_PCS) manifestPcs,(A.PPK_WT+A.BULK_WT) manifestWt,B.CONTENT commodity,b.AWB_TYPE awbFlow,
decode(B.spl_code1, null, '', B.spl_code1 || decode(B.spl_code2, null, '', ','))
      || decode(B.spl_code2, null, '', B.spl_code2 || decode(B.spl_code3, null, '', ','))
      || decode(B.spl_code3, null, '', B.spl_code3 || decode(B.spl_code4, null, '', ','))
      || decode(B.spl_code4, null, '', B.spl_code4 || decode(B.spl_code5, null, '', ','))
      || decode(B.spl_code5, null, '', B.spl_code5 || decode(B.spl_code6, null, '', ','))
      || decode(B.spl_code6, null, '', B.spl_code6 || decode(B.spl_code7, null, '', ','))
      || decode(B.spl_code7, null, '', B.spl_code7 || decode(B.spl_code8, null, '', ','))
      || decode(B.spl_code8, null, '', B.spl_code8 || decode(B.spl_code9, null, '', ','))
      || decode(B.spl_code9, null, '', B.spl_code9) shc,
  a.flt_key fltKey,a.flt_date fltDate,
  CASE WHEN C.act_date IS NOT NULL AND C.act_TIME IS NOT NULL THEN
  SUBSTR(lpad(c.act_time,4,0),0,2)||':'||SUBSTR(lpad(c.act_time,4,0),3,2)||'/'||TO_CHAR(c.act_date,'DDMON')
  END ata,
  CASE WHEN C.est_date IS NOT NULL AND C.est_TIME IS NOT NULL THEN
  SUBSTR(lpad(c.est_time,4,0),0,2)||':'||SUBSTR(lpad(c.est_time,4,0),3,2)||'/'||TO_CHAR(c.est_DATE,'DDMON')  END eta,
  CASE WHEN C.sch_date IS NOT NULL AND C.sch_TIME IS NOT NULL THEN
  SUBSTR(lpad(c.sch_time,4,0),0,2)||':'||SUBSTR(lpad(c.sch_time,4,0),3,2)||'/'||TO_CHAR(c.sch_date,'DDMON')  END sta,
  pkg_common.flt_route(a.flt_key,a.flt_date,'D') as fltRoute,
  a.unldg_pt as pmanPort,
  c.cgo_acft_type as fltCgoType,
  (SELECT COUNT(*) FROM awb awb,  exp_pman_tarmac_awb pmanawb WHERE pmanawb.AWB_NO = awb.AWB_NO AND pmanawb.AWB_DATE = awb.AWB_DATE AND awb.CAR_YN   ='Y' AND awb.pcs      > (pmanawb.ppk_wt+pmanawb.bulk_wt) AND awb.AWB_NO   =b.awb_no AND awb.AWB_DATE =b.awb_date ) AS partSpmnt,
  car.SHPR_NAME as shpName,car.CSGNE_NAME as cnsgnName,car.AGENT_NAME as agentName,BUPDTL.ULD_KEY uldKey,BUPDTL.LOAD_PCS loadPc,BUPDTL.LOAD_WT loadWt,uld.contr_code as contour,uld.transit_type as transType,uld.handling_mode as hdlgMode
from exp_pman_TARMAC_awb a,awb b,flt_opr c,exp_car car,
(SELECT ULD.FLT_KEY FLT_KEY,TO_CHAR(ULD.FLT_DATE,'DDMONYY') FLT_DATE,ULD.ULD_BT_NO ULD_KEY,ULDAWB.AWB_NO AWB_NO,TO_CHAR(ULDAWB.AWB_DATE,'DDMONYY') AWB_DATE,SUM(ULDAWB.ASSIGNED_PCS) LOAD_PCS,SUM(ULDAWB.ASSIGNED_WT) LOAD_WT
	FROM EXP_PMAN_TARMAC_ULD ULD,EXP_PMAN_TARMAC_ULD_AWB ULDAWB
  WHERE ULDAWB.FLT_KEY     = ULD.FLT_KEY AND ULDAWB.FLT_DATE = ULD.FLT_DATE AND ULDAWB.ULD_BT_NO = ULD.ULD_BT_NO
        GROUP BY ULD.FLT_KEY,ULD.FLT_DATE,ULD.ULD_BT_NO,ULDAWB.AWB_NO,ULDAWB.AWB_DATE) BUPDTL,ULD_INVENTORY ULD
where a.awb_no=b.awb_no 
and a.awb_date=b.awb_date
and a.flt_key=c.flt_key
and a.flt_date=c.sch_date
and car.awb_no(+) = b.awb_no and car.awb_date(+) = b.awb_date
AND BUPDTL.FLT_KEY(+) = a.flt_key AND BUPDTL.FLT_DATE(+) =a.flt_date AND BUPDTL.AWB_NO(+)=A.AWB_NO AND BUPDTL.AWB_DATE(+) = A.AWB_DATE
 AND ULD.ULD_KEY (+) = BUPDTL.ULD_KEY
AND C.FLT_TYPE='D'
<isEmpty property="searchFltKey">
<isEmpty property="searchFltDate">
<isEqual property="active" compareValue="Y">
AND C.SCH_DATE BETWEEN  TO_DATE(#fromDate#,'DDMONYY') AND TO_DATE(#toDate#,'DDMONYY')
</isEqual>
<isEqual property="active" compareValue="N">
	AND C.ACT_DATE BETWEEN TO_DATE(#actFromDate#,'DDMONYY') AND TO_DATE(#actToDate#,'DDMONYY')
</isEqual>
</isEmpty></isEmpty>
AND (B.spl_code1 IS NOT NULL
OR b.spl_code2 IS NOT NULL
OR b.spl_code3 IS NOT NULL
OR b.spl_code4 IS NOT NULL
OR b.spl_code5 IS NOT NULL
OR b.spl_code6 IS NOT NULL
OR b.spl_code7 IS NOT NULL
OR b.spl_code8 IS NOT NULL
OR b.spl_code9 IS NOT NULL
)
and (
#shc1# in (b.spl_code1,b.spl_code2,b.spl_code3,b.spl_code4,b.spl_code5,b.spl_code6,b.spl_code7,b.spl_code8,B.SPL_CODE9)
or #shc2# in (b.spl_code1,b.spl_code2,b.spl_code3,b.spl_code4,b.spl_code5,b.spl_code6,b.spl_code7,b.spl_code8,B.SPL_CODE9)
or #shc3# in (b.spl_code1,b.spl_code2,b.spl_code3,b.spl_code4,b.spl_code5,b.spl_code6,b.spl_code7,b.spl_code8,B.SPL_CODE9)
<isEmpty property="shc1">
<isEmpty property="shc2">
<isEmpty property="shc3">
or 1=1
 </isEmpty>  
</isEmpty>
</isEmpty>

)
<isEmpty property="searchFltKey">
<isEmpty property="searchFltDate">
<isNotEmpty property="groupCarrCode">
      AND   (C.CARR_CODE = #groupCarrCode# 
      OR C.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP 
      WHERE GRP_CARR_CODE     = #groupCarrCode#))                                          
</isNotEmpty>
<isNotEmpty property="carrCode">
      AND   C.CARR_CODE = #carrCode# 
</isNotEmpty>
</isEmpty></isEmpty>
<isNotEmpty property="arrDep">
  and c.flt_type=#arrDep#
</isNotEmpty>
<isNotEmpty property="origDest">
  and (#origDest# = b.orig or #origDest# = b.dest)
</isNotEmpty>
<isNotEmpty property="searchFltKey">
<isNotEmpty property="searchFltDate">
AND a.flt_key = #searchFltKey# and a.flt_date=#searchFltDate#
</isNotEmpty>
</isNotEmpty>
<isEqual compareValue="Y" property="dgYN">
AND (B.SPL_CODE1 IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
OR B.SPL_CODE2 IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
OR B.SPL_CODE3 IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
OR B.SPL_CODE4 IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
OR B.SPL_CODE5 IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
OR B.SPL_CODE6 IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
OR B.SPL_CODE7 IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
OR B.SPL_CODE8 IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
OR B.SPL_CODE9 IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG'))
</isEqual>
<isEqual compareValue="N" property="dgYN">
AND (NVL(B.SPL_CODE1,'*') NOT IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
AND NVL(B.SPL_CODE2,'*') NOT IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
AND NVL(B.SPL_CODE3,'*') NOT IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
AND NVL(B.SPL_CODE4,'*') NOT IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
AND NVL(B.SPL_CODE5,'*') NOT IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
AND NVL(B.SPL_CODE6,'*') NOT IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
AND NVL(B.SPL_CODE7,'*') NOT IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
AND NVL(B.SPL_CODE8,'*') NOT IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
AND NVL(B.SPL_CODE9,'*') NOT IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG'))
</isEqual>
)) A ORDER BY A.fltDate,A.fltKey,A.awbNo asc

</select>
<select id="exp_rept_542_US_ULD_ULD" parameterClass="cargo.cms.export.report.bo.PrintCgoManfReptBO" resultClass="cargo.cms.export.report.bo.PrintCgoManfReptBO">
	SELECT    	
	SNO as serialNum, UNLDG_PT  dest,UNLDG_PT  unldgPt, AWB_ULD_NO as awbNo,
			    (select trim(to_char(sum(awb_wt),'999999990.99')) from PRINT_CGO_MANIFEST b where a.AWB_ULD_NO=b.AWB_ULD_NO) as wt,
        		(select sum(AWB_PCS) from PRINT_CGO_MANIFEST b where a.AWB_ULD_NO=b.AWB_ULD_NO) as pcs, 
				decode(AWB_TOT_PCS,null,'',AWB_TOT_PCS) awbTotPcs,decode(AWB_TOT_WT,null,'',trim(to_char(AWB_TOT_WT,'999999990.99'))) awbTotWt,
				uld_key as uldNo, decode(AWB_PCS,null,'0',AWB_PCS) uldPcs,decode(bk_ind,null,' ',bk_ind) bkkField,decode(awb_wt,null,'0',trim(to_char(awb_wt,'999999990.99'))) uldGrossWgt,
				CONTENT nature, decode(SPL_CODE,null,'',SPL_CODE) shcCode,first_flt partFltKey,to_char(first_flt_dt,'DDMONYY') partFltDate,upper(awb_remark) awbRemark,upper(uld_remark) uldRemark, 
				decode(ORIGIN,null,'',ORIGIN||'/')|| decode(DEST,null,'',DEST) orig, DEST destination,awb_uld_ind awbUldInd,uld_key uldKey,group_no groupNo,CONNECT_FLT connFlt,to_char(CONNECT_FLT_DT,'DDMONYY') connFltDate		
			   FROM 
				PRINT_CGO_MANIFEST a order by uldKey,awbNo 
</select>
<select id="exp_rept_542_US_ULD_ULD_BU" parameterClass="cargo.cms.export.report.bo.PrintCgoManfReptBO" resultClass="cargo.cms.export.report.bo.PrintCgoManfReptBO">
SELECT    	
	SNO as serialNum, UNLDG_PT  dest,UNLDG_PT  unldgPt, AWB_ULD_NO as awbNo,
				(select trim(to_char(sum(awb_wt),'999999990.99')) from PRINT_CGO_MANIFEST b where a.AWB_ULD_NO=b.AWB_ULD_NO) as wt,
        		(select sum(AWB_PCS) from PRINT_CGO_MANIFEST b where a.AWB_ULD_NO=b.AWB_ULD_NO) as pcs, 
				decode(AWB_TOT_PCS,null,'',AWB_TOT_PCS) awbTotPcs,decode(AWB_TOT_WT,null,'',trim(to_char(AWB_TOT_WT,'999999990.99'))) awbTotWt,
				uld_key as uldNo, decode(AWB_PCS,null,'0',AWB_PCS) uldPcs,decode(bk_ind,null,' ',bk_ind) bkkField,decode(awb_wt,null,'0',trim(to_char(awb_wt,'999999990.99'))) uldGrossWgt,
				CONTENT nature, decode(SPL_CODE,null,'',SPL_CODE) shcCode,first_flt partFltKey,to_char(first_flt_dt,'DDMONYY') partFltDate,upper(awb_remark) awbRemark,upper(uld_remark) uldRemark, 
				decode(ORIGIN,null,'',ORIGIN||'/')|| decode(DEST,null,'',DEST) orig, DEST destination,awb_uld_ind awbUldInd,uld_key uldKey,group_no groupNo,CONNECT_FLT connFlt,to_char(CONNECT_FLT_DT,'DDMONYY') connFltDate			
			   FROM 
				PRINT_CGO_MANIFEST a
				where ASSIGNED_BULK_PCS is not null or (rpt_type = 'U' and awb_pcs is null) order by uldKey,awbNo
				
</select>
<select id="exp_rept_542_US_ULD_MAX" parameterClass="cargo.cms.export.report.bo.PrintCgoManfReptBO" resultClass="cargo.cms.export.report.bo.PrintCgoManfReptBO">
	SELECT  
	case when ( uld_key ='BULK CARGO' and instr(AWB_ULD_NO,'-')>0 ) then 1
          when ( uld_key ='BT TARMAC' and instr(AWB_ULD_NO,'-')>0 ) then 2
          else 3
      end as bulkOrder,  	
	SNO as serialNum, UNLDG_PT  dest,UNLDG_PT  unldgPt, AWB_ULD_NO as awbNo,
				(select trim(to_char(sum(awb_wt),'999999990.99')) from PRINT_CGO_MANIFEST b where a.AWB_ULD_NO=b.AWB_ULD_NO) as wt,
        		(select sum(AWB_PCS) from PRINT_CGO_MANIFEST b where a.AWB_ULD_NO=b.AWB_ULD_NO) as pcs,
				decode(AWB_TOT_PCS,null,'',AWB_TOT_PCS) awbTotPcs,decode(AWB_TOT_WT,null,'',trim(to_char(AWB_TOT_WT,'999999990.99'))) awbTotWt,
				uld_key as uldNo, decode(AWB_PCS,null,'0',AWB_PCS) uldPcs,decode(bk_ind,null,' ',bk_ind) bkkField,decode(awb_wt,null,'0',trim(to_char(awb_wt,'999999990.99'))) uldGrossWgt,
				CONTENT nature, decode(SPL_CODE,null,'',SPL_CODE) shcCode,first_flt partFltKey,to_char(first_flt_dt,'DDMONYY') partFltDate,upper(awb_remark) awbRemark,upper(uld_remark) uldRemark, 
				decode(ORIGIN,null,'',ORIGIN||'/')|| decode(DEST,null,'',DEST) orig, DEST destination,awb_uld_ind awbUldInd,uld_key uldKey,group_no groupNo,CONNECT_FLT connFlt,to_char(CONNECT_FLT_DT,'DDMONYY') connFltDate		
			   FROM 
				PRINT_CGO_MANIFEST a order by bulkOrder,uldKey,awbNo 
</select>
<select id="exp_rept_542_US_ULD_MAX_BU" parameterClass="cargo.cms.export.report.bo.PrintCgoManfReptBO" resultClass="cargo.cms.export.report.bo.PrintCgoManfReptBO">
SELECT    	
		case when ( uld_key ='BULK CARGO' and instr(AWB_ULD_NO,'-')>0 ) then 1
          when ( uld_key ='BT TARMAC' and instr(AWB_ULD_NO,'-')>0 ) then 2
          else 3
      end as bulkOrder,
	SNO as serialNum, UNLDG_PT  dest,UNLDG_PT  unldgPt, AWB_ULD_NO as awbNo,
				(select trim(to_char(sum(awb_wt),'999999990.99')) from PRINT_CGO_MANIFEST b where a.AWB_ULD_NO=b.AWB_ULD_NO) as wt,
        		(select sum(AWB_PCS) from PRINT_CGO_MANIFEST b where a.AWB_ULD_NO=b.AWB_ULD_NO) as pcs, 
				decode(AWB_TOT_PCS,null,'',AWB_TOT_PCS) awbTotPcs,decode(AWB_TOT_WT,null,'',trim(to_char(AWB_TOT_WT,'999999990.99'))) awbTotWt,
				uld_key as uldNo, decode(AWB_PCS,null,'0',AWB_PCS) uldPcs,decode(bk_ind,null,' ',bk_ind) bkkField,decode(awb_wt,null,'0',trim(to_char(awb_wt,'999999990.99'))) uldGrossWgt,
				CONTENT nature, decode(SPL_CODE,null,'',SPL_CODE) shcCode,first_flt partFltKey,to_char(first_flt_dt,'DDMONYY') partFltDate,upper(awb_remark) awbRemark,upper(uld_remark) uldRemark, 
				decode(ORIGIN,null,'',ORIGIN||'/')|| decode(DEST,null,'',DEST) orig, DEST destination,awb_uld_ind awbUldInd,uld_key uldKey,group_no groupNo,CONNECT_FLT connFlt,to_char(CONNECT_FLT_DT,'DDMONYY') connFltDate			
			   FROM 
				PRINT_CGO_MANIFEST a
				where ASSIGNED_BULK_PCS is not null or (rpt_type = 'U' and awb_pcs is null) order by bulkOrder,uldKey,awbNo
				
</select>
<select id="exp_rept_542_US_AWB_AWB" parameterClass="cargo.cms.export.report.bo.PrintCgoManfReptBO" resultClass="cargo.cms.export.report.bo.PrintCgoManfReptBO">
SELECT    	
		  case when ( uld_key ='BULK CARGO' and instr(AWB_ULD_NO,'-')>0 ) then 1
          when ( uld_key ='BT TARMAC' and instr(AWB_ULD_NO,'-')>0 ) then 2
          else 3
      		end as bulkOrder,
		SNO as serialNum, UNLDG_PT  dest,UNLDG_PT  unldgPt, AWB_ULD_NO as awbNo,
				(select trim(to_char(sum(awb_wt),'999999990.99')) from PRINT_CGO_MANIFEST b where a.AWB_ULD_NO=b.AWB_ULD_NO) as awbGrossWgt,
        		(select sum(AWB_PCS) from PRINT_CGO_MANIFEST b where a.AWB_ULD_NO=b.AWB_ULD_NO) as awbPcs, 
				decode(AWB_TOT_PCS,null,'',AWB_TOT_PCS) awbTotPcs,decode(AWB_TOT_WT,null,'',trim(to_char(AWB_TOT_WT,'999999990.99'))) awbTotWt,
				uld_key as uldNo, decode(AWB_PCS,null,'0',AWB_PCS) uldPcs,decode(bk_ind,null,' ',bk_ind) bkkField,decode(awb_wt,null,'0',trim(to_char(awb_wt,'999999990.99'))) uldGrossWgt,
				CONTENT nature, decode(SPL_CODE,null,'',SPL_CODE) shcCode,first_flt partFltKey,to_char(first_flt_dt,'DDMONYY') partFltDate, upper(awb_remark) awbRemark,upper(uld_remark) uldRemark,
				decode(ORIGIN,null,'',ORIGIN||'/')|| decode(DEST,null,'',DEST) orig, DEST destination,awb_uld_ind awbUldInd,uld_key uldKey,group_no groupNo,CONNECT_FLT connFlt,to_char(CONNECT_FLT_DT,'DDMONYY') connFltDate			
			   FROM 
				PRINT_CGO_MANIFEST a order by bulkOrder,awbNo
</select>
<select id="exp_rept_542_US_AWB_AWB_BU" parameterClass="cargo.cms.export.report.bo.PrintCgoManfReptBO" resultClass="cargo.cms.export.report.bo.PrintCgoManfReptBO">
	SELECT    	
			case when ( uld_key ='BULK CARGO' and instr(AWB_ULD_NO,'-')>0 ) then 1
	          when ( uld_key ='BT TARMAC' and instr(AWB_ULD_NO,'-')>0 ) then 2
	          else 3
	      		end as bulkOrder,
			SNO as serialNum, UNLDG_PT  dest,UNLDG_PT  unldgPt, AWB_ULD_NO as awbNo,
				(select trim(to_char(sum(awb_wt),'999999990.99')) from PRINT_CGO_MANIFEST b where a.AWB_ULD_NO=b.AWB_ULD_NO) as awbGrossWgt,
        		(select sum(AWB_PCS) from PRINT_CGO_MANIFEST b where a.AWB_ULD_NO=b.AWB_ULD_NO) as awbPcs, 
				decode(AWB_TOT_PCS,null,'',AWB_TOT_PCS) awbTotPcs,decode(AWB_TOT_WT,null,'',trim(to_char(AWB_TOT_WT,'999999990.99'))) awbTotWt,
				uld_key as uldNo, decode(AWB_PCS,null,'0',AWB_PCS) uldPcs,decode(bk_ind,null,' ',bk_ind) bkkField,decode(awb_wt,null,'0',trim(to_char(awb_wt,'999999990.99'))) uldGrossWgt,
				CONTENT nature, decode(SPL_CODE,null,'',SPL_CODE) shcCode,first_flt partFltKey,to_char(first_flt_dt,'DDMONYY') partFltDate,upper(awb_remark) awbRemark,upper(uld_remark) uldRemark, 
				decode(ORIGIN,null,'',ORIGIN||'/')|| decode(DEST,null,'',DEST) orig, DEST destination,awb_uld_ind awbUldInd,uld_key uldKey,group_no groupNo,CONNECT_FLT connFlt,to_char(CONNECT_FLT_DT,'DDMONYY') connFltDate			
			   FROM 
				PRINT_CGO_MANIFEST a
				where ASSIGNED_BULK_PCS is not null or (rpt_type = 'U' and awb_pcs is null) order by bulkOrder,awbNo
</select>
<select id="exp_rept_542_US_AWB_MAX" parameterClass="cargo.cms.export.report.bo.PrintCgoManfReptBO" resultClass="cargo.cms.export.report.bo.PrintCgoManfReptBO">
SELECT    	
	       case when ( uld_key ='BULK CARGO' and instr(AWB_ULD_NO,'-')>0 ) then 1
	          when ( uld_key ='BT TARMAC' and instr(AWB_ULD_NO,'-')>0 ) then 2
	          else 3
	      		end as bulkOrder,
	       SNO as serialNum, UNLDG_PT  dest,UNLDG_PT  unldgPt, AWB_ULD_NO as awbNo,
				(select trim(to_char(sum(awb_wt),'999999990.99')) from PRINT_CGO_MANIFEST b where a.AWB_ULD_NO=b.AWB_ULD_NO) as awbGrossWgt,
        		(select sum(AWB_PCS) from PRINT_CGO_MANIFEST b where a.AWB_ULD_NO=b.AWB_ULD_NO) as awbPcs,
				decode(AWB_TOT_PCS,null,'',AWB_TOT_PCS) awbTotPcs,decode(AWB_TOT_WT,null,'',trim(to_char(AWB_TOT_WT,'999999990.99'))) awbTotWt,
				uld_key as uldNo, decode(AWB_PCS,null,'0',AWB_PCS) uldPcs,decode(bk_ind,null,' ',bk_ind) bkkField,decode(awb_wt,null,'0',trim(to_char(awb_wt,'999999990.99'))) uldGrossWgt,
				CONTENT nature, decode(SPL_CODE,null,'',SPL_CODE) shcCode,first_flt partFltKey,to_char(first_flt_dt,'DDMONYY') partFltDate, upper(awb_remark) awbRemark,upper(uld_remark) uldRemark,
				decode(ORIGIN,null,'',ORIGIN||'/')|| decode(DEST,null,'',DEST) orig, DEST destination,awb_uld_ind awbUldInd,uld_key uldKey,group_no groupNo,CONNECT_FLT connFlt,to_char(CONNECT_FLT_DT,'DDMONYY') connFltDate			
			   FROM 
				PRINT_CGO_MANIFEST a order by bulkOrder,awbNo
</select>
<select id="exp_rept_542_US_AWB_MAX_BU" parameterClass="cargo.cms.export.report.bo.PrintCgoManfReptBO" resultClass="cargo.cms.export.report.bo.PrintCgoManfReptBO">
	SELECT    	
			case when ( uld_key ='BULK CARGO' and instr(AWB_ULD_NO,'-')>0 ) then 1
	          when ( uld_key ='BT TARMAC' and instr(AWB_ULD_NO,'-')>0 ) then 2
	          else 3
	      		end as bulkOrder,SNO as serialNum, UNLDG_PT  dest,UNLDG_PT  unldgPt, AWB_ULD_NO as awbNo,
				(select trim(to_char(sum(awb_wt),'999999990.99')) from PRINT_CGO_MANIFEST b where a.AWB_ULD_NO=b.AWB_ULD_NO) as awbGrossWgt,
        		(select sum(AWB_PCS) from PRINT_CGO_MANIFEST b where a.AWB_ULD_NO=b.AWB_ULD_NO) as awbPcs,
				decode(AWB_TOT_PCS,null,'',AWB_TOT_PCS) awbTotPcs,decode(AWB_TOT_WT,null,'',trim(to_char(AWB_TOT_WT,'999999990.99'))) awbTotWt,
				uld_key as uldNo, decode(AWB_PCS,null,'0',AWB_PCS) uldPcs,decode(bk_ind,null,' ',bk_ind) bkkField,decode(awb_wt,null,'0',trim(to_char(awb_wt,'999999990.99'))) uldGrossWgt,
				CONTENT nature, decode(SPL_CODE,null,'',SPL_CODE) shcCode,first_flt partFltKey,to_char(first_flt_dt,'DDMONYY') partFltDate, upper(awb_remark) awbRemark,upper(uld_remark) uldRemark,
				decode(ORIGIN,null,'',ORIGIN||'/')|| decode(DEST,null,'',DEST) orig, DEST destination,awb_uld_ind awbUldInd,uld_key uldKey,group_no groupNo,CONNECT_FLT connFlt,to_char(CONNECT_FLT_DT,'DDMONYY') connFltDate			
			   FROM 
				PRINT_CGO_MANIFEST a
				where ASSIGNED_BULK_PCS is not null or (rpt_type = 'U' and awb_pcs is null) order by bulkOrder,awbNo
</select>
<select id="group_text_value_string" parameterClass="cargo.cms.export.report.bo.PrintCgoManfReptBO" resultClass="cargo.cms.export.report.bo.PrintCgoManfReptBO">
SELECT    	
	SNO as serialNum, UNLDG_PT  dest,UNLDG_PT  unldgPt, AWB_ULD_NO as awbNo,
				(select trim(to_char(sum(awb_wt),'999999990.99')) from PRINT_CGO_MANIFEST b where a.AWB_ULD_NO=b.AWB_ULD_NO) as wt,
        		(select sum(AWB_PCS) from PRINT_CGO_MANIFEST b where a.AWB_ULD_NO=b.AWB_ULD_NO) as pcs, 
				decode(AWB_TOT_PCS,null,'',AWB_TOT_PCS) awbTotPcs,decode(AWB_TOT_WT,null,'',trim(to_char(AWB_TOT_WT,'999999990.99'))) awbTotWt,
				uld_key as uldNo, decode(AWB_PCS,null,'0',AWB_PCS) uldPcs,decode(bk_ind,null,' ',bk_ind) bkkField,decode(awb_wt,null,'0',trim(to_char(awb_wt,'999999990.99'))) uldGrossWgt,
				CONTENT nature, decode(SPL_CODE,null,'',SPL_CODE) shcCode,first_flt partFltKey,to_char(first_flt_dt,'DDMONYY') partFltDate,upper(awb_remark) awbRemark,upper(uld_remark) uldRemark, 
				decode(ORIGIN,null,'',ORIGIN||'/')|| decode(DEST,null,'',DEST) orig, DEST destination,awb_uld_ind awbUldInd,uld_key uldKey,group_no groupNo,CONNECT_FLT connFlt,to_char(CONNECT_FLT_DT,'DDMONYY') connFltDate			
			   FROM 
				PRINT_CGO_MANIFEST a
        where
               group_no in (#groupone#,#grouptwo#,#groupthree#,#groupfour#,#groupfive#) order by groupNo,awbNo
        
</select>

<select id="group_text_value_withShipment" parameterClass="cargo.cms.export.report.bo.PrintCgoManfReptBO" resultClass="cargo.cms.export.report.bo.PrintCgoManfReptBO">
SELECT    	
	'1' grp,SNO as serialNum, UNLDG_PT  dest,UNLDG_PT  unldgPt, AWB_ULD_NO as awbNo,
				(select trim(to_char(sum(awb_wt),'999999990.99')) from PRINT_CGO_MANIFEST b where a.AWB_ULD_NO=b.AWB_ULD_NO) as wt,
        		(select sum(AWB_PCS) from PRINT_CGO_MANIFEST b where a.AWB_ULD_NO=b.AWB_ULD_NO) as pcs, 
				decode(AWB_TOT_PCS,null,'',AWB_TOT_PCS) awbTotPcs,decode(AWB_TOT_WT,null,'',trim(to_char(AWB_TOT_WT,'999999990.99'))) awbTotWt,
				uld_key as uldNo, decode(AWB_PCS,null,'0',AWB_PCS) uldPcs,decode(bk_ind,null,' ',bk_ind) bkkField,decode(awb_wt,null,'0',trim(to_char(awb_wt,'999999990.99'))) uldGrossWgt,
				CONTENT nature, decode(SPL_CODE,null,'',SPL_CODE) shcCode,first_flt partFltKey,to_char(first_flt_dt,'DDMONYY') partFltDate, upper(awb_remark) awbRemark,upper(uld_remark) uldRemark,
				decode(ORIGIN,null,'',ORIGIN||'/')|| decode(DEST,null,'',DEST) orig, DEST destination,awb_uld_ind awbUldInd,uld_key uldKey,group_no groupNo,CONNECT_FLT connFlt,to_char(CONNECT_FLT_DT,'DDMONYY') connFltDate			
			   FROM 
				PRINT_CGO_MANIFEST a
        where
               group_no in (#groupone#,#grouptwo#,#groupthree#,#groupfour#,#groupfive#)
UNION 
SELECT    	
	'2' grp,SNO as serialNum, UNLDG_PT  dest,UNLDG_PT  unldgPt, AWB_ULD_NO as awbNo,
				(select trim(to_char(sum(awb_wt),'999999990.99')) from PRINT_CGO_MANIFEST b where a.AWB_ULD_NO=b.AWB_ULD_NO) as wt,
        		(select sum(AWB_PCS) from PRINT_CGO_MANIFEST b where a.AWB_ULD_NO=b.AWB_ULD_NO) as pcs,  
				decode(AWB_TOT_PCS,null,'',AWB_TOT_PCS) awbTotPcs,decode(AWB_TOT_WT,null,'',trim(to_char(AWB_TOT_WT,'999999990.99'))) awbTotWt,
				uld_key as uldNo, decode(AWB_PCS,null,'0',AWB_PCS) uldPcs,decode(bk_ind,null,' ',bk_ind) bkkField,decode(awb_wt,null,'0',trim(to_char(awb_wt,'999999990.99'))) uldGrossWgt,
				CONTENT nature, decode(SPL_CODE,null,'',SPL_CODE) shcCode,first_flt partFltKey,to_char(first_flt_dt,'DDMONYY') partFltDate, upper(awb_remark) awbRemark,upper(uld_remark) uldRemark,
				decode(ORIGIN,null,'',ORIGIN||'/')|| decode(DEST,null,'',DEST) orig, DEST destination,awb_uld_ind awbUldInd,uld_key uldKey,group_no groupNo,CONNECT_FLT connFlt,to_char(CONNECT_FLT_DT,'DDMONYY') connFltDate			
			   FROM 
				PRINT_CGO_MANIFEST a
        where
               group_no not in (#groupone#,#grouptwo#,#groupthree#,#groupfour#,#groupfive#)
        order by grp,groupNo,awbNo               
</select>

<select id="group_text_value_withoutShipment" parameterClass="cargo.cms.export.report.bo.PrintCgoManfReptBO" resultClass="cargo.cms.export.report.bo.PrintCgoManfReptBO">
SELECT    	
	'1' grp,SNO as serialNum, UNLDG_PT  dest,UNLDG_PT  unldgPt, AWB_ULD_NO as awbNo,
				(select trim(to_char(sum(awb_wt),'999999990.99')) from PRINT_CGO_MANIFEST b where a.AWB_ULD_NO=b.AWB_ULD_NO) as wt,
        		(select sum(AWB_PCS) from PRINT_CGO_MANIFEST b where a.AWB_ULD_NO=b.AWB_ULD_NO) as pcs,  
				decode(AWB_TOT_PCS,null,'',AWB_TOT_PCS) awbTotPcs,decode(AWB_TOT_WT,null,'',trim(to_char(AWB_TOT_WT,'999999990.99'))) awbTotWt,
				uld_key as uldNo, decode(AWB_PCS,null,'0',AWB_PCS) uldPcs,decode(bk_ind,null,' ',bk_ind) bkkField,decode(awb_wt,null,'0',trim(to_char(awb_wt,'999999990.99'))) uldGrossWgt,
				CONTENT nature, decode(SPL_CODE,null,'',SPL_CODE) shcCode,first_flt partFltKey,to_char(first_flt_dt,'DDMONYY') partFltDate, upper(awb_remark) awbRemark,upper(uld_remark) uldRemark,
				decode(ORIGIN,null,'',ORIGIN||'/')|| decode(DEST,null,'',DEST) orig, DEST destination,awb_uld_ind awbUldInd,uld_key uldKey,group_no groupNo,CONNECT_FLT connFlt,to_char(CONNECT_FLT_DT,'DDMONYY') connFltDate			
			   FROM 
				PRINT_CGO_MANIFEST a
        where
               group_no in (#groupone#,#grouptwo#,#groupthree#,#groupfour#,#groupfive#)
UNION
SELECT    	
	'2' grp,SNO as serialNum, UNLDG_PT  dest,UNLDG_PT  unldgPt, AWB_ULD_NO as awbNo,
				(select trim(to_char(sum(awb_wt),'999999990.99')) from PRINT_CGO_MANIFEST b where a.AWB_ULD_NO=b.AWB_ULD_NO) as wt,
        		(select sum(AWB_PCS) from PRINT_CGO_MANIFEST b where a.AWB_ULD_NO=b.AWB_ULD_NO) as pcs,  
				decode(AWB_TOT_PCS,null,'',AWB_TOT_PCS) awbTotPcs,decode(AWB_TOT_WT,null,'',trim(to_char(AWB_TOT_WT,'999999990.99'))) awbTotWt,
				uld_key as uldNo, decode(AWB_PCS,null,'0',AWB_PCS) uldPcs,decode(bk_ind,null,' ',bk_ind) bkkField,decode(awb_wt,null,'0',trim(to_char(awb_wt,'999999990.99'))) uldGrossWgt,
				CONTENT nature, decode(SPL_CODE,null,'',SPL_CODE) shcCode,first_flt partFltKey,to_char(first_flt_dt,'DDMONYY') partFltDate, upper(awb_remark) awbRemark,upper(uld_remark) uldRemark,
				decode(ORIGIN,null,'',ORIGIN||'/')|| decode(DEST,null,'',DEST) orig, DEST destination,awb_uld_ind awbUldInd,uld_key uldKey,group_no groupNo,CONNECT_FLT connFlt,to_char(CONNECT_FLT_DT,'DDMONYY') connFltDate			
			   FROM 
				PRINT_CGO_MANIFEST a
        where
               group_no is null 
        order by grp,groupNo,awbNo            
</select>
<select id="group_text_value_with_without" parameterClass="cargo.cms.export.report.bo.PrintCgoManfReptBO" resultClass="cargo.cms.export.report.bo.PrintCgoManfReptBO">
SELECT    	
	'1' grp,SNO as serialNum, UNLDG_PT  dest,UNLDG_PT  unldgPt, AWB_ULD_NO as awbNo,
				(select trim(to_char(sum(awb_wt),'999999990.99')) from PRINT_CGO_MANIFEST b where a.AWB_ULD_NO=b.AWB_ULD_NO) as wt,
        		(select sum(AWB_PCS) from PRINT_CGO_MANIFEST b where a.AWB_ULD_NO=b.AWB_ULD_NO) as pcs,   
				decode(AWB_TOT_PCS,null,'',AWB_TOT_PCS) awbTotPcs,decode(AWB_TOT_WT,null,'',trim(to_char(AWB_TOT_WT,'999999990.99'))) awbTotWt,
				uld_key as uldNo, decode(AWB_PCS,null,'0',AWB_PCS) uldPcs,decode(bk_ind,null,' ',bk_ind) bkkField,decode(awb_wt,null,'0',trim(to_char(awb_wt,'999999990.99'))) uldGrossWgt,
				CONTENT nature, decode(SPL_CODE,null,'',SPL_CODE) shcCode,first_flt partFltKey,to_char(first_flt_dt,'DDMONYY') partFltDate,upper(awb_remark) awbRemark,upper(uld_remark) uldRemark, 
				decode(ORIGIN,null,'',ORIGIN||'/')|| decode(DEST,null,'',DEST) orig, DEST destination,awb_uld_ind awbUldInd,uld_key uldKey,group_no groupNo,CONNECT_FLT connFlt,to_char(CONNECT_FLT_DT,'DDMONYY') connFltDate			
			   FROM 
				PRINT_CGO_MANIFEST a
        where
               group_no in (#groupone#,#grouptwo#,#groupthree#,#groupfour#,#groupfive#)
UNION
SELECT    	
	'2' grp,SNO as serialNum, UNLDG_PT  dest,UNLDG_PT  unldgPt, AWB_ULD_NO as awbNo,
				(select trim(to_char(sum(awb_wt),'999999990.99')) from PRINT_CGO_MANIFEST b where a.AWB_ULD_NO=b.AWB_ULD_NO) as wt,
        		(select sum(AWB_PCS) from PRINT_CGO_MANIFEST b where a.AWB_ULD_NO=b.AWB_ULD_NO) as pcs,   
				decode(AWB_TOT_PCS,null,'',AWB_TOT_PCS) awbTotPcs,decode(AWB_TOT_WT,null,'',trim(to_char(AWB_TOT_WT,'999999990.99'))) awbTotWt,
				uld_key as uldNo, decode(AWB_PCS,null,'0',AWB_PCS) uldPcs,decode(bk_ind,null,' ',bk_ind) bkkField,decode(awb_wt,null,'0',trim(to_char(awb_wt,'999999990.99'))) uldGrossWgt,
				CONTENT nature, decode(SPL_CODE,null,'',SPL_CODE) shcCode,first_flt partFltKey,to_char(first_flt_dt,'DDMONYY') partFltDate,upper(awb_remark) awbRemark,upper(uld_remark) uldRemark, 
				decode(ORIGIN,null,'',ORIGIN||'/')|| decode(DEST,null,'',DEST) orig, DEST destination,awb_uld_ind awbUldInd,uld_key uldKey,group_no groupNo,CONNECT_FLT connFlt,to_char(CONNECT_FLT_DT,'DDMONYY') connFltDate			
			   FROM 
				PRINT_CGO_MANIFEST a
        where
               group_no not in (#groupone#,#grouptwo#,#groupthree#,#groupfour#,#groupfive#)               
UNION
SELECT    	
	'3' grp,SNO as serialNum, UNLDG_PT  dest,UNLDG_PT  unldgPt, AWB_ULD_NO as awbNo,
				(select trim(to_char(sum(awb_wt),'999999990.99')) from PRINT_CGO_MANIFEST b where a.AWB_ULD_NO=b.AWB_ULD_NO) as wt,
        		(select sum(AWB_PCS) from PRINT_CGO_MANIFEST b where a.AWB_ULD_NO=b.AWB_ULD_NO) as pcs,  
				decode(AWB_TOT_PCS,null,'',AWB_TOT_PCS) awbTotPcs,decode(AWB_TOT_WT,null,'',trim(to_char(AWB_TOT_WT,'999999990.99'))) awbTotWt,
				uld_key as uldNo, decode(AWB_PCS,null,'0',AWB_PCS) uldPcs,decode(bk_ind,null,' ',bk_ind) bkkField,decode(awb_wt,null,'0',trim(to_char(awb_wt,'999999990.99'))) uldGrossWgt,
				CONTENT nature, decode(SPL_CODE,null,'',SPL_CODE) shcCode,first_flt partFltKey,to_char(first_flt_dt,'DDMONYY') partFltDate,upper(awb_remark) awbRemark,upper(uld_remark) uldRemark, 
				decode(ORIGIN,null,'',ORIGIN||'/')|| decode(DEST,null,'',DEST) orig, DEST destination,awb_uld_ind awbUldInd,uld_key uldKey,group_no groupNo,CONNECT_FLT connFlt,to_char(CONNECT_FLT_DT,'DDMONYY') connFltDate			
			   FROM 
				PRINT_CGO_MANIFEST a 
        where
               group_no is null     
        order by grp,groupNo,awbNo
</select>


<select id="group_text_value_string_uld" parameterClass="cargo.cms.export.report.bo.PrintCgoManfReptBO" resultClass="cargo.cms.export.report.bo.PrintCgoManfReptBO">
SELECT    	
	SNO as serialNum, UNLDG_PT  dest,UNLDG_PT  unldgPt, AWB_ULD_NO as awbNo, 
				(select trim(to_char(sum(awb_wt),'999999990.99')) from PRINT_CGO_MANIFEST b where a.AWB_ULD_NO=b.AWB_ULD_NO) as wt,
        		(select sum(AWB_PCS) from PRINT_CGO_MANIFEST b where a.AWB_ULD_NO=b.AWB_ULD_NO) as pcs, 
			    decode(AWB_TOT_PCS,null,'',AWB_TOT_PCS) awbTotPcs,decode(AWB_TOT_WT,null,'',trim(to_char(AWB_TOT_WT,'999999990.99'))) awbTotWt,
				uld_key as uldNo, decode(AWB_PCS,null,'0',AWB_PCS) uldPcs,decode(bk_ind,null,' ',bk_ind) bkkField,decode(awb_wt,null,'0',trim(to_char(awb_wt,'999999990.99'))) uldGrossWgt,
				CONTENT nature, decode(SPL_CODE,null,'',SPL_CODE) shcCode,first_flt partFltKey,to_char(first_flt_dt,'DDMONYY') partFltDate,upper(awb_remark) awbRemark,upper(uld_remark) uldRemark, 
				decode(ORIGIN,null,'',ORIGIN||'/')|| decode(DEST,null,'',DEST) orig, DEST destination,awb_uld_ind awbUldInd,uld_key uldKey,group_no groupNo,CONNECT_FLT connFlt,to_char(CONNECT_FLT_DT,'DDMONYY') connFltDate			
			   FROM 
				PRINT_CGO_MANIFEST a
        where
               group_no in (#groupone#,#grouptwo#,#groupthree#,#groupfour#,#groupfive#) order by groupNo,uldKey,awbNo
        
</select>

<select id="group_text_value_withShipment_uld" parameterClass="cargo.cms.export.report.bo.PrintCgoManfReptBO" resultClass="cargo.cms.export.report.bo.PrintCgoManfReptBO">
SELECT    	
	'1' grp,SNO as serialNum, UNLDG_PT  dest,UNLDG_PT  unldgPt, AWB_ULD_NO as awbNo,
				(select trim(to_char(sum(awb_wt),'999999990.99')) from PRINT_CGO_MANIFEST b where a.AWB_ULD_NO=b.AWB_ULD_NO) as wt,
        		(select sum(AWB_PCS) from PRINT_CGO_MANIFEST b where a.AWB_ULD_NO=b.AWB_ULD_NO) as pcs,  
				decode(AWB_TOT_PCS,null,'',AWB_TOT_PCS) awbTotPcs,decode(AWB_TOT_WT,null,'',trim(to_char(AWB_TOT_WT,'999999990.99'))) awbTotWt,
				uld_key as uldNo, decode(AWB_PCS,null,'0',AWB_PCS) uldPcs,decode(bk_ind,null,' ',bk_ind) bkkField,decode(awb_wt,null,'0',trim(to_char(awb_wt,'999999990.99'))) uldGrossWgt,
				CONTENT nature, decode(SPL_CODE,null,'',SPL_CODE) shcCode,first_flt partFltKey,to_char(first_flt_dt,'DDMONYY') partFltDate, upper(awb_remark) awbRemark,upper(uld_remark) uldRemark,
				decode(ORIGIN,null,'',ORIGIN||'/')|| decode(DEST,null,'',DEST) orig, DEST destination,awb_uld_ind awbUldInd,uld_key uldKey,group_no groupNo,CONNECT_FLT connFlt,to_char(CONNECT_FLT_DT,'DDMONYY') connFltDate			
			   FROM 
				PRINT_CGO_MANIFEST a
        where
               group_no in (#groupone#,#grouptwo#,#groupthree#,#groupfour#,#groupfive#)
UNION 
SELECT    	
	'2' grp,SNO as serialNum, UNLDG_PT  dest,UNLDG_PT  unldgPt, AWB_ULD_NO as awbNo,
				(select trim(to_char(sum(awb_wt),'999999990.99')) from PRINT_CGO_MANIFEST b where a.AWB_ULD_NO=b.AWB_ULD_NO) as wt,
        		(select sum(AWB_PCS) from PRINT_CGO_MANIFEST b where a.AWB_ULD_NO=b.AWB_ULD_NO) as pcs,  
				decode(AWB_TOT_PCS,null,'',AWB_TOT_PCS) awbTotPcs,decode(AWB_TOT_WT,null,'',trim(to_char(AWB_TOT_WT,'999999990.99'))) awbTotWt,
				uld_key as uldNo, decode(AWB_PCS,null,'0',AWB_PCS) uldPcs,decode(bk_ind,null,' ',bk_ind) bkkField,decode(awb_wt,null,'0',trim(to_char(awb_wt,'999999990.99'))) uldGrossWgt,
				CONTENT nature, decode(SPL_CODE,null,'',SPL_CODE) shcCode,first_flt partFltKey,to_char(first_flt_dt,'DDMONYY') partFltDate, upper(awb_remark) awbRemark,upper(uld_remark) uldRemark,
				decode(ORIGIN,null,'',ORIGIN||'/')|| decode(DEST,null,'',DEST) orig, DEST destination,awb_uld_ind awbUldInd,uld_key uldKey,group_no groupNo,CONNECT_FLT connFlt,to_char(CONNECT_FLT_DT,'DDMONYY') connFltDate			
			   FROM 
				PRINT_CGO_MANIFEST a
        where
               group_no not in (#groupone#,#grouptwo#,#groupthree#,#groupfour#,#groupfive#) 
        order by grp,groupNo,uldKey,awbNo             
</select>

<select id="group_text_value_withoutShipment_uld" parameterClass="cargo.cms.export.report.bo.PrintCgoManfReptBO" resultClass="cargo.cms.export.report.bo.PrintCgoManfReptBO">
SELECT    	
	'1' grp,SNO as serialNum, UNLDG_PT  dest,UNLDG_PT  unldgPt, AWB_ULD_NO as awbNo,
				(select trim(to_char(sum(awb_wt),'999999990.99')) from PRINT_CGO_MANIFEST b where a.AWB_ULD_NO=b.AWB_ULD_NO) as wt,
        		(select sum(AWB_PCS) from PRINT_CGO_MANIFEST b where a.AWB_ULD_NO=b.AWB_ULD_NO) as pcs, 
				decode(AWB_TOT_PCS,null,'',AWB_TOT_PCS) awbTotPcs,decode(AWB_TOT_WT,null,'',trim(to_char(AWB_TOT_WT,'999999990.99'))) awbTotWt,
				uld_key as uldNo, decode(AWB_PCS,null,'0',AWB_PCS) uldPcs,decode(bk_ind,null,' ',bk_ind) bkkField,decode(awb_wt,null,'0',trim(to_char(awb_wt,'999999990.99'))) uldGrossWgt,
				CONTENT nature, decode(SPL_CODE,null,'',SPL_CODE) shcCode,first_flt partFltKey,to_char(first_flt_dt,'DDMONYY') partFltDate, upper(awb_remark) awbRemark,upper(uld_remark) uldRemark,
				decode(ORIGIN,null,'',ORIGIN||'/')|| decode(DEST,null,'',DEST) orig, DEST destination,awb_uld_ind awbUldInd,uld_key uldKey,group_no groupNo,CONNECT_FLT connFlt,to_char(CONNECT_FLT_DT,'DDMONYY') connFltDate			
			   FROM 
				PRINT_CGO_MANIFEST a
        where
               group_no in (#groupone#,#grouptwo#,#groupthree#,#groupfour#,#groupfive#)
UNION
SELECT    	
	'2' grp,SNO as serialNum, UNLDG_PT  dest,UNLDG_PT  unldgPt, AWB_ULD_NO as awbNo, 
				(select trim(to_char(sum(awb_wt),'999999990.99')) from PRINT_CGO_MANIFEST b where a.AWB_ULD_NO=b.AWB_ULD_NO) as wt,
        		(select sum(AWB_PCS) from PRINT_CGO_MANIFEST b where a.AWB_ULD_NO=b.AWB_ULD_NO) as pcs, 
				decode(AWB_TOT_PCS,null,'',AWB_TOT_PCS) awbTotPcs,decode(AWB_TOT_WT,null,'',trim(to_char(AWB_TOT_WT,'999999990.99'))) awbTotWt,
				uld_key as uldNo, decode(AWB_PCS,null,'0',AWB_PCS) uldPcs,decode(bk_ind,null,' ',bk_ind) bkkField,decode(awb_wt,null,'0',trim(to_char(awb_wt,'999999990.99'))) uldGrossWgt,
				CONTENT nature, decode(SPL_CODE,null,'',SPL_CODE) shcCode,first_flt partFltKey,to_char(first_flt_dt,'DDMONYY') partFltDate, upper(awb_remark) awbRemark,upper(uld_remark) uldRemark,
				decode(ORIGIN,null,'',ORIGIN||'/')|| decode(DEST,null,'',DEST) orig, DEST destination,awb_uld_ind awbUldInd,uld_key uldKey,group_no groupNo,CONNECT_FLT connFlt,to_char(CONNECT_FLT_DT,'DDMONYY') connFltDate			
			   FROM 
				PRINT_CGO_MANIFEST a
        where
               group_no is null   
        order by grp,groupNo,uldKey,awbNo           
</select>
<select id="group_text_value_with_without_uld" parameterClass="cargo.cms.export.report.bo.PrintCgoManfReptBO" resultClass="cargo.cms.export.report.bo.PrintCgoManfReptBO">
SELECT    	
	'1' grp,SNO as serialNum, UNLDG_PT  dest,UNLDG_PT  unldgPt, AWB_ULD_NO as awbNo,
				(select trim(to_char(sum(awb_wt),'999999990.99')) from PRINT_CGO_MANIFEST b where a.AWB_ULD_NO=b.AWB_ULD_NO) as wt,
        		(select sum(AWB_PCS) from PRINT_CGO_MANIFEST b where a.AWB_ULD_NO=b.AWB_ULD_NO) as pcs,  
				decode(AWB_TOT_PCS,null,'',AWB_TOT_PCS) awbTotPcs,decode(AWB_TOT_WT,null,'',trim(to_char(AWB_TOT_WT,'999999990.99'))) awbTotWt,
				uld_key as uldNo, decode(AWB_PCS,null,'0',AWB_PCS) uldPcs,decode(bk_ind,null,' ',bk_ind) bkkField,decode(awb_wt,null,'0',trim(to_char(awb_wt,'999999990.99'))) uldGrossWgt,
				CONTENT nature, decode(SPL_CODE,null,'',SPL_CODE) shcCode,first_flt partFltKey,to_char(first_flt_dt,'DDMONYY') partFltDate,upper(awb_remark) awbRemark,upper(uld_remark) uldRemark, 
				decode(ORIGIN,null,'',ORIGIN||'/')|| decode(DEST,null,'',DEST) orig, DEST destination,awb_uld_ind awbUldInd,uld_key uldKey,group_no groupNo,CONNECT_FLT connFlt,to_char(CONNECT_FLT_DT,'DDMONYY') connFltDate			
			   FROM 
				PRINT_CGO_MANIFEST a
        where
               group_no in (#groupone#,#grouptwo#,#groupthree#,#groupfour#,#groupfive#)
UNION
SELECT    	
	'2' grp,SNO as serialNum, UNLDG_PT  dest,UNLDG_PT  unldgPt, AWB_ULD_NO as awbNo,
				(select trim(to_char(sum(awb_wt),'999999990.99')) from PRINT_CGO_MANIFEST b where a.AWB_ULD_NO=b.AWB_ULD_NO) as wt,
        		(select sum(AWB_PCS) from PRINT_CGO_MANIFEST b where a.AWB_ULD_NO=b.AWB_ULD_NO) as pcs,  
				decode(AWB_TOT_PCS,null,'',AWB_TOT_PCS) awbTotPcs,decode(AWB_TOT_WT,null,'',trim(to_char(AWB_TOT_WT,'999999990.99'))) awbTotWt,
				uld_key as uldNo, decode(AWB_PCS,null,'0',AWB_PCS) uldPcs,decode(bk_ind,null,' ',bk_ind) bkkField,decode(awb_wt,null,'0',trim(to_char(awb_wt,'999999990.99'))) uldGrossWgt,
				CONTENT nature, decode(SPL_CODE,null,'',SPL_CODE) shcCode,first_flt partFltKey,to_char(first_flt_dt,'DDMONYY') partFltDate,upper(awb_remark) awbRemark,upper(uld_remark) uldRemark, 
				decode(ORIGIN,null,'',ORIGIN||'/')|| decode(DEST,null,'',DEST) orig, DEST destination,awb_uld_ind awbUldInd,uld_key uldKey,group_no groupNo,CONNECT_FLT connFlt,to_char(CONNECT_FLT_DT,'DDMONYY') connFltDate			
			   FROM 
				PRINT_CGO_MANIFEST a
        where
               group_no not in (#groupone#,#grouptwo#,#groupthree#,#groupfour#,#groupfive#)               
UNION
SELECT    	
	'3' grp,SNO as serialNum, UNLDG_PT  dest,UNLDG_PT  unldgPt, AWB_ULD_NO as awbNo,
				(select trim(to_char(sum(awb_wt),'999999990.99')) from PRINT_CGO_MANIFEST b where a.AWB_ULD_NO=b.AWB_ULD_NO) as wt,
        		(select sum(AWB_PCS) from PRINT_CGO_MANIFEST b where a.AWB_ULD_NO=b.AWB_ULD_NO) as pcs,  
				decode(AWB_TOT_PCS,null,'',AWB_TOT_PCS) awbTotPcs,decode(AWB_TOT_WT,null,'',trim(to_char(AWB_TOT_WT,'999999990.99'))) awbTotWt,
				uld_key as uldNo, decode(AWB_PCS,null,'0',AWB_PCS) uldPcs,decode(bk_ind,null,' ',bk_ind) bkkField,decode(awb_wt,null,'0',trim(to_char(awb_wt,'999999990.99'))) uldGrossWgt,
				CONTENT nature, decode(SPL_CODE,null,'',SPL_CODE) shcCode,first_flt partFltKey,to_char(first_flt_dt,'DDMONYY') partFltDate,upper(awb_remark) awbRemark,upper(uld_remark) uldRemark, 
				decode(ORIGIN,null,'',ORIGIN||'/')|| decode(DEST,null,'',DEST) orig, DEST destination,awb_uld_ind awbUldInd,uld_key uldKey,group_no groupNo,CONNECT_FLT connFlt,to_char(CONNECT_FLT_DT,'DDMONYY') connFltDate			
			   FROM 
				PRINT_CGO_MANIFEST a
        where
               group_no is null  
        order by grp,groupNo,uldKey,awbNo   
</select>

<select id="transitionFltSufix" parameterClass="java.lang.String" resultClass="java.lang.String">
	SELECT TRN_FLT_SUFFIX FROM SYS_PARAM
</select>

<delete id="delete_dummy_table" parameterClass="cargo.cms.export.report.bo.PrintCgoManfReptBO">
delete from PRINT_CGO_MANIFEST
</delete>
<delete id="delete_print_cgo_table" parameterClass="cargo.cms.export.bo.PrintCgoSearchBO">
delete from PRINT_CGO_MANIFEST
</delete>
<select id="fetchCityDesc" parameterClass="java.lang.String" resultClass="java.lang.String">
select code_desc from mast_city where code = #PARAM#
</select>
<select id="fetchCountryCode" parameterClass="java.lang.String" resultClass="java.lang.String">
	select a.ctry_code from mast_city a
	left join mast_arpt b on a.code=b.code
	where a.code=#PARAM#
</select>
<select id="fetchLadingDeatils" parameterClass="cargo.cms.export.report.bo.PrintCgoManfReptBO" resultClass="cargo.cms.export.report.bo.PrintCgoManfReptBO">
SELECT DISTINCT BRD_POINT ladingPt
FROM FLT_OPR_LEG
WHERE FLT_KEY = #fltKey#
AND SCH_DATE  =TO_DATE(#fltDate#,'DDMONYY')
AND FLT_TYPE = 'D'
AND LEG_ORD  &lt;=
  (SELECT MIN(LEG_ORD)
  FROM FLT_OPR_LEG
  WHERE FLT_KEY = #fltKey#
  AND SCH_DATE  = TO_DATE(#fltDate#,'DDMONYY')
  AND OFF_POINT = #unldgPt#
  ) and rownum = 1
ORDER BY BRD_POINT
</select>
<select id="fetchTotPcsAndWt" parameterClass="cargo.cms.export.report.bo.PrintCgoManfReptBO" resultClass="cargo.cms.export.report.bo.PrintCgoManfReptBO">
Select sum(totPcs) totPcs,sum(totWt) totWt from (
select sum(pman_pcs) totPcs,sum(pman_wt) totWt from exp_pmanifest_awb where flt_key = #fltKey# and flt_date = #fltDate#
union
select (sum(bulk_pcs)+sum(ppk_pcs)) totPcs,(sum(bulk_wt)+sum(ppk_wt)) totWt from exp_pman_tarmac_awb where flt_key = #fltKey# and flt_date = #fltDate#)
</select>
<select id="fetchHeading1Info" parameterClass="cargo.cms.export.report.bo.PrintCgoManfReptBO" resultClass="cargo.cms.export.report.bo.PrintCgoManfReptBO">
select m2.code code from mast_code_hd m1 join mast_code_dtl m2 on m1.code = m2.code_type 
where m1.code = 'HEADING-1'
order by m2.sno
</select>
<select id="fetchHeading2Info" parameterClass="cargo.cms.export.report.bo.PrintCgoManfReptBO" resultClass="cargo.cms.export.report.bo.PrintCgoManfReptBO">
select m2.code code from mast_code_hd m1 join mast_code_dtl m2 on m1.code = m2.code_type 
where m1.code = 'HEADING-2'
order by m2.sno
</select>
<select id="fetchHeading3Info" parameterClass="cargo.cms.export.report.bo.PrintCgoManfReptBO" resultClass="cargo.cms.export.report.bo.PrintCgoManfReptBO">
select m2.code code from mast_code_hd m1 join mast_code_dtl m2 on m1.code = m2.code_type 
where m1.code = 'ICAO HEADING-3'
order by m2.sno
</select>
<!-- Added by Manorama for Print Cargo Manifest::::Ends -->
<!-- Added by Manorama for Flt Custom Out :::: 163 Starts-->
<select id="exp_fltCustomOut_163" parameterClass="cargo.cms.export.report.bo.EXPFltCustomOut_163BO" resultClass="cargo.cms.export.report.bo.EXPFltCustomOut_163BO">
 select PKG_COMMON.get_flt_sta(#fltNo#, #fltDate#, 'D', 'DD') stdtime,         
		PKG_COMMON.get_flt_eta(#fltNo#, TO_DATE(#fltDate#,'DDMONYY'), 'D', 'DD') etdtime,               
		 PKG_COMMON.get_flt_ata(#fltNo#, TO_DATE(#fltDate#, 'DDMONYY'), 'D', 'DD') atdtime,          
		 to_char(ctm_out_date, 'DDMONYY') ctm_out_date, to_char(ctm_out_date, 'HH24:MI') ctm_out_time    
	 from   flt_opr t1, flt_opr_events t2   where  t1.flt_key = t2.flt_key   
	 and    t1.sch_date = t2.sch_date   and    t1.flt_type = t2.flt_type   
	 and    t1.flt_key = #fltNo#   and    t1.sch_date = to_date(#fltDate#,'DDMONYY')   
	 and    t1.flt_type = 'D'
</select>
<select id="exp_fltCustomOut_163_sector" parameterClass="cargo.cms.export.report.bo.EXPFltCustomOut_163BO" resultClass="java.lang.String">
 SELECT t2.off_point
   FROM flt_opr t1,
  flt_opr_leg t2
  WHERE t1.tr_no = t2.tr_no
AND t1.flt_key   = #fltNo#
AND t1.sch_date  = to_date(#fltDate#,'DDMONYY')
AND t1.flt_type  = 'D'
ORDER BY t2.leg_ord
</select>
<select id="exp_fltCustomOut_163_DTL_FWB" parameterClass="cargo.cms.export.report.bo.EXPFltCustomOut_163BO" resultClass="cargo.cms.export.report.bo.EXPFltCustomOut_163BO">
	
	select t1.awb_no as awbNo, 
		concat(concat(substr(t1.awb_no, 0, 3), '-'), substr(t1.awb_no, 4)) as awbNoDisplay,	 
		t2.content as awbContant
		from   exp_pmanifest_awb t1, exp_car t2
		where  t1.awb_no = t2.awb_no
		and    t1.awb_date = t2.awb_date
		and    t1.flt_key = #fltNo#
		and    t1.flt_date = to_date(#fltDate#,'DDMONYY')
		and    not exists (select null
		                   from   edi_fwb
		                   where  awb_no = t1.awb_no)
	
</select>
<select id="exp_fltCustomOut_163_DTL_FHL" parameterClass="cargo.cms.export.report.bo.EXPFltCustomOut_163BO" resultClass="cargo.cms.export.report.bo.EXPFltCustomOut_163BO">
	
	 SELECT t1.awb_no                                                    AS awbNo       ,
	   concat(concat(SUBSTR(t1.awb_no, 0, 3), '-'), SUBSTR(t1.awb_no, 4)) AS awbNoDisplay,
       t2.content                                                         AS awbContant
       FROM exp_pmanifest_awb t1,exp_car t2
       WHERE t1.awb_no                             = t2.awb_no
			 AND t1.awb_date                               = t2.awb_date
			 AND t1.flt_key                                = #fltNo#
			 AND t1.flt_date                               = to_date(#fltDate#,'DDMONYY')
			 AND pkg_exp_val.content_consol_yn(t2.content) = 'Y'
			 AND NOT EXISTS
			(SELECT NULL FROM v_edi_fhl_hawb WHERE awb_no = t1.awb_no and awb_date=t1.awb_date)
union all 
SELECT t1.awb_no                                                    AS awbNo       ,
	   concat(concat(SUBSTR(t1.awb_no, 0, 3), '-'), SUBSTR(t1.awb_no, 4)) AS awbNoDisplay,
       t2.content                                                         AS awbContant
       FROM exp_pman_tarmac_awb t1,exp_car t2
       WHERE t1.awb_no                             = t2.awb_no
			 AND t1.awb_date                               = t2.awb_date
			 AND t1.flt_key                                = #fltNo#
			 AND t1.flt_date                               = to_date(#fltDate#,'DDMONYY')
			 AND pkg_exp_val.content_consol_yn(t2.content) = 'Y'
			 AND NOT EXISTS
			(SELECT NULL FROM v_edi_fhl_hawb WHERE awb_no = t1.awb_no and awb_date=t1.awb_date)	
             and not exists
             (select null
		                   from   exp_pmanifest_awb
		                   where  awb_no = t1.awb_no and awb_date=t1.awb_date and flt_key=#fltNo# and flt_date=to_date(#fltDate#,'DDMONYY'))	
	
</select>
<!-- Added by Manorama for Flt Custom Out ::: 163 Ends -->
<!-- Added by Manorama for Flight Handling Report (Document) Starts:::::203 -->
	<select id="exp_depFltHndlgReptRamp_203"  parameterClass="cargo.cms.export.report.bo.DepFltHndlgReptDoc_203BO" resultClass="cargo.cms.export.report.bo.DepFltHndlgReptDoc_203BO">
	
	select    flt_key as fltKey,    to_char(sch_date,'DDMONYY') as fltDate,       
			substr(lpad(sch_time, 4, '0'), 1, 2)||':'||substr(sch_time, -2) as stdTime,    
		PKG_COMMON.get_flt_eta(#fltNo#, TO_DATE(#sfltDate#,'DDMONYY'), 'D', 'DD') as etdTime,   
			pkg_common.get_flt_ata(#fltNo# ,#sfltDate#,'D') as atdTime,       
			cgo_acft_type as aircraftType,       
			wthr_cond as weather,
			 PKG_EXP_RPT.FLT_PORTS(#fltNo# ,#sfltDate#) 
	as portOfCall
	 from   flt_opr   where     sch_date = to_date(#sfltDate#, 'DDMONYY')    
			and flt_type = 'D'    and flt_key =#fltNo#		
</select>	
	
<select id="exp_depFltHndlgReptRamp_203_TON" parameterClass="cargo.cms.export.report.bo.DepFltHndlgReptDoc_203BO" resultClass="cargo.cms.export.report.bo.DepFltHndlgReptDoc_203BO">
	
	Select 'Express' itemName,   Count(Ea.Awb_No) consignment,nvl(Sum(Ea.Bulk_Pcs+Ea.ppk_Pcs+Ea.mix_Pcs),0) tonnPcs, nvl(Sum(Ea.ppk_Wt+Ea.mix_Wt),0.0) tonnBuWt, nvl(Sum(Ea.Bulk_Wt),0.0) tonnBulkWt
    From Exp_Pmanifest_Awb Ea 
    Join  (Select distinct ab1.awb_no,ab1.awb_date,ab1.bldup_bulk_wt 
		                  From Awb Ab1 join 
		                  CUST_AIRL_SPL_CODE casc
		                    on casc.carr_code= substr(#fltNo#,1,2)
		                    and casc.spl_type='SPL_EXP'
		                    and casc.spl_code in(ab1.spl_code1,ab1.spl_code2,ab1.spl_code3,
		                                         ab1.spl_code4,ab1.spl_code5,ab1.spl_code6,
		                                         ab1.spl_code7,ab1.spl_code8,ab1.spl_code9)
		        ) a1
    on Ea.Awb_No=A1.Awb_No 
    And To_Char(Ea.Awb_Date,'DDMONYY')=To_Char(A1.Awb_Date,'DDMONYY')
    And Ea.Flt_Key=#fltNo# And To_Char(Ea.Flt_Date,'DDMONYY')=to_date(#sfltDate#,'DDMONYY')
    left join (select uawb.awb_no, To_Char(uawb.awb_Date,'DDMONYY') Awb_Date, sum(uawb.assigned_wt) bldup_bul_wt
                  from exp_pmanifest_uld_awb uawb
                  where uawb.Flt_Key=#fltNo#
                  And To_Char(uawb.Flt_Date,'DDMONYY')=to_date(#sfltDate#,'DDMONYY')
              group by uawb.awb_no, To_Char(uawb.awb_Date,'DDMONYY')) epua
    on epua.awb_no=ea.awb_no
    And To_date(epua.Awb_Date,'DDMONYY')=To_Char(ea.Awb_Date,'DDMONYY')
    where ea.pman_pcs&gt;0
    and ea.pman_wt&gt;0

		UNION

	Select 'Local' itemName,   Count(Ea.Awb_No) consignment,nvl(Sum(Ea.Bulk_Pcs+Ea.ppk_Pcs+Ea.mix_Pcs),0) tonnPcs, nvl(Sum(Ea.ppk_Wt+Ea.mix_Wt),0.0) tonnBuWt, nvl(Sum(Ea.Bulk_Wt),0.0) tonnBulkWt
    From Exp_Pmanifest_Awb Ea 
    Join  (Select ab1.awb_no,ab1.awb_date,ab1.bldup_bulk_wt From Awb Ab1 
                                      WHERE AB1.accept_mode='LCA'
                                      AND	AB1.awb_type='E'
                                      AND not exists(select null from CUST_AIRL_SPL_CODE casc
                        where casc.carr_code = substr(#fltNo#,1,2)
                        and casc.spl_type ='SPL_EXP'
                        and casc.spl_code in(ab1.spl_code1,ab1.spl_code2,ab1.spl_code3,
                                            ab1.spl_code4,ab1.spl_code5,ab1.spl_code6,
                                            ab1.spl_code7,ab1.spl_code8,ab1.spl_code9))) a1
    on Ea.Awb_No=A1.Awb_No 
    And To_Char(Ea.Awb_Date,'DDMONYY')=To_Char(A1.Awb_Date,'DDMONYY')
    And Ea.Flt_Key=#fltNo#And To_Char(Ea.Flt_Date,'DDMONYY')=to_date(#sfltDate#,'DDMONYY')
    left join (select uawb.awb_no, To_Char(uawb.awb_Date,'DDMONYY') Awb_Date,
                      sum(uawb.assigned_wt) bldup_bul_wt
                from exp_pmanifest_uld_awb uawb
                where uawb.Flt_Key=#fltNo#
                And To_Char(uawb.Flt_Date,'DDMONYY')=to_date(#sfltDate#,'DDMONYY')
                group by uawb.awb_no, To_Char(uawb.awb_Date,'DDMONYY')) epua
    on epua.awb_no=ea.awb_no
    And To_date(epua.Awb_Date,'DDMONYY')=To_Char(ea.Awb_Date,'DDMONYY')
	where ea.pman_pcs&gt;0
    and ea.pman_wt&gt;0	

    Union

	Select 'TS Mail' itemName,   Count(Epa.Awb_No) consignment,nvl(Sum(Epa.Bulk_Pcs+Epa.ppk_Pcs+Epa.mix_Pcs),0) 
		       tonnPcs,nvl(Sum(Epa.ppk_wt+Epa.mix_wt),0.0) tonnBuWt,nvl(Sum(Epa.Bulk_Wt),0.0) tonnBulkWt
		From Exp_Pmanifest_Awb Epa 
    Join(select ab1.awb_no,ab1.awb_date,ab1.bldup_bulk_wt 
                From Awb Ab1 
                     Join Exp_Car Car 
                     On Ab1.Awb_No=Car.Awb_No
                     And To_Char(Ab1.Awb_Date,'DDMONYY')=To_Char(Car.Awb_Date,'DDMONYY')
                  Where Ab1.Awb_Type ='T'
                  AND	  Ab1.catalog ='TM'
                  AND not exists(select null from CUST_AIRL_SPL_CODE casc
                                        where casc.carr_code = substr(#fltNo#,1,2)
                                        and casc.spl_type ='SPL_EXP'
                                        and casc.spl_code in(ab1.spl_code1,ab1.spl_code2,ab1.spl_code3,
                                                             ab1.spl_code4,ab1.spl_code5,ab1.spl_code6,
                                                             ab1.spl_code7,ab1.spl_code8,ab1.spl_code9))) A1 
    On Epa.Awb_No=A1.Awb_No
    And To_Char(Epa.Awb_Date,'DDMONYY')=To_Char(A1.Awb_Date,'DDMONYY')
    And Epa.Flt_Key=#fltNo#And To_Char(Epa.Flt_Date,'DDMONYY')=to_date(#sfltDate#,'DDMONYY')
    left join (select uawb.awb_no, To_Char(uawb.awb_Date,'DDMONYY') Awb_Date, sum(uawb.assigned_wt) bldup_bul_wt
                      from exp_pmanifest_uld_awb uawb
                      where uawb.Flt_Key=#fltNo#
                      And To_Char(uawb.Flt_Date,'DDMONYY')=to_date(#sfltDate#,'DDMONYY')
                  group by uawb.awb_no, To_Char(uawb.awb_Date,'DDMONYY')) epua
    on epua.awb_no=epa.awb_no
    And To_date(epua.Awb_Date,'DDMONYY')=To_Char(epa.Awb_Date,'DDMONYY')
    where epa.pman_pcs&gt;0
    and epa.pman_wt&gt;0

		Union

	Select 'Courier' itemName,   Count(Ea.Awb_No) consignment, nvl(Sum(Ea.Bulk_Pcs+Ea.ppk_Pcs+Ea.mix_Pcs),0) 
		        tonnPcs, nvl(Sum(Ea.ppk_wt+Ea.mix_wt),0.0) tonnBuWt, nvl(Sum(Ea.Bulk_Wt),0.0) tonnBulkWt
		From Exp_Pmanifest_Awb Ea 
     Join (Select ab1.awb_no,ab1.awb_date,ab1.bldup_bulk_wt 
                  From Awb Ab1 
                      Join Exp_Car Car 
                      On Ab1.Awb_No=Car.Awb_No
                      And To_Char(Ab1.Awb_Date,'DDMONYY')=To_Char(Car.Awb_Date,'DDMONYY')
                      and AB1.accept_mode ='LOB'
                  Where not exists(select null from CUST_AIRL_SPL_CODE casc
                                  where casc.carr_code = substr(#fltNo#,1,2)
                                  and casc.spl_type ='SPL_EXP'
                                  and casc.spl_code in(ab1.spl_code1,ab1.spl_code2,ab1.spl_code3,
                                                       ab1.spl_code4,ab1.spl_code5,ab1.spl_code6,
                                                       ab1.spl_code7,ab1.spl_code8,ab1.spl_code9))) a1
     on Ea.Awb_No=A1.Awb_No 
     And To_Char(Ea.Awb_Date,'DDMONYY')=To_Char(A1.Awb_Date,'DDMONYY')
     And Ea.Flt_Key=#fltNo#And To_Char(Ea.Flt_Date,'DDMONYY')=to_date(#sfltDate#,'DDMONYY')
     left join (select uawb.awb_no, To_Char(uawb.awb_Date,'DDMONYY') Awb_Date, sum(uawb.assigned_wt) bldup_bul_wt
                        from exp_pmanifest_uld_awb uawb
                        where uawb.Flt_Key=#fltNo#
                        And To_Char(uawb.Flt_Date,'DDMONYY')=to_date(#sfltDate#,'DDMONYY')
                    group by uawb.awb_no, To_Char(uawb.awb_Date,'DDMONYY')) epua
      on epua.awb_no=ea.awb_no
      And To_date(epua.Awb_Date,'DDMONYY')=To_Char(ea.Awb_Date,'DDMONYY')
     where ea.pman_pcs&gt;0
     and ea.pman_wt&gt;0

		union

	Select 'Transit-QT' As itemName,Count(A3.Awb_No) consignment, Nvl(Sum(A3.Bulk_Pcs+A3.ppk_Pcs+A3.mix_Pcs),0)
		        tonnPcs, nvl(Sum(A3.ppk_wt+A3.mix_wt),0.0) tonnBuWt, Nvl(Sum(a3.Bulk_Wt),0.0) tonnBulkWt 
		From Exp_Pmanifest_Awb A3    
     Join  Awb A1  
     On    A1.Awb_No=A3.Awb_No 
     And   To_Char(A1.Awb_Date,'DDMONYY')=To_Char(A3.Awb_Date,'DDMONYY')
     and   not exists(select null from CUST_AIRL_SPL_CODE casc
                           where casc.carr_code = substr(#fltNo#,1,2)
                            and casc.spl_type ='SPL_EXP'
                            and casc.spl_code in(a1.spl_code1,a1.spl_code2,a1.spl_code3,
                                                 a1.spl_code4,a1.spl_code5,a1.spl_code6,
                                                 a1.spl_code7,a1.spl_code8,a1.spl_code9))
       Join V_ddt_dtl A4
       On   A4.shp_Cntg_Flt_Key=A3.Flt_Key
       And  To_Char(A4.shp_Cntg_Flt_date,'DDMONYY')=To_Char(A3.Flt_Date,'DDMONYY')
       and a4.shp_trf_type='QT' and A4.awb_no=A3.awb_no
       Join Exp_Car A5
       on   a5.awb_no=a3.awb_no
       And To_Char(A5.Awb_Date,'DDMONYY')=To_Char(A3.Awb_Date,'DDMONYY')
       left join (select uawb.awb_no, To_Char(uawb.awb_Date,'DDMONYY') Awb_Date, sum(uawb.assigned_wt) bldup_bul_wt
                          from exp_pmanifest_uld_awb uawb
                          where uawb.Flt_Key=#fltNo#
                          And To_Char(uawb.Flt_Date,'DDMONYY')=to_date(#sfltDate#,'DDMONYY')
                      group by uawb.awb_no, To_Char(uawb.awb_Date,'DDMONYY')) epua
       on epua.awb_no=a3.awb_no
       And To_date(epua.Awb_Date,'DDMONYY')=To_Char(a3.Awb_Date,'DDMONYY')
		   Where A3.Flt_Key=#fltNo#And To_Char(A3.Flt_Date,'DDMONYY')=to_date(#sfltDate#,'DDMONYY')
       and a3.pman_pcs&gt;0 and a3.pman_wt&gt;0

		Union
    
   
SELECT 'Transit-NT' As itemName,NVL(count(awb_no),0) consignment,NVL(sum(pcs),0) tonnPcs,
    Nvl(Sum(ppkwt),0.0) tonnBuWt, nvl(Sum(bulkwt),0.0) tonnBulkWt 
from(
SELECT 
 a.awb_no,
sum(a.pman_pcs-NVL(DDT.pcs,0)) pcs,
sum(a.pman_wt-NVL(DDT.wt,0)) wt,sum(a.pman_wt-NVL(DDT.wt,0)) bulkwt,0 as ppkwt
    FROM Awb B,exp_pmanifest_awb a LEFT OUTER JOIN
      (SELECT A. awb_no,A.SHP_CNTG_FLT_KEY  as flt_key,
      A.SHP_CNTG_FLT_DATE as flt_date,
      NVL(TO_NUMBER(TO_CHAR(SUM(SHP_TRF_PC),'9999999999.99'),'9999999999.99'),0) as pcs,
      NVL(TO_NUMBER(TO_CHAR(SUM(SHP_TRF_WT),'9999999999.99'),'9999999999.99'),0) as wt        
     FROM V_DDT_DTL A 
    WHERE    
   (A.SHP_TRF_TYPE = 'QT' or (A.SHP_TRF_TYPE = 'IF' and A.CNTG_FLT_KEY is null) )  
    group by A. awb_no,A.SHP_CNTG_FLT_KEY, A.SHP_CNTG_FLT_DATE )ddt ON a.awb_no=ddt.awb_no and a.flt_key=ddt.flt_key and a.flt_date=ddt.flt_date     
where
 a.flt_key=#fltNo#and a.flt_date=to_date(#sfltDate#,'DDMONYY') and A.awb_no  =B.awb_no and B.awb_type='T' and B.catalog not in ('TM')
 and (a.pman_pcs-NVL(DDT.pcs,0)) &gt;0 group by a.awb_no )

	

		Union

	 SELECT 'Tarmac-TT' AS itemName                        ,
  COUNT(A3.Awb_No) consignment                         ,
  NVL(SUM(A3.Bulk_Pcs+A3.ppk_Pcs),0) tonnPcs,
  NVL(SUM(bulkweight.ppk_Wt),0) tonnBuWt             
  ,
  NVL(SUM(bulkweight.bulk_wt),0.0) tonnBulkWt
   FROM Exp_Pman_tarmac_Awb A3 
JOIN Awb A1
     ON A1.Awb_No                 =A3.Awb_No
AND TO_CHAR(A1.Awb_Date,'DDMONYY')=TO_CHAR(A3.Awb_Date,'DDMONYY')
AND NOT EXISTS
  (SELECT NULL
     FROM CUST_AIRL_SPL_CODE casc
    WHERE casc.carr_code = SUBSTR(#fltNo#,1,2)
  AND casc.spl_type      ='SPL_EXP'
  AND casc.spl_code     IN(a1.spl_code1,a1.spl_code2,a1.spl_code3, a1.spl_code4,a1.spl_code5,a1.spl_code6, a1.spl_code7,a1.spl_code8,a1.spl_code9)
  )      
  JOIN (  
  select decode(flt_uld.bb_ind,'Y',awb.ppk_wt,awb.bulk_wt) bulk_wt,decode(flt_uld.bb_ind,'Y',0,awb.ppk_wt) ppk_wt, tarmac.flt_key,tarmac.flt_date, 
awb.awb_no
  from
  exp_flt_uld flt_uld,exp_pman_tarmac_uld tarmac,
  exp_pman_tarmac_uld_awb tarmac_awb,
  exp_pman_tarmac_awb awb,v_ddt_dtl v
  where flt_uld.flt_key   = tarmac.flt_key
  AND flt_uld.flt_date   = tarmac.flt_date   
  AND tarmac.uld_bt_no=flt_uld.uld_key and awb.flt_key=tarmac.flt_key and awb.flt_date=tarmac.flt_date
  and awb.flt_key=tarmac.flt_key and awb.flt_date=tarmac.flt_date 
  and tarmac_awb.awb_no = awb.awb_no and tarmac.uld_bt_no=tarmac_awb.uld_bt_no and tarmac_awb.flt_key=tarmac.flt_key and tarmac_awb.flt_date=tarmac.flt_date
  and v.shp_cntg_flt_key=tarmac_awb.flt_key and v.shp_cntg_flt_date=tarmac_awb.flt_date and v.awb_no=tarmac_awb.awb_no and v.uld_key=tarmac_awb.uld_bt_no
  and v.trf_type='TT'
  UNION ALL
  select awb.bulk_wt bulk_wt,awb.ppk_wt ppk_wt, awb.flt_key,awb.flt_date, 
  awb.awb_no
  from 
  exp_pman_tarmac_awb awb
 where not exists(select null from v_ddt_dtl v where v.awb_no=awb.awb_no and v.shp_cntg_flt_key=awb.flt_key and  v.shp_cntg_flt_date=awb.flt_date) 
  )  bulkweight   ON
  bulkweight.flt_key =A3.flt_key
  AND bulkweight.flt_date =A3.flt_date and bulkweight.awb_no=	A3.awb_no
JOIN Exp_Car A5
     ON a5.awb_no                 =a3.awb_no
AND TO_CHAR(A5.Awb_Date,'DDMONYY')=TO_CHAR(A3.Awb_Date,'DDMONYY')
  WHERE A3.Flt_Key                  =#fltNo#
AND A3.Flt_Date  =to_date(#sfltDate#,'DDMONYY')

      Union
select 'Tarmac-IF' AS itemName , sum(consignment) consignment,sum(tonnPcs) tonnPcs,sum(tonnBuWt) tonnBuWt,sum(tonnBulkWt) tonnBulkWt
from
(
SELECT 'Tarmac-IF' AS itemName                        ,
  COUNT(A3.Awb_No) consignment                         ,
  NVL(SUM(A3.Bulk_Pcs+A3.ppk_Pcs),0) tonnPcs,
  NVL(SUM(bulkweight.ppk_Wt),0) tonnBuWt             
  ,
  NVL(SUM(bulkweight.bulk_wt),0.0) tonnBulkWt
   FROM Exp_Pman_tarmac_Awb A3 
JOIN Awb A1
     ON A1.Awb_No                 =A3.Awb_No
AND TO_CHAR(A1.Awb_Date,'DDMONYY')=TO_CHAR(A3.Awb_Date,'DDMONYY')
AND NOT EXISTS
  (SELECT NULL
     FROM CUST_AIRL_SPL_CODE casc
    WHERE casc.carr_code = SUBSTR(#fltNo#,1,2)
  AND casc.spl_type      ='SPL_EXP'
  AND casc.spl_code     IN(a1.spl_code1,a1.spl_code2,a1.spl_code3, a1.spl_code4,a1.spl_code5,a1.spl_code6, a1.spl_code7,a1.spl_code8,a1.spl_code9)
  )      
  JOIN (  
  select decode(flt_uld.bb_ind,'Y',awb.ppk_wt,awb.bulk_wt) bulk_wt,decode(flt_uld.bb_ind,'Y',0,awb.ppk_wt) ppk_wt, tarmac.flt_key,tarmac.flt_date, 
awb.awb_no
  from
  exp_flt_uld flt_uld,exp_pman_tarmac_uld tarmac,
  exp_pman_tarmac_uld_awb tarmac_awb,
  exp_pman_tarmac_awb awb,v_ddt_dtl v
  where flt_uld.flt_key   = tarmac.flt_key
  AND flt_uld.flt_date   = tarmac.flt_date   
  AND tarmac.uld_bt_no=flt_uld.uld_key and awb.flt_key=tarmac.flt_key and awb.flt_date=tarmac.flt_date
  and awb.flt_key=tarmac.flt_key and awb.flt_date=tarmac.flt_date 
  and tarmac_awb.awb_no = awb.awb_no and tarmac.uld_bt_no=tarmac_awb.uld_bt_no and tarmac_awb.flt_key=tarmac.flt_key and tarmac_awb.flt_date=tarmac.flt_date
  and v.shp_cntg_flt_key=tarmac_awb.flt_key and v.shp_cntg_flt_date=tarmac_awb.flt_date and v.awb_no=tarmac_awb.awb_no and v.uld_key=tarmac_awb.uld_bt_no
  and v.trf_type='IF'
  UNION ALL
  select awb.bulk_wt bulk_wt,awb.ppk_wt ppk_wt, awb.flt_key,awb.flt_date, 
  awb.awb_no
  from 
  exp_pman_tarmac_awb awb
 where not exists(select null from v_ddt_dtl v where v.awb_no=awb.awb_no and v.shp_cntg_flt_key=awb.flt_key and  v.shp_cntg_flt_date=awb.flt_date) 
  )  bulkweight   ON
  bulkweight.flt_key =A3.flt_key
  AND bulkweight.flt_date =A3.flt_date and bulkweight.awb_no=	A3.awb_no
JOIN Exp_Car A5
     ON a5.awb_no                 =a3.awb_no
AND TO_CHAR(A5.Awb_Date,'DDMONYY')=TO_CHAR(A3.Awb_Date,'DDMONYY')
  WHERE A3.Flt_Key                  =#fltNo#
AND A3.Flt_Date  =to_date(#sfltDate#,'DDMONYY')
UNION ALL
select 'Tarmac-IF' AS itemName                        ,
  COUNT(A3.Awb_No) consignment                         ,
  NVL(SUM(A3.Bulk_Pcs+A3.ppk_Pcs),0) tonnPcs,
  NVL(SUM(a3.ppk_Wt),0) tonnBuWt             
  ,
  NVL(SUM(a3.bulk_wt),0.0) tonnBulkWt
  from 
  exp_pmanifest_awb A3 JOIN
  V_ddt_dtl A4
       On   
     a4.shp_trf_type='IF' and A4.awb_no=A3.awb_no and A4.CNTG_FLT_KEY is null 
JOIN Exp_Car A5
     ON a5.awb_no                 =a3.awb_no
AND TO_CHAR(A5.Awb_Date,'DDMONYY')=TO_CHAR(A3.Awb_Date,'DDMONYY')
  WHERE A3.Flt_Key                  =#fltNo#
AND A3.Flt_Date  =to_date(#sfltDate#,'DDMONYY'))
</select>
	
<select id="exp_depFltHndlgReptRamp_203_RE" parameterClass="cargo.cms.export.report.bo.DepFltHndlgReptDoc_203BO" resultClass="cargo.cms.export.report.bo.DepFltHndlgReptDoc_203BO">
	
	select  uld_key as uldKey,     wt as wt,     to_char(trans_date,'DDMONYY HH24:MI') as transDate
	from   exp_flt_hand_man_rebuilt   where    flt_key =#fltNo#    
			and flt_date = to_date(#sfltDate#,'DDMONYY')
</select>
<select id="reBuiltRemarks"  parameterClass="cargo.cms.export.report.bo.DepFltHndlgReptDoc_203BO" resultClass="java.lang.String">
select STRAGG(STRINGDELIM(remarks,' , ')) remarks from   exp_flt_hand_man_rebuilt   where    flt_key =#fltNo# 
		  and flt_date = to_date(#sfltDate#,'DDMONYY')
</select>
<select id="offloadRemarks"  parameterClass="cargo.cms.export.report.bo.DepFltHndlgReptDoc_203BO" resultClass="java.lang.String">
select STRAGG(STRINGDELIM(remarks,' , ')) oremarks from   exp_flt_hand_man_offload   where    flt_key =#fltNo# 
		  and flt_date = to_date(#sfltDate#,'DDMONYY')
</select>	
 <select id="exp_depFltHndlgReptRamp_203_OFF"  parameterClass="cargo.cms.export.report.bo.DepFltHndlgReptDoc_203BO" resultClass="cargo.cms.export.report.bo.DepFltHndlgReptDoc_203BO">
		 
	select  uld_awb_no as uldAWBNo,     pcs as opcs,      wt as owgt,     
			 to_char(trans_date,'DDMONYY') as otransDate
	 from   exp_flt_hand_man_offload   
		 where    flt_key =#fltNo#     and flt_date = to_date(#sfltDate#,'DDMONYY')
 </select>

<select id="exp_depFltHndlgReptRamp_203_RT"  parameterClass="cargo.cms.export.report.bo.DepFltHndlgReptDoc_203BO" resultClass="cargo.cms.export.report.bo.DepFltHndlgReptDoc_203BO">
			
	select  uld_awb_no as rtuldAWBNo,     pcs as rtpcs,      wt as rtwt,     
		    loaded_in_uld_yn as rtloadedIn,     to_char(trans_date,'DDMONYY') as rttransDate,     
		    to_char(trans_date,'HH24') as rttransDateHr,     to_char(trans_date,'MI') as rttransDateMin
	from   exp_flt_hand_man_returns   where    flt_key =#fltNo#   
		  and flt_date = to_date(#sfltDate#,'DDMONYY')
  
	</select>
<select id="returnsRemarks"  parameterClass="cargo.cms.export.report.bo.DepFltHndlgReptDoc_203BO" resultClass="java.lang.String">
  select STRAGG(STRINGDELIM(remarks,' , ')) rtremarks from   exp_flt_hand_man_returns   where    flt_key =#fltNo# 
		  and flt_date = to_date(#sfltDate#,'DDMONYY')
</select>
 <select id="exp_depFltHndlgReptRamp_203_DFLT"  parameterClass="cargo.cms.export.report.bo.DepFltHndlgReptDoc_203BO" resultClass="cargo.cms.export.report.bo.DepFltHndlgReptDoc_203BO">
	
	select  delay_flt_yn as delayFlt,      offload_late_uld_yn as offloadLateUld,      
			offload_remarks as offloadRemarks,      remarks as delayFltRemarks   
	from   exp_flt_hand_man   where    flt_key =#fltNo#     
			 and flt_date = to_date(#sfltDate#,'DDMONYY')
 </select>
<select id="exp_depFltHndlgReptRamp_203_REM"  parameterClass="cargo.cms.export.report.bo.DepFltHndlgReptDoc_203BO" resultClass="cargo.cms.export.report.bo.DepFltHndlgReptDoc_203BO">
	
	select  INSPECT_CARGO_remarks as inspectCargoRemarks,     
			POST_FLT_CHK_remarks as postFltRemarks,     
			ser_std_remarks as svcStdRemarks   
	from   exp_flt_hand_wh   
			where    flt_key =#fltNo#    and flt_date = to_date(#sfltDate#,'DDMONYY')
</select>
	
<select id="exp_depFltHndlgReptRamp_203_PER"  parameterClass="cargo.cms.export.report.bo.DepFltHndlgReptDoc_203BO" resultClass="cargo.cms.export.report.bo.DepFltHndlgReptDoc_203BO">
	
	select  perf_name as perfName,     perf_desc as perfDesc,     info_reqd as infoReqd,     
			remarks as premarks   
	from   exp_flt_hand_man_perf   where    flt_key =#fltNo#    
		and flt_date = to_date(#sfltDate#,'DDMONYY')
 </select>
	
<select id="exp_depFltHndlgReptRamp_203_SRV"  parameterClass="cargo.cms.export.report.bo.DepFltHndlgReptDoc_203BO" resultClass="cargo.cms.export.report.bo.DepFltHndlgReptDoc_203BO">
	
	select  sno as srvNo,     item_name as sitemName,     std as std,     service_time as serviceTime,    
			 std_met as stdMet,     remarks as sremarks   
	 from   exp_flt_hand_ser_std   where    flt_key =#fltNo#     
			 and flt_date = to_date(#sfltDate#,'DDMONYY')    and    rpt_type ='ED'
 </select>
 <select id="exp_depFltHndlgReptRamp_203_TIME"  parameterClass="cargo.cms.export.report.bo.DepFltHndlgReptDoc_203BO" resultClass="cargo.cms.export.report.bo.DepFltHndlgReptDoc_203BO">
	select  sno as sNo,     item_name as itemName,     to_char(trans_date,'DDMONYY') as transDate,     
			to_char(trans_date,'HH24') as transDateHr,     to_char(trans_date,'MI') as transDateMin,     
			modify_yn modifyYN   
	 from   exp_flt_hand_tstamp   where    flt_key =#fltNo#    
			and flt_date = to_date(#sfltDate#,'DDMONYY')    and    rpt_type ='ED'
 
 </select>
 <!-- Added by Manorama for FLight Handling Report Document Ends:::::203 -->
<!-- Added by Manorama for Flight Handling Report Ramp Starts::::::202 -->
	
 <select id="exp_depFltHndlgReptRamp_202"  parameterClass="cargo.cms.export.report.bo.DepFltHndlgRampRept_202BO" resultClass="cargo.cms.export.report.bo.DepFltHndlgRampRept_202BO">

	select  f1.flt_key as fltKey,    to_char(f1.sch_date,'DDMONYY') as fltDate,       
			substr(lpad(f1.sch_time, 4, '0'), 1, 2)||':'||substr(f1.sch_time, -2) as stdTime,    
			PKG_COMMON.get_flt_eta(#fltNo#	, TO_DATE(#sfltDate#,'DDMONYY'), 'D', 'DD')  as etdTime,    
			pkg_common.get_flt_ata(#fltNo# ,#sfltDate#,'D') as atdTime,       
			f1.cgo_acft_type as aircraftType,   
			(select code_desc from mast_code_dtl where code=f1.wthr_cond and code_type='WTH_CONDN')
		     as weather,
     PKG_EXP_RPT.FLT_PORTS(#fltNo# ,#sfltDate#) portOfCall
	 from   flt_opr f1 
	 where    f1. sch_date = to_date(#sfltDate#, 'DDMONYY')    
			and f1.flt_type = 'D'    and f1.flt_key =#fltNo#	
	 
	 </select>
	
<select id="exp_depFltHndlgReptRamp_202_1"  parameterClass="cargo.cms.export.report.bo.DepFltHndlgRampRept_202BO" resultClass="cargo.cms.export.report.bo.DepFltHndlgRampRept_202BO">
	
	select to_char(trans_date,'DDMONYY HH24:MI') as transDate,       
		   to_char(trans_date,'HH24') as transDateHr,       
		   to_char(trans_date,'MI') as transDateMin,       
		   buildup_user_id as rampUserID,       auld_detail as auldDetail   
	from   exp_flt_hand_ramp_dispatch   where    flt_key =#fltNo#   
		   and flt_date = to_date(#sfltDate#,'DDMONYY') order by trans_date
	
</select>
<select id="exp_depFltHndlgReptRamp_202_2"  parameterClass="cargo.cms.export.report.bo.DepFltHndlgRampRept_202BO" resultClass="cargo.cms.export.report.bo.DepFltHndlgRampRept_202BO">
	select  dispatch_rho as dispatchRho   
	from   exp_flt_hand_er   
	where    flt_key =#fltNo#   and flt_date = to_date(#sfltDate#,'DDMONYY')
</select>
	
<select id="exp_depFltHndlgReptRamp_202_3"  parameterClass="cargo.cms.export.report.bo.DepFltHndlgRampRept_202BO" resultClass="cargo.cms.export.report.bo.DepFltHndlgRampRept_202BO">
SELECT t1.sno                      AS sno,
  t1.item_name                     AS itemName,
  TO_CHAR(t1.trans_date,'DDMONYY HH24:MI') AS transDate,
  TO_CHAR(t1.trans_date,'HH24')    AS transDateHr,
  TO_CHAR(t1.trans_date,'MI')      AS transDateMin,
  t1.modify_yn modifyYN,
  s1.item_name servStd,
  s1.remarks srvRemarks
FROM exp_flt_hand_tstamp t1 left join 
exp_flt_hand_ser_std s1 on s1.flt_key = t1.flt_key 
and s1.flt_date = t1.flt_date and
s1.rpt_type = t1.rpt_type
WHERE t1.flt_key =#fltNo#
AND t1.flt_date  = to_date(#sfltDate#,'DDMONYY')
AND t1.rpt_type  ='ER'
ORDER BY sno
</select>
<select id="exp_depFltHndlgReptRamp_202_4"  parameterClass="cargo.cms.export.report.bo.DepFltHndlgRampRept_202BO" resultClass="java.lang.String">
select GEN_RMK offloadReamrks from   exp_flt_hand_summary  		where  rpt_type = 'ER' and FLT_DATE = TO_DATE(#sfltDate#,'DDMONYY')		and    flt_key = #fltNo#
</select>

<!-- Added by Manorama for Flight Handling Report Ramp(Ends):::::202 -->
<!-- Added by Manorama for PreManifest Tally Sheet:::Starts::: -->
<select id="exp_rept_214"  parameterClass="cargo.cms.export.report.bo.TalleySheetNotificationRept_214BO"  resultClass="cargo.cms.export.report.bo.TalleySheetNotificationRept_214BO">

select 
	#fltNo# as fltNo, #fltDate# as fltDate, #refNo# as refNo, 
	to_char(sysdate, 'DDMONYY HH24:MI') as printTime, 
	concat(concat(substr(t1.awb_no, 0,3), '-'),substr(t1.awb_no, 4)) as awbNo,
	t2.unldg_pt as unldgPt, 
	t2.pman_pcs as pcs, 
	ltrim(to_char(t2.pman_wt,'9999990.0')) as pcsWt, 
	t1.dest as uldDest,
	pkg_exp_val.get_exp_awb_cc_code(#fltNo#, #fltDate#, t1.awb_no) as consCode,
	t3.content as goods,
	(select    
		        	  decode(spl_code1, null, '', spl_code1 || decode(spl_code2, null, '', '/'))
               		|| decode(spl_code2, null, '', spl_code2 || decode(spl_code3, null, '', '/'))
               		|| decode(spl_code3, null, '', spl_code3 || decode(spl_code4, null, '', '/'))
              		|| decode(spl_code4, null, '', spl_code4 || decode(spl_code5, null, '', '/'))
               		|| decode(spl_code5, null, '', spl_code5 || decode(spl_code6, null, '', '/'))
              		|| decode(spl_code6, null, '', spl_code6 || decode(spl_code7, null, '', '/'))
               		|| decode(spl_code7, null, '', spl_code7 || decode(spl_code8, null, '', '/'))
               		|| decode(spl_code8, null, '', spl_code8 || decode(spl_code9, null, '', '/'))
               		|| decode(spl_code9, null, '', spl_code9)  from   awb
        			where  awb_no = t1.awb_no and awb_date = t1.awb_date) splCode, 
	trim(to_char(round(pkg_exp_val.get_volume(t2.awb_no, t2.pman_pcs), 2),'999999990.00')) as volMc,
	t2.bldup_instr as awbRemarks, 
	(case when t3.wt is null then to_char(t3.pcs,'999999990') else t3.pcs||'/'||ltrim(to_char(t3.wt, '999999990.0')) end) uldPcs,
	get_whDest(t1.awb_no, t1.awb_date) as whDest
from 
	exp_tally_sheet t1, 
	exp_pmanifest_awb t2, 
	awb t3 
where 
	t1.awb_no = t2.awb_no 
	and t1.awb_date = t2.awb_date
	and t1.flt_key = t2.flt_key 
	and t1.flt_date = t2.flt_date 
	and t1.awb_no = t3.awb_no 
	and t2.awb_no = t3.awb_no 
	and t2.awb_date = t3.awb_date
	and t1.awb_date = t3.awb_date 
	and t3.awb_type in ('E','T')
	and t1.TR_NO = nvl(#refNo#, t1.TR_NO) 
	and t1.flt_key = #fltNo#
	and t1.flt_date = to_date(#fltDate#, 'DDMONYY')
	and t1.awb_no in
	<iterate property="awbNoArrList" open="(" close=")" conjunction=",">
	             #awbNoArrList[]#  
	</iterate> 
 
</select>

<select id="exp_rept_214_flt"  parameterClass="cargo.cms.export.report.bo.TalleySheetNotificationRept_214BO"  resultClass="cargo.cms.export.report.bo.TalleySheetNotificationRept_214BO">

	SELECT		FLT_KEY as fltNo,     
						to_char(EST_DATE,'ddMONYY') ||' '|| SUBSTR(TRIM(TO_CHAR(NVL(EST_TIME,0),'0000')),0,2)|| ':'||  SUBSTR(TRIM(TO_CHAR(NVL(EST_TIME,0),'0000')),3,4)  as etd   
							
		FROM      FLT_OPR A     
		WHERE      A.FLT_KEY=#fltNo#   AND      A.SCH_DATE = TO_DATE(#fltDate#, 'DDMONYY')  AND      A.FLT_TYPE = 'D'
												
</select>

<select id="exp_rept_214_unLdValue"  parameterClass="cargo.cms.export.report.bo.TalleySheetNotificationRept_214BO"  resultClass="cargo.cms.export.report.bo.TalleySheetNotificationRept_214BO">
select off_point sunldgPt from flt_opr_leg where flt_key=#fltNo# and sch_date=#fltDate# and flt_type = 'D'
</select>
<select id="exp_rept_214_refNo"  parameterClass="cargo.cms.export.report.bo.TalleySheetNotificationRept_214BO"  resultClass="java.lang.String">
	select tr_no
	from (select * from exp_tally_sheet where flt_key = #fltNo# and flt_date = #fltDate# and tr_no is not null order by cr_date desc) s
	where rownum = 1
</select>

<select id="exp_rept_214_delete" parameterClass="cargo.cms.export.report.bo.TalleySheetNotificationRept_214BO" resultClass="cargo.cms.export.report.bo.TalleySheetNotificationRept_214BO">
   <![CDATA[ 
	  select  get_whDest(#awbNo#, #awbDate#) as whDest from dual
	  ]]>
</select> 
<!-- Added by Manorama for Print ULD Tag:::Starts -->
<!-- UnUsed ::::::::::::
<select id="exp_rept_541_list"  parameterClass="cargo.cms.export.report.bo.PrintULDTag_541BO" resultClass="cargo.cms.export.report.bo.PrintULDTag_541BO">
	SELECT uld.uld_bt_no uldKey,
  uld.contr_code contrCode,
  uld.GROSS_WT grossWt,
  uld.TARE_WT tareWt,
  (uld.gross_wt-uld.tare_wt) diffAmt,
  decode(awb.dest,'',uld.UNLDG_PT,awb.dest) destcode,
  uld.UNLDG_PT transferAt,
  uld.flt_key fltKey,
  to_char(uld.flt_date,'DDMONYY') fltDate,
  uld.flt_key
  ||'/'
  ||TO_CHAR(uld.flt_date,'DDMONYY') fltKeyDt
FROM exp_pmanifest_uld uld
 left join (select t4.to_no, t4.flt_key, t4.flt_date, t5.uld_key  from tow_order_out t4 , tow_order_out_dtl t5 
                              where t4.to_no=t5.to_no and status !='VOID') t45 
                  on uld.uld_bt_no=t45.uld_key and t45.flt_key=uld.flt_key and t45.flt_date=uld.flt_date
left join exp_pmanifest_uld_awb ua 
on uld.uld_bt_no = ua.uld_bt_no
and uld.flt_key = ua.flt_key
and uld.flt_date = ua.flt_date
and uld.UNLDG_PT = ua.UNLDG_PT
left join awb awb
on ua.awb_no = awb.awb_no
and ua.awb_date = awb.awb_date
	where
	<isNotEmpty property="uldCheckList">
		<iterate property="uldCheckList" open="(" close=")"
			conjunction="OR">
			dtl.uld_key = #uldCheckList[]#
   	</iterate>
	</isNotEmpty>
</select>-->
<select id="getPalletOrContainer"  parameterClass="cargo.cms.export.report.bo.PrintULDTag_541BO" resultClass="cargo.cms.export.report.bo.PrintULDTag_541BO">
select g.uld_type uldType,m.PLT_CNT palletContent 
from uld_group_type g 
left join mast_uld_allot_group a on a.ULD_GROUP = g.ULD_GROUP
left join mast_uld_allot m on a.ULD_ALLOT = m.ULD_ALLOT
where g.uld_type=#uldType#
</select>
<select id="getEICCount_HoForm"  parameterClass="map" resultClass="java.lang.Integer">
	select count(1) from uld_inventory where uld_key=#uld_key# and flt_key=#flt_key# and flt_date=#flt_date# and eic_flg='Y'
</select>

<select id="sqlGetWHLocPrinterIdByLocCode" parameterClass="java.lang.String" resultClass="java.lang.String">
	SELECT PRINTER_ID FROM MAST_WH_LOC WHERE CODE = #locCode#
</select>

<select id="exp_rept_541"  parameterClass="cargo.cms.export.report.bo.PrintULDTag_541BO" resultClass="cargo.cms.export.report.bo.PrintULDTag_541BO">
SELECT distinct uld.uld_key uldKey,
	  nvl(uld.contr_code,t2.contr_code) contrCode,
	  decode(uld.GROSS_WT,null,t2.gross_weight,'0',t2.gross_weight,uld.GROSS_WT) grossWt,
	  decode(uld.TARE_WT,null,t2.tare_weight,'0',t2.tare_weight,uld.TARE_WT) tareWt,
	  decode(uld.gross_wt,null,(t2.gross_weight-t2.tare_weight),'0',(t2.gross_weight-t2.tare_weight),uld.gross_wt-uld.tare_wt) diffAmt,
	  uld.UNLDG_PT destcode,
	  '' transferAt,
	  uld.flt_key fltKey,
	  to_char(uld.flt_date,'DDMONYY') fltDate,
	  uld.flt_key||'/'||TO_CHAR(uld.flt_date,'DDMONYY') fltKeyDt,
	  (SELECT STRAGG(STRINGDELIM(CODE,',')) FROM V_EXP_ULD_SHC WHERE ULD_KEY = uld.uld_key) uldSHCs
    from exp_chkout_dtl t1
	join uld_inventory t2 on t1.flt_key=t2.flt_key	and t1.uld_key = t2.uld_key	and t1.flt_date=t2.flt_date
	join exp_flt_uld uld	on  t1.uld_key = uld.uld_key	and t1.flt_key=uld.flt_key	and t1.flt_date=uld.flt_date
	where t1.uld_key =  #uldKey#
</select>
<!-- Added By Manorama for List/Print Cargo Manifest::::Starts -->
	<parameterMap id="exportManifestListMap" class="map" >
		<parameter property="RESULT" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>         
		<parameter property="FLIGHTKEY" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>    
		<parameter property="DEPDATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>    
		<parameter property="GRPNO" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>        
		<parameter property="ULDNO" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="FORMAT" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="UNLOADINGPT" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>   
	</parameterMap>

	<procedure id="expManifestProc" parameterMap="exportManifestListMap" >
		{? = call PKG_EXP_MANF_RPT.CARGO_MANIFEST_RPT(?,?,?,?,?,?)}
	</procedure>

<select id="getRecordCountPrintCargoManf" parameterClass="java.lang.String" resultClass="java.lang.Integer">
	SELECT count(*) from gt_exp_cargo_manifest_rpt where UNLDG_PT = #PARAM#
</select>

<select id="exp_crgManifestListRept_115_AWBFormat"  parameterClass="cargo.cms.export.report.bo.CrgManifestbyULD_115ReptBO" resultClass="cargo.cms.export.report.bo.CrgManifestbyULD_115ReptBO">
   		SELECT 
				SNO as serialNum, UNLDG_PT  dest,UNLDG_PT  dispUnldgPt, RPT_TYPE as rptType, AWB_ULD_NO as awbNo, uld_key as uldNo, 
				CATEGORY category,
				decode(#pmanRadioInd#,'Y',PCS,ASSIGNED_BULK_PCS) pcs, 
        		decode(#pmanRadioInd#,'Y',TO_CHAR(WT,'99999990.99'),TO_CHAR(ASSIGNED_BULK_WT,'99999990.99')) wgt, 
				CONTENT nature, SPL_CODE splCode, CC_CODE ccUse, 
				LICENSE_INFO as licenseNo,PERMIT_INFO as permitNo,
				ORIGIN orig, DEST destination,  upper(awb_remark) awbRemark ,upper(uld_remark) uldRemark,GROUP_NO grpNo,
				decode(catalog, 'ES','Non Revenue Cargo','Revenue Cargo') as crgCatalog,
				to_char(awb_date,'DDMONYY') as awbDate,	BB_IND bbInd,		  										
			    uld_connt_flt as awbConnFlt,awb_connt_flt as connFlt,FIRST_FLT as firstFlt,decode(uld_key,'BULK CARGO','1','2') as uldOrder,	
				AWB_TMP as tempAWBNO,
				(SELECT DECODE(COUNT(0), 0, 'N','Y')
				  FROM exp_pmanifest_uld_awb_shc shc
				  JOIN exp_pmanifest_uld_awb awb
				  ON shc.tr_no                 = awb.tr_no
				  WHERE awb.awb_no             = DECODE((LENGTH(a.AWB_ULD_NO)),'12',REPLACE(a.AWB_ULD_NO,'-'),a.AWB_ULD_NO)
				  AND awb.AWB_DATE             = a.AWB_DATE
				  AND NVL(shc.BULK_ULD_YN,'N') = 'Y'
				 AND NVL(a.RPT_TYPE,'A') = 'A'
				  ) shcSplitYN
			   FROM 
				gt_exp_cargo_manifest_rpt a
				WHERE UNLDG_PT is not null
				and GROUP_NO = nvl(#grpNo#,group_no)
				<isEqual property="pmanRadioInd" compareValue="Y">
					AND PCS is not null
				</isEqual>
				<isEqual property="pmanRadioInd" compareValue="N">
					AND ASSIGNED_BULK_PCS is not null
				</isEqual>
			UNION
			SELECT 
				SNO as serialNum, UNLDG_PT  dest,UNLDG_PT  dispUnldgPt, RPT_TYPE as rptType, AWB_ULD_NO as awbNo, uld_key as uldNo, 
				CATEGORY category,
				decode(#pmanRadioInd#,'Y',PCS,ASSIGNED_BULK_PCS) pcs, 
        		decode(#pmanRadioInd#,'Y',TO_CHAR(WT,'99999990.99'),TO_CHAR(ASSIGNED_BULK_WT,'99999990.99')) wgt, 
				CONTENT nature, SPL_CODE splCode, CC_CODE ccUse, 
				LICENSE_INFO as licenseNo,PERMIT_INFO as permitNo,
				ORIGIN orig, DEST destination,  upper(awb_remark) awbRemark ,upper(uld_remark) uldRemark,GROUP_NO grpNo,
				decode(catalog, 'ES','Non Revenue Cargo','Revenue Cargo') as crgCatalog,
				to_char(awb_date,'DDMONYY') as awbDate,	BB_IND bbInd,		  										
			    uld_connt_flt as awbConnFlt,awb_connt_flt as connFlt,FIRST_FLT as firstFlt,decode(uld_key,'BULK CARGO','1','2') as uldOrder,	
				AWB_TMP as tempAWBNO,
				(SELECT DECODE(COUNT(0), 0, 'N','Y')
				  FROM exp_pmanifest_uld_awb_shc shc
				  JOIN exp_pmanifest_uld_awb awb
				  ON shc.tr_no                 = awb.tr_no
				  WHERE awb.awb_no             = DECODE((LENGTH(a.AWB_ULD_NO)),'12',REPLACE(a.AWB_ULD_NO,'-'),a.AWB_ULD_NO)
				  AND awb.AWB_DATE             = a.AWB_DATE
				  AND NVL(shc.BULK_ULD_YN,'N') = 'Y'
				  AND NVL(a.RPT_TYPE,'A') = 'A'
				  ) shcSplitYN
			   FROM 
				gt_exp_cargo_manifest_rpt a
				WHERE UNLDG_PT is not null
				<isEqual property="pmanRadioInd" compareValue="Y">
					AND PCS is not null
				</isEqual>
				<isEqual property="pmanRadioInd" compareValue="N">
					AND ASSIGNED_BULK_PCS is not null
				</isEqual>
				AND GROUP_NO is null
				
			order by dest,awbNo,rptType,uldOrder,serialNum,crgCatalog desc			
</select>  
<select id="exp_crgManifestListRept_115_AWBFormat_withGrp"  parameterClass="cargo.cms.export.report.bo.CrgManifestbyULD_115ReptBO" resultClass="cargo.cms.export.report.bo.CrgManifestbyULD_115ReptBO">
   		SELECT 
				SNO as serialNum, UNLDG_PT  dest,UNLDG_PT  dispUnldgPt, RPT_TYPE as rptType, AWB_ULD_NO as awbNo, uld_key as uldNo, 
				CATEGORY category,
				decode(#pmanRadioInd#,'Y',PCS,ASSIGNED_BULK_PCS) pcs, 
        		decode(#pmanRadioInd#,'Y',TO_CHAR(WT,'99999990.99'),TO_CHAR(ASSIGNED_BULK_WT,'99999990.99')) wgt, 
				CONTENT nature, SPL_CODE splCode, CC_CODE ccUse, 
				LICENSE_INFO as licenseNo,PERMIT_INFO as permitNo,
				ORIGIN orig, DEST destination,  upper(awb_remark) awbRemark ,upper(uld_remark) uldRemark,GROUP_NO grpNo,
				decode(catalog, 'ES','Non Revenue Cargo','Revenue Cargo') as crgCatalog,
				to_char(awb_date,'DDMONYY') as awbDate,	BB_IND bbInd,		  										
			    uld_connt_flt as awbConnFlt,awb_connt_flt as connFlt,FIRST_FLT as firstFlt,decode(uld_key,'BULK CARGO','1','2') as uldOrder,	
				AWB_TMP as tempAWBNO
			   FROM 
				gt_exp_cargo_manifest_rpt
				WHERE UNLDG_PT is not null
				<isEqual property="pmanRadioInd" compareValue="Y">
					AND PCS is not null
				</isEqual>
				<isEqual property="pmanRadioInd" compareValue="N">
					AND ASSIGNED_BULK_PCS is not null
				</isEqual>
				AND GROUP_NO = #groupNo#
				
			order by dest,awbNo,rptType,uldOrder,serialNum,crgCatalog desc			
</select> 

<select id="exp_crgManifestListRept_115_AWBFormat_withOutGrp"  parameterClass="cargo.cms.export.report.bo.CrgManifestbyULD_115ReptBO" resultClass="cargo.cms.export.report.bo.CrgManifestbyULD_115ReptBO">
   		SELECT 
				SNO as serialNum, UNLDG_PT  dest,UNLDG_PT  dispUnldgPt, RPT_TYPE as rptType, AWB_ULD_NO as awbNo, uld_key as uldNo, 
				CATEGORY category,
				decode(#pmanRadioInd#,'Y',PCS,ASSIGNED_BULK_PCS) pcs, 
        		decode(#pmanRadioInd#,'Y',TO_CHAR(WT,'99999990.99'),TO_CHAR(ASSIGNED_BULK_WT,'99999990.99')) wgt, 
				CONTENT nature, SPL_CODE splCode, CC_CODE ccUse, 
				LICENSE_INFO as licenseNo,PERMIT_INFO as permitNo,
				ORIGIN orig, DEST destination,  upper(awb_remark) awbRemark ,upper(uld_remark) uldRemark,GROUP_NO grpNo,
				decode(catalog, 'ES','Non Revenue Cargo','Revenue Cargo') as crgCatalog,
				to_char(awb_date,'DDMONYY') as awbDate,	BB_IND bbInd,		  										
			    uld_connt_flt as awbConnFlt,awb_connt_flt as connFlt,FIRST_FLT as firstFlt,decode(uld_key,'BULK CARGO','1','2') as uldOrder,	
				AWB_TMP as tempAWBNO
			   FROM 
				gt_exp_cargo_manifest_rpt
				WHERE UNLDG_PT is not null
				<isEqual property="pmanRadioInd" compareValue="Y">
					AND PCS is not null
				</isEqual>
				<isEqual property="pmanRadioInd" compareValue="N">
					AND ASSIGNED_BULK_PCS is not null
				</isEqual>
				AND GROUP_NO is null
				
			order by dest,awbNo,rptType,uldOrder,serialNum,crgCatalog desc			
</select>  

<select id="exp_crgManifestListRept_115_Group"  parameterClass="cargo.cms.export.report.bo.CrgManifestbyULD_115ReptBO" resultClass="cargo.cms.export.report.bo.CrgManifestbyULD_115ReptBO">
   		<![CDATA[  
		SELECT  #fltNo# as fltNo, #fltDate# as fltDate, #owner# as owner,
				SNO as serialNum, UNLDG_PT  dest,UNLDG_PT  dispUnldgPt, RPT_TYPE as rptType, AWB_ULD_NO as awbNo, 
				awb_date as awbDate, uld_key as uldNo,
				CATEGORY category, 
				decode(#pmanRadioInd#,'Y',PCS,ASSIGNED_BULK_PCS) pcs, 
        		decode(#pmanRadioInd#,'Y',TO_CHAR(WT,'99999990.99'),TO_CHAR(ASSIGNED_BULK_WT,'99999990.99')) wgt, 
				CONTENT nature, 
				SPL_CODE splCode, CC_CODE ccUse, BB_IND bbInd,	
				ORIGIN orig, DEST destination, upper(awb_remark) awbRemark,GROUP_NO grpNo,upper(uld_remark) uldRemark,
				decode(CATALOG, 'ES', 'Non Revenue Cargo', 'Revenue Cargo') as crgCatalog,
				ULD_CONNT_FLT uldConnFlt,
				AWB_CONNT_FLT awbConnFlt,
				SUBSTR(awb_uld_no,1,3)||'-'||SUBSTR(awb_uld_no,4)  as awbNum1,
				LICENSE_INFO licenseNo,PERMIT_INFO as permitNo,
				( SELECT DECODE(COUNT(0), 0, 'N','Y')
					FROM exp_pmanifest_uld_awb_shc shc
					JOIN exp_pmanifest_uld_awb awb
					ON shc.tr_no       = awb.tr_no
					WHERE awb.awb_no   = decode((LENGTH(a.AWB_ULD_NO)),'12',replace(a.AWB_ULD_NO,'-'),a.AWB_ULD_NO) 
					AND awb.AWB_DATE = a.AWB_DATE
					AND NVL(shc.BULK_ULD_YN,'N')  = 'Y' 
					AND NVL(a.RPT_TYPE,'A') = 'A'
				) 		shcSplitYN					
			    FROM 
				gt_exp_cargo_manifest_rpt a
				where GROUP_NO = nvl(#groupNo#,GROUP_NO)
				
		UNION 
		SELECT  #fltNo# as fltNo, #fltDate# as fltDate, #owner# as owner,
				SNO as serialNum, UNLDG_PT  dest,UNLDG_PT  dispUnldgPt, RPT_TYPE as rptType, AWB_ULD_NO as awbNo, 
				awb_date as awbDate, uld_key as uldNo,
				CATEGORY category, 
				decode(#pmanRadioInd#,'Y',PCS,ASSIGNED_BULK_PCS) pcs, 
        		decode(#pmanRadioInd#,'Y',TO_CHAR(WT,'99999990.99'),TO_CHAR(ASSIGNED_BULK_WT,'99999990.99')) wgt, 
				CONTENT nature, 
				SPL_CODE splCode, CC_CODE ccUse, BB_IND bbInd,	
				ORIGIN orig, DEST destination, upper(awb_remark) awbRemark,GROUP_NO grpNo,upper(uld_remark) uldRemark,
				decode(CATALOG, 'ES', 'Non Revenue Cargo', 'Revenue Cargo') as crgCatalog,
				ULD_CONNT_FLT uldConnFlt,
				AWB_CONNT_FLT awbConnFlt,
				SUBSTR(awb_uld_no,1,3)||'-'||SUBSTR(awb_uld_no,4)  as awbNum1,
				LICENSE_INFO licenseNo,PERMIT_INFO as permitNo,
				( SELECT DECODE(COUNT(0), 0, 'N','Y')
					FROM exp_pmanifest_uld_awb_shc shc
					JOIN exp_pmanifest_uld_awb awb
					ON shc.tr_no       = awb.tr_no
					WHERE awb.awb_no   = decode((LENGTH(a.AWB_ULD_NO)),'12',replace(a.AWB_ULD_NO,'-'),a.AWB_ULD_NO) 
					AND awb.AWB_DATE = a.AWB_DATE
					AND NVL(shc.BULK_ULD_YN,'N')  = 'Y' 
					AND NVL(a.RPT_TYPE,'A') = 'A'
				) 		shcSplitYN										
			    FROM 
				gt_exp_cargo_manifest_rpt a
				where GROUP_NO is null
		
				order by  dest,grpNo,awbNo, serialNum,rptType
				]]>
</select>
<select id="exp_crgManifestListRept_115_Group_withGrp"  parameterClass="cargo.cms.export.report.bo.CrgManifestbyULD_115ReptBO" resultClass="cargo.cms.export.report.bo.CrgManifestbyULD_115ReptBO">
   		<![CDATA[  
		SELECT  #fltNo# as fltNo, #fltDate# as fltDate, #owner# as owner,
				SNO as serialNum, UNLDG_PT  dest,UNLDG_PT  dispUnldgPt, RPT_TYPE as rptType, AWB_ULD_NO as awbNo, 
				awb_date as awbDate, uld_key as uldNo,
				CATEGORY category, 
				decode(#pmanRadioInd#,'Y',PCS,ASSIGNED_BULK_PCS) pcs, 
        		decode(#pmanRadioInd#,'Y',TO_CHAR(WT,'99999990.99'),TO_CHAR(ASSIGNED_BULK_WT,'99999990.99')) wgt, 
				CONTENT nature, 
				SPL_CODE splCode, CC_CODE ccUse, BB_IND bbInd,	
				ORIGIN orig, DEST destination, upper(awb_remark) awbRemark,GROUP_NO grpNo,upper(uld_remark) uldRemark,
				decode(CATALOG, 'ES', 'Non Revenue Cargo', 'Revenue Cargo') as crgCatalog,
				ULD_CONNT_FLT uldConnFlt,
				AWB_CONNT_FLT awbConnFlt,
				SUBSTR(awb_uld_no,1,3)||'-'||SUBSTR(awb_uld_no,4)  as awbNum1,
				LICENSE_INFO licenseNo,PERMIT_INFO as permitNo					
			    FROM 
				gt_exp_cargo_manifest_rpt 
				where GROUP_NO = #groupNo#
				order by  dest,to_number(grpNo),awbNo, SNO, rpt_type
				]]>
</select>
<select id="exp_crgManifestListRept_115_Group_withOutGrp"  parameterClass="cargo.cms.export.report.bo.CrgManifestbyULD_115ReptBO" resultClass="cargo.cms.export.report.bo.CrgManifestbyULD_115ReptBO">
   		<![CDATA[  
		SELECT  #fltNo# as fltNo, #fltDate# as fltDate, #owner# as owner,
				SNO as serialNum, UNLDG_PT  dest,UNLDG_PT  dispUnldgPt, RPT_TYPE as rptType, AWB_ULD_NO as awbNo, 
				awb_date as awbDate, uld_key as uldNo,
				CATEGORY category, 
				decode(#pmanRadioInd#,'Y',PCS,ASSIGNED_BULK_PCS) pcs, 
        		decode(#pmanRadioInd#,'Y',TO_CHAR(WT,'99999990.99'),TO_CHAR(ASSIGNED_BULK_WT,'99999990.99')) wgt, 
				CONTENT nature, 
				SPL_CODE splCode, CC_CODE ccUse, BB_IND bbInd,	
				ORIGIN orig, DEST destination, upper(awb_remark) awbRemark,GROUP_NO grpNo,upper(uld_remark) uldRemark,
				decode(CATALOG, 'ES', 'Non Revenue Cargo', 'Revenue Cargo') as crgCatalog,
				ULD_CONNT_FLT uldConnFlt,
				AWB_CONNT_FLT awbConnFlt,
				SUBSTR(awb_uld_no,1,3)||'-'||SUBSTR(awb_uld_no,4)  as awbNum1,
				LICENSE_INFO licenseNo,PERMIT_INFO as permitNo					
			    FROM 
				gt_exp_cargo_manifest_rpt 
				where GROUP_NO is null
				order by  dest,to_number(grpNo),awbNo, SNO, rpt_type
				]]>
</select>

	<select id="exp_crgManifestListRept_115_LH"  parameterClass="cargo.cms.export.report.bo.CrgManifestbyULD_115ReptBO" resultClass="cargo.cms.export.report.bo.CrgManifestbyULD_115ReptBO">
				SELECT  #fltNo# as fltNo, #fltDate# as fltDate, #owner# as owner,
				rpt.SNO as serialNum, rpt.UNLDG_PT  dest, rpt.RPT_TYPE as rptType, rpt.AWB_ULD_NO as awbNo, 
				TO_CHAR(rpt.awb_date,'DDMONYY') as awbDate, rpt.uld_key as uldNo,
				rpt.CATEGORY category, rpt.PCS pcs, TO_CHAR(rpt.WT,'9999990.9') wgt, 
				rpt.CONTENT nature,				 
				rpt.SPL_CODE splCode,rpt.CC_CODE ccUse, 
				nvl(rpt.ORIGIN,awb.orig) orig, nvl(rpt.DEST,awb.dest) destination, rpt.uld_pman_rmk manfRem,rpt.GROUP_NO grpNo,
				decode(rpt.CATALOG, 'ES', 'Non Revenue Cargo', 'Revenue Cargo') as crgCatalog,
				'' as remarks,
				rpt.uld_connt_flt as uldConnFlt,rpt.awb_connt_flt as awbConnFlt,rpt.LICENSE_INFO as licenseNo,rpt.PERMIT_INFO as permitNo,
		 		decode(rpt.uld_key,'BULK CARGO','1','2') as uldOrder,rpt.AWB_TMP as tempAWBNO				
				FROM 
				gt_exp_cargo_manifest_rpt rpt
        		left join awb awb on awb.awb_no=rpt.awb_no and awb.awb_date=rpt.awb_date  
        		order by serialNum,dest, splCode, destination,uldOrder,uldNo,rptType
	</select>
	<select id="getConfiguredSpecialHandlingCodes"  parameterClass="cargo.cms.export.report.bo.CrgManifestbyULD_115ReptBO" resultClass="cargo.cms.export.report.bo.CrgManifestbyULD_115ReptBO">
	SELECT CODE_DESC as shc FROM MAST_CODE_DTL WHERE GROUP_CODE='38' AND CODE_TYPE='LH_FORMAT'
	</select>
	<select id="check_dg_shipment_lh_format" parameterClass="java.util.HashMap"  resultClass="java.lang.Integer">
	select count(1) from awb where awb_no= #awbNo# and awb_date = #awbDate#
				and exists (select null from CUST_AIRL_SPL_CODE where carr_code = awb.carr_code and spl_type = 'SPL_DANG' 
				              and instr(awb.spl_code1|| awb.spl_code2||awb.spl_code3|| awb.spl_code4|| awb.spl_code5|| awb.spl_code6||spl_code7||spl_code8||spl_code9,spl_code) > 0)
	</select>
<select id="exp_crgManifestListRept_115_ULD_Flow"  parameterClass="cargo.cms.export.report.bo.CrgManifestbyULD_115ReptBO" resultClass="cargo.cms.export.report.bo.CrgManifestbyULD_115ReptBO">
		SELECT   #fltNo# as fltNo, #fltDate# as fltDate, #owner# as owner,
				SNO as serialNum, UNLDG_PT  dest,UNLDG_PT  dispUnldgPt, RPT_TYPE as rptType, AWB_ULD_NO as awbNo, 
				decode(org_uld_key,null,uld_key,org_uld_key) as uldNo,BB_IND bbInd,	
				CATEGORY category, 
				decode(#pmanRadioInd#,'Y',PCS,ASSIGNED_BULK_PCS) pcs, 
        		decode(#pmanRadioInd#,'Y',TO_CHAR(WT,'99999990.99'),TO_CHAR(ASSIGNED_BULK_WT,'99999990.99')) wgt, 
				CONTENT nature, SPL_CODE splCode, CC_CODE ccUse, 
				ORIGIN orig, DEST destination, upper(awb_remark) awbRemark ,GROUP_NO grpNo,upper(uld_remark) uldRemark,
				ULD_CONNT_FLT uldConnFlt,
				AWB_CONNT_FLT awbConnFlt,
				SUBSTR(awb_uld_no,1,3)||'-'||SUBSTR(awb_uld_no,4)  as awbNum1,
				LICENSE_INFO licenseNo,PERMIT_INFO as permitNo,
				( SELECT DECODE(COUNT(0), 0, 'N','Y')
					FROM exp_pmanifest_uld_awb_shc shc
					JOIN exp_pmanifest_uld_awb awb
					ON shc.tr_no       = awb.tr_no
					WHERE awb.awb_no   = decode((LENGTH(a.AWB_ULD_NO)),'12',replace(a.AWB_ULD_NO,'-'),a.AWB_ULD_NO)
					AND awb.AWB_DATE = a.AWB_DATE
					AND NVL(shc.BULK_ULD_YN,'N')  = 'Y' 
					AND NVL(a.RPT_TYPE,'A') = 'A'
					) 		shcSplitYN					
			   FROM 
				gt_exp_cargo_manifest_rpt a 
				where AWB_ULD_NO != org_uld_key and decode(#pmanRadioInd#,'Y',PCS,ASSIGNED_BULK_PCS) is not null and group_no = nvl(#grpNo#,group_no)
				
		UNION 
		SELECT   #fltNo# as fltNo, #fltDate# as fltDate, #owner# as owner,
				SNO as serialNum, UNLDG_PT  dest,UNLDG_PT  dispUnldgPt, RPT_TYPE as rptType, AWB_ULD_NO as awbNo, 
				decode(org_uld_key,null,uld_key,org_uld_key) as uldNo,BB_IND bbInd,	
				CATEGORY category, 
				decode(#pmanRadioInd#,'Y',PCS,ASSIGNED_BULK_PCS) pcs, 
        		decode(#pmanRadioInd#,'Y',TO_CHAR(WT,'99999990.99'),TO_CHAR(ASSIGNED_BULK_WT,'99999990.99')) wgt, 
				CONTENT nature, SPL_CODE splCode, CC_CODE ccUse, 
				ORIGIN orig, DEST destination, upper(awb_remark) awbRemark ,GROUP_NO grpNo,upper(uld_remark) uldRemark,
				ULD_CONNT_FLT uldConnFlt,
				AWB_CONNT_FLT awbConnFlt,
				SUBSTR(awb_uld_no,1,3)||'-'||SUBSTR(awb_uld_no,4)  as awbNum1,
				LICENSE_INFO licenseNo,PERMIT_INFO as permitNo,
				( SELECT DECODE(COUNT(0), 0, 'N','Y')
					FROM exp_pmanifest_uld_awb_shc shc
					JOIN exp_pmanifest_uld_awb awb
					ON shc.tr_no       = awb.tr_no
					WHERE awb.awb_no   = decode((LENGTH(a.AWB_ULD_NO)),'12',replace(a.AWB_ULD_NO,'-'),a.AWB_ULD_NO)
					AND awb.AWB_DATE = a.AWB_DATE
					AND NVL(shc.BULK_ULD_YN,'N')  = 'Y' 
					AND NVL(a.RPT_TYPE,'A') = 'A'
					) 		shcSplitYN					
			   FROM 
				gt_exp_cargo_manifest_rpt a 
				where AWB_ULD_NO != org_uld_key and decode(#pmanRadioInd#,'Y',PCS,ASSIGNED_BULK_PCS) is not null and group_no is null
				
				order by  dest,uldNo,awbNo, serialNum, rptType
</select>
<select id="exp_crgManifestListRept_115_ULD_Flow_withGrp"  parameterClass="cargo.cms.export.report.bo.CrgManifestbyULD_115ReptBO" resultClass="cargo.cms.export.report.bo.CrgManifestbyULD_115ReptBO">
		SELECT   #fltNo# as fltNo, #fltDate# as fltDate, #owner# as owner,
				SNO as serialNum, UNLDG_PT  dest,UNLDG_PT  dispUnldgPt, RPT_TYPE as rptType, AWB_ULD_NO as awbNo, 
				decode(org_uld_key,null,uld_key,org_uld_key) as uldNo,BB_IND bbInd,	
				CATEGORY category, 
				decode(#pmanRadioInd#,'Y',PCS,ASSIGNED_BULK_PCS) pcs, 
        		decode(#pmanRadioInd#,'Y',TO_CHAR(WT,'99999990.99'),TO_CHAR(ASSIGNED_BULK_WT,'99999990.99')) wgt, 
				CONTENT nature, SPL_CODE splCode, CC_CODE ccUse, 
				ORIGIN orig, DEST destination, upper(awb_remark) awbRemark ,GROUP_NO grpNo,upper(uld_remark) uldRemark,
				ULD_CONNT_FLT uldConnFlt,
				AWB_CONNT_FLT awbConnFlt,
				SUBSTR(awb_uld_no,1,3)||'-'||SUBSTR(awb_uld_no,4)  as awbNum1,
				LICENSE_INFO licenseNo,PERMIT_INFO as permitNo					
			   FROM 
				gt_exp_cargo_manifest_rpt 
				where AWB_ULD_NO != org_uld_key and decode(#pmanRadioInd#,'Y',PCS,ASSIGNED_BULK_PCS) is not null and group_no = #groupNo#
				order by  dest,uldNo,awbNo, serialNum, rptType
</select>
<select id="exp_crgManifestListRept_115_ULD_Flow_withoutGrp"  parameterClass="cargo.cms.export.report.bo.CrgManifestbyULD_115ReptBO" resultClass="cargo.cms.export.report.bo.CrgManifestbyULD_115ReptBO">
		SELECT   #fltNo# as fltNo, #fltDate# as fltDate, #owner# as owner,
				SNO as serialNum, UNLDG_PT  dest,UNLDG_PT  dispUnldgPt, RPT_TYPE as rptType, AWB_ULD_NO as awbNo, 
				decode(org_uld_key,null,uld_key,org_uld_key) as uldNo,BB_IND bbInd,	
				CATEGORY category, 
				decode(#pmanRadioInd#,'Y',PCS,ASSIGNED_BULK_PCS) pcs, 
        		decode(#pmanRadioInd#,'Y',TO_CHAR(WT,'99999990.99'),TO_CHAR(ASSIGNED_BULK_WT,'99999990.99')) wgt, 
				CONTENT nature, SPL_CODE splCode, CC_CODE ccUse, 
				ORIGIN orig, DEST destination, upper(awb_remark) awbRemark ,GROUP_NO grpNo,upper(uld_remark) uldRemark,
				ULD_CONNT_FLT uldConnFlt,
				AWB_CONNT_FLT awbConnFlt,
				SUBSTR(awb_uld_no,1,3)||'-'||SUBSTR(awb_uld_no,4)  as awbNum1,
				LICENSE_INFO licenseNo,PERMIT_INFO as permitNo					
			   FROM 
				gt_exp_cargo_manifest_rpt 
				where AWB_ULD_NO != org_uld_key and decode(#pmanRadioInd#,'Y',PCS,ASSIGNED_BULK_PCS) is not null and group_no is null
				order by  dest,uldNo,awbNo, serialNum, rptType
</select>
<select id="exp_crgManifestListRept_115_AIFormat"  parameterClass="cargo.cms.export.report.bo.CrgManifestbyULD_115ReptBO" resultClass="cargo.cms.export.report.bo.CrgManifestbyULD_115ReptBO">
<![CDATA[ 

		SELECT      
				SNO as serialNum, UNLDG_PT  dest,UNLDG_PT  dispUnldgPt, RPT_TYPE as rptType, AWB_ULD_NO as awbNo, uld_key as uldNo,      
				CATEGORY category, 
				decode(#pmanRadioInd#,'Y',PCS,ASSIGNED_BULK_PCS) pcs, 
        		decode(#pmanRadioInd#,'Y',TO_CHAR(WT,'99999990.99'),TO_CHAR(ASSIGNED_BULK_WT,'99999990.99')) wgt,
				BB_IND bbInd,	
				PCS ||(select decode(SUM(c.PCS),null,null,'/'||SUM(c.PCS))  from gt_exp_cargo_manifest_rpt  c 
				where c.RPT_TYPE = 'A' AND c.AWB_ULD_NO = k.AWB_ULD_NO having count(c.awb_uld_no) > 1) as pc, 
				TRIM(TO_CHAR(WT,'99999990.99'))||(select decode(TO_CHAR(SUM(c.WT),'99999990.99'),null,null,'/'||TRIM(TO_CHAR(SUM(c.WT),'99999990.99')))  from gt_exp_cargo_manifest_rpt  c 
				where c.RPT_TYPE ='A' AND c.AWB_ULD_NO = k.AWB_ULD_NO having count(c.awb_uld_no) > 1)  wt,
				CONTENT nature, SPL_CODE splCode, CC_CODE ccUse, upper(uld_remark) uldRemark,    
				LICENSE_INFO as licenseNo, PERMIT_INFO as permitNo,      
				ORIGIN orig, DEST destination, PMAN_REMARK as 
				manfRemarks,uld_pman_rmk as remk , GROUP_NO grpNo,     
				decode(catalog, 'ES','Non Revenue Cargo','Revenue Cargo') as crgCatalog,     
				to_char(awb_date,'DDMONYY') as awbDate,     
				uld_connt_flt as connFlt,awb_connt_flt as awbConnFlt,FIRST_FLT as firstFlt,AWB_TMP as tempAWBNO             
		FROM      
				gt_exp_cargo_manifest_rpt  k
		order by dest,rptType,serialNum,crgCatalog desc

]]>
</select> 
      <select id="exp_crgManifestListRept_115_ULD_PBP"  parameterClass="cargo.cms.export.report.bo.CrgManifestbyULD_115ReptBO" resultClass="cargo.cms.export.report.bo.CrgManifestbyULD_115ReptBO">
            <![CDATA[ 
            SELECT  #fltNo# as fltNo, #fltDate# as fltDate, #owner# as owner,
                        SNO as serialNum, UNLDG_PT  dest,UNLDG_PT  dispUnldgPt, RPT_TYPE as rptType, AWB_ULD_NO as awbNo, 
                        decode(org_uld_key,null,uld_key,org_uld_key) as uldNo,
                        CATEGORY category,
                        decode(#pmanRadioInd#,'Y',PCS,ASSIGNED_BULK_PCS) pcs, 
        				decode(#pmanRadioInd#,'Y',TO_CHAR(WT,'99999990.99'),TO_CHAR(ASSIGNED_BULK_WT,'99999990.99')) wgt, 
                        CONTENT nature, SPL_CODE splCode, CC_CODE ccUse, upper(uld_remark) uldRemark,
                        ORIGIN orig, DEST destination, upper(awb_remark) awbRemark ,GROUP_NO grpNo,
                        ULD_CONNT_FLT uldConnFlt,
                        AWB_CONNT_FLT awbConnFlt,
                        SUBSTR(awb_uld_no,1,3)||'-'||SUBSTR(awb_uld_no,4)  as awbNum1,
                        LICENSE_INFO licenseNo,PERMIT_INFO as permitNo,                   
                        decode(pcs, awb_tot_pcs, to_char(pcs), pcs||'/'||awb_tot_pcs) as awbTotPcs, 
                        awb_tot_wt as awbTotWgt,
                        decode(wt, awb_tot_wt, trim(to_char(wt, 99999990.99)), trim(to_char(wt, 99999990.99))||'/'||trim(to_char(awb_tot_wt,99999990.99))) as awbTotWt,
                        ( SELECT DECODE(COUNT(0), 0, 'N','Y')
							FROM exp_pmanifest_uld_awb_shc shc
							JOIN exp_pmanifest_uld_awb awb
							ON shc.tr_no       = awb.tr_no
							WHERE awb.awb_no   = decode((LENGTH(a.AWB_ULD_NO)),'12',replace(a.AWB_ULD_NO,'-'),a.AWB_ULD_NO)
							AND awb.AWB_DATE = a.AWB_DATE
							AND NVL(shc.BULK_ULD_YN,'N')  = 'Y' 
							AND NVL(a.RPT_TYPE,'A') = 'A'
						) 		shcSplitYN                                        
                     FROM 
                        gt_exp_cargo_manifest_rpt a
                        where AWB_ULD_NO<>org_uld_key and decode(#pmanRadioInd#,'Y',PCS,ASSIGNED_BULK_PCS) is not null and group_no = nvl(#groupNo#,group_no)
                        
            UNION 
           
              SELECT  #fltNo# as fltNo, #fltDate# as fltDate, #owner# as owner,
                        SNO as serialNum, UNLDG_PT  dest,UNLDG_PT  dispUnldgPt, RPT_TYPE as rptType, AWB_ULD_NO as awbNo, 
                        decode(org_uld_key,null,uld_key,org_uld_key) as uldNo,
                        CATEGORY category,
                        decode(#pmanRadioInd#,'Y',PCS,ASSIGNED_BULK_PCS) pcs, 
        				decode(#pmanRadioInd#,'Y',TO_CHAR(WT,'99999990.99'),TO_CHAR(ASSIGNED_BULK_WT,'99999990.99')) wgt, 
                        CONTENT nature, SPL_CODE splCode, CC_CODE ccUse, upper(uld_remark) uldRemark,
                        ORIGIN orig, DEST destination, upper(awb_remark) awbRemark ,GROUP_NO grpNo,
                        ULD_CONNT_FLT uldConnFlt,
                        AWB_CONNT_FLT awbConnFlt,
                        SUBSTR(awb_uld_no,1,3)||'-'||SUBSTR(awb_uld_no,4)  as awbNum1,
                        LICENSE_INFO licenseNo,PERMIT_INFO as permitNo,                   
                        decode(pcs, awb_tot_pcs, to_char(pcs), pcs||'/'||awb_tot_pcs) as awbTotPcs, 
                        awb_tot_wt as awbTotWgt,
                        decode(wt, awb_tot_wt, trim(to_char(wt, 99999990.99)), trim(to_char(wt, 99999990.99))||'/'||trim(to_char(awb_tot_wt,99999990.99))) as awbTotWt,
                         ( SELECT DECODE(COUNT(0), 0, 'N','Y')
							FROM exp_pmanifest_uld_awb_shc shc
							JOIN exp_pmanifest_uld_awb awb
							ON shc.tr_no       = awb.tr_no
							WHERE awb.awb_no   = decode((LENGTH(a.AWB_ULD_NO)),'12',replace(a.AWB_ULD_NO,'-'),a.AWB_ULD_NO)
							AND awb.AWB_DATE = a.AWB_DATE
							AND NVL(shc.BULK_ULD_YN,'N')  = 'Y' 
							AND NVL(a.RPT_TYPE,'A') = 'A'
						) 		shcSplitYN                                               
                     FROM 
                        gt_exp_cargo_manifest_rpt a 
                        where AWB_ULD_NO<>org_uld_key and decode(#pmanRadioInd#,'Y',PCS,ASSIGNED_BULK_PCS) is not null and group_no is null
                        
                     order by  dest,uldNo,awbNo,serialNum, rptType
              ]]>                     
      </select> 
      <select id="exp_crgManifestListRept_115_ULD_PBP_withGrp"  parameterClass="cargo.cms.export.report.bo.CrgManifestbyULD_115ReptBO" resultClass="cargo.cms.export.report.bo.CrgManifestbyULD_115ReptBO">
            <![CDATA[ 
            SELECT  #fltNo# as fltNo, #fltDate# as fltDate, #owner# as owner,
                        SNO as serialNum, UNLDG_PT  dest,UNLDG_PT  dispUnldgPt, RPT_TYPE as rptType, AWB_ULD_NO as awbNo, 
                        decode(org_uld_key,null,uld_key,org_uld_key) as uldNo,
                        CATEGORY category,
                        decode(#pmanRadioInd#,'Y',PCS,ASSIGNED_BULK_PCS) pcs, 
        				decode(#pmanRadioInd#,'Y',TO_CHAR(WT,'99999990.99'),TO_CHAR(ASSIGNED_BULK_WT,'99999990.99')) wgt, 
                        CONTENT nature, SPL_CODE splCode, CC_CODE ccUse, upper(uld_remark) uldRemark,
                        ORIGIN orig, DEST destination, upper(awb_remark) awbRemark ,GROUP_NO grpNo,
                        ULD_CONNT_FLT uldConnFlt,
                        AWB_CONNT_FLT awbConnFlt,
                        SUBSTR(awb_uld_no,1,3)||'-'||SUBSTR(awb_uld_no,4)  as awbNum1,
                        LICENSE_INFO licenseNo,PERMIT_INFO as permitNo,                   
                        decode(pcs, awb_tot_pcs, to_char(pcs), pcs||'/'||awb_tot_pcs) as awbTotPcs, 
                        awb_tot_wt as awbTotWgt,
                        decode(wt, awb_tot_wt, trim(to_char(wt, 99999990.99)), trim(to_char(wt, 99999990.99))||'/'||trim(to_char(awb_tot_wt,99999990.99))) as awbTotWt                                        
                     FROM 
                        gt_exp_cargo_manifest_rpt
                        where AWB_ULD_NO<>org_uld_key and decode(#pmanRadioInd#,'Y',PCS,ASSIGNED_BULK_PCS) is not null and group_no = #groupNo#
                     order by  dest,uldNo,awbNo,serialNum, rptType
              ]]>                     
      </select> 
      <select id="exp_crgManifestListRept_115_ULD_PBP_withoutGrp"  parameterClass="cargo.cms.export.report.bo.CrgManifestbyULD_115ReptBO" resultClass="cargo.cms.export.report.bo.CrgManifestbyULD_115ReptBO">
            <![CDATA[ 
            SELECT  #fltNo# as fltNo, #fltDate# as fltDate, #owner# as owner,
                        SNO as serialNum, UNLDG_PT  dest,UNLDG_PT  dispUnldgPt, RPT_TYPE as rptType, AWB_ULD_NO as awbNo, 
                        decode(org_uld_key,null,uld_key,org_uld_key) as uldNo,
                        CATEGORY category,
                        decode(#pmanRadioInd#,'Y',PCS,ASSIGNED_BULK_PCS) pcs, 
        				decode(#pmanRadioInd#,'Y',TO_CHAR(WT,'99999990.99'),TO_CHAR(ASSIGNED_BULK_WT,'99999990.99')) wgt, 
                        CONTENT nature, SPL_CODE splCode, CC_CODE ccUse, upper(uld_remark) uldRemark,
                        ORIGIN orig, DEST destination, upper(awb_remark) awbRemark ,GROUP_NO grpNo,
                        ULD_CONNT_FLT uldConnFlt,
                        AWB_CONNT_FLT awbConnFlt,
                        SUBSTR(awb_uld_no,1,3)||'-'||SUBSTR(awb_uld_no,4)  as awbNum1,
                        LICENSE_INFO licenseNo,PERMIT_INFO as permitNo,                   
                        decode(pcs, awb_tot_pcs, to_char(pcs), pcs||'/'||awb_tot_pcs) as awbTotPcs, 
                        awb_tot_wt as awbTotWgt,
                        decode(wt, awb_tot_wt, trim(to_char(wt, 99999990.99)), trim(to_char(wt, 99999990.99))||'/'||trim(to_char(awb_tot_wt,99999990.99))) as awbTotWt                                        
                     FROM 
                        gt_exp_cargo_manifest_rpt
                        where AWB_ULD_NO<>org_uld_key and decode(#pmanRadioInd#,'Y',PCS,ASSIGNED_BULK_PCS) is not null and group_no is null
                     order by  dest,uldNo,awbNo,serialNum, rptType
              ]]>                     
      </select>

	<select id="exp_crgManifestListRept_115_AI_Query2" parameterClass="cargo.cms.export.report.bo.CrgManifestbyULD_115ReptBO"  resultClass="java.lang.Integer">
	
	select sum(tot) from (  
		select count(awb_no) tot from exp_car_sec where awb_no = #tempAwbNo# and awb_date = to_date(#awbDate#,'DDMONYY')
	union
		select count(hd.rcl_no) tot 
		from exp_rcl_sec_chk_dtl sc, exp_rcl_hd hd
		where hd.rcl_no = sc.rcl_no and  hd.awb_no = #tempAwbNo# and hd.awb_date = to_date(#awbDate#,'DDMONYY')
	)

	</select>
	<update id="fltOprTableEvents" parameterClass="cargo.cms.export.report.bo.CrgManifestbyULD_115ReptBO">
		update flt_opr_events set MANF_PCS = #totPcs#,MANF_WT = #totWt#,tr_type = #trType# where 
		tr_no in ( select tr_no from FLT_OPR_EVENTS where flt_key = #fltNo# and sch_date = #fltDate# and flt_type = 'D' )
	</update>
	<select id="fltRmkForReport"  parameterClass="cargo.cms.export.report.bo.CrgManifestbyULD_115ReptBO" resultClass="java.lang.String">
	     select RMK from FLT_OPR where FLT_KEY=#fltNo# and SCH_DATE=#fltDate# and FLT_TYPE='D' 
	</select>
<!--Added By Manorama for List/Print Cargo Manifest::::Ends -->




<!-- Added by Manorama for Notoc Worksheet Report::::starts -->
<select id="splLoadExists" parameterClass="cargo.cms.export.report.bo.NotocWorksheet_539BO"
		resultClass="cargo.cms.export.report.bo.NotocWorksheet_539BO">
		select DECODE(a.AWB_NO,NULL,'',SUBSTR(a.AWB_NO,1,3)||'-'||SUBSTR(a.AWB_NO,4,8)) awbNo,
		s.uld_key uldKey,
		s.spl_code shcCode,
		s.pc pcs,		
		<!--  m.code_desc contents,-->
		awb.CONTENT contents,				
		s.pc qty,		
		s.qu unit	
		from exp_notoc_spl s 
		join exp_notoc_awb a
		on s.tr_no = a.tr_no
		join awb awb on
		awb.awb_no = a.awb_no 
		and awb.awb_date=a.awb_date
		<!--left join mast_spl_hand_code m on s.spl_code = m.code-->
		where a.awb_no = #awbNo# 
		and a.awb_date=TO_DATE(#awbDate#,'DDMONYY')		
		and a.flt_key = #fltKey#
    	and a.flt_date = TO_DATE(#fltDate#,'DDMONYY')
</select>

<select id="notocDgdExists" parameterClass="cargo.cms.export.report.bo.NotocWorksheet_539BO"
		resultClass="cargo.cms.export.report.bo.NotocWorksheet_539BO">
		select DECODE(a.AWB_NO,NULL,'',SUBSTR(a.AWB_NO,1,3)||'-'||SUBSTR(a.AWB_NO,4,8)) awbNo,
		s.uld_key uldKey, s.position position
		<!--s.spl_code shcCode,
		m.code_desc contents
		s.pc pcs,-->
		from exp_notoc_awb_uld s 
		join exp_notoc_awb a
		on s.tr_no = a.tr_no
		<!--left join mast_spl_hand_code m on s.spl_code = m.code-->
		where a.awb_no = #awbNo# 
		and a.awb_date=TO_DATE(#awbDate#,'DDMONYY')		
		and a.flt_key = #fltKey#
    	and a.flt_date = TO_DATE(#fltDate#,'DDMONYY')
</select>

<select id="notocSplLoadUldValues" parameterClass="cargo.cms.export.report.bo.NotocWorksheet_539BO"
		resultClass="cargo.cms.export.report.bo.NotocWorksheet_539BO">
		select (select STRAGG(STRINGDELIM(uld_key,' , ')) 
		FROM exp_notoc_spl WHERE a.tr_no = tr_no) listUldKey,
		a.flt_key fltKey,a.flt_date fltDate,
		awb.dest awbDest
		from exp_notoc_awb a 
		join awb awb on
		awb.AWB_NO = a.awb_no
		and awb.AWB_DATE = a.awb_date
		where a.awb_no=#awbNo#
		and a.awb_date=TO_DATE(#awbDate#,'DDMONYY')
		and a.flt_key = #fltKey#
    	and a.flt_date = TO_DATE(#fltDate#,'DDMONYY')
</select>

<select id="notocDgdUldValues" parameterClass="cargo.cms.export.report.bo.NotocWorksheet_539BO"
		resultClass="cargo.cms.export.report.bo.NotocWorksheet_539BO">
		select (select STRAGG(STRINGDELIM(uld_key,' , ')) 
		FROM exp_notoc_awb_uld WHERE a.tr_no = tr_no) listUldKey,
		a.flt_key fltKey,a.flt_date fltDate,
		awb.dest awbDest
		from exp_notoc_awb a 
		join awb awb on
		awb.AWB_NO = a.awb_no
		and awb.AWB_DATE = a.awb_date
		where a.awb_no=#awbNo#
		and a.awb_date=TO_DATE(#awbDate#,'DDMONYY')
		and a.flt_key = #fltKey#
    	and a.flt_date = TO_DATE(#fltDate#,'DDMONYY')
</select>

<select id="allUldValues" parameterClass="cargo.cms.export.report.bo.NotocWorksheet_539BO"
		resultClass="cargo.cms.export.report.bo.NotocWorksheet_539BO">
		select (select STRAGG(STRINGDELIM(uld_key,' , ')) 
		FROM exp_notoc_awb_uld WHERE a.tr_no = tr_no) listUldKey,
		a.flt_key fltKey,a.flt_date fltDate
		from exp_notoc_awb a 
		where a.awb_no=#awbNo#
		and a.awb_date=TO_DATE(#awbDate#,'DDMONYY')
		and a.flt_key = #fltKey#
    	and a.flt_date = TO_DATE(#fltDate#,'DDMONYY')
</select>

<select id="notocDgdUnid" parameterClass="cargo.cms.export.report.bo.NotocWorksheet_539BO"
		resultClass="cargo.cms.export.report.bo.NotocWorksheet_539BO">
		<![CDATA[
		select 	 lpad(ROW_NUMBER()
   		OVER (ORDER BY dgd.un_id),3, '0') rowNumber,
   		dgd.un_id unId, 
   		dgd.DRILL_CODE drillCode,
   		dgd.dpcs drillPcs,    		 		
   		decode(dgd.qty,NULL,' ',dgd.qty) qty,   		
   		decode(dgd.ti,NULL,' ',dgd.ti) ti,
   		dgd.CL_DV clDv,
   		dgd.PGP pgp,
   		dgd.CAO cao,
   		dgd.RCAT rcat,   		
   		un.LOAD_QTY pkgPcs,    		     
   		(select STRAGG(STRINGDELIM(T.spl, ','))  
      	from((select spl_code1 spl,awb_no,awb_date,UN_TR_NO from exp_dgd  where spl_code1  is not null)
        union all
        (select spl_code2 spl,awb_no,awb_date,UN_TR_NO from exp_dgd  where spl_code2  is not null)
        union all
        (select spl_code3 spl,awb_no,awb_date,UN_TR_NO from exp_dgd  where spl_code3  is not null)
        union all
        (select spl_code4 spl,awb_no,awb_date,UN_TR_NO from exp_dgd  where spl_code4  is not null)
        union all
        (select spl_code5 spl,awb_no,awb_date,UN_TR_NO from exp_dgd  where spl_code5  is not null)
        union all
        (select spl_code6 spl,awb_no,awb_date,UN_TR_NO from exp_dgd  where spl_code6  is not null)
        union all
        (select spl_code7 spl,awb_no,awb_date,UN_TR_NO from exp_dgd  where spl_code7  is not null)
        union all
        (select spl_code8 spl,awb_no,awb_date,UN_TR_NO from exp_dgd  where spl_code8  is not null)
        union all
        (select spl_code9 spl,awb_no,awb_date,UN_TR_NO  from exp_dgd  where spl_code9  is not null))T         
        where T.awb_no = awb1.AWB_NO and T.awb_date = awb1.AWB_DATE
        and T.UN_TR_NO = un.UN_TR_NO)	splFinal,                          	
		dgd.PSN psn ,
		DECODE(dgd.AWB_NO,NULL,'',SUBSTR(dgd.AWB_NO,1,3)||'-'||SUBSTR(dgd.AWB_NO,4,8)) awbNo,
		dgd.QU quValue,
		case when (select decode(h_cont_ind,'Y','Y',decode(dummy_h_cont_ind,'Y','Y',decode(bt_ind,'Y','Y','N'))) from mast_uld_type where code = substr(uld1.uld_key,1,3)) = 'Y'
	   	or (select nvl(bb_ind,'N') from uld_inventory where uld_key = uld1.uld_key) = 'Y' then 'BULK'
	   	else uld1.uld_key 
  		end uldKey,
		uld1.position position,
		awb.dest awbDest, 
		dgd.pins  pins,
		dgd.radio_active radioActive,
		dgd.hgt lengthwidtheightdimesion,
		dgd.ptyp_material typePacking,
		dgd.sr1 subRisk1,
		dgd.sr2 subRisk12,
		dgd.pkg_pcs pkgPcs1,
		dgd.shipper shipperName,
		car.shpr_addr shpAddr1,
		car.shpr_addr2 shpAddr2,
		car.shpr_addr3 shpAddr3,
		car.shpr_addr4 shpAddr4,
		car.shpr_ctry_code shpCountry,		
		car.shpr_pin_code shpPinCode,
		car.shpr_place shpCity,
		car.shpr_state_province shpState,
		car.csgne_name consigneeName,
		car.csgne_addr cneAddr1,
		car.csgne_addr2 cneAddr2,
		car.csgne_addr3 cneAddr3,
		car.csgne_addr4 cneAddr4,
		car.csgne_ctry_code cneCountry,
		car.csgne_pin_code cnePinCode,
		car.csgne_place cneCity,
		car.csgne_state_province cneState
		from exp_notoc_awb awb1
		join awb awb on
		awb.AWB_NO = awb1.awb_no
		and awb.AWB_DATE = awb1.awb_date	
	    join exp_notoc_un un on
	    un.tr_no = awb1.tr_no    
	    join exp_dgd dgd on 
	    dgd.UN_TR_NO = un.UN_TR_NO
	    AND	dgd.AWB_NO = awb1.awb_no
        and dgd.AWB_DATE = awb1.awb_date
	    join exp_notoc_awb_uld uld1 on 
        uld1.tr_no = un.tr_no and
        uld1.uld_key = un.uld_key
        left join exp_car car on
		car.AWB_NO = awb.awb_no
		and car.AWB_DATE = awb.awb_date	
  		where awb1.awb_no=#awbNo#
		and awb1.awb_date=TO_DATE(#awbDate#,'DDMONYY')
		and awb1.flt_key = #fltKey#
    	and awb1.flt_date = TO_DATE(#fltDate#,'DDMONYY')	
    	and dgd.APIO_ID is null	
    	AND dgd.op_on	is null	 
    	and un.LOAD_QTY > 0		
    	  ]]>
    	
		<!--
		select 	 lpad(ROW_NUMBER()
   		OVER (ORDER BY un_id),3, '0') rowNumber,un_id unId, dpcs drillPcs, decode(qty,NULL,' ',qty) qty, 
   		decode(ti,NULL,' ',ti) ti,CL_DV clDv,PGP pgp,CAO cao,RCAT rcat,PKG_PCS pkgPcs,
   		
		decode(SPL_CODE1,NULL,'',SPL_CODE1)||decode(SPL_CODE2,NULL,'',','||SPL_CODE2)
		||decode(SPL_CODE3,NULL,'',','||SPL_CODE3)||decode(SPL_CODE4,NULL,'',','||SPL_CODE4)
		||decode(SPL_CODE5,NULL,'',','||SPL_CODE5)||decode(SPL_CODE6,NULL,'',','||SPL_CODE6) 
		||decode(SPL_CODE7,NULL,'',','||SPL_CODE7)||decode(SPL_CODE8,NULL,'',','||SPL_CODE8)
		||decode(SPL_CODE9,NULL,'',','||SPL_CODE9) splFinal,
		
		PSN psn ,DECODE(AWB_NO,NULL,'',SUBSTR(AWB_NO,1,3)||'-'||SUBSTR(AWB_NO,4,8)) awbNo,
		QU quValue
		from exp_dgd 
  		where awb_no=#awbNo# 
  		-->
</select>



<select id="notocSplLoadULD" parameterClass="cargo.cms.export.report.bo.NotocWorksheet_539BO"
		resultClass="cargo.cms.export.report.bo.NotocWorksheet_539BO">
		<![CDATA[
		select 	 lpad(ROW_NUMBER()
   		OVER (ORDER BY spl.tr_no),3, '0') rowNumber,
		spl.PC pkgPcs,		
		spl.PC qty,
		spl.qu unit,
		awb.CONTENT contents,
		awb.dest awbDest,
		DECODE(awb1.AWB_NO,NULL,'',SUBSTR(awb1.AWB_NO,1,3)||'-'||SUBSTR(awb1.AWB_NO,4,8)) awbNo,
   		spl.spl_code splFinal,
        case when (select decode(h_cont_ind,'Y','Y',decode(dummy_h_cont_ind,'Y','Y',decode(bt_ind,'Y','Y','N'))) from mast_uld_type where code = substr(spl.uld_key,1,3)) = 'Y'
	   	or (select nvl(bb_ind,'N') from uld_inventory where uld_key = spl.uld_key) = 'Y' then 'BULK'
	   	else spl.uld_key 
  		end uldKey
        from exp_notoc_awb awb1
        join awb awb on
		awb.awb_no = awb1.awb_no 
		and awb.awb_date=awb1.awb_date
	    join exp_notoc_spl spl on
	    spl.tr_no = awb1.tr_no  	   
  		where awb1.awb_no=#awbNo#
		and awb1.awb_date=TO_DATE(#awbDate#,'DDMONYY')
		and awb1.flt_key = #fltKey#
    	and awb1.flt_date = TO_DATE(#fltDate#,'DDMONYY')	
    	and spl.PC > 0
    	]]>
</select>

<select id="apioValues" parameterClass="cargo.cms.export.report.bo.NotocWorksheet_539BO"
		resultClass="cargo.cms.export.report.bo.NotocWorksheet_539BO">
		select distinct un.apio_id finalApioId ,
		awb.dest awbDest
		from exp_notoc_awb awb1
		join awb awb on
		awb.AWB_NO = awb1.awb_no
		and awb.AWB_DATE = awb1.awb_date
	    join exp_notoc_un un on
	    un.tr_no = awb1.tr_no    
	    join exp_dgd dgd on 
	    dgd.UN_TR_NO = un.UN_TR_NO  
	    AND	dgd.AWB_NO = awb1.awb_no
        and dgd.AWB_DATE = awb1.awb_date
  		where awb1.awb_no=#awbNo#
		and awb1.awb_date=TO_DATE(#awbDate#,'DDMONYY')
		and awb1.flt_key = #fltKey#
    	and awb1.flt_date = TO_DATE(#fltDate#,'DDMONYY')
    	and un.apio_id is not null	
    	and dgd.apio_id is not null
		
	<!-- 
	select distinct apio_id finalApioId from exp_dgd where awb_no = #awbNo#
	and apio_id is not null  		-->
</select>

<select id="apioUnid" parameterClass="cargo.cms.export.report.bo.NotocWorksheet_539BO"
		resultClass="cargo.cms.export.report.bo.NotocWorksheet_539BO">
	<!-- select lpad(ROW_NUMBER()
   OVER (ORDER BY d.APIO_ID),3, '0') rowNumber,lpad(ROW_NUMBER()
   OVER (PARTITION BY d.APIO_ID ORDER BY d.un_id),3, '0') AS finalApioOrOp,
             d.un_id unId, d.dpcs drillPcs,              
             decode(d.qty,NULL,'',d.qty) qty,              
             decode(d.ti,NULL,'',d.ti) ti,d.CL_DV clDv,d.PGP pgp,d.CAO cao,RCAT rcat,
                        d.PKG_PCS pkgPcs,d.APIO_ID apioID, DECODE(d.AWB_NO,NULL,'',SUBSTR(d.AWB_NO,1,3)||'-'||SUBSTR(d.AWB_NO,4,8)) awbNo,                     
                       decode(SPL_CODE1,NULL,'',SPL_CODE1)||decode(SPL_CODE2,NULL,'',','||SPL_CODE2)
                        ||decode(SPL_CODE3,NULL,'',','||SPL_CODE3)||decode(SPL_CODE4,NULL,'',','||SPL_CODE4)
                        ||decode(SPL_CODE5,NULL,'',','||SPL_CODE5)||decode(SPL_CODE6,NULL,'',','||SPL_CODE6) 
                        ||decode(SPL_CODE7,NULL,'',','||SPL_CODE7)||decode(SPL_CODE8,NULL,'',','||SPL_CODE8)
                        ||decode(SPL_CODE9,NULL,'',','||SPL_CODE9) splFinal,PSN psn,d.QU quValue
                        from exp_dgd d 
                       where d.awb_no=#awbNo#
                       and d.APIO_ID is not null   		-->	
                 
       <![CDATA[                       
        select DISTINCT
        dgd.apio_id apioID,dgd.op_on opId, decode(nvl(dgd.apio_id,'N'),'N',2,1) ord ,
        dgd.un_id unId, 
        dgd.DRILL_CODE drillCode,
        dgd.dpcs drillPcs,                            
        decode(dgd.qty,NULL,'',dgd.qty) qty,         
        awb.dest awbDest,             
        decode(dgd.ti,NULL,'',dgd.ti) ti,
        dgd.CL_DV clDv,dgd.PGP pgp,dgd.CAO cao,dgd.RCAT rcat,
        un.LOAD_QTY pkgPcs,    	        
        DECODE(dgd.AWB_NO,NULL,'',SUBSTR(dgd.AWB_NO,1,3)||'-'||SUBSTR(dgd.AWB_NO,4,8)) awbNo, 
        to_char(dgd.awb_date,'DDMONYY') awbDate,		
   		(select STRAGG(STRINGDELIM(T.spl, ','))  
      from((select spl_code1 spl,awb_no,awb_date,UN_TR_NO,APIO_ID from exp_dgd  where spl_code1  is not null)
        union all
        (select spl_code2 spl,awb_no,awb_date,UN_TR_NO,APIO_ID from exp_dgd  where spl_code2  is not null)
        union all
        (select spl_code3 spl,awb_no,awb_date,UN_TR_NO,APIO_ID from exp_dgd  where spl_code3  is not null)
        union all
        (select spl_code4 spl,awb_no,awb_date,UN_TR_NO,APIO_ID from exp_dgd  where spl_code4  is not null)
        union all
        (select spl_code5 spl,awb_no,awb_date,UN_TR_NO,APIO_ID from exp_dgd  where spl_code5  is not null)
        union all
        (select spl_code6 spl,awb_no,awb_date,UN_TR_NO,APIO_ID from exp_dgd  where spl_code6  is not null)
        union all
        (select spl_code7 spl,awb_no,awb_date,UN_TR_NO,APIO_ID from exp_dgd  where spl_code7  is not null)
        union all
        (select spl_code8 spl,awb_no,awb_date,UN_TR_NO,APIO_ID from exp_dgd  where spl_code8  is not null)
        union all
        (select spl_code9 spl,awb_no,awb_date,UN_TR_NO,APIO_ID  from exp_dgd  where spl_code9  is not null) )T          
        where T.awb_no = awb1.AWB_NO and T.awb_date = awb1.AWB_DATE
        and T.UN_TR_NO = un.UN_TR_NO
        AND T.APIO_ID is not null)	splFinal,                   	
		dgd.PSN psn ,DECODE(dgd.AWB_NO,NULL,'',SUBSTR(dgd.AWB_NO,1,3)||'-'||SUBSTR(dgd.AWB_NO,4,8)) awbNo,
		dgd.QU quValue,
		uld1.uld_key uldKey,
		uld1.POSITION position
		from exp_notoc_awb awb1
		join awb awb on
		awb.AWB_NO = awb1.awb_no
		and awb.AWB_DATE = awb1.awb_date
	    join exp_notoc_un un on
	    un.tr_no = awb1.tr_no    
	    join exp_dgd dgd on 
	    dgd.UN_TR_NO = un.UN_TR_NO
	    AND	dgd.AWB_NO = awb1.awb_no
        and dgd.AWB_DATE = awb1.awb_date
	    join exp_notoc_awb_uld uld1 on 
        uld1.tr_no = un.tr_no and
        uld1.uld_key = un.uld_key  
  		where awb1.awb_no=#awbNo#
		and awb1.awb_date=TO_DATE(#awbDate#,'DDMONYY')
		and awb1.flt_key = #fltKey#
    	and awb1.flt_date = TO_DATE(#fltDate#,'DDMONYY')	
    	and un.LOAD_QTY > 0
    	 order by ord,dgd.apio_id,dgd.op_on
    	 ]]>
</select>

<select id="apioPkgvalues" parameterClass="cargo.cms.export.report.bo.NotocWorksheet_539BO"
		resultClass="cargo.cms.export.report.bo.NotocWorksheet_539BO">				
		select dgd.apio_pkg||' ' || dgd.apio_ptyp_material||' ' ||UPPER(dgd.APIO_PTYP_TYPE) ptypeMat,dgd.apio_pkg pkgNos,
		awb.dest awbDest
		from exp_notoc_awb awb1
		join awb awb on
		awb.AWB_NO = awb1.awb_no
		and awb.AWB_DATE = awb1.awb_date
	    join exp_notoc_un un on
	    un.tr_no = awb1.tr_no    
	    join EXP_DGD_APIO dgd on 
	    dgd.APIO_ID = un.APIO_ID
		and dgd.AWB_NO = awb1.awb_no
		and dgd.AWB_DATE = awb1.awb_date   
  		where awb1.awb_no=#awbNo1#
		and awb1.awb_date=TO_DATE(#awbDate#,'DDMONYY')
		and awb1.flt_key = #fltKey#
    	and awb1.flt_date = TO_DATE(#fltDate#,'DDMONYY')       	
    	<!-- 
    	    	select 
   decode(a.apio_pkg,null,'',a.apio_pkg)||' ' || decode(a.apio_ptyp_material,null,'',a.apio_ptyp_material)||' ' ||decode(UPPER(a.APIO_PTYP_TYPE),null,'',UPPER(a.APIO_PTYP_TYPE)) ptypeMat,
   decode(a.apio_pkg,null,'',a.apio_pkg) pkgNos
                    
                 from         EXP_DGD_APIO a
                        where awb_no=#awbNo# 	-->              
</select>

<select id="opValues" parameterClass="cargo.cms.export.report.bo.NotocWorksheet_539BO"
		resultClass="cargo.cms.export.report.bo.NotocWorksheet_539BO">		
		select distinct un.OVERPACK_ID finalOpId,
		awb.dest awbDest
		from exp_notoc_awb awb1
		join awb awb on
		awb.AWB_NO = awb1.awb_no
		and awb.AWB_DATE = awb1.awb_date
	    join exp_notoc_un un on
	    un.tr_no = awb1.tr_no    
	    join exp_dgd dgd on 
	    dgd.UN_TR_NO = un.UN_TR_NO  
	    and dgd.AWB_NO = awb1.awb_no
		and dgd.AWB_DATE = awb1.awb_date   
  		where awb1.awb_no=#awbNo#
		and awb1.awb_date=TO_DATE(#awbDate#,'DDMONYY')
		and awb1.flt_key = #fltKey#
    	and awb1.flt_date = TO_DATE(#fltDate#,'DDMONYY')
    	and (un.OVERPACK_ID is not null	or dgd.OVERPACK_ID is not null)
    			
	<!-- 
	select distinct op_on finalOpId from exp_dgd where awb_no = #awbNo#
	and op_on is not null -->	
</select>

<select id="opUnid" parameterClass="cargo.cms.export.report.bo.NotocWorksheet_539BO"
		resultClass="cargo.cms.export.report.bo.NotocWorksheet_539BO">	
		<![CDATA[ 
		select  lpad(ROW_NUMBER()
   		OVER (ORDER BY dgd.OP_ON),3, '0') rowNumber,
        lpad(ROW_NUMBER()
   		OVER (PARTITION BY dgd.OP_ON ORDER BY dgd.un_id),3, '0') AS finalApioOrOp,dgd.un_id unId, 
   		dgd.DRILL_CODE drillCode,
   		dgd.dpcs drillPcs,         				
   		decode(dgd.qty,NULL,'',dgd.qty) qty,    		
   		decode(dgd.ti,NULL,'',dgd.ti) ti,
   		dgd.CL_DV clDv,dgd.PGP pgp,dgd.CAO cao,dgd.RCAT rcat,
   		un.LOAD_QTY pkgPcs,   		
		dgd.OP_ON opId, DECODE(dgd.AWB_NO,NULL,'',SUBSTR(dgd.AWB_NO,1,3)||'-'||SUBSTR(dgd.AWB_NO,4,8)) awbNo, 		
   	  	(select STRAGG(STRINGDELIM(T.spl, ','))  
        from((select spl_code1 spl,awb_no,awb_date,UN_TR_NO,OP_ON from exp_dgd  where spl_code1  is not null)
        union all
        (select spl_code2 spl,awb_no,awb_date,UN_TR_NO,OP_ON from exp_dgd  where spl_code2  is not null)
        union all
        (select spl_code3 spl,awb_no,awb_date,UN_TR_NO,OP_ON from exp_dgd  where spl_code3  is not null)
        union all
        (select spl_code4 spl,awb_no,awb_date,UN_TR_NO,OP_ON from exp_dgd  where spl_code4  is not null)
        union all
        (select spl_code5 spl,awb_no,awb_date,UN_TR_NO,OP_ON from exp_dgd  where spl_code5  is not null)
        union all
        (select spl_code6 spl,awb_no,awb_date,UN_TR_NO,OP_ON from exp_dgd  where spl_code6  is not null)
        union all
        (select spl_code7 spl,awb_no,awb_date,UN_TR_NO,OP_ON from exp_dgd  where spl_code7  is not null)
        union all
        (select spl_code8 spl,awb_no,awb_date,UN_TR_NO,OP_ON from exp_dgd  where spl_code8  is not null)
        union all
        (select spl_code9 spl,awb_no,awb_date,UN_TR_NO,OP_ON  from exp_dgd  where spl_code9  is not null) )T        
        where T.awb_no = awb1.AWB_NO and T.awb_date = awb1.AWB_DATE
        and T.UN_TR_NO = un.UN_TR_NO
        AND T.OP_ON is not null)	splFinal,                	
		dgd.PSN psn ,DECODE(dgd.AWB_NO,NULL,'',SUBSTR(dgd.AWB_NO,1,3)||'-'||SUBSTR(dgd.AWB_NO,4,8)) awbNo,
		dgd.QU quValue,
		uld1.uld_key uldKey,
		uld1.POSITION position,
		awb.dest awbDest
		from exp_notoc_awb awb1
		join awb awb on
		awb.AWB_NO = awb1.awb_no
		and awb.AWB_DATE = awb1.awb_date
	    join exp_notoc_un un on
	    un.tr_no = awb1.tr_no    
	    join exp_dgd dgd on 
	    dgd.UN_TR_NO = un.UN_TR_NO
	    AND	dgd.AWB_NO = awb1.awb_no
        and dgd.AWB_DATE = awb1.awb_date
	    join exp_notoc_awb_uld uld1 on 
        uld1.tr_no = un.tr_no and
        uld1.uld_key = un.uld_key 
  		where awb1.awb_no=#awbNo#
		and awb1.awb_date=TO_DATE(#awbDate#,'DDMONYY')
		and awb1.flt_key = #fltKey#
    	and awb1.flt_date = TO_DATE(#fltDate#,'DDMONYY')	    	
    	and un.OVERPACK_ID is not null	    	
      	and un.LOAD_QTY > 0
      	 ]]>		
		<!-- 
	   	select  lpad(ROW_NUMBER()
   OVER (ORDER BY d.OP_ON),3, '0') rowNumber,
                          lpad(ROW_NUMBER()
   OVER (PARTITION BY d.OP_ON ORDER BY d.un_id),3, '0') AS finalApioOrOp,d.un_id unId, d.dpcs drillPcs, 
   decode(d.qty,NULL,'',d.qty) qty, decode(d.ti,NULL,'',d.ti) ti,d.CL_DV clDv,d.PGP pgp,d.CAO cao,RCAT rcat,
		d.PKG_PCS pkgPcs,d.OP_ON opId, DECODE(d.AWB_NO,NULL,'',SUBSTR(d.AWB_NO,1,3)||'-'||SUBSTR(d.AWB_NO,4,8)) awbNo, 
		
		decode(SPL_CODE1,NULL,'',SPL_CODE1)||decode(SPL_CODE2,NULL,'',','||SPL_CODE2)
		||decode(SPL_CODE3,NULL,'',','||SPL_CODE3)||decode(SPL_CODE4,NULL,'',','||SPL_CODE4)
		||decode(SPL_CODE5,NULL,'',','||SPL_CODE5)||decode(SPL_CODE6,NULL,'',','||SPL_CODE6) 
		||decode(SPL_CODE7,NULL,'',','||SPL_CODE7)||decode(SPL_CODE8,NULL,'',','||SPL_CODE8)
		||decode(SPL_CODE9,NULL,'',','||SPL_CODE9) splFinal,PSN psn,d.QU quValue
		from exp_dgd d 
		where d.awb_no=#awbNo#
		and d.OP_ON is not null	-->	
</select>

<select id="opPkgValues" parameterClass="cargo.cms.export.report.bo.NotocWorksheet_539BO"
		resultClass="cargo.cms.export.report.bo.NotocWorksheet_539BO">		
		select  
		a.OVERPACK_PKG||' ' || a.OVERPACK_PTYP_MATERIAL||' '|| UPPER(a.OVERPACK_PTYP_TYPE) ptypeMat,
    	ap.apio_pkg pkgNos,
    	awb.dest awbDest
		from exp_notoc_awb awb1
	    join exp_notoc_un un on
	    un.tr_no = awb1.tr_no    
	    join exp_dgd dgd on 
	    dgd.UN_TR_NO = un.UN_TR_NO  
	    join EXP_DGD_OP a	on    
	    a.OVERPACK_ID = un.OVERPACK_ID
		and a.AWB_NO = awb1.awb_no
		and a.AWB_DATE = awb1.awb_date
		join awb awb on
		awb.AWB_NO = a.awb_no
		and awb.AWB_DATE = a.awb_date
		left join EXP_DGD_APIO ap on 
		ap.awb_no = a.awb_no 
		and ap.awb_date = a.awb_date
		and ap.APIO_ID = un.APIO_ID
  		where awb1.awb_no=#awbNo1#
		and awb1.awb_date=TO_DATE(#awbDate#,'DDMONYY')
		and awb1.flt_key = #fltKey#
    	and awb1.flt_date = TO_DATE(#fltDate#,'DDMONYY')
    	and un.OVERPACK_ID is not null	
    	and a.OVERPACK_ID is not null
    			
		<!-- 
		 			select  
  decode(a.OVERPACK_PKG,null,'',a.OVERPACK_PKG)||' ' || decode(a.OVERPACK_PTYP_MATERIAL,null,'',a.OVERPACK_PTYP_MATERIAL)||' '|| decode(UPPER(a.OVERPACK_PTYP_TYPE),null,'',UPPER(a.OVERPACK_PTYP_TYPE)) ptypeMat,
  decode(ap.apio_pkg,null,'',ap.apio_pkg) pkgNos
  from EXP_DGD_OP a 
		left join EXP_DGD_APIO ap on ap.awb_no = a.awb_no and ap.awb_date = a.awb_date     
    	where ap.awb_no=#awbNo#-->
</select>
<!-- Added by Manorama for Notoc Worksheet Report::::ends -->





	<select id="listtransfersearchBydate_576"
		parameterClass="cargo.cms.export.report.bo.ListTransferCargo_576ReptBO"
		resultClass="cargo.cms.export.report.bo.ListTransferCargo_576ReptBO">
		SELECT * FROM (select rcl_no as rclNo, rcl_no as rclNo1, substr(awb_no, 1,
		3)||'-'||substr(awb_no, 4) as awbNoDisplay, awb_no as awbNo, ppk_type
		as pkgType,
		uld_key as uldNo, ref_trm_no as trmNo, trans_carr_code trnsfCarr, carr_code
		as carr, rcl_pcs as pc, TRIM(TO_CHAR(NVL(rcl_wt,0), '9999999990D9'))
		as wt, to_char(rcl_date, 'DDMONYY HH24:MI') as recvDate,
		pkg_exp_val.get_exp_awb_cc_code(awb_no) ccCode,
		decode(status, 'V', 'Y', 'N') as voidInd, decode(accpt_mode,'LIT', 'Local
		Inter-Terminal', 'TIT', 'Transhipment Inter Terminal', 'LDM', 'Dummy')
		as transType
		from exp_rcl_hd where to_char(rcl_date, 'DDMONYY') between
		to_date(#sdateFrom#, 'DDMONYY') and to_date(#sdateTo#, 'DDMONYY')
		and accpt_mode in ('LIT', 'TIT', 'LDM')
		<dynamic>
			<isNotEmpty property="scarrCode">
				and carr_code=#scarrCode#
			</isNotEmpty>
		</dynamic>
		<isNotEmpty property="loginCarrier">
				   AND ( carr_code = #loginCarrier#
                        OR  carr_code IN (SELECT CARR_CODE FROM MAST_CARR_GRP 
                        WHERE GRP_CARR_CODE  = #loginCarrier#))             
		</isNotEmpty>
    UNION ALL
    select TRF_NO as rclNo, TRF_NO as rclNo1, substr(awb_no, 1,
		3)||'-'||substr(awb_no, 4) as awbNoDisplay, awb_no as awbNo, ppk_type
		as pkgType,
		uld_key as uldNo, ref_trm_no as trmNo, trans_carr_code trnsfCarr, carr_code
		as carr, rcl_pcs as pc, TRIM(TO_CHAR(NVL(rcl_wt,0), '9999999990D9'))
		as wt, to_char(TRF_DATE, 'DDMONYY HH24:MI') as recvDate,
		pkg_exp_val.get_exp_awb_cc_code(awb_no) ccCode,
		decode(status, 'V', 'Y', 'N') as voidInd, decode(accpt_mode,'LIT', 'Local
		Inter-Terminal', 'TIT', 'Transhipment Inter Terminal', 'LDM', 'Dummy')
		as transType
		from TRF_ACCEPT_HD where to_char(TRF_DATE, 'DDMONYY') between
		to_date(#sdateFrom#, 'DDMONYY') and to_date(#sdateTo#, 'DDMONYY')
		and accpt_mode in ('LIT', 'TIT', 'LDM')
		<dynamic>
			<isNotEmpty property="scarrCode">
				and carr_code=#scarrCode#
			</isNotEmpty>
		</dynamic>
		<isNotEmpty property="loginCarrier">
				   AND ( carr_code = #loginCarrier#
                        OR  carr_code IN (SELECT CARR_CODE FROM MAST_CARR_GRP 
                        WHERE GRP_CARR_CODE  = #loginCarrier#))             
		</isNotEmpty>)
		order by recvDate desc
	</select>
	
	<select id="listtransfersearchByAWB_576"
		parameterClass="cargo.cms.export.report.bo.ListTransferCargo_576ReptBO"
		resultClass="cargo.cms.export.report.bo.ListTransferCargo_576ReptBO">
		SELECT * FROM (SELECT RCL_NO as rclNo, RCL_NO as rclNo1, CR_USER_ID as staffId,
		decode(accpt_mode,'LIT', 'Local Inter-Terminal', 'TIT', 'Transhipment
		Inter Terminal', 'LDM', 'Dummy') as transType,
		CONCAT(CONCAT(SUBSTR(AWB_NO,0,3),'-'),SUBSTR(AWB_NO,4)) as
		awbNoDisplay, AWB_NO as awbNo, PPK_TYPE as pkgType,
		ULD_KEY as uldNo, ref_trm_no as trmNo, TRANS_CARR_CODE trnsfCarr,
		CARR_CODE as carr, RCL_PCS as pc, TRIM(TO_CHAR(NVL(rcl_wt,0), '9999999990D9'))
		as wt,
		to_char(RCL_DATE,'DDMONYY HH24:MI') as recvDate,
		pkg_exp_val.get_exp_awb_cc_code(awb_no) ccCode,
		DECODE(STATUS, 'V','Y', 'N') as voidInd
		FROM EXP_RCL_HD WHERE AWB_NO = #sawbNo# and accpt_mode in ('LIT', 'TIT',
		'LDM')
		<isNotEmpty property="loginCarrier">
				   AND ( carr_code = #loginCarrier#
                        OR  carr_code IN (SELECT CARR_CODE FROM MAST_CARR_GRP 
                        WHERE GRP_CARR_CODE  = #loginCarrier#))             
		</isNotEmpty>
    UNION ALL
    SELECT TRF_NO as rclNo, TRF_NO as rclNo1, CR_USER_ID as staffId,
		decode(accpt_mode,'LIT', 'Local Inter-Terminal', 'TIT', 'Transhipment
		Inter Terminal', 'LDM', 'Dummy') as transType,
		CONCAT(CONCAT(SUBSTR(AWB_NO,0,3),'-'),SUBSTR(AWB_NO,4)) as
		awbNoDisplay, AWB_NO as awbNo, PPK_TYPE as pkgType,
		ULD_KEY as uldNo, ref_trm_no as trmNo, TRANS_CARR_CODE trnsfCarr,
		CARR_CODE as carr, RCL_PCS as pc, TRIM(TO_CHAR(NVL(rcl_wt,0), '9999999990D9'))
		as wt,
		to_char(TRF_DATE,'DDMONYY HH24:MI') as recvDate,
		pkg_exp_val.get_exp_awb_cc_code(awb_no) ccCode,
		DECODE(STATUS, 'V','Y', 'N') as voidInd
		FROM TRF_ACCEPT_HD WHERE AWB_NO = #sawbNo# and accpt_mode in ('LIT', 'TIT',
		'LDM')
		<isNotEmpty property="loginCarrier">
				   AND ( carr_code = #loginCarrier#
                        OR  carr_code IN (SELECT CARR_CODE FROM MAST_CARR_GRP 
                        WHERE GRP_CARR_CODE  = #loginCarrier#))             
		</isNotEmpty>) order by recvDate desc  
	</select>

		<select id="listtransfersearchByULD_576"
		parameterClass="cargo.cms.export.report.bo.ListTransferCargo_576ReptBO"
		resultClass="cargo.cms.export.report.bo.ListTransferCargo_576ReptBO">
		SELECT * FROM (SELECT RCL_NO as rclNo, RCL_NO as rclNo1, CR_USER_ID as staffId,
		CONCAT(CONCAT(SUBSTR(AWB_NO,0,3),'-'),SUBSTR(AWB_NO,4)) as
		awbNoDisplay,
		decode(accpt_mode,'LIT', 'Local Inter-Terminal', 'TIT', 'Transhipment Inter Terminal', 'LDM',
		'Dummy') as transType,
		AWB_NO as awbNo, PPK_TYPE as pkgType, ULD_KEY as uldNo, ref_trm_no as trmNo,
		TRANS_CARR_CODE trnsfCarr, CARR_CODE as carr, RCL_PCS as pc,
		TRIM(TO_CHAR(NVL(rcl_wt,0), '9999999990D9')) as wt,
		to_char(RCL_DATE,'DDMONYY HH24:MI') as recvDate,
		pkg_exp_val.get_exp_awb_cc_code(awb_no) ccCode,
		DECODE(STATUS, 'V','Y', 'N') as voidInd
		FROM EXP_RCL_HD WHERE ULD_KEY = #suldNo# and accpt_mode in ('LIT', 'TIT',
		'LDM')
		<isNotEmpty property="loginCarrier">
				   AND ( carr_code = #loginCarrier#
                        OR  carr_code IN (SELECT CARR_CODE FROM MAST_CARR_GRP 
                        WHERE GRP_CARR_CODE  = #loginCarrier#))             
		</isNotEmpty>
    UNION ALL
    SELECT TRF_NO as rclNo, TRF_NO as rclNo1, CR_USER_ID as staffId,
		CONCAT(CONCAT(SUBSTR(AWB_NO,0,3),'-'),SUBSTR(AWB_NO,4)) as
		awbNoDisplay,
		decode(accpt_mode,'LIT', 'Local Inter-Terminal', 'TIT', 'Transhipment Inter Terminal', 'LDM',
		'Dummy') as transType,
		AWB_NO as awbNo, PPK_TYPE as pkgType, ULD_KEY as uldNo, ref_trm_no as trmNo,
		TRANS_CARR_CODE trnsfCarr, CARR_CODE as carr, RCL_PCS as pc,
		TRIM(TO_CHAR(NVL(rcl_wt,0), '9999999990D9')) as wt,
		to_char(TRF_DATE,'DDMONYY HH24:MI') as recvDate,
		pkg_exp_val.get_exp_awb_cc_code(awb_no) ccCode,
		DECODE(STATUS, 'V','Y', 'N') as voidInd
		FROM TRF_ACCEPT_HD WHERE ULD_KEY = #suldNo# and accpt_mode in ('LIT', 'TIT',
		'LDM')
		<isNotEmpty property="loginCarrier">
				   AND ( carr_code = #loginCarrier#
                        OR  carr_code IN (SELECT CARR_CODE FROM MAST_CARR_GRP 
                        WHERE GRP_CARR_CODE  = #loginCarrier#))             
		</isNotEmpty>) order by recvDate desc  
	</select>
	
	<select id="getAwbTypeFromAWbStk" parameterClass="java.lang.String" resultClass="java.lang.String">
		select code_desc as awbType from mast_code_dtl where code = #PARAM# and code_type = 'AWB_STK_TYPE'
	</select>

	<select id="getAwbStockAvailableList_142" parameterClass="cargo.cms.export.report.bo.AWBStockListRept_142BO"
		resultClass="cargo.cms.export.report.bo.AWBStockListRept_142BO">
		SELECT
		a.TR_NO AS trNo,
		a.CARR_CODE AS carrier,
		a.AWB_NO_FROM AS awbNoFrom,
		(select code_desc from mast_code_dtl where code = a.awb_type and code_type = 'AWB_STK_TYPE' ) as awbType,
		substr(a.AWB_NO_FROM,0,3) as awbPfxFrom,
		substr(a.AWB_NO_FROM,3) as awbSfxFrom,
		a.AWB_NO_TO AS awbNoTo,
		substr(a.AWB_NO_TO,0,3) as awbPfxTo,
		substr(a.AWB_NO_TO,3) as awbSfxTo,
		a.RMK AS remarks,
		(select to_char(count(*)) from exp_awb_stk_dtl b where a.tr_no = b.tr_no) AS
		totalAWBs,
		a.AWB_NO_RESERVED AS reserved,
		a.AWB_NO_AVAILABLE AS
		available,
		a.CR_USER_ID AS crUserId,
		TO_CHAR(a.CR_DATE,'DDMONYY') AS
		crDate
		FROM EXP_AWB_STK a
		WHERE a.carr_code = nvl(#scarrier#,
		a.carr_code)
		and a.awb_type = nvl(#sawbType#, a.awb_type)
		and
		a.AWB_NO_AVAILABLE >0
		<dynamic>
			<isNotEmpty prepend="AND" property="sawbNoFrom">
						<![CDATA[ #sawbNoFrom# <= a.AWB_NO_FROM ]]>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sawbNoTo">
						<![CDATA[ #sawbNoTo#  >= a.AWB_NO_TO ]]>
			</isNotEmpty>
		</dynamic>
		 <isNotEmpty property="loginCarrier">
            AND   (a.CARR_CODE = #loginCarrier# 
            OR a.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP 
            WHERE GRP_CARR_CODE     = #loginCarrier#))                                          
        </isNotEmpty>
		ORDER BY a.AWB_NO_FROM
	</select>
	<select id="getAwbStockList_142" parameterClass="cargo.cms.export.report.bo.AWBStockListRept_142BO"
		resultClass="cargo.cms.export.report.bo.AWBStockListRept_142BO">
		SELECT
		a.TR_NO AS trNo,
		a.CARR_CODE AS carrier,
		a.AWB_NO_FROM AS awbNoFrom,
		(select code_desc from mast_code_dtl where code = a.awb_type and code_type = 'AWB_STK_TYPE' ) as awbType,
		substr(a.AWB_NO_FROM,0,3) as awbPfxFrom,
		substr(a.AWB_NO_FROM,3) as awbSfxFrom,
		a.AWB_NO_TO AS awbNoTo,
		substr(a.AWB_NO_TO,0,3) as awbPfxTo,
		substr(a.AWB_NO_TO,3) as awbSfxTo,
		a.RMK AS remarks,
		(select to_char(count(*)) from exp_awb_stk_dtl b where a.tr_no = b.tr_no) AS
		totalAWBs,
		a.AWB_NO_RESERVED AS reserved,
		a.AWB_NO_AVAILABLE AS available,
		a.CR_USER_ID AS crUserId,
		TO_CHAR(a.CR_DATE,'DDMONYY') AS crDate
		FROM EXP_AWB_STK a
		WHERE a.carr_code = nvl(#scarrier#,
		a.carr_code)
		and a.awb_type = nvl(#sawbType#, a.awb_type)
		<dynamic>
			<isNotEmpty prepend="AND" property="sawbNoFrom">
						<![CDATA[ #sawbNoFrom# >= a.AWB_NO_FROM ]]>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="sawbNoTo">
						<![CDATA[ #sawbNoTo#  <= a.AWB_NO_TO ]]>
			</isNotEmpty>
		</dynamic>
		<isEmpty property="carrier">
			 <isNotEmpty property="loginCarrier">
	                                    AND   (a.CARR_CODE = #loginCarrier# 
	                                    OR a.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP 
	                                    WHERE GRP_CARR_CODE     = #loginCarrier#))                                          
          	</isNotEmpty> 
       </isEmpty>  
		ORDER BY a.AWB_NO_FROM
	</select>
	<select id="getAwbBookingAvailaleList_141" parameterClass="cargo.cms.export.report.bo.AWBStockListRept_142BO"
		resultClass="cargo.cms.export.report.bo.AWBBookingListRept_141BO">
	<![CDATA[
		select 
			t2.tr_no AS trNo,
			t2.awb_no AS awbNo,
			substr(t2.awb_no,0,3) as awbPfx,
			substr(t2.awb_no,3) as awbSfx,
			'' AS shipperName,
			'' AS shipperTel,
			'' AS shipperCName,
			'' AS remarks,
			(select code_desc from mast_code_dtl where code = t1.awb_type and code_type = 'AWB_STK_TYPE' ) as awbType,
			'Available' AS status,
			DECODE(A.car_yn,'Y', 'Y',' ') AS car,
			'' AS crUserId,            
			TO_CHAR('', 'DDMONYY') AS crDate
		from   exp_awb_stk t1, exp_awb_stk_dtl t2
		LEFT JOIN AWB A ON A.AWB_NO = t2.AWB_NO
		where  t1.tr_no = t2.tr_no
		and    t1.awb_type = nvl(#sawbType#, t1.awb_type)
		and    t1.carr_code = nvl(#scarrier#, t1.carr_code)
		and    t2.awb_no >= nvl(#sawbNoFrom#, t2.awb_no)
		and    t2.awb_no <= nvl(#sawbNoTo#, t2.awb_no)
    	and    t2.status =nvl('OPEN', t2.STATUS)
		]]>
		<isNotEmpty property="loginCarrier">
           AND   (t1.CARR_CODE = #loginCarrier# 
           OR t1.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP 
           WHERE GRP_CARR_CODE     = #loginCarrier#))                                          
        </isNotEmpty>
		ORDER BY t2.awb_no
	</select>
	<select id="getAwbBookingList_141" parameterClass="cargo.cms.export.report.bo.AWBStockListRept_142BO"
		resultClass="cargo.cms.export.report.bo.AWBBookingListRept_141BO">
	<![CDATA[
		select 
			t3.tr_no AS trNo,
			t2.awb_no AS awbNo,
			substr(t2.awb_no,0,3) as awbPfx,
			substr(t2.awb_no,3) as awbSfx,
			t3.shipper_name AS shipperName,
			t3.shipper_tel AS shipperTel,
			t3.shipper_cname AS shipperCName,
			t3.rmk AS remarks,
			(select code_desc from mast_code_dtl where code = t1.awb_type and code_type = 'AWB_STK_TYPE' ) as awbType,
			t2.status AS status,
			DECODE(A.car_yn,'Y', 'Y',' ') AS car,
			t3.cr_user_id AS crUserId,            
			TO_CHAR(t3.cr_date, 'DDMONYY') AS crDate
		from   exp_awb_stk t1, exp_awb_stk_dtl t2, exp_awb_booking t3
		LEFT JOIN AWB A ON A.AWB_NO = t3.AWB_NO
		where  t1.tr_no = t2.tr_no
		and    t2.tr_no = t3.tr_no
		and    t2.awb_no = t3.awb_no
		and    t1.awb_type = nvl(#sawbType#, t1.awb_type)
		and    t1.carr_code = nvl(#scarrier#, t1.carr_code)
		and    t2.awb_no >= nvl(#sawbNoFrom#, t2.awb_no)
		and    t2.awb_no <= nvl(#sawbNoTo#, t2.awb_no)
		and    t2.status = nvl(upper(#sstatus#), t2.status)
		]]>
		<isNotEmpty property="loginCarrier">
               AND   (t3.CARR_CODE = #loginCarrier# 
               OR t3.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP 
               WHERE GRP_CARR_CODE     = #loginCarrier#))                                          
      </isNotEmpty>
		ORDER BY t2.awb_no
	</select>

	<select id="getAwbReservationList_578" parameterClass="cargo.cms.export.report.bo.AWBBookingListRept_578BO"
		resultClass="cargo.cms.export.report.bo.AWBBookingListRept_578BO">
		select
		t3.tr_no AS trNo,
		t2.awb_no AS awbNo,
		substr(t2.awb_no,0,3) as awbPfx,
		substr(t2.awb_no,3) as awbSfx,
		t3.CARR_CODE as carrCode,
		t3.shipper_name AS shipperName,
		t3.shipper_tel AS shipperTel,
		t3.shipper_cname AS shipperCName,
		t3.rmk AS remarks,
		(select code_desc from mast_code_dtl where code = t1.awb_type and code_type = 'AWB_STK_TYPE' ) as awbType,
		t2.status AS status,
		DECODE(A.car_yn,'Y', 'Y',' ') AS car,
		t3.cr_user_id AS crUserId,
		t3.orig as org,
		t3.dest as dest,
		t3.CONTENT as content,
		t3.spl_code1 as shc,
		TO_CHAR(t3.cr_date, 'DDMONYY') AS crDate
		from exp_awb_stk t1, exp_awb_stk_dtl t2, exp_awb_booking t3
		LEFT JOIN AWB A ON A.AWB_NO = t3.AWB_NO
		where t1.tr_no = t2.tr_no
		and t2.tr_no = t3.tr_no
		and t2.awb_no = t3.awb_no
		and t1.awb_type = nvl(#sawbType#, t1.awb_type)
		and t1.carr_code = nvl(#scarrier#, t1.carr_code)
		and t2.awb_no = nvl(#sawbNo#, t2.awb_no)
		and t2.status = nvl(upper(#sstatus#), t2.status)
		ORDER BY t2.awb_no
</select>
	<select id="getAwbReservationForCAR_578" parameterClass="cargo.cms.export.report.bo.AWBBookingListRept_578BO"
		resultClass="cargo.cms.export.report.bo.AWBBookingListRept_578BO">
		select
		t3.tr_no AS trNo,
		t2.awb_no AS awbNo,
		substr(t2.awb_no,0,3) as awbPfx,
		substr(t2.awb_no,3) as awbSfx,
		t3.CARR_CODE as carrCode,
		t3.shipper_name AS shipperName,
		t3.shipper_tel AS shipperTel,
		t3.shipper_cname AS shipperCName,
		t3.rmk AS remarks,
		(select code_desc from mast_code_dtl where code = t1.awb_type and code_type = 'AWB_STK_TYPE' ) as awbType,
		t2.status AS status,
		DECODE(A.car_yn,'Y', 'Y',' ') AS car,
		t3.cr_user_id AS crUserId,
		t3.orig as org,
		t3.dest as dest,
		t3.CONTENT as content,
		t3.spl_code1 as shc,
		TO_CHAR(t3.cr_date, 'DDMONYY') AS crDate
		from exp_awb_stk t1, exp_awb_stk_dtl t2, exp_awb_booking t3
		LEFT JOIN AWB A ON A.AWB_NO = t3.AWB_NO
		where t1.tr_no = t2.tr_no
		and t2.tr_no = t3.tr_no
		and t2.awb_no = t3.awb_no
		and t1.awb_type = nvl(#sawbType#, t1.awb_type)
		and t1.carr_code = nvl(#scarrier#, t1.carr_code)
		and t2.awb_no = nvl(#sawbNo#, t2.awb_no)
		and A.car_yn = 'Y'
		<isNotEmpty property="loginCarrier">
               AND   (t3.CARR_CODE = #loginCarrier# 
               OR t3.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP 
               WHERE GRP_CARR_CODE     = #loginCarrier#))                                          
      </isNotEmpty>
		ORDER BY t2.awb_no
</select>
	<select id="getAwbReservationForDeparted_578" parameterClass="cargo.cms.export.report.bo.AWBBookingListRept_578BO"
		resultClass="cargo.cms.export.report.bo.AWBBookingListRept_578BO">
		select
		t3.tr_no AS trNo,
		t2.awb_no AS awbNo,
		substr(t2.awb_no,0,3) as awbPfx,
		substr(t2.awb_no,3) as awbSfx,
		t3.CARR_CODE as carrCode,
		t3.shipper_name AS shipperName,
		t3.shipper_tel AS shipperTel,
		t3.shipper_cname AS shipperCName,
		t3.rmk AS remarks,
		(select code_desc from mast_code_dtl where code = t1.awb_type and code_type = 'AWB_STK_TYPE' ) as awbType,
		t2.status AS status,
		DECODE(A.car_yn,'Y', 'Y',' ') AS car,
		t3.cr_user_id AS crUserId,
		t3.orig as org,
		t3.dest as dest,
		t3.CONTENT as content,
		t3.spl_code1 as shc,
		TO_CHAR(t3.cr_date, 'DDMONYY') AS crDate
		from exp_awb_stk t1, exp_awb_stk_dtl t2, exp_awb_booking t3
		LEFT JOIN AWB A ON A.AWB_NO = t3.AWB_NO
		where t1.tr_no = t2.tr_no
		and t2.tr_no = t3.tr_no
		and t2.awb_no = t3.awb_no
		and t1.awb_type = nvl(#sawbType#, t1.awb_type)
		and t1.carr_code = nvl(#scarrier#, t1.carr_code)
		and t2.awb_no = nvl(#sawbNo#, t2.awb_no)
		and    exists 
                (select 'Y' from  exp_pmanifest_awb 
                where awb_no = a.awb_no 
                and awb_date =a.awb_date 
                and (flt_key,flt_date ) in (select flt_key,sch_date from flt_opr_events where final_manf_ind ='Y')
                )
		<isNotEmpty property="loginCarrier">
               AND   (t3.CARR_CODE = #loginCarrier# 
               OR t3.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP 
               WHERE GRP_CARR_CODE     = #loginCarrier#))                                          
      </isNotEmpty>
		ORDER BY t2.awb_no
</select>
	<select id="exp_rept_533" parameterClass="cargo.cms.export.report.bo.SuperUrgentCgoRept533BO"
		resultClass="cargo.cms.export.report.bo.SuperUrgentCgoRept533BO">
		SELECT E.TR_NO trNo,E.ULD_KEY AS oldUldNo,
		E.ULD_KEY as newUldNo,
		E.FLT_KEY AS fltKey ,
		to_char(E.FLT_DATE,'DDMONYY') AS fltDate,
		E.WT AS wt ,
		to_char(E.EST_TIME,'DDMONYY HH24MI') AS estTime,
		E.TRUCK AS truckNo,
		E.AWB_NO AS awbNo,
		E.DEDICATED_TD dedicatedTd,E.STATUS status,
		E.OFF_POINT as unLdgPt
		FROM EXP_SUPER_URGENT E
		join FLT_OPR F on F.flt_key = E.flt_key and F.sch_date = E.flt_date and 
		F.flt_type = 'D'
		where to_date(to_char(E.CR_DATE,'DDMONYYHH24MI'),'DDMONYYHH24MI') BETWEEN
		to_date(to_char(sysdate-1,'DDMONYYHH24MI'),'DDMONYYHH24MI') and
		to_date(to_char(sysdate,'DDMONYYHH24MI'),'DDMONYYHH24MI')
		<isNotEmpty property="loginCarrier">
				AND	(F.CARR_CODE = #loginCarrier#
				OR F.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP 
				WHERE GRP_CARR_CODE	= #loginCarrier#))							
		</isNotEmpty>
		order by e.est_time desc
</select>
<!--  Added by Yugandhar :: Starts -->
	<select id="check_outstanding_issueRclBulk_010_b" parameterClass="map" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM BILL_CHARGE_DTL WHERE AWB_NO = #awbNo#
			and status='PENDING' 
   			and cust_no = #custNo#
	</select>
	<select id="check_outstanding_issueRclMix_010_m" parameterClass="map" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM BILL_CHARGE_DTL WHERE 	status='PENDING' 
     	 	and cust_no = #custNo#
      		and AWB_NO in (SELECT awb_no FROM exp_rcl_brkdn WHERE uld_key = #uldNo#)
	</select>
	
	<select id="check_status_issueRclBulk_010_b" parameterClass="map" resultClass="java.lang.String">
		SELECT STATUS AS status from EXP_RCL_HD WHERE RCL_NO=#rclNo#
	</select>
	<select id="getVersionNumberFormRclHD" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		SELECT Decode(REPT_VER,null,'0',REPT_VER) as versionNo 
               from EXP_RCL_HD 
     		   where rcl_no = #PARAM# 
	</select>
	<update id="updateVersionNumberinRclHD" parameterClass="map">
	     UPDATE EXP_RCL_HD set REPT_VER = #versionNum# where RCL_NO = #rclNum#
	</update>
	<select id="check_outstanding_ReprintRCL_532" parameterClass="cargo.cms.export.bo.RePrintRCLBO" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM BILL_CHARGE_DTL WHERE AWB_NO = #awbNo#
			and awb_date = (select TO_CHAR(awb_date,'DDMONYY') from EXP_RCL_hd where awb_no = #awbNo# and RCL_NO=#rclNo#)
    		and status='PENDING' 
   			and RCL_NO=#rclNo#
	</select>
	<select id="check_outstanding_ReprintRCL_Mix_532" parameterClass="cargo.cms.export.bo.RePrintRCLBO" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM BILL_CHARGE_DTL WHERE ULD_KEY = #uldKey#
			and status='PAID' 
    		and RCL_NO=#rclNo#
	</select>
	<select id="check_SHC_VAL_For_ReprintRCL_532" parameterClass="cargo.cms.export.bo.RePrintRCLBO" resultClass="java.lang.Integer">
		SELECT COUNT(*) 
             FROM EXP_RCL_HD 
             WHERE (SPL_CODE1='VAL' OR SPL_CODE2='VAL' 
                    OR SPL_CODE3='VAL' OR SPL_CODE4='VAL' 
                    OR SPL_CODE5='VAL' OR SPL_CODE6='VAL' 
                    OR SPL_CODE7='VAL' OR SPL_CODE8='VAL' 
                    OR SPL_CODE9='VAL') 
            AND RCL_NO = #rclNo# 
            AND AWB_NO = #awbNo#
	</select>

	<select id="adm_rept_bulk_locationDtl_532" parameterClass="cargo.cms.export.report.bo.RePrintRCLReportBO"
		resultClass="cargo.cms.export.report.bo.RePrintRCLReportBO">
	select 
		#rclNo# as rclNo,
		#awbNo# as awbNo,
		#dest# as destination,
		#printedBy# as printedBy,
		A.AWB_CONTENT as content,
		A.DLV_BY as deliveredBy,
		A.RMK as remarks,
    	TO_CHAR(A.RCL_DATE, 'DDMONYY HH24:MI') AS rclDtTime,
		A.TRUCK_NO as truckNo,
		A.SPL_CODE1 ||'  '||A.SPL_CODE2 ||'  '||A.SPL_CODE3 ||'  '||
    	A.SPL_CODE4 ||'  '||A.SPL_CODE5 ||'  '||A.SPL_CODE6 ||'  '||
   		A.SPL_CODE7 ||'  '||A.SPL_CODE8 ||'  '||A.SPL_CODE9 as shc,
		A.LM_USER_ID as staffId,
		to_char(sysdate, 'DDMONYY HH24:MM') as printDtTime,
		B.PCS AS rclpc ,
		(SELECT TO_CHAR(SUM(NET_WT),'999999999.99')  FROM EXP_RCL_DTL WHERE RCL_NO=#rclNo#) AS headNetWt,
		TRIM(TO_CHAR(NVL(B.NET_WT,0), '999999990D99')) as netWt,
		TRIM(TO_CHAR(NVL(B.TARE_WT,0), '999999990D99')) as tareWt,
		TRIM(TO_CHAR(NVL(M.TARE_WT,0), '999999990D99')) as csdTareWt,
		B.LOC_CODE as storageLoc,
		B.LSP_NO as lspNo,
    	B.ULD_KEY as uldKey,
		SEC_CHECK as securityChk,
    DECODE(A.SCREENING_OPTION,null,'','RAKC_SC','RA','CTO_SC','Security Check','EXEMPTED_SC','Exempted','RACF_SC','RACSF',A.SCREENING_OPTION) AS screeningOptn,
  A.RACSF_CODE            AS racfCode,
  (SELECT NVL(CODE_DESC,'') AS codeDesc FROM MAST_CODE_DTL WHERE CODE=A.SCREENING_METHOD AND CODE_TYPE='SCREENING_METHOD')      AS trkULDSecurity,
        (SELECT NVL(CODE_DESC,'') AS codeDesc FROM MAST_CODE_DTL WHERE CODE=A.EXEMPTED_REASON AND CODE_TYPE='EXEMPTED')       AS exemptedReasn,
        A.REMARKS               AS screeningRmk,
        (SELECT NVL(CODE_DESC,'') AS codeDesc FROM MAST_CODE_DTL WHERE CODE=A.RA_TYPE AND CODE_TYPE='RA_KC_TYPE') AS secType,
        rclhd.securenet_serial_no   AS secSealNo,
  A.cust_no as agentCode,
  (select code_desc from cust_company where code=A.cust_no and rownum=1) as agentName,
  NVL(A.carr_rf,'NA') as carrierRF,
  NVL(A.tsa_rcl_ind,'NA') as tsaRclInd,
  A.rcl_reject_reason as rejectReason,
  A.VKC_CODE as vkcCode,
A.SEAL_NUM1 as sealNum1,
A.SEAL_NUM2 as sealNum2,
A.SEAL_NUM3 as sealNum3,
A.SEAL_NUM4 as sealNum4,
A.SEAL_NUM5 as sealNum5,
A.SEAL_NUM6 as sealNum6,
A.SEAL_NUM7 as sealNum7,
A.SEAL_NUM8 as sealNum8,
A.SEAL_NUM9 as sealNum9,
decode(A.SCREENING_OPTION,'CTO_SC','Y','') reqSecChk
  FROM EXP_RCL_HD A
		JOIN EXP_RCL_DTL B ON A.RCL_NO = B.RCL_NO
    	LEFT JOIN MAST_CSD M ON B.LSP_NO = M.CODE
    	LEFT JOIN EXP_PRE_RCL_HD rclhd ON rclhd.PRE_RCL_NO = a.pre_rcl_no
		WHERE
		A.RCL_NO =#rclNo#
</select>
<select id="adm_rept_bulk_dimentionDtl_532" parameterClass="cargo.cms.export.report.bo.RePrintRCLReportBO"
		resultClass="cargo.cms.export.report.bo.RePrintRCLReportBO">
	SELECT
		C.PCS AS rclpc ,
		C.LENGTH as length,
		C.WIDTH as width,
		C.HEIGHT as height,
		C.LENGTH ||'X'|| C.WIDTH||'X'|| C.HEIGHT as dimension
		FROM EXP_RCL_HD A
		JOIN EXP_RCL_DMN C ON A.RCL_NO = C.RCL_NO
		WHERE
		A.RCL_NO = #rclNo#
</select>

	<select id="adm_rept_mix_532" parameterClass="cargo.cms.export.report.bo.RePrintRCLReportBO"
		resultClass="cargo.cms.export.report.bo.RePrintRCLReportBO">
		SELECT
		#rclNo# as rclNo,
		#awbNo# as awbNo,
		#dest# as destination,
		#uldKey# as uldKey,
		#printedBy# as printedBy,
		A.AWB_CONTENT as content,
		A.DLV_BY as deliveredBy,
		A.RMK as remarks,
		TO_CHAR(A.RCL_DATE, 'DDMONYY HH24:MI') AS rclDtTime,
		A.TRUCK_NO as truckNo,
		A.SPL_CODE1 ||'  '||A.SPL_CODE2 ||'  '||A.SPL_CODE3 ||'  '||
    	A.SPL_CODE4 ||'  '||A.SPL_CODE5 ||'  '||A.SPL_CODE6 ||'  '||
   		A.SPL_CODE7 ||'  '||A.SPL_CODE8 ||'  '||A.SPL_CODE9 as shc,
		A.LM_USER_ID as staffId,
		to_char(sysdate, 'DDMONYY HH:MM') as printDtTime,
		B.PCS AS rclpc ,
		TRIM(TO_CHAR(B.NET_WT,'999999990D99')) AS netWt ,
		TRIM(TO_CHAR(B.GROSS_WT,'999999990D99')) AS grossWt ,
		TRIM(TO_CHAR(B.TARE_WT,'999999990D99')) AS tareWt,
		B.LOC_CODE as storageLoc,
		B.LSP_NO as lspNo,
    	B.ULD_KEY as uldKey,
		B.CONTR_CODE as contour,
		B.MAN_WT_YN as manulWtYn,
        DECODE(A.SCREENING_OPTION,null,'','RAKC_SC','RA','CTO_SC','Security Check','EXEMPTED_SC','Exempted','RACF_SC','RACSF',A.SCREENING_OPTION) AS screeningOptn,
        A.RACSF_CODE            AS racfCode,
        (SELECT NVL(CODE_DESC,'') AS codeDesc FROM MAST_CODE_DTL WHERE CODE=A.SCREENING_METHOD AND CODE_TYPE='SCREENING_METHOD')      AS trkULDSecurity,
        (SELECT NVL(CODE_DESC,'') AS codeDesc FROM MAST_CODE_DTL WHERE CODE=A.EXEMPTED_REASON AND CODE_TYPE='EXEMPTED')       AS exemptedReasn,
        A.REMARKS               AS screeningRmk,
        (SELECT NVL(CODE_DESC,'') AS codeDesc FROM MAST_CODE_DTL WHERE CODE=A.RA_TYPE AND CODE_TYPE='RA_KC_TYPE') AS secType,
        rclhd.securenet_serial_no   AS secSealNo,
        A.cust_no as agentCode,
       	(select code_desc from cust_company where code=A.cust_no and rownum=1) as agentName,
       	NVL(A.carr_rf,'NA') as carrierRF,
  		NVL(A.tsa_rcl_ind,'NA') as tsaRclInd,
  		A.rcl_reject_reason as rejectReason,
  		A.VKC_CODE as vkcCode,
A.SEAL_NUM1 as sealNum1,
A.SEAL_NUM2 as sealNum2,
A.SEAL_NUM3 as sealNum3,
A.SEAL_NUM4 as sealNum4,
A.SEAL_NUM5 as sealNum5,
A.SEAL_NUM6 as sealNum6,
A.SEAL_NUM7 as sealNum7,
A.SEAL_NUM8 as sealNum8,
A.SEAL_NUM9 as sealNum9,
decode(A.SCREENING_OPTION,'CTO_SC','Y','') reqSecChk

		FROM EXP_RCL_HD A
		JOIN EXP_RCL_DTL B ON A.RCL_NO = B.RCL_NO
		LEFT JOIN EXP_PRE_RCL_HD rclhd ON rclhd.PRE_RCL_NO = a.pre_rcl_no
		WHERE
		A.RCL_NO = #rclNo#
</select>

	<select id="adm_rept_ppk_532" parameterClass="cargo.cms.export.report.bo.RePrintRCLReportBO"
		resultClass="cargo.cms.export.report.bo.RePrintRCLReportBO">
		SELECT
		#rclNo# as rclNo,
		#awbNo# as awbNo,
		#dest# as destination,
		#printedBy# as printedBy,
		A.AWB_CONTENT as content,
		A.DLV_BY as deliveredBy,
		A.RMK as remarks,
		TO_CHAR(A.RCL_DATE, 'DDMONYY HH24:MI') AS rclDtTime,
		A.TRUCK_NO as truckNo,
		A.SPL_CODE1 ||'  '||A.SPL_CODE2 ||'  '||A.SPL_CODE3 ||'  '||
    	A.SPL_CODE4 ||'  '||A.SPL_CODE5 ||'  '||A.SPL_CODE6 ||'  '||
   		A.SPL_CODE7 ||'  '||A.SPL_CODE8 ||'  '||A.SPL_CODE9 as shc,
		A.LM_USER_ID as staffId,
		to_char(sysdate, 'DDMONYY HH:MM') as printDtTime,
		B.PCS AS rclpc ,
		TRIM(TO_CHAR(B.NET_WT,'999999990D99')) AS netWt,
		TRIM(TO_CHAR(B.GROSS_WT,'999999990D99')) AS grossWt,
		TRIM(TO_CHAR(B.TARE_WT,'999999990D99')) AS tareWt,
		B.LOC_CODE as storageLoc,
		B.LSP_NO as lspNo,
    	B.ULD_KEY as uldKey,
		B.CONTR_CODE as contour,
		B.MAN_WT_YN as manulWtYn,
        DECODE(A.SCREENING_OPTION,null,'','RAKC_SC','RA','CTO_SC','Security Check','EXEMPTED_SC','Exempted','RACF_SC','RACSF',A.SCREENING_OPTION) AS screeningOptn,
        A.RACSF_CODE            AS racfCode,
        (SELECT NVL(CODE_DESC,'') AS codeDesc FROM MAST_CODE_DTL WHERE CODE=A.SCREENING_METHOD AND CODE_TYPE='SCREENING_METHOD')      AS trkULDSecurity,
        (SELECT NVL(CODE_DESC,'') AS codeDesc FROM MAST_CODE_DTL WHERE CODE=A.EXEMPTED_REASON AND CODE_TYPE='EXEMPTED')       AS exemptedReasn,
        A.REMARKS               AS screeningRmk,
        (SELECT NVL(CODE_DESC,'') AS codeDesc FROM MAST_CODE_DTL WHERE CODE=A.RA_TYPE AND CODE_TYPE='RA_KC_TYPE') AS secType,
        (CASE WHEN A.PPK_TYPE='P' THEN
        (SELECT STRAGG(STRINGDELIM(SECURENET_SERIAL_NO, ',')) FROM EXP_PRE_RCL_DTL WHERE PRE_RCL_NO=rclhd.pre_rcl_no AND SECURENET_SERIAL_NO IS NOT NULL) ELSE
         rclhd.securenet_serial_no END)   AS secSealNo,
        A.cust_no as agentCode,
        (select code_desc from cust_company where code=A.cust_no and rownum=1) as agentName,
        NVL(A.carr_rf,'NA') as carrierRF,

  		NVL(A.tsa_rcl_ind,'NA') as tsaRclInd,
  		A.rcl_reject_reason as rejectReason,
  		A.VKC_CODE as vkcCode,
A.SEAL_NUM1 as sealNum1,
A.SEAL_NUM2 as sealNum2,
A.SEAL_NUM3 as sealNum3,
A.SEAL_NUM4 as sealNum4,
A.SEAL_NUM5 as sealNum5,
A.SEAL_NUM6 as sealNum6,
A.SEAL_NUM7 as sealNum7,
A.SEAL_NUM8 as sealNum8,
A.SEAL_NUM9 as sealNum9,
decode(A.SCREENING_OPTION,'CTO_SC','Y','') reqSecChk
		FROM EXP_RCL_HD A
		JOIN EXP_RCL_DTL B ON A.RCL_NO = B.RCL_NO
		LEFT JOIN EXP_PRE_RCL_HD rclhd ON rclhd.PRE_RCL_NO = a.pre_rcl_no
		WHERE
		A.RCL_NO = #rclNo#
</select>
<select id="exp_rept_uld_manf_532_dtl"  parameterClass="cargo.cms.export.report.bo.CreatemRCLHdrReptBO"  resultClass="cargo.cms.export.report.bo.CreatemRCLHdrReptBO">
		<![CDATA[
					select  DISTINCT awb_no as awbNo												
									from EXP_RCL_ULD_MANF 
							   WHERE rcl_no  = #srclNo#		
							 	
			]]>
</select>
<select id="consignmentDtlsList_32"  parameterClass="cargo.cms.export.report.bo.CreatemRCLHdrReptBO"  resultClass="cargo.cms.export.report.bo.CreatemRCLHdrReptBO">
select SUBSTR(awb_no,1,3)||'-'||SUBSTR(awb_no,4) as awbNo,dest as dest,pcs as pcs,weight as netwt,content as cont from exp_rcl_brkdn where rcl_no=#srclNo#
</select>
<select id="exp_rept_uld_manf_532_house_dtl"  parameterClass="cargo.cms.export.report.bo.CreatemRCLHdrReptBO"  resultClass="cargo.cms.export.report.bo.CreatemRCLHdrReptBO">
		<![CDATA[
		
		 select  
				  SUBSTR(#awbNo#,1,3)||'-'||SUBSTR(#awbNo#,4) as awbNoDis,
				  #awbNo# as awbNo,
		 		 #serialNo# as serialNo,		  
		 		sum(pc) as pcs,
		 		sum(wt) as netwt,		            
                 sum(pc) || '/' ||  sum(wt) as totalPcWt								
									from EXP_RCL_ULD_MANF 							  
                 WHERE awb_no  = #awbNo#	
			]]>
</select>
<select id="exp_rept_uld_manf_532_hawb_dtl"  parameterClass="cargo.cms.export.report.bo.CreatemRCLHdrReptBO"  resultClass="cargo.cms.export.report.bo.CreatemRCLHdrReptBO">
		<![CDATA[		
		 select              
                  hawb_no as hawbNo,
                  pc || '/' ||  wt as hawbTolPcWt
									from EXP_RCL_ULD_MANF 							  
                 WHERE awb_no  =#awbNo#
			]]>
</select>
<select id="exp_rept_uld_532_hawb_dtl"  parameterClass="cargo.cms.export.report.bo.CreatemRCLHdrReptBO"  resultClass="cargo.cms.export.report.bo.CreatemRCLHdrReptBO">
		<![CDATA[		
		select              
		      #hawbNo# as hawbNo,
		     #hawbTolPcWt# as hawbTolPcWt,
		     hawb_org || '/' ||  hawb_dest as dest 
		     from edi_fhl_hawb a
             left join edi_fhl b on a.tr_no=b.tr_no 						  
             WHERE a.hawb_no  = #hawbNo#
             and b.awb_no= #awbNo#		     
			]]>
</select>
<select id="getExternalDmnDtlEnqeRclBulk_034" parameterClass="cargo.cms.export.report.bo.EnqeRCLExternalBMPRept_034BO" resultClass="cargo.cms.export.report.bo.EnqeRCLExternalBMPRept_034BO">
	SELECT trim(to_char(A.LENGTH,'9990.99')) AS LENGTH, 
           trim(to_char(A.WIDTH,'9990.99')) AS width,
		   trim(to_char(A.HEIGHT,'9990.99')) AS height, 
       	   A.PCS as dmnPieces
           FROM EXP_PRE_RCL_DMN A, EXP_PRE_RCL_HD B
           WHERE B.PRE_RCL_NO  = A.PRE_RCL_NO 
           AND B.PRE_RCL_NO = #erclNo#
</select>
<select id="getScreeningDetails_034" parameterClass="map" resultClass="cargo.cms.export.report.bo.EnqeRCLBMPRept_034BO">
SELECT rclhd.SCREENING_OPTION AS screeningOptn,
 rclhd.RACSF_CODE            AS racfCode,
 (SELECT NVL(CODE_DESC,'') AS codeDesc FROM MAST_CODE_DTL WHERE CODE=rclhd.SCREENING_METHOD AND CODE_TYPE='SCREENING_METHOD')      AS trkULDSecurity,
 (SELECT NVL(CODE_DESC,'') AS codeDesc FROM MAST_CODE_DTL WHERE CODE=rclhd.EXEMPTED_REASON AND CODE_TYPE='EXEMPTED')       AS exemptedReasn,
 rclhd.REMARKS               AS screeningRmk,
 (SELECT NVL(CODE_DESC,'') AS codeDesc FROM MAST_CODE_DTL WHERE CODE=rclhd.RA_TYPE  AND CODE_TYPE='RA_KC_TYPE') AS secType,
 (CASE WHEN PPK_TYPE='P' THEN
 (SELECT STRAGG(STRINGDELIM(SECURENET_SERIAL_NO, ',')) FROM EXP_PRE_RCL_DTL WHERE PRE_RCL_NO=#preRclNo# AND SECURENET_SERIAL_NO IS NOT NULL) ELSE
 rclhd.securenet_serial_no END)   AS secSealNo,
 rclhd.cust_no as agentCode,
 (select code_desc from cust_company where code=rclhd.cust_no and rownum=1) as agentName,
 rclhd.VKC_CODE as vkcCode,
rclhd.SEAL_NUM1 as sealNum1,
rclhd.SEAL_NUM2 as sealNum2,
rclhd.SEAL_NUM3 as sealNum3,
rclhd.SEAL_NUM4 as sealNum4,
rclhd.SEAL_NUM5 as sealNum5,
rclhd.SEAL_NUM6 as sealNum6,
rclhd.SEAL_NUM7 as sealNum7,
rclhd.SEAL_NUM8 as sealNum8,
rclhd.SEAL_NUM9 as sealNum9,
decode(rclhd.SCREENING_OPTION,'CTO_SC','Y','') reqSecChk
FROM EXP_PRE_RCL_HD rclhd
WHERE rclhd.PRE_RCL_NO=#preRclNo#
</select>
<select id="getScreeningDetailsrcl_034" parameterClass="map" resultClass="cargo.cms.export.report.bo.EnqeRCLBMPRept_034BO">
SELECT rclhd.SCREENING_OPTION AS screeningOptn,
 rclhd.RACSF_CODE            AS racfCode,
 (SELECT NVL(CODE_DESC,'') AS codeDesc FROM MAST_CODE_DTL WHERE CODE=rclhd.SCREENING_METHOD AND CODE_TYPE='SCREENING_METHOD')      AS trkULDSecurity,
 (SELECT NVL(CODE_DESC,'') AS codeDesc FROM MAST_CODE_DTL WHERE CODE=rclhd.EXEMPTED_REASON AND CODE_TYPE='EXEMPTED')       AS exemptedReasn,
 rclhd.REMARKS               AS screeningRmk,
 (SELECT NVL(CODE_DESC,'') AS codeDesc FROM MAST_CODE_DTL WHERE CODE=rclhd.RA_TYPE  AND CODE_TYPE='RA_KC_TYPE') AS secType,
 (CASE WHEN PPK_TYPE='P' THEN
 (SELECT STRAGG(STRINGDELIM(SECURENET_SERIAL_NO, ',')) FROM EXP_PRE_RCL_DTL WHERE PRE_RCL_NO=#preRclNo# AND SECURENET_SERIAL_NO IS NOT NULL) ELSE
 rclhd.securenet_serial_no END)   AS secSealNo,
 rclhd.cust_no as agentCode,
 (select code_desc from cust_company where code=rclhd.cust_no and rownum=1) as agentName,
 rclhd.VKC_CODE as vkcCode,
rclhd.SEAL_NUM1 as sealNum1,
rclhd.SEAL_NUM2 as sealNum2,
rclhd.SEAL_NUM3 as sealNum3,
rclhd.SEAL_NUM4 as sealNum4,
rclhd.SEAL_NUM5 as sealNum5,
rclhd.SEAL_NUM6 as sealNum6,
rclhd.SEAL_NUM7 as sealNum7,
rclhd.SEAL_NUM8 as sealNum8,
rclhd.SEAL_NUM9 as sealNum9,
decode(rclhd.SCREENING_OPTION,'CTO_SC','Y','') reqSecChk
FROM EXP_RCL_HD rclhd
WHERE rclhd.RCL_NO=#preRclNo#
</select>
	
<select id="getLocDtlEnqeRCLMix_034" parameterClass="map" resultClass="cargo.cms.export.report.bo.EnqeRCLBMPRept_034BO">
	 select  
	 		SUBSTR(TRIM(AWB_NO),1,3)||'-'||SUBSTR(TRIM(AWB_NO),4) as awbNo, DEST as destination, PCS as pieces,TRIM(TO_CHAR(NVL(WEIGHT,0), '999999990D99')) as netWt,QCP_GOODS_DESC AS content,
      SPL_CODE1 AS splCode1,SPL_CODE2 AS splCode2,SPL_CODE3 AS splCode3,SPL_CODE4 AS splCode4,SPL_CODE5 AS splCode5,SPL_CODE6 AS splCode6,SPL_CODE7 AS splCode7,SPL_CODE8 AS splCode8,SPL_CODE9 AS splCode9
		FROM   exp_pre_rcl_brkdn 
		WHERE  pre_rcl_no= #preRclNo#
			and not exists (select null 
		                from   EXP_RCL_BRKDN 
		                where  rcl_no = #rclNo#)
		union 
		SELECT 
		    SUBSTR(TRIM(a.AWB_NO),1,3)||'-'||SUBSTR(TRIM(a.AWB_NO),4) as awbNo, 
           	a.DEST as dest, 
      		a.PCS as pieces, 
      		TRIM(TO_CHAR(NVL(a.WEIGHT,0), '999999990D99')) as weight,
      		b.QCP_GOODS_DESC AS content,
          a.SPL_CODE1 AS splCode1,a.SPL_CODE2 AS splCode2,a.SPL_CODE3 AS splCode3,a.SPL_CODE4 AS splCode4,a.SPL_CODE5 AS splCode5,a.SPL_CODE6 AS splCode6,a.SPL_CODE7 AS splCode7,a.SPL_CODE8 AS splCode8,a.SPL_CODE9 AS splCode9
		FROM   EXP_RCL_BRKDN a
    	left join exp_pre_rcl_brkdn b on a.AWB_NO = b.AWB_NO
		where  rcl_no = #rclNo#
		and    b.pre_rcl_no = #preRclNo#
</select>

<select id="getGrossWtEnqeRCLMix_034" parameterClass="map" resultClass="java.lang.String">
	select TRIM(TO_CHAR(NVL(GROSS_WT,0), '999999990D99'))as totGrossWt from exp_pre_rcl_hd where pre_rcl_no = #preRclNo#
</select>

<select id="getLocDtlEnqeRCLPpk_034" parameterClass="map" resultClass="cargo.cms.export.report.bo.EnqeRCLBMPRept_034BO">
	 SELECT  A.pcs as pieces,   
        TRIM(TO_CHAR(NVL(A.gross_wt,0), '999999990D99')) as grossWeight, 
        A.contr_code as contourCode,
        A.uld_key as uldKey,
        TRIM(TO_CHAR(NVL(A.net_wt,0), '999999990D99')) as netWt
        FROM EXP_PRE_RCL_DTL A
        WHERE A.pre_rcl_no= #preRclNo#
</select>
<select id="getContentEnqePpk_034" parameterClass="map" resultClass="java.lang.String">
	Select content as content from exp_pre_rcl_hd where  pre_rcl_no= #preRclNo#
</select>

<select id="getVoidRclBulkLocationDtl_010" parameterClass="cargo.cms.export.report.bo.IssueRCLBulkRept_010BO"
		resultClass="cargo.cms.export.report.bo.IssueRCLBulkRept_010BO">
	select 
		A.LM_USER_ID as staffId,
		B.PCS AS rclpcs ,
		TRIM(TO_CHAR(NVL(B.NET_WT,0), '999999990D99')) as rclWt
		FROM EXP_RCL_HD A
		JOIN EXP_RCL_DTL B ON A.RCL_NO = B.RCL_NO
		WHERE
		A.RCL_NO =#srclNo#
</select>
<select id="getVoidRclBulkDimentionDtl_010" parameterClass="cargo.cms.export.report.bo.IssueRCLBulkRept_010BO"
		resultClass="cargo.cms.export.report.bo.IssueRCLBulkRept_010BO">
	SELECT
		C.PCS AS rclpc ,
		C.LENGTH as length,
		C.WIDTH as width,
		C.HEIGHT as height,
		C.LENGTH ||'X'|| C.WIDTH||'X'|| C.HEIGHT as dimension
		FROM EXP_RCL_HD A
		JOIN EXP_RCL_DMN C ON A.RCL_NO = C.RCL_NO
		WHERE
		A.RCL_NO = #srclNo#
</select>
<select id="getVoidRclMixLocationDtl_010" parameterClass="cargo.cms.export.report.bo.IssueRCLBulkRept_010BO"
		resultClass="cargo.cms.export.report.bo.IssueRCLBulkRept_010BO">
	SELECT
		A.LM_USER_ID as staffId,
		B.PCS AS rclpcs ,
		TRIM(TO_CHAR(B.NET_WT,'999999990D99')) AS rclNetWt ,
		TRIM(TO_CHAR(B.GROSS_WT,'999999990D99')) AS grossWt,
		B.ULD_KEY as uldKey,
		B.CONTR_CODE as contour
		FROM EXP_RCL_HD A
		JOIN EXP_RCL_DTL B ON A.RCL_NO = B.RCL_NO
		WHERE
		A.RCL_NO = #srclNo#
</select>
<select id="getVoidRclPrePackLocationDtl_010" parameterClass="cargo.cms.export.report.bo.IssueRCLBulkRept_010BO"
		resultClass="cargo.cms.export.report.bo.IssueRCLBulkRept_010BO">
	SELECT
		A.LM_USER_ID as staffId,
		B.PCS AS rclpcs ,
		TRIM(TO_CHAR(B.NET_WT,'999999990D99')) AS rclNetWt ,
		TRIM(TO_CHAR(B.GROSS_WT,'999999990D99')) AS grossWt,
		B.ULD_KEY as uldKey,
		B.CONTR_CODE as contour
		FROM EXP_RCL_HD A
		JOIN EXP_RCL_DTL B ON A.RCL_NO = B.RCL_NO
		WHERE
		A.RCL_NO = #srclNo#
</select>

<select id="getRclLocDtlBulk_010HHT" parameterClass="cargo.cms.export.report.bo.IssueRclBMPRept_010HHTBO"
		resultClass="cargo.cms.export.report.bo.IssueRclBMPRept_010HHTBO">
	select 
		TO_CHAR(A.RCL_DATE, 'DDMONYY HH24:MI') AS rclDtTime,
		A.LM_USER_ID as staffId,
		A.sec_check as securityChk,
		B.PCS AS rclpcs ,
		TRIM(TO_CHAR(NVL(B.NET_WT,0), '999999990D99')) as rclWt
		FROM EXP_RCL_HD A
		JOIN EXP_RCL_DTL B ON A.RCL_NO = B.RCL_NO
		WHERE
		A.RCL_NO = #newRclNum#
</select>

<select id="getRclDmnDtlBulk_010HHT" parameterClass="cargo.cms.export.report.bo.IssueRclBMPRept_010HHTBO"
		resultClass="cargo.cms.export.report.bo.IssueRclBMPRept_010HHTBO">
	SELECT
		C.PCS AS rclpc ,
		C.LENGTH as length,
		C.WIDTH as width,
		C.HEIGHT as height,
		C.LENGTH ||'X'|| C.WIDTH||'X'|| C.HEIGHT as dimension
		FROM EXP_RCL_HD A
		JOIN EXP_RCL_DMN C ON A.RCL_NO = C.RCL_NO
		WHERE
		A.RCL_NO = #newRclNum#
</select>

<select id="getRclLocDtlPpkMix_010HHT" parameterClass="cargo.cms.export.report.bo.IssueRclBMPRept_010HHTBO"
		resultClass="cargo.cms.export.report.bo.IssueRclBMPRept_010HHTBO">
	SELECT
		#newRclNum# as rclNo,
		a.awb_no as awbNo,
		a.carr_code as carrCode,
		a.awb_dest as destination,
		TO_CHAR(A.RCL_DATE, 'DDMONYY HH24:MI') AS rclDtTime,
		A.LM_USER_ID as staffId,
		B.ULD_KEY as uldKey,
		A.sec_check as securityChk,
    	B.PCS AS rclpcs ,
		TRIM(TO_CHAR(B.NET_WT,'999999990D99')) AS rclNetWt,
		TRIM(TO_CHAR(B.GROSS_WT,'999999990D99')) AS grossWt,
   		B.CONTR_CODE as contour
		FROM EXP_RCL_HD A
		JOIN EXP_RCL_DTL B ON A.RCL_NO = B.RCL_NO
		WHERE
		A.RCL_NO = #newRclNum#
</select>
<!-- Enqure RCL -->

<select id="getEnqRclBulkLocationDtl_532" parameterClass="cargo.cms.export.report.bo.EnquireRCLReport_532BO"
		resultClass="cargo.cms.export.report.bo.EnquireRCLReport_532BO">
	select 
		A.cr_user_id as staffId,
    	TO_CHAR(A.RCL_DATE,'HH24:MI') AS printTime,
		A.rcl_reject_reason as rejectReason,
		B.PCS AS rclpcs ,
		TRIM(TO_CHAR(NVL(B.NET_WT,0), '999999990D99')) as rclNetWt,
		TRIM(TO_CHAR(NVL(B.NET_WT,0), '999999990D99')) as rclWt
		FROM EXP_RCL_HD A
		left JOIN EXP_RCL_DTL B ON A.RCL_NO = B.RCL_NO
		WHERE
		A.RCL_NO =#rclNo#
</select>
<select id="getEnqRclBulkDimentionDtl_532" parameterClass="cargo.cms.export.report.bo.EnquireRCLReport_532BO"
		resultClass="cargo.cms.export.report.bo.EnquireRCLReport_532BO">
	SELECT
		C.PCS AS rclpc ,
		C.LENGTH as length,
		C.WIDTH as width,
		C.HEIGHT as height,
		C.LENGTH ||'X'|| C.WIDTH||'X'|| C.HEIGHT as dimension
		FROM EXP_RCL_HD A
		JOIN EXP_RCL_DMN C ON A.RCL_NO = C.RCL_NO
		WHERE
		A.RCL_NO = #rclNo#
</select>
<select id="getEnqRclMixLocationDtl_532" parameterClass="cargo.cms.export.report.bo.EnquireRCLReport_532BO"
		resultClass="cargo.cms.export.report.bo.EnquireRCLReport_532BO">
	SELECT
		A.cr_user_id as staffId,
    	TO_CHAR(A.RCL_DATE,'HH24:MI') AS printTime,
		A.rcl_reject_reason as rejectReason,
		B.PCS AS rclpcs ,
		TRIM(TO_CHAR(B.NET_WT,'999999990D99')) AS rclNetWt ,
		TRIM(TO_CHAR(B.NET_WT,'999999990D99')) AS rclWt ,
		TRIM(TO_CHAR(B.GROSS_WT,'999999990D99')) AS grossWt,
		B.ULD_KEY as uldKey,
		B.CONTR_CODE as contour
		FROM EXP_RCL_HD A
		JOIN EXP_RCL_DTL B ON A.RCL_NO = B.RCL_NO
		WHERE
		A.RCL_NO = #rclNo#
</select>
<select id="getEnqRclPrePackLocationDtl_532" parameterClass="cargo.cms.export.report.bo.EnquireRCLReport_532BO"
		resultClass="cargo.cms.export.report.bo.EnquireRCLReport_532BO">
	SELECT
		A.cr_user_id as staffId,
    	TO_CHAR(A.RCL_DATE,'HH24:MI') AS printTime,
		A.rcl_reject_reason as rejectReason,
		B.PCS AS rclpcs ,
		TRIM(TO_CHAR(B.NET_WT,'999999990D99')) AS rclNetWt ,
		TRIM(TO_CHAR(B.NET_WT,'999999990D99')) AS rclWt ,
		TRIM(TO_CHAR(B.GROSS_WT,'999999990D99')) AS grossWt,
		B.ULD_KEY as uldKey,
		B.CONTR_CODE as contour
		FROM EXP_RCL_HD A
		JOIN EXP_RCL_DTL B ON A.RCL_NO = B.RCL_NO
		WHERE
		A.RCL_NO = #rclNo#
</select>
<!--  Added by Yugandhar :: End -->
	<!-- Added by swapna for List/print DGDReport:Start -->
	<select id="fetch_dgr_goods_list_171" parameterClass="cargo.cms.export.report.bo.DangerousGoods_171BO"
		resultClass="cargo.cms.export.report.bo.DangerousGoods_171BO">
		SELECT CASE WHEN substr(ecar.catalog,1,1) = 'T' then 'TRANSHIPMENT' else
		'EXPORT' END category,
		EDA.SHIPPER as shipperName, EDA.UN_ID as unNo,EDA.CL_DV as class1,
		SUBSTR(EDA.AWB_NO,1,3)||'-'||SUBSTR(EDA.AWB_NO,4) as awbNo,
		ecar.dest as dest, decode(expm.flt_key,NULL,'',expm.flt_key) as fltNo,
		decode(to_char(expm.flt_date,'DDMONYY'),NULL,'',to_char(expm.flt_date,'DDMONYY'))
		as fltDate,
		Decode((Select To_Char(Min(Rcl_Date),'DDMONYY') From v_rcl_awb Where Awb_No =
		EDA.awb_no and awb_date = EDA.awb_date),'',to_char(EDA.awb_date,'DDMONYY'),(select to_char(min(RCL_DATE),'DDMONYY') from v_rcl_awb where awb_no =
		EDA.awb_no and awb_date = EDA.awb_date)) as recptDate,
		sum(CASE WHEN SUBSTR(DTL.CODE, 1, 1) = 'A' THEN 1 ELSE 0 END) box ,
		sum(CASE WHEN SUBSTR(DTL.CODE, 1, 1) = 'B' THEN 1 ELSE 0 END) drums ,
		sum(CASE WHEN SUBSTR(DTL.CODE, 1, 1) = 'C' THEN 1 ELSE 0 END) jerricans ,
		sum(CASE WHEN SUBSTR(DTL.CODE, 1, 1) = 'D' THEN 1 ELSE 0 END) bags ,
		sum(CASE WHEN SUBSTR(DTL.CODE, 1, 1) = 'E' THEN 1 ELSE 0 END) compPack,
		sum(CASE WHEN SUBSTR(DTL.CODE, 1, 1) = 'F' THEN 1 ELSE 0 END) cylinders ,
		sum(CASE WHEN SUBSTR(DTL.CODE, 1, 1) = 'G' THEN 1 ELSE 0 END) others ,
		sum(CASE WHEN SUBSTR(DTL.CODE, 1, 1) = 'H' THEN 1 ELSE 0 END) h
		from EXP_DGD EDA
		LEFT JOIN MAST_CODE_DTL DTL ON EDA.PTYP_TYPE = DTL.CODE_DESC AND
		DTL.CODE_TYPE = 'DGD_PTYP_TYPE'
		left join exp_car ecar ON EDA.awb_no = ecar.awb_no and EDA.awb_date =
		ecar.awb_date
		left join exp_pManifest_awb expm ON expm.awb_no = EDA.awb_no and
		expm.awb_date = EDA.awb_date WHERE
		to_char(EDA.cr_date,'MONYYYY') = #monthYear# AND
		NOT EXISTS (SELECT NULL FROM exp_offload_awb expf
		WHERE expf.FLT_KEY = expm.flt_key
		AND expf.FLT_DATE = expm.flt_date
		AND expf.AWB_NO = expm.AWB_NO
		AND expf.AWB_DATE = expm.AWB_DATE)
		and ecar.awb_no is not null 
		<isNotEmpty property="loginCarrier">
             AND (SUBSTR(EDA.AWB_NO,1,3) IN (SELECT CODE FROM MAST_AWB_PREFIX WHERE CARR_CODE= #loginCarrier#) 
     		 or SUBSTR(EDA.AWB_NO,1,3) IN (SELECT CODE FROM MAST_AWB_PREFIX WHERE CARR_CODE IN(
      			  						   SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE = #loginCarrier#)))                                        
        </isNotEmpty>
		GROUP BY EDA.awb_No,EDA.awb_date, ecar.catalog, EDA.SHIPPER, EDA.UN_ID,
		EDA.CL_DV,
		expm.flt_key, expm.flt_date,ecar.dest
		order by awbNo
</select>
	<select id="exp_rept_010_OBC_Dtls" parameterClass="cargo.cms.export.report.bo.ExportRCLOBC_010_OBCBO"
		resultClass="cargo.cms.export.report.bo.ExportRCLOBC_010_OBCBO">
		SELECT a.TAG_NO AS tagNo,
		       SUM(a.TAG_PCS)      AS pc   ,
		       SUM(a.TAG_WT)       AS wt 
		   FROM EXP_RCL_OBC a
		  WHERE a.RCL_NO = #rclNo#
		  GROUP BY a.TAG_NO, a.TAG_PCS, a.TAG_WT
</select>
<select id="exp_rept_010_OBC_Header" parameterClass="cargo.cms.export.report.bo.ExportRCLOBC_010_OBCBO"
		resultClass="cargo.cms.export.report.bo.ExportRCLOBC_010_OBCBO">
		SELECT
		FLT_KEY as fltKey,
		TO_CHAR(FLT_DATE,'DDMONYY') as fltDate,
		RCL_NO as rclNoDisplay,
		RCL_NO as rclNo,
		SPL_CODES as splCode,
		RMK as rmk,
		AGENT_NAME as agentName,
		IATA_CODE as iataCode,
		LOC_CODE as locCode,
		CONCAT(CONCAT(SUBSTR(AWB_NO,0,3),'-'),SUBSTR(AWB_NO,4)) as awbNoDisplay,
		AWB_NO as awbNo,
		ULD_KEY as uldBtNo,
		VOID_IND as voidInd,
		RCL_PCS as rclPc,
		RCL_WT as rclWt,
		SEC_CHK_IND as SCInd,
		RTN_IND as cargoRetInd,
		DEST as dest,
		TRUCK_NO as truckNo,
		TO_CHAR(RCL_DATE,'DDMONYY') as rclDate,
		TO_CHAR(RCL_DATE,'HH24:MI') as rclTime,
		CAR_IND as carInd,
		AGENT_CODE as agentCode,
		ETD as etd,
		RECEIVED_DATE as receivedDate,
		TRUCK_DOC as truckDoc,
		BU_COMPLETE as buComplete,
		TO_CHAR(ACCP_DATE_TIME,'DDMONYY HH24:MI') as accpDateTime
		FROM
		V_RCL_OBC
		WHERE
		RCL_NO = #rclNo#
		<isNotEmpty property="fltKey">
			<![CDATA[
				AND FLT_KEY = #fltKey#
				AND FLT_DATE = TO_DATE(#fltDate#,'DDMONYY')		
				]]>
		</isNotEmpty>
		<isNotEmpty property="fltKey">
			<isNotEmpty property="checkBox">
				<isEqual property="checkBox" compareValue="Y">
					AND BU_COMPLETE = 'N'
					</isEqual>
			</isNotEmpty>
		</isNotEmpty>
		AND ROWNUM = 1

	</select>
<select id="exp_rept_010_OBC_Footer" parameterClass="cargo.cms.export.report.bo.ExportRCLOBC_010_OBCBO"
		resultClass="cargo.cms.export.report.bo.ExportRCLOBC_010_OBCBO">
		select
		EXP_RCL_HD.SEC_CHECK as securityCheck,
		EXP_RCL_HD.CARR_CODE as carrCode,
    sum(exp_rcl_obc.tag_pcs) as totPcs,
    sum(exp_rcl_obc.tag_wt) as totWt
		from
		EXP_RCL_HD left join exp_rcl_obc on EXP_RCL_HD.rcl_no = exp_rcl_obc.rcl_no
		where EXP_RCL_HD.RCL_NO = #rclNo#
	<isNotEmpty property="awbNo">
			and EXP_RCL_HD.AWB_NO = #awbNo#
			</isNotEmpty>
		group by EXP_RCL_HD.SEC_CHECK,EXP_RCL_HD.CARR_CODE
</select>

	<select id="outbound_obc_230" parameterClass="cargo.cms.export.report.bo.OutboundOBC_230BO"
		resultClass="cargo.cms.export.report.bo.OutboundOBC_230BO">
		SELECT
		DISTINCT RCL_NO as rclNoDisplay,
		RCL_NO as rclNo,
		AGENT_NAME as agentName,
		IATA_CODE as iataCode,
		CONCAT(CONCAT(SUBSTR(AWB_NO,0,3),'-'),SUBSTR(AWB_NO,4)) as awbNoDisplay,
		AWB_NO as awbNo,
		ULD_KEY as uldBtNo,
		VOID_IND as voidInd,
		AGENT_CODE AS agentCode,
		FLT_KEY as fltKey,
		TO_CHAR(FLT_DATE,'DDMONYY') as fltDate,
		RCL_PCS as rclPc,
		RCL_WT as rclWt,
		SEC_CHK_IND as SCInd,
		RTN_IND as cargoRetInd,
		DEST as dest,
		TRUCK_NO as truckNo,
		TO_CHAR(RCL_DATE,'DDMONYY') as rclDate,
		CAR_IND as carInd,
		AGENT_CODE as agentCode,
		ETD as etd,
		RECEIVED_DATE as receivedDate,
		TRUCK_DOC as truckDoc,
		BU_COMPLETE as buComplete,
		TO_CHAR(ACCP_DATE_TIME,'DDMONYY HH24:MI') as accpDateTime
		FROM
		V_RCL_OBC
		WHERE
		ACCP_DATE_TIME BETWEEN TO_DATE(#accpDateTimeFrom#,'DDMONYYHH24MI') AND
		TO_DATE(#accpDateTimeto#,'DDMONYYHH24MI')
		<isNotEmpty property="checkBox">
			<isEqual property="checkBox" compareValue="true">
				AND BU_COMPLETE = 'N'
					</isEqual>
		</isNotEmpty>
		<isNotEmpty property="loginCarrier">    
            and  (CARR_CODE = #loginCarrier#
                        OR CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP 
                        WHERE GRP_CARR_CODE     = #loginCarrier#))    
        </isNotEmpty>
	</select>
	<select id="outbound_obc_230_fltData" parameterClass="cargo.cms.export.report.bo.OutboundOBC_230BO"
		resultClass="cargo.cms.export.report.bo.OutboundOBC_230BO">
		SELECT
		distinct RCL_NO as rclNoDisplay,
		RCL_NO as rclNo,
		AGENT_NAME as agentName,
		IATA_CODE as iataCode,
		CONCAT(CONCAT(SUBSTR(AWB_NO,0,3),'-'),SUBSTR(AWB_NO,4)) as awbNoDisplay,
		AWB_NO as awbNo,
		ULD_KEY as uldBtNo,
		VOID_IND as voidInd,
		AGENT_CODE AS agentCode,
		FLT_KEY as fltKey,
		TO_CHAR(FLT_DATE,'DDMONYY') as fltDate,
		RCL_PCS as rclPc,
		RCL_WT as rclWt,
		SEC_CHK_IND as SCInd,
		RTN_IND as cargoRetInd,
		DEST as dest,
		TRUCK_NO as truckNo,
		TO_CHAR(RCL_DATE,'DDMONYY') as rclDate,
		CAR_IND as carInd,
		AGENT_CODE as agentCode,
		ETD as etd,
		RECEIVED_DATE as receivedDate,
		TRUCK_DOC as truckDoc,
		BU_COMPLETE as buComplete,
		ACCP_DATE_TIME as accpDateTime
		FROM
		V_RCL_OBC
		WHERE
		FLT_KEY = #fltKey#
		AND FLT_DATE = TO_DATE(#fltDate#,'DDMONYY')
		<isNotEmpty property="checkBox">
			<isEqual property="checkBox" compareValue="Y">
				AND BU_COMPLETE = 'N'
					</isEqual>
		</isNotEmpty>
	</select>
	<select id="getTransporterOperationDtl_099"
		parameterClass="cargo.cms.export.report.bo.TransportOperationRept_099BO"
		resultClass="cargo.cms.export.report.bo.TransportOperationRept_099BO">
		SELECT
		cd.ML_IND as mlIndicator,
		cd.SEQ_NUM as sequenceNo,
		cd.LOAD_POSITION as loadingPos,
		cd.ULD_KEY as uldNum,
		cd.CONTR_CODE as contourCode,
		ui.TRANSIT_TYPE as transferType,
		TRIM(TO_CHAR(NVL(ui.GROSS_WEIGHT,0), '999999990D99')) as grossWt,
		ui.LOC_CODE as location,
		decode(mu.h_cont_ind,'Y','Y',decode(mu.bt_ind,'Y','Y','N')) as
		btHcontainer
		FROM EXP_CHKOUT_DTL cd
		JOIN ULD_INVENTORY ui on ui.ULD_KEY= cd.ULD_KEY
		LEFT OUTER JOIN MAST_ULD_TYPE mu on mu.code=ui.ULD_TYPE
		WHERE cd.FLT_KEY = #sfltKey#
		AND cd.FLT_DATE =TO_DATE(#sfltDate#,'DDMONYY')
		and not exists (select null from uld_inventory t2 where ui.uld_key =
		cd.uld_key and nullif(ui.base_plt, 'N') is not null)
		order by mlIndicator desc nulls last, sequenceNo asc nulls last
	</select>
	<!-- Added by swapna for List/print DGDReport-->
	<!-- Added by swapna for List/Print Return Cargo:Start -->


	<select id="exp_rept_112" parameterClass="cargo.cms.export.report.bo.ReturnCargoSRFRept_112BO"
		resultClass="cargo.cms.export.report.bo.ReturnCargoSRFRept_112BO">

		select #s_srfNo# as s_srfNo,
		t1.srf_no srfNo, CONCAT(CONCAT(SUBSTR(t1.awb_no,0,3),'-'),SUBSTR(t1.awb_no,4))
		awbNo,
		t1.rcl_no rclNo, t2.ppk_type pkgType, t2.awb_content cont, t3.rcl_pcs rclPc,
		t3.rcl_wt rclWt, t1.wt retWt,
		t1.pcs retPc, to_char(t2.rcl_date,'DDMONYY HH24:MI')
		rclIssueDate,to_char(t1.cr_date,'DDMONYY HH24:MI')retDate,
		t1.AGENT_NAME agtName,t1.receiver_id hkid,t3.cc_code latestCC,
		t1.SHIPPER_NAME shiprName,
		t4.co_iata_code iataCode,t1.truck_no truckNo,t1.rmk remarks , t1.receiver_name as
		recname

		from exp_rtn_hd t1, exp_rcl_hd t2, awb t3, cust_company t4, cust_company
		t5
		where t1.rcl_no = t2.rcl_no and t2.awb_no = t3.awb_no and
		trunc(t2.awb_date) = trunc(t3.awb_date)
		and t1.agent_id = t4.code (+)
		and t1.shipper_id = t5.code (+) and t1.srf_no =#s_srfNo#
   	</select>

	<select id="exp_rept_112_strgdtls" parameterClass="cargo.cms.export.report.bo.ReturnCargoSRFRept_112BO"
		resultClass="cargo.cms.export.report.bo.ReturnCargoSRFRept_112BO">

		select #s_srfNo# as s_srfNo,
		wh_dest whDest, loc_code Locn, uld_key uldNo, lsp_no lspNo, pcs rclPcs, wt
		rclWts
		from exp_rtn_dtl where srf_no =#s_srfNo#

 	</select>

	<select id="exp_rept_100" parameterClass="cargo.cms.export.report.bo.ReturnCargoSRFRept_112BO"
		resultClass="cargo.cms.export.report.bo.ReturnCargoSRFRept_112BO">
			 SELECT T.*,
		 case when (t.srfNo is not null or  t.uldSrfNo is not null) then T.strgAmt1 else pkg_exp_billing.get_return_storage_amt(T.rtnNo,NULL) end strgChrg,
		 <!-- (SELECT SUM(WAVR_AMT) FROM bill_waive_charge bill
							 WHERE	
							 NVL(bill.AWB_NO,'*') = NVL(T.awbNo1,'*') 
							 and NVL(bill.AWB_DATE,'12JAN2000') = NVL(T.awbDate,'12JAN2000') 
							 and bill.ITM_CODE = 'SCEXPO'
							 and NVL(CHARGE_CREATED,'N') = 'N' ) wCharge1,-->
		 <![CDATA[
		 (SELECT SUM(WAVR_AMT) FROM BILL_CHARGE_DTL bill
							 WHERE TR_NO in  (select regexp_substr(T.rtnChrgTrNo,'[^,]+', 1, level) from dual connect by regexp_substr(T.rtnChrgTrNo, '[^,]+', 1, level) is not null)
							AND STATUS <>'VOID') waivedAmt,
		 ]]>
		 decode((SELECT count(1) FROM BILL_CHARGE_DTL bill
							 WHERE
							 NVL(bill.AWB_NO,'*') = NVL(T.awbNo1,'*') 
							 and NVL(bill.AWB_DATE,'12JAN2000') = NVL(T.awbDate,'12JAN2000') 
							 and NVL(bill.ULD_KEY,'*') = NVL(T.uldKey,'*')
							 and bill.ITM_CODE = 'SCEXPO'),0,'N','Y' )chargeCreated,
		case when (t.srfNo is not null or  t.uldSrfNo is not null) then decode((SELECT count(1) FROM BILL_CHARGE_DTL bill
							 WHERE TR_NO in (select regexp_substr(T.rtnChrgTrNo,'[^,]+', 1, level) from dual connect by regexp_substr(T.rtnChrgTrNo, '[^,]+', 1, level) is not null) AND bill.STATUS = 'PENDING' and bill.net_amt > 0),0,'N','Y' )
							 else case when pkg_exp_billing.get_return_storage_amt(T.rtnNo,NULL) > 0 then 'Y' else 'N' end end  paidYn 		
		FROM (SELECT RCL.CARR_CODE carrCode,
        (SELECT CODE_DESC FROM CUST_COMPANY WHERE CODE = NVL(RCL.CUST_NO,AWB.AGENT_CODE)) agtName ,
        RTN_HD.ULD_KEY  uldKey,
        RTN_HD.RTN_NO rtnNo,
        (select imp.srf_no from imp_srf imp where imp.srf_no = RTN_HD.srf_no  and ((SRF_EXPY_DATE > sysdate and STATUS ='ISSUED') or STATUS ='POSTED'))  srfNo,
      	decode(RTN_HD.ULD_KEY,null,'',RTN_HD.SRF_NO) uldSrfNo,
        to_char(RTN_HD.CR_DATE, 'DDMONYY') retDt,
        RTN_HD.DEL_YN deleteYN,
      	substr(RTN_HD.AWB_NO,0,3) as awbNoPfx,
        substr(RTN_HD.AWB_NO,4) as awbNoSfx,
        RTN_HD.AWB_NO awbNo1,	
        to_char(RTN_HD.AWB_DATE, 'DDMONYY') awbDate,					
        (SELECT cc_code FROM V_CST_IMP_CC_CODE  WHERE AWB_NO=RTN_HD.AWB_NO  and rownum = 1) as latestCC,		   
        (SELECT MIN(A.RCL_NO) FROM EXP_RCL_HD A
        		JOIN EXP_RTN_RCL B ON A.RCL_NO = B.RCL_NO 
        		WHERE NVL(A.AWB_NO,'*') = NVL(RTN_HD.AWB_NO,'*') AND NVL(A.AWB_DATE,'12MAR2000') = NVL(RTN_HD.AWB_DATE,'12MAR2000') AND NVL(A.ULD_KEY,'*') = NVL(RTN_HD.ULD_KEY,'*') AND B.RTN_NO = RTN_HD.RTN_NO) rclNo, 
        RCL.RCL_PCS rclPc,
        RCL.RCL_WT rclWt,
        decode(RCL.RCL_RTN_PC,NULL,'0',RCL.RCL_RTN_PC) retPc, 
        decode(RCL.RCL_RTN_WT,NULL,'0.0',RCL.RCL_RTN_WT) retWt,
        RTN_HD.CONFIRM_YN confirmYN,
        STRG_AMT strgAmt1,
        (SELECT SUM(WAVR_AMT) FROM BILL_CHARGE_DTL WHERE TR_NO IN RTN_HD.CHRG_TR_NO) waivAmt1,
        RTN_HD.CHRG_TR_NO  rtnChrgTrNo
        FROM EXP_RTN_HD RTN_HD
        JOIN 
        (SELECT RCL_HD.CARR_CODE ,RCL_HD.CUST_NO, RCL_HD.AWB_NO , RCL_HD.AWB_DATE ,RCL_HD.ULD_KEY , SUM(RCL_RTN_PC) RCL_RTN_PC, SUM(RCL_RTN_WT) RCL_RTN_WT , SUM(RCL_PCS) RCL_PCS , SUM(RCL_WT) RCL_WT ,RTN_RCL.RTN_NO
        FROM EXP_RTN_RCL RTN_RCL  JOIN EXP_RCL_HD  RCL_HD ON  RTN_RCL.RCL_NO = RCL_HD.RCL_NO
        group by RCL_HD.CARR_CODE, RCL_HD.CUST_NO, RCL_HD.AWB_NO, RCL_HD.AWB_DATE, RCL_HD.ULD_KEY,RTN_RCL.RTN_NO) RCL
        ON NVL(RCL.AWB_NO,'*') = NVL(RTN_HD.AWB_NO,'*')  AND NVL(RCL.AWB_DATE,'12MAR2000') = NVL(RTN_HD.AWB_DATE,'12MAR2000') AND NVL(RCL.ULD_KEY,'*') =  NVL(RTN_HD.ULD_KEY,'*') AND RTN_HD.RTN_NO = RCL.RTN_NO
        LEFT JOIN AWB ON RTN_HD.AWB_NO = AWB.AWB_NO AND RTN_HD.AWB_DATE = AWB.AWB_DATE
		WHERE  to_char(RTN_HD.cr_date, 'DDMONYY') between to_date(#fromDate#, 'DDMONYY') AND to_date(#toDate#, 'DDMONYY')
		UNION ALL
    SELECT RCL.CARR_CODE carrCode,
        (SELECT CODE_DESC FROM CUST_COMPANY WHERE CODE = NVL(RCL.CUST_NO,AWB.AGENT_CODE)) agtName ,
        RTN_HD.ULD_KEY  uldKey,
        RTN_HD.RTN_NO rtnNo,
        (select imp.srf_no from imp_srf imp where imp.srf_no = RTN_HD.srf_no  and ((SRF_EXPY_DATE > sysdate and STATUS ='ISSUED') or STATUS ='POSTED'))  srfNo,
      	decode(RTN_HD.ULD_KEY,null,'',RTN_HD.SRF_NO) uldSrfNo,
        to_char(RTN_HD.CR_DATE, 'DDMONYY') retDt,
        RTN_HD.DEL_YN deleteYN,
      	substr(RTN_HD.AWB_NO,0,3) as awbNoPfx,
        substr(RTN_HD.AWB_NO,4) as awbNoSfx,
        RTN_HD.AWB_NO awbNo1,	
        to_char(RTN_HD.AWB_DATE, 'DDMONYY') awbDate,					
        (SELECT cc_code FROM V_CST_IMP_CC_CODE  WHERE AWB_NO=RTN_HD.AWB_NO  and rownum = 1) as latestCC,		   
        (SELECT MIN(A.RCL_NO) FROM EXP_RCL_DTL A
        	 JOIN EXP_RTN_RCL B	 ON A.RCL_NO = B.RCL_NO
        	  WHERE  A.ULD_KEY = RTN_HD.ULD_KEY AND B.RTN_NO = RTN_HD.RTN_NO) rclNo, 
        RCL.RCL_PCS rclPc,
        RCL.RCL_WT rclWt,
        decode(RCL.RCL_RTN_PC,NULL,'0',RCL.RCL_RTN_PC) retPc, 
        decode(RCL.RCL_RTN_WT,NULL,'0.0',RCL.RCL_RTN_WT) retWt,
        RTN_HD.CONFIRM_YN confirmYN,
 		STRG_AMT strgAmt1,
        (SELECT SUM(WAVR_AMT) FROM BILL_CHARGE_DTL WHERE TR_NO IN RTN_HD.CHRG_TR_NO) waivAmt1,
        RTN_HD.CHRG_TR_NO  rtnChrgTrNo
        FROM EXP_RTN_HD RTN_HD
        JOIN 
        ( SELECT RCL_HD.CARR_CODE ,RCL_HD.CUST_NO,RCL_DTL.ULD_KEY , SUM(RCL_RTN_PC) RCL_RTN_PC, SUM(RCL_RTN_WT) RCL_RTN_WT , SUM(RCL_DTL.PCS) RCL_PCS , SUM(NET_WT) RCL_WT,
        HD.RTN_NO RTN_NO
        FROM EXP_RTN_HD HD
        JOIN EXP_RTN_RCL RTN_RCL  ON HD.RTN_NO = RTN_RCL.RTN_NO
        JOIN EXP_RCL_HD  RCL_HD ON  RTN_RCL.RCL_NO = RCL_HD.RCL_NO
        JOIN EXP_RCL_DTL RCL_DTL ON RCL_HD.RCL_NO = RCL_DTL.RCL_NO AND HD.ULD_KEY = RCL_DTL.ULD_KEY
        WHERE RCL_DTL.PPK_TYPE = 'P'
        GROUP BY RCL_HD.CARR_CODE, RCL_HD.CUST_NO, RCL_DTL.ULD_KEY, HD.RTN_NO) RCL
        ON RCL.ULD_KEY =  RTN_HD.ULD_KEY  AND RTN_HD.RTN_NO = RCL.RTN_NO
        LEFT JOIN AWB ON RTN_HD.AWB_NO = AWB.AWB_NO AND RTN_HD.AWB_DATE = AWB.AWB_DATE
		WHERE  to_char(RTN_HD.cr_date, 'DDMONYY') between to_date(#fromDate#, 'DDMONYY') AND to_date(#toDate#, 'DDMONYY'))T
		WHERE 1 = 1
		<isNotEmpty property="scarrier">
				AND	T.carrCode = #scarrier#
		</isNotEmpty>
		
		<isEmpty property="scarrier">
				<isNotEmpty property="loginCarrier">
				   AND ( T.carrCode = #loginCarrier#
                        OR  T.carrCode IN (SELECT CARR_CODE FROM MAST_CARR_GRP 
                        WHERE GRP_CARR_CODE  = #loginCarrier#))             
            	</isNotEmpty>
        </isEmpty>	
		
		<isNotEmpty property="sagentName">
				AND	T.agtName = #sagentName#
		</isNotEmpty>
		
	</select>

	<!-- Added by swapna for List/Print Return Cargo:End-->

	<!-- Added by Manorama for Maintain Security job order::: Starts -->
	<select id="getreportJobOrderList" parameterClass="cargo.cms.export.report.bo.SecCheckJobOrder_BO536"
		resultClass="cargo.cms.export.report.bo.SecCheckJobOrder_BO536">
	select 
      jo.JO_NO joNumber,jo.AWB_NO awbNo,
      substr(jo.AWB_NO,0,3) as awbPfx,
      substr(jo.AWB_NO,4) as awbSfx,
      TO_CHAR(jo.AWB_DATE,'DDMONYY') awbDate,jo.PC pc,jo.JO_TYPE jobOrderType,jo.WT wt,
      jo.STATUS joStatus,jo.CHARGE_TO chargeTo, TO_CHAR(jo.FLT_DATE,'DDMONYY') fltDate,jo.FLT_KEY fltKey,
      TO_CHAR(jo.LM_DATE , 'DDMONYY HH24:MI:SS') AS lastModDate,
      (SELECT distinct (LOC_CODE || decode(LSP_NO,null,decode(uld_key,null,'','/'),'/')|| NVL(lsp_no, uld_key)) locnLspUld from AWB_INVENTORY              
    where AWB_NO = #awbNo# 
    ) as locn,
      car.HLDG_PERIOD hldgHours  
      from EXP_SEC_CHK_JO jo
      JOIN EXP_CAR car ON car.AWB_NO = jo.AWB_NO AND car.AWB_DATE = jo.AWB_DATE
	where			
			<isEmpty property="fltDate">
				jo.CR_DATE BETWEEN TO_DATE(#joCrtDateFrom#, 'DDMONYY') AND TO_DATE(#joCrtDateTo#, 'DDMONYY')+1
			</isEmpty>
			<isNotEmpty property="fltDate">
				jo.FLT_DATE = TO_DATE(#fltDate#,'DDMONYY')
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="joNumber">
				jo.JO_NO = #joNumber#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="jobOrderType">
				jo.JO_TYPE = #jobOrderType#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="joStatus">			
				<isEqual compareValue="Completed" property="joStatus">
					jo.STATUS = 'Completed'
				</isEqual>
				<isNotEqual compareValue="Completed" property="joStatus">			
					jo.STATUS !='Completed'
				</isNotEqual>				
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="awbNo">
				jo.AWB_NO = #awbNo#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="fltKey">
				jo.FLT_KEY = #fltKey#
			</isNotEmpty>		
	</select>
	<select id="getreportJobOrderDetail" parameterClass="cargo.cms.export.report.bo.SecCheckJobOrder_BO536"
		resultClass="cargo.cms.export.report.bo.SecCheckJobOrder_BO536">
		select
		dtl.JO_NO joNumber,dtl.JO_TYPE jobOrderType,dtl.SEC_CHK secCheck,dtl.PC pc,
		dtl.WT wt, dtl.REF_NO refNo,
		dtl.RESULT joResult,dtl.SC_RMK rmk, 'N' newRecord,
		car.HLDG_PERIOD hldgHours, TO_CHAR(dtl.LM_DATE , 'DDMONYY HH24:MI:SS') AS lastModDate
		from EXP_SEC_CHK_JO_DTL dtl
		JOIN EXP_SEC_CHK_JO jo ON jo.JO_NO = dtl.JO_NO AND jo.JO_TYPE =
		dtl.JO_TYPE
		JOIN EXP_CAR car ON car.AWB_NO = jo.AWB_NO AND car.AWB_DATE = jo.AWB_DATE
		where dtl.JO_NO = #joNumber#
		and dtl.JO_TYPE = #jobOrderType#	

</select>
	<!-- Added by Manorama for Maintain Security job order::: Ends -->

	<!-- Added by Surendra Gollaplli on 3rd May 2011 START-->
	<select id="exp_rept_030_hdr" parameterClass="cargo.cms.export.report.bo.CreatemRCLHdrReptBO"
		resultClass="cargo.cms.export.report.bo.CreatemRCLHdrReptBO">
		<![CDATA[
						
					select	 #srclNo#	as srclNo,
										gross_wt as grossWt,									
										CASE WHEN PPK_TYPE ='B' THEN 'Bulk'
												  WHEN PPK_TYPE ='P' THEN 'Prepack'
												  WHEN PPK_TYPE ='M' THEN 'Mix Prepack'
										END as type, 
										CARR_CODE as carr,
										AWB_DEST as dest, 
										ULD_KEY as uldNo, 
										CONTR_CODE as contrCode,
										TTL_PCS as pcs,
										SUBSTR(AWB_NO,1,3)||'-'||SUBSTR(AWB_NO,4) as awbNo,  
										CASE	WHEN QCP_IND ='Y' THEN 'Yes'
													WHEN QCP_IND ='N' THEN 'No'											 
										END as qcpIndicator,										 
										TTL_WT as netwt,
										RMK as remarks, 
										TRUCK_NO1 as truckNo1,
										TRUCK_NO2 as truckNo2,
										TRUCK_NO3 as truckNo3,
										TRUCK_NO4 as truckNo4,
										TRUCK_NO5 as truckNo5,
										CONTENT as cont,
                     					 CR_USER_ID as prtBy,
                     					 TO_CHAR(sysdate,'DDMONYYYY HH24:MI') as  printDate
											FROM EXP_PRE_RCL_HD 
											WHERE PRE_RCL_NO  =#srclNo#								
  
							
			]]>
	</select>
	<select id="exp_rept_030_dtl" parameterClass="cargo.cms.export.report.bo.CreatemRCLHdrReptBO"
		resultClass="cargo.cms.export.report.bo.CreatemRCLHdrReptBO">
		<![CDATA[
							SELECT  row_number() over (order by PRE_RCL_NO) serialNo,
												LENGTH as length,
												width as width, 
												height as height, 
												pcs as d_pieces												
												FROM EXP_PRE_RCL_DMN 
												where pre_rcl_no  = #srclNo#							
			]]>
	</select>
	<!-- Added by Surendra Gollaplli on 3rd May 2011 END-->

	
	
	
	<!-- Added by Surendra Gollaplli on 5th May 2011 START-->
	<select id="exp_rept_032_dtl"  parameterClass="cargo.cms.export.report.bo.CreatemRCLHdrReptBO"  resultClass="cargo.cms.export.report.bo.CreatemRCLHdrReptBO">
		<![CDATA[
					select 
									row_number() over (order by PRE_RCL_NO) serialNo,	
									CONCAT(CONCAT(SUBSTR(AWB_NO,0,3),'-'),SUBSTR(AWB_NO,4)) as mixawbNo,
									DEST as mixdest, 
									PCS as mixpcs,
									WEIGHT as mixwt,
									CASE WHEN QCP_IND ='Y' THEN 'Y' 
									WHEN QCP_IND ='N' THEN 'N' END as qcpInd,
									qcp_goods_desc as cont
									from exp_pre_rcl_brkdn 
							  WHERE pre_rcl_no  = #srclNo#			
			]]>
	</select>
	
		<select id="exp_rept_uld_manf_032_dtl"  parameterClass="cargo.cms.export.report.bo.CreatemRCLHdrReptBO"  resultClass="cargo.cms.export.report.bo.CreatemRCLHdrReptBO">
		<![CDATA[
					select  DISTINCT awb_no as awbNo,pre_rcl_no as 	srclNo											
									from exp_pre_rcl_uld_manf 
							   WHERE pre_rcl_no  = #srclNo#		
							 	
			]]>
	</select>
	
	<select id="exp_rept_uld_manf_032_house_dtl"  parameterClass="cargo.cms.export.report.bo.CreatemRCLHdrReptBO"  resultClass="cargo.cms.export.report.bo.CreatemRCLHdrReptBO">
		<![CDATA[
		
		 select  
				  SUBSTR(#awbNo#,1,3)||'-'||SUBSTR(#awbNo#,4) as awbNoDis,
				  #awbNo# as awbNo,
		 		 #serialNo# as serialNo,		  
		 		sum(pc) as pcs,
		 		trim(to_char(sum(wt),'9999999.99')) as netwt,		            
                 sum(pc) || '/' ||  trim(to_char(sum(wt),'9999999.99')) as totalPcWt								
									from exp_pre_rcl_uld_manf 							  
                 WHERE awb_no  = #awbNo# and pre_rcl_no  = #srclNo#	
			]]>
	</select>
	
	<select id="exp_rept_uld_manf_hawb_dtl"  parameterClass="cargo.cms.export.report.bo.CreatemRCLHdrReptBO"  resultClass="cargo.cms.export.report.bo.CreatemRCLHdrReptBO">
		<![CDATA[		
		 select   awb_no as awbNo,           
                  hawb_no as hawbNo,
                  pc || '/' ||  trim(to_char(wt,'9999999.99')) as hawbTolPcWt
									from exp_pre_rcl_uld_manf 							  
                 WHERE awb_no  =#awbNo# and pre_rcl_no  = #srclNo#	
			]]>
	</select>
	
	<select id="exp_rept_uld_hawb_dtl"  parameterClass="cargo.cms.export.report.bo.CreatemRCLHdrReptBO"  resultClass="cargo.cms.export.report.bo.CreatemRCLHdrReptBO">
		<![CDATA[		
		select              
		      #hawbNo# as hawbNo,
		     #hawbTolPcWt# as hawbTolPcWt,
		      hawb_org || '/' ||  hawb_dest as dest 		     
			from edi_fhl fhl, edi_fhl_hawb hawb 	 						  
		     WHERE fhl.tr_no = hawb.tr_no and hawb_no  =#hawbNo# and awb_no  =#awbNo#
			]]>
	</select>
	
	
	
	<!-- Added by Surendra Gollaplli on 5th May 2011 END-->

	<!-- Aded by Manorama for Document Acceptance List 537:::Starts -->
		<select id="exp_rept_537" parameterClass="cargo.cms.export.report.bo.DocumentAccpList_537BO" resultClass="cargo.cms.export.report.bo.DocumentAccpList_537BO">
  		 <![CDATA[
			  SELECT DISTINCT 
			  awb.awb_No AS awbNo,
			  to_char(awb.awb_Date,'DDMONYY')               AS awbDate,
			  DECODE (
			  (SELECT COUNT(1) FROM Exp_Rcl_Hd Eh WHERE Eh.Ppk_Type IN ('P','B')
			  AND Eh.Awb_No                                          = Awb.Awb_No
			  AND Eh.Awb_Date                                        = TO_CHAR(Awb.Awb_Date, 'DDMONYY')
			  AND Eh.Status                                         != 'V'
			  )             +
			  (SELECT COUNT(1)
			  FROM EXP_RCL_HD EH,
			    EXP_RCL_BRKDN BRK
			  WHERE Eh.Rcl_No  = Brk.Rcl_No
			  AND EH.PPK_TYPE  = 'M'
			  AND Brk.Awb_No   = awb.awb_no
			  AND Brk.Awb_Date = TO_CHAR(Awb.Awb_Date, 'DDMONYY')
			  AND Eh.Status   != 'V'
			  ) ,'0','N','Y') AS rclIssued,
			  awb.docacc_user AS docAccUserId,
			  awb.docacc_date AS docAccDate,
			  awb.orig        AS origin,
			  awb.car_yn      AS car,
			  awb.dest        AS dest,
			  awb.awb_type    AS awbType,
			  DECODE(awb.spl_code1, NULL, '', awb.spl_code1)
			  || DECODE(awb.spl_code2, NULL, '', ','
			  || awb.spl_code2)
			  || DECODE(awb.spl_code3, NULL, '', ','
			  || awb.spl_code3)
			  || DECODE(awb.spl_code4, NULL, '', ','
			  || awb.spl_code4)
			  || DECODE(awb.spl_code5, NULL, '', ','
			  ||awb.spl_code5)
			  || DECODE(awb.spl_code6, NULL, '', ','
			  || awb.spl_code6)
			  || DECODE(awb.spl_code7, NULL, '', ','
			  || awb.spl_code7)
			  || DECODE(awb.spl_code8, NULL, '', ','
			  || awb.spl_code8)
			  || DECODE(awb.spl_code9, NULL, '', ','
			  || awb.spl_code9) AS splCodes,
			  DECODE(awb.DOCACC_YN,'N','N','Y') AS intYesNo,
			  CASE
			    WHEN y.code is not null 
               		AND add_months(nvl(y.valid_date, to_date('01JAN01', 'DDMONYY')),
                         (select ctry.shipper_validity_yrs  from mast_city cty 
                           join mast_country ctry  on ctry.code = cty.ctry_code 
                           where cty.code=awb.dest)*12) >= awb.awb_date
               		AND PKG_COMMON.get_shipper_two_years_fhl(awb.awb_no,awb.awb_date) = 'Y'
			    THEN 'Y'
			    ELSE 'N'
			  END AS shpr2Yrs,
			  (SELECT DECODE (COUNT(fhl.awb_no),0,'N','Y')
			  FROM edi_fhl fhl
			  WHERE awb.awb_no=fhl.awb_no
			  AND awb.awb_date=fhl.awb_date
			  )AS fhl,
			  (SELECT DECODE(COUNT(fwb.awb_no),0,'N','Y')
			  FROM edi_fwb fwb
			  WHERE awb.awb_no=fwb.awb_no
			  AND awb.awb_date=fwb.awb_date
			  )AS fwb,
			  (SELECT DECODE(COUNT(fbl.awb_no),0,'N','Y')
			  FROM edi_fbl_shp fbl
			  JOIN edi_fbl ef
			  ON fbl.tr_no     =ef.tr_no
			  AND ef.fbl_status='P'
			  WHERE awb.awb_no =fbl.awb_no
			  AND awb.awb_date =fbl.awb_date
			  )AS fbl,
			  (SELECT DECODE(COUNT(recd.awb_no),0,'N','Y')
			  FROM exp_doc_recd recd
			  WHERE awb.awb_no=recd.awb_no
			  AND awb.awb_date=recd.awb_date
			  AND awb_frz_yn  ='Y'
			  )AS docRecv,
			  (SELECT DECODE(COUNT(pman.awb_no),0,'N','Y')
			  FROM (select pma.awb_no, pma.awb_date from exp_pmanifest_awb pma
			  		union
			  		select pta.awb_no, pta.awb_date from exp_pman_tarmac_awb pta) pman
			  WHERE awb.awb_no=pman.awb_no
			  AND awb.awb_date=pman.awb_date
			  )AS preMan,
			  (SELECT DECODE(COUNT(inv.awb_no),0,'N','Y')
			  FROM awb_inventory inv
			  WHERE awb.awb_no=inv.awb_no
			  AND awb.awb_date=inv.awb_date
			  )AS inv,
			 (SELECT DECODE(COUNT(bill.awb_no),0,'Y','N') FROM bill_charge_dtl bill WHERE awb.awb_no =bill.awb_no AND awb.awb_date = bill.awb_date AND bill.Status  ='PENDING'
					     AND bill.net_amt > 0) AS PYMNT,
					  pkg_exp_rpt.fun_get_sc(awb.awb_no, awb.awb_date,'SC')  AS SECCHK,
					  pkg_exp_rpt.fun_get_sc(awb.awb_no, awb.awb_date,'TSA') AS TSASECCHK,
					  awb.PCS awbPcs,
            		  awb.WT awbWt,
            		  awb.CONTENT content
			FROM AWB awb
			LEFT JOIN EXP_CAR EC ON ec.awb_no = awb.awb_no and ec.awb_date = awb.awb_date
			LEFT JOIN cust_company y ON (y.code = ec.shipper_code or y.code_desc = ec.shpr_name)
			]]>
			WHERE trunc(awb.cr_date) BETWEEN TO_DATE(#frmDate#,'DDMONYY') and TO_DATE(#toDate#,'DDMONYY') and awb.awb_type IN ('E','T')
			<isNotEmpty property="loginCarrier">    
				      and  (awb.CARR_CODE = #loginCarrier# OR awb.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE = #loginCarrier#))    
			</isNotEmpty> 
			order by 1	
	</select>

	<select id="exp_rept_537_flt_sch" parameterClass="cargo.cms.export.report.bo.DocumentAccpList_537BO" resultClass="cargo.cms.export.report.bo.DocumentAccpList_537BO">
		<![CDATA[
		  SELECT DECODE(awb.spl_code1, NULL, '', awb.spl_code1)
		  || DECODE(awb.spl_code2, NULL, '', ','
		  || awb.spl_code2)
		  || DECODE(awb.spl_code3, NULL, '', ','
		  || awb.spl_code3)
		  || DECODE(awb.spl_code4, NULL, '', ','
		  || awb.spl_code4)
		  || DECODE(awb.spl_code5, NULL, '', ','
		  ||awb.spl_code5)
		  || DECODE(awb.spl_code6, NULL, '', ','
		  || awb.spl_code6)
		  || DECODE(awb.spl_code7, NULL, '', ','
		  || awb.spl_code7)
		  || DECODE(awb.spl_code8, NULL, '', ','
		  || awb.spl_code8)
		  || DECODE(awb.spl_code9, NULL, '', ','
		  || awb.spl_code9) AS splCodes,
		  awb.awb_no           AS awbNo,
		  to_char(awb.awb_date,'DDMONYY')               AS awbDate,
		 DECODE (
		  (SELECT COUNT (*) FROM exp_rcl_hd r WHERE r.awb_no=awb.awb_no
		  AND r.awb_date                                    = awb.awb_date
		  AND r.Status!                                     = 'V'
		  )             +
		  (SELECT COUNT(1)
		  FROM EXP_RCL_HD EH,
		    EXP_RCL_BRKDN BRK
		  WHERE Eh.Rcl_No  = Brk.Rcl_No
		  AND EH.PPK_TYPE  = 'M'
		  AND Brk.Awb_No   = awb.awb_no
		  AND Brk.Awb_Date = TO_CHAR(Awb.Awb_Date, 'DDMONYY')
		  AND Eh.Status   != 'V'
		  ) ,'0','N','Y') AS rclIssued,
		  awb.docacc_user AS docAccUserId,
		  awb.docacc_date AS docAccDate,
		  awb.orig        AS origin,
		  awb.car_yn      AS car,
		  awb.dest        AS dest,
		  awb.awb_type    AS awbType,
		  (SELECT STRAGG(STRINGDELIM(SHC, ',')) AS SHCS
		  FROM
		    (SELECT DISTINCT awb_date,
		      awb_no,
		      PRIORITY,
		      SHC
		    FROM V_IMP_FLT_ULD_SHC
		    ORDER BY PRIORITY DESC
		    )
		  WHERE awb_no = awb.awb_no
		  AND awb_date = awb.awb_date
		  AND ROWNUM < 10
		  )                                                                                                                                                                                   AS splHandlingCode,
		  DECODE(awb.DOCACC_YN,'N','N','Y') AS intYesNo,
		  CASE
		  	 WHEN y.code is not null 
               		AND add_months(nvl(y.valid_date, to_date('01JAN01', 'DDMONYY')),
                         (select ctry.shipper_validity_yrs  from mast_city cty 
                           join mast_country ctry  on ctry.code = cty.ctry_code 
                           where cty.code=awb.dest)*12) >= awb.awb_date
               		AND PKG_COMMON.get_shipper_two_years_fhl(awb.awb_no,awb.awb_date) = 'Y'	    
		    THEN 'Y'
		    ELSE 'N'
		  END AS shpr2Yrs,
		  (SELECT DECODE (COUNT(fhl.awb_no),0,'N','Y') FROM edi_fhl fhl  WHERE awb.awb_no=fhl.awb_no AND awb.awb_date=fhl.awb_date)AS fhl,
		  (SELECT DECODE(COUNT(fwb.awb_no),0,'N','Y')  FROM edi_fwb fwb	  WHERE awb.awb_no=fwb.awb_no  AND awb.awb_date=fwb.awb_date)AS fwb,
		  (SELECT DECODE(COUNT(fbl.awb_no),0,'N','Y')  FROM edi_fbl_shp fbl  JOIN edi_fbl ef  ON fbl.tr_no     =ef.tr_no  AND ef.fbl_status='P'  WHERE awb.awb_no =fbl.awb_no
		 	 AND awb.awb_date =fbl.awb_date)AS fbl,
		  DECODE(awb.catalog,'TA','NA',(SELECT DECODE(COUNT(recd.awb_no),0,'N','Y') FROM exp_doc_recd recd WHERE awb.awb_no=recd.awb_no AND awb.awb_date=recd.awb_date AND awb_frz_yn  ='Y'))AS docRecv,
		  (SELECT DECODE(COUNT(pman.awb_no),0,'N','Y') FROM (select pma.awb_no, pma.awb_date from exp_pmanifest_awb pma 
		  													 union 
		  													 select pta.awb_no, pta.awb_date from exp_pman_tarmac_awb pta) pman 
		  											   WHERE awb.awb_no=pman.awb_no AND awb.awb_date=pman.awb_date)AS preMan,
		  (SELECT DECODE(COUNT(inv.awb_no),0,'N','Y')  FROM awb_inventory inv WHERE awb.awb_no=inv.awb_no AND awb.awb_date=inv.awb_date)AS inv,
		  (SELECT DECODE(COUNT(bill.awb_no),0,'Y','N') FROM bill_charge_dtl bill WHERE awb.awb_no =bill.awb_no AND awb.awb_date = bill.awb_date AND bill.Status  ='PENDING'
		     AND bill.net_amt > 0) AS PYMNT,
		  pkg_exp_rpt.fun_get_sc(awb.awb_no, awb.awb_date,'SC')  AS SECCHK,
		  pkg_exp_rpt.fun_get_sc(awb.awb_no, awb.awb_date,'TSA') AS TSASECCHK,
		  awb.PCS awbPcs,
          awb.WT awbWt,
          awb.CONTENT content
		FROM AWB awb 
		LEFT JOIN EXP_CAR EC ON ec.awb_no = awb.awb_no and ec.awb_date = awb.awb_date
		LEFT JOIN cust_company y ON (y.code = ec.shipper_code or y.code_desc = ec.shpr_name)
		WHERE (awb.awb_no,awb.awb_date) in(
		  SELECT PAWB.AWB_NO,PAWB.AWB_DATE FROM EXP_PMANIFEST_AWB PAWB WHERE PAWB.flt_date = TO_DATE(#flightDate#,'DDMONYY') AND  PAWB.flt_key   = concat(#flightCarr#,#flightNo#)
		   GROUP BY PAWB.AWB_NO,PAWB.AWB_DATE 
         UNION ALL
		  SELECT TAWB.AWB_NO,TAWB.AWB_DATE FROM exp_pman_tarmac_awb TAWB WHERE TAWB.flt_date = TO_DATE(#flightDate#,'DDMONYY') AND TAWB.flt_key   = concat(#flightCarr#,#flightNo#)
		  GROUP BY TAWB.AWB_NO,TAWB.AWB_DATE)
      	ORDER BY 2
      	]]>		
    </select>
	<!-- Added by Manorama for Document Acceptance List 537::: Ends -->
	
	<select id="exp_rept_167"  parameterClass="cargo.cms.export.report.bo.CargoInvListRept_167BO"  resultClass="cargo.cms.export.report.bo.CargoInvListRept_167BO">

		 SELECT CONCAT(CONCAT(SUBSTR(GT.AWB_NO,0,3),'-'),SUBSTR(GT.AWB_NO,4))awbNo1,
		  GT.AWB_NO awbNo                                                       ,
		  GT.AWB_DATE awbDate                                                   ,
		  GT.DEST dest                                                          ,
		  GT.CONTENT content                                                    ,
		  GT.SPL_CODE splCode                                                   ,
		  ROUND(TO_CHAR(GT.RCL_WT,'999999999999.99'),1) rclWt                   ,
		  GT.RCL_PCS rclPc                                                      ,
		  ROUND(TO_CHAR(GT.INV_WT,'999999999999.99'),1) strgWt                  ,
		  GT.INV_PCS strgPc                                                     ,
		  GT.LOCN_INFO whLocn                                                   ,
		  GT.LSP_INFO lspNo                                                     ,
		  GT.ULD_INFO uldKey                                                    ,
		  GT.NON_PMAN_PCS nonPmfstPc                                            ,
		  ROUND(TO_CHAR(GT.NON_PMAN_WT,'9999999999999.99'),1) nonPmfstWt        ,
		  GT.FBL_YN fbl                                                         ,
		  GT.PMAN_YN pmfst                                                      ,
		  GT.OFFLOAD_YN ofId                                                    ,
		  GT.SC_YN sc                                                           ,
		  GT.SC_HOLD_YN h                                                       ,
		  DECODE(
		  (SELECT COUNT(*) FROM AWB WHERE awb_no = GT.AWB_NO
		  AND awb_date                           = GT.AWB_DATE
		  AND CAR_YN                             = 'Y'
		  AND PMAN_PCS                           > 0
		  AND PCS                                > PMAN_PCS
		  ),0,'N','Y') prtShpInd                                             ,
		  GT.CAR_YN carInd                                                      ,
		  GT.TRANS_SHIP_CODE trnshp                                             ,
		  NVL(CAR.LOCK_IND,GT.LOCKED_YN) cl,
		  (DECODE((select count(1) from EXP_CAR where awb_no = GT.awb_no and awb_date=GT.awb_date and rownum=1),0,
      			(DECODE((select rmk from awb_rmk where awb_no=GT.awb_no and rownum=1),NULL,
      			(select AIRLN_RMK from awb where awb_no = GT.awb_no and awb_date=GT.awb_date and rownum=1),(select rmk from awb_rmk where awb_no=GT.awb_no and rownum=1))),
      			DECODE((select AIRL_RMK from EXP_CAR where awb_no = GT.awb_no and awb_date=GT.awb_date and rownum=1),NULL,(select AIRLN_RMK from awb where awb_no = GT.awb_no and awb_date=GT.awb_date and rownum=1),
      			(select AIRL_RMK from EXP_CAR where awb_no = GT.awb_no and awb_date=GT.awb_date and rownum=1)))) AS airlRmk,
				(DECODE((select count(1) from EXP_CAR where awb_no = GT.awb_no and awb_date=GT.awb_date and rownum=1),0,(select AWB_RMK from awb where awb_no=GT.awb_no and awb_date=GT.awb_date and rownum=1),(select WH_RMK from EXP_CAR where awb_no = GT.awb_no and awb_date=GT.awb_date and rownum=1))) AS whRmk,
		 CASE WHEN GT.FLT_KEY IS NOT NULL THEN (GT.FLT_KEY || '/' || to_char(GT.FLT_DATE,'DDMONYY') )
			 ELSE '' END as bookingFlight,
		 CASE WHEN GT.FLT_KEY IS NOT NULL THEN DECODE( PKG_COMMON.get_flt_eta(GT.FLT_KEY, GT.FLT_DATE, 'D', 'DD') , null , PKG_COMMON.get_flt_sta(GT.FLT_KEY, GT.FLT_DATE, 'D', 'DD') , PKG_COMMON.get_flt_eta(GT.FLT_KEY, GT.FLT_DATE, 'D', 'DD') ) 
        	 ELSE '' END as etd
		  FROM GT_EXP_LYING_LIST GT
		  LEFT JOIN EXP_CAR CAR
		  ON GT.AWB_NO = CAR.AWB_NO
		  AND GT.AWB_DATE   = CAR.AWB_DATE
		  <dynamic prepend="ORDER BY ">
                         <isNotEmpty property="sortOrder.sortField">
                        $sortOrder.sortField$
                  </isNotEmpty>
                    <isEmpty property="sortOrder.sortField">
						NVL(GT.RCL_DATE, GT.ACT_DATE)
					</isEmpty>
          </dynamic>
		  
</select>
	<select id="exp_rept_167_total"  parameterClass="cargo.cms.export.report.bo.CargoInvListRept_167BO"  resultClass="cargo.cms.export.report.bo.CargoInvListRept_167BO">
					SELECT
							COUNT(AWB_NO) totAWBNo,
							SUM(NON_PMAN_PCS)totPc,
							round(SUM(NON_PMAN_WT),1) totWt   
						FROM 	
							GT_EXP_LYING_LIST	
				</select>
	<parameterMap id="exportLyingListMap" class="map" >
		<parameter property="RESULT" 		jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
		<parameter property="CARRCODE" 		jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="DEST" 			jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="DEST1" 		jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="DEST2" 		jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="SPLCODE" 		jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="SPLCODE2" 		jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="SPLCODE3" 		jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="REGION1" 		jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="REGION2" 		jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="REGION3" 		jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="CONTRCODE" 	jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="AGENTCODE" 	jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="SHPRCODE" 		jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="CATALOGCODE" 	jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>		
		<parameter property="COUNTRYCODE" 	jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="NOOFDAYS" 		jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="CARRGROUP" 	jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="PPKTYPE" 		jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>		
		<parameter property="CGOTYPE" 		jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>		
		<parameter property="ACASFLAG" 		jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>	
		<parameter property="VIEW" 		jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>	
		<parameter property="RCSTYPE" 		jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>	
		</parameterMap>
	<procedure id="exp_rept_167_proc" parameterMap="exportLyingListMap" >
		{? = call PKG_EXP_RPT.RPT_LYING_LIST(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)  }
	</procedure>

	
	<!--  added by Surendra Gollapalli on 11th May 2011 for rept_031 START -->
	<select id="exp_rept_031_dtl"  parameterClass="cargo.cms.export.report.bo.CreatemRCLHdrReptBO"  resultClass="cargo.cms.export.report.bo.CreatemRCLHdrReptBO">
		<![CDATA[
					SELECT 		row_number() over (order by PRE_RCL_NO) serialNo,			
									   PCS as pieces, 
									   GROSS_WT as grossWt, 
									   ULD_KEY  as uldNo,		   
									   contr_code as contour									   
								  FROM EXP_PRE_RCL_DTL
								  WHERE pre_rcl_no = #srclNo#			
			]]>
	</select>
	
	<select id="exp_rept_uld_manf_031_dtl"  parameterClass="cargo.cms.export.report.bo.CreatemRCLHdrReptBO"  resultClass="cargo.cms.export.report.bo.CreatemRCLHdrReptBO">
		<![CDATA[				

				select  DISTINCT uld_key as uldNo,pre_rcl_no as srclNo												
									from exp_pre_rcl_uld_manf 
							   WHERE pre_rcl_no  = #srclNo#						 
							 	
			]]>
	</select>
	
	<select id="exp_rept_uld_manf_031_house_dtl"  parameterClass="cargo.cms.export.report.bo.CreatemRCLHdrReptBO"  resultClass="cargo.cms.export.report.bo.CreatemRCLHdrReptBO">
		<![CDATA[
			select  				 
			 #uldNo# as uldNo,
		 		#serialNo# as serialNo,	
		 		#srclNo# as srclNo,		  
		 		sum(pc) as pcs,
		 		trim(to_char(SUM(wt),'9999999.99')) as netwt,		            
                 sum(pc) || '/' ||  trim(to_char(SUM(wt),'9999999.99')) as totalPcWt								
									from exp_pre_rcl_uld_manf 							  
                 WHERE ULD_KEY  =#uldNo# and pre_rcl_no  = #srclNo#	
			]]>
	</select>
		<select id="exp_rept_uld_manf_hawb_031_dtl"  parameterClass="cargo.cms.export.report.bo.CreatemRCLHdrReptBO"  resultClass="cargo.cms.export.report.bo.CreatemRCLHdrReptBO">
		<![CDATA[		
		 select  awb_no AS awbNo,            
                  hawb_no as hawbNo,
                  pc || '/' ||  trim(to_char(wt,'9999999.99')) as hawbTolPcWt
									from exp_pre_rcl_uld_manf 							  
                 WHERE ULD_KEY  =#uldNo# and pre_rcl_no  = #srclNo#
			]]>
	</select>
	
	
		<!--  added by Surendra Gollapalli on 11th May 2011 for rept_031 END -->
		
		
			<!--  Added by Surendra Gollaplli on 13th May 2011 For eRCLSummary Report Stuff START -->
		
		
		<select id="exp_rept_017_B"  parameterClass="cargo.cms.export.report.bo.MRCLSummaryReptBO"  resultClass="cargo.cms.export.report.bo.MRCLSummaryReptBO">
			  
				  SELECT 
					   #stype# as stype, #scarr# as scarr, #struckNo1# as struckNo1,  #struckNo2# as struckNo2 , #struckNo3# as struckNo3,  #struckNo4# as struckNo4,
								#struckNo5# as struckNo5,
								#mrclIssueDateFrom# as mrclIssueDateFrom, 
								#mrclIssueDateTo# as  mrclIssueDateTo,#smrclNo# as smrclNo,  #qcpIndicator# as qcpIndicator,
								RCL.PRE_RCL_NO as refNo, 
								substr(RCL.rcl_no,1,4)||'-'||substr(RCL.rcl_no,5)  AS mrclNo,
								A.carr_code AS carr,
								A.awb_no AS awbNo,
								decode(A.PPK_TYPE,'B','Bulk','P','Prepack','M','Mixed') AS type,
								A.awb_dest AS dest, 
								to_char(RCL_DATE,'DDMONYY')||' '||to_char(RCL_DATE,'HH24:MI') AS mrclIssueDate,
								A.uld_key as uldNo, A.ttl_pcs rclPcs, a.ttl_wt grossWt,
								decode( RCL.STATUS,'S','CONFIRMED')   AS searchstatus,
								A.qcp_pcs as qcp_pcs,A.qcp_wt as qcp_wt,
								A.ttl_wt as rclWeight,
							   (SELECT B.CODE_DESC  FROM CUST_COMPANY B WHERE A.CUST_NO = B.CODE) as agentName
							  FROM EXP_PRE_RCL_HD A LEFT JOIN EXP_RCL_HD RCL ON
							  A.PRE_RCL_NO = RCL.PRE_RCL_NO 
							  where
							  A.CARR_CODE = NVL(#scarr#,A.CARR_CODE)
							  AND A.AWB_DEST = NVL(#sdest#,A.AWB_DEST)
							  AND A.CUST_NO = #custNo# 
							  AND trunc(RCL.RCL_DATE) BETWEEN TO_DATE(#mrclIssueDateFrom#,'DDMONYY') AND TO_DATE(#mrclIssueDateTo#,'DDMONYY')
							   AND RCL.Status=upper('S')
							  AND A.QCP_IND=NVL(#qcpIndicator#,A.QCP_IND)
							   AND A.PPK_TYPE = DECODE('M','A',A.PPK_TYPE,'',A.PPK_TYPE,'B')
							  AND (DECODE(#truckNo1#,NULL,'1',#truckNo1#) = DECODE('T1',NULL,DECODE(#struckNo1#||#struckNo2#||#struckNo3#||#struckNo4#||#struckNo5#,'','1','2'),A.TRUCK_NO1)
							  OR DECODE(#truckNo2#,NULL,'1',#truckNo2#) = DECODE(#struckNo2#,NULL,DECODE(#struckNo1#||#struckNo2#||#struckNo3#||#struckNo4#||#struckNo5#,'','1','2'),A.TRUCK_NO2)
							  OR DECODE(#struckNo3#,NULL,'1',#struckNo3#) = DECODE(#struckNo3#,NULL,DECODE(#struckNo1#||#struckNo2#||#struckNo3#||#struckNo4#||#struckNo5#,'','1','2'),A.TRUCK_NO3)
							  OR DECODE(#struckNo4#,NULL,'1',#struckNo4#) = DECODE(#struckNo4#,NULL,DECODE(#struckNo1#||#struckNo2#||#struckNo3#||#struckNo4#||#struckNo5#,'','1','2'),A.TRUCK_NO4)
							  OR DECODE(#struckNo5#,NULL,'1',#struckNo5#) = DECODE(#struckNo5#,NULL,DECODE(#struckNo1#||#struckNo2#||#struckNo3#||#struckNo4#||#struckNo5#,'','1','2'),A.TRUCK_NO5))
						<isNotNull prepend = "AND" property="smrclNo">  
							  RCL.PRE_RCL_NO = NVL(#smrclNo#,RCL.PRE_RCL_NO)
							  AND A.PRE_RCL_NO = RCL.PRE_RCL_NO
						 </isNotNull>
						 <isNotNull prepend = "AND" property="agentName">
							  EXISTS(SELECT B.CODE_DESC as agentName 
										 FROM CUST_COMPANY B
										WHERE A.CUST_NO = B.CODE
										  AND B.CODE_DESC  LIKE #agentName#
							  <isNotNull prepend ="AND" property="iataCode">   
										B.CO_IATA_CODE = #iataCode#
							  </isNotNull>)
					   </isNotNull>
					   <isNull prepend = "AND" property="agentName">
							  1=1
							  <isNotNull prepend ="AND" property="iataCode">   
								EXISTS(SELECT B.CODE_DESC  as agentName,B.CO_IATA_CODE as iataCode 
										 FROM CUST_COMPANY B
										WHERE A.CUST_NO = B.CODE
										  AND B.CO_IATA_CODE = #iataCode#)
							  </isNotNull>
					   </isNull>
						   AND A.CUST_NO = #custNo#
						   order by RCL_ISS_DATE ,type

   	</select>

	
   	<select id="exp_rept_017_P"  parameterClass="cargo.cms.export.report.bo.MRCLSummaryReptBO"  resultClass="cargo.cms.export.report.bo.MRCLSummaryReptBO">
	
			    SELECT
					   #stype# as stype, #scarr# as scarr, #struckNo1# as struckNo1,  #struckNo2# as struckNo2 , #struckNo3# as struckNo3,  #struckNo4# as struckNo4,
								#struckNo5# as struckNo5,
								#mrclIssueDateFrom# as mrclIssueDateFrom, 
								#mrclIssueDateTo# as  mrclIssueDateTo,#smrclNo# as smrclNo,  #qcpIndicator# as qcpIndicator,
								substr(RCL.rcl_no,1,4)||'-'||substr(RCL.rcl_no,5)  AS mrclNo,
								A.carr_code AS carr,
								A.awb_no AS awbNo,
								RCL.PRE_RCL_NO as refNo, 
								decode(A.PPK_TYPE,'B','Bulk','P','Prepack','M','Mixed') AS type,
								A.awb_dest AS dest, 
								to_char(RCL_DATE,'DDMONYY')||' '||to_char(RCL_DATE,'HH24:MI') AS mrclIssueDate,
								A.uld_key as uldNo, A.ttl_pcs rclPcs, a.ttl_wt grossWt,
								decode( RCL.STATUS,'S','CONFIRMED')   AS searchstatus,
								A.qcp_pcs as qcp_pcs,A.qcp_wt as qcp_wt,
								A.ttl_wt as rclWeight,
							   (SELECT B.CODE_DESC  FROM CUST_COMPANY B WHERE A.CUST_NO = B.CODE) as agentName
							  FROM EXP_PRE_RCL_HD A LEFT JOIN EXP_RCL_HD RCL ON
							  A.PRE_RCL_NO = RCL.PRE_RCL_NO 
							  where
							  A.CARR_CODE = NVL(#scarr#,A.CARR_CODE)
							  AND A.AWB_DEST = NVL(#sdest#,A.AWB_DEST)
							  AND A.CUST_NO = #custNo# 
							  AND trunc(RCL.RCL_DATE) BETWEEN TO_DATE(#mrclIssueDateFrom#,'DDMONYY') AND TO_DATE(#mrclIssueDateTo#,'DDMONYY')
							   AND RCL.Status=upper('S')
							  AND A.QCP_IND=NVL(#qcpIndicator#,A.QCP_IND)
							   AND A.PPK_TYPE = DECODE('M','A',A.PPK_TYPE,'',A.PPK_TYPE,'P')
							  AND (DECODE(#truckNo1#,NULL,'1',#truckNo1#) = DECODE('T1',NULL,DECODE(#struckNo1#||#struckNo2#||#struckNo3#||#struckNo4#||#struckNo5#,'','1','2'),A.TRUCK_NO1)
							  OR DECODE(#truckNo2#,NULL,'1',#truckNo2#) = DECODE(#struckNo2#,NULL,DECODE(#struckNo1#||#struckNo2#||#struckNo3#||#struckNo4#||#struckNo5#,'','1','2'),A.TRUCK_NO2)
							  OR DECODE(#struckNo3#,NULL,'1',#struckNo3#) = DECODE(#struckNo3#,NULL,DECODE(#struckNo1#||#struckNo2#||#struckNo3#||#struckNo4#||#struckNo5#,'','1','2'),A.TRUCK_NO3)
							  OR DECODE(#struckNo4#,NULL,'1',#struckNo4#) = DECODE(#struckNo4#,NULL,DECODE(#struckNo1#||#struckNo2#||#struckNo3#||#struckNo4#||#struckNo5#,'','1','2'),A.TRUCK_NO4)
							  OR DECODE(#struckNo5#,NULL,'1',#struckNo5#) = DECODE(#struckNo5#,NULL,DECODE(#struckNo1#||#struckNo2#||#struckNo3#||#struckNo4#||#struckNo5#,'','1','2'),A.TRUCK_NO5))
						<isNotNull prepend = "AND" property="smrclNo">  
							  RCL.PRE_RCL_NO = NVL(#smrclNo#,RCL.PRE_RCL_NO)
							  AND A.PRE_RCL_NO = RCL.PRE_RCL_NO
						 </isNotNull>
						 <isNotNull prepend = "AND" property="agentName">
							  EXISTS(SELECT B.CODE_DESC as agentName 
										 FROM CUST_COMPANY B
										WHERE A.CUST_NO = B.CODE
										  AND B.CODE_DESC  LIKE #agentName#
							  <isNotNull prepend ="AND" property="iataCode">   
										B.CO_IATA_CODE = #iataCode#
							  </isNotNull>)
					   </isNotNull>
					   <isNull prepend = "AND" property="agentName">
							  1=1
							  <isNotNull prepend ="AND" property="iataCode">   
								EXISTS(SELECT B.CODE_DESC  as agentName,B.CO_IATA_CODE as iataCode 
										 FROM CUST_COMPANY B
										WHERE A.CUST_NO = B.CODE
										  AND B.CO_IATA_CODE = #iataCode#)
							  </isNotNull>
					   </isNull>
						   AND A.CUST_NO = #custNo#
						   order by RCL_ISS_DATE ,type
										
						
   	</select>
		<select id="exp_rept_017_M"  parameterClass="cargo.cms.export.report.bo.MRCLSummaryReptBO"  resultClass="cargo.cms.export.report.bo.MRCLSummaryReptBO">
	
				 	SELECT
					   #stype# as stype, #scarr# as scarr, #struckNo1# as struckNo1,  #struckNo2# as struckNo2 , #struckNo3# as struckNo3,  #struckNo4# as struckNo4,
								#struckNo5# as struckNo5,
								#mrclIssueDateFrom# as mrclIssueDateFrom, 
								#mrclIssueDateTo# as  mrclIssueDateTo,#smrclNo# as smrclNo,  #qcpIndicator# as qcpIndicator,
								substr(RCL.rcl_no,1,4)||'-'||substr(RCL.rcl_no,5)  AS mrclNo,
								A.carr_code AS carr,
								A.awb_no AS awbNo, A.ttl_pcs rclPcs, a.ttl_wt grossWt,
								RCL.PRE_RCL_NO as refNo, 
								decode(A.PPK_TYPE,'B','Bulk','P','Prepack','M','Mixed') AS type,
								A.awb_dest AS dest, 
								to_char(RCL_DATE,'DDMONYY')||' '||to_char(RCL_DATE,'HH24:MI') AS mrclIssueDate,
								A.uld_key as uldNo,
								decode( RCL.STATUS,'S','CONFIRMED')   AS searchstatus,
								A.qcp_pcs as qcp_pcs,A.qcp_wt as qcp_wt,
								A.ttl_wt as rclWeight,
							   (SELECT B.CODE_DESC  FROM CUST_COMPANY B WHERE A.CUST_NO = B.CODE) as agentName
							  FROM EXP_PRE_RCL_HD A LEFT JOIN EXP_RCL_HD RCL ON
							  A.PRE_RCL_NO = RCL.PRE_RCL_NO 
							  where
							  A.CARR_CODE = NVL(#scarr#,A.CARR_CODE)
							  AND A.AWB_DEST = NVL(#sdest#,A.AWB_DEST)
							  AND A.CUST_NO = #custNo# 
							  AND trunc(RCL.RCL_DATE) BETWEEN TO_DATE(#mrclIssueDateFrom#,'DDMONYY') AND TO_DATE(#mrclIssueDateTo#,'DDMONYY')
							   AND RCL.Status=upper('S')
							  AND A.QCP_IND=NVL(#qcpIndicator#,A.QCP_IND)
							   AND A.PPK_TYPE = DECODE('M','A',A.PPK_TYPE,'',A.PPK_TYPE,'M')
							  AND (DECODE(#truckNo1#,NULL,'1',#truckNo1#) = DECODE('T1',NULL,DECODE(#struckNo1#||#struckNo2#||#struckNo3#||#struckNo4#||#struckNo5#,'','1','2'),A.TRUCK_NO1)
							  OR DECODE(#truckNo2#,NULL,'1',#truckNo2#) = DECODE(#struckNo2#,NULL,DECODE(#struckNo1#||#struckNo2#||#struckNo3#||#struckNo4#||#struckNo5#,'','1','2'),A.TRUCK_NO2)
							  OR DECODE(#struckNo3#,NULL,'1',#struckNo3#) = DECODE(#struckNo3#,NULL,DECODE(#struckNo1#||#struckNo2#||#struckNo3#||#struckNo4#||#struckNo5#,'','1','2'),A.TRUCK_NO3)
							  OR DECODE(#struckNo4#,NULL,'1',#struckNo4#) = DECODE(#struckNo4#,NULL,DECODE(#struckNo1#||#struckNo2#||#struckNo3#||#struckNo4#||#struckNo5#,'','1','2'),A.TRUCK_NO4)
							  OR DECODE(#struckNo5#,NULL,'1',#struckNo5#) = DECODE(#struckNo5#,NULL,DECODE(#struckNo1#||#struckNo2#||#struckNo3#||#struckNo4#||#struckNo5#,'','1','2'),A.TRUCK_NO5))
						<isNotNull prepend = "AND" property="smrclNo">  
							  RCL.PRE_RCL_NO = NVL(#smrclNo#,RCL.PRE_RCL_NO)
							  AND A.PRE_RCL_NO = RCL.PRE_RCL_NO
						 </isNotNull>
						 <isNotNull prepend = "AND" property="agentName">
							  EXISTS(SELECT B.CODE_DESC as agentName 
										 FROM CUST_COMPANY B
										WHERE A.CUST_NO = B.CODE
										  AND B.CODE_DESC  LIKE #agentName#
							  <isNotNull prepend ="AND" property="iataCode">   
										B.CO_IATA_CODE = #iataCode#
							  </isNotNull>)
					   </isNotNull>
					   <isNull prepend = "AND" property="agentName">
							  1=1
							  <isNotNull prepend ="AND" property="iataCode">   
								EXISTS(SELECT B.CODE_DESC  as agentName,B.CO_IATA_CODE as iataCode 
										 FROM CUST_COMPANY B
										WHERE A.CUST_NO = B.CODE
										  AND B.CO_IATA_CODE = #iataCode#)
							  </isNotNull>
					   </isNull>
						   AND A.CUST_NO = #custNo#
						   order by RCL_ISS_DATE ,type
   	</select>


<select id="exp_rept_017_awb"  parameterClass="cargo.cms.export.report.bo.MRCLSummaryReptBO"  resultClass="cargo.cms.export.report.bo.MRCLSummaryReptBO">
	
				select 	#sawbNo# as sawbNo,#mrclIssueDateFrom# as mrclIssueDateFrom, #mrclIssueDateTo# as  mrclIssueDateTo,
															substr(RCL.rcl_no,1,4)||'-'||substr(RCL.rcl_no,5)  AS mrclNo,
															mRCL.AWB_NO AS awbNo,
															mRCL.pre_rcl_no as carr, 
															mRCL.awb_dest AS dest, 
															decode(mRCL.PPK_TYPE,'B','Bulk','P','Prepack','M','Mixed') AS type,				
															to_char(RCL_DATE,'DDMONYY     HH24:MI') AS mrclIssueDate,				
															mRCL.ULD_NO AS uldNo,  
															decode( RCL.STATUS,'S','CONFIRMED')  AS searchstatus,
															mRCL.qcp_pcs as qcp_pcs,
															mRCL.qcp_wt as qcp_wt,
															customer.CODE_DESC  as agentName,
															mRCL.carr_code as carr,				
															mRCL.ttl_wt as rclWeight,				
															mRCL.truck_no1 as truckNo1,
															mRCL.qcp_pcs as qcp_pcs,
															mRCL.qcp_wt as qcp_wt				
															FROM EXP_PRE_RCL_HD mRCL,cust_company customer, EXP_RCL_HD RCL  
																 WHERE mRCL.cust_no = customer.code 
																 AND upper(RCL.status) = upper('S')
																 and  mRCL.awb_no = #sawbNo#
																AND trunc(RCL.RCL_DATE) BETWEEN TO_DATE(#mrclIssueDateFrom#,'DDMONYY') AND TO_DATE(#mrclIssueDateTo#,'DDMONYY')
																AND mRCL.PPK_TYPE = DECODE(#stype#,'A',mRCL.PPK_TYPE,'',mRCL.PPK_TYPE,#stype#)
																 AND mRCL.PRE_RCL_NO = RCL.PRE_RCL_NO																
																 AND (   (#agentName# IS NOT NULL AND CODE_DESC  = #agentName#)OR #agentName# IS NULL)
																 order by RCL_ISS_DATE ,mRCL.PPK_TYPE
   	</select>
	<select id="exp_rept_017_uld"  parameterClass="cargo.cms.export.report.bo.MRCLSummaryReptBO"  resultClass="cargo.cms.export.report.bo.MRCLSummaryReptBO">
	
					     SELECT
										#suldNo# as suldNo,#mrclIssueDateFrom# as mrclIssueDateFrom, #mrclIssueDateTo# as  mrclIssueDateTo,
										substr(RCL.rcl_no,1,4)||'-'||substr(RCL.rcl_no,5)  AS mrclNo,
										mRCL.AWB_NO AS awbNo,
										mRCL.pre_rcl_no as carr, 
										mRCL.awb_dest AS dest, 
										decode(mRCL.PPK_TYPE,'B','Bulk','P','Prepack','M','Mixed') AS type,
										to_char(RCL_DATE,'DDMONYY')||' '||to_char(RCL_DATE,'HH24:MI') AS mrclIssueDate,
										
										mRCL.ULD_NO AS uldNo,  
										decode( RCL.STATUS,'S','CONFIRMED')    AS searchstatus,
										mRCL.qcp_pcs as qcp_pcs,
										mRCL.qcp_wt as qcp_wt,
										customer.CODE_DESC  as agentName,
										mRCL.carr_code as carr,
										ttl_wt as rclWeight,
										truck_no1 as truckNo1,
										qcp_pcs as qcp_pcs,
										qcp_wt as qcp_wt																	
											FROM EXP_PRE_RCL_HD mRCL,cust_company customer,  EXP_RCL_HD RCL 
											WHERE mRCL.uld_key = #suldNo# 
											AND trunc(RCL.RCL_DATE) BETWEEN TO_DATE(#mrclIssueDateFrom#,'DDMONYY') AND TO_DATE(#mrclIssueDateTo#,'DDMONYY')
											AND mRCL.PPK_TYPE = DECODE(#stype#,'A',mRCL.PPK_TYPE,'',mRCL.PPK_TYPE,#stype#)
											AND (   (#agentName# IS NOT NULL AND CODE_DESC = #agentName#)OR #agentName# IS NULL) 
											AND mRCL.cust_no=customer.code
											AND upper(RCL.status) =upper('S')
											AND mRCL.PRE_RCL_NO = RCL.PRE_RCL_NO		 
											 order by RCL_ISS_DATE ,mRCL.PPK_TYPE
   	</select>
   	<!--  Added by Surendra Gollaplli on 13th May 2011 For eRCLSummary Report Stuff END -->
<!-- Added by Manorama for Maintain Export Car Starts::::: -->
<select id="exp_rept_538_s0"  parameterClass="cargo.cms.edi.report.bo.EnqFWBRept_BO"  resultClass="cargo.cms.edi.report.bo.EnqFWBRept_BO">
    SELECT EXP_SID.SID_NO       sidNumber               ,
   SUBSTR(EXP_SID.AWB_NO,1,3)||'-'||SUBSTR(EXP_SID.AWB_NO,4) AS awbNo,            
  EXP_SID.AWB_DATE             awbDate             ,
   EXP_SID.pcs pcs,
   trim(to_char(EXP_SID.WT,'9999999.99')) weight,
  EXP_SID.BRD_POINT_NAME depAportName       ,
  EXP_SID.SHPM_DESC_C shipDescC             ,
 EXP_SID.FLT_CARR1 finalFltCarr1           ,
 EXP_SID. FLT_NO1 finalFltNo1               ,
  to_char(EXP_SID.FLT_DATE1,'DDMONYY') finalFltDt1             ,
  EXP_SID.FLT_KEY1 fltKey1                  ,
  EXP_SID.FLT_CARR2 finalFltCarr2           ,
  EXP_SID.FLT_NO2 finalFltNo2               ,
  to_char(EXP_SID.FLT_DATE2,'DDMONYY') finalFltDt2             ,
  EXP_SID.FLT_KEY2 fltKey2                  ,
  EXP_SID.ROUTE_AIRP_CODE rtgOnwardCarr1    ,
  EXP_SID.ROUTE_CARR_CODE rtgOnwardCode1    ,
  EXP_SID.ONW_AIRP_CODE rtgOnwardCarr2      ,
	EXP_SID.ONW_CARR_CODE rtgOnwardCode2,
	AIRP_CODE_DESC as finalAirportName,
  EXP_SID.SHPR_AC_NO shprAccNo              ,
  EXP_SID.SHPR_NAME shprName,
	EXP_SID.OFF_POINT orginAa,
   decode(EXP_SID.SHPR_ADDR1,null,'',EXP_SID.SHPR_ADDR1) shprAddr1,
  decode(EXP_SID.SHPR_ADDR2,NULL,'',EXP_SID.SHPR_ADDR2) shprAddr2,
  decode(EXP_SID.SHPR_ADDR3,NULL,'',EXP_SID.SHPR_ADDR3) shprAddr3,
  EXP_SID.SHPR_ADDR4 shprState              ,
 EXP_SID.SHPR_PLACE shprCity               ,
 to_char(EXP_SID.EXECN_DATE,'DDMONYY') execnDate,
 (select code_desc from mast_country where code = EXP_SID.SHPR_CTRY_CODE and rownum = 1) shpCountry         ,
  EXP_SID.SHPR_PIN_CODE shpPostal           ,
  EXP_SID.SHPR_CERTN  shpSign,
EXP_SID.SHPR_TEL shpTelNo                 ,
  EXP_SID.SHPR_FAX shpFax                   ,
   EXP_SID.CSGNE_AC_NO csgnAccNo             ,
    decode(EXP_SID.CSGNE_NAME,null,'',EXP_SID.CSGNE_NAME) csgnName,
    decode(EXP_SID.CSGNE_ADDR1,null,'',EXP_SID.CSGNE_ADDR1) csgnAddr1,
   decode(EXP_SID.CSGNE_ADDR2,null,'',EXP_SID.CSGNE_ADDR2) csgnAddr2,
   decode(EXP_SID.CSGNE_ADDR3,null,'',EXP_SID.CSGNE_ADDR3) csgnAddr3,
 EXP_SID.	CSGNE_ADDR4 csgnState             ,
  EXP_SID.CSGNE_PLACE csgnCity              ,
  (select code_desc from mast_country where code =  EXP_SID.CSGNE_CTRY_CODE and rownum = 1) csgnCountry       ,
  EXP_SID.CSGNE_PIN_CODE csgnPostal         ,
  EXP_SID.CSGNE_TEL csgnTelNo               ,
  EXP_SID.CSGNE_FAX csgnFax                 ,
  EXP_SID.AGENT_NAME agentName              ,
  EXP_SID.AGENT_ICODE agentIata             ,
  EXP_SID.AGENT_CASS_ADDR cassAddr          ,
  EXP_SID.AGENT_PLACE agentCity             ,
  EXP_SID.SPL_SVC_REQ1 hndlgInfo1           ,
  EXP_SID.SPL_SVC_REQ2 hndlgInfo2           ,
  EXP_SID.SPL_SVC_REQ3 hndlgInfo3           ,
   EXP_SID.CC_CHRG_DESTN_CURR currCode,
  EXP_SID.OTHER_SVC_INFO1 hndlgInfo4        ,
  EXP_SID.OTHER_SVC_INFO2 hndlgInfo5        ,
  EXP_SID.DECLN_CURR_CODE declCurrCode      ,
  EXP_SID.DECLN_CHRG_CODE declChrgCode      ,
   decode(DECLN_WT_VALN_PPCC_I,'C','C','') pcsWtPP      ,
	decode(DECLN_WT_VALN_PPCC_I,'P','P','') pcsWtColl,
  decode(DECLN_OTHER_CHRG_PPCC_I,'P','P','') pcsOtherPP,
	decode(DECLN_OTHER_CHRG_PPCC_I,'C','C','') pcsOtherColl,
  decode(EXP_SID.DECLN_CARR,'NVD','',trim(to_char(EXP_SID.DECLN_CARR,'9999999.99'))) declValCarr,
  decode(EXP_SID.DECLN_CTM,'NCV','',trim(to_char(EXP_SID.DECLN_CTM,'9999999.99'))) declValCustoms,
  decode(EXP_SID.DECLN_INSURCE,'XXX','',trim(to_char(EXP_SID.DECLN_INSURCE,'9999999.99'))) insuranceAmt,
  decode(EXP_SID.DECLN_WT_VALN_PPCC_I,'C',EXP_SID.PPCC_WT_CHRG) totChrg1             ,
EXP_SID.REF_NO refNo                      ,
EXECN_SIGN issueCarr,
DECLN_CURR_CODE declCurrCode,
  EXP_SID.SPL_CUST_INFO1 slac1              ,
  EXP_SID.SPL_CUST_INFO2 slac2,
    trim(to_char(EXP_SID.CC_OTHER_CHRG_DUE_AGENT,'9999999.99')) agentChrg ,
    trim(to_char(EXP_SID.CC_OTHER_CHRG_DUE_CARR,'9999999.99'))   carrChrg,
    trim(to_char(EXP_SID.CC_TAXES,'9999999.99')) taxChrg,
    trim(to_char(EXP_SID.PPCC_PP_TOTAL_CHRG,'9999999.99')) totCollChrgPrepaid,
   trim(to_char( EXP_SID.CC_TOTAL_DESTN_CHRG,'9999999.99')) destChrgs,
    trim(to_char(EXP_SID.CC_VALN_CHRG,'9999999.99'))  colValVcAmt,
    EXP_SID.SLAC slac,
    EXP_SID.agent_ac_no agentAccNo,
		trim(to_char(CC_DESTN_CHRG,'9999999.99')) ccDestChrg,
		decode(EXP_SID.DECLN_WT_VALN_PPCC_I,'P',trim(to_char(EXP_SID.PPCC_WT_CHRG,'9999999.99'))) ttlWtChrgPpd,
    	decode(nvl(EDI_FWB.PPD_TOTAL_WT_AMT,0),'0','',trim(to_char(nvl(EDI_FWB.PPD_TOTAL_WT_AMT,0),'9999990.00'))) as valChrgPrepd,
		decode(PPCC_VALN_CHRG,null,decode(nvl(EDI_FWB.PPD_VALUE_VC_AMT,0),'0','',trim(to_char(nvl(EDI_FWB.PPD_VALUE_VC_AMT,0),'9999990.00'))),trim(to_char(PPCC_VALN_CHRG,'9999999.99'))) as ppdValVcAmt,
		decode(PPCC_TAXES,null,decode(nvl(EDI_FWB.PPD_TAXES_TX_AMT,0),'0','',trim(to_char(nvl(EDI_FWB.PPD_TAXES_TX_AMT,0),'9999990.00'))),trim(to_char(PPCC_TAXES,'9999999.99'))) as taxChrgPrepd,
		decode(EXP_SID.PPCC_OTHER_CHRG_DUE_AGENT,null,decode(nvl(EDI_FWB.PPD_TOTAL_OA_AMT,0),'0','',trim(to_char(nvl(EDI_FWB.PPD_TOTAL_OA_AMT,0),'9999990.00'))),trim(to_char(EXP_SID.PPCC_OTHER_CHRG_DUE_AGENT,'9999999.99'))) as agentChgPrpd,
		 decode(PPCC_OTHER_CHRG_DUE_CARR,null,decode(nvl(EDI_FWB.PPD_TOTAL_OC_AMT,0),'0','',to_char(nvl(EDI_FWB.PPD_TOTAL_OC_AMT,0),'9999990.00')),trim(to_char(PPCC_OTHER_CHRG_DUE_CARR,'9999999.99'))) as carrChrgPrepd,
		decode(nvl(EDI_FWB.PPD_SUMMY_CT_AMT,0),'0','',to_char(nvl(EDI_FWB.PPD_SUMMY_CT_AMT,0),'9999990.00')) as totWtChrgPrepd

   FROM EXP_SID left join EDI_FWB on EXP_SID.awb_no = EDI_FWB.awb_no and EXP_SID.awb_date = EDI_FWB.awb_date
  WHERE EXP_SID.awb_no=#awbNo# and EXP_SID.awb_date = to_date(#awbDate#,'DDMONYY') and EXP_SID.status = 'PROCESSED'
 </select>
 
 <select id="exp_rept_538_s4" parameterClass="cargo.cms.edi.report.bo.EnqFWBRept_BO"  resultClass="cargo.cms.edi.report.bo.EnqFWBRept_BO">
 select orig org, dest rtgOnwardCode2, agent_name agentName, agent_code, shipper_name shprName
from awb 
where awb_no=#awbNo# and awb_date=to_date(#awbDate#,'DDMONYY')
 </select>

<select id="exp_rept_538_s1"  parameterClass="cargo.cms.edi.report.bo.EnqFWBRept_BO"  resultClass="cargo.cms.edi.report.bo.EnqFWBRept_BO">
 select
     SID_NO,
    ACTG_I accInfoInd,
    actg_info accInformation
   from exp_sid_acct_info
  where sid_no = #sidNumber#
  and rownum &lt;= 6
</select>

<select id="exp_rept_538_s2"  parameterClass="cargo.cms.edi.report.bo.EnqFWBRept_BO"  resultClass="cargo.cms.edi.report.bo.EnqFWBRept_BO">
	select  R.SID_NO         , DOC_LINE_NO as seq,
		RATE_PCS       rcpPcs,
		RATE_GORSS_WT_C wgtType,
		RATE_GROSS_WT  grossWt,
		RATE_CLASS_C   rateClass,
		RATE_COMM_N    itemNo,
		RATE_CHRGBLE_WT chrgWt,
		RATE_CHRG_RATE chrgDiscount,
		RATE_CHRG_A    totChrg,
		RATE_GOODS_NATR  goodsDesc
	FROM EXP_SID_RATE R LEFT JOIN EXP_SID S ON R.SID_NO = S.SID_NO
	WHERE R.SID_NO = #sidNumber#
	order by seq
</select>

<select id="exp_rept_538_s3"  parameterClass="cargo.cms.edi.report.bo.EnqFWBRept_BO"  resultClass="cargo.cms.edi.report.bo.EnqFWBRept_BO">
   SELECT 
			DECODE(b.OTH_CHRG_C||b.OTH_ENTLEMT_C,null,'',b.OTH_CHRG_C||b.OTH_ENTLEMT_C||': '||trim(to_char(nvl(b.OTH_CHRG,0),'9999990.00'))||':'|| oth_pc_i) as othPcI1
			FROM  EXP_SID_OTH_CHARGES b
		WHERE 
   b.sid_no =  #sidNumber#
</select>
<update id="updatePrintIndValue" parameterClass="cargo.cms.edi.report.bo.EnqFWBRept_BO">
update exp_car set print_ind = 'Y' where awb_no = #awbNo# and awb_date = to_date(#awbDate#,'DDMONYY') 
</update>
<select id="getPrintIndValue"  parameterClass="cargo.cms.edi.report.bo.EnqFWBRept_BO"  resultClass="java.lang.String">
select PRINT_IND from exp_car where awb_no=#awbNo# and awb_date = #awbDate#
</select>
<!-- Added by Manorama for Maintain Export Car Starts::::: -->

<!-- Added by swapna for Enquire pre-Offload:Starts -->
<select id="enq_pre_offload" parameterClass="cargo.cms.export.report.bo.EnqPreOfldRept_206BO" resultClass="cargo.cms.export.report.bo.EnqPreOfldRept_206BO">
	select 'By AWB' as preOffld_type, 
			#sfltDate# as sfltDate,
			#sfltNo# as sfltNo,
			#setd# as setd,
		   t2.awb_no as awbNo,
		   t2.awb_no as awbNoDisplay, 
		   t1.uld_bt_no as uldNo, 
		   t1.contr_code as contrCode, 
		   decode(t1.uld_type, 'BT', 'Bulk', decode(t1.ppk_type, 'M', 'M', 'P', 'P', 'B', 'B')) as ppkType, 
		   t2.unldg_pt as unldgpt, 
		   t2.assigned_pcs as assignedPc, 
		   LTRIM(TO_CHAR(t2.assigned_wt,'9999999999.0')) as assignedWt, 
		   t2.offload_pcs as pcs, 
		   LTRIM(TO_CHAR(t2.offload_wt,'9999999999.0')) as wt, 
		   t1.offload_uld_yn as preOfldULD, 
		   t2.confirmed_yn as confirm,
		   t1.RMK as rmk,
		   t2.OFFLOAD_REASON offLoadReason
		   from   exp_offload_uld t1, exp_offload_uld_awb t2
		   where  t1.flt_key = t2.flt_key
		   and    t1.flt_date = t2.flt_date 
		   and    t1.uld_bt_no = t2.uld_bt_no
		   and    t2.offload_type = 'A'
		   and    t2.flt_key = #sfltNo# 
		   and    t2.flt_date = #sfltDate# 
	union 
	select 'By ULD' as preOffloadType, 
			#setd# as setd,
			#sfltDate# as sfltDate,
			#sfltNo# as sfltNo,
		   null as awb_no, 
		   null as awbNoDisplay,
		   t1.uld_bt_no as uldBtNo, 
		   t1.contr_code as contrCode, 
		   decode(t1.ppk_type, 'M', 'M', 'P', 'P', 'B', 'B') as pkgType, 
		   t1.unldg_pt as unldgpt, 
		   sum(t2.assigned_pcs) as assignedPc, 
		   LTRIM(TO_CHAR(sum(t2.assigned_wt),'9999999999.0')) as assignedWt,
		   sum(t2.offload_pcs) as preOffLoadPc,
		   TRIM(TO_CHAR(sum(t2.offload_wt),'9999999999.0')) as preOffLoadWt,
		   t1.offload_uld_yn as preOffLoadULD, 
		   t1.confirmed_yn as confirmedYn,
		   t1.RMK as rmk,
		   t2.OFFLOAD_REASON offLoadReason 
		from   exp_offload_uld t1, exp_offload_uld_awb t2
		where  t1.flt_key = t2.flt_key
		and    t1.flt_date = t2.flt_date 
		and    t1.uld_bt_no = t2.uld_bt_no
		and    t2.offload_type = 'U'
		and    t2.flt_key = #sfltNo# 
		and    t2.flt_date = #sfltDate# 
		group by t1.uld_bt_no, t1.contr_code, t1.ppk_type, t1.unldg_pt, t1.offload_uld_yn, t2.confirmed_yn, t1.RMK, t2.OFFLOAD_REASON, t1.confirmed_yn

</select>
<!-- Added by swapna for Enquire pre-Offload:Ends -->
<select id="exp_rept_072"  parameterClass="cargo.cms.export.report.bo.AccUsageByFlightRept_074BO"  resultClass="cargo.cms.export.report.bo.AccUsageByFlightRept_074BO">
			SELECT      
				fltdt as depDate,
				sum(decode(upper(activity), 'RELEASE', field1, 0)) ucoField1,
				sum(decode(upper(activity), 'BUILDUP', field1,'BADWEATHER', field1, 0)) bldField1, 				
				sum(decode(upper(activity), 'RELEASE', field2, 0)) ucoField2,  
				sum(decode(upper(activity), 'BUILDUP', field2,'BADWEATHER',field2,0)) bldField2,				 
				sum(decode(upper(activity), 'RELEASE', field3, 0)) ucoField3,
				sum(decode(upper(activity), 'BUILDUP', field3,'BADWEATHER', field3,0)) bldField3,				 
				sum(decode(upper(activity), 'RELEASE', field4, 0)) ucoField4,            
				sum(decode(upper(activity), 'BUILDUP', field4,'BADWEATHER', field4, 0)) bldField4,				 
				sum(decode(upper(activity), 'RELEASE', field5,0)) ucoField5,				
				sum(decode(upper(activity), 'BUILDUP', field5,'BADWEATHER', field5, 0)) bldField5				 
			from  (select to_char(flt_date,'DDMONYY') fltdt, activity,    
				sum(decode(upper(equip_type), UPPER(#saccessory1#), qty, 0)) field1,
				sum(decode(upper(equip_type), UPPER(#saccessory2#), qty, 0)) field2,
				sum(decode(upper(equip_type), UPPER(#saccessory3#), qty, 0)) field3,
				sum(decode(upper(equip_type), UPPER(#saccessory4#), qty, 0)) field4,
				sum(decode(upper(equip_type), UPPER(#saccessory5#), qty, 0)) field5	
			from   exp_uld_acc A,flt_opr b     
				WHERE FLT_DATE BETWEEN TO_DATE(#fltDateFrom#,'DDMONYY')      
				AND TO_DATE(#fltDateTo#,'DDMONYY') AND b.DEST = NVL(#unLadingPt#,b.DEST)
       			 and a.flt_key = b.flt_key and a.flt_date = b.sch_date and b.flt_type='D'     
				<dynamic>      
					<isNotEmpty prepend="AND" property="unLadingPt">                           
						 b.DEST = #unLadingPt# 
					</isNotEmpty> 
					<isNotEmpty prepend="AND" property="scarrier">            
						FLT_CARR  = #scarrier#      
					</isNotEmpty>
					<isEmpty property="loginCarrier">
					<isNotEmpty prepend="AND" property="loginCarrier">
						(FLT_CARR = #loginCarrier# OR FLT_CARR IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE = #loginCarrier#))
					</isNotEmpty>
					</isEmpty>  
				</dynamic>            
				AND (upper(EQUIP_TYPE) = upper(#saccessory1#)      
				<dynamic>      
					<isNotEmpty prepend="OR" property="saccessory2">            
						upper(EQUIP_TYPE) =  upper(#saccessory2#)      
					</isNotEmpty>      
					<isNotEmpty prepend="OR" property="saccessory3">            
						upper(EQUIP_TYPE) = upper(#saccessory3#)      
					</isNotEmpty>      
					<isNotEmpty prepend="OR" property="saccessory4">            
						upper(EQUIP_TYPE) = upper(#saccessory4#)      
					</isNotEmpty>      
					<isNotEmpty prepend="OR" property="saccessory5">            
						upper(EQUIP_TYPE) = upper(#saccessory5#)      
					</isNotEmpty>  
				</dynamic >      
				) group by to_char(flt_date,'DDMONYY'), activity      
				union                  
			select 
				to_char(eir_date,'DDMONYY') fltdt, 'RELEASE', 				
				sum(decode(upper(DTL.equip_type), UPPER(#saccessory1#), DTL.equip_qty, 0)) field1,
				sum(decode(upper(DTL.equip_type), UPPER(#saccessory2#), DTL.equip_qty, 0)) field2,
				sum(decode(upper(DTL.equip_type), UPPER(#saccessory3#), DTL.equip_qty, 0)) field3,
				sum(decode(upper(DTL.equip_type), UPPER(#saccessory4#), DTL.equip_qty, 0)) field4,
				sum(decode(upper(DTL.equip_type), UPPER(#saccessory5#), DTL.equip_qty, 0)) field5			                 
			from   
				ULD_REL_DTL DTL , 
				ULD_REL_HD REL,
				ULD_ISS_HD HD                    
			where 
				DTL.equip_type is not null 
				and DTL.equip_qty is not null                   
				and  REL.TR_NO=DTL.TR_NO                    
				AND   HD.EIR_NO=DTL.EIR_NO                   
				AND     HD.EIR_DATE BETWEEN TO_DATE(#fltDateFrom#,'DDMONYY') AND TO_DATE(#fltDateTo#,'DDMONYY')
        		AND (HD.flt_no is null or ((select count(*) from flt_opr where flt_key=HD.flt_no  AND sch_date=HD.flt_date and flt_type = 'D')=1))		
				<dynamic >       
					<isNotEmpty prepend="AND" property="unLadingPt">                           
						B.DEST  = #unLadingPt#                   
					</isNotEmpty>              
					<isNotEmpty prepend="AND" property="scarrier">                           
						HD.CARR_CODE  = #scarrier#                   
					</isNotEmpty>
					<isEmpty property="loginCarrier">    
					<isNotEmpty prepend="AND" property="loginCarrier">
						(HD.CARR_CODE = #loginCarrier# OR HD.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE = #loginCarrier#))
					</isNotEmpty>
					</isEmpty>               
				</dynamic >                   
				AND (upper(DTL.EQUIP_TYPE) = upper(#saccessory1#)                   
				<dynamic >                   
					<isNotEmpty prepend="OR" property="saccessory2">                         
						upper(DTL.EQUIP_TYPE) = upper(#saccessory2#)                   
					</isNotEmpty>
					<isNotEmpty prepend="OR" property="saccessory3">                         
						upper(DTL.EQUIP_TYPE) = upper(#saccessory3#)                   
					</isNotEmpty>      
					<isNotEmpty prepend="OR" property="saccessory4">                         
						upper(DTL.EQUIP_TYPE) = upper(#saccessory4#)                   
					</isNotEmpty>      
					<isNotEmpty prepend="OR" property="saccessory5">                         
						upper(DTL.EQUIP_TYPE) = upper(#saccessory5#)                   
					</isNotEmpty>      
					<isNotEmpty prepend="OR" property="saccessory6">                         
						upper(DTL.EQUIP_TYPE) = upper(#saccessory6#)                   
					</isNotEmpty>      
				</dynamic >
				)              
			group by to_char(eir_date,'DDMONYY'))                   
			group by fltdt  order by fltdt 
   	</select>

<!-- Updated for CR14072501. Sanket 13Aug14 -->
<!-- Updated for CR14091501. Sanket 13OCT14 -->
<select id="exp_rept_073_uld"  parameterClass="cargo.cms.export.report.bo.AccUsageByFlightRept_074BO"  resultClass="java.lang.String">
SELECT STRAGG(STRINGDELIM(ULD_KEY, ',')) AS uldKey FROM ULD_REL_DTL RELDTL WHERE RELDTL.EIR_NO=#eirNo# AND ULD_KEY IS NOT NULL
</select>
<select id="exp_rept_073"  parameterClass="cargo.cms.export.report.bo.AccUsageByFlightRept_074BO"  resultClass="cargo.cms.export.report.bo.AccUsageByFlightRept_074BO">
	SELECT								
	row_number() over (order by  EIR_DATE ) serialNo,
	TO_CHAR(EIR_DATE ,'DDMONYY')as reqDate ,
	EIR_NO as eirNo,TO_CHAR(REL_DATE ,'DDMONYY')as issueDate,
	flt_no as fltNo, 
	TO_CHAR(flt_date ,'DDMONYY')AS schDate,
	PURPOSE as purpose,
	sum(field1)as field1, 
	sum(field2) as field2, 
	sum(field3) as field3,
	sum(field4) as field4,
	sum(field5) as field5	
	from  (select  DTL.uld_key,DTL.eir_no,REL.REL_DATE, HD.EIR_DATE,
			sum(decode(upper(DTL.equip_type), UPPER(#saccessory1#), DTL.equip_qty, 0))  field1,
			sum(decode(upper(DTL.equip_type), UPPER(#saccessory2#), DTL.equip_qty, 0))  field2,
			sum(decode(upper(DTL.equip_type), UPPER(#saccessory3#), DTL.equip_qty, 0))  field3,
			sum(decode(upper(DTL.equip_type), UPPER(#saccessory4#), DTL.equip_qty, 0))  field4,
			sum(decode(upper(DTL.equip_type), UPPER(#saccessory5#), DTL.equip_qty, 0))  field5,			
			HD.flt_no,
            HD.flt_date,
            HD.PURPOSE
		from   ULD_REL_DTL DTL ,
		ULD_REL_HD REL,ULD_ISS_HD HD		 
		where DTL.equip_type is not null and DTL.equip_qty is not null
		and  REL.TR_NO=DTL.TR_NO  
		AND   HD.EIR_NO=DTL.EIR_NO 
		AND	  HD.EIR_DATE BETWEEN TO_DATE(#fltDateFrom#,'DDMONYY') AND TO_DATE(#fltDateTo#,'DDMONYY')
        AND (HD.flt_no is null or ((select count(*) from flt_opr where flt_key=HD.flt_no 
       		 AND sch_date=HD.flt_date and flt_type = 'D')=1))		
		<dynamic >
		<isNotEmpty prepend="AND" property="unLadingPt">
			B.DEST = #unLadingPt#
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="scarrier">
			 HD.CARR_CODE  = #scarrier#
		</isNotEmpty>
		<isEmpty property="loginCarrier">
		<isNotEmpty prepend="AND" property="loginCarrier">
			(HD.CARR_CODE = #loginCarrier# OR HD.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE = #loginCarrier#))
		</isNotEmpty>
		</isEmpty>
		</dynamic >		
		AND (upper(DTL.EQUIP_TYPE) = upper(#saccessory1#)		
	<dynamic >
		<isNotEmpty prepend="OR" property="saccessory2">
			upper(DTL.EQUIP_TYPE) = upper(#saccessory2#)
		</isNotEmpty>		
		<isNotEmpty prepend="OR" property="saccessory3">
			upper(DTL.EQUIP_TYPE) = upper(#saccessory3#)
		</isNotEmpty>		
		<isNotEmpty prepend="OR" property="saccessory4">
			upper(DTL.EQUIP_TYPE) = upper(#saccessory4#)
		</isNotEmpty>		
		<isNotEmpty prepend="OR" property="saccessory5">
			upper(DTL.EQUIP_TYPE) = upper(#saccessory5#)
		</isNotEmpty>
	</dynamic >										
	) group by  DTL.uld_key,DTL.eir_no, REL.REL_DATE, HD.EIR_DATE, HD.flt_no, HD.flt_date, HD.PURPOSE )
	group by uld_key,eir_no ,REL_DATE, EIR_DATE, flt_no, flt_date, purpose
</select>

<select id="exp_rept_074_PORT"  parameterClass="cargo.cms.export.report.bo.AccUsageByFlightRept_074BO"  resultClass="cargo.cms.export.report.bo.AccUsageByFlightRept_074BO">

						  
		SELECT						
			row_number() over (order by  unldg_pt) serialNo,
			unldg_pt AS pmanPort,TO_CHAR(FLT_DATE, 'DDMONYY' )as depDate, 
      	    sum(field1)as field1, 
			sum(field2) as field2, 
			sum(field3) as field3,
			sum(field4) as field4, 
			sum(field5) as field5
			from (
				 select a.flt_date,C.unldg_pt,
				 sum(decode(upper(a.equip_type), UPPER(#saccessory1#), a.qty, 0)) field1,
				 sum(decode(upper(a.equip_type), UPPER(#saccessory2#), a.qty, 0)) field2,
				 sum(decode(upper(a.equip_type), UPPER(#saccessory3#), a.qty, 0)) field3,
				 sum(decode(upper(a.equip_type), UPPER(#saccessory4#), a.qty, 0)) field4,
				 sum(decode(upper(a.equip_type), UPPER(#saccessory5#), a.qty, 0)) field5				 				 
		from   exp_uld_acc a,flt_opr b
		,EXP_PMANIFEST_ULD C
		WHERE 	
				A.FLT_KEY=C.FLT_KEY
		        AND A.FLT_DATE=C.FLT_DATE
		        AND A.ULD_KEY=C.ULD_BT_NO 
		        AND
		        a.FLT_DATE BETWEEN TO_DATE(#fltDateFrom#,'DDMONYY') AND TO_DATE(#fltDateTo#,'DDMONYY')		
       			and a.flt_key = b.flt_key and a.flt_date = b.sch_date and b.flt_type='D' 
			<dynamic >
					<isNotEmpty prepend="AND" property="unLadingPt">
						 b.DEST = #unLadingPt#
					</isNotEmpty>
					<isNotEmpty prepend="AND" property="scarrier">
								a.FLT_CARR  = #scarrier#
					</isNotEmpty>
					<isEmpty prepend="AND" property="scarrier">
								a.FLT_CARR  IS NOT NULL
					</isEmpty>
					<isEmpty prepend="AND" property="scarrier">
					<isNotEmpty prepend="AND" property="loginCarrier">
					(a.FLT_CARR = #loginCarrier# OR a.FLT_CARR IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE = #loginCarrier#))
					</isNotEmpty>
					</isEmpty>
			</dynamic >
			
			AND (upper(EQUIP_TYPE) like upper(#saccessory1#)
			
			<dynamic >
					<isNotEmpty prepend="OR" property="saccessory2">
								upper(EQUIP_TYPE) = upper(#saccessory2#)
					</isNotEmpty>

					<isNotEmpty prepend="OR" property="saccessory3">
								upper(EQUIP_TYPE) = upper(#saccessory3#)
					</isNotEmpty>

					<isNotEmpty prepend="OR" property="saccessory4">
								upper(EQUIP_TYPE) = upper(#saccessory4#)
					</isNotEmpty>

					<isNotEmpty prepend="OR" property="saccessory5">
								upper(EQUIP_TYPE) = upper(#saccessory5#)
					</isNotEmpty>

					<isNotEmpty prepend="OR" property="saccessory6">
								upper(EQUIP_TYPE) = upper(#saccessory6#)
					</isNotEmpty>

			</dynamic >										
			)
			  group by C.UNLDG_PT,a.flt_date)
		group by UNLDG_PT,flt_date
   	</select>

<select id="exp_rept_074_FLT"  parameterClass="cargo.cms.export.report.bo.AccUsageByFlightRept_074BO"  resultClass="cargo.cms.export.report.bo.AccUsageByFlightRept_074BO">

						  
		SELECT						
			row_number() over (order by  FLT_KEY) serialNo,
			flt_key  as fltNo, TO_CHAR(FLT_DATE, 'DDMONYY' )as depDate, 
            unldg_pt AS pmanPort,
			sum(field1)as field1, 
			sum(field2) as field2, 
			sum(field3) as field3,
			sum(field4) as field4,
			sum(field5) as field5
			from (
				 select a.flt_key,a.flt_date,C.unldg_pt,
				 sum(decode(upper(a.equip_type), UPPER(#saccessory1#), a.qty, 0)) field1,
				 sum(decode(upper(a.equip_type), UPPER(#saccessory2#), a.qty, 0)) field2,
				 sum(decode(upper(a.equip_type), UPPER(#saccessory3#), a.qty, 0)) field3,
				 sum(decode(upper(a.equip_type), UPPER(#saccessory4#), a.qty, 0)) field4,
				 sum(decode(upper(a.equip_type), UPPER(#saccessory5#), a.qty, 0)) field5				 				 
		from   exp_uld_acc a,flt_opr b
		,EXP_PMANIFEST_ULD C
		WHERE 	
				A.FLT_KEY=C.FLT_KEY
		        AND A.FLT_DATE=C.FLT_DATE
		        AND A.ULD_KEY=C.ULD_BT_NO 
		        AND
		        a.FLT_DATE BETWEEN TO_DATE(#fltDateFrom#,'DDMONYY') AND TO_DATE(#fltDateTo#,'DDMONYY')		
       			and a.flt_key = b.flt_key and a.flt_date = b.sch_date and b.flt_type='D' 
			<dynamic >
					<isNotEmpty prepend="AND" property="unLadingPt">
						 b.DEST = #unLadingPt#
					</isNotEmpty>
					<isNotEmpty prepend="AND" property="scarrier">
								a.FLT_CARR  = #scarrier#
					</isNotEmpty>
					<isEmpty prepend="AND" property="scarrier">
								a.FLT_CARR  IS NOT NULL
					</isEmpty>
					<isEmpty prepend="AND" property="scarrier">
					<isNotEmpty prepend="AND" property="loginCarrier">
					(a.FLT_CARR = #loginCarrier# OR a.FLT_CARR IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE = #loginCarrier#))
					</isNotEmpty>
					</isEmpty>
			</dynamic >
			
			AND (upper(EQUIP_TYPE) like upper(#saccessory1#)
			
			<dynamic >
					<isNotEmpty prepend="OR" property="saccessory2">
								upper(EQUIP_TYPE) = upper(#saccessory2#)
					</isNotEmpty>

					<isNotEmpty prepend="OR" property="saccessory3">
								upper(EQUIP_TYPE) = upper(#saccessory3#)
					</isNotEmpty>

					<isNotEmpty prepend="OR" property="saccessory4">
								upper(EQUIP_TYPE) = upper(#saccessory4#)
					</isNotEmpty>

					<isNotEmpty prepend="OR" property="saccessory5">
								upper(EQUIP_TYPE) = upper(#saccessory5#)
					</isNotEmpty>

					<isNotEmpty prepend="OR" property="saccessory6">
								upper(EQUIP_TYPE) = upper(#saccessory6#)
					</isNotEmpty>

			</dynamic >										
			)
			  group by a.flt_key,a.flt_date,C.UNLDG_PT)
		group by flt_key,flt_date,UNLDG_PT
   	</select>

<select id="exp_rept_074_ULD"  parameterClass="cargo.cms.export.report.bo.AccUsageByFlightRept_074BO"  resultClass="cargo.cms.export.report.bo.AccUsageByFlightRept_074BO">

						  
		SELECT						
			row_number() over (order by  FLT_DATE ) serialNo,
			TO_CHAR(FLT_DATE, 'DDMONYY' )as depDate, flt_key  as fltNo, uld_key as uldNo,
			unldg_pt AS pmanPort,
			sum(field1)as field1, 
			sum(field2) as field2, 
			sum(field3) as field3,
			sum(field4) as field4,
			sum(field5) as field5
			from (
				 select a.flt_date, a.flt_key, a.uld_key,C.unldg_pt,
				 sum(decode(upper(a.equip_type), UPPER(#saccessory1#), a.qty, 0)) field1,
				 sum(decode(upper(a.equip_type), UPPER(#saccessory2#), a.qty, 0)) field2,
				 sum(decode(upper(a.equip_type), UPPER(#saccessory3#), a.qty, 0)) field3,
				 sum(decode(upper(a.equip_type), UPPER(#saccessory4#), a.qty, 0)) field4,
				 sum(decode(upper(a.equip_type), UPPER(#saccessory5#), a.qty, 0)) field5				 				 
		from   exp_uld_acc a,flt_opr b
		,EXP_PMANIFEST_ULD C
		WHERE 	
				A.FLT_KEY=C.FLT_KEY
		        AND A.FLT_DATE=C.FLT_DATE
		        AND A.ULD_KEY=C.ULD_BT_NO 
		        AND
		        a.FLT_DATE BETWEEN TO_DATE(#fltDateFrom#,'DDMONYY') AND TO_DATE(#fltDateTo#,'DDMONYY')		
       			and a.flt_key = b.flt_key and a.flt_date = b.sch_date and b.flt_type='D' 
			<dynamic >
					<isNotEmpty prepend="AND" property="unLadingPt">
						 b.DEST = #unLadingPt#
					</isNotEmpty>
					<isNotEmpty prepend="AND" property="scarrier">
								a.FLT_CARR  = #scarrier#
					</isNotEmpty>
					<isEmpty prepend="AND" property="scarrier">
								a.FLT_CARR  IS NOT NULL
					</isEmpty>
					<isEmpty prepend="AND" property="scarrier">
					<isNotEmpty prepend="AND" property="loginCarrier">
					(a.FLT_CARR = #loginCarrier# OR a.FLT_CARR IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE = #loginCarrier#))
					</isNotEmpty>
					</isEmpty>
			</dynamic >
			
			AND (upper(EQUIP_TYPE) like upper(#saccessory1#)
			
			<dynamic >
					<isNotEmpty prepend="OR" property="saccessory2">
								upper(EQUIP_TYPE) = upper(#saccessory2#)
					</isNotEmpty>

					<isNotEmpty prepend="OR" property="saccessory3">
								upper(EQUIP_TYPE) = upper(#saccessory3#)
					</isNotEmpty>

					<isNotEmpty prepend="OR" property="saccessory4">
								upper(EQUIP_TYPE) = upper(#saccessory4#)
					</isNotEmpty>

					<isNotEmpty prepend="OR" property="saccessory5">
								upper(EQUIP_TYPE) = upper(#saccessory5#)
					</isNotEmpty>

					<isNotEmpty prepend="OR" property="saccessory6">
								upper(EQUIP_TYPE) = upper(#saccessory6#)
					</isNotEmpty>

			</dynamic >										
			)
			  group by a.flt_date,a.flt_key,a.uld_key,C.UNLDG_PT)
		group by flt_date, flt_key, uld_key,UNLDG_PT
   	</select>


<select id="exp_rept_074"  parameterClass="cargo.cms.export.report.bo.AccUsageByFlightRept_074BO"  resultClass="cargo.cms.export.report.bo.AccUsageByFlightRept_074BO">

						  
		SELECT						
			row_number() over (order by  FLT_DATE ) serialNo,
			TO_CHAR(FLT_DATE, 'DDMONYY' )as depDate, flt_key  as fltNo, uld_key as uldNo,
			sum(field1)as field1, 
			sum(field2) as field2, 
			sum(field3) as field3,
			sum(field4) as field4,
			sum(field5) as field5
			from (
				 select a.flt_date, a.flt_key, a.uld_key,
				 sum(decode(upper(a.equip_type), UPPER(#saccessory1#), a.qty, 0)) field1,
				 sum(decode(upper(a.equip_type), UPPER(#saccessory2#), a.qty, 0)) field2,
				 sum(decode(upper(a.equip_type), UPPER(#saccessory3#), a.qty, 0)) field3,
				 sum(decode(upper(a.equip_type), UPPER(#saccessory4#), a.qty, 0)) field4,
				 sum(decode(upper(a.equip_type), UPPER(#saccessory5#), a.qty, 0)) field5				 				 
		from   exp_uld_acc a,flt_opr b
		WHERE 	 a.FLT_DATE BETWEEN TO_DATE(#fltDateFrom#,'DDMONYY') AND TO_DATE(#fltDateTo#,'DDMONYY')		
       			 and a.flt_key = b.flt_key and a.flt_date = b.sch_date and b.flt_type='D' 
			<dynamic >
					<isNotEmpty prepend="AND" property="unLadingPt">
						 b.DEST = #unLadingPt#
					</isNotEmpty>
					<isNotEmpty prepend="AND" property="scarrier">
								a.FLT_CARR  = #scarrier#
					</isNotEmpty>
					<isEmpty prepend="AND" property="scarrier">
								a.FLT_CARR  IS NOT NULL
					</isEmpty>
					<isEmpty prepend="AND" property="scarrier">
					<isNotEmpty prepend="AND" property="loginCarrier">
					(a.FLT_CARR = #loginCarrier# OR a.FLT_CARR IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE = #loginCarrier#))
					</isNotEmpty>
					</isEmpty>
			</dynamic >
			
			AND (upper(EQUIP_TYPE) like upper(#saccessory1#)
			
			<dynamic >
					<isNotEmpty prepend="OR" property="saccessory2">
								upper(EQUIP_TYPE) = upper(#saccessory2#)
					</isNotEmpty>

					<isNotEmpty prepend="OR" property="saccessory3">
								upper(EQUIP_TYPE) = upper(#saccessory3#)
					</isNotEmpty>

					<isNotEmpty prepend="OR" property="saccessory4">
								upper(EQUIP_TYPE) = upper(#saccessory4#)
					</isNotEmpty>

					<isNotEmpty prepend="OR" property="saccessory5">
								upper(EQUIP_TYPE) = upper(#saccessory5#)
					</isNotEmpty>

					<isNotEmpty prepend="OR" property="saccessory6">
								upper(EQUIP_TYPE) = upper(#saccessory6#)
					</isNotEmpty>

			</dynamic >										
			)
			  group by a.flt_date, a.flt_key, a.uld_key)
		group by flt_date, flt_key, uld_key
   	</select>

	<select id="fetchAccessoryDescForTypeFLT" parameterClass="java.lang.String"  resultClass="java.lang.String">
		SELECT UPPER(MAST_CODE_DTL.CODE_DESC) AS accessoryDesc
			FROM MAST_CODE_HD,
			  MAST_CODE_DTL
			WHERE MAST_CODE_HD.CODE = MAST_CODE_DTL.CODE_TYPE
			AND MAST_CODE_HD.CODE   = 'EQUIP_TYPE' and UPPER(MAST_CODE_DTL.CODE) = UPPER(#detailCode#)
	</select>

<select id="fetchAccessoryDescForTypeSUM" parameterClass="java.lang.String"  resultClass="java.lang.String">
		select accessoryDesc from (
			SELECT UPPER(MAST_CODE_DTL.CODE_DESC) AS accessoryDesc
			FROM MAST_CODE_HD,
			MAST_CODE_DTL
			WHERE MAST_CODE_HD.CODE       = MAST_CODE_DTL.CODE_TYPE
			AND MAST_CODE_HD.CODE         = 'EQUIP_TYPE'
			AND UPPER(MAST_CODE_DTL.CODE) = UPPER(#detailCode#) 
			UNION 
			SELECT UPPER(MAST_CODE_DTL.CODE_DESC) AS CUBIC_RECIPIENT_ADDRESS
			FROM MAST_CODE_HD, MAST_CODE_DTL
			WHERE MAST_CODE_HD.CODE       = MAST_CODE_DTL.CODE_TYPE
			AND MAST_CODE_HD.CODE         = 'URF_EQUIP_TYPE'
			AND UPPER(MAST_CODE_DTL.CODE) = UPPER(#detailCode#) AND UPPER(MAST_CODE_DTL.CODE) NOT IN
	    	(SELECT UPPER(CODE) FROM mast_code_dtl WHERE code_type = 'EQUIP_TYPE')
		) where rownum = 1
	</select>
	
	<select id="fetchAccessoryDescForTypeURF" parameterClass="java.lang.String"  resultClass="java.lang.String">
		SELECT UPPER(MAST_CODE_DTL.CODE_DESC) AS accessoryDesc
			FROM MAST_CODE_HD,
			  MAST_CODE_DTL
			WHERE MAST_CODE_HD.CODE = MAST_CODE_DTL.CODE_TYPE
			AND MAST_CODE_HD.CODE   = 'URF_EQUIP_TYPE' and UPPER(MAST_CODE_DTL.CODE) = UPPER(#detailCode#)
	</select>

   	<!-- Added By Mithun KK Starts -->
   	
   	<select id="sqlQueryFltDetailsRept701" parameterClass="cargo.cms.export.report.bo.PrintPMNFRept_701BO"  resultClass="cargo.cms.export.report.bo.PrintPMNFRept_701BO">
					
	SELECT T1.FLT_KEY as fltNo,to_char(T1.SCH_DATE,'DDMONYY')
	as fltDate,
	 PKG_COMMON.get_flt_eta(#fltNo#, TO_DATE(#depDate#, 'DDMONYY'), 'D', 'DD') AS etd,
	 PKG_EXP_RPT.FLT_PORTS(#fltNo# ,#depDate#) 
	as portOfCall,T1.ACFT_REG_NO as acftRegn,T1.ACFT_TYPE 
	as acftType,
	SUBSTR(TRIM(TO_CHAR(NVL(T1.SCH_TIME,0),'0000')),0,2)|| ':'||  
	 SUBSTR(TRIM(TO_CHAR(NVL(T1.SCH_TIME,0),'0000')),3,4)
	as std,
	PKG_COMMON.get_flt_ata(T1.FLT_KEY, TO_DATE(#depDate#, 'DDMONYY'), 'D', 'DD') AS ata,
	 <!-- decode(T1.act_time, '', null, substr(lpad(T1.act_time, 4, 0), 1, 2)||
    ':'||substr(T1.act_time, -2))
	 as ata ,-->
	T2.FLT_CLS_YN as fltCls  
      FROM FLT_OPR T1,FLT_OPR_EVENTS T2 
       WHERE T1.FLT_KEY=#fltNo#  
			 AND TRUNC(T1.SCH_DATE) = TO_DATE(#depDate#, 'DDMONYY')
			 AND T1.TR_NO = T2.TR_NO
			 AND T1.FLT_TYPE='D'
			 AND rownum=1
	
	</select>
	
	<select id="preManifestAwbCountListRept701" parameterClass="cargo.cms.export.report.bo.PrintPMNFRept_701BO" resultClass="cargo.cms.export.report.bo.PrintPMNFRept_701BO" >
		SELECT
			COUNT(AWB_NO) totalAwb,
			SUM(PMAN_PCS)totalManfpc,
			SUM(pman_wt) totalpmanWt,
			SUM(AWB_PCS)totalAwbPc , 
			SUM(awb_wt) wt 
	   	FROM 	
			gt_exp_pmanifest_list	
			<isNotEmpty property="unLdgPt">
        	where unldg_pt = #unLdgPt#
      	  </isNotEmpty>
	</select>
	
	<select id="premanifestAwblistRept701" parameterClass="cargo.cms.export.report.bo.PrintPMNFRept_701BO" resultClass="cargo.cms.export.report.bo.PrintPMNFRept_701BO" >
			SELECT   CONCAT(CONCAT(SUBSTR(t1.AWB_NO,0,3),'-'),SUBSTR(t1.AWB_NO,4)) awbNo,
			t1.AWB_NO awbNo1, TO_CHAR(t1.AWB_DATE,'DDMONYY') awbDate, t1.ORIGIN orig,t1.DEST dest,
	        upper(t2.CONTENT) content,t1.SPL_CODE shcCode,
			t1.AWB_PCS awbPCs,t1.AWB_WT wt,t1.PMAN_PCS manfPC,t1.PMAN_WT pmanWt,
			t1.CC_CODE cccode,t1.LOCN_INFO whDest,
			to_char(t1.PMAN_DATE,'DDMONYY HH24:MI') lastModDate,t1.UNLOAD_INFO unLdgPt,
       			NVL(t1.BLDUP_INSTR, (SELECT A1.AWB_RMK FROM AWB A1 WHERE A1.AWB_NO = t1.AWB_NO AND A1.AWB_DATE = t1.AWB_DATE))  remarks,t1.FBL_PCS fblPcs, t1.FBL_WT fblWt, t1.RMNG_PCS rmngPcs,t1.reason reason,
       		t1.RMNG_WT rmngWt, t1.BLDUP_PCS buPcs, t1.BLDUP_WT buWt, DECODE(t2.LPPS_YN,'N','N','Y') intStatus, t2.accept_mode acceptMode, 
       		(SELECT A1.AWB_TYPE FROM AWB A1 WHERE A1.AWB_NO = t1.AWB_NO AND A1.AWB_DATE = t1.AWB_DATE) docAccptStatus, t1.tr_type trfType,
	       	(
			  SELECT CODE_DESC FROM MAST_CODE_DTL WHERE CODE_TYPE = 'EXP_EPOUCH_STATUS' AND CODE = NVL(pouch.AWB_UPLIFT_STATUS, (
			    SELECT DECODE(AWB_PRINT_ORIGIN, 'Y', 'NOTUPLIFTED', 'NOTREQUIRED') 
			    FROM MAST_CITY
			    WHERE CODE = t2.DEST
			  ))
			) awbUpliftStatus, (
			  SELECT CODE_DESC FROM MAST_CODE_DTL WHERE CODE_TYPE = 'EXP_EPOUCH_STATUS' AND CODE = NVL(pouch.POUCH_UPLIFT_STATUS, (
			  	SELECT
			    CASE 
			    	WHEN 'EAW' IN(t2.SPL_CODE1, t2.SPL_CODE2, t2.SPL_CODE3, t2.SPL_CODE4, t2.SPL_CODE5, t2.SPL_CODE6, t2.SPL_CODE7, t2.SPL_CODE8, t2.SPL_CODE9) THEN 'NOTREQUIRED'
			    	ELSE 'NOTUPLIFTED'
			    END
				FROM DUAL
			  ))
			) pouchUplistStatus,
			( SELECT DECODE(COUNT(0), 0, 'N','Y')
			FROM exp_pmanifest_uld_awb_shc a
			JOIN exp_pmanifest_uld_awb b
			ON a.tr_no       = b.tr_no
			WHERE b.awb_no   = t1.AWB_NO
			AND b.AWB_DATE   = t1.AWB_DATE
			AND b.flt_key	 = t3.flt_key
			AND b.flt_date   = t3.sch_Date
			AND NVL(a.BULK_ULD_YN,'N') = 'Y'
			) 		shcSplitYN 
		    FROM  
		    gt_exp_pmanifest_list t1
	        join flt_opr_leg t3
	        on t3.flt_key = t1.flt_key
	        and t3.sch_Date = t1.flt_date and t3.FLT_TYPE = 'D'
	        AND instr(t1.UNLOAD_INFO, t3.off_point)>0
	        join awb t2
	        on t1.AWB_NO = t2.AWB_NO 
	        and TO_CHAR(t1.AWB_DATE,'DDMONYY') = TO_CHAR(t2.AWB_DATE,'DDMONYY') 
	        left join awb_pouch pouch on pouch.awb_no = t1.awb_no and pouch.awb_date = t1.awb_date
			WHERE 
	        t1.flt_key = #fltNo#
	        and t1.flt_date = to_date(#depDate#,'DDMONYY')
	        <isNotEmpty property="unLdgPt">
        	and t1.unldg_pt = #unLdgPt#
        	</isNotEmpty>
	        <isEqual property="sortingBy" compareValue="By AWB">
        	order by t1.AWB_NO ASC
        	</isEqual>
	        <isEqual property="sortingBy" compareValue="UnLdg Pt, BU Status">
        		order by t3.leg_ord, t1.BLDUP_PCS
        	</isEqual>
	        <isNotEqual property="sortingBy" compareValue="By AWB">
        	<isNotEqual property="sortingBy" compareValue="UnLdg Pt, BU Status">
        		<isEqual property="sortingBy" compareValue="Shipment Flow">
        		order by t2.awb_type,t2.catalog
		       	</isEqual>
		       	<isNotEqual property="sortingBy" compareValue="Shipment Flow">
		       		order by t1.PMAN_DATE
		       	</isNotEqual>
        	</isNotEqual>  
	        </isNotEqual>  
    </select>
    <select id="getUldkeys_LPMAN_701" parameterClass="map" resultClass="cargo.cms.export.report.bo.PrintPMNFRept_701BO">
    		SELECT STRAGG(STRINGDELIM(ULDKEY,',')) uldNo,decode(count(ULDKEY),'1','Y','N') uldHiperLink FROM
			(
			SELECT ULD_KEY ULDKEY FROM AWB_INVENTORY AI WHERE AI.AWB_NO = #AWB_NO# and AI.AWB_DATE =#AWB_DATE#
			UNION
			SELECT ULD_BT_NO ULDKEY FROM EXP_PMANIFEST_ULD_AWB AI WHERE AI.AWB_NO = #AWB_NO# and AI.AWB_DATE =#AWB_DATE# 
					and AI.flt_key=#FLT_KEY# and AI.flt_Date=#FLT_DATE#
					<isNotEmpty property="UNLDG_PT">
			        	and AI.unldg_pt = #UNLDG_PT#
			        </isNotEmpty>
			UNION
			SELECT ULD_BT_NO ULDKEY FROM EXP_PMAN_TARMAC_ULD_AWB AI WHERE AI.AWB_NO = #AWB_NO# and AI.AWB_DATE =#AWB_DATE# 
					and AI.flt_key=#FLT_KEY# and AI.flt_Date=#FLT_DATE#
					<isNotEmpty property="UNLDG_PT">
			        	and AI.unldg_pt = #UNLDG_PT#
			        </isNotEmpty>
			)
    </select>
    
     <select id="nonPreManifestFblAwbListRept701" parameterClass="cargo.cms.export.report.bo.PrintPMNFRept_701BO" resultClass="cargo.cms.export.report.bo.PrintPMNFRept_701BO" >
	  SELECT   CONCAT(CONCAT(SUBSTR(t1.awb_no,0,3),'-'),SUBSTR(t1.awb_no,4)) awbNo, t1.ORG orig, t1.DEST dest,
	    PKG_EXP_RPT.get_cc_code_awbType(t2.flt_key,t2.flt_date,t1.awb_no,null) as cccode,
        upper(t1.MAN_DESC) content,
        (decode(nvl(t7.spl_code1,t1.spl_code1),NULL,'',nvl(t7.spl_code1,t1.spl_code1))
        ||decode(nvl(t7.spl_code2,t1.spl_code2),NULL,'','/'||nvl(t7.spl_code2,t1.spl_code2))
        ||decode(nvl(t7.spl_code3,t1.spl_code3),NULL,'','/'||nvl(t7.spl_code3,t1.spl_code3))
        ||decode(nvl(t7.spl_code4,t1.spl_code4),NULL,'','/'||nvl(t7.spl_code4,t1.spl_code4))
        ||decode(nvl(t7.spl_code5,t1.spl_code5),NULL,'','/'||nvl(t7.spl_code5,t1.spl_code5))
        ||decode(nvl(t7.spl_code6,t1.spl_code6),NULL,'','/'||nvl(t7.spl_code6,t1.spl_code6))
        ||decode(nvl(t7.spl_code7,t1.spl_code7),NULL,'','/'||nvl(t7.spl_code7,t1.spl_code7))
        ||decode(nvl(t7.spl_code8,t1.spl_code8),NULL,'','/'||nvl(t7.spl_code8,t1.spl_code8))
        ||decode(nvl(t7.spl_code9,t1.spl_code9),NULL,'','/'||nvl(t7.spl_code9,t1.spl_code9)) ) splcode,
        t1.PCS fblPcs, t1.NET_WT fblWt, 
        nvl((select pcs from awb where awb_no=t1.awb_no and awb_date=t1.awb_date),0) awbPCs,
        nvl((select wt from awb where awb_no=t1.awb_no and awb_date=t1.awb_date),0) wt,      
        t1.rmk fblreason, t1.EDMP_CODE edmpCode, t3.pmanPcs manfPC, t3.pmanWt pmanWt, t4.invPcs invPcs, t4.invWt invWt, 
        CASE WHEN (((NVL(t4.invPcs,0) + NVL(t5.chk_out_pcs,0))-NVL(t3.pmanPcs,0)) > 0) THEN ((NVL(t4.invPcs,0) + NVL(t5.chk_out_pcs,0))-NVL(t3.pmanPcs,0)) ELSE NULL END AS rmngPcs,
  		CASE WHEN (((NVL(t4.invWt,0) + + NVL(t5.chk_out_wt,0)) -NVL(t3.pmanWt,0)) > 0) THEN ((NVL(t4.invWt,0) + + NVL(t5.chk_out_wt,0)) -NVL(t3.pmanWt,0)) ELSE NULL END AS rmngWt 
		FROM  edi_fbl_shp t1
	    join edi_fbl t2 on t2.tr_no = t1.tr_no 
        left join (select sum(pman_pcs) pmanPcs, sum(pman_wt) pmanWt, awb_no, awb_date from awb GROUP BY awb_no, awb_date) t3 
          on t3.awb_no=t1.awb_no and t3.awb_date=t1.awb_date
        left join (SELECT SUM(LOCN_PCS) invPcs, SUM(LOCN_WT) invWt, AWB_NO, AWB_DATE FROM AWB_INVENTORY GROUP BY AWB_NO, AWB_DATE ) t4
          on t4.AWB_NO = t1.AWB_NO and TO_CHAR(t4.AWB_DATE,'DDMONYY') = TO_CHAR(t1.AWB_DATE,'DDMONYY')
        LEFT JOIN (SELECT SUM(assigned_pcs) chk_out_pcs,SUM(assigned_wt) chk_out_wt,AWB_NO,	AWB_DATE
  					FROM exp_pmanifest_uld_awb a
  					join exp_chkout_dtl u on a.uld_bt_no = u.uld_key and a.flt_key = u.flt_key and a.flt_date = u.flt_date and  u.chk_flg = 'Y'
  					GROUP BY AWB_NO, AWB_DATE
  		) t5 ON t5.AWB_NO = t1.AWB_NO AND TO_CHAR(t5.AWB_DATE,'DDMONYY')       = TO_CHAR(t1.AWB_DATE,'DDMONYY') 
  		LEFT JOIN awb t7 on t7.awb_no=t1.awb_no and t7.awb_date=t1.awb_date
        where t2.flt_key= #fltNo# and t2.flt_date=to_date(#depDate#,'DDMONYY')  and t2.fbl_status='P'         
        and ((((NVL(t4.invPcs,0) + NVL(t5.chk_out_pcs,0))-NVL(t3.pmanPcs,0)) > 0) OR ((NVL(t1.PCS,0) - nvl(t3.pmanPcs,0)) > 0))	
        <isNotEmpty property="unLdgPt">
        	and t2.unldg_pt = #unLdgPt#
        </isNotEmpty>
      <isNotEmpty property="splCode">
      	and #splCode# in (t1.spl_code1,t1.spl_code2,t1.spl_code3,t1.spl_code4,t1.spl_code5,t1.spl_code6,t1.spl_code7,t1.spl_code8)
      </isNotEmpty>
      <isNotEmpty property="splCode2">
      	and #splCode2# in (t1.spl_code1,t1.spl_code2,t1.spl_code3,t1.spl_code4,t1.spl_code5,t1.spl_code6,t1.spl_code7,t1.spl_code8)
      </isNotEmpty>
      <isNotEmpty property="splCode3">
      	and #splCode3# in (t1.spl_code1,t1.spl_code2,t1.spl_code3,t1.spl_code4,t1.spl_code5,t1.spl_code6,t1.spl_code7,t1.spl_code8)
      </isNotEmpty>
      <isNotEmpty property="splCode4">
      	and #splCode4# in (t1.spl_code1,t1.spl_code2,t1.spl_code3,t1.spl_code4,t1.spl_code5,t1.spl_code6,t1.spl_code7,t1.spl_code8)
      </isNotEmpty>
      <isNotEmpty property="splCode5">
      	and #splCode5# in (t1.spl_code1,t1.spl_code2,t1.spl_code3,t1.spl_code4,t1.spl_code5,t1.spl_code6,t1.spl_code7,t1.spl_code8)
      </isNotEmpty>
      <isNotEmpty property="splCode6">
      	and #splCode6# in (t1.spl_code1,t1.spl_code2,t1.spl_code3,t1.spl_code4,t1.spl_code5,t1.spl_code6,t1.spl_code7,t1.spl_code8)
      </isNotEmpty>
       order by dest, t1.tr_no, T1.DOC_LINE_NO
	</select>   
	
	<parameterMap id="preManifestListMap" class="map" >
           <parameter property="RESULT" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
		   <parameter property="fltNo" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		   <parameter property="depDate" jdbcType="VARCHAR" javaType="java.lang.String"	mode="IN"/>
		   <parameter property="splCode" jdbcType="VARCHAR" javaType="java.lang.String"	mode="IN"/>
		   <parameter property="outstandingShipment" jdbcType="VARCHAR" javaType="java.lang.String"	mode="IN"/>
		   <parameter property="tarmacShipment" jdbcType="VARCHAR" javaType="java.lang.String"	mode="IN"/>
		   <parameter property="allShipment" jdbcType="VARCHAR" javaType="java.lang.String"	mode="IN"/>
		   <parameter property="splCode2" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		   <parameter property="splCode3" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		   <parameter property="splCode4" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		   <parameter property="splCode5" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		   <parameter property="splCode6" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		</parameterMap>
		 <procedure id="premanifestflightsearchlistRept701" parameterMap="preManifestListMap" >

		     {? = call PKG_EXP_RPT.rpt_Preman_list(?,?,?,?,?,?,?,?,?,?,?)  }

	     </procedure>
	<select id="inboundFlightReptList" parameterClass="cargo.cms.export.report.bo.PrintPMNFRept_701BO" resultClass="cargo.cms.export.report.bo.PrintPMNFRept_701BO" >
	 SELECT t1.flt_key inbFltKey,t1.awb_no awbNo,f1.flt_type as inbFltType,
			to_char(t1.flt_date,'DDMONYY')||' '||LPAD(f1.sch_time, 4, '0') schTime
			FROM v_ddt_dtl t1 join flt_opr f1 on t1.FLT_KEY = f1.flt_key
			and t1.flt_date = f1.sch_date
			WHERE t1.AWB_NO=#awbNo1# AND t1.SHP_CNTG_FLT_KEY  = #fltKey# AND t1.SHP_CNTG_FLT_DATE = to_date(#fltDate#,'DDMONYY')
			UNION
			SELECT A.flt_key inbFltKey,A.awb_no awbNo,B.flt_type as inbFltType,
			to_char(A.flt_date,'DDMONYY')||' '||LPAD(B.sch_time, 4, '0') schTime
			FROM IMP_CAR_SHP A,
			FLT_OPR B
			WHERE 
			B.FLT_KEY = A.FLT_KEY AND
			B.SCH_DATE = A.FLT_DATE AND
			A.AWB_NO=#awbNo1# 
			AND NOT EXISTS (SELECT NULL
			FROM v_ddt_dtl t1 join flt_opr f1 on t1.FLT_KEY = f1.flt_key
			and t1.flt_date = f1.sch_date
			WHERE t1.AWB_NO=#awbNo1# AND t1.SHP_CNTG_FLT_KEY  = #fltKey# AND t1.SHP_CNTG_FLT_DATE = to_date(#fltDate#,'DDMONYY')
		) order by schTime asc
    </select>
	<select id="REPT_SQL_PMAN_LIST_FLT_SUM_ULD_701" parameterClass="cargo.cms.export.report.bo.PrintPMNFRept_701BO" resultClass="cargo.cms.export.report.bo.PrintPMNFRept_701BO" >
	select decode(a.uldNo,'BT TARMAC',1,2) roworder, a.* from (
		 SELECT
	     A.ULD_BT_NO AS uldNo,
	     (SELECT code_desc from mast_code_dtl 
	         			WHERE CODE = FUN_GET_ULD_STATE(A.ULD_BT_NO) and CODE_TYPE='ULD_STATE' AND ROWNUM=1) AS uldStatus,
	     A.CONTR_CODE AS contour,
	     (select sum(ASSIGNED_PCS) from EXP_PMANIFEST_ULD_AWB ua where ua.ULD_BT_NO=A.ULD_BT_NO and ua.FLT_KEY =A.FLT_KEY and ua.FLT_DATE=A.FLT_DATE ) as totalUldBuPc,
	     (select sum(ASSIGNED_WT) from EXP_PMANIFEST_ULD_AWB ua where ua.ULD_BT_NO=A.ULD_BT_NO and ua.FLT_KEY =A.FLT_KEY and ua.FLT_DATE=A.FLT_DATE ) as totalUldBuWt 	
		  FROM
		      EXP_PMANIFEST_ULD A
		      LEFT JOIN ULD_INVENTORY B on A.FLT_KEY =B.FLT_KEY and A.FLT_DATE=B.FLT_DATE and A.ULD_BT_NO = B.ULD_KEY
		WHERE 
		      A.FLT_KEY = #fltNo# AND
		      A.FLT_DATE =#fltDate#
	 UNION
	     SELECT
	     A.ULD_BT_NO AS uldNo,
	     (SELECT code_desc from mast_code_dtl 
	         			WHERE CODE = FUN_GET_ULD_STATE(A.ULD_BT_NO) and CODE_TYPE='ULD_STATE' AND ROWNUM=1) AS uldStatus,
	     A.CONTR_CODE AS contour,
	     (SELECT SUM(ASSIGNED_PCS) FROM EXP_PMAN_TARMAC_ULD_AWB UA WHERE UA.ULD_BT_NO=A.ULD_BT_NO AND UA.FLT_KEY =A.FLT_KEY AND UA.FLT_DATE=A.FLT_DATE ) AS totalUldBuPc,
	     (select sum(ASSIGNED_WT) from EXP_PMAN_TARMAC_ULD_AWB ua where ua.ULD_BT_NO=A.ULD_BT_NO and ua.FLT_KEY =A.FLT_KEY and ua.FLT_DATE=A.FLT_DATE ) as totalUldBuWt
		FROM
	      EXP_PMAN_TARMAC_ULD A
	      LEFT JOIN ULD_INVENTORY B on A.FLT_KEY =B.FLT_KEY and A.FLT_DATE=B.FLT_DATE and A.ULD_BT_NO = B.ULD_KEY
		WHERE 
		      A.FLT_KEY = #fltNo# AND
		      A.FLT_DATE =#fltDate#
	 UNION
	     SELECT
	     'BT TARMAC' AS uldNo,
	     '',
	     '',
	     0,
	     0
		FROM
	      EXP_PMAN_TARMAC_AWB A
		WHERE 
		      A.FLT_KEY = #fltNo# AND
		      A.FLT_DATE =#fltDate# AND
          	  A.BULK_PCS>0
          GROUP BY A.FLT_KEY, A.FLT_DATE
		)  a order by roworder,a.uldNo
	</select>
	<select id="REPT_SQL_PMAN_LIST_FLT_SUM_AWB_701" parameterClass="cargo.cms.export.report.bo.PrintPMNFRept_701BO" resultClass="cargo.cms.export.report.bo.PrintPMNFRept_701BO" >
	SELECT 
    		substr(B.AWB_NO,0,3)||'-'||substr(B.AWB_NO,4,8) AS awbNo,
            to_char(B.AWB_DATE,'DDMONYY') AS awbDate,
            A.ULD_BT_NO AS uldNo,
            B.ASSIGNED_PCS AS awbBuPc,
            B.ASSIGNED_WT AS awbBuWt,
            C.awb_type as awbFlow
           FROM
            EXP_PMANIFEST_ULD A
            JOIN EXP_PMANIFEST_ULD_AWB B on B.ULD_BT_NO = A.ULD_BT_NO AND B.FLT_KEY = A.FLT_KEY AND B.FLT_DATE = A.FLT_DATE 
            JOIN EXP_PMANIFEST_AWB P on P.FLT_KEY=A.FLT_KEY AND P.FLT_DATE=A.FLT_DATE AND P.AWB_NO = B.AWB_NO AND P.UNLDG_PT = B.UNLDG_PT
            LEFT JOIN AWB C ON  C.AWB_NO = B.AWB_NO AND C.AWB_DATE = B.AWB_DATE
          WHERE 
             A.FLT_KEY = #fltNo# AND
             A.FLT_DATE = #fltDate# AND
             A.ULD_BT_NO = #uldNo#
	UNION
		SELECT 
            substr(B.AWB_NO,0,3)||'-'||substr(B.AWB_NO,4,8) AS awbNo,
            to_char(B.AWB_DATE,'DDMONYY') AS awbDate,
            A.ULD_BT_NO AS uldNo,
            B.ASSIGNED_PCS AS awbBuPc,
            B.ASSIGNED_WT AS awbBuWt,
            C.awb_type as awbFlow
            FROM
            EXP_PMAN_TARMAC_ULD A
            JOIN EXP_PMAN_TARMAC_ULD_AWB B on B.ULD_BT_NO = A.ULD_BT_NO AND B.FLT_KEY = A.FLT_KEY AND B.FLT_DATE = A.FLT_DATE 
            JOIN EXP_PMAN_TARMAC_AWB P on P.FLT_KEY=A.FLT_KEY AND P.FLT_DATE=A.FLT_DATE AND P.AWB_NO = B.AWB_NO AND P.UNLDG_PT = B.UNLDG_PT
            LEFT JOIN AWB C ON  C.AWB_NO = B.AWB_NO AND C.AWB_DATE = B.AWB_DATE
          WHERE 
             A.FLT_KEY = #fltNo# AND
             A.FLT_DATE = #fltDate# AND
             A.ULD_BT_NO = #uldNo#
	</select>	
	<select id="REPT_SQL_PMAN_LIST_FLT_SUM_BT_AWB_701" parameterClass="cargo.cms.export.report.bo.PrintPMNFRept_701BO" resultClass="cargo.cms.export.report.bo.PrintPMNFRept_701BO" >
		SELECT 
            substr(A.AWB_NO,0,3)||'-'||substr(A.AWB_NO,4,8) AS awbNo,
            TO_CHAR(A.AWB_DATE,'DDMONYY') AS awbDate,
            'BT TARMAC' AS uldNo,
            A.ASSIGNED_BULK_PCS AS awbBuPc,
            A.ASSIGNED_BULK_WT AS awbBuWt,
            C.awb_type as awbFlow
            FROM
            EXP_PMAN_TARMAC_AWB A
            LEFT JOIN AWB C ON  C.AWB_NO = A.AWB_NO AND C.AWB_DATE = A.AWB_DATE
          WHERE 
             A.FLT_KEY = #fltNo# AND
             A.FLT_DATE = #fltDate# AND
             A.BULK_PCS>0
	</select>    
	<!-- Tow Order Out Starts -->
	
	<select id="getTowOrderOutDetails_Rept700" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	   SELECT TO_NO,TYPE,RHO_ID,VER_NO,FLT_KEY,TO_CHAR(FLT_DATE,'DDMONYY') FLT_DATE,URF_NO,DEST_CODE,TO_CHAR(EST_TIME,'DDMONYY') EST_DATE,TO_CHAR(EST_TIME,'HH24:MI') EST_TIME,HO_AREA,STATUS,NOTF_SEND_DATE,REM_1_DATE,
       REM_2_DATE,VOID_USER_ID,VOID_DATE,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,FLT_TYPE, TO_CHAR(CR_DATE,'HH24MI')||' hrs. / '||TO_CHAR(CR_DATE,'YY Mon') ISSUE_TIME,
       TO_CHAR(CR_DATE,'DDMONYYYY HH24:MI') ISSUE_DATE_TIME, CR_USER_ID STAFF_ID
       FROM TOW_ORDER_OUT WHERE TO_NO = #TO_NO# AND STATUS='ISSUED'
	</select>
	
	<select id="getTowOrderOutUldDetails_Rept700" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT ULD_KEY FROM TOW_ORDER_OUT_DTL WHERE TO_NO = (
       SELECT TO_NO FROM TOW_ORDER_OUT WHERE TO_NO = #TO_NO# AND FLT_KEY = #FLT_KEY# AND TO_CHAR(FLT_DATE,'DDMONYY') = #FLT_DATE# AND FLT_TYPE='E'
       )
	</select>
	
	<select id="sqlExpRampGetFlightDetailsForTow_Rept700" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT 
        FLT_KEY, TO_CHAR(SCH_DATE,'DD Mon') FLT_DATE, CHKOUT_AREA, DEST,
        PKG_COMMON.get_flt_eta(#FLT_KEY#, TO_DATE(#FLT_DATE#,'DDMONYY'), 'D', 'DD') AS ETD,
        SUBSTR(TRIM(TO_CHAR(NVL(SCH_TIME,0),'0000')),0,2)|| ':'|| SUBSTR(TRIM(TO_CHAR(NVL(SCH_TIME,0),'0000')),3,4) AS STD,
        TO_CHAR(SYSDATE+TO_NUMBER((SELECT NVL(RULE_VALUE,0) FROM CMSRULES WHERE RULE_CODE='ESTIMATED_TIME_FOR_TOW' AND SNO='1' AND VIEW_IND = 'Y'))/24,'HH24:MI') AS EST_TOW,
        ACFT_PRK_BAY ACFT_BAY,
        ACFT_REG_NO ACFT_REG,
        CGO_ACFT_TYPE ACFT_TYPE,
        CARR_CODE CARR_CODE,
        TO_CHAR(SYSDATE,'HH24MI')||' hrs. / '||TO_CHAR(SYSDATE,'YY Mon') ISSUE_TIME,
       	TO_CHAR(SYSDATE,'DDMONYYYY HH24:MI') ISSUE_DATE_TIME
      FROM 
        FLT_OPR
      WHERE 
        FLT_KEY=#FLT_KEY#
      AND 
        SCH_DATE=TO_DATE(#FLT_DATE#,'DDMONYY')
      AND       
        TR_NO=( SELECT 
                  TR_NO 
                FROM 
                  FLT_OPR_EVENTS 
                WHERE 
                  FLT_KEY=#FLT_KEY#  
                AND 
                  SCH_DATE=TO_DATE(#FLT_DATE#,'DDMONYY') 
                AND 
                  FLT_TYPE='D'
              )
	</select>
	
	<!-- Tow Order Out Ends -->
	
	<!-- Ramp Monitoring Starts -->
	
	<select id="sqlExpRampGetFlightDetailsRept702" parameterClass="cargo.cms.export.report.bo.FlightULDListRept_702BO" resultClass="cargo.cms.export.report.bo.FlightULDListRept_702BO">
	
		SELECT T1.FLT_KEY fltKey, T1.CARR_CODE carrCode, T1.FLT_NO fltNo, TO_CHAR(T1.SCH_DATE,'DDMONYY') fltDate, T1.ACFT_TYPE acftType, T1.ACFT_PRK_BAY parkingBay,
		DECODE(PKG_COMMON.get_flt_eta(#fltKey#, TO_DATE(#fltDate#,'DDMONYY'), 'D', 'DD'), null,
    	DECODE(T1.SCH_TIME, NULL,NULL,SUBSTR(TRIM(TO_CHAR(NVL(T1.SCH_TIME,0),'0000')),0,2)|| ':'|| SUBSTR(TRIM(TO_CHAR(NVL(T1.SCH_TIME,0),'0000')),3,4)),
		PKG_COMMON.get_flt_eta(#fltKey#, TO_DATE(#fltDate#,'DDMONYY'), 'D', 'DD'))AS etd,
		DECODE(T1.SCH_TIME, NULL,NULL,SUBSTR(TRIM(TO_CHAR(NVL(T1.SCH_TIME,0),'0000')),0,2)|| ':'|| SUBSTR(TRIM(TO_CHAR(NVL(T1.SCH_TIME,0),'0000')),3,4)) AS std,
		DECODE(T2.BUILDUP_CUSER, NULL,'N', DECODE(T2.BUILDUP_CDATE, NULL,'N', DECODE(T2.BUILDUP_CTIME, NULL, 'N','Y'))) buCompInd,
		DECODE(T1.CHKOUT_AREA,'STG','S','A') AS checkOutMode,
		   (SELECT DECODE(COUNT(1), 0, NULL, COUNT(1))
    FROM EXP_CHKOUT_DTL CHK
    WHERE T1.FLT_KEY  = CHK.FLT_KEY
    AND T1.SCH_DATE   = CHK.FLT_DATE
   
    AND CHK.HO_FORM_NO  IS NULL
    ) AS hoCount
		FROM FLT_OPR T1
		LEFT JOIN FLT_OPR_EVENTS T2 ON
		T1.TR_NO = T2.TR_NO AND
		T1.FLT_KEY = T2.FLT_KEY AND
		T1.SCH_DATE = T2.SCH_DATE AND
		T1.FLT_TYPE = T2.FLT_TYPE
		WHERE
		T1.FLT_KEY = #fltKey# AND
		TO_CHAR(T1.SCH_DATE,'DDMONYY') = #fltDate# AND
		T1.FLT_TYPE = 'D'
		
	</select>
	
	
	<select id="getRampAssignedUldSumForFlightRept702"  parameterClass="cargo.cms.export.report.bo.FlightULDListRept_702BO" resultClass="java.util.HashMap">
		SELECT SUBSTR(T1.ULD_BT_NO,1,3) ULD_TYPE,  COUNT(1) ULD_COUNT FROM EXP_PMANIFEST_ULD T1
		LEFT JOIN ULD_INVENTORY T2 ON
		T1.ULD_BT_NO = T2.ULD_KEY
		WHERE 
		T1.FLT_KEY = #fltKey# AND 
		TO_CHAR(T1.FLT_DATE,'DDMONYY') = #fltDate# 
		AND NVL(T2.HANDLING_MODE,'N')!='DT'
		GROUP BY SUBSTR(T1.ULD_BT_NO,1,3)
	</select>
	
	<select id="getRampUldAllotByUldTypeRept702"  parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT ALLOT.ULD_ALLOT
		FROM ULD_GROUP_TYPE GRP JOIN MAST_ULD_ALLOT_GROUP ALLOT ON GRP.ULD_GROUP=ALLOT.ULD_GROUP 
		WHERE GRP.ULD_TYPE=#uldType#
	</select>
	
	<select id="getRampToBeTowedSumForFlightRept702"  parameterClass="cargo.cms.export.report.bo.FlightULDListRept_702BO" resultClass="java.util.HashMap">
		SELECT SUBSTR(T1.ULD_BT_NO,1,3) ULD_TYPE,  COUNT(1) ULD_COUNT FROM EXP_PMANIFEST_ULD T1
		LEFT JOIN ULD_INVENTORY T2 ON
		T1.ULD_BT_NO = T2.ULD_KEY
		WHERE 		
		T1.FLT_KEY = #fltKey# AND 
		TO_CHAR(T1.FLT_DATE,'DDMONYY') = #fltDate# AND 
		T1.ULD_BT_NO IN (SELECT ULD_KEY FROM TOW_ORDER_OUT_DTL WHERE TO_NO IN (SELECT TO_NO FROM TOW_ORDER_OUT WHERE FLT_KEY=#fltKey# AND TO_CHAR(FLT_DATE,'DDMONYY')=#fltDate# AND STATUS NOT IN ('VOID','FORCE COMPLETE')))
		AND NVL(T2.HANDLING_MODE,'N')!='DT'
		GROUP BY SUBSTR(T1.ULD_BT_NO,1,3)
	</select>
	
	<select id="getRampWithOutUldSumForFlightRept702"  parameterClass="cargo.cms.export.report.bo.FlightULDListRept_702BO" resultClass="java.util.HashMap">
		SELECT SUBSTR(T1.ULD_BT_NO,1,3) ULD_TYPE,  COUNT(1) ULD_COUNT FROM EXP_PMANIFEST_ULD T1
		LEFT JOIN ULD_INVENTORY T2 ON
		T1.ULD_BT_NO = T2.ULD_KEY
		WHERE 
		T1.FLT_KEY = #fltKey# AND 
		TO_CHAR(T1.FLT_DATE,'DDMONYY') = #fltDate# AND 
		<!-- T1.ULD_BT_NO NOT IN (SELECT ULD_KEY FROM TOW_ORDER_OUT_DTL WHERE TO_NO IN (SELECT TO_NO FROM TOW_ORDER_OUT WHERE FLT_KEY=#fltKey# AND TO_CHAR(FLT_DATE,'DDMONYY') = #fltDate# AND STATUS NOT IN ('VOID','FORCE COMPLETE'))) -->
		NOT EXISTS (select null from tow_order_out t3,tow_order_out_dtl t4
                                where t3.to_no=t4.to_no and not(status='VOID' or(status ='FORCE COMPLETE' and remove_date is null))
                                 and uld_key=t1.uld_bt_no and flt_key=t1.flt_key and flt_date=t1.flt_date)
		AND NVL(T2.HANDLING_MODE,'N')!='DT'
		GROUP BY SUBSTR(T1.ULD_BT_NO,1,3)
	</select>
	
	<select id="getRampCheckOutUldSumForFlightRept702"  parameterClass="cargo.cms.export.report.bo.FlightULDListRept_702BO" resultClass="java.util.HashMap">
		SELECT SUBSTR(T1.ULD_KEY,1,3) ULD_TYPE,  COUNT(1) ULD_COUNT FROM EXP_CHKOUT_DTL T1
		LEFT JOIN ULD_INVENTORY T2 ON
		T1.ULD_KEY = T2.ULD_KEY
		WHERE T1.FLT_KEY = #fltKey# AND
		TO_CHAR(T1.FLT_DATE,'DDMONYY') = #fltDate# AND
		T1.CHK_FLG = 'Y' AND T1.CHKOUT_DATE IS NOT NULL AND T1.CHKOUT_TIME IS NOT NULL
		AND NVL(T2.HANDLING_MODE,'N')!='DT'
		GROUP BY SUBSTR(T1.ULD_KEY,1,3)
	</select>
	
	<select id="getRampNotCheckOutUldSumForFlightRept702"  parameterClass="cargo.cms.export.report.bo.FlightULDListRept_702BO" resultClass="java.util.HashMap">
		SELECT SUBSTR(T1.ULD_KEY,1,3) ULD_TYPE,  COUNT(1) ULD_COUNT FROM EXP_CHKOUT_DTL T1
		LEFT JOIN ULD_INVENTORY T2 ON
		T1.ULD_KEY = T2.ULD_KEY
		WHERE T1.FLT_KEY = #fltKey# AND
		TO_CHAR(T1.FLT_DATE,'DDMONYY') = #fltDate# AND
		(T1.CHK_FLG IS NULL OR CHK_FLG = 'N') AND T1.CHKOUT_DATE IS NULL AND T1.CHKOUT_TIME IS NULL
		AND NVL(T2.HANDLING_MODE,'N')!='DT'
		GROUP BY SUBSTR(T1.ULD_KEY,1,3)
	</select>
	
	<select id="sqlExpRampGetFlightUldListRept702"  parameterClass="cargo.cms.export.report.bo.FlightULDListRept_702BO" resultClass="cargo.cms.export.report.bo.FlightULDListRept_702BO">
	<![CDATA[
SELECT 
      T1.ULD_KEY uldKey,
       case when T2.ULD_BT_NO is not null then NVL(T2.READY_DISP,'N') else DECODE(T3.OFLD_FLG,'Y','N','Y') end as readyForDisp,
       case when T2.ULD_BT_NO is not null then NVL(T2.READY_WH,'N') else DECODE(T3.OFLD_FLG,'Y','N','Y') end as readyWh,
       case when T2.ULD_BT_NO is not null then NVL(T2.BLDUP_COMPLETE,'N') else 'Y' end as buCompInd,
       (SELECT STRAGG(STRINGDELIM(CODE,',')) FROM V_EXP_ULD_SHC WHERE ULD_KEY = T1.ULD_KEY AND ROWNUM < 10) splCodes,
       T3.EIC_FLG eicInd,
       T3.EMPTY_FLG emptyInd,
       T3.LOC_CODE location,
       expto.to_no as towOrderNo,
       T4.FROM_MHCS AS mhcsCheckOutInd,
       decode(T4.CHKOUT_TIME, null, '', SUBSTR(lpad(T4.CHKOUT_TIME,4,0), 1, 2)|| ':'||  SUBSTR(lpad(T4.CHKOUT_TIME,4,0), 3)) AS checkOutTime,
       DECODE(EXPHOVER.PRINT_HANDOVER_DATE,null,'N', 'Y') AS hoInd,
       expto.HO_AREA trfGroup,
       T4.REASON AS reason,
       TO_CHAR(T4.MHCS_CHKOUT_TIME,'HH24:MI') AS mhsCheckOutTime,
	   T1.CONTR_CODE AS contourCode,(SELECT DECODE(COUNT(1), 0, NULL, COUNT(1))
    FROM EXP_CHKOUT_DTL CHK
    WHERE T1.FLT_KEY = CHK.FLT_KEY
    AND T1.FLT_DATE  = CHK.FLT_DATE
    AND T1.ULD_KEY = CHK.ULD_KEY
    AND CHK.HO_FORM_NO IS  NULL
    ) AS hoCount
FROM 
      EXP_FLT_ULD T1
      LEFT JOIN EXP_PMANIFEST_ULD T2 ON T2.FLT_KEY = T1.FLT_KEY AND T2.FLT_DATE = T1.FLT_DATE AND T2.ULD_BT_NO = T1.ULD_KEY
      JOIN ULD_INVENTORY T3 ON T3.ULD_KEY = T1.ULD_KEY
      LEFT JOIN EXP_CHKOUT_DTL T4 ON  T4.FLT_KEY = T1.FLT_KEY AND T4.FLT_DATE = T1.FLT_DATE AND T4.ULD_KEY = T1.ULD_KEY
      LEFT JOIN (select T5.FLT_KEY, T5.FLT_DATE, T6.uld_key, lpad(MAX(TO_NUMBER(T5.to_no)),8,0) to_no from tow_order_out T5 , tow_order_out_dtl T6
                                    where (STATUS IN ('ISSUED','COMPLETE') or (STATUS = 'FORCE COMPLETE' and T6.remove_date is not null))
                                    and T5.to_no=T6.to_no
                                    GROUP BY T5.FLT_KEY, T5.FLT_DATE, T6.uld_key) uldto
                                    on uldto.flt_key=T1.flt_key and uldto.flt_date=T1.flt_date and uldto.uld_key=T1.ULD_KEY
      LEFT JOIN tow_order_out expto on expto.to_no = uldto.to_no
      LEFT JOIN EXP_ULD_HOVER_DTL EXPHOVER ON EXPHOVER.HO_FORM_NO = T4.HO_FORM_NO AND EXPHOVER.ULD_KEY = T4.ULD_KEY
WHERE
      T1.FLT_KEY = #fltKey# AND
      TO_CHAR(T1.FLT_DATE,'DDMONYY') = #fltDate# 
      AND NVL(T3.HANDLING_MODE,'N')!='DT'
      AND ( NOT (NVL(T3.TRANSIT_TYPE,'*') = 'TT' or (NVL(T3.TRANSIT_TYPE,'*') = 'IF' and T3.LOC_CODE is null)) OR  T4.CHK_FLG = 'Y')
		
		]]>
	</select>
	
	<select id="getFlightAllotmentRept702" parameterClass="map" resultClass="java.util.HashMap" >
          <![CDATA[     
          select  
                (select (decode(sum(allot.qty_Q7 ), null, '',0,'', sum(allot.qty_Q7) ||'Q7')
               || decode(sum(allot.qty_Q6 ), null, '',0,'',','||  sum(allot.qty_Q6 ) ||'Q6')
               || decode(sum(allot.qty_X8 ), null, '',0,'', ','|| sum(allot.qty_X8 ) ||'X8')
               || decode( sum(allot.QTY_PEB ), null, '',0,'', ','|| sum(allot.QTY_PEB ) ||'PEB')
               || decode(sum(allot.QTY_H2 ), null, '',0,'', ','|| sum(allot.QTY_H2 ) ||'H2')
               || decode(sum(allot.QTY_A2 ), null, '',0,'', ','|| sum(allot.QTY_A2 ) ||'A2')
               || decode(sum(allot.QTY_LDC ), null, '',0,'', ','|| sum(allot.QTY_LDC ) ||'LDC')
               ||  decode( count(allot.QTY_H5 ), 0, '', ','||'H5' )) from edi_elp_allot allot
                where allot.tr_no= msg.tr_no and allot.CGO_TYPE in('Export Local Pre-Pack', 'Export Local B/U') ) as WH_ALLOT                
                from edi_elp_msg msg where  msg.flt_key=#FLIGHT_NO#   and msg.flt_date=TO_DATE(#FLIGHT_DATE#, 'DDMONYY') and msg.tr_no in(
                SELECT a.trNO FROM (select elpmsg.tr_no as trNo from  edi_elp_msg elpmsg  where elpmsg.flt_key=#FLIGHT_NO# and elpmsg.flt_date=TO_DATE(#FLIGHT_DATE#, 'DDMONYY') and elpmsg.TRF_IND='Y'  order by elpmsg.tr_no desc)a
                WHERE rownum =1)	
          ]]>
     </select>
	
	
	<!-- Ramp Monitoring Ends -->
	
   	
   	<!--  Added By Mithun KK Ends  -->

   	<select id="exp_rept_068"  parameterClass="cargo.cms.export.report.bo.OffLoadRept_068BO"  resultClass="cargo.cms.export.report.bo.OffLoadRept_068BO">		
			SELECT #flightDateFrom# as flightDateFrom,  #flightDateTo# as flightDateTo,  
				ec.carr_code as scarrier, 
				eoa.FLT_key as flightNo,
				TO_CHAR(eoa.FLT_Date, 'DDMONYY' )  as flightDate, 
				eoa.AWB_No as awbNo,  
				sum(eoa.OFF_BULK_WT) as bulk50, 
				0 as bulk25, 
				sum(OFF_PPK_WT) as bup50 , 
				0 as bup25 
			FROM exp_car ec, exp_offload_awb eoa , FLT_OPR F
			WHERE
				EOA.FLT_KEY = F.FLT_KEY
				AND EOA.FLT_DATE = F.SCH_DATE
				AND F.FLT_TYPE = 'D'
				and f.CARR_code = NVL(#scarrier#, f.CARR_code)
				AND eoa.FLT_Date BETWEEN TO_DATE(#flightDateFrom#,'DDMONYY') AND TO_DATE(#flightDateTo#,'DDMONYY')
				AND EoA.AWB_NO     = EC.AWB_NO 
				AND EoA.AWB_DATE    = EC.AWB_DATE
				AND EC.CATALOG  IN ('TG','TI','TU')
			<isNotEmpty property="loginCarrier">
            	AND (f.CARR_CODE = #loginCarrier# OR f.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP  WHERE GRP_CARR_CODE = #loginCarrier#))                                          
        	</isNotEmpty>			
			group by eoa.awb_no, eoa.awb_date, ec.carr_code,eoa.FLT_key,eoa.FLT_Date 
			union all
			SELECT #flightDateFrom# as flightDateFrom,  #flightDateTo# as flightDateTo,  
				ec.carr_code as scarrier,
				eoa.FLT_key as flightNo,
				TO_CHAR(eoa.FLT_Date, 'DDMONYY' )  as flightDate, 
				eoa.AWB_No as awbNo,  
				0 as bulk50, 
				sum(eoa.OFF_BULK_WT) as bulk25, 
				0 as bup50 , 
				sum(OFF_PPK_WT) as bup25 
			FROM exp_car ec, exp_offload_awb eoa, FLT_OPR F
			WHERE
				EOA.FLT_KEY = F.FLT_KEY
				AND EOA.FLT_DATE = F.SCH_DATE
				AND F.FLT_TYPE = 'D'
				and f.CARR_code = NVL(#scarrier#, f.CARR_code)
				AND eoa.FLT_Date BETWEEN TO_DATE(#flightDateFrom#,'DDMONYY') AND TO_DATE(#flightDateTo#,'DDMONYY')
				AND EoA.AWB_NO     = EC.AWB_NO 
				AND EoA.AWB_DATE    = EC.AWB_DATE
				AND EC.CATALOG NOT IN ('TA','TG','TI','TU')
				AND EC.HANDLER_CODE = 'CPCT'
			<isNotEmpty property="loginCarrier">
            	AND (f.CARR_CODE = #loginCarrier# OR f.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP  WHERE GRP_CARR_CODE = #loginCarrier#))                                          
        	</isNotEmpty>
			group by eoa.awb_no, eoa.awb_date, ec.carr_code,eoa.FLT_key,eoa.FLT_Date
		</select>		
		<select id="exp_rept_068_TG"  parameterClass="cargo.cms.export.report.bo.OffLoadRept_068BO"  resultClass="cargo.cms.export.report.bo.OffLoadRept_068BO">
		SELECT A.FLIGHTDATEFROM flightDateFrom,A.FLIGHTDATETO flightDateTo,A.FLIGHTNO flightNo,A.FLIGHTDATE flightDate,A.CARR_CODE carr_code,A.OPERATIONDATE operationDate,A.AWBNO awbNo,A.AWBDATE awbDate,
       (SELECT DECODE(ULD_KEY,NULL,LSP_NO,ULD_KEY) FROM AWB_INVENTORY WHERE AWB_NO=A.AWBNO AND AWB_DATE =A.AWBDATE AND FLT_KEY IS NULL AND FLT_DATE IS NULL AND REF_TR_NO=A.ULDNO AND ROWNUM=1) uldNo,
       A.transitType transitType,A.bulk50 bulk50,A.bulk25 bulk25,A.bup50 bup50,A.bup25 bup25
       FROM (
			select	#flightDateFrom# as flightDateFrom,  #flightDateTo# as flightDateTo,  
					flt_key as flightNo, 
					TO_CHAR(flt_date, 'DDMONYY' ) as flightDate, 
					carr_code, 
					to_char(max(operation_date),'DDMONYY') as operationDate, 
					awb_no as awbNo,
					awb_date as awbDate, 
					uld_key as uldNo, 
					transitType as transitType,
					nvl(sum(decode(catalog, 'TA', bulk_wt, 'TG', bulk_wt, 'TI', bulk_wt, 'TU', bulk_wt, 0)), 0) bulk50,
					nvl(sum(decode(catalog, 'TA', 0, 'TG', 0, 'TI', 0, 'TU', 0, bulk_wt)), 0) bulk25,
					nvl(sum(decode(catalog, 'TA', bup_wt, 'TG', bup_wt, 'TI', bup_wt, 'TU', bup_wt, 0)), 0) bup50,
					nvl(sum(decode(catalog, 'TA', 0, 'TG', 0, 'TI', 0, 'TU', 0, bup_wt)), 0) bup25
			from   (select	t1.flt_key, t1.flt_date, t2.awb_no,to_char(t2.awb_date,'DDMONYY') awb_date, t1.uld_bt_no uld_key, 
							F.carr_code, t3.catalog, t2.confirmed_date operation_date,
					       decode(t1.ppk_type, 'B', t2.offload_wt, 0) bulk_wt,
					       decode(t1.ppk_type, 'B', 0, t2.offload_wt) bup_wt,
					       t1.TRF_TYPE transitType
					from   exp_offload_uld t1, exp_offload_uld_awb t2, exp_car t3, uld_inventory ul,FLT_OPR F
					where  
					t1.FLT_KEY = F.FLT_KEY
					and  t1.FLT_DATE = F.SCH_DATE
					and  t1.flt_key = t2.flt_key
					and    t1.flt_date = t2.flt_date
					and    t1.uld_bt_no = t2.uld_bt_no
					and    t1.uld_bt_no = ul.uld_key(+)
					and    t2.awb_no = t3.awb_no
					and    t2.awb_date = t3.awb_date
					and    t2.confirmed_yn = 'Y'
					and    t3.handler_code = 'CPCT')
			where  flt_date between to_date(#flightDateFrom#,'DDMONYY') and to_date(#flightDateTo#,'DDMONYY')			
			AND CARR_CODE = nvl(#scarrier#, carr_code)
			<isNotEmpty prepend="AND" property="flightNo">
				flt_key = nvl(#flightNo#, flt_key)
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="flightDate">
				flt_date = nvl(#flightDate#, flt_date)
			</isNotEmpty>
			<isNotEmpty property="loginCarrier">
            	AND (CARR_CODE = #loginCarrier# OR CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP  WHERE GRP_CARR_CODE = #loginCarrier#))                                          
        	</isNotEmpty>
			group by flt_key, flt_date, carr_code, awb_no,awb_date,uld_key,transitType) A 		
		</select>
	<select id="getUAFPrintOTLList_Rept164" parameterClass="cargo.cms.export.report.bo.UAFRept_164BO" resultClass="cargo.cms.export.report.bo.UAFRept_164BO">
		select  t1.del_yn as deleteInd,
				t1.uld_key as uldnumber, 
				t1.uld_key as uldnumber1, 
				t1.contr_code as contourcode, 
				t1.buildup_yn as buildupcompleteindicator, 
				t1.pman_yn as premanifestindicator, 
			    t1.eic_yn as eicindicator, 
				t1.empty_yn as emptyindicator, 
				t1.checkout_yn as checkoutInd,
				t2.loc_code as locationcode,
				t1.bb_ind as bbIndicator,
				t1.flt_use as fltUse,
				t1.source as sourceDesc        		
		from   exp_flt_uld t1, uld_inventory t2
		where  t1.uld_key = t2.uld_key
			   and t1.flt_key = #fltNo#
			   and t1.flt_date = #fltDate#
			   and  t1.source not in ('DLS-L', 'DLS-E')
			   and not exists (select null from uld_inventory t2 where  t2.uld_key = t1.uld_key and nullif(t2.base_plt, 'N') is not null)
		<isNotEmpty property="uldNo" prepend="and">
			t1.uld_key = #uldNo#
		</isNotEmpty>
			<dynamic prepend="ORDER BY ">
                         <isNotEmpty property="sortOrder.sortField">
                        $sortOrder.sortField$
                  </isNotEmpty>
            </dynamic>  
	</select>
	<select id="getFinalizeULDDiffList_Rept579"  parameterClass="cargo.cms.export.report.bo.FinalizeULDWtRept_579BO" resultClass="cargo.cms.export.report.bo.FinalizeULDWtRept_579BO" >
	 select PU.ULD_BT_NO as uldKey,
        TRIM(to_char(UI.first_wt,9999999.99)) as firstWt,
        TRIM(to_char(UI.second_wt,9999999.99)) as secondWt,
        TRIM(to_char(UI.third_wt,9999999.99)) as thirdWt,
        (SELECT RULE_VALUE FROM CMSRULES WHERE RULE_CODE = 'FINALIZED_ULD_WT_Wi-Fi_IND') as wifiInd
       	from EXP_PMANIFEST_ULD PU
        join ULD_INVENTORY UI on UI.ULD_KEY = PU.ULD_BT_NO
       	where PU.FLT_KEY = #flightNoKey#
       	and   PU.FLT_DATE = #flightDate#
       	and   (UI.FINAL_WEIGHT is null or UI.FINAL_WEIGHT !='Y')
       	and   UI.first_wt is not null
       	and   PU.BLDUP_COMPLETE = 'Y' 
       	<isEqual property="ppkInd" compareValue="Y" prepend="AND">
       	 (PU.PPK_TYPE = 'P' or PU.PPK_TYPE = 'M')
       	</isEqual>
	</select>
	<select id="getFinalizeULDVarList_Rept579"  parameterClass="cargo.cms.export.report.bo.FinalizeULDWtRept_579BO" resultClass="cargo.cms.export.report.bo.FinalizeULDWtRept_579BO" >
		select  wts.uldKey as uldKey,
	        TRIM(to_char(wts.netWt,9999999.99)) as netWt,
            TRIM(to_char(wts.tareWt,9999999.99)) as tareWt,
            TRIM(to_char(wts.grossWt,9999999.99)) as grossWt,
            TRIM(to_char(wts.buildupWt,9999999.99)) as buildupWt,
	        round(100 * (wts.netWt-wts.buildupWt)/wts.netWt) as varience,
	        (SELECT RULE_VALUE FROM CMSRULES WHERE RULE_CODE = 'FINALIZED_ULD_VARIENCE_LMT') as varienceLmt
	  	from (select 
	        UI.ULD_KEY as uldKey,
	        ui.gross_weight - ui.tare_weight as netWt,
	        UI.tare_weight as tareWt,
	        UI.gross_weight as grossWt,
	        (select SUM(assigned_wt) from EXP_PMANIFEST_ULD_AWB WHERE ULD_BT_NO = PU.ULD_BT_NO) as buildupWt
	        from EXP_PMANIFEST_ULD PU,
	        ULD_INVENTORY UI  where PU.ULD_BT_NO = ui.ULD_KEY and PU.FLT_KEY = #flightNoKey# and PU.FLT_DATE = #flightDate# ) wts,
	        EXP_PMANIFEST_ULD EPU,ULD_INVENTORY UIN 
	  	where EPU.FLT_KEY = #flightNoKey#
	    and   EPU.FLT_DATE = #flightDate#
	    and   EPU.ULD_BT_NO = wts.uldKey
	    and   UIN.ULD_KEY   = wts.uldKey
    	and   UIN.FINAL_WEIGHT = 'Y'
    	and   EPU.BLDUP_COMPLETE = 'Y' 
		    <isEqual property="ppkInd" compareValue="Y" prepend="AND">
		     (EPU.PPK_TYPE = 'P' or EPU.PPK_TYPE = 'M')
		     </isEqual>
	</select>
	<!--mahesh BN starts-->
	<select id="sqlGetListOfUldForPrintRep" parameterClass="cargo.cms.export.report.bo.ExpRampHandoverRepBO"  resultClass="cargo.cms.export.report.bo.ExpRampHandoverRepBO">
				  select
                  t3.FLT_KEY as fltNo,
                  to_char(t3.FLT_DATE,'ddMONYY') as fltDate ,
                  t3.ULD_bt_no as uldNo,
                  t1.chkout_time as chkOutTime,
                  decode(EXPHOVER.PRINT_HANDOVER_DATE,null,'N','Y') as handOverIndDate,
                  DECODE(EXPHOVER.print_handover_date,'',TO_CHAR(SYSDATE,'DDMONYYYY HH24:MI'),TO_CHAR(EXPHOVER.print_handover_date,'DDMONYYYY HH24:MI')) AS printDateAndTime,
                  decode(t3.READY_DISP,null,'N',t3.READY_DISP) as readyForDispatch,
                  to_char(t1.chkout_date,'ddMONYY hh:mm') as chkOutDate,
                  t2.loc_code as locn,
                  t2.EIC_FLG as eicFlg,
                  t2.EMPTY_FLG as emptyFlg,
                  t1.chkout_locn as chkOutLoc,                  
                 (SELECT STRAGG(STRINGDELIM(CODE,',')) FROM V_EXP_ULD_SHC WHERE ULD_KEY = T1.ULD_KEY AND ROWNUM &lt; 10)  spl,                   
                  t3.bldup_complete as bldupComplete,
                  t2.handling_mode ppkType,
                  t45.to_no as towOrderNo,
                  t2.RESV_FLG as resvFlg,
                  t2.contr_code as contrCode                
                  from exp_pmanifest_uld t3 
                  join uld_inventory t2
                  on  t3.flt_key=t2.flt_key
                  and t3.flt_date=t2.flt_date
                  and t3.uld_bt_no = t2.uld_key  
                  left join exp_chkout_dtl t1
                  on  t1.uld_key = t3.uld_bt_no
                  and t1.flt_key=t3.flt_key
                  and t1.flt_date=t3.flt_date
                  LEFT JOIN EXP_ULD_HOVER_DTL EXPHOVER ON EXPHOVER.HO_FORM_NO = t1.HO_FORM_NO AND EXPHOVER.ULD_KEY = t1.ULD_KEY
                  left join (select t4.to_no, t4.flt_key, t4.flt_date, t5.uld_key  from tow_order_out t4 , tow_order_out_dtl t5 
                             where t4.to_no=t5.to_no and status !='VOID') t45 
                  on t3.uld_bt_no=t45.uld_key and t45.flt_key=t3.flt_key and t45.flt_date=t3.flt_date
                  where   (t2.handling_mode is null or t2.handling_mode!='DT')
                  and t3.uld_bt_no not in (select uld_key from exp_flt_uld 
                                           where (Source='DLS-L' or Source='DLS-E') 
                                           and uld_key=t3.ULD_bt_no and flt_key=t3.flt_key and flt_date=t3.flt_date and FLT_TYPE='E')
                 and t3.flt_key= #fltNo#
                 and t3.flt_date=TO_DATE(#fltDate#,'DDMONYY')
                 UNION
                  select
                  t3.FLT_KEY as fltNo,
                  to_char(t3.FLT_DATE,'ddMONYY') as fltDate ,
                  t3.ULD_bt_no as uldNo,
                  t1.chkout_time as chkOutTime,
                  decode(EXPHOVER.PRINT_HANDOVER_DATE,null,'N','Y') as handOverIndDate,
                  DECODE(EXPHOVER.print_handover_date,'',TO_CHAR(SYSDATE,'DDMONYYYY HH24:MI'),TO_CHAR(EXPHOVER.print_handover_date,'DDMONYYYY HH24:MI')) AS printDateAndTime,
                  'Y' as readyForDispatch,
                  to_char(t1.chkout_date,'ddMONYY hh:mm') as chkOutDate,
                  t2.loc_code as locn,
                  t2.EIC_FLG as eicFlg,
                  t2.EMPTY_FLG as emptyFlg,
                  t1.chkout_locn as chkOutLoc,                  
                 (SELECT STRAGG(STRINGDELIM(CODE,',')) FROM V_EXP_ULD_SHC WHERE ULD_KEY = T1.ULD_KEY AND ROWNUM &lt; 10)  spl,                   
                  'Y' as bldupComplete,
                  t2.handling_mode ppkType,
                  t45.to_no as towOrderNo,
                  t2.RESV_FLG as resvFlg,
                  t2.contr_code as contrCode                
                  from exp_pman_tarmac_uld t3 
                  join uld_inventory t2
                  on  t3.flt_key=t2.flt_key
                  and t3.flt_date=t2.flt_date
                  and t3.uld_bt_no = t2.uld_key  
                  left join exp_chkout_dtl t1
                  on  t1.uld_key = t3.uld_bt_no
                  and t1.flt_key=t3.flt_key
                  and t1.flt_date=t3.flt_date
                  LEFT JOIN EXP_ULD_HOVER_DTL EXPHOVER ON EXPHOVER.HO_FORM_NO = t1.HO_FORM_NO AND EXPHOVER.ULD_KEY = t1.ULD_KEY
                  left join (select t4.to_no, t4.flt_key, t4.flt_date, t5.uld_key  from tow_order_out t4 , tow_order_out_dtl t5 
                             where t4.to_no=t5.to_no and status !='VOID') t45 
                  on t3.uld_bt_no=t45.uld_key and t45.flt_key=t3.flt_key and t45.flt_date=t3.flt_date
                  where (t2.handling_mode is null or t2.handling_mode!='DT')
                  and t3.uld_bt_no not in (select uld_key from exp_flt_uld 
                                           where (Source='DLS-L' or Source='DLS-E') 
                                           and uld_key=t3.ULD_bt_no and flt_key=t3.flt_key and flt_date=t3.flt_date and FLT_TYPE='E')
                  and t3.uld_bt_no in (select uld_key 
                                          from uld_inventory
                                           where (transit_type='TT' or transit_type='IF') 
                                           and imp_flt_key in (select flt_key
                                                             from v_ddt_dtl
                                                             where uld_key=t3.uld_bt_no 
                                                             and shp_cntg_flt_key=t3.flt_key
                                                             and shp_cntg_flt_date=t3.flt_date)
                                           and imp_flt_date in (select flt_date
                                                             from v_ddt_dtl
                                                             where uld_key=t3.uld_bt_no
                                                             and shp_cntg_flt_key=t3.flt_key
                                                             and shp_cntg_flt_date=t3.flt_date)
                                           )
                 and t3.flt_key= #fltNo#
			     and t3.flt_date=TO_DATE(#fltDate#,'DDMONYY')
	</select>
	<select id="exp_rept_541_2"  parameterClass="cargo.cms.export.report.bo.PrintULDTag_541BO" resultClass="cargo.cms.export.report.bo.PrintULDTag_541BO">
			select t1.uld_key uldKey,t1.contr_code contrCode,t2.GROSS_WEIGHT grossWt,
			t2.TARE_WEIGHT tareWt,(t2.gross_WEIGHT-t2.TARE_WEIGHT) diffAmt,
			t1.flt_key||'/'||to_char(t1.flt_date,'DDMONYY') fltKeyDt,
      		decode(awb.dest,'',t3.UNLDG_PT,awb.dest) destcode,
        	t3.UNLDG_PT transferAt
			from exp_chkout_dtl t1
			join uld_inventory t2
			on  t1.flt_key=t2.flt_key
			and t1.uld_key = t2.uld_key
			and t1.flt_date=t2.flt_date
			join exp_pmanifest_uld t3
			on  t1.uld_key = t3.uld_bt_no
			and t1.flt_key=t3.flt_key
			and t1.flt_date=t3.flt_date			
      		left join exp_pmanifest_uld_awb ua 
			on t3.uld_bt_no = ua.uld_bt_no
			and t3.flt_key = ua.flt_key
			and t3.flt_date = ua.flt_date
			and t3.UNLDG_PT = ua.UNLDG_PT
			left join awb awb
			on ua.awb_no = awb.awb_no
			and ua.awb_date = awb.awb_date
			where t1.uld_key = #uldKey#
	</select>
	<select id="exp_rept_541_list_2"  parameterClass="cargo.cms.export.report.bo.PrintULDTag_541BO" resultClass="cargo.cms.export.report.bo.PrintULDTag_541BO">
	select t1.uld_key uldKey,t1.contr_code contrCode,t3.GROSS_WT grossWt,
			t3.TARE_WT tareWt,(t3.gross_wt-t3.tare_wt) diffAmt,
			t1.flt_key||'/'||to_char(t1.flt_date,'DDMONYY') fltKeyDt,
      		t2.DEST_CODE destcode
			from exp_chkout_dtl t1
			left join uld_inventory t2
			on  t1.flt_key=t2.flt_key
			and t1.uld_key = t2.uld_key
			and t1.flt_date=t2.flt_date
			left join exp_pmanifest_uld t3
			on  t1.uld_key = t3.uld_bt_no
			and t1.flt_key=t3.flt_key
			and t1.flt_date=t3.flt_date
			left join tow_order_out_dtl t4 
			on   t4.uld_key=t1.uld_key
			where
	<isNotEmpty property="uldCheckList">
		<iterate property="uldCheckList" open="(" close=")"
			conjunction="OR">
			t1.uld_key = #uldCheckList[]#
   		</iterate>
	</isNotEmpty>
</select>

<select id="sqlflightdetailsforRep" parameterClass="java.util.HashMap"  resultClass="java.util.HashMap">		 
	    SELECT A.FLT_KEY as fltNo,
        to_char(A.SCH_DATE,'ddMONYY') as fltDate,
	    decode(A.EST_DATE,A.SCH_DATE,'',to_char(A.EST_DATE,'DDMONYY')) || ' '|| SUBSTR(TRIM(TO_CHAR(NVL(A.EST_TIME,0),'0000')),0,2)||':'|| SUBSTR(TRIM(TO_CHAR(NVL(A.EST_TIME,0),'0000')),3,4) as etd,
	    b.OFF_POINT as portOfCall,
	    A.SCH_TIME as stdPrint,
<!--	    PKG_COMMON.get_flt_eta(#fltNo#, TO_DATE(#fltDate#,'DDMONYY'), 'D', 'DD') as etdPrint,-->
		 A.EST_TIME as etd,
	    A.ACFT_PRK_BAY parkingBayPrint
	    FROM FLT_OPR A ,flt_opr_leg B
	    WHERE UPPER(A.FLT_KEY)=UPPER(#fltNo#) 		
		AND A.SCH_DATE = TO_DATE(#fltDate#,'DDMONYY')
		AND A.FLT_TYPE = 'D'
		AND A.FLT_KEY=B.FLT_KEY
		AND A.SCH_DATE=B.SCH_DATE
 </select>
 
 <select id="sqlGetListOfUldForHHT" parameterClass="cargo.cms.export.report.bo.PrintHOFormRepBO"  resultClass="cargo.cms.export.report.bo.PrintHOFormRepBO">		 
	  			  select distinct
                  t2.flt_key as fltNo,
                  TO_CHAR(t2.flt_date,'DDMONYY') as fltDate, 
                  t2.ULD_KEY as uldNo,
                  t1.chkout_time as chkOutTime,
                  (SELECT STRAGG(STRINGDELIM(CODE,',')) FROM V_EXP_ULD_SHC WHERE ULD_KEY = T1.ULD_KEY AND ROWNUM &lt; 10)  spl,
                  t2.loc_code as locn
                  from exp_pmanifest_uld t3 
                  join uld_inventory t2
                  on  t3.flt_key=t2.flt_key
                  and t3.flt_date=t2.flt_date
                  and t3.uld_bt_no = t2.uld_key  
                  left join exp_chkout_dtl t1
                  on  t1.uld_key = t3.uld_bt_no
                  and t1.flt_key=t3.flt_key
                  and t1.flt_date=t3.flt_date
                  where   t2.flt_key=#fltNo#
		  		  and t2.flt_date=TO_DATE(#fltDate#,'DDMONYY')
                  <isNotEmpty prepend="AND" property="selUldList">
                    <iterate property="selUldList" open="(" close=")"
                          conjunction="OR">
                         t2.uld_key = #selUldList[]#
                    </iterate>
                 </isNotEmpty>
 </select>
 <select id="sqlGetUldAllotForUld" parameterClass="cargo.cms.export.report.bo.PrintHOFormRepBO"  resultClass="cargo.cms.export.report.bo.PrintHOFormRepBO">					
 		select GRP.ULD_TYPE uldType, ALLOT.ULD_ALLOT uldAllot
        FROM ULD_GROUP_TYPE GRP, MAST_ULD_ALLOT_GROUP ALLOT 
        where GRP.ULD_GROUP=ALLOT.ULD_GROUP 
        and GRP.ULD_TYPE = #uldType#
 </select>
 <select id="sqlGetUldAllotForUld1" parameterClass="cargo.cms.export.report.bo.ExpRampHandoverRepBO"  resultClass="cargo.cms.export.report.bo.ExpRampHandoverRepBO">					
 		select GRP.ULD_TYPE uldType, ALLOT.ULD_ALLOT uldAllot
        FROM ULD_GROUP_TYPE GRP, MAST_ULD_ALLOT_GROUP ALLOT 
        where GRP.ULD_GROUP=ALLOT.ULD_GROUP 
        and GRP.ULD_TYPE = #uldType#
 </select>		  
<!--mahesh BN starts ends-->
<select id="exp_rept_118_dtl"  parameterClass="cargo.cms.export.report.bo.DeadLoadWtRept_118BO"  resultClass="cargo.cms.export.report.bo.DeadLoadWtRept_118BO">
 SELECT  #fltNo# as fltNo, 	#deptDate# as deptDate,
       decode(sign(9-length(DTL.uld_key)), 1, 1, 2) sno,
	   nvl(DTL.awb_no, DTL.uld_key) as uldNo,
	  <!-- (NVL(DTL.ULD_KEY,'') || decode(DTL.ULD_KEY,null,'', decode(DTL.AWB_NO,null,'',' , ')) || NVL(DTL.AWB_NO,''))as uldNo,-->
		DTL.UNLDG_PT as dest,		
		TO_CHAR(DTL.GROSS_WT,'9999990D99')AS grossWt, 
		TO_CHAR(DTL.TARE_WT,'9999990D99')AS tareWt,
		TO_CHAR(DTL.MANIFEST_WT,'9999990D99')AS manfWt,
		DTL.CONTR_CODE as contr, 
		DTL.PCS as pcsBT, 
		decode(DTL.STATUS,'L','',DTL.VARIANCE) as variance,
		DTL.RMK  as remarks
	FROM gt_exp_dls_dtl DTL
	left join flt_opr_leg l on l.flt_key = dtl.flt_key and l.sch_date = dtl.flt_date and l.flt_type = 'D' and dtl.UNLDG_PT = l.Off_point
		<dynamic prepend="WHERE">
			<isNotEmpty prepend="AND" property="fltNo">
					DTL.FLT_KEY = #fltNo#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="deptDate">
				DTL.FLT_DATE = TO_DATE(#deptDate#,'DDMONYY')
			</isNotEmpty>
		</dynamic>
	order by l.leg_ord, 3, 4
 </select>


 <select id="exp_rept_118_getDls"  parameterClass="map"  resultClass="java.lang.String">
	select dls_no as dlsNo from exp_dls_hd where flt_key = #FLIGHTKEY# and flt_date = #FLIGHTDATE#
 </select>

 <select id="exp_rept_118_getSummaryList"  parameterClass="java.lang.String"  resultClass="cargo.cms.export.report.bo.DeadLoadWtRept_118BO">
			SELECT 
			  DLS_NO AS dlsNo,
			  ALLOT_TYPE  AS allotType,
			  SEQ         AS sequence,
			  ULD_KEY     AS uldNo,
			  CNTR_CODE   AS counterCode,
			  SOURCE      AS source,
			  TO_CHAR(EST_WT,'9999990D99')AS estWt,
			  decode(DLS_SHC1, null, '', DLS_SHC1 || decode(DLS_SHC2, null, '', ','))
       		  || decode(DLS_SHC2, null, '', DLS_SHC2 || decode(DLS_SHC3, null, '', ','))
       		  || decode(DLS_SHC3, null, '', DLS_SHC3 || decode(DLS_SHC4, null, '', ','))
       		  || decode(DLS_SHC4, null, '', DLS_SHC4 || decode(DLS_SHC5, null, '', ','))
      		  || decode(DLS_SHC5, null, '', DLS_SHC5 || decode(DLS_SHC6, null, '', ','))
       		  || decode(DLS_SHC6, null, '', DLS_SHC6 || decode(DLS_SHC7, null, '', ','))
    		  || decode(DLS_SHC7, null, '', DLS_SHC7 || decode(DLS_SHC8, null, '', ','))
        	  || decode(DLS_SHC8, null, '', DLS_SHC8 || decode(DLS_SHC9, null, '', ','))
                    || decode(DLS_SHC9, null, '', DLS_SHC9 || decode(DLS_SHC10, null, '', ','))
                    || decode(DLS_SHC10, null, '', DLS_SHC10 || decode(DLS_SHC11, null, '', ','))
                    || decode(DLS_SHC11, null, '', DLS_SHC11 || decode(DLS_SHC12, null, '', ','))
                    || decode(DLS_SHC12, null, '', DLS_SHC12 || decode(DLS_SHC13, null, '', ','))
                    || decode(DLS_SHC13, null, '', DLS_SHC13 || decode(DLS_SHC14, null, '', ','))
                    || decode(DLS_SHC14, null, '', DLS_SHC14 || decode(DLS_SHC15, null, '', ','))
                    || decode(DLS_SHC15, null, '', DLS_SHC15 )  as displaySummarySHC,
			  BB_IND      AS looseUld,
			  TYPE        AS uldType,
			  PRIORITY    AS priotriy,
			  DLS_RMK     AS dlsRemarks,
			  TOW_IND     AS towInd,
			  UNLDG_PT    AS unldgPt,
			  TO_CHAR(ACTUAL_WT,'9999990D99')AS actWt,
			  TO_CHAR(TI_WT,'9999990D9')AS tiWt,
        	  TO_CHAR(DRY_ICE_WT,'9999990D9')AS dryIceWt,
			  PCS         AS pc
			  FROM exp_dls_allotment
			  WHERE dls_no = #dlsNo#
 </select>


<select id="exp_rept_118_OSIRem"  parameterClass="cargo.cms.export.report.bo.DeadLoadWtRept_118BO"  resultClass="cargo.cms.export.report.bo.DeadLoadWtRept_118BO">
	SELECT  #fltNo# as fltNo, 	#deptDate# as deptDate,	OSI_RMK as osiRemarks ,  OSI_RMK_2 as displayGrossWt 
		FROM EXP_DLS_HD WHERE FLT_KEY=#fltNo# AND FLT_DATE=#deptDate# AND ROWNUM=1
</select>

<parameterMap id="exp_DLSSummaryMap" class="map" >
		<parameter property="FLIGHTKEY" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="FLIGHTDATE" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
</parameterMap>	
		
<procedure id="exp_getDLS_Summary" parameterMap="exp_DLSSummaryMap" >
		{ call PKG_EXP_RPT.get_dls_summary(?,?) }
</procedure>

<select id="exp_rept_118_finalize_check"  parameterClass="cargo.cms.export.report.bo.DeadLoadWtRept_118BO"  resultClass="cargo.cms.export.report.bo.DeadLoadWtRept_118BO">

        select 
			nvl(dls_ind, 'N') as finalizeFlag
        from   flt_opr_events
        where  flt_type = 'D'
		and    flt_key = #fltNo#
        and    sch_date = #deptDate#

</select>

<select id="exp_rept_118_summary"  parameterClass="cargo.cms.export.report.bo.DeadLoadWtRept_118BO"  resultClass="cargo.cms.export.report.bo.DeadLoadWtRept_118BO">
  	SELECT
		sno, unldg_pt AS summarydest, cargo_type AS TYPE, 
		TO_CHAR(gross_wt,'9999990D99')AS summarygrosswt,
		TO_CHAR(manf_wt,'9999990D99')AS summarymanfwt
	 FROM gt_dls_summary
</select>


<select id="getExpTallySheet_123_fltDtls"  parameterClass="cargo.cms.export.report.bo.ExportTalleySheetRept_123BO"  resultClass="cargo.cms.export.report.bo.ExportTalleySheetRept_123BO">				
	SELECT
				FLT_KEY as flightNo, 
				(select (ltrim(SUBSTR(TRIM(TO_CHAR(SCH_TIME,'0000')),0,2)|| ':'|| SUBSTR(TRIM(TO_CHAR(SCH_TIME,'0000')),3,2),':')) std from flt_opr
                where flt_key=#fltNo# and SCH_date=#fltDate# and flt_type='D' and rownum=1) std,           
                PKG_COMMON.get_flt_eta(#fltNo#,#fltDate#, 'D') etd,
				to_char(SCH_DATE,'ddMONYY') as flightDate
	FROM 
				FLT_OPR A  
	WHERE 
				A.FLT_KEY=#fltNo# AND 
				A.SCH_DATE = TO_DATE(#fltDate#, 'DDMONYY') AND 
				A.FLT_TYPE = 'D'
</select>

	<parameterMap id="tallyListMap" class="map" >
		<parameter property="RESULT" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
		<parameter property="FLIGHTKEY" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="DEPDATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="UNLDGPT" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="BUILDUPONLY" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	</parameterMap>

	<procedure id="getExpTallySheet_123_proc" parameterMap="tallyListMap" >
		{? = call PKG_EXP_RPT.pman_tally_sheet(?,?,?,?)  }
	</procedure>
	
<select id="getExpTallySheet_123_AWBDtls" parameterClass="cargo.cms.export.report.bo.ExportTalleySheetRept_123BO" 
		resultClass="cargo.cms.export.report.bo.ExportTalleySheetRept_123BO" >
  SELECT 
             SUM(AWB_PCS) as totAWBPcs, 
             SUM(AWB_WT) as totAWBWt,
             SUM(PMAN_PCS) as totPmanPcs,
             SUM(PMAN_WT) as totPmanWt,
             SUM(BUP_PCS) as totBupPcs,
             SUM(BUP_WT) as totBupWt
         FROM
             GT_EXP_PMAN_TALLY_SHEET
</select>
<select id="getExpTallySheet_123_AWBDtls1" parameterClass="cargo.cms.export.report.bo.ExportTalleySheetRept_123BO" 
		resultClass="cargo.cms.export.report.bo.ExportTalleySheetRept_123BO" >
  SELECT 
             SUM(AWB_PCS) as totAWBPcs, 
             SUM(AWB_WT) as totAWBWt,
             SUM(PMAN_PCS) as totPmanPcs,
             SUM(PMAN_WT) as totPmanWt,
             SUM(BUP_PCS) as totBupPcs,
             SUM(BUP_WT) as totBupWt
         FROM
             GT_EXP_PMAN_TALLY_SHEET
             WHERE ULD_KEY IS NULL
</select>
<select id="fetchPortofCallDetails_123" parameterClass="map" 
	resultClass="java.lang.String" >
	  select  STRAGG(STRINGDELIM(t2.off_point,'/'))
                 from     flt_opr t1, flt_opr_leg t2
                 where    t1.tr_no = t2.tr_no
                 and      t1.flt_key = #flightKey# 	
                 and      t1.sch_date = TO_DATE(#flightDate#,'DDMONYY')
                 and      t1.flt_type = 'D'
                 order by t2.leg_ord
	</select>

<select id="getExpTallySheet_123_TallyList" parameterClass="cargo.cms.export.report.bo.ExportTalleySheetRept_123BO" 
	resultClass="cargo.cms.export.report.bo.ExportTalleySheetRept_123BO" >
	SELECT 
		DECODE(AWB_NO,NULL,'',CONCAT(CONCAT(SUBSTR(AWB_NO,0,3),'-'),SUBSTR(AWB_NO,4))) awbNumber,
		AWB_NO awbNo,
		to_char(AWB_DATE,'DDMONYY') awbDate,
        ULD_KEY uldKey,
        UNLOAD_POINT unldgpt, 
        ORIG orig, 
		DEST dest, 
        CONTENT content,
        SPL_CODE splCode, 
		CC_CODE cc, 
        PMAN_PCS manifestPcs,
        UNASSIGNED_PCS nonManifestPcs, 
		AWB_PCS awbPcs, 
        substr(LOCN_INFO,2,length(LOCN_INFO)) location, 
        BLDUP_INSTR bldUpInsn,
        PMAN_PCS pmanPcs,
        PMAN_WT pmanWt,
        BUP_PCS bupPcs,
        BUP_WT bupWt,
        AWB_WT awbWt,
        HOLDING holding,
        SEC_CHK secChk,
        PRINT_IND printInd,
        nvl(constraint,'N') constraint
	FROM 
		GT_EXP_PMAN_TALLY_SHEET  t
  		left join mast_constraint_code mcc on t.cc_code=mcc.code
		order by AWB_NO,AWB_DATE
</select>
<select id="exporttallylistwithoutuld_123" parameterClass="cargo.cms.export.report.bo.ExportTalleySheetRept_123BO" 
	resultClass="cargo.cms.export.report.bo.ExportTalleySheetRept_123BO" >
	SELECT 
		DECODE(AWB_NO,NULL,'',CONCAT(CONCAT(SUBSTR(AWB_NO,0,3),'-'),SUBSTR(AWB_NO,4))) awbNumber,
		AWB_NO awbNo,
		to_char(AWB_DATE,'DDMONYY') awbDate,
        ULD_KEY uldKey,
        UNLOAD_POINT unldgpt, 
        ORIG orig, 
		DEST dest, 
        CONTENT content,
        SPL_CODE splCode, 
		CC_CODE cc, 
        PMAN_PCS manifestPcs,
        UNASSIGNED_PCS nonManifestPcs, 
		AWB_PCS awbPcs, 
        substr(LOCN_INFO,2,length(LOCN_INFO)) location, 
        BLDUP_INSTR bldUpInsn,
        PMAN_PCS pmanPcs,
        PMAN_WT pmanWt,
        BUP_PCS bupPcs,
        BUP_WT bupWt,
        AWB_WT awbWt,
        HOLDING holding,
        SEC_CHK secChk,
        PRINT_IND printInd,
        nvl(constraint,'N') constraint
	FROM 
		GT_EXP_PMAN_TALLY_SHEET  t
  		left join mast_constraint_code mcc on t.cc_code=mcc.code
		WHERE ULD_KEY IS NULL
	</select>
	<select id="exp_tally_nullrefwt_report" parameterClass="cargo.cms.export.report.bo.ExportTalleySheetRept_123BO" resultClass="java.lang.Integer">
	<![CDATA[ 
	SELECT COUNT(1) as refWt FROM AWB_INVENTORY A
	LEFT JOIN ULD_INVENTORY U ON U.ULD_KEY = A.ULD_KEY AND A.ULD_KEY IS NOT NULL
	LEFT JOIN LSP_INVENTORY L ON L.LSP_NO = A.LSP_NO AND A.LSP_NO IS NOT NULL
	WHERE A.AWB_NO=#awbNo# AND A.AWB_DATE=#awbDate# 
	AND ((a.uld_key is not null and (U.REF_NET_WT IS NULL or U.REF_NET_WT = 0 OR U.REF_NET_WT = 0.0))  OR 
        (a.lsp_no is not null and (L.REF_NET_WT IS NULL OR L.REF_NET_WT  = 0  OR L.REF_NET_WT  = 0.0)) or
        (a.uld_key is null and a.lsp_no is null))
	]]>
	</select>
	<select id="exp_tally_totalrefwt_report" parameterClass="cargo.cms.export.report.bo.ExportTalleySheetRept_123BO" resultClass="java.lang.String">
	SELECT TRIM(TO_CHAR(SUM(NVL(NVL(U.REF_NET_WT,L.REF_NET_WT),0)), '9999999990D9')) as refWt FROM AWB_INVENTORY A
	LEFT JOIN ULD_INVENTORY U ON U.ULD_KEY = A.ULD_KEY AND A.ULD_KEY IS NOT NULL
	LEFT JOIN LSP_INVENTORY L ON L.LSP_NO = A.LSP_NO AND A.LSP_NO IS NOT NULL
	WHERE A.AWB_NO=#awbNo# AND A.AWB_DATE=#awbDate#
  and ((a.uld_key is not null and (u.ref_net_wt is not null and  u.ref_net_wt !='0' and u.ref_net_wt != '0.0'))    
  or (a.lsp_no is not null and (l.ref_net_wt is not null and l.ref_net_wt !='0' and l.ref_net_wt != '0.0')))
	</select>
		<select id="exp_tally_totallocnwt_report" parameterClass="cargo.cms.export.report.bo.ExportTalleySheetRept_123BO" resultClass="java.lang.String">
	SELECT TRIM(TO_CHAR(SUM(NVL(A.LOCN_WT,0)), '9999999990D9')) as refWt FROM AWB_INVENTORY A	WHERE A.AWB_NO=#awbNo# AND A.AWB_DATE=#awbDate#
	</select>
	
	<select id="exporttallylistScr_123" parameterClass="cargo.cms.export.report.bo.ExportTalleySheetRept_123BO"  resultClass="cargo.cms.export.report.bo.ExportTalleySheetRept_123BO" >
	SELECT 
	case when PMAN_PCS > nvl(BUP_PCS,0) then 1 else 2 end recordsOrder,
	DECODE(AWB_NO,NULL,'',CONCAT(CONCAT(SUBSTR(AWB_NO,0,3),'-'),SUBSTR(AWB_NO,4))) awbNumber,
	AWB_NO awbNo,
	to_char(AWB_DATE,'DDMONYY') awbDate,
    UNLOAD_POINT unldgpt, 
    ORIG orig, 
	DEST dest, 
    CONTENT content,
    SPL_CODE splCode, 
	CC_CODE cc, 
    PMAN_PCS manifestPcs,
    UNASSIGNED_PCS nonManifestPcs, 
	AWB_PCS awbPcs, 
    AWB_WT awbWt,
    BLDUP_INSTR bldUpInsn,
    PMAN_PCS pmanPcs,
    PMAN_WT pmanWt,
    NVL(BUP_PCS,'0') bupPcs,
    NVL(BUP_WT,'0.00') bupWt,
    'NA' secChk,
    print_ind printInd,
    nvl(constraint,'N') constraint,
    location,
    pcs,
    pcsWt,
    uldKey,
    contrcode,
    uldType,
    flt_key fltKey,
    to_char(flt_date,'DDMONYY') fltDate,
    DAM_IND damInd,
   (SELECT CASE WHEN (SELECT count(1) FROM XT_IMP_CAR_SHP_DTL xt where xt.awb_no = AWB_NO and xt.AWB_DATE = AWB_DATE and xt.EXP_FLT_KEY = flt_key and xt.EXP_FLT_DATE = flt_date ) > 0 then 'Y' else 'N' end  from dual) as xtShpFlg
	FROM (
	SELECT t1.awb_no AWB_NO,
        t1.awb_date AWB_DATE,
        t1.flt_key,
        t1.flt_date,
        t1.unldg_pt UNLOAD_POINT,
        t3.dest DEST,
        t3.orig ORIG,
        t3.content CONTENT,
        pkg_exp_rpt.awb_spl_codes (t1.awb_no, t1.awb_date, ',') SPL_CODE,
        pkg_exp_rpt.get_cc_code_awbType(t1.FLT_KEY,t1.FLT_DATE,t1.awb_no,t3.AWB_TYPE)  CC_CODE, 
        pkg_exp_rpt.fun_get_sc(t1.awb_no, t1.awb_date, null) AS sec_chk,
        t1.bulk_pcs man_pcs,
        t1.UNASSIGNED_BULK_PCS UNASSIGNED_PCS,
        t3.pcs AWB_PCS,
        t3.wt AWB_WT,
        t1.bldup_instr BLDUP_INSTR,
        t1.PMAN_PCS PMAN_PCS,
        t1.PMAN_WT PMAN_WT,
        t1.ASSIGNED_PCS BUP_PCS,
        t1.ASSIGNED_WT BUP_WT,
        t1.print_ind,
        inv.loc_code as location, inv.locn_pcs as pcs,inv.locn_wt as pcsWt, 
	    nvl(inv.uld_key,inv.lsp_no) as uldKey, 
	    (select contr_code from ULD_INVENTORY where ULD_KEY = inv.uld_key) as contrcode,
	    (case when (SELECT COUNT(1) FROM ULD_INVENTORY WHERE NVL(TRANSIT_FLG,'N')='Y' AND HANDLING_MODE IN('PPK','NBK') AND ULD_KEY = inv.uld_key)>= 1 then '*'
         else case when (SELECT COUNT(1) FROM ULD_INVENTORY WHERE (PPK_IND='Y' or MIX_PPK_IND = 'Y') AND ULD_KEY = inv.uld_key )>= 1 then '*' 
         else ''
         end
         end) as uldType,
         (SELECT DECODE(COUNT(awb_no),0,'N','Y') from imp_car_shp where dam_proc_date is not null and dam_proc_user is not null and awb_no = t1.awb_no  and awb_date = t1.awb_date) as DAM_IND
      FROM (  select flt_key, flt_date, awb_no, awb_date, pman_pcs, pman_wt, 
              (ppk_pcs + mix_pcs + assigned_bulk_pcs) assigned_pcs, 
              (ppk_wt + mix_wt + assigned_bulk_wt) assigned_wt,
              unldg_pt, BLDUP_INSTR, UNASSIGNED_BULK_PCS, BULK_PCS, print_ind
              from exp_pmanifest_awb) t1 
      left join exp_car t2 on t2.awb_no = t1.awb_no  AND t2.awb_date = t1.awb_date
      left join AWB t3 on t3.awb_no = t1.awb_no AND t3.awb_date = t1.awb_date
      left join awb_inventory inv on inv.awb_no = t1.awb_no  AND inv.awb_date = t1.awb_date 
      WHERE t1.flt_key   = #fltNo#
      AND t1.flt_date    = #fltDate#
      AND t1.unldg_pt    = NVL(#sunldgPt#, t1.unldg_pt)) t 
      left join mast_constraint_code mcc on t.cc_code=mcc.code 
      where 1=1 
     <isEqual property="bldupOnly" compareValue="Y">
     	<![CDATA[
	 	 and  t.UNASSIGNED_PCS > 0 
       	]]>
     </isEqual>
     <isEqual property="xtShpFlg" compareValue="Y">
   		<![CDATA[
			 AND  EXISTS (SELECT NULL FROM XT_IMP_CAR_SHP_DTL xt where xt.awb_no = t.AWB_NO and xt.AWB_DATE = t.AWB_DATE and xt.EXP_FLT_KEY = t.flt_key and xt.EXP_FLT_DATE = t.flt_date )
     	]]>
     </isEqual>
		order by recordsOrder,AWB_NO,AWB_DATE
		
	</select>
<select id="getReferenceNo_123NF"  parameterClass="cargo.cms.export.report.bo.ExportTalleySheetRept_123BO"  resultClass="java.lang.String">
	select ref_no
	from (select * from exp_tally_sheet where flt_key = #fltNo# and flt_date = #fltDate#
	and awb_no = #awbNumber# order by cr_date desc) s
	where rownum = 1
</select>
<select id="fetchawbuld123NF"  parameterClass="cargo.cms.export.report.bo.ExportTalleySheetRept_123BO"  resultClass="cargo.cms.export.report.bo.ExportTalleySheetRept_123BO">
   SELECT awb_no awbNumber,ULD_KEY uldKey FROM  exp_tally_sheet WHERE REF_NO=#refNo# AND FLT_KEY=#fltNo# AND FLT_DATE=#fltDate#
</select>
<select id="getExportTallyLocList_123Tally" parameterClass="cargo.cms.export.report.bo.ExportTalleySheetRept_123BO" resultClass="cargo.cms.export.report.bo.ExportTalleySheetRept_123BO" >
		SELECT 
			ai.loc_code as location, ai.locn_pcs as pcs,ai.locn_wt as pcsWt,  
		    nvl(ai.uld_key,ai.lsp_no) as uldKey,
		    decode(ai.uld_key,null,null,(select CONTR_CODE from ULD_TYPE_CONTR where UPPER(ULD_TYPE) = UPPER(Substr(ai.uld_key, 1, 3)) and rownum=1)) as contrcode,
		    (case when (SELECT COUNT(1) FROM ULD_INVENTORY WHERE NVL(TRANSIT_FLG,'N')='Y' AND HANDLING_MODE IN('PPK','NBK') AND ULD_KEY = ai.uld_key)>= 1 then '*'
	         else case when (SELECT COUNT(1) FROM ULD_INVENTORY WHERE (PPK_IND='Y' or MIX_PPK_IND = 'Y') AND ULD_KEY = ai.uld_key )>= 1 then '*' 
	         else ''
	         end
	         end) as uldType
			FROM 
			AWB_INVENTORY ai
		    join AWB a on a.awb_no=ai.awb_no and a.awb_date=ai.awb_date
		  where ai.AWB_NO =#awbNo# and ai.AWB_DATE=#awbDate#
</select>
<update id="update_printInd_exp_pally_sheet" parameterClass="cargo.cms.export.bo.AWBBO">	
		UPDATE exp_pmanifest_awb
		SET   PRINT_IND = 'Y'
		WHERE AWB_NO = #awbNo# and AWB_DATE=#awbDate# and flt_key =#fltKey# and flt_date = #fltDate#
</update>

<select id="getExpTallySheet_123_NotifyList"  parameterClass="cargo.cms.export.report.bo.ExportTalleySheetRept_123BO"  resultClass="cargo.cms.export.report.bo.ExportTalleySheetRept_123BO">
select DISTINCT
	to_char(sysdate, 'DDMONYY HH24:MI') as printTime, 
	concat(concat(substr(t1.awb_no, 0,3), '-'),substr(t1.awb_no, 4)) as awbNumber,
	t2.unldg_pt as unldgpt, 
	t2.pman_pcs as pcs, 
	ltrim(to_char(t2.pman_wt,'9999990.0')) as pcsWt, 
	t3.dest as uldDest,
	pkg_exp_val.get_exp_awb_cc_code(#fltNo#,#fltDate#, t1.awb_no) as consCode,
	  (select content from awb WHERE awb_no = t1.awb_no
  		AND awb_date   = t1.awb_date
  		) awbcontent,  
	 (select    
		        	   decode(spl_code1, null, '', spl_code1 || decode(spl_code2, null, '', '/'))
               		|| decode(spl_code2, null, '', spl_code2 || decode(spl_code3, null, '', '/'))
               		|| decode(spl_code3, null, '', spl_code3 || decode(spl_code4, null, '', '/'))
              		|| decode(spl_code4, null, '', spl_code4 || decode(spl_code5, null, '', '/'))
               		|| decode(spl_code5, null, '', spl_code5 || decode(spl_code6, null, '', '/'))
              		|| decode(spl_code6, null, '', spl_code6 || decode(spl_code7, null, '', '/'))
               		|| decode(spl_code7, null, '', spl_code7 || decode(spl_code8, null, '', '/'))
               		|| decode(spl_code8, null, '', spl_code8)  from   awb
        			where  awb_no = t1.awb_no and awb_date = t1.awb_date) splCode,
	trim(to_char(round(pkg_exp_val.get_volume(t2.awb_no, t2.pman_pcs), 2),'999999990.00')) as volMc,
	t2.bldup_instr as bremarks, 
  	t3.awb_rmk as awbRemarks,
	(case when t3.wt is null then to_char(t3.pcs,'999999990') else t3.pcs||'/'||ltrim(to_char(t3.wt, '999999990.0')) end) uldPcs,
	get_whDest(t1.awb_no, t1.awb_date) as whDest,
  (SELECT STRAGG(STRINGDELIM((awb.ASSIGNED_PCS
    ||'/'
    ||awb.uld_bt_no),','))
     FROM exp_pmanifest_uld_awb awb
    WHERE awb.flt_key = t1.flt_key
  AND awb.flt_date    = t1.flt_date
  AND awb.awb_no      = t1.awb_no
  AND awb.awb_date    = t1.awb_date
) bldPcs
from 
	exp_tally_sheet t1, 
	exp_pmanifest_awb t2, 
	awb t3 
where 
	t1.awb_no = t2.awb_no 
	and t1.awb_date = t2.awb_date
	and t1.flt_key = t2.flt_key 
	and t1.flt_date = t2.flt_date 
	and t1.awb_no = t3.awb_no 
	and t2.awb_no = t3.awb_no 
	and t2.awb_date = t3.awb_date
	and t1.awb_date = t3.awb_date 
	and t1.ref_no = nvl(#refNo#, t1.ref_no) 
	and t1.flt_key =#fltNo#
	and t1.flt_date = to_date(#fltDate#, 'DDMONYY')
</select>

<select id="viewBUdetails123NF"  parameterClass="cargo.cms.export.report.bo.ExportTalleySheetRept_123BO"  resultClass="cargo.cms.export.report.bo.ExportTalleySheetRept_123BO">
  SELECT t1.ASSIGNED_PCS bldPcs,
         t1.uld_bt_no bldUld
  from exp_pmanifest_uld_awb t1 ,exp_tally_sheet t2
  where t1.flt_key = #fltNo#
	and t1.flt_date = to_date(#fltDate#, 'DDMONYY') 
  and t1.awb_no = t2.awb_no 
	and t1.awb_date = t2.awb_date
	and t1.flt_key = t2.flt_key 
	and t1.flt_date = t2.flt_date 
  and t2.ref_no = nvl(#refNo#, t2.ref_no) 
</select>

<select id="getCaptureBuStatus_581" parameterClass="cargo.cms.export.report.bo.CaptureBUStatusRept_581BO" 
		resultClass="cargo.cms.export.report.bo.CaptureBUStatusRept_581BO">
		select distinct
              B.uld_bt_no as uldBtNo,              
              (select sum(assigned_pcs) from exp_pmanifest_uld_awb 
                  WHERE flt_key = B.flt_key
                  AND flt_date = b.flt_date and uld_bt_no =  b.uld_bt_no)
                  as assgnPc,
              (select sum(assigned_wt) from exp_pmanifest_uld_awb 
              WHERE flt_key = B.flt_key
                  AND flt_date = b.flt_date and uld_bt_no =  b.uld_bt_no)
                  as assgnWt,
                  B.BLDUP_COMPLETE as buildupInd,
                  DECODE(B.BLDUP_COMPLETE,'Y',B.BLDUP_COMPLETE,'')as oldBuildupInd,
                  B.CONTR_CODE as contrCode,
                  TRIM(TO_CHAR(NVL(B.TARE_WT,0),'99999999999999990.0')) AS tareWt,
                  TRIM(TO_CHAR(NVL(B.GROSS_WT,0),'99999999999999990.0')) AS grossWt,                  
                  B.EIC_YN as eicInd,
                 B.UNLDG_PT as unldgPt,
                  B.VOL_IND as volInd,
                  DECODE(B.BLDUP_START,'','N',B.BLDUP_START) as buildupStartInd,
                  DECODE(B.BLDUP_START,'Y',B.BLDUP_START,'') as oldBuildupStartInd,
                  B.BB_IND as bbInd,                  
                  B.OHG as ohg,
                  B.RCL_NO as rclNo,
                  B.JO_NO as joNo,
                  B.PPK_TYPE as ppkType,
                  NVL(B.ULD_CLOSE,'N') AS uldClose,
                  B.height AS height,
                  (SELECT NVL(SUM(QTY),'') FROM EXP_ULD_ACC WHERE FLT_KEY  = B.FLT_KEY AND FLT_DATE = B.FLT_DATE AND ULD_KEY    = B.ULD_BT_NO AND ACTIVITY   = 'BUILDUP' AND UPPER(EQUIP_TYPE) = UPPER('HALF SIZE PVC')) as halfPvc,
		    	  (SELECT NVL(SUM(QTY),'') FROM EXP_ULD_ACC WHERE FLT_KEY  = B.FLT_KEY AND FLT_DATE = B.FLT_DATE AND ULD_KEY    = B.ULD_BT_NO AND ACTIVITY   = 'BUILDUP' AND UPPER(EQUIP_TYPE) = UPPER('FULL SIZE PVC')) as fullPvc
            from  EXP_PMANIFEST_ULD B
            <dynamic prepend="WHERE">
                  B.flt_key = #fltNo#
                  AND B.flt_date = TO_DATE(#fltDate#, 'DDMONYY')
                  <isNotEmpty property="uldNo">
                        AND B.uld_bt_no = #uldNo#
                  </isNotEmpty>
            </dynamic>
            Order BY B.uld_bt_no
	</select>

<select id="getHouseReconHAwbListForAwb_584" parameterClass="java.lang.String" resultClass="cargo.cms.export.report.bo.HouseReconciliationRept_584BO" >
	 select b.hawb_no as hawbNo,
			b.pc as hawbPc,
			b.wt as hawbWt,
			b.tr_no as trNo 
		from  exp_pmanifest_uld_awb_hawb b 
		where b.tr_no= #trNo# 
</select>

<select id="fetchOutBoundSHCListValues_585" parameterClass="java.lang.String" resultClass="java.lang.String" >
		SELECT STRAGG(STRINGDELIM(shcCode, ','))  FROM (SELECT SHC AS shcCode FROM EXP_PMANIFEST_ULD_AWB_SHC WHERE TR_NO = #PARAM#
		UNION
		SELECT SHC2 AS shcCode FROM EXP_PMANIFEST_ULD_AWB_SHC WHERE TR_NO = #PARAM#
		UNION
		SELECT SHC3 AS shcCode FROM EXP_PMANIFEST_ULD_AWB_SHC WHERE TR_NO = #PARAM#
		UNION
		SELECT SHC4 AS shcCode FROM EXP_PMANIFEST_ULD_AWB_SHC WHERE TR_NO = #PARAM#
		UNION
		SELECT SHC5 AS shcCode FROM EXP_PMANIFEST_ULD_AWB_SHC WHERE TR_NO = #PARAM#
		UNION
		SELECT SHC6 AS shcCode FROM EXP_PMANIFEST_ULD_AWB_SHC WHERE TR_NO = #PARAM#
		UNION
		SELECT SHC7 AS shcCode FROM EXP_PMANIFEST_ULD_AWB_SHC WHERE TR_NO = #PARAM#
		UNION
		SELECT SHC8 AS shcCode FROM EXP_PMANIFEST_ULD_AWB_SHC WHERE TR_NO = #PARAM#
		UNION
		SELECT SHC9 AS shcCode FROM EXP_PMANIFEST_ULD_AWB_SHC WHERE TR_NO = #PARAM#) 
</select>

<select id="fetchJoRemarks_582" parameterClass="java.lang.String" resultClass="java.lang.String" >
	Select rmk from exp_bu_jo where jo_no = #selJoNo# 
</select>

<select id="fetchUldCntrCode_582" parameterClass="java.lang.String" resultClass="java.lang.String" >
  select  STRAGG(STRINGDELIM(DECODE(gpuld.ULD_KEY,NULL,(gpuld.ULD_TYPE||'/'||gpuld.CNTR_CODE),(gpuld.ULD_KEY||'/'||gpuld.CNTR_CODE)),',')) 
  from exp_bu_gp_uld_type gpuld 
  where gpuld.GP_NO = #groupNo#
</select>

<select id="fetchbuZone_582" parameterClass="java.lang.String" resultClass="java.lang.String" >
<!--
  select  STRAGG(STRINGDELIM(gpuld.BU_ZONE,',')) 
  from exp_bu_gp_uld_type gpuld 
  where gpuld.GP_NO = #groupNo#
-->
  select STRAGG(STRINGDELIM(buZone,',')) from(
 (SELECT distinct gpuld.BU_ZONE  buZone from exp_bu_gp_uld_type gpuld 
  where gpuld.GP_NO = #groupNo# order by buZone)) 
</select>

<select id="fetchcontractor_582" parameterClass="java.lang.String" resultClass="java.lang.String" >
<!--
  select  STRAGG(STRINGDELIM(gpuld.CONTRACTOR,',')) 
  from exp_bu_gp_uld_type gpuld 
  where gpuld.GP_NO = #groupNo#
-->
	select STRAGG(STRINGDELIM(contractor,',')) from(
	(SELECT distinct gpuld.CONTRACTOR  contractor from exp_bu_gp_uld_type gpuld 
	 where gpuld.GP_NO = #groupNo# order by contractor)) 
</select>

<select id="fetchAWBDtlsCreateJo_582" parameterClass="cargo.cms.export.report.bo.CreateBUJobOrderRept_582BO" resultClass="cargo.cms.export.report.bo.CreateBUJobOrderRept_582BO">	
 select jodtl.jo_no as jobOrderNo,jodtl.AWB_NO as awbNo,CONCAT(CONCAT(SUBSTR(jodtl.awb_No,0,3),'-'),SUBSTR(jodtl.awb_No,4)) as awbNoDisplay,to_char(jodtl.AWB_DATE,'DDMONYY') as awbDate, jodtl.AWB_JO_PC as awbJOPcs,
 	TRIM(to_char(jodtl.AWB_JO_WT,9999999.99)) as awbJOWt,
	pmanawb.PMAN_PCS as pmanPcs,
	TRIM(to_char(pmanawb.PMAN_WT,9999999.99)) as pmanWt,
	decode((pmanawb.PMAN_PCS-jodtl.AWB_JO_PC)-abs(pmanawb.PMAN_PCS-jodtl.AWB_JO_PC),0,'N','Y' ) as pmanInsufficient,
	decode(awb.spl_code1, null, '', awb.spl_code1 )
             || decode(awb.spl_code2, null, '',','||  awb.spl_code2 )
             || decode(awb.spl_code3, null, '', ','|| awb.spl_code3 )
             || decode(awb.spl_code4, null, '', ','|| awb.spl_code4 )
             || decode(awb.spl_code5, null, '', ','|| awb.spl_code5 )
             || decode(awb.spl_code6, null, '', ','|| awb.spl_code6 )
             || decode(awb.spl_code7, null, '', ','|| awb.spl_code7 )
             || decode(awb.spl_code8, null, '', ','|| awb.spl_code8 )
             || decode(awb.spl_code9, null, '', ','|| awb.spl_code9) as shc,
     jodtl.BU_INST as buildUpInstr,         
     (DECODE((select COUNT(1) from EXP_CAR where awb_no = jodtl.awb_no and awb_date=jodtl.awb_date and rownum=1),0,
  	(select AWB_RMK from awb where awb_no = jodtl.awb_no and awb_date=jodtl.awb_date),
  	(select WH_RMK from EXP_CAR where awb_no = jodtl.awb_no and awb_date=jodtl.awb_date and rownum=1))) AS whRmk,
  	(DECODE((select count(1) from EXP_CAR where awb_no = jodtl.awb_no and awb_date=jodtl.awb_date and rownum=1),0,
  	(select rmk from awb_rmk where awb_no = jodtl.awb_no and awb_date=jodtl.awb_date and rownum=1),
  	(select AIRL_RMK from EXP_CAR where awb_no = jodtl.awb_no and awb_date=jodtl.awb_date and rownum=1))) AS airlnRmk
	 from exp_pmanifest_awb pmanawb,exp_bu_jo_dtl jodtl,awb awb  
	where pmanawb.flt_key=#fltKey#  and pmanawb.flt_date=TO_DATE(#fltDate#, 'DDMONYY') and pmanawb.awb_no=jodtl.awb_no and  to_char(pmanawb.awb_date,'DDMONYY')= to_char(jodtl.awb_date,'DDMONYY') 
	and pmanawb.UNLDG_PT =#unLdgPoint# and pmanawb.flt_type='E'and jodtl.jo_no=#selJoNo# and  jodtl.awb_no=awb.awb_no and  to_char(jodtl.awb_date,'DDMONYY')= to_char(awb.awb_date,'DDMONYY') 
	
 </select>
<select id="fetchLocDtlsCreateJo_582" parameterClass="cargo.cms.export.report.bo.CreateBUJobOrderRept_582BO" resultClass="cargo.cms.export.report.bo.CreateBUJobOrderRept_582BO">	
  	 SELECT bulocn.JO_NO                                    AS jobOrderNo  ,
  		bulocn.SEQ_NO                                         AS seqNo       ,
  		DECODE(bulocn.ULD_KEY,NULL,bulocn.LSP,bulocn.ULD_KEY) AS uldLsp      ,
  		bulocn.LOCN_JO_PC                                     AS joLocnPieces,
  		TRIM(TO_CHAR(bulocn.locn_jo_wt,9999999.99))           AS joLocnWt    ,
  		DECODE(mastgp.WH_TYPE,'MHS','MHS',decode(bulocn.uld_key, null, 
  			decode(bulocn.lsp, null, bulocn.loc_code, 
  			(select nvl(loc_code,bulocn.loc_code)  from lsp_inventory where lsp_no = bulocn.lsp)) ,
  			(select nvl(loc_code,bulocn.loc_code) from uld_inventory where uld_key = bulocn.uld_key)))   AS locn
   	FROM exp_bu_jo_locn bulocn,  
  		mast_wh_loc mastloc        ,
  		mast_wh_group mastgp
  	WHERE bulocn.loc_code = mastloc.code
		AND mastloc.WH_GROUP                  =mastgp.WH_GROUP
		AND bulocn.JO_NO                      =#jobOrderNo#
		AND bulocn.awb_no                     =#awbNo#
	GROUP BY bulocn.JO_NO,
  		bulocn.SEQ_NO      ,
  		bulocn.ULD_KEY     ,
	  	bulocn.LOCN_JO_PC  ,
  		bulocn.locn_jo_wt  ,
  		mastgp.WH_TYPE     ,
  		bulocn.LSP         ,
  		bulocn.LOC_CODE
</select>
<select id="flight_handling_search_report_dispatch_unit_204"	parameterClass="cargo.cms.export.report.bo.DepFltHandlgRept_204BO"
				 resultClass="cargo.cms.export.report.bo.DepFltHandlgRept_204BO">
		select to_char(trans_date,'ddMONyy') as transDate,
			   to_char(trans_date,'HH24') as transDateHr,
			   to_char(trans_date,'MI') as transDateMin,
			   ramp_user_id as rampUserID,
			   auld_detail as auldDetail
		from   exp_flt_hand_wh_dispatch
		where
			flt_key = #fltKey#
			and flt_date = to_date(#fltDate#,'ddmonyy')
	</select>
	<select id="flight_handling_search_report_inspect_cargo_204" parameterClass="cargo.cms.export.report.bo.DepFltHandlgRept_204BO"
					 resultClass="cargo.cms.export.report.bo.DepFltHandlgRept_204BO">
		select  uld_awb_no as uldAwbNo,
			    pcs as pcs,
				wt as wt,
				bup_ind as bupInd,
				to_char(CE_date,'ddMONyy') as ceDate,
				to_char(CE_date,'HH24') as ceDateHr,
				to_char(CE_date,'MI') as ceDateMin,
				to_char(aat_date,'ddMONyy') as aatDate,
				to_char(aat_date,'HH24') as aatDateHr,
				to_char(aat_date,'MI') as aatDateMin,
				remarks as remarks
		from   exp_flt_hand_wh_inspect
		where
			flt_key = #fltKey#
			and flt_date = to_date(#fltDate#,'ddmonyy')
	</select>
	
<select id="flight_handling_search_post_flt_204" parameterClass="cargo.cms.export.report.bo.DepFltHandlgRept_204BO"	
					resultClass="cargo.cms.export.report.bo.DepFltHandlgRept_204BO">
		select  awb_no as awbNo,
				loc_code as locCode,
				pcs as pcs,
				checker as checker
		from   exp_flt_hand_wh_post_flt
		where
			flt_key = #fltKey#
			and flt_date = to_date(#fltDate#,'ddmonyy')
	</select>
<!--	Added by Mahesh B N for Enquiry Tow Order starts-->
 <select id="sqlEnqTowOrderGetUldAllotForUld" parameterClass="cargo.cms.export.bo.EnquiryTowOrderExportUldBO"  resultClass="cargo.cms.export.bo.EnquiryTowOrderExportUldBO">					
 		select GRP.ULD_TYPE uldType, ALLOT.ULD_ALLOT uldAllot
        FROM ULD_GROUP_TYPE GRP, MAST_ULD_ALLOT_GROUP ALLOT 
        where GRP.ULD_GROUP=ALLOT.ULD_GROUP 
        and GRP.ULD_TYPE = #uldType#
 </select>
 <select id="sqlEnqTowOrderGetAcRegNo" parameterClass="cargo.cms.export.bo.EnquiryTowOrderExportUldBO"  resultClass="cargo.cms.export.bo.EnquiryTowOrderExportUldBO">
	select acft_reg_no acRegNo,
	PKG_COMMON.get_flt_eta(#fltKey#, TO_DATE(#fltDate#,'DDMONYY'), 'D', 'DD')  as etd
	from flt_opr
	where flt_key=#fltKey# and sch_date=TO_date(#fltDate#,'DDMONYY') and flt_type = 'D' and rownum=1
 </select>
 <!--	Added by Mahesh B N for Enquiry Tow Order ends-->
 
 <!-- Updated for fix 12530. Sanket 15SEP14 -->
 <select id="fetchCargoThrputReport_1001" parameterClass="cargo.cms.export.report.bo.CargoThroughputRptBO_1001"  resultClass="cargo.cms.export.report.bo.CargoThroughputRptBO_1001">
select 
      to_char(CURRDATE,'DDMONYY') crDate,
      SUM(NUMBER_AWB_TT) awbTt,
      SUM(AWB_PCS_TT) pcsTt,
      NVL(TRIM(TO_CHAR(SUM(AWB_TONNAGE_TT),'999999999999999990.99')),0.00) tonneTt,
      SUM(NUMBER_AWB_IF) awbIf,
      SUM(AWB_PCS_IF) pcsIf,
      NVL(TRIM(TO_CHAR(SUM(AWB_TONNAGE_IF),'999999999999999990.99')),0.00) tonneIf,
      SUM(NUMBER_AWB_QT) awbQt,
      SUM(AWB_PCS_QT) pcsQt,
      NVL(TRIM(TO_CHAR(SUM(AWB_TONNAGE_QT),'999999999999999990.99')),0.00) tonneQt,
      SUM(NUMBER_AWB_LT) awbLt,
      SUM(AWB_PCS_LT) pcsLt,
      NVL(TRIM(TO_CHAR(SUM(AWB_TONNAGE_LT),'999999999999999990.99')),0.00) tonneLt,
      SUM(NUMBER_AWB_OFF) awbOff,
      SUM(AWB_PCS_OFF) pcsOff,
      NVL(TRIM(TO_CHAR(SUM(AWB_TONNAGE_OFF),'999999999999999990.99')),0.00) tonneOff,
      SUM(NUMBER_AWB_IMP_CGO) awbImpCar,
      SUM(AWB_PCS_IMP_CGO) pcsImpCar,
      NVL(TRIM(TO_CHAR(SUM(AWB_TONNAGE_IMP_CGO),'999999999999999990.99')),0.00) tonneImpCar,
      SUM(NUMBER_AWB_EXP_CGO) awbExpCar,
      SUM(AWB_PCS_EXP_CGO) pcsExpCar,
      NVL(TRIM(TO_CHAR(SUM(AWB_TONNAGE_EXP_CGO),'999999999999999990.99')),0.00) tonneExpCar,
      SUM(NUMBER_AWB_TM) awbTm,
      SUM(AWB_PCS_TM) pcsTm,
      NVL(TRIM(TO_CHAR(SUM(AWB_TONNAGE_TM),'999999999999999990.99')),0.00) tonneTm,
      SUM(NUMBER_AWB_IMP_COURIER) awbImpCou,
      SUM(AWB_PCS_IMP_COURIER) pcsImpCou,
      NVL(TRIM(TO_CHAR(SUM(AWB_TONNAGE_IMP_COURIER),'999999999999999990.99')),0.00) tonneImpCou,
      SUM(NUMBER_AWB_EXP_COURIER) awbExpCou,
      SUM(AWB_PCS_EXP_COURIER) pcsExpCou,
      NVL(TRIM(TO_CHAR(SUM(AWB_TONNAGE_EXP_COURIER),'999999999999999990.99')),0.00) tonneExpCou,
      SUM(NON_TERMINAL_AWB) nttAwb,
      SUM(NON_TERMINAL_PCS) nttPcs,
      NVL(TRIM(TO_CHAR(SUM(NON_TERMINAL_TONNAGE),'999999999999999990.99')),0.00)  nttTonne,
      SUM(TERMINAL_AWB) ttAwb,
      SUM(TERMINAL_PCS) ttPcs,
      NVL(TRIM(TO_CHAR(SUM(TERMINAL_TONNAGE),'999999999999999990.99')),0.00) ttTonne  
      from aa_cargo_throughput_rep B where TO_CHAR(CURRDATE,'MONYYYY')= #paramDate#
       <isNotEmpty property="groupCarrList">
            AND   (CARR_CODE = #groupCarrList# 
            OR CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP 
            WHERE GRP_CARR_CODE     = #groupCarrList#))                                          
      </isNotEmpty>
      <isNotEmpty property="carrList">
            AND   CARR_CODE = #carrList# 
     </isNotEmpty>
     <isNotEmpty property="loginCarrier">
		   	AND ( carr_code = #loginCarrier#
            OR  carr_code IN (SELECT CARR_CODE FROM MAST_CARR_GRP 
            WHERE GRP_CARR_CODE  = #loginCarrier#))             
      </isNotEmpty>
      group by CURRDATE
      ORDER BY CURRDATE
 </select>
 
  <!-- Updated for fix 12531. Sanket 15SEP14 -->
  <select id="fetchMonthlyCargoThrputReport_1001" parameterClass="cargo.cms.export.report.bo.CargoThroughputRptBO_1001"  resultClass="cargo.cms.export.report.bo.CargoThroughputRptBO_1001">
      select 
      MONTH_NAME monthName,
      SUM(NUMBER_AWB_TT) awbTt,
      SUM(AWB_PCS_TT) pcsTt,
      NVL(TRIM(TO_CHAR(SUM(AWB_TONNAGE_TT),'999999999999999990.99')),0.00) tonneTt,
      SUM(NUMBER_AWB_IF) awbIf,
      SUM(AWB_PCS_IF) pcsIf,
      NVL(TRIM(TO_CHAR(SUM(AWB_TONNAGE_IF),'999999999999999990.99')),0.00) tonneIf,
      SUM(NUMBER_AWB_QT) awbQt,
      SUM(AWB_PCS_QT) pcsQt,
      NVL(TRIM(TO_CHAR(SUM(AWB_TONNAGE_QT),'999999999999999990.99')),0.00) tonneQt,
      SUM(NUMBER_AWB_LT) awbLt,
      SUM(AWB_PCS_LT) pcsLt,
      NVL(TRIM(TO_CHAR(SUM(AWB_TONNAGE_LT),'999999999999999990.99')),0.00) tonneLt,
      SUM(NUMBER_AWB_OFF) awbOff,
      SUM(AWB_PCS_OFF) pcsOff,
      NVL(TRIM(TO_CHAR(SUM(AWB_TONNAGE_OFF),'999999999999999990.99')),0.00) tonneOff,
      SUM(NUMBER_AWB_IMP_CGO) awbImpCar,
      SUM(AWB_PCS_IMP_CGO) pcsImpCar,
      NVL(TRIM(TO_CHAR(SUM(AWB_TONNAGE_IMP_CGO),'999999999999999990.99')),0.00) tonneImpCar,
      SUM(NUMBER_AWB_EXP_CGO) awbExpCar,
      SUM(AWB_PCS_EXP_CGO) pcsExpCar,
      NVL(TRIM(TO_CHAR(SUM(AWB_TONNAGE_EXP_CGO),'999999999999999990.99')),0.00) tonneExpCar,
      SUM(NUMBER_AWB_TM) awbTm,
      SUM(AWB_PCS_TM) pcsTm,
      NVL(TRIM(TO_CHAR(SUM(AWB_TONNAGE_TM),'999999999999999990.99')),0.00) tonneTm,
      SUM(NUMBER_AWB_IMP_COURIER) awbImpCou,
      SUM(AWB_PCS_IMP_COURIER) pcsImpCou,
      NVL(TRIM(TO_CHAR(SUM(AWB_TONNAGE_IMP_COURIER),'999999999999999990.99')),0.00) tonneImpCou,
      SUM(NUMBER_AWB_EXP_COURIER) awbExpCou,
      SUM(AWB_PCS_EXP_COURIER) pcsExpCou,
      NVL(TRIM(TO_CHAR(SUM(AWB_TONNAGE_EXP_COURIER),'999999999999999990.99')),0.00) tonneExpCou,
      SUM(NON_TERMINAL_AWB) nttAwb,
      SUM(NON_TERMINAL_PCS) nttPcs,
      NVL(TRIM(TO_CHAR(SUM(NON_TERMINAL_TONNAGE),'999999999999999990.99')),0.00) nttTonne,
      SUM(TERMINAL_AWB) ttAwb,
      SUM(TERMINAL_PCS) ttPcs,
      NVL(TRIM(TO_CHAR(SUM(TERMINAL_TONNAGE),'999999999999999990.99')),0.00) ttTonne
      from aa_cargo_throughput_rep B
       where TO_DATE(TO_CHAR(CURRDATE,'MONYYYY'),'MONYYYY')  = TO_DATE(#monthList#,'MONYYYY')
       <isNotEmpty property="groupCarrList">
            AND   (CARR_CODE = #groupCarrList# 
            OR CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP 
            WHERE GRP_CARR_CODE     = #groupCarrList#))                                          
      </isNotEmpty>
      <isNotEmpty property="carrList">
            AND   CARR_CODE = #carrList# 
     </isNotEmpty>
     <isNotEmpty property="loginCarrier">
		   	AND ( carr_code = #loginCarrier#
            OR  carr_code IN (SELECT CARR_CODE FROM MAST_CARR_GRP 
            WHERE GRP_CARR_CODE  = #loginCarrier#))             
     </isNotEmpty>
     
      GROUP BY MONTH_NAME
       ORDER BY TO_DATE(MONTH_NAME,'MMYYYY')
      
 </select>
 
 <select id="fetchFltUncloseCount" parameterClass="java.util.HashMap"  resultClass="java.lang.Integer">
	SELECT COUNT(1)
	FROM FLT_OPR_EVENTS A,
	FLT_OPR C
	WHERE A.TR_NO  =C.TR_NO
	<isNotEmpty property="groupCarrList">
        AND   (C.CARR_CODE = #groupCarrList# 
        OR C.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP 
        WHERE GRP_CARR_CODE     = #groupCarrList#))                                          
	</isNotEmpty>
	<isNotEmpty property="carrList">
         AND   C.CARR_CODE = #carrList# 
	</isNotEmpty>
	<isNotEmpty property="loginCarrier">
		AND ( C.CARR_CODE = #loginCarrier#
		OR  C.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP 
		WHERE GRP_CARR_CODE  = #loginCarrier#))             
	</isNotEmpty>
	<isNotEmpty property="monthName">
	AND TO_CHAR(C.SCH_DATE,'MONYYYY') =UPPER(#monthName#)
	</isNotEmpty>
	<isNotEmpty property="reptDate">
		and TRUNC(c.SCH_DATE)= to_date(#reptDate#,'DDMONYY')
	</isNotEmpty>
	AND FLT_CLS_YN        ='N'
	AND NVL(C.STATUS,'*')!='X'
 </select>
 
 <!-- Updated for fix 12530. Sanket 15SEP14 -->
 <select id="fetchCargoThrputReport_1001forlast" parameterClass="cargo.cms.export.report.bo.CargoThroughputRptBO_1001"  resultClass="cargo.cms.export.report.bo.CargoThroughputRptBO_1001">
 	  select 
      SUM(NUMBER_AWB_TT) awbTtTtlLm,
      SUM(AWB_PCS_TT)pcsTtTtlLm,
      decode(trunc(TRIM(to_char(SUM(AWB_TONNAGE_TT),'999999999999999.99'))),0,0|| TRIM(to_char(SUM(AWB_TONNAGE_TT),'999999999999999.99')), TRIM(to_char(SUM(AWB_TONNAGE_TT),'999999999999999.99'))) tonneTtTtlLm,
      SUM(NUMBER_AWB_IF) awbIfTtlLm,
      SUM(AWB_PCS_IF) pcsIfTtlLm,
      decode(trunc(TRIM(to_char(SUM(AWB_TONNAGE_IF),'999999999999999.99'))),0,0|| TRIM(to_char(SUM(AWB_TONNAGE_IF),'999999999999999.99')), TRIM(to_char(SUM(AWB_TONNAGE_IF),'999999999999999.99'))) tonneIfTtlLm,
      SUM(NUMBER_AWB_QT) awbQtTtlLm,
      SUM(AWB_PCS_QT) pcsQtTtlLm,
      decode(trunc(TRIM(to_char(SUM(AWB_TONNAGE_QT),'999999999999999.99'))),0,0|| TRIM(to_char(SUM(AWB_TONNAGE_QT),'999999999999999.99')), TRIM(to_char(SUM(AWB_TONNAGE_QT),'999999999999999.99'))) tonneQtTtlLm,
      SUM(NUMBER_AWB_LT) awbLtTtlLm,
      SUM(AWB_PCS_LT) pcsLtTtlLm,
      decode(trunc(TRIM(to_char(SUM(AWB_TONNAGE_LT),'999999999999999.99'))),0,0|| TRIM(to_char(SUM(AWB_TONNAGE_LT),'999999999999999.99')), TRIM(to_char(SUM(AWB_TONNAGE_LT),'999999999999999.99'))) tonneLtTtlLm,
      SUM(NUMBER_AWB_OFF) awbOffTtlLm,
      SUM(AWB_PCS_OFF) pcsOffTtlLm,
      decode(trunc(TRIM(to_char(SUM(AWB_TONNAGE_OFF),'999999999999999.99'))),0,0|| TRIM(to_char(SUM(AWB_TONNAGE_OFF),'999999999999999.99')), TRIM(to_char(SUM(AWB_TONNAGE_OFF),'999999999999999.99'))) tonneOffTtlLm,
      SUM(NUMBER_AWB_IMP_CGO) awbImpCarTtlLm,
      SUM(AWB_PCS_IMP_CGO) pcsImpCarTtlLm,
      decode(trunc(TRIM(to_char(SUM(AWB_TONNAGE_IMP_CGO),'999999999999999.99'))),0,0|| TRIM(to_char(SUM(AWB_TONNAGE_IMP_CGO),'999999999999999.99')), TRIM(to_char(SUM(AWB_TONNAGE_IMP_CGO),'999999999999999.99'))) tonneImpCarTtlLm,
      SUM(NUMBER_AWB_EXP_CGO) awbExpCarTtlLm,
      SUM(AWB_PCS_EXP_CGO) pcsExpCarTtlLm,
      decode(trunc(TRIM(to_char(SUM(AWB_TONNAGE_EXP_CGO),'999999999999999.99'))),0,0|| TRIM(to_char(SUM(AWB_TONNAGE_EXP_CGO),'999999999999999.99')), TRIM(to_char(SUM(AWB_TONNAGE_EXP_CGO),'999999999999999.99'))) tonneExpCarTtlLm,
      SUM(NUMBER_AWB_TM) awbTmTtlLm,
      SUM(AWB_PCS_TM) pcsTmTtlLm,
      decode(trunc(TRIM(to_char(SUM(AWB_TONNAGE_TM),'999999999999999.99'))),0,0|| TRIM(to_char(SUM(AWB_TONNAGE_TM),'999999999999999.99')), TRIM(to_char(SUM(AWB_TONNAGE_TM),'999999999999999.99'))) tonneTmTtlLm,
      SUM(NUMBER_AWB_IMP_COURIER) awbImpCouTtlLm,
      SUM(AWB_PCS_IMP_COURIER) pcsImpCouTtlLm,
      decode(trunc(TRIM(to_char(SUM(AWB_TONNAGE_IMP_COURIER),'999999999999999.99'))),0,0|| TRIM(to_char(SUM(AWB_TONNAGE_IMP_COURIER),'999999999999999.99')), TRIM(to_char(SUM(AWB_TONNAGE_IMP_COURIER),'999999999999999.99'))) tonneImpCouTtlLm,
      SUM(NUMBER_AWB_EXP_COURIER) awbExpCouTtlLm,
      SUM(AWB_PCS_EXP_COURIER) pcsExpCouTtlLm,
      decode(trunc(TRIM(to_char(SUM(AWB_TONNAGE_EXP_COURIER),'999999999999999.99'))),0,0|| TRIM(to_char(SUM(AWB_TONNAGE_EXP_COURIER),'999999999999999.99')), TRIM(to_char(SUM(AWB_TONNAGE_EXP_COURIER),'999999999999999.99'))) tonneExpCouTtlLm,
      SUM(NON_TERMINAL_AWB) nttAwbTtlLm,
      SUM(NON_TERMINAL_PCS) nttPcsTtlLm,
      decode(trunc(TRIM(to_char(SUM(NON_TERMINAL_TONNAGE),'999999999999999.99'))),0,0|| TRIM(to_char(SUM(NON_TERMINAL_TONNAGE),'999999999999999.99')), TRIM(to_char(SUM(NON_TERMINAL_TONNAGE),'999999999999999.99'))) nttTonneTtlLm,
      SUM(TERMINAL_AWB) ttAwbTtlLm,
      SUM(TERMINAL_PCS) ttPcsTtlLm,
      decode(trunc(TRIM(to_char(SUM(TERMINAL_TONNAGE),'999999999999999.99'))),0,0|| TRIM(to_char(SUM(TERMINAL_TONNAGE),'999999999999999.99')), TRIM(to_char(SUM(TERMINAL_TONNAGE),'999999999999999.99'))) ttTonneTtlLm
       from aa_cargo_throughput_rep
      WHERE TO_CHAR(CURRDATE,'MONYYYY')=(SELECT TO_CHAR(ADD_MONTHS(TRUNC(LAST_DAY(TO_DATE(#paramDate#,'MONYYYY')),'MONTH'),-1),'MONYYYY') FROM DUAL) 
       
	   <isNotEmpty property="groupCarrList">
            AND   (CARR_CODE = #groupCarrList# 
            OR CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP 
            WHERE GRP_CARR_CODE     = #groupCarrList#))                                          
      </isNotEmpty>
      <isNotEmpty property="carrList">
            AND   CARR_CODE = #carrList# 
     </isNotEmpty>
     <isNotEmpty property="loginCarrier">
		   	AND ( carr_code = #loginCarrier#
            OR  carr_code IN (SELECT CARR_CODE FROM MAST_CARR_GRP 
            WHERE GRP_CARR_CODE  = #loginCarrier#))             
      </isNotEmpty>
 
 </select>
 
 <!-- Updated for fix 12530. Sanket 15SEP14 -->
 <select id="fetchCargoThrputReport_1001forCurrent" parameterClass="cargo.cms.export.report.bo.CargoThroughputRptBO_1001"  resultClass="cargo.cms.export.report.bo.CargoThroughputRptBO_1001">
      select 
      SUM(NUMBER_AWB_TT) awbTtTtlCm,
      SUM(AWB_PCS_TT)pcsTtTtlCm,
      decode(trunc(TRIM(to_char(SUM(AWB_TONNAGE_TT),'999999999999999.99'))),0,0|| TRIM(to_char(SUM(AWB_TONNAGE_TT),'999999999999999.99')), TRIM(to_char(SUM(AWB_TONNAGE_TT),'999999999999999.99'))) tonneTtTtlCm,
      SUM(NUMBER_AWB_IF) awbIfTtlCm,
      SUM(AWB_PCS_IF) pcsIfTtlCm,
      decode(trunc(TRIM(to_char(SUM(AWB_TONNAGE_IF),'999999999999999.99'))),0,0|| TRIM(to_char(SUM(AWB_TONNAGE_IF),'999999999999999.99')), TRIM(to_char(SUM(AWB_TONNAGE_IF),'999999999999999.99'))) tonneIfTtlCm,
      SUM(NUMBER_AWB_QT) awbQtTtlCm,
      SUM(AWB_PCS_QT) pcsQtTtlCm,
      decode(trunc(TRIM(to_char(SUM(AWB_TONNAGE_QT),'999999999999999.99'))),0,0|| TRIM(to_char(SUM(AWB_TONNAGE_QT),'999999999999999.99')), TRIM(to_char(SUM(AWB_TONNAGE_QT),'999999999999999.99'))) tonneQtTtlCm,
      SUM(NUMBER_AWB_LT) awbLtTtlCm,
      SUM(AWB_PCS_LT) pcsLtTtlCm,
      decode(trunc(TRIM(to_char(SUM(AWB_TONNAGE_LT),'999999999999999.99'))),0,0|| TRIM(to_char(SUM(AWB_TONNAGE_LT),'999999999999999.99')), TRIM(to_char(SUM(AWB_TONNAGE_LT),'999999999999999.99'))) tonneLtTtlCm,
      SUM(NUMBER_AWB_OFF) awbOffTtlCm,
      SUM(AWB_PCS_OFF) pcsOffTtlCm,
      decode(trunc(TRIM(to_char(SUM(AWB_TONNAGE_OFF),'999999999999999.99'))),0,0|| TRIM(to_char(SUM(AWB_TONNAGE_OFF),'999999999999999.99')), TRIM(to_char(SUM(AWB_TONNAGE_OFF),'999999999999999.99'))) tonneOffTtlCm,
      SUM(NUMBER_AWB_IMP_CGO) awbImpCarTtlCm,
      SUM(AWB_PCS_IMP_CGO) pcsImpCarTtlCm,
      decode(trunc(TRIM(to_char(SUM(AWB_TONNAGE_IMP_CGO),'999999999999999.99'))),0,0|| TRIM(to_char(SUM(AWB_TONNAGE_IMP_CGO),'999999999999999.99')), TRIM(to_char(SUM(AWB_TONNAGE_IMP_CGO),'999999999999999.99'))) tonneImpCarTtlCm,
      SUM(NUMBER_AWB_EXP_CGO) awbExpCarTtlCm,
      SUM(AWB_PCS_EXP_CGO) pcsExpCarTtlCm,
      decode(trunc(TRIM(to_char(SUM(AWB_TONNAGE_EXP_CGO),'999999999999999.99'))),0,0|| TRIM(to_char(SUM(AWB_TONNAGE_EXP_CGO),'999999999999999.99')), TRIM(to_char(SUM(AWB_TONNAGE_EXP_CGO),'999999999999999.99'))) tonneExpCarTtlCm,
      SUM(NUMBER_AWB_TM) awbTmTtlCm,
      SUM(AWB_PCS_TM) pcsTmTtlCm,
      decode(trunc(TRIM(to_char(SUM(AWB_TONNAGE_TM),'999999999999999.99'))),0,0|| TRIM(to_char(SUM(AWB_TONNAGE_TM),'999999999999999.99')), TRIM(to_char(SUM(AWB_TONNAGE_TM),'999999999999999.99'))) tonneTmTtlCm,
      SUM(NUMBER_AWB_IMP_COURIER) awbImpCouTtlCm,
      SUM(AWB_PCS_IMP_COURIER) pcsImpCouTtlCm,
      decode(trunc(TRIM(to_char(SUM(AWB_TONNAGE_IMP_COURIER),'999999999999999.99'))),0,0|| TRIM(to_char(SUM(AWB_TONNAGE_IMP_COURIER),'999999999999999.99')), TRIM(to_char(SUM(AWB_TONNAGE_IMP_COURIER),'999999999999999.99'))) tonneImpCouTtlCm,
      SUM(NUMBER_AWB_EXP_COURIER) awbExpCouTtlCm,
      SUM(AWB_PCS_EXP_COURIER) pcsExpCouTtlCm,
      decode(trunc(TRIM(to_char(SUM(AWB_TONNAGE_EXP_COURIER),'999999999999999.99'))),0,0|| TRIM(to_char(SUM(AWB_TONNAGE_EXP_COURIER),'999999999999999.99')), TRIM(to_char(SUM(AWB_TONNAGE_EXP_COURIER),'999999999999999.99'))) tonneExpCouTtlCm,
      SUM(NON_TERMINAL_AWB) nttAwbTtlCm,
      SUM(NON_TERMINAL_PCS) nttPcsTtlCm,
      decode(trunc(TRIM(to_char(SUM(NON_TERMINAL_TONNAGE),'999999999999999.99'))),0,0|| TRIM(to_char(SUM(NON_TERMINAL_TONNAGE),'999999999999999.99')), TRIM(to_char(SUM(NON_TERMINAL_TONNAGE),'999999999999999.99'))) nttTonneTtlCm,
      SUM(TERMINAL_AWB) ttAwbTtlCm,
      SUM(TERMINAL_PCS) ttPcsTtlCm,
      decode(trunc(TRIM(to_char(SUM(TERMINAL_TONNAGE),'999999999999999.99'))),0,0|| TRIM(to_char(SUM(TERMINAL_TONNAGE),'999999999999999.99')), TRIM(to_char(SUM(TERMINAL_TONNAGE),'999999999999999.99'))) ttTonneTtlCm
     from aa_cargo_throughput_rep where TO_CHAR(CURRDATE,'MONYYYY')= #paramDate#
       <isNotEmpty property="groupCarrList">
            AND   (CARR_CODE = #groupCarrList# 
            OR CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP 
            WHERE GRP_CARR_CODE     = #groupCarrList#))                                          
      </isNotEmpty>
      <isNotEmpty property="carrList">
            AND   CARR_CODE = #carrList# 
     </isNotEmpty>
     <isNotEmpty property="loginCarrier">
		   	AND ( carr_code = #loginCarrier#
            OR  carr_code IN (SELECT CARR_CODE FROM MAST_CARR_GRP 
            WHERE GRP_CARR_CODE  = #loginCarrier#))             
      </isNotEmpty>
 
 </select>
 
 <!-- Updated for fix 12531. Sanket 15SEP14 -->
 <select id="fetchCargoThrputReport_1001forlastMonthly" parameterClass="cargo.cms.export.report.bo.CargoThroughputRptBO_1001"  resultClass="cargo.cms.export.report.bo.CargoThroughputRptBO_1001">
      select 
      SUM(NUMBER_AWB_TT) awbTtTtlLm,
      SUM(AWB_PCS_TT)pcsTtTtlLm,
      NVL(TRIM(TO_CHAR(SUM(AWB_TONNAGE_TT),'999999999999999990.99')),0.00) tonneTtTtlLm,
      SUM(NUMBER_AWB_IF) awbIfTtlLm,
      SUM(AWB_PCS_IF) pcsIfTtlLm,
      NVL(TRIM(TO_CHAR(SUM(AWB_TONNAGE_IF),'999999999999999990.99')),0.00) tonneIfTtlLm,
      SUM(NUMBER_AWB_QT) awbQtTtlLm,
      SUM(AWB_PCS_QT) pcsQtTtlLm,
      NVL(TRIM(TO_CHAR(SUM(AWB_TONNAGE_QT),'999999999999999990.99')),0.00) tonneQtTtlLm,
      SUM(NUMBER_AWB_LT) awbLtTtlLm,
      SUM(AWB_PCS_LT) pcsLtTtlLm,
      NVL(TRIM(TO_CHAR(SUM(AWB_TONNAGE_LT),'999999999999999990.99')),0.00) tonneLtTtlLm,
      SUM(NUMBER_AWB_OFF) awbOffTtlLm,
      SUM(AWB_PCS_OFF) pcsOffTtlLm,
      NVL(TRIM(TO_CHAR(SUM(AWB_TONNAGE_OFF),'999999999999999990.99')),0.00) tonneOffTtlLm,
      SUM(NUMBER_AWB_IMP_CGO) awbImpCarTtlLm,
      SUM(AWB_PCS_IMP_CGO) pcsImpCarTtlLm,
      NVL(TRIM(TO_CHAR(SUM(AWB_TONNAGE_IMP_CGO),'999999999999999990.99')),0.00) tonneImpCarTtlLm,
      SUM(NUMBER_AWB_EXP_CGO) awbExpCarTtlLm,
      SUM(AWB_PCS_EXP_CGO) pcsExpCarTtlLm,
      NVL(TRIM(TO_CHAR(SUM(AWB_TONNAGE_EXP_CGO),'999999999999999990.99')),0.00) tonneExpCarTtlLm,
      SUM(NUMBER_AWB_TM) awbTmTtlLm,
      SUM(AWB_PCS_TM) pcsTmTtlLm,
      NVL(TRIM(TO_CHAR(SUM(AWB_TONNAGE_TM),'999999999999999990.99')),0.00) tonneTmTtlLm,
      SUM(NUMBER_AWB_IMP_COURIER) awbImpCouTtlLm,
      SUM(AWB_PCS_IMP_COURIER) pcsImpCouTtlLm,
      NVL(TRIM(TO_CHAR(SUM(AWB_TONNAGE_IMP_COURIER),'999999999999999990.99')),0.00) tonneImpCouTtlLm,
      SUM(NUMBER_AWB_EXP_COURIER) awbExpCouTtlLm,
      SUM(AWB_PCS_EXP_COURIER) pcsExpCouTtlLm,
      NVL(TRIM(TO_CHAR(SUM(AWB_TONNAGE_EXP_COURIER),'999999999999999990.99')),0.00) tonneExpCouTtlLm,
      SUM(NON_TERMINAL_AWB) nttAwbTtlLm,
      SUM(NON_TERMINAL_PCS) nttPcsTtlLm,
      NVL(TRIM(TO_CHAR(SUM(NON_TERMINAL_TONNAGE),'999999999999999990.99')),0.00) nttTonneTtlLm,
      SUM(TERMINAL_AWB) ttAwbTtlLm,
      SUM(TERMINAL_PCS) ttPcsTtlLm,
      NVL(TRIM(TO_CHAR(SUM(TERMINAL_TONNAGE),'999999999999999990.99')),0.00) ttTonneTtlLm
       from aa_cargo_throughput_rep 
       where TO_DATE(TO_CHAR(CURRDATE,'MONYYYY'),'MONYYYY') BETWEEN  
       (SELECT TO_DATE(TO_CHAR(ADD_MONTHS(SYSDATE , - (12)),'MONYYYY'),'MONYYYY') FROM DUAL) AND (SELECT TO_DATE(TO_CHAR(last_day(add_months(ADD_MONTHS(SYSDATE , - (12)),12 - to_number(to_char(SYSDATE,'mm')))),'MONYYYY'),'MONYYYY') FROM dual)
       <isNotEmpty property="groupCarrList">
            AND   (CARR_CODE = #groupCarrList# 
            OR CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP 
            WHERE GRP_CARR_CODE     = #groupCarrList#))                                          
      </isNotEmpty>
      <isNotEmpty property="carrList">
            AND   CARR_CODE = #carrList# 
     </isNotEmpty>
     <isNotEmpty property="loginCarrier">
		   	AND ( carr_code = #loginCarrier#
            OR  carr_code IN (SELECT CARR_CODE FROM MAST_CARR_GRP 
            WHERE GRP_CARR_CODE  = #loginCarrier#))             
     </isNotEmpty>
 
 </select>
 
 <!-- Updated for fix 12531. Sanket 15SEP14 -->
 <select id="fetchCargoThrputReport_1001forCurrentMonthly" parameterClass="cargo.cms.export.report.bo.CargoThroughputRptBO_1001"  resultClass="cargo.cms.export.report.bo.CargoThroughputRptBO_1001">
      select 
      SUM(NUMBER_AWB_TT) awbTtTtlCm,
      SUM(AWB_PCS_TT)pcsTtTtlCm,
      decode(trunc(TRIM(to_char(SUM(AWB_TONNAGE_TT),'999999999999999.99'))),0,0|| TRIM(to_char(SUM(AWB_TONNAGE_TT),'999999999999999.99')), TRIM(to_char(SUM(AWB_TONNAGE_TT),'999999999999999.99'))) tonneTtTtlCm,
      SUM(NUMBER_AWB_IF) awbIfTtlCm,
      SUM(AWB_PCS_IF) pcsIfTtlCm,
      decode(trunc(TRIM(to_char(SUM(AWB_TONNAGE_IF),'999999999999999.99'))),0,0|| TRIM(to_char(SUM(AWB_TONNAGE_IF),'999999999999999.99')), TRIM(to_char(SUM(AWB_TONNAGE_IF),'999999999999999.99'))) tonneIfTtlCm,
      SUM(NUMBER_AWB_QT) awbQtTtlCm,
      SUM(AWB_PCS_QT) pcsQtTtlCm,
      decode(trunc(TRIM(to_char(SUM(AWB_TONNAGE_QT),'999999999999999.99'))),0,0|| TRIM(to_char(SUM(AWB_TONNAGE_QT),'999999999999999.99')), TRIM(to_char(SUM(AWB_TONNAGE_QT),'999999999999999.99'))) tonneQtTtlCm,
      SUM(NUMBER_AWB_LT) awbLtTtlCm,
      SUM(AWB_PCS_LT) pcsLtTtlCm,
      decode(trunc(TRIM(to_char(SUM(AWB_TONNAGE_LT),'999999999999999.99'))),0,0|| TRIM(to_char(SUM(AWB_TONNAGE_LT),'999999999999999.99')), TRIM(to_char(SUM(AWB_TONNAGE_LT),'999999999999999.99'))) tonneLtTtlCm,
      SUM(NUMBER_AWB_OFF) awbOffTtlCm,
      SUM(AWB_PCS_OFF) pcsOffTtlCm,
      decode(trunc(TRIM(to_char(SUM(AWB_TONNAGE_OFF),'999999999999999.99'))),0,0|| TRIM(to_char(SUM(AWB_TONNAGE_OFF),'999999999999999.99')), TRIM(to_char(SUM(AWB_TONNAGE_OFF),'999999999999999.99'))) tonneOffTtlCm,
      SUM(NUMBER_AWB_IMP_CGO) awbImpCarTtlCm,
      SUM(AWB_PCS_IMP_CGO) pcsImpCarTtlCm,
      decode(trunc(TRIM(to_char(SUM(AWB_TONNAGE_IMP_CGO),'999999999999999.99'))),0,0|| TRIM(to_char(SUM(AWB_TONNAGE_IMP_CGO),'999999999999999.99')), TRIM(to_char(SUM(AWB_TONNAGE_IMP_CGO),'999999999999999.99'))) tonneImpCarTtlCm,
      SUM(NUMBER_AWB_EXP_CGO) awbExpCarTtlCm,
      SUM(AWB_PCS_EXP_CGO) pcsExpCarTtlCm,
      decode(trunc(TRIM(to_char(SUM(AWB_TONNAGE_EXP_CGO),'999999999999999.99'))),0,0|| TRIM(to_char(SUM(AWB_TONNAGE_EXP_CGO),'999999999999999.99')), TRIM(to_char(SUM(AWB_TONNAGE_EXP_CGO),'999999999999999.99'))) tonneExpCarTtlCm,
      SUM(NUMBER_AWB_TM) awbTmTtlCm,
      SUM(AWB_PCS_TM) pcsTmTtlCm,
      decode(trunc(TRIM(to_char(SUM(AWB_TONNAGE_TM),'999999999999999.99'))),0,0|| TRIM(to_char(SUM(AWB_TONNAGE_TM),'999999999999999.99')), TRIM(to_char(SUM(AWB_TONNAGE_TM),'999999999999999.99'))) tonneTmTtlCm,
      SUM(NUMBER_AWB_IMP_COURIER) awbImpCouTtlCm,
      SUM(AWB_PCS_IMP_COURIER) pcsImpCouTtlCm,
      decode(trunc(TRIM(to_char(SUM(AWB_TONNAGE_IMP_COURIER),'999999999999999.99'))),0,0|| TRIM(to_char(SUM(AWB_TONNAGE_IMP_COURIER),'999999999999999.99')), TRIM(to_char(SUM(AWB_TONNAGE_IMP_COURIER),'999999999999999.99'))) tonneImpCouTtlCm,
      SUM(NUMBER_AWB_EXP_COURIER) awbExpCouTtlCm,
      SUM(AWB_PCS_EXP_COURIER) pcsExpCouTtlCm,
      decode(trunc(TRIM(to_char(SUM(AWB_TONNAGE_EXP_COURIER),'999999999999999.99'))),0,0|| TRIM(to_char(SUM(AWB_TONNAGE_EXP_COURIER),'999999999999999.99')), TRIM(to_char(SUM(AWB_TONNAGE_EXP_COURIER),'999999999999999.99'))) tonneExpCouTtlCm,
      SUM(NON_TERMINAL_AWB) nttAwbTtlCm,
      SUM(NON_TERMINAL_PCS) nttPcsTtlCm,
      decode(trunc(TRIM(to_char(SUM(NON_TERMINAL_TONNAGE),'999999999999999.99'))),0,0|| TRIM(to_char(SUM(NON_TERMINAL_TONNAGE),'999999999999999.99')), TRIM(to_char(SUM(NON_TERMINAL_TONNAGE),'999999999999999.99'))) nttTonneTtlCm,
      SUM(TERMINAL_AWB) ttAwbTtlCm,
      SUM(TERMINAL_PCS) ttPcsTtlCm,
      decode(trunc(TRIM(to_char(SUM(TERMINAL_TONNAGE),'999999999999999.99'))),0,0|| TRIM(to_char(SUM(TERMINAL_TONNAGE),'999999999999999.99')), TRIM(to_char(SUM(TERMINAL_TONNAGE),'999999999999999.99'))) ttTonneTtlCm
      from aa_cargo_throughput_rep where substr(MONTH_NAME,4,4)= (SELECT TO_CHAR(TRUNC(SYSDATE,'YYYY'),'YYYY')  FROM DUAL)
       <isNotEmpty property="groupCarrList">
            AND   (CARR_CODE = #groupCarrList# 
            OR CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP 
            WHERE GRP_CARR_CODE     = #groupCarrList#))                                          
      </isNotEmpty>
      <isNotEmpty property="carrList">
            AND   CARR_CODE = #carrList# 
     </isNotEmpty>
     <isNotEmpty property="loginCarrier">
		   	AND ( carr_code = #loginCarrier#
            OR  carr_code IN (SELECT CARR_CODE FROM MAST_CARR_GRP 
            WHERE GRP_CARR_CODE  = #loginCarrier#))             
     </isNotEmpty>
 </select>
 <delete id="deleteDailyThroughputdata" parameterClass="cargo.cms.export.report.bo.CargoThroughputRptBO_1001">
delete from aa_cargo_throughput_rep
</delete>
<parameterMap id="throughputParam" class="map" >
		<parameter property="currDate" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="jobParam" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="jobRollingMonthParam" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="carrCode" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="groupCarrCode" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
</parameterMap>	
		
<procedure id="proc_daily_throughput_rept" parameterMap="throughputParam" >
		{ call PKG_CARGO_THROUGHPUT_REPT.REP_CARGO_THRUOGHPUT_REP_DAILY(?,?,?,?,?) }
</procedure>
<parameterMap id="monthlyThroughputParam" class="map" >
		<parameter property="currDate" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="jobParam" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
</parameterMap>	
		
<procedure id="proc_daily_throughput" parameterMap="monthlyThroughputParam" >
		{ call PKG_CARGO_THROUGHPUT_REPT.REP_CARGO_THRUOGH_PUT_REP(?,?) }
</procedure>

<!--  Added by Yugandhar for Shift Handover Report Starts -->
	<!--  Export Starts -->
	<delete id="SqlDeleteDataInExportShiftHandOver" parameterClass="cargo.cms.export.report.bo.ShiftHandoverReportBO">
		delete from AA_EXPORT_SHIFT_HANDOVER_REPT
	</delete>
	
	<parameterMap id="shiftHandoverMap" class="map" >
		<parameter property="NEXT_SHIFT_START"  jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="NEXT_SHIFT_COVERAGE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="MODULE_TYPE"  jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="MODULE"  jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	</parameterMap>
	
	<procedure id="SqlCallExportShiftHandOverReptProc" parameterMap="shiftHandoverMap">
           { call PKG_SHIFT_HANDOVER_REPT.EXPORT_SHIFT_HANDOVER_REPT(?,?,?,?)}
    </procedure>

	<select id="SqlExportShiftHandOverReport" parameterClass="cargo.cms.export.report.bo.ShiftHandoverReportBO"  resultClass="cargo.cms.export.report.bo.ShiftHandoverReportBO">
    select  MODULE as mod,FLT_KEY as fltKey,TO_CHAR(FLT_DATE,'DDMONYY') as fltDate,lpad(STD,4,0) as std,lpad(ETD,4,0) as etd,lpad(ATD,4,0) as atd,ACFT_TYPE as acType,
		        UNLDG_PT as unloadPt,ALLOT_EMD as allotEMD,ALLOT_BUP_TPK as allotBUPandTPK,QT_WORKSTATION as qtWks,
		        CHKOUT_MHS as checkOutMHS,CHKOUT_WORKSTATION as checkOutWks,CHKOUT_MAN_AREA as checkOutManArea,
		        CHKOUT_NO_TOW as checkOutNoTow,BU_ALLOT_MHS as buAllotMHS,BU_ALLOT_WORKSTATION as buAllotWks,
		        BU_ALLOT_MAN_AREA as buAllotManArea,BU_ALLOT_NOT_START_ASS as buAllotNotStartAss,BU_ALLOT_NOT_START_NOTASS buAllotNotStartNotAss,QT_PCS as qtPcs,QT_WT as qtWt,
		        NT_PCS as ntPcs,NT_WT as ntWt,EXP_PCS as expPcs,EXP_WT as expWt,SHC_PCS as shcPcs,SHC_WT as shcWt,
		        BUP_PCS as bupPcs,BUP_WT as bupWt,NOT_READY as notRd,WT_VARIENCE as wtVar,OFFLOAD_COMPLETE as ofldCmpl,
  			TOTAL_PCS AS totalPcs,TOTAL_WT AS totalWt,TOTAL_PERT AS totalWtPer
		from AA_EXPORT_SHIFT_HANDOVER_REPT
 	</select>
 	<select id="SqlExportNotStart_UldNotAssigned" parameterClass="cargo.cms.export.report.bo.ShiftHandoverReportBO"  resultClass="cargo.cms.export.report.bo.ShiftHandoverReportBO">
    	select (decode(qty_Q7, null, '',qty_Q7)
                   || decode(qty_Q6, null, '',','||qty_Q6 )
                   || decode(qty_X8, null, '',','||qty_X8 )
                   || decode(QTY_PEB, null, '',','||QTY_PEB )
                   || decode(QTY_H2, null, '',','||QTY_H2 )
                   || decode(QTY_A2, null, '',','||QTY_A2 )
                   || decode(QTY_LDC, null, '',','||QTY_LDC )
                   || decode(QTY_H5, null, '',','||QTY_H5||'H5' )) as uldsNotAssigned
          from
                (SELECT 
                      case when sum(allot.qty_Q7 )is null  or sum(allot.qty_Q7) = 0 then '' 
                         else sum(allot.qty_Q7 ) || (SELECT  uld_allot  FROM MAST_ULD_ALLOT_GROUP a, uld_group_type c where a.uld_group = c.uld_group
                                                        and c.uld_type in (select uld_type from uld_type_contr where contr_code='Q7' and rownum=1)
                                                     )  
                      END as qty_Q7,
                      case when sum(allot.qty_Q6 )is null  or sum(allot.qty_Q6) = 0 then '' 
                         else sum(allot.qty_Q6 ) || (SELECT  uld_allot  FROM MAST_ULD_ALLOT_GROUP a, uld_group_type c where a.uld_group = c.uld_group
                                                        and c.uld_type in (select uld_type from uld_type_contr where contr_code='Q6' and rownum=1)
                                                     )  
                      END as qty_Q6,
                      case when sum(allot.qty_X8 )is null  or sum(allot.qty_X8 ) = 0 then '' 
                         else sum(allot.qty_X8 ) || (SELECT  uld_allot  FROM MAST_ULD_ALLOT_GROUP a, uld_group_type c where a.uld_group = c.uld_group
                                                        and c.uld_type in (select uld_type from uld_type_contr where contr_code='X8' and rownum=1)
                                                     )  
                      END as qty_X8,
                      case when sum(allot.QTY_PEB )is null  or sum(allot.QTY_PEB ) = 0 then '' 
                         else sum(allot.QTY_PEB ) || (SELECT  uld_allot  FROM MAST_ULD_ALLOT_GROUP a, uld_group_type c where a.uld_group = c.uld_group
                                                        and c.uld_type in (select uld_type from uld_type_contr where contr_code='PEB' and rownum=1)
                                                     )  
                      END as QTY_PEB,
                      case when sum(allot.QTY_H2 )is null  or sum(allot.QTY_H2 ) = 0 then '' 
                         else sum(allot.QTY_H2 ) || (SELECT  uld_allot  FROM MAST_ULD_ALLOT_GROUP a, uld_group_type c where a.uld_group = c.uld_group
                                                        and c.uld_type in (select uld_type from uld_type_contr where contr_code='H2' and rownum=1)
                                                     )  
                      END as QTY_H2,
                      case when sum(allot.QTY_A2 )is null  or sum(allot.QTY_A2 ) = 0 then '' 
                         else sum(allot.QTY_A2 ) || (SELECT  uld_allot  FROM MAST_ULD_ALLOT_GROUP a, uld_group_type c where a.uld_group = c.uld_group
                                                        and c.uld_type in (select uld_type from uld_type_contr where contr_code='A2' and rownum=1)
                                                     )  
                      END as QTY_A2, 
                      case when sum(allot.QTY_LDC )is null  or sum(allot.QTY_LDC ) = 0 then '' 
                         else sum(allot.QTY_LDC ) || 'L3'
                      END as QTY_LDC,
                      case when sum(allot.QTY_H5 )is null  or sum(allot.QTY_H5 ) = 0 then '' 
                         else sum(allot.QTY_H5 ) || (SELECT  uld_allot  FROM MAST_ULD_ALLOT_GROUP a, uld_group_type c where a.uld_group = c.uld_group
                                                        and c.uld_type in (select uld_type from uld_type_contr where contr_code='H5' and rownum=1)
                                                     )  
                      END as QTY_H5
                    
                    from edi_elp_allot allot, edi_elp_port port,edi_elp_msg msg
                      where allot.tr_no= msg.tr_no and port.doc_line_no= allot.port_doc_line_no 
                       AND msg.flt_key=#fltKey# and msg.TR_NO=port.tr_no and msg.flt_date=TO_DATE(#fltDate#, 'DDMONYY') 
                       and port.port =#unloadPt#
                       and msg.tr_no in (SELECT a.trNO FROM (select elpmsg.tr_no as trNo from  edi_elp_msg elpmsg  where 
                       elpmsg.flt_key=#fltKey# and elpmsg.flt_date=TO_DATE(#fltDate#, 'DDMONYY') and elpmsg.TRF_IND='Y'  order by elpmsg.TR_NO desc)a
                                                                WHERE rownum =1  )           
                      group by   allot.tr_no)
 	</select>
 	<select id="SqlExportNotStart_UldAssigned" parameterClass="cargo.cms.export.report.bo.ShiftHandoverReportBO"  resultClass="cargo.cms.export.report.bo.ShiftHandoverReportBO">
    	SELECT stragg(stringdelim(COUNT(uld_allot)|| uld_allot,',')) as uldsAssigned
          FROM MAST_ULD_ALLOT_GROUP a, uld_group_type c
          join 
            (SELECT uld_type FROM ULD_INVENTORY,MAST_WH_LOC,MAST_WH_GROUP WHERE ULD_INVENTORY.LOC_CODE = MAST_WH_LOC.CODE AND
                    MAST_WH_LOC.WH_GROUP = MAST_WH_GROUP.WH_GROUP AND
                    ULD_KEY in ( select DISTINCT e.uld_bt_no from exp_pmanifest_uld e
                                  where e.flt_key=#fltKey# and e.flt_date=#fltDate# and e.unldg_pt=#unloadPt#
                                )) b on c.uld_type=b.uld_type
         where a.uld_group = c.uld_group
         group by uld_allot
 	</select>
 	<select id="SqlExportAllotEMD" parameterClass="cargo.cms.export.report.bo.ShiftHandoverReportBO"  resultClass="cargo.cms.export.report.bo.ShiftHandoverReportBO">
    	select  (select RTRIM(LTRIM(decode(qty_Q7 , null, '',0,'',  qty_Q7)
                   || decode(qty_Q6, null, '',0,'',','||  qty_Q6)
                   || decode(qty_X8, null, '',0,'', ','|| qty_X8)
                   || decode( QTY_PEB, null, '',0,'', ','|| QTY_PEB)
                   || decode(QTY_H2, null, '',0,'', ','||QTY_H2)
                   || decode(QTY_A2, null, '',0,'', ','|| QTY_A2)
                   || decode(QTY_LDC, null, '',0,'', ','|| QTY_LDC)
                   ||  decode(QTY_H5 , 0, '', ','||QTY_H5||'H5' ),','),',')
      from
                  (select 
                       case when (a.totalQ7-b.totalQ7) is null  or (a.totalQ7-b.totalQ7) = 0 then '' 
                             else (a.totalQ7-b.totalQ7)  || (SELECT  uld_allot  FROM MAST_ULD_ALLOT_GROUP a, uld_group_type c where a.uld_group = c.uld_group
                                                            and c.uld_type in (select uld_type from uld_type_contr where contr_code='Q7' and rownum=1)
                                                         )  
                          END as qty_Q7,
                       case when (a.totalQ6-b.totalQ6) is null  or (a.totalQ6-b.totalQ6) = 0 then '' 
                             else (a.totalQ6-b.totalQ6)  || (SELECT  uld_allot  FROM MAST_ULD_ALLOT_GROUP a, uld_group_type c where a.uld_group = c.uld_group
                                                            and c.uld_type in (select uld_type from uld_type_contr where contr_code='Q6' and rownum=1)
                                                         )  
                          END as qty_Q6,
                       case when (a.totalX8-b.totalX8) is null  or (a.totalX8-b.totalX8)  = 0 then '' 
                             else (a.totalX8-b.totalX8)  || (SELECT  uld_allot  FROM MAST_ULD_ALLOT_GROUP a, uld_group_type c where a.uld_group = c.uld_group
                                                            and c.uld_type in (select uld_type from uld_type_contr where contr_code='X8' and rownum=1)
                                                         )  
                          END as qty_X8,
                       case when (a.totalPEB-b.totalPEB) is null  or (a.totalPEB-b.totalPEB)  = 0 then '' 
                             else (a.totalPEB-b.totalPEB)  || (SELECT  uld_allot  FROM MAST_ULD_ALLOT_GROUP a, uld_group_type c where a.uld_group = c.uld_group
                                                            and c.uld_type in (select uld_type from uld_type_contr where contr_code='PEB' and rownum=1)
                                                         )  
                          END as QTY_PEB,
                      case when (a.totalH2-b.totalH2) is null  or (a.totalH2-b.totalH2)  = 0 then '' 
                             else (a.totalH2-b.totalH2)  || (SELECT  uld_allot  FROM MAST_ULD_ALLOT_GROUP a, uld_group_type c where a.uld_group = c.uld_group
                                                            and c.uld_type in (select uld_type from uld_type_contr where contr_code='H2' and rownum=1)
                                                         )  
                          END as QTY_H2,
                      case when (a.totalA2-b.totalA2) is null  or (a.totalA2-b.totalA2) = 0 then '' 
                             else (a.totalA2-b.totalA2)  || (SELECT  uld_allot  FROM MAST_ULD_ALLOT_GROUP a, uld_group_type c where a.uld_group = c.uld_group
                                                            and c.uld_type in (select uld_type from uld_type_contr where contr_code='A2' and rownum=1)
                                                         )  
                          END as QTY_A2, 
                      case when (a.totalLDC-b.totalLDC) is null  or (a.totalLDC-b.totalLDC) = 0 then '' 
                             else (a.totalLDC-b.totalLDC)  || 'L3'
                          END as QTY_LDC, 
                      case when a.countH5 is null  or a.countH5  = 0 then '' 
                             else a.countH5  || (SELECT  uld_allot  FROM MAST_ULD_ALLOT_GROUP a, uld_group_type c where a.uld_group = c.uld_group
                                                            and c.uld_type in (select uld_type from uld_type_contr where contr_code='H5' and rownum=1)
                                                         )  
                          END as QTY_H5,      
                     b.tr_no as tr_no,  b.port_doc_line_no as port_doc_line_no
                     from (select count(QTY_H5 )as countH5, sum(qty_Q6 ) as totalQ6,sum(qty_Q7 ) as totalQ7,
                     sum(QTY_X8 ) as totalX8,sum(QTY_PEB ) as totalPEB,sum(QTY_A2 ) as totalA2, sum(QTY_LDC ) as totalLDC,
                     sum(QTY_H2 ) as totalH2,
                     tr_no,port_doc_line_no from edi_elp_allot where CGO_TYPE in('Transit','Export Local B/U')     group by tr_no,port_doc_line_no) a, 
                     (select NVL(sum(qty_Q6 ),0) as totalQ6,NVL(sum(qty_Q7 ),0) as totalQ7,
                     NVL(sum(QTY_X8 ),0) as totalX8,NVL(sum(QTY_PEB ),0) as totalPEB,NVL(sum(QTY_A2 ),0) as totalA2,NVL( sum(QTY_LDC ),0) as totalLDC,
                     NVL(sum(QTY_H2 ),0) as totalH2,
                     tr_no,port_doc_line_no from edi_elp_allot where CGO_TYPE in('Transit PPK')   group by tr_no,port_doc_line_no) b
                     where a.tr_no=b.tr_no and a.port_doc_line_no=b.port_doc_line_no )d where d.tr_no =msg.tr_no 
                  and d.port_doc_line_no=port.doc_line_no ) 
                  as allotEMD
                  from edi_elp_msg msg,edi_elp_port port 
                   where  msg.flt_key=#fltKey# and msg.TR_NO=port.tr_no   and msg.flt_date=TO_DATE(#fltDate#, 'DDMONYY')
                   and port.port =#unloadPt#
                   and msg.tr_no in(SELECT a.trNO FROM (select elpmsg.tr_no as trNo from  edi_elp_msg elpmsg  where 
                   elpmsg.flt_key=#fltKey# and elpmsg.flt_date=TO_DATE(#fltDate#, 'DDMONYY') and elpmsg.TRF_IND='Y'  order by elpmsg.tr_NO desc)a
                                            WHERE rownum =1  )
 	</select>
 	 	<select id="SqlExportAllotBUP" parameterClass="cargo.cms.export.report.bo.ShiftHandoverReportBO"  resultClass="cargo.cms.export.report.bo.ShiftHandoverReportBO">
    	 select RTRIM(LTRIM(decode(qty_Q7, null, '',qty_Q7)
                   || decode(qty_Q6, null, '',','||qty_Q6 )
                   || decode(qty_X8, null, '',','||qty_X8 )
                   || decode(QTY_PEB, null, '',','||QTY_PEB )
                   || decode(QTY_H2, null, '',','||QTY_H2 )
                   || decode(QTY_A2, null, '',','||QTY_A2 )
                   || decode(QTY_LDC, null, '',','||QTY_LDC )
                   || decode(QTY_H5, null, '',','||QTY_H5||'H5' ),','),',') as allotBUPandTPK
                  from
                (SELECT 
                      case when sum(allot.qty_Q7 )is null  or sum(allot.qty_Q7) = 0 then '' 
                         else sum(allot.qty_Q7 ) || (SELECT  uld_allot  FROM MAST_ULD_ALLOT_GROUP a, uld_group_type c where a.uld_group = c.uld_group
                                                        and c.uld_type in (select uld_type from uld_type_contr where contr_code='Q7' and rownum=1)
                                                     )  
                      END as qty_Q7,
                      case when sum(allot.qty_Q6 )is null  or sum(allot.qty_Q6) = 0 then '' 
                         else sum(allot.qty_Q6 ) || (SELECT  uld_allot  FROM MAST_ULD_ALLOT_GROUP a, uld_group_type c where a.uld_group = c.uld_group
                                                        and c.uld_type in (select uld_type from uld_type_contr where contr_code='Q6' and rownum=1)
                                                     )  
                      END as qty_Q6,
                      case when sum(allot.qty_X8 )is null  or sum(allot.qty_X8 ) = 0 then '' 
                         else sum(allot.qty_X8 ) || (SELECT  uld_allot  FROM MAST_ULD_ALLOT_GROUP a, uld_group_type c where a.uld_group = c.uld_group
                                                        and c.uld_type in (select uld_type from uld_type_contr where contr_code='X8' and rownum=1)
                                                     )  
                      END as qty_X8,
                      case when sum(allot.QTY_PEB )is null  or sum(allot.QTY_PEB ) = 0 then '' 
                         else sum(allot.QTY_PEB ) || (SELECT  uld_allot  FROM MAST_ULD_ALLOT_GROUP a, uld_group_type c where a.uld_group = c.uld_group
                                                        and c.uld_type in (select uld_type from uld_type_contr where contr_code='PEB' and rownum=1)
                                                     )  
                      END as QTY_PEB,
                      case when sum(allot.QTY_H2 )is null  or sum(allot.QTY_H2 ) = 0 then '' 
                         else sum(allot.QTY_H2 ) || (SELECT  uld_allot  FROM MAST_ULD_ALLOT_GROUP a, uld_group_type c where a.uld_group = c.uld_group
                                                        and c.uld_type in (select uld_type from uld_type_contr where contr_code='H2' and rownum=1)
                                                     )  
                      END as QTY_H2,
                      case when sum(allot.QTY_A2 )is null  or sum(allot.QTY_A2 ) = 0 then '' 
                         else sum(allot.QTY_A2 ) || (SELECT  uld_allot  FROM MAST_ULD_ALLOT_GROUP a, uld_group_type c where a.uld_group = c.uld_group
                                                        and c.uld_type in (select uld_type from uld_type_contr where contr_code='A2' and rownum=1)
                                                     )  
                      END as QTY_A2, 
                      case when sum(allot.QTY_LDC )is null  or sum(allot.QTY_LDC ) = 0 then '' 
                         else sum(allot.QTY_LDC ) || (SELECT  uld_allot  FROM MAST_ULD_ALLOT_GROUP a, uld_group_type c where a.uld_group = c.uld_group
                                                        and c.uld_type in (select uld_type from uld_type_contr where contr_code='LCD' and rownum=1)
                                                     )  
                      END as QTY_LDC,
                      case when sum(allot.QTY_H5 )is null  or sum(allot.QTY_H5 ) = 0 then '' 
                         else sum(allot.QTY_H5 ) || (SELECT  uld_allot  FROM MAST_ULD_ALLOT_GROUP a, uld_group_type c where a.uld_group = c.uld_group
                                                        and c.uld_type in (select uld_type from uld_type_contr where contr_code='H5' and rownum=1)
                                                     )  
                      END as QTY_H5
                    
                    from edi_elp_allot allot, edi_elp_port port,edi_elp_msg msg
                      where allot.tr_no= msg.tr_no and port.doc_line_no= allot.port_doc_line_no 
                       and allot.CGO_TYPE in('Transit PPK','Export Local Pre-Pack')
                       AND msg.flt_key=#fltKey# and msg.TR_NO=port.tr_no and msg.flt_date=TO_DATE(#fltDate#, 'DDMONYY') 
                       and port.port =#unloadPt#
                       and msg.tr_no in (SELECT a.trNO FROM (select elpmsg.tr_no as trNo from  edi_elp_msg elpmsg  where elpmsg.flt_key=#fltKey# and elpmsg.flt_date=TO_DATE(#fltDate#, 'DDMONYY') and elpmsg.TRF_IND='Y'  order by elpmsg.TR_NO desc)a
                                                                WHERE rownum =1  )           
                      group by   allot.tr_no)
 	</select>
 
 	<parameterMap id="summaryMap" class="map" >
	        <parameter property="NEXT_SHIFT_START"     		jdbcType="VARCHAR"   javaType="java.lang.String"   mode="IN"/>
            <parameter property="NEXT_SHIFT_COVERAGE" 		jdbcType="VARCHAR"   javaType="java.lang.String"   mode="IN"/>
            <parameter property="MODULE_TYPE" 		   		jdbcType="VARCHAR"   javaType="java.lang.String"   mode="IN"/>
            <parameter property="MODULE" 		   		jdbcType="VARCHAR"   javaType="java.lang.String"   mode="IN"/>
            
            <parameter property="TOT_ALLOT_BU_FMD" 	   		jdbcType="VARCHAR"   javaType="java.lang.String"   mode="OUT"/>
            <parameter property="TOT_ALLOT_BU_FLD" 	  		jdbcType="VARCHAR"   javaType="java.lang.String"   mode="OUT"/>
            <parameter property="TOT_ALLOT_BU_HLD"    		jdbcType="VARCHAR"   javaType="java.lang.String"   mode="OUT"/>
            <parameter property="TOT_ALLOT_BU_TMD" 	  		jdbcType="VARCHAR"   javaType="java.lang.String"   mode="OUT"/>
            <parameter property="TOT_ALLOT_BU_BULK"   		jdbcType="VARCHAR"   javaType="java.lang.String"   mode="OUT"/>
            
            <parameter property="TOT_ALLOT_PPK"        		jdbcType="VARCHAR"   javaType="java.lang.String"   mode="OUT"/>
            
            <parameter property="TOT_OSTD_MHS_FMD" 	   		jdbcType="VARCHAR"   javaType="java.lang.String"   mode="OUT"/>
            <parameter property="TOT_OSTD_MHS_FLD" 	   		jdbcType="VARCHAR"   javaType="java.lang.String"   mode="OUT"/>
            <parameter property="TOT_OSTD_MHS_HLD"     		jdbcType="VARCHAR"   javaType="java.lang.String"   mode="OUT"/>
            <parameter property="TOT_OSTD_MHS_TMD" 	   		jdbcType="VARCHAR"   javaType="java.lang.String"   mode="OUT"/>
            <parameter property="TOT_OSTD_MHS_BULK"    		jdbcType="VARCHAR"   javaType="java.lang.String"   mode="OUT"/>
            
            <parameter property="TOT_OSTD_WKS_FMD" 	   		jdbcType="VARCHAR"   javaType="java.lang.String"   mode="OUT"/>
            <parameter property="TOT_OSTD_WKS_FLD" 	   		jdbcType="VARCHAR"   javaType="java.lang.String"   mode="OUT"/>
            <parameter property="TOT_OSTD_WKS_HLD"     		jdbcType="VARCHAR"   javaType="java.lang.String"   mode="OUT"/>
            <parameter property="TOT_OSTD_WKS_TMD" 	   		jdbcType="VARCHAR"   javaType="java.lang.String"   mode="OUT"/>
            <parameter property="TOT_OSTD_WKS_BULK"    		jdbcType="VARCHAR"   javaType="java.lang.String"   mode="OUT"/>
            
            <parameter property="TOT_OSTD_MANAREA_FMD" 		jdbcType="VARCHAR"   javaType="java.lang.String"   mode="OUT"/>
            <parameter property="TOT_OSTD_MANAREA_FLD" 		jdbcType="VARCHAR"   javaType="java.lang.String"   mode="OUT"/>
            <parameter property="TOT_OSTD_MANAREA_HLD" 		jdbcType="VARCHAR"   javaType="java.lang.String"   mode="OUT"/>
            <parameter property="TOT_OSTD_MANAREA_TMD" 		jdbcType="VARCHAR"   javaType="java.lang.String"   mode="OUT"/>
            <parameter property="TOT_OSTD_MANAREA_BULK"		jdbcType="VARCHAR"   javaType="java.lang.String"   mode="OUT"/>
            
            <parameter property="TOT_OSTD_PPK_BUP" 	   		jdbcType="VARCHAR"   javaType="java.lang.String"   mode="OUT"/>
            <parameter property="TOT_OSTD_PPK_TPK"          jdbcType="VARCHAR"   javaType="java.lang.String"   mode="OUT"/> 
    </parameterMap>
      
      <procedure id="SqlCallExportShiftHandOverSummaryProc" parameterMap="summaryMap">
           { call PKG_SHIFT_HANDOVER_REPT.EXPORT_SHIFT_HANDOVER_SUMMARY(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)}
     </procedure>
     
 	
 	<!--  Export Ends -->
	<!--  Import Starts -->
	<delete id="SqlDeleteDataInImportShiftHandOver" parameterClass="cargo.cms.export.report.bo.ShiftHandoverReportBO">
		delete from AA_IMPORT_SHIFT_HANDOVER_REPT
	</delete>
	
	<parameterMap id="shiftHandoverMap" class="map" >
		<parameter property="NEXT_SHIFT_START"  jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="NEXT_SHIFT_COVERAGE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="MODULE_TYPE"  jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="MODULE"  jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	</parameterMap>
	
	<procedure id="SqlCallImportShiftHandOverReptProc" parameterMap="shiftHandoverMap">
           { call PKG_SHIFT_HANDOVER_REPT.IMPORT_SHIFT_HANDOVER_REPT(?,?,?,?)}
    </procedure>

	<select id="SqlImportShiftHandOverReport" parameterClass="cargo.cms.export.report.bo.ShiftHandoverReportBO"  resultClass="cargo.cms.export.report.bo.ShiftHandoverReportBO">
    	SELECT MODULE as mod,FLT_KEY as fltKey,TO_CHAR(FLT_DATE,'DDMONYY') as fltDate,  lpad(ETA,4,0) AS eta ,lpad(ATA,4,0)AS ata,ACFT_TYPE as acType,TOT_ULD_FMD as totUldFMD,TOT_ULD_FLD as totUldFLD,TOT_ULD_HLD as totUldHLD,TOT_ULD_TMD as totUldTMD,TOT_ULD_BULK as totUldBULK,TOT_ULD_NOBK as totUldNOBK,
			   FFM_IND as ffmInd,ULD_CFM_IND as uldCfmInd,TOW_IND as towInd,CHECKIN_ULD_QT as checkinUldQT,CHECKIN_ULD_NL as checkinUldNL,CHECKIN_ULD_PE as checkinUldPE,CHECKIN_ULD_SHC as checkinUldSHC,CHECKIN_ULD_RAMP_CMPL as checkinUldRampCmpl,
			   BD_ULD_QT as bdUldQT,BD_ULD_NL as bdUldNL,BD_ULD_PE as bdUldPE,BD_ULD_SHC as bdUldSHC,BD_QT_PCS as bdQTPcs,trim(to_char(BD_QT_WT,'9999999.99')) as bdQTWt,BD_NT_PCS as bdNTPcs,trim(to_char(BD_NT_WT,'9999999.99')) as bdNTWt,BD_IMP_PCS as bdIMPPcs,trim(to_char(BD_IMP_WT,'9999999.99')) as bdIMPWt,BD_SHC_PCS as bdSHCPcs,
			   trim(to_char(BD_SHC_WT,'9999999.99')) as bdSHCWt,FLT_BD as fltBd,PST_BD_NL as postBdNL,PST_BD_SHC as postBdSHC,PST_BD_BDS as postBdBDS,trim(to_char(CHECKIN_ULD_OSTD,'9990.99')) as bdUldOstd,trim(to_char(BD_OSTD,'9990.99')) as bdOstd
		FROM AA_IMPORT_SHIFT_HANDOVER_REPT
 	</select>
 	<parameterMap id="summaryMap" class="map" >
	        <parameter property="NEXT_SHIFT_START"     jdbcType="VARCHAR"   javaType="java.lang.String"   mode="IN"/>
            <parameter property="NEXT_SHIFT_COVERAGE"  jdbcType="VARCHAR"   javaType="java.lang.String"   mode="IN"/>
            <parameter property="MODULE_TYPE" 		   jdbcType="VARCHAR"   javaType="java.lang.String"   mode="IN"/>
            <parameter property="MODULE" 		   		jdbcType="VARCHAR"   javaType="java.lang.String"   mode="IN"/>
            
            <parameter property="TOT_BU_ULD_QTFMD" 	   jdbcType="VARCHAR"   javaType="java.lang.String"   mode="OUT"/>
            <parameter property="TOT_BU_ULD_QTFLD" 	   jdbcType="VARCHAR"   javaType="java.lang.String"   mode="OUT"/>
            <parameter property="TOT_BU_ULD_QTHLD"     jdbcType="VARCHAR"   javaType="java.lang.String"   mode="OUT"/>
            <parameter property="TOT_BU_ULD_QTTMD" 	   jdbcType="VARCHAR"   javaType="java.lang.String"   mode="OUT"/>
            <parameter property="TOT_BU_ULD_QTBULK"    jdbcType="VARCHAR"   javaType="java.lang.String"   mode="OUT"/>
            
            <parameter property="TOT_BU_ULD_NTFMD" 	   jdbcType="VARCHAR"   javaType="java.lang.String"   mode="OUT"/>
            <parameter property="TOT_BU_ULD_NTFLD" 	   jdbcType="VARCHAR"   javaType="java.lang.String"   mode="OUT"/>
            <parameter property="TOT_BU_ULD_NTHLD"     jdbcType="VARCHAR"   javaType="java.lang.String"   mode="OUT"/>
            <parameter property="TOT_BU_ULD_NTTMD" 	   jdbcType="VARCHAR"   javaType="java.lang.String"   mode="OUT"/>
            <parameter property="TOT_BU_ULD_NTBULK"    jdbcType="VARCHAR"   javaType="java.lang.String"   mode="OUT"/>
            
            <parameter property="TOT_BU_ULD_PEFMD" 	   jdbcType="VARCHAR"   javaType="java.lang.String"   mode="OUT"/>
            <parameter property="TOT_BU_ULD_PEFLD" 	   jdbcType="VARCHAR"   javaType="java.lang.String"   mode="OUT"/>
            <parameter property="TOT_BU_ULD_PEHLD"     jdbcType="VARCHAR"   javaType="java.lang.String"   mode="OUT"/>
            <parameter property="TOT_BU_ULD_PETMD" 	   jdbcType="VARCHAR"   javaType="java.lang.String"   mode="OUT"/>
            <parameter property="TOT_BU_ULD_PEBULK"    jdbcType="VARCHAR"   javaType="java.lang.String"   mode="OUT"/>
            
            <parameter property="TOT_NOBK_IMP" 	       jdbcType="VARCHAR"   javaType="java.lang.String"   mode="OUT"/>
            <parameter property="TOT_NOBK_TPK"         jdbcType="VARCHAR"   javaType="java.lang.String"   mode="OUT"/> 
    </parameterMap>
      
      <procedure id="SqlCallImportShiftHandOverSummaryProc" parameterMap="summaryMap">
           { call PKG_SHIFT_HANDOVER_REPT.IMPORT_SHIFT_HANDOVER_SUMMARY(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)}
     </procedure>
    
 	<select id="SqlImportSummaryReportDetails" parameterClass="cargo.cms.export.report.bo.ShiftHandoverReportBO"  resultClass="cargo.cms.export.report.bo.ShiftHandoverReportBO">
    	SELECT  SUM(TOT_ULD_FMD) as totUldBDFMD,
        		SUM(TOT_ULD_FLD) as totUldBDFLD,
        		SUM(TOT_ULD_HLD) as totUldBDHLD,
        		SUM(TOT_ULD_TMD) as totUldBDTMD,
        		SUM(TOT_ULD_BULK) as totUldBDBULK,
        		SUM(TOT_ULD_NOBK) as totUldNoBD,
        		sum(BD_ULD_SHC) as totBdUldSHC 
  		FROM AA_IMPORT_SHIFT_HANDOVER_REPT
 	</select>
 	<!--  Import Ends -->
<!--  Added by Yugandhar for Shift Handover Report Ends -->
<!-- Added for GTD Report for WOS Begin-->
 	<select id="fetchExportGtdReportDetails" parameterClass="cargo.cms.export.report.bo.CreateGTDRept_545BO"  resultClass="cargo.cms.export.report.bo.CreateGTDRept_545BO">
		select  
			f.flt_key fltKey,
			f.flt_type fltType,
			to_char(f.sch_date,'DDMONYY') fltDate,
			epa.unldg_pt unldgPt,
			epa.awb_no awbNo,
			substr(epa.awb_no,1,3)||'-'|| substr(epa.awb_no,4) awbNoDisp,
			to_char(epa.awb_date,'DDMONYY') awbDate,
			(case when (select count(*) from awb a where a.awb_no=epa.awb_no and a.awb_date=epa.awb_date and catalog like '%E%') >0 then 'EXPORT CARGO'
		        else 'TRANSHIPMENT CARGO'
		        end
		    )awbType,
			awb.orig orig,
			awb.dest dest,
			nvl(epa.pman_pcs, 0) mnfstPcs,
			nvl(epa.pman_wt, 0) mnfstWt,
			nvl(awb.pcs, 0) awbPcs,
			nvl(awb.wt, 0) awbWt,
			decode((select count(ef.awb_no) from edi_fhl ef, edi_fhl_hawb efh 
			        where ef.tr_no = efh.tr_no
			          and ef.awb_no=epa.awb_no 
			          and ef.awb_date =epa.awb_date ),0,'N','Y')  cnslInd,
			'' marks,
			ec.csgne_name consignName,
			ec.CSGNE_ADDR cnsnAddr1,
			ec.CSGNE_ADDR2 cnsnAddr2,
			ec.CSGNE_ADDR3 cnsnAddr3,
			ec.CSGNE_ADDR4 cnsnAddr4,
			ec.CSGNE_PLACE||' '||ec.CSGNE_CTRY_CODE cnsnPlace,
			ec.CSGNE_PIN_CODE cnsnPinCode,
			ec.SHPR_NAME shprName,
			ec.SHPR_ADDR shprAddr1,
			ec.SHPR_ADDR2 shprAddr2,
			ec.SHPR_ADDR3 shprAddr3,
			ec.SHPR_ADDR4 shprAddr4,
			ec.SHPR_PLACE||' '||ec.SHPR_CTRY_CODE shprPlace,
			ec.SHPR_PIN_CODE shprPinCode,
			awb.content content,
			(case when (select count(*) from exp_pmanifest_uld_awb epua where epua.awb_no=epa.awb_no and epua.awb_date=epa.awb_date 
                      and epua.flt_key = epa.flt_key and epua.flt_date=epa.flt_date 
                      and exists (select null from mast_uld_type where CODE = substr(epua.uld_bt_no,0,3) and (DUMMY_H_CONT_IND='Y' or H_CONT_IND ='Y')) 
                  ) >0 and 
		                  (select count(*) from exp_pmanifest_uld_awb epua where epua.awb_no=epa.awb_no and epua.awb_date=epa.awb_date 
		                      and epua.flt_key = epa.flt_key and epua.flt_date=epa.flt_date and epua.uld_bt_no not in(select rule_value from cmsrules where upper(rule_code)=Upper('Dummy_H_Container'))
		                      and not exists (select null from mast_uld_type where CODE = substr(epua.uld_bt_no,0,3) and (DUMMY_H_CONT_IND='Y' or H_CONT_IND ='Y'))
		                  )>0 
		            then
		            (select 'BULK CARGO'||','|| STRAGG(STRINGDELIM(epua.uld_bt_no, ',')) from exp_pmanifest_uld_awb epua where epua.awb_no=epa.awb_no and epua.awb_date=epa.awb_date
		                     and epua.flt_key = epa.flt_key and epua.flt_date=epa.flt_date and epua.uld_bt_no not in(select rule_value from cmsrules where upper(rule_code)=Upper('Dummy_H_Container'))
		                     and not exists (select null from mast_uld_type where CODE = substr(epua.uld_bt_no,0,3) and (DUMMY_H_CONT_IND='Y' or H_CONT_IND ='Y'))
		              )
		      else case when (select count(*) from exp_pmanifest_uld_awb epua where epua.awb_no=epa.awb_no and epua.awb_date=epa.awb_date 
		                      and epua.flt_key = epa.flt_key and epua.flt_date=epa.flt_date 
		                      and exists (select null from mast_uld_type where CODE = substr(epua.uld_bt_no,0,3) and (DUMMY_H_CONT_IND='Y' or H_CONT_IND ='Y')) 
		                  ) >0 then  'BULK CARGO'
		      else 
		            (select STRAGG(STRINGDELIM(epua.uld_bt_no, ',')) from exp_pmanifest_uld_awb epua where epua.awb_no=epa.awb_no and epua.awb_date=epa.awb_date
				                      and epua.flt_key = epa.flt_key and epua.flt_date=epa.flt_date and epua.uld_bt_no not in(select rule_value from cmsrules where upper(rule_code)=Upper('Dummy_H_Container'))
				                      and not exists (select null from mast_uld_type where CODE = substr(epua.uld_bt_no,0,3) and (DUMMY_H_CONT_IND='Y' or H_CONT_IND ='Y'))
		            )              
		        end
		        end
		      ) as uld,
			decode(awb.spl_code1, null, '', awb.spl_code1 || ',') || decode(awb.spl_code2, null, '', awb.spl_code2 || ',') || 
			decode(awb.spl_code3, null, '', awb.spl_code3 || ',') || decode(awb.spl_code4, null, '', awb.spl_code4 || ',') ||
			decode(awb.spl_code5, null, '', awb.spl_code5 || ',') || decode(awb.spl_code6, null, '', awb.spl_code6 || ',') || 
			decode(awb.spl_code7, null, '', awb.spl_code7 || ',') || decode(awb.spl_code8, null, '', awb.spl_code8 || ',') || 
			decode(awb.spl_code9, null, '', awb.spl_code9) splCode,
			efwb.csCurr awbCsCurr,
			decode(efwb.csVal,null,'',0,'NVD',efwb.csVal) awbCsVal,
			efh.hawb_no hawbNo,
			efh.hawb_org hawbOrig,
			efh.hawb_dest hawbDest,
			nvl(efh.hawb_pcs, 0) hawbPcs,
			nvl(efh.hawb_net_wt, 0) hawbWt,
			efh.csgne_name hawbConsignName,
			EFH.CSGNE_ADD1 hawbCnsnAddr1,
			EFH.CSGNE_ADD2 hawbCnsnAddr2,
			EFH.CSGNE_ADD3 hawbCnsnAddr3,
			EFH.CSGNE_ADD4 hawbCnsnAddr4,
			EFH.CSGNE_ADD5 hawbCnsnAddr5,
			EFH.CSGNE_PLACE||' '||EFH.CSGNE_CTRY_CODE hawbCnsnPlace,
			EFH.CSGNE_PIN_CODE hawbCnsnPinCode,
			EFH.SHPR_NAME hawbShprName,
			EFH.SHPR_ADD1 hawbShprAddr1,
			EFH.SHPR_ADD2 hawbShprAddr2,
			EFH.SHPR_ADD3 hawbShprAddr3,
			EFH.SHPR_ADD4 hawbShprAddr4,
			EFH.SHPR_ADD5 hawbShprAddr5,
			EFH.SHPR_PLACE||' '||EFH.SHPR_CTRY_CODE hawbShprPlace,
			EFH.SHPR_PIN_CODE hawbShprPinCode,
			EFH.MANIFEST_DESC hawbContent,
			EFH.DECLN_CURR_CODE hawbCurrCd,
			EFH.DECLN_CTM hawbCsVal,
			(select count(*) from edi_fhl_hawb hawbocc where hawbocc.tr_no=efh.tr_no) hwbOcc,
			(select ics.flt_key||'/'||to_char(ics.flt_date,'DDMONYY') from imp_car_shp ics 
				where ics.awb_no=awb.awb_no and ics.awb_date = awb.awb_date and rownum=1) fltRef
		from exp_pmanifest_awb epa 
	    join awb awb on awb.awb_no = epa.awb_no and awb.awb_date = epa.awb_date
		join flt_opr f on f.flt_key = epa.flt_key and f.sch_date = epa.flt_date and f.flt_type = decode(epa.flt_type, 'E', 'D') 
		join exp_car ec on ec.awb_no =  epa.awb_no and ec.awb_date = epa.awb_date
		left join edi_fhl ef on ef.awb_no =  epa.awb_no and ef.awb_date = epa.awb_date
		left join edi_fhl_hawb efh on efh.tr_no = ef.tr_no
	    left join (select b.awb_no awbNo, b.awb_date awbDt, b.cvd_iso_curr_code csCurr, b.cvd_chg_cust_val csVal
		           from edi_fwb B 
		           join (select MAX(copy_no) copy_no, awb_no,awb_date from edi_fwb group by awb_no, awb_date)A
		           ON B.awb_no = A.awb_no AND B.AWB_date = A.awb_date AND B.copy_no = A.copy_no) efwb 
	    on efwb.awbNo = epa.awb_no and efwb.awbDt = epa.awb_date
		where f.flt_key = #fltKey# and f.sch_date = to_date(#fltDate#,'DDMONYY')
		<isNotEmpty property="unldgPt" prepend="AND">
			epa.unldg_pt=#unldgPt#
		</isNotEmpty>
		union 
		select  
			f.flt_key fltKey,
			f.flt_type fltType,
			to_char(f.sch_date,'DDMONYY') fltDate,
			epa.unldg_pt unldgPt,
			epa.awb_no awbNo,
			substr(epa.awb_no,1,3)||'-'|| substr(epa.awb_no,4) awbNoDisp,
			to_char(epa.awb_date,'DDMONYY') awbDate,
			(case when (select count(*) from awb a where a.awb_no=epa.awb_no and a.awb_date=epa.awb_date and catalog like '%E%') >0 then 'EXPORT CARGO'
		        else 'TRANSHIPMENT CARGO'
		        end
		    )awbType,
			awb.orig orig,
			awb.dest dest,
			nvl(epa.bulk_pcs+epa.ppk_pcs, 0) mnfstPcs,
			nvl(epa.bulk_wt+epa.ppk_wt, 0) mnfstWt,
			nvl(awb.pcs, 0) awbPcs,
			nvl(awb.wt, 0) awbWt,
			decode((select count(ef.awb_no) from edi_fhl ef, edi_fhl_hawb efh 
			        where ef.tr_no = efh.tr_no
			          and ef.awb_no=epa.awb_no 
			          and ef.awb_date =epa.awb_date ),0,'N','Y')  cnslInd,
			'' marks,
			ec.csgne_name consignName,
			ec.CSGNE_ADDR cnsnAddr1,
			ec.CSGNE_ADDR2 cnsnAddr2,
			ec.CSGNE_ADDR3 cnsnAddr3,
			ec.CSGNE_ADDR4 cnsnAddr4,
			ec.CSGNE_PLACE||' '||ec.CSGNE_CTRY_CODE cnsnPlace,
			ec.CSGNE_PIN_CODE cnsnPinCode,
			ec.SHPR_NAME shprName,
			ec.SHPR_ADDR shprAddr1,
			ec.SHPR_ADDR2 shprAddr2,
			ec.SHPR_ADDR3 shprAddr3,
			ec.SHPR_ADDR4 shprAddr4,
			ec.SHPR_PLACE||' '||ec.SHPR_CTRY_CODE shprPlace,
			ec.SHPR_PIN_CODE shprPinCode,
			awb.content content,
			(case when (select count(*) from exp_pman_tarmac_uld_awb epua where epua.awb_no=epa.awb_no and epua.awb_date=epa.awb_date 
                 	     and epua.flt_key = epa.flt_key and epua.flt_date=epa.flt_date 
                    	 and exists (select null from mast_uld_type where CODE = substr(epua.uld_bt_no,0,3) and (DUMMY_H_CONT_IND='Y' or H_CONT_IND ='Y')) 
            	       )>0 and 
	                  (select count(*) from exp_pman_tarmac_uld_awb epua where epua.awb_no=epa.awb_no and epua.awb_date=epa.awb_date 
	                      and epua.flt_key = epa.flt_key and epua.flt_date=epa.flt_date and epua.uld_bt_no not in(select rule_value from cmsrules where upper(rule_code)=Upper('Dummy_H_Container'))
	                      and not exists (select null from mast_uld_type where CODE = substr(epua.uld_bt_no,0,3) and (DUMMY_H_CONT_IND='Y' or H_CONT_IND ='Y'))
	                   )>0 
		            then
		            (select 'BULK CARGO'||','|| STRAGG(STRINGDELIM(epua.uld_bt_no, ',')) from exp_pman_tarmac_uld_awb epua where epua.awb_no=epa.awb_no and epua.awb_date=epa.awb_date
		                     and epua.flt_key = epa.flt_key and epua.flt_date=epa.flt_date and epua.uld_bt_no not in(select rule_value from cmsrules where upper(rule_code)=Upper('Dummy_H_Container'))
		                     and not exists (select null from mast_uld_type where CODE = substr(epua.uld_bt_no,0,3) and (DUMMY_H_CONT_IND='Y' or H_CONT_IND ='Y'))
		              )
		      else case when (select count(*) from exp_pman_tarmac_uld_awb epua where epua.awb_no=epa.awb_no and epua.awb_date=epa.awb_date 
		                      and epua.flt_key = epa.flt_key and epua.flt_date=epa.flt_date 
		                      and exists (select null from mast_uld_type where CODE = substr(epua.uld_bt_no,0,3) and (DUMMY_H_CONT_IND='Y' or H_CONT_IND ='Y')) 
		                  ) >0 then  'BULK CARGO'
		      else 
		            (select STRAGG(STRINGDELIM(epua.uld_bt_no, ',')) from exp_pman_tarmac_uld_awb epua where epua.awb_no=epa.awb_no and epua.awb_date=epa.awb_date
				                      and epua.flt_key = epa.flt_key and epua.flt_date=epa.flt_date and epua.uld_bt_no not in(select rule_value from cmsrules where upper(rule_code)=Upper('Dummy_H_Container'))
				                      and not exists (select null from mast_uld_type where CODE = substr(epua.uld_bt_no,0,3) and (DUMMY_H_CONT_IND='Y' or H_CONT_IND ='Y'))
		            )              
		        end
		        end
		      ) as uld,
		    decode(awb.spl_code1, null, '', awb.spl_code1 || ',') || decode(awb.spl_code2, null, '', awb.spl_code2 || ',') || 
			decode(awb.spl_code3, null, '', awb.spl_code3 || ',') || decode(awb.spl_code4, null, '', awb.spl_code4 || ',') ||
			decode(awb.spl_code5, null, '', awb.spl_code5 || ',') || decode(awb.spl_code6, null, '', awb.spl_code6 || ',') || 
			decode(awb.spl_code7, null, '', awb.spl_code7 || ',') || decode(awb.spl_code8, null, '', awb.spl_code8 || ',') || 
			decode(awb.spl_code9, null, '', awb.spl_code9) splCode,
			efwb.csCurr awbCsCurr,
			decode(efwb.csVal,null,'',0,'NVD',efwb.csVal) awbCsVal,
			efh.hawb_no hawbNo,
			efh.hawb_org hawbOrig,
			efh.hawb_dest hawbDest,
			nvl(efh.hawb_pcs, 0) hawbPcs,
			nvl(efh.hawb_net_wt, 0) hawbWt,
			efh.csgne_name hawbConsignName,
			EFH.CSGNE_ADD1 hawbCnsnAddr1,
			EFH.CSGNE_ADD2 hawbCnsnAddr2,
			EFH.CSGNE_ADD3 hawbCnsnAddr3,
			EFH.CSGNE_ADD4 hawbCnsnAddr4,
			EFH.CSGNE_ADD5 hawbCnsnAddr5,
			EFH.CSGNE_PLACE||' '||EFH.CSGNE_CTRY_CODE hawbCnsnPlace,
			EFH.CSGNE_PIN_CODE hawbCnsnPinCode,
			EFH.SHPR_NAME hawbShprName,
			EFH.SHPR_ADD1 hawbShprAddr1,
			EFH.SHPR_ADD2 hawbShprAddr2,
			EFH.SHPR_ADD3 hawbShprAddr3,
			EFH.SHPR_ADD4 hawbShprAddr4,
			EFH.SHPR_ADD5 hawbShprAddr5,
			EFH.SHPR_PLACE||' '||EFH.SHPR_CTRY_CODE hawbShprPlace,
			EFH.SHPR_PIN_CODE hawbShprPinCode,
			EFH.MANIFEST_DESC hawbContent,
			EFH.DECLN_CURR_CODE hawbCurrCd,
			EFH.DECLN_CTM hawbCsVal,
			(select count(*) from edi_fhl_hawb hawbocc where hawbocc.tr_no=efh.tr_no) hwbOcc,
			(select ics.flt_key||'/'||to_char(ics.flt_date,'DDMONYY') from imp_car_shp ics 
				where ics.awb_no=awb.awb_no and ics.awb_date = awb.awb_date and rownum=1) fltRef
		from exp_pman_tarmac_awb epa 
	  join awb awb on awb.awb_no = epa.awb_no and awb.awb_date = epa.awb_date
		join flt_opr f on f.flt_key = epa.flt_key and f.sch_date = epa.flt_date and f.flt_type = 'D'
		join exp_car ec on ec.awb_no =  epa.awb_no and ec.awb_date = epa.awb_date
		left join edi_fhl ef on ef.awb_no =  epa.awb_no and ef.awb_date = epa.awb_date
		left join edi_fhl_hawb efh on efh.tr_no = ef.tr_no
	  left join (select b.awb_no awbNo, b.awb_date awbDt, b.cvd_iso_curr_code csCurr, b.cvd_chg_cust_val csVal
		           from edi_fwb B 
		           join (select MAX(copy_no) copy_no, awb_no,awb_date from edi_fwb group by awb_no, awb_date)A
		           ON B.awb_no = A.awb_no AND B.AWB_date = A.awb_date AND B.copy_no = A.copy_no) efwb 
	    on efwb.awbNo = epa.awb_no and efwb.awbDt = epa.awb_date
		where f.flt_key = #fltKey# and f.sch_date = to_date(#fltDate#,'DDMONYY')
		<isNotEmpty property="unldgPt" prepend="AND">
			epa.unldg_pt=#unldgPt#
		</isNotEmpty>
		order by unldgPt, awbType, awbNo
 	</select>
 	<select id="fetchExportGtdReportNillCargoDetails" parameterClass="cargo.cms.export.report.bo.CreateGTDRept_545BO"  resultClass="cargo.cms.export.report.bo.CreateGTDRept_545BO">
		select OFF_POINT as unldgPt, '**NIL CARGO**' as awbType
		from 
		flt_opr_leg
		where flt_key=#fltKey# and sch_date =#fltDate#
		and off_point not in 
		(select unldg_pt from exp_pmanifest_uld_awb where flt_key=#fltKey# and flt_date =#fltDate#
		union all select unldg_pt from exp_pman_tarmac_uld_awb where flt_key=#fltKey# and flt_date =#fltDate#)
 	</select>
 	<select id="fetchGtdLicenses" parameterClass="cargo.cms.export.report.bo.CreateGTDRept_545BO"  resultClass="java.lang.String">
		select (select STRAGG(STRINGDELIM(csl.license, ',')) 
		from cst_license csl
		where csl.awb_no in(select epa.awb_no
							from exp_pmanifest_awb epa
							join flt_opr f on f.flt_key = epa.flt_key and f.sch_date = epa.flt_date and f.flt_type = decode(epa.flt_type, 'E', 'D')
							join awb awb on awb.awb_no = epa.awb_no and awb.awb_date = epa.awb_date
							join exp_car ec on ec.awb_no =  epa.awb_no and ec.awb_date = epa.awb_date
							where f.flt_key = #fltKey# and f.sch_date = to_date(#fltDate#,'DDMONYY')
							<isNotEmpty property="unldgPt" prepend="AND">
								epa.unldg_pt=#unldgPt#
							</isNotEmpty>)) licenses
		from dual
 	</select>
 	<select id="fetchGtdFltDetails" parameterClass="cargo.cms.export.report.bo.CreateGTDRept_545BO"  resultClass="java.util.HashMap">
		SELECT f.acft_reg_no REG_NO, (SELECT mc.code_desc FROM mast_carrier mc WHERE mc.code = f.carr_code) FLT_DESC
		FROM flt_opr f
		WHERE f.flt_key = #fltKey#
		AND f.sch_date  = to_date(#fltDate#,'DDMONYY')
		AND f.flt_type  = 'D'
 	</select>
<!-- Added for GTD Report for WOS End-->
	<select id="sqlRCLTruckNo" parameterClass="java.lang.String" resultClass="java.lang.String">
		<![CDATA[
			SELECT TRUCK_NO FROM EXP_RCL_HD WHERE RCL_NO = #PARAM#
		]]>
	</select>
	
	<update id="sqlUpdatePrintIndEnqTowOrder" parameterClass="cargo.cms.export.bo.EnquiryTowOrderTODetailsBO">
			UPDATE TOW_ORDER_OUT 
			SET 
			PRINT_IND = 'Y',
			LM_USER_ID = #userID#,
			LM_DATE = sysdate		
			WHERE TO_NO = #toNo#
	</update>	
		<select id="getQCPforKCSumm" parameterClass="cargo.cms.export.report.bo.QCPKnownCnsnrSummBO" resultClass="cargo.cms.export.report.bo.QCPKnownCnsnrSummBO">
select #monthAndYear# as monthAndYear,carr_code as carr,nvl(sum(passWt),0) as passWt,nvl(sum(freWt),0) as freWt,nvl(sum(xPassWt),0) as xPassWt,nvl(sum(xFreWt),0) as xFreWt from (
SELECT SUBSTR(c.sec_kc_code,LENGTH(c.sec_kc_code)-1) carr_code,
    SUM(p.pman_wt) passWt,
    NULL freWt,
    NULL xPassWt,
    NULL xFreWt
  FROM exp_car c
  JOIN awb a
  ON a.awb_no    = c.awb_no
  AND a.awb_date = c.awb_date
  JOIN
    (SELECT flt_key,
      flt_date,
      awb_no,
      awb_date,
      pman_pcs,
      pman_wt,
      cr_date
    FROM exp_pmanifest_awb
    UNION ALL
    SELECT flt_key,
      flt_date,
      awb_no,
      awb_date,
      (bulk_pcs + ppk_pcs) pman_pcs,
      (bulk_wt  + ppk_wt) pman_wt,
      cr_date
    FROM exp_pman_tarmac_awb
    ) p
  ON c.awb_no    = p.awb_no
  AND c.awb_date = p.awb_date
  JOIN flt_opr fo
  ON p.flt_key         = fo.flt_key
  AND p.flt_date       = fo.sch_date
  AND fo.flt_type      ='D'
  WHERE awb_type       = 'E'
  AND fo.cgo_acft_type = 'PSR'
  AND c.sec_kc_code   IS NOT NULL
  AND fo.act_date BETWEEN TO_CHAR(to_DATE(#monthAndYear#,'MONYY'),'DDMONYY') AND TO_CHAR(LAST_DAY(to_DATE(#monthAndYear#,'MONYY')),'DDMONYY')
 <isNotEmpty property="carr">
 AND (select CARR_CODE from MAST_AWB_PREFIX where CODE = SUBSTR(a.awb_no,1,3)) = #carr#                                                       
</isNotEmpty>
<isNotEmpty property="carrGrp">
 and ( (select CARR_CODE from MAST_AWB_PREFIX where CODE = SUBSTR(a.awb_no,1,3)) = #carrGrp#
                        OR  (select CARR_CODE from MAST_AWB_PREFIX where CODE = SUBSTR(a.awb_no,1,3)) IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE= #carrGrp#))
</isNotEmpty>
<isNotEmpty property="loginCarrier">
 AND ( (select CARR_CODE from MAST_AWB_PREFIX where CODE = SUBSTR(a.awb_no,1,3)) = #loginCarrier#
                        OR  (select CARR_CODE from MAST_AWB_PREFIX where CODE = SUBSTR(a.awb_no,1,3)) IN (SELECT CARR_CODE FROM MAST_CARR_GRP 
                        WHERE GRP_CARR_CODE  = #loginCarrier#))             
</isNotEmpty>
group by SUBSTR(c.sec_kc_code,LENGTH(c.sec_kc_code)-1)
union 
SELECT SUBSTR(c.sec_kc_code,LENGTH(c.sec_kc_code)-1) carr_code,
    NULL passWt,
    SUM(p.pman_wt) freWt,
    NULL xPassWt,
    NULL xFreWt
  FROM exp_car c
  JOIN awb a
  ON a.awb_no    = c.awb_no
  AND a.awb_date = c.awb_date
  JOIN
    (SELECT flt_key,
      flt_date,
      awb_no,
      awb_date,
      pman_pcs,
      pman_wt,
      cr_date
    FROM exp_pmanifest_awb
    UNION ALL
    SELECT flt_key,
      flt_date,
      awb_no,
      awb_date,
      (bulk_pcs + ppk_pcs) pman_pcs,
      (bulk_wt  + ppk_wt) pman_wt,
      cr_date
    FROM exp_pman_tarmac_awb
    ) p
  ON c.awb_no    = p.awb_no
  AND c.awb_date = p.awb_date
  JOIN flt_opr fo
  ON p.flt_key                                   = fo.flt_key
  AND p.flt_date                                 = fo.sch_date
  AND fo.flt_type                                ='D'
  WHERE awb_type                                 = 'E'
  AND DECODE(fo.cgo_acft_type,'FRE','FRE','PAX') = 'FRE'
  AND c.sec_kc_code                             IS NOT NULL
  AND fo.act_date BETWEEN TO_CHAR(to_DATE(#monthAndYear#,'MONYY'),'DDMONYY') AND TO_CHAR(LAST_DAY(to_DATE(#monthAndYear#,'MONYY')),'DDMONYY')
 <isNotEmpty property="carr">
 AND (select CARR_CODE from MAST_AWB_PREFIX where CODE = SUBSTR(a.awb_no,1,3)) = #carr#                                                       
</isNotEmpty>
<isNotEmpty property="carrGrp">
 and ( (select CARR_CODE from MAST_AWB_PREFIX where CODE = SUBSTR(a.awb_no,1,3)) = #carrGrp#
                        OR  (select CARR_CODE from MAST_AWB_PREFIX where CODE = SUBSTR(a.awb_no,1,3)) IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE= #carrGrp#))
</isNotEmpty>
<isNotEmpty property="loginCarrier">
 AND ( (select CARR_CODE from MAST_AWB_PREFIX where CODE = SUBSTR(a.awb_no,1,3)) = #loginCarrier#
                        OR  (select CARR_CODE from MAST_AWB_PREFIX where CODE = SUBSTR(a.awb_no,1,3)) IN (SELECT CARR_CODE FROM MAST_CARR_GRP 
                        WHERE GRP_CARR_CODE  = #loginCarrier#))             
</isNotEmpty>
group by SUBSTR(c.sec_kc_code,LENGTH(c.sec_kc_code)-1)
union
SELECT SUBSTR(c.sec_kc_code,LENGTH(c.sec_kc_code)-1) carr_code,
    NULL passWt,
    NULL freWt,
    SUM(NVL(p.pman_wt, 0)) xPassWt,
    NULL xFreWt
  FROM exp_car c
  JOIN awb a
  ON a.awb_no    = c.awb_no
  AND a.awb_date = c.awb_date
  JOIN
    (
    select awb_no, awb_date, SUM(NVL(pc,0)) pc, SUM(NVL(wt,0)) wt
		from (
		    SELECT jo.awb_no,
		      jo.awb_date,
		      sum(dtl.pc) pc,
		      sum(dtl.wt) wt
		    FROM exp_sec_chk_jo jo
		    JOIN EXP_SEC_CHK_JO_DTL dtl
		    ON dtl.jo_no          = jo.jo_no
		    WHERE STATUS         != 'VOID'
		    AND (UPPER(SEC_CHK)   = 'X-RAY'
		    OR UPPER(SEC_CHK)     = 'RAGXRY')
		    AND upper(dtl.result) = 'PASS'
            group by jo.awb_no, jo.awb_date
		
		      union all
		      
		      select 
		      rcl.awb_no,
		      rcl.awb_date,
		      sec.sc_pcs pc,
		      sec.sc_wt wt
		      from EXP_RCL_SEC_CHK_DTL sec
		      join 
		      (
		        select rcl_no, awb_no, awb_date, status from EXP_RCL_HD where ppk_type != 'M'
		        union
		        select h.rcl_no, t.awb_no, t.awb_date, h.status from exp_rcl_brkdn t 
		        join EXP_RCL_HD h on h.rcl_no=t.rcl_no
		        where h.ppk_type='M'
		      ) rcl
		      on rcl.rcl_no = sec.rcl_no
		      WHERE rcl.STATUS != 'V'
		      AND UPPER(sec.SC_ITM_CODE)   = 'RAGXRY'
		      AND upper(sec.SC_RESULT) = 'PASS' 
		) GROUP BY awb_no, awb_date
	) s ON s.awb_no = c.awb_no
  AND s.awb_date    = c.awb_date
  AND s.pc          = c.pcs
  AND s.wt          = c.wt
  JOIN
    (SELECT flt_key,
      flt_date,
      awb_no,
      awb_date,
      pman_pcs,
      pman_wt,
      cr_date
    FROM exp_pmanifest_awb
    UNION ALL
    SELECT flt_key,
      flt_date,
      awb_no,
      awb_date,
      (bulk_pcs + ppk_pcs) pman_pcs,
      (bulk_wt  + ppk_wt) pman_wt,
      cr_date
    FROM exp_pman_tarmac_awb
    ) p
  ON c.awb_no    = p.awb_no
  AND c.awb_date = p.awb_date
  JOIN FLT_OPR FLT
  ON p.FLT_KEY          =FLT.FLT_KEY
  AND p.FLT_DATE        =FLT.SCH_DATE
  AND FLT.FLT_TYPE      ='D'
  AND FLT.cgo_acft_type = 'PSR'
  WHERE awb_type        = 'E'
  AND c.sec_kc_code    IS NOT NULL
  AND flt.act_date BETWEEN TO_CHAR(to_DATE(#monthAndYear#,'MONYY'),'DDMONYY') AND TO_CHAR(LAST_DAY(to_DATE(#monthAndYear#,'MONYY')),'DDMONYY')
   <isNotEmpty property="carr">
 AND (select CARR_CODE from MAST_AWB_PREFIX where CODE = SUBSTR(a.awb_no,1,3)) = #carr#                                                       
</isNotEmpty>
<isNotEmpty property="carrGrp">
 and ( (select CARR_CODE from MAST_AWB_PREFIX where CODE = SUBSTR(a.awb_no,1,3)) = #carrGrp#
                        OR  (select CARR_CODE from MAST_AWB_PREFIX where CODE = SUBSTR(a.awb_no,1,3)) IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE= #carrGrp#))
</isNotEmpty>
<isNotEmpty property="loginCarrier">
 AND ( (select CARR_CODE from MAST_AWB_PREFIX where CODE = SUBSTR(a.awb_no,1,3)) = #loginCarrier#
                        OR  (select CARR_CODE from MAST_AWB_PREFIX where CODE = SUBSTR(a.awb_no,1,3)) IN (SELECT CARR_CODE FROM MAST_CARR_GRP 
                        WHERE GRP_CARR_CODE  = #loginCarrier#))             
</isNotEmpty>
group by SUBSTR(c.sec_kc_code,LENGTH(c.sec_kc_code)-1)
union
SELECT SUBSTR(c.sec_kc_code,LENGTH(c.sec_kc_code)-1) carr_code,
    NULL passWt,
    NULL freWt,
    NULL xPassWt,
    SUM(NVL(p.pman_wt, 0)) xFreWt
  FROM exp_car c
  JOIN awb a
  ON a.awb_no    = c.awb_no
  AND a.awb_date = c.awb_date
  JOIN
    (
    select awb_no, awb_date, SUM(NVL(pc,0)) pc, SUM(NVL(wt,0)) wt
		from (
		    SELECT jo.awb_no,
		      jo.awb_date,
		      sum(dtl.pc) pc,
		      sum(dtl.wt) wt
		    FROM exp_sec_chk_jo jo
		    JOIN EXP_SEC_CHK_JO_DTL dtl
		    ON dtl.jo_no          = jo.jo_no
		    WHERE STATUS         != 'VOID'
		    AND (UPPER(SEC_CHK)   = 'X-RAY'
		    OR UPPER(SEC_CHK)     = 'RAGXRY')
		    AND upper(dtl.result) = 'PASS'
            group by jo.awb_no, jo.awb_date
		
		      union all
		      
		      select 
		      rcl.awb_no,
		      rcl.awb_date,
		      sec.sc_pcs pc,
		      sec.sc_wt wt
		      from EXP_RCL_SEC_CHK_DTL sec
		      join 
		      (
		        select rcl_no, awb_no, awb_date, status from EXP_RCL_HD where ppk_type != 'M'
		        union
		        select h.rcl_no, t.awb_no, t.awb_date, h.status from exp_rcl_brkdn t 
		        join EXP_RCL_HD h on h.rcl_no=t.rcl_no
		        where h.ppk_type='M'
		      ) rcl
		      on rcl.rcl_no = sec.rcl_no
		      WHERE rcl.STATUS != 'V'
		      AND UPPER(sec.SC_ITM_CODE)   = 'RAGXRY'
		      AND upper(sec.SC_RESULT) = 'PASS' 
		) GROUP BY awb_no, awb_date
	) s ON s.awb_no = c.awb_no
  AND s.awb_date    = c.awb_date
  AND s.pc          = c.pcs
  AND s.wt          = c.wt
  JOIN
    (SELECT flt_key,
      flt_date,
      awb_no,
      awb_date,
      pman_pcs,
      pman_wt,
      cr_date
    FROM exp_pmanifest_awb
    UNION ALL
    SELECT flt_key,
      flt_date,
      awb_no,
      awb_date,
      (bulk_pcs + ppk_pcs) pman_pcs,
      (bulk_wt  + ppk_wt) pman_wt,
      cr_date
    FROM exp_pman_tarmac_awb
    ) p
  ON c.awb_no    = p.awb_no
  AND c.awb_date = p.awb_date
  JOIN FLT_OPR FLT
  ON p.FLT_KEY          =FLT.FLT_KEY
  AND p.FLT_DATE        =FLT.SCH_DATE
  AND FLT.FLT_TYPE      ='D'
  AND FLT.cgo_acft_type = 'FRE'
  WHERE awb_type        = 'E'
  AND c.sec_kc_code    IS NOT NULL
  AND FLT.act_date BETWEEN TO_CHAR(to_DATE(#monthAndYear#,'MONYY'),'DDMONYY') AND TO_CHAR(LAST_DAY(to_DATE(#monthAndYear#,'MONYY')),'DDMONYY')
   <isNotEmpty property="carr">
 AND (select CARR_CODE from MAST_AWB_PREFIX where CODE = SUBSTR(a.awb_no,1,3)) = #carr#                                                       
</isNotEmpty>
<isNotEmpty property="carrGrp">
 and ( (select CARR_CODE from MAST_AWB_PREFIX where CODE = SUBSTR(a.awb_no,1,3)) = #carrGrp#
                        OR  (select CARR_CODE from MAST_AWB_PREFIX where CODE = SUBSTR(a.awb_no,1,3)) IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE= #carrGrp#))
</isNotEmpty>
<isNotEmpty property="loginCarrier">
 AND ( (select CARR_CODE from MAST_AWB_PREFIX where CODE = SUBSTR(a.awb_no,1,3)) = #loginCarrier#
                        OR  (select CARR_CODE from MAST_AWB_PREFIX where CODE = SUBSTR(a.awb_no,1,3)) IN (SELECT CARR_CODE FROM MAST_CARR_GRP 
                        WHERE GRP_CARR_CODE  = #loginCarrier#))             
</isNotEmpty>
group by SUBSTR(c.sec_kc_code,LENGTH(c.sec_kc_code)-1))
group by carr_code
order by decode(carr_code,'CX',1,'KA',2,'LD',3,4), carr_code
	</select>

	<select id="getQCPforKCDetailReprot" parameterClass="cargo.cms.export.report.bo.QCPKnownCnsnrSummBO" resultClass="java.lang.Integer">

<![CDATA[
SELECT
  count(1)
FROM
  exp_car c
  JOIN awb a
  ON a.awb_no    = c.awb_no
  AND a.awb_date = c.awb_date
  JOIN
    (SELECT flt_key,
      flt_date,
      awb_no,
      awb_date,
      pman_pcs,
      pman_wt,
      cr_date
    FROM exp_pmanifest_awb
    UNION ALL
    SELECT flt_key,
      flt_date,
      awb_no,
      awb_date,
      (bulk_pcs + ppk_pcs) pman_pcs,
      (bulk_wt  + ppk_wt) pman_wt,
      cr_date
    FROM exp_pman_tarmac_awb
    ) p
  ON c.awb_no    = p.awb_no
  AND c.awb_date = p.awb_date
  JOIN flt_opr fo
  ON p.flt_key         = fo.flt_key
  AND p.flt_date       = fo.sch_date
  AND fo.flt_type      ='D'
  WHERE awb_type       = 'E'
  AND c.sec_kc_code   IS NOT NULL
  AND fo.act_date BETWEEN TO_CHAR(to_DATE(#monthAndYear#,'MONYY'),'DDMONYY') AND TO_CHAR(LAST_DAY(to_DATE(#monthAndYear#,'MONYY')),'DDMONYY')
  ]]>
  <isNotEmpty property="carr">
 AND (select CARR_CODE from MAST_AWB_PREFIX where CODE = SUBSTR(a.awb_no,1,3)) = #carr#                                                       
</isNotEmpty>
<isNotEmpty property="carrGrp">
 and ( (select CARR_CODE from MAST_AWB_PREFIX where CODE = SUBSTR(a.awb_no,1,3)) = #carrGrp#
                        OR  (select CARR_CODE from MAST_AWB_PREFIX where CODE = SUBSTR(a.awb_no,1,3)) IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE= #carrGrp#))
</isNotEmpty>
<isNotEmpty property="loginCarrier">
 AND ( (select CARR_CODE from MAST_AWB_PREFIX where CODE = SUBSTR(a.awb_no,1,3)) = #loginCarrier#
                        OR  (select CARR_CODE from MAST_AWB_PREFIX where CODE = SUBSTR(a.awb_no,1,3)) IN (SELECT CARR_CODE FROM MAST_CARR_GRP 
                        WHERE GRP_CARR_CODE  = #loginCarrier#))             
</isNotEmpty>

	</select>
	<select id="sqlCheckUITPrintedManually"  parameterClass="cargo.cms.export.report.bo.PrintULDTag_541BO" resultClass="java.lang.Integer">
		SELECT count(1)
	    from exp_chkout_dtl t1
		join uld_inventory t2 on t1.flt_key=t2.flt_key	and t1.uld_key = t2.uld_key	and t1.flt_date=t2.flt_date
		join exp_flt_uld uld	on  t1.uld_key = uld.uld_key	and t1.flt_key=uld.flt_key	and t1.flt_date=uld.flt_date
		where t1.uld_key =  #uldKey#
		and t1.UIT_PRINT_TYPE = 'M' and t1.UIT_PRINT_TIME IS NOT NULL
	</select>
	
	<update id="sqlUpdUITPrintTypeAndTime" parameterClass="java.util.HashMap">
		update exp_chkout_dtl set UIT_PRINT_TYPE = #UIT_PRINT_TYPE#, UIT_PRINT_TIME = TO_DATE(#UIT_PRINT_TIME#,'DDMONYY HH24:MI'),
		LM_USER_ID = #USER#, LM_DATE = SYSDATE
		where uld_key =  #ULD_KEY# and flt_key = #FLT_KEY# and FLT_DATE = #FLT_DATE#
	</update>
<select id="fetchMonthlyCargoThrputReportMonthList" parameterClass="cargo.cms.export.report.bo.CargoThroughputRptBO_1001"  resultClass="cargo.cms.export.report.bo.CargoThroughputRptBO_1001">
 select TO_CHAR(monthList,'MONYYYY') monthList from 
	(SELECT TO_DATE(TO_CHAR(ADD_MONTHS(SYSDATE , - (ROWNUM)),'MONYYYY'),'MONYYYY') monthList FROM DUAL
	CONNECT BY ROWNUM &lt; 13
	UNION
	SELECT TO_DATE(TO_CHAR(SYSDATE,'MONYYYY'),'MONYYYY') monthList FROM DUAL)
	order by TO_DATE(monthList,'MONYYYY')
 </select>
 <select id="getURFEICCount_HoForm"  parameterClass="map" resultClass="java.lang.Integer">
	select count(1) from uld_inventory where uld_key=#uld_key# and eic_flg='Y'
</select>
<select id="sqlGetListOfURFUldForPrintRep" parameterClass="cargo.cms.export.report.bo.ExpRampHandoverRepBO"  resultClass="cargo.cms.export.report.bo.ExpRampHandoverRepBO">
	SELECT A.PURPOSE as dspTo,
	  TO_CHAR(a.est_time,'DDMONYYYY HH24:MI') as estTime,
  	  C.HO_FORM_NO AS strHoFormNo,
  	  DECODE(EXPHOVER.print_handover_date,'',TO_CHAR(SYSDATE,'DDMONYYYY HH24:MI'),TO_CHAR(EXPHOVER.print_handover_date,'DDMONYYYY HH24:MI')) AS printDateAndTime,
  	  D.LOC_CODE as locn,
  	  D.contr_code AS contrCode,
  EXPHOVER.ramp_user AS rhoStaff,
  C.ULD_KEY AS uldNo
  FROM ULD_ISS_HD A,
       ULD_REL_DTL C,
       ULD_INVENTORY D,
       EXP_ULD_HOVER_DTL EXPHOVER 
  WHERE A.EIR_NO  = C.EIR_NO
	    AND D.ULD_KEY   = C.ULD_KEY
		AND C.ULD_KEY IS NOT NULL
     AND EXPHOVER.HO_FORM_NO = C.HO_FORM_NO (+) 
     AND EXPHOVER.ULD_KEY = C.ULD_KEY(+)
	    AND C.HO_FORM_NO=#strHoFormNo#
	</select>
	<select id="sqlGetListOffLTUldForPrintRep" parameterClass="cargo.cms.export.report.bo.ExpRampHandoverRepBO"  resultClass="cargo.cms.export.report.bo.ExpRampHandoverRepBO">
				  select
                  t3.FLT_KEY as fltNo,
                  to_char(t3.FLT_DATE,'ddMONYY') as fltDate ,
                  t3.ULD_bt_no as uldNo,
                  t1.chkout_time as chkOutTime,
                  decode(EXPHOVER.PRINT_HANDOVER_DATE,null,'N','Y') as handOverIndDate,
                  decode(t3.READY_DISP,null,'N',t3.READY_DISP) as readyForDispatch,
                  to_char(t1.chkout_date,'ddMONYY hh:mm') as chkOutDate,
                  t2.loc_code as locn,
                  t2.EIC_FLG as eicFlg,
                  t2.EMPTY_FLG as emptyFlg,
                  t1.chkout_locn as chkOutLoc,                  
                 (SELECT STRAGG(STRINGDELIM(CODE,',')) FROM V_EXP_ULD_SHC WHERE ULD_KEY = T1.ULD_KEY AND ROWNUM &lt; 10)  spl,                   
                  t3.bldup_complete as bldupComplete,
                  t2.handling_mode ppkType,
                  t45.to_no as towOrderNo,
                  t2.RESV_FLG as resvFlg,
                  t2.contr_code as contrCode                
                  from exp_pmanifest_uld t3 
                  join uld_inventory t2
                  on  t3.flt_key=t2.flt_key
                  and t3.flt_date=t2.flt_date
                  and t3.uld_bt_no = t2.uld_key  
                  left join exp_chkout_dtl t1
                  on  t1.uld_key = t3.uld_bt_no
                  and t1.flt_key=t3.flt_key
                  and t1.flt_date=t3.flt_date
                  LEFT JOIN EXP_ULD_HOVER_DTL EXPHOVER ON EXPHOVER.HO_FORM_NO = t1.HO_FORM_NO AND EXPHOVER.ULD_KEY = t1.ULD_KEY
                  left join (select t4.to_no, t4.flt_key, t4.flt_date, t5.uld_key  from tow_order_out t4 , tow_order_out_dtl t5 
                             where t4.to_no=t5.to_no and status !='VOID') t45 
                  on t3.uld_bt_no=t45.uld_key and t45.flt_key=t3.flt_key and t45.flt_date=t3.flt_date
                  where   (t2.handling_mode is null or t2.handling_mode!='DT')
                  and t3.uld_bt_no not in (select uld_key from exp_flt_uld 
                                           where (Source='DLS-L' or Source='DLS-E') 
                                           and uld_key=t3.ULD_bt_no and flt_key=t3.flt_key and flt_date=t3.flt_date and FLT_TYPE='E')
                 and t3.flt_key= #fltNo#
			     and t3.flt_date=TO_DATE(#fltDate#,'DDMONYY')
			     AND t1.ho_form_no = #strHoFormNo#	
                 UNION
                  select
                  t3.FLT_KEY as fltNo,
                  to_char(t3.FLT_DATE,'ddMONYY') as fltDate ,
                  t3.ULD_bt_no as uldNo,
                  t1.chkout_time as chkOutTime,
                  decode(EXPHOVER.PRINT_HANDOVER_DATE,null,'N','Y') as handOverIndDate,
                  'Y' as readyForDispatch,
                  to_char(t1.chkout_date,'ddMONYY hh:mm') as chkOutDate,
                  t2.loc_code as locn,
                  t2.EIC_FLG as eicFlg,
                  t2.EMPTY_FLG as emptyFlg,
                  t1.chkout_locn as chkOutLoc,                  
                 (SELECT STRAGG(STRINGDELIM(CODE,',')) FROM V_EXP_ULD_SHC WHERE ULD_KEY = T1.ULD_KEY AND ROWNUM &lt; 10)  spl,                   
                  'Y' as bldupComplete,
                  t2.handling_mode ppkType,
                  t45.to_no as towOrderNo,
                  t2.RESV_FLG as resvFlg,
                  t2.contr_code as contrCode                
                  from exp_pman_tarmac_uld t3 
                  join uld_inventory t2
                  on  t3.flt_key=t2.flt_key
                  and t3.flt_date=t2.flt_date
                  and t3.uld_bt_no = t2.uld_key  
                  left join exp_chkout_dtl t1
                  on  t1.uld_key = t3.uld_bt_no
                  and t1.flt_key=t3.flt_key
                  and t1.flt_date=t3.flt_date
                  LEFT JOIN EXP_ULD_HOVER_DTL EXPHOVER ON EXPHOVER.HO_FORM_NO = t1.HO_FORM_NO AND EXPHOVER.ULD_KEY = t1.ULD_KEY
                  left join (select t4.to_no, t4.flt_key, t4.flt_date, t5.uld_key  from tow_order_out t4 , tow_order_out_dtl t5 
                             where t4.to_no=t5.to_no and status !='VOID') t45 
                  on t3.uld_bt_no=t45.uld_key and t45.flt_key=t3.flt_key and t45.flt_date=t3.flt_date
                  where (t2.handling_mode is null or t2.handling_mode!='DT')
                  and t3.uld_bt_no not in (select uld_key from exp_flt_uld 
                                           where (Source='DLS-L' or Source='DLS-E') 
                                           and uld_key=t3.ULD_bt_no and flt_key=t3.flt_key and flt_date=t3.flt_date and FLT_TYPE='E')
                  and t3.uld_bt_no in (select uld_key 
                                          from uld_inventory
                                           where (transit_type='TT' or transit_type='IF') 
                                           and imp_flt_key in (select flt_key
                                                             from v_ddt_dtl
                                                             where uld_key=t3.uld_bt_no 
                                                             and shp_cntg_flt_key=t3.flt_key
                                                             and shp_cntg_flt_date=t3.flt_date)
                                           and imp_flt_date in (select flt_date
                                                             from v_ddt_dtl
                                                             where uld_key=t3.uld_bt_no
                                                             and shp_cntg_flt_key=t3.flt_key
                                                             and shp_cntg_flt_date=t3.flt_date)
                                           )
                 and t3.flt_key= #fltNo#
			     and t3.flt_date=TO_DATE(#fltDate#,'DDMONYY')
			     AND t1.ho_form_no = #strHoFormNo#
	</select>

<select id="sqlQuerymailInbouldClosedFlightSLAReptImp" parameterClass="cargo.cms.export.report.bo.FlightSLAReportBO" resultClass="cargo.cms.export.report.bo.FlightSLAReportBO">
	select (SELECT COUNT(*)
		  FROM
		    (
        SELECT MAIL.BD_ULD_KEY AS CONTAINER_NO FROM IMP_XPS_OBC_MAIL MAIL  
        WHERE MAIL.FLT_KEY=#flightNo# AND MAIL.FLT_DATE=#flightDate# AND MAIL.BD_ULD_KEY IS NOT NULL
        and NOT EXISTS (SELECT B.CONTAINER_NO AS CONTAINER_NO,B.NESTING_ID FROM EDI_RESDIT_AWB_DTL A
		    JOIN EDI_RESDIT_TAG_DTL B ON A.TR_AWB_NO = B.TR_AWB_NO
		    JOIN EDI_RESDIT_HD C ON C.TR_NO            = A.TR_NO
		    WHERE B.CONTAINER_NO IS NOT NULL
        AND C.flt_key         = #flightNo#
		    AND C.flt_date        =#flightDate#
        AND B.CONTAINER_NO = MAIL.BD_ULD_KEY
        ) GROUP BY MAIL.BD_ULD_KEY) A WHERE EXISTS (SELECT NULL FROM MAST_ULD_TYPE ULDTYPE
		    WHERE ULDTYPE.CODE             = SUBSTR(A.CONTAINER_NO, 1, 3)
        AND (ULDTYPE.H_CONT_IND     = 'Y'
		    OR ULDTYPE.BT_IND           = 'Y'
		    OR ULDTYPE.DUMMY_H_CONT_IND = 'Y'))
        ) mailHcontainer,
        (SELECT COUNT(*)
		  FROM
		    (
        SELECT MAIL.BD_ULD_KEY AS CONTAINER_NO FROM IMP_XPS_OBC_MAIL MAIL  
        WHERE MAIL.FLT_KEY=#flightNo# AND MAIL.FLT_DATE=#flightDate# AND MAIL.BD_ULD_KEY IS NOT NULL
        and NOT EXISTS (SELECT B.CONTAINER_NO AS CONTAINER_NO FROM EDI_RESDIT_AWB_DTL A
		    JOIN EDI_RESDIT_TAG_DTL B ON A.TR_AWB_NO = B.TR_AWB_NO
		    JOIN EDI_RESDIT_HD C ON C.TR_NO            = A.TR_NO
		    WHERE B.CONTAINER_NO IS NOT NULL
        AND C.flt_key         = #flightNo#
		    AND C.flt_date        =#flightDate#
        AND B.CONTAINER_NO = MAIL.BD_ULD_KEY
        ) GROUP BY MAIL.BD_ULD_KEY) A WHERE NOT EXISTS (SELECT NULL FROM MAST_ULD_TYPE ULDTYPE
		    WHERE ULDTYPE.CODE             = SUBSTR(A.CONTAINER_NO, 1, 3)
        AND (ULDTYPE.H_CONT_IND     = 'Y'
		    OR ULDTYPE.BT_IND           = 'Y'
		    OR ULDTYPE.DUMMY_H_CONT_IND = 'Y'))
        and EXISTS (SELECT NULL FROM MAST_ULD_ALLOT,MAST_ULD_ALLOT_GROUP,ULD_GROUP_TYPE
          WHERE MAST_ULD_ALLOT.ULD_ALLOT     = MAST_ULD_ALLOT_GROUP.ULD_ALLOT
		      AND MAST_ULD_ALLOT_GROUP.ULD_GROUP = ULD_GROUP_TYPE.ULD_GROUP
		      AND ULD_GROUP_TYPE.ULD_TYPE        = SUBSTR(A.CONTAINER_NO,0,3)
		      AND MAST_ULD_ALLOT.PLT_CNT        = 'Pallet')
        ) mailPalletBulk,
        (SELECT COUNT(*)
		  FROM
		    (
        SELECT MAIL.BD_ULD_KEY AS CONTAINER_NO FROM IMP_XPS_OBC_MAIL MAIL  
        WHERE MAIL.FLT_KEY=#flightNo# AND MAIL.FLT_DATE=#flightDate# AND MAIL.BD_ULD_KEY IS NOT NULL
        and NOT EXISTS (SELECT B.CONTAINER_NO AS CONTAINER_NO,b.nesting_id FROM EDI_RESDIT_AWB_DTL A
		    JOIN EDI_RESDIT_TAG_DTL B ON A.TR_AWB_NO = B.TR_AWB_NO
		    JOIN EDI_RESDIT_HD C ON C.TR_NO            = A.TR_NO
		    WHERE B.CONTAINER_NO IS NOT NULL
        AND C.flt_key         = #flightNo#
		    AND C.flt_date        =#flightDate#
        AND B.CONTAINER_NO = MAIL.BD_ULD_KEY
        )  GROUP BY MAIL.BD_ULD_KEY) A WHERE NOT EXISTS (SELECT NULL FROM MAST_ULD_TYPE ULDTYPE
		    WHERE ULDTYPE.CODE             = SUBSTR(A.CONTAINER_NO, 1, 3)
        AND (ULDTYPE.H_CONT_IND     = 'Y'
		    OR ULDTYPE.BT_IND           = 'Y'
		    OR ULDTYPE.DUMMY_H_CONT_IND = 'Y'))
        and EXISTS (SELECT NULL FROM MAST_ULD_ALLOT,MAST_ULD_ALLOT_GROUP,ULD_GROUP_TYPE
          WHERE MAST_ULD_ALLOT.ULD_ALLOT     = MAST_ULD_ALLOT_GROUP.ULD_ALLOT
		      AND MAST_ULD_ALLOT_GROUP.ULD_GROUP = ULD_GROUP_TYPE.ULD_GROUP
		      AND ULD_GROUP_TYPE.ULD_TYPE        = SUBSTR(A.CONTAINER_NO,0,3)
		      AND MAST_ULD_ALLOT.PLT_CNT        != 'Pallet')
        ) mailContainerBulk
        from dual
	</select>

<select id="sqlQueryInbouldClosedFlightSLAReptImp" parameterClass="cargo.cms.export.report.bo.FlightSLAReportBO" resultClass="cargo.cms.export.report.bo.FlightSLAReportBO">		
		
		SELECT (TO_CHAR(TO_DATE(#flightSchDateFrom#),'DDMMYY')) as flightSchDateFrom,
       (TO_CHAR(TO_DATE(#flightSchDateTo#),'DDMMYY')) as flightSchDateTo,
     	fltopr.FLT_KEY                                         AS flightNo,
		  TO_CHAR(fltopr.SCH_DATE,'DDMONYY') 						  AS flightDate,
		  fltopr.CGO_ACFT_TYPE                                        AS paxOrFrtr,
		  pkg_common.get_flt_ata(fltopr.FLT_KEY, fltopr.SCH_DATE,'A') AS ata,
		  TO_CHAR(fltopr.ACT_DATE,'DDMONYY') AS actualDate,
      	  CASE WHEN fltopr.ACT_TIME IS NOT NULL THEN SUBSTR(lpad(fltopr.ACT_TIME,4,0),0,2)||':'||SUBSTR(lpad(fltopr.ACT_TIME,4,0),3) END as actualTime,
		  fltopr.ORIG                                                 AS portOfOrigin,
		  (SELECT COUNT(*)
		  FROM
		    (SELECT STRGDTL.chkin_uld_key FROM IMP_AWB_STRG_DTL STRGDTL 
         LEFT JOIN IMP_ULD_LIST ULDLIST ON ULDLIST.FLT_KEY=STRGDTL.FLT_KEY AND ULDLIST.FLT_DATE=STRGDTL.FLT_DATE AND ULDLIST.ULD_KEY=STRGDTL.chkin_uld_key
         WHERE STRGDTL.FLT_KEY=fltopr.FLT_KEY AND STRGDTL.FLT_DATE=fltopr.SCH_DATE AND STRGDTL.TAG_NO IS NOT NULL 
        AND ULDLIST.handling_mode IS NOT NULL AND uldlist.handling_mode = 'NBK'
        AND EXISTS (SELECT NULL FROM MAST_ULD_ALLOT, MAST_ULD_ALLOT_GROUP,    ULD_GROUP_TYPE    
            WHERE MAST_ULD_ALLOT.ULD_ALLOT     = MAST_ULD_ALLOT_GROUP.ULD_ALLOT  AND MAST_ULD_ALLOT_GROUP.ULD_GROUP = ULD_GROUP_TYPE.ULD_GROUP AND ULD_GROUP_TYPE.ULD_TYPE        = SUBSTR(STRGDTL.chkin_uld_key,0,3)
		        AND MAST_ULD_ALLOT.PLT_CNT         = 'Pallet'
		        )
        AND NOT EXISTS (SELECT NULL FROM MAST_ULD_TYPE ULDTYPE WHERE ULDTYPE.CODE = SUBSTR(STRGDTL.chkin_uld_key, 1, 3)
                AND (ULDTYPE.H_CONT_IND     = 'Y' OR ULDTYPE.BT_IND           = 'Y' OR ULDTYPE.DUMMY_H_CONT_IND = 'Y'))
        GROUP BY chkin_uld_key)) AS palletPrepack,
		  (SELECT COUNT(*)
		  FROM
		    (SELECT STRGDTL.chkin_uld_key FROM IMP_AWB_STRG_DTL STRGDTL 
         LEFT JOIN IMP_ULD_LIST ULDLIST ON ULDLIST.FLT_KEY=STRGDTL.FLT_KEY AND ULDLIST.FLT_DATE=STRGDTL.FLT_DATE AND ULDLIST.ULD_KEY=STRGDTL.chkin_uld_key
          WHERE STRGDTL.FLT_KEY=fltopr.FLT_KEY AND STRGDTL.FLT_DATE=fltopr.SCH_DATE AND STRGDTL.TAG_NO IS NOT NULL 
          AND ((ULDLIST.handling_mode IS NOT NULL AND ULDLIST.handling_mode != 'NBK') OR ULDLIST.handling_mode IS NULL)
          AND EXISTS (SELECT NULL FROM MAST_ULD_ALLOT, MAST_ULD_ALLOT_GROUP,    ULD_GROUP_TYPE    
            WHERE MAST_ULD_ALLOT.ULD_ALLOT     = MAST_ULD_ALLOT_GROUP.ULD_ALLOT  AND MAST_ULD_ALLOT_GROUP.ULD_GROUP = ULD_GROUP_TYPE.ULD_GROUP AND ULD_GROUP_TYPE.ULD_TYPE        = SUBSTR(STRGDTL.chkin_uld_key,0,3)
		        AND MAST_ULD_ALLOT.PLT_CNT         = 'Pallet'
		        )
          AND NOT EXISTS (SELECT NULL FROM MAST_ULD_TYPE ULDTYPE WHERE ULDTYPE.CODE = SUBSTR(STRGDTL.chkin_uld_key, 1, 3)
              AND (ULDTYPE.H_CONT_IND     = 'Y' OR ULDTYPE.BT_IND           = 'Y' OR ULDTYPE.DUMMY_H_CONT_IND = 'Y'))
        GROUP BY chkin_uld_key
		    )) AS palletBulk,
		  (SELECT COUNT(*)
		  FROM
		    (SELECT STRGDTL.chkin_uld_key FROM IMP_AWB_STRG_DTL STRGDTL 
         LEFT JOIN IMP_ULD_LIST ULDLIST ON ULDLIST.FLT_KEY=STRGDTL.FLT_KEY AND ULDLIST.FLT_DATE=STRGDTL.FLT_DATE AND ULDLIST.ULD_KEY=STRGDTL.chkin_uld_key
         WHERE STRGDTL.FLT_KEY=fltopr.FLT_KEY AND STRGDTL.FLT_DATE=fltopr.SCH_DATE AND STRGDTL.TAG_NO IS NOT NULL 
        AND ULDLIST.handling_mode IS NOT NULL AND uldlist.handling_mode = 'NBK'
        AND EXISTS (SELECT NULL FROM MAST_ULD_ALLOT, MAST_ULD_ALLOT_GROUP,    ULD_GROUP_TYPE    
            WHERE MAST_ULD_ALLOT.ULD_ALLOT     = MAST_ULD_ALLOT_GROUP.ULD_ALLOT  AND MAST_ULD_ALLOT_GROUP.ULD_GROUP = ULD_GROUP_TYPE.ULD_GROUP AND ULD_GROUP_TYPE.ULD_TYPE        = SUBSTR(STRGDTL.chkin_uld_key,0,3)
		        AND MAST_ULD_ALLOT.PLT_CNT         != 'Pallet'
		        )
        AND NOT EXISTS (SELECT NULL FROM MAST_ULD_TYPE ULDTYPE WHERE ULDTYPE.CODE = SUBSTR(STRGDTL.chkin_uld_key, 1, 3)
                AND (ULDTYPE.H_CONT_IND     = 'Y' OR ULDTYPE.BT_IND           = 'Y' OR ULDTYPE.DUMMY_H_CONT_IND = 'Y'))
        GROUP BY chkin_uld_key
		  )) AS containerPrepack,
		  (SELECT COUNT(*)
		  FROM
		    (SELECT STRGDTL.chkin_uld_key FROM IMP_AWB_STRG_DTL STRGDTL 
         LEFT JOIN IMP_ULD_LIST ULDLIST ON ULDLIST.FLT_KEY=STRGDTL.FLT_KEY AND ULDLIST.FLT_DATE=STRGDTL.FLT_DATE AND ULDLIST.ULD_KEY=STRGDTL.chkin_uld_key
          WHERE STRGDTL.FLT_KEY=fltopr.FLT_KEY AND STRGDTL.FLT_DATE=fltopr.SCH_DATE AND STRGDTL.TAG_NO IS NOT NULL 
          AND ((ULDLIST.handling_mode IS NOT NULL AND ULDLIST.handling_mode != 'NBK') OR ULDLIST.handling_mode IS NULL)
          AND EXISTS (SELECT NULL FROM MAST_ULD_ALLOT, MAST_ULD_ALLOT_GROUP,    ULD_GROUP_TYPE    
            WHERE MAST_ULD_ALLOT.ULD_ALLOT     = MAST_ULD_ALLOT_GROUP.ULD_ALLOT  AND MAST_ULD_ALLOT_GROUP.ULD_GROUP = ULD_GROUP_TYPE.ULD_GROUP AND ULD_GROUP_TYPE.ULD_TYPE        = SUBSTR(STRGDTL.chkin_uld_key,0,3)
		        AND MAST_ULD_ALLOT.PLT_CNT         != 'Pallet'
		        )
          AND NOT EXISTS (SELECT NULL FROM MAST_ULD_TYPE ULDTYPE WHERE ULDTYPE.CODE = SUBSTR(STRGDTL.chkin_uld_key, 1, 3)
              AND (ULDTYPE.H_CONT_IND     = 'Y' OR ULDTYPE.BT_IND           = 'Y' OR ULDTYPE.DUMMY_H_CONT_IND = 'Y'))
        GROUP BY chkin_uld_key
		    )
		  ) AS containerBulk,
		  (SELECT COUNT(*)
		  FROM
		    (SELECT STRGDTL.chkin_uld_key FROM IMP_AWB_STRG_DTL STRGDTL 
         WHERE STRGDTL.FLT_KEY=fltopr.flt_key AND STRGDTL.FLT_DATE=fltopr.sch_date AND STRGDTL.TAG_NO IS NOT NULL 
         AND EXISTS (SELECT NULL FROM MAST_ULD_TYPE ULDTYPE WHERE ULDTYPE.CODE = SUBSTR(STRGDTL.chkin_uld_key, 1, 3)
                AND (ULDTYPE.H_CONT_IND     = 'Y' OR ULDTYPE.BT_IND           = 'Y' OR ULDTYPE.DUMMY_H_CONT_IND = 'Y'))
GROUP BY chkin_uld_key
		    )
		  ) AS houseContainer,
		  (SELECT COUNT(*)
		  FROM
		    (SELECT COUNT(AWBINV.AWB_NO) AS totalTonnageCnr
		    FROM IMP_CAR_SHP AWBINV
		    JOIN AWB AWB
		    ON AWB.AWB_NO        = AWBINV.AWB_NO
		    AND AWB.AWB_DATE     = AWBINV.AWB_DATE
		    WHERE AWBINV.RECD_PCS> 0
		    AND AWB.CATALOG      ='TM'
		    AND AWBINV.FLT_KEY   =fltopr.flt_key
		    AND AWBINV.FLT_DATE  =fltopr.sch_date
		    AND AWBINV.FLT_TYPE  ='I'
        GROUP BY AWBINV.AWB_NO,     AWBINV.FLT_KEY,      AWBINV.FLT_DATE,     AWBINV.FLT_TYPE
		    )
		  ) AS totalCnr,
		  (SELECT SUM(totalTonnagePcs)
		  FROM
		    (SELECT SUM(AWBINV.recd_pcs) AS totalTonnagePcs
		    FROM IMP_CAR_SHP AWBINV
		    JOIN AWB AWB
		    ON AWB.AWB_NO        = AWBINV.AWB_NO
		    AND AWB.AWB_DATE     = AWBINV.AWB_DATE
		    WHERE AWBINV.RECD_PCS> 0
		    AND AWB.CATALOG      ='TM'
		    AND AWBINV.FLT_KEY   =fltopr.FLT_KEY
		    AND AWBINV.FLT_DATE  =fltopr.SCH_DATE
		    AND AWBINV.FLT_TYPE  ='I'
		    GROUP BY AWBINV.AWB_NO,
		      AWBINV.FLT_KEY,
		      AWBINV.FLT_DATE,
		      AWBINV.FLT_TYPE
		    )
		  ) AS totalPcs,
		  (SELECT SUM(totalTonnageWt)
		  FROM
		    (SELECT SUM(AWBINV.recd_WT) AS totalTonnageWt
		    FROM IMP_CAR_SHP AWBINV
		    JOIN AWB AWB
		    ON AWB.AWB_NO        = AWBINV.AWB_NO
		    AND AWB.AWB_DATE     = AWBINV.AWB_DATE
		    WHERE AWBINV.RECD_PCS> 0
		    AND AWB.CATALOG      ='TM'
		    AND AWBINV.FLT_KEY   =fltopr.FLT_KEY
		    AND AWBINV.FLT_DATE  =fltopr.SCH_DATE
		    AND AWBINV.FLT_TYPE  ='I'
		    GROUP BY AWBINV.AWB_NO,
		      AWBINV.FLT_KEY,
		      AWBINV.FLT_DATE,
		      AWBINV.FLT_TYPE
		    )
		  ) AS totalWeight,
		  (SELECT TO_CHAR(MAX(LM_DATE),'HH24:MI') FROM IMP_AWB_STRG_DTL STRGDTL WHERE STRGDTL.FLT_KEY=fltopr.FLT_KEY AND STRGDTL.FLT_DATE=fltopr.SCH_DATE AND STRGDTL.TAG_NO IS NOT NULL
		  ) AS lastBdTime,
		  CASE WHEN fltevents.FLT_CLS_TIME IS NOT NULL THEN SUBSTR(lpad(fltevents.FLT_CLS_TIME,4,0),0,2)||':'||SUBSTR(lpad(fltevents.FLT_CLS_TIME,4,0),3) END as flightCloseTime,
		  (
		  CASE
		    WHEN fltopr.ACT_DATE IS NULL
		    THEN NULL
		    ELSE ROUND((TO_DATE(TO_CHAR(
		  (SELECT MAX(LM_DATE) FROM IMP_AWB_STRG_DTL STRGDTL WHERE STRGDTL.FLT_KEY=fltopr.FLT_KEY AND STRGDTL.FLT_DATE=fltopr.SCH_DATE AND STRGDTL.TAG_NO IS NOT NULL),'DDMONYY HH24MI'),'DDMONYY HH24MI') - TO_DATE((TO_CHAR(fltopr.ACT_DATE,'DDMONYY')
		  ||' '
		      ||trim(TO_CHAR(ACT_TIME,'0000'))),'DDMONYY HH24MI'))*24)
		  END) AS lastBdTimeAta,
		  (CASE
			    WHEN fltopr.ACT_DATE IS NULL
			    THEN 'NA'
		  ELSE
		  CASE
		    WHEN CGO_ACFT_TYPE = 'PSR'
		    THEN (
		      CASE
			            WHEN ROUND((TO_DATE(TO_CHAR(
		          (SELECT MAX(LM_DATE) FROM IMP_AWB_STRG_DTL STRGDTL WHERE STRGDTL.FLT_KEY=fltopr.FLT_KEY AND STRGDTL.FLT_DATE=fltopr.SCH_DATE AND STRGDTL.TAG_NO IS NOT NULL),'DDMONYY HH24MI'),'DDMONYY HH24MI') - TO_DATE((TO_CHAR(fltopr.ACT_DATE,'DDMONYY')
		          ||' '
			              ||trim(TO_CHAR(ACT_TIME,'0000'))),'DDMONYY HH24MI'))*24) &lt; #slaCriteriaFRTRFlt#
		        THEN 'Y'
		        ELSE 'N'
		      END)
		    ELSE
		      CASE
		        WHEN CGO_ACFT_TYPE = 'FRE'
		        THEN (
		          CASE
			                WHEN ROUND((TO_DATE(TO_CHAR(
		              (SELECT MAX(LM_DATE) FROM IMP_AWB_STRG_DTL STRGDTL WHERE STRGDTL.FLT_KEY=fltopr.FLT_KEY AND STRGDTL.FLT_DATE=fltopr.SCH_DATE AND STRGDTL.TAG_NO IS NOT NULL
			                  ),'DDMONYY HH24MI'),'DDMONYY HH24MI') - TO_DATE((TO_CHAR(fltopr.ACT_DATE,'DDMONYY')
		              ||' '
			                  ||trim(TO_CHAR(ACT_TIME,'0000'))),'DDMONYY HH24MI'))*24) &lt; #slaCriteriaFRTRFlt#
		            THEN 'Y'
		            ELSE 'N'
		          END)
		        ELSE 'N'
		      END
		  END
		  END) meetSla,
		  '' AS remarks
		FROM FLT_OPR fltopr
		JOIN FLT_OPR_EVENTS fltevents
		ON fltopr.FLT_KEY                     = fltevents.FLT_KEY
		AND fltopr.SCH_DATE                   = fltevents.SCH_DATE
		AND fltopr.FLT_TYPE                   = fltevents.FLT_TYPE
		AND fltopr.TR_NO                      = fltevents.TR_NO
		WHERE fltopr.SCH_DATE                IS NOT NULL
		AND fltopr.SCH_TIME                  IS NOT NULL
		AND fltopr.SCH_DATE BETWEEN TO_DATE(#flightSchDateFrom#,'DDMONYY') AND TO_DATE(#flightSchDateTo#,'DDMONYY')
		AND fltopr.FLT_KEY NOT IN (SELECT RULE_VALUE FROM CMSRULES WHERE RULE_CODE IN ('DUMMY_FLT_AAT','DUMMY_FLT_HACTL')) 
		<isNotEmpty property="carrierCode">
		AND fltopr.CARR_CODE = #carrierCode#
		</isNotEmpty>
		<isNotEmpty property="carrierGroup">
		AND (fltopr.CARR_CODE = #carrierGroup# or fltopr.CARR_CODE in (SELECT CARR_CODE FROM MAST_CARR_GRP 
                        WHERE GRP_CARR_CODE  = #carrierGroup#))
		</isNotEmpty>
		AND fltevents.FLT_ClS_YN = 'Y'
		AND fltopr.FLT_TYPE = 'A'
		ORDER BY fltopr.ACT_DATE
		
	</select>
	
	
	
	<select id="sqlQueryXrayReptForAgent" parameterClass="cargo.cms.export.report.bo.XrayReportforAgentBO" resultClass="cargo.cms.export.report.bo.XrayReportforAgentBO">		
		<![CDATA[
		SELECT ROWNUM AS sNo,A.* FROM (SELECT JOHD.AWB_NO AS awbNo,
        JODTL.PC AS joPcs,
        JODTL.WT AS joWt,
        NVL((SELECT AGENT_NAME FROM EXP_CAR CAR WHERE CAR.AWB_NO=JOHD.AWB_NO AND CAR.AWB_DATE = JOHD.AWB_DATE),
        NVL((SELECT AGENT_NAME FROM AWB FWB WHERE FWB.AWB_NO=JOHD.AWB_NO AND FWB.AWB_DATE = JOHD.AWB_DATE),'')) AS agentName,
        NVL((SELECT SHPR_NAME FROM EXP_CAR CAR WHERE CAR.AWB_NO=JOHD.AWB_NO AND CAR.AWB_DATE = JOHD.AWB_DATE),
        NVL((SELECT shipper_name FROM AWB FWB WHERE FWB.AWB_NO=JOHD.AWB_NO AND FWB.AWB_DATE = JOHD.AWB_DATE),'')) AS shipperName,
        NVL(JOHD.BSB_IND,'N') AS bsbInd,
        (SELECT CODE_DESC FROM MAST_CODE_DTL WHERE CODE=JODTL.SEC_CHK AND GROUP_CODE='38' AND CODE_TYPE='SC_METHOD') AS secCheck,
        JODTL.RESULT AS joResult,
        TO_CHAR(JOHD.JO_COMPL_DATE,'DD/MM/YYYY HH24:MI') AS joDate,
        TO_CHAR(SYSDATE,'DDMONYY HH24:MI') AS CurrentDate
        FROM 
		EXP_SEC_CHK_JO JOHD,EXP_SEC_CHK_JO_DTL JODTL,AWB AWB
		WHERE JODTL.JO_NO = JOHD.JO_NO AND AWB.AWB_NO = JOHD.AWB_NO AND AWB.AWB_DATE = JOHD.AWB_DATE
		AND AWB.AWB_TYPE='E' AND JOHD.STATUS = 'Completed' AND JODTL.RESULT = 'Pass'
		]]>
		<isNotEmpty property="jobOrderFromDate">
		<isNotEmpty property="jobOrderToDate">
		AND TO_DATE(TO_CHAR(JOHD.CR_DATE,'DDMONYY'),'DDMONYY') BETWEEN TO_DATE(#jobOrderFromDate#,'DDMONYY') AND TO_DATE(#jobOrderToDate#,'DDMONYY')
		</isNotEmpty>
		</isNotEmpty>
		<isNotEmpty property="bsbInd">
		AND JOHD.BSB_IND=#bsbInd#
		</isNotEmpty>
		<isNotEmpty property="loginCarrier">
		AND (AWB.CARR_CODE = #loginCarrier# OR  AWB.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE  = #loginCarrier#))
		</isNotEmpty>
		<isNotEmpty property="extUser">
		AND AWB.agent_code = (SELECT CUST_COMPANY.CODE FROM CUST_COMPANY,SEC_USER WHERE CUST_COMPANY.CODE = SEC_USER.CUST_NO AND UPPER(SEC_USER.CODE) = UPPER(#extUser#))
		</isNotEmpty>
		ORDER BY JOHD.CR_DATE ASC) A WHERE 1=1
		<isNotEmpty property="issuingAgent">
		AND A.agentName = #issuingAgent#
		</isNotEmpty>		
	</select>
	
	<select id="sqlQueryInbouldNotClosedFlightSLAReptImp" parameterClass="cargo.cms.export.report.bo.FlightSLAReportBO" resultClass="cargo.cms.export.report.bo.FlightSLAReportBO">		
		
		SELECT   fltopr.FLT_KEY||'/'||TO_CHAR(fltopr.SCH_DATE,'DDMONYY')   AS flightNo,
  		CASE WHEN fltopr.SCH_TIME IS NOT NULL THEN SUBSTR(lpad(fltopr.SCH_TIME,4,0),0,2)||':'||SUBSTR(lpad(fltopr.SCH_TIME,4,0),3) END as schDate
		FROM FLT_OPR fltopr
		JOIN FLT_OPR_EVENTS fltevents
		ON fltopr.FLT_KEY                     = fltevents.FLT_KEY
		AND fltopr.SCH_DATE                   = fltevents.SCH_DATE
		AND fltopr.FLT_TYPE                   = fltevents.FLT_TYPE
		AND fltopr.TR_NO                      = fltevents.TR_NO
		JOIN EDI_RESDIT_HD resdit 
		ON resdit.FLT_KEY = fltopr.FLT_KEY
		AND resdit.FLT_DATE = fltopr.SCH_DATE
		WHERE fltopr.SCH_DATE                IS NOT NULL
		AND fltopr.SCH_TIME                  IS NOT NULL
		AND fltopr.SCH_DATE BETWEEN TO_DATE(#flightSchDateFrom#,'DDMONYY') AND TO_DATE(#flightSchDateTo#,'DDMONYY') 
		AND fltopr.FLT_KEY NOT IN (SELECT RULE_VALUE FROM CMSRULES WHERE RULE_CODE IN ('DUMMY_FLT_AAT','DUMMY_FLT_HACTL')) 
		<isNotEmpty property="carrierCode">
		AND fltopr.CARR_CODE = #carrierCode#
		</isNotEmpty>
		<isNotEmpty property="carrierGroup">
		AND (fltopr.CARR_CODE = #carrierGroup# or fltopr.CARR_CODE in (SELECT CARR_CODE FROM MAST_CARR_GRP 
                        WHERE GRP_CARR_CODE  = #carrierGroup#))
		</isNotEmpty>
		AND fltevents.FLT_ClS_YN = 'N'
		AND fltopr.FLT_TYPE = 'A'
		ORDER BY fltopr.ACT_DATE
		
	</select>
	
	<select id="sqlQueryTransformationReport" parameterClass="cargo.cms.export.report.bo.TransformationReportBO" resultClass="cargo.cms.export.report.bo.TransformationReportBO">		
		
		SELECT DISTINCT substr(th.TRF_FROM_AWB_NO,0,3)||'-'||substr(th.TRF_FROM_AWB_NO,4) fromAWB, 
		substr(th.TRF_TO_AWB_NO,0,3)||'-'||substr(th.TRF_TO_AWB_NO,4) toAWB, th.FUNCTION_NAME processName, 
		(SELECT LISTAGG(TAG_NO, ',') WITHIN GROUP (order by TAG_NO) FROM IMP_TM_TRANSFORM_DTL td WHERE td.TR_NO = th.TR_NO
		GROUP BY td.TR_NO) tag,
		th.CR_USER_ID userId, TO_CHAR(th.CR_DATE,'DD/MM/YYYY HH24:MI') transformationDate
		FROM IMP_TM_TRANSFORM_HD th
		WHERE 
		<isNotEmpty property="fromAwb">
		th.TRF_FROM_AWB_NO = #fromAwb# AND
		</isNotEmpty>
		<isNotEmpty property="toAwb">
		th.TRF_TO_AWB_NO = #toAwb# AND
		</isNotEmpty>
		th.CR_DATE BETWEEN TO_DATE(#transFromDate#||' '||#transFromHour#||#transFromMin#,'DDMONYY HH24MI') 
		AND TO_DATE(#transToDate#||' '||#transToHour#||#transToMin#,'DDMONYY HH24MI')
		
	</select>
	
		<select id="sqlQueryOutbouldClosedFlightSLAReptDateDtl" parameterClass="cargo.cms.export.report.bo.FlightSLAReportBO"
	  resultClass="cargo.cms.export.report.bo.FlightSLAReportBO">
	  select (TO_CHAR(TO_DATE(#flightSchDateFrom#),'DDMMYY')) as flightSchDateFrom,(TO_CHAR(TO_DATE(#flightSchDateTo#),'DDMMYY')) as flightSchDateTo from dual
	  </select>
	
	<select id="sqlQueryOutbouldClosedFlightSLAReptImp" parameterClass="cargo.cms.export.report.bo.FlightSLAReportBO"
	  resultClass="cargo.cms.export.report.bo.FlightSLAReportBO">
	  
	  SELECT (TO_CHAR(TO_DATE(#flightSchDateFrom#),'DDMMYY')) as flightSchDateFrom,
       (TO_CHAR(TO_DATE(#flightSchDateTo#),'DDMMYY')) as flightSchDateTo,fltopr.FLT_KEY AS flightNo,
                TO_CHAR(fltopr.SCH_DATE,'DD-MON')  							AS schDate,
                fltopr.CGO_ACFT_TYPE                                        AS paxOrFrtr,
                pkg_common.get_flt_ata(fltopr.FLT_KEY, fltopr.SCH_DATE,'D') AS atd,
                TO_CHAR(fltopr.ACT_DATE,'DDMONYY') AS actualDate,
      	  		CASE WHEN fltopr.ACT_TIME IS NOT NULL THEN SUBSTR(lpad(fltopr.ACT_TIME,4,0),0,2)||':'||SUBSTR(lpad(fltopr.ACT_TIME,4,0),3) END as actualTime,
                fltopr.DEST AS portOfDest,
                NVL(PKG_COMMON.GET_FLT_ETA(fltopr.FLT_KEY,fltopr.SCH_DATE, 'D', 'DD'),
                 PKG_COMMON.GET_FLT_STA(fltopr.FLT_KEY,fltopr.SCH_DATE, 'D', 'DD')) AS stdOrEtd,
                (SELECT COUNT(*)
                FROM
                  (SELECT COUNT(EPUA.uld_bt_no) AS totalTonnageCnr
                  FROM EXP_PMANIFEST_ULD_AWB EPUA 
					JOIN AWB AWB ON AWB.AWB_NO = EPUA.AWB_NO AND AWB.AWB_DATE = EPUA.AWB_DATE
                  JOIN EXP_PMANIFEST_ULD INV ON INV.ULD_BT_NO = EPUA.ULD_BT_NO AND INV.FLT_KEY =fltopr.FLT_KEY AND INV.FLT_DATE =fltopr.SCH_DATE AND INV.hdlg_mode IS NOT NULL AND inv.hdlg_mode = 'NBK'
                  WHERE AWB.CATALOG ='TM'
                  AND EPUA.FLT_KEY =fltopr.FLT_KEY
                  AND EPUA.FLT_DATE =fltopr.SCH_DATE
                  AND EXISTS
                    (SELECT NULL
                    FROM MAST_ULD_ALLOT,
                      MAST_ULD_ALLOT_GROUP,
                      ULD_GROUP_TYPE
                    WHERE MAST_ULD_ALLOT.ULD_ALLOT     = MAST_ULD_ALLOT_GROUP.ULD_ALLOT
                    AND MAST_ULD_ALLOT_GROUP.ULD_GROUP = ULD_GROUP_TYPE.ULD_GROUP
                    AND ULD_GROUP_TYPE.ULD_TYPE        = SUBSTR(EPUA.uld_bt_no,0,3)
                    AND MAST_ULD_ALLOT.PLT_CNT         = 'Pallet'
                    )
                AND NOT EXISTS (SELECT NULL FROM MAST_ULD_TYPE ULDTYPE
              WHERE ULDTYPE.CODE             = SUBSTR(EPUA.uld_bt_no, 1, 3)
          AND (ULDTYPE.H_CONT_IND     = 'Y'
          OR ULDTYPE.BT_IND           = 'Y'
          OR ULDTYPE.DUMMY_H_CONT_IND = 'Y'))
                    GROUP BY EPUA.ULD_BT_NO,EPUA.FLT_KEY,EPUA.FLT_DATE
                  )
                ) AS palletPrepack,
                
                (SELECT COUNT(*)
                FROM
                  (SELECT COUNT(EPUA.uld_bt_no) AS totalTonnageCnr
                  FROM EXP_PMANIFEST_ULD_AWB EPUA
                  JOIN AWB AWB ON AWB.AWB_NO = EPUA.AWB_NO AND AWB.AWB_DATE = EPUA.AWB_DATE
                  JOIN EXP_PMANIFEST_ULD INV ON INV.ULD_BT_NO = EPUA.ULD_BT_NO AND INV.FLT_KEY =fltopr.FLT_KEY AND INV.FLT_DATE =fltopr.SCH_DATE AND ((inv.hdlg_mode IS NOT NULL AND inv.hdlg_mode != 'NBK') OR inv.hdlg_mode IS NULL)
                  WHERE AWB.CATALOG ='TM'
                  AND EPUA.FLT_KEY =fltopr.FLT_KEY
                  AND EPUA.FLT_DATE =fltopr.SCH_DATE
                  AND EXISTS
                    (SELECT NULL
                    FROM MAST_ULD_ALLOT,
                      MAST_ULD_ALLOT_GROUP,
                      ULD_GROUP_TYPE
                    WHERE MAST_ULD_ALLOT.ULD_ALLOT     = MAST_ULD_ALLOT_GROUP.ULD_ALLOT
                    AND MAST_ULD_ALLOT_GROUP.ULD_GROUP = ULD_GROUP_TYPE.ULD_GROUP
                    AND ULD_GROUP_TYPE.ULD_TYPE        = SUBSTR(EPUA.uld_bt_no,0,3)
                    AND MAST_ULD_ALLOT.PLT_CNT         = 'Pallet'
                    )
                       AND NOT EXISTS (SELECT NULL FROM MAST_ULD_TYPE ULDTYPE
              WHERE ULDTYPE.CODE             = SUBSTR(EPUA.uld_bt_no, 1, 3)
          AND (ULDTYPE.H_CONT_IND     = 'Y'
          OR ULDTYPE.BT_IND           = 'Y'
          OR ULDTYPE.DUMMY_H_CONT_IND = 'Y'))
                    GROUP BY EPUA.ULD_BT_NO,EPUA.FLT_KEY,EPUA.FLT_DATE
                  )) AS palletBulk,
                
                (SELECT COUNT(*)
                FROM
                  (SELECT COUNT(EPUA.uld_bt_no) AS totalTonnageCnr
                  FROM EXP_PMANIFEST_ULD_AWB EPUA
                  JOIN AWB AWB ON AWB.AWB_NO = EPUA.AWB_NO AND AWB.AWB_DATE = EPUA.AWB_DATE
                  JOIN EXP_PMANIFEST_ULD INV ON INV.ULD_BT_NO = EPUA.ULD_BT_NO AND INV.FLT_KEY =fltopr.FLT_KEY AND INV.FLT_DATE =fltopr.SCH_DATE AND (inv.hdlg_mode IS NOT NULL AND inv.hdlg_mode = 'NBK')
                  WHERE AWB.CATALOG ='TM'
                  AND EPUA.FLT_KEY =fltopr.FLT_KEY
                  AND EPUA.FLT_DATE =fltopr.SCH_DATE
                  AND EXISTS
                    (SELECT NULL
                    FROM MAST_ULD_ALLOT,
                      MAST_ULD_ALLOT_GROUP,
                      ULD_GROUP_TYPE
                    WHERE MAST_ULD_ALLOT.ULD_ALLOT     = MAST_ULD_ALLOT_GROUP.ULD_ALLOT
                    AND MAST_ULD_ALLOT_GROUP.ULD_GROUP = ULD_GROUP_TYPE.ULD_GROUP
                    AND ULD_GROUP_TYPE.ULD_TYPE        = SUBSTR(EPUA.uld_bt_no,0,3)
                    AND MAST_ULD_ALLOT.PLT_CNT = 'Container'
                    ) 
                     AND NOT EXISTS (SELECT NULL FROM MAST_ULD_TYPE ULDTYPE
              WHERE ULDTYPE.CODE             = SUBSTR(EPUA.uld_bt_no, 1, 3)
          AND (ULDTYPE.H_CONT_IND     = 'Y'
          OR ULDTYPE.BT_IND           = 'Y'
          OR ULDTYPE.DUMMY_H_CONT_IND = 'Y'))
                  GROUP BY EPUA.ULD_BT_NO,EPUA.FLT_KEY,EPUA.FLT_DATE
                  )
                ) AS containerPrepack,
                
                (SELECT COUNT(*)
                FROM
                  (SELECT COUNT(EPUA.uld_bt_no) AS totalTonnageCnr
                  FROM EXP_PMANIFEST_ULD_AWB EPUA
                  JOIN AWB AWB ON AWB.AWB_NO = EPUA.AWB_NO AND AWB.AWB_DATE = EPUA.AWB_DATE
                  JOIN EXP_PMANIFEST_ULD INV ON INV.ULD_BT_NO = EPUA.ULD_BT_NO AND INV.FLT_KEY =fltopr.FLT_KEY AND INV.FLT_DATE =fltopr.SCH_DATE AND ((inv.hdlg_mode IS NOT NULL AND inv.hdlg_mode != 'NBK') OR inv.hdlg_mode IS NULL)
                  WHERE AWB.CATALOG ='TM'
                  AND EPUA.FLT_KEY =fltopr.FLT_KEY
                  AND EPUA.FLT_DATE =fltopr.SCH_DATE
                  AND EXISTS
                    (SELECT NULL
                    FROM MAST_ULD_ALLOT,
                      MAST_ULD_ALLOT_GROUP,
                      ULD_GROUP_TYPE
                    WHERE MAST_ULD_ALLOT.ULD_ALLOT = MAST_ULD_ALLOT_GROUP.ULD_ALLOT
                    AND MAST_ULD_ALLOT_GROUP.ULD_GROUP = ULD_GROUP_TYPE.ULD_GROUP
                    AND ULD_GROUP_TYPE.ULD_TYPE = SUBSTR(EPUA.uld_bt_no,0,3)
                    AND MAST_ULD_ALLOT.PLT_CNT = 'Container'
                    )
                   AND NOT EXISTS (SELECT NULL FROM MAST_ULD_TYPE ULDTYPE
              WHERE ULDTYPE.CODE             = SUBSTR(EPUA.uld_bt_no, 1, 3)
          AND (ULDTYPE.H_CONT_IND     = 'Y'
          OR ULDTYPE.BT_IND           = 'Y'
          OR ULDTYPE.DUMMY_H_CONT_IND = 'Y'))
                  GROUP BY EPUA.ULD_BT_NO,EPUA.FLT_KEY,EPUA.FLT_DATE
                  )
                ) AS containerBulk,
                
                (SELECT COUNT(EPUA.uld_bt_no) AS totalTonnageCnr
                  FROM EXP_PMANIFEST_ULD_AWB EPUA
                  JOIN AWB AWB ON AWB.AWB_NO = EPUA.AWB_NO AND AWB.AWB_DATE = EPUA.AWB_DATE
                  JOIN EXP_PMANIFEST_ULD Q ON Q.FLT_KEY = EPUA.FLT_KEY AND Q.FLT_DATE = EPUA.FLT_DATE AND Q.ULD_BT_NO = EPUA.ULD_BT_NO
                  WHERE AWB.CATALOG ='TM'
                  AND EPUA.FLT_KEY =fltopr.FLT_KEY
                  AND EPUA.FLT_DATE =fltopr.SCH_DATE
                      AND ((q.bb_ind = 'Y' or q.new_checkin_uld='Y' 
                      OR (select decode(H_CONT_IND,'Y','Y',DECODE(BT_IND,'Y','Y','N')) from mast_uld_type where code = substr(q.uld_bt_no, 1, 3)) = 'Y') 
                      OR q.ULD_BT_NO = (select RULE_VALUE from cmsrules where RULE_CODE='Dummy_H_Container'))
                      GROUP BY EPUA.ULD_BT_NO,EPUA.FLT_KEY,EPUA.FLT_DATE
                  ) AS houseContainer,
                (SELECT COUNT(*)
                 FROM
                  (SELECT COUNT(EPUA.AWB_NO) AS totalTonnageCnr
                  FROM EXP_PMANIFEST_ULD_AWB EPUA
                  JOIN AWB AWB
                  ON AWB.AWB_NO = EPUA.AWB_NO
                  AND AWB.AWB_DATE = EPUA.AWB_DATE
                  WHERE AWB.CATALOG ='TM'
                  AND EPUA.FLT_KEY =fltopr.flt_key
                  AND EPUA.FLT_DATE =fltopr.sch_date
                  GROUP BY EPUA.ULD_BT_NO,
                    EPUA.FLT_KEY,
                    EPUA.FLT_DATE
                  )
                ) AS totalCnr,
                (SELECT NVL(SUM(totalTonnagePcs),0)
                FROM
                  (SELECT SUM(EPUA.ASSIGNED_PCS) AS totalTonnagePcs
                  FROM EXP_PMANIFEST_ULD_AWB EPUA
                  JOIN AWB AWB
                  ON AWB.AWB_NO        = EPUA.AWB_NO
                  AND AWB.AWB_DATE     = EPUA.AWB_DATE
                  WHERE AWB.CATALOG      ='TM'
                  AND EPUA.FLT_KEY   =fltopr.FLT_KEY
                  AND EPUA.FLT_DATE  =fltopr.SCH_DATE
                  )
                ) AS totalPcs,
                (SELECT NVL(SUM(totalTonnageWt),0.0)
                FROM
                  (SELECT SUM(EPUA.ASSIGNED_WT) AS totalTonnageWt
                  FROM EXP_PMANIFEST_ULD_AWB EPUA
                  JOIN AWB AWB
                  ON AWB.AWB_NO = EPUA.AWB_NO
                  AND AWB.AWB_DATE = EPUA.AWB_DATE
                  WHERE AWB.CATALOG ='TM'
                  AND EPUA.FLT_KEY =fltopr.FLT_KEY
                  AND EPUA.FLT_DATE =fltopr.SCH_DATE
                  )
                ) AS totalWeight,
                
                (SELECT to_char(MAX(EPUAH.LM_DATE), 'HH24:MI') FROM EXP_PMANIFEST_ULD EPU JOIN EXP_PMANIFEST_ULD_AWB EPUA 
                 ON EPUA.FLT_KEY=EPU.FLT_KEY AND EPUA.FLT_DATE =EPU.FLT_DATE
                 JOIN EXP_PMANIFEST_ULD_AWB_HAWB EPUAH ON EPUA.TR_NO=EPUAH.TR_NO
                  AND EPUA.FLT_KEY=fltopr.FLT_KEY AND EPUA.FLT_DATE =fltopr.SCH_DATE AND EPU.FLT_TYPE='E'
                ) AS lastBuTime,
                (CASE
                  WHEN fltopr.ACT_DATE IS NULL
                  THEN NULL
                  ELSE ROUND((((SELECT MAX(EPUAH.LM_DATE) FROM EXP_PMANIFEST_ULD EPU JOIN EXP_PMANIFEST_ULD_AWB EPUA 
                 ON EPUA.FLT_KEY=EPU.FLT_KEY AND EPUA.FLT_DATE =EPU.FLT_DATE
                           JOIN EXP_PMANIFEST_ULD_AWB_HAWB EPUAH ON EPUA.TR_NO=EPUAH.TR_NO AND
                           EPUA.FLT_KEY=fltopr.FLT_KEY AND EPUA.FLT_DATE =fltopr.SCH_DATE )-TO_DATE((TO_CHAR(fltopr.ACT_DATE,'DDMONYY')||' '||trim(TO_CHAR(ACT_TIME,'0000'))),'DDMONYY HH24MI'))*24))
                    END) AS lastBuTimeAtd,
                   (CASE WHEN pkg_common.get_flt_ata(fltopr.FLT_KEY, fltopr.SCH_DATE,'D') IS NULL THEN 'NA'  
                      ELSE CASE WHEN ROUND((((SELECT MAX(EPUAH.LM_DATE) FROM EXP_PMANIFEST_ULD EPU JOIN EXP_PMANIFEST_ULD_AWB EPUA 
                 ON EPUA.FLT_KEY=EPU.FLT_KEY AND EPUA.FLT_DATE =EPU.FLT_DATE
                           JOIN EXP_PMANIFEST_ULD_AWB_HAWB EPUAH ON EPUA.TR_NO=EPUAH.TR_NO AND
                           EPUA.FLT_KEY=fltopr.FLT_KEY AND EPUA.FLT_DATE =fltopr.SCH_DATE )-TO_DATE((TO_CHAR(fltopr.ACT_DATE,'DDMONYY')||' '||trim(TO_CHAR(ACT_TIME,'0000'))),'DDMONYY HH24MI'))*24)) &lt; #slaCriteriaPAXFlt#
                      THEN 'Y'
                      ELSE 'N' END
                END) meetSla,
                '' AS remarks
              FROM FLT_OPR fltopr
              JOIN FLT_OPR_EVENTS fltevents
              ON fltopr.FLT_KEY = fltevents.FLT_KEY
              AND fltopr.SCH_DATE = fltevents.SCH_DATE
              AND fltopr.FLT_TYPE = fltevents.FLT_TYPE
              AND fltopr.TR_NO = fltevents.TR_NO
              WHERE fltopr.SCH_DATE IS NOT NULL
              AND fltopr.SCH_TIME IS NOT NULL
              
              AND fltevents.FLT_ClS_YN = 'Y' AND fltopr.FLT_TYPE = 'D'
              
              AND fltopr.SCH_DATE between to_date(#flightSchDateFrom#,'DDMONYY') and to_date(#flightSchDateTo#,'DDMONYY')
              
              <isNotEmpty property="carrierCode">
				AND fltopr.CARR_CODE = #carrierCode#
			  </isNotEmpty>
				
			  <isNotEmpty property="carrierGroup">
				AND (fltopr.CARR_CODE = #carrierGroup# or fltopr.CARR_CODE in (SELECT CARR_CODE FROM MAST_CARR_GRP 
		             WHERE GRP_CARR_CODE  = #carrierGroup#))
			 </isNotEmpty>
              
              
	</select>

<select id="sqlQueryOutbouldNotClosedFlightSLAReptImp" parameterClass="cargo.cms.export.report.bo.FlightSLAReportBO"
	     resultClass="cargo.cms.export.report.bo.FlightSLAReportBO">
	     
	      SELECT fltopr.FLT_KEY AS flightNo,
                TO_CHAR(fltopr.SCH_DATE,'DD-MON')  							AS schDate,
                fltopr.CGO_ACFT_TYPE                                        AS paxOrFrtr,
                TO_CHAR(fltopr.SCH_TIME,'0000') schTime,                pkg_common.get_flt_ata(fltopr.FLT_KEY, fltopr.SCH_DATE,'D') AS atd,
                TO_CHAR(fltopr.ACT_DATE,'DDMONYY') AS actualDate,
      	  		CASE WHEN fltopr.ACT_TIME IS NOT NULL THEN SUBSTR(lpad(fltopr.ACT_TIME,4,0),0,2)||':'||SUBSTR(lpad(fltopr.ACT_TIME,4,0),3) END as actualTime,
                fltopr.DEST AS portOfDest,
                NVL(PKG_COMMON.GET_FLT_ETA(fltopr.FLT_KEY,fltopr.SCH_DATE, 'D', 'DD'),
                 PKG_COMMON.GET_FLT_STA(fltopr.FLT_KEY,fltopr.SCH_DATE, 'D', 'DD')) AS stdOrEtd,
                (SELECT COUNT(*)
                FROM
                  (SELECT COUNT(EPUA.uld_bt_no) AS totalTonnageCnr
                  FROM EXP_PMANIFEST_ULD_AWB EPUA 
				JOIN AWB AWB ON AWB.AWB_NO = EPUA.AWB_NO AND AWB.AWB_DATE = EPUA.AWB_DATE
     
                  JOIN EXP_PMANIFEST_ULD INV ON INV.ULD_BT_NO = EPUA.ULD_BT_NO AND INV.FLT_KEY =fltopr.FLT_KEY AND INV.FLT_DATE =fltopr.SCH_DATE AND INV.hdlg_mode IS NOT NULL AND inv.hdlg_mode = 'NBK'
                  WHERE AWB.CATALOG ='TM'
                  AND EPUA.FLT_KEY =fltopr.FLT_KEY
                  AND EPUA.FLT_DATE =fltopr.SCH_DATE
                  AND EXISTS
                    (SELECT NULL
                    FROM MAST_ULD_ALLOT,
                      MAST_ULD_ALLOT_GROUP,
                      ULD_GROUP_TYPE
                    WHERE MAST_ULD_ALLOT.ULD_ALLOT     = MAST_ULD_ALLOT_GROUP.ULD_ALLOT
                    AND MAST_ULD_ALLOT_GROUP.ULD_GROUP = ULD_GROUP_TYPE.ULD_GROUP
                    AND ULD_GROUP_TYPE.ULD_TYPE        = SUBSTR(EPUA.uld_bt_no,0,3)
                    AND MAST_ULD_ALLOT.PLT_CNT         = 'Pallet'
                    )
                AND NOT EXISTS (SELECT NULL FROM MAST_ULD_TYPE ULDTYPE
              WHERE ULDTYPE.CODE             = SUBSTR(EPUA.uld_bt_no, 1, 3)
          AND (ULDTYPE.H_CONT_IND     = 'Y'
          OR ULDTYPE.BT_IND           = 'Y'
          OR ULDTYPE.DUMMY_H_CONT_IND = 'Y'))
                    GROUP BY EPUA.ULD_BT_NO,EPUA.FLT_KEY,EPUA.FLT_DATE
                  )
                ) AS palletPrepack,
                
                (SELECT COUNT(*)
                FROM
                  (SELECT COUNT(EPUA.uld_bt_no) AS totalTonnageCnr
                  FROM EXP_PMANIFEST_ULD_AWB EPUA
                  JOIN AWB AWB ON AWB.AWB_NO = EPUA.AWB_NO AND AWB.AWB_DATE = EPUA.AWB_DATE
                  JOIN EXP_PMANIFEST_ULD INV ON INV.ULD_BT_NO = EPUA.ULD_BT_NO AND INV.FLT_KEY =fltopr.FLT_KEY AND INV.FLT_DATE =fltopr.SCH_DATE AND ((inv.hdlg_mode IS NOT NULL AND inv.hdlg_mode != 'NBK') OR inv.hdlg_mode IS NULL)
                  WHERE AWB.CATALOG ='TM'
                  AND EPUA.FLT_KEY =fltopr.FLT_KEY
                  AND EPUA.FLT_DATE =fltopr.SCH_DATE
                  AND EXISTS
                    (SELECT NULL
                    FROM MAST_ULD_ALLOT,
                      MAST_ULD_ALLOT_GROUP,
                      ULD_GROUP_TYPE
                    WHERE MAST_ULD_ALLOT.ULD_ALLOT     = MAST_ULD_ALLOT_GROUP.ULD_ALLOT
                    AND MAST_ULD_ALLOT_GROUP.ULD_GROUP = ULD_GROUP_TYPE.ULD_GROUP
                    AND ULD_GROUP_TYPE.ULD_TYPE        = SUBSTR(EPUA.uld_bt_no,0,3)
                    AND MAST_ULD_ALLOT.PLT_CNT         = 'Pallet'
                    )
                       AND NOT EXISTS (SELECT NULL FROM MAST_ULD_TYPE ULDTYPE
              WHERE ULDTYPE.CODE             = SUBSTR(EPUA.uld_bt_no, 1, 3)
          AND (ULDTYPE.H_CONT_IND     = 'Y'
          OR ULDTYPE.BT_IND           = 'Y'
          OR ULDTYPE.DUMMY_H_CONT_IND = 'Y'))
                    GROUP BY EPUA.ULD_BT_NO,EPUA.FLT_KEY,EPUA.FLT_DATE
                  )) AS palletBulk,
                
                (SELECT COUNT(*)
                FROM
                  (SELECT COUNT(EPUA.uld_bt_no) AS totalTonnageCnr
                  FROM EXP_PMANIFEST_ULD_AWB EPUA
                  JOIN AWB AWB ON AWB.AWB_NO = EPUA.AWB_NO AND AWB.AWB_DATE = EPUA.AWB_DATE
                  JOIN EXP_PMANIFEST_ULD INV ON INV.ULD_BT_NO = EPUA.ULD_BT_NO AND INV.FLT_KEY =fltopr.FLT_KEY AND INV.FLT_DATE =fltopr.SCH_DATE AND (inv.hdlg_mode IS NOT NULL AND inv.hdlg_mode = 'NBK')
                  WHERE AWB.CATALOG ='TM'
                  AND EPUA.FLT_KEY =fltopr.FLT_KEY
                  AND EPUA.FLT_DATE =fltopr.SCH_DATE
                  AND EXISTS
                    (SELECT NULL
                    FROM MAST_ULD_ALLOT,
                      MAST_ULD_ALLOT_GROUP,
                      ULD_GROUP_TYPE
                    WHERE MAST_ULD_ALLOT.ULD_ALLOT     = MAST_ULD_ALLOT_GROUP.ULD_ALLOT
                    AND MAST_ULD_ALLOT_GROUP.ULD_GROUP = ULD_GROUP_TYPE.ULD_GROUP
                    AND ULD_GROUP_TYPE.ULD_TYPE        = SUBSTR(EPUA.uld_bt_no,0,3)
                    AND MAST_ULD_ALLOT.PLT_CNT = 'Container'
                    ) 
                     AND NOT EXISTS (SELECT NULL FROM MAST_ULD_TYPE ULDTYPE
              WHERE ULDTYPE.CODE             = SUBSTR(EPUA.uld_bt_no, 1, 3)
          AND (ULDTYPE.H_CONT_IND     = 'Y'
          OR ULDTYPE.BT_IND           = 'Y'
          OR ULDTYPE.DUMMY_H_CONT_IND = 'Y'))
                  GROUP BY EPUA.ULD_BT_NO,EPUA.FLT_KEY,EPUA.FLT_DATE
                  )
                ) AS containerPrepack,
                
                (SELECT COUNT(*)
                FROM
                  (SELECT COUNT(EPUA.uld_bt_no) AS totalTonnageCnr
                  FROM EXP_PMANIFEST_ULD_AWB EPUA
                  JOIN AWB AWB ON AWB.AWB_NO = EPUA.AWB_NO AND AWB.AWB_DATE = EPUA.AWB_DATE
                  JOIN EXP_PMANIFEST_ULD INV ON INV.ULD_BT_NO = EPUA.ULD_BT_NO AND INV.FLT_KEY =fltopr.FLT_KEY AND INV.FLT_DATE =fltopr.SCH_DATE AND ((inv.hdlg_mode IS NOT NULL AND inv.hdlg_mode != 'NBK') OR inv.hdlg_mode IS NULL)
                  WHERE AWB.CATALOG ='TM'
                  AND EPUA.FLT_KEY =fltopr.FLT_KEY
                  AND EPUA.FLT_DATE =fltopr.SCH_DATE
                  AND EXISTS
                    (SELECT NULL
                    FROM MAST_ULD_ALLOT,
                      MAST_ULD_ALLOT_GROUP,
                      ULD_GROUP_TYPE
                    WHERE MAST_ULD_ALLOT.ULD_ALLOT = MAST_ULD_ALLOT_GROUP.ULD_ALLOT
                    AND MAST_ULD_ALLOT_GROUP.ULD_GROUP = ULD_GROUP_TYPE.ULD_GROUP
                    AND ULD_GROUP_TYPE.ULD_TYPE = SUBSTR(EPUA.uld_bt_no,0,3)
                    AND MAST_ULD_ALLOT.PLT_CNT = 'Container'
                    )
                   AND NOT EXISTS (SELECT NULL FROM MAST_ULD_TYPE ULDTYPE
              WHERE ULDTYPE.CODE             = SUBSTR(EPUA.uld_bt_no, 1, 3)
          AND (ULDTYPE.H_CONT_IND     = 'Y'
          OR ULDTYPE.BT_IND           = 'Y'
          OR ULDTYPE.DUMMY_H_CONT_IND = 'Y'))
                  GROUP BY EPUA.ULD_BT_NO,EPUA.FLT_KEY,EPUA.FLT_DATE
                  )
                ) AS containerBulk,
                
                (SELECT COUNT(EPUA.uld_bt_no) AS totalTonnageCnr
                  FROM EXP_PMANIFEST_ULD_AWB EPUA
                  JOIN AWB AWB ON AWB.AWB_NO = EPUA.AWB_NO AND AWB.AWB_DATE = EPUA.AWB_DATE
                  JOIN EXP_PMANIFEST_ULD Q ON Q.FLT_KEY = EPUA.FLT_KEY AND Q.FLT_DATE = EPUA.FLT_DATE AND Q.ULD_BT_NO = EPUA.ULD_BT_NO
                  WHERE AWB.CATALOG ='TM'
                  AND EPUA.FLT_KEY =fltopr.FLT_KEY
                  AND EPUA.FLT_DATE =fltopr.SCH_DATE
                      AND ((q.bb_ind = 'Y' or q.new_checkin_uld='Y' 
                      OR (select decode(H_CONT_IND,'Y','Y',DECODE(BT_IND,'Y','Y','N')) from mast_uld_type where code = substr(q.uld_bt_no, 1, 3)) = 'Y') 
                      OR q.ULD_BT_NO = (select RULE_VALUE from cmsrules where RULE_CODE='Dummy_H_Container'))
                      GROUP BY EPUA.ULD_BT_NO,EPUA.FLT_KEY,EPUA.FLT_DATE
                  ) AS houseContainer,
                (SELECT COUNT(*)
                 FROM
                  (SELECT COUNT(EPUA.AWB_NO) AS totalTonnageCnr
                  FROM EXP_PMANIFEST_ULD_AWB EPUA
                  JOIN AWB AWB
                  ON AWB.AWB_NO = EPUA.AWB_NO
                  AND AWB.AWB_DATE = EPUA.AWB_DATE
                  WHERE AWB.CATALOG ='TM'
                  AND EPUA.FLT_KEY =fltopr.flt_key
                  AND EPUA.FLT_DATE =fltopr.sch_date
                  GROUP BY EPUA.ULD_BT_NO,
                    EPUA.FLT_KEY,
                    EPUA.FLT_DATE
                  )
                ) AS totalCnr,
                (SELECT NVL(SUM(totalTonnagePcs),0)
                FROM
                  (SELECT SUM(EPUA.ASSIGNED_PCS) AS totalTonnagePcs
                  FROM EXP_PMANIFEST_ULD_AWB EPUA
                  JOIN AWB AWB
                  ON AWB.AWB_NO        = EPUA.AWB_NO
                  AND AWB.AWB_DATE     = EPUA.AWB_DATE
                  WHERE AWB.CATALOG      ='TM'
                  AND EPUA.FLT_KEY   =fltopr.FLT_KEY
                  AND EPUA.FLT_DATE  =fltopr.SCH_DATE
                  )
                ) AS totalPcs,
                (SELECT NVL(SUM(totalTonnageWt),0.0)
                FROM
                  (SELECT SUM(EPUA.ASSIGNED_WT) AS totalTonnageWt
                  FROM EXP_PMANIFEST_ULD_AWB EPUA
                  JOIN AWB AWB
                  ON AWB.AWB_NO = EPUA.AWB_NO
                  AND AWB.AWB_DATE = EPUA.AWB_DATE
                  WHERE AWB.CATALOG ='TM'
                  AND EPUA.FLT_KEY =fltopr.FLT_KEY
                  AND EPUA.FLT_DATE =fltopr.SCH_DATE
                  )
                ) AS totalWeight,
                
                (SELECT to_char(MAX(EPUAH.LM_DATE), 'HH24:MI') FROM EXP_PMANIFEST_ULD EPU JOIN EXP_PMANIFEST_ULD_AWB EPUA 
                 ON EPUA.FLT_KEY=EPU.FLT_KEY AND EPUA.FLT_DATE =EPU.FLT_DATE
                 JOIN EXP_PMANIFEST_ULD_AWB_HAWB EPUAH ON EPUA.TR_NO=EPUAH.TR_NO
                  AND EPUA.FLT_KEY=fltopr.FLT_KEY AND EPUA.FLT_DATE =fltopr.SCH_DATE AND EPU.FLT_TYPE='E'
                ) AS lastBuTime,
                (CASE
                  WHEN fltopr.ACT_DATE IS NULL
                  THEN NULL
                  ELSE ROUND((((SELECT MAX(EPUAH.LM_DATE) FROM EXP_PMANIFEST_ULD EPU JOIN EXP_PMANIFEST_ULD_AWB EPUA 
                 ON EPUA.FLT_KEY=EPU.FLT_KEY AND EPUA.FLT_DATE =EPU.FLT_DATE
                           JOIN EXP_PMANIFEST_ULD_AWB_HAWB EPUAH ON EPUA.TR_NO=EPUAH.TR_NO AND
                           EPUA.FLT_KEY=fltopr.FLT_KEY AND EPUA.FLT_DATE =fltopr.SCH_DATE )-TO_DATE((TO_CHAR(fltopr.ACT_DATE,'DDMONYY')||' '||trim(TO_CHAR(ACT_TIME,'0000'))),'DDMONYY HH24MI'))*24))
                    END) AS lastBuTimeAtd,
                   (CASE WHEN pkg_common.get_flt_ata(fltopr.FLT_KEY, fltopr.SCH_DATE,'D') IS NULL THEN 'NA'  
                      ELSE CASE WHEN ROUND((((SELECT MAX(EPUAH.LM_DATE) FROM EXP_PMANIFEST_ULD EPU JOIN EXP_PMANIFEST_ULD_AWB EPUA 
                 ON EPUA.FLT_KEY=EPU.FLT_KEY AND EPUA.FLT_DATE =EPU.FLT_DATE
                           JOIN EXP_PMANIFEST_ULD_AWB_HAWB EPUAH ON EPUA.TR_NO=EPUAH.TR_NO AND
                           EPUA.FLT_KEY=fltopr.FLT_KEY AND EPUA.FLT_DATE =fltopr.SCH_DATE )-TO_DATE((TO_CHAR(fltopr.ACT_DATE,'DDMONYY')||' '||trim(TO_CHAR(ACT_TIME,'0000'))),'DDMONYY HH24MI'))*24)) &lt; #slaCriteriaPAXFlt#
                      THEN 'Y'
                      ELSE 'N' END
                END) meetSla,
                '' AS remarks
              FROM FLT_OPR fltopr
              JOIN FLT_OPR_EVENTS fltevents
              ON fltopr.FLT_KEY = fltevents.FLT_KEY
              AND fltopr.SCH_DATE = fltevents.SCH_DATE
              AND fltopr.FLT_TYPE = fltevents.FLT_TYPE
              AND fltopr.TR_NO = fltevents.TR_NO
              WHERE fltopr.SCH_DATE IS NOT NULL
              AND fltopr.SCH_TIME IS NOT NULL
              AND fltevents.FLT_ClS_YN = 'N' AND fltopr.FLT_TYPE = 'D'
              AND fltopr.SCH_DATE between to_date(#flightSchDateFrom#,'DDMONYY') and to_date(#flightSchDateTo#,'DDMONYY')
              
              <isNotEmpty property="carrierCode">
				AND fltopr.CARR_CODE = #carrierCode#
			  </isNotEmpty>
				
			  <isNotEmpty property="carrierGroup">
				AND (fltopr.CARR_CODE = #carrierGroup# or fltopr.CARR_CODE in (SELECT CARR_CODE FROM MAST_CARR_GRP 
		                        WHERE GRP_CARR_CODE  = #carrierGroup#))
			 </isNotEmpty>
	     
	   </select>
	   
	<select id="fetchTsaforRCL" parameterClass="java.lang.String" resultClass="cargo.cms.export.report.bo.IssueRCLBulkRept_010BO">
		SELECT NVL(A.carr_rf,'NA') as carrierRF,NVL(A.tsa_rcl_ind,'NA') as tsaRclInd FROM EXP_RCL_HD A WHERE (A.RCL_NO=#PARAM# OR A.VCL_NO=#PARAM#)
	</select>
	<select id="sqlGetListOfUldForPrintRepHoForm" parameterClass="cargo.cms.export.report.bo.ExpRampHandoverRepBO"  resultClass="cargo.cms.export.report.bo.ExpRampHandoverRepBO">
				  select
                  t3.FLT_KEY as fltNo,
                  to_char(t3.FLT_DATE,'ddMONYY') as fltDate ,
                  t3.ULD_bt_no as uldNo,
                  t1.chkout_time as chkOutTime,
                  decode(EXPHOVER.PRINT_HANDOVER_DATE,null,'N','Y') as handOverIndDate,
                  DECODE(EXPHOVER.print_handover_date,'',TO_CHAR(SYSDATE,'DDMONYYYY HH24:MI'),TO_CHAR(EXPHOVER.print_handover_date,'DDMONYYYY HH24:MI')) AS printDateAndTime,
                  decode(t3.READY_DISP,null,'N',t3.READY_DISP) as readyForDispatch,
                  to_char(t1.chkout_date,'ddMONYY hh:mm') as chkOutDate,
                  t2.loc_code as locn,
                  t2.EIC_FLG as eicFlg,
                  t2.EMPTY_FLG as emptyFlg,
                  t1.chkout_locn as chkOutLoc,                  
                 (SELECT STRAGG(STRINGDELIM(CODE,',')) FROM V_EXP_ULD_SHC WHERE ULD_KEY = T1.ULD_KEY AND ROWNUM &lt; 10)  spl,                   
                  t3.bldup_complete as bldupComplete,
                  t2.handling_mode ppkType,
                  t2.RESV_FLG as resvFlg,
                  t2.contr_code as contrCode ,
                   exphover.cool_dolly_id AS dollyNo                
                  from exp_pmanifest_uld t3 
                  join uld_inventory t2
                  on  t3.flt_key=t2.flt_key
                  and t3.flt_date=t2.flt_date
                  and t3.uld_bt_no = t2.uld_key  
                  join exp_chkout_dtl t1
                  on  t1.uld_key = t3.uld_bt_no
                  and t1.flt_key=t3.flt_key
                  and t1.flt_date=t3.flt_date
                  LEFT JOIN EXP_ULD_HOVER_DTL EXPHOVER ON EXPHOVER.HO_FORM_NO = t1.HO_FORM_NO AND EXPHOVER.ULD_KEY = t1.ULD_KEY
                  where   (t2.handling_mode is null or t2.handling_mode!='DT')
                  and t3.uld_bt_no not in (select uld_key from exp_flt_uld 
                                           where (Source='DLS-L' or Source='DLS-E') 
                                           and uld_key=t3.ULD_bt_no and flt_key=t3.flt_key and flt_date=t3.flt_date and FLT_TYPE='E')
                 and t3.flt_key= #fltNo#
			     and t3.flt_date=TO_DATE(#fltDate#,'DDMONYY')
			     AND t1.HO_FORM_NO = #strHoFormNo#
                 UNION
                  select
                  t3.FLT_KEY as fltNo,
                  to_char(t3.FLT_DATE,'ddMONYY') as fltDate ,
                  t3.ULD_bt_no as uldNo,
                  t1.chkout_time as chkOutTime,
                  decode(EXPHOVER.PRINT_HANDOVER_DATE,null,'N','Y') as handOverIndDate,
                  DECODE(EXPHOVER.print_handover_date,'',TO_CHAR(SYSDATE,'DDMONYYYY HH24:MI'),TO_CHAR(EXPHOVER.print_handover_date,'DDMONYYYY HH24:MI')) AS printDateAndTime,
                  'Y' as readyForDispatch,
                  to_char(t1.chkout_date,'ddMONYY hh:mm') as chkOutDate,
                  t2.loc_code as locn,
                  t2.EIC_FLG as eicFlg,
                  t2.EMPTY_FLG as emptyFlg,
                  t1.chkout_locn as chkOutLoc,                  
                 (SELECT STRAGG(STRINGDELIM(CODE,',')) FROM V_EXP_ULD_SHC WHERE ULD_KEY = T1.ULD_KEY AND ROWNUM &lt; 10)  spl,                   
                  'Y' as bldupComplete,
                  t2.handling_mode ppkType,
                  t2.RESV_FLG as resvFlg,
                  t2.contr_code as contrCode ,
                 exphover.cool_dolly_id AS dollyNo                
                  from exp_pman_tarmac_uld t3 
                  join uld_inventory t2
                  on  t3.flt_key=t2.flt_key
                  and t3.flt_date=t2.flt_date
                  and t3.uld_bt_no = t2.uld_key  
                  join exp_chkout_dtl t1
                  on  t1.uld_key = t3.uld_bt_no
                  and t1.flt_key=t3.flt_key
                  and t1.flt_date=t3.flt_date
                  LEFT JOIN EXP_ULD_HOVER_DTL EXPHOVER ON EXPHOVER.HO_FORM_NO = t1.HO_FORM_NO AND EXPHOVER.ULD_KEY = t1.ULD_KEY
                  where (t2.handling_mode is null or t2.handling_mode!='DT')
                  and t3.uld_bt_no not in (select uld_key from exp_flt_uld 
                                           where (Source='DLS-L' or Source='DLS-E') 
                                           and uld_key=t3.ULD_bt_no and flt_key=t3.flt_key and flt_date=t3.flt_date and FLT_TYPE='E')
                  and t3.uld_bt_no in (select uld_key 
                                          from uld_inventory
                                           where (transit_type='TT' or transit_type='IF') 
                                           and imp_flt_key in (select flt_key
                                                             from v_ddt_dtl
                                                             where uld_key=t3.uld_bt_no 
                                                             and shp_cntg_flt_key=t3.flt_key
                                                             and shp_cntg_flt_date=t3.flt_date)
                                           and imp_flt_date in (select flt_date
                                                             from v_ddt_dtl
                                                             where uld_key=t3.uld_bt_no
                                                             and shp_cntg_flt_key=t3.flt_key
                                                             and shp_cntg_flt_date=t3.flt_date)
                                           )
                 and t3.flt_key= #fltNo#
			     and t3.flt_date=TO_DATE(#fltDate#,'DDMONYY')	
			     AND t1.HO_FORM_NO = #strHoFormNo#
	</select>

      <select id="sqlgetetdstddetailsforflight" parameterClass="cargo.cms.export.report.bo.ExpRampHandoverRepBO" resultClass="cargo.cms.export.report.bo.ExpRampHandoverRepBO">		
		SELECT A.FLT_KEY                                           AS fltNo,
		  TO_CHAR(A.SCH_DATE,'ddMONYY')                            AS fltDate,
		  PKG_COMMON.get_flt_eta(A.FLT_KEY, A.SCH_DATE, 'D', 'DD') AS etd,
		  TO_CHAR(a.sch_date,'DDMONYY') || ' ' || SUBSTR(TRIM(TO_CHAR(NVL(A.SCH_TIME,0),'0000')),0,2) ||':' || SUBSTR(TRIM(TO_CHAR(NVL(A.SCH_TIME,0),'0000')),3,4) AS stdPrint,
		  decode(a.EST_DATE,null,null, TO_CHAR(a.EST_DATE,'DDMONYY') || ' ' || SUBSTR(TRIM(TO_CHAR(NVL(A.EST_TIME,0),'0000')),0,2) ||':' || SUBSTR(TRIM(TO_CHAR(NVL(A.EST_TIME,0),'0000')),3,4) ) AS etdPrint,		  
		  A.ACFT_PRK_BAY parkingBayPrint
		FROM FLT_OPR A		  
		WHERE A.FLT_KEY= #fltNo#
		AND A.SCH_DATE = TO_DATE(#fltDate#,'DDMONYY')
		AND A.FLT_TYPE = 'D'
	</select>
<select id="sqlQueryDgAndShcReptExppdf" parameterClass="cargo.cms.export.report.bo.DGandShcReptBO" resultClass="cargo.cms.export.report.bo.DGandShcReptBO">
select rownum serialNo,awbNo,awbDate,orig,dest,awbPcs,
decode(trunc(TRIM(to_char(awbWt,'999999999999999.99'))),0,0|| TRIM(to_char(awbWt,'999999999999999.99')), TRIM(to_char(awbWt,'999999999999999.99'))) awbWt,
manifestPcs,
decode(trunc(TRIM(to_char(manifestWt,'999999999999999.99'))),0,0|| TRIM(to_char(manifestWt,'999999999999999.99')), TRIM(to_char(manifestWt,'999999999999999.99'))) manifestWt,
commodity,shc,fltKey,TO_CHAR(fltDate,'DDMONYY') fltDate,ata,awbFlow,fltRoute,pmanPort,fltCgoType,partSpmnt,shpName,cnsgnName,agentName from(
select A.AWB_NO awbNo,TO_CHAR(A.AWB_DATE,'DDMONYY') AS awbDate, B.ORIG orig,B.DEST dest,B.PCS awbPcs,B.WT awbWt,A.PMAN_PCS manifestPcs,A.PMAN_WT manifestWt,B.CONTENT commodity,b.AWB_TYPE awbFlow,
decode(B.spl_code1, null, '', B.spl_code1 || decode(B.spl_code2, null, '', ','))
      || decode(B.spl_code2, null, '', B.spl_code2 || decode(B.spl_code3, null, '', ','))
      || decode(B.spl_code3, null, '', B.spl_code3 || decode(B.spl_code4, null, '', ','))
      || decode(B.spl_code4, null, '', B.spl_code4 || decode(B.spl_code5, null, '', ','))
      || decode(B.spl_code5, null, '', B.spl_code5 || decode(B.spl_code6, null, '', ','))
      || decode(B.spl_code6, null, '', B.spl_code6 || decode(B.spl_code7, null, '', ','))
      || decode(B.spl_code7, null, '', B.spl_code7 || decode(B.spl_code8, null, '', ','))
      || decode(B.spl_code8, null, '', B.spl_code8 || decode(B.spl_code9, null, '', ','))
      || decode(B.spl_code9, null, '', B.spl_code9) shc,
  a.flt_key fltKey,a.flt_date fltDate,
  CASE WHEN C.act_date IS NOT NULL AND C.act_TIME IS NOT NULL THEN
  SUBSTR(lpad(c.act_time,4,0),0,2)||':'||SUBSTR(lpad(c.act_time,4,0),3,2)||'/'||TO_CHAR(c.act_date,'DDMON')
  END ata,
  pkg_common.flt_route(a.flt_key,a.flt_date,'D') as fltRoute,
  a.unldg_pt as pmanPort,
  c.cgo_acft_type as fltCgoType,
  (SELECT COUNT(*) FROM awb awb,  EXP_PMANIFEST_AWB pmanawb WHERE pmanawb.AWB_NO = awb.AWB_NO AND pmanawb.AWB_DATE = awb.AWB_DATE AND awb.CAR_YN   ='Y' AND awb.pcs      > pmanawb.pman_pcs AND awb.AWB_NO   =b.awb_no AND awb.AWB_DATE =b.awb_date ) AS partSpmnt,
  car.SHPR_NAME as shpName,car.CSGNE_NAME as cnsgnName,car.AGENT_NAME as agentName
from exp_pmanifest_awb a,awb b,flt_opr c,exp_car car
where a.awb_no=b.awb_no 
and a.awb_date=b.awb_date
and a.flt_key=c.flt_key
and a.flt_date=c.sch_date
and car.awb_no(+) = b.awb_no and car.awb_date(+) = b.awb_date
AND C.FLT_TYPE='D'
<isEqual property="active" compareValue="Y">
	AND C.SCH_DATE BETWEEN TO_DATE(#fromDate#,'DDMONYY') AND TO_DATE(#toDate#,'DDMONYY')
</isEqual>
<isEqual property="active" compareValue="N">
	AND C.ACT_DATE BETWEEN TO_DATE(#actFromDate#,'DDMONYY') AND TO_DATE(#actToDate#,'DDMONYY')
</isEqual>
AND (B.spl_code1 IS NOT NULL
OR b.spl_code2 IS NOT NULL
OR b.spl_code3 IS NOT NULL
OR b.spl_code4 IS NOT NULL
OR b.spl_code5 IS NOT NULL
OR b.spl_code6 IS NOT NULL
OR b.spl_code7 IS NOT NULL
OR b.spl_code8 IS NOT NULL
OR b.spl_code9 IS NOT NULL
)
and (
#shc1# in (b.spl_code1,b.spl_code2,b.spl_code3,b.spl_code4,b.spl_code5,b.spl_code6,b.spl_code7,b.spl_code8,B.SPL_CODE9)
or #shc2# in (b.spl_code1,b.spl_code2,b.spl_code3,b.spl_code4,b.spl_code5,b.spl_code6,b.spl_code7,b.spl_code8,B.SPL_CODE9)
or #shc3# in (b.spl_code1,b.spl_code2,b.spl_code3,b.spl_code4,b.spl_code5,b.spl_code6,b.spl_code7,b.spl_code8,B.SPL_CODE9)
<isEmpty property="shc1">
<isEmpty property="shc2">
<isEmpty property="shc3">
or 1=1
 </isEmpty>  
</isEmpty>
</isEmpty>

)
<isNotEmpty property="groupCarrCode">
      AND   (C.CARR_CODE = #groupCarrCode# 
      OR C.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP 
      WHERE GRP_CARR_CODE     = #groupCarrCode#))                                          
</isNotEmpty>
<isNotEmpty property="carrCode">
      AND   C.CARR_CODE = #carrCode# 
</isNotEmpty>
<isNotEmpty property="arrDep">
  and c.flt_type=#arrDep#
</isNotEmpty>
<isNotEmpty property="origDest">
  and (#origDest# = b.orig or #origDest# = b.dest)
</isNotEmpty>
<isNotEmpty property="searchFltKey">
<isNotEmpty property="searchFltDate">
AND a.flt_key = #searchFltKey# and a.flt_date=#searchFltDate#
</isNotEmpty>
</isNotEmpty>


<isEqual compareValue="Y" property="dgYN">
AND (B.SPL_CODE1 IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
OR B.SPL_CODE2 IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
OR B.SPL_CODE3 IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
OR B.SPL_CODE4 IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
OR B.SPL_CODE5 IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
OR B.SPL_CODE6 IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
OR B.SPL_CODE7 IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
OR B.SPL_CODE8 IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
OR B.SPL_CODE9 IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG'))
</isEqual>
<isEqual compareValue="N" property="dgYN">
AND (NVL(B.SPL_CODE1,'*') NOT IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
AND NVL(B.SPL_CODE2,'*') NOT IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
AND NVL(B.SPL_CODE3,'*') NOT IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
AND NVL(B.SPL_CODE4,'*') NOT IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
AND NVL(B.SPL_CODE5,'*') NOT IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
AND NVL(B.SPL_CODE6,'*') NOT IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
AND NVL(B.SPL_CODE7,'*') NOT IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
AND NVL(B.SPL_CODE8,'*') NOT IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
AND NVL(B.SPL_CODE9,'*') NOT IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG'))
</isEqual>
)
union all
select rownum serialNo,awbNo,awbDate,orig,dest,awbPcs,
decode(trunc(TRIM(to_char(awbWt,'999999999999999.99'))),0,0|| TRIM(to_char(awbWt,'999999999999999.99')), TRIM(to_char(awbWt,'999999999999999.99'))) awbWt,
manifestPcs,
decode(trunc(TRIM(to_char(manifestWt,'999999999999999.99'))),0,0|| TRIM(to_char(manifestWt,'999999999999999.99')),TRIM(to_char(manifestWt,'999999999999999.99'))) manifestWt,
commodity,shc,fltKey,TO_CHAR(fltDate,'DDMONYY') fltDate,ata,awbFlow,fltRoute,pmanPort,fltCgoType,partSpmnt,shpName,cnsgnName,agentName from(
select A.AWB_NO awbNo,TO_CHAR(A.AWB_DATE,'DDMONYY') AS awbDate, B.ORIG orig,B.DEST dest,B.PCS awbPcs,B.WT awbWt,(A.ppk_pcs+a.bulk_pcs) manifestPcs,(A.ppk_wt+a.bulk_wt) manifestWt,B.CONTENT commodity,b.AWB_TYPE awbFlow,
decode(B.spl_code1, null, '', B.spl_code1 || decode(B.spl_code2, null, '', ','))
      || decode(B.spl_code2, null, '', B.spl_code2 || decode(B.spl_code3, null, '', ','))
      || decode(B.spl_code3, null, '', B.spl_code3 || decode(B.spl_code4, null, '', ','))
      || decode(B.spl_code4, null, '', B.spl_code4 || decode(B.spl_code5, null, '', ','))
      || decode(B.spl_code5, null, '', B.spl_code5 || decode(B.spl_code6, null, '', ','))
      || decode(B.spl_code6, null, '', B.spl_code6 || decode(B.spl_code7, null, '', ','))
      || decode(B.spl_code7, null, '', B.spl_code7 || decode(B.spl_code8, null, '', ','))
      || decode(B.spl_code8, null, '', B.spl_code8 || decode(B.spl_code9, null, '', ','))
      || decode(B.spl_code9, null, '', B.spl_code9) shc,
  a.flt_key fltKey,a.flt_date fltDate,
  CASE WHEN C.act_date IS NOT NULL AND C.act_TIME IS NOT NULL THEN
  SUBSTR(lpad(c.act_time,4,0),0,2)||':'||SUBSTR(lpad(c.act_time,4,0),3,2)||'/'||TO_CHAR(c.act_date,'DDMON')
  END ata,
   pkg_common.flt_route(a.flt_key,a.flt_date,'D') as fltRoute,
  a.unldg_pt as pmanPort,
  c.cgo_acft_type as fltCgoType,
  (SELECT COUNT(*) FROM awb awb,  exp_pman_tarmac_awb pmanawb WHERE pmanawb.AWB_NO = awb.AWB_NO AND pmanawb.AWB_DATE = awb.AWB_DATE AND awb.CAR_YN   ='Y' AND awb.pcs      > (pmanawb.ppk_wt+pmanawb.bulk_wt) AND awb.AWB_NO   =b.awb_no AND awb.AWB_DATE =b.awb_date ) AS partSpmnt,
  car.SHPR_NAME as shpName,car.CSGNE_NAME as cnsgnName,car.AGENT_NAME as agentName
from exp_pman_tarmac_awb a,awb b,flt_opr c,exp_car car
where a.awb_no=b.awb_no 
and a.awb_date=b.awb_date
and a.flt_key=c.flt_key
and a.flt_date=c.sch_date
and car.awb_no(+) = b.awb_no and car.awb_date(+) = b.awb_date
AND C.FLT_TYPE='D'
<isEmpty property="searchFltKey">
<isEmpty property="searchFltDate">
<isEqual property="active" compareValue="Y">
	AND C.SCH_DATE BETWEEN TO_DATE(#fromDate#,'DDMONYY') AND TO_DATE(#toDate#,'DDMONYY')
</isEqual>
<isEqual property="active" compareValue="N">
	AND C.ACT_DATE BETWEEN TO_DATE(#actFromDate#,'DDMONYY') AND TO_DATE(#actToDate#,'DDMONYY')
</isEqual>
</isEmpty></isEmpty>
AND (B.spl_code1 IS NOT NULL
OR b.spl_code2 IS NOT NULL
OR b.spl_code3 IS NOT NULL
OR b.spl_code4 IS NOT NULL
OR b.spl_code5 IS NOT NULL
OR b.spl_code6 IS NOT NULL
OR b.spl_code7 IS NOT NULL
OR b.spl_code8 IS NOT NULL
OR b.spl_code9 IS NOT NULL
)
and (
#shc1# in (b.spl_code1,b.spl_code2,b.spl_code3,b.spl_code4,b.spl_code5,b.spl_code6,b.spl_code7,b.spl_code8,B.SPL_CODE9)
or #shc2# in (b.spl_code1,b.spl_code2,b.spl_code3,b.spl_code4,b.spl_code5,b.spl_code6,b.spl_code7,b.spl_code8,B.SPL_CODE9)
or #shc3# in (b.spl_code1,b.spl_code2,b.spl_code3,b.spl_code4,b.spl_code5,b.spl_code6,b.spl_code7,b.spl_code8,B.SPL_CODE9)
<isEmpty property="shc1">
<isEmpty property="shc2">
<isEmpty property="shc3">
or 1=1
 </isEmpty>  
</isEmpty>
</isEmpty>

)
<isEmpty property="searchFltKey">
<isEmpty property="searchFltDate">
<isNotEmpty property="groupCarrCode">
      AND   (C.CARR_CODE = #groupCarrCode# 
      OR C.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP 
      WHERE GRP_CARR_CODE     = #groupCarrCode#))                                          
</isNotEmpty>
<isNotEmpty property="carrCode">
      AND   C.CARR_CODE = #carrCode# 
</isNotEmpty>
</isEmpty></isEmpty>
<isNotEmpty property="arrDep">
  and c.flt_type=#arrDep#
</isNotEmpty>
<isNotEmpty property="origDest">
  and (#origDest# = b.orig or #origDest# = b.dest)
</isNotEmpty>
<isNotEmpty property="searchFltKey">
<isNotEmpty property="searchFltDate">
AND a.flt_key = #searchFltKey# and a.flt_date=#searchFltDate#
</isNotEmpty>
</isNotEmpty>
<isEqual compareValue="Y" property="dgYN">
AND (B.SPL_CODE1 IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
OR B.SPL_CODE2 IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
OR B.SPL_CODE3 IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
OR B.SPL_CODE4 IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
OR B.SPL_CODE5 IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
OR B.SPL_CODE6 IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
OR B.SPL_CODE7 IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
OR B.SPL_CODE8 IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
OR B.SPL_CODE9 IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG'))
</isEqual>
<isEqual compareValue="N" property="dgYN">
AND (NVL(B.SPL_CODE1,'*') NOT IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
AND NVL(B.SPL_CODE2,'*') NOT IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
AND NVL(B.SPL_CODE3,'*') NOT IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
AND NVL(B.SPL_CODE4,'*') NOT IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
AND NVL(B.SPL_CODE5,'*') NOT IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
AND NVL(B.SPL_CODE6,'*') NOT IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
AND NVL(B.SPL_CODE7,'*') NOT IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
AND NVL(B.SPL_CODE8,'*') NOT IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
AND NVL(B.SPL_CODE9,'*') NOT IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG'))
</isEqual>
)

</select>
<select id="sqlQueryDgAndShcReptImppdf" parameterClass="cargo.cms.export.report.bo.DGandShcReptBO" resultClass="cargo.cms.export.report.bo.DGandShcReptBO">
select rownum serialNo,awbNo,awbDate,orig,dest,awbPcs,
decode(trunc(TRIM(to_char(awbWt,'999999999999999.99'))),0,0|| TRIM(to_char(awbWt,'999999999999999.99')), TRIM(to_char(awbWt,'999999999999999.99'))) awbWt,
manifestPcs,
decode(trunc(TRIM(to_char(manifestWt,'999999999999999.99'))),0,0|| TRIM(to_char(manifestWt,'999999999999999.99')), TRIM(to_char(manifestWt,'999999999999999.99'))) manifestWt,
commodity,shc,fltKey,TO_CHAR(fltDate,'DDMONYY') fltDate,ata,awbFlow,fltRoute,fltCgoType,partSpmnt,agentName,cnsgnName,shpName from(
select A.AWB_NO awbNo,TO_CHAR(A.AWB_DATE,'DDMONYY') AS awbDate, B.ORIG orig,B.DEST dest,B.PCS awbPcs,B.WT awbWt,A.MANIFEST_PCS manifestPcs,A.MANIFEST_WT manifestWt,B.CONTENT commodity,b.AWB_TYPE awbFlow,
decode(B.spl_code1, null, '', B.spl_code1 || decode(B.spl_code2, null, '', ','))
      || decode(B.spl_code2, null, '', B.spl_code2 || decode(B.spl_code3, null, '', ','))
      || decode(B.spl_code3, null, '', B.spl_code3 || decode(B.spl_code4, null, '', ','))
      || decode(B.spl_code4, null, '', B.spl_code4 || decode(B.spl_code5, null, '', ','))
      || decode(B.spl_code5, null, '', B.spl_code5 || decode(B.spl_code6, null, '', ','))
      || decode(B.spl_code6, null, '', B.spl_code6 || decode(B.spl_code7, null, '', ','))
      || decode(B.spl_code7, null, '', B.spl_code7 || decode(B.spl_code8, null, '', ','))
      || decode(B.spl_code8, null, '', B.spl_code8 || decode(B.spl_code9, null, '', ','))
      || decode(B.spl_code9, null, '', B.spl_code9) shc,
  a.flt_key fltKey,a.flt_date fltDate,
  CASE WHEN C.act_date IS NOT NULL AND C.act_TIME IS NOT NULL THEN
  SUBSTR(lpad(c.act_time,4,0),0,2)||':'||SUBSTR(lpad(c.act_time,4,0),3,2)||'/'||TO_CHAR(c.act_date,'DDMON')
  END ata,
  pkg_common.flt_route(a.flt_key,a.flt_date,'A') as fltRoute,
  c.cgo_acft_type as fltCgoType,
  (SELECT COUNT(*) FROM imp_car_shp shp,  imp_car_awb awb WHERE shp.awb_no = awb.awb_no AND shp.awb_date = awb.awb_date AND awb.awb_pcs  > shp.manifest_pcs AND shp.awb_no   =b.awb_no AND shp.awb_date =b.awb_date ) AS   partSpmnt,
  carawb.SHPR_NAME as shpName,carawb.CSGNE_NAME as cnsgnName,carawb.APPNTD_AGENT as agentName
from imp_car_shp a,awb b,flt_opr c,IMP_CAR_AWB carawb
where a.awb_no=b.awb_no 
and a.awb_date=b.awb_date
and a.flt_key=c.flt_key
and a.flt_date=c.sch_date
 and carawb.AWB_NO(+) = b.AWB_NO 
 AND carawb.AWB_DATE(+) = b.AWB_DATE
AND C.FLT_TYPE='A'
<isEmpty property="searchFltKey">
<isEmpty property="searchFltDate">
<isEqual property="active" compareValue="Y">
	AND C.SCH_DATE BETWEEN TO_DATE(#fromDate#,'DDMONYY') AND TO_DATE(#toDate#,'DDMONYY')
</isEqual>
<isEqual property="active" compareValue="N">
	AND C.ACT_DATE BETWEEN TO_DATE(#actFromDate#,'DDMONYY') AND TO_DATE(#actToDate#,'DDMONYY')
</isEqual>
</isEmpty></isEmpty>
AND (B.spl_code1 IS NOT NULL
OR b.spl_code2 IS NOT NULL
OR b.spl_code3 IS NOT NULL
OR b.spl_code4 IS NOT NULL
OR b.spl_code5 IS NOT NULL
OR b.spl_code6 IS NOT NULL
OR b.spl_code7 IS NOT NULL
OR b.spl_code8 IS NOT NULL
OR b.spl_code9 IS NOT NULL
)
and (
#shc1# in (b.spl_code1,b.spl_code2,b.spl_code3,b.spl_code4,b.spl_code5,b.spl_code6,b.spl_code7,b.spl_code8,B.SPL_CODE9)
or #shc2# in (b.spl_code1,b.spl_code2,b.spl_code3,b.spl_code4,b.spl_code5,b.spl_code6,b.spl_code7,b.spl_code8,B.SPL_CODE9)
or #shc3# in (b.spl_code1,b.spl_code2,b.spl_code3,b.spl_code4,b.spl_code5,b.spl_code6,b.spl_code7,b.spl_code8,B.SPL_CODE9)
<isEmpty property="shc1">
<isEmpty property="shc2">
<isEmpty property="shc3">
or 1=1
 </isEmpty>  
</isEmpty>
</isEmpty>

)
<isEmpty property="searchFltKey">
<isEmpty property="searchFltDate">
<isNotEmpty property="groupCarrCode">
      AND   (C.CARR_CODE = #groupCarrCode# 
      OR C.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP 
      WHERE GRP_CARR_CODE     = #groupCarrCode#))                                          
</isNotEmpty>
<isNotEmpty property="carrCode">
      AND   C.CARR_CODE = #carrCode# 
</isNotEmpty>
</isEmpty></isEmpty>
<isNotEmpty property="arrDep">
  and c.flt_type=#arrDep#
</isNotEmpty>
<isNotEmpty property="origDest">
  and (#origDest# = b.orig or #origDest# = b.dest)
</isNotEmpty>
<isNotEmpty property="searchFltKey">
<isNotEmpty property="searchFltDate">
AND a.flt_key = #searchFltKey# and a.flt_date=#searchFltDate#
</isNotEmpty>
</isNotEmpty>
<isEqual compareValue="Y" property="dgYN">
AND (B.SPL_CODE1 IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
OR B.SPL_CODE2 IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
OR B.SPL_CODE3 IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
OR B.SPL_CODE4 IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
OR B.SPL_CODE5 IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
OR B.SPL_CODE6 IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
OR B.SPL_CODE7 IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
OR B.SPL_CODE8 IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
OR B.SPL_CODE9 IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG'))
</isEqual>
<isEqual compareValue="N" property="dgYN">
AND (NVL(B.SPL_CODE1,'*') NOT IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
AND NVL(B.SPL_CODE2,'*') NOT IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
AND NVL(B.SPL_CODE3,'*') NOT IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
AND NVL(B.SPL_CODE4,'*') NOT IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
AND NVL(B.SPL_CODE5,'*') NOT IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
AND NVL(B.SPL_CODE6,'*') NOT IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
AND NVL(B.SPL_CODE7,'*') NOT IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
AND NVL(B.SPL_CODE8,'*') NOT IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
AND NVL(B.SPL_CODE9,'*') NOT IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG'))
</isEqual>
)

</select>
<select id="sqlQueryDgAndShcReptpdf" parameterClass="cargo.cms.export.report.bo.DGandShcReptBO" resultClass="cargo.cms.export.report.bo.DGandShcReptBO">
select rownum serialNo,awbNo,awbDate,orig,dest,awbPcs,
decode(trunc(TRIM(to_char(awbWt,'999999999999999.99'))),0,0|| TRIM(to_char(awbWt,'999999999999999.99')), TRIM(to_char(awbWt,'999999999999999.99'))) awbWt,
manifestPcs,
decode(trunc(TRIM(to_char(manifestWt,'999999999999999.99'))),0,0|| TRIM(to_char(manifestWt,'999999999999999.99')), TRIM(to_char(manifestWt,'999999999999999.99'))) manifestWt,
commodity,shc,fltKey,TO_CHAR(fltDate,'DDMONYY') fltDate,ata,awbFlow,fltRoute,'' as pmanPort,fltCgoType,partSpmnt,shpName,cnsgnName,agentName from(
select A.AWB_NO awbNo,TO_CHAR(A.AWB_DATE,'DDMONYY') AS awbDate, B.ORIG orig,B.DEST dest,B.PCS awbPcs,B.WT awbWt,A.MANIFEST_PCS manifestPcs,A.MANIFEST_WT manifestWt,B.CONTENT commodity,b.AWB_TYPE awbFlow,
decode(B.spl_code1, null, '', B.spl_code1 || decode(B.spl_code2, null, '', ','))
      || decode(B.spl_code2, null, '', B.spl_code2 || decode(B.spl_code3, null, '', ','))
      || decode(B.spl_code3, null, '', B.spl_code3 || decode(B.spl_code4, null, '', ','))
      || decode(B.spl_code4, null, '', B.spl_code4 || decode(B.spl_code5, null, '', ','))
      || decode(B.spl_code5, null, '', B.spl_code5 || decode(B.spl_code6, null, '', ','))
      || decode(B.spl_code6, null, '', B.spl_code6 || decode(B.spl_code7, null, '', ','))
      || decode(B.spl_code7, null, '', B.spl_code7 || decode(B.spl_code8, null, '', ','))
      || decode(B.spl_code8, null, '', B.spl_code8 || decode(B.spl_code9, null, '', ','))
      || decode(B.spl_code9, null, '', B.spl_code9) shc,
  a.flt_key fltKey,a.flt_date fltDate,
  CASE WHEN C.act_date IS NOT NULL AND C.act_TIME IS NOT NULL THEN
  SUBSTR(lpad(c.act_time,4,0),0,2)||':'||SUBSTR(lpad(c.act_time,4,0),3,2)||'/'||TO_CHAR(c.act_date,'DDMON')
  END ata,
  pkg_common.flt_route(a.flt_key,a.flt_date,'A') as fltRoute,
  '' AS pmanPort,
  c.cgo_acft_type as fltCgoType,
  (SELECT COUNT(*) FROM imp_car_shp shp,  imp_car_awb awb WHERE shp.awb_no = awb.awb_no AND shp.awb_date = awb.awb_date AND awb.awb_pcs  > shp.manifest_pcs AND shp.awb_no   =b.awb_no AND shp.awb_date =b.awb_date ) AS   partSpmnt,
  carawb.SHPR_NAME as shpName,carawb.CSGNE_NAME as cnsgnName,carawb.APPNTD_AGENT as agentName
from imp_car_shp a,awb b,flt_opr c,IMP_CAR_AWB carawb
where a.awb_no=b.awb_no 
and a.awb_date=b.awb_date
and a.flt_key=c.flt_key
and a.flt_date=c.sch_date
 and carawb.AWB_NO(+) = b.AWB_NO 
 AND carawb.AWB_DATE(+) = b.AWB_DATE
AND C.FLT_TYPE='A'
<isEmpty property="searchFltKey">
<isEmpty property="searchFltDate">
<isEqual property="active" compareValue="Y">
	AND C.SCH_DATE BETWEEN TO_DATE(#fromDate#,'DDMONYY') AND TO_DATE(#toDate#,'DDMONYY')
</isEqual>
<isEqual property="active" compareValue="N">
	AND C.ACT_DATE BETWEEN TO_DATE(#actFromDate#,'DDMONYY') AND TO_DATE(#actToDate#,'DDMONYY')
</isEqual>
</isEmpty></isEmpty>
AND (B.spl_code1 IS NOT NULL
OR b.spl_code2 IS NOT NULL
OR b.spl_code3 IS NOT NULL
OR b.spl_code4 IS NOT NULL
OR b.spl_code5 IS NOT NULL
OR b.spl_code6 IS NOT NULL
OR b.spl_code7 IS NOT NULL
OR b.spl_code8 IS NOT NULL
OR b.spl_code9 IS NOT NULL
)
and (
#shc1# in (b.spl_code1,b.spl_code2,b.spl_code3,b.spl_code4,b.spl_code5,b.spl_code6,b.spl_code7,b.spl_code8,B.SPL_CODE9)
or #shc2# in (b.spl_code1,b.spl_code2,b.spl_code3,b.spl_code4,b.spl_code5,b.spl_code6,b.spl_code7,b.spl_code8,B.SPL_CODE9)
or #shc3# in (b.spl_code1,b.spl_code2,b.spl_code3,b.spl_code4,b.spl_code5,b.spl_code6,b.spl_code7,b.spl_code8,B.SPL_CODE9)
<isEmpty property="shc1">
<isEmpty property="shc2">
<isEmpty property="shc3">
or 1=1
 </isEmpty>  
</isEmpty>
</isEmpty>

)
<isEmpty property="searchFltKey">
<isEmpty property="searchFltDate">
<isNotEmpty property="groupCarrCode">
      AND   (C.CARR_CODE = #groupCarrCode# 
      OR C.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP 
      WHERE GRP_CARR_CODE     = #groupCarrCode#))                                          
</isNotEmpty>
<isNotEmpty property="carrCode">
      AND   C.CARR_CODE = #carrCode# 
</isNotEmpty>
</isEmpty></isEmpty>
<isNotEmpty property="arrDep">
  and c.flt_type=#arrDep#
</isNotEmpty>
<isNotEmpty property="origDest">
  and (#origDest# = b.orig or #origDest# = b.dest)
</isNotEmpty>
<isNotEmpty property="searchFltKey">
<isNotEmpty property="searchFltDate">
AND a.flt_key = #searchFltKey# and a.flt_date=#searchFltDate#
</isNotEmpty>
</isNotEmpty>
<isEqual compareValue="Y" property="dgYN">
AND (B.SPL_CODE1 IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
OR B.SPL_CODE2 IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
OR B.SPL_CODE3 IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
OR B.SPL_CODE4 IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
OR B.SPL_CODE5 IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
OR B.SPL_CODE6 IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
OR B.SPL_CODE7 IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
OR B.SPL_CODE8 IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
OR B.SPL_CODE9 IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG'))
</isEqual>
<isEqual compareValue="N" property="dgYN">
AND (NVL(B.SPL_CODE1,'*') NOT IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
AND NVL(B.SPL_CODE2,'*') NOT IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
AND NVL(B.SPL_CODE3,'*') NOT IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
AND NVL(B.SPL_CODE4,'*') NOT IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
AND NVL(B.SPL_CODE5,'*') NOT IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
AND NVL(B.SPL_CODE6,'*') NOT IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
AND NVL(B.SPL_CODE7,'*') NOT IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
AND NVL(B.SPL_CODE8,'*') NOT IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
AND NVL(B.SPL_CODE9,'*') NOT IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG'))
</isEqual>
UNION ALL
select A.AWB_NO awbNo,TO_CHAR(A.AWB_DATE,'DDMONYY') AS awbDate, B.ORIG orig,B.DEST dest,B.PCS awbPcs,B.WT awbWt,A.PMAN_PCS manifestPcs,A.PMAN_WT manifestWt,B.CONTENT commodity,B.AWB_TYPE awbFlow,
decode(B.spl_code1, null, '', B.spl_code1 || decode(B.spl_code2, null, '', ','))
      || decode(B.spl_code2, null, '', B.spl_code2 || decode(B.spl_code3, null, '', ','))
      || decode(B.spl_code3, null, '', B.spl_code3 || decode(B.spl_code4, null, '', ','))
      || decode(B.spl_code4, null, '', B.spl_code4 || decode(B.spl_code5, null, '', ','))
      || decode(B.spl_code5, null, '', B.spl_code5 || decode(B.spl_code6, null, '', ','))
      || decode(B.spl_code6, null, '', B.spl_code6 || decode(B.spl_code7, null, '', ','))
      || decode(B.spl_code7, null, '', B.spl_code7 || decode(B.spl_code8, null, '', ','))
      || decode(B.spl_code8, null, '', B.spl_code8 || decode(B.spl_code9, null, '', ','))
      || decode(B.spl_code9, null, '', B.spl_code9) shc,
  a.flt_key fltKey,a.flt_date fltDate,
  CASE WHEN C.act_date IS NOT NULL AND C.act_TIME IS NOT NULL THEN
  SUBSTR(lpad(c.act_time,4,0),0,2)||':'||SUBSTR(lpad(c.act_time,4,0),3,2)||'/'||TO_CHAR(c.act_date,'DDMON')
  END ata,
  pkg_common.flt_route(a.flt_key,a.flt_date,'D') as fltRoute,
  a.unldg_pt as pmanPort,
  c.cgo_acft_type as fltCgoType,
  (SELECT COUNT(*) FROM awb awb,  EXP_PMANIFEST_AWB pmanawb WHERE pmanawb.AWB_NO = awb.AWB_NO AND pmanawb.AWB_DATE = awb.AWB_DATE AND awb.CAR_YN   ='Y' AND awb.pcs      > pmanawb.pman_pcs AND awb.AWB_NO   =b.awb_no AND awb.AWB_DATE =b.awb_date ) AS partSpmnt,
  car.SHPR_NAME as shpName,car.CSGNE_NAME as cnsgnName,car.AGENT_NAME as agentName
from exp_pmanifest_awb a,awb b,flt_opr c,exp_car car
where a.awb_no=b.awb_no 
and a.awb_date=b.awb_date
and a.flt_key=c.flt_key
and a.flt_date=c.sch_date
and car.awb_no(+) = b.awb_no and car.awb_date(+) = b.awb_date
AND C.FLT_TYPE='D'
<isEmpty property="searchFltKey">
<isEmpty property="searchFltDate">
<isEqual property="active" compareValue="Y">
	AND C.SCH_DATE BETWEEN TO_DATE(#fromDate#,'DDMONYY') AND TO_DATE(#toDate#,'DDMONYY')
</isEqual>
<isEqual property="active" compareValue="N">
	AND C.ACT_DATE BETWEEN TO_DATE(#actFromDate#,'DDMONYY') AND TO_DATE(#actToDate#,'DDMONYY')
</isEqual>
</isEmpty></isEmpty>
AND (B.spl_code1 IS NOT NULL
OR b.spl_code2 IS NOT NULL
OR b.spl_code3 IS NOT NULL
OR b.spl_code4 IS NOT NULL
OR b.spl_code5 IS NOT NULL
OR b.spl_code6 IS NOT NULL
OR b.spl_code7 IS NOT NULL
OR b.spl_code8 IS NOT NULL
OR b.spl_code9 IS NOT NULL
)
and (
#shc1# in (b.spl_code1,b.spl_code2,b.spl_code3,b.spl_code4,b.spl_code5,b.spl_code6,b.spl_code7,b.spl_code8,B.SPL_CODE9)
or #shc2# in (b.spl_code1,b.spl_code2,b.spl_code3,b.spl_code4,b.spl_code5,b.spl_code6,b.spl_code7,b.spl_code8,B.SPL_CODE9)
or #shc3# in (b.spl_code1,b.spl_code2,b.spl_code3,b.spl_code4,b.spl_code5,b.spl_code6,b.spl_code7,b.spl_code8,B.SPL_CODE9)
<isEmpty property="shc1">
<isEmpty property="shc2">
<isEmpty property="shc3">
or 1=1
 </isEmpty>  
</isEmpty>
</isEmpty>

)
<isEmpty property="searchFltKey">
<isEmpty property="searchFltDate">
<isNotEmpty property="groupCarrCode">
      AND   (C.CARR_CODE = #groupCarrCode# 
      OR C.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP 
      WHERE GRP_CARR_CODE     = #groupCarrCode#))                                          
</isNotEmpty>
<isNotEmpty property="carrCode">
      AND   C.CARR_CODE = #carrCode# 
</isNotEmpty>
</isEmpty></isEmpty>
<isNotEmpty property="arrDep">
  and c.flt_type=#arrDep#
</isNotEmpty>
<isNotEmpty property="origDest">
  and (#origDest# = b.orig or #origDest# = b.dest)
</isNotEmpty>
<isNotEmpty property="searchFltKey">
<isNotEmpty property="searchFltDate">
AND a.flt_key = #searchFltKey# and a.flt_date=#searchFltDate#
</isNotEmpty>
</isNotEmpty>
<isEqual compareValue="Y" property="dgYN">
AND (B.SPL_CODE1 IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
OR B.SPL_CODE2 IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
OR B.SPL_CODE3 IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
OR B.SPL_CODE4 IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
OR B.SPL_CODE5 IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
OR B.SPL_CODE6 IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
OR B.SPL_CODE7 IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
OR B.SPL_CODE8 IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
OR B.SPL_CODE9 IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG'))
</isEqual>
<isEqual compareValue="N" property="dgYN">
AND (NVL(B.SPL_CODE1,'*') NOT IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
AND NVL(B.SPL_CODE2,'*') NOT IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
AND NVL(B.SPL_CODE3,'*') NOT IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
AND NVL(B.SPL_CODE4,'*') NOT IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
AND NVL(B.SPL_CODE5,'*') NOT IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
AND NVL(B.SPL_CODE6,'*') NOT IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
AND NVL(B.SPL_CODE7,'*') NOT IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
AND NVL(B.SPL_CODE8,'*') NOT IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
AND NVL(B.SPL_CODE9,'*') NOT IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG'))
</isEqual>
UNION ALL
select A.AWB_NO awbNo,TO_CHAR(A.AWB_DATE,'DDMONYY') AS awbDate, B.ORIG orig,B.DEST dest,B.PCS awbPcs,B.WT awbWt,(A.PPK_PCS+A.BULK_PCS) manifestPcs,(A.PPK_WT+A.BULK_WT) manifestWt,B.CONTENT commodity,b.AWB_TYPE awbFlow,
decode(B.spl_code1, null, '', B.spl_code1 || decode(B.spl_code2, null, '', ','))
      || decode(B.spl_code2, null, '', B.spl_code2 || decode(B.spl_code3, null, '', ','))
      || decode(B.spl_code3, null, '', B.spl_code3 || decode(B.spl_code4, null, '', ','))
      || decode(B.spl_code4, null, '', B.spl_code4 || decode(B.spl_code5, null, '', ','))
      || decode(B.spl_code5, null, '', B.spl_code5 || decode(B.spl_code6, null, '', ','))
      || decode(B.spl_code6, null, '', B.spl_code6 || decode(B.spl_code7, null, '', ','))
      || decode(B.spl_code7, null, '', B.spl_code7 || decode(B.spl_code8, null, '', ','))
      || decode(B.spl_code8, null, '', B.spl_code8 || decode(B.spl_code9, null, '', ','))
      || decode(B.spl_code9, null, '', B.spl_code9) shc,
  a.flt_key fltKey,a.flt_date fltDate,
  CASE WHEN C.act_date IS NOT NULL AND C.act_TIME IS NOT NULL THEN
  SUBSTR(lpad(c.act_time,4,0),0,2)||':'||SUBSTR(lpad(c.act_time,4,0),3,2)||'/'||TO_CHAR(c.act_date,'DDMON')
  END ata,
  pkg_common.flt_route(a.flt_key,a.flt_date,'D') as fltRoute,
  a.unldg_pt as pmanPort,
  c.cgo_acft_type as fltCgoType,
  (SELECT COUNT(*) FROM awb awb,  exp_pman_tarmac_awb pmanawb WHERE pmanawb.AWB_NO = awb.AWB_NO AND pmanawb.AWB_DATE = awb.AWB_DATE AND awb.CAR_YN   ='Y' AND awb.pcs      > (pmanawb.ppk_wt+pmanawb.bulk_wt) AND awb.AWB_NO   =b.awb_no AND awb.AWB_DATE =b.awb_date ) AS partSpmnt,
  car.SHPR_NAME as shpName,car.CSGNE_NAME as cnsgnName,car.AGENT_NAME as agentName
from exp_pman_TARMAC_awb a,awb b,flt_opr c,exp_car car
where a.awb_no=b.awb_no 
and a.awb_date=b.awb_date
and a.flt_key=c.flt_key
and a.flt_date=c.sch_date
and car.awb_no(+) = b.awb_no and car.awb_date(+) = b.awb_date
AND C.FLT_TYPE='D'
<isEmpty property="searchFltKey">
<isEmpty property="searchFltDate">
<isEqual property="active" compareValue="Y">
	AND C.SCH_DATE BETWEEN TO_DATE(#fromDate#,'DDMONYY') AND TO_DATE(#toDate#,'DDMONYY')
</isEqual>
<isEqual property="active" compareValue="N">
	AND C.ACT_DATE BETWEEN TO_DATE(#actFromDate#,'DDMONYY') AND TO_DATE(#actToDate#,'DDMONYY')
</isEqual>
</isEmpty></isEmpty>
AND (B.spl_code1 IS NOT NULL
OR b.spl_code2 IS NOT NULL
OR b.spl_code3 IS NOT NULL
OR b.spl_code4 IS NOT NULL
OR b.spl_code5 IS NOT NULL
OR b.spl_code6 IS NOT NULL
OR b.spl_code7 IS NOT NULL
OR b.spl_code8 IS NOT NULL
OR b.spl_code9 IS NOT NULL
)
and (
#shc1# in (b.spl_code1,b.spl_code2,b.spl_code3,b.spl_code4,b.spl_code5,b.spl_code6,b.spl_code7,b.spl_code8,B.SPL_CODE9)
or #shc2# in (b.spl_code1,b.spl_code2,b.spl_code3,b.spl_code4,b.spl_code5,b.spl_code6,b.spl_code7,b.spl_code8,B.SPL_CODE9)
or #shc3# in (b.spl_code1,b.spl_code2,b.spl_code3,b.spl_code4,b.spl_code5,b.spl_code6,b.spl_code7,b.spl_code8,B.SPL_CODE9)
<isEmpty property="shc1">
<isEmpty property="shc2">
<isEmpty property="shc3">
or 1=1
 </isEmpty>  
</isEmpty>
</isEmpty>

)
<isEmpty property="searchFltKey">
<isEmpty property="searchFltDate">
<isNotEmpty property="groupCarrCode">
      AND   (C.CARR_CODE = #groupCarrCode# 
      OR C.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP 
      WHERE GRP_CARR_CODE     = #groupCarrCode#))                                          
</isNotEmpty>
<isNotEmpty property="carrCode">
      AND   C.CARR_CODE = #carrCode# 
</isNotEmpty>
</isEmpty></isEmpty>
<isNotEmpty property="arrDep">
  and c.flt_type=#arrDep#
</isNotEmpty>
<isNotEmpty property="origDest">
  and (#origDest# = b.orig or #origDest# = b.dest)
</isNotEmpty>
<isNotEmpty property="searchFltKey">
<isNotEmpty property="searchFltDate">
AND a.flt_key = #searchFltKey# and a.flt_date=#searchFltDate#
</isNotEmpty>
</isNotEmpty>
<isEqual compareValue="Y" property="dgYN">
AND (B.SPL_CODE1 IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
OR B.SPL_CODE2 IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
OR B.SPL_CODE3 IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
OR B.SPL_CODE4 IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
OR B.SPL_CODE5 IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
OR B.SPL_CODE6 IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
OR B.SPL_CODE7 IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
OR B.SPL_CODE8 IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
OR B.SPL_CODE9 IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG'))
</isEqual>
<isEqual compareValue="N" property="dgYN">
AND (NVL(B.SPL_CODE1,'*') NOT IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
AND NVL(B.SPL_CODE2,'*') NOT IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
AND NVL(B.SPL_CODE3,'*') NOT IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
AND NVL(B.SPL_CODE4,'*') NOT IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
AND NVL(B.SPL_CODE5,'*') NOT IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
AND NVL(B.SPL_CODE6,'*') NOT IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
AND NVL(B.SPL_CODE7,'*') NOT IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
AND NVL(B.SPL_CODE8,'*') NOT IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG')
AND NVL(B.SPL_CODE9,'*') NOT IN (SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE WHERE SPL_type='SPL_DANG'))
</isEqual>
)
</select>
<select id="dgshc_flt_validate"  parameterClass="cargo.cms.export.report.bo.DGandShcReptBO"  resultClass="java.lang.Integer">
		SELECT NVL(count(1),0) FROM FLT_OPR WHERE FLT_KEY = #searchFltKey# AND SCH_DATE= TO_DATE( #searchFltDate#, 'DDMONYY') AND FLT_TYPE=#arrDep#
   	</select>

<select id="getConslInvDateOneMonthDiff" parameterClass="map"  resultClass="java.lang.String">
	   SELECT COUNT(1) FROM DUAL WHERE to_date(#TO_DATE#,'DDMONYY') > ADD_MONTHS(to_date(#FROM_DATE#,'DDMONYY'),1)
	</select>
	<select id="getConslInvDateThreeMonthDiff" parameterClass="map"  resultClass="java.lang.String">
	   SELECT COUNT(1) FROM DUAL WHERE to_date(#TO_DATE#,'DDMONYY') > ADD_MONTHS(to_date(#FROM_DATE#,'DDMONYY'),3)
	</select>
	<select id="fetchagentdetailsforRCL" parameterClass="java.lang.String" resultClass="cargo.cms.export.report.bo.IssueRCLBulkRept_010BO">
SELECT COMP.CO_IATA_CODE AS agentCode,COMP.CODE_DESC AS agentName FROM EXP_RCL_HD RCLHD, CUST_COMPANY COMP WHERE COMP.CODE=RCLHD.CUST_NO AND (RCLHD.RCL_NO=#PARAM# OR RCLHD.VCL_NO=#PARAM#) AND RCLHD.CUST_NO IS NOT NULL
</select>
</sqlMap> 