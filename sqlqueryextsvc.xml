<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="ExternalSvcModule">
<select id="getUldDetails" parameterClass="cargo.cms.extsvc.bo.TransitMailBO" resultClass="cargo.cms.extsvc.bo.TransitMailBO" >
	select inbChk.FLT_KEY flightNo,to_char(inbChk.FLT_DATE,'DDMONYY') flightDate from imp_ramp_inb_chk_dtl inbChk where uld_key=#uldKey# 
	and (select count(1) from flt_opr_events where flt_key=inbChk.flt_key and flt_date=inbChk.flt_date and flt_cls_yn='N')>0
	
</select>
<select id="getDestDetails" parameterClass="cargo.cms.extsvc.bo.TransitMailBO" resultClass="cargo.cms.extsvc.bo.TransitMailBO" >
select decode(city.x_ray_req,null,NVL(country.x_ray_req,'N'),NVL(city.x_ray_req,'N')) xrayReq  from mast_city city,mast_country country where 
	city.ctry_code=country.code and city.code=#dest#
	
</select>

<select id="getFltDetails" parameterClass="java.lang.String" resultClass="cargo.cms.extsvc.bo.TransitMailBO" >
	select inv.FLT_KEY flightNo,to_char(inv.FLT_DATE,'DDMONYY') flightDate from uld_inventory inv 
	where uld_key=#bdULDKey# and flt_type='E'
</select>
<select id="getULDFltDetails" parameterClass="java.lang.String" resultClass="cargo.cms.extsvc.bo.TransitMailBO" >
	select inv.FLT_KEY flightNo,to_char(inv.FLT_DATE,'DDMONYY') flightDate from uld_inventory inv 
	where uld_key=#bdULDKey#
</select>

<select id="isULDAssToFlight" parameterClass="map" resultClass="java.lang.Integer" >
	select count(1) from uld_inventory  where uld_key=#uldKey# and FLT_KEY=#flightNo# and FLT_DATE=#flightDate#
</select>
<select id="getULDFlightDetails_TM" parameterClass="cargo.cms.extsvc.bo.TransitMailBO" resultClass="cargo.cms.extsvc.bo.TransitMailBO" >
	select loc_code locnCode,flt_type flightType,IMP_FLT_KEY flightNo,to_char(IMP_FLT_DATE,'DDMONYY') flightDate,
	 (SELECT DECODE(COUNT(1), 0, 'N', 'Y') FROM MAST_CARRIER where code = substr(flt_key,0,2) and NVL(MAIL_AS_CARGO,'X') = 'Y') as mailAsCargo from uld_inventory  where uld_key=#uldKey#
</select>


<select id="getFlightMailAsCargo" parameterClass="cargo.cms.extsvc.bo.TransitMailBO" resultClass="cargo.cms.extsvc.bo.TransitMailBO" >
	SELECT DECODE(COUNT(1), 0, 'N', 'Y') as mailAsCargo FROM MAST_CARRIER where code = substr(#flightNo#,0,2) and NVL(MAIL_AS_CARGO,'X') = 'Y'
</select>

<select id="isBatchScaningDone" parameterClass="map" resultClass="java.lang.Integer" >
	select count(1) from IMP_XPS_OBC_MAIL  where bd_uld_key=#uldKey# and FLT_KEY=#flightKey# and FLT_DATE=#flightDate#
</select>

<select id="checkIfBDStart" parameterClass="map" resultClass="java.lang.Integer" >
	select count(1) from IMP_RAMP_CHK_DTL where BRKDN_START_USER_ID is not null and uld_key=#bdULDKey# and FLT_KEY=#flightKey# and FLT_DATE=#flightDate#
</select>
<select id="checkIfBDComp" parameterClass="map" resultClass="java.lang.Integer" >
	select count(1) from IMP_RAMP_CHK_DTL where BRKDN_COMPL_USER_ID is not null and uld_key=#bdULDKey# and FLT_KEY=#flightKey# and FLT_DATE=#flightDate#
</select>
<select id="IS_LSP_ULD_LOADED" parameterClass="map" resultClass="java.lang.Integer" >
	SELECT COUNT(1) FROM SEC_USER_MOB_APP_AUTH 
		WHERE  ACCESS_TOKEN = #ACCESS_TOKEN# and STATUS='ACTIVE'
		
</select>

<select id="IS_ULDLSP_LOADED_NON_TM" parameterClass="cargo.cms.extsvc.bo.TransitMailBO" resultClass="java.lang.Integer" >
	select count(1) from awb_inventory inv , awb awb where inv.awb_no=awb.awb_no and inv.awb_date=awb.awb_date
and awb.catalog!='TM' and (inv.uld_key=#lspUld# or inv.lsp_no=#lspUld#)	
</select>

 <select id="checkIOTagExist" parameterClass="cargo.cms.extsvc.bo.TransitMailBO" resultClass="java.lang.Integer" >
   <![CDATA[
	 SELECT count(1)
	 FROM IMP_XPS_OBC_MAIL
     WHERE flt_key = #flightNo#
     AND flt_date = to_date(#flightDate#,'DDMONYY')
     AND TAG_NO = #tagNo#
     AND CATALOG = 'IO'
     ]]>
  </select>
  
   <select id="checkTMTagExist" parameterClass="cargo.cms.extsvc.bo.TransitMailBO" resultClass="java.lang.Integer" >
   <![CDATA[
	 SELECT count(1)
	 FROM IMP_XPS_OBC_MAIL
     WHERE flt_key = #flightNo#
     AND flt_date = to_date(#flightDate#,'DDMONYY')
     AND TAG_NO = #tagNo#  
     AND CATALOG = 'TM'
     AND BD_ULD_KEY = #bdULDKey#
     AND DEST=#dest#
     ]]>
   </select>
   
   <select id="checkTagExistsInCARDIT" parameterClass="cargo.cms.extsvc.bo.TransitMailBO" resultClass="java.lang.Integer" >
		SELECT count(1) FROM EDI_CARDIT_HD HD 
		join EDI_CARDIT_TAG_DTL DTL ON HD.TR_NO = DTL.TR_NO 
		left JOIN AWB B ON b.awb_no = HD.awb_No and b.awb_date = HD.awb_Date
		WHERE DTL.TAG_NO = #tagNo# AND NVL(B.AWB_CLOSED_YN,'N') = 'N'
   </select>
   
   <select id="checkTMTagExistMailCargoInCardit" parameterClass="cargo.cms.extsvc.bo.TransitMailBO" resultClass="java.lang.Integer" >
   <![CDATA[
		 SELECT count(1)
		 FROM IMP_XPS_OBC_MAIL
	     WHERE flt_key = #flightNo#
	     AND flt_date = to_date(#flightDate#,'DDMONYY')
	     AND TAG_NO = #tagNo#  
	     AND CATALOG = 'TM'
	     AND BD_ULD_KEY = #bdULDKey#     
     ]]>
   </select>
   
   <select id="checkTMTagExistMailCargo" parameterClass="cargo.cms.extsvc.bo.TransitMailBO" resultClass="java.lang.Integer" >
   <![CDATA[
		 SELECT count(1)
		 FROM IMP_XPS_OBC_MAIL
	     WHERE flt_key = #flightNo#
	     AND flt_date = to_date(#flightDate#,'DDMONYY')
	     AND SUBSTR(TAG_NO,17,4) = #dnNo#  
	     AND CATALOG = 'TM'
	     AND BD_ULD_KEY = #bdULDKey#	     
     ]]>
   </select>
   
   <insert id="imp_xom_insertTmTag" parameterClass="cargo.cms.extsvc.bo.TransitMailBO" >
		INSERT INTO IMP_XPS_OBC_MAIL (
		   CATALOG, FLT_TYPE, FLT_KEY, 
		   FLT_DATE, AWB_NO , AWB_DATE , BD_ULD_KEY,
		   TAG_NO, LSP_NO, 
		   ORIG, DEST, 
		   ACT_PCS,
		    ACT_WT,             
		   LOCN, ULD_KEY,
		   DAM_IND, 
		   scan_tag_no,
		   CR_USER_ID, 
		   CR_DATE, LM_USER_ID, LM_DATE, MBLE_FLG, MBLE_CAR_IND
		) 
		VALUES ( 
			'TM', 'I', UPPER(#flightNo#),
		    TO_DATE(#flightDate#,'DDMONYY'),#awbNum#,#awbDate#, #bdULDKey#,
		    UPPER(#tagNo#), UPPER(#lspNo#),
		    UPPER(#orig#), UPPER(#dest#),
		    #pcs#,
		    #wt#,
		    UPPER(#locnCode#), UPPER(#uldKey#),
		    'N',
		    #scanTagNo#,
		     #userID#,
		    sysdate, #userID#, sysdate, 'Y', 'Y' 
		)
	</insert>
	
	<insert id="sqlInsAwbStrlDtl" parameterClass="cargo.cms.extsvc.bo.TransitMailBO" >
	Insert into IMP_AWB_STRG_DTL 
	(TR_NO,
DOC_LINE_NO,
CARR_CODE,
FLT_DATE,
FLT_KEY,
AWB_DEST,
ULD_KEY,
LOC_CODE,
STRG_PCS,
STRG_WT,
LSP_NO,
DAM_IND,
CR_USER_ID,
CR_DATE,
LM_USER_ID,
LM_DATE,
TAG_NO,
FLT_TYPE,
TR_STATUS,
TR_TYPE,
CHKIN_ULD_KEY,
CATALOG)  
values
(IMP_AWB_STRG_DTL_SEQ.NEXTVAL,
  '1',
 substr(#flightNo#,0,2),
  to_date(#flightDate#,'DDMONYY'),
  #flightNo#,  
  #dest#,
  #uldKey#,
  #locnCode#,
  #pcs#,
  #wt#,
  #lspNo#,
  'N',
  #userID#,
  sysdate,
  #userID#,
  sysdate,
  #tagNo#,
  'I',
  'A',
  'TM',
  #bdULDKey#,
  #catalog#)
	</insert>
	
	<select id="getTMTagDetails" parameterClass="cargo.cms.extsvc.bo.TransitMailBO" resultClass="cargo.cms.extsvc.bo.TransitMailBO" >
	   <![CDATA[
		 SELECT SEQ_NO seqNo,ACT_PCS pcs,ACT_WT wt
		 FROM IMP_XPS_OBC_MAIL
	     WHERE flt_key = #flightNo#
	     AND flt_date = to_date(#flightDate#,'DDMONYY')
	     AND TAG_NO = #tagNo#  
	     AND CATALOG = 'TM'
	     AND BD_ULD_KEY = #bdULDKey#
	     AND DEST=#dest#
	     ]]>
   </select>
 
   	<select id="getCSVRecords" parameterClass="cargo.cms.extsvc.bo.TransitMailBO" resultClass="cargo.cms.extsvc.bo.TransitMailBO" >
	   <![CDATA[
			select '"'||'1.3.5'||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||'03'||'"'||','||'"'||''||'"'||','||'"'||
				to_char(chk.brkdn_start_date,'YYMMDD')||'"'||','||'"'||to_char(chk.brkdn_start_date,'HH24mi')||'"'
				||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'|| 'HKG' ||'"'||','||'"'||''||'"'||','||'"'||chk.carr_code||'"'||','||'"'
				||chk.flt_no||'"'||','||'"'||to_char(chk.flt_date,'YYMMDD')||'"'||','||'"'||'4'||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||
				mail.scan_tag_no||'"'||','||'"'||chk.uld_no||'"'||','||'"'||chk.uld_type||'"' as csvRec
			from imp_xps_obc_mail mail
			,imp_ramp_chk_dtl chk where mail.bd_uld_key =#bdULDKey#
			and mail.flt_key =#flightNo# and mail.flt_date=to_date(#flightDate#,'DDMONYY')
			and mail.bd_uld_key=chk.uld_key and mail.flt_key=chk.flt_key
			and mail.flt_date=chk.flt_date and mail.scan_tag_no is not null
	     ]]>
   </select>
   
    <update id="sqlUpdateTmTagDesktop" parameterClass="cargo.cms.extsvc.bo.TransitMailBO">
			UPDATE IMP_XPS_OBC_MAIL SET 			
			ORIG = #orig#,
			DEST = #dest#, 
			ACT_PCS = ACT_PCS+#pcs#, 
			ACT_WT  = ACT_WT+#wt#,          
            LOCN = #locnCode#,
			DAM_IND = 'N',
			LM_USER_ID  = #userID#,	    
			LM_DATE = sysdate,
			LSP_NO = #lspNo#,
			ULD_KEY = #uldKey# 
		 WHERE
			SEQ_NO=#xpsSeqNo#
	</update>
		<update id="imp_brk_uldbrk_start" parameterClass="cargo.cms.extsvc.bo.TransitMailBO">
		UPDATE IMP_RAMP_CHK_DTL	SET	
			BRKDN_START_USER_ID = #userID#,
			BRKDN_START_DATE = TO_DATE(#bdStartDateTime#,'DDMONYY HH24:MI'),					
			DAM_IND = 'N',
			BRKDN_LOCN = #bdLocn#,			
			LM_USER_ID	 =#userID#,
			LM_DATE	 = sysdate,
			TR_TYPE=#trtype# 		
		WHERE 	FLT_KEY    = #flightNo#
			  	AND FLT_DATE = #flightDate#			  	
				AND ULD_KEY = #bdULDKey#					    
	</update>
	
	<update id="updInvAfterBDStart" parameterClass="cargo.cms.extsvc.bo.TransitMailBO">
		Update Uld_inventory
		set DAM_IND = 'N',
			LOC_CODE = #bdLocn#,
			TR_TYPE=#trtype#,
			REF_TR_TYPE='IR',
			REF_TR_EVENT=#trtype#
		 where uld_key = #bdULDKey#
	</update>
	
	<update id="imp_brk_uldbrk_complete" parameterClass="cargo.cms.extsvc.bo.TransitMailBO">
		UPDATE IMP_RAMP_CHK_DTL	SET		
			BRKDN_COMPL_YN ='Y',
			BRKDN_COMPL_DATE = to_date(#bdComplDateTime#,'DDMONYY HH24:MI'),
			BRKDN_COMPL_TIME = to_Char(to_date(#bdComplDateTime#,'DDMONYY HH24:MI'),'HH24MI'),						
			BRKDN_COMPL_USER_ID=#userID#,
			LM_USER_ID	 =#userID#	 ,
			LM_DATE	 = sysdate,
			TR_TYPE=#trtype# 	
		WHERE 	FLT_KEY    = #flightNo#			  	
			  	AND FLT_DATE = #flightDate#			  	
				AND ULD_KEY = #bdULDKey#					   
	</update>
	
	<insert id="INSERT_MOB_APP_LOGIN" parameterClass="map">
	INSERT INTO SEC_USER_MOB_APP_AUTH (USER_NAME, ACCESS_TOKEN, LOGIN_DATE, EXPIRES, STATUS, CLIENT_ID, GRANT_TYPE)
		VALUES (#USER_NAME#,#ACCESS_TOKEN#,sysdate,#expires_in#,'ACTIVE',#client_id#,#grant_type#)
</insert>
<select id="GET_USERNAME_VALID" parameterClass="map" resultClass="java.lang.String" >
	SELECT USER_NAME username FROM SEC_USER_MOB_APP_AUTH 
		WHERE ACCESS_TOKEN = #ACCESS_TOKEN#		
</select>
<select id="IS_INT_USER_ACCESS_TOKEN_VALID" parameterClass="map" resultClass="java.lang.Integer" >
	SELECT COUNT(1) FROM SEC_USER_MOB_APP_AUTH 
		WHERE  ACCESS_TOKEN = #ACCESS_TOKEN# and STATUS='ACTIVE'
		
</select>
	<select id="checkUldEmpty_awb_inv" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		select count(1) from awb_inventory where ULD_KEY = #uldKey#
	</select>
	<update id="updEmptyFlagInUldInventory" parameterClass="java.util.HashMap">
		UPDATE ULD_INVENTORY SET EMPTY_FLG=#emptyFlag# WHERE ULD_KEY=#uldKey#
	</update>
	<update id="updEmptyFlagInLspInventory" parameterClass="java.util.HashMap">
		UPDATE LSP_INVENTORY SET EMPTY_FLG=#emptyFlag# WHERE LSP_NO=#lspNo#
	</update> 


<select id="IS_USER_ACCESS_TOKEN_VALID" parameterClass="map" resultClass="java.lang.Integer" >
	SELECT COUNT(1) FROM SEC_USER_MOB_APP_AUTH 
		WHERE STATUS = 'ACTIVE'
		AND ACCESS_TOKEN = #ACCESS_TOKEN#
		AND DATEDIFF_FORMAT('ss', LAST_LOGIN_DATE, SYSDATE) &lt;= EXPIRES
</select>

<select id="GET_USER_ID_WITH_TOKEN_VALID" parameterClass="map" resultClass="java.lang.String" >
	SELECT USER_NAME FROM SEC_USER_MOB_APP_AUTH WHERE STATUS = 'ACTIVE' AND ACCESS_TOKEN = #ACCESS_TOKEN# and rownum=1
</select>

<select id="GET_AWB_USER_LIST_MOB_SRV" parameterClass="java.lang.String" resultClass="java.lang.String">
		select su.code as userName from awb aw 
		left join cust_company cc on cc.code = aw.agent_code  or cc.code = aw.shpr_code
		left join sec_user su on su.cust_no = cc.code
		where aw.awb_no = #awbNo# and su.code is not null
</select>
	
<update id="UPDATE_MOB_LOGOUT" parameterClass="map">
	UPDATE SEC_USER_MOB_APP_AUTH SET STATUS = 'EXPIRED' WHERE ACCESS_TOKEN = #ACCESS_TOKEN#
</update>

<select id="getNetWtandGrossWt" parameterClass="cargo.cms.extsvc.bo.TransitMailBO" resultClass="cargo.cms.extsvc.bo.TransitMailBO">
	select sum(act_wt) netWt from IMP_XPS_OBC_MAIL where bd_uld_key=#bdULDKey# and flt_key=#flightNo# and flt_date=#flightDate#
</select>

<select id="getSysparamValues" parameterClass="java.lang.String" resultClass="cargo.cms.extsvc.bo.TransitMailBO">
	SELECT 
	(SELECT RULE_VALUE FROM CMSRULES WHERE RULE_CODE='MBLE_VER_NO') AS verNo,
	(SELECT RULE_VALUE FROM CMSRULES WHERE RULE_CODE='MBLE_UPLD_LOG') AS uploadLog,
	(SELECT RULE_VALUE FROM CMSRULES WHERE RULE_CODE='MBLE_TIME_INTERVAL_LOGS') AS timeintrvlupld,
	(SELECT RULE_VALUE FROM CMSRULES WHERE RULE_CODE='MBLE_LVL_LOG') AS levelofLog,
	(SELECT RULE_VALUE FROM CMSRULES WHERE RULE_CODE='MBLE_DEL_LOG') AS delLog,
	(SELECT RULE_VALUE FROM CMSRULES WHERE RULE_CODE='MBLE_PRE_DEP_VER') AS preDepVerf,
  (SELECT RULE_VALUE FROM CMSRULES WHERE RULE_CODE='MOB_MAX_PHOTO_UPLOAD_VAL') AS maxImageUpload,
  (SELECT RULE_VALUE FROM CMSRULES WHERE RULE_CODE='MOB_MAX_VEDIO_UPLOAD_VAL') AS maxVideoUpload
	FROM DUAL
</select>


<select id="isJOExistsAndNotCompleted" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO" resultClass="java.lang.String" >
	select max(JO_NO) as joNo from EXP_SEC_CHK_JO 
		where awb_no = #awbNo# 
		and awb_date = to_char((SELECT AWB_DATE FROM AWB WHERE AWB_NO =#awbNo# AND (AWB_TYPE='E' OR AWB_TYPE='T') AND AWB_CLOSED_YN='N'),'DDMONYY') 
		and status not in ('Completed')
</select>

<insert id="insertSecJOHdr_TM" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO">
	Insert into EXP_SEC_CHK_JO (JO_NO,AWB_NO,AWB_DATE,JO_TYPE,PC,WT,STATUS,CHARGE_TO,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,FLT_KEY,FLT_DATE,TR_TYPE) values 
	(lpad(EXP_SEC_CHK_JO_SEQ.nextVal,7,'0'),#awbNo#,to_char((SELECT AWB_DATE FROM AWB WHERE AWB_NO =#awbNo# AND (AWB_TYPE='E' OR AWB_TYPE='T') AND AWB_CLOSED_YN='N'),'DDMONYY'),
	'SC',#actPcs#,#actWt#,'NEW','AIRLINE',#crUserId#,sysdate,#crUserId#,sysdate,#fltKey#,to_date(#fltDate#,'DDMONYY'),'CSCJO')
</insert>
<insert id="insertSecJoDtl_TM" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO">
		Insert into EXP_SEC_CHK_JO_DTL (JO_NO,JO_TYPE,SEC_CHK,PC,WT,RESULT,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE) values 
		(lpad(EXP_SEC_CHK_JO_SEQ.currVal,7,'0'),'SC','X-RAY',#actPcs#,#actWt#,'Pass',#crUserId#,sysdate,#crUserId#,sysdate)
	</insert>
<update id="updateSecJOHdr_TM" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO">
	update EXP_SEC_CHK_JO set
		pc = pc + #actPcs#,
		wt = wt + #actWt#
		where awb_no = #awbNo# 
		and awb_date = to_char((SELECT AWB_DATE FROM AWB WHERE AWB_NO =#awbNo# AND (AWB_TYPE='E' OR AWB_TYPE='T') AND AWB_CLOSED_YN='N'),'DDMONYY')
		and jo_no=#joNo#
</update>
<update id="updateSecJoDtl_TM" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO">
	update EXP_SEC_CHK_JO_DTL set
		pc = pc + #actPcs#,
		wt = wt + #actWt#
		where jo_no=#joNo#
</update>
<select id="isScanBarCodeExists" parameterClass="java.lang.String" resultClass="java.lang.Integer" >
	select count(1) as cnt from IMP_XPS_OBC_MAIL A
	left JOIN AWB B ON A.awb_no = B.awb_No and A.awb_date = B.awb_Date
	WHERE A.scan_tag_no = #PARAM# AND NVL(B.AWB_CLOSED_YN,'N') = 'N'	
</select>

<select id="isScanBarCodeExistsForMailAsCargo" parameterClass="java.lang.String" resultClass="java.lang.Integer" >
	select count(1) as cnt from IMP_XPS_OBC_MAIL A  
	left JOIN AWB B ON A.awb_no = B.awb_No and A.awb_date = B.awb_Date
	WHERE (A.scan_tag_no = #PARAM# OR A.tag_no = #PARAM#) AND NVL(B.AWB_CLOSED_YN,'N') = 'N'
</select>

<!-- External Mobile Application Starts  -->
<select id="IS_USER_EXIST_IN_SEC_USER" parameterClass="map" resultClass="java.lang.Integer" >
	SELECT COUNT(1) FROM SEC_USER WHERE CODE=#username# AND USER_PASSWORD = #password# AND USER_TYPE='E'
</select>

<insert id="INSERT_EXT_AGT_MOB_APP_LOGIN" parameterClass="map">
	INSERT INTO SEC_USER_MOB_APP_AUTH (USER_NAME, ACCESS_TOKEN, LOGIN_DATE, EXPIRES, STATUS, CLIENT_ID, GRANT_TYPE, DEVICE_ID,LAST_LOGIN_DATE)
		VALUES (#username#,#access_token#,sysdate,#expires_in#,'ACTIVE',#client_id#,#grant_type#,#device_id#,SYSDATE)
</insert>

<insert id="INSERT_CDP_OAUTH_TOKEN" parameterClass="map">
	INSERT INTO MAST_CDP_INCOM_OAUTH_DTLS (TR_NO,USER_NAME,GRANT_TYPE,ACCESS_TOKEN,EXPIRES, STATUS, TOKEN_DATE,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE)
		VALUES (#tr_no#,#username#,#grant_type#,#access_token#,#expires_in#,'ACTIVE',SYSDATE,'AAHK',SYSDATE,'AAHK',SYSDATE)
</insert>

<update id="UPDATE_EXT_AGT_MOB_LOGOUT" parameterClass="map">
	UPDATE SEC_USER_MOB_APP_AUTH SET STATUS = 'EXPIRED' WHERE ACCESS_TOKEN = #ACCESS_TOKEN#
</update>

<update id="UPDATE_EXT_AGT_MOB_LAST_LOG_DATE" parameterClass="map">
	UPDATE SEC_USER_MOB_APP_AUTH SET LAST_LOGIN_DATE = SYSDATE WHERE ACCESS_TOKEN = #ACCESS_TOKEN#
</update>


<select id="checkAwbType_SHP_TRACK" parameterClass="map" resultClass="java.lang.String">
	SELECT awb_type from AWB WHERE awb_no = #awbNo# and awb_date = #awbDate#
</select>

<select id="getImportAWBinfoShpTrack" parameterClass="cargo.cms.extsvc.bo.ShipmentTrackingBO" resultClass="cargo.cms.extsvc.bo.ShipmentTrackingBO">
	SELECT 
  		SUBSTR(A.AWB_NO,0,3) AS awb_prefix,
  		SUBSTR(a.AWB_NO,4) AS awb_suffix,
      	'I' as type,
      	(select cc_code from (select t1.cc_code from v_cst_imp_cc_code_awb t1,mast_constraint_code t2 
      			where t1.cc_code = t2.code and awb_no = #awbNo# and nvl(hawb_no, '000000000000000000') = '000000000000000000'
      			order by recv_date desc, priority desc) where rownum = 1) as ce_code,
      	a.ORIG as origin,
	    a.dest as destination,
      	a.PCS as awb_pc,
      	trim(TO_CHAR(a.WT,'9999990D99')) as awb_wt
   	from AWB a
	  left join IMP_CAR_AWB ia on a.AWB_NO = ia.AWB_NO and a.AWB_DATE = ia.AWB_DATE 
	  LEFT JOIN EXP_CAR EA ON A.AWB_NO = EA.AWB_NO AND A.AWB_DATE = EA.AWB_DATE 	 
	  where a.AWB_NO = #awbNo# and a.AWB_DATE = #awbDate#
    and a.awb_date = (select max(awb_date) from awb where awb_no = a.awb_no)	
	ORDER BY A.AWB_TYPE ASC
</select>
<select id="getExportAWBinfoShpTrack" parameterClass="cargo.cms.extsvc.bo.ShipmentTrackingBO" resultClass="cargo.cms.extsvc.bo.ShipmentTrackingBO">
	SELECT 
  		SUBSTR(A.AWB_NO,0,3) AS awb_prefix,
  		SUBSTR(a.AWB_NO,4) AS awb_suffix,
        'E' as type,
      	a.ORIG as origin,
	    a.dest as destination,
      	a.PCS as awb_pc,
      	trim(TO_CHAR(a.WT,'9999990D99')) as awb_wt,
        (select TO_CHAR(recd_date,'DDMONYY HH24:MI') from exp_doc_recd edr where edr.AWB_NO = a.AWB_NO and edr.AWB_DATE = a.AWB_DATE and rownum=1) as document_received_datetime 
   	from AWB a
	  left join IMP_CAR_AWB ia on a.AWB_NO = ia.AWB_NO and a.AWB_DATE = ia.AWB_DATE 
	  LEFT JOIN EXP_CAR EA ON A.AWB_NO = EA.AWB_NO AND A.AWB_DATE = EA.AWB_DATE 	 
	  where a.AWB_NO = #awbNo# and a.AWB_DATE = #awbDate#
    and a.awb_date = (select max(awb_date) from awb where awb_no = a.awb_no)	
	ORDER BY A.AWB_TYPE ASC		
</select>
<select id="getTrnsAWBinfoWiShpTrack" parameterClass="cargo.cms.extsvc.bo.ShipmentTrackingBO" resultClass="cargo.cms.extsvc.bo.ShipmentTrackingBO">
	SELECT 
  		SUBSTR(A.AWB_NO,0,3) AS awb_prefix,
  		SUBSTR(a.AWB_NO,4) AS awb_suffix,
        'T' as type,
        (select cc_code from (select t1.cc_code from v_cst_imp_cc_code_awb t1,mast_constraint_code t2 
      			where t1.cc_code = t2.code and awb_no = '77715320023' and nvl(hawb_no, '000000000000000000') = '000000000000000000'
      			order by recv_date desc, priority desc) where rownum = 1) as ce_code,
      	a.ORIG as origin,
	    a.dest as destination
   	from AWB a
	  left join IMP_CAR_AWB ia on a.AWB_NO = ia.AWB_NO and a.AWB_DATE = ia.AWB_DATE 
	  LEFT JOIN EXP_CAR EA ON A.AWB_NO = EA.AWB_NO AND A.AWB_DATE = EA.AWB_DATE 	 
	  where a.AWB_NO = #awbNo# and a.AWB_DATE = #awbDate#
    and a.awb_date = (select max(awb_date) from awb where awb_no = a.awb_no)	
	ORDER BY A.AWB_TYPE ASC
</select>


<select id="getInboundFlightList_SHP_TRACK" parameterClass="cargo.cms.extsvc.bo.ShipmentTrackingBO" resultClass="cargo.cms.extsvc.bo.ShipmentTrackingBO">
	select	
		to_char(f.act_date,'DDMONYY')||' '||rtrim(SUBSTR(TRIM(TO_CHAR(f.ACT_TIME,'0000')),0,2)|| ':'||  SUBSTR(TRIM(TO_CHAR(f.ACT_TIME,'0000')),3,4), ':') as ATA,
		to_char(f.est_date,'DDMONYY')||' '||rtrim(SUBSTR(TRIM(TO_CHAR(f.EST_TIME,'0000')),0,2)|| ':'||  SUBSTR(TRIM(TO_CHAR(f.EST_TIME,'0000')),3,4), ':') as ETA,
		to_char(f.sch_date,'DDMONYY')||' '||rtrim(SUBSTR(TRIM(TO_CHAR(f.SCH_TIME,'0000')),0,2)|| ':'||  SUBSTR(TRIM(TO_CHAR(f.SCH_TIME,'0000')),3,4), ':') as STA,
	    to_char(fe.WHSE_COMPL_DATE,'DDMONYY HH24:MI') as breakdown_complete_datetime,
	    (recd_pcs + nvl(tt_pcs,0)) as breakdown_pc, 
	    trim(to_char((recd_wt + nvl(tt_wt,0)), '9999999990D9')) as breakdown_wt, 
	    a.dest destination,
	    s.flt_key as id, 
	    a.orig origin,
	    s.flt_key fltKey,
	    decode(f.STATUS,'X','true','false') cancelled,
	    TO_CHAR(s.flt_date,'DDMONYY') AS fltDate,
	    (select sum(man_pcs) from v_ffm_dtl ffm where a.awb_no=ffm.awb_no and a.awb_date = ffm.awb_date and s.flt_key = ffm.flt_key and s.flt_date = ffm.flt_date) as manifest_pc,
	    (select trim(TO_CHAR(sum(man_Wt),'9999990D99')) from v_ffm_dtl ffm where a.awb_no=ffm.awb_no and a.awb_date = ffm.awb_date and s.flt_key = ffm.flt_key and s.flt_date = ffm.flt_date) as manifest_wt,
	    f.cgo_acft_type  as flight_type,
	    (SELECT V.CC_CODE FROM V_CST_IMP_CC_CODE_AWB V
		 		WHERE V.FLT_KEY = s.flt_key AND V.FLT_DATE = s.flt_date AND V.AWB_NO = A.AWB_NO  
		 			  AND NVL(V.HAWB_NO, '000000000000000000') =  '000000000000000000' AND ROWNUM = 1) as ce_code,
	   TO_CHAR(pkg_Calculate.GET_FREE_DAYS(s.flt_DATE, s.flt_key,s.AWB_NO,s.AWB_DATE), 'DDMONYY') || ' ' || '23:59:59' free_storage_until,
      (case when (select count(1) from awb_inventory where flt_key=s.flt_key and flt_date=s.flt_DATE and flt_type='I' and awb_no=	#awbNo# and awb_date=#awbDate#) > 0 then 'Y'
       else 'N' end) storage_locations_exist,
       (select imp_srf_iss_yn from mast_constraint_code where code = (SELECT V.CC_CODE FROM V_CST_IMP_CC_CODE_AWB V
		 		WHERE V.FLT_KEY = s.flt_key AND V.FLT_DATE = s.flt_date AND V.AWB_NO = A.AWB_NO  
		 			  AND NVL(V.HAWB_NO, '000000000000000000') =  '000000000000000000' AND ROWNUM = 1)) as allow_srf_issue
		from imp_car_shp s
    	join awb a on a.awb_no=s.awb_no and a.awb_date = s.awb_date
	  	left join (select nvl(sum(actual_pcs),0) tt_pcs ,  nvl(sum (actual_wt),0) tt_wt, flt_key, flt_date, awb_no , awb_date
                from v_ddt_dtl  where ( shp_trf_type in ('TT','IF')  or  trf_type  in ('TT','IF') ) group by flt_key, flt_date, awb_no, awb_date
              ) ddt on ddt.awb_no = s.awb_no and ddt.awb_date = s.awb_date and ddt.flt_key=s.flt_key and ddt.flt_date = s.flt_date
  		join flt_opr f on f.flt_key = s.flt_key and f.sch_date = s.flt_date and f.flt_type = 'A'
    	join FLT_OPR_EVENTS fe on f.flt_key = fe.flt_key and f.sch_date = fe.sch_date and f.tr_no = fe.tr_no
 		where s.awb_no=	#awbNo# and s.awb_date=#awbDate#
</select>
<select id="getInboundFlightList_accept_SHP_TRACK" parameterClass="cargo.cms.extsvc.bo.ShipmentTrackingBO" resultClass="cargo.cms.extsvc.bo.ShipmentTrackingBO">
SELECT (carshp.RECD_PCS+NVL(tt_pcs,0))               AS accepted_pc,
       (carshp.RECD_WT +NVL(tt_wt,0))                AS accepted_wt
FROM IMP_CAR_AWB carawb
JOIN IMP_CAR_SHP carshp
ON carshp.AWB_NO    = carawb.AWB_NO
AND carshp.AWB_DATE = carawb.AWB_DATE
LEFT JOIN
  (SELECT NVL(SUM(actual_pcs),0) tt_pcs ,
    NVL(SUM (actual_Wt),0) tt_wt,
    flt_key,
    flt_date,
    awb_NO ,
    awb_date
  FROM v_ddt_dtl
  WHERE (shp_trf_type = 'TT'
  OR trf_type         = 'IF') 
  GROUP BY flt_key,
    flt_date,
    awb_NO,
    awb_date
  ) ddt
ON carshp.AWB_NO                      = ddt.AWB_NO
AND carshp.AWB_DATE                   = ddt.AWB_DATE
AND carshp.FLT_KEY                    = ddt.FLT_KEY
AND carshp.FLT_DATE                   = ddt.FLT_DATE
WHERE carawb.AWB_NO =#awbNo#
and carawb.awb_date = #awbDate#
AND carshp.FLT_KEY = #fltKey# AND  
carshp.FLT_DATE = TO_DATE(#fltDate#,'DDMONYY')
</select>
<select id="getSRFList_SHP_TRACK" parameterClass="cargo.cms.extsvc.bo.ShipmentTrackingBO" resultClass="cargo.cms.extsvc.bo.ShipmentTrackingBO">
	SELECT T.* FROM (SELECT 
	        to_char(T1.POST_DATE,'DDMONYY')||' '||rtrim(SUBSTR(TRIM(TO_CHAR(t1.post_time,'0000')),0,2)|| ':'||  SUBSTR(TRIM(TO_CHAR(t1.post_time,'0000')),3,4), ':') released_datetime,
	      	(select Sum(DLV_PCS) from IMP_SRF_FLT a where a.srf_no=T1.SRF_NO)  AS released_pc,  
          	(select trim(TO_CHAR(Sum(DLV_WT),'99999990.00')) from IMP_SRF_FLT a where a.srf_no=T1.SRF_NO) AS released_wt,          
	        to_char(t1.srf_date,'DDMONYY HH24:MI') srf_datetime,
	        t1.srf_no as srf_no,  
	        t1.srf_pcs as srf_pc,  
	        decode(t1.srf_wt,null,'',trim(to_char(nvl(t1.srf_wt,0),'99999990.00'))) as srf_wt,
         	 t1.status as srf_status,
	        t1.truck_no as truck_no,
	        to_char(T1.verified_time,'DDMONYY HH24:MI') as verify_datetime,
          (CASE WHEN T1.SRF_EXPY_DATE &lt; SYSDATE and STATUS = 'ISSUED' THEN 'EXPIRED' 
				 WHEN (STATUS = 'REISSUED'  OR STATUS='VOID') THEN 'VOID'
           			  when VERIFIED_TIME is not null and STATUS = 'ISSUED' then 'VERIFIED'
				 ELSE T1.STATUS END) AS status
		FROM 
			IMP_SRF T1
		WHERE T1.AWB_NO = #awbNo#
		and to_char( t1.awb_date, 'DDMONYY') =#awbDate#
		order by T1.SRF_DATE) T WHERE T.STATUS NOT IN ('EXPIRED','VOID')		
</select>
<select id="getSRFList_WithAccessToken_SHP_TRACK" parameterClass="cargo.cms.extsvc.bo.ShipmentTrackingBO" resultClass="cargo.cms.extsvc.bo.ShipmentTrackingBO">
	SELECT T.* FROM (SELECT 
	        to_char(T1.POST_DATE,'DDMONYY')||' '||rtrim(SUBSTR(TRIM(TO_CHAR(t1.post_time,'0000')),0,2)|| ':'||  SUBSTR(TRIM(TO_CHAR(t1.post_time,'0000')),3,4), ':') released_datetime,
	      	(select Sum(DLV_PCS) from IMP_SRF_FLT a where a.srf_no=T1.SRF_NO)  AS released_pc,  
          	(select trim(TO_CHAR(Sum(DLV_WT),'99999990.00')) from IMP_SRF_FLT a where a.srf_no=T1.SRF_NO) AS released_wt,          
	        to_char(t1.srf_date,'DDMONYY HH24:MI') srf_datetime,
	        t1.srf_no as srf_no,  
	        t1.srf_pcs as srf_pc,  
	        decode(t1.srf_wt,null,'',trim(to_char(nvl(t1.srf_wt,0),'99999990.00'))) as srf_wt,
         	 t1.status as srf_status,
	        t1.truck_no as truck_no,
	        to_char(T1.verified_time,'DDMONYY HH24:MI') as verify_datetime,
          (CASE WHEN T1.SRF_EXPY_DATE &lt; SYSDATE and STATUS = 'ISSUED' THEN 'EXPIRED' 
				 WHEN (STATUS = 'REISSUED'  OR STATUS='VOID') THEN 'VOID'
           			  when VERIFIED_TIME is not null and STATUS = 'ISSUED' then 'VERIFIED'
				 ELSE T1.STATUS END) AS status
		FROM 
			IMP_SRF T1
		WHERE T1.AWB_NO = #awbNo#
		and to_char( t1.awb_date, 'DDMONYY') =#awbDate#
		order by T1.SRF_DATE) T WHERE T.STATUS NOT IN ('EXPIRED','VOID')		
</select>

<select id="getTRFList_SHP_TRACK" parameterClass="cargo.cms.extsvc.bo.ShipmentTrackingBO" resultClass="cargo.cms.extsvc.bo.ShipmentTrackingBO">
	select  to_char(trm_date,'DDMONYY HH24:MI') as transfer_datetime,
	        (select nvl(sum(PCS),0) from imp_trm_dtl a where a.trm_no =IMP_trm_hd.trm_no) as transfer_pc,
	        (select nvl(sum(WT),0) from imp_trm_dtl a where a.trm_no =IMP_trm_hd.trm_no) as transfer_wt,
	        recd_carr as transfer_to_carrier,
	        recd_carr_handr as transfer_to
    	from imp_trm_hd where status = 'POSTED'	 and AWB_NO = #awbNo# and to_char(awb_date, 'DDMONYY') =#awbDate#
</select>

<select id="get_in_trf_list" parameterClass="cargo.cms.extsvc.bo.ShipmentTrackingBO" resultClass="cargo.cms.extsvc.bo.ShipmentTrackingBO">
SELECT trans_carr_code transfer_from_carrier,
       rcl_pcs                              AS transfer_pc,
       rcl_wt                               AS transfer_wt,
       TO_CHAR(rcl_date, 'DDMONYY HH24:MI') AS transfer_datetime
  FROM exp_rcl_hd
WHERE accpt_mode IN ('LIT', 'TIT', 'LDM') and awb_no=#awbNo# and awb_date=#awbDate#
union all
SELECT trans_carr_code transfer_from_carrier,
       a.rcl_pcs                              AS transfer_pc,
       a.rcl_wt                               AS transfer_wt,
       TO_CHAR(a.rcl_date, 'DDMONYY HH24:MI') AS transfer_datetime
  FROM exp_rcl_hd a,exp_rcl_brkdn b
WHERE a.accpt_mode IN ('LIT', 'TIT', 'LDM') and b.awb_no=#awbNo# and a.awb_date=#awbDate#
</select>

<select id="getOutboundFlightList_SHP_TRACK" parameterClass="cargo.cms.extsvc.bo.ShipmentTrackingBO" resultClass="cargo.cms.extsvc.bo.ShipmentTrackingBO">
	select 
		  to_char(t2.act_date,'DDMONYY')||' '||rtrim(SUBSTR(TRIM(TO_CHAR(t2.ACT_TIME,'0000')),0,2)|| ':'||  SUBSTR(TRIM(TO_CHAR(t2.ACT_TIME,'0000')),3,4), ':')  as ATD,
		  to_char(t2.est_date,'DDMONYY')||' '||rtrim(SUBSTR(TRIM(TO_CHAR(t2.EST_TIME,'0000')),0,2)|| ':'||  SUBSTR(TRIM(TO_CHAR(t2.EST_TIME,'0000')),3,4), ':')  as ETD,
		  to_char(t2.sch_date,'DDMONYY')||' '||rtrim(SUBSTR(TRIM(TO_CHAR(t2.SCH_TIME,'0000')),0,2)|| ':'||  SUBSTR(TRIM(TO_CHAR(t2.SCH_TIME,'0000')),3,4), ':')  as STD,
		  (select sum(shpm_assgn_pcs) from exp_manifest_dtl em where em.awb_no = #awbNo# and awb_date = #awbDate# AND FLT_KEY=t1.FLT_KEY AND FLT_DATE=T1.FLT_DATE) as departure_pc,
		  (select DECODE(sum(SHPM_ASSGN_WT),null,'',trim(TO_CHAR(NVL(sum(SHPM_ASSGN_WT),0),'99999990.00'))) from EXP_MANIFEST_DTL EM where EM.AWB_NO = #awbNo# AND AWB_DATE = #awbDate# AND FLT_KEY=t1.FLT_KEY AND FLT_DATE=T1.FLT_DATE) AS departure_wt,
		  t2.dest destination,
		  t1.flt_key as id, 
		  t2.orig origin,
		  decode(t2.STATUS,'X','true','false') cancelled,
		  t2.cgo_acft_type  as flight_type,
      (select decode(sum(offload_pcs),null,'','0','',sum(offload_pcs)) from exp_offload_uld_awb uldAwb where uldAwb.awb_no=T1.awb_no  and uldAwb.awb_date=T1.awb_date and uldAwb.flt_key=T1.flt_key and uldAwb.flt_date=T1.flt_date AND CONFIRMED_YN='Y') as offload_pc,
      (select decode(sum(offload_wt),null,'','0','',sum(offload_wt)) from exp_offload_uld_awb uldAwb where uldAwb.awb_no=T1.awb_no  and uldAwb.awb_date=T1.awb_date and uldAwb.flt_key=T1.flt_key and uldAwb.flt_date=T1.flt_date AND CONFIRMED_YN='Y') as offload_wt,
      T1.pman_pcs as pre_manifest_pc,
      T1.pman_wt as pre_manifest_wt
		from   exp_pmanifest_awb t1
	    join flt_opr t2 on t1.flt_key = t2.flt_key and t1.flt_date = t2.sch_date and t2.flt_type = 'D'
	    join flt_opr_events t3 on t3.flt_key = t2.flt_key and t3.sch_date = t2.sch_date and t3.tr_no = t2.tr_no 
	    join awb t4 on t1.awb_no = t4.awb_no and t1.awb_DATE = t4.awb_DATE
		where  t1.awb_no =  #awbNo#  and t1.awb_DATE = To_DATE(#awbDate#,'DDMONYY')
	union
 	select 
		  to_char(t2.act_date,'DDMONYY')||' '||rtrim(SUBSTR(TRIM(TO_CHAR(t2.ACT_TIME,'0000')),0,2)|| ':'||  SUBSTR(TRIM(TO_CHAR(t2.ACT_TIME,'0000')),3,4), ':')  as ATD,
		  to_char(t2.est_date,'DDMONYY')||' '||rtrim(SUBSTR(TRIM(TO_CHAR(t2.EST_TIME,'0000')),0,2)|| ':'||  SUBSTR(TRIM(TO_CHAR(t2.EST_TIME,'0000')),3,4), ':')  as ETD,
		  to_char(t2.sch_date,'DDMONYY')||' '||rtrim(substr(trim(to_char(t2.sch_time,'0000')),0,2)|| ':'||  substr(trim(to_char(t2.sch_time,'0000')),3,4), ':')  as STD,
		  (select sum(shpm_assgn_pcs) from exp_manifest_dtl em where em.awb_no = #awbNo# and awb_date = #awbDate# AND FLT_KEY=t1.FLT_KEY AND FLT_DATE=T1.FLT_DATE) as departure_pc,
		  (select DECODE(sum(SHPM_ASSGN_WT),null,'',trim(TO_CHAR(NVL(sum(SHPM_ASSGN_WT),0),'99999990.00'))) from EXP_MANIFEST_DTL EM where EM.AWB_NO = #awbNo# AND AWB_DATE = #awbDate# AND FLT_KEY=t1.FLT_KEY AND FLT_DATE=T1.FLT_DATE) AS departure_wt,
		  t2.dest destination,
		  t1.flt_key as id, 
		  t2.orig origin,
		  decode(t2.STATUS,'X','true','false') cancelled,
		  t2.cgo_acft_type  as flight_type,
      (select decode(sum(offload_pcs),null,'','0','',sum(offload_pcs)) from exp_offload_uld_awb uldAwb where uldAwb.awb_no=T1.awb_no  and uldAwb.awb_date=T1.awb_date and uldAwb.flt_key=T1.flt_key and uldAwb.flt_date=T1.flt_date AND CONFIRMED_YN='Y') as offload_pc,
      (select decode(sum(offload_wt),null,'','0','',sum(offload_wt)) from exp_offload_uld_awb uldAwb where uldAwb.awb_no=T1.awb_no  and uldAwb.awb_date=T1.awb_date and uldAwb.flt_key=T1.flt_key and uldAwb.flt_date=T1.flt_date AND CONFIRMED_YN='Y') as offload_wt,
      nvl(bulk_pcs,0)+nvl(ppk_pcs,0) pre_manifest_pc, 
      nvl(bulk_wt,0)+nvl(ppk_wt,0) pre_manifest_wt
	    from   exp_pman_tarmac_awb t1
	    join flt_opr t2 on t1.flt_key = t2.flt_key and t1.flt_date = t2.sch_date and t2.flt_type = 'D'
	    join flt_opr_events t3 on t3.flt_key = t2.flt_key and t3.sch_date = t2.sch_date and t3.tr_no = t2.tr_no 
	    join awb t4 on t1.awb_no = t4.awb_no and t1.awb_DATE = t4.awb_DATE
		where  t1.awb_no = #awbNo#  and t1.awb_DATE = To_DATE(#awbDate#,'DDMONYY')
    UNION
    select 
		  to_char(t2.act_date,'DDMONYY')||' '||rtrim(SUBSTR(TRIM(TO_CHAR(t2.ACT_TIME,'0000')),0,2)|| ':'||  SUBSTR(TRIM(TO_CHAR(t2.ACT_TIME,'0000')),3,4), ':')  as ATD,
		  ''  as ETD,
		  to_char(t2.TRUCK_FLT_DATE,'DDMONYY')||' '||rtrim(substr(trim(to_char(t2.sch_time,'0000')),0,2)|| ':'||  substr(trim(to_char(t2.sch_time,'0000')),3,4), ':')  as STD,
		  (SELECT SUM(PMAN_PCS)  FROM CDT_PMAN_AWB A, ITM_TRK_FLT B 
        WHERE B.TRUCK_FLT_NO = a.TRK_FLT_KEY AND B.TRUCK_FLT_DATE = A.TRK_FLT_DATE AND B.POST_DT IS NOT NULL AND A.AWB_NO=#awbNo# and A.AWB_DATE=#awbDate#
        AND A.TRK_FLT_KEY = T1.TRK_FLT_KEY AND A.TRK_FLT_DATE = T1.TRK_FLT_DATE ) as departure_pc,
		  (SELECT DECODE(sum(PMAN_WT),null,'',trim(TO_CHAR(NVL(sum(PMAN_WT),0),'99999990.00')))  FROM CDT_PMAN_AWB A, ITM_TRK_FLT B 
        WHERE B.TRUCK_FLT_NO = a.TRK_FLT_KEY AND B.TRUCK_FLT_DATE = A.TRK_FLT_DATE AND B.POST_DT IS NOT NULL AND A.AWB_NO=#awbNo# and A.AWB_DATE=#awbDate#
        AND A.TRK_FLT_KEY = T1.TRK_FLT_KEY AND A.TRK_FLT_DATE = T1.TRK_FLT_DATE) AS departure_wt,
		  t2.UNLDG_PT2 destination,
		  t2.TRUCK_FLT_NO as id, 
		  t2.UNLDG_PT1 origin,
		  'false' cancelled,
		  ''  as flight_type,
      (select decode(sum(offload_pcs),null,'','0','',sum(offload_pcs)) from exp_offload_uld_awb uldAwb where uldAwb.awb_no=T1.awb_no  and uldAwb.awb_date=T1.awb_date and uldAwb.flt_key=T1.TRK_FLT_KEY and uldAwb.flt_date=T1.TRK_FLT_DATE AND CONFIRMED_YN='Y') as offload_pc,
      (select decode(sum(offload_wt),null,'','0','',sum(offload_wt)) from exp_offload_uld_awb uldAwb where uldAwb.awb_no=T1.awb_no  and uldAwb.awb_date=T1.awb_date and uldAwb.flt_key=T1.TRK_FLT_KEY and uldAwb.flt_date=T1.TRK_FLT_DATE AND CONFIRMED_YN='Y') as offload_wt,
      T1.PMAN_PCS pre_manifest_pc, 
      T1.PMAN_WT pre_manifest_wt
	    from   CDT_PMAN_AWB t1
	    join itm_trk_flt t2 on t1.TRK_FLT_KEY = t2.TRUCK_FLT_NO and t1.TRK_FLT_DATE = t2.TRUCK_FLT_DATE
	   join awb t4 on t1.awb_no = t4.awb_no and t1.awb_DATE = t4.awb_DATE
		where  t1.awb_no = #awbNo#  and t1.awb_DATE = To_DATE(#awbDate#,'DDMONYY')
union
select 
		  to_char(t2.act_date,'DDMONYY')||' '||rtrim(SUBSTR(TRIM(TO_CHAR(t2.ACT_TIME,'0000')),0,2)|| ':'||  SUBSTR(TRIM(TO_CHAR(t2.ACT_TIME,'0000')),3,4), ':')  as ATD,
		  to_char(t2.est_date,'DDMONYY')||' '||rtrim(SUBSTR(TRIM(TO_CHAR(t2.EST_TIME,'0000')),0,2)|| ':'||  SUBSTR(TRIM(TO_CHAR(t2.EST_TIME,'0000')),3,4), ':')  as ETD,
		  to_char(t2.sch_date,'DDMONYY')||' '||rtrim(SUBSTR(TRIM(TO_CHAR(t2.SCH_TIME,'0000')),0,2)|| ':'||  SUBSTR(TRIM(TO_CHAR(t2.SCH_TIME,'0000')),3,4), ':')  as STD,
		  (select sum(shpm_assgn_pcs) from exp_manifest_dtl em where em.awb_no = #awbNo# and awb_date = #awbDate# AND FLT_KEY=t1.FLT_KEY AND FLT_DATE=T1.FLT_DATE) as departure_pc,
		  (select DECODE(sum(SHPM_ASSGN_WT),null,'',trim(TO_CHAR(NVL(sum(SHPM_ASSGN_WT),0),'99999990.00'))) from EXP_MANIFEST_DTL EM where EM.AWB_NO = #awbNo# AND AWB_DATE = #awbDate# AND FLT_KEY=t1.FLT_KEY AND FLT_DATE=T1.FLT_DATE) AS departure_wt,
		  t2.dest destination,
		  t1.flt_key as id, 
		  t2.orig origin,
		  decode(t2.STATUS,'X','true','false') cancelled,
		  t2.cgo_acft_type  as flight_type,
      (select decode(sum(offload_pcs),null,'','0','',sum(offload_pcs)) from exp_offload_uld_awb uldAwb where uldAwb.awb_no=T1.awb_no  and uldAwb.awb_date=T1.awb_date and uldAwb.flt_key=T1.flt_key and uldAwb.flt_date=T1.flt_date AND CONFIRMED_YN='Y') as offload_pc,
      (select decode(sum(offload_wt),null,'','0','',sum(offload_wt)) from exp_offload_uld_awb uldAwb where uldAwb.awb_no=T1.awb_no  and uldAwb.awb_date=T1.awb_date and uldAwb.flt_key=T1.flt_key and uldAwb.flt_date=T1.flt_date AND CONFIRMED_YN='Y') as offload_wt,
      0 as pre_manifest_pc,
      0 as pre_manifest_wt
		from   exp_offload_uld_awb t1
	    join flt_opr t2 on t1.flt_key = t2.flt_key and t1.flt_date = t2.sch_date and t2.flt_type = 'D'
	    join flt_opr_events t3 on t3.flt_key = t2.flt_key and t3.sch_date = t2.sch_date and t3.tr_no = t2.tr_no 
	    join awb t4 on t1.awb_no = t4.awb_no and t1.awb_DATE = t4.awb_DATE
		where  t1.awb_no =  #awbNo#  and t1.awb_DATE = To_DATE(#awbDate#,'DDMONYY')
    and NOT EXISTS (select null from exp_pmanifest_awb where flt_key=t1.flt_key and flt_date=t1.flt_date and awb_no=t1.awb_no and awb_date=t1.awb_date)
    and NOT EXISTS (select null from exp_pman_tarmac_awb where flt_key=t1.flt_key and flt_date=t1.flt_date and awb_no=t1.awb_no and awb_date=t1.awb_date)
</select>
<select id="getRCLList_SHP_TRACK" parameterClass="cargo.cms.extsvc.bo.ShipmentTrackingBO"  resultClass="cargo.cms.extsvc.bo.ShipmentTrackingBO">
	<![CDATA[
	SELECT 
	b.accpt_mode  as accpt_mode,
	b.rcl_no as rcl_no,
	TO_CHAR(b.rcl_date,'DDMONYY HH24:MI') as received_datetime, 
  	rcl_pcs as received_pc, TRIM(TO_CHAR(b.rcl_wt, '9999999990D9')) as received_wt 
	FROM 
	EXP_RCL_HD B
	WHERE 
	B.AWB_NO = #awbNo# AND
	B.AWB_DATE = #awbDate# AND B.status NOT IN ('V','R')
	UNION ALL
	SELECT 
	b.accpt_mode  as accpt_mode,
	b.rcl_no as rcl_no,
	TO_CHAR(b.rcl_date,'DDMONYY HH24:MI') as received_datetime, 
  	C.PCS as received_pc, TRIM(TO_CHAR(C.WEIGHT, '9999999990D9')) as received_wt 
	FROM 
	EXP_RCL_HD B,
  	exp_rcl_brkdn C
	WHERE 
  	C.RCL_NO = B.RCL_NO AND
	C.AWB_NO = #awbNo# AND
	C.AWB_DATE = #awbDate# AND B.status NOT IN ('V','R')
	]]> 
</select>
<select id="getRCLList_WithAccessToken_SHP_TRACK" parameterClass="cargo.cms.extsvc.bo.ShipmentTrackingBO"  resultClass="cargo.cms.extsvc.bo.ShipmentTrackingBO">
<![CDATA[
	SELECT 
	b.accpt_mode  as accpt_mode,
	b.rcl_no as rcl_no,
	TO_CHAR(b.rcl_date,'DDMONYY HH24:MI') as received_datetime, 
  	rcl_pcs as received_pc, TRIM(TO_CHAR(b.rcl_wt, '9999999990D9')) as received_wt 
	FROM 
	EXP_RCL_HD B
	WHERE 
	B.AWB_NO = #awbNo# AND
	B.AWB_DATE = #awbDate# AND B.status NOT IN ('V','R')
	UNION ALL
	SELECT 
	b.accpt_mode  as accpt_mode,
	b.rcl_no as rcl_no,
	TO_CHAR(b.rcl_date,'DDMONYY HH24:MI') as received_datetime, 
  	C.PCS as received_pc, TRIM(TO_CHAR(C.WEIGHT, '9999999990D9')) as received_wt 
	FROM 
	EXP_RCL_HD B,
  	exp_rcl_brkdn C
	WHERE 
  	C.RCL_NO = B.RCL_NO AND
	C.AWB_NO = #awbNo# AND
	C.AWB_DATE = #awbDate# AND B.status NOT IN ('V','R')
	]]> 
</select>

<select id="get_exp_srf_list" parameterClass="cargo.cms.extsvc.bo.ShipmentTrackingBO"  resultClass="cargo.cms.extsvc.bo.ShipmentTrackingBO">
SELECT T.* FROM (SELECT (SELECT SUM(RCL_RTN_PC) FROM EXP_RTN_rcl WHERE RTN_NO = H.RTN_NO) AS released_pc,
        (SELECT TO_CHAR(CR_DATE,'DDMONYY HH24:MI') FROM EXP_RTN_rcl WHERE RTN_NO = H.RTN_NO AND ROWNUM=1) released_datetime,
      (SELECT TO_CHAR(SUM(RCL_RTN_WT),'99999999999.99')  FROM EXP_RTN_rcl  WHERE RTN_NO = H.RTN_NO) AS released_wt,
      (CASE WHEN T1.SRF_EXPY_DATE &lt; SYSDATE and STATUS = 'ISSUED' THEN 'EXPIRED' 
				 WHEN (STATUS = 'REISSUED' OR STATUS='VOID') THEN 'VOID'
           			  when VERIFIED_TIME is not null and STATUS = 'ISSUED' then 'VERIFIED'
				 ELSE T1.STATUS END) AS status
FROM EXP_RTN_HD H, IMP_SRF T1
WHERE T1.SRF_NO = H.SRF_NO 
AND H.awb_no = #awbNo#
AND H.AWB_DATE=#awbDate# 
AND H.SRF_NO IS NOT NULL) T WHERE T.STATUS NOT IN ('EXPIRED','VOID')
</select>

<select id="get_SRF_POSTED_PCS_WT" parameterClass="cargo.cms.extsvc.bo.ShipmentTrackingBO"  resultClass="cargo.cms.extsvc.bo.ShipmentTrackingBO">
select delvPcs released_pc,delvWt released_wt from(
select S.AWB_NO,S.AWB_DATE,Sum(DLV_PCS) delvPcs, trim(Sum(DLV_WT)) delvWt
         from IMP_SRF_FLT sf
         join IMP_SRF s on sf.srf_no = s.srf_no and s.status = 'POSTED'
         where s.awb_no=#awbNo# and s.awb_date=#awbDate#
         group by s.awb_no,s.awb_date)
</select>
<select id="get_TER_DOC_CHARGES" parameterClass="cargo.cms.extsvc.bo.ShipmentTrackingBO"  resultClass="cargo.cms.extsvc.bo.ShipmentTrackingBO">
	SELECT
  (SELECT cc_code
  FROM
    (SELECT t1.cc_code
    FROM V_CST_IMP_CC_CODE_AWB t1,
      mast_constraint_code t2
    WHERE t1.cc_code                       = t2.code
    AND awb_no                             = #awbNo#
    AND NVL(hawb_no, '000000000000000000') = '000000000000000000'
    ORDER BY recv_date DESC,
      priority DESC
    )
  WHERE rownum = 1
  ) AS ce_code
FROM dual
</select>
<select id="get_STATUS_CE_CODE" parameterClass="java.util.HashMap"  resultClass="java.lang.Integer">
select count(1) from MAST_CONSTRAINT_CODE where imp_srf_iss_yn = 'Y' and code=#ce_code#
</select>
<select id="get_SRF_POSTED_IMP_CAR_SHP_COUNT" parameterClass="cargo.cms.extsvc.bo.ShipmentTrackingBO"  resultClass="cargo.cms.extsvc.bo.ShipmentTrackingBO">
	 select SUM(a.recd_pcs) received_pc,SUM(a.recd_wt) received_wt,sum(a.manifest_pcs) manifest_pc,sum(a.manifest_wt) manifest_wt from imp_car_shp a where a.awb_no=#awbNo# and a.awb_date=#awbDate#
</select>
<select id="get_SRF_POSTED_AWB_COUNT" parameterClass="cargo.cms.extsvc.bo.ShipmentTrackingBO"  resultClass="cargo.cms.extsvc.bo.ShipmentTrackingBO">
	select pcs awbPcs,wt awbWt from awb where awb_no=#awbNo# and awb_date=#awbDate#
</select>
<select id="get_Readyforpickup" parameterClass="cargo.cms.extsvc.bo.ShipmentTrackingBO"  resultClass="java.lang.Integer">
	<![CDATA[
	select count(1) as Readyforpickup
		from imp_car_shp a
		where a.awb_no=#awbNo# and a.awb_date=#awbDate# and cc_clear_time is not null
    and (select count(1) from MAST_CONSTRAINT_CODE where imp_srf_iss_yn = 'Y' and code=#ce_code#) > 0
    and (select count(1) from AWB_inventory where awb_no=#awbNo# and awb_date=#awbDate#) > 0
    ]]>
</select>
<select id="get_Arrived_Arriving" parameterClass="cargo.cms.extsvc.bo.ShipmentTrackingBO"  resultClass="java.lang.Integer">
	select count(1) Arrived
		from imp_car_shp s
    	join awb a on a.awb_no=s.awb_no and a.awb_date = s.awb_date
	  	join flt_opr f on f.flt_key = s.flt_key and f.sch_date = s.flt_date and f.flt_type = 'A' and f.act_date is not null
    	join FLT_OPR_EVENTS fe on f.flt_key = fe.flt_key and f.sch_date = fe.sch_date and f.tr_no = fe.tr_no
 		where s.awb_no=	#awbNo# and s.awb_date=#awbDate#
</select>

<select id="get_fltCustmOut_PCS_WT" parameterClass="cargo.cms.extsvc.bo.ShipmentTrackingBO"  resultClass="cargo.cms.extsvc.bo.ShipmentTrackingBO">
   select (select sum(shpm_assgn_pcs) from exp_manifest_dtl em where em.awb_no = #awbNo# and awb_date = #awbDate#) as departure_pc,
		  (select DECODE(sum(SHPM_ASSGN_WT),null,'',trim(TO_CHAR(NVL(sum(SHPM_ASSGN_WT),0),'99999990.00'))) from EXP_MANIFEST_DTL EM where EM.AWB_NO = #awbNo# AND AWB_DATE = #awbDate#) AS departure_wt
	      from 	exp_pmanifest_awb t1
	      join flt_opr t2 on t1.flt_key = t2.flt_key and t1.flt_date = t2.sch_date and t2.flt_type = 'D'
	      join flt_opr_events t3 on t3.flt_key = t2.flt_key and t3.sch_date = t2.sch_date and t3.tr_no = t2.tr_no and t3.ctm_out_date is not null
	      where  t1.awb_no =  #awbNo#  and t1.awb_DATE = To_DATE(#awbDate#,'DDMONYY')
union 
	select (select sum(shpm_assgn_pcs) from exp_manifest_dtl em where em.awb_no = #awbNo# and awb_date = #awbDate#) as departure_pc,
		  (select DECODE(sum(SHPM_ASSGN_WT),null,'',trim(TO_CHAR(NVL(sum(SHPM_ASSGN_WT),0),'99999990.00'))) from EXP_MANIFEST_DTL EM where EM.AWB_NO = #awbNo# AND AWB_DATE = #awbDate#) AS departure_wt
	      from 	exp_pman_tarmac_awb t1
	      join flt_opr t2 on t1.flt_key = t2.flt_key and t1.flt_date = t2.sch_date and t2.flt_type = 'D'
	      join flt_opr_events t3 on t3.flt_key = t2.flt_key and t3.sch_date = t2.sch_date and t3.tr_no = t2.tr_no and t3.ctm_out_date is not null
	      where  t1.awb_no =  #awbNo#  and t1.awb_DATE = To_DATE(#awbDate#,'DDMONYY')
</select>
<select id="get_AWBPcWt_departurePcWt_Count" parameterClass="cargo.cms.extsvc.bo.ShipmentTrackingBO"  resultClass="java.lang.Integer">
	select count(1) from awb t1
		where  t1.awb_no =  #awbNo#  and t1.awb_DATE = To_DATE(#awbDate#,'DDMONYY') and pcs=#departure_pc# and wt=#departure_wt#
</select>

<select id="get_Total_flight_list_Count_for_AWB" parameterClass="cargo.cms.extsvc.bo.ShipmentTrackingBO"  resultClass="java.lang.Integer">
	select NVL(sum(cnt),0) from (
        select count(*) cnt from exp_pmanifest_awb where awb_no=#awbNo# and awb_date=#awbDate# group by flt_key,flt_date
        union all
        select count(*) cnt from exp_pman_tarmac_awb where awb_no=#awbNo# and awb_date=#awbDate# group by flt_key,flt_date)  
</select>

<select id="get_Total_NO_ATD_flight_list_Count_for_AWB" parameterClass="cargo.cms.extsvc.bo.ShipmentTrackingBO"  resultClass="java.lang.Integer">
select NVL(sum(cnt),0) from(
select count(*) cnt   from 	exp_pmanifest_awb t1
	      join flt_opr t2 on t1.flt_key = t2.flt_key and t1.flt_date = t2.sch_date and t2.flt_type = 'D' and t2.act_date is null
	      join flt_opr_events t3 on t3.flt_key = t2.flt_key and t3.sch_date = t2.sch_date and t3.tr_no = t2.tr_no 
	      where  t1.awb_no =  #awbNo#  and t1.awb_DATE = To_DATE(#awbDate#,'DDMONYY')
union all
	select count(*) cnt from 	exp_pman_tarmac_awb t1
	      join flt_opr t2 on t1.flt_key = t2.flt_key and t1.flt_date = t2.sch_date and t2.flt_type = 'D' and t2.act_date is null
	      join flt_opr_events t3 on t3.flt_key = t2.flt_key and t3.sch_date = t2.sch_date and t3.tr_no = t2.tr_no 
	      where  t1.awb_no =  #awbNo#  and t1.awb_DATE = To_DATE(#awbDate#,'DDMONYY'))
</select>



<select id="get_Trans_depStatus" parameterClass="cargo.cms.extsvc.bo.ShipmentTrackingBO"  resultClass="java.lang.String">
<![CDATA[
select 
case when t3.cnt > 0 and a.pcs=t3.depPc and  a.wt=t3.depWt then 'Departed'
else 
case when t3.cnt > 0 and a.pcs!=t3.depPc and  a.wt!=t3.depWt then 'Partial uplifted'
end
end as status
from awb a,
(select nvl(t1.cnt,0)+nvl(t2.cnt,0) cnt ,nvl(t1.departure_pc,0)+nvl(t2.transfer_pc,0) depPc, nvl(t1.departure_wt,0)+nvl(t2.transfer_wt,0) depWt from 
( select count(1) cnt ,  (select sum(shpm_assgn_pcs) from exp_manifest_dtl em where em.awb_no = #awbNo# and awb_date = #awbDate#) as departure_pc,
		  (select DECODE(sum(SHPM_ASSGN_WT),null,'',trim(TO_CHAR(NVL(sum(SHPM_ASSGN_WT),0),'99999990.00'))) from EXP_MANIFEST_DTL EM where EM.AWB_NO = #awbNo# AND AWB_DATE = #awbDate#) AS departure_wt,
      t1.awb_no,t1.awb_date
      from 	exp_pmanifest_awb t1
      join flt_opr t2 on t1.flt_key = t2.flt_key and t1.flt_date = t2.sch_date and t2.flt_type = 'D'
      join flt_opr_events t3 on t3.flt_key = t2.flt_key and t3.sch_date = t2.sch_date and t3.tr_no = t2.tr_no and t3.ctm_out_date is not null
      where  t1.awb_no =  #awbNo#  and t1.awb_DATE = To_DATE(#awbDate#,'DDMONYY')
      group by t1.awb_no,t1.awb_date
union 
select  count(1) cnt , (select sum(shpm_assgn_pcs) from exp_manifest_dtl em where em.awb_no = #awbNo# and awb_date = #awbDate#) as departure_pc,
		  (select DECODE(sum(SHPM_ASSGN_WT),null,'',trim(TO_CHAR(NVL(sum(SHPM_ASSGN_WT),0),'99999990.00'))) from EXP_MANIFEST_DTL EM where EM.AWB_NO = #awbNo# AND AWB_DATE = #awbDate#) AS departure_wt,
      t1.awb_no,t1.awb_date
      from 	exp_pman_tarmac_awb t1
      join flt_opr t2 on t1.flt_key = t2.flt_key and t1.flt_date = t2.sch_date and t2.flt_type = 'D'
      join flt_opr_events t3 on t3.flt_key = t2.flt_key and t3.sch_date = t2.sch_date and t3.tr_no = t2.tr_no and t3.ctm_out_date is not null
      where  t1.awb_no =  #awbNo#  and t1.awb_DATE = To_DATE(#awbDate#,'DDMONYY')
      group by t1.awb_no,t1.awb_date
      ) t1,
(select count(1) cnt , t1.awb_no,t1.awb_date,
  sum(t1.PCS) as transfer_pc,
  sum(t1.WT) as transfer_wt
  from imp_trm_dtl t1 
  join imp_trm_hd t2 on t1.trm_no = t2.trm_no and t2.status ='POSTED'
  where t1.awb_no=#awbNo# and t1.awb_DATE=#awbDate#
  group by t1.awb_no,t1.awb_date) t2
where t2.awb_no (+)= t1.awb_no and t2.awb_DATE (+)= t1.awb_DATE) t3
where a.awb_no=#awbNo# and a.awb_DATE=#awbDate#
]]>
</select>

<select id="get_depStatus" parameterClass="cargo.cms.extsvc.bo.ShipmentTrackingBO"  resultClass="java.lang.String">
<![CDATA[
select 
case when t1.cnt > 0 and a.pcs=t1.departure_pc and  a.wt=t1.departure_wt then 'Departed'
else 
case when t1.cnt > 0 and a.pcs!=t1.departure_pc and  a.wt!=t1.departure_wt then 'Partial Uplift'
end
end as status
from awb a,
( select count(1) cnt ,  (select sum(shpm_assgn_pcs) from exp_manifest_dtl em where em.awb_no = #awbNo# and awb_date = #awbDate#) as departure_pc,
		  (select DECODE(sum(SHPM_ASSGN_WT),null,'',trim(TO_CHAR(NVL(sum(SHPM_ASSGN_WT),0),'99999990.00'))) from EXP_MANIFEST_DTL EM where EM.AWB_NO = #awbNo# AND AWB_DATE = #awbDate#) AS departure_wt,
      t1.awb_no,t1.awb_date
      from 	exp_pmanifest_awb t1
      join flt_opr t2 on t1.flt_key = t2.flt_key and t1.flt_date = t2.sch_date and t2.flt_type = 'D'
      join flt_opr_events t3 on t3.flt_key = t2.flt_key and t3.sch_date = t2.sch_date and t3.tr_no = t2.tr_no and t3.ctm_out_date is not null
      where  t1.awb_no =  #awbNo#  and t1.awb_DATE = To_DATE(#awbDate#,'DDMONYY')
      group by t1.awb_no,t1.awb_date
union 
select  count(1) cnt , (select sum(shpm_assgn_pcs) from exp_manifest_dtl em where em.awb_no = #awbNo# and awb_date = #awbDate#) as departure_pc,
		  (select DECODE(sum(SHPM_ASSGN_WT),null,'',trim(TO_CHAR(NVL(sum(SHPM_ASSGN_WT),0),'99999990.00'))) from EXP_MANIFEST_DTL EM where EM.AWB_NO = #awbNo# AND AWB_DATE = #awbDate#) AS departure_wt,
      t1.awb_no,t1.awb_date
      from 	exp_pman_tarmac_awb t1
      join flt_opr t2 on t1.flt_key = t2.flt_key and t1.flt_date = t2.sch_date and t2.flt_type = 'D'
      join flt_opr_events t3 on t3.flt_key = t2.flt_key and t3.sch_date = t2.sch_date and t3.tr_no = t2.tr_no and t3.ctm_out_date is not null
      where  t1.awb_no =  #awbNo#  and t1.awb_DATE = To_DATE(#awbDate#,'DDMONYY')
      group by t1.awb_no,t1.awb_date
      ) t1
where a.awb_no=#awbNo# and a.awb_DATE=#awbDate#
]]>
</select>

<select id="get_TransStatus" parameterClass="cargo.cms.extsvc.bo.ShipmentTrackingBO"  resultClass="java.lang.String">
<![CDATA[
select 
case when t2.cnt > 0 and a.pcs=t2.transfer_pc and  a.wt=t2.transfer_wt then 'Transferred'
else 
case when t2.cnt > 0 and a.pcs!=t2.transfer_pc and  a.wt!=t2.transfer_wt then 'Partial Transfer'
end
end as status
from awb a,
(select count(1) cnt , t1.awb_no,t1.awb_date,
  sum(t1.PCS) as transfer_pc,
  sum(t1.WT) as transfer_wt
  from imp_trm_dtl t1 
  join imp_trm_hd t2 on t1.trm_no = t2.trm_no and t2.status ='POSTED'
  where t1.awb_no=#awbNo# and t1.awb_DATE=#awbDate#
  group by t1.awb_no,t1.awb_date) t2
where a.awb_no=#awbNo# and a.awb_DATE=#awbDate#
]]>
</select>

<select id="getExtFlightScheduleDetailsList" parameterClass="cargo.cms.extsvc.bo.FlightScheduleBO"  resultClass="cargo.cms.extsvc.bo.FlightScheduleBO">
	select 
	      TO_CHAR(opr.TR_NO) txnNo, opr.FLT_type fltType, opr.FLT_KEY fltKey, to_char(opr.sch_date,'DDMONYY') fltDate,
	      to_char(opr.act_date,'DDMONYY')||' '||rtrim(substr(trim(to_char(opr.act_time,'0000')),0,2)|| ':'||  substr(trim(to_char(opr.act_time,'0000')),3,4), ':') ATA,
		  TO_CHAR(OPR.EST_DATE,'DDMONYY')||' '||rtrim(substr(trim(to_char(opr.est_time,'0000')),0,2)|| ':'||  substr(trim(to_char(opr.est_time,'0000')),3,4), ':') ATA,
	      to_char(opr.sch_date,'DDMONYY')||' '||rtrim(substr(trim(to_char(opr.sch_time,'0000')),0,2)|| ':'||  substr(trim(to_char(opr.sch_time,'0000')),3,4), ':') STA,
		  opr.carr_code carrier_code,
	      dest destination,
	      opr.flt_no flight_no,
	      orig origin,
	      cgo_acft_type type,
          decode(STATUS,'X','true','false') cancelled
   from	flt_opr opr, flt_opr_events event
	  where	opr.tr_no = event.tr_no
	  <isNotEmpty property="flight_key">
	  <isNotEmpty property="flight_date">
	  and opr.flt_key=#flight_key# and to_char(opr.SCH_DATE,'DDMONYY')=to_date(#flight_date#,'DDMONYY')
	  </isNotEmpty>	</isNotEmpty>
	  <isEmpty property="flight_key">
	  <isEmpty property="flight_date">
	  	and to_date(to_char(opr.sch_date,'DDMONYY')||trim(to_char(opr.sch_time,'0000')), 'DDMONYYHH24MI')
	  	between to_date(#dateFrom#,'DDMONYYHH24MI')  and to_date(#dateTo#,'DDMONYYHH24MI')
	  	</isEmpty></isEmpty>
</select>
<select id="getExtFlightScheduleAwbs" parameterClass="cargo.cms.extsvc.bo.FlightScheduleBO"  resultClass="cargo.cms.extsvc.bo.FlightScheduleBO">
	select 
      	SUBSTR(A.AWB_NO,0,3) AS awb_prefix,
  		substr(a.awb_no,4) as awb_suffix
	    from exp_pmanifest_awb a
	    where a.flt_key=#fltKey# and a.flt_date=#fltDate#
	union
	select 
		SUBSTR(A.AWB_NO,0,3) AS awb_prefix,
	  	substr(a.awb_no,4) as awb_suffix
	    from imp_car_shp a
		where a.flt_key=#fltKey# and a.flt_date=#fltDate#
</select>
<select id="getExtFlightScheduleFltLegs" parameterClass="cargo.cms.extsvc.bo.FlightScheduleBO"  resultClass="cargo.cms.extsvc.bo.FlightScheduleBO">
	select 
	      leg.flt_type,
	      to_char(opr.act_date,'DDMONYY')||' '||rtrim(substr(trim(to_char(opr.act_time,'0000')),0,2)|| ':'||  substr(trim(to_char(opr.act_time,'0000')),3,4), ':') ATA,
		  to_char(opr.est_date,'DDMONYY')||' '||rtrim(substr(trim(to_char(opr.est_time,'0000')),0,2)|| ':'||  substr(trim(to_char(opr.est_time,'0000')),3,4), ':') ETA,
	      to_char(opr.sch_date,'DDMONYY')||' '||rtrim(substr(trim(to_char(opr.sch_time,'0000')),0,2)|| ':'||  substr(trim(to_char(opr.sch_time,'0000')),3,4), ':') STA,
		  leg.brd_point origin,
	      leg.OFF_POINT destination
	from	flt_opr_leg leg,  flt_opr opr
	where	leg.tr_no = #txnNo#	and opr.tr_no = leg.tr_no order by leg_ord
</select>

<select id="getStorageChargeList" parameterClass="cargo.cms.extsvc.bo.StorageChargeBO"  resultClass="cargo.cms.extsvc.bo.StorageChargeBO">
	select distinct awbNo,awbDate,to_char(expDate,'DDMONYY HH:MI') pick_up_date from ( 
	select ICS.awb_no awbNo,to_char(ICS.awb_date,'DDMONYY') as awbDate,trunc(pkg_Calculate.GET_FREE_DAYS(ics.flt_DATE, ics.flt_key,ics.AWB_NO,ics.AWB_DATE)) expDate 
  	from imp_car_shp ics , mast_mble_alert_awb MA
  	WHERE ICS.AWB_NO=MA.AWB_NO AND ma.sub_scr_flag='Y' and ma.type= 'storage_charge' and trunc(ics.cr_date) = trunc(sysdate)-1)
	where expDate = trunc(sysdate)+1
</select>

<parameterMap id="chargeMapMobSrv" class="map" >
	<parameter property="storageAmount" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
	<parameter property="AWBNO" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>	
	<parameter property="existingDate" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	<parameter property="F_IMPORT_PER_KILOGRAM" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
	<parameter property="F_IMPORT_PER_CONSIGNMENT" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
	<parameter property="F_EXPORT_PER_KILOGRAM" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
	<parameter property="F_EXPORT_PER_CONSIGNMENT" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
</parameterMap>
	
<procedure id="getStorageRatePkgExisting_MobSrv" parameterMap="chargeMapMobSrv">
	{? = call PKG_CALCULATE.GET_STORAGE_CHRG_UPTO (?,?,?,?,?,?)}
</procedure>

<select id="fetchMaxAWBDate_MobSrv"	parameterClass="java.lang.String" resultClass="java.lang.String">
	SELECT TO_CHAR(AWB_DATE,'DDMONYY') AS awbDate FROM AWB WHERE AWB_NO=#awbNo# AND awb_DATE=(SELECT MAX(awb_DATE) FROM AWB WHERE AWB_NO=#awbNo#)
</select>
<select id="getShpTrackAwbType_MobSrv"  parameterClass="java.util.HashMap"  resultClass="java.util.HashMap">
	SELECT awb_type as AWBTYPE,TO_CHAR(awb_date,'DDMONYY') as AWBDATE from awb where awb_no=#AWBNO# and awb_closed_yn='N'
</select>
<select id="getShpTrackRclDate_MobSrv"  parameterClass="java.util.HashMap"  resultClass="java.lang.String">
    <![CDATA[
    SELECT MIN(TO_CHAR(T.startDate,'DDMONYY')) FROM (SELECT 
	B.RCL_DATE AS startDate
	FROM 
	EXP_RCL_HD B,
	EXP_PRE_RCL_HD C
	WHERE 
	B.CR_DATE = (select min(cr_date) from exp_rcl_hd where awb_no = B.AWB_NO and status <> 'V') AND
	C.PRE_RCL_NO(+) = B.PRE_RCL_NO AND
  	B.AWB_NO = #AWB_NO# AND
	B.AWB_DATE = #AWB_DATE# AND ROWNUM=1
	UNION
	SELECT 
	C.RCL_DATE AS startDate
	FROM 
	EXP_RCL_BRKDN B,
	EXP_RCL_HD C,
	EXP_PRE_RCL_HD D
	WHERE
	C.RCL_NO = B.RCL_NO AND
	C.RCL_DATE = (select min(cr_date) from exp_rcl_hd where RCL_NO=B.RCL_NO AND status <> 'V') AND
	D.PRE_RCL_NO(+) = C.PRE_RCL_NO AND
	B.AWB_NO = #AWB_NO# AND
	B.AWB_DATE = #AWB_DATE# AND ROWNUM=1) T
	]]>
</select>
 <select id="getNonBuPcsForCharges_MobSrv"  parameterClass="java.util.HashMap"  resultClass="java.lang.String">
  	SELECT sum(NVL(inv.locn_wt,0)) wt from awb_inventory inv where awb_no = #AWB_NO# and awb_date = #AWB_DATE#
   		AND not (inv.flt_type = 'E' and inv.FLT_KEY IS not NULL  )  group by awb_no,awb_date
</select>
   
<select id="getShpTrackDateDiff_MobSrv"  parameterClass="java.util.HashMap"  resultClass="java.lang.Integer">
   SELECT to_number(TO_DATE(#existingDate#,'DDMONYY') - TO_DATE(#rclDate#,'DDMONYY'))+1 from dual
</select>
<!-- External Mobile Application Ends  -->

<select id="getAwbTypeForNotification" parameterClass="java.util.HashMap" resultClass="java.lang.String" >
select awb_type from awb where awb_no = #awbNo# and awb_date=#awbDate# and rownum=1
</select>

<select id="get_mobile_fltCustmOut_PCS_WT" parameterClass="java.util.HashMap"  resultClass="cargo.cms.afw.bo.MasterBO">
     SELECT SUM(PARAM1) param1,SUM(PARAM2) param2 FROM (select (select sum(shpm_assgn_pcs) from exp_manifest_dtl em where em.awb_no = t1.awb_no and em.awb_date = t1.awb_date and em.flt_key = t1.flt_key and em.flt_date=t1.flt_date) as param1,
		  (select DECODE(sum(SHPM_ASSGN_WT),null,'',trim(TO_CHAR(NVL(sum(SHPM_ASSGN_WT),0),'99999990.00'))) from EXP_MANIFEST_DTL EM where EM.AWB_NO = t1.awb_no AND em.AWB_DATE = t1.awb_date and em.flt_key = t1.flt_key and em.flt_date=t1.flt_date) AS param2
	      from 	exp_pmanifest_awb t1
	      join flt_opr t2 on t1.flt_key = t2.flt_key and t1.flt_date = t2.sch_date and t2.flt_type = 'D'
	      join flt_opr_events t3 on t3.flt_key = t2.flt_key and t3.sch_date = t2.sch_date and t3.tr_no = t2.tr_no and t3.ctm_out_date is not null AND ACT_DATE IS NOT NULL
	      where  t1.awb_no =  #awbNo# and awb_date=#awbDate#
      UNION ALL
       select (select sum(shpm_assgn_pcs) from exp_manifest_dtl em where em.awb_no = t1.awb_no and em.awb_date = t1.awb_date and em.flt_key = t1.flt_key and em.flt_date=t1.flt_date) as param1,
		  (select DECODE(sum(SHPM_ASSGN_WT),null,'',trim(TO_CHAR(NVL(sum(SHPM_ASSGN_WT),0),'99999990.00'))) from EXP_MANIFEST_DTL EM where EM.AWB_NO = t1.awb_no AND em.AWB_DATE = t1.awb_date and em.flt_key = t1.flt_key and em.flt_date=t1.flt_date) AS param2
	      from 	exp_pman_tarmac_awb t1
	      join flt_opr t2 on t1.flt_key = t2.flt_key and t1.flt_date = t2.sch_date and t2.flt_type = 'D'
	      join flt_opr_events t3 on t3.flt_key = t2.flt_key and t3.sch_date = t2.sch_date and t3.tr_no = t2.tr_no and t3.ctm_out_date is not null AND ACT_DATE IS NOT NULL
	      where  t1.awb_no =  #awbNo# and awb_date=#awbDate#
	      UNION ALL
        SELECT PMAN_PCS as param1,trim(TO_CHAR(NVL(PMAN_WT,0),'99999990.00')) AS param2 FROM CDT_PMAN_AWB A, ITM_TRK_FLT B 
        WHERE B.TRUCK_FLT_NO = a.TRK_FLT_KEY AND B.TRUCK_FLT_DATE = A.TRK_FLT_DATE AND B.POST_DT IS NOT NULL AND A.AWB_NO=#awbNo# and A.AWB_DATE=#awbDate#)
</select>

<select id="get_Mobile_AWBPcWt_departurePcWt_Count" parameterClass="java.util.HashMap"  resultClass="java.lang.Integer">
	select count(1) from awb t1
		where  t1.awb_no =  #awbNo#  and t1.awb_DATE = To_DATE(#awbDate#,'DDMONYY') and pcs=#departure_pc# and wt=#departure_wt#
</select>
<select id="getDocRcvdForNotification"  parameterClass="java.util.HashMap"  resultClass="java.lang.String">
select TO_CHAR(recd_date,'DDMONYY HH24:MI') from exp_doc_recd edr where edr.AWB_NO = #awbNo# and edr.AWB_DATE = To_DATE(#awbDate#,'DDMONYY') and rownum=1
</select>

<select id="get_Mobile_Total_flight_list_Count_for_AWB" parameterClass="java.util.HashMap"  resultClass="java.lang.Integer">
	select NVL(sum(cnt),0) from (
        select count(*) cnt from exp_pmanifest_awb where awb_no=#awbNo# and awb_date=#awbDate# group by flt_key,flt_date
        union all
        select count(*) cnt from exp_pman_tarmac_awb where awb_no=#awbNo# and awb_date=#awbDate# group by flt_key,flt_date)  
</select>

<select id="get_Mobile_Total_NO_ATD_flight_list_Count_for_AWB" parameterClass="java.util.HashMap"  resultClass="java.lang.Integer">
select NVL(sum(cnt),0) from(
select count(*) cnt   from 	exp_pmanifest_awb t1
	      join flt_opr t2 on t1.flt_key = t2.flt_key and t1.flt_date = t2.sch_date and t2.flt_type = 'D' and t2.act_date is null
	      join flt_opr_events t3 on t3.flt_key = t2.flt_key and t3.sch_date = t2.sch_date and t3.tr_no = t2.tr_no 
	      where  t1.awb_no =  #awbNo#  and t1.awb_DATE = To_DATE(#awbDate#,'DDMONYY')
union all
	select count(*) cnt from 	exp_pman_tarmac_awb t1
	      join flt_opr t2 on t1.flt_key = t2.flt_key and t1.flt_date = t2.sch_date and t2.flt_type = 'D' and t2.act_date is null
	      join flt_opr_events t3 on t3.flt_key = t2.flt_key and t3.sch_date = t2.sch_date and t3.tr_no = t2.tr_no 
	      where  t1.awb_no =  #awbNo#  and t1.awb_DATE = To_DATE(#awbDate#,'DDMONYY'))
</select>
 	
<select id="getdeviceidForNotification" parameterClass="java.util.HashMap" resultClass="cargo.cms.afw.bo.MasterBO" >
SELECT distinct DEVICE_ID codeId FROM mast_mble_alert_awb WHERE AWB_NO=#awbNo# AND TYPE=#type# AND sub_scr_flag='Y'
</select>

<select id="getdeviceidForAWBNotification" parameterClass="java.util.HashMap" resultClass="cargo.cms.afw.bo.MasterBO" >
SELECT distinct DEVICE_ID codeId FROM mast_mble_alert_awb WHERE AWB_NO=#awbNo# AND TYPE in ('import_arrived','import_to_be_arrived') AND sub_scr_flag='Y'
</select>

<select id="getdeviceidForFlightNotification" parameterClass="java.util.HashMap" resultClass="cargo.cms.afw.bo.MasterBO" >
SELECT distinct DEVICE_ID codeId FROM MAST_MBLE_ALERT_FLIGHT WHERE flt_key=#fltKey# and flt_date=#fltDate# AND TYPE=#type# AND sub_scr_flag='Y'
</select>

<select id="getdeviceidForNewsNotification" parameterClass="java.util.HashMap" resultClass="cargo.cms.afw.bo.MasterBO" >
SELECT distinct DEVICE_ID codeId FROM MAST_MBLE_ALERT_NEWS WHERE TYPE=#type# AND sub_scr_flag='Y'
</select>

<select id="getksidForNotification" parameterClass="java.util.HashMap" resultClass="java.lang.String" >
SELECT KSID FROM mast_mble_subscribe WHERE DEVICE_ID=#deviceId# AND sub_scr_flag='Y' and rownum=1
</select>

<select id="checkPushNotificationExist" parameterClass="java.util.HashMap"  resultClass="java.lang.Integer">
	select COUNT(*) from MAST_MBLE_PUSH_NOT_AWB where awb=#awbNo# and awb_date=#awbDate# and type=#type#
</select>
<insert id="insertPushNotification" parameterClass="java.util.HashMap" >
INSERT INTO MAST_MBLE_PUSH_NOT_AWB (TR_NO,AWB,AWB_DATE,TYPE,PUSH_SENT_DATE,SEND_IND,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,device_id,CE_CODE,STRG_CHRG) 
   VALUES (#TR_NO#,#awbNo#,#awbDate#,#type#,SYSDATE,'Y',#deviceId#,SYSDATE,#deviceId#,SYSDATE,#deviceId#,#CECODE#,#STRGCHRG#)
</insert>

<select id="get_MOBILE_SRF_POSTED_PCS_WT" parameterClass="java.util.HashMap"  resultClass="cargo.cms.afw.bo.MasterBO">
	select delvPcs param1,delvWt param2 from(
select S.AWB_NO,S.AWB_DATE,Sum(DLV_PCS) delvPcs, trim(Sum(DLV_WT)) delvWt
         from IMP_SRF_FLT sf
         join IMP_SRF s on sf.srf_no = s.srf_no and s.status = 'POSTED'
         where s.awb_no=#awbNo# and s.awb_date=#awbDate#
         group by s.awb_no,s.awb_date)
</select>
<select id="get_MOBILE_SRF_POSTED_IMP_CAR_SHP_COUNT" parameterClass="java.util.HashMap"  resultClass="cargo.cms.afw.bo.MasterBO">
		 	 select SUM(a.recd_pcs) param1,SUM(a.recd_wt) param2,sum(a.manifest_pcs) param3,sum(a.manifest_wt) param4 from imp_car_shp a where a.awb_no=#awbNo# and a.awb_date=#awbDate#
</select>
<select id="get_MOBILE_SRF_POSTED_AWB_COUNT" parameterClass="java.util.HashMap"  resultClass="cargo.cms.afw.bo.MasterBO">
	select pcs param1,wt param2 from awb where awb_no=#awbNo# and awb_date=#awbDate#
</select>
<select id="get_MOBILE_Readyforpickup" parameterClass="java.util.HashMap"  resultClass="java.lang.Integer">
	<![CDATA[
	select count(1) as Readyforpickup
		from imp_car_shp a
		where a.awb_no=#awbNo# and a.awb_date=#awbDate# and cc_clear_time is not null
    and (select count(1) from MAST_CONSTRAINT_CODE where imp_srf_iss_yn = 'Y' and code=#ce_code#) > 0
    and (select count(1) from AWB_inventory where awb_no=#awbNo# and awb_date=#awbDate#) > 0
    ]]>
</select>
<select id="getMobileImportAWBinfoShpTrack" parameterClass="java.util.HashMap" resultClass="java.lang.String">
	SELECT 
  		(select cc_code from (select t1.cc_code from v_cst_imp_cc_code_awb t1,mast_constraint_code t2 
      			where t1.cc_code = t2.code and awb_no = #awbNo# and nvl(hawb_no, '000000000000000000') = '000000000000000000'
      			order by recv_date desc, priority desc) where rownum = 1) as ce_code
   	from AWB a
	  left join IMP_CAR_AWB ia on a.AWB_NO = ia.AWB_NO and a.AWB_DATE = ia.AWB_DATE 
	  LEFT JOIN EXP_CAR EA ON A.AWB_NO = EA.AWB_NO AND A.AWB_DATE = EA.AWB_DATE 	 
	  where a.AWB_NO = #awbNo# and a.AWB_DATE = #awbDate#
    and a.awb_date = (select max(awb_date) from awb where awb_no = a.awb_no)	
	ORDER BY A.AWB_TYPE ASC
</select>
<select id="get_Mobile_Arrived_Arriving" parameterClass="java.util.HashMap"  resultClass="java.lang.Integer">
	select count(1) Arrived
		from imp_car_shp s
    	join awb a on a.awb_no=s.awb_no and a.awb_date = s.awb_date
	  	join flt_opr f on f.flt_key = s.flt_key and f.sch_date = s.flt_date and f.flt_type = 'A' and f.act_date is not null
    	join FLT_OPR_EVENTS fe on f.flt_key = fe.flt_key and f.sch_date = fe.sch_date and f.tr_no = fe.tr_no
 		where s.awb_no=	#awbNo# and s.awb_date=#awbDate#
</select>
<select id="get_MobiledepStatus" parameterClass="java.util.HashMap"  resultClass="cargo.cms.afw.bo.MasterBO">
SELECT SUM(PARAM1) param1,SUM(PARAM2) param2 FROM (select (select sum(shpm_assgn_pcs) from exp_manifest_dtl em where em.awb_no = t1.awb_no and em.awb_date = t1.awb_date and em.flt_key = t1.flt_key and em.flt_date=t1.flt_date) as param1,
		  (select DECODE(sum(SHPM_ASSGN_WT),null,'',trim(TO_CHAR(NVL(sum(SHPM_ASSGN_WT),0),'99999990.00'))) from EXP_MANIFEST_DTL EM where EM.AWB_NO = t1.awb_no AND em.AWB_DATE = t1.awb_date and em.flt_key = t1.flt_key and em.flt_date=t1.flt_date) AS param2
	      from 	exp_pmanifest_awb t1
	      join flt_opr t2 on t1.flt_key = t2.flt_key and t1.flt_date = t2.sch_date and t2.flt_type = 'D'
	      join flt_opr_events t3 on t3.flt_key = t2.flt_key and t3.sch_date = t2.sch_date and t3.tr_no = t2.tr_no and t3.ctm_out_date is not null AND ACT_DATE IS NOT NULL
	      where  t1.awb_no =  #awbNo# and t1.awb_date=#awbDate#
      UNION ALL
       select (select sum(shpm_assgn_pcs) from exp_manifest_dtl em where em.awb_no = t1.awb_no and em.awb_date = t1.awb_date and em.flt_key = t1.flt_key and em.flt_date=t1.flt_date) as param1,
		  (select DECODE(sum(SHPM_ASSGN_WT),null,'',trim(TO_CHAR(NVL(sum(SHPM_ASSGN_WT),0),'99999990.00'))) from EXP_MANIFEST_DTL EM where EM.AWB_NO = t1.awb_no AND em.AWB_DATE = t1.awb_date and em.flt_key = t1.flt_key and em.flt_date=t1.flt_date) AS param2
	      from 	exp_pman_tarmac_awb t1
	      join flt_opr t2 on t1.flt_key = t2.flt_key and t1.flt_date = t2.sch_date and t2.flt_type = 'D'
	      join flt_opr_events t3 on t3.flt_key = t2.flt_key and t3.sch_date = t2.sch_date and t3.tr_no = t2.tr_no and t3.ctm_out_date is not null AND ACT_DATE IS NOT NULL
	      where  t1.awb_no =  #awbNo# and t1.awb_date=#awbDate#
         UNION ALL
        SELECT PMAN_PCS as param1,trim(TO_CHAR(NVL(PMAN_WT,0),'99999990.00')) AS param2 FROM CDT_PMAN_AWB A, ITM_TRK_FLT B 
        WHERE B.TRUCK_FLT_NO = a.TRK_FLT_KEY AND B.TRUCK_FLT_DATE = A.TRK_FLT_DATE AND B.POST_DT IS NOT NULL AND A.AWB_NO=#awbNo# and A.AWB_DATE=#awbDate#)
</select>

<select id="get_MobiledepTruckFlightStatus" parameterClass="java.util.HashMap"  resultClass="java.lang.Integer">
SELECT COUNT(1) FROM CDT_PMAN_AWB A, ITM_TRK_FLT B 
        WHERE B.TRUCK_FLT_NO = a.TRK_FLT_KEY AND B.TRUCK_FLT_DATE = A.TRK_FLT_DATE AND B.POST_DT IS NOT NULL AND A.AWB_NO=#awbNo# and A.AWB_DATE=#awbDate#
        AND NOT EXISTS (
        SELECT NULL FROM (select T1.AWB_NO  from 	exp_pmanifest_awb t1
	      join flt_opr t2 on t1.flt_key = t2.flt_key and t1.flt_date = t2.sch_date and t2.flt_type = 'D'
	      join flt_opr_events t3 on t3.flt_key = t2.flt_key and t3.sch_date = t2.sch_date and t3.tr_no = t2.tr_no and t3.ctm_out_date is not null AND ACT_DATE IS NOT NULL
	      where  t1.awb_no =  #awbNo# and t1.awb_date=#awbDate#
      UNION ALL
       select T1.AWB_NO from 	exp_pman_tarmac_awb t1
	      join flt_opr t2 on t1.flt_key = t2.flt_key and t1.flt_date = t2.sch_date and t2.flt_type = 'D'
	      join flt_opr_events t3 on t3.flt_key = t2.flt_key and t3.sch_date = t2.sch_date and t3.tr_no = t2.tr_no and t3.ctm_out_date is not null AND ACT_DATE IS NOT NULL
	      where  t1.awb_no =  #awbNo# and t1.awb_date=#awbDate#))
</select>

<select id="get_MobileTransStatus" parameterClass="java.util.HashMap"  resultClass="cargo.cms.afw.bo.MasterBO">
select sum(t1.PCS) as param1,
  sum(t1.WT) as param2
  from imp_trm_dtl t1 
  join imp_trm_hd t2 on t1.trm_no = t2.trm_no and t2.status ='POSTED'
  where t1.awb_no=#awbNo# and t1.awb_DATE=#awbDate# AND t2.recd_carr_handr != 'CPCT'
  group by t1.awb_no,t1.awb_date
</select>
<select id="get_MobileTransAWBDetails" parameterClass="java.util.HashMap"  resultClass="cargo.cms.afw.bo.MasterBO">
	select pcs param1,wt param2 from awb where awb_no=#awbNo# and awb_date=#awbDate#
</select>
<select id="get_Mobile_cancelled_stat" parameterClass="java.util.HashMap"  resultClass="java.lang.Integer">
SELECT COUNT(1) FROM FLT_OPR OPR, FLT_OPR_EVENTS EVENT
				WHERE OPR.TR_NO = EVENT.TR_NO 
        and opr.flt_key=#fltKey#
        and opr.sch_date= #fltDate#
        AND OPR.FLT_TYPE = #fltType# AND OPR.STATUS='X'
</select>
<select id="get_Mobile_delayed_stat" parameterClass="java.util.HashMap"  resultClass="java.lang.String">
SELECT PKG_COMMON.GET_FLT_ETA(OPR.FLT_KEY,OPR.SCH_DATE,OPR.FLT_TYPE,'DD')
 FROM	FLT_OPR OPR, FLT_OPR_EVENTS EVENT
				WHERE	OPR.TR_NO = EVENT.TR_NO 
        and opr.flt_key=#fltKey#
        and opr.sch_date= #fltDate#
        AND OPR.FLT_TYPE = #fltType#
        and TO_DATE(TO_CHAR(OPR.EST_DATE,'DDMONYY')||' '||LPAD(OPR.EST_TIME,4,'0'),'DDMONYY HH24:MI') > TO_DATE(TO_CHAR(OPR.SCH_DATE,'DDMONYY')||' '||LPAD(OPR.SCH_TIME,4,'0'),'DDMONYY HH24:MI')
        AND OPR.ACT_DATE IS NULL
</select>	

<select id="checkFlightPushNotificationExist" parameterClass="java.util.HashMap"  resultClass="java.lang.Integer">
	select count(1) from MAST_MBLE_PUSH_NOT_FLT where flt_key=#fltKey# and flt_date=#fltDate# and type=#type#
</select>
<insert id="insertFlightPushNotification" parameterClass="java.util.HashMap" >
INSERT INTO MAST_MBLE_PUSH_NOT_FLT (TR_NO,flt_key,flt_date,flt_type,TYPE,PUSH_SENT_DATE,SEND_IND,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,device_id) 
   VALUES (#TR_NO#,#fltKey#,#fltDate#,#fltType#,#type#,SYSDATE,'Y',#deviceId#,SYSDATE,#deviceId#,SYSDATE,#deviceId#)
</insert>

<select id="checkNewsPushNotificationExist" parameterClass="java.util.HashMap"  resultClass="java.lang.Integer">
	select count(1) from MAST_MBLE_PUSH_NOT_NEWS where device_id=#deviceId# and type=#type#
</select>
<insert id="insertNewsPushNotification" parameterClass="java.util.HashMap" >
INSERT INTO MAST_MBLE_PUSH_NOT_NEWS (TR_NO,device_id,TYPE,PUSH_SENT_DATE,SEND_IND,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,MSG_CONTENT) 
   VALUES (#TR_NO#,#deviceId#,#type#,SYSDATE,'Y',#deviceId#,SYSDATE,#deviceId#,SYSDATE,#status#)
</insert>
<select id="checkSubscribeRecordExist" parameterClass="cargo.cms.extsvc.bo.UserSubscribeBO"  resultClass="java.lang.Integer">
	select count(1) from MAST_MBLE_SUBSCRIBE where device_id=#device_id# and ksid=#ksid#
</select>
<insert id="insertSubscribeRecord" parameterClass="cargo.cms.extsvc.bo.UserSubscribeBO" >
INSERT INTO MAST_MBLE_SUBSCRIBE (device_id,ksid,sub_scr_flag,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,locale) 
   VALUES (#device_id#,#ksid#,#subscribe#,#device_id#,SYSDATE,#device_id#,SYSDATE,#locale#)
</insert>
<update id="updateSubscribeRecord" parameterClass="cargo.cms.extsvc.bo.UserSubscribeBO">
			UPDATE MAST_MBLE_SUBSCRIBE SET 			
			sub_scr_flag = #subscribe#,
			LM_USER_ID = #device_id#,
			LM_DATE = SYSDATE
			<isNotEmpty property="locale">
			,locale = #locale#
			</isNotEmpty>
		 WHERE
			device_id=#device_id# and ksid=#ksid#
</update>

<delete id="updateSubscribeRecordtounsub" parameterClass="cargo.cms.extsvc.bo.UserSubscribeBO">
DELETE FROM MAST_MBLE_SUBSCRIBE WHERE device_id=#device_id# and ksid != #ksid#
</delete>

<select id="checkAwbAlertConfigRecordExist" parameterClass="cargo.cms.extsvc.bo.UserAlertConfigBO"  resultClass="java.lang.Integer">
	select count(1) from MAST_MBLE_ALERT_AWB where device_id=#device_id# and type=#type# and awb_no=#awb#
</select>
<insert id="insertAwbAlertConfigRecord" parameterClass="cargo.cms.extsvc.bo.UserAlertConfigBO" >
INSERT INTO MAST_MBLE_ALERT_AWB (device_id,type,awb_no,sub_scr_flag,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE) 
   VALUES (#device_id#,#type#,#awb#,#subscribe#,#device_id#,SYSDATE,#device_id#,SYSDATE)
</insert>
<update id="updateAwbAlertConfigRecord" parameterClass="cargo.cms.extsvc.bo.UserAlertConfigBO">
			UPDATE MAST_MBLE_ALERT_AWB SET 			
			sub_scr_flag = #subscribe#,
			LM_USER_ID = #device_id#,
			LM_DATE = SYSDATE
		 WHERE
			device_id=#device_id# and type=#type# and awb_no=#awb#
</update>

<select id="checkFltAlertConfigRecordExist" parameterClass="cargo.cms.extsvc.bo.UserAlertConfigBO"  resultClass="java.lang.Integer">
	select count(*) from MAST_MBLE_ALERT_FLIGHT where device_id=#device_id# and type=#type# and flt_key=#flight_no# and flt_date=#date#
</select>
<insert id="insertFltAlertConfigRecord" parameterClass="cargo.cms.extsvc.bo.UserAlertConfigBO" >
INSERT INTO MAST_MBLE_ALERT_FLIGHT (device_id,type,flt_key,flt_date,sub_scr_flag, CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE) 
   VALUES (#device_id#,#type#,#flight_no#,#date#,#subscribe#,#device_id#,SYSDATE,#device_id#,SYSDATE)
</insert>
<update id="updateFltAlertConfigRecord" parameterClass="cargo.cms.extsvc.bo.UserAlertConfigBO">
			UPDATE MAST_MBLE_ALERT_FLIGHT SET 			
			sub_scr_flag = #subscribe#,
			LM_USER_ID = #device_id#,
			LM_DATE = SYSDATE
		 WHERE
			device_id=#device_id# and type=#type# and flt_key=#flight_no# and flt_date=#date#
</update>

<select id="checkNewsAlertConfigRecordExist" parameterClass="cargo.cms.extsvc.bo.UserAlertConfigBO"  resultClass="java.lang.Integer">
	select count(*) from MAST_MBLE_ALERT_NEWS where device_id=#device_id# and type=#type#
</select>
<insert id="insertNewsAlertConfigRecord" parameterClass="cargo.cms.extsvc.bo.UserAlertConfigBO" >
   INSERT INTO MAST_MBLE_ALERT_NEWS (device_id,type,sub_scr_flag, CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE) 
   VALUES (#device_id#,#type#,#subscribe#,#device_id#,SYSDATE,#device_id#,SYSDATE)
</insert>
<update id="updateNewsAlertConfigRecord" parameterClass="cargo.cms.extsvc.bo.UserAlertConfigBO">
			UPDATE MAST_MBLE_ALERT_NEWS SET 			
			sub_scr_flag = #subscribe#,
			LM_USER_ID = #device_id#,
			LM_DATE = SYSDATE
		 WHERE
			device_id=#device_id# and type=#type#
</update>
<select id="UserAlertAWBList" parameterClass="cargo.cms.extsvc.bo.UserAlertConfigBO"  resultClass="cargo.cms.extsvc.bo.UserAlertConfigBO">
	select device_id device_id,awb_no awb,type type,sub_scr_flag subscribe from MAST_MBLE_ALERT_AWB where device_id=#device_id# order by type
</select>

<select id="UserAlertFlightList" parameterClass="cargo.cms.extsvc.bo.UserAlertConfigBO"  resultClass="cargo.cms.extsvc.bo.UserAlertConfigBO">
	select device_id device_id,flt_key flight_no,TO_CHAR(flt_date,'DDMONYY HH24:MI') fltDate,type type,sub_scr_flag subscribe from MAST_MBLE_ALERT_flight where device_id=#device_id# order by type
</select>

<select id="UserAlertNewsList" parameterClass="cargo.cms.extsvc.bo.UserAlertConfigBO"  resultClass="cargo.cms.extsvc.bo.UserAlertConfigBO">
	select device_id device_id,type type,sub_scr_flag subscribe from MAST_MBLE_ALERT_news where device_id=#device_id# order by type
</select>

<select id="getExtMobGetAlertsList" parameterClass="cargo.cms.extsvc.bo.ExtMobGetAlertsListBO"  resultClass="cargo.cms.extsvc.bo.ExtMobGetAlertsListBO">
	select * from (select trNo,type,id,awb,flightKey,flightDate,message,ceCode,strgChrg,datetime from (select 
		TR_NO trNo,
		type type,
		TR_NO id,
		awb awb,
    	'' flightKey,
    	TO_CHAR(sysdate,'DDMONYY') flightDate,
		'' message,
    CE_CODE ceCode,
    STRG_CHRG strgChrg,
		to_char(PUSH_SENT_DATE,'DDMONYY HH24:MI:SS') as datetime
		from 
		MAST_MBLE_PUSH_NOT_AWB 
		where  tr_no not in (select tr_no from MAST_MBLE_PUSH_ALERT_NOTN_AWB) and device_id= #device_id#
union all
select 
		TR_NO trNo,
		type type,
		TR_NO id,
    	'' awb,
		flt_key flightKey,
    TO_CHAR(flt_date,'DDMONYY') flightDate,
		'' message,
    '' ceCode,
    '' strgChrg,
		to_char(PUSH_SENT_DATE,'DDMONYY HH24:MI:SS') as datetime
		from 
		mast_mble_push_not_flt 
		where  tr_no not in (select tr_no from MAST_MBLE_PUSH_ALERT_NOTN_flt) and device_id= #device_id#
union all
select 
		TR_NO trNo,
		type type,
		TR_NO id,
    	'' awb,
		'' flightKey,
    	'' flightDate,
		MSG_CONTENT message,
    '' ceCode,
    '' strgChrg,
		to_char(PUSH_SENT_DATE,'DDMONYY HH24:MI:SS') as datetime
		from 
		mast_mble_push_not_news
		where  tr_no not in (select tr_no from MAST_MBLE_PUSH_ALERT_NOTN_NEWS) and device_id= #device_id#)
		order by datetime desc) 
		where  rownum &lt;= #listLimit#
		
</select>
<insert id="Insert_ExtMobGetAlertsList" parameterClass="cargo.cms.extsvc.bo.ExtMobGetAlertsListBO" >
INSERT INTO MAST_MBLE_PUSH_ALERT_NOTN_AWB
		  (TR_NO,device_id,SEND_DATE,SEND_STATUS,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE) 
   VALUES (#trNo#,#id#,SYSDATE,'Y','SYSTEM',SYSDATE,'SYSTEM',SYSDATE)
</insert>
<insert id="Insert_ExtMobGetAlertsFlightList" parameterClass="cargo.cms.extsvc.bo.ExtMobGetAlertsListBO" >
INSERT INTO MAST_MBLE_PUSH_ALERT_NOTN_FLT
		  (TR_NO,device_id,SEND_DATE,SEND_STATUS,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE) 
   VALUES (#trNo#,#id#,SYSDATE,'Y','SYSTEM',SYSDATE,'SYSTEM',SYSDATE)
</insert>
<insert id="Insert_ExtMobGetAlertsNewsList" parameterClass="cargo.cms.extsvc.bo.ExtMobGetAlertsListBO" >
INSERT INTO MAST_MBLE_PUSH_ALERT_NOTN_NEWS
		  (TR_NO,device_id,SEND_DATE,SEND_STATUS,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE) 
   VALUES (#trNo#,#id#,SYSDATE,'Y','SYSTEM',SYSDATE,'SYSTEM',SYSDATE)
</insert>

<select id="getUserIdForMobile" parameterClass="cargo.cms.extsvc.bo.AgentInventoryBO"  resultClass="java.lang.String">
	select userID from(select user_name as userID from SEC_USER_MOB_APP_AUTH where device_id = #device_id# order by login_date desc) where rownum=1

</select>
<select id="getCustomerNoForMobile" parameterClass="cargo.cms.extsvc.bo.AgentInventoryBO"  resultClass="java.lang.String">
	select cc.code as custNO from cust_company cc,sec_user su where su.cust_no = cc.code and su.code is not null and su.code=#userID#
</select>
<select id="getNonClosedAwbListForMobile" parameterClass="cargo.cms.extsvc.bo.AgentInventoryBO"  resultClass="cargo.cms.extsvc.bo.AgentInventoryBO">
	SELECT AWB_NO awb FROM AWB A WHERE A.AGENT_CODE=#custNO# AND A.AWB_CLOSED_YN='N'
	AND EXISTS (SELECT NULL FROM AWB_INVENTORY C WHERE C.AWB_NO = A.AWB_NO AND C.AWB_DATE = A.AWB_DATE)
</select>


<select id="getAWBNotnTrNo"  parameterClass="java.lang.String" resultClass="java.lang.String">
SELECT MBLE_PUSH_NOT_AWB_SEQ.nextval TrNo FROM DUAL
</select>
<select id="getFLTNotnTrNo"  parameterClass="java.lang.String" resultClass="java.lang.String">
SELECT MBLE_PUSH_NOT_FLT_SEQ.nextval TrNo FROM DUAL
</select>
<select id="getNEWSNotnTrNo"  parameterClass="java.lang.String" resultClass="java.lang.String">
SELECT MBLE_PUSH_NOT_NEWS_SEQ.nextval TrNo FROM DUAL
</select>
<select id="getATDstatusforMobileDep"  parameterClass="java.util.HashMap"  resultClass="java.lang.Integer">
select count(1) from flt_opr where act_date is not null and flt_key=#fltKey# and to_char(SCH_DATE,'DDMONYY')=to_date(#fltDate#,'DDMONYY') AND FLT_TYPE=#fltType#
</select>
<select id="getATAstatusforMobileArr"  parameterClass="java.util.HashMap"  resultClass="java.lang.Integer">
select count(1) from flt_opr a,IMP_TRM_DTL b  where
act_date is not null AND a.FLT_TYPE='A' and a.flt_key = b.flt_key and a.sch_date = b.flt_date AND B.TRM_NO=#trmNo#
</select>
<select id="getLangForDevice" parameterClass="map" resultClass="java.lang.String" >
	select locale from mast_mble_subscribe where device_id=#deviceId# and ksid=#ksid# and sub_scr_flag='Y' and rownum=1
</select>
<select id="getTitleForDevice" parameterClass="map" resultClass="java.lang.String" >
	select UNICODE_DESC from i18n_labels where upper(LABEL_KEY)=upper(#type#) and LANG_CODE=#language# and rownum=1
</select>

<select id="getUldRefwt_tm" parameterClass="java.lang.String" resultClass="java.lang.String">
		select DECODE(TRIM(TO_CHAR(NVL(REF_NET_WT,0), '9999999990D9')),'0.0','',DECODE(TRIM(TO_CHAR(NVL(REF_WT,0), '9999999990D9')),'0.0','',TRIM(TO_CHAR(NVL(REF_WT,0), '9999999990D9')))) as refWt from ULD_INVENTORY where ULD_KEY = #uldKey#
	</select>
<select id="getULDDetailsForHOFormNo_TM" parameterClass="java.lang.String" resultClass="cargo.cms.extsvc.bo.TransitMailBO" >
SELECT ULD_KEY AS uldKey,FLT_KEY AS flightNo,TO_CHAR(FLT_DATE,'DDMONYY') as flightDate FROM EXP_ULD_HOVER_DTL WHERE HO_FORM_NO=#PARAM#
</select>
<update id="insertsendHoverRejectDetails" parameterClass="java.util.HashMap">
INSERT INTO EXP_ULD_HOVER_REJ_DTL (TR_NO,FLT_KEY,FLT_DATE,ULD_KEY,HO_FORM_NO,HO_STATUS,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE) VALUES 
(EXP_ULD_HOVER_REJ_DTL_SEQ.nextval,#fltKey#,#fltDate#,#uldKey#,#hoFormNo#,'Rejected',#userName#,SYSDATE,#userName#,SYSDATE)		
</update>
<update id="updateHOFormStatus_mobile" parameterClass="java.util.HashMap">
		DELETE FROM EXP_ULD_HOVER_DTL WHERE HO_FORM_NO=#hoFormNo# and ULD_KEY = #uldKey#
</update> 
<update id="handoverFormListCheckoutUpdate_MOBILE" parameterClass="java.util.HashMap">
		UPDATE EXP_CHKOUT_DTL     SET     HO_FORM_NO='' WHERE ho_form_no =#hoFormNo#  and ULD_KEY = #uldKey#
	</update> 
<select id="getULDDetailsForToNo_TM" parameterClass="cargo.cms.extsvc.bo.TransitMailBO" resultClass="cargo.cms.extsvc.bo.TransitMailBO" >
	SELECT B.uld_key AS uldKey,
  c.LOC_CODE     AS locnCode , NVL(c.dam_ind,'N') as damInd,
  DECODE(TRIM(TO_CHAR(NVL(c.REF_WT,0), '9999999990D9')),'0.0','',TRIM(TO_CHAR(NVL(c.REF_WT,0), '9999999990D9'))) as refWt,
  DECODE(TRIM(TO_CHAR(NVL(c.REF_WT,0), '9999999990D9')),'0.0','',TRIM(TO_CHAR(NVL(c.REF_WT,0), '9999999990D9'))) as oldrefWt,
  DECODE(TRIM(TO_CHAR(NVL(c.tare_weight,0), '9999999990D9')),'0.0','',TRIM(TO_CHAR(NVL(c.tare_weight,0), '9999999990D9'))) AS tareWt
FROM TOW_ORDER_OUT A,
  TOW_ORDER_OUT_DTL B,
  uld_inventory c,
  exp_chkout_dtl d
WHERE b.TO_NO = A.TO_NO
and d.flt_key = a.flt_key
and d.flt_date = a.flt_date
and d.uld_key = b.uld_key
and A.status = 'ISSUED'
and nvl(d.chk_flg,'N') = 'N' and d.chkout_user is null
AND c.uld_key = b.uld_key
AND A.TO_NO   = #toNo#
UNION ALL
SELECT B.uld_key AS uldKey,
  c.LOC_CODE     AS locnCode , DECODE(C.DAM_IND,'','N','Y') as damInd,
  DECODE(TRIM(TO_CHAR(NVL(c.REF_WT,0), '9999999990D9')),'0.0','',TRIM(TO_CHAR(NVL(c.REF_WT,0), '9999999990D9'))) as refWt,
  DECODE(TRIM(TO_CHAR(NVL(c.REF_WT,0), '9999999990D9')),'0.0','',TRIM(TO_CHAR(NVL(c.REF_WT,0), '9999999990D9'))) as oldrefWt,
  DECODE(TRIM(TO_CHAR(NVL(c.tare_weight,0), '9999999990D9')),'0.0','',TRIM(TO_CHAR(NVL(c.tare_weight,0), '9999999990D9'))) AS tareWt
FROM TOW_ORDER_OUT A,
  TOW_ORDER_OUT_DTL B,
  uld_inventory c
WHERE b.TO_NO = A.TO_NO
and A.status = 'ISSUED'
AND c.uld_key = b.uld_key
AND c.loc_code IS NOT NULL AND c.owned_inv = 'Y'
AND b.remove_date IS NULL AND b.remove_user_id IS NULL
and a.type='Adhoc'
AND A.TO_NO   = #toNo#
UNION ALL
SELECT B.uld_key AS uldKey,
  c.LOC_CODE     AS locnCode , NVL(C.dam_ind,'N') as damInd,
    DECODE(TRIM(TO_CHAR(NVL(c.REF_WT,0), '9999999990D9')),'0.0','',TRIM(TO_CHAR(NVL(c.REF_WT,0), '9999999990D9'))) as refWt,
  DECODE(TRIM(TO_CHAR(NVL(c.REF_WT,0), '9999999990D9')),'0.0','',TRIM(TO_CHAR(NVL(c.REF_WT,0), '9999999990D9'))) as oldrefWt,
  DECODE(TRIM(TO_CHAR(NVL(c.tare_weight,0), '9999999990D9')),'0.0','',TRIM(TO_CHAR(NVL(c.tare_weight,0), '9999999990D9'))) AS tareWt
FROM IMP_RAMP_DOLLY_HD A,
  IMP_RAMP_DOLLY_DTL B,
  ULD_INVENTORY C
WHERE B.DOLLY_ID = A.DOLLY_ID
AND C.ULD_KEY    = B.ULD_KEY
AND C.LOC_CODE  IS NOT NULL
AND A.HO_NO      =#tiNum#
</select>

<select id="getFunctionList_TM" parameterClass="cargo.cms.extsvc.bo.TransitMailBO" resultClass="cargo.cms.extsvc.bo.TransitMailBO" >
<![CDATA[
	SELECT DISTINCT(A.CODE_DESC) funcName
      FROM SEC_MENU_CTRL A, sec_role_function b, SEC_ROLE r , SEC_SCR_FUNCTION scr  
			WHERE 
      A.CODE = b.FUNCTION_CODE AND 
      b.ROLE_CODE IN (SELECT ROLE_NAME as roleName 
                      FROM SEC_USER_ROLE a, SEC_USER b 
                      WHERE a.USER_ID=b.CODE and UPPER(B.CODE)=UPPER(#username#)
                      AND a.START_DATE < SYSDATE AND
				(a.END_DATE IS NULL OR a.END_DATE > SYSDATE)) AND
      (b.READ_YN = 'Y' OR b.FULL_YN='Y') AND
       r.CODE = b.ROLE_CODE AND
       r.ROLE_CATEGORY = 'I' AND
       A.FUNCTION_TYPE = 'M' AND
       SCR.CODE = A.CODE
       ]]>
</select>

<select id="getFlightDetailsForHOForm_TM" parameterClass="cargo.cms.extsvc.bo.TransitMailBO" resultClass="cargo.cms.extsvc.bo.TransitMailBO" >
select flt_key flightNo,to_char(flt_date,'DDMONYY') flightDate from exp_chkout_dtl where ho_form_no=#hoFormNo# and rownum=1
</select>

<select id="getULDDetailsForHOForm_TM" parameterClass="cargo.cms.extsvc.bo.TransitMailBO" resultClass="cargo.cms.extsvc.bo.TransitMailBO" >
	SELECT A.* FROM (select
				          t3.FLT_KEY as flightNo,
                  to_char(t3.FLT_DATE,'ddMONYY') as flightDate ,
                  '' as urfNo,
                  t3.ULD_bt_no as uldKey,
                  EXPHOVER.cool_dolly_id AS dollyNo,
                  DECODE(NVL(T1.CHKOUT_TIME,0), 0,TO_CHAR(T1.CHKOUT_DATE,'DDMONYY HH24:MI'),TO_CHAR(T1.CHKOUT_DATE,'DDMONYY')|| substr(TO_CHAR(T1.CHKOUT_TIME,'0000'),1,3) || ':' || substr(TO_CHAR(T1.CHKOUT_TIME,'0000'),4,5)) chkOutTime,
                  t1.HO_FORM_NO as hoFormNo,
                  to_char(EXPHOVER.PRINT_HANDOVER_DATE,'DDMONYY HH24:MI') as hoTime,
                  DECODE(t1.CHKOUT_DATE,NULL,'N','Y') chkOutInd, 
                  t2.loc_code locnCode             
                  from uld_group_type gt,
                       mast_uld_allot_group uag,
                       mast_uld_allot ua,
                       mast_uld_group ug,
                       exp_pmanifest_uld t3
                  
                  join uld_inventory t2
                  on  t3.flt_key=t2.flt_key
                  and t3.flt_date=t2.flt_date
                  and t3.uld_bt_no = t2.uld_key  
                  left join exp_chkout_dtl t1
                  on  t1.uld_key = t3.uld_bt_no
                  and t1.flt_key=t3.flt_key
                  and t1.flt_date=t3.flt_date
                  LEFT JOIN EXP_ULD_HOVER_DTL EXPHOVER ON EXPHOVER.HO_FORM_NO = t1.HO_FORM_NO AND EXPHOVER.ULD_KEY = t1.ULD_KEY
                  where   (t2.handling_mode is null or t2.handling_mode!='DT')
                  and t3.uld_bt_no not in (select uld_key from exp_flt_uld 
                                           where (Source='DLS-L' or Source='DLS-E') 
                                           and uld_key=t3.ULD_bt_no and flt_key=t3.flt_key and flt_date=t3.flt_date and FLT_TYPE='E')
                 and t3.flt_key= #flightNo#
			     and t3.flt_date=TO_DATE(#flightDate#,'DDMONYY')
			     and gt.uld_group   = uag.uld_group
				AND uag.uld_allot    = ua.uld_allot
				AND ug.uld_group     = uag.uld_group
				AND gt.uld_type      = SUBSTR(t2.ULD_TYPE, 0, 3)
                 UNION
                  select
                  t3.FLT_KEY as flightNo,
                  to_char(t3.FLT_DATE,'ddMONYY') as flightDate ,
                  '' as urfNo,
                  t3.ULD_bt_no as uldKey,
                  EXPHOVER.cool_dolly_id AS dollyNo,
                  DECODE(NVL(T1.CHKOUT_TIME,0), 0,TO_CHAR(T1.CHKOUT_DATE,'DDMONYY HH24:MI'),TO_CHAR(T1.CHKOUT_DATE,'DDMONYY')|| substr(TO_CHAR(T1.CHKOUT_TIME,'0000'),1,3) || ':' || substr(TO_CHAR(T1.CHKOUT_TIME,'0000'),4,5)) chkOutTime,
                  t1.HO_FORM_NO as hoFormNo,
                  to_char(EXPHOVER.PRINT_HANDOVER_DATE,'DDMONYY HH24:MI') as hoTime,
                  DECODE(t1.CHKOUT_DATE,NULL,'N','Y') chkOutInd, 
                  t2.loc_code locnCode              
                  from uld_group_type gt,
                       mast_uld_allot_group uag,
                       mast_uld_allot ua,
                       mast_uld_group ug,
                       exp_pman_tarmac_uld t3
                  
                  join uld_inventory t2
                  on  t3.flt_key=t2.flt_key
                  and t3.flt_date=t2.flt_date
                  and t3.uld_bt_no = t2.uld_key  
                  left join exp_chkout_dtl t1
                  on  t1.uld_key = t3.uld_bt_no
                  and t1.flt_key=t3.flt_key
                  and t1.flt_date=t3.flt_date
                 LEFT JOIN EXP_ULD_HOVER_DTL EXPHOVER ON EXPHOVER.HO_FORM_NO = t1.HO_FORM_NO AND EXPHOVER.ULD_KEY = t1.ULD_KEY
                  where (t2.handling_mode is null or t2.handling_mode!='DT')
                  and t3.uld_bt_no not in (select uld_key from exp_flt_uld 
                                           where (Source='DLS-L' or Source='DLS-E') 
                                           and uld_key=t3.ULD_bt_no and flt_key=t3.flt_key and flt_date=t3.flt_date and FLT_TYPE='E')
                  and t3.uld_bt_no in (select uld_key 
                                          from uld_inventory
                                           where (transit_type='TT' or transit_type='IF') 
                                           and imp_flt_key in (select flt_key
                                                             from v_ddt_dtl
                                                             where uld_key=t3.uld_bt_no 
                                                             and shp_cntg_flt_key=t3.flt_key
                                                             and shp_cntg_flt_date=t3.flt_date)
                                           and imp_flt_date in (select flt_date
                                                             from v_ddt_dtl
                                                             where uld_key=t3.uld_bt_no
                                                             and shp_cntg_flt_key=t3.flt_key
                                                             and shp_cntg_flt_date=t3.flt_date)
                                           )
                                           
               
                 
                 and t3.flt_key= #flightNo#
			     and t3.flt_date=TO_DATE(#flightDate#,'DDMONYY') 
                 and gt.uld_group   = uag.uld_group
				 AND uag.uld_allot    = ua.uld_allot
		         AND ug.uld_group     = uag.uld_group
		         AND gt.uld_type      = SUBSTR(t2.ULD_TYPE, 0, 3)
		         UNION
		         SELECT
                  '' as flightNo,
                  '' as flightDate ,
                  b.eir_no as urfNo,
                  b.uld_key as uldKey,
                  EXPHOVER.cool_dolly_id AS dollyNo,
                  DECODE(NVL(b.CHKOUT_TIME,0), 0,TO_CHAR(b.CHKOUT_DATE,'DDMONYY HH24:MI'),TO_CHAR(b.CHKOUT_DATE,'DDMONYY')|| substr(TO_CHAR(b.CHKOUT_TIME,'0000'),1,3) || ':' || substr(TO_CHAR(b.CHKOUT_TIME,'0000'),4,5)) chkOutTime,
                  b.HO_FORM_NO as hoFormNo,
                  to_char(EXPHOVER.PRINT_HANDOVER_DATE,'DDMONYY HH24:MI') as hoTime,
                  DECODE(b.CHKOUT_DATE,NULL,decode(a.loc_code,null,'Y','N'),'Y') chkOutInd, 
                  a.loc_code locnCode              
                  from uld_inventory a,uld_rel_dtl b
                  LEFT JOIN EXP_ULD_HOVER_DTL EXPHOVER ON EXPHOVER.HO_FORM_NO = b.HO_FORM_NO AND EXPHOVER.ULD_KEY = b.ULD_KEY
                  where a.uld_key = b.uld_key and b.ho_form_no=#hoFormNo# order by chkOutTime,hoTime desc) A  where a.hoFormNo=#hoFormNo#
</select>
<select id="isToNoExists" parameterClass="java.lang.String" resultClass="java.lang.String" >
	  select STATUS from tow_order_out where to_no = #PARAM# and rownum=1
</select>

<select id="isUserExists_TM" parameterClass="java.lang.String" resultClass="java.lang.Integer" >
	  select COUNT(1) from sec_user where upper(code) = upper(#PARAM#)
</select>

<select id="isHOFormNoExists" parameterClass="java.lang.String" resultClass="java.lang.Integer" >
	  select count(1) from (
		select count(1) AS cnt from exp_chkout_dtl where ho_form_no = #PARAM# and rownum=1
	    UNION ALL
	   select count(1) as cnt from ULD_REL_DTL where ho_form_no = #PARAM# and rownum=1) where cnt = 1
</select>

<select id="getFlightDetailsForULD_TM" parameterClass="cargo.cms.extsvc.bo.TransitMailBO" resultClass="cargo.cms.extsvc.bo.TransitMailBO" >
	select uldKey,dollyNo,flightNo,flightDate,urfNo,chkOutInd  from (
SELECT T1.ULD_KEY AS uldKey,'' as dollyNo,'' flightNo,'' flightDate,T3.EIR_NO AS urfNo,DECODE(t3.chkout_date,NULL,decode(T1.loc_code,null,'Y','N'),'Y') AS chkOutInd 
FROM ULD_INVENTORY T1, ULD_ISS_HD T2, ULD_REL_DTL T3 WHERE T2.EIR_NO = T3.EIR_NO AND T3.ULD_KEY = T1.ULD_KEY 
AND T1.ULD_KEY=#uldKey#
and not exists (select null	from ULD_INVENTORY T2,EXP_CHKOUT_DTL T3  where T3.FLT_KEY = T2.FLT_KEY AND T3.FLT_DATE = T2.FLT_DATE AND T3.ULD_KEY = T2.ULD_KEY AND T2.uld_key='AKE67611CX' and t2.flt_type='E')
UNION
select T2.ULD_KEY AS uldKey,
(SELECT cool_dolly_id FROM EXP_ULD_HOVER_DTL WHERE FLT_KEY=T2.flt_key AND FLT_DATE=T2.flt_date AND ULD_KEY=T2.ULD_KEY) AS dollyNo,
T2.flt_key flightNo,to_char(T2.flt_date,'DDMONYY') flightDate, '' AS urfNo,
	(case when (SELECT COUNT(1) from EXP_CHKOUT_DTL T1 WHERE T1.CHK_FLG = 'Y' AND T1.CHKOUT_DATE IS NOT NULL AND T1.CHKOUT_TIME IS NOT NULL AND T1.FLT_KEY=T2.FLT_KEY AND T1.FLT_DATE=T2.FLT_DATE AND T1.ULD_KEY=T2.ULD_KEY) > 0 then 'Y' else 'N' end) AS chkOutInd
	from ULD_INVENTORY T2,EXP_CHKOUT_DTL T3  where T3.FLT_KEY = T2.FLT_KEY AND T3.FLT_DATE = T2.FLT_DATE AND T3.ULD_KEY = T2.ULD_KEY AND T2.uld_key=#uldKey# and t2.flt_type='E') where rownum=1
</select>

<select id="gethoFormNoForULD_TM" parameterClass="cargo.cms.extsvc.bo.TransitMailBO" resultClass="cargo.cms.extsvc.bo.TransitMailBO" >
SELECT hoFormNo FROM (
SELECT HO_FORM_NO hoFormNo
FROM EXP_CHKOUT_DTL A,
     ULD_INVENTORY B
WHERE A.FLT_KEY = B.FLT_KEY
AND A.FLT_DATE  = B.FLT_DATE
AND A.ULD_KEY = B.ULD_KEY
AND B.FLT_TYPE = 'E'
AND B.ULD_KEY   = #uldKey# AND HO_FORM_NO IS NOT NULL
UNION
SELECT HO_FORM_NO
FROM ULD_REL_DTL A,
     ULD_ISS_HD D,
     ULD_INVENTORY B
     WHERE B.ULD_KEY = A.ULD_KEY
     AND D.EIR_NO = A.EIR_NO 
     AND A.ULD_KEY = #uldKey# AND HO_FORM_NO IS NOT NULL
     and not exists (SELECT HO_FORM_NO 
FROM EXP_CHKOUT_DTL A,
     ULD_INVENTORY B
WHERE A.FLT_KEY = B.FLT_KEY
AND A.FLT_DATE  = B.FLT_DATE
AND A.ULD_KEY = B.ULD_KEY
AND B.FLT_TYPE = 'E'
AND B.ULD_KEY   = #uldKey# AND HO_FORM_NO IS NOT NULL)) WHERE ROWNUM=1
</select>

<select id="getLocnList_TM" resultClass="cargo.cms.extsvc.bo.TransitMailBO" parameterClass="cargo.cms.extsvc.bo.TransitMailBO" >
<![CDATA[
SELECT A.CODE  AS locn,
  A.CODE_DESC  AS locnDesc,
  A.CHKOUT_IND AS groupId
FROM MAST_WH_LOC A
WHERE A.CHKOUT_IND IS NOT NULL
ORDER BY A.CHKOUT_IND,
  A.CODE DESC
]]>
</select>

<select id="getLocnList_ULDENQ" resultClass="cargo.cms.extsvc.bo.TransitMailBO" parameterClass="cargo.cms.extsvc.bo.TransitMailBO" >
<![CDATA[
SELECT A.CODE  AS locn,
  A.CODE_DESC  AS locnDesc,
  A.SHOW_LOC_ULD_ENQ AS groupId
FROM MAST_WH_LOC A
WHERE A.SHOW_LOC_ULD_ENQ IS NOT NULL
ORDER BY A.SHOW_LOC_ULD_ENQ,A.CODE DESC
]]>
</select>

<select id="getConfiguredLocnForMbleChkout" resultClass="java.lang.String" parameterClass="cargo.cms.extsvc.bo.TransitMailBO" >
SELECT RULE_VALUE FROM CMSRULES WHERE RULE_CODE='LOCN_FOR_MBLE_CHK_OUT'
</select>
<select id="getRelocateShipmentDtl_TM"  parameterClass="cargo.cms.extsvc.bo.TransitMailBO" 
	 resultClass="cargo.cms.extsvc.bo.TransitMailBO">
	 SELECT 
   A.AWB_NO as awbNo, 
   NVL(A.ULD_KEY, NVL(A.LSP_NO,A.LOC_CODE)) lspUld,
   A.LOC_CODE as locn, 
   A.LOCN_PCS as pcs
   From  AWB_INVENTORY A 
   WHERE A.AWB_NO=#awbNo#
   and A.AWB_DATE = #awbDate#
	 </select>

<select id="getAWBStorageList_TM"  parameterClass="cargo.cms.extsvc.bo.TransitMailBO" 
	 resultClass="cargo.cms.extsvc.bo.TransitMailBO">
SELECT 
   A.CARR_CODE as carrCode, 
   to_char(A.FLT_DATE,'DDMONYY') as fltDate, 
   A.FLT_KEY as fltKey, 
   A.AWB_NO as awbNo, 
   to_char(A.AWB_DATE,'DDMONYY') as awbDate, 
   A.ULD_KEY as uldKey,
   (select CONTR_CODE from ULD_INVENTORY u where u.ULD_KEY = A.ULD_KEY) as contourCode,
   A.LOC_CODE as locCode, 
   A.LOCN_PCS as locnPcs,
   A.LOCN_WT as locnWt, 
   A.LSP_NO as lspNo, 
   A.DAM_IND as damInd,
   A.SRF_NO as srfNo, 
   A.TRM_NO as trmNo,
   A.CDIF_NO as cdifNo,
   A.STRG_RMK as strgRmk,
   awb.AWB_TYPE as awbType,
   A.FLT_TYPE as fltType,
   A.SEQ_NO as seqNo,
   nvl((Select DECODE(E.PPK_IND,'Y','Y',DECODE(E.MIX_PPK_IND,'Y','Y','N')) from ULD_INVENTORY e where  e.ULD_KEY = a.ULD_KEY), 'N') ppkInd,
   NVL(A.ULD_KEY, NVL(TO_CHAR(A.LSP_NO), RTRIM(A.LOC_CODE, '/'))) uldKeyHht	 		
   From  AWB_INVENTORY A 
   JOIN AWB awb ON awb.AWB_NO = A.AWB_NO 
   AND awb.awb_date = A.awb_date
 WHERE 
	<dynamic>
		<isNotEmpty property="uldKey">
			A.ULD_KEY = #uldKey#
	     </isNotEmpty>	
		<isNotEmpty property="lspNo">
			A.LSP_NO = #lspNo#
	     </isNotEmpty>
	     <isNotEmpty property="fromLocn">
			A.LOC_CODE = #fromLocn# and A.ULD_KEY IS NULL AND A.LSP_NO IS NULL
	     </isNotEmpty>	
	     	
	</dynamic>
</select>	

<select id="getOldAWBStorageList_TM"  parameterClass="cargo.cms.extsvc.bo.TransitMailBO" 
	 resultClass="cargo.cms.imprt.bo.AWBStorDtlBO">
SELECT 
   A.CARR_CODE as carrCode, 
   to_char(A.FLT_DATE,'DDMONYY') as fltDate, 
   A.FLT_KEY as fltKey, 
   A.AWB_NO as awbNo, 
   to_char(A.AWB_DATE,'DDMONYY') as awbDate, 
   A.ULD_KEY as uldKey,
   (select CONTR_CODE from ULD_INVENTORY u where u.ULD_KEY = A.ULD_KEY) as contourCode,
   A.LOC_CODE as locCode, 
   A.LOCN_PCS as locnPcs,
   A.LOCN_WT as locnWt, 
   A.LSP_NO as lspNo, 
   A.DAM_IND as damInd,
   A.SRF_NO as srfNo, 
   A.TRM_NO as trmNo,
   A.CDIF_NO as cdifNo,
   A.STRG_RMK as strgRmk,
   awb.AWB_TYPE as awbType,
   A.FLT_TYPE as fltType,
   A.SEQ_NO as seqNo,
   A.RTN_NO rtnNo,
   nvl((Select DECODE(E.PPK_IND,'Y','Y',DECODE(E.MIX_PPK_IND,'Y','Y','N')) from ULD_INVENTORY e where  e.ULD_KEY = a.ULD_KEY), 'N') ppkInd,
   NVL(A.ULD_KEY, NVL(TO_CHAR(A.LSP_NO), RTRIM(A.LOC_CODE, '/'))) uldKeyHht	 		
   From  AWB_INVENTORY A 
   JOIN AWB awb ON awb.AWB_NO = A.AWB_NO 
   AND awb.awb_date = A.awb_date
 WHERE 
	A.SEQ_NO = #seqNo#
</select>	

<select id="getAuthTokenUser_TM" parameterClass="java.lang.String" resultClass="java.lang.String" >
	SELECT USER_NAME FROM SEC_USER_MOB_APP_AUTH WHERE  ACCESS_TOKEN = #PARAM# and STATUS='ACTIVE'		
</select>

<select id="getServiceble_TM" parameterClass="cargo.cms.extsvc.bo.TransitMailBO" resultClass="cargo.cms.extsvc.bo.TransitMailBO" >
<![CDATA[
	SELECT T2.SER_IND AS servInd,
  T2.RESV_FLG     AS resvInd,
  (
  CASE
    WHEN (SELECT COUNT(1)
      FROM mast_uld_type
      WHERE code      = SUBSTR(T2.ULD_KEY, 1, 3)
      AND (H_CONT_IND = 'Y'
      OR BT_IND       = 'Y')) > 0
    THEN 'Y'
    ELSE
      CASE
        WHEN (SELECT RULE_VALUE FROM cmsrules WHERE RULE_CODE='Dummy_H_Container') = T2.ULD_KEY
        THEN 'Y'
        ELSE
          CASE
            WHEN (SELECT COUNT(1)
              FROM EXP_PMANIFEST_ULD A
              WHERE A.ULD_BT_NO   = T2.ULD_KEY
              AND A.FLT_KEY       =T2.FLT_KEY
              AND A.FLT_DATE      =T2.FLT_DATE
              AND (A.BB_IND       = 'Y'
              OR A.NEW_CHECKIN_ULD='Y')) > 0
            THEN 'Y'
            ELSE 'N'
          END
      END
  END) bulkInd
FROM ULD_INVENTORY T2
WHERE T2.ULD_KEY=#uldKey#
]]>
</select>

<select id="getULDDtlsForBUP_TM" parameterClass="cargo.cms.extsvc.bo.TransitMailBO" resultClass="cargo.cms.extsvc.bo.TransitMailBO" >
	select T2.ULD_KEY AS uldKey,T2.flt_key flightNo,to_char(T2.flt_date,'DDMONYY') flightDate,
	T3.UNLDG_PT AS unldgPt FROM ULD_INVENTORY T2
  	left join EXP_FLT_ULD T3 on T3.FLT_KEY = T2.FLT_KEY  AND T3.FLT_DATE = T2.FLT_DATE AND T3.ULD_KEY = T2.ULD_KEY   
  	where T2.ULD_KEY=#uldKey# and T2.FLT_TYPE='E'
</select>

<select id="getScaleIdForBUP_TM" parameterClass="cargo.cms.extsvc.bo.TransitMailBO" resultClass="cargo.cms.extsvc.bo.TransitMailBO" >
SELECT LOC_CODE AS locnCode, (SELECT SCALE_ID FROM MAST_WH_LOC WHERE CODE=A.LOC_CODE AND ROWNUM=1) AS scaleId FROM ULD_INVENTORY A WHERE A.ULD_KEY=#uldKey#
</select>


<select id="getScaleIdForRCL_TM" parameterClass="cargo.cms.extsvc.bo.TransitMailBO" resultClass="cargo.cms.extsvc.bo.TransitMailBO" >
	SELECT SCALE_ID AS scaleId, printer_id AS printerId FROM MAST_WH_LOC where CODE = #locn#
</select>

<select id="getStorageBUPList_TM"  parameterClass="cargo.cms.extsvc.bo.TransitMailBO" 
	 resultClass="cargo.cms.extsvc.bo.TransitMailBO">
SELECT 
   A.CARR_CODE as carrCode, 
   to_char(A.FLT_DATE,'DDMONYY') as fltDate, 
   A.FLT_KEY as fltKey, 
   A.AWB_NO as awbNo, 
   to_char(A.AWB_DATE,'DDMONYY') as awbDate, 
   A.ULD_KEY as uldKey,
   (select CONTR_CODE from ULD_INVENTORY u where u.ULD_KEY = A.ULD_KEY) as contourCode,
   A.LOC_CODE as locCode, 
   A.LOCN_PCS as locnPcs,
   A.LOCN_WT as locnWt, 
   A.LSP_NO as lspNo, 
   A.DAM_IND as damInd,
   A.SRF_NO as srfNo, 
   A.TRM_NO as trmNo,
   A.CDIF_NO as cdifNo,
   A.STRG_RMK as strgRmk,
   awb.AWB_TYPE as awbType,
   A.FLT_TYPE as fltType,
   A.SEQ_NO as seqNo,
   nvl((Select DECODE(E.PPK_IND,'Y','Y',DECODE(E.MIX_PPK_IND,'Y','Y','N')) from ULD_INVENTORY e where  e.ULD_KEY = a.ULD_KEY), 'N') ppkInd,
   NVL(A.ULD_KEY, NVL(TO_CHAR(A.LSP_NO), RTRIM(A.LOC_CODE, '/'))) uldKeyHht,
   (awb.spl_code1 ||''|| decode(awb.spl_code2, null, '', ','|| awb.spl_code2)
      		||''|| decode(awb.spl_code3, null, '', ','|| awb.spl_code3)
      		||''|| decode(awb.spl_code4, null, '', ','|| awb.spl_code4)
      		||''|| decode(awb.spl_code5, null, '', ','|| awb.spl_code5)
      		||''|| decode(awb.spl_code6, null, '', ','|| awb.spl_code6)
      		||''|| decode(awb.spl_code7, null, '', ','|| awb.spl_code7)
      		||''|| decode(awb.spl_code8, null, '', ','|| awb.spl_code8)
      		||''|| decode(awb.spl_code9, null, '', ','|| awb.spl_code9)) AS splCode  	 		
   From  AWB_INVENTORY A 
   JOIN AWB awb ON awb.AWB_NO = A.AWB_NO 
   AND awb.awb_date = A.awb_date
 WHERE NOT(A.FLT_TYPE='E' AND A.FLT_KEY IS NOT NULL) AND TRM_NO IS NULL
	<dynamic>
		<isNotEmpty property="uldKey">
			AND A.ULD_KEY = #uldKey#
	     </isNotEmpty>			
	</dynamic>
</select>

<select id="getAWBDate_TM"  parameterClass="cargo.cms.extsvc.bo.TransitMailBO" resultClass="java.lang.String">
SELECT TO_CHAR(AWB_DATE,'DDMONYY') as awbDate FROM AWB WHERE AWB_NO=#awbNo# AND AWB_CLOSED_YN='N' and rownum=1
</select>

<select id="getStrgList_TM"  parameterClass="cargo.cms.extsvc.bo.TransitMailBO" resultClass="cargo.cms.extsvc.bo.TransitMailBO">
SELECT A.AWB_NO AS awbNo,
  A.LSP_NO      AS lspNo,
  A.ULD_KEY     AS uldKey,
  A.LOCN_PCS    AS locnPcs,
  A.SEQ_NO      AS seqNo,
  A.LOC_CODE AS locnCode,
  (B.spl_code1 ||''|| decode(B.spl_code2, null, '', ','|| B.spl_code2)
      		||''|| decode(B.spl_code3, null, '', ','|| B.spl_code3)
      		||''|| decode(B.spl_code4, null, '', ','|| B.spl_code4)
      		||''|| decode(B.spl_code5, null, '', ','|| B.spl_code5)
      		||''|| decode(B.spl_code6, null, '', ','|| B.spl_code6)
      		||''|| decode(B.spl_code7, null, '', ','|| B.spl_code7)
      		||''|| decode(B.spl_code8, null, '', ','|| B.spl_code8)
      		||''|| decode(B.spl_code9, null, '', ','|| B.spl_code9)) AS splCode  	
FROM AWB_INVENTORY A, AWB B
WHERE 
B.AWB_NO = A.AWB_NO AND
B.AWB_DATE = A.AWB_DATE AND
A.AWB_NO=#awbNo# AND
A.AWB_DATE=#awbDate# AND NOT(A.FLT_TYPE='E' AND A.FLT_KEY IS NOT NULL) AND TRM_NO IS NULL
AND NOT EXISTS(SELECT NULL FROM ULD_INVENTORY WHERE ULD_KEY = A.ULD_KEY AND (PPK_IND = 'Y' OR MIX_PPK_IND = 'Y') AND (REBUILD_YN = 'N' AND TOPUP_YN = 'N'))
</select>
<select id="checkPMANExists"  parameterClass="cargo.cms.extsvc.bo.TransitMailBO" resultClass="java.lang.Integer">
<![CDATA[
SELECT COUNT(1)
FROM EXP_PMANIFEST_AWB
WHERE FLT_KEY           =#fltKey#
AND FLT_DATE            =#fltDate#
AND AWB_NO              =#awbNo#
AND AWB_DATE            =#awbDate#
AND UNLDG_PT            =#unldgPt#
AND UNASSIGNED_BULK_PCS > 0
AND UNASSIGNED_BULK_WT  > 0
]]>
</select>


	<select id="checkHouseFlagExists"  parameterClass="cargo.cms.extsvc.bo.TransitMailBO" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM AWB WHERE AWB_NO  =#awbNo# AND AWB_DATE =#awbDate# AND NVL(HOUSE_FLG,'N') = 'Y'
	</select>
	
	<select id="checkHouseFlagExistsMap"  parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM AWB WHERE AWB_NO  =#awbNo# AND AWB_DATE =#awbDate# AND NVL(HOUSE_FLG,'N') = 'Y'
	</select>
	
<select id="getPMANDtls_tm"  parameterClass="java.util.HashMap" resultClass="cargo.cms.extsvc.bo.TransitMailBO">
<![CDATA[
SELECT NVL(SUM(PMAN_PCS),0) AS pmanPcs,TRIM(TO_CHAR(NVL(SUM(PMAN_WT),0),9999999999.9)) AS pmanWt FROM EXP_PMANIFEST_AWB WHERE FLT_KEY           =#fltKey# AND FLT_DATE            =#fltDate# AND AWB_NO              =#awbNo# AND AWB_DATE            =#awbDate# AND UNLDG_PT            =#unldgPt#
]]>
</select>

<select id="getPMANAWBDATE_tm"  parameterClass="java.util.HashMap" resultClass="cargo.cms.extsvc.bo.TransitMailBO">
<![CDATA[
SELECT to_char(awb_date,'DDMONYY') AS awbDate FROM AWB WHERE AWB_NO              =#awbNo# AND AWB_CLOSED_YN = 'N' AND ROWNUM=1
]]>
</select>


<select id="getAWBPremanifestPCWT_TM"  parameterClass="cargo.cms.extsvc.bo.TransitMailBO" resultClass="java.util.HashMap">
	select sum(unassigned_bulk_pcs) as PCS , sum(unassigned_bulk_wt) WT from exp_pmanifest_awb where flt_key = #fltKey# and flt_date = #fltDate# and awb_no = #awbNo# and awb_date = #awbDate#
</select>


<select id="sqlGetLoadShipmentAwbDtls_TM"  parameterClass="cargo.cms.extsvc.bo.TransitMailBO" resultClass="cargo.cms.export.bo.PreManifestAWBBO">
SELECT 
			A.SEQ_NO as seqNo, A.AWB_NO as awbNo, (SUBSTR(A.AWB_NO, 0, 3) || '-' || SUBSTR(A.AWB_NO, 4, 8)) as awbNoDisplay, 
			TO_CHAR(A.AWB_DATE, 'DDMONYY') as awbDate, B.CATALOG as catalog, A.LOC_CODE as whDest, A.ULD_KEY AS uldKey,A.LSP_NO as lspNo, A.LOCN_PCS as locnPcs, 
			 case when B.awb_type='T' and B.CATALOG !='TM' and (select restrict_ready_for_dispatch from mast_constraint_code where code in(select pkg_exp_val.get_exp_awb_cc_code(C.awb_no) from dual )) is null then 'Y' else 'N' end as transCCExists,			 
			 case when (select restrict_ready_for_dispatch from mast_constraint_code where code in(select pkg_exp_val.get_exp_awb_cc_code(C.awb_no) from dual )) ='Y' and B.CATALOG !='TM'  then 'Y' else 'N' end  as ccAllowYn,
			A.LOCN_WT as locnWt, A.CARR_CODE as carrCode, C.UNLDG_PT AS unldgPt,B.AWB_RMK AS whRmk,
			(B.spl_code1 ||''|| decode(B.spl_code2, null, '', ','|| B.spl_code2)
      		||''|| decode(B.spl_code3, null, '', ','|| B.spl_code3)
      		||''|| decode(B.spl_code4, null, '', ','|| B.spl_code4)
      		||''|| decode(B.spl_code5, null, '', ','|| B.spl_code5)
      		||''|| decode(B.spl_code6, null, '', ','|| B.spl_code6)
      		||''|| decode(B.spl_code7, null, '', ','|| B.spl_code7)
      		||''|| decode(B.spl_code8, null, '', ','|| B.spl_code8)
      		||''|| decode(B.spl_code9, null, '', ','|| B.spl_code9)) AS splCode  
		FROM 
			AWB_INVENTORY A LEFT JOIN EXP_PMANIFEST_AWB C ON C.AWB_NO=A.AWB_NO AND C.AWB_DATE=A.AWB_DATE AND 
			C.FLT_KEY=#fltKey# AND C.FLT_DATE=TO_DATE(#fltDate#, 'DDMONYY') LEFT JOIN AWB B ON B.AWB_NO=A.AWB_NO AND 
			A.AWB_DATE=B.AWB_DATE 
		WHERE 
		NOT(A.FLT_TYPE='E' AND A.FLT_KEY IS NOT NULL) AND TRM_NO IS NULL
    AND SEQ_NO=#seqNo#
</select>
<select id="sqlFetchAwbPcWtForLoadShipment_TM" parameterClass="cargo.cms.extsvc.bo.TransitMailBO" resultClass="java.util.HashMap">
    	SELECT 
    		LOCN_PCS as pcs, LOCN_WT as wt 
    	FROM 
    		AWB_INVENTORY 
    	WHERE 
    		SEQ_NO=#seqNo#
</select>
<select id="getContrCode_TM" parameterClass="java.lang.String" resultClass="java.lang.String">
	select CONTR_CODE from uld_type_contr where uld_type = SUBSTR(#PARAM#,0,3) AND ROWNUM=1
</select>
	<select id="getOutboundPMANInd_tm" parameterClass="map" resultClass="java.lang.String" >
	SELECT DECODE(COUNT(1),'1','Y','N')
	FROM exp_pmanifest_awb
	WHERE awb_no=#awbNo#
	AND awb_date=#awbDate#
	AND flt_key =#fltKey#
	AND flt_date=#fltDate#
	AND unldg_pt=#unldgPt#
	AND rownum  =1
	</select>
	  <select id="checkLocnCode_tm"  parameterClass="java.lang.String"  resultClass="java.lang.Integer">
	     select count(1) from MAST_WH_LOC where CODE=#PARAM#
    </select>
    
    <select id="validateFlt_tm" parameterClass="java.util.HashMap" resultClass="java.lang.String">    
        SELECT flt_cls_yn from flt_opr a, flt_opr_events b WHERE a.tr_no = b.tr_no 
			AND b.flt_type='D' AND a.flt_key = #FLT_KEY# AND a.sch_date = TO_DATE(#FLT_DATE#,'DDMONYY')
    </select>
    
    <select id="sqlValCreTarmacAwb001_tm" parameterClass="java.util.HashMap" resultClass="java.lang.String">
    select 'X' from   flt_opr_events
	    where  flt_key = #FLT_KEY#
	    and    sch_date = TO_DATE(#FLT_DATE#, 'DDMONYY')
	    and    flt_type = 'D'
	    and    final_manf_ind ='Y'
    </select>
    
    	<parameterMap id="dlsFnlzYnParamMap1" class="java.util.HashMap">
		<parameter property="STATUS" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="OUT" />	
		<parameter property="FLT_KEY" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="IN" />
		<parameter property="FLT_DATE" jdbcType="VARCHAR" javaType="java.lang.String"
			mode="IN" />			
	</parameterMap>
	
    <procedure id="sqlPkgExpDlsFnlzYn_tm" parameterMap="dlsFnlzYnParamMap1">
		{ ? = call pkg_exp_val.dls_finalize_yn(?, ?)}
	</procedure>
	<select id="CheckNBKULDisalreadyBUP_tm" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM EXP_PMANIFEST_ULD_AWB A,ULD_INVENTORY B WHERE 
			B.FLT_KEY=A.FLT_KEY AND B.FLT_DATE = A.FLT_DATE AND B.ULD_KEY = A.ULD_BT_NO AND NVL(B.HANDLING_MODE,'AAA') = 'NBK'
			AND A.FLT_KEY=#FLT_KEY# AND A.FLT_DATE=TO_DATE(#FLT_DATE#, 'DDMONYY') AND A.ULD_BT_NO=#ULD_KEY#
	</select>
	
	    <select id="sqlValUldAssign002_tm" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		select chk_flg from   exp_chkout_dtl
	      where  flt_key = #FLT_KEY#
	      and    flt_date = TO_DATE(#FLT_DATE#, 'DDMONYY')
	      and    uld_key = #ULD_KEY# and chk_flg = 'Y'
	</select>
		<select id="sqlValUldAssign003_tm" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		select t2.buildup_cdate  from   flt_opr t1, flt_opr_events t2
	      where  t1.tr_no = t2.tr_no
	      and    t1.flt_key = #FLT_KEY#
	      and    t1.sch_date = TO_DATE(#FLT_DATE#, 'DDMONYY')
	      and    t1.flt_type = 'D'
	</select>
		<select id="sqlValUldAssign004_tm" parameterClass="java.util.HashMap" resultClass="java.lang.String">
	select bldup_complete from   exp_pmanifest_uld
	      where  flt_key = #FLT_KEY#
	      and    flt_date = TO_DATE(#FLT_DATE#, 'DDMONYY')
	      and    uld_bt_no = #ULD_KEY#
	</select>
	<select id="getLogId_tm" resultClass="java.lang.String">
		SELECT LOG_WS_REQ_SEQ.NEXTVAL from dual
	</select>
	<update id="logUpdateWebserviceResponse_tm" parameterClass="java.util.Map">
		UPDATE LOG_WEBSERVICE_REQ SET
			RESPONSE_MSG=#RESPONSE_MSG#,
			SENT_DT=SYSDATE
		WHERE
			LOG_ID=#LOG_ID#
	</update>
	<insert id="logInsertWebserviceResponse_tm" parameterClass="java.util.Map">
		INSERT INTO LOG_WEBSERVICE_REQ (LOG_ID,SENDER,REQUEST_URL,SERVICE_NAME,REQUEST_MSG,RCVD_DT,RESPONSE_MSG,SENT_DT) 
		VALUES (#LOG_ID#,#SENDER#,#REQUEST_URL#,#SERVICE_NAME#,#REQUEST_MSG#,SYSDATE,#RESPONSE_MSG#,SYSDATE)
	</insert>
	
	<insert id="logInsertWebserviceRequest_tm" parameterClass="java.util.Map">
		INSERT INTO LOG_WEBSERVICE_REQ (LOG_ID,SENDER,REQUEST_URL,SERVICE_NAME,REQUEST_MSG,RCVD_DT) 
		VALUES (#LOG_ID#,#SENDER#,#REQUEST_URL#,#SERVICE_NAME#,#REQUEST_MSG#,SYSDATE)
	</insert>
	
	<insert id="logInsertWebserviceRequest_rhs" parameterClass="java.util.Map">
		INSERT INTO LOG_WEBSERVICE_REQ (LOG_ID,SENDER,REQUEST_URL,SERVICE_NAME,REQUEST_MSG,SENT_DT) 
		VALUES (#LOG_ID#,#SENDER#,#REQUEST_URL#,#SERVICE_NAME#,#REQUEST_MSG#,SYSDATE)
	</insert>
	
	<update id="logUpdateWebserviceResponse_rhs" parameterClass="java.util.Map">
		UPDATE LOG_WEBSERVICE_REQ SET
			RESPONSE_MSG=#RESPONSE_MSG#,
			RCVD_DT=SYSDATE
		WHERE
			LOG_ID=#LOG_ID#
	</update>
	
	<select id="getAccessFltDetails" parameterClass="cargo.cms.extsvc.bo.TransitMailBO" resultClass="cargo.cms.extsvc.bo.TransitMailBO">
	select CARR_CODE as carrCode,FLT_NO as flightNo,flt_key AS fltKey,to_char(sch_date,'DDMONYY') AS fltDate,'E' as flightType from flt_opr where flt_key=#fltKey# and sch_date=#fltDate# and flt_TYPE='D'
</select>
<select id="getEquipType_tm" parameterClass="java.lang.String" resultClass="java.lang.String">
<![CDATA[
	select CODE from mast_code_dtl where code_type = 'EQUIP_TYPE' AND UPPER(CODE) LIKE UPPER(#keySearchStr#) AND ROWNUM=1
	]]> 
</select>
<select id="check_uld_in_mhs_tm" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		select NVL(COUNT(1),0) from mast_wh_group where wh_type='MHS' and wh_group=(select wh_group from mast_wh_loc
    where code=(select loc_code from uld_inventory where uld_key = #uldKey#) )
	</select>
	
	<select id="getWscaleName_tm" parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT scale_name scaleName FROM WEIGHING_SCALE_DET where scale_id=#PARAM# and rownum=1
	</select>
	<update id="upULDRemark_tm" parameterClass="java.util.Map">
		UPDATE ULD_INVENTORY SET GEN_RMK=#remark# WHERE ULD_KEY=#uldKey#
	</update>
	
	<select id="getFltAndLocDtlsForULD" parameterClass="java.lang.String" resultClass="cargo.cms.extsvc.bo.TransitMailBO" >
		SELECT ULD.FLT_KEY fltKey,
		  TO_CHAR(ULD.FLT_DATE,'DDMONYY') fltDate,
		  ULD.FLT_TYPE fltType,
		  ULD.LOC_CODE locnCode,
		  ULD.ULD_KEY uldKey,
		  NVL(PMAN.BLDUP_START,'N') buStart,
		  TO_CHAR(PMAN.BLDUP_START_DATE,'DDMONYY HH24:MI') buDateTime,
		  PMAN.BLDUP_START_USER_ID buUserId,
		  PMAN.UNLDG_PT unldgPt,
      	  HDLG_MODE AS hdlgMode
		FROM ULD_INVENTORY ULD
		JOIN EXP_PMANIFEST_ULD PMAN	ON ULD.ULD_KEY = PMAN.ULD_BT_NO AND ULD.FLT_KEY = PMAN.FLT_KEY AND ULD.FLT_DATE = PMAN.FLT_DATE
		WHERE ULD.ULD_KEY = #uldKey#
	</select>
	
		<select id="getLoadTypeDetails_tm" parameterClass="java.lang.String" resultClass="cargo.cms.extsvc.bo.TransitMailBO" >
		SELECT 
		DECODE(FUN_GET_ULD_STATE(A.uld_key),'AL',TRIM(A.LOAD_TYPE),'') AS availLoadType,
		DECODE(FUN_GET_ULD_STATE(A.uld_key),'AL',(SELECT CODE_DESC FROM MAST_CODE_DTL WHERE CODE_TYPE='LOAD_TYPE' AND code=TRIM(A.LOAD_TYPE) AND GROUP_CODE='38' AND ROWNUM=1),'') AS availLoadDesc,
		DECODE(FUN_GET_ULD_STATE(A.uld_key),'AL',empty_flg,'') AS emptyInd,
		GEN_RMK as uldRemark,
		A.TARGET AS target
		FROM ULD_INVENTORY A WHERE A.ULD_KEY=#uldKey#
	</select>
	
	<select id="checkIfULDIsImportShpLoaded" parameterClass="java.lang.String" resultClass="java.lang.Integer" >
		SELECT COUNT(1) FROM AWB_INVENTORY AI, AWB A  WHERE AI.AWB_NO = A.AWB_NO AND AI.AWB_DATE = A.AWB_DATE AND AI.ULD_KEY = #uldKey# AND A.AWB_TYPE = 'I'
	</select>
	
	<select id="checkLSPInCSDMaster_tm" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		SELECT 
			COUNT(1) 
		FROM 
			MAST_CSD 
		WHERE 
			CODE=#lspNo#
	</select>
	
	<select id="chkSSPDULDOwnedInventory_tm" parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT TO_CHAR(COUNT(1)) FROM uld_inventory WHERE uld_key = #uldKey# AND LOC_CODE is null
	</select>
	<select id="chkUldExistisPPKNBK_tm" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM uld_inventory WHERE uld_key = #uldKey# and HANDLING_MODE is not null and (HANDLING_MODE='PPK' or HANDLING_MODE='NBK')
	</select>

	<update id="updateHOTimeforexpchkULD_tm" parameterClass="cargo.cms.extsvc.bo.TransitMailBO">
		<![CDATA[
			UPDATE EXP_CHKOUT_DTL
				   SET OB_HANDOVER_DATE = DECODE(CHKOUT_DATE,'',NVL(OB_HANDOVER_DATE,SYSDATE),TO_DATE(TO_CHAR(CHKOUT_DATE, 'DDMONYY')
  					   ||' '
                       ||DECODE(CHKOUT_TIME, NULL, '',SUBSTR(LPAD(CHKOUT_TIME,4,0), 1, 2)
  					   ||SUBSTR(LPAD(CHKOUT_TIME,4,0),3)),'DDMONYY HH24MI'))
				   WHERE ULD_KEY=#uldKey# AND FLT_KEY=#flightNo# AND FLT_DATE=#flightDate#
		]]>
	</update>
        <select id="getBuildupTrno_TM" parameterClass="map" resultClass="java.lang.String">
	SELECT TR_NO AS TR_NO FROM EXP_PMANIFEST_ULD_AWB WHERE FLT_KEY=#fltKey# AND FLT_DATE=#fltDate# AND ULD_BT_NO=#uldKey# AND AWB_NO=#awbNo# AND AWB_DATE= (select awb_date from awb where awb_no=#awbNo# and awb_closed_yn='N' and rownum=1) and unldg_pt = #unldgPt#
	</select>
	<select id="getBuildupAWBDate_TM" parameterClass="map" resultClass="java.lang.String">
	SELECT to_char(awb_date,'DDMONYY') AS AWB_DATE FROM EXP_PMANIFEST_ULD_AWB WHERE FLT_KEY=#fltKey# AND FLT_DATE=#fltDate# AND ULD_BT_NO=#uldKey# AND AWB_NO=#awbNo# AND AWB_DATE= (select awb_date from awb where awb_no=#awbNo# and awb_closed_yn='N' and rownum=1) and unldg_pt = #unldgPt#
	</select>
	
	<insert id="insertBuildupScanInfo_TM" parameterClass="map" >
		INSERT INTO EXP_PMANIFEST_ULD_AWB_SCAN (TR_NO,AWB_NO,AWB_DATE,SCAN_TAG_NO,SCAN_DATE,CR_USER_ID,CR_DATE,LM_USER_Id,LM_DATE) VALUES
		(#trNo#,#awbNo#,#awbDate#,#scanTagNo#,SYSDATE,#userID#,SYSDATE,#userID#,SYSDATE)
	</insert>
	<select id="getDollyULD_TM" parameterClass="cargo.cms.extsvc.bo.RampCheckInBO" resultClass="cargo.cms.extsvc.bo.RampCheckInBO" >
	SELECT FLT_KEY                AS fltKey,
	TO_CHAR(FLT_DATE,'DDMONYY') AS fltDate
	FROM IMP_RAMP_DOLLY_HD
	WHERE dolly_id=
  	(SELECT MAX(DOLLY_ID) FROM IMP_RAMP_DOLLY_DTL WHERE ULD_KEY=#uldKey# AND CR_DATE = (SELECT MAX(CR_DATE) FROM IMP_RAMP_DOLLY_DTL WHERE ULD_KEY=#uldKey#))
	</select>
<select id="getDollyULDDetails_TM" parameterClass="cargo.cms.extsvc.bo.RampCheckInBO" resultClass="cargo.cms.extsvc.bo.RampCheckInBO" >
	SELECT inb.ULD_KEY AS uldKey,
  E.DOLLY_ID       AS dollyId,
  (CASE WHEN (select COUNT(1)
    from EDI_FFM_MSG ffmMSG
    join EDI_FFM_ULD ffmULD on ffmMSG.TR_NO = ffmULD.TR_NO
    join edi_ffm_shp ffmshp on ffmMSG.TR_NO = ffmshp.TR_NO and ffmULD.Doc_line_no = ffmshp.uDoc_line_no 
    JOIN AWB A ON A.AWB_NO = ffmshp.AWB_NO AND A.AWB_DATE = ffmshp.AWB_DATE
    JOIN MAST_SPL_HAND_CODE splCode ON (splCode.code = a.spl_code1 or splCode.code = a.spl_code2 or splCode.code = a.spl_code3 or
    splCode.code = a.spl_code4 or splCode.code = a.spl_code5 or splCode.code = a.spl_code6 or
    splCode.code = a.spl_code7 or splCode.code = a.spl_code8 or splCode.code = a.spl_code9) and splCode.PRIORTY_INBD_TRNSFR = 'Y'
    where ffmMSG.FFM_STATUS = 'P' and ffmMSG.flt_key = #fltKey# and ffmMSG.flt_date=#fltDate# AND ffmULD.uld_key=inb.ULD_KEY) > 0 THEN 'Y' ELSE 'N' END) pri,
  DECODE(E.DOLLY_ID,'','','null','',(SELECT TO_CHAR(M.LM_DATE,'DDMONYY HH24:MI:SS') FROM IMP_RAMP_DOLLY_HD M WHERE M.DOLLY_ID=E.DOLLY_ID AND M.FLT_KEY=#fltKey# AND M.FLT_DATE=#fltDate# AND ROWNUM=1)) lastModDate,
  E.DAM_IND        AS damInd,
  E.EIC_IND AS eicInd,
  E.EMPTY_IND AS emptyInd,
  E.SEQ_NO         AS seqNo,
  (
  CASE
    WHEN (SELECT COUNT(1)
      FROM IMP_RAMP_DOLLY_HD
      WHERE DOLLY_ID  = E.DOLLY_ID
      AND HOVER_DATE IS NOT NULL
      AND HO_NO      IS NOT NULL) > 0
    THEN 'Y'
    ELSE 'N'
  END) AS hoverStat,
  ddtULD.CNTG_FLT_KEY cnctgFltkey,
  TO_CHAR(ddtULD.CNTG_FLT_DATE, 'DDMONYY') cnctgFltDate,
  (SELECT ACFT_PRK_BAY
  FROM FLT_OPR
  WHERE FLT_KEY                  =ddtULD.CNTG_FLT_KEY
  AND TO_CHAR(SCH_DATE,'DDMONYY')=TO_CHAR(ddtULD.CNTG_FLT_DATE, 'DDMONYY')
  AND FLT_TYPE                   = 'D'
  )                                                        AS cnctgFltBay,
  (CASE WHEN (SELECT COUNT(1) FROM v_ddt_dtl WHERE FLT_KEY=#fltKey# AND FLT_DATE=#fltDate# AND ULD_KEY=inb.ULD_KEY AND TRF_TYPE='TT') > 0 THEN 'Online ULD' ELSE 'Terminal ULD' END) AS uldType,
  (CASE WHEN (select COUNT(1)
    from EDI_FFM_MSG ffmMSG
    join EDI_FFM_ULD ffmULD on ffmMSG.TR_NO = ffmULD.TR_NO
    join edi_ffm_shp ffmshp on ffmMSG.TR_NO = ffmshp.TR_NO and ffmULD.Doc_line_no = ffmshp.uDoc_line_no 
    JOIN AWB A ON A.AWB_NO = ffmshp.AWB_NO AND A.AWB_DATE = ffmshp.AWB_DATE
    where ffmMSG.FFM_STATUS = 'P' and ffmMSG.flt_key = #fltKey# and ffmMSG.flt_date=#fltDate# AND ffmULD.uld_key=inb.ULD_KEY
    AND (A.SPL_CODE1 = 'EPD' OR A.SPL_CODE2 = 'EPD' OR A.SPL_CODE3 = 'EPD'
        OR A.SPL_CODE4 = 'EPD' OR A.SPL_CODE5 = 'EPD' OR A.SPL_CODE6 = 'EPD'
        OR A.SPL_CODE7 = 'EPD' OR A.SPL_CODE8 = 'EPD' OR A.SPL_CODE9 = 'EPD')) > 0 THEN 'Y' ELSE 'N' END) shcInd,
        (select load_type from edi_cpm_dtl where flt_key=#fltKey# and flt_date=#fltDate# and uld_key=inb.ULD_KEY and rownum=1) as cpmType
FROM IMP_RAMP_INB_CHK_DTL inb
JOIN IMP_RAMP_CHK_HD hd
ON hd.TR_NO = inb.TR_NO
JOIN FLT_OPR f
ON f.FLT_TYPE                     = 'A'
AND f.FLT_KEY                     = inb.FLT_KEY
AND TO_CHAR(f.SCH_DATE,'DDMONYY') = TO_CHAR(inb.FLT_DATE,'DDMONYY')
LEFT JOIN IMP_ULD_LIST uld
ON uld.FLT_KEY                      = inb.FLT_KEY
AND TO_CHAR(uld.FLT_DATE, 'DDMONYY')= TO_CHAR(inb.FLT_DATE, 'DDMONYY')
AND uld.ULD_KEY                     = inb.ULD_KEY
LEFT JOIN flt_opr_events flt
ON TO_CHAR(flt.SCH_DATE,'DDMONYY') = TO_CHAR(inb.FLT_DATE,'DDMONYY')
AND flt.RAMP_COMPL_YN              = 'Y'
AND flt.FLT_TYPE                   = 'A'
AND flt.CARR_CODE                  = inb.CARR_CODE
AND flt.FLT_NO                     = inb.FLT_NO
AND flt.FLT_KEY                    = inb.FLT_KEY
LEFT JOIN IMP_RAMP_DOLLY_DTL E
ON E.FLT_KEY                      = inb.FLT_KEY
AND TO_CHAR(E.FLT_DATE,'DDMONYY') = TO_CHAR(inb.FLT_DATE,'DDMONYY')
AND E.ULD_KEY                     = inb.ULD_KEY
LEFT JOIN ULD_INVENTORY K
ON K.ULD_KEY = inb.ULD_KEY
LEFT JOIN IMP_RAMP_CHK_DTL dtl
ON hd.TR_NO     = dtl.TR_NO
AND inb.ULD_KEY = dtl.ULD_KEY
LEFT OUTER JOIN DDT_MSG MSG
ON inb.FLT_KEY    = MSG.FLT_KEY
AND inb.FLT_DATE  = MSG.FLT_DATE
AND MSG.DDT_STATUS='P'
LEFT OUTER JOIN DDT_ULD ddtULD
ON ddtULD.ULD_KEY                   = inb.ULD_KEY
AND MSG.TR_NO                       = ddtULD.TR_NO
WHERE hd.flt_key                    = #fltKey#
AND TO_CHAR(hd.FLT_DATE, 'DDMONYY') = #fltDate#
UNION
SELECT B.uld_key AS uldKey,
E.DOLLY_ID AS dollyId,
(CASE WHEN (select COUNT(1)
    from EDI_FFM_MSG ffmMSG
    join EDI_FFM_ULD ffmULD on ffmMSG.TR_NO = ffmULD.TR_NO
    join edi_ffm_shp ffmshp on ffmMSG.TR_NO = ffmshp.TR_NO and ffmULD.Doc_line_no = ffmshp.uDoc_line_no 
    JOIN AWB A ON A.AWB_NO = ffmshp.AWB_NO AND A.AWB_DATE = ffmshp.AWB_DATE
    JOIN MAST_SPL_HAND_CODE splCode ON (splCode.code = a.spl_code1 or splCode.code = a.spl_code2 or splCode.code = a.spl_code3 or
    splCode.code = a.spl_code4 or splCode.code = a.spl_code5 or splCode.code = a.spl_code6 or
    splCode.code = a.spl_code7 or splCode.code = a.spl_code8 or splCode.code = a.spl_code9) and splCode.PRIORTY_INBD_TRNSFR = 'Y'
    where ffmMSG.FFM_STATUS = 'P' and ffmMSG.flt_key = #fltKey# and ffmMSG.flt_date=#fltDate# AND ffmULD.uld_key=B.ULD_KEY) > 0 THEN 'Y' ELSE 'N' END) pri,
  DECODE(E.DOLLY_ID,'','','null','',(SELECT TO_CHAR(M.LM_DATE,'DDMONYY HH24:MI:SS') FROM IMP_RAMP_DOLLY_HD M WHERE M.DOLLY_ID=E.DOLLY_ID AND M.FLT_KEY=#fltKey# AND M.FLT_DATE=#fltDate# AND ROWNUM=1)) lastModDate,
  E.DAM_IND  AS damInd,
  E.EIC_IND AS eicInd,
  E.EMPTY_IND AS emptyInd,
  E.SEQ_NO   AS seqNo,
  (
  CASE
    WHEN (SELECT COUNT(1)
      FROM IMP_RAMP_DOLLY_HD
      WHERE DOLLY_ID  = E.DOLLY_ID
      AND HOVER_DATE IS NOT NULL
      AND HO_NO      IS NOT NULL) > 0
    THEN 'Y'
    ELSE 'N'
  END)            AS hoverStat,
  ''              AS cnctgFltkey,
  ''              AS cnctgFltDate,
  ''              AS cnctgFltBay,
  'Other CPM ULD' AS uldType,
  (CASE WHEN (select COUNT(1)
    from EDI_FFM_MSG ffmMSG
    join EDI_FFM_ULD ffmULD on ffmMSG.TR_NO = ffmULD.TR_NO
    join edi_ffm_shp ffmshp on ffmMSG.TR_NO = ffmshp.TR_NO and ffmULD.Doc_line_no = ffmshp.uDoc_line_no 
    JOIN AWB A ON A.AWB_NO = ffmshp.AWB_NO AND A.AWB_DATE = ffmshp.AWB_DATE
    where ffmMSG.FFM_STATUS = 'P' and ffmMSG.flt_key = #fltKey# and ffmMSG.flt_date=#fltDate# AND ffmULD.uld_key=B.uld_key
    AND (A.SPL_CODE1 = 'EPD' OR A.SPL_CODE2 = 'EPD' OR A.SPL_CODE3 = 'EPD'
        OR A.SPL_CODE4 = 'EPD' OR A.SPL_CODE5 = 'EPD' OR A.SPL_CODE6 = 'EPD'
        OR A.SPL_CODE7 = 'EPD' OR A.SPL_CODE8 = 'EPD' OR A.SPL_CODE9 = 'EPD')) > 0 THEN 'Y' ELSE 'N' END) as shcInd,
        (select load_type from edi_cpm_dtl where flt_key=#fltKey# and flt_date=#fltDate# and uld_key=B.uld_key and rownum=1) as cpmType
FROM EDI_CPM_DTL B
JOIN EDI_CPM A
ON A.FLT_KEY   = B.FLT_KEY
AND A.FLT_DATE = B.FLT_DATE
LEFT JOIN IMP_RAMP_DOLLY_DTL E
ON E.FLT_KEY                      = A.FLT_KEY
AND TO_CHAR(E.FLT_DATE,'DDMONYY') = TO_CHAR(A.FLT_DATE,'DDMONYY')
AND E.ULD_KEY                     = B.ULD_KEY
WHERE B.FLT_KEY                   = A.FLT_KEY
AND B.FLT_DATE                    = A.FLT_DATE
AND A.FLT_KEY                     =#fltKey#
AND A.FLT_DATE                    = #fltDate#
AND B.ULD_KEY IS NOT NULL
AND B.ULD_KEY NOT                IN
  (SELECT inb.ULD_KEY 
FROM IMP_RAMP_INB_CHK_DTL inb
JOIN IMP_RAMP_CHK_HD hd
ON hd.TR_NO = inb.TR_NO
JOIN FLT_OPR f
ON f.FLT_TYPE                     = 'A'
AND f.FLT_KEY                     = inb.FLT_KEY
AND TO_CHAR(f.SCH_DATE,'DDMONYY') = TO_CHAR(inb.FLT_DATE,'DDMONYY')
LEFT JOIN IMP_ULD_LIST uld
ON uld.FLT_KEY                      = inb.FLT_KEY
AND TO_CHAR(uld.FLT_DATE, 'DDMONYY')= TO_CHAR(inb.FLT_DATE, 'DDMONYY')
AND uld.ULD_KEY                     = inb.ULD_KEY
LEFT JOIN flt_opr_events flt
ON TO_CHAR(flt.SCH_DATE,'DDMONYY') = TO_CHAR(inb.FLT_DATE,'DDMONYY')
AND flt.RAMP_COMPL_YN              = 'Y'
AND flt.FLT_TYPE                   = 'A'
AND flt.CARR_CODE                  = inb.CARR_CODE
AND flt.FLT_NO                     = inb.FLT_NO
AND flt.FLT_KEY                    = inb.FLT_KEY
LEFT JOIN IMP_RAMP_DOLLY_DTL E
ON E.FLT_KEY                      = inb.FLT_KEY
AND TO_CHAR(E.FLT_DATE,'DDMONYY') = TO_CHAR(inb.FLT_DATE,'DDMONYY')
AND E.ULD_KEY                     = inb.ULD_KEY
LEFT JOIN ULD_INVENTORY K
ON K.ULD_KEY = inb.ULD_KEY
LEFT JOIN IMP_RAMP_CHK_DTL dtl
ON hd.TR_NO     = dtl.TR_NO
AND inb.ULD_KEY = dtl.ULD_KEY
LEFT OUTER JOIN DDT_MSG MSG
ON inb.FLT_KEY    = MSG.FLT_KEY
AND inb.FLT_DATE  = MSG.FLT_DATE
AND MSG.DDT_STATUS='P'
LEFT OUTER JOIN DDT_ULD ddtULD
ON ddtULD.ULD_KEY                   = inb.ULD_KEY
AND MSG.TR_NO                       = ddtULD.TR_NO
WHERE hd.flt_key                    = #fltKey#
AND TO_CHAR(hd.FLT_DATE, 'DDMONYY') = #fltDate#
  )
  UNION
SELECT E.uld_key AS uldKey,
E.DOLLY_ID AS dollyId,
(CASE WHEN (select COUNT(1)
    from EDI_FFM_MSG ffmMSG
    join EDI_FFM_ULD ffmULD on ffmMSG.TR_NO = ffmULD.TR_NO
    join edi_ffm_shp ffmshp on ffmMSG.TR_NO = ffmshp.TR_NO and ffmULD.Doc_line_no = ffmshp.uDoc_line_no 
    JOIN AWB A ON A.AWB_NO = ffmshp.AWB_NO AND A.AWB_DATE = ffmshp.AWB_DATE
    JOIN MAST_SPL_HAND_CODE splCode ON (splCode.code = a.spl_code1 or splCode.code = a.spl_code2 or splCode.code = a.spl_code3 or
    splCode.code = a.spl_code4 or splCode.code = a.spl_code5 or splCode.code = a.spl_code6 or
    splCode.code = a.spl_code7 or splCode.code = a.spl_code8 or splCode.code = a.spl_code9) and splCode.PRIORTY_INBD_TRNSFR = 'Y'
    where ffmMSG.FFM_STATUS = 'P' and ffmMSG.flt_key = #fltKey# and ffmMSG.flt_date=#fltDate# AND ffmULD.uld_key=E.ULD_KEY) > 0 THEN 'Y' ELSE 'N' END) pri,
  DECODE(E.DOLLY_ID,'','','null','',(SELECT TO_CHAR(M.LM_DATE,'DDMONYY HH24:MI:SS') FROM IMP_RAMP_DOLLY_HD M WHERE M.DOLLY_ID=E.DOLLY_ID AND M.FLT_KEY=#fltKey# AND M.FLT_DATE=#fltDate# AND ROWNUM=1)) lastModDate,
  E.DAM_IND  AS damInd,
  E.EIC_IND AS eicInd,
  E.EMPTY_IND AS emptyInd,
  E.SEQ_NO   AS seqNo,
  (
  CASE
    WHEN (SELECT COUNT(1)
      FROM IMP_RAMP_DOLLY_HD
      WHERE DOLLY_ID  = E.DOLLY_ID
      AND HOVER_DATE IS NOT NULL
      AND HO_NO      IS NOT NULL) > 0
    THEN 'Y'
    ELSE 'N'
  END)            AS hoverStat,
  ''              AS cnctgFltkey,
  ''              AS cnctgFltDate,
  ''              AS cnctgFltBay,
  (CASE WHEN (SELECT COUNT(1) FROM v_ddt_dtl WHERE FLT_KEY=#fltKey# AND FLT_DATE=#fltDate# AND ULD_KEY=E.ULD_KEY AND TRF_TYPE='TT') > 0 THEN 'Online ULD' ELSE 'Terminal ULD' END) AS uldType,
  (CASE WHEN (select COUNT(1)
    from EDI_FFM_MSG ffmMSG
    join EDI_FFM_ULD ffmULD on ffmMSG.TR_NO = ffmULD.TR_NO
    join edi_ffm_shp ffmshp on ffmMSG.TR_NO = ffmshp.TR_NO and ffmULD.Doc_line_no = ffmshp.uDoc_line_no 
    JOIN AWB A ON A.AWB_NO = ffmshp.AWB_NO AND A.AWB_DATE = ffmshp.AWB_DATE
    where ffmMSG.FFM_STATUS = 'P' and ffmMSG.flt_key = #fltKey# and ffmMSG.flt_date=#fltDate# AND ffmULD.uld_key=E.uld_key
    AND (A.SPL_CODE1 = 'EPD' OR A.SPL_CODE2 = 'EPD' OR A.SPL_CODE3 = 'EPD'
        OR A.SPL_CODE4 = 'EPD' OR A.SPL_CODE5 = 'EPD' OR A.SPL_CODE6 = 'EPD'
        OR A.SPL_CODE7 = 'EPD' OR A.SPL_CODE8 = 'EPD' OR A.SPL_CODE9 = 'EPD')) > 0 THEN 'Y' ELSE 'N' END) as shcInd,
       (select load_type from edi_cpm_dtl where flt_key=#fltKey# and flt_date=#fltDate# and uld_key=E.uld_key and rownum=1) as cpmType
FROM IMP_RAMP_DOLLY_DTL E
JOIN IMP_RAMP_DOLLY_HD F ON F.FLT_KEY = E.FLT_KEY AND F.FLT_DATE = E.FLT_DATE AND E.DOLLY_ID = F.DOLLY_ID
LEFT JOIN ULD_INVENTORY K ON K.ULD_KEY = E.ULD_KEY
WHERE E.FLT_KEY                     =#fltKey#
AND E.FLT_DATE                    = #fltDate#
AND E.ULD_KEY IS NOT NULL
AND E.ULD_KEY NOT                IN
  (SELECT inb.ULD_KEY AS uldKey
FROM IMP_RAMP_INB_CHK_DTL inb
JOIN IMP_RAMP_CHK_HD hd
ON hd.TR_NO = inb.TR_NO
JOIN FLT_OPR f
ON f.FLT_TYPE                     = 'A'
AND f.FLT_KEY                     = inb.FLT_KEY
AND TO_CHAR(f.SCH_DATE,'DDMONYY') = TO_CHAR(inb.FLT_DATE,'DDMONYY')
LEFT JOIN IMP_ULD_LIST uld
ON uld.FLT_KEY                      = inb.FLT_KEY
AND TO_CHAR(uld.FLT_DATE, 'DDMONYY')= TO_CHAR(inb.FLT_DATE, 'DDMONYY')
AND uld.ULD_KEY                     = inb.ULD_KEY
LEFT JOIN flt_opr_events flt
ON TO_CHAR(flt.SCH_DATE,'DDMONYY') = TO_CHAR(inb.FLT_DATE,'DDMONYY')
AND flt.RAMP_COMPL_YN              = 'Y'
AND flt.FLT_TYPE                   = 'A'
AND flt.CARR_CODE                  = inb.CARR_CODE
AND flt.FLT_NO                     = inb.FLT_NO
AND flt.FLT_KEY                    = inb.FLT_KEY
LEFT JOIN IMP_RAMP_DOLLY_DTL E
ON E.FLT_KEY                      = inb.FLT_KEY
AND TO_CHAR(E.FLT_DATE,'DDMONYY') = TO_CHAR(inb.FLT_DATE,'DDMONYY')
AND E.ULD_KEY                     = inb.ULD_KEY
LEFT JOIN ULD_INVENTORY K
ON K.ULD_KEY = inb.ULD_KEY
LEFT JOIN IMP_RAMP_CHK_DTL dtl
ON hd.TR_NO     = dtl.TR_NO
AND inb.ULD_KEY = dtl.ULD_KEY
LEFT OUTER JOIN DDT_MSG MSG
ON inb.FLT_KEY    = MSG.FLT_KEY
AND inb.FLT_DATE  = MSG.FLT_DATE
AND MSG.DDT_STATUS='P'
LEFT OUTER JOIN DDT_ULD ddtULD
ON ddtULD.ULD_KEY                   = inb.ULD_KEY
AND MSG.TR_NO                       = ddtULD.TR_NO
WHERE hd.flt_key                    = #fltKey#
AND TO_CHAR(hd.FLT_DATE, 'DDMONYY') = #fltDate#
UNION ALL
SELECT B.uld_key AS uldKey
FROM EDI_CPM_DTL B
JOIN EDI_CPM A
ON A.FLT_KEY   = B.FLT_KEY
AND A.FLT_DATE = B.FLT_DATE
LEFT JOIN IMP_RAMP_DOLLY_DTL E
ON E.FLT_KEY                      = A.FLT_KEY
AND TO_CHAR(E.FLT_DATE,'DDMONYY') = TO_CHAR(A.FLT_DATE,'DDMONYY')
AND E.ULD_KEY                     = B.ULD_KEY
WHERE B.FLT_KEY                   = A.FLT_KEY
AND B.FLT_DATE                    = A.FLT_DATE
AND A.FLT_KEY                     =#fltKey#
AND A.FLT_DATE                    = #fltDate#
AND B.ULD_KEY IS NOT NULL
AND B.ULD_KEY NOT                IN
  (SELECT inb.ULD_KEY AS uldKey
  FROM IMP_RAMP_INB_CHK_DTL inb
  JOIN IMP_RAMP_CHK_HD hd
  ON hd.TR_NO = inb.TR_NO
  JOIN FLT_OPR f
  ON f.FLT_TYPE                     = 'A'
  AND f.FLT_KEY                     = inb.FLT_KEY
  AND TO_CHAR(f.SCH_DATE,'DDMONYY') = TO_CHAR(inb.FLT_DATE,'DDMONYY')
  LEFT JOIN IMP_ULD_LIST uld
  ON uld.FLT_KEY                      = inb.FLT_KEY
  AND TO_CHAR(uld.FLT_DATE, 'DDMONYY')= TO_CHAR(inb.FLT_DATE, 'DDMONYY')
  AND uld.ULD_KEY                     = inb.ULD_KEY
  LEFT JOIN flt_opr_events flt
  ON TO_CHAR(flt.SCH_DATE,'DDMONYY') = TO_CHAR(inb.FLT_DATE,'DDMONYY')
  AND flt.RAMP_COMPL_YN              = 'Y'
  AND flt.FLT_TYPE                   = 'A'
  AND flt.CARR_CODE                  = inb.CARR_CODE
  AND flt.FLT_NO                     = inb.FLT_NO
  AND flt.FLT_KEY                    = inb.FLT_KEY
  LEFT JOIN IMP_RAMP_CHK_DTL dtl
  ON hd.TR_NO     = dtl.TR_NO
  AND inb.ULD_KEY = dtl.ULD_KEY
  LEFT OUTER JOIN DDT_MSG MSG
  ON inb.FLT_KEY    = MSG.FLT_KEY
  AND inb.FLT_DATE  = MSG.FLT_DATE
  AND MSG.DDT_STATUS='P'
  LEFT OUTER JOIN DDT_ULD ddtULD
  ON ddtULD.ULD_KEY = inb.ULD_KEY
  AND MSG.TR_NO     = ddtULD.TR_NO
  WHERE hd.flt_key                    = #fltKey#
  AND TO_CHAR(hd.FLT_DATE, 'DDMONYY') = #fltDate# AND inb.ULD_KEY IS NOT NULL
  ))
ORDER BY uldType
	</select>
	<select id="checkshcepdstatus_TM" parameterClass="cargo.cms.extsvc.bo.RampCheckInBO" resultClass="java.lang.Integer" >
    select COUNT(1)
    from EDI_FFM_MSG ffmMSG
    join EDI_FFM_ULD ffmULD on ffmMSG.TR_NO = ffmULD.TR_NO
    join edi_ffm_shp ffmshp on ffmMSG.TR_NO = ffmshp.TR_NO and ffmULD.Doc_line_no = ffmshp.uDoc_line_no 
    JOIN AWB A ON A.AWB_NO = ffmshp.AWB_NO AND A.AWB_DATE = ffmshp.AWB_DATE
    where ffmMSG.FFM_STATUS = 'P' and ffmMSG.flt_key = #fltKey# and ffmMSG.flt_date=#fltDate# AND ffmULD.uld_key=#uldKey#
    AND (A.SPL_CODE1 = 'EPD' OR A.SPL_CODE2 = 'EPD' OR A.SPL_CODE3 = 'EPD'
        OR A.SPL_CODE4 = 'EPD' OR A.SPL_CODE5 = 'EPD' OR A.SPL_CODE6 = 'EPD'
        OR A.SPL_CODE7 = 'EPD' OR A.SPL_CODE8 = 'EPD' OR A.SPL_CODE9 = 'EPD')
    </select>
	<select id="getddMMyyFormat_TM" parameterClass="java.lang.String" resultClass="java.lang.String">
	select to_char(TO_DATE(#PARAM#),'YYMMDD') AS newDate FROM DUAL
	</select>
	<select id="getHelpListData_TM" parameterClass="cargo.cms.extsvc.bo.RampCheckInBO" resultClass="cargo.cms.extsvc.bo.RampCheckInBO">
	SELECT CODE as code,CODE_DESC as helpData FROM MAST_CODE_DTL WHERE GROUP_CODE ='99' AND CODE_TYPE=#groupCode#
	</select>
	
	<select id="getmaxdollyId_TM" parameterClass="cargo.cms.extsvc.bo.RampCheckInBO" resultClass="java.lang.String">
	select NVL(max(DOLLY_ID),0) FROM IMP_RAMP_DOLLY_HD WHERE FLT_KEY=#fltKey# AND FLT_DATE=#fltDate#
	</select>
	<select id="getmaxdollyIdbasedontaskAssignUid_TM" parameterClass="cargo.cms.extsvc.bo.RampCheckInBO" resultClass="java.lang.String">
	select DOLLY_ID FROM IMP_RAMP_DOLLY_HD WHERE FLT_KEY=#fltKey# AND FLT_DATE=#fltDate# and TASK_ASSIGN_UID = #taskAssignUld#
	</select>	
	<insert id="insertrampdollyhd" parameterClass="cargo.cms.extsvc.bo.RampCheckInBO" >
	INSERT INTO IMP_RAMP_DOLLY_HD (DOLLY_ID,FLT_KEY, FLT_DATE, CR_USER_ID , CR_DATE, LM_USER_ID, LM_DATE) 
	VALUES (#dollyId#,#fltKey#,#fltDate#,#userID#,SYSDATE,#userID#,SYSDATE)
	</insert>
	<update id="updateiholarampdollyhddetails"  parameterClass="cargo.cms.extsvc.bo.RampCheckInBO">
		UPDATE imp_ramp_dolly_hd SET status=#ihoStatus#,TASK_ASSIGN_UID=#taskAssignUld#,IHOLA_ACTION_TIME=TO_DATE(#iholaActionTime#,'DDMONYY HH24:MI:SS'),IHOLA_PICKUP_AREA=#iholaPickArea#,IHOLA_DROP_LOCN=#iholaDropLocation# WHERE DOLLY_ID=#dollyId#
	</update>
	<update id="updateihotcrampdollyhddetails"  parameterClass="cargo.cms.extsvc.bo.RampCheckInBO">
		UPDATE imp_ramp_dolly_hd SET status=#ihoStatus#,TASK_ASSIGN_UID=#taskAssignUld#,IHOTC_ACTION_TIME=TO_DATE(#ihotcActionTime#,'DDMONYY HH24:MI:SS'),IHOTC_PICKUP_AREA=#ihotcPickArea#,IHOTC_DROP_LOCN=#ihotcDropLocation# WHERE DOLLY_ID=#dollyId#
	</update>
	<update id="updateiholarampdollyulddetails"  parameterClass="cargo.cms.extsvc.bo.RampCheckInBO">
		UPDATE imp_ramp_dolly_dtl SET COOL_DOLLY_ID=#coolDollyId#,IHOLA_DROP_LOCN=#iholaDropLocn# WHERE DOLLY_ID=#dollyId# and uld_key=#uldKey#
	</update>
	<update id="updateihotcrampdollyulddetails"  parameterClass="cargo.cms.extsvc.bo.RampCheckInBO">
		UPDATE imp_ramp_dolly_dtl SET COOL_DOLLY_ID=#coolDollyId#,IHOTC_DROP_LOCN=#ihotcDropLocation# WHERE DOLLY_ID=#dollyId# and uld_key=#uldKey#
	</update>	
	<insert id="insertrampdollydtl" parameterClass="cargo.cms.extsvc.bo.RampCheckInBO" >
	INSERT INTO IMP_RAMP_DOLLY_DTL (DOLLY_ID,FLT_KEY, FLT_DATE,ULD_KEY,SEQ_NO,DAM_IND,EMPTY_IND,EIC_IND,CR_USER_ID , CR_DATE, LM_USER_ID, LM_DATE,COOL_DOLLY_ID,IHOLA_DROP_LOCN,IHOTC_DROP_LOCN) 
	VALUES (#dollyId#,#fltKey#,#fltDate#,#uldKey#,#seqNo#,#damInd#,nvl(#emptyInd#,'N'),nvl(#eicInd#,'N'),#userID#,SYSDATE,#userID#,SYSDATE,#coolDollyId#,#iholaDropLocn#,#ihotcDropLocn#)
	</insert>
	<select id="getCountFromULDInv_TM" parameterClass="cargo.cms.extsvc.bo.RampCheckInBO" resultClass="java.lang.Integer">
	SELECT COUNT(1) FROM uld_inventory WHERE uld_key = #uldKey#
	</select>
      <insert id="insertrampdollyuldinv" parameterClass="cargo.cms.extsvc.bo.RampCheckInBO" >
	INSERT INTO ULD_INVENTORY(ULD_KEY,OWNER_ID,STRG_DATE,LM_DATE,LM_USER_ID,SOURCE_CODE,TARE_WEIGHT,GROSS_WEIGHT,ULD_NO,ULD_TYPE,ULD_CARR,LOC_CODE,OWNED_INV,HANDLING_MODE,EMPTY_FLG,MIX_PPK_IND,TRANSIT_FLG,ULD_UNLOAD,DAM_IND,tr_type) 
			values(#uldKey#,#uldCarr#,sysdate,sysdate,#userID#,'',0,0,#uldNo#,#uldType#,#uldCarr#,'','N','','N','N','N','Y',#damInd#,'UIU')
	</insert>
	<update id="updaertrampDUMMYdollyuldinv"  parameterClass="cargo.cms.extsvc.bo.RampCheckInBO">
		UPDATE uld_inventory SET tr_type='DUMMY' where uld_key = #uldKey#
	</update>
	
	<update id="updaertrampdollyuldinv"  parameterClass="cargo.cms.extsvc.bo.RampCheckInBO">
		UPDATE uld_inventory SET ULD_UNLOAD = #uldUnload#,DAM_IND=#damInd#,H_OVER='N',lm_user_id=#userID#,lm_date=sysdate,tr_type='UIU' where uld_key = #uldKey#
	</update>
	<update id="updateHoverrampdollyuldinv"  parameterClass="cargo.cms.extsvc.bo.RampCheckInBO">
		UPDATE uld_inventory SET H_OVER = 'Y',lm_user_id=#userID#,lm_date=sysdate,tr_type='UHU' where uld_key = #uldKey#
	</update>
	
	<update id="updaterampdollydtl"  parameterClass="cargo.cms.extsvc.bo.RampCheckInBO">
		UPDATE IMP_RAMP_DOLLY_DTL SET SEQ_NO=#seqNo#,DAM_IND=#damInd#,EIC_IND = DECODE(#eicInd#,'',EIC_IND,'null',EIC_IND,#eicInd#),EMPTY_IND = DECODE(#emptyInd#,'',EMPTY_IND,'null',EMPTY_IND,#emptyInd#),LM_USER_ID=#userID#,LM_DATE=SYSDATE WHERE FLT_KEY=#fltKey# AND FLT_DATE=#fltDate# AND ULD_KEY=#uldKey# AND DOLLY_ID=#dollyId#
	</update>
	<select id="getCountFromDollyDTL_TM" parameterClass="cargo.cms.extsvc.bo.RampCheckInBO" resultClass="java.lang.Integer">
	SELECT COUNT(1) FROM IMP_RAMP_DOLLY_DTL WHERE FLT_KEY=#fltKey# AND FLT_DATE=#fltDate# AND DOLLY_ID=#dollyId#
	</select>
	<select id="getCountFromDollyHD_TM" parameterClass="cargo.cms.extsvc.bo.RampCheckInBO" resultClass="java.lang.Integer">
	SELECT COUNT(1) FROM IMP_RAMP_DOLLY_HD WHERE FLT_KEY=#fltKey# AND FLT_DATE=#fltDate# AND DOLLY_ID=#dollyId#
	</select>
	<update id="deleterampdollyhd"  parameterClass="cargo.cms.extsvc.bo.RampCheckInBO">
		DELETE FROM IMP_RAMP_DOLLY_HD WHERE FLT_KEY=#fltKey# AND FLT_DATE=#fltDate# AND DOLLY_ID=#dollyId#
	</update>
	<update id="deleterampdollydtl"  parameterClass="cargo.cms.extsvc.bo.RampCheckInBO">
		DELETE FROM IMP_RAMP_DOLLY_DTL WHERE FLT_KEY=#fltKey# AND FLT_DATE=#fltDate# AND DOLLY_ID=#dollyId# AND ULD_KEY = #uldKey#
	</update>
	<update id="deleterampdollydtlbasedondollyid"  parameterClass="java.lang.String">
		DELETE FROM IMP_RAMP_DOLLY_DTL WHERE DOLLY_ID=#dollyId#
	</update>
	<select id="getlistOfULDCarr_TM" parameterClass="cargo.cms.extsvc.bo.RampCheckInBO" resultClass="cargo.cms.extsvc.bo.RampCheckInBO">
	SELECT CODE AS uldCarr FROM MAST_CARRIER WHERE NVL(MBLE_IND,'N') = 'Y' ORDER BY CODE
	</select>
	<select id="getlistOfULDType_TM" parameterClass="cargo.cms.extsvc.bo.RampCheckInBO" resultClass="cargo.cms.extsvc.bo.RampCheckInBO">
	SELECT CODE AS uldType FROM MAST_ULD_TYPE  WHERE BT_IND = 'N' AND NVL(MBLE_IND,'N') = 'Y' ORDER BY CODE
	</select>
	<select id="checkOffloadisCreated_tm" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		 SELECT COUNT(1) FROM EXP_OFFLOAD_ULD WHERE  ULD_BT_NO = #ULD_KEY# AND FLT_KEY=#fltKey# AND FLT_DATE=#fltDate#
	</select>
	<select id="checkInULDList_TM" parameterClass="cargo.cms.extsvc.bo.RampCheckInBO" resultClass="cargo.cms.extsvc.bo.RampCheckInBO" >
		SELECT A.FLT_KEY AS fltKey,
      		TO_CHAR(A.FLT_DATE,'DDMONYY') AS fltDate,
        B.DOLLY_ID AS dollyId,
        DECODE(A.DOLLY_ID,'','','null','',(SELECT TO_CHAR(M.LM_DATE,'DDMONYY HH24:MI:SS') FROM IMP_RAMP_DOLLY_HD M WHERE M.DOLLY_ID=A.DOLLY_ID AND M.FLT_KEY=A.FLT_KEY AND M.FLT_DATE=A.FLT_DATE AND ROWNUM=1)) lastModDate,
		  B.ULD_KEY AS uldKey,
		  B.DAM_IND AS damInd,
		  B.EMPTY_IND AS emptyInd,
		  B.EIC_IND AS eicInd
	FROM IMP_RAMP_DOLLY_HD A,
	  IMP_RAMP_DOLLY_DTL B
	WHERE B.DOLLY_ID = A.DOLLY_ID
  AND B.ULD_KEY NOT IN (SELECT ULD_KEY FROM imp_ramp_chk_dtl WHERE FLT_KEY = B.FLT_KEY AND FLT_DATE = B.FLT_DATE AND CHKIN_YN = 'Y' AND ULD_KEY = B.ULD_KEY)
  <isNotEmpty property="fltKey">
	<isNotEmpty property="fltDate">
  AND A.HO_NO     IS NOT NULL
	AND HOVER_USER  IS NOT NULL
	AND A.FLT_KEY    =#fltKey#
	AND A.FLT_DATE   =#fltDate#
  </isNotEmpty>
  </isNotEmpty>
  <isNotEmpty property="hoverNo">
  AND A.HO_NO      = #hoverNo#
  </isNotEmpty>
  <isNotEmpty property="uldKey">
  AND A.HO_NO     IS NOT NULL
	AND HOVER_USER  IS NOT NULL
  AND A.HO_NO IN (SELECT MAX(HO_NO)
	FROM IMP_RAMP_DOLLY_HD C,
	  IMP_RAMP_DOLLY_DTL D
	WHERE D.DOLLY_ID  = C.DOLLY_ID
	AND C.HO_NO      IS NOT NULL
	AND C.HOVER_USER IS NOT NULL
	AND D.ULD_KEY     =#uldKey#)
  </isNotEmpty>
	ORDER BY B.SEQ_NO ASC
	</select>
		<select id="getAccessFltDetails_ramp" parameterClass="cargo.cms.extsvc.bo.RampCheckInBO" resultClass="cargo.cms.extsvc.bo.RampCheckInBO">
	select CARR_CODE as carrierCode,FLT_NO as flightNo,flt_key AS fltKey,to_char(sch_date,'DDMONYY') AS fltDate,'A' as flightType from flt_opr where flt_key=#fltKey# and sch_date=#fltDate# and flt_TYPE='A'
	</select>
	<select id="checkInULDDetails_tm"  parameterClass="cargo.cms.extsvc.bo.RampCheckInBO"  resultClass="cargo.cms.extsvc.bo.RampCheckInBO">
			SELECT *
			   FROM
			  (SELECT dtl.CARR_CODE                                    AS carrierCode ,
			    dtl.TR_NO                                              AS trNo        ,
			    dtl.DOC_LINE_NO                                        AS docLineNo   ,
			    dtl.FLT_NO                                             AS flightNo    ,
			    dtl.FLT_KEY                                            AS flightKey   ,
			    TO_CHAR(dtl.FLT_DATE,'DDMONYY')                        AS flightDate  ,
			    dtl.ULD_KEY                                            AS uldKey      ,			    
			    dtl.LOC_CODE                                           AS locCode,
			    dtl.DAM_IND											   AS damInd      ,
			    dtl.EMPTY_IND                                          AS empty       ,
			    dtl.EIC_IND                                            AS eic         ,
			    dtl.HT                                           	   AS ht          ,
			    dtl.CONTR                                            AS contour     ,
			    dtl.RMK                                                AS remark      ,
			    dtl.RHO_STAFF 										   AS rhoStaffId,
			    TO_CHAR(dtl.LM_DATE , 'DDMONYY HH24:MI:SS') 		   AS lastModDate,
			    (select MAX(ULD_IMAGE_NAME) from ULD_IMAGE where ULD_KEY=dtl.ULD_KEY) AS transactionId,
			    'Y'													   AS updateRecord,
			    inb.FFM_IND                                            AS ffmInd      ,
			    inb.CPM_IND                                            AS cpmInd      ,	
			    PKG_IMP.fun_get_ho_area(dtl.FLT_KEY,dtl.FLT_DATE,dtl.ULD_KEY) as plannedHoAreaFFMCPM,			  				    	    
			    (select TRF_TYPE from v_ddt_DTL where FLT_KEY = dtl.FLT_KEY and FLT_DATE = dtl.FLT_DATE and ULD_KEY = dtl.ULD_KEY and rowNum = 1) AS transferType,
			    PKG_COMMON.get_flt_ata(dtl.FLT_KEY, dtl.FLT_DATE, 'A','DD') AS ata         ,
			    (SELECT CODE_DESC FROM MAST_CODE_DTL WHERE  CODE  = f.WTHR_COND AND CODE_TYPE='WTH_CONDN') AS weatherCondition,			   	 
				m.h_cont_ind as hcontainer,				 
			    DECODE(flt.RAMP_COMPL_YN,'Y','Y','N')  AS rampCompleteStatus,				    
			    NVL(dtl.CHKIN_YN,'N') AS actualCheckIn           ,
			    dtl.CHKIN_YN          AS checkInStatus           ,
			    ROW_NUMBER() OVER (ORDER BY dtl.FLT_NO ) AS serialNo,
			    dtl.SURPLUS_IND AS surPlusInd,
				uld.HANDLING_MODE									   AS handlingMode,
				uld.TRANSIT_IND 									   AS transitInd,	
			  NULL                             AS defContr, 
				CASE WHEN (m.h_cont_ind='Y') THEN '1'
		        ELSE CASE  WHEN  dtl.EMPTY_IND='N'  THEN '2'
		        ELSE CASE  WHEN  dtl.EIC_IND='Y'  THEN '3'
		        ELSE CASE  WHEN  dtl.EMPTY_IND='Y'  THEN '4'
		        END END END END as displayOrder
			   	FROM IMP_RAMP_CHK_DTL dtl
			    join FLT_OPR f on f.FLT_TYPE  = 'A' and f.FLT_KEY = dtl.FLT_KEY and TO_CHAR(f.SCH_DATE,'DDMONYY') = TO_CHAR(dtl.FLT_DATE,'DDMONYY')
				left join MAST_ULD_TYPE m  on m.code = dtl.uld_type
				left join flt_opr_events flt on TO_CHAR(flt.SCH_DATE,'DDMONYY') = TO_CHAR(dtl.FLT_DATE,'DDMONYY') and flt.RAMP_COMPL_YN = 'Y' and flt.FLT_TYPE = 'A' AND flt.CARR_CODE = dtl.CARR_CODE AND flt.FLT_NO = dtl.FLT_NO
        		LEFT JOIN IMP_RAMP_INB_CHK_DTL inb on inb.FLT_KEY = dtl.FLT_KEY AND TO_CHAR(inb.FLT_DATE,'DDMONYY') = TO_CHAR(dtl.FLT_DATE,'DDMONYY') AND inb.ULD_KEY = dtl.ULD_KEY
				LEFT JOIN IMP_ULD_LIST uld on uld.FLT_KEY=dtl.FLT_KEY AND TO_CHAR(uld.FLT_DATE,'DDMONYY') = TO_CHAR(dtl.FLT_DATE,'DDMONYY') AND uld.ULD_KEY=dtl.ULD_KEY
				
        	    WHERE				  
			   	dtl.FLT_KEY    = #fltKey#
			  	AND TO_CHAR(dtl.FLT_DATE,'DDMONYY') = #fltDate#			  	
			    AND dtl.ULD_KEY = #uldKey#
			UNION ALL
			   
			    SELECT 
          dtl.CARR_CODE                                    AS carrierCode ,
			    dtl.TR_NO                                              AS trNo        ,
			    dtl.DOC_LINE_NO                                        AS docLineNo   ,
			    dtl.FLT_NO                                             AS flightNo    ,
			    dtl.FLT_KEY                                            AS flightKey   ,
			    TO_CHAR(dtl.FLT_DATE,'DDMONYY')                        AS flightDate  ,
			    dtl.ULD_KEY                                            AS uldKey      ,			    
			    ''			                                           AS locCode     ,
			    chk.DAM_IND											   AS damInd      ,
			    chk.EMPTY_IND                                          AS empty       ,
			    chk.EIC_IND                                            AS eic         ,
			    chk.HT                                           	   AS ht          ,
         		case when (uld.handling_mode in('NBK','PPK') 
         			and (select count(1) from v_ddt_dtl v join awb a on a.awb_no=v.awb_no and a.awb_date=v.awb_date where v.flt_key=dtl.flt_key 
         					and v.flt_date=dtl.flt_date and v.uld_key=dtl.uld_key and a.awb_type='T')>0) 
         		then  NVL(edi.cntr,chk.CONTR)  else chk.CONTR end AS contour,			   
			    dtl.RMK                                                AS remark      ,
			    chk.RHO_STAFF 										   AS rhoStaffId,
			    TO_CHAR(dtl.LM_DATE , 'DDMONYY HH24:MI:SS') 		       AS lastModDate,
			    (select MAX(ULD_IMAGE_NAME) from ULD_IMAGE where ULD_KEY=dtl.ULD_KEY) AS transactionId,
			    'Y'													   AS updateRecord,
			    dtl.FFM_IND                                            AS ffmInd      ,
			    dtl.CPM_IND                                            AS cpmInd      ,	
			    PKG_IMP.fun_get_ho_area(dtl.FLT_KEY,dtl.FLT_DATE,dtl.ULD_KEY) as plannedHoAreaFFMCPM,		    						
			    (select TRF_TYPE from v_ddt_DTL where FLT_KEY = dtl.FLT_KEY and FLT_DATE = dtl.FLT_DATE and ULD_KEY = dtl.ULD_KEY and rowNum = 1) AS transferType,				
			    PKG_COMMON.get_flt_ata(dtl.FLT_KEY, dtl.FLT_DATE, 'A', 'DD') AS ata,
			    (SELECT CODE_DESC FROM MAST_CODE_DTL WHERE  CODE  = f.WTHR_COND AND CODE_TYPE='WTH_CONDN') AS weatherCondition,				   	 
				m.h_cont_ind 											as hcontainer,				 
			    DECODE(flt.RAMP_COMPL_YN,'Y','Y','N')  					AS rampCompleteStatus,		
			    NVL(chk.CHKIN_YN,'N') 									AS actualCheckIn,
			    chk.CHKIN_YN          									AS checkInStatus,
			    ROW_NUMBER() OVER (ORDER BY dtl.FLT_NO ) 				AS serialNo,
			    chk.SURPLUS_IND          								AS surPlusInd,
				uld.HANDLING_MODE									    AS handlingMode,
				uld.TRANSIT_IND 									    AS transitInd,				
				edi.CNTR                                                AS defContr,	
				CASE WHEN (m.h_cont_ind='Y') THEN '1'
	            ELSE CASE  WHEN  chk.EMPTY_IND='N'  THEN '2'
	            ELSE CASE  WHEN  chk.EIC_IND='Y'  THEN '3'
	            ELSE CASE  WHEN  chk.EMPTY_IND='Y'  THEN '4'
	            END END END END as displayOrder
			    FROM IMP_RAMP_INB_CHK_DTL dtl
			    join FLT_OPR f on f.FLT_TYPE  = 'A' and f.FLT_KEY = dtl.FLT_KEY and TO_CHAR(f.SCH_DATE,'DDMONYY') = TO_CHAR(dtl.FLT_DATE,'DDMONYY')
				left join MAST_ULD_TYPE m  on m.code = dtl.uld_type
				left join flt_opr_events flt on TO_CHAR(flt.SCH_DATE,'DDMONYY') = TO_CHAR(dtl.FLT_DATE,'DDMONYY') and flt.RAMP_COMPL_YN = 'Y' and flt.FLT_TYPE = 'A' AND flt.CARR_CODE = dtl.CARR_CODE AND flt.FLT_NO = dtl.FLT_NO
				LEFT JOIN IMP_RAMP_CHK_DTL chk on chk.FLT_KEY = dtl.FLT_KEY AND TO_CHAR(chk.FLT_DATE,'DDMONYY') = TO_CHAR(dtl.FLT_DATE,'DDMONYY') AND chk.ULD_KEY = dtl.ULD_KEY
				LEFT JOIN IMP_ULD_LIST uld on uld.FLT_KEY=dtl.FLT_KEY AND TO_CHAR(uld.FLT_DATE,'DDMONYY') = TO_CHAR(dtl.FLT_DATE,'DDMONYY') AND uld.ULD_KEY=dtl.ULD_KEY
				LEFT JOIN EDI_CPM_DTL edi on edi.FLT_KEY=dtl.FLT_KEY AND TO_CHAR(edi.FLT_DATE,'DDMONYY') = TO_CHAR(dtl.FLT_DATE,'DDMONYY') AND edi.ULD_KEY=dtl.ULD_KEY 				   
			    WHERE 		  
			    dtl.ULD_KEY NOT IN
			    (SELECT ULD_KEY
			     FROM IMP_RAMP_CHK_DTL
			     WHERE TR_NO = dtl.TR_NO
			     AND CHKIN_YN  = 'Y'
			    )
			    AND dtl.FLT_KEY    = #fltKey#
			    AND dtl.CARR_CODE = (select carr_code from flt_opr where flt_key=#fltKey# and SCH_date=#fltDate# AND ROWNUM=1)
			    AND TO_CHAR(dtl.FLT_DATE,'DDMONYY')  = #fltDate#
			    AND dtl.ULD_KEY = #uldKey#	 
			  )	          
      order by displayOrder,uldKey 
	</select>
	<update id="updateHoverDetails_tm"  parameterClass="cargo.cms.extsvc.bo.RampCheckInBO">
		UPDATE IMP_RAMP_DOLLY_HD SET HO_NO = IMP_RAMP_HAND_SEQ.nextval,HOVER_USER=#userID#,HOVER_DATE=SYSDATE,LM_DATE = SYSDATE WHERE FLT_KEY=#fltKey# AND FLT_DATE=#fltDate# AND DOLLY_ID=#dollyId#
	</update>
	<update id="updatelatestdateDetails_tm"  parameterClass="cargo.cms.extsvc.bo.RampCheckInBO">
		UPDATE IMP_RAMP_DOLLY_HD SET LM_DATE = SYSDATE WHERE FLT_KEY=#fltKey# AND FLT_DATE=#fltDate# AND DOLLY_ID=#dollyId#
	</update>
	<select id="getLmDate_Ramp" parameterClass="cargo.cms.extsvc.bo.RampCheckInBO" resultClass="java.lang.String" >
		SELECT TO_CHAR(LM_DATE,'DDMONYY HH24:MI:SS') FROM IMP_RAMP_DOLLY_HD WHERE  FLT_KEY=#fltKey# AND FLT_DATE=#fltDate# AND DOLLY_ID=#dollyId#		
	</select>
	
	<select id="imp_mtnchecklist_TM"  parameterClass="cargo.cms.extsvc.bo.RampCheckInBO"  resultClass="cargo.cms.extsvc.bo.RampCheckInBO">
	SELECT inb.TR_NO AS trNo ,
    inb.DOC_LINE_NO AS docLineNo , 
    hd.CARR_CODE AS carrierCode ,
    hd.FLT_NO AS flightNo , 
    hd.FLT_KEY AS flightKey, 
    TO_CHAR(hd.FLT_DATE,'DDMONYY') AS flightDate,  
    inb.ULD_KEY AS uldKey, 		
    inb.FFM_IND AS ffmInd,
    inb.CPM_IND AS cpmInd,    
   	ddtULD.CNTG_FLT_KEY cntgFltKey, TO_CHAR(ddtULD.CNTG_FLT_DATE, 'DDMONYY') cntgFltDate, ddtULD.TRF_TYPE || decode(ddtULD.BRK_BULK,'Y',' + BB',null) transferType,                       
    DECODE(uld.imx,'Y','Y','N') AS imx,
    uld.handling_mode as dlvMode,  
    V_COMMA_SEP_IMP_FLT_ULD_SHC(hd.FLT_KEY,hd.FLT_DATE,inb.ULD_KEY,NULL,NULL) AS shc,  		      
    inb.LOC_CODE AS plannedHoArea,
    inb.LOC_CODE AS plannedHoAreaOld,	     
	 PKG_IMP.fun_get_ho_area(hd.FLT_KEY,hd.FLT_DATE,inb.ULD_KEY) as plannedHoAreaFFMCPM,	   
     PKG_IMP.fun_get_hdlg_area(hd.FLT_KEY,hd.FLT_DATE,inb.ULD_KEY) as handlingZone,          
	 NVL(dtl.CHKIN_YN,'N') AS checkInStatus, 
    TO_CHAR(dtl.CHKIN_DATE,'DDMONYY') AS checkInDate, 
	inb.RMK AS remark,   
	PKG_COMMON.get_flt_ata(#fltKey#, TO_DATE(#fltDate#,'DDMONYY'), 'A', 'DD') AS ata,  		
    (select cc.CODE_DESC from CUST_COMPANY cc where cc.code = f.rho_id ) as rho,  
	(SELECT CODE_DESC FROM MAST_CODE_DTL WHERE  CODE  = f.WTHR_COND AND CODE_TYPE='WTH_CONDN') AS weatherCondition,		 	
	DECODE(flt.RAMP_COMPL_YN,'Y','Y','N')  AS rampComplStatus,       
	(select TRIM(TO_CHAR(MAX(TO_NUMBER(i.TO_NO)),'00000000')) TO_NO FROM
	tow_order_in i, tow_order_in_dtl dtl
    where i.to_no= dtl.to_no
    and dtl.uld_key = inb.ULD_KEY
    and i.flt_key = #fltKey#
    and TO_CHAR(i.flt_date,'DDMONYY') = #fltDate#) as towOrderNo,      
	'N' AS newRecord,   	
    TO_CHAR(inb.LM_DATE , 'DDMONYY HH24:MI:SS') AS lastModDate
    FROM IMP_RAMP_INB_CHK_DTL inb
    JOIN IMP_RAMP_CHK_HD hd ON hd.TR_NO = inb.TR_NO      
	join FLT_OPR f on f.FLT_TYPE  = 'A' and f.FLT_KEY = inb.FLT_KEY and TO_CHAR(f.SCH_DATE,'DDMONYY') = TO_CHAR(inb.FLT_DATE,'DDMONYY')
    LEFT JOIN IMP_ULD_LIST uld ON  uld.FLT_KEY = inb.FLT_KEY AND TO_CHAR(uld.FLT_DATE, 'DDMONYY')= TO_CHAR(inb.FLT_DATE, 'DDMONYY') AND uld.ULD_KEY = inb.ULD_KEY
	left join flt_opr_events flt on TO_CHAR(flt.SCH_DATE,'DDMONYY') = TO_CHAR(inb.FLT_DATE,'DDMONYY') and flt.RAMP_COMPL_YN = 'Y' and flt.FLT_TYPE = 'A' AND flt.CARR_CODE = inb.CARR_CODE AND flt.FLT_NO = inb.FLT_NO AND flt.FLT_KEY = inb.FLT_KEY
    LEFT JOIN IMP_RAMP_CHK_DTL dtl on hd.TR_NO =  dtl.TR_NO AND inb.ULD_KEY = dtl.ULD_KEY  
    LEFT OUTER JOIN DDT_MSG MSG ON inb.FLT_KEY   = MSG.FLT_KEY AND inb.FLT_DATE = MSG.FLT_DATE and MSG.DDT_STATUS='P' 
	LEFT OUTER JOIN DDT_ULD ddtULD ON ddtULD.ULD_KEY = inb.ULD_KEY AND MSG.TR_NO = ddtULD.TR_NO 				 			  
    WHERE hd.flt_key = #fltKey# AND
    TO_CHAR(hd.FLT_DATE, 'DDMONYY')  =  #fltDate#  
    and inb.ULD_KEY = #uldKey#
	</select>
	<select id="checkTowOrder_TM" parameterClass="cargo.cms.extsvc.bo.RampCheckInBO" resultClass="java.lang.Integer" >
	select COUNT(1) FROM
	tow_order_in i, tow_order_in_dtl dtl
    where i.to_no= dtl.to_no
    and dtl.uld_key = #fltKey#
    and i.flt_key = #fltDate#
    and TO_CHAR(i.flt_date,'DDMONYY') = #uldKey#
    </select>
    <select id="checkCpmULD_TM" parameterClass="cargo.cms.extsvc.bo.RampCheckInBO" resultClass="java.lang.Integer" >
	select count(1) from edi_cpm_dtl where flt_key=#fltKey# AND FLT_DATE=#fltDate# and uld_key=#uldKey#
    </select>
    
    <select id="getAllotDetails_ramp"  parameterClass="cargo.cms.extsvc.bo.RampCheckInBO"  resultClass="cargo.cms.extsvc.bo.RampCheckInBO">
    select COUNT(B.uldAllot) uldAllotSize,B.uldAllot as uldAllotType FROM (SELECT ua.uld_allot as uldAllot
		FROM uld_group_type gt,
  			 mast_uld_allot_group uag,
  			 mast_uld_allot ua,
  			 mast_uld_group ug,imp_ramp_dolly_dtl a
	   WHERE gt.uld_group = uag.uld_group
			 AND uag.uld_allot  = ua.uld_allot
			 AND ug.uld_group   = uag.uld_group
	         AND gt.uld_type    = SUBSTR(a.uld_key, 0, 3) AND A.DOLLY_ID=#dollyId#) B GROUP BY B.uldAllot
    </select>
    <select id="getTowInDetailsDetails_ramp"  parameterClass="cargo.cms.extsvc.bo.RampCheckInBO"  resultClass="cargo.cms.extsvc.bo.RampCheckInBO">
    select TO_CHAR(SYSDATE,'DDMONYY') AS terminalInDate ,TO_CHAR(SYSDATE,'HH24') AS terminalInTimeHour,TO_CHAR(SYSDATE,'MI') AS terminalInTimeMinute,TO_CHAR(SYSDATE,'SS') AS terminalInTimeSecond,TO_CHAR(SYSDATE,'HH24:MI:SS') AS terminalInTime from dual
    </select>
    <select id="checkImportFlight_TM" parameterClass="cargo.cms.extsvc.bo.RampCheckInBO" resultClass="java.lang.Integer" >
	SELECT COUNT(1) FROM FLT_OPR WHERE FLT_KEY=#fltKey# AND SCH_DATE=#fltDate# AND FLT_TYPE='A'
    </select>
    <select id="checkULD_Ramp" parameterClass="cargo.cms.extsvc.bo.RampCheckInBO" resultClass="java.lang.Integer" >
	select count(1) from imp_ramp_dolly_dtl where uld_key=#uldKey#
    </select>
    <select id="checkTI_Ramp" parameterClass="cargo.cms.extsvc.bo.RampCheckInBO" resultClass="java.lang.Integer" >
	select count(1) from imp_ramp_dolly_hd where ho_no=#hoverNo#
    </select>
    
    <select id="checkInImportFlight_TM" parameterClass="cargo.cms.extsvc.bo.RampCheckInBO" resultClass="java.lang.Integer" >
    SELECT COUNT(1) FROM imp_ramp_chk_dtl WHERE FLT_KEY = #fltKey# AND FLT_DATE = #fltDate# AND CHKIN_YN = 'Y' AND ULD_KEY = #uldKey#
    </select>
    <select id="getDefaultHOPrint_TM" parameterClass="java.lang.String" resultClass="java.lang.String">
	SELECT rule_value FROM cmsrules WHERE RULE_CODE ='REPT_HO'
	</select>
<select id="getPrintULDDetails_ramp"  parameterClass="cargo.cms.extsvc.bo.RampCheckInBO"  resultClass="cargo.cms.extsvc.bo.RampCheckInBO">
		SELECT A.FLT_KEY AS fltKey,
	  TO_CHAR(A.FLT_DATE,'DDMONYY') AS fltDate,
	  TO_CHAR(SYSDATE,'DDMONYY HH24:MI') AS currentTime,
	  (CASE WHEN (select COUNT(1)
    from EDI_FFM_MSG ffmMSG
    join EDI_FFM_ULD ffmULD on ffmMSG.TR_NO = ffmULD.TR_NO
    join edi_ffm_shp ffmshp on ffmMSG.TR_NO = ffmshp.TR_NO and ffmULD.Doc_line_no = ffmshp.uDoc_line_no 
    JOIN AWB A ON A.AWB_NO = ffmshp.AWB_NO AND A.AWB_DATE = ffmshp.AWB_DATE
    JOIN MAST_SPL_HAND_CODE splCode ON (splCode.code = a.spl_code1 or splCode.code = a.spl_code2 or splCode.code = a.spl_code3 or
    splCode.code = a.spl_code4 or splCode.code = a.spl_code5 or splCode.code = a.spl_code6 or
    splCode.code = a.spl_code7 or splCode.code = a.spl_code8 or splCode.code = a.spl_code9) and splCode.PRIORTY_INBD_TRNSFR = 'Y'
    where ffmMSG.FFM_STATUS = 'P' and ffmMSG.flt_key = A.FLT_KEY and ffmMSG.flt_date=TO_CHAR(A.FLT_DATE,'DDMONYY') AND ffmULD.uld_key=B.ULD_KEY) > 0 THEN 'Y' ELSE 'N' END) pri,
	  B.ULD_KEY AS uldKey,
	  NVL((SELECT toid.HO_AREA FROM tow_order_in_dtl toid join tow_order_in toi ON toi.to_no = toid.to_no where toi.flt_key = A.FLT_KEY and toi.flt_date = A.FLT_DATE and toid.uld_key = B.ULD_KEY and rownum = 1),PKG_IMP.fun_get_ho_area(A.FLT_KEY,A.FLT_DATE,B.ULD_KEY)) AS locCode,
	  'TI'||A.HO_NO AS hoverNo,
	  DECODE(PKG_COMMON.get_flt_ata(A.FLT_KEY, A.FLT_DATE, 'A','DD'),NULL,DECODE(PKG_COMMON.get_flt_eta(A.FLT_KEY, A.FLT_DATE, 'A','DD'),NULL,PKG_COMMON.get_flt_sta(A.FLT_KEY, A.FLT_DATE, 'A','DD'),PKG_COMMON.get_flt_eta(A.FLT_KEY, A.FLT_DATE, 'A','DD')),PKG_COMMON.get_flt_ata(A.FLT_KEY, A.FLT_DATE, 'A','DD')||'*') AS ata,
	  (select load_type from edi_cpm_dtl where flt_key=a.flt_key and flt_date=a.flt_date and uld_key=B.ULD_KEY and rownum=1) as cpmType,
      NVL((SELECT CHKIN_YN FROM IMP_RAMP_CHK_DTL WHERE FLT_KEY=a.flt_key AND FLT_DATE=a.flt_date AND ULD_KEY=b.uld_key AND ROWNUM=1),'N') AS chkinInd        
	FROM IMP_RAMP_DOLLY_HD A
	  JOIN IMP_RAMP_DOLLY_DTL B ON B.FLT_KEY = A.FLT_KEY AND B.FLT_DATE  = A.FLT_DATE AND B.DOLLY_ID  = A.DOLLY_ID
	  LEFT JOIN ULD_INVENTORY C ON C.ULD_KEY = B.ULD_KEY
	WHERE 
	A.HO_NO IS NOT NULL
	AND A.DOLLY_ID  = #dollyId# order by to_number(b.seq_no) ASC
		</select>
		
	
	<select id="getdollystatusFromDollyhd_TM" parameterClass="cargo.cms.extsvc.bo.RampCheckInBO" resultClass="java.lang.Integer">
	<![CDATA[
	SELECT COUNT(1) FROM IMP_RAMP_DOLLY_HD WHERE FLT_KEY=#fltKey# AND FLT_DATE=#fltDate# and dolly_id = #tripNumber# AND STATUS='Handover'
	]]>
	</select>
	
	<select id="getSeqNumberFromDollyDTL_TM" parameterClass="cargo.cms.extsvc.bo.RampCheckInBO" resultClass="java.lang.Integer">
	<![CDATA[
	SELECT MAX(TO_NUMBER(SEQ_NO))+1 FROM IMP_RAMP_DOLLY_DTL WHERE FLT_KEY=#fltKey# AND FLT_DATE=#fltDate# and dolly_id = #dollyId#
	]]>
	</select>
	
	<select id="getDupRecFromDollyDTL_TM" parameterClass="cargo.cms.extsvc.bo.RampCheckInBO" resultClass="java.lang.Integer">
	<![CDATA[
	SELECT COUNT(1) FROM IMP_RAMP_DOLLY_DTL WHERE FLT_KEY=#fltKey# AND FLT_DATE=#fltDate# AND ULD_KEY=#uldKey# and dolly_id != #dollyId#
	]]>
	</select>
	<select id="imp_checkedInOtherFlight_RAMP"  parameterClass="cargo.cms.extsvc.bo.RampCheckInBO"  resultClass="java.lang.Integer">
	<![CDATA[
	 	SELECT COUNT(1)
   		FROM uld_inventory
  		WHERE uld_key      = #uldKey#
  		AND LOC_CODE IS NOT NULL   
		AND CFM_STATUS NOT  IN ('RELEASED','RESERVED')
		AND NOT (flt_key     = #fltKey#
		AND FLT_DATE         = #fltDate#)
		AND flt_type = 'I' and flt_key is not null	
	]]>
	</select>
	<select id="imp_checkedULDisRejected_RAMP"  parameterClass="cargo.cms.extsvc.bo.RampCheckInBO"  resultClass="java.lang.Integer">
	<![CDATA[
	 	SELECT count(1) FROM imp_ramp_dolly_dtl WHERE DOLLY_ID=#tripNumber# and uld_key=#uldKey# and nvl(reject_ind,'N')='Y'
	]]>
	</select>
	<select id="imp_checkedULDisReturned_RAMP"  parameterClass="cargo.cms.extsvc.bo.RampCheckInBO"  resultClass="java.lang.Integer">
	<![CDATA[
	 	SELECT count(1) FROM imp_ramp_dolly_dtl WHERE DOLLY_ID=#tripNumber# and uld_key=#uldKey# and rtn_locn is not null and rtn_date is not null
	]]>
    </select>
	<select id="getloadTypeListData_TM" parameterClass="cargo.cms.extsvc.bo.TransitMailBO" resultClass="cargo.cms.extsvc.bo.TransitMailBO">
	SELECT CODE as code,CODE_DESC as codeDesc FROM MAST_CODE_DTL WHERE GROUP_CODE ='38' AND CODE_TYPE=#groupCode# ORDER BY CODE ASC
	</select>
	<select id="getloadTypeEmptyData_TM" parameterClass="java.lang.String" resultClass="java.lang.String">
	<![CDATA[
	SELECT case when COUNT(1) >0 then 'N' else 'Y' end AS emptyInd
		     FROM EDI_FFM_MSG MSG, EDI_FFM_SHP SHP, EDI_FFM_ULD ULD, ULD_INVENTORY U
		    WHERE 
		    MSG.TR_NO = SHP.TR_NO AND MSG.TR_NO = ULD.TR_NO AND ULD.DOC_LINE_NO = SHP.UDOC_LINE_NO
		    AND MSG.FFM_STATUS = 'P' AND ULD.ULD_KEY IS NOT NULL
        AND MSG.FLT_KEY=U.FLT_KEY AND MSG.FLT_DATE = U.FLT_DATE AND U.ULD_KEY = ULD.ULD_KEY AND
        U.ULD_KEY=#uldKey#
        ]]>
	</select>
	<select id="getloadTypeInvEmptyData_TM" parameterClass="java.lang.String" resultClass="java.lang.String">
	<![CDATA[
	SELECT case when COUNT(1) > 0 then 'N' else 'Y' end AS emptyInd
		     FROM AWB_INVENTORY
		    WHERE 
		    ULD_KEY=#uldKey#
        ]]>
	</select>
	<select id="getloadTypeffmData_TM" parameterClass="java.lang.String" resultClass="java.lang.Integer">
	<![CDATA[
	SELECT COUNT(1) FROM EDI_FFM_MSG MSG,EDI_FFM_ULD ULD, ULD_INVENTORY U
		    WHERE 
		    MSG.TR_NO = ULD.TR_NO AND MSG.FFM_STATUS = 'P' AND ULD.ULD_KEY IS NOT NULL
        AND MSG.FLT_KEY=U.FLT_KEY AND MSG.FLT_DATE = U.FLT_DATE AND
        U.ULD_KEY=#uldKey#
        ]]>
	</select>
	<update id="updateTrtypetoDummy" parameterClass="java.util.Map">
		UPDATE AWB_INVENTORY SET ref_awb_event='DUMMY' WHERE AWB_NO=#awbNo# AND AWB_DATE=#awbDate#
	</update>
	<!-- Special Store -->
	<insert id="sqlInsertMobSpecialStoreHeader" parameterClass="cargo.cms.extsvc.bo.SpecialStoreBO">
	 	<![CDATA[
			INSERT INTO ADM_SPECIAL_STORE_HD (
			  TR_NO, 
			  STORE_NAME, SUPERVISOR_ID,
			  ENTRY_TIME, EXIT_TIME,
			  CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE
			) VALUES (
				#transactionId#, 
				#storeName#, #supervisorId#,
				SYSDATE, NULL,
				#userID#, SYSDATE, #userID#, SYSDATE
			)
		]]>
	</insert>
	<insert id="sqlInsertMobSpecialStoreDetail" parameterClass="cargo.cms.extsvc.bo.SpecialStoreBO">
	 	<![CDATA[
			INSERT INTO ADM_SPECIAL_STORE_DTL (
			  TR_NO, HANDLER_ID,
			  CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE
			) VALUES (
				#transactionId#, #handlerId#,
				#userID#, SYSDATE, #userID#, SYSDATE
			)
		]]>
	</insert>
	<update id="sqlUpdateMobSpecialStoreExitInHeader" parameterClass="cargo.cms.extsvc.bo.SpecialStoreBO">
	 	<![CDATA[
			UPDATE ADM_SPECIAL_STORE_HD
			SET EXIT_TIME = SYSDATE, 
			LM_USER_ID = #userID#, LM_DATE = SYSDATE
			WHERE TR_NO = #transactionId#
		]]>
	</update>
	<insert id="sqlInsertMobSpecialStoreLog" parameterClass="cargo.cms.extsvc.bo.SpecialStoreBO">
	 	<![CDATA[
			INSERT INTO ADM_SPECIAL_STORE_LOG (
			  TR_NO, TRANSACTION_TIME, ACTION,
			  AWB_NO, AWB_DATE, AWB_PCS, AWB_WT, CATALOG, SHC_LIST,
			  IN_OUT_PCS, IN_OUT_WT,
			  IB_FLT_KEY, IB_FLT_DATE, ETA_ATA,
			  OB_FLT_KEY, OB_FLT_DATE, STD_ETD,
			  RCL_VCL_NO, RCL_VCL_PCS, RCL_VCL_WT, SRF_NO,
			  CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE
			) VALUES (
				#transactionId#, SYSDATE, #action#,
				#awbNo#, TO_DATE(#awbDate#, 'DDMONYY'), #awbPcs#, #awbWt#, #catalog#, #shcs#,
				#inOutPcs#, #inOutWt#,
				#inboundFltKey#, TO_DATE(#inboundFltDate#, 'DDMONYY'), TO_DATE(#etaATA#, 'DDMONYY'),
				#outboundFltKey#, TO_DATE(#outboundFltDate#, 'DDMONYY'), TO_DATE(#stdETD#, 'DDMONYY'),
				#rclVCLNo#, #rclVCLPcs#, #rclVCLWt#, #srfNo#,
				#userID#, SYSDATE, #userID#, SYSDATE
			)
		]]>
	</insert>	
	<select id="sqlGetMobSpecialStoreDataForLog" parameterClass="java.util.Map" resultClass="cargo.cms.extsvc.bo.SpecialStoreBO">
		<![CDATA[
			SELECT
			AWB.AWB_NO awbNo, TO_CHAR(AWB.AWB_DATE, 'DDMONYY') awbDate, AWB.PCS awbPcs, AWB.WT awbWt, AWB.CATALOG catalog,
			FUN_GET_SHC_STRING(AWB.SPL_CODE1, AWB.SPL_CODE2, AWB.SPL_CODE3, AWB.SPL_CODE4, AWB.SPL_CODE5, AWB.SPL_CODE6, AWB.SPL_CODE7, AWB.SPL_CODE8, AWB.SPL_CODE9) shcs,
     		(
			  SELECT SUM(INV.LOCN_PCS) FROM AWB_INVENTORY INV
			  WHERE INV.AWB_NO = AWB.AWB_NO AND INV.AWB_DATE = AWB.AWB_DATE
			) invPcs, (
			  SELECT SUM(INV.LOCN_WT) FROM AWB_INVENTORY INV
			  WHERE INV.AWB_NO = AWB.AWB_NO AND INV.AWB_DATE = AWB.AWB_DATE
			) invWt,
			(
			  SELECT MAX(SRF_NO) FROM IMP_SRF SRF
			  WHERE SRF.AWB_NO = AWB.AWB_NO AND SRF.AWB_DATE = AWB.AWB_DATE
			) srfNo
			FROM AWB
			WHERE AWB_NO = #AWB_NO# AND AWB_DATE = (
				SELECT MAX(AWB_DATE) FROM AWB WHERE AWB_NO = #AWB_NO# AND NVL(AWB_CLOSED_YN, 'N') = 'N'
			)
		]]>
	</select>
	<select id="sqlGetMobSpecialStoreImportFlights" parameterClass="java.util.Map"
		resultClass="cargo.cms.extsvc.bo.SpecialStoreBO">
		<![CDATA[
			SELECT
			SHP.AWB_NO awbNo, SHP.AWB_DATE awbDate, SHP.FLT_KEY inboundFltKey, TO_CHAR(SHP.FLT_DATE, 'DDMONYY') inboundFltDate,
			TO_CHAR(NVL(FLT.ACT_DATE, FLT.EST_DATE), 'DDMONYY') etaATA
			FROM IMP_CAR_SHP SHP
			JOIN FLT_OPR FLT
			ON FLT.FLT_KEY = SHP.FLT_KEY AND FLT.SCH_DATE = SHP.FLT_DATE AND FLT.FLT_TYPE = 'A'
			WHERE SHP.AWB_NO = #AWB_NO# AND SHP.AWB_DATE = TO_DATE(#AWB_DATE#, 'DDMONYY')
		]]>
	</select>
	<select id="sqlGetMobSpecialStoreExportFlights" parameterClass="java.util.Map"
		resultClass="cargo.cms.extsvc.bo.SpecialStoreBO">
		<![CDATA[
			SELECT PMAN.AWB_NO awbNo, PMAN.AWB_DATE awbDate, PMAN.FLT_KEY outboundFltKey, TO_CHAR(PMAN.FLT_DATE, 'DDMONYY') outboundFltDate,
			TO_CHAR(NVL(FLT.EST_DATE, FLT.SCH_DATE), 'DDMONYY') stdETD
			FROM EXP_PMANIFEST_AWB PMAN
			JOIN FLT_OPR FLT
			ON FLT.FLT_KEY = PMAN.FLT_KEY AND FLT.SCH_DATE = PMAN.FLT_DATE AND FLT.FLT_TYPE = 'D'
			WHERE PMAN.AWB_NO = #AWB_NO# AND PMAN.AWB_DATE = TO_DATE(#AWB_DATE#, 'DDMONYY')
			UNION 
			SELECT PMAN.AWB_NO awbNo, PMAN.AWB_DATE awbDate, PMAN.FLT_KEY outboundFltKey, TO_CHAR(PMAN.FLT_DATE, 'DDMONYY') outboundFltDate,
			TO_CHAR(NVL(FLT.EST_DATE, FLT.SCH_DATE), 'DDMONYY') stdETD
			FROM exp_pman_tarmac_awb PMAN
			JOIN FLT_OPR FLT
			ON FLT.FLT_KEY = PMAN.FLT_KEY AND FLT.SCH_DATE = PMAN.FLT_DATE AND FLT.FLT_TYPE = 'D'
			WHERE PMAN.AWB_NO = #AWB_NO# AND PMAN.AWB_DATE = TO_DATE(#AWB_DATE#, 'DDMONYY')
		]]>
	</select>
	<select id="sqlGetMobSpecialStoreList" parameterClass="java.util.Map"
		resultClass="cargo.cms.extsvc.bo.SpecialStoreBO">
		<![CDATA[
			SELECT
			STORE_NAME code, DESCRIPTION descr, NVL(SUB_GROUP_ACCESS_YN, 'N') accesss
			FROM MAST_SHC_STORE
		]]>
	</select>
	<select id="sqlGetMobIsSpecialStoreTrNo" parameterClass="java.lang.String"
		resultClass="java.lang.String">
		<![CDATA[
			SELECT DECODE(COUNT(1), 0, 'N', 'Y') FROM ADM_SPECIAL_STORE_HD WHERE TR_NO = #PARAM#
		]]>
	</select>
	<select id="sqlGetMobIsSpecialStoreVCLNo" parameterClass="java.lang.String"
		resultClass="java.lang.String">
		<![CDATA[
			select DECODE(COUNT(1), 0, 'N', 'Y') from 
			( select 'Y' FROM VAL_VCL_HD WHERE VCL_NO = #PARAM#
			  UNION 
			  select 'Y' FROM EXP_RCL_HD WHERE VCL_NO = #PARAM#
			)
		]]>
	</select>
	<select id="sqlGetMobIsSpecialStoreAWBNo" parameterClass="java.lang.String"
		resultClass="java.lang.String">
		<![CDATA[
			SELECT DECODE(COUNT(1), 0, 'N', 'Y') FROM AWB WHERE AWB_NO = #PARAM# AND NVL(AWB_CLOSED_YN, 'N') = 'N'
		]]>
	</select>
	<select id="sqlGetMobIsValidArrivalFlight" parameterClass="java.util.Map"
		resultClass="java.lang.String">
		<![CDATA[
			SELECT DECODE(COUNT(1), 0, 'N', 'Y') FROM FLT_OPR
			WHERE FLT_KEY = #FLT_KEY# AND SCH_DATE = TO_DATE(#FLT_DATE#, 'DDMONYY') AND FLT_TYPE = 'A'
		]]>
	</select>
	<select id="sqlGetMobIsValidDepartureFlight" parameterClass="java.util.Map"
		resultClass="java.lang.String">
		<![CDATA[
			SELECT DECODE(COUNT(1), 0, 'N', 'Y') FROM FLT_OPR
			WHERE FLT_KEY = #FLT_KEY# AND SCH_DATE = TO_DATE(#FLT_DATE#, 'DDMONYY') AND FLT_TYPE = 'D'
		]]>
	</select>
	<select id="sqlGetMobIsValidInternalWOSUser" parameterClass="java.lang.String"
		resultClass="java.lang.String">
		<![CDATA[
			SELECT DECODE(COUNT(1), 0, 'N', 'Y') 
			FROM SEC_USER 
			WHERE CODE = #PARAM# AND USER_TYPE = 'I' AND STATUS = 'A'
		]]>
	</select>
	<select id="sqlGetMobSpecialStoreSubGroupAccess" parameterClass="java.lang.String"
		resultClass="java.lang.String">
		<![CDATA[
			SELECT NVL(SUB_GROUP_ACCESS_YN, 'N') FROM MAST_SHC_STORE WHERE STORE_NAME = #PARAM#
		]]>
	</select>	
	<select id="sqlGetMobSpecialStoreVCLAwbNo" parameterClass="java.lang.String" resultClass="cargo.cms.extsvc.bo.SpecialStoreBO">
		<![CDATA[
			SELECT awbNo , awbDate, vclPcs ,vclWt, vclNo  from (
	      		SELECT AWB.AWB_NO as awbNo , TO_CHAR(AWB.AWB_DATE, 'DDMONYY') as awbDate , VCL_PCS as vclPcs, VCL_WT as vclWt , VCL.vcl_no as vclNo
				FROM VAL_VCL_HD VCL
				JOIN AWB
				ON VCL.AWB_NO = AWB.AWB_NO AND VCL.AWB_DATE = AWB.AWB_DATE AND NVL(AWB.AWB_CLOSED_YN, 'N') = 'N'
				WHERE VCL.VCL_NO = #PARAM#
				UNION
				SELECT AWB.AWB_NO   as awbNo , TO_CHAR(AWB.AWB_DATE, 'DDMONYY') as awbDate , VCL.RCL_PCS as vclPcs, VCL.RCL_WT as vclWt , VCL.vcl_no as vclNo 
				FROM EXP_RCL_HD VCL
				JOIN AWB ON VCL.AWB_NO = AWB.AWB_NO AND VCL.AWB_DATE = AWB.AWB_DATE AND NVL(AWB.AWB_CLOSED_YN, 'N') = 'N'
				WHERE VCL.VCL_NO = #PARAM# AND VCL.VOID_USER_ID IS NULL
     			AND NOT EXISTS (SELECT NULL FROM VAL_VCL_HD WHERE VCL_NO = #PARAM# )
     		) WHERE ROWNUM = 1
		]]>
	</select>
	
	<select id="sqlGetMobSpecialStoreNonExitList" parameterClass="java.lang.String"
		resultClass="java.lang.String">
		<![CDATA[
			SELECT TR_NO 
			FROM ADM_SPECIAL_STORE_HD
			WHERE EXIT_TIME IS NULL AND SUPERVISOR_ID = #PARAM#
	   	]]>
	</select>
        <select id="getPmanExistsForTTAWB"  parameterClass="java.util.HashMap" resultClass="java.lang.String">	
		SELECT DECODE(COUNT(0),0,'N','Y') FROM exp_pman_tarmac_awb  WHERE AWB_NO = #awbNo# AND AWB_DATE = to_date(#awbDate#,'DDMONYY')  
	</select>
	<select id="getAccptLocnList_TM" resultClass="cargo.cms.extsvc.bo.TransitMailBO" parameterClass="cargo.cms.extsvc.bo.TransitMailBO" >
<![CDATA[
SELECT A.CODE  AS locn,
  A.CODE_DESC  AS locnDesc,
  A.ACCPT_LOCN AS groupId
FROM MAST_WH_LOC A
WHERE A.ACCPT_LOCN IS NOT NULL
ORDER BY A.ACCPT_LOCN,
  A.CODE DESC
]]>
</select>

<select id="getSourceList_TM" resultClass="cargo.cms.extsvc.bo.TransitMailBO" parameterClass="cargo.cms.extsvc.bo.TransitMailBO" >
<![CDATA[
SELECT CODE AS sourceCode,CODE_DESC AS sourceDesc FROM MAST_CODE_DTL where CODE_TYPE='MBLE_ULD_SOURCE'
]]>
</select>

<select id="getULDStateList_TM" resultClass="cargo.cms.extsvc.bo.TransitMailBO" parameterClass="cargo.cms.extsvc.bo.TransitMailBO" >
	<![CDATA[
		SELECT CODE AS sourceCode,CODE_DESC AS sourceDesc FROM MAST_CODE_DTL where CODE_TYPE='ULD_STATE' order by code_desc asc
	]]>
</select>

<select id="getULDStatusList_sel" resultClass="cargo.cms.extsvc.bo.TransitMailBO" parameterClass="cargo.cms.extsvc.bo.TransitMailBO" >
	<![CDATA[
		SELECT CODE AS sourceCode,CODE_DESC AS sourceDesc,'S' as sourceType FROM MAST_CODE_DTL where CODE_TYPE='MOB_ULD_STATUS_SEL'
	]]>
</select>


<select id="getULDStatusList_Radio" resultClass="cargo.cms.extsvc.bo.TransitMailBO" parameterClass="cargo.cms.extsvc.bo.TransitMailBO" >
	<![CDATA[
		SELECT CODE AS sourceCode,CODE_DESC AS sourceDesc,'R' as sourceType FROM MAST_CODE_DTL where CODE_TYPE='MOB_ULD_STATUS_RADIO'
	]]>
</select>

	<select id="getPmanExistsForExportAWB"  parameterClass="java.util.HashMap" resultClass="java.lang.String">	
		SELECT DECODE(COUNT(0),0,'N','Y') FROM exp_pmanifest_awb  WHERE AWB_NO = #awbNo# AND AWB_DATE = to_date(#awbDate#,'DDMONYY')  
	</select>
	<select id="getSrfExistsForImportAWB"  parameterClass="java.util.HashMap" resultClass="java.lang.String">	
		<![CDATA[
	   		SELECT DECODE(COUNT(0),0,'N','Y') FROM IMP_SRF  WHERE AWB_NO = #awbNo# AND AWB_DATE = to_date(#awbDate#,'DDMONYY')  AND STATUS <> 'VOID' 
        ]]>
	</select>	
	<select id="sqlCheckUldProfileBasePalleteforEIC_TM"  parameterClass="map"  resultClass="java.lang.String">
		SELECT NVL(count(1), 0) as count
			 FROM ULD_GROUP_CARR
			  WHERE CARR_CODE=#carrCode# AND ULD_TYPE=#uldType# and BASE_PAL_FLG='Y' 
</select>
<select id="checkEndorsePmanforBUP_tm" parameterClass="map" resultClass="java.lang.Integer">
   		<![CDATA[
   	 SELECT count(1) FROM AWB awb ,MAST_SPL_HAND_CODE WHERE 
      		awb.awb_no=#awbNo# and awb.awb_date=#awbDate# and 
			(MAST_SPL_HAND_CODE.CODE = awb.spl_code1 OR MAST_SPL_HAND_CODE.CODE = awb.spl_code2 OR MAST_SPL_HAND_CODE.CODE = awb.spl_code3 OR 
			MAST_SPL_HAND_CODE.CODE = awb.spl_code4 OR MAST_SPL_HAND_CODE.CODE = awb.spl_code5 OR MAST_SPL_HAND_CODE.CODE = awb.spl_code6 OR 
			MAST_SPL_HAND_CODE.CODE = awb.spl_code7 OR MAST_SPL_HAND_CODE.CODE = awb.spl_code8 OR MAST_SPL_HAND_CODE.CODE = awb.spl_code9)
		AND MAST_SPL_HAND_CODE.ENDR_BLDUP IS NOT NULL AND MAST_SPL_HAND_CODE.ENDR_BLDUP <> '0' ORDER BY MAST_SPL_HAND_CODE.ENDR_BLDUP DESC
		]]>
   	</select>
	<select id="getAWBTypeSpecialStore"  parameterClass="java.util.HashMap" resultClass="java.lang.String">	
			SELECT AWB_TYPE FROM AWB WHERE AWB_NO = #awbNo# AND AWB_DATE = to_date(#awbDate#,'DDMONYY') 
	</select>
	<select id="getAwbDateSpecialStore"  parameterClass="java.lang.String" resultClass="java.lang.String">	
			SELECT pkg_common.get_awb_date(#awbNo#,'') FROM DUAL 
	</select>
	
	<select id="getloadTypeuldInvEmptyData_TM" parameterClass="java.lang.String" resultClass="java.lang.String">
		<![CDATA[
			SELECT 'N' FROM ULD_INVENTORY WHERE ULD_KEY=#uldKey# AND (TRANSIT_TYPE = 'IF' OR NVL(OFLD_FLG,'N') = 'Y' OR EMPTY_FLG = 'N' )
        ]]>
	</select>
   		<select id="declare_buildup_complete_endorse_spl_tm" parameterClass="map" resultClass="java.lang.Integer">
	<![CDATA[
		SELECT count(1)
			FROM EXP_PMANIFEST_ULD A,EXP_PMANIFEST_ULD_AWB B,EXP_PMANIFEST_ULD_AWB_SHC C,MAST_SPL_HAND_CODE M WHERE A.FLT_KEY = #fltKey# AND A.FLT_DATE = #fltDate# AND A.ULD_BT_NO = #uldKey# 
			AND A.FLT_KEY = B.FLT_KEY AND A.FLT_DATE = B.FLT_DATE AND A.ULD_BT_NO = B.ULD_BT_NO
			AND C.TR_NO = B.TR_NO AND ENDR_BC IS NOT NULL AND ENDR_BC <> '0'  AND (M.CODE=C.SHC OR M.CODE=C.SHC2 OR M.CODE=C.SHC3 OR M.CODE=C.SHC4 OR 
			M.CODE=C.SHC5 OR M.CODE=C.SHC6 OR M.CODE=C.SHC7 OR M.CODE=C.SHC8 OR M.CODE=C.SHC9) ORDER BY M.ENDR_BC DESC
			]]>
	</select>
	<update id="sqlupdatelmuserdetails_tm" parameterClass="java.util.HashMap">
	     update exp_pmanifest_uld_awb set lm_user_id = #LM_USER#
		    where  flt_key = #FLT_KEY#
		    	and    flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
		        and    unldg_pt = #UNLDG_PT#
		        and    awb_no = #AWB_NO#
		        and    awb_date = TO_DATE(#AWB_DATE#,'DDMONYY')			   
     </update>
	 <select id="checkURFCheckoutExists" parameterClass="cargo.cms.extsvc.bo.TransitMailBO" resultClass="java.lang.Integer">
	  SELECT COUNT(1) FROM ULD_REL_DTL WHERE EIR_NO=#urfNo# AND ULD_KEY=#uldKey# AND chkout_date IS NOT NULL AND chkout_user IS NOT NULL
</select>
<select id="checkURFPurpose_TM" parameterClass="cargo.cms.extsvc.bo.TransitMailBO" resultClass="java.lang.String">
	  SELECT PURPOSE FROM ULD_ISS_HD WHERE EIR_NO=#urfNo#
</select>
<select id="checkULDLocnURFPurpose_TM" parameterClass="cargo.cms.extsvc.bo.TransitMailBO" resultClass="java.lang.String">
	  SELECT LOC_CODE FROM ULD_INVENTORY WHERE ULD_KEY=#uldKey#
</select>
<update id="updateHOandChkoutDetails_tm" parameterClass="java.util.Map">
		UPDATE ULD_REL_DTL SET CHKOUT_LOCN=#location#,CHKOUT_USER = #userId#,CHKOUT_DATE=SYSDATE,CHKOUT_TIME=to_char(sysdate, 'HH24MI'),OB_HANDOVER_DATE=DECODE(CHKOUT_DATE,'',NVL(OB_HANDOVER_DATE,SYSDATE),TO_DATE(TO_CHAR(CHKOUT_DATE, 'DDMONYY') ||' '||DECODE(CHKOUT_TIME, NULL, '',SUBSTR(LPAD(CHKOUT_TIME,4,0), 1, 2)||SUBSTR(LPAD(CHKOUT_TIME,4,0),3)),'DDMONYY HH24MI')) WHERE ULD_KEY=#uldKey# AND EIR_NO=#eirNo#
</update>
<select id="URFChkoutUser_tm" parameterClass="cargo.cms.extsvc.bo.TransitMailBO" resultClass="java.lang.String">
	  SELECT CHKOUT_USER FROM ULD_REL_DTL WHERE EIR_NO=#urfNo# AND ULD_KEY=#uldKey#
</select>
<update id="updateHOTimeforURFULD_tm" parameterClass="cargo.cms.extsvc.bo.TransitMailBO">
		<![CDATA[
			UPDATE ULD_REL_DTL
				   SET OB_HANDOVER_DATE = DECODE(CHKOUT_DATE,'',NVL(OB_HANDOVER_DATE,SYSDATE),TO_DATE(TO_CHAR(CHKOUT_DATE, 'DDMONYY')
  					   ||' '
                       ||DECODE(CHKOUT_TIME, NULL, '',SUBSTR(LPAD(CHKOUT_TIME,4,0), 1, 2)
  					   ||SUBSTR(LPAD(CHKOUT_TIME,4,0),3)),'DDMONYY HH24MI'))
				   WHERE ULD_KEY=#uldKey# AND eir_no = #urfNo#
		]]>
	</update>
	    <select id="getCarrStatMobile" parameterClass="cargo.cms.extsvc.bo.RclBO" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM (
			SELECT null FROM mast_awb_prefix WHERE CODE IN (SELECT substr(AWB_NO,0,3) FROM exp_pre_rcl_brkdn WHERE PRE_RCL_NO = #preRclNum#) AND FUN_GET_PARENT_CARR(CARR_CODE) NOT IN (FUN_GET_PARENT_CARR(#carrCode#))
			UNION
			SELECT null FROM mast_awb_prefix WHERE CODE IN (SELECT substr(AWB_NO,0,3) FROM exp_pre_rcl_hd WHERE PRE_RCL_NO = #preRclNum# and ppk_type = 'P') AND FUN_GET_PARENT_CARR(CARR_CODE) NOT IN (FUN_GET_PARENT_CARR(#carrCode#))
		)
   	</select>
	<select id="sqlRclPrePrinterMobileSC" parameterClass="cargo.cms.extsvc.bo.RclBO" resultClass="cargo.cms.extsvc.bo.RclBO">
		SELECT CODE AS codeId, CODE_DESC AS codeDesc FROM MAST_PRT_DTL WHERE PRT_TYPE = 'SCDC_PRINTER' ORDER BY CODE_DESC
   	</select>
		 <select id="sqlRclPrePrinterMobile" parameterClass="cargo.cms.extsvc.bo.RclBO" resultClass="cargo.cms.extsvc.bo.RclBO">
		SELECT CODE AS codeId, CODE_DESC AS codeDesc FROM MAST_PRT_DTL WHERE PRT_TYPE = 'RCL_PRE_PRINTER' ORDER BY CODE_DESC
   	</select>
		<select id="sqlRclSHCListMobile" parameterClass="cargo.cms.extsvc.bo.RclBO" resultClass="cargo.cms.extsvc.bo.RclBO">
		  SELECT CODE AS codeId, CODE_DESC AS codeDesc FROM mast_spl_hand_code where NVL(MBLE_IND,'N') = 'Y' order by code asc
   	</select>
   		<select id="getLspData_TM" parameterClass="cargo.cms.extsvc.bo.RampCheckInBO" resultClass="cargo.cms.extsvc.bo.RampCheckInBO">
	SELECT lsp.lsp_no AS lspNo,
  lsp.loc_code    AS locCode,
  (
  CASE
    WHEN (SELECT COUNT(1)
      FROM AWB_INVENTORY inv
      WHERE inv.lsp_no IS NOT NULL
      AND inv.lsp_no    = lsp.lsp_no) > 1
    THEN SUBSTR(awbinv.AWB_NO,1,3)
      ||'-'
      ||SUBSTR(awbinv.AWB_NO,4)
      ||'+'
    ELSE SUBSTR(awbinv.AWB_NO,1,3)
      ||'-'
      ||SUBSTR(awbinv.AWB_NO,4)
  END) AS awbNo,
      DECODE(TRIM(TO_CHAR(NVL(REF_NET_WT,0), '9999999990D9')),'0.0','',DECODE(TRIM(TO_CHAR(NVL(REF_WT,0), '9999999990D9')),'0.0','',TRIM(TO_CHAR(NVL(REF_WT,0), '9999999990D9')))) AS oldrefWt, 
      DECODE(TRIM(TO_CHAR(NVL(REF_NET_WT,0), '9999999990D9')),'0.0','',DECODE(TRIM(TO_CHAR(NVL(REF_WT,0), '9999999990D9')),'0.0','',TRIM(TO_CHAR(NVL(REF_WT,0), '9999999990D9')))) AS refWt,
      (select nvl(tare_wt, 0) from mast_csd yy where yy.code=lsp.lsp_no) as tareWt
FROM lsp_inventory lsp
LEFT JOIN AWB_INVENTORY awbinv
ON awbinv.lsp_no = lsp.lsp_no
WHERE lsp.lsp_no =#lspNo#
AND rownum       =1
	</select>
	<insert id="insertFWImageStore_Mobile" parameterClass="map">
		<![CDATA[
						INSERT INTO FW_IMAGE_STORE(
			IMG_ID,	
			IMG_SIZE, IMG_NAME, IMG_SESSION_ID, IMG_PATH, 
			IMG_UPLOAD_DATE,VIDEO_YN,UPLOAD_STAT,TAG
			)
			VALUES(
			FW_IMAGE_SEQ.NEXTVAL, 
			#fileSize#, #fileName#, #imgtransactionID#, #folderPath#, 
			CURRENT_TIMESTAMP,#videoYN#,#uploadSta#,#tag#
			)
		]]>
	</insert>
	       <insert id="insertAWBImage_Mobile" parameterClass="java.util.HashMap">
		INSERT INTO 
			AWB_IMAGE 
			(SEQ_NO, AWB_IMAGE_NAME, AWB_NO, AWB_DATE) 
		VALUES 
			(AWB_IMAGE_SEQ.NEXTVAL, #trnsId#, #awbNo#, TO_DATE(#awbDate#, 'DDMONYY'))
	</insert>	
		<insert id="insertULDImage_Mobile" parameterClass="map" >
			insert into ULD_IMAGE (ULD_TYPE,
				ULD_NO,
				ULD_CARR,
				ULD_KEY,
				ULD_IMAGE_NAME,ULD_IMAGE)			
				values(
				#uld_type#,
				#uld_no#,
				#uld_carr#,
				#uld_key#,
				#trnsId#,
				null)		   
	</insert>
	<insert id="insertRCLImageData_Mobile" parameterClass="map" >
			insert into IMAGE_STORE (SEQ_NO,
				TRANS_NAME,
				TRANS_TYPE,TRANS_NO,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE)			
				values(
				AWB_ULD_IMAGE_SEQ.NEXTVAL,
				#trnsId#,
				#funName#,#rclNo#,'SYSTEM',SYSDATE,'SYSTEM',SYSDATE)		   
	</insert>
	<select id="getRCLAWBListforImageUpload" parameterClass="map" resultClass="cargo.cms.extsvc.bo.RclBO">
	SELECT AWB_NO as awbNo,TO_CHAR(AWB_DATE,'DDMONYY') as awbDate FROM EXP_RCL_HD WHERE RCL_NO = #rclNo# AND ppk_type = 'P'
	UNION
	SELECT A.AWB_NO as awbNo,TO_CHAR(A.AWB_DATE,'DDMONYY') as awbDate FROM EXP_RCL_BRKDN A,EXP_RCL_HD B WHERE B.RCL_NO=A.RCL_NO AND B.RCL_NO = #rclNo# AND B.ppk_type = 'M'
	</select>
	<select id="getRCLULDListforImageUpload" parameterClass="map" resultClass="cargo.cms.extsvc.bo.RclBO">
	SELECT ULD_KEY as uldKey FROM EXP_RCL_HD WHERE RCL_NO = #rclNo# AND ppk_type = 'M'
	UNION
	SELECT A.ULD_KEY as uldKey FROM EXP_RCL_DTL A,EXP_RCL_HD B WHERE B.RCL_NO=A.RCL_NO AND B.RCL_NO = #rclNo# AND B.ppk_type = 'P'
	</select>
	<select id="getAWBImageTransactionID_Mobile" parameterClass="cargo.cms.extsvc.bo.RclBO" resultClass="java.lang.String">
	SELECT MAX(AWB_IMAGE_NAME) FROM AWB_IMAGE WHERE AWB_NO=#awbNo# AND AWB_DATE=#awbDate#
	</select>
	<select id="getULDAWBDetails_Mobile" parameterClass="java.lang.String" resultClass="cargo.cms.extsvc.bo.RclBO">
	SELECT AWB_NO as awbNo,TO_CHAR(AWB_DATE,'DDMONYY') as awbDate,ULD_KEY as uldKey FROM EXP_RCL_HD WHERE RCL_NO = #PARAM#
	</select>
	<select id="getULDImageTransactionID_Mobile" parameterClass="java.lang.String" resultClass="java.lang.String">
	SELECT MAX(ULD_IMAGE_NAME) FROM ULD_IMAGE WHERE ULD_KEY = #PARAM#
	</select>
	<select id="getRCLImageTransactionID_Mobile" parameterClass="java.lang.String" resultClass="java.lang.String">
	SELECT MAX(TRANS_NAME) FROM IMAGE_STORE WHERE TRANS_NO= #PARAM# AND TRANS_TYPE = 'RCL'
	</select>
	<select id="checkValidLocn_TM" parameterClass="java.lang.String" resultClass="java.lang.Integer" >
	select count(1) FROM MAST_WH_LOC WHERE CODE=#PARAM#
    </select>
	
<select id="getSRFNo_TM" parameterClass="java.util.HashMap" resultClass="java.lang.String">
	SELECT SRF_NO FROM (SELECT SRF_NO FROM IMP_SRF WHERE AWB_NO=#awbNo# and awb_date=#awbDate# ORDER BY SRF_DATE DESC) WHERE ROWNUM = 1
	</select>

	<select id="sqlGetTCSFallbackCheckPointListMobile" parameterClass="java.util.HashMap"
		resultClass="cargo.cms.extsvc.bo.TCSDtlBO">
		<![CDATA[
			SELECT codeId,codeDesc FROM
	  			(SELECT 'TME1' codeId, 'Terminal/Dock Entrance' codeDesc, 1 colum FROM DUAL
				UNION
				SELECT 'TPE1' codeId, 'Truck Park Entrance' codeDesc, 2 colum FROM DUAL
				UNION
				SELECT 'TPX1' codeId, 'Truck Park Exit' codeDesc, 3 colum FROM DUAL
				UNION
				SELECT 'TMX1' codeId, 'Terminal Exit - G/F' codeDesc, 4 colum FROM DUAL	
				UNION
				SELECT 'TMX3' codeId, 'Terminal Exit - L3' codeDesc, 5 colum FROM DUAL
				UNION
				SELECT 'TMX5' codeId, 'Terminal Exit - L5' codeDesc, 6 colum FROM DUAL
  			)ORDER BY colum
		]]>
	</select>
	<select id="sqlGetTCSFallbackIncomePurposeForDock" parameterClass="java.util.HashMap"
		resultClass="cargo.cms.extsvc.bo.TCSDtlBO">
			    SELECT CODE codeId,
			    CODE_DESC codeDesc
			    FROM MAST_TCS_INCOMING_PURPOSE
			    WHERE APPLICABLE_AT_ENTRANCE = 'Y'ORDER BY codeDesc
	</select>
	
<select id="sqlGetTCSFallbackIncomePurposeForPark" parameterClass="java.util.HashMap"
		resultClass="cargo.cms.extsvc.bo.TCSDtlBO">
			SELECT CODE codeId,
			    CODE_DESC codeDesc
			    FROM MAST_TCS_INCOMING_PURPOSE
			    WHERE APPLICABLE_AT_PARKING = 'Y' ORDER BY codeDesc
	</select>
	
	<select id="sqlCheckValidIncomePurpose" parameterClass="java.lang.String"
		resultClass="java.lang.Integer">
			SELECT COUNT(1) FROM MAST_TCS_INCOMING_PURPOSE WHERE code = #IncomePurpose#
	</select>
	<select id="sqlChecktruckIncomePurpose" parameterClass="java.lang.String"
		resultClass="cargo.cms.extsvc.bo.TCSDtlBO">
			SELECT purpose as incomePurposeCodeId,(SELECT CODE_DESC codeDesc FROM MAST_TCS_INCOMING_PURPOSE WHERE CODE = purpose) incomePurposeCodeDesc  FROM (
			SELECT MAX(TRIP.PURPOSE) purpose   FROM TRUCK_TRIP TRIP    
			WHERE (TRIP.CLOSED = 'N' OR TRIP.TRIP_CLOSED = 'N') AND TRUCK_NO = UPPER(#PARAM#))  A WHERE ROWNUM=1
	</select>
	
	<select id="getULDCSDSRFNo_TM" parameterClass="java.lang.String" resultClass="cargo.cms.extsvc.bo.RampCheckInBO">
	<![CDATA[
	SELECT 
 			DISTINCT A.SRF_NO as srfNo
		FROM 
			IMP_SRF_AWB_INVENTORY A,IMP_SRF B
		WHERE A.SRF_NO = B.SRF_NO AND
      		A.CDIF_NO IS NULL  AND a.dlv_pcs IS NULL
					AND (A.LSP_NO = #PARAM# OR (A.LOC_CODE = #PARAM# AND A.ULD_KEY IS NULL AND A.LSP_NO IS NULL) OR A.ULD_KEY = #PARAM#)
          AND ( B.STATUS  ='ISSUED'  
    AND sysdate  < B.srf_expy_date
    OR EXISTS (SELECT NULL FROM imp_srf_awb_inventory WHERE srf_no = B.SRF_NO AND B.STATUS = 'ISSUED' AND dlv_pcs  > 0) 
    OR B.SRF_NO in (select SRF_NO from IMP_CDIF where VOID_USER is null ))
		]]>
</select>
	<select id="sqlPkgAcptGetRCLAwbDate_mobile" parameterClass="java.lang.String" resultClass="java.lang.String">
		select TO_CHAR(awb_date,'DDMONYY') AWB_DATE	       
	        from (select awb_date
                from   awb
                where  awb_no = #AWB_NO# and awb_closed_yn = 'N' order by cr_date desc)
            where rownum = 1 
	</select>	
	<select id="sqlPkgAcptGetAwbClosedYn_mobile" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		select count(*) 
				FROM awb
				WHERE awb_no = #AWB_NO#
				AND awb_closed_yn = 'Y'
				AND missing_yn = 'N'
	</select>
	<select id="sqlPkgAcptGetAwbReuseCount_mobile" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		select count(1)
				from awb_reuse inv
				where inv.awb_no = #AWB_NO#					
				and inv.awb_date is null
	</select>	
	<select id="sqlgetRCLawbList_mobile" parameterClass="java.lang.String" resultClass="cargo.cms.extsvc.bo.RclBO">
	SELECT AWB_NO AS awbNo FROM exp_pre_rcl_hd WHERE PRE_RCL_NO=#PARAM# AND ppk_type='P'
	UNION 
	SELECT A.AWB_NO as awbNo FROM exp_pre_rcl_brkdn A,EXP_PRE_RCL_HD B WHERE B.PRE_RCL_NO = A.PRE_RCL_NO AND A.PRE_RCL_NO=#PARAM# AND B.ppk_type='M'
	</select>
	<select id="getBDULDdetails_mobile" parameterClass="cargo.cms.extsvc.bo.RampCheckInBO" resultClass="cargo.cms.extsvc.bo.RampCheckInBO" >
	<![CDATA[
	SELECT 
	rampchk.carr_code as fltCarr,
rampchk.flt_no as fltNo,
rampchk.uld_key as uldKey,
uldinv.loc_code as locn,
rampchk.flt_key as fltKey,
to_char(rampchk.flt_date,'dd/mm/yyyy') as fltDate,
(select decode(count(1),0,'Y','N') from edi_ffm_msg ffmmsg,edi_ffm_uld ffmuld where ffmuld.tr_no = ffmmsg.tr_no
 and ffmmsg.flt_key = rampchk.flt_key and ffmmsg.flt_date = rampchk.flt_date and ffmmsg.ffm_status = 'P'
 and ffmuld.uld_key = rampchk.uld_key) uldSurplus,
 decode(rampchk.brkdn_start_date,'','N','Y') as bdStart,
 decode(flt.act_date,'',decode(est_date,'',decode(sch_date,'','',
to_char(FLT.sch_date, 'DDMONYY')||' '||SUBSTR(lpad(FLT.sch_TIME,4, 0),0,2)|| decode(fLT.sch_TIME,'','',null,'',':')|| SUBSTR(lpad(FLT.sch_TIME,4, 0),3,4)),
to_char(FLT.est_date, 'DDMONYY')||' '||SUBSTR(lpad(FLT.est_TIME,4, 0),0,2)|| decode(fLT.est_TIME,'','',null,'',':')|| SUBSTR(lpad(FLT.est_TIME,4, 0),3,4))
,to_char(FLT.act_date, 'DDMONYY')||' '||SUBSTR(lpad(FLT.ACT_TIME,4, 0),0,2)|| decode(fLT.ACT_TIME,'','',null,'',':')|| SUBSTR(lpad(FLT.ACT_TIME,4, 0),3,4)) ataEtaSta,
(select to_char(hd.hover_date,'DDMONYY HH24:MI') from imp_ramp_dolly_hd hd,imp_ramp_dolly_dtl dtl where dtl.dolly_id = hd.dolly_id and dtl.uld_key = rampchk.uld_key and hd.ho_no is not null and hd.hover_date is not null
 and hd.flt_key = rampchk.flt_key and hd.flt_date=rampchk.flt_date) AS hoTime,
 uldinv.DAM_IND as uldDam,
 uldinv.DAM_RMK AS damRmk,
 uldinv.ser_ind AS uldServicable,
 uldList.wh_rmk as bdInstULD,
 rampchk.dam_ind AS chkinDamInd
FROM imp_ramp_chk_dtl rampchk
JOIN FLT_OPR flt ON flt.flt_key = rampchk.flt_key and flt.sch_date = rampchk.flt_date and flt.flt_type = 'A'
JOIN ULD_INVENTORY uldinv ON uldinv.uld_key = rampchk.uld_key AND uldinv.imp_flt_key = rampchk.flt_key and uldinv.imp_flt_date = rampchk.flt_date
LEFT JOIN imp_uld_list uldList on uldList.flt_key = rampchk.flt_key and uldList.flt_date = rampchk.flt_date  AND uldList.ULD_KEY = rampchk.ULD_KEY
where  
rampchk.uld_key=#uldKey#
]]>
</select>
<select id="getBDDMGdetails" parameterClass="cargo.cms.extsvc.bo.RampCheckInBO" resultClass="cargo.cms.extsvc.bo.RampCheckInBO" >
	<![CDATA[
	SELECT CODE AS damType,CODE_DESC AS damDesc FROM MAST_CODE_DTL WHERE CODE_TYPE='MBLE_DAM_DTL' ORDER BY sno DESC
	]]>
</select>

<select id="getBDAWBULDdetails_mobile" parameterClass="cargo.cms.extsvc.bo.RampCheckInBO" resultClass="cargo.cms.extsvc.bo.RampCheckInBO" >
	<![CDATA[

select rtrim(SUBSTR(A.AWB_NO,1,3)||'-'||SUBSTR(A.AWB_NO,4), '-') as awbNo,
        decode(c.MANIFEST_PCS,a.man_pcs,c.MANIFEST_PCS,a.man_pcs) as pcs,
        decode(c.MANIFEST_WT,a.man_wt,c.MANIFEST_WT,a.man_wt) as wt,
				d.airln_rmk as bdInstrAWB,a.dest as dest,
        (SELECT STRAGG(STRINGDELIM(SPLCODE.CODE, ',')) FROM AWB AWB,MAST_SPL_HAND_CODE SPLCODE WHERE SPLCODE.CODE IN (AWB.SPL_CODE1,AWB.SPL_CODE2,AWB.SPL_CODE3,
      AWB.SPL_CODE4,AWB.SPL_CODE5,AWB.SPL_CODE6,AWB.SPL_CODE7,AWB.SPL_CODE8,AWB.SPL_CODE9) AND SPLCODE.MBLE_BD_FUN = 'Y'
      AND AWB.AWB_NO=d.awb_no AND AWB.AWB_DATE=d.awb_date) AS shc,
      (CASE WHEN (SELECT COUNT(1) FROM MAST_ARPT WHERE CODE=a.dest AND RED_PORT='Y') > 0 THEN 'Y' ELSE 'N' END) as destColor,
      (select decode(count(1),0,'N','Y') from xt_imp_car_shp_dtl where awb_no=d.awb_no and awb_date=d.awb_date and imp_flt_key=m.flt_key and imp_flt_date=m.flt_date) xtInd
		from edi_ffm_shp a,edi_ffm_uld b,edi_ffm_msg m, imp_car_shp c,imp_car_awb d ,ULD_INVENTORY E
		where a.tr_no=b.tr_no and a.udoc_line_no= b.doc_line_no 
		and b.uld_key=#uldKey# AND m.flt_key = e.flt_key and m.flt_date = e.flt_date AND E.FLT_TYPE='I' AND E.ULD_KEY = B.ULD_KEY
		and b.tr_no = m.tr_no and m.ffm_status = 'P' AND B.OFF_POINT = 'HKG'
		and a.awb_no=c.awb_no  and a.flt_key=c.flt_key and a.flt_date=c.flt_date
    	and c.awb_no=d.awb_no and c.awb_date = d.awb_date
]]>
</select>
<select id="getBDInstrAWBdetails_mobile" parameterClass="cargo.cms.extsvc.bo.RampCheckInBO" resultClass="cargo.cms.extsvc.bo.RampCheckInBO" >
	<![CDATA[
SELECT 
	(SELECT DECODE(COUNT(1),0,'Y','N') surplus from (
	select COUNT(1) as surplusCnt
from edi_ffm_shp a,edi_ffm_uld b,edi_ffm_msg m
		where a.tr_no=b.tr_no and a.udoc_line_no= b.doc_line_no 
		and b.uld_key=#uldKey# AND m.flt_key = #fltKey# and m.flt_date = TO_DATE(#fltDate#,'dd/mm/yyyy')
		and b.tr_no = m.tr_no and m.ffm_status = 'P' AND B.OFF_POINT = 'HKG'
	    and a.awb_no=B.AWB_NO  AND a.awb_date = B.AWB_DATE 
	UNION ALL
	select COUNT(1) as surplusCnt
	from edi_ffm_shp a,edi_ffm_uld b,edi_ffm_msg m
	    where a.tr_no=b.tr_no and a.udoc_line_no= b.doc_line_no 
	    and b.uld_key IS NULL AND m.flt_key =#fltKey# and m.flt_date = TO_DATE(#fltDate#,'dd/mm/yyyy')
	    and b.tr_no = m.tr_no and m.ffm_status = 'P' AND B.OFF_POINT = 'HKG'
	    and a.awb_no=B.AWB_NO  AND a.awb_date = B.AWB_DATE
	    AND EXISTS (SELECT NULL FROM MAST_ULD_TYPE WHERE CODE=substr(#uldKey#,0,3) and (H_CONT_IND = 'Y' OR BT_IND = 'Y' OR DUMMY_H_CONT_IND = 'Y'))) where surplusCnt > 0) surplus ,
    (SELECT STRAGG(STRINGDELIM(SPLCODE.CODE, ',')) FROM AWB AWB,MAST_SPL_HAND_CODE SPLCODE WHERE SPLCODE.CODE IN (AWB.SPL_CODE1,AWB.SPL_CODE2,AWB.SPL_CODE3,
      AWB.SPL_CODE4,AWB.SPL_CODE5,AWB.SPL_CODE6,AWB.SPL_CODE7,AWB.SPL_CODE8,AWB.SPL_CODE9) AND SPLCODE.MBLE_BD_FUN = 'Y'
      AND AWB.AWB_NO=B.awb_no AND AWB.AWB_DATE=B.awb_date) AS shc,
      (SELECT DECODE(count(1),'0','N','Y') FROM AWB AWB,MAST_SPL_HAND_CODE SPLCODE WHERE SPLCODE.CODE IN (AWB.SPL_CODE1,AWB.SPL_CODE2,AWB.SPL_CODE3,
      AWB.SPL_CODE4,AWB.SPL_CODE5,AWB.SPL_CODE6,AWB.SPL_CODE7,AWB.SPL_CODE8,AWB.SPL_CODE9) AND SPLCODE.MBLE_BRKDN_ALRT = 'Y'
      AND AWB.AWB_NO=B.awb_no AND AWB.AWB_DATE=B.awb_date) AS alert,
      (CASE WHEN (SELECT COUNT(1) FROM MAST_ARPT WHERE CODE=B.dest AND RED_PORT='Y') > 0 THEN 'Y' ELSE 'N' END) as destColor,
      (SELECT CARAWB.wh_rmk FROM IMP_CAR_AWB CARAWB WHERE CARAWB.AWB_NO=B.AWB_NO AND CARAWB.AWB_DATE=B.AWB_DATE) AS bdInstrAWB,
      (SELECT 'XT'||'('||flt.flt_module1||'/'||NVL(PKG_COMMON.GET_FLT_ETA(flt.FLT_KEY,flt.SCH_DATE, 'D', 'DD'),PKG_COMMON.GET_FLT_STA(flt.FLT_KEY,flt.SCH_DATE, 'D', 'DD'))||')'
       FROM xt_imp_car_shp_dtl xtshp,FLT_OPR flt WHERE flt.flt_key = xtshp.exp_flt_key and flt.sch_date = xtshp.exp_flt_date AND flt.flt_type='D'
      AND xtshp.awb_no=#awbNo# and xtshp.awb_date = #awbDate# and rownum=1) as xtFlt,
      B.dest as dest
FROM AWB B WHERE B.AWB_NO=#awbNo# AND B.AWB_DATE=#awbDate#
]]>
</select>

<select id="getFltDateFormat_mobile" parameterClass="java.lang.String" resultClass="java.lang.String" >
<![CDATA[
select to_char(TO_DATE(#PARAM#,'DD/MM/YYYY'),'DDMONYY') from dual
]]>
</select>
<select id="getCheckInDate_mobile" parameterClass="cargo.cms.extsvc.bo.RampCheckInBO" resultClass="java.lang.String" >
<![CDATA[
select a.chkin_uld_key 
from imp_awb_strg_dtl A where A.awb_no=#awbNo# and A.awb_date=#awbDate# and A.flt_key=#fltKey# and A.flt_date=#fltDate# 
and a.chkin_uld_key is not null and NVL(A.ULD_KEY,'***') = NVL(#uldKey#,'***') AND NVL(A.LSP_NO,'**') = NVL(#lspNo#,'**') AND ROWNUM=1
]]>
</select>

<select id="getStrgHD_mobile" parameterClass="cargo.cms.extsvc.bo.RampCheckInBO" resultClass="cargo.cms.extsvc.bo.RampCheckInBO" >
	<![CDATA[
select carshp.awb_no AS awbNo,to_char(carshp.awb_date,'DDMONYY') AS awbDate,carshp.flt_key AS fltKey,TO_CHAR(carshp.flt_date,'DD/MM/YYYY') AS fltDate,carshp.manifest_pcs as mnfstPcs,carshp.recd_pcs as recdPcs,
DECODE(carshp.manifest_pcs,carshp.recd_pcs,'N','Y') as discrepency,
AWB.DEST,(SELECT STRAGG(STRINGDELIM(SPLCODE.CODE, ',')) FROM AWB AWB,MAST_SPL_HAND_CODE SPLCODE WHERE SPLCODE.CODE IN (AWB.SPL_CODE1,AWB.SPL_CODE2,AWB.SPL_CODE3,
      AWB.SPL_CODE4,AWB.SPL_CODE5,AWB.SPL_CODE6,AWB.SPL_CODE7,AWB.SPL_CODE8,AWB.SPL_CODE9) AND SPLCODE.MBLE_BD_FUN = 'Y'
      AND AWB.AWB_NO=CARSHP.awb_no AND AWB.AWB_DATE=CARSHP.awb_date) AS shc,
      (select decode(count(1),0,'N','Y') from xt_imp_car_shp_dtl where awb_no=carshp.awb_no and awb_date=carshp.awb_date and imp_flt_key=carshp.flt_key and imp_flt_date=carshp.flt_date) xtInd 
      from AWB AWB,imp_car_shp carshp where 
		AWB.awb_no = carshp.awb_no and AWB.awb_date = carshp.awb_date and
			carshp.awb_no=#awbNo# and carshp.awb_date=#awbDate# and carshp.flt_key=#fltKey# and carshp.flt_date=#fltDate#
]]>
</select> 	
   
<select id="getStrgdetails_mobile" parameterClass="cargo.cms.extsvc.bo.RampCheckInBO" resultClass="cargo.cms.extsvc.bo.RampCheckInBO" >
	<![CDATA[
	select NVL(inv.uld_key,NVL(inv.lsp_no,NVL(inv.loc_code,''))) as ULDLsp,inv.locn_pcs as pcs,TRIM(TO_CHAR(NVL(inv.locn_wt,0), '9999990D9')) AS wt,inv.seq_no seqNo 
	from awb_inventory inv
	where inv.awb_no=#awbNo# and inv.awb_date=#awbDate# and inv.flt_key=#fltKey# and inv.flt_date=#fltDate#
]]>
</select> 	
<select id="getBDSummaryAWBDtls_mobile" parameterClass="cargo.cms.extsvc.bo.RampCheckInBO" resultClass="cargo.cms.extsvc.bo.RampCheckInBO" >
	<![CDATA[
	select DISTINCT A.AWB_NO AS awbNo,to_char(A.AWB_DATE,'DDMONYY') AS awbDate from imp_awb_strg_dtl A 
	where A.flt_key=#fltKey# and A.flt_date=#fltDate# and a.chkin_uld_key is not null and a.chkin_uld_key=#uldKey#
	]]>
	<isNotEmpty property="awbNo">
	AND A.AWB_NO = #awbNo#
	</isNotEmpty>
	<isNotEmpty property="awbDate"> 
	AND A.AWB_DATE = #awbDate#
	</isNotEmpty>
	ORDER BY A.AWB_NO ASC
</select>
<select id="getBDEndorseDtls_mobile" parameterClass="cargo.cms.extsvc.bo.RampCheckInBO" resultClass="java.lang.String" >
SELECT STRAGG(STRINGDELIM(CODE,',')) AS splCode
		FROM AWB A
		LEFT JOIN MAST_SPL_HAND_CODE M
		ON (M.CODE =A.SPL_CODE1	OR M.CODE =A.SPL_CODE2 OR M.CODE =A.SPL_CODE3 OR M.CODE =A.SPL_CODE4
		OR M.CODE =A.SPL_CODE5 	OR M.CODE =A.SPL_CODE6 OR M.CODE =A.SPL_CODE7 OR M.CODE =A.SPL_CODE8
		OR M.CODE =A.SPL_CODE9)	AND M.ENDR_BD = 'Y' WHERE A.AWB_NO =#awbNo# AND A.AWB_DATE =TO_DATE(#awbDate#,'DDMONYY')
</select>
<select id="getuldDamagedetails_mobile" parameterClass="cargo.cms.extsvc.bo.RampCheckInBO" resultClass="cargo.cms.extsvc.bo.RampCheckInBO" >
SELECT dam_ind AS uldDam,DAM_RMK AS damRmk,ser_ind AS uldServicable FROM uld_inventory WHERE ULD_KEY=#uldKey#
</select> 
<select id="getrcvdInfo_mobile" parameterClass="cargo.cms.extsvc.bo.RampCheckInBO" resultClass="cargo.cms.extsvc.bo.RampCheckInBO" >
SELECT nvl(manifest_pcs,0) as mnfstPcs,DECODE(MANIFEST_WT,null,'0',DECODE(trim(TO_CHAR(NVL(MANIFEST_WT,0),'99999990.0')),'0','',trim(TO_CHAR(NVL(MANIFEST_WT,0),'99999990.0')))) as mnfstWt,
nvl(recd_pcs,0) as recdPcs,DECODE(recd_wt,null,'0',DECODE(trim(TO_CHAR(NVL(recd_wt,0),'99999990.0')),'0','',trim(TO_CHAR(NVL(recd_wt,0),'99999990.0')))) as recdWt,
car_created as carInd FROM IMP_CAR_SHP 
WHERE AWB_NO=#awbNo# and awb_date=#awbDate# and flt_key=#fltKey# and flt_date=#fltDate#
</select> 		
<update id="updateuldDamage_Mobile" parameterClass="cargo.cms.extsvc.bo.RampCheckInBO">
UPDATE ULD_INVENTORY SET dam_ind = #uldDam#,DAM_RMK = #damRmk#,ser_ind = #uldServicable#,tr_type='MBKDN',lm_user_id=#userID# WHERE ULD_KEY=#uldKey#
</update>
<update id="updatecheckinuldDamage_Mobile" parameterClass="cargo.cms.extsvc.bo.RampCheckInBO">
UPDATE IMP_RAMP_CHK_DTL SET DAM_IND = #uldDam# ,DAM_RMK = #damRmk# WHERE (FLT_KEY,FLT_DATE,ULD_KEY) IN (SELECT A.FLT_KEY,A.FLT_DATE,A.ULD_KEY FROM IMP_RAMP_CHK_DTL A,ULD_INVENTORY B WHERE A.FLT_KEY = B.FLT_KEY AND A.FLT_DATE = B.FLT_DATE AND B.FLT_TYPE='I' AND A.ULD_KEY = B.ULD_KEY AND B.ULD_KEY = #uldKey#)
</update>
<select id="checkValidULDCSDLocn" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		<![CDATA[
		SELECT COUNT(1) FROM (
		SELECT COUNT(1) AS cnt FROM ULD_INVENTORY WHERE ULD_KEY = #PARAM#
		UNION ALL
		SELECT COUNT(1) AS cnt FROM LSP_INVENTORY WHERE lsp_no = #PARAM#
		UNION ALL
		SELECT COUNT(1) AS cnt FROM mast_wh_loc WHERE CODE = #PARAM#) A WHERE A.cnt > 0
		]]>
	</select>

	<insert id="insertFunctionUsageDuration" parameterClass="map">
		INSERT INTO MOB_FUNCTION_USAGE (SEQ_NO,USER_NAME,FUNCTION_NAME,START_TIME, END_TIME,TIME_DURATION,DEVICE_ID,CR_USER_ID, LM_USER_ID,CR_DATE,LM_DATE)
			VALUES (MOB_FUNCTION_USAGE_SEQ.NEXTVAL,#USER#,#FUNCTION#,to_date(#START_TIME#,'DDMONYY HH24:MI:SS'),SYSDATE,
			ROUND(((to_date(TO_CHAR(SYSDATE,'DDMONYY HH24:MI:SS'),'DDMONYY HH24:MI:SS') - to_date(#START_TIME#,'DDMONYY HH24:MI:SS')) * 24 * 60 * 60) , 2),
	   		 #DEVICE_ID#,#USER#,#USER#,SYSDATE,SYSDATE)
	</insert>
	<select id="getAirsideAcceptInd"  parameterClass="java.lang.String"  resultClass="java.lang.String">
		select count(1) from mast_wh_loc WHERE CODE = #location# and wh_group = 'AIRSIDE'
	</select>
	<select id="imp_getdateAndTime_mobile"  parameterClass="map"  resultClass="java.lang.String" >
			SELECT TO_CHAR(SYSDATE,'DDMONYY HH24MI') FROM DUAL
   	</select>	
   	<select id="sqlULDShipmentCount_mobile"  parameterClass="java.lang.String" resultClass="java.lang.Integer">
		SELECT count(1) FROM AWB_INVENTORY WHERE uld_key = #uld_key# 
	</select>
		<select id="sqlAWBTYPEBD_mobile"  parameterClass="map" resultClass="java.lang.String">
		SELECT AWB_TYPE FROM AWB WHERE AWB_NO=#awbNo# AND AWB_DATE = #awbDate#
	</select>
	<select id="getconditionList_mobile" parameterClass="java.lang.String" resultClass="cargo.cms.extsvc.bo.RampCheckInBO" >
	SELECT  mastCodeDtl.code as damType, 
			mastCodeDtl.code_desc as damDesc	
	FROM MAST_CODE_DTL mastCodeDtl 
	WHERE   
		   mastCodeDtl.CODE_TYPE = 'DAMAGE_CONDN' 
	ORDER BY mastCodeDtl.code_desc
	</select>
	<select id="getLocnWt_mobile"  parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT TRIM(TO_CHAR(nvl(LOCN_wt,0), '9999999990D9')) FROM AWB_INVENTORY WHERE SEQ_NO=#PARAM# 
	</select>
	<update id="updatelocnAWBInv_mobile" parameterClass="cargo.cms.extsvc.bo.RampCheckInBO">
	UPDATE AWB_INVENTORY SET locn_pcs= LOCN_PCS - #pcs#,locn_wt=locn_wt - #wt#,ref_awb_event='MRAWB',lm_user_id=#userID# WHERE SEQ_NO=#seqNo#
	</update>
	<update id="updatelocnCarshp_mobile" parameterClass="cargo.cms.extsvc.bo.RampCheckInBO">
	UPDATE IMP_CAR_SHP SET recd_pcs=recd_pcs - #pcs#,recd_wt=recd_wt - #wt# WHERE awb_no=#awbNo# and awb_date=#awbDate# and flt_key=#fltKey# and TO_CHAR(flt_date,'DDMONYY')=#fltDate#
	</update>
	<select id="getLocnPcs_mobile"  parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT locn_pcs FROM AWB_INVENTORY WHERE SEQ_NO=#PARAM# 
	</select>
	<update id="deleteAWBInv_mobile" parameterClass="java.lang.String">
	DELETE FROM AWB_INVENTORY WHERE SEQ_NO=#PARAM#
	</update>
	<select id="sqlBDDamage_mobile"  parameterClass="map" resultClass="cargo.cms.extsvc.bo.RampCheckInBO">
		SELECT DAM_IND as uldDamage,ser_ind as serviceable,CARGO_DAM as cargoDamage FROM IMP_RAMP_CHK_DTL WHERE ULD_KEY=#uldkey# AND FLT_KEY=#fltKey# AND FLT_DATE=#fltDate#
	</select>
	<select id="checkBDCompleteDate" parameterClass="map" resultClass="java.lang.Integer" >	
 	select count(1) from imp_ramp_chk_dtl where uld_key=#uldKey# and flt_key = #fltKey# and flt_Date = #fltDate# and BRKDN_COMPL_DATE is not null
</select>
	<select id="getCounterCodeCount"  parameterClass="java.lang.String"  resultClass="java.lang.Integer">
		select count(1) from ULD_TYPE_CONTR  WHERE ULD_TYPE = SUBSTR(#uldType#, 1, 3)
	</select>
<select id="sqlGetTagDetails" parameterClass="cargo.cms.extsvc.bo.RelocateTagDtlBO" resultClass="cargo.cms.extsvc.bo.RelocateTagDtlBO" >	
 		SELECT hawb.seq_no seqNo,
		    hawb.hawb_no tagNo,
		    awb.awb_no awbNo,
		    nvl(awb.uld_key,nvl(awb.lsp_no,awb.loc_code)) location,
		    hawb.strg_pcs pcs,
		    hawb.strg_wt wt
		  FROM awb_inventory awb JOIN hawb_inventory hawb ON awb.seq_no=hawb.seq_no
		  WHERE 1=1
		  <isNotEmpty property="tagNo">
			AND hawb.hawb_no=#tagNo#
		  </isNotEmpty>
		   <isNotEmpty property="awbNo">
			AND awb.awb_no=#awbNo# and awb.awb_date=#awbDate#
		  </isNotEmpty>
		   <isNotEmpty property="fromULD">
			AND awb.uld_key =#fromULD#
		  </isNotEmpty>
		   <isNotEmpty property="fromCSD">
			AND awb.lsp_no=#fromCSD#
		  </isNotEmpty>
		   <isNotEmpty property="fromLoc">
			AND awb.loc_code=#fromLoc#
		  </isNotEmpty>
	</select>
	
	<select id="sqlGetTagDetailsBySeq" parameterClass="java.lang.String" resultClass="cargo.cms.extsvc.bo.RelocateTagDtlBO" >	
 		SELECT hawb.seq_no seqNo,
		    hawb.hawb_no tagNo,
		    awb.awb_no awbNo,
		    nvl(awb.uld_key,nvl(awb.lsp_no,awb.loc_code)) location,
		    hawb.strg_pcs pcs,
		    hawb.strg_wt wt
		 FROM awb_inventory awb JOIN hawb_inventory hawb ON awb.seq_no=hawb.seq_no
		 WHERE awb.seq_no=#seqNo#
	</select>

	
	
<select id="getMatchingTagListAcceptMailTag" parameterClass="cargo.cms.extsvc.bo.TransitMailBO" resultClass="cargo.cms.extsvc.bo.TransitMailBO" >
		SELECT DTL.TAG_NO as tagNum
		FROM EDI_CARDIT_HD HD 
		JOIN EDI_CARDIT_TAG_DTL DTL ON HD.TR_NO = DTL.TR_NO
		left JOIN AWB B ON  b.awb_no = HD.awb_No and b.awb_date = HD.awb_Date  
		WHERE  SUBSTR(DTL.TAG_NO,17,4) = #dnNo# 		  
		   <isNotEmpty property="dest">
			AND HD.DEST = #dest#
		  </isNotEmpty>
		   <isNotEmpty property="orig">
			AND HD.ORIG = #orig#
		  </isNotEmpty>
		  <isNotEmpty property="wt">
			AND DTL.TAG_WT = #wt#
		  </isNotEmpty>
		  AND NVL(B.AWB_CLOSED_YN,'N') = 'N'
	</select>

<select id="fetchScanBarcodeMailCargoDtls" parameterClass="java.lang.String" resultClass="cargo.cms.extsvc.bo.TransitMailBO" >
		SELECT DTL.TAG_NO                AS dispTag ,
		  HD.AWB_NO                      AS awbNum,
		  TO_CHAR(HD.AWB_DATE,'DDMONYY') AS awbDate,
		  HD.ORIG                        AS orig,
		  HD.DEST                        AS dest ,
		  DTL.TAG_WT                     AS weight
		FROM EDI_CARDIT_HD HD 
		JOIN EDI_CARDIT_TAG_DTL DTL ON HD.TR_NO = DTL.TR_NO
		left JOIN AWB B ON b.awb_no = HD.awb_No and b.awb_date = HD.awb_Date
		WHERE DTL.TAG_NO = #scanTagNo# AND NVL(B.AWB_CLOSED_YN,'N') = 'N'
	</select>
	
          <select id="chkNestingIdForBulk" parameterClass="java.util.HashMap" resultClass="java.lang.String" >
		    SELECT COUNT(*) FROM EXP_PMANIFEST_ULD A 
		   JOIN EXP_PMANIFEST_ULD_AWB B ON A.FLT_KEY = B.FLT_KEY
		   JOIN EXP_PMANIFEST_ULD_AWB_HAWB C ON C.TR_NO = B.TR_NO
		   where A.ULD_BT_NO = #uldNo# and B.FLT_KEY = #fltNo# and B.FLT_DATE =to_date(#fltDate#,'DDMONYY')
   		</select>

<select id="chkHawbNoWithoutNstgId" parameterClass="java.util.HashMap" resultClass="java.lang.String" >
		  SELECT COUNT(*) FROM EXP_PMANIFEST_ULD_AWB_HAWB A 
		   JOIN EXP_PMANIFEST_ULD_AWB B ON A.TR_NO = B.TR_NO 
		   JOIN EXP_PMANIFEST_ULD C ON C.ULD_BT_NO = B.ULD_BT_NO
		   where B.ULD_BT_NO = #uldNo#  and C.flt_key = #fltNo# and C.flt_date=to_date(#fltDate#,'DDMONYY')
   		</select>

<select id="getStrgList_TMBU"  parameterClass="cargo.cms.extsvc.bo.TransitMailBO" resultClass="cargo.cms.extsvc.bo.TransitMailBO">
			SELECT C.HAWB_NO AS tagNo,
				  C.strg_pcs     AS strgPcs,
				  C.strg_wt      AS strgWt,
				  A.AWB_NO       AS awbNo,
				  to_char(A.AWB_DATE,'DDMONYY') AS awbDate,
				  A.LSP_NO       AS lspNo,
				  A.ULD_KEY      AS uldKey,
				  A.LOC_CODE     AS locnCode,
				  A.SEQ_NO AS seqNo
				FROM HAWB_INVENTORY C
				JOIN AWB_INVENTORY A ON C.SEQ_NO = A.SEQ_NO
				JOIN AWB B ON B.AWB_NO = A.AWB_NO AND B.AWB_DATE = A.AWB_DATE
				WHERE 1 = 1 AND NOT(A.FLT_TYPE='E' AND A.FLT_KEY IS NOT NULL) AND TRM_NO IS NULL AND NVL(B.HOUSE_FLG,'N') = 'Y'
				AND NOT EXISTS(SELECT NULL FROM ULD_INVENTORY WHERE ULD_KEY = A.ULD_KEY AND (PPK_IND = 'Y' OR MIX_PPK_IND = 'Y') AND (REBUILD_YN = 'N' AND TOPUP_YN = 'N'))
				<isNotEmpty property="awbNo">
					AND A.AWB_NO=#awbNo# AND A.AWB_DATE=#awbDate#
				</isNotEmpty>
				<isNotEmpty property="tagNo">
					AND C.HAWB_NO = #tagNo#
				</isNotEmpty>
				<isNotEmpty property="uldKey">
					AND  A.ULD_KEY = #uldKey#
			     </isNotEmpty>	
				<isNotEmpty property="lspNo">
					AND  A.LSP_NO = #lspNo#
			     </isNotEmpty>
			     <isNotEmpty property="fromLoc">
					AND  A.LOC_CODE = #fromLoc# and A.ULD_KEY IS NULL AND A.LSP_NO IS NULL
			     </isNotEmpty>
		</select>

		<select id="getNestingIDForNBKULD" parameterClass="java.lang.String" resultClass="java.lang.String">
		  SELECT B.NESTING_ID FROM EDI_RESDIT_AWB_DTL A 
		  JOIN EDI_RESDIT_TAG_DTL B ON A.TR_AWB_NO = B.TR_AWB_NO 
		  JOIN EDI_RESDIT_HD C ON C.TR_NO = A.TR_NO
		  WHERE (C.flt_key,C.flt_date) IN (SELECT IMP_FLT_KEY,IMP_FLT_DATE FROM uld_inventory where ULD_KEY = #uldKey# and HANDLING_MODE is not null and HANDLING_MODE='NBK' ) AND CONTAINER_NO = #uldKey# and ROWNUM = 1
		</select>


 	<select id="getCSVRecordsAutoBD" parameterClass="java.util.HashMap" resultClass="cargo.cms.common.utils.bo.CommonUtilFunBO" >
		   <![CDATA[
				select '"'||'1.3.9'||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||'03'||'"'||','||'"'||
					(SELECT DECODE(COUNT(1), 0, '', '09') FROM MAST_CARRIER where code in (SELECT CARR_CODE FROM MAST_CARR_GRP where GRP_CARR_CODE = 'CX' and carr_code = crd.partnerID) and MAIL_AS_CARGO = 'N')
					||'"'||','||'"'||
					to_char(chk.BRKDN_COMPL_DATE,'YYMMDD')||'"'||','||'"'||to_char(chk.BRKDN_COMPL_DATE,'HH24mi')||'"'
					||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'|| 'HKG' ||'"'||','||'"'||
					(SELECT DECODE(COUNT(1), 0, '', crd.partnerID) FROM MAST_CARR_GRP where ((GRP_CARR_CODE = 'CX' and carr_code = crd.partnerID) OR (GRP_CARR_CODE = 'CX' and GRP_CARR_CODE = crd.partnerID)))
					||'"'||','||'"'||chk.carr_code||'"'||','||'"'
					||chk.flt_no||'"'||','||'"'||to_char(chk.flt_date,'YYMMDD')||'"'||','||'"'||'4'||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||
					res.NESTING_ID||'"'||','||'"'||res.CONTAINER_NO||'"'||','||'"'||res.CONTAINER_TYPE
					||'"'||','||'"'|| 'CPCT' ||'"'|| ',' ||'"'||''||'"'||','||'"'||''||'"'||','||'"'|| 'Y' ||'"' as csvRec
				from imp_ramp_chk_dtl chk
		        JOIN (SELECT C.FLT_KEY,C.FLT_DATE,B.NESTING_ID,B.THRU_UNIT_IND,B.CONTAINER_NO,B.CONTAINER_TYPE,A.AWB_NO,A.AWB_DATE        
		        FROM EDI_RESDIT_AWB_DTL A JOIN EDI_RESDIT_TAG_DTL B ON A.TR_AWB_NO = B.TR_AWB_NO JOIN EDI_RESDIT_HD C ON C.TR_NO = A.TR_NO) res ON res.CONTAINER_NO= chk.uld_key and res.flt_key=chk.flt_key and res.flt_date=chk.flt_date
		        LEFT JOIN (SELECT HD.AWB_NO,HD.AWB_DATE,substr(DTL.flt_key,0,2) as partnerID FROM EDI_CARDIT_HD HD , EDI_CARDIT_TRANSP_DTL DTL WHERE HD.TR_NO = DTL.TR_NO AND DTL.flt_key is not null  and DTL.DEPT_PORT = 'HKG') crd ON  crd.AWB_NO = res.AWB_NO AND crd.AWB_DATE = res.AWB_DATE
		        where chk.uld_key = #ULDKEY#
				and chk.flt_key = #FLTKEY# and chk.flt_date=to_date(#FLTDATE#,'DDMONYY') and rownum=1
		     ]]>
   		</select>
   		
   	<select id="getCSVRecordsBDForNBK" parameterClass="java.util.HashMap" resultClass="cargo.cms.common.utils.bo.CommonUtilFunBO" >
		   <![CDATA[
				select '"'||'1.3.9'||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||'03'||'"'||','||'"'||
					(SELECT DECODE(COUNT(1), 0, '', '09') FROM MAST_CARRIER where code in (SELECT CARR_CODE FROM MAST_CARR_GRP where GRP_CARR_CODE = 'CX' and carr_code = crd.partnerID) and MAIL_AS_CARGO = 'N')
					||'"'||','||'"'||
					to_char(chk.BRKDN_COMPL_DATE,'YYMMDD')||'"'||','||'"'||to_char(chk.BRKDN_COMPL_DATE,'HH24mi')||'"'
					||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'|| 'HKG' ||'"'||','||'"'||
					(SELECT DECODE(COUNT(1), 0, '', crd.partnerID) FROM MAST_CARR_GRP where ((GRP_CARR_CODE = 'CX' and carr_code = crd.partnerID) OR (GRP_CARR_CODE = 'CX' and GRP_CARR_CODE = crd.partnerID)))
					||'"'||','||'"'||chk.carr_code||'"'||','||'"'
					||chk.flt_no||'"'||','||'"'||to_char(chk.flt_date,'YYMMDD')||'"'||','||'"'||'4'||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||
					mail.TAG_NO||'"'||','||'"'||mail.bd_uld_key||'"'||','||'"'||substr(mail.bd_uld_key,0,3)
					||'"'||','||'"'|| 'CPCT' ||'"'|| ','||'"'||''||'"'||','||'"'||''||'"'||','||'"'|| 'N' ||'"' as csvRec
				from imp_ramp_chk_dtl chk
		        JOIN (SELECT TAG_NO,AWB_NO,AWB_DATE,FLT_KEY,FLT_DATE,bd_uld_key FROM imp_xps_obc_mail Where awb_no is not null) mail ON mail.bd_uld_key = chk.uld_key and mail.flt_key=chk.flt_key and mail.flt_date=chk.flt_date		        
		        LEFT JOIN (SELECT HD.AWB_NO,HD.AWB_DATE,substr(DTL.flt_key,0,2) as partnerID FROM EDI_CARDIT_HD HD , EDI_CARDIT_TRANSP_DTL DTL WHERE HD.TR_NO = DTL.TR_NO AND DTL.flt_key is not null  and DTL.DEPT_PORT = 'HKG') crd ON  crd.AWB_NO = mail.AWB_NO AND crd.AWB_DATE = mail.AWB_DATE
		        where chk.uld_key = #ULDKEY#
				and chk.flt_key = #FLTKEY# and chk.flt_date=to_date(#FLTDATE#,'DDMONYY')
		     ]]>
   		</select>     		
   		
<select id="getCSVRecordsNonNBK" parameterClass="java.util.HashMap" resultClass="cargo.cms.common.utils.bo.CommonUtilFunBO" >
		  <![CDATA[
				select '"'||'1.3.9'||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||'03'||'"'||','||'"'||
				(SELECT DECODE(COUNT(1), 0, '', '09') FROM MAST_CARRIER where code in (SELECT CARR_CODE FROM MAST_CARR_GRP where GRP_CARR_CODE = 'CX' and carr_code = crd.partnerID) and MAIL_AS_CARGO = 'N')
				||'"'||','||'"'||
				to_char(chk.BRKDN_COMPL_DATE,'YYMMDD')||'"'||','||'"'||to_char(chk.BRKDN_COMPL_DATE,'HH24mi')||'"'
				||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'|| 'HKG' ||'"'||','||'"'||
				 (SELECT DECODE(COUNT(1), 0, '', crd.partnerID) FROM MAST_CARR_GRP where ((GRP_CARR_CODE = 'CX' and carr_code = crd.partnerID) OR (GRP_CARR_CODE = 'CX' and GRP_CARR_CODE = crd.partnerID)))
				||'"'||','||'"'||chk.carr_code||'"'||','||'"'
				||chk.flt_no||'"'||','||'"'||to_char(chk.flt_date,'YYMMDD')||'"'||','||'"'||'4'||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||
				mail.TAG_NO||'"'||','||'"'||mail.bd_uld_key||'"'||','||'"'||substr(mail.bd_uld_key,0,3)
				||'"'||','||'"'|| 'CPCT' ||'"'|| ','||'"'||''||'"'||','||'"'||''||'"'||','||'"'|| 'N' ||'"' as csvRec
				from imp_ramp_chk_dtl chk	
		        JOIN (SELECT TAG_NO,AWB_NO,AWB_DATE,FLT_KEY,FLT_DATE,bd_uld_key FROM imp_xps_obc_mail Where awb_no is not null) mail ON mail.bd_uld_key = chk.uld_key and mail.flt_key=chk.flt_key and mail.flt_date=chk.flt_date
		        LEFT JOIN (SELECT HD.AWB_NO,HD.AWB_DATE,substr(DTL.flt_key,0,2) as partnerID FROM EDI_CARDIT_HD HD , EDI_CARDIT_TRANSP_DTL DTL WHERE HD.TR_NO = DTL.TR_NO AND DTL.flt_key is not null and DTL.DEPT_PORT = 'HKG') 
		        crd ON  crd.AWB_NO = mail.AWB_NO AND crd.AWB_DATE = mail.AWB_DATE
		        where chk.uld_key = #ULDKEY# and chk.flt_key = #FLTKEY# and chk.flt_date=to_date(#FLTDATE#,'DDMONYY') 
            	AND mail.AWB_NO = #AWB_NO# and mail.AWB_DATE=to_date(#AWB_DATE#,'DDMONYY')
		     ]]>
   		</select>  
   	
		<select id="getCSVRecordsWithNstgIdNBK" parameterClass="java.util.HashMap" resultClass="cargo.cms.common.utils.bo.CommonUtilFunBO" >
		   <![CDATA[
				select '"'||'1.3.9'||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||CASE WHEN BLDUP_COMPLETE='Y' then '08' else '06' end||'"'||','||'"'||''||'"'||','||'"'||
					TO_CHAR(SYSDATE,'YYMMDD')||'"'||','||'"'||TO_CHAR(SYSDATE,'HH24mi')||'"'
					||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'|| 'HKG' ||'"'||','||'"'||''||'"'||','||'"'||substr(A.FLT_KEY,1,2)||'"'||','||'"'
					||substr(A.FLT_KEY,3,LENGTH(A.FLT_KEY))||'"'||','||'"'||to_char(A.flt_date,'YYMMDD')||'"'||','||'"'||'4'||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||
					A.NESTING_ID||'"'||','||'"'||A.ULD_BT_NO||'"'||','||'"'||substr(A.ULD_BT_NO,1,3)
					||'"'||','||'"'|| 'CPCT' ||'"'|| ',' ||'"'||''||'"'||','||'"'||A.UNLDG_PT||'"'||','||'"'||'Y'||'"' as csvRec
		        FROM EXP_PMANIFEST_ULD A
				WHERE A.ULD_BT_NO = #ULDKEY# AND A.flt_key     = #FLTKEY# AND A.flt_date    =to_date(#FLTDATE#,'DDMONYY')
				
		     ]]>
   		</select>
   		
   		   	<select id="getCSVRecordsWithOutNestingId" parameterClass="java.util.HashMap" resultClass="cargo.cms.common.utils.bo.CommonUtilFunBO" >
		   <![CDATA[
				select '"'||'1.3.9'||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||CASE WHEN BLDUP_COMPLETE='Y' then '08' else '06' end||'"'||','||'"'||''||'"'||','||'"'||
					to_char(SYSDATE,'YYMMDD')||'"'||','||'"'||to_char(SYSDATE,'HH24mi')||'"'
					||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'|| 'HKG' ||'"'||','||'"'||''||'"'||','||'"'||substr(A.FLT_KEY,1,2)||'"'||','||'"'
					||substr(A.FLT_KEY,3,LENGTH(A.FLT_KEY))||'"'||','||'"'||to_char(A.flt_date,'YYMMDD')||'"'||','||'"'||'4'||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||
					C.HAWB_NO||'"'||','||'"'||A.ULD_BT_NO||'"'||','||'"'||
					CASE WHEN (select DECODE(COUNT(1),'0','N','Y') from MAST_ULD_TYPE where code =  substr(A.ULD_BT_NO,1,3) 
          			and (H_CONT_IND = 'Y' or BT_IND = 'Y' or DUMMY_H_CONT_IND = 'Y')) = 'Y' THEN 'H5' ELSE  substr(A.ULD_BT_NO,1,3) END
					||'"'||','||'"'|| 'CPCT' ||'"'|| ',' ||'"'||''||'"'||','||'"'||A.UNLDG_PT||'"'||','||'"'||'N' ||'"' as csvRec
				 FROM EXP_PMANIFEST_ULD A , EXP_PMANIFEST_ULD_AWB B , EXP_PMANIFEST_ULD_AWB_HAWB C
		         WHERE A.FLT_KEY = B.FLT_KEY AND A.FLT_DATE = B.FLT_DATE AND C.TR_NO = B.TR_NO AND A.ULD_BT_NO = B.ULD_BT_NO AND
				A.ULD_BT_NO = #ULDKEY# AND A.flt_key     = #FLTKEY# AND A.flt_date    =to_date(#FLTDATE#,'DDMONYY')		
		     ]]>
   		</select>
   		
<select id="getCSVRecordsWithNstgIdBU" parameterClass="java.util.HashMap" resultClass="cargo.cms.common.utils.bo.CommonUtilFunBO" >
		   <![CDATA[
			select '"'||'1.3.9'||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||CASE WHEN BLDUP_COMPLETE='Y' then '08' else '06' end||'"'||','||'"'||''||'"'||','||'"'||
						to_char(SYSDATE,'YYMMDD')||'"'||','||'"'||to_char(SYSDATE,'HH24mi')||'"'
						||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'|| 'HKG' ||'"'||','||'"'||''||'"'||','||'"'||substr(A.FLT_KEY,1,2)||'"'||','||'"'
						||substr(A.FLT_KEY,3,LENGTH(A.FLT_KEY))||'"'||','||'"'||to_char(A.flt_date,'YYMMDD')||'"'||','||'"'||'4'||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||
						C.HAWB_NO||'"'||','||'"'||A.ULD_BT_NO||'"'||','||'"'||
						CASE WHEN (select DECODE(COUNT(1),'0','N','Y') from MAST_ULD_TYPE where code =  substr(A.ULD_BT_NO,1,3) 
	          			and (H_CONT_IND = 'Y' or BT_IND = 'Y' or DUMMY_H_CONT_IND = 'Y')) = 'Y' THEN 'H5' ELSE  substr(A.ULD_BT_NO,1,3) END
						||'"'||','||'"'|| 'CPCT' ||'"'|| ',' ||'"'||''||'"'||','||'"'||A.UNLDG_PT||'"'||','||'"'||'Y' ||'"' as csvRec
					 FROM EXP_PMANIFEST_ULD A , EXP_PMANIFEST_ULD_AWB B , EXP_PMANIFEST_ULD_AWB_HAWB C
	         WHERE A.FLT_KEY = B.FLT_KEY AND A.FLT_DATE = B.FLT_DATE AND C.TR_NO = B.TR_NO AND A.ULD_BT_NO = B.ULD_BT_NO AND
				A.ULD_BT_NO = #ULDKEY# AND A.flt_key     = #FLTKEY# AND A.flt_date    =to_date(#FLTDATE#,'DDMONYY')				 
			union    
	    	select '"'||'1.3.9'||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||CASE WHEN BLDUP_COMPLETE='Y' then '08' else '06' end||'"'||','||'"'||''||'"'||','||'"'||
						TO_CHAR(SYSDATE,'YYMMDD')||'"'||','||'"'||TO_CHAR(SYSDATE,'HH24mi')||'"'
						||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'|| 'HKG' ||'"'||','||'"'||''||'"'||','||'"'||substr(A.FLT_KEY,1,2)||'"'||','||'"'
						||substr(A.FLT_KEY,3,LENGTH(A.FLT_KEY))||'"'||','||'"'||to_char(A.flt_date,'YYMMDD')||'"'||','||'"'||'4'||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||
						A.NESTING_ID||'"'||','||'"'||A.ULD_BT_NO||'"'||','||'"'||
						CASE WHEN (select DECODE(COUNT(1),'0','N','Y') from MAST_ULD_TYPE where code =  substr(A.ULD_BT_NO,1,3) 
	          			and (H_CONT_IND = 'Y' or BT_IND = 'Y' or DUMMY_H_CONT_IND = 'Y')) = 'Y' THEN 'H5' ELSE  substr(A.ULD_BT_NO,1,3) END
						||'"'||','||'"'|| 'CPCT' ||'"'|| ',' ||'"'||''||'"'||','||'"'||A.UNLDG_PT||'"'||','||'"'||'Y'||'"' as csvRec
	        FROM EXP_PMANIFEST_ULD A
			WHERE A.ULD_BT_NO = #ULDKEY# AND A.flt_key     = #FLTKEY# AND A.flt_date    =to_date(#FLTDATE#,'DDMONYY')
		
		     ]]>
   		</select>
		
	<select id="chkThroughUnitForULDNESTID" parameterClass="java.util.HashMap" resultClass="java.lang.String" >
		   SELECT COUNT(*) FROM EDI_RESDIT_AWB_DTL A 
		   JOIN EDI_RESDIT_TAG_DTL B ON A.TR_AWB_NO = B.TR_AWB_NO 
		   JOIN EDI_RESDIT_HD C ON C.TR_NO = A.TR_NO
		   where B.CONTAINER_NO = #ULDKEY# and C.flt_key = #FLTKEY# and C.flt_date=to_date(#FLTDATE#,'DDMONYY') AND B.NESTING_ID IS NOT NULL
   		</select>
   	
<select id="getCSVRecordsNbkConfirmOffload" parameterClass="java.util.HashMap" resultClass="cargo.cms.common.utils.bo.CommonUtilFunBO" >
		   <![CDATA[
				 select '"'||'1.3.9'||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||CASE WHEN A.CONFIRMED_YN='Y' then '06' else '08' end||'"'||','||'"'||''||'"'||','||'"'||
					TO_CHAR(A.CHECKED_IN_DATE,'YYMMDD')||'"'||','||'"'||TO_CHAR(A.CHECKED_IN_DATE,'HH24mi')||'"'
					||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'|| 'HKG' ||'"'||','||'"'||''||'"'||','||'"'||substr(A.FLT_KEY,1,2)||'"'||','||'"'
					||substr(A.FLT_KEY,3,LENGTH(A.FLT_KEY))||'"'||','||'"'||to_char(A.flt_date,'YYMMDD')||'"'||','||'"'||'4'||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||
					A.NESTING_ID||'"'||','||'"'||A.ULD_BT_NO||'"'||','||'"'||substr(A.ULD_BT_NO,1,3)
					||'"'||','||'"'|| 'CPCT' ||'"'|| ',' ||'"'||''||'"'||','||'"'||A.UNLDG_PT||'"'||','||'"'||'Y'||'"' as csvRec
        	       FROM exp_offload_uld A
        	       JOIN EXP_OFFLOAD_ULD_AWB B ON B.FLT_KEY=A.FLT_KEY AND A.FLT_DATE=B.FLT_DATE AND A.ULD_BT_NO=B.ULD_BT_NO
                   JOIN EXP_OFFLOAD_ULD_AWB_HAWB C ON C.TR_NO=B.TR_NO
			      WHERE A.ULD_BT_NO = #ULDKEY# AND A.flt_key = #FLTKEY# AND A.flt_date =to_date(#FLTDATE#,'DDMONYY')
		     ]]>
   		</select>
	   	
<select id="getCSVRecordsWithNestIdConfirmOffload" parameterClass="java.util.HashMap" resultClass="cargo.cms.common.utils.bo.CommonUtilFunBO" >
		   <![CDATA[
				 select '"'||'1.3.9'||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||CASE WHEN A.CONFIRMED_YN='Y' then '06' else '08' end||'"'||','||'"'||''||'"'||','||'"'||
					TO_CHAR(A.CHECKED_IN_DATE,'YYMMDD')||'"'||','||'"'||TO_CHAR(A.CHECKED_IN_DATE,'HH24mi')||'"'
					||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'|| 'HKG' ||'"'||','||'"'||''||'"'||','||'"'||substr(A.FLT_KEY,1,2)||'"'||','||'"'
					||substr(A.FLT_KEY,3,LENGTH(A.FLT_KEY))||'"'||','||'"'||to_char(A.flt_date,'YYMMDD')||'"'||','||'"'||'4'||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||
					C.HAWB_NO||'"'||','||'"'||A.ULD_BT_NO||'"'||','||'"'||substr(A.ULD_BT_NO,1,3)
					||'"'||','||'"'|| 'CPCT' ||'"'|| ',' ||'"'||''||'"'||','||'"'||A.UNLDG_PT||'"'||','||'"'||'N'||'"' as csvRec
        		   FROM exp_offload_uld A JOIN EXP_OFFLOAD_ULD_AWB B ON B.FLT_KEY=A.FLT_KEY AND A.FLT_DATE=B.FLT_DATE AND A.ULD_BT_NO=B.ULD_BT_NO
                 JOIN EXP_OFFLOAD_ULD_AWB_HAWB C ON C.TR_NO=B.TR_NO
			    WHERE A.ULD_BT_NO =#ULDKEY# AND A.flt_key=#FLTKEY# AND A.flt_date =to_date(#FLTDATE#,'DDMONYY')
		     ]]>
   		</select>
	
<select id="getConfirmOffloadInd" parameterClass="java.util.HashMap" resultClass="java.lang.String">
			 select A.CONFIRMED_YN AS offloadInd FROM exp_offload_uld A
			 WHERE A.ULD_BT_NO = #ULDKEY# AND A.flt_key = #FLTKEY# AND A.flt_date =to_date(#FLTDATE#,'DDMONYY')
   		</select>

<select id="getCSVRecordsWithNestIdDeleteOffload" parameterClass="java.util.HashMap" resultClass="cargo.cms.common.utils.bo.CommonUtilFunBO" >
		   <![CDATA[
			    select '"'||'1.3.9'||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||CASE WHEN A.CONFIRMED_YN='Y' then '06' else '08' end||'"'||','||'"'||''||'"'||','||'"'||
					TO_CHAR(A.CHECKED_IN_DATE,'YYMMDD')||'"'||','||'"'||TO_CHAR(A.CHECKED_IN_DATE,'HH24mi')||'"'
					||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'|| 'HKG' ||'"'||','||'"'||''||'"'||','||'"'||substr(A.FLT_KEY,1,2)||'"'||','||'"'
					||substr(A.FLT_KEY,3,LENGTH(A.FLT_KEY))||'"'||','||'"'||to_char(A.flt_date,'YYMMDD')||'"'||','||'"'||'4'||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||
					C.HAWB_NO||'"'||','||'"'||A.ULD_BT_NO||'"'||','||'"'||substr(A.ULD_BT_NO,1,3)
					||'"'||','||'"'|| 'CPCT' ||'"'|| ',' ||'"'||''||'"'||','||'"'||A.UNLDG_PT||'"'||','||'"'||'Y'||'"' as csvRec
        		   FROM exp_offload_uld A JOIN EXP_OFFLOAD_ULD_AWB B ON B.FLT_KEY=A.FLT_KEY AND A.FLT_DATE=B.FLT_DATE AND A.ULD_BT_NO=B.ULD_BT_NO
                  JOIN EXP_OFFLOAD_ULD_AWB_HAWB C ON C.TR_NO=B.TR_NO
			      WHERE A.ULD_BT_NO =#ULDKEY# AND A.flt_key=#FLTKEY# AND A.flt_date =to_date(#FLTDATE#,'DDMONYY')
			   UNION 
	               select '"'||'1.3.9'||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||CASE WHEN A.CONFIRMED_YN='Y' then '06' else '08' end||'"'||','||'"'||''||'"'||','||'"'||
					TO_CHAR(A.CHECKED_IN_DATE,'YYMMDD')||'"'||','||'"'||TO_CHAR(A.CHECKED_IN_DATE,'HH24mi')||'"'
					||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'|| 'HKG' ||'"'||','||'"'||''||'"'||','||'"'||substr(A.FLT_KEY,1,2)||'"'||','||'"'
					||substr(A.FLT_KEY,3,LENGTH(A.FLT_KEY))||'"'||','||'"'||to_char(A.flt_date,'YYMMDD')||'"'||','||'"'||'4'||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||
					A.NESTING_ID||'"'||','||'"'||A.ULD_BT_NO||'"'||','||'"'||substr(A.ULD_BT_NO,1,3)
					||'"'||','||'"'|| 'CPCT' ||'"'|| ',' ||'"'||''||'"'||','||'"'||A.UNLDG_PT||'"'||','||'"'||'Y'||'"' as csvRec
	              FROM exp_offload_uld A
	             WHERE A.ULD_BT_NO = #ULDKEY# AND A.flt_key = #FLTKEY# AND A.flt_date =to_date(#FLTDATE#,'DDMONYY')
			    
		     ]]>
   		</select>

<select id="getCSVRecordsWithHContainerConfirmOffload" parameterClass="java.util.HashMap" resultClass="cargo.cms.common.utils.bo.CommonUtilFunBO" >
		   <![CDATA[
				 select '"'||'1.3.9'||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||CASE WHEN A.CONFIRMED_YN='Y' then '06' else '08' end||'"'||','||'"'||''||'"'||','||'"'||
					TO_CHAR(A.CHECKED_IN_DATE,'YYMMDD')||'"'||','||'"'||TO_CHAR(A.CHECKED_IN_DATE,'HH24mi')||'"'
					||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'|| 'HKG' ||'"'||','||'"'||''||'"'||','||'"'||substr(A.FLT_KEY,1,2)||'"'||','||'"'
					||substr(A.FLT_KEY,3,LENGTH(A.FLT_KEY))||'"'||','||'"'||to_char(A.flt_date,'YYMMDD')||'"'||','||'"'||'4'||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||
					C.HAWB_NO||'"'||','||'"'||''||'"'||','||'"'||''
					||'"'||','||'"'|| 'CPCT' ||'"'|| ',' ||'"'||''||'"'||','||'"'||A.UNLDG_PT||'"'||','||'"'||'N'||'"' as csvRec
        		   FROM exp_offload_uld A JOIN EXP_OFFLOAD_ULD_AWB B ON B.FLT_KEY=A.FLT_KEY AND A.FLT_DATE=B.FLT_DATE AND A.ULD_BT_NO=B.ULD_BT_NO
                 JOIN EXP_OFFLOAD_ULD_AWB_HAWB C ON C.TR_NO=B.TR_NO
			    WHERE A.ULD_BT_NO =#ULDKEY# AND A.flt_key=#FLTKEY# AND A.flt_date =to_date(#FLTDATE#,'DDMONYY')
		     ]]>
   		</select>

<!-- Tm offload queries Start -->
	   		<select id="sqlTmGetFltDtlsForOFLD" parameterClass="java.lang.String" resultClass="cargo.cms.extsvc.bo.TransitMailBO" >
				select offload.flt_key fltKey,to_char(offload.flt_date,'DDMONYY') fltDate,decode(nvl(pman.hdlg_mode,'N'),'NBK','Y','N') nbkInd,offload.uld_bt_no fromULD,nvl(pman.bb_ind,'N') bulkInd from exp_offload_uld offload
				left join exp_pmanifest_uld pman on offload.flt_key=pman.flt_key and offload.flt_date=pman.flt_date and offload.uld_bt_no=pman.uld_bt_no
				 where offload.uld_bt_no=#fromULD# and offload.checked_in_flag='Y' and offload.confirmed_yn != 'Y'
			</select>
			
			<select id="sqlTmfetchTagListOFLD" parameterClass="cargo.cms.extsvc.bo.TransitMailBO" resultClass="cargo.cms.extsvc.bo.TransitMailBO" >
				SELECT a.awb_no awbNo,
				  to_char(a.awb_date,'DDMONYY') awbDate,
				  d.hawb_no tagNo,
				  d.pc pcs,
				  d.wt wt
				FROM EXP_PMANIFEST_ULD_AWB A
				JOIN EXP_PMANIFEST_ULD B ON B.ULD_BT_NO = a.uld_bt_no AND b.flt_key = a.flt_key AND B.flt_date = a.flt_date
				JOIN awb C ON A.awb_no=C.awb_no AND A.awb_date =C.awb_date
				JOIN exp_pmanifest_uld_awb_hawb D ON D.tr_no =A.tr_no
				WHERE b.bldup_complete        ='Y'
				AND b.bldup_complete_user_id IS NOT NULL
				AND b.bldup_complete_date    IS NOT NULL
				AND C.house_flg='Y'
				AND A.flt_key                 = #fltKey#
				AND A.flt_date                = to_date(#fltDate#,'DDMONYY')
				AND A.uld_bt_no               = #fromULD#
			</select>
			<select id="getTmULDType" parameterClass="cargo.cms.extsvc.bo.TransitMailBO" resultClass="java.lang.String" >
				select 'Normal' Type from exp_pmanifest_uld where flt_key=#fltKey# and flt_date=to_date(#fltDate#,'DDMONYY') and uld_bt_no=#fromULD#
				UNION
				select 'Tarmac' Type from exp_pman_tarmac_uld where flt_key=#fltKey# and flt_date=to_date(#fltDate#,'DDMONYY') and uld_bt_no=#fromULD#
			</select>
			
			<select id="validateDeskConfirmOffloadFlightCompleteOrNotTM"  parameterClass="cargo.cms.extsvc.bo.TransitMailBO"  resultClass="java.lang.String">
					select ofld_cfm_ind from flt_opr_events WHERE FLT_KEY=UPPER(#fltKey#) AND SCH_DATE = TO_DATE(#fltDate#, 'DDMONYY') AND FLT_TYPE = 'D'
			</select>
			
			<select id="validateULDisassignedtootherflightOrNotTM"  parameterClass="cargo.cms.extsvc.bo.TransitMailBO"  resultClass="java.lang.Integer">
				SELECT count(1) FROM ULD_INVENTORY WHERE ULD_KEY=#fromULD# AND FLT_KEY = #fltKey# and FLT_DATE=#fltDate# AND FLT_TYPE = 'E'
			</select>
			
			<select id="checkBBIndForULD"  parameterClass="cargo.cms.extsvc.bo.TransitMailBO"  resultClass="java.lang.Integer">
				select count(1) from exp_pmanifest_uld where uld_bt_no=#fromULD# and flt_key=#fltKey# and flt_date=to_date(#fltDate#,'DDMONYY') and nvl(bb_ind,'N')='Y'
			</select>
		<!-- Tm offload queries End -->

	<select id="getBUCounterCode"  parameterClass="java.util.HashMap"  resultClass="java.lang.String">				
				select contr_code from uld_type_contr where  uld_type = substr(#uldKey#, 1, 3) and rownum=1
			</select>	
   		   		
   		<select id="chkThroughUnitForULD" parameterClass="java.util.HashMap" resultClass="java.lang.String" >
		   SELECT COUNT(*) FROM EDI_RESDIT_AWB_DTL A 
		   JOIN EDI_RESDIT_TAG_DTL B ON A.TR_AWB_NO = B.TR_AWB_NO 
		   JOIN EDI_RESDIT_HD C ON C.TR_NO = A.TR_NO
		   JOIN ULD_INVENTORY uldinv ON uldinv.uld_key = B.CONTAINER_NO AND uldinv.imp_flt_key = C.flt_key and uldinv.imp_flt_date = C.flt_date 
		   where B.CONTAINER_NO = #ULDKEY# and C.flt_key = #FLTKEY# and C.flt_date=to_date(#FLTDATE#,'DDMONYY')
		   AND B.NESTING_ID IS NOT NULL AND uldinv.HANDLING_MODE='NBK'
   		</select>
   		
		<select id="getAWBListForBDULD" parameterClass="java.util.HashMap" resultClass="cargo.cms.common.utils.bo.CommonUtilFunBO" >
		   <![CDATA[
				select MAIL.AWB_NO as awbNum , to_char(MAIL.AWB_DATE,'DDMONYY') as awbDate
				from imp_xps_obc_mail mail
				,imp_ramp_chk_dtl chk where mail.bd_uld_key =#ULDKEY#
				and mail.flt_key =#FLTKEY# and mail.flt_date=to_date(#FLTDATE#,'DDMONYY')
				and mail.bd_uld_key=chk.uld_key and mail.flt_key=chk.flt_key
				and mail.flt_date=chk.flt_date and MAIL.AWB_NO is not null group by MAIL.AWB_NO,MAIL.AWB_DATE 
		     ]]>
   		</select>
	<select id="checkMailasCargo"  parameterClass="java.lang.String"   resultClass="java.lang.String">
				SELECT DECODE(COUNT(1), 0, 'N', 'Y') as mailAsCargo FROM MAST_CARRIER where code = substr(#cntgFltCarr#, 0, 2) and NVL(MAIL_AS_CARGO,'X') = 'Y'			 
			</select>
   		
	<select id="getAcceptTransferCargoTransiMailCSVRecords" parameterClass="java.util.HashMap" resultClass="cargo.cms.common.utils.bo.CommonUtilFunBO" >
		   <![CDATA[
				   select '"'||'1.3.9'||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||CASE WHEN #STATUS#='V' then '09' else '01' end||'"'||','||'"'||''||'"'||','||'"'||
					TO_CHAR(A.TRF_DATE,'YYMMDD')||'"'||','||'"'||TO_CHAR(A.TRF_DATE,'HH24mi')||'"'
					||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'|| 'HKG' ||'"'||','||'"'||A.TRANS_CARR_CODE||'"'||','||'"'
					||''||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||'4'||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||
					B.HAWB_NO||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'|| 'CPCT' ||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||'N'||'"' as csvRec
        		   FROM TRF_ACCEPT_HD A JOIN TRF_ACCEPT_HAWB B ON A.TRF_NO=B.TRF_NO
			       WHERE A.TRF_NO=#TRF_NO#
		     ]]>
   		</select>		
   		
   		<select id="getCreateCTCSVRecordsTrn" parameterClass="java.util.HashMap" resultClass="cargo.cms.common.utils.bo.CommonUtilFunBO" >
		   <![CDATA[
				   select '"'||'1.3.9'||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||
					'01' ||'"'||','||'"'||''||'"'||','||'"'||
					TO_CHAR(A.TRM_DATE,'YYMMDD')||'"'||','||'"'||TO_CHAR(A.TRM_DATE,'HH24mi')||'"'
					||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'|| 'HKG' ||'"'||','||'"'||
					A.TRANSF_CARR ||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||'4'||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||
					B.HAWB_NO||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'|| 'CPCT' ||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||'N'||'"' as csvRec
					FROM IMP_TRM_HD A JOIN IMP_TRM_AWB_HAWB B ON A.TRM_NO=B.TRM_NO
					WHERE A.TRM_NO = #TRMNO#
		     ]]>
   		</select>
   		
   		<select id="getCreateCTCSVRecordsRcv" parameterClass="java.util.HashMap" resultClass="cargo.cms.common.utils.bo.CommonUtilFunBO" >
		   <![CDATA[
					select '"'||'1.3.9'||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||
					'09' ||'"'||','||'"'||''||'"'||','||'"'|| TO_CHAR(A.TRM_DATE,'YYMMDD')||'"'||','||'"'||TO_CHAR(A.TRM_DATE,'HH24mi')||'"'
					||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'|| 'HKG' ||'"'||','||'"'||
					A.RECD_CARR ||'"'||','||'"' ||''||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||'4'||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||
					B.HAWB_NO||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'|| 'CPCT' ||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||'N'||'"' as csvRec
					FROM IMP_TRM_HD A JOIN IMP_TRM_AWB_HAWB B ON A.TRM_NO=B.TRM_NO
					WHERE A.TRM_NO = #TRMNO#
		     ]]>
   		</select>
   		
   		<select id="getCreateCTCSVRecordsUnpostCT" parameterClass="java.util.HashMap" resultClass="cargo.cms.common.utils.bo.CommonUtilFunBO" >
		   <![CDATA[
					select '"'||'1.3.9'||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||
					'01' ||'"'||','||'"'||''||'"'||','||'"'|| TO_CHAR(A.TRM_DATE,'YYMMDD')||'"'||','||'"'||TO_CHAR(A.TRM_DATE,'HH24mi')||'"'
					||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'|| 'HKG' ||'"'||','||'"'||
					A.RECD_CARR ||'"'||','||'"' ||''||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||'4'||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||
					B.HAWB_NO||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'|| 'CPCT' ||'"'||','||'"'||''||'"'||','||'"'||''||'"'||','||'"'||'N'||'"' as csvRec
					FROM IMP_TRM_HD A JOIN IMP_TRM_AWB_HAWB B ON A.TRM_NO=B.TRM_NO
					WHERE A.TRM_NO = #TRMNO#
		     ]]>
   		</select>		
<select id="chkTagUpdateByOthers" parameterClass="java.lang.String" resultClass="java.lang.String" >
		   SELECT hawb.seq_no seqNo FROM awb_inventory awb JOIN hawb_inventory hawb ON awb.seq_no=hawb.seq_no WHERE 1=1 AND hawb.hawb_no=#tagNo#
   		</select>

   		<select id="CheckLspEmpty" parameterClass="java.lang.String" resultClass="java.lang.Integer" >
		   SELECT COUNT(1) FROM LSP_INVENTORY WHERE lsp_no = #toCsd# AND empty_flg='Y'
   		</select>
   		
   		<select id="uldLoadWithTransitOnly" parameterClass="java.lang.String" resultClass="java.lang.String" >
		   select decode(count(1),0,'Y','N') from awb join awb_inventory inv on awb.awb_no=inv.awb_no and awb.awb_date=inv.awb_date where inv.uld_key=#toUld# and NVL(awb.catalog,'AA') != 'TM'
   		</select>
   		
   		<select id="csdLoadWithTransitOnly" parameterClass="java.lang.String" resultClass="java.lang.String" >
		  	select decode(count(1),0,'Y','N') from awb_inventory awb where awb.lsp_no=#toCsd# and awb.catalog != 'TM'
   		</select>
   		
   		<select id="checkTagBuildup" parameterClass="java.util.HashMap" resultClass="java.lang.Integer" >
		   	select count(1) from exp_pmanifest_uld uld join EXP_PMANIFEST_ULD_AWB awb on uld.flt_key=awb.flt_key and uld.flt_date=awb.flt_date and uld.uld_bt_no=awb.uld_bt_no
			join exp_pmanifest_uld_awb_hawb hawb on awb.tr_no=hawb.tr_no
			where hawb.hawb_no=#tagNo# and awb.awb_no=#AWBNO# and awb.awb_date=#AWBDATE#
   		</select>
	
   		<select id="checkTmAwbWithTagInv" parameterClass="cargo.cms.imprt.bo.AWBStorDtlBO" resultClass="java.lang.String" >
		  	select decode(count(1),0,'N','Y') from awb_inventory awbinv JOIN AWB awb ON awb.AWB_NO = awbinv.AWB_NO AND awb.awb_date = awbinv.awb_date 
			join hawb_inventory hawb on awbinv.seq_no=hawb.seq_no 
			where awbinv.awb_no=#awbNo# and awbinv.awb_date=to_date(#awbDate#,'DDMONYY') and awb.catalog='TM'
   		</select>
	<select id="getMatchingTagList" parameterClass="cargo.cms.extsvc.bo.TransitMailBO" resultClass="cargo.cms.extsvc.bo.TransitMailBO" >
		SELECT DTL.TAG_NO as tagNum
		FROM EDI_CARDIT_HD HD 
		JOIN EDI_CARDIT_TAG_DTL DTL ON HD.TR_NO = DTL.TR_NO
		left JOIN AWB B ON  b.awb_no = HD.awb_No and b.awb_date = HD.awb_Date  
		WHERE  SUBSTR(DTL.TAG_NO,17,4) = #dnNo# 		  
		   <isNotEmpty property="dest">
			AND HD.DEST = #dest#
		  </isNotEmpty>
		   <isNotEmpty property="orig">
			AND HD.ORIG = #orig#
		  </isNotEmpty>
		   <isNotEmpty property="wt">
			AND DTL.TAG_WT = #wt#
		  </isNotEmpty>		
		  AND EXISTS (SELECT NULL from EDI_RESDIT_AWB_DTL where AWB_NO = HD.AWB_NO AND AWB_DATE = HD.AWB_DATE)  
		  AND NVL(B.AWB_CLOSED_YN,'N') = 'N'
	</select>
	<select id="checkDamageExists_mobile" parameterClass="cargo.cms.extsvc.bo.RampCheckInBO" resultClass="java.lang.Integer" >
	select count(1) from awb_inventory where awb_no = #awbNo# and awb_date=#awbDate# and flt_key=#fltKey# and flt_date=#fltDate# and (lsp_no=#ULDLsp# or uld_key=#ULDLsp#) and (NVL(DAM_IND,'N')='N' AND NVL(WH_DAM_IND,'N') = 'N')
	</select>
	<select id="getCounterCodeRCL"  parameterClass="java.lang.String"  resultClass="java.lang.String">
		select contr_code from ULD_TYPE_CONTR  WHERE ULD_TYPE = SUBSTR(#uldType#, 1, 3)
	</select>
	<update id="updatedamageinfoininventory_mobile" parameterClass="cargo.cms.extsvc.bo.RampCheckInBO">	
	update AWB_INVENTORY set dam_ind = 'Y' where awb_no=#awbNo# and awb_date=#awbDate# and flt_key=#fltKey# and flt_date = #fltDate# and (uld_key =#ULDLsp# or lsp_no =#ULDLsp#)
	</update>
	<update id="updatedamageinfoincar_mobile" parameterClass="cargo.cms.extsvc.bo.RampCheckInBO">	
	update IMP_CAR_SHP set DAM_PCS = DAM_PCS + nvl(#damPcs#,0),DAM_WT = DAM_WT + nvl(#damWt#,0) where awb_no=#awbNo# and awb_date=#awbDate# and flt_key=#fltKey# and flt_date = #fltDate#
	</update>
	<update id="updatedamageinfoinstrgdtl_mobile" parameterClass="cargo.cms.extsvc.bo.RampCheckInBO">	
	update imp_awb_strg_dtl set dam_ind = 'Y' where awb_no=#awbNo# and awb_date=#awbDate# and flt_key=#fltKey# and flt_date = #fltDate# and (uld_key =#ULDLsp# or lsp_no =#ULDLsp#) and tr_no in (
	select max(tr_no) from imp_awb_strg_dtl where awb_no=#awbNo# and awb_date=#awbDate# and flt_key=#fltKey# and flt_date = #fltDate# and (uld_key =#ULDLsp# or lsp_no =#ULDLsp#))
	</update>
		<select id="chkDummyTag" parameterClass="java.util.HashMap" resultClass="java.lang.Integer" >
			SELECT COUNT(1) hawbCount FROM hawb_inventory WHERE hawb_no=#TAGNO#
   		</select>

<select id="srfExistForRestoreMOB"  parameterClass="cargo.cms.extsvc.bo.RampCheckInBO"  resultClass="java.lang.Integer">
	 <![CDATA[	 
	 		SELECT COUNT(1)
				FROM IMP_SRF T
				WHERE AWB_NO = #awbNo#
				AND AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY')
				AND SRF_NO = (select srf_no from AWB_INVENTORY where seq_no = #seqNo#)
				AND ( STATUS  ='ISSUED'  
				AND sysdate  < srf_expy_date
				OR EXISTS (SELECT NULL FROM imp_srf_awb_inventory WHERE srf_no = t.srf_no AND t.status = 'ISSUED' AND dlv_pcs  > 0) 
				OR STATUS  ='POSTED'
      			OR SRF_NO in (select SRF_NO from IMP_CDIF where VOID_USER is null )
			)
		]]>
	</select>


<select id="validateNBKShipment" parameterClass="cargo.cms.extsvc.bo.TransitMailBO" resultClass="java.lang.Integer" >
			SELECT COUNT(1) FROM awb_inventory inv
				JOIN uld_inventory uld ON inv.uld_key = uld.uld_key
				WHERE inv.awb_no = #awbNo# AND inv.awb_date = TO_DATE(#awbDate#, 'DDMONYY')
				AND inv.uld_key IS NOT NULL AND ULD.HANDLING_MODE = 'NBK'
	</select>
   	<select id="tm_checkULDWithHouse" parameterClass="java.lang.String" resultClass="java.lang.Integer">
    	SELECT count(*) FROM awb_inventory uawb, AWB awb 
			WHERE uawb.awb_no = awb.awb_no AND uawb.awb_DATE = awb.awb_DATE and NVL(awb.house_flg,'N') = 'Y' and
			uawb.uld_key = #uldKey# 
    </select>
      	<select id="validateNBKTag" parameterClass="java.lang.String" resultClass="java.lang.Integer" >
			SELECT COUNT(1) FROM HAWB_INVENTORY HAWB
				JOIN AWB_INVENTORY INV ON INV.SEQ_NO = HAWB.SEQ_NO
        		JOIN ULD_INVENTORY ULD ON ULD.uld_key = INV.uld_key 
				WHERE INV.uld_key IS NOT NULL AND ULD.HANDLING_MODE = 'NBK' AND HAWB.HAWB_NO=#PARAM#
	</select>			
   		<select id="chkTagPcs" parameterClass="java.util.HashMap" resultClass="java.lang.Integer" >
			SELECT strg_pcs FROM hawb_inventory WHERE hawb_no=#TAGNO#
   		</select>
   			
	
	<select id="getHHTBulkScreenDetailsByRclNo" parameterClass="cargo.cms.export.bo.IssueRCLHeaderBO" resultClass="cargo.cms.export.bo.IssueRCLHeaderBO">
		  SELECT SCREENING_OPTION AS racfRadioOption,RACSF_CODE AS screenUnderRacsfCode,
		  SCREENING_METHOD AS screeningMethod,EXEMPTED_REASON AS exemptedReason,
		  REMARKS AS remarks,RA_TYPE AS rakcType,RACSF_TRK_NUMBER AS truckNo,DEDICATED_PERSON AS personInCab
		  FROM EXP_PRE_RCL_HD WHERE PRE_RCL_NO=#preRCLNum# OR AWB_NO=#awbNum#
	</select>
	
	<select id="getHHTScreeningOptionDropdownNameforEnquiry" parameterClass="map" resultClass="java.lang.String">
	   	 SELECT NVL(CODE_DESC,'') AS codeDesc FROM MAST_CODE_DTL WHERE CODE=#code# AND CODE_TYPE=#codeType#
	</select>
	<select id="getUldTarewt_tm" parameterClass="java.lang.String" resultClass="java.lang.String">
			select DECODE(TRIM(TO_CHAR(NVL(tare_weight,0), '9999999990D9')),'0.0','',TRIM(TO_CHAR(NVL(tare_weight,0), '9999999990D9'))) as tareWt from ULD_INVENTORY where ULD_KEY = #uldKey#
		</select>
	
	<select id="getULDOwneruldmov" parameterClass="java.util.HashMap" resultClass="java.lang.String">
			SELECT OWNER_ID FROM ULD_INVENTORY WHERE ULD_KEY = #uldKey# 		
		</select>
<!-- Truck Registeration Service Start -->
		<insert id="insertSubscribeTruckReg" parameterClass="cargo.cms.extsvc.bo.UserSubscribeBO" >
			Insert into MAST_MBLE_TRK_SUBSCRIBE (TR_NO,KSID,SUB_SCR_FLAG,CATEGORY,LOGIN_ID,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE) 
			values (MAST_MBLE_TRK_SUB_SEQ.NEXTVAL,#ksid#,#subscribe#,#category#,#loginID#,#loginID#,SYSDATE,#loginID#,SYSDATE)
		</insert>

		<update id="updateOldSubscribeTruckRegFalse" parameterClass="cargo.cms.extsvc.bo.UserSubscribeBO">
			UPDATE MAST_MBLE_TRK_SUBSCRIBE SET SUB_SCR_FLAG = 'false' WHERE LOGIN_ID = #loginID#
		</update>
		
		<select id="getAccessoryList" parameterClass="cargo.cms.extsvc.bo.TruckRegistrationBO" resultClass="cargo.cms.extsvc.bo.TruckRegistrationBO">
		  SELECT Code AS accCode,Code_Desc AS accDesc FROM MAST_CODE_DTL WHERE GROUP_CODE=38 AND CODE_TYPE ='URF_EQUIP_TYPE' ORDER BY CODE
		</select>
		
		<select id="getLatestUrfNumber" parameterClass="java.lang.String" resultClass="java.lang.String">
		  select eir_no from (SELECT eir_no from ULD_ISS_HD where eir_no LIKE ('%'||#validNum#) order by cr_date desc ) where 1 = 1 and rownum=1 
		</select>

		<select id="isValidUrfNumber" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		  SELECT count(1) from ULD_ISS_HD where eir_no=#validNum# and rownum=1
		</select>
		
		<select id="isUrfRegToOtherTruck" parameterClass="java.lang.String" resultClass="java.lang.Integer">
			<![CDATA[
			  select count(1) from URF_TRUCK_REGD_HD HD join URF_TRUCK_REGD_DTL DTL on hd.tr_no=dtl.tr_no where upper(hd.trk_reg_status) <> 'COMPLETED' and dtl.urf_num=#validNum#
			 ]]>
		</select>

		<select id="isUrfRegExistsInTruckPrvCycle" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
			<![CDATA[
			  select count(1) from URF_TRUCK_REGD_HD HD 
			  join URF_TRUCK_REGD_DTL DTL on hd.tr_no=dtl.tr_no 
			  where upper(hd.trk_reg_status) = 'COMPLETED' and dtl.urf_num=#URF_NO#
			 ]]>
		</select>
		
		<update id="UpdateUrfAckDateTrkReg" parameterClass="java.util.HashMap">
			UPDATE ULD_ISS_HD SET ACK_BY = NULL, ACK_DATE = NULL, ACK_EST_TIME = NULL WHERE EIR_NO = #URF_NO#
		</update>

		<select id="getUrfDtlsForTruckReg" parameterClass="java.lang.String" resultClass="cargo.cms.extsvc.bo.TruckRegistrationBO">
			<![CDATA[
			  SELECT
				  CASE
				    WHEN NVL(HD.EIR_EXPIRY_DATE,SYSDATE) >= SYSDATE
				    THEN UPPER(HD.STATUS)
				    ELSE
				      CASE
				        WHEN (HD.STATUS = 'APPROVED' OR HD.STATUS = 'PARTRELEASED')
				        THEN 'EXPIRED'
				        ELSE UPPER(HD.STATUS)
				      END
				  END urfStatus,
				  upper(HD.purpose) urfPurpose,
				  HD.srf_no urfLinkedSrf,
				  HD.carr_code returnCarrier,
				  STAT.CODE_DESC returnStatus,
				  (SELECT STRAGG(STRINGDELIM(ULD_GROUP || ULD_TYPE || '-' || (NVL(ULD_APR_QTY, 0) - NVL(ULD_REL_QTY, 0)), ',')) 
				      FROM ULD_ISS_DTL WHERE EIR_NO = HD.EIR_NO AND UPPER(ULD_EQUIP) = 'U' AND (NVL(ULD_APR_QTY, 0) - NVL(ULD_REL_QTY, 0)) > 0
				  ) returnOutstandingUld,
				  (SELECT STRAGG(STRINGDELIM(EQUIP.EQUIP_TYPE || '-' || (SUM(NVL(EQUIP.EQUIP_APR_QTY, 0)) - SUM(NVL(EQUIP.EQUIP_REL_QTY, 0))), ','))
				      FROM ULD_ISS_DTL EQUIP
				      WHERE UPPER(ULD_EQUIP) IN ('E', 'B')	AND EQUIP.EIR_NO = HD.EIR_NO AND (EQUIP.EQUIP_APR_QTY - NVL(EQUIP.EQUIP_REL_QTY, 0)) > 0    
				      GROUP BY EQUIP.EQUIP_TYPE
				  ) returnOutstandingAcc	
				FROM ULD_ISS_HD HD
				LEFT JOIN MAST_CODE_DTL STAT
				ON HD.STATUS = STAT.CODE AND STAT.CODE_TYPE = 'URF_STATUS'
				WHERE eir_no=#validNum#
			 ]]>
		</select>

		<select id="isULDOnsiteEmpty" parameterClass="java.lang.String" resultClass="java.lang.Integer">
			  select count(1) from DUAL where (select fun_get_uld_state(#validNum#) from DUAL) = 'OnEty'
		</select>
		
		<select id="getTruckRegList" parameterClass="cargo.cms.extsvc.bo.TruckRegistrationBO" resultClass="cargo.cms.extsvc.bo.TruckRegistrationBO">
			SELECT TR_NO trNo,
			  TRK_REG_ID trkRegID,
			  cr_user_id createUserID,
			  TRK_NUM trkNum,
			  ASSIGNED_TRUCKER assignedTrucker,
			  TRK_REG_STATUS trkRegStatus,
			  decode((SELECT count(1) FROM TRUCK_TRIP WHERE TRUCK_NO=TRK_NUM AND CLOSED='N'),0,'N','Y') trkInsideCpct,
			  LOGIN_ID loginID,
			  LOGIN_TYPE loginType
			FROM URF_TRUCK_REGD_HD
			WHERE cr_date > to_date(TO_CHAR(SYSDATE-1,'DDMONYY'),'DDMONYY')
			<isEqual property="superUser" compareValue="N">
					AND TRK_REG_STATUS != 'Completed' AND (upper(REG_USER_ID)=upper(#loginID#) OR upper(ASSIGNED_TRUCKER)=upper(#loginID#))					
			</isEqual>			 
			<isEqual property="superUser" compareValue="Y">
					AND (TRK_REG_STATUS = 'Finalized' OR TRK_REG_STATUS = 'Save') 				
			</isEqual>
		</select>
		
		<select id="getUrfRegList" parameterClass="cargo.cms.extsvc.bo.TruckRegistrationBO" resultClass="cargo.cms.extsvc.bo.TruckRegistrationBO">
			SELECT dtl.urf_num urfNum,
			  b.code_desc agentName,
			  hd.carr_code urfCarrier,
			  CASE
			    WHEN NVL(HD.EIR_EXPIRY_DATE,SYSDATE) >= SYSDATE
			    THEN UPPER(HD.STATUS)
			    ELSE
			      CASE
			        WHEN (HD.STATUS = 'APPROVED'
			        OR HD.STATUS    = 'PARTRELEASED')
			        THEN 'EXPIRED'
			        ELSE UPPER(HD.STATUS)
			      END
			  END returnStatus,
			  STAT.CODE_DESC urfStatus,
			  (SELECT SUBSTR(EIR_RMK,0,20) FROM ULD_ISS_HD WHERE EIR_NO=HD.eir_no AND EIR_RMK IS NOT NULL) as urfRemark
			FROM URF_TRUCK_REGD_DTL DTL 
			JOIN ULD_ISS_HD HD ON DTL.urf_num = HD.eir_no
			LEFT JOIN CUST_COMPANY b ON hd.AGENT_CUST_NO = b.CODE
			LEFT JOIN MAST_CODE_DTL STAT ON HD.STATUS = STAT.CODE AND STAT.CODE_TYPE = 'URF_STATUS'
			WHERE DTL.tr_no = #trNo#
		</select>
		
		<select id="getUrfOutUldInfo" parameterClass="cargo.cms.extsvc.bo.TruckRegistrationBO" resultClass="cargo.cms.extsvc.bo.TruckRegistrationBO">
			<![CDATA[
				SELECT * FROM (
			SELECT (ULD_GROUP || ULD_TYPE) uldType,
			  (SUM(NVL(DTL.ULD_APR_QTY, 0)) - SUM(NVL(DTL.ULD_REL_QTY, 0))) uldQty
			  FROM ULD_ISS_HD HD
			  JOIN ULD_ISS_DTL DTL
			  ON hd.EIR_NO          =DTL.EIR_NO
			  WHERE HD.EIR_NO       = #urfNum#
			  AND UPPER(ULD_EQUIP) = 'U'
			  GROUP BY DTL.ULD_GROUP,DTL.ULD_TYPE
				  ) where 1 =1 AND uldQty > 0
			  ]]>
		</select>
		
<select id="getUrfOutUldInfoSave" parameterClass="cargo.cms.extsvc.bo.TruckRegistrationBO" resultClass="cargo.cms.extsvc.bo.TruckRegistrationBO">
			SELECT ULD_GROUP uldType,
			  (SUM(NVL(DTL.ULD_APR_QTY, 0)) - SUM(NVL(DTL.ULD_REL_QTY, 0))) uldQty
			  FROM ULD_ISS_HD HD
			  JOIN ULD_ISS_DTL DTL
			  ON hd.EIR_NO          =DTL.EIR_NO
			  WHERE HD.EIR_NO       = #urfNum#
			  AND UPPER(ULD_EQUIP) = 'U'
			  GROUP BY DTL.ULD_GROUP
		</select>
		
		
		<select id="getUrfAccessoryInfoSave" parameterClass="cargo.cms.extsvc.bo.TruckRegistrationBO" resultClass="cargo.cms.extsvc.bo.TruckRegistrationBO">
			SELECT DTL.EQUIP_TYPE accCode,
			  (SUM(NVL(DTL.EQUIP_APR_QTY, 0)) - SUM(NVL(DTL.EQUIP_REL_QTY, 0))) accQty
			  FROM ULD_ISS_HD HD
			  JOIN ULD_ISS_DTL DTL
			  ON hd.EIR_NO          =DTL.EIR_NO
			  WHERE HD.EIR_NO       = #urfNum#
			  AND UPPER(ULD_EQUIP) IN ('E', 'B')
			  GROUP BY DTL.EQUIP_TYPE
		</select>
		
		<select id="getUrfOutAccInfo" parameterClass="cargo.cms.extsvc.bo.TruckRegistrationBO" resultClass="cargo.cms.extsvc.bo.TruckRegistrationBO">
			<![CDATA[
			  SELECT * FROM ( SELECT DTL.EQUIP_TYPE accCode,
			  (SUM(NVL(DTL.EQUIP_APR_QTY, 0)) - SUM(NVL(DTL.EQUIP_REL_QTY, 0))) accQty
			  FROM ULD_ISS_HD HD
			  JOIN ULD_ISS_DTL DTL
			  ON hd.EIR_NO          =DTL.EIR_NO
			  WHERE HD.EIR_NO       =#urfNum#
			  AND UPPER(ULD_EQUIP) IN ('E', 'B')
			  GROUP BY DTL.EQUIP_TYPE) where 1 =1 AND accQty > 0
			]]>
		</select>
		
		<select id="getUldReleaseInfo" parameterClass="cargo.cms.extsvc.bo.TruckRegistrationBO" resultClass="cargo.cms.extsvc.bo.TruckRegistrationBO">
			select DTL.ULD_KEY uldNo from URF_COLLECTION_HD HD join URF_COLLECTION_DTL DTL on HD.TR_NO=DTL.TR_NO
			where HD.URF_NUM=#urfNum# AND UPPER(ULD_EQUIP) = 'U' AND HD.TRK_REG_ID = #trkRegID#
		</select>
		
		<select id="getAccReleaseInfo" parameterClass="cargo.cms.extsvc.bo.TruckRegistrationBO" resultClass="cargo.cms.extsvc.bo.TruckRegistrationBO">
			select DTL.EQUIP_TYPE accCode,DTL.EQUIP_QTY accQty from URF_COLLECTION_HD HD join URF_COLLECTION_DTL DTL on HD.TR_NO=DTL.TR_NO
			where HD.URF_NUM=#urfNum# AND UPPER(ULD_EQUIP) IN ('E', 'B') AND HD.TRK_REG_ID = #trkRegID#
		</select>
		<!-- Truck Registeration Service End -->
		
		<!-- Create service -->
		<insert id="insertTruckRegistration" parameterClass="cargo.cms.extsvc.bo.TruckRegistrationBO" >
			INSERT INTO URF_TRUCK_REGD_HD (
			    TR_NO,    TRK_REG_ID,    LOGIN_ID,    LOGIN_TYPE,    REG_USER_ID,    TRK_NUM,    ASSIGNED_TRUCKER,    TRK_REG_STATUS,    CR_USER_ID,    CR_DATE,    LM_USER_ID,    LM_DATE)
			 VALUES (#regTrkTrNum#, #trkRegID#,    #loginID#,    #loginType#,    #createUserID#,    #trkNum#,    #assignedTrucker#,    #trkRegStatus#,
			    #createUserID#,    SYSDATE,    #createUserID#,    SYSDATE )
		</insert>
				
		<insert id="insertTruckUrfList" parameterClass="cargo.cms.extsvc.bo.TruckRegistrationBO" >
			INSERT INTO URF_TRUCK_REGD_DTL (
			    TR_NO,    DOC_LINE_NO,    URF_NUM, CR_USER_ID,    CR_DATE,    LM_USER_ID,    LM_DATE)
				  VALUES (#regTrkTrNum#, URF_TRK_RGD_DTL_DOCLINE_SEQ.NEXTVAL,  #urfNum#, #createUserID#,    SYSDATE,    #createUserID#,    SYSDATE  )
		</insert>
		
		<!-- Update service -->	
		<select id="searchTruckRegIDWithTruck" parameterClass="cargo.cms.extsvc.bo.TruckRegistrationBO" resultClass="java.lang.String">
			select TR_NO as regTrkTrNum from URF_TRUCK_REGD_HD where TRK_REG_ID = #trkRegID# and TRK_NUM = #trkNum# 
		</select>
		
		<select id="searchTruckRegID" parameterClass="cargo.cms.extsvc.bo.TruckRegistrationBO" resultClass="java.lang.String">
			select TR_NO as regTrkTrNum from URF_TRUCK_REGD_HD where TRK_REG_ID = #trkRegID#  
		</select>
		
		<select id="chkTrkRegistrationStatus" parameterClass="java.lang.String" resultClass="java.lang.String">
			select TRK_REG_STATUS as trkRegStatus from URF_TRUCK_REGD_HD where TRK_REG_ID = #trkRegID#
		</select>
		
		<update id="UpdateTruckRegistration" parameterClass="cargo.cms.extsvc.bo.TruckRegistrationBO">
			UPDATE URF_TRUCK_REGD_HD SET LOGIN_ID= #loginID#, LOGIN_TYPE= #loginType#, REG_USER_ID= #createUserID#, 
			 TRK_NUM= #trkNum#, ASSIGNED_TRUCKER= #assignedTrucker#, TRK_REG_STATUS= #trkRegStatus#,
			 LM_USER_ID= #createUserID#, LM_DATE = SYSDATE
			WHERE TR_NO = #regTrkTrNum#
		</update>
		
<!-- delete service -->
		<delete id="deleteUrfCollectionDtl" parameterClass="cargo.cms.extsvc.bo.TruckRegistrationBO">
			DELETE FROM URF_COLLECTION_DTL  WHERE TR_NO IN (SELECT TR_NO from URF_COLLECTION_HD where TRK_REG_ID = #trkRegID# AND URF_NUM = #urfNum#)  
		</delete>
				
		<delete id="deleteUrfCollectionHd" parameterClass="cargo.cms.extsvc.bo.TruckRegistrationBO">
			DELETE FROM  URF_COLLECTION_HD WHERE TRK_REG_ID = #trkRegID# AND URF_NUM = #urfNum#
		</delete>
		
		<delete id="deleteTruckRegistrationDtl" parameterClass="cargo.cms.extsvc.bo.TruckRegistrationBO">
			DELETE FROM URF_TRUCK_REGD_DTL  WHERE TR_NO IN (SELECT TR_NO from URF_TRUCK_REGD_HD where TRK_REG_ID = #trkRegID#)
		</delete>
		
		<delete id="deleteTruckRegistrationHd" parameterClass="cargo.cms.extsvc.bo.TruckRegistrationBO">
			DELETE FROM  URF_TRUCK_REGD_HD WHERE TRK_REG_ID = #trkRegID#
		</delete>


<!-- Create URF Release service -->
		<insert id="insertUrfReleaseInfo" parameterClass="cargo.cms.extsvc.bo.TruckRegistrationBO" >
			INSERT INTO URF_COLLECTION_HD (
			    TR_NO,    TRK_REG_ID,      TRK_NUM,     URF_NUM ,   CR_USER_ID,    CR_DATE,    LM_USER_ID,    LM_DATE)
			 VALUES (#regUrfTrNum#, #trkRegID#,     #trkNum#,  #urfNum# , #createUserID#,    SYSDATE,    #createUserID#,    SYSDATE )
		</insert>
				
		<insert id="insertUrfCollectionDtls" parameterClass="cargo.cms.extsvc.bo.TruckRegistrationBO" >
			INSERT
				INTO URF_COLLECTION_DTL
				  (
				    TR_NO,
				    DOC_LINE_NO,
				    ULD_EQUIP ,
				    ULD_TYPE ,
				    ULD_NO ,
				    ULD_CARR ,
				    ULD_KEY ,
				    EQUIP_TYPE ,
				    EQUIP_QTY ,
				    COLLECTION_DATE ,
				    COLLECTION_USER ,				   
				    CR_USER_ID,
				    CR_DATE,
				    LM_USER_ID,
				    LM_DATE
				  )
				  VALUES
				  (
				  	#regUrfTrNum#,
				    URF_COLL_DTL_DOCLINE_SEQ.NEXTVAL,
				    #uldEquip#,
				    #uldType#,
				    #uldNumber#,
				    #uldCarr#,
				    #uldNo#,
				    #accCode#,
				    #accQty#,				    
				    SYSDATE,
				    #createUserID#,			
				    #createUserID#,
				    SYSDATE,
				    #createUserID#,
				    SYSDATE
				  )
		</insert>
		
		<select id="getdeviceidForTruckNotification" parameterClass="java.util.HashMap" resultClass="cargo.cms.afw.bo.MasterBO" >
			SELECT DISTINCT KSID AS param1,
			  LOGIN_ID           AS param2
			FROM MAST_MBLE_TRK_SUBSCRIBE
			WHERE 
     		 (LOGIN_ID IN
			  (SELECT REG_USER_ID
			  FROM URF_TRUCK_REGD_HD
			  WHERE TRK_NUM = (SELECT TRUCK_NO FROM TRUCK_TRIP where TRIP_ID = ( SELECT TRIP_ID from ( SELECT * FROM TRUCK_TRIP where TRUCK_NO = UPPER(#truckNo#) order by CR_DATE desc) where rownum = 1 )) 
			  AND TRK_REG_STATUS = 'Save'
			  )
		      OR
		      LOGIN_ID IN
			  (SELECT ASSIGNED_TRUCKER
			  FROM URF_TRUCK_REGD_HD
			  WHERE TRK_NUM = (SELECT TRUCK_NO FROM TRUCK_TRIP where TRIP_ID = ( SELECT TRIP_ID from ( SELECT * FROM TRUCK_TRIP where TRUCK_NO = UPPER(#truckNo#) order by CR_DATE desc) where rownum = 1 ))
			  AND TRK_REG_STATUS = 'Save' AND ASSIGNED_TRUCKER is not null
			  ) )
			AND sub_scr_flag = 'true'
		</select>
		
		<select id="mobileNotificationTruckDoc" parameterClass="java.util.HashMap" resultClass="cargo.cms.afw.bo.MasterBO" >
			SELECT DISTINCT KSID AS param1,
			  LOGIN_ID AS param2
			FROM MAST_MBLE_TRK_SUBSCRIBE
			WHERE ( LOGIN_ID IN  (SELECT REG_USER_ID FROM URF_TRUCK_REGD_HD WHERE TRK_NUM = (SELECT TRUCK_NO FROM TRUCK_TRIP where TRIP_ID = ( SELECT TRIP_ID from ( SELECT * FROM TRUCK_TRIP where TRUCK_NO = UPPER(#truckNo#) order by CR_DATE desc) where rownum = 1 )) AND trk_reg_status != 'Completed')
				OR LOGIN_ID IN  (SELECT ASSIGNED_TRUCKER FROM URF_TRUCK_REGD_HD WHERE TRK_NUM = (SELECT TRUCK_NO FROM TRUCK_TRIP where TRIP_ID = ( SELECT TRIP_ID from ( SELECT * FROM TRUCK_TRIP where TRUCK_NO = UPPER(#truckNo#) order by CR_DATE desc) where rownum = 1 )) AND trk_reg_status != 'Completed')
			)AND sub_scr_flag = 'true'
		</select>
		
		
		<update id="updateTruckRegistrationToComplete" parameterClass="java.util.HashMap">
			update URF_TRUCK_REGD_HD set TRK_REG_STATUS = 'Completed', LM_USER_ID = #userId#, LM_DATE  = SYSDATE, 
			TRIP_ID = ( SELECT TRIP_ID from ( SELECT * FROM TRUCK_TRIP where TRUCK_NO = UPPER(#truckNo#) order by CR_DATE desc) where rownum = 1 )
			where TRK_REG_STATUS != 'Completed'  AND
			TRK_NUM =  ( SELECT TRUCK_NO FROM TRUCK_TRIP where TRIP_ID = ( SELECT TRIP_ID from ( SELECT * FROM TRUCK_TRIP where TRUCK_NO = UPPER(#truckNo#) order by CR_DATE desc) where rownum = 1 )) 
		</update>
		
		<insert id="insertTruckPushNotification" parameterClass="java.util.HashMap" >
			INSERT INTO MAST_MBLE_PUSH_NOT_FLT (TR_NO,TRUCK,PUSH_SENT_DATE,SEND_IND,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,device_id) 
   			VALUES (#TR_NO#,#truck#,SYSDATE,'Y',#deviceId#,SYSDATE,#deviceId#,SYSDATE,#deviceId#)
		</insert>
		
		<select id="validate_truck_in_terminal_for_issueRCL"	parameterClass="java.lang.String" resultClass="java.lang.String">
			SELECT TRIP_ID FROM TRUCK_TRIP WHERE TRUCK_NO = #truckNo# AND CLOSED = 'N'
		</select>
		
		<select id="validate_truck_in_terminal_with_purpose"	parameterClass="java.lang.String" resultClass="java.lang.String">
			SELECT PURPOSE FROM TRUCK_TRIP WHERE TRUCK_NO = #truckNo# AND CLOSED = 'N'
		</select>
		
		<select id="validateTrk"  parameterClass="java.lang.String" resultClass="java.lang.Integer">
		  select count(1) from TCS_IPASS_MASTER WHERE TRUCK_NO=#truckNo#					
		</select>
		
		<select id="sqlGetUldGroupTrk" parameterClass="java.lang.String" resultClass="java.lang.String">
			Select ULD_GROUP as uldGroup from ULD_GROUP_TYPE where ULD_TYPE = #type# and ROWNUM = 1
		</select>
	
		<select id="sqlGetUldGroupCount" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM MAST_ULD_GROUP WHERE ULD_GROUP = #PARAM#
	</select>
	
		<select id="sqlExpUldChkOutEicFlg" parameterClass="java.lang.String" resultClass="java.lang.String">
			SELECT eic_flg from uld_inventory where uld_key = #ULD_KEY# AND NVL(base_pal_flg,'N')='Y'
		</select>
		
		<select id="getEicULDTopPallet" parameterClass="java.lang.String" resultClass="cargo.cms.export.bo.ULDCheckOutListBO">
			SELECT uld_key uldKey from uld_inventory where base_plt = #ULD_KEY#
		</select>
		
		<delete id="deleteUrfCollectionULD" parameterClass="java.util.HashMap">
			DELETE FROM  URF_COLLECTION_DTL WHERE ULD_KEY = #ULD_NO# AND TR_NO IN (SELECT TR_NO from URF_COLLECTION_HD where TRK_REG_ID = #TRK_REG_ID# and URF_NUM = #URF_NO#) 
		</delete>
		
		<delete id="deleteUrfCollectionACC" parameterClass="java.util.HashMap">
			DELETE FROM  URF_COLLECTION_DTL WHERE EQUIP_TYPE = #ACC_CODE# AND TR_NO IN (SELECT TR_NO from URF_COLLECTION_HD where TRK_REG_ID = #TRK_REG_ID# and URF_NUM = #URF_NO#) 
		</delete>
		
		<select id="isUldOwnerMatch" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
			SELECT count(1) FROM uld_inventory where ULD_KEY = #ULD_KEY# and FUN_GET_PARENT_CARR(OWNER_ID) = FUN_GET_PARENT_CARR((SELECT CARR_CODE FROM ULD_ISS_HD where EIR_NO = #URF_NO#))
		</select>
		
		<select id="isUldDuplicate" parameterClass="java.util.HashMap" resultClass="java.lang.String">
			select HD.URF_NUM
			from URF_COLLECTION_DTL DTL 
			join URF_COLLECTION_HD HD on HD.TR_NO=DTL.TR_NO
			join URF_TRUCK_REGD_HD TRK_HD on TRK_HD.TRK_REG_ID= HD.TRK_REG_ID
			where DTL.ULD_KEY = #ULD_KEY# AND HD.URF_NUM != #URF_NO# AND TRK_HD.TRK_REG_STATUS != 'Completed'	and ROWNUM = 1
		</select>
		
		<update id="updateTruckRegistrationToCompleteOnTripID" parameterClass="java.util.HashMap">
			update URF_TRUCK_REGD_HD set TRK_REG_STATUS = 'Completed', LM_USER_ID = #LM_USER_ID#, LM_DATE  = SYSDATE,  TRIP_ID = #TRIP_ID#
			where TRK_REG_STATUS != 'Completed'  AND TRK_NUM =  (SELECT TRUCK_NO FROM TRUCK_TRIP where TRIP_ID = #TRIP_ID#) 
		</update>
		<select id="getULDGeneralRmk_stack" parameterClass="java.lang.String" resultClass="java.lang.String" >
		SELECT GEN_RMK FROM ULD_INVENTORY WHERE ULD_KEY=#PARAM#
		</select>
		<update id="updateULDGenRemark_stack" parameterClass="cargo.cms.extsvc.bo.StackULDEICBO">
		UPDATE ULD_INVENTORY SET GEN_RMK = #remark# WHERE ULD_KEY=#uldKey#
		</update>

	        <select id="checkULDEmpty" parameterClass="java.lang.String" resultClass="java.lang.Integer">
			select count(1) from ULD_Inventory 	where ULD_Key = #uldKey# and NVL(EMPTY_FLG,'N') = 'N'
		</select>
<select id="getSplCheckModuleDtls" parameterClass="cargo.cms.extsvc.bo.RclBO" resultClass="cargo.cms.extsvc.bo.RclBO">
		SELECT 'All' AS moduleCode,'All' AS moduleDesc,'1' AS TYPE FROM DUAL
		UNION
		SELECT 'No Module' AS moduleCode,'No Module' AS moduleDesc,'1' AS TYPE FROM DUAL
		UNION
		SELECT moduleCode AS moduleCode,moduleDesc AS moduleDesc,'2' AS TYPE FROM 
		(SELECT WH_AREA AS moduleCode,WH_AREA AS moduleDesc,'2' AS TYPE FROM MAST_WH_AREA WHERE MODULE_YN = 'Y' ORDER BY WH_AREA_DESC)
		ORDER BY TYPE
   	</select>
   	<select id="getMaxCycleLastTimeForFFMULD" parameterClass="cargo.cms.extsvc.bo.RclBO" resultClass="java.lang.Integer">
			SELECT NVL(MAX(to_number(CYCLE)),0) FROM SPL_CHECK_DATA WHERE AWB_NO=#awbNo# AND AWB_DATE=#awbDate# AND FLT_KEY=#fltKey# AND FLT_DATE=#fltDate# AND ULD_KEY IS NOT NULL AND ULD_KEY=#uldKey# and cycle is not null
	</select>
   	<select id="getLastTimeForFFMULD" parameterClass="cargo.cms.extsvc.bo.RclBO" resultClass="java.lang.String">
			SELECT TO_CHAR(MIN(CR_DATE),'DDMONYY HH24:MI') FROM SPL_CHECK_DATA WHERE AWB_NO=#awbNo# AND AWB_DATE=#awbDate# AND FLT_KEY=#fltKey# AND FLT_DATE=#fltDate# AND ULD_KEY IS NOT NULL AND ULD_KEY=#uldKey#
	</select>
	<select id="getMaxLastTimeForFFMULD" parameterClass="cargo.cms.extsvc.bo.RclBO" resultClass="java.lang.String">
			SELECT TO_CHAR(MAX(CR_DATE),'DDMONYY HH24:MI') FROM SPL_CHECK_DATA WHERE AWB_NO=#awbNo# AND AWB_DATE=#awbDate# AND FLT_KEY=#fltKey# AND FLT_DATE=#fltDate# AND ULD_KEY IS NOT NULL AND ULD_KEY=#uldKey#
	</select>
	<select id="getMaxCycleLastTimeForEXPULD" parameterClass="cargo.cms.extsvc.bo.RclBO" resultClass="java.lang.Integer">
	<![CDATA[
			SELECT NVL(MAX(to_number(CYCLE)),0) FROM SPL_CHECK_DATA WHERE AWB_NO=#awbNo# AND AWB_DATE=#awbDate# AND ULD_KEY=#uldKey# and nvl(is_offload,'N')='N' AND CR_DATE > TO_DATE(#firstBrkdnTime#,'DDMONYY HH24:MI') and cycle is not null
	]]>
	</select>
	<select id="getLastTimeForEXPULD" parameterClass="cargo.cms.extsvc.bo.RclBO" resultClass="java.lang.String">
	<![CDATA[
			SELECT TO_CHAR(MIN(CR_DATE),'DDMONYY HH24:MI') FROM SPL_CHECK_DATA WHERE AWB_NO=#awbNo# AND AWB_DATE=#awbDate# AND (ULD_KEY=#uldKey#) and nvl(is_offload,'N')='N' AND CR_DATE > TO_DATE(#firstBrkdnTime#,'DDMONYY HH24:MI')
	]]>
	</select>
	<select id="getMaxLastTimeForEXPULD" parameterClass="cargo.cms.extsvc.bo.RclBO" resultClass="java.lang.String">
	       <![CDATA[
			SELECT TO_CHAR(MAX(CR_DATE),'DDMONYY HH24:MI') FROM SPL_CHECK_DATA WHERE AWB_NO=#awbNo# AND AWB_DATE=#awbDate# AND (ULD_KEY=#uldKey#) and nvl(is_offload,'N')='N' AND CR_DATE > TO_DATE(#firstBrkdnTime#,'DDMONYY HH24:MI')
			]]>
	</select>
	<select id="getMaxCycleLastTimeForIMPBULK" parameterClass="cargo.cms.extsvc.bo.RclBO" resultClass="java.lang.Integer">
	<![CDATA[
			SELECT NVL(MAX(to_number(CYCLE)),0) FROM SPL_CHECK_DATA WHERE AWB_NO=#awbNo# AND AWB_DATE=#awbDate# AND (ULD_KEY IS NULL or uld_key='XXXXXXXXXX') and nvl(is_offload,'N')='N' AND CR_DATE > TO_DATE(#firstBrkdnTime#,'DDMONYY HH24:MI') and cycle is not null
	]]>
	</select>
<select id="getcyclevalueforoffload" parameterClass="cargo.cms.extsvc.bo.RclBO" resultClass="java.lang.String">
	<![CDATA[
	SELECT max(to_number(cycle_no)) FROM spl_check_milestone_sla WHERE SEQ_NO IN (SELECT SEQ_NO FROM SPL_CARGO_MILESTONE SPL WHERE SPL.AWB_NO = #awbNo# AND SPL.AWB_DATE = #awbDate#
                AND SPL.ULD_KEY = #uldKey# and NVL(OFFLOAD_IND,'N') = 'Y' and (MILESTONE = 'A-SPECIAL-CHECK' OR MILESTONE = 'D-SPECIAL-CHECK')) and cycle_no is not null
    ]]>
	</select>
	<select id="checkCycleStatusForOffload" parameterClass="cargo.cms.extsvc.bo.RclBO" resultClass="java.lang.String">
	<![CDATA[
	SELECT NVL(sla_status,'FAIL') FROM spl_check_milestone_sla WHERE SEQ_NO IN (SELECT SEQ_NO FROM SPL_CARGO_MILESTONE SPL WHERE SPL.AWB_NO = #awbNo# AND SPL.AWB_DATE = #awbDate#
                AND SPL.ULD_KEY = #uldKey# and NVL(OFFLOAD_IND,'N') = 'Y' and (MILESTONE = 'A-SPECIAL-CHECK' OR MILESTONE = 'D-SPECIAL-CHECK'))
                AND CYCLE_NO=#cycle#
    ]]>
	</select>
	<select id="checkCycleStatusForNonOffload" parameterClass="cargo.cms.extsvc.bo.RclBO" resultClass="java.lang.String">
	<![CDATA[
	SELECT NVL(sla_status,'FAIL') FROM spl_check_milestone_sla WHERE SEQ_NO IN (SELECT SEQ_NO FROM SPL_CARGO_MILESTONE SPL WHERE SPL.AWB_NO = #awbNo# AND SPL.AWB_DATE = #awbDate#
                AND SPL.ULD_KEY = #uldKey# and NVL(OFFLOAD_IND,'N') = 'N' and (MILESTONE = 'A-SPECIAL-CHECK' OR MILESTONE = 'D-SPECIAL-CHECK'))
                AND CYCLE_NO=#cycle#
    ]]>
	</select>
	<select id="checkLatestcyclevalueforoffload" parameterClass="cargo.cms.extsvc.bo.RclBO" resultClass="java.lang.String">
	<![CDATA[
	SELECT (CASE WHEN SYSDATE > SLA_MEET_TIMESTAMP THEN TO_CHAR(TO_NUMBER(#cycle#)+1) ELSE #cycle# END) FROM spl_check_milestone_sla WHERE SEQ_NO IN (SELECT SEQ_NO FROM SPL_CARGO_MILESTONE SPL WHERE SPL.AWB_NO = #awbNo# AND SPL.AWB_DATE = #awbDate#
                AND SPL.ULD_KEY = #uldKey# and NVL(OFFLOAD_IND,'N') = 'Y' and (MILESTONE = 'A-SPECIAL-CHECK' OR MILESTONE = 'D-SPECIAL-CHECK'))
                AND CYCLE_NO=#cycle#
    ]]>
	</select>
	<select id="getcyclevaluefornotoffload" parameterClass="cargo.cms.extsvc.bo.RclBO" resultClass="java.lang.String">
	<![CDATA[
	SELECT max(to_number(cycle_no)) FROM spl_check_milestone_sla WHERE SEQ_NO IN (SELECT SEQ_NO FROM SPL_CARGO_MILESTONE SPL WHERE SPL.AWB_NO = #awbNo# AND SPL.AWB_DATE = #awbDate#
                AND SPL.ULD_KEY = #uldKey# and NVL(OFFLOAD_IND,'N') = 'N' and (MILESTONE = 'A-SPECIAL-CHECK' OR MILESTONE = 'D-SPECIAL-CHECK')) and cycle_no is not null
    ]]>
	</select>
	<select id="checkLatestcyclevaluefornonoffload" parameterClass="cargo.cms.extsvc.bo.RclBO" resultClass="java.lang.String">
	<![CDATA[
	SELECT (CASE WHEN SYSDATE > SLA_MEET_TIMESTAMP THEN TO_CHAR(TO_NUMBER(#cycle#)+1) ELSE #cycle# END) FROM spl_check_milestone_sla WHERE SEQ_NO IN (SELECT SEQ_NO FROM SPL_CARGO_MILESTONE SPL WHERE SPL.AWB_NO = #awbNo# AND SPL.AWB_DATE = #awbDate#
                AND SPL.ULD_KEY = #uldKey# and NVL(OFFLOAD_IND,'N') = 'N' and (MILESTONE = 'A-SPECIAL-CHECK' OR MILESTONE = 'D-SPECIAL-CHECK'))
                AND CYCLE_NO=#cycle#
    ]]>
	</select>
	<select id="getLastTimeForIMPBULK" parameterClass="cargo.cms.extsvc.bo.RclBO" resultClass="java.lang.String">
	<![CDATA[
			SELECT TO_CHAR(MIN(CR_DATE),'DDMONYY HH24:MI') FROM SPL_CHECK_DATA WHERE AWB_NO=#awbNo# AND AWB_DATE=#awbDate# AND (ULD_KEY IS NULL or uld_key='XXXXXXXXXX') and nvl(is_offload,'N')='N' AND CR_DATE > TO_DATE(#firstBrkdnTime#,'DDMONYY HH24:MI')
	]]>
	</select>
	<select id="getFirstActTimeForIMPBULK" parameterClass="cargo.cms.extsvc.bo.RclBO" resultClass="java.lang.String">
	<![CDATA[
			SELECT TO_CHAR(MIN(FIRST_ACTION_TIME),'DDMONYY HH24:MI') FROM SPL_CHECK_DATA WHERE AWB_NO=#awbNo# AND AWB_DATE=#awbDate# AND (ULD_KEY IS NULL or uld_key='XXXXXXXXXX') and nvl(is_offload,'N')='N' AND CR_DATE > TO_DATE(#firstBrkdnTime#,'DDMONYY HH24:MI')
	]]>
	</select>
	<select id="getMaxLastTimeForIMPBULK" parameterClass="cargo.cms.extsvc.bo.RclBO" resultClass="java.lang.String">
	<![CDATA[
			SELECT TO_CHAR(MAX(CR_DATE),'DDMONYY HH24:MI') FROM SPL_CHECK_DATA WHERE AWB_NO=#awbNo# AND AWB_DATE=#awbDate# AND (ULD_KEY IS NULL or uld_key='XXXXXXXXXX') and nvl(is_offload,'N')='N' AND CR_DATE > TO_DATE(#firstBrkdnTime#,'DDMONYY HH24:MI')
			]]>
	</select>
	<select id="getMaxCycleLastTimeForEXPOFFLD" parameterClass="cargo.cms.extsvc.bo.RclBO" resultClass="java.lang.Integer">
	<![CDATA[
			SELECT NVL(MAX(CYCLE),0) FROM SPL_CHECK_DATA WHERE AWB_NO=#awbNo# AND AWB_DATE=#awbDate# AND ULD_KEY=#uldKey# and nvl(is_offload,'N')='Y' AND CR_DATE > TO_DATE(#firstBrkdnTime#,'DDMONYY HH24:MI')
	]]>
	</select>
	<select id="getLastTimeForEXPOFFLD" parameterClass="cargo.cms.extsvc.bo.RclBO" resultClass="java.lang.String">
	<![CDATA[
			SELECT TO_CHAR(MIN(CR_DATE),'DDMONYY HH24:MI') FROM SPL_CHECK_DATA WHERE AWB_NO=#awbNo# AND AWB_DATE=#awbDate# AND ULD_KEY=#uldKey# and nvl(is_offload,'N')='Y' AND CR_DATE > TO_DATE(#firstBrkdnTime#,'DDMONYY HH24:MI')
	]]>   
	</select>
	<select id="getMaxLastTimeForEXPOFFLD" parameterClass="cargo.cms.extsvc.bo.RclBO" resultClass="java.lang.String">
	<![CDATA[
			SELECT TO_CHAR(MAX(CR_DATE),'DDMONYY HH24:MI') FROM SPL_CHECK_DATA WHERE AWB_NO=#awbNo# AND AWB_DATE=#awbDate# AND ULD_KEY=#uldKey# and nvl(is_offload,'N')='Y' AND CR_DATE > TO_DATE(#firstBrkdnTime#,'DDMONYY HH24:MI')
			]]>
	</select>
	<select id="getMinBreakdownTimeForImport" parameterClass="cargo.cms.extsvc.bo.RclBO" resultClass="java.lang.String">
			SELECT TO_CHAR(MIN(CR_DATE),'DDMONYY HH24:MI') FROM IMP_AWB_STRG_DTL WHERE AWB_NO=#awbNo# AND AWB_DATE=#awbDate# AND ULD_KEY=#uldKey#
	</select>
	<select id="getFirstActionTimeForExport" parameterClass="cargo.cms.extsvc.bo.RclBO" resultClass="java.lang.String">
	<![CDATA[
			SELECT TO_CHAR(MIN(FIRST_ACTION_TIME),'DDMONYY HH24:MI') FROM SPL_CHECK_DATA WHERE AWB_NO=#awbNo# AND AWB_DATE=#awbDate# AND (ULD_KEY=#uldKey#) and nvl(is_offload,'N')='N' AND CR_DATE > TO_DATE(#firstBrkdnTime#,'DDMONYY HH24:MI')
	]]>
	</select>
	<select id="getFirstActionTimeForExportOfld" parameterClass="cargo.cms.extsvc.bo.RclBO" resultClass="java.lang.String">
	<![CDATA[
			SELECT TO_CHAR(MIN(FIRST_ACTION_TIME),'DDMONYY HH24:MI') FROM SPL_CHECK_DATA WHERE AWB_NO=#awbNo# AND AWB_DATE=#awbDate# AND (ULD_KEY=#uldKey#) and nvl(is_offload,'N')='Y' AND CR_DATE > TO_DATE(#firstBrkdnTime#,'DDMONYY HH24:MI')
	]]>
	</select>
	<select id="getMinBreakdownTimeForExport" parameterClass="cargo.cms.extsvc.bo.RclBO" resultClass="java.lang.String">
			SELECT TO_CHAR(MIN(RCL_DATE),'DDMONYY HH24:MI') FROM(
			SELECT HD.RCL_DATE FROM EXP_RCL_HD HD,EXP_RCL_DTL DTL WHERE 
			DTL.RCL_NO = HD.RCL_NO AND HD.AWB_NO=#awbNo# AND HD.AWB_DATE=#awbDate# AND DTL.ULD_KEY=#uldKey# AND HD.PPK_TYPE='P'
			UNION ALL
			SELECT HD.RCL_DATE FROM EXP_RCL_HD HD,EXP_RCL_BRKDN BRKDN WHERE 
			BRKDN.RCL_NO = HD.RCL_NO AND BRKDN.AWB_NO=#awbNo# AND BRKDN.AWB_DATE=#awbDate# AND HD.ULD_KEY=#uldKey# AND HD.PPK_TYPE='M')
	</select>
	<select id="getMinBreakdownTimeForExportOffload" parameterClass="cargo.cms.extsvc.bo.RclBO" resultClass="java.lang.String">
			SELECT TO_CHAR(MIN(confirmed_date),'DDMONYY HH24:MI') FROM EXP_OFFLOAD_ULD_AWB WHERE AWB_NO=#awbNo# AND AWB_DATE=#awbDate# AND ULD_BT_NO=#uldKey# AND NVL(CONFIRMED_YN,'N')='Y'
	</select>
	<select id="getCurrentTimeforSpecialCheck" parameterClass="cargo.cms.extsvc.bo.RclBO" resultClass="java.lang.String">
			SELECT TO_CHAR(SYSDATE,'DDMONYY HH24:MI') FROM DUAL
	</select>
	<select id="getMinBreakdownTimeForImpBulk" parameterClass="cargo.cms.extsvc.bo.RclBO" resultClass="java.lang.String">
			SELECT TO_CHAR(MIN(CR_DATE),'DDMONYY HH24:MI') FROM IMP_AWB_STRG_DTL WHERE AWB_NO=#awbNo# AND AWB_DATE=#awbDate#
	</select>
	<select id="getMinBreakdownTimeForExpBulk" parameterClass="cargo.cms.extsvc.bo.RclBO" resultClass="java.lang.String">
			SELECT TO_CHAR(MIN(HD.RCL_DATE),'DDMONYY HH24:MI') FROM EXP_RCL_HD HD WHERE HD.AWB_NO=#awbNo# AND HD.AWB_DATE=#awbDate# AND HD.PPK_TYPE='B'
	</select>
	<select id="getMinBreakdownTimeForExpOffloadBulk" parameterClass="cargo.cms.extsvc.bo.RclBO" resultClass="java.lang.String">
			SELECT TO_CHAR(MIN(confirmed_date),'DDMONYY HH24:MI') FROM EXP_OFFLOAD_ULD_AWB WHERE AWB_NO=#awbNo# AND AWB_DATE=#awbDate# AND NVL(CONFIRMED_YN,'N')='Y'
	</select>
	<select id="getLastTimeForEXPOFFLDBulk" parameterClass="cargo.cms.extsvc.bo.RclBO" resultClass="java.lang.String">
	<![CDATA[
		SELECT TO_CHAR(MIN(CR_DATE),'DDMONYY HH24:MI') FROM SPL_CHECK_DATA WHERE AWB_NO=#awbNo# AND AWB_DATE=#awbDate# AND ULD_KEY='XXXXXXXXXX' and nvl(is_offload,'N')='Y' AND CR_DATE > TO_DATE(#firstBrkdnTime#,'DDMONYY HH24:MI')
	]]>      
	</select>
	<select id="getFirstActTimeForEXPOFFLDBulk" parameterClass="cargo.cms.extsvc.bo.RclBO" resultClass="java.lang.String">
	<![CDATA[
			SELECT TO_CHAR(MIN(FIRST_ACTION_TIME),'DDMONYY HH24:MI') FROM SPL_CHECK_DATA WHERE AWB_NO=#awbNo# AND AWB_DATE=#awbDate# AND ULD_KEY='XXXXXXXXXX' and nvl(is_offload,'N')='Y' AND CR_DATE > TO_DATE(#firstBrkdnTime#,'DDMONYY HH24:MI')
	]]>
	</select>
	<select id="getMaxLastTimeForEXPOFFLDBulk" parameterClass="cargo.cms.extsvc.bo.RclBO" resultClass="java.lang.String">
	<![CDATA[
			SELECT TO_CHAR(MAX(CR_DATE),'DDMONYY HH24:MI') FROM SPL_CHECK_DATA WHERE AWB_NO=#awbNo# AND AWB_DATE=#awbDate# AND ULD_KEY='XXXXXXXXXX' and nvl(is_offload,'N')='Y' AND CR_DATE > TO_DATE(#firstBrkdnTime#,'DDMONYY HH24:MI')
    ]]>
	</select>
	<select id="getMaxCycleLastTimeForEXPBulk" parameterClass="cargo.cms.extsvc.bo.RclBO" resultClass="java.lang.Integer">
	<![CDATA[
			SELECT NVL(MAX(CYCLE),0) FROM SPL_CHECK_DATA WHERE AWB_NO=#awbNo# AND AWB_DATE=#awbDate# and nvl(is_offload,'N')='N' AND ULD_KEY='XXXXXXXXXX' AND CR_DATE > TO_DATE(#firstBrkdnTime#,'DDMONYY HH24:MI')
	]]>
	</select>
	<select id="getMaxCycleLastTimeForEXPOffloadBulk" parameterClass="cargo.cms.extsvc.bo.RclBO" resultClass="java.lang.Integer">
	<![CDATA[
			SELECT NVL(MAX(CYCLE),0) FROM SPL_CHECK_DATA WHERE AWB_NO=#awbNo# AND AWB_DATE=#awbDate# and nvl(is_offload,'N')='Y' AND ULD_KEY='XXXXXXXXXX' AND CR_DATE > TO_DATE(#firstBrkdnTime#,'DDMONYY HH24:MI')
	]]>    
	</select>
	
	<select id="getSplChkMileStoneConfigVal" parameterClass="java.lang.String" resultClass="java.lang.String">
			SELECT SLA_T2_CRTRIA FROM MAST_SLA_MLSTN_CNFG WHERE SLA_ID=#PARAM#
	</select>
	<select id="getSplChkMileStoneBDTimeConfigVal" parameterClass="java.lang.String" resultClass="java.lang.String">
			SELECT SLA_T1_FAIL_MIN FROM MAST_SLA_MLSTN_CNFG WHERE SLA_ID=#PARAM#
	</select>
	<select id="getTempVoltageSetupDetails" parameterClass="cargo.cms.extsvc.bo.RclBO" resultClass="cargo.cms.extsvc.bo.RclBO">
     SELECT AWB_NO AS awbNo,TO_CHAR(AWB_DATE,'DDMONYY') AS awbDate,TEMP_RANGE_FROM AS tempRangeFrom,TEMP_RANGE_TO AS tempRangeTo,BATTERY_RANGE_FROM AS batteryRangeFrom,BATTERY_RANGE_TO AS batteryRangeTo,BATTERY_LVL as batteryLvl FROM AWB_TEMP_VOLTAGE_SETUP
     WHERE AWB_NO=#awbNo# AND AWB_DATE=#awbDate#
	</select>
   	<select id="getSplCheckTemperatureDtls" parameterClass="cargo.cms.extsvc.bo.RclBO" resultClass="cargo.cms.extsvc.bo.RclBO">
   		<![CDATA[
   	SELECT 
  FFM.AWB_NO AS awbNo,
  TO_CHAR(FFM.AWB_DATE,'DDMONYY') AS awbDate,
  FFM.uld_key AS uldKey,
  INV.loc_code AS locn,
  setup.temp_range_from||DECODE(setup.temp_range_from,'','','NULL','','C')||DECODE(setup.temp_range_from,'','',NULL,'','-')||setup.temp_range_to||DECODE(setup.temp_range_to,'','','NULL','','C') AS tempRange,
  setup.battery_range_from||DECODE(setup.battery_range_to,'','',NULL,'','-')||setup.battery_range_to||DECODE(setup.battery_range_from,'','','NULL','',BATTERY_LVL)                     AS batteryRange,
  setup.airln_rmk AS airLineRmk,
	(SELECT HANDLING_MODE FROM IMP_ULD_LIST  WHERE FLT_KEY=FFM.flt_key  AND FLT_DATE =FFM.flt_date  AND ULD_KEY  =ffm.uld_key  ) AS shpType,
  OPR.CARR_CODE AS carrier,
  opr.CGO_ACFT_TYPE AS acftType,
 (SELECT STRAGG(STRINGDELIM(SHC, ',')) AS shcs 
   FROM (SELECT DISTINCT SHC, FLT_KEY, ULD_KEY,FLT_DATE, PRIORITY 
   FROM V_SPL_FLT_ULD_SHC ULDSHC WHERE ULDSHC.TAG = 'FFM' AND ULDSHC.FLT_KEY=FFM.flt_key AND ULDSHC.FLT_DATE=FFM.flt_date AND ULDSHC.ULD_KEY=FFM.ULD_KEY ORDER BY PRIORITY DESC)) as shcs,
   AWB.AWB_TYPE AS awbType,
   (SELECT TO_CHAR(MAX(CR_DATE),'DDMONYY HH24:MI') FROM SPL_CHECK_DATA WHERE AWB_NO=FFM.AWB_NO AND AWB_DATE=FFM.AWB_DATE AND ULD_KEY IS NOT NULL AND ULD_KEY=FFM.ULD_KEY AND NVL(IS_OFFLOAD,'N')='N') AS lastTime,
   'FFMULD' as recType
   FROM V_FFM_DTL FFM
   JOIN FLT_OPR OPR ON OPR.FLT_KEY = FFM.FLT_KEY AND OPR.SCH_DATE=FFM.FLT_DATE
   JOIN AWB AWB ON AWB.AWB_NO = FFM.AWB_NO AND AWB.AWB_DATE = FFM.AWB_DATE
   JOIN AWB_INVENTORY INV ON INV.AWB_NO=FFM.AWB_NO AND INV.AWB_DATE=FFM.AWB_DATE AND INV.ULD_KEY=FFM.ULD_KEY
   LEFT JOIN AWB_TEMP_VOLTAGE_SETUP SETUP ON SETUP.AWB_NO = AWB.AWB_NO AND SETUP.AWB_DATE = AWB.AWB_DATE
   LEFT JOIN FLT_OPR IMPOPR ON IMPOPR.FLT_KEY=FFM.FLT_KEY AND IMPOPR.SCH_DATE=FFM.FLT_DATE AND IMPOPR.FLT_TYPE='A'
   WHERE FFM.uld_key IS NOT NULL  AND inv.LOCN_PCS>0 AND inv.uld_key is not null
   AND AWB.CR_DATE > TO_DATE((SELECT RULE_VALUE FROM CMSRULES WHERE rule_code='SPL_CHECK_CUT_OFF_DATE'),'DDMONYY')
   ]]>
   	<isNotEmpty property="awbNo">
	AND FFM.AWB_NO = #awbNo#
	AND FFM.AWB_DATE = #awbDate#
	</isNotEmpty>
	<isNotEmpty property="uldKey">
	AND FFM.ULD_KEY=#uldKey#
	</isNotEmpty>
	<isNotEmpty property="module">
	<isNotEqual property="module" compareValue="All">
	<isNotEqual property="module" compareValue="No Module">
	AND IMPOPR.FLT_MODULE1 = #module#
	</isNotEqual>
	</isNotEqual>
	<isEqual property="module" compareValue="No Module">
	AND EXISTS (SELECT NULL FROM AWB_INVENTORY WHERE AWB_NO=AWB.AWB_NO AND AWB_DATE=AWB.AWB_DATE AND FLT_KEY IS NULL AND FLT_DATE IS NULL)
	</isEqual>
	</isNotEmpty>
	AND (AWB.spl_code1 in <iterate property="sch" open="(" close=")" conjunction=",">#sch[]#</iterate>
     OR AWB.spl_code2 in <iterate property="sch" open="(" close=")" conjunction=",">#sch[]#</iterate>
     OR AWB.spl_code3 in <iterate property="sch" open="(" close=")" conjunction=",">#sch[]#</iterate>
     OR AWB.spl_code4 in <iterate property="sch" open="(" close=")" conjunction=",">#sch[]#</iterate>
     OR AWB.spl_code5 in <iterate property="sch" open="(" close=")" conjunction=",">#sch[]#</iterate>
     OR AWB.spl_code6 in <iterate property="sch" open="(" close=")" conjunction=",">#sch[]#</iterate>
     OR AWB.spl_code7 in <iterate property="sch" open="(" close=")" conjunction=",">#sch[]#</iterate>
     OR AWB.spl_code8 in <iterate property="sch" open="(" close=")" conjunction=",">#sch[]#</iterate>
     OR AWB.spl_code9 in <iterate property="sch" open="(" close=")" conjunction=",">#sch[]#</iterate>)
     <![CDATA[
	UNION
	SELECT 
   stg.AWB_NO AS awbNo,
   TO_CHAR(stg.AWB_DATE,'DDMONYY') AS awbDate,
  stg.CHKIN_ULD_KEY AS uldKey,
  INV.loc_code AS locn,
  setup.temp_range_from||DECODE(setup.temp_range_from,'','','NULL','','C')||DECODE(setup.temp_range_from,'','',NULL,'','-')||setup.temp_range_to||DECODE(setup.temp_range_to,'','','NULL','','C') AS tempRange,
  setup.battery_range_from||DECODE(setup.battery_range_to,'','',NULL,'','-')||setup.battery_range_to||DECODE(setup.battery_range_from,'','','NULL','',BATTERY_LVL)                     AS batteryRange,
  setup.airln_rmk AS airLineRmk,
	(SELECT HANDLING_MODE FROM IMP_ULD_LIST WHERE FLT_KEY=stg.flt_key AND FLT_DATE =stg.flt_date AND ULD_KEY  =CHKIN_ULD_KEY) AS shpType,
  OPR.CARR_CODE AS carrier,
  opr.CGO_ACFT_TYPE AS acftType,
  (SELECT STRAGG(STRINGDELIM(SHC, ',')) AS shcs 
   FROM (SELECT DISTINCT SHC, FLT_KEY, ULD_KEY,FLT_DATE, PRIORITY 
   FROM V_SPL_FLT_ULD_SHC ULDSHC WHERE ULDSHC.TAG = 'HCON' AND ULDSHC.FLT_KEY=stg.flt_key AND ULDSHC.FLT_DATE=stg.flt_date AND ULDSHC.ULD_KEY=CHKIN_ULD_KEY ORDER BY PRIORITY DESC)) as shcs,
   AWB.AWB_TYPE AS awbType,
   (SELECT TO_CHAR(MAX(CR_DATE),'DDMONYY HH24:MI') FROM SPL_CHECK_DATA WHERE AWB_NO=stg.AWB_NO AND AWB_DATE=stg.AWB_DATE AND ULD_KEY IS NOT NULL AND ULD_KEY=stg.ULD_KEY AND NVL(IS_OFFLOAD,'N')='N') AS lastTime,
   'STRGULD' as recType
FROM IMP_AWB_STRG_DTL stg
JOIN FLT_OPR OPR ON OPR.FLT_KEY = stg.FLT_KEY AND OPR.SCH_DATE=stg.FLT_DATE
JOIN AWB AWB ON AWB.AWB_NO = stg.AWB_NO AND AWB.AWB_DATE = stg.AWB_DATE
JOIN AWB_INVENTORY INV ON INV.AWB_NO=stg.AWB_NO AND INV.AWB_DATE=stg.AWB_DATE AND INV.ULD_KEY=stg.ULD_KEY
LEFT JOIN AWB_TEMP_VOLTAGE_SETUP SETUP ON SETUP.AWB_NO = AWB.AWB_NO AND SETUP.AWB_DATE = AWB.AWB_DATE
LEFT JOIN FLT_OPR IMPOPR ON IMPOPR.FLT_KEY=stg.FLT_KEY AND IMPOPR.SCH_DATE=stg.FLT_DATE AND IMPOPR.FLT_TYPE='A'
WHERE CHKIN_ULD_KEY IS NOT NULL AND inv.LOCN_PCS>0 AND inv.uld_key is not null
AND NOT EXISTS (SELECT NULL  FROM V_FFM_DTL  WHERE flt_key = stg.flt_key  AND flt_date  = stg.flt_date  AND AWB_NO    = stg.awb_no  AND AWB_DATE  = stg.AWB_DATE  AND uld_key   = stg.CHKIN_ULD_KEY  )
AND NOT EXISTS (SELECT NULL  FROM MAST_ULD_TYPE  WHERE code          = SUBSTR(CHKIN_ULD_KEY, 1, 3)  AND (H_CONT_IND     = 'Y'  OR BT_IND           = 'Y'  OR DUMMY_H_CONT_IND = 'Y'))
AND AWB.CR_DATE > TO_DATE((SELECT RULE_VALUE FROM CMSRULES WHERE rule_code='SPL_CHECK_CUT_OFF_DATE'),'DDMONYY')
]]>
<isNotEmpty property="awbNo">
	AND stg.AWB_NO = #awbNo#
	AND stg.AWB_DATE = #awbDate#
	</isNotEmpty>
	<isNotEmpty property="uldKey">
	AND stg.CHKIN_ULD_KEY=#uldKey#
	</isNotEmpty>
	<isNotEmpty property="module">
	<isNotEqual property="module" compareValue="All">
	<isNotEqual property="module" compareValue="No Module">
	AND IMPOPR.FLT_MODULE1 = #module#
	</isNotEqual>
	</isNotEqual>
	<isEqual property="module" compareValue="No Module">
	AND EXISTS (SELECT NULL FROM AWB_INVENTORY WHERE AWB_NO=AWB.AWB_NO AND AWB_DATE=AWB.AWB_DATE AND FLT_KEY IS NULL AND FLT_DATE IS NULL)
	</isEqual>
	</isNotEmpty>
	AND (AWB.spl_code1 in <iterate property="sch" open="(" close=")" conjunction=",">#sch[]#</iterate>
     OR AWB.spl_code2 in <iterate property="sch" open="(" close=")" conjunction=",">#sch[]#</iterate>
     OR AWB.spl_code3 in <iterate property="sch" open="(" close=")" conjunction=",">#sch[]#</iterate>
     OR AWB.spl_code4 in <iterate property="sch" open="(" close=")" conjunction=",">#sch[]#</iterate>
     OR AWB.spl_code5 in <iterate property="sch" open="(" close=")" conjunction=",">#sch[]#</iterate>
     OR AWB.spl_code6 in <iterate property="sch" open="(" close=")" conjunction=",">#sch[]#</iterate>
     OR AWB.spl_code7 in <iterate property="sch" open="(" close=")" conjunction=",">#sch[]#</iterate>
     OR AWB.spl_code8 in <iterate property="sch" open="(" close=")" conjunction=",">#sch[]#</iterate>
     OR AWB.spl_code9 in <iterate property="sch" open="(" close=")" conjunction=",">#sch[]#</iterate>)
     <![CDATA[
     UNION
	SELECT inv.AWB_NO AS awbNo,
    TO_CHAR(inv.AWB_DATE,'DDMONYY') AS awbDate,
    inv.uld_key AS uldKey,
    INV.loc_code AS locn,
    setup.temp_range_from||DECODE(setup.temp_range_from,'','','NULL','','C')||DECODE(setup.temp_range_from,'','',NULL,'','-')||setup.temp_range_to||DECODE(setup.temp_range_to,'','','NULL','','C') AS tempRange,
    setup.battery_range_from||DECODE(setup.battery_range_to,'','',NULL,'','-')||setup.battery_range_to||DECODE(setup.battery_range_from,'','','NULL','',BATTERY_LVL)                     AS batteryRange,
    setup.airln_rmk AS airLineRmk,
	  FUN_GET_ULD_PKG_TYPE(inv.ULD_KEY) AS shpType,
    NVL(expopr.CARR_CODE,AWB.CARR_CODE) AS carrier,
    expopr.CGO_ACFT_TYPE AS acftType,
    ((SELECT STRAGG(STRINGDELIM(CODE,',')) FROM V_EXP_ULD_SHC WHERE ULD_KEY = inv.uld_key )) as shcs,
    AWB.AWB_TYPE AS awbType,
    (SELECT TO_CHAR(MAX(CR_DATE),'DDMONYY HH24:MI') FROM SPL_CHECK_DATA WHERE AWB_NO=inv.AWB_NO AND AWB_DATE=inv.AWB_DATE AND ULD_KEY=inv.uld_key AND NVL(IS_OFFLOAD,'N')='N') AS lastTime,
    'EXPULD' as recType
		FROM
		AWB_INVENTORY inv 
    JOIN ULD_INVENTORY ULD ON NVL(inv.uld_key,'*') = NVL(ULD.ULD_KEY,'*')
    JOIN AWB AWB ON  AWB.AWB_NO = INV.AWB_NO AND AWB.AWB_DATE  = INV.AWB_DATE
    LEFT JOIN EXP_PMANIFEST_AWB PMAN ON PMAN.AWB_NO=AWB.AWB_NO AND PMAN.AWB_DATE=AWB.AWB_DATE
    LEFT JOIN FLT_OPR EXPOPR ON EXPOPR.FLT_KEY=PMAN.FLT_KEY AND EXPOPR.SCH_DATE=PMAN.FLT_DATE AND EXPOPR.FLT_TYPE='D'
    LEFT JOIN AWB_TEMP_VOLTAGE_SETUP SETUP ON SETUP.AWB_NO = AWB.AWB_NO AND SETUP.AWB_DATE = AWB.AWB_DATE
		WHERE (NVL(uld.PPK_IND,'N') = 'Y' OR NVL(uld.MIX_PPK_IND,'N') = 'Y')
		AND (inv.RTN_NO IS NULL OR inv.RTN_NO not in (select rtn_no from exp_rtn_hd where NVL(DEL_YN,'N') = 'N'))
		AND inv.LOCN_PCS>0 AND inv.uld_key is not null
    AND AWB.AWB_TYPE='E'
    AND NOT EXISTS (SELECT NULL FROM EXP_OFFLOAD_ULD_AWB ULDAWB WHERE ULDAWB.AWB_NO=INV.AWB_NO AND ULDAWB.AWB_DATE=INV.AWB_DATE AND NVL(CONFIRMED_YN,'N')='Y')
    AND NOT EXISTS (SELECT NULL FROM SPL_CARGO_MILESTONE SPL where SPL.SLA_STATUS IN ('FAIL','PASS','FPASS') and SPL.AWB_NO = AWB.AWB_NO AND SPL.AWB_DATE = AWB.AWB_DATE
                AND SPL.ULD_KEY = inv.ULD_KEY and NVL(OFFLOAD_IND,'N') = 'N' and (MILESTONE = 'A-SPECIAL-CHECK' OR MILESTONE = 'D-SPECIAL-CHECK')
                UNION
                SELECT NULL FROM V_DDT_DTL  WHERE TRF_TYPE IN ('TT','IF') AND  AWB_NO = AWB.AWB_NO AND AWB_DATE = AWB.AWB_DATE AND ULD_KEY = inv.ULD_KEY
                )
    AND AWB.CR_DATE > TO_DATE((SELECT RULE_VALUE FROM CMSRULES WHERE rule_code='SPL_CHECK_CUT_OFF_DATE'),'DDMONYY')
    ]]>
    <isNotEmpty property="awbNo">
	AND inv.AWB_NO = #awbNo#
	AND inv.AWB_DATE = #awbDate#
	</isNotEmpty>
	<isNotEmpty property="uldKey">
	AND inv.uld_key=#uldKey#
	</isNotEmpty>
	<isNotEmpty property="module">
	<isNotEqual property="module" compareValue="All">
	<isNotEqual property="module" compareValue="No Module">
	AND EXPOPR.FLT_MODULE1 = #module#
	</isNotEqual>
	</isNotEqual>
	<isEqual property="module" compareValue="No Module">
	AND EXISTS (SELECT NULL FROM AWB_INVENTORY WHERE AWB_NO=AWB.AWB_NO AND AWB_DATE=AWB.AWB_DATE AND FLT_KEY IS NULL AND FLT_DATE IS NULL)
	</isEqual>
	</isNotEmpty>
	AND (AWB.spl_code1 in <iterate property="sch" open="(" close=")" conjunction=",">#sch[]#</iterate>
     OR AWB.spl_code2 in <iterate property="sch" open="(" close=")" conjunction=",">#sch[]#</iterate>
     OR AWB.spl_code3 in <iterate property="sch" open="(" close=")" conjunction=",">#sch[]#</iterate>
     OR AWB.spl_code4 in <iterate property="sch" open="(" close=")" conjunction=",">#sch[]#</iterate>
     OR AWB.spl_code5 in <iterate property="sch" open="(" close=")" conjunction=",">#sch[]#</iterate>
     OR AWB.spl_code6 in <iterate property="sch" open="(" close=")" conjunction=",">#sch[]#</iterate>
     OR AWB.spl_code7 in <iterate property="sch" open="(" close=")" conjunction=",">#sch[]#</iterate>
     OR AWB.spl_code8 in <iterate property="sch" open="(" close=")" conjunction=",">#sch[]#</iterate>
     OR AWB.spl_code9 in <iterate property="sch" open="(" close=")" conjunction=",">#sch[]#</iterate>)
     <![CDATA[
     UNION
	SELECT inv.AWB_NO AS awbNo,
    TO_CHAR(inv.AWB_DATE,'DDMONYY') AS awbDate,
    inv.uld_key AS uldKey,
    INV.loc_code AS locn,
    setup.temp_range_from||DECODE(setup.temp_range_from,'','','NULL','','C')||DECODE(setup.temp_range_from,'','',NULL,'','-')||setup.temp_range_to||DECODE(setup.temp_range_to,'','','NULL','','C') AS tempRange,
    setup.battery_range_from||DECODE(setup.battery_range_to,'','',NULL,'','-')||setup.battery_range_to||DECODE(setup.battery_range_from,'','','NULL','',BATTERY_LVL)                     AS batteryRange,
    setup.airln_rmk AS airLineRmk,
	  FUN_GET_ULD_PKG_TYPE(inv.ULD_KEY) AS shpType,
    NVL(expopr.CARR_CODE,AWB.CARR_CODE) AS carrier,
    expopr.CGO_ACFT_TYPE AS acftType,
    ((SELECT STRAGG(STRINGDELIM(CODE,',')) FROM V_EXP_ULD_SHC WHERE ULD_KEY = inv.uld_key )) as shcs,
    AWB.AWB_TYPE AS awbType,
    (SELECT TO_CHAR(MAX(CR_DATE),'DDMONYY HH24:MI') FROM SPL_CHECK_DATA WHERE AWB_NO=inv.AWB_NO AND AWB_DATE=inv.AWB_DATE AND ULD_KEY=inv.uld_key AND NVL(IS_OFFLOAD,'N')='Y') AS lastTime,
    'EXPOFFLD' as recType
		FROM
		AWB_INVENTORY inv 
    JOIN ULD_INVENTORY ULD ON NVL(inv.uld_key,'*') = NVL(ULD.ULD_KEY,'*')
    JOIN AWB AWB ON  AWB.AWB_NO = INV.AWB_NO AND AWB.AWB_DATE  = INV.AWB_DATE
    LEFT JOIN EXP_PMANIFEST_AWB PMAN ON PMAN.AWB_NO=AWB.AWB_NO AND PMAN.AWB_DATE=AWB.AWB_DATE
    LEFT JOIN FLT_OPR EXPOPR ON EXPOPR.FLT_KEY=PMAN.FLT_KEY AND EXPOPR.SCH_DATE=PMAN.FLT_DATE AND EXPOPR.FLT_TYPE='D'
    LEFT JOIN AWB_TEMP_VOLTAGE_SETUP SETUP ON SETUP.AWB_NO = AWB.AWB_NO AND SETUP.AWB_DATE = AWB.AWB_DATE
		WHERE (NVL(uld.PPK_IND,'N') = 'Y' OR NVL(uld.MIX_PPK_IND,'N') = 'Y')
		AND (inv.RTN_NO IS NULL OR inv.RTN_NO not in (select rtn_no from exp_rtn_hd where NVL(DEL_YN,'N') = 'N'))
		AND inv.LOCN_PCS>0 AND inv.uld_key is not null
    AND EXISTS (SELECT NULL FROM EXP_OFFLOAD_ULD_AWB ULDAWB WHERE ULDAWB.AWB_NO=INV.AWB_NO AND ULDAWB.AWB_DATE=INV.AWB_DATE AND NVL(CONFIRMED_YN,'N')='Y')
    AND EXISTS (SELECT NULL FROM SPL_CARGO_MILESTONE SPL where SPL.SLA_STATUS IN ('FAIL','PASS','FPASS') and SPL.AWB_NO = AWB.AWB_NO AND SPL.AWB_DATE = AWB.AWB_DATE
                AND SPL.ULD_KEY = inv.ULD_KEY and NVL(OFFLOAD_IND,'N') = 'N' and (MILESTONE = 'A-SPECIAL-CHECK' OR MILESTONE = 'D-SPECIAL-CHECK')
                UNION
                SELECT NULL FROM V_DDT_DTL  WHERE TRF_TYPE IN ('TT','IF') AND  AWB_NO = AWB.AWB_NO AND AWB_DATE = AWB.AWB_DATE AND ULD_KEY = inv.ULD_KEY
                )
    AND AWB.CR_DATE > TO_DATE((SELECT RULE_VALUE FROM CMSRULES WHERE rule_code='SPL_CHECK_CUT_OFF_DATE'),'DDMONYY')
    ]]>
    <isNotEmpty property="awbNo">
	AND inv.AWB_NO = #awbNo#
	AND inv.AWB_DATE = #awbDate#
	</isNotEmpty>
	<isNotEmpty property="uldKey">
	AND inv.uld_key=#uldKey#
	</isNotEmpty>
	<isNotEmpty property="module">
	<isNotEqual property="module" compareValue="All">
	<isNotEqual property="module" compareValue="No Module">
	AND EXPOPR.FLT_MODULE1 = #module#
	</isNotEqual>
	</isNotEqual>
	<isEqual property="module" compareValue="No Module">
	AND EXISTS (SELECT NULL FROM AWB_INVENTORY WHERE AWB_NO=AWB.AWB_NO AND AWB_DATE=AWB.AWB_DATE AND FLT_KEY IS NULL AND FLT_DATE IS NULL)
	</isEqual>
	</isNotEmpty>
	AND (AWB.spl_code1 in <iterate property="sch" open="(" close=")" conjunction=",">#sch[]#</iterate>
     OR AWB.spl_code2 in <iterate property="sch" open="(" close=")" conjunction=",">#sch[]#</iterate>
     OR AWB.spl_code3 in <iterate property="sch" open="(" close=")" conjunction=",">#sch[]#</iterate>
     OR AWB.spl_code4 in <iterate property="sch" open="(" close=")" conjunction=",">#sch[]#</iterate>
     OR AWB.spl_code5 in <iterate property="sch" open="(" close=")" conjunction=",">#sch[]#</iterate>
     OR AWB.spl_code6 in <iterate property="sch" open="(" close=")" conjunction=",">#sch[]#</iterate>
     OR AWB.spl_code7 in <iterate property="sch" open="(" close=")" conjunction=",">#sch[]#</iterate>
     OR AWB.spl_code8 in <iterate property="sch" open="(" close=")" conjunction=",">#sch[]#</iterate>
     OR AWB.spl_code9 in <iterate property="sch" open="(" close=")" conjunction=",">#sch[]#</iterate>)
   	</select>
   	<select id="getSplCheckLiveAnimalsDtls" parameterClass="cargo.cms.extsvc.bo.RclBO" resultClass="cargo.cms.extsvc.bo.RclBO">
   	<![CDATA[
   	SELECT AWB.AWB_NO AS awbNo,
TO_CHAR(AWB.AWB_DATE,'DDMONYY') AS awbDate,
'XXXXXXXXXX' AS uldKey,
(SELECT STRAGG(STRINGDELIM(LOC_CODE, ',')) FROM(
    SELECT LOC_CODE FROM AWB_INVENTORY WHERE AWB_NO=A.AWB_NO AND AWB_DATE=A.AWB_DATE)) AS locn,
    setup.airln_rmk AS airLineRmk,
	  'LOOSE' AS shpType,
    AWB.CARR_CODE AS carrier,
    (decode(AWB.spl_code1, null, '', AWB.spl_code1 || ',')
               || decode(AWB.spl_code2, null, '', AWB.spl_code2 || ',')
               || decode(AWB.spl_code3, null, '', AWB.spl_code3 || ',')
               || decode(AWB.spl_code4, null, '', AWB.spl_code4 || ',')
               || decode(AWB.spl_code5, null, '', AWB.spl_code5 || ',')
               || decode(AWB.spl_code6, null, '', AWB.spl_code6 || ',')
               || decode(AWB.spl_code7, null, '', AWB.spl_code7 || ',')
               || decode(AWB.spl_code8, null, '', AWB.spl_code8 || ',')
               || decode(AWB.spl_code9, null, '', AWB.spl_code9)
                  ) as shcs,
    AWB.AWB_TYPE AS awbType,
    'IMPBULK' as recType,
    (SELECT TO_CHAR(MAX(CR_DATE),'DDMONYY HH24:MI') FROM SPL_CHECK_DATA WHERE AWB_NO=AWB.AWB_NO AND AWB_DATE=AWB.AWB_DATE AND ULD_KEY='XXXXXXXXXX' AND NVL(IS_OFFLOAD,'N')='N') AS lastTime
    FROM (
SELECT
    CARSHP.AWB_NO AS AWB_NO,
    TO_CHAR(CARSHP.AWB_DATE,'DDMONYY') AS AWB_DATE
    FROM
		IMP_CAR_SHP CARSHP
    JOIN AWB AWB ON  AWB.AWB_NO = CARSHP.AWB_NO AND AWB.AWB_DATE  = CARSHP.AWB_DATE
    JOIN AWB_INVENTORY INV ON INV.AWB_NO = AWB.AWB_NO AND INV.AWB_DATE  = AWB.AWB_DATE AND LOCN_PCS>0
    LEFT JOIN FLT_OPR IMPOPR ON IMPOPR.FLT_KEY=CARSHP.FLT_KEY AND IMPOPR.SCH_DATE=CARSHP.FLT_DATE AND IMPOPR.FLT_TYPE='A'
    WHERE 1=1 
    AND AWB.CR_DATE > TO_DATE((SELECT RULE_VALUE FROM CMSRULES WHERE rule_code='SPL_CHECK_CUT_OFF_DATE'),'DDMONYY')
    ]]>
    <isNotEmpty property="awbNo">
	AND AWB.AWB_NO = #awbNo#
	AND AWB.AWB_DATE = #awbDate#
	</isNotEmpty>
	<isNotEmpty property="module">
	<isNotEqual property="module" compareValue="All">
	<isNotEqual property="module" compareValue="No Module">
	AND IMPOPR.FLT_MODULE1 = #module#
	</isNotEqual>
	</isNotEqual>
	<isEqual property="module" compareValue="No Module">
	AND EXISTS (SELECT NULL FROM AWB_INVENTORY WHERE AWB_NO=AWB.AWB_NO AND AWB_DATE=AWB.AWB_DATE AND FLT_KEY IS NULL AND FLT_DATE IS NULL)
	</isEqual>
	</isNotEmpty>
	AND (AWB.spl_code1 in <iterate property="sch" open="(" close=")" conjunction=",">#sch[]#</iterate>
     OR AWB.spl_code2 in <iterate property="sch" open="(" close=")" conjunction=",">#sch[]#</iterate>
     OR AWB.spl_code3 in <iterate property="sch" open="(" close=")" conjunction=",">#sch[]#</iterate>
     OR AWB.spl_code4 in <iterate property="sch" open="(" close=")" conjunction=",">#sch[]#</iterate>
     OR AWB.spl_code5 in <iterate property="sch" open="(" close=")" conjunction=",">#sch[]#</iterate>
     OR AWB.spl_code6 in <iterate property="sch" open="(" close=")" conjunction=",">#sch[]#</iterate>
     OR AWB.spl_code7 in <iterate property="sch" open="(" close=")" conjunction=",">#sch[]#</iterate>
     OR AWB.spl_code8 in <iterate property="sch" open="(" close=")" conjunction=",">#sch[]#</iterate>
     OR AWB.spl_code9 in <iterate property="sch" open="(" close=")" conjunction=",">#sch[]#</iterate>)
     <![CDATA[
     GROUP BY CARSHP.AWB_NO,CARSHP.AWB_DATE) A
     JOIN AWB AWB ON  AWB.AWB_NO = A.AWB_NO AND AWB.AWB_DATE  = A.AWB_DATE
     LEFT JOIN AWB_TEMP_VOLTAGE_SETUP SETUP ON SETUP.AWB_NO = A.AWB_NO AND SETUP.AWB_DATE = A.AWB_DATE
     UNION
SELECT AWB.AWB_NO AS awbNo,
TO_CHAR(AWB.AWB_DATE,'DDMONYY') AS awbDate,
'XXXXXXXXXX' AS uldKey,
(SELECT STRAGG(STRINGDELIM(LOC_CODE, ',')) FROM(
    SELECT LOC_CODE FROM AWB_INVENTORY WHERE AWB_NO=A.AWB_NO AND AWB_DATE=A.AWB_DATE)) AS locn,
    setup.airln_rmk AS airLineRmk,
	  'LOOSE' AS shpType,
    AWB.CARR_CODE AS carrier,
    (decode(AWB.spl_code1, null, '', AWB.spl_code1 || ',')
               || decode(AWB.spl_code2, null, '', AWB.spl_code2 || ',')
               || decode(AWB.spl_code3, null, '', AWB.spl_code3 || ',')
               || decode(AWB.spl_code4, null, '', AWB.spl_code4 || ',')
               || decode(AWB.spl_code5, null, '', AWB.spl_code5 || ',')
               || decode(AWB.spl_code6, null, '', AWB.spl_code6 || ',')
               || decode(AWB.spl_code7, null, '', AWB.spl_code7 || ',')
               || decode(AWB.spl_code8, null, '', AWB.spl_code8 || ',')
               || decode(AWB.spl_code9, null, '', AWB.spl_code9)
                  ) as shcs,
    AWB.AWB_TYPE AS awbType,
    'EXPBULK' as recType,
    (SELECT TO_CHAR(MAX(CR_DATE),'DDMONYY HH24:MI') FROM SPL_CHECK_DATA WHERE AWB_NO=AWB.AWB_NO AND AWB_DATE=AWB.AWB_DATE AND ULD_KEY='XXXXXXXXXX' AND NVL(IS_OFFLOAD,'N')='N') AS lastTime
     FROM (SELECT 
AWB.AWB_NO,
AWB.AWB_DATE
FROM 
EXP_RCL_HD HD 
JOIN AWB AWB ON  AWB.AWB_NO = HD.AWB_NO AND AWB.AWB_DATE  = HD.AWB_DATE
LEFT JOIN EXP_PMANIFEST_AWB PMAN ON PMAN.AWB_NO=AWB.AWB_NO AND PMAN.AWB_DATE=AWB.AWB_DATE
LEFT JOIN EXP_PMANIFEST_ULD_AWB ULDAWB ON ULDAWB.AWB_NO=AWB.AWB_NO AND ULDAWB.AWB_DATE=AWB.AWB_DATE
LEFT JOIN FLT_OPR EXPOPR ON EXPOPR.FLT_KEY=PMAN.FLT_KEY AND EXPOPR.SCH_DATE=PMAN.FLT_DATE AND EXPOPR.FLT_TYPE='D'
WHERE HD.PPK_TYPE='B' AND AWB.AWB_TYPE='E'
AND EXISTS (SELECT NULL FROM AWB_INVENTORY INV WHERE INV.AWB_NO = HD.AWB_NO AND INV.AWB_DATE  = HD.AWB_DATE)
AND NOT EXISTS (SELECT NULL FROM SPL_CARGO_MILESTONE SPL where SLA_STATUS IN ('FAIL','PASS','FPASS') and SPL.AWB_NO = AWB.AWB_NO AND SPL.AWB_DATE = AWB.AWB_DATE  
    AND SPL.ULD_KEY = 'XXXXXXXXXX' AND NVL(OFFLOAD_IND,'N') = 'N' and (MILESTONE = 'A-SPECIAL-CHECK' OR MILESTONE = 'D-SPECIAL-CHECK')
    UNION
    SELECT NULL FROM V_DDT_DTL  where (TRF_TYPE IN ('TT','IF') OR SHP_TRF_TYPE IN ('TT','IF') ) AND  AWB_NO = AWB.AWB_NO AND AWB_DATE = AWB.AWB_DATE)
AND NOT EXISTS (SELECT NULL FROM EXP_OFFLOAD_ULD_AWB ULDAWB WHERE ULDAWB.AWB_NO=AWB.AWB_NO AND ULDAWB.AWB_DATE=AWB.AWB_DATE AND NVL(CONFIRMED_YN,'N')='Y')
AND AWB.CR_DATE > TO_DATE((SELECT RULE_VALUE FROM CMSRULES WHERE rule_code='SPL_CHECK_CUT_OFF_DATE'),'DDMONYY')
]]>
    <isNotEmpty property="awbNo">
	AND AWB.AWB_NO = #awbNo#
	AND AWB.AWB_DATE = #awbDate#
	</isNotEmpty>
	<isNotEmpty property="module">
	<isNotEqual property="module" compareValue="All">
	<isNotEqual property="module" compareValue="No Module">
	AND EXPOPR.FLT_MODULE1 = #module#
	</isNotEqual>
	</isNotEqual>
	<isEqual property="module" compareValue="No Module">
	AND EXISTS (SELECT NULL FROM AWB_INVENTORY WHERE AWB_NO=AWB.AWB_NO AND AWB_DATE=AWB.AWB_DATE AND FLT_KEY IS NULL AND FLT_DATE IS NULL)
	</isEqual>
	</isNotEmpty>
	AND (AWB.spl_code1 in <iterate property="sch" open="(" close=")" conjunction=",">#sch[]#</iterate>
     OR AWB.spl_code2 in <iterate property="sch" open="(" close=")" conjunction=",">#sch[]#</iterate>
     OR AWB.spl_code3 in <iterate property="sch" open="(" close=")" conjunction=",">#sch[]#</iterate>
     OR AWB.spl_code4 in <iterate property="sch" open="(" close=")" conjunction=",">#sch[]#</iterate>
     OR AWB.spl_code5 in <iterate property="sch" open="(" close=")" conjunction=",">#sch[]#</iterate>
     OR AWB.spl_code6 in <iterate property="sch" open="(" close=")" conjunction=",">#sch[]#</iterate>
     OR AWB.spl_code7 in <iterate property="sch" open="(" close=")" conjunction=",">#sch[]#</iterate>
     OR AWB.spl_code8 in <iterate property="sch" open="(" close=")" conjunction=",">#sch[]#</iterate>
     OR AWB.spl_code9 in <iterate property="sch" open="(" close=")" conjunction=",">#sch[]#</iterate>)
     <![CDATA[
GROUP BY AWB.AWB_NO,AWB.AWB_DATE) A
JOIN AWB AWB ON  AWB.AWB_NO = A.AWB_NO AND AWB.AWB_DATE  = A.AWB_DATE
LEFT JOIN AWB_TEMP_VOLTAGE_SETUP SETUP ON SETUP.AWB_NO = A.AWB_NO AND SETUP.AWB_DATE = A.AWB_DATE
UNION
SELECT AWB.AWB_NO AS awbNo,
TO_CHAR(AWB.AWB_DATE,'DDMONYY') AS awbDate,
'XXXXXXXXXX' AS uldKey,
(SELECT STRAGG(STRINGDELIM(LOC_CODE, ',')) FROM(
    SELECT LOC_CODE FROM AWB_INVENTORY WHERE AWB_NO=A.AWB_NO AND AWB_DATE=A.AWB_DATE)) AS locn,
    setup.airln_rmk AS airLineRmk,
	  'LOOSE' AS shpType,
    AWB.CARR_CODE AS carrier,
    (decode(AWB.spl_code1, null, '', AWB.spl_code1 || ',')
               || decode(AWB.spl_code2, null, '', AWB.spl_code2 || ',')
               || decode(AWB.spl_code3, null, '', AWB.spl_code3 || ',')
               || decode(AWB.spl_code4, null, '', AWB.spl_code4 || ',')
               || decode(AWB.spl_code5, null, '', AWB.spl_code5 || ',')
               || decode(AWB.spl_code6, null, '', AWB.spl_code6 || ',')
               || decode(AWB.spl_code7, null, '', AWB.spl_code7 || ',')
               || decode(AWB.spl_code8, null, '', AWB.spl_code8 || ',')
               || decode(AWB.spl_code9, null, '', AWB.spl_code9)
                  ) as shcs,
    AWB.AWB_TYPE AS awbType,
    'EXPOFFLD' as recType,
    (SELECT TO_CHAR(MAX(CR_DATE),'DDMONYY HH24:MI') FROM SPL_CHECK_DATA WHERE AWB_NO=AWB.AWB_NO AND AWB_DATE=AWB.AWB_DATE AND ULD_KEY='XXXXXXXXXX' AND NVL(IS_OFFLOAD,'N')='Y') AS lastTime
     FROM (SELECT 
AWB.AWB_NO,
AWB.AWB_DATE
FROM 
EXP_RCL_HD HD 
JOIN AWB AWB ON  AWB.AWB_NO = HD.AWB_NO AND AWB.AWB_DATE  = HD.AWB_DATE
LEFT JOIN EXP_PMANIFEST_AWB PMAN ON PMAN.AWB_NO=AWB.AWB_NO AND PMAN.AWB_DATE=AWB.AWB_DATE
LEFT JOIN EXP_PMANIFEST_ULD_AWB ULDAWB ON ULDAWB.AWB_NO=AWB.AWB_NO AND ULDAWB.AWB_DATE=AWB.AWB_DATE
LEFT JOIN FLT_OPR EXPOPR ON EXPOPR.FLT_KEY=PMAN.FLT_KEY AND EXPOPR.SCH_DATE=PMAN.FLT_DATE AND EXPOPR.FLT_TYPE='D'
WHERE HD.PPK_TYPE='B' AND AWB.AWB_TYPE='E'
AND EXISTS (SELECT NULL FROM AWB_INVENTORY INV WHERE INV.AWB_NO = HD.AWB_NO AND INV.AWB_DATE  = HD.AWB_DATE)
AND EXISTS (SELECT NULL FROM SPL_CARGO_MILESTONE SPL where SLA_STATUS IN ('FAIL','PASS','FPASS') and SPL.AWB_NO = AWB.AWB_NO AND SPL.AWB_DATE = AWB.AWB_DATE  
    AND SPL.ULD_KEY = 'XXXXXXXXXX' AND NVL(OFFLOAD_IND,'N') = 'N' and (MILESTONE = 'A-SPECIAL-CHECK' OR MILESTONE = 'D-SPECIAL-CHECK')
    UNION
    SELECT NULL FROM V_DDT_DTL  where (TRF_TYPE IN ('TT','IF') OR SHP_TRF_TYPE IN ('TT','IF') ) AND  AWB_NO = AWB.AWB_NO AND AWB_DATE = AWB.AWB_DATE)
AND EXISTS (SELECT NULL FROM EXP_OFFLOAD_ULD_AWB ULDAWB WHERE ULDAWB.AWB_NO=AWB.AWB_NO AND ULDAWB.AWB_DATE=AWB.AWB_DATE AND NVL(CONFIRMED_YN,'N')='Y')
AND NOT EXISTS (SELECT NULL FROM EXP_RCL_HD HD 
LEFT JOIN EXP_PMANIFEST_ULD_AWB ULDAWB ON ULDAWB.AWB_NO=AWB.AWB_NO AND ULDAWB.AWB_DATE=AWB.AWB_DATE
WHERE HD.PPK_TYPE='B' AND AWB.AWB_TYPE='E' 
AND EXISTS (SELECT NULL FROM AWB_INVENTORY INV WHERE INV.AWB_NO = HD.AWB_NO AND INV.AWB_DATE  = HD.AWB_DATE)
AND NOT EXISTS (SELECT NULL FROM SPL_CARGO_MILESTONE SPL where SLA_STATUS IN ('FAIL','PASS','FPASS') and SPL.AWB_NO = AWB.AWB_NO AND SPL.AWB_DATE = AWB.AWB_DATE  
    AND SPL.ULD_KEY = 'XXXXXXXXXX' AND NVL(OFFLOAD_IND,'N') = 'N' and (MILESTONE = 'A-SPECIAL-CHECK' OR MILESTONE = 'D-SPECIAL-CHECK')
    UNION
    SELECT NULL FROM V_DDT_DTL  where (TRF_TYPE IN ('TT','IF') OR SHP_TRF_TYPE IN ('TT','IF') ) AND  AWB_NO = AWB.AWB_NO AND AWB_DATE = AWB.AWB_DATE)
AND NOT EXISTS (SELECT NULL FROM EXP_OFFLOAD_ULD_AWB ULDAWB WHERE ULDAWB.AWB_NO=AWB.AWB_NO AND ULDAWB.AWB_DATE=AWB.AWB_DATE AND NVL(CONFIRMED_YN,'N')='Y')
AND HD.AWB_NO=AWB.AWB_NO AND HD.AWB_DATE = AWB.AWB_DATE)
AND AWB.CR_DATE > TO_DATE((SELECT RULE_VALUE FROM CMSRULES WHERE rule_code='SPL_CHECK_CUT_OFF_DATE'),'DDMONYY')
]]>
    <isNotEmpty property="awbNo">
	AND AWB.AWB_NO = #awbNo#
	AND AWB.AWB_DATE = #awbDate#
	</isNotEmpty>
	<isNotEmpty property="module">
	<isNotEqual property="module" compareValue="All">
	<isNotEqual property="module" compareValue="No Module">
	AND EXPOPR.FLT_MODULE1 = #module#
	</isNotEqual>
	</isNotEqual>
	<isEqual property="module" compareValue="No Module">
	AND EXISTS (SELECT NULL FROM AWB_INVENTORY WHERE AWB_NO=AWB.AWB_NO AND AWB_DATE=AWB.AWB_DATE AND FLT_KEY IS NULL AND FLT_DATE IS NULL)
	</isEqual>
	</isNotEmpty>
	AND (AWB.spl_code1 in <iterate property="sch" open="(" close=")" conjunction=",">#sch[]#</iterate>
     OR AWB.spl_code2 in <iterate property="sch" open="(" close=")" conjunction=",">#sch[]#</iterate>
     OR AWB.spl_code3 in <iterate property="sch" open="(" close=")" conjunction=",">#sch[]#</iterate>
     OR AWB.spl_code4 in <iterate property="sch" open="(" close=")" conjunction=",">#sch[]#</iterate>
     OR AWB.spl_code5 in <iterate property="sch" open="(" close=")" conjunction=",">#sch[]#</iterate>
     OR AWB.spl_code6 in <iterate property="sch" open="(" close=")" conjunction=",">#sch[]#</iterate>
     OR AWB.spl_code7 in <iterate property="sch" open="(" close=")" conjunction=",">#sch[]#</iterate>
     OR AWB.spl_code8 in <iterate property="sch" open="(" close=")" conjunction=",">#sch[]#</iterate>
     OR AWB.spl_code9 in <iterate property="sch" open="(" close=")" conjunction=",">#sch[]#</iterate>)
GROUP BY AWB.AWB_NO,AWB.AWB_DATE) A
JOIN AWB AWB ON  AWB.AWB_NO = A.AWB_NO AND AWB.AWB_DATE  = A.AWB_DATE
LEFT JOIN AWB_TEMP_VOLTAGE_SETUP SETUP ON SETUP.AWB_NO = A.AWB_NO AND SETUP.AWB_DATE = A.AWB_DATE
	</select>
	<select id="checkCycleoftheRecord" parameterClass="map" resultClass="java.lang.String">
	<![CDATA[
	SELECT TO_CHAR(TO_DATE(#lastTime#,'DDMONYY HH24:MI')+(TO_NUMBER(#interval#)/(60*24)),'DDMONYY HH24:MI') FROM DUAL WHERE SYSDATE BETWEEN TO_DATE(#lastTime#,'DDMONYY HH24:MI') AND (TO_DATE(#lastTime#,'DDMONYY HH24:MI')+(TO_NUMBER(#interval#)/(60*24)))
	]]>
	</select>
	<select id="checkLastTimeisValidorNot" parameterClass="map" resultClass="java.lang.Integer">
	<![CDATA[
	SELECT COUNT(1) FROM DUAL WHERE (TO_DATE(#lastTime#,'DDMONYY HH24:MI') - TO_DATE(#maxLastTime#,'DDMONYY HH24:MI')) > 0
	]]>
	</select>
	<select id="findNextCycleoftheRecord" parameterClass="map" resultClass="java.lang.String">
	SELECT TO_CHAR(TO_DATE(#lastTime#,'DDMONYY HH24:MI')+(TO_NUMBER(#interval#)/(60*24)),'DDMONYY HH24:MI') FROM DUAL
	</select>
	<select id="checktemperatureinrangeconfig" parameterClass="cargo.cms.extsvc.bo.RclBO" resultClass="java.lang.Integer">
	SELECT COUNT(1) FROM AWB_TEMP_VOLTAGE_SETUP WHERE AWB_NO=#awbNo# AND AWB_DATE=#awbDate# AND temp_range_from IS NOT NULL AND temp_range_to IS NOT NULL
	</select>
	<select id="checkbatteryinrangeconfig" parameterClass="cargo.cms.extsvc.bo.RclBO" resultClass="java.lang.Integer">
	SELECT COUNT(1) FROM AWB_TEMP_VOLTAGE_SETUP WHERE AWB_NO=#awbNo# AND AWB_DATE=#awbDate# AND battery_range_from IS NOT NULL AND battery_range_to IS NOT NULL
	</select>
	<select id="checktemperatureinrange" parameterClass="cargo.cms.extsvc.bo.RclBO" resultClass="java.lang.Integer">
	SELECT COUNT(1) FROM AWB_TEMP_VOLTAGE_SETUP WHERE AWB_NO=#awbNo# AND AWB_DATE=#awbDate# AND TO_NUMBER(#tempVal#) BETWEEN temp_range_from AND temp_range_to
	</select>
	<select id="checkbatteryinrange" parameterClass="cargo.cms.extsvc.bo.RclBO" resultClass="java.lang.Integer">
	SELECT COUNT(1) FROM AWB_TEMP_VOLTAGE_SETUP WHERE AWB_NO=#awbNo# AND AWB_DATE=#awbDate# AND TO_NUMBER(#batteryVal#) BETWEEN battery_range_from AND battery_range_to
	</select>
   <insert id="SaveTemparatureandVoltageDtls" parameterClass="cargo.cms.extsvc.bo.RclBO" >
   INSERT INTO SPL_CHECK_DATA (SEQ_NO,AWB_NO,AWB_DATE,ULD_KEY,DATE_TIME,ACTION_TIME,TEMPARATURE,BATTERY,IMG_TRANSACTION_ID,CYCLE,TEMP_RANGE_FROM,TEMP_RANGE_TO,BATTERY_RANGE_FROM,BATTERY_RANGE_TO,IS_OFFLOAD,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,IS_TEMP,TEMPARATURE_RANGE_IND,BATTERY_RANGE_IND,DATE_TIME_IND,ACTION_TIME_IND,INTERVAL,FIRST_ACTION_TIME,BATTERY_LVL)
   VALUES (#seqNo#,#awbNo#,#awbDate#,#uldKey#,SYSDATE,SYSDATE,#tempVal#,#batteryVal#,#imgTransactionId#,#cycle#,#tempRangeFrom#,#tempRangeTo#,#batteryRangeFrom#,#batteryRangeTo#,#isOffload#,#userID#,SYSDATE,#userID#,SYSDATE,#isTemp#,#isTempRange#,#isBatteryRange#,#isDateAction#,#isDateAction#,#interval#,NVL(TO_DATE(#firstActTime#,'DDMONYY HH24:MI'),SYSDATE),#batteryLvl#)
   </insert>
   <update id="UpdateTemparatureandVoltageDtls" parameterClass="cargo.cms.extsvc.bo.RclBO">
	UPDATE SPL_CHECK_DATA SET ACTION_TIME=SYSDATE,TEMPARATURE=#tempVal#,BATTERY=#batteryVal#,IMG_TRANSACTION_ID=#imgTransactionId#,LM_USER_ID=#userID#,LM_DATE=SYSDATE,LOC_CODE=DECODE((SELECT LOC_CODE FROM AWB_INVENTORY WHERE ULD_KEY=#uldKey# AND AWB_NO=#awbNo# AND AWB_DATE=#awbDate# AND ROWNUM=1),'',LOC_CODE,(SELECT LOC_CODE FROM AWB_INVENTORY WHERE ULD_KEY=#uldKey# AND AWB_NO=#awbNo# AND AWB_DATE=#awbDate# AND ROWNUM=1)) WHERE AWB_NO=#awbNo# AND AWB_DATE=#awbDate# AND ULD_KEY=#uldKey#
	</update>
	<insert id="SaveLiveAnimalDtls" parameterClass="cargo.cms.extsvc.bo.RclBO" >
   INSERT INTO SPL_CHECK_DATA (SEQ_NO,AWB_NO,AWB_DATE,ULD_KEY,DATE_TIME,ACTION_TIME,IMG_TRANSACTION_ID,GOOD_CONDITION,ADD_WATER,CYCLE,IS_OFFLOAD,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,DATE_TIME_IND,ACTION_TIME_IND,INTERVAL,FIRST_ACTION_TIME)
   VALUES (#seqNo#,#awbNo#,#awbDate#,#uldKey#,SYSDATE,SYSDATE,#imgTransactionId#,#goodCond#,#addWater#,#cycle#,#isOffload#,#userID#,SYSDATE,#userID#,SYSDATE,#isDateAction#,#isDateAction#,#interval#,NVL(TO_DATE(#firstActTime#,'DDMONYY HH24:MI'),SYSDATE))
   </insert>
   <update id="UpdateLiveAnimalDtls" parameterClass="cargo.cms.extsvc.bo.RclBO">
	UPDATE SPL_CHECK_DATA SET ACTION_TIME=SYSDATE,GOOD_CONDITION=#goodCond#,ADD_WATER=#addWater#,IMG_TRANSACTION_ID=#imgTransactionId#,LM_USER_ID=#userID#,LM_DATE=SYSDATE,LOC_CODE=DECODE((SELECT LOC_CODE FROM AWB_INVENTORY WHERE ULD_KEY=#uldKey# AND AWB_NO=#awbNo# AND AWB_DATE=#awbDate# AND ROWNUM=1),'',LOC_CODE,(SELECT LOC_CODE FROM AWB_INVENTORY WHERE ULD_KEY=#uldKey# AND AWB_NO=#awbNo# AND AWB_DATE=#awbDate# AND ROWNUM=1)) WHERE AWB_NO=#awbNo# AND AWB_DATE=#awbDate# AND ULD_KEY=#uldKey#
	</update>
	<select id="getSplCheckImageTransactionID_Mobile" parameterClass="java.lang.String" resultClass="java.lang.String">
	SELECT MAX(TRANS_NAME) FROM IMAGE_STORE WHERE TRANS_NO= #PARAM# AND TRANS_TYPE='Special Check'
	</select>
	<select id="getSplCheckImageDetails_Mobile" parameterClass="cargo.cms.extsvc.bo.RclBO" resultClass="java.lang.String">
	SELECT SEQ_NO FROM SPL_CHECK_DATA WHERE AWB_NO=#awbNo# AND ULD_KEY=#uldKey# AND AWB_DATE=#awbDate# AND ROWNUM=1
	</select>
	<update id="UpdateImgTransIdinSplCheckDtls" parameterClass="cargo.cms.extsvc.bo.RclBO">
	UPDATE SPL_CHECK_DATA SET IMG_TRANSACTION_ID=#imgTransactionId# WHERE SEQ_NO = #seqNo#
	</update>
	<parameterMap id="checkIntervalConfigforSpecial" class="map" >
		<parameter property="result" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
		<parameter property="mileStone" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>    
		<parameter property="level" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>  
		<parameter property="carrier" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/> 
		<parameter property="offloadInd" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="shc" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>  		
	</parameterMap>

	<procedure id="checkIntervalConfigforSpecialCheck" parameterMap="checkIntervalConfigforSpecial" >
			{? = call PKG_SLA_SPECIAL_MILESTONE.GET_PRIORITY_MILESTN_CONFIG(?,?,?,?,?)}
	</procedure>
	
	<select id="getSecCheckFREVal" parameterClass="map" resultClass="java.lang.Integer">
	<![CDATA[
		SELECT count(1) from(
		SELECT COUNT(1) AS cnt FROM MAST_SEC_CHECK SECCK
		WHERE SECCK.CARR_CODE=#CARRCODE# AND SECCK.PORT = #PORT#
  		AND NVL(SECCK.ACTIVE,'N')='Y'
  		AND NVL(SECCK.FRE_IND,'N') = 'Y'	
		UNION
		SELECT COUNT(1) AS cnt FROM MAST_SEC_CHECK SECCK
		WHERE SECCK.CARR_CODE=#CARRCODE# AND NVL(SECCK.ACTIVE,'N')='Y'
		AND NVL(SECCK.FRE_IND,'N') = 'Y'
		AND NOT EXISTS (SELECT NULL FROM MAST_SEC_CHECK SECCK
		WHERE SECCK.CARR_CODE=#CARRCODE# AND SECCK.PORT = #PORT#)
		AND (SECCK.CTRY_CODE=(SELECT CTRY_CODE FROM MAST_CITY WHERE CODE=#PORT#) or SECCK.CTRY_CODE=#PORT#)
    ) WHERE cnt>0
		]]>
	</select>
<select id="getSecCheckPSRVal" parameterClass="map" resultClass="java.lang.Integer">
		<![CDATA[
		SELECT count(1) from(
		SELECT COUNT(1) AS cnt FROM MAST_SEC_CHECK SECCK
		WHERE SECCK.CARR_CODE=#CARRCODE# AND SECCK.PORT = #PORT#
  		AND NVL(SECCK.ACTIVE,'N')='Y'
  		AND NVL(SECCK.PAX_IND,'N') = 'Y'	
		UNION
		SELECT COUNT(1) AS cnt FROM MAST_SEC_CHECK SECCK
		WHERE SECCK.CARR_CODE=#CARRCODE# AND NVL(SECCK.ACTIVE,'N')='Y'
		AND NVL(SECCK.PAX_IND,'N') = 'Y'
		AND NOT EXISTS (SELECT NULL FROM MAST_SEC_CHECK SECCK
		WHERE SECCK.CARR_CODE=#CARRCODE# AND SECCK.PORT = #PORT#)
		AND (SECCK.CTRY_CODE=(SELECT CTRY_CODE FROM MAST_CITY WHERE CODE=#PORT#) OR SECCK.CTRY_CODE=#PORT#)) WHERE cnt>0
		]]>
	</select>
	<select id="getSecCheckCOMBIVal" parameterClass="map" resultClass="java.lang.Integer">
		<![CDATA[
		SELECT count(1) from(
		SELECT COUNT(1) AS cnt FROM MAST_SEC_CHECK SECCK
		WHERE SECCK.CARR_CODE=#CARRCODE# AND SECCK.PORT = #PORT#
  		AND NVL(SECCK.ACTIVE,'N')='Y'
  		AND NVL(SECCK.COMBI_IND,'N') = 'Y'	
		UNION
		SELECT COUNT(1) AS cnt FROM MAST_SEC_CHECK SECCK
		WHERE SECCK.CARR_CODE=#CARRCODE# AND NVL(SECCK.ACTIVE,'N')='Y'
		AND NVL(SECCK.COMBI_IND,'N') = 'Y'
		AND NOT EXISTS (SELECT NULL FROM MAST_SEC_CHECK SECCK
		WHERE SECCK.CARR_CODE=#CARRCODE# AND SECCK.PORT = #PORT#)
		AND (SECCK.CTRY_CODE=(SELECT CTRY_CODE FROM MAST_CITY WHERE CODE=#PORT#) OR SECCK.CTRY_CODE=#PORT#)) WHERE cnt>0
		]]>
	</select>	
	<select id="getScreeningMethodVal" parameterClass="map" resultClass="java.lang.String">
		SELECT SCREENING_METHOD FROM MAST_SEC_CHECK SECCK
		WHERE SECCK.CARR_CODE=#CARRCODE# AND SECCK.PORT = #PORT#
  		AND NVL(SECCK.ACTIVE,'N')='Y'  		
		UNION
		SELECT SCREENING_METHOD FROM MAST_SEC_CHECK SECCK
		WHERE SECCK.CARR_CODE=#CARRCODE# AND NVL(SECCK.ACTIVE,'N')='Y'
		AND NOT EXISTS (SELECT NULL FROM MAST_SEC_CHECK SECCK
		WHERE SECCK.CARR_CODE=#CARRCODE# AND SECCK.PORT = #PORT#)
		AND SECCK.CTRY_CODE=(SELECT CTRY_CODE FROM MAST_CITY WHERE CODE=#PORT#) 
	</select>
	<select id="getHAWBVerifiedVal" parameterClass="map" resultClass="java.lang.Integer">
	<![CDATA[
		SELECT count(1) from(
		SELECT COUNT(1) AS cnt FROM MAST_SEC_CHECK SECCK
		WHERE SECCK.CARR_CODE=#CARRCODE# AND SECCK.PORT = #PORT#
  		AND NVL(SECCK.ACTIVE,'N')='Y'
  		AND NVL(SECCK.HAWB_IND,'N') = 'Y'
		UNION
		SELECT COUNT(1) AS cnt FROM MAST_SEC_CHECK SECCK
		WHERE SECCK.CARR_CODE=#CARRCODE# AND NVL(SECCK.ACTIVE,'N')='Y'
		AND NVL(SECCK.HAWB_IND,'N') = 'Y'
		AND NOT EXISTS (SELECT NULL FROM MAST_SEC_CHECK SECCK
		WHERE SECCK.CARR_CODE=#CARRCODE# AND SECCK.PORT = #PORT#)
		AND SECCK.CTRY_CODE=(SELECT CTRY_CODE FROM MAST_CITY WHERE CODE=#PORT#)) WHERE cnt>0
		]]>
    </select>
	<select id="getSecCheckVal" parameterClass="map" resultClass="java.lang.Integer">
		<![CDATA[
		SELECT count(1) from(
		SELECT COUNT(1) AS cnt FROM MAST_SEC_CHECK SECCK
		WHERE SECCK.CARR_CODE=#CARRCODE# AND SECCK.PORT = #PORT#
  		AND NVL(SECCK.ACTIVE,'N')='Y'  		
		UNION
		SELECT COUNT(1) AS cnt FROM MAST_SEC_CHECK SECCK
		WHERE SECCK.CARR_CODE=#CARRCODE# AND NVL(SECCK.ACTIVE,'N')='Y'		
		AND NOT EXISTS (SELECT NULL FROM MAST_SEC_CHECK SECCK
		WHERE SECCK.CARR_CODE=#CARRCODE# AND SECCK.PORT = #PORT#)
		AND (SECCK.CTRY_CODE=(SELECT CTRY_CODE FROM MAST_CITY WHERE CODE=#PORT#) OR SECCK.CTRY_CODE=#PORT#)) WHERE cnt>0
		]]>
		</select>
	<select id="getRacsfVal" parameterClass="map" resultClass="java.lang.Integer">
	<![CDATA[
		SELECT COUNT(1) FROM (
		SELECT COUNT(1) AS cnt FROM MAST_RACSF_CONFIG RACSF WHERE RACSF.CARR_CODE=#CARRCODE#
		AND NVL(RACSF.ACTIVE_IND,'N')='Y' AND RACSF.RACSF_CODE = #RACSFCODE#
		AND RACSF.PORT IS NOT NULL AND RACSF.PORT = #PORT# 
      	UNION 
      	SELECT COUNT(1) as cnt FROM MAST_RACSF_CONFIG RACSF WHERE RACSF.CARR_CODE=#CARRCODE#
		AND NVL(RACSF.ACTIVE_IND,'N')='Y' AND RACSF.RACSF_CODE = #RACSFCODE#
    	AND RACSF.CTRY_CODE IS NOT NULL
    	AND NOT EXISTS (SELECT NULL FROM MAST_RACSF_CONFIG RACSF WHERE RACSF.CARR_CODE=#CARRCODE#
		AND RACSF.RACSF_CODE = #RACSFCODE#
		AND RACSF.PORT IS NOT NULL AND RACSF.PORT = #PORT# )
		AND (RACSF.CTRY_CODE IN (SELECT CTRY_CODE
    	FROM MAST_ARPT A, MAST_CITY B
    	WHERE A.CITY_CODE=B.CODE
    	AND A.CODE       = #PORT#) OR RACSF.CTRY_CODE=#PORT#)) WHERE cnt > 0
    	]]>
	</select>	
	<select id="getCarrAgentCarrierChecking" parameterClass="map"  resultClass="java.lang.Integer">		
		SELECT COUNT(1) FROM CUST_CARR_RA_AGENT AGENT where AGENT.cust_no = #AGENTCODE# 
      AND AGENT.CARR_CODE = #CARRCODE# and nvl(AGENT.active,'N') = 'Y'
		  AND (AGENT.PORT = #PORT# OR AGENT.CTRY_CODE IN (SELECT CTRY_CODE
    	FROM MAST_ARPT A, MAST_CITY B
    	WHERE A.CITY_CODE=B.CODE
    	AND A.CODE       = #PORT#) OR AGENT.CTRY_CODE=#PORT#)
	</select>
	<select id="getRfRAConfig" parameterClass="map" resultClass="java.lang.Integer">
		select count(1) from mast_carrier where NVL(CARR_RF_RA,'N')='Y' AND code=#CARRCODE#
	</select>
	
	<select id="isRacsfActive" parameterClass="map" resultClass="java.lang.Integer">
		select count(1) from MAST_RACSF_CONFIG where RACSF_CODE = #RACSFCODE# and NVL(ACTIVE_IND,'N') = 'Y' and instr(CARR_CODE,#CARRCODE#) &gt; 0
	</select>
	
	<select id="getCarrRf" parameterClass="java.lang.String" resultClass="java.lang.String">
		select carr_rf from exp_pre_rcl_hd where pre_rcl_no=#preRCLNum#
	</select>
	
	<select id="checkUsPort" parameterClass="java.lang.String" resultClass="java.lang.Integer">
			SELECT count(1) as cnt FROM MAST_ARPT A,MAST_CITY B WHERE A.CITY_CODE=B.CODE AND B.CTRY_CODE='US' AND 
			A.CODE in (select awb_dest from exp_pre_rcl_hd where pre_rcl_no=#PRERCLNO# AND screening_option='CTO_SC')
	</select>
	
	<select id="checkUsPortMix" parameterClass="map" resultClass="java.lang.Integer">
			SELECT count(1) as cnt FROM MAST_ARPT A,MAST_CITY B WHERE A.CITY_CODE=B.CODE AND B.CTRY_CODE='US' AND 
			A.CODE in (select brk.dest from exp_pre_rcl_hd hd join exp_pre_rcl_brkdn brk on hd.pre_rcl_no=brk.pre_rcl_no where hd.ppk_type='M' AND hd.screening_option='CTO_SC' and brk.pre_rcl_no=#PRERCLNO# and brk.awb_no=#AWB#)
	</select>
	<select id="getPrerclPPKType" parameterClass="java.lang.String" resultClass="java.lang.String">
	SELECT PPK_TYPE FROM EXP_PRE_RCL_HD WHERE PRE_RCL_NO=#PARAM#
	</select>
	<update id="sqlupdateBsbAwb" parameterClass="map">
		UPDATE AWB SET BSB_IND='Y' WHERE AWB_NO=#AWB# AND AWB_DATE=#AWBDATE#
	</update>
	<select id="checkSubfunctionAccess_mobile" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
	 			SELECT COUNT(1)
				FROM SEC_ROLE_SUB_FUNCTION
				WHERE ROLE_CODE=#userRole# AND
				FUNCTION_CODE = #functionCode# AND
				SUB_FUNCTION_CODE = #subFunctionCode# AND
				ENABLE_YN='Y'
	</select>
	<select id="sqlWarehouseLocationsQuery_mobile" parameterClass="java.lang.String"  resultClass="cargo.cms.extsvc.bo.CaptureULDBO">
	<![CDATA[
	select t1.CODE codeVal, t1.CODE_DESC codeDesc from MAST_WH_LOC t1, mast_wh_group t2
	where t1.wh_group = t2.WH_GROUP 
    and t2.wh_type <> 'MHS'	order by code
	]]>
</select>
	<select id="get_role_by_user_mobile" parameterClass="java.lang.String" resultClass="java.lang.String">
	<![CDATA[
	SELECT ROLE_NAME AS rolename
	FROM SEC_USER_ROLE a,
  	SEC_USER b,
  	sec_role r
	WHERE a.USER_ID     =b.CODE
	AND r.code          = a.role_name
	AND r.role_category = 'I'
	AND UPPER(B.CODE)   =UPPER(#username#)
	AND a.START_DATE < SYSDATE
	AND (a.END_DATE IS NULL
	OR a.END_DATE    > SYSDATE)
	]]>	
 	</select>

 	
 	
	<insert id="saveCargoRecord" parameterClass="cargo.cms.extsvc.bo.ReceiveCargoBO" >
 		INSERT
			INTO EXP_CARGO_RECEIVE_RECORD
			  (
			    TR_NO,
			    AWB_NO,
			    AWB_DATE,
			    LSP_NO,
			    ULD_KEY,
			    LOC_CODE,
			    PCS,
			    NET_WT,
			    TARE_WT,
			    W_SCALE_ID,
			    W_SCALE_WT,
			    GROSS_WT,	
			    NO_OF_LSP,
			    CR_USER_ID,
			    CR_DATE,
			    LM_USER_ID,
			    LM_DATE,
			    PRE_RCL_NO,
			    IMG_TRANS_ID,
			    UN_ELI_NUM,  
				UN_ELM_NUM,        
				MOB_ENDORSE_USER,     
				MOB_ENDORSE_DATE,
				UN_ELI_PCS,
                UN_ELM_PCS,
                TR_TYPE
			  )
			  VALUES
			  (
			    #trNo#,
			    #awbNo#,
			    #awbDate#,
			    #csd#,
			    #uld#,
			    #locCode#,
			    #pcs#,
			    #netWt#,
			    #tareWt#,
			    #locCode#,
			    #wScaleWt#,
				#grossWt#,		
				#noOfLsp#,			   
			    #userId#,
			    SYSDATE,
			    #lmUserId#,
			    SYSDATE,
			    #preRclNum#,
			    #imgTransactionId#,
			    #unELINumber#,
			    #unELMNumber#,
				#endorseUser#,	
			    SYSDATE,
			    #unELIPcs#,
                #unELMPcs#,
                'MECR'
			  )
 	</insert>
 	
<insert id="saveCargoRecordSHC" parameterClass="cargo.cms.extsvc.bo.ReceiveCargoShcList" >
 		Insert into exp_cargo_receive_record_shc (TR_NO,SHC,PCS,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE)
			values (#trNo#,#shc#,#pcs#,#userId#,SYSDATE,#userId#,SYSDATE)
 	</insert>

 	
 		<select id="getReceiveCargoDtls" parameterClass="cargo.cms.extsvc.bo.ReceiveCargoBO" resultClass="cargo.cms.extsvc.bo.ReceiveCargoBO">
	 	SELECT TR_NO                           AS trNo,
	 	  NVL(LSP_NO,ULD_KEY)                  AS csdOrUld,
	 	  LOC_CODE                             AS locCode,	
	 	  NVL(PCS,0)                           AS oldLocnPcs,
		  NVL(PCS,0)                           AS locnPcs,
		  GROSS_WT                             AS locnWt,
		  W_SCALE_WT                           AS totWSWgt,
		  DECODE(MHS_MSG_SENT_DATE,'','N','Y') AS mhsMsgInd
		  FROM EXP_CARGO_RECEIVE_RECORD
	  	  where AWB_NO = #awbNo# AND AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
	  	  AND DECODE(RCL_NO,'','N','Y') = 'N'
	</select>

	<select id="getReceiveCargoInfo" parameterClass="cargo.cms.extsvc.bo.ReceiveCargoBO" resultClass="cargo.cms.extsvc.bo.ReceiveCargoBO">
	 	SELECT TR_NO                           AS trNo,
	 	  NVL(LSP_NO,ULD_KEY)                  AS csdOrUld,
	 	  LOC_CODE                             AS locCode,	
		  NVL(PCS,0)                           AS locnPcs,
		  GROSS_WT                             AS locnWt,
		  W_SCALE_WT                           AS totWSWgt,
		  DECODE(MHS_MSG_SENT_DATE,'','N','Y') AS mhsMsgInd
		  FROM EXP_CARGO_RECEIVE_RECORD
	  	  where TR_NO = #trNo# 
	</select>
	

	<select id="getPreRegisteredAlertForAWB" parameterClass="cargo.cms.extsvc.bo.ReceiveCargoBO" resultClass="cargo.cms.extsvc.bo.ReceiveCargoBO">
	 	SELECT ALERT_MSG as alertMsg, EMAIL_TO as emailTo
				FROM EXP_AWB_ALERT alert
				left join (
				   SELECT awb_no,AWB_DEST,cust_no,SPL_CODE1,SPL_CODE2,SPL_CODE3  FROM EXP_PRE_RCL_HD 
				   WHERE awb_no = #awbNo# and awb_date = to_date(#awbDate#,'DDMONYY') and ppk_type = 'B'
				   and STATUS = 'SUBMITTED' and AWB_DEST = #dest#
				 ) ercl on  1 = 1
				where  EFFECT_UNTIL &gt;= trunc(SYSDATE)
				and ( 
						(alert.DEST is null OR alert.DEST = ercl.AWB_DEST)
						AND ( alert.SPL_CODE1 is null OR alert.SPL_CODE1 IN (ercl.SPL_CODE1,ercl.SPL_CODE2,ercl.SPL_CODE3) )
						AND ( alert.SPL_CODE2 is null OR alert.SPL_CODE2 IN (ercl.SPL_CODE1,ercl.SPL_CODE2,ercl.SPL_CODE3) )
						AND ( alert.SPL_CODE3 is null OR alert.SPL_CODE3 IN (ercl.SPL_CODE1,ercl.SPL_CODE2,ercl.SPL_CODE3) )
            			AND ( alert.awb_no is null OR nvl(instr(ercl.awb_no,alert.awb_no),0) &gt; 0 )
						AND ( alert.agent_code is null OR ercl.cust_no = alert.agent_code )
				)
	</select>



	<delete id="deleteReceiveCargoDtls" parameterClass="cargo.cms.extsvc.bo.ReceiveCargoBO">
	 	delete from EXP_CARGO_RECEIVE_RECORD where tr_no = #trNo#
	</delete>
		
	<update id="updateCargoRecvRecord" parameterClass="cargo.cms.extsvc.bo.ReceiveCargoBO">
			UPDATE EXP_CARGO_RECEIVE_RECORD SET 			
			PCS = #locnPcs#,			
			LM_USER_ID  = #userID#,	    
			LM_DATE = sysdate			
		 	WHERE  TR_NO = #trNo#
	</update>
	
	<update id="updateCargoRecvMhcsInd" parameterClass="cargo.cms.extsvc.bo.ReceiveCargoBO">
			UPDATE EXP_CARGO_RECEIVE_RECORD SET 			
			mhs_msg_sent_ind = #mhsMsgInd#,
			mhs_msg_sent_date = sysdate,			
			LM_USER_ID  = #userID#,	    
			LM_DATE = sysdate			
		 	WHERE  TR_NO = #trNo#
	</update>
 	
 	<update id="resetBinTarget" parameterClass="cargo.cms.extsvc.bo.ReceiveCargoBO">
			UPDATE LSP_INVENTORY SET 			
			Target = '',				
			LM_USER_ID  = #userID#,	    
			LM_DATE = sysdate			
		 	WHERE  LSP_NO = #csdOrUld#
	</update>
 	
 	<update id="saveRfTruck" parameterClass="cargo.cms.extsvc.bo.ReceiveCargoBO">
			UPDATE EXP_PRE_RCL_HD SET 			
			IMG_TRANS_ID = #imgTransactionId#,					
			LM_USER_ID  = #userID#,	    
			LM_DATE = sysdate			
		 	WHERE  PRE_RCL_NO = #erclNo#
	</update>
	
 	<select id="getRFTruckSearch" parameterClass="cargo.cms.extsvc.bo.ReceiveCargoBO" resultClass="cargo.cms.extsvc.bo.ReceiveCargoBO">
	 		<![CDATA[
	 		SELECT 
				PRE_RCL_NO as erclNo,
				AWB_NO as awbNo, TTL_PCS as pcs,
				SCREENING_METHOD as trkUlsSecurity,
				REMARKS as remarks,
				(CASE WHEN (SELECT COUNT(1) FROM MAST_RCL_RACSF_CNFG WHERE CARR_CODE=EXP_PRE_RCL_HD.CARR_CODE AND RACSF_CODE = EXP_PRE_RCL_HD.RACSF_CODE) = 0 THEN 'Y' ELSE 'N' END) as racsfInd  
				FROM EXP_PRE_RCL_HD 
				WHERE NVL(SCREENING_OPTION,'X') = 'RACF_SC' and ppk_type = 'B'  and STATUS = 'SUBMITTED' 
				]]> 
				AND (
						<isNotEmpty property="awbNo">
						  ( AWB_NO = #awbNo# AND AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') )
						</isNotEmpty>
						
						<isNotEmpty property="awbNo">
							<isNotEmpty prepend="OR" property="truckNo">								
						  			(racsf_trk_number = #truckNo#)
							</isNotEmpty>
						</isNotEmpty>
						
						<isEmpty property="awbNo">
							<isNotEmpty property="truckNo">								
						  			(racsf_trk_number = #truckNo#)
							</isNotEmpty>
						</isEmpty>
						
						<isEmpty property="awbNo">
							<isEmpty property="truckNo">
								<isNotEmpty property="sealNoList"> 
								  (	SEAL_NUM1 in
								     <iterate property="sealNoList" open="(" close=")" conjunction=",">
								            #sealNoList[]#
								     </iterate>
								     OR SEAL_NUM2 in
								     <iterate property="sealNoList" open="(" close=")" conjunction=",">
								            #sealNoList[]#
								     </iterate>
								     OR SEAL_NUM3 in
								     <iterate property="sealNoList" open="(" close=")" conjunction=",">
								            #sealNoList[]#
								     </iterate>
								     OR SEAL_NUM4 in
								     <iterate property="sealNoList" open="(" close=")" conjunction=",">
								            #sealNoList[]#
								     </iterate>
								     OR SEAL_NUM5 in
								     <iterate property="sealNoList" open="(" close=")" conjunction=",">
								            #sealNoList[]#
								     </iterate>
								     OR SEAL_NUM6 in
								     <iterate property="sealNoList" open="(" close=")" conjunction=",">
								            #sealNoList[]#
								     </iterate>
								     OR SEAL_NUM7 in
								     <iterate property="sealNoList" open="(" close=")" conjunction=",">
								            #sealNoList[]#
								     </iterate>
								     OR SEAL_NUM8 in
								     <iterate property="sealNoList" open="(" close=")" conjunction=",">
								            #sealNoList[]#
								     </iterate>
								     OR SEAL_NUM9 in
								     <iterate property="sealNoList" open="(" close=")" conjunction=",">
								            #sealNoList[]#
								     </iterate>
								   ) 
								 </isNotEmpty>
							</isEmpty>
						</isEmpty>
						
						<isEmpty property="awbNo">
							<isNotEmpty property="truckNo">
									<isNotEmpty prepend="OR" property="sealNoList"> 
									  (	SEAL_NUM1 in
									     <iterate property="sealNoList" open="(" close=")" conjunction=",">
									            #sealNoList[]#
									     </iterate>
									     OR SEAL_NUM2 in
									     <iterate property="sealNoList" open="(" close=")" conjunction=",">
									            #sealNoList[]#
									     </iterate>
									     OR SEAL_NUM3 in
									     <iterate property="sealNoList" open="(" close=")" conjunction=",">
									            #sealNoList[]#
									     </iterate>
									     OR SEAL_NUM4 in
									     <iterate property="sealNoList" open="(" close=")" conjunction=",">
									            #sealNoList[]#
									     </iterate>
									     OR SEAL_NUM5 in
									     <iterate property="sealNoList" open="(" close=")" conjunction=",">
									            #sealNoList[]#
									     </iterate>
									     OR SEAL_NUM6 in
									     <iterate property="sealNoList" open="(" close=")" conjunction=",">
									            #sealNoList[]#
									     </iterate>
									     OR SEAL_NUM7 in
									     <iterate property="sealNoList" open="(" close=")" conjunction=",">
									            #sealNoList[]#
									     </iterate>
									     OR SEAL_NUM8 in
									     <iterate property="sealNoList" open="(" close=")" conjunction=",">
									            #sealNoList[]#
									     </iterate>
									     OR SEAL_NUM9 in
									     <iterate property="sealNoList" open="(" close=")" conjunction=",">
									            #sealNoList[]#
									     </iterate>
									   ) 
									 </isNotEmpty>
							</isNotEmpty>
						</isEmpty>
						
						
							<isEmpty property="truckNo">
								<isNotEmpty property="awbNo">
									<isNotEmpty prepend="OR" property="sealNoList"> 
									  (	SEAL_NUM1 in
									     <iterate property="sealNoList" open="(" close=")" conjunction=",">
									            #sealNoList[]#
									     </iterate>
									     OR SEAL_NUM2 in
									     <iterate property="sealNoList" open="(" close=")" conjunction=",">
									            #sealNoList[]#
									     </iterate>
									     OR SEAL_NUM3 in
									     <iterate property="sealNoList" open="(" close=")" conjunction=",">
									            #sealNoList[]#
									     </iterate>
									     OR SEAL_NUM4 in
									     <iterate property="sealNoList" open="(" close=")" conjunction=",">
									            #sealNoList[]#
									     </iterate>
									     OR SEAL_NUM5 in
									     <iterate property="sealNoList" open="(" close=")" conjunction=",">
									            #sealNoList[]#
									     </iterate>
									     OR SEAL_NUM6 in
									     <iterate property="sealNoList" open="(" close=")" conjunction=",">
									            #sealNoList[]#
									     </iterate>
									     OR SEAL_NUM7 in
									     <iterate property="sealNoList" open="(" close=")" conjunction=",">
									            #sealNoList[]#
									     </iterate>
									     OR SEAL_NUM8 in
									     <iterate property="sealNoList" open="(" close=")" conjunction=",">
									            #sealNoList[]#
									     </iterate>
									     OR SEAL_NUM9 in
									     <iterate property="sealNoList" open="(" close=")" conjunction=",">
									            #sealNoList[]#
									     </iterate>
									   ) 
									 </isNotEmpty>								
								</isNotEmpty>
							</isEmpty>
							
							<isNotEmpty property="truckNo">
								<isNotEmpty property="awbNo">
									<isNotEmpty prepend="OR" property="sealNoList"> 
									  (	SEAL_NUM1 in
									     <iterate property="sealNoList" open="(" close=")" conjunction=",">
									            #sealNoList[]#
									     </iterate>
									     OR SEAL_NUM2 in
									     <iterate property="sealNoList" open="(" close=")" conjunction=",">
									            #sealNoList[]#
									     </iterate>
									     OR SEAL_NUM3 in
									     <iterate property="sealNoList" open="(" close=")" conjunction=",">
									            #sealNoList[]#
									     </iterate>
									     OR SEAL_NUM4 in
									     <iterate property="sealNoList" open="(" close=")" conjunction=",">
									            #sealNoList[]#
									     </iterate>
									     OR SEAL_NUM5 in
									     <iterate property="sealNoList" open="(" close=")" conjunction=",">
									            #sealNoList[]#
									     </iterate>
									     OR SEAL_NUM6 in
									     <iterate property="sealNoList" open="(" close=")" conjunction=",">
									            #sealNoList[]#
									     </iterate>
									     OR SEAL_NUM7 in
									     <iterate property="sealNoList" open="(" close=")" conjunction=",">
									            #sealNoList[]#
									     </iterate>
									     OR SEAL_NUM8 in
									     <iterate property="sealNoList" open="(" close=")" conjunction=",">
									            #sealNoList[]#
									     </iterate>
									     OR SEAL_NUM9 in
									     <iterate property="sealNoList" open="(" close=")" conjunction=",">
									            #sealNoList[]#
									     </iterate>
									   ) 
									 </isNotEmpty>								
								</isNotEmpty>
							</isNotEmpty>
				)
		</select>
	
	
	
<insert id="makeAppointment" parameterClass="cargo.cms.extsvc.bo.TicketDetailBO">
		INSERT INTO CUST_EXAMINATION_HALL
		  (
		    TR_NO,
		    EXAMINATION_HALL,
		    TICKET_NO,
		    AWB_NO,
		    STATUS,
		    STATUS_ID,
		    CONTACT_NO,
		    SEND_SMS,
		    DEVICE_ID,
		    CR_USER_ID,
		    CR_DATE,
		    LM_USER_ID,
		    LM_DATE,
		    DISP_TICKET_NO
		  )
		  VALUES
		  (
		    CUST_EXAMINATION_HALL_SEQ_NO.NEXTVAL,
		    #examinationHall#,
		    #ticketNo#,
		    #awb#,
		    #status#,
		    #statusId#,
		    #contactNo#,
		    NVL(#smsNotification#,'N'),
		    #deviceID#,
		    #loginID#,
		    SYSDATE,
		    #loginID#,
		    SYSDATE,
		    #dispTicketNo#
		  )
	</insert>
	
	<select id="getQueueTicketInfo" parameterClass="cargo.cms.extsvc.bo.TicketDetailBO" resultClass="cargo.cms.extsvc.bo.TicketDetailBO">
		SELECT examination_hall examinationHall,
		  nvl(DISP_TICKET_NO,TICKET_NO) ticketNo, awb_no awb,
		  (SUBSTR(awb_no, 0, 3)||'-'||SUBSTR(awb_no, 4, 11)) awbDisplay
		FROM CUST_EXAMINATION_HALL
		WHERE upper(STATUS)='QUEUING' AND upper(cr_user_id) = upper(#loginID#)
		order by examination_hall,ticket_no
   	</select>
   	
	<select id="getProcessTicketInfo" parameterClass="cargo.cms.extsvc.bo.TicketDetailBO" resultClass="cargo.cms.extsvc.bo.TicketDetailBO">
		select HD.examination_hall examinationHall,
		  (select rule_value from CMSRULES where rule_code=examination_hall||'_HALL_STATUS') examinationHallStatus,		
		  NVL(HD.DISP_TICKET_NO,HD.ticket_no) currentTicket,
		  (SELECT COUNT(ticket_no) FROM CUST_EXAMINATION_HALL WHERE upper(STATUS) ='QUEUING' AND examination_hall=HD.examination_hall) queueTickets
      	         from CUST_EXAMINATION_HALL HD where HD.tr_no in (select max(tr_no) from CUST_EXAMINATION_HALL where upper(STATUS)='PROCESSING' and examination_hall='PCC')
      	        union
    	        select HD.examination_hall examinationHall,
		  (select rule_value from CMSRULES where rule_code=examination_hall||'_HALL_STATUS') examinationHallStatus,		
		  NVL(HD.DISP_TICKET_NO,HD.ticket_no) currentTicket,
		  (SELECT COUNT(ticket_no) FROM CUST_EXAMINATION_HALL WHERE upper(STATUS) ='QUEUING' AND examination_hall=HD.examination_hall) queueTickets
      	          from CUST_EXAMINATION_HALL HD where HD.tr_no in (select max(tr_no) from CUST_EXAMINATION_HALL where upper(STATUS)='PROCESSING' and examination_hall='CT3')
      	        union
    	        select HD.examination_hall examinationHall,
		  (select rule_value from CMSRULES where rule_code=examination_hall||'_HALL_STATUS') examinationHallStatus,		
		  NVL(HD.DISP_TICKET_NO,HD.ticket_no) currentTicket,
		  (SELECT COUNT(ticket_no) FROM CUST_EXAMINATION_HALL WHERE upper(STATUS) ='QUEUING' AND examination_hall=HD.examination_hall) queueTickets
      	          from CUST_EXAMINATION_HALL HD where HD.tr_no in (select max(tr_no) from CUST_EXAMINATION_HALL where upper(STATUS)='PROCESSING' and examination_hall='CT5')
   	</select>
   	
   	<select id="getQueueTicketCountForHall" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM CUST_EXAMINATION_HALL WHERE upper(STATUS) ='QUEUING' AND examination_hall=#hallName#
	</select>
	
	<select id="isAWBAlreadyInHall" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM CUST_EXAMINATION_HALL WHERE awb_no=#AWB_NO# and upper(STATUS) not in ('NOSHOW','CANCELLED','COMPLETED')
	</select>
	

	<delete id="deleteAppointment" parameterClass="java.util.HashMap">
		DELETE FROM CUST_EXAMINATION_HALL WHERE ((ticket_no = #TICKET_NO#) OR (TICKET_NO = (SELECT MAX(ticket_no) FROM cust_examination_hall WHERE DISP_TICKET_NO=#TICKET_NO#)))
	</delete>
	
	<select id="mobileNotificationQueue" parameterClass="java.lang.String" resultClass="java.lang.String" >
		SELECT DISTINCT KSID FROM MAST_MBLE_TRK_SUBSCRIBE WHERE LOGIN_ID=#loginID# AND sub_scr_flag = 'true' and ROWNUM=1
	</select>
	
	<select id="getKsidOnDevice" parameterClass="java.lang.String" resultClass="java.lang.String" >
		SELECT DISTINCT KSID FROM MAST_MBLE_SUBSCRIBE WHERE DEVICE_ID=#deviceID# AND sub_scr_flag = 'true' and ROWNUM=1
	</select>
	<select id="getrclNumberbasedOnULD" parameterClass="java.lang.String" resultClass="java.lang.String" >
	SELECT rclNo FROM(
		SELECT rclNo  
FROM
  (SELECT t1.rcl_no as rclNo,
    dense_rank() over (partition BY t1.uld_key order by t3.rcl_date DESC) rank
  FROM exp_uld_awb t1,
    awb t2,
    exp_rcl_hd t3
  WHERE t1.awb_no    = t2.awb_no
  AND t1.awb_date    = t2.awb_date
  AND t3.rcl_no      = t1.rcl_no
  AND t1.uld_key     = #PARAM#
  AND t1.manifest_yn = 'N'
  )
WHERE rank = 1
	) WHERE ROWNUM=1
	</select>

	<select id="getrclStatusbasedOnpreRCL" parameterClass="java.lang.String" resultClass="java.lang.Integer" >
		SELECT COUNT(1) FROM EXP_PRE_RCL_HD PREHD, EXP_RCL_HD RCLHD
WHERE PREHD.PRE_RCL_NO = RCLHD.PRE_RCL_NO AND PREHD.STATUS='WT_DIFFERENCE'
AND RCLHD.RCL_NO=#PARAM#
	</select>
<select id="validateErclExistForAWB" parameterClass="cargo.cms.extsvc.bo.ReceiveCargoBO" resultClass="java.lang.Integer" >
		SELECT count(*) as count FROM EXP_PRE_RCL_HD WHERE awb_no = #awbNo# and awb_date = to_date(#awbDate#,'DDMONYY') and STATUS = 'SUBMITTED'
	</select>
		
	<select id="validateDestMatchtheErcl" parameterClass="cargo.cms.extsvc.bo.ReceiveCargoBO" resultClass="java.lang.Integer" >
		SELECT count(*) as count FROM EXP_PRE_RCL_HD WHERE awb_no = #awbNo# and awb_date = to_date(#awbDate#,'DDMONYY') and STATUS = 'SUBMITTED' and AWB_DEST = #dest#
	</select>
	
	<select id="getErclExistForAWB" parameterClass="cargo.cms.extsvc.bo.ReceiveCargoBO" resultClass="java.lang.String" >
		select erclNo from 
			(SELECT pre_rcl_no as erclNo FROM EXP_PRE_RCL_HD WHERE awb_no = #awbNo# and awb_date = to_date(#awbDate#,'DDMONYY') and STATUS = 'SUBMITTED' order by cr_date asc )
		 where ROWNUM = 1
	</select>

         <select id="getTicketCount" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		SELECT count(1) FROM CUST_EXAMINATION_HALL WHERE cr_user_id=#loginID# AND upper(STATUS) ='QUEUING'
	</select>

	
	<select id="getMaintainQueueList" parameterClass="cargo.cms.export.bo.DocumentAcceptanceBO" resultClass="cargo.cms.export.bo.DocumentAcceptanceBO">
	SELECT * FROM (SELECT TO_CHAR(cr_date,'DDMONYY HH24:MI') crDateTime,
	awb_no awbNo,
	(SUBSTR(awb_no, 0, 3)||'-'||SUBSTR(awb_no, 4, 11)) awbNoDisplay,
	ticket_no ticketNo,
	nvl(DISP_TICKET_NO,ticket_no) as dispTicketNo,
	examination_hall cAndEHall,
	upper(status) status,
	contact_no contactNo,
	send_sms smsNotification,
	cr_user_id ticketOwner,
	device_id deviceID,
	(CASE WHEN (upper(cr_user_id) = #userID#) THEN 'N' ELSE 'Y' END) AS
	differentUser,
	status_id,
	tr_no,
	(CASE
	WHEN TR_NO = (SELECT MIN(TR_NO) FROM CUST_EXAMINATION_HALL WHERE
	examination_hall= 'PCC' AND status_id='2')
	THEN 'Y'
	ELSE 'N'
	END) AS showRecord
	FROM CUST_EXAMINATION_HALL
	WHERE cr_date BETWEEN to_date(#crDateFrom#,'DDMONYY') AND
	to_date(#crDateTo#||'2359','DDMONYYHH24MI')
	AND examination_hall = 'PCC'
	<isEqual property="isAnyHalltick" compareValue="Y" prepend="AND">
		( 1=2
	</isEqual>
	<isEqual property="isPCCHall" compareValue="Y">
		OR (examination_hall = 'PCC')
	</isEqual>
	<isEqual property="isCT3Hall" compareValue="Y">
		OR (examination_hall = 'CT3')
	</isEqual>
	<isEqual property="isCT5Hall" compareValue="Y">
		OR (examination_hall = 'CT5')
	</isEqual>
	<isEqual property="isAnyHalltick" compareValue="Y">
		)
	</isEqual>
	<isNotEmpty property="ticketNo" prepend="AND">
		(TICKET_NO = #ticketNo# or DISP_TICKET_NO = #ticketNo#)
	</isNotEmpty>
	<isEqual property="isAnySatustick" compareValue="Y" prepend="AND">
		( 1=2
	</isEqual>
	<isEqual property="isProcessing" compareValue="Y">
		OR (upper(status) = 'PROCESSING')
	</isEqual>
	<isEqual property="isQueuing" compareValue="Y">
		OR (upper(status) = 'QUEUING')
	</isEqual>
	<isEqual property="isCompleted" compareValue="Y">
		OR (upper(status) = 'COMPLETED')
	</isEqual>
	<isEqual property="isNoShow" compareValue="Y">
		OR (upper(status) = 'NOSHOW')
	</isEqual>
	<isEqual property="isCancelled" compareValue="Y">
		OR (upper(status) = 'CANCELLED')
	</isEqual>
	<isEqual property="isAnySatustick" compareValue="Y">
		)
	</isEqual>
	UNION ALL
	SELECT TO_CHAR(cr_date,'DDMONYY HH24:MI') crDateTime,
	awb_no awbNo,
	(SUBSTR(awb_no, 0, 3)||'-'||SUBSTR(awb_no, 4, 11)) awbNoDisplay,
	ticket_no ticketNo,
	nvl(DISP_TICKET_NO,ticket_no) dispTicketNo,
	examination_hall cAndEHall,
	upper(status) status,
	contact_no contactNo,
	send_sms smsNotification,
	cr_user_id ticketOwner,
	device_id deviceID,
	(CASE WHEN (upper(cr_user_id) = #userID#) THEN 'N' ELSE 'Y' END) AS
	differentUser,
	status_id,
	tr_no,
	(CASE
	WHEN TR_NO = (SELECT MIN(TR_NO) FROM CUST_EXAMINATION_HALL WHERE
	examination_hall= 'CT3' AND status_id='2')
	THEN 'Y'
	ELSE 'N'
	END) AS showRecord
	FROM CUST_EXAMINATION_HALL
	WHERE cr_date BETWEEN to_date(#crDateFrom#,'DDMONYY') AND
	to_date(#crDateTo#||'2359','DDMONYYHH24MI')
	AND examination_hall = 'CT3'
	<isEqual property="isAnyHalltick" compareValue="Y" prepend="AND">
		( 1=2
	</isEqual>
	<isEqual property="isPCCHall" compareValue="Y">
		OR (examination_hall = 'PCC')
	</isEqual>
	<isEqual property="isCT3Hall" compareValue="Y">
		OR (examination_hall = 'CT3')
	</isEqual>
	<isEqual property="isCT5Hall" compareValue="Y">
		OR (examination_hall = 'CT5')
	</isEqual>
	<isEqual property="isAnyHalltick" compareValue="Y">
		)
	</isEqual>
	<isNotEmpty property="ticketNo" prepend="AND">
		(TICKET_NO = #ticketNo# or DISP_TICKET_NO = #ticketNo#)
	</isNotEmpty>
	<isEqual property="isAnySatustick" compareValue="Y" prepend="AND">
		( 1=2
	</isEqual>
	<isEqual property="isProcessing" compareValue="Y">
		OR (upper(status) = 'PROCESSING')
	</isEqual>
	<isEqual property="isQueuing" compareValue="Y">
		OR (upper(status) = 'QUEUING')
	</isEqual>
	<isEqual property="isCompleted" compareValue="Y">
		OR (upper(status) = 'COMPLETED')
	</isEqual>
	<isEqual property="isNoShow" compareValue="Y">
		OR (upper(status) = 'NOSHOW')
	</isEqual>
	<isEqual property="isCancelled" compareValue="Y">
		OR (upper(status) = 'CANCELLED')
	</isEqual>
	<isEqual property="isAnySatustick" compareValue="Y">
		)
	</isEqual>
	UNION ALL
	SELECT TO_CHAR(cr_date,'DDMONYY HH24:MI') crDateTime,
	awb_no awbNo,
	(SUBSTR(awb_no, 0, 3)||'-'||SUBSTR(awb_no, 4, 11)) awbNoDisplay,
	ticket_no ticketNo,
	nvl(DISP_TICKET_NO,ticket_no) dispTicketNo,
	examination_hall cAndEHall,
	upper(status) status,
	contact_no contactNo,
	send_sms smsNotification,
	cr_user_id ticketOwner,
	device_id deviceID,
	(CASE WHEN (upper(cr_user_id) = #userID#) THEN 'N' ELSE 'Y' END) AS
	differentUser,
	status_id,
	tr_no,
	(CASE
	WHEN TR_NO = (SELECT MIN(TR_NO) FROM CUST_EXAMINATION_HALL WHERE
	examination_hall= 'CT5' AND status_id='2')
	THEN 'Y'
	ELSE 'N'
	END) AS showRecord
	FROM CUST_EXAMINATION_HALL
	WHERE cr_date BETWEEN to_date(#crDateFrom#,'DDMONYY') AND
	to_date(#crDateTo#||'2359','DDMONYYHH24MI')
	AND examination_hall = 'CT5'
	<isEqual property="isAnyHalltick" compareValue="Y" prepend="AND">
		( 1=2
	</isEqual>
	<isEqual property="isPCCHall" compareValue="Y">
		OR (examination_hall = 'PCC')
	</isEqual>
	<isEqual property="isCT3Hall" compareValue="Y">
		OR (examination_hall = 'CT3')
	</isEqual>
	<isEqual property="isCT5Hall" compareValue="Y">
		OR (examination_hall = 'CT5')
	</isEqual>
	<isEqual property="isAnyHalltick" compareValue="Y">
		)
	</isEqual>
	<isNotEmpty property="ticketNo" prepend="AND">
		(TICKET_NO = #ticketNo# or DISP_TICKET_NO = #ticketNo#)
	</isNotEmpty>
	<isEqual property="isAnySatustick" compareValue="Y" prepend="AND">
		( 1=2
	</isEqual>
	<isEqual property="isProcessing" compareValue="Y">
		OR (upper(status) = 'PROCESSING')
	</isEqual>
	<isEqual property="isQueuing" compareValue="Y">
		OR (upper(status) = 'QUEUING')
	</isEqual>
	<isEqual property="isCompleted" compareValue="Y">
		OR (upper(status) = 'COMPLETED')
	</isEqual>
	<isEqual property="isNoShow" compareValue="Y">
		OR (upper(status) = 'NOSHOW')
	</isEqual>
	<isEqual property="isCancelled" compareValue="Y">
		OR (upper(status) = 'CANCELLED')
	</isEqual>
	<isEqual property="isAnySatustick" compareValue="Y">
		)
	</isEqual>
	) ORDER BY status_id,cAndEHall,tr_no	  	
   	</select>
   	
   	<select id="getMaintainQueueListCOUNT" parameterClass="cargo.cms.export.bo.DocumentAcceptanceBO" resultClass="java.lang.Integer">
		SELECT  count(*) as totalRowCount
		FROM CUST_EXAMINATION_HALL 
		WHERE cr_date between to_date(#crDateFrom#,'DDMONYY') AND to_date(#crDateTo#||'2359','DDMONYYHH24MI')
		<isEqual property="isAnyHalltick" compareValue="Y" prepend="AND" >
			(  1=2
		</isEqual>
			<isEqual property="isPCCHall" compareValue="Y">
				OR (examination_hall = 'PCC')
			</isEqual>
			<isEqual property="isCT3Hall" compareValue="Y">
				OR (examination_hall = 'CT3')
			</isEqual>
			<isEqual property="isCT5Hall" compareValue="Y">
				OR (examination_hall = 'CT5')
			</isEqual>
		<isEqual property="isAnyHalltick" compareValue="Y">
			)
		</isEqual>
		<isNotEmpty property="ticketNo" prepend="AND">
			(TICKET_NO = #ticketNo# or DISP_TICKET_NO = #ticketNo#)
		</isNotEmpty>
		<isEqual property="isAnySatustick" compareValue="Y" prepend="AND" >
			(  1=2
		</isEqual>
			<isEqual property="isProcessing" compareValue="Y">
				 OR (upper(status) = 'PROCESSING')
			</isEqual>
			<isEqual property="isQueuing" compareValue="Y">
				 OR (upper(status) = 'QUEUING')
			</isEqual>
			<isEqual property="isCompleted" compareValue="Y">
				 OR (upper(status) = 'COMPLETED')
			</isEqual>
			<isEqual property="isNoShow" compareValue="Y">
				 OR (upper(status) = 'NOSHOW')
			</isEqual>
			<isEqual property="isCancelled" compareValue="Y">
				 OR (upper(status) = 'CANCELLED')
			</isEqual>
		<isEqual property="isAnySatustick" compareValue="Y">
			)
		</isEqual>
   	</select>
   	
   	<update id="changeTicketStatus" parameterClass="cargo.cms.export.bo.DocumentAcceptanceBO">
		UPDATE CUST_EXAMINATION_HALL
		  SET STATUS     =#changeStaus#,
		    STATUS_ID    =#statusId#,
		    LM_USER_ID   =#userID#,
		    LM_DATE      =SYSDATE
		    <isEqual property="statusId" compareValue="1">
				 ,process_date = SYSDATE
			</isEqual>
			<isEqual property="statusId" compareValue="3">
				 ,comp_date = SYSDATE
			</isEqual>
			<isEqual property="statusId" compareValue="4">
				 ,no_show_date = SYSDATE
			</isEqual>
			<isEqual property="statusId" compareValue="5">
				 ,cancel_date = SYSDATE
			</isEqual>
		WHERE TICKET_NO=#changeStausTicketNo#
	</update>
   	
   	<insert id="makeAppointmentDesktop" parameterClass="cargo.cms.export.bo.DocumentAcceptanceBO">
		INSERT INTO CUST_EXAMINATION_HALL
		  (
		    TR_NO,
		    EXAMINATION_HALL,
		    TICKET_NO,
		    AWB_NO,
		    STATUS,
		    STATUS_ID,
		    CONTACT_NO,
		    SEND_SMS,
		    DEVICE_ID,
		    CR_USER_ID,
		    CR_DATE,
		    LM_USER_ID,
		    LM_DATE,
		    DISP_TICKET_NO
		  )
		  VALUES
		  (
		    CUST_EXAMINATION_HALL_SEQ_NO.NEXTVAL,
		    #cAndEHall#,
		    #ticketNo#,
		    #awbNo#,
		    #status#,
		    #statusId#,
		    #contactNo#,
		    NVL(#smsNotification#,'N'),
		    #deviceID#,
		    #userID#,
		    SYSDATE,
		    #userID#,
		    SYSDATE,
		    #dispTicketNo#
		  )
	</insert>
	
	<update id="updateHall" parameterClass="cargo.cms.export.bo.DocumentAcceptanceBO">
		UPDATE CUST_EXAMINATION_HALL 
		SET EXAMINATION_HALL=#cAndEHall#,
		TICKET_NO  = #newTicketNo#,
		DISP_TICKET_NO = #dispTicketNo#,
		LM_USER_ID   =#userID#,
		LM_DATE      =SYSDATE
		WHERE TICKET_NO=#ticketNo#
	</update>
	
	<select id="getDisplayServicingList" parameterClass="cargo.cms.export.bo.DocumentAcceptanceBO" resultClass="cargo.cms.export.bo.DocumentAcceptanceBO">
		<![CDATA[
		SELECT * FROM (
		SELECT nvl(DISP_TICKET_NO,TICKET_NO) ticketNo FROM CUST_EXAMINATION_HALL 
		WHERE examination_hall=#cAndEHall# 
		AND upper(status) = #status#
		order by tr_no) WHERE ROWNUM<4
		]]>
   	</select>
   	
   	<select id="getHallStatusList"  parameterClass="cargo.cms.export.bo.DocumentAcceptanceBO" resultClass="cargo.cms.export.bo.DocumentAcceptanceBO">
   		<![CDATA[
			with hallList	as(	select regexp_substr((select rule_value from cmsrules where rule_code='EXAMINATION_HALL'),'[^,]+', 1, level) cAndEHall
                 from dual 
                 connect BY regexp_substr((select rule_value from cmsrules where rule_code='EXAMINATION_HALL'), '[^,]+', 1, level) is not null),
		    hallStatus as (
		              select cAndEHall,
		              CASE cAndEHall
		              WHEN 'PCC' THEN (select rule_value from cmsrules where rule_code='PCC_HALL_STATUS')
		              WHEN 'CT3' THEN (select rule_value from cmsrules where rule_code='CT3_HALL_STATUS')
		              WHEN 'CT5' THEN (select rule_value from cmsrules where rule_code='CT5_HALL_STATUS')
		              ELSE 'OFF'
		              END status
		              from hallList
		              )   
		         select * from hallStatus
			]]>
   	</select>
   	
   	<update id="changeHallStatus" parameterClass="java.util.HashMap">
		UPDATE CMSRULES 
		SET RULE_VALUE=decode(RULE_VALUE,'OFF','ON','ON','OFF',RULE_VALUE),
		LM_USER_ID   =#userID#,
		LM_DATE      =SYSDATE
		WHERE RULE_CODE=#C_AND_E_HALL#
	</update>

	<select id="getTicketHall" parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT examination_hall cAndEHall FROM CUST_EXAMINATION_HALL WHERE ticket_no = #ticketNo#
   	</select>

	<select id="getERCLAWBListforImageUpload" parameterClass="map" resultClass="cargo.cms.extsvc.bo.RclBO">
		SELECT AWB_NO as awbNo,TO_CHAR(AWB_DATE,'DDMONYY') as awbDate FROM EXP_PRE_RCL_HD WHERE PRE_RCL_NO = #rclNo#
	</select>
	
	<select id="getERCLImageTransactionID_Mobile" parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT MAX(TRANS_NAME) FROM IMAGE_STORE WHERE TRANS_NO= #PARAM# AND TRANS_TYPE = 'ERCL'
	</select>
	
	<select id="getERCLAWBDetails_Mobile" parameterClass="java.lang.String" resultClass="cargo.cms.extsvc.bo.RclBO">
		SELECT AWB_NO as awbNo,TO_CHAR(AWB_DATE,'DDMONYY') as awbDate  FROM EXP_PRE_RCL_HD WHERE PRE_RCL_NO = #PARAM#
	</select>

	<select id="getErclMatchingUN" parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT distinct b.un_number FROM exp_pre_rcl_pi_dtl A
		JOIN EXP_UN_PI_INFO B ON a.pi_num = b.pi_number
		where a.pre_rcl_no = #preRclNum#
	</select>

	<select id="getErclMatchingUNRCL" parameterClass="map" resultClass="java.lang.String">
		SELECT distinct b.un_number FROM exp_pre_rcl_pi_dtl A
		JOIN EXP_UN_PI_INFO B ON a.pi_num = b.pi_number
		where a.pre_rcl_no = #ERCL#
		<isNotEmpty property="ULD_KEY"> 
				AND uld_key = #ULD_KEY#
		</isNotEmpty>
	</select>
	
	<select id="getMismatchPICountOfErclByULD" parameterClass="map" resultClass="java.lang.Integer">
		SELECT count(*) from EXP_UN_PI_INFO where un_number = #UN_NUM# and 
		pi_number in (SELECT pi_num FROM exp_pre_rcl_pi_dtl where pre_rcl_no = #ERCL# 
					<isNotEmpty property="ULD_KEY"> 
							AND uld_key = #ULD_KEY#
					</isNotEmpty> )
	</select>
	
	<select id="getMismatchPICountOfErcl" parameterClass="map" resultClass="java.lang.Integer">
		SELECT count(*) from EXP_UN_PI_INFO where un_number = #UN_NUM# and pi_number in (SELECT pi_num FROM exp_pre_rcl_pi_dtl where pre_rcl_no = #ERCL#)
	</select>
	

	<select id="getErclPIweight" parameterClass="map" resultClass="java.lang.String">
		SELECT sum(pi_wt) from exp_pre_rcl_pi_dtl where uld_key = #ULD_KEY# and  pre_rcl_no = #ERCL#
	</select>
	
	<select id="getErclPIweightBulk" parameterClass="map" resultClass="java.lang.String">
		SELECT sum(pi_wt) from exp_pre_rcl_pi_dtl where pre_rcl_no = #ERCL#
	</select>
	
	<select id="getFBLMismatchSHC" parameterClass="cargo.cms.extsvc.bo.ReceiveCargoBO" resultClass="java.lang.String">
		<![CDATA[
			 select shc from( 
			  with FBL_SHC as (
			  SELECT SPL_CODE1||'/'||SPL_CODE2||'/'||SPL_CODE3||'/'||SPL_CODE4||'/'||SPL_CODE5||'/'||SPL_CODE6||'/'||SPL_CODE7||'/'||SPL_CODE8||'/'||SPL_CODE9 as shc
			  FROM edi_fbl JOIN edi_fbl_shp ON edi_fbl.TR_NO = edi_fbl_shp.TR_NO
			  WHERE edi_fbl.si_type IN('S','I') AND edi_fbl.fbl_status ='P'
			  AND edi_fbl_shp.awb_no =  #awbNo# and awb_date = #awbDate# ) 
			select distinct regexp_substr(shc,'[^/]+', 1, level) shc from FBL_SHC  
			connect by level <= length(regexp_replace(shc, '[^/]+')) + 1) fbl
			join mast_spl_hand_code spl on spl.code =  fbl.shc
			where nvl(spl.FBL_CRS_CHK_REQ,'N') = 'Y'
			]]>
			<isNotEmpty property="sch"> 
				AND shc not in <iterate property="sch" open="(" close=")" conjunction=",">#sch[]#</iterate>
			</isNotEmpty>
			
		
	</select>
	
	<select id="getFBLSHC" parameterClass="cargo.cms.extsvc.bo.ReceiveCargoBO" resultClass="java.lang.String">
		<![CDATA[
		 	 select STRAGG(STRINGDELIM(shc, ',')) from( 
					  with FBL_SHC as (
					  SELECT SPL_CODE1||'/'||SPL_CODE2||'/'||SPL_CODE3||'/'||SPL_CODE4||'/'||SPL_CODE5||'/'||SPL_CODE6||'/'||SPL_CODE7||'/'||SPL_CODE8||'/'||SPL_CODE9 as shc
					  FROM edi_fbl JOIN edi_fbl_shp ON edi_fbl.TR_NO = edi_fbl_shp.TR_NO
					  WHERE edi_fbl.si_type IN('S','I') AND edi_fbl.fbl_status ='P'
					  AND edi_fbl_shp.awb_no =  #awbNo# and awb_date = #awbDate# ) 
					select distinct regexp_substr(shc,'[^/]+', 1, level) shc from FBL_SHC  
					connect by level <= length(regexp_replace(shc, '[^/]+')) + 1) fbl
					join mast_spl_hand_code spl on spl.code =  fbl.shc
					where nvl(spl.FBL_CRS_CHK_REQ,'N') = 'Y'
			]]>
	</select>				
		
	<select id="getInputMismatchSHC" parameterClass="cargo.cms.extsvc.bo.ReceiveCargoBO" resultClass="java.lang.String">
		<![CDATA[
			SELECT shc FROM(select distinct regexp_substr(#conbinedSHC#,'[^/]+', 1, level) shc from DUAL  
			connect by level <= length(regexp_replace(#conbinedSHC#, '[^/]+')) + 1) recv
			join mast_spl_hand_code spl on spl.code =  recv.shc 
			where nvl(spl.FBL_CRS_CHK_REQ,'N') = 'Y'
		]]>
			<isNotEmpty property="sch"> 
				AND shc not in <iterate property="sch" open="(" close=")" conjunction=",">#sch[]#</iterate>
			</isNotEmpty>
	</select>

	<select id="getErclPICount" parameterClass="map" resultClass="java.lang.Integer">
		SELECT count(*) from exp_pre_rcl_pi_dtl where pre_rcl_no = #PRE_RCL_NO#
		<isNotEmpty property="ULD_KEY"> 
				AND uld_key = #ULD_KEY#
		</isNotEmpty> 
	</select>

	<select id="getErclPICountForMix" parameterClass="map" resultClass="java.lang.Integer">
		SELECT count(*) from exp_pre_rcl_pi_dtl where pre_rcl_no = #PRE_RCL_NO# AND AWB_NO = #AWB_NO# AND AWB_DATE = to_date(#AWB_DATE#,'DDMONYY')
	</select>

<select id="getHOStatus_Ramp" parameterClass="cargo.cms.extsvc.bo.RampCheckInBO" resultClass="cargo.cms.extsvc.bo.RampCheckInBO" >
	SELECT DTL.CODE as statusCode,DTL.CODE_DESC as statusDesc FROM MAST_CODE_HD HD, MAST_CODE_DTL DTL WHERE
	DTL.CODE_TYPE = HD.CODE AND HD.GROUP_CODE='38'
	AND HD.CODE='TOWING_MBLE_STATUS'
	</select>			
	<select id="getHOStatus_chinese_Ramp" parameterClass="cargo.cms.extsvc.bo.RampCheckInBO" resultClass="cargo.cms.extsvc.bo.RampCheckInBO" >
	SELECT DTL.CODE as statusCode,DTL.CODE_DESC as statusDesc FROM MAST_CODE_HD HD, MAST_CODE_DTL DTL WHERE
	DTL.CODE_TYPE = HD.CODE AND HD.GROUP_CODE='38'
	AND HD.CODE='TOWING_CHN_STATUS'
	</select>	
<select id="getDollyULDDetails_TM_TRP" parameterClass="cargo.cms.extsvc.bo.RampCheckInBO" resultClass="cargo.cms.extsvc.bo.RampCheckInBO" >
SELECT inb.ULD_KEY AS uldKey,
       E.cool_dolly_id AS coolDollyId,
  E.DOLLY_ID       AS dollyId,
  (
  CASE
    WHEN (SELECT COUNT(1)
      FROM EDI_FFM_MSG ffmMSG
      JOIN EDI_FFM_ULD ffmULD
      ON ffmMSG.TR_NO = ffmULD.TR_NO
      JOIN edi_ffm_shp ffmshp
      ON ffmMSG.TR_NO        = ffmshp.TR_NO
      AND ffmULD.Doc_line_no = ffmshp.uDoc_line_no
      JOIN AWB A
      ON A.AWB_NO    = ffmshp.AWB_NO
      AND A.AWB_DATE = ffmshp.AWB_DATE
      JOIN MAST_SPL_HAND_CODE splCode
      ON (splCode.code                = a.spl_code1
      OR splCode.code                 = a.spl_code2
      OR splCode.code                 = a.spl_code3
      OR splCode.code                 = a.spl_code4
      OR splCode.code                 = a.spl_code5
      OR splCode.code                 = a.spl_code6
      OR splCode.code                 = a.spl_code7
      OR splCode.code                 = a.spl_code8
      OR splCode.code                 = a.spl_code9)
      AND splCode.PRIORTY_INBD_TRNSFR = 'Y'
      WHERE ffmMSG.FFM_STATUS         = 'P'
      AND ffmMSG.flt_key              = #fltKey#
      AND ffmMSG.flt_date             =#fltDate#
      AND ffmULD.uld_key              =inb.ULD_KEY) > 0
    THEN 'Y'
    ELSE 'N'
  END) pri,
  DECODE(E.DOLLY_ID,'','','null','',
  (SELECT TO_CHAR(M.LM_DATE,'DDMONYY HH24:MI:SS')
  FROM IMP_RAMP_DOLLY_HD M
  WHERE M.DOLLY_ID=E.DOLLY_ID
  AND M.FLT_KEY   =#fltKey#
  AND M.FLT_DATE  =#fltDate#
  AND ROWNUM      =1
  )) lastModDate,
  E.DAM_IND   AS damInd,
  E.EIC_IND   AS eicInd,
  E.EMPTY_IND AS emptyInd,
  E.SEQ_NO    AS seqNo,
  (
  CASE
    WHEN (SELECT COUNT(1)
      FROM IMP_RAMP_DOLLY_HD
      WHERE DOLLY_ID  = E.DOLLY_ID
      AND HOVER_DATE IS NOT NULL
      AND HO_NO      IS NOT NULL) > 0
    THEN 'Y'
    ELSE 'N'
  END) AS hoverStat,
  ddtULD.CNTG_FLT_KEY cnctgFltkey,
  TO_CHAR(ddtULD.CNTG_FLT_DATE, 'DDMONYY') cnctgFltDate,
  (SELECT ACFT_PRK_BAY
  FROM FLT_OPR
  WHERE FLT_KEY                  =ddtULD.CNTG_FLT_KEY
  AND TO_CHAR(SCH_DATE,'DDMONYY')=TO_CHAR(ddtULD.CNTG_FLT_DATE, 'DDMONYY')
  AND FLT_TYPE                   = 'D'
  ) AS cnctgFltBay,
  (
  CASE
    WHEN (SELECT COUNT(1)
      FROM v_ddt_dtl
      WHERE FLT_KEY=#fltKey#
      AND FLT_DATE =#fltDate#
      AND ULD_KEY  =inb.ULD_KEY
      AND TRF_TYPE ='TT') > 0
    THEN 'Online ULD'
    ELSE 'Terminal ULD'
  END) AS uldType,
  (
  CASE
    WHEN (SELECT COUNT(1)
      FROM EDI_FFM_MSG ffmMSG
      JOIN EDI_FFM_ULD ffmULD
      ON ffmMSG.TR_NO = ffmULD.TR_NO
      JOIN edi_ffm_shp ffmshp
      ON ffmMSG.TR_NO        = ffmshp.TR_NO
      AND ffmULD.Doc_line_no = ffmshp.uDoc_line_no
      JOIN AWB A
      ON A.AWB_NO             = ffmshp.AWB_NO
      AND A.AWB_DATE          = ffmshp.AWB_DATE
      WHERE ffmMSG.FFM_STATUS = 'P'
      AND ffmMSG.flt_key      = #fltKey#
      AND ffmMSG.flt_date     =#fltDate#
      AND ffmULD.uld_key      =inb.ULD_KEY
      AND (A.SPL_CODE1        = 'EPD'
      OR A.SPL_CODE2          = 'EPD'
      OR A.SPL_CODE3          = 'EPD'
      OR A.SPL_CODE4          = 'EPD'
      OR A.SPL_CODE5          = 'EPD'
      OR A.SPL_CODE6          = 'EPD'
      OR A.SPL_CODE7          = 'EPD'
      OR A.SPL_CODE8          = 'EPD'
      OR A.SPL_CODE9          = 'EPD')) > 0
    THEN 'Y'
    ELSE 'N'
  END) shcInd,
  (SELECT load_type
  FROM edi_cpm_dtl
  WHERE flt_key=#fltKey#
  AND flt_date =#fltDate#
  AND uld_key  =inb.ULD_KEY
  AND rownum   =1
  ) AS cpmType,
  NVL(E.REJECT_IND,'N') AS rejInd,
  (CASE WHEN E.RTN_USER IS NOT NULL THEN 'Y' ELSE 'N' END) AS retInd,
  DECODE(E.REJECT_IND,'Y','Y',DECODE(E.RTN_USER,'','N','Y')) AS rejretInd
FROM IMP_RAMP_INB_CHK_DTL inb
JOIN IMP_RAMP_CHK_HD hd
ON hd.TR_NO = inb.TR_NO
JOIN FLT_OPR f
ON f.FLT_TYPE                     = 'A'
AND f.FLT_KEY                     = inb.FLT_KEY
AND TO_CHAR(f.SCH_DATE,'DDMONYY') = TO_CHAR(inb.FLT_DATE,'DDMONYY')
LEFT JOIN IMP_ULD_LIST uld
ON uld.FLT_KEY                      = inb.FLT_KEY
AND TO_CHAR(uld.FLT_DATE, 'DDMONYY')= TO_CHAR(inb.FLT_DATE, 'DDMONYY')
AND uld.ULD_KEY                     = inb.ULD_KEY
LEFT JOIN flt_opr_events flt
ON TO_CHAR(flt.SCH_DATE,'DDMONYY') = TO_CHAR(inb.FLT_DATE,'DDMONYY')
AND flt.RAMP_COMPL_YN              = 'Y'
AND flt.FLT_TYPE                   = 'A'
AND flt.CARR_CODE                  = inb.CARR_CODE
AND flt.FLT_NO                     = inb.FLT_NO
AND flt.FLT_KEY                    = inb.FLT_KEY
LEFT JOIN IMP_RAMP_DOLLY_DTL E
ON E.FLT_KEY                      = inb.FLT_KEY
AND TO_CHAR(E.FLT_DATE,'DDMONYY') = TO_CHAR(inb.FLT_DATE,'DDMONYY')
AND E.ULD_KEY                     = inb.ULD_KEY
LEFT JOIN ULD_INVENTORY K
ON K.ULD_KEY = inb.ULD_KEY
LEFT JOIN IMP_RAMP_CHK_DTL dtl
ON hd.TR_NO     = dtl.TR_NO
AND inb.ULD_KEY = dtl.ULD_KEY
LEFT OUTER JOIN DDT_MSG MSG
ON inb.FLT_KEY    = MSG.FLT_KEY
AND inb.FLT_DATE  = MSG.FLT_DATE
AND MSG.DDT_STATUS='P'
LEFT OUTER JOIN DDT_ULD ddtULD
ON ddtULD.ULD_KEY                   = inb.ULD_KEY
AND MSG.TR_NO                       = ddtULD.TR_NO
WHERE hd.flt_key                    = #fltKey#
AND TO_CHAR(hd.FLT_DATE, 'DDMONYY') = #fltDate#
AND E.DOLLY_ID                      = #tripNumber#
UNION
SELECT B.uld_key AS uldKey,
E.cool_dolly_id AS coolDollyId,
  E.DOLLY_ID     AS dollyId,
  (
  CASE
    WHEN (SELECT COUNT(1)
      FROM EDI_FFM_MSG ffmMSG
      JOIN EDI_FFM_ULD ffmULD
      ON ffmMSG.TR_NO = ffmULD.TR_NO
      JOIN edi_ffm_shp ffmshp
      ON ffmMSG.TR_NO        = ffmshp.TR_NO
      AND ffmULD.Doc_line_no = ffmshp.uDoc_line_no
      JOIN AWB A
      ON A.AWB_NO    = ffmshp.AWB_NO
      AND A.AWB_DATE = ffmshp.AWB_DATE
      JOIN MAST_SPL_HAND_CODE splCode
      ON (splCode.code                = a.spl_code1
      OR splCode.code                 = a.spl_code2
      OR splCode.code                 = a.spl_code3
      OR splCode.code                 = a.spl_code4
      OR splCode.code                 = a.spl_code5
      OR splCode.code                 = a.spl_code6
      OR splCode.code                 = a.spl_code7
      OR splCode.code                 = a.spl_code8
      OR splCode.code                 = a.spl_code9)
      AND splCode.PRIORTY_INBD_TRNSFR = 'Y'
      WHERE ffmMSG.FFM_STATUS         = 'P'
      AND ffmMSG.flt_key              = #fltKey#
      AND ffmMSG.flt_date             =#fltDate#
      AND ffmULD.uld_key              =B.ULD_KEY) > 0
    THEN 'Y'
    ELSE 'N'
  END) pri,
  DECODE(E.DOLLY_ID,'','','null','',
  (SELECT TO_CHAR(M.LM_DATE,'DDMONYY HH24:MI:SS')
  FROM IMP_RAMP_DOLLY_HD M
  WHERE M.DOLLY_ID=E.DOLLY_ID
  AND M.FLT_KEY   =#fltKey#
  AND M.FLT_DATE  =#fltDate#
  AND ROWNUM      =1
  )) lastModDate,
  E.DAM_IND   AS damInd,
  E.EIC_IND   AS eicInd,
  E.EMPTY_IND AS emptyInd,
  E.SEQ_NO    AS seqNo,
  (
  CASE
    WHEN (SELECT COUNT(1)
      FROM IMP_RAMP_DOLLY_HD
      WHERE DOLLY_ID  = E.DOLLY_ID
      AND HOVER_DATE IS NOT NULL
      AND HO_NO      IS NOT NULL) > 0
    THEN 'Y'
    ELSE 'N'
  END)            AS hoverStat,
  ''              AS cnctgFltkey,
  ''              AS cnctgFltDate,
  ''              AS cnctgFltBay,
  'Other CPM ULD' AS uldType,
  (
  CASE
    WHEN (SELECT COUNT(1)
      FROM EDI_FFM_MSG ffmMSG
      JOIN EDI_FFM_ULD ffmULD
      ON ffmMSG.TR_NO = ffmULD.TR_NO
      JOIN edi_ffm_shp ffmshp
      ON ffmMSG.TR_NO        = ffmshp.TR_NO
      AND ffmULD.Doc_line_no = ffmshp.uDoc_line_no
      JOIN AWB A
      ON A.AWB_NO             = ffmshp.AWB_NO
      AND A.AWB_DATE          = ffmshp.AWB_DATE
      WHERE ffmMSG.FFM_STATUS = 'P'
      AND ffmMSG.flt_key      = #fltKey#
      AND ffmMSG.flt_date     =#fltDate#
      AND ffmULD.uld_key      =B.uld_key
      AND (A.SPL_CODE1        = 'EPD'
      OR A.SPL_CODE2          = 'EPD'
      OR A.SPL_CODE3          = 'EPD'
      OR A.SPL_CODE4          = 'EPD'
      OR A.SPL_CODE5          = 'EPD'
      OR A.SPL_CODE6          = 'EPD'
      OR A.SPL_CODE7          = 'EPD'
      OR A.SPL_CODE8          = 'EPD'
      OR A.SPL_CODE9          = 'EPD')) > 0
    THEN 'Y'
    ELSE 'N'
  END) AS shcInd,
  (SELECT load_type
  FROM edi_cpm_dtl
  WHERE flt_key=#fltKey#
  AND flt_date =#fltDate#
  AND uld_key  =B.uld_key
  AND rownum   =1
  ) AS cpmType,
  NVL(E.REJECT_IND,'N') AS rejInd,
  (CASE WHEN E.RTN_USER IS NOT NULL THEN 'Y' ELSE 'N' END) AS retInd,
  DECODE(E.REJECT_IND,'Y','Y',DECODE(E.RTN_USER,'','N','Y')) AS rejretInd
FROM EDI_CPM_DTL B
JOIN EDI_CPM A
ON A.FLT_KEY   = B.FLT_KEY
AND A.FLT_DATE = B.FLT_DATE
LEFT JOIN IMP_RAMP_DOLLY_DTL E
ON E.FLT_KEY                      = A.FLT_KEY
AND TO_CHAR(E.FLT_DATE,'DDMONYY') = TO_CHAR(A.FLT_DATE,'DDMONYY')
AND E.ULD_KEY                     = B.ULD_KEY
WHERE B.FLT_KEY                   = A.FLT_KEY
AND B.FLT_DATE                    = A.FLT_DATE
AND A.FLT_KEY                     =#fltKey#
AND A.FLT_DATE                    = #fltDate#
AND E.DOLLY_ID                    = #tripNumber#
AND B.ULD_KEY                    IS NOT NULL
AND B.ULD_KEY NOT                IN
  (SELECT inb.ULD_KEY
  FROM IMP_RAMP_INB_CHK_DTL inb
  JOIN IMP_RAMP_CHK_HD hd
  ON hd.TR_NO = inb.TR_NO
  JOIN FLT_OPR f
  ON f.FLT_TYPE                     = 'A'
  AND f.FLT_KEY                     = inb.FLT_KEY
  AND TO_CHAR(f.SCH_DATE,'DDMONYY') = TO_CHAR(inb.FLT_DATE,'DDMONYY')
  LEFT JOIN IMP_ULD_LIST uld
  ON uld.FLT_KEY                      = inb.FLT_KEY
  AND TO_CHAR(uld.FLT_DATE, 'DDMONYY')= TO_CHAR(inb.FLT_DATE, 'DDMONYY')
  AND uld.ULD_KEY                     = inb.ULD_KEY
  LEFT JOIN flt_opr_events flt
  ON TO_CHAR(flt.SCH_DATE,'DDMONYY') = TO_CHAR(inb.FLT_DATE,'DDMONYY')
  AND flt.RAMP_COMPL_YN              = 'Y'
  AND flt.FLT_TYPE                   = 'A'
  AND flt.CARR_CODE                  = inb.CARR_CODE
  AND flt.FLT_NO                     = inb.FLT_NO
  AND flt.FLT_KEY                    = inb.FLT_KEY
  LEFT JOIN IMP_RAMP_DOLLY_DTL E
  ON E.FLT_KEY                      = inb.FLT_KEY
  AND TO_CHAR(E.FLT_DATE,'DDMONYY') = TO_CHAR(inb.FLT_DATE,'DDMONYY')
  AND E.ULD_KEY                     = inb.ULD_KEY
  LEFT JOIN ULD_INVENTORY K
  ON K.ULD_KEY = inb.ULD_KEY
  LEFT JOIN IMP_RAMP_CHK_DTL dtl
  ON hd.TR_NO     = dtl.TR_NO
  AND inb.ULD_KEY = dtl.ULD_KEY
  LEFT OUTER JOIN DDT_MSG MSG
  ON inb.FLT_KEY    = MSG.FLT_KEY
  AND inb.FLT_DATE  = MSG.FLT_DATE
  AND MSG.DDT_STATUS='P'
  LEFT OUTER JOIN DDT_ULD ddtULD
  ON ddtULD.ULD_KEY                   = inb.ULD_KEY
  AND MSG.TR_NO                       = ddtULD.TR_NO
  WHERE hd.flt_key                    = #fltKey#
  AND TO_CHAR(hd.FLT_DATE, 'DDMONYY') = #fltDate#
  )
UNION
SELECT E.uld_key AS uldKey,
E.cool_dolly_id AS coolDollyId,
  E.DOLLY_ID     AS dollyId,
  (
  CASE
    WHEN (SELECT COUNT(1)
      FROM EDI_FFM_MSG ffmMSG
      JOIN EDI_FFM_ULD ffmULD
      ON ffmMSG.TR_NO = ffmULD.TR_NO
      JOIN edi_ffm_shp ffmshp
      ON ffmMSG.TR_NO        = ffmshp.TR_NO
      AND ffmULD.Doc_line_no = ffmshp.uDoc_line_no
      JOIN AWB A
      ON A.AWB_NO    = ffmshp.AWB_NO
      AND A.AWB_DATE = ffmshp.AWB_DATE
      JOIN MAST_SPL_HAND_CODE splCode
      ON (splCode.code                = a.spl_code1
      OR splCode.code                 = a.spl_code2
      OR splCode.code                 = a.spl_code3
      OR splCode.code                 = a.spl_code4
      OR splCode.code                 = a.spl_code5
      OR splCode.code                 = a.spl_code6
      OR splCode.code                 = a.spl_code7
      OR splCode.code                 = a.spl_code8
      OR splCode.code                 = a.spl_code9)
      AND splCode.PRIORTY_INBD_TRNSFR = 'Y'
      WHERE ffmMSG.FFM_STATUS         = 'P'
      AND ffmMSG.flt_key              = #fltKey#
      AND ffmMSG.flt_date             =#fltDate#
      AND ffmULD.uld_key              =E.ULD_KEY) > 0
    THEN 'Y'
    ELSE 'N'
  END) pri,
  DECODE(E.DOLLY_ID,'','','null','',
  (SELECT TO_CHAR(M.LM_DATE,'DDMONYY HH24:MI:SS')
  FROM IMP_RAMP_DOLLY_HD M
  WHERE M.DOLLY_ID=E.DOLLY_ID
  AND M.FLT_KEY   =#fltKey#
  AND M.FLT_DATE  =#fltDate#
  AND ROWNUM      =1
  )) lastModDate,
  E.DAM_IND   AS damInd,
  E.EIC_IND   AS eicInd,
  E.EMPTY_IND AS emptyInd,
  E.SEQ_NO    AS seqNo,
  (
  CASE
    WHEN (SELECT COUNT(1)
      FROM IMP_RAMP_DOLLY_HD
      WHERE DOLLY_ID  = E.DOLLY_ID
      AND HOVER_DATE IS NOT NULL
      AND HO_NO      IS NOT NULL) > 0
    THEN 'Y'
    ELSE 'N'
  END) AS hoverStat,
  ''   AS cnctgFltkey,
  ''   AS cnctgFltDate,
  ''   AS cnctgFltBay,
  (
  CASE
    WHEN (SELECT COUNT(1)
      FROM v_ddt_dtl
      WHERE FLT_KEY=#fltKey#
      AND FLT_DATE =#fltDate#
      AND ULD_KEY  =E.ULD_KEY
      AND TRF_TYPE ='TT') > 0
    THEN 'Online ULD'
    ELSE 'Terminal ULD'
  END) AS uldType,
  (
  CASE
    WHEN (SELECT COUNT(1)
      FROM EDI_FFM_MSG ffmMSG
      JOIN EDI_FFM_ULD ffmULD
      ON ffmMSG.TR_NO = ffmULD.TR_NO
      JOIN edi_ffm_shp ffmshp
      ON ffmMSG.TR_NO        = ffmshp.TR_NO
      AND ffmULD.Doc_line_no = ffmshp.uDoc_line_no
      JOIN AWB A
      ON A.AWB_NO             = ffmshp.AWB_NO
      AND A.AWB_DATE          = ffmshp.AWB_DATE
      WHERE ffmMSG.FFM_STATUS = 'P'
      AND ffmMSG.flt_key      = #fltKey#
      AND ffmMSG.flt_date     =#fltDate#
      AND ffmULD.uld_key      =E.uld_key
      AND (A.SPL_CODE1        = 'EPD'
      OR A.SPL_CODE2          = 'EPD'
      OR A.SPL_CODE3          = 'EPD'
      OR A.SPL_CODE4          = 'EPD'
      OR A.SPL_CODE5          = 'EPD'
      OR A.SPL_CODE6          = 'EPD'
      OR A.SPL_CODE7          = 'EPD'
      OR A.SPL_CODE8          = 'EPD'
      OR A.SPL_CODE9          = 'EPD')) > 0
    THEN 'Y'
    ELSE 'N'
  END) AS shcInd,
  (SELECT load_type
  FROM edi_cpm_dtl
  WHERE flt_key=#fltKey#
  AND flt_date =#fltDate#
  AND uld_key  =E.uld_key
  AND rownum   =1
  ) AS cpmType,
  NVL(E.REJECT_IND,'N') AS rejInd,
  (CASE WHEN E.RTN_USER IS NOT NULL THEN 'Y' ELSE 'N' END) AS retInd,
  DECODE(E.REJECT_IND,'Y','Y',DECODE(E.RTN_USER,'','N','Y')) AS rejretInd
FROM IMP_RAMP_DOLLY_DTL E
JOIN IMP_RAMP_DOLLY_HD F
ON F.FLT_KEY   = E.FLT_KEY
AND F.FLT_DATE = E.FLT_DATE
AND E.DOLLY_ID = F.DOLLY_ID
LEFT JOIN ULD_INVENTORY K
ON K.ULD_KEY       = E.ULD_KEY
WHERE E.FLT_KEY    =#fltKey#
AND E.FLT_DATE     = #fltDate#
AND E.DOLLY_ID     = #tripNumber#
AND E.ULD_KEY     IS NOT NULL
AND E.ULD_KEY NOT IN
  (SELECT inb.ULD_KEY AS uldKey
  FROM IMP_RAMP_INB_CHK_DTL inb
  JOIN IMP_RAMP_CHK_HD hd
  ON hd.TR_NO = inb.TR_NO
  JOIN FLT_OPR f
  ON f.FLT_TYPE                     = 'A'
  AND f.FLT_KEY                     = inb.FLT_KEY
  AND TO_CHAR(f.SCH_DATE,'DDMONYY') = TO_CHAR(inb.FLT_DATE,'DDMONYY')
  LEFT JOIN IMP_ULD_LIST uld
  ON uld.FLT_KEY                      = inb.FLT_KEY
  AND TO_CHAR(uld.FLT_DATE, 'DDMONYY')= TO_CHAR(inb.FLT_DATE, 'DDMONYY')
  AND uld.ULD_KEY                     = inb.ULD_KEY
  LEFT JOIN flt_opr_events flt
  ON TO_CHAR(flt.SCH_DATE,'DDMONYY') = TO_CHAR(inb.FLT_DATE,'DDMONYY')
  AND flt.RAMP_COMPL_YN              = 'Y'
  AND flt.FLT_TYPE                   = 'A'
  AND flt.CARR_CODE                  = inb.CARR_CODE
  AND flt.FLT_NO                     = inb.FLT_NO
  AND flt.FLT_KEY                    = inb.FLT_KEY
  LEFT JOIN IMP_RAMP_DOLLY_DTL E
  ON E.FLT_KEY                      = inb.FLT_KEY
  AND TO_CHAR(E.FLT_DATE,'DDMONYY') = TO_CHAR(inb.FLT_DATE,'DDMONYY')
  AND E.ULD_KEY                     = inb.ULD_KEY
  LEFT JOIN ULD_INVENTORY K
  ON K.ULD_KEY = inb.ULD_KEY
  LEFT JOIN IMP_RAMP_CHK_DTL dtl
  ON hd.TR_NO     = dtl.TR_NO
  AND inb.ULD_KEY = dtl.ULD_KEY
  LEFT OUTER JOIN DDT_MSG MSG
  ON inb.FLT_KEY    = MSG.FLT_KEY
  AND inb.FLT_DATE  = MSG.FLT_DATE
  AND MSG.DDT_STATUS='P'
  LEFT OUTER JOIN DDT_ULD ddtULD
  ON ddtULD.ULD_KEY                   = inb.ULD_KEY
  AND MSG.TR_NO                       = ddtULD.TR_NO
  WHERE hd.flt_key                    = #fltKey#
  AND TO_CHAR(hd.FLT_DATE, 'DDMONYY') = #fltDate#
  AND E.DOLLY_ID                      = #tripNumber#
  UNION ALL
  SELECT B.uld_key AS uldKey
  FROM EDI_CPM_DTL B
  JOIN EDI_CPM A
  ON A.FLT_KEY   = B.FLT_KEY
  AND A.FLT_DATE = B.FLT_DATE
  LEFT JOIN IMP_RAMP_DOLLY_DTL E
  ON E.FLT_KEY                      = A.FLT_KEY
  AND TO_CHAR(E.FLT_DATE,'DDMONYY') = TO_CHAR(A.FLT_DATE,'DDMONYY')
  AND E.ULD_KEY                     = B.ULD_KEY
  WHERE B.FLT_KEY                   = A.FLT_KEY
  AND B.FLT_DATE                    = A.FLT_DATE
  AND A.FLT_KEY                     =#fltKey#
  AND A.FLT_DATE                    = #fltDate#
  AND E.DOLLY_ID                    = #tripNumber#
  AND B.ULD_KEY                    IS NOT NULL
  AND B.ULD_KEY NOT                IN
    (SELECT inb.ULD_KEY AS uldKey
    FROM IMP_RAMP_INB_CHK_DTL inb
    JOIN IMP_RAMP_CHK_HD hd
    ON hd.TR_NO = inb.TR_NO
    JOIN FLT_OPR f
    ON f.FLT_TYPE                     = 'A'
    AND f.FLT_KEY                     = inb.FLT_KEY
    AND TO_CHAR(f.SCH_DATE,'DDMONYY') = TO_CHAR(inb.FLT_DATE,'DDMONYY')
    LEFT JOIN IMP_ULD_LIST uld
    ON uld.FLT_KEY                      = inb.FLT_KEY
    AND TO_CHAR(uld.FLT_DATE, 'DDMONYY')= TO_CHAR(inb.FLT_DATE, 'DDMONYY')
    AND uld.ULD_KEY                     = inb.ULD_KEY
    LEFT JOIN flt_opr_events flt
    ON TO_CHAR(flt.SCH_DATE,'DDMONYY') = TO_CHAR(inb.FLT_DATE,'DDMONYY')
    AND flt.RAMP_COMPL_YN              = 'Y'
    AND flt.FLT_TYPE                   = 'A'
    AND flt.CARR_CODE                  = inb.CARR_CODE
    AND flt.FLT_NO                     = inb.FLT_NO
    AND flt.FLT_KEY                    = inb.FLT_KEY
    LEFT JOIN IMP_RAMP_CHK_DTL dtl
    ON hd.TR_NO     = dtl.TR_NO
    AND inb.ULD_KEY = dtl.ULD_KEY
    LEFT OUTER JOIN DDT_MSG MSG
    ON inb.FLT_KEY    = MSG.FLT_KEY
    AND inb.FLT_DATE  = MSG.FLT_DATE
    AND MSG.DDT_STATUS='P'
    LEFT OUTER JOIN DDT_ULD ddtULD
    ON ddtULD.ULD_KEY                   = inb.ULD_KEY
    AND MSG.TR_NO                       = ddtULD.TR_NO
    WHERE hd.flt_key                    = #fltKey#
    AND TO_CHAR(hd.FLT_DATE, 'DDMONYY') = #fltDate#
    AND inb.ULD_KEY                    IS NOT NULL
    )
  )
ORDER BY uldType
</select>



<select id="getPrintULDDetails_ramp_TISL"  parameterClass="cargo.cms.common.utils.bo.TISLReportBO"  resultClass="cargo.cms.common.utils.bo.TISLReportBO">
		SELECT A.FLT_KEY                     AS fltKey,
  TO_CHAR(A.FLT_DATE,'DDMONYY')      AS fltDate,
  TO_CHAR(SYSDATE,'DDMONYY HH24:MI') AS currentTime,
  (
  CASE
    WHEN (SELECT COUNT(1)
      FROM EDI_FFM_MSG ffmMSG
      JOIN EDI_FFM_ULD ffmULD
      ON ffmMSG.TR_NO = ffmULD.TR_NO
      JOIN edi_ffm_shp ffmshp
      ON ffmMSG.TR_NO        = ffmshp.TR_NO
      AND ffmULD.Doc_line_no = ffmshp.uDoc_line_no
      JOIN AWB A
      ON A.AWB_NO    = ffmshp.AWB_NO
      AND A.AWB_DATE = ffmshp.AWB_DATE
      JOIN MAST_SPL_HAND_CODE splCode
      ON (splCode.code                = a.spl_code1
      OR splCode.code                 = a.spl_code2
      OR splCode.code                 = a.spl_code3 or splCode.code = a.spl_code4
      OR splCode.code                 = a.spl_code5
      OR splCode.code                 = a.spl_code6 or splCode.code = a.spl_code7
      OR splCode.code                 = a.spl_code8
      OR splCode.code                 = a.spl_code9)
      AND splCode.PRIORTY_INBD_TRNSFR = 'Y'
      WHERE ffmMSG.FFM_STATUS         = 'P'
      AND ffmMSG.flt_key              = A.FLT_KEY
      AND ffmMSG.flt_date             =TO_CHAR(A.FLT_DATE,'DDMONYY')
      AND ffmULD.uld_key              =B.ULD_KEY) > 0
    THEN 'Y'
    ELSE 'N'
  END) pri,
  B.ULD_KEY AS uldKey,
  NVL(
  (SELECT toid.HO_AREA
  FROM tow_order_in_dtl toid
  JOIN tow_order_in toi
  ON toi.to_no      = toid.to_no
  WHERE toi.flt_key = A.FLT_KEY
  AND toi.flt_date  = A.FLT_DATE
  AND toid.uld_key  = B.ULD_KEY
  AND rownum        = 1
  ),PKG_IMP.fun_get_ho_area(A.FLT_KEY,A.FLT_DATE,B.ULD_KEY)) AS locCode,
  'TI'
  ||A.TI_NO AS hoverNo,
  DECODE(PKG_COMMON.get_flt_ata(A.FLT_KEY, A.FLT_DATE, 'A','DD'),NULL,DECODE(PKG_COMMON.get_flt_eta(A.FLT_KEY, A.FLT_DATE, 'A','DD'),NULL, PKG_COMMON.get_flt_sta(A.FLT_KEY, A.FLT_DATE, 'A','DD'),PKG_COMMON.get_flt_eta(A.FLT_KEY, A.FLT_DATE, 'A','DD')),PKG_COMMON.get_flt_ata(A.FLT_KEY, A.FLT_DATE, 'A','DD')
  ||'*') AS ata,
  (SELECT load_type
  FROM edi_cpm_dtl
  WHERE flt_key=a.flt_key
  AND flt_date =a.flt_date
  AND uld_key  =B.ULD_KEY
  AND rownum   =1
  ) AS cpmType,
  NVL(
  (SELECT CHKIN_YN
  FROM IMP_RAMP_CHK_DTL
  WHERE FLT_KEY=a.flt_key
  AND FLT_DATE =a.flt_date
  AND ULD_KEY  =b.uld_key
  AND ROWNUM   =1
  ),'N') AS chkinInd
FROM imp_ramp_ti_hd A
JOIN imp_ramp_ti_dtl B
ON B.FLT_KEY    = A.FLT_KEY
AND B.FLT_DATE = A.FLT_DATE
AND B.ti_no    = A.ti_no
LEFT JOIN ULD_INVENTORY C
ON C.ULD_KEY = B.ULD_KEY
WHERE A.ti_no=#tiNumber#
ORDER BY to_number(b.seq_no) ASC
		</select>
  
<select id="getimageTransId" parameterClass="cargo.cms.extsvc.bo.EsrfUploadDocBO" resultClass="java.lang.String" >
	SELECT IMG_TRANS_ID as img_trans_id FROM imp_esrf_document where AWB_NO = #awbNo# AND AWB_DATE = to_date(#awbDate#,'DDMONYY')
</select>

<insert id="saveAAHKWebServiceRequestDtls" parameterClass="java.util.Map">
		INSERT INTO LOG_AAHK_REQ_RESP_DTLS(TR_NO,SENDER,REQUEST_URL,SERVICE_NAME,REQUEST_MSG,RCVD_DT,AGENT_NAME,AGENT_CODE,ESRF_NO,AWB_NO,AWB_DATE,RESPONSE_MSG,SENT_DT) 
		VALUES (LOG_AAHK_REQ_RESP_SEQ.NEXTVAL,#SENDER#,#REQUEST_URL#,#SERVICE_NAME#,#REQUEST_MSG#,to_date(#RCVD_DT#,'DDMONYYYY HH24MISS'),#AGENT_NAME#,#AGENT_CODE#,#ESRF_NO#,#AWB_NO#,#AWB_DATE#,#RESPONSE_MSG#,SYSDATE)
</insert>
<select id="getAgentDetailsByAWB" parameterClass="cargo.cms.extsvc.bo.EsrfUploadDocBO" resultClass="cargo.cms.extsvc.bo.EsrfUploadDocBO" >
select APPNTD_AGENT as agentName,
AGENT_CUST_NO as agentCode
from IMP_CAR_AWB
where AWB_NO = #awbNo# AND AWB_DATE = #awbDate#
</select>


<select id="getPaymentshipmentList" parameterClass="cargo.cms.billing.bo.ChargeBO"	resultClass="cargo.cms.extsvc.bo.CDPImportIncomingBO">
			SELECT FLT_KEY transportIdentifier,
			  to_char(FLT_DATE,'DDMONYY') transportDate,
			  'K' AS unit,
			  SUM (manifest_wt) value,
			  SUM(manifest_pcs) totalPieceCount
				FROM IMP_CAR_SHP 
				WHERE AWB_NO =  #awbNo#
				AND AWB_DATE = to_date(#awbDate#, 'DDMONYY')
				GROUP BY FLT_KEY, FLT_DATE 
</select>

<insert id="savePaymentProcessing" parameterClass="cargo.cms.extsvc.bo.CDPImportIncomingBO">
			INSERT
			INTO imp_payment_process_queue
			  (
			    TR_NO,
			    AGENT_FULL_NAME,
			    AGENT_NAME,
			    AGENT_CODE,
			    STATUS,
			    TR_TYPE,
			    AWB_NO,
			    AWB_DATE,
			    AGENT_HKID,
			    REQUEST_ID,
			    REQUEST_DATE,
			    CR_USER_ID,
			    CR_DATE,
			    LM_USER_ID,
			    LM_DATE,
			    HKID,
			    AUTH_REP_NAME,
			    TXN_NO,
			    HKID_HASH
			  )
			  VALUES
			  (
			    #trNum#,
			    #agentFullName#,
			    #agentName#,
			    #agentCode#,
			    'P',
			    'ESRF',
			    #awbNum#,
			    #awbDate#,
			    #nationalID#,
			    #paymentID#,
			    to_date(#dateTimeStr#,'DDMONYY HH24MI'),
			    'AAHK',
			    SYSDATE,
			    'AAHK',
			    SYSDATE,
			    #hkid#,
			    #authPersonName#,
			    #txnNo#,
			    #nationalIdHash#
			  )
</insert>




	<update id="updateAAHKESrfProccessingRecord" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
		update IMP_PAYMENT_PROCESS_QUEUE set 
		 COMP_DATE = SYSDATE, STATUS = 'C',
		 REMARKS = #errorRemarks#,LM_DATE = SYSDATE,LM_USER_ID = #userID# ,
		 REF_KEY = #refKey#, FLT_KEY = #flightKey#, FLT_DATE =#flightDate#, CDIF_NO = #cdifNo#, SRF_NO = #srfNo# , TR_TYPE = 'ESRF'
		WHERE TR_NO = #latestBatchJob# AND COMP_DATE is null
	 </update>


	 <select id="getAAHKEsrfHAWBList"  parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO"  resultClass="java.util.HashMap">
	 	SELECT hawb_no as HAWB, to_char(hawb_pcs) as PC,
			(SELECT cc_code  FROM (SELECT t1.cc_code FROM V_CST_CC_CODE_ALL t1 WHERE awb_no = #awbNo#  
					and awb_date = to_date(#awbDate#,'DDMONYY') AND NVL(hawb_no, '000000000000000000') = hawb.hawb_no
		            <isNotEmpty property="flightKey" prepend="AND">
			       		FLT_KEY=#flightKey#
			     	</isNotEmpty>
		            <isNotEmpty property="flightDate" prepend="AND">
			       		 TO_CHAR(FLT_DATE,'DDMONYY')= #flightDate# 
			     	</isNotEmpty> 
					  AND t1.flt_key NOT LIKE 'NB%') WHERE rownum = 1) AS CODE
				FROM edi_fhl_hawb hawb where tr_no in (SELECT tr_no FROM edi_fhl where awb_no = #awbNo# and awb_date = to_date(#awbDate#,'DDMONYY')) 
	</select>

	<update id="updateIntoEsrf" parameterClass="cargo.cms.extsvc.bo.EsrfUploadDocBO">
		UPDATE IMP_ESRF_DOCUMENT SET TR_TYPE = #trType# , 
		DOC_SUBMIT_DATE = SYSDATE, status = DECODE(status,'REJECTED','SUBMITTED',status) , 
		LM_DATE = SYSDATE,LM_USER_ID = 'AAHK',DISCLAIMER = #disclaimer#, 
		FILE_NAME = #fileName#
		WHERE AWB_NO = #awbNo# AND AWB_DATE = #awbDate#
	</update>

	 <insert id="add_agent_details" parameterClass="cargo.cms.extsvc.bo.EsrfUploadDocBO" >
		INSERT INTO IMP_ESRF_DOCUMENT
		(TR_NO,
		AWB_NO,
		AWB_DATE,
		DOC_SUBMIT_DATE,
		AGENT_CODE,
		AGENT_NAME,
		STATUS,
		IMG_TRANS_ID,
		CR_USER_ID,
		CR_DATE,
		LM_USER_ID,
		LM_DATE,
		TR_TYPE,
		DISCLAIMER,
		FILE_NAME)
		VALUES
		(
		IMP_ESRF_DOCUMENT_SEQ.NEXTVAL,
		#awbNo#,
		#awbDate#,
		sysdate,
		#agentCode#,
		#agentName#,
		'SUBMITTED',
		#imgTransId#,
		'AAHK',
		SYSDATE,
		'AAHK',
		SYSDATE,
		#trType#,
		#disclaimer#,
		#fileName#)
	</insert>

	<delete id="deleterepAAHK" parameterClass="map"> 
	delete from CUST_AGENT_AUTH_REP where AUTH_REP_ID = #AUTH_REP_ID# AND CUST_NO = #CUST_NO# 
	</delete>


<select id="getAAHKEsrfInfo"  parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO"  resultClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
	 	select srf_pcs as srfPcs , srf_wt as srfWt ,
			to_char(srf_date,'DDMONYY HH24MI') as srfDate, 
			to_char(srf_expy_date,'DDMONYY HH24MI')  as srfExpiryDate ,
			coll_center as collectedByCode,
			awb_cc_code as ccCode,
			(SELECT ref_no FROM v_cst_cc_code_all  where awb_no = srf.awb_no and awb_date = srf.awb_date 
						and hawb_no = '000000000000000000' and cc_code = srf.awb_cc_code and rownum = 1) as refNo
			from imp_srf srf where srf_no = #srfNo#
	</select>

 <select id="getAAHKEsrfLocList"  parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO"  resultClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
	 	SELECT SUM(pcs) as pcs ,  SUM(wt) as wt,  locCode,  lspNo 
			FROM
			  (SELECT DECODE(INV.LOCN_PCS,NULL,' ',INV.LOCN_PCS)                       AS pcs,
			    DECODE(INV.LOCN_WT,NULL,' ',trim(TO_CHAR(INV.LOCN_WT,'9999999990D9'))) AS wt,
			    DECODE(INV.LOC_CODE,NULL,' ',INV.LOC_CODE)                             AS locCode,
			    DECODE(INV.LSP_NO,NULL,INV.ULD_KEY,INV.LSP_NO)                         AS lspNo
			    FROM IMP_SRF_AWB_INVENTORY inv   WHERE SRF_NO = #srfNo#
			) GROUP BY locCode,  lspNo
	</select>

<select id="sqlgetEnqTowList_mobile" parameterClass="java.lang.String" resultClass="cargo.cms.extsvc.bo.RclBO">
<![CDATA[
select t1.TO_NO toNumber,
       t1.FLT_KEY||'/'||TO_CHAR(t1.FLT_DATE,'DDMONYY') fltKeyDate, (SELECT CODE_DESC FROM CUST_COMPANY WHERE code = t2.rho_id) rhoDesc,
       (CASE WHEN EST_DATE IS NOT NULL THEN 
       (TO_CHAR(t2.EST_DATE,'DDMONYY')||' '||trim(SUBSTR(TRIM(TO_CHAR(t2.EST_TIME,'0000')),0,2))||':'||SUBSTR(TRIM(TO_CHAR(t2.EST_TIME,'0000')),3,4)) ELSE 
       (TO_CHAR(t2.SCH_DATE,'DDMONYY')||' '||trim(SUBSTR(TRIM(TO_CHAR(t2.SCH_TIME,'0000')),0,2))||':'||SUBSTR(TRIM(TO_CHAR(t2.SCH_TIME,'0000')),3,4)) END) etdStd,
	   t1.ho_area transferGrp,t1.ho_area2 transferGrp2,
     t1.HO_ZONE AS hoZone,
     T1.SHIFT_USER AS driverId,
     t1.Remarks as remarkTow,
     t2.ACFT_PRK_BAY AS parkingBay,
     TO_DATE((NVL(t2.EST_DATE, t2.SCH_DATE) || ' ' || TO_CHAR(NVL(t2.EST_TIME, t2.SCH_TIME), '0000')), 'DD-MON-YY HH24MI') ESTDATETIME,
     (CASE WHEN t1.STATUS = 'COMPLETE' THEN '' ELSE 
      CASE WHEN t1.STATUS = 'START' AND (SYSDATE > (t1.START_DATE + ((SELECT NVL(RULE_VALUE, 1) FROM CMSRULES WHERE RULE_CODE = 'TOW_ORDER_ASSIGN_TO_START'))/24/60)) THEN 'YELLOW' ELSE 
      CASE WHEN t1.SHIFT_USER IS NOT NULL AND t1.STATUS = 'ISSUED' AND (t1.MAN_ASSIGN_DATE is not null and SYSDATE > (t1.MAN_ASSIGN_DATE + ((SELECT NVL(RULE_VALUE, 1) FROM CMSRULES WHERE RULE_CODE = 'TOW_ORDER_START_TO_COMPLETE'))/24/60)) THEN 'RED' ELSE '' END
      END END) AS towOrderColor     
     from tow_order_out t1
      join flt_opr t2 on t1.flt_key=t2.flt_key and t1.flt_date=t2.sch_date and t2.flt_type = 'D'
      where  1=1 and t1.status in ('ISSUED','START') and
       	((TO_DATE(TO_CHAR(t2.SCH_DATE,'DDMONYY')||trim(to_char(t2.SCH_TIME,'0000')), 'DDMONYYHH24MI')
        BETWEEN SYSDATE-1 AND SYSDATE + ('60')/(60*24))
        OR 
        (TO_DATE(TO_CHAR(t2.EST_DATE,'DDMONYY')||trim(to_char(t2.EST_TIME,'0000')), 'DDMONYYHH24MI')
        BETWEEN SYSDATE-1 AND SYSDATE + ('60')/(60*24))
        )
        order by ESTDATETIME,t2.FLT_KEY
	]]> 
</select>
<select id="sqlgetOrderHandingList_mobile" parameterClass="java.lang.String" resultClass="cargo.cms.extsvc.bo.RclBO">
<![CDATA[
  select t1.TO_NO toNumber,
       t1.FLT_KEY||'/'||TO_CHAR(t1.FLT_DATE,'DDMONYY') fltKeyDate, 
       (SELECT CODE_DESC FROM CUST_COMPANY WHERE code = t2.rho_id) rhoDesc,
       (CASE WHEN EST_DATE IS NOT NULL THEN 
       (TO_CHAR(t2.EST_DATE,'DDMONYY')||' '||trim(SUBSTR(TRIM(TO_CHAR(t2.EST_TIME,'0000')),0,2))||':'||SUBSTR(TRIM(TO_CHAR(t2.EST_TIME,'0000')),3,4)) ELSE 
       (TO_CHAR(t2.SCH_DATE,'DDMONYY')||' '||trim(SUBSTR(TRIM(TO_CHAR(t2.SCH_TIME,'0000')),0,2))||':'||SUBSTR(TRIM(TO_CHAR(t2.SCH_TIME,'0000')),3,4)) END) etdStd,
	   t1.ho_area transferGrp,t1.ho_area2 transferGrp2,
     t1.HO_ZONE AS hoZone,
     t1.Remarks as remarkTow,
     T1.SHIFT_USER AS driverId,
     t2.ACFT_PRK_BAY AS parkingBay,
     TO_DATE((NVL(t2.EST_DATE, t2.SCH_DATE) || ' ' || TO_CHAR(NVL(t2.EST_TIME, t2.SCH_TIME), '0000')), 'DD-MON-YY HH24MI') ESTDATETIME,
     (CASE WHEN t1.STATUS = 'COMPLETE' THEN '' ELSE 
      CASE WHEN t1.STATUS = 'START' AND (SYSDATE > (t1.START_DATE + ((SELECT NVL(RULE_VALUE, 1) FROM CMSRULES WHERE RULE_CODE = 'TOW_ORDER_ASSIGN_TO_START'))/24/60)) THEN 'RED' ELSE 
      CASE WHEN t1.SHIFT_USER IS NOT NULL AND t1.STATUS = 'ISSUED' AND (t1.MAN_ASSIGN_DATE is not null and SYSDATE > (t1.MAN_ASSIGN_DATE + ((SELECT NVL(RULE_VALUE, 1) FROM CMSRULES WHERE RULE_CODE = 'TOW_ORDER_START_TO_COMPLETE'))/24/60)) THEN 'YELLOW' ELSE '' END
      END END) AS towOrderColor       
     from tow_order_out t1
      join flt_opr t2 on t1.flt_key=t2.flt_key and t1.flt_date=t2.sch_date and t2.flt_type = 'D'
      where  1=1 and t1.status in ('ISSUED','START')
      and UPPER(t1.shift_user) = UPPER(#PARAM#)
      ORDER BY ESTDATETIME,t1.FLT_KEY ASC
	]]> 
</select>	
<select id="sqlgetEnqTowULDList_mobile" parameterClass="java.lang.String" resultClass="cargo.cms.extsvc.bo.RclBO">
SELECT DTL.ULD_KEY AS uldKey,
HD.FLT_KEY AS fltKey, 
ULDEX.UIT_PRINT AS print,
LOC_CODE AS  locCode,
(SELECT TARGET FROM ULD_INVENTORY ULDINV WHERE ULDINV.ULD_KEY = DTL.ULD_KEY ) target,
TO_CHAR(HD.FLT_DATE,'DDMONYY') AS fltDate,HD.remarks,
 PKG_COMMON.GET_FLT_STA(HD.FLT_KEY,HD.FLT_DATE, 'D', 'DD') AS std,
 PKG_COMMON.GET_FLT_ETA(HD.FLT_KEY,HD.FLT_DATE, 'D', 'DD') AS etd 
 FROM TOW_ORDER_OUT HD, 
TOW_ORDER_OUT_DTL DTL , EXP_FLT_ULD ULDEX WHERE 
        DTL.TO_NO = HD.TO_NO AND ULDEX.ULD_KEY=DTL.ULD_KEY AND HD.TO_NO=#PARAM#
</select>

<update id="startTowOrder_mobile" parameterClass="cargo.cms.extsvc.bo.RclBO">
	UPDATE TOW_ORDER_OUT SET STATUS='START',START_DATE=SYSDATE WHERE TO_NO=#toNumber#
</update>


<delete id="removeTowOrder_mobile" parameterClass="cargo.cms.extsvc.bo.RclBO">
 DELETE FROM Tow_Order_Out_Dtl WHERE TO_NO=#toNumber# AND ULD_KEY=#uldKey#
 </delete>


<select id="getReturn_LocnList_TM" resultClass="cargo.cms.extsvc.bo.TransitMailBO" parameterClass="cargo.cms.extsvc.bo.TransitMailBO" >
<![CDATA[
SELECT A.WH_GROUP AS locn,
A.WH_GROUP_DESC AS locnDesc FROM MAST_WH_GROUP A
ORDER BY A.WH_GROUP DESC
]]>
</select>

	<select id="checkOauthClientID" parameterClass="map" resultClass="java.lang.Integer" >
		SELECT COUNT(1)  FROM SEC_WOS_OAUTH_USER_DTLS where  CLIENT_ID = #username# AND CLIENT_SECRET = PKG_SECURITY.FUN_GET_EPASSWD(#password#,'D') AND STATUS = 'ACTIVE'
	</select>

	<select id="checkOauthTokenExpiry" parameterClass="map" resultClass="java.lang.Integer" >
		 <![CDATA[
		 	SELECT COUNT(1) FROM mast_cdp_incom_oauth_dtls  WHERE  ACCESS_TOKEN = #ACCESS_TOKEN# and STATUS='ACTIVE' AND ( (SYSDATE - token_date) * 24 * 60 ) <= EXPIRES
		 ]]>
	</select> 

	<update id="updateOauthTokenExpiry" parameterClass="map">
		UPDATE mast_cdp_incom_oauth_dtls SET STATUS = 'EXPIRED' , lm_user_id = SYSTEM , lm_date = SYSDATE WHERE ACCESS_TOKEN = #ACCESS_TOKEN#
	</update>



<select id="getDocumentApproveStatus" parameterClass="cargo.cms.extsvc.bo.EsrfUploadDocBO" resultClass="java.lang.Integer" >	
	SELECT  COUNT(1)   FROM IMP_ESRF_DOCUMENT where awb_no = #awbNo#  and awb_date = to_date(#awbDate#,'DDMONYY') and nvl(STATUS,'X') = 'APPROVED'
</select>


<select id="isAuthTokenExits" parameterClass="cargo.cms.extsvc.bo.CDPOauthBO" resultClass="java.lang.Integer" >
 	SELECT COUNT(1) FROM mast_cdp_incom_oauth_dtls  WHERE  ACCESS_TOKEN = #authToken#
</select> 


<select id="fetchAuthPersonName" parameterClass="map" resultClass="java.lang.String" >
	Select  B.AUTH_REP_NAME AS repName  FROM  CUST_COMPANY A, CUST_AGENT_AUTH_REP B WHERE A.CODE = B.CUST_NO AND B.AUTH_REP_ID = #hkID#  AND a.code_desc = #agentName# and rownum = 1
</select> 

<select id="fetchAgentEsrfCnt" parameterClass="java.lang.String" resultClass="java.lang.Integer" >
	Select count(1)  FROM  CUST_COMPANY  WHERE CODE = #agentCode# and NVL(allow_esrf_aa,'N') = 'Y'
</select> 

<select id="fetchCarrierEsrfCnt" parameterClass="map" resultClass="java.lang.Integer" >
	Select count(1)  FROM  AWB  WHERE awb_no = #awbNo# and awb_date = to_date(#awbDate#,'DDMONYY') AND exists (SELECT null FROM mast_carrier where code = carr_code and NVL(ALLOW_ESRF,'N') = 'Y')
</select> 


<select id="getAWBEsrfEligibleStatus" parameterClass="map" resultClass="java.lang.String" >
	SELECT FUN_GET_ESRF_STATUS(#awbNo#,#awbDate#) FROM DUAL 
</select>
<update id="updatetprintind_mobile" parameterClass="map">
	UPDATE IMP_RAMP_TI_HD SET PRINT_IND='Y' WHERE TI_NO = #tiNumber#	
</update>


<update id="updateCargoRelease" parameterClass="cargo.cms.extsvc.bo.CDPImportIncomingBO">
	UPDATE 	imp_srf SET		
		cargo_release = SYSDATE
	 WHERE
		SRF_NO = #esrfNo#	
</update>

	<select id="sqlCheckEsrfNumber" parameterClass="cargo.cms.extsvc.bo.CDPImportIncomingBO" resultClass="java.lang.Boolean" >
		SELECT
		   CASE
		      WHEN
		         count(1) > 0 
		      THEN
		         1 
		      ELSE
		         0 
		   END
		FROM
		   IMP_SRF 
		WHERE
		   SRF_NO = #esrfNo#
	</select>
	
	<update id="sqlUpdateCargoExist" parameterClass="cargo.cms.extsvc.bo.CDPImportIncomingBO">
		UPDATE IMP_SRF SET CARGO_EXIT_IND = 'Y' , 
		CARGO_EXIT_DATE = #dateTime#,
		LM_USER_ID = 'AAHK',
		LM_DATE = SYSDATE
		WHERE SRF_NO = #esrfNo#
	</update>
	
 <select id="retMonRetJOList" parameterClass="cargo.cms.extsvc.bo.RampCheckInBO" resultClass="cargo.cms.extsvc.bo.RetriveMoniteringJobOrderBO" >
		<![CDATA[
	     select (select code_desc as func from mast_code_dtl where code= rtv.FUNC) as function, rtv.Ref_No as refNo ,rtv.Awb_No as awbNo ,
	     rtv.Priority as priority,rtv.Status as status, 
	     
	      CASE WHEN rtv.ULD is not null then (select loc_code from uld_inventory where uld_key = rtv.ULD)
            WHEN rtv.LSP is not null then (select loc_code from lsp_inventory where lsp_no = rtv.LSP) 
          else '' end as currLoc,
	     
	     rtv.Lsp as lsp, 
	     rtv.Uld as uld ,rtv.Target as targetLoc ,rtv.pc as pcount,rtv.wt as wight,
	     (select APPNTD_AGENT from imp_car_awb where awb_no = rtv.awb_no and awb_date = PKG_COMMON.GET_AWB_DATE(rtv.awb_no,'')) as agent , 
	     
          rtv.Curr_Locn as loc
	     from rtrv_move_order rtv where rtv.Type='J'
	     AND (rtv.STATUS IN ('E','A') OR rtv.STATUS   IS NULL OR rtv.status    ='STARTED' OR rtv.status ='COMPLETED' OR rtv.status    ='FCOMPLETED')
	     AND CR_DATE > SYSDATE - (SELECT RULE_VALUE FROM CMSRULES WHERE RULE_CODE='CDP_RTV_MON_DISPLAY')/24
	     ]]>
	     <isNotEmpty property="awb" prepend="AND">
	       rtv.Awb_No=#awb#
	     </isNotEmpty>
	     <isNotEmpty property="joStatus" prepend="AND">
	          <isEqual property="joStatus" compareValue="Issued">
	              (status,'X') = 'STARTED'  
	          </isEqual>
	          <isEqual property="joStatus" compareValue="Completed">
	              NVL(status,'X') = 'COMPLETED'
	          </isEqual>
	     </isNotEmpty>
	     <!-- <isNotEmpty property="fromLocation" prepend="AND">
	       rtv.Curr_Locn=#fromLocation#
	     </isNotEmpty> -->
	     
	     <isNotEmpty property="whArea" prepend="AND">
		 rtv.CURR_LOCN in (select code from mast_wh_loc where wh_group in (select wh_group from mast_wh_group where wh_area =#fromLocation#))
		</isNotEmpty> 
		
		<isNotEmpty property="whGroup" prepend="AND">
		 rtv.CURR_LOCN in (select code from mast_wh_loc where wh_group =#fromLocation#)
		</isNotEmpty>
		
    	<isNotEmpty property="whLocn" prepend="AND">
		 rtv.CURR_LOCN	 = #fromLocation#
		</isNotEmpty>
	     
		<isNotEmpty property="trArea"  prepend="AND">
		 rtv.TARGET in (select code from mast_wh_loc where wh_group in (select wh_group from mast_wh_group where wh_area =#trArea#))
		</isNotEmpty> 
		<isNotEmpty property="trGroup"  prepend="AND">
		 rtv.TARGET in (select code from mast_wh_loc where wh_group =#trGroup#)
		</isNotEmpty>
   		<isNotEmpty property="trLocn"  prepend="AND">
		 rtv.TARGET	 = #trLocn#
		</isNotEmpty>
	     <isNotEmpty property="srf" prepend="AND">
	        exists ( select null from imp_srf srf where rtv.awb_no = srf.awb_no and srf.srf_no = #srf#)
	     </isNotEmpty> 
	        
	     <isNotEmpty property="truck" prepend="AND">
	        (srf.truck_no = #truck# OR 
	              exists (select null from imp_truck_srf trk where trk.srf_no =  srf.srf_no and trk.trip_id = 
	                   ( SELECT TRIP_ID from ( SELECT TRIP_ID FROM TRUCK_TRIP where TRUCK_NO = UPPER(#truck#) order by CR_DATE desc) where rownum = 1 ) ) )    
	     </isNotEmpty>
	     order by CR_DATE asc
  </select>
  
  
  <select id="retMonMhsOrderList" parameterClass="cargo.cms.extsvc.bo.RampCheckInBO" resultClass="cargo.cms.extsvc.bo.RetriveMoniteringMHSOrderBO" >
 		<![CDATA[
       	select (select code_desc as func from mast_code_dtl where code= rtv.FUNC) as function, rtv.Ref_No as refNo ,rtv.Awb_No as awbNo ,rtv.Priority as priority,rtv.Status as status,
       	 
	      CASE WHEN rtv.ULD is not null then (select loc_code from uld_inventory where uld_key = rtv.ULD)
            WHEN rtv.LSP is not null then (select loc_code from lsp_inventory where lsp_no = rtv.LSP) 
          else '' end as currLoc ,
       	 
       	 rtv.Lsp as lsp, 
	     rtv.Uld as uld ,rtv.Target as targetLoc ,rtv.pc as pcount,rtv.wt as wight,
	     (select APPNTD_AGENT from imp_car_awb where awb_no = rtv.awb_no and awb_date = PKG_COMMON.GET_AWB_DATE(rtv.awb_no,'')) as agent, 
	     
	     
         rtv.Curr_Locn as loc
        
	     from rtrv_move_order rtv where rtv.Type='M'
	     AND (rtv.STATUS IN ('E','A') OR rtv.STATUS   IS NULL OR rtv.status    ='STARTED' OR rtv.status    ='COMPLETED' OR rtv.status    ='FCOMPLETED')
	     AND CR_DATE > SYSDATE - (SELECT RULE_VALUE FROM CMSRULES WHERE RULE_CODE='CDP_RTV_MON_DISPLAY')/24
	     ]]>
	     <isNotEmpty property="awb" prepend="AND">
	       rtv.Awb_No=#awb#
	     </isNotEmpty>
	     <isNotEmpty property="joStatus" prepend="AND">
	          <isEqual property="joStatus" compareValue="Issued">
	               NVL(status,'X') = 'STARTED' 
	          </isEqual>
	          <isEqual property="joStatus" compareValue="Completed">
	              NVL(status,'X') = 'COMPLETED'
	          </isEqual>
	     </isNotEmpty>
	     
	    <!--  <isNotEmpty property="fromLocation" prepend="AND">
	       rtv.Curr_Locn=#fromLocation#
	     </isNotEmpty>
	     <isNotEmpty property="toLocation" prepend="AND">
	       rtv.Target=#toLocation#
	     </isNotEmpty> -->
	     
	     <isNotEmpty property="whArea" prepend="AND">
		 rtv.CURR_LOCN in (select code from mast_wh_loc where wh_group in (select wh_group from mast_wh_group where wh_area =#fromLocation#))
		</isNotEmpty> 
		
		<isNotEmpty property="whGroup" prepend="AND">
		 rtv.CURR_LOCN in (select code from mast_wh_loc where wh_group =#fromLocation#)
		</isNotEmpty>
		
    	<isNotEmpty property="whLocn" prepend="AND">
		 rtv.CURR_LOCN	 = #fromLocation#
		</isNotEmpty>
	     
		<isNotEmpty property="trArea"  prepend="AND">
		 rtv.TARGET in (select code from mast_wh_loc where wh_group in (select wh_group from mast_wh_group where wh_area =#trArea#))
		</isNotEmpty> 
		<isNotEmpty property="trGroup"  prepend="AND">
		 rtv.TARGET in (select code from mast_wh_loc where wh_group =#trGroup#)
		</isNotEmpty>
   		<isNotEmpty property="trLocn"  prepend="AND">
		 rtv.TARGET	 = #trLocn#
		</isNotEmpty>
	     
	     
	     <isNotEmpty property="srf" prepend="AND">
	        exists ( select null from imp_srf srf where rtv.awb_no = srf.awb_no and srf.srf_no = #srf#)
	     </isNotEmpty>    
	     <isNotEmpty property="truck" prepend="AND">
	        (srf.truck_no = #truck# OR 
	              exists (select null from imp_truck_srf trk where trk.srf_no =  srf.srf_no and trk.trip_id = 
	                   ( SELECT TRIP_ID from ( SELECT TRIP_ID FROM TRUCK_TRIP where TRUCK_NO = UPPER(#truck#) order by CR_DATE desc) where rownum = 1 ) ) )    
	     </isNotEmpty>  
	     order by CR_DATE asc
  </select>
	

   <select id="retMonSrfLists" parameterClass="cargo.cms.extsvc.bo.RampCheckInBO" resultClass="cargo.cms.extsvc.bo.RetriveMoniteringSRFBO" >
			SELECT srf,awbNo,locationWOOrder,penRetJO,totRetJO,penMHSOrder,totMHSOrder,
			(SELECT DECODE(COUNT(1), 0, 'N', 'Y') FROM MAST_CONST_CODE_REGULATOR  
			  where regulator_code is not null and code in ( SELECT cc_code FROM v_cst_cc_code_awb_all where awb_no = awbNo and awb_date = awbDate) ) as showColor FROM
			(SELECT srf,
			(SELECT awb_no FROM imp_Srf WHERE srf_no = srf) as awbNo,
  			(SELECT awb_date FROM imp_Srf WHERE srf_no = srf) as awbDate,
			(select count(1) from imp_srf_awb_inventory inv where  srf_no = srf
		        AND NVL(inv.LSP_NO,inv.ULD_KEY) not in (SELECT NVL(LSP,ULD) FROM rtrv_move_order where  Ref_No = srf 
		        AND (STATUS IN ('E','A')
		                OR STATUS   IS NULL
		                OR status    ='STARTED'	
		                OR status    ='COMPLETED'
		                OR status    ='FCOMPLETED')
		             AND CR_DATE &gt; SYSDATE -  (SELECT RULE_VALUE FROM CMSRULES WHERE RULE_CODE='CDP_RTV_MON_DISPLAY')/24) 
		      )   AS locationWOOrder,
			count(decode(penRetJO,0,null,penRetJO)) as penRetJO,
			count(decode(totRetJO,0,null,totRetJO)) as totRetJO,
			count(decode(penMHSOrder,0,null,penMHSOrder)) as penMHSOrder,
			count(decode(totMHSOrder,0,null,totMHSOrder)) as totMHSOrder
			FROM
			(SELECT *
			FROM
			  ( WITH RTV AS
			      ( SELECT rtrv.Ref_No AS refNo , rtrv.rowid as rowIDNo,
			        type, rtrv.status, curr_locn, TARGET, NVL(LSP,ULD) AS DEVICE
			        FROM rtrv_move_order rtrv,  imp_srf srf
			        WHERE rtrv.Ref_No = srf.srf_no AND (srf.STATUS   = 'ISSUED'  AND sysdate &lt; srf.srf_expy_date
			          OR EXISTS (SELECT NULL FROM imp_srf_awb_inventory  WHERE srf_no   = srf.srf_no  AND srf.status = 'ISSUED' AND dlv_pcs    &gt; 0  ))
			      AND (rtrv.STATUS IN ('E','A') OR rtrv.STATUS   IS NULL OR rtrv.status    ='STARTED' OR rtrv.status    ='COMPLETED' OR rtrv.status    ='FCOMPLETED') 
			      AND rtrv.CR_DATE &gt; SYSDATE - (SELECT RULE_VALUE FROM CMSRULES WHERE RULE_CODE='CDP_RTV_MON_DISPLAY')/24  
			    <isNotEmpty property="srf" prepend="AND">
					srf.srf_no = #srf#
				</isNotEmpty>
				<isNotEmpty property="truck" prepend="AND">
					(srf.truck_no = #truck# OR
					exists (select null from imp_truck_srf trk where trk.srf_no = srf.srf_no and trk.trip_id = 
							( SELECT TRIP_ID from ( SELECT TRIP_ID FROM TRUCK_TRIP where TRUCK_NO = UPPER(#truck#) order by CR_DATE desc) where rownum = 1 ) ) )
				</isNotEmpty>		
				<isNotEmpty property="awb" prepend="AND">
					srf.awb_no = #awb#
				</isNotEmpty>
		
				<isNotEmpty property="whArea" prepend="AND">
					CURR_LOCN in (select code from mast_wh_loc where wh_group in (select wh_group
					from mast_wh_group where wh_area =#fromLocation#))
				</isNotEmpty>
		
				<isNotEmpty property="whGroup" prepend="AND">
					CURR_LOCN in (select code from mast_wh_loc where wh_group =#fromLocation#)
				</isNotEmpty>
			
				<isNotEmpty property="whLocn" prepend="AND">
					CURR_LOCN = #fromLocation#
				</isNotEmpty>
			
				<isNotEmpty property="trArea" prepend="AND">
					TARGET in (select code from mast_wh_loc where wh_group in (select wh_group
					from mast_wh_group where wh_area =#trArea#))
				</isNotEmpty>
			
				<isNotEmpty property="trGroup" prepend="AND">
					TARGET in (select code from mast_wh_loc where wh_group =#trGroup#)
				</isNotEmpty>
		
				<isNotEmpty property="trLocn" prepend="AND">
					TARGET = #trLocn#
				</isNotEmpty> 
				order by rtrv.CR_DATE asc        
		    )
			  SELECT refNo AS srf,  
			    (select count(1) from imp_srf_awb_inventory inv where  srf_no = refNo AND NVL(inv.LSP_NO,inv.ULD_KEY) not in (SELECT DEVICE FROM RTV where  refNo = inv.srf_no ) )   AS locationWOOrder,
			    (SELECT COUNT(1) FROM rtrv_move_order where ref_no = rtv.refNo and rowid = rtv.rowIDNo  AND type = 'J' AND (NVL(status,'X') != 'COMPLETED' AND NVL(status,'X')  != 'FCOMPLETED' AND NVL(status,'X')  != 'CANCELLED' AND NVL(status,'X')  !='TIMEOUT')) AS penRetJO ,
			    (select  count(1) from rtrv_move_order where type = 'J' and ref_no = rtv.refNo  and rowid = rtv.rowIDNo  and (NVL(status,'X') != 'CANCELLED' AND NVL(status,'X') != 'TIMEOUT') ) as totRetJO,
			    (select  count(1) from rtrv_move_order where type = 'M' and ref_no = RTV.refNo and rowid = rtv.rowIDNo and (NVL(status,'X') != 'COMPLETED' AND NVL(status,'X') != 'FCOMPLETED' AND NVL(status,'X') != 'CANCELLED' AND NVL(status,'X') !='TIMEOUT')) as penMHSOrder,
			    (select  count(1) from rtrv_move_order where type = 'M' and ref_no = RTV.refNo and rowid = rtv.rowIDNo and (NVL(status,'X') != 'CANCELLED' AND NVL(status,'X') != 'TIMEOUT') ) as totMHSOrder
			  FROM  RTV rtv    GROUP BY refNo,rtv.rowIDNo
		  ) ) where (locationWOOrder &gt; 0 or penRetJO &gt; 0 or totRetJO &gt; 0 or penMHSOrder &gt; 0 or totMHSOrder &gt; 0)  group by srf  ) R 		   
   </select>

	 
  <select id="retMonLocworkOrd" parameterClass="cargo.cms.extsvc.bo.RampCheckInBO" resultClass="cargo.cms.extsvc.bo.SRFCommonBO" >
	   <![CDATA[
			    SELECT srf.loc_code as location , srf.lsp_no as csd, srf.uld_key as uld,  
			    case when (SELECT count(1) FROM rtrv_move_order where type = 'M' and ref_no = srf.srf_no  and curr_locn = srf.loc_code) > 0 then 'MHS'
			  	when (SELECT count(1) FROM rtrv_move_order where type = 'J' and ref_no = srf.srf_no  and curr_locn = srf.loc_code) > 0 then 'JO' 
			  	else 'N' end as mhsRetJO
			  	FROM imp_srf_awb_inventory srf
			  	WHERE srf_no = #srf# 
		]]> 
  </select>
  
  <select id="srfMHSOrder" parameterClass="cargo.cms.extsvc.bo.RampCheckInBO" resultClass="cargo.cms.extsvc.bo.SRFCommonBO" > 
	    SELECT CASE WHEN srf.ULD is not null then (select loc_code from uld_inventory where uld_key = srf.ULD)
            WHEN srf.LSP is not null then (select loc_code from lsp_inventory where lsp_no = srf.LSP) 
          else '' end as location ,	    
	    lsp as csd, uld as uld,  'MHS' as mhsRetJO
	    FROM rtrv_move_order srf
	    WHERE ref_no = #srf# and (NVL(status,'X') != 'CANCELLED' AND NVL(status,'X') != 'TIMEOUT') and type = 'M'
  </select>
  
  
  <select id="srfJetJO" parameterClass="cargo.cms.extsvc.bo.RampCheckInBO" resultClass="cargo.cms.extsvc.bo.SRFCommonBO" > 
	   SELECT curr_locn as location, lsp as csd, uld as uld,  'JO' as mhsRetJO
	    FROM rtrv_move_order srf
	    WHERE ref_no = #srf# and (NVL(status,'X') != 'CANCELLED' AND NVL(status,'X') != 'TIMEOUT') and type = 'J'
  </select>  
	
	<update id="sqlUpdateCargoCollection" parameterClass="cargo.cms.extsvc.bo.CDPImportIncomingBO">
		UPDATE IMP_SRF SET 
		COLLECT_PERSON_RECVD = CONCAT(CONCAT(#firstName#,' '),#lastName#), 
		CARGO_COLLECTED = SYSDATE,
		LM_USER_ID = 'AAHK',
		LM_DATE = SYSDATE
		WHERE SRF_NO = #esrfNo#
	</update>
	
		<select id="esrfCCodeList"  parameterClass="cargo.cms.imprt.bo.ESRFCCUpdateJobBO"  resultClass="cargo.cms.imprt.bo.ESRFCCUpdateJobBO">	
		SELECT distinct s.srf_no as esrfNumber, t3.cc_code as customsTransitCode FROM imp_srf s 
        join imp_srf_flt flt on s.srf_no = flt.srf_no
				join (select * from (SELECT t1.cc_code, t1.ref_no, t1.awb_no, t1.awb_date,hawb_no,t1.flt_key,t1.flt_date, 
                        dense_rank() over (partition BY t1.awb_no,t1.awb_date order by t1.recv_date DESC) rank FROM V_CST_LATEST_AWB_CC_CODE t1 
                        WHERE  hawb_no   = '000000000000000000' ) where rank = 1)  t3 ON t3.awb_no = s.awb_no AND t3.awb_date = s.awb_date 
				where   esrf_yn = 'Y' and nvl(LATEST_CC_CODE_SENT,s.AWB_CC_CODE) != t3.cc_code
        AND (STATUS  = 'POSTED' OR (STATUS  = 'ISSUED' AND sysdate &lt; srf_expy_date OR EXISTS 
        			(SELECT NULL FROM imp_srf_awb_inventory WHERE srf_no = s.srf_no AND s.status = 'ISSUED' AND dlv_pcs &gt; 0)) )
   </select>
    
    <update id = "updateCCcodeSentToAAHK"  parameterClass="cargo.cms.imprt.bo.ESRFCCUpdateJobBO">
		UPDATE IMP_SRF SET LATEST_CC_CODE_SENT = #customsTransitCode# where SRF_NO = #esrfNumber#   
	</update>
	
    
    <select id="getSRFEXpdates"  parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO"  resultClass="java.lang.String">
	 	SELECT TO_CHAR(SRF_EXPY_DATE,'DDMONYY HH24:MI') from imp_srf where srf_no = #srfNo#
	</select>

 <select id="checkEsrfVerified"  parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO"  resultClass="java.lang.String">
	 	select VERIFIED as esrfVerified from IMP_SRF WHERE srf_no = #srfNo#
</select>

<insert id="InsertRegulatorClearanceLog"  parameterClass="cargo.cms.extsvc.bo.CDPImportIncomingBO">
		INSERT 
		INTO 
		IMP_SRF_REG_CLR_DTL_LOG
		(TR_NO,
		SRF_NO,
		CDIF_NO,
		CLR_COMPLETED,
		CLR_DEPARTMENT,
		CLR_RESULT,
		CLR_INSPECTOR,
		CR_USER_ID,
		CR_DATE,
		TR_TYPE,
		LM_USER_ID,
		LM_DATE )
		VALUES 
		(
		#trNum#,
		#esrfNo#,
		#psrfNumber#,
		#clearanceCompleted#,
		#clearanceDepartment#,
		#clearanceResult#,
		#inspectorId#,
		'AAHK',
		SYSDATE,
		'REGCLR',
		'AAHK',
		SYSDATE)
</insert>


		
<select id ="getRegulatorClearanceResultLog" parameterClass="cargo.cms.extsvc.bo.CDPImportIncomingBO" resultClass="cargo.cms.extsvc.bo.CDPImportIncomingBO">		
		select  SRF_NO as esrfNo,
		CDIF_NO as psrfNumber,
		clr_result as clearanceResult,
		TR_NO as txnNo
		from IMP_SRF_REG_CLR_DTL_LOG 
		where SRF_NO = #esrfNo#	 and NVL(CDIF_NO,'XX') = NVL(#psrfNumber#,'XX') and upper(CLR_DEPARTMENT) = #clearanceDepartment#
</select>


<update id = "updateRegulatorClearanceLog"  parameterClass="cargo.cms.extsvc.bo.CDPImportIncomingBO">
	UPDATE IMP_SRF_REG_CLR_DTL_LOG set 
	CLR_COMPLETED = #clearanceCompleted#,	CLR_INSPECTOR = #inspectorId#,
	clr_result = #clearanceResult# , ERR_MSG = #errMsg# WHERE TR_NO = #txnNo#
</update>

<update id = "updateRegulatorClearanceResult"  parameterClass="cargo.cms.extsvc.bo.CDPImportIncomingBO">
	UPDATE IMP_SRF_REGULATOR_CLR_DTL set 
	CLR_COMPLETED = #clearanceCompleted#,	CLR_INSPECTOR = #inspectorId#,
	clr_result = #clearanceResult#, ERR_MSG = #errMsg# WHERE TR_NO = #txnNo#
</update>

<insert id="InsertRegulatorClearance"  parameterClass="cargo.cms.extsvc.bo.CDPImportIncomingBO">
	INSERT 
		INTO 
	IMP_SRF_REGULATOR_CLR_DTL
		(TR_NO,
		SRF_NO,
		CDIF_NO,
		CLR_COMPLETED,
		CLR_DEPARTMENT,
		CLR_RESULT,
		CLR_INSPECTOR,
		CR_USER_ID,
		CR_DATE,
		TR_TYPE,
		LM_USER_ID,
		LM_DATE )
	VALUES 
		(
		#trNum#,
		#esrfNo#,
		#psrfNumber#,
		#clearanceCompleted#,
		#clearanceDepartment#,
		#clearanceResult#,
		#inspectorId#,
		'AAHK',
		SYSDATE,
		'REGCLR',
		'AAHK',
		SYSDATE)
</insert>
	<update id = "updateCargoRealeaseOK"  parameterClass="cargo.cms.extsvc.bo.CDPImportIncomingBO">
		UPDATE 
			IMP_SRF
		SET
		   cargo_release = SYSDATE,
		   CARGO_RELEASE_STS = 'OK',
		   LM_USER_ID = 'SYSTEM',
		   LM_DATE = SYSDATE
		where 
			SRF_NO = #esrfNo#   
	</update>

<select id="getCCCodeByesrfNumber" parameterClass="java.lang.String" resultClass="cargo.cms.extsvc.bo.CDPImportIncomingBO" >
	 <![CDATA[
	     SELECT imp.AWB_CC_CODE  as ccCode,
	          	msr.REGULATOR_CODE  as clearanceDepartment,
	          	msr.CODE as masterCCode
		 FROM 
		 		imp_srf imp
		 INNER JOIN
				 mast_const_code_regulator msr
		 ON 
				imp.AWB_CC_CODE  = msr.CODE 
		 WHERE
				imp.SRF_NO =#esrfNo#
	 ]]>
</select> 



<select id="getCCCodeByesrfNumberDesktop" parameterClass="java.lang.String" resultClass="cargo.cms.imprt.bo.SRFImportIncomingBO" >
	 <![CDATA[
	     SELECT imp.AWB_CC_CODE  as ccCode,
	          	msr.REGULATOR_CODE  as clearanceDepartment,
	          	msr.CODE as masterCCode
		 FROM 
		 		imp_srf imp
		 INNER JOIN
				 mast_const_code_regulator msr
		 ON 
				imp.AWB_CC_CODE  = msr.CODE 
		 WHERE
				imp.SRF_NO =#esrfNo#
	 ]]>
</select> 

<select id="getRegulatorClearance" parameterClass="cargo.cms.extsvc.bo.CDPImportIncomingBO" resultClass="cargo.cms.extsvc.bo.CDPImportIncomingBO" >
	 <![CDATA[
		select distinct CLR_DEPARTMENT as clearanceDepartment 
		from
		 	IMP_SRF_REGULATOR_CLR_DTL 
		where SRF_NO = #esrfNo#	and Clr_Result is not null	
		]]>
</select> 

<select id="getRegulatorClearanceDesktop" parameterClass="cargo.cms.imprt.bo.SRFImportIncomingBO" resultClass="cargo.cms.imprt.bo.SRFImportIncomingBO" >
	 <![CDATA[
		select distinct CLR_DEPARTMENT as clearanceDepartment 
		from
		 	IMP_SRF_REGULATOR_CLR_DTL 
		where SRF_NO = #esrfNo#	and Clr_Result is not null	
		]]>
</select> 

<select id ="getRegulatorClearanceResult" parameterClass="cargo.cms.extsvc.bo.CDPImportIncomingBO" resultClass="cargo.cms.extsvc.bo.CDPImportIncomingBO">		
		select  SRF_NO as esrfNo,
		CDIF_NO as psrfNumber,
		clr_result as clearanceResult,
		TR_NO as txnNo
		from IMP_SRF_REGULATOR_CLR_DTL 
		where SRF_NO = #esrfNo#	 and NVL(CDIF_NO,'XX') = NVL(#psrfNumber#,'XX') and upper(CLR_DEPARTMENT) = #clearanceDepartment#
</select>

<select id ="getRegulatorClearanceTrueResult" parameterClass="cargo.cms.extsvc.bo.CDPImportIncomingBO" resultClass="cargo.cms.extsvc.bo.CDPImportIncomingBO">
		select  tr_no as txnNo, CDIF_NO as psrfNumber, clr_result as clearanceResult, SRF_NO as esrfNo, CLR_COMPLETED as clearanceCompleted
		from
		 	IMP_SRF_REGULATOR_CLR_DTL 
		where SRF_NO = #esrfNo#	 AND upper(CLR_COMPLETED) = 'TRUE' and rownum = 1
</select>

<select id ="getRegulatorClearanceTrueResultDesktop" parameterClass="cargo.cms.imprt.bo.SRFImportIncomingBO" resultClass="cargo.cms.imprt.bo.SRFImportIncomingBO">
		select  tr_no as txnNo, CDIF_NO as psrfNumber, clr_result as clearanceResult, SRF_NO as esrfNo, CLR_COMPLETED as clearanceCompleted
		from
		 	IMP_SRF_REGULATOR_CLR_DTL 
		where SRF_NO = #esrfNo#	 AND upper(CLR_COMPLETED) = 'TRUE' and rownum = 1
</select>


<update id="updateClearanceCompleted" parameterClass="cargo.cms.extsvc.bo.CDPImportIncomingBO">
	UPDATE IMP_SRF_REGULATOR_CLR_DTL SET 			
		CLR_COMPLETED = 'true'
	 WHERE
		SRF_NO = #esrfNo#	
</update>


<delete id="deleteRegulatorClearance" parameterClass="cargo.cms.extsvc.bo.CDPImportIncomingBO">
	delete IMP_SRF_REGULATOR_CLR_DTL where SRF_NO = #esrfNo# and UPPER(CLR_RESULT) = UPPER(#clearanceResult#) and NVL(CDIF_NO,'XX') = NVL(#psrfNumber#,'XX')
</delete>

<delete id="deleteTruckRegistration" parameterClass="java.lang.String">
	delete IMP_CDP_TRUCK_REGISTRATION where truck_no = #vehicleRegistration# and comp_date is null
</delete>

<insert id="insertTrkRegistration" parameterClass="cargo.cms.extsvc.bo.CDPImportIncomingBO" >
	INSERT INTO  IMP_CDP_TRUCK_REGISTRATION  ( TR_NO,    TRUCK_NO,    SRF_NO,    EVENT_ID,    TR_TYPE,    CR_USER_ID,    CR_DATE,    LM_USER_ID,    LM_DATE  )
  	VALUES  (IMP_CDP_TRUCK_REG_SEQ.NEXTVAL, #vehicleRegistration#,    #srfNumber#,    #eventId#,    'VREG',    'AAHK',    SYSDATE,    'AAHK',    SYSDATE  )
</insert>

<insert id="insertTrkRegistrationCompl" parameterClass="cargo.cms.extsvc.bo.CDPImportIncomingBO" >
	INSERT INTO  IMP_CDP_TRUCK_REGISTRATION  ( TR_NO,    TRUCK_NO,    SRF_NO,    EVENT_ID,    TR_TYPE,    COMP_DATE,COMP_IND, CR_USER_ID,    CR_DATE,    LM_USER_ID,    LM_DATE  )
  	VALUES  (IMP_CDP_TRUCK_REG_SEQ.NEXTVAL, #vehicleRegistration#,    #srfNumber#,    #eventId#,    'VREG',SYSDATE,'Y', 'AAHK',    SYSDATE,    'AAHK',    SYSDATE  )
</insert>

<select id="getSrfDetails"  parameterClass="java.lang.String" resultClass="cargo.cms.extsvc.bo.CDPImportIncomingBO" >
	 <![CDATA[
		select ESRF_YN  as esrfyn,
		HOLD_SRF_IND as holdSrf 
		from
		 	imp_srf
		where SRF_NO = #esrfNo#		
		]]>
</select> 

<select id="getRegulatorClearanceTrueCnt" parameterClass="cargo.cms.extsvc.bo.CDPImportIncomingBO" resultClass="java.lang.Integer" >
		select count(1) from IMP_SRF_REGULATOR_CLR_DTL where SRF_NO = #esrfNo# AND 	clr_completed = 'true'	
</select> 

<update id="updateRegulatorClearance" parameterClass="java.util.HashMap">
	UPDATE IMP_SRF_REGULATOR_CLR_DTL SET ERR_MSG = #errMsg# WHERE TR_NO = #trxNum#	
</update>

<select id="getCollectionReceived" parameterClass="cargo.cms.extsvc.bo.CDPImportIncomingBO" resultClass="java.lang.Integer" >
		select count(1) from IMP_SRF  where SRF_NO = #esrfNo# AND CARGO_COLLECTED is null	
</select>
<select id="checkSRFExpiryDate" parameterClass="java.lang.String" resultClass="cargo.cms.extsvc.bo.RclBO" >
<![CDATA[
	SELECT TO_CHAR(SYSDATE,'DDMONYY HH12:MI AM') AS checkedAt,TO_CHAR((SRF_DATE+(SELECT RULE_VALUE FROM CMSRULES WHERE RULE_CODE = 'TRKRAPP_CANTEEN_CONFIG')/24),'DDMONYY HH12:MI AM') AS validUntil FROM IMP_SRF WHERE SRF_NO = #PARAM#
	]]>	
</select>
<select id="checkRCLExpiryDate" parameterClass="java.lang.String" resultClass="cargo.cms.extsvc.bo.RclBO" >
<![CDATA[
	SELECT TO_CHAR(SYSDATE,'DDMONYY HH12:MI AM') AS checkedAt,TO_CHAR((RCL_DATE+(SELECT RULE_VALUE FROM CMSRULES WHERE RULE_CODE = 'TRKRAPP_CANTEEN_CONFIG')/24),'DDMONYY HH12:MI AM') AS validUntil  FROM EXP_RCL_HD WHERE RCL_NO = #PARAM# 
	]]>	
</select>
<select id="checkURFExpiryDate" parameterClass="java.lang.String" resultClass="cargo.cms.extsvc.bo.RclBO" >
<![CDATA[
	SELECT  TO_CHAR(SYSDATE,'DDMONYY HH12:MI AM') AS checkedAt,TO_CHAR((TO_DATE((TO_CHAR(EIR_DATE, 'DDMONYY') ||' '||SUBSTR(TRIM(TO_CHAR(EIR_TIME,'0000')),1,2) || NVL2(EIR_TIME, ':', '') || SUBSTR(TRIM(TO_CHAR(EIR_TIME,'0000')),3,4)),'DDMONYY HH24:MI')+(SELECT RULE_VALUE FROM CMSRULES WHERE RULE_CODE = 'TRKRAPP_CANTEEN_CONFIG')/24),'DDMONYY HH12:MI AM') AS validUntil FROM ULD_ISS_HD WHERE EIR_NO = #PARAM#
	]]>	
</select>
<select id="checkTruckExpiryDate" parameterClass="java.lang.String" resultClass="cargo.cms.extsvc.bo.RclBO" >
<![CDATA[
	SELECT TO_CHAR(SYSDATE,'DDMONYY HH12:MI AM') AS checkedAt ,'' AS validUntil  FROM DUAL 
]]>	
</select>

<select id="checkValidatity_SRF" parameterClass="java.lang.String" resultClass="java.lang.Integer" >
<![CDATA[
	SELECT COUNT(1) FROM IMP_SRF WHERE SRF_NO = #PARAM# AND SYSDATE <= (SRF_DATE+(SELECT RULE_VALUE FROM CMSRULES WHERE RULE_CODE = 'TRKRAPP_CANTEEN_CONFIG')/24)
	]]>	
</select>
<select id="checkValidatity_RCL" parameterClass="java.lang.String" resultClass="java.lang.Integer" >
<![CDATA[
	SELECT COUNT(1) FROM EXP_RCL_HD WHERE RCL_NO = #PARAM# AND SYSDATE <= (RCL_DATE+(SELECT RULE_VALUE FROM CMSRULES WHERE RULE_CODE = 'TRKRAPP_CANTEEN_CONFIG')/24)
	]]>	
</select>
<select id="checkValidatity_URF" parameterClass="java.lang.String" resultClass="java.lang.Integer" >
<![CDATA[
	SELECT COUNT(1) FROM ULD_ISS_HD WHERE EIR_NO = #PARAM# AND SYSDATE <= ((TO_DATE((TO_CHAR(EIR_DATE, 'DDMONYY') ||' '||SUBSTR(TRIM(TO_CHAR(EIR_TIME,'0000')),1,2) || NVL2(EIR_TIME, ':', '') || SUBSTR(TRIM(TO_CHAR(EIR_TIME,'0000')),3,4)),'DDMONYY HH24:MI')+(SELECT RULE_VALUE FROM CMSRULES WHERE RULE_CODE = 'TRKRAPP_CANTEEN_CONFIG')/24))
	]]>	
</select>
<select id="checkValidatity_TRUCK" parameterClass="java.lang.String" resultClass="java.lang.Integer" >
SELECT count(1) FROM TRUCK_TRIP WHERE  CLOSED = 'N' AND TRUCK_NO IS NOT NULL AND TRUCK_NO=#PARAM#	
</select>
<select id="checkValidatity_CountSRFNo" parameterClass="java.lang.String" resultClass="java.lang.Integer" >
SELECT COUNT(SRF_NO) FROM IMP_SRF WHERE UPPER(SRF_NO)=#PARAM#
</select>
<select id="checkValidatity_CountRCLNo" parameterClass="java.lang.String" resultClass="java.lang.Integer" >
SELECT COUNT(RCL_NO) FROM EXP_RCL_HD WHERE UPPER(RCL_NO)=#PARAM#
</select>
<select id="checkValidatity_CountURFNo" parameterClass="java.lang.String" resultClass="java.lang.Integer" >
SELECT COUNT(EIR_NO) FROM ULD_ISS_HD WHERE UPPER(EIR_NO)=#PARAM#
</select>
<select id="checkValidatity_validTruckNo"  parameterClass="java.lang.String" resultClass="java.lang.Integer">
select count(0) from truck_trip where truck_no = #truckNo#
</select>
<select id="getInvoiceDetailsByChargeId" parameterClass="cargo.cms.extsvc.bo.PaymentAPIInvoiceBO" resultClass="cargo.cms.extsvc.bo.PaymentAPIInvoiceBO" >
	 <![CDATA[
		SELECT 
			DISTINCT BID.INV_NO AS invoiceNumber,
			BCD.AWB_NO AS awbNo,
			SUBSTR(BCD.AWB_NO,0,3) AS awbNoPFX,
			SUBSTR(BCD.AWB_NO,4) AS awbNoSFX, 
			TO_CHAR(BCD.AWB_DATE, 'DDMONYY') AS awbDate	
		FROM 
			BILL_INV_DTL BID join  BILL_CHARGE_DTl  BCD on BID.CHRG_TR_NO = BCD.TR_NO
	   where 
	     	BCD.TR_NO = #chargeId#	
		]]>
</select> 


<select id="getRCLORSRFNumberForInvoice" parameterClass="cargo.cms.extsvc.bo.PaymentAPIInvoiceBO" resultClass="cargo.cms.extsvc.bo.PaymentAPIInvoiceBO" >
	 <![CDATA[
		SELECT 
			DISTINCT BID.INV_NO AS invoiceNumber,
     		BCD.SRF_NO as srfNo,
      		BCD.RCL_NO AS rclNum,
			BCD.AWB_NO AS awbNo,
			SUBSTR(BCD.AWB_NO,0,3) AS awbNoPFX,
			SUBSTR(BCD.AWB_NO,4) AS awbNoSFX, 
			TO_CHAR(BCD.AWB_DATE, 'DDMONYY') AS awbDate,
			sum(BID.CHARGE_AMT) as totalChargeAmount	
		FROM 
			BILL_INV_DTL BID join  BILL_CHARGE_DTl  BCD on BID.CHRG_TR_NO = BCD.TR_NO
			left join awb awb on awb.awb_no = BCD.awb_no and awb.awb_date =BCD.awb_date
     	 where 
	      	BID.INV_NO = #invoiceNumber#
	     group by 
	        BID.INV_NO,
	        BCD.SRF_NO ,
	        BCD.RCL_NO,
		    BCD.AWB_NO,
	        BCD.AWB_DATE	     		
		]]>
</select> 

<select id="getInvoiceInfoByInvoiceNumber" parameterClass="cargo.cms.extsvc.bo.PaymentAPIInvoiceBO" resultClass="cargo.cms.extsvc.bo.PaymentAPIInvoiceBO" >
	 <![CDATA[
		SELECT 
			DISTINCT BID.INV_NO AS invoiceNumber,
			BCD.AWB_NO AS awbNo,
			SUBSTR(BCD.AWB_NO,0,3) AS awbNoPFX,
			SUBSTR(BCD.AWB_NO,4) AS awbNoSFX, 
			TO_CHAR(BCD.AWB_DATE, 'DDMONYY') AS awbDate,
			sum(BID.CHARGE_AMT) as totalChargeAmount,
			BID.REV_IND as revenueIndicator
		FROM 
			BILL_INV_DTL BID join  BILL_CHARGE_DTl  BCD on BID.CHRG_TR_NO = BCD.TR_NO
     	 where 
	      	BID.INV_NO = #invoiceNumber#
	     group by 
	        BID.INV_NO,
		    BCD.AWB_NO,
	        BCD.AWB_DATE,
	        BID.REV_IND	     		
		]]>
</select> 

<select id="getRCLDetailsForPrint" parameterClass="cargo.cms.extsvc.bo.PaymentAPIInvoiceBO" resultClass="cargo.cms.extsvc.bo.PaymentAPIInvoiceBO" >
	 <![CDATA[
		SELECT 
			  A.RCL_NO                                     	     AS rclNum,
			  DECODE(A.PPK_TYPE, 'B', 'Bulk', 'P', 'BUP', 'Mix') AS pkgType,
			  TO_CHAR(A.RCL_DATE,'DDMONYY HH24:MI')              AS rclIssueDate,
			  A.AWB_NO                                           AS awbNo,
			  nvl(A.ULD_KEY,A.AWB_NO)                            AS uldNum,
			  A.CARR_CODE                                        AS carrCode,
			  A.AWB_DEST                                         AS destination,
			  A.SEC_CHECK   									 AS secCheck,
        	  A.REJECT_IND  									 AS rejectInd,
        	  A.TSA_RCL_IND 									 AS tsaRclInd,
        	  A.CARR_RF    										 AS carrRf
		FROM 
			EXP_RCL_HD A
		WHERE 
			A.RCL_NO      = #rclNum#	
		]]>
</select> 

<select id="getKisokPrinterConfiguration" parameterClass="cargo.cms.extsvc.bo.PaymentAPIInvoiceBO" resultClass="cargo.cms.extsvc.bo.PaymentAPIInvoiceBO" >
	 <![CDATA[
		SELECT 
		    SRF_PRINTER AS srfPrinter,
		    RCL_PRINTER AS rclPrinter,
		    INV_PRINTER AS invPrinter
		FROM  
		    MST_KIOSK_PRINTER_CONFIG 
		WHERE 
		    KIOSK_ID = #kioskNumber#	
		]]>
</select> 

<select id="getXrayChargeSystemParamValue" parameterClass="java.lang.String" resultClass="java.lang.String" >
	 <![CDATA[
		  select 
		  	RULE_VALUE 
		  from 
		  	CMSRULES 
		  where 
		  	RULE_CODE='BILLING_PAYMENT_API_XRAY_CHAGRES_CODE'
		]]>
</select> 

<select id="getEpaymentChargeItems" parameterClass="java.lang.String" resultClass="cargo.cms.billing.bo.ChargeBO" >
	  select 
         BIM.ITM_CODE AS itemCode,
         BIM.ITM_CODE_SFX AS itemCodeSfx,
         BIM.ITM_DESC AS itemDesc,
        (pkg_calculate.get_unit_price(ITM_CODE,ITM_CODE_SFX,'1')) AS unitPrice
      from 
        BILL_ITM_MASTER  BIM
      WHERE 
      	BIM.ALLOW_EPAYMENT='Y'
        	
	
</select> 

	<!--To fetch X-RAY PENDING Charges By RCL-->
	<select id="fetchXRAYChargeForPaymentByRCL" parameterClass="cargo.cms.billing.bo.PaymentBO" resultClass="cargo.cms.billing.bo.ChargeBO">
	 <![CDATA[
		SELECT
			c.TR_NO AS trNo
		FROM 
			BILL_CHARGE_DTL c 
		WHERE
			c.RCL_NO=#rclNo#
			AND c.STATUS='PENDING'
			AND c.ITM_CODE in (SELECT
  				REGEXP_SUBSTR(RULE_VALUE, '[^,]+', 1, level) AS parts
			FROM (select RULE_VALUE from CMSRULES  where RULE_CODE='BILLING_PAYMENT_API_XRAY_CHAGRES_CODE')
				CONNECT BY REGEXP_SUBSTR(RULE_VALUE, '[^,]+', 1, level) IS NOT NULL)
			AND c.VOID_IND='N'
			AND (C.WAVR_IND='N' OR (C.WAVR_IND='Y' AND C.WAVR_DONE='Y')) ORDER BY c.AWB_NO,c.ITM_CODE
		]]>
	</select>
	
	<select id="getXrayChargeListSystemParamValue"  resultClass="java.lang.String" >
	 <![CDATA[
		SELECT
  				REGEXP_SUBSTR(RULE_VALUE, '[^,]+', 1, level) AS parts
			FROM (select RULE_VALUE from CMSRULES  where RULE_CODE='BILLING_PAYMENT_API_XRAY_CHAGRES_CODE')
				CONNECT BY REGEXP_SUBSTR(RULE_VALUE, '[^,]+', 1, level) IS NOT NULL
		]]>
	</select>

	<select id="CheckCountOfAWBNumberNotUsed" parameterClass="cargo.cms.billing.bo.PaymentAPIPrePaymentRequest" resultClass="java.lang.Integer" >
		SELECT 
		    NVL(COUNT(1),0)
		FROM 
		    BILL_PRE_PAYMENT_DTL BPD
		WHERE 
		    BPD.AWB_NO=#airWaybillNumber#
		    AND BPD.AWB_DATE=PKG_COMMON.GET_AWB_DATE(#airWaybillNumber#)
		    AND BPD.SRF_NO IS NULL
	</select>
	
	<select id="CheckCountOfAWBNumberNotUsedByTransactionId" parameterClass="cargo.cms.billing.bo.PaymentAPIPrePaymentRequest" resultClass="java.lang.Integer" >
		SELECT 
		    NVL(COUNT(1),0)
		FROM 
		    BILL_PRE_PAYMENT_DTL BPD
		WHERE 
		    BPD.TRANSACTION_ID=#transactionId#
		    AND BPD.SRF_NO IS NULL
	</select>
	
	<insert id="insertBillPrepaymentDetails" parameterClass="cargo.cms.billing.bo.PaymentAPIPrePaymentRequest" >
		INSERT INTO BILL_PRE_PAYMENT_DTL (
		   TR_NO,
		   AWB_NO,
		   AWB_DATE,
		   TRANSACTION_ID,
		   TOTAL_AMT,
		   DUE_DATE,
		   CR_USER_ID, 
		   CR_DATE, 
		   LM_USER_ID, 
		   LM_DATE
		) 
		VALUES ( 
			BILL_PRE_PAYMENT_DTL_SEQ.NEXTVAL,
			#airWaybillNumber#,
			PKG_COMMON.GET_AWB_DATE(#airWaybillNumber#),
			#transactionId#,
			#totalAmount#,
			#paymentDueDate#,
			#userID#,
			sysdate,
			#userID#,
			sysdate	 
		)
	</insert>
	<delete id="deleteBillPrepaymentDetails" parameterClass="cargo.cms.billing.bo.PaymentAPIPrePaymentRequest">
		DELETE
		    FROM 
		      BILL_PRE_PAYMENT_DTL BPD 
		WHERE 
		      BPD.AWB_NO=#airWaybillNumber#
		      AND BPD.AWB_DATE=PKG_COMMON.GET_AWB_DATE(#airWaybillNumber#)
		      AND BPD.SRF_NO IS NULL
	</delete>
	
	<select id="getUnUsedPrePaymentDetails" parameterClass="java.lang.String" resultClass="cargo.cms.imprt.bo.PaymentAPIPrePaymentDetailsBO" >
			SELECT 
			    BPD.AWB_NO AS awbNumber,
			    BPD.TRANSACTION_ID AS transactionId,
			    TO_CHAR(to_date(BPD.DUE_DATE),'yyyy-MM-dd') paymentDueDate
			FROM 
			    BILL_PRE_PAYMENT_DTL BPD
			WHERE 
			    BPD.TR_NO = #prePayTrNo#
	</select>
	<select id="fetchtowOrderforMobileULD" parameterClass="cargo.cms.extsvc.bo.TransitMailBO" resultClass="java.lang.Integer">    	
		select COUNT(1) from tow_order_out_dtl tow,tow_order_out ou where tow.uld_key = #uldKey# and tow.to_no= ou.to_no 
		and ou.flt_key= #fltKey# and ou.flt_date= to_date(#fltDate#,'DDMONYY') AND STATUS NOT IN ('VOID','FORCE COMPLETE')	
	</select>
	<insert id="sqlExpRampInsTOOutDtl_mobile" parameterClass="cargo.cms.extsvc.bo.RclBO" >
		INSERT INTO TOW_ORDER_OUT_DTL(TO_NO,ULD_KEY,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE, TR_TYPE)
        VALUES(#toNumber#,#uldKey#,#userID#,SYSDATE,#userID#, SYSDATE, DECODE(#userID#,'MHCS','TMULD','TOULD'))
	</insert>
	<update id="updateSRFNoInPrePaymentDetails" parameterClass="cargo.cms.imprt.bo.PaymentAPIPrePaymentDetailsBO">
	    UPDATE BILL_PRE_PAYMENT_DTL SET 			
		   SRF_NO = #srfNo#,
		   LM_USER_ID = #userID#,
		   LM_DATE = SYSDATE
		  WHERE 
		  	  AWB_NO=#awbNumber#
			  AND AWB_DATE=#awbDate#
			  AND SRF_NO IS NULL
	 
	</update>
	<select id="carrValidateforCanteen"  parameterClass="java.lang.String"  resultClass="java.lang.Integer">
		select COUNT(1) from mast_carrier where owned_carr='Y' and code=#PARAM#
	</select>
	

		<select id="getuldlistformobileUITTagPrint" resultClass="cargo.cms.extsvc.bo.TransitMailBO" parameterClass="cargo.cms.extsvc.bo.TransitMailBO" >
	           SELECT
                  t3.FLT_KEY as fltKey,
                  to_char(t3.FLT_DATE,'ddMONYY') as fltDate ,
                  t3.ULD_bt_no as uldKey,
                  NVL(t2.UIT_PRINT,'N') AS printInd,
                  PKG_COMMON.GET_FLT_STA(t3.FLT_KEY,t3.FLT_DATE, 'D', 'DD') AS std,
                  PKG_COMMON.GET_FLT_ETA(t3.FLT_KEY,t3.FLT_DATE, 'D', 'DD') AS etd,
                  opr.acft_prk_bay AS parkingBay
                  FROM uld_group_type gt, mast_uld_allot_group uag, mast_uld_allot ua,  mast_uld_group ug, exp_pmanifest_uld t3
                       JOIN flt_opr opr  on opr.flt_key=t3.flt_key  AND opr.sch_date=t3.flt_date AND opr.flt_type = 'D'
                       JOIN EXP_FLT_ULD t2 on  t2.flt_key=t3.flt_key AND t2.flt_date=t3.flt_date AND t2.uld_key = t3.uld_bt_no  
                       LEFT JOIN exp_chkout_dtl t1 on  t1.uld_key = t3.uld_bt_no AND t1.flt_key=t3.flt_key AND t1.flt_date=t3.flt_date
                       LEFT JOIN EXP_ULD_HOVER_DTL EXPHOVER ON EXPHOVER.HO_FORM_NO = t1.HO_FORM_NO AND EXPHOVER.ULD_KEY = t1.ULD_KEY
                  WHERE (t2.hANDling_mode is null or t2.hANDling_mode!='DT')
                  AND gt.uld_group   = uag.uld_group  AND uag.uld_allot    = ua.uld_allot AND ug.uld_group     = uag.uld_group AND gt.uld_type      = SUBSTR(t2.ULD_KEY, 0, 3)
                  AND t3.uld_bt_no not in (select uld_key FROM exp_flt_uld 
                                           WHERE (Source='DLS-L' or Source='DLS-E') 
                                           AND uld_key=t3.ULD_bt_no AND flt_key=t3.flt_key AND flt_date=t3.flt_date AND FLT_TYPE='E')
                 <isNotEmpty property="uldKey">         
                   AND t3.uld_bt_no= #uldKey#
                 </isNotEmpty>  
   				<isNotEmpty property="fltKey">         
                 AND t3.flt_key= #fltKey#
                   AND t3.flt_date=TO_DATE(#fltDate#,'DDMONYY')
                  </isNotEmpty> 
                 UNION
              SELECT
                  t3.FLT_KEY as fltKey,
                  to_char(t3.FLT_DATE,'ddMONYY') as fltDate ,
                  t3.ULD_bt_no as uldKey,
                  NVL(t2.UIT_PRINT,'N') AS printInd,
                  PKG_COMMON.GET_FLT_STA(t3.FLT_KEY,t3.FLT_DATE, 'D', 'DD') AS std,
                  PKG_COMMON.GET_FLT_ETA(t3.FLT_KEY,t3.FLT_DATE, 'D', 'DD') AS etd,
                  opr.acft_prk_bay AS parkingBay
                  FROM uld_group_type gt, mast_uld_allot_group uag, mast_uld_allot ua, mast_uld_group ug,exp_pman_tarmac_uld t3
                    JOIN flt_opr opr on opr.flt_key=t3.flt_key AND opr.sch_date=t3.flt_date AND opr.flt_type = 'D'
                    JOIN EXP_FLT_ULD t2 on  t2.flt_key=t3.flt_key AND t2.flt_date=t3.flt_date AND t2.uld_key = t3.uld_bt_no  
                    LEFT JOIN exp_chkout_dtl t1 on  t1.uld_key = t3.uld_bt_no AND t1.flt_key=t3.flt_key AND t1.flt_date=t3.flt_date
                    LEFT JOIN EXP_ULD_HOVER_DTL EXPHOVER ON EXPHOVER.HO_FORM_NO = t1.HO_FORM_NO AND EXPHOVER.ULD_KEY = t1.ULD_KEY
                  WHERE (t2.hANDling_mode is null or t2.hANDling_mode!='DT')  AND  (NOT (NVL(t2.TRANSIT_TYPE, 'N') = 'TT' ))
                        AND gt.uld_group   = uag.uld_group AND uag.uld_allot    = ua.uld_allot AND ug.uld_group     = uag.uld_group AND gt.uld_type      = SUBSTR(t2.ULD_KEY, 0, 3)
                        AND t3.uld_bt_no not in (select uld_key FROM exp_flt_uld 
                                           WHERE (Source='DLS-L' or Source='DLS-E') 
                                           AND uld_key=t3.ULD_bt_no AND flt_key=t3.flt_key AND flt_date=t3.flt_date AND FLT_TYPE='E')                         
                 <isNotEmpty property="uldKey">         
                   AND t3.uld_bt_no= #uldKey#
                 </isNotEmpty>  
                 <isNotEmpty property="fltKey">         
                 AND t3.flt_key= #fltKey#
                   AND t3.flt_date=TO_DATE(#fltDate#,'DDMONYY')
                </isNotEmpty> 
	</select>
	
	<select id="checkBundlePayDueDate" parameterClass="java.util.HashMap"  resultClass="java.lang.Integer" >
		SELECT  count(1)   
     		  FROM BILL_BUNDLE_PAYMENT_DTL dtl, BILL_BUNDLE_PAYMENT_HD hd WHERE hd.BUNDLE_REF_NO = dtl.BUNDLE_REF_NO 
		  		 AND AWB_NO = #awbNo# and awb_date = TO_DATE(#awbDate#,'DDMONYY') AND hd.BUNDLE_REF_NO = #bundleRefNo#
		  			 AND hd.status = 'COMMITTED'  and trunc(SYSDATE) = trunc(HD.VALIDITY_DATE)
	</select>
	
	<select id="checkChargesWithBundleCommitedAmt" parameterClass="java.util.HashMap"  resultClass="java.lang.Integer" >
		SELECT  count(1)   
     		  FROM BILL_BUNDLE_PAYMENT_DTL dtl, BILL_BUNDLE_PAYMENT_HD hd WHERE hd.BUNDLE_REF_NO = dtl.BUNDLE_REF_NO 
		  		  AND AWB_NO = #awbNo# and awb_date = TO_DATE(#awbDate#,'DDMONYY') AND hd.BUNDLE_REF_NO = #bundleRefNo#
		  			 AND hd.status = 'COMMITTED'  and (nvl(COMMITTED_AMT,0) - nvl(USED_AMT,0)) &gt;= nvl(#totalCharges#,0)
	</select>
	
	
	<select id="getBundlePaymentInvoiceNum" parameterClass="java.util.HashMap" resultClass="java.lang.String" >
	 	SELECT 
			DISTINCT BID.INV_NO AS invoiceNumber
		FROM 
			BILL_INV_DTL BID join  BILL_CHARGE_DTl  BCD on BID.CHRG_TR_NO = BCD.TR_NO
	   where 
	     	BCD.SRF_NO = #srfNo# and rownum =1
    </select> 
    
    <update id="updateUsedAmtToBundleDtl" parameterClass="java.util.HashMap">
	    UPDATE BILL_BUNDLE_PAYMENT_DTL SET
	       USED_AMT = NVL(USED_AMT,0) + nvl(#totalCharges#,0) ,
		   LM_USER_ID = #userID#,
		   LM_DATE = SYSDATE
		  WHERE 
		      BUNDLE_REF_NO = #bundleRefNo# AND
		  	  AWB_NO=#awbNo#
			  AND AWB_DATE=#awbDate#
	</update>
	
	<insert id="insertBundleHistory" parameterClass="java.util.HashMap" >
		Insert into BILL_BUNDLE_PAYMENT_HIS (TR_NO,BUNDLE_REF_NO,AWB_NO,AWB_DATE,TRANSACTION_AMT,INVOICE_NO,SRF_NO,RCL_NO,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE)
		values (BILL_BUNDLE_PAYMENT_HIS_SEQ.NEXTVAL,#bundleRefNo#,#awbNo#,#awbDate#, nvl(#totalCharges#,0),#invoice#,#srfNo#,'',#userID#,SYSDATE,#userID#,SYSDATE)
	</insert>
	
	
	
	<select id="checkBundleExists" parameterClass="cargo.cms.billing.bo.PaymentAPIPrePaymentRequest" resultClass="java.lang.Integer" >
		SELECT count(1) FROM BILL_BUNDLE_PAYMENT_HD  WHERE  BUNDLE_REF_NO =#airWaybillNumber# 
	</select>
	
	<select id="checkBundleStatus" parameterClass="cargo.cms.billing.bo.PaymentAPIPrePaymentRequest" resultClass="java.lang.Integer" >
		SELECT count(1) FROM BILL_BUNDLE_PAYMENT_HD  WHERE  BUNDLE_REF_NO =#airWaybillNumber#  AND status = 'PENDING' 
	</select>
	
	
	<select id="checkBundleCommited" parameterClass="cargo.cms.billing.bo.PaymentAPIPrePaymentRequest" resultClass="java.lang.Integer" >
		SELECT count(1) FROM BILL_BUNDLE_PAYMENT_HD  WHERE  BUNDLE_REF_NO =#airWaybillNumber#  AND status = 'COMMITTED' 
	</select>
	
	<select id="checkBundleAmountMatch" parameterClass="cargo.cms.billing.bo.PaymentAPIPrePaymentRequest" resultClass="java.lang.Integer" >
		SELECT CASE WHEN SUM(NVL(dtl.COMMITTED_AMT,0)) = #totalAmount# THEN 1 else 0 end as cnt
		FROM BILL_BUNDLE_PAYMENT_DTL dtl
		join BILL_BUNDLE_PAYMENT_HD hd ON hd.BUNDLE_REF_NO = dtl.BUNDLE_REF_NO 
		WHERE hd.BUNDLE_REF_NO = #airWaybillNumber# 
	</select>
	
	
	<select id="getCheckAwbExistsInBUndle" parameterClass="cargo.cms.billing.bo.PaymentAPIPrePaymentRequest" resultClass="java.lang.Integer" >
		SELECT count(*)
		FROM BILL_BUNDLE_PAYMENT_DTL dtl
		join BILL_BUNDLE_PAYMENT_HD hd ON hd.BUNDLE_REF_NO = dtl.BUNDLE_REF_NO 
		WHERE hd.BUNDLE_REF_NO = #airWaybillNumber# 
	</select>
	
	
	<update id="updateBundleStatus" parameterClass="cargo.cms.billing.bo.PaymentAPIPrePaymentRequest">
	    UPDATE BILL_BUNDLE_PAYMENT_HD SET
	       status = 'COMMITTED' ,
	       COMMITMENT_TIME = SYSDATE,
	       COMMITMENT_AMT = #totalAmount#,
	       TX_NO = #transactionId#,
		   LM_USER_ID = 'PAYCARGO',
		   LM_DATE = SYSDATE
		  WHERE BUNDLE_REF_NO = #airWaybillNumber# 
	</update>
	
	<update id="updateBundleStatusSubmitted" parameterClass="java.lang.String">
	    UPDATE BILL_BUNDLE_PAYMENT_HD SET
	       status = 'SETTLED' ,
	       SETTLEMENT_TIME = SYSDATE,
	       SETTLEMENT_AMT = (SELECT SUM(NVL(USED_AMT,0)) from BILL_BUNDLE_PAYMENT_DTL where BUNDLE_REF_NO = #bundleRefNo#), 
		   LM_USER_ID = 'PAYCARGO',
		   LM_DATE = SYSDATE
		  WHERE BUNDLE_REF_NO = #bundleRefNo# 
	</update>
	
	<update id="revertBundleStatus" parameterClass="cargo.cms.billing.bo.PaymentAPIPrePaymentRequest">
	    UPDATE BILL_BUNDLE_PAYMENT_HD SET
	       status = 'PENDING' ,
	       COMMITMENT_TIME = '',
	       COMMITMENT_AMT = '',
	       TX_NO = '',
		   LM_USER_ID = 'PAYCARGO',
		   LM_DATE = SYSDATE
		  WHERE BUNDLE_REF_NO = #airWaybillNumber# 
	</update>
	
	<select id="checkBundleAmountUsed" parameterClass="cargo.cms.billing.bo.PaymentAPIPrePaymentRequest" resultClass="java.lang.Integer" >
		SELECT CASE WHEN SUM(NVL(dtl.USED_AMT,0)) &gt; 0 THEN 1 else 0 end as cnt
		FROM BILL_BUNDLE_PAYMENT_DTL dtl
		join BILL_BUNDLE_PAYMENT_HD hd ON hd.BUNDLE_REF_NO = dtl.BUNDLE_REF_NO 
		WHERE hd.BUNDLE_REF_NO = #airWaybillNumber# 
	</select>
	
	<select id="checkBundleStatusForRevert" parameterClass="cargo.cms.billing.bo.PaymentAPIPrePaymentRequest" resultClass="java.lang.Integer" >
		SELECT count(1) FROM BILL_BUNDLE_PAYMENT_HD  WHERE  BUNDLE_REF_NO =#airWaybillNumber#  AND status = 'COMMITTED'
	</select>
	
	
	<select id="getValidBundleCharge" parameterClass="java.lang.String" resultClass="cargo.cms.imprt.bo.PaymentAPIPrePaymentDetailsBO">
	    SELECT BUNDLE_REF_NO as bundleRefNo, TO_CHAR(to_date(VALIDITY_DATE),'yyyy-MM-dd') as paymentDueDate,
	   	 (select sum(nvl(USED_AMT,0)) FROM  BILL_BUNDLE_PAYMENT_DTL where BUNDLE_REF_NO = BILL_BUNDLE_PAYMENT_HD.BUNDLE_REF_NO group by BUNDLE_REF_NO) as totalAmount,
	      TX_NO as transactionId 
	    FROM BILL_BUNDLE_PAYMENT_HD	WHERE TRUNC(VALIDITY_DATE) = TRUNC(SYSDATE - 1) AND STATUS IN ('COMMITTED','PENDING')	
	</select>
	
	
	<select id="getValidBundleChargeIfCompleted" parameterClass="java.lang.String" resultClass="cargo.cms.imprt.bo.PaymentAPIPrePaymentDetailsBO">			
     SELECT hd.BUNDLE_REF_NO as bundleRefNo, TO_CHAR(to_date(VALIDITY_DATE),'yyyy-MM-dd') as paymentDueDate,
	   	(select sum(nvl(USED_AMT,0)) FROM  BILL_BUNDLE_PAYMENT_DTL where BUNDLE_REF_NO = hd.BUNDLE_REF_NO group by BUNDLE_REF_NO) as totalAmount,
	    TX_NO as transactionId 
	    FROM BILL_BUNDLE_PAYMENT_HD hd  
      WHERE hd.BUNDLE_REF_NO = #bundleRefNo#  
      AND STATUS = 'COMMITTED'	      
      AND NOT EXISTS (select null from AWB awb, BILL_BUNDLE_PAYMENT_DTL dtl where BUNDLE_REF_NO = #bundleRefNo# and awb.awb_no = dtl.awb_no and awb.awb_date = dtl.awb_date and awb.awb_type != 'I') 
      AND NOT EXISTS (select null from BILL_BUNDLE_PAYMENT_DTL where BUNDLE_REF_NO = #bundleRefNo# AND nvl(USED_AMT,0) = 0) 
      AND 'Y' = (CASE WHEN (select count(1) FROM  BILL_BUNDLE_PAYMENT_DTL e where BUNDLE_REF_NO = #bundleRefNo# AND nvl(USED_AMT,0) &gt; 0) = (select count(1) FROM  BILL_BUNDLE_PAYMENT_HIS where BUNDLE_REF_NO = #bundleRefNo# AND  srf_no is not null ) then 'Y' else 'N' end )
	</select>
	
	
	<select id="getBundleChargesInfo" parameterClass="cargo.cms.imprt.bo.PaymentAPIPrePaymentDetailsBO" resultClass="cargo.cms.imprt.bo.ChargesListBO">	    
	    SELECT AWB_NO AS awbNo, to_char(awb_date,'DDMONYY') as awbDate,
   		nvl(DTL.USED_AMT,0) as amt
		FROM BILL_BUNDLE_PAYMENT_DTL dtl
		join BILL_BUNDLE_PAYMENT_HD hd ON hd.BUNDLE_REF_NO = dtl.BUNDLE_REF_NO 
		WHERE hd.BUNDLE_REF_NO =   #bundleRefNo#
	</select>
	
	<update id="updateStatusSubmitted" parameterClass="cargo.cms.imprt.bo.PaymentAPIPrePaymentDetailsBO">
	     UPDATE BILL_BUNDLE_PAYMENT_HD SET
	       status = 'SUBMITTED' , 
		   LM_USER_ID = 'SYSTEM',
		   LM_DATE = SYSDATE
		  WHERE BUNDLE_REF_NO = #bundleRefNo# 
	</update>
	
	<update id="updateStatusExpired" parameterClass="cargo.cms.imprt.bo.PaymentAPIPrePaymentDetailsBO">
	     UPDATE BILL_BUNDLE_PAYMENT_HD SET
	       status = 'EXPIRED' , 
		   LM_USER_ID = 'SYSTEM',
		   LM_DATE = SYSDATE
		  WHERE BUNDLE_REF_NO = #bundleRefNo# 
	</update>
	
	<update id="updateBundleRefToInvoiveHD" parameterClass="java.util.HashMap">
		UPDATE BILL_INV_HD SET BUNDLE_REF_NO = #bundleRefNo# WHERE INV_NO = #invoice#
	</update>
	<select id="findFltDetailsPickOrder" parameterClass="java.lang.String" resultClass="cargo.cms.extsvc.bo.RclBO" >
	SELECT FLT_KEY AS fltKey,TO_CHAR(FLT_DATE,'DDMONYY') AS fltDate FROM TOW_ORDER_OUT WHERE TO_NO=#PARAM#
 	</select>
	
	</sqlMap>