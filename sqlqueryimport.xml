<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="ImportModule">
	
	<!-- ImportDlvModule_ConfirmBypassRelease [Query added by Srinivas] -->
	<select id="impGetDirectTowList" parameterClass="cargo.cms.imprt.bo.ImpDHLDirectTowBO" resultClass="cargo.cms.imprt.bo.ImpDHLDirectTowBO">
		select CARR_CODE fltCarr, flt_no fltNo, f.flt_Key fltKey, 
			to_char(f.sch_Date,'DDMONYY') fltDate,
			PKG_COMMON.get_flt_ata(f.FLT_KEY, f.SCH_DATE, 'A')  ata,
			lpad(SCH_time, 4, 0)  sta,
			shp.exp_shp expShpmnt,
			nvl(srf.cfm_shp, 0) cnfrmShpMnt
			from flt_opr f 
			join (select flt_key, flt_date, count(1) exp_shp 
		 	from imp_car_awb a 
		 	join imp_car_shp s on a.awb_no = s.awb_no and a.awb_date = s.awb_date and a.BYPASS_REL = 'Y'
		 	join awb b on b.awb_no = a.awb_no and b.awb_date = a.awb_date and awb_type != 'T'
		 	group by flt_key, flt_date) shp
		 	on f.flt_key = shp.flt_key and f.sch_date = shp.flt_date
			left join (select flt_key, flt_date, count(1) cfm_shp 
		 	from imp_srf s 
		 	join imp_srf_flt sf on s.srf_no = sf.srf_no 
		 	join imp_car_awb a on a.awb_no = s.awb_no and a.awb_date = s.awb_date and a.BYPASS_REL = 'Y'
		 	join awb b on b.awb_no = a.awb_no and b.awb_date = a.awb_date and awb_type != 'T'
		 	where post_date is not null
		 	group by flt_key, flt_date) srf on f.flt_key = srf.flt_key and f.sch_date = srf.flt_date
			where f.flt_type = 'A' and
			f.FLT_KEY = nvl(#fltKey#, f.FLT_KEY) and
			f.sch_date = to_date(#fltDate#,'DDMONYY')
			<isNotEmpty property="fltCarr">
				AND	f.CARR_CODE = #fltCarr#
			</isNotEmpty>
			<isEmpty property="fltCarr">
				<isNotEmpty property="loginCarrier">
				   AND ( f.CARR_CODE = #loginCarrier# OR  f.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE  = #loginCarrier#))             
            	  </isNotEmpty>
           </isEmpty>			
	</select>
	
	<select id="Imp_SrfGetHighestSeverityCCcode" parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT CC_CODE FROM (SELECT T1.CC_CODE FROM V_CST_IMP_CC_CODE_AWB T1,MAST_CONSTRAINT_CODE T2 
		WHERE t1.cc_code = t2.code AND awb_no = #PARAM# AND NVL(hawb_no, '000000000000000000') = '000000000000000000'
		ORDER BY recv_date DESC, priority DESC) where rownum = 1
	</select>
	
	<select id="ccCodeChangedAfterSeverityCC" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		SELECT  COUNT(1)
	        FROM IMP_SRF A
	        LEFT JOIN ( SELECT CC_CODE,SRF_NO FROM (SELECT T1.CC_CODE,SRF.SRF_NO FROM V_CST_IMP_CC_CODE_AWB T1,MAST_CONSTRAINT_CODE T2 ,IMP_SRF SRF
                      WHERE T1.CC_CODE = T2.CODE AND T1.AWB_NO =SRF.AWB_NO AND SRF.SRF_NO=#srfNo#  AND NVL(HAWB_NO, '000000000000000000') = '000000000000000000'
                      ORDER BY RECV_DATE DESC, PRIORITY DESC) WHERE ROWNUM = 1) B on A.SRF_NO = B.SRF_NO
	        WHERE A.SRF_NO=#srfNo# AND (NVL(B.CC_CODE,'*') = NVL(A.AWB_CC_CODE,'*') OR nvl(B.CC_CODE,'NC') = 'NC')
	</select>
	
	<select id="ImpDHLDirectTowBOH" parameterClass="cargo.cms.imprt.bo.ImpDHLDirectTowBO" resultClass="cargo.cms.imprt.bo.ImpDHLDirectTowBO">	
			select (select nvl(imp_srf_post_yn,'N') from mast_constraint_code where code = A.conCode) as ccPostSRFInd , A.* from 
				(SELECT	a.AWB_NO awbNo, 
				SUBSTR(TRIM(A.AWB_NO),1,3)||'-'||SUBSTR(TRIM(A.AWB_NO),4) awbNoDisplay,
				to_char(a.awb_date,'DDMONYY') awbDate, 
				s.MANIFEST_PCS maniPcs,   
				s.MANIFEST_WT maniWt, 
				a.AWB_ORIGIN org, 
				a.AWB_DEST dest, a.AWB_PCS awbPcs, a.AWB_WT awbWt, 
				pkg_common.get_awb_splcodes(a.AWB_NO, a.AWB_DATE, 'I') splCode,
				a.CONTENT cont,
				nvl((select 'Y' from imp_srf sr
				join imp_srf_flt sf on sr.srf_no = sf.srf_no
				where sr.status = 'POSTED' and sr.awb_no = a.awb_no and sr.awb_date = a.awb_date 
				and sf.flt_key = s.flt_key and sf.flt_date = s.flt_date and rownum = 1), 'N') relInd,
				s.recd_pcs invPcs,
				s.recd_wt invWt,
				(SELECT V.CC_CODE FROM V_CST_IMP_CC_CODE_AWB V
				WHERE v.flt_key = s.flt_key and v.flt_date = s.flt_date AND V.AWB_NO = s.AWB_NO 
				 AND NVL(V.HAWB_NO, '000000000000000000') =  '000000000000000000' AND ROWNUM = 1) AS conCode
				FROM imp_car_awb a 
				join imp_car_shp s on a.awb_no = s.awb_no and a.awb_date = s.awb_date			
				join awb b on b.awb_no = a.awb_no and b.awb_date = a.awb_date and awb_type != 'T'
				where s.flt_key = #fltKey# and s.flt_date = to_date(#fltDate#,'DDMONYY')
				and a.BYPASS_REL = 'Y') A
	</select>
	
	<parameterMap id="imp_dhl_direct_tow_map" class="map" >
	<parameter property="RESULT" jdbcType="VARCHAR"	javaType="java.lang.String" mode="OUT"/>                  
	<parameter property="FLTKEY" jdbcType="VARCHAR"	javaType="java.lang.String" mode="IN"/>              
	<parameter property="FLTDATE" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>             
	<parameter property="AWBNO" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/> 
	<parameter property="AWBDATE" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
	<parameter property="USERID" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
	<parameter property="SRFNO" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
	</parameterMap>		

	<procedure id="imp_dhl_direct_tow"  parameterMap="imp_dhl_direct_tow_map" >
		{? = call pkg_dhl_direct_tow.FUN_CFM_CARGO_REL(?,?,?,?,?,?)}
	</procedure>
	
	<parameterMap id="CCmap" class="map" >
		<parameter property="AWBNO" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="FLTKEY" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="FLTDATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="CC" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
		<parameter property="CTMREFNO" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
	</parameterMap>
	<procedure id="impCheckCCCode" parameterMap="CCmap" >
		{call prc_get_cc_code(?,?,?,?,?)}
	</procedure>
	
	<select id="checkAWBClosed"  parameterClass="cargo.cms.imprt.bo.ImpDHLDirectTowBO" resultClass="java.lang.String">
		select count(1) from AWB where AWB_NO = #awbNo# AND AWB_DATE = to_date(#awbDate#,'DDMONYY') AND AWB_CLOSED_YN = 'Y'					
	</select>
	
	<select id="chkShipBrkDown"  parameterClass="cargo.cms.imprt.bo.ImpDHLDirectTowBO" resultClass="java.lang.String">
		select count(1) from AWB_INVENTORY where AWB_NO = #awbNo# AND AWB_DATE = to_date(#awbDate#,'DDMONYY')				
	</select>
	
	<select id="getCatalog"  parameterClass="cargo.cms.imprt.bo.ImpDHLDirectTowBO" resultClass="java.lang.String">
		select CATALOG from imp_car_awb where AWB_NO = #awbNo# AND AWB_DATE = to_date(#awbDate#,'DDMONYY') and ECT_HANDLER in ('DHL', 'DH*')					
	</select>
	
	<select id="getCatalogDtls"  parameterClass="cargo.cms.imprt.bo.ImpDHLDirectTowBO" resultClass="cargo.cms.imprt.bo.ImpDHLDirectTowBO">
		select  catalog as catalog, awb_pcs as awbPcs, awb_wt as awbWt FROM IMP_CAR_AWB where awb_no =#awbNo#  and awb_date =to_date(#awbDate#,'DDMONYY')					
	</select>
	
	<select id="chkCARCreated"  parameterClass="cargo.cms.imprt.bo.ImpDHLDirectTowBO" resultClass="java.lang.Integer">
		select count(1) 
		FROM IMP_CAR_SHP 
		where flt_key =#fltKey# and flt_date =to_date(#fltDate#,'DDMONYY') and awb_no =#awbNo# and CAR_CREATED = 'Y'					
	</select>

<!-- 	pushpa -->
		<select  id="retireiveCSD" parameterClass="cargo.cms.imprt.bo.RetrieveCSDBO" resultClass="cargo.cms.imprt.bo.RetrieveCSDBO">
		<![CDATA[
    	SELECT A.LSP_NO AS csd ,
       A.ULD_KEY AS uldKey,
       A.LOC_CODE    AS loc ,
       A.awb_no      AS awbNo,
       TO_char(A.awb_date,'DDMONYY') as awbDate,
       A.locn_pcs as locnPcs,
       A.locn_wt as locnWt,
       DECODE((select count(1) from MAST_WH_LOC t1, mast_wh_group t2 where t1.wh_group = t2.WH_GROUP and t2.wh_type = 'MHS' and t1.code=A.LOC_CODE),'0','Y','N') AS mhcsInd,
       DECODE((select NVL(Count(1),'0') from uld_inventory where uld_key=A.ULD_KEY and  (nvl(locked,'N')='Y' or NVL(lock_rqs,'N') = 'Y')),'0','N','Y') as uldLock,
       DECODE((select NVL(Count(1),'0') from lsp_inventory where lsp_no=A.LSP_NO and  (nvl(locked,'N')='Y' or NVL(lock_rqs,'N') = 'Y')),'0','N','Y') AS lspLock,
       (SELECT TARGET FROM RTRV_MOVE_ORDER WHERE ((STATUS <>'COMPLETED' AND STATUS <> 'CANCELLED') OR STATUS IS NULL)	AND (LSP = UPPER(A.LSP_NO)	OR ULD = UPPER(A.ULD_KEY))) as existStat,
       (case when (SELECT COUNT(1) FROM AWB_INVENTORY C WHERE NVL(C.FLT_TYPE,'A') <> 'E' AND (C.ULD_KEY = A.ULD_KEY OR C.LSP_NO = A.LSP_NO)) > 1 then 'Y' else 'N' end) as mixInd
	FROM awb_inventory A, awb B
	WHERE B.awb_no = A.awb_no and B.awb_date = A.awb_date and B.awb_closed_yn = 'N' and A.awb_no=#awbNo# AND NVL(A.FLT_TYPE,'A') <> 'E'
	]]>
	
	<isEqual property="inclULD" compareValue="N">
				AND	A.ULD_KEY IS NULL
	</isEqual>
	order by lsp_no,uld_key asc
    	</select>

	<update id="updateCfmRlsSeqNo" parameterClass="cargo.cms.imprt.bo.ImpDHLDirectTowBO">
		UPDATE  IMP_CAR_SHP SET 
		LM_DATE = SYSDATE,
		LM_USER_ID = #userId#,
		CFM_RLS = #cfmRlsSeqNo# 
		WHERE AWB_NO=#awbNo# AND AWB_DATE =to_date(#awbDate#,'DDMONYY')
		and FLT_KEY =#fltKey# AND FLT_DATE =to_date(#fltDate#,'DDMONYY')
	</update>
	
	<select id="getCfmRlsSeqNo"  parameterClass="map"  resultClass="java.lang.Integer" >
			 select CONFRIM_RELEASE_SEQ.NEXTVAL from dual
   	</select>
   	
   	<select id="getBillChrgDtl"  parameterClass="cargo.cms.imprt.bo.ImpDHLDirectTowBO" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM BILL_CHARGE_DTL WHERE SRF_NO=(SELECT SRF_NO FROM IMP_CAR_SHP  WHERE AWB_NO= #awbNo# AND AWB_DATE = to_date(#awbDate#,'DDMONYY')
		and FLT_KEY =#fltKey# AND FLT_DATE =to_date(#fltDate#,'DDMONYY') AND CFM_RLS = #cfmRlsSeqNo#) AND STATUS='PENDING'				
	</select>
	<select id="chkConstrained"  parameterClass="cargo.cms.imprt.bo.ImpDHLDirectTowBO" resultClass="java.lang.Integer">
		select count(1) from mast_constraint_code where CODE=#conCode# and CONSTRAINT='Y'				
	</select>
	<select id="getSRFForDHL"  parameterClass="cargo.cms.imprt.bo.ImpDHLDirectTowBO" resultClass="java.lang.String">
		SELECT SRF_NO FROM IMP_CAR_SHP  WHERE AWB_NO= #awbNo# AND AWB_DATE = to_date(#awbDate#,'DDMONYY')
		and FLT_KEY =#fltKey# AND FLT_DATE =to_date(#fltDate#,'DDMONYY') AND CFM_RLS = #cfmRlsSeqNo#				
	</select>
	<update id="updateImpSRFAwbInventory" parameterClass="cargo.cms.imprt.bo.ImpDHLDirectTowBO">
		UPDATE IMP_SRF_AWB_INVENTORY SET 
		LM_DATE = SYSDATE,
		LM_USER_ID = #userId#,
		DLV_PCS = LOCN_PCS,
		DLV_WT = LOCN_WT		
		WHERE srf_no = #srfNo#
	</update>
	<update id="updateImpSRFFlt" parameterClass="cargo.cms.imprt.bo.ImpDHLDirectTowBO">
		UPDATE IMP_SRF_FLT SET 
		LM_DATE = SYSDATE,
		LM_USER_ID = #userId#,
		INV_PCS = MANIFEST_PCS,
		INV_WT = MANIFEST_WT,
		DLV_PCS = MANIFEST_PCS,
		DLV_WT = MANIFEST_WT 
		WHERE srf_no =  #srfNo#
	</update>
	
	<!--  Changed for QR -->
	<update id="DHLPostSRF" parameterClass="cargo.cms.imprt.bo.ImpDHLDirectTowBO">
		UPDATE IMP_SRF SET 
		LM_DATE = SYSDATE,
		LM_USER_ID = #userId#,
		POST_DATE = TO_char(SYSDATE,'DDMONYY'),
		POST_TIME =TO_Char(SYSDATE,'HH24MI'),
		POST_USER = #userId#,
		STATUS ='POSTED'
		WHERE srf_no =  #srfNo#
	</update>
	
	<update id="updateImpSrf" parameterClass="cargo.cms.imprt.bo.ImpDHLDirectTowBO">
		UPDATE IMP_SRF SET 
	    SRF_PCS = (SELECT SUM(INV_PCS) FROM IMP_SRF_FLT WHERE SRF_NO=#srfNo#),
	    SRF_WT =(SELECT SUM(INV_WT) FROM IMP_SRF_FLT WHERE SRF_NO=#srfNo#),
	    LM_USER_ID=#userId#,
	    LM_DATE = SYSDATE
	    WHERE SRF_NO = #srfNo#
	</update>
	
	<!--  Changed for QR -->
	<update id="updateImpCarShpAfterByPass" parameterClass="cargo.cms.imprt.bo.ImpDHLDirectTowBO">
			UPDATE IMP_CAR_SHP
			SET   RECD_PCS	  =	manifest_pcs,
		    RECD_WT	  =  manifest_wt,
		    LM_USER_ID =  #userId#, 
			LM_DATE   =  sysdate
			WHERE  AWB_NO	  =   #awbNo#  AND
		    AWB_DATE =	TO_DATE(#awbDate#,'DDMONYY') AND
		    FLT_KEY = UPPER(#fltKey#) AND
		    FLT_DATE = TO_DATE(#fltDate#,'DDMONYY')
	</update>
	
	<!--  Changed for QR -->
	<insert id="insertAwbInventoryForConfirmBypass" parameterClass="cargo.cms.imprt.bo.ImpDHLDirectTowBO">
		INSERT INTO awb_inventory (seq_no,awb_no,awb_date,flt_key,flt_date,flt_type,carr_code,loc_code,locn_pcs,locn_wt,cr_user_id,cr_date,lm_user_id,lm_date) 
		VALUES (AWB_INV_SEQ.NEXTVAL,#awbNo#,#awbDate#,#fltKey#,#fltDate#,'I',substr(#fltKey#, 0, 2),#locCode#,
  		(SELECT MANIFEST_PCS FROM IMP_CAR_SHP WHERE AWB_NO	= #awbNo# AND AWB_DATE =	TO_DATE(#awbDate#,'DDMONYY') AND  
  			FLT_KEY = UPPER(#fltKey#) AND FLT_DATE = TO_DATE(#fltDate#,'DDMONYY')),
  		(SELECT MANIFEST_WT FROM IMP_CAR_SHP WHERE AWB_NO =  #awbNo#  AND  AWB_DATE =	TO_DATE(#awbDate#,'DDMONYY') AND FLT_KEY = UPPER(#fltKey#) 
  			AND  FLT_DATE = TO_DATE(#fltDate#,'DDMONYY')),#userId#,SYSDATE,#userId#,SYSDATE)
	</insert>
	
	<delete id="deletetAwbInventoryFromConfirmBypass" parameterClass="cargo.cms.imprt.bo.ImpDHLDirectTowBO">
			delete awb_inventory 
			WHERE  AWB_NO	  =   #awbNo#  AND
		    AWB_DATE =	TO_DATE(#awbDate#,'DDMONYY') AND
		    UPPER(FLT_KEY) = UPPER(#fltKey#) AND
		    FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') 
	</delete>
	
	<select id="getAgentDetailsForPosting" parameterClass="cargo.cms.imprt.bo.ImpDHLDirectTowBO"  resultClass="cargo.cms.imprt.bo.ImpDHLDirectTowBO">
		select s.agent_id as agentId,(select code_desc from cust_company where code = s.agent_id)  as agentName,s.charge_status as status  
		from imp_srf s where srf_no = #srfNo#
	</select>
	
	<select id="chkPostSrfAllowed"  parameterClass="cargo.cms.imprt.bo.ImpDHLDirectTowBO" resultClass="java.lang.Integer">
		select count(1) from mast_constraint_code where CODE=#conCode# and imp_srf_post_yn='Y'				
	</select>
	
	<select id="chkSrfAllowed"  parameterClass="cargo.cms.imprt.bo.ImpDHLDirectTowBO" resultClass="java.lang.Integer">
		select count(1) from mast_constraint_code where CODE=#conCode# and IMP_SRF_ISS_YN='Y'				
	</select>
	
	<!--  Changed for QR -->
	<select id="chkDIRForConfirmByPassRelease"  parameterClass="java.util.HashMap" resultClass="java.lang.String">
		select doc_disc from imp_car_shp where awb_no=#AWB_NO# and awb_date = to_date(#AWB_DATE#,'DDMONYY')
		AND flt_key=#FLT_KEY# and flt_date = to_date(#FLT_DATE#,'DDMONYY')			
	</select>
	
	<!--  Changed for QR -->
	<select id="chkCIRForConfirmByPassRelease"  parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		select cir_pcs from imp_car_shp where awb_no=#AWB_NO# and awb_date = to_date(#AWB_DATE#,'DDMONYY')
		AND flt_key=#FLT_KEY# and flt_date = to_date(#FLT_DATE#,'DDMONYY')			
	</select>
	
	<!-- ImportDlvModule_ConfirmBypassRelease [Query ended by Srinivas] -->	
		
	<!-- ImportDlvModule_AssignCheckerSRFDetails [Query added by Srinivas] -->
	
	<select id="getSRFDetails"  parameterClass="cargo.cms.imprt.bo.AsgnChkSrfBO" resultClass="cargo.cms.imprt.bo.AsgnChkSrfBO">
		SELECT 
		ISF.AWB_NO AS awbNo,
		to_char(ISF.AWB_DATE,'DDMONYY')AS awbDate,
		T.TRUCK_NO AS truckNo,
		T.trip_id AS tripId,
		ISF.SRF_NO AS srfNo,
		ISF.SRF_PCS AS srfPcs,
		ISF.SRF_WT AS srfWt,
		ISF.COLL_NAME AS collName,
		ISF.COLL_HKID AS collHkid 
		FROM IMP_SRF ISF 
		LEFT JOIN IMP_TRUCK_SRF ITS on ITS.SRF_NO = ISF.SRF_NO
		LEFT JOIN TRUCK_TRIP T ON T.TRIP_ID = ITS.TRIP_ID and CLOSED = 'N'
		WHERE
		ISF.SRF_NO = NVL(#srfNo#, ISF.SRF_NO)
		and NVL(T.TRUCK_NO, '*') = NVL(#truckNo#, NVL(T.TRUCK_NO, '*'))
		and ((ISF.AUTH_REP_ID = (SELECT HKID FROM SEC_USER WHERE CODE = #loginUser#)
			and ISF.AGENT_ID = #loginCustNo#)
			OR 
			exists (SELECT null FROM CUST_AGENT_AUTH_REP 
					WHERE CUST_NO = ISF.AGENT_ID and ISF.AGENT_ID = #loginCustNo# AND AUTH_REP_ID =(SELECT HKID FROM SEC_USER WHERE CODE = #loginUser#)))
	</select>
	
	<select id="getHkidForPerson" parameterClass="cargo.cms.imprt.bo.AsgnChkSrfBO" resultClass="java.lang.String">			
		select AUTH_REP_ID as authRepId from CUST_AGENT_AUTH_REP 
		where AUTH_REP_NAME =  #newCollName# AND CUST_NO = (SELECT CUST_NO FROM SEC_USER WHERE CODE = #loginUser#) and rownum = 1
	</select>
	
	<select id="fetchSrfDtlsTCStatus" parameterClass="map" resultClass="java.lang.String">
		select TC_IND from MAINTAIN_TC WHERE FUNCTION_NAME = #functionName# AND TC_ID = (select MAX(TC_ID) from MAINTAIN_TC where FUNCTION_NAME = #functionName#)
	</select>
	  
	<!--  Changed for QR -->
  	<select id="checkAuthPerson" parameterClass="map" resultClass="java.lang.String">
		SELECT count(1) from IMP_SRF ISF where ISF.SRF_NO = #srfNo# and  
			(ISF.AUTH_REP_ID = (SELECT HKID FROM SEC_USER WHERE CODE = #loginUser#)
			OR 
			exists (SELECT null FROM CUST_AGENT_AUTH_REP 
					WHERE CUST_NO = ISF.AGENT_ID AND AUTH_REP_ID =(SELECT HKID FROM SEC_USER WHERE CODE = #loginUser#)))
	</select>
	
	<!--  Changed for QR
	<select id="checkLoginUser" parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT COUNT(1) FROM CUST_AGENT_AUTH_REP
    	INNER JOIN IMP_SRF ISF ON ISF.AGENT_ID = CUST_AGENT_AUTH_REP.CUST_NO OR ISF.AUTH_REP_ID = CUST_AGENT_AUTH_REP.AUTH_REP_ID
    	WHERE CUST_AGENT_AUTH_REP.AUTH_REP_ID = (SELECT HKID FROM SEC_USER WHERE CODE = #loginUser#)
	</select> -->
	    
	<select id="checkSRFExp"  parameterClass="java.lang.String" resultClass="java.lang.String">
		<![CDATA[ SELECT count(1) from IMP_SRF where SRF_NO = #srfNo#  AND  SRF_EXPY_DATE < sysdate	]]>				
	</select>
	
	<select id="chkCollPersonBlackListed"  parameterClass="java.lang.String" resultClass="java.lang.String">
		select count(1) from cust_agent_auth_rep where black_listed = 'Y' and auth_rep_name = #newCollName#			
	</select>
	
	
	<select id="checkSRFVerified"  parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT count(1) from IMP_SRF where SRF_NO = #srfNo#  AND  VERIFIED = 'Y'					
	</select>
		
	<select id="chkAssgnCompl" parameterClass="java.lang.String" resultClass="java.lang.String">			
		SELECT COUNT(1) FROM  IMP_TRUCK_SRF WHERE  ASSG_COMP = 'Y' AND SRF_NO = #srfNo# 
	</select>
	
	<select id="getBookHrs" parameterClass="cargo.cms.imprt.bo.AsgnChkSrfBO" resultClass="java.lang.String">			
		SELECT to_char(IB.BKG_SLOT_DATE,'DDMONYY HH24MI') FROM IMP_BOOKING IB 
    	INNER JOIN IMP_BOOKING_DTL IBD ON IB.BOOKING_NO =IBD.BOOKING_NO AND IBD.AWB_NO = #awbNo# AND IBD.AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') AND IBD.SRF_NO = #srfNo#
   		WHERE  #newTruckNo# IN (TRUCK1,TRUCK2,TRUCK3,TRUCK4,TRUCK5,TRUCK6)
	</select>
	
	<select id="getPlusXHrs" parameterClass="java.lang.String" resultClass="java.lang.String">			
		 select to_char((to_date(#bkDate#,'DDMONYY HH24MI') + (SELECT RULE_VALUE FROM CMSRULES where RULE_CODE = 'ASGN_CHKER_BOOK')/24 ),'DDMONYY HH24MI') as plusXHrs from dual
	</select>
	
	<select id="chkBkHrs" parameterClass="map" resultClass="java.lang.String">			
		SELECT count(1) FROM dual WHERE SYSDATE BETWEEN TO_DATE(#bkDate#,'DDMONYY HH24MI')  
    	AND TO_DATE(#plusXHrs#,'DDMONYY HH24MI') 
	</select>
	
	<!--  Changed for QR -->
		<update id="updateSRFDetails" parameterClass="cargo.cms.imprt.bo.AsgnChkSrfBO">	
				UPDATE IMP_SRF 
					SET 
					COLL_NAME = NVL(#newCollName#,COLL_NAME),
					COLL_HKID = NVL(#newCollHkid#,COLL_HKID),
          			TRUCK_NO  = NVL(#newTruckNo#,TRUCK_NO),
					LM_DATE   = SYSDATE,
					LM_USER_ID =  #loginUser#
				WHERE SRF_NO = UPPER(#srfNo#)
	</update>
		 
 	<delete id="deleteTruck" parameterClass="cargo.cms.imprt.bo.AsgnChkSrfBO" >
		DELETE IMP_TRUCK_SRF  WHERE SRF_NO = #srfNo# AND TRIP_ID = #tripId#
	</delete>
	
	<delete id="deleteTruckOnSRF" parameterClass="cargo.cms.imprt.bo.AsgnChkSrfBO" >
		DELETE IMP_TRUCK_SRF  WHERE SRF_NO = #srfNo#
	</delete>
	
	<insert id="insertUpdatedTruck" parameterClass="cargo.cms.imprt.bo.AsgnChkSrfBO" >
		 INSERT INTO IMP_TRUCK_SRF (
    	 TRIP_ID,SRF_NO,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE)
    	 values ((select t.trip_id FROM IMP_SRF ISF 
    	 inner join truck_trip t on t.truck_no = isf.truck_no 
    	 WHERE ISF.SRF_NO = #srfNo# AND CLOSED = 'N'),
   		 #srfNo#,
  		 #loginUser#,
    	 sysdate,
    	 #loginUser#,
    	 sysdate)
	</insert>
		
	<!-- ImportDlvModule_AssignCheckerSRFDetails [Query ended by Srinivas] -->
	
	
	<!-- ImportDlvModule_REAssignCheckerSRFDetails [Query added by Srinivas] -->
	
	<select id="getSRFList"  parameterClass="cargo.cms.imprt.bo.AsgnChkSrfBO" resultClass="cargo.cms.imprt.bo.AsgnChkSrfBO">
		SELECT distinct
          ISF.AWB_NO AS awbNo,
          to_char(ISF.AWB_DATE,'DDMONYY')AS awbDate,
          T.TRUCK_NO AS truckNo,
          T.trip_id as tripId,
          ISF.SRF_NO AS srfNo,
          ISF.SRF_PCS AS srfPcs,
          ISF.SRF_WT AS srfWt,
          ISF.COLL_NAME AS collName,
          ISF.COLL_HKID AS collHkid 
          FROM IMP_SRF ISF 
          left JOIN IMP_TRUCK_SRF ITS on ITS.SRF_NO = ISF.SRF_NO
          left JOIN TRUCK_TRIP T ON T.TRIP_ID = ITS.TRIP_ID and CLOSED = 'N'
          WHERE
          ISF.SRF_NO = NVL(#srfNo#, ISF.SRF_NO)
          AND NVL(T.TRUCK_NO, '*') = NVL(#truckNo#, NVL(T.TRUCK_NO, '*'))
	
	</select>
		
	<select id="chkSRFExp"  parameterClass="java.lang.String" resultClass="java.lang.String">
		<![CDATA[ SELECT count(1) from IMP_SRF where SRF_NO = #srfNo#  AND  SRF_EXPY_DATE < sysdate	]]>				
	</select>
	
	<select id="checkSRFPosted"  parameterClass="java.lang.String" resultClass="java.lang.String">
		  SELECT count(1) from IMP_SRF where SRF_NO = #srfNo# AND STATUS = 'POSTED'					
	</select>
	
	<update id="updSRFDetails" parameterClass="cargo.cms.imprt.bo.AsgnChkSrfBO">	
				UPDATE IMP_SRF 
					SET 
          			TRUCK_NO  = #newTruckNo#,
					LM_DATE   = SYSDATE,
					LM_USER_ID =  #loginUser#
				WHERE SRF_NO = #srfNo#
	</update>
	<select id="chksrfprinted" parameterClass="cargo.cms.imprt.bo.AsgnChkSrfBO" resultClass="java.lang.Integer">			
		 select count(1) from imp_srf where srf_no=#srfNo# and PRINT_IND = 'Y'
	</select>
	<select id="chkValidTrk"  parameterClass="java.lang.String" resultClass="java.lang.Integer">
		  select count(1) from truck_trip WHERE TRUCK_NO=#truckNo# and closed='N'					
	</select>
	
	<select id="chkSRFAssignedToTrk"  parameterClass="java.lang.String" resultClass="java.lang.Integer">
		  SELECT COUNT(1) FROM TRUCK_TRIP WHERE TRIP_ID IN 
		(SELECT TRIP_ID FROM IMP_TRUCK_SRF WHERE SRF_NO=#srfNo#)
		and CLOSED = 'N'					
	</select>
		
	<!-- ImportDlvModule_REAssignCheckerSRFDetails [Query ended by Srinivas] -->
	
	
	
	<!-- ImportDlvModule_NoBreakInventory [Query added by Srinivas] -->
	
	<select id="checkUldKeyForInv"  parameterClass="java.lang.String" resultClass="java.lang.String">
		select count(1) from uld_inventory where ULD_KEY = #uldKey#				
	</select>
	
	<select id="checkUldKeyForNoBrk"  parameterClass="java.lang.String" resultClass="java.lang.String">
		select count(1) from uld_inventory where ULD_KEY = #uldKey# and HANDLING_MODE = 'NBK'					
	</select>
	
	<select id="fetchFltDtls"  parameterClass="java.lang.String" resultClass="cargo.cms.imprt.bo.InventoryUpdateBO">
		select ULD_KEY uldKey,FLT_KEY as fltKey, to_char(FLT_DATE,'DDMONYY') as fltDate,LOC_CODE locCode from uld_inventory where ULD_KEY = #uldKey#					
	</select>
	
			<!-- changed on 16MAY11 FOR uat bug #993 -->	
	<select id="fetchInvDtls"  parameterClass="java.lang.String" resultClass="cargo.cms.imprt.bo.InventoryUpdateBO">
		select AWB_NO as awbNo,to_char(AWB_DATE,'DDMONYY') as awbDate,LOCN_PCS as locPcs,  LOCN_WT locWt,SEQ_NO as seqNo,FLT_KEY as fltKeyList,
		to_char(FLT_DATE,'DDMONYY') as fltDateList,FLT_TYPE as fltTypeList from AWB_INVENTORY where ULD_KEY = #uldKey#	 and SRF_NO is null					
	</select>
	
	<update id="updateInventoryAWb" parameterClass="cargo.cms.imprt.bo.InventoryUpdateBO">	
				UPDATE AWB_INVENTORY 
					SET 
					LOCN_PCS = NVL(#recdPcs#,0),
					LOCN_WT =  NVL(#recdWt#,0),
					LM_DATE =   SYSDATE,
					LM_USER_ID = #lmUserId#,
					REF_AWB_EVENT = 'NBULD'
				WHERE 	
				SEQ_NO=#seqNo#
	</update>
	
	<!--  Changed for QR -->
	<update id="updateInventory" parameterClass="cargo.cms.imprt.bo.InventoryUpdateBO">	
				UPDATE IMP_CAR_SHP 
					SET 
					RECD_PCS =NVL(RECD_PCS,0)-NVL(#locPcs#,0)+NVL(#recdPcs#,0),
					RECD_WT =  NVL(RECD_WT,0)-NVL(#locWt#,0)+NVL(#recdWt#,0),
					NO_BRK_YN = 'Y',
					LM_DATE =   SYSDATE, 
					LM_USER_ID = #lmUserId#
				WHERE 	
				AWB_NO = UPPER(#awbNo#) AND AWB_DATE = to_date(#awbDate#,'DDMONYY')
				and FLT_KEY=#fltKeyList# and FLT_DATE = #fltDateList#
	</update>
	
	<!--  Changed for QR -->	
	<update id="updateLock" parameterClass="cargo.cms.imprt.bo.InventoryUpdateBO">	
				UPDATE AWB 
					SET 
					LOCKED_YN = 'Y',
					LM_USER_ID = #lmUserId#,
					LM_DATE =   SYSDATE
				WHERE 	
				AWB_NO = UPPER(#awbNo#) AND AWB_DATE = to_date(#awbDate#,'DDMONYY')
	</update>	

	<update id="insertNbkEvents" parameterClass="cargo.cms.imprt.bo.InventoryUpdateBO">	
				INSERT INTO AWB_EVENTS 
			  (AWB_NO, AWB_DATE, EVENT_ID, EVENT_DESC, FLT_KEY, FLT_DATE,
			  FLT_TYPE, TR_NO, ULD_KEY, PCS, WT, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE ) 
			VALUES  
			  (#awbNo#,  TO_DATE(#awbDate#,'DDMONYY') , 'NBKUPD', (SELECT EVENT_DESC FROM MAST_AWB_EVENTS WHERE EVENT_ID = 'NBKUPD'), #fltKeyList#,  TO_DATE(#fltDateList#,'DDMONYY'), 
			  #fltTypeList#, AWB_event_SEQ.nextval
			, #uldKey#, nvl(#recdPcs#,0),nvl(#recdWt#,0) , #lmUserId#,  sysdate, #lmUserId#,  sysdate)
	</update>	
	
	<!-- ImportDlvModule_NoBreakInventory [Query ended by Srinivas] -->
	
	<!-- ImportDocModule_CustomerInteraction [Query added by Srinivas] -->
	
		<select id="checkAwnNo"  parameterClass="java.lang.String" resultClass="java.lang.String">
			SELECT COUNT(1) FROM AWB  where AWB_NO = #awbNo#					
		</select>
	
		<select id="customerInteractionDtls" parameterClass="cargo.cms.imprt.bo.CustomerInteractionBO" resultClass="cargo.cms.imprt.bo.CustomerInteractionBO">
			select 
				 cust.awb_no AS awbNo,
				 to_char(cust.awb_date,'DDMONYY') as awbDate,
         		 cust.status as status,
         		 cust.contact_no as contNumber,
     			 cust.int_purpose AS purpose,
     			 cust.int_mode AS interactMode,
     			 (SELECT CODE_DESC FROM MAST_CODE_DTL WHERE CODE = cust.int_purpose AND CODE_TYPE = 'CUST_PURPOSE') AS purposeDesc,
     		 	 (SELECT CODE_DESC FROM MAST_CODE_DTL WHERE CODE = cust.int_mode AND CODE_TYPE = 'INTER_MODE') AS interactModeDesc,
     			 cust.contact_person AS contName,
     			 to_char(cust.INT_DATE,'DDMONYY HH24:MI') AS contDate,
     			 cust.follow_up_action AS actionReq,
    			 to_char(cust.follow_up_date,'DDMONYY HH24:MI') AS fallowUpDate,
    			 cust.CR_USER_ID AS createdBy,
    			 cust.comp_by AS complBy,
    			 TO_CHAR(cust.comp_date,'DDMONYY') AS complDate,
     			 cust.remarks AS remarks    
				 FROM CUST_INTERACTION cust 
      			 WHERE 
      			 cust.awb_no = #awbNo# 
      			 <isNotEmpty property="awbDate">
      			 AND cust.AWB_DATE = #awbDate# 
      			 </isNotEmpty>
      			 <isNotEmpty property="status">
      			 		AND cust.STATUS = #status#
      			 </isNotEmpty>
      			 <isNotEmpty property="arrDate">
      			 		<isNotEmpty property="arrDateTo">
							AND to_date(to_char(cust.int_date,'DDMONYY HH24MI'),'DDMONYY HH24MI') between to_Date(#arrDateHm#,'DDMONYY HH24MI') and to_Date(#arrDateToHm#,'DDMONYY HH24MI')
						</isNotEmpty>
      			 </isNotEmpty>
      			 <dynamic prepend="ORDER BY ">
                         <isNotEmpty property="sortOrder.sortField">
                        $sortOrder.sortField$
                        </isNotEmpty>
                        <isEmpty property="sortOrder.sortField">
                        contDate
                        </isEmpty>
            </dynamic>   
      			  
			</select>
			<select id="customerInteractionDtlsCOUNT" parameterClass="cargo.cms.imprt.bo.CustomerInteractionBO" resultClass="java.lang.Integer">
			select 
				 count(*)    
				 FROM CUST_INTERACTION cust 
      			 WHERE 
      			 cust.awb_no = #awbNo# 
      			 <isNotEmpty property="status">
      			 		AND cust.STATUS = #status#
      			 </isNotEmpty>
      			 <isNotEmpty property="arrDate">
      			 		<isNotEmpty property="arrDateTo">
							AND to_date(to_char(cust.int_date,'DDMONYY HH24MI'),'DDMONYY HH24MI') between to_Date(#arrDateHm#,'DDMONYY HH24MI') and to_Date(#arrDateToHm#,'DDMONYY HH24MI')
						</isNotEmpty>
      			 </isNotEmpty> 
			</select>
			
			<select id="custIntDtlsUpdated" parameterClass="cargo.cms.imprt.bo.CustomerInteractionBO" resultClass="cargo.cms.imprt.bo.CustomerInteractionBO">
			select 
				 cust.awb_no AS awbNo,
				 to_char(cust.awb_date,'DDMONYY') as awbDate,
         		 cust.status as status,
         		 cust.contact_no as contNumber,
     			 cust.int_purpose AS purpose,
     			 cust.int_mode AS interactMode,
     			 (SELECT CODE_DESC FROM MAST_CODE_DTL WHERE CODE = cust.int_purpose AND CODE_TYPE = 'CUST_PURPOSE') AS purposeDesc,
     		     (SELECT CODE_DESC FROM MAST_CODE_DTL WHERE CODE = cust.int_mode AND CODE_TYPE = 'INTER_MODE') AS interactModeDesc,
     			 cust.contact_person AS contName,
     			 to_char(cust.INT_DATE,'DDMONYY HH24:MI') AS contDate,
     			 cust.follow_up_action AS actionReq,
    			 to_char(cust.follow_up_date,'DDMONYY HH24:MI') AS fallowUpDate,
    			 cust.CR_USER_ID AS createdBy,
    			 cust.comp_by AS complBy,
    			 TO_CHAR(cust.comp_date,'DDMONYY') AS complDate,
     			 cust.remarks AS remarks    
				 FROM CUST_INTERACTION cust 
      			 WHERE 
      			 cust.awb_no = #awbNo#
      			 <isNotEmpty property="awbDate">
      			 AND cust.AWB_DATE = #awbDate#
      			 </isNotEmpty>
      			 <isNotEmpty property="arrDate">
      			 		<isNotEmpty property="arrDateTo">
							AND cust.int_date between to_Date(#arrDateHm#,'DDMONYY HH24MI') and SYSDATE
						</isNotEmpty>
      			 </isNotEmpty>
      			 <dynamic prepend="ORDER BY ">
                         <isNotEmpty property="sortOrder.sortField">
                        $sortOrder.sortField$
                  </isNotEmpty>
            </dynamic>   
			</select>
			<select id="custIntDtlsUpdatedCOUNT" parameterClass="cargo.cms.imprt.bo.CustomerInteractionBO" resultClass="java.lang.Integer">
			select 
				 count(*)   
				 FROM CUST_INTERACTION cust 
      			 WHERE 
      			 cust.awb_no = #awbNo#
      			 <isNotEmpty property="arrDate">
      			 		<isNotEmpty property="arrDateTo">
							AND cust.int_date between to_Date(#arrDateHm#,'DDMONYY HH24MI') and SYSDATE
						</isNotEmpty>
      			 </isNotEmpty>
			</select>
			
			<insert id="updateCustInter" parameterClass="cargo.cms.imprt.bo.CustInterUpdateBO">
				INSERT INTO CUST_INTERACTION  
  					(AWB_NO,INT_PURPOSE, INT_MODE, CONTACT_PERSON,INT_DATE,FOLLOW_UP_DATE,FOLLOW_UP_ACTION,REMARKS,LM_DATE,CR_DATE,CR_USER_ID,LM_USER_ID,AWB_DATE,STATUS,CONTACT_NO,TR_TYPE)
				VALUES (UPPER(#awbNo#),#purpose#, #interactMode#, #contName#,to_date(#custDateHm#,'DDMONYY HH24MI'),to_date(#follDateToHm#,'DDMONYY HH24MI'),#fallowUpAction#, #remarks#,SYSDATE,SYSDATE,#crUserId#,#lmUserId#,#awbDate#,#status#,#contNumber#,'CUINT')  
		 	</insert>
		 		
		<select id="getHrsMins"  parameterClass="map"  resultClass="java.lang.String" >
			  SELECT UPPER(TO_CHAR(SYSDATE,'HH24MI')) FROM DUAL
   		</select>
   			
		<select id="imp_getdateAndTime"  parameterClass="map"  resultClass="java.lang.String" >
			SELECT UPPER(TO_CHAR(SYSDATE,'DDMONYY HH24MI')) FROM DUAL
   		</select>	
	
		<!--  Changed for QR -->
   		<select id="customerPendingAction" parameterClass="cargo.cms.imprt.bo.CustomerInteractionBO" resultClass="cargo.cms.imprt.bo.CustomerInteractionBO">
			
			select
			     cust.awb_no AS awbNo,
     			 cust.int_purpose AS purpose,
     			 cust.int_mode AS interactMode,
     			 (SELECT CODE_DESC FROM MAST_CODE_DTL WHERE CODE = cust.int_purpose AND CODE_TYPE = 'CUST_PURPOSE') AS purposeDesc,
     		 	 (SELECT CODE_DESC FROM MAST_CODE_DTL WHERE CODE = cust.int_mode AND CODE_TYPE = 'INTER_MODE') AS interactModeDesc,
     			 cust.contact_person AS contName,
     			 to_char(cust.INT_DATE,'DDMONYY HH24:MI') AS contDate,
     			 to_char(cust.follow_up_date,'DDMONYY HH24:MI') AS fallowUpDate,
     			 TO_CHAR(cust.LM_DATE, 'DDMONYY HH24:MI:SSSSS') as lmDate,
     			 cust.REMARKS AS remarks,
     			 (SELECT CODE_DESC FROM MAST_CODE_DTL WHERE CODE = cust.follow_up_action AND CODE_TYPE = 'FOLLOW_UP_ACTION') AS fallowUpActionDesc,
     			 cust.follow_up_action AS fallowUpAction
           		 FROM CUST_INTERACTION cust
           		 WHERE
           		 (cust.FOLLOW_UP_DATE &gt;= TO_DATE(#fallowUpDate#||'0000','DDMONYYHH24MI') AND cust.FOLLOW_UP_DATE &lt;= TO_DATE(#fallowUpDate#||'2359','DDMONYYHH24MI'))
           		 AND COMP_DATE IS NULL
      			 <isNotEmpty property="fallowUpAction">
      			 		AND cust.FOLLOW_UP_ACTION = #fallowUpAction#
      			 </isNotEmpty>
      			 <isNotEmpty property="purpose">
      			 		AND cust.int_purpose = #purpose#
      			 </isNotEmpty>
      			 ORDER BY fallowUpDate
			</select>
			
			<!--  Changed for QR -->
			<update id="updateCustInterPend" parameterClass="map">	
				UPDATE CUST_INTERACTION 
					SET 
					REMARKS =	#newremarks#,
      				LM_DATE =   SYSDATE
				WHERE 	
				AWB_NO = UPPER(#awbNo#)  AND TO_CHAR(LM_DATE, 'DDMONYY HH24:MI:SSSSS') = #lmDate#
			</update>
			
			<!--  Changed for QR -->
			<update id="updateAsCompl" parameterClass="map">	
				UPDATE CUST_INTERACTION 
					SET 
					REMARKS =	#newremarks#,
      				COMP_DATE =   SYSDATE,
      				COMP_BY =  #complBy#,
      				LM_DATE =   SYSDATE
				WHERE 	
				AWB_NO = UPPER(#awbNo#)  AND TO_CHAR(LM_DATE, 'DDMONYY HH24:MI:SSSSS') = #lmDate#
			</update>
		<!-- ImportDocModule_CustomerInteraction [Query Ended by Srinivas] -->

<!-- Maintain CIR starts  [Srinivas] -->
<select id="getShipmentIrrList"  parameterClass="cargo.cms.imprt.bo.CarShpBO" 
					 resultClass="cargo.cms.imprt.bo.CarShpBO">
		<![CDATA[
		
		SELECT       
				carawb.AWB_NO as awbNo,
				carawb.AWB_PRFX as awbPrefix,
			    carawb.AWB_PCS as awbPcs,   
				carawb.AWB_WT as awbWt,
				carawb.AWB_DEST as awbDest,
				carawb.CONTENT as content,      
				carawb.CATALOG as catalog,     
				carawb.AWB_CLOSED as awbClosed,
			    carawb.PPK_TYPE as ppkType,
			    carshp.PPK_TYPE as manPpkType,
			    carshp.DAM_PCS as damPcs,       
				carshp.DAM_WT as damWt,      
				carshp.MANIFEST_PCS as manifestPcs,
			    carshp.MANIFEST_WT as manifestWt,        
				(carshp.RECD_PCS+nvl(tt_pcs,0)) as recdPcs,      
				(carshp.RECD_WT+nvl(tt_wt,0)) as recdWt, 
				TO_CHAR(carawb.AWB_DATE,'DDMONYY') as awbDate,  
				TO_CHAR(carshp.LM_DATE, 'DDMONYY HH24:MI:SS') as lmDate,      
				case when CIR_PROC_USER is not null then CIR_PCS else abs((carshp.RECD_PCS+nvl(tt_pcs,0)) - carshp.MANIFEST_PCS) end as cirPcs,     
				case when CIR_PROC_USER is not null then CIR_PCS_TYPE else case when (carshp.RECD_PCS+nvl(tt_pcs,0)) - carshp.MANIFEST_PCS > 0 then 'SP' else case when (carshp.RECD_PCS+nvl(tt_pcs,0)) - carshp.MANIFEST_PCS < 0 then 'SL' else null end end end as cirPcsType,        
				case when CIR_PROC_USER is not null then CIR_WT else abs((carshp.RECD_WT+nvl(tt_wt,0)) - carshp.MANIFEST_WT) end as cirWt,     
				case when CIR_PROC_USER is not null then CIR_WT_TYPE else case when (carshp.RECD_WT+nvl(tt_wt,0)) - carshp.MANIFEST_WT > 0 then 'SP' else case when (carshp.RECD_WT+nvl(tt_wt,0)) - carshp.MANIFEST_WT < 0 then 'SL' else null end end end as cirWtType,     
			    (carshp.RECD_PCS+nvl(tt_pcs,0)) - carshp.MANIFEST_PCS as actCirPcs,     
				case when (carshp.RECD_PCS+nvl(tt_pcs,0)) - carshp.MANIFEST_PCS > 0 then 'SP' else 'SL' end as actCirPcsType,        
				(carshp.RECD_WT+nvl(tt_wt,0)) - carshp.MANIFEST_WT as actCirWt,     
				case when (carshp.RECD_WT+nvl(tt_wt,0)) - carshp.MANIFEST_WT > 0 then 'SP' else 'SL' end as actCirWtType,      
				CIR_BULK_WT as cirBulkWt,     
				CIR_BUP_WT as cirBupWt, 
				CIR_RMK as cirRmk, 
				CIR_RMK as oldCirRmk,    
				CIR_PROC_USER as cirProcUser,        
				TO_CHAR(carshp.CIR_PROC_DATE, 'DDMONYY HH24:MI') as cirProcDate,        
				ca.HDLG_AGENT as accsHandler,        
				carawb.CONSOLE_IND as cnsl,         
				carshp.DAM_REF_NO as damRefNo,       
				carshp.FLT_KEY as fltKey,       
				to_char(carshp.FLT_DATE,'DDMONYY') as fltDate,   
				carawb.PPK_TYPE as ppkType  ,
				CASE WHEN ABS(MANIFEST_PCS - (carshp.RECD_PCS+nvl(tt_pcs,0))) != CIR_PCS AND CIR_PROC_USER is not null AND  CIR_PROC_DATE is not null THEN 'R' ELSE 'B' END AS pcDiff ,
  				CASE WHEN ABS(MANIFEST_WT - (carshp.RECD_WT+nvl(tt_wt,0))) != CIR_WT AND CIR_PROC_USER is not null AND  CIR_PROC_DATE is not null THEN 'R' ELSE 'B' END AS wtDiff,
				PKG_COMMON.get_flt_ata(carshp.FLT_KEY, carshp.FLT_DATE, 'A') AS actTime,
				(SELECT uld.handling_mode from uld_inventory uld,awb_inventory inv where carawb.awb_no=inv.awb_no and carawb.awb_date=inv.awb_date and inv.uld_key=uld.uld_key and uld.handling_mode='NBK' and rownum=1) noBreakSts,
       			decode((select COUNT(1) from v_ddt_dtl where awb_no=carawb.AWB_NO and awb_date=carawb.awb_date and flt_key=#fltKey# and 
       			 flt_date=TO_DATE(#fltDate#,'DDMONYY') and shp_trf_type in ('TT','IF')),0,'','TT') AS trfType,
       			(SELECT BD_COMPLETE FROM CST_SUBM  where BD_COMPLETE = 'Y' AND REC_TYPE = 'BDS' AND 
          			FLT_KEY = carshp.FLT_KEY AND FLT_DATE = carshp.FLT_DATE	AND FLT_TYPE = 'I' and send_status='A' and rownum = 1) AS bdComplete  
				FROM IMP_CAR_AWB carawb
				JOIN IMP_CAR_SHP carshp ON carshp.AWB_NO = carawb.AWB_NO AND carshp.AWB_DATE = carawb.AWB_DATE
				LEFT JOIN CST_AWB CA ON carshp.AWB_NO = CA.AWB_NO AND carshp.AWB_DATE = CA.AWB_DATE AND carshp.FLT_KEY = CA.FLT_KEY AND carshp.FLT_DATE = CA.FLT_DATE
				LEFT JOIN (select nvl(sum(actual_pcs),0) tt_pcs ,  nvl(sum (actual_Wt),0) tt_wt, flt_key, flt_date, awb_NO , awb_date 
								from v_ddt_dtl  where (shp_trf_type = 'TT'  or  trf_type = 'IF') GROUP BY flt_key, flt_date, awb_NO, awb_date) ddt 
             			ON carshp.AWB_NO = ddt.AWB_NO AND carshp.AWB_DATE = ddt.AWB_DATE AND carshp.FLT_KEY = ddt.FLT_KEY AND carshp.FLT_DATE = ddt.FLT_DATE
				WHERE BYPASS_REL = 'N' and  (
				(carshp.RECD_PCS+nvl(tt_pcs,0)) != MANIFEST_PCS 
				or (carshp.RECD_WT+nvl(tt_wt,0)) != MANIFEST_WT 
				or CIR_PROC_USER is not null  
				or exists (select null from IMP_HAWB_STRG_DTL where AWB_NO = carshp.AWB_NO AND AWB_DATE = carshp.AWB_DATE AND FLT_DATE = carshp.FLT_DATE AND  FLT_KEY = carshp.FLT_KEY  
        						AND  (HAWB_BRKDN_PCS != HAWB_PCS or HAWB_BRKDN_WT != HAWB_WT)
        						AND  not exists (
		                         select null from v_ddt_dtl  where shp_trf_type = 'TT'  
		                         AND AWB_NO = carshp.AWB_NO AND AWB_DATE = carshp.AWB_DATE AND FLT_DATE = carshp.FLT_DATE AND  FLT_KEY = carshp.FLT_KEY) ) 
        			) 
        			AND	(carshp.CAR_CREATED = 'Y' or (carshp.RECD_WT+nvl(tt_wt,0)) > 0) and 
					carshp.FLT_KEY = #fltKey# AND  carshp.FLT_DATE = TO_DATE(#fltDate#,'DDMONYY')
			]]>	
			<dynamic>
				<isNotEmpty prepend="AND" property="awbNo">
					carshp.AWB_NO = #awbNoDisp#
				</isNotEmpty>
			</dynamic>
			ORDER BY carshp.AWB_NO					
	</select>
	
	<insert id="updateBatchInformation" parameterClass="cargo.cms.imprt.bo.TnNotificationBO">
				INSERT INTO CUST_INTERACTION  
  					(AWB_NO,INT_PURPOSE, INT_MODE, CONTACT_PERSON,INT_DATE,FOLLOW_UP_DATE,FOLLOW_UP_ACTION,REMARKS,LM_DATE,CR_DATE,CR_USER_ID,LM_USER_ID,AWB_DATE,STATUS,CONTACT_NO,TR_TYPE)
				VALUES (UPPER(#awbNo#),'','Ph', #contName#,to_date(#custDateHm#,'DDMONYY HH24MI'),'','', #remarks#,SYSDATE,SYSDATE,#createdUserId#,#createdUserId#,#awbDate#,#status#,#contNumber#,'CUINT')  
</insert>
	
<insert id="updateBatchContactInformation" parameterClass="cargo.cms.imprt.bo.TnNotificationBO">
UPDATE CUST_CONTACT SET
				Email1= #email1#,Email2 = #email2# ,Email3 = #email3# ,Email4 = #email4# ,Email5 = #email5# ,
						fax1 = #fax1# ,fax2 = #fax2# ,fax3 = #fax3# ,fax4 = #fax4# ,fax5 = #fax5#,
						 LM_USER_ID = #createdUserId# ,LM_DATE = sysdate 
						WHERE CUST_NO = #customerNo#  and CONTACT_TYPE = #type#	
</insert>

<insert id="insertBatchContactInformation" parameterClass="cargo.cms.imprt.bo.TnNotificationBO">
		INSERT INTO CUST_CONTACT
			(CUST_NO, CONTACT_TYPE, EMAIL1, EMAIL2, EMAIL3, EMAIL4, EMAIL5, FAX1, FAX2, FAX3, FAX4, FAX5, 
				CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE)
			values((SELECT CODE FROM CUST_COMPANY WHERE CODE_DESC = #agentName# AND ROWNUM=1),#type#,#email1#,#email2#,#email3#,#email4#,#email5#,
				#fax1#,#fax2#,#fax3#,#fax4#,#fax5#,#createdUserId#,sysdate,#createdUserId#,sysdate)
</insert>

<insert id="updateNotificationInformation" parameterClass="cargo.cms.imprt.bo.TnNotificationBO">
UPDATE IMP_CAR_SHP SET NOA_AWB_IND = 'Y',NOTF_AWB_SENT_DATE = SYSDATE, NOTF_AWB_SENT_TIME=TO_CHAR(SYSDATE,'HH24MI'),LM_USER_ID=#createdUserId#,LM_DATE=SYSDATE,TR_TYPE='STAN' WHERE AWB_NO=#awbNo# AND AWB_DATE = #awbDate# AND FLT_KEY=#printfltKey# AND FLT_DATE=#printfltDate#
</insert>
	
	<select id="checkForTrf"  parameterClass="cargo.cms.imprt.bo.CarShpBO" resultClass="java.lang.String">
	  select COUNT(1) from v_ddt_dtl where flt_key=#fltKey# and flt_date=TO_DATE(#fltDate#,'DDMONYY') and (shp_trf_type='TT' or trf_type='IF')					
	</select>
	
	<select id="checkAccsCompl"  parameterClass="cargo.cms.imprt.bo.CarShpBO" resultClass="java.lang.String">
		SELECT COUNT(1) FROM CST_SUBM  where BD_COMPLETE = 'Y' AND REC_TYPE = 'BDS' AND FLT_KEY = #fltKey# AND FLT_DATE = TO_DATE(#fltDate#,'DDMONYY')	AND FLT_TYPE = 'I' and SEND_STATUS = 'A'					
	</select>
	
	<!--  Changed for QR -->
	<select id="checkForNBK"  parameterClass="cargo.cms.imprt.bo.CarShpBO" resultClass="java.lang.String">
		select COUNT(1) from imp_car_shp shp 
		join awb_inventory inv on shp.awb_no=inv.awb_no and shp.awb_date=inv.awb_date and shp.flt_key = inv.flt_key and shp.flt_date= inv.flt_date			
		join uld_inventory uld on inv.uld_key=uld.uld_key and uld.handling_mode='NBK'
		where shp.flt_key = #fltKey# and shp.flt_date= TO_DATE(#fltDate#,'DDMONYY') 					
	</select>
	
	<select id="getAwbDateFromAwb"  parameterClass="java.lang.String" resultClass="java.lang.String">
		select TO_CHAR(awb_date,'DDMONYY') as awbDate
           from (select awb_date from   awb  where  awb_no = #awbNo# and awb_closed_yn = 'N' order by cr_date desc)
           where rownum = 1
	</select>	

	<!--  Changed for QR -->	
	<select id="chkShpDlvlAwb"  parameterClass="cargo.cms.imprt.bo.CarShpBO" resultClass="java.lang.String">
		
		SELECT NVL(count(1),0)
			FROM IMP_SRF s
			JOIN IMP_SRF_FLT sf on sf.SRF_NO = s.SRF_NO
			WHERE	s.AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')  AND
			s.AWB_NO	 = #awbNoDisp#  AND
			sf.FLT_KEY	 = #fltKey# AND
			sf.FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
		<![CDATA[
				((s.SRF_EXPY_DATE >= sysdate and s.STATUS = 'ISSUED') or s.STATUS = 'POSTED')
		]]>	
			
	</select>
	
	<select id="chkAwbKnown"  parameterClass="cargo.cms.imprt.bo.CarShpBO" resultClass="java.lang.String">
	  SELECT COUNT(1) FROM IMP_CAR_SHP ICS where FFM_FLG='N' and
	   car_created='N' and ICS.AWB_NO = UPPER(#awbNo#) and 
	   awb_date= #awbDate# and flt_key = #fltKey# and flt_date= #fltDate#	
	</select>
		
	<!--  Changed for QR -->
	<select id="checkCarCreated"  parameterClass="cargo.cms.imprt.bo.CarShpBO" resultClass="java.lang.String">
		SELECT COUNT(1) FROM IMP_CAR_SHP ICS where FFM_FLG='Y' and
	  	 car_created='N' and ICS.AWB_NO = UPPER(#awbNo#) and 
	  	 awb_date= #awbDate# and flt_key = #fltKey# and flt_date= #fltDate#
	</select>
	
	<!--  Changed for QR -->
	<update id="updateCar" parameterClass="cargo.cms.imprt.bo.CarShpBO">	
		UPDATE IMP_CAR_SHP 
			SET
			CAR_CREATED = 'Y'
		WHERE 	
			AWB_NO = UPPER(#awbNo#) AND
			FLT_KEY = UPPER(#fltKey#) AND
			FLT_DATE = #fltDate# 
	</update>
	
	<!--  Changed for QR -->
	<update id="updateCarAwbCatalog" parameterClass="cargo.cms.imprt.bo.CarShpBO">	
		UPDATE IMP_CAR_AWB 
			SET CATALOG = NVL(CATALOG,'IG')
		WHERE 	
			AWB_NO = UPPER(#awbNo#) AND AWB_DATE = #awbDate#
	</update>
	
	<!--  Changed for QR -->
		<update id="updateCirAwbCatalog" parameterClass="cargo.cms.imprt.bo.CarShpBO">	
		UPDATE AWB 
			SET CATALOG = NVL(CATALOG,'IG')
		WHERE 	
			AWB_NO = UPPER(#awbNo#) AND AWB_DATE = #awbDate#
	</update>
	
	<!--  Changed for QR -->
	<update id="updatePcWt" parameterClass="cargo.cms.imprt.bo.CarShpBO">	
		UPDATE IMP_CAR_SHP 
			SET
			MANIFEST_PCS = '0',
			MANIFEST_WT = '0'
		WHERE 	
			AWB_NO = UPPER(#awbNo#) AND
		    FLT_KEY = UPPER(#fltKey#) AND
			FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') 
	</update>
	
<!--  Changed for QR -->	
<select id="getHawbCirlist"  parameterClass="cargo.cms.imprt.bo.CarShpBO" 
	 resultClass="cargo.cms.imprt.bo.HAWBStorDtlBO">
SELECT 
  TO_CHAR(FLT_DATE, 'DDMONYY') as fltDate, 
  FLT_KEY as fltKey, S.AWB_NO as awbNo, TO_CHAR(S.AWB_DATE,'DDMONYY') as awbDate, 
  S.HAWB_NO as hseAwbNo, S.HAWB_PCS as hseAwbPcs, S.HAWB_WT as hseAwbWt, 
  S.HAWB_PCS as hseAwbPcsHidden, S.HAWB_WT as hseAwbWtHidden, 
  HCIR_PCS as hcirPcs, HCIR_PCS as oldHcirPcs,HCIR_PCS_TYPE as hcirPcsType, HCIR_WT as hcirWt, 
  HCIR_WT_TYPE as hcirWtType, 
  HCIR_RMK as hcirRmk, HCIR_RMK as oldHcirRmk,HCIR_USER as hcirUser, TO_CHAR(HCIR_DATE, 'DDMONYY HH24:MI') as hcirDate,
  SEC_CHECK as SC, HAWB_BRKDN_PCS as hawbBrkdnPcs, HAWB_BRKDN_WT as hawbBrkdnWt, 
  CASE WHEN ABS(S.HAWB_PCS  - S.HAWB_BRKDN_PCS) != S.HCIR_PCS  THEN 'R'  ELSE 'B'  END AS hpcDiff ,
  CASE  WHEN ABS(S.HCIR_WT - S.HAWB_BRKDN_WT) != S.HCIR_WT   THEN 'R'  ELSE 'B'  END AS hwtDiff,	
  'false' as newRecord
FROM IMP_HAWB_STRG_DTL S
LEFT JOIN MAST_HAWB M ON S.AWB_NO = M.AWB_NO AND S.AWB_DATE = M.AWB_DATE AND S.HAWB_NO = M.HAWB_NO
WHERE 	
	S.AWB_NO = UPPER(#awbNo#) AND
	S.FLT_KEY = UPPER(#fltKey#) AND
	S.FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
	S.AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') AND  
	S.HCIR_USER IS NOT NULL
</select>


<select id="getHeaderForMaintainHouseCIR"  parameterClass="cargo.cms.imprt.bo.CarShpBO" 
	 resultClass="cargo.cms.imprt.bo.CarShpBO">
	 <![CDATA[
		SELECT 
		   carawb.AWB_NO as awbNo,
		   carawb.AWB_PRFX as awbPrefix,
		   carawb.AWB_PCS as awbPcs,
		   carawb.AWB_WT as awbWt,
		   carawb.AWB_DEST as awbDest,
		   carawb.CONTENT as content,
		   carawb.CATALOG as catalog,
		   carawb.AWB_CLOSED as awbClosed,
		   carshp.MANIFEST_PCS as manifestPcs,  
		   carshp.MANIFEST_WT as manifestWt,  
		   carshp.RECD_PCS as recdPcs,
		   carshp.RECD_WT as recdWt,
		   TO_CHAR(carawb.AWB_DATE,'DDMONYY') as awbDate,
		   DECODE(CIR_PCS,0,abs(carshp.RECD_PCS - carshp.MANIFEST_PCS),CIR_PCS) as cirPcs,  
      	   DECODE(CIR_WT,0,abs(carshp.RECD_WT - carshp.MANIFEST_WT),CIR_WT) as cirWt,
       	   DECODE(CIR_PCS_TYPE,NULL,(case when carshp.RECD_WT - carshp.MANIFEST_WT > 0 then 'SP' when carshp.RECD_WT - carshp.MANIFEST_WT < 0 then 'SL' else null end),CIR_PCS_TYPE) as cirPcsType,  
       	   DECODE(CIR_WT_TYPE,NULL,(case when carshp.RECD_WT - carshp.MANIFEST_WT > 0 then 'SP' when carshp.RECD_WT - carshp.MANIFEST_WT < 0 then 'SL' else null end),CIR_WT_TYPE) as cirWtType, 
			CIR_BULK_WT as cirBulkWt, 
			CIR_BUP_WT as cirBupWt, 
			CIR_RMK as cirRmk, 
			CIR_PROC_USER as cirProcUser, 
		    TO_CHAR(CIR_PROC_DATE, 'DDMONYY HH24:MI') as cirProcDate,
		    ca.HDLG_AGENT as accsHandler, 
		    carawb.CONSOLE_IND as cnsl,		
		    carshp.DAM_REF_NO as damRefNo,
		    carshp.FLT_KEY as fltKey,
		    to_char(carshp.FLT_DATE,'DDMONYY') as fltDate, 
			H.HAWB_PCS totalHawbPcs,
			H.HAWB_WT totalHawbWt
	FROM IMP_CAR_AWB carawb
	JOIN IMP_CAR_SHP carshp ON carshp.AWB_NO = carawb.AWB_NO AND carshp.AWB_DATE = carawb.AWB_DATE
	LEFT JOIN CST_AWB CA ON carshp.AWB_NO = CA.AWB_NO AND carshp.AWB_DATE = CA.AWB_DATE AND carshp.FLT_KEY = CA.FLT_KEY AND carshp.FLT_DATE = CA.FLT_DATE
	LEFT JOIN (SELECT AWB_NO, AWB_DATE, SUM(HAWB_PCS) HAWB_PCS, SUM(HAWB_WT) HAWB_WT
		 	  FROM MAST_HAWB GROUP BY AWB_NO, AWB_DATE) H 
		ON H.AWB_NO = carawb.AWB_NO AND H.AWB_DATE = carawb.AWB_DATE
	WHERE carshp.FLT_KEY = #fltKey# AND
		  carshp.FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
		  carshp.AWB_NO = #awbNo# AND
		  carshp.AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')  
		]]>
</select>	

<select id="imp_getHawbCirPcsWt"  parameterClass="cargo.cms.imprt.bo.CarShpBO" resultClass="cargo.cms.imprt.bo.HAWBStorDtlBO">
	<![CDATA[
		SELECT HAWB_NO hseAwbNo , HAWB_PCS hseAwbPcsHidden, HAWB_WT hseAwbWtHidden
		FROM MAST_HAWB A 
		WHERE A.AWB_NO = #awbNo#
		AND A.AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
	]]>
</select>
	
	<select id="fetchHelpListData"  parameterClass="cargo.cms.imprt.bo.CarShpBO" resultClass="cargo.cms.imprt.bo.HAWBStorDtlBO">
		select mh.HAWB_PCS hseAwbPcs,
               mh.HAWB_WT hseAwbWt,
               NVL(bd.BD_PCS,'0') hawbBrkdnPcs,
               NVL(bd.BD_WT,'0') hawbBrkdnWt
               from mast_hawb mh
               LEFT JOIN (SELECT AWB_NO AWB_NO, AWB_DATE AWB_DATE, HAWB_NO HAWB_NO , SUM(NVL(HAWB_BRKDN_PCS,0)) BD_PCS, SUM(NVL(HAWB_BRKDN_WT,0)) BD_WT
               					 FROM IMP_HAWB_STRG_DTL WHERE FLT_KEY = #fltKey#  AND FLT_DATE = #fltDate# group by AWB_NO, AWB_DATE, HAWB_NO)bd
                ON  mh.awb_no = bd.awb_no and mh.awb_date = bd.awb_date and mh.hawb_no = bd.hawb_no		
               WHERE mh.AWB_NO = #awbNo# and mh.AWB_DATE = #awbDate# AND mh.HAWB_NO = #hawbNo# 
	</select>

	<!--  Changed for QR -->
	<select id="getHawbCirlistDisc"  parameterClass="cargo.cms.imprt.bo.HAWBStorDtlBO" resultClass="cargo.cms.imprt.bo.HAWBStorDtlBO">
 		<![CDATA[
 			select a.* from 
	     		(SELECT 
	  				ABS (SUM(S.HAWB_PCS) - SUM(S.HAWB_BRKDN_PCS)) AS totPcs,
	  				ABS (SUM(S.HAWB_WT) - SUM(S.HAWB_BRKDN_WT)) AS totWt,
	  				CASE WHEN (SUM(S.HAWB_BRKDN_PCS) - SUM(S.HAWB_PCS)) > 0  THEN 'SP' ELSE  CASE  WHEN (SUM(S.HAWB_BRKDN_PCS) - SUM(S.HAWB_PCS)) < 0   THEN 'SL'  ELSE NULL  END  END AS totPcsType,
	  				CASE WHEN (SUM(S.HAWB_BRKDN_WT) - SUM(S.HAWB_WT)) > 0  THEN 'SP' ELSE  CASE  WHEN (SUM(S.HAWB_BRKDN_WT) - SUM(S.HAWB_WT)) < 0   THEN 'SL'  ELSE NULL  END  END AS totWtType
	  				FROM IMP_HAWB_STRG_DTL S
  		  	 	WHERE NOT(s.FLT_KEY = UPPER(#fltKey#) and s.flt_date = #fltDate#) AND HAWB_NO = #hseAwbNo# and awb_no = #awbNo# and awb_Date = #awbDate#) a
         	where totPcs > 0 or totWt > 0
  		]]> 
	</select>

	<update id="deleteimpcarshpmaintaincir" parameterClass="cargo.cms.imprt.bo.CarShpBO">	
		UPDATE IMP_CAR_SHP 
		SET 
			CIR_PCS = '0', 
			CIR_PCS_TYPE = '', 
		    CIR_WT = '0', 
			CIR_WT_TYPE = '', 
			CIR_BULK_WT = '0', 
			CIR_BUP_WT = '0', 
			cir_if_bulk_pcs = '0', 
			cir_if_bulk_wt = '0',  
			CIR_RMK = '', 
			CIR_PROC_USER = '', 
		    CIR_PROC_DATE = '',
			LM_USER_ID = #userId#,
			LM_DATE = SYSDATE
		WHERE 	
				AWB_NO = UPPER(#awbNo#) AND
				FLT_KEY = UPPER(#fltKey#) AND
				FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
				AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')  
	</update>
	
<update id="deletehwabstrgdtlmaintaincir" parameterClass="cargo.cms.imprt.bo.HAWBStorDtlBO">	
	UPDATE IMP_HAWB_STRG_DTL 
		SET 
		  HCIR_PCS = 0, 
		  HCIR_PCS_TYPE = '', 
		  HCIR_WT = 0,  
		  HCIR_WT_TYPE = '', 
		  HCIR_RMK = '', 
		  HCIR_USER = '', 
		  HCIR_DATE = '',
		  SEC_CHECK = 'N', 
		  HAWB_BRKDN_PCS = 0, 
		  HAWB_BRKDN_WT =0, 	
		  LM_USER_ID = #userId#,
		  LM_DATE = SYSDATE
		WHERE 	
			HAWB_NO = #hseAwbNo# AND
			AWB_NO = UPPER(#awbNo#) AND
			FLT_KEY = UPPER(#fltKey#) AND
			FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
			AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
</update>	

<select id="validatehawbexistsmaintaincir" 
	parameterClass="cargo.cms.imprt.bo.HAWBStorDtlBO" resultClass="java.lang.String">
	
	SELECT count(1) as rowCount
			FROM IMP_HAWB_STRG_DTL 
	WHERE 	
			HAWB_NO = #hseAwbNo# AND
			AWB_NO = UPPER(#awbNo#) AND
			FLT_KEY = UPPER(#fltKey#) AND
			FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
			AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')  
</select>	


<update id="updatehwabstrgdtlmaintaincir" parameterClass="cargo.cms.imprt.bo.HAWBStorDtlBO">	
	UPDATE IMP_HAWB_STRG_DTL 
		SET 
		  HAWB_PCS = NVL(#hseAwbPcs#,0), 
		  HAWB_WT = NVL(#hseAwbWt#,0), 
		  HCIR_PCS = NVL(#hcirPcs#,0), 
		  HCIR_PCS_TYPE = #hcirPcsType#, 
		  HCIR_WT = NVL(#hcirWt#,0),  
		  HCIR_WT_TYPE = #hcirWtType#, 
		  HCIR_RMK = #hcirRmk#, 
		  HCIR_USER = #userId#, 
		  HCIR_DATE = SYSDATE,
		  SEC_CHECK = #sc#, 
		  HAWB_BRKDN_PCS = NVL(#hawbBrkdnPcs#,0), 
		  HAWB_BRKDN_WT = NVL(#hawbBrkdnWt#,0), 	
		  LM_USER_ID = #userId#,
		  LM_DATE = SYSDATE
		WHERE 	
			HAWB_NO = #hseAwbNo# AND
			AWB_NO = UPPER(#awbNo#) AND
			FLT_KEY = UPPER(#fltKey#) AND
			FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND UPPER(AWB_DATE) = TO_DATE(#awbDate#,'DDMONYY') 
</update>	


<insert id="inserthwabstrgdtlmaintaincir" parameterClass="cargo.cms.imprt.bo.HAWBStorDtlBO">
INSERT INTO IMP_HAWB_STRG_DTL  
  (FLT_DATE, CARR_CODE, AWB_PFX,
  FLT_KEY, AWB_NO, AWB_DATE,FLT_TYPE, 
  HAWB_NO, HAWB_PCS, HAWB_WT, 
  HCIR_PCS, HCIR_PCS_TYPE, HCIR_WT, 
  HCIR_WT_TYPE, 
  HCIR_RMK, HCIR_USER, HCIR_DATE,
  SEC_CHECK, HAWB_BRKDN_PCS, HAWB_BRKDN_WT, 	
  TR_TYPE, TR_STATUS,
  CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE)

VALUES (to_date(#fltDate#,'DDMONYY'), #carrCode#, #awbPrefix#,
	 #fltKey#, #awbNo#, to_date(#awbDate#, 'DDMONYY'),'I',
	 #hseAwbNo#, NVL(#hseAwbPcs#,0), NVL(#hseAwbWt#,0),
	 NVL(#hcirPcs#,0), #hcirPcsType#, NVL(#hcirWt#,0),
	 #hcirWtType#, 
     #hcirRmk#, #userId#, SYSDATE, 
	 #sc#, NVL(#hawbBrkdnPcs#,0), NVL(#hawbBrkdnWt#,0),
	 'HA', 'A',    
	 #userId#, SYSDATE, #userId#, SYSDATE
)  
</insert>		
	
	<update id="updatecarshpmaintaincir" parameterClass="cargo.cms.imprt.bo.CarShpBO">	
		UPDATE IMP_CAR_SHP 
		SET 			
			CIR_PCS = NVL(#cirPcs#,'0'), 
			CIR_PCS_TYPE = #cirPcsType#, 
		    CIR_WT = NVL(#cirWt#,'0'), 
			CIR_WT_TYPE = #cirWtType#, 
			CIR_PROC_USER = #userId#, 
			CIR_PROC_DATE = SYSDATE,
			LM_USER_ID = #userId#,
			LM_DATE = SYSDATE
		WHERE 	
			AWB_NO = UPPER(#awbNo#) AND
			FLT_KEY = UPPER(#fltKey#) AND
			FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
			AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')  
	</update>
	
	
	<select id="getCirOnOtherList"  parameterClass="cargo.cms.imprt.bo.CarShpBO" 
		 resultClass="cargo.cms.imprt.bo.CarShpBO">
			SELECT 
			   carawb.AWB_NO as awbNo,
			   carawb.AWB_PRFX as awbPrefix,
			   carawb.AWB_PCS as awbPcs,
			   carawb.AWB_WT as awbWt,
			   carawb.AWB_DEST as awbDest,
			   carawb.CONTENT as content,
			   carawb.CATALOG as catalog,
			   carawb.AWB_CLOSED as awbClosed,
			   carawb.PPK_TYPE as ppkType,
			   carshp.DAM_PCS as damPcs, 
			   carshp.DAM_WT as damWt, 
			   carshp.MANIFEST_PCS as manifestPcs,  
			   carshp.MANIFEST_WT as manifestWt,  
			   carshp.RECD_PCS as recdPcs,
			   carshp.RECD_WT as recdWt,
			   TO_CHAR(carawb.AWB_DATE,'DDMONYY') as awbDate,
				
				CIR_PCS as cirPcs, 
				CIR_PCS_TYPE as cirPcsType, 
				CIR_WT as cirWt, 
				CIR_WT_TYPE as cirWtType, 
				CIR_BULK_WT as cirBulkWt, 
				CIR_BUP_WT as cirBupWt, 
				CIR_RMK as cirRmk, 
				CIR_PROC_USER as cirProcUser, 
				TO_CHAR(carshp.CIR_PROC_DATE, 'DDMONYY HH24:MI') as cirProcDate,
	
				carawb.ACCS_HANDLER as accsHandler, 
				NVL(carawb.CONSOLE_IND,'N') as cnsl,		
				carshp.FLT_KEY as fltKey,
				to_char(carshp.FLT_DATE,'DDMONYY') as fltDate,
				PKG_COMMON.get_flt_ata(carshp.FLT_KEY, carshp.FLT_DATE, 'A') AS actTime,
				(SELECT  TR_NO 
					FROM FLT_OPR
					WHERE 
					  FLT_KEY = #fltKey# AND	
					  TO_CHAR(SCH_DATE,'DDMONYY') = #fltDate#
					  AND FLT_TYPE = 'A'	
				) as trNo 
				
		FROM IMP_CAR_AWB carawb, IMP_CAR_SHP carshp
		
		WHERE not(UPPER(carshp.FLT_KEY) = UPPER(#fltKey#) AND FLT_DATE = TO_DATE(#fltDate#,'DDMONYY')) AND
			  carshp.AWB_NO = carawb.AWB_NO AND 
			  carshp.AWB_DATE = carawb.AWB_DATE AND
			   carshp.CIR_PROC_USER IS NOT NULL AND
			  carshp.AWB_NO = #awbNo# AND
			  carshp.AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')  
	</select>
	
	
<update id="updateimpcarshpmaintaincir" parameterClass="cargo.cms.imprt.bo.CarShpBO">	

		UPDATE IMP_CAR_SHP 
		SET 
			CIR_PCS = NVL(#cirPcs#,'0'), 
			CIR_PCS_TYPE = #cirPcsType#, 
		    CIR_WT = NVL(#cirWt#,'0'), 
			CIR_WT_TYPE = #cirWtType#, 
			CIR_BULK_WT = DECODE(#manPpkType#,'B', NVL(#cirWt#,'0'), 'M', NVL(#cirBulkWt#,'0'), 'P', 0, NVL(#cirWt#,'0')), 
			CIR_BUP_WT = DECODE(#manPpkType#,'B', 0, 'M', NVL(#cirBupWt#,'0'), 'P', NVL(#cirWt#,'0')), 
			CIR_RMK = #cirRmk#, 
			CIR_PROC_USER = #userId#, 
		    CIR_PROC_DATE = SYSDATE,
			LM_USER_ID = #userId#,
			LM_DATE = SYSDATE,
			TR_TYPE='MCIR'
		WHERE 	
				AWB_NO = UPPER(#awbNo#) AND
				FLT_KEY = UPPER(#fltKey#) AND
				FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
				AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') AND TO_CHAR(LM_DATE, 'DDMONYY HH24:MI:SS') = #lmDate# 
	</update>
	
		<select id="getIFBulkCIRPCWT"  parameterClass="cargo.cms.imprt.bo.CarShpBO" resultClass="java.util.HashMap">
		 <![CDATA[
			SELECT  (nvl(ddt.tt_pcs,0) - carshp.RECD_PCS) as PCS,  
       				(nvl(ddt.tt_wt,0) - carshp.RECD_WT) as WT
				FROM IMP_CAR_SHP carshp 				
				LEFT JOIN (select nvl(sum(actual_pcs),0) tt_pcs ,  nvl(sum (actual_Wt),0) tt_wt, flt_key, flt_date, awb_NO , awb_date 
								from v_ddt_dtl  where (shp_trf_type = 'IF' and uld_key is NULL) GROUP BY flt_key, flt_date, awb_NO, awb_date) ddt 
             			ON carshp.AWB_NO = ddt.AWB_NO AND carshp.AWB_DATE = ddt.AWB_DATE AND carshp.FLT_KEY = ddt.FLT_KEY AND carshp.FLT_DATE = ddt.FLT_DATE
				WHERE ( (nvl(ddt.tt_pcs,0) - carshp.RECD_PCS) > 0 OR (nvl(ddt.tt_wt,0) - carshp.RECD_WT) > 0) 
        		AND carshp.AWB_NO =  #awbNo# AND carshp.AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
				AND carshp.FLT_KEY = #fltKey# AND carshp.FLT_DATE = TO_DATE(#fltDate#,'DDMONYY')
			 ]]>
		 </select>
		 
		 <update id="updateIFCIRPCWt" parameterClass="cargo.cms.imprt.bo.CarShpBO">
		 		UPDATE imp_car_shp set cir_if_bulk_pcs = #ifCIRPcs#, cir_if_bulk_wt = #ifCIRWt#, LM_USER_ID = #userId#, LM_DATE = SYSDATE where  AWB_NO = #awbNo# AND AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
					AND FLT_KEY = #fltKey# AND FLT_DATE = TO_DATE(#fltDate#,'DDMONYY')
		</update>

<!-- Maintain CIR ends  [Srinivas] -->	
 
<!-- delete car queries added by Kamakhya -->
 
<select id="imp_checkAwbNoCount"  parameterClass="java.lang.String" resultClass="java.lang.Integer">
		<![CDATA[
		select count(1) from AWB where AWB_NO = #awbNo#
		]]>
	</select>
	
<parameterMap id="dateMap" class="map" >
	<parameter property="AWBDATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
	<parameter property="AWBNO" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>	
	<parameter property="TYPE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	<parameter property="VAL" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
</parameterMap>
	
<parameterMap id="fltCloseMap" class="map" >	
	<parameter property="fltkey" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	<parameter property="flightDate" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
</parameterMap>
	
<parameterMap id="hmGenerateNumberMap" class="map" >
		<parameter property="NUMBER" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
		<parameter property="TYPE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
</parameterMap>

<procedure id="imp_car_getAwbDatePkgExisting" parameterMap="dateMap" >
	{? = call PKG_IMP.FUN_GET_AWBDATE_EXISTING(?,?,?)}
</procedure>
<procedure id="generateNewNumber" parameterMap="hmGenerateNumberMap" >
		{? = call FUN_GET_TR_NO(?)}
</procedure>
	 
<procedure id="call_fun_validate_flt_close" parameterMap="fltCloseMap" >
	{call PKG_IMP.PROC_VALIDATE_FLT_CLOSE(?,?)}
</procedure>
	 
 <delete id="delete_CAR_physical" parameterClass="cargo.cms.imprt.bo.MaintainCARBO" >
<![CDATA[

DELETE
		FROM IMP_CAR_SHP  
		WHERE	TO_CHAR(AWB_DATE,'DDMONYY') = TO_DATE(#awbDate#)  AND
			AWB_NO	 = #awbNo#  AND
			FLT_KEY	 = #fltKey# AND
				FLT_DATE = TO_DATE(#fltDate#)
]]>
</delete>

<!--  Changed for QR -->
<delete id="delete_CAR_physical_From_Awb" parameterClass="cargo.cms.imprt.bo.MaintainCARBO" >
<![CDATA[
 DELETE FROM IMP_CAR_AWB WHERE	AWB_DATE = #awbDate# AND AWB_NO	 = #awbNo# 			
]]>
</delete>

<!--  Changed for QR -->
<delete id="delete_From_IMPCARCHRGITM" parameterClass="cargo.cms.imprt.bo.MaintainCARBO" >
DELETE FROM IMP_CAR_CHRG_ITM    WHERE AWB_DATE = #awbDate# AND AWB_NO = #awbNo# 
</delete>

<select id="validate_car_delete"  parameterClass="map"  resultClass="java.lang.Integer">
			<![CDATA[
			SELECT NVL(count(1),0)
				FROM IMP_CAR_SHP A , IMP_CAR_AWB B
			WHERE A.AWB_NO     = B.AWB_NO AND
				A.AWB_DATE   = B.AWB_DATE AND 
				A.AWB_DATE = TO_DATE(#AWBDATE#,'DDMONYY')  AND
				A.AWB_NO	 = #AWBNO#  AND
				A.FLT_KEY	 =#FLTKEY# AND
				A.FLT_DATE = TO_DATE(#FLTDATE#,'DDMONYY') AND
				(FFM_FLG = 'Y'  OR RECD_PCS	> 0)  AND CATALOG NOT IN ('IO', 'TM')
		]]>
 </select>

<select id="validate_flight_close"  parameterClass="map"  resultClass="java.lang.Integer">
	SELECT  COUNT(1)
	FROM   FLT_OPR_EVENTS 
	WHERE  FLT_KEY	= #FLTKEY# 
		   AND SCH_DATE	= TO_DATE(#FLTDATE#,'DDMONYY') 
		   AND FLT_TYPE = 'A'
		   AND FLT_CLS_DATE IS NOT NULL
 </select>
<select id="validate_proc_user"  parameterClass="map"  resultClass="java.lang.String">
	SELECT NVL(count(1),0)
	FROM IMP_CAR_SHP 
	WHERE	AWB_DATE = TO_DATE(#AWBDATE#,'DDMONYY')  AND
		AWB_NO	 = #AWBNO#  AND
		FLT_KEY	 =#FLTKEY# AND
		FLT_DATE = TO_DATE(#FLTDATE#,'DDMONYY')  AND
		DIR_PROC_USER != null 
 </select>

<select id="validate_cir_proc_user"  parameterClass="map"  resultClass="java.lang.String">
	SELECT NVL(count(1),0)
	FROM IMP_CAR_SHP 
	WHERE	AWB_DATE = TO_DATE(#AWBDATE#,'DDMONYY')  AND
		AWB_NO	 = #AWBNO#  AND
		FLT_KEY	 =#FLTKEY# AND
		FLT_DATE = TO_DATE(#FLTDATE#,'DDMONYY')  AND
		CIR_PROC_USER != null 
 </select>
 <select id="validate_dir_proc_date"  parameterClass="map"  resultClass="java.lang.Integer">
 SELECT COUNT(1)  FROM IMP_CAR_SHP   WHERE AWB_DATE = TO_DATE(#AWBDATE#,'DDMONYY')  
  AND   AWB_NO  = #AWBNO#  AND   FLT_KEY  =#FLTKEY# AND  
        FLT_DATE = TO_DATE(#FLTDATE#,'DDMONYY')  AND   DIR_PROC_Date is not null 
 </select>
 
 
 <select id="validate_srf"  parameterClass="map"  resultClass="java.lang.String">
	SELECT NVL(count(1),0)
	FROM IMP_SRF s
	JOIN IMP_SRF_FLT sf on sf.SRF_NO = s.SRF_NO
	WHERE	s.AWB_DATE = TO_DATE(#AWBDATE#,'DDMONYY')  AND
		s.AWB_NO	 = #AWBNO#  AND
		sf.FLT_KEY	 =#FLTKEY# AND
		sf.FLT_DATE = TO_DATE(#FLTDATE#,'DDMONYY') AND
	 	<![CDATA[
		((s.SRF_EXPY_DATE >= sysdate and s.STATUS = 'ISSUED') or s.STATUS = 'POSTED')
		]]>
 </select>
 <select id="validate_damage"  parameterClass="map"  resultClass="java.lang.String">
	 SELECT NVL(count(1),0)
	 FROM IMP_CAR_SHP A , IMP_CAR_AWB B
	 WHERE	A.AWB_DATE = TO_DATE(#AWBDATE#,'DDMONYY') AND
		A.AWB_NO	 = #AWBNO#  AND
		A.FLT_KEY	 = #FLTKEY#  AND
		A.FLT_DATE   = TO_DATE(#FLTDATE#,'DDMONYY')   AND
		A.AWB_NO     = B.AWB_NO AND
		A.AWB_DATE   = B.AWB_DATE AND
		B.CATALOG IN ('IG','IU','IS','IO','TG','TI','TM') AND
		DAM_PROC_USER is not null
 </select>
 
 <!--  Changed for QR -->
 <select id="validate_CarShipment"  parameterClass="map"  resultClass="java.lang.Integer">
   SELECT COUNT(1)    FROM IMP_CAR_SHP   WHERE  AWB_NO = #AWBNO# AND AWB_DATE = TO_DATE(#AWBDATE#,'DDMONYY')
 </select>
 
 <select id="get_gt_cms_list_delete_record"  parameterClass="cargo.cms.imprt.bo.MaintainCARBO"  resultClass="cargo.cms.imprt.bo.MaintainCARBO">
select COLUMN_1 as awbNo, COLUMN_2 as awbDate, COLUMN_3 as fltKey, COLUMN_4 as fltDate, COLUMN_5 oldStatus, COLUMN_6 newStatus, COLUMN_7 AS ffmFlag
        from   gt_cms g
		where COLUMN_6 = 'DEL'
 </select>
 
 <select id="validate_CarIMPXPSOBCMAIL"  parameterClass="map"  resultClass="java.lang.Integer">
 SELECT COUNT(1)    FROM IMP_XPS_OBC_MAIL   WHERE AWB_NO    =#AWBNO#    AND
    AWB_DATE  = TO_DATE(#AWBDATE#,'DDMONYY') AND
    FLT_KEY   = #FLTKEY#  AND    FLT_DATE  = TO_DATE(#FLTDATE#,'DDMONYY') AND
    FLT_TYPE  = 'I'
 </select>
 <select id="checkInventoryhaveimpfltdtlsornot"  parameterClass="map"  resultClass="java.lang.Integer">
 	SELECT count(1) FROM AWB_INVENTORY WHERE (FLT_TYPE IS NULL OR FLT_TYPE !='I') AND AWB_NO=#AWBNO# AND AWB_DATE=TO_DATE(#AWBDATE#,'DDMONYY')
 </select>
 
 <select id="validate_buildUpCompl"  parameterClass="map"  resultClass="java.lang.Integer">
 	SELECT COUNT(1)    FROM EXP_PMANIFEST_ULD_AWB   WHERE AWB_NO    =#AWBNO#    AND
    AWB_DATE  = TO_DATE(#AWBDATE#,'DDMONYY')
 </select>
 <update id="update_IPMXPSOBCMAILOnDeletecar" parameterClass="cargo.cms.imprt.bo.MaintainCARBO">
   UPDATE IMP_XPS_OBC_MAIL
    SET AWB_NO   = NULL,    AWB_DATE = NULL, MBLE_CAR_IND = 'N'    WHERE AWB_NO    = #awbNo#   AND    AWB_DATE  = TO_DATE(#awbDate#,'DDMONYY') AND    FLT_KEY   = #fltKey#  AND    FLT_DATE  = TO_DATE(#fltDate#,'DDMONYY') AND
    FLT_TYPE  = 'I'
 </update>
 <delete id="delete_From_AWBINVENTORY" parameterClass="cargo.cms.imprt.bo.MaintainCARBO" > 
 DELETE FROM AWB_INVENTORY   WHERE AWB_NO = #awbNo#  AND  AWB_DATE  =  TO_DATE(#awbDate#,'DDMONYY') AND FLT_KEY = #fltKey# AND FLT_DATE = TO_DATE(#fltDate#,'DDMONYY')
 </delete>
  <delete id="delete_From_AWBINVENTORY_TMCAR" parameterClass="cargo.cms.imprt.bo.MaintainCARBO" > 
 		DELETE FROM AWB_INVENTORY   WHERE AWB_NO = #awbNo#  AND  AWB_DATE  =  TO_DATE(#awbDate#,'DDMONYY') 
 </delete>
 

  <delete id="delete_From_AWBINVENTORY_TMCAR_HAWB" parameterClass="cargo.cms.imprt.bo.MaintainCARBO" >
 		DELETE FROM HAWB_INVENTORY WHERE SEQ_NO IN (select seq_no from awb_inventory where AWB_NO = #awbNo#  AND  AWB_DATE  =  TO_DATE(#awbDate#,'DDMONYY')) 
 </delete>
 
 
  <delete id="delete_From_AWBINVENTORY_PAWBTMCARTMCAR" parameterClass="cargo.cms.imprt.bo.MaintainCARBO" > 
 		DELETE FROM AWB_INVENTORY   WHERE AWB_NO = #awbNo#  AND  AWB_DATE  =  TO_DATE(#awbDate#,'DDMONYY') AND FLT_KEY   = #fltKey#  AND FLT_DATE  = TO_DATE(#fltDate#,'DDMONYY') AND FLT_TYPE  = 'I'
 </delete>
 

  <delete id="delete_From_AWBINVENTORY_PAWBTMCAR_HAWB" parameterClass="cargo.cms.imprt.bo.MaintainCARBO" >
 		DELETE FROM HAWB_INVENTORY WHERE SEQ_NO IN (select seq_no from awb_inventory where AWB_NO = #awbNo#  AND  AWB_DATE  =  TO_DATE(#awbDate#,'DDMONYY') AND FLT_KEY   = #fltKey#  AND FLT_DATE  = TO_DATE(#fltDate#,'DDMONYY') AND FLT_TYPE  = 'I') 
 </delete>
 
 
  <delete id="deleteAwbForAwbInventory" parameterClass="java.lang.String" > 
 DELETE FROM AWB_INVENTORY WHERE SEQ_NO = #PARAM#
 </delete>
 <!--	 if > 0; error:: document complete is declared.	-->
 <select id="doccmpldec"  parameterClass="map" resultClass="java.lang.Integer">
	SELECT COUNT(1) from flt_opr_events	where TO_CHAR(SCH_DATE,'DDMONYY') =  #fltdate#
		and DOC_COMPL_DATE is not null and FLT_TYPE = 'A' 
		AND FLT_KEY = #fltkey# 
	</select>
 
 
 <select id="validate_ffm"  parameterClass="map"  resultClass="java.lang.String">
		SELECT NVL(count(1),0)
			FROM IMP_CAR_SHP A , IMP_CAR_AWB B
		   WHERE A.AWB_NO     = B.AWB_NO AND
			A.AWB_DATE   = B.AWB_DATE AND 
			A.AWB_DATE = TO_DATE(#AWBDATE#,'DDMONYY')  AND
			A.AWB_NO	 = #AWBNO#  AND
			A.FLT_KEY	 =#FLTKEY# AND
			A.FLT_DATE = TO_DATE(#FLTDATE#,'DDMONYY')
			AND FFM_FLG	= 'Y' AND CATALOG NOT IN ('IO', 'TM')
	 </select>
	 <select id="validate_rec_pcs"  parameterClass="map"  resultClass="java.lang.String">
		<![CDATA[
			SELECT NVL(count(1),0)
				FROM IMP_CAR_SHP A , IMP_CAR_AWB B
			    WHERE A.AWB_NO     = B.AWB_NO AND
				A.AWB_DATE   = B.AWB_DATE AND 
				A.AWB_DATE = TO_DATE(#AWBDATE#,'DDMONYY')  AND
				A.AWB_NO	 = #AWBNO#  AND
				A.FLT_KEY	 =#FLTKEY# AND
				A.FLT_DATE = TO_DATE(#FLTDATE#,'DDMONYY') AND	
				RECD_PCS > 0  AND CATALOG NOT IN ('IO', 'TM')
		]]>
	 </select>
	
  <select id="validate_trm"  parameterClass="map"  resultClass="java.lang.String">
	SELECT NVL(count(1),0) 
	FROM IMP_TRM_HD A, IMP_TRM_DTL B
	WHERE B.AWB_NO = #AWBNO# AND 
		B.AWB_DATE = TO_DATE(#AWBDATE#,'DDMONYY') AND 
		A.TRM_NO=B.TRM_NO AND
		A.TRM_TYPE = B.TRM_TYPE 
		AND A.VOID_DATE IS NULL
 </select>
<!-- <select id="validate_FFM_CarFromEDIFFMSHP"  parameterClass="map" resultClass="java.lang.Integer"> 
   
 	SELECT NVL(count(1),0)  
 	FROM IMP_CAR_SHP A
 	LEFT JOIN AWB_INVENTORY B ON A.AWB_NO= B.AWB_NO AND A.AWB_DATE =B.AWB_DATE 
 	LEFT JOIN EDI_FFM_SHP C ON C.AWB_NO= A.AWB_NO AND C.AWB_DATE =A.AWB_DATE
 	WHERE A.AWB_DATE = TO_DATE(#AWBDATE#,'DDMONYY') AND  
 	A.AWB_NO  = #AWBNO#  AND  A.FLT_KEY  = #FLTKEY# AND  A.FLT_DATE   =TO_DATE(#FLTDATE#,'DDMONYY') 
    AND A.CAR_CREATED='Y'  AND (B.CATALOG IN ('IG','IU','IS','IO','TG','TI','TM')
    OR C.AWB_NO=#AWBNO#)
      </select> -->
      
      
      
  <select id="validate_FFM_CarFromEDIFFMSHP"  parameterClass="map" resultClass="java.lang.Integer"> 
 	SELECT NVL(count(1),0)  
 	FROM IMP_CAR_SHP A
 	where A.AWB_NO  = #AWBNO#  AND  A.FLT_KEY  = #FLTKEY# AND  A.FLT_DATE   =TO_DATE(#FLTDATE#,'DDMONYY')  AND NVL(UPPER(A.FFM_FLG),'N') = 'Y'
  </select>
  
 <select id="get_delete_car_list"  parameterClass="cargo.cms.imprt.bo.MaintainCARBO"  resultClass="cargo.cms.imprt.bo.MaintainCARBO">
	SELECT
		A.AWB_PCS AS awbPieces, 
		TRIM(TO_CHAR(NVL(A.AWB_WT,0), '9999990D9')) AS awbWeight, 
		A.CONTENT AS content, 
		A.SPL_CODE1 AS splCode1, 
		A.SPL_CODE2 AS splCode2, 
		A.SPL_CODE3 AS splCode3, 
		A.SPL_CODE4 AS splCode4, 
		A.SPL_CODE5 AS splCode5, 
		A.SPL_CODE6 AS splCode6, 
		A.SPL_CODE7 AS splCode7, 
		A.SPL_CODE8 AS splCode8,
		A.SPL_CODE9 AS splCode9,
		A.AWB_NO AS awbNo,
		SUBSTR(A.AWB_NO,1,3)||'-'||SUBSTR(A.AWB_NO,4) as awbNoDisp ,
		TO_CHAR(A.AWB_DATE,'DDMONYY') AS awbDate,
		B.FLT_KEY AS fltKey,
		TO_CHAR(B.FLT_DATE,'DDMONYY') AS fltDate,
		B.MANIFEST_PCS AS manifestPcs, 
		TRIM(TO_CHAR(NVL(B.MANIFEST_WT,0), '9999990D9')) AS manifestWt, 
		B.RECD_PCS AS recdPcs, 
		TRIM(TO_CHAR(NVL(B.RECD_WT,0), '9999990D9')) AS recdWt, 
		pkg_common.get_flt_ata(c.flt_key, c.sch_date,'A','DD') AS ata,
		A.CATALOG catalog,TO_CHAR(B.LM_DATE , 'DDMONYY HH24:MI:SS') AS lastModifiedDate
	FROM IMP_CAR_AWB A, IMP_CAR_SHP B, FLT_OPR C
	WHERE A.AWB_NO = #awbNo# AND A.AWB_DATE = #awbDate# AND
		A.AWB_DATE 	 = B.AWB_DATE  AND
		A.AWB_NO	 = B.AWB_NO	   AND
		B.FLT_KEY	 = C.FLT_KEY   AND
		B.FLT_DATE 	 = C.SCH_DATE  AND
		B.CAR_CREATED = 'Y' AND 
		C.FLT_TYPE = 'A'	
 </select>
 
 <!--  Changed for QR -->
<update id="delete_CAR" parameterClass="cargo.cms.imprt.bo.MaintainCARBO">
	  UPDATE IMP_CAR_SHP SET 	
			CAR_CREATED	= 'N',
			<isEqual property="updBDPcWt" compareValue="Y">
		    	RECD_PCS = RECD_PCS-#manifestPcs#, 
				RECD_WT = RECD_WT-#manifestWt# ,
		    </isEqual>
			LM_USER_ID	= #lmUserId#   , 
			LM_DATE		= SYSDATE
	 WHERE	AWB_DATE = #awbDate#  AND
			AWB_NO	 = #awbNo#  AND
			FLT_KEY	 = #fltKey#  AND
			FLT_DATE = TO_DATE(#fltDate#,'DDMONYY')
</update>
<select id="get_gt_cms_list"  parameterClass="cargo.cms.imprt.bo.MaintainCARBO"  resultClass="cargo.cms.imprt.bo.MaintainCARBO">
    select COLUMN_1 as awbNo, COLUMN_2 as awbDate, 
               COLUMN_3 as fltKey, 
               COLUMN_4 as fltDate, 
               COLUMN_5 as oldStatus,
               COLUMN_6 as newStatus,
               a.catalog catalog, s.manifest_pcs pcs, s.manifest_wt wt, s.lm_user_id userId, s.lm_date lmDate
        from   gt_cms g
        join imp_car_awb a on a.awb_no = g.column_1 and a.awb_date = g.column_2
        join imp_car_shp s on s.awb_no = g.column_1 and s.awb_date = g.column_2
                           and s.flt_key = g.column_3 and s.flt_date = g.column_4
    
 </select>

 <select id="get_gt_cms_catalog_DDCAR"  parameterClass="cargo.cms.imprt.bo.MaintainCARBO"  resultClass="cargo.cms.imprt.bo.MaintainCARBO">
     select decode((select catalog from IMP_CAR_AWB a where a.awb_no = g.column_1 and a.awb_date = g.column_2), 'IO', 'DDCAR', 'TM', 'DDCAR', 'IU', 'DDCAR', 'DCAR') from GT_CMS g
 </select>

 <select id="get_gt_cms_catalog_CDTMCAR"  parameterClass="cargo.cms.imprt.bo.MaintainCARBO"  resultClass="cargo.cms.imprt.bo.MaintainCARBO">
     select decode((select catalog from IMP_CAR_AWB a where a.awb_no = g.column_1 and a.awb_date = g.column_2),'IO', 'CDIOCAR', 'TM', 'CDTMCAR', 'CCAR') from GT_CMS g
 </select>
<!-- START - Queries added for DDS_IMP_RAMP_Check-inInbULD functionlity-->
<!-- Query for Create Check-in Inbound ULD Starts -->
		<select id="imp_uld_checkin"  parameterClass="cargo.cms.imprt.bo.ULDCheckInBO"  resultClass="cargo.cms.imprt.bo.ULDCheckInBO">
			SELECT *
			   FROM
			  (SELECT dtl.CARR_CODE                                    AS carrierCode ,
				( case when
				(SELECT count(1) 
				FROM imp_ramp_dolly_hd a,
				imp_ramp_dolly_dtl b
				WHERE b.uld_key= dtl.ULD_KEY and 
				a.ho_no is not null  
				AND a.dolly_id =b.dolly_id
				AND a.FLT_KEY=b.FLT_KEY
        		AND a.FLT_DATE=b.FLT_DATE
				AND a.flt_key  = dtl.FLT_KEY 
				AND a.flt_date =dtl.FLT_DATE
				)>0 then 'Y' else 'N' end ) as handoverInd,
			    dtl.TR_NO                                              AS trNo        ,
			    dtl.DOC_LINE_NO                                        AS docLineNo   ,
			    dtl.FLT_NO                                             AS flightNo    ,
			    dtl.FLT_KEY                                            AS flightKey   ,
			    TO_CHAR(dtl.FLT_DATE,'DDMONYY')                        AS flightDate  ,
			    dtl.ULD_KEY                                            AS uldKey      ,			    
			    dtl.LOC_CODE                                           AS locCode,
			    dtl.DAM_IND											   AS damInd      ,
			    dtl.EMPTY_IND                                          AS empty       ,
			    dtl.EIC_IND                                            AS eic         ,
			    dtl.HT                                           	   AS ht          ,
			    dtl.CONTR                                            AS contour     ,
			    dtl.RMK                                                AS remark      ,
			    dtl.RHO_STAFF 										   AS rhoStaffId,
			    TO_CHAR(dtl.LM_DATE , 'DDMONYY HH24:MI:SS') 		   AS lastModDate,
			    (select MAX(ULD_IMAGE_NAME) from ULD_IMAGE where ULD_KEY=dtl.ULD_KEY) AS transactionId,
			    'Y'													   AS updateRecord,
			    inb.FFM_IND                                            AS ffmInd      ,
			    inb.CPM_IND                                            AS cpmInd      ,	
			    PKG_IMP.fun_get_ho_area(dtl.FLT_KEY,dtl.FLT_DATE,dtl.ULD_KEY) as plannedHoAreaFFMCPM,			  				    	    
			    (select TRF_TYPE from v_ddt_DTL where FLT_KEY = dtl.FLT_KEY and FLT_DATE = dtl.FLT_DATE and ULD_KEY = dtl.ULD_KEY and rowNum = 1) AS transferType,
			    PKG_COMMON.get_flt_ata(dtl.FLT_KEY, dtl.FLT_DATE, 'A','DD') AS ata         ,
			    (SELECT CODE_DESC FROM MAST_CODE_DTL WHERE  CODE  = f.WTHR_COND AND CODE_TYPE='WTH_CONDN') AS weatherCondition,			   	 
				m.h_cont_ind as hcontainer,				 
			    DECODE(flt.RAMP_COMPL_YN,'Y','Y','N')  AS rampCompleteStatus,				    
			    NVL(dtl.CHKIN_YN,'N') AS actualCheckIn           ,
			    dtl.CHKIN_YN          AS checkInStatus           ,
			   <!--  ROW_NUMBER() OVER (ORDER BY dtl.FLT_NO ) AS serialNo, -->
			    dtl.SURPLUS_IND AS surPlusInd,
				uld.HANDLING_MODE									   AS handlingMode,
				uld.TRANSIT_IND 									   AS transitInd,	
			  NULL                             AS defContr, 
				CASE WHEN (m.h_cont_ind='Y') THEN '1'
		        ELSE CASE  WHEN  dtl.EMPTY_IND='N'  THEN '2'
		        ELSE CASE  WHEN  dtl.EIC_IND='Y'  THEN '3'
		        ELSE CASE  WHEN  dtl.EMPTY_IND='Y'  THEN '4'
		        END END END END as displayOrder,
            nvl(DOLLYDTL.reject_ind,'N') as rejectInd,
            DOLLYDTL.reject_rmk as rejectRmk
			   	FROM IMP_RAMP_CHK_DTL dtl
			    join FLT_OPR f on f.FLT_TYPE  = 'A' and f.FLT_KEY = dtl.FLT_KEY and TO_CHAR(f.SCH_DATE,'DDMONYY') = TO_CHAR(dtl.FLT_DATE,'DDMONYY')
				left join MAST_ULD_TYPE m  on m.code = dtl.uld_type
				left join flt_opr_events flt on TO_CHAR(flt.SCH_DATE,'DDMONYY') = TO_CHAR(dtl.FLT_DATE,'DDMONYY') and flt.RAMP_COMPL_YN = 'Y' and flt.FLT_TYPE = 'A' AND flt.CARR_CODE = dtl.CARR_CODE AND flt.FLT_NO = dtl.FLT_NO
        		LEFT JOIN IMP_RAMP_INB_CHK_DTL inb on inb.FLT_KEY = dtl.FLT_KEY AND TO_CHAR(inb.FLT_DATE,'DDMONYY') = TO_CHAR(dtl.FLT_DATE,'DDMONYY') AND inb.ULD_KEY = dtl.ULD_KEY
				LEFT JOIN IMP_ULD_LIST uld on uld.FLT_KEY=dtl.FLT_KEY AND TO_CHAR(uld.FLT_DATE,'DDMONYY') = TO_CHAR(dtl.FLT_DATE,'DDMONYY') AND uld.ULD_KEY=dtl.ULD_KEY
				LEFT JOIN IMP_RAMP_DOLLY_DTL DOLLYDTL ON DOLLYDTL.FLT_KEY = DTL.FLT_KEY AND dollydtl.flt_date=DTL.FLT_DATE AND DOLLYDTL.ULD_KEY = DTL.ULD_KEY
        	    WHERE				  
			   	dtl.FLT_NO    = #flightNo#
			  	AND dtl.CARR_CODE = upper(#carrierCode#)
			  	AND TO_CHAR(dtl.FLT_DATE,'DDMONYY') = #flightDate#			  	

			UNION ALL
			   
			    SELECT 
          dtl.CARR_CODE                                    AS carrierCode ,
          ( case when
				(SELECT count(1) 
				FROM imp_ramp_dolly_hd a,
				imp_ramp_dolly_dtl b
				WHERE b.uld_key= dtl.ULD_KEY and 
				a.ho_no is not null  
				AND a.dolly_id =b.dolly_id
				AND a.flt_key  = dtl.FLT_KEY 
				AND a.flt_date =dtl.FLT_DATE
				)>0 then 'Y' else 'N' end ) as handoverInd,
			    dtl.TR_NO                                              AS trNo        ,
			    dtl.DOC_LINE_NO                                        AS docLineNo   ,
			    dtl.FLT_NO                                             AS flightNo    ,
			    dtl.FLT_KEY                                            AS flightKey   ,
			    TO_CHAR(dtl.FLT_DATE,'DDMONYY')                        AS flightDate  ,
			    dtl.ULD_KEY                                            AS uldKey      ,			    
			    ''			                                           AS locCode     ,
			    chk.DAM_IND											   AS damInd      ,
			    chk.EMPTY_IND                                          AS empty       ,
			    chk.EIC_IND                                            AS eic         ,
			    chk.HT                                           	   AS ht          ,
         		case when (uld.handling_mode in('NBK','PPK') 
         			and (select count(1) from v_ddt_dtl v join awb a on a.awb_no=v.awb_no and a.awb_date=v.awb_date where v.flt_key=dtl.flt_key 
         					and v.flt_date=dtl.flt_date and v.uld_key=dtl.uld_key and a.awb_type='T')>0) 
         		then  NVL(edi.cntr,chk.CONTR)  else chk.CONTR end AS contour,			   
			    dtl.RMK                                                AS remark      ,
			    chk.RHO_STAFF 										   AS rhoStaffId,
			    TO_CHAR(dtl.LM_DATE , 'DDMONYY HH24:MI:SS') 		       AS lastModDate,
			    (select MAX(ULD_IMAGE_NAME) from ULD_IMAGE where ULD_KEY=dtl.ULD_KEY) AS transactionId,
			    'Y'													   AS updateRecord,
			    dtl.FFM_IND                                            AS ffmInd      ,
			    dtl.CPM_IND                                            AS cpmInd      ,	
			    PKG_IMP.fun_get_ho_area(dtl.FLT_KEY,dtl.FLT_DATE,dtl.ULD_KEY) as plannedHoAreaFFMCPM,		    						
			    (select TRF_TYPE from v_ddt_DTL where FLT_KEY = dtl.FLT_KEY and FLT_DATE = dtl.FLT_DATE and ULD_KEY = dtl.ULD_KEY and rowNum = 1) AS transferType,				
			    PKG_COMMON.get_flt_ata(dtl.FLT_KEY, dtl.FLT_DATE, 'A', 'DD') AS ata,
			    (SELECT CODE_DESC FROM MAST_CODE_DTL WHERE  CODE  = f.WTHR_COND AND CODE_TYPE='WTH_CONDN') AS weatherCondition,				   	 
				m.h_cont_ind 											as hcontainer,				 
			    DECODE(flt.RAMP_COMPL_YN,'Y','Y','N')  					AS rampCompleteStatus,		
			    NVL(chk.CHKIN_YN,'N') 									AS actualCheckIn,
			    chk.CHKIN_YN          									AS checkInStatus,
			    chk.SURPLUS_IND          								AS surPlusInd,
				uld.HANDLING_MODE									    AS handlingMode,
				uld.TRANSIT_IND 									    AS transitInd,				
				edi.CNTR                                                AS defContr,	
				CASE WHEN (m.h_cont_ind='Y') THEN '1'
	            ELSE CASE  WHEN  chk.EMPTY_IND='N'  THEN '2'
	            ELSE CASE  WHEN  chk.EIC_IND='Y'  THEN '3'
	            ELSE CASE  WHEN  chk.EMPTY_IND='Y'  THEN '4'
	            END END END END as displayOrder,
              nvl(DOLLYDTL.reject_ind,'N') as rejectInd,
            DOLLYDTL.reject_rmk as rejectRmk
			    FROM IMP_RAMP_INB_CHK_DTL dtl
			    join FLT_OPR f on f.FLT_TYPE  = 'A' and f.FLT_KEY = dtl.FLT_KEY and TO_CHAR(f.SCH_DATE,'DDMONYY') = TO_CHAR(dtl.FLT_DATE,'DDMONYY')
				left join MAST_ULD_TYPE m  on m.code = dtl.uld_type
				left join flt_opr_events flt on TO_CHAR(flt.SCH_DATE,'DDMONYY') = TO_CHAR(dtl.FLT_DATE,'DDMONYY') and flt.RAMP_COMPL_YN = 'Y' and flt.FLT_TYPE = 'A' AND flt.CARR_CODE = dtl.CARR_CODE AND flt.FLT_NO = dtl.FLT_NO
				LEFT JOIN IMP_RAMP_CHK_DTL chk on chk.FLT_KEY = dtl.FLT_KEY AND TO_CHAR(chk.FLT_DATE,'DDMONYY') = TO_CHAR(dtl.FLT_DATE,'DDMONYY') AND chk.ULD_KEY = dtl.ULD_KEY
				LEFT JOIN IMP_ULD_LIST uld on uld.FLT_KEY=dtl.FLT_KEY AND TO_CHAR(uld.FLT_DATE,'DDMONYY') = TO_CHAR(dtl.FLT_DATE,'DDMONYY') AND uld.ULD_KEY=dtl.ULD_KEY
				LEFT JOIN EDI_CPM_DTL edi on edi.FLT_KEY=dtl.FLT_KEY AND TO_CHAR(edi.FLT_DATE,'DDMONYY') = TO_CHAR(dtl.FLT_DATE,'DDMONYY') AND edi.ULD_KEY=dtl.ULD_KEY 				   
        LEFT JOIN IMP_RAMP_DOLLY_DTL DOLLYDTL ON DOLLYDTL.FLT_KEY = DTL.FLT_KEY AND dollydtl.flt_date=DTL.FLT_DATE AND DOLLYDTL.ULD_KEY = DTL.ULD_KEY
        
			    WHERE 		  
			    dtl.ULD_KEY NOT IN
			    (SELECT ULD_KEY
			     FROM IMP_RAMP_CHK_DTL
			     WHERE TR_NO = dtl.TR_NO
			     AND CHKIN_YN  = 'Y'
			    )
			    AND dtl.FLT_NO    = #flightNo#
			    AND dtl.CARR_CODE = upper(#carrierCode#)
			    AND TO_CHAR(dtl.FLT_DATE,'DDMONYY')  = #flightDate#	
			    
			         UNION ALL
   SELECT F.CARR_CODE AS carrierCode ,
    (
    CASE
      WHEN (SELECT COUNT(1)
        FROM imp_ramp_dolly_hd a,
          imp_ramp_dolly_dtl b
        WHERE b.uld_key= B.ULD_KEY
        AND a.ho_no   IS NOT NULL
        AND a.dolly_id =b.dolly_id
        AND a.flt_key  = B.FLT_KEY
        AND a.flt_date =B.FLT_DATE )>0
      THEN 'Y'
      ELSE 'N'
    END )                                       AS handoverInd,
    (select tr_no from IMP_RAMP_CHK_HD HD where HD.FLT_KEY = b.flt_key and HD.flt_date = b.flt_date and rownum=1)                                    AS trNo ,
    dtl.DOC_LINE_NO                           AS docLineNo ,
    F.FLT_NO                                  AS flightNo ,
    F.FLT_KEY                                 AS flightKey ,
    TO_CHAR(F.SCH_DATE,'DDMONYY')             AS flightDate ,
    b.ULD_KEY                                 AS uldKey ,
    INV.LOC_CODE                                AS locCode,
    B.DAM_IND                                 AS damInd ,
    B.EMPTY_IND                               AS empty ,
    B.EIC_IND                                 AS eic ,
    dtl.HT                                      AS ht ,
    dtl.CONTR                                   AS contour ,
    dtl.RMK                                     AS remark ,
    dtl.RHO_STAFF                               AS rhoStaffId,
    TO_CHAR(B.LM_DATE , 'DDMONYY HH24:MI:SS') AS lastModDate,
    (SELECT MAX(ULD_IMAGE_NAME)
    FROM ULD_IMAGE
    WHERE ULD_KEY=B.ULD_KEY
    )                                                             AS transactionId,
    'N'                                                           AS updateRecord,
    inb.FFM_IND                                                   AS ffmInd ,
    inb.CPM_IND                                                   AS cpmInd ,
    PKG_IMP.fun_get_ho_area(B.FLT_KEY,B.FLT_DATE,B.ULD_KEY) AS plannedHoAreaFFMCPM,
    (SELECT TRF_TYPE
    FROM v_ddt_DTL
    WHERE FLT_KEY = F.FLT_KEY
    AND FLT_DATE  = B.FLT_DATE
    AND ULD_KEY   = B.ULD_KEY
    AND rowNum    = 1
    )                                                           AS transferType,
    PKG_COMMON.get_flt_ata(B.FLT_KEY, B.FLT_DATE, 'A','DD') AS ata ,
    (SELECT CODE_DESC
    FROM MAST_CODE_DTL
    WHERE CODE   = f.WTHR_COND
    AND CODE_TYPE='WTH_CONDN'
    )                                     AS weatherCondition,
    null                         AS hcontainer,
    DECODE(flt.RAMP_COMPL_YN,'Y','Y','N') AS rampCompleteStatus,
    'N'                AS actualCheckIn ,
    'N'                          AS checkInStatus ,
    'N'                      AS surPlusInd,
    uld.HANDLING_MODE                     AS handlingMode,
    uld.TRANSIT_IND                       AS transitInd,
    NULL                                  AS defContr,
    null AS displayOrder,
    nvl(b.reject_ind,'N') as rejectInd,
            b.reject_rmk as rejectRmk   
     FROM imp_ramp_dolly_hd a
  LEFT JOIN imp_ramp_dolly_dtl b
  ON b.flt_key  =a.flt_key
  AND b.flt_date=a.flt_date
  AND b.dolly_id=a.dolly_id
  LEFT JOIN ULD_INVENTORY INV
  ON INV.ULD_KEY=B.ULD_KEY
  LEFT JOIN IMP_RAMP_CHK_DTL dtl
  ON dtl.flt_key= b.flt_key
  and dtl.FLT_DATE=b.flt_date
  and dtl.uld_key=b.uld_key
   AND dtl.CHKIN_YN='N'
   left JOIN FLT_OPR f
  ON f.FLT_TYPE                     = 'A'
  AND f.FLT_KEY                     = a.FLT_KEY
  AND TO_CHAR(f.SCH_DATE,'DDMONYY') = TO_CHAR(a.FLT_DATE,'DDMONYY')
  LEFT JOIN flt_opr_events flt
  ON TO_CHAR(flt.SCH_DATE,'DDMONYY') = TO_CHAR(b.FLT_DATE,'DDMONYY')
  AND flt.RAMP_COMPL_YN              = 'Y'
  AND flt.FLT_TYPE                   = 'A'
  AND flt.flt_key                  = a.flt_key
  LEFT JOIN IMP_RAMP_INB_CHK_DTL inb
  ON inb.FLT_KEY                      = b.FLT_KEY
  AND TO_CHAR(inb.FLT_DATE,'DDMONYY') = TO_CHAR(b.FLT_DATE,'DDMONYY')
  AND inb.ULD_KEY                     = b.ULD_KEY
  LEFT JOIN IMP_ULD_LIST uld
  ON uld.FLT_KEY                      =b.FLT_KEY
  AND TO_CHAR(uld.FLT_DATE,'DDMONYY') = TO_CHAR(b.FLT_DATE,'DDMONYY')
  AND uld.ULD_KEY                     =b.ULD_KEY
  WHERE a.FLT_key                   = #carrierCode#||#flightNo# 
  AND TO_CHAR(a.FLT_DATE,'DDMONYY') = #flightDate#
  AND NOT EXISTS(SELECT 1 FROM IMP_RAMP_CHK_DTL WHERE ULD_KEY=B.ULD_KEY
  AND FLT_KEY=B.FLT_KEY
  AND FLT_DATE=B.FLT_DATE)
  AND NOT EXISTS
    (SELECT 1
    FROM IMP_RAMP_INB_CHK_DTL
    WHERE ULD_KEY=B.ULD_KEY
    AND FLT_KEY  =B.FLT_KEY
    AND FLT_DATE =B.FLT_DATE
    ) 
   AND a.ho_no                      IS NOT NULL
			     
			  )	          
      order by displayOrder,uldKey 
	</select>
	
		<select id="culd_get_flt_details"  parameterClass="cargo.cms.imprt.bo.ULDCheckInBO"  resultClass="cargo.cms.imprt.bo.ULDCheckInBO">			  
	SELECT	PKG_COMMON.get_flt_ata(#flightKey#, TO_DATE(#flightDate#,'DDMONYY'), 'A', 'DD') AS ata,
	(SELECT CODE_DESC FROM MAST_CODE_DTL WHERE  CODE  = f.WTHR_COND AND CODE_TYPE='WTH_CONDN') AS weatherCondition
      FROM FLT_OPR f WHERE f.FLT_TYPE='A' AND
			  f.CARR_CODE=#carrierCode# AND
			  f.FLT_NO =#flightNo# AND
			  TO_CHAR(f.SCH_DATE,'DDMONYY') = #flightDate#
	</select>
	
	<select id="validatewhsecompldate" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT WHSE_COMPL_DATE as whseCompldate FROM FLT_OPR_EVENTS WHERE 
			CARR_CODE = UPPER(#carrCode#) AND 
			SCH_DATE = TO_DATE(#fltDate#,'DDMONYY') AND 
			FLT_TYPE = UPPER(#fltType#) 
			AND FLT_NO = UPPER(#fltNo#)
			AND WHSE_COMPL_DATE IS NOT NULL
	</select>	
	
	<select id="imp_flt_validate"  parameterClass="map"  resultClass="java.lang.Integer">
		SELECT NVL(count(1),0) FROM FLT_OPR WHERE 
		<isEmpty property="fltKey">
			CARR_CODE = #carrierCode# AND FLT_NO = #flightNo# 
		</isEmpty>
		<isNotEmpty property="fltKey">
			FLT_KEY = #fltKey# 
		</isNotEmpty>
			AND SCH_DATE= TO_DATE( #flightDate#, 'DDMONYY') AND FLT_TYPE='A'
   	</select>
   	
   	<!--  Changed for QR -->
   	<!-- 	<select id="imp_fltKey_validate"  parameterClass="java.lang.String"  resultClass="java.lang.Integer">
		SELECT NVL(count(1),0) FROM FLT_OPR WHERE FLT_KEY = #fltKey# AND FLT_TYPE='A'
   	</select> -->
   	
   	<select id="imp_fltDate_validate"  parameterClass="java.lang.String"  resultClass="java.lang.Integer">
		SELECT NVL(count(1),0) FROM FLT_OPR WHERE SCH_DATE= TO_DATE( #fltDate#, 'DDMONYY') AND FLT_TYPE='A'
   	</select>
   	
   	<select id="imp_fltchkin_validate"  parameterClass="map"  resultClass="java.lang.Integer">
			SELECT NVL(count(1),0)
			FROM FLT_OPR_EVENTS 
			WHERE RAMP_COMPL_YN	= 'Y' AND
				  FLT_KEY 		= #flightKey# AND
				  SCH_DATE 		= TO_DATE( #flightDate#, 'DDMONYY') AND FLT_TYPE = 'A'
	</select>
	
	<insert id="imp_uld_checkin_ins" parameterClass="cargo.cms.imprt.bo.ULDCheckInBO" >
		INSERT INTO IMP_RAMP_CHK_DTL 
			(TR_NO, DOC_LINE_NO, FLT_NO, FLT_DATE, FLT_KEY, ULD_TYPE, ULD_NO, ULD_CARR, ULD_KEY, 
			 CARR_CODE, DAM_IND, EMPTY_IND, EIC_IND, SURPLUS_IND, LOC_CODE, TR_STATUS, 
			 CR_USER_ID, CR_DATE, LM_USER_ID,  LM_DATE, CHKIN_YN,CHKIN_DATE, ULD_OWNER_ID, CFM_STATUS,RMK , INSRT_FROM_IND,HT,HT_IND,CONTR,RHO_STAFF,TR_TYPE,TRANSFER_TYPE) 
		VALUES 
			( #trNo#, #docLineNo#,#flightNo#,#flightDate#, #flightKey#, #uldType#,#uldNo#,#uldCarr#,#uldKey#,
			 #carrierCode#,#damInd#,#empty#,#eic#, #surPlusInd#, #locCode#,'N',
			 #crUser#,sysdate,#lmUser#,sysdate,'Y',sysdate, #owner#, 'CONFIRMED',#remark# ,  decode(upper(#insrtFromInd#),'HHT','H',#insrtFromInd#),#ht#,DECODE(#ht#,NULL,'N','Y'),#contour#,#rhoStaffId#,'IR',#transferType#)
	</insert>
	
		<insert id="imp_uld_service_err_ins" parameterClass="cargo.cms.imprt.bo.ULDCheckInBO" >
		insert into SERVICE_ERR_LOG(TR_NO,TR_TYPE,DOC_LINE_NO,TR_DATE,OWNER_ID,CARR_CODE,FLT_NO,FLT_DATE,FLT_KEY,FLT_TYPE,ERR_REASON,SVC_USER_ID,SVC_DATE,ULD_TYPE,ULD_NO,ULD_CARR,ULD_KEY,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE)
		values ( #trNo#, 
		 <isNotEmpty property="transferType">
		 #transferType#,
		 </isNotEmpty>
		 <isEmpty property="transferType">
		 'IR',
		 </isEmpty>	
		SERVICE_ERR_LOG_DLN_SEQ.nextval,sysdate,#owner#,#carrierCode#,#flightNo#,#flightDate#, #flightKey#, #flightType#,#errReason#,'','',#uldType#,#uldNo#,#uldCarr#,#uldKey#,#lmUser#,sysdate,#lmUser#,sysdate)
	</insert>

       <insert id="imp_uld_service_err_ins_checklist" parameterClass="cargo.cms.imprt.bo.CheckListBO" >
		insert into SERVICE_ERR_LOG(TR_NO,TR_TYPE,DOC_LINE_NO,TR_DATE,OWNER_ID,CARR_CODE,FLT_NO,FLT_DATE,FLT_KEY,FLT_TYPE,ERR_REASON,SVC_USER_ID,SVC_DATE,ULD_TYPE,ULD_NO,ULD_CARR,ULD_KEY,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE)
		values (#trNo#, 
		 <isNotEmpty property="transferType">
		 #transferType#,
		 </isNotEmpty>
		 <isEmpty property="transferType">
		 'IR',
		 </isEmpty>	
		SERVICE_ERR_LOG_DLN_SEQ.nextval,sysdate,#uldCarr#,#carrierCode#,#flightNo#,#flightDate#, #flightKey#, 'I','Duplicate ULD found in Inventory against Transfer check list.',#lmUserId#,sysdate,
		#uldType#,#uldNo#,#uldCarr#,#uldKey#,#lmUserId#,sysdate,#lmUserId#,sysdate)
	</insert>		
	
	<update id="imp_uld_checkin_upd" parameterClass="cargo.cms.imprt.bo.ULDCheckInBO">
		UPDATE IMP_RAMP_CHK_DTL	SET
			IMP_RAMP_CHK_DTL.TRANSFER_TYPE = #transferType#,  
			IMP_RAMP_CHK_DTL.CHKIN_YN =#checkInStatus#,				
			IMP_RAMP_CHK_DTL.DAM_IND	=#damInd#	,
			IMP_RAMP_CHK_DTL.EMPTY_IND	 =#empty#	 ,
			IMP_RAMP_CHK_DTL.EIC_IND	 =#eic#	 ,
			IMP_RAMP_CHK_DTL.LM_USER_ID	 =#lmUser#	 ,
			IMP_RAMP_CHK_DTL.LM_DATE	 = sysdate ,
			IMP_RAMP_CHK_DTL.RMK	 = #remark# ,
			IMP_RAMP_CHK_DTL.CHKIN_DATE = CASE WHEN NVL(#checkInStatus#, 'N') = 'N' THEN NULL ELSE sysdate END , 
			IMP_RAMP_CHK_DTL.CFM_STATUS	= CASE WHEN NVL(#checkInStatus#, 'N') = 'N' THEN NULL ELSE 'UNCONFIRMED' END ,
			IMP_RAMP_CHK_DTL.INSRT_FROM_IND = decode(upper(#insrtFromInd#),'HHT','H',#insrtFromInd#),
			IMP_RAMP_CHK_DTL.HT	=#ht#,
			IMP_RAMP_CHK_DTL.CONTR	 =#contour#
		WHERE IMP_RAMP_CHK_DTL.TR_NO	 =#trNo#  AND
			IMP_RAMP_CHK_DTL.DOC_LINE_NO	 =#docLineNo# AND 
			TO_CHAR(IMP_RAMP_CHK_DTL.LM_DATE , 'DDMONYY HH24:MI:SS')=#lastModDate#
	</update>
	
	<delete id="Imp_deleteCheckInData" parameterClass="cargo.cms.imprt.bo.ULDCheckInBO" >	
		DELETE FROM	IMP_RAMP_CHK_DTL WHERE TR_NO = #trNo# AND ULD_KEY = #uldKey# AND TO_CHAR(LM_DATE , 'DDMONYY HH24:MI:SS')=#lastModDate#
	</delete>

	<select id="imp_uncheckIn_check_toppalletexists"  parameterClass="java.lang.String"  resultClass="java.lang.Integer">
		select COUNT(1) FROM ULD_INVENTORY
		WHERE  
		BASE_PLT = #uldKey# and
		EIC_FLG = 'Y'		
	</select>

	<!--  Changed for QR
	<select id="warehouse_location_validate"  parameterClass="map"  resultClass="java.lang.Integer">
		SELECT NVL(count(1),0) FROM MAST_WH_LOC_CODE WHERE CODE=upper(#CODE#) AND WH_LOC=#WH_DST#
   	</select> 
   	
   	<select id="get_imp_cfm_status"  parameterClass="cargo.cms.imprt.bo.ULDCheckInBO"  resultClass="java.lang.Integer">
		select count(1) from IMP_RAMP_CHK_DTL where uld_key= #uldKey# and 
		flt_key = #flightKey#  and FLT_DATE = to_date(#flightDate#,'DDMONYY') 
		and cfm_status = 'CONFIRMED'
		<![CDATA[
			and length(uld_key) >= 9
			]]>
	</select> -->
	
	<!-- Changed for QR -->
	<select id="imp_uncheckIn_BT_Import"  parameterClass="cargo.cms.imprt.bo.ULDCheckInBO"  resultClass="java.lang.Integer">
		select  count(1) from imp_awb_strg_dtl where CHKIN_ULD_KEY = #uldKey# and flt_key = #flightKey# and flt_date = #flightDate#
	</select>
	
	<!-- Changed for QR
	<select id="imp_uncheckIn_BT_Export"  parameterClass="cargo.cms.imprt.bo.ULDCheckInBO"  resultClass="java.lang.Integer">
		select count(1) from awb_inventory inv
		JOIN AWB awb ON UPPER(awb.AWB_NO) = UPPER(inv.AWB_NO) 
		AND UPPER (awb.awb_date) = UPPER (inv.awb_date)
		AND awb.awb_type = 'E'    
		where inv.uld_key = #uldKey# 		
	</select> -->
	
	<!-- Changed for QR
	<select id="imp_unconfirmedlist_hht"  parameterClass="cargo.cms.imprt.bo.CheckListBO"  resultClass="cargo.cms.imprt.bo.CheckListBO">
		<![CDATA[
		SELECT IMP_RAMP_CHK_HD.TR_NO AS trNo ,
		   IMP_RAMP_CHK_DTL.DOC_LINE_NO AS docLineNo ,	
		   IMP_RAMP_CHK_HD.CARR_CODE AS carrierCode ,
		   IMP_RAMP_CHK_HD.FLT_NO AS flightNo , 
		   IMP_RAMP_CHK_HD.FLT_KEY AS flightKey,	
		   TO_CHAR(IMP_RAMP_CHK_DTL.FLT_DATE,'DDMONYY') AS flightDate,  
		   IMP_RAMP_CHK_DTL.ULD_KEY AS uldKey , 		   
		   IMP_RAMP_CHK_DTL.LOC_CODE AS wareHouseLoc,  
		   IMP_RAMP_CHK_DTL.DAM_IND AS damInd, 
		   IMP_RAMP_CHK_DTL.EMPTY_IND AS empty, 
		   IMP_RAMP_CHK_DTL.EIC_IND AS eic,
		   IMP_RAMP_CHK_DTL.CHKIN_YN AS checkInStatus,	
		   TO_CHAR(IMP_RAMP_CHK_DTL.CHKIN_DATE,'DDMONYY') AS checkInDate, 
		   IMP_RAMP_CHK_DTL.SURPLUS_IND AS surplus, 
		   IMP_RAMP_CHK_DTL.CFM_STATUS AS cfm,
		   IMP_RAMP_CHK_DTL.RMK AS remark,
		   PKG_COMMON.get_flt_ata(FLT_OPR.FLT_KEY, FLT_OPR.SCH_DATE, 'A')  AS ata,
		   (SELECT WTHR_COND
			       FROM FLT_OPR
			      WHERE FLT_NO = #flightNo#
			    AND CARR_CODE   = upper(#carrierCode#)
			    AND SCH_DATE = TO_DATE(#flightDate#,'DDMONYY') 
			    AND FLT_TYPE='A'
			    )   AS weatherCondition,	
		   'N' AS newRecord,
		   ROW_NUMBER() OVER (ORDER BY IMP_RAMP_CHK_HD.TR_NO ) serialNo
		FROM IMP_RAMP_CHK_HD,  
		   IMP_RAMP_CHK_DTL, 
		   FLT_OPR
		WHERE IMP_RAMP_CHK_HD.FLT_NO 	= #flightNo#  AND 
		   IMP_RAMP_CHK_HD.CARR_CODE		= upper( #carrierCode#) AND
		   IMP_RAMP_CHK_HD.FLT_DATE 		=  TO_DATE( #flightDate#, 'DDMONYY') AND
		   IMP_RAMP_CHK_HD.TR_NO		=  IMP_RAMP_CHK_DTL.TR_NO AND
		   IMP_RAMP_CHK_DTL.CFM_STATUS   =  'UNCONFIRMED'      AND
   		   IMP_RAMP_CHK_DTL.CHKIN_YN            =  'Y'     AND
		   FLT_OPR.CARR_CODE			=  IMP_RAMP_CHK_HD.CARR_CODE	AND
		   FLT_OPR.FLT_NO			=  IMP_RAMP_CHK_HD.FLT_NO 		AND
		   FLT_OPR.SCH_DATE			=  IMP_RAMP_CHK_HD.FLT_DATE		AND
		   FLT_OPR.FLT_TYPE = 'A' AND
		   LENGTH(IMP_RAMP_CHK_DTL.ULD_KEY) >= 9
		ORDER BY IMP_RAMP_CHK_DTL.ULD_KEY
	]]>	
	</select>	-->
	
	<select id="imp_hht_inboundUld_detail" parameterClass="cargo.cms.imprt.bo.CheckListBO"  resultClass="cargo.cms.imprt.bo.CheckListBO">
	SELECT 
	   IMP_RAMP_CHK_DTL.FLT_KEY AS flightKey,
	   TO_CHAR(IMP_RAMP_CHK_DTL.FLT_DATE,'DDMONYY') AS flightDate,	   
	   IMP_RAMP_CHK_DTL.LOC_CODE AS wareHouseLoc,
	   IMP_RAMP_CHK_DTL.EMPTY_IND AS empty,
	   IMP_RAMP_CHK_DTL.EIC_IND AS eic,
	   IMP_RAMP_CHK_DTL.RMK AS remark,
	   DECODE(IMP_RAMP_CHK_DTL.DAM_IND,'DAM','Y','N') AS damInd,
	   IMP_RAMP_CHK_DTL.SURPLUS_IND	AS surPlusInd,
       IMP_RAMP_CHK_DTL.ULD_KEY AS uldKey,
	   TO_CHAR(IMP_RAMP_CHK_DTL.CHKIN_DATE,'DDMONYY')AS checkInDate,
	   IMP_RAMP_CHK_DTL.CHKIN_YN AS checkInStatus,	
	   IMP_RAMP_CHK_DTL.TR_NO AS trNo,
	   IMP_RAMP_CHK_DTL.DOC_LINE_NO AS docLineNo,
	   IMP_RAMP_CHK_DTL.CARR_CODE AS carrierCode,
	   IMP_RAMP_CHK_DTL.FLT_NO AS flightNo,
		IMP_RAMP_CHK_DTL.ULD_OWNER_ID as uldOwnerId,
	  <!-- SUBSTR(TRIM(TO_CHAR(NVL(FLT_OPR.ACT_TIME,0),'0000')),0,2)|| ':'||  SUBSTR(TRIM(TO_CHAR(NVL(FLT_OPR.ACT_TIME,0),'0000')),3,4) AS ata-->
	   PKG_COMMON.get_flt_ata(IMP_RAMP_CHK_DTL.FLT_KEY, IMP_RAMP_CHK_DTL.FLT_DATE, 'A', 'DD') as ata
	FROM IMP_RAMP_CHK_DTL
	WHERE
	 IMP_RAMP_CHK_DTL.TR_NO = #trNo# AND
	 IMP_RAMP_CHK_DTL.DOC_LINE_NO = #docLineNo# 
	<!-- FLT_OPR.FLT_NO = IMP_RAMP_CHK_DTL .FLT_NO AND 
	 FLT_OPR.SCH_DATE = IMP_RAMP_CHK_DTL .FLT_DATE AND
	 FLT_OPR.FLT_TYPE	= 'A' -->
	</select>
	
	<!--  Changed for QR -->
	<update id="HHTConfirmupdaterampchkdtl" parameterClass="cargo.cms.imprt.bo.CheckListBO">	
		UPDATE IMP_RAMP_CHK_DTL 
		SET CFM_STATUS = 'CONFIRMED' , LM_USER_ID = #lmUserId# , LM_DATE = sysdate , INSRT_FROM_IND = 'H'
		WHERE   
		   FLT_KEY = UPPER(#flightKey#) AND
		   FLT_DATE = TO_DATE(#flightDate#,'DDMONYY') AND
		   ULD_KEY = UPPER(#uldKey#)
	</update>

	<insert id="HHTConfirminsertrampchkdtl" parameterClass="cargo.cms.imprt.bo.CheckListBO">	
		INSERT INTO IMP_CFM_ULD (TR_NO, DOC_LINE_NO, FLT_NO, FLT_DATE, FLT_KEY, ULD_TYPE, ULD_NO, ULD_CARR, ULD_KEY, CARR_CODE, 
			SURPLUS_IND, DAM_IND, EMPTY_IND, EIC_IND, LOC_CODE, RMK, ULD_OWNER_ID, TR_TYPE, TR_STATUS, 
			CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE,INSRT_FROM_IND)
		VALUES( #trNo#, nvl((select max(DOC_LINE_NO) from IMP_CFM_ULD where tr_no = #trNo#), 0) + 1,#flightNo#,#flightDate#, #flightKey#, #uldType#,#uldNo#,#uldCarr#,#uldKey#,
			#carrierCode#,#surPlusInd#,#damInd#,#empty#,#eic#, #wareHouseLoc#,#remark#, NVL(#carrierCode#, FUN_GET_ULD_OWNER(#uldKey#)),'CU','N',
			#lmUserId#,sysdate,#lmUserId#,sysdate,'H')  
	</insert>
	
	<!--  Changed for QR
	<select id="imp_get_location_list"  parameterClass="map"  resultClass="java.lang.Integer">
		SELECT NVL(count(1),0) FROM MAST_WH_LOC_CODE WHERE WH_LOC=#WH_DST#
	</select> -->
	
	<select id="chkFfmProcessed"  parameterClass="map"  resultClass="java.lang.Integer">
		select count(1) from edi_ffm_msg a,edi_ffm_uld b where a.tr_no=b.tr_no 
	and a.flt_key=#flightKey# and a.flt_date = #fltDate# and b.uld_key = #uldKey# and a.ffm_status ='P'
	</select>
	
	<!-- End - Queries added for DDS_IMP_RAMP_Check-inInbULD functionlity-->
	
	
			<!-- Query for Enquire Check-in Inbound ULD Desktop Starts-->
	<select id="imp_enq_checkin_uld"  parameterClass="cargo.cms.imprt.bo.EnquireUldBO"  resultClass="cargo.cms.imprt.bo.EnquireUldBO">
	  SELECT DISTINCT A.FLT_KEY   AS flightKey,
	  A.FLT_NO                      AS flightNo ,
	  A.CARR_CODE                   AS carrierCode ,
	  TO_CHAR(A.FLT_DATE,'DDMONYY') AS flightDate,
	  B.ULD_KEY                     AS uldKey,
	  B.LOC_CODE                    AS wareHouseLoc,
	  B.EIC_IND                     AS eic,
	  B.EMPTY_IND                   AS empty,
	  B.SURPLUS_IND                 AS surplus,
	  B.RMK                         AS damageRemark,
	  B.TR_NO                       AS trNo,
	  B.DOC_LINE_NO                 AS docLineNo,
	  C.ORIG                        AS ladingPoint,
	  C.DEST                        AS unladingPoint,
	  B.DAM_IND                     AS damage,
	  TO_CHAR(CHKIN_DATE,'DDMONYY HH24:MI') as checkInTime,
	  G.RAMP_COMPL_YN               AS rampComplStatus,
	  DECODE(E.FFM_IND,'Y',E.FFM_IND,'N')  AS ffmInd,
      DECODE(E.CPM_IND,'Y',E.CPM_IND,'N')  AS cpmInd,	     
	  H.WH_RMK              AS bdInstruction,	
	   (select WH_AREA 
	      from MAST_WH_GROUP whg
	      join MAST_WH_LOC whl on whl.WH_GROUP = whg.WH_GROUP
	      where whl.CODE = B.LOC_CODE) as hoArea,	
	  PKG_IMP.fun_get_ho_area(A.FLT_KEY,A.FLT_DATE,B.ULD_KEY) as plannedHandOverZone,  												            
      CASE WHEN ((select WH_AREA 
	      from MAST_WH_GROUP whg
	      join MAST_WH_LOC whl on whl.WH_GROUP = whg.WH_GROUP
	      where whl.CODE = B.LOC_CODE)=PKG_IMP.fun_get_ho_area(A.FLT_KEY,A.FLT_DATE,B.ULD_KEY)) THEN 'N' ELSE 'Y' END AS hoDesc,						 		
	  (SELECT CODE_DESC FROM MAST_CODE_DTL WHERE  CODE  = c.WTHR_COND AND CODE_TYPE='WTH_CONDN') AS weatherCondition, 	  
	  D.CODE_DESC                                        AS owner,
	  C.ACFT_REG_NO                                      AS regn,
	  PKG_COMMON.get_flt_ata(B.FLT_KEY, B.FLT_DATE, 'A', 'DD') AS ata,
	  (select TRF_TYPE || decode(brk_bulk,'Y', '+'||'BB') from v_ddt_dtl F 
              where  F.ULD_KEY=B.ULD_KEY AND F.FLT_Key=B.FLT_KEY AND F.FLT_DATE=B.FLT_DATE and rownum =1) trfType,
	  CASE WHEN (m.h_cont_ind='Y') THEN '1' ELSE '2' END as displayOrder
	FROM IMP_RAMP_CHK_HD A
	JOIN   IMP_RAMP_CHK_DTL B ON  B.TR_NO=A.TR_NO AND B.FLT_KEY  = A.FLT_KEY AND TO_CHAR(B.FLT_DATE,'DDMONYY')  = TO_CHAR(A.FLT_DATE,'DDMONYY')
	JOIN  FLT_OPR C ON  C.FLT_KEY   = A.FLT_KEY AND TO_CHAR(C.SCH_DATE,'DDMONYY')  =TO_CHAR(A.FLT_DATE,'DDMONYY') and C.FLT_TYPE  = 'A'
	JOIN MAST_CARRIER D ON D.CODE=C.CARR_CODE
	left join MAST_ULD_TYPE m  on m.code = B.uld_type
	LEFT JOIN IMP_RAMP_INB_CHK_DTL E ON E.TR_NO=B.TR_NO AND E.FLT_KEY=C.FLT_KEY AND TO_CHAR(E.FLT_DATE,'DDMONYY')=TO_CHAR(C.SCH_DATE,'DDMONYY') 
	AND E.ULD_KEY= B.ULD_KEY	
	LEFT JOIN IMP_ULD_LIST H ON H.FLT_KEY=B.FLT_KEY AND TO_CHAR(H.FLT_DATE,'DDMONYY')=TO_CHAR(B.FLT_DATE,'DDMONYY') AND H.ULD_KEY=B.ULD_KEY
	LEFT JOIN flt_opr_events G ON G.FLT_KEY=B.FLT_KEY AND TO_CHAR(G.SCH_DATE,'DDMONYY')=TO_CHAR(B.FLT_DATE,'DDMONYY')	
	WHERE A.FLT_NO  = #flightNo#
	AND A.CARR_CODE = upper( #carrierCode#)
	AND TO_CHAR(A.FLT_DATE,'DDMONYY')  = #flightDate#
	AND B.CHKIN_YN  = 'Y'
	AND C.FLT_TYPE  = 'A'
	order by displayOrder, uldKey
	
</select>


<!-- Query for Enquire Check-in Inbound ULD HHT Starts-->
<!--  Changed for QR -->
<select id="imp_enq_checkin_uld_hht"  parameterClass="cargo.cms.imprt.bo.EnquireUldBO"  resultClass="cargo.cms.imprt.bo.EnquireUldBO">
 SELECT  A.FLT_KEY AS flightKey,
			A.FLT_NO AS flightNo , 
			A.CARR_CODE AS carrierCode ,
			TO_CHAR(A.FLT_DATE,'DDMONYY') AS flightDate,
			B.ULD_KEY AS uldKey,			
			'' AS wareHouseDst,
			B.LOC_CODE AS wareHouseLoc,
			B.EIC_IND AS eic,
			B.EMPTY_IND AS empty,			
			B.DAM_IND AS condition,
			G.RAMP_COMPL_YN               AS rampComplStatus,
			B.SURPLUS_IND AS surplus,
			B.DAM_RMK AS damageRemark,
			B.TR_NO AS trNo,
			B.DOC_LINE_NO AS docLineNo,
			C.ORIG AS ladingPoint, 				 
		    PKG_IMP.fun_get_ho_area(A.FLT_KEY,A.FLT_DATE,B.ULD_KEY) as plannedHandOverZone, 		    
			C.DEST AS unladingPoint, 
			(SELECT CODE_DESC FROM MAST_CODE_DTL WHERE  CODE  = C.WTHR_COND AND CODE_TYPE='WTH_CONDN') AS weatherCondition,				
			D.CODE_DESC AS owner,
			C.ACFT_REG_NO AS regn,
			PKG_COMMON.get_flt_ata(B.FLT_KEY, B.FLT_DATE, 'A', 'DD') AS ata,
			CASE WHEN (m.h_cont_ind='Y') THEN '1' ELSE '2' END as displayOrder	 
		FROM IMP_RAMP_CHK_HD A
		JOIN IMP_RAMP_CHK_DTL B ON  B.TR_NO=A.TR_NO AND B.FLT_KEY  = A.FLT_KEY AND TO_CHAR(B.FLT_DATE,'DDMONYY')  = TO_CHAR(A.FLT_DATE,'DDMONYY')
		JOIN  FLT_OPR C ON  C.FLT_KEY   = A.FLT_KEY AND TO_CHAR(C.SCH_DATE,'DDMONYY')  =TO_CHAR(A.FLT_DATE,'DDMONYY') and C.FLT_TYPE  = 'A'
		JOIN MAST_CARRIER D ON D.CODE=C.CARR_CODE
		left join MAST_ULD_TYPE m  on m.code = B.uld_type
		LEFT JOIN IMP_ULD_LIST H ON H.FLT_KEY=B.FLT_KEY AND TO_CHAR(H.FLT_DATE,'DDMONYY')=TO_CHAR(B.FLT_DATE,'DDMONYY') AND H.ULD_KEY=B.ULD_KEY
		LEFT JOIN flt_opr_events G ON G.FLT_KEY=B.FLT_KEY AND TO_CHAR(G.SCH_DATE,'DDMONYY')=TO_CHAR(B.FLT_DATE,'DDMONYY')
		WHERE A.FLT_NO  = #flightNo#
	AND A.CARR_CODE = upper( #carrierCode#)
	AND TO_CHAR(A.FLT_DATE,'DDMONYY')  = TO_DATE(#flightDate#,'DDMONYY')
	AND B.CHKIN_YN  = 'Y'
	AND C.FLT_TYPE  = 'A'
	order by displayOrder, uldKey		  
</select>

<!--  Changed for QR -->
<select id="uld_loaded_ffm_towed_chkd_uld_list"  parameterClass="cargo.cms.imprt.bo.EnquireUldBO"  resultClass="cargo.cms.imprt.bo.EnquireUldBO">	
 	<![CDATA[
	 	select a.ULD_TYPE uldType, ((c.QTY)||(c.ALLOT_TYPE)) uldAllot,d.ULD_TYPE chkdinuld, a.flt_key
		from imp_ramp_inb_chk_dtl a  
		left join ddt_msg m on m.flt_key= a.flt_key  and m.flt_date=a.flt_date and m.ddt_status='P' 
		left join ddt_uld b on m.tr_no = b.tr_no and a.uld_key= b.uld_key 
		left join IMP_CFM_ULD_TOWED_DTL c on c.flt_key= a.flt_key  and c.flt_date=a.flt_date
		left join imp_ramp_chk_dtl d on d.flt_key= c.flt_key  and d.flt_date=c.flt_date
		and a.empty_ind = 'N' 
		and  a.ffm_ind ='Y'
		and b.trf_type not in ('TT','IF')
		where a.flt_date=TO_DATE(#flightDate#,'DDMONYY')
		and a.flt_key=#flightKey# 
  ]]>
</select>	

<!--  Changed for QR -->
	<select id="imp_enq_checkin_uld_uld_type_summary"  parameterClass="cargo.cms.imprt.bo.EnquireUldBO"  resultClass="cargo.cms.imprt.bo.EnquireUldBO">	
 	<![CDATA[
 SELECT ((a.QTY) ||(a.ALLOT_TYPE))  uldTowedConfirm,
        (( SELECT NVL(COUNT(1),0) FROM imp_ramp_chk_dtl a 
        							join uld_group_type b on b.uld_type=a.uld_type )
        	|| (SELECT COUNT(1)  FROM uld_group_type b,mast_uld_allot_group c  WHERE b.uld_group = c.uld_group)) actualChkinULD,
  ((SELECT NVL(COUNT(1),0) FROM imp_ramp_inb_chk_dtl a
  								JOIN ddt_msg m ON a.flt_key = m.flt_key and a.flt_date = m.flt_date and m.ddt_status='P' 
  								JOIN ddt_uld b ON b.tr_no = m.tr_no and a.uld_key = b.uld_key AND a.empty_ind = 'N' AND a.ffm_ind ='Y'  
  													AND b.trf_type NOT IN ('TT','IF') 
  	 						WHERE a.uld_type=#uldType#)
  	 	||(SELECT tab2.uld_allot FROM uld_group_type tab1,mast_uld_allot_group tab2 WHERE tab1.uld_group = tab2.uld_group AND tab1.uld_type =#uldType#)) ffmULD
 FROM IMP_CFM_ULD_TOWED_DTL a
 WHERE a.flt_key =upper(#flightKey#) AND a.flt_date=#flightDate#	
  ]]>
  </select>
		<!-- Query for Enquire Check-in Inbound ULD Ends-->	
	<!-- START - Queries added for DDS_IMP_RAMP_DeclareRamp Complete functionlity-->
	<select id="imp_declramp_searchbydate"  parameterClass="cargo.cms.imprt.bo.DeclareRampBO"  resultClass="cargo.cms.imprt.bo.DeclareRampBO">
	  SELECT distinct B.FLT_KEY flightNo,
	  #flightDate# as fltDateShow,
	  (select count(dolly_id) from imp_ramp_dolly_hd where flt_key=B.FLT_KEY  and flt_date =B.SCH_DATE) as   towUnloaded,
	  (select count(uld_key) from imp_ramp_dolly_dtl where flt_key=B.FLT_KEY and flt_date =B.SCH_DATE) as   uldUnloaded,
	  (SELECT COUNT(d.uld_key)
	  FROM imp_ramp_dolly_hd h, imp_ramp_dolly_dtl d
	  WHERE h.ho_no  IS NOT NULL
	  AND h.dolly_id IS NOT NULL
	  and h.dolly_id=d.dolly_id and h.flt_key=d.flt_key
	  and h.flt_date=d.flt_date
	  AND h.flt_key   =B.FLT_KEY
	  AND h.flt_date  =B.SCH_DATE) as uldHandover,
	  (select count(1) from imp_ramp_chk_dtl where  flt_key=B.FLT_KEY and flt_date =A.FLT_DATE and chkin_yn='Y') as checkincount,
	  TO_CHAR(B.SCH_DATE,'DDMONYY')flightDate,
	  B.TR_NO tr_No,
	  PKG_COMMON.get_flt_ata(B.FLT_KEY, B.SCH_DATE,'A','DD') ata,  
	  case when (select count(1) from tow_order_in t1 where t1.flt_key=B.flt_key and to_Char(t1.flt_date,'DDMONYY') = to_Char(B.sch_date,'DDMONYY')) > 0
	  then 'Y' else 'N' end as towOrderInd,
	   LTRIM(RTRIM(TO_CHAR(E.RAMP_COMPL_DATE,'DDMONYY') ||' '|| 
	  SUBSTR(TRIM(TO_CHAR(E.RAMP_COMPL_TIME,'0000')),0,2)|| ':'|| 
	  SUBSTR(TRIM(TO_CHAR(E.RAMP_COMPL_TIME,'0000')),3,2),':')) AS chkInCompDate,
	  E.RAMP_COMPL_USER_ID AS chkInCompId, 
	  C.LM_USER_ID AS fltHdlgDataGenId, 
		  ( case when  (SELECT COUNT(d.uld_key)
  FROM imp_ramp_dolly_hd h, imp_ramp_dolly_dtl d
  WHERE h.ho_no  IS NOT NULL
  AND h.dolly_id IS NOT NULL
  and h.dolly_id=d.dolly_id and h.flt_key=d.flt_key
  and h.flt_date=d.flt_date
  AND h.flt_key   =B.FLT_KEY
  AND h.flt_date  =B.SCH_DATE)!=(SELECT COUNT(1)
	  FROM imp_ramp_chk_dtl
	  WHERE flt_key=B.FLT_KEY
	  AND flt_date =B.SCH_DATE
	  AND chkin_yn ='Y')
	  then 'RED' else null end) as fltpageInd,
	  TO_CHAR(C.LM_DATE,'DDMONYY') AS fltHdlgDataGenDate,
	  (SUBSTR(TRIM(TO_CHAR(NVL(b.SCH_TIME,0),'0000')),0,2)|| ':'|| SUBSTR(TRIM(TO_CHAR(NVL(b.SCH_TIME,0),'0000')),3,4))	as std,
	  (SELECT TO_CHAR(MIN(TOW_IN_TIME), 'HH24:MI') FROM TOW_ORDER_IN_RECORD REC WHERE REC.FLT_KEY = B.FLT_KEY AND REC.FLT_DATE = B.SCH_DATE) firstInTime,
	  (SELECT TO_CHAR(MAX(TOW_IN_TIME), 'HH24:MI') FROM TOW_ORDER_IN_RECORD REC WHERE REC.FLT_KEY = B.FLT_KEY AND REC.FLT_DATE = B.SCH_DATE) lastInTime,
	  (SELECT COUNT(dolly_id)
  FROM imp_ramp_dolly_hd
  WHERE flt_key=B.FLT_KEY
  AND flt_date =B.SCH_DATE
  and ho_no is not null) towCount
	  FROM  FLT_OPR B  
	  INNER JOIN FLT_OPR_EVENTS E ON B.FLT_KEY = E.FLT_KEY AND B.SCH_DATE = E.SCH_DATE AND B.FLT_TYPE = E.FLT_TYPE
	  LEFT JOIN IMP_RAMP_CHK_HD A ON B.FLT_KEY = A.FLT_KEY AND B.SCH_DATE = A.FLT_DATE AND B.FLT_TYPE = 'A'
	  LEFT  JOIN IMP_CFM_ULD_TOWED T ON   T.FLT_KEY = A.FLT_KEY AND T.FLT_DATE = A.FLT_DATE
	  LEFT JOIN IMP_FLT_HAND_SUMMARY C ON C.FLT_KEY = A.FLT_KEY AND C.FLT_DATE = A.FLT_DATE AND C.REP_MODULE = 'IR'
	   WHERE to_date((to_char(B.SCH_DATE,'DDMONYY')||to_char(B.SCH_TIME,'0000')),'DDMONYYHH24mi')  
	            BETWEEN TO_DATE(#startTime#,'DDMONYYHH24mi') AND TO_DATE(#endTime#,'DDMONYYHH24mi')
	   AND B.FLT_TYPE = 'A'  
	   <isNotEmpty property="loginCustCode">
		    	AND B.RHO_ID = #loginCustCode# 
	  </isNotEmpty> 
	  <isNotEmpty property="flightKey">
		    	AND B.FLT_KEY = #flightKey#  
	  </isNotEmpty> 
	   <isNotEmpty property="fltType">
		    	AND B.CGO_ACFT_TYPE= #fltType#  
	  </isNotEmpty> 
	   <isNotEmpty property="rhoUser">
		    	AND B.RHO_ID= (select cc.CODE from CUST_COMPANY cc where cc.CODE_DESC = #rhoUser#)  
	  </isNotEmpty> 
	  
	  <isEmpty property="flightKey">
	        <isNotEmpty property="carrierCode">
	           	AND B.CARR_CODE = #carrierCode#  
	        </isNotEmpty>
	        <isNotEmpty property="flightNo">
	        	   AND B.FLT_NO = #flightNo#  
	        </isNotEmpty>
	   </isEmpty>
     <dynamic prepend="ORDER BY ">
         <isNotEmpty property="sortOrder.sortField">
           $sortOrder.sortField$
         </isNotEmpty>
         <isEmpty property="sortOrder.sortField">
          ata,std
         </isEmpty>
	 </dynamic>
</select>

<select id="imp_declramp_searchbydateCOUNT"  parameterClass="cargo.cms.imprt.bo.DeclareRampBO"  resultClass="cargo.cms.imprt.bo.DeclareRampBO">
  SELECT COUNT(1)
  FROM  FLT_OPR B  
  INNER JOIN FLT_OPR_EVENTS E ON B.FLT_KEY = E.FLT_KEY AND B.SCH_DATE = E.SCH_DATE AND B.FLT_TYPE = E.FLT_TYPE
  LEFT JOIN IMP_RAMP_CHK_HD A ON B.FLT_KEY = A.FLT_KEY AND B.SCH_DATE = A.FLT_DATE AND B.FLT_TYPE = 'A'
  LEFT  JOIN IMP_CFM_ULD_TOWED T ON   T.FLT_KEY = A.FLT_KEY AND T.FLT_DATE = A.FLT_DATE
  LEFT JOIN IMP_FLT_HAND_SUMMARY C ON C.FLT_KEY = A.FLT_KEY AND C.FLT_DATE = A.FLT_DATE AND C.REP_MODULE = 'IR'
   WHERE to_date((to_char(B.SCH_DATE,'DDMONYY')||to_char(B.SCH_TIME,'0000')),'DDMONYYHH24mi')  
            BETWEEN TO_DATE(#startTime#,'DDMONYYHH24mi') AND TO_DATE(#endTime#,'DDMONYYHH24mi')
   AND 
  B.FLT_TYPE = 'A'   
  <isNotEmpty property="flightKey">
	    	AND B.FLT_KEY = #flightKey#  
  </isNotEmpty> 
  <isEmpty property="flightKey">
        <isNotEmpty property="carrierCode">
           	AND B.CARR_CODE = #carrierCode#  
        </isNotEmpty>
        <isNotEmpty property="flightNo">
        	   AND B.FLT_NO = #flightNo#  
        </isNotEmpty>
   </isEmpty>
	</select>
	
	<!--  Changed for QR -->
	<select id="sqlDeclareLoadedFfmList" parameterClass="cargo.cms.imprt.bo.DeclareRampBO" resultClass="cargo.cms.imprt.bo.DeclareRampBO">
<![CDATA[	
       select (COUNT(ALLOTGROUP_1.ULD_ALLOT) || ''  || ALLOTGROUP_1.ULD_ALLOT) ffmULD,INB.flt_key flightNo, TO_CHAR(INB.flt_date,'DDMONYY') flightDate
         from IMP_RAMP_INB_CHK_DTL INB
         LEFT JOIN ddt_msg m ON INB.flt_key = m.flt_key and INB.flt_date = m.flt_date and m.ddt_status='P' 
  		 LEFT JOIN ddt_uld b ON b.tr_no = m.tr_no and INB.uld_key = b.uld_key
         LEFT JOIN ULD_GROUP_TYPE ULDGROUP_1 ON ULDGROUP_1.ULD_TYPE = INB.ULD_TYPE
         LEFT JOIN MAST_ULD_ALLOT_GROUP ALLOTGROUP_1 ON ALLOTGROUP_1.ULD_GROUP = ULDGROUP_1.ULD_GROUP
         where INB.empty_ind = 'N' and  INB.ffm_ind ='Y' and (b.trf_type is null or b.trf_type NOT IN ('TT','IF') )
]]>
         <isNotEmpty property="flightKey">
	    AND INB.FLT_KEY = #flightKey#  
  		</isNotEmpty> 
  		<isEmpty property="flightKey">
        <isNotEmpty property="carrierCode">
           	AND INB.CARR_CODE = #carrierCode#  
        </isNotEmpty>
        <isNotEmpty property="flightNo">
        	   AND INB.FLT_NO = #flightNo#  
        </isNotEmpty>
  		 </isEmpty>
         and to_char(INB.flt_date,'DDMONYY')  
            BETWEEN TO_DATE(#flightDate#,'DDMONYY') AND TO_DATE(#arrDateTo#,'DDMONYY')
         GROUP BY ALLOTGROUP_1.ULD_ALLOT,INB.flt_key,INB.flt_date order by ALLOTGROUP_1.ULD_ALLOT

</select>

<select id="sqlDeclareLoadedTowCount" parameterClass="cargo.cms.imprt.bo.DeclareRampBO" resultClass="cargo.cms.imprt.bo.DeclareRampBO">	
      select ((DTL.QTY)||(DTL.ALLOT_TYPE)) uldTowedConfirm,(HD.BULK_QTY||'BULK') bulkqty,
    HD.flt_key flightNo,TO_CHAR(HD.flt_date,'DDMONYY')
    flightDate 
    from IMP_CFM_ULD_TOWED HD 
    left join IMP_CFM_ULD_TOWED_DTL DTL on DTL.flt_key=HD.flt_key and DTL.flt_date=HD.flt_date and nvl(DTL.EMPTY,'N')='N' 
    where 'XXX' = 'XXX'
           <isNotEmpty property="flightKey">
	    AND HD.FLT_KEY = #flightKey#  
  		</isNotEmpty> 
  		<isEmpty property="flightKey">
        <isNotEmpty property="carrierCode">
        AND substr(HD.FLT_KEY, 0,(select LENGTH(#carrierCode#) from dual))= #carrierCode#
        </isNotEmpty>
        <isNotEmpty property="flightNo">
		 AND substr(HD.flt_key,( select (length(HD.flt_key)-length(#flightNo#)+1) from dual),length(#flightNo#))= #flightNo#
        </isNotEmpty>
  		 </isEmpty>
  		  and to_char(HD.flt_date,'DDMONYY')  
            BETWEEN TO_DATE(#flightDate#,'DDMONYY') AND TO_DATE(#arrDateTo#,'DDMONYY')
    order by DTL.ALLOT_TYPE
 </select>
	
	<select id="sqlDeclareLoadedChkdinCount" parameterClass="cargo.cms.imprt.bo.DeclareRampBO" resultClass="cargo.cms.imprt.bo.DeclareRampBO">
          select * from ( select COUNT(ALLOTGROUP_2.ULD_ALLOT)  || ''  || ALLOTGROUP_2.ULD_ALLOT AS actualChkinULD,
          ALLOTGROUP_2.ULD_ALLOT as sortingOrder,
          RAMPCHK.flt_key flightNo,TO_CHAR(RAMPCHK.flt_date,'DDMONYY') flightDate  
          from IMP_RAMP_CHK_DTL RAMPCHK
          JOIN MAST_ULD_TYPE MULD ON MULD.CODE = RAMPCHK.ULD_TYPE
          LEFT JOIN ULD_GROUP_TYPE ULDGROUP_2 ON ULDGROUP_2.ULD_TYPE = RAMPCHK.ULD_TYPE
          LEFT JOIN MAST_ULD_ALLOT_GROUP ALLOTGROUP_2 ON ALLOTGROUP_2.ULD_GROUP = ULDGROUP_2.ULD_GROUP
          where to_char(RAMPCHK.FLT_DATE,'DDMONYY')  
            BETWEEN TO_DATE(#flightDate#,'DDMONYY') AND TO_DATE(#arrDateTo#,'DDMONYYHH24mi')
      <isNotEmpty property="flightKey">
	    AND RAMPCHK.FLT_KEY = #flightKey#  
  		</isNotEmpty> 
  		<isEmpty property="flightKey">
        <isNotEmpty property="carrierCode">
           	AND RAMPCHK.CARR_CODE = #carrierCode#  
        </isNotEmpty>
        <isNotEmpty property="flightNo">
        	   AND RAMPCHK.FLT_NO = #flightNo#  
        </isNotEmpty>
  		 </isEmpty>
  		 <![CDATA[
  		 AND MULD.H_CONT_IND <> 'Y' AND
  		  MULD.BT_IND <> 'Y' AND
  		   NVL(RAMPCHK.EMPTY_IND,'N') = 'N'
  		  
  		  ]]>
  		 GROUP BY ALLOTGROUP_2.ULD_ALLOT,RAMPCHK.flt_key,RAMPCHK.flt_date
   union all          
       select count(1)||'BULK' actualChkinULD,
          null as sortingOrder,
          RAMPCHK.flt_key flightNo,TO_CHAR(RAMPCHK.flt_date,'DDMONYY') flightDate  
          from IMP_RAMP_CHK_DTL RAMPCHK
          JOIN MAST_ULD_TYPE MULD ON MULD.CODE = RAMPCHK.ULD_TYPE
          LEFT JOIN ULD_GROUP_TYPE ULDGROUP_2 ON ULDGROUP_2.ULD_TYPE = RAMPCHK.ULD_TYPE
          LEFT JOIN MAST_ULD_ALLOT_GROUP ALLOTGROUP_2 ON ALLOTGROUP_2.ULD_GROUP = ULDGROUP_2.ULD_GROUP
          where to_char(RAMPCHK.FLT_DATE,'DDMONYY')  
            BETWEEN TO_DATE(#flightDate#,'DDMONYY') AND TO_DATE(#arrDateTo#,'DDMONYYHH24mi')
      <isNotEmpty property="flightKey">
	    AND RAMPCHK.FLT_KEY = #flightKey#  
  		</isNotEmpty> 
  		<isEmpty property="flightKey">
        <isNotEmpty property="carrierCode">
           	AND RAMPCHK.CARR_CODE = #carrierCode#  
        </isNotEmpty>
        <isNotEmpty property="flightNo">
        	   AND RAMPCHK.FLT_NO = #flightNo#  
        </isNotEmpty>
  		 </isEmpty>
  		  and (MULD.H_CONT_IND = 'Y' OR MULD.BT_IND = 'Y')
  		   and NVL(RAMPCHK.EMPTY_IND,'N') = 'N'
  		 GROUP BY RAMPCHK.flt_key,RAMPCHK.flt_date ) I
         order by I.sortingOrder
	</select>
	
		
   	<select id="Ramp_Date_Time_Comparision"  parameterClass="map"  resultClass="java.lang.String">
	<![CDATA[		
		SELECT TO_CHAR(TO_DATE(#endDate#,'DDMONYY HH24:MI') - TO_DATE(#startDate#,'DDMONYY HH24:MI')) DAYDIFF FROM DUAL
		]]>
   	</select> 
      <select id="imp_declramp_search_header"  parameterClass="cargo.cms.imprt.bo.DeclareRampBO"  resultClass="cargo.cms.imprt.bo.DeclareRampBO">
			
		SELECT E.RAMP_COMPL_YN rampStatus,
  rtrim(TO_CHAR(E.RAMP_COMPL_DATE,'DDMONYY')
  ||' '
  || SUBSTR(TRIM(TO_CHAR(E.RAMP_COMPL_TIME,'0000')),0,2)
  || ':'
  || SUBSTR(TRIM(TO_CHAR(E.RAMP_COMPL_TIME,'0000')),3,2),':') AS chkInCompDate,
  E.RAMP_COMPL_USER_ID                                        AS chkInCompId,
   PKG_COMMON.get_flt_ata(D.FLT_KEY, D.SCH_DATE,'A','DD') ata ,
   D.FLT_KEY                     AS flightKey,
  TO_CHAR(D.SCH_DATE,'DDMONYY') AS flightDate

FROM FLT_OPR D
JOIN FLT_OPR_EVENTS E
ON D.FLT_KEY                      = E.FLT_KEY
AND D.SCH_DATE                    = E.SCH_DATE
WHERE  D.FLT_KEY  = upper(#flightKey#) AND
TO_CHAR(D.SCH_DATE,'DDMONYY') = #flightDate#
AND D.FLT_TYPE                    = 'A'
		
   	</select> 	
		<select id="imp_declramp_search"  parameterClass="cargo.cms.imprt.bo.DeclareRampBO"  resultClass="cargo.cms.imprt.bo.DeclareRampBO">	
	
	SELECT A.TR_NO AS trNo, 
			D.FLT_KEY AS flightNo , 
			D.TR_NO as tr_No,
			D.CARR_CODE AS carrierCode ,
			A.DOC_LINE_NO AS docLine, 
			A.ULD_KEY AS uldKey,
		    A.DAM_IND As damInd,
			A.EMPTY_IND AS empty, 
			A.EIC_IND AS eic,
			A.LOC_CODE AS wareHouseLoc, 
			TO_CHAR(A.CHKIN_DATE,'DDMONYY HH24:MI') AS chkInDate, 
			A.RMK AS remark,
			E.RAMP_COMPL_YN rampStatus,
			D.FLT_KEY AS	flightKey,
			TO_CHAR(D.SCH_DATE,'DDMONYY') AS flightDate,	
		    rtrim(TO_CHAR(E.RAMP_COMPL_DATE,'DDMONYY') ||' '|| SUBSTR(TRIM(TO_CHAR(E.RAMP_COMPL_TIME,'0000')),0,2)|| ':'|| SUBSTR(TRIM(TO_CHAR(E.RAMP_COMPL_TIME,'0000')),3,2),':') AS chkInCompDate,
		    E.RAMP_COMPL_USER_ID AS chkInCompId, 
		    A.CFM_STATUS AS uldLocCfm,
		    PKG_COMMON.get_flt_ata(D.FLT_KEY, D.SCH_DATE,'A','DD') ata ,
		    (CASE WHEN 
		      (SELECT to_char(a.hover_date,'DDMONYY HH24:MI')
			  FROM imp_ramp_dolly_hd a,
			    imp_ramp_dolly_dtl b
			  WHERE b.uld_key= A.ULD_KEY
			  AND a.dolly_id =b.dolly_id
			  AND a.flt_key  =E.FLT_KEY
			  AND a.flt_date =E.SCH_DATE
			  ) IS NOT NULL THEN (SELECT to_char(a.hover_date,'DDMONYY HH24:MI')
			  FROM imp_ramp_dolly_hd a,
			    imp_ramp_dolly_dtl b
			  WHERE b.uld_key= A.ULD_KEY
			  AND a.dolly_id =b.dolly_id
			  AND a.flt_key  =E.FLT_KEY
			  AND a.flt_date =E.SCH_DATE
			  ) ELSE TO_CHAR(A.CHKIN_DATE,'DDMONYY HH24:MI') END)    AS handoverDate,
			  CASE
		    WHEN (SELECT COUNT(1)
		      FROM imp_ramp_dolly_hd hd,
		        imp_ramp_dolly_dtl dtl
		      WHERE hd.ho_no IS NOT NULL
		      AND not exists(select 1 from imp_ramp_chk_dtl chk
		      where dtl.flt_key=chk.flt_key
		      and dtl.flt_date=chk.flt_date
		      and dtl.uld_key=chk.uld_key)
		      AND hd.flt_key  =dtl.flt_key
		      AND hd.dolly_id =dtl.dolly_id
		      AND hd.flt_date =dtl.flt_date
		      AND a.flt_key   =dtl.flt_key
		      AND a.flt_date  =dtl.flt_date
		      AND a.uld_key   = dtl.ULD_KEY )>0
		    THEN 'YELLOW'
		    ELSE NULL
		  END AS uldwithoutchkin,
		    (SELECT TO_CHAR(U.FST_MHCS_ETRY_TIME,'DDMONYY HH24:MI')
			  FROM imp_ramp_chk_dtl U 
			  WHERE U.uld_key= a.ULD_KEY
			  AND u.flt_key  =E.FLT_KEY
			  AND u.flt_date =E.SCH_DATE
			  ) AS mhsDate          
		FROM   FLT_OPR D 
		JOIN FLT_OPR_EVENTS E ON D.FLT_KEY = E.FLT_KEY AND D.SCH_DATE = E.SCH_DATE AND D.FLT_TYPE = E.FLT_TYPE
		left join IMP_RAMP_CHK_HD B on B.FLT_KEY = D.FLT_KEY AND B.FLT_DATE = D.SCH_DATE
		left join IMP_RAMP_CHK_DTL A on B.TR_NO = A.TR_NO and (SURPLUS_IND = 'N' or (SURPLUS_IND = 'Y' and CHKIN_YN = 'Y'))
		WHERE  D.FLT_KEY  = upper(#flightKey#) AND
		    TO_CHAR(D.SCH_DATE,'DDMONYY') = #flightDate#
		    AND   D.FLT_TYPE = 'A' AND (NVL (a.chkin_yn, 'N') = 'Y' OR a.tr_no IS NULL) 
		    UNION ALL
SELECT null                           AS trNo,
  T.FLT_KEY                               AS flightNo ,
  null                              AS tr_No,
  NULL                             AS carrierCode ,
  NULL                           AS docLine,
  T.ULD_KEY                               AS uldKey,
  T.DAM_IND                               AS damInd,
  T.EMPTY_IND                             AS empty,
  T.EIC_IND                               AS eic,
  NULL                              AS wareHouseLoc,
  null AS chkInDate,
null                               AS remark,
NULL rampStatus,
  T.FLT_KEY                     AS flightKey,
  TO_CHAR(T.FLT_DATE,'DDMONYY') AS flightDate,
 NULL AS chkInCompDate,
  NULL                                       AS chkInCompId,
 null                                               AS uldLocCfm,
  PKG_COMMON.get_flt_ata(H.FLT_KEY, H.FLT_DATE,'A','DD') ata, 
  TO_CHAR(h.hover_date,'DDMONYY HH24:MI') AS handoverDate,
    CASE
    WHEN (SELECT COUNT(1)
      FROM imp_ramp_dolly_hd hd,
        imp_ramp_dolly_dtl dtl
      WHERE hd.ho_no IS NOT NULL
       AND not exists(select 1 from imp_ramp_chk_dtl chk
      where dtl.flt_key=chk.flt_key
      and dtl.flt_date=chk.flt_date
      and dtl.uld_key=chk.uld_key)
      AND hd.flt_key  =dtl.flt_key
      AND hd.dolly_id =dtl.dolly_id
      AND hd.flt_date =dtl.flt_date
      AND T.flt_key   =dtl.flt_key
      AND T.flt_date  =dtl.flt_date
      AND T.uld_key   = dtl.ULD_KEY )>0
    THEN 'YELLOW'
    ELSE NULL
  END AS uldwithoutchkin,
	   (SELECT TO_CHAR(U.FST_MHCS_ETRY_TIME,'DDMONYY HH24:MI')
  FROM imp_ramp_chk_dtl U 
  WHERE U.uld_key= t.ULD_KEY
  AND u.flt_key  =h.FLT_KEY
  AND u.flt_date =h.flt_DATE
  ) AS mhsDate
	FROM
  IMP_RAMP_DOLLY_HD H

	LEFT JOIN IMP_RAMP_DOLLY_DTL T
	ON T.FLT_KEY   = H.FLT_KEY
	AND T.FLT_DATE = H.FLT_DATE
	AND T.DOLLY_ID=H.DOLLY_ID 
	WHERE H.FLT_KEY                   = upper(#flightKey#)
	AND TO_CHAR(H.FLT_DATE,'DDMONYY') = #flightDate#
	AND NOT EXISTS
    (SELECT 1
    FROM IMP_RAMP_CHK_DTL
    WHERE ULD_KEY=T.ULD_KEY
    AND FLT_KEY  =T.FLT_KEY
    AND FLT_DATE =T.FLT_DATE
    ) 
  
		   	ORDER BY uldKey
	</select>
	
	<!-- added for check in uld summary starts -->
	<!--  Changed for QR -->
	<select id="imp_declramp_summary"  parameterClass="cargo.cms.imprt.bo.DeclareRampBO"  resultClass="cargo.cms.imprt.bo.DeclareRampBO">	
 	<![CDATA[
		 SELECT ((a.QTY) ||(a.ALLOT_TYPE))  uldTowedConfirm,
		        (( SELECT NVL(COUNT(1),0) FROM imp_ramp_chk_dtl a 
		        						 join uld_group_type b on b.uld_type=a.uld_type )
		        	|| (SELECT COUNT(1)  FROM uld_group_type b,mast_uld_allot_group c  WHERE b.uld_group = c.uld_group)) actualChkinULD,
		  ( (SELECT NVL(COUNT(1),0) FROM imp_ramp_inb_chk_dtl a 
		                JOIN ddt_msg m ON a.flt_key = m.flt_key and a.flt_date = m.flt_date and m.ddt_status='P' 
		  							JOIN ddt_uld b  ON b.tr_no = m.tr_no and a.uld_key = b.uld_key AND a.empty_ind   = 'N' AND a.ffm_ind ='Y'  AND b.trf_type not in ('TT','IF')  
		      WHERE a.uld_type=#uldType#)||(SELECT tab2.uld_allot FROM uld_group_type tab1,mast_uld_allot_group tab2 WHERE tab1.uld_group = tab2.uld_group AND tab1.uld_type =#uldType#)) ffmULD
		  
		   FROM IMP_CFM_ULD_TOWED_DTL a
		  WHERE a.flt_key =upper(#flightKey#) AND a.flt_date=#flightDate#	
	  ]]>
	</select>
	<!-- added for check in uld summary ends -->
		<update id="imp_declramp_complete" parameterClass="cargo.cms.imprt.bo.DeclareRampBO">
		UPDATE IMP_RAMP_CHK_HD SET 
			CHKIN_COMPLETE	   = 'Y', 
			LM_USER_ID		   = #crUserId#, 
			COMPL_USER_ID	   = #crUserId#, 
			LM_DATE			   = sysdate, 
			COMPL_DATE		   = sysdate
		WHERE FLT_KEY		   =  upper(#flightKey#)	
			  AND FLT_DATE	   =   #flightDate# 
	</update>
		<update id="imp_declramp_complete_flt_event" parameterClass="cargo.cms.imprt.bo.DeclareRampBO">
		UPDATE FLT_OPR_EVENTS SET 
		RAMP_COMPL_YN = 'Y' , 
		RAMP_COMPL_DATE =  SYSDATE , 
		RAMP_COMPL_TIME = TO_CHAR(SYSDATE,'HH24MI') , 
		RAMP_COMPL_USER_ID = #crUserId#,
		LM_USER_ID  = #crUserId#, 
		LM_DATE = sysdate,
		TR_TYPE = #trtype#
		where FLT_KEY = #flightKey# AND SCH_DATE = TO_DATE(#flightDate#,'DDMONYY') AND FLT_TYPE = 'A'
	</update>
	<update id="imp_declramp_unclose" parameterClass="cargo.cms.imprt.bo.DeclareRampBO">
		UPDATE IMP_RAMP_CHK_HD 
			SET 
			CHKIN_COMPLETE	   = 'N', 
			LM_USER_ID		   = #crUserId#, 
			LM_DATE			   = sysdate ,
			COMPL_DATE		   = null
		WHERE FLT_KEY		   =  upper(#flightKey#)	
			  AND FLT_DATE	   =   #flightDate# 
	</update>
		<update id="imp_declramp_unclose_flt_event" parameterClass="cargo.cms.imprt.bo.DeclareRampBO">
		UPDATE FLT_OPR_EVENTS SET 
		RAMP_COMPL_YN = 'N' , 
		RAMP_COMPL_DATE = null ,
		RAMP_COMPL_TIME = null , 
		RAMP_COMPL_USER_ID = null,
		LM_USER_ID  = #crUserId#, 
		LM_DATE = sysdate,
		TR_TYPE = #trtype#
		where FLT_KEY = #flightKey# AND SCH_DATE = TO_DATE(#flightDate#,'DDMONYY') AND FLT_TYPE = 'A'
	</update>
		<select id="imp_declramp_already_comp"  parameterClass="cargo.cms.imprt.bo.DeclareRampBO"  resultClass="java.lang.Integer">
		SELECT NVL(count(1),0)FROM FLT_OPR_EVENTS WHERE FLT_KEY  = upper(#flightKey#) AND 
		SCH_DATE	=  TO_DATE( #flightDate#, 'DDMONYY') AND RAMP_COMPL_YN ='Y' AND FLT_TYPE = 'A'
	</select>
	<select id="imp_declramp_unclose_validate"  parameterClass="cargo.cms.imprt.bo.DeclareRampBO"  resultClass="java.lang.Integer">
		SELECT NVL(count(1),0) FROM FLT_OPR_EVENTS WHERE RAMP_COMPL_YN = 'N' AND			
			FLT_KEY		   =  upper(#flightKey#)	AND
			SCH_DATE		   =   TO_DATE( #flightDate#, 'DDMONYY') AND FLT_TYPE = 'A'
	</select>
	<!-- END - Queries added for DDS_IMP_RAMP_DeclareRamp Complete functionlity-->
<!--Declare Document Complete Starts here  -->

	<select id="decdocumentcomplete" parameterClass="cargo.cms.imprt.bo.MaintainDirBO" resultClass="cargo.cms.imprt.bo.MaintainDirBO">
		SELECT evnt.TR_NO fltEventTrNo, 
		flt.CARR_CODE flightKey,
		flt.FLT_KEY flightNoKey, TO_CHAR(flt.SCH_DATE,'DDMONYY') flightDate,  
		flt.ACT_TIME  ata, 
   		<!-- ltrim(SUBSTR(TRIM(TO_CHAR(flt.ACT_TIME,'0000')),0,2)|| ':'|| SUBSTR(TRIM(TO_CHAR(flt.ACT_TIME,'0000')),3,4), ':') as ataTime, -->
   		PKG_COMMON.get_flt_ata(flt.FLT_KEY, flt.SCH_DATE, 'A','DD') AS ataTime ,	
		NVL(shp.ManfShp, 0) noOfManfShpm, 
		NVL(shp.CARShp, 0) noOfShpmCAR,  NVL(shp.mtnCAR, 0) mtnCAR,NVL(shp.DIRShp, 0) noOfDIRShpm, NVL(shp.mtnDIR, 0) mtnDIR,  NVL(shp.CIR_Pcs, 0) noOfCIRShpm,  
		TO_CHAR(evnt.DOC_COMPL_DATE,'DDMONYY') docComplDate,		
		evnt.DOC_COMPL_Time docComplTime,		
   		ltrim(SUBSTR(TRIM(TO_CHAR(evnt.DOC_COMPL_Time,'0000')),0,2)|| ':'|| SUBSTR(TRIM(TO_CHAR(evnt.DOC_COMPL_Time,'0000')),3,4), ':') as docComplTimeDisp,		
		evnt.DOC_COMPL_USER_ID docComplStaffID,TO_CHAR(fltrpt.LM_DATE ,'ddMONYY HH24:MI') AS fltHdlgDataGenDate, TO_CHAR(evnt.LM_DATE, 'ddMMYY HH24:MI:SS') as lmDate,
		CASE WHEN evnt.DOC_ARR_DATE  is null THEN 'N' ELSE 'Y' END AS docrecvInd
		FROM FLT_OPR flt 		 
		JOIN FLT_OPR_EVENTS evnt ON 
			evnt.FLT_KEY = flt.FLT_KEY AND 
			evnt.SCH_DATE = flt.SCH_DATE AND 
			evnt.FLT_TYPE = 'A'		
		LEFT JOIN (SELECT count(1) as CARShp, FLT_KEY, TO_CHAR(FLT_DATE,'DDMONYY') FLT_DATE, 	
			   SUM(CASE WHEN NVL(FFM_FLG, 'N') = 'Y' and MANIFEST_PCS > 0 THEN 1 ELSE 0 END) AS ManfShp, 
			   SUM(CASE WHEN NVL(CAR_CREATED, 'N') = 'Y' THEN 1 ELSE 0 END) AS mtnCAR,	
			   SUM(CASE WHEN DOC_DISC IS NOT NULL  THEN 1 ELSE 0 END) AS DIRShp,
			   SUM(CASE WHEN DIR_PROC_USER IS NOT NULL  THEN 1 ELSE 0 END) AS mtnDIR,	
			   SUM(CASE WHEN CIR_PROC_USER is not null THEN 1 ELSE 0 END) AS CIR_Pcs 
			   FROM IMP_CAR_SHP GROUP BY FLT_KEY, FLT_DATE) shp 
		 ON flt.FLT_KEY = shp.FLT_KEY AND 
			flt.SCH_DATE = shp.FLT_DATE AND
			flt.FLT_TYPE = 'A'	
		LEFT JOIN IMP_FLT_HAND_SUMMARY fltrpt ON 
			fltrpt.FLT_KEY = flt.FLT_KEY AND 
			fltrpt.FLT_DATE = flt.SCH_DATE AND 
			fltrpt.Rep_Module = 'ID' 				
		WHERE   
			flt.SCH_DATE = TO_DATE(#flightDate#, 'ddmonyy')		
			AND	flt.FLT_TYPE = 'A'
		<isNotEmpty property="flightKey">
			AND	flt.CARR_CODE = #flightKey#
		</isNotEmpty>
		<isNotEmpty property="flightNo">
			AND	flt.FLT_NO = #flightNo#
		</isNotEmpty>
		<isNotEmpty property="flightNoKey">
			AND	flt.FLT_KEY = #flightNoKey#
		</isNotEmpty>
		<isEmpty property="flightKey">
			<isNotEmpty property="loginCarrier">
				AND	(flt.CARR_CODE = #loginCarrier#
				OR flt.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP 
				WHERE GRP_CARR_CODE	= #loginCarrier#))							
			</isNotEmpty>
		</isEmpty>		
		ORDER BY flt.FLT_KEY ,flt.SCH_DATE 	, flt.ACT_TIME
	</select>
	
	<!-- Err if count > 0, 'DIR is not maintained' -->
	<!--  Changed for QR -->
<select id="imp_DecDocCompl_DIRisnotmaintained"  parameterClass="cargo.cms.imprt.bo.MaintainDirBO"  resultClass="java.lang.Integer">	
	   select count(1) from IMP_CAR_SHP s
		JOIN (select awb_No , awb_date from IMP_CAR_AWB
		where awb_dest='HKG') a
		On a.AWB_NO=s.AWB_NO and a.AWB_DATE=s.AWB_DATE
		where s.FLT_KEY = #flightNoKey# and s.FLT_DATE = #flightDate# 
    and (s.Doc_Disc = 'FDAW' OR s.Doc_Disc = 'MSAW' OR s.Doc_Disc = 'MSCN'  OR s.Doc_Disc = 'FDCN')
    and s.DIR_PROC_USER is null
</select>
	
<!-- Err if count > 0, 'CAR not created for all consignments' -->
<!--  Changed for QR -->
<select id="imp_DecDocCompl_CARnotcreatedforallconsignments"  parameterClass="cargo.cms.imprt.bo.MaintainDirBO"  resultClass="java.lang.Integer">
		select count(1)  
		from Imp_CAR_SHP shp JOIN  IMP_CAR_AWB awb
		ON awb.AWB_NO=shp.AWB_NO and awb.AWB_DATE=shp.AWB_DATE   
		where shp.CAR_Created = 'N'   and shp.Flt_Key = #flightNoKey# and shp.Flt_Date = #flightDate# And awb.Catalog not like 'T%' and (awb.awb_dest='HKG')
</select>
<select id="imp_DecDocCompl_epdephforallconsignments"  parameterClass="cargo.cms.imprt.bo.MaintainDirBO"  resultClass="java.lang.Integer">
SELECT COUNT(1)
FROM Imp_CAR_SHP shp
JOIN IMP_CAR_AWB awb
ON awb.AWB_NO    =shp.AWB_NO
AND awb.AWB_DATE =shp.AWB_DATE
WHERE 'EPH' IN (awb.spl_code1,awb.spl_code2,awb.spl_code3,awb.spl_code4,awb.spl_code5,awb.spl_code6,awb.spl_code7,awb.spl_code8,awb.spl_code9)
AND 'EPD' IN (awb.spl_code1,awb.spl_code2,awb.spl_code3,awb.spl_code4,awb.spl_code5,awb.spl_code6,awb.spl_code7,awb.spl_code8,awb.spl_code9)
AND shp.Flt_Key  = #flightNoKey#
AND shp.Flt_Date = #flightDate#
</select>	
<update id="updateddcnull" parameterClass="cargo.cms.imprt.bo.MaintainDirBO">
		UPDATE FLT_OPR_EVENTS SET 
		DOC_COMPL_DATE = null , 
		DOC_COMPL_TIME = null , 
		DOC_COMPL_USER_ID = null,
		DOC_COMPL_YN='N',
		LM_USER_ID  = #lmUserId#, 
		LM_DATE = sysdate,
		TR_TYPE='DDOCU'
		where TR_NO = #fltEventTrNo# and TO_CHAR(LM_DATE, 'ddMMYY HH24:MI:SS')=#lmDate#
</update>

<update id="updateddc" parameterClass="cargo.cms.imprt.bo.MaintainDirBO">
		UPDATE FLT_OPR_EVENTS SET 
		DOC_COMPL_DATE = SYSDATE , 
		DOC_COMPL_TIME = TO_CHAR(SYSDATE,'HH24MI') , 
		DOC_COMPL_YN='Y',
		DOC_COMPL_USER_ID = #lmUserId# ,
		LM_USER_ID  = #lmUserId#, 
		LM_DATE = sysdate,
		TR_TYPE='DDOCC'
		where TR_NO = #fltEventTrNo# and TO_CHAR(LM_DATE, 'ddMMYY HH24:MI:SS')=#lmDate#
</update>
	
<select id="checkcartranshipment" parameterClass="cargo.cms.imprt.bo.MaintainDirBO" resultClass="cargo.cms.imprt.bo.MaintainDirBO">
	select a.awb_No awbNo,to_char(a.awb_date,'DDMONYY') awbDate,#flightNoKey# as flightNoKey,#flightDate# as flightDate from IMP_CAR_SHP s
		JOIN (select awb_No , awb_date from IMP_CAR_AWB
		where awb_origin!='HKG' and awb_dest!='HKG') a
		On a.AWB_NO=s.AWB_NO and a.AWB_DATE=s.AWB_DATE
		where s.FLT_KEY = #flightNoKey# and s.FLT_DATE = #flightDate# 
</select>

<!--  Changed for QR 
<update id="updatecartranshipmentawb" parameterClass="cargo.cms.imprt.bo.MaintainDirBO">
	update AWB a set a.CAR_YN='Y' 
     where (select count(1) from IMP_CAR_SHP s
		 where a.AWB_NO=s.AWB_NO and a.AWB_DATE=s.AWB_DATE and s.FLT_KEY =#flightNoKey# and s.FLT_DATE = #flightDate#)>0
</update> -->

<update id="updatecartranshipment" parameterClass="cargo.cms.imprt.bo.MaintainDirBO">
	 UPDATE Imp_CAR_SHP SET 
     CAR_Created='Y' 
     where  FLT_KEY = #flightNoKey# and FLT_DATE = #flightDate#  and AWB_NO = #awbNo# and to_char(AWB_DATE,'DDMONYY') = #awbDate#
</update>

<select id="gmtsysdate" parameterClass="map" resultClass="java.lang.String">
		SELECT TO_CHAR(SYSDATE  - 1/3,'DDHH24MI') FROM DUAL
</select>
	
<select id="getBasePortForSendFad" parameterClass="map" resultClass="java.lang.String">
		SELECT BASE_PORT FROM SYS_PARAM
	</select>	

<select id="getSitaAddress" parameterClass="cargo.cms.imprt.bo.TrackingBO" resultClass="cargo.cms.imprt.bo.SitaAddressBO">			
	<![CDATA[
	SELECT DISTINCT D.SITA_ADDR sitaAddress
	FROM CUST_AIRL_SITA_CIMP_MSG M
	JOIN CUST_AIRL_SITA_CIMP_DTL D ON M.TR_NO = D.TR_NO
	WHERE CARR_CODE = #carrCode# AND MSG_TYPE = #status#
	AND (FLT_KEY = nvl(#fltKey#, 'ZZZ99999') or FLT_KEY = 'ZZZ99999')
	]]>
</select>

<select id="getOriginAddress" resultClass="java.lang.String" parameterClass="java.lang.String">			
	SELECT RULE_VALUE FROM CMSRULES where RULE_CODE = 'SITA_ORI_ADD'
</select>


<select id="aatcarrhand"  parameterClass="java.lang.String" resultClass="java.lang.Integer">
		SELECT count(1) FROM MAST_CARRIER WHERE CODE = #PARAM# AND OWNED_CARR = 'Y'
</select>

<select id="carrierCheck"  parameterClass="java.lang.String" resultClass="java.lang.Integer">
		SELECT count(1) FROM MAST_CARRIER WHERE CODE = #PARAM#
</select>

<select id="fltNoCheck"  parameterClass="map" resultClass="java.lang.Integer">
		SELECT count(1) FROM FLT_OPR WHERE CARR_CODE = #fltcarrier# and  FLT_NO=#fltno#
</select>

<!--  Changed for QR -->
<select id="fltStatus"  parameterClass="map" resultClass="java.lang.Integer">
	SELECT COUNT(1)	
	FROM FLT_OPR_EVENTS  
	WHERE FLT_KEY = #fltNoKey# AND FLT_CLS_YN = 'Y' AND FLT_TYPE = 'A' AND sch_date between #FromDate# AND #ToDate# 
</select>


	<select id="validate_uld_notin_aatinventory" parameterClass="map" resultClass="java.lang.String" >
	 <![CDATA[
		SELECT nvl(count(1),0) FROM ULD_INVENTORY WHERE ULD_KEY = #uldKey# AND CFM_STATUS != 'UNCONFIRMED' AND length(ULD_KEY) >= 9
	]]>
	</select>
	
<!--Declare Document Complete Ends here  -->	
<!-- Maintain CAR Queries Start -->
<select id="checkImpCARAWBExists" parameterClass="cargo.cms.imprt.bo.MaintainCARBO" resultClass="java.lang.Integer">
	SELECT COUNT(1) FROM IMP_CAR_AWB WHERE AWB_NO=#awbNo# AND AWB_DATE=TO_DATE(#awbDate#,'DDMONYY')
</select>
<select id="imp_car_getFwbCnsgn"  parameterClass="cargo.cms.imprt.bo.MaintainCARBO"  resultClass="java.lang.String">
	select csgne_name fwbCnsgnName from edi_fwb WHERE awb_no = #awbNo#
        AND awb_date = TO_DATE(#awbDate#,'DDMONYY') and rownum=1
</select>

	<select id="check_RUN_CODE_VALUE"  parameterClass="map" resultClass="java.lang.String">	
		SELECT RULE_VALUE FROM CMSRULES WHERE RULE_CODE like #RULE_CODE# and RULE_VALUE = #RULE_VALUE# and rownum = 1
	</select>

<!--  Changed for QR -->
<select id="imp_car_getmnfstdtls"  parameterClass="cargo.cms.imprt.bo.MaintainCARBO"  resultClass="cargo.cms.imprt.bo.MaintainCARBO">
		select sum(manifest_pcs) manifestPcs,sum(manifest_wt) manifestWt 
		from imp_car_shp
        where awb_no = #awbNo# AND awb_date = TO_DATE(#awbDate#,'DDMONYY') 
        AND not (flt_key = #fltKey# AND flt_date = TO_DATE(#fltDate#,'DDMONYY'))
        AND CAR_CREATED = 'Y'
    </select>
<select id="checkAwbInvPCS"  parameterClass="cargo.cms.imprt.bo.MaintainCARBO"  resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM awb_inventory
        WHERE flt_key = #fltKey#
        AND flt_date = TO_DATE(#fltDate#,'DDMONYY')
        AND awb_no = #awbNo#
        AND awb_date = TO_DATE(#awbDate#,'DDMONYY')
        AND locn_wt = 0
	</select>
	
	<select id="getAwbInvPCS"  parameterClass="cargo.cms.imprt.bo.MaintainCARBO"  resultClass="cargo.cms.imprt.bo.MaintainCARBO">
		SELECT seq_no seqNo, locn_pcs locnPcs, locn_wt locnWt  FROM awb_inventory
               WHERE flt_key = #fltKey#
		        AND flt_date = TO_DATE(#fltDate#,'DDMONYY')
		        AND awb_no = #awbNo#
		        AND awb_date = TO_DATE(#awbDate#,'DDMONYY') AND locn_wt = 0
    </select>
	<select id="imp_car_getSumRecvPcWt" parameterClass="cargo.cms.imprt.bo.MaintainCARBO"  resultClass="cargo.cms.imprt.bo.MaintainCARBO">
		<![CDATA[
			SELECT SUM(LOCN_PCS) recdPcs, SUM(LOCN_WT) recdWt FROM AWB_INVENTORY
			WHERE FLT_KEY = #fltKey# AND FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') 
			AND AWB_NO = #awbNo# AND AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')  AND locn_wt != 0
		]]>
	</select>
	<select id="imp_car_getSumRecvPcWt_TS" parameterClass="cargo.cms.imprt.bo.MaintainCARBO"  resultClass="cargo.cms.imprt.bo.MaintainCARBO">
		<![CDATA[
			SELECT SUM(LOCN_PCS) recdPcs, SUM(LOCN_WT) recdWt FROM AWB_INVENTORY
			WHERE AWB_NO = #awbNo# AND AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')  AND locn_wt != 0
		]]>
	</select>
	 <update id="updateAWBPcsWt" parameterClass="cargo.cms.imprt.bo.MaintainCARBO">
		UPDATE awb_inventory SET locn_wt = round(nvl(#locnWt#,0),2) WHERE seq_no = #seqNo#
	</update>
<parameterMap id="FSUAwdMap" class="map" >	
	<parameter property="AWBNO" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	<parameter property="AWBDATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	<parameter property="MSG" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
</parameterMap>

<procedure id="callPkgFsuAwd" parameterMap="FSUAwdMap" >
	{call PKG_FSU.FSU_AWD(?,?,?)}
</procedure>
<parameterMap id="FSUAwrMap" class="map" >	
	<parameter property="AWBNO" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	<parameter property="AWBDATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	<parameter property="FLTKEY" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	<parameter property="FLTDATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	<parameter property="MSG" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
</parameterMap>

<procedure id="callPkgFsuAwr" parameterMap="FSUAwrMap" >
	{call PKG_FSU.FSU_AWR(?,?,?,?,?)}
</procedure>

<select id="imp_flt_finalize_validate"  parameterClass="map"  resultClass="java.lang.Integer">
		SELECT NVL(count(1),0) FROM flt_opr_events FLT,IMP_CAR_SHP SHP WHERE 
		 FLT.FLT_KEY = #fltKey#  
		AND FLT.SCH_DATE= TO_DATE( #fltDate#, 'DDMONYY') AND FLT.FLT_TYPE='A'
		AND FLT.ffm_final_date is not null
		AND FLT.FLT_KEY = SHP.FLT_KEY
		AND FLT.SCH_DATE = SHP.FLT_DATE
		AND SHP.AWB_NO=#awbNo#
	</select>


<select id="getMappingcustMaster"  parameterClass="java.lang.String"  resultClass="java.lang.String">
		SELECT code FROM cust_company WHERE CODE_DESC = #consgName#
</select>

<select id="getMatchAliasMappingCompany"  parameterClass="java.lang.String"  resultClass="java.lang.String">
		SELECT code_desc FROM cust_company WHERE code IN (
		      SELECT cust_no FROM CUST_AGENT_ALIAS WHERE ALIAS_NAME = #consgName#
		      AND EXISTS (SELECT code FROM cust_company WHERE code=cust_no AND cons_yn='Y')
		) AND rownum = 1
</select>
	
<select id="get_car_list" parameterClass="cargo.cms.imprt.bo.MaintainCARBO" resultClass="cargo.cms.imprt.bo.MaintainCARBO" >	
		  SELECT 
			A.AWB_NO AS awbNo, 
			SUBSTR(A.AWB_NO,1,3)||'-'||SUBSTR(A.AWB_NO,4) as awbNoDisp ,
			TO_CHAR(A.AWB_DATE,'DDMONYY')  AS awbDate, 
			A.AWB_PRFX AS awbPrefix , 
			A.CARR_CODE AS carrCode, 
			TO_CHAR(A.FLT_DATE,'DDMONYY') AS fltDate, 
			A.FLT_KEY AS fltKey, 
			B.AWB_PCS AS awbPieces, 
			B.AWB_WT AS awbWeight,
			A.MANIFEST_PCS AS manifestPcs, 
			A.MANIFEST_WT AS manifestWt, 
			A.CAR_CREATED AS carCreated, 
			B.AWB_ORIGIN AS awbOrigin, 
			B.AWB_DEST AS awbDestination, 
			B.CONTENT AS content,  
			B.CHRG_MODE AS chargeMode, 
			<!-- ELIGIBILITY_STATUS AS eligibilityStatus, -->
			B.PRINT_EAWB_IND AS printEawbSrf , 
			(SELECT DECODE(COUNT(1),0,'Y','N') FROM MAST_CARRIER carrier where nvl(allow_esrf,'N') = 'Y' and carrier.code = AWB.carr_code) as disableEAWB,
			(SELECT DECODE(COUNT(1),0,'N','Y')  FROM  cust_company where code_desc = B.APPNTD_AGENT and nvl(allow_esrf_aa,'N') = 'Y') as esrfAgentYN,
			B.SPL_CODE1 AS splCode1, B.SPL_CODE2 AS splCode2, B.SPL_CODE3 AS splCode3, 
			B.SPL_CODE4 AS splCode4, B.SPL_CODE5 AS splCode5, B.SPL_CODE6 AS splCode6,
			B.SPL_CODE7 AS splCode7, B.SPL_CODE8 AS splCode8,B.SPL_CODE9 AS splCode9,
			A.NOA_IND AS noaInd,AGENT_CUST_NO AS agentId,
			B.APPNTD_AGENT as agentName,
			B.CATALOG catalog,
			AWB.AWB_TYPE as awbType,
			FWB.csgne_name as fwbConsignee,
			DECODE(FWB.AWB_NO,'','N',NULL,'N','Y') as fwbreceived,
			B.csgne_name consgName,
			(SELECT FUN_GET_ESRF_STATUS(A.AWB_NO,A.AWB_DATE) as eligibilityStatus from DUAL)as eligibilityStatus 
		FROM   IMP_CAR_SHP A
           JOIN IMP_CAR_AWB B ON B.AWB_NO = A.AWB_NO AND B.AWB_DATE = A.AWB_DATE
           JOIN AWB AWB ON AWB.AWB_NO = A.AWB_NO AND AWB.AWB_DATE = A.AWB_DATE
           LEFT JOIN (SELECT MAX(to_number(TR_NO)) TR_NO,AWB_NO,AWB_DATE FROM edi_fwb G GROUP by AWB_NO,AWB_DATE) EDIFWB ON EDIFWB.AWB_NO = A.AWB_NO AND EDIFWB.AWB_DATE = A.AWB_DATE
           LEFT JOIN EDI_FWB FWB ON FWB.TR_NO = EDIFWB.TR_NO
		WHERE A.FLT_KEY  = #fltKey#   AND
			A.FLT_DATE  = TO_DATE(#fltDate#,'DDMONYY') 
			<isNotEmpty property="eligibilityStatus" prepend="AND">
             	(SELECT FUN_GET_ESRF_STATUS(A.AWB_NO,A.AWB_DATE) as eligibilityStatus from DUAL) = #eligibilityStatus#
           </isNotEmpty>
           <isEqual property="esrfAgentYN" compareValue="Y" prepend="AND">
             	(SELECT DECODE(COUNT(1),0,'N','Y')  FROM  cust_company where code_desc = B.APPNTD_AGENT and nvl(allow_esrf_aa,'N') = 'Y') = #esrfAgentYN#
           </isEqual>
		<dynamic prepend="ORDER BY ">
           <isNotEmpty property="sortOrder.sortField">
             $sortOrder.sortField$
           </isNotEmpty>
           <isEmpty property="sortOrder.sortField">
             A.AWB_NO ASC
           </isEmpty>
        </dynamic>
	</select>
	
	<select id="get_car_listCOUNT" parameterClass="cargo.cms.imprt.bo.MaintainCARBO" resultClass="java.lang.Integer" >	
		  SELECT COUNT(1) as totalRowCount
		FROM   IMP_CAR_SHP A
           JOIN IMP_CAR_AWB B ON B.AWB_NO = A.AWB_NO AND B.AWB_DATE = A.AWB_DATE
           JOIN AWB AWB ON AWB.AWB_NO = A.AWB_NO AND AWB.AWB_DATE = A.AWB_DATE
           LEFT JOIN (SELECT MAX(to_number(TR_NO)) TR_NO,AWB_NO,AWB_DATE FROM edi_fwb G GROUP by AWB_NO,AWB_DATE) EDIFWB ON EDIFWB.AWB_NO = A.AWB_NO AND EDIFWB.AWB_DATE = A.AWB_DATE
           LEFT JOIN EDI_FWB FWB ON FWB.TR_NO = EDIFWB.TR_NO
		WHERE A.FLT_KEY  = #fltKey#   AND
			A.FLT_DATE  = TO_DATE(#fltDate#,'DDMONYY')
	</select>
	<select id="validate_awb_onload" parameterClass="cargo.cms.imprt.bo.MaintainCARBO" 			resultClass="java.lang.String">
		SELECT NVL(count(1),0) FROM  IMP_CAR_SHP A, IMP_CAR_AWB B 
		WHERE	B.CATALOG = 'IO' AND A.AWB_NO    = B.AWB_NO AND 
				A.AWB_DATE  = B.AWB_DATE AND A.FLT_KEY   = #fltKey#   AND 
				A.FLT_DATE  = TO_DATE(#fltDate#,'DDMONYY') AND B.AWB_NO = #awbNo# 
	</select>
	<parameterMap id="dateMapCreate" class="map" >
	<parameter property="AWBDATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
	<parameter property="AWBNO" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>	
	<parameter property="FLTKEY" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	<parameter property="FLTDATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	<parameter property="REUSEYN" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
    </parameterMap>
	<procedure id="imp_car_getAwbDatePkgCreate" parameterMap="dateMapCreate" >
		{? = call PKG_IMP.FUN_GET_AWBDATE_CREATE(?,?,?,?)}
	</procedure>	
	<select id="get_car_detail" parameterClass="cargo.cms.imprt.bo.MaintainCARBO" resultClass="cargo.cms.imprt.bo.MaintainCARBO">
	  SELECT
		A.AWB_NO AS awbNo, 
		TO_CHAR(A.AWB_DATE,'DDMONYY') AS awbDate,
		A.AWB_PRFX AS awbPrefix, 
		SUBSTR(A.AWB_NO,4)  awbSuffix , 
		A.AWB_ORIGIN AS awbOrigin,
		A.AWB_DEST AS awbDestination, 
		Decode(A.AWB_PCS,'0','',A.AWB_PCS) AS awbPieces, 
		Decode(A.AWB_WT,'0','',A.AWB_WT) AS awbWeight,
		A.CATALOG AS catalog,
		(SELECT 
			  (CASE WHEN decode(b.catalog,'EG','C','ES','C','IG','C','TG','C','TA','C','EU','M','TM','M','EO','Q','IO','Q','C') = 'C' THEN 
			  (CASE WHEN (SELECT COUNT(1) FROM CUST_AIRL_SPL_CODE SPLCODE WHERE SPLCODE.SPL_TYPE='SPL_COURIER_SHC' AND SPLCODE.CARR_CODE = B.CARR_CODE AND (SPLCODE.SPL_CODE = b.SPL_CODE1 OR SPLCODE.SPL_CODE = b.SPL_CODE2 OR SPLCODE.SPL_CODE = b.SPL_CODE3 OR SPLCODE.SPL_CODE = b.SPL_CODE4 OR SPLCODE.SPL_CODE = b.SPL_CODE5 OR SPLCODE.SPL_CODE = b.SPL_CODE6 OR SPLCODE.SPL_CODE = b.SPL_CODE7 OR SPLCODE.SPL_CODE = b.SPL_CODE8 OR SPLCODE.SPL_CODE = b.SPL_CODE9)) > 0
			   THEN 'Q' ELSE decode(b.catalog,'EG','C','ES','C','IG','C','TG','C','TA','C','EU','M','TM','M','EO','Q','IO','Q','C') END)
			            ELSE decode(b.catalog,'EG','C','ES','C','IG','C','TG','C','TA','C','EU','M','TM','M','EO','Q','IO','Q','C') END) as cargoType	  
			FROM AWB B WHERE B.AWB_NO=A.AWB_NO AND B.AWB_DATE=A.AWB_DATE) as cargoType,		
		A.CATALOG AS oldCatalog,
		A.CONTENT AS content,
		A.TARMAC_YN AS tarmacInd, 
		A.INTERFACE_YN AS interfaceInd, 
		A.SPL_CODE1 AS splCode1, A.SPL_CODE2 AS splCode2, A.SPL_CODE3 AS splCode3, 
		A.SPL_CODE4 AS splCode4, A.SPL_CODE5 AS splCode5, A.SPL_CODE6 AS splCode6,
		A.SPL_CODE7 AS splCode7, A.SPL_CODE8 AS splCode8,A.SPL_CODE9 AS splCode9,
		A.CNS_CUST_NO AS consigneeCode, 
		A.CSGNE_NAME AS consigneeName,
		A.CSGNE_NAME AS dummyConsigneeName,
		A.APPNTD_AGENT AS appointedAgent,
		AGENT_CUST_NO AS appointedAgentCode,
		Decode(nvl(A.ECT_HANDLER,''),'N','CPCT',A.ECT_HANDLER) AS ectHandler , 
		nvl(ca.HDLG_AGENT, 'CPCT') AS accsHandler, 
		m.CODE_DESC AS relInd, 
		A.BANK_ENDOS AS bankEndos, 
		A.BANK_TYPE AS bankType, 
		(select CC_CODE from V_CST_IMP_CC_CODE_AWB V where V.AWB_NO = b.AWB_NO AND V.FLT_KEY = b.FLT_KEY AND V.FLT_DATE = b.FLT_DATE 
		   AND NVL(V.HAWB_NO, '000000000000000000') = '000000000000000000' and rownum = 1) AS ccCode,   
	    DECODE((select RMK from awb_rmk where awb_no=#awbNo# AND RMK_TYPE='AWB_RMK' and rownum =1),null,
		a.AIRLN_RMK, (select RMK from awb_rmk where awb_no=#awbNo# AND RMK_TYPE='AWB_RMK' and rownum =1)) awbRemark,
		DECODE((select RMK from awb_rmk where awb_no=#awbNo# AND RMK_TYPE='AWB_RMK' and rownum =1),null,
		a.AIRLN_RMK, (select RMK from awb_rmk where awb_no=#awbNo# AND RMK_TYPE='AWB_RMK' and rownum =1)) oldAwbRemark, 
		NVL(A.CURR_CODE,A.DECLN_CURR_CODE) AS currencyCode, 
		A.CC_FEE AS ccFee, 
		A.DISB_FEE AS disburse, 
		A.DOC_CHRG AS docCharge,
		A.TTL_CC AS totalCC , 
		A.CC_PP_TOTAL_CHRG AS totalPrepaid, 
		A.CC_CC_TOTAL_CHRG AS totalCollect,
		A.TML_CHRG AS tcFee,         
		A.CHRG_MODE AS chargeMode, 
		A.EXCH_RATE AS exchangeRate, 
		A.FORGN_UNIT AS foreignUnit,  
		A.PPK_TYPE AS ppkTypeAwb,
		A.PPK_TYPE AS oldppkTypeAwb,
		A.BULK_PCS AS bulkPcsAwb, 
		A.BULK_WT AS bulkWtAwb, 
		A.BUP_PCS AS bupPcsAwb, 
		A.BUP_WT AS bupWtAwb,	
		B.PPK_TYPE AS ppkType,
		B.PPK_TYPE AS oldppkType,
		A.FREIGHT AS freightageFor,
		A.FREIGHT_LOCL AS freightageHKG,
		B.CARR_CODE AS carrCode,	
		SUBSTR(TRIM(B.FLT_KEY),LENGTH(B.CARR_CODE)+1,LENGTH(B.FLT_KEY)) AS flightNo,
		B.FLT_KEY AS  fltKey,
		TO_CHAR(B.FLT_DATE,'DDMONYY') AS fltDate,
		B.MANIFEST_PCS AS manifestPcs, 
		B.MANIFEST_WT AS manifestWt, 
		B.BULK_PCS AS bulkPcs, 
		B.BULK_WT AS bulkWt, 
		B.BUP_PCS AS bupPcs, 
		B.BUP_WT AS bupWt,
		B.BULK_PCS AS oldBulkPcs, 
		B.BULK_WT AS oldBulkWt, 
		B.BUP_PCS AS oldBupPcs, 
		B.BUP_WT AS oldBupWt,
		NVL(B.FFM_FLG,'N') AS ffmFlag, 
		B.CNTG_FLT_CARR AS conFltCarr,  
		B.CNTG_FLT_NO AS conFltNo, 
		TO_CHAR(B.CNTG_FLT_DATE,'DDMONYY') AS conFltDate, 
		B.CNTG_FLT_TIME AS conFltTime, 
		B.CNTG_FLT_DEST AS conFltDest,
		B.LDG_POINT AS ldgPt,
		B.DIR_RMK AS dirRemark,
		B.DIR_RMK AS oldDirRemark,
		B.DOC_DISC AS docDisc,
		B.DOC_DISC AS docDiscOld,
		B.CAR_CREATED AS carCreated,
		B.RECD_PCS As recdPcs, 
		B.RECD_WT recdWt,
		PKG_COMMON.get_flt_ata(B.FLT_KEY, B.FLT_DATE, 'A') AS ata,
	    A.CSGNE_ADDR1 as consAddrOne,
	    A.CSGNE_ADDR2 as consAddrTwo,
	    A.CSGNE_ADDR3 as consAddrThree,
	    A.CSGNE_ADDR4 as consAddrFour,
	    A.CSGNE_ADDR5 as consAddrFive,
	    A.CSGNE_PIN_CODE as consPin,
	    decode(A.SAVE_YN,'N',(decode(A.CSGNE_PLACE,'','Hong Kong',A.CSGNE_PLACE)),A.CSGNE_PLACE) as consCity,
	    decode(A.SAVE_YN,'N',(decode(A.CSGNE_CTRY_CODE,'','HK',A.CSGNE_CTRY_CODE)),A.CSGNE_CTRY_CODE) as consCountry,
	    A.SHPR_ADD1 as  shprAddrOne,
	    A.SHPR_ADD2 as  shprAddrTwo,
	    A.SHPR_ADD3 as  shprAddrThree,
	    A.SHPR_ADD4 as  shprAddrFour,
	    A.SHPR_ADD5 as  shprAddrFive,
	    decode(A.SAVE_YN,'N',(decode(A.SHPR_CTRY_CODE,'','HK',A.SHPR_CTRY_CODE)),A.SHPR_CTRY_CODE) as shprCountry,
	    A.SHPR_PIN_CODE as shprPin,
	    decode(A.SAVE_YN,'N',(decode(A.SHPR_PLACE,'','Hong Kong',A.SHPR_PLACE)),A.SHPR_PLACE) as shprCity,
	    A.SHPR_NAME as shprName,
	    A.EMAIL1 as  contactEmail1,
		A.EMAIL2 as  contactEmail2,
		A.EMAIL3 as  contactEmail3,
		A.EMAIL4 as  contactEmail4,
		A.EMAIL5 as  contactEmail5,
		A.FAX1 as  contactFax1,
		A.FAX2 as  contactFax2,
		A.FAX3 as  contactFax3,
		A.MOBILE1 as  contactMobileNo1,
		A.MOBILE2 as  contactMobileNo2,
		A.MOBILE3 as  contactMobileNo3,
		A.VAL_FOR_SCH_COLL as oldSchlCollection,
		A.ALLOW_PACCO as allowPACCO,
		B.MINI_SHP as miniShipment,
		A.DOC_CHK_REQ as docCheckReqd,
		A.DOC_CHK_COMP as docCheck,
		A.BYPASS_REL as byPassRelInd,
		A.HOUSE_FLG as oldHouseFlg,
		awb.IMPCAR_YN as intelliCheckInd ,
		A.CONSOLE_IND as consolInd,
		A.WH_RMK as whRemarks,
		A.HANDL_SERVICE_YN as oldHandledByAgtSrvInd,
		A.REL_IND as relInd,
		(select 'Y' from cust_undertaking where carr_code=B.CARR_CODE and agent_code=AGENT_CUST_NO and 
		TO_CHAR(A.AWB_DATE,'DDMONYY') BETWEEN eff_from and eff_to) as licenseUT,
		A.lock_ind as locked,
		A.lock_ind as oldLocked,
		decode((select COUNT(1) from CUST_AIRL_SPL_CODE where spl_type='SPL_VAL' and spl_code=A.SPL_CODE1),0,'N','Y') as shcVal1, 
		decode((select COUNT(1) from CUST_AIRL_SPL_CODE where spl_type='SPL_VAL' and spl_code=A.SPL_CODE2),0,'N','Y') as shcVal2, 
		decode((select COUNT(1) from CUST_AIRL_SPL_CODE where spl_type='SPL_VAL' and spl_code=A.SPL_CODE3),0,'N','Y') as shcVal3, 
		decode((select COUNT(1) from CUST_AIRL_SPL_CODE where spl_type='SPL_VAL' and spl_code=A.SPL_CODE4),0,'N','Y') as shcVal4, 
		decode((select COUNT(1) from CUST_AIRL_SPL_CODE where spl_type='SPL_VAL' and spl_code=A.SPL_CODE5),0,'N','Y') as shcVal5, 
		decode((select COUNT(1) from CUST_AIRL_SPL_CODE where spl_type='SPL_VAL' and spl_code=A.SPL_CODE6),0,'N','Y') as shcVal6, 
		decode((select COUNT(1) from CUST_AIRL_SPL_CODE where spl_type='SPL_VAL' and spl_code=A.SPL_CODE7),0,'N','Y') as shcVal7, 
		decode((select COUNT(1) from CUST_AIRL_SPL_CODE where spl_type='SPL_VAL' and spl_code=A.SPL_CODE8),0,'N','Y') as shcVal8, 
		decode((select COUNT(1) from CUST_AIRL_SPL_CODE where spl_type='SPL_VAL' and spl_code=A.SPL_CODE9),0,'N','Y') as shcVal9,
		A.SAVE_YN saveYN,
		A.DOC_DLV docDiv,
		A.BYPASS_REL byPassReleaseIndYN,
		A.DOC_DLV docDlvYN,  
		A.VAL_FOR_SCH_COLL valForScheduleColYN,
		A.DOC_CHK_REQ as documentChkReqdYN,
		A.DOC_CHK_COMP as documentChkComplYN,
		A.HOUSE_FLG as houseFLgYN,  
		A.HANDL_SERVICE_YN as hadldByAgtSrvsYN,
		null ppAmt1,
	    null ppAmt2,
	    null ppAmt3,
	    null ppAmt4,
	    null ppAmt5,
	    null ccAmt1,
	    null ccAmt2,
	    null ccAmt3,
	    null ccAmt4,
	    null ccAmt5,
	    nvl(A.SHPR_STATE_PROVINCE,(select Shpr_State_Province FROM v_edi_fwb EDI WHERE EDI.AWB_NO = #awbNo# AND  EDI.AWB_DATE = TO_DATE(#awbDate#,'DDMONYY'))) shpState,
	    nvl(A.CSGNE_STATE_PROVINCE,(select CSGNE_STATE_PROVINCE FROM v_edi_fwb EDI WHERE EDI.AWB_NO = #awbNo# AND  EDI.AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')))  cnsgnState,
	    awb.BLDUP_BULK_PCS bldUpBlkPcs,
	    awb.BLDUP_BULK_WT bldUpBlkWt,
	    A.GEN_STRG_CHRG_YN generalStorageCharge,
	    (SELECT FUN_GET_ESRF_STATUS(a.AWB_NO,a.AWB_DATE) from DUAL) as pEligibilityStatus,
	    eligibility_status as oldEligibilityStatus,
	    eligibility_check as eligibilityCheck   		
	  FROM IMP_CAR_AWB A
	  left join IMP_CAR_SHP b on A.AWB_NO = B.AWB_NO AND A.AWB_DATE = B.AWB_DATE 
		   and B.FLT_KEY   = #fltKey# and B.FLT_DATE  = TO_DATE(#fltDate#,'DDMONYY')
	  left join FLT_OPR flt_opr on B.FLT_KEY = flt_opr.flt_key and B.FLT_date = flt_opr.sch_date AND flt_opr.FLT_TYPE = 'A'
	  LEFT JOIN CST_AWB CA ON b.AWB_NO = CA.AWB_NO AND b.FLT_KEY = CA.FLT_KEY AND b.FLT_DATE = CA.FLT_DATE
	  left join Mast_Code_Dtl m on m.CODE = ca.REL_IND and CODE_TYPE = 'ACCS_REL_IND'
	  left join AWB awb on A.AWB_NO = awb.AWB_NO AND A.AWB_DATE = awb.AWB_DATE 
	  where  A.AWB_NO = #awbNo# AND
	  A.AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
	  UNION 
     SELECT
		EDI.AWB_NO AS awbNo, 
		TO_CHAR(EDI.AWB_DATE,'DDMONYY') AS awbDate,
		'' awbPrefix, 
		''  awbSuffix , 
		EDI.ORG AS awbOrigin,
		EDI.DES AS awbDestination, 
		Decode(EDI.PCS,'0','',EDI.PCS) AS awbPieces, 
		Decode(EDI.WGT,'0','',EDI.WGT) AS awbWeight,
		(SELECT CATALOG FROM AWB WHERE AWB_NO = EDI.AWB_NO AND AWB_DATE = EDI.AWB_DATE AND ROWNUM = 1) catalog,
		(SELECT 
			  (CASE WHEN decode(b.catalog,'EG','C','ES','C','IG','C','TG','C','TA','C','EU','M','TM','M','EO','Q','IO','Q','C') = 'C' THEN 
			  (CASE WHEN (SELECT COUNT(1) FROM CUST_AIRL_SPL_CODE SPLCODE WHERE SPLCODE.SPL_TYPE='SPL_COURIER_SHC' AND SPLCODE.CARR_CODE = B.CARR_CODE AND (SPLCODE.SPL_CODE = b.SPL_CODE1 OR SPLCODE.SPL_CODE = b.SPL_CODE2 OR SPLCODE.SPL_CODE = b.SPL_CODE3 OR SPLCODE.SPL_CODE = b.SPL_CODE4 OR SPLCODE.SPL_CODE = b.SPL_CODE5 OR SPLCODE.SPL_CODE = b.SPL_CODE6 OR SPLCODE.SPL_CODE = b.SPL_CODE7 OR SPLCODE.SPL_CODE = b.SPL_CODE8 OR SPLCODE.SPL_CODE = b.SPL_CODE9)) > 0
			   THEN 'Q' ELSE decode(b.catalog,'EG','C','ES','C','IG','C','TG','C','TA','C','EU','M','TM','M','EO','Q','IO','Q','C') END)
			            ELSE decode(b.catalog,'EG','C','ES','C','IG','C','TG','C','TA','C','EU','M','TM','M','EO','Q','IO','Q','C') END) as cargoType	  
			FROM AWB B WHERE B.AWB_NO=EDI.AWB_NO AND B.AWB_DATE=EDI.AWB_DATE) as cargoType,			
		'' oldCatalog,
		(select RATE_GOODS_NATR from EDI_FWB_CHR_RATE where tr_no=EDI.TR_NO AND RATE_GOODS_DATA_I='C' AND ROWNUM=1) content,
		'' tarmacInd, 
		'' interfaceInd, 
		EDI.SPH_SPL_CODE1 AS splCode1, EDI.SPH_SPL_CODE2 AS splCode2, EDI.SPH_SPL_CODE3 AS splCode3, 
		EDI.SPH_SPL_CODE4 AS splCode4, EDI.SPH_SPL_CODE5 AS splCode5, EDI.SPH_SPL_CODE6 AS splCode6,
		EDI.SPH_SPL_CODE7 AS splCode7, EDI.SPH_SPL_CODE8 AS splCode8,EDI.SPH_SPL_CODE9 AS splCode9,
		'' consigneeCode, 
		EDI.CSGNE_NAME AS consigneeName,
		EDI.CSGNE_NAME AS dummyConsigneeName,
		( FUN_GET_APPT_AGENT(EDI.CSGNE_NAME,EDI.AWB_NO,EDI.AWB_DATE) ) AS appointedAgent,
		'' AS appointedAgentCode,
		'' AS ectHandler , 
		'' AS accsHandler, 
		'' AS relInd, 
		'' AS bankEndos, 
		'' AS bankType, 
		'' AS ccCode,   
	   DECODE((select AIRLN_RMK from awb where awb_no=#awbNo# and awb_date = to_date(#awbDate#,'DDMONYY')),null,
		(select RMK from awb_rmk where awb_no=#awbNo# AND RMK_TYPE='AWB_RMK' and rownum =1), (select AIRLN_RMK from awb where awb_no=#awbNo# and awb_date = to_date(#awbDate#,'DDMONYY'))) awbRemark,
		DECODE((select AIRLN_RMK from awb where awb_no=#awbNo# and awb_date = to_date(#awbDate#,'DDMONYY')),null,
		(select RMK from awb_rmk where awb_no=#awbNo# AND RMK_TYPE='AWB_RMK' and rownum =1), (select AIRLN_RMK from awb where awb_no=#awbNo# and awb_date = to_date(#awbDate#,'DDMONYY'))) oldAwbRemark,  
		NVL(CVD_ISO_CURR_CODE,'') currencyCode,  
		null ccFee, 
		null disburse, 
		null docCharge,
		null totalCC , 
		null totalPrepaid, 
		null totalCollect,
		null tcFee,         
		'' chargeMode, 
		null exchangeRate, 
		null foreignUnit,  
		'' ppkTypeAwb,
		'' oldppkTypeAwb,
		null bulkPcsAwb, 
		null bulkWtAwb, 
		null bupPcsAwb, 
		null bupWtAwb,	
		'' AS ppkType,
		'' AS oldppkType,
		null freightageFor,
		null freightageHKG,
		'' carrCode,	
		'' flightNo,
		'' fltKey,
		'' fltDate,
		null manifestPcs, 
		null manifestWt, 
		null bulkPcs, 
		null bulkWt, 
		null bupPcs, 
		null bupWt,
		null oldBulkPcs, 
		null oldBulkWt, 
		null oldBupPcs, 
		null oldBupWt,
		'' ffmFlag, 
		'' conFltCarr,  
		'' conFltNo, 
		'' conFltDate, 
		null conFltTime, 
		'' conFltDest,
		'' ldgPt,
		'' dirRemark,
		'' oldDirRemark,
		'' docDisc,
		'' docDiscOld,
		'' carCreated,
		null recdPcs, 
		null recdWt,
		'' ata,
	    EDI.CSGNE_ADDR as consAddrOne,
	    EDI.CSGNE_ADDR2 AS consAddrTwo,
	    ''  consAddrThree,
	    ''  consAddrFour,
	    ''  consAddrFive,
	    EDI.CSGNE_PIN_CODE consPin,
	    decode(EDI.CSGNE_PLACE,'','Hong Kong',EDI.CSGNE_PLACE) as consCity,
	    decode(EDI.CSGNE_CTRY_CODE,'','HK',EDI.CSGNE_CTRY_CODE) as consCountry,
	    EDI.SHPR_ADDR shprAddrOne,
	    EDI.SHPR_ADDR2 AS  shprAddrTwo,
	    ''   shprAddrThree,
	    ''   shprAddrFour,
	    ''   shprAddrFive,
	    decode(EDI.SHPR_CTRY_CODE,'','HK',EDI.SHPR_CTRY_CODE) as shprCountry,
	    EDI.SHPR_PIN_CODE shprPin,
	    decode(EDI.SHPR_PLACE,'','Hong Kong',EDI.SHPR_PLACE) as shprCity,
	    EDI.SHPR_NAME  shprName,
	    ''  contactEmail1,
		'' contactEmail2,
		''  contactEmail3,
		''  contactEmail4,
		''  contactEmail5,
		'' contactFax1,
		'' contactFax2,
		'' contactFax3,
		''  contactMobileNo1,
		''  contactMobileNo2,
		'' contactMobileNo3,
		'' oldSchlCollection,
		'' allowPACCO,
		'' miniShipment,
		'' docCheckReqd,
		'' docCheck,
		'' byPassRelInd,
		'' oldHouseFlg,
		'' intelliCheckInd ,
		'' consolInd,
		(select AWB_RMK from awb where AWB_NO = #awbNo# AND  AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')) whRemarks,
		'' oldHandledByAgtSrvInd,
		'' relInd,
		'' licenseUT,
		'' locked,
		'' as oldLocked,
		decode((select COUNT(1) from CUST_AIRL_SPL_CODE where spl_type='SPL_VAL' and spl_code=EDI.SPH_SPL_CODE1),0,'N','Y') as shcVal1, 
		decode((select COUNT(1) from CUST_AIRL_SPL_CODE where spl_type='SPL_VAL' and spl_code=EDI.SPH_SPL_CODE2),0,'N','Y') as shcVal2, 
		decode((select COUNT(1) from CUST_AIRL_SPL_CODE where spl_type='SPL_VAL' and spl_code=EDI.SPH_SPL_CODE3),0,'N','Y') as shcVal3, 
		decode((select COUNT(1) from CUST_AIRL_SPL_CODE where spl_type='SPL_VAL' and spl_code=EDI.SPH_SPL_CODE4),0,'N','Y') as shcVal4, 
		decode((select COUNT(1) from CUST_AIRL_SPL_CODE where spl_type='SPL_VAL' and spl_code=EDI.SPH_SPL_CODE5),0,'N','Y') as shcVal5, 
		decode((select COUNT(1) from CUST_AIRL_SPL_CODE where spl_type='SPL_VAL' and spl_code=EDI.SPH_SPL_CODE6),0,'N','Y') as shcVal6, 
		decode((select COUNT(1) from CUST_AIRL_SPL_CODE where spl_type='SPL_VAL' and spl_code=EDI.SPH_SPL_CODE7),0,'N','Y') as shcVal7, 
		decode((select COUNT(1) from CUST_AIRL_SPL_CODE where spl_type='SPL_VAL' and spl_code=EDI.SPH_SPL_CODE8),0,'N','Y') as shcVal8, 
		decode((select COUNT(1) from CUST_AIRL_SPL_CODE where spl_type='SPL_VAL' and spl_code=EDI.SPH_SPL_CODE9),0,'N','Y') as shcVal9,
		'' saveYN,
		'' docDiv,
		'' byPassReleaseIndYN,
		'' docDlvYN,  
		'' valForScheduleColYN,
		'' documentChkReqdYN,
		'' documentChkComplYN,
		'' houseFLgYN,  
		'' hadldByAgtSrvsYN,
		DECODE(EDI.PPD_TOTAL_WT_AMT,0,'',EDI.PPD_TOTAL_WT_AMT) ppAmt1,
	    DECODE(EDI.PPD_VALUE_VC_AMT,0,'',EDI.PPD_VALUE_VC_AMT) ppAmt2,
	    DECODE(EDI.PPD_TAXES_TX_AMT,0,'',EDI.PPD_TAXES_TX_AMT) ppAmt3,
	    DECODE(EDI.PPD_TOTAL_OA_AMT,0,'',EDI.PPD_TOTAL_OA_AMT) ppAmt4,
	    DECODE(EDI.PPD_TOTAL_OC_AMT,0,'',EDI.PPD_TOTAL_OC_AMT) ppAmt5,
	    DECODE(EDI.COL_TOTAL_WT_AMT,0,'',EDI.COL_TOTAL_WT_AMT) ccAmt1,
	    DECODE(EDI.COL_VALUE_VC_AMT,0,'',EDI.COL_VALUE_VC_AMT) ccAmt2,
	    DECODE(EDI.COL_TAXES_TX_AMT,0,'',EDI.COL_TAXES_TX_AMT) ccAmt3,
	    DECODE(EDI.COL_TOTAL_OA_AMT,0,'',EDI.COL_TOTAL_OA_AMT) ccAmt4,
	    DECODE(EDI.COL_TOTAL_OC_AMT,0,'',EDI.COL_TOTAL_OC_AMT) ccAmt5,
	    EDI.SHPR_STATE_PROVINCE shpState,
	    EDI.CSGNE_STATE_PROVINCE cnsgnState,
	    null bldUpBlkPcs,
	    null bldUpBlkWt,
	    NULL generalStorageCharge,
	    (SELECT FUN_GET_ESRF_STATUS(EDI.AWB_NO,EDI.AWB_DATE)  from DUAL) as pEligibilityStatus,
	    '' as oldEligibilityStatus,
	    '' as eligibilityCheck        	   		
	  FROM v_edi_fwb EDI WHERE EDI.AWB_NO = #awbNo# AND
	  EDI.AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') AND not exists (select 1 from imp_car_shp where AWB_NO = #awbNo# AND  AWB_DATE = TO_DATE(#awbDate#,'DDMONYY'))
   </select>
  <select id="get_awb_rmk_impcar" parameterClass="cargo.cms.imprt.bo.MaintainCARBO" resultClass="java.lang.String">
   	select RMK from awb_rmk where awb_no=#awbNo# AND RMK_TYPE='AWB_RMK' and rownum =1
   </select>
    <select id="get_car_edi_awb_cont_info" parameterClass="cargo.cms.imprt.bo.MaintainCARBO" resultClass="cargo.cms.imprt.bo.MaintainCARBO">
    SELECT distinct contId,contName,contType,docLineNo from (
    	select contact.cont_id contId,substr(contact.cont_name,0,15) contName,contact.cont_type contType,DOC_LINE_NO docLineNo FROM CAR_AWB_CONTACT_INFO contact WHERE contact.AWB_NO = #awbNo# AND
	  	contact.AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')  
    	UNION 
   		select contact.cont_id contId,substr(contact.cont_name,0,15) contName,contact.cont_type contType, null docLineNo FROM v_edi_fwb EDI,EDI_FWB_CONTACT contact WHERE EDI.AWB_NO = #awbNo# AND
	  	EDI.AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') AND EDI.tr_no=contact.tr_no AND (contact.CONT_TYPE='SHP' OR contact.CONT_TYPE='CNE') AND 
    	not exists (select 1 from CAR_AWB_CONTACT_INFO where AWB_NO = #awbNo# AND  AWB_DATE = TO_DATE(#awbDate#,'DDMONYY'))) order by contType desc,docLineNo
    </select>
    <insert id="insertAWBContInfo" parameterClass="cargo.cms.imprt.bo.MaintainCARBO">
    	insert into CAR_AWB_CONTACT_INFO 
			(AWB_NO,AWB_DATE,DOC_LINE_NO,CONT_ID,CONT_NAME,CONT_TYPE)
		values
			(#awbNo#,TO_DATE(#awbDate#,'DDMONYY'),#docLineNo#,#contId#,#contName#,#contType#)
    </insert>
    <update id="updateAWBContInfo" parameterClass="cargo.cms.imprt.bo.MaintainCARBO">
    	update CAR_AWB_CONTACT_INFO set CONT_ID=#contId#,CONT_NAME=#contName#,CONT_TYPE=#contType# 
    	where AWB_NO=#awbNo# AND AWB_DATE=TO_DATE(#awbDate#,'DDMONYY') AND DOC_LINE_NO=#docLineNo#
    </update>
    <select id="getMaxDocLineNoAWBContInfo" parameterClass="cargo.cms.imprt.bo.MaintainCARBO" resultClass="java.lang.String">
		SELECT NVL(MAX(DOC_LINE_NO)+1,1) FROM CAR_AWB_CONTACT_INFO WHERE AWB_NO =#awbNo# AND AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
   	</select>
	 <select id="get_car_charge" parameterClass="cargo.cms.imprt.bo.MaintainCARBO" resultClass="cargo.cms.imprt.bo.CarItemChargeBO">
		    SELECT COLL_CHARGE_DESC AS itemCode, DECODE(PP_AMT,0,'',PP_AMT) AS ppAmt, DECODE(CC_AMT,0,'',CC_AMT) AS ccAmt 
		FROM IMP_CAR_CHRG_ITM WHERE AWB_NO =#awbNo# AND	AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
   </select>
	<delete id="delete_car_charge" parameterClass="cargo.cms.imprt.bo.MaintainCARBO">
		DELETE FROM IMP_CAR_CHRG_ITM  WHERE AWB_NO = #awbNo# and AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
   </delete>
	<select id="get_actual_consignee"  parameterClass="cargo.cms.imprt.bo.MaintainCARBO"  resultClass="cargo.cms.imprt.bo.ConsigneeBO">
		<![CDATA[
			SELECT C.CODE AS consCode, C.CODE_DESC AS consName FROM CUST_AGENT_ALIAS A 
			JOIN CUST_COMPANY C ON C.CODE = A.CUST_NO WHERE A.ALIAS_NAME = #dummyConsigneeName#
			]]>
   </select>
	 <select id="countCheckForAWBPcWt" parameterClass="cargo.cms.imprt.bo.MaintainCARBO" resultClass="java.lang.String">
		select count(1) from cst_awb where awb_no = #awbNo# and flt_key = #fltKey# and flt_date = #fltDate#
   </select>
	 <select id="get_ata_for_maintain_car" parameterClass="cargo.cms.imprt.bo.MaintainCARBO" resultClass="cargo.cms.imprt.bo.MaintainCARBO">
	   SELECT PKG_COMMON.get_flt_ata(#fltKey#, #fltDate#, 'A') AS ata from DUAL
   </select>	
	 <select id="imp_mcar_cataloglist"  parameterClass="java.lang.Object" resultClass="cargo.cms.imprt.bo.CatalogBO">
		SELECT CODE AS catalogCode,CODE_DESC AS catalogName FROM MAST_CODE_DTL 
		WHERE CODE_TYPE = 'CATALOG' AND CODE IN ('IG','IS','TG','TR') 
		order by CODE
	</select>
	<select id="mainatin_car_validate_1" parameterClass="map" resultClass="java.lang.String">
		<![CDATA[
			SELECT NVL(count(1),0) 
			FROM IMP_CAR_SHP 
			WHERE AWB_NO=#AWBNO# AND 
				AWB_DATE = TO_DATE(#AWBDATE#,'DDMONYY') AND
				RECD_PCS > 0 AND 
				RECD_WT > 0
		]]>
	</select>
	 <update id="update_imp_car_shp" parameterClass="cargo.cms.imprt.bo.MaintainCARBO">
		UPDATE IMP_CAR_SHP SET
			MANIFEST_PCS  =  NVL(#manifestPcs#,0), 
			MANIFEST_WT  =  NVL(#manifestWt#,0), 
			PPK_TYPE   = #ppkType#, 
			BULK_PCS   = nvl(#bulkPcs#,0), 
			BULK_WT   = nvl(#bulkWt#,0), 
			BUP_PCS   = nvl(#bupPcs#, 0),
			BUP_WT   = nvl(#bupWt#, 0),
			LDG_POINT  = NVL(#ldgPt#,0),
			DIR_RMK   = #dirRemark#,
			DOC_DISC   = #docDisc# ,
			CNTG_FLT_CARR = #conFltCarr#,  
			CNTG_FLT_NO  = #conFltNo#, 
			CNTG_FLT_DATE = #conFltDate#, 
			CNTG_FLT_TIME = #conFltTime#, 
			CNTG_FLT_DEST = #conFltDest#,
			LM_USER_ID =  #lmUserId#, 
			LM_DATE  = SYSDATE,
			RECD_PCS = #recdPcs#, 
		   	RECD_WT  = #recdWt#,
		   	SCH_COLL_YN = NVL(#schlCollection#,'N'),
		   	AIRL_RMK = #awbRemark#,
		   	CAR_CREATED = DECODE(CAR_CREATED,'Y','Y',#cfmIndicator#),
		   	TR_TYPE=#trtype#,
		   	SAVE_YN='Y',
		   	LIC_YN=#licenseUT#
		WHERE AWB_NO  = #awbNo# 
			AND AWB_DATE  = TO_DATE(#awbDate#,'DDMONYY') 
			AND FLT_DATE  = TO_DATE(#fltDate#,'DDMONYY')
			AND FLT_KEY  = #fltKey#
	</update>
	<update id="update_imp_car_awb" parameterClass="cargo.cms.imprt.bo.MaintainCARBO">
		UPDATE IMP_CAR_AWB SET
			AWB_DEST     = #awbDestination#, 
			AWB_ORIGIN     = #awbOrigin#, 
			AWB_PCS      = nvl(#awbPieces#,0),  
			AWB_WT      = nvl(#awbWeight#,0), 
			CONTENT      = #content#,
			CATALOG      = #catalog#,
			SPL_CODE1     = #splCode1#, 
			SPL_CODE2     = #splCode2#, 
			SPL_CODE3     = #splCode3#,  
			SPL_CODE4     = #splCode4#,  
			SPL_CODE5     = #splCode5#,  
			SPL_CODE6     = #splCode6#,  
			SPL_CODE7     = #splCode7#,  
			SPL_CODE8     = #splCode8#, 
			SPL_CODE9     = #splCode9#, 
			CSGNE_NAME     = #consigneeName#,
			CNS_CUST_NO     = #consigneeCode#,
			APPNTD_AGENT    = #appointedAgent#,
			AGENT_CUST_NO  = #appointedAgentCode#,
	 		ECT_HANDLER     = #ectHandler#,
			FWB_CNS_AS_ALIAS   = NVL(#fwbAlias#,'N'),  
			BANK_ENDOS     = #bankEndos#,
			BANK_TYPE     = #bankType#,    
			AIRLN_RMK      = #awbRemark#,
			CURR_CODE     = #currencyCode#, 
			EXCH_RATE     = #exchangeRate#,
			DISB_FEE     = #disburse#, 
			DOC_CHRG     = #docCharge#,  
			CC_FEE      = #ccFee#, 
			TML_CHRG      = #tcFee#,
			TTL_CC      = #totalCC#, 
			CC_PP_TOTAL_CHRG   = #totalPrepaid#, 
			CC_CC_TOTAL_CHRG   = #totalCollect#, 
			CHRG_MODE     = #chargeMode#,
			FREIGHT = nvl(#freightageFor#,0),
			FREIGHT_LOCL = nvl(#freightageHKG#,0),
			PPK_TYPE = #ppkTypeAwb#,
			BULK_PCS = nvl(#bulkPcsAwb#,0),
			BULK_WT  = nvl(#bulkWtAwb#,0),
			BUP_PCS  = nvl(#bupPcsAwb#,0),
			BUP_WT = nvl(#bupWtAwb#,0), 
			CONSOLE_IND = #consolInd#,
			CSGNE_ADDR1 = #consAddrOne#,	
			CSGNE_ADDR2 = #consAddrTwo#,	
			CSGNE_ADDR3 = #consAddrThree#,	
			CSGNE_ADDR4 = #consAddrFour#,	
			CSGNE_ADDR5 = #consAddrFive#,
			CSGNE_PLACE = #consCity#,	
			CSGNE_PIN_CODE = #consPin#,	
			CSGNE_CTRY_CODE = #consCountry#,
			AGENT_ADDR1 = #apptdAgtAddrOne#,	
			AGENT_ADDR2 = #apptdAgtAddrTwo#,	
			AGENT_ADDR3 = #apptdAgtAddrThree#,	
			AGENT_ADDR4 = #apptdAgtAddrFour#,	
			AGENT_ADDR5 = #apptdAgtAddrFive#,	
			AGENT_PLACE = #appCity#,	
			AGENT_PIN_CODE = #appPin#,	
			AGENT_CTRY_CODE = #appCountry#,
			LM_USER_ID =  #lmUserId#, 
			LM_DATE  = SYSDATE,
			VAL_FOR_SCH_COLL = NVL(#schlCollection#,'N'),
			DOC_CHK_REQ = NVL(#docCheckReqd#,'N'),
			DOC_CHK_COMP =NVL(#docCheck#,'N'),
			ALLOW_PACCO = NVL(#allowPACCO#,'N'),
			HOUSE_FLG = NVL(#houseFlg#,'N'),
			BYPASS_REL = NVL(#byPassRelInd#,'N'),
			SHPR_NAME = #shprName#,
			SHPR_ADD1 = #shprAddrOne#,	
			SHPR_ADD2 = #shprAddrTwo#,	
			SHPR_ADD3 = #shprAddrThree#,	
			SHPR_ADD4 = #shprAddrFour#,	
			SHPR_ADD5 = #shprAddrFive#,
			SHPR_PLACE = #shprCity#,
			SHPR_CTRY_CODE = #shprCountry#,
			SHPR_PIN_CODE =#shprPin#,
			EMAIL1 = #contactEmail1#,
			EMAIL2 = #contactEmail2#,
			EMAIL3 = #contactEmail3#,
			EMAIL4 = #contactEmail4#,
			EMAIL5 = #contactEmail5#,
			FAX1 = #contactFax1#,
			FAX2 = #contactFax2#,
			FAX3 = #contactFax3#,
			MOBILE1 = #contactMobileNo1#,
			MOBILE2 = #contactMobileNo2#,
			MOBILE3 = #contactMobileNo3#,
			LOCK_IND = NVL(#locked#,'N'),
			HANDL_SERVICE_YN = NVL(#handledByAgtSrvInd#,'N'),
			DOC_DLV = NVL(#docDiv#,'N'),
			TR_TYPE='ACAR' ,
			SAVE_YN='Y' ,
			SHPR_STATE_PROVINCE = #shpState#,
			CSGNE_STATE_PROVINCE = #cnsgnState#,
			<isEqual property="cEligibilityStatusInd" compareValue="Y">
			ELIGIBILITY_STATUS =#eligibilityStatus#,
			</isEqual>
			ELIGIBILITY_CHECK = #eligibilityCheck#,
			GEN_STRG_CHRG_YN = NVL(#generalStorageCharge#, 'N')
		WHERE  AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') AND     
			AWB_NO   = #awbNo#
	</update>
	<update id="update_imp_car_charge" parameterClass="cargo.cms.imprt.bo.CarItemChargeBO">
		UPDATE IMP_CAR_CHRG_ITM SET
			PP_AMT       = #ppAmt#, 
			CC_AMT       = #ccAmt#, 
			LM_USER_ID   = #lmUserId#, 
			LM_DATE      = SYSDATE
		WHERE AWB_NO     = #awbNo#  AND
			AWB_DATE     = TO_DATE(#awbDate#,'DDMONYY')  AND
			COLL_CHARGE_DESC     = #itemCode#
	</update>
	<select id="check_splcode"  parameterClass="map"  resultClass="java.lang.String">
		<![CDATA[
			SELECT LOCK_YN FROM MAST_SPL_HAND_CODE WHERE CODE = UPPER(#CODE#)
			]]>
	 </select>
	 <select id="check_splcode_car"  parameterClass="cargo.cms.imprt.bo.InBoundULDListBO"  resultClass="java.lang.Integer">
			SELECT count(1) FROM IMP_CAR_AWB AWB,IMP_CAR_SHP SHP WHERE AWB.AWB_NO  = #awbNo# 
			AND AWB.AWB_DATE  = TO_DATE(#awbDate#,'DDMONYY') 
			AND SHP.FLT_DATE  = TO_DATE(#arrDate#,'DDMONYY')
			AND SHP.FLT_KEY  = #flightKey# AND AWB.AWB_NO = SHP.AWB_NO AND AWB.AWB_DATE= SHP.AWB_DATE 
			<isNotEmpty prepend="AND" property="shc1" >
				SPL_CODE1 = UPPER(#shc1#) 
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="shc2" >
				SPL_CODE2 = UPPER(#shc2#) 
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="shc3" >
				SPL_CODE3 = UPPER(#shc3#) 
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="shc4" >
				SPL_CODE4 = UPPER(#shc4#) 
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="shc5" >
				SPL_CODE5 = UPPER(#shc5#) 
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="shc6" >
				SPL_CODE6 = UPPER(#shc6#) 
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="shc7" >
				SPL_CODE7 = UPPER(#shc7#) 
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="shc8" >
				SPL_CODE8 = UPPER(#shc8#) 
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="shc9" >
				SPL_CODE9 = UPPER(#shc9#) 
			</isNotEmpty>
			
			
	 </select>
	 <select id="check_currency"  parameterClass="map"  resultClass="java.lang.String">
		<![CDATA[
			SELECT TO_CHAR(count(1)) FROM MAST_CURRENCY WHERE CODE = UPPER(#CODE#)
		]]>
	 </select>
	 <select id="check_carrier_code"  parameterClass="map"  resultClass="java.lang.String">
		<![CDATA[
			SELECT TO_CHAR(count(1)) FROM MAST_CARRIER WHERE CODE = UPPER(#CODE#)
		]]>
	 </select>
	 <select id="check_awb_alias"  parameterClass="map"  resultClass="java.lang.String">
	<![CDATA[
		SELECT NVL(count(1),0) FROM CUST_AGENT_ALIAS WHERE ALIAS_NAME=#ALIASNAME#
		]]>
  </select>
	<select id="check_consignee"  parameterClass="map"  resultClass="java.lang.String">
	<![CDATA[
		SELECT CODE FROM CUST_COMPANY WHERE CODE_DESC=#CONSNAME# AND CONS_YN='Y'
	]]>
  </select>
	<select id="check_agent"  parameterClass="map"  resultClass="java.lang.String">
	<![CDATA[
		SELECT CODE FROM CUST_COMPANY WHERE CODE_DESC=#AGENTNAME# AND AGENT_YN='Y'
	]]>
  </select>
	<insert id="save_imp_car_shp_dummy" parameterClass="cargo.cms.imprt.bo.MaintainCARBO">
	INSERT INTO IMP_CAR_SHP (FLT_TYPE,AWB_NO, AWB_DATE, AWB_PRFX, CARR_CODE, FLT_DATE, FLT_KEY, BULK_PCS, BULK_WT,
		MANIFEST_PCS, MANIFEST_WT, PPK_TYPE, LM_USER_ID ,LM_DATE,TR_STATUS,CR_USER_ID, CR_DATE,LDG_POINT,DOC_DISC,CAR_CREATED,DIR_RMK,TR_TYPE,SAVE_YN,LIC_YN)
	VALUES( 'I',#awbNo# ,TO_DATE(#awbDate#,'DDMONYY'),#awbPrefix#,#carrCode#,TO_DATE(#fltDate#,'DDMONYY'),#fltKey#, NVL(#manifestPcs#,0), NVL(#manifestWt#,0), 
		NVL(#manifestPcs#,0), NVL(#manifestWt#,0), 'B', #lmUserId#,SYSDATE,'A',#lmUserId#,SYSDATE,#ldgPt#,#docDisc#,#cfmIndicator#,#dirRemark#,#trtype#,'Y',#licenseUT#)	
 </insert>
 <insert id="save_imp_car_shp" parameterClass="cargo.cms.imprt.bo.MaintainCARBO">
	<![CDATA[
		INSERT INTO IMP_CAR_SHP (FLT_TYPE,AWB_NO, AWB_DATE, AWB_PRFX, CARR_CODE, FLT_DATE, FLT_KEY, MANIFEST_PCS, 
			MANIFEST_WT,BULK_PCS ,BULK_WT ,BUP_PCS ,BUP_WT,	LDG_POINT ,DIR_RMK ,
			DOC_DISC ,CNTG_FLT_CARR,CNTG_FLT_NO,CNTG_FLT_DATE,CNTG_FLT_TIME , 
			CNTG_FLT_DEST,LM_USER_ID ,LM_DATE,TR_STATUS,CR_USER_ID, CR_DATE, PPK_TYPE,SCH_COLL_YN,
			AIRL_RMK,WH_RMK,AGENT_ID,CAR_CREATED,TR_TYPE,SAVE_YN,LIC_YN)
		VALUES( 'I',#awbNo# ,TO_DATE(#awbDate#,'DDMONYY'),#awbPrefix#, 											#carrCode#,TO_DATE(#fltDate#,'DDMONYY'),#fltKey#,nvl(#manifestPcs#,0),								nvl(#manifestWt#,0),nvl(#bulkPcs#,0),nvl(#bulkWt#,0),nvl(#bupPcs#,0),
		nvl(#bupWt#,0), #ldgPt#,#dirRemark#,#docDisc#,#conFltCarr#,#conFltNo#,
		TO_DATE(#conFltDate#,'DDMONYY'),#conFltTime#,#conFltDest#,
		#lmUserId#,SYSDATE,'A',#lmUserId#,SYSDATE,#ppkType#,#schlCollection#,
		#awbRemark#,#whRemarks#,#appointedAgentCode#,#cfmIndicator#,#trtype#,'Y',#licenseUT#)		
	]]>
 </insert>
 <insert id="save_imp_car_awb" parameterClass="cargo.cms.imprt.bo.MaintainCARBO">
	<![CDATA[
		INSERT INTO IMP_CAR_AWB (AWB_NO,AWB_DATE,AWB_PRFX,AWB_DEST,AWB_ORIGIN,AWB_PCS,AWB_WT,
			CONTENT,CATALOG,SPL_CODE1,SPL_CODE2,SPL_CODE3,  
			SPL_CODE4,SPL_CODE5,SPL_CODE6,SPL_CODE7,SPL_CODE8,SPL_CODE9,
			CNS_CUST_NO, CSGNE_NAME, APPNTD_AGENT, AGENT_CUST_NO,
			ECT_HANDLER,FWB_CNS_AS_ALIAS,BANK_ENDOS,BANK_TYPE,   
			AIRLN_RMK,CURR_CODE,EXCH_RATE,DISB_FEE,DOC_CHRG,CC_FEE,TML_CHRG,
			TTL_CC,CC_CC_TOTAL_CHRG,CC_PP_TOTAL_CHRG,CHRG_MODE,LM_USER_ID ,LM_DATE,TR_STATUS,CR_USER_ID, CR_DATE, PPK_TYPE,
			BULK_PCS,BULK_WT,BUP_PCS,BUP_WT, FREIGHT,FREIGHT_LOCL,CONSOLE_IND,
			CSGNE_ADDR1, CSGNE_ADDR2, CSGNE_ADDR3, CSGNE_ADDR4, CSGNE_ADDR5,CSGNE_PLACE, CSGNE_CTRY_CODE, CSGNE_PIN_CODE,
			AGENT_ADDR1, AGENT_ADDR2, AGENT_ADDR3, AGENT_ADDR4, AGENT_ADDR5,AGENT_PLACE, AGENT_CTRY_CODE, AGENT_PIN_CODE,
			VAL_FOR_SCH_COLL,DOC_CHK_REQ,DOC_CHK_COMP,ALLOW_PACCO,HOUSE_FLG,BYPASS_REL,
			SHPR_ADD1,SHPR_ADD2,SHPR_ADD3,SHPR_ADD4,SHPR_ADD5,SHPR_NAME,SHPR_PLACE,SHPR_CTRY_CODE,SHPR_PIN_CODE,
			EMAIL1,EMAIL2,EMAIL3,EMAIL4,EMAIL5,FAX1,FAX2,FAX3,MOBILE1,MOBILE2,MOBILE3,LOCK_IND,HANDL_SERVICE_YN,doc_dlv,TR_TYPE,SAVE_YN,WH_RMK,SHPR_STATE_PROVINCE,CSGNE_STATE_PROVINCE,
			GEN_STRG_CHRG_YN, ELIGIBILITY_STATUS, ELIGIBILITY_CHECK) 
		VALUES(#awbNo#,TO_DATE(#awbDate#,'DDMONYY'),#awbPrefix#,#awbDestination#,#awbOrigin#, 
			nvl(#awbPieces#,0),nvl(#awbWeight#,0),#content#,#catalog#,#splCode1#,
			#splCode2#,#splCode3#,#splCode4#,#splCode5#,#splCode6#,#splCode7#,#splCode8#,#splCode9#,
			#consigneeCode#, #consigneeName#, #appointedAgent#,#appointedAgentCode#,
			#ectHandler#,#fwbAlias#,#bankEndos#,#bankType#,#awbRemark#,#currencyCode#,#exchangeRate#,
			#disburse#,#docCharge#,#ccFee#,#tcFee#,#totalCC#,#totalCollect#,#totalPrepaid#,
			#chargeMode#,#lmUserId#,SYSDATE,'A',#lmUserId#,SYSDATE,#ppkTypeAwb#,
			NVL(#bulkPcsAwb#,0),NVL(#bulkWtAwb#,0),NVL(#bupPcsAwb#,0),NVL(#bupWtAwb#,0),nvl(#freightageFor#,0),nvl(#freightageHKG#,0),
			decode((select 1 from mast_code_dtl where code = #content# and code_type='CONSOLIDATION'),'1','Y','N'),
			#consAddrOne#,#consAddrTwo#,#consAddrThree#,#consAddrFour#,#consAddrFive#,#consCity#,#consCountry#,#consPin#,
			#apptdAgtAddrOne#,#apptdAgtAddrTwo#,#apptdAgtAddrThree#,#apptdAgtAddrFour#,#apptdAgtAddrFive#,#appCity#,#appCountry#,#appPin#,
			#schlCollection#,#docCheckReqd#,#docCheck#,#allowPACCO#,#houseFlg#,#byPassRelInd#,#shprAddrOne#,#shprAddrTwo#,	
			#shprAddrThree#,#shprAddrFour#,#shprAddrFive#,#shprName#,#shprCity#,#shprCountry#,#shprPin#,
			#contactEmail1#,#contactEmail2#,#contactEmail3#,#contactEmail4#,#contactEmail5#,#contactFax1#,#contactFax2#,#contactFax3#,#contactMobileNo1#,
			#contactMobileNo2#,#contactMobileNo3#,#locked#,#handledByAgtSrvInd#,#docDiv#,'CCAR','Y',#whRemarks#,#shpState#,#cnsgnState#,
			#generalStorageCharge#, #eligibilityStatus#, #eligibilityCheck#)  
	]]>
</insert>	
<insert id="save_imp_car_awb_dummy" parameterClass="cargo.cms.imprt.bo.MaintainCARBO">
	INSERT INTO IMP_CAR_AWB (AWB_NO,AWB_DATE,AWB_PRFX,PPK_TYPE, AWB_DEST,AWB_ORIGIN,
		AWB_PCS,AWB_WT,BULK_PCS, BULK_WT,CONTENT,CATALOG,
		SPL_CODE1,SPL_CODE2,SPL_CODE3,SPL_CODE4,SPL_CODE5,SPL_CODE6,
		SPL_CODE7,SPL_CODE8,SPL_CODE9,CNS_CUST_NO,CSGNE_NAME,
		APPNTD_AGENT,AGENT_CUST_NO,AIRLN_RMK,CC_FEE, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE,TR_STATUS,CONSOLE_IND,
		CSGNE_ADDR1, CSGNE_ADDR2, CSGNE_ADDR3, CSGNE_ADDR4, CSGNE_ADDR5,CSGNE_PLACE,CSGNE_CTRY_CODE, CSGNE_PIN_CODE,
		AGENT_ADDR1, AGENT_ADDR2, AGENT_ADDR3, AGENT_ADDR4, AGENT_ADDR5,AGENT_PLACE, AGENT_CTRY_CODE,AGENT_PIN_CODE,ECT_HANDLER,TR_TYPE,SAVE_YN,WH_RMK,SHPR_STATE_PROVINCE,CSGNE_STATE_PROVINCE) 
	VALUES(#awbNo#,TO_DATE(#awbDate#,'DDMONYY'), #awbPrefix#,NVL(#ppkType#, 'B'), #awbDestination#,#awbOrigin#, 
		nvl(#awbPieces#,0),nvl(#awbWeight#,0),nvl(#awbPieces#,0),nvl(#awbWeight#,0),#content#,#catalog#,
		#splCode1#,#splCode2#,#splCode3#,#splCode4#,#splCode5#,#splCode6#,  
		#splCode7#,#splCode8#,#splCode9#,#consigneeCode#,#consigneeName#,#appointedAgent#,#appointedAgentCode#,
		#awbRemark#,#ccFee#,#lmUserId#,SYSDATE,#lmUserId#,SYSDATE,'A',
		decode((select 1 from mast_code_dtl where code = #content# and code_type='CONSOLIDATION'),'1','Y','N'),
		#consAddrOne#,#consAddrTwo#,#consAddrThree#,#consAddrFour#,#consAddrFive#,#consCity#,#consCountry#,#consPin#,
		#apptdAgtAddrOne#,#apptdAgtAddrTwo#,#apptdAgtAddrThree#,#apptdAgtAddrFour#,#apptdAgtAddrFive#,#appCity#,#appCountry#,#appPin#,#ectHandler#,'CCAR','Y',#whRemarks#,#shpState#,#cnsgnState#) 
 </insert>
 <insert id="save_imp_car_charge" parameterClass="cargo.cms.imprt.bo.CarItemChargeBO">
	<![CDATA[
		INSERT INTO	 IMP_CAR_CHRG_ITM (AWB_NO,AWB_DATE,COLL_CHARGE_DESC,
			PP_AMT,CC_AMT,LM_USER_ID,LM_DATE)
		VALUES (#awbNo#,TO_DATE(#awbDate#,'DDMONYY'),#itemCode#,#ppAmt#, 
			#ccAmt#,#lmUserId#,SYSDATE)
	]]>
</insert>	
<select id="exchange_rate"  parameterClass="cargo.cms.imprt.bo.MaintainCARBO" resultClass="java.lang.String">
<![CDATA[
	SELECT  NVL(EXCH_RATE / NVL(FORGN_UNIT, 1),0)  
	  from (SELECT  NVL(EXCH_RATE ,0) EXCH_RATE, NVL(FORGN_UNIT,0) FORGN_UNIT, dense_rank() over (partition by CURR_CODE order by EFF_DATE desc) rank
      FROM  MAST_CURR_EXRATE 
      WHERE CURR_CODE = #currencyCode# and nvl(CARR_CODE, nvl(#carrCode#, '*')) = nvl(#carrCode#, '*')
      AND TO_DATE(TO_CHAR(EFF_DATE, 'DDMONYY HH24MI'), 'DDMONYY HH24MI') <= TO_DATE((SELECT DECODE(ACT_DATE, NULL, TO_CHAR(SCH_DATE, 'DDMONYY')||' '||LPAD(SCH_TIME, 4, '0'), TO_CHAR(ACT_DATE, 'DDMONYY')||' '||LPAD(ACT_TIME, 4, '0')) T 
                                          FROM FLT_OPR WHERE FLT_KEY = #fltKey# AND SCH_DATE = #fltDate# AND FLT_TYPE = 'A' ), 'DDMONYY HH24MI')
      ) a
      where rank = 1 and rownum = 1
	]]>
</select>
<!--  SRF for lock; err if count > 0 ; err msg = 'AWB is locked' -->
	<select id="imp_checkAwbIsLocked"  parameterClass="map" resultClass="java.lang.Integer">
		<![CDATA[
		select count(1) from AWB 
		where AWB_NO = #AWBNO# and AWB_DATE = #AWBDATE# and locked_yn = 'Y' and rownum = 1
		]]>
	</select>
	
	<!--  Changed for QR 
	<select id="imp_checkUldIsLocked"  parameterClass="map" resultClass="java.lang.String">
		select uld_key from uld_inventory where locked='Y' and uld_key in (
		select uld_key from awb_inventory where awb_no=#AWBNO# and awb_date= #AWBDATE# and rownum=1)
	</select> -->
	
	<!--  Changed for QR
	<select id="imp_checkLspIsLocked"  parameterClass="map" resultClass="java.lang.String">
		select lsp_no from lsp_inventory where locked='Y' and (
		lsp_no in (select lsp_no from awb_inventory where awb_no=#AWBNO# and awb_date= #AWBDATE# and rownum=1))
	</select> -->
	
	
<select id="imp_mcar_get_revenue" parameterClass="cargo.cms.imprt.bo.MaintainCARBO" resultClass="cargo.cms.imprt.bo.ItemRevenueBO">
		SELECT ITM_CODE AS itemCode,ITM_CODE_SFX AS itemSuffix,ITM_DESC AS itemDesc 
		FROM BILL_ITM_MASTER 
		WHERE ITM_CODE IN ('FCIMFC','DBIMPO','CCIMPO'
		<dynamic>
			<isNotEmpty prepend="," property="terminalChargeCodeOne">
				 #terminalChargeCodeOne#
			</isNotEmpty>
			<isNotEmpty prepend="," property="terminalChargeCodeTwo">
				 #terminalChargeCodeTwo#
			</isNotEmpty>
			<isNotEmpty prepend="," property="documentChargeCode">
				#documentChargeCode#
			</isNotEmpty>
			<isNotEmpty prepend="," property="bankEndosChargeCode">
				#bankEndosChargeCode#
			</isNotEmpty>
			
		</dynamic>
		)
	</select>
	<delete id="imp_mcar_delete_revenue" parameterClass="cargo.cms.imprt.bo.MaintainCARBO" >
		<![CDATA[
			DELETE
			FROM IMP_CHRG_ITM_REV_AWB 
			WHERE	TO_CHAR(AWB_DATE,'DDMONYY') = TO_DATE(#awbDate#,'DDMONYY')  AND
				AWB_NO	 = #awbNo#  
		]]>
	</delete>
	<insert id="imp_mcar_insert_revenue" parameterClass="cargo.cms.imprt.bo.ItemRevenueBO">
		INSERT INTO IMP_CHRG_ITM_REV_AWB 
			(AWB_NO,AWB_DATE,REV_IND,ITM_CODE,ITM_CODE_SFX, ITM_DESC,CHRG_AMT,PAYMENT_MODE,
			PAYER_AC_NO,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE) 
		VALUES (#awbNo#,TO_DATE(#awbDate#,'DDMONYY'),#revenueInd#,#itemCode#,#itemSuffix#,
			#itemDesc#,#chargeAmt#,	#paymentMode#,#payerAccNo#,	#crUserId#,SYSDATE,#lmUserId#,SYSDATE)
	</insert>
	<select id="check_loading_point"  parameterClass="map"  resultClass="java.lang.String">
		<![CDATA[
		SELECT count(1) FROM FLT_OPR_LEG 
		WHERE FLT_KEY = #FLIGHTKEY# AND SCH_DATE = TO_DATE(#FLIGHTDATE#,'DDMONYY') 
			AND FLT_TYPE = 'A'  
			AND   BRD_POINT=#LOADINGPT#	
			AND LEG_ORD <= 	(SELECT MIN(LEG_ORD) FROM FLT_OPR_LEG 
			WHERE FLT_KEY = #FLIGHTKEY# 
			AND SCH_DATE = TO_DATE(#FLIGHTDATE#,'DDMONYY') AND OFF_POINT = 'HKG')
			]]>
	 </select>
 <delete id="imp_gt_srf_charges_delete" parameterClass="map" >  
    	DELETE FROM GT_SRF_CHARGES WHERE AWB_NO = #AWBNO# AND AWB_DATE = TO_DATE(#AWBDATE#,'DDMONYY')
	</delete>
	<select id="check_shp_count"  parameterClass="cargo.cms.imprt.bo.MaintainCARBO"  resultClass="java.lang.Integer">
		select count(1) from IMP_CAR_SHP
		WHERE AWB_NO  = #awbNo# 
			AND AWB_DATE  = TO_DATE(#awbDate#,'DDMONYY') 
			AND FLT_DATE  = TO_DATE(#fltDate#,'DDMONYY')
			AND FLT_KEY  = #fltKey#
	</select>
	<update id="update_imp_car_awb_dummy" parameterClass="cargo.cms.imprt.bo.MaintainCARBO">
		 update IMP_CAR_AWB set AWB_PRFX = #awbPrefix# , AWB_DEST =  #awbDestination# , AWB_ORIGIN = #awbOrigin# ,
		 AWB_PCS = nvl(#awbPieces#,0) , AWB_WT = nvl(#awbWeight#,0) , CONTENT =#content# ,
		 SPL_CODE1 =#splCode1# ,SPL_CODE2 =#splCode2#,SPL_CODE3 = #splCode3#,  
		 SPL_CODE4 = #splCode4#, SPL_CODE5 = #splCode5# ,SPL_CODE6 = #splCode7# ,SPL_CODE7 = #splCode8# ,
		 SPL_CODE8 = #splCode8# ,SPL_CODE9 = #splCode9# , CNS_CUST_NO =  #consigneeCode#,CSGNE_NAME  = #consigneeName# ,
		 APPNTD_AGENT = #appointedAgent# ,AGENT_CUST_NO = #appointedAgentCode# , AIRLN_RMK =#awbRemark# ,
		 LM_USER_ID  = #lmUserId#, LM_DATE = SYSDATE, TR_STATUS = 'E', CATALOG =#catalog# , CONSOLE_IND = #consolInd#,
		CSGNE_ADDR1 = #consAddrOne#,	
		CSGNE_ADDR2 = #consAddrTwo#,	
		CSGNE_ADDR3 = #consAddrThree#,	
		CSGNE_ADDR4 = #consAddrFour#,	
		CSGNE_ADDR5 = #consAddrFive#,
		CSGNE_PLACE = #consCity#,	
		CSGNE_PIN_CODE = #consPin#,	
		CSGNE_CTRY_CODE = #consCountry#,
		AGENT_ADDR1 = #apptdAgtAddrOne#,	
		AGENT_ADDR2 = #apptdAgtAddrTwo#,	
		AGENT_ADDR3 = #apptdAgtAddrThree#,	
		AGENT_ADDR4 = #apptdAgtAddrFour#,	
		AGENT_ADDR5 = #apptdAgtAddrFive#,	
		AGENT_PLACE = #appCity#,	
		AGENT_PIN_CODE = #appPin#,	
		AGENT_CTRY_CODE = #appCountry#,
		ECT_HANDLER = #ectHandler#,
		TR_TYPE='ACAR',
		HOUSE_FLG = nvl(#houseFLgYN#,'N'),
		SAVE_YN='Y' ,
		LOCK_IND = #locked#
		 Where AWB_NO = #awbNo# and AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
	</update>
	<update id="update_imp_car_shp_dummy" parameterClass="cargo.cms.imprt.bo.MaintainCARBO">
		 update IMP_CAR_SHP set AWB_PRFX = #awbPrefix# , CAR_CREATED = 'Y',
		 BULK_PCS  = NVL(#manifestPcs#-nvl(#bupPcs#,0),0), BULK_WT = NVL(#manifestWt#-nvl(#bupWt#,0),0),BUP_PCS = nvl(#bupPcs#, 0),BUP_WT = nvl(#bupWt#, 0),
		 MANIFEST_PCS = NVL(#manifestPcs#,0) , MANIFEST_WT = NVL(#manifestWt#,0), LM_USER_ID = #lmUserId# , 
		 LM_DATE = SYSDATE , TR_STATUS = 'E' , LDG_POINT = #ldgPt#,RECD_PCS = #recdPcs#, RECD_WT  = #recdWt# ,DOC_DISC = #docDisc#,DIR_RMK   = #dirRemark#,TR_TYPE=#trtype# ,SAVE_YN='Y' ,LIC_YN=#licenseUT#
		 Where AWB_NO = #awbNo# and AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')AND 
	 	 Flt_KEY = #fltKey# and FLT_DATE = TO_DATE(#fltDate#,'DDMONYY')
	</update>
	<select id="get_car_awb_count" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		select count(1) from IMP_CAR_AWB where AWB_NO = #awbNo# 
	</select>
	<select id="imp_car_gt_srf_charges"  parameterClass="cargo.cms.imprt.bo.MaintainCARBO" resultClass="cargo.cms.imprt.bo.MaintainCARBO">
		<![CDATA[
			SELECT 
			ITM_CODE itemCode, ITM_CODE_SFX itemSuffix,  AMT chargeAmt
			FROM GT_SRF_CHARGES
			WHERE AWB_NO  = #awbNo# 
			AND AWB_DATE  = TO_DATE(#awbDate#,'DDMONYY') 		
			AND CHRG_TYPE = #chrgType# 
		]]>
	</select>
	<select id="Imp_car_getConsolValue"  parameterClass="map" resultClass="java.lang.Integer">
		<![CDATA[
			SELECT COUNT(1) 
			FROM MAST_HAWB A
			WHERE A.AWB_NO = #awbNo#
			AND A.AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
		]]>
	</select>
	<parameterMap id="MapPrcStrgWoCar" class="map" >
	<parameter property="AWBNO" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	<parameter property="AWBDATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>	
	<parameter property="FLTKEY" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	<parameter property="FLTDATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	<parameter property="MANPCS" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>	
	<parameter property="MANWT" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="INVCNT" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>		
	</parameterMap>
	
	<procedure id="imp_car_callPrcStrgWoCar" parameterMap="MapPrcStrgWoCar" >
		{call PKG_IMP.PRC_STRG_WO_CAR(?,?,?,?,?,?,?)}
	</procedure>
	<select id="imp_car_getRecvPcWt" parameterClass="cargo.cms.imprt.bo.MaintainCARBO"  resultClass="cargo.cms.imprt.bo.MaintainCARBO">
		<![CDATA[
			SELECT SUM(LOCN_PCS) recdPcs, SUM(LOCN_WT) recdWt FROM AWB_INVENTORY
			WHERE FLT_KEY = #fltKey# AND FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') 
			AND AWB_NO = #awbNo# AND AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
		]]>
	</select>
	
	<select id="imp_car_getRecvPcWtOwner" parameterClass="cargo.cms.imprt.bo.MaintainCARBO"  resultClass="cargo.cms.imprt.bo.MaintainCARBO">
		<![CDATA[
			SELECT SUM(RECD_PCS) recdPcs, SUM(RECD_WT) recdWt FROM imp_car_shp WHERE AWB_NO = #awbNo# AND AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
		]]>
	</select>
	
	<select id="imp_car_getRecvPcWt_TS" parameterClass="cargo.cms.imprt.bo.MaintainCARBO"  resultClass="cargo.cms.imprt.bo.MaintainCARBO">
		<![CDATA[
			SELECT SUM(LOCN_PCS) recdPcs, SUM(LOCN_WT) recdWt FROM AWB_INVENTORY
			WHERE AWB_NO = #awbNo# AND AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') 
		]]>
	</select>
	<select id="getAta" parameterClass="map" resultClass="java.lang.String">
			select PKG_COMMON.get_flt_ata(#FLTKEY#, #FLTDATE#, 'A', 'DD') AS ata from dual
	</select>
	<insert id="imp_insertAWBEvents" parameterClass="cargo.cms.imprt.bo.MaintainCARBO">
		<![CDATA[
			INSERT INTO AWB_EVENTS 
			  (AWB_NO, AWB_DATE, EVENT_ID, EVENT_DESC, FLT_KEY, FLT_DATE,
			  FLT_TYPE, TR_NO, ULD_KEY, PCS, WT, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE ) 
			VALUES  
			  (#awbNo#,  TO_DATE(#awbDate#,'DDMONYY') , #eventId#, (SELECT EVENT_DESC FROM MAST_AWB_EVENTS WHERE EVENT_ID = #eventId#), #fltKey#,  TO_DATE(#fltDate#,'DDMONYY'), 
			  'I', AWB_event_SEQ.nextval
			, NULL, nvl(#awbPieces#,0),nvl(#awbWeight#,0) , #lmUserId#,  sysdate, #lmUserId#,  sysdate)
		]]>
	</insert>
	<insert id="imp_insertAWBEventsIU" parameterClass="cargo.cms.imprt.bo.MaintainCARBO">
		<![CDATA[
			INSERT INTO AWB_EVENTS 
			  (AWB_NO, AWB_DATE, EVENT_ID, EVENT_DESC, FLT_KEY, FLT_DATE,
			  FLT_TYPE, TR_NO, ULD_KEY, PCS, WT, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE ) 
			VALUES  
			  (#awbNo#,  TO_DATE(#awbDate#,'DDMONYY') ,'ADIUCAR', 'Amend Dummy IU CAR', #fltKey#,  TO_DATE(#fltDate#,'DDMONYY'), 
			  'I', AWB_event_SEQ.nextval
			, NULL, nvl(#awbPieces#,0), nvl(#awbWeight#,0), #lmUserId#,  sysdate, #lmUserId#,  sysdate)
		]]>
	</insert>
	<insert id="imp_car_insertAWBrmk" parameterClass="cargo.cms.imprt.bo.MaintainCARBO">
		<![CDATA[
			insert into awb_rmk (SEQ_NO, AWB_NO, AWB_DATE, FLT_KEY, FLT_DATE, FLT_TYPE, RMK_TYPE, RMK, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE) values
			(awb_rmk_seq.nextval, #awbNo#,TO_DATE(#awbDate#,'DDMONYY'), #fltKey#,  TO_DATE(#fltDate#,'DDMONYY'), 'I','IMP_CAR',#awbRemark#,#lmUserId#,sysdate,#lmUserId#,sysdate)
		]]>
	</insert>
	<parameterMap id="chrgMap" class="map" >
	<parameter property="AWBNO" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	<parameter property="AWBDATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	<parameter property="AWBTYPE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	<parameter property="PMODE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	<parameter property="FLTKEY" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	<parameter property="FLTDATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	<parameter property="BANKENDO" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	<parameter property="ECT" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	<parameter property="AWBWT" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	<parameter property="AWBBULKWT" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	<parameter property="AWBBUPWT" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	<parameter property="MANWT" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	<parameter property="MANBULKWT" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	<parameter property="MANBUPWT" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	<parameter property="SPL" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	<parameter property="PTAG" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	</parameterMap>
	
	<procedure id="insert_gt_srf_charges" parameterMap="chrgMap" >
		{call prc_srf_car_charges(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)}
	</procedure>
	
	<parameterMap id="map" class="map" >
	<parameter property="AWBNO" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	<parameter property="AWBDATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	<parameter property="AWBTYPE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	</parameterMap>
	<procedure id="modify_SC" parameterMap="map" >
		{call PKG_CALCULATE.MODIFY_STORAGE_CHRG(?,?,?)}
	</procedure>
	
	<select id="get_car_shp_count" parameterClass="map" resultClass="java.lang.Integer">
		select count(1) from IMP_CAR_SHP where Flt_KEY = #fltKey# and FLT_DATE = #fltDate# and AWB_NO =  #awbNo# 
	</select>
	<select id="exchange_rate_for_forgnUnit"  parameterClass="cargo.cms.imprt.bo.MaintainCARBO"  resultClass="cargo.cms.imprt.bo.MaintainCARBO">
		<![CDATA[
		      select EXCH_RATE exchangeRate, FORGN_UNIT foreignUnit
		      from (SELECT  NVL(EXCH_RATE ,0) EXCH_RATE, NVL(FORGN_UNIT,0) FORGN_UNIT, dense_rank() over (partition by CURR_CODE order by EFF_DATE desc) rank
		      FROM  MAST_CURR_EXRATE 
		      WHERE CURR_CODE = #currencyCode# and nvl(CARR_CODE, nvl(#carrCode#, '*')) = nvl(#carrCode#, '*')
		      AND TO_DATE(TO_CHAR(EFF_DATE, 'DDMONYY HH24MI'), 'DDMONYY HH24MI') <= TO_DATE((SELECT DECODE(ACT_DATE, NULL, TO_CHAR(SCH_DATE, 'DDMONYY')||' '||LPAD(SCH_TIME, 4, '0'), TO_CHAR(ACT_DATE, 'DDMONYY')||' '||LPAD(ACT_TIME, 4, '0')) T 
              FROM FLT_OPR WHERE FLT_KEY = #fltKey# AND SCH_DATE = #fltDate# AND FLT_TYPE = 'A' ), 'DDMONYY HH24MI')
		      ) a
		      where rank = 1 and rownum = 1
		]]>
	</select>
	<select id="getawbprefix" parameterClass="java.lang.String" resultClass="cargo.cms.imprt.bo.CarShpBO">
		SELECT CODE as awbPrefix FROM MAST_AWB_PREFIX WHERE 
			CARR_CODE = UPPER(#carrCode#) and def_yn='Y'
	</select>
	<parameterMap id="hmGenerateDummyAWBNoMap" class="map" >
		<parameter property="awbNo" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
	<!--	<parameter property="awbPrefix" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>-->
		<parameter property="awbType" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	</parameterMap>

	<procedure id="generatedummyawbno" parameterMap="hmGenerateDummyAWBNoMap" >
		{? = call FUN_GEN_DUMMY_AWB(?)}
	</procedure>
	<procedure id="generatetmawbno" parameterMap="hmGenerateDummyAWBNoMap" >
		{? = call FUN_TM_AWB(?)}
	</procedure>
	
	<!--  Changed for QR -->
	<select id="fetchLicenseList" parameterClass="cargo.cms.imprt.bo.MaintainCARBO" resultClass="cargo.cms.imprt.bo.MaintainCARBO">
		SELECT LICENSE AS license FROM CST_LICENSE WHERE AWB_NO=#awbNo# AND (HAWB_NO='000000000000000000')
	</select>
	
	<!--  Changed for QR -->
	<select id="fetchPermitList" parameterClass="cargo.cms.imprt.bo.MaintainCARBO" resultClass="cargo.cms.imprt.bo.MaintainCARBO">
		SELECT PERMIT AS permit FROM CST_PERMIT WHERE AWB_NO=#awbNo# AND (HAWB_NO='000000000000000000')	
	</select>
	<select id="imp_AddrInfo"  parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO"  resultClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">		
		SELECT CODE apptdAgtCode , ADD1 apptdAgtAddrOne , ADD2 apptdAgtAddrTwo, ADD3 apptdAgtAddrThree, 
		ADD4 apptdAgtAddrFour, ADD5 apptdAgtAddrFive , CITY city , PIN_CODE pin , CTRY_CODE country FROM CUST_COMPANY WHERE CODE_DESC = #apptdAgt# 	
		<isNotEmpty prepend="AND" property="consYN" >
			CONS_YN='Y' 
		</isNotEmpty> 
		<isNotEmpty prepend="AND" property="agentYN" >
			AGENT_YN='Y'
		</isNotEmpty> 
	</select>
	<select id="imp_maintaincar_cnslist"  parameterClass="cargo.cms.imprt.bo.CommonSearchBO"  resultClass="cargo.cms.imprt.bo.CommonSearchBO">
		SELECT CODE codeId , CODE_DESC codeDesc FROM CUST_COMPANY WHERE CONS_YN = 'Y'
		AND ACTIVE = 'Y'
		<dynamic prepend="AND">
			<isNotEmpty property="codeDesc">
				 CODE_DESC LIKE #codeDesc#
			</isNotEmpty>
		</dynamic>
		Order By CODE_DESC 
	</select>
	<select id="imp_maintaincar_agentlist"  parameterClass="cargo.cms.imprt.bo.CommonSearchBO"  resultClass="cargo.cms.imprt.bo.CommonSearchBO">
		SELECT CODE CODEID , CODE_DESC CODEDESC FROM CUST_COMPANY WHERE AGENT_YN = 'Y' 
		AND ACTIVE = 'Y' AND CODE IN 
		Decode((SELECT AGENT_ID FROM CUST_APP_AGENT WHERE CUST_NO in (SELECT AGENT_ID FROM CUST_APP_AGENT WHERE CUST_NO =#codeId# AND to_date(to_char(sysdate,'DDMONYY'),'DDMONYY') 
		between to_date(to_char(APP_DATE,'DDMONYY'),'DDMONYY') AND to_date(to_char(EXP_DATE,'DDMONYY'),'DDMONYY') and carr_code=#carrCode#) AND 
		to_date(to_char(sysdate,'DDMONYY'),'DDMONYY') between to_date(to_char(APP_DATE,'DDMONYY'),'DDMONYY') AND 
		to_date(to_char(EXP_DATE,'DDMONYY'),'DDMONYY')),null,
		(SELECT AGENT_ID FROM CUST_APP_AGENT WHERE CUST_NO =#codeId# AND to_date(to_char(sysdate,'DDMONYY'),'DDMONYY') 
		between to_date(to_char(APP_DATE,'DDMONYY'),'DDMONYY') AND to_date(to_char(EXP_DATE,'DDMONYY'),'DDMONYY') and carr_code=#carrCode#),
    	(SELECT AGENT_ID FROM CUST_APP_AGENT WHERE CUST_NO in (SELECT AGENT_ID FROM CUST_APP_AGENT WHERE 
    	CUST_NO =#codeId# AND to_date(to_char(sysdate,'DDMONYY'),'DDMONYY') between to_date(to_char(APP_DATE,'DDMONYY'),'DDMONYY') AND to_date(to_char(EXP_DATE,'DDMONYY'),'DDMONYY') and carr_code=#carrCode#) 
    	AND to_date(to_char(sysdate,'DDMONYY'),'DDMONYY') between to_date(to_char(APP_DATE,'DDMONYY'),'DDMONYY') AND to_date(to_char(EXP_DATE,'DDMONYY'),'DDMONYY')))
		Order BY CODE_DESC
	</select>
	<select id="imp_maintaincar_masteragentlist"  parameterClass="cargo.cms.imprt.bo.CommonSearchBO"  resultClass="cargo.cms.imprt.bo.CommonSearchBO">
		SELECT CODE CODEID , CODE_DESC CODEDESC FROM CUST_COMPANY WHERE AGENT_YN = 'Y' AND ACTIVE = 'Y' Order BY CODE_DESC
	</select>
	<insert id="imp_mcar_save_fwb_alias" parameterClass="cargo.cms.imprt.bo.MaintainCARBO" >
		INSERT INTO CUST_AGENT_ALIAS (CUST_NO,ALIAS_NAME,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE) VALUES
		(#consigneeCode#,#fwbCnsgnName#,#lmUserId#,SYSDATE,#lmUserId#,SYSDATE)
	</insert>
	<select id="fetchCustDetails"  parameterClass="cargo.cms.imprt.bo.MaintainCARBO"  resultClass="cargo.cms.imprt.bo.MaintainCARBO">
		SELECT allow_pacco AS AllowPACCO,HNDL_BY_AGT_SRV_YN as handledByAgtSrvInd,HSE_LVL_HNDL_YN as houseFlg, 
		(select 'Y' from cust_agent_sch_coll_time where TO_DATE(#awbDate#,'DDMONYY') BETWEEN eff_from and eff_to 
		<dynamic prepend="AND">
			<isNotEmpty property="appointedAgentCode">
				CUST_NO=#appointedAgentCode# and rownum=1
			</isNotEmpty>
			<isEmpty property="appointedAgentCode">
				CUST_NO in (select code from cust_company where UPPER(CODE_DESC)=UPPER(#appointedAgent#)) and rownum=1 
			</isEmpty>
		</dynamic>  ) as schlCollection
		FROM CUST_COMPANY WHERE CODE=#appointedAgentCode#
	</select>
	<select id="fetchLicUTDetails"  parameterClass="cargo.cms.imprt.bo.MaintainCARBO"  resultClass="java.lang.String">
		select 'Y' as licenseUT from cust_undertaking where carr_code=#carrCode# and 
		TRUNC(SYSDATE) BETWEEN eff_from and eff_to
		<dynamic prepend="AND">
			<isNotEmpty property="appointedAgentCode">
				agent_code=#appointedAgentCode# and rownum=1 
			</isNotEmpty>
			<isEmpty property="appointedAgentCode">
				agent_code in (select code from cust_company where UPPER(CODE_DESC)=UPPER(#appointedAgent#)) and rownum=1 
			</isEmpty>
		</dynamic> 
		AND NOT EXISTS (SELECT NULL FROM IMP_CAR_SHP A,IMP_CAR_AWB B WHERE A.AWB_NO=B.AWB_NO AND A.AWB_DATE=B.AWB_DATE AND  
		A.AWB_NO = #awbNo# AND A.AWB_DATE  = TO_DATE(#awbDate#,'DDMONYY') AND A.SAVE_YN='Y' 
		<dynamic prepend="AND">
			<isNotEmpty property="appointedAgentCode">
				B.AGENT_CUST_NO=#appointedAgentCode# and rownum=1 
			</isNotEmpty>
			<isEmpty property="appointedAgentCode">
				B.AGENT_CUST_NO in (select code from cust_company where UPPER(CODE_DESC)=UPPER(#appointedAgent#)) and rownum=1 
			</isEmpty>
		</dynamic> )
		UNION
		SELECT A.LIC_YN as licenseUT FROM IMP_CAR_SHP A,IMP_CAR_AWB B WHERE A.AWB_NO=B.AWB_NO AND A.AWB_DATE=B.AWB_DATE AND  
		A.AWB_NO = #awbNo# AND A.AWB_DATE  = TO_DATE(#awbDate#,'DDMONYY') AND A.SAVE_YN='Y'  
		<dynamic prepend="AND">
			<isNotEmpty property="appointedAgentCode">
				B.AGENT_CUST_NO=#appointedAgentCode# and rownum=1 
			</isNotEmpty>
			<isEmpty property="appointedAgentCode">
				B.AGENT_CUST_NO in (select code from cust_company where UPPER(CODE_DESC)=UPPER(#appointedAgent#)) and rownum=1 
			</isEmpty>
		</dynamic>
	</select>
	<select id="fetchAgtDetails"  parameterClass="cargo.cms.imprt.bo.MaintainCARBO"  resultClass="cargo.cms.imprt.bo.MaintainCARBO">
		SELECT CODE as appointedAgentCode,CODE_DESC as appointedAgent,allow_pacco AS AllowPACCO,HNDL_BY_AGT_SRV_YN as handledByAgtSrvInd,HSE_LVL_HNDL_YN as houseFlg, AGENT_YN agentYN,
		(select 'Y' from cust_agent_sch_coll_time where TO_DATE(#awbDate#,'DDMONYY') BETWEEN eff_from and eff_to 
		<dynamic prepend="AND">
			<isNotEmpty property="appointedAgentCode">
				CUST_NO=#appointedAgentCode# and rownum=1 
			</isNotEmpty>
			<isEmpty property="appointedAgentCode">
				CUST_NO in (select code from cust_company where UPPER(CODE_DESC)=UPPER(#appointedAgent#)) and rownum=1 
			</isEmpty>
		</dynamic>  ) as schlCollection
		 FROM CUST_COMPANY WHERE 1=1 
		<dynamic prepend="AND">
			<isNotEmpty property="appointedAgentCode">
				CODE=#appointedAgentCode#
			</isNotEmpty>
			<isEmpty property="appointedAgentCode">
				UPPER(CODE_DESC)=UPPER(#appointedAgent#)
			</isEmpty>
		</dynamic>
	</select>
	
	<select id="validateforTM"  parameterClass="cargo.cms.imprt.bo.MaintainCARBO"  resultClass="java.lang.Integer">
		select COUNT(1) from imp_car_shp a,imp_car_awb b where a.flt_key=#fltKey# and a.FLT_DATE=TO_DATE(#fltDate#,'DDMONYY') 
		AND b.CATALOG='TM' AND b.AWB_DEST=#awbDestination# AND A.awb_no = b.awb_no AND A.awb_no!=#awbNo#
	</select>
	
	<update id="updateExportCarDetails" parameterClass="cargo.cms.imprt.bo.MaintainCARBO">
		UPDATE EXP_CAR SET
			CSGNE_NAME  = #consigneeName#,
			CSGNE_ADDR = #consAddrOne#,	
			CSGNE_ADDR2 = #consAddrTwo#,	
			CSGNE_ADDR3 = #consAddrThree#,	
			CSGNE_ADDR4 = #consAddrFour#,	
			CSGNE_PLACE = #consCity#,	
			CSGNE_PIN_CODE = #consPin#,	
			CSGNE_CTRY_CODE = #consCountry#,
			LM_USER_ID =  #lmUserId#, 
			LM_DATE  = SYSDATE,
			SHPR_NAME = #shprName#,
			SHPR_ADDR = #shprAddrOne#,	
			SHPR_ADDR2 = #shprAddrTwo#,	
			SHPR_ADDR3 = #shprAddrThree#,	
			SHPR_ADDR4 = #shprAddrFour#,	
			SHPR_PLACE = #shprCity#,
			SHPR_CTRY_CODE = #shprCountry#,
			SHPR_PIN_CODE =#shprPin#,
			DEST = #awbDestination#,
			ORIGIN = #awbOrigin#,
			LOCK_IND = #locked#,
			PCS      = nvl(#awbPieces#,0),  
			WT      = nvl(#awbWeight#,0), 
			CONTENT      = #content#,
			CATALOG      = #catalog#,
			SPL_CODE1     = #splCode1#, 
			SPL_CODE2     = #splCode2#, 
			SPL_CODE3     = #splCode3#,  
			SPL_CODE4     = #splCode4#,  
			SPL_CODE5     = #splCode5#,  
			SPL_CODE6     = #splCode6#,  
			SPL_CODE7     = #splCode7#,  
			SPL_CODE8     = #splCode8#, 
			SPL_CODE9     = #splCode9#,
			AIRL_RMK = #awbRemark# ,
			SHPR_STATE_PROVINCE = #shpState#,
			CSGNE_STATE_PROVINCE = #cnsgnState#,
			TR_TYPE = 'DUMMY',
			AGENT_CODE = #appointedAgentCode#,
			AGENT_NAME = #appointedAgent#  
			WHERE  AWB_NO   = #awbNo# AND AWB_DATE  = TO_DATE(#awbDate#,'DDMONYY')
	</update>
	
	<!--  Changed for QR -->
	<select id="validateBooking"  parameterClass="cargo.cms.imprt.bo.MaintainCARBO"  resultClass="java.lang.Integer">
		SELECT count(1) 
		FROM IMP_BOOKING bkghd
	    join IMP_BOOKING_DTL bkgdtl on bkghd.BOOKING_NO = bkgdtl.BOOKING_NO  
	    WHERE bkghd.STATUS = 'ISSUED' and bkgdtl.AWB_NO = #awbNo# AND bkgdtl.AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
          		and bkgdtl.flt_key = #fltKey# and bkgdtl.FLT_DATE = TO_DATE(#fltDate#,'DDMONYY')  
	</select>
	
	<select id="getFinaliseLockInd"  parameterClass="map" resultClass="java.lang.Integer">
		SELECT count(1)	
		FROM awb 	
		WHERE AWB_NO = UPPER(#awbNo#) AND
		  AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') and (nvl(CCLOCK_IND,'N') = 'Y' OR nvl(MLOCK_IND,'N') = 'Y' OR nvl(DCLOCK_IND,'N') = 'Y')
	</select>	
	
	<insert id="save_imp_awb" parameterClass="cargo.cms.imprt.bo.MaintainCARBO">
	<![CDATA[
		INSERT INTO AWB (AWB_TYPE,AWB_NO,AWB_DATE,BLDUP_BULK_PCS,BLDUP_BULK_WT,
			CONTENT,CATALOG,SPL_CODE1,SPL_CODE2,SPL_CODE3,  
			SPL_CODE4,SPL_CODE5,SPL_CODE6,SPL_CODE7,SPL_CODE8,SPL_CODE9,
			AWB_RMK,LM_USER_ID ,LM_DATE,CR_USER_ID, CR_DATE, PPK_TYPE,CARR_CODE,CAR_YN,ORIG,DEST,AGENT_CODE,SHPR_CODE,AGENT_NAME,SHIPPER_NAME,FINALLOCK_IND,PCS,WT,
			NON_PMAN_PCS,NON_PMAN_WT,TR_TYPE,EXP_AWB_LOCK,ACCEPT_MODE,CNSL_IND,AIRLN_RMK) 
		VALUES(#awbType#,#awbNo#,TO_DATE(#awbDate#,'DDMONYY'), 
			nvl(#awbPieces#,0),nvl(#awbWeight#,0),#content#,#catalog#,#splCode1#,
			#splCode2#,#splCode3#,#splCode4#,#splCode5#,#splCode6#,#splCode7#,#splCode8#,#splCode9#,
			#whRemarks#,#lmUserId#,SYSDATE,#lmUserId#,SYSDATE,#ppkTypeAwb#,#carrCode#,#carCreated#,#awbOrigin#,#awbDestination#,#appointedAgentCode#,#consigneeCode#,
			#appointedAgent#,#shprName#,#finaliseLockInd#,nvl(#awbPieces#,0),nvl(#awbWeight#,0),
			DECODE(#awbType#,'T',NVL(#awbPieces#,0),0),DECODE(#awbType#,'T',NVL(#awbWeight#,0),0),#trtype#,#locked#,DECODE(#awbType#,'T','TRN',null),#consolInd#,#awbRemark#)  
	]]>
	</insert>
	<select id="chkAwbSHCLock"  parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		select COUNT(1) from awb a where a.awb_no=#AWB_NO# AND a.AWB_DATE  = TO_DATE(#AWB_DATE#,'DDMONYY') and NVL(SHCLOCK_IND,'N') = 'Y' 
	</select>
	<update id="update_imp_awb" parameterClass="cargo.cms.imprt.bo.MaintainCARBO">
			UPDATE AWB SET 
				BLDUP_BULK_PCS = nvl(#bldUpBlkPcs#,BLDUP_BULK_PCS),	
				BLDUP_BULK_WT = nvl(#bldUpBlkWt#,BLDUP_BULK_WT),	
				CONTENT = #content#,	
				CATALOG = #catalog#,	
				SPL_CODE1 = #splCode1#,
				SPL_CODE2 = #splCode2#,	
				SPL_CODE3 = #splCode3#,	
				SPL_CODE4 = #splCode4#,
				SPL_CODE5 =  #splCode5#, 
				SPL_CODE6  = #splCode6#,
				SPL_CODE7 = #splCode7#,
				SPL_CODE8 = #splCode8#,	
				SPL_CODE9 = #splCode9#,	
				AWB_RMK = #whRemarks#,	
				LM_USER_ID = #lmUserId#,	
				LM_DATE = SYSDATE,
				ORIG = #awbOrigin#,
				DEST = #awbDestination#,
				AGENT_CODE = #appointedAgentCode#,
				SHPR_CODE = #consigneeCode#,
				AWB_TYPE = #awbType#,
				SHCLOCK_IND = #shcLockInd#,
				SHIPPER_NAME = #shprName#,
				AGENT_NAME = #appointedAgent# ,
				FINALLOCK_IND = #finaliseLockInd#,
				PCS = nvl(#awbPieces#,0),
    			WT = nvl(#awbWeight#,0) ,
    			CAR_YN = DECODE(#awbType#,'T','Y',CAR_YN) ,
    			NON_PMAN_PCS = DECODE(#awbType#,'T',NVL(#awbPieces#,0)-PMAN_PCS,NON_PMAN_PCS), 
    			NON_PMAN_WT = DECODE(#awbType#,'T',NVL(#awbWeight#,0)-PMAN_WT,NON_PMAN_WT),
    			TR_TYPE =#trtype#  ,
    			EXP_AWB_LOCK = #locked#,
    			HOUSE_FLG = nvl(#houseFLgYN#,#houseFlg#),
    			ACCEPT_MODE = DECODE(#awbType#,'T',DECODE(accept_mode,'TIT',accept_mode,'TRN'),null) ,
    			AIRLN_RMK = #awbRemark# ,
    			CNSL_IND = #consolInd#   
				WHERE  AWB_NO   = #awbNo#
				AND AWB_DATE  = TO_DATE(#awbDate#,'DDMONYY')
	</update>	
	<select id="sqlValidateCnsgnCode"  parameterClass="java.lang.String" resultClass="java.lang.Integer">
	<![CDATA[
			SELECT COUNT(1) as count FROM CUST_COMPANY WHERE CODE =UPPER(#PARAM#) AND CONS_YN = 'Y' AND ACTIVE = 'Y'
		]]>
   	</select>
   	<select id="sqlValidateAgtCode"  parameterClass="java.lang.String" resultClass="java.lang.Integer">
	<![CDATA[
			SELECT COUNT(1) as count FROM CUST_COMPANY WHERE CODE =UPPER(#PARAM#) AND AGENT_YN = 'Y' AND ACTIVE = 'Y'
		]]>
   	</select>
   	<select id="sqlValidateCountry"  parameterClass="java.lang.String" resultClass="java.lang.Integer">	
		SELECT count(1) FROM MAST_COUNTRY WHERE CODE = UPPER(#PARAM#)		
	</select>
	<select id="sqlValidateCity"  parameterClass="java.lang.String" resultClass="java.lang.Integer">	
		SELECT count(1) FROM MAST_CITY WHERE CODE_DESC = UPPER(#PARAM#)		
	</select>
	<select id="validateSRFIssued"  parameterClass="cargo.cms.imprt.bo.MaintainCARBO"  resultClass="java.lang.Integer">
	  <![CDATA[
		SELECT COUNT(1) FROM IMP_SRF T WHERE AWB_NO = #awbNo# AND AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY')
				AND (STATUS  ='ISSUED' AND sysdate  < srf_expy_date 
              OR EXISTS (SELECT NULL FROM imp_srf_awb_inventory WHERE srf_no = t.srf_no AND t.status = 'ISSUED' AND dlv_pcs  > 0) )
          ]]> 
	</select>
	
	<!--  Changed for QR -->
	<select id="validateTruckManifest"  parameterClass="cargo.cms.imprt.bo.MaintainCARBO"  resultClass="java.lang.Integer">
		SELECT count(1) from truck_manifest hd
	    join TRUCK_MANIFEST_DTL dtl on hd.truck_manf_no = dtl.truck_manf_no
	    where to_date(((to_char(sch_coll_date,'DDMONYY'))||to_char(sch_coll_to,'0000')),'DDMONYYHH24MI')>to_date(to_char(sysdate,'DDMONYY HH24MI'),'DDMONYY HH24MI')  
	          and dtl.AWB_NO = #awbNo# AND dtl.AWB_DATE  = TO_DATE(#awbDate#,'DDMONYY')
			  and dtl.flt_key = #fltKey# and dtl.FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') 
	</select>
	
	<!--  Changed for QR 
	<update id="update_mail_tags" parameterClass="cargo.cms.imprt.bo.MaintainCARBO">
		update IMP_XPS_OBC_MAIL set awb_no = #awbNo#,AWB_DATE=TO_DATE(#awbDate#,'DDMONYY') 
		where flt_key=#fltKey# and flt_date=TO_DATE(#fltDate#,'DDMONYY') 
		and dest=#awbDestination# and catalog='TM' and awb_no is null
	</update>-->
	<select id="validateAwbMissing"  parameterClass="cargo.cms.imprt.bo.MaintainCARBO"  resultClass="java.lang.Integer">
		SELECT count(1) FROM AWB_LOCK WHERE AWB_NO = #awbNo# AND MISS_YN='Y'
	</select>
	<insert id="save_gt_cms" parameterClass="cargo.cms.imprt.bo.MaintainCARBO">
	INSERT INTO GT_CMS
	 		(COLUMN_1, COLUMN_2, COLUMN_3, COLUMN_4, COLUMN_5, COLUMN_6)
	 VALUES
	 	   (#awbNo#, #awbDate#, #fltKey#, #fltDate#, '', #carCreated#)
	</insert>
	<insert id="save_exp_car_awb" parameterClass="cargo.cms.imprt.bo.MaintainCARBO">
		<![CDATA[
			INSERT INTO EXP_CAR (AWB_NO,AWB_DATE,AWB_PRFX,ORIGIN,DEST,PCS,WT,
				CONTENT,CATALOG,SPL_CODE1,SPL_CODE2,SPL_CODE3,  
				SPL_CODE4,SPL_CODE5,SPL_CODE6,SPL_CODE7,SPL_CODE8,SPL_CODE9,
				CSGNE_NAME, AGENT_CODE,	HANDLER_CODE,AIRL_RMK,
				LM_USER_ID ,LM_DATE,CR_USER_ID, CR_DATE,
				CSGNE_ADDR, CSGNE_ADDR2, CSGNE_ADDR3, CSGNE_ADDR4, CSGNE_PLACE, CSGNE_CTRY_CODE, CSGNE_PIN_CODE,
				SHPR_ADDR,SHPR_ADDR2,SHPR_ADDR3,SHPR_ADDR4,SHPR_NAME,SHPR_PLACE,SHPR_CTRY_CODE,SHPR_PIN_CODE,LOCK_IND,
	      		CARR_CODE,ACCEPT_MODE,WH_RMK,SHPR_STATE_PROVINCE,CSGNE_STATE_PROVINCE,AGENT_NAME) 
	      VALUES(#awbNo#,TO_DATE(#awbDate#,'DDMONYY'),#awbPrefix#,#awbOrigin#,#awbDestination#, 
				nvl(#awbPieces#,0),nvl(#awbWeight#,0),#content#,#catalog#,#splCode1#,
				#splCode2#,#splCode3#,#splCode4#,#splCode5#,#splCode6#,#splCode7#,#splCode8#,#splCode9#,
				#consigneeName#, #appointedAgentCode#,
				#ectHandler#,#awbRemark#,#lmUserId#,SYSDATE,#lmUserId#,SYSDATE,
				#consAddrOne#,#consAddrTwo#,#consAddrThree#,#consAddrFour#,#consCity#,#consCountry#,#consPin#,
				#shprAddrOne#,#shprAddrTwo#,	
				#shprAddrThree#,#shprAddrFour#,#shprName#,#shprCity#,#shprCountry#,#shprPin#,
				#locked#,#carrCode#,'TRN',#whRemarks#,#shpState#,#cnsgnState#,#appointedAgent#) 
		]]>
	</insert>	
	<select id="checkExpCarCount"  parameterClass="cargo.cms.imprt.bo.MaintainCARBO" resultClass="java.lang.Integer">
		<![CDATA[
				SELECT COUNT(1) as count FROM EXP_CAR WHERE  AWB_NO = #awbNo# AND AWB_DATE  = TO_DATE(#awbDate#,'DDMONYY')
		]]>
   	</select>
   	
   	 <select id="sqlvalidatelocnuldInventory" parameterClass="java.lang.String" resultClass="java.lang.Integer">
	 	select count(1) from 
	 	MAST_WH_LOC t1, mast_wh_group t2 where t1.wh_group = t2.WH_GROUP and t2.wh_type = 'MHS'
    	 AND t1.CODE = (select loc_code from uld_inventory where uld_key = #PARAM#)
	</select>
   	
   	<delete id="delete_exp_car" parameterClass="cargo.cms.imprt.bo.MaintainCARBO" >
		DELETE from EXP_CAR	WHERE AWB_NO = #awbNo# AND AWB_DATE  = TO_DATE(#awbDate#,'DDMONYY')
	</delete>
	
	<!--  Changed for QR -->
	<select id="checkAWBExistsImpCAR_AWBOwner" parameterClass="cargo.cms.imprt.bo.MaintainCARBO" resultClass="java.lang.Integer">
		SELECT COUNT(1) 
		FROM AWB_OWNER 
		WHERE CARR_CODE = #carrCode# and awb_no=#awbNo# 
		   AND AWB_DATE =  to_date(#awbDate#,'DDMONYY')
	</select>
	<insert id="insertImpCAR_AWBOwner" parameterClass="cargo.cms.imprt.bo.MaintainCARBO">
		Insert into AWB_OWNER (AWB_NO,AWB_DATE,CARR_CODE,PCS,WT,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,BU_PCS,OFFLOAD_PCS) 
		values (#awbNo#,to_date(#awbDate#,'DDMONYY'),#carrCode#,#awbPieces#,#awbWeight#,#lmUserId#,sysdate,#lmUserId#,sysdate,null,null)
	</insert>
	
	<!--  Changed for QR -->
	<update id="updateImpCAR_AWBOwner" parameterClass="cargo.cms.imprt.bo.MaintainCARBO">
		UPDATE AWB_OWNER SET PCS=#awbPieces#,WT=#awbWeight#,LM_USER_ID=#lmUserId#,LM_DATE=sysdate WHERE CARR_CODE = #carrCode# and awb_no=#awbNo# 
		   AND AWB_DATE =  to_date(#awbDate#,'DDMONYY')
	</update>
	<delete id="delete_exp_car_AWBOwner" parameterClass="cargo.cms.imprt.bo.MaintainCARBO" >
		DELETE from AWB_OWNER	WHERE AWB_NO = #awbNo# AND AWB_DATE  = TO_DATE(#awbDate#,'DDMONYY') 
	</delete>
<!-- Maintain CAR Queries End -->

	<!--  Changed for QR -->
	<insert id="imp_uld_checkin_inventory_ins" parameterClass="cargo.cms.imprt.bo.ULDCheckInBO" >	
			INSERT INTO uld_inventory(
			CFM_STATUS,
		    uld_key     ,
		    uld_type    ,
		    uld_no      ,
		    uld_carr    ,
		    loc_code    ,
		    DAM_IND     ,
		    SER_IND ,
		    owner_id    ,
		    gen_rmk     ,
		    eic_flg     ,
		    empty_flg   ,
		    STRG_DATE   ,
		    LM_USER_ID  ,
		    LM_DATE     ,
		    CONTR_CODE  ,
		    REF_TR_DATE ,
		    REF_TR_EVENT,
		    REF_RMK,
		    OWNED_INV,
		    REF_TR_NO,
		    REF_TR_TYPE,
		    REF_IN_CARR,
		    REF_OUT_CARR,
		    REF_DOC_LINE_NO,		    
		    OFLD_FLG,		    
		    BB_IND,
		    MIX_PPK_IND,
		    DG_IND,
		    HANDLING_MODE,		
		    TRANSIT_FLG,		  
		    SOURCE_CODE,
		    AGENT_ID,		    
			ASV_INV,
			LOCKED,
			LOCK_RQS,
			AGENT_INV,
			TARGET,
			TR_TYPE,
			TARE_WEIGHT,
			FIRST_WT,
			PARENT_OWNER,
			ENTRY_TIME				
			 <isNotEmpty property="eic"> 
			 	<isEqual property="eic" compareValue="Y">		
			 	,EIC_TYPE, 
				BASE_PAL_FLG
				</isEqual>
				<isEqual property="eic" compareValue="N">		
				,EIC_UNLDG_PT,
				EIC_TYPE, 
				BASE_PAL_FLG,
				BASE_PLT
				</isEqual>
			</isNotEmpty>	
			 <isEmpty property="eic">
				,EIC_UNLDG_PT,
				EIC_TYPE, 
				BASE_PAL_FLG,
				BASE_PLT
			</isEmpty>	
			<isEmpty property="transferType">		
					,CARR_CODE,
				    FLT_NO, 
					FLT_TYPE, 
					FLT_DATE, 
					FLT_KEY,		
					IMP_FLT_CARR,
				    IMP_FLT_DATE,
				    IMP_FLT_KEY,
				    IMP_FLT_NO,
				    FINAL_WEIGHT,
					DOUBLE_WGT_RSLT,							
					X_RAY_RES,	X_RAY_REQ,						
					ULD_FLOW			
			</isEmpty>			
		    <isNotEmpty property="transferType">		
				<isNotEqual property="transferType" compareValue="IF">
					,CARR_CODE,
				    FLT_NO, 
					FLT_TYPE, 
					FLT_DATE, 
					FLT_KEY,	
					IMP_FLT_CARR,
				    IMP_FLT_DATE,
				    IMP_FLT_KEY,
				    IMP_FLT_NO,							
					ULD_FLOW
				</isNotEqual>
			</isNotEmpty>									
		  ) VALUES (
		    'CONFIRMED',
		    #uldKey#      ,
		    #uldType#     ,
		    #uldNo#       ,
		    #uldCarr# ,
		    #locCode#,
		    #damInd#      ,
		    DECODE (NVL(#damInd#,'N'),'N','Y','Y','N'),
		    #carrierCode#,
		  #remark# ,
		  nvl(#eic#,'N')    ,
		  #empty#  ,
		  SYSDATE  ,
		  #crUser# ,
		  SYSDATE  ,
		  #contour#,
		  SYSDATE  ,
		  'CHK' ,
		  #remark#,
		  'Y',
		  ULD_TR_SEQ.NEXTVAL,
		  'IR',
		  '',
		  null,			
			 <isNotEmpty property="docLineNo"> 
			#docLineNo#,
		</isNotEmpty>
		<isEmpty property="docLineNo"> 
			 '1',
		</isEmpty>		 
		  'N',
		 
		  'N',
		  'N',
		  'N',
		  #handlingMode#,	 
		  #transitInd#,					 
		  #source#,
		  #agentName#,		  
			'N',
			'N',
			'N',
			'N',
			null,
		  #trtype#,
		  #tareWeight#,	
		  #firstWeight#,	 
		  #carrierCode#,
		  sysdate
		   <isNotEmpty property="eic"> 
			 	<isEqual property="eic" compareValue="Y">		
				,'EIC', 
				'Y'
				</isEqual>
				<isEqual property="eic" compareValue="N">		
				,null, 
				null,
				'N',
				null
				</isEqual>
			</isNotEmpty>	
			 <isEmpty property="eic">			 		
				,null, 
				null,
				'N',
				null 
			</isEmpty>	
			
			<isEmpty property="transferType">	
					,#carrierCode#,
					#flightNo#,	
					'I',
					#flightDate#,
					#flightKey#,				
					#carrierCode#,
				    #flightDate#,
				    #flightKey#,
				    #flightNo#,	
				     null,
		  			 null,				
		  			 null,null,		
		  			 'I'		
			</isEmpty>			  
		  <isNotEmpty property="transferType"> 				
				<isNotEqual property="transferType" compareValue="IF">
					,#carrierCode#,
					#flightNo#,	
					'I',
					#flightDate#,
					#flightKey#,	
					#carrierCode#,
				    #flightDate#,
				    #flightKey#,
				    #flightNo#,					
		  			 'I'
				</isNotEqual>
			</isNotEmpty>		  		  
		  )			 		 
	</insert>	
	
	<update id="sqlRemoveBasePltAsc" parameterClass="cargo.cms.imprt.bo.ULDCheckInBO" >		
		UPDATE ULD_INVENTORY SET 		
		BASE_PLT=NULL,		
		EIC_FLG='N', 		
		EIC_TYPE=NULL
		WHERE BASE_PLT = #uldKey# 	
	</update>	
	
	<update id="imp_uld_checkin_flightNotFound_upd" parameterClass="cargo.cms.imprt.bo.ULDCheckInBO" >		
		UPDATE ULD_INVENTORY SET 		
		LM_DATE=SYSDATE,		
		LM_USER_ID=#lmUser#, 		
		LOC_CODE=#locCode#,
		CFM_STATUS='CONFIRMED', 
		OWNED_INV = 'Y',				
		GEN_RMK	 = #remark#, 
		RESV_RMK = null, 
		DAM_IND = #damInd#,
		SER_IND = DECODE (NVL(#damInd#,'N'),'N','Y','Y','N'),
		DAM_RMK	 = null,		
		EMPTY_FLG = #empty#,
		EIC_FLG = nvl(#eic#,'N'),
		AGENT_INV = 'N',
		AGENT_ID = #agentName#,
		SOURCE_CODE = #source#,	
		STRG_DATE=sysdate,
		RHO_STAFF = #rhoStaffId#,
		<isNotEmpty property="owner"> 	
			OWNER_ID=#owner#,
			PARENT_OWNER=#owner#, 
		</isNotEmpty>		
		<isEmpty property="owner"> 	
			OWNER_ID=#carrierCode#,
			PARENT_OWNER=#carrierCode#, 
		</isEmpty>				 
		REF_TR_NO = #uldNo#,
		REF_TR_TYPE = 'IR',			 
		REF_TR_DATE = SYSDATE, 		
		REF_TR_EVENT = 'CHK', 
			 <isNotEmpty property="docLineNo"> 
			REF_DOC_LINE_NO = #docLineNo#,
		</isNotEmpty>
		<isEmpty property="docLineNo"> 
			REF_DOC_LINE_NO = '1',
		</isEmpty>			
			BASE_PLT = null,
			EIC_UNLDG_PT = null,
		 <isNotEmpty property="eic"> 
			 	<isEqual property="eic" compareValue="Y">
				EIC_TYPE = 'EIC', 
				BASE_PAL_FLG = 'Y',				
				</isEqual>
				<isEqual property="eic" compareValue="N">					
					EIC_TYPE = null, 
					BASE_PAL_FLG = 'N',
				</isEqual>
		</isNotEmpty>
		<isEmpty property="eic"> 			
			EIC_TYPE = null, 
			BASE_PAL_FLG = 'N',
		</isEmpty>	
		ASV_INV = 'N',	
		TARE_WEIGHT=#tareWeight#,		
		<isEmpty property="transferType">
			FLT_NO = #flightNo#, 
			FLT_TYPE = 'I', 
			FLT_DATE = #flightDate#, 
			FLT_KEY = #flightKey#,
			IMP_FLT_CARR = #carrierCode#,
			IMP_FLT_DATE = #flightDate#,
			IMP_FLT_KEY = #flightKey#,
			IMP_FLT_NO = #flightNo#,
			ULD_FLOW  = 'I',
			GROSS_WEIGHT='0',		
			FIRST_WT=#firstWeight#, 
			SECOND_WT='', 
			THIRD_WT='', 	
			CONTR_CODE= #contour#,
			FINAL_WEIGHT = null,
			DOUBLE_WGT_RSLT = null,
			X_RAY_RES = null,X_RAY_REQ=null,  
			TRANSIT_TYPE = null,
		</isEmpty>	
				  
		<isNotEmpty property="transferType"> 				
			<isNotEqual property="transferType" compareValue="IF">
				<isNotEqual property="transferType" compareValue="LD">
					FLT_NO = #flightNo#, 
					FLT_TYPE = 'I', 
					FLT_DATE = #flightDate#, 
					FLT_KEY = #flightKey#,
					IMP_FLT_CARR = #carrierCode#,
					IMP_FLT_DATE = #flightDate#,
					IMP_FLT_KEY = #flightKey#,
					IMP_FLT_NO = #flightNo#,
					ULD_FLOW  = 'I',
				</isNotEqual>
				<isEqual property="transferType" compareValue="LD">
					FLT_NO = #flightNo#, 
					FLT_TYPE = 'I', 
					FLT_DATE = #flightDate#, 
					FLT_KEY = #flightKey#,
					IMP_FLT_CARR = #carrierCode#,
					IMP_FLT_DATE = #flightDate#,
					IMP_FLT_KEY = #flightKey#,
					IMP_FLT_NO = #flightNo#,
					ULD_FLOW  = 'I',
					GROSS_WEIGHT='0',		
					FIRST_WT=#firstWeight#, 
					SECOND_WT='', 
					THIRD_WT='', 
					FINAL_WEIGHT = null,
					DOUBLE_WGT_RSLT = null,	
					X_RAY_RES = null,X_RAY_REQ=null,  				
				</isEqual>
			</isNotEqual>
			<isEqual property="transferType" compareValue="IF">
				IMP_FLT_CARR = #carrierCode#,
				IMP_FLT_DATE = #flightDate#,
				IMP_FLT_KEY = #flightKey#,
				IMP_FLT_NO = #flightNo#,				
			</isEqual>
			CONTR_CODE= #contour#,
		</isNotEmpty>							
		TARGET=null, 				
		REF_WT='', 		
		OFLD_FLG='N',
		BB_IND='N',
		LOCKED = 'N',
		LOCK_RQS = 'N',	
		PPK_IND='N',		
		MIX_PPK_IND='N',
		MAN_WT_IND  = 'N',
		man_wt_ind2 = 'N',
		man_wt_ind3 = 'N',
		HANDLING_MODE=#handlingMode#,	
		TRANSIT_FLG = #transitInd#,		
		DG_IND='N',
		RESV_FLG = 'N',
		TR_TYPE =#trtype#,
		ENTRY_TIME = sysdate		
		WHERE ULD_KEY=#uldKey# 	
	</update>	

<update id="imp_uld_checkin_inventory_del" parameterClass="cargo.cms.imprt.bo.ULDCheckInBO" >		
		UPDATE ULD_INVENTORY SET 		
		LM_DATE=SYSDATE,
		LM_USER_ID=#lmUser#,
		CFM_STATUS='REMOVED', 
		LOC_CODE=NULL,
		
		GEN_RMK	 = #remark#, 
		RESV_RMK	 = null, 
		DAM_IND = 'N',
		DAM_RMK	 = null,
		EMPTY_FLG = 'Y',
		EIC_FLG = 'N',
		BASE_PLT = null,	
		EIC_UNLDG_PT = null,			
		EIC_TYPE = null, 
		BASE_PAL_FLG = 'N',
		AGENT_INV = 'N',
		AGENT_ID = NULL,
		OWNED_INV = 'N',	
		REF_TR_NO = #uldNo#,
		REF_TR_TYPE = 'IR',
		REF_TR_DATE = SYSDATE, 		
		REF_TR_EVENT = 'UNCHK', 
		<isNotEmpty property="docLineNo"> 
			REF_DOC_LINE_NO = #docLineNo#,
		</isNotEmpty>
		<isEmpty property="docLineNo"> 
			REF_DOC_LINE_NO = '1',
		</isEmpty>			 		
		
		ASV_INV = 'N',	
		<isEmpty property="transferType">				
			FLT_NO = null, 
			FLT_TYPE = null, 
			FLT_DATE = null, 
			FLT_KEY = null,
			IMP_FLT_CARR='',
			IMP_FLT_DATE='',
			IMP_FLT_KEY='',
			IMP_FLT_NO='', 			
			ULD_FLOW = 'I',
			GROSS_WEIGHT = '0',
			FIRST_WT='', 
			SECOND_WT='', 
			THIRD_WT='',
			TARE_WEIGHT=0,
			CONTR_CODE=null,
			FINAL_WEIGHT = null,
			DOUBLE_WGT_RSLT = null,
			X_RAY_RES = null,X_RAY_REQ=null, 
			TRANSIT_TYPE = null,
		</isEmpty>	
		<isNotEmpty property="transferType"> 				
			<isNotEqual property="transferType" compareValue="IF">
				FLT_NO = null, 
				FLT_TYPE = null, 
				FLT_DATE = null, 
				FLT_KEY = null,
				IMP_FLT_CARR='',
				IMP_FLT_DATE='',
				IMP_FLT_KEY='',
				IMP_FLT_NO='', 
				ULD_FLOW = 'I',
			</isNotEqual>
		</isNotEmpty>			
		TARGET=null,		 
		REF_WT='', 		
		OFLD_FLG='N',		
		BB_IND='N',
		MIX_PPK_IND='N',
		PPK_IND='N',
		DG_IND='N',
		LOCKED = 'N',
		LOCK_RQS = 'N',
		HANDLING_MODE=null,		
		TR_TYPE =#trtype#,
		RESV_FLG = 'N',
		ULDENTRY_MSG_RCVD_YN = 'N'			
		WHERE ULD_KEY=#uldKey# 			
	</update>	
	
	<insert id="imp_uld_checkin_empty_flightNotFound_ins" parameterClass="java.util.HashMap">
		insert into uld_inventory(
			uld_key,
			uld_type,
			uld_no,
			uld_carr,
			loc_code,
			DAM_IND,
			owner_id,
			source_code,			
			eic_flg,
			empty_flg,
			STRG_DATE,
			PPK_IND,
			LM_USER_ID,
			LM_DATE,
			AGENT_INV,
			CFM_STATUS,
			RESV_FLG,
			OWNED_INV,
			CONTR_CODE,
			REF_TR_NO, 
			REF_TR_TYPE, 
			REF_TR_DATE, 
			REF_IN_CARR, 
			REF_OUT_CARR, 
			REF_DOC_LINE_NO, 
			REF_LOC_FROM, 
			REF_TR_EVENT, 
			AGENT_ID,			
			SER_IND,
			ENTRY_TIME	
			
			 <isNotEmpty property="eic"> 
			 	<isEqual property="eic" compareValue="Y">		
				,EIC_TYPE, 
				BASE_PAL_FLG
				</isEqual>
				<isEqual property="eic" compareValue="N">		
				,BASE_PLT,		
				EIC_UNLDG_PT,
				EIC_TYPE, 
				BASE_PAL_FLG
				</isEqual>
			</isNotEmpty>	
			 <isEmpty property="eic">
				,BASE_PLT,		
				EIC_UNLDG_PT,
				EIC_TYPE, 
				BASE_PAL_FLG
			</isEmpty>				
			,OFLD_FLG,
			BB_IND,
			MIX_PPK_IND,
			DG_IND,
			HANDLING_MODE,			
			ASV_INV,
			LOCKED,
			LOCK_RQS,
			TARGET,
			tare_weight,
		    gross_weight,
		  	TR_TYPE,
		  	PARENT_OWNER,
		  	FINAL_WEIGHT,
		  	DOUBLE_WGT_RSLT	,
		  	X_RAY_RES,X_RAY_REQ 
			) 
			values (
			#uld_key#,
			#uld_type#,
			#uld_no#,
			#uld_carr#,
			#loc_code#,
			#condn_code#,
			#owner_id#,
			#source_code#,			
			nvl(#eic_flg#,'N'),
			#empty_flg#,
			SYSDATE,
			#PPK_IND#,
			#LM_USER_ID#,
			SYSDATE,
			'N',
			#CFM_STATUS#,
			#RESV_FLG#,
			'Y',
			null,
			ULD_TR_SEQ.NEXTVAL,
			'EU',
			SYSDATE,
			'',
			null,
			<isNotEmpty property="docLineNo"> 
			#docLineNo#,
		</isNotEmpty>
		<isEmpty property="docLineNo"> 
			 '1',
		</isEmpty>	
			#loc_code#,
			'INSERT',
		#AGENT_ID#,
		#ser_ind#,
		sysdate
		
		   <isNotEmpty property="eic"> 
			 	<isEqual property="eic" compareValue="Y">		
				,'EIC', 
				'Y'
				</isEqual>
				<isEqual property="eic" compareValue="N">	
				,#BASE_PLT#,
				null,	
				null, 
				'N'
				</isEqual>
			</isNotEmpty>
			 <isEmpty property="eic">			 		
				,#BASE_PLT#,
				null,	
				null, 
				'N'
			</isEmpty>	
			,'N',
			'N',
		'N',
		'N',
		#HANDLING_MODE#,		
		'N',
		'N',
		'N',
		null,
		#TARE_WEIGHT#,
		#GROSS_WEIGHT#,
		#TR_TYPE#,
		#owner_id#,
		null,
		null,null,null  
		)
	</insert>
	
	  <update id="imp_uld_checkin_empty_flightNotFound_upd" parameterClass="java.util.HashMap">
		UPDATE ULD_INVENTORY SET 
		uld_type=#uld_type#, 
		uld_no=#uld_no#, 
		uld_carr=#uld_carr#, 
		FLT_NO = null, 
		FLT_TYPE = null, 
		FLT_DATE = null, 
		FLT_KEY = null,
		loc_code=#loc_code#, 
		DAM_IND=#condn_code#, 
		owner_id=#owner_id#, 
		PARENT_OWNER=#owner_id#, 
		source_code=#source_code#, 		
		eic_flg=nvl(#eic_flg#,'N'), 
		empty_flg=#empty_flg#, 
		tare_weight = #TARE_WEIGHT#,
		gross_weight = #GROSS_WEIGHT#,
		CONTR_CODE = #CONTR_CODE#,
		STRG_DATE=sysdate, 
		PPK_IND=#PPK_IND#, 
		LM_USER_ID=#LM_USER_ID#, 
		LM_DATE=sysdate, 
		AGENT_INV='N',
		OWNED_INV='Y',
		AGENT_ID =null, 
		CFM_STATUS=#CFM_STATUS#, 
		REF_TR_NO = ULD_TR_SEQ.NEXTVAL,		
		 <isNotEmpty property="docLineNo"> 
			REF_DOC_LINE_NO = #docLineNo#,
		</isNotEmpty>
		<isEmpty property="docLineNo"> 
			REF_DOC_LINE_NO = '1',
		</isEmpty>		
		REF_TR_TYPE = 'EU',
		REF_TR_DATE = SYSDATE, 
		REF_OUT_CARR = '', 
		REF_TR_EVENT = 'UPDATE', 		 
		BASE_PLT     = #BASE_PLT#,
		SER_IND=#ser_ind#,
		RESV_FLG = 'N',
		RESV_DATE='', 
		RESV_RMK='', 
		RMV_RMK='', 
		IMP_FLT_CARR='',
		IMP_FLT_DATE='',
		IMP_FLT_KEY='',
		IMP_FLT_NO='', 
		TARGET=null, 
		FIRST_WT='', 
		SECOND_WT='', 
		THIRD_WT='', 
		REF_WT='', 
		ULD_FLOW='' ,
		 <isNotEmpty property="eic"> 
			 	<isEqual property="eic" compareValue="Y">		
				EIC_TYPE = 'EIC', 
				BASE_PAL_FLG = 'Y',
				</isEqual>
				<isEqual property="eic" compareValue="N">		
				EIC_TYPE = null, 
				BASE_PAL_FLG = 'N',
				</isEqual>
		</isNotEmpty>			
		ASV_INV='N',
		OFLD_FLG='N',		
		BB_IND='N',
		MIX_PPK_IND='N',
		DG_IND='N',
		LOCKED = 'N',
	  	LOCK_RQS = 'N',
		HANDLING_MODE=#HANDLING_MODE#,	
		TRANSIT_FLG=#TRANSIT_FLG#,			
		TRANSIT_TYPE=null,
		TR_TYPE = #TR_TYPE#,
		FINAL_WEIGHT = null,
		DOUBLE_WGT_RSLT= null,
		X_RAY_RES = null, X_RAY_REQ = null, ENTRY_TIME = sysdate , GEN_RMK = '' 
		WHERE ULD_KEY = #uld_key#
	</update>
	
	<select id="sqlGetCheckinULDTareWeight"  parameterClass="cargo.cms.imprt.bo.ULDCheckInBO"  resultClass="java.lang.String">
		SELECT TARE_WEIGHT as tareWeight
			 FROM ULD_TYPE_CARR_TARE_WT
			  where ULD_TYPE=UPPER(#uldType#) and ULD_CARR=UPPER(#uldCarr#) 
		 and UPPER(#uldNo#) between ULD_NO_FROM and ULD_NO_TO
   	</select>
	
	<select id="check_ULDUsed_inDownSreamProcess" parameterClass="cargo.cms.imprt.bo.ULDCheckInBO" resultClass="java.lang.String">				
		SELECT ULD_FLOW FROM ULD_INVENTORY where ULD_KEY = #uldKey# 
	</select>
	
	<!-- Inbound Tow Order (B) -->
	<select id="sqlGetTowOrderInFlights" parameterClass="cargo.cms.imprt.bo.SearchTowOrderBO" resultClass="cargo.cms.imprt.bo.TowOrderFlightBO">
		<![CDATA[
	    SELECT FLTNO fltNo, FLTKEY fltKey, FLTDATE fltDate, CARRCODE carrCode, RHOID rhoId, ACFTTYPE acftType,
	    TO_CHAR(TO_DATE(ESTDATE || ' ' || ESTTIME, 'DDMONYY HH24:MI')  + (nvl((select rule_value from cmsrules where rule_code='AUTO_TOW_ORDER_MIN'),0)/24/60), 'DDMONYY HH24:MI')  AS estTime,
	    TO_CHAR(TO_DATE(ESTDATE || ' ' || ESTTIME, 'DDMONYY HH24:MI')  - (CUTOFF/(24 * 60)), 'DDMONYY HH24:MI') AS cutoffTime,
	    TO_CHAR(TO_DATE(ESTDATE || ' ' || ESTTIME, 'DDMONYY HH24:MI')  - (EXTCUTOFF/(24 * 60)), 'DDMONYY HH24:MI') AS extCutoffTime,
	    TO_CHAR(SYSDATE, 'DDMONYY HH24:MI') AS currentTime
	    FROM
	    (
	    SELECT EVENT.FLT_NO FLTNO, EVENT.FLT_KEY FLTKEY, TO_CHAR(FLT.SCH_DATE, 'DDMONYY') FLTDATE,
			EVENT.CARR_CODE CARRCODE , TO_CHAR(NVL(FLT.EST_DATE, FLT.SCH_DATE), 'DDMONYY') ESTDATE,
			SUBSTR(TRIM(TO_CHAR(NVL(FLT.EST_TIME, FLT.SCH_TIME),'0000')),1,2)
				|| NVL2(NVL(FLT.EST_TIME, FLT.SCH_TIME), ':', '')
				|| SUBSTR(TRIM(TO_CHAR(NVL(FLT.EST_TIME, FLT.SCH_TIME),'0000')),3,4) ESTTIME,
			FLT.RHO_ID RHOID,
	      	CUT.ACFT_TYPE ACFTTYPE,
	      	CUT.CUTOFF_TIME CUTOFF,
	      	CUT.EXT_CUTOFF_TIME EXTCUTOFF,
	      	(SELECT COUNT(TO_NO) FROM TOW_ORDER_IN TOW WHERE TOW.FLT_KEY = FLT.FLT_KEY AND TOW.FLT_DATE = FLT.SCH_DATE) TOWS
		FROM FLT_OPR FLT
	    JOIN IMP_RAMP_CUTOFF CUT
	    ON FLT.CARR_CODE = CUT.CARR_CODE AND FLT.CGO_ACFT_TYPE = CUT.ACFT_TYPE    
	    JOIN FLT_OPR_EVENTS EVENT
	    ON FLT.TR_NO = EVENT.TR_NO
		LEFT OUTER JOIN CUST_COMPANY AGT
		ON EVENT.CARR_CODE = AGT.CARR_CODE
		WHERE FLT.FLT_TYPE = 'A' AND NVL(FLT.STATUS, ' ') <> 'X' 
		AND NVL(EVENT.TO_GEN, 'N') = 'N' AND FLT.RHO_ID IS NOT NULL
		AND (TO_DATE(TO_CHAR(NVL(FLT.EST_DATE, FLT.SCH_DATE), 'DDMONYY')) = TO_DATE(TO_CHAR(SYSDATE, 'DDMONYY'))
     			OR TO_DATE(TO_CHAR(NVL(FLT.EST_DATE, FLT.SCH_DATE), 'DDMONYY')) = TO_DATE(TO_CHAR(SYSDATE + 1, 'DDMONYY')))
	    )
	    WHERE TOWS = 0
	    ]]>
	</select>
	<select id="sqlGetTowOrderDefHOArea" parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT rule_value value FROM cmsrules WHERE rule_code = #PARAM#
	</select>
	<select id="sqlGetTowInExistForFlt" parameterClass="cargo.cms.imprt.bo.TowOrderFlightBO" resultClass="java.lang.Integer">
		 SELECT COUNT(TO_NO) FROM TOW_ORDER_IN TOW 
		 WHERE TOW.FLT_KEY = UPPER(#fltKey#) AND TO_CHAR(TOW.FLT_DATE, 'DDMONYY') = UPPER(#fltDate#)
	</select>
	<select id="sqlGetTowOrderInCutoffTime" parameterClass="cargo.cms.imprt.bo.TowOrderFlightBO" resultClass="java.lang.Integer">
		 SELECT nvl(CUTOFF_TIME,0) cutoff
		   FROM IMP_RAMP_CUTOFF
		  WHERE carr_code = #carrCode# AND acft_type     = #acftType#
	</select>
	<select id="sqlGetTowOrderInMailFax" parameterClass="java.lang.String" resultClass="cargo.cms.imprt.bo.EMailFaxAddressBO">
		SELECT EMAIL1 AS emailAddress1 ,EMAIL2 AS emailAddress2 , 
		EMAIL3 AS emailAddress3 , EMAIL4 AS emailAddress4 , 
		EMAIL5 AS emailAddress5 , 
		FAX1 AS faxNumber1 ,FAX2 AS faxNumber2 ,
		FAX3 AS faxNumber3
		FROM CUST_COMPANY WHERE CODE = (SELECT MAX(RHO_ID) FROM TOW_ORDER_IN WHERE TO_NO = #PARAM#)
	</select>
	<select id="sqlGetTowOrderInCutoffTimeExt" parameterClass="cargo.cms.imprt.bo.TowOrderFlightBO" resultClass="java.lang.Integer">
		 SELECT nvl(ext_cutoff_time,0) cutoff
		   FROM IMP_RAMP_CUTOFF
		  WHERE carr_code = #carrCode#
		AND acft_type     = #acftType#
	</select>
	<parameterMap class="java.util.Map" id="sqlParamTowOrderInULD">
		<parameter property="returnArea" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
		<parameter property="fltKey" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="fltDate" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="uldKey" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="hoArea" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
		<parameter property="transferGrp" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
	</parameterMap>
	<procedure id="sqlProcTowOrderInULD" parameterMap="sqlParamTowOrderInULD">
		{ ? = call PKG_IMP.FUN_GET_ULD_HO_AREA_TRF_GRP(?, ?, ?, ?, ?) }
	</procedure>
	
	<!--  Changed for QR -->
	<select id="sqlGetTowOrderInULDHOAreas" parameterClass="java.util.Map" 
resultClass="cargo.cms.imprt.bo.TowOrderHOAreaBO">

         SELECT IUL.ULD_KEY uldKey,  '' awbNo, AREA.AIR_SIDE airSide,
                    IUL.TRANSFER_TYPE transferType,IUL.TRANSIT_IND transitInd,
           			CNTG_FLT_KEY CNTGFLTKEY, TO_CHAR(CNTG_FLT_DATE, 'DDMONYY')CNTGFLTDATE, TRF_TYPE || decode(BRK_BULK,'Y',' + BB',null) trfType,
           (SELECT STRAGG(STRINGDELIM(SHC, ',')) AS SHCS 
           			FROM (SELECT DISTINCT SHC, FLT_KEY, ULD_KEY,FLT_DATE, PRIORITY FROM V_IMP_FLT_ULD_SHC ORDER BY PRIORITY DESC) 
           			WHERE ULD_KEY = IUL.ULD_KEY AND FLT_KEY = IUL.FLT_KEY AND FLT_DATE = IUL.FLT_DATE AND ROWNUM &lt;= 9) shcs
         FROM IMP_ULD_LIST IUL
         	JOIN FLT_OPR FLT ON IUL.FLT_KEY   = FLT.FLT_KEY AND IUL.FLT_DATE = FLT.SCH_DATE AND FLT.FLT_TYPE = 'A'
         	JOIN FLT_OPR_EVENTS FLTEV ON FLT.TR_NO=FLTEV.TR_NO
         	JOIN ULD_GROUP_TYPE uldType on uldType.ULD_TYPE = substr(IUL.uld_key,0,3) 
         	JOIN MAST_ULD_GROUP uldGrp on uldGrp.ULD_GROUP = uldType.ULD_GROUP
         	LEFT OUTER JOIN MAST_WH_AREA AREA ON AREA.WH_AREA = NVL(NVL(IUL.MANUAL_HDLY_AREA,IUL.SYSTEM_HDLY_AREA), FLT.FLT_MODULE1)
         	LEFT OUTER JOIN DDT_MSG MSG
           		ON IUL.FLT_KEY   = MSG.FLT_KEY AND IUL.FLT_DATE = MSG.FLT_DATE  and MSG.ddt_status='P' and FLTEV.ddt_finalise_date is not null
         	LEFT OUTER JOIN DDT_ULD ULD
         		ON IUL.ULD_KEY = ULD.ULD_KEY AND MSG.TR_NO = ULD.TR_NO
         WHERE IUL.FLT_KEY = #fltKey# AND IUL.FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') 
         and not exists (select null from EDI_CPM_DTL ecd 
                where ecd.ULD_KEY = IUL.ULD_KEY AND ecd.FLT_KEY=IUL.FLT_KEY AND ecd.FLT_DATE=IUL.FLT_DATE and ecd.LOAD_TYPE = 'X' and uldType.ULD_TYPE != 'RKN' and uldGrp.PLT_CNT_SIZE = 'Half size' and rownum =1 ) 
		<isNotEmpty property="uldKey">
		          AND IUL.ULD_KEY = #uldKey#
		</isNotEmpty> 
</select>
<select id="sqlGetTowOrderInULDHOAreas_Trn" parameterClass="java.util.Map" resultClass="cargo.cms.imprt.bo.TowOrderHOAreaBO">
		SELECT IUL.ULD_KEY uldKey,  '' awbNo, AREA.AIR_SIDE airSide,
                    IUL.TRANSFER_TYPE transferType,IUL.TRANSIT_IND transitInd,
           			CNTG_FLT_KEY CNTGFLTKEY, TO_CHAR(CNTG_FLT_DATE, 'DDMONYY')CNTGFLTDATE, TRF_TYPE || decode(BRK_BULK,'Y',' + BB',null) trfType,
           (SELECT STRAGG(STRINGDELIM(SHC, ',')) AS SHCS 
           			FROM (SELECT DISTINCT SHC, FLT_KEY, ULD_KEY,FLT_DATE, PRIORITY FROM V_IMP_FLT_ULD_SHC ORDER BY PRIORITY DESC) 
           			WHERE ULD_KEY = IUL.ULD_KEY AND FLT_KEY = IUL.FLT_KEY AND FLT_DATE = IUL.FLT_DATE AND ROWNUM &lt;= 9) shcs
         FROM IMP_ULD_LIST IUL 
         	JOIN IMP_RAMP_INB_CHK_DTL RICD ON RICD.FLT_KEY   = IUL.FLT_KEY AND RICD.FLT_DATE = IUL.FLT_DATE AND RICD.ULD_KEY= IUL.ULD_KEY 
         	JOIN FLT_OPR FLT ON IUL.FLT_KEY   = FLT.FLT_KEY AND IUL.FLT_DATE = FLT.SCH_DATE AND FLT.FLT_TYPE = 'A'
         	JOIN FLT_OPR_EVENTS FLTEV ON FLT.TR_NO=FLTEV.TR_NO
         	JOIN ULD_GROUP_TYPE uldType on uldType.ULD_TYPE = substr(IUL.uld_key,0,3) 
         	JOIN MAST_ULD_GROUP uldGrp on uldGrp.ULD_GROUP = uldType.ULD_GROUP
         	LEFT OUTER JOIN MAST_WH_AREA AREA ON AREA.WH_AREA = NVL(NVL(IUL.MANUAL_HDLY_AREA,IUL.SYSTEM_HDLY_AREA), FLT.FLT_MODULE1)
         	LEFT OUTER JOIN DDT_MSG MSG
           		ON IUL.FLT_KEY   = MSG.FLT_KEY AND IUL.FLT_DATE = MSG.FLT_DATE  and MSG.ddt_status='P' and FLTEV.ddt_finalise_date is not null 
         	LEFT OUTER JOIN DDT_ULD ULD
         		ON IUL.ULD_KEY = ULD.ULD_KEY AND MSG.TR_NO = ULD.TR_NO
         WHERE IUL.FLT_KEY = #fltKey# AND IUL.FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND RICD.FFM_IND='Y'
         and not exists (select null from EDI_CPM_DTL ecd 
                where ecd.ULD_KEY = IUL.ULD_KEY AND ecd.FLT_KEY=IUL.FLT_KEY AND ecd.FLT_DATE=IUL.FLT_DATE and ecd.LOAD_TYPE = 'X' and uldGrp.PLT_CNT_SIZE = 'Half size' and rownum =1 ) 
		<isNotEmpty property="uldKey">
		          AND IUL.ULD_KEY = #uldKey#
		</isNotEmpty> 
		UNION
		SELECT ULD_KEY AS uldKey,'' awbNo, null airSide,null transferType,null transitInd,null CNTGFLTKEY, null CNTGFLTDATE, null trfType,
        null shcs 
		FROM EDI_CPM_DTL DTL
    	where FLT_KEY = #fltKey# AND FLT_DATE = TO_DATE(#fltDate#,'DDMONYY')  AND DTL.ULD_KEY IS NOT NULL AND 
    	not exists (select null FROM  TRN_FFM_MSG TFM	JOIN TRN_FFM_ULD TFU ON TFM.TR_NO=TFU.TR_NO AND TFM.FFM_STATUS = 'P' WHERE TFU.ULD_KEY=DTL.ULD_KEY AND TFM.FLT_KEY = DTL.FLT_KEY AND TFM.FLT_DATE = DTL.FLT_DATE )
    	AND not exists (select null FROM  EDI_FFM_MSG TFM	JOIN EDI_FFM_ULD TFU ON TFM.TR_NO=TFU.TR_NO AND TFM.FFM_STATUS = 'P' WHERE TFU.ULD_KEY=DTL.ULD_KEY AND TFM.FLT_KEY = DTL.FLT_KEY AND TFM.FLT_DATE = DTL.FLT_DATE ) 
    	and not ((nvl(load_type,'*') = 'M' and (select count(1) from TRN_SETUP_CARR where SUBSTR(DTL.FLT_KEY,0,2) = carr_code and IMP_CTO_TM !='CPCT') > 0  )
		  OR ((nvl(load_type,'*') = 'Q' and (select count(1) from TRN_SETUP_CARR where SUBSTR(DTL.FLT_KEY,0,2) = carr_code and IMP_CTO_COUR !='CPCT') > 0  ))
          OR ((nvl(load_type,'*') not in ('M','Q') and (select count(1) from TRN_SETUP_CARR where SUBSTR(DTL.FLT_KEY,0,2) = carr_code and IMP_CTO_OTH !='CPCT') > 0  )))
	     <isNotEmpty property="uldKey">
	             AND DTL.ULD_KEY = #uldKey#
		</isNotEmpty>	 
</select>
			
	
	<parameterMap class="java.util.Map" id="sqlParamTowOrderInAWB">
		<parameter property="returnArea" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
		<parameter property="fltKey" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="fltDate" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="awbNo" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="hoArea" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
		<parameter property="transferGrp" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
	</parameterMap>
	<procedure id="sqlProcTowOrderInAWB" parameterMap="sqlParamTowOrderInAWB">
		{ ? = call PKG_IMP.FUN_GET_AWB_HO_AREA_TRF_GRP(?, ?, ?, ?, ?) }
	</procedure>
	
	<!--  Changed for QR -->
	<select id="sqlGetTowOrderInBulkshipAreas" parameterClass="java.util.Map" resultClass="cargo.cms.imprt.bo.TowOrderHOAreaBO">
		SELECT '' uldKey, FFM.AWB_NO awbNo, '' hoArea, DDT.SHP_TRF_TYPE transferType,
		  'N' transitInd, DDT.SHP_CNTG_FLT_KEY CNTGFLTKEY, TO_CHAR(DDT.SHP_CNTG_FLT_DATE, 'DDMONYY') CNTGFLTDATE, DDT.SHP_TRF_TYPE  trfType,
		  (SELECT STRAGG(STRINGDELIM(SHC, ',')) AS SHCS 
	    	FROM (SELECT DISTINCT SHC, FLT_KEY, AWB_NO, AWB_DATE,FLT_DATE, PRIORITY FROM V_IMP_FLT_ULD_SHC ORDER BY PRIORITY DESC
	      	) WHERE AWB_NO = FFM.AWB_NO AND AWB_DATE = FFM.AWB_DATE AND FLT_KEY = FFM.FLT_KEY AND FLT_DATE = FFM.FLT_DATE AND ROWNUM &lt;= 9) shcs		  		    
		   FROM
		  (SELECT SHP.AWB_NO, SHP.AWB_DATE, MSG.FLT_KEY, MSG.FLT_DATE, MSG.CARR_CODE
		     FROM EDI_FFM_MSG MSG, EDI_FFM_SHP SHP, EDI_FFM_ULD ULD
		    WHERE 
		    MSG.TR_NO = SHP.TR_NO AND MSG.TR_NO = ULD.TR_NO AND ULD.DOC_LINE_NO = SHP.UDOC_LINE_NO
		    AND MSG.FFM_STATUS = 'P' AND ULD.ULD_KEY IS NULL
		  ) FFM 
		  JOIN FLT_OPR FLT ON FFM.FLT_KEY   = FLT.FLT_KEY AND FFM.FLT_DATE = FLT.SCH_DATE AND FLT.FLT_TYPE = 'A'
      	  JOIN FLT_OPR_EVENTS FLTEV ON FLT.TR_NO=FLTEV.TR_NO   
		  LEFT JOIN (select flt_key, flt_date, awb_no, SHP_CNTG_FLT_KEY, SHP_CNTG_FLT_DATE, SHP_TRF_TYPE
			   from   (select flt_key, flt_date, awb_no, SHP_CNTG_FLT_KEY, SHP_CNTG_FLT_DATE, SHP_TRF_TYPE, 
			         dense_rank() over (partition by flt_key, flt_date, awb_no order by SHP_CNTG_FLT_KEY, SHP_CNTG_FLT_DATE, SHP_TRF_TYPE) rank 
			     from  V_UNFIN_DDT_DTL 
			     where ULD_KEY IS NULL) 
			 where rank = 1) DDT ON FFM.FLT_KEY = DDT.FLT_KEY AND FFM.FLT_DATE = DDT.FLT_DATE AND FFM.AWB_NO = DDT.AWB_NO and FLTEV.ddt_finalise_date is not null
		  LEFT JOIN IMP_CAR_SHP CSHP ON FFM.FLT_KEY = CSHP.FLT_KEY AND FFM.FLT_DATE = CSHP.FLT_DATE AND CSHP.AWB_NO = FFM.AWB_NO
		  LEFT JOIN IMP_CAR_AWB CAWB ON CSHP.AWB_NO = CAWB.AWB_NO AND CSHP.AWB_DATE = CAWB.AWB_DATE
		WHERE
		FFM.FLT_KEY = #fltKey# AND FFM.FLT_DATE = TO_DATE(#fltDate#, 'DDMONYY')
		<isNotEmpty property="awbNo">
			AND FFM.AWB_NO = #awbNo#
		</isNotEmpty>
	</select>
	<insert id="sqlInsertTowOrderInHdr" parameterClass="cargo.cms.imprt.bo.InboundTowOrderBO">
		INSERT INTO TOW_ORDER_IN
		(
		TO_NO, RHO_ID ,VER_NO ,FLT_KEY,FLT_DATE ,HANDLING_STAFF_NAME,HANDLING_STAFF_ID,NOTF_SEND_DATE ,
		REM_1_DATE ,REM_2_DATE ,ACK_DATE ,CR_USER_ID ,CR_DATE,LM_USER_ID ,LM_DATE,FLT_TYPE
		)
		VALUES
		(
		#toNo#, #rhoId#, #verNo#, #fltKey# ,#fltDate#, #handlingStaffName#, #handlingStaffId#, 
		#notfSendDate# , #rem1Date# ,
		#rem2Date#, #ackDate#, #crUserId#, SYSDATE, #lmUserId# , SYSDATE, #fltType#
		)
	</insert>
	<insert id="sqlInsertTowOrderInDtl" parameterClass="cargo.cms.imprt.bo.InboundTowOrderDetailBO">
		INSERT INTO TOW_ORDER_IN_DTL
		(
		TO_NO, ULD_KEY, AWB_NO, HO_AREA, CR_USER_ID,
		CR_DATE, LM_USER_ID, LM_DATE, CNTG_FLT_KEY, CNTG_FLT_DATE, TRF_TYPE, TRNS_GRP, SHCS
		)
		values(
		#toNo#, #uldKey#, #awbNo#, #hoArea#, #crUserId#,
		SYSDATE, #lmUserId#, SYSDATE, #cntgFltKey#, #cntgFltDate#, #trfType#, #trnsGrp#, #shcs#
		)
	</insert>
	<update id="sqlUpdateFlightEventToGen" parameterClass="cargo.cms.imprt.bo.TowOrderFlightBO">
		UPDATE FLT_OPR_EVENTS EVENT
		SET TO_GEN  = 'Y'
		WHERE EVENT.FLT_KEY = #fltKey#	AND EVENT.SCH_DATE = #fltDate# AND EVENT.FLT_TYPE = 'A'
	</update>		
	<!-- Inbound Tow Order (E) -->
	
	<select id="imp_checkedInOtherFlight"  parameterClass="cargo.cms.imprt.bo.ULDCheckInBO"  resultClass="java.lang.Integer">
	<![CDATA[
	 	SELECT COUNT(1)
   		FROM uld_inventory
  		WHERE uld_key      = #uldKey#
  		AND LOC_CODE IS NOT NULL   
		AND CFM_STATUS NOT  IN ('RELEASED','RESERVED')
		AND NOT (flt_key     = #flightKey#
		AND FLT_DATE         = #flightDate#)
		AND flt_type = 'I' and flt_key is not null	
	]]>
	</select>

        <select id="imp_chk_agent"  parameterClass="cargo.cms.imprt.bo.ULDCheckInBO"  resultClass="java.lang.Integer">
	<![CDATA[
		SELECT NVL(count(1),0) FROM ULD_INVENTORY WHERE   ULD_KEY =  #uldKey# AND AGENT_INV  ='Y' AND length(ULD_KEY) >= 9
	]]>
	</select>

        <select id="imp_getflight_ata"  parameterClass="map"  resultClass="java.lang.String">
			SELECT NVL(SCH_TIME,0) FROM FLT_OPR WHERE CARR_CODE = upper(#CARR_CODE#) AND FLT_NO = upper(#FLT_NO#) AND SCH_DATE = TO_DATE( #FLT_DATE#, 'DDMONYY') AND FLT_TYPE = 'A'
   	</select>

   	<select id ="imp_get_ramp_trno" parameterClass="map" resultClass="java.lang.String">
		SELECT TR_NO FROM IMP_RAMP_CHK_HD WHERE FLT_KEY=#fltKey# AND FLT_DATE = TO_DATE(#fltDate#,'DDMONYY')
	</select>

	<select id ="imp_uld_validations" parameterClass="map" resultClass="java.lang.String">
		SELECT  nvl(count(1),0)
		FROM ULD_GROUP_CARR
		WHERE CARR_CODE=#carrCode# 
			AND ULD_TYPE=#uldType# 
		<dynamic>
			<isNotEmpty property="basePal">
				 AND BASE_PAL_FLG=#basePal#
		     </isNotEmpty>
		</dynamic> 
	</select>

	<select id="get_max_docline_chk_dtl"  parameterClass="map"  resultClass="java.lang.String">
			SELECT NVL(MAX(DOC_LINE_NO),0) FROM IMP_RAMP_CHK_DTL WHERE TR_NO = #trNo#		
	</select>

     <select id="imp_chk_transfer_type"  parameterClass="cargo.cms.imprt.bo.ULDCheckInBO"  resultClass="java.lang.String">
	 	SELECT TRF_TYPE FROM ddt_uld WHERE cntg_flt_key=#flightKey# and cntg_flt_date=TO_DATE(#flightDate#,'DDMONYY') and uld_key=#uldKey#
	</select>
	
	<select id="imp_chk_inb_transfer_type"  parameterClass="cargo.cms.imprt.bo.ULDCheckInBO"  resultClass="java.lang.String">
	 	SELECT TRANSFER_TYPE FROM IMP_RAMP_INB_CHK_DTL WHERE FLT_KEY=#flightKey# and TO_CHAR(FLT_DATE,'DDMONYY')=#flightDate# and ULD_KEY=#uldKey#
	</select>

      <select id="imp_hht_getUld" parameterClass="cargo.cms.imprt.bo.EnquireUldBO"  resultClass="cargo.cms.imprt.bo.EnquireUldBO">
	SELECT 
	   FLT_KEY AS flightKey,
	   TO_CHAR(FLT_DATE,'DDMONYY') AS flightDate,	  
	   '' AS wareHouseDst,
	   LOC_CODE AS wareHouseLoc,
	   EMPTY_IND AS empty,
	   EIC_IND AS eic,	   
	   DAM_IND AS condition,
	   RMK AS damageRemark,
	   ULD_KEY as uldKey	
	FROM IMP_RAMP_CHK_DTL 
	WHERE
	 TR_NO = #trNo# AND
	 DOC_LINE_NO = #docLineNo# AND
	 ULD_KEY = #uldKey#
	</select>

	<select id="imp_checkin_validate" parameterClass="cargo.cms.imprt.bo.CheckListBO" resultClass="java.lang.String">		
		SELECT NVL(CHKIN_YN,'N') FROM IMP_RAMP_CHK_DTL WHERE TR_NO = #trNo# AND ULD_KEY = #uldKey#
	</select>

	<update id="updateStatusandChkinFltDtls-Checkin" parameterClass="cargo.cms.imprt.bo.ULDCheckInBO">
	UPDATE ULD_REL_DTL A
		SET A.STATUS    = 'RETURNED',
  		A.RET_DATE    = SYSDATE,
  		A.RET_USER    = #lmUser#,
  		CHK_IN_FLT_KEY = #flightKey#,
  		CHK_IN_FLT_DATE = #flightDate#,
  		tr_type_evt = 'REURF'
		WHERE A.ULD_KEY = #uldKey#
		AND A.STATUS    = 'RELEASED'
		AND A.TR_NO    IN
  (SELECT MAX(TO_NUMBER(B.TR_NO)) FROM ULD_REL_DTL B WHERE B.ULD_KEY = #uldKey#)
  	</update>
	<update id="updateStatusandChkinFltDtls-UnCheckin" parameterClass="cargo.cms.imprt.bo.ULDCheckInBO">
	UPDATE uld_rel_dtl a
		SET a.status    = 'RELEASED',
  		a.ret_date    = '',
  		a.ret_user    = '',
   		CHK_IN_FLT_KEY = '',
  		CHK_IN_FLT_DATE = '',
  		tr_type_evt = 'REURF'
		WHERE a.uld_key =  #uldKey#
		AND a.status    = 'RETURNED'
		AND a.CHK_IN_FLT_KEY = #flightKey#
		AND a.CHK_IN_FLT_DATE = #flightDate#
		AND a.tr_no    IN
  		(SELECT MAX (to_number(b.tr_no)) FROM uld_rel_dtl b WHERE b.uld_key =  #uldKey#)
  	</update>
  	<update id="updateagentinven-UnCheckin" parameterClass="cargo.cms.imprt.bo.ULDCheckInBO">
  	UPDATE ULD_INVENTORY SET AGENT_INV='Y' WHERE ULD_KEY=#uldKey#
  	</update>

<!--  Changed for QR -->
<select id="imp_uld_checkin_hht"  parameterClass="cargo.cms.imprt.bo.ULDCheckInBO"  resultClass="cargo.cms.imprt.bo.ULDCheckInBO">
	
SELECT * 
	FROM (
		 SELECT  dtl.CARR_CODE AS carrierCode ,	    
			dtl.TR_NO AS trNo , 			
			dtl.DOC_LINE_NO AS docLineNo ,	
			dtl.FLT_NO AS flightNo , 
			dtl.FLT_KEY AS flightKey ,
			TO_CHAR(dtl.FLT_DATE,'DDMONYY') As flightDate, 
			dtl.ULD_KEY  AS uldKey ,			
			dtl.LOC_CODE AS locCode, 
			<!-- dtl.LOC_CODE	AS plannedHoAreaFFMCPM,-->	
			PKG_IMP.fun_get_ho_area(dtl.FLT_KEY,dtl.FLT_DATE,dtl.ULD_KEY) as plannedHoAreaFFMCPM,	
            (select TD.HO_AREA FROM TOW_ORDER_IN_DTL TD  JOIN TOW_ORDER_IN TH ON TD.TO_NO = TH.TO_NO  WHERE TH.FLT_KEY = dtl.FLT_KEY  AND TH.FLT_DATE = dtl.FLT_DATE  AND TD.ULD_KEY = dtl.ULD_KEY) towHoArea,
			dtl.DAM_IND AS damInd, 
			dtl.EMPTY_IND AS empty, 
			dtl.HT  AS ht,
			dtl.CONTR AS contour,
			dtl.EIC_IND AS eic, 
			dtl.RMK AS remark,
			dtl.TRANSFER_TYPE AS transferType,
			dtl.RHO_STAFF AS rhoStaffId,
			TO_CHAR(dtl.LM_DATE , 'DDMONYY HH24:MI:SS') AS lastModDate,
			TO_CHAR(dtl.CHKIN_DATE,'DDMONYY') AS checkInDate,
			PKG_COMMON.get_flt_ata(dtl.FLT_KEY, dtl.FLT_DATE, 'A', 'DD') AS ata,			
			NVL(dtl.CHKIN_YN,'N') AS actualCheckIn,
			dtl.CHKIN_YN AS checkInStatus,	
      		m.h_cont_ind AS hcontainer,
			dtl.SURPLUS_IND surPlusInd,
			uld.HANDLING_MODE									   AS handlingMode,
					uld.TRANSIT_IND 									   AS transitInd,
					 edi.CNTR                             AS defContr,
			(SELECT MAX(ULD_IMAGE_NAME) FROM ULD_IMAGE where uld_key=#uldNo#) as transactionId					 			
		FROM    	
		IMP_RAMP_CHK_DTL dtl
      	join FLT_OPR f on f.FLT_TYPE  = 'A' and f.FLT_KEY = dtl.FLT_KEY and f.SCH_DATE = dtl.FLT_DATE   
      	join FLT_OPR_EVENTS fo on fo.FLT_TYPE  = 'A' and fo.FLT_KEY = dtl.FLT_KEY and fo.SCH_DATE = dtl.FLT_DATE and fo.FLT_CLS_YN='N'
      	left join MAST_ULD_TYPE m  on m.code = dtl.uld_type
				LEFT JOIN IMP_ULD_LIST uld on uld.FLT_KEY=dtl.FLT_KEY AND uld.FLT_DATE = dtl.FLT_DATE AND uld.ULD_KEY=dtl.ULD_KEY
				LEFT JOIN EDI_CPM_DTL edi on edi.FLT_KEY=dtl.FLT_KEY AND edi.FLT_DATE = dtl.FLT_DATE AND edi.ULD_KEY=dtl.ULD_KEY
      	WHERE							
			 dtl.loc_code=#locCode# AND
			 (dtl.uld_no=#uldNo# or dtl.uld_key=#uldNo#)	
			
		UNION ALL			
		
		SELECT  dtl.CARR_CODE AS carrierCode ,		    
			dtl.TR_NO AS trNo ,
			dtl.DOC_LINE_NO AS docLineNo ,	
			dtl.FLT_NO AS flightNo , 
			dtl.FLT_KEY AS flightKey ,
			TO_CHAR(dtl.FLT_DATE,'DDMONYY') As flightDate, 
			dtl.ULD_KEY  AS uldKey , 		
			#locCode#	 AS locCode, 
				<!-- dtl.LOC_CODE	AS plannedHoAreaFFMCPM,-->
			PKG_IMP.fun_get_ho_area(dtl.FLT_KEY,dtl.FLT_DATE,dtl.ULD_KEY) as plannedHoAreaFFMCPM,
       		(select TD.HO_AREA FROM TOW_ORDER_IN_DTL TD  JOIN TOW_ORDER_IN TH ON TD.TO_NO = TH.TO_NO  WHERE TH.FLT_KEY = dtl.FLT_KEY  AND TH.FLT_DATE = dtl.FLT_DATE  AND TD.ULD_KEY = dtl.ULD_KEY) towHoArea,
	     	chk.DAM_IND											                       AS damInd      ,
	      	chk.EMPTY_IND                                          AS empty       ,      
	      	chk.HT                                           	     AS ht          ,
	      	chk.CONTR                                              AS contour     ,
	      	chk.EIC_IND                                            AS eic         ,
	      	dtl.RMK                                                AS remark      ,
	      	dtl.TRANSFER_TYPE										 AS transferType,
      		chk.RHO_STAFF 										                     AS rhoStaffId,
			TO_CHAR(dtl.LM_DATE , 'DDMONYY HH24:MI:SS') AS lastModDate,	
			TO_CHAR(chk.CHKIN_DATE,'DDMONYY') AS checkInDate,
			PKG_COMMON.get_flt_ata(dtl.FLT_KEY, dtl.FLT_DATE, 'A', 'DD') AS ata,				
			NVL(chk.CHKIN_YN,'N') 																AS actualCheckIn           ,
      		chk.CHKIN_YN          																AS checkInStatus           ,
       		m.h_cont_ind AS hcontainer,
      		chk.SURPLUS_IND          															AS surPlusInd,
					uld.HANDLING_MODE									   AS handlingMode,
					uld.TRANSIT_IND 									   AS transitInd,
					 edi.CNTR                             AS defContr,
			(SELECT MAX(ULD_IMAGE_NAME) FROM ULD_IMAGE where uld_key=#uldNo#) as transactionId
		FROM
			IMP_RAMP_INB_CHK_DTL dtl
      join FLT_OPR f on f.FLT_TYPE  = 'A' and f.FLT_KEY = dtl.FLT_KEY and f.SCH_DATE = dtl.FLT_DATE
      join FLT_OPR_EVENTS fo on fo.FLT_TYPE  = 'A' and fo.FLT_KEY = dtl.FLT_KEY and fo.SCH_DATE = dtl.FLT_DATE and fo.FLT_CLS_YN='N'
      LEFT JOIN IMP_RAMP_CHK_DTL chk on chk.FLT_KEY = dtl.FLT_KEY AND chk.FLT_DATE = dtl.FLT_DATE AND chk.ULD_KEY = dtl.ULD_KEY
      left join MAST_ULD_TYPE m  on m.code = dtl.uld_type
	  LEFT JOIN IMP_ULD_LIST uld on uld.FLT_KEY=dtl.FLT_KEY AND uld.FLT_DATE = dtl.FLT_DATE AND uld.ULD_KEY=dtl.ULD_KEY
	  LEFT JOIN EDI_CPM_DTL edi on edi.FLT_KEY=dtl.FLT_KEY AND edi.FLT_DATE = dtl.FLT_DATE AND edi.ULD_KEY=dtl.ULD_KEY
      WHERE				
			  (dtl.uld_no=#uldNo# or dtl.uld_key=#uldNo#)
			  AND NVL(CHK.CHKIN_YN,'N') = 'N'	
	)  
 order by uldKey
	</select>

	<select id="imp_chk_dup_uld"  parameterClass="cargo.cms.imprt.bo.ULDCheckInBO"  resultClass="java.lang.Integer">		
		SELECT SUM(C) C
		FROM (SELECT NVL(count(1),0) C FROM IMP_RAMP_CHK_DTL WHERE ULD_KEY = #uldKey# AND FLT_KEY =#flightKey# AND FLT_DATE =TO_DATE(#flightDate#,'DDMONYY')
			  UNION ALL
			  SELECT NVL(count(1),0) C FROM IMP_RAMP_INB_CHK_DTL WHERE ULD_KEY = #uldKey# AND FLT_KEY =#flightKey# AND FLT_DATE =TO_DATE(#flightDate#,'DDMONYY'))
	</select>

	<!--  Changed for QR -->
	<insert id="imp_insert_header" parameterClass="map" >		
		INSERT INTO IMP_RAMP_CHK_HD	(TR_NO,FLT_NO,FLT_DATE,FLT_ATA,CARR_CODE,FLT_KEY,CHKIN_COMPLETE,TR_TYPE,TR_STATUS,
			CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,FLT_TYPE)
		VALUES (#trNo#,#flightNo#,TO_DATE(#flightDate#,'ddmonyy'),#ata#,#carrierCode#,#flightKey#,'N',#transferType#,'N',
			#lmUserId#,SYSDATE,#lmUserId#,SYSDATE,'I')
	</insert>

        <select id="imp_check_docline_exist"  parameterClass="map"  resultClass="java.lang.String">
			SELECT NVL(count(1),0) FROM IMP_RAMP_CHK_DTL WHERE TR_NO = #trNo# AND ULD_KEY = #uldKey#
		<!--SELECT MAX(DOC_LINE_NO) FROM IMP_RAMP_INB_CHK_DTL WHERE TR_NO = #trNo#-->
	</select>

	<select id="delete_uld_checkin_hht"  parameterClass="cargo.cms.imprt.bo.ULDCheckInBO"  resultClass="cargo.cms.imprt.bo.ULDCheckInBO">
		 SELECT  dtl.CARR_CODE AS carrierCode ,
			dtl.TR_NO AS trNo ,
			dtl.DOC_LINE_NO AS docLineNo ,	
			dtl.FLT_NO AS flightNo , 
			dtl.FLT_KEY AS flightKey ,
			TO_CHAR(dtl.FLT_DATE,'DDMONYY') As flightDate, 
			dtl.ULD_KEY  AS uldKey ,
			dtl.ULD_NO as 	uldNo,		
			ui.LOC_CODE AS locCode, 			
			dtl.EMPTY_IND AS empty, 
			dtl.EIC_IND AS eic, 
			dtl.RMK AS remark,
			dtl.TRANSFER_TYPE  AS	transferType,
			TO_CHAR(dtl.LM_DATE , 'DDMONYY HH24:MI:SS') AS lastModDate,
			TO_CHAR(dtl.CHKIN_DATE,'DDMONYY') AS checkInDate,
			PKG_COMMON.get_flt_ata(dtl.FLT_KEY, dtl.FLT_DATE, 'A', 'DD') AS ata,
			(SELECT CODE_DESC FROM MAST_CODE_DTL WHERE  CODE  = f.WTHR_COND AND CODE_TYPE='WTH_CONDN') AS weatherCondition,				
			NVL(dtl.CHKIN_YN,'N') AS actualCheckIn,
			dtl.CHKIN_YN AS checkInStatus,
			ROW_NUMBER() OVER (ORDER BY dtl.FLT_NO ) serialNo,
			SURPLUS_IND surPlusInd
		FROM
			IMP_RAMP_CHK_DTL dtl
			left join ULD_INVENTORY ui on ui.uld_key = dtl.ULD_KEY,
			FLT_OPR f
		WHERE			 
			 f.FLT_KEY = dtl.FLT_KEY AND 
			 f.SCH_DATE = dtl.FLT_DATE AND
			 f.FLT_TYPE	= 'A' AND
			 dtl.FLT_NO =  #flightNo#  AND 
			 dtl.CARR_CODE = upper(#carrierCode#) AND 
			 dtl.FLT_DATE = TO_DATE(#flightDate#,'DDMONYY')
		ORDER BY dtl.ULD_KEY
	</select>
		

      <select id="imp_hht_createUlddetail" parameterClass="cargo.cms.imprt.bo.ULDCheckInBO"  resultClass="cargo.cms.imprt.bo.ULDCheckInBO">
	SELECT 
	   DTL.FLT_KEY AS flightKey,
	   TO_CHAR(DTL.FLT_DATE,'DDMONYY') AS flightDate,	  
	   DTL.LOC_CODE AS locCode,
	   DTL.EMPTY_IND AS empty,
	   DTL.EIC_IND AS eic,
	   DTL.RMK AS remark,
	   DTL.TRANSFER_TYPE  AS	transferType,
	   DTL.DAM_IND AS damInd,
	   DTL.SURPLUS_IND	AS surPlusInd,
       DTL.ULD_KEY AS uldKey,
	   TO_CHAR(DTL.CHKIN_DATE,'DDMONYY')AS checkInDate,
	   DTL.CHKIN_YN AS checkInStatus,	
	   DTL.TR_NO AS trNo,		 
	   DTL.ULD_NO AS uldNo,		 
	   DTL.DOC_LINE_NO AS docLineNo,
	   DTL.CARR_CODE AS carrierCode,
	   DTL.FLT_NO AS flightNo,
	   TO_CHAR(DTL.LM_DATE , 'DDMONYY HH24:MI:SS') AS lastModDate,
	   PKG_COMMON.get_flt_ata(FLR.FLT_KEY, FLR.SCH_DATE, 'A') AS ata
	FROM IMP_RAMP_CHK_DTL DTL, FLT_OPR FLR,IMP_RAMP_CHK_HD HD
	WHERE
	 DTL.TR_NO = #trNo# AND
	 DTL.DOC_LINE_NO = #docLineNo# AND
	 DTL.TR_NO = HD.TR_NO AND
	 FLR.FLT_KEY = HD.FLT_KEY AND 
	 FLR.SCH_DATE = HD.FLT_DATE AND
	 FLR.FLT_TYPE	= 'A' 
	</select>

	<update id="upd_deleteCheckInData" parameterClass="cargo.cms.imprt.bo.ULDCheckInBO" >		
		UPDATE IMP_RAMP_CHK_DTL SET CHKIN_YN='N' , LM_USER_ID = #crUser# , LM_DATE = sysdate WHERE TR_NO = #trNo# AND ULD_KEY = #uldKey# AND TO_CHAR(LM_DATE , 'DDMONYY HH24:MI:SS')=#lastModDate#
	</update>

	<!--  Changed for QR 
    <select id="imp_chk_flt_type"  parameterClass="cargo.cms.imprt.bo.ULDCheckInBO"  resultClass="java.lang.String">	
		select flt_type from flt_opr where FLT_KEY=#flightKey# and SCH_DATE=#flightDate#
	</select> -->

	<!--  Changed for QR -->
	<select id="checkIfRampDtlExists"  parameterClass="cargo.cms.imprt.bo.ULDCheckInBO"  resultClass="java.lang.String">
		select DOC_LINE_NO from imp_ramp_chk_dtl 
		where tr_no=(select tr_no from imp_ramp_chk_hd where flt_key=#flightKey# and flt_date=#flightDate#) and uld_key=#uldKey#
	</select>
	
	<!--  Changed for QR -->
	<select id="checkIfRampHeaderExists"  parameterClass="cargo.cms.imprt.bo.ULDCheckInBO"  resultClass="java.lang.String">
		select tr_no from imp_ramp_chk_hd where flt_key=#flightKey# and flt_date=#flightDate# 
	</select>
	
	<!--  Changed for QR
	<update id="imp_upd_export_flight" parameterClass="cargo.cms.imprt.bo.ULDCheckInBO" >
		update EXP_PMANIFEST_ULD set READY_DISP='Y',READY_WH = 'Y',
		EMPTY_YN = #empty#			
		where FLT_KEY=#expFltKey# and FLT_DATE=#expFltDate# and ULD_BT_NO=#uldKey#
	</update> -->

	<select id="imp_CountdtllistHeader" parameterClass="java.lang.String" resultClass="java.lang.Integer" >
		<!--SELECT COUNT(1) from IMP_RAMP_CHK_DTL WHERE TR_NO = #trNo# -->
		SELECT SUM(C) C
		FROM (SELECT COUNT(1) C from IMP_RAMP_CHK_DTL WHERE TR_NO = #trNo#
			  UNION ALL
			  SELECT COUNT(1) C from IMP_RAMP_INB_CHK_DTL WHERE TR_NO = #trNo#)
	</select>

	<delete id="imp_delchecklistHeader" parameterClass="map">
		DELETE IMP_RAMP_CHK_HD	WHERE TR_NO = #trNo# 
	</delete>

	<select id="imp_check_breakdown_start" parameterClass="map" resultClass="java.lang.Integer" >	
		select count(1) from imp_ramp_chk_dtl where uld_key=#ULD_KEY# and FLT_KEY=#FLT_KEY# and FLT_DATE=#FLT_DATE# 
		and BRKDN_START_DATE is not null and empty_ind='N'
	</select>

	<select id="imp_uld_validate_inventory"  parameterClass="java.lang.String" resultClass="java.lang.Integer">
		select count(1) from ULD_INVENTORY where ULD_KEY = #uldKey#		
   	</select>
   	
   	<select id="imp_lsp_validate_inventory"  parameterClass="java.lang.String" resultClass="java.lang.Integer">
		select count(1) from LSP_INVENTORY where LSP_NO = #lspNo#
   	</select>  
   	
   	<!--  Changed for QR -->
   	<select id="getLocCodeFromInvForLSP"  parameterClass="java.lang.String" resultClass="java.lang.String">
		select LOC_CODE from LSP_INVENTORY where LSP_NO = #lspNo# 
   	</select>    	

   	<select id="get_uldininventory_count" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		select count(1) from ULD_INVENTORY where ULD_KEY = #uldKey# and (OWNED_INV='Y' or loc_code is not null)
	</select>
	
	
	<select id="get_uldininventory_IFcount" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		select count(1) from ULD_INVENTORY where ULD_KEY = #uldKey# and TRANSIT_TYPE = 'IF'
	</select>
	
	
	<!--  Changed for QR -->
	<select id="getRHOoftheflightforreturnmail" parameterClass="java.util.Map"
		resultClass="java.lang.String">
		<![CDATA[			
		SELECT (SELECT CODE_DESC FROM CUST_COMPANY WHERE CODE=OPR.RHO_ID) FROM FLT_OPR OPR WHERE OPR.RHO_ID IS NOT NULL
		AND OPR.FLT_TYPE = 'A' AND OPR.FLT_KEY = #FLT_KEY# AND OPR.SCH_DATE = TO_DATE(#FLT_DATE#, 'DDMONYY')			
		]]>
	</select>
	<select id="getconfiguredreturnmail" parameterClass="java.lang.String"
		resultClass="java.lang.String">
		<![CDATA[			
		SELECT EMAIL_IDS from MAST_DMG_RTNULD_EMAILS WHERE RHO=#param#			
		]]>
	</select>
	<select id="getLocCodeFromInvForULD" parameterClass="java.lang.String" resultClass="java.lang.String">
		select LOC_CODE from ULD_INVENTORY where ULD_KEY = #uldKey#
	</select>
	
	<select id="getUldDamInd" parameterClass="java.lang.String" resultClass="java.lang.String">
		select NVL(dam_ind,'N') from ULD_INVENTORY where ULD_KEY = #uldKey#
	</select>
	
	<select id="imp_flt_validate_inventory"  parameterClass="cargo.cms.imprt.bo.ULDCheckInBO"   resultClass="java.lang.Integer">
		select count(1) from ULD_INVENTORY where ULD_KEY = #uldKey# and FLT_NO=#flightNo# and FLT_DATE=#flightDate#		
   	</select>
	
	<select id="checkEmptyFromInvForULD" parameterClass="java.lang.String" resultClass="java.lang.String">
		select EMPTY_FLG from ULD_INVENTORY where ULD_KEY = #uldKey# and rownum=1
	</select>
	
	<!--  Changed for QR -->
	<select id="checkEmptyFromInvForLSP"  parameterClass="java.lang.String" resultClass="java.lang.String">
		select EMPTY_FLG from LSP_INVENTORY where LSP_NO = #lspNo#
   	</select>	
   	
   	<update id="updateLocCodeULDInv" parameterClass="map">
		UPDATE ULD_INVENTORY SET 
		LOC_CODE = #locCode#, 
		EMPTY_FLG = 'N',
		TR_TYPE = #trtype#,
		REF_TR_TYPE = #refTrType#,
		REF_TR_EVENT = #refTrEvent#,
		LM_USER_ID = #userId#, 
	   	LM_DATE = SYSDATE
		where ULD_KEY = #uldKey#
	</update>
	
	<update id="updateLocCodeinULDInv" parameterClass="map">
		UPDATE ULD_INVENTORY SET 
		LOC_CODE = #locCode#, 
		EMPTY_FLG = 'N',
		TR_TYPE = #trtype#,
		OWNED_INV= NVL(#ownedInv#,OWNED_INV),
		CFM_STATUS= NVL(#cfmStatus#,CFM_STATUS),		
		LM_USER_ID = #userId#, 
	   	LM_DATE = SYSDATE
	   	<isEqual property="ownedInv" compareValue="Y">		
 			,ENTRY_TIME = sysdate
		</isEqual>
		where ULD_KEY = #uldKey#
	</update>
	
	<update id="updateLocCodeLSPInv" parameterClass="map">
		UPDATE LSP_INVENTORY SET 
		LOC_CODE = #locCode#, 
		EMPTY_FLG = 'N',
		REF_TR_TYPE = #refTrType#,
		REF_TR_EVENT = #refTrEvent#,
		LM_USER_ID = #userId#, 
	   	LM_DATE = SYSDATE 
		where LSP_NO = #lspNo#
	</update>		
	

	<!-- added by Kamakhya on 26-AUG-10  for Maintain DIR Starts Here for Iteration 2 -->
	<insert id="imp_insertAWBEventsForEventLog" parameterClass="cargo.cms.imprt.bo.MaintainDirBO">
		<![CDATA[
			INSERT INTO AWB_EVENTS 
			  (AWB_NO, AWB_DATE, EVENT_ID, EVENT_DESC, FLT_KEY, FLT_DATE,
			  FLT_TYPE, TR_NO, ULD_KEY, PCS, WT, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE ) 
			VALUES  
			  (#awbNo#,  TO_DATE(#awbDate#,'DDMONYY') , 'ACAR', 'Amend CAR', #flightNoKey#,  TO_DATE(#flightDate#,'DDMONYY'), 
			  'I', AWB_event_SEQ.nextval
			, NULL, nvl(#awbPc#,0),nvl(#awbWt#,0) ,'ADMIN1',  sysdate, 'ADMIN1',  sysdate)
		]]>
	</insert>
	
	<!--  Changed for QR -->
	<select id="FlightDIRSummaryList" parameterClass="cargo.cms.imprt.bo.MaintainDirBO" resultClass="cargo.cms.imprt.bo.MaintainDirBO">
		SELECT 
		shp.FLT_KEY flightNoKey, 
		shp.FLT_DATE flightDate,
		flt.CARR_CODE  flightKey,
		pkg_common.get_flt_ata(flt.flt_key, flt.sch_date,'A','DD') AS ata,
		pkg_common.get_flt_ata(flt.flt_key, flt.sch_date,'A','DD') AS ataTime, 
		shp.FDAW fdaw, 
		shp.MSAW msaw,
		shp.FDAV fdav, 
		shp.MSAV msav,		
		(select TO_CHAR(COUNT(1),'0')   from Imp_CAR_SHP    where (Doc_Disc = 'FDAW' OR Doc_Disc = 'MSAW'  
                          OR Doc_Disc = 'MSCN'  OR Doc_Disc = 'FDCN') and DIR_PROC_USER is null  
                          and Flt_Key =shp.FLT_KEY  and Flt_Date = shp.FLT_DATE) AS dirProcUser
		FROM 
			(SELECT 
			FLT_KEY, 
			TO_CHAR(FLT_DATE,'DDMONYY') FLT_DATE, 
			SUM(CASE WHEN NVL(DOC_DISC, 'N') = 'FDAW' THEN 1 ELSE 0 END) as FDAW, 
			SUM(CASE WHEN NVL(DOC_DISC, 'N') = 'MSAW' THEN 1 ELSE 0 END) AS MSAW,
			SUM(CASE WHEN NVL(DOC_DISC, 'N') = 'FDCN' THEN 1 ELSE 0 END) as FDAV, 
			SUM(CASE WHEN NVL(DOC_DISC, 'N') = 'MSCN' THEN 1 ELSE 0 END) AS MSAV
			
			FROM IMP_CAR_SHP GROUP BY FLT_KEY, FLT_DATE) shp
		 	JOIN FLT_OPR flt ON flt.FLT_KEY = shp.FLT_KEY AND 
			flt.SCH_DATE = shp.FLT_DATE AND FLT_TYPE = 'A' 		           		
			<isNotEmpty property="carrCode">
				AND	flt.CARR_CODE = #carrCode#
			</isNotEmpty>		
			<isEmpty property="carrCode">
				<isNotEmpty property="loginCarrier">
					AND	(flt.CARR_CODE = #loginCarrier#
					OR flt.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP 
					WHERE GRP_CARR_CODE	= #loginCarrier#))							
				</isNotEmpty>
			</isEmpty>  
		WHERE 
		  ( FDAW > 0 or MSAW > 0 OR FDAV  > 0 OR MSAV > 0 ) AND 
		    shp.FLT_DATE = #flightDate# 
		    
		<isNotEmpty property="flightNoKey">
			AND	shp.FLT_KEY = #flightNoKey#
		</isNotEmpty>
	</select>
	
	<!--  Modified for View Dir Summary List -->
	<!--  Changed for QR -->	
	<select id="ViewFltDIRSummaryList" parameterClass="cargo.cms.imprt.bo.MaintainDirBO" resultClass="cargo.cms.imprt.bo.MaintainDirBO">
          SELECT 
          SHP.FLT_KEY as flightNoKey,
          SHP.CARR_CODE as flightKey,
          TO_CHAR(SHP.FLT_DATE,'DDMONYY') AS flightDate,
          pkg_common.get_flt_ata(SHP.FLT_KEY, TO_CHAR(SHP.FLT_DATE,'DDMONYY'),'A') AS ata, 
            SUBSTR(TRIM(TO_CHAR(NVL(flt.ACT_TIME,0),'0000')),0,2)|| ':'|| 
          SUBSTR(TRIM(TO_CHAR(NVL(flt.ACT_TIME,0),'0000')),3,4) as ataTime,   
              SHP.FDAW fdaw,
              SHP.MSAW msaw,
              SHP.FDAV fdav,
              SHP.MSAV msav,
              SHP.FLT_DATE as fltDate,
        (case
         when (select COUNT(1) from Imp_CAR_SHP where DIR_PROC_USER is null and doc_disc is not null and Flt_Key = SHP.FLT_KEY  and Flt_Date = SHP.FLT_DATE ) >= 1
         then 'N'
         else 'Y'       
         end) as dirmaintain,
       (case
         when (select COUNT(1) from Imp_CAR_SHP where Flt_Key = SHP.FLT_KEY and Flt_Date = SHP.FLT_DATE AND send_fad_date is null and doc_disc is not null) >= 1
         then 'N'
         else 'Y'
         end) AS sentfad
      FROM
          (SELECT FLT_KEY,CARR_CODE, FLT_DATE, 
                  SUM(CASE WHEN NVL(DOC_DISC, 'N') = 'FDAW' THEN 1 ELSE 0 END) as FDAW, 
                  SUM(CASE WHEN NVL(DOC_DISC, 'N') = 'MSAW' THEN 1 ELSE 0 END) AS MSAW,
                  SUM(CASE WHEN NVL(DOC_DISC, 'N') = 'FDCN' THEN 1 ELSE 0 END) AS FDAV,
                  SUM(CASE WHEN NVL(DOC_DISC, 'N') = 'MSCN' THEN 1 ELSE 0 END) AS MSAV
                  FROM IMP_CAR_SHP s WHERE FLT_DATE BETWEEN #flightDateFrom# AND #flightDateTo# 
                  AND exists (SELECT null FROM FLT_OPR_EVENTS WHERE FLT_KEY=s.FLT_KEY and sch_date = s.flt_date and flt_type='A' AND FLT_CLS_YN != 'Y')
                  GROUP BY FLT_KEY, FLT_DATE,CARR_CODE) SHP, FLT_OPR flt
           WHERE
      flt.FLT_TYPE = 'A' and
      flt.FLT_KEY = SHP.FLT_KEY AND
      flt.sch_DATE = SHP.FLT_DATE     
		<isNotEmpty property="flightNoKey">
			AND SHP.FLT_KEY = NVL(#flightNoKey#,SHP.FLT_KEY) 
		</isNotEmpty>
		<isEmpty property="flightNoKey">
			<isNotEmpty property="loginCarrier">
				AND	(SHP.CARR_CODE = #loginCarrier#
				OR SHP.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP 
				WHERE GRP_CARR_CODE	= #loginCarrier#))							
			</isNotEmpty>
		</isEmpty>      
      AND SHP.FLT_DATE BETWEEN #flightDateFrom# AND #flightDateTo#
      AND ( SHP.FDAW > 0 or SHP.MSAW > 0 or SHP.FDAV > 0 or SHP.MSAV > 0)      
          <dynamic prepend="ORDER BY ">
                         <isNotEmpty property="sortOrder.sortField">
                        $sortOrder.sortField$
                  </isNotEmpty>
            </dynamic>        
      </select>

	<!--  Changed for QR -->	
	<select id="ViewFltDIRSummaryListCOUNT" parameterClass="cargo.cms.imprt.bo.MaintainDirBO" resultClass="java.lang.Integer">
	SELECT COUNT(1) AS totalRowCount FROM 
	      (SELECT SHP.FLT_KEY as flightNoKey,
          TO_CHAR(SHP.FLT_DATE,'DDMONYY') AS flightDate,
          pkg_common.get_flt_ata(flt.flt_key, flt.sch_date,'A') AS ata, 
   	      SUBSTR(TRIM(TO_CHAR(NVL(flt.ACT_TIME,0),'0000')),0,2)|| ':'|| 
          SUBSTR(TRIM(TO_CHAR(NVL(flt.ACT_TIME,0),'0000')),3,4) as ataTime,	
		  SHP.FDAW fdaw,
		  SHP.MSAW msaw,
		  SHP.FDAV fdav,
		  SHP.MSAV msav,
		  SHP.FLT_DATE as fltDate,
         (case
         when (select COUNT(1) from Imp_CAR_SHP where DIR_PROC_USER is null and Flt_Key = #flightNoKey# and Flt_Date BETWEEN #flightDateFrom# AND #flightDateTo#) >= 1
         then 'N'
         else 'Y'       
         end) as dirmaintain,
      (case
      when (select COUNT(1) from Imp_CAR_SHP where Flt_Key = #flightNoKey# and Flt_Date BETWEEN #flightDateFrom# AND #flightDateTo# AND send_fad_date is null and doc_disc is not null) >= 1
       then 'N'
       else 'Y'
       end) AS sentfad

      FROM
          (SELECT FLT_KEY,CARR_CODE, FLT_DATE, 
			SUM(CASE WHEN NVL(DOC_DISC, 'N') = 'FDAW' THEN 1 ELSE 0 END) as FDAW, 
			SUM(CASE WHEN NVL(DOC_DISC, 'N') = 'MSAW' THEN 1 ELSE 0 END) AS MSAW,
			SUM(CASE WHEN NVL(DOC_DISC, 'N') = 'FDCN' THEN 1 ELSE 0 END) AS FDAV,
			SUM(CASE WHEN NVL(DOC_DISC, 'N') = 'MSCN' THEN 1 ELSE 0 END) AS MSAV
			FROM IMP_CAR_SHP WHERE FLT_DATE BETWEEN #flightDateFrom# AND #flightDateTo# AND exists 
                  (SELECT null FROM FLT_OPR_EVENTS WHERE FLT_KEY=NVL(#flightNoKey#,FLT_KEY) AND FLT_CLS_YN != 'Y' 
                  AND sch_date between #flightDateFrom# AND #flightDateTo# and flt_type='A') 
			GROUP BY FLT_KEY, FLT_DATE,CARR_CODE) SHP, FLT_OPR flt
     WHERE
      flt.FLT_TYPE = 'A' and
      flt.FLT_KEY = SHP.FLT_KEY AND
      flt.sch_DATE = SHP.FLT_DATE  and
      SHP.FLT_KEY = NVL(#flightNoKey#,SHP.FLT_KEY) AND
      SHP.FLT_DATE BETWEEN #flightDateFrom# AND #flightDateTo#
      AND ( SHP.FDAW > 0 or SHP.MSAW > 0 or SHP.FDAV > 0 or SHP.MSAV > 0) 
        )
 	</select>
	<!--  Modified on 07-sep-10 for View Discrepancy Shipment List -->
	<select id="DiscrepancyShipmentList" parameterClass="cargo.cms.imprt.bo.MaintainDirBO" resultClass="cargo.cms.imprt.bo.MaintainDirBO">
		  SELECT 
			SUBSTR(shp.AWB_NO,1,3)  awbNoPrefix , 
			SUBSTR(shp.AWB_NO,4)  awbNoSuffix , 
			SUBSTR(shp.AWB_NO,1,3)||'-'||SUBSTR(shp.AWB_NO,4) as awbNoDisp , 
			shp.AWB_No awbNo, 
			TO_CHAR(shp.AWB_DATE, 'DDMONYY') awbDate, 
			car.AWB_DEST dest, 
			DOC_DISC docDisc, 
			mcd.CODE_DESC dirAction, 
			DIR_ACTION_RMK dirActionRemarks, 
			DIR_PROC_USER dirProcUser, 
			to_char(DIR_PROC_DATE, 'DDMONYY HH24:MI:SS') dirProcDate,
			shp.LM_USER_ID lmUserId,
			to_char(shp.LM_DATE, 'ddMMYY hh24:mi') lmDate,
			
			Decode(shp.send_fad_date,null,'N','Y') AS sentfad
						 
		FROM IMP_CAR_SHP shp 
		LEFT JOIN MAST_CODE_DTL mcd on DIR_ACTION = mcd.CODE AND mcd.CODE_TYPE='ACTION_CODE'
		JOIN IMP_CAR_AWB car ON shp.AWB_No = car.AWB_No AND shp.AWB_Date = car.AWB_Date
		WHERE 
		shp.FLT_KEY = #flightNoKey# AND 
		shp.FLT_DATE = #flightDate# 
		 AND DOC_DISC in ('FDAW', 'MSAW','FDCN','MSCN') Order By shp.AWB_No
	</select>
	
	<select id="fltclosedcheck"  parameterClass="map" resultClass="java.lang.Integer">
	SELECT COUNT(1) from flt_opr_events 
	where FLT_TYPE = 'A' and SCH_DATE = TO_DATE(#fltdate#,'DDMONYY') and FLT_CLS_DATE is not null 	
	AND FLT_KEY = #fltkey#
	</select>
	
	<select id="validateDocComplViewDir"  parameterClass="map" resultClass="java.lang.Integer">
		SELECT COUNT(1) from flt_opr_events	where TO_CHAR(SCH_DATE,'DDMONYY') =  #flightDate#
		and DOC_COMPL_DATE is not null 
		and DOC_COMPL_YN = 'Y'
		and FLT_TYPE = 'A' 
		AND FLT_KEY = #flightKey# 
	</select>
	<select id="validateFlightKeyForViewDir"  parameterClass="map" resultClass="java.lang.Integer">
		SELECT COUNT(1) from FLT_OPR_EVENTS 
			WHERE SCH_DATE BETWEEN #fltDtFrom# AND #fltDtTo# 
			and FLT_KEY= #fltKey# and FLT_TYPE = 'A' 
	</select>
	
	<select id="fltWhComplcheck"  parameterClass="map" resultClass="java.lang.Integer">
	select count(1) from flt_opr_events where flt_key=#fltkey# and sch_date = TO_DATE(#fltdate#,'DDMONYY') and flt_type='A' 
	and (WHSE_COMPL_DATE is not null or WHSE_COMPL_TIME is not null)
	</select>
	
	<!--  Changed for QR -->
	<select id="DiscrepancyShipmentbo" parameterClass="cargo.cms.imprt.bo.MaintainDirBO" resultClass="cargo.cms.imprt.bo.MaintainDirBO">
		SELECT 
			SUBSTR(shp.AWB_NO,1,3)  awbNoPrefix , 
			SUBSTR(shp.AWB_NO,4)  awbNoSuffix , 
			SUBSTR(shp.AWB_NO,1,3)||'-'||SUBSTR(shp.AWB_NO,4) as awbNoDisp , 
			shp.AWB_No awbNo, 
			to_char(shp.AWB_DATE, 'DDMONYY') awbDate, 
			car.AWB_DEST dest, 
			DOC_DISC docDisc, 
			DIR_ACTION dirAction, 
			DIR_ACTION_RMK dirActionRemarks, 
			DIR_PROC_USER dirProcUser, 
			to_char(DIR_PROC_DATE, 'DDMONYY HH24:MI:SS') dirProcDate,
			shp.LM_USER_ID lmUserId,
			to_char(shp.LM_DATE, 'ddMMYY hh24:mi') lmDate			 
		FROM IMP_CAR_SHP shp 
		JOIN IMP_CAR_AWB car ON shp.AWB_No = car.AWB_No AND shp.AWB_Date = car.AWB_Date
		WHERE 
		shp.FLT_KEY = #flightNoKey# AND 
		shp.FLT_DATE = #flightDate# AND 
		shp.AWB_NO = #awbNo# AND
		shp.AWB_DATE  = #awbDate# AND
		car.AWB_DEST = #dest# AND
		DOC_DISC = #docDisc#  Order By shp.AWB_No
	</select>
	<update id="updateDiscShpList" parameterClass="cargo.cms.imprt.bo.MaintainDirBO" >
		UPDATE 	IMP_CAR_SHP SET 		
		DIR_ACTION = #dirAction# , 
		DIR_ACTION_RMK = #dirActionRemarks#, 
		DIR_PROC_USER = #lmUserId# ,
		DIR_PROC_DATE = SYSDATE ,
		LM_USER_ID = #lmUserId# ,
		LM_DATE = SYSDATE ,
		TR_TYPE='MDIR' 
		WHERE AWB_NO = #awbNo# AND 
		to_char(AWB_DATE, 'DDMONYY') = #awbDate# AND 
		to_char(LM_DATE, 'ddMMYY hh24:mi') = #lmDate# AND
		FLT_KEY = #flightNoKey# AND 
		to_char(FLT_DATE, 'DDMONYY') = #flightDate# 	
	</update>
	
	<!--  Changed for QR 
	<update id="updateAWBEventsList" parameterClass="cargo.cms.imprt.bo.MaintainDirBO" >
		UPDATE 	AWB_EVENTS SET 			 
		CR_USER_ID = #lmUserId# ,
		CR_DATE = SYSDATE       ,
		LM_USER_ID = #lmUserId# ,
		LM_DATE = SYSDATE 
		WHERE AWB_NO = #awbNo# AND 
		to_char(AWB_DATE, 'DDMONYY') = #awbDate# AND 
		to_char(LM_DATE, 'ddMMYY hh24:mi') = #lmDate# AND
		FLT_KEY = #flightNoKey# AND 
		to_char(FLT_DATE, 'DDMONYY') = #flightDate# 	
	</update> -->
	
	<!--  Changed for QR -->
	<update id="deleteDiscShpList" parameterClass="cargo.cms.imprt.bo.MaintainDirBO" >
		UPDATE 	IMP_CAR_SHP SET 
		DIR_RMK = NULL , 
		DIR_ACTION = NULL , 
		DIR_ACTION_RMK = NULL, 
		DIR_PROC_USER = NULL ,
		DIR_PROC_DATE = NULL ,
		DOC_DISC = NULL ,
		LM_USER_ID = #lmUserId# ,
		LM_DATE = SYSDATE,
		TR_TYPE='MDIR'
		WHERE AWB_NO = #awbNo# AND 
		AWB_DATE = #awbDate# AND 
		to_char(LM_DATE, 'ddMMYY hh24:mi') = #lmDate# AND
		FLT_KEY = #flightNoKey# AND 
		FLT_DATE = #flightDate# 
	</update>
	
	<!--  Maintain DIR Ends Here for Iteration 2 -->
	
	
	<!-- Inbound Doc Arrival Time Started -->
<select id="inbdocarrivaltime" parameterClass="cargo.cms.imprt.bo.InbDocArrivalTimeBO" resultClass="cargo.cms.imprt.bo.InbDocArrivalTimeBO">
SELECT  evnt.TR_NO fltEventTrNo,flt.FLT_KEY fltKey, TO_CHAR(flt.SCH_DATE,'DDMONYY') fltDate, 
		PKG_COMMON.get_flt_sta(flt.FLT_KEY, flt.SCH_DATE, 'A') as sta,
		PKG_COMMON.get_flt_ata(flt.FLT_KEY, flt.SCH_DATE, 'A','DD') AS ata ,	
		TO_CHAR(evnt.DOC_ARR_DATE ,'ddMONYY HH24:MI') AS docArrTime, evnt.DOC_ARR_USER_ID AS docUserId,
		evnt.NO_OF_PACKS AS pouch,	evnt.DOC_COMPL_YN AS docComplYN ,
		TO_CHAR(evnt.LM_DATE, 'ddMMYY HH24:MI:SS') as lmDate
FROM    FLT_OPR flt	JOIN FLT_OPR_EVENTS evnt ON 
		evnt.FLT_KEY = flt.FLT_KEY AND 	evnt.SCH_DATE = flt.SCH_DATE 
		AND evnt.FLT_TYPE = 'A'		
WHERE to_date((to_char(flt.sch_date,'DDMONYY')||to_char(flt.SCH_TIME,'0000')),'DDMONYYHH24mi')  
            BETWEEN TO_DATE(#inbDocArrTimeFromDateTime#,'DDMONYYHH24mi') AND TO_DATE(#inbDocArrTimeToDateTime#,'DDMONYYHH24mi')           
<!-- WHERE   <![CDATA[ flt.SCH_DATE >= TO_DATE(#inbDocArrTimeFromDateTime#, 'ddMMYY HH24:MI:SS') and flt.SCH_DATE <= TO_DATE(#inbDocArrTimeToDateTime#, 'ddMMYY HH24:MI:SS') 	  ]]>-->
		AND	flt.FLT_TYPE = 'A'
		<isNotEmpty property="carrCode">
			AND	flt.CARR_CODE = #carrCode#
		</isNotEmpty>
		<isNotEmpty property="fltNo">
			AND	flt.FLT_NO = #fltNo#
		</isNotEmpty>
		<isNotEmpty property="fltKey">
			AND	flt.FLT_KEY = #fltKey#
		</isNotEmpty> 
		ORDER BY flt.SCH_DATE,sta,flt.FLT_KEY 
</select>
	
<update id="revertdocarrival" parameterClass="cargo.cms.imprt.bo.InbDocArrivalTimeBO">
		UPDATE FLT_OPR_EVENTS SET 
		NO_OF_PACKS = null , 
		DOC_ARR_USER_ID = null  , 
		DOC_ARR_DATE = null,
		LM_USER_ID  = #lmUserId#, 
		LM_DATE = sysdate
		where TR_NO = #fltEventTrNo# and TO_CHAR(LM_DATE, 'ddMMYY HH24:MI:SS')=#lmDate#
</update>
<update id="savetdocarrival" parameterClass="cargo.cms.imprt.bo.InbDocArrivalTimeBO">
		UPDATE FLT_OPR_EVENTS SET 
		NO_OF_PACKS = #pouch# , 
		DOC_ARR_USER_ID = #lmUserId# , 
		DOC_ARR_DATE = sysdate,
		LM_USER_ID  = #lmUserId#, 
		LM_DATE = sysdate
		where TR_NO = #fltEventTrNo# and TO_CHAR(LM_DATE, 'ddMMYY HH24:MI:SS')=#lmDate#
</update>

<select id="sqlCheckATA"  parameterClass="cargo.cms.imprt.bo.InbDocArrivalTimeBO" resultClass="java.lang.Integer">
	SELECT COUNT(1) from flt_opr
	where FLT_TYPE = 'A' and SCH_DATE = TO_DATE(#fltDate#,'DDMONYY') 	
	AND FLT_KEY = #fltKey# and ACT_DATE is null and ACT_TIME is null 
</select>
	
<!-- Inbound Doc Arrival Time Ended -->
<!-- Confirm Inbound Uld starts-->
<!--  Changed for QR -->
	<select id="selectATAWeather" parameterClass="java.util.HashMap" resultClass="cargo.cms.imprt.bo.UldAllotBO">	
		select
		 (select code_desc from mast_code_dtl where code = A.WTHR_COND and code_type='WTH_CONDN') wthrcond,
		 PKG_COMMON.get_flt_ata(A.FLT_KEY, A.SCH_DATE,'A','DD') ataTime	
		 FROM FLT_OPR A where  FLT_KEY=#FLT_KEY# AND to_char(SCH_DATE,'DDMONYY')=#FLT_DATE# AND FLT_TYPE='A'
		 <isNotEmpty prepend="AND" property="loginCustCode">
    		RHO_ID = #loginCustCode#
		</isNotEmpty> 
	</select>

<!--  Changed for QR -->
<select id="sqlFetchUldAllot" parameterClass="cargo.cms.imprt.bo.UldAllotBO" resultClass="cargo.cms.imprt.bo.UldAllotBO">	
		select ALLOT_TYPE inbUldType,
		ALLOT_TYPE oldInbUld,
		QTY uldQty,
		QTY oldUldQty,
		EMPTY emptyInd,
		EMPTY oldEmptyInd 
		from IMP_CFM_ULD_TOWED_DTL where flt_key=#flightCarr# and flt_date=#arrDate#
</select>

<!--  Changed for QR 
<select id="sqlEdiFFMloadedUld" parameterClass="cargo.cms.imprt.bo.UldAllotBO" resultClass="java.lang.String">	
         select COUNT(1) from EDI_FFM_ULD where ULD_LOD_IND='Y'
</select> -->

<!-- Changed for QR
<select id="sqlTowGetLoaded" parameterClass="cargo.cms.imprt.bo.UldAllotBO" resultClass="java.lang.String">	
         select COUNT(1) from imp_cfm_uld_towed_dtl where EMPTY='N'
</select> -->

<!--  Changed for QR -->
<select id="sqlQueryTowedList" parameterClass="cargo.cms.imprt.bo.UldAllotBO" resultClass="cargo.cms.imprt.bo.UldAllotBO">	
select IC.BATCH_NO batchNo, 
	   IC.BATCH_NO oldbatchNo,
       IC.ULD_TYPE towUldType,
       IC.ULD_TYPE oldtowUldType,
       IC.QTY towQty, 
       IC.QTY oldTowQty,
       IC.TO_NO towOrdrNo,
       IC.TO_NO oldtowNo,
       TO_CHAR(IC.CTO_ARR_TIME,'DDMONYY') ctoArrTime, 
       TO_CHAR(IC.CTO_ARR_TIME,'DDMONYY') oldctoTime,
       TO_CHAR(IC.CTO_ARR_TIME,'HH24') ctoArrTimeHr,
       TO_CHAR(IC.CTO_ARR_TIME,'HH24') oldctoTimeHr,
       TO_CHAR(IC.CTO_ARR_TIME,'MI') ctoArrTimeMin,
       TO_CHAR(IC.CTO_ARR_TIME,'MI') oldctoTimeMin,
       TO_CHAR(IC.START_TIME,'DDMONYY') towStrtTime,
       TO_CHAR(IC.START_TIME,'DDMONYY') oldStrtTime,
       TO_CHAR(IC.START_TIME,'HH24') towStrtTimeHr,
       TO_CHAR(IC.START_TIME,'HH24') oldStrtTimeHr,
       TO_CHAR(IC.START_TIME,'MI') towStrtTimeMin, 
       TO_CHAR(IC.START_TIME,'MI') oldStrtTimeMin,
       TO_CHAR(IC.END_TIME,'DDMONYY') towEndTime,
       TO_CHAR(IC.END_TIME,'DDMONYY') oldEndTime,
       TO_CHAR(IC.END_TIME,'MI') towEndTimeMin,
       TO_CHAR(IC.END_TIME,'MI') oldEndTimeMin,
       TO_CHAR(IC.END_TIME,'HH24') towEndTimeHr,
       TO_CHAR(IC.END_TIME,'HH24') oldEndTimeHr
from imp_cfm_uld_towed_tow_info IC 
JOIN FLT_OPR FO ON FO.FLT_KEY = IC.FLT_KEY AND FO.SCH_DATE = IC.FLT_DATE
where  IC.FLT_KEY=#flightCarr# AND IC.FLT_DATE=#arrDate#
<isNotEmpty prepend="AND" property="loginCarrier">
    (FO.CARR_CODE = #loginCarrier#
     OR FO.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE= #loginCarrier#))
</isNotEmpty>
<isEmpty property="loginCarrier">
<isNotEmpty prepend="AND" property="loginCustCode">
    FO.RHO_ID = #loginCustCode#
</isNotEmpty>
</isEmpty>
 </select>
 
 <!--  Changed for QR -->
<insert id="sqlSaveFlightInfo" parameterClass="cargo.cms.imprt.bo.UldAllotBO">	
		Insert into IMP_CFM_ULD_TOWED 
		(FLT_KEY,
		FLT_DATE,
		BULK_QTY,
		CR_USER_ID,
		CR_DATE,
		LM_USER_ID,
		LM_DATE,
		FLT_TYPE)
		 values (
		 #flightCarr#,
		 #arrDate#,
		 #bulkQty#,
		 #userID#,
		 SYSDATE,
		 #userID#,
		 SYSDATE,'I')
</insert>

<!--  Changed for QR -->
<insert id="sqlSaveInbAllotLst" parameterClass="cargo.cms.imprt.bo.UldAllotBO">	
	Insert into IMP_CFM_ULD_TOWED_DTL 
	(FLT_KEY,
	FLT_DATE,
	ALLOT_TYPE,
	QTY,EMPTY,
	CR_USER_ID,
	CR_DATE,
	LM_USER_ID,
	LM_DATE,
	FLT_TYPE)
	 values 
	 (#flightCarr#,
	 #arrDate#,
	 #inbUldType#,
	 #uldQty#,
	 NVL(#emptyInd#,'Y'),
	 #userID#,
     SYSDATE,
	 #userID#,
	 SYSDATE,
	 'I')
</insert>
<insert id="save_imp_car_shp_gt_cms" parameterClass="cargo.cms.imprt.bo.MaintainCARBO" >
      INSERT INTO GT_CMS
            (COLUMN_1, COLUMN_2, COLUMN_3, COLUMN_4, COLUMN_5, COLUMN_6, COLUMN_7)
      VALUES
            (#awbNo#,#awbDate#,#fltKey#,#fltDate#,#carCreated#, 'DEL',#ffmFlag#)    
 </insert>
	
<!--  Changed for QR -->
<delete id="deleteAllFromTowedDtl" parameterClass="cargo.cms.imprt.bo.UldAllotBO">
	delete from IMP_CFM_ULD_TOWED_DTL where  FLT_KEY=#flightCarr# AND FLT_DATE=#arrDate# 
</delete>

<!--  Changed for QR -->
<delete id="sqlDeleteToweInfo" parameterClass="cargo.cms.imprt.bo.UldAllotBO">
	delete from IMP_CFM_ULD_TOWED_TOW_INFO where  FLT_KEY=#flightCarr# AND FLT_DATE=#arrDate#
</delete>

<!--  Changed for QR -->
<delete id="deleteAllFromTowed" parameterClass="cargo.cms.imprt.bo.UldAllotBO">
 delete from IMP_CFM_ULD_TOWED where FLT_KEY=#flightCarr# AND FLT_DATE=#arrDate# 
 </delete>
 
 <!--  Changed for QR -->
 <delete id="sqlDeleteAllotList" parameterClass="cargo.cms.imprt.bo.UldAllotBO">
 delete from IMP_CFM_ULD_TOWED_DTL  Where FLT_KEY=#flightCarr# and FLT_DATE=#arrDate# and ALLOT_TYPE=#inbUldType# and EMPTY=#oldEmptyInd#
 </delete>
 
  <!--  Changed for QR -->
  <delete id="sqlDeleteTowedList" parameterClass="cargo.cms.imprt.bo.UldAllotBO">
 delete from imp_cfm_uld_towed_tow_info 
 where FLT_KEY=#flightCarr# AND 
 FLT_DATE=#arrDate#  
 <isEmpty  property="batchNo">
 AND BATCH_NO IS NULL 
 </isEmpty>
 <isNotEmpty  property="batchNo">
 AND BATCH_NO=#batchNo#
 </isNotEmpty>	
 <isEmpty  property="towUldType">
 AND ULD_TYPE IS NULL
 </isEmpty>
 <isNotEmpty  property="towUldType">
 AND ULD_TYPE=#towUldType# 
 </isNotEmpty>	
 AND QTY=#towQty# 
 <isEmpty  property="towOrdrNo">
 AND TO_NO IS NULL
 </isEmpty>	
 <isNotEmpty  property="towOrdrNo">
 AND TO_NO=#towOrdrNo#
 </isNotEmpty>	
 AND TO_CHAR(CTO_ARR_TIME,'DDMONYY HH24MI')=#ctoArrTime# 
 <isEmpty  property="towStrtTime">
 AND START_TIME IS NULL
 </isEmpty>
  <isNotEmpty  property="towStrtTime">
  AND TO_CHAR(START_TIME,'DDMONYY HH24MI')=#towStrtTime# 
 </isNotEmpty>
  <isEmpty  property="towEndTime">
 AND END_TIME IS NULL 
 </isEmpty>
 <isNotEmpty  property="towEndTime">
 AND TO_CHAR(END_TIME,'DDMONYY HH24MI')=#towEndTime# 
 </isNotEmpty>

</delete>

  <!--  Changed for QR -->
 <insert id="sqlInsertTowOderData" parameterClass="cargo.cms.imprt.bo.UldAllotBO">	
 Insert into IMP_CFM_ULD_TOWED_TOW_INFO (
FLT_KEY,
FLT_DATE,
BATCH_NO,                                
ULD_TYPE,
QTY,
TO_NO,
CTO_ARR_TIME,
START_TIME,
END_TIME,
CR_USER_ID,
CR_DATE,
LM_USER_ID,
LM_DATE,
FLT_TYPE)
values (
#flightCarr#,
#arrDate#,
#batchNo#, 
#towUldType#,
#towQty#,
#towOrdrNo#,
TO_DATE(#ctoArrTime#,'DDMONYY HH24MI'),
TO_DATE(#towStrtTime#,'DDMONYY HH24MI'),
TO_DATE(#towEndTime#,'DDMONYY HH24MI'),
#userID#, 
sysdate, 
#userID#, 
sysdate, 
'I'
)
</insert>

<!--  Changed for QR -->
<select id="sqlUldLoadedFfmList" parameterClass="cargo.cms.imprt.bo.DeclareRampBO" resultClass="cargo.cms.imprt.bo.DeclareRampBO">	
<![CDATA[
		 select (COUNT(ALLOTGROUP_1.ULD_ALLOT) || ''  || ALLOTGROUP_1.ULD_ALLOT) AS ffmULD
         from IMP_RAMP_INB_CHK_DTL INB
         LEFT JOIN ddt_msg m ON INB.flt_key = m.flt_key and INB.flt_date = m.flt_date and m.ddt_status = 'P' 
         LEFT JOIN ddt_uld b ON b.tr_no = m.tr_no and INB.uld_key = b.uld_key 
         LEFT JOIN ULD_GROUP_TYPE ULDGROUP_1 
         ON ULDGROUP_1.ULD_TYPE = INB.ULD_TYPE
         LEFT JOIN MAST_ULD_ALLOT_GROUP ALLOTGROUP_1 
         ON ALLOTGROUP_1.ULD_GROUP = ULDGROUP_1.ULD_GROUP
         where INB.empty_ind = 'N' and  INB.ffm_ind ='Y' 
         and (b.trf_type is null or b.trf_type NOT IN ('TT','IF')) 
         and INB.flt_key=#flightKey# and TO_CHAR(INB.flt_date,'DDMONYY')=#flightDate#
         GROUP BY INB.ULD_TYPE,ALLOTGROUP_1.ULD_ALLOT order by ALLOTGROUP_1.ULD_ALLOT
]]>
</select>

<select id="sqlUldLoadedTowCount" parameterClass="cargo.cms.imprt.bo.DeclareRampBO" resultClass="cargo.cms.imprt.bo.DeclareRampBO">	
		select ((QTY)||(ALLOT_TYPE)) uldTowedConfirm from IMP_CFM_ULD_TOWED_DTL where flt_key=#flightKey# and TO_CHAR(flt_date,'DDMONYY')=#flightDate# and  EMPTY='N' order by ALLOT_TYPE
</select>

<select id="sqlUldLoadedChkdinCount" parameterClass="cargo.cms.imprt.bo.DeclareRampBO" resultClass="cargo.cms.imprt.bo.DeclareRampBO">
          select (COUNT(ALLOTGROUP_2.ULD_ALLOT) || ''  || ALLOTGROUP_2.ULD_ALLOT) AS actualChkinULD  
          from IMP_RAMP_CHK_DTL RAMPCHK
          LEFT JOIN ULD_GROUP_TYPE ULDGROUP_2 ON ULDGROUP_2.ULD_TYPE = RAMPCHK.ULD_TYPE
          LEFT JOIN MAST_ULD_ALLOT_GROUP ALLOTGROUP_2 ON ALLOTGROUP_2.ULD_GROUP = ULDGROUP_2.ULD_GROUP
          where  RAMPCHK.flt_key=#flightKey# and TO_CHAR(RAMPCHK.flt_date,'DDMONYY')=#flightDate# and
          RAMPCHK.ULD_TYPE not in (Select CODE from MAST_ULD_TYPE where H_CONT_IND='Y' or BT_IND='Y') and NVL(RAMPCHK.EMPTY_IND,'N') = 'N'
          GROUP BY RAMPCHK.ULD_TYPE,ALLOTGROUP_2.ULD_ALLOT order by ALLOTGROUP_2.ULD_ALLOT
</select>

<select id="sqlTowedHContCount" parameterClass="cargo.cms.imprt.bo.DeclareRampBO" resultClass="java.lang.String">	
       SELECT bulk_qty
	   FROM imp_cfm_uld_towed 
	   where flt_key=#flightKey# and TO_CHAR(flt_date,'DDMONYY')=#flightDate#
</select>

<select id="sqlUldHcontChkdinCount" parameterClass="cargo.cms.imprt.bo.DeclareRampBO" resultClass="java.lang.String">
        <!-- select count(1) from imp_ramp_chk_dtl a, mast_uld_type b
         where a.flt_key=#flightKey# and TO_CHAR(a.flt_date,'DDMONYY')=#flightDate# and a.uld_type=b.code and b.h_cont_ind='Y' -->
          select count(1) from imp_ramp_chk_dtl a
 			join mast_uld_type b
 			on a.uld_type=b.code
 			where a.flt_key=#flightKey#  
 			and TO_CHAR(a.flt_date,'DDMONYY')=#flightDate# and
       (b.h_cont_ind='Y' or b.bt_ind='Y') and nvl(a.empty_ind,'N') = 'N'
</select>

<update id="sqlUpdateRampStatus" parameterClass="cargo.cms.imprt.bo.DeclareRampBO">
	UPDATE FLT_OPR_EVENTS
	SET RAMP_COMPL_YN='Y',
    RAMP_COMPL_DATE=TO_CHAR(SYSDATE,'DDMONYY'),
	RAMP_COMPL_TIME=TO_CHAR(SYSDATE,'HH24MI'),
	RAMP_COMPL_USER_ID=#crUserId# 
	WHERE FLT_KEY=#flightKey# and SCH_DATE=#flightDate# and FLT_TYPE='A'
</update>

<select id="sqlBulkQty" parameterClass="cargo.cms.imprt.bo.UldAllotBO" resultClass="java.lang.String">	
 SELECT bulk_qty
	   FROM imp_cfm_uld_towed 
	   where flt_key=#flightCarr# and flt_date=#arrDate#
</select>

<select id="sqlRampStatus" parameterClass="cargo.cms.imprt.bo.UldAllotBO" resultClass="java.lang.String">	
      select count(1) from flt_opr_events where RAMP_COMPL_YN='Y' and FLT_KEY=#flightCarr# and SCH_DATE=#arrDate# and FLT_TYPE = 'A'
</select>
<!-- Confirm Inbound Uld ends-->


<!-- starts For enquire display -->

<select id="sqlEnqUldLoadedFfmList" parameterClass="cargo.cms.imprt.bo.DeclareRampBO" resultClass="cargo.cms.imprt.bo.DeclareRampBO">	
<![CDATA[
     select (COUNT( ALLOTGROUP_1.ULD_ALLOT) || ''  || ALLOTGROUP_1.ULD_ALLOT) AS ffmULD
         from IMP_RAMP_INB_CHK_DTL INB
         LEFT JOIN ddt_msg m ON INB.flt_key = m.flt_key and INB.flt_date = m.flt_date and m.ddt_status='P' 
    	 LEFT JOIN ddt_uld b ON b.tr_no = m.tr_no and INB.uld_key = b.uld_key
         LEFT JOIN ULD_GROUP_TYPE ULDGROUP_1 ON ULDGROUP_1.ULD_TYPE = INB.ULD_TYPE
         LEFT JOIN MAST_ULD_ALLOT_GROUP ALLOTGROUP_1 ON ALLOTGROUP_1.ULD_GROUP = ULDGROUP_1.ULD_GROUP
         where INB.empty_ind = 'N' and  INB.ffm_ind ='Y' and (b.trf_type is null or b.trf_type NOT IN ('TT','IF'))
         and INB.flt_key=#flightKey# and TO_CHAR(INB.flt_date,'DDMONYY')=#flightDate#
         GROUP BY ALLOTGROUP_1.ULD_ALLOT order by ALLOTGROUP_1.ULD_ALLOT
]]>
</select>

<select id="sqlEnqUldLoadedChkdinCount" parameterClass="cargo.cms.imprt.bo.DeclareRampBO" resultClass="cargo.cms.imprt.bo.DeclareRampBO"> 
             
           select * from ( select COUNT(ALLOTGROUP_2.ULD_ALLOT)  || ''  || ALLOTGROUP_2.ULD_ALLOT AS actualChkinULD,
          ALLOTGROUP_2.ULD_ALLOT as sortingOrder,
          RAMPCHK.flt_key flightNo,TO_CHAR(RAMPCHK.flt_date,'DDMONYY') flightDate  
          from IMP_RAMP_CHK_DTL RAMPCHK
          JOIN MAST_ULD_TYPE MULD ON MULD.CODE = RAMPCHK.ULD_TYPE
          LEFT JOIN ULD_GROUP_TYPE ULDGROUP_2 ON ULDGROUP_2.ULD_TYPE = RAMPCHK.ULD_TYPE
          LEFT JOIN MAST_ULD_ALLOT_GROUP ALLOTGROUP_2 ON ALLOTGROUP_2.ULD_GROUP = ULDGROUP_2.ULD_GROUP
          where  RAMPCHK.flt_key=#flightKey# and TO_CHAR(RAMPCHK.flt_date,'DDMONYY')=#flightDate#
          <![CDATA[
     	  	 AND MULD.H_CONT_IND <> 'Y' AND
    		  MULD.BT_IND <> 'Y' AND
    		  nvl(RAMPCHK.EMPTY_IND,'N') = 'N'
    		  ]]>
  	  	   GROUP BY ALLOTGROUP_2.ULD_ALLOT,RAMPCHK.flt_key,RAMPCHK.flt_date
   union all          
       select count(1)||'BULK' actualChkinULD,
          null as sortingOrder,
          RAMPCHK.flt_key flightNo,TO_CHAR(RAMPCHK.flt_date,'DDMONYY') flightDate  
          from IMP_RAMP_CHK_DTL RAMPCHK
          JOIN MAST_ULD_TYPE MULD ON MULD.CODE = RAMPCHK.ULD_TYPE
          LEFT JOIN ULD_GROUP_TYPE ULDGROUP_2 ON ULDGROUP_2.ULD_TYPE = RAMPCHK.ULD_TYPE
          LEFT JOIN MAST_ULD_ALLOT_GROUP ALLOTGROUP_2 ON ALLOTGROUP_2.ULD_GROUP = ULDGROUP_2.ULD_GROUP
          where  RAMPCHK.flt_key=#flightKey# and TO_CHAR(RAMPCHK.flt_date,'DDMONYY')=#flightDate#
  		  and (MULD.H_CONT_IND = 'Y' OR MULD.BT_IND = 'Y') and     	nvl(RAMPCHK.EMPTY_IND,'N') = 'N'
  		  
  		 GROUP BY RAMPCHK.flt_key,RAMPCHK.flt_date ) I
         order by I.sortingOrder
          
</select>


<select id="sqlEnqUldLoadedTowCount" parameterClass="cargo.cms.imprt.bo.DeclareRampBO" resultClass="cargo.cms.imprt.bo.DeclareRampBO">	
  select ((DTL.QTY)||(DTL.ALLOT_TYPE)) uldTowedConfirm,(HD.BULK_QTY||'BULK') bulkqty,
    HD.flt_key flightNo,TO_CHAR(HD.flt_date,'DDMONYY')
    flightDate 
    from IMP_CFM_ULD_TOWED HD 
    left join IMP_CFM_ULD_TOWED_DTL DTL on DTL.flt_key=HD.flt_key and DTL.flt_date=HD.flt_date  AND nvl(DTL.EMPTY,'N')='N' 
    where  HD.flt_key=#flightKey# and TO_CHAR(HD.flt_date,'DDMONYY')=#flightDate#
	    order by DTL.ALLOT_TYPE  
	    <!-- 
        select ((DTL.QTY)||(DTL.ALLOT_TYPE)) uldTowedConfirm,(HD.BULK_QTY || 'BULK') bulkqty,
	    DTL.flt_key flightNo,TO_CHAR(DTL.flt_date,'DDMONYY')
	    flightDate 
	    from IMP_CFM_ULD_TOWED_DTL DTL 
	    join IMP_CFM_ULD_TOWED HD on DTL.flt_key=HD.flt_key and DTL.flt_date=HD.flt_date
	    where DTL.EMPTY='N' and
	    DTL.flt_key=#flightKey# and TO_CHAR(DTL.flt_date,'DDMONYY')=#flightDate#
	    order by uldTowedConfirm -->
</select>
  


<!-- ends For enquire display -->

<!-- Send fad starts here-->

<select id="imp_SendFadList" parameterClass="cargo.cms.imprt.bo.MaintainDirBO" resultClass="cargo.cms.imprt.bo.MaintainDirBO">
		SELECT evnt.TR_NO fltEventTrNo, 
		shp.FLT_KEY flightNoKey, shp.FLT_DATE flightDate,  
		flt.ACT_TIME  ata,
		flt.CARR_CODE flightKey,
		PKG_COMMON.get_flt_ata(shp.FLT_KEY,shp.FLT_DATE,'A','DD') AS ataTime,
		shp.ManfShp noOfManfShpm, 
		shp.CARShp noOfShpmCAR, shp.DIRShp noOfDIRShpm, shp.CIRShp noOfCIRShpm,  
		TO_CHAR(evnt.DOC_COMPL_DATE,'DDMONYY HH24:MI') docComplDate,		
		evnt.DOC_COMPL_TIME docComplTime,		
		substr(evnt.DOC_COMPL_TIME,1,2)||':'||substr(evnt.DOC_COMPL_TIME,3,2)||':'||substr(evnt.DOC_COMPL_TIME,5)  docComplTimeDisp,		
		evnt.DOC_COMPL_USER_ID docComplStaffID, 	fltrpt.CR_DATE fltHdlgDataGenDate  	

		FROM (SELECT FLT_KEY, TO_CHAR(FLT_DATE,'DDMONYY') FLT_DATE, 
			 SUM(CASE WHEN NVL(FFM_FLG, 'N') = 'Y' and MANIFEST_PCS > 0 THEN 1 ELSE 0 END) AS ManfShp, 
			 SUM(CASE WHEN NVL(CAR_CREATED, 'N') = 'Y' THEN 1 ELSE 0 END) AS CARShp,
			 SUM(CASE WHEN (NVL(DOC_DISC, 'N') = 'FDAW' 
	    OR NVL(DOC_DISC, 'N') = 'MSAW' 
	    OR NVL(DOC_DISC, 'N') = 'FDCA' 
		OR NVL(DOC_DISC, 'N') = 'MSCA' 
		OR NVL(DOC_DISC, 'N') = 'FDCN'
		OR NVL(DOC_DISC, 'N') = 'MSCN'
		OR NVL(DOC_DISC, 'N') = 'FDMB'
		OR  NVL(DOC_DISC, 'N') = 'MSMB') THEN 1 ELSE 0 END) AS DIRShp,
			 SUM(CASE WHEN CIR_PROC_USER is not null THEN 1 ELSE 0 END) AS CIRShp
			 FROM IMP_CAR_SHP GROUP BY FLT_KEY, FLT_DATE) shp 
		
		JOIN FLT_OPR flt ON 
			flt.FLT_KEY = shp.FLT_KEY AND 
			flt.SCH_DATE = shp.FLT_DATE AND
			flt.FLT_TYPE = 'A'	
			<isNotEmpty property="carrCode">
				AND	flt.CARR_CODE = #carrCode#
			</isNotEmpty>
		 	<isEmpty property="carrCode">
				<isNotEmpty property="loginCarrier">
					AND	(flt.CARR_CODE = #loginCarrier#
					OR flt.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP 
					WHERE GRP_CARR_CODE	= #loginCarrier#))							
				</isNotEmpty>
			</isEmpty>    
		JOIN FLT_OPR_EVENTS evnt ON 
			evnt.FLT_KEY = shp.FLT_KEY AND 
			evnt.SCH_DATE = shp.FLT_DATE AND 
			evnt.FLT_TYPE = 'A'	
		 
		LEFT JOIN IMP_FLT_HAND_SUMMARY fltrpt ON 
			fltrpt.FLT_KEY = shp.FLT_KEY AND 
			fltrpt.FLT_DATE = shp.FLT_DATE AND 
			fltrpt.Rep_Module = 'IDOC' 	
			
		 WHERE shp.FLT_DATE = #flightDate# 
		<isNotEmpty property="flightNoKey">
			AND	shp.FLT_KEY = #flightNoKey#
		</isNotEmpty>	
		<isEmpty property="flightNoKey">
			and (shp.CIRShp > 0 or  shp.DIRShp > 0)
		</isEmpty>		  
	</select>
	
	<!--  Changed for QR -->
	<select id="DiscShipListForSendFad" parameterClass="cargo.cms.imprt.bo.MaintainDirBO" resultClass="cargo.cms.imprt.bo.MaintainDirBO">
		SELECT SUBSTR(shp.AWB_NO,1,3)  awbNoPrefix , 
				SUBSTR(shp.AWB_NO,4)  awbNoSuffix , 
				SUBSTR(shp.AWB_NO,1,3)||'-'||SUBSTR(shp.AWB_NO,4) as awbNoDisp , 
				shp.AWB_No awbNo, 
				TO_CHAR(shp.AWB_DATE, 'DDMONYY') awbDate, 
				car.awb_Origin awbOrigin,
				car.AWB_DEST dest, 
				shp.MANIFEST_PCS manfPc,
				shp.MANIFEST_WT manfWt,
				car.AWB_PCS awbPc,
				car.AWB_WT awbWt,
				docDisc docDisc, 
				mcd.CODE_DESC dirAction, 
				DIR_ACTION_RMK dirActionRemarks, 
				DIR_PROC_USER dirProcUser, 
				to_char(DIR_PROC_DATE, 'DDMONYY') dirProcDate,
				fad.LM_USER_ID lmUserId,
				to_char(fad.LM_DATE, 'DDMONYY HH24:MI:SS') lmDate,
				fad.tr_No trNo,
				f.Orig fltOrigin,
				f.Dest fltDest
		FROM (Select DOC_DISC docDisc, s.* from IMP_CAR_SHP s) shp 
		left join (select max(TO_NUMBER(Tr_No)) Tr_No, AWB_NO, AWB_DATE, DISC_TYPE, FLT_KEY, FLT_DATE from Imp_FAD_AWB 
			where FAD_SEND = 'Y' group by AWB_NO, AWB_DATE, DISC_TYPE, FLT_KEY, FLT_DATE) tr 
			on tr.AWB_NO = shp.AWB_NO and tr.AWB_DATE = shp.AWB_DATE and tr.DISC_TYPE = shp.docDisc
			and tr.FLT_KEY = shp.FLT_KEY and tr.FLT_DATE = shp.FLT_DATE 
		left join Flt_Opr f on f.FLT_KEY = shp.FLT_KEY and f.Sch_DATE = shp.FLT_DATE and f.Flt_Type = 'A'
		left join Imp_FAD_AWB fad on fad.Tr_No = tr.Tr_No
		LEFT JOIN MAST_CODE_DTL mcd on shp.DIR_ACTION = mcd.CODE AND mcd.CODE_TYPE='ACTION_CODE'
		JOIN IMP_CAR_AWB car ON shp.AWB_No = car.AWB_No 
		AND shp.AWB_Date = car.AWB_Date
		WHERE 
		shp.FLT_KEY = #flightNoKey# AND 
		shp.FLT_DATE = #flightDate#	AND 
		(NVL(shp.DOC_DISC, 'N') = 'FDAW' OR NVL(shp.DOC_DISC, 'N') = 'MSAW'
		OR NVL(shp.DOC_DISC, 'N') = 'FDCA' 
		OR NVL(shp.DOC_DISC, 'N') = 'MSCA' 
		OR NVL(shp.DOC_DISC, 'N') = 'FDCN'
		OR NVL(shp.DOC_DISC, 'N') = 'MSCN'
		OR NVL(shp.DOC_DISC, 'N') = 'FDMB'
		OR  NVL(shp.DOC_DISC, 'N') = 'MSMB')
		 UNION ALL
     	SELECT SUBSTR(shp.AWB_NO,1,3)  awbNoPrefix , 
				SUBSTR(shp.AWB_NO,4)  awbNoSuffix , 
				SUBSTR(shp.AWB_NO,1,3)||'-'||SUBSTR(shp.AWB_NO,4) as awbNoDisp , 
				shp.AWB_No awbNo, 
				TO_CHAR(shp.AWB_DATE, 'DDMONYY') awbDate, 
				car.awb_Origin awbOrigin,
				car.AWB_DEST dest, 
				shp.MANIFEST_PCS manfPc,
				shp.MANIFEST_WT manfWt,
				car.AWB_PCS awbPc,
				car.AWB_WT awbWt,
				docDisc docDisc, 
				mcd.CODE_DESC dirAction, 
				DIR_ACTION_RMK dirActionRemarks, 
				DIR_PROC_USER dirProcUser, 
				to_char(DIR_PROC_DATE, 'DDMONYY') dirProcDate,
				fad.LM_USER_ID lmUserId,
				to_char(fad.LM_DATE, 'DDMONYY HH24:MI:SS') lmDate,
				fad.tr_No trNo,
				f.Orig fltOrigin,
				f.Dest fltDest
		FROM (Select case when  decode(CIR_PCS,0,CIR_WT_TYPE,CIR_PCS_TYPE) = 'SL' then 'MSCA' else 
			case when  decode(CIR_PCS,0,CIR_WT_TYPE,CIR_PCS_TYPE) = 'SP' then 'FDCA' else DOC_DISC end end docDisc, s.* from IMP_CAR_SHP s) shp 
		left join (select max(TO_NUMBER(Tr_No)) Tr_No, AWB_NO, AWB_DATE, DISC_TYPE, FLT_KEY, FLT_DATE from Imp_FAD_AWB 
			where FAD_SEND = 'Y' group by AWB_NO, AWB_DATE, DISC_TYPE, FLT_KEY, FLT_DATE) tr 
			on tr.AWB_NO = shp.AWB_NO and tr.AWB_DATE = shp.AWB_DATE and tr.DISC_TYPE = shp.docDisc
			and tr.FLT_KEY = shp.FLT_KEY and tr.FLT_DATE = shp.FLT_DATE 
		left join Flt_Opr f on f.FLT_KEY = shp.FLT_KEY and f.Sch_DATE = shp.FLT_DATE and f.Flt_Type = 'A'
		left join Imp_FAD_AWB fad on fad.Tr_No = tr.Tr_No
		LEFT JOIN MAST_CODE_DTL mcd on shp.DIR_ACTION = mcd.CODE AND mcd.CODE_TYPE='ACTION_CODE'
		JOIN IMP_CAR_AWB car ON shp.AWB_No = car.AWB_No 
		AND shp.AWB_Date = car.AWB_Date
		WHERE 
		shp.FLT_KEY = #flightNoKey# AND 
		shp.FLT_DATE = #flightDate#	AND shp.CIR_PROC_USER is not null
   		ORDER BY 4 
			
	</select>
	
	<select id="getFadCount" parameterClass="cargo.cms.imprt.bo.SendFADBO" resultClass="java.lang.String">			
		select COUNT(1)+1 as fadCount from Imp_FAD_AWB where FAD_SEND = 'Y' and AWB_NO=#awbNo# and  AWB_DATE=#awbDate#  and FLT_KEY=#flightNoKey# and  FLT_DATE=#flightDate#
	</select>
	
	<select id="getFadMailId" resultClass="java.lang.String">			
		select RULE_VALUE from CMSRULES where RULE_CODE = 'FAD_EMAIL'
	</select>
		
	<select id="imp_fetchsendfadosi" parameterClass="cargo.cms.imprt.bo.MaintainDirBO" resultClass="cargo.cms.imprt.bo.SendFADBO">
		SELECT 
		TR_NO transactionNo, 
		SUBSTR(AWB_NO,1,3) awbNoPrefix, 
		SUBSTR(AWB_NO,4)  awbNoSuffix, 
		SUBSTR(AWB_NO,1,3)||'-'||SUBSTR(AWB_NO,4) as awbNoDisp , 
		AWB_No awbNo, 
		TO_CHAR(AWB_DATE, 'DDMONYY') awbDate, 
		DISC_TYPE docDisc, 
		TO_CHAR(FLT_DATE,'DDMONYY') flightDate, 
		FLT_KEY flightNoKey, 
		FLT_ATA ata, 
		substr(FLT_ATA,1,2)||':'||substr(FLT_ATA,3) ataTime,	
		ACTION dirAction, 
		RMK dirActionRemarks, 
		MSG messageContentBytes, 
		OSI_RMK osiRemarks, 
		FAD_SEND fadSend,
		DOC_COMPL_DATE docComplDate, 
		DOC_COMPL_TIME docComplTime, 
		DOC_COMPL_USER docComplStaffID
		FROM IMP_FAD_AWB 
		WHERE 
		TR_NO = #trNo# AND 
		AWB_NO = #awbNo# AND 
		TO_CHAR(AWB_DATE, 'DDMONYY') = #awbDate# AND 
		DISC_TYPE = #docDisc# AND 
		FLT_DATE = #flightDate# AND 
		FLT_KEY = #flightNoKey#
	</select>
	
	<select id="imp_fetchsendfadosiaddr" parameterClass="cargo.cms.imprt.bo.MaintainDirBO" resultClass="cargo.cms.imprt.bo.SendFADBO">
		SELECT 		
		TR_NO transactionNo, 
		ADDR_GRP addressGroup,
		ADDR_TYPE addressType,
		MSG_ADDR sitaAddress		
		FROM IMP_FAD_ADDR 
		WHERE 
		TR_NO = #trNo# 
	</select>
	<select id="getSitaAddressForCreateFadFormat"  parameterClass="map" resultClass="cargo.cms.imprt.bo.SendFADBO">
		SELECT SITA_ADDR AS sitaAddress FROM CUST_AIRL_SITA_GRPDTL
		WHERE
			CUST_NO = #customerId# AND
			ADDR_GROUP = UPPER(#addressGroup#)
		ORDER BY SITA_ADDR
	</select>
	<select id="getEmailFaxAddressForCreateFadFormat"  parameterClass="map" resultClass="cargo.cms.imprt.bo.SendFADBO">
		SELECT EMAIL1 AS emailAddress1, EMAIL2 AS emailAddress2, EMAIL3 AS emailAddress3, 
			EMAIL4 AS emailAddress4, EMAIL5 AS emailAddress5, FAX1 AS faxNumber1, 
			FAX2 AS faxNumber2, FAX3 AS faxNumber3, FAX4 AS faxNumber4, FAX5 AS faxNumber5 
		FROM CUST_CONTACT
		WHERE
			CUST_NO = #customerId# AND
			CONTACT_TYPE = 'FAD'
	</select>
	
	<!--  Changed for QR -->
	<insert id="insertAWBdocline" parameterClass="cargo.cms.imprt.bo.SendFADBO" >
		<![CDATA[
		INSERT INTO  IMP_FAD_AWB 
    (ACTION, 
     TR_NO, 
     AWB_NO, 
     AWB_DATE,     
     CR_USER_ID, 
     CR_DATE, 
     DISC_TYPE, 
     DOC_COMPL_DATE, 
     DOC_COMPL_TIME, 
     DOC_COMPL_USER,
     FAD_SEND,
     FLT_DATE, 
     FLT_KEY, 
     FLT_ATA, 
     FLT_TYPE,
     LM_USER_ID, 
     LM_DATE,    
     MSG,
     OSI_RMK, 
     RMK,    
     SEND_USER_ID, 
     SEND_DATE    
    )
  VALUES(
     #dirAction#,
     #transactionNo#, 
     #awbNo#,
     to_date(#awbDate#,'DDMONYY'),     
     #createdBy#, 
     SYSDATE,
     #docDisc#,
     TO_DATE(#docComplDate#,'DDMONYY'),
     #docComplTime#,
     #docComplStaffID#,
     'Y',
     To_DATE(#flightDate#,'DDMONYY'), 
     #flightNoKey#, 
     #ata#, 
     'I',
     #createdBy#, 
     SYSDATE, 
     #messageContentBytes#, 
     #osiRemarks#, 
     #dirActionRemarks#,    
     #createdBy#, 
     SYSDATE
    )
			]]>		
	</insert>
		
	<insert id="insertAWBAddressDetails" parameterClass="cargo.cms.imprt.bo.SendFADBO" >
		INSERT INTO IMP_FAD_ADDR 
					(TR_NO, 
					ADDR_GRP, 
					ADDR_TYPE, 
					MSG_ADDR, 
					CR_USER_ID, 
					CR_DATE, 
					LM_USER_ID, 
					LM_DATE)
			VALUES(#transactionNo#, 
				   #addressGroup#,
				   #addressType#, 
				   #sitaAddress#,
				   #createdBy#, 
				   SYSDATE, 
				   #createdBy#, 
				   SYSDATE)
	</insert>

	<select id="validateFadAddressGroup"  parameterClass="map" resultClass="java.lang.String">
		SELECT A.CUST_NO AS CUST_NO FROM CUST_AIRL_SITA_GRP A, CUST_COMPANY B
			WHERE
				A.ADDR_GROUP = UPPER(#addressGroup#) AND
				A.CUST_NO = B.CODE 
				<isNotEmpty prepend="AND" property="carrierCode">
					B.CARR_CODE = #carrierCode#
				</isNotEmpty>			
	</select>
	<select id="maxawbdocline" parameterClass="cargo.cms.imprt.bo.SendFADBO" resultClass="java.lang.Integer">
		SELECT NVL(MAX(DOC_LINE_NO),0) 
		from  IMP_FAD_AWB 
		where TR_NO = #transactionNo# AND 
		AWB_NO = #awbNo# AND 
		AWB_DATE = to_date(#awbDate#,'DDMONYY')
	</select>
	
	<update id="updateFadAwbDocLine" parameterClass="cargo.cms.imprt.bo.SendFADBO">
		update IMP_FAD_AWB set 	
		SEND_USER_ID = #createdBy# , SEND_DATE = SYSDATE , 
		LM_USER_ID = #createdBy# , LM_DATE = SYSDATE 
		where 	TR_NO = #transactionNo# AND 
		DOC_LINE_NO = #docLineNo# AND
		AWB_NO = #awbNo# AND 
		AWB_DATE = to_date(#awbDate#,'DDMONYY')
	</update>
	<select id="checkSitaAddress" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		SELECT count(1) FROM MAST_SITA_ADDRESS WHERE CODE = #PARAM#
	</select>
		
	
<update id="updatesSendFadImpCarShip" parameterClass="cargo.cms.imprt.bo.SendFADBO">
	 UPDATE IMP_CAR_SHP
   SET SEND_FAD_USER=#createdBy#,
   SEND_FAD_DATE  =SYSDATE,
   SEND_FAD_TIME  = TO_CHAR(sysdate,'HH24MISS')
  WHERE FLT_KEY =#flightNoKey# AND FLT_DATE =#flightDate#  AND AWB_NO= #awbNo#
	</update>
	<insert id="maintainSendFadEventsLog" parameterClass="cargo.cms.imprt.bo.SendFADBO" >
	INSERT INTO AWB_EVENTS(AWB_NO, AWB_DATE,  EVENT_ID, EVENT_DESC, FLT_KEY, FLT_DATE, FLT_TYPE, TR_NO, ULD_KEY, PCS, WT, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE ) 
     VALUES(#awbNo#,  TO_DATE(#awbDate#,'DDMONYY') ,  'ADIUCAR', 'Amend Dummy IU CAR', #flightKey#,  TO_DATE(#flightDate#,'DDMONYY'),'I', AWB_event_SEQ.nextval, NULL, 
     nvl(#awbPc#,0), nvl(#awbWt#,0),'ADMIN1',  sysdate,'ADMIN1',  sysdate)
	</insert>
	<select id="SendFAD_checkCarrierCode" parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT to_char(count(1))
		FROM mast_carrier
		WHERE code = #flightKey#
	</select>
		

	<insert id="maintainSendFadEDIMSGLog" parameterClass="cargo.cms.imprt.bo.SendFADBO" >
	INSERT   INTO EDI_MSG_LOG_OUT  ( MSG_ID    ,    MSG_SEQ_NO,    AWB_NO    ,    AWB_DATE  ,    
    FLT_NO    ,    FLT_DATE  ,    FLT_KEY   ,    MSG_DATE  ,    MSG_TYPE  ,
    SENDER_ID ,    MSG       ,      LM_USER_ID,    LM_DATE   ,LM_VER)
      VALUES(EDI_MESSAGE_LOG_SEQ.nextval   ,
      EDI_MESSAGE_LOG_SEQ.nextval   ,  
      #awbNo#                       ,
     to_date(#awbDate#,'DDMONYY')  ,    
     #flightNo#                    ,
     To_DATE(#flightDate#,'DDMONYY'),    
     #flightNoKey#                 ,      
     SYSDATE                    ,    
      'FAD'                   ,    
      'HKGGCSQ'               ,    
      #fad#                  ,    
      'HKGGCSQ'              ,  
      SYSDATE,     '1')
  
	</insert>
	
<insert id="maintainSendFadEmailLog" parameterClass="cargo.cms.services.email.EMailBO" >
	INSERT   INTO EMAIL_LOG  (SOURCE_ID ,SENDER_ID ,SENDER_ADD, TO_ADD  , CC_ADD    , SEND_DATE ,SUBJECT,STATUS,TR_NO ) 
	 VALUES (#sourceId# , #userId# , #notifyAddress# ,  #strTo#,   #strCC# , sysdate, #subject#, #status#, #trNo#)
</insert>
	<!-- Send fad ends here-->

<!--  Maintain Inbound transfer checklist queries starts-->
<select id="imp_mtnchecklist"  parameterClass="cargo.cms.imprt.bo.CheckListBO"  resultClass="cargo.cms.imprt.bo.CheckListBO">
SELECT inb.TR_NO AS trNo ,
    inb.DOC_LINE_NO AS docLineNo , 
    hd.CARR_CODE AS carrierCode ,
    hd.FLT_NO AS flightNo , 
    hd.FLT_KEY AS flightKey, 
    TO_CHAR(hd.FLT_DATE,'DDMONYY') AS flightDate,  
    inb.ULD_KEY AS uldKey, 		
    inb.FFM_IND AS ffmInd,
    inb.CPM_IND AS cpmInd,    
   	ddtULD.CNTG_FLT_KEY cntgFltKey, TO_CHAR(ddtULD.CNTG_FLT_DATE, 'DDMONYY') cntgFltDate, ddtULD.TRF_TYPE || decode(ddtULD.BRK_BULK,'Y',' + BB',null) transferType,                       
    DECODE(uld.imx,'Y','Y','N') AS imx,
    uld.handling_mode as dlvMode,  
    V_COMMA_SEP_IMP_FLT_ULD_SHC(hd.FLT_KEY,hd.FLT_DATE,inb.ULD_KEY,NULL,NULL) AS shc,  		      
    inb.LOC_CODE AS plannedHoArea,
    inb.LOC_CODE AS plannedHoAreaOld,	     
	 PKG_IMP.fun_get_ho_area(hd.FLT_KEY,hd.FLT_DATE,inb.ULD_KEY) as plannedHoAreaFFMCPM,	   
     PKG_IMP.fun_get_hdlg_area(hd.FLT_KEY,hd.FLT_DATE,inb.ULD_KEY) as handlingZone,          
	 NVL(dtl.CHKIN_YN,'N') AS checkInStatus, 
    TO_CHAR(dtl.CHKIN_DATE,'DDMONYY') AS checkInDate, 
	inb.RMK AS remark,   
	PKG_COMMON.get_flt_ata(#flightKey#, TO_DATE(#flightDate#,'DDMONYY'), 'A', 'DD') AS ata,  		
    (select cc.CODE_DESC from CUST_COMPANY cc where cc.code = f.rho_id ) as rho,  
	(SELECT CODE_DESC FROM MAST_CODE_DTL WHERE  CODE  = f.WTHR_COND AND CODE_TYPE='WTH_CONDN') AS weatherCondition,		 	
	DECODE(flt.RAMP_COMPL_YN,'Y','Y','N')  AS rampComplStatus,       
	(select TRIM(TO_CHAR(MAX(TO_NUMBER(i.TO_NO)),'00000000')) TO_NO FROM
	tow_order_in i, tow_order_in_dtl dtl
    where i.to_no= dtl.to_no
    and dtl.uld_key = inb.ULD_KEY
    and i.flt_key = #flightKey#
    and TO_CHAR(i.flt_date,'DDMONYY') = #flightDate#) as towOrderNo,      
	'N' AS newRecord,   	
    TO_CHAR(inb.LM_DATE , 'DDMONYY HH24:MI:SS') AS lastModDate
    FROM IMP_RAMP_INB_CHK_DTL inb
    JOIN IMP_RAMP_CHK_HD hd ON hd.TR_NO = inb.TR_NO      
	join FLT_OPR f on f.FLT_TYPE  = 'A' and f.FLT_KEY = inb.FLT_KEY and TO_CHAR(f.SCH_DATE,'DDMONYY') = TO_CHAR(inb.FLT_DATE,'DDMONYY')
    LEFT JOIN IMP_ULD_LIST uld ON  uld.FLT_KEY = inb.FLT_KEY AND TO_CHAR(uld.FLT_DATE, 'DDMONYY')= TO_CHAR(inb.FLT_DATE, 'DDMONYY') AND uld.ULD_KEY = inb.ULD_KEY
	left join flt_opr_events flt on TO_CHAR(flt.SCH_DATE,'DDMONYY') = TO_CHAR(inb.FLT_DATE,'DDMONYY') and flt.RAMP_COMPL_YN = 'Y' and flt.FLT_TYPE = 'A' AND flt.CARR_CODE = inb.CARR_CODE AND flt.FLT_NO = inb.FLT_NO AND flt.FLT_KEY = inb.FLT_KEY
    LEFT JOIN IMP_RAMP_CHK_DTL dtl on hd.TR_NO =  dtl.TR_NO AND inb.ULD_KEY = dtl.ULD_KEY  
    LEFT OUTER JOIN DDT_MSG MSG ON inb.FLT_KEY   = MSG.FLT_KEY AND inb.FLT_DATE = MSG.FLT_DATE and MSG.DDT_STATUS='P' 
	LEFT OUTER JOIN DDT_ULD ddtULD ON ddtULD.ULD_KEY = inb.ULD_KEY AND MSG.TR_NO = ddtULD.TR_NO 				 			  
    WHERE hd.FLT_NO  = #flightNo#  AND 
    hd.CARR_CODE = #carrierCode# AND
    TO_CHAR(hd.FLT_DATE, 'DDMONYY')  =  #flightDate#  
    <isNotEmpty property="uldKey">
		and inb.ULD_KEY = #uldKey#
	</isNotEmpty>
   ORDER BY inb.ULD_KEY
	</select>
	
	<select id="miu_get_flt_details"  parameterClass="cargo.cms.imprt.bo.CheckListBO"  resultClass="cargo.cms.imprt.bo.CheckListBO">
		SELECT	PKG_COMMON.get_flt_ata(#flightKey#, TO_DATE(#flightDate#,'DDMONYY'), 'A', 'DD') AS ata,
		(SELECT dtl.CODE_DESC FROM MAST_CODE_DTL dtl, FLT_OPR f 
		WHERE  dtl.CODE  = f.WTHR_COND 
		AND dtl.CODE_TYPE='WTH_CONDN' 
		AND FLT_NO = #flightNo#
		AND CARR_CODE   = upper(#carrierCode#)
		AND SCH_DATE = TO_DATE(#flightDate#,'DDMONYY') and FLT_TYPE = 'A'
		) AS weatherCondition,			
			    (select cc.CODE_DESC from CUST_COMPANY cc where cc.code= FO.rho_id ) as rho,  			   
        		(SELECT DECODE(COUNT(1),'0','N','Y') 
      				from flt_opr_events	where TO_CHAR(SCH_DATE,'DDMONYY') =  #flightDate#
					and RAMP_COMPL_YN = 'Y' and FLT_TYPE = 'A' 
					AND CARR_CODE = #carrierCode# AND FLT_NO = #flightNo#) AS rampComplStatus
			  FROM FLT_OPR FO WHERE FO.FLT_TYPE='A' AND
			  FO.CARR_CODE=#carrierCode# AND
			  FO.FLT_NO =#flightNo# AND
			  FO.SCH_DATE = TO_DATE(#flightDate#,'DDMONYY')
	</select>
	
	<select id ="imp_get_ramp_uld_count" parameterClass="map" resultClass="java.lang.String">
		<!--SELECT NVL(count(1),0) FROM IMP_RAMP_CHK_DTL WHERE TR_NO=#trNo# AND ULD_KEY=#uldKey# AND SURPLUS_IND = 'Y'-->
		SELECT NVL(count(1),0) FROM IMP_RAMP_CHK_DTL WHERE TR_NO=#trNo# AND ULD_KEY=#uldKey#
	</select>
	
	<select id="get_max_docline"  parameterClass="map"  resultClass="java.lang.String">		
		SELECT MAX(DOC_LINE_NO) FROM IMP_RAMP_INB_CHK_DTL WHERE TR_NO = #trNo#
	</select>
	
	<update id="imp_updchecklist" parameterClass="cargo.cms.imprt.bo.CheckListBO">		
		UPDATE IMP_RAMP_INB_CHK_DTL	SET 
		<isEqual property="isFFMCPM" compareValue="N">								
			LOC_CODE = #plannedHoArea#,
		</isEqual>
			RMK	= upper(#remark#),
			LM_USER_ID = #lmUserId#,
			LM_DATE	 = sysdate
			WHERE TR_NO = #trNo#  AND
			DOC_LINE_NO =#docLineNo# AND TO_CHAR(LM_DATE , 'DDMONYY HH24:MI:SS')=#lastModDate#
	</update>	
	
	<insert id="imp_inschecklist" parameterClass="cargo.cms.imprt.bo.CheckListBO" >		
		INSERT INTO IMP_RAMP_INB_CHK_DTL ( TR_NO, DOC_LINE_NO, FLT_NO, FLT_DATE, FLT_KEY, ULD_TYPE, ULD_NO, ULD_CARR, ULD_KEY, CARR_CODE, 
		<isEqual property="isFFMCPM" compareValue="N">	
		LOC_CODE,
		</isEqual>
		TR_STATUS,CR_USER_ID, CR_DATE, LM_USER_ID,  LM_DATE, RMK,CPM_IND,FFM_IND,TR_TYPE) 
		VALUES ( #trNo#, #docLineNo#,#flightNo#,#flightDate#, #flightKey#, #uldType#,#uldNo#, #uldCarr#,#uldKey#,#carrierCode#,
		<isEqual property="isFFMCPM" compareValue="N">
		#plannedHoArea#,
		</isEqual>
		'N',#lmUserId#,sysdate,#lmUserId#,sysdate,upper(#remark#),'N','N','IR')
	</insert>

	<delete id="imp_delchecklist" parameterClass="cargo.cms.imprt.bo.CheckListBO" >
		DELETE IMP_RAMP_INB_CHK_DTL	WHERE TR_NO = #trNo# AND ULD_KEY = #uldKey# AND TO_CHAR(LM_DATE , 'DDMONYY HH24:MI:SS')=#lastModDate#
	</delete>

        <delete id="imp_delinb_fromcheckin" parameterClass="cargo.cms.imprt.bo.ULDCheckInBO" >
		DELETE IMP_RAMP_INB_CHK_DTL	WHERE ULD_KEY = #uldKey# AND FLT_DATE = TO_DATE(#flightDate#,'DDMONYY') AND FLT_KEY=#flightKey#
	</delete>
	

	<delete id="imp_delchecklist_impuld" parameterClass="cargo.cms.imprt.bo.CheckListBO" >
		DELETE IMP_ULD_LIST	WHERE ULD_KEY = #uldKey# AND FLT_DATE = TO_DATE(#flightDate#,'DDMONYY') AND FLT_KEY=#fltkeyinsert#
	</delete>
	<select id="sqlGetTowOrderForUld" parameterClass="cargo.cms.imprt.bo.CheckListBO" resultClass="java.lang.String">
			select  A.to_no from tow_order_in A
			join tow_order_in_dtl B
			on A.to_no = B.to_no
			where B.ULD_KEY = #uldKey#  and
			A.flt_key = #fltkeyinsert# and
			A.flt_date = TO_DATE(#flightDate#,'DDMONYY')	
	</select>
	
	<!--  Changed for QR -->
	<select id="chkFltCancelled" parameterClass="cargo.cms.imprt.bo.CheckListBO" resultClass="java.lang.Integer">
			select count(1) from flt_opr where FLT_KEY=#flightKey# and SCH_DATE=to_date(#flightDate#,'DDMONYY') and status='X' and flt_type = 'A' 
	</select>
	
	<!--  Changed for QR -->
	<select id="chkFltClosed" parameterClass="cargo.cms.imprt.bo.CheckListBO" resultClass="java.lang.Integer">
			SELECT COUNT(1) FROM FLT_OPR_EVENTS WHERE FLT_KEY=#flightKey# AND SCH_DATE=TO_DATE(#flightDate#,'DDMONYY') and flt_type = 'A' AND FLT_CLS_YN='Y'	
	</select>
<!--  Maintain Inbound transfer checklist queries ends-->

	<!-- Added by Venkateswarlu.m - Queries for Shipment Tracking Starts -->
	
	<!--  Changed for QR -->	
	<select id="shipment_tracking_getAwbInfo"	parameterClass="cargo.cms.imprt.bo.FullAWBInfoBO"
			 resultClass="cargo.cms.imprt.bo.FullAWBInfoBO">
	 	select a.awb_type,
	 		 a.AWB_NO as awb, 
			 to_char(a.awb_date, 'DDMONYY') as awbDate,	
	  		 a.ORIG as orig,  
			 a.DEST as dest, 
			 a.PCS as pcs, 
			 a.WT as wt, 
			 a.AGENT_NAME as agentName,
			 case when a.awb_type in ('T','I') then ia.SHPR_name
                  when a.awb_type = 'E' then  ea.SHPR_name end as shipper, 
             case when a.awb_type in ('T','I') then ia.CSGNE_name
                  when a.awb_type = 'E' then  ea.CSGNE_name end as consignee, 
			 a.CONTENT as content,
			 a.awb_type as awbType, a.AGENT_CODE as agentCustNo,
			 mp.CARR_CODE carrCode,
			 (SELECT URL_NAME  FROM MAST_CARRIER  WHERE CODE = a.CARR_CODE ) url,
			 (a.spl_code1 ||''|| decode(a.spl_code2, null, '', ','|| a.spl_code2)
      		||''|| decode(a.spl_code3, null, '', ','|| a.spl_code3)
      		||''|| decode(a.spl_code4, null, '', ','|| a.spl_code4)
      		||''|| decode(a.spl_code5, null, '', ','|| a.spl_code5)
      		||''|| decode(a.spl_code6, null, '', ','|| a.spl_code6)
      		||''|| decode(a.spl_code7, null, '', ','|| a.spl_code7)
      		||''|| decode(a.spl_code8, null, '', ','|| a.spl_code8)
      		||''|| decode(a.spl_code9, null, '', ','|| a.spl_code9)) as shcCode
		  from AWB a
		  left join IMP_CAR_AWB ia on a.AWB_NO = ia.AWB_NO and a.AWB_DATE = ia.AWB_DATE 
		  left join EXP_CAR ea on a.AWB_NO = ea.AWB_NO and a.AWB_DATE = ea.AWB_DATE 	 
		  left join MAST_AWB_PREFIX mp on mp.CODE = #preAWB#
		  where a.AWB_NO = #awb#
		  and a.awb_date = (select max(awb_date) from awb where awb_no = a.awb_no)		 
			ORDER BY a.awb_type asc	
	</select>
	
	<select id="shipment_tracking_getRCF"	parameterClass="cargo.cms.imprt.bo.FullAWBInfoBO"
		 resultClass="cargo.cms.imprt.bo.FullAWBInfoBO">
	
		SELECT s.FLT_KEY as fltKey,  to_char(f.sch_date, 'DDMONYY') as fltDate, 
		to_char(f.sch_date, 'DDMONYY')||' '||SUBSTR(lpad(ACT_TIME,4, 0),0,2)|| ':'|| SUBSTR(lpad(ACT_TIME,4, 0),3,4) as fltDateDisplay, 
		(RECD_PCS + nvl(tt_pcs,0)) as recdPcs, TRIM(TO_CHAR((RECD_WT + nvl(tt_wt,0)), '9999999990D9')) as recdWt, 
		TO_CHAR(a.strgDate, 'DDMONYY HH24:MI') as recdDate 
		FROM IMP_CAR_SHP s
		left join (select awb_no, awb_date, flt_key, flt_date, min(CR_DATE) strgDate from imp_awb_strg_dtl group by awb_no, awb_date, flt_key, flt_date) a
			 on s.AWB_NO = a.AWB_NO and s.AWB_DATE = a.AWB_DATE and s.flt_key = a.flt_key and s.flt_date = a.flt_date
       LEFT JOIN (select nvl(sum(actual_pcs),0) tt_pcs ,  nvl(sum (actual_Wt),0) tt_wt, flt_key, flt_date, awb_NO , awb_date
       from v_ddt_dtl  where (shp_trf_type in ('TT','IF')) GROUP BY flt_key, flt_date, awb_NO, awb_date) ddt
              ON ddt.AWB_NO = s.awb_no AND ddt.AWB_DATE = s.awb_date AND ddt.FLT_KEY=s.flt_key AND ddt.FLT_DATE = s.flt_date
 		join flt_opr f on f.flt_key = s.flt_key and f.sch_date = s.flt_date and f.flt_type = 'A'
		WHERE s.AWB_NO = #awb# and s.AWB_DATE = #awbDate#

	</select>
	
	<select id="shipment_tracking_getDLV"	parameterClass="cargo.cms.imprt.bo.FullAWBInfoBO"
			 resultClass="cargo.cms.imprt.bo.FullAWBInfoBO">
		
		SELECT TO_CHAR(max(s.SRF_DATE),'DDMONYY HH24:MI') deliveryDate, 
		sum(sf.DLV_PCS) deliveryPcs, TRIM(TO_CHAR(sum(sf.DLV_WT), '9999999990D9')) deliveryWt
		FROM IMP_SRF s
		join imp_srf_flt sf on s.srf_no = sf.srf_no
		WHERE s.AWB_NO = #awb# and s.AWB_DATE = #awbDate# and Status = 'POSTED'
		group by s.srf_no
		
	</select>
	
	<select id="shipment_tracking_arrival"	parameterClass="cargo.cms.imprt.bo.FullAWBInfoBO"
			 resultClass="cargo.cms.imprt.bo.FullAWBInfoBO">
		
		SELECT s.FLT_KEY as fltKey, to_char(f.sch_date, 'DDMONYY') as fltDate, 
		to_char(f.sch_date, 'DDMONYY')||' '||SUBSTR(NVL(lpad(ACT_TIME,4, 0),'0000'),0,2)|| ':'|| SUBSTR(NVL(lpad(ACT_TIME,4, 0),'0000'),3,4) as fltDateDisplay, 
		MANIFEST_PCS as manifestPcs, TRIM(TO_CHAR(MANIFEST_WT, '9999999990D9')) as manifestWt, 
		(SELECT V.CC_CODE FROM V_CST_IMP_CC_CODE_AWB V
			WHERE V.FLT_KEY = s.FLT_KEY AND V.FLT_DATE = s.FLT_DATE AND V.AWB_NO = s.AWB_NO 
				  AND NVL(V.HAWB_NO, '000000000000000000') =  '000000000000000000' AND ROWNUM = 1) AS ccCode
		FROM IMP_CAR_SHP s
		join flt_opr f on f.flt_key = s.flt_key and f.sch_date = s.flt_date and f.flt_type = 'A'
		WHERE AWB_NO = #awb# and AWB_DATE = To_DATE(#awbDate#,'DDMONYY')
	
	</select>
	
	<select id="shipment_tracking_getRCS"	parameterClass="cargo.cms.imprt.bo.FullAWBInfoBO"
			 resultClass="cargo.cms.imprt.bo.FullAWBInfoBO">
		SELECT sum(pcs) as recdPcs, TRIM(TO_CHAR(sum(wt), '9999999990D9')) as recdWt, TO_CHAR(rcl_date,'DDMONYY HH24:MI') as recdDate 
		FROM v_awb_rcl
		WHERE awb_no = #awb# and awb_date=#awbDate#
		group by rcl_date
	</select>
	
	<select id="shipment_tracking_getDEP"	parameterClass="cargo.cms.imprt.bo.FullAWBInfoBO"
			 resultClass="cargo.cms.imprt.bo.FullAWBInfoBO">
select  fltKey, fltDate, schTime, actDate,   actTime, sum(pmanPcs) pmanPcs, sum(pmanWt) pmanWt
   from ( select t2.flt_key fltKey, to_char(t2.SCH_DATE,'DDMONYY') fltDate, 
		PKG_COMMON.get_flt_sta(t2.flt_key, t2.SCH_DATE, 'D') schTime, 
		to_char(t2.act_date,'DDMONYY')  actDate,  
		PKG_COMMON.get_flt_ata(t2.flt_key, t2.SCH_DATE, 'D') actTime, 
		nvl(pman_pcs,0) pmanPcs, trim(to_char(pman_wt, '9999990.9')) pmanWt
		from   exp_pmanifest_awb t1, flt_opr t2, flt_opr_events t3
		where  t1.flt_key = t2.flt_key
		and    t1.flt_date = t2.sch_date
		and    t2.FLT_KEY  = t3.FLT_KEY
		and    t2.sch_date = t3.sch_date
		and    t2.flt_type = t3.flt_type
		and    t2.flt_type = 'D'
		and    t3.CTM_OUT_DATE is not null
		and    t1.awb_no =  #awb#  and t1.awb_DATE = To_DATE(#awbDate#,'DDMONYY')
		union
                select t2.flt_key fltKey, to_char(t2.SCH_DATE,'DDMONYY') fltDate, 
		PKG_COMMON.get_flt_sta(t2.flt_key, t2.SCH_DATE, 'D')schTime, 
		to_char(t2.act_date,'DDMONYY')  actDate,  
		PKG_COMMON.get_flt_ata(t2.flt_key, t2.SCH_DATE, 'D') actTime, 
		nvl(bulk_pcs + ppk_pcs,0) pmanPcs, trim(to_char(bulk_wt + ppk_wt, '9999990.9')) pmanWt
		from   exp_pman_tarmac_awb t1, flt_opr t2, flt_opr_events t3
		where  t1.flt_key = t2.flt_key
		and    t1.flt_date = t2.sch_date
		and    t2.FLT_KEY  = t3.FLT_KEY
		and    t2.sch_date = t3.sch_date
		and    t2.flt_type = t3.flt_type
		and    t2.flt_type = 'D'
		and    t3.CTM_OUT_DATE is not null
		and    t1.awb_no =  #awb#  and t1.awb_DATE = To_DATE(#awbDate#,'DDMONYY')) a group by	fltKey, fltDate, schTime, actDate,   actTime	
	</select>
	
	<select id="shipment_tracking_getAwbUserList"	parameterClass="cargo.cms.imprt.bo.FullAWBInfoBO"
			 resultClass="cargo.cms.imprt.bo.FullAWBInfoBO">
		select su.code as userName from awb aw 
		left join cust_company cc on cc.code = aw.agent_code  or cc.code = aw.shpr_code
		left join sec_user su on su.cust_no = cc.code
		where aw.awb_no = #awb# and su.code is not null
	</select>
	
	<select id="shipment_tracking_getValCargo"	parameterClass="cargo.cms.imprt.bo.FullAWBInfoBO"
			 resultClass="cargo.cms.imprt.bo.FullAWBInfoBO">
			 select case when count(1) > 0 then 'true' else 'false' end as valCargo
				from awb where awb_no=#awb#
				and exists (select null from CUST_AIRL_SPL_CODE where carr_code = awb.carr_code and spl_type = 'SPL_VAL' 
				              and instr(awb.spl_code1|| awb.spl_code2||awb.spl_code3|| awb.spl_code4|| awb.spl_code5|| awb.spl_code6||spl_code7||spl_code8||spl_code9,spl_code) > 0)
	</select>

<!--  Changed for QR -->
<select id="fetchMaxAWBDate"	parameterClass="cargo.cms.imprt.bo.FullAWBInfoBO"
			 resultClass="cargo.cms.imprt.bo.FullAWBInfoBO">
		SELECT
		      TO_CHAR(AWB_DATE,'DDMONYY') AS awbDate,
		      AWB_TYPE AS awbType
		  FROM
		      AWB
		 WHERE
		      AWB_NO=#awbNo# AND
		      awb_DATE=(SELECT MAX(awb_DATE) FROM AWB WHERE AWB_NO=#awbNo#)
	</select>
	
<!--  Changed for QR
<select id="getAWBNoStatus"  parameterClass="map"  resultClass="java.lang.String">
SELECT
      AWB_CLOSED_YN
  FROM
      AWB
 WHERE
      AWB_NO=#AWBNO# AND 
      AWB_DATE=#AWBDate# AND 
      AWB_TYPE=#AWBType# AND 
      rownum=1			
</select>	 -->	

<!--  Changed for QR
<select id="getStorageCharge"  parameterClass="map"  resultClass="java.lang.String">
select 
      CHRG_AMT
  FROM
      BILL_CHARGE_DTL
 WHERE
      AWB_NO=#AWBNO# AND 
      AWB_DATE=#AWBDate# AND 
      rownum=1
</select> -->

<parameterMap id="chargeMap" class="map" >
	<parameter property="storageAmount" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
	<parameter property="AWBNO" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>	
	<parameter property="existingDate" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	<parameter property="F_IMPORT_PER_KILOGRAM" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
	<parameter property="F_IMPORT_PER_CONSIGNMENT" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
	<parameter property="F_EXPORT_PER_KILOGRAM" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
	<parameter property="F_EXPORT_PER_CONSIGNMENT" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
  </parameterMap>
	
  <procedure id="getStorageRatePkgExisting" parameterMap="chargeMap">
	{? = call PKG_CALCULATE.GET_STORAGE_CHRG_UPTO (?,?,?,?,?,?)}
  </procedure>


<select id="getRCLStorageAmountForEachRCL" parameterClass="cargo.cms.imprt.bo.FullAWBInfoBO" resultClass="java.lang.String">
		select  pkg_exp_billing.get_rcl_storage_amt(#rclNumber#,#rclWt#) strgAmt from dual
</select>
	
	<select id="getPaidStorageCharges"  parameterClass="map"  resultClass="java.lang.String">
	<![CDATA[
		SELECT  nvl(sum(nvl(PAID_AMT_CASH,0) + nvl(PAID_AMT_CREDIT,0)),0) AS paidAmt               
		FROM BILL_CHARGE_DTL
		WHERE itm_code like 'SCIMP%' and
		STATUS != 'VOID'
		AND AWB_NO=#AWBNO# AND AWB_DATE = to_date(#AWBDate#,'DDMONYY')
		AND (STATUS = 'PAID' 
				or (STATUS = 'PENDING'	AND WAVR_AMT > 0 AND WAVR_DONE = 'Y'
					AND SRF_NO IN (SELECT SRF_NO FROM BILL_CHARGE_DTL WHERE STATUS = 'PAID'))
			)
		]]>
	</select>
	
	<select id="getShpTrackAwbType"  parameterClass="java.util.HashMap"  resultClass="java.util.HashMap">
	SELECT awb_type as AWBTYPE,TO_CHAR(awb_date,'DDMONYY') as AWBDATE from awb where awb_no=#AWBNO# and awb_closed_yn='N'
	</select>
	
	 <select id="getShpTrackRclList"  parameterClass="java.util.HashMap"  resultClass="cargo.cms.imprt.bo.FullAWBInfoBO">
	    <![CDATA[
	    		  SELECT hd.rcl_no as rclNumber, hd.rcl_wt as rclWt, to_char(hd.rcl_date,'DDMONYY') as rclDate
				    FROM exp_rcl_hd hd   
				    WHERE hd.awb_no    = #awbNo#
				    AND hd.awb_date  = to_date(#AWBDATE#,'DDMONYY')
				    AND hd.PPK_TYPE <> 'M' and hd.STATUS <> 'V'
				   UNION
				 SELECT hd.rcl_no as rclNumber, hd.rcl_wt as rclWt, to_char(hd.rcl_date,'DDMONYY') as rclDate
				    FROM exp_rcl_hd hd
		            join (
		              select rcl_no as rclNumber from Exp_Uld_Awb where awb_no = #awbNo#
		                AND awb_date = to_date(#AWBDATE#,'DDMONYY')
		                AND PPK_TYPE = 'M' group by rcl_no
		            ) eua ON eua.rclNumber = hd.rcl_no
		          where hd.STATUS <> 'V'
		]]>
    </select>
    
    <select id="getShpTrackRclDate"  parameterClass="java.util.HashMap"  resultClass="java.lang.String">
    <![CDATA[
    SELECT MIN(TO_CHAR(T.startDate,'DDMONYY')) FROM (SELECT 
	B.RCL_DATE AS startDate
	FROM 
	EXP_RCL_HD B,
	EXP_PRE_RCL_HD C
	WHERE 
	B.CR_DATE = (select min(cr_date) from exp_rcl_hd where awb_no = B.AWB_NO and status <> 'V') AND
	C.PRE_RCL_NO(+) = B.PRE_RCL_NO AND
  	B.AWB_NO = #awbNo# AND
	B.AWB_DATE = #AWBDATE# AND ROWNUM=1
	UNION
	SELECT 
	C.RCL_DATE AS startDate
	FROM 
	EXP_RCL_BRKDN B,
	EXP_RCL_HD C,
	EXP_PRE_RCL_HD D
	WHERE
	C.RCL_NO = B.RCL_NO AND
	C.RCL_DATE = (select min(cr_date) from exp_rcl_hd where RCL_NO=B.RCL_NO AND status <> 'V') AND
	D.PRE_RCL_NO(+) = C.PRE_RCL_NO AND
	B.AWB_NO = #awbNo# AND
	B.AWB_DATE = #AWBDATE# AND ROWNUM=1)T
	]]>
    </select>
    <select id="getNonBuPcsForCharges"  parameterClass="java.util.HashMap"  resultClass="java.lang.String">
    	SELECT sum(NVL(inv.locn_wt,0)) wt from awb_inventory inv where awb_no = #awbNo# and awb_date = #AWBDATE#
    		AND not (inv.flt_type = 'E' and inv.FLT_KEY IS not NULL  )  group by awb_no,awb_date
    </select>
    
    <select id="getShpTrackDateDiff"  parameterClass="java.util.HashMap"  resultClass="java.lang.Integer">
    SELECT to_number(TO_DATE(#existingDate#,'DDMONYY') - TO_DATE(#rclDate#,'DDMONYY'))+1 from dual
    </select>
	<!-- End - Queries added for Shipment Tracking -->
	
<!-- Fax Hash Total/Print Paper Manifest Queries Starts -->
	<select id="flt_validate_by_type"  parameterClass="map"  resultClass="java.lang.Integer">
			SELECT NVL(count(1),0) FROM FLT_OPR WHERE CARR_CODE=#carrierCode# AND FLT_NO=#flightNo# 
			AND SCH_DATE= #flightDate#
			<isEqual property="flightType" prepend="AND" compareValue="I">
	              FLT_TYPE = 'A'
	        </isEqual>
            <isEqual property="flightType" prepend="AND" compareValue="E">
	              FLT_TYPE = 'D'
	        </isEqual>
   	</select>

<!-- Fax Hash Total/Print Paper Manifest Queries End -->

	
	<!-- ImportRampModule_EnqAckTowOrder [Query added by Srinivas] -->
	
		<select id="sqlEnqTowDetailsLst" parameterClass="cargo.cms.imprt.bo.MaintainTowOrderBO" resultClass="cargo.cms.imprt.bo.MaintainTowOrderBO">
			select (SELECT CODE_DESC FROM CUST_COMPANY WHERE code = a.rho_id) rhoIdlist,
			c.TR_NO txnNo,
			a.to_no towOrderlist,			
			a.ver_no verNo,
			a.flt_key fltKeylist,
			Decode(TO_CHAR(a.ack_date,'DDMONYY HH24:MI'),NULL,'notAck',TO_CHAR(a.ack_date,'DDMONYY HH24:MI')) ackDate,
			Decode(a.ack_date,NULL,'N','Y') condCode,
			TO_CHAR(a.flt_date,'DDMONYY') fltDatelist,
			TO_CHAR(a.LM_DATE, 'DDMONYY HH24:MI:SSSSS') as lmDate,
			PKG_COMMON.get_flt_sta(a.flt_key, a.FLT_DATE, 'A') sta,
			TO_CHAR(DECODE(TO_CHAR(C.EST_TIME),NULL,
  			TO_CHAR(TO_DATE(SUBSTR(TRIM(TO_CHAR(NVL(c.SCH_TIME,0),'0000')),0,2)|| ':'|| SUBSTR(TRIM(TO_CHAR(NVL(c.SCH_TIME,0),'0000')),3,4),'HH24:MI')+ (
				(SELECT TO_NUMBER(s.rule_value)
				FROM CMSRULES s
				WHERE RULE_CODE='TOW_CUT_OFF_TIME'
				) / (24 * 60)),'HH24:MI'),
  			TO_CHAR(TO_DATE(SUBSTR(TRIM(TO_CHAR(NVL(C.est_time,0),'0000')),0,2)|| ':'|| SUBSTR(TRIM(TO_CHAR(NVL(C.est_time,0),'0000')),3,4), 'HH24:MI') + (
				(SELECT TO_NUMBER(s.rule_value)
				FROM CMSRULES s
				WHERE rule_code='TOW_CUT_OFF_TIME'
				) / (24 * 60)), 'HH24:MI'))) estTime,
			(substr((pkg_common.get_flt_ata(a.flt_key, a.flt_date,'A','DD')),0,8)) ata,
			c.ACFT_PRK_BAY bay,
			(select count(c.uld_key) from
			tow_order_in_dtl c where c.to_no=a.to_no) uldCount,
			(select
			count(c.awb_no) from tow_order_in_dtl c where c.to_no=a.to_no and
			c.awb_no is Not NUll) awbCount,
			 to_date((TO_CHAR(a.flt_date,'DDMONYY')||      
      		  DECODE((DECODE(c.ACT_TIME,NULL,'', RTRIM(SUBSTR(TRIM(TO_CHAR(c.ACT_TIME,'0000')),0,2)||SUBSTR(TRIM(TO_CHAR(c.ACT_TIME,'0000')),3,4)))),NULL,
       		  SUBSTR(TRIM(TO_CHAR(NVL(c.sch_time,0),'0000')),0,2)||SUBSTR(TRIM(TO_CHAR(NVL(c.sch_time,0),'0000')),3,4),
        	  (DECODE(c.ACT_TIME,NULL,'', RTRIM(SUBSTR(TRIM(TO_CHAR(c.ACT_TIME,'0000')),0,2)||SUBSTR(TRIM(TO_CHAR(c.ACT_TIME,'0000')),3,4)))))),'DDMONYYHH24MI') as sortOrd
			from tow_order_in a
			join flt_opr c on c.flt_key=a.flt_key and c.SCH_DATE=a.FLT_DATE and c.FLT_TYPE = 'A'
			where TO_DATE(to_char(a.FLT_DATE,'DDMONYY')|| ' ' || TO_CHAR(NVL(c.sch_time,0),'0000'),'DDMONYY HH24MI')  &gt;= TO_DATE(#arrDateHm#,'DDMONYY HH24MI') 
      		and  TO_DATE(to_char(a.FLT_DATE,'DDMONYY')|| ' ' || TO_CHAR(NVL(c.sch_time,0),'0000'),'DDMONYY HH24MI')  &lt;=	to_Date(#arrDateToHm#,'DDMONYY HH24MI')
				<isNotEmpty property="rhoId">
					AND a.rho_id = #rhoId#
				</isNotEmpty>
				<isNotEmpty property="carrCode">
					AND c.CARR_CODE= #carrCode#
				</isNotEmpty>
				<isNotEmpty property="towOrder">
					AND a.to_no = #towOrder#
				</isNotEmpty>
				<isNotEmpty property="fltKey">
					AND a.flt_key = #fltKey#
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="loginCarrier">
                    (c.CARR_CODE = #loginCarrier#
                     OR c.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE= #loginCarrier#))
                </isNotEmpty>
                <isEmpty property="loginCarrier">
                <isNotEmpty prepend="AND" property="loginCustCode">
                     c.RHO_ID = #loginCustCode#
                </isNotEmpty>
                </isEmpty>				
	     	 ORDER BY  sortOrd desc, a.LM_DATE desc
		</select>
		
		<select id="getTowDtlsForHypLnk" parameterClass="cargo.cms.imprt.bo.MaintainTowOrderBO" resultClass="cargo.cms.imprt.bo.MaintainTowOrderBO">
			select (SELECT CODE_DESC FROM CUST_COMPANY WHERE code = a.rho_id) rhoIdlist,
			c.TR_NO txnNo,
			a.to_no towOrderlist,			
			a.ver_no verNo,
			a.flt_key fltKeylist,
			c.CARR_CODE fltCarr,
			c.FLT_NO fltNo,
			Decode(TO_CHAR(a.ack_date,'DDMONYY HH24:MI'),NULL,'notAck',TO_CHAR(a.ack_date,'DDMONYY HH24:MI')) ackDate,
			Decode(a.ack_date,NULL,'N','Y') condCode,
			TO_CHAR(a.flt_date,'DDMONYY') fltDatelist,
			TO_CHAR(a.LM_DATE, 'DDMONYY HH24:MI:SSSSS') as lmDate,
			SUBSTR(TRIM(TO_CHAR(NVL(c.sch_time,0),'0000')),0,2)|| ':'|| SUBSTR(TRIM(TO_CHAR(NVL(c.sch_time,0),'0000')),3,4) sta,
			TO_CHAR(DECODE(TO_CHAR(C.EST_TIME),NULL,
  			TO_CHAR(TO_DATE(SUBSTR(TRIM(TO_CHAR(NVL(c.SCH_TIME,0),'0000')),0,2)|| ':'|| SUBSTR(TRIM(TO_CHAR(NVL(c.SCH_TIME,0),'0000')),3,4),'HH24:MI')+ (
				(SELECT TO_NUMBER(s.rule_value)
				FROM CMSRULES s
				WHERE RULE_CODE='TOW_CUT_OFF_TIME'
				) / (24 * 60)),'HH24:MI'),
  			TO_CHAR(TO_DATE(SUBSTR(TRIM(TO_CHAR(NVL(C.est_time,0),'0000')),0,2)|| ':'|| SUBSTR(TRIM(TO_CHAR(NVL(C.est_time,0),'0000')),3,4), 'HH24:MI') + (
				(SELECT TO_NUMBER(s.rule_value)
				FROM CMSRULES s
				WHERE rule_code='TOW_CUT_OFF_TIME'
				) / (24 * 60)), 'HH24:MI'))) estTime,
			(substr((pkg_common.get_flt_ata(a.flt_key, a.flt_date,'A','DD')),0,8)) ata,
			c.ACFT_PRK_BAY bay,
			(select count(c.uld_key) from
			tow_order_in_dtl c where c.to_no=a.to_no) uldCount,
			(select
			count(c.awb_no) from tow_order_in_dtl c where c.to_no=a.to_no and
			c.awb_no is Not NUll) awbCount,
			to_date((TO_CHAR(a.flt_date,'DDMMYY')||SUBSTR(TRIM(TO_CHAR(NVL(c.sch_time,0),'0000')),0,2)|| SUBSTR(TRIM(TO_CHAR(NVL(c.sch_time,0),'0000')),3,4)),'DDMMYYHH24MI')
			from tow_order_in a 
			join flt_opr c on c.flt_key=a.flt_key and c.SCH_DATE=a.FLT_DATE and c.FLT_TYPE = 'A'
      		where a.FLT_KEY = #fltKeylist#  AND a.FLT_DATE = #fltDatelist#  AND a.TO_NO = #towOrderlist#
	</select>
	
	<select id="sqlAckEnqTowDtl" parameterClass="cargo.cms.imprt.bo.MaintainTowOrderBO" resultClass="cargo.cms.imprt.bo.MaintainTowOrderBO">
		select
		    Decode(tdtl.ULD_KEY,null,(SUBSTR(tdtl.AWB_NO,1,3)||'-'||SUBSTR(tdtl.AWB_NO,4,11)),tdtl.ULD_KEY) uldAwbNo,
		    Decode(chk.CHKIN_YN,NULL,'N',chk.CHKIN_YN) AS chkYN,
		    tdtl.HO_AREA hoArea,
		    tdtl.TRNS_GRP as transferGrp,
		    tdtl.trf_type tfType,
		    toi.to_no towOrderlist,
		    TRIM((tdtl.CNTG_FLT_KEY)||'/'||to_char(tdtl.CNTG_FLT_DATE,'DDMONYY')) cntgKey,	 
			PKG_COMMON.GET_FLT_STA(tdtl.CNTG_FLT_KEY,to_char(tdtl.CNTG_FLT_DATE,'DDMONYY'),'D','HH24:MI') std,  		    
		    FFM.PCS || NVL2(FFM.PCS, '/', '') || DECODE(SUBSTR(FFM.WT, 0, 1), '.', '0' || FFM.WT, FFM.WT)  pcs,
		    tdtl.shcs  as  shc1
		FROM tow_order_in toi
		join tow_order_in_dtl tdtl	ON toi.to_no = tdtl.to_no
		left join IMP_CAR_SHP car ON	tdtl.AWB_NO = car.AWB_NO AND toi.FLT_KEY = car.FLT_KEY AND toi.FLT_DATE = car.FLT_DATE
		left join IMP_ULD_LIST iul ON iul.ULD_KEY = tdtl.ULD_KEY AND toi.FLT_KEY = iul.FLT_KEY AND toi.FLT_DATE = iul.FLT_DATE
		left join imp_ramp_chk_dtl chk	ON chk.ULD_KEY = tdtl.ULD_KEY AND chk.FLT_KEY = toi.FLT_KEY AND toi.FLT_DATE = chk.FLT_DATE
		LEFT OUTER JOIN
		(
			SELECT SUM(SHP.MAN_PCS) PCS, SUM(SHP.MAN_WT) WT, SHP.FLT_KEY, SHP.FLT_DATE, SHP.AWB_NO
			FROM EDI_FFM_MSG FFM
			JOIN EDI_FFM_ULD ULD
			ON FFM.TR_NO = ULD.TR_NO
			JOIN EDI_FFM_SHP SHP
			ON ULD.TR_NO = SHP.TR_NO AND ULD.DOC_LINE_NO = SHP.UDOC_LINE_NO
			WHERE
			FFM.FFM_STATUS = 'P' AND ULD.ULD_KEY IS NULL
			GROUP BY SHP.FLT_KEY, SHP.FLT_DATE, SHP.AWB_NO
		) FFM
		ON CAR.AWB_NO = FFM.AWB_NO AND CAR.FLT_KEY = FFM.FLT_KEY AND CAR.FLT_DATE = FFM.FLT_DATE
    	where toi.to_no = #towOrderlist#
	</select>
	
	<update id="sqlAckEnqTowDtls" parameterClass="cargo.cms.imprt.bo.MaintainTowOrderBO" >		
		UPDATE TOW_ORDER_IN SET ACK_DATE = sysdate, LM_DATE = sysdate WHERE TO_NO = #towOrderlist# AND TO_CHAR(LM_DATE, 'DDMONYY HH24:MI:SSSSS') = #lmDate#
	</update>
	<!-- ImportRampModule_EnqAckTowOrder [Query Ended by Srinivas] -->
	
	<!-- ImportRampModule_HHTEnqTowOrder [Query added by Srinivas] -->
	
	<!--  Changed for QR -->
		<select id="hhtEnqTowDtlList" parameterClass="cargo.cms.imprt.bo.MaintainTowOrderBO" resultClass="cargo.cms.imprt.bo.MaintainTowOrderBO">
			select 
			flt.TR_NO as txnNo,
			toi.to_no towOrderlist,				
			toi.flt_key as fltKeylist,
			TO_CHAR(toi.flt_date,'DDMONYY') as fltDatelist,
			TO_CHAR(DECODE(TO_CHAR(flt.EST_TIME),NULL,
  		    TO_CHAR(TO_DATE(SUBSTR(TRIM(TO_CHAR(NVL(flt.SCH_TIME,0),'0000')),0,2)|| ':'|| SUBSTR(TRIM(TO_CHAR(NVL(flt.SCH_TIME,0),'0000')),3,4),'HH24:MI')+ (
				(SELECT TO_NUMBER(s.rule_value)
				FROM CMSRULES s
				WHERE RULE_CODE='TOW_CUT_OFF_TIME'
				) / (24 * 60)),'HH24:MI'),
  			TO_CHAR(TO_DATE(SUBSTR(TRIM(TO_CHAR(NVL(flt.est_time,0),'0000')),0,2)|| ':'|| SUBSTR(TRIM(TO_CHAR(NVL(flt.est_time,0),'0000')),3,4), 'HH24:MI') + (
				(SELECT TO_NUMBER(s.rule_value)
				FROM CMSRULES s
				WHERE rule_code='TOW_CUT_OFF_TIME'
				) / (24 * 60)), 'HH24:MI'))) estTime,
        	to_date((TO_CHAR(flt.sch_date,'DDMONYY')||      
      		DECODE((DECODE(flt.ACT_TIME,NULL,'', RTRIM(SUBSTR(TRIM(TO_CHAR(flt.ACT_TIME,'0000')),0,2)||SUBSTR(TRIM(TO_CHAR(flt.ACT_TIME,'0000')),3,4)))),NULL,
       		SUBSTR(TRIM(TO_CHAR(NVL(flt.sch_time,0),'0000')),0,2)||SUBSTR(TRIM(TO_CHAR(NVL(flt.sch_time,0),'0000')),3,4),
        	(DECODE(flt.ACT_TIME,NULL,'', RTRIM(SUBSTR(TRIM(TO_CHAR(flt.ACT_TIME,'0000')),0,2)||SUBSTR(TRIM(TO_CHAR(flt.ACT_TIME,'0000')),3,4)))))),'DDMONYYHH24MI') as sortOrd
			from TOW_ORDER_IN toi
			join flt_opr flt on flt.flt_key = toi.flt_key and flt.SCH_DATE = toi.FLT_DATE and flt.FLT_TYPE = 'A' 
			where   toi.flt_date =  NVL(#fltDate#,toi.flt_date)
					AND toi.to_no = NVL(#towOrder#,toi.to_no)
					AND toi.flt_key =  NVL(#fltKey#,toi.flt_key)
					<isNotEmpty property="uldNo">
						<isNotEqual property="uldNo" compareValue="">
							AND exists (select null from TOW_ORDER_IN_DTL td where toi.to_no= td.to_no and  td.uld_key =  #uldNo#)
						</isNotEqual>
					</isNotEmpty>
					<isNotEmpty property="fltCarr">
					AND flt.carr_code = #fltCarr#
					</isNotEmpty>
					<isNotEmpty property="fltNo">
					<![CDATA[
		 			AND flt.flt_no = #fltNo#
					]]>
					</isNotEmpty>
					ORDER BY sortOrd DESC, toi.lm_date
			</select>
	
	<select id="hhtEnqTowDetails" parameterClass="cargo.cms.imprt.bo.MaintainTowOrderBO" resultClass="cargo.cms.imprt.bo.MaintainTowOrderBO">
		select
 			a.to_no towOrderlist,
      		b.HO_AREA hoArea,
			decode(b.ULD_KEY,null,b.AWB_NO,b.ULD_KEY) uldAwbNo,
      		decode(D.CHKIN_YN,null,'N',D.CHKIN_YN) chkYN
			from tow_order_in a
			join tow_order_in_dtl b	on a.to_no=b.to_no
  			left join imp_ramp_chk_dtl d on d.ULD_KEY=b.ULD_KEY AND d.FLT_KEY = a.FLT_KEY AND d.FLT_DATE = a.FLT_DATE
			where a.to_no=#towOrderlist#
	</select>
	
	<!-- ImportRampModule_EnqAckTowOrder [Query Ended by Srinivas] -->
	
	
	<!-- ImportRampModule_PhysicalCheckList [Query added by Srinivas] -->
	
	<select id="imp_checklist"  parameterClass="cargo.cms.imprt.bo.CheckListBO"  resultClass="cargo.cms.imprt.bo.CheckListBO">
         SELECT          
                hd.CARR_CODE  AS carrierCode,
                hd.FLT_NO  AS flightNo, 
                TO_CHAR(hd.FLT_DATE,'DDMONYY')  As flightDate, 
                dtl.ULD_KEY  AS uldNo, 
                Decode(dts.CHKIN_YN,NULL,'N',dts.CHKIN_YN) AS checkInInd,
                Decode(dtl.FFM_IND,NULL,'N',dtl.FFM_IND) ffmInd,
                Decode(dtl.CPM_IND,NULL,'N',dtl.CPM_IND) cpmInd,
                 (select TRF_TYPE
                  from v_ddt_dtl
                  where flt_key = hd.FLT_KEY
                  and flt_date = hd.FLT_DATE
                  and uld_key = dtl.ULD_KEY  and rownum=1
                  )  AS transferType, 
                foe.RAMP_COMPL_YN as rampComplStatus,
                iul.IMX  AS imx, 
                iul.HANDLING_MODE AS handlingMode, 
                V_COMMA_SEP_IMP_FLT_ULD_SHC( hd.FLT_KEY,hd.FLT_DATE,dtl.ULD_KEY,NULL,NULL) AS shc,   
                UPPER(dtl.RMK) AS remark,               
                dtl.LOC_CODE AS locCode,
                (select TRIM(TO_CHAR(MAX(TO_NUMBER(i.TO_NO)),'00000000')) TO_NO FROM
                tow_order_in i, tow_order_in_dtl tdtl
                where i.to_no= tdtl.to_no
                and tdtl.uld_key = dtl.ULD_KEY
                and i.flt_key = #flightNoKey#
                and TO_CHAR(i.flt_date,'DDMONYY') = #flightDate#) as towOrderNo,
               (select cc.CODE_DESC from CUST_COMPANY cc where cc.code= f.rho_id) as rho,             
               (SELECT count(ULD_KEY) FROM IMP_RAMP_INB_CHK_DTL  WHERE flt_key = hd.flt_key AND FLT_DATE = hd.FLT_DATE)  as totalUld,                
                PKG_IMP.fun_get_ho_area(hd.FLT_KEY,hd.FLT_DATE,dtl.ULD_KEY) as  plannedHoArea,
   				PKG_IMP.fun_get_hdlg_area(hd.FLT_KEY,hd.FLT_DATE,dtl.ULD_KEY) as handlingZone,
                pkg_common.get_flt_ata(hd.flt_key, hd.flt_date,'A','DD') AS ata,
                (SELECT CASE WHEN (SELECT count(1) FROM XT_IMP_CAR_SHP_DTL xt where xt.ULD_KEY =  dtl.ULD_KEY and xt.IMP_FLT_KEY = hd.FLT_KEY and xt.IMP_FLT_DATE = hd.FLT_DATE ) > 0 then 'Y' else 'N' end  from dual) as xtShpFlg
          FROM IMP_RAMP_CHK_HD hd
               join    FLT_OPR f                       ON  f.FLT_KEY = hd.FLT_KEY  AND  f.SCH_DATE = hd.FLT_DATE AND f.FLT_TYPE='A'
               join    FLT_OPR_EVENTS foe              ON  foe.FLT_KEY = hd.FLT_KEY  AND  foe.SCH_DATE = hd.FLT_DATE AND foe.FLT_TYPE='A'
               join    IMP_RAMP_INB_CHK_DTL dtl        ON  dtl.TR_NO = hd.TR_NO AND dtl.FLT_KEY = hd.FLT_KEY  AND  dtl.FLT_DATE = hd.FLT_DATE 
               left  join    IMP_ULD_LIST iul                ON  iul.FLT_KEY = dtl.FLT_KEY  AND  iul.FLT_DATE = dtl.FLT_date AND iul.ULD_KEY=dtl.ULD_KEY
               left  join    IMP_RAMP_CHK_DTL dts      ON  dts.TR_NO = hd.TR_NO AND dts.FLT_KEY = hd.FLT_KEY  AND  dts.FLT_DATE = hd.FLT_DATE AND dts.ULD_KEY=dtl.ULD_KEY         
         WHERE            
               hd.flt_key = #flightNoKey# AND 
               hd.FLT_DATE = #flightDate#
            ORDER BY dtl.ULD_KEY
   	</select>
	
	<!-- ImportRampModule_PhysicalCheckList [Query ended by Srinivas] -->


<insert id="sqlULDCheckinMovementLog" parameterClass="cargo.cms.imprt.bo.ULDCheckInBO" >
		  INSERT INTO ULD_MOV(TR_TYPE,TR_NO, TR_DATE,DOC_LINE_NO,ULD_NO,ULD_TYPE,    
								   ULD_CARR, ULD_KEY,RTRV_DATE, STRG_DATE,MOV_FROM,    
							  MOV_TO, ULD_STATUS, FLT_CARR,       
							  FLT_NO, FLT_TYPE, FLT_KEY,FLT_DATE,       
							  DAM_IND,EIC_ISS, EMPTY_ISS, CONTR_CCODE, OWNER_ID,
							  RMK, CR_USER_ID,
							  CR_DATE, LM_USER_ID, LM_DATE,SEQ_NO)
		 VALUES (		
		 'IR',		
		 #trNo#,sysdate,#docLineNo#,#uldNo#,#uldType#,
				 #carrierCode#,#uldKey#,sysdate,sysdate,
				<isEqual property="actionName" compareValue="insert">
					 null, #locCode#,'CONFIRMED',
				</isEqual>
				<isEqual property="actionName" compareValue="delete">
					 null, null,'REMOVED',
				</isEqual>	
				<isEqual property="actionName" compareValue="update">
				     null, #locCode#,'CONFIRMED',
				</isEqual>				
				#carrierCode#,
				#flightNo#,#flightType#,#flightKey#,#flightDate#,
				#damInd#,#eic#,#empty#,#contour#,#owner#,
				#remark#,#lmUser#,sysdate,#lmUser#,sysdate,uld_mov_seq.nextval)  
	</insert>
	
	<!-- Changed for QR 
	<insert id="sqlULDCheckinEventLog" parameterClass="cargo.cms.imprt.bo.ULDCheckInBO">	
		INSERT INTO FLT_OPR_EVENTS(
				TR_NO, CARR_CODE, FLT_NO, FLT_KEY, ORG_FLT_DATE, SCH_DATE,FFM_IND,LM_DATE)
			VALUES(
				#trNo#,UPPER(#carrierCode#),UPPER(#flightNo#),UPPER(#flightKey#),TO_DATE(#flightDate#,'DDMONYY'),
				TO_DATE(#flightDate#,'DDMONYY'),#ffmInd#,sysdate)
	</insert> -->
	
	<select id="sqlGetULDHcontainer"  parameterClass="cargo.cms.imprt.bo.ULDCheckInBO"  resultClass="java.lang.String">
			SELECT h_cont_ind from MAST_ULD_TYPE where code = #uldType#
	</select>		
	
	<delete id="imp_ramp_inbuld_del" parameterClass="cargo.cms.imprt.bo.ULDCheckInBO" >		
		DELETE IMP_RAMP_INB_CHK_DTL	WHERE ULD_KEY = #uldKey# AND FLT_DATE=To_DATE(#flightDate#,'DDMONYY') AND FLT_KEY=#flightKey#
	</delete>
	
	<select id="checkContrCode"  parameterClass="java.lang.String"  resultClass="java.lang.Integer">
	     select count(1) from MAST_CONTR_IND where CODE=#PARAM#
    </select>
    
    <select id="checkLocnCode"  parameterClass="java.lang.String"  resultClass="java.lang.Integer">
	     select count(1) from MAST_WH_LOC where CODE=#PARAM#
    </select>
    
    <select id="checkWHArea"  parameterClass="java.lang.String"  resultClass="java.lang.Integer">
	     select count(1) from MAST_WH_AREA where WH_AREA=#PARAM#
    </select>
    <select id="getLocnPcsforMiletone"  parameterClass="java.lang.String"  resultClass="java.lang.String">
	     SELECT NVL(SUM(LOCN_PCS),'0') FROM AWB_INVENTORY WHERE SEQ_NO=#PARAM#
    </select>
    <!-- Changed for QR
    <select id="checkHOArea"  parameterClass="java.lang.String"  resultClass="java.lang.Integer">    
	     select count(1) from imp_hoarea_dtl where UPPER(ho_area)=#PARAM#
    </select>    -->
    
    <select id="sqlCountULDTypeVsContourCodeCheckin"  parameterClass="cargo.cms.imprt.bo.ULDCheckInBO" resultClass="java.lang.Integer" >
		select count(1) from ULD_TYPE_CONTR where ULD_TYPE = #uldType# and CONTR_CODE = #contour#
	</select> 
    
    <select id="checkWHAreaDesc"  parameterClass="java.lang.String"  resultClass="java.lang.Integer">
	     select count(1) from MAST_WH_AREA where WH_AREA_DESC=#PARAM#
    </select>
    
    <select id="checkDescrepencyOfHAWB"  parameterClass="java.lang.String"  resultClass="java.lang.Integer">	    
		SELECT
		    COUNT(IH.HAWB_NO)
		  FROM
		    IMP_SRF SR 
		    LEFT JOIN IMP_HAWB_STRG_DTL IH ON SR.AWB_NO=IH.AWB_NO AND SR.AWB_DATE = IH.AWB_DATE
		    WHERE
		    SR.SRF_NO = #srfNO#
    </select>
    
    <select id="checkSRFShouldHaveHAWBWithCC"  parameterClass="java.lang.String"  resultClass="java.lang.Integer">	    
		SELECT COUNT(ISID.HAWB_NO)
    FROM
    IMP_SRF ISF
    LEFT JOIN IMP_SRF_AWB_INVENTORY ISI ON ISF.AWB_NO = ISI.AWB_NO AND ISF.AWB_DATE = ISI.AWB_DATE AND ISI.CC_CODE != null 
    LEFT JOIN IMP_SRF_AWB_INVENTORY_DTL ISID ON ISID.SEQ_NO = ISI.SEQ_NO
    WHERE 
    ISF.SRF_NO=#srfNo#
    </select>
    
     <insert id="sqlGenTowOrderHdrULD" parameterClass="cargo.cms.imprt.bo.CheckListBO" >		
			insert into TOW_ORDER_IN(TO_NO,CR_USER_ID,VER_NO,LM_DATE,LM_USER_ID,RHO_ID,FLT_KEY,FLT_DATE,CR_DATE,FLT_TYPE,TR_TYPE) 
			values(#towOrderNo#,#lmUserId#,#towOrderVersionNo#,SYSDATE,#lmUserId#,#rho#,#flightKey#,#flightDate#,SYSDATE,#flightType#,#trtype#)
	</insert>	
	
	<insert id="sqlGenTowOrderDtlULD" parameterClass="cargo.cms.imprt.bo.CheckListBO" >		
			insert into TOW_ORDER_IN_DTL(CR_USER_ID,LM_DATE,CR_DATE,HO_AREA,TO_NO,LM_USER_ID,ULD_KEY,TRNS_GRP,SHCS,TR_TYPE, CNTG_FLT_KEY, CNTG_FLT_DATE, TRF_TYPE) 
			values(#lmUserId#,sysdate,sysdate,#plannedHoArea#,#towOrderNo#,#lmUserId#,#uldKey#,#transferGroup#,#shc#,'TOWCR',#cntgFltKey#, #cntgFltDate#, #transferType#)
	</insert>   
	
	<select id="getFlightType"  parameterClass="cargo.cms.imprt.bo.CheckListBO"  resultClass="java.lang.String">
			SELECT FLT_TYPE FROM FLT_OPR WHERE FLT_KEY =#flightKey# AND FLT_TYPE='A' AND SCH_DATE = TO_DATE( #flightDate#, 'DDMONYY')
   	</select> 
   	
   	<insert id="imp_insert_uldlist" parameterClass="cargo.cms.imprt.bo.CheckListBO" >		
		INSERT INTO IMP_ULD_LIST(CR_USER_ID,ULD_KEY,FLT_DATE,CR_DATE,FLT_KEY,LM_DATE,IMX,LM_USER_ID,TRANSIT_IND,TRANSFER_TYPE)
		VALUES (#lmUserId#,#uldKey#,TO_DATE(#flightDate#,'ddmonyy'),SYSDATE,#flightKey#,SYSDATE,'N',#lmUserId#,'N',#transferType#)
	</insert>
	
	 <select id="checkInULDList"  parameterClass="cargo.cms.imprt.bo.CheckListBO" resultClass="java.lang.Integer">
	     select count(1) from IMP_ULD_LIST where ULD_KEY=#uldKey# and FLT_DATE=TO_DATE(#flightDate#) and FLT_KEY=#flightKey#
    </select> 
	
	 <select id="imp_chk_transfer_type_list"  parameterClass="cargo.cms.imprt.bo.CheckListBO"  resultClass="java.lang.String">
	 	SELECT TRF_TYPE FROM ddt_uld 
	 	WHERE cntg_flt_key=#flightKey# 
	 	and cntg_flt_date=TO_DATE(#flightDate#,'DDMONYY') 
	 	and uld_key=#uldKey#
	</select>
	
	<!--  Changed for QR
	<select id="get_contgfltdtl_uldflt"  parameterClass="cargo.cms.imprt.bo.ULDCheckInBO"  resultClass="cargo.cms.imprt.bo.ULDCheckInBO">	
	    SELECT CNTG_FLT_KEY , CNTG_FLT_DATE  FROM  V_DDT_DTL 
		WHERE FLT_KEY 	= #flightKey#
		AND FLT_DATE    = TO_DATE(#flightDate#,'DDMONYY')
		AND ULD_KEY     = #uldKey#
		AND TRF_TYPE IN ('TT','IF')
		AND ROWNUM=1   
	</select>  -->
	
	<select id="getImpULDDetails"  parameterClass="cargo.cms.imprt.bo.ULDCheckInBO"  resultClass="java.lang.String">
		select HANDLING_MODE AS handlingMode
		  from IMP_ULD_LIST 
		  where FLT_KEY = #flightKey# and FLT_DATE = TO_DATE(#flightDate#,'DDMONYY') and ULD_KEY = #uldKey#	
	</select>
	
	<select id="get_ddt_uld_transfer_type"  parameterClass="cargo.cms.imprt.bo.ULDCheckInBO"  resultClass="cargo.cms.imprt.bo.ULDCheckInBO">
          SELECT CNTG_FLT_KEY cntgFltKey, TO_CHAR(CNTG_FLT_DATE,'DDMONYY') cntgFltDate, TRF_TYPE transferType FROM v_ddt_dtl
	      WHERE 
	      FLT_KEY = #flightKey# and
	      FLT_DATE = TO_DATE(#flightDate#,'DDMONYY') and
	      uld_key=#uldKey# and rownum = 1
	</select> 
	
	<select id="check_data_exist_EXP_CHKOUT_HD"  parameterClass="cargo.cms.imprt.bo.ULDCheckInBO"  resultClass="java.lang.Integer">
		select count(1) from EXP_CHKOUT_HD where flt_key = #cntgFltKey# and flt_date = #cntgFltDate# 
	</select>
	
	<insert id="imp_uld_checkin_insert_EXP_CHKOUT_HD" parameterClass="cargo.cms.imprt.bo.ULDCheckInBO" >
		Insert into EXP_CHKOUT_HD (FLT_KEY,FLT_DATE,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,FLT_TYPE)
		values (#cntgFltKey#,#cntgFltDate#,#lmUser#,sysdate,#lmUser#,sysdate,'E')
	</insert>
	<select id="check_data_exist_EXP_CHKOUT_DTL"  parameterClass="cargo.cms.imprt.bo.ULDCheckInBO"  resultClass="java.lang.Integer">
		select count(1) from EXP_CHKOUT_DTL where flt_key = #cntgFltKey# and flt_date = #cntgFltDate# and uld_key = #uldKey#
	</select>
	<select id="check_flt_data_exist_EXP_CHKOUT_DTL"  parameterClass="cargo.cms.imprt.bo.ULDCheckInBO"  resultClass="java.lang.Integer">
		select count(1) from EXP_CHKOUT_DTL where flt_key = #cntgFltKey# and flt_date = #cntgFltDate# 
	</select>
	
	<insert id="imp_uld_checkin_insert_EXP_CHKOUT_DTL" parameterClass="cargo.cms.imprt.bo.ULDCheckInBO" >
		Insert into EXP_CHKOUT_DTL (FLT_KEY,FLT_DATE,ULD_KEY,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE) 
		values (#cntgFltKey#,#cntgFltDate#,#uldKey#,#lmUser#,sysdate,#lmUser#,sysdate)
	</insert>
	
	<select id="validate_checkout_uld"  parameterClass="cargo.cms.imprt.bo.ULDCheckInBO"  resultClass="java.lang.Integer">
		select count(1) from EXP_CHKOUT_DTL 
	    	where flt_key = #cntgFltKey# and flt_date = #cntgFltDate# and uld_key = #uldKey# and chkout_date is not null
	</select>
	
	<delete id="imp_uld_uncheckin_delete_EXP_CHKOUT_DTL" parameterClass="cargo.cms.imprt.bo.ULDCheckInBO" >
		delete from EXP_CHKOUT_DTL where flt_key = #cntgFltKey# and flt_date = #cntgFltDate# and uld_key = #uldKey# and chkout_date is null
	</delete>
	
	<delete id="imp_uld_uncheckin_delete_EXP_CHKOUT_HD" parameterClass="cargo.cms.imprt.bo.ULDCheckInBO" >
		delete from EXP_CHKOUT_HD where flt_key = #cntgFltKey# and flt_date = #cntgFltDate#
	</delete>
	
	<select id="get_ddt_uld_inbound_transfer_type"  parameterClass="cargo.cms.imprt.bo.CheckListBO"  resultClass="java.lang.String">	
		  SELECT TRF_TYPE FROM v_ddt_dtl
	      WHERE 
	      FLT_KEY = #flightKey# and
	      FLT_DATE = TO_DATE(#flightDate#,'DDMONYY') and
	      uld_key=#uldKey#   and rownum = 1	 	 
	</select>
	
	<select id="getImpULDDetailsInbound"  parameterClass="cargo.cms.imprt.bo.CheckListBO"  resultClass="java.lang.String">
		select HANDLING_MODE AS handlingMode
		  from IMP_ULD_LIST 
		  where FLT_KEY = #flightKey# and FLT_DATE = TO_DATE(#flightDate#,'DDMONYY') and ULD_KEY = #uldKey#	
	</select>
 <!-- ImportRampModule END -->

<!-- ImportRampModule_HLD_IMP_RAMP_FltHandlingRpt [Query's added by Srinivas] -->

	<select id="carrcodevalidation"  parameterClass="java.lang.String" resultClass="java.lang.Integer">
      <![CDATA[
                  SELECT COUNT(1) as count FROM MAST_CARRIER WHERE OWNED_CARR = 'Y' and CODE = #param# 
            ]]>
     </select>
 
 	<select id="imp_getdate"  parameterClass="map"  resultClass="java.lang.String">
			SELECT UPPER(TO_CHAR(SYSDATE,'DDMONYY')) FROM DUAL
   	</select>

	
   	<select id="flight_report_getFlightListForRamp"  parameterClass="cargo.cms.imprt.bo.FlightReportBO" 
		 resultClass="cargo.cms.imprt.bo.FlightReportBO">
		SELECT 
		   flt.FLT_NO as fltNo, 
		   flt.CARR_CODE as carrCode,
		   flt.FLT_KEY as fltKey,
		   TO_CHAR(flt.SCH_DATE,'DDMONYY') as fltDateDisplay,
		   TO_CHAR(flt.SCH_DATE,'DDMONYY') as fltDate,
		   flt.TR_NO as trNo, 
		   PKG_COMMON.get_flt_ata(flt.FLT_KEY, flt.SCH_DATE, 'A') as ata,
		   NVL(flt.ACT_TIME, '0000') as ataForInsert,
		   RTRIM(TO_CHAR(fltevents.RAMP_COMPL_DATE, 'DDMONYY')||' '||(SUBSTR(TRIM(TO_CHAR(fltevents.RAMP_COMPL_TIME, '0000')),0,2)|| ':'||  SUBSTR(TRIM(TO_CHAR(fltevents.RAMP_COMPL_TIME, '0000')),3,4)), ':') as bdComplDate,
		   flt.ACFT_TYPE as cargoAcftType,
		   PKG_COMMON.get_flt_eta(flt.FLT_KEY, flt.SCH_DATE, 'A') as eta,
	   	   DECODE(flt.SCH_TIME,NULL,'',SUBSTR(TRIM(TO_CHAR(flt.SCH_TIME, '0000')),0,2)|| ':'||  SUBSTR(TRIM(TO_CHAR(flt.SCH_TIME, '0000')),3,4)) as sta,
		   repthead.LM_USER_ID as fltHdlgDataGenStaffId,
		   TO_CHAR(repthead.LM_DATE,'DDMONYY HH24:MI') as fltHdlgDataGenDate,
		   repthead.TR_NO as reptTrNo,
		   (SELECT CODE_DESC FROM MAST_CODE_DTL WHERE CODE = flt.WTHR_COND AND CODE_TYPE='WTH_CONDN') AS weatherCondition,
			pkg_common.flt_route(flt.FLT_KEY, flt.SCH_DATE, 'A') portOfCall
		FROM FLT_OPR flt LEFT JOIN IMP_FLT_HAND_SUMMARY	repthead ON
		 		 repthead.REP_MODULE = 'IR' AND
				 flt.FLT_KEY = repthead.FLT_KEY AND
				 flt.SCH_DATE = repthead.FLT_DATE, 
			 FLT_OPR_EVENTS fltevents
		WHERE
			flt.FLT_TYPE = 'A'	AND
			flt.TR_NO = fltevents.TR_NO AND
			TO_CHAR(flt.SCH_DATE,'DDMONYY') = #fltDate# 
		<dynamic>
			<isNotEmpty prepend="AND" property="carrCode">
				flt.CARR_CODE = #carrCode#
			</isNotEmpty>
	
			<isNotEmpty prepend="AND" property="fltNo">
				flt.FLT_NO = #fltNo#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="fltKey">
				flt.FLT_KEY = #fltKey#
			</isNotEmpty>
		</dynamic>
	</select>

	<select id="flight_report_getFltHandlingSummary" parameterClass="cargo.cms.imprt.bo.FlightReportBO" resultClass="cargo.cms.imprt.bo.FltHandSummaryBO">
		SELECT
                  FHS.TR_NO as trNo,
                  FHS.REP_MODULE as repModule,
                  FHS.CARR_CODE as carrCode,
                  FHS.FLT_NO as fltNo,
                  FHS.FLT_DATE as fltDate,
                  FHS.FLT_KEY as fltKey,
                  FHS.FLT_ATA as fltAta,            
                  NO_OF_LOADED_ULDS as noOfLoadedUlds,
				  NO_OF_BULK_CARGO as noOfBulkCargo,
				  NO_OF_EMPTY_ULD as noOfEmptyUld,                      
                  FHS.IRR_ULD as irrUld,
                  FHS.IRR_ULD_RMK as irrUldRmk,
                  FHS.SVC_STD_RMK as svcStdRmk,
                  FHS.LM_USER_ID as modifiedUserId,
                  TO_CHAR(FHS.LM_DATE, 'DDMONYY HH24:MI:SS') as lmDate,
                  FHS.AWB_LOCAL as awbLocal,
                  FHS.AWB_TRAN as awbTran,
                  FHS.AWB_MAIL as awbMail,
                  FHS.BD_TONNAGE bdTonnage,
                  FHS.DAMAGEULD damageUldSize, 
                  FHS.TOTALULD totalUld ,
                  FHS.DAMAGEULDLIST damageUldList,
                  FHS.IMAGE as transactionId
            FROM IMP_FLT_HAND_SUMMARY FHS
            WHERE 
			FHS.FLT_KEY = #fltKey# AND
			TO_CHAR(FHS.FLT_DATE, 'DDMONYY') = #fltDate# AND
			FHS.REP_MODULE = #reptType#
	</select>
	
	<delete id="flight_report_deleteOldUploadFiles" parameterClass="map" >
		DELETE IMP_FLT_HAND_SUMMARY_DOC_TMP WHERE SYSDATE-CR_DATE > #days#
	</delete>
	
	<select id="flight_report_checkRandomTR" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		SELECT count(1)
		FROM IMP_FLT_HAND_SUMMARY_DOC_TMP
		WHERE TR_NO = #value#
	</select>
	
	<insert id="flight_report_copyToTemp" parameterClass="map">
		INSERT INTO IMP_FLT_HAND_SUMMARY_DOC_TMP
		(TR_NO, DOC_LINE_NO, ATT_PATH, DOC_NAME, DOC_IMAGE, CR_DATE)
		SELECT #randomTr# as TR_NO, DOC_LINE_NO, ATT_PATH, DOC_NAME, DOC_IMAGE, SYSDATE
		FROM IMP_FLT_HAND_SUMMARY_DOC
		WHERE TR_NO = #trNo#
	</insert>
	
	<select id="flight_report_getPerformanceListIMBFR"	parameterClass="cargo.cms.imprt.bo.FlightReportBO"
			 resultClass="cargo.cms.imprt.bo.PerformanceFRBO">
		SELECT A.PERF_NAME as performanceName, 
			   A.PERF_DESC as description, 
			   A.INFO_REQD as infoRequired,
	 		   B.RMK as remarks  ,
			   B.RMK as oldRemarks  
		FROM MAST_PERFORMANCE_STD A 
		LEFT JOIN IMP_FLT_HAND_PERFORMANCE B ON A.PERF_NAME = B.PERF_NAME AND B.TR_NO = #reptTrNo#
		WHERE A.REP_MODULE = #reptType#
	</select>
	
	<select id="flight_report_getTimestampListGenerate" parameterClass="cargo.cms.imprt.bo.FlightReportBO" 
		resultClass="cargo.cms.imprt.bo.TimestampFRBO">
		select 
			A.CODE as itemCode, 
			A.Code_DESC as itemName, 
			UPPER(A.MODIFY_YN) as modifyYN,
			TO_CHAR(SYSDATE,'DDMONYY') as actionedTimeDate,
			SUBSTR(TRIM(TO_CHAR(TO_CHAR(SYSDATE,'HH24MI'),'0000')),0,2) as actionedTimeHour,
			SUBSTR(TRIM(TO_CHAR(TO_CHAR(SYSDATE,'HH24MI'),'0000')),3,4) AS actionedTimeMinute,
			SUBSTR(TRIM(TO_CHAR(TO_CHAR(SYSDATE,'HH24MISS'),'000000')),5,6) AS actionedTimeSecond,
			TO_CHAR(SYSDATE,'DDMONYY') as oldActionedTimeDate,
			SUBSTR(TRIM(TO_CHAR(TO_CHAR(SYSDATE,'HH24MI'),'0000')),0,2) as oldActionedTimeHour,
			SUBSTR(TRIM(TO_CHAR(TO_CHAR(SYSDATE,'HH24MI'),'0000')),3,4) AS oldActionedTimeMinute,
			SUBSTR(TRIM(TO_CHAR(TO_CHAR(SYSDATE,'HH24MISS'),'000000')),5,6) AS oldActionedTimeSecond
		FROM MAST_FLT_TIME_STAMP A
		where A.CODE_TYPE = 'TIME' AND A.REP_MODULE like '%'||#reptType#||'%'
	</select>
		
	<select id="flight_report_getTimestampListIMBFR" parameterClass="cargo.cms.imprt.bo.FlightReportBO" 
		resultClass="cargo.cms.imprt.bo.TimestampFRBO">
		select 
			A.CODE as itemCode, 
			A.Code_DESC as itemName, 
			UPPER(A.MODIFY_YN) as modifyYN,
			TO_CHAR(B.TSTAMP_DATE, 'DDMONYY HH24:MI:SS') as actionedTime,
			TO_CHAR(B.TSTAMP_DATE, 'DDMONYY') as actionedTimeDate,
			TO_CHAR(B.TSTAMP_DATE, 'HH24') as actionedTimeHour,
			TO_CHAR(B.TSTAMP_DATE, 'MI') as actionedTimeMinute,
			TO_CHAR(B.TSTAMP_DATE, 'SS') as actionedTimeSecond,
			TO_CHAR(B.TSTAMP_DATE, 'DDMONYY HH24:MI:SS') as oldActionedTime,
			TO_CHAR(B.TSTAMP_DATE, 'DDMONYY') as oldActionedTimeDate,
			TO_CHAR(B.TSTAMP_DATE, 'HH24') as oldActionedTimeHour,
			TO_CHAR(B.TSTAMP_DATE, 'MI') as oldActionedTimeMinute,	
			TO_CHAR(B.TSTAMP_DATE, 'SS') as oldActionedTimeSecond
		FROM MAST_FLT_TIME_STAMP A 
		LEFT JOIN IMP_FLT_HAND_TIME_STAMP B ON A.CODE =	B.TSTAMP_CODE AND B.TR_NO = #reptTrNo#
		where (A.CODE_TYPE = 'TIME' AND A.REP_MODULE like '%'||#reptType#||'%') or A.CODE = 'CATA'
	</select>
	
	
	
	<select id="flight_imp_ramp_getTimeStamp" parameterClass="cargo.cms.imprt.bo.FlightReportBO" resultClass="cargo.cms.imprt.bo.TimestampFRBO">
		select 
			TSTAMP_CODE as itemCode, 
			to_char(TSTAMP_DATE,'DDMONYY') as actionedTime,
			substr(trim(to_char(TSTAMP_TIME,'0000')), 0, 2) actionedTimeHour,
		   	substr(trim(to_char(TSTAMP_TIME,'0000')), 3, 4) actionedTimeMinute		
			FROM IMP_FLT_HAND_TIME_STAMP A
		where FLT_KEY=#fltKey# and FLT_DATE=#fltDate# 
		and TSTAMP_CODE in ('Ex_Tow_ECT') 
	</select>
	
	<select id="flight_report_getServiceStandardListGenerate"	parameterClass="cargo.cms.imprt.bo.FlightReportBO"
			 resultClass="cargo.cms.imprt.bo.ServiceStandardFRBO">
		SELECT
			  A.ITM_NAME as itemName,
			  A.STD as std,
			  SUBSTR(TRIM(TO_CHAR(NVL(1140,0),'0000')),0,2)|| 
			  ':'||  SUBSTR(TRIM(TO_CHAR(NVL(1140,0),'0000')),3,4) AS serviceTime,
			  '1140' as serviceTimeForDb,
			  'N' as stdMet
		FROM 
			MAST_SVC_STD A
		WHERE
	        A.REP_MODULE = #reptType#
	</select>	
	
	<select id="flight_report_getServiceStandardListIMBFR"	parameterClass="cargo.cms.imprt.bo.FlightReportBO"
			 resultClass="cargo.cms.imprt.bo.ServiceStandardFRBO">
			 <![CDATA[
			SELECT
		  	A.ITM_NAME as itemName,
		  	 (select CODE_DESC from MAST_FLT_TIME_STAMP where code = A.TIME_STAMP2) 
            || ' - ' || (select CODE_DESC from MAST_FLT_TIME_STAMP where code = A.TIME_STAMP1) 
            || ' ' || decode(a.STD_OPR, 'LE', '<=', 'LT', '<', 'GE', '>=', 'GT', '>', 'EQ', '=')  || ' ' || A.STD as std,
		  	A.STD as stdValue,
		  	B.SVC_TIME AS serviceTime,
		  	B.SVC_TIME as serviceTimeForDb,
		 	B.STD_MET_YN as stdMet
		 	FROM MAST_SVC_STD A 
			LEFT JOIN MAST_FLT_TIME_STAMP MT ON MT.CODE = A.TIME_STAMP2
			LEFT JOIN IMP_FLT_HAND_SVC_STD B ON A.ITM_NAME = B.ITM_NAME  AND nvl(b.tr_no, '**') = nvl(#reptTrNo#, '**') 
			JOIN FLT_OPR F ON F.FLT_TYPE = DECODE(A.FLT_TYPE, 'I', 'A', 'D') AND F.CARR_CODE = NVL(A.CARR_CODE, F.CARR_CODE) 
		 	AND F.CGO_ACFT_TYPE = NVL(A.ACFT_TYPE, F.CGO_ACFT_TYPE)
			LEFT JOIN (SELECT FLT_KEY, FLT_DATE, SUM(MANIFEST_WT) WT 
			FROM IMP_CAR_SHP GROUP BY FLT_KEY, FLT_DATE) S ON S.FLT_KEY = F.FLT_KEY AND S.FLT_DATE = F.SCH_DATE
			WHERE A.REP_MODULE = #reptType#
			AND F.FLT_KEY = #fltKey# AND F.SCH_DATE = #fltDate# AND F.FLT_TYPE = 'A' 
			AND NVL(A.TONN_RANGE_FROM, nvl(S.WT, 0)) <= nvl(S.WT, 0) AND NVL(A.TONN_RANGE_TO, nvl(S.WT, 0)) >= nvl(S.WT, 0)	]]>
	</select>
	
	<!--  Changed for QR -->
	<select id="flight_report_getFlightlistIMBFR"  parameterClass="cargo.cms.imprt.bo.FlightReportBO" 
		 resultClass="cargo.cms.imprt.bo.FlightReportBO">
		SELECT 
		   flt.FLT_NO as fltNo, 
		   flt.CARR_CODE as carrCode,
		   flt.FLT_KEY as fltKey,
		   TO_CHAR(flt.SCH_DATE,'DDMONYY') as fltDateDisplay,
		   TO_CHAR(flt.SCH_DATE,'DDMONYY') as fltDate,
		   flt.TR_NO as trNo, 
		   PKG_COMMON.get_flt_ata(flt.FLT_KEY, flt.SCH_DATE, 'A') as ata,
		   NVL(flt.ACT_TIME, '0000') as ataForInsert,
		   TO_CHAR(fltevents.WHSE_COMPL_DATE, 'DDMONYY HH24:MI') as bdComplDate,
           RTRIM(TO_CHAR(fltevents.WHSE_COMPL_DATE, 'DDMONYY')||' '||(SUBSTR(TRIM(TO_CHAR(fltevents.WHSE_COMPL_TIME, '0000')),0,2)|| ':'||  SUBSTR(TRIM(TO_CHAR(fltevents.WHSE_COMPL_TIME, '0000')),3,4)), ':') as bdComplDate,
		   flt.CGO_ACFT_TYPE as cargoAcftType,
		   PKG_COMMON.get_flt_eta(flt.FLT_KEY, flt.SCH_DATE, 'A') as eta,
	   	   PKG_COMMON.get_flt_sta(flt.FLT_KEY, flt.SCH_DATE, 'A') as sta,
		   repthead.LM_USER_ID as fltHdlgDataGenStaffId,
		   TO_CHAR(repthead.CR_DATE,'DDMONYY HH24:MI') as fltHdlgDataGenDate,
		   repthead.LM_USER_ID as fltHdlgDataGenStaffId,
		   repthead.TR_NO as reptTrNo,
			pkg_common.flt_ports(flt.FLT_KEY, flt.SCH_DATE, 'A') portOfCall ,
		   (SELECT MAST_CODE_DTL.CODE_DESC FROM MAST_CODE_DTL 
		   				WHERE 	MAST_CODE_DTL.CODE_TYPE	= 'WTH_CONDN' AND MAST_CODE_DTL.CODE  = flt.WTHR_COND) AS weatherCondition
	FROM FLT_OPR flt 
	LEFT JOIN IMP_FLT_HAND_SUMMARY	repthead ON repthead.REP_MODULE = #reptType# AND flt.FLT_KEY = repthead.FLT_KEY AND flt.SCH_DATE = repthead.FLT_DATE, 	
	FLT_OPR_EVENTS fltevents	
	WHERE
		 TO_CHAR(flt.SCH_DATE,'DDMONYY') = #fltDate# AND
		 flt.FLT_TYPE = 'A'	AND
		 flt.TR_NO = fltevents.TR_NO 
		<dynamic>
			<isNotEmpty prepend="AND" property="carrCode">
				flt.CARR_CODE = #carrCode#
			</isNotEmpty>
	
			<isNotEmpty prepend="AND" property="fltNo">
				flt.FLT_NO = #fltNo#
			</isNotEmpty>
		</dynamic> 
		Order by flt.SCH_DATE , flt.SCH_TIME
	</select>

	<!--  Changed for QR -->
	<select id="flight_report_getFlightListForDocument"  parameterClass="cargo.cms.imprt.bo.FlightReportBO" 
		 resultClass="cargo.cms.imprt.bo.FlightReportBO">
		SELECT 
		   flt.FLT_NO as fltNo, 
		   flt.CARR_CODE as carrCode,
		   flt.FLT_KEY as fltKey,
		   TO_CHAR(flt.SCH_DATE,'DDMONYY') as fltDateDisplay,
		   TO_CHAR(flt.SCH_DATE,'DDMONYY') as fltDate,
		   flt.TR_NO as trNo, 
		   PKG_COMMON.get_flt_ata(flt.FLT_KEY, flt.SCH_DATE, 'A') as ata,
		   NVL(flt.ACT_TIME, '0000') as ataForInsert,
		   TO_CHAR(fltevents.DOC_COMPL_DATE, 'DDMONYY HH24:MI') as bdComplDate,
		   flt.ACFT_TYPE as cargoAcftType,
		   PKG_COMMON.get_flt_eta(flt.FLT_KEY, flt.SCH_DATE, 'A') as eta,
	   	   DECODE(flt.SCH_TIME,NULL,'',SUBSTR(TRIM(TO_CHAR(flt.SCH_TIME, '0000')),0,2)|| ':'||  SUBSTR(TRIM(TO_CHAR(flt.SCH_TIME, '0000')),3,4)) as sta,
		   repthead.LM_USER_ID as fltHdlgDataGenStaffId,
		   TO_CHAR(repthead.LM_DATE,'DDMONYY HH24:MI') as fltHdlgDataGenDate,
		   repthead.TR_NO as reptTrNo,
		   (SELECT CODE_DESC FROM MAST_CODE_DTL WHERE  CODE  = flt.WTHR_COND AND CODE_TYPE='WTH_CONDN') AS weatherCondition,
			pkg_common.flt_route(flt.FLT_KEY, flt.SCH_DATE, 'A') portOfCall
		FROM FLT_OPR flt 
		LEFT JOIN IMP_FLT_HAND_SUMMARY	repthead ON
		 		 repthead.REP_MODULE = 'ID' AND	 flt.FLT_KEY = repthead.FLT_KEY AND flt.SCH_DATE = repthead.FLT_DATE, 
		FLT_OPR_EVENTS fltevents
		WHERE
			flt.FLT_TYPE = 'A'	AND
			flt.TR_NO = fltevents.TR_NO AND
			TO_CHAR(flt.SCH_DATE,'DDMONYY') = #fltDate#
		<dynamic>
			<isNotEmpty prepend="AND" property="carrCode">
				flt.CARR_CODE = #carrCode#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="fltNo">
				flt.FLT_NO = #fltNo#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="fltKey">
				flt.FLT_KEY = #fltKey#
			</isNotEmpty>
			<isEmpty property="carrCode">
			<isNotEmpty property="loginCarrier">
				AND	(flt.CARR_CODE = #loginCarrier#
				OR flt.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP 
				WHERE GRP_CARR_CODE	= #loginCarrier#))							
			</isNotEmpty>
		</isEmpty>			
		</dynamic>
		Order by flt.SCH_DATE , flt.SCH_TIME
	</select>
	
	<insert id="flight_report_insertReportImage" parameterClass="cargo.cms.imprt.bo.ReportImageBO">
		INSERT INTO IMP_FLT_HAND_SUMMARY_DOC_TMP 
		(TR_NO, DOC_LINE_NO, ATT_PATH, DOC_NAME, DOC_IMAGE, CR_DATE)
		VALUES (#trNo#, (SELECT NVL(MAX(DOC_LINE_NO), 0) FROM IMP_FLT_HAND_SUMMARY_DOC_TMP WHERE TR_NO = #trNo#)+1 , '',
		#docName#, #docImage#, SYSDATE)
	</insert>
	
	<select id="flight_report_getImageListReal"  parameterClass="cargo.cms.imprt.bo.ReportImageBO"  resultClass="cargo.cms.imprt.bo.ReportImageBO">
		SELECT
			  TR_NO as trNo,
			  DOC_LINE_NO as docLineNo,
			  DOC_NAME as docName,
			  LENGTH(DOC_IMAGE) as filesize
		FROM IMP_FLT_HAND_SUMMARY_DOC
		WHERE TR_NO = #trNo#
		ORDER BY DOC_LINE_NO
	</select>
	
	<select id="flight_report_getImageList"  parameterClass="cargo.cms.imprt.bo.ReportImageBO"  resultClass="cargo.cms.imprt.bo.ReportImageBO">
		SELECT
			  TR_NO as trNo,
			  DOC_LINE_NO as docLineNo,
			  DOC_NAME as docName,
			  LENGTH(DOC_IMAGE) as filesize
		FROM IMP_FLT_HAND_SUMMARY_DOC_TMP
		WHERE TR_NO = #trNo#
		ORDER BY DOC_LINE_NO
	</select>
	
	<select id="flight_report_getDamageUld" parameterClass="cargo.cms.imprt.bo.FlightReportBO" 
		resultClass="java.lang.String">
			SELECT ULD_KEY 
			FROM IMP_RAMP_CHK_DTL
			WHERE CHKIN_YN = 'Y' AND TO_CHAR (FLT_DATE, 'DDMONYY') = #fltDate# AND	FLT_KEY = #fltKey# AND
			DAM_IND = 'Y'
	</select>
	
	<select id="flight_report_getTotalUld" parameterClass="cargo.cms.imprt.bo.FlightReportBO" 
		resultClass="java.lang.Integer">
			SELECT COUNT(ULD_KEY)
			FROM IMP_RAMP_CHK_DTL
			WHERE CHKIN_YN = 'Y' AND TO_CHAR (FLT_DATE, 'DDMONYY') = #fltDate# AND FLT_KEY = #fltKey#
	</select>
	
	<select id="flight_report_getTotalLoadedUld" parameterClass="cargo.cms.imprt.bo.FlightReportBO" resultClass="cargo.cms.imprt.bo.UldAllotBO">
		select count(1)  count, ULD_Allot as uld
		from IMP_RAMP_CHK_DTL r
		join ULD_Group_Type gt on gt.ULD_TYPE = r.ULD_TYPE
		join MAST_ULD_ALLOT_GROUP ag on ag.ULD_GROUP = gt.ULD_GROUP
		where r.EMPTY_IND = 'N' AND r.CHKIN_YN = 'Y' AND r.FLT_KEY = #fltKey# and TO_CHAR(r.FLT_DATE, 'DDMONYY') = #fltDate#
		group by ag.ULD_Allot
	</select>
	
	<!--  Changed for QR -->		
	<select id="flight_report_getNoOfLoadedUlds" parameterClass="cargo.cms.imprt.bo.FlightReportBO" resultClass="java.lang.String">
		SELECT STRAGG(STRINGDELIM(COUNT(ALLOTGROUP_2.ULD_ALLOT)  || ''  || ALLOTGROUP_2.ULD_ALLOT, ',')) AS noOfLoadedUlds
    	from IMP_RAMP_CHK_DTL RAMPCHK
    	JOIN MAST_ULD_TYPE MULD ON MULD.CODE = RAMPCHK.ULD_TYPE
   		LEFT JOIN ULD_GROUP_TYPE ULDGROUP_2 ON ULDGROUP_2.ULD_TYPE = RAMPCHK.ULD_TYPE
   		LEFT JOIN MAST_ULD_ALLOT_GROUP ALLOTGROUP_2 ON ALLOTGROUP_2.ULD_GROUP = ULDGROUP_2.ULD_GROUP
    	where to_char(RAMPCHK.FLT_DATE,'DDMONYY')= TO_DATE(#fltDate#,'DDMONYY')
    	AND RAMPCHK.FLT_KEY = #fltKey# AND RAMPCHK.EMPTY_IND = 'N'
    	AND MULD.H_CONT_IND = 'N' AND DUMMY_H_CONT_IND = 'N' AND MULD.BT_IND = 'N' GROUP BY ALLOTGROUP_2.ULD_ALLOT
	</select>
	
	<!--  Changed for QR -->	
	<select id="flight_report_getNoOfBulkCargo" parameterClass="cargo.cms.imprt.bo.FlightReportBO" resultClass="java.lang.String">
		SELECT
		DECODE(count(1),0,'',count(1)||'BULK') AS anoOfBulkCargo
		from IMP_RAMP_CHK_DTL RAMPCHK
     	JOIN MAST_ULD_TYPE MULD ON MULD.CODE = RAMPCHK.ULD_TYPE
     	LEFT JOIN ULD_GROUP_TYPE ULDGROUP_2 ON ULDGROUP_2.ULD_TYPE = RAMPCHK.ULD_TYPE
     	LEFT JOIN MAST_ULD_ALLOT_GROUP ALLOTGROUP_2 ON ALLOTGROUP_2.ULD_GROUP = ULDGROUP_2.ULD_GROUP
     	where to_char(RAMPCHK.FLT_DATE,'DDMONYY')= TO_DATE(#fltDate#,'DDMONYY')
     	AND RAMPCHK.FLT_KEY = #fltKey#  
     	and (MULD.H_CONT_IND = 'Y'  OR DUMMY_H_CONT_IND = 'Y' OR MULD.BT_IND = 'Y' )
	</select>
	
	<!--  Changed for QR -->
	<select id="flight_report_getNoOfEmptyUld" parameterClass="cargo.cms.imprt.bo.FlightReportBO" resultClass="java.lang.String">
		SELECT STRAGG(STRINGDELIM(COUNT(ALLOTGROUP_2.ULD_ALLOT)  || ''  || ALLOTGROUP_2.ULD_ALLOT, ',')) AS noOfLoadedUlds
    	from IMP_RAMP_CHK_DTL RAMPCHK
    	JOIN MAST_ULD_TYPE MULD ON MULD.CODE = RAMPCHK.ULD_TYPE
   		LEFT JOIN ULD_GROUP_TYPE ULDGROUP_2 ON ULDGROUP_2.ULD_TYPE = RAMPCHK.ULD_TYPE
   		LEFT JOIN MAST_ULD_ALLOT_GROUP ALLOTGROUP_2 ON ALLOTGROUP_2.ULD_GROUP = ULDGROUP_2.ULD_GROUP
    	where to_char(RAMPCHK.FLT_DATE,'DDMONYY')= TO_DATE(#fltDate#,'DDMONYY')
    	AND RAMPCHK.FLT_KEY = #fltKey# AND RAMPCHK.EMPTY_IND = 'Y'
    	AND MULD.H_CONT_IND = 'N' AND DUMMY_H_CONT_IND = 'N' AND MULD.BT_IND = 'N' GROUP BY ALLOTGROUP_2.ULD_ALLOT
	</select>
	
	
	
	<select id="flight_report_getTotalEmptyUldReceived" parameterClass="cargo.cms.imprt.bo.FlightReportBO" 
		resultClass="cargo.cms.imprt.bo.UldAllotBO">
		select count(1)  count, ULD_Allot as uld
		from IMP_RAMP_CHK_DTL r
		join ULD_Group_Type gt on gt.ULD_TYPE = r.ULD_TYPE
		join MAST_ULD_ALLOT_GROUP ag on ag.ULD_GROUP = gt.ULD_GROUP
		where r.EMPTY_IND = 'Y' AND r.CHKIN_YN = 'Y' AND r.FLT_KEY = #fltKey# and TO_CHAR(r.FLT_DATE, 'DDMONYY') = 
		#fltDate#
		group by ag.ULD_Allot
	</select>
	
	<parameterMap id="fltMapTimeStamp" class="map" >
		<parameter property="CODE" jdbcType="VARCHAR" javaType="java.lang.String"	mode="IN"/>
		<parameter property="FLTKEY" jdbcType="VARCHAR" javaType="java.lang.String"	mode="IN"/>
		<parameter property="FLTDATE" jdbcType="VARCHAR" javaType="java.lang.String"	mode="IN"/>
		<parameter property="TIMESTAMP1" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>	
	</parameterMap>
	<procedure id="imp_prc_time_stamp" parameterMap="fltMapTimeStamp" >
		{ call PRC_TIME_STAMP(?,?,?,?)}
	</procedure>
	
	<select id="imp_TimeStamp12"  parameterClass="java.lang.String"  resultClass="cargo.cms.imprt.bo.TimestampFRBO">
		SELECT TIME_STAMP1 timeStampOne , TIME_STAMP2 timeStampTwo, STD_OPR stdOpr, STD  std
		FROM MAST_SVC_STD WHERE ITM_NAME = #param#
	</select>
	
	<select id="srvTime" parameterClass="map" resultClass="java.lang.Double">
		SELECT (TO_DATE(#timeTwo#,'DDMONYY HH24:MI:SS')  - TO_DATE(#timeOne#,'DDMONYY HH24:MI:SS'))*1440  FROM DUAL		
	</select>
	
	<select id="flight_report_gettrnoforflightreport" parameterClass="java.lang.String" resultClass="java.lang.String">
			SELECT IMP_FLT_HAND_SEQ.NEXTVAL FROM DUAL
	</select>	
	
	<!--  Changed for QR
	<select id="flight_report_getBulkCargoUnitReceived" parameterClass="cargo.cms.imprt.bo.FlightReportBO" 
		resultClass="java.lang.String">
		<![CDATA[
			select count(1)||' BT'  count
			from IMP_RAMP_CHK_DTL r
			where LENGTH(R.ULD_KEY) < 9 AND r.CHKIN_YN = 'Y' AND r.FLT_KEY = #fltKey# and TO_CHAR(r.FLT_DATE, 'DDMONYY') 
			= #fltDate#
		]]>
	</select> -->
	
	<select id="get_flight_count" parameterClass="cargo.cms.imprt.bo.FltHandSummaryBO" resultClass="java.lang.String">
		select COUNT(1) from IMP_FLT_HAND_SUMMARY where  FLT_KEY = #fltKey# AND TO_CHAR(FLT_DATE,'DDMONYY') = #fltDate# AND REP_MODULE = 'IR'
	</select>
 
	<insert id="flight_report_insertFltHandlingSummary" parameterClass="cargo.cms.imprt.bo.FltHandSummaryBO">
		INSERT INTO IMP_FLT_HAND_SUMMARY (
		   	TR_NO, REP_MODULE, CARR_CODE, 
		   	FLT_NO, FLT_DATE, FLT_KEY, FLT_ATA, 
		   	NO_OF_LOADED_ULDS, NO_OF_BULK_CARGO, NO_OF_EMPTY_ULD,
		   	IRR_ULD, IRR_ULD_RMK, SVC_STD_RMK,  
			CR_USER_ID, CR_DATE,  
			LM_USER_ID, LM_DATE,AWB_LOCAL,AWB_TRAN,AWB_MAIL,DAMAGEULD, TOTALULD, DAMAGEULDLIST, IMAGE) 
		VALUES (#trNo#, #repModule#, #carrCode#,
				#fltNo#, to_date(#fltDate#,'DDMONYY'), #fltKey#, #fltAta#,
				#noOfLoadedUlds#, #noOfBulkCargo#, #noOfEmptyUld#,
				#irrUld#, #irrUldRmk#, #svcStdRmk#, 
				#userID#, SYSDATE, 
				#userID#, SYSDATE,#awbLocal#,#awbTran#,#awbMail#,#damageUldSize#, #totalUld#, #damageUldList#, #transactionId#
		 )
	</insert>
	
	<insert id="flight_report_insertimpflthandperformance" parameterClass="cargo.cms.imprt.bo.PerformanceFRBO">
	INSERT INTO IMP_FLT_HAND_PERFORMANCE (
	   TR_NO, DOC_LINE_NO, PERF_NAME, 
	   REP_MODULE, FLT_NO, FLT_DATE, 
	   CARR_CODE, FLT_KEY, RMK) 
	VALUES ( #trNo#, #docLineNo#, #performanceName#,
	    #reptType#, #fltNo#, to_date(#fltDate#,'DDMONYY'),
	    #carrCode#, #fltKey#, #remarks#)
	</insert>
	
	<insert id="flight_report_insertimpflthandtimestamp" parameterClass="cargo.cms.imprt.bo.TimestampFRBO">
	INSERT INTO IMP_FLT_HAND_TIME_STAMP (
	   TR_NO, CARR_CODE, FLT_NO, 
	   FLT_DATE, FLT_KEY, TSTAMP_CODE, 
	   TSTAMP_DATE, TSTAMP_TIME, CR_USER_ID, 
	   CR_DATE, LM_USER_ID, LM_DATE,DOC_LINE_NO) 
	VALUES ( #trNo#, #carrCode#, #fltNo#,
	    to_date(#fltDate#,'DDMONYY'), #fltKey#, #itemCode#,
	    NVL(to_date(#actionedTime#,'DDMONYY HH24:MI:SS'),''), #actionedTimeHour#||#actionedTimeMinute#, #userID#,
	    SYSDATE, #userID#, SYSDATE,#docLineNo#)	
	</insert>	
	
	<insert id="flight_report_insertimpflthandsvcstd" parameterClass="cargo.cms.imprt.bo.ServiceStandardFRBO">
	INSERT INTO IMP_FLT_HAND_SVC_STD (
	   TR_NO, DOC_LINE_NO, ITM_NAME, 
	   REP_MODULE, FLT_NO, FLT_DATE, 
	   CARR_CODE, FLT_KEY, SVC_TIME, 
	   STD_MET_YN) 
	VALUES ( #trNo#, #docLineNo#, #itemName#,
	    #reptType#, #fltNo#, to_date(#fltDate#,'DDMONYY'),
	    #carrCode#, #fltKey#, #serviceTime#, 
		#stdMet#
		)
	</insert>	
	
	<update id="flight_report_updateFltHandlingSummary" parameterClass="cargo.cms.imprt.bo.FltHandSummaryBO">
		UPDATE IMP_FLT_HAND_SUMMARY
		SET
			NO_OF_LOADED_ULDS = #noOfLoadedUlds#,
			NO_OF_BULK_CARGO = #noOfBulkCargo#,
			NO_OF_EMPTY_ULD = #noOfEmptyUld#,
			IRR_ULD = #irrUld#,
			IRR_ULD_RMK = #irrUldRmk#, 
			SVC_STD_RMK = #svcStdRmk#,
			LM_USER_ID = #userID#, 
			LM_DATE = sysdate,
			AWB_LOCAL = #awbLocal#,
			AWB_TRAN = #awbTran#,
			AWB_MAIL = #awbMail#,
			DAMAGEULD = #damageUldSize#, 
			TOTALULD = #totalUld#, 
			DAMAGEULDLIST = #damageUldList#,
			IMAGE = #transactionId#
		WHERE
			TR_NO = #trNo# AND TO_CHAR(LM_DATE, 'DDMONYY HH24:MI:SS') = #lmDate#
	</update>
	
	<delete id="flight_report_deleteReal" parameterClass="map" >
		DELETE IMP_FLT_HAND_SUMMARY_DOC WHERE TR_NO = #trNo#
	</delete>
	
	<delete id="flight_report_deleteTemp" parameterClass="map" >
		DELETE IMP_FLT_HAND_SUMMARY_DOC_TMP WHERE TR_NO = #randomTr#
	</delete>
	
	<insert id="flight_report_copyToReal" parameterClass="map">
		INSERT INTO IMP_FLT_HAND_SUMMARY_DOC
		(TR_NO, DOC_LINE_NO, ATT_PATH, DOC_NAME, DOC_IMAGE)
		SELECT #trNo# as TR_NO, DOC_LINE_NO, ATT_PATH, DOC_NAME, DOC_IMAGE
		FROM IMP_FLT_HAND_SUMMARY_DOC_TMP
		WHERE TR_NO = #randomTr#
	</insert>
	
	<delete id="flight_report_deleteimpflthandperformance" parameterClass="cargo.cms.imprt.bo.FlightReportBO">	
		DELETE IMP_FLT_HAND_PERFORMANCE WHERE TR_NO = #reptTrNo#
	</delete>
	
	<delete id="flight_report_deletesplhandshp" parameterClass="cargo.cms.imprt.bo.FlightReportBO">	
		DELETE IMP_FLT_HAND_WH_SPL_INFO WHERE TR_NO = #reptTrNo#
	</delete>	
	<delete id="flight_report_deleteimpflthandtimestamp" parameterClass="cargo.cms.imprt.bo.FlightReportBO">	
		DELETE IMP_FLT_HAND_TIME_STAMP WHERE TR_NO = #reptTrNo#
	</delete>
	<delete id="flight_report_deleteimpflthandsvcstd" parameterClass="cargo.cms.imprt.bo.FlightReportBO">	
		DELETE IMP_FLT_HAND_SVC_STD WHERE TR_NO = #reptTrNo#
	</delete>
	<delete id="flight_report_deleteimpflthanddocoffinfo" parameterClass="cargo.cms.imprt.bo.FlightReportBO">	
		DELETE IMP_FLT_HAND_DOC_OFFINFO WHERE TR_NO = #reptTrNo#
	</delete>
	<delete id="flight_report_deleteLoadInfo" parameterClass="cargo.cms.imprt.bo.FlightReportBO">	
		DELETE IMP_FLT_HAND_LOAD_INFO WHERE TR_NO = #reptTrNo#
	</delete>
	<delete id="flight_report_deleteDocumentInfo" parameterClass="cargo.cms.imprt.bo.FlightReportBO">	
		DELETE IMP_FLT_HAND_SUMMARY_DOC WHERE TR_NO = #reptTrNo#
	</delete>
	<delete id="flight_report_deleteDiscrepencyInfo" parameterClass="cargo.cms.imprt.bo.FlightReportBO">	
		DELETE IMP_FLT_HAND_DOC_DISC WHERE TR_NO = #reptTrNo#
	</delete>
	
	<delete id="flight_report_deleteimpflthandsummary" parameterClass="cargo.cms.imprt.bo.FlightReportBO">	
		DELETE IMP_FLT_HAND_SUMMARY WHERE TR_NO = #reptTrNo#
	</delete>		
	
	<select id="imp_getschdatetime"  parameterClass="cargo.cms.imprt.bo.CheckListBO"  resultClass="cargo.cms.imprt.bo.CheckListBO">
		 SELECT TO_CHAR(SCH_DATE,'DDMONYY') schDate,ltrim(SUBSTR(TRIM(TO_CHAR(SCH_TIME,'0000')),0,2)|| ':'|| SUBSTR(TRIM(TO_CHAR(SCH_TIME,'0000')),3,4), ':') as schTime
	     from FLT_OPR
	     WHERE FLT_NO = #flightNo#
		 AND CARR_CODE   = upper(#carrierCode#)
	     AND SCH_DATE = TO_DATE(#flightDate#,'DDMONYY')
	     AND FLT_TYPE='A'
     </select>
<!-- ImportRampModule_HLD_IMP_RAMP_FltHandlingRpt [Query's Ended by Srinivas] -->


<!-- Amend Tow Order Starts Here [Ranjith] -->
<!--  Changed for QR -->
<select id="sqlTowDetails" parameterClass="cargo.cms.imprt.bo.MaintainTowOrderBO" resultClass="cargo.cms.imprt.bo.MaintainTowOrderBO">
	select (SELECT CODE_DESC FROM CUST_COMPANY WHERE code=a.rho_id) rhoIdlist,
	(SELECT EMAIL1 FROM CUST_COMPANY WHERE code=a.rho_id) rhoEmail,
	c.TR_NO txnNo,
	a.to_no towOrderlist,
	a.ver_no verNo,
	a.flt_key fltKeylist,
	decode(a.ack_date,null,'XXX',(TO_CHAR(a.ack_date,'DDMONYY HH24:MI'))) ackDate,
	Decode(a.ack_date,NULL,'N','Y') condCode,
	TO_CHAR(a.flt_date,'DDMONYY') fltDatelist,
	SUBSTR(TRIM(TO_CHAR(NVL(c.sch_time,0),'0000')),0,2)|| ':'|| SUBSTR(TRIM(TO_CHAR(NVL(c.sch_time,0),'0000')),3,4) sta,
	<![CDATA[
	TO_CHAR(DECODE(TO_CHAR(C.EST_TIME),NULL,
  		TO_CHAR(TO_DATE(SUBSTR(TRIM(TO_CHAR(NVL(c.SCH_TIME,0),'0000')),0,2)|| ':'|| SUBSTR(TRIM(TO_CHAR(NVL(c.SCH_TIME,0),'0000')),3,4),'HH24:MI')+ (
				(SELECT TO_NUMBER(s.rule_value)
				FROM CMSRULES s
				WHERE RULE_CODE='TOW_CUT_OFF_TIME'
				) / (24 * 60)),'HH24:MI'),
  			TO_CHAR(TO_DATE(SUBSTR(TRIM(TO_CHAR(NVL(C.est_time,0),'0000')),0,2)|| ':'|| SUBSTR(TRIM(TO_CHAR(NVL(C.est_time,0),'0000')),3,4), 'HH24:MI') + (
				(SELECT TO_NUMBER(s.rule_value)
				FROM CMSRULES s
				WHERE rule_code='TOW_CUT_OFF_TIME'
				) / (24 * 60)), 'HH24:MI'))) estTime,

	]]>
	pkg_common.get_flt_ata(a.flt_key, a.flt_date,'A','DD') ata,
	c.ACFT_PRK_BAY bay,
	(select count(c.uld_key) from tow_order_in_dtl c where c.to_no=a.to_no) uldCount,
	(select count(c.awb_no) from tow_order_in_dtl c where c.to_no=a.to_no and c.awb_no is Not NUll) awbCount
	from tow_order_in a 
	join flt_opr c on c.flt_key=a.flt_key and c.SCH_DATE=a.FLT_DATE AND C.FLT_TYPE='A'
	join flt_opr_events e on c.flt_key=e.flt_key and c.SCH_DATE=e.SCH_DATE AND e.FLT_TYPE='A'
	<![CDATA[
  	where (e.RAMP_COMPL_YN is null or e.RAMP_COMPL_YN <>'Y')
  	]]>
	AND a.flt_date between to_Date(#arrDate#,'DDMONYY HH24MI') and to_Date(#arrDateTo#,'DDMONYY HH24MI')
	<isNotEmpty property="rhoId">
			AND a.rho_id = #rhoId#
	</isNotEmpty>
		<isNotEmpty property="carrCode">
			AND c.carr_code = #carrCode#
	</isNotEmpty>
		<isNotEmpty property="towOrder">
			AND a.to_no = #towOrder#
	</isNotEmpty>
	<isNotEmpty property="fltKey">
			AND a.flt_key = #fltKey#
	</isNotEmpty>
	<isEmpty property="fltKey">
		<isEmpty property="fltNo">
				<isNotEmpty property="fltCarr">
					AND c.carr_code = #fltCarr#
		</isNotEmpty>
	</isEmpty>
	<isEmpty property="fltCarr">
		<isNotEmpty property="fltNo">
			<![CDATA[
			 AND  c.flt_no = #fltNo#
			]]>
		</isNotEmpty>
	</isEmpty>
	</isEmpty>
	    <dynamic prepend="ORDER BY ">
		           <isNotEmpty property="sortOrder.sortField">
		             $sortOrder.sortField$
		           </isNotEmpty>
		           <isEmpty property="sortOrder.sortField">
		            rhoIdlist
		           </isEmpty>
		 </dynamic>
	</select>

	<!--  Changed for QR -->
	<select id="sqlTowDetailsCOUNT" parameterClass="cargo.cms.imprt.bo.MaintainTowOrderBO" resultClass="java.lang.Integer">
	SELECT 	COUNT(1) as totalRowCount
	from tow_order_in a
	join flt_opr c on c.flt_key=a.flt_key and c.SCH_DATE=a.FLT_DATE AND C.FLT_TYPE='A'
	where a.flt_date between to_Date(#arrDate#,'DDMONYY HH24MI') and to_Date(#arrDateTo#,'DDMONYY HH24MI')
	<isNotEmpty property="rhoId">
			AND a.rho_id = #rhoId#
	</isNotEmpty>
	<isNotEmpty property="carrCode">
		AND c.carr_code = #carrCode#
	</isNotEmpty>
	<isNotEmpty property="towOrder">
		AND a.to_no = #towOrder#
	</isNotEmpty>
	<isNotEmpty property="fltKey">
		AND a.flt_key = #fltKey#
	</isNotEmpty>
	<isEmpty property="fltKey">
		<isEmpty property="fltNo">
			<isNotEmpty property="fltCarr">
				AND c.carr_code = #fltCarr#
			</isNotEmpty>
		</isEmpty>
		<isEmpty property="fltCarr">
			<isNotEmpty property="fltNo">
				<![CDATA[
					AND c.flt_no = #fltNo#
				]]>
			</isNotEmpty>
		</isEmpty>
	</isEmpty>
	
	</select>
	
	<select id="sqlTowDtlList" parameterClass="cargo.cms.imprt.bo.MaintainTowOrderBO" resultClass="cargo.cms.imprt.bo.MaintainTowOrderBO">
	select b.ULD_KEY towUld,
	b.ULD_KEY oldtowUld,
	SUBSTR(b.AWB_NO,1,3)  awbNoPrefix , 
	SUBSTR(b.AWB_NO,4)  awbNoSuffix ,
	b.AWB_NO towAwb,
	b.AWB_NO oldtowAwb,
	b.HO_AREA hoArea,
	b.HO_AREA oldHO,
	b.trf_type tfType,
	a.to_no towOrderlist,
	TRIM((b.CNTG_FLT_KEY)||'/'||to_char(b.CNTG_FLT_DATE,'DDMONYY')) cntgFlt,
	PKG_COMMON.GET_FLT_STA(b.CNTG_FLT_KEY,to_char(b.CNTG_FLT_DATE,'DDMONYY'),'D','HH24:MI') std,
	Decode(D.CHKIN_YN,NULL,'N',D.CHKIN_YN) chkYN,
    FFM.PCS || NVL2(FFM.PCS, '/', '') || DECODE(SUBSTR(FFM.WT, 0, 1), '.', '0' || FFM.WT, FFM.WT)  pcs,
	a.to_no towOrderlist
	from tow_order_in a
	join tow_order_in_dtl b on a.to_no=b.to_no
	left join imp_ramp_chk_dtl d on d.ULD_KEY=b.ULD_KEY and d.FLT_KEY=a.FLT_KEY and d.FLT_DATE=a.FLT_DATE
	left join IMP_CAR_SHP car ON b.AWB_NO = car.AWB_NO AND a.FLT_KEY=car.FLT_KEY AND a.FLT_DATE=car.FLT_DATE
	LEFT OUTER JOIN
	(
		SELECT SUM(SHP.MAN_PCS) PCS, SUM(SHP.MAN_WT) WT, SHP.FLT_KEY, SHP.FLT_DATE, SHP.AWB_NO
		FROM EDI_FFM_MSG FFM
		JOIN EDI_FFM_ULD ULD
		ON FFM.TR_NO = ULD.TR_NO
		JOIN EDI_FFM_SHP SHP
		ON ULD.TR_NO = SHP.TR_NO AND ULD.DOC_LINE_NO = SHP.UDOC_LINE_NO
		WHERE
		FFM.FFM_STATUS = 'P' AND ULD.ULD_KEY IS NULL
		GROUP BY SHP.FLT_KEY, SHP.FLT_DATE, SHP.AWB_NO
	) FFM
	ON CAR.AWB_NO = FFM.AWB_NO AND CAR.FLT_KEY = FFM.FLT_KEY AND CAR.FLT_DATE = FFM.FLT_DATE    
	where a.to_no=#towOrderlist#
	order by chkYN
	</select>
	<select id="sqlHalfSize" parameterClass="java.lang.String" resultClass="java.lang.String">
		select mug.PLT_CNT_SIZE from mast_uld_group mug
		join uld_group_type ugt ON ugt.uld_group= mug.uld_group
	 	where ugt.uld_type=substr(#towUld#,0,3)
	</select>
	<delete id="sqlDeleteTowOrderUld" parameterClass="cargo.cms.imprt.bo.MaintainTowOrderBO" >
		DELETE FROM	TOW_ORDER_IN_DTL WHERE TO_NO = #towOrderlist#  AND 
		<isNotEmpty property="towUld">
		ULD_KEY = #towUld#
		</isNotEmpty>
		<isNotEmpty property="towAwb">
		AWB_NO = #towAwb#
		</isNotEmpty>
	</delete>
	
	<delete id="sqlDeleteTowOrderDtl" parameterClass="cargo.cms.imprt.bo.MaintainTowOrderBO" >
		DELETE FROM	TOW_ORDER_IN_DTL WHERE TO_NO = #towOrderlist# 
		</delete>
	
	<delete id="sqlDeleteTowOrder" parameterClass="cargo.cms.imprt.bo.MaintainTowOrderBO" >
		DELETE FROM	TOW_ORDER_IN WHERE TO_NO = #towOrderlist# 
	</delete>
	<update id="sqlUpdateHOArea" parameterClass="cargo.cms.imprt.bo.MaintainTowOrderBO">
	 UPDATE TOW_ORDER_IN_DTL 	
			SET HO_AREA=#hoArea#,
			LM_DATE= sysdate,
			LM_USER_ID=	#userId#,
			TR_TYPE = #trtype#			
	 WHERE	TO_NO = #towOrderlist#   AND (ULD_KEY = #towUld#  OR AWB_NO=#towAwb#)
	</update>
	
	<update id="updateREJULDLocation" parameterClass="cargo.cms.imprt.bo.ULDCheckInBO">
		UPDATE IMP_RAMP_DOLLY_DTL SET REJECT_IND='Y',
		 REJECT_RMK = #rejectRmk#,
			REJECT_DATE = SYSDATE,
			dam_ind = nvl(#damInd#,'N')
		where 1=1
		<isNotEmpty property="tripNumber">
		AND DOLLY_ID = #tripNumber# 
		</isNotEmpty>
		<isNotEmpty property="flightKey">
		AND FLT_KEY = #flightKey# 
		</isNotEmpty>
		<isNotEmpty property="flightDate">
		AND FLT_DATE = #flightDate# 
		</isNotEmpty>
		AND ULD_KEY = #uldKey#
	</update>
	
	<update id="sqlUpdateTowVersion" parameterClass="cargo.cms.imprt.bo.MaintainTowOrderBO">
		<![CDATA[
	 UPDATE TOW_ORDER_IN
			SET VER_NO=(VER_NO+1), 
			LM_DATE = SYSDATE,
			LM_USER_ID=	#userId#			
	 WHERE	TO_NO = #towOrderlist#  
	 ]]>
	</update>
	
	<select id="getShcForTowUld" parameterClass="cargo.cms.imprt.bo.MaintainTowOrderBO"  resultClass="java.lang.String">
	 SELECT STRAGG(STRINGDELIM(SHC, ',')) AS SHCS FROM V_IMP_FLT_ULD_SHC
		WHERE ULD_KEY = #towUld# AND FLT_KEY = #fltKey# AND FLT_DATE = #fltDate# AND ROWNUM &lt;= 3    
	</select>
	
	<select id="getShcForTowAwb" parameterClass="cargo.cms.imprt.bo.MaintainTowOrderBO"  resultClass="java.lang.String">
	SELECT STRAGG(STRINGDELIM(SHC, ',')) AS SHCS 
          from (select distinct SHC FROM V_IMP_FLT_ULD_SHC
	      WHERE awb_no = #towedAwb# AND FLT_KEY = #fltKey#  AND FLT_DATE = #fltDate#)
                where ROWNUM &lt;= 3   
	</select>
	
	<insert id="sqlinsertTowOrdrUld" parameterClass="cargo.cms.imprt.bo.MaintainTowOrderBO" >
			Insert into TOW_ORDER_IN_DTL 
			(TO_NO,
			ULD_KEY,
			AWB_NO,
			HO_AREA,
			TRNS_GRP,
			SHCS,
			CR_USER_ID,
			CR_DATE,
			LM_USER_ID,
			LM_DATE,
			TR_TYPE
			) 
			values (#towOrderlist#,
					#towUld#,
					#towedAwb#,
					#hoArea#,
					#transferGrp#,
					#amendShcs#,
					#userId#,
					SYSDATE,
					#userId#,
					SYSDATE,
					#trtype#)
	</insert>
	
	<select id="validateTowOrder"	parameterClass="java.lang.String" resultClass="java.lang.Integer">
	select count(1) from TOW_ORDER_IN where TO_NO=#towOrder#
	</select>
	<select id="sqlValidHoArea"	parameterClass="java.lang.String" resultClass="java.lang.String">
	select count(1) from MAST_WH_AREA where WH_AREA=#hoArea#
	</select>
	<select id="sqlCheckExtUld"	parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
	select count(1) from ULD_INVENTORY where ULD_KEY=#uld# AND LOC_CODE is not null
	</select>
	<select id="sqlChkinYN"	parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
	select count(1) from IMP_RAMP_CHK_DTL where ULD_KEY=#uld# and  FLT_KEY=#flt#  and FLT_DATE=#fltDate# and CHKIN_YN='Y'
	</select>
	
	<!-- Changed for QR -->
	<select id="selectCntgFlt"	parameterClass="cargo.cms.imprt.bo.MaintainTowOrderBO" resultClass="java.lang.String">
		select (u.CNTG_FLT_KEY)||'/'||to_char(u.cntg_flt_date,'DDMONYY') 
		from ddt_msg m 
		join ddt_uld u on m.tr_no = u.tr_no  
		where m.flt_key = #sfltKey# and m.flt_date = #sfltDate# and u.uld_key=#towUld# and m.ddt_status='P' 
	</select>

	<select id="sqlGetRHOId" parameterClass="map" resultClass="java.lang.String">
		select rho_id from flt_opr where flt_key = #FLT_KEY# and sch_date = TO_DATE(#FLT_DATE#,'DDMONYY') and flt_type = #FLT_TYPE#
	</select>
	
	<select id="sqlSTACutOffTime" parameterClass="java.lang.String" resultClass="java.lang.String">
		select rule_value from cmsrules where rule_code=#PARAM#
	</select>
	
	<!--  Changed for QR -->
	<select id="sqlExistingTowUld" parameterClass="cargo.cms.imprt.bo.MaintainTowOrderBO" resultClass="java.lang.String">
	select count(1) from TOW_ORDER_IN_DTL where uld_key=#towUld#  and TO_NO =#towOrderlist#
	</select>
	
	<select id="sqlCheckConcurrencyForTowOrder" parameterClass="java.lang.String" resultClass="java.lang.String">
	        	select nvl((Select VER_NO from TOW_ORDER_IN where TO_NO = #towOrderlist#),'0') from  dual
	</select>
	
	<select id="fetchCountTow" parameterClass="java.lang.String" resultClass="java.lang.String">
			select count(awb_no)||'-'||count(uld_key) from tow_order_in_dtl where to_no=#towOrderlist#
	</select>
	<!-- Amend Tow Order ENDS Here [Ranjith] -->
	
	<!--
	==============================================================================================
		START OF START PREPARATION QUERIES
	==============================================================================================
	-->
	<select id="checkEdiFFMMsgRecordExists" parameterClass="cargo.cms.imprt.bo.StartPreparationBO" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM EDI_FFM_MSG WHERE CARR_CODE = #fltCarr# AND FLT_NO = #fltNo# AND FLT_DATE = #fltDate#
	</select>
	<select id="fetchFlightDetails" parameterClass="cargo.cms.imprt.bo.StartPreparationBO" resultClass="cargo.cms.imprt.bo.StartPreparationBO">
		SELECT
		OPR.TR_NO AS flighTxnNo,
    	OPR.ORIG AS flightOrigin,
		OPR.FLT_KEY AS flightKey, TO_CHAR(OPR.SCH_DATE, 'DDMONYY') AS flightDate, 
		NVL(pkg_common.get_flt_ata(OPR.FLT_KEY ,OPR.SCH_DATE,'A'),(SUBSTR(TRIM(TO_CHAR(OPR.SCH_TIME,'0000')),0,2) || ':' || 
		SUBSTR(TRIM(TO_CHAR(OPR.SCH_TIME,'0000')),3,4))) AS flightSchTime
		FROM
		FLT_OPR OPR
		WHERE	
		OPR.FLT_TYPE = 'A' AND 
		OPR.CARR_CODE = #fltCarr# AND
		OPR.FLT_NO = #fltNo# AND
		OPR.SCH_DATE = #fltDate#
	</select>
	<select id="fetchFFMDetails" parameterClass="cargo.cms.imprt.bo.StartPreparationBO" resultClass="cargo.cms.imprt.bo.StartPreparationBO">
		SELECT
			DISTINCT 
			PREP.FLT_KEY AS flightKey, 
	    	TO_CHAR(PREP.FLT_DATE, 'DDMONYY') AS flightDate,
			TO_CHAR(FFM_FRZ_DATE, 'DDMONYY HH24:MI:SS') AS freezeDate,
			FFM_FRZ_USER_ID AS freezeUserId,
			  (SELECT COUNT(MSG_TYPE) FROM 
			    MESSAGE_LOG WHERE MSG_TYPE = 'FFM' 
			    AND FLT_KEY = PREP.FLT_KEY AND
			    FLT_DATE = PREP.FLT_DATE AND MSG_STATUS = 'P') AS messagesInQueue,
			TO_CHAR(PREP.LM_DATE, 'ddMMYY HH24:MI:SS') as lastModifiedDate
		FROM
			START_PREP PREP
		WHERE		
			PREP.FLT_KEY =  #fltCarr# || #fltNo# AND
			PREP.FLT_DATE = #fltDate# AND
			PREP.MSG_TYPE = 'FFM'		 
	</select>
	<select id="fetchCPMDetails" parameterClass="cargo.cms.imprt.bo.StartPreparationBO" resultClass="cargo.cms.imprt.bo.StartPreparationBO">
		SELECT
			DISTINCT 
			PREP.FLT_KEY AS flightKey, 
	    	TO_CHAR(PREP.FLT_DATE, 'DDMONYY') AS flightDate,
			TO_CHAR(CPM_FRZ_DATE, 'DDMONYY HH24:MI:SS') AS freezeDate,
			CPM_FRZ_USER_ID AS freezeUserId,
			  (SELECT COUNT(MSG_TYPE) FROM 
			    MESSAGE_LOG WHERE MSG_TYPE = 'CPM' 
			     AND FLT_KEY = PREP.FLT_KEY AND
			    FLT_DATE = PREP.FLT_DATE AND MSG_STATUS = 'P') AS messagesInQueue,
			TO_CHAR(PREP.LM_DATE, 'ddMMYY HH24:MI:SS') as lastModifiedDate
		FROM
			START_PREP PREP
		WHERE		
			PREP.FLT_KEY =  #fltCarr# || #fltNo# AND
			PREP.FLT_DATE = #fltDate# AND
			PREP.MSG_TYPE = 'CPM'				
	</select>
	<select id="fetchFWBDetails" parameterClass="cargo.cms.imprt.bo.StartPreparationBO" resultClass="cargo.cms.imprt.bo.StartPreparationBO">
		SELECT A.displayAwbNo, A.awbDate,A.awbNo,A.freezeDate,A.freezeUserId,A.lastModifiedDate ,COUNT(MESSAGE_LOG.AWB_NO) AS messagesInQueue FROM(
			SELECT
				(SUBSTR(SHP.AWB_NO, 1, 3) || '-' || SUBSTR(SHP.AWB_NO, 4)) AS displayAwbNo,
				TO_CHAR(SHP.AWB_DATE,'DDMONYY') as awbDate,
				SHP.AWB_NO                       AS awbNo       ,  
	 			TO_CHAR(FWB_FRZ_DATE, 'DDMONYY HH24:MI:SS') AS freezeDate  ,
	 			FWB_FRZ_USER_ID                  AS freezeUserId, 			
	 			TO_CHAR(DTL.LM_DATE, 'ddMMYY HH24:MI:SS') AS lastModifiedDate
	      FROM EDI_FFM_MSG MSG INNER JOIN EDI_FFM_SHP SHP	ON MSG.TR_NO = SHP.TR_NO AND MSG.FFM_STATUS = 'P'
	      LEFT OUTER JOIN START_PREP_DTL DTL ON SHP.AWB_NO    = DTL.AWB_NO AND DTL.MSG_TYPE= 'FWB'		      
			WHERE			
				MSG.CARR_CODE = #fltCarr# AND
				MSG.FLT_NO =  #fltNo# AND
				MSG.FLT_DATE = #fltDate#
			GROUP BY SHP.AWB_NO,SHP.AWB_DATE,FWB_FRZ_DATE,FWB_FRZ_USER_ID,DTL.LM_DATE) A
	    LEFT OUTER JOIN MESSAGE_LOG ON MESSAGE_LOG.AWB_NO = A.awbNo AND MESSAGE_LOG.MSG_TYPE = 'FWB' AND MESSAGE_LOG.MSG_STATUS = 'P'
	    GROUP BY A.displayAwbNo, A.awbDate,A.awbNo,A.freezeDate,A.freezeUserId,A.lastModifiedDate
    	ORDER BY A.displayAwbNo
	</select>
	<select id="fetchFHLDetails" parameterClass="cargo.cms.imprt.bo.StartPreparationBO" resultClass="cargo.cms.imprt.bo.StartPreparationBO">
		 SELECT A.displayAwbNo, A.awbDate,A.awbNo,A.freezeDate,A.freezeUserId,A.lastModifiedDate ,COUNT(MESSAGE_LOG.AWB_NO) AS messagesInQueue FROM(
			SELECT
				(SUBSTR(SHP.AWB_NO, 1, 3) || '-' || SUBSTR(SHP.AWB_NO, 4)) AS displayAwbNo,
				TO_CHAR(SHP.AWB_DATE,'DDMONYY') as awbDate,
				SHP.AWB_NO                       AS awbNo       ,  
	 			TO_CHAR(FHL_FRZ_DATE, 'DDMONYY HH24:MI:SS') AS freezeDate  ,
	 			FHL_FRZ_USER_ID                  AS freezeUserId, 			
	 			TO_CHAR(DTL.LM_DATE, 'ddMMYY HH24:MI:SS') AS lastModifiedDate
	      FROM EDI_FFM_MSG MSG INNER JOIN EDI_FFM_SHP SHP	ON MSG.TR_NO = SHP.TR_NO AND MSG.FFM_STATUS = 'P'
	      LEFT OUTER JOIN START_PREP_DTL DTL ON SHP.AWB_NO    = DTL.AWB_NO AND DTL.MSG_TYPE= 'FHL'		      
			WHERE			
			MSG.CARR_CODE = #fltCarr# AND
			MSG.FLT_NO =  #fltNo# AND
			MSG.FLT_DATE = #fltDate# 
			GROUP BY SHP.AWB_NO,SHP.AWB_DATE,FHL_FRZ_DATE,FHL_FRZ_USER_ID,DTL.LM_DATE) A
	    LEFT OUTER JOIN MESSAGE_LOG ON MESSAGE_LOG.AWB_NO = A.awbNo AND MESSAGE_LOG.MSG_TYPE = 'FHL' AND MESSAGE_LOG.MSG_STATUS = 'P'
	    GROUP BY A.displayAwbNo, A.awbDate,A.awbNo,A.freezeDate,A.freezeUserId,A.lastModifiedDate
    	ORDER BY A.displayAwbNo
	</select>
	<insert id="insertFFMStartPrepHeader" parameterClass="cargo.cms.imprt.bo.StartPreparationBO">
		INSERT INTO START_PREP(
		FLT_KEY,FLT_DATE,FFM_FRZ_DATE,FFM_FRZ_USER_ID,CPM_FRZ_DATE,CPM_FRZ_USER_ID,
		CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE, MSG_TYPE,FFM_FRZ_IND,TR_TYPE)
		VALUES(#flightKey#,TO_DATE(#flightDate#,'DDMONYY'),SYSDATE,#freezeUserId#,null,
		null,#freezeUserId#,SYSDATE,#freezeUserId#,SYSDATE, 'FFM','Y','FFMFR')
	</insert>
	<insert id="insertCPMStartPrepHeader" parameterClass="cargo.cms.imprt.bo.StartPreparationBO">
		INSERT INTO START_PREP(
		FLT_KEY,FLT_DATE,FFM_FRZ_DATE,FFM_FRZ_USER_ID,CPM_FRZ_DATE,CPM_FRZ_USER_ID,
		CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE, MSG_TYPE, CPM_FRZ_IND,TR_TYPE)
		VALUES(#flightKey#,TO_DATE(#flightDate#,'DDMONYY'),null,
		null,SYSDATE,#freezeUserId#,#freezeUserId#,
		SYSDATE,#freezeUserId#,SYSDATE, 'CPM','Y','CPMFR')
	</insert>
	<insert id="insertFHLStartPrepDetail" parameterClass="cargo.cms.imprt.bo.StartPreparationBO">
		INSERT INTO START_PREP_DTL(
		AWB_NO,AWB_DATE,FWB_FRZ_DATE,FWB_FRZ_USER_ID,FHL_FRZ_DATE,
		FHL_FRZ_USER_ID,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE, MSG_TYPE,AUTO_FRZ_YN)
		VALUES(#awbNo#,TO_DATE(#awbDate#,'DDMONYY'),null,
		null,SYSDATE,#freezeUserId#,#freezeUserId#,
		SYSDATE,#freezeUserId#,SYSDATE, 'FHL',#autoFrzMan#)
	</insert>
	<insert id="insertFWBStartPrepDetail" parameterClass="cargo.cms.imprt.bo.StartPreparationBO">
		INSERT INTO START_PREP_DTL(
		AWB_NO,AWB_DATE,FWB_FRZ_DATE,FWB_FRZ_USER_ID,FHL_FRZ_DATE,
		FHL_FRZ_USER_ID,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE, MSG_TYPE)
		VALUES(#awbNo#,TO_DATE(#awbDate#,'DDMONYY'),SYSDATE,#freezeUserId#,null,
		null,#freezeUserId#,SYSDATE,#freezeUserId#,SYSDATE, 'FWB')
	</insert>
	<update id="updateFFMFreezeDetail" parameterClass="cargo.cms.imprt.bo.StartPreparationBO">
		UPDATE START_PREP
		SET FFM_FRZ_DATE = SYSDATE, FFM_FRZ_USER_ID = #freezeUserId#, FFM_FRZ_IND = 'Y',
		LM_DATE = SYSDATE, LM_USER_ID = #freezeUserId#,TR_TYPE='FFMFR'
		WHERE FLT_KEY = #flightKey# AND FLT_DATE = #flightDate# AND
		LM_DATE = TO_DATE(#lastModifiedDate#, 'ddMMYY HH24:MI:SS') AND
		MSG_TYPE = 'FFM'
	</update>
	<update id="updateCPMFreezeDetail" parameterClass="cargo.cms.imprt.bo.StartPreparationBO">
		UPDATE START_PREP
		SET CPM_FRZ_DATE = SYSDATE, CPM_FRZ_USER_ID = #freezeUserId#, CPM_FRZ_IND = 'Y',
		LM_DATE = SYSDATE, LM_USER_ID = #freezeUserId#,TR_TYPE='CPMFR'
		WHERE FLT_KEY = #flightKey# AND FLT_DATE = #flightDate# AND
		LM_DATE = TO_DATE(#lastModifiedDate#, 'ddMMYY HH24:MI:SS') AND
		MSG_TYPE = 'CPM'
	</update>
	<update id="updateFWBFreezeDetail" parameterClass="cargo.cms.imprt.bo.StartPreparationBO">
		UPDATE START_PREP_DTL
		SET FWB_FRZ_DATE = SYSDATE, FWB_FRZ_USER_ID = #freezeUserId#,
		LM_DATE = SYSDATE, LM_USER_ID = #freezeUserId#
		WHERE AWB_NO = #awbNo# AND AWB_DATE = #awbDate# AND
		LM_DATE = TO_DATE(#lastModifiedDate#, 'ddMMYY HH24:MI:SS') AND
		MSG_TYPE = 'FWB'
	</update>
	<update id="updateFHLFreezeDetail" parameterClass="cargo.cms.imprt.bo.StartPreparationBO">
		UPDATE START_PREP_DTL
		SET FHL_FRZ_DATE = SYSDATE, FHL_FRZ_USER_ID = #freezeUserId#,
		LM_DATE = SYSDATE, LM_USER_ID = #freezeUserId#
		WHERE AWB_NO = #awbNo# AND AWB_DATE = #awbDate# AND
		LM_DATE = TO_DATE(#lastModifiedDate#, 'ddMMYY HH24:MI:SS') AND
		MSG_TYPE = 'FHL'
	</update>
	<update id="updateFFMUnfreezeDetail" parameterClass="cargo.cms.imprt.bo.StartPreparationBO">
		UPDATE START_PREP
		SET FFM_FRZ_DATE = null, FFM_FRZ_USER_ID = null, FFM_FRZ_IND = 'N',
		LM_DATE = SYSDATE, LM_USER_ID = #freezeUserId#,TR_TYPE='FFMUF'
		WHERE FLT_KEY = #flightKey# AND FLT_DATE = #flightDate# AND 
		LM_DATE = TO_DATE(#lastModifiedDate#, 'ddMMYY HH24:MI:SS') AND
		MSG_TYPE = 'FFM'
	</update>
	<update id="updateCPMUnfreezeDetail" parameterClass="cargo.cms.imprt.bo.StartPreparationBO">
		UPDATE START_PREP
		SET CPM_FRZ_DATE = null, CPM_FRZ_USER_ID = null,CPM_FRZ_IND = 'N',
		LM_DATE = SYSDATE, LM_USER_ID = #freezeUserId#,TR_TYPE='CPMUF'
		WHERE FLT_KEY = #flightKey# AND FLT_DATE = #flightDate# AND 
		LM_DATE = TO_DATE(#lastModifiedDate#, 'ddMMYY HH24:MI:SS') AND
		MSG_TYPE = 'CPM'
	</update>
	<update id="updateFWBUnfreezeDetail" parameterClass="cargo.cms.imprt.bo.StartPreparationBO">
		UPDATE START_PREP_DTL
		SET FWB_FRZ_DATE = null, FWB_FRZ_USER_ID = null,
		LM_DATE = SYSDATE, LM_USER_ID = #freezeUserId#
		WHERE AWB_NO = #awbNo# AND AWB_DATE = #awbDate# AND 
		LM_DATE = TO_DATE(#lastModifiedDate#, 'ddMMYY HH24:MI:SS') AND
		MSG_TYPE = 'FWB'
	</update>
	<update id="updateFHLUnfreezeDetail" parameterClass="cargo.cms.imprt.bo.StartPreparationBO">
		UPDATE START_PREP_DTL
		SET FHL_FRZ_DATE = null, FHL_FRZ_USER_ID = null,
		LM_DATE = SYSDATE, LM_USER_ID = #freezeUserId#,AUTO_FRZ_YN=DECODE(AUTO_FRZ_YN,NULL,NULL,'Y','N',AUTO_FRZ_YN)
		WHERE AWB_NO = #awbNo# AND AWB_DATE = #awbDate# AND
		LM_DATE = TO_DATE(#lastModifiedDate#, 'ddMMYY HH24:MI:SS') AND
		MSG_TYPE = 'FHL'
	</update>
	<select id="headerExists" parameterClass="cargo.cms.imprt.bo.StartPreparationBO" resultClass="cargo.cms.imprt.bo.StartPreparationBO">
		SELECT TO_CHAR(LM_DATE, 'ddMMYY HH24:MI:SS') AS lastModifiedDate FROM START_PREP WHERE FLT_KEY = #flightKey# AND FLT_DATE = #flightDate# AND MSG_TYPE = #messageType#
	</select>
	<select id="detailsExists" parameterClass="cargo.cms.imprt.bo.StartPreparationBO" resultClass="cargo.cms.imprt.bo.StartPreparationBO">
		SELECT TO_CHAR(LM_DATE, 'ddMMYY HH24:MI:SS') AS lastModifiedDate FROM START_PREP_DTL WHERE AWB_NO = #awbNo# AND AWB_DATE = #awbDate# AND MSG_TYPE = #messageType#
	</select>  	
   	<select id="getSecChkUnldgPt"  parameterClass="map"  resultClass="java.lang.String" >
			 select LDG_POINT from imp_car_shp where flt_key=#IMP_FLT_KEY# and flt_date=#IMP_FLT_DATE# and awb_no=#AWB_NO# and awb_date=#AWB_DATE# AND ROWNUM = 1
   	</select>
   	<!--  Changed for QR -->
	<select id="fetchFHLAWBData" parameterClass="cargo.cms.imprt.bo.StartPreparationBO" resultClass="cargo.cms.imprt.bo.StartPreparationBO">
		SELECT DISTINCT SHP.AWB_NO AS awbNo,PKG_COMMON.GET_AWB_DATE(SHP.AWB_NO,'') AS awbDate 
		FROM EDI_FFM_MSG FFM, EDI_FFM_SHP SHP, FLT_OPR OPR
		WHERE FFM.ffm_status = 'P' and FFM.TR_NO = SHP.TR_NO AND FFM.FLT_KEY = OPR.FLT_KEY AND FFM.FLT_DATE = OPR.SCH_DATE AND OPR.flt_type = 'A' AND
		SYSDATE >  (TO_DATE(TO_CHAR(SCH_DATE,'DDMONYY')||LPAD(SCH_TIME,4,0),'DDMONYYHH24MI') - (SELECT RULE_VALUE FROM CMSRULES WHERE RULE_CODE = 'FHL_FREEZE_HRS')/24)
    	AND FFM.FLT_KEY = #fltCarr# || #fltNo# AND FFM.FLT_DATE = #fltDate#
	</select>
	<select id="fetchSecFFMAWBData" parameterClass="cargo.cms.imprt.bo.StartPreparationBO" resultClass="cargo.cms.imprt.bo.StartPreparationBO">
		SELECT SHP.AWB_NO AS awbNo,PKG_COMMON.GET_AWB_DATE(SHP.AWB_NO,'') AS awbDate, SHP.DEST  AS dest,SUM(SHP.MAN_PCS) AS pcs,SUM(SHP.MAN_WT) AS wt,SHP.BRD_POINT AS ldgPt,shp.org as orig 
		FROM EDI_FFM_MSG FFM, EDI_FFM_SHP SHP, FLT_OPR OPR
		WHERE FFM.ffm_status = 'P' and FFM.TR_NO = SHP.TR_NO AND FFM.FLT_KEY = OPR.FLT_KEY AND FFM.FLT_DATE = OPR.SCH_DATE 
    AND OPR.flt_type = 'A' AND FFM.FLT_KEY = #flightKey# AND FFM.FLT_DATE = #flightDate# GROUP BY SHP.AWB_NO,SHP.AWB_DATE,SHP.DEST,SHP.BRD_POINT,SHP.ORG
	</select>
	<insert id="insFltFWBFreeze" parameterClass="cargo.cms.imprt.bo.StartPreparationBO">
		INSERT INTO START_PREP(FLT_KEY,FLT_DATE,FWB_FRZ_DATE,FWB_FRZ_USER_ID,FWB_FRZ_IND,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE, MSG_TYPE,TR_TYPE)
		VALUES(#flightKey#,TO_DATE(#flightDate#,'DDMONYY'),SYSDATE,#freezeUserId#,'Y',#freezeUserId#,SYSDATE,#freezeUserId#,SYSDATE, 'FWB','FWBFR')
	</insert>	
	<insert id="insFltFHLFreeze" parameterClass="cargo.cms.imprt.bo.StartPreparationBO">
		INSERT INTO START_PREP(FLT_KEY,FLT_DATE,FHL_FRZ_DATE,FHL_FRZ_USER_ID,FHL_FRZ_IND,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE, MSG_TYPE,TR_TYPE)
		VALUES(#flightKey#,TO_DATE(#flightDate#,'DDMONYY'),SYSDATE,#freezeUserId#,'Y',#freezeUserId#,SYSDATE,#freezeUserId#,SYSDATE, 'FHL','FHLFR')
	</insert>
	<update id="updFltFWBFreeze" parameterClass="cargo.cms.imprt.bo.StartPreparationBO">
		UPDATE START_PREP
		SET FWB_FRZ_IND = 'Y', FWB_FRZ_DATE = sysdate, FWB_FRZ_USER_ID = #freezeUserId#,
		LM_DATE = SYSDATE, LM_USER_ID = #freezeUserId#,TR_TYPE='FWBFR'
		WHERE FLT_KEY = #flightKey# AND FLT_DATE = #flightDate# AND 
		MSG_TYPE = 'FWB'
	</update>
	<update id="updFltFHLFreeze" parameterClass="cargo.cms.imprt.bo.StartPreparationBO">
		UPDATE START_PREP
		SET FHL_FRZ_IND = 'Y', FHL_FRZ_DATE = sysdate, FHL_FRZ_USER_ID = #freezeUserId#,
		LM_DATE = SYSDATE, LM_USER_ID = #freezeUserId#,TR_TYPE='FHLFR'
		WHERE FLT_KEY = #flightKey# AND FLT_DATE = #flightDate# AND 
		MSG_TYPE = 'FHL'
	</update>
	<update id="updFltFWBUnFreeze" parameterClass="cargo.cms.imprt.bo.StartPreparationBO">
		UPDATE START_PREP
		SET FWB_FRZ_IND = 'N', FWB_FRZ_DATE = null, FWB_FRZ_USER_ID = null,
		LM_DATE = SYSDATE, LM_USER_ID = #freezeUserId#,TR_TYPE='FWBUF'
		WHERE FLT_KEY = #flightKey# AND FLT_DATE = #flightDate# AND 
		MSG_TYPE = 'FWB'
	</update>
	<update id="updFltFHLUnFreeze" parameterClass="cargo.cms.imprt.bo.StartPreparationBO">
		UPDATE START_PREP
		SET FHL_FRZ_IND = 'N', FHL_FRZ_DATE = null, FHL_FRZ_USER_ID = null,
		LM_DATE = SYSDATE, LM_USER_ID = #freezeUserId#,TR_TYPE='FHLUF'
		WHERE FLT_KEY = #flightKey# AND FLT_DATE = #flightDate# AND 
		MSG_TYPE = 'FHL'
	</update>
	<!--
	==============================================================================================
		END OF START PREPARATION QUERIES
	==============================================================================================
	-->	
	
	
		<!--Queries for Create Inbound OBC CAR   -->

<select id="imp_xom_getMailTagForCreateOBC" parameterClass="map"
		resultClass="cargo.cms.imprt.bo.ImpXomBO">
		SELECT
		 	CATALOG as catalog,
		 	FLT_TYPE as fltType,
		 	FLT_KEY as fltKey,
		 	FLT_DATE as fltDate,
			AWB_NO as awbNo, 
			AWB_DATE as awbDate, 
			TAG_NO as tagNo, 
			LSP_NO as lspNo, 
			ACT_PCS as pcs, 
			ACT_WT as wt,
			ORIG as orig, 
			DEST as dest, 
			LOCN as locn, 
			ULD_KEY as uldKey, 
			DAM_IND as damInd, 
			RMK as rmk, 
			CR_USER_ID as crUserId, 
			CR_DATE as crDate, 
			LM_USER_ID as lmUserId,
			TO_CHAR(LM_DATE, 'DDMONYY HH24:MI') as lmDate,
			BD_ULD_KEY as bdULDKey
		FROM 
			IMP_XPS_OBC_MAIL
		WHERE
			FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
			FLT_KEY = #fltKey# AND
			FLT_TYPE = 'I' AND
			CATALOG = 'IO' AND
			(AWB_NO IS NULL OR TRIM(AWB_NO) = '')
			
	</select>
	
	<select id="imp_get_ata_from_flight"  parameterClass="map"  
		resultClass="java.lang.String">		  			
			SELECT	PKG_COMMON.get_flt_ata(#fltKey#, TO_DATE(#schDate#,'DDMONYY'), 'A', 'DD') AS ATA
		 FROM
		 	FLT_OPR
		 WHERE  		
			FLT_KEY = #fltKey# AND		
			FLT_TYPE = 'A' AND
			SCH_DATE = TO_DATE(#schDate#,'DDMONYY')
	</select>
	
	<select id="imp_xom_getAWBPrefixFromCarrCode" parameterClass="map"
		resultClass="java.lang.String">
		SELECT CODE
		FROM MAST_AWB_PREFIX
		WHERE 
			CARR_CODE = #carrCode# 		AND 
			DEF_YN = 'Y' 			 	AND 
			ROWNUM = 1
	</select>
	
	<select id="imp_xom_validateAWBPrefix"  parameterClass="map"  resultClass="java.lang.Integer">
		SELECT NVL(count(1),0)
		FROM MAST_AWB_PREFIX
		WHERE CODE = #awbPre#
   	</select>
   	
   	<select id="imp_xom_checkAgentCode" parameterClass="map"
		resultClass="java.lang.String">
		SELECT
			CODE 
		FROM 
			CUST_COMPANY
		WHERE 
			AGENT_YN = 'Y' AND 
			CODE_DESC = #agentDesc#
	</select>
	
	<select id="imp_xom_checkConsigneeCode" parameterClass="map"
		resultClass="java.lang.String">
		SELECT
			CODE 
		FROM 
			CUST_COMPANY
		WHERE 
			CONS_YN = 'Y' AND 
			CODE_DESC = #desc#
	</select>
	

	<select id="imp_lspNoValidation"  parameterClass="map" resultClass="java.lang.Integer">
  		select count(1) 
  		from (select awb_no, awb_date from awb_inventory 
  		where lsp_no = #lspNo# and locn_Pcs > 0
		and not (awb_no = #awbNo# and awb_date = TO_DATE(#awbDate#,'DDMONYY'))
		group by awb_no, awb_date) a 
	</select>
	
	
	<select id="checkLSPNormalSHPExists"  parameterClass="map" resultClass="java.lang.Integer">
   	select count(1) 
	from (select awb_no, awb_date from awb_inventory 
	where lsp_no = #lspNo# and locn_Pcs > 0
	and not (awb_no = #awbNo# and awb_date = TO_DATE(#awbDate#,'DDMONYY'))) a 
	JOIN IMP_CAR_AWB car on a.awb_no=car.awb_no and a.awb_date = car.awb_date and car.awb_dest='HKG'
	</select>
	
	<select id="imp_xom_getAWB_Count" parameterClass="map" resultClass="java.lang.Integer">
		select NVL(count(1),0) from  IMP_XPS_OBC_MAIL	
		WHERE
			FLT_KEY = #fltKey# AND
			FLT_TYPE = 'I' AND
			FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
			CATALOG = #catalog# AND
			TAG_NO = #tagNo# and
			AWB_NO is not null
	</select>
	
	<update id="imp_xom_updateAWBForCreateOBC" parameterClass="map">
		UPDATE IMP_XPS_OBC_MAIL	SET
			AWB_NO = #awbNo#,
			AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY'),
			AWB_ORIG = #awbOrig#,
			AWB_DEST = #awbDest#,
			LM_DATE = SYSDATE,
			APPNTD_AGENT = #appntdAgent#,
			ECT_HANDLER = #ectHandler#,
			CNS_CUST_NO = #cnsCustNo#,
			CSGNE_NAME = #cnsCustDesc#,
			LM_USER_ID = #lmUserId#
			WHERE
			FLT_KEY = #fltKey# AND
			FLT_TYPE = 'I' AND
			FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
			CATALOG = 'IO' AND
			TAG_NO = #tagNo# AND
			TO_CHAR(LM_DATE, 'DDMONYY HH24:MI') = #lmDate#
	</update>
	
	<!--  Changed for QR
	<update id="imp_xom_updateImpCarAWBForCreateOBC" parameterClass="cargo.cms.imprt.bo.TransitMailSearchBO">
		UPDATE IMP_CAR_AWB	SET
		SPL_CODE1 = #splCode1#, 
		SPL_CODE2 = #splCode2#, 
		SPL_CODE3 = #splCode3#, 
		SPL_CODE4 = #splCode4#, 
		SPL_CODE5 = #splCode5#, 
		SPL_CODE6 = #splCode6#, 
		SPL_CODE7 = #splCode7#, 
		SPL_CODE8 = #splCode8#,
		SPL_CODE9 = #splCode9# 
		WHERE
			AWB_NO = #awbNo#
	</update> -->
	
	<select id="imp_xom_getAWBInventory_Count" parameterClass="map" resultClass="java.lang.Integer">
		select NVL(count(1),0) from  AWB_INVENTORY	
		WHERE
			AWB_NO = #awbNo# AND
			FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
			FLT_KEY = #fltkey#
	</select>
	
	
	<select id="imp_xom_getAWB_Data" parameterClass="map"
		resultClass="java.lang.String">
		SELECT
			TO_CHAR(AWB_DATE, 'DDMONYY') 			
		FROM 
			IMP_CAR_SHP
		WHERE 
			AWB_NO = #awbNo# AND
			FLT_KEY = #fltKey# AND
			FLT_DATE = TO_DATE(#fltDate#,'DDMONYY')
	</select>
	
	<!--  Changed for QR
	<select id="imp_xom_getAWBInventory_Data" parameterClass="map" resultClass="cargo.cms.imprt.bo.ImpXomBO">
		select 
		LOCN_PCS as totalPcs,    
		LOCN_WT as totalWt
		from  AWB_INVENTORY	
		WHERE
			AWB_NO = #awbNo# AND
			TO_CHAR(AWB_DATE,'DDMONYY') = TO_DATE(#awbDate#)
	</select> -->
	
	<!--  Changed for QR -->
	<select id="imp_xom_getAWBDtl_ImpCarAwb" parameterClass="map" resultClass="cargo.cms.imprt.bo.TransitMailSearchBO">
		SELECT A.CSGNE_NAME AS CSGN,
        A.APPNTD_AGENT AS APPNTDAGENT,
       A.SHPR_NAME AS SHIPPER,
       A.OBC_TYPE AS OBCTYPE,
       A.ECT_HANDLER AS ECTHANDLER,
       A.SPL_CODE1 AS SPLCODE1,
       A.SPL_CODE2 AS SPLCODE2,
       A.SPL_CODE3 AS SPLCODE3,
       A.SPL_CODE4 AS SPLCODE4,
       A.SPL_CODE5 AS SPLCODE5,
       A.SPL_CODE6 AS SPLCODE6,
       A.SPL_CODE7 AS SPLCODE7,
       A.SPL_CODE8 AS SPLCODE8,
       A.SPL_CODE9 AS SPLCODE9,
       nvl((SELECT car_created FROM IMP_CAR_SHP	
       						WHERE AWB_NO = #awbNo# AND FLT_KEY = #fltKey# AND FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') ),'N') AS carCreated 
       FROM IMP_CAR_AWB A
       WHERE A.AWB_NO=#awbNo# and TO_CHAR(A.AWB_DATE,'DDMONYY') = TO_DATE(#awbDate#)
	</select>
	
	<insert id="imp_xom_addAWBToAwbInventory" parameterClass="cargo.cms.imprt.bo.ImpXomBO">
	INSERT INTO AWB_INVENTORY
			(SEQ_NO, AWB_NO,AWB_DATE,CARR_CODE, 
			LOC_CODE,LOCN_PCS,LOCN_WT,STRG_DATE,
			BULK_WT,BUP_WT,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,
			FLT_DATE,FLT_TYPE,FLT_KEY,CATALOG,
			LSP_NO,STRG_RMK,DAM_IND,FLT_NO,ULD_KEY) 
		VALUES 
			(AWB_INV_SEQ.NEXTVAL,#awbNo#,TO_DATE(#awbDate#,'DDMONYY'),#carrCode#,
			#locn#,#totalPcs#,#totalWt#,SYSDATE,
			#totalWt#,'0',#crUserId#,SYSDATE,#lmUserId#,SYSDATE,
			#fltDate#,'I',#fltKey#,#catalog#,
			#lspNo#,#rmk#,#damInd#,#fltNo#,#uldKey#)	
 	</insert>
 	
 	<insert id="imp_xom_addAWBToAwb" parameterClass="map">
	INSERT INTO AWB
			(AWB_NO,AWB_DATE, AWB_TYPE,CAR_YN,MANIFEST_PCS,MANIFEST_WT,
			CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,CATALOG,
			CARR_CODE,ORIG,DEST,AGENT_CODE,SHIPPER_NAME,AGENT_NAME,AWB_RMK,
			SPL_CODE1,SPL_CODE2,SPL_CODE3,SPL_CODE4,SPL_CODE5,SPL_CODE6,SPL_CODE7,SPL_CODE8,SPL_CODE9,TR_TYPE,PCS,WT) 
		VALUES 
			( #awbNo#, TO_DATE(#awbDate#,'DDMONYY'),'I','Y',#totalPcs#,#totalWt#,
			#crUserId#,SYSDATE,#lmUserId#, SYSDATE,#catalog#,
			#carrcode#,#orgn#,#dest#,#agentcode#,#shipperName#,#agentName#,#awbrmk#,
			#spl1#,#spl2#,#spl3#,#spl4#,#spl5#,#spl6#,#spl7#,#spl8#,#spl9#,#trType#,#totalPcs#,#totalWt#)	
 	</insert>
 	
 	<insert id="imp_xom_addAWBToImpCarAwb" parameterClass="map">
	INSERT INTO IMP_CAR_AWB
			(AWB_NO,AWB_DATE, AWB_PRFX,AWB_PCS,AWB_WT,
			BULK_PCS,BULK_WT,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,CSGNE_NAME,APPNTD_AGENT,
			OBC_TYPE,ECT_HANDLER,SHPR_NAME,AWB_ORIGIN,AWB_DEST,CATALOG,
			AWB_RMK,SPL_CODE1,SPL_CODE2,SPL_CODE3,SPL_CODE4,SPL_CODE5,SPL_CODE6,SPL_CODE7,SPL_CODE8,SPL_CODE9,AGENT_CUST_NO,CNS_CUST_NO,TR_TYPE,PPK_TYPE) 
		VALUES 
			( #awbNo#,TO_DATE(#awbDate#,'DDMONYY'),#awbPrfx#,#totalPcs#,#totalWt#,
			#totalPcs#,#totalWt#,#crUserId#, SYSDATE,#lmUserId#, SYSDATE,#csgnName#,#agentName#,
			#obcType#,#ect#,#shipperName#,#orgn#,#dest#,#catalog#,
			#awbrmk#,#spl1#,#spl2#,#spl3#,#spl4#,#spl5#,#spl6#,#spl7#,#spl8#,#spl9#,#agentcode#,#csgnCode#,#TR_TYPE#,'B')	
 	</insert>
 	
 	<!--  Changed for QR -->
 	<insert id="imp_xom_addAWBToImpCarShp" parameterClass="cargo.cms.imprt.bo.ImpXomBO">
		INSERT INTO IMP_CAR_SHP
			(AWB_NO,AWB_DATE,FLT_DATE,FLT_KEY,FLT_TYPE,
			AWB_PRFX,CARR_CODE,MANIFEST_PCS,MANIFEST_WT,BULK_PCS,BULK_WT,
			TR_STATUS,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,LDG_POINT,CAR_CREATED,AGENT_ID,RECD_PCS,RECD_WT,PPK_TYPE) 
		VALUES 
			( #awbNo#,TO_DATE(#awbDate#,'DDMONYY'),#fltDate#,#fltKey#,'I',
			 #awbPre#,#carrCode#,#totalPcs#,#totalWt#,#totalPcs#,
			 #totalWt#,'E',#crUserId#, SYSDATE,#lmUserId#, SYSDATE,#awbOrig#,'Y',#appntdAgent#,#totalPcs#,#totalWt#,'B')
 	</insert>
 	<insert id="imp_xom_insertAWBEvents" parameterClass="cargo.cms.imprt.bo.ImpXomBO">
		<![CDATA[
			INSERT INTO AWB_EVENTS 
			  (AWB_NO, AWB_DATE, FLT_KEY, FLT_DATE,
			  FLT_TYPE, TR_NO, ULD_KEY, PCS, WT, CR_USER_ID, 
			  CR_DATE, LM_USER_ID, LM_DATE ) 
			VALUES  
			  (#awbNo#, TO_DATE(#awbDate#,'DDMONYY') ,  #fltKey#, 
			   TO_DATE(#fltDate#,'DDMONYY'), 'I', AWB_event_SEQ.nextval,
			    #bdULDKey#, nvl(#pcs#,0),nvl(#wt#,0) ,
			   #crUserId#,  SYSDATE, #lmUserId#,  SYSDATE)
		]]>
	</insert>
	
	<update id="imp_xom_updateAWBToAwbInventory" parameterClass="cargo.cms.imprt.bo.ImpXomBO">
		UPDATE AWB_INVENTORY SET
		LM_DATE = SYSDATE,
		LOCN_PCS = #totalPcs#, 
		LOCN_WT = #totalWt#,
		LM_USER_ID = #lmUserId#
		WHERE SEQ_NO = #seqNo# 
		
	</update>
	
	<update id="imp_xom_updateAWBToAwb" parameterClass="map">
		UPDATE AWB SET
		LM_DATE = SYSDATE,
		MANIFEST_PCS = MANIFEST_PCS+#totalPcs#, 
		MANIFEST_WT = MANIFEST_WT+#totalWt# ,
		PCS = PCS+#totalPcs#, 
		WT = WT+#totalWt# ,
		TR_TYPE=#trType#,
		LM_USER_ID = #lmUserId#
		WHERE
		AWB_NO = #awbNo#  AND
		AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
	</update>
	
	<update id="imp_xom_updateAWBToImpCarAwb" parameterClass="map">
		UPDATE IMP_CAR_AWB SET
		LM_DATE = SYSDATE,
		AWB_PCS = AWB_PCS+#totalPcs#, 
		AWB_WT = AWB_WT+#totalWt# ,
		BULK_PCS =  BULK_PCS+#totalPcs#,
		BULK_WT = BULK_WT+#totalWt#,
		LM_USER_ID = #lmUserId#,
		TR_TYPE = #TR_TYPE#
		WHERE
		AWB_NO = #awbNo#  AND
		AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
	</update>
	<update id="imp_xom_updateAWBToImpCarShp" parameterClass="cargo.cms.imprt.bo.ImpXomBO">
		UPDATE IMP_CAR_SHP SET
		LM_DATE = SYSDATE,
		MANIFEST_PCS = MANIFEST_PCS+#totalPcs#, 
		MANIFEST_WT = MANIFEST_WT+#totalWt# ,
		BULK_PCS =  BULK_PCS+#totalPcs#,
		BULK_WT = BULK_WT+#totalWt#,
		RECD_PCS =  RECD_PCS+#totalPcs#,
		RECD_WT = RECD_WT+#totalWt#,
	<!--  AGENT_ID = #appntdAgent#,-->
		LM_USER_ID = #lmUserId# 
		WHERE
		AWB_NO = #awbNo#  AND
		AWB_DATE,'DDMONYY' = TO_DATE(#awbDate#,'DDMONYY')
		AND FLT_KEY = #fltKey#
		AND FLT_DATE = TO_DATE(#fltDate#,'DDMONYY')
	</update>
	
	
	<select id="fetchShipperForAjax" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	 	select code_desc as shipperName from CUST_COMPANY where UPPER(code_desc) like UPPER(#keySearchStr# ||'%') and ROWNUM &lt;= #maxRecFetch# and ACTIVE = 'Y' AND SHPR_YN = 'Y'  ORDER BY code_desc     
	</select>
	
	<!-- Queries for Create Inbound OBC CAR Ends -->

	<!--
	==============================================================================================
		START OF MAINTAIN INBOUND OBC TAG
	==============================================================================================
	-->	
	
	<update id="imp_xom_updateOBCTag" parameterClass="cargo.cms.imprt.bo.ImpXomBO">
		UPDATE IMP_XPS_OBC_MAIL SET 				
			ORIG = #orig#,
			DEST = #dest#, 
			ACT_PCS = #actPcs#, 
			ACT_WT  = #actWt#,          
            EST_PCS= #estPcs#, 
            EST_WT= #estWt#,    
			LOCN = #locn#,	
			TARE_WT	= #tareWt#,	
			LSP_NO = #lspNo#,
			ULD_KEY = #uldKey#,
			DAM_IND = #damInd#,
			RMK = #rmk#,
			LM_USER_ID  = #lmUserId#,	    
			LM_DATE = sysdate 
		 WHERE
			FLT_KEY = #fltKey# AND
			FLT_TYPE = 'I' AND
			TO_CHAR(FLT_DATE,'DDMONYY') = #fltDate# AND
			CATALOG = 'IO' AND
			TAG_NO = #tagNo# AND 
			TO_CHAR(LM_DATE , 'DDMONYY HH24:MI:SS')=#lmDate#
	</update>
	
	
	<update id="imp_xom_updateOBCTagRmk" parameterClass="cargo.cms.imprt.bo.ImpXomBO">
		UPDATE IMP_XPS_OBC_MAIL SET 		
			RMK = #rmk#,
			LM_USER_ID  = #lmUserId#,	    
			LM_DATE = sysdate 
		 WHERE
			FLT_KEY = #fltKey# AND
			FLT_TYPE = 'I' AND
			TO_CHAR(FLT_DATE,'DDMONYY') = #fltDate# AND
			CATALOG = 'IO' AND
			TAG_NO = #tagNo#
	</update>
	
	<update id="imp_xom_updateTransitMailTag" parameterClass="cargo.cms.imprt.bo.ImpXomBO">
		UPDATE IMP_XPS_OBC_MAIL SET 			
			ORIG = #orig#,
			DEST = #dest#, 
			ACT_PCS = #actPcs#, 
			ACT_WT  = #actWt#,          
            EST_PCS= #estPcs#, 
            EST_WT= #estWt#,    
			LOCN = #locn#,
			TARE_WT = #tareWt#,
			LSP_NO = #lspNo#,
			ULD_KEY = #uldKey#,
			DAM_IND = #damInd#,
			RMK = #rmk#,
			LM_USER_ID  = #lmUserId#,	    
			LM_DATE = sysdate 
		 WHERE
			FLT_KEY = #fltKey# AND
			FLT_TYPE = 'I' AND
			TO_CHAR(FLT_DATE,'DDMONYY') = #fltDate# AND
			CATALOG = 'TM' AND
			TAG_NO = #tagNo#
	</update>
	
	<insert id="imp_xom_addTransitMailTag" parameterClass="cargo.cms.imprt.bo.ImpXomBO" >
		INSERT INTO IMP_XPS_OBC_MAIL (
		   CATALOG, FLT_TYPE, FLT_KEY, 
		   FLT_DATE, BD_ULD_KEY, AWB_NO,
		   TAG_NO, LSP_NO, 
		   ORIG, DEST, TARE_WT,
		   ACT_PCS, ACT_WT,             
           EST_PCS, EST_WT,               
		   LOCN, ULD_KEY, 
		   DAM_IND, RMK, CR_USER_ID, 
		   CR_DATE, LM_USER_ID, LM_DATE
		) 
		VALUES ( 
			'TM', 'I', UPPER(#fltKey#),
		    TO_DATE(#fltDate#,'DDMONYY'), #bdULDKey#, UPPER(#awbNo#),
		    UPPER(#tagNo#), UPPER(#lspNo#),
		    UPPER(#orig#), UPPER(#dest#),#tareWt#,
		    #actPcs#,#actWt#,
		    #estPcs#,#estWt#,		    
		    UPPER(#locn#), UPPER(#uldKey#),
		    #damInd#, UPPER(#rmk#), #crUserId#,
		    sysdate, #crUserId#, sysdate 
		)
	</insert>
	
	<insert id="imp_xom_addOBCTag" parameterClass="cargo.cms.imprt.bo.ImpXomBO" >
		INSERT INTO IMP_XPS_OBC_MAIL (
		   CATALOG, FLT_TYPE, FLT_KEY, 
		   FLT_DATE, BD_ULD_KEY, AWB_NO, 
		   TAG_NO, LSP_NO, 
		   ORIG, DEST, TARE_WT,
		   ACT_PCS, ACT_WT,             
           EST_PCS, EST_WT,             	   
		   LOCN, ULD_KEY, ECT_HANDLER,
		   DAM_IND, RMK, CR_USER_ID, 
		   CR_DATE, LM_USER_ID, LM_DATE
		) 
		VALUES ( 
			'IO', 'I', UPPER(#fltKey#),
		    TO_DATE(#fltDate#,'DDMONYY'), #bdULDKey#, UPPER(#awbNo#),
		    UPPER(#tagNo#), UPPER(#lspNo#), 
		    UPPER(#orig#), 'HKG', #tareWt#,
		    #actPcs#,#actWt#,
		    #estPcs#,#estWt#,
			UPPER(#locn#), UPPER(#uldKey#),'CPCT',
		    #damInd#, UPPER(#rmk#), #crUserId#,
		    sysdate, #crUserId#, sysdate 
		)
	</insert>
	
	<select id="getOBCMailFlightDetailsUldInv" parameterClass="cargo.cms.imprt.bo.ImpXomBO" 
		resultClass="cargo.cms.imprt.bo.ImpXomBO">
				select					
				CARR_CODE 										   As carrCode,
				FLT_NO 											   AS fltNo,
			    FLT_KEY                                            AS fltKey,
			    TO_CHAR(FLT_DATE,'DDMONYY')                        AS fltDate,
			    ULD_KEY                                            AS listFormULD,
			    ULD_KEY                                            AS searchFormULD			   	    		   
			    FROM ULD_INVENTORY 			   
			    where LOC_CODE=#locn# AND ULD_KEY=#searchFormULD#		
</select>
	
	<!--  Changed for QR -->
	<insert id="insertAWBStrgDtl_fromOBCMailTag" parameterClass="cargo.cms.imprt.bo.ImpXomBO">
		 INSERT INTO IMP_AWB_STRG_DTL (
		   TR_NO, 	DOC_LINE_NO, 	CARR_CODE, 
		   FLT_DATE, 	FLT_KEY, 	  		  
		   ULD_KEY, 	
		   LOC_CODE, 	STRG_PCS, 	STRG_WT, 
		   LSP_NO, 	DAM_IND, 				
		   TR_TYPE, 	TR_STATUS, 	CR_USER_ID, 
		   CR_DATE, LM_USER_ID, 	LM_DATE, FLT_TYPE, MINI_SHP, BUP_WT, BULK_WT,
			RMK, TAG_NO, INSRT_FROM_IND, CHKIN_ULD_KEY,ULD_NO,ULD_CARR,ULD_TYPE) 
		VALUES (#trNo#, '1', nvl(#carrCode#,#uldCarr#),
		    TO_DATE(#fltDate#,'DDMONYY'), #fltKey#, 	    
		    #uldKey#, 
		    #locn#, NVL(#estPcs#,#actPcs#), NVL(#estWt#,#actWt#),
		    #lspNo#, #damInd#,
			'XP', 'A', #crUserId#,
		    sysdate, #crUserId#, sysdate,'I','N',NVL(#estPcs#,#actPcs#), NVL(#estWt#,#actWt#), 		   
			#rmk#, #tagNo#,'D',#bdULDKey#,#uldNo#,#uldCarr#,#uldType#)		
	</insert>	  	
	
	<select id="imp_xom_flightorigin"  parameterClass="cargo.cms.imprt.bo.ImpXomBO" resultClass="java.lang.String">
		select ORIG  from FLT_OPR WHERE  
			FLT_KEY = #fltKey# AND
			FLT_TYPE = 'A' AND
			TO_CHAR(SCH_DATE,'DDMONYY') = #fltDate#				
   	</select>  	
	
	<select id="imp_xom_validateWarehouseByULD" parameterClass="map"
		resultClass="cargo.cms.imprt.bo.ImpXomBO">
		SELECT
			  ULD_KEY,			 
			  LOC_CODE as locn
		FROM
			  ULD_INVENTORY
		WHERE
			  ULD_KEY = #uldKey#
	</select>
	
	
	<select id="imp_xom_getTransitMailByAWB" parameterClass="map"
		resultClass="cargo.cms.imprt.bo.ImpXomBO">
		SELECT			
		 	CATALOG as catalog,
		 	FLT_TYPE as fltType,
		 	FLT_KEY as fltKey,
		 	TO_CHAR(FLT_DATE,'DDMONYY') as fltDate,
			AWB_NO as awbNo, 
			AWB_DATE as awbDate, 
			TAG_NO as tagNo, 
			LSP_NO as lspNo, 				
			ORIG as orig, 
			DEST as dest, 
			ACT_PCS as actPcs, 
            ACT_WT as actWt,
            EST_PCS as estPcs,
            EST_WT as estWt,				
			LOCN as locn, 
			ULD_KEY uldKey, 
			DAM_IND as damInd, 
			RMK as rmk, 
			CR_USER_ID as crUserId, 
			CR_DATE as crDate, 
			LM_USER_ID as lmUserId,
			LM_DATE as lmDate
		FROM 
			IMP_XPS_OBC_MAIL
		WHERE
			TO_CHAR(FLT_DATE,'DDMONYY') = #fltDate# AND
			FLT_KEY = #fltKey# AND
			FLT_TYPE = 'I' AND
			CATALOG = 'TM' AND
			(AWB_NO IS NULL OR TRIM(AWB_NO) = '' OR AWB_NO = #awbNo#)
		ORDER BY
			awbNo asc
	</select>
	
	<select id="imp_xom_getOBCTagList"  parameterClass="map"  
		resultClass="cargo.cms.imprt.bo.ImpXomBO">
		 SELECT 
		 	CATALOG as catalog,
		 	FLT_TYPE as fltType,
		 	FLT_KEY as fltKey,
		 	TO_CHAR(FLT_DATE,'DDMONYY') as fltDate,
			AWB_NO as awbNo, 
			AWB_DATE as awbDate, 
			TAG_NO as tagNo, 
			BD_ULD_KEY as bdULDKey,
			BD_ULD_KEY as listFormULD,
			TARE_WT as tareWt,
			LSP_NO as lspNo, 				
			ORIG as orig, 
			DEST as dest, 
			ACT_PCS as actPcs, 
            ACT_WT as actWt,
            EST_PCS as estPcs,
            EST_WT as estWt,
			LOCN as locn, 
			ULD_KEY uldKey, 
			DAM_IND as damInd, 
			RMK as rmk, 
			RMK as rmkOld, 
			CR_USER_ID as crUserId, 
			CR_DATE as crDate, 
			LM_USER_ID as lmUserId,
			'update' as recordType,
			TO_CHAR(LM_DATE , 'DDMONYY HH24:MI:SS') AS lmDate		 				
		 FROM IMP_XPS_OBC_MAIL		
		 WHERE  
			FLT_KEY = #fltKey# AND
			FLT_TYPE = 'I' AND
			CATALOG = 'IO' AND 
			<isNotEmpty property="bdULDKey">
				BD_ULD_KEY = #bdULDKey# AND
			</isNotEmpty>		
			TO_CHAR(FLT_DATE,'DDMONYY') = #schDate#
		ORDER BY
			TAG_NO
	</select>
	
	<!--  Changed for QR
	<delete id="imp_xom_deleteTransitMail" parameterClass="map" >
		DELETE IMP_XPS_OBC_MAIL	
		WHERE
			FLT_KEY = #fltKey# AND
			FLT_TYPE = 'I' AND
			FLT_DATE  =#fltDate# AND
			CATALOG = 'TM' AND
			TAG_NO = #tagNo#
	</delete> -->
	
	<delete id="imp_xom_deleteOBC" parameterClass="map" >	
		DELETE IMP_XPS_OBC_MAIL	
		WHERE
			FLT_KEY = #fltKey# AND
			FLT_TYPE = 'I' AND
			TO_CHAR(FLT_DATE,'DDMONYY') = #fltDate# AND
			CATALOG = 'IO' AND
			TAG_NO = #tagNo# AND 
			TO_CHAR(LM_DATE , 'DDMONYY HH24:MI:SS')=#lmDate#
	</delete>
	

	<select id="imp_xom_getOBCTag"  parameterClass="map"  
		resultClass="cargo.cms.imprt.bo.ImpXomBO">		
		 SELECT 
		 	obc.CATALOG as catalog,
		 	obc.FLT_TYPE as fltType,
		 	obc.FLT_KEY as fltKey,		 	
		 	TO_CHAR(obc.FLT_DATE,'DDMONYY')  as fltDate,
			obc.AWB_NO as awbNo, 
			TO_CHAR(obc.AWB_DATE,'DDMONYY') as awbDate, 			
			obc.TAG_NO as tagNo, 
			obc.BD_ULD_KEY as bdULDKey,
			obc.TARE_WT as tareWt,
			obc.LSP_NO as lspNo, 			
			obc.ACT_PCS as actPcs, 
		    obc.ACT_WT as actWt,
		    obc.EST_PCS as estPcs,
		    obc.EST_WT as estWt,	
			obc.ORIG as orig, 
			obc.DEST as dest, 			
			obc.LOCN as locn, 
			obc.ULD_KEY uldKey, 
			obc.DAM_IND as damInd, 
			obc.RMK as rmk, 
			obc.CR_USER_ID as crUserId, 
			obc.CR_DATE as crDate, 
			obc.LM_USER_ID as lmUserId,	     
	      opr.CARR_CODE AS carrCode,
	      opr.FLT_NO AS fltNo,
	      TO_CHAR(obc.LM_DATE , 'DDMONYY HH24:MI:SS') AS lmDate
		 FROM IMP_XPS_OBC_MAIL	obc
		 left join flt_opr opr on opr.flt_key=obc.flt_key and opr.sch_date=obc.flt_date and opr.flt_type='A'		   
		 WHERE  
			obc.FLT_KEY = #fltKey# AND
			obc.FLT_TYPE = 'I' AND
			TO_CHAR(obc.FLT_DATE,'DDMONYY') = #schDate# AND
			obc.CATALOG = 'IO' AND
			obc.TAG_NO = #tagNo#
	</select>
	
	<select id="get_tagcount_forflight_bduld"  parameterClass="cargo.cms.imprt.bo.ImpXomBO" resultClass="java.lang.Integer">
		select count(1) from IMP_XPS_OBC_MAIL WHERE  
			FLT_KEY = #fltKey# AND
			FLT_TYPE = 'I' AND
			TO_CHAR(FLT_DATE,'DDMONYY') = #fltDate# AND
			CATALOG = 'IO' AND
			TAG_NO = #tagNo# AND
			BD_ULD_KEY = #bdULDKey#			
   	</select>
   	
   	<select id="get_tagcount_forflight"  parameterClass="cargo.cms.imprt.bo.ImpXomBO" resultClass="java.lang.Integer">
		select count(1) from IMP_XPS_OBC_MAIL WHERE  
			FLT_KEY = #fltKey# AND
			FLT_TYPE = 'I' AND
			TO_CHAR(FLT_DATE,'DDMONYY') = #fltDate# AND
			CATALOG = 'IO' AND
			TAG_NO = #tagNo#			
   	</select>	
   	
   	
   	<update id="imp_xom_updateOBCTag_pcwt" parameterClass="cargo.cms.imprt.bo.ImpXomBO">
		UPDATE IMP_XPS_OBC_MAIL SET 				
			ACT_PCS = ACT_PCS + #actPcs#, 
			ACT_WT  = ACT_WT + #actWt#,          
            EST_PCS = EST_PCS + #estPcs#, 
            EST_WT = EST_WT + #estWt#,  			
			LM_USER_ID  = #lmUserId#,	    
			LM_DATE = sysdate
		 WHERE
			FLT_KEY = #fltKey# AND
			FLT_TYPE = 'I' AND
			TO_CHAR(FLT_DATE,'DDMONYY') = #fltDate# AND
			CATALOG = 'IO' AND
			TAG_NO = #tagNo#
	</update>
	
	<select id="get_bduld_forflight_tag"  parameterClass="cargo.cms.imprt.bo.ImpXomBO" resultClass="java.lang.String">
		select BD_ULD_KEY  from IMP_XPS_OBC_MAIL WHERE  
			FLT_KEY = #fltKey# AND
			FLT_TYPE = 'I' AND
			TO_CHAR(FLT_DATE,'DDMONYY') = #fltDate# AND
			CATALOG = 'IO' AND
			TAG_NO = #tagNo#			
   	</select>  	   	
   	
    <update id="imp_xom_mtnOBCTagPCWT_updateAWBEvents" parameterClass="cargo.cms.imprt.bo.ImpXomBO">
	   	UPDATE AWB_EVENTS SET
		PCS = #actPcs#,
		WT =#actWt#,
		EVENT_ID = #eventId#,
		EVENT_DESC = (SELECT EVENT_DESC FROM MAST_AWB_EVENTS WHERE EVENT_ID = #eventId#),
		LM_USER_ID =#lmUserId#,
		LM_DATE = SYSDATE
		WHERE
		AWB_NO = #awbNo# AND
		FLT_KEY = #fltKey# AND
		FLT_DATE = TO_DATE(#fltDate#,'DDMONYY')	 AND
		ULD_KEY = #bdULDKey#
	</update>	
	<select id="imp_xom_get_PC_WT" parameterClass="cargo.cms.imprt.bo.ImpXomBO" resultClass="cargo.cms.imprt.bo.ImpXomBO">
		select sum(ACT_PCS) actPcs, sum(ACT_WT) actWt  from IMP_XPS_OBC_MAIL where AWB_NO = #awbNo# AND
		AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') AND
		TO_CHAR(AWB_DATE,'DDMONYY') = TO_DATE(#awbDate#)	AND
		FLT_KEY = #fltKey# AND
		FLT_DATE = TO_DATE(#fltDate#,'DDMONYY')	
	</select>
	<update id="imp_xom_mtnOBCTagPCWT_updateCARSHP" parameterClass="cargo.cms.imprt.bo.ImpXomBO">
	   	UPDATE IMP_CAR_AWB SET
		AWB_PCS = #actPcs#,
		AWB_WT = #actWt#,
		BULK_PCS = #actPcs#,
		BULK_WT = #actWt#,
		LM_USER_ID =#lmUserId#,
		LM_DATE = SYSDATE
		WHERE
		AWB_NO = #awbNo# 	AND		
		AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')	
	</update>	
	
	<update id="imp_xom_mtnOBCTagPCWT_updateCARAWB" parameterClass="cargo.cms.imprt.bo.ImpXomBO">
	   	UPDATE IMP_CAR_SHP SET
		MANIFEST_PCS = #actPcs#,
		MANIFEST_WT =#actWt#,	
		BULK_PCS = #actPcs#,
		BULK_WT = #actWt#,	
		RECD_PCS = #actPcs#,
		RECD_WT = #actWt#,
		LM_USER_ID =#lmUserId#,
		LM_DATE = SYSDATE
		WHERE
		AWB_NO = #awbNo# AND
		AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') AND
		TO_CHAR(AWB_DATE,'DDMONYY') = TO_DATE(#awbDate#)	AND
		FLT_KEY = #fltKey# AND
		FLT_DATE = TO_DATE(#fltDate#,'DDMONYY')		
	</update>	
	
	<update id="imp_xom_mtnOBCTagPCWT_updateAWBINV" parameterClass="cargo.cms.imprt.bo.ImpXomBO">
		UPDATE AWB_INVENTORY SET		
		LOCN_PCS = #actPcs#, 
		LOCN_WT = #actWt#,
		BULK_WT = #actWt#,
		LM_USER_ID = #lmUserId#,
		LM_DATE = SYSDATE 
		WHERE
		AWB_NO = #awbNo# AND		
		AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') 
	</update>
	
	<update id="imp_xom_mtnOBCTagPCWT_updateAWB" parameterClass="cargo.cms.imprt.bo.ImpXomBO">
		UPDATE AWB SET
		LM_DATE = SYSDATE,
		MANIFEST_PCS = #actPcs#, 
		MANIFEST_WT = #actWt# ,
		PCS =#actPcs#,
		WT =#actWt#,
		TR_TYPE=#trType#,
		LM_USER_ID = #lmUserId#		
		WHERE
		AWB_NO = #awbNo# AND		
		AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') 
	</update>

	
	<select id="get_ulddetails_inventory" parameterClass="cargo.cms.imprt.bo.ImpXomBO"
		resultClass="cargo.cms.imprt.bo.ImpXomBO">
		SELECT			
		 	ULD_TYPE as uldType,
		 	ULD_NO as uldNo,
		 	ULD_CARR uldCarr
		FROM 
			ULD_INVENTORY
		WHERE
			ULD_KEY=#bdULDKey#			
	</select>	
	
	<insert id="ins_lspinv_xpsobc_mailtag" parameterClass="cargo.cms.imprt.bo.ImpXomBO">
	INSERT INTO 
		LSP_INVENTORY (LSP_NO,LOC_CODE,STRG_DATE,STATUS,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,REF_TR_NO,REF_TR_TYPE,
		REF_TR_EVENT,REF_TR_DATE,REF_DOC_LINE_NO,LSP_TYPE) 
	VALUES 
		(#lspNo#, #locn#, SYSDATE, 'N', #crUserId#, SYSDATE, #crUserId#, 
		SYSDATE, #trNo#, #trType#, #trEvent#, SYSDATE, #docLineNo#,#lspType#)
	</insert>
	  	
	<!--
	==============================================================================================
		END OF MAINTAIN INBOUND OBC TAG
	==============================================================================================
	-->
	<!--
	==============================================================================================
		START OF INBOUND ULD LIST
	==============================================================================================
	-->
<select id="get_inbound_uldlist" parameterClass="cargo.cms.imprt.bo.InBoundULDListBO" resultClass="cargo.cms.imprt.bo.InBoundULDListBO" >
		Select *
from (select FLT.FLT_KEY as flightKey,
FLT.SCH_DATE flightDate, FLT.FLT_TYPE flightType,
TO_CHAR(FLT.SCH_DATE,'DDMONYY') as arrDate,
PKG_COMMON.get_flt_eta(FLT.FLT_KEY,FLT.SCH_DATE,'A')	AS eta,    
PKG_COMMON.get_flt_ata(FLT.FLT_KEY,FLT.SCH_DATE,'A','DD')AS ata,
DECODE(FLT.SCH_TIME,NULL,'',SUBSTR(TRIM(TO_CHAR(FLT.SCH_TIME, '0000')),0,2)|| ':'||  SUBSTR(TRIM(TO_CHAR(FLT.SCH_TIME, '0000')),3,4)) as sta,
(case when (select COUNT(1) from EDI_FFM_MSG where flt_key = FLT.flt_key and flt_date = FLT.SCH_DATE AND FFM_STATUS ='P') >= 1  then 'Y'  else 'N' end) as ffmInd,
(case when (select COUNT(1) from EDI_RESDIT_HD where flt_key = FLT.flt_key and flt_date = FLT.SCH_DATE ) >= 1  then 'Y'  else 'N' end) as resditInd,
(case when (select COUNT(1) from EDI_CPM where flt_key = FLT.flt_key and flt_date = FLT.SCH_DATE) >= 1  then 'Y'   else 'N' end) as cpmInd,
(case when FLTOPR.ddt_finalise_date is not null then 'Y' else 'N' end) as ddtFinalized,
FLTOPR.INB_ULD_LIST_CONFIRM cfmStatus,
 ( case when
    (SELECT COUNT(1)
  FROM imp_ramp_dolly_hd hd,
    imp_ramp_dolly_dtl dtl,
    IMP_RAMP_CHK_DTL ch
  WHERE hd.ho_no IS NOT NULL
  AND not exists(select 1 from imp_ramp_chk_dtl chk
      where dtl.flt_key=chk.flt_key
      and dtl.flt_date=chk.flt_date
      and dtl.uld_key=chk.uld_key)
  AND hd.flt_key  =dtl.flt_key
  AND hd.dolly_id =dtl.dolly_id
  AND hd.flt_date =dtl.flt_date
  AND FLT.FLT_KEY  =dtl.flt_key
  AND FLT.SCH_DATE =dtl.flt_date
   AND FLT.FLT_KEY  =ch.flt_key
  AND FLT.SCH_DATE =ch.flt_date
  )>0 then 'Y' else 'N' end ) as handoverInd,
FLTOPR.RAMP_COMPL_YN rampComplYN,
FLT.FLT_MODULE1 fltModule,
(case when FLTOPR.WHSE_COMPL_DATE is not null then 'Completed'  
   when (SELECT COUNT(1) FROM IMP_RAMP_CHK_DTL R where r.FLT_KEY = FLT.FLT_KEY AND  r.FLT_DATE = FLT.SCH_DATE and R.BRKDN_START_DATE is not null) >= 1 then 'Started'  
   else '' end) as bdStatus, FLT.CARR_CODE as carrCode
FROM FLT_OPR FLT
JOIN FLT_OPR_EVENTS FLTOPR ON FLT.FLT_KEY = FLTOPR.FLT_KEY AND  FLT.SCH_DATE = FLTOPR.SCH_DATE AND FLT.FLT_TYPE = FLTOPR.FLT_TYPE) flt
WHERE flightDate = #arrDate# and sta between #staTimeFromHr#||':'||#staTimeFromMin# and #staTimeToHr#||':'||#staTimeToMin# 
and (ffmInd = 'Y' or exists (select flt_key from IMP_RAMP_CHK_DTL R where r.FLT_KEY = flightKey AND  r.FLT_DATE = flightDate)
      or exists (select flt_key from IMP_ULD_LIST R where r.FLT_KEY = flightKey AND  r.FLT_DATE = flightDate)
      or exists (select flt_key from EDI_RESDIT_HD R where r.FLT_KEY = flightKey AND  r.FLT_DATE = flightDate))
and flightKey = nvl(#flightKey#,flightKey)
and fltModule = nvl(#fltModule#,fltModule)
and flightType='A' 
<isEmpty property="flightKey">
	<isNotEmpty property="loginCarrier">
		AND	(carrCode = #loginCarrier# OR carrCode IN (SELECT CARR_CODE FROM MAST_CARR_GRP 
		WHERE GRP_CARR_CODE	= #loginCarrier#))							
	</isNotEmpty>
</isEmpty> 
order by sta asc
</select>

<!--  Changed for QR -->
	<select id="get_chkin_inbound_uldlist" parameterClass="cargo.cms.imprt.bo.InBoundULDListBO" resultClass="cargo.cms.imprt.bo.InBoundULDListBO" >
		  select * from (select (COUNT(ALLOTGROUP_2.ULD_ALLOT)  || ''  || ALLOTGROUP_2.ULD_ALLOT) AS checkInULD  ,
          ALLOTGROUP_2.ULD_ALLOT as sortingOrder,
          RAMPCHK.flt_key as flightKey,TO_CHAR(RAMPCHK.flt_date,'DDMONYY') as arrDate 
          from IMP_RAMP_CHK_DTL RAMPCHK
          JOIN MAST_ULD_TYPE MULD ON MULD.CODE = RAMPCHK.ULD_TYPE
          LEFT JOIN ULD_GROUP_TYPE ULDGROUP_2 ON ULDGROUP_2.ULD_TYPE = RAMPCHK.ULD_TYPE
          Left JOIN DDT_MSG MSG on MSG.FLT_KEY = RAMPCHK.FLT_KEY AND MSG.FLT_DATE = RAMPCHK.FLT_DATE AND MSG.DDT_STATUS='P' 
		  LEFT JOIN DDT_ULD ddtuld ON ddtuld.TR_NO = MSG.TR_NO AND ddtuld.ULD_KEY = RAMPCHK.ULD_KEY  
          LEFT JOIN MAST_ULD_ALLOT_GROUP ALLOTGROUP_2 ON ALLOTGROUP_2.ULD_GROUP = ULDGROUP_2.ULD_GROUP
          where  RAMPCHK.flt_date=#arrDate# and RAMPCHK.EMPTY_IND='N' AND MULD.H_CONT_IND &lt;&gt; 'Y' AND MULD.DUMMY_H_CONT_IND &lt;&gt; 'Y'  AND MULD.BT_IND &lt;&gt; 'Y'
          GROUP BY ALLOTGROUP_2.ULD_ALLOT,RAMPCHK.flt_key,RAMPCHK.flt_date,MULD.H_CONT_IND 
          UNION ALL
          select count(1)||'BULK' actualChkinULD,null as sortingOrder,
          RAMPCHK.flt_key flightNo,TO_CHAR(RAMPCHK.flt_date,'DDMONYY') flightDate  
          from IMP_RAMP_CHK_DTL RAMPCHK
          JOIN MAST_ULD_TYPE MULD ON MULD.CODE = RAMPCHK.ULD_TYPE
          LEFT JOIN ULD_GROUP_TYPE ULDGROUP_2 ON ULDGROUP_2.ULD_TYPE = RAMPCHK.ULD_TYPE
          Left JOIN DDT_MSG MSG on MSG.FLT_KEY = RAMPCHK.FLT_KEY AND MSG.FLT_DATE = RAMPCHK.FLT_DATE
          LEFT JOIN DDT_ULD ddtuld ON ddtuld.TR_NO = MSG.TR_NO AND ddtuld.ULD_KEY = RAMPCHK.ULD_KEY  
          LEFT JOIN MAST_ULD_ALLOT_GROUP ALLOTGROUP_2 ON ALLOTGROUP_2.ULD_GROUP = ULDGROUP_2.ULD_GROUP
          where  RAMPCHK.flt_date=#arrDate# and RAMPCHK.EMPTY_IND='N' and (MULD.H_CONT_IND = 'Y' OR MULD.DUMMY_H_CONT_IND = 'Y' OR MULD.BT_IND = 'Y')
          GROUP BY RAMPCHK.flt_key,RAMPCHK.flt_date) I order by I.sortingOrder
	</select>
	
	<!--  Changed for QR -->
	<select id="get_chkin_qt_inbound_uldlist" parameterClass="cargo.cms.imprt.bo.InBoundULDListBO" resultClass="cargo.cms.imprt.bo.InBoundULDListBO" >
		  select * from (select (COUNT(ALLOTGROUP_2.ULD_ALLOT)  || ''  || ALLOTGROUP_2.ULD_ALLOT) AS checkInUldQT  ,
          ALLOTGROUP_2.ULD_ALLOT as sortingOrder,
          RAMPCHK.flt_key as flightKey,TO_CHAR(RAMPCHK.flt_date,'DDMONYY') as arrDate
          from IMP_RAMP_CHK_DTL RAMPCHK
          JOIN MAST_ULD_TYPE MULD ON MULD.CODE = RAMPCHK.ULD_TYPE
          LEFT JOIN ULD_GROUP_TYPE ULDGROUP_2 ON ULDGROUP_2.ULD_TYPE = RAMPCHK.ULD_TYPE
          Left JOIN DDT_MSG MSG on MSG.FLT_KEY = RAMPCHK.FLT_KEY AND MSG.FLT_DATE = RAMPCHK.FLT_DATE AND MSG.DDT_STATUS='P' 
		  LEFT JOIN DDT_ULD ddtuld ON ddtuld.TR_NO = MSG.TR_NO AND ddtuld.ULD_KEY = RAMPCHK.ULD_KEY
          LEFT JOIN MAST_ULD_ALLOT_GROUP ALLOTGROUP_2 ON ALLOTGROUP_2.ULD_GROUP = ULDGROUP_2.ULD_GROUP
          where RAMPCHK.flt_date=#arrDate# and RAMPCHK.EMPTY_IND='N' AND MULD.H_CONT_IND &lt;&gt; 'Y' AND MULD.DUMMY_H_CONT_IND &lt;&gt; 'Y' AND MULD.BT_IND &lt;&gt; 'Y' 
          AND EXISTS (SELECT 1 FROM MAST_WH_LOC LOC JOIN MAST_WH_GROUP GRP ON LOC.WH_GROUP=GRP.WH_GROUP WHERE CODE=RAMPCHK.LOC_CODE AND GRP.WH_TYPE='QT')
          GROUP BY ALLOTGROUP_2.ULD_ALLOT,RAMPCHK.flt_key,RAMPCHK.flt_date,MULD.H_CONT_IND 
          UNION ALL
          select count(1)||'BULK' actualChkinULD,
          null as sortingOrder,RAMPCHK.flt_key flightNo,TO_CHAR(RAMPCHK.flt_date,'DDMONYY') flightDate 
          from IMP_RAMP_CHK_DTL RAMPCHK
          JOIN MAST_ULD_TYPE MULD ON MULD.CODE = RAMPCHK.ULD_TYPE
          LEFT JOIN ULD_GROUP_TYPE ULDGROUP_2 ON ULDGROUP_2.ULD_TYPE = RAMPCHK.ULD_TYPE
          Left JOIN DDT_MSG MSG on MSG.FLT_KEY = RAMPCHK.FLT_KEY AND MSG.FLT_DATE = RAMPCHK.FLT_DATE
          LEFT JOIN DDT_ULD ddtuld ON ddtuld.TR_NO = MSG.TR_NO AND ddtuld.ULD_KEY = RAMPCHK.ULD_KEY
          LEFT JOIN MAST_ULD_ALLOT_GROUP ALLOTGROUP_2 ON ALLOTGROUP_2.ULD_GROUP = ULDGROUP_2.ULD_GROUP
          where RAMPCHK.flt_date=#arrDate# and RAMPCHK.EMPTY_IND='N' and (MULD.H_CONT_IND = 'Y' OR MULD.DUMMY_H_CONT_IND = 'Y' OR MULD.BT_IND = 'Y') 
          AND EXISTS (SELECT 1 FROM MAST_WH_LOC LOC JOIN MAST_WH_GROUP GRP ON LOC.WH_GROUP=GRP.WH_GROUP WHERE CODE=RAMPCHK.LOC_CODE AND GRP.WH_TYPE='QT')
          GROUP BY RAMPCHK.flt_key,RAMPCHK.flt_date ) I
          order by I.sortingOrder
	</select>
	
	<select id="fetch_nestingid_inbULDCnsgnmt" parameterClass="map" resultClass="java.lang.String">
	<![CDATA[
	SELECT B.NESTING_ID
	FROM EDI_RESDIT_AWB_DTL A
	JOIN EDI_RESDIT_TAG_DTL B ON A.TR_AWB_NO = B.TR_AWB_NO
	JOIN EDI_RESDIT_HD C ON C.TR_NO = A.TR_NO
	WHERE c.flt_key = #fltKey#
	and c.flt_date = #fltDate# 
	AND B.CONTAINER_NO = #uldKey#
	AND B.NESTING_ID IS NOT NULL
	AND ROWNUM         = 1
	]]>   
	</select>
	
	
	<!--  Changed for QR -->
        <select id="get_imp_uldlist" parameterClass="cargo.cms.imprt.bo.InBoundULDListBO" resultClass="cargo.cms.imprt.bo.InBoundULDListBO" >
		Select (CASE WHEN uldList.loadType = 'C' THEN 1 ELSE CASE WHEN uldList.loadType = 'Q' THEN 2 ELSE CASE WHEN uldList.loadType = 'M' THEN 3 ELSE 1 END END END) sortList,  
        uldList.* from (
		
			select 	RAMPCHK.flt_key as flightKey,
					TO_CHAR(RAMPCHK.flt_date,'DDMONYY') as arrDate,
					DECODE(RAMPCHK.BRKDN_COMPL_DATE,NULL,DECODE(RAMPCHK.BRKDN_START_DATE,NULL,'Blank','Started'),'Completed') as bdStatus,
	    			RAMPCHK.uld_key as uldKey,	
	    			impuld.manual_hdly_area as manualHdlgArea,
	    			impuld.manual_hdly_area as manualHdlgAreaOld,
	    			RAMPCHK.EIC_IND as eicInd, 
	    			uld.LOC_CODE as locCode,
	    			ddtuld.TRF_TYPE as trfType,
	    			RAMPCHK.DAM_IND as serInd,
	    			(SELECT STRAGG(STRINGDELIM(SHC, ',')) AS shc1 
	    					FROM (SELECT DISTINCT SHC, FLT_KEY, ULD_KEY,FLT_DATE, PRIORITY FROM V_IMP_FLT_ULD_SHC ORDER BY PRIORITY DESC
	      				) WHERE ULD_KEY = RAMPCHK.uld_key AND FLT_KEY = RAMPCHK.flt_key AND FLT_DATE = RAMPCHK.FLT_DATE AND ROWNUM &lt;= 9) shc1,
	    			pkg_imp.fun_get_hdlg_area(RAMPCHK.flt_key,TO_CHAR(RAMPCHK.flt_date,'DDMONYY'),RAMPCHK.uld_key,'SYS') systemHdlgArea,
	    			impuld.wh_rmk as uldWhRmk,
	    			impuld.airl_rmk as uldAirlRmk,
	    			impuld.imx as imx,
	    			impuld.handling_mode as hdlgMode,
	    			impuld.handling_mode as oldHdlgMode,
	    			impuld.wh_rmk as uldWhRmkOld,
	    			impuld.airl_rmk as uldAirlRmkOld,
	    			(select sum(a.MAN_WT) a 
	    									from edi_ffm_shp a, edi_ffm_uld b,edi_ffm_msg c 
	    									where a.tr_no=b.tr_no and a.udoc_line_no= b.doc_line_no 
												and  b.flt_key =#flightKey# and b.flt_date=#arrDate# 
												and b.uld_key=RAMPCHK.uld_key and c.tr_no=a.tr_no and c.ffm_status='P') as wt1,
					(select sum(a.MAN_PCS) a 
											from edi_ffm_shp a,edi_ffm_uld b,edi_ffm_msg c 
											where a.tr_no=b.tr_no and a.udoc_line_no= b.doc_line_no 
												and  b.flt_key =#flightKey# and b.flt_date=#arrDate# 
												and b.uld_key=RAMPCHK.uld_key and c.tr_no=a.tr_no and c.ffm_status='P') as pcs1,
					(case
			      		when (select COUNT(1) from ULD_INVEntory where BASE_PLT = RAMPCHK.uld_key) >= 1
			       		then 'Y'
			       		else 'N'
			       	end) as topPalletYN,
					(case
			      		when (select COUNT(1) 
			      					from edi_ffm_shp a,edi_ffm_uld b where a.dest!='HKG' and a.tr_no=b.tr_no and a.udoc_line_no= b.doc_line_no 
										and b.flt_key =#flightKey# and b.flt_date=#arrDate# and b.uld_key=RAMPCHK.uld_key) >= 1
			       		then 'T'
			       		else 'I'
			       		end) as uldFlow,
			       		   
			       		
          NVL(RAMPCHK.chkin_yn,'N') uldChkStatus,
          NVL(imp.cpm_ind,'N') cpmInd,
          NVL(imp.ffm_ind,'N') ffmInd ,
          NVL(imp.resdit_ind,'N') resditInd ,
          CASE WHEN (NVL(IMP.RESDIT_IND, 'N') = 'Y' OR ( NVL(IMP.CPM_IND, 'N') = 'Y' AND IMP.LOAD_TYPE = 'M')) THEN 'M' ELSE 'C' END oldloadType,
          CASE WHEN (NVL(IMP.RESDIT_IND, 'N') = 'Y' OR ( NVL(IMP.CPM_IND, 'N') = 'Y' AND IMP.LOAD_TYPE = 'M')) THEN 'M' ELSE 
           CASE WHEN (SELECT COUNT(1) FROM edi_ffm_shp A
                    	JOIN edi_ffm_uld b ON B.TR_NO = A.TR_NO
                    	LEFT JOIN AWB AWB ON AWB.AWB_NO=A.AWB_NO AND AWB.AWB_DATE = A.AWB_DATE
                    WHERE A.udoc_line_no= b.doc_line_no
        				  AND b.flt_key     =#flightKey#
        				  AND b.flt_date    =#arrDate#
        				  AND b.uld_key     =RAMPCHK.uld_key
        				  AND (SELECT COUNT(1) FROM CUST_AIRL_SPL_CODE SPLCODE WHERE SPLCODE.SPL_TYPE='SPL_COURIER_SHC' AND SPLCODE.CARR_CODE = AWB.CARR_CODE
              			  AND (SPLCODE.SPL_CODE = AWB.SPL_CODE1 OR SPLCODE.SPL_CODE   = AWB.SPL_CODE2 OR SPLCODE.SPL_CODE   = AWB.SPL_CODE3
              			  OR SPLCODE.SPL_CODE   = AWB.SPL_CODE4 OR SPLCODE.SPL_CODE   = AWB.SPL_CODE5 OR SPLCODE.SPL_CODE   = AWB.SPL_CODE6
              			  OR SPLCODE.SPL_CODE   = AWB.SPL_CODE7 OR SPLCODE.SPL_CODE   = AWB.SPL_CODE8 OR SPLCODE.SPL_CODE   = AWB.SPL_CODE9))>0) > 0 THEN 'Q' ELSE 'C' END
          				END loadType,          
	          ( CASE
	      WHEN (SELECT COUNT(1)
	      FROM imp_ramp_dolly_hd hd,
	      imp_ramp_dolly_dtl dtl,
	      IMP_RAMP_CHK_DTL ch
	      WHERE hd.ho_no  IS NOT NULL
	      AND  NOT EXISTS
          (SELECT 1
          FROM imp_ramp_chk_dtl chk
          WHERE dtl.flt_key=chk.flt_key
          AND dtl.flt_date =chk.flt_date
          AND dtl.uld_key  =chk.uld_key
          )
	      AND hd.flt_key   =dtl.flt_key
	      AND hd.dolly_id  =dtl.dolly_id
	      AND hd.flt_date  =dtl.flt_date
	      AND ch.flt_key  =dtl.flt_key
	      AND ch.flt_date =dtl.flt_date 
	      and dtl.uld_key=RAMPCHK.uld_key
	      AND dtl.flt_key = #flightKey#
	      AND dtl.flt_date =#arrDate#
	       )>0
	      THEN 'YELLOW'
	      ELSE null
	    END ) AS uldInd

    	from IMP_RAMP_CHK_DTL RAMPCHK
		LEFT JOIN IMP_ULD_LIST impuld ON impuld.FLT_KEY = RAMPCHK.FLT_KEY AND impuld.FLT_DATE = RAMPCHK.FLT_DATE AND RAMPCHK.uld_key = impuld.uld_key 
    	LEFT JOIN IMP_RAMP_INB_CHK_DTL imp ON imp.FLT_KEY = RAMPCHK.FLT_KEY AND imp.FLT_DATE = RAMPCHK.FLT_DATE
		AND imp.tr_no = RAMPCHK.tr_no AND  RAMPCHK.uld_key = imp.uld_key 
    	LEFT Join ULD_INVEntory uld on RAMPCHK.uld_key = uld.uld_key
		Left JOIN DDT_MSG MSG on MSG.FLT_KEY = RAMPCHK.FLT_KEY AND MSG.FLT_DATE = RAMPCHK.FLT_DATE AND MSG.DDT_STATUS='P' 
		LEFT JOIN DDT_ULD ddtuld ON ddtuld.TR_NO = MSG.TR_NO AND ddtuld.ULD_KEY = RAMPCHK.ULD_KEY
		where RAMPCHK.flt_date=#arrDate# AND RAMPCHK.flt_key = #flightKey# and RAMPCHK.EMPTY_IND='N' 
		
		UNION
    	
    	select imp.flt_key as flightKey,
    			TO_CHAR(imp.flt_date,'DDMONYY') as arrDate,
				( select DECODE(RAMPCHK1.BRKDN_COMPL_DATE,NULL,DECODE(RAMPCHK1.BRKDN_START_DATE,NULL,'','Started'),'Completed') 
							from IMP_RAMP_CHK_DTL RAMPCHK1,IMP_ULD_LIST impuld1 
							where impuld1.FLT_KEY = RAMPCHK1.FLT_KEY AND impuld1.FLT_DATE = RAMPCHK1.FLT_DATE
    							AND RAMPCHK1.uld_key = impuld1.uld_key AND RAMPCHK1.uld_key = impuld.uld_key
    							AND RAMPCHK1.flt_date=#arrDate# AND RAMPCHK1.flt_key =#flightKey#) as bdStatus,
    			imp.uld_key as uldKey,
    			impuld.manual_hdly_area as manualHdlgArea,
    			impuld.manual_hdly_area as manualHdlgAreaOld,NVL(RAMPCHK.EIC_IND,'N') as eicInd,
    			uld.LOC_CODE as locCode,
    			ddtuld.TRF_TYPE as trfType,imp.DAM_IND as serInd,
    	(SELECT STRAGG(STRINGDELIM(SHC, ',')) AS shc1 
    	FROM (SELECT DISTINCT SHC, FLT_KEY, ULD_KEY,FLT_DATE, PRIORITY FROM V_IMP_FLT_ULD_SHC ORDER BY PRIORITY DESC
      	) WHERE ULD_KEY = impuld.uld_key AND FLT_KEY = impuld.flt_key AND FLT_DATE = impuld.FLT_DATE AND ROWNUM &lt;= 9) shc1,
    	pkg_imp.fun_get_hdlg_area(imp.flt_key,TO_CHAR(imp.flt_date,'DDMONYY'),imp.uld_key,'SYS') systemHdlgArea,
    	impuld.wh_rmk as uldWhRmk,impuld.airl_rmk as uldAirlRmk,impuld.imx as imx,impuld.handling_mode as hdlgMode,impuld.handling_mode as oldHdlgMode,
    	impuld.wh_rmk as uldWhRmkOld,impuld.airl_rmk as uldAirlRmkOld,
    	(select sum(a.MAN_WT) a from edi_ffm_shp a,edi_ffm_uld b,edi_ffm_msg c where a.tr_no=b.tr_no and a.udoc_line_no= b.doc_line_no 
		and  b.flt_key =#flightKey# and b.flt_date=#arrDate# and b.uld_key=imp.uld_key and c.tr_no=a.tr_no and c.ffm_status='P') as wt1,
		(select sum(a.MAN_PCS) a from edi_ffm_shp a,edi_ffm_uld b,edi_ffm_msg c where a.tr_no=b.tr_no and a.udoc_line_no= b.doc_line_no 
		and  b.flt_key =#flightKey# and b.flt_date=#arrDate# and b.uld_key=imp.uld_key and c.tr_no=a.tr_no and c.ffm_status='P') as pcs1,
	(case
		      when (select COUNT(1) from ULD_INVEntory where BASE_PLT = imp.uld_key) >= 1
		       then 'Y'
		       else 'N'
		       end) as topPalletYN,
		       (case
		      when (select COUNT(1) from edi_ffm_shp a,edi_ffm_uld b where a.dest!='HKG' and a.tr_no=b.tr_no and a.udoc_line_no= b.doc_line_no 
		and b.flt_key =#flightKey# and b.flt_date=#arrDate# and b.uld_key=imp.uld_key) >= 1
		       then 'T'
		       else 'I'
		       end) as uldFlow,
		         
		       
          NVL(RAMPCHK.chkin_yn,'N') uldChkStatus,
          NVL(imp.cpm_ind,'N') cpmInd,
          NVL(imp.ffm_ind,'N') ffmInd ,
          NVL(imp.resdit_ind,'N') resditInd ,
          CASE WHEN (NVL(IMP.RESDIT_IND, 'N') = 'Y' OR ( NVL(IMP.CPM_IND, 'N') = 'Y' AND IMP.LOAD_TYPE = 'M')) THEN 'M' ELSE 'C' END oldloadType,
          CASE WHEN (NVL(IMP.RESDIT_IND, 'N') = 'Y' OR ( NVL(IMP.CPM_IND, 'N') = 'Y' AND IMP.LOAD_TYPE = 'M')) THEN 'M' ELSE 
           CASE WHEN (SELECT COUNT(1) FROM edi_ffm_shp A
                    	JOIN edi_ffm_uld b ON B.TR_NO = A.TR_NO
                    	LEFT JOIN AWB AWB ON AWB.AWB_NO=A.AWB_NO AND AWB.AWB_DATE = A.AWB_DATE
                    WHERE A.udoc_line_no= b.doc_line_no
        				  AND b.flt_key     =#flightKey#
        				  AND b.flt_date    =#arrDate#
        				  AND b.uld_key     =imp.uld_key
        				  AND (SELECT COUNT(1) FROM CUST_AIRL_SPL_CODE SPLCODE WHERE SPLCODE.SPL_TYPE='SPL_COURIER_SHC' AND SPLCODE.CARR_CODE = AWB.CARR_CODE
              			  AND (SPLCODE.SPL_CODE = AWB.SPL_CODE1 OR SPLCODE.SPL_CODE   = AWB.SPL_CODE2 OR SPLCODE.SPL_CODE   = AWB.SPL_CODE3
              			  OR SPLCODE.SPL_CODE   = AWB.SPL_CODE4 OR SPLCODE.SPL_CODE   = AWB.SPL_CODE5 OR SPLCODE.SPL_CODE   = AWB.SPL_CODE6
              			  OR SPLCODE.SPL_CODE   = AWB.SPL_CODE7 OR SPLCODE.SPL_CODE   = AWB.SPL_CODE8 OR SPLCODE.SPL_CODE   = AWB.SPL_CODE9))>0) > 0 THEN 'Q' ELSE 'C' END
          				END loadType,
         
                 (
    CASE
      WHEN (SELECT COUNT(1)
        FROM imp_ramp_dolly_hd hd,
          imp_ramp_dolly_dtl dtl
        WHERE hd.ho_no  IS NOT NULL
        AND NOT EXISTS
          (SELECT 1
          FROM imp_ramp_chk_dtl chk
          WHERE dtl.flt_key=chk.flt_key
          AND dtl.flt_date =chk.flt_date
          AND dtl.uld_key  =chk.uld_key
          )
        AND hd.flt_key   =dtl.flt_key
        AND hd.dolly_id  =dtl.dolly_id
        AND hd.flt_date  =dtl.flt_date
    
        AND dtl.uld_key  =imp.uld_key
        AND dtl.flt_key  = #flightKey#
        AND dtl.flt_date =#arrDate#  )>0
      THEN 'YELLOW'
      ELSE NULL
    END ) AS uldInd
    	from IMP_ULD_LIST impuld
		LEFT JOIN IMP_RAMP_CHK_DTL RAMPCHK ON impuld.FLT_KEY = RAMPCHK.FLT_KEY AND impuld.FLT_DATE = RAMPCHK.FLT_DATE AND RAMPCHK.uld_key = impuld.uld_key 
		LEFT JOIN IMP_RAMP_INB_CHK_DTL imp ON impuld.FLT_KEY = imp.FLT_KEY AND impuld.FLT_DATE = imp.FLT_DATE AND imp.uld_key = impuld.uld_key 
		LEFT Join ULD_INVEntory uld on imp.uld_key = uld.uld_key
    	Left JOIN DDT_MSG MSG on MSG.FLT_KEY = impuld.FLT_KEY AND MSG.FLT_DATE = impuld.FLT_DATE AND MSG.DDT_STATUS='P' 
		LEFT JOIN DDT_ULD ddtuld ON ddtuld.TR_NO = MSG.TR_NO AND ddtuld.ULD_KEY = impuld.ULD_KEY
		left join imp_ramp_dolly_hd hd on hd.flt_key=impuld.FLT_KEY and hd.flt_date=impuld.FLT_DATE and hd.ho_no is not null
		left join imp_ramp_dolly_dtl dt on dt.flt_key=hd.FLT_KEY and dt.flt_date=hd.FLT_DATE  and hd.dolly_id=dt.dolly_id and dt.uld_key=impuld.ULD_KEY
		and NOT EXISTS ( SELECT 1 FROM IMP_RAMP_CHK_DTL WHERE flt_date   =dt.FLT_DATE AND flt_key    = dt.FLT_KEY AND uld_key    = dt.uld_key )
		where imp.flt_date=#arrDate# AND imp.flt_key = #flightKey#		
				AND not exists (select null from IMP_RAMP_CHK_DTL where EMPTY_IND='N' AND flt_date=impuld.FLT_DATE AND flt_key = impuld.FLT_KEY and  uld_key = impuld.uld_key )
      			AND not exists (select null from EDI_CPM_DTL cpmdtl where cpmdtl.FLT_KEY = impuld.FLT_KEY AND cpmdtl.FLT_DATE = impuld.FLT_DATE 
                                                                and cpmdtl.uld_key = impuld.uld_key and cpmdtl.load_type='X'   )
		                                              
        UNION
        
  SELECT A.flt_key                                                                                            AS flightKey,
    TO_CHAR(A.flt_date,'DDMONYY')                                                                             AS arrDate,
    DECODE(RAMPCHK.BRKDN_COMPL_DATE,NULL,DECODE(RAMPCHK.BRKDN_START_DATE,NULL,'Blank','Started'),'Completed') AS bdStatus,
    dol.uld_key                                                                                               AS uldKey,
    impuld.manual_hdly_area                                                                                   AS manualHdlgArea,
    impuld.manual_hdly_area                                                                                   AS manualHdlgAreaOld,
    dol.EIC_IND                                                                                               AS eicInd,
    uld.LOC_CODE                                                                                              AS locCode,
    ddtuld.TRF_TYPE                                                                                           AS trfType,
    dol.DAM_IND                                                                                               AS serInd,
    (SELECT STRAGG(STRINGDELIM(SHC, ',')) AS shc1
    FROM
      (SELECT DISTINCT SHC,
        FLT_KEY,
        ULD_KEY,
        FLT_DATE,
        PRIORITY
      FROM V_IMP_FLT_ULD_SHC
      ORDER BY PRIORITY DESC
      )
    WHERE ULD_KEY = dol.uld_key
    AND FLT_KEY   = A.flt_key
    AND FLT_DATE  = A.FLT_DATE
    AND ROWNUM   &lt;= 9
    ) shc1,
    pkg_imp.fun_get_hdlg_area(A.flt_key,TO_CHAR(A.flt_date,'DDMONYY'),dol.uld_key,'SYS') systemHdlgArea,
    impuld.wh_rmk   AS uldWhRmk,
    NULL            AS uldAirlRmk,
    NULL            AS imx,
    NULL            AS hdlgMode,
    NULL            AS oldHdlgMode,
    NULL            AS uldWhRmkOld,
    impuld.airl_rmk AS uldAirlRmkOld,
    (SELECT SUM(a.MAN_WT) a
    FROM edi_ffm_shp a,
      edi_ffm_uld b,
      edi_ffm_msg c
    WHERE a.tr_no     =b.tr_no
    AND a.udoc_line_no= b.doc_line_no
    AND b.flt_key     =#flightKey#
    AND b.flt_date    =#arrDate#
    AND b.uld_key     =dol.uld_key
    AND c.tr_no       =a.tr_no
    AND c.ffm_status  ='P'
    ) AS wt1,
    (SELECT SUM(a.MAN_PCS) a
    FROM edi_ffm_shp a,
      edi_ffm_uld b,
      edi_ffm_msg c
    WHERE a.tr_no     =b.tr_no
    AND a.udoc_line_no= b.doc_line_no
    AND b.flt_key     =#flightKey#
    AND b.flt_date    =#arrDate#
    AND b.uld_key     =dol.uld_key
    AND c.tr_no       =a.tr_no
    AND c.ffm_status  ='P'
    ) AS pcs1,
    (
    CASE
      WHEN (SELECT COUNT(1) FROM ULD_INVEntory WHERE BASE_PLT = RAMPCHK.uld_key) >= 1
      THEN 'Y'
      ELSE 'N'
    END) AS topPalletYN,
    (
    CASE
      WHEN (SELECT COUNT(1)
        FROM edi_ffm_shp a,
          edi_ffm_uld b
        WHERE a.dest!     ='HKG'
        AND a.tr_no       =b.tr_no
        AND a.udoc_line_no= b.doc_line_no
        AND b.flt_key     =#flightKey#
        AND b.flt_date    =#arrDate#
        AND b.uld_key     =dol.uld_key) >= 1
      THEN 'T'
      ELSE 'I'
    END) AS uldFlow,
    'N' uldChkStatus,
    NVL(imp.cpm_ind,'N') cpmInd,
    NVL(imp.ffm_ind,'N') ffmInd ,
    NVL(imp.resdit_ind,'N') resditInd ,
    CASE WHEN (NVL(IMP.RESDIT_IND, 'N') = 'Y' OR ( NVL(IMP.CPM_IND, 'N') = 'Y' AND IMP.LOAD_TYPE = 'M')) THEN 'M' ELSE 'C' END oldloadType,
          CASE WHEN (NVL(IMP.RESDIT_IND, 'N') = 'Y' OR ( NVL(IMP.CPM_IND, 'N') = 'Y' AND IMP.LOAD_TYPE = 'M')) THEN 'M' ELSE 
           CASE WHEN (SELECT COUNT(1) FROM edi_ffm_shp A
                    	JOIN edi_ffm_uld b ON B.TR_NO = A.TR_NO
                    	LEFT JOIN AWB AWB ON AWB.AWB_NO=A.AWB_NO AND AWB.AWB_DATE = A.AWB_DATE
                    WHERE A.udoc_line_no= b.doc_line_no
        				  AND b.flt_key     =#flightKey#
        				  AND b.flt_date    =#arrDate#
        				  AND b.uld_key     =dol.uld_key
        				  AND (SELECT COUNT(1) FROM CUST_AIRL_SPL_CODE SPLCODE WHERE SPLCODE.SPL_TYPE='SPL_COURIER_SHC' AND SPLCODE.CARR_CODE = AWB.CARR_CODE
              			  AND (SPLCODE.SPL_CODE = AWB.SPL_CODE1 OR SPLCODE.SPL_CODE   = AWB.SPL_CODE2 OR SPLCODE.SPL_CODE   = AWB.SPL_CODE3
              			  OR SPLCODE.SPL_CODE   = AWB.SPL_CODE4 OR SPLCODE.SPL_CODE   = AWB.SPL_CODE5 OR SPLCODE.SPL_CODE   = AWB.SPL_CODE6
              			  OR SPLCODE.SPL_CODE   = AWB.SPL_CODE7 OR SPLCODE.SPL_CODE   = AWB.SPL_CODE8 OR SPLCODE.SPL_CODE   = AWB.SPL_CODE9))>0) > 0 THEN 'Q' ELSE 'C' END
          				END loadType,
    (
    CASE
      WHEN (SELECT COUNT(1)
        FROM imp_ramp_dolly_hd hd,
          imp_ramp_dolly_dtl dtl,
          IMP_RAMP_INB_CHK_DTL,
          IMP_RAMP_CHK_DTL ch
        WHERE hd.ho_no  IS NOT NULL
        AND  NOT EXISTS
          (SELECT 1
          FROM imp_ramp_chk_dtl chk
          WHERE dtl.flt_key=chk.flt_key
          AND dtl.flt_date =chk.flt_date
          AND dtl.uld_key  =chk.uld_key
          )
        AND hd.flt_key   =dtl.flt_key
        AND hd.dolly_id  =dtl.dolly_id
        AND hd.flt_date  =dtl.flt_date
        AND ch.flt_key   =dtl.flt_key
        AND ch.flt_date  =dtl.flt_date
        AND dtl.uld_key  =dol.uld_key
        AND dtl.flt_key  = #flightKey#
        AND dtl.flt_date =#arrDate# )>0
      THEN 'YELLOW'
      ELSE NULL
    END ) AS uldInd
  FROM IMP_RAMP_DOLLY_HD A
  LEFT JOIN IMP_RAMP_DOLLY_DTL dol
  ON A.FLT_KEY  =dol.FLT_KEY
  AND A.FLT_DATE=dol.FLT_DATE
  AND A.DOLLY_ID=dol.DOLLY_ID
  LEFT JOIN IMP_RAMP_CHK_DTL RAMPCHK
  ON RAMPCHK.FLT_KEY   =A.FLT_KEY
  AND RAMPCHK.FLT_DATE =A.FLT_DATE
  AND RAMPCHK.CHKIN_YN ='N'
  LEFT JOIN IMP_ULD_LIST impuld
  ON impuld.FLT_KEY   = RAMPCHK.FLT_KEY
  AND impuld.FLT_DATE = RAMPCHK.FLT_DATE
  AND RAMPCHK.uld_key = impuld.uld_key
  LEFT JOIN IMP_RAMP_INB_CHK_DTL imp
  ON imp.FLT_KEY      = RAMPCHK.FLT_KEY
  AND imp.FLT_DATE    = RAMPCHK.FLT_DATE
  AND imp.tr_no       = RAMPCHK.tr_no
  AND RAMPCHK.uld_key = imp.uld_key
  LEFT JOIN DDT_MSG MSG
  ON MSG.FLT_KEY    = RAMPCHK.FLT_KEY
  AND MSG.FLT_DATE  = RAMPCHK.FLT_DATE
  AND MSG.DDT_STATUS='P'
  LEFT JOIN DDT_ULD ddtuld
  ON ddtuld.TR_NO    = MSG.TR_NO
  AND ddtuld.ULD_KEY = RAMPCHK.ULD_KEY
  JOIN FLT_OPR_EVENTS dd
  ON dd.FLT_KEY           = dol.FLT_KEY
  AND dd.SCH_DATE         = dol.FLT_DATE
  AND DD.FLT_TYPE='A'
  AND DD.whse_compl_date IS NULL
  LEFT JOIN ULD_INVEntory uld
  ON dol.uld_key  = uld.uld_key
  WHERE A.flt_date=#arrDate#
  AND A.flt_key   = #flightKey#
  AND NOT EXISTS
    (SELECT 1
    FROM IMP_RAMP_CHK_DTL
    WHERE ULD_KEY=DOL.ULD_KEY
    AND FLT_KEY  =DOL.FLT_KEY
    AND FLT_DATE =DOL.FLT_DATE
    )
  AND NOT EXISTS
    (SELECT 1
    FROM IMP_RAMP_INB_CHK_DTL
    WHERE ULD_KEY=DOL.ULD_KEY
    AND FLT_KEY  =DOL.FLT_KEY
    AND FLT_DATE =DOL.FLT_DATE
    )
  AND A.HO_NO IS NOT NULL  
 	) uldList
		where nvl(uldList.trfType,'*') = nvl(#trfType#,nvl(trfType,'*'))
		
    	<isNotEmpty property="inBoundUldType">
		    <isEqual property="inBoundUldType" compareValue="MAIL">
				AND uldList.loadType ='M'
			</isEqual>
			<isEqual property="inBoundUldType" compareValue="CARGO">
				AND uldList.loadType ='C'
			</isEqual>
			<isEqual property="inBoundUldType" compareValue="COURIER">
				AND uldList.loadType ='Q'
			</isEqual>
		</isNotEmpty>
		<isNotEmpty property="oldBdStatus">
			<isNotEqual property="oldBdStatus" compareValue="Blank">
				and  uldList.bdStatus = #oldBdStatus#
			</isNotEqual>
			<isEqual property="oldBdStatus" compareValue="Blank">
				and  (uldList.bdStatus is null or uldList.bdStatus='Blank')
			</isEqual>
		</isNotEmpty>
		order by sortList,bdStatus, uldKey asc	
	</select>
	
	<!--  Changed for QR -->
	<select id="getSystemHdlgArea" parameterClass="cargo.cms.imprt.bo.InBoundULDListBO" resultClass="java.lang.String">
	select flt_module1 from flt_opr where flt_key=#flightKey# and sch_date=TO_DATE(#arrDate#,'DDMONYY') and flt_type='A' and 
	(select rule_value from cmsrules where rule_code='WOSP_AVAILABLE') = 'N'
	</select>
	<!--<select id="get_imp_uldlist_cpmffm_status" parameterClass="cargo.cms.imprt.bo.InBoundULDListBO" resultClass="cargo.cms.imprt.bo.InBoundULDListBO" >
		select uld_key as uldKey,cpm_ind as cpmInd,ffm_ind as ffmInd,'Y' as uldChkStatus from IMP_RAMP_INB_CHK_DTL where uld_key in (
		select uld_key from IMP_RAMP_CHK_DTL where flt_date=#arrDate# and flt_key=#flightKey# and EMPTY_IND='N')
		union
		select uld_key as uldKey,cpm_ind as cpmInd,ffm_ind as ffmInd,'N' as uldChkStatus from IMP_RAMP_INB_CHK_DTL where flt_date=#arrDate# and flt_key=#flightKey#
		AND uld_key not in (select uld_key from IMP_RAMP_INB_CHK_DTL where uld_key in (
		select uld_key from IMP_RAMP_CHK_DTL where flt_date=#arrDate# and flt_key=#flightKey# and EMPTY_IND='N'))
		UNION 
		select uld_key as uldKey,'N' as cpmInd,'N' as ffmInd,chkin_yn as uldChkStatus from IMP_RAMP_CHK_DTL where flt_date=#arrDate# and flt_key=#flightKey#
		and uld_key not in (
		select uld_key from (
		select uld_key from IMP_RAMP_INB_CHK_DTL where uld_key in (
		select uld_key from IMP_RAMP_CHK_DTL where flt_date=#arrDate# and flt_key=#flightKey# and EMPTY_IND='N')
		union
		select uld_key from IMP_RAMP_INB_CHK_DTL where flt_date=#arrDate# and flt_key=#flightKey#))
	</select>-->
         <select id="get_shipment_list" parameterClass="cargo.cms.imprt.bo.InBoundULDListBO" resultClass="cargo.cms.imprt.bo.InBoundULDListBO" >
		select distinct a.awb_no as awbNo,rtrim(SUBSTR(A.AWB_NO,1,3)||'-'||SUBSTR(A.AWB_NO,4), '-') as awbNoDisp ,TO_CHAR(a.AWB_DATE, 'DDMONYY') as awbDate,
		decode(c.MANIFEST_PCS,a.man_pcs,c.MANIFEST_PCS,a.man_pcs) as awbPcs,decode(c.MANIFEST_WT,a.man_wt,c.MANIFEST_WT,a.man_wt) as awbWt,
		NVL(d.content,a.content) as content,d.spl_code1 as shc1, d.spl_code2 shc2, d.spl_code3 as shc3,
		a.rmk,b.uld_key as uldKey,c.car_created as carCreated,c.imx_rqs as imxRqs, c.dlv_mode_rqs as dlvRqs, d.spl_code4 shc4, d.spl_code5 shc5, d.spl_code6 shc6, d.spl_code7 shc7, d.spl_code8 shc8, d.spl_code9 shc9,
		d.house_flg as houseFlag ,d.wh_Rmk as awbWhRmk,d.airln_rmk as awbAirlRmk,d.wh_Rmk as awbWhRmkOld,d.airln_rmk as awbAirlRmkOld,a.dest as dest,
		a.part_shmpt_yn as shpType,
		d.spl_code1 as oldShc1, d.spl_code2 oldShc2, d.spl_code3 as oldShc3,
		d.spl_code4 oldShc4, d.spl_code5 oldShc5, d.spl_code6 oldShc6, d.spl_code7 oldShc7, d.spl_code8 oldShc8, d.spl_code9 oldShc9,
		decode((select COUNT(1) from CUST_AIRL_SPL_CODE where spl_type='SPL_VAL' and spl_code=d.SPL_CODE1),0,'N','Y')  as shcVal1, 
		decode((select COUNT(1) from CUST_AIRL_SPL_CODE where spl_type='SPL_VAL' and spl_code=d.SPL_CODE2),0,'N','Y')  as shcVal2, 
		decode((select COUNT(1) from CUST_AIRL_SPL_CODE where spl_type='SPL_VAL' and spl_code=d.SPL_CODE3),0,'N','Y')  as shcVal3,
		decode((select COUNT(1) from CUST_AIRL_SPL_CODE where spl_type='SPL_VAL' and spl_code=d.SPL_CODE4),0,'N','Y')  as shcVal4,
		decode((select COUNT(1) from CUST_AIRL_SPL_CODE where spl_type='SPL_VAL' and spl_code=d.SPL_CODE5),0,'N','Y')  as shcVal5,
		decode((select COUNT(1) from CUST_AIRL_SPL_CODE where spl_type='SPL_VAL' and spl_code=d.SPL_CODE6),0,'N','Y')  as shcVal6,
		decode((select COUNT(1) from CUST_AIRL_SPL_CODE where spl_type='SPL_VAL' and spl_code=d.SPL_CODE7),0,'N','Y')  as shcVal7,
		decode((select COUNT(1) from CUST_AIRL_SPL_CODE where spl_type='SPL_VAL' and spl_code=d.SPL_CODE8),0,'N','Y')  as shcVal8,
		decode((select COUNT(1) from CUST_AIRL_SPL_CODE where spl_type='SPL_VAL' and spl_code=d.SPL_CODE9),0,'N','Y')  as shcVal9,
		(SELECT V.CC_CODE FROM V_CST_IMP_CC_CODE_AWB_ALL V
		 		WHERE V.FLT_KEY = #flightKey# AND V.FLT_DATE = #arrDate# AND V.AWB_NO = A.AWB_NO AND V.AWB_DATE = A.AWB_DATE
		 			  AND NVL(V.HAWB_NO, '000000000000000000') =  '000000000000000000' AND ROWNUM = 1) as ccCode,
		decode((select COUNT(1)
                  from v_ddt_dtl
                  where awb_no = a.awb_no
                  and awb_date = a.awb_date
                  and flt_key = c.flt_key
                  and flt_date = c.flt_date
                  and QT_BU = 'Y'),0,'N','Y')  qtBuInd,
		(select awb_type from awb where awb_no = a.awb_no and awb_date = a.awb_date) as awbType ,c.bulk_pcs manfBulkPcs,c.bulk_wt manfBulkWt,c.bup_pcs manfBupPcs,c.bup_wt manfBupWt
		 ,d.bulk_pcs awbBulkPcs,d.bulk_wt awbBulkWt,d.bup_pcs awbBupPcs,d.bup_wt awbBupWt,m.tr_no,m.si_type,
		 'C' as loadType,
		 'C' as oldloadType                         
		from edi_ffm_shp a,edi_ffm_uld b,edi_ffm_msg m, imp_car_shp c,imp_car_awb d 
		where a.tr_no=b.tr_no and a.udoc_line_no= b.doc_line_no 
		and b.flt_key =#flightKey# and b.flt_date=#arrDate# 
		and b.tr_no = m.tr_no and m.ffm_status = 'P' AND B.OFF_POINT = 'HKG'
		and a.awb_no=c.awb_no  and a.flt_key=c.flt_key and a.flt_date=c.flt_date
    	and c.awb_no=d.awb_no and c.awb_date = d.awb_date
	</select>
	<select id="get_cargo_shipment_list" parameterClass="cargo.cms.imprt.bo.InBoundULDListBO" resultClass="cargo.cms.imprt.bo.InBoundULDListBO" >
		WITH CARGO_TYPE AS (SELECT AWB_NO,AWB_DATE,
       						(CASE WHEN decode(a.catalog,'EG','C','ES','C','IG','C','TG','C','TA','C','EU','M','TM','M','EO','Q','IO','Q','C') = 'C' THEN 
       						(CASE WHEN (SELECT COUNT(1) FROM CUST_AIRL_SPL_CODE SPLCODE WHERE SPLCODE.SPL_TYPE='SPL_COURIER_SHC' AND SPLCODE.CARR_CODE = A.CARR_CODE AND (SPLCODE.SPL_CODE = a.SPL_CODE1 OR SPLCODE.SPL_CODE = a.SPL_CODE2 OR SPLCODE.SPL_CODE = a.SPL_CODE3 OR SPLCODE.SPL_CODE = a.SPL_CODE4 OR SPLCODE.SPL_CODE = a.SPL_CODE5 OR SPLCODE.SPL_CODE = a.SPL_CODE6 OR SPLCODE.SPL_CODE = a.SPL_CODE7 OR SPLCODE.SPL_CODE = a.SPL_CODE8 OR SPLCODE.SPL_CODE = a.SPL_CODE9)) > 0
       						THEN 'Q' ELSE decode(a.catalog,'EG','C','ES','C','IG','C','TG','C','TA','C','EU','M','TM','M','EO','Q','IO','Q','C') END)
       						ELSE decode(a.catalog,'EG','C','ES','C','IG','C','TG','C','TA','C','EU','M','TM','M','EO','Q','IO','Q','C') END) as catalog	  
	  			FROM AWB  A)
		select distinct a.awb_no as awbNo,rtrim(SUBSTR(A.AWB_NO,1,3)||'-'||SUBSTR(A.AWB_NO,4), '-') as awbNoDisp ,TO_CHAR(a.AWB_DATE, 'DDMONYY') as awbDate,
		decode(c.MANIFEST_PCS,a.man_pcs,c.MANIFEST_PCS,a.man_pcs) as awbPcs,decode(c.MANIFEST_WT,a.man_wt,c.MANIFEST_WT,a.man_wt) as awbWt,
		NVL(d.content,a.content) as content,d.spl_code1 as shc1, d.spl_code2 shc2, d.spl_code3 as shc3,
		a.rmk,b.uld_key as uldKey,c.car_created as carCreated,c.imx_rqs as imxRqs, c.dlv_mode_rqs as dlvRqs, d.spl_code4 shc4, d.spl_code5 shc5, d.spl_code6 shc6, d.spl_code7 shc7, d.spl_code8 shc8, d.spl_code9 shc9,
		d.house_flg as houseFlag ,d.wh_Rmk as awbWhRmk,d.airln_rmk as awbAirlRmk,d.wh_Rmk as awbWhRmkOld,d.airln_rmk as awbAirlRmkOld,a.dest as dest,
		a.part_shmpt_yn as shpType,
		d.spl_code1 as oldShc1, d.spl_code2 oldShc2, d.spl_code3 as oldShc3,
		d.spl_code4 oldShc4, d.spl_code5 oldShc5, d.spl_code6 oldShc6, d.spl_code7 oldShc7, d.spl_code8 oldShc8, d.spl_code9 oldShc9,
		decode((select COUNT(1) from CUST_AIRL_SPL_CODE where spl_type='SPL_VAL' and spl_code=d.SPL_CODE1),0,'N','Y')  as shcVal1, 
		decode((select COUNT(1) from CUST_AIRL_SPL_CODE where spl_type='SPL_VAL' and spl_code=d.SPL_CODE2),0,'N','Y')  as shcVal2, 
		decode((select COUNT(1) from CUST_AIRL_SPL_CODE where spl_type='SPL_VAL' and spl_code=d.SPL_CODE3),0,'N','Y')  as shcVal3,
		decode((select COUNT(1) from CUST_AIRL_SPL_CODE where spl_type='SPL_VAL' and spl_code=d.SPL_CODE4),0,'N','Y')  as shcVal4,
		decode((select COUNT(1) from CUST_AIRL_SPL_CODE where spl_type='SPL_VAL' and spl_code=d.SPL_CODE5),0,'N','Y')  as shcVal5,
		decode((select COUNT(1) from CUST_AIRL_SPL_CODE where spl_type='SPL_VAL' and spl_code=d.SPL_CODE6),0,'N','Y')  as shcVal6,
		decode((select COUNT(1) from CUST_AIRL_SPL_CODE where spl_type='SPL_VAL' and spl_code=d.SPL_CODE7),0,'N','Y')  as shcVal7,
		decode((select COUNT(1) from CUST_AIRL_SPL_CODE where spl_type='SPL_VAL' and spl_code=d.SPL_CODE8),0,'N','Y')  as shcVal8,
		decode((select COUNT(1) from CUST_AIRL_SPL_CODE where spl_type='SPL_VAL' and spl_code=d.SPL_CODE9),0,'N','Y')  as shcVal9,
		(SELECT V.CC_CODE FROM V_CST_IMP_CC_CODE_AWB_ALL V
		 		WHERE V.FLT_KEY = #flightKey# AND V.FLT_DATE = #arrDate# AND V.AWB_NO = A.AWB_NO AND V.AWB_DATE = A.AWB_DATE
		 			  AND NVL(V.HAWB_NO, '000000000000000000') =  '000000000000000000' AND ROWNUM = 1) as ccCode,
		decode((select COUNT(1)
                  from v_ddt_dtl
                  where awb_no = a.awb_no
                  and awb_date = a.awb_date
                  and flt_key = c.flt_key
                  and flt_date = c.flt_date
                  and QT_BU = 'Y'),0,'N','Y')  qtBuInd,
		(select awb_type from awb where awb_no = a.awb_no and awb_date = a.awb_date) as awbType ,c.bulk_pcs manfBulkPcs,c.bulk_wt manfBulkWt,c.bup_pcs manfBupPcs,c.bup_wt manfBupWt
		 ,d.bulk_pcs awbBulkPcs,d.bulk_wt awbBulkWt,d.bup_pcs awbBupPcs,d.bup_wt awbBupWt,m.tr_no,m.si_type,
		 'C' as loadType,
		 'C' as oldloadType		                                                 
		from edi_ffm_shp a,edi_ffm_uld b,edi_ffm_msg m, imp_car_shp c,imp_car_awb d 
		where a.tr_no=b.tr_no and a.udoc_line_no= b.doc_line_no 
		and b.flt_key =#flightKey# and b.flt_date=#arrDate# 
		and b.tr_no = m.tr_no and m.ffm_status = 'P' AND B.OFF_POINT = 'HKG'
		and a.awb_no=c.awb_no  and a.flt_key=c.flt_key and a.flt_date=c.flt_date
    	and c.awb_no=d.awb_no and c.awb_date = d.awb_date
    	AND (SELECT CATALOG FROM CARGO_TYPE WHERE CARGO_TYPE.AWB_NO=d.AWB_NO AND CARGO_TYPE.AWB_DATE=d.AWB_DATE)  IN ('C')
	</select>
	<select id="get_courier_shipment_list" parameterClass="cargo.cms.imprt.bo.InBoundULDListBO" resultClass="cargo.cms.imprt.bo.InBoundULDListBO" >
		WITH CARGO_TYPE AS (SELECT AWB_NO,AWB_DATE,
       						(CASE WHEN decode(a.catalog,'EG','C','ES','C','IG','C','TG','C','TA','C','EU','M','TM','M','EO','Q','IO','Q','C') = 'C' THEN 
       						(CASE WHEN (SELECT COUNT(1) FROM CUST_AIRL_SPL_CODE SPLCODE WHERE SPLCODE.SPL_TYPE='SPL_COURIER_SHC' AND SPLCODE.CARR_CODE = A.CARR_CODE AND (SPLCODE.SPL_CODE = a.SPL_CODE1 OR SPLCODE.SPL_CODE = a.SPL_CODE2 OR SPLCODE.SPL_CODE = a.SPL_CODE3 OR SPLCODE.SPL_CODE = a.SPL_CODE4 OR SPLCODE.SPL_CODE = a.SPL_CODE5 OR SPLCODE.SPL_CODE = a.SPL_CODE6 OR SPLCODE.SPL_CODE = a.SPL_CODE7 OR SPLCODE.SPL_CODE = a.SPL_CODE8 OR SPLCODE.SPL_CODE = a.SPL_CODE9)) > 0
       						THEN 'Q' ELSE decode(a.catalog,'EG','C','ES','C','IG','C','TG','C','TA','C','EU','M','TM','M','EO','Q','IO','Q','C') END)
       						ELSE decode(a.catalog,'EG','C','ES','C','IG','C','TG','C','TA','C','EU','M','TM','M','EO','Q','IO','Q','C') END) as catalog	  
	  			FROM AWB  A)
		select distinct a.awb_no as awbNo,rtrim(SUBSTR(A.AWB_NO,1,3)||'-'||SUBSTR(A.AWB_NO,4), '-') as awbNoDisp ,TO_CHAR(a.AWB_DATE, 'DDMONYY') as awbDate,
		decode(c.MANIFEST_PCS,a.man_pcs,c.MANIFEST_PCS,a.man_pcs) as awbPcs,decode(c.MANIFEST_WT,a.man_wt,c.MANIFEST_WT,a.man_wt) as awbWt,
		NVL(d.content,a.content) as content,d.spl_code1 as shc1, d.spl_code2 shc2, d.spl_code3 as shc3,
		a.rmk,b.uld_key as uldKey,c.car_created as carCreated,c.imx_rqs as imxRqs, c.dlv_mode_rqs as dlvRqs, d.spl_code4 shc4, d.spl_code5 shc5, d.spl_code6 shc6, d.spl_code7 shc7, d.spl_code8 shc8, d.spl_code9 shc9,
		d.house_flg as houseFlag ,d.wh_Rmk as awbWhRmk,d.airln_rmk as awbAirlRmk,d.wh_Rmk as awbWhRmkOld,d.airln_rmk as awbAirlRmkOld,a.dest as dest,
		a.part_shmpt_yn as shpType,
		d.spl_code1 as oldShc1, d.spl_code2 oldShc2, d.spl_code3 as oldShc3,
		d.spl_code4 oldShc4, d.spl_code5 oldShc5, d.spl_code6 oldShc6, d.spl_code7 oldShc7, d.spl_code8 oldShc8, d.spl_code9 oldShc9,
		decode((select COUNT(1) from CUST_AIRL_SPL_CODE where spl_type='SPL_VAL' and spl_code=d.SPL_CODE1),0,'N','Y')  as shcVal1, 
		decode((select COUNT(1) from CUST_AIRL_SPL_CODE where spl_type='SPL_VAL' and spl_code=d.SPL_CODE2),0,'N','Y')  as shcVal2, 
		decode((select COUNT(1) from CUST_AIRL_SPL_CODE where spl_type='SPL_VAL' and spl_code=d.SPL_CODE3),0,'N','Y')  as shcVal3,
		decode((select COUNT(1) from CUST_AIRL_SPL_CODE where spl_type='SPL_VAL' and spl_code=d.SPL_CODE4),0,'N','Y')  as shcVal4,
		decode((select COUNT(1) from CUST_AIRL_SPL_CODE where spl_type='SPL_VAL' and spl_code=d.SPL_CODE5),0,'N','Y')  as shcVal5,
		decode((select COUNT(1) from CUST_AIRL_SPL_CODE where spl_type='SPL_VAL' and spl_code=d.SPL_CODE6),0,'N','Y')  as shcVal6,
		decode((select COUNT(1) from CUST_AIRL_SPL_CODE where spl_type='SPL_VAL' and spl_code=d.SPL_CODE7),0,'N','Y')  as shcVal7,
		decode((select COUNT(1) from CUST_AIRL_SPL_CODE where spl_type='SPL_VAL' and spl_code=d.SPL_CODE8),0,'N','Y')  as shcVal8,
		decode((select COUNT(1) from CUST_AIRL_SPL_CODE where spl_type='SPL_VAL' and spl_code=d.SPL_CODE9),0,'N','Y')  as shcVal9,
		(SELECT V.CC_CODE FROM V_CST_IMP_CC_CODE_AWB_ALL V
		 		WHERE V.FLT_KEY = #flightKey# AND V.FLT_DATE = #arrDate# AND V.AWB_NO = A.AWB_NO AND V.AWB_DATE = A.AWB_DATE
		 			  AND NVL(V.HAWB_NO, '000000000000000000') =  '000000000000000000' AND ROWNUM = 1) as ccCode,
		decode((select COUNT(1)
                  from v_ddt_dtl
                  where awb_no = a.awb_no
                  and awb_date = a.awb_date
                  and flt_key = c.flt_key
                  and flt_date = c.flt_date
                  and QT_BU = 'Y'),0,'N','Y')  qtBuInd,
		(select awb_type from awb where awb_no = a.awb_no and awb_date = a.awb_date) as awbType ,c.bulk_pcs manfBulkPcs,c.bulk_wt manfBulkWt,c.bup_pcs manfBupPcs,c.bup_wt manfBupWt
		 ,d.bulk_pcs awbBulkPcs,d.bulk_wt awbBulkWt,d.bup_pcs awbBupPcs,d.bup_wt awbBupWt,m.tr_no,m.si_type,
		 'C' as loadType,
		 'C' as oldloadType                         
		from edi_ffm_shp a,edi_ffm_uld b,edi_ffm_msg m, imp_car_shp c,imp_car_awb d 
		where a.tr_no=b.tr_no and a.udoc_line_no= b.doc_line_no 
		and b.flt_key =#flightKey# and b.flt_date=#arrDate# 
		and b.tr_no = m.tr_no and m.ffm_status = 'P' AND B.OFF_POINT = 'HKG'
		and a.awb_no=c.awb_no  and a.flt_key=c.flt_key and a.flt_date=c.flt_date
    	and c.awb_no=d.awb_no and c.awb_date = d.awb_date
    	AND (SELECT CATALOG FROM CARGO_TYPE WHERE CARGO_TYPE.AWB_NO=d.AWB_NO AND CARGO_TYPE.AWB_DATE=d.AWB_DATE)  IN ('Q')
	</select>
	<insert id="save_imp_uld_list" parameterClass="cargo.cms.imprt.bo.InBoundULDListBO">
		INSERT INTO IMP_ULD_LIST (FLT_KEY,FLT_DATE,ULD_KEY, TRANSIT_IND, IMX, LM_USER_ID ,LM_DATE,CR_USER_ID, CR_DATE,SPL_CODE1,SPL_CODE2,SPL_CODE3,MANUAL_HDLY_AREA,WH_RMK,AIRL_RMK,HANDLING_MODE,TR_TYPE)
		VALUES( #flightKey#,TO_DATE(#arrDate#,'DDMONYY'),#uldKey# ,#transInd#,#imx#,#userID#,SYSDATE, #userID#,SYSDATE,#shc1#,#shc2#,#shc3#,#manualHdlgArea#,#uldWhRmk#,#uldAirlRmk#,#hdlgMode#,'INBUL')	
    </insert>
	 <select id="check_record_imp_uld_list" parameterClass="cargo.cms.imprt.bo.InBoundULDListBO" resultClass="java.lang.Integer">
		  select count(1) 
		  from IMP_ULD_LIST 
		  where FLT_KEY = #flightKey# and FLT_DATE = TO_DATE(#arrDate#,'DDMONYY') and ULD_KEY = #uldKey#
	</select>
	<select id="get_pcwt_inblist" parameterClass="cargo.cms.imprt.bo.InBoundULDListBO" resultClass="cargo.cms.imprt.bo.InBoundULDListBO">
		select sum(a.MAN_WT) wt1,sum(a.MAN_PCS) pcs1 from edi_ffm_shp a,edi_ffm_uld b,edi_ffm_msg c where a.tr_no=b.tr_no and a.udoc_line_no= b.doc_line_no 
		and  b.flt_key =#flightKey# and b.flt_date=TO_DATE(#arrDate#,'DDMONYY') and c.tr_no=a.tr_no and c.ffm_status='P' and a.awb_no=#awbNo# and a.awb_date=TO_DATE(#awbDate#,'DDMONYY')
		and b.uld_key=#uldKey#
	</select>	
		
	<select id="checkAnyULDExistsForTheShipment" parameterClass="cargo.cms.imprt.bo.InBoundULDListBO" resultClass="java.lang.Integer">
		select count(1) from edi_ffm_shp a,edi_ffm_uld b,edi_ffm_msg c where a.tr_no=b.tr_no and a.udoc_line_no= b.doc_line_no 
		and  b.flt_key =#flightKey# and b.flt_date=TO_DATE(#arrDate#,'DDMONYY') and c.tr_no=a.tr_no and c.ffm_status='P' and a.awb_no=#awbNo# and a.awb_date=TO_DATE(#awbDate#,'DDMONYY')		
		and  b.uld_key is not null
	</select>	
	
	<select id="get_bupPcWt_bulkPcWt_Shipment" parameterClass="cargo.cms.imprt.bo.InBoundULDListBO" resultClass="cargo.cms.imprt.bo.InBoundULDListBO">
		SELECT (SUM(manifest_pcs) - SUM(BUP_PCS)) othFltBulkPcs, (SUM(manifest_wt) - SUM(BUP_WT)) othFltBulkWt, SUM(BUP_PCS) othFltBupPcs, SUM(BUP_WT) othFltBupWt FROM IMP_CAR_SHP 
			WHERE awb_no =#awbNo# AND awb_date =TO_DATE(#awbDate#,'DDMONYY')
	</select>	
	
	<update id="upd_imp_shp_inbdlist" parameterClass="cargo.cms.imprt.bo.InBoundULDListBO">
		UPDATE IMP_CAR_SHP SET
			LM_USER_ID =  #userID#, 
			LM_DATE  = SYSDATE,
			CFM_IND = #cfmStatus# 
		WHERE AWB_NO  = #awbNo# 
			AND AWB_DATE  = TO_DATE(#awbDate#,'DDMONYY') 
			AND FLT_DATE  = TO_DATE(#arrDate#,'DDMONYY')
			AND FLT_KEY  = #flightKey#
	</update>
	<update id="upd_imp_awb_inbdlist" parameterClass="cargo.cms.imprt.bo.InBoundULDListBO">
		UPDATE IMP_CAR_AWB SET
			LM_USER_ID =  #userID#,
			AWB_RMK = DECODE(#awbRmk#,'NULL',null,NVL(#awbRmk#,AWB_RMK)),
			WH_RMK = DECODE(#awbWhRmk#,'NULL',null,NVL(#awbWhRmk#,WH_RMK)),
			AIRLN_RMK = DECODE(#awbAirlRmk#,'NULL',null,NVL(#awbAirlRmk#,AIRLN_RMK)),
			LM_DATE  = SYSDATE
			<isEqual property="carCreated" compareValue="N">
				<isEqual property="shcUpdReqd" compareValue="Y">
					,SPL_CODE1     = #shc1#, 
					SPL_CODE2     = #shc2#, 
					SPL_CODE3     = #shc3#,  
					SPL_CODE4     = #shc4#,  
					SPL_CODE5     = #shc5#,  
					SPL_CODE6     = #shc6#,  
					SPL_CODE7     = #shc7#,  
					SPL_CODE8     = #shc8#, 
					SPL_CODE9     = #shc9# 
				</isEqual>
			</isEqual>
		   	<isEqual property="awbType" compareValue="T">
			   	<isEqual property="carCreated" compareValue="Y">
			   			<isEqual property="shcUpdReqd" compareValue="Y">
							,SPL_CODE1     = #shc1#, 
							SPL_CODE2     = #shc2#, 
							SPL_CODE3     = #shc3#,  
							SPL_CODE4     = #shc4#,  
							SPL_CODE5     = #shc5#,  
							SPL_CODE6     = #shc6#,  
							SPL_CODE7     = #shc7#,  
							SPL_CODE8     = #shc8#, 
							SPL_CODE9     = #shc9#
						</isEqual> 
				</isEqual>
		   	</isEqual>
		WHERE  AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') AND     
			AWB_NO   = #awbNo#
	</update>
	
	
	<update id="upd_buppcwt_imp_shp_inbdlist" parameterClass="cargo.cms.imprt.bo.InBoundULDListBO">
		UPDATE IMP_CAR_SHP SET
			LM_USER_ID =  #userID#, 
			LM_DATE  = SYSDATE 
			<isEqual property="carCreated" compareValue="N">
   					,PPK_TYPE = case when (manifest_pcs-#totalBupPcs#) = 0 then 'P' else case when #totalBupPcs#=0 then 'B' else 'M' end end,
		   			bulk_pcs = manifest_pcs-#totalBupPcs#,
		   			bulk_wt = manifest_wt-#totalBupWt#,
		   			bup_pcs = #totalBupPcs#,
		   			bup_wt = #totalBupWt# 
			</isEqual>
		   	<isEqual property="awbType" compareValue="T">
		   		<isEqual property="carCreated" compareValue="Y">	
		   			,PPK_TYPE = case when (manifest_pcs-#totalBupPcs#) = 0 then 'P' else case when #totalBupPcs#=0 then 'B' else 'M' end end,
		   			bulk_pcs = manifest_pcs-#totalBupPcs#,
		   			bulk_wt = manifest_wt-#totalBupWt#,
		   			bup_pcs = #totalBupPcs#,
		   			bup_wt = #totalBupWt# 
			   	</isEqual>	
		   	</isEqual>
		WHERE AWB_NO  = #awbNo# 
			AND AWB_DATE  = TO_DATE(#awbDate#,'DDMONYY') 
			AND FLT_DATE  = TO_DATE(#arrDate#,'DDMONYY')
			AND FLT_KEY  = #flightKey#
	</update>
	
	<update id="upd_buppcwt_imp_awb_inbdlist" parameterClass="cargo.cms.imprt.bo.InBoundULDListBO">
		UPDATE IMP_CAR_AWB SET
			LM_USER_ID =  #userID#,
			LM_DATE  = SYSDATE
			<isEqual property="carCreated" compareValue="N">
					,PPK_TYPE = case when (awb_pcs-#totalBupPcs#) = 0 then 'P' else case when #totalBupPcs#=0 then 'B' else 'M' end end,
					TR_TYPE = 'INBUL',
		   			bulk_pcs = #totalBulkPcs#,
		   			bulk_wt = #totalBulkWt#,
		   			bup_pcs = #totalBupPcs#,
		   			bup_wt = #totalBupWt# 
			</isEqual>
		   	<isEqual property="awbType" compareValue="T">
			   	<isEqual property="carCreated" compareValue="Y">
	   				,PPK_TYPE = case when (awb_pcs-#totalBupPcs#) = 0 then 'P' else case when #totalBupPcs#=0 then 'B' else 'M' end end,
	   				TR_TYPE = 'INBUL',
		   			bulk_pcs = #totalBulkPcs#,
		   			bulk_wt = #totalBulkWt#,
		   			bup_pcs = #totalBupPcs#,
		   			bup_wt = #totalBupWt# 
				</isEqual>
		   	</isEqual>
		WHERE  AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') AND     
			AWB_NO   = #awbNo#
	</update>
	
	
	
	<select id="checkImpCarAwbSaved" parameterClass="cargo.cms.imprt.bo.InBoundULDListBO" resultClass="java.lang.Integer">
		select COUNT(1) from imp_car_awb WHERE  AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') AND     
			AWB_NO = #awbNo# AND SAVE_YN='N'
    </select> 
    <update id="upd_imp_awb_inbdlist_carawb" parameterClass="cargo.cms.imprt.bo.InBoundULDListBO">
		update imp_car_awb set SAVE_YN='Y', bulk_pcs= (select NVL((SUM(manifest_pcs) - SUM(BUP_PCS)),0) from imp_car_shp where  AWB_NO  = #awbNo#  AND AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')) ,
		bulk_wt= (select NVL((SUM(manifest_wt) - SUM(BUP_WT)),0) from imp_car_shp where  AWB_NO   = #awbNo#  AND AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')) 
		WHERE  AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') AND  AWB_NO   = #awbNo# 	
    </update>
    
    <update id="upd_imp_awb_inbdlist_carshp" parameterClass="cargo.cms.imprt.bo.InBoundULDListBO">
    	update imp_car_shp set bulk_pcs=MANIFEST_PCS,bulk_wt=MANIFEST_WT WHERE  AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') AND     
		AWB_NO   = #awbNo# AND FLT_DATE  = TO_DATE(#arrDate#,'DDMONYY')
		AND FLT_KEY  = #flightKey#
	</update>
	
	<update id="upd_awb_inbdlist" parameterClass="cargo.cms.imprt.bo.InBoundULDListBO">
		UPDATE AWB SET
			LM_USER_ID =  #userID#, 
			AIRLN_RMK = DECODE(#awbAirlRmk#,'NULL',null,NVL(#awbAirlRmk#,AIRLN_RMK)),
			LM_DATE  = SYSDATE
			<isEqual property="carCreated" compareValue="N">
				<isEqual property="shcUpdReqd" compareValue="Y">
					,SPL_CODE1     = #shc1#, 
					SPL_CODE2     = #shc2#, 
					SPL_CODE3     = #shc3#,  
					SPL_CODE4     = #shc4#,  
					SPL_CODE5     = #shc5#,  
					SPL_CODE6     = #shc6#,  
					SPL_CODE7     = #shc7#,  
					SPL_CODE8     = #shc8#, 
					SPL_CODE9     = #shc9# 
				</isEqual>
		   	</isEqual>
		   	<isEqual property="awbType" compareValue="T">
			   	<isEqual property="carCreated" compareValue="Y">
			   		<isEqual property="shcUpdReqd" compareValue="Y">
						,SPL_CODE1     = #shc1#, 
						SPL_CODE2     = #shc2#, 
						SPL_CODE3     = #shc3#,  
						SPL_CODE4     = #shc4#,  
						SPL_CODE5     = #shc5#,  
						SPL_CODE6     = #shc6#,  
						SPL_CODE7     = #shc7#,  
						SPL_CODE8     = #shc8#, 
						SPL_CODE9     = #shc9#
					</isEqual> 
			   	</isEqual>
		   	</isEqual>
		WHERE  AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') AND     
			AWB_NO   = #awbNo#
	</update>
	
	<select id="get_inbd_shc_list" parameterClass="java.lang.String" resultClass="cargo.cms.imprt.bo.InBoundULDListBO" >
		select code as shc from mast_spl_hand_code where code in (#PARAM#) ORDER BY priority ASC
	</select>
	
	<!--<select id="check_amd_to_ack_date" parameterClass="cargo.cms.imprt.bo.InBoundULDListBO" resultClass="cargo.cms.imprt.bo.InBoundULDListBO" >
		select toin.to_no as toNo, 
  		toin.ver_no as verNo, 
  		todtl.ho_area as hoArea,
  		toin.ack_date toAckDate 
    	from tow_order_in toin
		join tow_order_in_dtl todtl 
    	on todtl.to_no = toin.to_no
		where
		todtl.uld_key = #uldKey# 
		and toin.FLT_DATE  = TO_DATE(#arrDate#,'DDMONYY')
		and toin.FLT_KEY  = #flightKey#
	</select>

	
	--><select id="getTowOrderDetails" parameterClass="cargo.cms.imprt.bo.InBoundULDListBO" resultClass="cargo.cms.imprt.bo.InBoundULDListBO" >
		select toin.to_no as toNo, 
  		toin.ver_no as verNo, 
  		todtl.ho_area as hoArea,
  		toin.to_no as toNoHidden, 
  		toin.ver_no as verNoHidden,
  		toin.ack_date toAckDate 
    	from tow_order_in toin
		join tow_order_in_dtl todtl 
    	on todtl.to_no = toin.to_no
		where
		todtl.uld_key = #uldKey# 
		and toin.FLT_DATE  = TO_DATE(#arrDate#,'DDMONYY')
		and toin.FLT_KEY  = #flightKey#
	</select>
	
	<update id="upd_amd_to_ack_date" parameterClass="cargo.cms.imprt.bo.InBoundULDListBO">
		UPDATE tow_order_in_dtl SET
			HO_AREA  = #hoArea#,
			TRNS_GRP = #trfGroup#,
			LM_USER_ID =  #userID#, 
			LM_DATE  = SYSDATE
		WHERE  TO_NO = #toNo#
		AND ULD_KEY = #uldKey#	
	</update>
	<update id="upd_amd_to_ack_date_to_hdr" parameterClass="cargo.cms.imprt.bo.InBoundULDListBO">
		UPDATE tow_order_in SET
			ver_no  = #verNo#,
			LM_USER_ID =  #userID#, 
			LM_DATE  = SYSDATE 
		WHERE  TO_NO = #toNo#
		and FLT_DATE  = TO_DATE(#arrDate#,'DDMONYY')
		and FLT_KEY  = #flightKey# 
	</update>
	
	<!--<select id="getTowOrderDetailsHidden" parameterClass="cargo.cms.imprt.bo.InBoundULDListBO" resultClass="cargo.cms.imprt.bo.InBoundULDListBO" >
		select toin.to_no as toNoHidden, 
  		toin.ver_no as verNoHidden  
  		from tow_order_in toin
		join tow_order_in_dtl todtl 
    	on todtl.to_no = toin.to_no
		where
		todtl.uld_key = #uldKey# 
		and toin.FLT_DATE  = TO_DATE(#arrDate#,'DDMONYY')
		and toin.FLT_KEY  = #flightKey#
	</select>
	
	--><update id="upd_imp_awb_ech_inbdlist" parameterClass="cargo.cms.imprt.bo.InBoundULDListBO">
		UPDATE IMP_CAR_AWB SET
			ECT_HANDLER = #ectHandl#,
			BYPASS_REL = 'Y', 
			LM_USER_ID =  #userID#, 
			AWB_RMK      = #awbRmk#,
			LM_DATE  = SYSDATE
		WHERE  AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') AND     
			AWB_NO   = #awbNo#
	</update>
	
	<!--  Changed for QR -->
	<update id="upd_imp_uld_list" parameterClass="cargo.cms.imprt.bo.InBoundULDListBO">
		UPDATE IMP_ULD_LIST SET
			TRANSIT_IND = decode(#uldFlow#,'T','Y',TRANSIT_IND),
			SPL_CODE1 = #shc1#,
			SPL_CODE2 = #shc2#,
			SPL_CODE3 = #shc3#,
			IMX = #imx#,
			WH_RMK = #uldWhRmk#,
			AIRL_RMK = #uldAirlRmk#,
			LM_USER_ID =  #userID#,
			HANDLING_MODE = #hdlgMode#,
			MANUAL_HDLY_AREA = #manualHdlgArea#, 
			LM_DATE  = SYSDATE,
			TR_TYPE = #trtype#
		WHERE  FLT_KEY  = #flightKey#
			AND FLT_DATE = TO_DATE(#arrDate#,'DDMONYY') 
			AND ULD_KEY   = #uldKey#
	</update>
	
	<update id="upd_uld_inv_inbdlist" parameterClass="cargo.cms.imprt.bo.InBoundULDListBO">
		UPDATE ULD_INVENTORY SET
			HANDLING_MODE = #hdlgMode#, 
			LM_DATE  = SYSDATE
			<isNotEmpty property="hdlgMode">
				<isEqual property="uldFlow" compareValue="T">
					,TRANSIT_FLG = 'Y'	
				</isEqual>
			</isNotEmpty>
		WHERE    
			ULD_KEY   = #uldKey#
	</update>
	<update id="update_shc_inboundlist" parameterClass="cargo.cms.imprt.bo.InBoundULDListBO">
			UPDATE AWB SET 
				SHCLOCK_IND = #shcLockInd#
				WHERE  AWB_NO   = #awbNo#
				AND AWB_DATE  = TO_DATE(#awbDate#,'DDMONYY')
	</update>	
	<insert id="insertUldRmk" parameterClass="cargo.cms.imprt.bo.InBoundULDListBO">
		INSERT INTO ULD_RMK (ULD_TYPE,ULD_NO,ULD_CARR,TR_NO,TR_TYPE,DOC_LINE_NO,ULD_RMK,ULD_KEY,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,EVENT_ID)
		VALUES( #uldType#,#uldNo#,#uldCarr# ,'18','IU','1',#rmk#, #uldKey#,#userID#,sysdate,#userID#,sysdate,'IUL')
	</insert>
	<insert id="insertAwbRmk" parameterClass="cargo.cms.imprt.bo.InBoundULDListBO">
		INSERT INTO AWB_RMK (SEQ_NO,AWB_NO,AWB_DATE,FLT_KEY,FLT_DATE,FLT_TYPE,RMK_TYPE,RMK,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,FUNCTION_NAME)
		VALUES(awb_rmk_seq.nextval,#awbNo#,TO_DATE(#awbDate#,'DDMONYY') ,#flightKey#,TO_DATE(#arrDate#,'DDMONYY'),'I', 'IMP ULD LIST',#rmk#,#userID#,sysdate,#userID#,sysdate,'IMP ULD LIST')
	</insert>
	<update id="upd_cfmstatus_inbdlist" parameterClass="cargo.cms.imprt.bo.InBoundULDListBO">
		UPDATE FLT_OPR_EVENTS
		SET
		   INB_ULD_LIST_CFM_USER_ID = #userID#,
		   INB_ULD_LIST_CFM_DATE = sysdate,
		   INB_ULD_LIST_CONFIRM = DECODE(INB_ULD_LIST_CONFIRM,'Y','Y',#cfmStatus#),
		   LM_USER_ID  = #userID#, 
		   LM_DATE = sysdate
		WHERE
			 FLT_KEY = #flightKey# AND
			 TO_CHAR(SCH_DATE, 'DDMONYY') = #arrDate# AND
			 FLT_TYPE	 = 'A'
    </update>
	<!--
	==============================================================================================
		END OF INBOUND ULD LIST
	==============================================================================================
	-->
	<!-- Amend ULD storage starts -->
<select id="getuldforamenduld" parameterClass="java.lang.String" 
	resultClass="cargo.cms.uld.bo.ULDEICBO">	
  
	<![CDATA[
select 
uld.ULD_KEY as uldKey,
uld.FLT_KEY as fltNo,
uld.FLT_TYPE as fltType,
uld.ULD_CARR uldCarr,
uld.SOURCE_CODE sourceCode,
uld.BASE_PLT basePlt,
uld.EIC_UNLDG_PT eicUnloadingPt,
TO_CHAR(uld.FLT_DATE,'DDMONYY') fltDate,
(SELECT TR_NO from FLT_OPR flt where flt.FLT_KEY=uld.FLT_KEY 
and TO_CHAR(flt.SCH_DATE,'DDMONYY')=TO_CHAR(uld.FLT_DATE,'DDMONYY') and uld.uld_KEY=#uldKey# and flt.FLT_TYPE='A') txNo,
(select distinct ULD_IMAGE_NAME from ULD_IMAGE where ULD_KEY = #uldKey# and rownum=1) transactionId,
pkg_common.get_flt_ata(uld.FLT_KEY,TO_CHAR(uld.FLT_DATE,'DDMONYY'),DECODE(uld.FLT_TYPE,'I','A',uld.FLT_TYPE) )AS actTime,
pkg_common.get_flt_eta(uld.FLT_KEY,TO_CHAR(uld.FLT_DATE,'DDMONYY'),DECODE(uld.FLT_TYPE,'I','A',uld.FLT_TYPE) )AS estTime,
uld.LOC_CODE locCode,
uld.LOC_CODE locCodeOld,
uld.TARGET target,
uld.EIC_FLG eicFLG,
uld.EMPTY_FLG emptyYN,
uld.EMPTY_FLG oldemptyYN,
nvl(ULD_FLOW,'I') uldFlow,
uld.SURP_I spInd,
uld.DAM_IND damYN,
uld.SER_IND serYN,
uld.OWNER_ID as ownerId,
uld.LOCKED as lokStatus,
uld.LOCK_RQS as lokYN,
uld.HANDLING_MODE as hdlgMode, 
uld.GEN_RMK as genRem,
uld.DAM_RMK as damRem,
uld.GEN_RMK as oldGenRem,
uld.DAM_RMK as oldDamRem,
to_char(uld.LM_DATE,'DDMONYY HH24:MI:SS') as modifiedDate,
DECODE(FUN_GET_ULD_STATE(uld.uld_key),'AL',TRIM(uld.LOAD_TYPE),'') as loadType,
DECODE(TRIM(TO_CHAR(NVL(REF_WT,0), '9999999990D9')),'0.0','',TRIM(TO_CHAR(NVL(REF_WT,0), '9999999990D9'))) AS oldrefWt,
DECODE(TRIM(TO_CHAR(NVL(REF_WT,0), '9999999990D9')),'0.0','',TRIM(TO_CHAR(NVL(REF_WT,0), '9999999990D9'))) AS refWt
from uld_inventory uld
where uld_KEY=#uldKey# 
	]]>	
</select>
<select id="emableEmptyForImportUld" parameterClass="java.lang.String" 
	resultClass="java.lang.Integer">
	  select  count(1)  from imp_ramp_chk_dtl ircd 
			  join uld_inventory uld on uld.uld_key = ircd.uld_key and nvl(uld.flt_key,uld.Imp_flt_key) = ircd.flt_key and nvl(uld.flt_date,uld.Imp_flt_date) = ircd.flt_date
			  							and nvl(ircd.empty_ind,'N') = 'N'
			  where uld.uld_key = #uldKey# and nvl(uld.uld_flow,'I') = 'I'
</select>	

<select id="emableEmptyForImportUld1" parameterClass="java.lang.String" 
	resultClass="java.lang.Integer">
	  select  count(1)  from imp_ramp_chk_dtl ircd 
			  join uld_inventory uld on uld.uld_key = ircd.uld_key and nvl(uld.flt_key,uld.Imp_flt_key) = ircd.flt_key and nvl(uld.flt_date,uld.Imp_flt_date) = ircd.flt_date
			  							and nvl(ircd.empty_ind,'N') = 'N' and ircd.brkdn_compl_date is not null
			  where uld.uld_key = #uldKey# and nvl(uld.uld_flow,'I') = 'I'
			  
</select>	

<select id="emableEmptyForExportUld" parameterClass="java.lang.String" 
	resultClass="java.lang.Integer">
	select count(1) from uld_inventory uld 
	join exp_offload_uld eou on uld.uld_key = eou.uld_bt_no and uld.flt_key = eou.flt_key and uld.flt_date = eou.flt_date
	where uld.uld_key = #uldKey# and nvl(uld.uld_flow,'E') = 'E'
	
</select>	

<select id="emableEmptyForExportUld1" parameterClass="java.lang.String" 
	resultClass="java.lang.Integer">
	select count(1) from uld_inventory uld 
	join exp_offload_uld eou on uld.uld_key = eou.uld_bt_no and uld.flt_key = eou.flt_key and uld.flt_date = eou.flt_date
	where uld.uld_key = #uldKey# and nvl(confirmed_yn,'N') = 'Y' and nvl(uld.uld_flow,'E') = 'E'
</select>	


<update id="sqlUpdateUldStorage" parameterClass="cargo.cms.uld.bo.ULDEICBO">
	UPDATE ULD_INVENTORY 
	SET 
	   LOC_CODE = #locCode#, 
	   EIC_FLG = #eicFLG#, 
	   EMPTY_FLG = nvl(#emptyYN#,EMPTY_FLG), 
	   SURP_I = #spInd#, 
	   DAM_IND= nvl(#damYN#,DAM_IND),	   
	   <isEqual  property="callFrom"  compareValue="desktop">
	   SER_IND=#serYN#,
	   </isEqual>		
	   OWNER_ID = #ownerId#,
	   LOCK_RQS=#lokYN#,	   
	   <isEqual  property="emptyYN"  compareValue="Y">
	    HANDLING_MODE = '',
	   </isEqual>		   
	   <isNotEqual  property="emptyYN"  compareValue="Y">
	    HANDLING_MODE=DECODE(HANDLING_MODE,'DT','DT',#hdlgMode#),
	   </isNotEqual>
	   GEN_RMK = #genRem#, 
	   DAM_RMK = #damRem#,
	   LM_USER_ID = #userId#, 
	   LM_DATE = SYSDATE,
	   REF_TR_NO = #uldKey#,
	   REF_DOC_LINE_NO = '1',
	   REF_TR_TYPE = 'AU',
	   REF_TR_EVENT = 'AU',
	   REF_TR_DATE = SYSDATE, 
	   REF_OUT_CARR = #uldCarr#, 
	   REF_RMK = #genRem#,
	   TR_TYPE = #trtype#,
	   LOAD_TYPE = #loadType#,
	   ULDENTRY_MSG_RCVD_YN = NVL(#turnOffUldEntryMessageIndicator#, ULDENTRY_MSG_RCVD_YN)
	   <isEqual  property="updTargetFlg"  compareValue="Y">
	    ,TARGET = null
	   </isEqual>	   
	   <isEqual  property="eicFLG"  compareValue="N">
	    ,EIC_TYPE=NULL,BASE_PLT=NULL 
	   </isEqual>	 
	   <isEqual  property="updtareWtInd"  compareValue="Y">
	   <isEqual  property="updRefWt"  compareValue="Y">
		   	,REF_WT = #refWt#
			,REF_NET_WT = (#refWt# - NVL(#tareWt#,0) )
		   	,tare_weight = NVL(#tareWt#,0)
		</isEqual>
		</isEqual>
	    <isNotEqual  property="updtareWtInd"  compareValue="Y">
	   <isEqual  property="updRefWt"  compareValue="Y">
		,REF_WT = #refWt#
		,REF_NET_WT = (#refWt# - NVL(TARE_WEIGHT,0) )
		</isEqual>
		</isNotEqual>	 
		<isEqual  property="updRefWtNull"  compareValue="Y">
		,REF_WT = ''
		,REF_NET_WT = ''
		</isEqual>
	   WHERE ULD_KEY = #uldKey#
</update>


<update id="sqlUpdateTopPalletLoc" parameterClass="cargo.cms.uld.bo.ULDEICBO">
	UPDATE ULD_INVENTORY 
	SET 
	   LOC_CODE = #locCode#, 
	   LM_USER_ID = #userId#, 
	   LM_DATE = SYSDATE,
	   REF_TR_NO = #uldKey#,
	   REF_DOC_LINE_NO = '1',
	   REF_TR_TYPE = 'AU',
	   REF_TR_DATE = SYSDATE, 
	   REF_OUT_CARR = #uldCarr#, 
	   REF_RMK = #genRem#,
	   TR_TYPE = #trtype# 
	WHERE base_plt = #uldKey#
</update>

<update id="sqlUpdateShipments" parameterClass="cargo.cms.uld.bo.ULDEICBO">
	UPDATE AWB_INVENTORY 
	SET 
	   LOC_CODE = #locCode#, 
	   LM_USER_ID = #userId#, 
	   LM_DATE = SYSDATE,
	   REF_TR_NO = #uldKey#,
	   REF_DOC_LINE_NO = '1',
	   REF_TR_TYPE = 'AU',
	   REF_TR_DATE = SYSDATE, 
	   REF_RMK = #genRem#
	WHERE uld_key = #uldKey#
</update>

<update id="sqlUpdateAsvShpDtlsforHAWB" parameterClass="cargo.cms.uld.bo.ULDEICBO">
	UPDATE ASV_INVENTORY 
	SET 
	   LOC_CODE = #locCode#, 
	   LM_USER_ID = #userId#, 
	   LM_DATE = SYSDATE
	WHERE uld_key = #uldKey#
</update>

<update id="sqlUpdateSrfShipments" parameterClass="cargo.cms.uld.bo.ULDEICBO">
	UPDATE imp_srf_awb_inventory 
	SET 
	   LOC_CODE = #locCode#, 
	   LM_USER_ID = #userId#, 
	   LM_DATE = SYSDATE
	WHERE uld_key = #uldKey#
</update>

<select id="topPalletPS"  parameterClass="java.lang.String" resultClass="java.lang.Integer">
		SELECT count(1) FROM ULD_INVENTORY WHERE ULD_KEY = UPPER(#uldKey#) and EIC_FLG='Y' and EIC_TYPE='PS' and BASE_PAL_FLG='N'
</select>	

<select id="topPalletEIC"  parameterClass="java.lang.String" resultClass="java.lang.Integer">
	<![CDATA[
		SELECT count(1) FROM ULD_INVENTORY WHERE ULD_KEY = UPPER(#uldKey#) and EIC_FLG='Y' and (EIC_TYPE is null or EIC_TYPE <>'PS') and BASE_PAL_FLG='N'
		]]>
</select>

<select id="isBasePalletEIC"  parameterClass="java.lang.String" resultClass="java.lang.Integer">
	<![CDATA[
		SELECT count(1) FROM ULD_INVENTORY WHERE ULD_KEY = UPPER(#uldKey#) and EIC_FLG='Y' and (EIC_TYPE is null or EIC_TYPE <>'PS') and NVL(BASE_PAL_FLG,'N')='Y'
		]]>
</select>

<!--  Changed for QR
<select id="validateLoc"  parameterClass="java.lang.String" resultClass="java.lang.Integer">
	<![CDATA[
		SELECT count(1)
			FROM MAST_WH_LOC
		WHERE CODE = upper(#locCode#)
		]]>
</select> -->

<select id="basePalletEIC"  parameterClass="java.lang.String" resultClass="java.lang.Integer">
	select count(1) from MAST_WH_LOC t1, mast_wh_group t2,uld_inventory u
	where t1.code=u.loc_code
	and t1.wh_group = t2.WH_GROUP 
    and t2.wh_type = 'MHS'
    and u.uld_key = UPPER(#uldKey#)
    and u.eic_flg='Y'
    and u.base_pal_flg='Y'
</select>
<select id="chkUldExt"  parameterClass="java.lang.String" resultClass="java.lang.Integer">
<![CDATA[
		SELECT count(1) FROM ULD_INVENTORY WHERE ULD_KEY = UPPER(#uldKey#) and OWNED_INV='Y' and LOC_CODE IS NOT NULL
		]]>
</select>
<select id="uldinMHS"  parameterClass="java.lang.String" resultClass="java.lang.Integer">
	select count(1) from MAST_WH_LOC t1, mast_wh_group t2,uld_inventory u
	where t1.code=u.loc_code
	and t1.wh_group = t2.WH_GROUP 
    and t2.wh_type = 'MHS'
    and u.uld_key = UPPER(#uldKey#)
</select>
<select id="lspinMHS"  parameterClass="java.lang.String" resultClass="java.lang.Integer">
	select count(1) from MAST_WH_LOC t1, mast_wh_group t2,lsp_inventory l
	where t1.code=l.loc_code
	and t1.wh_group = t2.WH_GROUP 
    and t2.wh_type = 'MHS'
    and l.LSP_NO = UPPER(#lspNo#)
</select>
<update id="sqlUpdateMovOrder" parameterClass="cargo.cms.uld.bo.ULDEICBO">
<![CDATA[
		UPDATE rtrv_move_order
		SET status='COMPLETED',
		LM_USER_ID=#userId#,
		LM_DATE=sysdate
		where ULD = UPPER(#uldKey#)
		AND (status IS NULL OR(status <> 'E' AND status <>'CANCELLED' AND status <>'TIMEOUT'))
		
]]>
</update>
<select id="sqlUldImageList"  parameterClass="java.lang.String" resultClass="cargo.cms.uld.bo.ULDEICBO">
	select IMG_NAME imgName, (IMG_PATH||IMG_NAME) imgPath from FW_IMAGE_STORE  where IMG_SESSION_ID=#transactionId# and IMG_UPLOAD_DATE is not null
</select>

<select id="sqlULDShipmentCount"  parameterClass="java.lang.String" resultClass="java.lang.Integer">
		SELECT count(1) FROM AWB_INVENTORY WHERE uld_key = UPPER(#uld_key#) 
</select>
<select id="sqlULDTransferTypeCount"  parameterClass="java.lang.String" resultClass="java.lang.Integer">
		SELECT count(1) FROM ULD_INVENTORY WHERE uld_key = UPPER(#uld_key#) AND TRANSIT_TYPE IN ('TT','IF')
</select>
<!-- Queries for Requesting LSP, validation for qty rule configred Starts :: Anup -->
	<select id="sqlReqEmptyLSPConfig" parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT RULE_VALUE as rulevalue FROM CMSRULES WHERE RULE_CODE=#PARAM#
	</select>
<!-- Queries for Requesting LSP, validation for qty rule configred Ends :: Anup -->
	
<!-- Amend ULD storage ends -->
<!-- Amend LSP storage Starts -->
<select id="sqlValidLSP"  parameterClass="java.lang.String" resultClass="java.lang.Integer">
		SELECT count(1) FROM LSP_INVENTORY WHERE LSP_NO = UPPER(#lspNo#) and LOC_CODE IS NOT NULL
</select>

<select id="getShpmntCount"  parameterClass="cargo.cms.imprt.bo.LSPStorageBO" resultClass="java.lang.Integer">
		SELECT count(1) FROM AWB_INVENTORY WHERE LSP_NO = UPPER(#lspNumber#) 
</select>
<select id="getHAWBShpCount" parameterClass="cargo.cms.imprt.bo.LSPStorageBO" resultClass="java.lang.Integer">
	SELECT count(1) FROM ASV_INVENTORY WHERE LSP_NO = UPPER(#lspNumber#)
</select>

<select id="getAmendLSPStorage"  parameterClass="java.lang.String" resultClass="cargo.cms.imprt.bo.LSPStorageBO">
		select lsp_no lspNumber,
		target target,
		loc_code locCode ,
		loc_code locCodeOld,
		EMPTY_FLG emptyInd,
		locked lockStatus,
		lock_rqs lockInd,
		to_char(LM_DATE,'DDMONYY HH24MISS') lmDate,
		DECODE(TRIM(TO_CHAR(NVL(REF_WT,0), '9999999990D9')),'0.0','',TRIM(TO_CHAR(NVL(REF_WT,0), '9999999990D9'))) as oldrefWt,
		DECODE(TRIM(TO_CHAR(NVL(REF_WT,0), '9999999990D9')),'0.0','',TRIM(TO_CHAR(NVL(REF_WT,0), '9999999990D9'))) as refWt
		from lsp_inventory
		where lsp_no=#lspNo#
</select>


<update id="updateLSPStorage" parameterClass="cargo.cms.imprt.bo.LSPStorageBO">
update LSP_INVENTORY
set 
	EMPTY_FLG=#emptyInd#,
	LOC_CODE=#locCode#,
	LOCK_RQS=#lockInd#,
	LM_USER_ID=#userId#,
	LM_DATE=SYSDATE,
	REF_TR_NO=#lspNumber#,
	REF_TR_TYPE='AL',
	REF_TR_EVENT = 'AL',
	REF_TR_DATE=SYSDATE,
	REF_DOC_LINE_NO='1',
	STRG_DATE = sysdate,
	tr_type=#trtype#
	<isEqual  property="movOrderFlg"  compareValue="Y">
	 ,TARGET = null
	</isEqual>
	<isEqual  property="turnOffEntryIndicator"  compareValue="Y">
	 ,BINENTRY_MSG_RCVD_YN = 'N'
	</isEqual>
	<isEqual  property="updRefWt"  compareValue="Y">
	,REF_WT = #refWt#
	,REF_NET_WT = (#refWt# - NVL((select TARE_WT FROM mast_csd where CODE = #lspNumber#),0) )
	</isEqual>
	<isEqual  property="updRefWtNull"  compareValue="Y">
	,REF_WT = ''
	,REF_NET_WT = ''
	</isEqual>
	where LSP_NO=#lspNumber#
</update>
<update id="updateColdBoxStorage" parameterClass="cargo.cms.imprt.bo.LSPStorageBO">
UPDATE COLD_BOX_PROFILE SET LOC_CODE=#locCode#	WHERE COLD_BOX=#lspNumber# AND NVL(DEL_YN,'N')='N'
</update>
<update id="updateLSPMovOrder" parameterClass="cargo.cms.imprt.bo.LSPStorageBO">
<![CDATA[
		UPDATE rtrv_move_order
		SET status='COMPLETED' , LM_DATE = SYSDATE
		where LSP = UPPER(#lspNumber#)
		AND (status IS NULL OR(status <> 'E' AND status <>'CANCELLED'))
]]>
</update>
<update id="updateLSPShpmnt" parameterClass="cargo.cms.imprt.bo.LSPStorageBO">
UPDATE AWB_INVENTORY 
	SET 
	   LOC_CODE = #locCode#, 
	   LM_USER_ID = #userId#, 
	   LM_DATE = SYSDATE,
	   REF_TR_NO = #lspNumber#,
	   REF_DOC_LINE_NO = '1',
	   REF_TR_TYPE = 'AL',
	   REF_TR_DATE = SYSDATE
	WHERE LSP_NO = #lspNumber#
</update>
<update id="updateLSPASVShpforHAWB" parameterClass="cargo.cms.imprt.bo.LSPStorageBO">
UPDATE ASV_INVENTORY 
	SET 
	   LOC_CODE = #locCode#, 
	   LM_USER_ID = #userId#, 
	   LM_DATE = SYSDATE
	WHERE LSP_NO = #lspNumber#
</update>
<update id="updateLSPSrfShpmnt" parameterClass="cargo.cms.imprt.bo.LSPStorageBO">
UPDATE imp_srf_awb_inventory 
	SET 
	   LOC_CODE = #locCode#, 
	   LM_USER_ID = #userId#, 
	   LM_DATE = SYSDATE,
	   TR_TYPE = #trtype#
	WHERE LSP_NO = #lspNumber#
	  and srf_no in (select srf_no from awb_inventory ai where ai.lsp_no =#lspNumber# and ai.srf_no is not null)
</update>
<!-- Amend LSP storage ends -->
<!-- Added by yugandhar for Amend OBC CAR -->
 	<select id="imp_xom_getAWBNoListByFlightInfo" parameterClass="map"
		resultClass="cargo.cms.imprt.bo.FullAWBInfoBO">
		SELECT
			ICA.AWB_NO as awbNo,
			ICA.AWB_ORIGIN as orig,
			ICA.AWB_DEST as dest,
			ICA.AWB_PCS as pcs,
			ICA.AWB_WT as wt,
			ICA.SPL_CODE1 as splCode1,
			ICA.SPL_CODE2 as splCode2,
			ICA.SPL_CODE3 as splCode3,
			ICA.SPL_CODE4 as splCode4,
			ICA.SPL_CODE5 as splCode5,
			ICA.SPL_CODE6 as splCode6,
			ICA.SPL_CODE7 as splCode7,
			ICA.SPL_CODE8 as splCode8,
			ICA.SPL_CODE9 as splCode9,
			ICA.CONTENT as content,
			ICA.CC_CODE as ccCode,
			ICA.CATALOG as catalog,
			ICA.ECT_HANDLER as ectHandler,
			ICA.CSGNE_NAME as csgneName,
            ICA.CNS_CUST_NO as cnsCustNo,
			ICA.APPNTD_AGENT as appntdAgent,
            ICA.AGENT_CUST_NO as appntdAgentCode,
            ICA.SHPR_NAME as shipper,
            ICA.OBC_TYPE as obctype,
			ICS.LDG_POINT as ldgPoint,
			ICS.MANIFEST_PCS as manifestPcs,
			ICS.MANIFEST_WT as manifestWt,
			ICS.CNTG_FLT_CARR as cntgFltCarr,
			TO_CHAR(ICS.CNTG_FLT_DATE,'DDMONYY') as cntgFltDate,
			ICS.CNTG_FLT_DEST as cntgFltDest,
			ICS.CNTG_FLT_NO as cntgFltNo,
			ICS.CNTG_FLT_TIME as cntgFltTime,
			TO_CHAR(ICS.FLT_DATE, 'DDMONYY') as fltDate,
			ICS.FLT_KEY as fltKey,
			TO_CHAR(ICS.AWB_DATE, 'DDMONYY') as awbDate,
			TO_CHAR(ICA.LM_DATE,'DDMONYY HH24:MI') AS lmDate,
			ICA.AIRLN_RMK rmk,
			ICA.AIRLN_RMK oldRmk
		FROM
            IMP_CAR_AWB ICA 
            JOIN IMP_CAR_SHP ICS ON ICS.AWB_NO = ICA.AWB_NO AND ICS.AWB_DATE = ICA.AWB_DATE 
         	<!-- LEFT join IMP_XPS_OBC_MAIL IXOM on   IXOM.FLT_KEY = ICS.FLT_KEY and IXOM.FLT_DATE = ICS.FLT_DATE
            and IXOM.AWB_NO = ICS.AWB_NO and IXOM.AWB_DATE = ICS.AWB_DATE
            AND IXOM.CATALOG = 'IO' -->
		WHERE
			ICS.FLT_KEY = #fltKey# AND
			ICS.FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
			ICA.CATALOG = #catalog# AND
			ICA.AWB_NO LIKE #awbNo# AND
			EXISTS (SELECT NULL FROM IMP_XPS_OBC_MAIL IXOM  WHERE   IXOM.FLT_KEY = ICS.FLT_KEY and IXOM.FLT_DATE = ICS.FLT_DATE
            and IXOM.AWB_NO = ICS.AWB_NO and IXOM.AWB_DATE = ICS.AWB_DATE
            AND IXOM.CATALOG = 'IO')
			ORDER BY ICA.AWB_NO asc
	</select>
	
	<select id="imp_xom_getOBCByAWB" parameterClass="map"
		resultClass="cargo.cms.imprt.bo.ImpXomBO">
		SELECT
		 	CATALOG as catalog,
		 	FLT_TYPE as fltType,
		 	FLT_KEY as fltKey,
		 	FLT_DATE as fltDate,
			AWB_NO as awbNo, 
			AWB_DATE as awbDate, 
			TAG_NO as tagNo, 
			LSP_NO as lspNo, 
			ACT_PCS as actPcs, 
			ACT_WT as actWt,
			EST_PCS as estPcs,
			EST_WT as estWt,
			ORIG as orig, 
			DEST as dest, 
			LOCN as locn, 
			ULD_KEY uldKey, 
			DAM_IND as damInd, 
			RMK as rmk, 
			BD_ULD_KEY as bduldno,
			CR_USER_ID as crUserId, 
			CR_DATE as crDate, 
			LM_USER_ID as lmUserId,
			TO_CHAR(LM_DATE,'DDMONYY HH24:MI') AS lmDate
		FROM 
			IMP_XPS_OBC_MAIL
		WHERE
			FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
			FLT_KEY = #fltKey# AND
			FLT_TYPE = 'I' AND
			CATALOG = 'IO' AND
			(AWB_NO IS NULL OR TRIM(AWB_NO) = '' OR AWB_NO = #awbNo#)
		ORDER BY
			tagNo asc
	</select>
	<select id="imp_xom_getAgentCodeDesc" parameterClass="map"
		resultClass="java.lang.String">
		SELECT
			CODE_DESC 
		FROM 
			CUST_COMPANY
		WHERE 
			AGENT_YN = 'Y' AND 
			CODE = #code#
	</select>
	<select id="imp_xom_getConsigneeCodeDesc" parameterClass="map"
		resultClass="java.lang.String">
		SELECT
			CODE_DESC
		FROM 
			CUST_COMPANY
		WHERE 
			CONS_YN = 'Y' AND 
			CODE = #code#
	</select>

	<select id="imp_xom_fetchAgentCodeDesc" parameterClass="map" resultClass="cargo.cms.imprt.bo.FullAWBInfoBO">
		SELECT
			CODE_DESC as appntdAgent,CODE as appntdAgentCode 
		FROM 
			CUST_COMPANY
		WHERE 
			AGENT_YN = 'Y'  AND
			CODE = #code#
			
	</select>
	<select id="imp_xom_fetchAgentCode" parameterClass="map" resultClass="cargo.cms.imprt.bo.FullAWBInfoBO">
		SELECT
			CODE as appntdAgentCode,CODE_DESC as appntdAgent
		FROM  
			CUST_COMPANY
		WHERE 
			AGENT_YN = 'Y'  AND
			CODE_DESC = #codeDesc#
	</select>
	<select id="imp_xom_fetchConsigneeCodeDesc" parameterClass="map" resultClass="cargo.cms.imprt.bo.FullAWBInfoBO">
		SELECT
			CODE_DESC as csgneName,CODE as cnsCustNo
		FROM 
			CUST_COMPANY
		WHERE 
			CONS_YN = 'Y' AND
			CODE = #code#
	</select>
	<select id="imp_xom_fetchConsigneeCode" parameterClass="map" resultClass="cargo.cms.imprt.bo.FullAWBInfoBO">
		SELECT
			CODE as cnsCustNo,CODE_DESC as csgneName
		FROM 
			CUST_COMPANY
		WHERE 
			CONS_YN = 'Y' AND 
			CODE_DESC = #codeDesc#
	</select>
	
	<update id="imp_xom_updateAWBCarShp" parameterClass="cargo.cms.imprt.bo.FullAWBInfoBO">
		UPDATE IMP_CAR_SHP SET 
			LDG_POINT = #ldgPoint#,
			MANIFEST_PCS = #manifestPcs#,
			MANIFEST_WT = #manifestWt#,
			CNTG_FLT_CARR = #cntgFltCarr#,
			CNTG_FLT_NO = #cntgFltNo#,
			CNTG_FLT_DEST = #cntgFltDest#,
			CNTG_FLT_TIME = #cntgFltTime#,
			CNTG_FLT_DATE = TO_DATE(#cntgFltDate#,'DDMONYY'),
			LM_USER_ID  = #lmUserId#,	    
			LM_DATE = sysdate 
		 WHERE
			FLT_KEY = #fltKey# AND
			FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
			AWB_NO = #awbNo# AND
			AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
	</update>

	<update id="imp_xom_updateAWBCarShpOBC" parameterClass="cargo.cms.imprt.bo.FullAWBInfoBO">
		UPDATE IMP_CAR_SHP SET 
			LDG_POINT = #ldgPoint#,
			MANIFEST_PCS = #manifestPcs#,
			MANIFEST_WT = #manifestWt#,
			BULK_PCS =#pcs#,
			BULK_WT =#wt#,
			RECD_PCS =#pcs#,
			RECD_WT =#wt#,
			LM_USER_ID  = #lmUserId#,	    
			LM_DATE = sysdate 
		 WHERE
			FLT_KEY = #fltKey# AND
			FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
			AWB_NO = #awbNo# AND
			AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
	</update>
	
	<!--<update id="imp_xom_updateAWBCarAWB" parameterClass="cargo.cms.imprt.bo.FullAWBInfoBO">
		UPDATE IMP_CAR_AWB SET 
			AWB_ORIGIN = #orig#,
			AWB_DEST = #dest#,
			AWB_PCS = #pcs#,
			AWB_WT = #wt#,
			AWB_RMK = #rmk#,
			SPL_CODE1 = #splCode1#,
			SPL_CODE2 = #splCode2#,
			SPL_CODE3 = #splCode3#,
			SPL_CODE4 = #splCode4#,
			SPL_CODE5 = #splCode5#,
			SPL_CODE6 = #splCode6#,
			SPL_CODE7 = #splCode7#,
			SPL_CODE8 = #splCode8#,
			SPL_CODE9 = #splCode9#,
			CONTENT = #content#,
			CC_CODE = #ccCode#,
			LM_USER_ID  = #lmUserId#,
			LM_DATE = sysdate 
		 WHERE
			AWB_NO = #awbNo# AND
			AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
	</update>-->

	<update id="imp_xom_updateAWBCarAWBOBC" parameterClass="cargo.cms.imprt.bo.FullAWBInfoBO">
		UPDATE IMP_CAR_AWB SET 
			AWB_ORIGIN = #orig#,
			AWB_DEST = #dest#,
			AWB_PCS = #pcs#,
			AWB_WT = #wt#,
			AIRLN_RMK = #rmk#,
			BULK_PCS =#pcs#,
			BULK_WT =#wt#,
			ECT_HANDLER = #ectHandler#,
			AGENT_CUST_NO =#appntdAgentCode#,
			APPNTD_AGENT = #appntdAgent#,
			CNS_CUST_NO = #cnsCustNo#,
			CSGNE_NAME = #csgneName#,
			SPL_CODE1 = #splCode1#,
			SPL_CODE2 = #splCode2#,
			SPL_CODE3 = #splCode3#,
			SPL_CODE4 = #splCode4#,
			SPL_CODE5 = #splCode5#,
			SPL_CODE6 = #splCode6#,
			SPL_CODE7 = #splCode7#,
			SPL_CODE8 = #splCode8#,
			SPL_CODE9 = #splCode9#,
			CONTENT = #content#,
			CC_CODE = #ccCode#,
			SHPR_NAME = #shipper#,
			OBC_TYPE = #obctype#,
			LM_USER_ID  = #lmUserId#,
			LM_DATE = sysdate 
		 WHERE
			AWB_NO = #awbNo# AND
			AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
	</update>
	<insert id="imp_insertAWBEventsIO" parameterClass="cargo.cms.imprt.bo.FullAWBInfoBO">
        INSERT INTO AWB_EVENTS 
	  (AWB_NO, AWB_DATE, EVENT_ID, EVENT_DESC, FLT_KEY, FLT_DATE,
	  FLT_TYPE, TR_NO, ULD_KEY, PCS, WT, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE ) 
	   VALUES  
	  (#awbNo#,  TO_DATE(#awbDate#,'DDMONYY'), 'ADIOCAR', 'Amend Dummy IO CAR', #fltKey#,  TO_DATE(#fltDate#,'DDMONYY'), 
	  'I', AWB_event_SEQ.nextval
	   , NULL,nvl(#pcs#,0) ,  nvl(#wt#,0) , #lmUserId#,  sysdate, #lmUserId#,  sysdate)
     
    </insert>
    <update id="imp_xom_updateFullAWBForImport" parameterClass="map">
		UPDATE IMP_XPS_OBC_MAIL	SET
			AWB_NO = #awbNo#,
			AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY'),
			AWB_ORIG = #awbOrig#,
			AWB_DEST = #awbDest#,
			ECT_HANDLER = #ectHandler#,
			CNS_CUST_NO = #cnsCustNo#,
			APPNTD_AGENT = #appntdAgent#,
			LM_DATE = sysdate
		WHERE
			FLT_KEY = #fltKey# AND
			FLT_TYPE = 'I' AND
			FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
			CATALOG = #catalog# AND
			TAG_NO = #tagNo#
	</update>
	<update id="imp_xom_removeAWB" parameterClass="java.lang.String">
	     UPDATE IMP_XPS_OBC_MAIL	SET
			AWB_NO = '',
			AWB_DATE=''
		    WHERE
			TAG_NO = #tagNo#
	</update>
	<update id="imp_xom_amendAWBToAwbInventory" parameterClass="cargo.cms.imprt.bo.FullAWBInfoBO">
		UPDATE AWB_INVENTORY SET
		LM_DATE = SYSDATE,
		LOCN_PCS = #pcs#, 
		LOCN_WT = #wt#,
		BULK_WT = #wt#,
		LM_USER_ID = #lmUserId#
		WHERE
		AWB_NO = #awbNo# AND
		TO_CHAR(AWB_DATE,'DDMONYY') = TO_DATE(#awbDate#)
		<isNotEmpty prepend="AND" property="seqNo">
			SEQ_NO = #seqNo# 
		</isNotEmpty>
		
	</update>
	<update id="imp_Amend_xom_updateAWBToAwb" parameterClass="map">
		UPDATE AWB SET
		LM_DATE = SYSDATE,
		MANIFEST_PCS = #totalPcs#, 
		MANIFEST_WT = #totalWt# ,
		PCS =#totalPcs#,
		WT =#totalWt#,
		LM_USER_ID = #lmUserId#,
		AGENT_NAME = #agentName#,
		SHIPPER_NAME = #shipperName#,
		AGENT_CODE = #agentcode#,
		SPL_CODE1 = #spl1#,
		SPL_CODE2 = #spl2#,
		SPL_CODE3 = #spl3#,
		SPL_CODE4 = #spl4#,
		SPL_CODE5 = #spl5#,
		SPL_CODE6 = #spl6#,
		SPL_CODE7 = #spl7#,
		SPL_CODE8 = #spl8#,
		TR_TYPE=#trType#,
		SPL_CODE9 = #spl9#
		WHERE
		AWB_NO = #awbNo#  AND
		TO_CHAR(AWB_DATE,'DDMONYY') = TO_DATE(#awbDate#)
	</update>

<!-- ##################### Close/UnClose Flight  : Start   :Santosh    ###############################################-->	

	<select id="importcloseflightsearch"  parameterClass="cargo.cms.imprt.bo.FlightBO" 
	 resultClass="cargo.cms.imprt.bo.FlightBO"> 
	SELECT  
		A.TR_NO trNo,B.FLT_KEY flightKey,
		TO_CHAR(B.SCH_DATE,'DDMONYY') flightDate,
		PKG_COMMON.get_flt_ata(B.FLT_KEY, B.SCH_DATE, 'A') AS ata,
		TO_CHAR(B.RAMP_COMPL_DATE,'DDMONYY') as rmpComplDate, ltrim(SUBSTR(TRIM(TO_CHAR(B.RAMP_COMPL_TIME,'0000')),0,2)|| ':'|| SUBSTR(TRIM(TO_CHAR(B.RAMP_COMPL_TIME,'0000')),3,2),':') rmpComplTime, 
		TO_CHAR(B.DOC_COMPL_DATE,'DDMONYY') as docComplDate, ltrim(SUBSTR(TRIM(TO_CHAR(B.DOC_COMPL_TIME,'0000')),0,2)|| ':'|| SUBSTR(TRIM(TO_CHAR(B.DOC_COMPL_TIME,'0000')),3,2),':') docComplTime,
		TO_CHAR(B.WHSE_COMPL_DATE,'DDMONYY') as bdComplDate, ltrim(SUBSTR(TRIM(TO_CHAR(B.WHSE_COMPL_TIME,'0000')),0,2)|| ':'|| SUBSTR(TRIM(TO_CHAR(B.WHSE_COMPL_TIME,'0000')),3,2),':') bdComplTime,
		TO_CHAR(B.FLT_CLS_DATE,'DDMONYY') as fltClsDate, ltrim(SUBSTR(TRIM(TO_CHAR(B.FLT_CLS_TIME,'0000')),0,2)|| ':'|| SUBSTR(TRIM(TO_CHAR(B.FLT_CLS_TIME,'0000')),3,2),':') fltClsTime,
		B.FLT_CLS_USER_ID fltClsStfId, B.UNCLOSE_RMK unClsRmk
	FROM  FLT_OPR A , FLT_OPR_EVENTS B  
	WHERE A.CARR_CODE=B.CARR_CODE 
		AND	A.FLT_NO=B.FLT_NO
		AND	A.SCH_DATE = B.SCH_DATE 
		AND A.FLT_TYPE = B.FLT_TYPE
		AND	B.FLT_TYPE ='A' 
		AND	B.CARR_CODE=NVL(#carrierCode#, B.CARR_CODE)
		AND	B.FLT_NO=NVL(#flightNo#, B.FLT_NO)
		AND	B.SCH_DATE=TO_DATE(#flightDate#,'DDMONYY')
	ORDER BY TO_CHAR(A.SCH_TIME,'0000')
	</select>
	
	
	<update id="updateflightclose" parameterClass="cargo.cms.imprt.bo.FlightBO">
	UPDATE 
			FLT_OPR_EVENTS 
	SET 
			FLT_CLS_DATE = SYSDATE,
			FLT_CLS_TIME = TO_CHAR(SYSDATE,'HH24MI'),
			FLT_CLS_YN	 ='Y',
			FLT_CLS_USER_ID	= #fltClsStfId#,
			UNCLOSE_RMK = '',
			<!-- UNCLOSE_RMK = NVL(#unClsRmk#, UNCLOSE_RMK),-->
			LM_USER_ID= #fltClsStfId#, 
			LM_DATE = SYSDATE,
			TR_TYPE='CLFLT'
	WHERE	TR_NO=#trNo#
	</update>
	
	<update id="updateActualDateForDummyFltimp" parameterClass="cargo.cms.imprt.bo.FlightBO">
		UPDATE flt_opr set act_date = sch_date, act_time = sch_time , LM_USER_ID= 'SYSTEM' , LM_DATE = SYSDATE , tr_type = 'MTDFL' where TR_NO = #trNo#
		AND EXISTS (SELECT NULL FROM mast_carrier where nvl(dummy_carr,'N') = 'Y' AND code = flt_opr.carr_code) 
	</update>
	
	<insert id="insrrecrdtofltoprlogforimport" parameterClass="cargo.cms.imprt.bo.FlightBO">
	insert into flt_opr_log (FLT_KEY,SCH_DATE,FLT_TYPE,EVENT,CR_DATE,CR_USER_ID) VALUES (#flightKey#,#flightDate#,'A',UPPER(#action#),SYSDATE,#fltClsStfId#)
	</insert>
	
	<update id="updateflightunclose" parameterClass="cargo.cms.imprt.bo.FlightBO">
	UPDATE 
				FLT_OPR_EVENTS 
	SET 
				FLT_CLS_DATE = '',
				FLT_CLS_TIME='',
				FLT_CLS_YN='N',
				FLT_CLS_USER_ID='',
				UNCLOSE_RMK=#unClsRmk#,
				LM_USER_ID= #fltClsStfId#, 
				LM_DATE = SYSDATE,
				TR_TYPE='UCFLT'
	WHERE
				TR_NO=#trNo#
	</update>
	
	<update id="updateDCEndroseInFltOprEvnts" parameterClass="java.util.HashMap">
		UPDATE FLT_OPR_EVENTS SET ENDORSED_DC_BY=#endrDCBy#, ENDORSED_DC_DATE=SYSDATE WHERE TR_NO=#trNo#
	</update>

	<!-- if count(1) > 0 then err: 'Cannot close flight as CIR is not maintained' and not exists (SELECT null FROM V_DDT_DTL 
		WHERE FLT_KEY = c.Flt_KEY 
		AND FLT_DATE = c.FLT_DATE 
		AND AWB_NO = c.awb_no 
		AND AWB_DATE = c.AWB_DATE 
		AND shp_trf_type in ('TT','IF'))	 -->
	<select id="imp_CIRValidate"  parameterClass="map"  resultClass="java.lang.Integer">
	<![CDATA[
		select count(1) 
		from Imp_CAR_SHP c
		join IMP_CAR_AWB d on d.AWB_NO = c.AWB_NO and d.AWB_DATE = c.AWB_DATE		
		LEFT JOIN (select nvl(sum(actual_pcs),0) tt_pcs ,  nvl(sum (actual_Wt),0) tt_wt, flt_key, flt_date, awb_NO , awb_date 
						from v_ddt_dtl  where (shp_trf_type = 'TT'  or trf_type = 'IF') GROUP BY flt_key, flt_date, awb_NO, awb_date) ddt 
           			ON c.AWB_NO = ddt.AWB_NO AND c.AWB_DATE = ddt.AWB_DATE AND c.FLT_KEY = ddt.FLT_KEY AND c.FLT_DATE = ddt.FLT_DATE
		where (c.MANIFEST_PCS != (c.RECD_PCS+nvl(tt_pcs,0)) or c.MANIFEST_WT != (c.RECD_WT+nvl(tt_wt,0))) AND CIR_PROC_USER IS NULL 
		AND c.Flt_KEY = #fltkey# and c.FLT_DATE = TO_DATE(#flightDate#,'DDMONYY') 		
		and d.BYPASS_REL != 'Y'			
		]]>
	</select>
	
	<select id="imp_getcargoirrgdiscount"  parameterClass="map"  resultClass="java.lang.Integer">
	<![CDATA[
		select count(1)
		from Imp_CAR_SHP c
		join IMP_CAR_AWB d on d.AWB_NO = c.AWB_NO and d.AWB_DATE = c.AWB_DATE
		where CIR_PROC_USER IS NOT NULL
		AND c.Flt_KEY = #fltkey# and c.FLT_DATE =TO_DATE(#flightDate#,'DDMONYY')
		AND D.CATALOG NOT IN ('TM','IO')
		And not exists 
		(select null from cst_csgnm cn 
		join cst_subm s on cn.flt_key = s.flt_key and cn.flt_date = s.flt_date 
		and cn.flt_type = s.flt_type 
		and cn.recv_rec_type = s.rec_type and cn.ver_no = s.ver_no
		where s.send_status = 'A' and cn.recv_rec_type = 'BDS' And s.msg_type is null
		and cn.flt_type = 'I' 
		and cn.flt_key = c.flt_key 
		and cn.flt_date = c.flt_date 
		and cn.awb_no = c.awb_no)
	]]>
	</select>
	
	<!--  Changed for QR
	<select id="imp_ByPassShpCount"  parameterClass="map"  resultClass="java.lang.Integer">
	<![CDATA[
		select count(1) 
		from Imp_CAR_SHP c
		join IMP_CAR_AWB d on d.AWB_NO = c.AWB_NO and d.AWB_DATE = c.AWB_DATE
		where (c.MANIFEST_PCS != c.RECD_PCS or c.MANIFEST_WT != c.RECD_WT) AND CIR_PROC_USER IS NULL 
		AND c.Flt_KEY = #fltkey# and c.FLT_DATE = TO_DATE(#flightDate#,'DDMONYY') 
		AND d.BYPASS_REL = 'Y'
		]]>
	</select> -->
	
	<!--  Changed for QR
	<select id="imp_gettermaccount"  parameterClass="map"  resultClass="java.lang.Integer">
	<![CDATA[
	select count(1)
    FROM DDT_SHP_TRF_DTL DTL
    JOIN DDT_SHP SHP ON DTL.TR_NO = SHP.TR_NO AND  DTL.SDOC_LINE_NO = SHP.DOC_LINE_NO
    JOIN DDT_MSG MSG ON SHP.TR_NO=MSG.TR_NO AND MSG.FLT_KEY=#fltkey# AND MSG.FLT_DATE = TO_DATE(#flightDate#,'DDMONYY')
    where DTL.TRF_TYPE = 'TT' AND shp.awb_no IN (    
    select  c.awb_no 
	from Imp_CAR_SHP c
	where (c.MANIFEST_PCS != c.RECD_PCS or c.MANIFEST_WT != c.RECD_WT) AND c.CIR_PROC_USER IS NULL
	AND c.Flt_KEY = #fltkey# and c.FLT_DATE = TO_DATE(#flightDate#,'DDMONYY') 
	AND not exists (select null from IMP_CAR_AWB where awb_no = c.awb_no and awb_date = c.awb_date and catalog = 'TA'))	
    ]]>
    </select>	 -->
	 
	<!--  Changed for QR
	<select id="imp_checkForECANFltClose" parameterClass="map"  resultClass="java.lang.Integer">
	<![CDATA[
		select count(1) from imp_flt_fst_events where FST_FLT_CLS_DATE is not null
		and flt_key = #fltkey# and sch_date = to_date(#flightDate#,'DDMONYY') 
		and flt_type = 'A'
	]]>
	</select> -->
	
	<!--  Changed for QR
	<select id="fetchAwbValues"  parameterClass="map" resultClass="cargo.cms.imprt.bo.TrackingBO">		
	<![CDATA[
		SELECT  b.AWB_NO awbNo,To_Char(b.AWB_DATE,'DDMONYY')  awbDate,
		c.FLT_KEY fltKey, To_Char(c.FLT_DATE,'DDMONYY') fltDate , b.PCS qtyTotPcs , b.CARR_CODE carrCode ,
		c.CIR_PCS_TYPE cirPcsType , c.DOC_DISC docDisc 
		FROM AWB b 	, IMP_CAR_SHP c
		where  b.AWB_NO = c.AWB_NO and  b.AWB_DATE = c.AWB_DATE and b.awb_type ='I'	
		and c.FLT_KEY = #fltkey# and  c.FLT_DATE = #flightDate#
		]]>
	</select> -->
	
	<select id="getFsuCheck"  parameterClass="cargo.cms.imprt.bo.TrackingBO" resultClass="java.lang.Integer">			
		<![CDATA[		
		select count(1) from AWB_SHP_STS 
		where 	AWB_NO = #awbNo# AND AWB_DATE =  TO_date(#awbDate#,'DDMONYY')
		AND COD_FSU_STS = #status# 
			]]>
		<isNotEmpty prepend="AND" property="fltKey">
			FLT_NO = #fltKey# 
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="fltDate">
			FLT_DATE = To_Date(#fltDate# , 'DDMONYY')
		</isNotEmpty>
	</select>
	
	<parameterMap id="FSURCFMap" class="map" >	
		<parameter property="AWBNO" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="AWBDATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="FLTKEY" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="FLTDATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="MSG" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
	</parameterMap>
	
	<procedure id="callPkgFsuRcf" parameterMap="FSURCFMap" >
		{call PKG_FSU.FSU_RCF(?,?,?,?,?)}
	</procedure>
	
	<parameterMap id="FSUDISCMap" class="map" >	
		<parameter property="AWBNO" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="AWBDATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="FLTKEY" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="FLTDATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="DISCTYPE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="MSG" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
	</parameterMap>
	<parameterMap id="FSURCTMap" class="map" >	
	<parameter property="AWBNO" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	<parameter property="AWBDATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	<parameter property="AWBTYPE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	<parameter property="MSG" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
	</parameterMap>
	
	<procedure id="callPkgFsuRct" parameterMap="FSURCTMap" >
		{call PKG_FSU.FSU_RCT(?,?,?,?)}
	</procedure>
	<procedure id="callPkgFsuDisc" parameterMap="FSUDISCMap" >
		{call PKG_FSU.FSU_DISC(?,?,?,?,?,?)}
	</procedure>
	<parameterMap id="FSUTFDMap" class="map" >	
		<parameter property="AWBNO" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="AWBDATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="MSG" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
	</parameterMap>
	
	<procedure id="callPkgFsuTfd" parameterMap="FSUTFDMap" >
		{call PKG_FSU.FSU_TFD(?,?,?)}
	</procedure>

	<parameterMap id="FSUNFDMap" class="map" >	
		<parameter property="AWBNO" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="AWBDATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="FLTKEY" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="FLTDATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="MSG" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
	</parameterMap>
	
	<procedure id="callPkgFsuNfd" parameterMap="FSUNFDMap" >
		{call PKG_FSU.FSU_NFD(?,?,?,?,?)}
	</procedure>
	
	<parameterMap id="FSUDLVMap" class="map" >	
		<parameter property="SRFNO" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>	
		<parameter property="MSG" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
	</parameterMap>
	
	<procedure id="callPkgFsuDlv" parameterMap="FSUDLVMap" >
		{call PKG_FSU.FSU_DLV_POST_SRF(?,?)}
	</procedure>
	<select id="fetchSrfValues"  parameterClass="java.lang.String" resultClass="cargo.cms.imprt.bo.TrackingBO">			
		<![CDATA[	
		SELECT a.SRF_NO srfNo, a.AWB_NO awbNo,To_Char(a.AWB_DATE,'DDMONYY')  awbDate,
		a.INV_PCS qtyTotPcs , CIR_PCS_TYPE cirPcsType , DOC_DISC docDisc 
		FROM IMP_SRF_FLT a 
		join AWB b on a.AWB_NO = b.AWB_NO and  a.AWB_DATE = b.AWB_DATE and b.awb_type ='I'
		left join IMP_CAR_SHP c on a.AWB_NO = c.AWB_NO and  a.AWB_DATE = c.AWB_DATE and 
			 	  a.FLT_KEY = c.FLT_KEY and  a.FLT_DATE = c.FLT_DATE
		where a.SRF_No = #srfNo#	 and rownum = 1
		]]>
	</select>
	<select id="srfFsuCheck" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM IMP_SRF WHERE SRF_NO != #srfNo# AND AWB_NO = #awbNo# AND AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
	</select>
	
	<parameterMap id="srfMap" class="map" >
		<parameter property="RESULT" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
		<parameter property="SRFNO" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	</parameterMap>
	
	<procedure id="fun_val_cc_post_srf" parameterMap="srfMap" >
		{ ? = call pkg_imp.fun_val_cc_post_srf(?) }
	</procedure>
	
	<!-- Changed for QR
	<select id="imp_splitFltKeyQuery"  parameterClass="map"  resultClass="cargo.cms.imprt.bo.ShpPndDelivBO">
		select flightKey , flightNo
		from (select f.CARR_CODE flightKey, f.FLT_NO flightNo
		from imp_cdif c
		join imp_srf_flt s on s.srf_no = c.srf_no
		join flt_opr f on f.flt_key = s.flt_key and f.sch_date = s.flt_date and f.flt_type = 'A'
		where c.cdif_no = #FLTKEY# 
		order by flt_date desc) a
		where rownum = 1 
	</select> -->
	
	<parameterMap id="Hmap" class="map" >
		<parameter property="SRFNO" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="FLTKEY" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
		<parameter property="FLTDATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
		<parameter property="CARRCODE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>	
	</parameterMap>
	
	<procedure id="prc_get_srf_flt" parameterMap="Hmap" >
		{call prc_get_srf_flt(?,?,?,?)}
	</procedure>
	
	<!--  Changed for QR 
	<select id="getSrfNoForDHL" parameterClass="map" resultClass="java.lang.String">
		select srf_no from imp_srf where awb_no = #AWBNO# and awb_Date = to_date(#AWBDATE#,'DDMONYY') and STATUS = 'ISSUED'
	</select> -->
	
	
	<insert id="insertAwbShpSts" parameterClass="cargo.cms.imprt.bo.TrackingBO" >
	INSERT INTO AWB_SHP_STS(AWB_NO, AWB_DATE,FLT_NO, FLT_DATE, DAT_FSU_CRE, COD_FSU_STS, COD_FSU_SND, DES_FSU_DTS, QTY_TOT_PCS,COD_FSU_DIS)
	values (#awbNo# , #awbDate# , #fltKey# , #fltDate# ,sysdate , #status# , #codeFsuSend# , #msg# , #qtyTotPcs#,#discType#)
	</insert>

	<!--  Changed for QR 
	<select id="imp_getAgentInfo" parameterClass="cargo.cms.imprt.bo.FlightBO" resultClass="cargo.cms.imprt.bo.MaintainCARBO">	
	<![CDATA[
		 select distinct a.APPNTD_AGENT appointedAgent, a.AGENT_CUST_NO appointedAgentCode , s.CARR_CODE carrCode 
		 from imp_car_awb a 
		 join imp_car_shp s on a.awb_no = s.awb_no and a.awb_date = s.awb_date	
		 where s.flt_key = #flightKey# and s.flt_date = #flightDate#
	 ]]>
	</select> -->
	
	<select id="imp_getBrkDiscCount"  parameterClass="map"  resultClass="java.lang.Integer">	
		Select count(1)
		from CST_BD_DISC
		where FLT_KEY = #fltkey# AND FLT_DATE = TO_DATE(#flightDate#,'DDMONYY')
	</select>
	

	<select id="imp_getBrkDisSubByCustoms"  parameterClass="map"  resultClass="java.lang.Integer">	
		Select count(1)
		from CST_SUBM
		where FLT_KEY = #fltkey# AND FLT_DATE = TO_DATE(#flightDate#,'DDMONYY')	
		AND BD_COMPLETE IS NOT NULL AND BD_COMPLETE='Y'
		AND REC_TYPE = 'BDS'
	</select>

<!-- ##################### Close/UnClose Flight  : End   :Santosh    ###############################################-->	

<!-- Query for Declare BD Complete Starts :: Anup -->

	<select id="imp_dbdc_getFlightForDeclare" parameterClass="cargo.cms.imprt.bo.DBDCSearchBO"
		resultClass="cargo.cms.imprt.bo.DBDCFltBO">
		SELECT 
		   A.FLT_KEY as fltKey, 
		   A.FLT_KEY as fltKeyDisp, 
		   TO_CHAR(A.SCH_DATE,'DDMONYY') as fltDateDisplay, 
		   TO_CHAR(A.SCH_DATE,'DDMONYY') as fltDate, 
           PKG_COMMON.get_flt_ata(A.FLT_KEY, A.SCH_DATE, 'A','DD') AS ata,        
		   TO_CHAR(B.WHSE_COMPL_DATE, 'DDMONYY') || ' ' || SUBSTR(TRIM(TO_CHAR(NVL(B.WHSE_COMPL_TIME,null),'0000')),0,2)|| DECODE(B.WHSE_COMPL_TIME, null, '', ':') ||  SUBSTR(TRIM(TO_CHAR(NVL(B.WHSE_COMPL_TIME,null),'0000')),3,4) as bdCompleteDateTime,
		   TO_CHAR(B.WHSE_COMPL_DATE, 'DDMONYY') as bdCompleteDate,
		   B.WHSE_COMPL_USER_ID as bdCompleteStaffId,
		   C.LM_USER_ID as genUserId,
		   TO_CHAR(C.LM_DATE, 'DDMONYY HH24:MI') AS genDate,
		   RAMP_COMPL_YN as rampComplete, 
		   FLT_CLS_YN as fltClose 
		   FROM  FLT_OPR_EVENTS B , FLT_OPR A 
		   LEFT JOIN IMP_FLT_HAND_SUMMARY C  
		   		ON C.FLT_KEY = A.FLT_KEY AND 
		   		C.FLT_DATE = A.SCH_DATE and rep_module = 'IW'
		WHERE
			A.FLT_KEY	 = B.FLT_KEY  AND
			A.SCH_DATE	 = B.SCH_DATE AND
			A.FLT_TYPE	 = B.FLT_TYPE AND
			A.FLT_TYPE	 = 'A' AND
			A.FLT_KEY LIKE #fltKey# AND
			A.SCH_DATE = #fltDate#
		<dynamic prepend="ORDER BY ">
        	<isNotEmpty property="sortOrder.sortField">
            	$sortOrder.sortField$
           	</isNotEmpty>
           	<isEmpty property="sortOrder.sortField">
            	fltDateDisplay 
           	</isEmpty>
        </dynamic>
	</select>
	<select id="imp_dbdc_getFlightForDeclareCOUNT" parameterClass="map" resultClass="java.lang.Integer">
		SELECT 
		   COUNT(1) AS totalRowCount 
		   FROM  FLT_OPR_EVENTS B , FLT_OPR A LEFT JOIN IMP_FLT_HAND_SUMMARY C  
		   		ON C.FLT_KEY = A.FLT_KEY AND 
		   		C.FLT_DATE = A.SCH_DATE and rep_module = 'IW'
		WHERE
			A.FLT_KEY	 = B.FLT_KEY  AND
			A.SCH_DATE	 = B.SCH_DATE AND
			A.FLT_TYPE	 = B.FLT_TYPE AND
			A.FLT_TYPE	 = 'A' AND
			A.FLT_KEY LIKE #fltKey# AND
			A.SCH_DATE = #fltDate#
	</select>


	<select id="imp_dbdc_getUldForDeclare" parameterClass="cargo.cms.imprt.bo.DBDCFltBO"
		resultClass="cargo.cms.imprt.bo.DBDCUldBO">
		SELECT
			U.ULD_KEY as uldKey,
			U.LOC_CODE as locn, 
			'N' as bup,
			R.EIC_IND as eic,
			R.EMPTY_IND as empty,
			U.DAM_IND as cond, 
			(TO_CHAR(R.BRKDN_COMPL_DATE, 'DDMONYY') || ' ' || LTRIM(SUBSTR(TRIM(TO_CHAR(R.BRKDN_COMPL_TIME,'0000')),0,2) 
			|| ':'|| SUBSTR(TRIM(TO_CHAR(R.BRKDN_COMPL_TIME,'0000')),3,4), ':')) as bdDateTime, 
			R.BRKDN_COMPL_YN as uldLocnCfm,
			decode(EMPTY_FLG, 'Y', 'EMPTY', 'LOAD') || decode(RESV_FLG, 'Y', ', RESERVED') as currentStatus,
			R.BRKDN_COMPL_YN as bdComplete,
			NVL(R.CHKIN_YN, 'N') as chkinStatus,
			U.HANDLING_MODE as hadlgMode,
			(SELECT TRF_TYPE from (SELECT DDT.TRF_TYPE FROM V_DDT_DTL DDT WHERE DDT.FLT_KEY = #fltKey# AND DDT.FLT_DATE = TO_DATE (#fltDate#, 'DDMONYY') AND DDT.uld_key = U.ULD_KEY) where ROWNUM=1) as traType,			
			CASE WHEN (SELECT COUNT(1)
		  	FROM V_FFM_DTL V 
		  	JOIN IMP_CAR_AWB AWB ON V.AWB_NO = AWB.AWB_NO AND V.AWB_DATE =  AWB.AWB_DATE
		  	AND AWB.BYPASS_REL = 'Y'
		  	WHERE
			V.FLT_KEY = R.FLT_KEY AND
			V.FLT_DATE = R.FLT_DATE AND    
      		V.ULD_KEY = R.ULD_KEY) > 0 THEN 'Y' ELSE 'N' END as byPassInd			
		FROM
			ULD_INVENTORY U 
			JOIN IMP_RAMP_CHK_DTL R 
			ON U.ULD_KEY = R.ULD_KEY
		WHERE
			R.FLT_KEY = #fltKey# AND
			R.FLT_DATE = TO_DATE (#fltDate#, 'DDMONYY') AND 
			R.CFM_STATUS = 'CONFIRMED' 
	</select>
	
	<select id="imp_dbdc_getBypassShpCountULD" parameterClass="cargo.cms.imprt.bo.DBDCUldBO"
		resultClass="java.lang.Integer">
		  SELECT COUNT(1)
		  FROM V_FFM_DTL V 
		  JOIN IMP_CAR_AWB AWB ON V.AWB_NO = AWB.AWB_NO AND V.AWB_DATE =  AWB.AWB_DATE
		  AND AWB.BYPASS_REL = 'Y'
		  WHERE
			V.FLT_KEY = #fltKey# AND
			V.FLT_DATE = TO_DATE (#fltDate#, 'DDMONYY') AND    
      		V.ULD_KEY = #uldKey#
     </select>
     
     
     <!-- Changed for QR 
	<select id="imp_dbdc_checkConfirmULD" parameterClass="cargo.cms.imprt.bo.DBDCFltBO"
		resultClass="java.lang.Integer">
		SELECT count(1)
		FROM IMP_RAMP_CHK_DTL
		WHERE
			 FLT_KEY = #fltKey# AND
			 TO_CHAR(FLT_DATE, 'DDMONYY') = #fltDate# AND
			 CHKIN_YN = 'Y' AND
			 CFM_STATUS = 'UNCONFIRMED'
		SELECT count(1)
		FROM IMP_RAMP_CHK_DTL
		WHERE
			 FLT_KEY = #fltKey# AND
			 TO_CHAR(FLT_DATE, 'DDMONYY') = #fltDate# AND
			 CHKIN_YN = 'Y' AND
			 EMPTY_IND = 'N' and
			 LENGTH(uld_key) >= 9
	</select> -->
	
	<update id="imp_dbdc_declare" parameterClass="cargo.cms.imprt.bo.DBDCFltBO">
		UPDATE FLT_OPR_EVENTS
		SET
		   WHSE_COMPL_USER_ID = #bdCompleteStaffId#,
		   WHSE_COMPL_DATE = sysdate,
		   WHSE_COMPL_TIME = TO_CHAR(sysdate, 'HH24MI'),
		   LM_USER_ID  = #bdCompleteStaffId#, 
		   LM_DATE = sysdate,
		   TR_TYPE = #trtype#
		WHERE
			 FLT_KEY = #fltKey# AND
			 TO_CHAR(SCH_DATE, 'DDMONYY') = #fltDate# AND
			 FLT_TYPE	 = 'A'
	</update>

	<update id="imp_dbdc_undeclare" parameterClass="cargo.cms.imprt.bo.DBDCFltBO">
		UPDATE FLT_OPR_EVENTS
		SET
		   WHSE_COMPL_USER_ID = NULL,
		   WHSE_COMPL_DATE = NULL,
		   WHSE_COMPL_TIME = NULL,
		   LM_USER_ID  = #bdCompleteStaffId#, 
		   LM_DATE = sysdate,
		   TR_TYPE = #trtype#
		WHERE
			 FLT_KEY = #fltKey# AND
			 TO_CHAR(SCH_DATE, 'DDMONYY') = #fltDate#
			 AND FLT_TYPE	 = 'A'
	</update>
	
	<select id="imp_dbdc_checkFlight"  parameterClass="cargo.cms.imprt.bo.DBDCFltBO"  
		resultClass="java.lang.Integer">
			SELECT count(1) FROM FLT_OPR WHERE 
				FLT_KEY=#fltKey#
				AND TO_CHAR(SCH_DATE, 'DDMONYY')= #fltDate# 
				AND FLT_TYPE='A'
   	</select>

<!-- Query for Declare BD Complete Ends :: Anup -->
<!--
	==============================================================================================
		START OF CREATE IMPORT AWB STORAGE
	==============================================================================================
	-->
	<select id="imp_Check_accCtrl" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		  select count(1) 
		  from sec_role_sub_function rsf
		  join sec_role_function rf on rsf.ROLE_CODE = rf.ROLE_CODE
		  join sec_user_role ur on ur.ROLE_NAME = rf.ROLE_CODE
		  where rsf.ENABLE_YN = 'Y' and ur.USER_ID = #userId# and rf.FUNCTION_CODE = 'IMP_71' and rsf.SUB_FUNCTION_CODE = 'IMP_71_002'
	</select>
	
	<select id="imp_Check_accCtrl3" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		  select count(1) 
		  from sec_role_sub_function rsf
		  join sec_role_function rf on rsf.ROLE_CODE = rf.ROLE_CODE
		  join sec_user_role ur on ur.ROLE_NAME = rf.ROLE_CODE
		  where rsf.ENABLE_YN = 'Y' and ur.USER_ID = #userId# and rf.FUNCTION_CODE = 'IMP_71' and rsf.SUB_FUNCTION_CODE = 'IMP_71_003'
	</select>
	<select id="querycheckforcirprocuser"  parameterClass="cargo.cms.imprt.bo.AWBStorDtlBO"  resultClass="java.lang.String">
		SELECT  CIR_PROC_USER as cirProcUser
		FROM IMP_CAR_SHP 
		WHERE 
			AWB_NO = UPPER(#awbNo#) 
			AND AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
			AND FLT_KEY = #fltKey#
			AND FLT_DATE = to_date(#fltDate#, 'DDMONYY') 
	</select>	
	
	<!--  Changed for QR -->
	<select id="getHeaderCreateAWBStorage"  parameterClass="cargo.cms.imprt.bo.CarShpBO" 
	 resultClass="cargo.cms.imprt.bo.CarShpBO">
		SELECT 
		   carawb.AWB_NO as awbNo,
		   carawb.AWB_PRFX as awbPrefix,
		   carawb.AWB_ORIGIN as awbOrigin,  
		   carawb.AWB_DEST as awbDest, 
		   carawb.SPL_CODE1 as splCode1, 
		   carawb.SPL_CODE2 as splCode2,          
		   carawb.SPL_CODE3 as splCode3,          
		   carawb.SPL_CODE4 as splCode4,          
		   carawb.SPL_CODE5 as splCode5,          
		   carawb.SPL_CODE6 as splCode6,          
		   carawb.SPL_CODE7 as splCode7,          
		   carawb.SPL_CODE8 as splCode8,
		   carawb.SPL_CODE9 as splCode9,
		   pkg_common.get_awb_splcodes(carawb.AWB_NO, carshp.AWB_DATE, awb.AWB_TYPE, ', ') as splCodeConcatinated,	
		   carawb.AWB_PCS as awbPcs,
		   carawb.AWB_WT as awbWt,
		   carawb.CONTENT as content,
		   carawb.CATALOG as catalog,
		   carawb.AWB_CLOSED as awbClosed,
		   carawb.PPK_TYPE as ppkType,
		   carshp.DAM_PCS as damPcs, 
		   carshp.DAM_WT as damWt, 
		   carshp.MANIFEST_PCS as manifestPcs,  
		   carshp.MANIFEST_WT as manifestWt,  
		   carshp.RECD_PCS as recdPcs,
		   carshp.RECD_WT as recdWt,
		   carshp.SAFE_HAND as safeHand,
		   carshp.ACCEPT_FROM as acceptFrom,
		   TO_CHAR(carawb.AWB_DATE,'DDMONYY') as awbDate,		   
		   carshp.CAR_CREATED as carCreatedYn,
		   carshp.MINI_SHP as miniShipment,
		   carawb.HOUSE_FLG as houseFlg,
	       TO_CHAR(carshp.FLT_DATE, 'DDMONYY') AS fltDate, 	 
	       carshp.FLT_KEY AS fltKey,	      
	       uld.ULD_KEY                        						AS uldKey      ,			   
		   uld.WH_RMK 											   	AS uldInstruction,
		   carawb.WH_RMK											AS awbInstruction,
		   uld.HANDLING_MODE									 	AS dlvMode,	
       	   ''									            		AS dlvRmk,
		   ddt.TRF_TYPE 										   	AS transferType,		
		  (select TARE_WEIGHT from ULD_TYPE_CARR_TARE_WT where ULD_CARR = uldInv.ULD_CARR and ULD_TYPE = uldInv.ULD_TYPE and 
					uldInv.ULD_NO between ULD_NO_FROM and ULD_NO_TO and rownum=1) tareWt
		FROM IMP_CAR_AWB carawb
		JOIN AWB awb ON awb.AWB_NO = carawb.AWB_NO AND awb.awb_date = carawb.awb_date	  
	    JOIN IMP_CAR_SHP carshp ON  carshp.AWB_NO = carawb.AWB_NO AND carshp.awb_date = carawb.awb_date	  
	    LEFT JOIN IMP_RAMP_CHK_DTL dtl ON carshp.FLT_KEY=dtl.FLT_KEY AND carshp.FLT_DATE = dtl.FLT_DATE AND dtl.ULD_KEY =#uldKey#
      	LEFT JOIN IMP_ULD_LIST uld ON uld.FLT_KEY=carshp.FLT_KEY AND uld.FLT_DATE = carshp.FLT_DATE AND uld.ULD_KEY =#uldKey#
	    LEFT JOIN DDT_MSG msg ON msg.FLT_KEY = dtl.FLT_KEY and msg.FLT_DATE = dtl.FLT_DATE and msg.ddt_status='P' 	  
	    LEFT JOIN DDT_ULD ddt ON ddt.TR_NO = msg.TR_NO AND ddt.uld_key = dtl.ULD_KEY
	    LEFT JOIN uld_inventory uldInv on dtl.uld_key = uldInv.ULD_KEY
		WHERE    	   
      	  carshp.FLT_KEY = #fltKey# AND
		  carshp.FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND 		 
          carshp.AWB_NO = #awbNo# AND
		  carshp.AWB_DATE = TO_DATE(#awbDate# , 'DDMONYY')		
	</select>	
	
	<select id="getHeaderAWBStorageWithoutShp"  parameterClass="cargo.cms.imprt.bo.CarShpBO" 
		 resultClass="cargo.cms.imprt.bo.CarShpBO">
			SELECT 
			   carawb.AWB_NO as awbNo,
			   TO_CHAR(carawb.AWB_DATE,'DDMONYY') as awbDate,
			   carawb.AWB_PRFX as awbPrefix,
			   carawb.AWB_ORIGIN as awbOrigin,  
			   carawb.AWB_DEST as awbDest, 
			   carawb.SPL_CODE1 as splCode1, 
			   carawb.SPL_CODE2 as splCode2,          
			   carawb.SPL_CODE3 as splCode3,          
			   carawb.SPL_CODE4 as splCode4,          
			   carawb.SPL_CODE5 as splCode5,          
			   carawb.SPL_CODE6 as splCode6,          
			   carawb.SPL_CODE7 as splCode7,          
			   carawb.SPL_CODE8 as splCode8,
			   carawb.SPL_CODE8 as splCode9,
			   pkg_common.get_awb_splcodes(carawb.AWB_NO, carawb.AWB_DATE, 'I', ', ') as splCodeConcatinated,	
			   carawb.AWB_PCS as awbPcs,
			   carawb.AWB_WT as awbWt,
			   carawb.CONTENT as content,
			   carawb.CATALOG as catalog,
			   carawb.AWB_CLOSED as awbClosed,
			   TO_CHAR(carawb.AWB_DATE,'DDMONYY') as awbDate,
			   carawb.PPK_TYPE as ppkType,
			   carawb.HOUSE_FLG as houseFlg		
		FROM IMP_CAR_AWB carawb	
		WHERE carawb.AWB_NO = UPPER(#awbNo#) AND
		AWB_DATE	  =	  TO_DATE(#awbDate#,'DDMONYY') 
	</select>	
	
	<select id="getAWBNOlistInFFM"  parameterClass="cargo.cms.imprt.bo.ProcessedFFMBO"  
		resultClass="cargo.cms.imprt.bo.ProcessedFFMBO">
			SELECT AWB_NO as awbNo,  
					 SHP_PCS as shpPcs,
					SHP_WT as shpWt,
					 CONTENT as content,
					NVL(SPL_CODE1,'') as splCode1,
					NVL(SPL_CODE2,'') as splCode2,
					NVL(SPL_CODE3,'') as splCode3,
					NVL(SPL_CODE4,'') as splCode4,
					NVL(SPL_CODE5,'') as splCode5,
					NVL(SPL_CODE6,'') as splCode6,
					NVL(SPL_CODE7,'') as splCode7,
					NVL(SPL_CODE8,'') as splCode8,
					TO_CHAR(AWB_DATE,'DDMONYY') as awbDate
			 FROM IMP_PROCESSED_FFM 
			 WHERE  
				CARR_CODE = UPPER(#carrCode#) AND
				FLT_NO = UPPER(#fltNo#) AND
				FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
				ULD_KEY = UPPER(#uldKey#)
	</select>
	
	<!--  Changed for QR -->
	<select id="sqlgetacttimeandtrno"  parameterClass="cargo.cms.uld.bo.ULDEICBO"  
		resultClass="cargo.cms.uld.bo.ULDEICBO">
		SELECT PKG_COMMON.get_flt_ata(FLT_KEY, SCH_DATE, 'A') AS actTime,
			TR_NO as trNo,
			TO_CHAR(ACT_DATE,'DDMONYY') as actDate,
			PKG_COMMON.get_flt_eta(FLT_KEY, SCH_DATE, 'A') as estTime				
		FROM FLT_OPR
		WHERE ((CARR_CODE = #carrCode# 
				AND FLT_NO    = #fltNo#) OR FLT_KEY = #fltKey#) 
				AND SCH_DATE = TO_DATE(#fltDate#,'DDMONYY')
		  		AND FLT_TYPE = #fltType#	
   	</select>
   	
   	<!--  Changed for QR -->
	<select id="validateuldkeyinffm" parameterClass="cargo.cms.imprt.bo.ProcessedFFMBO" 
	resultClass="java.lang.String">
		select count(1) 
			FROM EDI_FFM_ULD U
			JOIN EDI_FFM_MSG M ON M.TR_NO = U.TR_NO  and M.ffm_status = 'P'
			WHERE 
			M.CARR_CODE = #carrCode# AND
			M.FLT_NO = #fltNo# AND
			M.FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
			U.ULD_KEY = #uldKey#
	</select>	
	
	
	<select id="validateuldkeyincpm" parameterClass="cargo.cms.imprt.bo.ProcessedFFMBO" 
	resultClass="java.lang.String">
		      select count(1) 
			FROM EDI_CPM cpm
			JOIN EDI_CPM_DTL dtl ON cpm.VER_NO = dtl.VER_NO and cpm.FLT_KEY = dtl.FLT_KEY and cpm.FLT_DATE = dtl.FLT_DATE  
			WHERE 			
			dtl.FLT_KEY = #fltKey# AND
			dtl.FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
			dtl.ULD_KEY = #uldKey#
	</select>	
	
	<select id="awb_closed_check_yn"  parameterClass="map"  resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM AWB 
		WHERE AWB_CLOSED_YN = 'Y' AND  AWB_NO = #awbNo# AND AWB_DATE = #awbDate# AND AWB_TYPE = #awbType#
	</select>
	<select id="checkawbexistsinimpcarshp"  parameterClass="cargo.cms.imprt.bo.CarShpBO" 
	 resultClass="java.lang.String">
		SELECT count(1)	
		FROM IMP_CAR_SHP 	
		WHERE AWB_NO = UPPER(#awbNo#) AND
		  AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') AND
		  FLT_KEY = UPPER(#fltKey#) AND
		  FLT_DATE = TO_DATE(#fltDate#,'DDMONYY')
	</select>	
	
	<select id="getFwbInfoForAWB"  parameterClass="cargo.cms.imprt.bo.CarShpBO"  resultClass="cargo.cms.awb.bo.AWBEnquiryBO">
		 SELECT 
		   	FWB.AWB_NO AS awbNo, 
 			TO_CHAR(FWB.AWB_DATE,'DDMONYY') AS awbDate, 	    
     		UPPER(FWB.FLT_KEY1) AS fltKey,     		
			FWB.SHPR_NAME AS shprName, 
 			FWB.AGENT_NAME AS appntdAgent, 	    
     		FWB.SPH_SPL_CODE1 AS splCode1,
      		FWB.SPH_SPL_CODE2 AS splCode2,
      		FWB.SPH_SPL_CODE3 AS splCode3,
      		FWB.SPH_SPL_CODE4 AS splCode4,
      		FWB.SPH_SPL_CODE5 AS splCode5,
      		FWB.SPH_SPL_CODE6 AS splCode6,
      		FWB.SPH_SPL_CODE7 AS splCode7,
      		FWB.SPH_SPL_CODE8 AS splCode8,
      		FWB.SPH_SPL_CODE9 AS splCode9,
      		AWB.SPL_CODE1 AS shc1,
      		AWB.SPL_CODE2 AS shc2,
      		AWB.SPL_CODE3 AS shc3,
      		AWB.SPL_CODE4 AS shc4,
      		AWB.SPL_CODE5 AS shc5,
      		AWB.SPL_CODE6 AS shc6,
      		AWB.SPL_CODE7 AS shc7,
      		AWB.SPL_CODE8 AS shc8,
      		AWB.SPL_CODE9 AS shc9, 
      		FWB.ORG AS awbOrigin, 
		  	FWB.DES AS awbDest, 
      		FWB.CSGNE_NAME as consignee,
      		FWB.CSGNE_ADDR AS consigneAddr,
      		FWB.CSGNE_STATE_PROVINCE AS consigneAddr1,
      		decode(FWB.CSGNE_PLACE,'','Hong Kong',FWB.CSGNE_PLACE) as consCity,
	    	decode(FWB.CSGNE_CTRY_CODE,'','HK',FWB.CSGNE_CTRY_CODE) as consCountry,
      		FWB.SHPR_NAME AS shipperName,
      		FWB.SHPR_ADDR AS shipperAddr,
      		decode(FWB.SHPR_PLACE,'','Hong Kong',FWB.SHPR_PLACE) AS shipperAddr1,
			FWB.SHPR_STATE_PROVINCE AS shipperAddr3,
      		decode(FWB.SHPR_CTRY_CODE,'','HK',FWB.SHPR_CTRY_CODE) as shprCountry,
	    	FWB.AGENT_NAME AS appiontedAgent,
      		FWB.AGENT_PLACE AS agentAddr,
            (SELECT RATE_GOODS_NATR FROM
                 (select EFCR.TR_NO, EFCR.RATE_GOODS_NATR from EDI_FWB_CHR_RATE efcr where (RATE_GOODS_DATA_I = 'C' OR RATE_GOODS_DATA_I='G') ORDER BY TR_NO, DOC_LINE_NO) ee WHERE EE.TR_NO=FWB.TR_NO AND ROWNUM=1) content,
            FWB.RA_NO AS raNumber,
            FWB.agent_iata_code as iataCode  
     		FROM EDI_FWB FWB
     		LEFT JOIN AWB AWB
     		ON FWB.AWB_NO = AWB.AWB_NO
     		AND FWB.AWB_DATE = AWB.AWB_DATE
     		WHERE 
     		FWB.AWB_NO = UPPER(#awbNo#) AND
		  	FWB.AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') AND COPY_NO = (SELECT MAX(COPY_NO) FROM EDI_FWB 
            WHERE AWB_NO = UPPER(#awbNo#) AND
            AWB_DATE = TO_DATE(#awbDate#,'DDMONYY'))
	</select>
	
	<update id="updateCarInfoWithFWB" parameterClass="cargo.cms.awb.bo.AWBEnquiryBO">
		UPDATE IMP_CAR_AWB SET 
 		APPNTD_AGENT = ( FUN_GET_APPT_AGENT(#consignee#,AWB_NO,AWB_DATE) ), 
 		SPL_CODE1 = #splCode1#,
      	SPL_CODE2 = #splCode2#,
      	SPL_CODE3 = #splCode3#,
      	SPL_CODE4 = #splCode4#,
      	SPL_CODE5 = #splCode5#,
      	SPL_CODE6 = #splCode6#,
      	SPL_CODE7 = #splCode7#,
      	SPL_CODE8 = #splCode8#,
      	SPL_CODE9 = #splCode9#,
      	AWB_ORIGIN = #awbOrigin#, 
      	AWB_DEST = #awbDest#, 
		CSGNE_NAME = #consignee#,
      	CSGNE_ADDR1 = #consigneAddr#,
      	CSGNE_ADDR2 =  #consigneAddr1#,     
      	CSGNE_PLACE  =  #consCity#,
      	CSGNE_CTRY_CODE = #consCountry#,
	    SHPR_NAME = #shipperName#,
      	SHPR_ADD1 = #shipperAddr#,
      	SHPR_ADD2 = #shipperAddr1#,
      	SHPR_STATE_PROVINCE = #shipperAddr3#,      
      	SHPR_CTRY_CODE = #shprCountry#,
      	AGENT_PLACE  = #agentAddr#,
      	content = #content#
      	WHERE  AWB_NO = #awbNo#  AND  AWB_DATE =	 TO_DATE(#awbDate#,'DDMONYY')
	</update>
	
	<select id="checkawbexistsinfwb"  parameterClass="cargo.cms.imprt.bo.CarShpBO"  resultClass="java.lang.String">
		SELECT count(1)	
		FROM EDI_FWB 	
		WHERE AWB_NO = UPPER(#awbNo#) AND
		  AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
	</select>	
	
	<select id="checkawbexistsinimpcarawb"  parameterClass="cargo.cms.imprt.bo.CarShpBO" 
		 resultClass="java.lang.String">
		SELECT count(1)
		FROM IMP_CAR_AWB 
		WHERE AWB_NO = UPPER(#awbNo#) AND AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
	</select>	
	
	<update id="updateimpcarshp" parameterClass="cargo.cms.imprt.bo.CarShpBO">
		UPDATE IMP_CAR_SHP
		SET    RECD_PCS	  =	 #recdPcsToUpdate#,
			   RECD_WT	  =  #recdWtToUpdate#,
			   DAM_PCS	  =  #damPcsToUpdate#,
			   DAM_WT 	  =  #damWtToUpdate#,
			   LM_USER_ID =  #userID#, 
				LM_DATE   =  sysdate
		WHERE  AWB_NO	  =   #awbNo#  AND
			   AWB_DATE	  =	  TO_DATE(#awbDate#,'DDMONYY') AND
			   FLT_KEY = UPPER(#fltKey#) AND
			   FLT_DATE = TO_DATE(#fltDate#,'DDMONYY')
	</update>		
	   
	<!--  Changed for QR -->
	<insert id="insertimpawbstrgdtl" parameterClass="cargo.cms.imprt.bo.AWBStorDtlBO">
		INSERT INTO IMP_AWB_STRG_DTL (
		   TR_NO, 	DOC_LINE_NO, 	CARR_CODE, 
		   FLT_DATE, 	FLT_KEY, 	
		   AWB_PFX, 	AWB_NO, 	AWB_DATE, 
		   AWB_DEST, 	ULD_TYPE,	 ULD_NO, 
		   ULD_CARR, 	ULD_KEY, 	
		   LOC_CODE, 	STRG_PCS, 	STRG_WT, 
		   LSP_NO, 	DAM_IND, 				
		   TR_TYPE, 	TR_STATUS, 	CR_USER_ID, 
		   CR_DATE, LM_USER_ID, 	LM_DATE,FLT_TYPE,CHKIN_ULD_KEY,
		   INSRT_FROM_IND,MINI_SHP,ENDORSED_BY, TARGET,DAM_TYPE,BULK_WT,BUP_WT,TR_TYPE_EVT,DAM_PC_DECL,DAM_WT_DECL,DAM_COND) 
		VALUES (#trNo#, #docLineNo#, #carrCode#,
		    TO_DATE(#fltDate#,'DDMONYY'), #fltKey#, 
		    #awbPrefix#, #awbNo#, NVL(#awbDate#,to_char(SYSDATE,'DDMONYY')),
		    #awbDest#, #uldType#, #uldNo#,
		    #uldCarr#, #uldKey#, 
		    #locCode#, #strgPcs#, #strgWt#,
		    #lspNo#, #damInd#,			
		    'AS', 'A', #userID#,
		    sysdate, #userID#, sysdate,'I',#checkInULD#, 'D', 
		    #miniShipment#, #userName#, #target#,#damType#,#strgWt#,#strgWt#,nvl(#trEvnt#,'CIASD'),#damDeclPcs#,#damDeclWt#,#damCond#)	
	</insert>	
	
	
	<select id="checklocexistsmhs"	parameterClass="java.lang.String" resultClass="java.lang.String">
	select grp.WH_TYPE
	from
	MAST_WH_LOC loc
	join MAST_WH_GROUP grp on loc.WH_GROUP = grp.WH_GROUP
	where CODE=#locCode#
	</select> 
	

	<update id="updatecreateawbuldlocationDesktop" parameterClass="cargo.cms.imprt.bo.AWBStorDtlBO">
		UPDATE ULD_INVENTORY
		SET 		
		<isNotEmpty property="target">
		TARGET = #target#,
		</isNotEmpty>
		EMPTY_FLG = 'N',
		ULD_FLOW = 'I',
		LM_DATE = SYSDATE,
		LM_USER_ID = #userID#
		WHERE ULD_KEY = #uldKey#				
	</update>
	
	<update id="updatecreateawblsplocationDesktop" parameterClass="cargo.cms.imprt.bo.AWBStorDtlBO">
		UPDATE LSP_INVENTORY
		SET 
		<isNotEmpty property="target">
		TARGET = #target#,
		</isNotEmpty>
		EMPTY_FLG = 'N',
		LM_DATE = SYSDATE,
		LM_USER_ID = #userID#
		WHERE LSP_NO = #lspNo# 	
	</update>
	
	<select id="getCreateAwbInvPCSDesktop"  parameterClass="cargo.cms.imprt.bo.AWBStorDtlBO"  resultClass="cargo.cms.imprt.bo.AWBStorDtlBO">
		SELECT seq_no seqNo FROM awb_inventory
               WHERE flt_key = #fltKey#
		        AND flt_date = TO_DATE(#fltDate#,'DDMONYY')
		        AND awb_no = #awbNo#
		        AND awb_date = TO_DATE(#awbDate#,'DDMONYY')
		        AND NVL(LOC_CODE,'*') = NVL(#locCode#,'*')
			    AND NVL(LSP_NO,'*')   = NVL(#lspNo#,'*')
			    AND NVL(ULD_KEY,'*')  = NVL(#uldKey#,'*')			    
			    AND FLT_TYPE  = 'I' 		  
			    AND SRF_NO IS NULL 
			    AND TRM_NO IS NULL 
			    AND CDIF_NO IS NULL	             
    </select>       
    
    <update id="updateCreateAWBDamTypeDesktop" parameterClass="cargo.cms.imprt.bo.AWBStorDtlBO">
		UPDATE awb_inventory SET DAM_TYPE = #damType# WHERE seq_no = #seqNo#
	</update>   
	
	<update id="updateCarShpMinShip" parameterClass="cargo.cms.imprt.bo.CarShpBO">
		UPDATE IMP_CAR_SHP
		SET    
				MINI_SHP = #miniShipment#,
				SAFE_HAND = #safeHand#,
				ACCEPT_FROM = #acceptFrom#,
			    LM_USER_ID =  #userID#, 
				LM_DATE   =  sysdate
		WHERE  AWB_NO	  =   #awbNo#  AND
			   AWB_DATE	  =	  TO_DATE(#awbDate#,'DDMONYY') AND
			   FLT_KEY = UPPER(#fltKey#) AND
			   FLT_DATE = TO_DATE(#fltDate#,'DDMONYY')
	</update>		
	
	<insert id="insertimpcarawb" parameterClass="cargo.cms.imprt.bo.CarShpBO">
		INSERT INTO IMP_CAR_AWB (
		   AWB_NO,    	AWB_DATE,    AWB_PRFX, 
		   AWB_ORIGIN,  AWB_DEST,    PPK_TYPE, 
		   CR_USER_ID,  CR_DATE,    LM_USER_ID, 
		   LM_DATE,TR_STATUS,CONSOLE_IND,AWB_PCS,AWB_WT,BULK_PCS,BULK_WT, CATALOG, CURR_CODE) 
		VALUES ( #awbNo#, NVL(#awbDate#,to_char(SYSDATE,'DDMONYY')), #awbPrefix#,
	       	 #awbOrigin#, #awbDest#, nvl(#ppkType#, 'B'),
	    	 #userID#, SYSDATE, #userID#,SYSDATE,'A',#consolInd#,#recdPcsToUpdate#,#recdWtToUpdate#,#recdPcsToUpdate#,#recdWtToUpdate#, #catalog#, #currencyCode#)
	</insert>			
	
	<!--  Changed for QR -->
	<insert id="insertimpcarshp" parameterClass="cargo.cms.imprt.bo.CarShpBO"> 
		INSERT INTO IMP_CAR_SHP (
		   AWB_NO, AWB_DATE, AWB_PRFX, 
		   PPK_TYPE, CARR_CODE, FLT_DATE, 
		   FLT_KEY, CR_USER_ID, CR_DATE, 
		   LM_USER_ID, LM_DATE, TR_STATUS,
		    DAM_PCS, DAM_WT,FLT_TYPE,MINI_SHP,SAFE_HAND,TR_TYPE
			) 
		VALUES ( #awbNo#, NVL(#awbDate#,to_char(SYSDATE,'DDMONYY')), #awbPrefix#,
	       	 nvl(#ppkType#, 'B'), #carrCode#, TO_DATE(#fltDate#,'DDMONYY'),
	   		 #fltKey#, #userID#, SYSDATE ,
	    	 #userID#, SYSDATE, 'A',  0, 0,'I',#miniShipment#,#safeHand#,'AWB Storage')		
	</insert>	
	<select id="imp_RestoreAWBStorage_awb_type"  parameterClass="map" resultClass="java.lang.String">		
		select FLT_TYPE from ULD_INVENTORY 
		where ULD_KEY = #ULDKEY# and 
		FLT_TYPE != #AWBTYPE# AND 
		(FLT_TYPE = 'E' OR (FLT_TYPE = 'I' AND EMPTY_FLG = 'N'))
	</select>
	<insert id="save_imp_awb_uld_brk" parameterClass="cargo.cms.imprt.bo.CarShpBO">
		<![CDATA[
			INSERT INTO AWB (AWB_TYPE,AWB_NO,AWB_DATE,BLDUP_BULK_PCS,BLDUP_BULK_WT,
				SPL_CODE1,SPL_CODE2,SPL_CODE3,  
				SPL_CODE4,SPL_CODE5,SPL_CODE6,SPL_CODE7,SPL_CODE8,SPL_CODE9,
				LM_USER_ID ,LM_DATE,CR_USER_ID, CR_DATE, PPK_TYPE,CARR_CODE,CAR_YN,TR_TYPE) 
			VALUES('I',#awbNo#,TO_DATE(#awbDate#,'DDMONYY'), 
				nvl(#recdPcsToUpdate#,0),nvl(#recdWtToUpdate#,0),#splCode1#,
				#splCode2#,#splCode3#,#splCode4#,#splCode5#,#splCode6#,#splCode7#,#splCode8#,#splCode8#,
				#userID#,SYSDATE,#userID#,SYSDATE,'B',#carrCode#,'Y',#trtype#)  
		]]>
	</insert>
	
	<!--  Changed for QR -->
	<select id="fetchHouseDetails"  parameterClass="cargo.cms.imprt.bo.CarShpBO"  
		resultClass="cargo.cms.imprt.bo.AWBStorDtlBO">
		select HAWB_NO as hseAwbNo,HAWB_PCS as hseAwbPcs,HAWB_NET_WT as hseAwbWt 
			from edi_fhl_hawb where exists (select null from edi_fhl where awb_no=#awbNo# and edi_fhl_hawb.tr_no = tr_no)
	</select>	
	
	<!--  Changed for QR -->
	<select id="getCreateAWBCntgFlightsForAWB"  parameterClass="cargo.cms.imprt.bo.CarShpBO"  
		resultClass="cargo.cms.imprt.bo.CarShpBO">
		select 
		(dtl.shp_cntg_flt_key || '/' || TO_CHAR(dtl.shp_cntg_flt_date,'DDMONYY')) as cntgFlt,
                pkg_common.get_flt_sta(dtl.shp_cntg_flt_key, dtl.shp_cntg_flt_date,'D') std,
                pkg_common.get_flt_eta(dtl.shp_cntg_flt_key, dtl.shp_cntg_flt_date,'D') etd
	    FROM v_ddt_dtl dtl
	    join flt_opr opr on opr.flt_key = dtl.shp_cntg_flt_key and opr.sch_date = dtl.shp_cntg_flt_date    
	    where		
            dtl.AWB_NO=#awbNo# and dtl.awb_date = TO_DATE(#awbDate#,'DDMONYY')     
            and dtl.flt_key=#fltKey# and dtl.flt_date = TO_DATE(#fltDate#,'DDMONYY')    and dtl.shp_trf_type = 'QT' 
        AND ROWNUM = 1   	
	</select>	
	
	<!--  Changed for QR
	<select id="getCreateAWBForAWBTrf"  parameterClass="cargo.cms.imprt.bo.CarShpBO" resultClass="java.lang.String">
		select dtl.shp_trf_type FROM v_ddt_dtl dtl
	    where 
	    dtl.AWB_NO=#awbNo# and dtl.awb_date = TO_DATE(#awbDate#,'DDMONYY')     
				and dtl.flt_key=#fltKey# and dtl.flt_date = TO_DATE(#fltDate#,'DDMONYY') AND ROWNUM = 1   		
	</select> -->

	<!--  Changed for QR -->
	<select id="getAWBTrType"  parameterClass="cargo.cms.imprt.bo.CarShpBO" resultClass="java.lang.String">
		select dtl.shp_trf_type FROM v_ddt_dtl dtl
	    where 
	    dtl.AWB_NO=#awbNo# and dtl.awb_date = TO_DATE(#awbDate#,'DDMONYY')     
				and dtl.flt_key=#fltKey# and dtl.flt_date = TO_DATE(#fltDate#,'DDMONYY') and dtl.shp_trf_type = 'QT' AND ROWNUM = 1 
	</select>
	
	<select id="getHHTAWBTarmacCount"  parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO" resultClass="java.lang.Integer">	
			select count(1) FROM v_ddt_dtl dtl where dtl.AWB_NO=#awbNo# and dtl.awb_date = TO_DATE(#awbDate#,'DDMONYY')	
				and dtl.flt_key=#flightKey# and dtl.flt_date = TO_DATE(#flightDate#,'DDMONYY') and dtl.shp_trf_type = 'TT'	
	</select>
	<select id="getAWBTarmacCount"  parameterClass="cargo.cms.imprt.bo.CarShpBO" resultClass="java.lang.Integer">	
			select count(1) FROM v_ddt_dtl dtl where dtl.AWB_NO=#awbNo# and dtl.awb_date = TO_DATE(#awbDate#,'DDMONYY')	
				and dtl.flt_key=#fltKey# and dtl.flt_date = TO_DATE(#fltDate#,'DDMONYY') and dtl.shp_trf_type = 'TT'			
	</select>
	<select id="getCarCountForAWB"  parameterClass="map" resultClass="java.lang.Integer">	
			select count(1) from imp_car_shp where AWB_NO=#awbNo# and awb_date=#awbDate# and CAR_CREATED='Y'		
	</select>	
	<update id="updateCarrCodeOnAWB" parameterClass="map">
		UPDATE AWB SET
		CARR_CODE = substr(#fltKey#,0,2),
		LM_USER_ID = nvl(#userID#,'SYSTEM'),
		LM_DATE = SYSDATE
		WHERE
		AWB_NO = #awbNo#  AND
		AWB_DATE = #awbDate#
	</update>
	
	<update id="updateAWBUnknownCarCrt" parameterClass="cargo.cms.imprt.bo.CarShpBO">
		UPDATE AWB SET
		CAR_YN = 'Y',
		MANIFEST_PCS = '0', 
		MANIFEST_WT = '0',
		LM_DATE = SYSDATE,
		TR_TYPE=#trtype#,
		LM_USER_ID = #userID#
		WHERE
		AWB_NO = #awbNo#  AND
		AWB_DATE = #awbDate#
	</update>	
	
	
	<update id="updateCarSHPUnknownCarCrt" parameterClass="cargo.cms.imprt.bo.CarShpBO">	
		UPDATE IMP_CAR_SHP 
		SET 
			CAR_CREATED = 'Y',
			MANIFEST_PCS = '0', 
			MANIFEST_WT = '0',
			LM_USER_ID = #userID#,
			LM_DATE = SYSDATE,
			TR_TYPE = 'AWB Strg'
		WHERE 	
				AWB_NO = UPPER(#awbNo#) AND
				FLT_KEY = UPPER(#fltKey#) AND
				FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
				AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')  
	</update>
	
	<update id="imp_createawbstrg_uldbreak_start_desktop" parameterClass="cargo.cms.imprt.bo.CarShpBO">
		UPDATE IMP_RAMP_CHK_DTL	SET	
			BRKDN_START_USER_ID = #userID#,
			BRKDN_START_DATE = sysdate,		
			<!-- 	
			BRKDN_LOCN = #locCode#,	 -->			
			LM_USER_ID	 =#userID#,
			LM_DATE	 = sysdate 		
		WHERE 	FLT_KEY    = #fltKey#
			  	AND TO_CHAR(FLT_DATE,'DDMONYY') = #fltDate#			  	
				AND ULD_KEY = #uldKey#				
	</update>	
	
	<!--  Changed for QR -->
	<select id="getCreateAWBFFMPcs"  parameterClass="cargo.cms.imprt.bo.CarShpBO" resultClass="java.lang.String">
	select sum(MAN_PCS) as totalPcs
	from EDI_FFM_SHP S
	JOIN EDI_FFM_MSG M ON M.TR_NO = S.TR_NO and M.ffm_status = 'P'
	where
		S.AWB_NO = UPPER(#awbNo#) AND
		S.FLT_KEY = UPPER(#fltKey#) AND
		S.FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
		S.AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')  
	</select>
		
	<insert id="insert_LSP_NO_in_master" parameterClass="cargo.cms.imprt.bo.AWBStorDtlBO">
	INSERT INTO 
		LSP_INVENTORY (LSP_NO,LOC_CODE,STRG_DATE,STATUS,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,REF_TR_NO,REF_TR_TYPE,
		REF_TR_EVENT,REF_TR_DATE,REF_DOC_LINE_NO,LSP_TYPE) 
	VALUES 
		(#lspNo#, #locCode#, SYSDATE, 'N', #userID#, SYSDATE, #userID#, 
		SYSDATE, #trNo#, #trType#, #trEvent#, SYSDATE, #docLineNo#,#lspType#)
	</insert>
	
	<select id="chk_shc_exists_Restricted_loc" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		SELECT 
			COUNT(1) 
		FROM 
			IMP_CAR_AWB A, SHC_RESTRICT_LOC B 
		WHERE 
			(A.SPL_CODE1=B.SHC OR A.SPL_CODE2=B.SHC OR A.SPL_CODE3=B.SHC OR A.SPL_CODE4=B.SHC OR A.SPL_CODE5=B.SHC OR 
			A.SPL_CODE6=B.SHC OR A.SPL_CODE7=B.SHC OR A.SPL_CODE8=B.SHC OR A.SPL_CODE8=B.SHC) AND B.LOC_CODE=#locCode# 
			AND A.AWB_NO=#awbNo# AND A.AWB_DATE=TO_DATE(#awbDate#, 'DDMONYY')
	</select>
	<select id="findRecvdPcsSavedForShpmt" parameterClass="cargo.cms.imprt.bo.CarShpBO" resultClass="java.lang.Integer">
		SELECT 
			COUNT(1) 
		FROM 
			IMP_CAR_SHP 
		WHERE 
			AWB_NO=#awbNo# AND AWB_DATE=TO_DATE(#awbDate#, 'DDMONYY') AND FLT_KEY=#fltKey# 
			AND FLT_DATE=TO_DATE(#fltDate#, 'DDMONYY') AND RECD_PCS='0'
	</select>

<select id="findXTShipmentTarget" parameterClass="cargo.cms.imprt.bo.CarShpBO" resultClass="java.lang.String">		
			select FLT_MODULE1 from 
			  (select exp_flt_key, exp_flt_date, FLT_MODULE1 from XT_IMP_CAR_SHP_DTL xt ,flt_opr opr
				where imp_flt_key = #fltKey# and imp_flt_date = TO_DATE(#fltDate#, 'DDMONYY') and awb_no = #awbNo#  and awb_date = TO_DATE(#awbDate#, 'DDMONYY')  
				and flt_type = 'D' AND opr.flt_key = xt.exp_flt_key and opr.sch_date = xt.exp_flt_date 
			) where 1 =1 AND rownum = 1      	
	</select>	
		      
	<select id="findXTShipmentTargetHHT" parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO" resultClass="java.lang.String">	
			select FLT_MODULE1 from 
			  (select exp_flt_key, exp_flt_date, FLT_MODULE1 from XT_IMP_CAR_SHP_DTL xt ,flt_opr opr
				where imp_flt_key = #flightKey# and imp_flt_date = TO_DATE(#flightDate#, 'DDMONYY') and awb_no = #awbNo#  and awb_date = TO_DATE(#awbDate#, 'DDMONYY')  
				and flt_type = 'D' AND opr.flt_key = xt.exp_flt_key and opr.sch_date = xt.exp_flt_date 
			) where 1 =1 AND rownum = 1        	
	</select>
	
	<select id="findBkgExistsForShpmnt" parameterClass="cargo.cms.imprt.bo.CarShpBO" resultClass="java.lang.String">			
	<![CDATA[
			SELECT 
			hd.DEL_ZONE 
			FROM 
				IMP_BOOKING hd JOIN
		      IMP_BOOKING_DTL dtl on hd.BOOKING_NO = dtl.BOOKING_NO
				WHERE 
					dtl.AWB_NO=#awbNo#  
		      AND dtl.AWB_DATE=TO_DATE(#awbDate#, 'DDMONYY') 
		      AND dtl.FLT_KEY=#fltKey#
		      AND dtl.FLT_DATE=TO_DATE(#fltDate#, 'DDMONYY')
		      and to_date(to_char(hd.BKG_SLOT_DATE, 'DDMONYY') || to_char(hd.BKG_SLOT_FROM, '0000'),'DDMONYY HH24MI') > to_date(to_char(sysdate,'DDMONYY HH24MI'),'DDMONYY HH24MI')
       	]]> 
	</select>
	
	<!--  Changed for QR -->
	<select id="findTrkDockForShpmnt" parameterClass="cargo.cms.imprt.bo.CarShpBO" resultClass="java.lang.String">
		<![CDATA[
		SELECT custAgtSchCollTD.TRUCK_DOCK  
		FROM IMP_CAR_SHP carShp
			join TRUCK_MANIFEST_DTL trkMnfDtl on trkMnfDtl.awb_no = carShp.awb_no and trkMnfDtl.awb_date = carShp.awb_date and trkMnfDtl.flt_key = carShp.flt_key and trkMnfDtl.flt_date = carShp.flt_date
			join TRUCK_MANIFEST trkMnf on trkMnf.truck_manf_no = trkMnfDtl.truck_manf_no 
			join CUST_AGENT_SCH_COLL_TIME custAgtSchColl on trkMnf.time_slot_tr_no = custAgtSchColl.tr_no
			join CUST_AGENT_SCH_COLL_TRUCK_DOCK custAgtSchCollTD on  custAgtSchCollTD.tr_no = custAgtSchColl.tr_no
		WHERE sysdate < to_date(to_char(SCH_COLL_DATE,'DMONYY')||' '|| TO_CHAR(SCH_COLL_FROM,'0000'),'DDMONYY HH24MI')  and custAgtSchColl.purpose = 'CRG'
				AND carShp.AWB_NO=#awbNo# AND carShp.AWB_DATE=TO_DATE(#awbDate#, 'DDMONYY') 
				AND carShp.FLT_KEY=#fltKey# AND carShp.FLT_DATE=TO_DATE(#fltDate#, 'DDMONYY') and ROWNUM=1
			   	]]> 
	</select>
	<select id="findDefTgtForSHCForShpmnt" parameterClass="cargo.cms.imprt.bo.CarShpBO" resultClass="java.lang.String">
		SELECT 
			DEFAULT_TARGET 
		FROM 
			MAST_SPL_HAND_CODE A, IMP_CAR_AWB B 
		WHERE (A.CODE=B.SPL_CODE1 OR A.CODE=B.SPL_CODE2 OR A.CODE=B.SPL_CODE3 OR A.CODE=B.SPL_CODE4 OR A.CODE=B.SPL_CODE5 
		OR A.CODE=B.SPL_CODE6 OR A.CODE=B.SPL_CODE7 OR A.CODE=B.SPL_CODE8 OR A.CODE=B.SPL_CODE9) AND B.AWB_NO=#awbNo# 
		AND B.AWB_DATE=TO_DATE(#awbDate#, 'DDMONYY') AND DEFAULT_TARGET IS NOT NULL ORDER BY PRIORITY
	</select>
	<select id="findBkgRecordWithinXHrs" parameterClass="cargo.cms.imprt.bo.CarShpBO"
		resultClass="cargo.cms.imprt.bo.CarShpBO">
		<![CDATA[
		SELECT 
			TO_CHAR(BKG_SLOT_DATE, 'DDMONYY') as schDate, BKG_SLOT_TO as timeTo, BKG_SLOT_FROM as timeFrom 
		FROM 
			IMP_BOOKING A, IMP_BOOKING_DTL B 
		WHERE 
			A.BOOKING_NO=B.BOOKING_NO AND B.AWB_NO=#awbNo# AND B.AWB_DATE=TO_DATE(#awbDate#, 'DDMONYY') 
			AND B.FLT_KEY=#fltKey# AND B.FLT_DATE=TO_DATE(#fltDate#, 'DDMONYY') 
			AND TO_DATE(to_char(A.BKG_SLOT_DATE, 'DDMONYY') || ' ' ||trim(to_char(A.BKG_SLOT_TO, '0000')), 'DDMONYY HH24MI') <= TO_DATE(#timeTo#, 'DDMONYY HH24MI')
			and to_date(to_char(A.BKG_SLOT_DATE, 'DDMONYY') || trim(to_char(A.BKG_SLOT_FROM, '0000')),'DDMONYY HH24MI') > to_date(to_char(sysdate,'DDMONYY HH24MI'),'DDMONYY HH24MI')
		]]>
	</select>
	<select id="findTrkRecordWithinXHrs" parameterClass="cargo.cms.imprt.bo.CarShpBO" resultClass="cargo.cms.imprt.bo.CarShpBO">
		<![CDATA[
		SELECT 
			TO_CHAR(SCH_COLL_DATE, 'DDMONYY') as schDate, SCH_COLL_TO as timeTo, SCH_COLL_FROM as timeFrom 
		FROM 
			IMP_CAR_AWB A, TRUCK_MANIFEST B, TRUCK_MANIFEST_DTL C 
		WHERE 
			C.TRUCK_MANF_NO=B.TRUCK_MANF_NO AND C.AWB_NO=A.AWB_NO AND C.AWB_DATE=A.AWB_DATE AND B.AGENT_CODE=A.AGENT_CUST_NO AND A.AWB_NO=#awbNo# AND 
			A.AWB_DATE=TO_DATE(#awbDate#, 'DDMONYY') AND TO_DATE(B.SCH_COLL_DATE || ' ' || LPAD(B.SCH_COLL_TO,4,0), 'DD-MON-YY HH24MI') <= 
			TO_DATE(#timeTo#, 'DDMONYY HH24MI') AND C.FLT_KEY=#fltKey# AND C.FLT_DATE=TO_DATE(#fltDate#, 'DDMONYY')
		]]>
	</select>
	<select id="checkHouseFlgCarAwb" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT 
			HOUSE_FLG 
		FROM 
			IMP_CAR_AWB 
		WHERE 
			AWB_NO=#awbNo# AND AWB_DATE=TO_DATE(#awbDate#, 'DDMONYY')
	</select>
	<select id="checkULDExistsInFFM" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		SELECT 
			COUNT(1) 
		FROM 
			EDI_FFM_ULD 
		WHERE 
			FLT_KEY=#fltKey# AND ULD_KEY=#uldKey# AND FLT_DATE=TO_DATE(#fltDate#, 'DDMONYY')
	</select>
	<select id="checkLSPInCSDMaster" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		SELECT 
			COUNT(1) 
		FROM 
			MAST_CSD 
		WHERE 
			CODE=#lspNo#
	</select>
		
	<!--
	==============================================================================================
		END OF CREATE IMPORT AWB STORAGE
	==============================================================================================
	-->
	<!-- flight handling report -->
	<insert id="insert_flight_report_getDiscrepancyIrregularity_table" parameterClass="cargo.cms.imprt.bo.DisIrrBO">
		INSERT INTO IMP_FLT_HAND_DOC_DISC
			(TR_NO,DOC_LINE_NO,AWB_NO,AWB_DATE,DEST,DCP_CODE,ACTION,ACTION_RMK,ACTION_BY)
		VALUES 
			(#trNo#,#docLineNo#,#awbNo#,to_date(#awbDate#,'ddmonyy'),
			#awbDest#,#dcpCode#,#actionCode#,#remarks#,#actionedBy#)
	</insert>	
	<insert id="flight_report_insertimpflthanddoc" parameterClass="cargo.cms.imprt.bo.DocumentFRBO">
	INSERT INTO IMP_FLT_HAND_DOC (
	   TR_NO, DOC_LINE_NO, CARR_CODE, 
	   FLT_DATE, FLT_KEY, ATT_PATH, 
	   DOC_NAME, REP_MODULE) 
	VALUES ( #trNo#, #docLineNo#, #carrCode#,
	    to_date(#fltDate#,'DDMONYY'), #fltKey#, '',
	    #fileName#,  #reptType#)
	</insert>	
 	<select id="flight_report_getLoadInformation_gene"	parameterClass="cargo.cms.imprt.bo.FlightReportBO"
				 resultClass="cargo.cms.imprt.bo.LoadInfoBO">
		select CARGO_TYPE AS type, CARGO_TYPE_DESC AS typeCode, nvl(NO_OF_SHP, 0) noOfShp, 
		nvl(PCS, 0) pcs, nvl(WT, 0) wt, nvl(BUP_WT, 0) bupWt, nvl(BULK_WT, 0) bulkWt			
		FROM IMP_FLT_HAND_LOAD_INFO 
		WHERE TR_NO =  #reptTrNo#
	</select>
	
	<!--  Changed for QR -->
	<select id="flight_report_getLoadInformation"	parameterClass="cargo.cms.imprt.bo.FlightReportBO"
			 resultClass="cargo.cms.imprt.bo.LoadInfoBO">
		<![CDATA[ 
		select *
			from (
			            
			 select 1 ord,'Cargo' AS type, 'Local' AS typeCode, nvl(noOfShp, 0) noOfShp, nvl(pcs, 0) pcs, nvl(wt, 0) wt, nvl(bupWt, 0) bupWt, nvl(bulkWt, 0) bulkWt
			  from flt_opr f
			  left join (SELECT a.flt_key, a.flt_date, count(1) AS noOfShp, SUM(a.manifest_pcs) AS pcs, SUM(a.manifest_wt) AS wt,
			   SUM(a.bup_wt) AS bupWt, SUM(a.bulk_wt) AS bulkWt
			   FROM imp_car_awb b, imp_car_shp a, awb 
			  WHERE a.awb_no = b.awb_no AND a.awb_date = b.awb_date and a.awb_no = awb.awb_no AND a.awb_date = awb.awb_date
				AND b.catalog in ('IG', 'IS')	
      			AND not exists(select null from CUST_AIRL_SPL_CODE casc
                        where casc.carr_code = awb.carr_code and casc.spl_type ='SPL_EXP'
                        and casc.spl_code in(awb.spl_code1,awb.spl_code2,awb.spl_code3,awb.spl_code4,awb.spl_code5,
                        									awb.spl_code6,awb.spl_code7,awb.spl_code8,awb.spl_code9))                                          
				GROUP BY a.flt_key, a.flt_date) a on f.flt_key = a.flt_key and f.sch_date = a.flt_date
				where f.flt_type = 'A' AND f.flt_key = #fltKey# AND f.sch_date = TO_DATE (#fltDate#, 'DDMONYY')	
						
			UNION ALL
			
			select 2 ord, 'Cargo' AS type, 'Express' AS typeCode, nvl(noOfShp, 0) noOfShp, nvl(pcs, 0) pcs, nvl(wt, 0) wt, nvl(bupWt, 0) bupWt, nvl(bulkWt, 0) bulkWt
			from flt_opr f
			left join (SELECT a.flt_key, a.flt_date, count(1) AS noOfShp, SUM(a.manifest_pcs) AS pcs, SUM(a.manifest_wt) AS wt,
			SUM(a.bup_wt) AS bupWt, SUM(a.bulk_wt) AS bulkWt
			FROM imp_car_awb b, imp_car_shp a, awb 
			WHERE a.awb_no = b.awb_no AND a.awb_date = b.awb_date and a.awb_no = awb.awb_no AND a.awb_date = awb.awb_date
       		AND exists(select null from CUST_AIRL_SPL_CODE casc
                        where casc.carr_code = awb.carr_code and casc.spl_type ='SPL_EXP'
                        and casc.spl_code in(awb.spl_code1,awb.spl_code2,awb.spl_code3,awb.spl_code4,awb.spl_code5,
                        									awb.spl_code6,awb.spl_code7,awb.spl_code8,awb.spl_code9))
			GROUP BY a.flt_key, a.flt_date) a on f.flt_key = a.flt_key and f.sch_date = a.flt_date
			where f.flt_type = 'A' AND f.flt_key = #fltKey# AND f.sch_date = TO_DATE (#fltDate#, 'DDMONYY')
			
			UNION ALL 	
					
			 select 3 ord,'Cargo' AS type, 'US MAIL' AS typeCode, nvl(noOfShp, 0) noOfShp, nvl(pcs, 0) pcs, nvl(wt, 0) wt, nvl(bupWt, 0) bupWt, nvl(bulkWt, 0) bulkWt
			  from flt_opr f
			  left join (SELECT a.flt_key, a.flt_date, count(1) AS noOfShp, SUM(a.manifest_pcs) AS pcs, SUM(a.manifest_wt) AS wt,
			   SUM(a.bup_wt) AS bupWt, SUM(a.bulk_wt) AS bulkWt
			   FROM imp_car_awb b, imp_car_shp a
			  WHERE a.awb_no = b.awb_no
			AND a.awb_date = b.awb_date
			AND b.catalog in ('IU')			
			GROUP BY a.flt_key, a.flt_date) a on f.flt_key = a.flt_key and f.sch_date = a.flt_date
			where f.flt_type = 'A' AND f.flt_key = #fltKey# AND f.sch_date = TO_DATE (#fltDate#, 'DDMONYY')
			
			UNION ALL
		
			select 4 ord, 'Cargo' AS type,'Transit-QT' AS typeCode, count(a.awb_no) noOfShp,
			nvl(SUM(a.pcs),0) as  pcs,  nvl(SUM(a.bup_wt),0) + nvl(SUM(a.bulk_wt),0) as wt, 
			nvl(SUM(a.bup_wt),0) as bupWt,nvl(SUM(a.bulk_wt),0) as bulkWt 
			from (
			select m.AWB_NO,m.awb_date,m.flt_key,m.flt_date,nvl(SUM(m.shp_trf_pc),0) pcs, nvl(SUM(m.shp_trf_wt),0) bulk_wt, 0 bup_wt from v_ddt_dtl m where m.SHP_TRF_TYPE in ('QT')
			and m.trf_type is null  group by      m.awb_no,m.awb_date,m.flt_key,m.flt_date
			UNION all
			select m.AWB_NO,m.awb_date,m.flt_key,m.flt_date,nvl(SUM(m.shp_trf_pc),0) pcs,nvl(SUM(m.shp_trf_wt),0) bulk_wt, 0 bup_wt from v_ddt_dtl m where m.SHP_TRF_TYPE='QT'
			and m.trf_type ='QT' and not exists (select null from imp_uld_list where handling_mode in('NBK','PPK') and flt_key=m.flt_key and flt_date=m.flt_date and uld_key=m.uld_key)
			group by      m.awb_no,m.awb_date,m.flt_key,m.flt_date  
			union all 
			select m.AWB_NO,m.awb_date,m.flt_key,m.flt_date,nvl(SUM(m.shp_trf_pc),0) pcs, 0 bulk_wt, nvl(SUM(m.shp_trf_wt),0) bup_wt from v_ddt_dtl m where m.SHP_TRF_TYPE='QT'
			and m.trf_type ='QT' and exists (select null from imp_uld_list where handling_mode in('NBK','PPK') and flt_key=m.flt_key and flt_date=m.flt_date and uld_key=m.uld_key)
			group by      m.awb_no,m.awb_date,m.flt_key,m.flt_date ) a, imp_car_awb b, awb 
			WHERE a.awb_no = b.awb_no AND a.awb_date = b.awb_date and a.awb_no = awb.awb_no AND a.awb_date = awb.awb_date  AND b.catalog not IN ('TM') 
       				AND not exists(select null from CUST_AIRL_SPL_CODE casc
                        					where casc.carr_code = awb.carr_code and casc.spl_type ='SPL_EXP'
                        					and casc.spl_code in(awb.spl_code1,awb.spl_code2,awb.spl_code3,awb.spl_code4,awb.spl_code5,
                        									awb.spl_code6,awb.spl_code7,awb.spl_code8,awb.spl_code9))
        	and a.flt_key = #fltKey#  and a.flt_date=#fltDate# 
		
			UNION ALL
				
			SELECT 5 ord,'Cargo' AS type,
			'Transit-NT' As typeCode,
			NVL(count(awb_no),0) noOfShp,
			NVL(sum(pcs),0) pcs, 
			nvl(SUM(wt),0) as wt,
			Nvl(Sum(ppkwt),0.0) bupWt, 
			nvl(Sum(bulkwt),0.0) bulkWt 
			from(SELECT  a.awb_no,sum(a.manifest_pcs-NVL(ddt_if.pcs,0)-NVL(ddt_qtifbulk.pcs,0)-NVL(ddt_qtbu.pcs,0))  pcs,
			sum(a.manifest_wt-NVL(ddt_if.wt,0)-NVL(ddt_qtifbulk.wt,0)-NVL(ddt_qtbu.wt,0)) wt,
			sum(a.bulk_wt-NVL(ddt_qtifbulk.wt,0)-NVL(ddt_tt.wt,0)) bulkwt,
			sum(a.bup_wt-NVL(ddt_if.wt,0)-NVL(ddt_qtbu.wt,0)) as ppkwt
			FROM imp_car_shp a 
			join awb b on a.awb_no=b.awb_no and a.awb_date=b.awb_date and b.awb_type ='T'
				AND not exists(select null from CUST_AIRL_SPL_CODE casc
                        where casc.carr_code = b.carr_code and casc.spl_type ='SPL_EXP'
                        and casc.spl_code in(b.spl_code1,b.spl_code2,b.spl_code3,b.spl_code4,b.spl_code5,
                        									b.spl_code6,b.spl_code7,b.spl_code8,b.spl_code9))
			join imp_car_awb carAwb on a.awb_no=carAwb.awb_no and a.awb_date=carAwb.awb_date AND carAwb.catalog not IN ('TM')                             									
			left  JOIN ( select m.AWB_NO,m.awb_date,m.flt_key,m.flt_date,nvl(SUM(m.shp_trf_pc),0) pcs,nvl(SUM(m.shp_trf_wt),0) wt from v_ddt_dtl m 
			where  m.TRF_TYPE  =  'IF' group by      m.awb_no,m.awb_date,m.flt_key,m.flt_date ) ddt_if
			ON a.awb_no=ddt_if.awb_no and a.awb_date=ddt_if.awb_date and a.flt_key=ddt_if.flt_key and a.flt_date=ddt_if.flt_date 
			left  JOIN ( select m.AWB_NO,m.awb_date,m.flt_key,m.flt_date,nvl(SUM(m.shp_trf_pc),0) pcs,nvl(SUM(m.shp_trf_wt),0) wt from v_ddt_dtl m 
			where m.shp_TRF_TYPE =  'TT' group by      m.awb_no,m.awb_date,m.flt_key,m.flt_date ) ddt_tt
			ON a.awb_no=ddt_tt.awb_no and a.awb_date=ddt_tt.awb_date and a.flt_key=ddt_tt.flt_key and a.flt_date=ddt_tt.flt_date 
			LEFT OUTER JOIN ( select m.AWB_NO,m.awb_date,m.flt_key,m.flt_date,nvl(SUM(m.shp_trf_pc),0) pcs,nvl(SUM(m.shp_trf_wt),0) wt from v_ddt_dtl m where m.SHP_TRF_TYPE in ('QT','IF')
			and m.trf_type is null  group by      m.awb_no,m.awb_date,m.flt_key,m.flt_date
			UNION all
			select m.AWB_NO,m.awb_date,m.flt_key,m.flt_date,nvl(SUM(m.shp_trf_pc),0) pcs,nvl(SUM(m.shp_trf_wt),0) wt from v_ddt_dtl m where m.SHP_TRF_TYPE='QT'
			and m.trf_type ='QT' and not exists (select null from imp_uld_list where handling_mode in('NBK','PPK') and flt_key=m.flt_key and flt_date=m.flt_date and uld_key=m.uld_key)
			group by      m.awb_no,m.awb_date,m.flt_key,m.flt_date ) ddt_qtifbulk
			ON a.awb_no=ddt_qtifbulk.awb_no and a.awb_date=ddt_qtifbulk.awb_date  and a.flt_key=ddt_qtifbulk.flt_key and a.flt_date=ddt_qtifbulk.flt_date 
			LEFT OUTER JOIN ( select m.AWB_NO,m.awb_date,m.flt_key,m.flt_date,nvl(SUM(m.shp_trf_pc),0) pcs,nvl(SUM(m.shp_trf_wt),0) wt from v_ddt_dtl m where m.SHP_TRF_TYPE='QT'
			and m.trf_type ='QT' and exists (select null from imp_uld_list where handling_mode in('NBK','PPK') and flt_key=m.flt_key and flt_date=m.flt_date and uld_key=m.uld_key)
			group by      m.awb_no,m.awb_date,m.flt_key,m.flt_date ) ddt_qtbu   
			ON a.awb_no=ddt_qtbu.awb_no and a.awb_date=ddt_qtbu.awb_date and a.flt_key=ddt_qtbu.flt_key and a.flt_date=ddt_qtbu.flt_date 
			where  a.flt_key=#fltKey#  and a.flt_date=to_date(#fltDate#,'DDMONYY')
			and ((a.manifest_pcs-NVL(ddt_if.pcs,0)-NVL(ddt_tt.pcs,0)-NVL(ddt_qtifbulk.pcs,0)-NVL(ddt_qtbu.pcs,0)) >0 OR a.manifest_pcs = 0) 
			GROUP BY a.awb_no) 
			
			UNION ALL		
			
			 select 6 ord, 'Cargo' AS type,'Tarmac-TT' AS typeCode, count(tt.awb_no) noOfShp, nvl(SUM(tt.trfPcs),0) as  pcs,
			nvl(SUM(tt.trfWt),0) as wt, 0 as bupWt, nvl(SUM(tt.trfWt),0) as bulkWt
			from imp_car_shp imp  , imp_car_awb b, awb  ,
      			(select m.AWB_NO,m.awb_date,m.flt_key,m.flt_date,nvl(SUM(m.shp_trf_pc),0) trfPcs,
                nvl(SUM(m.shp_trf_wt),0) trfWt from v_ddt_dtl m 
                where m.SHP_TRF_TYPE='TT'
                  group by m.awb_no,m.awb_date,m.flt_key,m.flt_date) tt 
			where imp.awb_no = b.awb_no AND imp.awb_date = b.awb_date and imp.awb_no = awb.awb_no AND imp.awb_date = awb.awb_date 
			and imp.awb_no=tt.awb_no and imp.awb_date=tt.awb_date 	AND b.catalog not IN ('TM')
			AND not exists(select null from CUST_AIRL_SPL_CODE casc
			where casc.carr_code = awb.carr_code and casc.spl_type ='SPL_EXP'
			and casc.spl_code in(awb.spl_code1,awb.spl_code2,awb.spl_code3,awb.spl_code4,awb.spl_code5,
			awb.spl_code6,awb.spl_code7,awb.spl_code8,awb.spl_code9))
      		and imp.flt_date=tt.flt_date and imp.flt_key=tt.flt_key	
			and imp.flt_key=#fltKey#  and imp.flt_date=to_date(#fltDate#,'DDMONYY') 
					
			UNION ALL
			
			select 7 ord, 'Cargo' AS type,'Transit-IF' AS typeCode, count(a.awb_no) noOfShp,
			nvl(SUM(a.pcs),0) as  pcs, nvl(SUM(a.bulk_wt),0) +  nvl(SUM(a.bup_wt),0) as wt , 
			nvl(SUM(a.bup_wt),0) as bupWt, nvl(SUM(a.bulk_wt),0) as bulkWt 
			from (
			select m.AWB_NO,m.awb_date,m.flt_key,m.flt_date,nvl(SUM(m.shp_trf_pc),0) pcs, nvl(SUM(m.shp_trf_wt),0) bulk_wt, 0 bup_wt from v_ddt_dtl m where m.SHP_TRF_TYPE in ('IF')
			and m.trf_type is null  group by      m.awb_no,m.awb_date,m.flt_key,m.flt_date
			UNION all
			select m.AWB_NO,m.awb_date,m.flt_key,m.flt_date,nvl(SUM(m.shp_trf_pc),0) pcs,nvl(SUM(m.shp_trf_wt),0) bulk_wt, 0 bup_wt from v_ddt_dtl m where m.SHP_TRF_TYPE='IF'
			and m.trf_type ='IF' and not exists (select null from imp_uld_list where handling_mode in('NBK','PPK') and flt_key=m.flt_key and flt_date=m.flt_date and uld_key=m.uld_key)
			group by      m.awb_no,m.awb_date,m.flt_key,m.flt_date  
			union all 
			select m.AWB_NO,m.awb_date,m.flt_key,m.flt_date,nvl(SUM(m.shp_trf_pc),0) pcs, 0 bulk_wt, nvl(SUM(m.shp_trf_wt),0) bup_wt from v_ddt_dtl m where m.SHP_TRF_TYPE='IF'
			and m.trf_type ='IF' and exists (select null from imp_uld_list where handling_mode in('NBK','PPK') and flt_key=m.flt_key and flt_date=m.flt_date and uld_key=m.uld_key)
			group by      m.awb_no,m.awb_date,m.flt_key,m.flt_date ) a , imp_car_awb b, awb 
			where   a.awb_no = b.awb_no AND a.awb_date = b.awb_date and a.awb_no = awb.awb_no AND a.awb_date = awb.awb_date  AND b.catalog not IN ('TM') 
        			AND not exists(select null from CUST_AIRL_SPL_CODE casc
                        where casc.carr_code = awb.carr_code and casc.spl_type ='SPL_EXP'
                        and casc.spl_code in(awb.spl_code1,awb.spl_code2,awb.spl_code3,awb.spl_code4,awb.spl_code5,
                        									awb.spl_code6,awb.spl_code7,awb.spl_code8,awb.spl_code9))
        		and a.flt_key=#fltKey#  and a.flt_date=#fltDate#
		
			UNION ALL
			select 8 ord,'Cargo' AS type, 'T/S Mail' AS typeCode, nvl(noOfShp, 0) noOfShp, nvl(pcs, 0) pcs, nvl(wt, 0) wt, nvl(bupWt, 0) bupWt, nvl(bulkWt, 0) bulkWt
			from flt_opr f
			left join (SELECT a.flt_key, a.flt_date, count(1) AS noOfShp, SUM(a.manifest_pcs) AS pcs, SUM(a.manifest_wt) AS wt,
			SUM(a.bup_wt) AS bupWt, SUM(a.bulk_wt) AS bulkWt
			  FROM imp_car_awb b, imp_car_shp a
			WHERE a.awb_no = b.awb_no
			 AND a.awb_date = b.awb_date
			AND catalog IN ('TM')
			 GROUP BY a.flt_key, a.flt_date) a on f.flt_key = a.flt_key and f.sch_date = a.flt_date
			 where f.flt_type = 'A' AND f.flt_key = #fltKey# AND f.sch_date = TO_DATE (#fltDate#, 'DDMONYY')
			UNION ALL
			 select 9 ord,'Cargo' AS type, 'Courier' AS typeCode, nvl(noOfShp, 0) noOfShp, nvl(pcs, 0) pcs, nvl(wt, 0) wt, nvl(bupWt, 0) bupWt, nvl(bulkWt, 0) bulkWt
			 from flt_opr f
			left join (SELECT a.flt_key, a.flt_date, count(1) AS noOfShp, SUM(a.manifest_pcs) AS pcs, SUM(a.manifest_wt) AS wt,
			SUM(a.bup_wt) AS bupWt, SUM(a.bulk_wt) AS bulkWt
			 FROM imp_car_awb b, imp_car_shp a
			WHERE a.awb_no = b.awb_no
			 AND a.awb_date = b.awb_date
			   AND b.catalog in ('IO')
			  AND not (nvl(b.ect_handler, 'CPCT') != 'CPCT' 
			  and (a.awb_no||a.awb_date in (select awb_no||awb_date from awb_inventory where LOC_CODE = 'ECT')
			                                                       OR a.recd_pcs = 0))
			                                 GROUP BY a.flt_key, a.flt_date) a on f.flt_key = a.flt_key and f.sch_date = a.flt_date
			                  where f.flt_type = 'A' AND f.flt_key = #fltKey# AND f.sch_date = TO_DATE (#fltDate#, 'DDMONYY')
			                  UNION ALL
			                  
			  select 10 ord,'Cargo' AS type, 'Total' AS typeCode, 0 noOfShp, 0 pcs, 0 wt, 0 bupWt, 0 bulkWt from  dual
			UNION ALL			                  
			select 11 ord,'IRR' AS type, 'IRR-Surplus' AS typeCode, nvl(noOfShp, 0) noOfShp, nvl(pcs, 0) pcs, nvl(wt, 0) wt, nvl(bupWt, 0) bupWt, nvl(bulkWt, 0) bulkWt
			 from flt_opr f
			 left join (SELECT a.flt_key, a.flt_date, count(1) AS noofshp, sum(CIR_PCS) AS pcs, sum(CIR_WT) AS wt, sum(CIR_BUP_WT) AS bupWt, sum(CIR_BULK_WT) AS bulkWt
			  FROM imp_car_shp a
			  WHERE cir_proc_user IS NOT NULL and cir_pcs_type = 'SP'
			 GROUP BY a.flt_key, a.flt_date) a on f.flt_key = a.flt_key and f.sch_date = a.flt_date
			where f.flt_type = 'A' AND f.flt_key = #fltKey# AND f.sch_date = TO_DATE (#fltDate#, 'DDMONYY')
			UNION ALL
			 select 12 ord,'IRR' AS type, 'IRR-Shortland' AS typeCode, nvl(noOfShp, 0) noOfShp, nvl(pcs, 0) pcs, nvl(wt, 0) wt, nvl(bupWt, 0) bupWt, nvl(bulkWt, 0) bulkWt
			from flt_opr f
			 left join (SELECT a.flt_key, a.flt_date, count(1) AS noofshp, sum(CIR_PCS) AS pcs, sum(CIR_WT) AS wt, sum(CIR_BUP_WT) AS bupWt, sum(CIR_BULK_WT) AS bulkWt
			  FROM imp_car_shp a
			 WHERE cir_proc_user IS NOT NULL and cir_pcs_type = 'SL'
			 GROUP BY a.flt_key, a.flt_date) a on f.flt_key = a.flt_key and f.sch_date = a.flt_date
			 where f.flt_type = 'A' AND f.flt_key = #fltKey# AND f.sch_date = TO_DATE (#fltDate#, 'DDMONYY')
			                  
			) q
			ORDER BY ord     
				]]>	  
			</select>             
			
	<select id="flight_report_getDiscrepancyIrregularity"	parameterClass="cargo.cms.imprt.bo.FlightReportBO"
			 resultClass="cargo.cms.imprt.bo.DisIrrBO">
      <!--  
      	SELECT shp.awb_no as awbNo, to_char(b.awb_date,'ddmonyy') as awbDate, b.awb_dest as awbDest,        
			docDisc AS dcpCode,        
         case when shp.dir_proc_user is not null then m.Code_Desc end as action,   
		 case when shp.cir_proc_user is not null then shp.cir_proc_user else shp.dir_proc_user end as actionedBy,      
		 case when shp.cir_proc_user is not null then shp.cir_proc_date else shp.dir_proc_date end actionedDateTime,          
		 case when shp.cir_proc_user is not null then shp.cir_rmk else shp.dir_action_rmk end as remarks , shp.DIR_ACTION actionCode
		FROM (Select case when CIR_PCS_TYPE = 'SL' then 'MSCA' else 
			case when CIR_PCS_TYPE = 'SP' then 'FDCA' else DOC_DISC end end docDisc, s.* from IMP_CAR_SHP s) shp
		left join Mast_code_dtl m on m.Code = shp.DIR_ACTION and m.Code_Type = 'ACTION_CODE', 
		imp_car_awb b
		WHERE shp.awb_no = b.awb_no
			AND shp.awb_date = b.awb_date
			AND shp.flt_key = #fltKey#
			AND shp.flt_date = TO_DATE (#fltDate#, 'DDMONYY')
			and (NVL(shp.DOC_DISC, 'N') = 'FDAW' OR NVL(shp.DOC_DISC, 'N') = 'MSAW' OR shp.CIR_PROC_USER is not null) --> 
			
		select a.* from (
					SELECT shp.awb_no as awbNo, to_char(b.awb_date,'ddmonyy') as awbDate, b.awb_dest as awbDest,        
					docDisc AS dcpCode,        
					null as action,   
					shp.cir_proc_user as actionedBy,      
					shp.cir_proc_date actionedDateTime,          
					decode(shp.cir_proc_user,null,null,shp.cir_rmk)  as remarks , null actionCode
					FROM (Select case when CIR_PCS_TYPE = 'SL' then 'MSCA'   
					when CIR_PCS_TYPE = 'SP' then 'FDCA' end docDisc, s.* from IMP_CAR_SHP s) shp,
					imp_car_awb b
					WHERE shp.awb_no = b.awb_no
					AND shp.awb_date = b.awb_date
					AND shp.flt_key = #fltKey#
					AND shp.flt_date = TO_DATE (#fltDate#, 'DDMONYY')
					and shp.CIR_PROC_USER is not null 
					union     
					SELECT shp.awb_no as awbNo, to_char(b.awb_date,'ddmonyy') as awbDate, b.awb_dest as awbDest,        
					docDisc AS dcpCode,        
					case when shp.dir_proc_user is not null then m.Code_Desc end as action,   
					shp.dir_proc_user as actionedBy,      
					shp.dir_proc_date actionedDateTime,          
					shp.dir_action_rmk as remarks , shp.DIR_ACTION actionCode
					FROM (Select DOC_DISC docDisc, s.* from IMP_CAR_SHP s) shp
					left join Mast_code_dtl m on m.Code = shp.DIR_ACTION and m.Code_Type = 'ACTION_CODE', 
					imp_car_awb b
					WHERE shp.awb_no = b.awb_no
					AND shp.awb_date = b.awb_date
					AND shp.flt_key = #fltKey#
					AND shp.flt_date = TO_DATE (#fltDate#, 'DDMONYY')
					and (NVL(shp.DOC_DISC, 'N') = 'FDAW' OR NVL(shp.DOC_DISC, 'N') = 'MSAW') ) a order by awbNo
	</select>
	
	<select id="flight_report_getDiscrepancyIrregularity_table"	parameterClass="cargo.cms.imprt.bo.FlightReportBO"
			 resultClass="cargo.cms.imprt.bo.DisIrrBO">
		SELECT TR_NO AS trNo,
				DOC_LINE_NO AS docLineNo,
				AWB_NO AS awbNo,
				TO_CHAR(AWB_DATE,'DDMONYY') AS awbDate,
				DEST AS awbDest,
				DCP_CODE AS dcpCode,
				m.code_desc AS action,
				d.ACTION AS actionCode,
				ACTION_RMK AS remarks,
				ACTION_BY AS actionedBy
		FROM IMP_FLT_HAND_DOC_DISC d
		left join Mast_code_dtl m on m.Code = d.ACTION and m.Code_Type = 'ACTION_CODE'
		WHERE TR_NO =#reptTrNo#
	</select>
	<insert id="flight_report_insertLoadInfo" parameterClass="cargo.cms.imprt.bo.LoadInfoBO">
		INSERT INTO IMP_FLT_HAND_LOAD_INFO (
		   TR_NO, DOC_LINE_NO, FLT_NO, 
		   FLT_DATE, FLT_ATA, FLT_KEY, 
		   CARR_CODE, CARGO_TYPE, NO_OF_SHP, 
		   PCS, BUP_WT, BULK_WT, 
		   CR_USER_ID, CR_DATE, LM_USER_ID, 
		   LM_DATE, WT, CARGO_TYPE_DESC) 
		VALUES ( #trNo#, #docLineNo#, #fltNo#,
		    #fltDate#, #fltAta#, #fltKey#,
		    #carrCode#, #type#, #noOfShp#,
		    #pcs#, #bupWt#, #bulkWt#,
		    #userID#, sysdate, #userID#,
		    sysdate, #wt#, #typeCode#)
	</insert>
 <!-- flight handling report delete flight_report_deleteTarmacInfo-->

 <!--Inbound flight discrepancy  -->
 <!--  Changed for QR -->
 	<select id="imp_discrepancy_getDiscrepancyList" parameterClass="cargo.cms.imprt.bo.DiscrepancyBO"
		resultClass="cargo.cms.imprt.bo.DiscrepancyBO">
			SELECT 
				SHP.FLT_KEY as fltKey ,
				SHP.FLT_DATE as fltDate,
				SHP.FLT_DATE_DISPLAY as fltDateDisplay,
				PKG_COMMON.get_flt_ata(FLT.FLT_KEY,FLT.SCH_DATE, 'A', 'DD') AS ata, 
				SHP.FFM as ffm, 
				SHP.CAR as car, 
				SHP.CIR as cir,
				FLT.ORIG as orig,
				FLT.DEST as dest
			FROM
				(
					SELECT FLT_KEY, TO_CHAR(FLT_DATE,'DDMONYY') FLT_DATE, TO_CHAR(FLT_DATE,'DDMONYY') FLT_DATE_DISPLAY,
					SUM(CASE WHEN NVL(FFM_FLG, 'N') = 'Y' THEN 1 ELSE 0 END) AS FFM, 
					SUM(CASE WHEN NVL(CAR_CREATED, 'N') = 'Y' THEN 1 ELSE 0 END) AS CAR,
					SUM(CASE WHEN CIR_PROC_USER is not null THEN 1 ELSE 0 END) AS CIR
					FROM IMP_CAR_SHP A, IMP_CAR_AWB B
					WHERE A.AWB_DATE = B.AWB_DATE AND A.AWB_NO = B.AWB_NO 
					AND CATALOG NOT IN ('TA') 
					GROUP BY FLT_KEY, FLT_DATE
				) SHP
				JOIN FLT_OPR FLT ON 
					FLT.FLT_KEY = SHP.FLT_KEY AND 
					FLT.SCH_DATE = SHP.FLT_DATE AND 
					FLT.FLT_TYPE = 'A'
			WHERE
				CIR > 0 AND				
				SHP.FLT_DATE = #fltDate#  
				<isNotEmpty property="defaultCarrCode" prepend="AND" >
						FLT.CARR_CODE = #defaultCarrCode# 
				</isNotEmpty>
				<isNotEmpty property="carrCode" prepend="AND" > 
					FLT.CARR_CODE = #carrCode# 
					<isNotEmpty property="fltNo" prepend="AND" >
						FLT.FLT_NO = NVL(#fltNo#, FLT.FLT_NO)
					</isNotEmpty>
				</isNotEmpty>
				<isEmpty property="fltNo">
					<isNotEmpty property="loginCarrier">
						AND	(FLT.CARR_CODE = #loginCarrier# OR FLT.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP 
						WHERE GRP_CARR_CODE	= #loginCarrier#))							
					</isNotEmpty>
				</isEmpty>
				ORDER BY TO_CHAR(FLT.SCH_TIME,'0000')
	</select>
	
	<!--  Changed for QR -->
	<select id="imp_discrepancy_getDiscrepancy" parameterClass="map"
		resultClass="cargo.cms.imprt.bo.DiscrepancyBO">
			SELECT 
				SHP.FLT_KEY as fltKey ,
				SHP.FLT_DATE as fltDate,
				SHP.FLT_DATE_DISPLAY as fltDateDisplay,
				PKG_COMMON.get_flt_ata(FLT.FLT_KEY,FLT.SCH_DATE, 'A', 'DD') AS ata, 
				SHP.FFM as ffm, 
				SHP.CAR as car, 
				SHP.CIR as cir,
				FLT.ORIG as orig,
				FLT.DEST as dest
			FROM
				(
					SELECT FLT_KEY, TO_CHAR(FLT_DATE,'DDMONYY') FLT_DATE, TO_CHAR(FLT_DATE,'DDMONYY') FLT_DATE_DISPLAY,
					SUM(CASE WHEN NVL(FFM_FLG, 'N') = 'Y' THEN 1 ELSE 0 END) AS FFM, 
					SUM(CASE WHEN NVL(CAR_CREATED, 'N') = 'Y' THEN 1 ELSE 0 END) AS CAR,
					SUM(CASE WHEN CIR_PROC_USER is not null THEN 1 ELSE 0 END) AS CIR
					FROM IMP_CAR_SHP A, IMP_CAR_AWB B
					WHERE A.AWB_DATE = B.AWB_DATE AND A.AWB_NO = B.AWB_NO 
					AND CATALOG NOT IN ('TA') 
					GROUP BY FLT_KEY, FLT_DATE
				) SHP
				JOIN FLT_OPR FLT ON 
					FLT.FLT_KEY = SHP.FLT_KEY AND 
					FLT.SCH_DATE = SHP.FLT_DATE AND 
					FLT.FLT_TYPE = 'A'
			WHERE
				CIR > 0 AND				
				SHP.FLT_DATE = #fltDate#  AND
				SHP.FLT_KEY = #fltKey# 
				ORDER BY TO_CHAR(FLT.SCH_TIME,'0000')
	</select>
	
	<!--  Changed for QR -->
	<select id="imp_discrepancy_getShpIrrList"  parameterClass="map"  
		resultClass="cargo.cms.imprt.bo.ShpIrrBO">
		
		SELECT 
			TO_CHAR(A.AWB_DATE, 'DDMONYY') as awbDate,
			A.AWB_NO as awbNo,
			SUBSTR(TRIM(A.AWB_NO),1,3)||'-'||SUBSTR(TRIM(A.AWB_NO),4) awbNoDisp,
			TO_CHAR(A.FLT_DATE, 'DDMONYY') as fltDate,
			A.FLT_KEY as fltKey,
			PKG_COMMON.get_flt_ata(FLT.FLT_KEY,FLT.SCH_DATE, 'A', 'DD') AS ata,
			B.AWB_DEST as dest, 
			B.CONTENT as cont, 
			B.CONSOLE_IND as consol,
			NVL(B.AWB_PCS,0) ||'/'||NVL(B.AWB_WT,0) as awbPcsWt, 
			NVL(A.MANIFEST_PCS,0) || '/' || NVL(A.MANIFEST_WT,0) as manfPcsWt, 
			NVL(A.RECD_PCS,0) || '/' || NVL(A.RECD_WT,0) as locnPcsWt, 
			decode (A.CIR_PCS, '', '', NULL, '', 0, '', (A.CIR_PCS ||'/'||A.CIR_PCS_TYPE)) as cirPcsType,
			decode (A.CIR_WT, '', '', NULL, '', 0, '', (A.CIR_WT ||'/'||A.CIR_WT_TYPE)) as cirWtType,
			B.ACCS_HANDLER as accsHandler,
			A.CIR_RMK as cirRmk,
			A.CIR_PROC_USER as userID,
			A.CIR_PROC_USER as displayUserId,
			TO_CHAR(A.CIR_PROC_DATE, 'DDMONYY HH24:MI') as dateDisplay
		FROM  IMP_CAR_AWB B, IMP_CAR_SHP A 
			JOIN FLT_OPR FLT ON 
				FLT.FLT_KEY = A.FLT_KEY AND 
				FLT.SCH_DATE = A.FLT_DATE AND 
				FLT.FLT_TYPE = 'A'
		WHERE CATALOG NOT IN ('TA') AND
			A.CIR_PROC_USER is not null AND
			A.AWB_DATE = B.AWB_DATE AND
			A.AWB_NO   = B.AWB_NO   AND
			A.FLT_KEY = #fltKey#   AND
			TO_CHAR(A.FLT_DATE, 'DDMONYY')  = #fltDate#				
		ORDER BY A.AWB_NO	
   	</select>
   	
   	<!--  Changed for QR -->
   	<select id="imp_discrepancy_getShpIrrBO"  parameterClass="map"  
		resultClass="cargo.cms.imprt.bo.ShpIrrBO">
		SELECT 
			TO_CHAR(A.AWB_DATE, 'DDMONYY') as awbDate,
			A.AWB_NO as awbNo,
			SUBSTR(TRIM(A.AWB_NO),1,3)||'-'||SUBSTR(TRIM(A.AWB_NO),4) awbNoDisp,
			TO_CHAR(A.FLT_DATE, 'DDMONYY') as fltDate,
			TO_CHAR(A.FLT_DATE, 'DDMONYY') as fltDateDisplay,
			A.FLT_KEY as fltKey,
			PKG_COMMON.get_flt_ata(FLT.FLT_KEY,FLT.SCH_DATE, 'A', 'DD') AS ata,
			B.AWB_DEST as dest, 
			B.CONTENT as cont, 
			B.CONSOLE_IND as consol,
			NVL(B.AWB_PCS,0) ||'/'||NVL(B.AWB_WT,0) as awbPcsWt, 
			NVL(A.MANIFEST_PCS,0) || '/' || NVL(A.MANIFEST_WT,0) as manfPcsWt, 
			NVL(A.RECD_PCS,0) || '/' || NVL(A.RECD_WT,0) as locnPcsWt, 
			decode (A.CIR_PCS, '', '', NULL, '', 0, '', (A.CIR_PCS ||'/'||A.CIR_PCS_TYPE)) as cirPcsType,
			decode (A.CIR_WT, '', '', NULL, '', 0, '', (A.CIR_WT ||'/'||A.CIR_WT_TYPE)) as cirWtType,
			nvl(ca.HDLG_AGENT, 'CPCT') as accsHandler,			
			A.CIR_RMK as cirRmk,
			A.CR_USER_ID as userID,
			TO_CHAR(A.CR_DATE, 'DDMONYY HH24:MI') as dateDisplay
		FROM  IMP_CAR_AWB B, IMP_CAR_SHP A 
			JOIN FLT_OPR FLT ON 
				FLT.FLT_KEY = A.FLT_KEY AND 
				FLT.SCH_DATE = A.FLT_DATE AND 
				FLT.FLT_TYPE = 'A'
			LEFT JOIN CST_AWB CA ON A.AWB_NO = CA.AWB_NO AND A.FLT_KEY = CA.FLT_KEY AND A.FLT_DATE = CA.FLT_DATE
		WHERE 
			(A.DAM_PCS > 0 or A.MANIFEST_PCS != A.RECD_PCS or A.MANIFEST_WT != A.RECD_WT 
	        or A.DAM_PROC_USER is not null or A.CIR_PROC_USER is not null) AND
			A.AWB_DATE = B.AWB_DATE AND
			A.AWB_NO   = B.AWB_NO   AND
			A.AWB_NO = #awbNo# AND
			TO_CHAR(A.AWB_DATE, 'DDMONYY') = #awbDate# AND
			A.FLT_KEY = #fltKey#   AND
			TO_CHAR(A.FLT_DATE, 'DDMONYY')  = #fltDate#
   	</select>
   	<select id="imp_discrepancy_getOtherList"  parameterClass="map"  
		resultClass="cargo.cms.imprt.bo.ShpIrrBO">
		SELECT 
			TO_CHAR(A.AWB_DATE, 'DDMONYY') as awbDate,
			A.AWB_NO as awbNo,
			SUBSTR(TRIM(A.AWB_NO),1,3)||'-'||SUBSTR(TRIM(A.AWB_NO),4) awbNoDisp,
			TO_CHAR(A.FLT_DATE, 'DDMONYY') as fltDate,
			TO_CHAR(A.FLT_DATE, 'DDMONYY') as fltDateDisplay,
			A.FLT_KEY as fltKey,
			PKG_COMMON.get_flt_ata(FLT.FLT_KEY,FLT.SCH_DATE, 'A', 'DD') AS ata,
			B.AWB_DEST as dest, 
			B.CONTENT as cont, 
			B.CONSOLE_IND as consol,
			NVL(B.AWB_PCS,0) ||'/'||NVL(B.AWB_WT,0) as awbPcsWt, 
			NVL(A.MANIFEST_PCS,0) || '/' || NVL(A.MANIFEST_WT,0) as manfPcsWt, 
			NVL(A.RECD_PCS,0) || '/' || NVL(A.RECD_WT,0) as locnPcsWt, 
			decode (A.CIR_PCS, '', '', NULL, '', 0, '', (A.CIR_PCS ||'/'||A.CIR_PCS_TYPE)) as cirPcsType,
			decode (A.CIR_WT, '', '', NULL, '', 0, '', (A.CIR_WT ||'/'||A.CIR_WT_TYPE)) as cirWtType,
			B.ACCS_HANDLER as accsHandler,
			A.CIR_RMK as cirRmk,
			A.CR_USER_ID as userID,
			TO_CHAR(A.CR_DATE, 'DDMONYY HH24:MI') as dateDisplay
		FROM  IMP_CAR_AWB B, IMP_CAR_SHP A 
			JOIN FLT_OPR FLT ON 
				FLT.FLT_KEY = A.FLT_KEY AND 
				FLT.SCH_DATE = A.FLT_DATE AND 
				FLT.FLT_TYPE = 'A'
		WHERE 
			(A.DAM_PCS > 0 or A.MANIFEST_PCS != A.RECD_PCS or A.MANIFEST_WT != A.RECD_WT 
	        or A.DAM_PROC_USER is not null or A.CIR_PROC_USER is not null) AND
			A.AWB_DATE = B.AWB_DATE AND
			A.AWB_NO   = B.AWB_NO   AND
			A.AWB_NO = #awbNo# AND
			TO_CHAR(A.AWB_DATE, 'DDMONYY') = #awbDate# AND
			(A.FLT_KEY != #fltKey#   OR
			TO_CHAR(A.FLT_DATE, 'DDMONYY')  != #fltDate#)
   	</select>
   	
   	<!--  Changed for QR -->
   	<select id="imp_discrepancy_getHouseCirList"  parameterClass="map"  
		resultClass="cargo.cms.imprt.bo.HouseCirBO">
		SELECT
   		HAWB_NO as hawbNo, 
   		decode (HCIR_PCS, '', '', NULL, '', 0, '', (HCIR_PCS ||'/'||HCIR_PCS_TYPE)) as hseCirPcsType,
   		decode (HCIR_WT, '', '', NULL, '', 0, '', (HCIR_WT ||'/'||HCIR_WT_TYPE)) as hseCirWtType,
   		NVL(HAWB_BRKDN_PCS,0) ||'/'||NVL(HAWB_BRKDN_WT,0) as bdPcsWt, 
   		HCIR_RMK as hseCirRem 
  		FROM IMP_HAWB_STRG_DTL
  		WHERE  FLT_KEY = #fltKey# and FLT_Date = #fltDate# AND AWB_NO = #awbNo# AND AWB_Date = #awbDate#
   	</select>
   	
   	<!--  Changed for QR -->
   	<select id="imp_discrepancy_getHouseOtherList"  parameterClass="map"  
		resultClass="cargo.cms.imprt.bo.HouseCirBO">
		select NVL(SUM(HCIR_PCS),0) as otherHcirPcs,NVL(SUM(HAWB_BRKDN_PCS),0) as otherbdPcs,
   		NVL(SUM(HCIR_WT),0) as otherHcirwt,NVL(SUM(HAWB_BRKDN_WT),0) as otherbdwt
  		FROM IMP_HAWB_STRG_DTL WHERE AWB_NO = #awbNo# AND AWB_Date = #awbDate# and FLT_KEY != #fltKey# and FLT_Date != #fltDate# and HAWB_NO=#hawbNo#
   	</select>
   	
 <!--flight discrepancy  -->


	<!-- ##################### Cargo Damage Report: Start ###############################################-->	

	<!-- Updated for fix 12533. Sanket 15SEP14 -->
	<select id="getCargoDamageList"  parameterClass="cargo.cms.imprt.bo.CrgDmgRprtSrchBO" resultClass="cargo.cms.imprt.bo.CrgDmgLstBO">
		SELECT 
			shp.FLT_KEY AS flightKey,
			TO_CHAR(shp.FLT_DATE, 'DDMONYY') AS flightDate,
			shp.damageNumber,
			pkg_common.get_flt_ata(flt.flt_key, flt.sch_date,'A') ata,
			ORIG AS origin, 
			DEST AS destination, 
			WTHR_COND AS weather
		FROM (SELECT FLT_KEY, FLT_DATE, count(1) AS damageNumber
			 		FROM IMP_CAR_SHP WHERE DAM_PROC_USER is not null GROUP BY FLT_KEY, FLT_DATE) shp
		JOIN FLT_OPR flt ON flt.FLT_KEY = shp.FLT_KEY AND flt.SCH_DATE = shp.FLT_DATE AND FLT_TYPE = 'A'
		WHERE damageNumber > 0 AND shp.FLT_DATE = #flightDate# 
		<isNotEmpty property="defaultCarrierCode" prepend="AND" >
			(flt.CARR_CODE = #defaultCarrierCode# or flt.CARR_CODE in (select carr_code from mast_carr_grp 
			where grp_carr_code	= #defaultCarrierCode#))
		</isNotEmpty>
		<isNotEmpty property="loginCarrier">
			AND	(flt.CARR_CODE = #loginCarrier# OR flt.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP 
			WHERE GRP_CARR_CODE	= #loginCarrier#))							
		</isNotEmpty>
	</select>

	<select id="getCargoDamageDetailsForShipmentList"  parameterClass="cargo.cms.imprt.bo.CrgDmgRprtSrchBO" resultClass="cargo.cms.imprt.bo.CrgDmgLstBO">
		SELECT 
			shp.FLT_KEY AS flightKey,
			TO_CHAR(shp.FLT_DATE, 'DDMONYY') AS flightDate,
			shp.damageNumber,
			pkg_common.get_flt_ata(flt.flt_key, flt.sch_date,'A') ata,
			ORIG AS origin, 
			DEST AS destination, 
			WTHR_COND AS weather
		FROM (SELECT FLT_KEY, FLT_DATE, count(1) AS damageNumber
			 		FROM IMP_CAR_SHP WHERE DAM_PROC_USER is not null GROUP BY FLT_KEY, FLT_DATE) shp
		JOIN FLT_OPR flt ON flt.FLT_KEY = shp.FLT_KEY AND flt.SCH_DATE = shp.FLT_DATE AND FLT_TYPE = 'A'
		WHERE damageNumber > 0 AND shp.FLT_DATE = #flightDate# 
			AND shp.FLT_KEY = #flightKey#
	</select>

	<!--  Changed for QR -->
	<select id="getCargoDamageShipmentList"  parameterClass="cargo.cms.imprt.bo.CrgDmgRprtSrchBO" resultClass="cargo.cms.imprt.bo.CrgDmgShpmntLstBO">
		SELECT 
			shp.AWB_No AS awbNumber, 
			TO_CHAR(shp.AWB_Date, 'DDMONYY') AS awbDate,
			CONTENT AS content,
			DAM_REF_NO AS referenceNumber,
			DAM_DECL_PCS AS damagePieces,
			DAM_DECL_WT AS damageWeight,
			(case
	         when (select count(1) from awb_inventory ai where ai.awb_no=shp.AWB_No and ai.awb_date=shp.AWB_Date and upper(dam_type)='MAJOR') >= 1
	         then 'Major'
	         when (select count(1) from awb_inventory ai where ai.awb_no=shp.AWB_No and ai.awb_date=shp.AWB_Date and upper(dam_type)='MINOR') >= 1
	         then 'Minor'
	         else ''
	         end) AS damtype,
   			DAM_RMK AS damageRemarks,
			DAM_PROC_USER AS processedUser,
			to_char(DAM_PROC_DATE, 'DDMONYY HH24:MI') AS processedDate   
		FROM IMP_CAR_SHP shp 
		JOIN IMP_CAR_AWB car ON shp.AWB_No = car.AWB_No AND shp.AWB_Date = car.AWB_Date
		WHERE DAM_PROC_USER is not null	 
	    AND shp.FLT_KEY = #flightKey# 
		AND shp.FLT_DATE = #flightDate#
		ORDER BY shp.AWB_No
	</select>

	<select id="getCargoDamageDetails1"  parameterClass="cargo.cms.imprt.bo.CrgDmgRprtSrchBO" resultClass="cargo.cms.imprt.bo.CrgDmgRprtBO">
		SELECT 
			a.AWB_NO AS awbNumber,
			TO_CHAR(a.AWB_DATE, 'DDMONYY') AS awbDate,
			TO_CHAR(a.FLT_DATE, 'DDMONYY') AS flightDate,
			a.FLT_KEY AS flightKey, 
			pkg_common.get_flt_ata(a.flt_key, a.flt_date,'A') AS ata,  
			a.MANIFEST_PCS AS manifestPieces, 
			a.MANIFEST_WT AS manifestWeight,
			a.DAM_PCS AS damagePieces,
			a.DAM_WT AS damageWeight, 
			a.DAM_REF_NO AS referenceNumber,
			a.DAM_DECL_PCS AS damageDeclaredPieces,
			a.DAM_DECL_WT AS damageDeclaredWeight,
			b.ACCS_HANDLER AS accsHandler,
			b.AWB_PCS AS awbPieces,
			b.AWB_WT AS awbWeight, 
			b.CONTENT AS content,
			a.DAM_RMK AS awbRemarks,
			b.CONSOLE_IND cnslInd,
			((select AWB_IMAGE_NAME FROM AWB_IMAGE WHERE seq_no = (SELECT MAX(SEQ_NO) FROM AWB_IMAGE WHERE AWB_NO = #awbNumber# AND AWB_DATE = #awbDate#) )) AS transactionId
		FROM IMP_CAR_SHP a, IMP_CAR_AWB b
		WHERE a.AWB_NO = #awbNumber#
			AND to_date(a.AWB_DATE) = #awbDate#
			AND a.FLT_DATE = #flightDate#
			AND a.FLT_KEY = #flightKey#
			AND a.AWB_NO = b.AWB_NO 
			AND a.AWB_DATE = b.AWB_DATE
	</select>

	<select id="getCargoDamageDetails2"  parameterClass="cargo.cms.imprt.bo.CrgDmgRprtSrchBO" resultClass="cargo.cms.imprt.bo.CrgDmgRprtCndtnBO">
		SELECT
			a.DAM_PCS AS damagePieces,
			b.CODE_DESC AS damageDescription
		FROM MAST_CODE_DTL b 
		LEFT JOIN IMP_AWB_STRG_DAM_COND a
			 ON a.DAM_COND = b.CODE 
				AND A.AWB_NO = #awbNumber#
				AND A.AWB_DATE = #awbDate#
				AND A.FLT_KEY = #flightKey#
				AND A.FLT_DATE = #flightDate#
		WHERE b.CODE_TYPE = 'DAMAGE_CONDN'
		ORDER BY b.CODE_DESC
	</select>

	<select id="getCargoDamageDetails3"  parameterClass="cargo.cms.imprt.bo.CrgDmgRprtSrchBO" resultClass="cargo.cms.imprt.bo.CrgDmgHsBO">
		SELECT 
			a.HAWB_NO AS hawbNumber,
			a.HAWB_BRKDN_PCS AS hawbBreakdownPieces,
			a.HAWB_BRKDN_WT AS hawbBreakdownWeight,
			a.DAM_PCS AS damagePieces,
			a.DAM_WT AS damageWeight,
			a.DAM_RMK AS damageRemarks
		FROM IMP_HAWB_STRG_DTL a
		WHERE A.AWB_NO = #awbNumber#
			AND A.AWB_DATE = #awbDate#
			AND A.FLT_KEY = #flightKey#
			AND A.FLT_DATE = #flightDate#
	</select>
	<select id="getcargodamagelocation"  parameterClass="cargo.cms.imprt.bo.CrgDmgRprtSrchBO" resultClass="cargo.cms.imprt.bo.CrgDmgRprtBO">
    select awb.FLT_KEY as flightKey,
 	TO_CHAR(awb.FLT_DATE,'DDMONYY') as flightDate,
 	awb.LOC_CODE as location,
 	decode(awb.LSP_NO,null, awb.ULD_KEY, awb.LSP_NO) lspno,
 	awb.LOCN_PCS as storagepcs,
 	awb.LOCN_WT as storagewts,
 	NVL(awb.DAM_PCS,'0') as dampcs,
 	NVL(awb.DAM_WT,'0') as damwts
    FROM AWB_INVENTORY awb  
    where awb.AWB_NO= #awbNumber# AND awb.AWB_DATE= #awbDate# and awb.DAM_IND = 'Y'
    </select>   
<!-- ##################### Cargo Damage Report : End   ###############################################-->	
 <!-- Inbound Consignment list Starts-->
<select id="imp_discrepancy_getFlightList" parameterClass="map"	resultClass="cargo.cms.imprt.bo.DiscrepancyBO">
	   <![CDATA[
	   SELECT      SHP.FLT_KEY as fltKey ,
	     SHP.FLT_DATE as fltDate,     SHP.FLT_DATE_DISPLAY as fltDateDisplay,     
		 SUBSTR(TRIM(TO_CHAR(NVL(FLT.SCH_TIME,0),'0000')),0,2)|| ':'||  SUBSTR(TRIM(TO_CHAR(NVL(FLT.SCH_TIME,0),'0000')),3,4) AS sta,     
		 PKG_COMMON.get_flt_eta(FLT.FLT_KEY,FLT.SCH_DATE,'A')	AS eta,    
		 PKG_COMMON.get_flt_ata(FLT.FLT_KEY,FLT.SCH_DATE,'A','DD')AS ata,
		 pkg_common.flt_ports(FLT.FLT_KEY,FLT.SCH_DATE) AS route,     
		 FLT.ACFT_REG_NO as reg,     
		 FLT.ACFT_TYPE  as type,     
		 SHP.FFM as ffm,      
		 SHP.CAR as car,      
		 FLT.ORIG as orig,
		 FLT.DEST as dest
		 FROM     (SELECT FLT_KEY,CARR_CODE,TO_CHAR(FLT_DATE,'DDMONYY') FLT_DATE, TO_CHAR(FLT_DATE,'DDMONYY') FLT_DATE_DISPLAY,      
			 SUM(CASE WHEN NVL(FFM_FLG, 'N') ='Y' THEN 1 ELSE 0 END) AS FFM,       
			 SUM(CASE WHEN (NVL(CAR_CREATED, 'N') = 'Y' or RECD_PCS > 0) THEN 1 ELSE 0 END) AS CAR 
			 FROM IMP_CAR_SHP GROUP BY FLT_KEY, FLT_DATE,CARR_CODE     ) SHP     
		 JOIN FLT_OPR FLT ON       FLT.FLT_KEY = SHP.FLT_KEY AND       
		 FLT.SCH_DATE = SHP.FLT_DATE AND       FLT.FLT_TYPE = 'A' 
		 WHERE SHP.FLT_DATE = #fltDate# 	 
		]]>
		<isEqual property="fltKey" compareValue="%">					
			AND SHP.FLT_KEY LIKE #fltKey#								
		</isEqual>	
		<isNotEmpty property="carrCode">
		<isEmpty property="fltNo">
			AND SHP.CARR_CODE = #carrCode#
		</isEmpty>
		</isNotEmpty>
		
		<isNotEmpty property="fltNo">
		<isEmpty property="carrCode">
			AND SHP.FLT_KEY like('%'|| #fltNo#)
		</isEmpty>
		</isNotEmpty>
		<isNotEmpty property="fltNo">
		<isNotEmpty property="carrCode">
			AND SHP.FLT_KEY=#fltKey#
		</isNotEmpty>
		</isNotEmpty>	
		<isEqual property="secondTime" compareValue="Y">
			AND SHP.FLT_KEY=#fltKey#
		</isEqual>	
		<isEmpty property="fltNo">
			<isNotEmpty property="loginCarrier">
				AND	(FLT.CARR_CODE = #loginCarrier#
				OR FLT.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP 
				WHERE GRP_CARR_CODE	= #loginCarrier#))							
			</isNotEmpty>
		</isEmpty>
		ORDER BY sta
	</select>     
	
	<select id="imp_discrepancy_getFlightList_route" parameterClass="map"	resultClass="cargo.cms.imprt.bo.DiscrepancyBO">
   <![CDATA[
  		SELECT 
  			DISTINCT OFF_POINT AS route    
  		FROM 
  			FLT_OPR_LEG 
  		WHERE 
  				FLT_TYPE = 'A' 
  			AND FLT_KEY = #fltKey# 
  			AND SCH_DATE = #fltDate# 	
	]]>
	</select>  
<select id="imp_cnsgn_locn_list" parameterClass="cargo.cms.imprt.bo.FullAWBInfoBO"
		resultClass="cargo.cms.imprt.bo.FullAWBInfoBO">
		SELECT A.LOC_CODE as locCode,A.LOCN_PCS as locnPcs,TRIM(TO_CHAR(NVL(A.LOCN_WT,0), '9999999990D9'))  as locnWt,NVL(A.ULD_KEY,A.LSP_NO) as deviceNum,
		DECODE(NVL(U.REF_NET_WT,L.REF_NET_WT),'','N/A',null,'N/A',TRIM(TO_CHAR(NVL(NVL(U.REF_NET_WT,L.REF_NET_WT),0), '9999999990D9'))) as refWt 
		FROM AWB_INVENTORY A
		LEFT JOIN ULD_INVENTORY U ON U.ULD_KEY = A.ULD_KEY AND A.ULD_KEY IS NOT NULL
		LEFT JOIN LSP_INVENTORY L ON L.LSP_NO = A.LSP_NO AND A.LSP_NO IS NOT NULL
		WHERE A.AWB_NO=#awbNo# AND A.AWB_DATE=#awbDate# AND A.FLT_KEY = #fltKey# AND A.FLT_DATE = #fltDate#
	</select> 
<select id="imp_cnsgn_post_record" parameterClass="cargo.cms.imprt.bo.FullAWBInfoBO" resultClass="java.lang.Integer">
	SELECT COUNT(1) FROM IMP_SRF A,IMP_SRF_FLT B WHERE B.SRF_NO = A.SRF_NO AND A.AWB_NO=#awbNo# AND A.AWB_DATE=#awbDate# AND A.STATUS='POSTED'
	</select>
	<select id="imp_cnsgn_devicecolor_record" parameterClass="java.lang.String" resultClass="java.lang.Integer">
	SELECT COUNT(1) FROM(SELECT DISTINCT AWB_NO FROM AWB_INVENTORY WHERE (ULD_KEY =#deviceNum# OR LSP_NO=#deviceNum#))
	</select>
	<select id="imp_cnsgn_ttif_record" parameterClass="cargo.cms.imprt.bo.FullAWBInfoBO" resultClass="java.lang.Integer">
	    SELECT COUNT(1) FROM DDT_SHP_TRF_DTL DTL,      DDT_SHP DS,      DDT_MSG DM
    WHERE DS.TR_NO      =DTL.TR_NO AND DM.TR_NO      = DTL.TR_NO AND dtl.trf_type IN ('TT','IF')
    AND DM.DDT_STATUS = 'P' AND DS.AWB_NO=#awbNo# AND DS.AWB_DATE=#awbDate#
	</select>
	<select id="imp_cnsgn_nullrefwt_record" parameterClass="cargo.cms.imprt.bo.FullAWBInfoBO" resultClass="java.lang.Integer">
	<![CDATA[ 
	SELECT COUNT(1) as refWt FROM AWB_INVENTORY A
	LEFT JOIN ULD_INVENTORY U ON U.ULD_KEY = A.ULD_KEY AND A.ULD_KEY IS NOT NULL
	LEFT JOIN LSP_INVENTORY L ON L.LSP_NO = A.LSP_NO AND A.LSP_NO IS NOT NULL
	WHERE A.AWB_NO=#awbNo# AND A.AWB_DATE=#awbDate# AND A.FLT_KEY = #fltKey# AND A.FLT_DATE = #fltDate# 
	AND ((a.uld_key is not null and U.REF_NET_WT IS NULL)  OR 
        (a.lsp_no is not null and L.REF_NET_WT IS NULL) or
        (a.uld_key is null and a.lsp_no is null))
	]]>
	</select>
	<select id="imp_cnsgn_shcconfig_record" parameterClass="cargo.cms.imprt.bo.FullAWBInfoBO" resultClass="java.lang.Integer">
	SELECT COUNT(1) FROM AWB AWB,MAST_SPL_HAND_CODE SPL WHERE 
    SPL.CODE IN (AWB.SPL_CODE1,AWB.SPL_CODE2,AWB.SPL_CODE3,AWB.SPL_CODE4,AWB.SPL_CODE5,AWB.SPL_CODE6,AWB.SPL_CODE7,AWB.SPL_CODE8,AWB.SPL_CODE9)
    AND NVL(SPL.REF_WT_REQ,'N') = 'Y' AND AWB.AWB_NO=#awbNo# AND AWB.AWB_DATE=#awbDate#
	</select>
	<select id="imp_cnsgn_buildup_record" parameterClass="cargo.cms.imprt.bo.FullAWBInfoBO" resultClass="java.lang.Integer">
	SELECT COUNT(1) FROM AWB_INVENTORY A WHERE A.AWB_NO = #awbNo# AND A.AWB_DATE=#awbDate# AND FLT_TYPE = 'E'
	</select>
	<select id="imp_cnsgn_postct_record" parameterClass="cargo.cms.imprt.bo.FullAWBInfoBO" resultClass="java.lang.Integer">
	SELECT COUNT(1) FROM IMP_TRM_HD H JOIN IMP_TRM_DTL D ON H.TRM_NO = D.TRM_NO 
			 	  WHERE H.VOID_USER IS NULL AND D.AWB_NO = #awbNo# AND D.AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY') AND STATUS = 'POSTED'
	</select>
        <select id="imp_cnsgn_totalrefwt_record" parameterClass="cargo.cms.imprt.bo.FullAWBInfoBO" resultClass="java.lang.String">
	SELECT TRIM(TO_CHAR(SUM(NVL(NVL(U.REF_NET_WT,L.REF_NET_WT),0)), '9999999990D9')) as refWt FROM AWB_INVENTORY A
	LEFT JOIN ULD_INVENTORY U ON U.ULD_KEY = A.ULD_KEY AND A.ULD_KEY IS NOT NULL
	LEFT JOIN LSP_INVENTORY L ON L.LSP_NO = A.LSP_NO AND A.LSP_NO IS NOT NULL
	WHERE A.AWB_NO=#awbNo# AND A.AWB_DATE=#awbDate# AND A.FLT_KEY = #fltKey# AND A.FLT_DATE = #fltDate#
	</select>
	<select id="imp_cnsgn_totalmanfwt_record" parameterClass="cargo.cms.imprt.bo.FullAWBInfoBO" resultClass="java.lang.String">
	SELECT TRIM(TO_CHAR(NVL(SUM(A.manifest_wt),0),'9999999990D9')) as refWt FROM IMP_CAR_SHP A
	WHERE A.AWB_NO=#awbNo# AND A.AWB_DATE=#awbDate# AND A.FLT_KEY = #fltKey# AND A.FLT_DATE = #fltDate#
	</select>
	<select id="imp_cnsgn_configrefwtvar_record" parameterClass="cargo.cms.imprt.bo.FullAWBInfoBO" resultClass="java.lang.String">
	SELECT RULE_VALUE FROM CMSRULES WHERE RULE_CODE='REFERENCE_WT_CONFIG'
	</select>	
	<select id="imp_discrepancy_getAwbList" parameterClass="map"
		resultClass="cargo.cms.imprt.bo.FullAWBInfoBO">
		<![CDATA[ 
		SELECT
			TO_CHAR(A.FLT_DATE, 'DDMONYY') as fltDate,
			A.FLT_KEY as fltKey, 
			TO_CHAR(A.AWB_DATE, 'DDMONYY') as awbDate,
			A.AWB_NO as awbNo, 
			rtrim(B.AWB_ORIGIN || '/' || B.AWB_DEST, '/') as origDest, 
			UPPER(B.CONTENT) as content, 
			case WHEN (B.CONTENT like 'CONS%') THEN 'Y' ELSE 'N' end as consl,
			B.CONSOLE_IND as conslind,
			(SELECT sum(HAWB_PCS) FROM EDI_FHL_HAWB where TR_NO =  
			(select MAX(TR_NO) From EDI_FHL where AWB_NO=A.AWB_NO and TO_CHAR(AWB_DATE,'DDMONYY') = TO_CHAR(A.AWB_DATE, 'DDMONYY')) ) as hawbPCS,			
			AB.SPL_CODE1 as splCode1, 
			AB.SPL_CODE2 as splCode2,
			AB.SPL_CODE3 as splCode3, 
			AB.SPL_CODE4 as splCode4,
			AB.SPL_CODE5 as splCode5, 
			AB.SPL_CODE6 as splCode6,
			AB.SPL_CODE7 as splCode7, 
			AB.SPL_CODE8 as splCode8,
			AB.SPL_CODE9 as splCode9,
			(SELECT V.CC_CODE FROM V_CST_IMP_CC_CODE_AWB_ALL V
			WHERE V.FLT_KEY = A.FLT_KEY AND V.FLT_DATE = A.FLT_DATE AND V.AWB_NO = A.AWB_NO AND V.AWB_DATE = A.AWB_DATE 
				  AND NVL(V.HAWB_NO, '000000000000000000') =  '000000000000000000' AND ROWNUM = 1) as ccCode,
			B.CATALOG as catalog,
			B.APPNTD_AGENT as appntdAgent,
			NVL(I.INV_PCS,0) || '/' || TRIM(TO_CHAR(NVL(I.INV_WT,0), '9999999990D9')) as invPcsWt,
			NVL(B.AWB_PCS,0) ||'/'|| TRIM(TO_CHAR(NVL(B.AWB_WT,0), '9999999990D9')) as awbPcsWt, 
			(NVL(A.MANIFEST_PCS,0) || '/' || TRIM(TO_CHAR(NVL(A.MANIFEST_WT,0), '9999999990D9'))) as manfPcsWt,
			NVL(A.RECD_PCS,0) ||'/'|| TRIM(TO_CHAR(NVL(A.RECD_WT,0), '9999999990D9'))  as bdPcsWt,
			A.BULK_PCS as manfBulkPcs,
     		TRIM(TO_CHAR(NVL(A.BULK_WT,0), '9999999990D9')) as manfBulkWt, 
			NVL(A.BUP_PCS,0) as manfBupPcs,
			NVL(A.BUP_WT,0)  as manfBupWt,
			CASE WHEN B.CATALOG = 'TA' THEN 0
				ELSE CASE WHEN A.CIR_WT_TYPE IS NULL THEN case when nvl(A.PPK_TYPE,'B') != 'P' then RECD_WT else 0 end 
			 		ELSE NVL(A.BULK_WT,0) + CASE WHEN A.CIR_WT_TYPE = 'SL' THEN -1 * NVL(A.CIR_BULK_WT,0) ELSE NVL(A.CIR_BULK_WT,0) END END END as bdBulkWt, 
			CASE WHEN B.CATALOG = 'TA' THEN 0
				 ELSE CASE WHEN  A.CIR_WT_TYPE IS NULL THEN case when nvl(A.PPK_TYPE,'B') = 'P' then RECD_WT else 0 end	 
						ELSE NVL(A.BUP_WT,0) + CASE WHEN A.CIR_WT_TYPE = 'SL' THEN -1 * NVL(A.CIR_BUP_WT,0) ELSE NVL(A.CIR_BUP_WT,0) END END END as bdBupWt,
			rtrim(AI.LOC_CODE, '/') || CASE WHEN INV_COUNT > 1 THEN '(+)' END  as whDestLocn,
			case when A.CIR_PROC_USER is not null then 'Y' else 'N' end as cir,
			case when A.DAM_PROC_USER is not null then 'Y' else 'N' end as dam,
			ltrim(NVL(S.PCS, TR.PCS) || '/' || NVL(S.WT, TR.WT), '/') as srfTrmPcsWt,
			NVL(A.CAR_CREATED,'N') as carYN,
		      (case when B.awb_pcs <> A.MANIFEST_PCS then 'Y'  else 'N' end ) partShpYN,
		      DECODE(A.DOC_DISC,null,null,SUBSTR(A.DOC_DISC,1,1)) docDisc,
		      ( Case when
		      (  SELECT count(1) FROM V_DDT_DTL WHERE FLT_KEY = A.FLT_KEY AND FLT_DATE = A.FLT_DATE AND AWB_NO= A.AWB_NO AND 
		      AWB_DATE = to_char(A.AWB_DATE,'DDMONYY') AND shp_trf_type='TT')>0 then 'TT'
		      when
		      (  SELECT count(1) FROM V_DDT_DTL WHERE FLT_KEY = A.FLT_KEY AND FLT_DATE = A.FLT_DATE AND AWB_NO= A.AWB_NO AND 
		      AWB_DATE = to_char(A.AWB_DATE,'DDMONYY') AND shp_trf_type='IF')>0 then 'IF'
		      when
		      (  SELECT count(1) FROM V_DDT_DTL WHERE FLT_KEY = A.FLT_KEY AND FLT_DATE = A.FLT_DATE AND AWB_NO= A.AWB_NO AND 
		      AWB_DATE = to_char(A.AWB_DATE,'DDMONYY')  AND shp_trf_type='QT')>0 then 'QT'
		      END) as trfType,
		      (CASE WHEN 
		      (select count(1) from cust_company where code=B.AGENT_CUST_NO AND NVL(virtual_cr_acc,'N') = 'Y')>0 then 'Y'
		      ELSE Case when
		      (SELECT count(1) FROM CUST_AGENT_AIRL_CREDIT WHERE CUST_NO=B.AGENT_CUST_NO AND nvl(upper(Status),'**') <> 'VOID'
		      AND instr( nvl(UPPER(CARR_CODE),'*'), nvl(UPPER(A.CARR_CODE ),'**') ) > 0
	          AND ((B.CATALOG IN ('IG','IS') AND (CR_TYPE='Import_GEN' OR CR_TYPE='GEN'))
	          	OR (B.CATALOG ='IO' AND (CR_TYPE='Import_OBC' OR CR_TYPE='GEN'))) 
		      AND (TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY') 
				<= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') 
				>= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') ) )>0 then 'Y'
	          ELSE CASE WHEN 
	          (SELECT count(1) FROM cust_agent_level_crd WHERE CUST_NO=B.AGENT_CUST_NO   AND nvl(upper(Status),'**') <> 'VOID' 
				AND (TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY') 
				<= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') 
				>= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') ) )>0 then 'Y'
	          ELSE 'N' 
		      END END END) as airlCrYN,
		      (CASE WHEN B.CATALOG LIKE 'T%' THEN
			  'T'
			  ELSE
			  'I'
			  END) awbType,
			  (CASE WHEN 'IMX' IN (B.SPL_CODE1,
			  B.SPL_CODE2 ,
			  B.SPL_CODE3,
			  B.SPL_CODE4 ,
			  B.SPL_CODE5,
			  B.SPL_CODE6,
			  B.SPL_CODE7,
			  B.SPL_CODE8 ,
			  B.SPL_CODE9) THEN
			  1 
			  WHEN
			  'IMR' IN (B.SPL_CODE1,
			  B.SPL_CODE2 ,
			  B.SPL_CODE3,
			  B.SPL_CODE4 ,
			  B.SPL_CODE5,
			  B.SPL_CODE6,
			  B.SPL_CODE7,
			  B.SPL_CODE8 ,
			  B.SPL_CODE9) THEN
			  1
			  ELSE 
			  2 
			  END ) displayOrd,
			   (SELECT CASE WHEN (SELECT count(1) FROM XT_IMP_CAR_SHP_DTL xt where xt.awb_no = A.AWB_NO and xt.AWB_DATE = A.AWB_DATE and xt.IMP_FLT_KEY = A.flt_key and xt.IMP_FLT_DATE = A.flt_date ) > 0 then 'Y' else 'N' end  from dual) as xtShpFlg 
		      ]]>
		FROM IMP_CAR_AWB B, IMP_CAR_SHP A
		LEFT JOIN 
		(SELECT AWB_NO, AWB_DATE, FLT_KEY, FLT_DATE, MIN(SEQ_NO) SEQ_NO, SUM(LOCN_PCS) INV_PCS, SUM(LOCN_WT) INV_WT, 
		 SUM(DECODE(LOC_CODE, NULL, 0, 1)) LOCN_COUNT, count(1) INV_COUNT
			FROM AWB_INVENTORY 
			GROUP BY AWB_NO, AWB_DATE, FLT_KEY, FLT_DATE
		) I 
		   ON A.AWB_NO = I.AWB_NO AND
			A.AWB_DATE = I.AWB_DATE AND
			A.FLT_KEY = I.FLT_KEY AND
			A.FLT_DATE = I.FLT_DATE
		LEFT JOIN AWB_INVENTORY AI ON AI.SEQ_NO = I.SEQ_NO
		LEFT JOIN AWB AB ON AB.AWB_NO = A.AWB_NO AND  AB.AWB_DATE = A.AWB_DATE
		LEFT JOIN 
		(SELECT SF.AWB_NO, SF.AWB_DATE, SF.FLT_KEY, SF.FLT_DATE, SUM(SR.SRF_PCS) PCS, SUM(SR.SRF_WT) WT			  
			FROM IMP_SRF SR 
			join IMP_SRF_FLT SF ON SR.SRF_NO = SF.SRF_NO
			WHERE ((SR.SRF_EXPY_DATE > sysdate and SR.STATUS ='ISSUED') or SR.STATUS ='POSTED' or
				   SR.SRF_NO IN (SELECT SRF_NO FROM IMP_CDIF WHERE VOID_DATE IS NULL))    
			GROUP BY SF.AWB_NO, SF.AWB_DATE, SF.FLT_KEY, SF.FLT_DATE
		) S ON A.AWB_NO = S.AWB_NO AND
			A.AWB_DATE = S.AWB_DATE AND
			A.FLT_KEY = S.FLT_KEY AND
			A.FLT_DATE = S.FLT_DATE
		LEFT JOIN 
		(SELECT D.AWB_NO, D.AWB_DATE, D.FLT_KEY, D.FLT_DATE, SUM(D.PCS) PCS, SUM(D.WT) WT		
			FROM IMP_TRM_DTL D
			JOIN IMP_TRM_HD H ON H.TRM_NO = D.TRM_NO
			WHERE H.VOID_DATE IS NULL
			GROUP BY D.AWB_NO, D.AWB_DATE, D.FLT_KEY, D.FLT_DATE
		) TR ON
			A.AWB_NO = TR.AWB_NO AND
			A.AWB_DATE = TR.AWB_DATE AND
			A.FLT_KEY = TR.FLT_KEY AND
			A.FLT_DATE = TR.FLT_DATE		
		WHERE 
			A.AWB_DATE = B.AWB_DATE AND
			A.AWB_NO   = B.AWB_NO AND
			A.FLT_KEY = #fltKey# AND
			A.FLT_DATE  = #fltDate#
			<isNotEmpty property="loginCarrier">
				   AND ( A.carr_code = #loginCarrier# OR  A.carr_code IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE  = #loginCarrier#))             
            </isNotEmpty>  
            <isEqual property="xtShpFlg" compareValue="Y">
     		<![CDATA[
	 			 AND  EXISTS (SELECT NULL FROM XT_IMP_CAR_SHP_DTL xt where xt.awb_no = A.AWB_NO and xt.AWB_DATE = A.AWB_DATE and xt.IMP_FLT_KEY = A.flt_key and xt.IMP_FLT_DATE = A.flt_date )
      		 	]]>
    		 </isEqual>          		
		ORDER BY awbtype,displayOrd,awbNo
	</select>   

<select id="imp_discrepancy_getAgentList" parameterClass="map"
	resultClass="cargo.cms.imprt.bo.FullAWBInfoBO">
	SELECT
		B.AGENT_CUST_NO as agentCustNo, b.APPNTD_AGENT as appntdAgent,
		COUNT (B.AWB_NO) as cnt
	FROM IMP_CAR_SHP A, IMP_CAR_AWB B
	LEFT JOIN CUST_COMPANY C ON B.AGENT_CUST_NO = C.CODE  
	WHERE (NVL(A.CAR_CREATED, 'N') = 'Y' or A.RECD_PCS > 0) AND
		A.AWB_DATE = B.AWB_DATE AND
		A.AWB_NO   = B.AWB_NO AND
		A.FLT_KEY = #fltKey# AND
		A.FLT_DATE  = #fltDate# 
	GROUP BY B.AGENT_CUST_NO, b.APPNTD_AGENT
	ORDER BY b.APPNTD_AGENT ASC
</select>
<select id="imp_discrepancy_getAgentAwbList" parameterClass="map"
		resultClass="cargo.cms.imprt.bo.FullAWBInfoBO">
		SELECT
			TO_CHAR(A.FLT_DATE, 'DDMONYY') as fltDate,
			A.FLT_KEY as fltKey, 
			TO_CHAR(A.AWB_DATE, 'DDMONYY') as awbDate,
			A.AWB_NO as awbNo, 
			rtrim(B.AWB_ORIGIN || '/' || B.AWB_DEST, '/') as origDest, 
			UPPER(B.CONTENT) as content, 
			case WHEN (B.CONTENT like 'CONS%') THEN 'Y' ELSE 'N' end as consl,
			 B.CONSOLE_IND as conslind,
			(SELECT sum(HAWB_PCS) FROM EDI_FHL_HAWB where TR_NO =  
			(select TR_NO From EDI_FHL where AWB_NO=A.AWB_NO and TO_CHAR(AWB_DATE,'DDMONYY') = TO_CHAR(A.AWB_DATE, 'DDMONYY')) ) as hawbPCS,
			B.SPL_CODE1 as splCode1, 
			B.SPL_CODE2 as splCode2,
			B.SPL_CODE3 as splCode3, 
			B.SPL_CODE4 as splCode4,
			B.SPL_CODE5 as splCode5, 
			B.SPL_CODE6 as splCode6,
			B.SPL_CODE7 as splCode7, 
			B.SPL_CODE8 as splCode8,
			B.SPL_CODE9 as splCode9,
			(SELECT V.CC_CODE FROM V_CST_IMP_CC_CODE_AWB_ALL V
			WHERE V.FLT_KEY = A.FLT_KEY AND V.FLT_DATE = A.FLT_DATE AND V.AWB_NO = A.AWB_NO 
				  AND NVL(V.HAWB_NO, '000000000000000000') =  '000000000000000000' AND ROWNUM = 1) as ccCode,
			B.CATALOG as catalog,
			B.APPNTD_AGENT as appntdAgent,
			NVL(I.INV_PCS,0) || '/' || TRIM(TO_CHAR(NVL(I.INV_WT,0), '9999999990D9')) as invPcsWt,
			NVL(B.AWB_PCS,0) ||'/'|| TRIM(TO_CHAR(NVL(B.AWB_WT,0), '9999999990D9')) as awbPcsWt, 
			(NVL(A.MANIFEST_PCS,0) || '/' || TRIM(TO_CHAR(NVL(A.MANIFEST_WT,0), '9999999990D9'))) as manfPcsWt,
			NVL(A.RECD_PCS,0) ||'/'|| TRIM(TO_CHAR(NVL(A.RECD_WT,0), '9999999990D9'))  as bdPcsWt,
	    	A.BULK_PCS as manfBulkPcs,
     		TRIM(TO_CHAR(NVL(A.BULK_WT,0), '9999999990D9')) as manfBulkWt, 
			NVL(A.BUP_PCS,0) as manfBupPcs,
			NVL(A.BUP_WT,0)  as manfBupWt,
			CASE WHEN B.CATALOG = 'TA' THEN 0
				ELSE CASE WHEN A.CIR_WT_TYPE IS NULL THEN RECD_WT
			 		ELSE NVL(A.BULK_WT,0) + CASE WHEN A.CIR_WT_TYPE = 'SL' THEN -1 * NVL(A.CIR_BULK_WT,0) ELSE NVL(A.CIR_BULK_WT,0) END END END as bdBulkWt, 
			CASE WHEN B.CATALOG = 'TA' THEN 0
				 ELSE CASE WHEN  A.CIR_WT_TYPE IS NULL THEN 0	 
						ELSE NVL(A.BUP_WT,0) + CASE WHEN A.CIR_WT_TYPE = 'SL' THEN -1 * NVL(A.CIR_BUP_WT,0) ELSE NVL(A.CIR_BUP_WT,0) END END END as bdBupWt,
			rtrim(AI.LOC_CODE, '/') || CASE WHEN INV_COUNT > 1 THEN '(+)' END  as whDestLocn,
			case when A.CIR_PROC_USER is not null then 'Y' else 'N' end as cir,
			case when A.DAM_PROC_USER is not null then 'Y' else 'N' end as dam,
			ltrim(NVL(S.PCS, TR.PCS) || '/' || NVL(S.WT, TR.WT), '/') as srfTrmPcsWt
		FROM IMP_CAR_AWB B, IMP_CAR_SHP A
		LEFT JOIN 
		(SELECT AWB_NO, AWB_DATE, FLT_KEY, FLT_DATE, MIN(SEQ_NO) SEQ_NO, SUM(LOCN_PCS) INV_PCS, SUM(LOCN_WT) INV_WT, 
				SUM(DECODE(LOC_CODE, NULL, 0, 1)) LOCN_COUNT, count(1) INV_COUNT
			FROM AWB_INVENTORY 
			GROUP BY AWB_NO, AWB_DATE, FLT_KEY, FLT_DATE
		) I 
		   ON A.AWB_NO = I.AWB_NO AND
			A.AWB_DATE = I.AWB_DATE AND
			A.FLT_KEY = I.FLT_KEY AND
			A.FLT_DATE = I.FLT_DATE
		LEFT JOIN AWB_INVENTORY AI ON AI.SEQ_NO = I.SEQ_NO
		LEFT JOIN 
		(SELECT SF.AWB_NO, SF.AWB_DATE, SF.FLT_KEY, SF.FLT_DATE, SUM(SR.SRF_PCS) PCS, SUM(SR.SRF_WT) WT			  
			FROM IMP_SRF SR 
			join IMP_SRF_FLT SF ON SR.SRF_NO = SF.SRF_NO
			WHERE ((SR.SRF_EXPY_DATE > sysdate and SR.STATUS ='ISSUED') or SR.STATUS ='POSTED' or
				   SR.SRF_NO IN (SELECT SRF_NO FROM IMP_CDIF WHERE VOID_DATE IS NULL))    
			GROUP BY SF.AWB_NO, SF.AWB_DATE, SF.FLT_KEY, SF.FLT_DATE
		) S ON A.AWB_NO = S.AWB_NO AND
			A.AWB_DATE = S.AWB_DATE AND
			A.FLT_KEY = S.FLT_KEY AND
			A.FLT_DATE = S.FLT_DATE
		LEFT JOIN 
		(SELECT D.AWB_NO, D.AWB_DATE, D.FLT_KEY, D.FLT_DATE, SUM(D.PCS) PCS, SUM(D.WT) WT		
			FROM IMP_TRM_DTL D
			JOIN IMP_TRM_HD H ON H.TRM_NO = D.TRM_NO
			WHERE H.VOID_DATE IS NULL
			GROUP BY D.AWB_NO, D.AWB_DATE, D.FLT_KEY, D.FLT_DATE
		) TR ON
			A.AWB_NO = TR.AWB_NO AND
			A.AWB_DATE = TR.AWB_DATE AND
			A.FLT_KEY = TR.FLT_KEY AND
			A.FLT_DATE = TR.FLT_DATE		
		WHERE
			A.AWB_DATE = B.AWB_DATE AND
			A.AWB_NO   = B.AWB_NO AND
			A.FLT_KEY = #fltKey# AND
			A.FLT_DATE  = #fltDate# AND
			B.APPNTD_AGENT = #agentCustName#
		ORDER BY A.AWB_NO
	</select> 
	<select id="imp_trucker_getCustCompany"  parameterClass="map"  
		resultClass="cargo.cms.imprt.bo.CustCompanyBO">
		SELECT 
			   CODE_DESC as codeDesc,
			   CODE as code,
			   CO_IATA_CODE as coIataCode,
			   CARR_CODE as carrCode,
			   TEL_IMP1 as telImp1,
			   TEL_IMP2 as telImp2,
			   FAX1 as fax1,
			   FAX2 as fax2,
			   EMAIL1 as email1,
			   EMAIL2 as email2,
			   DBMS_RANDOM.VALUE(50000,300000) as totalOSPayment
		FROM CUST_COMPANY
		WHERE CODE = #code#
   	</select>

<select id="imp_trucker_getCustIssueNotyCompany"  parameterClass="map"  
		resultClass="cargo.cms.imprt.bo.CustCompanyBO">
		SELECT 
			   CODE_DESC as codeDesc,
			   CODE as code,
			   CO_IATA_CODE as coIataCode,
			   CARR_CODE as carrCode,
			   TEL_IMP1 as telImp1,
			   TEL_IMP2 as telImp2,
			   FAX1 as fax1,
			   FAX2 as fax2,
			   EMAIL1 as email1,
			   EMAIL2 as email2,
			   DBMS_RANDOM.VALUE(50000,300000) as totalOSPayment
		FROM CUST_COMPANY			
		WHERE CODE_DESC = #codeDesc#
   	</select>
   		
   	<select id="imp_trucker_getCustContact" parameterClass="map" 
   		resultClass="cargo.cms.imprt.bo.CustContactBO">
	   	SELECT EMAIL1, EMAIL2, EMAIL3, EMAIL4, EMAIL5, FAX1, FAX2, FAX3 FROM CUST_CONTACT 
	   	WHERE CUST_NO=#code# AND CONTACT_TYPE = 'ECA'
   	</select>
   	
   	
<!-- Inbound Consignment list Ends -->


<!-- ULD Breakdown status :: Santosh Desai:: starts -->

		<select id="imp_brk_uldstatuslist"  parameterClass="cargo.cms.imprt.bo.BrkULDStatusBO"  
		resultClass="cargo.cms.imprt.bo.BrkULDStatusBO">
		 SELECT 
			    TR_NO                                              AS trNo        ,
			    DOC_LINE_NO                                        AS docLineNo   ,
			    FLT_NO                                             AS flightNo    ,
			    FLT_KEY                                            AS flightKey   ,
			    TO_CHAR(FLT_DATE,'DDMONYY')                        AS flightDate  ,
			    CARR_CODE										   AS carrierCode,
			    ULD_KEY                                            AS uldKey      ,			   
			    TO_CHAR(LM_DATE , 'DDMONYY HH24:MI:SS') 		   AS lastModDate ,			   
			    CHKIN_YN  										   AS checkInStatus,			    
			    TO_CHAR(BRKDN_START_DATE,'DDMONYY')			   	   AS bdStartDate,			    
			    TO_CHAR(BRKDN_START_DATE,'HH24') 				   AS bdStartTimeHH,
       			TO_CHAR(BRKDN_START_DATE,'MI') 					   AS bdStratTimeMI,   		    
			    BRKDN_START_USER_ID								   AS bdStartUser,			           								   
			    BRKDN_COMPL_YN									   AS breakDownCompl,
			    TO_CHAR(BRKDN_COMPL_DATE,'DDMONYY')			   	   AS bdComplDate,	
			    SUBSTR(TRIM(TO_CHAR(NVL(BRKDN_COMPL_TIME,0),'0000')),0,2) AS bdComplTimeHH,
          		SUBSTR(TRIM(TO_CHAR(NVL(BRKDN_COMPL_TIME,0),'0000')),3,2) AS bdComplTimeMI,  		   
			    BRKDN_COMPL_USER_ID								   AS bdComplUser,			    
			    ROW_NUMBER() OVER (ORDER BY FLT_NO) 			   AS serialNo,
			    (select ui.loc_code from uld_inventory ui where ui.uld_key =  IMP_RAMP_CHK_DTL.ULD_KEY and rownum=1 ) AS location,
			    (SELECT code_desc from mast_code_dtl where code = FUN_GET_ULD_STATE(ULD_KEY) and rownum=1) as uldState			  
			   	FROM IMP_RAMP_CHK_DTL		   
        	    WHERE			  
			   	FLT_NO    = #flightNo#
			  	AND CARR_CODE = upper(#carrierCode#)
			  	AND FLT_DATE = #flightDate#
			  	AND CHKIN_YN='Y'
			  	<isNotEmpty property="uldKey">
				AND ULD_KEY = #uldKey#
				</isNotEmpty>	
				<![CDATA[ 
					and not exists (select null from uld_inventory where uld_key = IMP_RAMP_CHK_DTL.uld_key and TRANSIT_TYPE in ('IF','TT'))	
				]]>			    
	</select>


	<select id="imp_brk_uldstatusdetails"  parameterClass="cargo.cms.imprt.bo.BrkULDStatusBO"  
		resultClass="cargo.cms.imprt.bo.BrkULDStatusBO">
		 SELECT 
			    dtl.TR_NO                                              AS trNo        ,
			    dtl.DOC_LINE_NO                                        AS docLineNo   ,
			    dtl.FLT_NO                                             AS flightNo    ,
			    dtl.FLT_KEY                                            AS flightKey   ,
			    TO_CHAR(dtl.FLT_DATE,'DDMONYY')                        AS flightDate  ,
			    dtl.CARR_CODE										   AS carrierCode,
			    dtl.ULD_KEY                                            AS uldKey      ,	
			    <!-- dtl.LOC_CODE									   AS location   , -->
			    dtl.CARGO_DAM										   AS cargoDamage,
			    dtl.DAM_IND											   AS damInd,
			    dtl.SER_IND											   AS servicableInd,
			    pkg_common.get_flt_ata(opr.flt_key, opr.sch_date,'A', 'DD')  AS ata,
			    (select ui.Empty_flg from uld_inventory ui where ui.uld_key =  dtl.ULD_KEY ) empty,		    
			    uld.WH_INSTRUCTION									   AS uldBDInstruction,
			    uld.HANDLING_MODE									   AS handlingMode,
			    uld.TRANSFER_TYPE									   AS transferType,
			    uld.TRANSIT_IND 									   AS transitInd,
			    TO_CHAR(dtl.LM_DATE , 'DDMONYY HH24:MI:SS') 		   AS lastModDate 		   
			    FROM IMP_RAMP_CHK_DTL	dtl
			   	LEFT JOIN IMP_ULD_LIST uld on uld.FLT_KEY=dtl.FLT_KEY AND uld.FLT_DATE = dtl.FLT_DATE AND uld.ULD_KEY=dtl.ULD_KEY
			   	JOIN FLT_OPR opr on dtl.FLT_KEY	 = opr.FLT_KEY   AND dtl.FLT_DATE = opr.SCH_DATE  AND	opr.FLT_TYPE = 'A'				
			   	WHERE			  
			   	dtl.FLT_KEY    = #flightKey#			  	
			  	AND dtl.FLT_DATE = #flightDate#			  	
				AND dtl.ULD_KEY = #uldKey#						    
	</select>	
	
	   
	
	<update id="imp_brk_uldbreak_start" parameterClass="cargo.cms.imprt.bo.BrkULDStatusBO">
		UPDATE IMP_RAMP_CHK_DTL	SET	
			BRKDN_START_USER_ID = #lmUserId#,
			BRKDN_START_DATE = TO_DATE(#bdStartDateTime#,'DDMONYY HH24:MI'),					
			DAM_IND = #damInd#,
			BRKDN_LOCN = #location#,
			SER_IND = #servicableInd#,
			CARGO_DAM = #cargoDamage#,
			LM_USER_ID	 =#lmUserId#,
			LM_DATE	 = sysdate,
			TR_TYPE=#trtype# 		
		WHERE 	FLT_KEY    = #flightKey#
			  	AND FLT_DATE = #flightDate#			  	
				AND ULD_KEY = #uldKey#					    
	</update>

	<update id="imp_brk_uldbreak_unstart" parameterClass="cargo.cms.imprt.bo.BrkULDStatusBO">
		UPDATE IMP_RAMP_CHK_DTL	SET	
			BRKDN_START_USER_ID = '',
			BRKDN_START_DATE = '',					
			DAM_IND = 'N',
			CARGO_DAM = 'N',
			LM_USER_ID	 =#lmUserId#,
			LM_DATE	 = sysdate,
			TR_TYPE=#trtype# 		
		WHERE 	FLT_KEY    = #flightKey#
			  	AND FLT_DATE = #flightDate#			  	
				AND ULD_KEY = #uldKey#					    
	</update>
	
	<update id="updateInvAfterBDUnStart" parameterClass="cargo.cms.imprt.bo.BrkULDStatusBO">
		Update Uld_inventory
		set DAM_IND = 'N',
			TR_TYPE=#trtype#,
			REF_TR_TYPE='IR',
			REF_TR_EVENT=#trtype#
		 where uld_key = #uldKey#
	</update>
		
	<update id="imp_brk_uldbreak_complete" parameterClass="cargo.cms.imprt.bo.BrkULDStatusBO">
		UPDATE IMP_RAMP_CHK_DTL	SET		
			BRKDN_COMPL_YN ='Y',
			BRKDN_COMPL_DATE = to_date(#bdComplDateTime#,'DDMONYY HH24:MI'),
			BRKDN_COMPL_TIME = to_Char(to_date(#bdComplDateTime#,'DDMONYY HH24:MI'),'HH24MI'),						
			BRKDN_COMPL_USER_ID=#lmUserId#,
			LM_USER_ID	 =#lmUserId#	 ,
			LM_DATE	 = sysdate,
			TR_TYPE=#trtype# 	
		WHERE 	FLT_KEY    = #flightKey#			  	
			  	AND FLT_DATE = #flightDate#			  	
				AND ULD_KEY = #uldKey#					   
	</update>
		
	<select id="sqlCheck_NOT_Transituld_HANDMODE_NBK_PPK" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		select count(1) from ULD_INVENTORY where ULD_KEY = #uldKey# and not (TRANSIT_FLG='Y' and (HANDLING_MODE='PPK' or HANDLING_MODE='NBK'))
	</select>
	
	<update id="updateInvAfterBDComplete" parameterClass="cargo.cms.imprt.bo.BrkULDStatusBO">
		Update Uld_inventory
		set empty_flg=#empty#,
		  <isEqual property="empty" compareValue="Y">handling_mode = '',</isEqual>
			FLT_NO=NULL,
			FLT_TYPE=NULL,
			FLT_DATE=NULL,
			FLT_KEY=NULL,
			CARR_CODE=NULL,
			TR_TYPE=#trtype#,
			REF_TR_TYPE='IR',
			REF_TR_EVENT=#trtype#,
			transit_flg = decode(#empty#,'Y','N',transit_flg),
			transit_type = decode(#empty#,'Y',null,transit_type),
			CONTR_CODE = decode(#contourCodeRemoveInd#,'Y',null,CONTR_CODE),
			LM_USER_ID	 =#lmUserId#	 ,
			LM_DATE	 = sysdate
		 where uld_key = #uldKey#
	</update>
	
	<select id="checkAwbInvAfterBDComplete" parameterClass="cargo.cms.imprt.bo.BrkULDStatusBO" resultClass="java.lang.Integer">
	  select count(1) from awb
	  join awb_inventory awbInv on awbInv.awb_no = awb.awb_no and  awbInv.awb_date = awb.awb_date
	  where awb.awb_type = 'T' and awbInv.uld_key = #uldKey#
	</select>
	
	<update id="updateInvAfterCheckAwbInvBDComplete" parameterClass="cargo.cms.imprt.bo.BrkULDStatusBO">
		Update Uld_inventory
			set transit_flg = #transitIndYN#,
			CONTR_CODE = decode(#contourCodeRemoveInd#,'Y',null,CONTR_CODE),
			LM_USER_ID	 =#lmUserId#	 ,
			LM_DATE	 = sysdate
		where uld_key = #uldKey#
	</update>
	
	<select id="getRampCheckINEmptyFlag" parameterClass="cargo.cms.imprt.bo.BrkULDStatusBO" resultClass="java.lang.String">
		SELECT empty_ind FROM imp_ramp_chk_dtl WHERE FLT_DATE = TO_DATE(#flightDate#,'DDMONYY') AND FLT_KEY = #flightKey# AND ULD_KEY = #uldKey#
	</select>			
	
	
	<update id="updateInvAfterBDUnComplete" parameterClass="cargo.cms.imprt.bo.BrkULDStatusBO">
		Update Uld_inventory
		set FLT_NO=IMP_FLT_NO,
			FLT_TYPE=DECODE(IMP_FLT_KEY,'','','I'),
			FLT_DATE=IMP_FLT_DATE,
			FLT_KEY=IMP_FLT_KEY,
			empty_flg = NVL(#empty#,empty_flg),
			CARR_CODE=IMP_FLT_CARR,
			TR_TYPE=#trtype#,
			REF_TR_TYPE='IR',
			REF_TR_EVENT=#trtype#,
			LM_USER_ID = #lmUserId#,
			LM_DATE =SYSDATE
		 where uld_key = #uldKey#
	</update>
	
	<update id="updateInvAfterBDStart" parameterClass="cargo.cms.imprt.bo.BrkULDStatusBO">
		Update Uld_inventory
		set DAM_IND = #damInd#,
			LOC_CODE = #location#,
			SER_IND = #servicableInd#,
			TR_TYPE=#trtype#,
			REF_TR_TYPE='IR',
			REF_TR_EVENT=#trtype#
		 where uld_key = #uldKey#
	</update>
	
	
	<update id="imp_brk_uldbreak_uncomplete" parameterClass="cargo.cms.imprt.bo.BrkULDStatusBO">
		UPDATE IMP_RAMP_CHK_DTL	SET
			BRKDN_COMPL_YN ='N',
			BRKDN_COMPL_DATE =NULL,		
			BRKDN_COMPL_TIME =NULL,			
			BRKDN_COMPL_USER_ID=NULL,	
			LM_USER_ID	 =#lmUserId#	 ,
			LM_DATE	 = sysdate,
			TR_TYPE=#trtype#
		WHERE 	FLT_KEY    = #flightKey#			  	
			  	AND FLT_DATE = #flightDate#			  	
				AND ULD_KEY = #uldKey#					    
				AND TO_CHAR(LM_DATE , 'DDMONYY HH24:MI:SS')=#lastModDate#
	</update>
	
	<select id="imp_brk_uld_awb_statuslist"  parameterClass="cargo.cms.imprt.bo.BrkULDStatusBO"  
		resultClass="cargo.cms.imprt.bo.BrkULDStatusBO">
		<!--  select DISTINCT ddt.cntg_flt_key as cngFlightKey, TO_CHAR(ddt.cntg_flt_date,'DDMONYY') as cngFlightDate, 
        (select count(shp1.awb_no) from  DDT_SHP shp1 where shp1.udoc_line_no= ddt.doc_line_no) as awbCount,
        dtl.trf_wt as awbWt
		FROM DDT_ULD ddt,  DDT_SHP shp, DDT_SHP_TRF_DTL dtl
		where				 
		ddt.ULD_KEY=#uldKey# and
        ddt.DOC_LINE_NO = shp.UDOC_LINE_NO and 
        shp.UDOC_LINE_NO = dtl.SDOC_LINE_NO  -->
        
                  select SHP_CNTG_FLT_KEY as cngFlightKey, 
                  TO_CHAR(SHP_CNTG_FLT_DATE,'DDMONYY') as cngFlightDate,
                  COUNT(AWB_NO) as awbCount,
                  SUM(SHP_TRF_WT) as awbWt
                  from v_ddt_dtl DTL
                  where flt_key = #flightKey#
                  and TO_CHAR(FLT_DATE,'DDMONYY') = #flightDate#
                  and uld_key = #uldKey# 
                  GROUP BY SHP_CNTG_FLT_KEY, SHP_CNTG_FLT_DATE			    
	</select>
	
	<select id="imp_brk_uld_awbSHP_count"  parameterClass="cargo.cms.imprt.bo.BrkULDStatusBO"   
		resultClass="java.lang.Integer">	        
         SELECT COUNT(1)
		  FROM V_FFM_DTL V 		 
		  WHERE
			V.FLT_KEY = #flightKey# AND
			V.FLT_DATE = TO_DATE (#flightDate#, 'DDMONYY') AND    
      		V.ULD_KEY = #uldKey#       
    </select>
    
    <select id="imp_brk_uld_awbStrg_count"  parameterClass="cargo.cms.imprt.bo.BrkULDStatusBO"  
		resultClass="java.lang.Integer">	  
       select count(AWB_NO) as awbCount  
	   FROM (select DISTINCT AWB_NO
       FROM  IMP_AWB_STRG_DTL
       where                   
       CHKIN_ULD_KEY=#uldKey# and       
       TO_CHAR(FLT_DATE,'DDMONYY')=#flightDate# and
       FLT_KEY=#flightKey#)       
    </select>
    
    <update id="imp_brk_uld_convert_uldmixprepack" parameterClass="cargo.cms.imprt.bo.BrkULDStatusBO">
		UPDATE ULD_INVENTORY	SET
			ULD_FLOW ='E',
			MIX_PPK_IND = 'Y',
			PPK_IND = 'N',
			LM_USER_ID	 =#lmUserId#,
			LM_DATE	 = sysdate 		
		WHERE ULD_KEY = #uldKey#				
	</update>  
    
	
<!-- ULD Breakdown status :: Santosh Desai:: ends -->


<!-- Declare ULD BD Start :: Anup :: Starts -->
 	<select id="uld_Key_Search"	parameterClass="cargo.cms.imprt.bo.ULDBDDetailsBO"
			 resultClass="cargo.cms.imprt.bo.UldBDSearchBO">
		SELECT 
			ULD_KEY AS uldNo, (FLT_KEY || '/' || TO_CHAR(FLT_DATE,'DDMONYY')) AS fltNoDate, FLT_KEY as fltNo, 
			TO_CHAR(FLT_DATE,'DDMONYY') AS fltDt, TO_CHAR(CHKIN_DATE,'DDMONYY') AS chkInDate,ULD_KEY || '/' ||  (FLT_KEY || '/' || TO_CHAR(FLT_DATE,'DDMONYY')) selectULD 
		FROM 
			IMP_RAMP_CHK_DTL 
		WHERE (ULD_No = #uldKey# or ULD_KEY = #uldKey#)AND BRKDN_COMPL_DATE IS NULL AND CHKIN_YN='Y'
	</select>
	
	<update id="update_imp_ramp_chk_dtls" parameterClass="cargo.cms.imprt.bo.ULDBDDetailsBO">
		UPDATE IMP_RAMP_CHK_DTL 
			SET 
				CARGO_DAM=#cargoDamage#, 
				SER_IND=#serviceable#, 
				DAM_IND=#uldDamage#,
				BRKDN_LOCN=#location#,
				BRKDN_START_DATE=SYSDATE,
				BRKDN_START_USER_ID=#bdStartUserid#,
				TR_TYPE = #trtype# 
			WHERE 
				ULD_KEY=#uldNo# AND FLT_KEY=#fltNo# AND FLT_DATE=#fltDate#
	</update>
	
	<update id="update_loc_uld_inventory" parameterClass="cargo.cms.imprt.bo.ULDBDDetailsBO">
		UPDATE ULD_INVENTORY 
			SET 
				LOC_CODE=#location#,
				SER_IND=#serviceable#, 
				DAM_IND=#uldDamage#, 
				REF_TR_DATE=SYSDATE, 
				REF_TR_EVENT='BDS', 
				REF_TR_NO='28', 
				REF_TR_TYPE='BD',
				TR_TYPE = #trtype# 
			WHERE 
				ULD_KEY=#uldNo#
	</update>
	
	<select id="cargo_transhipment_dtls" parameterClass="cargo.cms.imprt.bo.ULDBDDetailsBO" 
			resultClass="cargo.cms.imprt.bo.UldBDTransCargoBO">
			<!-- 
		SELECT 
			(c.CNTG_FLT_KEY || '/' || TO_CHAR(c.CNTG_FLT_DATE,'DDMONYY') || '/' || c.UNLDG_PT) AS CNTGFLTDT, 
			COUNT(b.AWB_NO) AS AWBCNT, 
			(CASE WHEN c.TRF_TYPE='QT' THEN 'Y' ELSE 'N' END) AS QTBU, 
			SUM(c.TRF_WT) AS WT 
		FROM 
			DDT_ULD a, DDT_SHP b, DDT_SHP_TRF_DTL c 
		WHERE 
			c.SDOC_LINE_NO=b.DOC_LINE_NO AND b.UDOC_LINE_NO=a.DOC_LINE_NO AND 
			a.ULD_KEY=#uldNo# 
			GROUP BY c.CNTG_FLT_KEY, c.TRF_TYPE, c.CNTG_FLT_DATE, c.UNLDG_PT-->
			
		select
            (SHP_CNTG_FLT_KEY || '/' || TO_CHAR(SHP_CNTG_FLT_DATE,'DDMONYY') || '/' || SHP_UNLDG_PT) AS CNTGFLTDT,
            COUNT(AWB_NO) AS AWBCNT,
            QT_BU AS QTBU,
            SUM(SHP_TRF_WT) AS WT       
            from v_ddt_dtl
            where FLT_KEY = #fltNo#
            AND FLT_DATE    = TO_DATE(#fltDate#,'DDMONYY')                 
            and uld_key = #uldNo# 
           GROUP BY SHP_CNTG_FLT_KEY,SHP_CNTG_FLT_DATE,SHP_UNLDG_PT,QT_BU 
	</select>
	
	<select id="valid_location_check" parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT 
			CODE as locationCode 
		FROM 
			MAST_WH_LOC 
		WHERE 
			CODE = #location#
	</select>
	
	<select id="uld_chk_location" parameterClass="java.util.HashMap" resultClass="java.lang.String">
	<![CDATA[
		SELECT ULD_KEY FROM ULD_INVENTORY WHERE LOC_CODE=#location# and uld_key <> #uldno# and (base_plt <> #uldno# or base_plt is null)
		]]>
	</select>
	
	<select id="uld_BD_instruction" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT 
			WH_RMK WH_INSTRUCTION 
		FROM 
			IMP_ULD_LIST 
		WHERE 
			ULD_KEY=#uldNo# AND FLT_KEY=#fltNo# AND FLT_DATE=#fltDt#
	</select>
	
	<select id="uld_Handling_Code" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT 
			HANDLING_MODE 
		FROM 
			IMP_ULD_LIST 
		WHERE 
			ULD_KEY=#uldNo# AND FLT_KEY=#fltNo# AND FLT_DATE=#fltDt#
	</select>
	
	<select id="checkULDInterfaceIF" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		 select count(1) from uld_inventory where ULD_KEY = #uldNo# and TRANSIT_TYPE IN ('IF','TT')
	</select>
	
	<select id="imp_uld_flt_db_status" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		select 
			B.WHSE_COMPL_DATE 
		from 
			IMP_RAMP_CHK_DTL A, FLT_OPR_EVENTS B 
		where 
			B.FLT_KEY = A.FLT_KEY and B.SCH_DATE = A.FLT_DATE and  B.FLT_TYPE = 'A' and 
			A.ULD_KEY = #uldNo# AND A.FLT_KEY=#fltNo# AND A.FLT_DATE=#fltDt#
	</select>
	
	<select id="imp_uld_db_start_status" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		select 
			BRKDN_START_DATE 
		from 
			IMP_RAMP_CHK_DTL 
		where 
			ULD_KEY = #uldNo# AND FLT_KEY=#fltNo# AND FLT_DATE=#fltDt#
	</select>
 <!-- Declare ULD BD Start :: Anup :: Ends -->

 <!-- Queries for Breakdown Worksheet Starts -->

<!--  Changed for QR -->
<select id="getbreakdownlist"  parameterClass="cargo.cms.imprt.bo.BDQueryBO" resultClass="cargo.cms.imprt.bo.BDWorkSheetBO">
	SELECT RD.ULD_KEY AS uldNo,
                TO_CHAR(nvl(RD.BRKDN_START_DATE, RD.BRKDN_COMPL_DATE),'DDMONYY HH24:MI') AS startBD,
                DECODE( RTRIM(TO_CHAR(RD.BRKDN_COMPL_DATE,'DDMONYY')||SUBSTR(TRIM(TO_CHAR(NVL(RD.BRKDN_COMPL_TIME,0),'0000')),0,2) || ':' ||  
                SUBSTR(TRIM(TO_CHAR(NVL(RD.BRKDN_COMPL_TIME,0),'0000')),3,4)||'/'||RD.BRKDN_COMPL_USER_ID, '/'),'00:00','',RTRIM(TO_CHAR(RD.BRKDN_COMPL_DATE,'DDMONYY')||SUBSTR(TRIM(TO_CHAR(NVL(RD.BRKDN_COMPL_TIME,0),'0000')),0,2) || ':' ||  
                SUBSTR(TRIM(TO_CHAR(NVL(RD.BRKDN_COMPL_TIME,0),'0000')),3,4)||'/'||RD.BRKDN_COMPL_USER_ID, '/')) AS completedBD,   
                A.AWB_NO AS awbNo,  
                rtrim(SUBSTR(A.AWB_NO,1,3)||'-'||SUBSTR(A.AWB_NO,4), '-') as awbNoDisp ,
                SUBSTR(A.AWB_NO,1,3)  awbNoPrefix , 
                SUBSTR(A.AWB_NO,4)  awbNoSuffix ,
                B.CONTENT AS content,
    pkg_common.get_awb_splcodes(A.AWB_NO, A.AWB_DATE, 'I') AS splcode,
    B.AWB_DEST AS dest, 
    A.LOC_CODE AS locn, 
                A.STRG_PCS AS pc,
                A.STRG_WT AS wt,
                A.LSP_NO AS lspNo,
                A.ULD_KEY AS uld2,
                A.TAG_NO AS tagNo,
                RD.DAM_RMK AS damage,
                RD.DAM_IND AS damageIndicator,
                DECODE((SELECT ULD_IMAGE_NAME FROM ULD_IMAGE where uld_key=RD.ULD_KEY and rownum=1),NULL,'N','Y') AS IMAGE,
            A.DAM_PC_DECL AS DAMAGEPC, 
            A.DAM_WT_DECL AS DAMAGEWT,
            A.DAM_COND AS DAMAGETYPE,  
            (SELECT ULD_IMAGE_NAME FROM ULD_IMAGE where uld_key=RD.ULD_KEY and rownum=1) AS transactionId
	FROM IMP_RAMP_CHK_DTL RD 
    	LEFT JOIN IMP_AWB_STRG_DTL A ON A.FLT_DATE = RD.FLT_DATE  AND A.FLT_KEY  = RD.FLT_KEY      AND A.CHKIN_ULD_KEY  = RD.ULD_KEY 
  		<!--  LEFT JOIN (SELECT FLT_KEY, FLT_DATE, AWB_NO, AWB_DATE, CHKIN_ULD_KEY, MIN(CR_DATE) START_DATE 
    					FROM IMP_AWB_STRG_DTL GROUP BY FLT_KEY, FLT_DATE, AWB_NO, AWB_DATE, CHKIN_ULD_KEY) M
    	ON M.CHKIN_ULD_KEY = A.CHKIN_ULD_KEY AND M.FLT_KEY = A.FLT_KEY AND M.FLT_DATE = A.FLT_DATE AND M.AWB_NO = A.AWB_NO AND M.AWB_DATE = A.AWB_DATE -->
  		LEFT JOIN IMP_CAR_AWB B ON A.AWB_NO = B.AWB_NO AND A.AWB_DATE = B.AWB_DATE  
  WHERE (RD.BRKDN_COMPL_DATE IS NOT NULL OR A.FLT_KEY IS NOT NULL OR A.TAG_NO IS NOT NULL)
    <isNotEmpty prepend="AND" property="arrDate">
		RD.FLT_DATE = #arrDate#
		</isNotEmpty>
	  	<isNotEmpty prepend="AND" property="fltNo">	
		RD.FLT_KEY = #fltNo#
		</isNotEmpty>	  
	  	<isNotEmpty prepend="AND" property="uldNo">
		RD.ULD_KEY = #uldNo#
		</isNotEmpty>	
	  	<isNotEmpty prepend="AND" property="cargoCatalog">
		(B.CATALOG = #cargoCatalog# or A.CATALOG = #cargoCatalog#)
		</isNotEmpty>	
	ORDER BY RD.ULD_KEY, A.AWB_NO
  </select>

<!--  Changed for QR -->
<select id="breakdownsummaryinfo"  parameterClass="cargo.cms.imprt.bo.BDQueryBO" resultClass="cargo.cms.imprt.bo.BreakDownSummaryBO">
	<![CDATA[
	SELECT PKG_COMMON.get_flt_ata(FLT_KEY,FLT_DATE,'A','DD') AS ata,SUM(STRG_PCS) AS totalPcs,SUM(STRG_WT)  AS totalWt FROM
  (
   SELECT 
   A.FLT_KEY,A.FLT_DATE,
   A.STRG_PCS,  
   A.STRG_WT
   FROM   IMP_AWB_STRG_DTL A,IMP_RAMP_CHK_DTL RD 
   WHERE 
   A.CHKIN_ULD_KEY  = RD.ULD_KEY AND 
   A.FLT_DATE = RD.FLT_DATE  AND 
   A.FLT_KEY  = RD.FLT_KEY AND
   (RD.BRKDN_COMPL_DATE IS NOT NULL OR A.FLT_KEY IS NOT NULL OR A.TAG_NO IS NOT NULL))
   where  FLT_DATE	  = #arrDate# 
   AND FLT_KEY = #fltNo#   group by FLT_KEY , FLT_DATE
	]]>
</select>

<!-- Queries for Breakdown Worksheet Ends -->

<!-- Query for Update/Enquire Damage ULD Remarks starts-->
<!--  Changed for QR -->
	<select id="imp_dmg_uld"  parameterClass="cargo.cms.imprt.bo.EnquireUldBO"  resultClass="cargo.cms.imprt.bo.EnquireUldBO">
		SELECT  A.FLT_KEY AS flightKey,
    A.FLT_NO AS flightNo , 
    A.CARR_CODE AS carrierCode ,
    TO_CHAR(A.FLT_DATE,'DDMONYY') AS flightDate,
    A.TR_NO AS trNo,
    B.ULD_KEY AS uldKey,   B.ULD_NO as uldNo,  
    B.LOC_CODE AS wareHouseLoc,
    B.EIC_IND AS eic,
    B.EMPTY_IND AS empty,
    B.DAM_IND AS uldDamage,
    B.CARGO_DAM AS crgDamage,
    B.ser_ind AS condition,
    B.DAM_RMK AS damageRemark,
    B.DAM_RMK AS oldDamageRmk,
    B.DOC_LINE_NO AS docLineNo,
    B.ULD_CARR AS uldCarr,B.ULD_TYPE AS uldType,
    C.ORIG AS ladingPoint,
    C.DEST AS unladingPoint, 
    C.ACFT_REG_NO AS regn,
    (SELECT MAST_CODE_DTL.CODE_DESC FROM FLT_OPR, MAST_CODE_DTL WHERE  MAST_CODE_DTL.CODE_TYPE =  'WTH_CONDN' AND
             MAST_CODE_DTL.CODE  = FLT_OPR.WTHR_COND AND FLT_OPR.SCH_DATE =  A.FLT_DATE AND FLT_OPR.FLT_KEY =  A.FLT_KEY AND FLT_OPR.FLT_TYPE = 'A') AS weatherCondition,
    C.CARR_CODE AS owner,
    PKG_COMMON.get_flt_ata(C.FLT_KEY,C.SCH_DATE,'A') AS ata 
    FROM IMP_RAMP_CHK_HD A, IMP_RAMP_CHK_DTL B, FLT_OPR C
   WHERE  
     A.FLT_NO    = #flightNo# AND
     A.CARR_CODE  = upper( #carrierCode#) AND
     A.FLT_DATE  =  TO_DATE(#flightDate#,'DDMONYY') AND
     A.FLT_KEY   = C.FLT_KEY     AND
     A.FLT_DATE  = C.SCH_DATE      AND
     B.DAM_IND ='Y' AND
     A.TR_NO   = B.TR_NO     AND
     B.CHKIN_YN  = 'Y'      AND
     C.FLT_TYPE  = 'A'     
   ORDER BY    B.ULD_KEY
	</select>
	<update id="imp_upd_dmg_uld" parameterClass="cargo.cms.imprt.bo.EnquireUldBO">
		UPDATE IMP_RAMP_CHK_DTL
			SET DAM_RMK = #damageRemark#,	    
			LM_USER_ID  = #lmUser#,	    
			LM_DATE     = sysdate 
		 WHERE
			TR_NO	 = #trNo#  AND
			ULD_KEY	 = #uldKey#
	</update>
	<select id="imp_uld_image"  parameterClass="cargo.cms.imprt.bo.ULDImageBO" resultClass="cargo.cms.imprt.bo.ULDImageBO">
		SELECT  
				ULD_KEY as uldKey,
				ULD_IMAGE_NAME as fileName
				
		FROM ULD_IMAGE WHERE ULD_KEY =#uldKey#
	</select>
	<insert id="imp_insertUldRmk" parameterClass="cargo.cms.imprt.bo.EnquireUldBO">
		INSERT INTO ULD_RMK (ULD_TYPE,ULD_NO,ULD_CARR,TR_NO,TR_TYPE,DOC_LINE_NO,ULD_RMK,ULD_KEY,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,EVENT_ID)
		VALUES( #uldType#,#uldNo#,#uldCarr# ,'19','DU',#docLineNo#,#damageRemark#, #uldKey#,#userID#,sysdate,#userID#,sysdate,'DU')
	</insert>
	<delete id="imp_uld_delete" parameterClass="cargo.cms.imprt.bo.EnquireUldBO">
	DELETE ULD_IMAGE WHERE ULD_KEY =#uldKey# AND ULD_IMAGE_NAME = #transactionId#
	</delete>
	<!--bug no 628  -->
	<update id="updUldInvnt" parameterClass="cargo.cms.imprt.bo.EnquireUldBO">
		UPDATE ULD_INVENTORY
			SET DAM_RMK = #damageRemark#,	    
			LM_USER_ID  = #lmUser#,	    
			LM_DATE     = sysdate 
		 WHERE
			ULD_KEY	 = #uldKey#
	</update>
	<!-- Query for Update/Enquire Damage ULD Remarks ends-->	

 <!-- Post Breakdown Check List :: Anup :: Starts -->
 	<select id="imp_pfchl_checkFlight"  parameterClass="map"  
		resultClass="java.lang.Integer">
			SELECT count(1) FROM FLT_OPR WHERE 
				FLT_KEY=#fltKey#
				AND SCH_DATE = #fltDate# 
				AND FLT_TYPE='A'
   	</select>

	<select id="imp_pfchl_getShpIrrList"  parameterClass="cargo.cms.imprt.bo.DBDCSearchBO"  
		resultClass="cargo.cms.imprt.bo.ShpIrrBO">
		
		SELECT 
			TO_CHAR(A.AWB_DATE, 'DDMONYY') as awbDate,
			A.AWB_NO as awbNo, 
			B.AWB_DEST as dest, 
			UPPER(B.CONTENT) as cont, 
			NVL(B.CONSOLE_IND, 'N') as consol,
			NVL(B.AWB_PCS,0) ||'/'||NVL(trim(to_char(B.AWB_WT, '9999990D99')),0) as awbPcsWt, 
			NVL(A.MANIFEST_PCS,0) || '/' || NVL(trim(to_char(A.MANIFEST_WT, '9999990D99')),0) as manfPcsWt, 
			(NVL(A.RECD_PCS,0)+NVL(ddt.tt_pcs,0)) || '/' || NVL(trim(to_char((NVL(A.RECD_WT,0)+NVL(ddt.tt_wt,0)) , '9999990D99')),0) as locnPcsWt, 
			(NVL(A.RECD_PCS,0)+NVL(ddt.tt_pcs,0)) - NVL(A.MANIFEST_PCS,0) as discPcs,
			trim(to_char((NVL(A.RECD_WT,0)+NVL(ddt.tt_wt,0)) - NVL(A.MANIFEST_WT,0), '9999990D99')) discWt, 
			NVL(A.DAM_DECL_PCS,0) as damDecPcs,
			NVL(trim(to_char(A.DAM_DECL_WT, '9999990D99')),0) as damDecWt,
      		NVL(A.DAM_PCS,0) as damPcs,	NVL(trim(to_char(A.DAM_WT, '9999990D99')),0) as damWt,
          awbInv.lsp_no lspNo,
      case when countAwbInv > 0  OR countAwbLspInv > 0 then null else NVL(trim(to_char(ref_wt, '9999990D99')),0) end as refWt,
			case when A.CIR_PROC_USER is not null then 'Y' else 'N' end as cir,
			case when A.DAM_PROC_USER is not null then 'Y' else 'N' end as dam, 
      		case when A.DAM_PROC_USER is not null AND A.DAM_PROC_DATE is not null then 'Y' else 'N' end as damDec, 
      		(NVL(A.RECD_PCS,0)+NVL(ddt.tt_pcs,0)) as recdPcs,
      		trim(to_char((NVL(A.RECD_WT,0)+NVL(ddt.tt_wt,0)),'999999990D99')) as recdWt, 
      		case when (SELECT COUNT(1) FROM CST_BD_DISC D WHERE D.AWB_NO = B.AWB_NO AND D.AWB_DATE = B.AWB_DATE 
            AND D.FLT_KEY = A.FLT_KEY AND D.FLT_DATE = A.FLT_DATE) >0 then 'Y' else 'N' end AS bdsSubm
		FROM IMP_CAR_SHP A 
    	JOIN IMP_CAR_AWB B ON A.AWB_NO = B.AWB_NO AND A.AWB_DATE = B.AWB_DATE
    	LEFT JOIN (select nvl(sum(actual_pcs),0) tt_pcs ,  nvl(sum (actual_Wt),0) tt_wt, flt_key, flt_date, awb_NO , awb_date 
								from v_ddt_dtl  where (shp_trf_type = 'TT'  or trf_type = 'IF') GROUP BY flt_key, flt_date, awb_NO, awb_date) ddt 
             			ON A.AWB_NO = ddt.AWB_NO AND A.AWB_DATE = ddt.AWB_DATE AND A.FLT_KEY = ddt.FLT_KEY AND A.FLT_DATE = ddt.FLT_DATE
		Left join (select  awb_no,awb_date,flt_key,flt_Date, min(lsp_no) lsp_no , count(1) countAwbInv from awb_inventory where lsp_no is not null group by awb_no, awb_date, flt_key, flt_Date) awbInv
		                ON A.AWB_NO = awbInv.AWB_NO AND A.AWB_DATE = awbInv.AWB_DATE AND A.FLT_KEY = awbInv.FLT_KEY AND A.FLT_DATE = awbInv.FLT_DATE
		Left join lsp_inventory lspInv on lspInv.lsp_no = awbInv.lsp_no 
		Left join (select  lsp_no, awb_no , count(1) countAwbLspInv from awb_inventory group by lsp_no, awb_no) awbLspInv on awbLspInv.lsp_no = awbInv.lsp_no and awbLspInv.awb_no = awbInv.awb_no 
		WHERE 
			(A.MANIFEST_PCS != NVL(A.RECD_PCS,0)+NVL(ddt.tt_pcs,0) or A.MANIFEST_WT != NVL(A.RECD_WT,0)+NVL(ddt.tt_wt,0)
	        or A.CIR_PROC_USER is not null) AND (A.CAR_CREATED = 'Y' or NVL(A.RECD_PCS,0)+NVL(ddt.tt_pcs,0)  > 0) AND
			(B.CATALOG != 'TA' OR B.CATALOG IS NULL) AND
			A.FLT_KEY = #fltKey#    AND
			A.FLT_DATE  = #fltDate#
		ORDER BY A.AWB_NO
   	</select>
   	
   	<select id="imp_transit_mail_tag" parameterClass="cargo.cms.imprt.bo.DBDCSearchBO" 
   		resultClass="cargo.cms.imprt.bo.PostBDTransitMailBO">
   		SELECT 
   			TAG_NO as tagNo, ORIG as origin, DEST, 
   			ACT_PCS as actPcs, TO_CHAR(ACT_WT,'9999990D99') as actWt
   		FROM IMP_XPS_OBC_MAIL 
   		WHERE 
   			FLT_KEY = #fltKey# AND TRIM(TO_CHAR(FLT_DATE, 'DDMONYY')) = #fltDate# 
   			AND AWB_NO IS NULL  AND AWB_DATE IS NULL AND CATALOG='TM'
   	</select>
   	
   	<select id="imp_locn_discrepancy" parameterClass="map" resultClass="cargo.cms.imprt.bo.ShpIrrBO">
   		select 
   			TARGET as target, LOC_CODE as locCode, LSP_NO as lspNo 
   		from IMP_AWB_STRG_DTL 
   		where 
   			FLT_KEY = #fltKey# and FLT_DATE = #fltDate# and 
   			AWB_NO = #awbNo# and AWB_DATE = #awbDate#
   	</select>
   	
   	<select id="fetchAwbLocations" parameterClass="map" resultClass="cargo.cms.imprt.bo.ShpIrrBO">
   		select LOC_CODE as locCode, LOCN_PCS || '/' || nvl(trim(to_char(LOCN_WT,'999999990D99')),0) as locnPcsWt, LSP_NO as lspNo, ULD_KEY as uldKey from awb_inventory 
        	where FLT_KEY = #fltKey# and FLT_DATE = #fltDate# and AWB_NO = #awbNo# and AWB_DATE = #awbDate# AND LOC_CODE IS NOT NULL
   	</select>
   	
   	
   	<select id="imp_ref_wt_with_lspno" parameterClass="java.lang.String" resultClass="java.lang.String">
   		select 
   			REF_WT 
   		from LSP_INVENTORY 
   		where 
   			LSP_NO = #lspNo#
   	</select>
 <!-- Post Breakdown Check List :: Anup :: Ends -->

 <!-- Enquire Collection Slot :: Anup :: Begins -->
 	 <select id="imp_search_booking_dtls" parameterClass="cargo.cms.imprt.bo.EnquireCollSlotSearchBO" 
 		resultClass="cargo.cms.imprt.bo.EnquireCollSlotBkgLstBO">
 		<![CDATA[
 		SELECT BOOKING_NO as bkgNo, 		  
					 TO_CHAR(CR_DATE, 'DDMONYY HH24:MI') as creationDt, 
			   RTRIM(nvl(TRUCK1,'') ||' , '|| nvl(TRUCK2,'') ||' , '|| nvl(TRUCK3,'') ||' , '|| nvl(TRUCK4,'') 
						||' , '|| nvl(TRUCK5,'') ||' , '|| nvl(TRUCK6,''),  ' , ') truckNo,         
			  case when  decode(TRUCK1,null,0,1) + decode(TRUCK2,null,0,1) + decode(TRUCK3,null,0,1) +
              decode(TRUCK4,null,0,1) + decode(TRUCK5,null,0,1) + decode(TRUCK6,null,0,1)  > 3 then '2' else '1' end noTruckDocks, 
				COLL_PERSON_NAME as collBy, TO_CHAR(BKG_SLOT_DATE, 'DDMONYY') bkgTimeSlotDt,
				SUBSTR(TRIM(TO_CHAR(NVL(BKG_SLOT_FROM,0),'0000')),0,2)|| ':' || 
				SUBSTR(TRIM(TO_CHAR(NVL(BKG_SLOT_FROM,0),'0000')),3,4) bkgTimeSlotFromStr, 
				SUBSTR(TRIM(TO_CHAR(NVL(BKG_SLOT_TO,0),'0000')),0,2)|| ':'|| 
				SUBSTR(TRIM(TO_CHAR(NVL(BKG_SLOT_TO,0),'0000')),3,4) bkgTimeSlotToStr,
				TO_CHAR(BKG_SLOT_DATE, 'DDMONYY') || ' ' || 
				SUBSTR(TRIM(TO_CHAR(NVL(BKG_SLOT_FROM,0),'0000')),0,2)|| ':' || 
				SUBSTR(TRIM(TO_CHAR(NVL(BKG_SLOT_FROM,0),'0000')),3,4)|| ' - ' || 
				SUBSTR(TRIM(TO_CHAR(NVL(BKG_SLOT_TO,0),'0000')),0,2)|| ':'|| 
				SUBSTR(TRIM(TO_CHAR(NVL(BKG_SLOT_TO,0),'0000')),3,4) as timeSlot,
				COLL_PERSON_ID as hkId, nvl(PHONE_NO,'') as phoneNo,
			   (select stragg(stringdelim(AWB_NO,', ')) from IMP_BOOKING_DTL where IMP_BOOKING_DTL.BOOKING_NO = IMP_BOOKING.BOOKING_NO) awbNo ,			   
				nvl(TRUCK1,'')  truckNoOne,
				nvl(TRUCK2,'') truckNoTwo,  
				nvl(TRUCK3,'') truckNoThree ,  
				nvl(TRUCK4,'') truckNoFour,
				nvl(TRUCK5,'') truckNoFive, 
				nvl(TRUCK6,'') truckNoSix,
				COLLECT_ULD collectUld,
				DEL_ZONE deliveryZone
			FROM 
				IMP_BOOKING 
 		WHERE STATUS <> 'CANCEL'
 		]]>
 		<isNotEmpty prepend="AND" property="loginCustNo">
 			( Agent_id = #loginCustNo# or Trucker_id = #loginCustNo#)  
 		 </isNotEmpty>
 			<isNotEmpty prepend="AND" property="bkgNo">
      		 		BOOKING_NO = #bkgNo#
      		 </isNotEmpty>
 			 <isNotEmpty prepend="AND" property="bookingNo">
      		 		BOOKING_NO = #bookingNo#
      		 </isNotEmpty>
 			 <isNotEmpty prepend="AND" property="agtCode">
      		 	( Agent_id = #agtCode# or Trucker_id = #agtCode#)  
      		 </isNotEmpty>
 			<isNotEmpty prepend="AND" property="truckNo">
 				(TRUCK1 = #truckNo# OR TRUCK2 = #truckNo# OR TRUCK3 = #truckNo# OR TRUCK4 = #truckNo# OR TRUCK5 = #truckNo# OR TRUCK6 = #truckNo#)
 			</isNotEmpty>
 			<isNotEmpty property="bkgTimeSlotFromDt">
				 <isNotEmpty property="bkgTimeSlotToDt">
				  	<isNotEmpty property="bkgTimeSlotFromStr">
			  		 <isNotEmpty property="bkgTimeSlotToStr">
			      		  AND (TO_DATE(to_char(BKG_SLOT_DATE,'DDMONYY') ||' '||to_char(to_date(TRIM(TO_CHAR(NVL(BKG_SLOT_FROM,0),'0000')),'HH24MI'),'HH24MI'), 'DDMONYY HH24MI') &gt;= TO_DATE(#bkgTimeSlotFromDt#||' '||#bkgTimeSlotFromStr#,'DDMONYY HH24MI')  
			              AND TO_DATE(TO_CHAR(BKG_SLOT_DATE,'DDMONYY') ||' '||to_char(to_date(TRIM(TO_CHAR(NVL(BKG_SLOT_TO,0),'0000')),'HH24MI'),'HH24MI'), 'DDMONYY HH24MI') &lt;= TO_DATE(#bkgTimeSlotToDt#||' '||#bkgTimeSlotToStr#,'DDMONYY HH24MI'))  
			 		 </isNotEmpty>
			 		 </isNotEmpty>
				</isNotEmpty>
			</isNotEmpty>       		
			<dynamic prepend="ORDER BY ">
        		<isNotEmpty property="sortOrder.sortField">
            		$sortOrder.sortField$
           		</isNotEmpty>
           		<isEmpty property="sortOrder.sortField">
            		bkgNo 
           		</isEmpty>
        	</dynamic>
   	</select>
   	<select id="imp_search_booking_dtlsCOUNT" parameterClass="cargo.cms.imprt.bo.EnquireCollSlotSearchBO" 
 		resultClass="java.lang.Integer">
 		<![CDATA[
 		SELECT COUNT(1) FROM (
 		SELECT 
 			null
 		FROM 
 			IMP_BOOKING 
 		WHERE STATUS <> 'CANCEL'
 		]]>
 		<isNotEmpty prepend="AND" property="loginCustNo">
 			( Agent_id = #loginCustNo# or Trucker_id = #loginCustNo#)  
 		 </isNotEmpty>
 			<isNotEmpty prepend="AND" property="bkgNo">
      		 		BOOKING_NO = #bkgNo#
      		 </isNotEmpty>
 			 <isNotEmpty prepend="AND" property="bookingNo">
      		 		BOOKING_NO = #bookingNo#
      		 </isNotEmpty>
 			 <isNotEmpty prepend="AND" property="agtCode">
      		 		( AGENT_ID = #agtCode# or Trucker_id = #agtCode#)  
      		 </isNotEmpty>
 			<isNotEmpty prepend="AND" property="truckNo">
 				(TRUCK1 = #truckNo# OR TRUCK2 = #truckNo# OR TRUCK3 = #truckNo# OR TRUCK4 = #truckNo# OR TRUCK5 = #truckNo# OR TRUCK6 = #truckNo#)
 			</isNotEmpty>
 			<isNotEmpty property="bkgTimeSlotFromDt">
				 <isNotEmpty property="bkgTimeSlotToDt">
				  	<isNotEmpty property="bkgTimeSlotFromStr">
			  		 <isNotEmpty property="bkgTimeSlotToStr">
			      		  AND (TO_DATE(to_char(BKG_SLOT_DATE,'DDMONYY') ||' '||to_char(to_date(TRIM(TO_CHAR(NVL(BKG_SLOT_FROM,0),'0000')),'HH24MI'),'HH24MI'), 'DDMONYY HH24MI') &gt;= TO_DATE(#bkgTimeSlotFromDt#||' '||#bkgTimeSlotFromStr#,'DDMONYY HH24MI')  
			              AND TO_DATE(TO_CHAR(BKG_SLOT_DATE,'DDMONYY') ||' '||to_char(to_date(TRIM(TO_CHAR(NVL(BKG_SLOT_TO,0),'0000')),'HH24MI'),'HH24MI'), 'DDMONYY HH24MI') &lt;= TO_DATE(#bkgTimeSlotToDt#||' '||#bkgTimeSlotToStr#,'DDMONYY HH24MI'))  
			 		 </isNotEmpty>
			 		 </isNotEmpty>
				</isNotEmpty>
			</isNotEmpty>    
		)
   	</select>
   	<select id="sqlGetImpBkgIsAWBLicensed" parameterClass="map" 
 		resultClass="java.lang.String">
 		<![CDATA[
			SELECT DECODE(COUNT(1), 0, 'N', 'Y') LICENCED 
			FROM CUST_UNDERTAKING UND
			LEFT OUTER JOIN (
			  SELECT AWB_DATE, CARR_CODE FROM IMP_CAR_SHP 
			  WHERE AWB_NO = #AWB_NO# AND FLT_KEY = #FLT_KEY# AND FLT_DATE = TO_DATE(#FLT_DATE#, 'DDMONYY')
			) AWB
			ON 1 = 1
			WHERE UND.CARR_CODE = AWB.CARR_CODE
 		]]>
			<isNotEmpty prepend="AND" property="AGENT_CODE">
 				UND.AGENT_CODE = #AGENT_CODE# 
 			</isNotEmpty> 
			AND AWB.AWB_DATE BETWEEN EFF_FROM AND EFF_TO			
 		
 	</select>
   	<select id="sqlGetImpBkgIsAWBConsol" parameterClass="map" 
 		resultClass="java.lang.String">
 		<![CDATA[
			SELECT NVL(AWB.CONSOLE_IND, 'N')
			FROM IMP_CAR_AWB AWB
			JOIN IMP_CAR_SHP SHP
			ON AWB.AWB_NO = SHP.AWB_NO AND AWB.AWB_DATE = SHP.AWB_DATE
			WHERE
			SHP.AWB_NO = #AWB_NO# AND SHP.FLT_KEY = #FLT_KEY# AND SHP.FLT_DATE = TO_DATE(#FLT_DATE#, 'DDMONYY')	
 		]]>
 	</select> 		
   	<select id="imp_bkg_shipment_dtls" parameterClass="map" 
 		resultClass="cargo.cms.imprt.bo.EnquireCollSlotShpDtlsBO">
 		<![CDATA[
 		select  bkg.BOOKING_NO, SUBSTR(bkgDtl.AWB_NO,1,3)  awbNoPfx , SUBSTR(bkgDtl.AWB_NO,4)  awbNoSfx , 
				SUBSTR(bkgDtl.AWB_NO,1,3)||'-'||SUBSTR(bkgDtl.AWB_NO,4) as awbNoDisp ,  bkgDtl.awb_no awbNo, to_char(bkgDtl.awb_date,'DDMONYY') awbDate ,
				bkgDtl.flt_Key fltKey, to_char(bkgDtl.flt_date,'DDMONYY') fltDate, sta, eta, ata,
      				decode(WHSE_COMPL_DATE,null,'N','Y') bdcompl,
        		decode(WHSE_COMPL_DATE , null, TO_CHAR(TO_DATE(FUN_GET_EST_COLL_TIME(bkgDtl.flt_Key,bkgDtl.flt_date,'A','BOOKING_EST_COLL_TIME',bkgDtl.AWB_NO,bkgDtl.awb_date), 'DDMONYY HH24:MI'),'DDMONYY HH24:MI'), 'Available' ) estCollTimeShow, 
        		decode(WHSE_COMPL_DATE , null, TO_CHAR(TO_DATE(FUN_GET_EST_COLL_TIME(bkgDtl.flt_Key,bkgDtl.flt_date,'A','BOOKING_EST_COLL_TIME',bkgDtl.AWB_NO,bkgDtl.awb_date), 'DDMONYY HH24:MI'),'HH24:MI'), TO_CHAR(sysdate,'HH24:MI') ) estCollTimeHide,
				TO_CHAR(TO_DATE(FUN_GET_EST_COLL_TIME(bkgDtl.flt_Key,bkgDtl.flt_date,'A','BOOKING_EST_COLL_TIME',bkgDtl.AWB_NO,bkgDtl.awb_date), 'DDMONYY HH24:MI'),'DDMONYY HH24:MI') estCollTime,
          		nvl(shp.Manifest_pcs,0) pcs, nvl(shp.Manifest_wt,0) wt, nvl(awbInv.invPcs,0) invPcs, nvl(awbInv.invWt,0) invWt,
				(select code_desc from cust_company where code = carAwb.agent_cust_no) agtName, carAwb.agent_cust_no agtCode, 
				carAwb.CSGNE_NAME csgnName, carAwb.CNS_CUST_NO csgnCode, 
				shp.DLV_MODE_RQS dlvModeRqs, shp.IMX_RQS imxRqs,
				AWB.content as content,
				carAwb.DOC_CHK_REQ docChkReq, DOC_CHK_COMP docChkCompl,
        		case when ( select COUNT(1) from IMP_CUST_CLR_LIST t1, IMP_CCCL_DOC_LIST t2 
					where t2.NOT_AVAILABLE = 'Y' and t1.tr_no = t2.tr_no and t1.awb_no = bkgDtl.awb_no and  t1.awb_date = bkgDtl.awb_date 
					and t1.flt_key = bkgDtl.flt_key and t1.flt_DATE = bkgDtl.flt_date) > 0 then 'Y' else 'N' end   reqDocs,  
				shp.NOA_IND noaInd, carAwb.VAL_FOR_SCH_COLL validforSchColl, 
				decode(trkMnf.truck_manf_no,null, 'Y', 'N') schColl, 
				(SELECT V.CC_CODE FROM V_CST_IMP_CC_CODE_AWB V
					WHERE V.FLT_KEY = bkgDtl.FLT_KEY AND V.FLT_DATE = bkgDtl.FLT_DATE AND V.AWB_NO = bkgDtl.AWB_NO 
				  AND NVL(V.HAWB_NO, '000000000000000000') =  '000000000000000000' AND ROWNUM = 1)  ccode, 
				nvl(carAwb.SPL_CODE1,'') ||' '|| nvl(carAwb.SPL_CODE2,'') ||' '|| nvl(carAwb.SPL_CODE3,'') ||' '|| nvl(carAwb.SPL_CODE4,'') 
				||' '|| nvl(carAwb.SPL_CODE5,'') ||' '|| nvl(carAwb.SPL_CODE6,'') ||' '|| nvl(carAwb.SPL_CODE7,'') ||' '|| nvl(carAwb.SPL_CODE8,'') 
				||' '|| nvl(carAwb.SPL_CODE9,'') shc  ,    
				osCharge chrgs, TO_CHAR(shp.LM_DATE, 'DDMONYY HH24:MI:SSSSS') as lmDate,carAwb.CONSOLE_IND consol,
		        (select BKG_YN from mast_spl_hand_code where code in (carAwb.SPL_CODE1, carAwb.SPL_CODE2, carAwb.SPL_CODE3, carAwb.SPL_CODE4,carAwb.SPL_CODE5, carAwb.SPL_CODE6, carAwb.SPL_CODE7, carAwb.SPL_CODE8,carAwb.SPL_CODE9) AND ROWNUM = 1 ) bkgAllow,
		        (select count(1) from cust_airl_spl_code where carr_code = AWB.carr_code and spl_type = 'SPL_VAL' and spl_code in (carAwb.SPL_CODE1, carAwb.SPL_CODE2, carAwb.SPL_CODE4, carAwb.SPL_CODE3,carAwb.SPL_CODE5, carAwb.SPL_CODE6, carAwb.SPL_CODE7, carAwb.SPL_CODE8,carAwb.SPL_CODE9) AND ROWNUM = 1) valCnt,
		        (select count(1) from cust_airl_spl_code where carr_code = AWB.carr_code and spl_type = 'SPL_ODD' and spl_code in (carAwb.SPL_CODE1, carAwb.SPL_CODE2, carAwb.SPL_CODE4, carAwb.SPL_CODE3,carAwb.SPL_CODE5, carAwb.SPL_CODE6, carAwb.SPL_CODE7, carAwb.SPL_CODE8,carAwb.SPL_CODE9) AND ROWNUM = 1) oddCnt,
            	shp.TRUCKER_CUST_NO asgnTruckerCode ,   shp.TRUCKER_ASSIGN_BY asgnLoginId,
                (select HKID from SEC_USER USR  where  CUST_NO = shp.TRUCKER_CUST_NO and code = shp.TRUCKER_ASSIGN_BY) asgTruckerHkid,
                (select HKID from SEC_USER USR  where  CUST_NO = carAwb.agent_cust_no and CODE = #loginId#) loginHkid, bkgDtl.CHARGES charges
			from IMP_BOOKING bkg
      join IMP_BOOKING_DTL bkgDtl on bkg.BOOKING_NO = bkgDtl.BOOKING_NO      
      join (select  fltEvt.WHSE_COMPL_DATE , flt.FLT_TYPE, flt.sch_date, flt.flt_Key, 
          flt.CARR_CODE, flt.ACFT_TYPE, flt.SCH_TIME estCollTimesta, flt.ACT_TIME estCollTimeata,
          SUBSTR(TRIM(TO_CHAR(NVL(flt.SCH_TIME,0),'0000')),0,2)|| ':'||  SUBSTR(TRIM(TO_CHAR(NVL(flt.SCH_TIME,0),'0000')),3,4) AS sta, 
          PKG_COMMON.get_flt_eta(flt.FLT_KEY,FLT.SCH_DATE,'A') AS eta,    
    	  PKG_COMMON.get_flt_ata(flt.FLT_KEY,FLT.SCH_DATE,'A') AS ata
          from flt_opr flt, flt_opr_events fltEvt
          where flt.flt_Key = fltEvt.flt_Key and  flt.sch_Date = fltEvt.sch_date and  flt.flt_type = fltEvt.flt_type) fltTimes  
          on  bkgDtl.flt_Key = fltTimes.flt_Key and  bkgDtl.flt_Date = fltTimes.sch_date and fltTimes.flt_type = 'A'
    join IMP_CAR_SHP shp  on shp.awb_no = bkgDtl.awb_no and  shp.awb_date = bkgDtl.awb_date and shp.flt_Key = bkgDtl.flt_Key 
          and  shp.flt_Date = bkgDtl.flt_date  
    join IMP_CAR_AWB carAwb on bkgDtl.awb_no = carAwb.awb_no and  bkgDtl.awb_date = carAwb.awb_date                  
    join AWB on bkgDtl.awb_no = AWB.awb_no and  bkgDtl.awb_date = AWB.awb_date                  
    left join (select sum(locn_pcs) invPcs, sum(locn_wt) invWt, awb_no, awb_date, flt_key, flt_date from AWB_INVENTORY 
          group by awb_no, awb_date, flt_key, flt_date) awbInv 
          on bkgDtl.awb_no = awbInv.awb_no and  bkgDtl.awb_date = awbInv.awb_date and awbInv.flt_Key = bkgDtl.flt_Key 
          and  awbInv.flt_Date = bkgDtl.flt_date 
    left join  (select trkDtl.truck_manf_no truck_manf_no, trkDtl.awb_no, trkDtl.awb_date, trkDtl.flt_key, trkDtl.flt_date, SCH_COLL_FROM, 
          decode(FINAL_TRUCK_MANF_NO, 'N', 'Y') trk_manf_flz
          from TRUCK_MANIFEST trk,  TRUCK_MANIFEST_DTL trkDtl 
          where trk.TRUCK_MANF_NO = trkDtl.TRUCK_MANF_NO 
          and to_date( to_char(SCH_COLL_DATE,'DDMONYY') ||' '||to_char(NVL(SCH_COLL_FROM,0),'0000') , 'DDMONYY HH24MI') > sysdate ) trkMnf
          on bkgDtl.awb_no = trkMnf.awb_no and  bkgDtl.awb_date = trkMnf.awb_date and bkgDtl.flt_key = trkMnf.flt_key and bkgDtl.flt_DATE = trkMnf.flt_date
      left join CUST_UNDERTAKING cusUnd ON cusUnd.carr_code = awb.CARR_CODE and cusUnd.AGENT_CODE  = carAwb.agent_cust_no
      										and cusUnd.EFF_FROM < SYSDATE AND NVL(cusUnd.EFF_TO, SYSDATE) >= SYSDATE
			left JOIN (select AWB_NO, AWB_DATE, sum(AAT_OS + AIRL_OS) osCharge from GT_OS_CHARGES group by AWB_NO, AWB_DATE) GT  	ON GT.AWB_NO = bkgDtl.AWB_NO AND GT.AWB_DATE = bkgDtl.AWB_DATE	 
    Where bkg.BOOKING_NO = #bkgNo# 
    ]]>
 		<isNotEmpty prepend="AND" property="loginCustNo">
 			 ( bkg.Agent_id = #loginCustNo# or bkg.Trucker_id = #loginCustNo#)  
 		 </isNotEmpty>

 	</select>
 	
 	<select id="imp_dlv_spl_hdlg_code" parameterClass="map" resultClass="java.lang.String">
 		SELECT 
 			CODE 
 		FROM 
 			IMP_CAR_AWB A, MAST_SPL_HAND_CODE B 
		WHERE 
			(B.CODE = A.SPL_CODE1 OR B.CODE = A.SPL_CODE2 OR B.CODE = A.SPL_CODE3 OR 
			B.CODE = A.SPL_CODE4 OR B.CODE = A.SPL_CODE5 OR B.CODE = A.SPL_CODE6 OR 
			B.CODE = A.SPL_CODE7 OR B.CODE = A.SPL_CODE8 OR B.CODE = A.SPL_CODE9) 
			AND A.AWB_NO = #awbNo# AND A.AWB_DATE = #awbDate# 
		ORDER BY 
			PRIORITY
 	</select>
 	
 	<select id="imp_coll_slot_info" parameterClass="map" 
 		resultClass="cargo.cms.imprt.bo.EnquireCollSlotBkgLstBO">
 		SELECT 
 			TRUCK1 || case when TRUCK2 is not null then ', ' || TRUCK2 else '' end || 
 			case when TRUCK3 is not null then ', ' || TRUCK3 else '' end || 
 			case when TRUCK4 is not null then ', ' || TRUCK4 else '' end || 
 			case when TRUCK5 is not null then ', ' || TRUCK5 else '' end || 
 			case when TRUCK6 is not null then ', ' || TRUCK6 else '' end as truckNo, 
 			COLL_PERSON_NAME as collBy, COLL_PERSON_ID as hkId, 
 			TO_CHAR(BKG_SLOT_DATE, 'DDMONYY') || ' ' || 
 			SUBSTR(TRIM(TO_CHAR(NVL(BKG_SLOT_FROM,0),'0000')),0,2)|| ':' || 
 			SUBSTR(TRIM(TO_CHAR(NVL(BKG_SLOT_FROM,0),'0000')),3,4)|| ' - ' || 
 			SUBSTR(TRIM(TO_CHAR(NVL(BKG_SLOT_TO,0),'0000')),0,2)|| ':'|| 
 			SUBSTR(TRIM(TO_CHAR(NVL(BKG_SLOT_TO,0),'0000')),3,4) as timeSlot, 
      		PHONE_NO as phoneNo,
      		DEL_ZONE deliveryZone
 		FROM 
 			IMP_BOOKING 
    	WHERE 
      		BOOKING_NO = #bkgNo#
 	</select>
 	
 	<select id="imp_login_usr_agt_trucker" parameterClass="java.lang.String" 
 		resultClass="java.lang.String">
 		SELECT 
 			CODE_DESC 
 		FROM CUST_COMPANY 
 		WHERE 
 			(AGENT_YN='Y' OR TRUCKER_YN='Y') AND BLACKLISTED='N' 
 			AND ACTIVE='Y' AND CODE_DESC=#companyName#
 	</select>

 	
 	<select id="imp_login_usr_agt_trucker_code" parameterClass="java.lang.String" 
 		resultClass="java.lang.String">
 		SELECT 
 			CODE
 		FROM CUST_COMPANY 
 		WHERE 
 			(AGENT_YN='Y' OR TRUCKER_YN='Y') AND BLACKLISTED='N' 
 			AND ACTIVE='Y' AND CODE_DESC=#companyName#
 	</select>


 <!-- Enquire Collection Slot :: Anup :: Ends -->
<!-- Enquire CDIF -->
<select id="imp_maintainCdif_enquireHd"  parameterClass="cargo.cms.imprt.bo.CDIFBO"  resultClass="cargo.cms.imprt.bo.CDIFBO">
		select 
			AWB_NO awbNo,
			SUBSTR(AWB_NO,1,3)  awbNoPrefix , 
			SUBSTR(AWB_NO,4)  awbNoSuffix , 
			SUBSTR(AWB_NO,1,3)||'-'||SUBSTR(AWB_NO,4) as awbNoDisp ,
			TO_CHAR(AWB_DATE, 'DDMONYY') awbDate, 
			SRF_NO srfNo,
			SRF_NO  srfNoPrefix ,  
			SUBSTR(SRF_NO,1,8) as srfNoDisp , 
			CDIF_NO cdifNo,
			TO_CHAR(CDIF_PCS) cdifPcs,
			TO_CHAR(CDIF_WT) cdifWt,			
			SUBSTR(CDIF_NO,1,8)  cdifNoPrefix , 
			SUBSTR(CDIF_NO,9)  cdifNoSuffix , 
			SUBSTR(CDIF_NO,1,8)||'-'||SUBSTR(CDIF_NO,9) as cdifNoDisp,
			UTL_RMK utlRemark,
			UTL_EMAIL1 emailAddress1, 
			UTL_EMAIL2 emailAddress2, 
			UTL_EMAIL3 emailAddress3,
			FOLLOW_ON_TRUCK truckNo
		from IMP_CDIF  
		where 		
		CDIF_NO = #cdifNo# 		
	</select>
	
	<!--  Changed for QR -->
	<select id="imp_maintainCdif_awbInfo"  parameterClass="cargo.cms.imprt.bo.CDIFBO"  resultClass="cargo.cms.imprt.bo.CDIFBO">
	<![CDATA[
		SELECT
		A.AWB_NO awbNo,
		SUBSTR(A.AWB_NO,1,3)  awbNoPrefix , 
		SUBSTR(A.AWB_NO,4)  awbNoSuffix , 
		SUBSTR(A.AWB_NO,1,3)||'-'||SUBSTR(A.AWB_NO,4) as awbNoDisp ,
		TO_CHAR(A.AWB_DATE, 'DDMONYY') awbDate,
		A.SRF_NO srfNo,
		SUBSTR(A.SRF_NO,1,8)  srfNoPrefix , 
		SUBSTR(A.SRF_NO,1,8) as srfNoDisp , 
		TO_CHAR(B.FLT_DATE,'DDMONYY') fltDate, 
		B.FLT_KEY fltNoKey, 
		TO_CHAR(C.ACT_TIME) ata,
		PKG_COMMON.get_flt_ata(C.FLT_KEY, C.SCH_DATE, 'A') AS ataTime,
		SUBSTR(TRIM(TO_CHAR(NVL(C.SCH_TIME,0),'0000')),0,2)|| ':'||  SUBSTR(TRIM(TO_CHAR(NVL(C.SCH_TIME,0),'0000')),3,4) AS staTime,
		TO_CHAR(A.SRF_PCS) delvPc, 
		TO_CHAR(A.SRF_WT) delvWt, 
		D.CONTENT content,
		D.CSGNE_NAME csgnDesc, 
		D.APPNTD_AGENT agentDesc,
		'' truckNo,
		TO_CHAR(A.SRF_PCS - E.dlvPcSum) unDelvPcs,
    	TO_CHAR(A.SRF_WT - E.dlvWtSum) unDelvWt
		FROM imp_srf A join imp_car_awb D on A.awb_no = D.awb_no AND A.awb_date = D.awb_date,
			(select FLT_KEY, FLT_DATE from (
    			Select FLT_KEY, FLT_DATE from imp_srf_awb_inventory where SRF_NO = #srfNo# and nvl(locn_pcs,0) <> nvl(dlv_pcs,0)
    			group by FLT_KEY, FLT_DATE order by FLT_DATE ASC) where ROWNUM = 1
    		 ) B
			left join flt_opr C on B.flt_key = C.flt_key AND B.flt_date = C.sch_date AND C.FLT_TYPE = 'A',			
			(select sum(dlv_pcs) dlvPcSum,sum(dlv_Wt) dlvWtSum from imp_srf_flt where srf_no = #srfNo# group by srf_no) E
		 WHERE A.srf_no = #srfNo#	
	  ]]> 	 
	</select>
	
	<!--  Changed for QR -->
	<select id="imp_maintainCdif_awbInfo_exp"  parameterClass="cargo.cms.imprt.bo.CDIFBO"  resultClass="cargo.cms.imprt.bo.CDIFBO">
		SELECT
		A.AWB_NO awbNo,
		SUBSTR(A.AWB_NO,1,3)  awbNoPrefix , 
		SUBSTR(A.AWB_NO,4)  awbNoSuffix , 
		SUBSTR(A.AWB_NO,1,3)||'-'||SUBSTR(A.AWB_NO,4) as awbNoDisp ,
		TO_CHAR(A.AWB_DATE, 'DDMONYY') awbDate,
		A.SRF_NO srfNo,
		SUBSTR(A.SRF_NO,1,8)  srfNoPrefix , 
		SUBSTR(A.SRF_NO,1,8) as srfNoDisp , 
		TO_CHAR(B.FLT_DATE,'DDMONYY') fltDate, 
		B.FLT_KEY fltNoKey, 
		TO_CHAR(C.ACT_TIME) ata,
		PKG_COMMON.get_flt_ata(C.FLT_KEY, C.SCH_DATE, 'A') AS ataTime,
		SUBSTR(TRIM(TO_CHAR(NVL(C.SCH_TIME,0),'0000')),0,2)|| ':'||  SUBSTR(TRIM(TO_CHAR(NVL(C.SCH_TIME,0),'0000')),3,4) AS staTime,
		TO_CHAR(A.SRF_PCS) delvPc, 
		TO_CHAR(A.SRF_WT) delvWt, 
		D.CONTENT content,
		F.CSGNE_NAME csgnDesc, 
		D.AGENT_NAME agentDesc,
		'' truckNo,
		TO_CHAR(A.SRF_PCS - E.dlvPcSum) unDelvPcs,
    	TO_CHAR(A.SRF_WT - E.dlvWtSum) unDelvWt
		FROM imp_srf A
			join awb D on A.awb_no = D.awb_no AND A.awb_date = D.awb_date
			left join EXP_CAR F on F.awb_no = D.awb_no and F.awb_date = D.awb_date , 
			(Select FLT_KEY, FLT_DATE from imp_srf_flt where SRF_NO =#srfNo# and ROWNUM = 1 order by FLT_DATE DESC) B
			left join flt_opr C on B.flt_key = C.flt_key AND B.flt_date = C.sch_date AND C.FLT_TYPE = 'A',
			(select sum(dlv_pcs) dlvPcSum,sum(dlv_Wt) dlvWtSum from imp_srf_flt where srf_no =#srfNo# group by srf_no) E
		WHERE  A.srf_no =#srfNo#	 
	</select>
	
		<select id="imp_maintainCdif_enquireHawb"  parameterClass="cargo.cms.imprt.bo.CDIFBO"  resultClass="cargo.cms.imprt.bo.CDIFBO">
		select 
			AWB_NO awbNo,
			SUBSTR(AWB_NO,1,3)  awbNoPrefix , 
			SUBSTR(AWB_NO,4)  awbNoSuffix , 
			SUBSTR(AWB_NO,1,3)||'-'||SUBSTR(AWB_NO,4) as awbNoDisp ,
			TO_CHAR(AWB_DATE, 'DDMONYY') awbDate, 
			HAWB_NO hawbNo,
			CDIF_NO cdifNo,
			SUBSTR(CDIF_NO,1,8)  cdifNoPrefix , 
			SUBSTR(CDIF_NO,9)  cdifNoSuffix , 
			SUBSTR(CDIF_NO,1,8)||'-'||SUBSTR(CDIF_NO,9) as cdifNoDisp,
			TO_CHAR(DOC_LINE_NO) docLineNo, 
			TO_CHAR(CDIF_DT_PCS) detainPc,
			TO_CHAR(CDIF_DT_WT) detainWt,
			TO_CHAR(CDIF_PS_PCS) psPc,
			TO_CHAR(CDIF_PS_WT) psWt,
			TO_CHAR(CDIF_UTL_PCS) unlocPc,
			TO_CHAR(CDIF_UTL_WT) unlocWt,
			TO_CHAR(CDIF_FOLLOW_ON_PCS) followonPc,
			TO_CHAR(CDIF_FOLLOW_ON_Wt) followonWt,
			TO_CHAR(LM_DATE, 'DDMONYY HH24:MI:SS') lmDate,
			RMK cdifRemark
		from IMP_CDIF_HAWB  
		where 		
		CDIF_NO = #cdifNo#
	</select>
<!-- End of Enquire CDIF -->
<!-- Void CDIF -->

	<select id="imp_maintainCdif_VOIDHd"  parameterClass="cargo.cms.imprt.bo.CDIFBO"  resultClass="cargo.cms.imprt.bo.CDIFBO">
		select 
			AWB_NO awbNo,
			SUBSTR(AWB_NO,1,3)  awbNoPrefix , 
			SUBSTR(AWB_NO,4)  awbNoSuffix , 
			SUBSTR(AWB_NO,1,3)||'-'||SUBSTR(AWB_NO,4) as awbNoDisp ,
			TO_CHAR(AWB_DATE, 'DDMONYY') awbDate, 
			SRF_NO srfNo,
			SRF_NO  srfNoPrefix , 
			SUBSTR(SRF_NO,1,8) as srfNoDisp , 
			CDIF_NO cdifNo,
			TO_CHAR(CDIF_PCS) cdifPcs,
			TO_CHAR(CDIF_WT) cdifWt,
			SUBSTR(CDIF_NO,1,8)  cdifNoPrefix , 
			SUBSTR(CDIF_NO,9)  cdifNoSuffix , 
			SUBSTR(CDIF_NO,1,8)||'-'||SUBSTR(CDIF_NO,9) as cdifNoDisp,
			VOID_USER lmUserId,
			TO_CHAR(VOID_DATE,'DDMONYY HH24:MI:SS') voidDate,
			TO_CHAR(LM_DATE, 'DDMONYY HH24:MI:SS') lmDate,
			FOLLOW_ON_TRUCK truckNo			 
		from IMP_CDIF  
		where 		
		CDIF_NO = #cdifNo# 
	</select>
	
	<select id="imp_maintainCdif_checkvoid"  parameterClass="java.lang.String"  resultClass="java.lang.Integer">
		select count(1) from IMP_CDIF where void_user is not null and CDIF_NO = #cdifNo#
	</select>
	
	<select id="imp_maintainCdif_checkSRFissued"  parameterClass="java.lang.String"  resultClass="java.lang.Integer">
		select count(1) from IMP_CDIF where cdif_no= #cdifNo# and cdif_srf_no is not null
	</select>
	
	<update id="imp_maintainCdif_void" parameterClass="cargo.cms.imprt.bo.CDIFBO">
		update IMP_CDIF set 
		VOID_USER = #crUserId#, 
		VOID_DATE = SYSDATE, 
		LM_USER_ID = #crUserId# , 
		LM_DATE = SYSDATE,
		tr_type='VCDIF'
		where 		
		CDIF_NO = #cdifNo#
   </update>
   
	
   <update id="imp_VoidCdif_IMP_SRF_AWB_Inventory_refCdif" parameterClass="cargo.cms.imprt.bo.CDIFBO">
		update awb_inventory
			set CDIF_NO = #referenceCdifNo#,
			SRF_NO = (SELECT SRF_NO FROM IMP_CDIF WHERE CDIF_NO = #cdifNo#),
			lm_user_id = #crUserId#, 
			lm_date= SYSDATE
		where CDIF_NO = #cdifNo# AND NVL(FLT_KEY,'*')  = NVL(#refFltKey#,'*') AND NVL(FLT_DATE,SYSDATE) = NVL(#refFltDate#,SYSDATE)
	</update>

<select id="getReferenceCDIFNumber"  parameterClass="cargo.cms.imprt.bo.CDIFBO"  resultClass="cargo.cms.imprt.bo.CDIFBO">
    	select ref_cdif_no as referenceCdifNo,flt_key as refFltKey,TO_CHAR(flt_Date,'DDMONYY') as refFltDate  
			from IMP_SRF_AWB_INVENTORY where cdif_no= #cdifNo#  and ref_cdif_no is not null group by cdif_no,awb_no,awb_date,flt_key,flt_date,ref_cdif_no		
	</select>
    
	<update id="imp_VoidCdif_IMP_SRF_AWB_Inventory" parameterClass="cargo.cms.imprt.bo.CDIFBO">
		update awb_inventory
			set CDIF_NO = '',
			SRF_NO = (SELECT SRF_NO FROM IMP_CDIF WHERE CDIF_NO = #cdifNo#),
			lm_user_id = #crUserId#, 
			lm_date= SYSDATE
		where CDIF_NO = #cdifNo#
	</update>
	
	<update id="imp_VoidCdif_IMP_SRF_Inventory" parameterClass="cargo.cms.imprt.bo.CDIFBO">
		update IMP_SRF_AWB_INVENTORY
			set CDIF_NO = '',
			CDIF_PC	= '',
			CDIF_WT = '',
        	LM_DATE = sysdate,
			LM_USER_ID = #crUserId#
		where CDIF_NO = #cdifNo#
	</update>
	
	<select id="imp_getInventryDtls"  parameterClass="cargo.cms.imprt.bo.CDIFBO"  resultClass="cargo.cms.imprt.bo.CDIFBO">
	SELECT
     AWB_NO as awbNo,
     TO_CHAR(AWB_DATE, 'DDMONYY') as awbDate,
     FLT_KEY as fltKey, 
     FLT_TYPE as fltType,
     TO_CHAR(FLT_DATE, 'DDMONYY') as fltDate,
     LOC_CODE as cdifLocCode,
     LSP_NO as lspNo,
     ULD_KEY as uldKey,
     TRM_NO as trmNo,
     CDIF_NO as cdifNo,
     REF_DOC_LINE_NO as docLineNo
	FROM AWB_INVENTORY  WHERE  CDIF_NO = #cdifNo#
  	</select>
  	
  	<select id="getSequenceNoToVoid" parameterClass="cargo.cms.imprt.bo.CDIFBO" resultClass="cargo.cms.imprt.bo.CDIFBO" >
 	SELECT SEQ_NO as cdifSeqNo, CDIF_NO AS cdifNo
	FROM AWB_INVENTORY
    WHERE 
    AWB_NO = #awbNo#
    AND AWB_DATE = #awbDate#
    AND CDIF_NO = #cdifNo#
    AND REF_DOC_LINE_NO = #docLineNo#
    AND NVL(FLT_KEY,'*')  = NVL(#fltKey#,'*')
    AND NVL(FLT_TYPE,'*')  = NVL(#fltType#,'*')
    AND NVL(FLT_DATE,SYSDATE) = NVL(#fltDate#,SYSDATE)
    AND NVL(LOC_CODE,'*') = NVL(#cdifLocCode#,'*')
    AND NVL(LSP_NO,0)   = NVL(#lspNo#,0)
    AND NVL(ULD_KEY,'*')  = NVL(#uldKey#,'*')
    AND SRF_NO IS NULL
   </select>
  	
  	<select id="imp_getCdifPcsWt"  parameterClass="cargo.cms.imprt.bo.CDIFBO"  resultClass="cargo.cms.imprt.bo.CDIFBO">
 		 select CDIF_PC as cdifPcs, CDIF_WT as cdifWt from IMP_SRF_AWB_INVENTORY 
 		 where SEQ_NO = #cdifSeqNo# and CDIF_NO = #cdifNo#
    </select>
  
  	<select id="imp_searchForMatchingLoc"  parameterClass="cargo.cms.imprt.bo.CDIFBO"  resultClass="cargo.cms.imprt.bo.CDIFBO">
 	 SELECT LOC_CODE as oldLocCode, SEQ_NO as oldSeqNo, SRF_NO AS srfNo
  		FROM AWB_INVENTORY
  		WHERE 
    		AWB_NO = #awbNo#
    		AND AWB_DATE = #awbDate#
    		AND NVL(FLT_KEY,'*')  = NVL(#fltKey#,'*')
    		AND NVL(FLT_TYPE,'*')  = NVL(#fltType#,'*')
    		AND NVL(FLT_DATE,SYSDATE) = NVL(#fltDate#,SYSDATE)
    		AND NVL(TRM_NO,'*')  = NVL(#trmNo#,'*')
    		AND NVL(LSP_NO,0)   = NVL(#lspNo#,0)
    		AND NVL(ULD_KEY,'*')  = NVL(#uldKey#,'*')
    		AND NVL(LOC_CODE,'*') = NVL(#cdifLocCode#,'*')
    		AND DLV_YN = 'N'
    		AND CDIF_NO IS NULL
    		AND SRF_NO IS NOT NULL
    		AND ROWNUM = 1
    </select>
    
    <update id="imp_updateCdifSrfLoc" parameterClass="java.util.HashMap">
    update imp_srf_awb_inventory
			set 
        	LOCN_PCS = LOCN_PCS + to_number(#locPcs#,'99999'),
        	LOCN_WT = LOCN_WT + to_number(#locWt#,'999999999.99'),
        	LM_DATE = sysdate,
			LM_USER_ID = #lmuserId#
			where 
     		SEQ_NO = #matSeqNo#
   			and srf_no = #matsrfNo#
   			and LOC_CODE = #matLocCode#
    </update> 
      
    <update id="imp_updateCdifAwbLoc" parameterClass="java.util.HashMap">
    	update AWB_INVENTORY set
			LOCN_PCS = LOCN_PCS + to_number(#locPcs#,'99999'),
        	LOCN_WT = LOCN_WT + to_number(#locWt#,'999999999.99'),
        	LM_DATE = sysdate,
			LM_USER_ID = #lmuserId#
			WHERE 
			SEQ_NO = #matSeqNo#
   			and srf_no = #matsrfNo#
   			and LOC_CODE = #matLocCode#
    </update>  
    
    <delete id="imp_deleteAwbLoc" parameterClass="java.util.HashMap" >
   		 DELETE AWB_INVENTORY  WHERE SEQ_NO = #cdifSeqNo# 
    </delete>
    
    <delete id="imp_deleteSrfLoc" parameterClass="java.util.HashMap" >
   		 DELETE imp_srf_awb_inventory  WHERE SEQ_NO = #cdifSeqNo# 
	</delete>
	
	<!-- End Void CDIF-->
	
	<!-- Maintain CDIF -->	
	
	<select id="checkCdifCreated" parameterClass="java.lang.String"  resultClass="java.lang.String" >
 		select count(1)  from imp_cdif where srf_no = #srfNo#
	</select>
	
	<select id="getSequenceNoForCDIF" parameterClass="java.lang.String"  resultClass="java.lang.String" >
 		select srf_no||trim(to_char(to_char(max(to_number(SUBSTR(cdif_no,9)))+1),'000')) from imp_cdif where srf_no = #srfNo# group by srf_no
	</select>
	
	<select id="getCpclAddr" parameterClass="java.lang.String"  resultClass="java.lang.String" >
 		select rule_value from cmsrules where rule_code = 'COM_NOTF_SENDER' and rownum=1
	</select>
	
	<select id="getSequenceNo" parameterClass="cargo.cms.imprt.bo.CDIFSearchBO" resultClass="java.lang.String" >
 	SELECT SEQ_NO as seqNo
	FROM AWB_INVENTORY
    WHERE AWB_NO = #awbNo#
    AND AWB_DATE = #awbDate#
    AND NVL(FLT_KEY,'*')  = NVL(#fltNoKey#,'*')
    AND NVL(FLT_TYPE,'*')  = NVL(#fltType#,'*')
    AND NVL(FLT_DATE,SYSDATE) = NVL(#fltDate#,SYSDATE)
    AND NVL(LOC_CODE,'*') = NVL(#whLocn#,'*')
    AND NVL(LSP_NO,0)   = NVL(#lspNo#,0)
    AND NVL(ULD_KEY,'*')  = NVL(#uldNo#,'*')
    AND NVL(TRM_NO,'*')  = NVL(#trmNo#,'*')
    AND NVL(CDIF_NO,'*') = NVL(#cdifNo#,'*')
    AND REF_DOC_LINE_NO = #docLineNo#
    AND SRF_NO IS NULL
	</select>
	
	<select id="getDuplicateRecord" parameterClass="cargo.cms.imprt.bo.CDIFSearchBO" resultClass="java.lang.String" >
 	 SELECT seq_no AS seqNo FROM awb_inventory 
 		WHERE 
		 AWB_NO = #awbNo# 
 		 AND AWB_DATE = #awbDate# 
 		 AND NVL(FLT_KEY,'*')  = NVL(#fltNoKey#,'*')
   		 AND NVL(FLT_TYPE,'*')  = NVL(#fltType#,'*')
   		 AND NVL(FLT_DATE,SYSDATE) = NVL(#fltDate#,SYSDATE)
		 AND CDIF_NO = #cdifNo#
		 AND DLV_YN = 'N'
		 AND NVL(LSP_NO,0)   = NVL(#lspNo#,0)
		 AND NVL(ULD_KEY,'*')  = NVL(#uldNo#,'*')
		 AND NVL(LOC_CODE,'*') = NVL(#whLocn#,'*')
		 AND SRF_NO IS NULL
	</select>
	
	<update id="updateExistRecAwbInventory" parameterClass="cargo.cms.imprt.bo.CDIFSearchBO">
	 		update AWB_INVENTORY set
			LOCN_PCS = LOCN_PCS + to_number(#cdifPcs#,'99999'),
			LOCN_WT = LOCN_WT + to_number(#cdifWt#,'999999999.99'),
			LM_USER_ID = #lmUserId#, 
			LM_DATE = SYSDATE
			WHERE 
			SEQ_NO = #seqNo#
	</update>
	
	<update id="updateExistRecSRFAwbInventory" parameterClass="cargo.cms.imprt.bo.CDIFSearchBO">
	 	  	update IMP_SRF_AWB_INVENTORY set
			LOCN_PCS = LOCN_PCS + to_number(#cdifPcs#,'99999'),
			LOCN_WT = LOCN_WT + to_number(#cdifWt#,'999999999.99'),
	   		CDIF_PC = LOCN_PCS + to_number(#cdifPcs#,'99999'),
	   		CDIF_WT = LOCN_WT + to_number(#cdifWt#,'999999999.99'),
			LM_USER_ID = #lmUserId#, 
			LM_DATE = SYSDATE
			WHERE 
			SEQ_NO = #seqNo#
	</update>

	<insert id="imp_IMP_AWB_Inventory" parameterClass="cargo.cms.imprt.bo.CDIFSearchBO" >
	 INSERT INTO AWB_INVENTORY
	 (AWB_NO, AWB_DATE,CARR_CODE, LSP_NO,LOC_CODE,CC_CODE,
	 LOCN_PCS, LOCN_WT, DAM_IND, PPK_IND, STRG_DATE,CR_USER_ID, CR_DATE,
	 SRF_NO, CDIF_NO, TRM_NO,BUP_WT,BULK_WT,
	 LM_USER_ID, LM_DATE, FLT_NO, FLT_DATE, FLT_KEY,FLT_TYPE, ULD_KEY, SEQ_NO,
	 REF_LSP_TR_TYPE,REF_LSP_TR_EVENT,REF_TR_NO,REF_TR_TYPE,REF_TR_DATE,
	 REF_DOC_LINE_NO,REF_LOC_FROM,REF_TR_EVENT,REF_RMK,REF_MOV_FROM,WH_DAM_IND,DAM_TYPE,DAM_PCS,DAM_WT)
	 VALUES
	 (#awbNo#,#awbDate#,#carrCode#,#lspNo#,#whLocn#,#ccCode#,
	 #cdifPcs#,#cdifWt#,#damInd#, #ppkInd#,sysdate, #crUserId#, sysdate,
	 '', #cdifNo#, #trmNo#,NVL(#bupWtDisp#,0),NVL(#bulkWtDisp#,0),
	 #lmUserId#, sysdate, #fltNo#,#fltDate#,#fltNoKey#,#fltType#,#uldNo#,AWB_INV_SEQ.NEXTVAL,
	 '','',#trNo#,'CD',sysdate,#docLineNo#,#whLocn#,'CD',#rmk#,#whLocn#,#whDamInd#,#damType#,#damPcs#,#damWt#)
	</insert>
	
	<insert id="Imp_InsertImpSrfAwbInventoryAfterCDIF" parameterClass="cargo.cms.imprt.bo.CDIFSearchBO" >
		<![CDATA[
		INSERT INTO IMP_SRF_AWB_INVENTORY (
		AWB_NO,AWB_DATE,CARR_CODE,CDIF_NO,CDIF_PC,CDIF_WT,CR_DATE,CR_USER_ID,CC_CODE,
		DAM_IND,FLT_DATE,FLT_KEY,LOCN_PCS,LOCN_WT,LOC_CODE,SEQ_NO,SRF_NO,ULD_KEY,LSP_NO,REF_CDIF_NO) 
		VALUES (#awbNo#,#awbDate#,#carrCode#,#cdifNo#,to_number(#cdifPcs#,'99999'),to_number(#cdifWt#,'999999999.99'),SYSDATE,#crUserId#,#ccCode#,
   		#damInd#,#fltDate#,#fltNoKey#,#cdifPcs#,#cdifWt#,#whLocn#,#seqNo#,#srfNo#,#uldNo#,#lspNo#,#issCdifNo#)
   		]]>
	</insert>
	
	<insert id="insertHawbRecord" parameterClass="cargo.cms.imprt.bo.CDIFSearchBO" >
		<![CDATA[
		INSERT INTO HAWB_INVENTORY (
		SEQ_NO, HAWB_NO,STRG_PCS, STRG_WT,CR_DATE,CR_USER_ID,LM_DATE,LM_USER_ID) 
		VALUES (#seqNo#,#hawbInvNo#,#hawbStrogPcs#,#hawbStrogWt#,SYSDATE,#crUserId#,SYSDATE,#lmUserId#)
   		]]>
	</insert>

	<update id="updateExistHawbInventory" parameterClass="cargo.cms.imprt.bo.CDIFSearchBO" >	 
		update HAWB_INVENTORY set
		STRG_PCS = STRG_PCS + to_number(#hawbStrogPcs#,'99999'),
		STRG_WT = STRG_WT + to_number(#hawbStrogWt#,'999999999.99'),
		LM_USER_ID = #lmUserId#, 
		LM_DATE = SYSDATE
		WHERE 
		SEQ_NO = #seqNo# and HAWB_NO = #hawbInvNo#
	</update>
	
	<update id="imp_update_IMP_AWB_Inventory" parameterClass="cargo.cms.imprt.bo.CDIFSearchBO" >
		update AWB_INVENTORY set
		LOCN_PCS = #strgPcDisp#, 
		LOCN_WT = #strgWtDisp#,
		LM_USER_ID = #lmUserId#, 
		LM_DATE = SYSDATE
		WHERE 
		SEQ_NO = #oldseqNo#
	</update>
	
	<delete id="imp_delete_IMP_AWB_Inventory" parameterClass="cargo.cms.imprt.bo.CDIFSearchBO" >
		DELETE AWB_INVENTORY  WHERE SEQ_NO = #oldseqNo#
	</delete>
	
	<!-- Changed for QR :: RANJITH -->
	<select id="getSrfDlvInd" parameterClass="cargo.cms.imprt.bo.CDIFSearchBO"  resultClass="java.lang.String" >
 		select NVL(DLV_IND,'N')  from IMP_SRF_AWB_INVENTORY where seq_no = #oldseqNo# AND SRF_NO = #srfNo#
	</select>
	
	<delete id="imp_delete_IMP_SRF_Inventory" parameterClass="cargo.cms.imprt.bo.CDIFSearchBO" >
		DELETE IMP_SRF_AWB_INVENTORY  WHERE SEQ_NO = #oldseqNo#
	</delete>
	
	<delete id="deleteHawbRecord" parameterClass="cargo.cms.imprt.bo.CDIFSearchBO" >
		DELETE HAWB_INVENTORY  WHERE SEQ_NO = #oldseqNo#
	</delete>
	
	<select id="checkHawbExists" parameterClass="cargo.cms.imprt.bo.CDIFSearchBO"  resultClass="java.lang.String" >
 		select count(1) from hawb_inventory where HAWB_NO = #hawbInvNo# and seq_no = #seqNo#
	</select>

	<update id="Imp_UpdateImpSrfAwbInventoryAfterCDIF" parameterClass="cargo.cms.imprt.bo.CDIFSearchBO" >
		update IMP_SRF_AWB_INVENTORY set
		LOCN_PCS = LOCN_PCS - to_number(#cdifPcs#,'99999'),
		LOCN_WT = LOCN_WT - to_number(#cdifWt#,'999999999.99'),
		LM_USER_ID = #lmUserId#, 
		LM_DATE = SYSDATE
		WHERE 
		SEQ_NO = #oldseqNo# AND SRF_NO = #srfNo#
	</update>
	
	<!--
	
	<update id="Imp_UpdateImpSrfAwbInvWhenZero" parameterClass="cargo.cms.imprt.bo.CDIFSearchBO" >
		update IMP_SRF_AWB_INVENTORY set
		LOCN_PCS = LOCN_PCS - to_number(#strgPcDisp#,'99999'),
		LOCN_WT = LOCN_WT - to_number(#strgWtDisp#,'999999999.99'),
		WHERE 
		SEQ_NO = #oldseqNo#
	</update>
	
	-->
	
	<select id="getHawbInvenDtls"  parameterClass="cargo.cms.imprt.bo.CDIFSearchBO"  resultClass="cargo.cms.imprt.bo.CDIFSearchBO">
		select STRG_PCS hawbStrogPcs, STRG_WT hawbStrogWt, HAWB_NO hawbInvNo from HAWB_INVENTORY where SEQ_NO = #oldseqNo#
	</select>
	 
	<select id="imp_maintainCdif_query"  parameterClass="cargo.cms.imprt.bo.CDIFBO"  resultClass="cargo.cms.imprt.bo.CDIFSearchBO">
		SELECT
			A.AWB_NO awbNo,
			SUBSTR(A.AWB_NO,1,3)  awbNoPrefix , 
			SUBSTR(A.AWB_NO,4)  awbNoSuffix , 
			SUBSTR(A.AWB_NO,1,3)||'-'||SUBSTR(A.AWB_NO,4) as awbNoDisp ,
			TO_CHAR(A.AWB_DATE, 'DDMONYY') awbDate,
			A.SRF_NO srfNo,
			SUBSTR(A.SRF_NO,1,8)  srfNoPrefix , 
			SUBSTR(A.SRF_NO,1,8) as srfNoDisp , 
			A.CDIF_NO cdifNo,
			SUBSTR(A.CDIF_NO,1,8)  cdifNoPrefix , 
			SUBSTR(A.CDIF_NO,9)  cdifNoSuffix , 
			SUBSTR(A.CDIF_NO,1,8)||'-'||SUBSTR(A.CDIF_NO,9) as cdifNoDisp , 
			TO_CHAR(B.FLT_DATE,'DDMONYY') fltDate, 
			B.FLT_KEY fltNoKey, 
			C.ACT_TIME ata,
			PKG_COMMON.get_flt_ata(C.FLT_KEY, C.SCH_DATE, 'A')  as ataTime
		FROM IMP_CDIF A , IMP_SRF_FLT B , FLT_OPR C
		WHERE 
			A.AWB_NO = B.AWB_NO AND
			A.AWB_DATE = B.AWB_DATE  AND
			B.FLT_KEY = C.FLT_KEY   AND
			B.FLT_DATE = C.SCH_DATE  and
			c.flt_type = 'A' and B.SRF_NO = A.SRF_NO
			<isNotEmpty property="cdifNo">
				AND A.CDIF_NO	 = #cdifNo# 		
			</isNotEmpty>	
			<isNotEmpty property="srfNo">		   
				AND A.SRF_NO   = #srfNo#
			</isNotEmpty>	
	</select>
	<select id="imp_maintainCdif_CheckSRFDeliveryStarted"  parameterClass="java.lang.String"  resultClass="java.lang.Integer">	
		select count(1) from imp_srf_awb_inventory WHERE dlv_date is not null and SRF_NO = #srfNo#
	</select>	
	<select id="imp_maintainCdif_CheckConsole" parameterClass="java.lang.String" resultClass="java.lang.String">
		select b.CONSOLE_IND from IMP_SRF a , IMP_CAR_AWB b 
		where a.AWB_NO = b.AWB_NO and 
		a.AWB_DATE = b.AWB_DATE and 
		a.SRF_NO = #srfNo#  
	</select>
	<select id="imp_Inventory_list"  parameterClass="cargo.cms.imprt.bo.CDIFBO"  resultClass="cargo.cms.imprt.bo.CDIFSearchBO">
		SELECT	
			STRG_RMK remarkDisp,	
			B.LOC_CODE whLocnDisp, 
			B.LOCN_PCS strgPcDisp, 
			B.LOCN_WT strgWtDisp,
			B.LOCN_PCS dispStrgPcs, 
			B.LOCN_WT dispStrgWt,
			B.LOCN_PCS strgLocPcs, 
			B.LOCN_WT strgLocWt,
			B.CARR_CODE carrCode,
			B.LSP_NO lspNoDisp, 
			B.ULD_KEY uldNoDisp,  
			B.BULK_WT bulkWtDisp, 
			B.BUP_WT bupWtDisp,
			B.DAM_IND damInd, 
			B.PPK_IND ppkInd,
			B.STRG_DATE strgDate,
			B.CC_CODE ccCode,
			TO_CHAR(B.FLT_DATE,'DDMONYY') fltDate, 
			B.FLT_KEY fltNoKey ,
			B.FLT_TYPE fltType ,
			B.CDIF_NO issCdifNo,
			B.LM_USER_ID lmUserId,
			B.CR_USER_ID crUserId,
     		B.seq_no inventorySeqNo,
    		H.SEQ_NO as hawbSeqNO,
      		H.hawbPcs as totHawbPcs,
    		H.hawbWt as totHawbWt
			FROM IMP_SRF A, AWB_INVENTORY B
      		left join (select SEQ_NO , sum(STRG_PCS) hawbPcs, sum(STRG_WT) hawbWt from HAWB_INVENTORY group by SEQ_NO) H on H.SEQ_NO = B.SEQ_NO
			WHERE A.SRF_NO = B.SRF_NO AND
					  A.AWB_NO   = #awbNo# AND
					  TO_CHAR(A.AWB_DATE, 'DDMONYY') = #awbDate# AND 
					  A.SRF_NO   = #srfNo#
					  AND B.DLV_YN = 'N'
	</select>
	
	<select id="imp_checkHawb"  parameterClass="map" resultClass="java.lang.Integer">
	<![CDATA[
	SELECT count(1) FROM MAST_HAWB 
	WHERE HAWB_NO = #hawbNo# AND AWB_NO = #awbNo# 
	AND AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
	]]>
	</select>

	<select id="imp_maintainCdif_viewHAWB"  parameterClass="cargo.cms.imprt.bo.CDIFSearchBO"  resultClass="cargo.cms.imprt.bo.CDIFSearchBO">
		select 
		A.hawb_no hawbNoDisp,
		A.STRG_PCS strgPcDisp,
		A.STRG_WT strgWtDisp,
		SUBSTR(B.AWB_NO,1,3)||'-'||SUBSTR(B.AWB_NO,4) as awbNoDisp ,
		B.LOC_CODE whLocnDisp,
		B.LSP_NO lspNoDisp, 
		B.ULD_KEY uldNoDisp
		from hawb_inventory A left join AWB_INVENTORY B on A.seq_no = B.seq_no 
		where A.seq_no = #inventorySeqNo#
	</select>
	
	<select id="imp_maintainCdif_ttlHAWBPcWt"  parameterClass="cargo.cms.imprt.bo.CDIFBO"  resultClass="cargo.cms.imprt.bo.CDIFBO">
		select 
		sum(A.STRG_PCS) locPcs,
		sum(A.STRG_WT) locWt
		from hawb_inventory A left join AWB_INVENTORY B on A.seq_no = B.seq_no 
		where A.hawb_no = #hawbNo# 
		<iterate prepend="AND" property="arlLocCode"
		open="(" close=")" conjunction="OR" >
			B.LOC_CODE = $arlLocCode[]$
		</iterate>	
		<iterate prepend="AND" property="arlSeqNo"
		open="(" close=")" conjunction="OR" >
			A.seq_no =  $arlSeqNo[]$
		</iterate>	
	</select>
	
	<select id="imp_maintainCdif_HAWBPcWt"  parameterClass="map"  resultClass="cargo.cms.imprt.bo.CDIFBO">
		SELECT SUM(A.STRG_PCS) locPcs,  SUM(A.STRG_WT) locWt FROM hawb_inventory A
			LEFT JOIN AWB_INVENTORY B ON A.seq_no     = B.seq_no
			WHERE A.hawb_no = #HAWB#
			and B.AWB_NO = #AWB# AND B.AWB_DATE = TO_DATE(#AWB_DATE#,'DDMONYY') and B.DLV_YN = 'N'
	</select>
	
	<insert id="imp_issueCdif_IMP_CDIF" parameterClass="cargo.cms.imprt.bo.CDIFBO" >
		<![CDATA[
		INSERT INTO IMP_CDIF (
			CDIF_NO, 
			SRF_NO, 
			AWB_NO, 
			AWB_DATE, 
			CDIF_DATE,			 
			UTL_RMK, 
			UTL_EMAIL1, 
			UTL_EMAIL2,
			UTL_EMAIL3, 
			TR_STATUS, 			
			CR_USER_ID,
			CR_DATE, 
			LM_USER_ID, 
			LM_DATE,CDIF_PCS, CDIF_WT,FOLLOW_ON_TRUCK, TR_TYPE) 
		VALUES (#cdifNo#,
		   #srfNo#,	 
		   #awbNo#,
		   TO_DATE(#awbDate#, 'DDMONYY'), 
		   SYSDATE ,		 
		   #utlRemark#,
		   #emailAddress1#,
		   #emailAddress2#,
		   #emailAddress3#,
		   'A',
		   #crUserId#,
		   SYSDATE ,
		   #crUserId# ,
		   SYSDATE ,#cdifPcs#,#cdifWt#,#truckNo#,'MCDIF')
		   ]]>		
	</insert>

	<insert id="imp_issueCdif_IMP_CDIF_HAWB" parameterClass="cargo.cms.imprt.bo.CDIFBO" >
		<![CDATA[
		INSERT INTO IMP_CDIF_HAWB (   
			CDIF_NO, 
			DOC_LINE_NO, 
			AWB_NO,    
			AWB_DATE, 
			HAWB_NO, 
			CDIF_UTL_PCS,   
			CDIF_UTL_WT, 
			CDIF_PS_PCS, 
			CDIF_PS_WT,    
			CDIF_DT_PCS, 
			CDIF_DT_WT, 
			CDIF_FOLLOW_ON_PCS,
			CDIF_FOLLOW_ON_WT,
			TR_TYPE,    
			TR_STATUS, 
			RMK,
			CR_USER_ID, 
			CR_DATE,    
			LM_USER_ID, 
			LM_DATE) 
		VALUES (  #cdifNo#, 
			   	  #docLineNo#,
				  #awbNo# ,
 			      TO_DATE(#awbDate#, 'DDMONYY'), 
				  #hawbNo# ,
				  #unlocPc# ,
				  #unlocWt#,
				  #psPc#,
				  #psWt#,
				  #detainPc# , 
				  #detainWt#,
				  #followonPc# , 
				  #followonWt#,
				  'CD',	  
		          'A',	
			      #cdifRemark#,			  
				  #crUserId#, 
				  SYSDATE,
				  #crUserId#,
				  SYSDATE )
			]]>		
	</insert>

	<insert id="imp_issueCdif_IMP_CDIF_UTL_LOCN" parameterClass="cargo.cms.imprt.bo.CDIFSearchBO" >
		<![CDATA[
			INSERT INTO IMP_CDIF_UTL_LOCN (   
				CDIF_NO, 
				CDIF_LOCN, 
				CDIF_UL_PCS, 
				CDIF_UL_WT,			
				TR_TYPE, 	
				TR_STATUS, 
				CR_USER_ID,
				CR_DATE, 
				LM_USER_ID, 
				LM_DATE,
				LSP_NO, 
				ULD_KEY) 
			VALUES ( #cdifNo#,
					 #whLocnDisp#,
					 #utlPc#,
					 #utlWt# , 					  					 
					 'CD',
			         'A',
					 #crUserId#, 
					 SYSDATE,
					 #crUserId#,
					 SYSDATE,
					#lspNoDisp#,
					#uldNoDisp# )
			]]>		
	</insert>
			  
	<insert id="imp_issueCdif_AWB_RELOC_HD" parameterClass="cargo.cms.imprt.bo.CDIFBO" >
		<![CDATA[	   
			INSERT INTO AWB_RELOC_HD (   
				TR_NO, 
				CR_USER_ID, 
				CR_DATE,   
			  	LM_USER_ID, 
				LM_DATE, 
				AWB_NO,   
				AWB_DATE, 				
				RELOC_TYPE)
			VALUES (#trNo# ,
					#crUserId#, 
					SYSDATE ,
					#crUserId#, 
					SYSDATE ,
					#awbNo# ,
					TO_DATE(#awbDate#, 'DDMONYY'), 					
					'CD' )
		]]>		
	</insert>

	<insert id="imp_issueCdif_AWB_RELOC_ISS" parameterClass="cargo.cms.imprt.bo.CDIFSearchBO" >
		<![CDATA[	
			INSERT INTO AWB_RELOC_ISS (   
				TR_NO, 
				DOC_LINE_NO,				    
				LOC_CODE,  
				LOCN_PCS, 
				LOCN_WT,    
				LSP_NO,    
				ULD_KEY,   
				PPK_IND,  	
				FLT_DATE,  
				FLT_TYPE,  
				FLT_KEY,   
				SRF_NO,    
				CR_USER_ID, 
				CR_DATE,    
				LM_USER_ID, 
				LM_DATE, 
				DAM_IND,    
				BULK_WT, 
				BUP_WT,
				CDIF_NO) 			
				VALUES (#trNo# ,#docLineNo#,#whLocnDisp#,#strgPc# , #strgWt#,#lspNoDisp# ,
				#uldNoDisp#,#ppkInd# ,To_DATE(#fltDate#,'DDMONYY'),'I',#fltNoKey# , #srfNo# , #crUserId#   ,SYSDATE ,#crUserId#  , 
				SYSDATE, #damInd#,NVL(#bulkWt#,0),NVL(#bupWt#,0),#issCdifNo#)
			]]>		
	</insert>				


	<insert id="imp_issueCdif_AWB_RELOC_RECV" parameterClass="cargo.cms.imprt.bo.CDIFSearchBO" >
		<![CDATA[
			INSERT INTO AWB_RELOC_RECV (   
				TR_NO, 
				DOC_LINE_NO, 
				LOC_CODE, 
				LOCN_PCS, 
				LOCN_WT,    
				LSP_NO, 
				ULD_KEY,
				PPK_IND,    
				FLT_DATE,
				FLT_TYPE,  
				FLT_KEY, 	
				CDIF_NO, 
				CR_USER_ID, 
				CR_DATE,   
				LM_USER_ID, 
				LM_DATE, 
				DAM_IND,   
				BULK_WT, 
				BUP_WT,
				RMK
				) 
			VALUES (#trNo# ,
			#docLineNo#,
			#whLocn#,
			#strgPc#,
			#strgWt#,
			#lspNo# ,
			#uldNo# ,
			#ppkInd# ,#fltDate#,
			'I',#fltNoKey# , #cdifNo#,#crUserId#   ,SYSDATE ,#crUserId#  , SYSDATE, #damInd#,
			NVL(#bulkWt#,0),NVL(#bupWt#,0),#remark#)
			]]>		
	</insert>
	<insert id="imp_issueCdif_AWB_Inventory" parameterClass="cargo.cms.imprt.bo.CDIFBO" >
		<![CDATA[
	INSERT INTO AWB_INVENTORY (   
				SEQ_NO, 				 
				AWB_NO,   
				AWB_DATE, 
				SRF_NO, 
        		CDIF_NO,
       			LOCN_PCS,
       			LOCN_WT,
        		CR_USER_ID, 
				CR_DATE,   
        		LM_USER_ID, 
				LM_DATE
				)
			VALUES ( AWB_INV_SEQ.NEXTVAL,
          			#awbNo# ,
		  			TO_DATE(#awbDate#, 'DDMONYY'), 
          			#srfNo#, 
          			#cdifNo#,
          			#cdifPcs#,
          			#cdifWt#,
					#crUserId#, 
					SYSDATE ,
					#crUserId#, 
					SYSDATE )
					]]>	
		</insert>
	<update id="imp_issueCdif_IMP_SRF_AWB_Inventory" parameterClass="cargo.cms.imprt.bo.CDIFBO">
		update imp_srf_awb_inventory
			set CDIF_NO = #cdifNo#, 
				cdif_pc=#cdifPcs#, 
				cdif_wt=#cdifWt#
			where srf_no=#srfNo#   
	</update>	
		<select id="imp_maintainCdif_updateDataHd"  parameterClass="cargo.cms.imprt.bo.CDIFBO"  resultClass="cargo.cms.imprt.bo.CDIFBO">
		select 
			AWB_NO awbNo,
			SUBSTR(AWB_NO,1,3)  awbNoPrefix , 
			SUBSTR(AWB_NO,4)  awbNoSuffix , 
			SUBSTR(AWB_NO,1,3)||'-'||SUBSTR(AWB_NO,4) as awbNoDisp ,
			TO_CHAR(AWB_DATE, 'DDMONYY') awbDate, 
			SRF_NO srfNo,
			SUBSTR(SRF_NO,1,8)  srfNoPrefix , 
			SUBSTR(SRF_NO,1,8) as srfNoDisp , 
			CDIF_NO cdifNo,
			SUBSTR(CDIF_NO,1,8)  cdifNoPrefix , 
			SUBSTR(CDIF_NO,9)  cdifNoSuffix , 
			SUBSTR(CDIF_NO,1,8)||'-'||SUBSTR(CDIF_NO,9) as cdifNoDisp,
			TO_CHAR(LM_DATE, 'DDMONYY HH24:MI:SS') lmDate
		from IMP_CDIF  
		where 
		AWB_NO = #awbNo# and 
		CDIF_NO = #cdifNo# and 
		SRF_NO = #srfNo#  
	</select>
	
	<select id="imp_maintainCdif_updateDataHawb"  parameterClass="cargo.cms.imprt.bo.CDIFBO"  resultClass="cargo.cms.imprt.bo.CDIFBO">
		select 
			AWB_NO awbNo,
			SUBSTR(AWB_NO,1,3)  awbNoPrefix , 
			SUBSTR(AWB_NO,4)  awbNoSuffix , 
			SUBSTR(AWB_NO,1,3)||'-'||SUBSTR(AWB_NO,4) as awbNoDisp ,
			TO_CHAR(AWB_DATE, 'DDMONYY') awbDate, 	
			CDIF_NO cdifNo,	
			HAWB_NO hawbNo,
			SUBSTR(CDIF_NO,1,8)  cdifNoPrefix , 
			SUBSTR(CDIF_NO,9)  cdifNoSuffix , 
			SUBSTR(CDIF_NO,1,8)||'-'||SUBSTR(CDIF_NO,9) as cdifNoDisp,
			DOC_LINE_NO docLineNo, 
			CDIF_DT_PCS detainPc,
			CDIF_DT_WT detainWt,
			CDIF_PS_PCS psPc,
			CDIF_PS_WT psWt,
			CDIF_UTL_PCS unlocPc,
			CDIF_UTL_WT unlocWt,
			TO_CHAR(CDIF_FOLLOW_ON_PCS) followonPc,
			TO_CHAR(CDIF_FOLLOW_ON_Wt) followonWt,
			RMK cdifRemark,
			TO_CHAR(LM_DATE, 'DDMONYY HH24:MI:SS') lmDate 
		from IMP_CDIF_HAWB  
		where 
		AWB_NO = #awbNo# and 
		CDIF_NO = #cdifNo#
	</select>
	
	<select id="getCdifHawbList"  parameterClass="java.lang.String"  resultClass="cargo.cms.imprt.bo.CDIFBO">
		SELECT HAWB_NO hawbNo,
		  hawb.CDIF_NO cdifNo,
			TO_CHAR(CDIF_DT_PCS) cdifPcs,
			TO_CHAR(CDIF_DT_WT) cdifWt,
			TO_CHAR(CDIF_DT_PCS)detainPc,
			TO_CHAR( CDIF_DT_WT )detainWt,
			'' psPc,
			'' psWt,
			'' unlocPc,
			'' unlocWt,
			'' followonPc,
			'' followonWt,
			rmk cdifRemark
			FROM IMP_CDIF_HAWB hawb
			JOIN imp_cdif cdif ON hawb.cdif_no = cdif.cdif_no
			WHERE HAWB_NO is not null and hawb.CDIF_NO = #cdifNo# and nvl(CDIF_DT_PCS,0) &gt; 0
			UNION
			SELECT HAWB_NO hawbNo,
			hawb.CDIF_NO cdifNo,
			TO_CHAR(CDIF_PS_PCS) cdifPcs,
			TO_CHAR(CDIF_PS_WT) cdifWt,
			'' detainPc,
			'' detainWt,
			TO_CHAR(CDIF_PS_PCS)detainPc,
			TO_CHAR( CDIF_PS_WT )detainWt,
			'' unlocPc,
			'' unlocWt,
			'' followonPc,
			'' followonWt,
			rmk cdifRemark
			FROM IMP_CDIF_HAWB hawb
			JOIN imp_cdif cdif ON hawb.cdif_no = cdif.cdif_no
			WHERE HAWB_NO is not null and hawb.CDIF_NO = #cdifNo# and nvl(CDIF_PS_PCS,0) &gt; 0
			UNION
			SELECT HAWB_NO hawbNo,
			hawb.CDIF_NO cdifNo,
			TO_CHAR(CDIF_UTL_PCS) cdifPcs,
			TO_CHAR(CDIF_UTL_WT) cdifWt,
			'' detainPc,
			'' detainWt,
			'' psPc,
			'' psWt,
			TO_CHAR(CDIF_UTL_PCS)unlocPc,
			TO_CHAR( CDIF_UTL_WT )unlocWt,
			'' followonPc,
			'' followonWt,
			rmk cdifRemark
			FROM IMP_CDIF_HAWB hawb
			JOIN imp_cdif cdif ON hawb.cdif_no = cdif.cdif_no
			WHERE HAWB_NO is not null and hawb.CDIF_NO = #cdifNo# and nvl(CDIF_UTL_PCS,0) &gt; 0
			UNION
			SELECT HAWB_NO hawbNo,
			hawb.CDIF_NO cdifNo,
			TO_CHAR(CDIF_FOLLOW_ON_PCS) cdifPcs,
			TO_CHAR(CDIF_FOLLOW_ON_Wt) cdifWt,
			'' detainPc,
			'' detainWt,
			'' psPc,
			'' psWt,
			'' unlocPc,
			'' unlocWt,
			TO_CHAR( CDIF_FOLLOW_ON_PCS) followonPc,
			TO_CHAR( CDIF_FOLLOW_ON_PCS) followonWt,
		  rmk cdifRemark
		FROM IMP_CDIF_HAWB hawb
			JOIN imp_cdif cdif ON hawb.cdif_no = cdif.cdif_no
			WHERE HAWB_NO is not null and hawb.CDIF_NO = #cdifNo# and nvl(CDIF_FOLLOW_ON_PCS,0) &gt; 0
	</select>
	
	<select id="getHawbLocationList"  parameterClass="cargo.cms.imprt.bo.CDIFBO"  resultClass="cargo.cms.imprt.bo.CDIFSearchBO">
		    SELECT loc_code as whLocnDisp,
			  NVL(lsp_no,uld_key) as lspNoDisp   
			FROM awb_inventory inv
			join hawb_inventory hinv on hinv.seq_no = inv.seq_no
			WHERE inv.cdif_no = #cdifNo#
			and hinv.hawb_no = #hawbNo#
	</select>
	
		<select id="imp_maintainCdif_info"  parameterClass="java.lang.String"  resultClass="cargo.cms.imprt.bo.CDIFBO">
		select 
			hawb.AWB_NO awbNo,
			SUBSTR(hawb.AWB_NO,1,3)  awbNoPrefix , 
			SUBSTR(hawb.AWB_NO,4)  awbNoSuffix , 
			SUBSTR(hawb.AWB_NO,1,3)||'-'||SUBSTR(hawb.AWB_NO,4) as awbNoDisp ,
			TO_CHAR(hawb.AWB_DATE, 'DDMONYY') awbDate, 	
			hawb.CDIF_NO cdifNo,	
			HAWB_NO hawbNo,
			SUBSTR(hawb.CDIF_NO,1,8)  cdifNoPrefix , 
			SUBSTR(hawb.CDIF_NO,9)  cdifNoSuffix , 
			SUBSTR(hawb.CDIF_NO,1,8)||'-'||SUBSTR(hawb.CDIF_NO,9) as cdifNoDisp,
			DOC_LINE_NO docLineNo, 
			CDIF_DT_PCS detainPc,
			CDIF_DT_WT detainWt,
			CDIF_PS_PCS psPc,
			CDIF_PS_WT psWt,
			CDIF_UTL_PCS unlocPc,
			CDIF_UTL_WT unlocWt,
			TO_CHAR(CDIF_FOLLOW_ON_PCS) followonPc,
			TO_CHAR(CDIF_FOLLOW_ON_Wt) followonWt,
			RMK cdifRemark,
			TO_CHAR(hawb.LM_DATE, 'DDMONYY HH24:MI:SS') lmDate ,
			(select flt_key from imp_srf_flt where srf_no = cdif.srf_no  and rownum = 1) as fltNoKey,
			(select to_char(flt_date,'DDMONYY') from imp_srf_flt where srf_no = cdif.srf_no  and rownum = 1) as fltDate,
      (SELECT code_desc FROM cust_company where code = (SELECT agent_id FROM imp_srf where srf_no = cdif.srf_no) and rownum = 1) as agentDesc
from IMP_CDIF_HAWB hawb 
join imp_cdif cdif  on hawb.cdif_no = cdif.cdif_no
where hawb.CDIF_NO = #cdifNo#
	</select>
	
	<update id="imp_maintainCdif_update" parameterClass="cargo.cms.imprt.bo.CDIFBO">
		update IMP_CDIF_HAWB set 
		RMK  = #cdifRemark#,
		LM_USER_ID = #crUserId# , 
		LM_DATE = SYSDATE 
		where 
		AWB_NO = #awbNo# and 
		CDIF_NO = #cdifNo# and 
		DOC_LINE_NO = #docLineNo#   
	</update>
	
	<update id="updateLspInvForMaintainCdif" parameterClass="java.lang.String">
		UPDATE LSP_INVENTORY SET EMPTY_FLG='N' WHERE LSP_NO=#lspNo#
	</update>
	<update id="updateUldInvForMaintainCdif" parameterClass="java.lang.String">
		UPDATE ULD_INVENTORY SET EMPTY_FLG='N' WHERE ULD_KEY=#uldNo#
	</update>
	<!-- End Maintain CDIF -->


<!--Queries for Assign target location starts   -->

<select id="getuldinfolist" parameterClass="map"
		resultClass="cargo.cms.imprt.bo.AssignTargetLocBO">
		SELECT 
		A.AWB_NO AS awbNo,
		substr(A.AWB_NO,1,3)||'-'||substr(A.AWB_NO,4,8) awbNoDisp,
		(SELECT AWB_TYPE FROM AWB WHERE AWB_NO = A.AWB_NO AND awb_date = A.awb_date) AS type,
		A.LOCN_PCS AS pc,
		A.LOCN_WT AS wt,
		A.FLT_KEY AS fltNo,
		TO_CHAR(A.FLT_DATE,'DDMONYY') AS fltDate, 
		TO_CHAR(L.LM_DATE, 'DDMONYY HH24:MI') as lmDate,
    	L.loc_code AS locn,
    	L.TARGET as target,
    	(select lastOrder FROM
		 (select target || '(' || NVL(STATUS,'STARTED') || ')' as lastOrder from rtrv_move_order where uld = #uldNo# order by cr_date desc) where rownum = 1) as lastOrder
		FROM ULD_INVENTORY L
    	LEFT JOIN AWB_INVENTORY A ON A.ULD_KEY = L.ULD_KEY
		WHERE L.ULD_KEY = #uldNo#		
</select>
	

<select id="imp_xom_getUldInventory_Count" parameterClass="map" resultClass="java.lang.Integer">
		SELECT NVL(COUNT(1),0) FROM ULD_INVENTORY WHERE ULD_KEY = #uldNo#
</select>	

<select id="getlspinfolist" parameterClass="map"
		resultClass="cargo.cms.imprt.bo.AssignTargetLocBO">
		SELECT 
		A.AWB_NO AS awbNo,
		substr(A.AWB_NO,1,3)||'-'||substr(A.AWB_NO,4,8) awbNoDisp,
		to_char(A.AWB_DATE,'DDMONYY') awbDate,		
		(SELECT AWB_TYPE FROM AWB WHERE AWB_NO = A.AWB_NO AND awb_date = A.awb_date) AS type,
		A.LOCN_PCS AS pc,
		A.LOCN_WT AS wt,
		A.FLT_KEY AS fltNo,
		TO_CHAR(A.FLT_DATE,'DDMONYY') AS fltDate, 
		TO_CHAR(L.LM_DATE, 'DDMONYY HH24:MI') as lmDate,
    	L.loc_code AS locn,
    	L.TARGET as target
		FROM LSP_INVENTORY L
   		LEFT JOIN AWB_INVENTORY A ON A.LSP_NO = L.LSP_NO
		WHERE L.LSP_NO = #lspNo#			
	</select>
	
<select id="imp_xom_getLspInventory_Count" parameterClass="map" resultClass="java.lang.Integer">
		SELECT NVL(COUNT(1),0) FROM LSP_INVENTORY WHERE LSP_NO = #lspNo#
</select>
 
<update id="updatelsplocation" parameterClass="map">
		UPDATE LSP_INVENTORY
		SET TARGET = #newtarget#,
		LM_DATE = SYSDATE,
		LM_USER_ID = #lmUserId#
		WHERE LSP_NO = #lspNo# AND
		TO_CHAR(LM_DATE, 'DDMONYY HH24:MI') = #lmDate#
</update>
<update id="updateuldlocation" parameterClass="map">
		 UPDATE ULD_INVENTORY
		SET TARGET = #newtarget#,
		LM_DATE = SYSDATE,
		LM_USER_ID = #lmUserId#
		WHERE ULD_KEY = #uldNo# AND
		TO_CHAR(LM_DATE, 'DDMONYY HH24:MI') = #lmDate#
</update>
<select id="imp_brk_validate_storage_in_mhs" parameterClass="map" resultClass="java.lang.Integer">
		select NVL(COUNT(1),0) from mast_wh_group where wh_type='MHS' and wh_group=(select wh_group from mast_wh_loc
    where code=#locn# )
</select>

<select id="imp_brk_validate_storage_in_manualstorage" parameterClass="map" resultClass="java.lang.Integer">
		select nvl(count(1),0) from mast_wh_group where wh_type='FG' and wh_group =(select wh_group from mast_wh_loc 
		where CODE =#locn#)
</select>

<select id="imp_brk_validate_oldTargetForArea" parameterClass="map" resultClass="java.lang.Integer">
		SELECT NVL(COUNT(1),0) FROM mast_wh_area where WH_AREA = #oldTarget#
</select>

<select id="imp_brk_getnewtargetarea" parameterClass="map" resultClass="java.lang.String">
		select wh_area from mast_wh_group where wh_group=(select WH_GROUP from mast_wh_loc where code=#newTarget#)
</select>
 
<update id="updatejoborder" parameterClass="map">
		 update rtrv_move_order 
		 set status = #status# ,
		 LM_DATE = SYSDATE,
		 LM_USER_ID = #lmUserId#
		 where uld = #uldNo# or lsp = #lspNo#
</update>

<update id="updatelsptarget" parameterClass="map">
		 update lsp_inventory  
		 set target='',
		 LM_DATE = SYSDATE,
		 LM_USER_ID = #lmUserId#
		 where lsp_no=#lspNo#
		 
</update>

<update id="updateuldtarget" parameterClass="map">
		 update uld_inventory  
		 set target='',
		 LM_DATE = SYSDATE,
		 LM_USER_ID = #lmUserId#
		 where uld_key=#uldNo#
		 
</update>

<select id="getlockstatusforlsp" parameterClass="map" resultClass="java.lang.Integer">
		select NVL(Count(1),'0') from lsp_inventory where lsp_no=#lspNo# and  (nvl(locked,'N')='Y' or NVL(lock_rqs,'N') = 'Y')
</select>

<select id="getlockstatusforuld" parameterClass="map" resultClass="java.lang.String">
		select decode(NVL(locked,'N'),'Y',locked,NVL(lock_rqs,'N')) from uld_inventory where uld_key=#uldNo# 
</select>


<select id="checkMovOrderExists1" parameterClass="map" resultClass="java.lang.Integer">
<![CDATA[
	select Count(1) from rtrv_move_order where (LSP=#lspNo# or ULD=#uldNo#) and AWB_NO = #awbNo#	
]]>	
</select>

<select id="checkMovOrderExists" parameterClass="map" resultClass="java.lang.Integer">
<![CDATA[
	select Count(1) from rtrv_move_order where (LSP=#lspNo# or ULD=#uldNo#) and AWB_NO = #awbNo#
	and status <> 'COMPLETED'
]]>	
</select>


<select id="checkJobOrderExists1" parameterClass="map" resultClass="java.lang.Integer">
<![CDATA[
	select Count(1) from rtrv_move_order where (LSP=#LSP# or ULD=#ULD#) and AWB_NO = #AWB_NO#	
]]>	
</select>

<select id="checkJobOrderExists" parameterClass="map" resultClass="java.lang.Integer">
<![CDATA[
	select Count(1) from rtrv_move_order where (LSP=#LSP# or ULD=#ULD#) and AWB_NO = #AWB_NO#
	and (STATUS IS NULL or status ='STARTED')
]]>	
</select>


<update id="update_order_byType" parameterClass="map">	
	<![CDATA[
		UPDATE rtrv_move_order
		SET status=#status#,
		LM_USER_ID=#lmUserId#,
		LM_DATE=sysdate
		where (LSP=#lspNo# or ULD=#uldNo#) and AWB_NO = #awbNo#	
		AND (status IS NULL OR(status <> 'E' AND status <>'CANCELLED'))
	]]>	
</update>

<insert id="create_order_byType" parameterClass="map">
	INSERT INTO rtrv_move_order(FUNC,REF_NO,AWB_NO,CURR_LOCN,LSP,ULD,PC,WT,TARGET,STATUS,
                            CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,TYPE,INV_TYPE) VALUES
                            (#func#,#refNo#,#awbNo#,#currLocn#,#lspNo#,#uldNo#,#pcs#,#wt#,#target#,#status#, 
                            #crUserId#,sysdate,#lmUserId#, sysdate,#orderType#,#invType#)
 </insert>


 <!--Queries for Assign target location ends   -->	
	<!-- Enquire SRF by RANJITH  STARTS -->
<select id="imp_EnquireSRF_getlist"  parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO"  resultClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
		SELECT
			To_Char(SRF_DATE,'DDMONYY HH24:MI')  srfDate,
			A.SRF_NO srfNo,
			A.SRF_NO  srfNoPrefix , 
			SUBSTR(A.SRF_NO,1,8) as srfNoDisp ,
			<!-- pkg_common.get_srf_cc(A.SRF_NO) as strCC, -->
			A.AWB_CC_CODE as strCC,
			A.AWB_NO awbNo,
			SUBSTR(A.AWB_NO,1,3)  awbNoPrefix , 
			SUBSTR(A.AWB_NO,4)  awbNoSuffix , 
			SUBSTR(A.AWB_NO,1,3)||'-'||SUBSTR(A.AWB_NO,4) as awbNoDisp ,
			TO_CHAR(A.AWB_DATE, 'DDMONYY') awbDate,
			SRF_PCS srfPc , 
			SRF_WT srfWt,
			(select to_char(min(DLV_DATE),'DDMONYY HH24:MI') from imp_srf_awb_inventory where SRF_NO = A.SRF_NO  group by srf_no) firstCargoArrDate, 
			(select B.TRUCK_DOCK from IMp_truck_srf CC join TRUCK_TRIP b on CC.TRIP_ID= b.TRIP_ID where CC.srf_No =A.SRF_NO and b.CLOSED='N' and rownum=1) tdDoc,
			
			To_Char(SRF_EXPY_DATE,'DDMONYY HH24:MI') srfExpiryDate,
			To_Char(VERIFIED_TIME,'DDMONYY HH24:MI') verTime,
			To_Char(OFF_ARR_DATE,'DDMONYY HH24:MI')	cargoArrDate,
			To_Char(SRF_PRNT_DATE,'DDMONYY HH24:MI') srfPrintDate,
			NVL(ESRF_YN,'N') as eSrf,
			CASE WHEN NVL(ESRF_YN,'N') = 'Y'  then To_Char(VERIFIED_TIME,'DDMONYY HH24:MI') else '' end cargoVerification,
			CASE WHEN NVL(ESRF_YN,'N') = 'Y'  then To_Char(CARGO_COLLECTED,'DDMONYY HH24:MI') else '' end  cargoCollect,
			CASE WHEN NVL(ESRF_YN,'N') = 'Y'  then To_Char(CARGO_RELEASE,'DDMONYY HH24:MI') else '' end  cargoReleaseOK,
			HKID_COLLECT_PERSON hkidOfCollectPerson,
			COLLECT_PERSON_RECVD collectPersonReceive,
			 HOLD_SRF_IND AS holdSrf,
			<!-- (select CC_CODE from IMP_SRF_FLT isf   where isf.srf_no = A.SRF_NO  and isf.awb_no = A.AWB_NO and to_char(isf.AWB_DATE,'DDMONYY')= to_char(A.AWB_DATE,'DDMONYY')) ccCode,-->
			<!-- CASE is added to resolve the bug 'Delivery Completed should show value if all the locations for the SRF are delivered' -->
			case when (select count(1) from imp_srf_awb_inventory where   decode((NVL(dlv_pcs, 0)+NVL(cdif_pc, 0)),LOCN_PCS,'Y','N') = 'N' and srf_no=A.SRF_NO) > 0 then ''
      		else (select to_char(max(DLV_DATE),'DDMONYY HH24:MI') from imp_srf_awb_inventory where DLV_DATE is not null and srf_no = A.SRF_NO group by srf_no )end deliComplDate,
      		decode((To_Char(POST_DATE,'DDMONYY')||' '|| SUBSTR(TRIM(TO_CHAR(NVL(POST_TIME,0),'0000')),0,2)|| ':'|| SUBSTR(TRIM(TO_CHAR(NVL(POST_TIME,0),'0000')),3,4)),' 00:00','',(To_Char(POST_DATE,'DDMONYY')||' '|| SUBSTR(TRIM(TO_CHAR(NVL(POST_TIME,0),'0000')),0,2)|| ':'|| SUBSTR(TRIM(TO_CHAR(NVL(POST_TIME,0),'0000')),3,4))) postDate,
			A.CR_USER_ID crUserID,
			DECODE(POST_DATE,NULL, 'N','Y') srfPostedYN,  
			case when A.STATUS = 'VOID' then 'N' else
			case when (SELECT COUNT(1) FROM BILL_CHARGE_DTL WHERE upper(status)='PENDING' and srf_no=A.SRF_NO)>0 then 'Y' else 'N' end end as chrgStatus,
				B.BYPASS_REL byPass,
			A.CONSTRAINED_ON_POST ccOnPostYN,
			statusCDIF,
			statusExit,
			statusVoid,
			(SELECT STRAGG(STRINGDELIM(LOC_CODE,',')) FROM AWB_INVENTORY WHERE AWB_NO = A.AWB_NO AND AWB_DATE = A.AWB_DATE) locn,
			(SELECT TO_CHAR(MAX(DLV_SNAP_TIME), 'DDMONYY HH24:MI') FROM IMP_SRF WHERE SRF_NO = A.SRF_NO) firstAvailableTime
		FROM (Select s.*, case when 
					(Select count(1) from Imp_CDIF where SRF_No = s.SRF_No and VOID_USER is null) > 0 then 'Y' else 'N' end statusCDIF,  
					   DECODE(POST_DATE,NULL, 'N','Y') statusExit,    
					   DECODE(VOID_DATE,NULL, 'N','Y') statusVoid from IMP_SRF s) A 
		LEFT JOIN  IMP_CAR_AWB B ON A.AWB_NO 	= B.AWB_NO AND A.AWB_DATE  = B.AWB_DATE 
		<isNotEmpty property="truckDockNo">
			LEFT JOIN (SELECT TRUCK_TRIP.TRUCK_DOCK TRUCK_DOCK, IMP_TRUCK_SRF.SRF_NO SRF_NO, TCS_DOCK_MASTER.DOCK_LEVEL  DOCK_LEVEL FROM IMP_TRUCK_SRF, TRUCK_TRIP, TCS_DOCK_MASTER WHERE 
			IMP_TRUCK_SRF.TRIP_ID = TRUCK_TRIP.TRIP_ID AND TRUCK_TRIP.CLOSED = 'N' AND TCS_DOCK_MASTER.TRUCK_DOCK = TRUCK_TRIP.TRUCK_DOCK) T ON T.SRF_NO = A.SRF_NO
		</isNotEmpty>
		WHERE 1= 1 
		<isEmpty property="srfNo">
		AND SRF_DATE BETWEEN      
			TO_DATE(TO_CHAR(#srfDateFrom#||' '||#srfTimeFromHH#||':'||#srfTimeFromMM#),'DDMONYY HH24:MI') AND      			
			TO_DATE(TO_CHAR(#srfDateTo#||' '||#srfTimeToHH#||':'||#srfTimeToMM#),'DDMONYY HH24:MI') + 1/1440
		</isEmpty>
			
		<isNotEmpty property="status">
			<isEqual property="status" compareValue="VOID">
			   	 AND statusVoid = 'Y'
			</isEqual>
			<isEqual property="status" compareValue="POSTED">
				 AND A.POST_DATE is not null
			</isEqual>
			<isEqual property="status" compareValue="NOT_EXIT">
			  AND A.SRF_EXPY_DATE &gt; sysdate 
			  AND statusVoid = 'N'  
			  AND UPPER(A.STATUS) = 'ISSUED'
			</isEqual>
			<isEqual property="status" compareValue="CDIF">
			   	 AND statusCDIF = 'Y'
			</isEqual>
			<isEqual property="status" compareValue="EXPIRED">
			   	 AND A.SRF_EXPY_DATE &lt; sysdate
				 AND UPPER(A.STATUS) = 'ISSUED'
			</isEqual>
		</isNotEmpty>
	
		<isNotEmpty property="crUserId">
			AND   A.CR_USER_ID  = UPPER(#crUserId#) 	   
		</isNotEmpty>
		<isNotEmpty property="esrfInd">
			AND   NVL(ESRF_YN,'N') = #esrfInd#	   
		</isNotEmpty>
	
		<isNotEmpty property="srfNo">
			AND A.SRF_NO like  ('%'||#srfNo#||'%')	
		</isNotEmpty>
		<isEmpty property="srfNo">
		    <isNotEmpty property="loginCarrier">
				   AND ( A.carr_code = #loginCarrier# OR  A.carr_code IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE  = #loginCarrier#))             
            	    </isNotEmpty>
                </isEmpty>				
		<isNotEmpty property="srfAgent">
			AND A.AGENT_ID = 	#srfAgent#	
		</isNotEmpty>

		<isNotEmpty property="srfHkid">
			AND A.COLL_HKID = 	#srfHkid#	
		</isNotEmpty>
		
		<isNotEmpty property="srfTD">
		<isEqual property="srfTD" compareValue="Y">
			AND (select B.TRUCK_DOCK from IMp_truck_srf CC join TRUCK_TRIP b on CC.TRIP_ID= b.TRIP_ID where CC.srf_No =A.SRF_NO and b.CLOSED = 'N' and rownum=1) is null
		</isEqual>
		</isNotEmpty>
		
		<isNotEmpty property="srfByPass">
			<isEqual property="srfByPass" compareValue="Y">
				AND B.BYPASS_REL=#srfByPass#
			</isEqual>
		</isNotEmpty>

		<isNotEmpty property="srfPostYN">
		<isEqual property="srfPostYN" compareValue="Y">
			  AND A.SRF_EXPY_DATE &gt; sysdate 
			  AND statusVoid = 'N'  
			  AND UPPER(A.STATUS) = 'ISSUED'
		</isEqual>
		</isNotEmpty>
		
		<isNotEmpty property="constrYN">
		<isEqual property="constrYN" compareValue="Y">
		<![CDATA[
		AND (select count(1) from IMP_SRF_FLT isf  join MAST_CONSTRAINT_CODE mcc  on isf.CC_CODE = mcc.CODE    where isf.srf_no = A.SRF_NO
                        and isf.awb_no = A.AWB_NO and to_char(isf.AWB_DATE,'DDMONYY')= to_char(A.AWB_DATE,'DDMONYY') and mcc.CONSTRAINT='Y')>0
                        ]]>
		</isEqual>
		</isNotEmpty>
		<isNotEmpty property="ccOnPostYN">
			<isEqual property="ccOnPostYN" compareValue="Y">
				AND A.CONSTRAINED_ON_POST='Y'
			</isEqual>
		</isNotEmpty>
		<isNotEmpty property="agentName">
				AND (B.APPNTD_AGENT=#agentName#  or (NVL((select AGENT_NAME from EXP_CAR ECAR where ECAR.AWB_NO = A.AWB_NO and ECAR.AWB_DATE = A.AWB_DATE),'**') = #agentName#))
		</isNotEmpty>
		<isNotEmpty property="prntDateFrom">
		<isNotEmpty property="prntTimeFromHH">
		<isNotEmpty property="prntTimeFromMM">
		<isNotEmpty property="prntDateTo">
		<isNotEmpty property="prntTimeToHH">
		<isNotEmpty property="prntTimeToMM">
		<![CDATA[
			AND SRF_PRNT_DATE BETWEEN      
			TO_DATE(TO_CHAR(#prntDateFrom#||' '||#prntTimeFromHH#||' '||#prntTimeFromMM#),'DDMONYY HH24:MI') AND      			
			TO_DATE(TO_CHAR(#prntDateTo#||' '||#prntTimeToHH#||' '||#prntTimeToMM#),'DDMONYY HH24:MI') + 1/1440
		]]>
		</isNotEmpty>
		</isNotEmpty>
		</isNotEmpty>
		</isNotEmpty>
		</isNotEmpty>
		</isNotEmpty>
		<isNotEmpty property="truckDockNo">
			AND T.DOCK_LEVEL = #truckDockNo#
		</isNotEmpty>
		 
		<dynamic prepend="ORDER BY ">
		        <isEmpty property="sortOrder.sortField">
             		SRF_DATE DESC
        		</isEmpty>
       			 <isNotEmpty property="sortOrder.sortField">
             		$sortOrder.sortField$
        		</isNotEmpty>
 		</dynamic>
 		
	</select>

	<select id = "getCarrCodeForSRF"  parameterClass="map"  resultClass="java.lang.String">	
		SELECT carr_code from imp_srf where srf_no = #SRF_NO#
	</select>

	<select id = "getCarrCodeForCDIF"  parameterClass="map"  resultClass="java.lang.String">	
		SELECT CARR_CODE FROM IMP_SRF WHERE SRF_NO = (select SRF_NO from imp_cdif WHERE CDIF_NO = #CDIF_NO#)
	</select>

	<select id="imp_EnquireSRF_getTotal"  parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO"  
		resultClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
		SELECT    
		sum(SRF_PCS) totalSrfPc ,     
		sum(SRF_WT) totalSrfWt
		FROM (Select s.*, case when 
					(Select count(1) from Imp_CDIF where SRF_No = s.SRF_No and VOID_USER is null) > 0 then 'Y' else 'N' end statusCDIF,  
					   DECODE(POST_DATE,NULL, 'N','Y') statusExit,    
					   DECODE(VOID_DATE,NULL, 'N','Y') statusVoid from IMP_SRF s) A, IMP_CAR_AWB B   
		WHERE A.AWB_NO 	= B.AWB_NO AND
		A.AWB_DATE  = B.AWB_DATE 
	
		<isNotEmpty property="status">
			<isEqual property="status" compareValue="VOID">
			   	 AND statusVoid = 'Y'
			</isEqual>
			<isEqual property="status" compareValue="EXIT">
			   	 AND statusExit = 'Y'
			</isEqual>
			<isEqual property="status" compareValue="NOT_EXIT">
			   	 AND statusExit = 'N' AND statusVoid = 'N'
			</isEqual>
			<isEqual property="status" compareValue="CDIF">
			   	 AND statusCDIF = 'Y'
			</isEqual>
			<isEqual property="status" compareValue="EXPIRED">
			   	 AND A.SRF_EXPY_DATE &lt; sysdate
				 AND A.STATUS = 'ISSUED'
			</isEqual>
		</isNotEmpty>
	
		<isNotEmpty property="crUserId">
			AND   UPPER(A.CR_USER_ID)  = UPPER(#crUserId#) 	   
		</isNotEmpty>
	
		<isNotEmpty property="srfNo">
			AND A.SRF_NO = 	#srfNo#	
		</isNotEmpty>
	
		<isNotEmpty property="srfDateFrom">
		<isNotEmpty property="srfTimeFromHH">
		<isNotEmpty property="srfTimeFromMM">
		<isNotEmpty property="srfDateTo">
		<isNotEmpty property="srfTimeToHH">
		<isNotEmpty property="srfTimeToMM">
		<![CDATA[
			AND SRF_DATE BETWEEN      
			TO_DATE(TO_CHAR(#srfDateFrom#||' '||#srfTimeFromHH#||' '||#srfTimeFromMM#),'DDMONYY HH24:MI') AND      			
			TO_DATE(TO_CHAR(#srfDateTo#||' '||#srfTimeToHH#||' '||#srfTimeToMM#),'DDMONYY HH24:MI') + 1/1440
		]]>
		</isNotEmpty>
		</isNotEmpty>
		</isNotEmpty>
		</isNotEmpty>
		</isNotEmpty>
		</isNotEmpty>	
		<isNotEmpty property="loginCarrier">
			and exists (select 1 from Imp_Car_Shp
			where awb_no = a.awb_no and awb_date = a.awb_date and carr_code = #loginCarrier#)
		</isNotEmpty>
	</select>
	<select id="imp_VoidSRF_getDataConsignee"  parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO"  
 resultClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO"> 
			SELECT A.AWB_NO awbNo,
				B.CONSTRAINED_ON_POST ccOnPostYN,
				IMG_TRANS_ID transactionId,
			   SUBSTR(A.AWB_NO,1,3)  awbNoPrefix , 
			   SUBSTR(A.AWB_NO,4)  awbNoSuffix , 
			   SUBSTR(A.AWB_NO,1,3)||'-'||SUBSTR(A.AWB_NO,4) as awbNoDisp ,
			   TO_CHAR(A.AWB_DATE, 'DDMONYY') awbDate,
			   B.CARR_CODE carrCode,
			   B.SRF_NO srfNo,
			   B.SRF_NO  srfNoPrefix ,  
			   B.SRF_NO as srfNoDisp ,
			   CATALOG catalog,
			   (SELECT 
			      (CASE WHEN decode(b.catalog,'EG','C','ES','C','IG','C','TG','C','TA','C','EU','M','TM','M','EO','Q','IO','Q','C') = 'C' THEN 
			      (CASE WHEN (SELECT COUNT(1) FROM CUST_AIRL_SPL_CODE SPLCODE WHERE SPLCODE.SPL_TYPE='SPL_COURIER_SHC' AND SPLCODE.CARR_CODE = B.CARR_CODE AND (SPLCODE.SPL_CODE = b.SPL_CODE1 OR SPLCODE.SPL_CODE = b.SPL_CODE2 OR SPLCODE.SPL_CODE = b.SPL_CODE3 OR SPLCODE.SPL_CODE = b.SPL_CODE4 OR SPLCODE.SPL_CODE = b.SPL_CODE5 OR SPLCODE.SPL_CODE = b.SPL_CODE6 OR SPLCODE.SPL_CODE = b.SPL_CODE7 OR SPLCODE.SPL_CODE = b.SPL_CODE8 OR SPLCODE.SPL_CODE = b.SPL_CODE9)) > 0
			      THEN 'Q' ELSE decode(b.catalog,'EG','C','ES','C','IG','C','TG','C','TA','C','EU','M','TM','M','EO','Q','IO','Q','C') END)
			               ELSE decode(b.catalog,'EG','C','ES','C','IG','C','TG','C','TA','C','EU','M','TM','M','EO','Q','IO','Q','C') END) as cargoType	  
				FROM AWB  B WHERE  B.AWB_NO=A.AWB_NO AND B.AWB_DATE=A.AWB_DATE) as cargoType,			   
			   A.AWB_PCS awbPc, 
			   A.AWB_WT awbWt, 
			   A.CONTENT contents,
			   A.SPL_CODE1 splCode1, 
			   A.SPL_CODE2 splCode2, 
			   A.SPL_CODE3 splCode3, 
			   A.SPL_CODE4 splCode4, 
			   A.SPL_CODE5 splCode5, 
			   A.SPL_CODE6 splCode6, 
			   A.SPL_CODE7 splCode7, 
			   A.SPL_CODE8 splCode8,
			   A.SPL_CODE9 splCode9,
			   CSGNE_NAME consignee, 
			   APPNTD_AGENT apptdAgt,  
			   case when B.STATUS = 'VOID' then 'N' else
			   case when (SELECT COUNT(1) FROM BILL_CHARGE_DTL WHERE upper(status)='PENDING' and srf_no=B.SRF_NO)>0 then 'Y' else 'N' end end as chrgStatus,
			   (SELECT CO_IATA_CODE FROM CUST_COMPANY WHERE CODE = A.AGENT_CUST_NO) iataCode,
			   A.BANK_ENDOS bankEndorsmentYN, 
			   A.BANK_TYPE bank,  
			   A.AIRLN_RMK awbRemarks, 			  
			   TO_CHAR(B.SRF_EXPY_DATE,'DDMONYY HH24:MI') srfExpiryDate,
			   TO_CHAR(B.VERIFIED_TIME,'DDMONYY HH24:MI') verTime, 
			   B.REPEAT_YN repeatYN, 
			   B.TRUCK_CO truckerCo, 	
			   B.AUTH_REP_NAME authName, 					
			   B.AUTH_REP_ID authID, (
			   	SELECT MAX(TRUCK_NO) 
			   	FROM TRUCK_TRIP TRIP
  				JOIN IMP_TRUCK_SRF SRFTRIP
 				ON TRIP.TRIP_ID = SRFTRIP.TRIP_ID
  				WHERE SRFTRIP.SRF_NO = B.SRF_NO
  			   ) truckNo,
			   B.COLL_HKID hkId, 
			   B.COLL_NAME collectedBy,
			   B.COLL_CENTER collCenter,
			   (SELECT SUM(DLV_PCS) FROM imp_srf_awb_inventory where srf_no=#srfNo#) delvPcToDate,
			   To_Char(OFF_ARR_DATE,'DDMONYY HH24:MI')	cargoArrDate,
			   To_Char(B.SRF_PRNT_DATE,'DDMONYY HH24:MI') srfPrintDate,
			   (select to_char(min(DLV_DATE),'DDMONYY HH24:MI') from imp_srf_awb_inventory where SRF_NO =  #srfNo#  group by srf_no) firstCargoArrDate, 
			 <!--   (select to_char(DLV_DATE,'DDMONYY HH24:MI') from imp_srf_awb_inventory where DLV_DATE is not null and srf_no = #srfNo# and ROWNUM =1 ) deliComplDate, --> 
			   case when (select count(1) from imp_srf_awb_inventory where   decode((NVL(dlv_pcs, 0)+NVL(cdif_pc, 0)),LOCN_PCS,'Y','N') = 'N' and srf_no=#srfNo# ) > 0 then '' else (select to_char(max(DLV_DATE),'DDMONYY HH24:MI') from imp_srf_awb_inventory where DLV_DATE is not null and srf_no = #srfNo#   group by srf_no )end deliComplDate,  
			   decode((To_Char(POST_DATE,'DDMONYY')||' '|| SUBSTR(TRIM(TO_CHAR(NVL(POST_TIME,0),'0000')),0,2)|| ':'|| SUBSTR(TRIM(TO_CHAR(NVL(POST_TIME,0),'0000')),3,4)),' 00:00','',(To_Char(POST_DATE,'DDMONYY')||' '|| SUBSTR(TRIM(TO_CHAR(NVL(POST_TIME,0),'0000')),0,2)|| ':'|| SUBSTR(TRIM(TO_CHAR(NVL(POST_TIME,0),'0000')),3,4))) postDate,
			   B.CR_USER_ID crUserID,
			   <!-- pkg_common.get_srf_cc(b.srf_no) as strCC,-->
			   B.AWB_CC_CODE as strCC,
			   B.TD_NO truckDockNo,
			   SRF_RMK srfRmk,
			   B.AGENT_ID apptdAgtCode,
			   B.CHARGE_STATUS chargeStatus,B.COLL_CENTER collCenter ,
			   NVL((SELECT CR_BAL 
					   FROM CUST_AGENT_AIRL_CREDIT
					   WHERE CR_EFF_DATE_FROM &lt;= trunc(SYSDATE) AND CR_EFF_DATE_TO &gt;= trunc(SYSDATE) 
					   AND instr( nvl(UPPER(CARR_CODE),'*'), nvl(UPPER(B.CARR_CODE),'**') ) &gt; 0
					   AND UPPER(CR_TYPE) = UPPER(DECODE(A.CATALOG, 'IG', 'Import_GEN', DECODE(A.CATALOG, 'IO', 'Import_OBC', '*')))
					   AND CUST_NO = A.AGENT_CUST_NO AND nvl(upper(Status),'**') &lt;&gt; 'VOID' AND ROWNUM = 1), 0)  airlCrdAvail,
	    	   NVL((SELECT CR_BAL 
					   FROM CUST_AGENT_CREDIT
					   WHERE CR_EFF_DATE_FROM &lt;= trunc(SYSDATE) AND NVL(CR_EFF_DATE_TO, trunc(SYSDATE)) &gt;= trunc(SYSDATE) 
					   AND instr( nvl(UPPER(CARR_CODE),'*'), nvl(UPPER(B.CARR_CODE),'**') ) &gt; 0
					   AND CUST_NO = A.AGENT_CUST_NO AND upper(CR_TYPE) = 'IMPORT_GEN' AND nvl(upper(Status),'**') &lt;&gt; 'VOID'), 0)  aatCrdAvail,
			   NVL((SELECT 'Y' C
					   FROM CUST_UNDERTAKING 
					   WHERE EFF_FROM &lt; SYSDATE AND NVL(EFF_TO, SYSDATE) &gt;= SYSDATE AND ROWNUM = 1
					   AND CARR_CODE = B.CARR_CODE AND AGENT_CODE = A.AGENT_CUST_NO AND A.CONSOLE_IND = 'Y'), 'N') undertakingYN ,
			   NVL(B.ESRF_YN,'N') as esrfInd,
			   B.HOLD_SRF_IND as holdSrf,
			   (SELECT 'Amt: ' || TOTAL_AMT || ', ' || 'Due Date: ' || to_char(DUE_DATE,'DDMONYY')
			   			 FROM BILL_PRE_PAYMENT_DTL where srf_no=#srfNo# and rownum =1 ) prePayInfo
			   FROM IMP_SRF B , IMP_CAR_AWB A
			   WHERE  
			   B.AWB_NO = A.AWB_NO AND
			   B.AWB_DATE = A.AWB_DATE AND
			   B.SRF_NO = #srfNo#
	</select>
	
	<select id="fetchAwbTypeForSRF"  parameterClass="java.lang.String" resultClass="java.lang.String">
			SELECT A.AWB_TYPE FROM AWB A  JOIN IMP_SRF S ON A.AWB_NO = S.AWB_NO AND A.AWB_DATE = S.AWB_DATE WHERE S.SRF_NO = #srfNo#	  
	</select>
	
	<select id="imp_VoidSRF_getDataConsigneeExp"  parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO"  
 resultClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO"> 
			   SELECT A.AWB_NO awbNo,
				B.CONSTRAINED_ON_POST ccOnPostYN,
  			IMG_TRANS_ID transactionId,
			  SUBSTR(A.AWB_NO,1,3)  awbNoPrefix , 
			  SUBSTR(A.AWB_NO,4)  awbNoSuffix , 
         SUBSTR(A.AWB_NO,1,3)||'-'||SUBSTR(A.AWB_NO,4) as awbNoDisp ,
		   TO_CHAR(A.AWB_DATE, 'DDMONYY') awbDate,
		   B.CARR_CODE carrCode,
		   B.SRF_NO srfNo,
			   B.SRF_NO  srfNoPrefix ,  
			   B.SRF_NO as srfNoDisp ,
			   A.CATALOG catalog,
			   (SELECT 
			      (CASE WHEN decode(b.catalog,'EG','C','ES','C','IG','C','TG','C','TA','C','EU','M','TM','M','EO','Q','IO','Q','C') = 'C' THEN 
			      (CASE WHEN (SELECT COUNT(1) FROM CUST_AIRL_SPL_CODE SPLCODE WHERE SPLCODE.SPL_TYPE='SPL_COURIER_SHC' AND SPLCODE.CARR_CODE = B.CARR_CODE AND (SPLCODE.SPL_CODE = b.SPL_CODE1 OR SPLCODE.SPL_CODE = b.SPL_CODE2 OR SPLCODE.SPL_CODE = b.SPL_CODE3 OR SPLCODE.SPL_CODE = b.SPL_CODE4 OR SPLCODE.SPL_CODE = b.SPL_CODE5 OR SPLCODE.SPL_CODE = b.SPL_CODE6 OR SPLCODE.SPL_CODE = b.SPL_CODE7 OR SPLCODE.SPL_CODE = b.SPL_CODE8 OR SPLCODE.SPL_CODE = b.SPL_CODE9)) > 0
			      THEN 'Q' ELSE decode(b.catalog,'EG','C','ES','C','IG','C','TG','C','TA','C','EU','M','TM','M','EO','Q','IO','Q','C') END)
			               ELSE decode(b.catalog,'EG','C','ES','C','IG','C','TG','C','TA','C','EU','M','TM','M','EO','Q','IO','Q','C') END) as cargoType	  
		 	   FROM AWB  B WHERE  B.AWB_NO=A.AWB_NO AND B.AWB_DATE=A.AWB_DATE) as cargoType,			   
			   A.PCS awbPc, 
			   A.WT awbWt,
			   'E' srfType,
			   A.CONTENT contents,
		   A.SPL_CODE1 splCode1, 
			   A.SPL_CODE2 splCode2, 
			   A.SPL_CODE3 splCode3, 
		   A.SPL_CODE4 splCode4, 
			   A.SPL_CODE5 splCode5, 
			   A.SPL_CODE6 splCode6, 
			   A.SPL_CODE7 splCode7, 
			   A.SPL_CODE8 splCode8,
			   A.SPL_CODE9 splCode9,
			   C.CSGNE_NAME consignee, 
			   A.AGENT_NAME apptdAgt,
		   case when B.STATUS = 'VOID' then 'N' else
			case when (SELECT COUNT(1) FROM BILL_CHARGE_DTL WHERE upper(status)='PENDING' and srf_no=B.SRF_NO)>0 then 'Y' else 'N' end end as chrgStatus,
			   (SELECT CO_IATA_CODE FROM CUST_COMPANY WHERE CODE = A.AGENT_CODE) iataCode,
			   '' bankEndorsmentYN, 
			   '' bank,
			   A.AWB_RMK awbRemarks,
			   TO_CHAR(B.SRF_EXPY_DATE,'DDMONYY HH24:MI') srfExpiryDate, 
			   B.REPEAT_YN repeatYN, 
			   B.TRUCK_CO truckerCo, 	
			   B.AUTH_REP_NAME authName, 					
			   B.AUTH_REP_ID authID, 					
			   B.TRUCK_NO truckNo,
			   B.COLL_HKID hkId, 
			   B.COLL_NAME collectedBy,
			   B.COLL_CENTER collCenter,
			   (SELECT SUM(DLV_PCS) FROM imp_srf_awb_inventory where srf_no=#srfNo#) delvPcToDate,
			   To_Char(OFF_ARR_DATE,'DDMONYY HH24:MI')	cargoArrDate,
			   To_Char(B.SRF_PRNT_DATE,'DDMONYY HH24:MI') srfPrintDate,
			   (select to_char(min(DLV_DATE),'DDMONYY HH24:MI') from imp_srf_awb_inventory where SRF_NO =  #srfNo#  group by srf_no) firstCargoArrDate, 
			 	   case when (select count(1) from imp_srf_awb_inventory where   decode((NVL(dlv_pcs, 0)+NVL(cdif_pc, 0)),LOCN_PCS,'Y','N') = 'N' and srf_no=#srfNo# ) &gt; 0 then '' else (select to_char(max(DLV_DATE),'DDMONYY HH24:MI') from imp_srf_awb_inventory where DLV_DATE is not null and srf_no = #srfNo#   group by srf_no )end deliComplDate,  
			   decode((To_Char(POST_DATE,'DDMONYY')||' '|| SUBSTR(TRIM(TO_CHAR(NVL(POST_TIME,0),'0000')),0,2)|| ':'|| SUBSTR(TRIM(TO_CHAR(NVL(POST_TIME,0),'0000')),3,4)),' 00:00','',(To_Char(POST_DATE,'DDMONYY')||' '|| SUBSTR(TRIM(TO_CHAR(NVL(POST_TIME,0),'0000')),0,2)|| ':'|| SUBSTR(TRIM(TO_CHAR(NVL(POST_TIME,0),'0000')),3,4))) postDate,
			   B.CR_USER_ID crUserID,
 			   pkg_common.get_srf_cc(b.srf_no) as strCC,
			   B.TD_NO truckDockNo,
			   SRF_RMK srfRmk,
			   B.AGENT_ID apptdAgtCode,
			   B.CHARGE_STATUS chargeStatus,B.COLL_CENTER collCenter ,
			   NVL((SELECT sum(CR_BAL) 
					   FROM CUST_AGENT_AIRL_CREDIT
					   WHERE CR_EFF_DATE_FROM &lt;= trunc(SYSDATE) AND CR_EFF_DATE_TO &gt;= trunc(SYSDATE) 
						AND instr( nvl(UPPER(CARR_CODE),'*'), nvl(UPPER(B.CARR_CODE),'**') ) &gt; 0
					   AND UPPER(CR_TYPE) = UPPER(DECODE(A.CATALOG, 'IG', 'Import_GEN', DECODE(A.CATALOG, 'IO', 'Import_OBC', '*')))
					    AND CUST_NO = A.AGENT_CODE AND nvl(upper(Status),'**') &lt;&gt; 'VOID' ), 0)  airlCrdAvail,
	    	   NVL((SELECT sum(CR_BAL) 
					   FROM CUST_AGENT_CREDIT
					   WHERE CR_EFF_DATE_FROM &lt;= trunc(SYSDATE) AND NVL(CR_EFF_DATE_TO, trunc(SYSDATE)) &gt;= trunc(SYSDATE) 
					   AND instr( nvl(UPPER(CARR_CODE),'*'), nvl(UPPER(B.CARR_CODE),'**') ) &gt; 0
					   AND CUST_NO = A.AGENT_CODE AND upper(CR_TYPE) = 'IMPORT_GEN' AND nvl(upper(Status),'**') &lt;&gt; 'VOID'), 0)  aatCrdAvail,
			   NVL((SELECT 'Y' C
					   FROM CUST_UNDERTAKING 
					   WHERE EFF_FROM &lt; SYSDATE AND NVL(EFF_TO, SYSDATE) &gt;= SYSDATE AND ROWNUM = 1
					   AND CARR_CODE = B.CARR_CODE AND AGENT_CODE = A.AGENT_CODE ), 'N') undertakingYN 
			   FROM IMP_SRF B 
			    JOIN AWB A ON B.AWB_NO = A.AWB_NO AND B.AWB_DATE = A.AWB_DATE
          LEFT JOIN EXP_CAR C ON B.AWB_NO = C.AWB_NO AND C.AWB_DATE = B.AWB_DATE
			   WHERE   B.SRF_NO =#srfNo#
	</select>
	
	
	<select id="imp_VoidSRF_getDataShipmentInfo"  parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO"  resultClass="cargo.cms.imprt.bo.ShpPndDelivBO">
			SELECT 
			a.FLT_KEY flightNoKey, 
			case when length(a.FLT_KEY)>8  then 'N' else 'Y' end as fltKey, 
			to_Char(a.FLT_DATE,'DDMONYY') flightDate, 
			b.ACT_TIME AS ata, 
			PKG_COMMON.get_flt_ata(B.FLT_KEY, B.SCH_DATE, 'A')  as ataTime,	
			INV_PCS invPc, 
			INV_WT invWt, 
			MANIFEST_PCS manfPc, 
			MANIFEST_WT manfWt,
			CIR_TYPE cirType, 
			CIR_PCS cirPc, 
			CIR_WT cirWt, 
			CC_CODE strCC, 
			DC_IND strDC, 
			STRG_CHRG strChrg,
			a.RMK remarks
			FROM IMP_SRF_FLT a 
			LEFT JOIN FLT_OPR b ON a.FLT_DATE = b.SCH_DATE AND a.FLT_KEY = b.FLT_KEY and b.flt_type = 'A'
			WHERE SRF_NO = #srfNo# 
	</select>
		<select id="Imp_enquireSrf_extendCheck"  parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO"  resultClass="java.lang.Integer">	
		SELECT SRF_EXTENDED FROM IMP_SRF WHERE  SRF_NO = #srfNo#
	</select>
	<select id="selectUrfUlds"  parameterClass="java.lang.String"  resultClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">	
	<![CDATA[
		SELECT A.uld_key urfUld
		FROM imp_uld_list A
		JOIN imp_srf_awb_inventory B
		ON 
		a.ULD_KEY = b.ULD_KEY
		AND a.FLT_KEY = b.FLT_KEY
		AND a.flt_date = b.flt_date
		WHERE 
		b.srf_no = #srfNo#
		AND (A.HANDLING_MODE      IS NOT NULL
		AND (upper(A.HANDLING_MODE)='PPK'
		OR upper(A.HANDLING_MODE)  ='NBK'))
	]]>
	</select>
	
	<select id="getVoidSplHdlgCode"  parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO"  resultClass="java.lang.String">	
	<![CDATA[
	SELECT STRAGG(STRINGDELIM(SHC, ',')) AS SHCS 
          from (select distinct SHC FROM V_IMP_FLT_ULD_SHC
	      WHERE awb_no = #awbNo# AND awb_date = #awbDate#  )
                where ROWNUM <= 3   
	]]>
	</select>
	<select id="Imp_Srf_ruleCode"  parameterClass="java.lang.String"  resultClass="java.lang.String">	
		select RULE_VALUE FROM CMSRULES WHERE RULE_CODE =  #ruleCode#
	</select>
        <update id="Imp_Extend_IMP_SRF" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">	
		update imp_srf set SRF_EXPY_DATE = (SRF_EXPY_DATE + (#extendHrs#/24)), SRF_EXTENDED = (SRF_EXTENDED + 1 ) , LM_USER_ID =#userId#, LM_DATE = sysdate where srf_no = #srfNo#
	</update>
	
	<select id="slectHAWBDtl"  parameterClass="map"  resultClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">	
	  select HAWB_NO hawbNo,
           LOCN_HAWB_PCS hawbPcs,
           LOCN_HAWB_WT hawbWt
    from IMP_SRF_AWB_INVENTORY_DTL where SEQ_NO = #seqNo# and SRF_NO = #srfNo#
	</select>
	<select id="selectLocList"  parameterClass="java.lang.String"  resultClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">	
			select
			SEQ_NO seqNo, 
			LOC_CODE locn,
			NVL(LOCN_PCS,0) dlvPcs,
			NVL(LOCN_WT,0) dlvWt,
			ULD_KEY uld,
			LSP_NO lsp,
			to_char(FLT_DATE,'DDMONYY') fltDate,
			FLT_KEY fltKey,
			DAM_IND damInd,
			to_char(DLV_DATE,'DDMONYY HH24:MI') dlvDate,
			DLV_RMK dlvRmk 
			from imp_srf_awb_inventory
			where SRF_NO=#srfNo#
			and CDIF_NO is NULL
	</select>
	
	<select id="selectCurrLoc"  parameterClass="java.lang.String"  resultClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">	
			select LOC_CODE currLocn,
			LSP_NO currLSP,
			ULD_KEY currULD,
			LOCN_PCS currPcs,
			LOCN_WT currWt 
			from awb_inventory
			where SRF_NO=#srfNo#
	</select>
	
	
	<select id="checkValidAgent"  parameterClass="java.lang.String"  resultClass="java.lang.Integer">	
	select count(1) from CUST_COMPANY where ACTIVE = 'Y' AND AGENT_YN = 'Y' AND BLACKLISTED='N' and code = #AgentId#
	</select>
	
	<select id="checkValidAgentName"  parameterClass="java.lang.String"  resultClass="java.lang.Integer">	
	select count(1) from CUST_COMPANY where ACTIVE = 'Y' AND AGENT_YN = 'Y' AND BLACKLISTED='N' and code_desc = #AgentId#
	</select>
	
	
		<!--Enquire SRF by RANJITH Ends -->
			<!--Void SRF by RANJITH Starts-->	
		
<select id="imp_getAwbNoAndDate"  parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO"  
 resultClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO"> 
	SELECT AWB_NO awbNo, TO_CHAR(AWB_DATE, 'DDMONYY') awbDate 
	FROM IMP_SRF  WHERE  SRF_NO = #srfNo#
</select>
<select id="getOnloadCarrierForAWBSRF"  parameterClass="map"  resultClass="java.lang.Integer">
	select count(1) 
	from Imp_Car_Shp s
	join mast_carrier c on c.code = s.carr_code
	where awb_no = #awbNo# and awb_date = TO_DATE(#awbDate#,'DDMONYY') 
	and c.SELF_CARR = 'Y'
</select> 
<select id="imp_maintainCdif_CountCheck"  parameterClass="java.lang.String"  resultClass="java.lang.Integer">	
	SELECT COUNT(1) FROM IMP_CDIF WHERE SRF_NO = #srfNo# AND VOID_USER is null
</select>
<update id="imp_voidsrf" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
	UPDATE IMP_SRF SET 
	VOID_USER = #lmUserId# , 
	VOID_DATE = SYSDATE , 		
	LM_USER_ID = #lmUserId# ,
	STATUS = 'VOID', 
	LM_DATE = SYSDATE,
	TR_TYPE = #trtype#  
	WHERE SRF_NO = #srfNo#
</update>	
<update id="closeSrfRtrvOrder" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
<![CDATA[
	UPDATE rtrv_move_order
	SET status='CANCELLED'
	where LSP = (SELECT LSP_NO FROM imp_srf_awb_inventory WHERE srf_no=#srfNo# AND ROWNUM=1)
	AND (status IS NULL OR(status <> 'E' AND status <>'C'))
]]>
</update>
<select id="sqlFetchAwbInvDtlsBySrfNo" parameterClass="java.lang.String" resultClass="java.util.HashMap">
		SELECT 
			SEQ_NO, NVL(LSP_NO,'DUMMY_LSP') LSP_NO, NVL(ULD_KEY,'DUMMY_ULD') ULD_KEY, LOC_CODE, LOCN_PCS, 
			LOCN_WT, AWB_NO, TO_CHAR(AWB_DATE,'DDMONYY') AWB_DATE, BUP_WT, BULK_WT, DAM_PCS, DAM_WT, DAM_IND,
			NVL(FLT_KEY,'DUMMY_FLT_KEY') FLT_KEY, to_char(to_date(NVL(FLT_DATE,'01JAN00')),'DDMONYY') FLT_DATE
		FROM AWB_INVENTORY 
		WHERE SRF_NO=#srfNo#
	</select>
	
	<update id="sqlUpdAwbInvDtlsVoidSrf" parameterClass="java.util.HashMap">
	<![CDATA[
		UPDATE 
			AWB_INVENTORY 
		SET 
			LOCN_PCS=NVL(LOCN_PCS,0)+NVL(#LOCN_PCS#, 0), LOCN_WT=NVL(LOCN_WT,0)+NVL(#LOCN_WT#, 0), BUP_WT=BUP_WT+NVL(#BUP_WT#,0), 
			BULK_WT=BULK_WT+NVL(#BULK_WT#,0), DAM_PCS=DAM_PCS+NVL(#DAM_PCS#,0), DAM_WT=DAM_WT+NVL(#DAM_WT#,0), DAM_IND=DECODE(DAM_IND,'Y','Y',#DAM_IND#), 
			LM_USER_ID=#USER_ID#, LM_DATE=SYSDATE, REF_TR_NO=#TR_NO#, REF_TR_TYPE=#REF_TR_TYPE#, REF_AWB_EVENT=#TR_TYPE_EVNT#, REF_TR_EVENT=#REF_TR_EVENT#, 
			REF_TR_DATE=SYSDATE 
		WHERE 
			AWB_NO=#AWB_NO# AND AWB_DATE=TO_DATE(#AWB_DATE#,'DDMONYY') AND NVL(LSP_NO,'DUMMY_LSP')=#LSP_NO# 
			AND NVL(ULD_KEY,'DUMMY_ULD')=#ULD_KEY# AND LOC_CODE=#LOC_CODE# 
			AND NVL(FLT_KEY,'DUMMY_FLT_KEY')=#FLT_KEY# AND to_date(NVL(FLT_DATE,'01JAN00'))= to_date(#FLT_DATE#)
			AND SRF_NO IS NULL AND SEQ_NO <> #SEQ_NO#
	]]>
	</update>
	
	<delete id="sqlDeleteAwbInvVoidSrf" parameterClass="java.lang.String">
		DELETE FROM AWB_INVENTORY WHERE SEQ_NO=#SEQ_NO#
	</delete>

	<!--Void  SRF by RANJITH Ends -->

<!-- Issue Notification :: Santosh Desai:: starts -->
	 
	<select id="handler_carriers"  parameterClass="java.lang.Object" resultClass="cargo.cms.imprt.bo.CarrierBO">
		SELECT CODE AS carrCode, CODE_DESC AS carrName FROM MAST_CARRIER WHERE OWNED_CARR = 'Y' ORDER BY CODE
	</select>
	
	
	<select id="imp_trucker_getCustCode" parameterClass="cargo.cms.imprt.bo.CustCompanyBO" resultClass="java.util.HashMap">
		SELECT 
			CODE,CODE_DESC 
		FROM 
			CUST_COMPANY 
		WHERE			
			AGENT_YN = 'Y' AND ACTIVE = 'Y' AND BLACKLISTED='N'	
			<isNotEmpty property="codeDesc"> 
			AND CODE_DESC=#codeDesc# 
			</isNotEmpty>		
			<isNotEmpty property="coIataCode">
			AND CO_IATA_CODE=#coIataCode# 
			</isNotEmpty>
			AND rownum=1
	</select>

        <select id="imp_issuenotf_checkagent" parameterClass="java.lang.String" resultClass="java.lang.Integer">
	SELECT COUNT(1) FROM IMP_CAR_AWB WHERE APPNTD_AGENT = #PARAM#
	</select>
	
	<select id="imp_issuenotf_checkIATACode" parameterClass="cargo.cms.imprt.bo.CustCompanyBO" resultClass="java.lang.Integer">
	SELECT COUNT(1) FROM CUST_COMPANY 
	WHERE CODE_DESC =  #codeDesc# 
	AND CO_IATA_CODE=#coIataCode# 
	</select>
	
	<select id="imp_trucker_getCustCompanyList"  parameterClass="map"  
		resultClass="cargo.cms.imprt.bo.CustCompanyBO">
			<!-- SELECT 
			   NVL(CC.CODE_DESC, A.APPNTD_AGENT) as codeDesc,
			   A.AGENT_CUST_NO as code,
			   CC.CO_IATA_CODE as coIataCode,
			   A.CARR_CODE as carrCode,
			   CC.TEL_IMP1 as telImp1,
			   CC.TEL_IMP2 as telImp2,
			   a.osCharge as totalOSPayment
		FROM (SELECT CA.AGENT_CUST_NO, count(1) cnt , CARR_CODE, APPNTD_AGENT, sum(gt.osCharge) osCharge
			FROM IMP_CAR_SHP CS      
			JOIN (select AWB_NO, AWB_DATE, FLT_DATE, FLT_KEY, count(1) cnt from AWB_INVENTORY 
				GROUP BY AWB_NO, AWB_DATE, FLT_DATE, FLT_KEY) AI 
			   		   ON AI.AWB_DATE = CS.AWB_DATE AND AI.AWB_NO = CS.AWB_NO
               AND AI.FLT_DATE = CS.FLT_DATE AND AI.FLT_KEY = CS.FLT_KEY               
			JOIN IMP_CAR_AWB CA ON CA.AWB_NO = CS.AWB_NO AND CA.AWB_DATE = CS.AWB_DATE
			left join (select AWB_NO, AWB_DATE, sum(AAT_OS + AIRL_OS) osCharge from GT_OS_CHARGES group by AWB_NO, AWB_DATE) GT 
				 ON GT.AWB_NO = CS.AWB_NO AND GT.AWB_DATE = CS.AWB_DATE         
			WHERE CS.CARR_CODE = NVL('', CS.CARR_CODE)
			GROUP BY CA.AGENT_CUST_NO, CARR_CODE, APPNTD_AGENT) A  
		LEFT JOIN 	CUST_COMPANY CC ON CC.CODE = A.AGENT_CUST_NO 
		WHERE NVL(CC.CODE_DESC, A.APPNTD_AGENT) = #codeDesc# 
		AND NVL(CC.CO_IATA_CODE, '*') = NVL(#coIataCode#, NVL(CC.CO_IATA_CODE, '*'))
		<isNotEmpty property="loginCarrier">
			AND A.CARR_CODE = #loginCarrier#
		</isNotEmpty>	-->	
		   SELECT 
              NVL(CC.CODE_DESC, AGT_NAME) as codeDesc,
              CC.CO_IATA_CODE as coIataCode,
              A.CARR_CODE as carrCode,
              CC.CODE as code,
              CC.TEL_IMP1 as telImp1,
              CC.TEL_IMP2 as telImp2,
              round(a.osCharge,2) as totalOSPayment
              FROM (SELECT CARR_CODE, AGT_NAME, sum(osCharge) osCharge
          FROM (SELECT S.CARR_CODE, AGT_NAME, gt.osCharge
                FROM (SELECT CA.AWB_NO, CA.AWB_DATE, cs.CARR_CODE, nvl(C.CODE_DESC, CA.APPNTD_AGENT) AGT_NAME
                    FROM IMP_CAR_SHP CS      
                    JOIN IMP_CAR_AWB CA ON CA.AWB_NO = CS.AWB_NO AND CA.AWB_DATE = CS.AWB_DATE
                    JOIN AWB AWB ON AWB.AWB_NO = CS.AWB_NO AND AWB.AWB_DATE = CS.AWB_DATE AND AWB.AWB_CLOSED_YN='N'
                    JOIN (select AWB_NO, AWB_DATE, FLT_DATE, FLT_KEY, count(1) cnt from AWB_INVENTORY 
                      GROUP BY AWB_NO, AWB_DATE, FLT_DATE, FLT_KEY) AI 
                             ON AI.AWB_DATE = CS.AWB_DATE AND AI.AWB_NO = CS.AWB_NO
                             AND AI.FLT_DATE = CS.FLT_DATE AND AI.FLT_KEY = CS.FLT_KEY               
                    LEFT JOIN        CUST_COMPANY C ON C.CODE = CA.AGENT_CUST_NO
                    WHERE        
                      CS.CARR_CODE = NVL(#carrCode#, CS.CARR_CODE)                      
                    <isEmpty property="carrCode">
                    	<isNotEmpty property="logedInCarrier">
							AND ( CS.CARR_CODE = #logedInCarrier# OR CS.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE  = #logedInCarrier#))             
        	        	</isNotEmpty>
        	        </isEmpty>  
                    AND (CA.APPNTD_AGENT = NVL(#codeDesc#, CA.APPNTD_AGENT)
                        OR CA.AGENT_CUST_NO = NVL(#code#, CA.AGENT_CUST_NO))) S
                 left join (select AWB_NO, AWB_DATE, sum(AAT_OS + AIRL_OS) osCharge 
                          from GT_OS_CHARGES group by AWB_NO, AWB_DATE) GT 
                   ON GT.AWB_NO = S.AWB_NO AND GT.AWB_DATE = S.AWB_DATE) CH    
          		GROUP BY CARR_CODE, AGT_NAME) A  
              LEFT JOIN CUST_COMPANY CC ON CC.CODE_desc = A.AGT_NAME
       		where NVL(CC.CO_IATA_CODE, '*') = NVL(#coIataCode#, NVL(CC.CO_IATA_CODE, '*'))       		
			
   	</select>
   	
   	 <select id="imp_trucker_getAWB"  parameterClass="cargo.cms.imprt.bo.CustCompanyBO" resultClass="cargo.cms.imprt.bo.FullAWBInfoBO">
          SELECT
          inv.invPcs as invPcs,
          inv.invWt as invWt,
          NVL(AI.LOCN_PCS,0) ||'/'||NVL(AI.LOCN_WT,0) as invPcsWt,
		  AWB.PCS AS pcsAWB,
          AWB.WT AS wtAWB,
          ISF.DLV_PCS AS dlvPcs,
          ISF.DLV_WT AS dlvWt,
          CA.SHPR_NAME shprName,
          CS.CAR_CREATED carYN,
		  NVL(CC.CODE_DESC, CA.APPNTD_AGENT) as codeDesc,
		  CA.AGENT_CUST_NO as code,
		  AWB.AGENT_CODE chargeAgent,
		  CS.AWB_NO as awbNo,
		  substr(CS.AWB_NO, 1, 3)||'-'||SUBSTR(CS.AWB_NO,4,LENGTH(CS.AWB_NO))as awbNo1,
          TO_CHAR(CS.AWB_DATE, 'DDMONYY') as awbDate,
          AWB.AWB_TYPE as awbType,
          CS.FLT_KEY as fltKey,
          TO_CHAR(CS.FLT_DATE, 'DDMONYY') as fltDate,
          CS.FLT_TYPE as fltType,
          TO_CHAR(CS.FLT_DATE, 'DDMONYY') as fltDateDisplay,
          CS.FLT_KEY||' / '|| TO_CHAR(CS.FLT_DATE,'DDMONYY') fltNoDate,
          CS.FLT_TYPE as fltType,
          CA.AWB_ORIGIN orig,
          CA.AWB_DEST dest,
          CA.CSGNE_NAME csgneName,
          NVL(CA.CSGNE_ADDR1,'Y_X') addr1,
          NVL(CA.CSGNE_ADDR2,'Y_X') addr2,
          NVL(CA.CSGNE_ADDR3,'Y_X') addr3,
          NVL(CA.CSGNE_ADDR4,'Y_X') addr4,
          NVL(CA.CSGNE_ADDR5,'Y_X') addr5,
          NVL(CA.CSGNE_PLACE,'Y_X') place,
          (select code_desc from mast_country mcntr1 where mcntr1.code = CA.CSGNE_CTRY_CODE) as country,         
          NVL(CA.CSGNE_PIN_CODE,'Y_X') pincode,           
          CA.SPL_CODE1 splCode1,
          CA.SPL_CODE2 splCode2,
          CA.SPL_CODE3 splCode3,
		  CA.SPL_CODE4 splCode4,
		  CA.SPL_CODE5 splCode5,
		  CA.SPL_CODE6 splCode6,
		  CA.SPL_CODE7 splCode7,
		  CA.SPL_CODE8 splCode8,
		  CA.SPL_CODE9 splCode9,         
          CA.CONTENT as content,
          TO_CHAR(nvl(ACT_DATE, sch_date),'DDMONYY') as fltActDate,
		  lpad(nvl(act_time, sch_time),4,0) as fltActTime,
          (SELECT V.CC_CODE FROM V_CST_IMP_CC_CODE_AWB V
                WHERE V.FLT_KEY = CS.FLT_KEY AND V.FLT_DATE = CS.FLT_DATE AND V.AWB_NO = CS.AWB_NO 
                AND NVL(V.HAWB_NO, '000000000000000000') =  '000000000000000000' AND ROWNUM = 1) AS ccCode, 
          NVL(AI.LOCN_PCS,0) as pcs, NVL(AI.LOCN_WT,0) as wt,
		  NVL(CA.AWB_PCS,0) as awbPcs, NVL(CA.AWB_WT,0) as awbWt,		  
		  NVL(CS.MANIFEST_PCS,0) as mnfstPc,	NVL(CS.MANIFEST_WT,0) as  mnfstWt,  
          DECODE(CS.DAM_PROC_DATE,NULL,'N','Y') as dam,
          0 as osCredit,
          0 as osCash,
          (select (TO_CHAR(NOTF_SENT_DATE, 'DDMONYY') || ' ' || LTRIM(SUBSTR(TRIM(TO_CHAR(NOTF_SENT_TIME,'0000')),0,2) || ':'|| SUBSTR(TRIM(TO_CHAR(NOTF_SENT_TIME,'0000')),3,4), ':'))
          from IMP_CAR_SHP ES where ES.AWB_DATE = CS.AWB_DATE AND ES.AWB_NO = CS.AWB_NO AND ES.FLT_DATE = CS.FLT_DATE AND ES.FLT_KEY = CS.FLT_KEY) as ecanSendDate,
          TO_CHAR(pkg_Calculate.GET_FREE_DAYS(CS.FLT_DATE, CS.FLT_KEY,CS.AWB_NO,CS.AWB_DATE), 'DDMONYY') as freeStrorageExpiry,
          CA.CATALOG as catalog,
          round(nvl(GT.AAT_OS,0),2) AS aatOSch,
          round(nvl(GT.AIRL_OS,0),2)  AS  airlOSch
          FROM IMP_CAR_SHP CS
           JOIN (select AWB_NO, AWB_DATE, FLT_KEY, FLT_DATE, count(1) cnt, SUM(LOCN_PCS) LOCN_PCS, SUM(LOCN_WT) LOCN_WT
                   from AWB_INVENTORY 
                   GROUP BY AWB_NO, AWB_DATE, FLT_KEY, FLT_DATE) AI
                           ON AI.AWB_DATE = CS.AWB_DATE AND AI.AWB_NO = CS.AWB_NO AND AI.FLT_DATE = CS.FLT_DATE AND AI.FLT_KEY = CS.FLT_KEY
            JOIN IMP_CAR_AWB CA ON CA.AWB_NO = CS.AWB_NO AND CA.AWB_DATE = CS.AWB_DATE
            JOIN AWB AWB ON AWB.AWB_NO = CS.AWB_NO AND AWB.AWB_DATE = CS.AWB_DATE
            LEFT JOIN CUST_COMPANY CC ON CC.CODE = CA.AGENT_CUST_NO
            join FLT_OPR f on f.FLT_KEY  = CS.FLT_KEY  AND f.SCH_DATE =  CS.FLT_DATE  and f.flt_type='A' 
            LEFT JOIN GT_OS_CHARGES GT ON GT.AWB_NO = CS.AWB_NO AND GT.AWB_DATE = CS.AWB_DATE   
			LEFT JOIN (SELECT  SRF.AWB_DATE, SRF.AWB_NO, SUM(SRF.DLV_PCS) DLV_PCS, SUM(SRF.DLV_WT) DLV_WT FROM IMP_SRF_FLT SRF 
            GROUP BY SRF.AWB_DATE, SRF.AWB_NO) ISF on ISF.AWB_DATE = CS.AWB_DATE AND ISF.AWB_NO = CS.AWB_NO
            left join (select i.awb_no,i.awb_date, sum(locn_pcs) invpcs,sum(locn_wt) invwt 
		                  from awb_inventory i
		                  join flt_opr_events foe on i.flt_key = foe.flt_key and i.flt_date = foe.sch_date and foe.flt_type = 'A' and foe.whse_compl_date is not null
		                  group by i.awb_date, i.awb_no) inv on inv.awb_date = cs.awb_date and inv.awb_no = cs.awb_no
           WHERE NVL(CS.CARR_CODE, '*') LIKE NVL(#carrCode#, CS.CARR_CODE)   
           AND NVL(AWB.DEST,'HKG') = 'HKG'
           <isNotEmpty prepend="AND" property="codeDesc">       
            NVL(CC.CODE_DESC, CA.APPNTD_AGENT) = #codeDesc# 	
           </isNotEmpty> 	 
           <isNotEmpty prepend="AND" property="awbNo">
					CS.AWB_NO = #awbNo#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="flightKey">
					CS.FLT_KEY = #flightKey#
			</isNotEmpty>	
			<isNotEmpty prepend="AND" property="flightDate">
					CS.FLT_DATE = #flightDate#
			</isNotEmpty>	
   	</select>
   	
   	
   		<insert id="imp_trucker_getAWB_insert" parameterClass="cargo.cms.imprt.bo.FullAWBInfoBO">
		Insert into GT_ISSUE_NOTIFICATION
		(CHARGEAGENT,AWBNO,AWBNO1,AWBDATE,AWBTYPE,FLTKEY,FLTDATE,FLTTYPE,FLTDATEDISPLAY,FLTNODATE,ORIG,DEST,CSGNENAME,ADDR1,ADDR2,ADDR3,ADDR4,ADDR5,PLACE,COUNTRY,PINCODE,
		SPLCODE1,SPLCODE2,SPLCODE3,SPLCODE4,SPLCODE5,SPLCODE6,SPLCODE7,SPLCODE8,SPLCODE9,CONTENT,FLTACTDATE,FLTACTTIME,CCCODE,INVPCSWT,PCS,WT,INVPCS,INVWT,AWBPCS,AWBWT,MNFSTPC,
		MNFSTWT,DAM,OSCREDIT,OSCASH,ECANSENDDATE,FREESTRORAGEEXPIRY,CATALOG,AATOSCH,AIRLOSCH,
		CARYN,SHPRNAME,PCSAWB,WTAWB,DLVPCS,DLVWT)
		values
		(#chargeAgent#,#awbNo#,#awbNo1#,#awbDate#,#awbType#,#fltKey#,#fltDate#,#fltType#,#fltDateDisplay#,#fltNoDate#,#orig#,#dest#,#csgneName#,
		#addr1#,#addr2#,#addr3#,#addr4#,#addr5#,#place#,#country#,#pincode#,#splCode1#,#splCode2#,#splCode3#,#splCode4#,#splCode5#,#splCode6#,#splCode7#,#splCode8#,#splCode9#,
		substr(#content#,1,20),#fltActDate#,#fltActTime#,#ccCode#,#invPcsWt#,#pcs#,#wt#,#invPcs#,#invWt#,#awbPcs#,#awbWt#,#mnfstPc#,#mnfstWt#,#dam#,#osCredit#,#osCash#,
		#ecanSendDate#,#freeStrorageExpiry#,#catalog#,#aatOSch#,#airlOSch#,
		#carYN#,#shprName#,#pcsAWB#,#wtAWB#,#dlvPcs#,#dlvWt#)
	</insert>

	<select id="imp_trucker_getAWB1" parameterClass="cargo.cms.imprt.bo.CustCompanyBO"
		resultClass="cargo.cms.imprt.bo.FullAWBInfoBO">
		SELECT 
		chargeAgent chargeAgent,
		awbNo awbNo,
		awbNo1 awbNo1,
		awbDate awbDate,
		awbType awbType,
		fltKey fltKey,
		fltDate as fltDate,
		fltType fltType,
		fltDateDisplay as fltDateDisplay,
		fltNoDate fltNoDate,
		fltType fltType,
		orig orig,
		dest dest,
		csgneName csgneName,
		addr1 addr1,
		addr2 addr2,
		addr3 addr3,
		addr4 addr4,
		addr5 addr5,
		place place,
		country country,
		pincode pincode,
		splCode1 splCode1,
		splCode2 splCode2,
		splCode3 splCode3,
		splCode4 splCode4,
		splCode5 splCode5,
		splCode6 splCode6,
		splCode7 splCode7,
		splCode8 splCode8,
		splCode9 splCode9,
		content content,
		fltActDate as fltActDate,
		fltActTime fltActTime,
		ccCode ccCode,
		invPcsWt invPcsWt,
		wt wt,
		pcs pcs,
		invPcs as invPcs, 
		invWt invWt,
		awbPcs awbPcs,
		awbWt awbWt,
		mnfstPc mnfstPc, mnfstWt mnfstWt,
		dam dam,
		osCredit as osCredit,
		osCash as osCash,
		ecanSendDate ecanSendDate,
		freeStrorageExpiry freeStrorageExpiry,
		catalog catalog,
		aatOSch aatOSch,
		airlOSch airlOSch,
		pcsAWB pcsAWB,
	    wtAWB wtAWB,
	    dlvPcs dlvPcs,
	    dlvWt dlvWt,
	    shprName shprName,
	    carYN carYN
		FROM GT_ISSUE_NOTIFICATION
		<dynamic prepend="ORDER BY ">
			<isNotEmpty property="sortOrder.sortField">
				$sortOrder.sortField$
           </isNotEmpty>
		</dynamic>
	</select>


	<select id="imp_trucker_getAWB1COUNT" parameterClass="cargo.cms.imprt.bo.CustCompanyBO"
		resultClass="cargo.cms.imprt.bo.FullAWBInfoBO">
		SELECT COUNT(1)
		FROM GT_ISSUE_NOTIFICATION
		<dynamic prepend="ORDER BY ">
			<isNotEmpty property="sortOrder.sortField">
				$sortOrder.sortField$
           </isNotEmpty>
		</dynamic>
	</select>
   	
<delete id="DELETE_GT_OS_CHARGES" parameterClass="java.lang.String" >
		delete from GT_OS_CHARGES
</delete>   	

   		 
   	
   	<select id="imp_trucker_getNextTrNo" parameterClass="map" resultClass="java.lang.Integer">
	   	 <!-- SELECT IMP_ECAN_SEQ.NEXTVAL from DUAL -->
	   	 SELECT IMP_ECAN_SHP_SEQ.NEXTVAL from DUAL
   	</select>
   	
   	<parameterMap id="argsMap" class="map" >
       <parameter property="agentCode" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="carrierCode" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="awbNo" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	</parameterMap>

	<procedure id="prc_os_chrgs_truck_man" parameterMap="argsMap" >
		{  call PRC_OS_CH_TRUCK_MAN(?,?,?) }
	</procedure>
	
	<insert id="imp_trucker_inserteEcanAddress" parameterClass="cargo.cms.imprt.bo.EcanAddressBO" >
	   	INSERT INTO IMP_ECAN_ADDR
		   (TR_NO, ADDR_GRP, ADDR_TYPE, MSG_ADDR, CR_USER_ID, LM_USER_ID, CR_DATE, LM_DATE)
		VALUES
		   (#trNo#,
		   #addressGroup#,
		   #addressType#,
		   #msgAddress#,
		   #createdUserId#,
		   #modifiedUserId#,
		   SYSDATE,
		   SYSDATE)
   </insert>
   
   
   
	<insert id="imp_trucker_insertAwbEvents" parameterClass="cargo.cms.imprt.bo.FullAWBInfoBO" >
	   INSERT INTO 
 			AWB_EVENTS 
 			(AWB_NO, AWB_DATE, EVENT_ID, EVENT_DESC, FLT_KEY, 
			FLT_DATE, FLT_TYPE, TR_NO, ULD_KEY, PCS, WT, CR_USER_ID, 
			CR_DATE, LM_USER_ID, LM_DATE) 
		VALUES 
			(#awbNo#, TO_DATE(#awbDate#, 'DDMONYY'), 'INF', 'Issue Notification', 
			#fltKey#, TO_DATE(#fltDate#, 'DDMONYY'), #fltType#, #trNo#, #uldKey#, #pcs#, 
			#wt#, #lmUserId#, SYSDATE, #lmUserId#, SYSDATE)
   </insert>
   
   <!--  Changed for QR -->
   <insert id="imp_trucker_insertAwbEvents1" parameterClass="cargo.cms.imprt.bo.DBDCFltBO" >
	   INSERT INTO 
 			AWB_EVENTS 
 			(AWB_NO, AWB_DATE, EVENT_ID, EVENT_DESC, FLT_KEY, 
			FLT_DATE, FLT_TYPE, TR_NO, ULD_KEY, PCS, WT, CR_USER_ID, 
			CR_DATE, LM_USER_ID, LM_DATE) 
		VALUES 
			(#awbNo#, TO_DATE(#awbDate#, 'DDMONYY'), 'INF', 'FLT_BD_COMPLT', 
			#fltKey#, TO_DATE(#fltDate#, 'DDMONYY'), 'I', #trNo#, #uldKey#, #awbPcs#, 
			#awbWt#, #lmUserId#, SYSDATE, #lmUserId#, SYSDATE)
   </insert>
   
   	<update id="imp_trucker_updateImpCarShp1" parameterClass="cargo.cms.imprt.bo.DBDCFltBO">	
		UPDATE IMP_CAR_SHP 
		SET 
			NOA_IND = 'Y',
			LM_USER_ID = 'SYSTEM',
			LM_DATE = SYSDATE,
			TR_TYPE = 'INF',
		  	NOTF_SENT_DATE = TO_char(SYSDATE,'DDMONYY'),
		   	NOTF_SENT_TIME = TO_Char(SYSDATE,'HH24MI')			
		WHERE 	
			AWB_NO = UPPER(#awbNo#) AND
			FLT_KEY = UPPER(#fltKey#) AND
			FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
			AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')  
	</update>
	
    <insert id="imp_trucker_insertCustInteraction" parameterClass="map">
	   INSERT INTO CUST_INTERACTION  
  					(AWB_NO,INT_PURPOSE, INT_MODE, CONTACT_PERSON,INT_DATE,FOLLOW_UP_DATE,
  					FOLLOW_UP_ACTION,REMARKS,LM_DATE,CR_DATE,CR_USER_ID,LM_USER_ID,COMP_DATE,COMP_BY,AWB_DATE,STATUS)
				VALUES (UPPER(#awbNo#),#purpose#, #interactMode#, #contName#,SYSDATE,
				'',#fallowUpAction#, #remarks#,SYSDATE,SYSDATE,#crUserId#,#lmUserId#,SYSDATE,#crUserId#,#awbDate#,'1 New') 		
   </insert>   
   
   
   	<update id="imp_trucker_updateImpCarShp" parameterClass="cargo.cms.imprt.bo.FullAWBInfoBO">	
		UPDATE IMP_CAR_SHP 
		SET 
			NOA_IND = 'Y',
			LM_USER_ID = #lmUserId#,
			LM_DATE = SYSDATE,
			TR_TYPE = 'INF',
		  	NOTF_SENT_DATE = TO_char(SYSDATE,'DDMONYY'),
		   	NOTF_SENT_TIME = TO_Char(SYSDATE,'HH24MI')
		  WHERE  
			AWB_NO = UPPER(#awbNo#) AND
			FLT_KEY = UPPER(#fltKey#) AND
			FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
			AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')  
	</update>
   
   <select id="chkShcSpecifiedForNOA" parameterClass="cargo.cms.imprt.bo.DBDCFltBO" resultClass="java.lang.String">
	    SELECT STRAGG(STRINGDELIM(MAST_SPL_HAND_CODE.CODE,',')) 
    	FROM AWB,MAST_SPL_HAND_CODE
	    WHERE AWB.AWB_NO             = UPPER(#awbNo#)
	    AND AWB.AWB_DATE             =  TO_DATE(#awbDate#,'DDMONYY')  
	    AND (MAST_SPL_HAND_CODE.CODE = AWB.SPL_CODE1
	    OR MAST_SPL_HAND_CODE.CODE   = AWB.SPL_CODE2
	    OR MAST_SPL_HAND_CODE.CODE   = AWB.SPL_CODE3
	    OR MAST_SPL_HAND_CODE.CODE   = AWB.SPL_CODE4
	    OR MAST_SPL_HAND_CODE.CODE   = AWB.SPL_CODE5
	    OR MAST_SPL_HAND_CODE.CODE   = AWB.SPL_CODE6
	    OR MAST_SPL_HAND_CODE.CODE   = AWB.SPL_CODE7
	    OR MAST_SPL_HAND_CODE.CODE   = AWB.SPL_CODE8
	    OR MAST_SPL_HAND_CODE.CODE   = AWB.SPL_CODE9)
	    AND MAST_SPL_HAND_CODE.NOA_YN = 'N'
   	</select>
   	
    <insert id="imp_trucker_inserteEcanShp" parameterClass="cargo.cms.imprt.bo.EcanShpBO" >
	   	INSERT INTO IMP_ECAN_SHP
		   (TR_NO, DOC_LINE_NO, AWB_NO, AWB_DATE, FLT_KEY, FLT_DATE, FLT_TYPE, CR_USER_ID, LM_USER_ID, CR_DATE, LM_DATE)
		VALUES
		   (#trNo#,
		   #docLineNo#,
		   #awbNo#,
		   TO_DATE(#awbDate#, 'DDMONYY'),		  	 
		   #fltKey#,
 		   TO_DATE(#fltDate#, 'DDMONYY'),
 		   #fltType#,
		   #createdUserId#,
		   #modifiedUserId#,
		   SYSDATE,
		   SYSDATE)		  
   </insert>
   
   <select id="imp_trucker_catalogList" parameterClass="map" resultClass="cargo.cms.imprt.bo.CatalogBO">
		<![CDATA[
		SELECT DECODE(CR_TYPE, 'Import_GEN', 'IG', 'Import_OBC', 'IO') as catalogCode, NVL(sum(CR_BAL), 0) as airlCrdAvail
		FROM CUST_AGENT_AIRL_CREDIT  
		WHERE CR_EFF_DATE_FROM <= trunc(SYSDATE) AND CR_EFF_DATE_TO >= trunc(SYSDATE) and upper(CR_TYPE) like 'IMPORT%' 
		AND CUST_NO = #apptdAgtCode# AND instr( nvl(UPPER(CARR_CODE),'*'), nvl(UPPER(#carrCode#),'**') ) > 0 AND nvl(upper(Status),'**') != 'VOID'
		group by CR_TYPE
   		]]>
   </select> 
   
      <select id="imp_trucker_aat_avaliableCreditLimit_internal" parameterClass="map" resultClass="java.lang.Double">
	 <![CDATA[
		SELECT NVL((SELECT NVL(sum(CR_BAL), 0) as aatCrdAvail
		FROM CUST_AGENT_CREDIT
		WHERE CR_EFF_DATE_FROM <= trunc(SYSDATE) AND NVL(CR_EFF_DATE_TO, trunc(SYSDATE)) >= trunc(SYSDATE) 
		AND instr( nvl(UPPER(CARR_CODE),'*'), nvl(UPPER(#carrCode#),'**') ) > 0 
		AND CUST_NO = #apptdAgtCode# AND upper(CR_TYPE) = 'IMPORT_GEN' AND nvl(upper(Status),'**') <> 'VOID'), 0) aatCrdAvail from dual
  	]]>
   	</select>
   	
   	<select id="test_package_execution"  parameterClass="map"  resultClass="java.lang.Integer">
	select count(1) from GT_OS_CHARGES
	</select>
	
	
	<select id="fetchBrKDownComplete"  parameterClass="map"  resultClass="java.lang.String">
	SELECT TO_CHAR(WHSE_COMPL_DATE) FROM FLT_OPR_EVENTS WHERE FLT_KEY = #fltKey# AND SCH_DATE = #fltDate# AND FLT_TYPE = 'A'
	</select>
	
	<!-- Issue Notification ::  Santosh Desai :: Ends -->	
	
	<!-- Amend Collection Slot :: Anup :: Begins -->
	
	<select id="getinitdateBefore2days" parameterClass="java.lang.String"
		resultClass="java.lang.String">
	<![CDATA[	
		select to_char(sysdate - 2,'DDMONYY') from dual
	]]>
	</select>
	
	<select id="getinitBefore2HH24MIN" parameterClass="java.lang.String"
		resultClass="java.lang.String">
	<![CDATA[	
		select to_char(sysdate - 2/24,'DDMONYY') from dual
	]]>
	</select>
	<select id="getinitBeforeSysdate2HH24" parameterClass="java.lang.String"
		resultClass="java.lang.String">
	<![CDATA[	
		select to_char(sysdate - 2/24,'HH24') from dual
	]]>
	</select>

	<select id="getinitBeforeSysdate2MIN" parameterClass="java.lang.String"
		resultClass="java.lang.String">
	<![CDATA[	
		select to_char(sysdate - 2/24,'MI') from dual
	]]>
	</select>     
    
    <select id="getinitAfter2daysHH24MIN" parameterClass="java.lang.String"
		resultClass="java.lang.String">
	<![CDATA[	
		select to_char(sysdate + 2,'DDMONYY') from dual
	]]>
	</select>
        
    <select id="getinitAfter2HH24MIN" parameterClass="java.lang.String"
		resultClass="java.lang.String">
	<![CDATA[	
		select to_char(sysdate + 2/24,'DDMONYY') from dual
	]]>
	</select>
	<select id="getinitAfterSysdate2HH24" parameterClass="java.lang.String"
		resultClass="java.lang.String">
	<![CDATA[	
		select to_char(sysdate + 2/24,'HH24') from dual
	]]>
	</select>

	<select id="getinitAfterSysdate2MIN" parameterClass="java.lang.String"
		resultClass="java.lang.String">
	<![CDATA[	
		select to_char(sysdate + 2/24,'MI') from dual
	]]>
	</select> 
	<!--  Changed for QR :: Ranjith -->
 	<select id="imp_amend_search_bkg_dtls" parameterClass="cargo.cms.imprt.bo.AmendCollSlotSearchBO" 
 		resultClass="cargo.cms.imprt.bo.AmendCollSlotBkgLstBO">
 		<![CDATA[
			SELECT BOOKING_NO as bkgNo, 		  
					 TO_CHAR(CR_DATE, 'DDMONYY HH24:MI') as creationDt, 
			  RTRIM(nvl(TRUCK1,'') ||' , '|| nvl(TRUCK2,'') ||' , '|| nvl(TRUCK3,'') ||' , '|| nvl(TRUCK4,'') 
						||' , '|| nvl(TRUCK5,'') ||' , '|| nvl(TRUCK6,''),  ' , ') truckNo,         
			  case when  decode(TRUCK1,null,0,1) + decode(TRUCK2,null,0,1) + decode(TRUCK3,null,0,1) +
              decode(TRUCK4,null,0,1) + decode(TRUCK5,null,0,1) + decode(TRUCK6,null,0,1)  > 3 then '2' else '1' end noTruckDocks, 
				COLL_PERSON_NAME as collBy, TO_CHAR(BKG_SLOT_DATE, 'DDMONYY') bkgTimeSlotDt,
				SUBSTR(TRIM(TO_CHAR(NVL(BKG_SLOT_FROM,0),'0000')),0,2)|| ':' || 
				SUBSTR(TRIM(TO_CHAR(NVL(BKG_SLOT_FROM,0),'0000')),3,4) bkgTimeSlotFromStr, 
				SUBSTR(TRIM(TO_CHAR(NVL(BKG_SLOT_TO,0),'0000')),0,2)|| ':'|| 
				SUBSTR(TRIM(TO_CHAR(NVL(BKG_SLOT_TO,0),'0000')),3,4) bkgTimeSlotToStr,
				TO_CHAR(BKG_SLOT_DATE, 'DDMONYY') || ' ' || 
				SUBSTR(TRIM(TO_CHAR(NVL(BKG_SLOT_FROM,0),'0000')),0,2)|| ':' || 
				SUBSTR(TRIM(TO_CHAR(NVL(BKG_SLOT_FROM,0),'0000')),3,4)|| ' - ' || 
				SUBSTR(TRIM(TO_CHAR(NVL(BKG_SLOT_TO,0),'0000')),0,2)|| ':'|| 
				SUBSTR(TRIM(TO_CHAR(NVL(BKG_SLOT_TO,0),'0000')),3,4) as timeSlot,
				COLL_PERSON_ID as hkId, nvl(PHONE_NO,'') as phoneNo,
			   (SELECT  stragg(stringdelim(AWB_NO,', ')) FROM ( select DISTINCT AWB_NO , BOOKING_NO from IMP_BOOKING_DTL ) IMP_BOOKING_DTL 
			   						where IMP_BOOKING_DTL.BOOKING_NO = IMP_BOOKING.BOOKING_NO) awbNo ,
			    TO_CHAR(BKG_SLOT_DATE, 'DDMONYY') bkgTimeSlotDtHide,
				SUBSTR(TRIM(TO_CHAR(NVL(BKG_SLOT_FROM,0),'0000')),0,2)|| ':' || 
				SUBSTR(TRIM(TO_CHAR(NVL(BKG_SLOT_FROM,0),'0000')),3,4) bkgTimeSlotFromStrHide,
				nvl(TRUCK1,'')  truckNoOne,
				nvl(TRUCK2,'') truckNoTwo,  
				nvl(TRUCK3,'') truckNoThree ,  
				nvl(TRUCK4,'') truckNoFour,
				nvl(TRUCK5,'') truckNoFive, 
				nvl(TRUCK6,'') truckNoSix,
				SRF_ISSUED srfissuedYn,
				COLL_PERSON_NAME as collByHide, COLL_PERSON_ID as hkIdHide, nvl(PHONE_NO,'') as phoneNoHide, 
				nvl(TRUCK1,'')  truckNoOneHide,
				nvl(TRUCK2,'') truckNoTwoHide,  
				nvl(TRUCK3,'') truckNoThreeHide,  
				nvl(TRUCK4,'') truckNoFourHide,
				nvl(TRUCK5,'') truckNoFiveHide, 
				nvl(TRUCK6,'') truckNoSixHide
			FROM 
				IMP_BOOKING
			WHERE to_date( to_char(BKG_SLOT_DATE,'DDMONYY') ||' '||to_char(NVL(BKG_SLOT_FROM,0),'0000') , 'DDMONYY HH24MI') > sysdate
          		and status <> 'CANCEL' AND SRF_ISSUED = 'N' AND (
          			SELECT COUNT(1) 
          			FROM IMP_SRF SRF
          			JOIN IMP_SRF_FLT SRF_FLT
          			ON SRF.SRF_NO = SRF_FLT.SRF_NO AND SRF.STATUS <> 'VOID'
          			JOIN IMP_BOOKING_DTL BKG_DTL
          			ON SRF_FLT.AWB_NO = BKG_DTL.AWB_NO AND SRF_FLT.AWB_DATE = BKG_DTL.AWB_DATE AND
          				SRF_FLT.FLT_KEY = BKG_DTL.FLT_KEY AND SRF_FLT.FLT_DATE = BKG_DTL.FLT_DATE
          			WHERE SRF_FLT.DLV_PCS > 0 AND BKG_DTL.BOOKING_NO = IMP_BOOKING.BOOKING_NO
          		) = 0
      		]]>
      		 <isNotEmpty prepend="AND" property="bkgNo">
      		 		BOOKING_NO = #bkgNo#
      		 </isNotEmpty>
      		 <isNotEmpty prepend="AND" property="truckNo">
      		 		#truckNo# IN(TRUCK1, TRUCK2, TRUCK3, TRUCK4, TRUCK5, TRUCK6)
      		 </isNotEmpty>      		 
      		 <isNotEmpty prepend="AND" property="bookingNo">
      		 		BOOKING_NO = #bookingNo#
      		 </isNotEmpty>
      		 <isNotEmpty prepend="AND" property="agtCode">
      		 		AGENT_ID = #agtCode#
      		 </isNotEmpty>
      		 <isNotEmpty prepend="AND" property="agtName">
      		 		AGENT_ID = (SELECT CODE FROM CUST_COMPANY WHERE UPPER(CODE_DESC) = UPPER(#agtName#) AND ACTIVE = 'Y')
      		 </isNotEmpty>
      		 <isEqual property="searchBy" compareValue="CREATE">	 
	      		 <isNotEmpty property="createDtFrom">
		      		 <isNotEmpty property="createDtTo">
			      		AND (CR_DATE &gt;= TO_DATE(#createDtFrom#, 'DDMONYY') AND CR_DATE &lt;= ((TO_DATE(#createDtTo#, 'DDMONYY') + 1) - 1/24/60))
		      		 </isNotEmpty>
	      		 </isNotEmpty>
      		 </isEqual>
      		 <isEqual property="searchBy" compareValue="BKG">
				 <isNotEmpty property="bkgTimeSlotFromDt">
					 <isNotEmpty property="bkgTimeSlotToDt">
					  	<isNotEmpty property="bkgTimeSlotFromStr">
				  		 <isNotEmpty property="bkgTimeSlotToStr">
				      		  AND (TO_DATE(to_char(BKG_SLOT_DATE,'DDMONYY') ||' '||to_char(to_date(TRIM(TO_CHAR(NVL(BKG_SLOT_FROM,0),'0000')),'HH24MI'),'HH24MI'), 'DDMONYY HH24MI') &gt;= TO_DATE(#bkgTimeSlotFromDt#||' '||#bkgTimeSlotFromStr#,'DDMONYY HH24MI')  
				              AND TO_DATE(TO_CHAR(BKG_SLOT_DATE,'DDMONYY') ||' '||to_char(to_date(TRIM(TO_CHAR(NVL(BKG_SLOT_TO,0),'0000')),'HH24MI'),'HH24MI'), 'DDMONYY HH24MI') &lt;= TO_DATE(#bkgTimeSlotToDt#||' '||#bkgTimeSlotToStr#,'DDMONYY HH24MI'))  
				 		 </isNotEmpty>
				 		 </isNotEmpty>
					</isNotEmpty>
				</isNotEmpty>
			</isEqual>    		 
      		 ORDER BY BOOKING_NO
 	</select>
 	
 	<select id="imp_amend_shpmt_coll_lst" parameterClass="cargo.cms.imprt.bo.AmendCollSlotBkgLstBO"
 		resultClass="cargo.cms.imprt.bo.ShipmentCollectionLstBO">
		<![CDATA[
		select a.* from 
 		( select  bkg.BOOKING_NO bkgNo, SUBSTR(bkgDtl.AWB_NO,1,3)  awbNoPfx , SUBSTR(bkgDtl.AWB_NO,4)  awbNoSfx , 	
				SUBSTR(bkgDtl.AWB_NO,1,3)||'-'||SUBSTR(bkgDtl.AWB_NO,4) as awbNoDisp ,  bkgDtl.awb_no awbNo, to_char(bkgDtl.awb_date,'DDMONYY') awbDate ,
				bkgDtl.flt_Key fltKey, to_char(bkgDtl.flt_date,'DDMONYY') fltDate, sta, eta, ata,
      			decode(WHSE_COMPL_DATE,null,'N','Y') bdcompl,
        		decode(WHSE_COMPL_DATE , null, TO_CHAR(TO_DATE(FUN_GET_EST_COLL_TIME(bkgDtl.flt_Key,bkgDtl.flt_date,'A','BOOKING_EST_COLL_TIME',bkgDtl.AWB_NO,bkgDtl.awb_date), 'DDMONYY HH24:MI'),'DDMONYY HH24:MI'), 'Available' ) estCollTimeShow, 
        		decode(WHSE_COMPL_DATE , null, TO_CHAR(TO_DATE(FUN_GET_EST_COLL_TIME(bkgDtl.flt_Key,bkgDtl.flt_date,'A','BOOKING_EST_COLL_TIME',bkgDtl.AWB_NO,bkgDtl.awb_date), 'DDMONYY HH24:MI'),'HH24:MI'), TO_CHAR(sysdate,'HH24:MI') ) estCollTimeHide,
				TO_CHAR(TO_DATE(FUN_GET_EST_COLL_TIME(bkgDtl.flt_Key,bkgDtl.flt_date,'A','BOOKING_EST_COLL_TIME',bkgDtl.AWB_NO,bkgDtl.awb_date), 'DDMONYY HH24:MI'),'DDMONYY HH24:MI') estCollTime,
          		nvl(shp.Manifest_pcs,0) pcs, nvl(shp.Manifest_wt,0) wt, nvl(awbInv.invPcs,0) invPcs, nvl(awbInv.invWt,0) invWt,
				(select code_desc from cust_company where code = carAwb.agent_cust_no) agtName, carAwb.agent_cust_no agtCode, 
				carAwb.CSGNE_NAME csgnName, carAwb.CNS_CUST_NO csgnCode, 
				shp.DLV_MODE_RQS dlvModeRqs, shp.IMX_RQS imxRqs, carAwb.DOC_CHK_REQ docChkReq, DOC_CHK_COMP docChkCompl,
        		case when ( select COUNT(1) from IMP_CUST_CLR_LIST t1, IMP_CCCL_DOC_LIST t2 
					where t2.NOT_AVAILABLE = 'Y' and t1.tr_no = t2.tr_no and t1.awb_no = bkgDtl.awb_no and  t1.awb_date = bkgDtl.awb_date 
					and t1.flt_key = bkgDtl.flt_key and t1.flt_DATE = bkgDtl.flt_date) > 0 then 'Y' else 'N' end   reqDocs,  
				shp.NOA_IND noaInd, carAwb.VAL_FOR_SCH_COLL validforSchColl, 
				decode(trkMnf.truck_manf_no,null, 'Y', 'N') schColl, 
				(SELECT V.CC_CODE FROM V_CST_IMP_CC_CODE_AWB V
					WHERE V.FLT_KEY = bkgDtl.FLT_KEY AND V.FLT_DATE = bkgDtl.FLT_DATE AND V.AWB_NO = bkgDtl.AWB_NO 
				  AND NVL(V.HAWB_NO, '000000000000000000') =  '000000000000000000' AND ROWNUM = 1)  ccode, 
				nvl(carAwb.SPL_CODE1,'') ||' '|| nvl(carAwb.SPL_CODE2,'') ||' '|| nvl(carAwb.SPL_CODE3,'') ||' '|| nvl(carAwb.SPL_CODE4,'') 
				||' '|| nvl(carAwb.SPL_CODE5,'') ||' '|| nvl(carAwb.SPL_CODE6,'') ||' '|| nvl(carAwb.SPL_CODE7,'') ||' '|| nvl(carAwb.SPL_CODE8,'') 
				||' '|| nvl(carAwb.SPL_CODE9,'') shc  ,    
				bkgDtl.CHARGES  chrgs, TO_CHAR(shp.LM_DATE, 'DDMONYY HH24:MI:SSSSS') as lmDate,carAwb.CONSOLE_IND consol,
		        (select BKG_YN from mast_spl_hand_code where code in (carAwb.SPL_CODE1, carAwb.SPL_CODE2, carAwb.SPL_CODE3, carAwb.SPL_CODE4,carAwb.SPL_CODE5, carAwb.SPL_CODE6, carAwb.SPL_CODE7, carAwb.SPL_CODE8,carAwb.SPL_CODE9) AND ROWNUM = 1 ) bkgAllow,
		        (select count(1) from cust_airl_spl_code where carr_code = AWB.carr_code and spl_type = 'SPL_VAL' and spl_code in (carAwb.SPL_CODE1, carAwb.SPL_CODE2, carAwb.SPL_CODE4, carAwb.SPL_CODE3,carAwb.SPL_CODE5, carAwb.SPL_CODE6, carAwb.SPL_CODE7, carAwb.SPL_CODE8,carAwb.SPL_CODE9) AND ROWNUM = 1) valCnt,
		        (select count(1) from cust_airl_spl_code where carr_code = AWB.carr_code and spl_type = 'SPL_ODD' and spl_code in (carAwb.SPL_CODE1, carAwb.SPL_CODE2, carAwb.SPL_CODE4, carAwb.SPL_CODE3,carAwb.SPL_CODE5, carAwb.SPL_CODE6, carAwb.SPL_CODE7, carAwb.SPL_CODE8,carAwb.SPL_CODE9) AND ROWNUM = 1) oddCnt,
		        (select code_desc from cust_company where code = shp.TRUCKER_CUST_NO) truckerName ,
            	shp.TRUCKER_CUST_NO asgnTruckerCode ,   shp.TRUCKER_ASSIGN_BY asgnLoginId,
                (select HKID from SEC_USER USR  where  code = shp.TRUCKER_ASSIGN_BY) asgTruckerHkid,
                (select HKID from SEC_USER USR  where  CODE = #loginId#) loginHkid,
                bkgDtl.AIRL_CHRG airlChrgs, bkgDtl.CPCT_CHRG agtChrgs, 
                bkgDtl.AIRL_CHRG showAirlChrgs, bkgDtl.CPCT_CHRG showAgtChrgs, 
                 (case when bkgDtl.AIRL_CHRG > 0 then 'A'  end ) revIndAirl,
                 (case when bkgDtl.CPCT_CHRG > 0 then 'G'  end ) revIndGrund,
                nvl(SRF.print_ind,'N') printSrf, shp.Carr_code carrCode		       
			from IMP_BOOKING bkg
      join IMP_BOOKING_DTL bkgDtl on bkg.BOOKING_NO = bkgDtl.BOOKING_NO      
      join (select  fltEvt.WHSE_COMPL_DATE , flt.FLT_TYPE, flt.sch_date, flt.flt_Key, 
          flt.CARR_CODE, flt.ACFT_TYPE, flt.SCH_TIME estCollTimesta, flt.ACT_TIME estCollTimeata,
          SUBSTR(TRIM(TO_CHAR(NVL(flt.SCH_TIME,0),'0000')),0,2)|| ':'||  SUBSTR(TRIM(TO_CHAR(NVL(flt.SCH_TIME,0),'0000')),3,4) AS sta, 
          PKG_COMMON.get_flt_eta(flt.FLT_KEY,FLT.SCH_DATE,'A') AS eta,    
    	  PKG_COMMON.get_flt_ata(flt.FLT_KEY,FLT.SCH_DATE,'A') AS ata
          from flt_opr flt, flt_opr_events fltEvt
          where flt.flt_Key = fltEvt.flt_Key and  flt.sch_Date = fltEvt.sch_date ) fltTimes  
          on  bkgDtl.flt_Key = fltTimes.flt_Key and  bkgDtl.flt_Date = fltTimes.sch_date and fltTimes.flt_type = 'A'
    join IMP_CAR_SHP shp  on shp.awb_no = bkgDtl.awb_no and  shp.awb_date = bkgDtl.awb_date and shp.flt_Key = bkgDtl.flt_Key 
          and  shp.flt_Date = bkgDtl.flt_date  
    join IMP_CAR_AWB carAwb on bkgDtl.awb_no = carAwb.awb_no and  bkgDtl.awb_date = carAwb.awb_date                  
    join AWB on bkgDtl.awb_no = AWB.awb_no and  bkgDtl.awb_date = AWB.awb_date                  
    left join (select sum(locn_pcs) invPcs, sum(locn_wt) invWt, awb_no, awb_date, flt_key, flt_date from AWB_INVENTORY 
          group by awb_no, awb_date, flt_key, flt_date) awbInv 
          on bkgDtl.awb_no = awbInv.awb_no and  bkgDtl.awb_date = awbInv.awb_date and awbInv.flt_Key = bkgDtl.flt_Key 
          and  awbInv.flt_Date = bkgDtl.flt_date 
    left join  (select trkDtl.truck_manf_no truck_manf_no, trkDtl.awb_no, trkDtl.awb_date, trkDtl.flt_key, trkDtl.flt_date, SCH_COLL_FROM, 
          decode(FINAL_TRUCK_MANF_NO, 'N', 'Y') trk_manf_flz
          from TRUCK_MANIFEST trk,  TRUCK_MANIFEST_DTL trkDtl 
          where trk.TRUCK_MANF_NO = trkDtl.TRUCK_MANF_NO 
          and to_date( to_char(SCH_COLL_DATE,'DDMONYY') ||' '||to_char(NVL(SCH_COLL_FROM,0),'0000') , 'DDMONYY HH24MI') > sysdate) trkMnf
          on bkgDtl.awb_no = trkMnf.awb_no and  bkgDtl.awb_date = trkMnf.awb_date and bkgDtl.flt_key = trkMnf.flt_key and bkgDtl.flt_DATE = trkMnf.flt_date
      left join IMP_SRF SRF ON SRF.SRF_NO = bkgDtl.SRF_NO
      left join CUST_UNDERTAKING cusUnd ON cusUnd.carr_code = awb.CARR_CODE and cusUnd.AGENT_CODE  = carAwb.agent_cust_no
      										and cusUnd.EFF_FROM < SYSDATE AND NVL(cusUnd.EFF_TO, SYSDATE) >= SYSDATE
    Where bkg.booking_no =  #bkgNo#) a
					order by  bdcompl desc , to_date(estCollTime,'DDMONYY HH24:MI') desc, ata desc
			 	]]>
 	</select>
 	
 	<select id="getAmendBookingAgtCreditBalList" parameterClass="cargo.cms.imprt.bo.ShipmentCollectionLstBO" resultClass="cargo.cms.imprt.bo.ShipmentCollectionLstBO">
	 <![CDATA[
		SELECT crdLvl creditLvl, NVL(SUM(CR_BAL), 0) creditBalance, NVL(SUM(AGTTAB.WITHHELD_BKG_AMT), 0) amtAgnstBkg, 
			(NVL(sum(CR_BAL), 0) - to_number(NVL(sum(agtTab.WITHHELD_BKG_AMT), 0))) netCreditBalanceAvlb
  				FROM V_CREDIT_FECILITY agtTab
			WHERE NVL(AGTTAB.STATUS,'*') <> 'VOID' 
        			AND CR_EFF_DATE_FROM <= TRUNC(SYSDATE) AND NVL(CR_EFF_DATE_TO, TRUNC(SYSDATE)) >= TRUNC(SYSDATE)  
              and agtTab.CUST_NO = #agtCode# 
			AND  (instr( nvl(UPPER(CARR_CODE),'**'), nvl(UPPER(#carrCode#),'**') ) > 0 
           		OR (CARR_CODE IS NULL AND UPPER(CR_TYPE) = 'GEN')
           		or ( CARR_CODE is null and nvl(UPPER(CR_TYPE),'**') in ('IO','IG')))
      			and crdLvl in ('AGENT_LVL','DM_LVL','CPCT_LVL','CPCT_LVL_GEN') 
      			group by crdLvl	    	
   	]]>
   	</select>

	<select id="getAmendAirlBookingCreditBalList" parameterClass="cargo.cms.imprt.bo.ShipmentCollectionLstBO" resultClass="cargo.cms.imprt.bo.ShipmentCollectionLstBO">
	<![CDATA[
		SELECT crdLvl creditLvl, NVL(SUM(CR_BAL), 0) creditBalance, NVL(SUM(AGTTAB.WITHHELD_BKG_AMT), 0) amtAgnstBkg, 
			(NVL(sum(CR_BAL), 0) - to_number(NVL(sum(agtTab.WITHHELD_BKG_AMT), 0))) netCreditBalanceAvlb
  				FROM V_CREDIT_FECILITY agtTab
			WHERE NVL(AGTTAB.STATUS,'*') <> 'VOID' 
        			AND CR_EFF_DATE_FROM <= TRUNC(SYSDATE) AND NVL(CR_EFF_DATE_TO, TRUNC(SYSDATE)) >= TRUNC(SYSDATE)  
   			and agtTab.CUST_NO = #agtCode#
			AND  (instr( nvl(UPPER(CARR_CODE),'**'), nvl(UPPER(#carrCode#),'**') ) > 0 
           		OR (CARR_CODE IS NULL AND UPPER(CR_TYPE) = 'GEN')
           		or ( CARR_CODE is null and nvl(UPPER(CR_TYPE),'**') in ('IO','IG')))
      			 AND CRDLVL IN ('AGENT_LVL','DM_LVL','VIRTUAL_LVL_GEN','VIRTUAL_LVL','AIRL_LVL_GEN','AIRL_LVL')
      			group by crdLvl	    
		]]>
	</select>
	
	<select id="getAmendAirlAmtAgnstBkg" parameterClass="cargo.cms.imprt.bo.ShipmentCollectionLstBO" resultClass="java.lang.String">
	 <![CDATA[
	     select sum(bkgDtl.AIRL_CHRG) airlChrgs
				from IMP_BOOKING bkg
	      		join IMP_BOOKING_DTL bkgDtl on bkg.BOOKING_NO = bkgDtl.BOOKING_NO      
	     		join IMP_CAR_SHP shp  on shp.awb_no = bkgDtl.awb_no and  shp.awb_date = bkgDtl.awb_date 
	     								and shp.flt_Key = bkgDtl.flt_Key and  shp.flt_Date = bkgDtl.flt_date  
	     Where  status = 'ISSUED'  and ((bkg.agent_id = #agtCode#  ) or (bkg.TRUCKER_id =  #agtCode# )) 
	     and shp.carr_code = #carrCode#
	     and  TO_DATE(to_char(BKG_SLOT_DATE,'DDMONYY') ||' '||to_char(to_date(TRIM(TO_CHAR(NVL(BKG_SLOT_FROM,0),'0000')),'HH24MI'),'HH24MI'), 'DDMONYY HH24MI') > sysdate
	     and bkg.BOOKING_NO <> #bkgNo#
   	]]>
   	</select>
        
	<select id="getAmendAgtAmtAgnstBkg" parameterClass="cargo.cms.imprt.bo.ShipmentCollectionLstBO" resultClass="java.lang.String">
	 <![CDATA[
     	select sum(bkgDtl.CPCT_CHRG) agtChrgs
		from IMP_BOOKING bkg
		join IMP_BOOKING_DTL bkgDtl on bkg.BOOKING_NO = bkgDtl.BOOKING_NO      
		Where  status = 'ISSUED' 
			and TO_DATE(to_char(BKG_SLOT_DATE,'DDMONYY') ||' '||to_char(to_date(TRIM(TO_CHAR(NVL(BKG_SLOT_FROM,0),'0000')),'HH24MI'),'HH24MI'), 'DDMONYY HH24MI') > sysdate
			and ((bkg.agent_id = #agtCode#) or (bkg.TRUCKER_id =  #agtCode#))
			and bkg.BOOKING_NO <> #bkgNo#
   	]]>
   	</select>
 	
	<update id="cancelBooking" parameterClass="cargo.cms.imprt.bo.AmendCollSlotBkgLstBO">
		update IMP_BOOKING set status = 'CANCEL' , lm_date = sysdate , lm_user_id = #loginId# where BOOKING_NO = #bkgNo#				
	</update>
	
	
	<select id="checkForValidAgent" parameterClass="java.lang.String" resultClass="java.lang.String">
	  select case when (SELECT decode(COUNT(1),0,'','X') FROM cust_company WHERE code_desc = #codeDesc#) is not null then 'X'
      else  (SELECT decode(COUNT(1),0,'','X') FROM IMP_CAR_AWB WHERE APPNTD_AGENT = #codeDesc#) end from dual
	</select>	
		
	<select id="imp_amend_shpmt_WOBooking_coll_lst" parameterClass="cargo.cms.imprt.bo.AmendCollSlotSearchBO"
 		resultClass="cargo.cms.imprt.bo.ShipmentCollectionLstBO">
		<![CDATA[
 		select a.* from (select shp.rowid rid, (case when carAwb.agent_cust_no = #loginCustNo#  then 'AGT' else 
				   case when shp.TRUCKER_CUST_NO =  #loginCustNo#  then 'TRK'  end end ) listType,
				   SUBSTR(shp.AWB_NO,1,3)  awbNoPfx , SUBSTR(shp.AWB_NO,4)  awbNoSfx , 	
				SUBSTR(shp.AWB_NO,1,3)||'-'||SUBSTR(shp.AWB_NO,4) as awbNoDisp ,  shp.awb_no awbNo, to_char(shp.awb_date,'DDMONYY') awbDate ,
				shp.flt_Key fltKey, to_char(shp.flt_date,'DDMONYY') fltDate, sta  , eta, ata,
				 (case when carAwb.awb_pcs <> shp.MANIFEST_PCS then 'Y'  else 'N' end ) partShpInd,
        		(case when shp.MANIFEST_PCS <> deliveryPcs then 'Y'  else  'N' end) partRlsInd,
				decode(fltTimes.WHSE_COMPL_DATE,null,'N','Y') bdcompl,
				 decode(fltTimes.WHSE_COMPL_DATE , null, TO_CHAR(TO_DATE(FUN_GET_EST_COLL_TIME(shp.flt_Key,shp.flt_date,'A','BOOKING_EST_COLL_TIME',shp.AWB_NO,shp.awb_date), 'DDMONYY HH24:MI'),'DDMONYY HH24:MI'), 'Available' ) estCollTimeShow, 
        		decode(fltTimes.WHSE_COMPL_DATE , null, TO_CHAR(TO_DATE(FUN_GET_EST_COLL_TIME(shp.flt_Key,shp.flt_date,'A','BOOKING_EST_COLL_TIME',shp.AWB_NO,shp.awb_date), 'DDMONYY HH24:MI'),'HH24:MI'), TO_CHAR(sysdate,'HH24:MI') ) estCollTimeHide,
				TO_CHAR(TO_DATE(FUN_GET_EST_COLL_TIME(shp.flt_Key,shp.flt_date,'A','BOOKING_EST_COLL_TIME',shp.AWB_NO,shp.awb_date), 'DDMONYY HH24:MI'),'DDMONYY HH24:MI') estCollTime,
				nvl(shp.Manifest_pcs,0) pcs, nvl(shp.Manifest_wt,0) wt, nvl(awbInv.invPcs,0) invPcs, nvl(awbInv.invWt,0) invWt,
				(select code_desc from cust_company where code = carAwb.agent_cust_no) agtName, carAwb.agent_cust_no agtCode, 
				carAwb.CSGNE_NAME csgnName, carAwb.CNS_CUST_NO csgnCode, 
				shp.DLV_MODE_RQS dlvModeRqs, shp.IMX_RQS imxRqs, carAwb.DOC_CHK_REQ docChkReq, DOC_CHK_COMP docChkCompl,
				case when ( select COUNT(1) from IMP_CUST_CLR_LIST t1, IMP_CCCL_DOC_LIST t2 
					where t2.NOT_AVAILABLE = 'Y' and t1.tr_no = t2.tr_no and t1.awb_no = shp.awb_no and  t1.awb_date = shp.awb_date 
					and t1.flt_key = shp.flt_key and t1.flt_DATE = shp.flt_date) > 0 then 'Y' else 'N' end   reqDocs,  
				shp.NOA_IND noaInd, carAwb.VAL_FOR_SCH_COLL validforSchColl, 
				decode(trkMnf.truck_manf_no,null, 'Y', 'N') schColl, 
				(SELECT V.CC_CODE FROM V_CST_IMP_CC_CODE_AWB V
					WHERE V.FLT_KEY = shp.FLT_KEY AND V.FLT_DATE = shp.FLT_DATE AND V.AWB_NO = shp.AWB_NO 
				  AND NVL(V.HAWB_NO, '000000000000000000') =  '000000000000000000' AND ROWNUM = 1)  ccode, 
				nvl((SELECT (SELECT BOOKING_ALLOW_IND FROM MAST_CONSTRAINT_CODE WHERE CODE = V.CC_CODE) bkgAllwYN FROM V_CST_IMP_CC_CODE_AWB V
					where V.FLT_KEY = SHP.FLT_KEY and V.FLT_DATE = SHP.FLT_DATE and V.AWB_NO = SHP.AWB_NO 
				  AND NVL(V.HAWB_NO, '000000000000000000') =  '000000000000000000' AND ROWNUM = 1),'N')  bkgAllwYN,
				nvl(carAwb.SPL_CODE1,'') ||' '|| nvl(carAwb.SPL_CODE2,'') ||' '|| nvl(carAwb.SPL_CODE3,'') ||' '|| nvl(carAwb.SPL_CODE4,'') 
				||' '|| nvl(carAwb.SPL_CODE5,'') ||' '|| nvl(carAwb.SPL_CODE6,'') ||' '|| nvl(carAwb.SPL_CODE7,'') ||' '|| nvl(carAwb.SPL_CODE8,'') 
				||' '|| nvl(carAwb.SPL_CODE9,'') shc,   
				 decode(shp.TRUCKER_CUST_NO, #loginCustNo#, DECODE(booking.BOOKING_NO,NULL, 'NO Booking', 'Booked'), 
				DECODE(shp.TRUCKER_CUST_NO, NULL, decode(booking.BOOKING_NO,NULL, 'NO Booking', 'Booked'),'Assigned'))  status, 
				decode(shp.TRUCKER_CUST_NO, #loginCustNo#, DECODE(BOOKING.BOOKING_NO,null, '1', '2'), 
				DECODE(shp.TRUCKER_CUST_NO, NULL, decode(booking.BOOKING_NO,NULL, '1', '2'),'3'))  sortStatus,    
				TO_CHAR(shp.LM_DATE, 'DDMONYY HH24:MI:SSSSS') as lmDate,carAwb.CONSOLE_IND consol,
		        (select BKG_YN from mast_spl_hand_code where code in (carAwb.SPL_CODE1, carAwb.SPL_CODE2, carAwb.SPL_CODE3, carAwb.SPL_CODE4,carAwb.SPL_CODE5, carAwb.SPL_CODE6, carAwb.SPL_CODE7, carAwb.SPL_CODE8,carAwb.SPL_CODE9) AND ROWNUM = 1 ) bkgAllow,
		        (select count(1) from cust_airl_spl_code where carr_code = AWB.carr_code and spl_type = 'SPL_VAL' and spl_code in (carAwb.SPL_CODE1, carAwb.SPL_CODE2, carAwb.SPL_CODE3, carAwb.SPL_CODE4,carAwb.SPL_CODE5, carAwb.SPL_CODE6, carAwb.SPL_CODE7, carAwb.SPL_CODE8,carAwb.SPL_CODE9) AND ROWNUM = 1) valCnt,
		        (select count(1) from cust_airl_spl_code where carr_code = AWB.carr_code and spl_type = 'SPL_ODD' and spl_code in (carAwb.SPL_CODE1, carAwb.SPL_CODE2, carAwb.SPL_CODE3, carAwb.SPL_CODE4,carAwb.SPL_CODE5, carAwb.SPL_CODE6, carAwb.SPL_CODE7, carAwb.SPL_CODE8,carAwb.SPL_CODE9) AND ROWNUM = 1) oddCnt,
		          comp.NO_OF_BOOKING_PERDAY noBkgPerDay,
            		(select code_desc from cust_company where code = shp.TRUCKER_CUST_NO) truckerName ,
            		shp.TRUCKER_CUST_NO asgnTruckerCode ,   shp.TRUCKER_ASSIGN_BY asgnLoginId,
                (select HKID from SEC_USER USR  where  code = shp.TRUCKER_ASSIGN_BY) asgTruckerHkid,
                (select HKID from SEC_USER USR  where  CODE = #loginId#) loginHkid, shp.Carr_code carrCode
			from IMP_CAR_SHP shp       
			join IMP_CAR_AWB carAwb on shp.awb_no = carAwb.awb_no and  shp.awb_date = carAwb.awb_date                  
			join AWB on shp.awb_no = AWB.awb_no and  shp.awb_date = AWB.awb_date and AWB.awb_type = 'I'                        
			left join (select sum(locn_pcs) invPcs, sum(locn_wt) invWt, awb_no, awb_date, flt_key, flt_date from AWB_INVENTORY 
			  group by awb_no, awb_date, flt_key, flt_date) awbInv 
			  on shp.awb_no = awbInv.awb_no and  shp.awb_date = awbInv.awb_date and awbInv.flt_Key = shp.flt_Key 
			  and  awbInv.flt_Date = shp.flt_date 			
			left join (select max(to_number(bkg.BOOKING_NO)) BOOKING_NO,  bkgDtl.awb_no, bkgDtl.awb_date ,  
          bkgDtl.flt_key, bkgDtl.flt_date 
          from IMP_BOOKING bkg, IMP_BOOKING_DTL bkgDtl 
          where bkg.BOOKING_NO = bkgDtl.BOOKING_NO
          and  to_date( to_char(BKG_SLOT_DATE,'DDMONYY') ||' '||to_char(NVL(BKG_SLOT_FROM,0),'0000') , 'DDMONYY HH24MI') 	> sysdate
          and bkg.status <> 'CANCEL'
          group by bkgDtl.awb_no, bkgDtl.awb_date, bkgDtl.flt_key, bkgDtl.flt_date ) booking 
          on shp.awb_no = booking.awb_no and  shp.awb_date = booking.awb_date 
          and booking.flt_key = shp.flt_key and booking.flt_date = shp.flt_date
			join (select  fltEvt.WHSE_COMPL_DATE , flt.FLT_TYPE, flt.sch_date, flt.flt_Key, 
          flt.CARR_CODE, flt.ACFT_TYPE, flt.SCH_TIME estCollTimesta, flt.ACT_TIME estCollTimeata,
          SUBSTR(TRIM(TO_CHAR(NVL(flt.SCH_TIME,0),'0000')),0,2)|| ':'||  SUBSTR(TRIM(TO_CHAR(NVL(flt.SCH_TIME,0),'0000')),3,4) AS sta, 
          PKG_COMMON.get_flt_eta(flt.FLT_KEY,FLT.SCH_DATE,'A') AS eta,    
    	  PKG_COMMON.get_flt_ata(flt.FLT_KEY,FLT.SCH_DATE,'A') AS ata 
          from flt_opr flt, flt_opr_events fltEvt
          where flt.flt_Key = fltEvt.flt_Key and  flt.sch_Date = fltEvt.sch_date and  flt.flt_type = fltEvt.flt_type) fltTimes  
          on  shp.flt_Key = fltTimes.flt_Key and  shp.flt_Date = fltTimes.sch_date and fltTimes.flt_type = 'A'
			left join  (select trkDtl.truck_manf_no truck_manf_no, trkDtl.awb_no, trkDtl.awb_date, trkDtl.flt_key, trkDtl.flt_date, SCH_COLL_FROM, 
          decode(FINAL_TRUCK_MANF_NO, 'N', 'Y') trk_manf_flz
          from TRUCK_MANIFEST trk,  TRUCK_MANIFEST_DTL trkDtl 
          where trk.TRUCK_MANF_NO = trkDtl.TRUCK_MANF_NO 
          and to_date( to_char(SCH_COLL_DATE,'DDMONYY') ||' '||to_char(NVL(SCH_COLL_FROM,0),'0000') , 'DDMONYY HH24MI') > sysdate ) trkMnf
          on shp.awb_no = trkMnf.awb_no and  shp.awb_date = trkMnf.awb_date and shp.flt_key = trkMnf.flt_key and shp.flt_DATE = trkMnf.flt_date
      left join (SELECT sf.awb_no, sf.awb_date, sf.flt_key, sf.flt_date, sum(sf.DLV_PCS) deliveryPcs,
                  sum(case when s.STATUS in ('ISSUED') then 1 else 0 end) srfYN
                FROM IMP_SRF s
                join imp_srf_flt sf on s.srf_no = sf.srf_no 
                WHERE ((SRF_EXPY_DATE > sysdate and s.STATUS = 'ISSUED') or s.STATUS = 'POSTED' 
                      or s.SRF_NO in (select SRF_NO from IMP_CDIF where VOID_USER is null ))
                group by  sf.awb_no, sf.awb_date, sf.flt_key, sf.flt_date) srf
          on shp.awb_no = srf.awb_no and  shp.awb_date = srf.awb_date and srf.flt_Key = shp.flt_Key 
          and  srf.flt_Date = shp.flt_date 
			join cust_company comp on  (agent_yn = 'Y' or trucker_yn = 'Y')  and comp.code = #loginCustNo#
      left join CUST_UNDERTAKING cusUnd ON cusUnd.carr_code = awb.CARR_CODE and cusUnd.AGENT_CODE  = carAwb.agent_cust_no
      								and cusUnd.EFF_FROM < SYSDATE AND NVL(cusUnd.EFF_TO, SYSDATE) >= SYSDATE
			Where 
			((carAwb.agent_cust_no = #loginCustNo#  ) or (shp.TRUCKER_CUST_NO =  #loginCustNo# ))
			and nvl(trkMnf.trk_manf_flz, 'N') = 'N' and nvl(srf.srfYN,0) = 0 and (shp.recd_pcs = 0 or (shp.recd_pcs > 0 and awbInv.invPcs > 0))
						
				]]>
		<isNotEmpty property="arlRowId">
           <iterate prepend="AND" property="arlRowId"
          open="(" close=")" conjunction="OR" >
              shp.rowid =  #arlRowId[]#
          </iterate>  
        </isNotEmpty>      
		 ) a where a.status &lt;&gt; 'Booked'	 order by sortStatus, bdcompl desc,to_date(estCollTime,'DDMONYY HH24:MI') desc , ata desc	
		
 	</select>
	
	<select id="getMaxDoclineNoOfBooking" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		select max(to_number(nvl(doc_line_no,0))) doclinenumer from IMP_BOOKING_dtl where booking_No = #bkgNo# 
	</select>
	
	<select id="tcsCheckingValueYN" parameterClass="java.lang.String" resultClass="java.lang.String">
		select RULE_VALUE from cmsrules where RULE_CODE = 'VAL_CHK_TCS_DOWN'
	</select>
	
	<select id="tcsAmndHrs" parameterClass="java.lang.String" resultClass="java.lang.String">
		select RULE_VALUE from cmsrules where RULE_CODE = 'BOOKING_SLOT_AMEND_TIME_HRS'
	</select>
	
	<select id="tcsAmndHrsCheck" parameterClass="java.lang.String" resultClass="java.lang.Double">
    	<![CDATA[
			select (to_date(#paramTime#,'DDMONYY HH24:MI') - nvl((select RULE_VALUE from cmsrules where RULE_CODE = 'BOOKING_SLOT_AMEND_TIME_HRS'),0)/ 24 )  - sysdate from  dual
		]]>
	</select>
	
	<select id="getPrintSrfYN" parameterClass="map" resultClass="java.lang.String">
		<![CDATA[
			SELECT PRINT_IND printSrfYN
			FROM IMP_SRF s
			join imp_srf_flt sf on s.srf_no = sf.srf_no 
			WHERE ((SRF_EXPY_DATE > sysdate and s.STATUS = 'ISSUED') or s.STATUS = 'POSTED' 
			or s.SRF_NO in (select SRF_NO from IMP_CDIF where VOID_USER is null )) 
			and sf.awb_no = #awbNo# and  sf.awb_date = #awbDate# and sf.flt_Key = #fltKey# 
			and  sf.flt_Date = #fltDate# 
		]]>
	</select>
	
	<update id="updateAmendBooking" parameterClass="cargo.cms.imprt.bo.AmendCollSlotBkgLstBO">
		update IMP_BOOKING set 
				COLL_PERSON_NAME =#collByName# , COLL_PERSON_ID = #collBy#, 
				TRUCK1 = #truckNoOne#, TRUCK2 = #truckNoTwo#, TRUCK3 = #truckNoThree#,
				TRUCK4 =#truckNoFour#, TRUCK5 = #truckNoFive#, TRUCK6 = #truckNoSix#, 
				PHONE_NO = #phoneNo# , LM_USER_ID = #loginId# , LM_DATE = sysdate, 
				BKG_SLOT_DATE = #bkgTimeSlotDt# ,BKG_SLOT_FROM = #startTime# ,BKG_SLOT_TO = #endTime#,
				HK_ID = #hkId#, COLLECT_ULD = #collectUld#, 
				PURPOSE = #bkgPurpose#, DOCK_PURPOSE = #dockPurpose#, EXP_DURATION = #expDuration#, 
				POOL_ID = #poolId#, DEL_ZONE = #deliveryZone#
		Where BOOKING_NO = #bkgNo# 
	</update>
	
	<insert id="insertAmendBooking" parameterClass="cargo.cms.imprt.bo.AmendCollSlotBkgLstBO">
		Insert into IMP_BOOKING (BOOKING_NO,BOOKING_DATE,COLL_PERSON_NAME,COLL_PERSON_ID,TRUCK1,TRUCK2,TRUCK3,TRUCK4,TRUCK5,
		TRUCK6,PHONE_NO,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,BKG_SLOT_DATE,BKG_SLOT_FROM,BKG_SLOT_TO,HK_ID,STATUS,COLLECT_ULD,
		PURPOSE, DOCK_PURPOSE, EXP_DURATION) 
		values ( #bkgNo#,sysdate,#loginCustName#,#loginCustNo#,#collByName#,#collBy#,#truckNoOne#,#truckNoTwo#,#truckNoThree#,#truckNoFour#,#truckNoFive#,
		#truckNoSix#,#phoneNo#,#loginId#,sysdate,#loginId#,sysdate,#bkgTimeSlotDt#,#bkgTimeSlotFromStr#,#bkgTimeSlotToStr#,#hkId#,'ISSUED',#collectUld#,
		#bkgPurpose#, #dockPurpose#, #expDuration#)
	</insert>
	
	<insert id="insertAmendBookingDtl" parameterClass="cargo.cms.imprt.bo.ShipmentCollectionLstBO">
		Insert into IMP_BOOKING_DTL (BOOKING_NO,DOC_LINE_NO,AWB_NO,AWB_DATE,FLT_KEY,FLT_DATE,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,CHARGES,AUTH_REP_NAME,AUTH_REP_ID,AIRL_CHRG,CPCT_CHRG) 
		values (#bookingNo#,#docLineNumber#,#awbNo#,#awbDate#,#fltKey#,#fltDate#,#loginId#,sysdate,#loginId#,sysdate,#chrgs#,#asgnTruckerCode#,#asgnLoginId#,#airlChrgs#,#agtChrgs#)
	</insert>
	
	<update id="amendBookingDtl" parameterClass="cargo.cms.imprt.bo.ShipmentCollectionLstBO">
			update IMP_BOOKING_DTL 
			    set
			    DOC_LINE_NO = #docLineNumber#,
			    LM_USER_ID = #loginId#,
			    LM_DATE = sysdate,
			    CHARGES = #chrgs#,
			    AUTH_REP_NAME = #asgnTruckerCode#,
			    AUTH_REP_ID = #asgnLoginId#,
			    AIRL_CHRG = #airlChrgs#,
			    CPCT_CHRG = #agtChrgs#
			    where  BOOKING_NO = #bookingNo# and 
			     AWB_NO = #awbNo# and 
			    AWB_DATE = to_date(#awbDate#,'DDMONYY') and 
			    FLT_KEY = #fltKey# and 
			    FLT_DATE = to_date(#fltDate#,'DDMONYY')		
	</update>
	
	<delete id="deleteBookingDtl" parameterClass="cargo.cms.imprt.bo.ShipmentCollectionLstBO">
			delete from  IMP_BOOKING_DTL 
			    where  BOOKING_NO = #bookingNo# and
			     AWB_NO = #awbNo# and 
			    AWB_DATE = to_date(#awbDate#,'DDMONYY') and 
			    FLT_KEY = #fltKey# and 
			    FLT_DATE = to_date(#fltDate#,'DDMONYY')		
	</delete>
 <!-- Amend Collection Slot :: Anup :: Ends -->
 <!-- Flight Document Report :: breakdown -->
 	<!-- For 'AVI' -->
	<select id="flight_report_getAVISplIMBFR" parameterClass="cargo.cms.imprt.bo.FlightReportBO" 
		resultClass="cargo.cms.imprt.bo.SplHdlgShipmentFRBO" >
		select 'SPL' as type, 'AVI' as code, count(1) as noOfShp 
		from IMP_CAR_SHP s
		join IMP_CAR_AWB a on a.AWB_NO = s.AWB_NO AND a.AWB_DATE = s.AWB_DATE
		where FLT_KEY = #fltKey# AND FLT_DATE = to_date(#fltDate#,'DDMONYY')
		AND (SPL_CODE1 in ('AVI') or SPL_CODE2 in ('AVI') or SPL_CODE3 in ('AVI') or SPL_CODE4 in ('AVI')
			or SPL_CODE5 in ('AVI') or SPL_CODE6 in ('AVI') or SPL_CODE7 in ('AVI') or SPL_CODE8 in ('AVI') or SPL_CODE9 in ('AVI'))
	</select>
	<!-- For 'DG' -->
	<select id="flight_report_getDGSplIMBFR" parameterClass="cargo.cms.imprt.bo.FlightReportBO" 
		resultClass="cargo.cms.imprt.bo.SplHdlgShipmentFRBO" >
		select 'SPL' as type, 'DG' as code, count(1) as noOfShp 
		from IMP_CAR_SHP s
		join IMP_CAR_AWB a on a.AWB_NO = s.AWB_NO AND a.AWB_DATE = s.AWB_DATE
		where FLT_KEY = #fltKey# AND FLT_DATE = to_date(#fltDate#,'DDMONYY')
		AND (SPL_CODE1 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_DANG' 
							 and CUST_NO = (Select CODE from CUST_COMPANY where CARR_CODE = s.CARR_CODE)) 
			or SPL_CODE2 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_DANG' 
							 and CUST_NO = (Select CODE from CUST_COMPANY where CARR_CODE = s.CARR_CODE)) 
			or SPL_CODE3 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_DANG' 
							 and CUST_NO = (Select CODE from CUST_COMPANY where CARR_CODE = s.CARR_CODE)) 
			or SPL_CODE4 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_DANG' 
							 and CUST_NO = (Select CODE from CUST_COMPANY where CARR_CODE = s.CARR_CODE)) 
			or SPL_CODE5 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_DANG' 
							 and CUST_NO = (Select CODE from CUST_COMPANY where CARR_CODE = s.CARR_CODE)) 
			or SPL_CODE6 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_DANG' 
							 and CUST_NO = (Select CODE from CUST_COMPANY where CARR_CODE = s.CARR_CODE)) 
			or SPL_CODE7 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_DANG' 
							 and CUST_NO = (Select CODE from CUST_COMPANY where CARR_CODE = s.CARR_CODE)) 
			or SPL_CODE8 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_DANG' 
							 and CUST_NO = (Select CODE from CUST_COMPANY where CARR_CODE = s.CARR_CODE))
			or SPL_CODE9 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_DANG' 
							 and CUST_NO = (Select CODE from CUST_COMPANY where CARR_CODE = s.CARR_CODE)) 
			)
	</select>
	<!-- For 'VAL'  SPL_VAL -->
	<select id="flight_report_getVALSplIMBFR" parameterClass="cargo.cms.imprt.bo.FlightReportBO" 
		resultClass="cargo.cms.imprt.bo.SplHdlgShipmentFRBO" >
		select 'SPL' as type, 'VAL' as code, count(1) as noOfShp 
		from IMP_CAR_SHP s
		join IMP_CAR_AWB a on a.AWB_NO = s.AWB_NO AND a.AWB_DATE = s.AWB_DATE
		where FLT_KEY = #fltKey# AND FLT_DATE = to_date(#fltDate#,'DDMONYY')
		AND (SPL_CODE1 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_VAL' 
							 and CUST_NO = (Select CODE from CUST_COMPANY where CARR_CODE = s.CARR_CODE)) 
			or SPL_CODE2 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_VAL' 
							 and CUST_NO = (Select CODE from CUST_COMPANY where CARR_CODE = s.CARR_CODE)) 
			or SPL_CODE3 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_VAL' 
							 and CUST_NO = (Select CODE from CUST_COMPANY where CARR_CODE = s.CARR_CODE)) 
			or SPL_CODE4 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_VAL' 
							 and CUST_NO = (Select CODE from CUST_COMPANY where CARR_CODE = s.CARR_CODE)) 
			or SPL_CODE5 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_VAL' 
							 and CUST_NO = (Select CODE from CUST_COMPANY where CARR_CODE = s.CARR_CODE)) 
			or SPL_CODE6 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_VAL' 
							 and CUST_NO = (Select CODE from CUST_COMPANY where CARR_CODE = s.CARR_CODE)) 
			or SPL_CODE7 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_VAL' 
							 and CUST_NO = (Select CODE from CUST_COMPANY where CARR_CODE = s.CARR_CODE)) 
			or SPL_CODE8 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_VAL' 
							 and CUST_NO = (Select CODE from CUST_COMPANY where CARR_CODE = s.CARR_CODE))
			or SPL_CODE9 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_VAL' 
							 and CUST_NO = (Select CODE from CUST_COMPANY where CARR_CODE = s.CARR_CODE)) 
			)
	</select>
	<!-- For 'VUN' -->
	<select id="flight_report_getVUNSplIMBFR" parameterClass="cargo.cms.imprt.bo.FlightReportBO" 
		resultClass="cargo.cms.imprt.bo.SplHdlgShipmentFRBO" >
	select 'SPL' as type, 'VUN' as code, count(1) as noOfShp
	from IMP_CAR_SHP s
	join IMP_CAR_AWB a on a.AWB_NO = s.AWB_NO AND a.AWB_DATE = s.AWB_DATE
	where FLT_KEY = #fltKey# AND FLT_DATE = to_date(#fltDate#,'DDMONYY')
	AND (SPL_CODE1 in ('VUN') or SPL_CODE2 in ('VUN') or SPL_CODE3 in ('VUN') or SPL_CODE4 in ('VUN')
		or SPL_CODE5 in ('VUN') or SPL_CODE6 in ('VUN') or SPL_CODE7 in ('VUN') or SPL_CODE8 in ('VUN') or SPL_CODE9 in ('VUN'))
	</select>	
	<!--   For 'COL' -->
		<select id="flight_report_getCOLSplIMBFR" parameterClass="cargo.cms.imprt.bo.FlightReportBO" 
		resultClass="cargo.cms.imprt.bo.SplHdlgShipmentFRBO" >
		select 'WHDEST' as type, 'Cool Room Cargo(COL)' as code, count(1) as noOfShp
		from IMP_CAR_SHP s
		join IMP_CAR_AWB a on a.AWB_NO = s.AWB_NO AND a.AWB_DATE = s.AWB_DATE
		where FLT_KEY = #fltKey# AND FLT_DATE = to_date(#fltDate#,'DDMONYY')
		AND (SPL_CODE1 in ('COL') or SPL_CODE2 in ('COL') or SPL_CODE3 in ('COL') or SPL_CODE4 in ('COL')
		or SPL_CODE5 in ('COL') or SPL_CODE6 in ('COL') or SPL_CODE7 in ('COL') or SPL_CODE8 in ('COL') or SPL_CODE9 in ('COL')) 
	</select>
	<!--  For 'FRZ' -->
	<select id="flight_report_getFRZSplIMBFR" parameterClass="cargo.cms.imprt.bo.FlightReportBO" 
		resultClass="cargo.cms.imprt.bo.SplHdlgShipmentFRBO" >
		select 'WHDEST' as type, 'Freezer Room(FRZ)' as code, count(1) as noOfShp
		from IMP_CAR_SHP s
		join IMP_CAR_AWB a on a.AWB_NO = s.AWB_NO AND a.AWB_DATE = s.AWB_DATE
		where FLT_KEY = #fltKey# AND FLT_DATE = to_date(#fltDate#,'DDMONYY')
		AND (SPL_CODE1 in ('FRZ') or SPL_CODE2 in ('FRZ') or SPL_CODE3 in ('FRZ') or SPL_CODE4 in ('FRZ')
		or SPL_CODE5 in ('FRZ') or SPL_CODE6 in ('FRZ') or SPL_CODE7 in ('FRZ') or SPL_CODE8 in ('FRZ') or SPL_CODE9 in ('FRZ')) 
	</select>
	<!--  For 'RAD' -->
	<select id="flight_report_getRADSplIMBFR" parameterClass="cargo.cms.imprt.bo.FlightReportBO" 
			resultClass="cargo.cms.imprt.bo.SplHdlgShipmentFRBO" >
		select 'WHDEST' as type, 'RAD' as code, count(1) as noOfShp
		from IMP_CAR_SHP s
		join IMP_CAR_AWB a on a.AWB_NO = s.AWB_NO AND a.AWB_DATE = s.AWB_DATE
		where FLT_KEY = #fltKey# AND FLT_DATE = to_date(#fltDate#,'DDMONYY')
		AND (SPL_CODE1 in ('RAD') or SPL_CODE2 in ('RAD') or SPL_CODE3 in ('RAD') or SPL_CODE4 in ('RAD')
		or SPL_CODE5 in ('RAD') or SPL_CODE6 in ('RAD') or SPL_CODE7 in ('RAD') or SPL_CODE8 in ('RAD') or SPL_CODE9 in ('RAD')) 
	</select>
	<!-- SL -->
	<select id="flight_report_getSLSplIMBFR" parameterClass="cargo.cms.imprt.bo.FlightReportBO" 
		resultClass="cargo.cms.imprt.bo.SplHdlgShipmentFRBO" >
		select 'DISC' as type, 'SL' as code, count(1) as noOfShp from IMP_CAR_SHP 
		where FLT_KEY = #fltKey# AND FLT_DATE = to_date(#fltDate#,'DDMONYY') 
		AND 
		(CIR_PCS_TYPE = 'SL' or CIR_WT_TYPE = 'SL') AND CIR_PROC_USER is not null
	</select>
	
	<!-- SP -->
	<select id="flight_report_getSPSplIMBFR" parameterClass="cargo.cms.imprt.bo.FlightReportBO" 
		resultClass="cargo.cms.imprt.bo.SplHdlgShipmentFRBO" >
		select 'DISC' as type, 'SP' as code, count(1) as noOfShp from 
			IMP_CAR_SHP where 
			FLT_KEY = #fltKey# AND FLT_DATE = to_date(#fltDate#,'DDMONYY') 
		AND (CIR_PCS_TYPE = 'SP' or CIR_WT_TYPE = 'SP') AND CIR_PROC_USER is not null
	</select>
	
	<!-- T/S -->
	<select id="flight_report_getTSSplIMBFR" parameterClass="cargo.cms.imprt.bo.FlightReportBO" 
		resultClass="cargo.cms.imprt.bo.SplHdlgShipmentFRBO" >
		select 'DISC' as type, 'T/S' as code, count(1) as noOfShp
		from IMP_CAR_SHP s
		join IMP_CAR_AWB a on a.AWB_NO = s.AWB_NO AND a.AWB_DATE = s.AWB_DATE
		where FLT_KEY = #fltKey# AND FLT_DATE = to_date(#fltDate#,'DDMONYY') 
		AND Catalog like 'T%'
	</select>
	<!-- MISC -->
	<select id="flight_report_getSpl" parameterClass="cargo.cms.imprt.bo.FlightReportBO" 
		resultClass="cargo.cms.imprt.bo.SplHdlgShipmentFRBO" >
			SELECT 
				   RECORD_TYPE as type,
				   CODE as code,
				   NO_OF_SHP as noOfShp,
				   DOC_LINE_NO as docLineNo
			FROM IMP_FLT_HAND_WH_SPL_INFO
			WHERE 	
				  FLT_KEY = #fltKey# AND
				  FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
				  RECORD_TYPE = #recordType# AND
				  TR_NO = #reptTrNo# 
				  Order by RECORD_TYPE , CODE
	</select>
	<select id="generateBdTonnage" parameterClass="cargo.cms.imprt.bo.FlightReportBO"  resultClass="java.lang.String">
	<![CDATA[
		SELECT SUM(RECD_WT) FROM IMP_CAR_SHP WHERE FLT_KEY = #fltKey# AND TO_CHAR(FLT_DATE,'DDMONYY') = #fltDate# 
	]]>
	</select>
	<select id="flight_report_getDocSortingOffInfoIMBFR"	parameterClass="cargo.cms.imprt.bo.FlightReportBO"
	 resultClass="cargo.cms.imprt.bo.DocSortingOfficeFRBO">
	
	SELECT 
		   TR_NO as trNo,
		   DOC_LINE_NO as docLineNo,
		   TO_CHAR(INFO_DATE,'DDMONYY') as timeDate,
		   INFO_TIME as infoTime,
		   INFO_CONTENT as content,
		   INFO_USER as documentStaffAdviced,
		   INFO_ACT as resultAction,
		   substr(trim(to_char(INFO_TIME,'0000')), 0, 2) timeHour,
		   substr(trim(to_char(INFO_TIME,'0000')), 3, 4) timeMinute
	FROM IMP_FLT_HAND_DOC_OFFINFO 
	
	WHERE FLT_KEY = #fltKey# AND
		  FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
		  FROM_TO = #fromTo# AND
		  TR_NO = #reptTrNo#
	</select>
	<insert id="flight_report_insertimpflthandsummary" parameterClass="cargo.cms.imprt.bo.FlightReportBO">
	INSERT INTO IMP_FLT_HAND_SUMMARY (
	   TR_NO, REP_MODULE, CARR_CODE, 
	   FLT_NO, FLT_DATE, FLT_KEY, 
	   FLT_ATA, SVC_STD_RMK,  
		CR_USER_ID, CR_DATE,  
		LM_USER_ID, LM_DATE , BD_TONNAGE,GEN_RMK, IMAGE) 
	VALUES (#reptTrNo#, #reptType#, #carrCode#,
			#fltNo#, to_date(#fltDate#,'DDMONYY'), #fltKey#,
			#ataForInsert#, #serviceStdRemarks#, 
			#userID#, SYSDATE , 
			#userID#, SYSDATE ,#bdTonnage# ,#generalRmk#, #transactionId#
	 )
	</insert>
			
	<insert id="flight_report_insertimpflthanddocoffinfo" parameterClass="cargo.cms.imprt.bo.DocSortingOfficeFRBO">
	INSERT INTO IMP_FLT_HAND_DOC_OFFINFO (
	   TR_NO, DOC_LINE_NO, FLT_NO, 
	   FLT_DATE, FLT_KEY, 
	   CARR_CODE, FROM_TO, INFO_DATE, 
	   INFO_TIME, INFO_USER, INFO_CONTENT, 
	   INFO_ACT, CR_USER_ID, CR_DATE, 
	   LM_USER_ID, LM_DATE) 
	VALUES ( #trNo#, #docLineNo#, #fltNo#,
	    to_date(#fltDate#,'DDMONYY'), #fltKey#,
	    #carrCode#, #fromTo#, to_date(#timeDate#,'DDMONYY'),
	    #infoTime#, #documentStaffAdviced#, #content#,
	    #resultAction#, #userID#, SYSDATE,
	    #userID#, SYSDATE)	
	</insert>	
	<insert id="flight_report_insertimpflthandsplhdlgshp" parameterClass="cargo.cms.imprt.bo.SplHdlgShipmentFRBO">
	INSERT INTO IMP_FLT_HAND_WH_SPL_INFO ( 
		TR_NO, DOC_LINE_NO, FLT_DATE, 
		FLT_KEY, CARR_CODE,	RECORD_TYPE, 
		CODE, NO_OF_SHP, CR_USER_ID, 
		CR_DATE, LM_USER_ID, LM_DATE ) VALUES ( 
		#trNo#, #docLineNo#, to_date(#fltDate#,'DDMONYY'), 
		#fltKey#, #carrCode#, #type#, 
		#code#, #noOfShp#, #userID#,
	    SYSDATE, #userID#, SYSDATE)	 
	</insert>
	<delete id="flight_report_deleteMiscSpl" parameterClass="cargo.cms.imprt.bo.SplHdlgShipmentFRBO">

		  DELETE IMP_FLT_HAND_WH_SPL_INFO	
		  WHERE		
		  FLT_KEY = #fltKey# AND
		  FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
		  RECORD_TYPE = 'MISC' AND
		  DOC_LINE_NO = #docLineNo#  AND
		  TR_NO = #reptTrNo#

	</delete>
	<select id="get_flight_details_report" parameterClass="cargo.cms.imprt.bo.FlightReportBO" resultClass="cargo.cms.imprt.bo.FlightReportBO" >	
	SELECT  SUBSTR(TRIM(TO_CHAR(NVL(OPR.SCH_TIME,0),'0000')),0,2)|| ':'||  SUBSTR(TRIM(TO_CHAR(NVL(OPR.SCH_TIME,0),'0000')),3,4) sta,
			PKG_COMMON.get_flt_eta(FLT_KEY, SCH_DATE, 'A')  eta,
			PKG_COMMON.get_flt_ata(FLT_KEY, SCH_DATE, 'A')  ata,
			(select code_desc from MAST_ACFT_TYPE where code = OPR.ACFT_TYPE) cargoAcftType,
			(SELECT CODE_DESC FROM MAST_CODE_DTL WHERE CODE =OPR.WTHR_COND AND CODE_TYPE='WTH_CONDN') weather,
			pkg_common.flt_route(FLT_KEY, SCH_DATE, 'A') portOfCall
	FROM	FLT_OPR OPR
	WHERE	OPR.FLT_TYPE = 'A'
	AND		OPR.SCH_DATE = #fltDate#
	AND		OPR.FLT_KEY = #fltKey#	
	</select>
	
	<select id="flight_report_getCCSplIMBFR" parameterClass="cargo.cms.imprt.bo.FlightReportBO" 
		resultClass="cargo.cms.imprt.bo.SplHdlgShipmentFRBO" >
	select 'CC' as type,c.CODE code ,nvl(noOfShp, 0) noOfShp
		from MAST_CONSTRAINT_CODE c
		left join (select code as code, 
						  count(1) noOfShp 
				   from (SELECT V.CC_CODE code
			 	  		  from V_CST_IMP_CC_CODE_AWB V
	                          where FLT_KEY = #fltKey# AND FLT_DATE = to_date(#fltDate#,'DDMONYY')
	                              AND NVL(V.HAWB_NO, '000000000000000000') =  '000000000000000000') 
					group by CODE) S on C.CODE = S.CODE
		where IMP_FLT_RPT_YN = 'Y'
	</select>

	<delete id="flight_report_deleteDocSortingOfficeIMBFR" parameterClass="cargo.cms.imprt.bo.DocSortingOfficeFRBO">
		DELETE FROM IMP_FLT_HAND_DOC_OFFINFO
		
		WHERE 
		  FLT_KEY = #fltKey# AND
		  FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
		  DOC_LINE_NO = #docLineNo#  AND
		  TR_NO = #reptTrNo#
	</delete>
	<select id="flight_brkDwnReport_getTimeStamp" parameterClass="cargo.cms.imprt.bo.FlightReportBO" resultClass="cargo.cms.imprt.bo.TimestampFRBO">
		select 
			TSTAMP_CODE as itemCode, 
			to_char(TSTAMP_DATE,'DDMONYY') as actionedTime,
			substr(trim(to_char(TSTAMP_TIME,'0000')), 0, 2) actionedTimeHour,
		   substr(trim(to_char(TSTAMP_TIME,'0000')), 3, 4) actionedTimeMinute		
		FROM IMP_FLT_HAND_TIME_STAMP A
		where FLT_KEY=#fltKey# and FLT_DATE=#fltDate# 
		and TSTAMP_CODE in ('CRCI','PER_STIME','PER_CBDCOM','XAVICBDCOM') 
		
	</select> 
	
 <!-- Flight Document Report :: breakdown -->

 
 <!-- Import House Constraint Code Enquiry::  starts -->
 	
 	<select id="shipment_tracking_getConstraintCode"	parameterClass="cargo.cms.imprt.bo.FullAWBInfoBO"
		 resultClass="cargo.cms.imprt.bo.FullAWBInfoBO">
	SELECT
	VV.AWB_NO as awb, VV.HAWB_NO as hawb, 
	NVL(FH.manifest_desc,AA.CONTENT) as content, VV.FLT_KEY as fltKey, TO_CHAR(VV.FLT_DATE, 'DDMONYY') as fltDate,
	TO_CHAR(VV.FLT_DATE, 'DDMONYY') as fltDateDisplay ,VV.CC_CODE as ccCode
	FROM V_CST_IMP_CC_CODE_ALL  VV
	join imp_car_shp s ON s.FLT_KEY = vv.FLT_KEY AND s.FLT_DATE = vv.FLT_DATE AND s.AWB_NO = vv.AWB_NO 
	join IMP_CAR_AWB AA on aa.AWB_NO = s.AWB_NO and aa.awb_date = s.awb_date
	LEFT JOIN (SELECT FHL.AWB_NO,FHL.AWB_DATE,FHAWB.HAWB_NO,FHAWB.manifest_desc 
  	FROM EDI_FHL FHL,EDI_FHL_HAWB FHAWB WHERE FHL.TR_NO=FHAWB.TR_NO) FH ON FH.HAWB_NO = VV.HAWB_NO AND FH.AWB_NO = S.AWB_NO AND FH.AWB_DATE = S.AWB_DATE
	WHERE VV.AWB_NO = #awb# AND VV.AWB_DATE = (select max(awb_date) from  awb where  awb_no = #awb#)
	<isNotEmpty property="custCode">
		and AA.AGENT_CUST_NO = #custCode#
	</isNotEmpty> 
	order by vv.flt_key, vv.flt_date, vv.hawb_no
</select>
 
 <!-- Import House Constraint Code Enquiry:: Ends -->
 
 
 <!-- Issue Truck Seal:: Starts -->
	 <select id="selectsealnosbytruckno" parameterClass="cargo.cms.imprt.bo.IssueTruckSealBO" resultClass="cargo.cms.imprt.bo.IssueTruckSealBO">
			select seal_no as seal from truck_seal where truck_no = #truckNo#
	</select>
	
	<select id="validate_truck_in_terminal"	parameterClass="cargo.cms.imprt.bo.IssueTruckSealBO" resultClass="java.lang.String">
			SELECT TRIP_ID FROM TRUCK_TRIP WHERE TRUCK_NO = #truckNo# AND CLOSED = 'N' and CURR_LOC NOT IN ('TPA','TPX')
	</select>
	
	<select id="getSRFdtlsForTruck"	parameterClass="map" resultClass="cargo.cms.imprt.bo.IssueTruckSealBO">
			SELECT 
			S.SRF_NO as srfNo,
			A.AWB_NO as awbNo,
			to_char(A.AWB_DATE,'DDMONYY') as awbDate
			FROM IMP_SRF A
			JOIN IMP_TRUCK_SRF  S ON S.SRF_NO = A.SRF_NO
			WHERE S.TRIP_ID = #tripId#
			AND A.VOID_DATE is null
	</select>
	
	<select id="check_SRF_posted_for_truck" parameterClass="cargo.cms.imprt.bo.IssueTruckSealBO" resultClass="java.lang.Integer">
			SELECT COUNT(1) FROM IMP_SRF WHERE AWB_NO = #awbNo# 
			and awb_date = to_date(#awbDate#,'DDMONYY') and status='POSTED' and srf_no=#srfNo# AND POST_DATE IS NOT NULL
	</select>
	<select id="checkSRFVoided" parameterClass="java.lang.String" resultClass="java.lang.Integer">
			SELECT COUNT(1) FROM IMP_SRF WHERE  status='VOID' and srf_no=#srfNo# AND VOID_DATE IS NOT NULL AND VOID_USER IS NOT NULL
	</select>
	
	<select id="check_outstanding_charge_for_shipment" parameterClass="cargo.cms.imprt.bo.IssueTruckSealBO" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM BILL_CHARGE_DTL WHERE AWB_NO = #awbNo#
		and awb_date = to_date(#awbDate#,'DDMONYY') and status='PENDING' AND ((WAVR_DONE='Y' AND CHRG_AMT>0) OR WAVR_DONE='N') and srf_no=#srfNo#
	</select>
	
	<!-- Changed for QR :: RANJITH -->
	<!--<select id="check_manifest_posted_for_truck" parameterClass="cargo.cms.imprt.bo.IssueTruckSealBO" resultClass="java.lang.String">
		select 'Y' from dual
	</select>
	
	-->
	<select id="check_unique_seal" parameterClass="map" resultClass="java.lang.Integer">
		select count(1) from truck_seal where seal_no =#sealNo#
	</select>
	
	<insert id="insert_sealNo_for_truck" parameterClass="map">
	insert into truck_seal (TRIP_ID,SEAL_NO,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,TRUCK_NO) values
	(#tripId#,#sealNo#,#crUserId#,sysdate,#lmUserId#,sysdate,#truckNo#)	 
	</insert>

	<update id="delete_sealNo_for_truck" parameterClass="map">
		delete from truck_seal	WHERE SEAL_NO = #oldSealNo# and TRUCK_NO = #truckNo#
	</update>
 
 <!-- Issue Truck Seal:: Ends -->
 
 <!-- Capture SRF Delivery by Location :: Anup :: Starts -->
 	<select id="get_dlv_endorsement_user" parameterClass="java.lang.String" 
 		resultClass="java.lang.String">
 		SELECT 
 			CODE AS username
		FROM 
			SEC_USER
		WHERE 
			UPPER(CODE) = UPPER(#username#)
 	</select>
 	<select id="get_dlv_endorsement_password" parameterClass="java.lang.String" 
 		resultClass="java.lang.String">
 		SELECT 
 			USER_PASSWORD  AS orgPwd
		FROM 
			SEC_USER
		WHERE 
			UPPER(CODE) = UPPER(#username#)
 	</select>
 	<select id="get_role_by_user" parameterClass="java.lang.String" 
 		resultClass="java.lang.String">
 		SELECT 
 			ROLE_NAME AS rolename 
 		FROM 
 			SEC_USER_ROLE 
		WHERE 
			UPPER(USER_ID)= UPPER(#username#) ORDER BY ROLE_NAME
 	</select>
 <select id="find_SRF_dtls" parameterClass="java.util.HashMap" 
 		resultClass="cargo.cms.imprt.bo.CapSRFDlvByLocDtlsBO">
 		SELECT A.SRF_PCS AS srfPc, A.SRF_WT AS srfWt, 
 			A.COLL_NAME AS collBy, A.COLL_HKID AS hkId,
    	       A.awb_cc_code as ccCodeMble
      FROM 
            IMP_SRF A 
        WHERE A.SRF_NO = #srfNo#
 	</select>
 	<select id="find_SRF_Cargo_dtls" parameterClass="java.util.HashMap" 
 		resultClass="cargo.cms.imprt.bo.CapSRFDlvByLocDtlsBO">			
		<!-- SELECT 
 			A.ULD_KEY as uldNo, A.LOCN_PCS AS locPc, A.LOCN_WT AS locWt, TO_CHAR(A.DLV_DATE, 'DDMONYY HH:MM') AS dlvTime, 
 			A.LOC_CODE as locCode, A.LSP_NO as lspNo, A.AWB_NO as awbNo,  TO_CHAR(A.AWB_DATE, 'DDMONYY') as awbDate, 
 			A.SEQ_NO as seqNo, A.DLV_IND as dlvYN, A.FLT_KEY as fltNo, TO_CHAR(A.FLT_DATE, 'DDMONYY') as fltDate, 
 			A.SRF_NO as srfNo 
		FROM 
			IMP_SRF_AWB_INVENTORY A, V_CST_IMP_CC_CODE_AWB B, IMP_SRF C 
		WHERE 
      		A.CDIF_NO IS NULL AND C.SRF_NO=A.SRF_NO AND B.FLT_KEY = A.FLT_KEY AND B.FLT_DATE = A.FLT_DATE AND 
      		B.AWB_NO = A.AWB_NO AND (B.CC_CODE = A.CC_CODE OR A.CC_CODE = 'NC') AND A.SRF_NO = #srfNo# -->
      		SELECT 
 			ULD_KEY as uldNo, LOCN_PCS AS locPc, LOCN_WT AS locWt, TO_CHAR(DLV_DATE, 'DDMONYY HH24:MI') AS dlvTime, 
 			LOC_CODE as locCode, LSP_NO as lspNo, AWB_NO as awbNo,  TO_CHAR(AWB_DATE, 'DDMONYY') as awbDate, 
 			SEQ_NO as seqNo, NVL(DLV_IND,'N') as dlvYN, FLT_KEY as fltNo, TO_CHAR(FLT_DATE, 'DDMONYY') as fltDate, 
 			SRF_NO as srfNo, REF_CDIF_NO as refCdifNo,
 			case when (SELECT count(1) FROM IMP_SRF_AWB_INVENTORY_DTL B WHERE B.SRF_NO=A.SRF_NO AND B.SEQ_NO=A.SEQ_NO  AND B.SRF_NO=A.SRF_NO) > 0 then 'Y'
        		else 'N' end hawbExistYN
		FROM 
			IMP_SRF_AWB_INVENTORY A
		WHERE 
      		CDIF_NO IS NULL AND SRF_NO = #srfNo# 
		<isNotEmpty property="lspULD">
			AND (LSP_NO = #lspULD# OR (LOC_CODE = #lspULD# AND ULD_KEY IS NULL AND LSP_NO IS NULL) OR ULD_KEY = #lspULD#)			
      	</isNotEmpty>
 	</select>
 	<select id="findCCCodeChngdStatus" parameterClass="java.lang.String" resultClass="java.lang.Integer">
 		select count(1) from dual where NVL((select STRAGG(STRINGDELIM( A.CC_CODE, ','))  FROM  (select CC_CODE from IMP_SRF_FLT
       where SRF_NO = #srfNo#) A),'*')
       in NVl((SELECT  pkg_common.get_srf_cc( #srfNo#)  from dual ),'*')
 	</select>
 	<select id="imp_srf_awb_dtls" parameterClass="java.util.HashMap"
 		resultClass="cargo.cms.imprt.bo.CapSRFDlvByLocEndorseBO">
 		SELECT 
 			B.CODE as splCode, B.ENDR_SRF_CAP_DLV_LOC as endorseSRF, A.AWB_NO as awbNo, 
 			SUBSTR(A.AWB_NO,1,3)||'-'||SUBSTR(A.AWB_NO,4) as awbNoDisp 
		FROM 
			IMP_CAR_AWB A, MAST_SPL_HAND_CODE B 
		WHERE 
			(B.CODE = A.SPL_CODE1 OR B.CODE = A.SPL_CODE2 OR B.CODE = A.SPL_CODE3 OR B.CODE = A.SPL_CODE4 OR 
			B.CODE = A.SPL_CODE5 OR B.CODE = A.SPL_CODE6 OR B.CODE = A.SPL_CODE7 OR B.CODE = A.SPL_CODE8 OR B.CODE = A.SPL_CODE9) 
      		AND A.AWB_NO=#awbNo# AND A.AWB_DATE=TO_DATE(#awbDate#, 'DDMONYY') 
		ORDER BY 
			PRIORITY
 	</select>
 		<select id="chk_cc_code_for_srf" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
 	SELECT COUNT(1) FROM V_CST_IMP_CC_CODE_AWB C where C.AWB_NO=#awbNo# AND C.FLT_KEY=#fltNo# AND C.FLT_DATE=#fltDate# AND C.CC_CODE = 'CA'
 	</select>
 	<select id="find_srf_hawb_loc_dtls" parameterClass="java.util.HashMap" 
 		resultClass="cargo.cms.imprt.bo.CapSRFDlvLocHawbBO">
 		SELECT 
 			AWB_NO as awbNo, LOC_CODE as locn 
 		FROM 
 			IMP_SRF_AWB_INVENTORY 
 		WHERE 
 			ULD_KEY = #uldNo#
 	</select>
 	<select id="find_srf_hawb_dtls" parameterClass="java.util.HashMap" 
 		resultClass="cargo.cms.imprt.bo.CapSRFDlvLocHawbBO">
 		SELECT 
 			HAWB_NO as hawbNo, LOCN_HAWB_PCS as locnPc, LOCN_HAWB_WT as locnWt,
 			B.SEQ_NO as seqNo
 			<!-- , A.DLV_PCS as dlvPc, A.DLV_WT as dlvWt --> 
 		FROM 
 			IMP_SRF_AWB_INVENTORY_DTL A, IMP_SRF_AWB_INVENTORY B 
 		WHERE 
 			B.SRF_NO=A.SRF_NO AND B.SEQ_NO=A.SEQ_NO AND B.SEQ_NO=#seqNo# AND B.SRF_NO=#srfNo#
 	</select>
 		<update id="update_srf_awb_dtls" parameterClass="java.util.HashMap">
 		<![CDATA[
			UPDATE IMP_SRF_AWB_INVENTORY 
			SET 
			DLV_PCS = NVL(DLV_PCS, 0) + #dlvPc#, DLV_WT = NVL(DLV_WT, 0) + #dlvWt#, DLV_RMK = #dlvRemark#,
			DLV_DATE = TO_DATE(#dlvTime#, 'DDMONYY HH24:MI'), DLV_IND='Y', DLV_BY = #userID#, LM_USER_ID = #userID#,
			LM_DATE = SYSDATE, TR_TYPE = NVL(#trType#,'CDSRF')
			WHERE SEQ_NO = #seqNo# AND SRF_NO = #srfNo#
		]]>
	</update>
	<select id="sqlGetIsSRFDelivered" parameterClass="java.lang.String"
		resultClass="java.lang.String">
		<![CDATA[
			SELECT DECODE(COUNT(1), 0, 'N', 'Y') FROM IMP_SRF_AWB_INVENTORY 
			WHERE SRF_NO = #PARAM# AND NVL(DLV_PCS, 0) > 0
		]]>
	</select>
	<select id="sqlGetSRFDlvTimeSnapshot" parameterClass="java.lang.String"
		resultClass="java.lang.String">
		<![CDATA[
			SELECT TO_CHAR(MAX(DLV_SNAP_TIME), 'DDMONYY HH24:MI') FROM IMP_SRF WHERE SRF_NO = #PARAM#
		]]>
	</select>
	<update id="sqlUpdateSRFDlvTimeSnapshot" parameterClass="java.lang.String">
 		<![CDATA[
			UPDATE IMP_SRF SET DLV_SNAP_TIME = SYSDATE WHERE SRF_NO = #PARAM# AND DLV_SNAP_TIME IS NULL
		]]>
	</update>
<update id="update_srf_awb_endorsement" parameterClass="java.util.HashMap">
		UPDATE 
			IMP_SRF_AWB_INVENTORY 
		SET 
			ENDORSE_USER=#username#, ENDORSE_USER_TIME=TO_DATE(#endorseTime#, 'DDMONYY HH24MI'), LM_USER_ID=#userID#, 
			LM_DATE=SYSDATE, ENDORSED_DC_BY=#endorseDCBy#, ENDORSED_DC_DATE=TO_DATE(#endorseDCTime#, 'DDMONYY HH24MI') ,tr_type = NVL(#trType#,'CDSRF')
		WHERE 
			SEQ_NO = #seqNo# AND SRF_NO=#srfNo#
	</update>
	<update id="update_srf_hawb_dtls" parameterClass="cargo.cms.imprt.bo.CapSRFDlvLocHawbBO">	
		UPDATE 
			IMP_SRF_AWB_INVENTORY_DTL 
		SET 
			DLV_PCS=NVL(DLV_PCS, 0) + #dlvPc#, DLV_WT=NVL(DLV_WT, 0) + #dlvWt#, LM_USER_ID=#userid#, LM_DATE=SYSDATE 
		WHERE 
			HAWB_NO = #hawbNo# AND SEQ_NO=#seqNo# AND SRF_NO=#srfNo#
	</update>
	<update id="update_srf_dlv_flt" parameterClass="java.util.HashMap">	
		UPDATE 
			IMP_SRF_FLT 
		SET 
			DLV_PCS = NVL(DLV_PCS, 0) + #dlvPc#, DLV_WT = NVL(DLV_WT, 0) + #dlvWt#, LM_USER_ID=#userID#, LM_DATE=SYSDATE 
		WHERE 
			SRF_NO=#srfNo# 
			<isEmpty property="refCdifNo">
				AND FLT_DATE=#fltDate# AND FLT_KEY=#fltNo# 
			</isEmpty>
			<isNotEmpty property="refCdifNo">
				AND FLT_KEY=#refCdifNo# 
			</isNotEmpty>
	</update>
	<select id="find_srf_verified_status" parameterClass="java.lang.String" 
		resultClass="java.lang.String">
		SELECT 
			VERIFIED as srfVerified 
		FROM 
			IMP_SRF 
		WHERE 
			SRF_NO = #srfNo#
	</select>
	<select id="find_awb_inv_dtls_wit_td" parameterClass="java.util.HashMap" 
		resultClass="cargo.cms.imprt.bo.ImpXomBO">
		SELECT 
			AWB_NO as awbNo, TO_CHAR(AWB_DATE, 'DDMONYY') as awbDate, FLT_KEY as fltKey, 
			TO_CHAR(FLT_DATE, 'DDMONYY') as fltDate, ULD_KEY as uldKey, LOC_CODE as locn, 
			LOCN_PCS as locnPc, LOCN_WT as locnWt, CARR_CODE as carrCode, SRF_NO as srfNo, 
			LSP_NO as lspNo, SEQ_NO as seqNo, CC_CODE as ccCode, FLT_TYPE as fltType 
		FROM 
			AWB_INVENTORY 
		WHERE 
			AWB_NO=#awbNo# AND AWB_DATE=TO_DATE(#awbDate#, 'DDMONYY') AND FLT_KEY=#fltNo# 
			AND FLT_DATE=TO_DATE(#fltDate#, 'DDMONYY') AND DLV_YN='Y' AND SRF_NO=#srfNo# 
			AND LOC_CODE=#locCode#
			<!--  commented by srinivas for bug fix for inserting duplicate record --> 
			<!--<isNotEmpty prepend="AND" property="lspNo">
				LSP_NO=#lspNo#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="uldNo">
				ULD_KEY=#uldNo#
			</isNotEmpty>
			<isEmpty prepend="AND" property="lspNo">
				<isEmpty property="uldNo">
				LSP_NO IS NULL AND ULD_KEY IS NULL
				</isEmpty>
			</isEmpty>-->
			</select>
	<select id="find_awb_inv_dtls_witot_td" parameterClass="java.util.HashMap" 
		resultClass="cargo.cms.imprt.bo.ImpXomBO">
		SELECT 
			AWB_NO as awbNo, TO_CHAR(AWB_DATE, 'DDMONYY') as awbDate, FLT_KEY as fltKey, 
			TO_CHAR(FLT_DATE, 'DDMONYY') as fltDate, ULD_KEY as uldKey, LOC_CODE as locn, 
			LOCN_PCS as locnPc, LOCN_WT as locnWt, CARR_CODE as carrCode, SRF_NO as srfNo, 
			LSP_NO as lspNo, SEQ_NO as seqNo, CC_CODE as ccCode, FLT_TYPE as fltType 
		FROM 
			AWB_INVENTORY 
		WHERE 
			AWB_NO=#awbNo# AND AWB_DATE=TO_DATE(#awbDate#, 'DDMONYY') AND FLT_KEY=#fltNo# 
			AND FLT_DATE=TO_DATE(#fltDate#, 'DDMONYY') AND DLV_YN='N' AND SRF_NO=#srfNo# 
			<!-- AND LOC_CODE!=#locCode# --> 
			<!--<isNotEmpty prepend="AND" property="lspNo">
				LSP_NO=#lspNo#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="uldNo">
				ULD_KEY=#uldNo#
			</isNotEmpty>
			<isEmpty prepend="AND" property="lspNo">
				<isEmpty property="uldNo">
				LSP_NO IS NULL AND ULD_KEY IS NULL
				</isEmpty>
			</isEmpty>-->
	</select>
	<insert id="insert_awb_inv" parameterClass="java.util.HashMap">
		INSERT INTO 
			AWB_INVENTORY 
			(AWB_NO, AWB_DATE, FLT_KEY, FLT_DATE, LOC_CODE, LOCN_PCS, LOCN_WT, 
			CARR_CODE, STRG_DATE, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE, SEQ_NO, 
			SRF_NO, DLV_YN, CC_CODE, FLT_TYPE, REF_TR_TYPE, REF_TR_NO, REF_TR_DATE, CDIF_NO,RTN_NO) 
		VALUES
			(#awbNo#, TO_DATE(#awbDate#, 'DDMONYY'), #fltKey#, TO_DATE(#fltDate#, 'DDMONYY'), 
			#locn#, #locPc#, #locWt#, #carrCode#, SYSDATE, #userid#, SYSDATE, #userid#, 
			SYSDATE, #seqNo#, #srfNo#, #dlvYN#, #ccCode#, #fltType#, #refTRType#, 
			#refTRNo#, SYSDATE, #cdifNo# , #rtnNo#)  
	</insert>
	<update id="update_awb_inv_pcwt_decre" parameterClass="java.util.HashMap">	
		UPDATE 
			AWB_INVENTORY 
		SET 
			LOCN_PCS = LOCN_PCS - #dlvPc#, LOCN_WT = LOCN_WT - #dlvWt#, LM_USER_ID=#userID#, LM_DATE=SYSDATE , ref_awb_event = #trType#
		WHERE 
			SEQ_NO=#seqNo#
			<!--AWB_NO=#awbNo# AND AWB_DATE=TO_DATE(#awbDate#, 'DDMONYY') AND FLT_KEY=#fltNo# 
			AND FLT_DATE=TO_DATE(#fltDate#, 'DDMONYY') AND DLV_YN='N' AND SRF_NO=#srfNo# 
			<isNotEmpty prepend="AND" property="lspNo">
				LSP_NO=#lspNo#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="uldNo">
				ULD_KEY=#uldNo#
			</isNotEmpty>
			<isEmpty prepend="AND" property="lspNo">
				<isEmpty property="uldNo">
				LSP_NO IS NULL AND ULD_KEY IS NULL
				</isEmpty>
			</isEmpty> -->
	</update>
	<update id="update_awb_inv_pcwt_incre" parameterClass="java.util.HashMap">	
		UPDATE 
			AWB_INVENTORY 
		SET 
			LOCN_PCS = NVL(LOCN_PCS, 0) + #dlvPc#, LOCN_WT = NVL(LOCN_WT,0) + #dlvWt#, LM_USER_ID=#userID#, LM_DATE=SYSDATE, ref_awb_event = #trType# 
		WHERE 
			SEQ_NO=#seqNo#
			<!-- AWB_NO=#awbNo# AND AWB_DATE=TO_DATE(#awbDate#, 'DDMONYY') AND FLT_KEY=#fltNo# 
			AND FLT_DATE=TO_DATE(#fltDate#, 'DDMONYY') AND DLV_YN='Y' AND SRF_NO=#srfNo# 
			<isNotEmpty prepend="AND" property="lspNo">
				LSP_NO=#lspNo#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="uldNo">
				ULD_KEY=#uldNo#
			</isNotEmpty>
			<isEmpty prepend="AND" property="lspNo">
				<isEmpty property="uldNo">
				LSP_NO IS NULL AND ULD_KEY IS NULL
				</isEmpty>
			</isEmpty> -->
	</update>
	<delete id="delete_awb_inv_entry" parameterClass="java.util.HashMap">
		DELETE FROM
			AWB_INVENTORY
		WHERE
			SEQ_NO=#seqNo#
			<!-- AWB_NO=#awbNo# AND AWB_DATE=TO_DATE(#awbDate#, 'DDMONYY') AND FLT_KEY=#fltNo# 
			AND FLT_DATE=TO_DATE(#fltDate#, 'DDMONYY') AND DLV_YN='N' AND SRF_NO=#srfNo# 
			<isNotEmpty prepend="AND" property="lspNo">
				LSP_NO=#lspNo#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="uldNo">
				ULD_KEY=#uldNo#
			</isNotEmpty>
			<isEmpty prepend="AND" property="lspNo">
				<isEmpty property="uldNo">
				LSP_NO IS NULL AND ULD_KEY IS NULL
				</isEmpty>
			</isEmpty> -->
	</delete>
	<select id="findTruckDockForSRF" parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT 
			B.TRUCK_DOCK 
		FROM 
			IMP_TRUCK_SRF A, TRUCK_TRIP B 
		WHERE 
			B.TRIP_ID=A.TRIP_ID AND A.SRF_NO=#srfNo# and B.CLOSED = 'N'
	</select>
	<select id="findCollCenterForSRF" parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT COLL_CENTER FROM IMP_SRF WHERE SRF_NO=#srfNo#
	</select>
	<!-- Changed for QR :: RANJITH -->
	<select id="findLocationAvailableToCollect" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		<!-- SELECT COUNT(1) FROM IMP_SRF_AWB_INVENTORY WHERE DLV_IND='N' AND SRF_NO=#srfNo# -->
		<!-- Changed for QR :: RANJITH
		SELECT COUNT(1) 
		FROM IMP_SRF_AWB_INVENTORY 
		WHERE (SELECT SUM(LOCN_PCS) FROM IMP_SRF_AWB_INVENTORY WHERE SRF_NO=#srfNo#)=(SELECT 
		SUM(DLV_PCS) FROM IMP_SRF_AWB_INVENTORY WHERE SRF_NO=#srfNo#) AND (SELECT SUM(LOCN_WT) FROM IMP_SRF_AWB_INVENTORY WHERE 
		SRF_NO=#srfNo#)=(SELECT SUM(DLV_WT) FROM IMP_SRF_AWB_INVENTORY WHERE SRF_NO=#srfNo#) AND SRF_NO=#srfNo# -->
		
		SELECT COUNT(1) FROM 
				(SELECT SRF_NO , SUM(LOCN_PCS) LOCN_PC , SUM(LOCN_WT) LOCN_WT , SUM(DLV_PCS) DLV_PC , SUM(DLV_WT) DLV_WT  
					FROM IMP_SRF_AWB_INVENTORY GROUP BY SRF_NO) SRF_INV
				WHERE  SRF_INV.SRF_NO = #srfNo# AND NVL(SRF_INV.LOCN_PC,0) = NVL(SRF_INV.DLV_PC,0) AND NVL(SRF_INV.LOCN_WT,0) = NVL(SRF_INV.DLV_WT,0) 
	</select>
	<select id="findShpmntAlwdForPostSRF" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		<!-- SELECT 
			COUNT(1) 
		FROM 
			MAST_CONSTRAINT_CODE A, IMP_SRF_AWB_INVENTORY B 
		WHERE 
			A.CODE=B.CC_CODE AND A.IMP_SRF_POST_YN='Y' AND B.SEQ_NO=#seqNo# -->		
		SELECT 
			COUNT(1) 
		FROM 
			MAST_CONSTRAINT_CODE A, IMP_SRF_AWB_INVENTORY B 
		WHERE 
			A.CODE=B.CC_CODE AND A.IMP_SRF_POST_YN='N' AND (SELECT SUM(LOCN_PCS) FROM IMP_SRF_AWB_INVENTORY WHERE SRF_NO=#srfNo#)=(SELECT 
			SUM(DLV_PCS) FROM IMP_SRF_AWB_INVENTORY WHERE SRF_NO=#srfNo#) AND (SELECT SUM(LOCN_WT) FROM IMP_SRF_AWB_INVENTORY WHERE 
			SRF_NO=#srfNo#)=(SELECT SUM(DLV_WT) FROM IMP_SRF_AWB_INVENTORY WHERE SRF_NO=#srfNo#) AND B.SRF_NO=#srfNo#
	</select>
	<select id="findCapDlvStarted" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM IMP_SRF_AWB_INVENTORY WHERE NVL(DLV_IND,'N') = 'Y' AND SRF_NO=#srfNo#
	</select>
	<select id="findAwbInvSeqNoByLocCode" resultClass="java.lang.String" parameterClass="java.util.HashMap">
		SELECT 
			SEQ_NO 
		FROM 
			AWB_INVENTORY 
		WHERE 
			AWB_NO=#awbNo# AND AWB_DATE=TO_DATE(#awbDate#, 'DDMONYY') AND FLT_KEY=#fltNo# 
			AND FLT_DATE=TO_DATE(#fltDate#, 'DDMONYY') AND DLV_YN='N' AND SRF_NO=#srfNo# 
			AND LOC_CODE=#locCode# 
			<isNotEmpty prepend="AND" property="lspNo">
				LSP_NO=#lspNo#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="uldNo">
				ULD_KEY=#uldNo#
			</isNotEmpty>
			<isEmpty prepend="AND" property="lspNo">
				<isEmpty property="uldNo">
				LSP_NO IS NULL AND ULD_KEY IS NULL
				</isEmpty>
			</isEmpty>
	</select>
	<select id="findAwbInvlocPcsByLocCode" resultClass="java.lang.String" parameterClass="java.util.HashMap">
		SELECT 
			LOCN_PCS 
		FROM 
			AWB_INVENTORY 
		WHERE 
			AWB_NO=#awbNo# AND AWB_DATE=TO_DATE(#awbDate#, 'DDMONYY') AND FLT_KEY=#fltNo# 
			AND FLT_DATE=TO_DATE(#fltDate#, 'DDMONYY') AND DLV_YN='N' AND SRF_NO=#srfNo# 
			AND LOC_CODE=#locCode# 
			<isNotEmpty prepend="AND" property="lspNo">
				LSP_NO=#lspNo#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="uldNo">
				ULD_KEY=#uldNo#
			</isNotEmpty>
			<isEmpty prepend="AND" property="lspNo">
				<isEmpty property="uldNo">
				LSP_NO IS NULL AND ULD_KEY IS NULL
				</isEmpty>
			</isEmpty>
	</select>
	<select id="findNextAWBInvSeqNo" resultClass="java.lang.String" parameterClass="java.lang.String">
		select AWB_INV_SEQ.NEXTVAL FROM DUAL
	</select>
	<select id="findHAWBInvDtlsBySeqNo" parameterClass="java.lang.String" resultClass="cargo.cms.imprt.bo.CapSRFDlvLocHawbBO">
		SELECT SEQ_NO as seqNo, HAWB_NO as hawbNo, STRG_PCS as strgPcs, STRG_WT as strgWt FROM HAWB_INVENTORY WHERE SEQ_NO=#seqNo#
	</select>
	<insert id="insertHAWBInventory" parameterClass="cargo.cms.imprt.bo.CapSRFDlvLocHawbBO">
		INSERT INTO 
			HAWB_INVENTORY 
			(SEQ_NO,HAWB_NO,STRG_PCS,STRG_WT,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE) 
		VALUES 
			(#seqNo#, #hawbNo#, NVL(#dlvPc#, 0), NVL(#dlvWt#, 0), #userid#, SYSDATE, #userid#, SYSDATE)
	</insert>
	<update id="updateHawbInvPcWtIncre" parameterClass="cargo.cms.imprt.bo.CapSRFDlvLocHawbBO">	
		UPDATE 
			HAWB_INVENTORY 
		SET 
			STRG_PCS=NVL(STRG_PCS, 0) + NVL(#dlvPc#, 0), STRG_WT=NVL(STRG_WT, 0) + NVL(#dlvWt#, 0), LM_USER_ID=#userid#, LM_DATE=SYSDATE 
		WHERE 
			HAWB_NO = #hawbNo# AND SEQ_NO=#seqNo#
	</update>
	<update id="updateHawbInvPcWtDecre" parameterClass="cargo.cms.imprt.bo.CapSRFDlvLocHawbBO">	
		UPDATE 
			HAWB_INVENTORY 
		SET 
			STRG_PCS=NVL(STRG_PCS, 0) - NVL(#dlvPc#, 0), STRG_WT=NVL(STRG_WT, 0) - NVL(#dlvWt#, 0), LM_USER_ID=#userid#, LM_DATE=SYSDATE 
		WHERE 
			HAWB_NO = #hawbNo# AND SEQ_NO=#seqNo#
	</update>
	<delete id="deleteHawbInv" parameterClass="cargo.cms.imprt.bo.CapSRFDlvLocHawbBO">
		DELETE FROM HAWB_INVENTORY WHERE HAWB_NO=#hawbNo# AND SEQ_NO=#seqNo#
	</delete>
	<select id="findHAWBExistsForSeqNo" resultClass="java.lang.Integer" parameterClass="cargo.cms.imprt.bo.CapSRFDlvLocHawbBO">
		SELECT COUNT(1) FROM HAWB_INVENTORY WHERE SEQ_NO=#seqNo# AND HAWB_NO=#hawbNo#
	</select>
	<select id="findUldLspEmptyStatus" resultClass="java.lang.Integer" parameterClass="java.util.HashMap">
		SELECT COUNT(1) FROM AWB_INVENTORY
		<isNotEmpty property="lspNo">
			WHERE LSP_NO=#lspNo#
		</isNotEmpty>
		<isNotEmpty property="uldNo">
			WHERE ULD_KEY=#uldNo#
		</isNotEmpty>
	</select>
	<update id="updateEmptyInUldInv" parameterClass="java.lang.String">
		UPDATE ULD_INVENTORY SET EMPTY_FLG='Y' , HANDLING_MODE = null WHERE ULD_KEY=#uldKey# 
	</update>
	<update id="updateEmptyInLspInv" parameterClass="java.lang.String">
		UPDATE LSP_INVENTORY SET EMPTY_FLG='Y' WHERE LSP_NO=#lspNo#
	</update>
	<select id="findAllLocDelivered" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM IMP_SRF_AWB_INVENTORY WHERE decode((NVL(dlv_pcs, 0)+NVL(cdif_pc, 0)),LOCN_PCS,'Y','N') = 'N' AND SRF_NO=#srfNo#
	</select>
	<select id="capDelTimeConcurrency" parameterClass="map" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM IMP_SRF_AWB_INVENTORY WHERE NVL(DLV_IND,'N') ='Y' AND SRF_NO=#srfNo# AND SEQ_NO=#seqNo#
	</select>
	<select id="isCdifCreatedForSrf" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM IMP_SRF_AWB_INVENTORY WHERE SRF_NO=#srfNo# AND CDIF_NO IS NOT NULL
	</select>
	<update id="updateAwbInvDlvIndforRevert" parameterClass="java.util.HashMap">
		UPDATE AWB_INVENTORY SET DLV_YN='N',LM_USER_ID=#userID#, LM_DATE=SYSDATE WHERE SRF_NO=#srfNo# AND DLV_YN='Y'
	</update>
	<select id="revertDlvFetchAwbInvDtls" parameterClass="java.util.HashMap" resultClass="cargo.cms.imprt.bo.CapSRFDlvByLocDtlsBO">
			SELECT 
			A.SRF_NO as srfNo, A.AWB_NO as awbNo, TO_CHAR(A.AWB_DATE, 'DDMONYY') as awbDate, A.CARR_CODE as carrCode, A.CATALOG as catalog, A.CC_CODE as ccCode, 
			A.SCH_COLL_DATE as schCollDate, A.ULD_KEY as uldKey, A.LSP_NO as lspNo, A.LOC_CODE as locCode, A.LOCN_PCS as locPc, A.LOCN_WT as locWt, 
			TO_CHAR(A.FLT_DATE, 'DDMONYY') as fltDate, A.FLT_KEY as fltNo, A.DAM_IND as damYN, A.REF_RMK as refRmk, A.CDIF_NO as cdifNo, A.SEQ_NO as seqNo, 
			A.DLV_YN as dlvYN,
      (SELECT NVL(DLV_PCS,'0') FROM IMP_SRF_AWB_INVENTORY B WHERE B.FLT_KEY        = A.FLT_KEY AND B.AWB_DATE         = A.AWB_DATE AND B.AWB_NO           = A.AWB_NO AND B.FLT_DATE         = A.FLT_DATE AND NVL(B.ULD_KEY,'*') = NVL(A.ULD_KEY,'*') AND NVL(B.LSP_NO,'*')  = NVL(A.LSP_NO,'*') AND B.LOC_CODE         = A.LOC_CODE AND B.SRF_NO=#srfNo#) AS impdlvPcs,
      (SELECT DECODE(TRUNC(TRIM(TO_CHAR(NVL(DLV_WT,0),'999999999999999999999.99'))),0,0,TRIM(TO_CHAR(NVL(DLV_WT,0),'999999999999999999999.99'))) FROM IMP_SRF_AWB_INVENTORY B WHERE B.FLT_KEY        = A.FLT_KEY AND B.AWB_DATE         = A.AWB_DATE AND B.AWB_NO           = A.AWB_NO AND B.FLT_DATE         = A.FLT_DATE AND NVL(B.ULD_KEY,'*') = NVL(A.ULD_KEY,'*') AND NVL(B.LSP_NO,'*')  = NVL(A.LSP_NO,'*') AND B.LOC_CODE         = A.LOC_CODE AND B.SRF_NO=#srfNo#) AS impdlvWt,
      (SELECT NVL(DLV_PCS,'0') FROM IMP_SRF_AWB_INVENTORY B WHERE B.FLT_KEY is null AND B.AWB_DATE = A.AWB_DATE AND B.AWB_NO = A.AWB_NO AND B.FLT_DATE is null AND NVL(B.ULD_KEY,'*') = NVL(A.ULD_KEY,'*') AND NVL(B.LSP_NO,'*') = NVL(A.LSP_NO,'*') AND A.LOC_CODE = B.LOC_CODE AND B.SRF_NO=#srfNo#) AS expdlvPcs,
      (SELECT DECODE(TRUNC(TRIM(TO_CHAR(NVL(DLV_WT,0),'999999999999999999999.99'))),0,0,TRIM(TO_CHAR(NVL(DLV_WT,0),'999999999999999999999.99'))) FROM IMP_SRF_AWB_INVENTORY B WHERE B.FLT_KEY is null AND B.AWB_DATE = A.AWB_DATE AND B.AWB_NO = A.AWB_NO AND B.FLT_DATE is null AND NVL(B.ULD_KEY,'*') = NVL(A.ULD_KEY,'*') AND NVL(B.LSP_NO,'*') = NVL(A.LSP_NO,'*') AND A.LOC_CODE = B.LOC_CODE AND B.SRF_NO=#srfNo#) AS expdlvWt ,
      C.AWB_TYPE as awbType      
		FROM 
			AWB_INVENTORY A, AWB C
		WHERE 
    C.AWB_NO = A.AWB_NO AND C.AWB_DATE = A.AWB_DATE AND
			A.SRF_NO= #srfNo#
	</select>
	<delete id="revertDlvDeleteSrfAwbInv" parameterClass="java.util.HashMap">
		DELETE FROM IMP_SRF_AWB_INVENTORY WHERE SRF_NO=#srfNo#
	</delete>
	<delete id="revertDlvDeleteSrfAwbInvDtl" parameterClass="java.util.HashMap">
		DELETE FROM IMP_SRF_AWB_INVENTORY_DTL WHERE SRF_NO=#srfNo#
	</delete>
	<insert id="revertDlvInsertSrfAwbInv" parameterClass="cargo.cms.imprt.bo.CapSRFDlvByLocDtlsBO">
		INSERT INTO 
			IMP_SRF_AWB_INVENTORY 
			(SRF_NO,AWB_NO,AWB_DATE,CARR_CODE,CATALOG,CC_CODE,SCH_COLL_DATE,ULD_KEY,LSP_NO,LOC_CODE,LOCN_PCS,LOCN_WT,FLT_DATE,FLT_KEY,CR_USER_ID,CR_DATE,
			DAM_IND,CTM_REF_NO,CDIF_NO,DLV_BY,DLV_DATE,SEQ_NO,DLV_PCS,DLV_WT,ENDORSE_USER,ENDORSE_USER_TIME,DLV_RMK,CDIF_PC,CDIF_WT,DLV_IND,LM_DATE,LM_USER_ID,
			REF_CDIF_NO,TR_TYPE,ENDORSED_DC_BY,ENDORSED_DC_DATE)
		VALUES
			(#srfNo#, #awbNo#, TO_DATE(#awbDate#, 'DDMONYY'), #carrCode#, #catalog#, #ccCode#, #schCollDate#, #uldKey#, #lspNo#, #locCode#, 
			#locPc#, #locWt#, TO_DATE(#fltDate#, 'DDMONYY'), #fltNo#, #crUserId#, SYSDATE, #damYN#, #refRmk#, '', '', '', #seqNo#, '',
			 '', '', '', '', '', '', 'N', SYSDATE, #lmUserId#, #refCdifNo# , 'REVCD','','')
	</insert>
	<select id="revertDlvFetchHawbInv" parameterClass="java.lang.String" resultClass="cargo.cms.imprt.bo.CapSRFDlvLocHawbBO">
		SELECT SEQ_NO as seqNo, HAWB_NO as hawbNo, STRG_PCS as locnPc, STRG_WT as locnWt FROM HAWB_INVENTORY WHERE SEQ_NO=#seqNo#
	</select>
	<insert id="revertDlvInsertSrfAwbInvDtl" parameterClass="cargo.cms.imprt.bo.CapSRFDlvLocHawbBO">
		INSERT INTO IMP_SRF_AWB_INVENTORY_DTL VALUES(#seqNo#, #hawbNo#, #locnPc#, #locnWt#, '', '', #crUserId#, SYSDATE, #lmUserId#, SYSDATE, #srfNo#)
	</insert>
	<update id="updateRevertDlvImpSrfFlt" parameterClass="java.util.HashMap">
		UPDATE 
			IMP_SRF_FLT 
		SET 
  			DLV_PCS='', DLV_WT='', LM_USER_ID=#userID#, LM_DATE=SYSDATE 
		WHERE 
  			SRF_NO=#srfNo# 
			<isNotEmpty property="refCdifNo">
				AND FLT_KEY=#refCdifNo# 
			</isNotEmpty>
	</update>
	
	<select id="sqlFetchDlvrdPcsWtForRvrt" parameterClass="java.lang.String" resultClass="java.util.HashMap">
		SELECT SUM(LOCN_PCS) PCS, SUM(LOCN_WT) WT FROM AWB_INVENTORY WHERE SRF_NO=#srfNo# AND DLV_YN='Y' AND CDIF_NO IS NULL group by LOCN_PCS, LOCN_WT 
	</select>
	
	<select id="sqlFetchDlvrdPcsWtForRvrtCDIF" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT SUM(LOCN_PCS) PCS, SUM(LOCN_WT) WT FROM AWB_INVENTORY WHERE SRF_NO=#srfNumber# AND DLV_YN='Y' AND CDIF_NO = #cdifNumber# group by LOCN_PCS, LOCN_WT 
	</select>
	
	<select id="sqlFetchSeqNoForRvrtDlv" parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT SEQ_NO FROM AWB_INVENTORY WHERE SRF_NO=#srfNo# AND LOC_CODE=(SELECT COLL_CENTER FROM IMP_SRF WHERE SRF_NO=#srfNo#) AND DLV_YN='N' AND CDIF_NO IS NULL
	</select>
	
	<select id="fetchSeqNoAwbInvForRvrtCDIF" parameterClass="java.lang.String" resultClass="java.util.HashMap">
		SELECT SEQ_NO,CDIF_NO,SRF_NO FROM AWB_INVENTORY WHERE SRF_NO=#srfNo# AND LOC_CODE=(SELECT COLL_CENTER FROM IMP_SRF WHERE SRF_NO=#srfNo#) AND DLV_YN='N' AND CDIF_NO IS NOT NULL
	</select>
	
	<update id="sqlUpdateAwbInvForRvrt" parameterClass="java.util.HashMap">
		UPDATE 
			AWB_INVENTORY 
		SET 
			LOCN_PCS=NVL(LOCN_PCS, 0) + NVL(#locnPcs#, 0), LOCN_WT=NVL(LOCN_WT, 0) + NVL(#locnWt#, 0), LM_DATE=SYSDATE, LM_USER_ID=#userId# 
		WHERE SEQ_NO=#seqNo#
	</update>
	
	<delete id="deleteAwbInvForRvrt" parameterClass="java.lang.String">
		DELETE FROM AWB_INVENTORY WHERE SRF_NO=#srfNo# AND DLV_YN='Y' AND CDIF_NO IS NULL
	</delete>
	
	<delete id="deleteAwbInvForRvrtCDIF" parameterClass="java.util.HashMap">
		DELETE FROM AWB_INVENTORY WHERE SRF_NO = #srfNumber# AND DLV_YN='Y' AND CDIF_NO = #cdifNumber# 
	</delete>
	
 <!-- Capture SRF Delivery by Location :: Anup :: Ends -->
 
 <!-- TRG_AWB_LOCK_INS & TRG_IMP_AWB_DAM Trigger Conversion :: Anup :: Begins -->
 	<insert id="insert_awb_events" parameterClass="cargo.cms.imprt.bo.AWBEventBO">
 		INSERT INTO 
 			AWB_EVENTS 
 			(AWB_NO, AWB_DATE, EVENT_ID, EVENT_DESC, FLT_KEY, 
			FLT_DATE, FLT_TYPE, TR_NO, ULD_KEY, PCS, WT, CR_USER_ID, 
			CR_DATE, LM_USER_ID, LM_DATE) 
		VALUES 
			(#awbNo#, TO_DATE(#awbDate#, 'DDMONYY'), #eventId#, #eventDesc#, 
			#fltKey#, TO_DATE(#fltDate#, 'DDMONYY'), #fltType#, #trNo#, #uldKey#, #pcs#, 
			#wt#, #crUserid#, SYSDATE, #lmUserId#, SYSDATE)
 	</insert>
 	<select id="find_event_desc" parameterClass="java.util.HashMap" 
 		resultClass="java.lang.String">
 		SELECT 
 			EVENT_DESC 
 		FROM 
 			MAST_AWB_EVENTS 
 		WHERE 
 			EVENT_ID = #eventId#
 	</select>
 <!-- TRG_AWB_LOCK_INS & TRG_IMP_AWB_DAM Trigger Conversion :: Anup :: Ends -->
 
 <!-- Post SRF :: Anup :: Begins -->
 	<select id="checkDlvStatusPostSRF" parameterClass="java.lang.String" resultClass="java.lang.Integer">
 		<![CDATA[
 			select count(1) from imp_srf_awb_inventory where srf_no = #srfNo# and (dlv_pcs > 0 OR cdif_pc > 0) 		
 		]]>
 	</select>
 	
	<select id="checkReturnCargoSRF" parameterClass="java.lang.String" resultClass="java.lang.Integer">
 			select count(1) from exp_rtn_hd where srf_no= #srfNo#		
 	</select>
	
	<select id="find_srf_lst" parameterClass="cargo.cms.imprt.bo.PostSRFSearchBO" 
 		resultClass="cargo.cms.imprt.bo.SRFBO">
		SELECT 
 			A.SRF_NO as srfNo, A.SRF_PCS as pcs, A.SRF_WT as wt, 
 			A.AWB_NO as awbNo, A.COLL_NAME as collBy, 
 			TO_CHAR(A.AWB_DATE, 'DDMONYY') as awbDate, 
 			A.CARR_CODE as carrCode, A.SRF_PCS as, A.CR_DATE as crDate, 
      		A.DOC_LINE_NO as docLineNo, SUBSTR(A.AWB_NO,1,3)||'-'||SUBSTR(A.AWB_NO,4) as awbNoDisp,
      		esrf_yn as esrfyn,
      		CARGO_RELEASE_STS as cargoReleaseStatus,
      		HOLD_SRF_IND as holdSrf,  
      		decode((select sum(NVL(dlv_pcs, 0))+sum(NVL(cdif_pc, 0)) from IMP_SRF_AWB_INVENTORY where SRF_NO = A.SRF_NO),A.SRF_PCS,'Y','N') dlvComp
		FROM 
			IMP_SRF A
		WHERE 
			A.VERIFIED = #printInd#   
			<isNotEmpty property="srfNo">
			and	A.SRF_NO = #srfNo# 
			</isNotEmpty>
			<isNotEmpty property="truckNo">
			AND	A.SRF_NO IN (SELECT SRF_NO FROM IMP_TRUCK_SRF WHERE TRIP_ID = (SELECT TRIP_ID FROM TRUCK_TRIP WHERE TRUCK_NO = #truckNo# AND CLOSED = 'N'))
			</isNotEmpty>
			
 	</select>
 	<select id="fetchNotYetPrintedSrfForAssociatedTrk" parameterClass="cargo.cms.imprt.bo.PostSRFSearchBO" resultClass="cargo.cms.imprt.bo.SRFBO">
 		SELECT 
 			A.SRF_NO as srfNo 
		FROM 
			IMP_SRF A, IMP_TRUCK_SRF B 
		WHERE 
			B.SRF_NO=A.SRF_NO AND A.PRINT_IND='N' 
		<isNotEmpty property="srfNo">
			AND B.TRIP_ID IN (SELECT TRIP_ID FROM IMP_TRUCK_SRF WHERE SRF_NO=#srfNo#) 
		</isNotEmpty>
		<isNotEmpty property="truckNo">
			AND B.TRIP_ID IN (SELECT TRIP_ID FROM TRUCK_TRIP WHERE TRUCK_NO=#truckNo# AND CLOSED = 'N')
		</isNotEmpty>
 	</select>
 	<select id="find_srf_cargo_rels_date" parameterClass="java.lang.String" 
 		resultClass="cargo.cms.imprt.bo.SRFBO">
 		SELECT 
 			TO_CHAR(MAX(DLV_DATE), 'DDMONYY HH24:MI') as deliveryCompleteDt, 
 			TO_CHAR(MIN(DLV_DATE), 'DDMONYY HH24:MI') as firstCargoDt 
		FROM 
			IMP_SRF_AWB_INVENTORY 
		WHERE 
			SRF_NO = #srfNo#
 	</select> 	
 	<select id="find_srf_uld_lst" parameterClass="cargo.cms.imprt.bo.PostSRFSearchBO"
 		resultClass="cargo.cms.imprt.bo.SRFUldBO">
 	 	SELECT 
 			A.ULD_KEY as uldKey, sum(A.LOCN_WT) as uldWt 
 		FROM 
 			IMP_SRF_AWB_INVENTORY A, IMP_SRF B 
			WHERE B.AWB_DATE=A.AWB_DATE AND B.AWB_NO=A.AWB_NO AND B.SRF_NO=A.SRF_NO AND  cdif_NO IS NULL 
			<isNotEmpty property="srfNo">
			and	B.SRF_NO = #srfNo#
			</isNotEmpty>
			<isNotEmpty property="truckNo">
			AND	B.SRF_NO IN (SELECT SRF_NO FROM IMP_TRUCK_SRF WHERE TRIP_ID = (SELECT TRIP_ID FROM TRUCK_TRIP WHERE TRUCK_NO = #truckNo# AND CLOSED = 'N'))
			</isNotEmpty>
			group by A.ULD_KEY
 	</select>
 	<!--  Changed for QR :: Ranjith -->
 	<select id="find_srf_post_allowed" parameterClass="java.lang.String" resultClass="java.lang.String">
 	 SELECT DECODE(cnt,0,'Y','N') 
    	from (
	 SELECT 
 		count(1) as cnt	
 		FROM 
       (SELECT CC_CODE,IMP_SRF_POST_YN,SRF_NO FROM (SELECT T1.CC_CODE,IMP_SRF_POST_YN,SRF_NO FROM V_CST_IMP_CC_CODE_AWB T1,MAST_CONSTRAINT_CODE T2 ,IMP_SRF SRF
		WHERE T1.CC_CODE = T2.CODE AND T1.AWB_NO =SRF.AWB_NO AND SRF.SRF_NO=#srfNo# AND NVL(HAWB_NO, '000000000000000000') = '000000000000000000'
		ORDER BY RECV_DATE DESC, PRIORITY DESC) WHERE ROWNUM = 1)
		WHERE  NVL(IMP_SRF_POST_YN,'Y') = 'N')
 	</select>
 	<update id="upd_img_post_srf" parameterClass="java.util.HashMap">
 		UPDATE 
 			IMP_SRF 
 		SET
 			IMG_TRANS_ID = NVL(#transId#,IMG_TRANS_ID), POST_RMK = #srfRmk#, POST_USER = #userid#, 
 			POST_DATE = TO_CHAR(SYSDATE, 'DDMONYY'), POST_TIME = TO_CHAR(SYSDATE, 'HH24MI'), 
 			STATUS = 'POSTED', LM_USER_ID = #userid#, LM_DATE = SYSDATE,TR_TYPE='POSRF',CONSTRAINED_ON_POST=#constPostSRF#  
 		WHERE 
 			SRF_NO = #srfNo#
 	</update> 	
 	
	<update id = "updateCargoRealease"  parameterClass="java.util.HashMap">
		UPDATE IMP_SRF SET cargo_release = SYSDATE, CARGO_RELEASE_STS = 'OK' where SRF_NO = #srfNo#  AND NVL(esrf_yn,'N') != 'Y'		
 	</update>
 	
 	<update id = "updateCargoRealeaseEPH"  parameterClass="java.util.HashMap">
		UPDATE IMP_SRF SET cargo_release = SYSDATE, CARGO_RELEASE_STS = 'OK' where SRF_NO = #srfNo#  AND NVL(esrf_yn,'N') = 'Y'		
 	</update>
 	
 	<select id="checkForEsrf" parameterClass="java.lang.String" resultClass="java.lang.String">
 		select NVL(esrf_yn,'N') from IMP_SRF where SRF_NO = #srfNo# 
 	</select>
 	
 	
 	
 	<select id="checkForEsrfNoCargoRelease" parameterClass="java.lang.String" resultClass="java.lang.String">
 		select NVL(esrf_yn,'N') from IMP_SRF where SRF_NO = #srfNo# AND NVL(esrf_yn,'N') = 'Y' AND cargo_release is null
 	</select>
 	
 	<select id="chkSrfIsPosted" parameterClass="java.lang.String" resultClass="java.lang.String">
 		select count(1) from IMP_SRF where SRF_NO = #srfNo# and STATUS = 'POSTED'
 	</select>
 	
 	<!-- <delete id="del_srf_in_awb_inv" parameterClass="java.util.HashMap">
 		DELETE 
 			AWB_INVENTORY 
 		WHERE
 			SRF_NO = #srfNo# AND LOC_CODE = #truckDock#
 	</delete> -->
 	<!--  Changed for QR :: Ranjith  -->
 	<select id="check_DC_captured_for_RP" parameterClass="java.lang.String" 
 		resultClass="java.lang.Integer">
		SELECT 
			COUNT(1) 
		FROM 
			CST_DC_DTL A, IMP_SRF B 
		WHERE 
			A.SHPM_TYPE = 'I' AND B.AWB_NO=A.AWB_NO AND 
			B.AWB_DATE=A.AWB_DATE AND B.SRF_NO = #srfNo#
	</select>
	<select id="hdlg_ser_for_srf" parameterClass="java.lang.String" resultClass="cargo.cms.imprt.bo.ASVInventoryBO">
		SELECT 
			A.HANDL_SERVICE_YN AS hndlgServInd, A.AGENT_CUST_NO AS agentCode 
		FROM 
			IMP_CAR_AWB A, IMP_SRF B 
		WHERE 
			B.AWB_NO = A.AWB_NO AND B.AWB_DATE = A.AWB_DATE 
			AND B.SRF_NO = #srfNo#
	</select>
	<select id="asv_inv_dtls_for_srf" parameterClass="java.lang.String" resultClass="cargo.cms.imprt.bo.ASVInventoryBO">
		SELECT 
  			D.HAWB_NO AS hawbNo, D.HAWB_PCS AS locPcs, D.HAWB_NET_WT AS locWt, B.AWB_NO AS awbNo, TO_CHAR(B.AWB_DATE, 'DDMONYY') AS awbDate, 
  			B.LSP_NO AS lspNo, B.ULD_KEY AS uldKey, B.LOC_CODE AS locCode, B.DAM_IND AS damInd, B.DAM_PCS AS damPcs, B.DAM_WT AS damWt, 
  			D.HAWB_ORG AS origin, D.HAWB_DEST AS destination  
		FROM 
  			IMP_SRF A, AWB_INVENTORY B, HAWB_INVENTORY H, EDI_FHL C, EDI_FHL_HAWB D 
		WHERE 
			A.SRF_NO = B.SRF_NO AND B.SEQ_NO = H.SEQ_NO AND A.AWB_NO=C.AWB_NO AND A.AWB_DATE=C.AWB_DATE AND C.TR_NO=D.TR_NO AND 
			D.HAWB_NO = H.HAWB_NO AND A.SRF_NO=#srfNo#
	</select>
	<select id="sqlFetchAsvHawbExists" parameterClass="cargo.cms.imprt.bo.ASVInventoryBO" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM ASV_HAWB WHERE HAWB_NO=#hawbNo# AND AGENT_CODE=#agentCode#
	</select>
	<select id="sqlFetchAsvHawbExists1" parameterClass="cargo.cms.imprt.bo.ASVInventoryBO" resultClass="java.lang.String">
		SELECT FLOW FROM ASV_HAWB WHERE HAWB_NO=#hawbNo# AND AGENT_CODE=#agentCode#
	</select>
	<insert id="insertAsvHawb" parameterClass="cargo.cms.imprt.bo.ASVInventoryBO">
		INSERT INTO ASV_HAWB 
			(HAWB_NO, AGENT_CODE, FLOW, AWB_NO, AWB_DATE, ORIG, DEST, HAWB_PCS, HAWB_WT, RECD_PCS, RECD_WT, CR_USER_ID, 
			CR_DATE, LM_USER_ID, LM_DATE, DAM_PCS, DAM_WT, ORIGINAL_AWB_NO, ORIGINAL_AWB_DATE) 
		VALUES 
			(#hawbNo#, #agentCode#, DECODE(#destination#, 'HKG', 'I', 'T'), DECODE(#destination#, 'HKG', #awbNo#, ''), 
			DECODE(#destination#, 'HKG', TO_DATE(#awbDate#, 'DDMONYY'), ''), #origin#, #destination#, #locPcs#, #locWt#, 
			#locPcs#, #locWt#, #crUserid#, SYSDATE, #lmUserId#, SYSDATE, #damPcs#, #damWt#, #awbNo#, TO_DATE(#awbDate#, 'DDMONYY'))
	</insert>
	<update id="updateAsvHawb" parameterClass="cargo.cms.imprt.bo.ASVInventoryBO">
		UPDATE 
			ASV_HAWB 
		SET 
			HAWB_PCS=NVL(HAWB_PCS,0) + NVL(#locPcs#,0), HAWB_WT=NVL(HAWB_WT,0) + NVL(#locWt#,0),
			LM_USER_ID=#lmUserId#, LM_DATE=SYSDATE 
		WHERE 
			HAWB_NO=#hawbNo# AND AGENT_CODE=#agentCode#
	</update>
	<insert id="insert_asv_inventory" parameterClass="cargo.cms.imprt.bo.ASVInventoryBO">
		INSERT INTO 
			ASV_INVENTORY 
			(SEQ_NO,HAWB_NO,AGENT_CODE,AWB_NO,AWB_DATE,LSP_NO,ULD_KEY, LOC_CODE,LOCN_PCS,LOCN_WT,DAM_IND,DAM_PCS,DAM_WT,
			CR_USER_ID, CR_DATE,LM_USER_ID, LM_DATE) 
		VALUES 
			((SELECT NVL(SEQ_NO, 0) + 1 AS SEQ_NO FROM (SELECT MAX(SEQ_NO) AS SEQ_NO FROM ASV_INVENTORY)), #hawbNo#, #agentCode#, DECODE(#destination#, 'HKG', #awbNo#, ''), 
			DECODE(#destination#, 'HKG', TO_DATE(#awbDate#, 'DDMONYY'), ''), #lspNo#, #uldKey#, #locCode#, #locPcs#, #locWt#, 
			#damInd#, #damPcs#, #damWt#, #crUserid#, SYSDATE, #lmUserId#, SYSDATE)
	</insert>
	<select id="find_wt/pcs_for_awb" parameterClass="java.lang.String" 
		resultClass="cargo.cms.imprt.bo.SRFBO">
		SELECT 
			a.AWB_PCS as awbPcs, a.AWB_WT as awbWt, sum(b.MANIFEST_PCS) as manifestPcs, 
			sum(b.MANIFEST_WT) as manifestWt, sum(b.RECD_PCS) as recvdPcs, sum(b.RECD_WT) as recvdWt, 
			sum(b.CIR_PCS) as cirPcs, sum(b.CIR_WT) as cirWt, a.AWB_NO as awbNo, 
			TO_CHAR(c.AWB_DATE, 'DDMONYY') as awbDate, c.img_trans_id as transactionId
		FROM 
			IMP_CAR_AWB a, IMP_CAR_SHP b, IMP_SRF c 
		WHERE 
      		c.AWB_NO=b.AWB_NO AND c.AWB_DATE=b.AWB_DATE 
      		AND c.AWB_NO=a.AWB_NO AND c.AWB_DATE=a.AWB_DATE 
      		AND c.SRF_NO = #srfNo#
      		group by a.AWB_PCS,a.AWB_WT,a.AWB_NO,c.AWB_DATE,c.img_trans_id
	</select>
	<select id="find_total_dlv_pc/wt" parameterClass="java.lang.String" 
		resultClass="cargo.cms.imprt.bo.SRFBO">
		SELECT 
			SUM(a.DLV_PCS) as totDlvPcs, SUM(a.DLV_WT) as totDlvWt 
		FROM 
			IMP_SRF_FLT a 
		WHERE 
			a.SRF_NO = #srfNo#
	</select>
	<select id="entry_in_awb_inventory" parameterClass="java.lang.String" 
		resultClass="java.lang.Integer">
		SELECT 
			COUNT(1) 
		FROM 
			AWB_INVENTORY 
		WHERE 
			SRF_NO = #srfNo#
	</select>
	<update id="update_awb_closed" parameterClass="java.util.HashMap">
		UPDATE 
			IMP_CAR_AWB 
		SET 
			AWB_CLOSED = 'Y', AWB_CLOSE_DATE = SYSDATE, 
			AWB_CLOSE_USER = #userid#,LM_DATE = sysdate,LM_USER_ID = 'SYSTEM'
		WHERE
			AWB_NO = #awbNo# AND AWB_DATE = #awbDate#
	</update>
	
	<update id="update_awb_close_ind" parameterClass="java.util.HashMap">
		UPDATE 
			AWB 
		SET 
			AWB_CLOSED_YN = 'Y', LM_DATE = SYSDATE, 
			LM_USER_ID = #userid#
		WHERE
			AWB_NO = #awbNo# AND AWB_DATE = #awbDate#
	</update>
	
	<!-- Changed for QR :: RANJITH -->
	<select id="find_imp_srf_dtls" parameterClass="java.lang.String" 
		resultClass="cargo.cms.imprt.bo.SRFBO">
		SELECT 
 			SRF_NO as srfNo,
 			SRF_PCS as pcs, 
 			SRF_WT as wt, 
 			AWB_NO as awbNo, 
 			esrf_yn as esrfyn,
 			HOLD_SRF_IND as holdSrf,  
 			COLL_NAME as collBy, 
 			CARGO_RELEASE_STS as cargoReleaseStatus,
 			TO_CHAR(CARGO_RELEASE, 'DDMONYY') as cargoRelease,
 			HOLD_SRF_IND as holdSrf,  
 			TO_CHAR(AWB_DATE, 'DDMONYY') as awbDate, 
 			CARR_CODE as carrCode, SRF_PCS as, 
 			TO_CHAR(CR_DATE, 'DDMONYY') as crDate, 
      		DOC_LINE_NO as docLineNo 
		FROM 
			IMP_SRF 
		WHERE 
			SRF_NO = #srfNo#
	</select>
	<select id="imp_getDlvPcWt"  parameterClass="cargo.cms.imprt.bo.POSTSRFBO" 
		resultClass="cargo.cms.imprt.bo.POSTSRFBO">
		<!-- SELECT 
			#lmUserId# lmUserId , srf_no srfNo, nvl(cdif_no, flt_key) fltKey, 
			to_char(nvl(to_date(substr(cdif_no, 1, 6), 'DDMMYY'), flt_date), 'DDMONYY') fltDate, 
			sum(LOCN_PCS) dlvPc, sum(LOCN_WT) dlvWt 
		FROM 
			AWB_INVENTORY 
		WHERE 
			srf_no = #srfNo#
		GROUP BY 
			SRF_NO, nvl(cdif_no, flt_key), nvl(to_date(substr(cdif_no, 1, 6), 'DDMMYY'), flt_date) -->			
		SELECT 
			#lmUserId# lmUserId , srf_no srfNo, nvl(cdif_no, flt_key) fltKey, 
			to_char(flt_date, 'DDMONYY') fltDate, sum(LOCN_PCS) dlvPc, sum(LOCN_WT) dlvWt 
		FROM 
			AWB_INVENTORY 
		WHERE 
			srf_no = #srfNo#
		GROUP BY 
			SRF_NO, nvl(cdif_no, flt_key),  flt_date
	</select>
	<update id="postsrfFlt" parameterClass="cargo.cms.imprt.bo.POSTSRFBO">
		UPDATE 
			IMP_SRF_FLT 
		SET 
			DLV_PCS = nvl(#dlvPc#,0), 
			DLV_WT = nvl(#dlvWt#,0) ,
			LM_USER_ID = #lmUserId# , 
			LM_DATE = SYSDATE  
		WHERE 
			SRF_NO = #srfNo# and FLT_KEY = #fltKey# and FLT_DATE = to_date(#fltDate#,'DDMONYY')
	</update>
	<select id="findDlvDtlsBySrfNo" parameterClass="java.lang.String" resultClass="cargo.cms.imprt.bo.POSTSRFBO">
		<![CDATA[
		SELECT 
			  CASE
			    WHEN SUM(NVL(LOCN_PCS,0)) = (SUM(NVL(DLV_PCS,0)) + SUM(NVL(CDIF_PC,0)))
			    THEN 'Y'
			    ELSE 'N'
			  END AS pcInd,
			  CASE
			    WHEN SUM(NVL(LOCN_WT,0)) = (SUM(NVL(DLV_WT,0)) + SUM(NVL(CDIF_WT,0)))
			    THEN 'Y'
			    ELSE 'N'
			  END AS wtInd,
			  SUM(NVL(LOCN_PCS,0)) AS locPc,
			  SUM(NVL(LOCN_WT,0))  AS locWt,
			  SUM(NVL(DLV_PCS,0))  AS dlvPc,
			  SUM(NVL(DLV_WT,0))   AS dlvWt,
			  SUM(NVL(CDIF_PC,0))  AS cdifPc,
			  SUM(NVL(CDIF_WT,0))  AS cdifWt
			FROM IMP_SRF_AWB_INVENTORY
			WHERE SRF_NO = #srfNo#
			]]>
	</select>
	<select id="findUrfNoBySrfNo" parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT EIR_NO FROM ULD_ISS_HD WHERE SRF_NO=#srfNo#
	</select>
	<select id="findUrfDtlsByUrfNo" parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT SUM(NVL(ULD_REL_QTY, 0)) || ' ' || ULD_TYPE FROM ULD_ISS_DTL WHERE EIR_NO=#urfNo# GROUP BY ULD_TYPE
	</select>
	
	<select id="findUrfDtlsByUrfNoPost" parameterClass="java.lang.String" resultClass="java.lang.String">
	SELECT STRAGG(STRINGDELIM(T.uldReq,',')) AS uldRequired  FROM 
	(SELECT SUM(NVL(ULD_REQ_QTY, 0)) || ' ' || ULD_TYPE  uldReq FROM ULD_ISS_DTL WHERE EIR_NO=#urfNo# AND ULD_EQUIP = 'U' GROUP BY ULD_TYPE)T
	</select>
	
	<select id="findCountOfUnPostedSrf" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		SELECT 
			COUNT(1) 
		FROM 
			IMP_TRUCK_SRF A, IMP_SRF B , TRUCK_TRIP C 
		WHERE 
			B.SRF_NO=A.SRF_NO AND B.PRINT_IND='Y' AND B.POST_DATE IS NULL  AND A.TRIP_ID=C.TRIP_ID AND C.CLOSED='N' AND A.SRF_NO=#srfNo#
	</select>
	<!-- Changed for QR :: RANJITH -->
	<select id="findLatestCCCodeBySrfNo" parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT 
			decode(Count(1),0,'XX','RP') 
		FROM 
			IMP_SRF_FLT A, V_CST_IMP_CC_CODE_AWB B 
		WHERE 
			B.AWB_NO=A.AWB_NO AND B.FLT_KEY = A.FLT_KEY AND B.FLT_DATE = A.FLT_DATE 
			AND A.SRF_NO = #srfNo# AND B.CC_CODE = 'RP' 
	</select>
	<select id="findTrkNoBySrfNo" parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT B.TRUCK_NO FROM IMP_TRUCK_SRF A, TRUCK_TRIP B WHERE B.TRIP_ID=A.TRIP_ID AND B.CLOSED='N' AND A.SRF_NO=#srfNo#
	</select>
	<select id="isSrfPrinted" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM IMP_SRF WHERE PRINT_IND='Y' AND SRF_NO=#srfNo#
	</select>
	<update id="updateSrfPrinteIndicator" parameterClass="map">
	 	UPDATE 
	 		IMP_SRF  
	 	SET 	PRINT_IND=#indicatorValue#, 
	 			LM_USER_ID=#userID#, 
	 			LM_DATE=SYSDATE    
		WHERE 
			SRF_NO=#srfNo# 
	</update>
 <!-- Post SRF :: Anup :: Ends -->

 <!-- Issue SRF :: Bala :: Starts -->
	
 <select id="sqlGetSrfTruckTarget"  parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO" resultClass="java.lang.String">
		select TRUCK_DOCK from truck_trip tp
		join imp_truck_srf ist
		on tp.trip_id = ist.trip_id
		where ist.srf_no=#srfNo#
    	and tp.truck_no=#truckNo#    	
</select>
  
 <select id="imp_IssueSRF_checkForCCodeSeverity"  parameterClass="java.lang.String" 
		resultClass="java.lang.Integer">
		SELECT count(1) FROM MAST_CONSTRAINT_CODE WHERE  PRIORITY BETWEEN 0 AND (select priority FROM MAST_CONSTRAINT_CODE 
		WHERE code=#PARAM#) and code=#PARAM#
 </select>
 <parameterMap id="FSURCFDHLMap" class="map" >	
	<parameter property="AWBNO" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	<parameter property="AWBDATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	<parameter property="FLTKEY" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	<parameter property="FLTDATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	<parameter property="MSG" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
</parameterMap>

<procedure id="callPkgFsuRcfDhl" parameterMap="FSURCFDHLMap" >
	{call PKG_FSU.FSU_RCF_DHL(?,?,?,?,?)}
</procedure>
<parameterMap id="FSUNFDDHLMap" class="map" >	
	<parameter property="AWBNO" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	<parameter property="AWBDATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	<parameter property="FLTKEY" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	<parameter property="FLTDATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	<parameter property="MSG" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
</parameterMap>

<procedure id="callPkgFsuNfdDhl" parameterMap="FSUNFDDHLMap" >
	{call PKG_FSU.FSU_NFD_DHL(?,?,?,?,?)}
</procedure>
 <select id="imp_IssueSRF_checkCarCreated" parameterClass="cargo.cms.imprt.bo.ShpPndDelivBO"  resultClass="java.lang.Integer">
	<![CDATA[
	select COUNT(1) from imp_car_shp 
	where FLT_KEY = #flightKeyProc# AND FLT_DATE = TO_DATE(#flightDateProc#,'DDMONYY')
	and awb_no = #awbNo# and awb_date = to_date(#awbDate# ,'DDMONYY') and CAR_CREATED = 'N'
	]]>
</select>
 
 <select id="getTotalCharges"  parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO"  resultClass="java.lang.String">
	<![CDATA[
	select sum(CASE WHEN (chamt - nvl(pchrg, 0)) < 0 THEN 0 ELSE (chamt - nvl(pchrg, 0)) END) amt
	from 
		 (select G.AWB_NO awbNo, G.AWB_DATE awbDate, G.ITM_CODE itemCode , G.ITM_CODE_SFX itemCodeSfx, 
				  min(G.ITM_DESC) itemDesc, min(G.REV_IND) revInd,sum(G.QTY) qty, max(G.UNIT_PRICE) unitPrice, sum(G.AMT - nvl(pchrg, 0)) chamt, 
				 min(G.MIN_CHRG_IND) minChrgInd, min(G.MAX_CHRG_IND) maxChrgInd
				 from GT_SRF_CHARGES G
				 JOIN AWB awb ON awb.AWB_NO = G.AWB_NO 
				 AND awb.awb_date = G.awb_date
				 AND awb.awb_type = 'I'    
				 left join (select C.AWB_NO, C.AWB_DATE, SF.FLT_KEY, SF.FLT_DATE, C.ITM_CODE, C.ITM_CODE_SFX, nvl(sum(nvl(PAID_AMT_CASH,0) + nvl(PAID_AMT_CREDIT,0)),0) pchrg
						 from BILL_CHARGE_DTL C
						 JOIN IMP_SRF_FLT SF ON SF.SRF_NO = C.SRF_NO
						 where C.Status = 'PAID' AND C.ITM_CODE LIKE 'SC%'
						 group by C.AWB_NO, C.AWB_DATE, SF.FLT_KEY, SF.FLT_DATE, C.ITM_CODE, C.ITM_CODE_SFX) cps 
							   on cps.AWB_NO = g.AWB_NO AND cps.AWB_DATE = g.AWB_DATE
								  AND cps.FLT_KEY = g.FLT_KEY AND cps.FLT_DATE = g.FLT_DATE
								  AND cps.ITM_CODE = g.ITM_CODE and NVL(cps.ITM_CODE_SFX, '**') = NVL(g.ITM_CODE_SFX, '**')
				 where G.AWB_NO = #awbNo# and G.AWB_DATE = to_date(#awbDate#, 'DDMONYY')					
				 and G.RMODE = 'SRF'
				 group by G.AWB_NO, G.AWB_DATE, G.ITM_CODE, G.ITM_CODE_SFX
		  union
		  Select AWB_NO, AWB_DATE, ITM_CODE, ITM_CODE_SFX, 
				 ITM_DESC, REV_IND, 1, 0, CHRG_AMT, 
				 'N', 'N'
				  from IMP_CHRG_ITM_REV_AWB 
				  where AWB_NO = #awbNo# and AWB_DATE = to_date(#awbDate#, 'DDMONYY')
				  AND ITM_CODE in ('CCIMPO', 'FCIMFC', 'DBIMPO')
		  ) c
	join IMP_CAR_AWB ica on ica.AWB_NO = c.awbNo AND ica.AWB_DATE = c.awbDate
	join BILL_ITM_MASTER m on m.ITM_CODE = c.itemCode and NVL(m.ITM_CODE_SFX, '**') = NVL(c.itemCodeSfx, '**') and nvl(m.ECT_HANDLER, NVL(ica.ECT_HANDLER, 'AAT')) = NVL(ica.ECT_HANDLER, 'AAT')
	join AWB a on a.AWB_NO = c.awbNo and a.AWB_DATE = c.awbDate and a.AWB_TYPE = 'I' 
	left join IMP_CHRG_ITM_REV_AWB ic on ic.AWB_NO = c.awbNo AND  ic.AWB_DATE = c.awbDate
		 AND ic.ITM_CODE = c.itemCode and NVL(ic.ITM_CODE_SFX, '**') = NVL(c.itemCodeSfx, '**')
	left join (select AWB_NO, AWB_DATE, ITM_CODE, ITM_CODE_SFX, sum(CHRG_AMT) pchrg 
		 from BILL_CHARGE_DTL where Status = 'PAID' AND ITM_CODE NOT LIKE 'SC%'
		 group by AWB_NO, AWB_DATE, ITM_CODE, ITM_CODE_SFX) cp on cp.AWB_NO = c.awbNo AND  cp.AWB_DATE = c.awbDate
		 AND cp.ITM_CODE = c.itemCode and NVL(cp.ITM_CODE_SFX, '**') = NVL(c.itemCodeSfx, '**')
	where NVL(ic.PAYMENT_MODE, 'Revenue') not in ('No value') 
	]]>
</select>
 
 	
 	<!-- Changed for QR :: RANJITH -->
 	<!-- <select id="chk_truck_in_aat"  parameterClass="java.lang.String" resultClass="java.lang.Integer">			
	<![CDATA[
	 SELECT COUNT(1)
            FROM (SELECT INC_PURPOSE, ACTIVITY_DATE, 
                      DENSE_RANK() OVER (PARTITION BY TRUCK_NO ORDER BY ACTIVITY_DATE DESC) RANK 
                        FROM INT_TRUCK_ACTIVITY T
                        WHERE NOT EXISTS (SELECT NULL FROM INT_TRUCK_ACTIVITY WHERE CHECK_POINT = 'LEAVING_TERMINAL' AND TASK_ID = T.TASK_ID)
                        AND EXISTS (SELECT NULL FROM INT_TRUCK_ACTIVITY 
									WHERE CHECK_POINT in ('ENTER_TERMINAL' , 'TRUCK_DOCK_ALLOCATION', 'DECLARE_INCOMING_PURPOSE') 
									AND TASK_ID = T.TASK_ID)
						AND NOT EXISTS (SELECT NULL FROM INT_TRUCK_ACTIVITY 
									WHERE CHECK_POINT in ('TRUCK_DOCK_ARRIVAL', 'TRUCK_DOCK_LEAVING') 
									AND TASK_ID = T.TASK_ID)
						AND NOT EXISTS (SELECT NULL FROM INT_TRUCK_ACTIVITY 
									WHERE TRUCK_NO = T.TRUCK_NO
									AND TASK_ID > T.TASK_ID)
						AND upper(INC_PURPOSE) LIKE 'IMPORT%'  
						AND SYSDATE < ACTIVITY_DATE + 2/24 
                        AND TRUCK_NO = #TRUCKNO#) A
	]]>
	</select> -->
	
	<!-- Changed for QR :: RANJITH -->
	<!-- <select id="chk_truck_msg_send"  parameterClass="java.lang.String" resultClass="java.lang.Integer">			
	<![CDATA[
	 SELECT COUNT(1)
		FROM (SELECT 1
				FROM INT_TRUCK_ACTIVITY T
				WHERE NOT EXISTS (SELECT NULL FROM INT_TRUCK_ACTIVITY WHERE CHECK_POINT = 'LEAVING_TERMINAL' AND TASK_ID = T.TASK_ID)
				AND EXISTS (SELECT NULL FROM INT_TRUCK_ACTIVITY 
							WHERE CHECK_POINT in ('TRUCK_DOCK_ARRIVAL', 'TRUCK_DOCK_LEAVING') 
							AND TASK_ID = T.TASK_ID)
				AND NOT EXISTS (SELECT NULL FROM INT_TRUCK_ACTIVITY 
							WHERE TRUCK_NO = T.TRUCK_NO
							AND TASK_ID > T.TASK_ID)
				AND upper(INC_PURPOSE) LIKE 'IMPORT%'  
				AND SYSDATE < ACTIVITY_DATE + 2/24 
				AND TRUCK_NO = #TRUCKNO#
		  UNION ALL
		  SELECT 1 FROM DUAL 
		  WHERE NOT EXISTS (SELECT 1
						FROM INT_TRUCK_ACTIVITY T
						WHERE EXISTS (SELECT NULL FROM INT_TRUCK_ACTIVITY WHERE CHECK_POINT IN ('ENTER_TERMINAL', 'TRUCK_DOCK_ALLOCATION') AND TASK_ID = T.TASK_ID)
						AND NOT EXISTS (SELECT NULL FROM INT_TRUCK_ACTIVITY WHERE CHECK_POINT = 'LEAVING_TERMINAL' AND TASK_ID = T.TASK_ID)
						AND NOT EXISTS (SELECT NULL FROM INT_TRUCK_ACTIVITY 
									WHERE TRUCK_NO = T.TRUCK_NO
									AND TASK_ID > T.TASK_ID)
						AND SYSDATE < ACTIVITY_DATE + 2/24 
						AND TRUCK_NO = #TRUCKNO#
						AND ROWNUM = 1) 
			) A	
	]]>
	</select>  -->
	
	<!-- Changed for QR :: RANJITH -->
	<!-- <select id="chk_truck_in_alert"  parameterClass="java.lang.String" resultClass="java.lang.String">			
		<![CDATA[
		 SELECT INC_PURPOSE
				FROM (SELECT INC_PURPOSE, ACTIVITY_DATE, 
						  DENSE_RANK() OVER (PARTITION BY TRUCK_NO ORDER BY ACTIVITY_DATE DESC) RANK 
					FROM INT_TRUCK_ACTIVITY T
					WHERE NOT EXISTS (SELECT NULL FROM INT_TRUCK_ACTIVITY WHERE CHECK_POINT = 'LEAVING_TERMINAL' AND TASK_ID = T.TASK_ID)
					AND EXISTS (SELECT NULL FROM INT_TRUCK_ACTIVITY 
								  WHERE CHECK_POINT in ('ENTER_TERMINAL' ,  'TRUCK_DOCK_ALLOCATION', 'DECLARE_INCOMING_PURPOSE') 
								  AND TASK_ID = T.TASK_ID)
					AND NOT EXISTS (SELECT NULL FROM INT_TRUCK_ACTIVITY 
								WHERE CHECK_POINT in ('TRUCK_DOCK_ARRIVAL') 
								AND TASK_ID = T.TASK_ID)
					AND NOT EXISTS (SELECT NULL FROM INT_TRUCK_ACTIVITY 
								WHERE TRUCK_NO = T.TRUCK_NO
								AND TASK_ID > T.TASK_ID)
					AND upper(INC_PURPOSE) NOT LIKE 'IMPORT%' 
					AND SYSDATE < ACTIVITY_DATE + 2/24 
							 AND TRUCK_NO = #TRUCKNO#) A
		  where rownum = 1
		]]>
	</select> -->
	
	<!-- Changed for QR :: RANJITH -->
	<!-- <select id="getTdNo"  parameterClass="java.lang.String" resultClass="java.lang.String">			
	<![CDATA[
 SELECT DOCK_NO 
    FROM (SELECT DOCK_NO 
          FROM INT_TRUCK_ACTIVITY
          WHERE TASK_ID NOT IN (SELECT TASK_ID FROM INT_TRUCK_ACTIVITY WHERE CHECK_POINT = 'LEAVING_TERMINAL')
          AND CHECK_POINT = 'TRUCK_DOCK_ALLOCATION' AND SYSDATE < ACTIVITY_DATE + 2/24 
          AND TRUCK_NO = #TRUCKNO#
          order by ACTIVITY_DATE desc) A
    where rownum = 1
	]]>
</select>
-->
<!-- Changed for QR :: RANJITH -->
	<!-- <select id="impsrfchecktruckactivity" parameterClass="cargo.cms.common.ext.bo.TruckInfoGreenLightBO" 
resultClass="java.lang.Integer">
	SELECT count(1) FROM INT_TRUCK_ACTIVITY WHERE DOCK_NO  IS NOT NULL AND TRUCK_NO=#vehicleNo# AND
	CHECK_POINT='LEAVING_TERMINAL'
</select> -->
 <select id="Imp_check_truck_ban" parameterClass="java.lang.String" resultClass="java.lang.Integer">			
	<![CDATA[
		select count(1) 
		from int_truck_ban_log 
		where TRUCK_NO = #truckNo# 
		and PERIOD_FROM <= to_char(sysdate, 'DDMONYY') 
		and PERIOD_TO >= to_char(sysdate, 'DDMONYY') 
		AND ACTIVE_YN = 'Y'
	]]>
</select>
 <select id="unPostedSRFexists" parameterClass="map" resultClass="java.lang.Integer">
 <![CDATA[
	   SELECT count(1) FROM IMP_SRF T
	   WHERE AWB_NO = #AWBNO# AND AWB_DATE =  TO_DATE(#AWBDATE#, 'DDMONYY') 
	   AND (STATUS ='ISSUED' and sysdate < srf_expy_date
	   OR
	   EXISTS (SELECT NULL FROM imp_srf_awb_inventory where srf_no = t.srf_no and t.status = 'ISSUED' and dlv_pcs > 0)
   )
 	]]>
</select>
<select id="imp_checkStorageLocationExist"  parameterClass="map" resultClass="java.lang.Integer">
	<![CDATA[
	SELECT NVL(SUM(LOCN_PCS), 0) PCS
	from AWB_INVENTORY A
	LEFT JOIN IMP_SRF S ON 
	A.SRF_No = S.SRF_No AND 
	((SRF_EXPY_DATE > sysdate and s.STATUS ='ISSUED') or s.STATUS ='POSTED')
	where S.SRF_NO IS NULL AND A.TRM_NO IS NULL
	AND A.AWB_NO = #AWBNO# AND A.AWB_DATE = TO_DATE(#AWBDATE#, 'DDMONYY')
	]]>
</select>
<!-- Changed for QR :: RANJITH -->
<select id="imp_IssueSRF_Consigneedata"  parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO"  resultClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">	
	<![CDATA[
		SELECT
		A.AWB_No awbNo, 
		SUBSTR(A.AWB_NO,1,3)  awbNoPrefix , 
		SUBSTR(A.AWB_NO,4)  awbNoSuffix , 
		SUBSTR(A.AWB_NO,1,3)||'-'||SUBSTR(A.AWB_NO,4) as awbNoDisp ,
		TO_CHAR(A.AWB_DATE, 'DDMONYY') awbDate,
		A.CATALOG catalog,
	    (SELECT 
			  (CASE WHEN decode(b.catalog,'EG','C','ES','C','IG','C','TG','C','TA','C','EU','M','TM','M','EO','Q','IO','Q','C') = 'C' THEN 
			  (CASE WHEN (SELECT COUNT(1) FROM CUST_AIRL_SPL_CODE SPLCODE WHERE SPLCODE.SPL_TYPE='SPL_COURIER_SHC' AND SPLCODE.CARR_CODE = B.CARR_CODE AND (SPLCODE.SPL_CODE = b.SPL_CODE1 OR SPLCODE.SPL_CODE = b.SPL_CODE2 OR SPLCODE.SPL_CODE = b.SPL_CODE3 OR SPLCODE.SPL_CODE = b.SPL_CODE4 OR SPLCODE.SPL_CODE = b.SPL_CODE5 OR SPLCODE.SPL_CODE = b.SPL_CODE6 OR SPLCODE.SPL_CODE = b.SPL_CODE7 OR SPLCODE.SPL_CODE = b.SPL_CODE8 OR SPLCODE.SPL_CODE = b.SPL_CODE9)) > 0
			  THEN 'Q' ELSE decode(b.catalog,'EG','C','ES','C','IG','C','TG','C','TA','C','EU','M','TM','M','EO','Q','IO','Q','C') END)
			           ELSE decode(b.catalog,'EG','C','ES','C','IG','C','TG','C','TA','C','EU','M','TM','M','EO','Q','IO','Q','C') END) as cargoType	  
		 FROM AWB  B WHERE  B.AWB_NO=A.AWB_NO AND B.AWB_DATE=A.AWB_DATE) as cargoType,		
		A.AWB_PCS awbPc, 
		A.AWB_WT awbWt, 
		A.CONTENT contents,
		A.SPL_CODE1 splCode1, 
		A.SPL_CODE2 splCode2, 
		A.SPL_CODE3 splCode3, 
		A.SPL_CODE4 splCode4, 
		A.SPL_CODE5 splCode5, 
		A.SPL_CODE6 splCode6, 
		A.SPL_CODE7 splCode7, 
		A.SPL_CODE8 splCode8,
		A.SPL_CODE9 splCode9,
		A.AWB_DEST dest,
		NVL(A.HANDL_SERVICE_YN,'N') hdldByAgtSvcs,
		CSGNE_NAME consignee, 
		A.APPNTD_AGENT apptdAgt,  
		(SELECT CO_IATA_CODE FROM CUST_COMPANY WHERE CODE = A.AGENT_CUST_NO) iataCode,
		NVL((SELECT haffa_member FROM CUST_COMPANY WHERE CODE = A.AGENT_CUST_NO),'N') haffaMember,
		A.BANK_ENDOS bankEndorsmentYN, 
		A.BANK_TYPE bank,  
		A.AIRLN_RMK awbRemarks,
		A.AIRLN_RMK oldAwbRemarks,
		A.ECT_HANDLER ectHandler,
		NVL((SELECT sum(CR_BAL) 
				FROM CUST_AGENT_AIRL_CREDIT
				WHERE CR_EFF_DATE_FROM <= trunc(SYSDATE) AND CR_EFF_DATE_TO >= trunc(SYSDATE) 
				AND instr( nvl(UPPER(CARR_CODE),'*'), nvl(UPPER(B.CARR_CODE),'**') ) > 0 
				AND UPPER(CR_TYPE) = UPPER(DECODE(A.CATALOG, 'IG', 'Import_GEN', DECODE(A.CATALOG, 'IO', 'Import_OBC', '*')))
				AND CUST_NO = A.AGENT_CUST_NO AND CARR_CODE = B.CARR_CODE and nvl(upper(Status),'**') != 'VOID' ), 0)  airlCrdAvail,
		NVL((SELECT sum(CR_BAL )
				FROM CUST_AGENT_CREDIT
				WHERE CR_EFF_DATE_FROM <= trunc(SYSDATE) AND NVL(CR_EFF_DATE_TO, trunc(SYSDATE)) >= trunc(SYSDATE) 
				AND instr( nvl(UPPER(CARR_CODE),'*'), nvl(UPPER(B.CARR_CODE),'**') ) > 0 
				AND CUST_NO = A.AGENT_CUST_NO AND upper(CR_TYPE) = 'IMPORT_GEN' and nvl(upper(Status),'**') != 'VOID'), 0)  aatCrdAvail,
		NVL((select sum(dlv_pcs)  from imp_srf_flt flt,imp_srf srf  where flt.AWB_NO =  #awbNo# AND flt.AWB_DATE =  TO_DATE(#awbDate#,'DDMONYY')
    AND flt.awb_no=srf.awb_no and flt.awb_date=srf.awb_date and srf.status!='VOID' and srf.srf_no=flt.srf_no), 0) delvPcToDate,
		NVL((SELECT 'Y' C
				FROM CUST_UNDERTAKING 
				WHERE EFF_FROM < SYSDATE AND NVL(EFF_TO, SYSDATE) >= SYSDATE AND ROWNUM = 1
				AND CARR_CODE = B.CARR_CODE AND AGENT_CODE = A.AGENT_CUST_NO AND A.CONSOLE_IND = 'Y'), 'N') undertakingYN,
				B.CARR_CODE carrCode,
				A.PPK_TYPE ppkInd,
				CASE WHEN 
		         (SELECT count(1) FROM BILL_PRE_PAYMENT_DTL WHERE AWB_NO = #awbNo# and awb_date = TO_DATE(#awbDate#,'DDMONYY') ) > 0
		         THEN
				(SELECT 'Amt: ' || TOTAL_AMT || ', ' || 'Due Date: ' || to_char(DUE_DATE,'DDMONYY')
					   			 FROM BILL_PRE_PAYMENT_DTL WHERE AWB_NO = #awbNo# and awb_date = TO_DATE(#awbDate#,'DDMONYY') and SRF_NO is null and rownum =1 )
		          ELSE (SELECT 'Bundle Ref: ' || hd.BUNDLE_REF_NO || ',' || 'Bundle Amt: ' || COMMITTED_AMT || ', ' || 'Due Date: ' || to_char(HD.VALIDITY_DATE,'DDMONYY')
		                 FROM BILL_BUNDLE_PAYMENT_DTL dtl, BILL_BUNDLE_PAYMENT_HD hd WHERE hd.BUNDLE_REF_NO = dtl.BUNDLE_REF_NO 
		                 AND AWB_NO = #awbNo# and awb_date = TO_DATE(#awbDate#,'DDMONYY') 
		                 AND hd.status = 'COMMITTED' and trunc(SYSDATE) = trunc(HD.VALIDITY_DATE) AND rownum =1 ) END AS prePayInfo
		FROM IMP_CAR_AWB A  , AWB B
		WHERE  
		A.AWB_NO 	 = B.AWB_NO 	 AND
		A.AWB_DATE	 = B.AWB_DATE	 AND
		A.AWB_NO =  #awbNo# AND A.AWB_DATE =  TO_DATE(#awbDate#,'DDMONYY')	
		]]>
	</select>
<select id="imp_IssueSRF_ShipmentData"  parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO"  
	resultClass="cargo.cms.imprt.bo.ShpPndDelivBO">
	 <![CDATA[
	 
		SELECT
		A.FLT_KEY flightNoKey, 
		To_Char(A.FLT_DATE,'DDMONYY') flightDate, 
		To_Char(ACT_TIME) ata, 
		PKG_COMMON.get_flt_ata(A.FLT_KEY, A.FLT_DATE, 'A') ataTime,
		NVL(I.PCS, 0) invPc, 
		NVL(I.WT, 0) invWt, 
		To_Char(A.MANIFEST_PCS) manfPc, 
		To_Char(A.MANIFEST_WT) manfWt, 
		replace(A.CIR_PCS_TYPE || '/' || A.CIR_WT_TYPE, '/','') cirType, 
		A.CIR_PCS_TYPE cirPcsType,
		To_Char(A.CIR_PCS) cirPc,
		To_Char(A.CIR_WT) cirWt,
		A.DOC_DISC docDisc,
		S.SRF_NO existSrfNo , B.FLT_NO AS flightNo, B.CARR_CODE AS flightKey
		FROM IMP_CAR_SHP A 
		left join (Select s.SRF_No, s.AWB_NO, s.AWB_DATE, sf.FLT_KEY, sf.FLT_DATE from IMP_SRF s, IMP_SRF_FLT sf 
			 	  where s.SRF_No = sf.SRF_No 
			 	  and ((SRF_EXPY_DATE > sysdate and s.STATUS ='ISSUED') or s.STATUS ='POSTED' 
				  	  or s.SRF_NO in (select SRF_NO from IMP_CDIF where VOID_USER is null )))	s 
			on s.AWB_NO = a.AWB_NO and s.AWB_DATE = A.AWB_DATE and s.FLT_KEY = A.FLT_KEY and s.FLT_DATE = A.FLT_DATE
		LEFT JOIN (SELECT A.AWB_NO, A.AWB_DATE, A.FLT_KEY, A.FLT_DATE, SUM(LOCN_PCS) PCS, SUM(LOCN_WT) WT
			 	  	FROM AWB_INVENTORY A
					LEFT JOIN IMP_SRF S ON 
						A.SRF_No = S.SRF_No AND 
						((SRF_EXPY_DATE > sysdate and s.STATUS ='ISSUED') or s.STATUS ='POSTED')
					WHERE S.SRF_NO IS NULL AND A.CDIF_NO IS NULL AND A.TRM_NO IS NULL
				    GROUP BY A.AWB_NO, A.AWB_DATE, A.FLT_KEY, A.FLT_DATE) I
			on I.AWB_NO = A.AWB_NO and I.AWB_DATE = A.AWB_DATE and I.FLT_KEY = A.FLT_KEY and I.FLT_DATE = A.FLT_DATE,
		FLT_OPR B, IMP_CAR_AWB C
		WHERE A.FLT_KEY   = B.FLT_KEY AND
		A.FLT_DATE  = B.SCH_DATE AND
		B.FLT_TYPE  = 'A'		   AND
		A.AWB_NO	  = C.AWB_NO   AND
		A.AWB_DATE  = C.AWB_DATE AND		
		A.AWB_NO	  =		#awbNo#		   AND
		A.AWB_DATE= TO_DATE(#awbDate#, 'DDMONYY') 
		UNION
		SELECT C.CDIF_NO flightNoKey, 
		To_Char(C.CDIF_DATE,'DDMONYY') flightDate, 
		'' ata, 
		'' ataTime,	
		CH.PCS invPc, 
		CH.WT invWt, 
		'' manfPc, 
		'' manfWt, 
		'' cirType, 
		'' cirPcsType,
		'' cirPc,
		'' cirWt,
		'' docDisc,
		S.SRF_NO AS existSrfNo , '' AS flightNo, '' AS flightKey
		FROM IMP_CDIF C
		JOIN (SELECT CDIF_NO, SUM(NVL(CDIF_UTL_PCS, 0) + NVL(CDIF_PS_PCS, 0) + NVL(CDIF_DT_PCS, 0)+ NVL(CDIF_FOLLOW_ON_PCS, 0)) PCS, 
			 SUM(NVL(CDIF_UTL_WT, 0) + NVL(CDIF_PS_WT, 0) + NVL(CDIF_DT_WT, 0) + NVL(CDIF_FOLLOW_ON_WT, 0)) WT
			 FROM IMP_CDIF_HAWB GROUP BY CDIF_NO) CH ON C.CDIF_NO = CH.CDIF_NO
		LEFT JOIN (SELECT CDIF_NO, MAX(SEQ_NO) SEQ_NO FROM AWB_INVENTORY WHERE CDIF_NO IS NOT NULL GROUP BY CDIF_NO) AM ON AM.CDIF_NO = C.CDIF_NO
		LEFT JOIN AWB_INVENTORY AI ON AI.SEQ_NO = AM.SEQ_NO
		left join (Select s.SRF_No, s.AWB_NO, s.AWB_DATE, sf.FLT_KEY, sf.FLT_DATE from IMP_SRF s, IMP_SRF_FLT sf 
			 	  where s.SRF_No = sf.SRF_No 
			 	  and ((SRF_EXPY_DATE > sysdate and s.STATUS ='ISSUED') or s.STATUS ='POSTED' 
				  	  or s.SRF_NO in (select SRF_NO from IMP_CDIF where VOID_USER is null )))	s 
			on s.AWB_NO = c.AWB_NO and s.AWB_DATE = c.AWB_DATE and s.FLT_KEY = c.CDIF_NO and s.FLT_DATE = trunc(c.CDIF_DATE)
		WHERE C.VOID_USER IS NULL 
		AND C.AWB_NO	   =	#awbNo#		   
		AND C.AWB_DATE  = TO_DATE(#awbDate#, 'DDMONYY')  
		
		]]>
	</select>	
	<select id="imp_IssueSRF_RepeatYN_Check"  parameterClass="java.lang.String"  resultClass="java.lang.String">	
		SELECT NVL(REPEAT_YN,'N')
		FROM IMP_SRF
		WHERE CR_USER_ID = #PARAM#  and rownum = 1
		AND CR_DATE IN 
			(SELECT max(CR_DATE) FROM IMP_SRF WHERE CR_USER_ID = #PARAM#)
	</select>	
	
	<select id="getULDToSendMHCS"  parameterClass="map"  resultClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">	
		select uld_key as uld, lsp_no as lsp from awb_inventory where 
		FLT_KEY = #FLT_KEY#	AND FLT_DATE = TO_DATE(#FLT_DATE#,'DDMONYY')
		AND AWB_NO = #AWB_NO# AND AWB_DATE = TO_DATE(#AWB_DATE#,'DDMONYY')
		AND flt_type = 'I' and ( lsp_no is not null OR uld_key is not null)
	</select>
	
	<select id="getUldLspToSendMHCS"  parameterClass="map"  resultClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">	
		select uld_key as uld, lsp_no as lsp from awb_inventory where 
		AWB_NO = #AWB_NO# AND AWB_DATE = TO_DATE(#AWB_DATE#,'DDMONYY')
		AND flt_type = 'I' and ( lsp_no is not null OR uld_key is not null)
	</select>

	<select id="getawblistformilestonesrf"  parameterClass="java.lang.String"  resultClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">	
		select DECODE(ref_cdif_no,'',FLT_KEY,NULL,flt_key,REF_CDIF_NO) AS flightKey,to_char(flt_date,'DDMONYY') AS flightDate,awb_no AS awbNo,TO_CHAR(awb_date,'DDMONYY') AS awbDate,uld_key as uld,lsp_no as lsp,loc_code as locn,dlv_pcs  AS locnPcs,  dlv_wt AS locnWt from imp_srf_awb_inventory where srf_no=#PARAM# and dlv_pcs is not null and dlv_wt is not null
	</select>

	<select id="checkifAnyBookingAvail"  parameterClass="java.lang.String"  resultClass="cargo.cms.imprt.bo.SRFBO">	
		select booking_no as bookingNo,awb_no as awbNo,to_char(awb_date,'DDMONYY') as awbDate,flt_key as fltKey,
		to_char(flt_date,'DDMONYY') as fltDate,auth_rep_id as authRepID, auth_rep_name as authRepName,
		(select TO_CHAR(BKG_SLOT_DATE,'DDMONYY') || ':' || LPAD(BKG_SLOT_FROM,4,'0') from imp_booking where imp_booking.booking_no = imp_booking_dtl.booking_no ) AS bookingSlotDate,
		(select AGENT_ID from imp_booking where imp_booking.booking_no = imp_booking_dtl.booking_no ) AS agentCode,
		 mail_sent as mailSent
		from imp_booking_dtl
		where booking_no in (select booking_no from imp_booking where status = 'ISSUED' and srf_issued = 'N' and 
		TO_DATE(TO_CHAR(BKG_SLOT_DATE,'DDMONYY') || LPAD(BKG_SLOT_FROM,4,'0'),'DDMONYYHH24MI') BETWEEN SYSDATE  AND  
		TO_DATE(TO_CHAR((sysdate + (SELECT RULE_VALUE FROM CMSRULES WHERE RULE_CODE = 'CHK_SRF_BKG_HRS')/24),'DDMONYYHH24MI'),'DDMONYYHH24MI'))
	</select>	
	
	<select id="checkAnyBookingExistsForAWB"  parameterClass="map"  resultClass="java.lang.String">	
		select booking_no AS BKG_NO from imp_booking_dtl where flt_key = #FLT_KEY# and flt_date = to_date(#FLT_DATE#,'DDMONYY') 
	    and awb_no = #AWB_NO# and awb_date =  to_date(#AWB_DATE#,'DDMONYY')
	    and booking_no in (select booking_no from imp_booking where status = 'ISSUED' and srf_issued = 'N'and 
		TO_DATE(TO_CHAR(BKG_SLOT_DATE,'DDMONYY') || LPAD(BKG_SLOT_FROM,4,'0'),'DDMONYYHH24MI')  > 
		TO_DATE(TO_CHAR((sysdate + (SELECT RULE_VALUE FROM CMSRULES WHERE RULE_CODE = 'CHK_SRF_BKG_HRS')/24),'DDMONYYHH24MI'),'DDMONYYHH24MI'))
	</select>
	
	<update id="updateMailIndForBkgDtls" parameterClass="map" >
	    update imp_booking_dtl set mail_sent = 'N' where 
    	flt_key = #FLT_KEY# and flt_date = to_date(#FLT_DATE#,'DDMONYY') 
    	and awb_no = #AWB_NO# and awb_date =  to_date(#AWB_DATE#,'DDMONYY') 
    	and booking_no = #BKG_NO#
    </update>
		
	<select id="checkifAnyBookingTocreateJob"  parameterClass="java.lang.String"  resultClass="cargo.cms.imprt.bo.SRFBO">	
		select  booking_no as bookingNo from imp_booking where TO_DATE(TO_CHAR(BKG_SLOT_DATE,'DDMONYY') || LPAD(BKG_SLOT_FROM,4,'0'),'DDMONYYHH24MI')
		 between sysdate  and TO_DATE(TO_CHAR((sysdate + (SELECT RULE_VALUE FROM CMSRULES WHERE RULE_CODE = 'CONFIG_HRS_SRF_JOB')/24),'DDMONYYHH24MI'),'DDMONYYHH24MI')
     	 AND RTRV_JOB_YN = 'N'
	</select>
	
	<update id="updateJobOrderInd" parameterClass="map" >
		UPDATE imp_booking SET RTRV_JOB_YN = 'Y',lm_user_id = #USER_ID#,lm_date = sysdate WHERE booking_no = #BOOKING_NO#
	</update>
	
	<select id="getTheArivalStatus"  parameterClass="java.lang.String"  resultClass="java.lang.String">
		SELECT RULE_VALUE FROM CMSRULES WHERE RULE_CODE = 'SRF_JOB_ORDER'
	</select>
	
	<!-- Changed for QR :: RANJITH -->
	<select id="checkConstraintForSRF"  parameterClass="cargo.cms.imprt.bo.SRFBO"  resultClass="java.lang.String">	
		select imp_srf_iss_yn 
			from mast_constraint_code
			 where code = (SELECT V.CC_CODE FROM V_CST_IMP_CC_CODE_AWB V
			 				WHERE V.FLT_KEY = #fltKey#  AND V.FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND V.AWB_NO = #awbNo#
			 				AND NVL(V.HAWB_NO, '000000000000000000') =  '000000000000000000')
	</select>	
	
	<select id="checkBreakDownstart"  parameterClass="cargo.cms.imprt.bo.SRFBO"  resultClass="java.lang.String">	
		<![CDATA[
			select DECODE (COUNT(1),0,'N','Y') from IMP_CAR_SHP 
     		 where AWB_NO = #awbNo# and AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') AND FLT_KEY = #fltKey#  and FLT_DATE = TO_DATE(#fltDate#,'DDMONYY')
     		 AND (RECD_PCS <> MANIFEST_PCS OR RECD_WT <> MANIFEST_WT)
     	 ]]>
     </select>
		
	<update id="updateMailIndInBkgHD" parameterClass="cargo.cms.imprt.bo.SRFBO" >
		    Update imp_booking_dtl SET mail_sent = 'Y' where booking_no = #bookingNo# 
    		and flt_key = #fltKey# and flt_date = to_date(#fltDate#,'DDMONYY') 
    		and awb_no = #awbNo# and awb_date =  to_date(#awbDate#,'DDMONYY')  
	</update>
	
	<select id="getSrfAgentMailIds"  parameterClass="map"  resultClass="cargo.cms.imprt.bo.SRFBO">	
		select  email1 as emailAddress1,email2 as emailAddress2,email3 as emailAddress3,email4 as emailAddress4,email5 as emailAddress5
		from cust_company where CODE_DESC =  NVL(#AGENT_NAME#,CODE_DESC) AND code = #CODE#
	</select>	
	
	
	<select id="getSrfDetailsToSendMail"  parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO"  resultClass="java.util.HashMap">	
		select s.agent_id as agentId,(select code_desc from cust_company where code = s.agent_id)  as agentName
		 from imp_srf s where srf_no = #srfNo# 
	</select>
	<!-- Changed for QR :: RANJITH -->
	<!--<select id="imp_IssueSRF_previousInfo"  parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO"  resultClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">	
		SELECT
		SRF_EXPY_DATE srfExpiryDate,
		SRF_PRT_CODE srfPtr,
		INV_PRT_CODE invcPtr,
		TRUCK_CO truckerCo,
		TRUCK_NO truckNo,	   
		TD_NO truckDockNo,			   
		REPEAT_YN repeatYN,
		COLL_HKID hkId,
		COLL_NAME collectedBy
		FROM  IMP_SRF	  
		WHERE To_CHAR(AWB_DATE,'DDMONYY') =  #awbDate# AND
		AWB_NO   = #awbNo#	 
	</select>	 
	-->
	
	<parameterMap id="CCmap" class="map" >
	<parameter property="AWBNO" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	<parameter property="ORGFLTKEY" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	<parameter property="ORGFLTDATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	<parameter property="CC" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
	<parameter property="CTMREFNO" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
	</parameterMap>
	
	<procedure id="prc_get_cc_code" parameterMap="CCmap" >
		{call prc_get_cc_code(?,?,?,?,?)}
	</procedure>
	
	<parameterMap id="incvMap" class="map" >	
	<parameter property="SRFNO" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	<parameter property="AWBNO" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	<parameter property="AWBDATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	<parameter property="USERID" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	<parameter property="INVOICENO" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
	</parameterMap>
	
	<procedure id="callPrcCrdInv" parameterMap="incvMap" >
		{call PKG_IMP.PRC_CRD_INV(?,?,?,?,?)}
	</procedure>
	<select id="imp_IssueSRF_checkManifestPcsWt"  parameterClass="cargo.cms.imprt.bo.ShpPndDelivBO"  resultClass="java.lang.Integer">
	<![CDATA[
		select count(1) from Imp_CAR_SHP c
		where (c.MANIFEST_PCS != c.RECD_PCS or c.MANIFEST_WT != c.RECD_WT) 
		AND AWB_NO = #awbNo# and TO_CHAR(AWB_DATE, 'DDMONYY') = #awbDate#
		and c.Flt_KEY = #flightKeyProc# and To_char(c.FLT_DATE,'DDMONYY') = #flightDateProc# 
		]]>
	</select>
	<select id="imp_IssueSRF_checkForCir"  parameterClass="cargo.cms.imprt.bo.ShpPndDelivBO"  resultClass="java.lang.Integer">
	<![CDATA[
		select count(1) from Imp_CAR_SHP 
		where CIR_PROC_USER is null
		AND Flt_KEY =  #flightKeyProc# and To_char(FLT_DATE,'DDMONYY') = #flightDateProc# and 
		AWB_NO = #awbNo# and TO_CHAR(AWB_DATE, 'DDMONYY') = #awbDate#
	]]>
	</select>
	<select id="imp_IssueSRF_checkForNoBdsSubmitted" parameterClass="cargo.cms.imprt.bo.ShpPndDelivBO"  resultClass="java.lang.Integer">
	<![CDATA[
	Select count(1)
		from CST_SUBM s
		join cst_bd_disc c on s.Flt_KEY = c.Flt_KEY and s.FLT_DATE = c.FLT_DATE and 
				s.Flt_Type = c.Flt_Type and s.ver_no = c.ver_no 
		where s.Flt_KEY =  #flightKeyProc# and S.FLT_DATE = To_date(#flightDateProc# ,'DDMONYY') and 
			  s.Flt_Type = 'I' and s.REC_TYPE = 'BDS' and nvl(s.BD_COMPLETE, 'N') = 'N' and s.send_status = 'A' and c.AWB_NO = #awbNo# and
			  c.brkdn_code in ('LP', 'LC', 'SP', 'SC')
	]]>
	</select>
	
	<select id="chkBDSComplete" parameterClass="map"  resultClass="java.lang.String">
		<![CDATA[
		Select DECODE (COUNT(1),0,'N','Y')
			from CST_SUBM s
			join cst_bd_disc c on s.Flt_KEY = c.Flt_KEY and s.FLT_DATE = c.FLT_DATE and 
					s.Flt_Type = c.Flt_Type and s.ver_no = c.ver_no 
					where s.Flt_KEY =  #FLT_KEY# and S.FLT_DATE = To_date(#FLT_DATE# ,'DDMONYY') and 
				 	s.Flt_Type = 'I' and s.REC_TYPE = 'BDS' and nvl(s.BD_COMPLETE, 'N') = 'N' and s.send_status = 'A' and c.AWB_NO = #AWB_NO# and
				  	c.brkdn_code in ('LP', 'LC', 'SP', 'SC')
		]]>
	</select>
	
	<!-- Changed for QR :: RANJITH -->
	<select id="imp_IssueSRF_checkForBdsInProgress" parameterClass="cargo.cms.imprt.bo.ShpPndDelivBO"  resultClass="java.lang.Integer">
	<![CDATA[
		select count(1) 
		from Imp_CAR_SHP c
		join (Select s.Flt_KEY, s.FLT_DATE, s.Flt_Type, c.AWB_NO, s.REC_TYPE, max(s.VER_NO) VER_NO 
			   from CST_SUBM s
			   join cst_csgnm c on s.Flt_KEY = c.Flt_KEY and s.FLT_DATE = c.FLT_DATE and 
			   		s.Flt_Type = c.Flt_Type and s.ver_no = c.ver_no and s.REC_TYPE = c.RECV_REC_TYPE
			   where s.Flt_KEY =  c.FLT_KEY and s.FLT_DATE = c.FLT_DATE and 
			   s.Flt_Type = 'I' and s.REC_TYPE = 'BDS' and nvl(s.BD_COMPLETE, 'N') = 'N' and
			   s.SEND_STATUS in ('P', 'W')
			   group by s.Flt_KEY, s.FLT_DATE, s.Flt_Type, c.AWB_NO, s.REC_TYPE) s
			on c.FLT_KEY = s.FLT_KEY and c.FLT_DATE = s.FLT_DATE and c.AWB_NO = s.AWB_NO and s.FLT_TYPE = 'I'
		where c.AWB_NO = #awbNo# and c.FLT_KEY = #flightKeyProc# and c.FLT_DATE = to_date(#flightDateProc#,'DDMONYY')
	]]>
	</select>
	<select id="imp_IssueSRF_checkForNoNewCode" parameterClass="cargo.cms.imprt.bo.ShpPndDelivBO"  resultClass="java.lang.Integer">
		<![CDATA[
		select count(1)
		from (Select s.Flt_KEY, s.FLT_DATE, s.Flt_Type, s.REC_TYPE, c.AWB_NO, HAWB_NO, SUBM_DATE, 
					 case when BRKDN_CODE in ('SP', 'SC') then 1 else 0 end val
			   from CST_SUBM s
			   join cst_BD_DISC c on s.Flt_KEY = c.Flt_KEY and s.FLT_DATE = c.FLT_DATE and 
					s.Flt_Type = c.Flt_Type and s.ver_no = c.ver_no and c.MSG_TYPE = 'B'
			   where s.Flt_KEY =  #flightKeyProc# and To_char(S.FLT_DATE,'DDMONYY') = #flightDateProc# and 
			   s.Flt_Type = 'I' and s.REC_TYPE = 'BDS' and nvl(s.BD_COMPLETE, 'N') = 'N' and s.send_status = 'A' and c.AWB_NO = #awbNo#) s
		left join CST_RECV r on 
			   s.Flt_KEY = r.Flt_KEY and s.FLT_DATE = r.FLT_DATE and 
			   s.Flt_Type = r.Flt_Type and r.REC_TYPE in ('C', 'E') and s.AWB_NO = r.AWB_NO
		where (r.RECV_DATE > s.SUBM_DATE and s.val = 1)	or s.val = 0		
		]]>
	</select>
	<select id="imp_IssueSRF_checkForNoCode" parameterClass="cargo.cms.imprt.bo.ShpPndDelivBO"  resultClass="java.lang.Integer">
	<![CDATA[
	SELECT count(1) 
	FROM IMP_CAR_AWB A 
	JOIN IMP_CAR_SHP S on A.AWB_NO = S.AWB_NO and A.AWB_DATE = S.AWB_DATE
	LEFT JOIN V_CST_IMP_CC_CODE_AWB V ON V.FLT_KEY = S.FLT_KEY AND V.FLT_DATE = S.FLT_DATE AND V.AWB_NO = S.AWB_NO 
		 AND NVL(V.HAWB_NO, '000000000000000000') =  '000000000000000000' 
	WHERE S.FLT_KEY = #flightKeyProc# AND S.FLT_DATE = TO_DATE(#flightDateProc#,'DDMONYY') AND S.AWB_NO = #awbNo# 
		  AND V.CC_CODE IS NULL AND A.CATALOG not in ('IO')
	]]>
	</select>
	<parameterMap id="hmap" class="map" >
	<parameter property="RESULT" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
	<parameter property="FLIGHTKEY" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
	<parameter property="FLIGHTDATE" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
	<parameter property="AWBNO" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
	</parameterMap>
	<procedure id="imp_IssueSRF_checkForNoCodeHAWB" parameterMap="hmap" >
		{ ? = call fun_get_cc_cnt(?,?,?) }
	</procedure>
	<select id="imp_IssueSRF_checkForCallCustoms" parameterClass="cargo.cms.imprt.bo.ShpPndDelivBO"  resultClass="java.lang.Integer">
	<![CDATA[
		SELECT COUNT(1) FROM 
		(SELECT CC_CODE,IMP_SRF_ISS_YN FROM (SELECT T1.CC_CODE,IMP_SRF_ISS_YN FROM V_CST_IMP_CC_CODE_AWB T1,MAST_CONSTRAINT_CODE T2 
		WHERE T1.CC_CODE = T2.CODE AND AWB_NO = #awbNo# AND NVL(HAWB_NO, '000000000000000000') = '000000000000000000'
		ORDER BY RECV_DATE DESC, PRIORITY DESC) WHERE ROWNUM = 1) where IMP_SRF_ISS_YN='N'
		]]>
	</select>
	<select id="imp_IssueSRF_checkForRestrictedCode" parameterClass="cargo.cms.imprt.bo.ShpPndDelivBO"  resultClass="java.lang.Integer">
	<![CDATA[
		SELECT count(1) 
		FROM IMP_CAR_AWB A 
		JOIN IMP_CAR_SHP S on A.AWB_NO = S.AWB_NO and A.AWB_DATE = S.AWB_DATE
		LEFT JOIN V_CST_IMP_CC_CODE_AWB V ON V.FLT_KEY = S.FLT_KEY AND V.FLT_DATE = S.FLT_DATE AND V.AWB_NO = S.AWB_NO AND NVL(V.HAWB_NO, '000000000000000000') =  '000000000000000000' 
		WHERE S.FLT_KEY = #flightKeyProc# AND S.FLT_DATE = TO_DATE(#flightDateProc#,'DDMONYY') AND S.AWB_NO = #awbNo# 
	  	AND A.CATALOG not in ('IO') AND V.CC_CODE in ('VG', 'VQ', 'VI')
	]]>
	</select>
	<select id="imp_IssueSRF_checkForRP" parameterClass="cargo.cms.imprt.bo.ShpPndDelivBO"  resultClass="java.lang.Integer">
		<![CDATA[
		SELECT COUNT(1) FROM CST_DC_DTL 
		WHERE SHPM_TYPE IN ('I', 'A') AND AWB_NO = #awbNo# and TO_CHAR(AWB_DATE, 'DDMONYY') = #awbDate#
		]]>
	</select>
	<select id="imp_IssueSRF_codeDesc"  parameterClass="java.lang.String"  resultClass="java.lang.String">	
		SELECT CODE FROM CUST_COMPANY WHERE CODE_DESC = #PARAM#
	</select>
	<select id="imp_issueSrf_airlCrdAvail"  parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO"  resultClass="java.lang.String">	
	<![CDATA[
		SELECT sum(NVL(CR_BAL, 0)) airlCrdAvail
		FROM CUST_AGENT_AIRL_CREDIT  
		WHERE CR_EFF_DATE_FROM <= trunc(SYSDATE) AND CR_EFF_DATE_TO >= trunc(SYSDATE)
		AND UPPER(CR_TYPE) = UPPER(DECODE(#catalog#, 'IG', 'Import_GEN', DECODE(#catalog#, 'IO', 'Import_OBC', '*')))
		AND CUST_NO = #apptdAgtCode# AND CARR_CODE = #carrCode# AND nvl(upper(Status),'**') <> 'VOID' AND ROWNUM = 1
	]]>
	</select>
	
	<select id="imp_issueSrf_aatCrdAvail"  parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO"  resultClass="java.lang.String">	
	<![CDATA[
		SELECT sum(NVL(CR_BAL, 0)) aatCrdAvail
		FROM CUST_AGENT_CREDIT
		WHERE CR_EFF_DATE_FROM <= trunc(SYSDATE) AND CR_EFF_DATE_TO >= trunc(SYSDATE)
		AND CUST_NO = #apptdAgtCode# AND upper(CR_TYPE) = 'IMPORT_GEN' and nvl(upper(Status),'**') <> 'VOID' 
		AND instr( nvl(UPPER(CARR_CODE),'*'), nvl(UPPER(#carrCode#),'**') ) > 0 
	
	]]>
	</select>
	
	<select id="imp_issueSrf_dmApprvlAmt"  parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO"  resultClass="java.lang.String">	
	<![CDATA[
		SELECT sum(NVL(CR_AMT,0)) FROM CUST_AGENT_DM_APP 
		WHERE
		CUST_NO=#apptdAgtCode#
		AND (TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY') <= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') >= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') )
		AND nvl(upper(Status),'**') <> 'VOID'
	]]>
	</select>
	
	<!-- Changed for QR :: RANJITH -->
	<select id="getIssueSRFList"  parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO"  resultClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
	 <![CDATA[
	SELECT list.*,
(CASE WHEN (list.recd_pcs != NVL((list.pcs + CASE WHEN list.CIR_PROC_USER IS NULL THEN 0 ELSE CASE WHEN list.cirPcsType = 'SL' THEN -1 * list.cirPc ELSE list.cirPc END END),'0')) THEN 'Y' 
ELSE CASE WHEN (TO_CHAR(list.recd_wt,'99999990D9') != TO_CHAR(NVL((TO_NUMBER(NVL(list.wt,0)) + CASE WHEN list.CIR_PROC_USER IS NULL THEN 0 ELSE CASE WHEN list.cirWtType = 'SL' THEN -1 * TO_NUMBER(NVL(list.cirWt,0)) ELSE TO_NUMBER(NVL(list.cirWt,0)) END END),0),'99999990D9')) THEN 'Y' 
 ELSE CASE WHEN list.strCC IS NULL THEN 'Y' ELSE   
 CASE WHEN (SELECT COUNT(1) FROM MAST_CONSTRAINT_CODE A WHERE CODE = list.strCC AND IMP_SRF_ISS_YN = 'N') > 0 THEN 'Y' ELSE 'N' END END END END) disableInd
FROM (SELECT 'Normal' as srfType,awb.AGENT_CUST_NO,shp.carr_code,shp.awb_no awbNo,
  SUBSTR(shp.AWB_NO,1,3)
  ||'-'
  ||SUBSTR(shp.AWB_NO,4) AS awbNoDisp ,
  TO_CHAR(shp.awb_date,'DDMONYY') awbDate,
  a.awb_type awbType,
  shp.flt_key flightKey,
  shp.recd_pcs as recd_pcs,
  TRIM(TO_CHAR(shp.recd_wt,'99999990D9')) as recd_wt,
  shp.manifest_pcs pcs,
  TRIM(TO_CHAR(shp.manifest_wt, '99999990D9')) wt,
  awb.doc_chk_comp docChkCompl,
  awb.doc_chk_req docChkReqd,
  shp.flt_date,
  awb.SPL_CODE1 AS splCode1,
  awb.SPL_CODE2 AS splCode2,
  awb.SPL_CODE3 AS splCode3,
  awb.SPL_CODE4 AS splCode4,
  awb.SPL_CODE5 AS splCode5,
  awb.SPL_CODE6 AS splCode6,
  awb.SPL_CODE7 AS splCode7,
  awb.SPL_CODE8 AS splCode8,
  awb.SPL_CODE9 AS splCode9,
  awb.CONTENT   AS contents ,
  awb.lock_ind lockInd,
  (SELECT cc_code
    FROM
  (SELECT t1.cc_code
  FROM V_CST_IMP_CC_CODE_AWB t1
  WHERE awb_no                             = SHP.AWB_NO
  AND FLT_KEY=SHP.FLT_KEY
  AND TO_CHAR(FLT_DATE,'DDMONYY')=SHP.FLT_DATE
  AND NVL(hawb_no, '000000000000000000') = '000000000000000000'
  AND t1.flt_key NOT LIKE 'NB%'
  ) WHERE rownum = 1)  AS strCC,
  TO_CHAR(shp.FLT_DATE,'DDMONYY') AS flightDate,
  awb.APPNTD_AGENT                AS agentName,
  (SELECT SUM(inv.locn_pcs)
  FROM awb_inventory inv
  WHERE inv.awb_no = shp.awb_no
  AND inv.awb_date = shp.awb_date
  AND inv.flt_key  = shp.flt_key
  AND inv.flt_date = shp.flt_date
  ) AS invenPc,
  (SELECT TRIM(TO_CHAR(SUM(inv.locn_wt), '99999990D9'))
  FROM awb_inventory inv
  WHERE inv.awb_no = shp.awb_no
  AND inv.awb_date = shp.awb_date
  AND inv.flt_key  = shp.flt_key
  AND inv.flt_date = shp.flt_date
  )             AS invenWt,
  awb.CHRG_MODE AS chargeMode,
   (
  CASE
    WHEN (SELECT COUNT(*)
      FROM CUST_UNDERTAKING CU
      WHERE CU.AGENT_CODE =
        (SELECT AGENT_CODE FROM AWB WHERE AWB_DATE=shp.awb_date AND AWB_NO=shp.awb_no
        )
      AND CU.CARR_CODE =
        (SELECT CARR_CODE FROM AWB WHERE AWB_DATE=shp.awb_date AND AWB_NO=shp.awb_no
        )
      AND awb.AWB_DATE BETWEEN CU.EFF_FROM AND CU.EFF_TO) > 0
    THEN 'Y'
    ELSE 'N'
  END)                                     AS licUnder,
  shp.CIR_PROC_USER as CIR_PROC_USER,
  shp.cir_pcs_type                          AS cirPcsType,
  shp.cir_wt_type                          AS cirWtType,
  shp.cir_wt_type                          AS cirType,
  shp.cir_pcs                              AS cirPc,
  TRIM(TO_CHAR(shp.cir_wt, '99999990D9')) AS cirWt,
  (CASE WHEN (SELECT COUNT(*) FROM CUST_AIRL_SPL_CODE WHERE SPL_CODE=awb.SPL_CODE1 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=awb.SPL_CODE2 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=awb.SPL_CODE3 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=awb.SPL_CODE4 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=awb.SPL_CODE5 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=awb.SPL_CODE6 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=awb.SPL_CODE7 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=awb.SPL_CODE8 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=awb.SPL_CODE9 AND SPL_TYPE='SPL_VAL') > 0 THEN 'Y' ELSE 'N' END)  AS valInd,
  (CASE WHEN (SELECT COUNT(1) FROM CUST_AGENT_LEVEL_CRD WHERE CUST_NO=awb.AGENT_CUST_NO AND to_date(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') > = to_date(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') AND NVL(upper(Status),'**')                             <> 'VOID') > 0 THEN 'Y' ELSE
    CASE WHEN (SELECT COUNT(1) FROM CUST_AGENT_AIRL_CREDIT WHERE CUST_NO=awb.AGENT_CUST_NO AND to_date(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') > = to_date(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') AND NVL(status,'*')                                     <> 'VOID') > 0 THEN 'Y' ELSE
    CASE WHEN (SELECT COUNT(1) FROM CUST_AGENT_VIRTUAL_CREDIT WHERE CUST_NO=awb.AGENT_CUST_NO AND to_date(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') > = to_date(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') AND NVL(upper(Status),'**')                             <> 'VOID' ) > 0 THEN 'Y' ELSE 'N' END END END)                                      AS creditAgent,
  (SELECT COUNT(b.hawb_no)
  FROM EDI_FHL A,
    EDI_FHL_HAWB B
  WHERE AWB_NO = shp.awb_no
  AND awb_date = shp.awb_date
  AND A.TR_NO  =B.TR_NO
  ) AS fhlCount,
  (
  CASE
    WHEN (SELECT sum(coun) from (
        SELECT decode(count(1),0,0,1) coun
        FROM IMP_CHRG_ITM_REV_AWB
        WHERE AWB_NO = shp.awb_no
        AND AWB_DATE = shp.awb_date
        AND ITM_CODE = 'TCPREP'
        UNION
        SELECT decode(count(1),0,0,2) coun
      FROM IMP_CHRG_ITM_REV_AWB
      WHERE AWB_NO =shp.awb_no
      AND AWB_DATE =shp.awb_date
        AND ITM_CODE = 'TCBULK')) > 2
    THEN 'MIX'
    ELSE
      CASE
        WHEN (SELECT COUNT(1)
          FROM IMP_CHRG_ITM_REV_AWB
          WHERE AWB_NO =shp.awb_no
          AND AWB_DATE =shp.awb_date
          AND ITM_CODE ='TCPREP') > 0
        THEN 'PPK'
        ELSE
          CASE
            WHEN (SELECT COUNT(1)
              FROM IMP_CHRG_ITM_REV_AWB
              WHERE AWB_NO =shp.awb_no
              AND AWB_DATE =shp.awb_date
              AND ITM_CODE = 'TCBULK') > 0
            THEN 'Bulk'
            ELSE ''
          END
      END
  END) AS tcType,
  (SELECT DECODE(COUNT(1),0,'N','Y')  FROM MAST_CARRIER carrier  where nvl(carrier.allow_esrf,'N') = 'Y' and carrier.code = a.carr_code) as disableEAWB,
  (SELECT FUN_GET_ESRF_STATUS(a.awb_no,a.awb_date)  from DUAL) as eligibilityStatus,
  EAWB_PRINT_YN as awbPrinted  
FROM imp_car_shp shp,
  imp_car_awb awb,
  awb a
WHERE shp.awb_no   = awb.awb_no
AND shp.awb_date   = awb.awb_date
AND shp.awb_no     = a.awb_no
AND shp.awb_date   = a.awb_date
AND a.awb_closed_yn='N'
AND EXISTS
  (SELECT NULL
    FROM awb_inventory av
    WHERE av.awb_no = shp.awb_no
    AND av.awb_date = shp.awb_date
    and av.flt_key = shp.flt_key
    and av.flt_date = shp.flt_date
    and av.cdif_no is null
    AND av.locn_pcs > 0
  )
AND (shp.awb_no,shp.awb_date,shp.flt_key,shp.flt_date) NOT IN (
SELECT AWB_NO,TO_CHAR(AWB_DATE,'DDMONYY'),FLT_KEY,TO_CHAR(FLT_DATE,'DDMONYY') FROM BATCH_JOB_HD JOBHD, batch_job_dtl JOBDTL WHERE JOBDTL.JOB_ID = JOBHD.JOB_ID AND JOBHD.JOB_TYPE='SRF' AND jobdtl.comp_date IS NULL
UNION ALL
SELECT IMPSRF.AWB_NO,TO_CHAR(IMPSRF.AWB_DATE,'DDMONYY'),IMPSRFFLT.FLT_KEY,TO_CHAR(IMPSRFFLT.FLT_DATE,'DDMONYY') FROM IMP_SRF IMPSRF,IMP_SRF_FLT IMPSRFFLT WHERE IMPSRF.AWB_NO =shp.awb_no AND IMPSRF.AWB_DATE = shp.awb_date 
AND IMPSRFFLT.FLT_KEY=shp.flt_key AND IMPSRFFLT.FLT_DATE = shp.flt_date AND IMPSRFFLT.SRF_NO = IMPSRF.SRF_NO AND SYSDATE < IMPSRF.SRF_EXPY_DATE AND IMPSRF.STATUS = 'ISSUED'
)
AND a.awb_type='I'
UNION ALL
SELECT 'CDIF' AS srfType,car.AGENT_CUST_NO,'' carr_code,a.awb_no awbNo,
  SUBSTR(a.AWB_NO,1,3)
  ||'-'
  ||SUBSTR(a.AWB_NO,4) AS awbNoDisp,
  TO_CHAR(a.awb_date,'DDMONYY') awbDate,
  a.awb_type awbType,
  C.CDIF_NO flightKey,
  0 as recd_pcs,
  TRIM(TO_CHAR('0','99999990D9')) as recd_wt,
  0 pcs,
  TRIM(TO_CHAR(0, '99999990D9')) wt,
  'N/A' docChkCompl,
  'N/A' docChkReqd,
  C.CDIF_DATE AS flt_date,
    a.SPL_CODE1 AS splCode1,
  a.SPL_CODE2 AS splCode2,
  a.SPL_CODE3 AS splCode3,
  a.SPL_CODE4 AS splCode4,
  a.SPL_CODE5 AS splCode5,
  a.SPL_CODE6 AS splCode6,
  a.SPL_CODE7 AS splCode7,
  a.SPL_CODE8 AS splCode8,
  a.SPL_CODE9 AS splCode9,
  a.CONTENT   AS contents ,
  CAR.lock_ind lockInd,
(SELECT cc_code
    FROM
  (SELECT t1.cc_code
  FROM V_CST_IMP_CC_CODE_AWB t1
  WHERE awb_no                             = A.AWB_NO
  AND NVL(hawb_no, '000000000000000000') = '000000000000000000'
  AND t1.flt_key NOT LIKE 'NB%'
  ) WHERE rownum = 1)                           AS strCC,
  TO_CHAR(C.CDIF_DATE,'DDMONYY') AS flightDate,
  CAR.APPNTD_AGENT               AS agentName,
  CH.PCS                         AS invenPc,
  TRIM(TO_CHAR(CH.WT, '99999990D9'))                          AS invenWt,
  'N/A'                          AS chargeMode,
    (
  CASE
    WHEN (SELECT COUNT(*)
      FROM CUST_UNDERTAKING CU
      WHERE CU.AGENT_CODE =
        (SELECT AGENT_CODE FROM AWB WHERE AWB_DATE=a.awb_date AND AWB_NO=a.awb_no
        )
      AND CU.CARR_CODE =
        (SELECT CARR_CODE FROM AWB WHERE AWB_DATE=a.awb_date AND AWB_NO=a.awb_no
        )
      AND a.AWB_DATE BETWEEN CU.EFF_FROM AND CU.EFF_TO) > 0
    THEN 'Y'
    ELSE 'N'
  END)  AS licUnder,
  '' as CIR_PROC_USER,
  'N/A'                          AS cirPcsType,
  'N/A'                          AS cirWtType,
  'N/A' AS cirType,
  0 AS cirPc,
  TRIM(TO_CHAR('0','99999990D9')) AS cirWt,
  (CASE WHEN (SELECT COUNT(*) FROM CUST_AIRL_SPL_CODE WHERE SPL_CODE=car.SPL_CODE1 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=car.SPL_CODE2 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=car.SPL_CODE3 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=car.SPL_CODE4 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=car.SPL_CODE5 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=car.SPL_CODE6 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=car.SPL_CODE7 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=car.SPL_CODE8 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=car.SPL_CODE9 AND SPL_TYPE='SPL_VAL') > 0 THEN 'Y' ELSE 'N' END)                             AS valInd,
  (CASE WHEN (SELECT COUNT(1) FROM CUST_AGENT_LEVEL_CRD WHERE CUST_NO=CAR.AGENT_CUST_NO AND to_date(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') > = to_date(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') AND NVL(upper(Status),'**')                             <> 'VOID') > 0 THEN 'Y' ELSE
    CASE WHEN (SELECT COUNT(1) FROM CUST_AGENT_AIRL_CREDIT WHERE CUST_NO=CAR.AGENT_CUST_NO AND to_date(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') > = to_date(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') AND NVL(status,'*')                                     <> 'VOID') > 0 THEN 'Y' ELSE
    CASE WHEN (SELECT COUNT(1) FROM CUST_AGENT_VIRTUAL_CREDIT WHERE CUST_NO=CAR.AGENT_CUST_NO AND to_date(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') > = to_date(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') AND NVL(upper(Status),'**')                             <> 'VOID' ) > 0 THEN 'Y' ELSE 'N' END END END)                                      AS creditAgent,
  (SELECT COUNT(HAWB.hawb_no)
    FROM EDI_FHL HD,
      EDI_FHL_HAWB HAWB
    WHERE HD.AWB_NO = a.awb_no
    AND HD.awb_date = a.awb_date
    AND HAWB.TR_NO  =HD.TR_NO
  )     AS fhlCount,
  'N/A' AS tcType,
  (SELECT DECODE(COUNT(1),0,'N','Y')  FROM MAST_CARRIER carrier  where nvl(carrier.allow_esrf,'N') = 'Y' and carrier.code = a.carr_code) as disableEAWB,
  (SELECT FUN_GET_ESRF_STATUS(a.awb_no,a.awb_date)  from DUAL) as eligibilityStatus,
  '' as awbPrinted
FROM IMP_CDIF C
JOIN AWB a
ON c.awb_no         = a.awb_no
AND c.awb_date      = a.awb_date
AND a.awb_closed_yn = 'N'
AND a.awb_type      ='I'
JOIN IMP_CAR_AWB CAR
ON CAR.awb_no    = a.awb_no
AND CAR.awb_date = a.awb_date
JOIN
  (SELECT CDIF_NO,
    SUM(NVL(CDIF_UTL_PCS, 0) + NVL(CDIF_PS_PCS, 0) + NVL(CDIF_DT_PCS, 0)+ NVL(CDIF_FOLLOW_ON_PCS, 0)) PCS,
    SUM(NVL(CDIF_UTL_WT, 0)  + NVL(CDIF_PS_WT, 0) + NVL(CDIF_DT_WT, 0) + NVL(CDIF_FOLLOW_ON_WT, 0)) WT
  FROM IMP_CDIF_HAWB
  GROUP BY CDIF_NO
  ) CH
ON CH.CDIF_NO = C.CDIF_NO
LEFT JOIN
  (SELECT CDIF_NO,
    MAX(SEQ_NO) SEQ_NO
  FROM AWB_INVENTORY
  WHERE CDIF_NO IS NOT NULL
  GROUP BY CDIF_NO
  ) AM
ON AM.CDIF_NO = C.CDIF_NO
LEFT JOIN AWB_INVENTORY AI
ON AI.SEQ_NO = AM.SEQ_NO
WHERE C.VOID_USER IS NULL 
AND (A.awb_no,A.awb_date,c.CDIF_NO,TRUNC(c.CDIF_DATE)) NOT IN (
SELECT AWB_NO,TO_CHAR(AWB_DATE,'DDMONYY'),FLT_KEY,TO_CHAR(FLT_DATE,'DDMONYY') FROM BATCH_JOB_HD JOBHD, batch_job_dtl JOBDTL WHERE JOBDTL.JOB_ID = JOBHD.JOB_ID AND JOBHD.JOB_TYPE='SRF' AND jobdtl.comp_date IS NULL
UNION ALL
SELECT IMPSRF.AWB_NO,TO_CHAR(IMPSRF.AWB_DATE,'DDMONYY'),IMPSRFFLT.FLT_KEY,TO_CHAR(IMPSRFFLT.FLT_DATE,'DDMONYY') FROM IMP_SRF IMPSRF,IMP_SRF_FLT IMPSRFFLT WHERE IMPSRF.AWB_NO =A.awb_no AND IMPSRF.AWB_DATE = A.awb_date 
AND IMPSRFFLT.FLT_KEY=c.CDIF_NO AND IMPSRFFLT.FLT_DATE = TRUNC(c.CDIF_DATE) AND IMPSRFFLT.SRF_NO = IMPSRF.SRF_NO AND SYSDATE < IMPSRF.SRF_EXPY_DATE AND IMPSRF.STATUS = 'ISSUED')
AND EXISTS
    (SELECT NULL
    FROM awb_inventory av
    WHERE av.awb_no = a.awb_no
    AND av.awb_date = a.awb_date
    and av.cdif_no = c.cdif_no
    and av.cdif_no is not null
    AND av.locn_pcs > 0
    )) list WHERE 1=1
    ]]>
	<dynamic>
	<isEmpty property="awbSearchStatus">
		<isNotEmpty prepend="AND" property="carrCode">
		((list.CARR_CODE = #carrCode#) OR (EXISTS (SELECT NULL FROM IMP_SRF_FLT A,IMP_CDIF B WHERE A.SRF_NO = B.SRF_NO AND B.CDIF_NO=list.flightKey and a.CARR_CODE=#carrCode#)))
        </isNotEmpty>
        <isNotEmpty property="fltDateFrom">
        <isNotEmpty property="fltDateTo">
          and to_date(TO_CHAR(list.flt_date,'DDMONYY'),'DDMONYY') BETWEEN  to_date( #fltDateFrom# , 'DDMONYY' ) AND to_date( #fltDateTo# , 'DDMONYY' )
        </isNotEmpty>
        </isNotEmpty>
        <isNotEmpty prepend="AND" property="agentName">
          list.AGENT_CUST_NO in (select code from cust_company where code_desc like #agentName#||'%')
        </isNotEmpty>
        <isNotEmpty prepend="AND" property="agentCode">
          list.AGENT_CUST_NO = #agentCode#
        </isNotEmpty>
        <isNotEmpty prepend="AND" property="fltKey">
         list.flightKey = #fltKey#
        </isNotEmpty>
        <isNotEmpty property="loginCarrier">
				   AND ( list.carr_code = #loginCarrier# OR  list.carr_code IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE  = #loginCarrier#))             
        </isNotEmpty>
        </isEmpty>
        <isNotEmpty property="awbSearchStatus">
        AND list.awbNo in (#awbNo1#,#awbNo2#,#awbNo3#,#awbNo4#,#awbNo5#,#awbNo6#,#awbNo7#,#awbNo8#,#awbNo9#,#awbNo10#,
						   #awbNo11#,#awbNo12#,#awbNo13#,#awbNo14#,#awbNo15#,#awbNo16#,#awbNo17#,#awbNo18#,#awbNo19#,#awbNo20#,
						   #awbNo21#,#awbNo22#,#awbNo23#,#awbNo24#,#awbNo25#,#awbNo26#,#awbNo27#,#awbNo28#,#awbNo29#,#awbNo30#,
						   #awbNo31#,#awbNo32#,#awbNo33#,#awbNo34#,#awbNo35#,#awbNo36#,#awbNo37#,#awbNo38#,#awbNo39#,#awbNo40#)
		</isNotEmpty>
        
</dynamic>	
order by list.awbNo,list.flt_date,list.flightKey
	</select>
	<select id="getReIssueSRFList" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO" resultClass="cargo.cms.imprt.bo.SRFBO">
	<![CDATA[
		SELECT B.SRF_NO as srfNo,A.AWB_NO as awbNo,substr(A.AWB_NO,0,3)||'-'||substr(A.AWB_NO,4) as awbNoDisp,TO_CHAR(B.AWB_DATE,'DDMONYY') AS awbDate,
	  (SELECT CODE_DESC FROM CUST_COMPANY WHERE CODE=B.AGENT_ID AND ROWNUM=1) apptdAgt,
	  B.AUTH_REP_NAME AS authRepName,
	  B.AUTH_REP_ID AS authRepID,
	  B.AGENT_ID AS agentCode
	  FROM
	IMP_SRF B,IMP_CAR_AWB A
	WHERE B.AWB_NO = A.AWB_NO
	AND B.AWB_DATE = A.AWB_DATE
	AND B.post_date is null and B.post_time is null and B.post_user is null
	AND B.void_date is null and B.void_user is null
	AND EXISTS (SELECT NULL FROM awb_inventory av,IMP_SRF SRF,IMP_SRF_FLT SRFFLT WHERE 
	            av.awb_no = B.awb_no AND SRF.SRF_NO = SRFFLT.SRF_NO AND SRF.SRF_NO = B.SRF_NO
	            AND av.awb_date = B.awb_date and av.flt_key = SRFFLT.flt_key and av.flt_date = SRFFLT.flt_date  and av.cdif_no is null
	            AND av.locn_pcs > 0
	            UNION ALL
	            SELECT NULL FROM awb_inventory av  WHERE   av.awb_no = B.awb_no
  				AND av.awb_date = B.awb_date AND av.cdif_no  IS NOT NULL  AND av.locn_pcs > 0
	            )
	AND (B.AWB_NO,B.SRF_NO) NOT IN (SELECT B.AWB_NO,B.REF_KEY FROM BATCH_JOB_HD A, BATCH_JOB_DTL B WHERE B.JOB_ID = A.JOB_ID AND A.JOB_TYPE='REISSUESRF' AND B.COMP_DATE IS NULL)
	AND (sysdate <= B.SRF_EXPY_DATE AND B.STATUS='ISSUED')
	            ]]>
	<isNotEmpty property="agentCode">
	AND B.AGENT_ID = #agentCode#
	</isNotEmpty>
	<isNotEmpty property="agentName">
	AND B.AGENT_ID IN (SELECT CODE FROM CUST_COMPANY WHERE CODE_DESC = #agentName#)
	</isNotEmpty>
	order by b.srf_date desc
	</select>
		<select id="getReIssueSRFFltList" parameterClass="java.lang.String" resultClass="cargo.cms.imprt.bo.SRFBO">
	SELECT B.FLT_KEY AS fltKey,TO_CHAR(B.FLT_DATE,'DDMONYY') AS fltDate FROM IMP_SRF A,IMP_SRF_FLT B WHERE B.SRF_NO = A.SRF_NO AND A.SRF_NO = #PARAM#
	</select>
	<insert id="awbEventFORSRF" parameterClass="java.util.HashMap">
		INSERT INTO HIS_AWB_EVNT 
			(AWB_NO, AWB_DATE, COD_TRA_SEQ_NUM, COD_HIS_TYP, COD_FUNC, MODULE, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE)
		VALUES 
			(#awbNo#, TO_DATE(#awbDate#, 'DDMONYY'), #traSeqNo#, 'E', #EVENT_TYPE#, 'W', #userId#, SYSDATE, #userId#, SYSDATE)
	</insert>
	
	<insert id="awbEventFORFORSRFDTLS" parameterClass="java.util.HashMap">
		INSERT INTO HIS_AWB_EVNT_DTL 
			(AWB_NO, AWB_DATE, COD_TRA_SEQ_NUM, COD_SEQ_NUM, COD_ACT, COD_HIS_SEQ_NUM, DES_HIS_DTS,COD_HWB_NUM, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE)
		VALUES 
			(#awbNo#, TO_DATE(#awbDate#, 'DDMONYY'), #traSeqNo#, SQ_IMP_CAR_SHP_HIS.NEXTVAL, 'A', #EVENT_NUM#, #desHisDtls#,#transactionNUM#, #userId#, SYSDATE, #userId#, SYSDATE)
	</insert>
		<insert id="Imp_IssueSrfbatch_hd" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO" >
		INSERT INTO BATCH_JOB_HD (JOB_ID,JOB_TYPE,ACT_USER,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE)
		VALUES ( #latestBatchJob#,#jobType#,#userID#,#userID#,SYSDATE,#userID#,SYSDATE)
	</insert>
	<insert id="Imp_IssueSrfbatch_dtl" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO" >
		INSERT INTO BATCH_JOB_DTL (JOB_ID,REF_KEY,AWB_NO,AWB_DATE,FLT_KEY,FLT_DATE,CDIF_NO,SRF_NO,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,DOCLINE_NO)
		VALUES ( #latestBatchJob#,#refKey#,#awbNo#,#awbDate#,#flightKey#,#flightDate#,#cdifNo#,#srfNo#,#userID#,SYSDATE,#userID#,SYSDATE,nvl(#docLineNum#,'1'))
	</insert>

		<update id="updateBatchDTLRecord" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
		update BATCH_JOB_DTL set SRF_NO = #srfNo#,COMP_DATE = SYSDATE,REMARKS = #errorRemarks#,LM_DATE = SYSDATE,LM_USER_ID = #userID# WHERE JOB_ID = #latestBatchJob# AND AWB_NO = #awbNo# AND COMP_DATE is null
		<isNotEmpty property="flightKey" > 
		AND FLT_KEY=#flightKey# 
		</isNotEmpty>
		<isNotEmpty property="refKey" > 
		AND REF_KEY=#refKey# 
		</isNotEmpty>
	 </update>

		<select id="sqlgetbatchjobdetails" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		<![CDATA[			
			SELECT to_char(JOB_ID) AS JOBID , STATUS as STATUS
				FROM
				  (SELECT JOB_ID ,
				  CASE 
				  WHEN (select Count(1) from BATCH_JOB_DTL D where D.Job_Id = A.JOB_ID AND D.comp_date is null) > 0 THEN 'P'
				  WHEN (select Count(1) from BATCH_JOB_DTL D where D.Job_Id = A.JOB_ID AND D.comp_date is not null AND D.SRF_NO is null) > 0 THEN 'R'
				  WHEN (select Count(1) from BATCH_JOB_DTL D where D.Job_Id = A.JOB_ID AND D.comp_date is not null AND D.SRF_NO is not null) > 0 THEN 'C'  
				  END as STATUS
				  FROM BATCH_JOB_HD A
				  WHERE A.ACT_USER = #USER# AND A.JOB_TYPE = #JOB_TYPE#
				  AND CR_DATE > SYSDATE-1 ORDER BY CR_DATE DESC
				  )
				WHERE ROWNUM < = 5
		]]>
	</select>
	  <select id="sqlgetBatchJobStatus" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO" resultClass="java.lang.Integer">
		<![CDATA[
		SELECT COUNT(JOB_ID)
		FROM
		  (SELECT DISTINCT A.JOB_ID
		  FROM BATCH_JOB_HD A,
		    BATCH_JOB_DTL B
		  WHERE B.JOB_ID   = A.JOB_ID
		  AND A.JOB_TYPE   =#screenFlow#
		  AND A.ACT_USER = #userID#
		  AND B.COMP_DATE IS NULL
		  AND ((24 * (SYSDATE  - B.CR_DATE)) <= 120)
		  )
		]]>
	</select>
	<select id="srfExist"  parameterClass="cargo.cms.imprt.bo.ShpPndDelivBO"  resultClass="java.lang.Integer">
	 <![CDATA[
		Select COUNT(1)
			from IMP_SRF s, IMP_SRF_FLT sf 
			where s.SRF_No = sf.SRF_No 
			and ((SRF_EXPY_DATE > sysdate and s.STATUS ='ISSUED') or s.STATUS ='POSTED')
			AND S.AWB_NO = #awbNo# AND S.AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY') 
			 AND SF.FLT_KEY = #flightNoKey# AND SF.FLT_DATE = TO_DATE(#flightDate#, 'DDMONYY')   
		]]>
	</select>	
	<select id="imp_issueSrf_valid_colletedBy"  parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO"  resultClass="java.lang.Integer">
		SELECT count(1) FROM CUST_COMPANY C 
		LEFT JOIN CUST_AGENT_AUTH_REP R ON C.CODE = R.CUST_NO AND AUTH_REP_NAME = #collectedBy# AND AUTH_REP_ID = NVL(#hkId#, AUTH_REP_ID)
		WHERE C.CODE = #apptdAgtCode#
		AND R.CUST_NO IS NULL
	</select>
	<parameterMap id="Hmap" class="map" >
		<parameter property="FLTKEY" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="INOUT"/>
		<parameter property="FLTDATE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="INOUT"/>
		<parameter property="FLTNO" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
		<parameter property="CARRCODE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>	
	</parameterMap>
	<procedure id="splitFltKeyProc" parameterMap="Hmap" >
		{call PKG_IMP.PRC_FLT_FOR_CDIF(?,?,?,?)}
	</procedure>	
	<parameterMap id="ahmIssueSRF" class="map" >
		<parameter property="RESULT" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
		<parameter property="FLTKEY" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="CARR" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
		<parameter property="FLTNO" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
	</parameterMap>
	<procedure id="splitFltKey" parameterMap="ahmIssueSRF" >
	{  ? = call FUN_GET_FLT_CARR(?,?,?) }
	</procedure>
	<!-- Changed for QR :: RANJITH -->
	<!--<select id="Imp_SrfWhDest" parameterClass="cargo.cms.imprt.bo.ShpPndDelivBO" resultClass="cargo.cms.imprt.bo.WhDestBO">
		SELECT inv.LOC_CODE FROM AWB_INVENTORY inv		
		WHERE inv.AWB_NO = #awbNo# AND inv.AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') 		
		 AND AWB_TYPE = 'I' 
		AND inv.FLT_DATE = TO_DATE(#flightDate#,'DDMONYY') AND inv.FLT_KEY = #flightNoKey#
		AND ROWNUM=1
	</select>
	-->
	<select id="imp_IssueSRF_getStrgCharges"  parameterClass="map" resultClass="java.lang.String">
		<![CDATA[
			SELECT srf.AMT	FROM GT_SRF_CHARGES srf
			WHERE 
			srf.AWB_NO = #AWBNO# AND srf.AWB_DATE = TO_DATE(#AWBDATE#,'DDMONYY') AND 			
			srf.FLT_KEY = #FLTKEY# AND  
			srf.FLT_DATE = TO_DATE(#FLTDATE#,'DDMONYY') AND
			srf.RMODE = #PMODE# AND srf.CHRG_TYPE = #CHRGTYPE# AND 
			exists (select null
					       from   awb
					       where  awb_no = srf.awb_no
					       and    awb_date = srf.awb_date
						   and    awb_type = #AWBTYPE#)  			
		]]>
	</select>
	
<select id="getChargesListdata"  parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO" 		resultClass="cargo.cms.imprt.bo.ChargesListBO">
		<![CDATA[
		
		select awbNo, awbDate, itemCode, itemCodeSfx, itemDesc, m.REV_IND revInd, qty, unitPrice, waiveAmount,
        CASE WHEN (chamt - nvl(pchrg, 0) - nvl(waiveAmount,0)) < 0 THEN 0 ELSE (chamt - nvl(pchrg, 0) - nvl(waiveAmount,0)) END amt,
        (chamt - nvl(waiveAmount,0)) chrgAmt, minChrgInd, maxChrgInd,
	    a.AGENT_CODE custNo, a.AGENT_NAME custName, m.CASH_IND cashInd, m.STD_IND stdInd, m.UOM uom, m.UPD_DESC updDesc, m.UPD_RATE updRate, 
		m.WAVR_IND waiveCharges
		from 
			 (select G.AWB_NO awbNo, G.AWB_DATE awbDate, G.ITM_CODE itemCode , G.ITM_CODE_SFX itemCodeSfx, 
					  min(G.ITM_DESC) itemDesc, min(G.REV_IND) revInd,sum(G.QTY) qty, max(G.UNIT_PRICE) unitPrice, sum(G.AMT - nvl(pchrg, 0)) chamt, 
					 min(G.MIN_CHRG_IND) minChrgInd, min(G.MAX_CHRG_IND) maxChrgInd
					 from GT_SRF_CHARGES G
					 left join (select C.AWB_NO, C.AWB_DATE, SF.FLT_KEY, SF.FLT_DATE, C.ITM_CODE, C.ITM_CODE_SFX, nvl(sum(nvl(PAID_AMT_CASH,0) + nvl(PAID_AMT_CREDIT,0) + nvl(WAVR_AMT,0)),0) pchrg
							 from BILL_CHARGE_DTL C
							 JOIN IMP_SRF_FLT SF ON SF.SRF_NO = C.SRF_NO
							 where C.Status = 'PAID' AND C.ITM_CODE LIKE 'SC%'
							 group by C.AWB_NO, C.AWB_DATE, SF.FLT_KEY, SF.FLT_DATE, C.ITM_CODE, C.ITM_CODE_SFX) cps 
							 	   on cps.AWB_NO = g.AWB_NO AND cps.AWB_DATE = g.AWB_DATE
								   	  AND cps.FLT_KEY = g.FLT_KEY AND cps.FLT_DATE = g.FLT_DATE
							 	   	  AND cps.ITM_CODE = g.ITM_CODE and NVL(cps.ITM_CODE_SFX, '**') = NVL(g.ITM_CODE_SFX, '**')
					 where G.AWB_NO = #awbNo# and G.AWB_DATE = to_date(#awbDate#, 'DDMONYY')					 
					  and G.RMODE = 'SRF'
					 group by G.AWB_NO, G.AWB_DATE, G.ITM_CODE, G.ITM_CODE_SFX
			  union
			  Select AWB_NO, AWB_DATE, ITM_CODE, ITM_CODE_SFX, 
			  		 ITM_DESC, REV_IND, 1, 0, CHRG_AMT, 
					 'N', 'N'
					  from IMP_CHRG_ITM_REV_AWB 
					  where AWB_NO = #awbNo# and AWB_DATE = to_date(#awbDate#, 'DDMONYY')
					  AND ITM_CODE in ('CCIMPO', 'FCIMFC', 'DBIMPO')
			  ) c
		join IMP_CAR_AWB ica on ica.AWB_NO = c.awbNo AND ica.AWB_DATE = c.awbDate
		join BILL_ITM_MASTER m on m.ITM_CODE = c.itemCode and NVL(m.ITM_CODE_SFX, '**') = NVL(c.itemCodeSfx, '**') and nvl(m.ECT_HANDLER, NVL(ica.ECT_HANDLER, 'CPCT')) = NVL(ica.ECT_HANDLER, 'CPCT')
		join AWB a on a.AWB_NO = c.awbNo and a.AWB_DATE = c.awbDate and a.AWB_TYPE = 'I' 
		left join IMP_CHRG_ITM_REV_AWB ic on ic.AWB_NO = c.awbNo AND  ic.AWB_DATE = c.awbDate AND ic.ITM_CODE = c.itemCode and NVL(ic.ITM_CODE_SFX, '**') = NVL(c.itemCodeSfx, '**')
		left join (select AWB_NO, AWB_DATE, ITM_CODE, ITM_CODE_SFX, sum(NET_AMT+WAVR_AMT) pchrg  from BILL_CHARGE_DTL where Status = 'PAID' AND ITM_CODE NOT LIKE 'SC%' group by AWB_NO, AWB_DATE, ITM_CODE, ITM_CODE_SFX) cp on cp.AWB_NO = c.awbNo AND  cp.AWB_DATE = c.awbDate AND cp.ITM_CODE = c.itemCode and NVL(cp.ITM_CODE_SFX, '**') = NVL(c.itemCodeSfx, '**')
		left join (SELECT AWB_NO,AWB_DATE,ITM_CODE,ITM_CODE_SFX,SUM(WAVR_AMT) waiveAmount FROM  BILL_WAIVE_CHARGE  WHERE NVL(CHARGE_CREATED,'N') = 'N' group by AWB_NO, AWB_DATE,ITM_CODE,ITM_CODE_SFX) W_CHARGE  on W_CHARGE.AWB_NO = c.awbNo and W_CHARGE.AWB_DATE = c.awbDate and W_CHARGE.ITM_CODE = c.itemCode and NVL(W_CHARGE.ITM_CODE_SFX, '**') = NVL(c.itemCodeSfx, '**')
		where NVL(ic.PAYMENT_MODE, 'Revenue') not in ('No value')  
		]]>
	</select>
       	<select id="getOverChargeListdata"  parameterClass="map" resultClass="cargo.cms.imprt.bo.ChargesListBO">
			select tr_no gtTrNo, INV_NO InvNo, inv_doc_line_no invDocLineNo, to_char(INV_DATE,'DDMONYY') invDate,
			AWB_NO awbNo,to_char(AWB_DATE,'DDMONYY') awbDate, ITM_CODE itemCode,ITM_CODE_SFX  itemCodeSfx,  ITM_DESC itemDesc , OLD_CHRG oldChrg,
			NEW_CHRG newChrgAmt, nvl(NEW_CHRG,0) - nvl(OLD_CHRG,0) reimbChrg, reimb_Chrg rmbDbCharge, CUST_NAME custName, REV_IND revInd,
			inv_type invType 
			from GT_BILL_OLD_INV_DTL 
			where 1=1 and  
			<iterate property="trNo"
            open="(" close=")" conjunction="OR" >
                tr_no = $trNo[]$
                
            </iterate>   
	</select>	

	<select id="getOverChargeList_AWB_CARR_CATALOG"  parameterClass="cargo.cms.imprt.bo.ChargesListBO" resultClass="cargo.cms.imprt.bo.ChargesListBO">
			select carr_code carrCode, catalog catalog from awb 
					where awb_no = #awbNo# and awb_date = #awbDate# and rownum = 1
	</select>	
	
<select id="getPreviousExtraChargesListdata"  parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO" 		resultClass="cargo.cms.imprt.bo.ChargesListBO">
		<![CDATA[
		
	select awbNo, to_char(awbDate,'DDMONYY') awbDate, inv.inv_no invNo, to_char(inv.inv_date,'DDMONYY') invDate, inv.inv_type invType, 
      c.tr_no chrgTrNo, itemCode, itemCodeSfx, 
        nvl(itemDesc, (select itm_desc from BILL_ITM_MASTER where itm_code = itemCode and nvl(itm_code_sfx,'**') = nvl(itemCodeSfx,'**') and rownum = 1 ) ) itemDesc,
         m.REV_IND revInd, qty, unitPrice, 
        pchrg as oldChrg, nvl(chamt, 0) newChrgAmt, nvl(pchrg, 0) -  nvl(chamt, 0) - nvl(waiveAmount,0) reimbChrg,
        (chamt - nvl(waiveAmount,0)) newChrg, minChrgInd, maxChrgInd,
        a.AGENT_CODE custNo, inv.CUST_NAME custName, m.CASH_IND cashInd, m.STD_IND stdInd, m.UOM uom, m.UPD_DESC updDesc, m.UPD_RATE updRate, 
        m.WAVR_IND waiveCharges, carrCode, accAdjAmount, inv.catalog, remarks,invDocLineNo,cashInd 
    from 
			 (select C.tr_no ,C.AWB_NO awbNo, C.AWB_DATE awbDate, SF.FLT_KEY, SF.FLT_DATE, C.ITM_CODE itemCode, C.ITM_CODE_SFX itemCodeSfx,c.ECT_HANDLER,
           			nvl(sum(nvl(NET_AMT,0))  ,0) pchrg
							 from BILL_CHARGE_DTL C
							 JOIN IMP_SRF_FLT SF ON SF.SRF_NO = C.SRF_NO               
							 where C.Status = 'PAID'  and C.AWB_NO = #awbNo# and C.AWB_DATE = to_date(#awbDate#, 'DDMONYY')		
							 group by C.tr_no ,C.AWB_NO, C.AWB_DATE, SF.FLT_KEY, SF.FLT_DATE, C.ITM_CODE, C.ITM_CODE_SFX, c.ECT_HANDLER ) c       
    left join (select G.AWB_NO , G.AWB_DATE , G.ITM_CODE  , G.ITM_CODE_SFX , 
                            min(G.ITM_DESC) itemDesc, min(G.REV_IND) revInd,sum(G.QTY) qty, max(G.UNIT_PRICE) unitPrice,  sum(G.AMT) chamt, 
                            min(G.MIN_CHRG_IND) minChrgInd, min(G.MAX_CHRG_IND) maxChrgInd				
                            from GT_SRF_CHARGES  G 
                            group by G.AWB_NO, G.AWB_DATE, G.ITM_CODE, G.ITM_CODE_SFX ) gt on  C.awbNo = gt.AWB_NO AND C.awbDate = gt.AWB_DATE
							 	   	  AND C.itemCode = gt.ITM_CODE and NVL(C.itemCodeSfx, '**') = NVL(gt.ITM_CODE_SFX, '**')
    
    join (select chrgDtl.AWB_NO, chrgDtl.AWB_DATE, 
            invDtl.inv_no,invhd.inv_date, invDtl.DOC_LINE_NO AS invDocLineNo ,chrg_tr_no ,chrgDtl.ITM_CODE, chrgDtl.ITM_CODE_SFX, 
           invhd.inv_type,invDtl.CASH_IND  cashInd,chrgDtl.REMARKS AS remarks,
            (Select CATALOG FROM AWB WHERE AWB_NO = chrgDtl.AWB_NO and AWB_DATE =  chrgDtl.AWB_DATE and awb_type in ('I','T')  and rownum = 1) as catalog,
            (Select carr_code FROM AWB WHERE AWB_NO = chrgDtl.AWB_NO and AWB_DATE =  chrgDtl.AWB_DATE  and awb_type in ('I','T') and rownum = 1) as carrCode,
            nvl(invDtl.ACC_ADJ_AMT, 0) AS accAdjAmount, chrgDtl.CUST_NAME
            from BILL_CHARGE_DTL chrgDtl 
            join bill_inv_dtl invDtl on invDtl.chrg_tr_no = chrgDtl.tr_no 
            join BILL_inv_hd invhd on invhd.inv_no = invDtl.inv_no 
            where Status = 'PAID' 
    	) inv on c.tr_No = inv.chrg_tr_no and inv.AWB_NO = c.awbNo AND  inv.AWB_DATE = c.awbDate AND inv.ITM_CODE = c.itemCode and NVL(inv.ITM_CODE_SFX, '**') = NVL(c.itemCodeSfx, '**')
    
		join IMP_CAR_AWB ica on ica.AWB_NO = c.awbNo AND ica.AWB_DATE = c.awbDate
		join BILL_ITM_MASTER m on m.ITM_CODE = c.itemCode and NVL(m.ITM_CODE_SFX, '**') = NVL(c.itemCodeSfx, '**') and nvl(m.ECT_HANDLER, NVL(ica.ECT_HANDLER, 'CPCT')) = NVL(c.ECT_HANDLER, 'CPCT')
		join AWB a on a.AWB_NO = c.awbNo and a.AWB_DATE = c.awbDate and a.AWB_TYPE = 'I' 
		left join IMP_CHRG_ITM_REV_AWB ic on ic.AWB_NO = c.awbNo AND  ic.AWB_DATE = c.awbDate AND ic.ITM_CODE = c.itemCode and NVL(ic.ITM_CODE_SFX, '**') = NVL(c.itemCodeSfx, '**')		
		left join (SELECT AWB_NO,AWB_DATE,ITM_CODE,ITM_CODE_SFX,SUM(WAVR_AMT) waiveAmount FROM  BILL_WAIVE_CHARGE  WHERE NVL(CHARGE_CREATED,'N') = 'N' group by AWB_NO, AWB_DATE,ITM_CODE,ITM_CODE_SFX) W_CHARGE  on W_CHARGE.AWB_NO = c.awbNo and W_CHARGE.AWB_DATE = c.awbDate and W_CHARGE.ITM_CODE = c.itemCode and NVL(W_CHARGE.ITM_CODE_SFX, '**') = NVL(c.itemCodeSfx, '**')
		where itemcode like 'TC%' and NVL(ic.PAYMENT_MODE, 'Revenue') not in ('No value')
    	and (nvl(chamt,0) + nvl(waiveAmount,0) - nvl(pchrg, 0) ) < 0
		]]>
	</select>

	<update id="updateOverChargeOSTDCharges" parameterClass="map" >
 		update GT_BILL_OLD_INV_DTL set ostd_chrg = #ostd_chrg# where tr_no  = #trNo#
 	</update>

	<delete id="delete_GT_BILL_OLD_INV_DTL_OLDATA" parameterClass="cargo.cms.imprt.bo.ChargesListBO" >
 		<![CDATA[
 		delete from GT_BILL_OLD_INV_DTL where cr_date  < sysdate - 30
 		]]>
 	</delete>
 	<delete id="delete_GT_BILL_OLD_INV_DTL" parameterClass="cargo.cms.imprt.bo.ChargesListBO" >
 		delete from GT_BILL_OLD_INV_DTL where inv_no = #invNo# and inv_Date = #invDate#
 	</delete>
	<insert id="insert_GT_BILL_OLD_INV_DTL" parameterClass="cargo.cms.imprt.bo.ChargesListBO" >
		insert into GT_BILL_OLD_INV_DTL
		(TR_NO,  DOC_LINE_NO , INV_NO , inv_doc_line_no, INV_DATE , INV_TYPE , CHRG_TR_NO , AWB_NO , AWB_DATE , CARR_CODE , SRF_NO , ITM_CODE, 
		ITM_CODE_SFX , ITM_DESC , REV_IND , QTY , unit_Price , old_Chrg , new_Chrg, CHARGE_AMT , reimb_Chrg , ACC_ADJ_AMT , 
		RMK , CUST_NAME , CUST_NO	, CASH_IND , 	CR_USER_ID , CR_DATE , LM_USER_ID , LM_DATE  )
		values (#gtTrNo#, #docLineNo#, #invNo#, #invDocLineNo#, #invDate#, #invType#, #chrgTrNo#, #awbNo#, to_date(#awbDate#,'DDMONYY') , #carrCode#, #srfNo#, #itemCode#,
		#itemCodeSfx#, #itemDesc#, #revInd#, #qty#, #unitPrice#, #oldChrg#, #newChrg#, #newChrgAmt#, #reimbChrg#,#accAdjAmount#,
		#remarks#, #custName#, #custNo#, #cashInd#, #crUserId# , sysdate, #crUserId# , sysdate)
	</insert>
	
	<!-- Changed for QR :: RANJITH -->
	<update id="updateBillWaiveFromSrf" parameterClass="cargo.cms.imprt.bo.ChargesListBO" >
		Update BILL_WAIVE_CHARGE
		SET CHARGE_CREATED = 'Y'
		where
		AWB_NO = #awbNo# AND
		TO_CHAR(AWB_DATE, 'DDMONYY')= #awbDate# AND
		ITM_CODE = #itemCode# AND
		NVL(ITM_CODE_SFX,'**') = NVL(#itemCodeSfx#,'**')
		AND CHARGE_CREATED = 'N'
	</update>
	
	<select id="issuesrf_check_ecthandler" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO" resultClass="java.lang.Integer">
		select count(1)
		from imp_car_awb a
		join imp_car_shp s on s.AWB_NO = a.AWB_NO AND s.AWB_DATE = a.AWB_DATE
		join awb_inventory i on s.AWB_NO = i.AWB_NO AND s.AWB_DATE = i.AWB_DATE 
		AND s.FLT_KEY = i.FLT_KEY AND s.FLT_DATE = i.FLT_DATE
		where a.ECT_HANDLER != 'CPCT' and i.LOC_CODE = 'ECT'
		and s.AWB_NO = #awbNo# AND s.AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY')  
	</select>
	<select id="Imp_Expiry_IMP_SRF" parameterClass="java.lang.String" resultClass="java.lang.String"> 	
		select TO_CHAR((SYSDATE + (#extendHrs#/24)),'DDMONYY HH24:MI') from dual
	</select> 
	<select id="Imp_SrfCarrCode" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO" resultClass="java.lang.String">
		SELECT CARR_CODE 
		FROM AWB 
		WHERE AWB_NO = #awbNo# AND AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') AND AWB_TYPE = 'I'
	</select>
	<update id="Imp_IssueSrf_Upd_Consignee_Data" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO" >
		Update IMP_CAR_AWB SET
		AGENT_CUST_NO=#apptdAgtCode#, 	
		APPNTD_AGENT=#apptdAgt#,
		AGENT_ADDR1 = #apptdAgtAddrOne#,
		AGENT_ADDR2 = #apptdAgtAddrTwo#,
		AGENT_ADDR3 = #apptdAgtAddrThree#,
		AGENT_ADDR4 = #apptdAgtAddrFour#,
		AGENT_ADDR5 = #apptdAgtAddrFive#,
		AGENT_PLACE = #city#, 
		AGENT_CTRY_CODE = #country#, 
		AGENT_PIN_CODE = #pin#,
		BANK_ENDOS=#bankEndorsmentYN#, 
		BANK_TYPE=#bank#,  
		AIRLN_RMK=#awbRemarks# ,
		LM_USER_ID = #crUserId#,
		LM_DATE = sysdate,
		TR_TYPE ='DUMMY'
		where
		AWB_NO = #awbNo# AND
		TO_CHAR(AWB_DATE, 'DDMONYY')= #awbDate# 	
	</update>
	
	<update id="Imp_IssueSrf_Upd_Consignee_Data_AWB" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO" >
		Update AWB SET
		AGENT_CODE=#apptdAgtCode#, 	
		AGENT_NAME=#apptdAgt#
		where
		AWB_NO = #awbNo# AND
		TO_CHAR(AWB_DATE, 'DDMONYY')= #awbDate# 	
	</update>
	
	<insert id="Imp_IssueSrf_insertConsigneeData" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO" >
		INSERT INTO IMP_SRF ( 
		AWB_NO,
		AWB_DATE,
		SRF_NO,
		DOC_LINE_NO,
		SRF_DATE,		
		SRF_PRT_CODE,
		INV_PRT_CODE,
		TRUCK_CO,
		TRUCK_NO,
		TD_NO,
		COLL_NAME,
		COLL_HKID,
		REPEAT_YN,
		SRF_MODE,
		CARR_CODE,
		SRF_PCS,
		SRF_WT,
		ISSUE_USER,
		TR_STATUS,
		CR_USER_ID,
		CR_DATE,
		LM_USER_ID,
		LM_DATE , 
		SRF_EXPY_DATE,
		AUTH_REP_NAME,
		AUTH_REP_ID,
		CHARGE_STATUS,
		COLL_CENTER,
		AGENT_ID,
		TR_TYPE,
		AWB_CC_CODE,
			SHCS,
			ESRF_YN,
			print_ind,
			print_user,
			SRF_PRNT_DATE
		)
		VALUES
		( #awbNo#,
		TO_Date(#awbDate#, 'DDMONYY'),  
		#srfNo#,
		#docLineNo#,		
		sysdate,
		#srfPtr#,
		#invcPtr#,
		#truckerCoCode#,
		#truckNo#,
		#truckDockNo#,
		#collectedByCode#,
		#hkId#,
		#repeatYN#,
		'CRD',
		#carrCode#,
		#srfPc#,
		#srfWt#,
		#crUserId#,
		'N',
		#crUserId#,
		SYSDATE,
		#crUserId#,
		SYSDATE,
		TO_Date(#srfExpiryDate#,'DDMONYY HH24:MI'),
		#authPerson#,
		#authPersonId#,
		#chargeStatus#,#collCenter#,#apptdAgtCode#,
		#trtype#,
		#highCCCode#,
			#shcs#,
			DECODE(#srfPtr#,'ESRF','Y','N'),
			DECODE(#srfPtr#,'ESRF','Y','N'),
			DECODE(#srfPtr#,'ESRF',#crUserId#,''),
			DECODE(#srfPtr#,'ESRF',sysdate,'')
		)
	</insert>
 <update id="updateBatchDTLRecordCAR" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
		update BATCH_JOB_DTL set 
		CAR_CREATED = #carCreated#,
		COMP_DATE = SYSDATE,
		REMARKS = #errorRemarks#,LM_DATE = SYSDATE,
		LM_USER_ID = #userID#
		WHERE JOB_ID = #latestBatchJob#  AND AWB_NO = #awbNo# AND COMP_DATE is null
		<isNotEmpty property="flightKey" > 
			AND FLT_KEY=#flightKey# 
		</isNotEmpty>
		<isNotEmpty property="refKey" > 
			AND REF_KEY=#refKey# 
		</isNotEmpty>
	 </update>
	<select id="getbatchjobdetails" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		<![CDATA[			
			SELECT to_char(JOB_ID) AS JOBID , STATUS as STATUS
				FROM
				  (SELECT JOB_ID ,
				  CASE 
				  WHEN (select Count(1) from BATCH_JOB_DTL D where D.Job_Id = A.JOB_ID AND D.comp_date is null) > 0 THEN 'P'
				  WHEN (select Count(1) from BATCH_JOB_DTL D where D.Job_Id = A.JOB_ID AND D.comp_date is not null AND D.remarks is not null) > 0 THEN 'R'
				  WHEN (select Count(1) from BATCH_JOB_DTL D where D.Job_Id = A.JOB_ID AND D.comp_date is not null AND D.remarks is null) > 0 THEN 'C'  
				  END as STATUS
				  FROM BATCH_JOB_HD A
				  WHERE A.ACT_USER = #USER# AND A.JOB_TYPE = #JOB_TYPE#
				  AND CR_DATE > SYSDATE-1 ORDER BY CR_DATE DESC
				  )
				WHERE ROWNUM < = 5
		]]>
	</select>
	
	<select id="getBatchJobDetailsCAR" parameterClass="cargo.cms.imprt.bo.MaintainCARBO" resultClass="cargo.cms.imprt.bo.MaintainCARBO">
		<![CDATA[
			SELECT A.JOB_ID AS batchJob1,
			B.REF_KEY AS refKey,
			B.AWB_NO AS awbNo,
			DECODE(b.Car_Created,'Y','Y','N') AS result,
			B.REMARKS AS errorRemarks 
			FROM BATCH_JOB_HD A,BATCH_JOB_DTL B WHERE B.JOB_ID = A.JOB_ID AND A.JOB_TYPE = #jobType# AND A.JOB_ID = #jobId# ORDER BY b.job_id,b.docline_no ASC
		]]>
	</select>
	<insert id="Imp_IssueSrf_Shipment_Data" parameterClass="cargo.cms.imprt.bo.ShpPndDelivBO" >
		INSERT INTO IMP_SRF_FLT ( 
		SRF_NO,
		AWB_NO,
		AWB_DATE,
		CARR_CODE,
		FLT_NO,
		FLT_KEY,
		FLT_TYPE,
		FLT_DATE,
		INV_PCS,
		INV_WT,
		MANIFEST_PCS,
		MANIFEST_WT,
		CIR_TYPE,
		CIR_PCS,
		CIR_WT,
		CC_CODE,
		CTM_REF_NO,
		DC_IND,
		STRG_CHRG,
		RMK,
		CR_USER_ID,
		CR_DATE,
		LM_USER_ID,
		LM_DATE,
		ORIG_FLT_KEY, 
		ORIG_FLT_DATE,
		DLV_PCS,
		DLV_WT)
		VALUES 
		(#srfNo#,	
		#awbNo#,
		TO_Date(#awbDate#, 'DDMONYY'),  
		#flightKey#,
		#flightNo#,
		#flightNoKey#,
		'I',
		#flightDate#,
		#invPc#,
		#invWt#,
		#manfPc#,
		#manfWt#,
		#cirType#,
		#cirPc#,
		#cirWt#,
		#strCC#,
		#ctmRefNo#,
		NVL(#strDC#,'N'),
		#strChrg#,
		#remarks#,
		#crUserId#,
		SYSDATE,
		#crUserId#,
		SYSDATE,
		NVL(#flightKeyProc#,#flightNoKey#),
		NVL(TO_Date(#flightDateProc#, 'DDMONYY'),TO_Date(#flightDate#, 'DDMONYY')),
		#dlvPcs#,
		#dlvWt#)
	</insert>

    <insert id="Imp_IssueSrf_insertbillcharge_dtl" parameterClass="cargo.cms.imprt.bo.ChargesListBO" >
		INSERT INTO BILL_CHARGE_DTL
		(TR_NO,AWB_DATE, AWB_NO,  CALC_CHRG ,
		CASH_IND,CHRG_AMT,   CUST_NO , CUST_NAME , ITM_CODE, 
		ITM_CODE_SFX, ITM_DESC, MAX_CHRG_IND, MIN_CHRG_IND, NET_AMT ,
		QTY, REV_IND, SRF_NO,  STD_IND,  
		UNIT_PRICE,UOM, UPD_DESC_IND, UPD_RATE_IND, WAVR_IND,WAVR_AMT,WAVR_DONE,
		LM_USER_ID, CR_USER_ID, STATUS ,CURR_CODE, LM_DATE, CR_DATE,PAID_AMT_DM,WAVR_USER_ID,WAVR_DATE,WAVR_FORM_NO,WAVR_RMK,REMARKS,ECT_HANDLER)
		VALUES
		(#trNo# , TO_DATE(#awbDate#,'DDMONYY'), #awbNo#, NVL(#amt#,0)+NVL(#waiveAmount#,0) ,
		#cashInd# ,#amt# , #custNo# , #custName#,#itemCode# ,
		#itemCodeSfx#, #itemDesc#, #maxChrgInd#, #minChrgInd#, #amt#,
		#qty#,#revInd#,#srfNo#,#stdInd#,
		#unitPrice#, #uom#,#updDesc#,#updRate#,#waiveCharges#,NVL(#waiveAmount#,0),NVL(#waiveDone#,'N'),
		#crUserId#,#crUserId#,NVL(#chargeStatus#,'PENDING'),'HKD',SYSDATE,SYSDATE,#dmApprAmount#,#waiveUser#,TO_DATE(#waiveDate#,'DDMONYY HH24:MI:SS'), #wavrFormNo# , #wavrRmk#,#chargeRmk#, 
		decode(instr(#itemCode#,'TC'),1,NVL((SELECT ECT_HANDLER FROM IMP_CAR_AWB WHERE AWB_NO = #awbNo# and AWB_DATE = #awbDate#),'CPCT'),''))
	</insert>
	
	<parameterMap id="srfMap" class="map" >	
		<parameter property="SRFNO" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	</parameterMap>
	<procedure id="callPrcSrfRmk" parameterMap="srfMap" >
		{call PKG_IMP.PRC_SRF_RMK(?)}
	</procedure>
	<select id="Imp_countForCloseAwb" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO" resultClass="java.lang.Integer">
		<![CDATA[		
		SELECT COUNT(1)
		FROM IMP_CAR_AWB A
		JOIN (SELECT AWB_NO, AWB_DATE, SUM(MANIFEST_PCS) MANIFEST_PCS FROM IMP_CAR_SHP s 
			 GROUP BY AWB_NO, AWB_DATE) M ON A.AWB_NO = M.AWB_NO AND A.AWB_DATE = M.AWB_DATE
		JOIN (SELECT AWB_NO, AWB_DATE, SUM(SRF_PCS) SRF_PCS FROM IMP_SRF s
			 WHERE ((SRF_EXPY_DATE > sysdate and s.STATUS = 'ISSUED') or s.STATUS = 'POSTED' 
					  or s.SRF_NO in (select SRF_NO from IMP_CDIF where VOID_USER is null ))
			 and not exists (select null from IMP_CDIF where VOID_USER is null and CDIF_SRF_NO = s.SRF_NO)
			 GROUP BY AWB_NO, AWB_DATE) S
			ON A.AWB_NO = S.AWB_NO AND A.AWB_DATE = S.AWB_DATE
		WHERE NOT EXISTS (SELECT NULL FROM AWB_INVENTORY AI
						 WHERE AWB_NO = A.AWB_NO AND AWB_DATE = A.AWB_DATE 						 
						 AND (SRF_NO IS NULL OR 
									 EXISTS (SELECT NULL FROM IMP_SRF WHERE STATUS = 'ISSUED' and SRF_EXPY_DATE < sysdate AND SRF_NO = AI.SRF_NO))) 
		AND A.AWB_NO = #awbNo# AND A.AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
		AND A.AWB_PCS <= S.SRF_PCS AND A.AWB_PCS <= M.MANIFEST_PCS
		]]>
	</select>
	<update id="Imp_updateForCloseAwb" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
		UPDATE AWB SET AWB_CLOSED_YN = 'Y' , LM_USER_ID = #crUserId# , LM_DATE = sysdate
		WHERE AWB_TYPE = 'I' AND AWB_NO = #awbNo# AND AWB_DATE =  TO_DATE(#awbDate#,'DDMONYY')
	</update>
	<insert id="Imp_InsertImpSrfAwbInventory" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO" >
		INSERT INTO IMP_SRF_AWB_INVENTORY (
		SRF_NO, AWB_NO, AWB_DATE, CARR_CODE, CATALOG, CC_CODE, CTM_REF_NO, SCH_COLL_DATE, ULD_KEY, LSP_NO, 
		LOC_CODE, LOCN_PCS, LOCN_WT, FLT_DATE, FLT_KEY,DAM_IND, CR_USER_ID, CR_DATE, SEQ_NO,REF_CDIF_NO)
		SELECT SRF_NO, AWB_NO, AWB_DATE, (select CARR_CODE from AWB A where A.AWB_NO = AWB_INVENTORY.AWB_NO AND A.AWB_DATE = AWB_INVENTORY.AWB_DATE) , CATALOG, CC_CODE, REF_RMK, SCH_COLL_DATE, ULD_KEY, LSP_NO, 
		LOC_CODE, LOCN_PCS, LOCN_WT, FLT_DATE, FLT_KEY,DAM_IND, LM_USER_ID, SYSDATE ,SEQ_NO,CDIF_NO
		FROM AWB_INVENTORY WHERE SRF_NO = #srfNo#
	</insert>
	<update id="updateAwbInventoryRtnCargo" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
		UPDATE AWB_INVENTORY inv SET inv.SRF_NO = #srfNo# , inv.LM_USER_ID = #crUserId# , inv.LM_DATE = sysdate
		WHERE inv.AWB_NO = #awbNo# AND inv.AWB_DATE =  TO_DATE(#awbDate#,'DDMONYY')
		AND exists (select null
        from   awb
        where  awb_no = inv.awb_no
        and    awb_date = inv.awb_date
	    and    awb_type = 'E')  
	</update>
	<select id="checkSrfExist"  parameterClass="cargo.cms.imprt.bo.ShpPndDelivBO"  resultClass="java.lang.Integer">
	 <![CDATA[
		Select COUNT(1)
		from IMP_SRF s, IMP_SRF_FLT sf 
		where s.SRF_No = sf.SRF_No 
		and ((SRF_EXPY_DATE > sysdate and s.STATUS ='ISSUED') or s.STATUS ='POSTED')
		AND S.AWB_NO = #awbNo# AND S.AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY') 
		AND SF.FLT_KEY = #flightNoKey# AND SF.FLT_DATE = TO_DATE(#flightDate#, 'DDMONYY')   
		AND S.SRF_NO != #srfNo#
		]]>
	</select>
	<select id="fetchHouseDtls"  parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO"  resultClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
		select hawb_no hawbNo, strg_pcs hawbPcs, strg_wt hawbWt from hawb_inventory where seq_no in 
	(select distinct seq_no from  awb_inventory where awb_no=#awbNo# and FLT_KEY = #flightNoKey# and AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY'))
	</select>
	
	<!--  Changed for QR -->
	<select id="selectUrfUldsforissuesrf"  parameterClass="map"  resultClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
		SELECT uld.uld_key urfUld,
		  awb.flt_key flightNoKey,
		  TO_CHAR(awb.flt_date,'DDMONYY') flightDate, awb.awb_date 
		FROM uld_inventory uld,
		  awb_inventory awb
		WHERE uld.uld_key            =awb.uld_key
		AND awb.awb_no               =#awbNo#
		AND awb.awb_date             =#awbDate#
		AND (awb.FLT_KEY = #fltKey# OR awb.CDIF_NO = #fltKey#) 
		AND awb.FLT_DATE = #fltDate#
		AND (uld.HANDLING_MODE      IS NOT NULL
		AND (upper(uld.HANDLING_MODE)='PPK'
		OR upper(uld.HANDLING_MODE)  ='NBK'))
	</select>
	<select id="checkVirtualCrAcc"  parameterClass="java.lang.String"  resultClass="java.lang.String">
		select virtual_cr_acc from cust_company where code_desc=#apptdAgt# and agent_yn='Y'
	</select>
	<!--<insert id="Imp_IssueSrf_HAWBData" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO" >
			Insert into IMP_SRF_AWB_INVENTORY_DTL 
 			 (SEQ_NO, 
 			 HAWB_NO,
 			 LOCN_HAWB_PCS,
 			 LOCN_HAWB_WT,
  			CR_USER_ID,
  			CR_DATE,
  			LM_USER_ID,
  			LM_DATE,
  			SRF_NO)
  			values
		((select seq_no from hawb_inventory where hawb_no = #hawbNo# 
  			  and seq_no in (select seq_no from awb_inventory where 
   			 awb_no=#awbNo#  and srf_no=#srfNo# 
    		and FLT_KEY=#flightNoKey# and FLT_DATE=#flightDate#)),
		#hawbNo#,#hawbPcs#,#hawbWt#,#crUserId#,SYSDATE,#crUserId#,SYSDATE,#srfNo#)
	</insert>
	--><insert id="Imp_IssueSrf_HAWBData1" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO" >
		Insert into IMP_SRF_HAWB 
		(SRF_NO,
		HWB_NO,
		CR_USER_ID,
		CR_DATE,
		LM_USER_ID,
		LM_DATE,
		SRF_HAWB_PCS,
		SRF_HAWB_WT) 
		values 
		(#srfNo#,
		#hawbNo#,
		#crUserId#,
		sysdate,
		#crUserId#,
		sysdate,
		#hawbPcs#,
		#hawbWt#)
	</insert>
	
	<select id="fetchAuthRepName" parameterClass="map"  resultClass="java.lang.String">
		select auth_rep_name from cust_agent_auth_rep where AUTH_REP_ID=#hkId# and cust_no = (select code from cust_company where code_desc = #agtName#)
	</select>
	<select id="chkDocCompl" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO"  resultClass="java.lang.Integer">
		select COUNT(1) from imp_car_awb where awb_no=#awbNo# and awb_date=#awbDate# and (doc_chk_req='Y' and NVL(doc_chk_comp,'N')='N')
	</select>
	<select id="getSRFNo" parameterClass="java.lang.String" resultClass="java.lang.String">
		select substr(dbms_random.value(00000000, 99999999),0,7) num from dual 
	</select>
	<select id="checkSrfNo" parameterClass="java.lang.String"  resultClass="java.lang.Integer">
		select COUNT(1) from imp_srf where srf_no=#PARAM#
	</select>
	<select id="checkFsuSent"  parameterClass="cargo.cms.imprt.bo.ShpPndDelivBO"  resultClass="java.lang.Integer">
		select COUNT(1) from AWB_SHP_STS where awb_no=#awbNo# and FLT_NO = #flightNoKey# and AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY')
		AND FLT_DATE = TO_DATE(#flightDate#,'DDMONYY')
	</select>
	<select id="validateagentisssrf"  parameterClass="java.lang.String" resultClass="java.lang.Integer">
		<![CDATA[
				SELECT COUNT(1) as count FROM CUST_COMPANY WHERE (Trim(UPPER(CODE_DESC)) LIKE UPPER(#PARAM#)) AND ACTIVE = 'Y' AND AGENT_YN = 'Y'
			]]>
   	</select>
   	<select id="ValidateCollCenter"  parameterClass="java.lang.String"  resultClass="java.lang.Integer">
		SELECT Count(1) FROM MAST_WH_LOC WHERE upper(CODE) = upper(#location#)
	</select>
	<select id="imp_issuesrf_agentlist"  parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO"  resultClass="java.lang.Integer">
		 SELECT COUNT(1) FROM CUST_APP_AGENT WHERE CUST_NO in (select code from cust_company where code_desc=#consignee#) 
	</select>
	<select id="imp_issuesrf_chkagentlist"  parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO"  resultClass="java.lang.Integer">
		  SELECT COUNT(1) FROM CUST_APP_AGENT WHERE CUST_NO in (select code from cust_company where code_desc=#consignee#)
         and agent_id in (select code from cust_company where code_desc=#apptdAgt#)
	</select>
	
	<select id="imp_Reissue_SRF_getDataShipmentInfo"  parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO"  resultClass="cargo.cms.imprt.bo.ShpPndDelivBO">
			SELECT 
			a.carr_code returnCargoCarr,
			a.FLT_KEY flightNoKey, 
			to_Char(a.FLT_DATE,'DDMONYY') flightDate, 
			b.ACT_TIME AS ata, 
			PKG_COMMON.get_flt_ata(B.FLT_KEY, B.SCH_DATE, 'A')  as ataTime,	
			INV_PCS invPc, 
			INV_WT invWt, 
			MANIFEST_PCS manfPc, 
			MANIFEST_WT manfWt,
			CIR_TYPE cirType, 
			CIR_PCS cirPc, 
			CIR_WT cirWt, 
			DC_IND strDC, 
			STRG_CHRG strChrg,
			a.RMK remarks,
			orig_flt_key flightKeyProc, 
			to_Char(ORIG_FLT_DATE,'DDMONYY') flightDateProc,
			DLV_PCS dlvPcs,
			DLV_WT dlvWt 
			FROM IMP_SRF_FLT a 
			LEFT JOIN FLT_OPR b ON a.FLT_DATE = b.SCH_DATE AND a.FLT_KEY = b.FLT_KEY and b.flt_type = 'A'
			WHERE SRF_NO = #srfNo# 
	</select>
	<update id="Imp_IssueSrf_Upd_IMP_SRF" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO" >
		UPDATE IMP_SRF set
		VOID_DATE = SYSDATE,  
		VOID_USER = #crUserId#, 
		REISSUE_SRF_NO = #srfNo#, 
		REISSUE_DATE = SYSDATE, 
		LM_USER_ID = #crUserId#, 
		LM_DATE = SYSDATE,
		STATUS = 'REISSUED',
		TR_TYPE= #trtype#
		WHERE 
		SRF_NO = #oldSrfNo#
	</update>
	<insert id="Imp_ReIssueSrf_insertConsigneeData" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO" >
		INSERT INTO IMP_SRF ( 
		AWB_NO,
		AWB_DATE,
		SRF_NO,
		DOC_LINE_NO,
		SRF_DATE,		
		SRF_PRT_CODE,
		INV_PRT_CODE,
		TRUCK_CO,
		TRUCK_NO,
		TD_NO,
		COLL_NAME,
		COLL_HKID,
		REPEAT_YN,
		SRF_MODE,
		CARR_CODE,
		SRF_PCS,
		SRF_WT,
		ISSUE_USER,
		TR_STATUS,
		CR_USER_ID,
		CR_DATE,
		LM_USER_ID,
		LM_DATE , 
		SRF_EXPY_DATE,
		SRF_RMK,
		AUTH_REP_ID,
		AUTH_REP_NAME,AGENT_ID,CHARGE_STATUS,COLL_CENTER,
		TR_TYPE,
		AWB_CC_CODE, 
		SHCS
		)
		VALUES
		( #awbNo#,
		TO_Date(#awbDate#, 'DDMONYY'),  
		#srfNo#,
		#docLineNo#,		
		sysdate,
		#srfPtr#,
		#invcPtr#,
		#truckerCoCode#,
		#truckNo#,
		#truckDockNo#,
		#collectedByCode#,
		#hkId#,
		#repeatYN#,
		'CRD',
		#carrCode#,
		#srfPc#,
		#srfWt#,
		#crUserId#,
		'N',
		#crUserId#,
		SYSDATE,
		#crUserId#,
		SYSDATE,
		(sysdate + (#extendHrs#/24)),
		#srfRmk#,
		#authID#,
		#authName#,#apptdAgtCode#,#chargeStatus#,#collCenter#,
		#trtype#,
		#highCCCode#,
		#shcs#
		)
	</insert>
	
	
	<select id="fetchHouseRecordForSrf"  parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO"  resultClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
	SELECT HAWB_NO hawbNo,
	sum(STRG_PCS) hawbPcs, 
	sum(STRG_WT) hawbWt
	FROM
	HAWB_INVENTORY WHERE 
	SEQ_NO in 
	(SELECT SEQ_NO FROM AWB_INVENTORY 
	WHERE AWB_NO = #awbNo# AND 
	AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') AND 
	FLT_KEY = #flightNoKey# AND 
	FLT_DATE = TO_DATE(#flightDate#,'DDMONYY')) 
	group BY HAWB_NO
	</select>
	
	<select id="fetchHouseRecordWithSrf"  parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO"  resultClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
	SELECT HAWB_NO hawbNo, 
	SEQ_NO seqNo,
	sum(STRG_PCS) hawbPcs, 
	sum(STRG_WT) hawbWt,
	#srfNo# srfNo,
	#crUserId# crUserId FROM
	HAWB_INVENTORY WHERE 
	SEQ_NO in 
	(SELECT SEQ_NO FROM AWB_INVENTORY 
	WHERE AWB_NO = #awbNo# AND 
	AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') AND 
	SRF_NO = #srfNo# ) 
	group by HAWB_NO,SEQ_NO
	</select>

	<insert id="insertHseInvDetails" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
		Insert into IMP_SRF_AWB_INVENTORY_DTL 
 		 (SEQ_NO, 
 		  HAWB_NO,
 		  LOCN_HAWB_PCS,
 		  LOCN_HAWB_WT,
  		  CR_USER_ID,
  		  CR_DATE,
  		  LM_USER_ID,
  		  LM_DATE,
  		  SRF_NO)
  		 values
		 (#seqNo#,
		 #hawbNo#,
		 #hawbPcs#,
		 #hawbWt#,
		 #crUserId#,
		 SYSDATE,
		 #crUserId#,
		 SYSDATE,
		 #srfNo#)
	</insert>
	
	<!--<insert id="insertHseInvDetails1" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
		Insert into IMP_SRF_AWB_INVENTORY_DTL 
 		 (SEQ_NO, 
 		  HAWB_NO,
 		  LOCN_HAWB_PCS,
 		  LOCN_HAWB_WT,
  		  CR_USER_ID,
  		  CR_DATE,
  		  LM_USER_ID,
  		  LM_DATE,
  		  SRF_NO)
  		 values
		 (#seqNo#,
		 #hawbNo#,
		 #hawbPcs#,
		 #hawbWt#,
		 #crUserId#,
		 SYSDATE,
		 #crUserId#,
		 SYSDATE,
		 #srfNo#)
	</insert>
		
	--><select id="fetchSrfHouseDtl"  parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO"  resultClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
	SELECT HAWB_NO hawbNo, 
	sum(STRG_PCS) hawbPcs, 
	sum(STRG_WT) hawbWt,
	#srfNo# srfNo,
	#crUserId# crUserId FROM
	HAWB_INVENTORY WHERE 
	SEQ_NO in 
	(SELECT SEQ_NO FROM AWB_INVENTORY 
	WHERE AWB_NO = #awbNo# AND 
	AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') AND 
	SRF_NO = #srfNo# ) 
	group by HAWB_NO
	</select>
	
	<!--<select id="fetchHouseRecordForSrf1"  parameterClass="cargo.cms.imprt.bo.ShpPndDelivBO"  resultClass="cargo.cms.imprt.bo.ShpPndDelivBO">
	SELECT HAWB_NO hawbNo, 
	STRG_PCS hawbPcs, 
	STRG_WT hawbWt FROM
	HAWB_INVENTORY WHERE 
	SEQ_NO in 
	(SELECT SEQ_NO FROM AWB_INVENTORY 
	WHERE AWB_NO = #awbNo# AND 
	AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') AND 
	FLT_KEY = #flightNoKey# AND 
	FLT_DATE = TO_DATE(#flightDate#,'DDMONYY')) 
	ORDER BY HAWB_NO
	</select>
	--><!-- Issue SRF :: Bala :: End -->

	<!--  Undelivered Shipment List -->
	<!--  Changed for QR -->
 	<select id="undlv_shp_list" parameterClass="cargo.cms.imprt.bo.UndeliveredShpSearchBO" 
		resultClass="cargo.cms.imprt.bo.UndeliveredShpBO">
		SELECT * FROM
		 (
		 		SELECT
				  CASE
				    WHEN NVL(A.CAR_CREATED,'N') = 'N' THEN 'INVENTORY'  WHEN NVL(A.CAR_CREATED,'N') = 'Y' THEN 'CAR' END  AS tag,
				  TO_CHAR(A.FLT_DATE, 'DDMONYY') AS fltDate,
				  A.FLT_KEY                      AS fltKey,
				  TO_CHAR(A.AWB_DATE, 'DDMONYY') AS awbDate,
				  A.AWB_NO                       AS awbNo,
				  SUBSTR(A.AWB_NO,1,3) ||'-' ||SUBSTR(A.AWB_NO,4) AS awbNoDisp ,
				  SUBSTR(A.AWB_NO,1,3) awbNoPrefix ,
				  SUBSTR(A.AWB_NO,4) awbNoSuffix ,
				  (SELECT V.CC_CODE  FROM V_CST_IMP_CC_CODE_AWB V  WHERE V.FLT_KEY = A.FLT_KEY  AND V.FLT_DATE = A.FLT_DATE
				      AND V.AWB_NO = A.AWB_NO AND NVL(V.HAWB_NO, '000000000000000000') = '000000000000000000' AND ROWNUM = 1) AS ccCode,
				  B.APPNTD_AGENT                          AS agentName,
				  B.CSGNE_NAME                            AS consignee,
				  I.INV_PCS                               AS invPcs,
				  TRIM(TO_CHAR(I.INV_WT, '9999999990D9')) AS invWt,
				  A.CAR_CREATED car,
				  AI.LOC_CODE AS Locn,
				  (SELECT TO_CHAR(F.ACT_DATE, 'DDMONYY') FROM FLT_OPR F WHERE F.FLT_KEY = A.FLT_KEY  AND F.SCH_DATE  = A.FLT_DATE  AND F.FLT_TYPE  = 'A') AS actDate,
				  AWB.CARR_CODE carrCode,
				  A.SCH_COLL_YN AS schColl,
				  NVL( (SELECT NVL(CONSTRAINT,'N') FROM MAST_CONSTRAINT_CODE WHERE CODE = (SELECT V.CC_CODE FROM V_CST_IMP_CC_CODE_AWB V WHERE V.FLT_KEY = A.FLT_KEY
				    AND V.FLT_DATE = A.FLT_DATE AND V.AWB_NO = A.AWB_NO AND NVL(V.HAWB_NO, '000000000000000000') = '000000000000000000'  AND ROWNUM = 1 ) ), 'N') AS srfInd,
				  CASE WHEN A.CIR_PROC_USER IS NOT NULL
				    THEN 'Y' WHEN (A.RECD_PCS+ NVL( (SELECT NVL(SUM(actual_pcs),0) tt_pcs FROM v_ddt_dtl ddt WHERE (shp_trf_type = 'TT' OR trf_type = 'IF')
				                                      AND A.AWB_NO = ddt.AWB_NO AND A.AWB_DATE = ddt.AWB_DATE AND A.FLT_KEY = ddt.FLT_KEY AND A.FLT_DATE = ddt.FLT_DATE
				                                      ),0) ) > A.MANIFEST_PCS THEN 'Y' ELSE 'N' END AS brkDwn,
				  TO_CHAR(AI.STRG_DATE,'DDMONYY') AS storageDate
				FROM IMP_CAR_AWB B
				JOIN AWB ON AWB.AWB_NO = B.AWB_NO AND AWB.AWB_DATE = B.AWB_DATE AND AWB.AWB_TYPE = 'I'				 
				<isEmpty property="dayBefore">
		 			JOIN (select X.* from IMP_CAR_SHP X where (flt_key , flt_date) in (select flt_key, sch_date from flt_opr where to_date( TO_CHAR( DECODE(ACT_DATE,NULL,SCH_DATE,ACT_DATE), 'DDMONYY'), 'DDMONYY' ) 
				             BETWEEN to_date( #fromDate# , 'DDMONYY' ) AND  to_date(#toDate# , 'DDMONYY' ) and flt_type = 'A' )
				    ) A ON A.AWB_NO = B.AWB_NO AND A.AWB_DATE = B.AWB_DATE 
				</isEmpty>
				
				<isNotEmpty  property="dayBefore">
		 			JOIN IMP_CAR_SHP A ON A.AWB_NO    = B.AWB_NO AND A.AWB_DATE = B.AWB_DATE
				</isNotEmpty>				
				join AWB_INVENTORY AI ON A.AWB_NO = AI.AWB_NO AND A.AWB_DATE = AI.AWB_DATE AND A.FLT_KEY  = AI.FLT_KEY AND A.FLT_DATE = AI.FLT_DATE
				JOIN (SELECT AWB_NO, AWB_DATE, FLT_KEY, FLT_DATE, SUM(LOCN_PCS) INV_PCS,    SUM(LOCN_WT) INV_WT, MIN(SEQ_NO) SEQ_NO,    COUNT(1) INV_COUNT
                	FROM AWB_INVENTORY  GROUP BY AWB_NO, AWB_DATE, FLT_KEY, FLT_DATE  ) I ON AI.SEQ_NO = I.SEQ_NO    
				WHERE 1 =1 		  	
		 	<isEmpty property="carrierCode">
		 		<isNotEmpty property="loginCarrier">
					AND ( A.CARR_CODE = #loginCarrier# OR  A.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE  = #loginCarrier#))    
				</isNotEmpty>         
    		</isEmpty>
		 	<isNotEmpty property="carrierCode">
		 		AND A.CARR_CODE =#carrierCode#
			</isNotEmpty>
			<isNotEmpty property="agentName">
				AND B.APPNTD_AGENT=#agentName#
			</isNotEmpty>
			<isNotEmpty property="woAgent">
			<isEqual property="woAgent" compareValue="Y">			 
				AND B.APPNTD_AGENT is null
			</isEqual>
			<isEqual property="woAgent" compareValue="N">			 
				AND (B.APPNTD_AGENT is not null or B.APPNTD_AGENT is null)
			</isEqual>
			</isNotEmpty>
			<isNotEmpty property="agentCode">
				 AND EXISTS (SELECT NULL FROM CUST_COMPANY WHERE CODE_DESC= B.APPNTD_AGENT AND CODE= #agentCode#)
			</isNotEmpty>
		)	
		where tag = NVL(#status#, tag)
		<isNotEmpty  property="dayBefore">
		 AND (SYSDATE - TO_DATE(storageDate,'DDMONYY') > #dayBefore# )
		</isNotEmpty>
		<dynamic prepend="ORDER BY ">
           <isNotEmpty property="sortOrder.sortField">
             $sortOrder.sortField$
           </isNotEmpty>
           <isEmpty property="sortOrder.sortField">
             	awbNoDisp asc
           </isEmpty>
        </dynamic>
		
	</select>
	
	<!--  Changed for QR -->
	<select id="undlv_shp_listCOUNT" parameterClass="cargo.cms.imprt.bo.UndeliveredShpSearchBO" 
		resultClass="java.lang.Integer">
		SELECT COUNT(1) as totalRowCount FROM
		 (
		  	 SELECT
				  CASE
				    WHEN NVL(A.CAR_CREATED,'N') = 'N' THEN 'INVENTORY'  WHEN NVL(A.CAR_CREATED,'N') = 'Y' THEN 'CAR' END  AS tag,
				  TO_CHAR(A.FLT_DATE, 'DDMONYY') AS fltDate,
				  A.FLT_KEY                      AS fltKey,
				  TO_CHAR(A.AWB_DATE, 'DDMONYY') AS awbDate,
				  A.AWB_NO                       AS awbNo,
				  SUBSTR(A.AWB_NO,1,3) ||'-' ||SUBSTR(A.AWB_NO,4) AS awbNoDisp ,
				  SUBSTR(A.AWB_NO,1,3) awbNoPrefix ,
				  SUBSTR(A.AWB_NO,4) awbNoSuffix ,
				  (SELECT V.CC_CODE  FROM V_CST_IMP_CC_CODE_AWB V  WHERE V.FLT_KEY = A.FLT_KEY  AND V.FLT_DATE = A.FLT_DATE
				      AND V.AWB_NO = A.AWB_NO AND NVL(V.HAWB_NO, '000000000000000000') = '000000000000000000' AND ROWNUM = 1) AS ccCode,
				  B.APPNTD_AGENT                          AS agentName,
				  B.CSGNE_NAME                            AS consignee,
				  I.INV_PCS                               AS invPcs,
				  TRIM(TO_CHAR(I.INV_WT, '9999999990D9')) AS invWt,
				  A.CAR_CREATED car,
				  AI.LOC_CODE AS Locn,
				  (SELECT TO_CHAR(F.ACT_DATE, 'DDMONYY') FROM FLT_OPR F WHERE F.FLT_KEY = A.FLT_KEY  AND F.SCH_DATE  = A.FLT_DATE  AND F.FLT_TYPE  = 'A') AS actDate,
				  AWB.CARR_CODE carrCode,
				  A.SCH_COLL_YN AS schColl,
				  NVL( (SELECT NVL(CONSTRAINT,'N') FROM MAST_CONSTRAINT_CODE WHERE CODE = (SELECT V.CC_CODE FROM V_CST_IMP_CC_CODE_AWB V WHERE V.FLT_KEY = A.FLT_KEY
				    AND V.FLT_DATE = A.FLT_DATE AND V.AWB_NO = A.AWB_NO AND NVL(V.HAWB_NO, '000000000000000000') = '000000000000000000'  AND ROWNUM = 1 ) ), 'N') AS srfInd,
				  CASE WHEN A.CIR_PROC_USER IS NOT NULL
				    THEN 'Y' WHEN (A.RECD_PCS+ NVL( (SELECT NVL(SUM(actual_pcs),0) tt_pcs FROM v_ddt_dtl ddt WHERE (shp_trf_type = 'TT' OR trf_type = 'IF')
				                                      AND A.AWB_NO = ddt.AWB_NO AND A.AWB_DATE = ddt.AWB_DATE AND A.FLT_KEY = ddt.FLT_KEY AND A.FLT_DATE = ddt.FLT_DATE
				                                      ),0) ) > A.MANIFEST_PCS THEN 'Y' ELSE 'N' END AS brkDwn,
				  TO_CHAR(AI.STRG_DATE,'DDMONYY') AS storageDate
				FROM IMP_CAR_AWB B
				JOIN AWB ON AWB.AWB_NO = B.AWB_NO AND AWB.AWB_DATE = B.AWB_DATE AND AWB.AWB_TYPE = 'I'
				<isEmpty property="dayBefore">
		 			JOIN (select X.* from IMP_CAR_SHP X where (flt_key , flt_date) in (select flt_key, sch_date from flt_opr where to_date( TO_CHAR( DECODE(ACT_DATE,NULL,SCH_DATE,ACT_DATE), 'DDMONYY'), 'DDMONYY' ) 
				             BETWEEN to_date( #fromDate# , 'DDMONYY' ) AND  to_date(#toDate# , 'DDMONYY' ) and flt_type = 'A' )
				    ) A ON A.AWB_NO = B.AWB_NO AND A.AWB_DATE = B.AWB_DATE 
				</isEmpty>				
				<isNotEmpty  property="dayBefore">
		 			JOIN IMP_CAR_SHP A ON A.AWB_NO    = B.AWB_NO AND A.AWB_DATE = B.AWB_DATE
				</isNotEmpty>	
				join AWB_INVENTORY AI ON A.AWB_NO = AI.AWB_NO AND A.AWB_DATE = AI.AWB_DATE AND A.FLT_KEY  = AI.FLT_KEY AND A.FLT_DATE = AI.FLT_DATE
				JOIN (SELECT AWB_NO, AWB_DATE, FLT_KEY, FLT_DATE, SUM(LOCN_PCS) INV_PCS,    SUM(LOCN_WT) INV_WT, MIN(SEQ_NO) SEQ_NO,    COUNT(1) INV_COUNT
                	FROM AWB_INVENTORY  GROUP BY AWB_NO, AWB_DATE, FLT_KEY, FLT_DATE  ) I ON AI.SEQ_NO = I.SEQ_NO  
				WHERE 1 =1 
		 	<isEmpty property="carrierCode">
		 		<isNotEmpty property="loginCarrier">
					AND ( A.CARR_CODE = #loginCarrier# OR  A.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE  = #loginCarrier#))    
				</isNotEmpty>         
    		</isEmpty>
		 	<isNotEmpty property="carrierCode">
		 		AND A.CARR_CODE =#carrierCode#
			</isNotEmpty>
			<isNotEmpty property="agentName">
				AND B.APPNTD_AGENT=#agentName#
			</isNotEmpty>
			<isNotEmpty property="woAgent">
			<isEqual property="woAgent" compareValue="Y">			 
				AND B.APPNTD_AGENT is null
			</isEqual>
			<isEqual property="woAgent" compareValue="N">			 
				AND (B.APPNTD_AGENT is not null or B.APPNTD_AGENT is null)
			</isEqual>
			</isNotEmpty>
			<isNotEmpty property="agentCode">
				AND EXISTS (SELECT NULL FROM CUST_COMPANY WHERE CODE_DESC= B.APPNTD_AGENT AND CODE= #agentCode#)
			</isNotEmpty>		
		)	
		where tag = NVL(#status#, tag)
		<isNotEmpty  property="dayBefore">
		 AND (SYSDATE - TO_DATE(storageDate,'DDMONYY') > #dayBefore# )
		</isNotEmpty>
	</select>
	<select id="undlv_shp_list_checkCarrierExist" parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT to_char(count(1))
		FROM mast_carrier
		WHERE code = #carrierCode#
	</select>
 	<!--  Undelivered Shipment List -->

	
	 
 <!-- Retrieval Monitoring:: Starts -->
 <select id="get_details_cpsl_mhs" parameterClass="cargo.cms.imprt.bo.RetrievalMonitoringBO"
		resultClass="cargo.cms.imprt.bo.RetrievalMonitoringBO">
		select 
   		(select code_desc as func from mast_code_dtl where code= O.FUNC) as function,
   		replace(O.FUNC,'_',' ') as txtFunction,
   		O.REF_NO as refNo,
   		decode(instr(O.REF_NO,'/'),0,substr(O.REF_NO,0,6)||' '||substr(O.REF_NO,7),replace(O.REF_NO,'/',' ')) as txtRefNo,
		O.AWB_NO as awbNo,
		substr(O.AWB_NO,0,3)||' '||substr(O.AWB_NO,4) as txtAwbNo,
		case when O.LSP is not null then (select LOC_CODE from lsp_inventory where LSP_NO = O.LSP)
		else case when O.ULD is not null then (select LOC_CODE from uld_inventory where ULD_KEY = O.ULD) else null end end as currLocn,
		O.LSP as csd,
		O.ULD as uld,
		<![CDATA[
	    (CASE WHEN O.LSP is not null THEN (CASE WHEN (SELECT COUNT(1) FROM AWB_INVENTORY INV WHERE INV.LSP_NO=O.LSP) > 1 THEN '+' ELSE '' END)
    	ELSE CASE WHEN O.ULD is not null THEN (CASE WHEN (SELECT COUNT(1) FROM AWB_INVENTORY INV WHERE INV.ULD_KEY=O.ULD) > 1 THEN '+' ELSE '' END)
    	ELSE '' END
    	END) AS locnSymbol,
    	]]>
		substr(O.ULD,0,3)||' '||substr(O.ULD,4,(length(O.ULD)-5))||' '||substr(O.ULD,length(O.ULD)-1) txtUld,
		O.PC as pcs,
		O.WT as wt,
		O.TARGET as target,
		O.STATUS as status,
		SUBSTR(O.STATUS,0,1) as txtStatus,
		O.CURR_LOCN as source,
		O.HAWB_NO as hawb,
		O.AGENT_ID as agent,
		TO_CHAR(O.LM_DATE, 'DDMONYY HH24:MI') as lmDate,
		TO_CHAR(O.CR_DATE,'DDMONYY HH24:MI') as time,
		O.PRIORITY as priority,
		O.TYPE as type,
   		O.CR_USER_ID AS HANDLEUSER,
   		DECODE(O.STATUS,'REJECTED','Y',DECODE(O.STATUS,'CANCELLED','Y','N')) as action,
   		TO_CHAR(O.CR_DATE,'DDMONYY') as handleDate,
   		TO_CHAR(O.OB_FLT_DATE, 'DDMONYY') as obFltDate,
   		O.OB_FLT_KEY as obFltKey,
   		<![CDATA[
   		 	 (CASE WHEN (((O.STATUS IS NULL) OR (O.STATUS !='CANCELLED' AND O.STATUS !='COMPLETED')) AND ROUND((SYSDATE-O.CR_DATE)*24*60) > TO_NUMBER((SELECT RULE_VALUE FROM CMSRULES WHERE RULE_CODE='RTRVL_MTING_HIGHLIGHT'))) THEN 'R' ELSE 
         (CASE WHEN (SELECT COUNT(1) FROM MAST_CONST_CODE_REGULATOR WHERE REGULATOR_CODE IS NOT NULL AND CODE IN ((CASE WHEN AWB.AWB_TYPE = 'I' THEN 
    	 (SELECT cc_code FROM (SELECT t1.cc_code FROM V_CST_IMP_CC_CODE_AWB_ALL t1,mast_constraint_code t2 WHERE t1.cc_code = t2.code AND t1.awb_no = AWB.AWB_NO AND t1.AWB_DATE=AWB.AWB_DATE AND NVL(hawb_no, '000000000000000000') = '000000000000000000' and t1.flt_key not like 'NB%' ORDER BY recv_date DESC, priority DESC) where rownum = 1)
     	 ELSE 
     	 CASE WHEN AWB.AWB_TYPE = 'E' THEN 
     	 (SELECT cc_code FROM (SELECT t1.cc_code FROM v_cst_cc_code_ALL t1,mast_constraint_code t2 WHERE t1.cc_code = t2.code AND awb_no = AWB.AWB_NO AND NVL(hawb_no, '000000000000000000') = '000000000000000000'  
       AND t1.AWB_DATE = AWB.AWB_DATE	and t1.flt_key not like 'NB%' ORDER BY recv_date DESC, priority DESC) where rownum = 1)
     	 ELSE
     	 CASE WHEN AWB.AWB_TYPE = 'E' THEN (SELECT cc_code FROM (SELECT t1.cc_code FROM v_cst_cc_code_ALL t1,mast_constraint_code t2 WHERE t1.cc_code = t2.code AND awb_no = AWB.AWB_NO AND NVL(hawb_no, '000000000000000000') = '000000000000000000'  AND t1.AWB_DATE = AWB.AWB_DATE	and t1.flt_key not like 'NB%' ORDER BY recv_date DESC, priority DESC) where rownum = 1)
     	 ELSE '' END END END))) > 0 THEN 'O' ELSE 'X' 	 
     	 END)  END) AS indicator, 	 
     	 AWB.AGENT_CODE as agentCode,
     	 AWB.AGENT_NAME as agentName
     	 ]]>
		 from rtrv_move_order O
		 LEFT JOIN AWB AWB ON AWB.AWB_NO=O.AWB_NO AND AWB.AWB_DATE=PKG_COMMON.GET_AWB_DATE(O.AWB_NO,'')
		<isNotEmpty property="obFltKey">
		join (select awb_no,awb_date from exp_pmanifest_awb where flt_date=TO_DATE(#obFltDate#,'DDMONYY') and flt_key=#obFltKey#) E
    	on O.awb_no = E.awb_no and O.AWB_DATE = E.AWB_DATE
		</isNotEmpty>
	<![CDATA[
		where TO_DATE(TO_CHAR(O.CR_DATE,'DDMONYY HH24:MI') ,'DDMONYY HH24:MI')  >=TO_DATE(#rmDateTimeFrom#,'DDMONYY HH24:MI') 
		and TO_DATE(TO_CHAR(O.CR_DATE,'DDMONYY HH24:MI'),'DDMONYY HH24:MI')   <= TO_DATE(#rmDateTimeTo#,'DDMONYY HH24:MI')
		]]>
	<!-- 	<isEmpty property="area">
		<isNotEmpty property="jo">
		and (status='STARTED' or status is null)
		</isNotEmpty> 
		</isEmpty> -->
	<!--  	<isNotEmpty property="area">
		and status='STARTED' 
		</isNotEmpty> -->
		<isNotEmpty property="jo">
			and TYPE	 = 'J'
			<isNotEmpty property="status">
			and STATUS = #status#
			</isNotEmpty>
			<isEmpty property="status">
				<isNotEmpty property="desktop" >		
					and (STATUS IS NULL or status ='STARTED'or status ='COMPLETED' or status ='FCOMPLETED')
				</isNotEmpty>
				 <isNotEmpty property="hht" >		
					and (STATUS IS NULL or status ='STARTED')
				</isNotEmpty>
			</isEmpty>
		</isNotEmpty> 
		<isNotEmpty property="mhs">
			and TYPE	 = 'M'
			<isNotEmpty property="status">
			<isEqual compareValue="Blank" property="status">
			and status is NULL
			</isEqual>
			<isNotEqual property="status" compareValue="Blank">
			and STATUS = #status#
			</isNotEqual>
			</isNotEmpty>
			<isEmpty property="status">
				<isNotEmpty property="desktop" >		
					and (STATUS IN ('E','A') or status ='STARTED'  or status is NULL or status ='COMPLETED' or status ='FCOMPLETED')
				</isNotEmpty>
				 <isNotEmpty property="hht" >		
					and (STATUS IN ('E','A') or status ='STARTED'  or status is NULL)
				</isNotEmpty>
			 
			</isEmpty>
		</isNotEmpty> 
		<isNotEmpty property="whArea">
		and CURR_LOCN in (select code from mast_wh_loc where wh_group in (select wh_group from mast_wh_group where wh_area =#whArea#))
		</isNotEmpty> 
		<isNotEmpty property="whGroup">
		and CURR_LOCN in (select code from mast_wh_loc where wh_group =#whGroup#)
		</isNotEmpty>
    	<isNotEmpty property="whLocn">
		and CURR_LOCN	 = #whLocn#
		</isNotEmpty>
		<isNotEmpty property="sourceLevel">
		and CURR_LOCN	 IN (SELECT CODE FROM MAST_WH_LOC WHERE LOC_LEVEL=#sourceLevel#)
		</isNotEmpty> 
		 
		<isNotEmpty property="trArea">
		and TARGET in (select code from mast_wh_loc where wh_group in (select wh_group from mast_wh_group where wh_area =#trArea#))
		</isNotEmpty> 
		<isNotEmpty property="trGroup">
		and TARGET in (select code from mast_wh_loc where wh_group =#trGroup#)
		</isNotEmpty>
   		<isNotEmpty property="trLocn">
		and TARGET	 = #trLocn#
		</isNotEmpty> 
		<isNotEmpty property="targetLevel">
		and TARGET	 IN (SELECT CODE FROM MAST_WH_LOC WHERE LOC_LEVEL=#targetLevel#)
		</isNotEmpty> 
		<isNotEmpty property="truckNo">
		AND EXISTS (SELECT NULL FROM IMP_SRF SRF WHERE SRF.SRF_NO=O.REF_NO AND (SRF.TRUCK_NO=#truckNo# 
    	OR SRF.SRF_NO IN (SELECT SRF_NO FROM IMP_TRUCK_SRF ITS, TRUCK_TRIP TT WHERE ITS.SRF_NO = O.REF_NO  
    	AND ITS.TRIP_ID = TT.TRIP_ID AND TT.TRUCK_NO = #truckNo#)))
		</isNotEmpty> 
		<isNotEmpty property="awbNo">
		and AWB_NO	 = #awbNo#
		</isNotEmpty> 
		<isNotEmpty property="csd">
		and LSP	 = #csd#
		</isNotEmpty> 
		<isNotEmpty property="uld">
		and ULD	 = #uld#
		</isNotEmpty> 
		<isEqual property="priority" compareValue="Y">		
			and (PRIORITY IS NOT NULL AND PRIORITY != 'N')	
		</isEqual>
		<isEqual property="inv" compareValue="cpsl">		
			and INV_TYPE = 'CPSL'	
		</isEqual>
		<isEqual property="inv" compareValue="Agent">		
			and INV_TYPE = 'ASV'	
		</isEqual>
		<isNotEmpty property="trkFltKey">
		and TRUCK_FLT_NO=#trkFltKey# and TRUCK_FLT_DATE=TO_DATE(#trkFltDate#,'DDMONYY')
		</isNotEmpty>
		<isNotEmpty property="function">
		and FUNC = #function#
		</isNotEmpty>
	</select>
	
	<update id="update_status_cpsl_jo" parameterClass="cargo.cms.imprt.bo.RetrievalMonitoringBO" >
	UPDATE rtrv_move_order
	 SET 
	STATUS = 'STARTED', 
	LM_USER_ID = #lmUserId#,
	LM_DATE = SYSDATE  
	WHERE TO_CHAR(LM_DATE, 'DDMONYY HH24:MI') = #lmDate#
	<isNotEmpty property="csd">
	AND	LSP	 = #csd#
	</isNotEmpty> 
	<isNotEmpty property="uld">
	AND	ULD	 = #uld#
	</isNotEmpty>
	<isNotEmpty property="awbNo">
	AND	AWB_NO	 = #awbNo#
	</isNotEmpty>
	<isNotEmpty property="refNo">
	AND	REF_NO	 = #refNo#
	</isNotEmpty>
	<isNotEmpty property="currLocn">
	AND	CURR_LOCN	 = #currLocn#
	</isNotEmpty>
	<isNotEmpty property="target">
	AND	TARGET	 = #target#
	</isNotEmpty>
</update>	
<update id="do_complete_cpsl_jo" parameterClass="cargo.cms.imprt.bo.RetrievalMonitoringBO" >
	UPDATE rtrv_move_order
	 SET 
	STATUS = 'COMPLETED', 
	LM_USER_ID = #lmUserId#,
	LM_DATE = SYSDATE  
	WHERE TO_CHAR(LM_DATE, 'DDMONYY HH24:MI') = #lmDate#
	<isNotEmpty property="csd">
	AND	LSP	 = #csd#
	</isNotEmpty> 
	<isNotEmpty property="uld">
	AND	ULD	 = #uld#
	</isNotEmpty>
	<isNotEmpty property="awbNo">
	AND	AWB_NO	 = #awbNo#
	</isNotEmpty>
	<isNotEmpty property="refNo">
	AND	REF_NO	 = #refNo#
	</isNotEmpty>
	<isNotEmpty property="currLocn">
	AND	CURR_LOCN	 = #currLocn#
	</isNotEmpty>
	<isNotEmpty property="target">
	AND	TARGET	 = #target#
	</isNotEmpty>
</update>	
<update id="remove_target_cpsl_jo" parameterClass="cargo.cms.imprt.bo.RetrievalMonitoringBO" >
	<isNotEmpty property="csd">
		update lsp_inventory  
		set target='',
		LM_DATE = SYSDATE,
		LM_USER_ID = #lmUserId#
		where lsp_no=#csd#
	</isNotEmpty> 
	<isNotEmpty property="uld">
		update uld_inventory  
		 set target='',
		 LM_DATE = SYSDATE,
		 LM_USER_ID = #lmUserId#
		 where uld_key=#uld#
	</isNotEmpty>
	
</update>	


<update id="do_Accept_cpsl_mhs" parameterClass="cargo.cms.imprt.bo.RetrievalMonitoringBO" >
	UPDATE rtrv_move_order
	 SET 
	STATUS = 'A', 
	PRIORITY = #priority#,
	LM_USER_ID = #lmUserId#,
	LM_DATE = SYSDATE  
	WHERE TO_CHAR(LM_DATE, 'DDMONYY HH24:MI') = #lmDate#
	<isNotEmpty property="csd">
	AND	LSP	 = #csd#
	</isNotEmpty> 
	<isNotEmpty property="uld">
	AND	ULD	 = #uld#
	</isNotEmpty>
	<isNotEmpty property="awbNo">
	AND	AWB_NO	 = #awbNo#
	</isNotEmpty>
	<isNotEmpty property="refNo">
	AND	REF_NO	 = #refNo#
	</isNotEmpty>
	<isNotEmpty property="currLocn">
	AND	CURR_LOCN	 = #currLocn#
	</isNotEmpty>
	<isNotEmpty property="target">
	AND	TARGET	 = #target#
	</isNotEmpty>
</update>


<update id="do_save_cpsl_mhs" parameterClass="cargo.cms.imprt.bo.RetrievalMonitoringBO" >
	UPDATE rtrv_move_order
	 SET 
	PRIORITY = #priority#, 
	LM_USER_ID = #lmUserId#,
	LM_DATE = SYSDATE  
	WHERE TO_CHAR(LM_DATE, 'DDMONYY HH24:MI') = #lmDate#
	<isNotEmpty property="csd">
	AND	LSP	 = #csd#
	</isNotEmpty> 
	<isNotEmpty property="uld">
	AND	ULD	 = #uld#
	</isNotEmpty>
	<isNotEmpty property="awbNo">
	AND	AWB_NO	 = #awbNo#
	</isNotEmpty>
	<isNotEmpty property="refNo">
	AND	REF_NO	 = #refNo#
	</isNotEmpty>
	<isNotEmpty property="currLocn">
	AND	CURR_LOCN	 = #currLocn#
	</isNotEmpty>
	<isNotEmpty property="target">
	AND	TARGET	 = #target#
	</isNotEmpty>
</update>

	<select id="validate_locn_for_area" parameterClass="map" resultClass="java.lang.Integer">
		select count(1) from mast_wh_area where wh_area = #locn#
	</select>
	<select id="validate_locn_for_group" parameterClass="map" resultClass="java.lang.Integer">
		select count(1) from mast_wh_group where wh_group =#locn#
	</select>
	<select id="fetchfallbackmode"  parameterClass="java.lang.String"  resultClass="java.lang.String">
		select rule_value as fbMode from cmsrules where rule_code = 'FALL_BACK_MODE'
	</select>
	
	<!--  Changed for QR -->
	<select id="getFuncName"  parameterClass="java.lang.String"  resultClass="java.lang.String">
		select code_desc as func from mast_code_dtl where code=#function# and code_type = 'RTRV_MONITORING'
	</select>
 <!-- Retrieval Monitoring:: Ends -->

	<!-- Enquire Truck::Start -->
	<!--  Changed for QR -->
	<select id="truckDetail" parameterClass="cargo.cms.imprt.bo.EnqTruckBO"
		resultClass="cargo.cms.imprt.bo.EnqTruckBO">
		SELECT TRIP.TRIP_ID, TRIP.TRUCK_NO AS truckNo, TRIP.TRUCK_DOCK truckDocNo 
    	FROM TRUCK_TRIP TRIP
    	WHERE TRIP.CLOSED = 'N' AND TRIP.TRUCK_NO =	#truckNo#
	</select>
	<select id="truckSRFList" parameterClass="cargo.cms.imprt.bo.EnqTruckBO"
		resultClass="cargo.cms.imprt.bo.EnqTruckSRFBO">				
		SELECT SRF.SRF_NO AS srfNo, SRF.STATUS AS status,DECODE(UPPER(SRF.STATUS),'POSTED','Y','N') AS dlvCompl,SUBSTR(SRF.AWB_NO,1,3)||'-'||SUBSTR(SRF.AWB_NO,4,8) AS awbNo,
  SRF.SRF_PCS AS pc, SRF.SRF_WT AS wt, SRF.COLL_NAME AS collBy, SRF.COLL_HKID AS hkId, CAR.CONTENT AS content, 
  (select cc_code 
  from (select distinct awb_no, cc_code 
      from (select awb_no, cc_code, dense_rank() over (partition by awb_no order by PRTY desc) rank
        from V_CST_IMP_CC_CODE_AWB) 
      where rank = 1) c
  where c.awb_no = srf.awb_no) AS cc,
  (select orig_flt_key || '/' || to_char(orig_flt_date, 'DDMONYY') fltKey from imp_srf_flt where srf_no = srf.srf_no and rownum = 1) AS fltKey , 
  '' AS fltDate, CUST.CODE_DESC AS agtName,
  CAR.SPL_CODE1 || DECODE(CAR.SPL_CODE2,NULL,'',','||CAR.SPL_CODE2) || DECODE(CAR.SPL_CODE3,NULL,'',','||CAR.SPL_CODE3)
  || DECODE(CAR.SPL_CODE4,NULL,'',','||CAR.SPL_CODE4) || DECODE(CAR.SPL_CODE5,NULL,'',','||CAR.SPL_CODE5) || DECODE(CAR.SPL_CODE6,NULL,'',','||CAR.SPL_CODE6)
  || DECODE(CAR.SPL_CODE7,NULL,'',','||CAR.SPL_CODE7) || DECODE(CAR.SPL_CODE8,NULL,'',','||CAR.SPL_CODE8) || DECODE(CAR.SPL_CODE9,NULL,'',','||CAR.SPL_CODE9) AS shc
  FROM IMP_SRF SRF 
  JOIN IMP_CAR_AWB CAR ON SRF.AWB_NO = CAR.AWB_NO AND SRF.AWB_DATE = CAR.AWB_DATE
  LEFT JOIN CUST_COMPANY CUST ON SRF.AGENT_ID = CUST.CODE
  WHERE SRF.SRF_NO in (select srf_no from IMP_TRUCK_SRF TRUCK 
  where trip_id = (select max(to_number(trip_id)) from truck_trip where CLOSED = 'N' AND TRUCK_NO = #truckNo#))
  order by  SRF.SRF_NO
	</select>
	<select id="truckULDList" parameterClass="java.lang.String" resultClass="cargo.cms.imprt.bo.EnqTruckULDBO">
		SELECT hd.eir_no as urfNo,awb.uld_key as uldNo,awb.bulk_wt as wt
		FROM IMP_SRF SRF 
   		join uld_iss_hd hd on srf.srf_No=hd.SRF_NO
   		left join awb_inventory awb on srf.awb_no=awb.awb_no and srf.awb_date=awb.awb_date
        WHERE SRF.SRF_NO = #param#
	</select>
	<select id="truckSealList" parameterClass="cargo.cms.imprt.bo.EnqTruckBO"
		resultClass="cargo.cms.imprt.bo.EnqTruckBO">
		select seal_no as sealNo from truck_seal where truck_no = #truckNo#
	</select>
	<!-- Enquire Truck::End -->

<!-- Update Damage Cargo Record [Desktop]::Ranjith -->
<parameterMap id="trNoMap" class="map" >
	<parameter property="RESULT" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
		<parameter property="TR_TYPE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
</parameterMap>

	<procedure id="damreferenceno" parameterMap="trNoMap" >
		{? = call FUN_GET_TR_NO(?)}
	</procedure>
<select id="getShipmentDamageList"  parameterClass="cargo.cms.imprt.bo.CarShpBO" 
	 resultClass="cargo.cms.imprt.bo.CarShpBO">
			SELECT 
		   carawb.AWB_NO as awbNo,
		   carawb.AWB_PRFX as awbPrefix,
		   carawb.AWB_PCS as awbPcs,
		   carawb.AWB_WT as awbWt,
		   carawb.CONTENT as content,
		   carawb.CATALOG as catalog,
		   carawb.AWB_CLOSED as awbClosed,
		   carawb.PPK_TYPE as ppkType,
		   NVL(I.INV_DAM_PCS, 0) as damPcs, 
		   NVL(I.INV_DAM_WT, 0) as damWt, 
		   case when (select count(1) from awb_inventory ai where ai.awb_no=carawb.AWB_NO and ai.awb_date=carawb.awb_date and upper(dam_type)='MAJOR')>0 then 'Major'
           else case when  (select count(1) from awb_inventory ai where ai.awb_no=carawb.AWB_NO and ai.awb_date=carawb.awb_date and upper(dam_type)='MINOR')>0 then 'Minor' else null end end as damType, 
           decode((select count(1) from awb_inventory ai where ai.awb_no=carawb.AWB_NO and ai.awb_date=carawb.awb_date and upper(dam_type)='MAJOR'),0,'','Major') majorDamType,
           decode((select count(1) from awb_inventory ai where ai.awb_no=carawb.AWB_NO and ai.awb_date=carawb.awb_date and upper(dam_type)='MINOR'),0,'','Minor') minorDamType,
       	   carshp.MANIFEST_PCS as manifestPcs,  
		   carshp.MANIFEST_WT as manifestWt,  
		   carshp.RECD_PCS as recdPcs,
		   carshp.RECD_WT as recdWt,
		   TO_CHAR(carawb.AWB_DATE,'DDMONYY') as awbDate,
		   decode(carshp.DAM_PROC_USER, null,null,carshp.DAM_DECL_PCS) as damPcsDec, 
		   decode(carshp.DAM_PROC_USER, null,null,carshp.DAM_DECL_WT) as damWtDec,
		   carshp.DAM_PROC_USER as damProcUser, 
		   TO_CHAR(carshp.DAM_PROC_DATE, 'DDMONYY HH24:MI') as damProcDate,
		   carshp.DAM_RMK as damRmk,
		   carawb.ACCS_HANDLER as accsHandler, 
		   carawb.CONSOLE_IND as cnsl,		
		   carshp.DAM_REF_NO as damRefNo,
		   carshp.FLT_KEY as fltKey,
		   carshp.IMG_TRANS_ID as transactionId,
		   to_char(carshp.FLT_DATE,'DDMONYY') as fltDate
	FROM IMP_CAR_AWB carawb, IMP_CAR_SHP carshp
	LEFT JOIN (SELECT AWB_NO, AWB_DATE, FLT_KEY, FLT_DATE, sum(LOCN_PCS) INV_DAM_PCS, sum(LOCN_WT) INV_DAM_WT
			FROM AWB_INVENTORY WHERE DAM_IND = 'Y' OR NVL(WH_DAM_IND,'N') = 'Y'
			GROUP BY AWB_NO, AWB_DATE, FLT_KEY, FLT_DATE
		) I 
		   ON carshp.AWB_NO = I.AWB_NO AND
			carshp.AWB_DATE = I.AWB_DATE AND
			carshp.FLT_KEY = I.FLT_KEY AND
			carshp.FLT_DATE = I.FLT_DATE
	WHERE carshp.FLT_KEY = #fltKey# AND
		  carshp.AWB_NO = carawb.AWB_NO AND 
	      carshp.AWB_DATE = carawb.AWB_DATE AND
		  carshp.FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
	 	  (NVL(I.INV_DAM_PCS, 0) > 0 or carshp.DAM_PROC_USER is not null)
	 <dynamic prepend="ORDER BY ">
		           <isNotEmpty property="sortOrder.sortField">
		             $sortOrder.sortField$
		           </isNotEmpty>
		           <isEmpty property="sortOrder.sortField">
		             awbNo asc,damType asc
		           </isEmpty>
		 </dynamic>
</select>
<select id="getShipmentDamageListCOUNT"  parameterClass="cargo.cms.imprt.bo.CarShpBO" 
	 resultClass="cargo.cms.imprt.bo.CarShpBO">
			SELECT 
		  COUNT(1)
	FROM IMP_CAR_AWB carawb, IMP_CAR_SHP carshp
	LEFT JOIN (SELECT AWB_NO, AWB_DATE, FLT_KEY, FLT_DATE, DAM_PCS INV_DAM_PCS, DAM_WT INV_DAM_WT,DAM_TYPE
			FROM AWB_INVENTORY WHERE DAM_IND = 'Y' OR NVL(WH_DAM_IND,'N') = 'Y'
			GROUP BY AWB_NO, AWB_DATE, FLT_KEY, FLT_DATE,DAM_PCS,DAM_WT,DAM_TYPE
		) I 
		   ON carshp.AWB_NO = I.AWB_NO AND
			carshp.AWB_DATE = I.AWB_DATE AND
			carshp.FLT_KEY = I.FLT_KEY AND
			carshp.FLT_DATE = I.FLT_DATE
	WHERE carshp.FLT_KEY = #fltKey# AND
		  carshp.AWB_NO = carawb.AWB_NO AND 
	      carshp.AWB_DATE = carawb.AWB_DATE AND
		  carshp.FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
	 	  (NVL(I.INV_DAM_PCS, 0) > 0 or carshp.DAM_PROC_USER is not null)
</select>
<select id="getDamageConditionList"  parameterClass="cargo.cms.imprt.bo.CarShpBO" 
	 resultClass="cargo.cms.imprt.bo.MaintainDamageCondBO">
	SELECT  mastCodeDtl.code as damConditionCode, 
			mastCodeDtl.code_desc as damConditionDesc, 
			damCond.DAM_PCS as damPcs, 
			damCond.LM_USER_ID as lmUserId,    
			TO_CHAR(damCond.LM_DATE, 'DDMONYY HH24:MI') as lmDate
	
	FROM MAST_CODE_DTL mastCodeDtl LEFT JOIN IMP_AWB_STRG_DAM_COND damCond 
		 ON 
			 mastCodeDtl.CODE = damCond.DAM_COND AND
			damCond.AWB_NO = UPPER(#awbNo#) AND
			damCond.FLT_KEY = UPPER(#fltKey#) AND
			damCond.FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
			damCond.AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')  
	WHERE   
		   mastCodeDtl.CODE_TYPE = 'DAMAGE_CONDN' 
	ORDER BY mastCodeDtl.code_desc
</select>
<select id="getHeaderForMaintainHouse"  parameterClass="cargo.cms.imprt.bo.CarShpBO" 
	 resultClass="cargo.cms.imprt.bo.CarShpBO">
		SELECT 
		   carawb.AWB_NO as awbNo,
		   carawb.AWB_PRFX as awbPrefix,
		   carawb.AWB_PCS as awbPcs,
		   carawb.AWB_WT as awbWt,
		   carawb.CONTENT as content,
		   carawb.CATALOG as catalog,
		   carawb.AWB_CLOSED as awbClosed,
		   carawb.PPK_TYPE as ppkType,
		   NVL(I.INV_DAM_PCS, 0) as damPcs, 
		   NVL(I.INV_DAM_WT, 0) as damWt,
		   carshp.MANIFEST_PCS as manifestPcs,  
		   carshp.MANIFEST_WT as manifestWt,  
		   carshp.RECD_PCS as recdPcs,
		   carshp.RECD_WT as recdWt,
		   TO_CHAR(carawb.AWB_DATE,'DDMONYY') as awbDate,
		   decode(carshp.DAM_PROC_USER, null, NVL(I.INV_DAM_PCS, 0),carshp.DAM_DECL_PCS) as damPcsDec, 
		   decode(carshp.DAM_PROC_USER, null, NVL(I.INV_DAM_WT, 0),carshp.DAM_DECL_WT) as damWtDec,
		   carshp.DAM_PROC_USER as damProcUser, 
		   TO_CHAR(carshp.DAM_PROC_DATE, 'DDMONYY HH24:MI') as damProcDate,
	   	   carshp.DAM_RMK as damRmk,
		   carawb.ACCS_HANDLER as accsHandler, 
		   NVL(carawb.CONSOLE_IND,'N') as cnsl,		
		   carshp.DAM_REF_NO as damRefNo,
		   carshp.FLT_KEY as fltKey,
		   (select AWB_IMAGE_NAME FROM AWB_IMAGE WHERE seq_no = (SELECT MAX(SEQ_NO) FROM AWB_IMAGE WHERE AWB_NO = #awbNo# AND AWB_DATE = #awbDate#)) as transactionId,
		   to_char(carshp.FLT_DATE,'DDMONYY') as fltDate,
		   carawb.wh_rmk oldDamRmk 		
	FROM IMP_CAR_AWB carawb, IMP_CAR_SHP carshp
	LEFT JOIN (SELECT AWB_NO, AWB_DATE, FLT_KEY, FLT_DATE, sum(LOCN_PCS) INV_DAM_PCS, sum(LOCN_WT) INV_DAM_WT
			FROM AWB_INVENTORY WHERE DAM_IND = 'Y' OR NVL(WH_DAM_IND,'N') = 'Y'
			GROUP BY AWB_NO, AWB_DATE, FLT_KEY, FLT_DATE
		) I 
		   ON carshp.AWB_NO = I.AWB_NO AND
			carshp.AWB_DATE = I.AWB_DATE AND
			carshp.FLT_KEY = I.FLT_KEY AND
			carshp.FLT_DATE = I.FLT_DATE
	WHERE 
		  carshp.AWB_NO = UPPER(#awbNo#) AND
		  carshp.FLT_KEY = UPPER(#fltKey#) AND
		  carshp.AWB_NO = carawb.AWB_NO AND 
		  carshp.AWB_DATE  = carawb.AWB_DATE AND
		  carshp.FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
		  carshp.AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') AND
	 	  (NVL(I.INV_DAM_PCS, 0) > 0 or carshp.DAM_PROC_USER is not null)
	 	  
</select>
<select id="getHawbDamagelist"  parameterClass="cargo.cms.imprt.bo.CarShpBO" 
	 resultClass="cargo.cms.imprt.bo.HAWBStorDtlBO">
SELECT 
  TO_CHAR(FLT_DATE, 'DDMONYY') as fltDate, 
  FLT_KEY as fltKey, S.AWB_NO as awbNo, TO_CHAR(S.AWB_DATE,'DDMONYY') as awbDate, 
  S.HAWB_NO as hseAwbNo, M.HAWB_PCS as hseAwbPcs, M.HAWB_WT as hseAwbWt, 
  DAM_PCS as damPcs, DAM_WT as damWt, DAM_RMK as damRmk, 
  DAM_USER as damUser, TO_CHAR(DAM_DATE, 'DDMONYY HH24:MI') as damDate,
  'false' as newRecord
FROM IMP_HAWB_STRG_DTL S
LEFT JOIN MAST_HAWB M ON S.AWB_NO = M.AWB_NO AND S.AWB_DATE = M.AWB_DATE AND S.HAWB_NO = M.HAWB_NO
WHERE 	
	S.AWB_NO = UPPER(#awbNo#) AND
	S.FLT_KEY = UPPER(#fltKey#) AND
	S.FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
	S.AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') AND  
	S.DAM_USER IS NOT NULL
</select>

<select id="imp_checkHawb_damage"  parameterClass="map" resultClass="java.lang.Integer">	
	SELECT count(1)  FROM MAST_HAWB 
      	WHERE HAWB_NO = #houseAWBNo# AND AWB_NO = #awbNo# 
      	AND AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
</select>

<update id="updateimpcarshpmaintaindamage" parameterClass="cargo.cms.imprt.bo.CarShpBO">	
		UPDATE IMP_CAR_SHP 
		SET 
			DAM_RMK = #damRmk#,  
			DAM_PROC_USER = #userId#,  
			DAM_PROC_DATE  =  SYSDATE,
			DAM_REF_NO   = #damRefNo#,
			IMG_TRANS_ID = #transactionId#,
			DAM_DECL_PCS = NVL(#damPcsDec#, 0),
			DAM_DECL_WT = NVL(#damWtDec#,0),	
			LM_USER_ID = #userId#,
			LM_DATE = SYSDATE,
			TR_TYPE='MCDRD' 
		WHERE 	
				AWB_NO = UPPER(#awbNo#) AND
				FLT_KEY = UPPER(#fltKey#) AND
				FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
				AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')  
</update>
<update id="updateimpcarawbmaintaindamage" parameterClass="cargo.cms.imprt.bo.CarShpBO">	
		UPDATE IMP_CAR_AWb 
		SET 
			WH_RMK = #damRmk#,  
			LM_USER_ID = #userId#,
			LM_DATE = SYSDATE,
			TR_TYPE='MCDRD' 
		WHERE 	
				AWB_NO = UPPER(#awbNo#) AND
				AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')  
</update>
<delete id="deleteabwstrgdamcondmaintaindamage" parameterClass="cargo.cms.imprt.bo.MaintainDamageCondBO">
	DELETE FROM IMP_AWB_STRG_DAM_COND
	WHERE 	
			DAM_COND = #damConditionCode# AND
			AWB_NO = UPPER(#awbNo#) AND
			FLT_KEY = UPPER(#fltKey#) AND
			FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
			AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')  
</delete>	
<update id="deleteimpcarshpmaintaindamage" parameterClass="cargo.cms.imprt.bo.CarShpBO">	
		UPDATE IMP_CAR_SHP 
		SET 
			DAM_RMK = '',  
			DAM_PROC_USER = '',  
			DAM_PROC_DATE  =  '',
			DAM_REF_NO   =  '',
			DAM_DECL_PCS = '0',
			DAM_DECL_WT = '0',	
			LM_USER_ID = #userId#,
			LM_DATE = SYSDATE,
			TR_TYPE='MCDRD'
		WHERE 	
				AWB_NO = UPPER(#awbNo#) AND
				FLT_KEY = UPPER(#fltKey#) AND
				FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
				AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')  
</update>
<update id="deleteawbinvenmaintaindamage" parameterClass="cargo.cms.imprt.bo.CarShpBO">	
		UPDATE AWB_INVENTORY 
		SET 
			DAM_PCS = '0',
			DAM_WT = '0',	
			LM_USER_ID = #userId#,
			LM_DATE = SYSDATE
		WHERE 	
				AWB_NO = UPPER(#awbNo#) AND
				FLT_KEY = UPPER(#fltKey#) AND
				FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
				AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')  
</update>
<update id="updateabwstrgdamcondmaintaindamage" parameterClass="cargo.cms.imprt.bo.MaintainDamageCondBO">
	UPDATE IMP_AWB_STRG_DAM_COND
	SET 
		DAM_PCS = NVL(#damPcs#,0),
		LM_USER_ID = #userId#,
		LM_DATE = SYSDATE
	WHERE 	
			DAM_COND = #damConditionCode# AND
			AWB_NO = UPPER(#awbNo#) AND
			FLT_KEY = UPPER(#fltKey#) AND
			FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
			AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')  
</update>
<insert id="insertabwstrgdamcondmaintaindamage" parameterClass="cargo.cms.imprt.bo.MaintainDamageCondBO">
	INSERT INTO IMP_AWB_STRG_DAM_COND
		  (AWB_NO, 
		   AWB_DATE, FLT_KEY, FLT_DATE, 
		   DAM_COND, DAM_PCS, DAM_WT, 
		   CR_USER_ID, CR_DATE, LM_USER_ID, 
		   LM_DATE)
	VALUES (#awbNo#,
		   #awbDate#, #fltKey#, #fltDate#,
		   #damConditionCode#, #damPcs#, '0',
		   #userId#, SYSDATE, #userId#,
		   SYSDATE  
	)	  
</insert>	
<delete id="deleteabwstrgdamcondallmaintaindamage" parameterClass="cargo.cms.imprt.bo.CarShpBO">
	DELETE FROM IMP_AWB_STRG_DAM_COND
	WHERE 	
			AWB_NO = UPPER(#awbNo#) AND
			FLT_KEY = UPPER(#fltKey#) AND
			FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
			AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')  
</delete>	
<select id="getDamLspList" parameterClass="cargo.cms.imprt.bo.CarShpBO" resultClass="cargo.cms.imprt.bo.CarShpBO">
select LSP_NO lspNo from AWB_INVENTORY 
	WHERE 	
			AWB_NO = UPPER(#awbNo#) AND
			FLT_KEY = UPPER(#fltKey#) AND
			FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
			AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')  
			and (NVL(DAM_IND,'N')='Y' OR NVL(WH_DAM_IND,'N') = 'Y')
</select>

<select id="getDamLocList" parameterClass="java.util.HashMap" resultClass="cargo.cms.imprt.bo.CarShpBO">
	select awb.FLT_KEY as fltkey,
	awb.FLT_KEY as fltNo,
 	TO_CHAR(awb.FLT_DATE,'DDMONYY') as fltDate,
 	awb.LOC_CODE as locCode,
 	decode(awb.LSP_NO,null, awb.ULD_KEY, awb.LSP_NO) lspNo,
 	awb.LOCN_PCS as damLocPc,
 	awb.LOCN_WT as damLocWt,
 	awb.DAM_PCS as damPcs,
 	awb.DAM_WT as damWt
    FROM
    AWB_INVENTORY awb  
    where awb.AWB_NO= #AWB# AND awb.AWB_DATE= #AWBDATE# and (awb.DAM_IND = 'Y' OR NVL(awb.WH_DAM_IND,'N') = 'Y')
</select>

<select id="getHsePcWt" parameterClass="java.util.HashMap" resultClass="java.lang.String">
	SELECT HAWB_PCS||'/'||HAWB_WT from 
	MAST_HAWB 
	where 
	AWB_NO = #AWB# AND
	to_char(AWB_DATE,'DDMONYY') = #DATE# AND
	HAWB_NO = #HAWB# 
</select>

<select id="validatehawbexistsmaintaindamage" 
	parameterClass="cargo.cms.imprt.bo.HAWBStorDtlBO" resultClass="java.lang.String">
	
	SELECT count(1) as rowCount
			FROM IMP_HAWB_STRG_DTL 
	WHERE 	
			HAWB_NO = #hseAwbNo# AND
			AWB_NO = UPPER(#awbNo#) AND
			FLT_KEY = UPPER(#fltKey#) AND
			FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
			AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')  
</select>	

<select id="gethwab_pcs_wt" parameterClass="cargo.cms.imprt.bo.HAWBStorDtlBO" resultClass="cargo.cms.imprt.bo.HAWBStorDtlBO">
		select HAWB_PCS hseAwbPcs, HAWB_WT hseAwbWt from  MAST_HAWB 
		where AWB_NO = #awbNo# and  AWB_DATE = to_date(#awbDate#, 'DDMONYY') 
		and HAWB_NO = #hseAwbNo#
</select>
<insert id="inserthwabstrgdtlmaintaindamage" parameterClass="cargo.cms.imprt.bo.HAWBStorDtlBO">
INSERT INTO IMP_HAWB_STRG_DTL  
  (FLT_DATE, CARR_CODE, AWB_PFX,
  FLT_KEY, AWB_NO, AWB_DATE,
  HAWB_NO, HAWB_PCS, HAWB_WT, 
  DAM_PCS, DAM_WT, DAM_RMK,FLT_TYPE, 
  DAM_USER, DAM_DATE, TR_TYPE, TR_STATUS,
	CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE
	)
VALUES (to_date(#fltDate#,'DDMONYY'), #carrCode#, #awbPrefix#,
	 #fltKey#, #awbNo#, to_date(#awbDate#, 'DDMONYY'),
	 #hseAwbNo#, NVL(#hseAwbPcs#,0), NVL(#hseAwbWt#,0),
	 NVL(#damPcs#,0), NVL(#damWt#,0), #damRmk#,'I',
	 #userId#, SYSDATE, 'HA', 'A',    
	#userId#, SYSDATE, #userId#, SYSDATE
)  
</insert>	
<update id="updatehwabstrgdtlmaintaindamage" parameterClass="cargo.cms.imprt.bo.HAWBStorDtlBO">	
	UPDATE IMP_HAWB_STRG_DTL 
		SET 
			HAWB_PCS = NVL(#hseAwbPcs#,0), 
			HAWB_WT = NVL(#hseAwbWt#,0), 
			DAM_PCS = NVL(#damPcs#,0),
			DAM_WT = NVL(#damWt#,0),
			DAM_RMK = #damRmk#,
			DAM_USER = #userId#,
			DAM_DATE = SYSDATE,
			LM_USER_ID = #userId#,
			LM_DATE = SYSDATE
		WHERE 	
			HAWB_NO = #hseAwbNo# AND
			AWB_NO = UPPER(#awbNo#) AND
			FLT_KEY = UPPER(#fltKey#) AND
			FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
			AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
</update>	
<update id="deletehwabstrgdtlmaintaindamage" parameterClass="cargo.cms.imprt.bo.HAWBStorDtlBO">
UPDATE IMP_HAWB_STRG_DTL 
		SET 
			DAM_PCS = 0,
			DAM_WT = 0,
			DAM_RMK = '',
			DAM_USER = '',
			DAM_DATE = '',
			LM_USER_ID = #userId#,
			LM_DATE = SYSDATE
		WHERE 	
			HAWB_NO = #hseAwbNo# AND
			AWB_NO = UPPER(#awbNo#) AND
			FLT_KEY = UPPER(#fltKey#) AND
			FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
			AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')	
</update>

<select id="sqlgetbrkdwnCount" parameterClass="cargo.cms.imprt.bo.CarShpBO" resultClass="java.lang.Integer">
 select COUNT(1) from hawb_inventory where seq_no in 
 (select seq_no from awb_inventory ai where ai.awb_no=#awbNo# and to_char(ai.awb_date,'DDMONYY')=#awbDate# and ai.flt_key=#fltKey# and to_char(ai.flt_date,'DDMONYY') = #fltDate#)
 <isNotEmpty property="hseAwbNo">
 and hawb_no=#hseAwbNo#
 </isNotEmpty>
 </select>
 
 <select id="sqlgethousepcwt" parameterClass="cargo.cms.imprt.bo.CarShpBO" resultClass="java.lang.String">
	SELECT HAWB_PCS||'/'||HAWB_WT from 
	MAST_HAWB 
	where 
	AWB_NO = #awbNo# AND
	to_char(AWB_DATE,'DDMONYY') = #awbDate# AND
	HAWB_NO = #hseAwbNo# 
</select>

<select id="sqlbrkdwnComplStatus" parameterClass="cargo.cms.imprt.bo.CarShpBO" resultClass="java.lang.Integer">
      select count(1) from flt_opr_events where flt_key=#fltKey# and to_char(sch_date,'DDMONYY')=#fltDate# and flt_type='A' and (WHSE_COMPL_DATE is not null or WHSE_COMPL_TIME is not null)
</select>

<select id="sqlbrkdwnDescComplStatus" parameterClass="cargo.cms.imprt.bo.CarShpBO" resultClass="java.lang.Integer">
 select count(1) from cst_subm where bd_complete='Y' and rec_type='BDS' and  flt_key=#fltKey# and to_char(flt_date,'DDMONYY')=#fltDate# and flt_type='A'
</select>

<update id="hht_updateAwbStrgDtlDesktop" parameterClass="cargo.cms.imprt.bo.CarShpBO">	
		UPDATE AWB_INVENTORY 
		SET 
			DAM_PCS = NVL(#damPcsDec#, 0),
			DAM_WT =  NVL(#damWtDec#,0),	
			LM_USER_ID = #userID#,
			LM_DATE = SYSDATE
		WHERE 
		<isEmpty property="seqNo">
				AWB_NO = UPPER(#awbNo#) AND
				FLT_KEY = UPPER(#fltKey#) AND
				FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
				AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') 
				<isNotEmpty property="locCode">
				AND LOC_CODE = #locCode# 
				</isNotEmpty>
				<isNotEmpty property="uldKey">
				AND ULD_KEY = #uldKey# 
				</isNotEmpty>
				<isNotEmpty property="lspNo">
				AND LSP_NO = #lspNo# 
				</isNotEmpty> 
		</isEmpty>
		<isNotEmpty property="seqNo">
		seq_no = #seqNo#
		</isNotEmpty>
		
		
				
</update>

<update id="updateAwbInvFrmCreateAWBStrgDesktop" parameterClass="cargo.cms.imprt.bo.CarShpBO">	
		UPDATE AWB_INVENTORY 
		SET 			
			LOCN_WT = '0',	
			LM_USER_ID = #userID#,
			LM_DATE = SYSDATE
		WHERE 	
		<isEmpty property="seqNo">
				AWB_NO = UPPER(#awbNo#) AND
				FLT_KEY = UPPER(#fltKey#) AND
				FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
				AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') 
				<isNotEmpty property="locCode">
				AND LOC_CODE = #locCode# 
				</isNotEmpty>
				<isNotEmpty property="uldKey">
				AND ULD_KEY = #uldKey# 
				</isNotEmpty>
				<isNotEmpty property="lspNo">
				AND LSP_NO = #lspNo# 
				</isNotEmpty>
		</isEmpty>
		<isNotEmpty property="seqNo">
		SEQ_NO = #seqNo#
		</isNotEmpty>
		
				
				
				
</update>

<select id="sqlcheckHawb" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
	SELECT count(1) FROM  
	HAWB_INVENTORY WHERE 
	SEQ_NO in (SELECT SEQ_NO FROM AWB_INVENTORY 
	WHERE AWB_NO = #awbNo# AND AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') 
	<!-- AND AWB_TYPE = #awbType# --> 
	AND FLT_KEY = #fltKey# AND FLT_DATE = TO_DATE(#fltDate#,'DDMONYY')) 
	<isNotEmpty property="hawbNo">
	AND HAWB_NO = #hawbNo#
	</isNotEmpty>
</select>
<!-- Update Damage Cargo Record [Desktop]::Ranjith -->
<!-- Update Damage Cargo Record [HHT]::Ranjith -->
<select id="hhtGetFltPcWtDtl" 
	parameterClass="cargo.cms.imprt.bo.MaintainDamageCondBO" resultClass="cargo.cms.imprt.bo.MaintainDamageCondBO">
		SELECT 
		   carawb.AWB_NO as awbNo,
		   to_char(carawb.AWB_Date,'DDMONYY') as awbDate,
		   carawb.AWB_PCS as awbPcs,
		   carawb.AWB_WT as awbWt,
		   carawb.AWB_PRFX as awbPrefix,
		   carshp.CARR_CODE as carrCode,
		   NVL(I.LOCN_PCS, 0) as damPcs, 
		   NVL(I.LOCN_WT, 0) as damWt, 
       	   i.lsp_no lspNo,
       	   i.uld_key uldKey,
       	   i.seq_no seqNo,
		   TO_CHAR(carawb.AWB_DATE,'DDMONYY') as awbDate,
		   NVL(i.dam_pcs, 0) as damPcsDec, 
		   NVL(i.dam_wt, 0) as damWtDec,
		   carshp.FLT_KEY as fltKey,
		   carshp.IMG_TRANS_ID as transactionId,
		   to_char(carshp.FLT_DATE,'DDMONYY') as fltDate,
		   carshp.DAM_RMK as remark,
		   carshp.IMG_TRANS_ID as transactionId,
		   (select TARE_WT from MAST_CSD where CODE = #lspNo#) tareWt
	FROM IMP_CAR_AWB carawb, IMP_CAR_SHP carshp
	JOIN  AWB_INVENTORY I
		   ON carshp.AWB_NO = I.AWB_NO AND
			carshp.AWB_DATE = I.AWB_DATE AND
			carshp.FLT_KEY = I.FLT_KEY AND			carshp.FLT_DATE = I.FLT_DATE
	WHERE 
		  carshp.AWB_NO = carawb.AWB_NO AND 
	      carshp.AWB_DATE = carawb.AWB_DATE AND
		    (NVL(I.DAM_IND,'N') = 'Y' or NVL(I.WH_DAM_IND,'N') = 'Y'  or carshp.DAM_PROC_USER is not null) and
        i.awb_no=#awbNo# and  ((i.lsp_no=#lspNo# and i.uld_key is null) or (i.lsp_no is null and i.uld_key=#uldKey#))
</select>
<select id="mobileGetFltPcWtDtl" 
	parameterClass="cargo.cms.imprt.bo.MaintainDamageCondBO" resultClass="cargo.cms.imprt.bo.MaintainDamageCondBO">
		SELECT 
		   carawb.AWB_NO as awbNo,
		   to_char(carawb.AWB_Date,'DDMONYY') as awbDate,
		   carawb.AWB_PCS as awbPcs,
		   carawb.AWB_WT as awbWt,
		   carawb.AWB_PRFX as awbPrefix,
		   carshp.CARR_CODE as carrCode,
		   NVL(I.LOCN_PCS, 0) as damPcs, 
		   NVL(I.LOCN_WT, 0) as damWt, 
       	   i.lsp_no lspNo,
       	   i.uld_key uldKey,
       	   i.seq_no seqNo,
		   TO_CHAR(carawb.AWB_DATE,'DDMONYY') as awbDate,
		   NVL(i.dam_pcs, 0) as damPcsDec, 
		   NVL(i.dam_wt, 0) as damWtDec,
		   carshp.FLT_KEY as fltKey,
		   carshp.IMG_TRANS_ID as transactionId,
		   to_char(carshp.FLT_DATE,'DDMONYY') as fltDate,
		   carshp.DAM_RMK as remark,
		   carshp.IMG_TRANS_ID as transactionId,
		   (select TARE_WT from MAST_CSD where CODE = #lspNo#) tareWt
	FROM IMP_CAR_AWB carawb, IMP_CAR_SHP carshp
	JOIN  AWB_INVENTORY I
		   ON carshp.AWB_NO = I.AWB_NO AND
			carshp.AWB_DATE = I.AWB_DATE AND
			carshp.FLT_KEY = I.FLT_KEY AND			carshp.FLT_DATE = I.FLT_DATE
	WHERE 
		  carshp.AWB_NO = carawb.AWB_NO AND 
	      carshp.AWB_DATE = carawb.AWB_DATE AND
		    (NVL(I.DAM_IND,'N') = 'Y' or NVL(I.WH_DAM_IND,'N') = 'Y'  or carshp.DAM_PROC_USER is not null) and
        i.awb_no=#awbNo# and  ((i.lsp_no=#lspNo# and i.uld_key is null) or (i.lsp_no is null and i.uld_key=#uldKey#))
UNION
SELECT 
		   carawb.AWB_NO as awbNo,
		   to_char(carawb.AWB_Date,'DDMONYY') as awbDate,
		   carawb.AWB_PCS as awbPcs,
		   carawb.AWB_WT as awbWt,
		   carawb.AWB_PRFX as awbPrefix,
		   carshp.CARR_CODE as carrCode,
		   NVL(I.LOCN_PCS, 0) as damPcs, 
		   NVL(I.LOCN_WT, 0) as damWt, 
       	   i.lsp_no lspNo,
       	   i.uld_key uldKey,
       	   i.seq_no seqNo,
		   TO_CHAR(carawb.AWB_DATE,'DDMONYY') as awbDate,
		   NVL(i.dam_pcs, 0) as damPcsDec, 
		   NVL(i.dam_wt, 0) as damWtDec,
		   carshp.FLT_KEY as fltKey,
		   carshp.IMG_TRANS_ID as transactionId,
		   to_char(carshp.FLT_DATE,'DDMONYY') as fltDate,
		   carshp.DAM_RMK as remark,
		   carshp.IMG_TRANS_ID as transactionId,
		   (select TARE_WT from MAST_CSD where CODE = #lspNo#) tareWt
	FROM IMP_CAR_AWB carawb, IMP_CAR_SHP carshp
	JOIN  AWB_INVENTORY I
		   ON carshp.AWB_NO = I.AWB_NO AND
			carshp.AWB_DATE = I.AWB_DATE AND
			carshp.FLT_KEY = I.FLT_KEY AND			carshp.FLT_DATE = I.FLT_DATE
	WHERE 
		  carshp.AWB_NO = carawb.AWB_NO AND 
	      carshp.AWB_DATE = carawb.AWB_DATE AND
		    (NVL(I.DAM_IND,'N') = 'N' AND NVL(I.WH_DAM_IND,'N') = 'N'  AND carshp.DAM_PROC_USER is null) and
        i.awb_no=#awbNo# and  ((i.lsp_no=#lspNo# and i.uld_key is null) or (i.lsp_no is null and i.uld_key=#uldKey#))
</select>

<select id="hhtGetDamageULDDtl" parameterClass="cargo.cms.imprt.bo.MaintainDamageCondBO" resultClass="cargo.cms.imprt.bo.MaintainDamageCondBO">
 SELECT 
	 I.ULD_KEY AS uldKey
 FROM IMP_CAR_AWB carawb, IMP_CAR_SHP carshp
	 JOIN  AWB_INVENTORY I
		   ON carshp.AWB_NO = I.AWB_NO AND
			carshp.AWB_DATE = I.AWB_DATE AND
			carshp.FLT_KEY = I.FLT_KEY AND			carshp.FLT_DATE = I.FLT_DATE
 WHERE 
		  carshp.AWB_NO = carawb.AWB_NO AND 
	      carshp.AWB_DATE = carawb.AWB_DATE AND
          (NVL(I.DAM_IND,'N') = 'Y' or NVL(I.WH_DAM_IND,'N') = 'Y'  or carshp.DAM_PROC_USER is not null) and
          i.awb_no=#awbNo# and i.ULD_KEY LIKE ('%'|| #uldNo# || '%')
          and (i.dam_pcs is null or i.dam_pcs=0) and (i.dam_wt is null or i.dam_wt =0)
</select>
<select id="hhtGetCondList"  parameterClass="cargo.cms.imprt.bo.MaintainDamageCondBO" 
	 resultClass="cargo.cms.imprt.bo.MaintainDamageCondBO">
	SELECT  mastCodeDtl.code as damConditionCode, 
			mastCodeDtl.code_desc as damConditionDesc, 
			damCond.DAM_PCS as oldDamPcs, 
			damCond.LM_USER_ID as lmUserId,    
			TO_CHAR(damCond.LM_DATE, 'DDMONYY HH24:MI') as lmDate
	
	FROM MAST_CODE_DTL mastCodeDtl LEFT JOIN IMP_AWB_STRG_DAM_COND damCond 
		 ON 
			 mastCodeDtl.CODE = damCond.DAM_COND AND
			damCond.AWB_NO = UPPER(#awbNo#) AND
			damCond.FLT_KEY = UPPER(#fltKey#) AND
			damCond.FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
			damCond.AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')  
	WHERE   
		   mastCodeDtl.CODE_TYPE = 'DAMAGE_CONDN' 
	ORDER BY mastCodeDtl.code_desc
</select>

<update id="HHTupdatehwabstrgdtlmaintaindamage" parameterClass="cargo.cms.imprt.bo.MaintainDamageCondBO">	
	UPDATE IMP_HAWB_STRG_DTL 
		SET 
			HAWB_PCS = NVL(#hseAwbPcs#,0), 
			HAWB_WT = NVL(#hseAwbWt#,0), 
			DAM_PCS = NVL(#hawbPc#,0),
			DAM_WT = NVL(#hawbWt#,0),
			DAM_RMK = #remark#,
			DAM_USER = #userId#,
			DAM_DATE = SYSDATE,
			LM_USER_ID = #userId#,
			LM_DATE = SYSDATE
		WHERE 	
			HAWB_NO = #hawbNo# AND
			AWB_NO = UPPER(#awbNo#) AND
			FLT_KEY = UPPER(#fltKey#) AND
			FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
			AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
</update>

<!--  Changed for QR
<select id="gethwab_pcs_wt_hht" parameterClass="cargo.cms.imprt.bo.MaintainDamageCondBO" resultClass="cargo.cms.imprt.bo.MaintainDamageCondBO">
		select STRG_PCS hseAwbPcs, STRG_WT hseAwbWt from  HAWB_INVENTORY 
		where AWB_NO = #awbNo# and  AWB_DATE = to_date(#awbDate#, 'DDMONYY') 
		and HAWB_NO = #hawbNo#
</select> -->

<!--  Changed for QR -->
<insert id="HHTinserthwabstrgdtlmaintaindamage" parameterClass="cargo.cms.imprt.bo.MaintainDamageCondBO">
INSERT INTO IMP_HAWB_STRG_DTL  
  (FLT_DATE, CARR_CODE, AWB_PFX,
  FLT_KEY, AWB_NO, AWB_DATE, 
  HAWB_NO, HAWB_PCS, HAWB_WT, 
  DAM_PCS, DAM_WT, DAM_RMK,FLT_TYPE, 
  DAM_USER, DAM_DATE, TR_TYPE, TR_STATUS,
	CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE
	)
VALUES (to_date(#fltDate#,'DDMONYY'), #carrCode#, #awbPrefix#,
	 #fltKey#, #awbNo#, to_date(#awbDate#, 'DDMONYY'),
	 #hawbNo#, NVL(#hseAwbPcs#,0), NVL(#hseAwbWt#,0),
	 NVL(#hawbPc#,0), NVL(#hawbWt#,0), #remark#,'I',
	 #userId#, SYSDATE, 'HA', 'A',    
	#userId#, SYSDATE, #userId#, SYSDATE
)  
</insert>

<delete id="hht_deleteHawbStrgDtl" parameterClass="cargo.cms.imprt.bo.MaintainDamageCondBO">
delete from IMP_HAWB_STRG_DTL where FLT_KEY=#fltKey# and to_char(FLT_DATE,'DDMONYY')=#fltDate# and AWB_NO=#awbNo# and AWB_DATE=#awbDate# 
</delete>
<select id="hhtGetHouseDtl"  parameterClass="cargo.cms.imprt.bo.MaintainDamageCondBO" 
	 resultClass="cargo.cms.imprt.bo.MaintainDamageCondBO">
	SELECT 
	  TO_CHAR(FLT_DATE, 'DDMONYY') as fltDate, 
	  FLT_KEY as fltKey, S.AWB_NO as awbNo, TO_CHAR(S.AWB_DATE,'DDMONYY') as awbDate, 
	  S.HAWB_NO as hawbNo, MH.HAWb_PCS as hseAwbPcs, MH.HAWB_WT as hseAwbWt, 
	  DAM_PCS as hawbPc, DAM_WT as hawbWt, DAM_RMK as remark
	FROM IMP_HAWB_STRG_DTL S
 	join MAST_HAWB MH on S.AWB_NO = MH.AWB_NO AND S.AWB_DATE = MH.AWB_DATE AND S.HAWB_NO = MH.HAWB_NO  
	join HAWB_INVENTORY M on MH.HAWB_NO = M.HAWB_NO
WHERE 	
	S.AWB_NO = UPPER(#awbNo#) AND S.FLT_KEY = UPPER(#fltKey#) AND S.FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') 
	AND S.AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') AND M.SEQ_NO=#seqNo# AND S.DAM_USER IS NOT NULL
</select>
<select id="HHTvalidatehawbexistsmaintaindamage" 
	parameterClass="cargo.cms.imprt.bo.MaintainDamageCondBO" resultClass="java.lang.String">
	
	SELECT count(1) as rowCount
			FROM IMP_HAWB_STRG_DTL 
	WHERE 	
			HAWB_NO = #hawbNo# AND
			AWB_NO = UPPER(#awbNo#) AND
			FLT_KEY = UPPER(#fltKey#) AND
			FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
			AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')  
</select>

<update id="hht_updateimpcarshpmaintaindamage1" parameterClass="cargo.cms.imprt.bo.MaintainDamageCondBO">	
		UPDATE IMP_CAR_SHP 
		SET 
			DAM_RMK = #remark#, 
			DAM_REF_NO   = #damRefNo#,
			DAM_DECL_PCS = NVL(DAM_DECL_PCS,0) + NVL(#damPcsDec#, 0),
			DAM_DECL_WT = NVL(DAM_DECL_WT,0) + NVL(#damWtDec#,0),	
			LM_USER_ID = #userId#,
			LM_DATE = SYSDATE,
			DAM_PROC_USER = #userId#,  
			DAM_PROC_DATE  =  SYSDATE,
			TR_TYPE = 'MDMB'
		WHERE 	
			AWB_NO = UPPER(#awbNo#) AND
			FLT_KEY = UPPER(#fltKey#) AND
			FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
			AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') 			
 </update>
<update id="hht_updateimpcarawbmaintaindamage1" parameterClass="cargo.cms.imprt.bo.MaintainDamageCondBO">	
		UPDATE IMP_CAR_SHP 
		SET 
			WH_RMK = #remark#, 
			LM_USER_ID = #userId#,
			LM_DATE = SYSDATE 
		WHERE 	
			AWB_NO = UPPER(#awbNo#) AND
			AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') 			
 </update> 
<update id="hht_updateAwbStrgDtl" parameterClass="cargo.cms.imprt.bo.MaintainDamageCondBO">	
		UPDATE AWB_INVENTORY 
		SET 
			DAM_PCS = NVL(#damPcsDec#, 0),
			DAM_WT =  NVL(#damWtDec#,0),	
			LM_USER_ID = #userId#,
			LM_DATE = SYSDATE			
		WHERE 	
				AWB_NO = UPPER(#awbNo#) AND
				FLT_KEY = UPPER(#fltKey#) AND
				FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
				AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')  AND	
			    <!-- UPPER(AWB_TYPE) = UPPER(#awbType#) AND-->
			    <isNotEmpty property="lspNo">
				LSP_NO	= UPPER(#lspNo#)
				</isNotEmpty>
				<isNotEmpty property="uldKey">
				uld_key	= UPPER(#uldKey#)
				</isNotEmpty>
				
				
</update>
<update id="hht_updateAwbStrgDtlRmk1" parameterClass="cargo.cms.imprt.bo.MaintainDamageCondBO">
		UPDATE IMP_AWB_STRG_DTL set RMK = #awbStrgDtlRmk# Where TR_NO = #awbStrgDtlTrNo#
</update>

<select id="sqlspHaveDmgShpmnt" parameterClass="java.lang.String" resultClass="java.lang.Integer">
	select count(1) from awb_inventory where lsp_no=#lspNo# and (NVL(DAM_IND,'N')='Y' OR NVL(WH_DAM_IND,'N') = 'Y') 
</select>
<select id="sqluldHaveDmgShpmnt" parameterClass="java.lang.String" resultClass="java.lang.Integer">
	select count(1) from awb_inventory where uld_key=#uldKey# and (NVL(DAM_IND,'N')='Y' OR NVL(WH_DAM_IND,'N') = 'Y') 
</select>

<select id="sqlawbLoadedOnULD" parameterClass="cargo.cms.imprt.bo.MaintainDamageCondBO" resultClass="java.lang.Integer">
	select count(1) from awb_inventory where uld_key=#uldKey# and awb_no=#awbNo#
</select>
<select id="sqlawbLoadedOnLsp" parameterClass="cargo.cms.imprt.bo.MaintainDamageCondBO" resultClass="java.lang.Integer">
	select count(1) from awb_inventory where lsp_no=#lspNo# and awb_no=#awbNo#
</select>

<!--  Changed for QR -->
<select id="sqlfhlExist" parameterClass="map" resultClass="java.lang.Integer">
	select count(1) 
          from edi_fhl hd
          join edi_fhl_hawb hse on hd.tr_no = hse.tr_no
          where hawb_no=#hawbNo# and awb_no = #awbNo#
</select>

<select id="sqlvalidHawb" parameterClass="cargo.cms.imprt.bo.MaintainDamageCondBO" resultClass="java.lang.Integer">
	select count(1) from hawb_inventory where seq_no = (select seq_no from awb_inventory where awb_no=#awbNo# 
	and awb_date=#awbDate# and ((lsp_no=#lspNo# AND ULD_KEY IS NULL) OR (ULD_KEY=#uldKey# AND LSP_NO IS NULL)))
	<isNotEmpty property="hawbNo">
	AND HAWB_NO = #hawbNo#
	</isNotEmpty>
</select>

			
<select id="sqlLocCodeInMHS" parameterClass="java.lang.String" resultClass="java.lang.Integer">
select count(1) from MAST_WH_LOC t1, mast_wh_group t2
	where t1.wh_group = t2.WH_GROUP 
    and t2.wh_type = 'MHS'
    and t1.code=#locCode#
</select>


<insert id="sqlcreateJobOrMovOrder" parameterClass="java.util.HashMap">
Insert into RTRV_MOVE_ORDER 
(FUNC,REF_NO,AWB_NO,CURR_LOCN,
LSP,ULD,PC,WT,TARGET,STATUS,
CR_USER_ID,CR_DATE,LM_USER_ID,
LM_DATE,TYPE,PRIORITY,ACTIVITY,
INV_TYPE,AWB_DATE) 
values (#FUNC#,#REF_NO#,#AWB_NO#,#CURR_LOCN#,
#LSP#,#ULD#,#PC#,#WT#,#TARGET#,#STATUS#,
#CR_USER_ID#,SYSDATE,#LM_USER_ID#,
SYSDATE,#TYPE#,#PRIORITY#,#ACTIVITY#,
#INV_TYPE#,#AWB_DATE#)
</insert>

<update id="sqlupdateJobOrMovOrder" parameterClass="java.util.HashMap">
	<![CDATA[
		UPDATE rtrv_move_order
		SET status='COMPLETED',
		LM_USER_ID=#LM_USER_ID#,
		LM_DATE=sysdate
		where (ULD = UPPER(#ULD#) or LSP = UPPER(#LSP#))
		AND (status IS NULL OR(status <> 'E' AND status <>'CANCELLED'))
	]]>
</update>

<update id="updateXTShipmentwithTargetDtls" parameterClass="java.util.HashMap">
	UPDATE xt_imp_car_shp_dtl set TARGET = #target# , TARGET_ID = #messageNo# , lm_user_id = #userId#, lm_date = SYSDATE
	WHERE imp_flt_key = #impFltKey# and imp_flt_date = TO_DATE(#impFltDate#, 'DDMONYY') and awb_no = #awbNumber#  and awb_date = TO_DATE(#awbDate#, 'DDMONYY') 
	<isNotEmpty property="checkInULD">
		AND ULD_KEY = #checkInULD#
	</isNotEmpty> 
	<isEmpty property="checkInULD">
		AND ULD_KEY = 'BULK'
	</isEmpty> 
</update>

<update id="updateXTAWBStorageDtls" parameterClass="java.util.HashMap">
	UPDATE imp_awb_strg_dtl set TARGET_ID = #messageNo# , lm_user_id = #userId#, lm_date = SYSDATE
	WHERE flt_key = #impFltKey# and flt_date = TO_DATE(#impFltDate#, 'DDMONYY') and awb_no = #awbNumber#  and awb_date = TO_DATE(#awbDate#, 'DDMONYY')  AND loc_code = #currLocn#
	<isNotEmpty property="checkInULD">
		AND chkin_uld_key = #checkInULD#
	</isNotEmpty> 
	<isEmpty property="checkInULD">
		AND chkin_uld_key IS NULL
	</isEmpty> 
	<isNotEmpty property="uldLsp">
		AND (ULD_KEY = #uldLsp# OR lsp_no = #uldLsp#)
	</isNotEmpty>
</update>

<select id="sqlCheckAgentInvUld" parameterClass="java.lang.String" resultClass="java.lang.Integer">
select count(1) from ASV_INVENTORY where ULD_KEY = #uldKey# or LSP_NO = #uldKey#
</select>

<select id="sqlCheckPPKuld" parameterClass="java.lang.String" resultClass="java.lang.Integer">
select count(1) from ULD_INVENTORY where ULD_KEY = #uldKey# and HANDLING_MODE is not null and HANDLING_MODE='PPK'
</select>

<select id="sqlCheckTransituld" parameterClass="java.lang.String" resultClass="java.lang.Integer">
select count(1) from ULD_INVENTORY where ULD_KEY = #uldKey# and TRANSIT_FLG is not null and TRANSIT_FLG='Y' and HANDLING_MODE is not null and (HANDLING_MODE='PPK' or HANDLING_MODE='NBK')
</select>
<select id="getULDisImportEIC" parameterClass="java.lang.String" resultClass="java.lang.Integer">
select count(1) from ULD_INVENTORY where ULD_KEY = #uldKey# and eic_type='EIC' and eic_flg='Y' and flt_type='I'
</select>
<!--  Changed for QR
<select id="sqlCheckbuildUpComplete" parameterClass="java.lang.String" resultClass="java.lang.Integer">
select count(1) from ULD_INVENTORY where ULD_KEY = #uldKey# and ULD_FLOW is not null and ULD_FLOW='E'
</select> -->


<select id="sqlCheckBUJobOrderCreated" parameterClass="java.util.HashMap" resultClass="cargo.cms.imprt.bo.AWBStorDtlBO">
		SELECT dtl.JO_NO joNo
		FROM EXP_BU_JO_DTL dtl
		join EXP_BU_JO_LOCN locn on dtl.AWB_NO = locn.AWB_NO and dtl.AWB_DATE = locn.AWB_DATE and dtl.JO_NO = locn.JO_NO
		WHERE dtl.AWB_NO = #awbNo# AND dtl.AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') 
		<isNotEmpty property="lspNo">
	    	AND locn.LSP = #lspNo#
	    </isNotEmpty>			
		<isNotEmpty property="uldKey">
	    	AND locn.ULD_KEY = #uldKey#
	    </isNotEmpty>			
</select>

		
<delete id="sqlBUJobOrderLocDelete" parameterClass="java.util.HashMap">
		DELETE FROM EXP_BU_JO_LOCN
		WHERE JO_NO = #joNo#
		AND AWB_NO = #awbNo#
		AND AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') 
		<isNotEmpty property="lspNo">
	    	AND LSP = #lspNo#
	    </isNotEmpty>			
		<isNotEmpty property="uldKey">
	    	AND ULD_KEY = #uldKey#
	    </isNotEmpty>		
</delete>

<update id="sqlBUJobOrderUpdate" parameterClass="java.util.HashMap">
		UPDATE EXP_BU_JO
		SET STATUS = 'Pending',
		RMK = #remark#,
		LM_USER_ID = #lmUserId#,
		LM_DATE = SYSDATE		
		WHERE JO_NO = #joNo#
		AND STATUS = 'Confirmed'		
</update>

<!-- Update Damage Cargo Record [HHT]::Ranjith -->

<!-- added by srinath for Update Constarint HAWB For SRF start 17dec10-->
	<!--  Changed for QR -->
	<select id="getairwaybillinfolist"  parameterClass="cargo.cms.imprt.bo.HABQueryBO" resultClass="cargo.cms.imprt.bo.HABInfoBO">
	<![CDATA[
     
      SELECT 
            B.AWB_NO AS AWBNO,
            SUBSTR(A.AWB_NO,1,3)  awbNoPrefix ,
            SUBSTR(A.AWB_NO,4)  awbNoSuffix ,
            SUBSTR(A.AWB_NO,1,3)||'-'||SUBSTR(A.AWB_NO,4) as awbNoDisp ,
            TO_CHAR (B.AWB_DATE, 'DDMONYY HH24:MI') AS AWBDATE,
            B.FLT_KEY AS FLTKEY, TO_CHAR (B.FLT_DATE, 'DDMONYY') AS FLTDATE,
            C.HAWB_NO AS HAWBNO, 
            C.VER_NO AS VER, 
            E.CDIF_UTL_PCS AS UTL, 
            E.CDIF_PS_PCS AS PS,
            E.CDIF_DT_PCS AS DETN,
            E.CDIF_FOLLOW_ON_PCS AS followOnTruckPcs,
            '0' AS TOTALPCS, 
            '0' AS TOTALWT,
            H.HAWB_PCS AS HAWBPC,
            trim(TO_CHAR(H.HAWB_WT, '9999990D9')) AS HAWBWT, 
            B.CC_CODE AS code,
            DECODE(SH.SRF_NO, NULL, 'N', 'Y') AS disableFlag,
            A.CARR_CODE carrCode,
            C.EXAM_CODE AS examCode,
            C.EXAM_DET_PCS AS hawbDetnPc,
            C.EXAM_REP_PCS AS hawbRelPc,
            '' AS slPc,
            '' as slWt,
            '' delPcs,
            '' delwT
            FROM
            IMP_SRF A
            JOIN IMP_SRF_FLT B ON A.SRF_NO = B.SRF_NO		
            JOIN V_CST_IMP_CC_CODE C ON B.AWB_NO = C.AWB_NO AND B.FLT_KEY = C.FLT_KEY AND B.FLT_DATE = C.FLT_DATE		
           LEFT JOIN ( SELECT AWB_NO,
                              AWB_DATE,
                              HAWB_NO,
                              FLT_KEY, 
                              FLT_DATE,
                              DECODE(HS.HCIR_PCS_TYPE, 'SL', HS.HCIR_PCS, 0) AS SL_PCS,
                              DECODE(HS.HCIR_WT_TYPE, 'SL', HS.HCIR_WT, 0) as SL_WT
                              FROM
                              IMP_HAWB_STRG_DTL HS	
                              WHERE
                              HS.HCIR_PCS_TYPE = 'SL' OR HS.HCIR_WT_TYPE = 'SL') HS ON B.AWB_NO = HS.AWB_NO AND C.HAWB_NO = HS.HAWB_NO AND B.FLT_KEY = HS.FLT_KEY AND B.FLT_DATE = HS.FLT_DATE
           LEFT JOIN IMP_CDIF D ON A.SRF_NO = D.SRF_NO AND D.VOID_USER IS NULL	
           LEFT JOIN IMP_CDIF_HAWB E ON D.CDIF_NO = E.CDIF_NO AND E.HAWB_NO = C.HAWB_NO AND E.AWB_NO = A.AWB_NO
           LEFT JOIN MAST_HAWB H ON H.HAWB_NO = C.HAWB_NO AND H.AWB_NO = A.AWB_NO          
           LEFT JOIN (SELECT SRF_NO, AWB_NO, HAWB_NO, FLT_KEY, FLT_DATE	FROM IMP_SRF_CC_HAWB	
           GROUP BY SRF_NO, AWB_NO, HAWB_NO, FLT_KEY, FLT_DATE) SH ON SH.SRF_NO = A.SRF_NO AND SH.FLT_KEY = B.FLT_KEY AND SH.FLT_DATE = B.FLT_DATE AND SH.HAWB_NO = C.HAWB_NO
           WHERE A.SRF_NO =  #srfActual#
		   AND C.HAWB_NO NOT LIKE '000000000000000000'
		   AND C.CC_CODE NOT IN ('NC')
		   AND HS.AWB_NO IS NULL
	]]>
	</select>
	
	<insert id="saveairwaybillinfo" parameterClass="cargo.cms.imprt.bo.HABInfoBO" >
	INSERT INTO IMP_SRF_CC_HAWB (
	SRF_NO, AWB_NO, AWB_DATE, 
	HAWB_NO, FLT_KEY, 
	FLT_DATE, DELV_PCS, 
	DELV_WT, SL_PCS, SL_WT, 
	VERSION,HAWBTYPE,CR_USER_ID, CR_DATE, LM_USER_ID, 
	LM_DATE , tr_no , doc_Line_no ,CARR_CODE 
	) 
	VALUES ( #srfNo#, #awbNo#, TO_DATE(#awbDate#,'DDMONYY HH24:MI'),#hawbNo#,#fltKey#,TO_DATE(#fltDate#,'DDMONYY HH24:MI'),
		 #hawbDelvPc#, #hawbDelvWt#, #hawbSlPc#, #hawbSlWt#, #ver#,#hawbSlType#, #createdUserId#,
		 SYSDATE, #createdUserId#, SYSDATE,#trNo# , #docLineNo#, #carrCode#)
</insert>
<parameterMap id="hmap" class="map" >
	<parameter property="TRNO" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
</parameterMap>
<procedure id="proc_imp_dec_const_shp_seq" parameterMap="hmap">
	{ call pkg_sub_bd_disc.sub_const_part_shp(?) }
</procedure>	
<!-- added by srinath for Update Constarint HAWB For SRF end-->
 <!-- Exit Check Post:: Starts -->
 <!--  Changed for QR -->
 <select id="get_truck_details" parameterClass="cargo.cms.imprt.bo.ExitCheckPostBO"
		resultClass="cargo.cms.imprt.bo.ExitCheckPostBO">
		select a.awb_no as awbNo, a.dlv_pcs as dlvPcs, a.dlv_wt as dlvWt, b.srf_no as srfNo
		from imp_truck_srf b
		join imp_srf_flt a ON B.SRF_NO = A.SRF_NO
    	JOIN IMP_SRF S ON B.SRF_NO = S.SRF_NO
		WHERE  B.TRIP_ID = (SELECT TRIP_ID FROM TRUCK_TRIP  WHERE TRUCK_NO=#truckNo# AND CLOSED = 'N') and S.VOID_DATE IS NULL 
	</select>
	<select id="getsealnosbytruckno"
		parameterClass="cargo.cms.imprt.bo.ExitCheckPostBO"
		resultClass="cargo.cms.imprt.bo.ExitCheckPostBO">

		select seal_no as sealNo from truck_seal where truck_no = #truckNo#
		
	</select>
	<select id="getsrfpostedStatus"  parameterClass="map"  resultClass="java.lang.String">
		select decode((select count(1) from imp_srf where srf_no=#srfNo# and POST_DATE is not null 
		and post_user is not null and post_time is not null),'0','N', 'Y') from dual 
	</select>
	
	<!--  Changed for QR -->
	<select id="get_uld_details" parameterClass="cargo.cms.imprt.bo.ExitCheckPostBO"
		resultClass="cargo.cms.imprt.bo.ExitCheckPostBO">
		select uld_key as uldNo,
		A.eir_no as eirNo
		from uld_rel_dtl A
		join (select srf_no,eir_no from uld_iss_hd) B
		on A.eir_no = B.eir_no
		and B.srf_no in (select srf_no from imp_truck_srf where trip_id = 
		(select TRIP_ID from truck_trip  where truck_no=#truckNo# and closed = 'N'))		
	</select>
	<select id="chk_outstnd_charges_for_truck"  parameterClass="map"  resultClass="java.lang.Integer">
		select count(1) from bill_charge_dtl where status='PENDING' and truck_no =#truckNo#
	</select>
	<select id="getEIRCount"  parameterClass="map"  resultClass="java.lang.Integer">
		SELECT COUNT(EIR_NO) FROM ULD_ISS_HD WHERE SRF_NO IN (SELECT SRF_NO FROM IMP_TRUCK_SRF WHERE TRIP_ID = 
		(select TRIP_ID from truck_trip  where truck_no=#truckNo# and closed = 'N'))
	</select>
	
	<!--  Changed for QR -->
	<select id="compare_cccodes_for_srf"  parameterClass="map"  resultClass="java.lang.Integer">
		select count(1) from  v_cst_imp_cc_code_awb A
		join (select awb_no,flt_key,flt_date,srf_no,cc_code from imp_srf_flt where srf_no in 
		(select srf_no from imp_truck_srf where trip_id = 
		(select TRIP_ID from truck_trip  where truck_no=#truckNo# and closed = 'N'))) B
		on A.awb_no = B.awb_no
		and A.flt_key = B.flt_key
		and A.flt_date = B.flt_date
		and A.cc_code = B.cc_code
	</select>
		
	<!--  Changed for QR -->
	<select id="chkForCcCodeConstrained"  parameterClass="map"  resultClass="java.lang.Integer">
		SELECT count(1) FROM MAST_CONSTRAINT_CODE WHERE CONSTRAINT='Y' AND 
   		 code in (select A.cc_code from  v_cst_imp_cc_code_awb A
		join (select awb_no,flt_key,flt_date,srf_no,cc_code from imp_srf_flt where srf_no in 
		(SELECT SRF_NO FROM IMP_TRUCK_SRF WHERE TRIP_ID = 
		(select TRIP_ID from truck_trip  where truck_no=#truckNo# AND CLOSED = 'N'))) B
		on A.awb_no = B.awb_no
		AND A.FLT_KEY = B.FLT_KEY
		and A.flt_date = B.flt_date)
	</select>
	
	<!--  Changed for QR -->
	<update id="do_complete_check_post" parameterClass="map" >
		UPDATE TRUCK_TRIP 
		SET EXIT_IND = 'Y', LM_DATE = SYSDATE, LM_USER_ID = #lmUserId#, CLOSE_USER_ID = #lmUserId#, CLOSE_TIME = SYSDATE
		WHERE TRUCK_NO = #truckNo# and TRIP_ID = (select TRIP_ID from truck_trip  where truck_no=#truckNo# AND CLOSED = 'N')
	</update>
	
	<!--  Changed for QR -->
	<update id="do_reject_check_post" parameterClass="map" >
		UPDATE TRUCK_TRIP
		SET EXIT_IND = 'N', REJ_RMK = #remarks#, LM_DATE = SYSDATE, LM_USER_ID = #lmUserId#
		WHERE TRUCK_NO = #truckNo# and TRIP_ID = (select TRIP_ID from truck_trip  where truck_no=#truckNo# AND CLOSED = 'N')
	</update>
<!-- Exit Check Post:: Ends -->

<!-- ##################### Inbound ULD Breakdown start  : Santosh : Start ###############################################-->	
 
 	<select id="getULDForLocation" parameterClass="java.lang.String" resultClass="java.lang.String">
 	SELECT uld.ULD_KEY 
 			FROM ULD_INVENTORY uld
      		join IMP_RAMP_CHK_DTL impDtl on uld.flt_key = impDtl.flt_key and uld.flt_date = impDtl.flt_date and uld.uld_key = impDtl.uld_key and uld.flt_type = 'I'
	WHERE uld.LOC_CODE=#locCode# and rownum=1
 	</select> 	
 	
	<select id="getAWBFFMPcs"  parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO" resultClass="java.lang.String">
	select sum(MAN_PCS) as totalPcs
	from EDI_FFM_SHP
	where
		AWB_NO = UPPER(#awbNo#) AND
		FLT_KEY = UPPER(#flightKey#) AND
		FLT_DATE = TO_DATE(#flightDate#,'DDMONYY') AND
		AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')  
	</select>
	
	<select id="hht_get_old_pc_weight"  parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO" 
	 resultClass="cargo.cms.imprt.bo.HHTCreateAwbBO">
	  	    SELECT  shp.MANIFEST_PCS	AS pieces,
		   		   shp.MANIFEST_WT	AS weight,
		   		   shp.DAM_PCS	AS dampieces,
				   shp.DAM_WT 	AS damweight,
				   pkg_common.get_awb_splcodes(shp.AWB_NO, shp.AWB_DATE, awb.AWB_TYPE, ', ') as splCode
		   FROM IMP_CAR_SHP shp
       	   JOIN AWB awb ON awb.AWB_NO = shp.AWB_NO AND awb.awb_date = shp.awb_date
		   WHERE  shp.AWB_NO	  =   #awbNo#  AND
		   		  shp.AWB_DATE	  =	  TO_DATE(#awbDate#,'DDMONYY') AND		   		  
		   		  shp.FLT_KEY = UPPER(#flightKey#) AND
		   		  shp.FLT_DATE = TO_DATE(#flightDate#,'DDMONYY')		   		
	</select>	
 	
 	<select id="getHawbOrgPcsWt"  parameterClass="java.util.HashMap" resultClass="cargo.cms.imprt.bo.HHTCreateAwbBO">	
		SELECT STRG_PCS hseOrgAwbPcs, STRG_WT hseOrgAwbWt
		FROM HAWB_INVENTORY
		WHERE seq_no = (select seq_no from awb_inventory where awb_no=#awbNo#
		 <isNotEmpty property="uldKeyDtl">
      			and  uld_key=#uldKeyDtl#
      	 </isNotEmpty> 
      	  <isNotEmpty property="lspNo">
      			and  lsp_no=#lspNo#
      	 </isNotEmpty>) 
      	  <isNotEmpty property="houseAWBNo">
      			 AND HAWB_NO = #houseAWBNo#
      	 </isNotEmpty>    		
	</select>
	
		
		<insert id="insertLSPInventoryCreateawbhht" parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO">
	INSERT INTO 
		LSP_INVENTORY (LSP_NO,LOC_CODE,STRG_DATE,STATUS,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,REF_TR_NO,REF_TR_TYPE,
		REF_TR_EVENT,REF_TR_DATE,REF_DOC_LINE_NO,LSP_TYPE) 
	VALUES 
		(#lspNo#, #locCode#, SYSDATE, 'N', #modUser#, SYSDATE, #modUser#, 
		SYSDATE, #trNo#, #trType#, #trEvent#, SYSDATE, #docLineNo#,#lspType#)
	</insert>
	
	
	<select id="sqlvalidHawbLSP" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
      select count(1) from hawb_inventory 
      where seq_no = (
      SELECT SEQ_NO seqNo
	 FROM AWB_INVENTORY
     WHERE AWB_NO = #awbNo#
     AND AWB_DATE = #awbDate#     
     <!-- AND AWB_TYPE = #awbType#-->
     AND NVL(FLT_KEY,'*')  = NVL(#flightKey#,'*')
     AND NVL(FLT_DATE,SYSDATE) = NVL(#flightDate#,SYSDATE)
     AND NVL(LOC_CODE,'*') = NVL(#locCode#,'*')
     AND NVL(LSP_NO,0)   = NVL(#lspNo#,0)
     AND NVL(ULD_KEY,'*')  = NVL(#uldKeyDtl#,'*'))     
       <isNotEmpty property="houseAWBNo">
      			 AND HAWB_NO = #houseAWBNo#
       </isNotEmpty>      
	</select>	
	
	<select id="sqlvalidHawbULD" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
      select count(1) from hawb_inventory 
      where seq_no = (
      SELECT SEQ_NO seqNo
	 FROM AWB_INVENTORY
     WHERE AWB_NO = #awbNo#
     AND AWB_DATE = #awbDate#    
     <!-- AND AWB_TYPE = #awbType#-->
     AND NVL(FLT_KEY,'*')  = NVL(#flightKey#,'*')
     AND NVL(FLT_DATE,SYSDATE) = NVL(#flightDate#,SYSDATE)
     AND NVL(LOC_CODE,'*') = NVL(#locCode#,'*')
     AND NVL(LSP_NO,0)   = NVL(#lspNo#,0)
     AND NVL(ULD_KEY,'*')  = NVL(#uldKeyDtl#,'*'))     
       <isNotEmpty property="houseAWBNo">
      			 AND HAWB_NO = #houseAWBNo#
       </isNotEmpty>      
	</select>	
	
	 <select id="checkBDDiscCompleted"  parameterClass="cargo.cms.imprt.bo.ProcessedFFMBO" resultClass="java.lang.String">
	SELECT COUNT(1) FROM CST_SUBM  where FLT_TYPE = 'A' AND BD_COMPLETE = 'Y' AND REC_TYPE = 'BDS' AND FLT_KEY = #fltKey# AND FLT_DATE = TO_DATE(#fltDate#,'DDMONYY')						
	</select>

	
	<select id="getULDBrkFlightDetails" parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO" 
		resultClass="cargo.cms.imprt.bo.HHTCreateAwbBO">
				select	
				dtl.TR_NO                                              AS trNo        ,
			    dtl.DOC_LINE_NO                                        AS docLineNo   ,	
				dtl.CARR_CODE 										   As carrierCode,
				dtl.FLT_NO 											   AS flightNo,
			    dtl.FLT_KEY                                            AS flightKey,
			    TO_CHAR(dtl.FLT_DATE,'DDMONYY')                        AS flightDate,
			    dtl.ULD_KEY                                            AS uldKey				   	    		   
			    FROM IMP_RAMP_CHK_DTL dtl			   
			    where 	
			    <!--
				LOC_CODE = #locCode# AND ULD_KEY=#uldKey#   -->
				FLT_KEY=#flightKey# 
				AND FLT_DATE=TO_DATE(#flightDate#,'DDMONYY')				
				AND ULD_KEY=#uldKey#		   
	</select>
	
	
	<select id="getULDBrkFlightDetailsUldInv" parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO" 
		resultClass="cargo.cms.imprt.bo.HHTCreateAwbBO">
				select					
				NVL(IMP_FLT_CARR,CARR_CODE)    									As carrierCode,
			    NVL(IMP_FLT_NO,FLT_NO) 	   											AS flightNo,
			    NVL(IMP_FLT_KEY,FLT_KEY)      										AS flightKey,
			    NVL(TO_CHAR(IMP_FLT_DATE,'DDMONYY'),TO_CHAR(FLT_DATE,'DDMONYY'))    AS flightDate,
			    ULD_KEY                                            AS uldKey				   	    		   
			    FROM ULD_INVENTORY 			   
			    where LOC_CODE=#locCode# AND ULD_KEY=#uldKey#		
			<!--
				select					
				IMP_FLT_CARR    									As carrierCode,
			    IMP_FLT_NO	   											AS flightNo,
			    IMP_FLT_KEY      										AS flightKey,
			    TO_CHAR(IMP_FLT_DATE,'DDMONYY')    AS flightDate,
			    ULD_KEY                                            AS uldKey				   	    		   
			    FROM ULD_INVENTORY 			   
			    where LOC_CODE=#locCode# AND ULD_KEY=#uldKey#	-->
	</select>
	
	<select id="getULDBrkFlightDetailsUldInv_Exp" parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO" 
		resultClass="cargo.cms.imprt.bo.HHTCreateAwbBO">
				select					
				NVL(CARR_CODE,IMP_FLT_CARR)    									As carrierCode,
			    NVL(FLT_NO,IMP_FLT_NO) 	   											AS flightNo,
			    NVL(FLT_KEY,IMP_FLT_KEY)      										AS flightKey,
			    NVL(TO_CHAR(FLT_DATE,'DDMONYY'),TO_CHAR(IMP_FLT_DATE,'DDMONYY'))    AS flightDate,
			    ULD_KEY                                            AS uldKey				   	    		   
			    FROM ULD_INVENTORY 			   
			    where LOC_CODE=#locCode# AND ULD_KEY=#uldKey#	
	</select>
	
 	<!--  Changed for QR -->
 	<select id="getULDBrkDetails" parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO" 
		resultClass="cargo.cms.imprt.bo.HHTCreateAwbBO">		
		  select
          		dtl.TR_NO                                              AS trNo        ,
			    dtl.DOC_LINE_NO                                        AS docLineNo   ,
			    dtl.CARR_CODE 										   As carrierCode,
			    dtl.FLT_NO                                             AS flightNo    ,
			    dtl.FLT_KEY                                            AS flightKey   ,
			    TO_CHAR(dtl.FLT_DATE,'DDMONYY')                        AS flightDate  ,
			    dtl.ULD_KEY                                            AS uldKey      ,			   
			    uld.WH_RMK 											   AS uldInstruction,
			    (SELECT WH_RMK FROM IMP_CAR_AWB car
			    JOIN AWB awb ON awb.AWB_NO = car.AWB_NO 
				AND awb.awb_date = car.awb_date
			    WHERE car.AWB_NO=#awbNo# AND TO_CHAR(car.AWB_DATE,'DDMONYY')=#awbDate#)  AS awbInstruction,
			    uld.HANDLING_MODE									   AS dlvMode,			
			    (select TRF_TYPE from v_ddt_dtl where FLT_KEY=#flightKey# AND FLT_DATE=TO_DATE(#flightDate#,'DDMONYY')	 AND ULD_KEY=#uldKey# and rownum = 1)  AS transferType,	    
			    (select TARE_WEIGHT from ULD_TYPE_CARR_TARE_WT 
			    					where ULD_CARR = uldinv.ULD_CARR and ULD_TYPE = uldinv.ULD_TYPE and uldinv.ULD_NO between ULD_NO_FROM and ULD_NO_TO) tareWt	    		   
			    FROM IMP_RAMP_CHK_DTL dtl
			    LEFT JOIN IMP_ULD_LIST uld on uld.FLT_KEY=dtl.FLT_KEY AND TO_CHAR(uld.FLT_DATE,'DDMONYY') = TO_CHAR(dtl.FLT_DATE,'DDMONYY') AND uld.ULD_KEY=dtl.ULD_KEY
			    LEFT JOIN uld_inventory uldinv on uldinv.ULD_KEY=dtl.ULD_KEY			    
			    where dtl.FLT_KEY=#flightKey# 
				AND dtl.FLT_DATE=TO_DATE(#flightDate#,'DDMONYY')				
				AND dtl.ULD_KEY=#uldKey#	
	</select>
	
	<select id="getAWBEndrSCCollDetailsHHT" parameterClass="java.util.HashMap"  
		resultClass="cargo.cms.imprt.bo.HHTCreateAwbBO">		
	  select    
      awb.SPL_CODE1 AS splCode1,awb.SPL_CODE2 AS splCode2,awb.SPL_CODE3 AS splCode3,awb.SPL_CODE4 AS splCode4, 
      awb.SPL_CODE5 AS splCode5,awb.SPL_CODE6 AS splCode6,awb.SPL_CODE7 AS splCode7,awb.SPL_CODE8 AS splCode8,
      awb.SPL_CODE9 AS splCode9,
      (select ENDR_BD from MAST_SPL_HAND_CODE where code=awb.SPL_CODE1) splCodeEndr1,
      (select ENDR_BD from MAST_SPL_HAND_CODE where code=awb.SPL_CODE2) splCodeEndr2,
      (select ENDR_BD from MAST_SPL_HAND_CODE where code=awb.SPL_CODE3) splCodeEndr3,
      (select ENDR_BD from MAST_SPL_HAND_CODE where code=awb.SPL_CODE4) splCodeEndr4,
      (select ENDR_BD from MAST_SPL_HAND_CODE where code=awb.SPL_CODE5) splCodeEndr5,
      (select ENDR_BD from MAST_SPL_HAND_CODE where code=awb.SPL_CODE6) splCodeEndr6,
      (select ENDR_BD from MAST_SPL_HAND_CODE where code=awb.SPL_CODE7) splCodeEndr7,
      (select ENDR_BD from MAST_SPL_HAND_CODE where code=awb.SPL_CODE8) splCodeEndr8,
      (select ENDR_BD from MAST_SPL_HAND_CODE where code=awb.SPL_CODE9) splCodeEndr9,
      (select SCH_COLL_YN from MAST_SPL_HAND_CODE where code=awb.SPL_CODE1) splCodeSCColl1,
      (select SCH_COLL_YN from MAST_SPL_HAND_CODE where code=awb.SPL_CODE2) splCodeSCColl2,
      (select SCH_COLL_YN from MAST_SPL_HAND_CODE where code=awb.SPL_CODE3) splCodeSCColl3,
      (select SCH_COLL_YN from MAST_SPL_HAND_CODE where code=awb.SPL_CODE4) splCodeSCColl4,
      (select SCH_COLL_YN from MAST_SPL_HAND_CODE where code=awb.SPL_CODE5) splCodeSCColl5,
      (select SCH_COLL_YN from MAST_SPL_HAND_CODE where code=awb.SPL_CODE6) splCodeSCColl6,
      (select SCH_COLL_YN from MAST_SPL_HAND_CODE where code=awb.SPL_CODE7) splCodeSCColl7,
      (select SCH_COLL_YN from MAST_SPL_HAND_CODE where code=awb.SPL_CODE8) splCodeSCColl8,
      (select SCH_COLL_YN from MAST_SPL_HAND_CODE where code=awb.SPL_CODE9) splCodeSCColl9,
       pkg_common.get_awb_splcodes(AWB_NO, AWB_DATE, AWB_TYPE, ', ') as splCode
      from AWB awb 
      where awb.AWB_NO	  =   #awbNo#  AND
      awb.AWB_DATE	  =	  TO_DATE(#awbDate#,'DDMONYY') 
      </select>
      
      
      	<select id="getAWBEndrSCCollDetails" parameterClass="java.util.HashMap"  
		resultClass="cargo.cms.imprt.bo.CarShpBO">		
	  select    
      awb.SPL_CODE1 AS splCode1,awb.SPL_CODE2 AS splCode2,awb.SPL_CODE3 AS splCode3,awb.SPL_CODE4 AS splCode4, 
      awb.SPL_CODE5 AS splCode5,awb.SPL_CODE6 AS splCode6,awb.SPL_CODE7 AS splCode7,awb.SPL_CODE8 AS splCode8,
      awb.SPL_CODE9 AS splCode9,
      (select ENDR_BD from MAST_SPL_HAND_CODE where code=awb.SPL_CODE1) splCodeEndr1,
      (select ENDR_BD from MAST_SPL_HAND_CODE where code=awb.SPL_CODE2) splCodeEndr2,
      (select ENDR_BD from MAST_SPL_HAND_CODE where code=awb.SPL_CODE3) splCodeEndr3,
      (select ENDR_BD from MAST_SPL_HAND_CODE where code=awb.SPL_CODE4) splCodeEndr4,
      (select ENDR_BD from MAST_SPL_HAND_CODE where code=awb.SPL_CODE5) splCodeEndr5,
      (select ENDR_BD from MAST_SPL_HAND_CODE where code=awb.SPL_CODE6) splCodeEndr6,
      (select ENDR_BD from MAST_SPL_HAND_CODE where code=awb.SPL_CODE7) splCodeEndr7,
      (select ENDR_BD from MAST_SPL_HAND_CODE where code=awb.SPL_CODE8) splCodeEndr8,
      (select ENDR_BD from MAST_SPL_HAND_CODE where code=awb.SPL_CODE9) splCodeEndr9,
      (select SCH_COLL_YN from MAST_SPL_HAND_CODE where code=awb.SPL_CODE1) splCodeSCColl1,
      (select SCH_COLL_YN from MAST_SPL_HAND_CODE where code=awb.SPL_CODE2) splCodeSCColl2,
      (select SCH_COLL_YN from MAST_SPL_HAND_CODE where code=awb.SPL_CODE3) splCodeSCColl3,
      (select SCH_COLL_YN from MAST_SPL_HAND_CODE where code=awb.SPL_CODE4) splCodeSCColl4,
      (select SCH_COLL_YN from MAST_SPL_HAND_CODE where code=awb.SPL_CODE5) splCodeSCColl5,
      (select SCH_COLL_YN from MAST_SPL_HAND_CODE where code=awb.SPL_CODE6) splCodeSCColl6,
      (select SCH_COLL_YN from MAST_SPL_HAND_CODE where code=awb.SPL_CODE7) splCodeSCColl7,
      (select SCH_COLL_YN from MAST_SPL_HAND_CODE where code=awb.SPL_CODE8) splCodeSCColl8,
      (select SCH_COLL_YN from MAST_SPL_HAND_CODE where code=awb.SPL_CODE9) splCodeSCColl9
      from AWB awb 
      where awb.AWB_NO	  =   #awbNo#  AND
      awb.AWB_DATE	  =	  TO_DATE(#awbDate#,'DDMONYY') 
      </select>
	
	  <select id="getCntgFlightsForULD"  parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO"  
		resultClass="cargo.cms.imprt.bo.HHTCreateAwbBO">
		<!-- 
		select DISTINCT ddt.cntg_flt_key as cngFlightKey, 
		TO_CHAR(ddt.cntg_flt_date,'DDMONYY') as cngFlightDate, 
        (select count(shp1.awb_no) from  DDT_SHP shp1 where shp1.udoc_line_no= ddt.doc_line_no) as totalPcs,
        dtl.trf_wt as totalWt,
        dtl.UNLDG_PT as unloadPoint,
        dtl.QT_BU as qtBuildUp
		FROM DDT_ULD ddt,  DDT_SHP shp, DDT_SHP_TRF_DTL dtl
		where				 
		ddt.ULD_KEY=#PARAM# and
        ddt.DOC_LINE_NO = shp.UDOC_LINE_NO and 
        shp.UDOC_LINE_NO = dtl.SDOC_LINE_NO  		 -->       
                  select SHP_CNTG_FLT_KEY cngFlightKey, 
                  TO_CHAR(SHP_CNTG_FLT_DATE,'DDMONYY') cngFlightDate,
                  SHP_UNLDG_PT unloadPoint,
                  QT_BU qtBuildUp,
                  SUM(SHP_TRF_PC) totalPcs,
                  SUM(SHP_TRF_WT) totalWt                 
                  from v_ddt_dtl
                  where flt_key = #flightKey#
                  AND FLT_DATE    = TO_DATE(#flightDate#,'DDMONYY')
                  AND SHP_TRF_TYPE IN ('QT','TT','IF')
                  and uld_key = #uldKey# 
                  GROUP BY SHP_CNTG_FLT_KEY,SHP_CNTG_FLT_DATE,SHP_UNLDG_PT,QT_BU	       			    
	</select>
	
	<!--  Changed for QR -->
	<select id="getCntgFlightsForAWB"  parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO"  
		resultClass="cargo.cms.imprt.bo.HHTCreateAwbBO">   
       SELECT  dtl.SHP_CNTG_FLT_KEY cngFlightKey, 
        TO_CHAR(dtl.SHP_CNTG_FLT_DATE,'DDMONYY') cngFlightDate,
        dtl.SHP_UNLDG_PT unloadPoint,
        dtl.QT_BU qtBuildUp,
	    PKG_COMMON.get_flt_sta(dtl.cntg_flt_key, dtl.cntg_flt_date, 'D', 'DD') std,
        PKG_COMMON.get_flt_eta(dtl.cntg_flt_key, dtl.cntg_flt_date, 'D', 'DD') etd,
        SUM(dtl.SHP_TRF_PC) totalPcs,
        SUM(dtl.SHP_TRF_WT) totalWt  
    	FROM  V_DDT_DTL dtl
        WHERE dtl.FLT_KEY     = #flightKey#
        AND dtl.FLT_DATE    = TO_DATE(#flightDate#,'DDMONYY')
	    AND dtl.SHP_TRF_TYPE IN ('QT')
	    AND dtl.AWB_NO=#awbNo#
	    AND dtl.AWB_DATE    = TO_DATE(#awbDate#,'DDMONYY')
	    group by dtl.SHP_CNTG_FLT_KEY, TO_CHAR(dtl.SHP_CNTG_FLT_DATE,'DDMONYY'), dtl.SHP_UNLDG_PT, dtl.QT_BU, 
	    PKG_COMMON.get_flt_sta(dtl.cntg_flt_key, dtl.cntg_flt_date, 'D', 'DD'), PKG_COMMON.get_flt_eta(dtl.cntg_flt_key, dtl.cntg_flt_date, 'D', 'DD')     
	</select>
	
	<select id="getULDBrkCompleteDetails" parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO" 
		resultClass="cargo.cms.imprt.bo.HHTCreateAwbBO">	
				select			
			    dtl.TR_NO                                              AS trNo        ,
			    dtl.DOC_LINE_NO                                        AS docLineNo   ,
			    dtl.CARR_CODE 										   As carrierCode,
			    dtl.FLT_NO                                             AS flightNo    ,
			    dtl.FLT_KEY                                            AS flightKey   ,
			    TO_CHAR(dtl.FLT_DATE,'DDMONYY')                        AS flightDate  ,			   
			    dtl.ULD_KEY                                            AS uldKey      ,				  
			    dtl.EMPTY_IND                                          AS empty       ,			    
			    PKG_COMMON.get_flt_ata(dtl.FLT_KEY, dtl.FLT_DATE, 'A','DD') AS ata         
			    FROM IMP_RAMP_CHK_DTL dtl
			    where
			     <!--
				dtl.LOC_CODE = #locCode# AND dtl.ULD_KEY=#uldKey#   -->
				dtl.FLT_KEY=#flightKey# 
				AND dtl.FLT_DATE=TO_DATE(#flightDate#,'DDMONYY')				
				AND dtl.ULD_KEY=#uldKey#			    
	</select>
	
	
	<select id="checkUldCheckedIn" parameterClass="java.util.HashMap" 
		resultClass="java.lang.Integer">
		SELECT 
			COUNT(1) 
		FROM 
			IMP_RAMP_CHK_DTL 
		WHERE 
		<!--
			LOC_CODE = #locCode# AND ULD_KEY=#uldKey#   -->
			FLT_KEY=#flightKey# 
			AND FLT_DATE=TO_DATE(#flightDate#,'DDMONYY')				
			AND ULD_KEY=#uldKey#
			AND CHKIN_YN = 'Y'
	</select>
	
	
	<select id="checkBreakDownCompleted" parameterClass="java.util.HashMap" 
		resultClass="java.lang.Integer">
		SELECT 
			COUNT(1) 
		FROM 
			IMP_RAMP_CHK_DTL 
		WHERE 
			<!--
			LOC_CODE = #locCode# AND ULD_KEY=#uldKey#   -->
			FLT_KEY=#flightKey# 
			AND FLT_DATE=TO_DATE(#flightDate#,'DDMONYY')				
			AND ULD_KEY=#uldKey# 
			AND BRKDN_COMPL_YN = 'Y'
	</select>
	
		<select id="getULDHandlingMode" parameterClass="java.util.HashMap" 
		resultClass="java.lang.String">
		SELECT 
			HANDLING_MODE
		FROM 
			IMP_ULD_LIST 
		WHERE 
			ULD_KEY=#uldKey# and
			FLT_KEY=#flightKey# and
			FLT_DATE=TO_DATE(#flightDate#,'DDMONYY')			
	</select>
	
	<select id="checkBreakDownStarted" parameterClass="java.util.HashMap" 
		resultClass="java.lang.Integer">
		SELECT 
			COUNT(1) 
		FROM 
			IMP_RAMP_CHK_DTL 
		WHERE 
			<!--
			LOC_CODE = #locCode# AND ULD_KEY=#uldKey#   -->
			FLT_KEY=#flightKey# 
			AND FLT_DATE=TO_DATE(#flightDate#,'DDMONYY')
			AND ULD_KEY=#uldKey# AND BRKDN_START_DATE is not null			
	</select>
	
	<!--  Changed for QR -->
	<select id="getAWBCountForULDFromShipment"  parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO"  
		resultClass="java.lang.Integer">
	   	SELECT COUNT(1)
		  FROM V_FFM_DTL V 		 
		  WHERE
			V.FLT_KEY = #flightKey# AND
			V.FLT_DATE = TO_DATE (#flightDate#, 'DDMONYY') AND    
      		V.ULD_KEY = #uldKey#    
    </select>
	
	 <select id="getAWBCountForULDFromStorage"  parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO"  
		resultClass="java.lang.Integer">
		  select count(AWB_NO) as awbCount  
	  	 FROM (select DISTINCT AWB_NO
      			 FROM  IMP_AWB_STRG_DTL
      	 			where                   
       				CHKIN_ULD_KEY=#uldKey# and       
       				TO_CHAR(FLT_DATE,'DDMONYY')=#flightDate# and
       				FLT_KEY=#flightKey#)    
    </select>      
  
	<!--  Changed for QR -->
	<select id="getBookingDetails"  parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO"  
		resultClass="java.lang.String">
			select	
	  		TO_CHAR(hd.BKG_SLOT_DATE, 'DDMONYY') || ' ' || 
 			SUBSTR(TRIM(TO_CHAR(NVL(hd.BKG_SLOT_FROM,0),'0000')),0,2)|| ':' || 
 			SUBSTR(TRIM(TO_CHAR(NVL(hd.BKG_SLOT_FROM,0),'0000')),3,4)|| ' - ' || 
 			SUBSTR(TRIM(TO_CHAR(NVL(hd.BKG_SLOT_TO,0),'0000')),0,2)|| ':'|| 
 			SUBSTR(TRIM(TO_CHAR(NVL(hd.BKG_SLOT_TO,0),'0000')),3,4) as bookingDateTime
 			from IMP_BOOKING hd
 			join IMP_BOOKING_DTL dtl on hd.BOOKING_NO = dtl.BOOKING_NO
 			where status not in  ('CANCEL')
 			and dtl.AWB_NO = #awbNo# 
 			and dtl.FLT_KEY = #flightKey# 
 			and TO_CHAR(FLT_DATE,'DDMONYY') = #flightDate#		
    </select>
    
    <update id="doUldBrkComplete" parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO">
		UPDATE IMP_RAMP_CHK_DTL SET
		   BRKDN_COMPL_YN   =  #breakdownYN#,
		   BRKDN_COMPL_USER_ID = #modUser#,
		   BRKDN_COMPL_DATE	= SYSDATE,
		   <!-- EMPTY_IND = #emptyInd#,-->
		   BRKDN_COMPL_TIME	= TO_CHAR(SYSDATE,'HH24MI'),
		   TR_TYPE=#trType#
		WHERE
			TR_NO = #trNo# AND
			DOC_LINE_NO =  #docLineNo#
	</update>	

	 <update id="doUldBrkUnComplete" parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO">
		UPDATE IMP_RAMP_CHK_DTL SET
		   BRKDN_COMPL_YN   =  #breakdownYN#,
		   BRKDN_COMPL_USER_ID = null,
		   BRKDN_COMPL_DATE	= null,
		   BRKDN_COMPL_TIME	= null,
		   TR_TYPE=#trType#
		WHERE
			TR_NO = #trNo# AND
			DOC_LINE_NO =  #docLineNo#
	</update>	
	
	 <update id="updateInvAfterBDHHT" parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO">
		Update Uld_inventory
		set empty_flg=#emptyInd#,
			FLT_NO=NULL,
			FLT_TYPE=NULL,
			FLT_DATE=NULL,
			FLT_KEY=NULL,
			CARR_CODE=NULL,
			transit_flg = decode(#emptyInd#,'Y','N',transit_flg),
			transit_type = decode(#emptyInd#,'Y',null,transit_type)
		 where uld_key = #uldKey#
	</update>	
	
	<select id="hhtcheckAwbInvAfterBDComplete" parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO" resultClass="java.lang.Integer">
	  select count(1) from awb
	  join awb_inventory awbInv on awbInv.awb_no = awb.awb_no and  awbInv.awb_date = awb.awb_date
	  where awb.awb_type = 'T' and awbInv.uld_key = #uldKey#
	</select>
	
	<update id="hhtupdateInvAfterCheckAwbInvBDComplete" parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO">
		Update Uld_inventory
		set transit_flg = 'N',
			transit_type = null
		 where uld_key = #uldKey#
	</update>
	
	 <update id="updateInvAfterBDUNHHT" parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO">
		Update Uld_inventory
		set FLT_NO=IMP_FLT_NO,
			FLT_TYPE='I',
			FLT_DATE=IMP_FLT_DATE,
			FLT_KEY=IMP_FLT_KEY,
			CARR_CODE=IMP_FLT_CARR
		 where uld_key = #uldKey#
	</update>	
	
	
	<select id="get_hht_pcs_wt" parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO" resultClass="cargo.cms.imprt.bo.HHTCreateAwbBO">
		SELECT NVL(RECD_PCS,0) AS receivedPieces,
		   NVL(RECD_WT,0) AS receivedWeight ,
		   NVL(MANIFEST_PCS,0) AS  manifPieces,
		   NVL(MANIFEST_WT,0) AS manifWeight,
		   NVL(CAR_CREATED,'N') as carCreated,
		   MINI_SHP as minShpInd
		   FROM IMP_CAR_SHP WHERE AWB_NO=#awbNo#
		   AND AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
		   AND FLT_KEY = #flightKey#
		   AND FLT_DATE = TO_DATE(#flightDate#,'DDMONYY')
	</select>
	
	
	<select id="getAWBDateCarShp" parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO" 
		resultClass="java.lang.String">
		SELECT  TO_CHAR(AWB_DATE,'DDMONYY') AS awbDate 
		   FROM IMP_CAR_SHP WHERE AWB_NO=#awbNo#		 
		   AND FLT_KEY = #flightKey#
		   AND FLT_DATE = TO_DATE(#flightDate#,'DDMONYY')	
	</select>
	
	<insert id="insertimpawbstrgdtlhht" parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO">
		INSERT INTO IMP_AWB_STRG_DTL (
		   TR_NO, 	DOC_LINE_NO, 	CARR_CODE, 
		   FLT_DATE, 	FLT_KEY, 	
		   AWB_PFX, 	AWB_NO, 	AWB_DATE, 
		   ULD_KEY,  
		   LOC_CODE, 	STRG_PCS, 	STRG_WT, 
		   DAM_IND, TR_TYPE, 	TR_STATUS, 	CR_USER_ID, 
		   CR_DATE, LM_USER_ID, LM_DATE,CHKIN_ULD_KEY,
			 INSRT_FROM_IND,LSP_NO,FLT_TYPE,
			 MINI_SHP,ENDORSED_BY,AWB_DEST,ULD_TYPE,ULD_NO, 
			 ULD_CARR,TARGET,DAM_TYPE,BULK_WT,BUP_WT,DAM_PC_DECL,DAM_WT_DECL,DAM_COND,TR_TYPE_EVT,RMK) 
		VALUES ( #trNo#, '1', #carrierCode#,
			TO_DATE(#flightDate#,'DDMONYY'), #flightKey#, 
			#awbPrefix#, #awbNo#, NVL(#awbDate#,to_char(SYSDATE,'DDMONYY')),
			#uldKeyDtl#,
			#locCode#, #totalPcs#, #totalWt#,
			#damInd#,
			'AS', 'A', #modUser#,
			sysdate, #modUser#, sysdate,#uldKey#,
			'H',#lspNo#,'I',#minShpInd#,#userName#,#awbDest#,
			#uldType#, #uldNo#,#uldCarr#,#target#,#damType#,#totalWt#,#totalWt#,#dmgDclPcs#,#dmgDclWt#,#damCondConcat#,'CIASH',#remark#)
	</insert>
	
	<update id="imp_createawbstrg_uldbreak_start" parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO">
		UPDATE IMP_RAMP_CHK_DTL	SET	
			BRKDN_START_USER_ID = #modUser#,
			BRKDN_START_DATE = sysdate,		
			<!-- 	
			BRKDN_LOCN = #locCode#,	 -->			
			LM_USER_ID	 =#modUser#,
			LM_DATE	 = sysdate 		
		WHERE 	FLT_KEY    = #flightKey#
			  	AND TO_CHAR(FLT_DATE,'DDMONYY') = #flightDate#			  	
				AND ULD_KEY = #uldKey#				
	</update>	
	
	
	<select id="checkBreakDownNotStarted" parameterClass="java.util.HashMap" 
		resultClass="java.lang.Integer">
		SELECT 
			COUNT(1) 
		FROM 
			IMP_RAMP_CHK_DTL 
		WHERE 
			<!--
			LOC_CODE = #locCode# AND ULD_KEY=#uldKey#   -->
			FLT_KEY=#flightKey# 
			AND FLT_DATE=TO_DATE(#flightDate#,'DDMONYY')
			AND ULD_KEY=#uldKey# 
			AND BRKDN_START_DATE is null
			AND CHKIN_YN = 'Y'
			
	</select>
	
	<insert id="save_imp_awb_uld_brk_hht" parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO">
		<![CDATA[
			INSERT INTO AWB (AWB_TYPE,AWB_NO,AWB_DATE,BLDUP_BULK_PCS,BLDUP_BULK_WT,
				SPL_CODE1,SPL_CODE2,SPL_CODE3,  
				SPL_CODE4,SPL_CODE5,SPL_CODE6,SPL_CODE7,SPL_CODE8,SPL_CODE9,
				LM_USER_ID ,LM_DATE,CR_USER_ID, CR_DATE, PPK_TYPE,CARR_CODE,CAR_YN,TR_TYPE) 
			VALUES('I',#awbNo#,TO_DATE(#awbDate#,'DDMONYY'), 
				nvl(#recdPcsToUpdate#,0),nvl(#recdWtToUpdate#,0),#splCode1#,
				#splCode2#,#splCode3#,#splCode4#,#splCode5#,#splCode6#,#splCode7#,#splCode8#,#splCode8#,
				#modUser#,SYSDATE,#modUser#,SYSDATE,'B',#carrierCode#,'Y',#trType#)  
		]]>
	</insert>	

	<select id="findRecvdPcsSavedForShpmthht" parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO" resultClass="java.lang.Integer">
		SELECT 
			COUNT(1) 
		FROM 
			IMP_CAR_SHP 
		WHERE 
			AWB_NO=#awbNo# AND AWB_DATE=TO_DATE(#awbDate#, 'DDMONYY') AND FLT_KEY=#flightKey# 
			AND FLT_DATE=TO_DATE(#flightDate#, 'DDMONYY') AND RECD_PCS='0'
	</select>
	
	<!--  Changed for QR -->
	<select id="findBkgRecordWithinXHrshht" parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO"
		resultClass="cargo.cms.imprt.bo.HHTCreateAwbBO">
		<![CDATA[
		SELECT 
			TO_CHAR(BKG_SLOT_DATE, 'DDMONYY') as schDate, BKG_SLOT_TO as timeTo, BKG_SLOT_FROM as timeFrom 
		FROM 
			IMP_BOOKING A, IMP_BOOKING_DTL B 
		WHERE A.status not in  ('CANCEL') and 
			A.BOOKING_NO=B.BOOKING_NO AND B.AWB_NO=#awbNo# AND B.AWB_DATE=TO_DATE(#awbDate#, 'DDMONYY') 
			AND B.FLT_KEY=#flightKey# AND B.FLT_DATE=TO_DATE(#flightDate#, 'DDMONYY') 
			AND TO_DATE(to_char(A.BKG_SLOT_DATE, 'DDMONYY') || ' ' ||trim(to_char(A.BKG_SLOT_TO, '0000')), 'DDMONYY HH24MI') <= TO_DATE(#timeTo#, 'DDMONYY HH24MI')
			and to_date(to_char(A.BKG_SLOT_DATE, 'DDMONYY') || trim(to_char(A.BKG_SLOT_FROM, '0000')),'DDMONYY HH24MI') > to_date(to_char(sysdate,'DDMONYY HH24MI'),'DDMONYY HH24MI')
		]]>
	</select>
	<select id="findTrkRecordWithinXHrshht" parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO" resultClass="cargo.cms.imprt.bo.HHTCreateAwbBO">
		<![CDATA[
		SELECT 
			TO_CHAR(SCH_COLL_DATE, 'DDMONYY') as schDate, SCH_COLL_TO as timeTo, SCH_COLL_FROM as timeFrom 
		FROM 
			IMP_CAR_AWB A, TRUCK_MANIFEST B, TRUCK_MANIFEST_DTL C 
		WHERE 
			C.TRUCK_MANF_NO=B.TRUCK_MANF_NO AND C.AWB_NO=A.AWB_NO AND C.AWB_DATE=A.AWB_DATE AND B.AGENT_CODE=A.AGENT_CUST_NO AND A.AWB_NO=#awbNo# AND 
			A.AWB_DATE=TO_DATE(#awbDate#, 'DDMONYY') AND TO_DATE(B.SCH_COLL_DATE || ' ' || LPAD(B.SCH_COLL_TO,4,0), 'DD-MON-YY HH24MI') <= 
			TO_DATE(#timeTo#, 'DDMONYY HH24MI') AND C.FLT_KEY=#flightKey# AND C.FLT_DATE=TO_DATE(#flightDate#, 'DDMONYY')
		]]>
	</select>
	
	<!--  Changed for QR -->
	<select id="findBkgExistsForShpmnthht" parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO" resultClass="java.lang.String">			
			SELECT 
			hd.DEL_ZONE 
			FROM 
			IMP_BOOKING hd JOIN
		      IMP_BOOKING_DTL dtl on hd.BOOKING_NO = dtl.BOOKING_NO
			  WHERE hd.status not in  ('CANCEL') and 
			  dtl.AWB_NO=#awbNo#  
		      AND dtl.AWB_DATE=TO_DATE(#awbDate#, 'DDMONYY') 
		      AND dtl.FLT_KEY=#flightKey#
		      AND dtl.FLT_DATE=TO_DATE(#flightDate#, 'DDMONYY')
		      AND TO_DATE(TO_CHAR(hd.BKG_SLOT_DATE, 'DDMONYY') || TO_CHAR(hd.BKG_SLOT_FROM, '0000'),'DDMONYY HH24MI') >
		      TO_DATE(TO_CHAR(SYSDATE,'DDMONYY HH24MI'),'DDMONYY HH24MI') 
	</select>
	
	<!--  Changed for QR -->
	<select id="findTrkDockForShpmnthht" parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO" resultClass="java.lang.String">
	  <![CDATA[ 
	 
		SELECT custAgtSchCollTD.TRUCK_DOCK  
		FROM IMP_CAR_SHP carShp
			join TRUCK_MANIFEST_DTL trkMnfDtl on trkMnfDtl.awb_no = carShp.awb_no and trkMnfDtl.awb_date = carShp.awb_date and trkMnfDtl.flt_key = carShp.flt_key and trkMnfDtl.flt_date = carShp.flt_date
			join TRUCK_MANIFEST trkMnf on trkMnf.truck_manf_no = trkMnfDtl.truck_manf_no 
			join CUST_AGENT_SCH_COLL_TIME custAgtSchColl on trkMnf.time_slot_tr_no = custAgtSchColl.tr_no
			join CUST_AGENT_SCH_COLL_TRUCK_DOCK custAgtSchCollTD on  custAgtSchCollTD.tr_no = custAgtSchColl.tr_no
		WHERE sysdate < to_date(to_char(SCH_COLL_DATE,'DMONYY')||' '|| TO_CHAR(SCH_COLL_FROM,'0000'),'DDMONYY HH24MI') and custAgtSchColl.purpose = 'CRG'
				AND carShp.AWB_NO=#awbNo# AND carShp.AWB_DATE=TO_DATE(#awbDate#, 'DDMONYY') 
				AND carShp.FLT_KEY=#flightKey# AND carShp.FLT_DATE=TO_DATE(#flightDate#, 'DDMONYY') and ROWNUM=1
				
	  ]]>
	</select>
	
	<select id="findDefTgtForSHCForShpmnthht" parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO" resultClass="java.lang.String">
		SELECT 
			DEFAULT_TARGET 
		FROM 
			MAST_SPL_HAND_CODE A, IMP_CAR_AWB B 
		WHERE (A.CODE=B.SPL_CODE1 OR A.CODE=B.SPL_CODE2 OR A.CODE=B.SPL_CODE3 OR A.CODE=B.SPL_CODE4 OR A.CODE=B.SPL_CODE5 
		OR A.CODE=B.SPL_CODE6 OR A.CODE=B.SPL_CODE7 OR A.CODE=B.SPL_CODE8 OR A.CODE=B.SPL_CODE9) AND B.AWB_NO=#awbNo# 
		AND B.AWB_DATE=TO_DATE(#awbDate#, 'DDMONYY') AND DEFAULT_TARGET IS NOT NULL ORDER BY PRIORITY
	</select>
	
	
	<update id="updateAwbInvFrmCreateAWBStrghht" parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO">	
		UPDATE AWB_INVENTORY 
		SET 			
			LOCN_WT = '0',	
			LM_USER_ID = #modUser#,
			LM_DATE = SYSDATE
		WHERE 	
		<isEmpty property="seqNo">
				AWB_NO = UPPER(#awbNo#) AND
				FLT_KEY = UPPER(#flightKey#) AND
				FLT_DATE = TO_DATE(#flightDate#,'DDMONYY') AND
				AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')  
				<isNotEmpty property="locCode">
				AND LOC_CODE = #locCode# 
				</isNotEmpty>
				<isNotEmpty property="uldKeyDtl">
				AND ULD_KEY = #uldKeyDtl#
				</isNotEmpty>
				<isNotEmpty property="lspNo">
				AND LSP_NO = #lspNo# 
				</isNotEmpty>					
		</isEmpty>
		<isNotEmpty property="seqNo">
		SEQ_NO = #seqNo#	
		</isNotEmpty>					
	</update>

	<update id="updateAWBUnknownCarCrthht" parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO">
		UPDATE AWB SET
		CAR_YN = 'Y',
		MANIFEST_PCS = '0', 
		MANIFEST_WT = '0',
		LM_DATE = SYSDATE,
		TR_TYPE=#trType#,
		LM_USER_ID = #modUser# 
		WHERE
		AWB_NO = #awbNo#  AND
		TO_CHAR(AWB_DATE,'DDMONYY') = TO_DATE(#awbDate#)
	</update>		
	
	<update id="updateCarSHPUnknownCarCrthht" parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO">	
		UPDATE IMP_CAR_SHP 
		SET 
			CAR_CREATED = 'Y',
			MANIFEST_PCS = '0', 
			MANIFEST_WT = '0',
			LM_USER_ID = #modUser#,
			LM_DATE = SYSDATE
		WHERE 	
				AWB_NO = UPPER(#awbNo#) AND
				FLT_KEY = UPPER(#flightKey#) AND
				FLT_DATE = TO_DATE(#flightDate#,'DDMONYY') AND
				AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')  
	</update>	
	

	
	<update id="updateCarShpMinShipHHT" parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO">
		UPDATE IMP_CAR_SHP
		SET    
				MINI_SHP = #minShpInd#,
			    LM_USER_ID =  #modUser#, 
				LM_DATE   =  sysdate,
				TR_TYPE='AWB Storage' 
		WHERE  AWB_NO	  =   #awbNo#  AND
			   AWB_DATE	  =	  TO_DATE(#awbDate#,'DDMONYY') AND
			   FLT_KEY = UPPER(#flightKey#) AND
			   FLT_DATE = TO_DATE(#flightDate#,'DDMONYY')
	</update>		
	
	<insert id="insertimpcarawbhht" parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO">
		INSERT INTO IMP_CAR_AWB (
		   AWB_NO,    	AWB_DATE,    AWB_PRFX, AWB_ORIGIN,  AWB_DEST, PPK_TYPE, 
		   CR_USER_ID,  CR_DATE,    LM_USER_ID, 
		   LM_DATE,TR_STATUS,CONSOLE_IND, AWB_PCS,AWB_WT,BULK_PCS,BULK_WT,CATALOG, CURR_CODE) 
		VALUES ( #awbNo#, NVL(#awbDate#,to_char(SYSDATE,'DDMONYY')), #awbPrefix#, #awbOrigin#, #awbDest#, nvl(#awbPPKType#, 'B'),
				 #modUser#, SYSDATE, #modUser#,SYSDATE,'A',#consolInd#,#totalPcs#,#totalWt#,#totalPcs#,#totalWt#,#catalog#, #currencyCode#)
	</insert>
	
	<update id="updateimpcarshphht" parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO">
	UPDATE IMP_CAR_SHP
	SET    RECD_PCS	  =	 #totalPcs#,
		   RECD_WT	  =  #totalWt#,
		    LM_USER_ID =  #modUser#, 
			LM_DATE   =  sysdate
	WHERE  AWB_NO	  =   #awbNo#  AND
		   AWB_DATE	  =	  TO_DATE(#awbDate#,'DDMONYY') AND
		   FLT_KEY = UPPER(#flightKey#) AND
		   FLT_DATE = TO_DATE(#flightDate#,'DDMONYY')

	</update>	   
	
	<!--  Changed for QR -->
		<insert id="insertimpcarshphht" parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO"> 
	INSERT INTO IMP_CAR_SHP (
	   AWB_NO, AWB_DATE, AWB_PRFX, PPK_TYPE,
	   CARR_CODE, FLT_DATE, 
	   FLT_KEY, CR_USER_ID, CR_DATE, 
	   LM_USER_ID, LM_DATE, TR_STATUS,
	   FLT_TYPE,MINI_SHP
		) 
	VALUES (#awbNo#, NVL(#awbDate#,to_char(SYSDATE,'DDMONYY')), #awbPrefix#,nvl(#awbPPKType#, 'B'),
				#carrierCode#, TO_DATE(#flightDate#,'DDMONYY'),
				#flightKey#, #modUser#, SYSDATE ,
			 #modUser#, SYSDATE,'A',			 
			 'I',#minShpInd#)	
	</insert>	
	
	<update id="updateimpcarshphhtdamage" parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO">
	UPDATE IMP_CAR_SHP
	SET   	   
		    DAM_RMK = #remark#, 
			DAM_REF_NO   = #damRefNo#,
			DAM_DECL_PCS = DAM_DECL_PCS + NVL(#dmgDclPcs#, 0),
			DAM_DECL_WT =  DAM_DECL_WT + NVL(#dmgDclWt#,0),	
			DAM_PROC_DATE = SYSDATE,
			DAM_PROC_USER = #modUser#,
			LM_USER_ID = #modUser#,
			LM_DATE = SYSDATE		   
	WHERE  AWB_NO	  =   #awbNo#  AND
		   AWB_DATE	  =	  TO_DATE(#awbDate#,'DDMONYY') AND
		   FLT_KEY = UPPER(#flightKey#) AND
		   FLT_DATE = TO_DATE(#flightDate#,'DDMONYY')
	</update>

	<update id="updateawbinvcreateawbstrgdamage" parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO">	
		UPDATE AWB_INVENTORY 
		SET 
			DAM_PCS = NVL(#dmgDclPcs#, 0),
			DAM_WT =  NVL(#dmgDclWt#,0),	
			LM_USER_ID = #modUser#,
			LM_DATE = SYSDATE
		WHERE 	
		<isEmpty property="seqNo">
				AWB_NO = UPPER(#awbNo#) AND
				FLT_KEY = UPPER(#flightKey#) AND
				FLT_DATE = TO_DATE(#flightDate#,'DDMONYY') AND
				AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')  
				<isNotEmpty property="locCode">
				and LOC_CODE = #locCode# 
				</isNotEmpty>
				<isNotEmpty property="uldKeyDtl">
				and ULD_KEY = #uldKeyDtl# 
				</isNotEmpty>
				<isNotEmpty property="lspNo">
				 and LSP_NO = #lspNo# 
				</isNotEmpty>				
		</isEmpty>
		<isNotEmpty property="seqNo">
		seq_no = #seqNo#	
		</isNotEmpty>							
	</update>		
		
	<select id="checkawbexistsinimpcarshphht"  parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO" 
	 resultClass="java.lang.String">
	SELECT count(1)	
	FROM IMP_CAR_SHP 	
	WHERE AWB_NO = UPPER(#awbNo#) AND
	  AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') AND
	  FLT_KEY = UPPER(#flightKey#) AND
	  FLT_DATE = TO_DATE(#flightDate#,'DDMONYY')
	</select>	
	
	<select id="checkawbexistsinimpcarawbhht"  parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO" 
	 resultClass="java.lang.String">		
	SELECT count(1)	
	FROM IMP_CAR_AWB 	
	WHERE AWB_NO = UPPER(#awbNo#) AND AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
	</select>	
	
	<select id="validatehhtuldkeyinffm" parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO" 
		resultClass="java.lang.Integer">	
		select count(1) 
		FROM IMP_RAMP_CHK_DTL
		WHERE 
		CARR_CODE = #carrierCode# AND
		FLT_NO = #flightNo# AND
		FLT_DATE = TO_DATE(#flightDate#,'DDMONYY') AND
		ULD_KEY = #uldKey#
	</select>			
	
	<!--  Changed for QR -->
	<select id="getAWBDetailsFromCarAWB"  parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO" resultClass="cargo.cms.imprt.bo.HHTCreateAwbBO">	
		SELECT car.AWB_ORIGIN as awbOrigin,
		car.AWB_DEST as awbDest, 
		car.PPK_TYPE as awbPPKType
		FROM IMP_CAR_AWB car
		JOIN AWB awb ON awb.AWB_NO = car.AWB_NO AND awb.awb_date = car.awb_date 
		where 
		car.AWB_NO = #awbNo# and car.AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')		
	</select>	
		
	<select id="getAWBInvDetails"  parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO" resultClass="cargo.cms.imprt.bo.HHTCreateAwbBO">	
		SELECT inv.AWB_NO awbNo, TO_CHAR(inv.AWB_DATE,'DDMONYY')  as awbDate, 
		awb.AWB_TYPE as awbType
		FROM AWB_INVENTORY inv
		JOIN AWB awb ON awb.AWB_NO = inv.AWB_NO AND awb.awb_date = inv.awb_date
		where 
		inv.AWB_NO = #awbNo# and
		inv.FLT_DATE = TO_DATE(#flightDate#,'DDMONYY') and
		inv.FLT_KEY = #flightKey# and
		inv.ULD_KEY = #uldKey#		
	</select>
	
	<select id="getAWBType"  parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO" resultClass="java.lang.String">
		SELECT AWB_TYPE 		
		FROM AWB 
		WHERE 
		AWB_NO = #awbNo#
		and AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')		
	</select>
	
	<select id="getAWBTypeDesktop"  parameterClass="cargo.cms.imprt.bo.AWBStorDtlBO" resultClass="java.lang.String">
		SELECT AWB_TYPE 		
		FROM AWB 
		WHERE 
		AWB_NO = #awbNo#
		and AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')		
	</select>
	
	<select id="getAwbType_with_Map" parameterClass="map" resultClass="java.lang.String">
		select  AWB_TYPE awbType from awb where awb_no=#awbNo# and  awb_date = #awbDate#
	</select>
	
	<select id="getAWBTypeDesktop1"  parameterClass="cargo.cms.imprt.bo.CarShpBO" resultClass="java.lang.String">
		SELECT AWB_TYPE 		
		FROM AWB 
		WHERE 
		AWB_NO = #awbNo#
		and AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')		
	</select>
	
	<!--  Changed for QR -->
	<select id="getAWBDetails"  parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO" resultClass="cargo.cms.imprt.bo.HHTCreateAwbBO">	
		SELECT awb.LOCKED_YN AS awbLockedYN, 
		lok.MISS_YN as awbBlacklistedYN,
		awb.AWB_CLOSED_YN as awbClosedYN,
		awb.CATALOG AS awbCatalog,
		awb.PPK_TYPE awbPPKType,
    	carawb.WH_RMK as awbInstruction
		FROM AWB awb
		LEFT join AWB_LOCK lok ON lok.AWB_NO = awb.AWB_NO and lok.AWB_DATE = awb.AWB_DATE
    	LEFT JOIN IMP_CAR_AWB carawb ON carawb.AWB_NO = awb.AWB_NO and carawb.AWB_DATE = awb.AWB_DATE     	
		WHERE 		
		awb.AWB_NO = #awbNo#
		and awb.AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
	</select>	
	
	<select id="getHawbCountDamAwb"  parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO" resultClass="java.lang.Integer">	
		select count(1) 
		FROM MAST_HAWB
		WHERE AWB_NO = #awbNo#		
		AND HAWB_NO = #houseAWBNo#
	</select>
	
	<select id="getTarmacCount"  parameterClass="cargo.cms.imprt.bo.CarShpBO" resultClass="java.lang.Integer">	
	<![CDATA[				
	select count(1)
        from (select  tt_cnt, qt_cnt, trf_pcs
              from (select flt_key, flt_date, awb_no, awb_date, sum(case when shp_trf_type = 'TT' or trf_type = 'IF' then 1 else 0 end) tt_cnt,
                        sum(case when shp_trf_type = 'IF' and cntg_flt_key is null then 1 else 0 end) if_bulk_cnt,
                        sum(case when shp_trf_type in ('QT') then 1 else 0 end) qt_cnt, sum(shp_trf_pc) trf_pcs
                    FROM v_ddt_dtl t
                    where FLT_KEY=#fltKey# AND FLT_DATE = TO_DATE(#fltDate#,'DDMONYY')
                                and AWB_DATE =TO_DATE(#awbDate#,'DDMONYY')  AND awb_no = #awbNo#
                    group by flt_key, flt_date, awb_no, awb_date) d
        join imp_car_shp s on d.flt_key = s.flt_key and d.flt_date = s.flt_date and d.awb_no = s.awb_no and d.awb_date = s.awb_date
        where tt_cnt > 0 and if_bulk_cnt = 0 and qt_cnt = 0 and d.trf_pcs = s.manifest_pcs + s.cir_pcs)
        	]]>
	</select>
	
	
	<select id="getForAWBTrf"  parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO" resultClass="java.lang.Integer">
	<![CDATA[				
	select count(1)
        from (select  tt_cnt, qt_cnt, trf_pcs
              from (select flt_key, flt_date, awb_no, awb_date, sum(case when shp_trf_type = 'TT' or trf_type = 'IF'  then 1 else 0 end) tt_cnt,
                        sum(case when shp_trf_type = 'IF' and cntg_flt_key is null then 1 else 0 end) if_bulk_cnt,
                        sum(case when shp_trf_type in ('QT') then 1 else 0 end) qt_cnt, sum(shp_trf_pc) trf_pcs
                    FROM v_ddt_dtl t
                    where FLT_KEY=#flightKey# AND FLT_DATE = TO_DATE(#flightDate#,'DDMONYY')
                                and AWB_DATE =TO_DATE(#awbDate#,'DDMONYY')  AND awb_no = #awbNo#
                    group by flt_key, flt_date, awb_no, awb_date) d
        join imp_car_shp s on d.flt_key = s.flt_key and d.flt_date = s.flt_date and d.awb_no = s.awb_no and d.awb_date = s.awb_date
        where tt_cnt > 0 and if_bulk_cnt = 0 and qt_cnt = 0 and d.trf_pcs = s.manifest_pcs + s.cir_pcs)
        	]]>
	</select>
	
	<select id="checkCargoIrregularity"  parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO" resultClass="java.lang.Integer">
	select count(1) FROM IMP_CAR_SHP  WHERE FLT_KEY = #flightKey# AND FLT_DATE = TO_DATE(#flightDate#,'DDMONYY') AND AWB_NO = #awbNo# AND AWB_DATE = #awbDate# AND CIR_PROC_USER IS NOT NULL
    </select>     
	
	
	<insert id="insuldbrkstrgdamcond" parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO">
	INSERT INTO IMP_AWB_STRG_DAM_COND
		  (AWB_NO, 
		   AWB_DATE, FLT_KEY, FLT_DATE, 
		   DAM_COND, DAM_PCS, DAM_WT, 
		   CR_USER_ID, CR_DATE, LM_USER_ID, 
		   LM_DATE)
	VALUES (#awbNo#,
		   #awbDate#, #flightKey#, #flightDate#,
		   #damConditionCode#, #pieces#, '0',
		   #modUser#, SYSDATE, #modUser#,
		   SYSDATE  
	)	  
	</insert>	
	
	<delete id="deluldbrkstrgdamcond" parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO">
	DELETE FROM IMP_AWB_STRG_DAM_COND
	WHERE 	
			DAM_COND = #damConditionCode# AND
			AWB_NO = UPPER(#awbNo#) AND
			FLT_KEY = UPPER(#flightKey#) AND
			FLT_DATE = TO_DATE(#flightDate#,'DDMONYY') AND
			AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')  
	</delete>	
	
	
	<select id="checkCreateAwbDamCondExists" parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO" resultClass="java.lang.Integer">
	SELECT COUNT(1) FROM IMP_AWB_STRG_DAM_COND
	WHERE 	
			DAM_COND = #damConditionCode# AND
			AWB_NO = UPPER(#awbNo#) AND
			FLT_KEY = UPPER(#flightKey#) AND
			FLT_DATE = TO_DATE(#flightDate#,'DDMONYY') AND
			AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')  
	</select>	
	
	<select id="seluldbrkstrgdamcond"  parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO" 
	 resultClass="cargo.cms.imprt.bo.HHTCreateAwbBO">
	SELECT  mastCodeDtl.code as damConditionCode, 
			mastCodeDtl.code_desc as damConditionDesc, 
			damCond.DAM_PCS as damPcs, 
			damCond.LM_USER_ID as lmUserId,    
			TO_CHAR(damCond.LM_DATE, 'DDMONYY HH24:MI') as lastModDate
	
	FROM MAST_CODE_DTL mastCodeDtl LEFT JOIN IMP_AWB_STRG_DAM_COND damCond 
		 ON 
			 mastCodeDtl.CODE = damCond.DAM_COND AND
			damCond.AWB_NO = UPPER(#awbNo#) AND
			damCond.FLT_KEY = UPPER(#flightKey#) AND
			damCond.FLT_DATE = TO_DATE(#flightDate#,'DDMONYY') AND
			damCond.AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')  
	WHERE   
		   mastCodeDtl.CODE_TYPE = 'DAMAGE_CONDN' 
	ORDER BY mastCodeDtl.code_desc
</select>


	<update id="upduldbrkstrgdamcond" parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO">
	UPDATE IMP_AWB_STRG_DAM_COND
	SET 
		DAM_PCS = DAM_PCS + NVL(#pieces#,0),
		LM_USER_ID = #modUser#,
		LM_DATE = SYSDATE
	WHERE 	
			DAM_COND = #damConditionCode# AND
			AWB_NO = UPPER(#awbNo#) AND
			FLT_KEY = UPPER(#flightKey#) AND
			FLT_DATE = TO_DATE(#flightDate#,'DDMONYY') AND
			AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')  
	</update>	
	
	
	
	<select id="checkCreateAwbHawbExists"  parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO"  resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM HAWB_INVENTORY
        WHERE SEQ_NO = #seqNo#
        AND HAWB_NO = #houseAWBNo#       
	</select>

	
	
	<select id="checkCreateAwbHawbLocExists"  parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO"  resultClass="java.lang.Integer">	
	SELECT COUNT(1) FROM IMP_HAWB_STRG_DTL hawb
		JOIN AWB awb ON awb.AWB_NO = hawb.AWB_NO 
		AND awb.awb_date = hawb.awb_date
		AND awb.awb_type = #awbType# 
		where hawb.FLT_KEY=#flightKey# and 
		hawb.FLT_DATE=TO_DATE(#flightDate#,'DDMONYY') and
		hawb.AWB_NO=#awbNo# and 
		hawb.AWB_DATE=TO_DATE(#awbDate#,'DDMONYY') and 			
		hawb.HAWB_NO = #houseAWBNo#	     
	</select>	

	
	<insert id="insuldbrkstrghousedetailsinv" parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO">
	INSERT INTO HAWB_INVENTORY
		  (SEQ_NO, 
		   HAWB_NO, STRG_PCS, STRG_WT, 		  
		   CR_USER_ID, CR_DATE, LM_USER_ID, 
		   LM_DATE)
	VALUES (#seqNo#,#houseAWBNo#,NVL(#houseAWBPcs#,0),NVL(#houseAWBWt#,0),
		   #modUser#, SYSDATE, #modUser#, SYSDATE  
	)	  
	</insert>
	
	<update id="updhawbinvforcreateawbhht" parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO">
	UPDATE HAWB_INVENTORY
	SET 
		STRG_PCS = STRG_PCS + NVL(#houseAWBPcs#,0),
		STRG_WT = STRG_WT + NVL(#houseAWBWt#,0),
		LM_USER_ID = #modUser#,
		LM_DATE = SYSDATE
	WHERE 	
		 SEQ_NO = #seqNo#
         AND HAWB_NO = #houseAWBNo#  		
	</update>
	
<insert id="insuldbrkstrghousedetails" parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO">
	INSERT INTO IMP_HAWB_STRG_DTL  
	  (FLT_DATE, CARR_CODE, AWB_PFX,
	  FLT_KEY, AWB_NO, AWB_DATE, 
	  HAWB_NO, HAWB_PCS, HAWB_WT, 
	  HAWB_BRKDN_PCS,HAWB_BRKDN_WT,
	  FLT_TYPE, TR_TYPE, TR_STATUS,
	 CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE
	)
	VALUES (to_date(#flightDate#,'DDMONYY'), #carrierCode#, #awbPrefix#,
		 #flightKey#, #awbNo#, to_date(#awbDate#, 'DDMONYY'),
		 #houseAWBNo#, 
		 NVL((select hawb.HAWB_PCS from MAST_HAWB hawb
			JOIN AWB awb ON awb.AWB_NO = hawb.AWB_NO 
			AND awb.awb_date = hawb.awb_date
			AND awb.awb_type = #awbType#    
			where hawb.awb_no=#awbNo# 
			and hawb.awb_date=#awbDate# 
			and hawb.hawb_no=#houseAWBNo#),'0'),
		  NVL((select hawb.HAWB_WT from MAST_HAWB hawb
			JOIN AWB awb ON awb.AWB_NO = hawb.AWB_NO 
			AND awb.awb_date = hawb.awb_date
			AND awb.awb_type = #awbType#    
			where hawb.awb_no=#awbNo# 
			and hawb.awb_date=#awbDate# 
			and hawb.hawb_no=#houseAWBNo#),'0'),
		  NVL(#houseAWBPcs#,0), NVL(#houseAWBWt#,0),
		 'I', 'AS', 'A',    
		#modUser#, SYSDATE, #modUser#, SYSDATE
	)	
	</insert>
	
	<insert id="insuldbrkstrgdamhousedetails" parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO">
	INSERT INTO IMP_HAWB_STRG_DTL  
	  (FLT_DATE, CARR_CODE, AWB_PFX,
	  FLT_KEY, AWB_NO, AWB_DATE, 
	  HAWB_NO, DAM_PCS, DAM_WT, DAM_RMK,FLT_TYPE, 
	  TR_TYPE, TR_STATUS,
	 CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE
	)
	VALUES (to_date(#flightDate#,'DDMONYY'), #carrierCode#, #awbPrefix#,
		 #flightKey#, #awbNo#, to_date(#awbDate#, 'DDMONYY'),
		 #houseAWBNo#, NVL(#houseAWBDamPcs#,0), NVL(#houseAWBDamWt#,0), #remark#,'I',
		 'AS', 'A',    
		#modUser#, SYSDATE, #modUser#, SYSDATE
	)  
	</insert>	
	
	<select id="createAWBHawbStrgDtlExists" parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO" resultClass="java.lang.Integer">		
		SELECT count(1)
			FROM IMP_HAWB_STRG_DTL 
		WHERE 	
			HAWB_NO = #houseAWBNo# AND
			AWB_NO = UPPER(#awbNo#) AND
			FLT_KEY = UPPER(#flightKey#) AND
			FLT_DATE = TO_DATE(#flightDate#,'DDMONYY') AND
			AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')  		
	</select> 
	
	 <update id="upduldbrkstrghousedetails" parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO">	
	UPDATE IMP_HAWB_STRG_DTL 
		SET 
			HAWB_BRKDN_PCS = HAWB_BRKDN_PCS + NVL(#houseAWBPcs#,0), 
			HAWB_BRKDN_WT = HAWB_BRKDN_WT + NVL(#houseAWBWt#,0), 						
			DAM_RMK = #remark#,		
			DAM_USER = #modUser#,	
			LM_USER_ID = #modUser#,
			LM_DATE = SYSDATE
		WHERE 	
			HAWB_NO = #houseAWBNo# AND
			AWB_NO = UPPER(#awbNo#) AND
			FLT_KEY = UPPER(#flightKey#) AND
			FLT_DATE = TO_DATE(#flightDate#,'DDMONYY') AND
			AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
	</update>

    <update id="upduldbrkstrgdamhousedetails" parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO">	
	UPDATE IMP_HAWB_STRG_DTL 
		SET 			
			DAM_PCS = DAM_PCS + NVL(#houseAWBDamPcs#,0),
			DAM_WT = DAM_WT + NVL(#houseAWBDamWt#,0),
			DAM_RMK = #remark#,			
			LM_USER_ID = #modUser#,
			LM_DATE = SYSDATE
		WHERE 	
			HAWB_NO = #houseAWBNo# AND
			AWB_NO = UPPER(#awbNo#) AND
			FLT_KEY = UPPER(#flightKey#) AND
			FLT_DATE = TO_DATE(#flightDate#,'DDMONYY') AND
			AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
	</update>	
	
	<insert id="insuldbrkstrghousedetailsinvDesktop" parameterClass="cargo.cms.imprt.bo.AWBStorDtlBO">
	INSERT INTO HAWB_INVENTORY
		  (SEQ_NO, 
		   HAWB_NO, STRG_PCS, STRG_WT, 		  
		   CR_USER_ID, CR_DATE, LM_USER_ID, 
		   LM_DATE)
	VALUES (#seqNo#,#hseAwbNo#,NVL(#hseAwbPcs#,0),NVL(#hseAwbWt#,0),
		   #userID#, SYSDATE, #userID#, SYSDATE  
	)	  
	</insert>
	
	<update id="updhawbinvforcreateawbdesktop" parameterClass="cargo.cms.imprt.bo.AWBStorDtlBO">
	UPDATE HAWB_INVENTORY
	SET 
		STRG_PCS = STRG_PCS + NVL(#hseAwbPcs#,0),
		STRG_WT = STRG_WT + NVL(#hseAwbWt#,0),
		LM_USER_ID = #userID#,
		LM_DATE = SYSDATE
	WHERE 	
		 SEQ_NO = #seqNo#
         AND HAWB_NO = #hseAwbNo#  		
	</update>
	
	<select id="checkCreateAwbHawbExistsdesktop"  parameterClass="cargo.cms.imprt.bo.AWBStorDtlBO"  resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM HAWB_INVENTORY
        WHERE SEQ_NO = #seqNo#
        AND HAWB_NO = #hseAwbNo#       
	</select>
	
	<!--  Changed for QR -->
	<select id="checkCreateAwbHawbLocExistsdesktop"  parameterClass="cargo.cms.imprt.bo.AWBStorDtlBO"  resultClass="java.lang.Integer">	
	SELECT COUNT(1) FROM IMP_HAWB_STRG_DTL hawb
		JOIN AWB awb ON awb.AWB_NO = hawb.AWB_NO 
		AND awb.awb_date = hawb.awb_date
		where hawb.FLT_KEY=#fltKey# and 
		hawb.FLT_DATE=TO_DATE(#fltDate#,'DDMONYY') and
		hawb.AWB_NO=#awbNo# and 
		hawb.AWB_DATE=TO_DATE(#awbDate#,'DDMONYY') and 		
		hawb.HAWB_NO = #hseAwbNo#	     
	</select>	
	
	 <update id="upduldbrkstrgdamhousedetailsdesktop" parameterClass="cargo.cms.imprt.bo.AWBStorDtlBO">	
	UPDATE IMP_HAWB_STRG_DTL 
		SET 
			HAWB_BRKDN_PCS = HAWB_BRKDN_PCS + NVL(#hseAwbPcs#,0), 
			HAWB_BRKDN_WT = HAWB_BRKDN_WT + NVL(#hseAwbWt#,0), 
			DAM_PCS = '0',
			DAM_WT = '0',
			DAM_RMK = '',			
			LM_USER_ID = #userID#,
			LM_DATE = SYSDATE
		WHERE 	
			HAWB_NO = #hseAwbNo# AND
			AWB_NO = UPPER(#awbNo#) AND
			FLT_KEY = UPPER(#fltKey#) AND
			FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
			AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
	</update>	
	
	
	<insert id="insuldbrkstrgdamhousedetailsDesktop" parameterClass="cargo.cms.imprt.bo.AWBStorDtlBO">
	INSERT INTO IMP_HAWB_STRG_DTL  
	  (FLT_DATE, CARR_CODE, AWB_PFX,
	  FLT_KEY, AWB_NO, AWB_DATE, 
	  HAWB_NO, HAWB_PCS, HAWB_WT, 
	  HAWB_BRKDN_PCS,HAWB_BRKDN_WT,
	  DAM_PCS, DAM_WT, DAM_RMK,FLT_TYPE, 
	  TR_TYPE, TR_STATUS,
	 CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE
	)
	VALUES (to_date(#fltDate#,'DDMONYY'), #carrCode#, #awbPrefix#,
		 #fltKey#, #awbNo#, to_date(#awbDate#, 'DDMONYY'),
		 #hseAwbNo#,
		  NVL((select hawb.HAWB_PCS from MAST_HAWB hawb
			JOIN AWB awb ON awb.AWB_NO = hawb.AWB_NO 
			AND awb.awb_date = hawb.awb_date
			AND awb.awb_type = #awbType#    
			where hawb.awb_no=#awbNo# 
			and hawb.awb_date=#awbDate# 
			and hawb.hawb_no=#hseAwbNo#),'0'),
		  NVL((select hawb.HAWB_WT from MAST_HAWB hawb
			JOIN AWB awb ON awb.AWB_NO = hawb.AWB_NO 
			AND awb.awb_date = hawb.awb_date
			AND awb.awb_type = #awbType#    
			where hawb.awb_no=#awbNo# 
			and hawb.awb_date=#awbDate# 
			and hawb.hawb_no=#hseAwbNo#),'0'),	 
		  NVL(#hseAwbPcs#,0), NVL(#hseAwbWt#,0),
		 '0', '0', '','I',
		 'AS', 'A',    
		#userID#, SYSDATE, #userID#, SYSDATE
	)  
	</insert>	
		
	<delete id="createAWBDeleteHawbStrgDtl" parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO">
		delete from IMP_HAWB_STRG_DTL hawb
		where hawb.FLT_KEY=#flightKey# and 
		hawb.FLT_DATE=TO_DATE(#flightDate#,'DDMONYY') and
		hawb.AWB_NO=#awbNo# and 
		hawb.AWB_DATE=TO_DATE(#awbDate#,'DDMONYY') and	
		exists (select null
				       from   awb
				       where  awb_no = hawb.awb_no
				       and    awb_date = hawb.awb_date
					   and    awb_type = #awbType#)  		
	</delete>	
	
	<select id="getCargoCountForLSPorULD"  parameterClass="java.lang.String"  resultClass="java.lang.Integer">
		select count(1) 
		FROM ASV_INVENTORY
		WHERE LSP_NO = #lspULD#		
		OR ULD_KEY = #lspULD#
	</select>
	
	<select id="sqlAlwdSHPCountonLSP" parameterClass="java.lang.String" resultClass="java.lang.String">
		select rule_value from cmsrules where rule_code=#PARAM#
	</select>
	
	
	<select id="checkCreateAwbInvPCS"  parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO"  resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM awb_inventory
        WHERE flt_key = #flightKey#
        AND flt_date = TO_DATE(#flightDate#,'DDMONYY')
        AND awb_no = #awbNo#
        AND awb_date = TO_DATE(#awbDate#,'DDMONYY')
        AND locn_wt = 0
	</select>
	
	
	<select id="getCreateAwbInvPCS"  parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO"  resultClass="cargo.cms.imprt.bo.HHTCreateAwbBO">
		SELECT seq_no seqNo, locn_pcs locnPcs, locn_wt locnWt
		 FROM AWB_INVENTORY
	     WHERE AWB_NO = #awbNo#
	     AND AWB_DATE = #awbDate#	   
         <!-- AND AWB_TYPE = #awbType# -->
	     AND NVL(FLT_KEY,'*')  = NVL(#flightKey#,'*')
	     AND NVL(FLT_DATE,SYSDATE) = NVL(#flightDate#,SYSDATE)
	     AND NVL(LOC_CODE,'*') = NVL(#locCode#,'*')
	     AND NVL(LSP_NO,'*')   = NVL(#lspNo#,'*')
	     AND NVL(ULD_KEY,'*')  = NVL(#uldKeyDtl#,'*')	
	     AND FLT_TYPE  = 'I' 		  
	     AND SRF_NO IS NULL 
	     AND TRM_NO IS NULL 
	     AND CDIF_NO IS NULL    
    </select>      
   
	 <update id="updateCreateAWBPcsWt" parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO">
		UPDATE awb_inventory SET locn_wt = #locnWt# WHERE seq_no = #seqNo#
	</update>
	
	<update id="updateCreateAWBDamType" parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO">
		UPDATE awb_inventory 
            SET DAM_PCS = NVL(#dmgDclPcs#, 0),
                  DAM_WT =  NVL(#dmgDclWt#,0),  
                  LM_USER_ID = #modUser#,
                  LM_DATE = SYSDATE,
                  DAM_TYPE = #damType# 
                  WHERE seq_no = #seqNo#
	</update>
	
	<select id="getCreateAwbSumRecvPcWt" parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO"  resultClass="cargo.cms.imprt.bo.HHTCreateAwbBO">
		<![CDATA[
			SELECT SUM(LOCN_PCS) receivedPieces, SUM(LOCN_WT) receivedWeight FROM AWB_INVENTORY
			WHERE FLT_KEY = #flightKey# AND FLT_DATE = TO_DATE(#flightDate#,'DDMONYY') 
			AND AWB_NO = #awbNo# AND AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
		]]>
	</select>
	
	<!--  Changed for QR -->
	<select id="getCreateAwbMainfstPCWT"  parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO"  resultClass="cargo.cms.imprt.bo.HHTCreateAwbBO">
		SELECT car.RECD_PCS receivedPieces, car.RECD_WT receivedWeight, 
		car.MANIFEST_PCS manifPieces, car.MANIFEST_WT manifWeight
		FROM IMP_CAR_SHP car
		JOIN AWB awb ON awb.AWB_NO = car.AWB_NO 
		AND awb.awb_date = car.awb_date
		where 		
		car.AWB_NO = #awbNo# and
		car.AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') and			
		car.FLT_DATE = TO_DATE(#flightDate#,'DDMONYY') and
		car.FLT_KEY = #flightKey# and		
		car.FLT_TYPE = 'I' and
		car.CAR_CREATED = 'Y'		
	 </select>	
	 
	 <update id="updatecreateawblsplocation" parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO">
		UPDATE LSP_INVENTORY
		SET 
		<isNotEmpty property="target">
		TARGET = #target#,
		</isNotEmpty>
		EMPTY_FLG = 'N',
		LM_DATE = SYSDATE,
		LM_USER_ID = #modUser#
		WHERE LSP_NO = #lspNo# 	
	</update>
	
	<insert id="sqlLSPMovementLog" parameterClass="map">
		INSERT INTO LSP_MOV(SEQ_NO,	TR_TYPE, MOV_DATE,DOC_LINE_NO,	LSP_NO,
		ORG_LOC_CODE,	DEST_LOC_CODE,	STRG_DATE,
		CR_USER_ID,	CR_DATE,	LM_USER_ID,	LM_DATE,	EVENT_ID)
		values (lsp_mov_seq.nextval,#trType#,sysdate,#docLineNo#,#lspNo#,
		#orgLoc#,#destLoc#,sysdate,
		#crUserId#,sysdate,#lmUserId#,sysdate,#eventId#)
	</insert>

	
	<update id="updatecreateawbuldlocation" parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO">
		UPDATE ULD_INVENTORY
		SET 
		<isNotEmpty property="target">
		TARGET = #target#,
		</isNotEmpty>		
		EMPTY_FLG = 'N',
		ULD_FLOW = 'I',
		LM_DATE = SYSDATE,
		LM_USER_ID = #modUser#
		WHERE ULD_KEY = #uldKeyDtl#				
	</update>	
	
<!--  Changed for QR
	<select id="hhtCreateAWBGetHouseDtl"  parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO" 
	 resultClass="cargo.cms.imprt.bo.HHTCreateAwbBO">
	SELECT 
	  TO_CHAR(FLT_DATE, 'DDMONYY') as flightDate, 
	  FLT_KEY as flightKey, S.AWB_NO as awbNo, TO_CHAR(S.AWB_DATE,'DDMONYY') as awbDate, 
	  S.HAWB_NO as houseAWBNo, M.STRG_PCS as houseAWBPcs, M.STRG_WT as houseAWBWt, 
	  DAM_PCS as houseAWBDamPcs, DAM_WT as houseAWBDamWt, DAM_RMK as remark
	FROM IMP_HAWB_STRG_DTL S
	 join  HAWB_INVENTORY M on S.HAWB_NO = M.HAWB_NO
	WHERE 	
		S.AWB_NO = UPPER(#awbNo#) AND
		S.FLT_KEY = UPPER(#flightKey#) AND
		S.FLT_DATE = TO_DATE(#flightDate#,'DDMONYY') AND
		S.AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') AND  
		M.SEQ_NO=#seqNo#		
</select>	 -->

	<select id="getCreateAwbSumDamPCWt" parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO"  resultClass="cargo.cms.imprt.bo.HHTCreateAwbBO">		
			SELECT SUM(DAM_PCS) dampieces, SUM(DAM_WT) damweight FROM AWB_INVENTORY
			WHERE FLT_KEY = #flightKey# AND FLT_DATE = TO_DATE(#flightDate#,'DDMONYY') 
			AND AWB_NO = #awbNo# AND AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')	
	</select>
	
	
	<select id="selcreateawbdamagedetails" 
	parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO" resultClass="cargo.cms.imprt.bo.HHTCreateAwbBO">
	SELECT 
		   carawb.AWB_NO as awbNo,
		   to_char(carawb.AWB_Date,'DDMONYY') as awbDate,
		   carawb.AWB_PCS as awbPcs,
		   carawb.AWB_WT as awbWt,
		   awb.AWB_TYPE as awbType,
		   carawb.AWB_PRFX as awbPrefix,
		   carshp.CARR_CODE as carrCode,
		   NVL(I.DAM_PCS, 0) as damPcs, 
		   NVL(I.DAM_WT, 0) as damweight, 
       	   i.lsp_no lspNo,
       	   i.uld_key uldKeyDtl,
       	   i.seq_no seqNo,		   
		   decode(carshp.DAM_PROC_USER, null, NVL(I.DAM_PCS, 0),carshp.DAM_DECL_PCS) as dmgDclPcs, 
		   decode(carshp.DAM_PROC_USER, null, NVL(I.DAM_WT, 0),carshp.DAM_DECL_WT) as dmgDclWt,
		   carshp.FLT_KEY as flightKey,
		   carshp.IMG_TRANS_ID as transactionId,
		   to_char(carshp.FLT_DATE,'DDMONYY') as flightDate,
		   carshp.DAM_RMK as remark
			FROM IMP_CAR_AWB carawb
		    JOIN IMP_CAR_SHP carshp  ON carshp.AWB_NO = carawb.AWB_NO
		    AND carshp.AWB_DATE = carawb.AWB_DATE		   
        JOIN AWB awb ON awb.AWB_NO = carshp.AWB_NO AND awb.awb_date = carshp.awb_date
		    JOIN  AWB_INVENTORY I
			   ON carshp.AWB_NO = I.AWB_NO AND
				carshp.AWB_DATE = I.AWB_DATE AND
				carshp.FLT_KEY = I.FLT_KEY AND			
				carshp.FLT_DATE = I.FLT_DATE		
			  AND (NVL(I.DAM_PCS, 0) > 0 or carshp.DAM_PROC_USER is not null) 
	          AND i.awb_no=#awbNo# 	    
            AND i.awb_date = TO_DATE(#awbDate#,'DDMONYY')      			
	      AND i.FLT_KEY=#flightKey#
	      AND i.FLT_DATE=TO_DATE(#flightDate#,'DDMONYY')
	      AND i.seq_no=#seqNo#
	       <isNotEmpty property="uldKeyDtl">
      			AND  i.uld_key=#uldKeyDtl#
      	 	</isNotEmpty> 
      	  	<isNotEmpty property="lspNo">
      			AND  i.lsp_no=#lspNo#
      	 	</isNotEmpty>   			
	</select>	
	
	<select id="getAWBCRAWBStrgDeskDetails"  parameterClass="cargo.cms.imprt.bo.CarShpBO" resultClass="cargo.cms.imprt.bo.CarShpBO">	
		SELECT awb.LOCKED_YN AS awbLockedYN, 
		lok.MISS_YN as awbBlacklistedYN,
		awb.AWB_CLOSED_YN as awbClosedYN,
		awb.CATALOG AS awbCatalog,
		awb.PPK_TYPE awbPPKType
		FROM AWB awb
		LEFT join AWB_LOCK lok ON lok.AWB_NO = awb.AWB_NO and lok.AWB_DATE = awb.AWB_DATE
		WHERE 
		awb.AWB_NO = #awbNo#
		and awb.AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
		and awb.AWB_TYPE = #awbType#
	</select>
	
	<!--  Changed for QR
	<select id="getCRAWBStrgDeskAWBTrf"  parameterClass="cargo.cms.imprt.bo.CarShpBO" resultClass="java.lang.String">
		select DTL.TRF_TYPE
	    FROM DDT_SHP_TRF_DTL DTL
	    JOIN DDT_SHP SHP ON DTL.TR_NO = SHP.TR_NO AND  DTL.SDOC_LINE_NO = SHP.DOC_LINE_NO
	    JOIN DDT_MSG MSG ON SHP.TR_NO=MSG.TR_NO AND MSG.FLT_KEY=#fltKey# AND MSG.FLT_DATE = TO_DATE(#fltDate#,'DDMONYY')
	    where DTL.TRF_TYPE = 'TT' AND shp.awb_no = #awbNo#			
	</select> -->
	
	<!--  Changed for QR
	<select id="checkCRAWBStrgDeskCargoIrregularity"  parameterClass="cargo.cms.imprt.bo.CarShpBO" resultClass="java.lang.Integer">
	<![CDATA[
	select count(1)
    FROM DDT_SHP_TRF_DTL DTL
    JOIN DDT_SHP SHP ON DTL.TR_NO = SHP.TR_NO AND  DTL.SDOC_LINE_NO = SHP.DOC_LINE_NO
    JOIN DDT_MSG MSG ON SHP.TR_NO=MSG.TR_NO AND MSG.FLT_KEY=#fltKey# AND MSG.FLT_DATE = TO_DATE(#fltDate#,'DDMONYY')
    where DTL.TRF_TYPE = 'TT' AND shp.awb_no IN (    
    select  c.awb_no 
	from Imp_CAR_SHP c
	where (c.MANIFEST_PCS != c.RECD_PCS or c.MANIFEST_WT != c.RECD_WT) AND c.CIR_PROC_USER IS NULL
	AND c.Flt_KEY = #fltKey# and c.FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') 
	AND not exists (select null from IMP_CAR_AWB where awb_no = c.awb_no and awb_date = c.awb_date and catalog = 'TA'))	
    ]]>
    </select>     -->  
    
     <select id="checkCRAWBStrgDeskAWBForUnknown"  parameterClass="cargo.cms.imprt.bo.CarShpBO" resultClass="java.lang.Integer">	
		SELECT COUNT(1) FROM IMP_CAR_SHP 
		WHERE 
		AWB_NO = #awbNo# AND
		AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') AND	
		FLT_KEY=#fltKey# AND FLT_DATE=TO_DATE(#fltDate#,'DDMONYY')	AND
		(FFM_FLG = 'Y' OR (CAR_CREATED = 'N' AND FFM_FLG='N'))						
	</select> 
	
	
	 <select id="checkAWBForUnknown"  parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO" resultClass="java.lang.Integer">			
		SELECT COUNT(1) FROM IMP_CAR_SHP 
		WHERE 
		AWB_NO = #awbNo# AND
		AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') AND	
		FLT_KEY=#flightKey# AND FLT_DATE=TO_DATE(#flightDate#,'DDMONYY')	AND
		(FFM_FLG = 'Y' OR (CAR_CREATED = 'N' AND FFM_FLG='N'))								
	</select>
	
	
	<select id="checkCRAWBStrgDeskUldCheckedIn" parameterClass="cargo.cms.imprt.bo.CarShpBO" 
		resultClass="java.lang.Integer">			
			SELECT COUNT(1)  
			FROM IMP_RAMP_CHK_DTL
			WHERE CHKIN_YN = 'Y' AND FLT_DATE=TO_DATE(#fltDate#,'DDMONYY') and FLT_KEY = #fltKey# and ULD_KEY=#uldKey#
	</select>
	
	<select id="checkCRAWBStrgDeskBreakDownCompleted" parameterClass="cargo.cms.imprt.bo.CarShpBO" 
		resultClass="java.lang.Integer">
		SELECT 
			COUNT(1) 
		FROM 
			IMP_RAMP_CHK_DTL 
		WHERE 
			BRKDN_COMPL_YN = 'Y' AND FLT_DATE=TO_DATE(#fltDate#,'DDMONYY') and FLT_KEY = #fltKey# and ULD_KEY=#uldKey#
	</select>
	
	<select id="getCRAWBStrgDeskULDHandlingMode" parameterClass="cargo.cms.imprt.bo.CarShpBO" 
		resultClass="java.lang.String">
		SELECT 
		HANDLING_MODE
		FROM 
			IMP_ULD_LIST 
		WHERE 
			ULD_KEY=#uldKey# AND
			FLT_KEY=#fltKey# AND
			FLT_DATE=TO_DATE(#fltDate#,'DDMONYY')
	</select>
	
	<select id="getCRAWBStrgDeskAWBType"  parameterClass="cargo.cms.imprt.bo.CarShpBO" resultClass="java.lang.String">
		SELECT AWB_TYPE 		
		FROM AWB 
		WHERE 
		AWB_NO = #awbNo#
		and AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')		
	</select>

	<select id="getExportAWBCnt"  parameterClass="cargo.cms.imprt.bo.CarShpBO" resultClass="java.lang.String">
		SELECT count(*) FROM AWB where AWB_NO = #awbNo# and AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') and awb_type = 'E' 	
	</select>
	
	<select id="getExportAWBCntHHT"  parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO" resultClass="java.lang.String">
		SELECT count(*) FROM AWB where AWB_NO = #awbNo# and AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') and awb_type = 'E' 	
	</select>
	
	
	 <select id="getFltOrig"  parameterClass="map" resultClass="java.lang.String">
		select ORIG  from FLT_OPR WHERE  
			FLT_KEY = #fltKey# AND
			FLT_TYPE = 'A' AND
			TO_CHAR(SCH_DATE,'DDMONYY') = #fltDate#				
   	</select>  	   	
   	
    <select id="sqlCheckShcLockValue"  parameterClass="map" resultClass="java.lang.Integer">
		select count(1) from AWB 
		where AWB_NO = #awbNo#
		  and AWB_DATE = #awbDate#
		  and (NVL(SHCLOCK_IND,'N') = 'Y'  	
		  or NVL(FINALLOCK_IND,'N') = 'Y')
   	</select>  	
   
   	 
   	 <update id="updateAWBSHCLockInd"  parameterClass="map">
		update AWB
		set SHCLOCK_IND = 'Y'
		where AWB_NO = #awbNo#
		and AWB_DATE = #awbDate#
		and (AWB_TYPE = 'I' OR AWB_TYPE = 'T')
   	 </update>   	 
   	
   	 <update id="sqlUpdateShcLockUldCsd"  parameterClass="map" >
   	 <isNotEmpty property="uldKey">
   	 UPDATE ULD_INVENTORY 
   	 SET LOCK_RQS = 'Y'
   	 WHERE ULD_KEY= #uldKey#
   	 </isNotEmpty>
   	 <isNotEmpty property="lspNo">
   	 UPDATE LSP_INVENTORY 
   	 SET LOCK_RQS = 'Y'
   	 WHERE LSP_NO= #lspNo#
   	 </isNotEmpty>
   	</update> 
   	
   	<select id="getAWBInvSeqNo"  parameterClass="map" resultClass="java.lang.String">	
		SELECT INV.SEQ_NO FROM AWB_INVENTORY INV
	    WHERE INV.AWB_NO = #awbNo# AND INV.AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
	    AND INV.LOC_CODE = 	#locCode#  and rownum = 1 
	</select>
	
	<select id="checkAWBExistsInInv"  parameterClass="map" resultClass="java.lang.Integer">	
		SELECT count(1) FROM AWB_INVENTORY INV
	    WHERE INV.AWB_NO = #awbNo# AND INV.AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
	    AND INV.LOC_CODE = 	#locCode#	  
	</select>
   	
   	<select id="getAWBTrfType"  parameterClass="map" resultClass="java.lang.String">	
		select SHP_TRF_TYPE
                  from v_ddt_dtl
                  where awb_no = #awbNo#
                  and awb_date = TO_DATE(#awbDate#,'DDMONYY')
                  and flt_key = #fltKey#
                  and flt_date = TO_DATE(#fltDate#,'DDMONYY')
                  and SHP_TRF_TYPE = 'QT' 
                  and rownum = 1
   	
		<!-- select DTL.TRF_TYPE
	    FROM DDT_SHP_TRF_DTL DTL
	    JOIN DDT_SHP SHP ON DTL.TR_NO = SHP.TR_NO AND DTL.SDOC_LINE_NO = SHP.DOC_LINE_NO
	    JOIN DDT_MSG MSG ON SHP.TR_NO=MSG.TR_NO AND MSG.FLT_KEY=#fltKey# AND MSG.FLT_DATE = TO_DATE(#fltDate#,'DDMONYY')
	    where SHP.AWB_NO = #awbNo# AND SHP.AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')	 -->		
	</select>
	
	
	<select id="checkTTTrfTypeForAWB"  parameterClass="map" resultClass="java.lang.Integer">	
		select COUNT(1)
                  from v_ddt_dtl
                  where awb_no = #awbNo#
                  and awb_date = TO_DATE(#awbDate#,'DDMONYY')
                  and flt_key = #fltKey#
                  and flt_date = TO_DATE(#fltDate#,'DDMONYY')
                  and SHP_TRF_TYPE = 'TT'                   
	</select>
	
	<select id="checkIFTrfTypeForAWB"  parameterClass="map" resultClass="java.lang.Integer">	
		select COUNT(1)
                  from v_ddt_dtl
                  where awb_no = #awbNo#
                  and awb_date = TO_DATE(#awbDate#,'DDMONYY')
                  and flt_key = #fltKey#
                  and flt_date = TO_DATE(#fltDate#,'DDMONYY')
                  and SHP_TRF_TYPE = 'IF'                   
	</select>
	
	<select id="checkQTTrfTypeForAWB"  parameterClass="map" resultClass="java.lang.Integer">	
		select COUNT(1)
                  from v_ddt_dtl
                  where awb_no = #awbNo#
                  and awb_date = TO_DATE(#awbDate#,'DDMONYY')
                  and flt_key = #fltKey#
                  and flt_date = TO_DATE(#fltDate#,'DDMONYY')
                  and SHP_TRF_TYPE = 'QT'                   
	</select>
	
	
	<select id="getCntgFltDetailsForQTShip"  parameterClass="map" resultClass="cargo.cms.imprt.bo.CarShpBO">	
		select SHP_CNTG_FLT_KEY shpCntgFltKey, 
		to_char(SHP_CNTG_FLT_DATE,'DDMONYY') as shpCntgFltDate
		from v_ddt_dtl
		where awb_no = #awbNo#
        and awb_date = TO_DATE(#awbDate#,'DDMONYY')
        and flt_key = #fltKey#
        and flt_date = TO_DATE(#fltDate#,'DDMONYY')
        and SHP_TRF_TYPE = 'QT'    
	</select>
	
	<select id="getJoNumberFromExpBuildUp" parameterClass="map" resultClass="java.lang.String">	
		SELECT JO.JO_NO
		FROM EXP_BU_JO JO
		JOIN EXP_BU_JO_DTL DTL ON JO.JO_NO = DTL.JO_NO
		WHERE 
		JO.FLT_KEY = #shpCntgFltKey#
		AND JO.FLT_DATE = TO_DATE(#shpCntgFltDate#,'DDMONYY')
		AND DTL.AWB_NO = #awbNo#
		AND DTL.AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
	</select>
	
	<select id="getJoNumberDTLExpBuildUp" parameterClass="map" resultClass="java.util.HashMap">	
		SELECT JO.JO_NO joNo, to_char(nvl(AWB_JO_PC,0) - nvl(locn_jo_pcs,0)) reqPcs,
                to_char(nvl(AWB_JO_WT,0) - nvl(locn_jo_wt,0)) reqWt, to_char(nvl(locn_jo_pcs,0)) locnJoPcs,  to_char(nvl(locn_jo_wt,0)) locnJoWt
		FROM EXP_BU_JO JO
		JOIN EXP_BU_JO_DTL DTL ON JO.JO_NO = DTL.JO_NO
		left join (select JO_NO , AWB_NO, AWB_DATE, nvl(sum(LOCN_JO_PC),0) locn_jo_pcs, nvl(sum(LOCN_JO_Wt),0) locn_jo_wt
                      from EXP_BU_JO_LOCN group by JO_NO , AWB_NO, AWB_DATE) locn  
                      on JO.JO_NO = locn.JO_NO and locn.AWB_NO = DTL.AWB_NO and locn.AWB_DATE = DTL.AWB_DATE
		WHERE 
		JO.FLT_KEY = #shpCntgFltKey#
		AND JO.FLT_DATE = TO_DATE(#shpCntgFltDate#,'DDMONYY')
		AND DTL.AWB_NO = #awbNo#
		AND DTL.AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
		AND nvl(AWB_JO_PC,0) - nvl(locn_jo_pcs,0) > 0
	</select>	
	
	<select id="checkBUJOLocnExistsULDLSP"  parameterClass="map" resultClass="java.lang.Integer">	
		select COUNT(1) from EXP_BU_JO_LOCN where seq_no = #seqNo#and JO_NO =  #joNo#              
	</select>
	
	<update id="updateExpBuildupJoUldBreakdown"  parameterClass="map">   	
				update EXP_BU_JO_DTL
				set AWB_JO_PC = AWB_JO_PC + #locnJoPc#,
				AWB_JO_WT = AWB_JO_WT + #locnJoWt#
   				where AWB_NO = #awbNo#
                and AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')               
                and JO_NO =  #joNo#        
   	</update> 
	
	<update id="updateExpBuildupJoLocnUldBreakdown"  parameterClass="map">   	
				update EXP_BU_JO_LOCN
				set LOCN_JO_PC = LOCN_JO_PC + #locnJoPc#,
				LOCN_JO_WT = LOCN_JO_WT + #locnJoWt#
   				where AWB_NO = #awbNo#
                and AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
                and LOC_CODE = #locCode#
                <isNotEmpty property="uldKey">
                	and ULD_KEY = #uldKey#
                </isNotEmpty>
                <isNotEmpty property="lsp">
                	and LSP =  #lsp#
                </isNotEmpty>
                and JO_NO =  #joNo#        
   	</update> 
	
	
	<insert id="insertExpBuildupJoLocnUldBreakdown" parameterClass="map">
		INSERT INTO EXP_BU_JO_LOCN(LM_USER_ID,CR_DATE,CR_USER_ID,RET_IND,SEQ_NO,AWB_DATE,LM_DATE,JO_NO,
		AWB_NO,LOCN_JO_WT,LOCN_JO_PC,ULD_KEY,LSP,LOC_CODE,BU_YN)
		values (#lmUserId#,SYSDATE,#crUserId#,#retInd#,#seqNo#,to_date(#awbDate#,'DDMONYY'),SYSDATE,#joNo#,
		#awbNo#,#locnJoWt#,#locnJoPc#,#uldKey#,#lsp#,#locCode#,#buYN#)
	</insert>  	
	
	<select id="getRecdPcsTrmPcsImpCarShp" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">			
	  SELECT  RECD_PCS, TRM_PCS
	  FROM IMP_CAR_SHP		
	  WHERE AWB_NO	  =   #awbNo#  AND
		   	AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') AND
		    FLT_KEY = UPPER(#fltKey#) AND
		    FLT_DATE = TO_DATE(#fltDate#,'DDMONYY')	
	</select>
	
	<select id="getTRMHdDtl"  parameterClass="java.util.HashMap" resultClass="cargo.cms.imprt.bo.TrmBO">	
	  SELECT  
      h.TRM_NO AS trmNo, 
      h.TRANSF_CARR AS transferCarrier, 
	  h.RECD_CARR AS recevCarrier, 
      d.PCS AS pcs,
      d.WT AS wt
      FROM IMP_TRM_HD h , IMP_TRM_DTL d
      WHERE d.TRM_NO = h.TRM_NO AND h.Status  = 'ISSUED' 
      AND d.AWB_NO = #awbNo#
      AND d.FLT_KEY = #fltKey#
      AND d.flt_date = TO_DATE(#fltDate#,'DDMONYY')
      AND exists (select null
                  from v_ddt_dtl
                  where awb_no = d.awb_no
                  and flt_key = d.flt_key
                  and flt_date = d.flt_date
                  and SHP_TRF_TYPE = 'QT')
		Order by d.pcs
	</select>
	
	<update id="updateImpCarShpTrmPcs" parameterClass="java.util.HashMap">
	UPDATE IMP_CAR_SHP
	SET     TRM_PCS = TRM_PCS + #pcs#,
			LM_USER_ID =  #userID#, 
			LM_DATE   =  sysdate
	WHERE  AWB_NO	  =   #awbNo#  AND
		   AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') AND
		   FLT_KEY = UPPER(#fltKey#) AND
		   FLT_DATE = TO_DATE(#fltDate#,'DDMONYY')		
	</update>	

 <!-- ##################### Inbound ULD Breakdown start  : Santosh : End    ###############################################-->
 
 <!-- Issue SRF Backend :: Anup :: End -->
 
  <parameterMap id="cdifFltMap" class="map" >
		<parameter property="p_cdif_no" jdbcType="VARCHAR" javaType="java.lang.String"	mode="IN"/>
		<parameter property="V_FLT_KEY" jdbcType="VARCHAR" javaType="java.lang.String"	mode="OUT"/>
		<parameter property="V_FLT_DATE" jdbcType="VARCHAR" javaType="java.lang.String"	mode="OUT"/>
		<parameter property="V_CARR" jdbcType="VARCHAR" javaType="java.lang.String"	mode="OUT"/>	
	</parameterMap>
	<procedure id="imp_prc_cdif_flt" parameterMap="cdifFltMap" >
		{ call PRC_GET_CDIF_FLT(?,?,?,?)}
	</procedure>
 
	<select id="bkg_record_by_truck_no" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO" 
		resultClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
		SELECT 
			DISTINCT B.AWB_NO as awbNo, TO_CHAR(B.AWB_DATE, 'DDMONYY') as awbDate, FLT_KEY as fltKey, TO_CHAR(FLT_DATE, 'DDMONYY') as fltDate, 
      		B.AUTH_REP_NAME as authPerson, B.AUTH_REP_ID as authPersonId, A.COLL_PERSON_NAME as collectedBy, A.COLL_PERSON_ID as hkId, 
      		A.BOOKING_NO as bookingNo
		FROM 
			IMP_BOOKING A, IMP_BOOKING_DTL B 
		WHERE 
			B.BOOKING_NO=A.BOOKING_NO AND A.SRF_ISSUED='N' AND AWB_NO=#awbNo# AND AWB_DATE=TO_DATE(#awbDate#, 'DDMONYY') 
			<isEmpty prepend="AND" property="bookingNo">
				(TRUCK1=#truckNo# OR TRUCK2=#truckNo# OR TRUCK3=#truckNo# OR TRUCK4=#truckNo# OR TRUCK5=#truckNo# OR TRUCK6=#truckNo#) AND 
        		TO_DATE(BKG_SLOT_DATE || ' ' || TRIM(TO_CHAR(NVL(BKG_SLOT_FROM,0),'0000')), 'DD-MON-YY HH24MI') 
        		BETWEEN TO_DATE(#bkgFromTime#, 'DDMONYY HH24MI') AND TO_DATE(#bkgToTime#, 'DDMONYY HH24MI')
			</isEmpty>
			<isNotEmpty prepend="AND" property="bookingNo">
				A.BOOKING_NO=#bookingNo#
			</isNotEmpty>
	</select>
	<select id="cdif_record_by_truck_no" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO" 
		resultClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
		<![CDATA[
		SELECT 
			DISTINCT(A.AWB_NO) as awbNo, B.AUTH_REP_NAME as authPerson, B.COLL_NAME as collectedBy, 
			B.COLL_HKID as hkId, B.AUTH_REP_ID as authPersonId, TO_CHAR(A.AWB_DATE, 'DDMONYY') as awbDate, A.CDIF_NO as fltKey, 
      		TO_CHAR(A.CDIF_DATE, 'DDMONYY') as fltDate 
		FROM 
			IMP_CDIF A, IMP_SRF B WHERE B.SRF_NO=A.SRF_NO AND 
			A.FOLLOW_ON_TRUCK=#truckNo# AND A.CR_DATE>=TO_DATE(#cdifFromTime#, 'DDMONYY HH24MI')
			AND A.CDIF_SRF_NO IS NULL
		]]>
	</select>
	
	<select id="cargo_record_by_rtn_no" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO" 
		resultClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">		
		SELECT 
			  DISTINCT(A.AWB_NO) as awbNo, 
		      A.COLL_NAME as authPerson, 
		      A.AGENT_NAME as authPerson, 
		      A.COLL_NAME as collectedBy, 
			  A.COLL_HKID as hkId, 
		      A.COLL_HKID as authPersonId, 
		      TO_CHAR(A.AWB_DATE, 'DDMONYY') as awbDate, 
		      A.RTN_NO as fltKey, 
		      TO_CHAR(A.CR_DATE, 'DDMONYY') as fltDate 
		FROM 
			  EXP_RTN_HD A	
		WHERE
		      A.RTN_NO = #listPrintRTNNo#
	</select>
	
	<select id="find_trip_id_by_truck_no" parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT 
			TRIP_ID 
		FROM 
			TRUCK_TRIP 
		WHERE 
			TRUCK_NO=#truckNo# AND CLOSED='N'
	</select>
	<insert id="insert_truck_trip" parameterClass="java.util.HashMap">
		INSERT INTO 
			TRUCK_TRIP (TRIP_ID, TRUCK_NO, PURPOSE, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE) 
		VALUES 
			(TRUCK_TRIP_SEQ.nextval, #truckNo#, 
			#purpose#, #userid#, SYSDATE, #userid#, SYSDATE)
	</insert>
	<insert id="insert_imp_truck_srf" parameterClass="java.util.HashMap">
		INSERT INTO 
			IMP_TRUCK_SRF (TRIP_ID, SRF_NO, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE) 
		VALUES
			(#tripId#, #srfNo#, #userid#, SYSDATE, #userid#, SYSDATE)
	</insert>
	<update id="issue_srf_update_imp_bkg" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
		<![CDATA[
		UPDATE 
			IMP_BOOKING 
		SET 
			SRF_ISSUED=#srfIssued# 
		WHERE 
			BOOKING_NO=#bookingNo#
		]]>
	</update>
	<update id="issue_srf_update_imp_bkg_dtl" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
		<![CDATA[
		UPDATE 
			IMP_BOOKING_DTL 
		SET 
			ERR_RMK=#errorRemarks#, SRF_NO=#srfNo# 
		WHERE 
			AWB_NO=#awbNo# AND BOOKING_NO=#bookingNo#
		]]>
	</update>
	<select id="get_app_agt_for_backend" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT 
			APPNTD_AGENT 
		FROM 
			IMP_CAR_AWB 
		WHERE 
			AWB_NO = #awbNo# AND TO_CHAR(AWB_DATE, 'DDMONYY') = #awbDate#
	</select>
	
	<!--  Changed for QR -->
	<select id="srf_move_job_order_by_trk_no" parameterClass="cargo.cms.imprt.bo.SRFMoveJobOrderBO" 
		resultClass="cargo.cms.imprt.bo.SRFMoveJobOrderBO">
		<![CDATA[
		SELECT 
			C.AWB_NO as awbNo, D.CODE as locCode, C.LSP_NO as lspNo, C.ULD_KEY as uldKey, A.TARGET as target, 
			TO_CHAR(C.AWB_DATE, 'DDMONYY') as awbDate, C.LOCN_PCS as pcs, C.LOCN_WT as wt, E.WH_TYPE as whType, 
			F.CC_CODE as ccCode, TO_CHAR(C.AWB_DATE, 'DDMONYY') as awbDate 
		FROM 
			IMP_BOOKING A, IMP_BOOKING_DTL B, AWB_INVENTORY C 
			LEFT JOIN V_CST_IMP_CC_CODE F ON F.FLT_KEY=C.FLT_KEY AND F.FLT_DATE=C.FLT_DATE AND F.AWB_NO=C.AWB_NO AND NVL(F.HAWB_NO, '000000000000000000') =  '000000000000000000', 
			MAST_WH_LOC D, MAST_WH_GROUP E 
		WHERE A.STATUS not in ('CANCEL') 
			and A.BOOKING_NO=B.BOOKING_NO 
			AND B.AWB_NO=C.AWB_NO AND B.AWB_Date=C.AWB_Date AND B.flt_key=C.flt_key AND B.flt_Date=C.flt_Date 
			AND C.LOC_CODE=D.CODE AND D.WH_GROUP=E.WH_GROUP 
			AND (TRUCK1=#truckNo# OR TRUCK2=#truckNo# OR TRUCK3=#truckNo# OR TRUCK4=#truckNo# OR 
			TRUCK5=#truckNo# OR TRUCK6=#truckNo#) AND TO_DATE((BKG_SLOT_DATE || ' ' || SUBSTR(TRIM(TO_CHAR
			(NVL(BKG_SLOT_FROM,0),'0000')),0,2) || SUBSTR(TRIM(TO_CHAR(NVL(BKG_SLOT_FROM,0),'0000')),3,4)), 
			'DD-MON-YY HH24MI')<TO_DATE(#bkgSlot#, 'DDMONYY HH24MI')
		]]>
	</select>
	
	<!--  Changed for QR -->
	<select id="srf_move_job_order_by_bkg_no" parameterClass="cargo.cms.imprt.bo.SRFMoveJobOrderBO" 
		resultClass="cargo.cms.imprt.bo.SRFMoveJobOrderBO">
		SELECT 
			C.AWB_NO as awbNo, D.CODE as locCode, C.LSP_NO as lspNo, C.ULD_KEY as uldKey, A.DEL_ZONE as target, 
			TO_CHAR(C.AWB_DATE, 'DDMONYY') as awbDate, C.LOCN_PCS as pcs, C.LOCN_WT as wt, E.WH_TYPE as whType, 
			F.CC_CODE as ccCode, TO_CHAR(C.AWB_DATE, 'DDMONYY') as awbDate 
		FROM 
			IMP_BOOKING A, IMP_BOOKING_DTL B, AWB_INVENTORY C 
			LEFT JOIN V_CST_IMP_CC_CODE F ON F.FLT_KEY=C.FLT_KEY AND F.FLT_DATE=C.FLT_DATE AND F.AWB_NO=C.AWB_NO AND NVL(F.HAWB_NO, '000000000000000000') =  '000000000000000000', 
			MAST_WH_LOC D, MAST_WH_GROUP E  
		WHERE A.STATUS not in ('CANCEL') and A.BOOKING_NO=B.BOOKING_NO 
			AND B.AWB_NO=C.AWB_NO AND B.AWB_Date=C.AWB_Date AND B.flt_key=C.flt_key AND B.flt_Date=C.flt_Date
			AND C.LOC_CODE=D.CODE AND D.WH_GROUP=E.WH_GROUP 
			AND A.BOOKING_NO=#bookingNo#
	</select>
	
	<!--  Changed for QR -->
	<select id="srfMoveJobOrderByTruckNo" parameterClass="cargo.cms.imprt.bo.SRFMoveJobOrderBO" resultClass="cargo.cms.imprt.bo.SRFMoveJobOrderBO">
		SELECT 
			B.AWB_NO as awbNo, C.CODE as locCode, B.LSP_NO as lspNo, B.ULD_KEY as uldKey, TO_CHAR(B.AWB_DATE, 'DDMONYY') as awbDate, 
			B.LOCN_PCS as pcs, B.LOCN_WT as wt, A.SRF_NO as refNo, D.WH_TYPE as whType, F.CC_CODE as ccCode, TO_CHAR(B.AWB_DATE, 'DDMONYY') as awbDate 
		FROM 
			IMP_SRF A, AWB_INVENTORY B 
			LEFT JOIN V_CST_IMP_CC_CODE F ON F.FLT_KEY=B.FLT_KEY AND F.FLT_DATE=B.FLT_DATE AND 
      		F.AWB_NO=B.AWB_NO AND NVL(F.HAWB_NO, '000000000000000000') =  '000000000000000000', MAST_WH_LOC C, MAST_WH_GROUP D 
		WHERE 
			A.AWB_NO = B.AWB_NO AND A.AWB_DATE = B.AWB_DATE AND A.srf_no = B.srf_no AND B.LOC_CODE = C.CODE AND C.WH_GROUP = D.WH_GROUP 
			AND A.TRUCK_NO = #truckNo#
	</select>
	<select id="findFuncNameForRtrvMoveOrder" parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT CODE FROM MAST_CODE_DTL WHERE CODE_TYPE='RTRV_MONITORING' AND CODE_DESC=#param#
	</select>
	<insert id="ins_move_job_order" parameterClass="cargo.cms.imprt.bo.SRFMoveJobOrderBO">
		INSERT INTO 
			RTRV_MOVE_ORDER (FUNC,REF_NO,AWB_NO,CURR_LOCN,LSP,ULD,PC,WT,TARGET,STATUS,CR_USER_ID,
			CR_DATE,LM_USER_ID,LM_DATE,TYPE,INV_TYPE,AWB_DATE) 
		VALUES 
			(#function#, #refNo#, #awbNo#, #locCode#, #lspNo#, #uldKey#, #pcs#, #wt#, #target#, #status#, 
			#crUserid#, SYSDATE, #lmuserid#, SYSDATE, #type#, #invType#, TO_DATE(#awbDate#, 'DDMONYY'))
	</insert>
	
	<!--  Changed for QR -->
	<select id="find_bkg_record" parameterClass="java.lang.String" resultClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
		<![CDATA[
		SELECT 
			BOOKING_NO as bookingNo 
		FROM 
			IMP_BOOKING 
		WHERE STATUS not in ('CANCEL') and
			NOT_READY='N' AND BKG_SLOT_DATE > SYSDATE 
			AND TO_DATE(TO_CHAR(BKG_SLOT_DATE,'DDMONYY') ||' '||TRIM(TO_CHAR(NVL(BKG_SLOT_FROM,0),'0000')), 'DDMONYY HH24MI') <= TO_DATE(#bkgCutOffTime#, 'DDMONYY HH24MI')
		]]>
	</select>
	
	<!--  Changed for QR -->
	<select id="find_awb_dtls_from_bkg" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO" resultClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
		SELECT 
			A.AWB_NO as awbNo, A.AWB_DATE as awbDate, F.CC_CODE as ccCode, 
			C.RECD_PCS as recdPcs, C.MANIFEST_PCS as manifestPcs, C.CIR_PCS as cirPcs 
		FROM IMP_BOOKING_DTL A
			LEFT JOIN V_CST_IMP_CC_CODE F ON F.FLT_KEY=A.FLT_KEY AND F.FLT_DATE=A.FLT_DATE AND F.AWB_NO=A.AWB_NO AND NVL(F.HAWB_NO, '000000000000000000') =  '000000000000000000'
      		,IMP_CAR_AWB B, IMP_CAR_SHP C 
		WHERE C.AWB_NO=A.AWB_NO AND B.AWB_NO=A.AWB_NO AND B.AWB_DATE=A.AWB_DATE AND B.AWB_DATE=A.AWB_DATE AND A.FLT_KEY=C.FLT_KEY AND A.FLT_DATE=C.FLT_DATE 
			and A.BOOKING_NO=#bookingNo#
	</select>
	<select id="find_issue_srf_by_cc_code" parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT IMP_SRF_ISS_YN FROM MAST_CONSTRAINT_CODE WHERE CODE=#ccCode#
	</select>
	<update id="upd_imp_bkg_not_ready" parameterClass="java.lang.String">
		UPDATE
			IMP_BOOKING 
		SET 
			NOT_READY = 'Y' 
		WHERE 
			BOOKING_NO = #bookingNo#
	</update>
	
	<!--  Changed for QR -->
	<update id="upd_cdif_srf_in_imp_cdif" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
		UPDATE
			IMP_CDIF 
		SET 
			CDIF_SRF_NO = #srfNo#, ERR_RMK = #errorRemarks# 
		WHERE 
			AWB_NO=#awbNo# and CDIF_NO = #cdifNo#
	</update>
	<select id="findSRFGeneratedForAWB" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO" resultClass="java.lang.String">
		SELECT 
			DISTINCT(SRF_NO) 
		FROM 
			AWB_INVENTORY 
		WHERE 
			AWB_NO=#awbNo# AND AWB_DATE=TO_DATE(#awbDate#, 'DDMONYY') AND FLT_KEY=#fltKey# AND FLT_DATE=TO_DATE(#fltDate#, 'DDMONYY')
	</select>
	<update id="associateTruckWithSRFNo" parameterClass="java.util.HashMap">
		UPDATE IMP_SRF SET TRUCK_NO=#truckNo# WHERE SRF_NO=#srfNo#
	</update>
	<select id="generateSRFForTruck" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO" resultClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
		SELECT 
			DISTINCT(B.AWB_NO) as awbNo, A.AUTH_REP_NAME as authPersonId, A.AUTH_REP_ID as authPerson, 
			A.AUTH_REP_NAME as collectedBy, A.AUTH_REP_ID as hkId 
		FROM 
			TRUCK_MANIFEST A, TRUCK_MANIFEST_DTL B 
		WHERE 
			B.TRUCK_MANF_NO=A.TRUCK_MANF_NO AND A.FINAL_TRUCK_MANF_IND='Y' AND B.AWB_NO=#awbNo# AND B.AWB_DATE=TO_DATE(#awbDate#, 'DDMONYY') 
			AND B.FLT_KEY=#fltKey# AND B.FLT_DATE=TO_DATE(#fltDate#, 'DDMONYY') AND (A.TRUCK1=#truckNo# OR A.TRUCK2=#truckNo# 
			OR A.TRUCK3=#truckNo# OR A.TRUCK4=#truckNo# OR A.TRUCK5=#truckNo#)
	</select>
	<select id="findErrDescForErrCode" parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT ERR_DESC FROM ERR_MSG WHERE ERR_CODE=#errCode#
	</select>
	<select id="findAwbByBookingRecord" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO" 
		resultClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
		SELECT 
			DISTINCT B.AWB_NO as awbNo, TO_CHAR(B.AWB_DATE, 'DDMONYY') as awbDate 
		FROM 
			IMP_BOOKING A, IMP_BOOKING_DTL B 
		WHERE 
			B.BOOKING_NO=A.BOOKING_NO AND A.SRF_ISSUED='N' 
			<isEmpty prepend="AND" property="bookingNo">
				(TRUCK1=#truckNo# OR TRUCK2=#truckNo# OR TRUCK3=#truckNo# OR TRUCK4=#truckNo# OR TRUCK5=#truckNo# OR TRUCK6=#truckNo#) AND 
        		TO_DATE(BKG_SLOT_DATE || ' ' || TRIM(TO_CHAR(NVL(BKG_SLOT_FROM,0),'0000')), 'DD-MON-YY HH24MI') 
        		BETWEEN TO_DATE(#bkgFromTime#, 'DDMONYY HH24MI') AND TO_DATE(#bkgToTime#, 'DDMONYY HH24MI')
			</isEmpty>
			<isNotEmpty prepend="AND" property="bookingNo">
				A.BOOKING_NO=#bookingNo#
			</isNotEmpty>
	</select>
	<select id="findAwbInCdifByTruckNo" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO" 
		resultClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
		<![CDATA[
		SELECT 
			DISTINCT(A.AWB_NO) as awbNo, TO_CHAR(A.AWB_DATE, 'DDMONYY') as awbDate, A.SRF_NO as srfNo , A.cdif_NO as cdifNo 
		FROM 
			IMP_CDIF A, IMP_SRF B WHERE B.SRF_NO=A.SRF_NO AND 
			A.FOLLOW_ON_TRUCK=#truckNo# AND A.CR_DATE>=TO_DATE(#cdifFromTime#, 'DDMONYY HH24MI')
			AND A.CDIF_SRF_NO IS NULL
		]]>
	</select>
	<select id="findAWBByTruckManifestNo" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO" resultClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
		SELECT 
			B.AWB_NO as awbNo, TO_CHAR(B.AWB_DATE, 'DDMONYY') as awbDate 
		FROM 
			TRUCK_MANIFEST A, TRUCK_MANIFEST_DTL B 
		WHERE 
			B.TRUCK_MANF_NO=A.TRUCK_MANF_NO AND A.TRUCK_MANF_NO=#truckMnfNo# AND A.SRF_ISSUED='N'
	</select>
	<select id="findAWBDtlsByTruckManifestNo" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO" resultClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
		SELECT 
			DISTINCT B.AWB_NO as awbNo, TO_CHAR(B.AWB_DATE, 'DDMONYY') as awbDate,  B.FLT_KEY as fltKey, TO_CHAR(B.FLT_DATE, 'DDMONYY') as fltDate, 
			A.AUTH_REP_NAME as collectedBy, A.AUTH_REP_ID as hkId, A.AUTH_REP_NAME as authPerson, A.AUTH_REP_ID as authPersonId 
		FROM 
			TRUCK_MANIFEST A, TRUCK_MANIFEST_DTL B 
		WHERE 
			B.TRUCK_MANF_NO=A.TRUCK_MANF_NO AND A.TRUCK_MANF_NO=#truckMnfNo# AND A.SRF_ISSUED='N' AND B.AWB_NO=#awbNo# AND 
			B.AWB_DATE=TO_DATE(#awbDate#, 'DDMONYY')
	</select>
	<select id="findAWBByConfRlsNo" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO" resultClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
		SELECT 
			DISTINCT AWB_NO as awbNo, TO_CHAR(AWB_DATE, 'DDMONYY') as awbDate 
		FROM 
			IMP_CAR_SHP 
		WHERE 
			SRF_CREATED_YN='N' AND CFM_RLS=#confirmRlsSeqNo#
	</select>
	
	<select id="findAwbByListPrintRTNNo" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO" resultClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
		SELECT 
			DISTINCT AWB_NO as awbNo, TO_CHAR(AWB_DATE, 'DDMONYY') as awbDate 
		FROM 
			EXP_RTN_HD 
		WHERE 
			RTN_NO = #listPrintRTNNo#
			
	</select>
	
	<update id="updateSRFForReturnCargo" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
		UPDATE 
			EXP_RTN_HD 
		SET 
			SRF_NO = #srfNo#, LM_USER_ID=#userId#, LM_DATE=SYSDATE 
		WHERE 
			RTN_NO = #listPrintRTNNo#
	</update>
	
	<select id="findAWBDtlsByConfRlsNo" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO" resultClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
		SELECT 
			DISTINCT AWB_NO as awbNo, TO_CHAR(AWB_DATE, 'DDMONYY') as awbDate, FLT_KEY as fltKey, TO_CHAR(FLT_DATE, 'DDMONYY') as fltDate, 
			AGENT_ID as agentId 
		FROM 
			IMP_CAR_SHP 
		WHERE 
			SRF_CREATED_YN='N' AND CFM_RLS=#confirmRlsSeqNo# AND AWB_NO=#awbNo# AND AWB_DATE=TO_DATE(#awbDate#, 'DDMONYY')
	</select>
	<select id="findAgtNameByAgtCode" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO" resultClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
		SELECT 
			A.CODE as agentId, A.CODE_DESC as agentName 
		FROM 
			CUST_COMPANY A, IMP_CAR_SHP B, IMP_CAR_AWB C 
		WHERE 
			B.AWB_NO=C.AWB_NO AND B.AWB_DATE=C.AWB_DATE AND C.AGENT_CUST_NO=A.CODE AND B.SRF_CREATED_YN='N' AND 
			B.CFM_RLS=#confirmRlsSeqNo# AND B.AWB_NO=#awbNo# AND B.AWB_DATE=TO_DATE(#awbDate#, 'DDMONYY') AND ROWNUM=1
	</select>
	<update id="updSrfIssueInTrkMnf" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
		UPDATE 
			TRUCK_MANIFEST 
		SET 
			SRF_ISSUED=#srfIssued#, LM_USER_ID=#userId#, LM_DATE=SYSDATE 
		WHERE 
			TRUCK_MANF_NO=#truckMnfNo#
	</update>
	<update id="updSrfIssueInTrkMnfDtls" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
		UPDATE 
			TRUCK_MANIFEST_DTL 
		SET 
			SRF_NO=#srfNo#, LM_USER_ID=#userId#, LM_DATE=SYSDATE, ERR_RMK=#errorRemarks# 
		WHERE 
			TRUCK_MANF_NO=#truckMnfNo# AND AWB_NO=#awbNo#
	</update>
	
	<update id="updSrfIssueInImpCarShp" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
		UPDATE 
			IMP_CAR_SHP 
		SET 
			SRF_CREATED_YN=#srfIssued#, SRF_NO=#srfNo#, LM_USER_ID=#userId#, LM_DATE=SYSDATE, ERR_RMK=#errorRemarks# 
		WHERE 
			CFM_RLS=#confirmRlsSeqNo# AND AWB_NO=#awbNo#
	</update>
	
	<update id="postSrfFromConfirmByPass" parameterClass="cargo.cms.imprt.bo.ImpDHLDirectTowBO">
		UPDATE 
			imp_srf 
		SET 
			post_date = SYSDATE,post_user = #userId#,post_time = to_char(SYSDATE, 'HH24MI'),status = 'POSTED'
		WHERE 
			SRF_NO = #srfNo#
	</update>
	
	<!--  Changed for QR -->
	<select id="findAuthRepByAwb" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO" resultClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
		 SELECT 
			AUTH_REP_NAME as authPerson, AUTH_REP_ID as authPersonId, AUTH_REP_NAME as collectedBy, AUTH_REP_ID as hkId 
		FROM 
			CUST_AGENT_AUTH_REP 
		WHERE 
			CUST_NO IN(SELECT AGENT_CUST_NO FROM IMP_CAR_AWB WHERE AWB_NO=#awbNo# AND AWB_DATE=TO_DATE(#awbDate#, 'DDMONYY')) AND ROWNUM=1
	</select>
	<select id="findSRFGeneratedByTruckNo" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO" resultClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
		SELECT 
			SRF.SRF_NO as srfNo 
		FROM 
			IMP_SRF SRF 
		WHERE 
			SRF.TRUCK_NO=#truckNo# AND SRF_EXPY_DATE>SYSDATE AND VERIFIED='N' AND STATUS='ISSUED' AND NOT EXISTS (SELECT TRKSRF.SRF_NO FROM 
			IMP_TRUCK_SRF TRKSRF, TRUCK_TRIP TRIP WHERE TRIP.TRIP_ID=TRKSRF.TRIP_ID AND TRIP.CLOSED='N' AND SRF.SRF_NO=TRKSRF.SRF_NO)
	</select>
	<select id="findSeqNoFromSrfAwbInv" parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT SEQ_NO FROM IMP_SRF_AWB_INVENTORY WHERE SRF_NO=#srfNo#
	</select>
	<select id="findTruckDockFromTruckTrip" parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT TRUCK_DOCK FROM TRUCK_TRIP WHERE TRUCK_NO=#truckNo# AND CLOSED='N' AND ROWNUM=1
	</select>
	<select id="findRtrvMOJOExistsForAwb" parameterClass="cargo.cms.imprt.bo.SRFMoveJobOrderBO" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM RTRV_MOVE_ORDER WHERE (STATUS IS NULL OR STATUS = 'STARTED')
		<isNotEmpty property="uldKey">
		AND NVL(ULD,'N')=#uldKey#
		</isNotEmpty>
		<isNotEmpty property="lspNo">
		AND NVL(LSP,'N') = NVL(#lspNo#,'N') 
		</isNotEmpty>
	</select>
	<update id="updateCancelToRtrvMOJO" parameterClass="cargo.cms.imprt.bo.SRFMoveJobOrderBO">
	<![CDATA[
		UPDATE RTRV_MOVE_ORDER SET STATUS='CANCELLED' WHERE (status IS NULL OR (status <> 'E' AND status <>'CANCELLED' AND status <>'COMPLETED'))
		]]>  
		<isNotEmpty property="uldKey">
		AND NVL(ULD,'N')=#uldKey#
		</isNotEmpty>
		<isNotEmpty property="lspNo">
		AND NVL(LSP,'N') = NVL(#lspNo#,'N') 
		</isNotEmpty>
	</update>
	<!-- Issue SRF Backend :: Anup :: End -->
<!-- Print SRF Queries Start -->
	<parameterMap id="tripMap" class="map" >
	<parameter property="TRUCK_NO" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	<parameter property="TRUCK_ACTION" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	<parameter property="TRUCK_PURPOSE" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	</parameterMap>
	<procedure id="sqlTruckTripPrc" parameterMap="tripMap" >
		{call PRC_TRUCK_TRIP(?,?,?)}
	</procedure>

	<update id="updateSRFVerified" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
		UPDATE
			IMP_SRF 
		SET 
			VERIFIED = 'Y' ,
			LM_DATE = SYSDATE,
			lm_user_id = #crUserId#,
			VERIFIED_TIME = SYSDATE,
			VERIFIED_HKID = #hkId1#,
			VERIFIED_BY = #crUserId#,
			TR_TYPE = 'VESRF'
		WHERE 
			SRF_NO = #srfNo# AND VERIFIED = 'N'
	</update>
	
	
	
	<update id="updateSRFVerifiedEPH" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
		UPDATE
			IMP_SRF 
		SET 
			VERIFIED = 'Y' ,
			LM_DATE = SYSDATE,
			lm_user_id = #crUserId#,
			VERIFIED_TIME = SYSDATE,
			VERIFIED_HKID = #hkId1#,
			VERIFIED_BY = #crUserId#,
			CARGO_COLLECTED = SYSDATE,
			CARGO_VERIFICATION = SYSDATE,
			TR_TYPE = 'VESRF'
		WHERE 
			SRF_NO = #srfNo# AND VERIFIED = 'N'
	</update>
	
	<select id="getSrfAuthInfo"  parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO" 
				 resultClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
	   SELECT AUTH_REP_NAME as collectPersonReceive, AUTH_REP_ID as hkidOfCollectPerson , srf_no as srfNo FROM imp_srf where SRF_NO = #srfNo#
	</select>

 <select id="fetchPrintSRFList"  parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO"  resultClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
	select distinct srf.srf_no srfNo, srf.print_ind printInd, srf.awb_no awbNo, SUBSTR(srf.awb_no,1,3)||'-'||SUBSTR(srf.awb_no,4) as awbNoDisp ,to_char(srf.awb_date,'DDMONYY') awbDate, 
	flt.flt_key fltKey, to_char(flt.flt_date,'DDMONYY') fltDate,(select code_desc from cust_company where code in (srf.agent_id)) agentName,
	srf.coll_name collectedBy,srf.coll_hkid hkId,srf.srf_pcs srfPcs,srf.srf_wt srfWt,
	srf.awb_cc_code as strCC, SRF.SRF_PRT_CODE srfPtr,
	awb.CONTENT as contents,
	(select booking_no from imp_booking_dtl where srf_no=#srfNo#) bookingNoDisp,
	awb.SPL_CODE1 AS splCode1,awb.SPL_CODE2 AS splCode2,awb.SPL_CODE3 AS splCode3,awb.SPL_CODE4 AS splCode4, 
	awb.SPL_CODE5 AS splCode5,awb.SPL_CODE6 AS splCode6,awb.SPL_CODE7 AS splCode7,awb.SPL_CODE8 AS splCode8,
	awb.SPL_CODE9 AS splCode9,(select truck_no from truck_trip where trip_id in (
	select trip_id from imp_truck_srf where srf_no=srf.srf_no and rownum=1) and closed='N') truckNo,srf.agent_id agentId,
	(select ENDR_SRF from MAST_SPL_HAND_CODE where code=awb.SPL_CODE1) splCodeEndr1,
	(select ENDR_SRF from MAST_SPL_HAND_CODE where code=awb.SPL_CODE2) splCodeEndr2,
	(select ENDR_SRF from MAST_SPL_HAND_CODE where code=awb.SPL_CODE3) splCodeEndr3,
	(select ENDR_SRF from MAST_SPL_HAND_CODE where code=awb.SPL_CODE4) splCodeEndr4,
	(select ENDR_SRF from MAST_SPL_HAND_CODE where code=awb.SPL_CODE5) splCodeEndr5,
	(select ENDR_SRF from MAST_SPL_HAND_CODE where code=awb.SPL_CODE6) splCodeEndr6,
	(select ENDR_SRF from MAST_SPL_HAND_CODE where code=awb.SPL_CODE7) splCodeEndr7,
	(select ENDR_SRF from MAST_SPL_HAND_CODE where code=awb.SPL_CODE8) splCodeEndr8,
	(select ENDR_SRF from MAST_SPL_HAND_CODE where code=awb.SPL_CODE9) splCodeEndr9,
	srf.remarks reason,
	srf.PRINT_ENDORSED_BY endrName ,
	TO_CHAR(srf.SRF_EXPY_DATE,'DD/MM/YYYY HH24MISS') srfExpiryDate,
	(select NVL(ALERT_FOR_VERIFY_SRF,'N') from MAST_CONSTRAINT_CODE where code = srf.AWB_CC_CODE) as alertDisplay,
	COLLECT_PERSON_RECVD as collectPersonReceive,
	HKID_COLLECT_PERSON as hkidOfCollectPerson	
	from imp_srf srf, imp_srf_flt flt,imp_car_awb awb 
	<isNotEmpty property="truckNo" >
	,truck_trip trip,imp_truck_srf truck
	</isNotEmpty>
	<isNotEmpty property="truckDockNo" >
	   <isEmpty property="truckNo" >
			,truck_trip trip,imp_truck_srf truck
		</isEmpty>
	</isNotEmpty>
	where srf.srf_no=flt.srf_no and srf.awb_no = awb.awb_no and srf.awb_date = awb.awb_date
	<iterate prepend="AND" property="srfList" open="(" close=")" conjunction="OR" >
          srf.srf_no = #srfList[]#
    </iterate> 
	<isNotEmpty property="truckNo" >
		and srf.srf_no=truck.srf_no and truck.trip_id=trip.trip_id and trip.truck_no=#truckNo# and trip.closed='N' 
		and srf.void_date is null and srf.void_user is null and srf.post_date is null and srf.post_time is null and srf.post_user is null 
		and srf.SRF_EXPY_DATE&gt;=sysdate 
	</isNotEmpty>
	<isNotEmpty property="truckDockNo" >
		and srf.srf_no=truck.srf_no and truck.trip_id=trip.trip_id and trip.truck_dock=#truckDockNo# and trip.closed='N' 
		and srf.void_date is null and srf.void_user is null and srf.post_date is null and srf.post_time is null and srf.post_user is null 
		and srf.SRF_EXPY_DATE&gt;=sysdate 
	</isNotEmpty>
	<isNotEmpty property="loginCarrier">
			AND ( srf.carr_code = #loginCarrier# OR  srf.carr_code IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE  = #loginCarrier#))             
        </isNotEmpty>
 </select>
 
 <select id="fetchPrintSRFListExp"  parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO"  resultClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
	select distinct srf.srf_no srfNo, srf.print_ind printInd, srf.awb_no awbNo, SUBSTR(srf.awb_no,1,3)||'-'||SUBSTR(srf.awb_no,4) as awbNoDisp ,to_char(srf.awb_date,'DDMONYY') awbDate, 
	flt.flt_key fltKey, to_char(flt.flt_date,'DDMONYY') fltDate,(select code_desc from cust_company where code in (srf.agent_id)) agentName,
	srf.coll_name collectedBy,srf.coll_hkid hkId,srf.srf_pcs srfPcs,srf.srf_wt srfWt,
	pkg_common.get_srf_cc(srf.srf_no ) as strCC,'ReturnCargo' srfType,
	awb.CONTENT as contents,
	(select booking_no from imp_booking_dtl where srf_no=#srfNo#) bookingNoDisp,
	awb.SPL_CODE1 AS splCode1,awb.SPL_CODE2 AS splCode2,awb.SPL_CODE3 AS splCode3,awb.SPL_CODE4 AS splCode4, 
	awb.SPL_CODE5 AS splCode5,awb.SPL_CODE6 AS splCode6,awb.SPL_CODE7 AS splCode7,awb.SPL_CODE8 AS splCode8,
	awb.SPL_CODE9 AS splCode9,(select truck_no from truck_trip where trip_id in (
	select trip_id from imp_truck_srf where srf_no=srf.srf_no and rownum=1) and closed='N') truckNo,srf.agent_id agentId,
	(select ENDR_SRF from MAST_SPL_HAND_CODE where code=awb.SPL_CODE1) splCodeEndr1,
	(select ENDR_SRF from MAST_SPL_HAND_CODE where code=awb.SPL_CODE2) splCodeEndr2,
	(select ENDR_SRF from MAST_SPL_HAND_CODE where code=awb.SPL_CODE3) splCodeEndr3,
	(select ENDR_SRF from MAST_SPL_HAND_CODE where code=awb.SPL_CODE4) splCodeEndr4,
	(select ENDR_SRF from MAST_SPL_HAND_CODE where code=awb.SPL_CODE5) splCodeEndr5,
	(select ENDR_SRF from MAST_SPL_HAND_CODE where code=awb.SPL_CODE6) splCodeEndr6,
	(select ENDR_SRF from MAST_SPL_HAND_CODE where code=awb.SPL_CODE7) splCodeEndr7,
	(select ENDR_SRF from MAST_SPL_HAND_CODE where code=awb.SPL_CODE8) splCodeEndr8,
	(select ENDR_SRF from MAST_SPL_HAND_CODE where code=awb.SPL_CODE9) splCodeEndr9,
	srf.remarks reason,
	srf.PRINT_ENDORSED_BY endrName ,
	TO_CHAR(srf.SRF_EXPY_DATE,'DD/MM/YYYY HH24MISS') srfExpiryDate ,
	(select NVL(ALERT_FOR_VERIFY_SRF,'N') from MAST_CONSTRAINT_CODE where code = srf.AWB_CC_CODE) as alertDisplay
	from imp_srf srf, imp_srf_flt flt,awb awb 
	<isNotEmpty property="truckNo" >
	,truck_trip trip,imp_truck_srf truck
	</isNotEmpty>
	<isNotEmpty property="truckDockNo" >
		 <isEmpty property="truckNo" >
			,truck_trip trip,imp_truck_srf truck
		</isEmpty>
	</isNotEmpty>
	where srf.srf_no=flt.srf_no and srf.awb_no = awb.awb_no and srf.awb_date = awb.awb_date
	<iterate prepend="AND" property="srfList" open="(" close=")" conjunction="OR" >
          srf.srf_no = #srfList[]#
    </iterate> 
	<isNotEmpty property="truckNo" >
		and srf.srf_no=truck.srf_no and truck.trip_id=trip.trip_id and trip.truck_no=#truckNo# and trip.closed='N' 
		and srf.void_date is null and srf.void_user is null and srf.post_date is null and srf.post_time is null and srf.post_user is null 
		and srf.SRF_EXPY_DATE&gt;=sysdate 
	</isNotEmpty>
	<isNotEmpty property="truckDockNo" >
		and srf.srf_no=truck.srf_no and truck.trip_id=trip.trip_id and trip.truck_dock=#truckDockNo# and trip.closed='N' 
		and srf.void_date is null and srf.void_user is null and srf.post_date is null and srf.post_time is null and srf.post_user is null 
		and srf.SRF_EXPY_DATE&gt;=sysdate 
	</isNotEmpty>
	<isNotEmpty property="loginCarrier">
			AND ( srf.carr_code = #loginCarrier# OR  srf.carr_code IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE  = #loginCarrier#))             
        </isNotEmpty>
 </select>
 
 <select id="fetchOldPrintSRFListImpExp"  parameterClass="java.lang.String"  resultClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
 SELECT PRINT_IND as printInd,VERIFIED as verifyInd FROM IMP_SRF WHERE SRF_NO=#PARAM#
 </select>
 
 <select id="fetchPrintSRFListImpExp"  parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO"  resultClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
	select distinct srf.srf_no srfNo, srf.print_ind printInd, srf.awb_no awbNo, SUBSTR(srf.awb_no,1,3)||'-'||SUBSTR(srf.awb_no,4) as awbNoDisp ,to_char(srf.awb_date,'DDMONYY') awbDate, 
	flt.flt_key fltKey, to_char(flt.flt_date,'DDMONYY') fltDate,(select code_desc from cust_company where code in (srf.agent_id)) agentName,
	srf.coll_name collectedBy,srf.coll_hkid hkId,srf.srf_pcs srfPcs,srf.srf_wt srfWt,
	pkg_common.get_srf_cc(srf.srf_no ) as strCC,'' srfType,
	awb.CONTENT as contents,
	(select booking_no from imp_booking_dtl where srf_no=srf.srf_no) bookingNoDisp,
	awb.SPL_CODE1 AS splCode1,awb.SPL_CODE2 AS splCode2,awb.SPL_CODE3 AS splCode3,awb.SPL_CODE4 AS splCode4, 
	awb.SPL_CODE5 AS splCode5,awb.SPL_CODE6 AS splCode6,awb.SPL_CODE7 AS splCode7,awb.SPL_CODE8 AS splCode8,
	awb.SPL_CODE9 AS splCode9,(select truck_no from truck_trip where trip_id in (
	select trip_id from imp_truck_srf where srf_no=srf.srf_no and rownum=1) and closed='N') truckNo,srf.agent_id agentId,
	(select ENDR_SRF from MAST_SPL_HAND_CODE where code=awb.SPL_CODE1) splCodeEndr1,
	(select ENDR_SRF from MAST_SPL_HAND_CODE where code=awb.SPL_CODE2) splCodeEndr2,
	(select ENDR_SRF from MAST_SPL_HAND_CODE where code=awb.SPL_CODE3) splCodeEndr3,
	(select ENDR_SRF from MAST_SPL_HAND_CODE where code=awb.SPL_CODE4) splCodeEndr4,
	(select ENDR_SRF from MAST_SPL_HAND_CODE where code=awb.SPL_CODE5) splCodeEndr5,
	(select ENDR_SRF from MAST_SPL_HAND_CODE where code=awb.SPL_CODE6) splCodeEndr6,
	(select ENDR_SRF from MAST_SPL_HAND_CODE where code=awb.SPL_CODE7) splCodeEndr7,
	(select ENDR_SRF from MAST_SPL_HAND_CODE where code=awb.SPL_CODE8) splCodeEndr8,
	(select ENDR_SRF from MAST_SPL_HAND_CODE where code=awb.SPL_CODE9) splCodeEndr9,
	srf.remarks reason,
	srf.PRINT_ENDORSED_BY endrName ,
	TO_CHAR(srf.SRF_EXPY_DATE,'DD/MM/YYYY HH24MISS') srfExpiryDate,
	(select NVL(ALERT_FOR_VERIFY_SRF,'N') from MAST_CONSTRAINT_CODE where code = srf.AWB_CC_CODE) as alertDisplay 
	from imp_srf srf, imp_srf_flt flt,imp_car_awb awb 
	<isNotEmpty property="truckNo" >
	,truck_trip trip,imp_truck_srf truck
	</isNotEmpty>
	<isNotEmpty property="truckDockNo" >
		 <isEmpty property="truckNo" >
			,truck_trip trip,imp_truck_srf truck
		</isEmpty>
	</isNotEmpty>
	where srf.srf_no=flt.srf_no and srf.awb_no = awb.awb_no and srf.awb_date = awb.awb_date
	<iterate prepend="AND" property="srfList" open="(" close=")" conjunction="OR" >
          srf.srf_no = #srfList[]#
    </iterate> 
	<isNotEmpty property="truckNo" >
		and srf.srf_no=truck.srf_no and truck.trip_id=trip.trip_id and trip.truck_no=#truckNo# and trip.closed='N' 
		and srf.void_date is null and srf.void_user is null and srf.post_date is null and srf.post_time is null and srf.post_user is null 
		and srf.SRF_EXPY_DATE&gt;=sysdate 
	</isNotEmpty>
	<isNotEmpty property="truckDockNo" >
		and srf.srf_no=truck.srf_no and truck.trip_id=trip.trip_id and trip.truck_dock=#truckDockNo# and trip.closed='N' 
		and srf.void_date is null and srf.void_user is null and srf.post_date is null and srf.post_time is null and srf.post_user is null 
		and srf.SRF_EXPY_DATE&gt;=sysdate 
	</isNotEmpty>
	<isNotEmpty property="loginCarrier">
			AND ( srf.carr_code = #loginCarrier# OR  srf.carr_code IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE  = #loginCarrier#))             
        </isNotEmpty> 
 	UNION ALL
	select distinct srf.srf_no srfNo, srf.print_ind printInd, srf.awb_no awbNo, SUBSTR(srf.awb_no,1,3)||'-'||SUBSTR(srf.awb_no,4) as awbNoDisp ,to_char(srf.awb_date,'DDMONYY') awbDate, 
	flt.flt_key fltKey, to_char(flt.flt_date,'DDMONYY') fltDate,(select code_desc from cust_company where code in (srf.agent_id)) agentName,
	srf.coll_name collectedBy,srf.coll_hkid hkId,srf.srf_pcs srfPcs,srf.srf_wt srfWt,
	pkg_common.get_srf_cc(srf.srf_no ) as strCC,'ReturnCargo' srfType,
	awb.CONTENT as contents,
	(select booking_no from imp_booking_dtl where srf_no=srf.srf_no) bookingNoDisp,
	awb.SPL_CODE1 AS splCode1,awb.SPL_CODE2 AS splCode2,awb.SPL_CODE3 AS splCode3,awb.SPL_CODE4 AS splCode4, 
	awb.SPL_CODE5 AS splCode5,awb.SPL_CODE6 AS splCode6,awb.SPL_CODE7 AS splCode7,awb.SPL_CODE8 AS splCode8,
	awb.SPL_CODE9 AS splCode9,(select truck_no from truck_trip where trip_id in (
	select trip_id from imp_truck_srf where srf_no=srf.srf_no and rownum=1) and closed='N') truckNo,srf.agent_id agentId,
	(select ENDR_SRF from MAST_SPL_HAND_CODE where code=awb.SPL_CODE1) splCodeEndr1,
	(select ENDR_SRF from MAST_SPL_HAND_CODE where code=awb.SPL_CODE2) splCodeEndr2,
	(select ENDR_SRF from MAST_SPL_HAND_CODE where code=awb.SPL_CODE3) splCodeEndr3,
	(select ENDR_SRF from MAST_SPL_HAND_CODE where code=awb.SPL_CODE4) splCodeEndr4,
	(select ENDR_SRF from MAST_SPL_HAND_CODE where code=awb.SPL_CODE5) splCodeEndr5,
	(select ENDR_SRF from MAST_SPL_HAND_CODE where code=awb.SPL_CODE6) splCodeEndr6,
	(select ENDR_SRF from MAST_SPL_HAND_CODE where code=awb.SPL_CODE7) splCodeEndr7,
	(select ENDR_SRF from MAST_SPL_HAND_CODE where code=awb.SPL_CODE8) splCodeEndr8,
	(select ENDR_SRF from MAST_SPL_HAND_CODE where code=awb.SPL_CODE9) splCodeEndr9,
	srf.remarks reason,
	srf.PRINT_ENDORSED_BY endrName ,
	TO_CHAR(srf.SRF_EXPY_DATE,'DD/MM/YYYY HH24MISS') srfExpiryDate,
	(select NVL(ALERT_FOR_VERIFY_SRF,'N') from MAST_CONSTRAINT_CODE where code = srf.AWB_CC_CODE) as alertDisplay  
	from imp_srf srf, imp_srf_flt flt,awb awb 
	<isNotEmpty property="truckNo" >
	,truck_trip trip,imp_truck_srf truck
	</isNotEmpty>
	<isNotEmpty property="truckDockNo" >
		 <isEmpty property="truckNo" >
			,truck_trip trip,imp_truck_srf truck
		</isEmpty>
	</isNotEmpty>
	where srf.srf_no=flt.srf_no and srf.awb_no = awb.awb_no and srf.awb_date = awb.awb_date and awb.awb_type = 'E'
	<iterate prepend="AND" property="srfList" open="(" close=")" conjunction="OR" >
          srf.srf_no = #srfList[]#
    </iterate> 
	<isNotEmpty property="truckNo" >
		and srf.srf_no=truck.srf_no and truck.trip_id=trip.trip_id and trip.truck_no=#truckNo# and trip.closed='N' 
		and srf.void_date is null and srf.void_user is null and srf.post_date is null and srf.post_time is null and srf.post_user is null 
		and srf.SRF_EXPY_DATE&gt;=sysdate 
	</isNotEmpty>
	<isNotEmpty property="truckDockNo" >
		and srf.srf_no=truck.srf_no and truck.trip_id=trip.trip_id and trip.truck_dock=#truckDockNo# and trip.closed='N' 
		and srf.void_date is null and srf.void_user is null and srf.post_date is null and srf.post_time is null and srf.post_user is null 
		and srf.SRF_EXPY_DATE&gt;=sysdate 
	</isNotEmpty>
	<isNotEmpty property="loginCarrier">
			AND ( srf.carr_code = #loginCarrier# OR  srf.carr_code IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE  = #loginCarrier#))             
        </isNotEmpty>
 </select>
 
 <select id="fetchPrintULDList"  parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO"  resultClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
	select Decode(lsp_no,null,uld_key,lsp_no) lspUld,lsp_no lsp, loc_code locn, locn_pcs locnPcs, locn_wt locnWt,
	(select B.TRUCK_DOCK from IMp_truck_srf CC join TRUCK_TRIP b on CC.TRIP_ID= b.TRIP_ID where CC.srf_No =#srfNo# and b.CLOSED='N' and rownum=1) target 
	from awb_inventory where awb_no=#awbNo# 
	and awb_date=TO_DATE(#awbDate#,'DDMONYY')  and srf_no=#srfNo#
 </select>
 <select id="fetchSRfBkgList"  parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO"  resultClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
	 select bkg.booking_no bookingNo,dtl.awb_no awbNo,SUBSTR(dtl.awb_no,1,3)||'-'||SUBSTR(dtl.awb_no,4) as awbNoDisp ,awb.appntd_agent agentName,bkg.SRF_ISSUED srfIssued,dtl.ERR_RMK errorRemarks,awb.agent_cust_no agentId,	
	bkg.coll_person_name collectedBy,(to_char(bkg.bkg_slot_date,'DDMONYY')||' ' ||SUBSTR(TRIM(TO_CHAR(NVL(bkg.BKG_SLOT_FROM,0),'0000')),0,2) || ':' ||  SUBSTR(TRIM(TO_CHAR(NVL(bkg.BKG_SLOT_FROM,0),'0000')),3,4)||'-'||
	SUBSTR(TRIM(TO_CHAR(NVL(bkg.BKG_SLOT_TO,0),'0000')),0,2) || ':' ||  SUBSTR(TRIM(TO_CHAR(NVL(bkg.BKG_SLOT_TO,0),'0000')),3,4))  timeSlot,bkg.trucker_id truckerCoCode,
	COLLECT_ULD collectULD ,dtl.srf_no as srfNo	from IMP_BOOKING bkg,IMP_BOOKING_DTL dtl,imp_car_awb awb,imp_car_shp shp where bkg.booking_no= dtl.booking_no and 
	awb.awb_no= dtl.awb_no and awb.awb_date = dtl.awb_date and awb.awb_no = shp.awb_no and awb.awb_date = awb.awb_date and shp.flt_key = dtl.flt_key and shp.flt_date = dtl.flt_date and 	
	<isEmpty property="bookingNo">
	(bkg.truck1=#truckNo# or bkg.truck2=#truckNo# or bkg.truck3=#truckNo#
	 or bkg.truck4=#truckNo# or bkg.truck5=#truckNo# or bkg.truck6=#truckNo#
	 or exists (select null from TCS_DOCK_POOL_DOCK where pool_id = bkg.pool_id and truck_dock = #truckDockNo#) ) 
	and (TO_DATE((BKG_SLOT_DATE || ' ' 
	|| SUBSTR(TRIM(TO_CHAR(NVL(BKG_SLOT_FROM,0),'0000')),0,2) || ':' ||  SUBSTR(TRIM(TO_CHAR(NVL(BKG_SLOT_FROM,0),'0000')),3,4)), 
	'DD-MON-YY HH24:MI') BETWEEN TO_DATE(#bkgFromTime#, 'DDMONYY HH24:MI') AND TO_DATE(#bkgToTime#, 'DDMONYY HH24:MI'))
	</isEmpty>
	<isNotEmpty property="bookingNo">
	bkg.booking_no=#bookingNo#
	</isNotEmpty>
 </select>
 
 <!--  Changed for QR -->
 <select id="validateCollPerson1"  parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO"  resultClass="java.lang.Integer">
	 select COUNT(1) from (
	 select cust_no from CUST_AGENT_AUTH_REP where cust_no=#agentId# and BLACK_LISTED = 'N' and (auth_rep_id=#hkId1# or auth_rep_id=#hkId2# or auth_rep_id=#hkId3#
	 or auth_rep_id=#hkId4# or auth_rep_id=#hkId5#)
	 UNION
	 select coll_person_id from imp_booking where status not in ('CANCEL') and booking_no = #bookingNo# and (coll_person_id=#hkId1# or coll_person_id=#hkId2# or coll_person_id=#hkId3#
	 or coll_person_id=#hkId4# or coll_person_id=#hkId5#))
 </select>
 <select id="validateCollPerson2"  parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO"  resultClass="java.lang.Integer">
	 select COUNT(1) from (
	 select cust_no from CUST_AGENT_AUTH_REP where cust_no=#agentId# and BLACK_LISTED = 'N'  and (auth_rep_id=#hkId1# or auth_rep_id=#hkId2# or auth_rep_id=#hkId3#
	 or auth_rep_id=#hkId4# or auth_rep_id=#hkId5#)
	 UNION
	 select cust_no from CUST_AGENT_AUTH_REP where cust_no=#truckerCoCode# and (auth_rep_id=#hkId1# or auth_rep_id=#hkId2# or auth_rep_id=#hkId3#
	 or auth_rep_id=#hkId4# or auth_rep_id=#hkId5#))
 </select>
 <select id="validateCollPerson3"  parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO"  resultClass="java.lang.Integer">
	select COUNT(1) from (
	select coll_hkid collId from imp_srf where srf_no=#srfNo# and (coll_hkid=#hkId1# or coll_hkid=#hkId2#
	or coll_hkid=#hkId3# or coll_hkid=#hkId4# or coll_hkid=#hkId5#)
	UNION
	select auth_rep_id collId from CUST_AGENT_AUTH_REP where cust_no=#agentId# and (auth_rep_id=#hkId1# or auth_rep_id=#hkId2#
	or auth_rep_id=#hkId3# or auth_rep_id=#hkId4# or auth_rep_id=#hkId5#) and BLACK_LISTED = 'N')
 </select>
 
 <!--  Changed for QR -->
  <select id="printsrf_move_job_order" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO" 
		resultClass="cargo.cms.imprt.bo.SRFMoveJobOrderBO">
		    SELECT DISTINCT 
			C.AWB_NO as awbNo,A.SRF_NO srfNo, D.CODE as locCode, C.LSP_NO as lspNo, C.ULD_KEY as uldKey, A.COLL_CENTER as target, 
			TO_CHAR(C.AWB_DATE, 'DDMONYY') as awbDate, C.LOCN_PCS as pcs, C.LOCN_WT as wt ,E.WH_TYPE whType 
		FROM 
			IMP_SRF A, AWB_INVENTORY C, MAST_WH_LOC D, MAST_WH_GROUP E 
		WHERE 
			A.SRF_NO=C.SRF_NO AND C.LOC_CODE=D.CODE AND D.WH_GROUP=E.WH_GROUP 
			AND A.SRF_NO=#srfNo# 
	</select>
	<select id="fetchURFListforSRF"  parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO"  resultClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
	select hd.srf_no srfNo, hd.eir_no urfNo, dtl.uld_req_qty uldReqQty, dtl.uld_type uldType from ULD_ISS_HD hd,ULD_ISS_DTL dtl where 
	hd.srf_no=#srfNo# and hd.eir_no=dtl.eir_no
	</select>
        <update id="updateSRFDtls" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
		<![CDATA[
		UPDATE 
			IMP_BOOKING 
		SET 
			PHONE_NO=#phoneNo# 
		WHERE 
			BOOKING_NO=#bookingNo#
		]]>
	</update>
	<select id="chkTruckDtlsExist"  parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO"  resultClass="java.lang.Integer">
		select COUNT(1) from imp_truck_srf where trip_id in (
		select trip_id from truck_trip where truck_no=#truckNo# and closed='N') and srf_no=#srfNo#
	</select>
	<update id="updateRmkSRF" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
		update imp_srf set remarks=#reason#,LM_USER_ID=#crUserId#,LM_DATE=sysdate,TR_TYPE=#trtype# , Collect_Person_Recvd = #collectPersonReceive# ,
		Hkid_Collect_Person =#hkidOfCollectPerson#  where srf_no=#srfNo#
	</update>
	<update id="updateCollPerson" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
		update IMP_SRF set COLL_HKID=#hkidOfCollectPerson#,COLLECT_PERSON_RECVD = #collectPersonReceive#,HKID_COLLECT_PERSON = #hkidOfCollectPerson#,
		TR_TYPE ='DUMMY' where srf_no=#srfNo#
	</update>
	<!--  Changed for QR
	<select id="checkValidPrintTruck" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM TRUCK_TRIP WHERE TRUCK_NO=#truckNo#
	</select> -->
		<select id="checkValidClosedTruck" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM TRUCK_TRIP WHERE TRUCK_NO=#truckNo# AND NVL(CLOSED,'N')='N'
	</select>
	<select id="checkValidSrfTruck" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM IMP_TRUCK_SRF A
		JOIN TRUCK_TRIP B
		ON A.TRIP_ID = B.TRIP_ID
		WHERE B.TRUCK_NO = #truckNo#
	</select>
	
	
 <!-- Print SRF Queries End -->
 <!-- Truck Manifest -->
 <select id="getAgentTopList" parameterClass="cargo.cms.imprt.bo.TruckManfBO"  resultClass="cargo.cms.imprt.bo.TruckManfBO">
 	<!-- SELECT DISTINCT CAR_AWB.APPNTD_AGENT as agentName,	
       					COMP.CODE as agentCode					
		FROM 
    	IMP_CAR_SHP CAR_SHP
      	JOIN IMP_CAR_AWB CAR_AWB ON CAR_SHP.AWB_NO=CAR_AWB.AWB_NO AND CAR_SHP.AWB_DATE=CAR_AWB.AWB_DATE AND CAR_AWB.VAL_FOR_SCH_COLL='Y'
    	JOIN ( SELECT AWB_NO,AWB_DATE,FLT_KEY,FLT_DATE,SUM(LOCN_PCS) LOCNPC,SUM(LOCN_WT) LOCNWT,LSP_NO,LOC_CODE,ULD_KEY FROM AWB_INVENTORY 
           	   WHERE LOCN_PCS>0 AND LOCN_WT>0 GROUP BY AWB_NO, AWB_DATE, FLT_KEY, FLT_DATE,LSP_NO,LOC_CODE,ULD_KEY ) INVNT ON CAR_SHP.AWB_NO=INVNT.AWB_NO AND CAR_SHP.AWB_DATE=INVNT.AWB_DATE
    	AND INVNT.FLT_KEY=CAR_SHP.FLT_KEY AND CAR_SHP.FLT_DATE=INVNT.FLT_DATE
    	JOIN CUST_COMPANY COMP ON COMP.CODE_DESC=CAR_AWB.APPNTD_AGENT
    	LEFT OUTER JOIN V_CST_IMP_CC_CODE_AWB V_CC ON V_CC.FLT_KEY=CAR_SHP.FLT_KEY AND V_CC.FLT_DATE=CAR_SHP.FLT_DATE AND V_CC.AWB_NO=CAR_SHP.AWB_NO
    	LEFT OUTER JOIN MAST_CONSTRAINT_CODE CONS ON V_CC.CC_CODE=CONS.CODE
		LEFT OUTER JOIN IMP_CUST_CLR_LIST CLR_LIST ON CLR_LIST.FLT_KEY=CAR_SHP.FLT_KEY AND CLR_LIST.FLT_DATE=CAR_SHP.FLT_DATE
    	AND CLR_LIST.AWB_NO=CAR_SHP.AWB_NO AND CLR_LIST.AWB_DATE=CAR_AWB.AWB_DATE
    	LEFT OUTER JOIN IMP_CCCL_DOC_LIST DOC_LIST ON CLR_LIST.TR_NO=DOC_LIST.TR_NO AND DOC_LIST.NOT_AVAILABLE='Y'
    	JOIN FLT_OPR FO ON FO.FLT_KEY = CAR_SHP.FLT_KEY and  FO.SCH_DATE = CAR_SHP.FLT_DATE and  FO.FLT_TYPE='A'
		JOIN CUST_AGENT_SCH_COLL_TIME SCT on SCT.CUST_NO = COMP.CODE
		WHERE  not exists (select d.AWB_NO from TRUCK_MANIFEST_DTL d, truck_manifest h where h.truck_manf_no = d.truck_manf_no 
          				and d.awb_no = CAR_SHP.AWB_NO and d.awb_date = CAR_SHP.AWB_DATE and d.FLT_KEY=CAR_SHP.FLT_KEY AND d.FLT_DATE=CAR_SHP.FLT_DATE
          				and (h.final_truck_manf_ind = 'Y' or (to_date(to_char(h.sch_coll_date,'DDMONYY')||to_char(Sch_coll_to,'0000'), 'DDMONYYHH24MI') > sysdate and h.final_truck_manf_no is null))) 
    	and not exists (select d.AWB_NO from IMP_BOOKING_DTL d, IMP_BOOKING h where h.booking_no = d.booking_no 
          				and d.awb_no = CAR_SHP.AWB_NO and d.awb_date = CAR_SHP.AWB_DATE and d.FLT_KEY = CAR_SHP.FLT_KEY AND d.FLT_DATE = CAR_SHP.FLT_DATE
          				and (h.srf_issued = 'Y' or to_date(to_char(h.bkg_slot_date,'DDMONYY')||to_char(bkg_slot_to,'0000'), 'DDMONYYHH24MI') > sysdate)) 
        AND not exists (SELECT CODE FROM MAST_SPL_HAND_CODE WHERE SCH_COLL_YN='N' and code in (CAR_AWB.SPL_CODE1,CAR_AWB.SPL_CODE2,CAR_AWB.SPL_CODE3,
            			CAR_AWB.SPL_CODE4,CAR_AWB.SPL_CODE5,CAR_AWB.SPL_CODE6,CAR_AWB.SPL_CODE7,CAR_AWB.SPL_CODE8,CAR_AWB.SPL_CODE9))
	    				AND NVL(V_CC.CC_CODE,'') NOT IN (SELECT CODE FROM MAST_CONSTRAINT_CODE WHERE SCH_COLL_YN='N')
      	AND CAR_SHP.MANIFEST_PCS <> CAR_SHP.CIR_PCS
     	AND NVL(CAR_SHP.CIR_PCS_TYPE, 'NT') <> 'SL'
     	and FO.ACT_DATE is not null
        AND TO_DATE(TO_CHAR(FO.ACT_DATE,'DDMONYY')||''||LPAD(FO.ACT_TIME,4,0),'DDMONYYHH24MI') <= TO_DATE(#ftlUptoDateHrMin#,'DDMONYYHH24MI') -->
 	<![CDATA[
		SELECT 
  			DISTINCT CAR_AWB.APPNTD_AGENT as agentName,	COMP.CODE as agentCode
		FROM 
  			IMP_CAR_SHP CAR_SHP 
  			LEFT OUTER JOIN V_CST_IMP_CC_CODE_AWB V_CC ON V_CC.FLT_KEY=CAR_SHP.FLT_KEY AND V_CC.FLT_DATE=CAR_SHP.FLT_DATE 
  			AND V_CC.AWB_NO=CAR_SHP.AWB_NO
  			left JOIN (select nvl(sum(LOCN_PCS),0) invPcs, nvl(sum(LOCN_WT),0) invWt, awb_no, awb_date, flt_key, flt_date
               			 from awb_inventory  where FLT_TYPE='I' group by awb_no, awb_date, flt_key, flt_date) 
						awb_inv ON awb_inv.AWB_NO=CAR_SHP.AWB_NO AND awb_inv.AWB_DATE=CAR_SHP.AWB_DATE and awb_inv.FLT_KEY = CAR_SHP.FLT_KEY and  awb_inv.FLT_DATE = CAR_SHP.FLT_DATE 
  			, IMP_CAR_AWB CAR_AWB, CUST_COMPANY COMP, FLT_OPR FO, CUST_AGENT_SCH_COLL_TIME SCT 
		WHERE
  			CAR_SHP.AWB_NO=CAR_AWB.AWB_NO AND CAR_SHP.AWB_DATE=CAR_AWB.AWB_DATE AND CAR_AWB.VAL_FOR_SCH_COLL='Y' AND COMP.CODE_DESC=CAR_AWB.APPNTD_AGENT 
  			AND FO.FLT_KEY=CAR_SHP.FLT_KEY AND FO.SCH_DATE=CAR_SHP.FLT_DATE AND FO.FLT_TYPE='A' AND SCT.CUST_NO=COMP.CODE AND SCT.EFF_TO >= SYSDATE AND PURPOSE='CRG' 
  			AND NOT EXISTS (SELECT d.AWB_NO FROM TRUCK_MANIFEST_DTL d, TRUCK_MANIFEST h WHERE h.TRUCK_MANF_NO=d.TRUCK_MANF_NO AND d.AWB_NO=CAR_SHP.AWB_NO AND 
	  			d.AWB_DATE=CAR_SHP.AWB_DATE AND d.FLT_KEY=CAR_SHP.FLT_KEY AND d.FLT_DATE=CAR_SHP.FLT_DATE AND (h.FINAL_TRUCK_MANF_IND='Y' OR 
	  			(TO_DATE(TO_CHAR(h.SCH_COLL_DATE, 'DDMONYY') || TO_CHAR(SCH_COLL_TO, '0000'), 'DDMONYYHH24MI') > SYSDATE AND h.FINAL_TRUCK_MANF_NO IS NULL))) AND
 			NOT EXISTS (SELECT d.AWB_NO FROM IMP_BOOKING_DTL d, IMP_BOOKING h WHERE h.BOOKING_NO=d.BOOKING_NO AND d.AWB_NO=CAR_SHP.AWB_NO AND 
	  			d.AWB_DATE=CAR_SHP.AWB_DATE AND d.FLT_KEY=CAR_SHP.FLT_KEY AND d.FLT_DATE=CAR_SHP.FLT_DATE AND (h.SRF_ISSUED='Y' OR TO_DATE(TO_CHAR(h.BKG_SLOT_DATE, 'DDMONYY') 
	  			|| TO_CHAR(BKG_SLOT_TO, '0000'), 'DDMONYYHH24MI') > SYSDATE)) AND 
  			NOT EXISTS (SELECT CODE FROM MAST_SPL_HAND_CODE WHERE SCH_COLL_YN='N' AND CODE IN (CAR_AWB.SPL_CODE1,CAR_AWB.SPL_CODE2,CAR_AWB.SPL_CODE3,CAR_AWB.SPL_CODE4,
  			CAR_AWB.SPL_CODE5,CAR_AWB.SPL_CODE6,CAR_AWB.SPL_CODE7,CAR_AWB.SPL_CODE8,CAR_AWB.SPL_CODE9)) 
  			AND NOT exists (SELECT CODE FROM MAST_CONSTRAINT_CODE WHERE SCH_COLL_YN='N' and CODE = NVL(V_CC.CC_CODE,'*'))
  			 AND CAR_SHP.MANIFEST_PCS <> CAR_SHP.CIR_PCS 
  			AND TO_DATE(TO_CHAR(FO.SCH_DATE,'DDMONYY')||''||LPAD(FO.ACT_TIME,4,0),'DDMONYYHH24MI') <= TO_DATE(#ftlUptoDateHrMin#,'DDMONYYHH24MI')
  			and NOT(CAR_SHP.RECD_PCS > 0 and awb_inv.invPcs = 0) 
  			and exists (SELECT SCH_COLL.TR_NO 
                            FROM CUST_AGENT_SCH_COLL_TIME SCH_COLL                            
                            WHERE 
                            PURPOSE='CRG' AND SYSDATE between SCH_COLL.EFF_From and SCH_COLL.EFF_TO AND SCH_COLL.cust_no = COMP.CODE )
        ]]>
	   <isNotEmpty property="agentName"> 
		AND CAR_AWB.APPNTD_AGENT=#agentName#
		</isNotEmpty>
		<isNotEmpty property="agentCode"> 
		AND COMP.CODE = #agentCode#
		</isNotEmpty>		
	   <!-- 
	    <isNotEmpty property="loginCarrier">
				   AND ( COMP.carr_code = #loginCarrier# OR  COMP.carr_code IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE  = #loginCarrier#))             
        </isNotEmpty>	
        -->
	</select>
	
	<!-- Changed for QR :: RANJITH -->
	<select id="getAwbList" parameterClass="cargo.cms.imprt.bo.TruckManfBO"  resultClass="cargo.cms.imprt.bo.TruckManfBO">
		<![CDATA[
			SELECT 
    			CAR_AWB.APPNTD_AGENT as agentName, COMP.CODE as agentCode, CAR_SHP.AWB_NO AS  awbNo, substr(CAR_SHP.AWB_NO,1,3)||'-'||substr(CAR_SHP.AWB_NO,4,8) AS  awbNoDisp,	
    			TO_CHAR(CAR_SHP.AWB_DATE,'DDMONYY') AS awbDate, V_COMMA_SEP_IMP_FLT_ULD_SHC(CAR_SHP.FLT_KEY,CAR_SHP.FLT_DATE,null,CAR_SHP.AWB_NO, 
    			TO_CHAR(CAR_SHP.AWB_DATE,'DDMONYY')) AS shc, CAR_SHP.FLT_KEY AS fltKey, TO_CHAR(CAR_SHP.FLT_DATE, 'DDMONYY') as fltDate ,
				DECODE(CAR_SHP.MANIFEST_PCS,null,'0',CAR_SHP.MANIFEST_PCS) AS manfPc,
				DECODE(CAR_SHP.MANIFEST_WT,null,'0',DECODE(trim(TO_CHAR(NVL(CAR_SHP.MANIFEST_WT,0),'99999990.0')),'0','',trim(TO_CHAR(NVL(CAR_SHP.MANIFEST_WT,0),'99999990.0')))) AS manfWt,
				DECODE(CAR_SHP.RECD_PCS,null,'0',CAR_SHP.RECD_PCS) AS bdPcs,
				DECODE(CAR_SHP.RECD_WT,null,'0',DECODE(trim(TO_CHAR(NVL(CAR_SHP.RECD_WT,0),'99999990.0')),'0.0','0',trim(TO_CHAR(NVL(CAR_SHP.RECD_WT,0),'99999990.0')))) AS bdWt
    		FROM 
    			IMP_CAR_SHP CAR_SHP
    			JOIN IMP_CAR_AWB CAR_AWB ON CAR_SHP.AWB_NO=CAR_AWB.AWB_NO AND CAR_SHP.AWB_DATE=CAR_AWB.AWB_DATE AND CAR_AWB.VAL_FOR_SCH_COLL='Y'
    			JOIN CUST_COMPANY COMP ON COMP.CODE_DESC=CAR_AWB.APPNTD_AGENT
    			LEFT OUTER JOIN V_CST_IMP_CC_CODE_AWB V_CC ON V_CC.FLT_KEY=CAR_SHP.FLT_KEY AND V_CC.FLT_DATE=CAR_SHP.FLT_DATE AND V_CC.AWB_NO=CAR_SHP.AWB_NO
				JOIN FLT_OPR FO ON FO.FLT_KEY = CAR_SHP.FLT_KEY and  FO.SCH_DATE = CAR_SHP.FLT_DATE and  FO.FLT_TYPE='A'
                left JOIN (select nvl(sum(LOCN_PCS),0) invPcs, nvl(sum(LOCN_WT),0) invWt, awb_no, awb_date, flt_key, flt_date
                			 from awb_inventory  where FLT_TYPE='I' group by awb_no, awb_date, flt_key, flt_date) 
                        			awb_inv ON awb_inv.AWB_NO=CAR_SHP.AWB_NO AND awb_inv.AWB_DATE=CAR_SHP.AWB_DATE and awb_inv.FLT_KEY = CAR_SHP.FLT_KEY and  awb_inv.FLT_DATE = CAR_SHP.FLT_DATE 
			WHERE  
				not exists (select d.AWB_NO from TRUCK_MANIFEST_DTL d, truck_manifest h where h.truck_manf_no = d.truck_manf_no 
          		and d.awb_no = CAR_SHP.AWB_NO and d.awb_date = CAR_SHP.AWB_DATE and d.FLT_KEY=CAR_SHP.FLT_KEY AND d.FLT_DATE=CAR_SHP.FLT_DATE
          		and (h.final_truck_manf_ind = 'Y' or (to_date(to_char(h.sch_coll_date,'DDMONYY')||to_char(Sch_coll_to,'0000'), 'DDMONYYHH24MI') > sysdate and 
          		h.final_truck_manf_no is null))) 
    			and not exists (select d.AWB_NO from IMP_BOOKING_DTL d, IMP_BOOKING h where h.booking_no = d.booking_no 
          		and d.awb_no = CAR_SHP.AWB_NO and d.awb_date = CAR_SHP.AWB_DATE and d.FLT_KEY = CAR_SHP.FLT_KEY AND d.FLT_DATE = CAR_SHP.FLT_DATE
          		and (h.srf_issued = 'Y' or to_date(to_char(h.bkg_slot_date,'DDMONYY')||to_char(bkg_slot_to,'0000'), 'DDMONYYHH24MI') > sysdate)) 
        		AND not exists (SELECT CODE FROM MAST_SPL_HAND_CODE WHERE SCH_COLL_YN='N' and code in (CAR_AWB.SPL_CODE1,CAR_AWB.SPL_CODE2,CAR_AWB.SPL_CODE3,
            	CAR_AWB.SPL_CODE4,CAR_AWB.SPL_CODE5,CAR_AWB.SPL_CODE6,CAR_AWB.SPL_CODE7,CAR_AWB.SPL_CODE8,CAR_AWB.SPL_CODE9))
	    		AND NOT exists (SELECT CODE FROM MAST_CONSTRAINT_CODE WHERE SCH_COLL_YN='N' and CODE = NVL(V_CC.CC_CODE,'*'))
      			AND NOT(CAR_SHP.MANIFEST_PCS = CAR_SHP.CIR_PCS AND CAR_SHP.CIR_PCS_TYPE = 'SL')   
      			AND TO_DATE(TO_CHAR(FO.SCH_DATE,'DDMONYY')||''||LPAD(FO.ACT_TIME,4,0),'DDMONYYHH24MI') <= TO_DATE(#ftlUptoDateHrMin#,'DDMONYYHH24MI')    			
                        and NOT(CAR_SHP.RECD_PCS > 0 and awb_inv.invPcs = 0)
	   ]]>
	   		<isNotEmpty property="agentName"> 
				AND CAR_AWB.APPNTD_AGENT=#agentName#
			</isNotEmpty>
			<isNotEmpty property="agentCode"> 
				AND COMP.CODE = #agentCode#
			</isNotEmpty>
			<isNotEmpty property="loginCarrier">
				   AND ( CAR_SHP.CARR_CODE = #loginCarrier# OR  CAR_SHP.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE  = #loginCarrier#))             
            </isNotEmpty>		
			order by CAR_SHP.AWB_NO
	</select>
	
	<select id="getAwbLocationSubList" parameterClass="cargo.cms.imprt.bo.TruckManfBO"  resultClass="cargo.cms.imprt.bo.TruckManfBO">
			SELECT 
   				INVNT.AWB_NO AS  awbNo,
    			substr(INVNT.AWB_NO,1,3)||'-'||substr(INVNT.AWB_NO,4,8) AS  awbNoDisp,	
   			 	TO_CHAR(INVNT.AWB_DATE,'DDMONYY') AS awbDate,
    			INVNT.LSP_NO as lspNo,
    			INVNT.LOCN_PCS AS invPc,
    			INVNT.LOCN_WT AS INVWT,
				INVNT.LOC_CODE as locCode,
    			INVNT.ULD_KEY as uldKey,
    			INVNT.FLT_KEY as fltKey,
    			TO_CHAR(INVNT.FLT_DATE,'DDMONYY') as fltDate,
                        (SELECT V.CC_CODE FROM V_CST_IMP_CC_CODE_AWB V
				WHERE nvl(V.FLT_KEY,'*') = NVL(INVNT.FLT_KEY,'*') AND nvl( V.FLT_DATE,'31AUG2000') = NVL(INVNT.FLT_DATE,'31AUG2000')
                                  AND V.AWB_NO =  INVNT.AWB_NO  AND NVL(V.HAWB_NO, '000000000000000000') =  '000000000000000000' AND ROWNUM = 1)  AS cc
    		From AWB_INVENTORY INVNT
    		Where INVNT.AWB_NO = #awbNo#
    		and INVNT.awb_date = #awbDate#
    		and INVNT.FLT_KEY = #fltKey# and INVNT.FLT_DATE = #fltDate#
    		<!-- and INVNT.LOC_CODE != #locCode# -->	
	</select>
	
	<select id="getCcode" parameterClass="cargo.cms.imprt.bo.TruckManfBO"  resultClass="java.lang.String">
			SELECT V.CC_CODE FROM V_CST_IMP_CC_CODE_AWB V
				WHERE nvl(V.FLT_KEY,'*') = NVL(#fltKey#,'*') AND nvl( V.FLT_DATE,'31AUG2000') = NVL(#fltDate#,'31AUG2000')
                AND V.AWB_NO = #awbNo# AND NVL(V.HAWB_NO, '000000000000000000') = '000000000000000000' AND ROWNUM = 1 
	</select>
	
	<select id="checkCutOffTime" parameterClass="java.lang.String"  resultClass="java.lang.Integer">
			select (to_date(#timeSlot#, 'DDMONYY HH24:MI') -  (SELECT RULE_value FROM CMSRULES WHERE RULE_CODE='TRUCK_MANF_CUT_OFF_TIME')) - sysdate from dual
	</select>
	
	<select id="getTimeSlot" parameterClass="cargo.cms.imprt.bo.TruckManfBO"  resultClass="cargo.cms.imprt.bo.TruckManfBO">	
		SELECT SCH_COLL.TR_NO AS timeSlotTr,SCH_COLL.CUST_NO AS agentCode,SCH_COLL.TIME_FROM AS timeFrom,SCH_COLL.TIME_TO AS timeTo,
		SCH_COLL.DAY_FRQ as dayFreq,
		substr(to_char(SCH_COLL.TIME_FROM,'0000'),1,3) ||':'|| substr(to_char(SCH_COLL.TIME_FROM,'0000'),4) AS timeFromDisp,
		substr(to_char(SCH_COLL.TIME_TO,'0000'),1,3) || ':' || substr(to_char(SCH_COLL.TIME_TO,'0000'),4) AS timeToDisp,
		TO_CHAR(SYSDATE,'HH24MI') AS currTime,TO_CHAR(SYSDATE,'HH24:MI') AS currTimeStr, TO_CHAR(SYSDATE,'D') AS currDay,TO_CHAR(SYSDATE,'DDMONYY') as currDate,
		TO_CHAR(SYSDATE,'DD/MM/YYYY') as frmtNextSlot, TO_CHAR(SCH_COLL.EFF_FROM, 'DDMONYY') as effFrom, 
			TO_CHAR(SCH_COLL.EFF_TO, 'DDMONYY') as effTo
		FROM CUST_AGENT_SCH_COLL_TIME SCH_COLL
		JOIN CUST_COMPANY COMP ON COMP.CODE=SCH_COLL.CUST_NO 
		WHERE 
 		PURPOSE='CRG' AND SYSDATE between SCH_COLL.EFF_From and SCH_COLL.EFF_TO 
		<isNotEmpty property="agentName"  > 
		AND COMP.CODE_DESC = #agentName#
		</isNotEmpty>
		<isNotEmpty property="agentCode"  > 
		AND COMP.CODE = #agentCode#
		</isNotEmpty>
		ORDER BY 
			TIME_FROM
	</select>
	
	<parameterMap id="FUN_GET_TIME_SLOT_DATE_map" class="map" >
	<parameter property="RESULT" jdbcType="VARCHAR"	javaType="java.lang.String" mode="OUT"/>                  
	<parameter property="p_agentid" jdbcType="VARCHAR"	javaType="java.lang.String" mode="IN"/>              
	<parameter property="v_truck_dock" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>             
	<parameter property="v_time_slot" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/> 
	<parameter property="v_tr_no" jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
	</parameterMap>		

	<procedure id="FUN_GET_TIME_SLOT_DATE"  parameterMap="FUN_GET_TIME_SLOT_DATE_map" >
		{? = call FUN_GET_TIME_SLOT_DATE(?,?,?,?)}
	</procedure>
	
	<select id="getTimeSlot_WITH_TR_NO" parameterClass="cargo.cms.imprt.bo.TruckManfBO"  resultClass="cargo.cms.imprt.bo.TruckManfBO">	
		SELECT SCH_COLL.TR_NO AS timeSlotTr,SCH_COLL.CUST_NO AS agentCode,SCH_COLL.TIME_FROM AS timeFrom,SCH_COLL.TIME_TO AS timeTo,
		SCH_COLL.DAY_FRQ as dayFreq,
		substr(to_char(SCH_COLL.TIME_FROM,'0000'),1,3) ||':'|| substr(to_char(SCH_COLL.TIME_FROM,'0000'),4) AS timeFromDisp,
		substr(to_char(SCH_COLL.TIME_TO,'0000'),1,3) || ':' || substr(to_char(SCH_COLL.TIME_TO,'0000'),4) AS timeToDisp,
		TO_CHAR(SYSDATE,'HH24MI') AS currTime,TO_CHAR(SYSDATE,'HH24:MI') AS currTimeStr, TO_CHAR(SYSDATE,'D') AS currDay,TO_CHAR(SYSDATE,'DDMONYY') as currDate,
		TO_CHAR(SYSDATE,'DD/MM/YYYY') as frmtNextSlot, TO_CHAR(SCH_COLL.EFF_FROM, 'DDMONYY') as effFrom, 
			TO_CHAR(SCH_COLL.EFF_TO, 'DDMONYY') as effTo
		FROM CUST_AGENT_SCH_COLL_TIME SCH_COLL
		WHERE 
 		PURPOSE='CRG' AND SYSDATE between SCH_COLL.EFF_From and SCH_COLL.EFF_TO 
		<isNotEmpty property="timeSlotTr"  > 
			AND SCH_COLL.TR_NO = #timeSlotTr#
		</isNotEmpty>
		ORDER BY TIME_FROM
	</select>
	<select id="addDate" parameterClass="java.lang.Integer"  resultClass="cargo.cms.imprt.bo.TruckManfBO">
		select to_char(sysdate + #days#,'DDMONYY') as nextSlot, to_char(sysdate + #days#,'DDMONYY') as currDate,to_char(sysdate+ #days#,'DD/MM/YYYY') as frmtNextSlot from dual	
	</select>
	<select id="check_iata"  parameterClass="java.lang.String" resultClass="java.lang.String">
		<![CDATA[
		select CO_IATA_CODE from CUST_COMPANY where CO_IATA_CODE = #iataCode# and AGENT_YN='Y'
		]]>
	</select>
	<insert id="insRtrvMoveOrder" parameterClass="cargo.cms.imprt.bo.TruckManfBO">
		INSERT INTO 
			RTRV_MOVE_ORDER (FUNC,AWB_NO,CURR_LOCN,LSP,ULD,PC,WT,TARGET,STATUS,CR_USER_ID,
			CR_DATE,LM_USER_ID,LM_DATE,TYPE,INV_TYPE,AWB_DATE,REF_NO) 
		VALUES 
			('TRK_MNFST', #awbNo#, #locCode#, #lspNo#, #uldKey#, #invPc#, #invWt#, #truckDock#, #orderStatus#, 
			#createdUserId#, SYSDATE, #modifiedUserId#, SYSDATE, #orderType#, #invType#, TO_DATE(#awbDate#, 'DDMONYY'),#manfNo#)
	</insert>
	<update id="updSchColl" parameterClass="cargo.cms.imprt.bo.TruckManfBO">
		UPDATE IMP_CAR_AWB 
		SET VAL_FOR_SCH_COLL='N'
		WHERE AWB_NO=#awbNo# AND AWB_DATE=to_date(#awbDate#,'DDMONYY') 
	</update>
	<select id="seqNo" parameterClass="java.lang.String" resultClass="java.lang.String">
	 select trim(to_char(TRK_MANF_SEQ.nextval,'000000')) as nextval from dual 
	</select>
	<insert id="insTruckManf" parameterClass="cargo.cms.imprt.bo.TruckManfBO">
		INSERT INTO 
			TRUCK_MANIFEST (AGENT_CODE,CR_DATE,CR_USER_ID,LM_DATE,LM_USER_ID,SCH_COLL_DATE,TIME_SLOT_TR_NO,TRUCK_MANF_NO,SCH_COLL_FROM,SCH_COLL_TO,TRUCK_DOCK) 
		VALUES 
			(#agentCode#,SYSDATE,#createdUserId# ,SYSDATE,#modifiedUserId#, #nextSlot#,#timeSlotTr# , #manfNo#,#timeFrom#,#timeTo#, #truckDock# )
	</insert>
	<select id="getManfNo" parameterClass="cargo.cms.imprt.bo.TruckManfBO" resultClass="java.lang.String">
	 SELECT MAX(TRUCK_MANF_NO) FROM TRUCK_MANIFEST WHERE AGENT_CODE=#agentCode# AND TIME_SLOT_TR_NO=#timeSlotTr#
	</select>
	
	<!--  Changed for QR -->
	<insert id="insTruckManfDtl" parameterClass="cargo.cms.imprt.bo.TruckManfBO">
		INSERT INTO 
			TRUCK_MANIFEST_DTL (AWB_DATE,AWB_NO,CR_DATE,CR_USER_ID,DOC_LINE_NO,FLT_DATE,FLT_KEY,FLT_TYPE,LM_DATE,
			LM_USER_ID,TRUCK_MANF_NO) 
		VALUES 
			(TO_DATE(#awbDate#, 'DDMONYY'), #awbNo#,SYSDATE,#createdUserId#,#docLine# , TO_DATE(#fltDate#, 'DDMONYY'), #fltKey#, 'I', SYSDATE, #modifiedUserId#, 
			#manfNo#)
	</insert>
	
	<select id="cutOffTime" parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT RULE_VALUE FROM CMSRULES WHERE RULE_CODE='TRUCK_MANF_CUT_OFF_TIME'
	</select>
	<!-- Changed for QR :: RANJITH -->
	<!--<select id="getAuthRep" parameterClass="cargo.cms.imprt.bo.TruckManfBO" resultClass="cargo.cms.imprt.bo.TruckManfBO">
		SELECT AUTH_REP_NAME AS authRepName,AUTH_REP_ID AS authRepId FROM CUST_AGENT_AUTH_REP WHERE CUST_NO=#agentCode# and rownum =1
	</select>
	-->
	<select id="getTruckkDock" parameterClass="cargo.cms.imprt.bo.TruckManfBO" resultClass="java.lang.String">
		SELECT STRAGG(STRINGDELIM(TRUCK_DOCK,',')) AS truckDock 
			FROM CUST_AGENT_SCH_COLL_TRUCK_DOCK CTD
			JOIN CUST_AGENT_SCH_COLL_TIME SCT on  SCT.TR_NO= CTD.TR_NO
			join CUST_COMPANY  COMP ON COMP.CODE=SCT.CUST_NO 
			where sysdate between eff_from and eff_to and SCT.purpose='CRG' and COMP.CODE_DESC = #agentName#
			AND COMP.CODE = #agentCode# 
	</select>
	<select id="getCurrTime"  resultClass="java.lang.String">
		SELECT TO_CHAR(SYSDATE,'HH24MI') FROM DUAL
	</select>
	<select id="getLockLspUld" parameterClass="cargo.cms.imprt.bo.TruckManfBO" resultClass="cargo.cms.imprt.bo.TruckManfBO">
		SELECT case when INVNT.ULD_KEY is not null THEN (SELECT LOCKED FROM ULD_INVENTORY WHERE ULD_KEY=INVNT.ULD_KEY) 
    	ELSE 'N' END AS uldLock,INVNT.ULD_KEY AS uldKey,INVNT.LSP_NO AS lspNo,
    	CASE WHEN INVNT.LSP_NO IS NOT NULL THEN (SELECT LOCKED FROM lsp_INVENTORY WHERE LSP_NO=INVNT.LSP_NO) ELSE 'N' END AS lspLock,
    	INVNT.LOC_CODE AS locCode,GRP.WH_TYPE AS whType,INVNT.LOCN_PCS AS invPc,INVNT.LOCN_WT AS invWt,INVNT.AWB_NO as awbNo
    	FROM AWB_INVENTORY INVNT
    	JOIN MAST_WH_LOC LOC ON INVNT.LOC_CODE=LOC.CODE
    	JOIN MAST_WH_GROUP GRP ON LOC.WH_GROUP=GRP.WH_GROUP
    	WHERE INVNT.AWB_NO=#awbNo# and to_char(INVNT.AWB_DATE,'DDMONYY')= to_date(#awbDate#,'DDMONYY')
    	AND (ULD_KEY is not null or LSP_NO is not null)
	</select>
	
	<select id="checkSplAllow" parameterClass="java.lang.String" resultClass="java.lang.Integer">
           select count(1) from mast_spl_hand_code where code = #shc# and nvl(sch_coll_yn,'N') = 'N'
	</select>
	<select id="countJoMoTrkManf" parameterClass="cargo.cms.imprt.bo.TruckManfBO" resultClass="java.lang.Integer">
		select count(1) from RTRV_MOVE_ORDER where AWB_NO=#awbNo# and AWB_DATE=TO_DATE(#awbDate#, 'DD-MON-YY') and CURR_LOCN=#locCode#
		<isNotEmpty property="lspNo"  > 
		and LSP=#lspNo#
		</isNotEmpty>
		<isNotEmpty property="uldKey"  > 
		and ULD=#uldKey#
		</isNotEmpty>
	</select>
	<!-- Changed for QR :: RANJITH -->
	<!--<update id="updateMOJOTrkManf" parameterClass="cargo.cms.imprt.bo.TruckManfBO">
		UPDATE RTRV_MOVE_ORDER SET STATUS='CANCELLED' WHERE AWB_NO=#awbNo# AND CURR_LOCN=#locCode# AND AWB_DATE=TO_DATE(#awbDate#, 'DDMONYY')
		<isNotEmpty property="lspNo"  > 
		and LSP=#lspNo#
		</isNotEmpty>
		<isNotEmpty property="uldKey"  > 
		and ULD=#uldKey#
		</isNotEmpty>
	</update>
	-->
	<!-- Changed for QR :: RANJITH -->
	<!--<select id="getTruckManfAndDocLineNumber" parameterClass="cargo.cms.imprt.bo.TruckManfBO" resultClass="cargo.cms.imprt.bo.TruckManfBO">
		 SELECT MAX(TRUCK_MANF_NO) AS manfNo,
  				MAX(DOC_LINE_NO)   AS docLine
   			FROM truck_manifest
   			WHERE AGENT_CODE = #agentCode#
	</select>
	-->
	
	<!-- Changed for QR :: RANJITH -->
	<select id="fetchLocnGrpLevel"  parameterClass="java.lang.String" resultClass="cargo.cms.imprt.bo.TruckManfBO">
	      select loc.loc_level locLevel ,
	      		 grp.wh_type groupType
        	from mast_wh_loc loc 
        			join mast_wh_group  grp on loc.wh_group = grp.wh_group 
        	where loc.code = UPPER(#locCode#)
	</select>
	
	<insert id="insTruckManfInventoryInfo" parameterClass="cargo.cms.imprt.bo.TruckManfBO">
		INSERT INTO	TRUCK_MANIFEST_INVENTORY_INFO 
			(TRUCK_MANF_NO,DOC_LINE_NO,DTL_DOC_LINE_NO,AWB_NO,AWB_DATE,LOC_CODE,LSP_NO,ULD_KEY,PCS,WT,FLT_KEY,FLT_DATE,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,TRUCK_DOCK,LOCN_TYPE) 
		VALUES 
			(#manfNo#,#docLine#,#dtlDocLine#,#awbNo#,#awbDate#,#locCode#,#lspNo#,#uldKey#,#invPc#,#invWt#,#fltKey#,#fltDate#,#createdUserId#,SYSDATE,#modifiedUserId#,SYSDATE,#truckDock#,#locnType#)
	</insert>
	<select id="fetchDummyLocnPcs" parameterClass="cargo.cms.imprt.bo.TruckManfBO"  resultClass="java.lang.Integer">
		SELECT NVL((SELECT (MANIFEST_PCS - RECD_PCS) FROM IMP_CAR_SHP WHERE AWB_NO=#awbNo# AND AWB_DATE=TO_DATE(#awbDate#, 'DDMONYY') AND 
			FLT_KEY=#fltKey# AND FLT_DATE=TO_DATE(#fltDate#, 'DDMONYY')), 0) FROM DUAL
	</select>
	<!-- Truck Manifest -->
<!-- Restore Awb Storage :: Ranjith :: Starts -->
	<select id="imp_getAwbDateList"  parameterClass="cargo.cms.imprt.bo.ProcessedFFMBO"  resultClass="cargo.cms.imprt.bo.CommonSearchBO">
	select to_char(awb_date,'DDMONYY') codeId ,		to_char(awb_date,'DDMONYY') codeDesc
	from awb where awb_No = #awbNo# and awb_closed_yn = 'N' Order By awb_date desc
	</select>
	
	<select id="getHeaderRestoreAWBStorage"  parameterClass="cargo.cms.imprt.bo.CarShpBO" 
	 resultClass="cargo.cms.imprt.bo.CarShpBO">
		SELECT 
		   awb.AWB_NO as awbNo,
		   substr(awb.awb_no,0,3) as awbPrefix,		   
		   awb.CONTENT as content,
		   awb.CATALOG as catalog,
		   TO_CHAR(awb.AWB_DATE,'DDMONYY') as awbDate,	
		   awb.PPK_TYPE as ppkType,
		   awb.AWB_CLOSED_YN as awbClosed,
		    awb.ORIG as awbOrigin,  
		   awb.DEST as awbDest ,
		   awb.AWB_TYPE as awbType ,
		   pkg_common.get_awb_splcodes(awb.AWB_NO, awb.AWB_DATE , awb.AWB_TYPE) AS splCodeConcatinated
	FROM AWB awb  
	WHERE awb.AWB_NO = UPPER(#awbNo#)
	 AND awb.AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')	
</select>	


<select id="querycheckrecdpcsandcountbyawbno"  parameterClass="java.lang.String" 
	 resultClass="cargo.cms.imprt.bo.AWBStorDtlBO">
	SELECT count(1) as noOfRecords, sum(LOCN_PCS) as locnPcs
		from  AWB_INVENTORY 	
	 WHERE AWB_NO = UPPER(#awbNo#)
</select>	
	
<!-- Changed for QR :: RANJITH -->
<select id="queryawbstrgdtlbyawbno"  parameterClass="cargo.cms.imprt.bo.CarShpBO" 
		resultClass="cargo.cms.imprt.bo.AWBStorDtlBO">
	SELECT 
	A.CARR_CODE as carrCode, 
	to_char(A.FLT_DATE,'DDMONYY') as fltDate, 
	A.FLT_KEY as fltKey, 
	A.AWB_NO as awbNo, 
	AWB.AWB_TYPE as awbType,
	to_char(A.AWB_DATE,'DDMONYY') as awbDate, 
	A.ULD_KEY as uldKey,
	A.ULD_KEY as oldUldKey,
	(select CONTR_CODE from ULD_INVENTORY u where u.ULD_KEY = a.ULD_KEY) as contourCode,
	A.LOC_CODE as locCode, 
	A.LOCN_PCS as locnPcs,
	A.LOCN_WT as locnWt, 
	A.LSP_NO as lspNo, 
	A.LSP_NO as oldLspNo,
	A.DAM_IND as damInd,
	NVL(A.WH_DAM_IND,'N') as whDamInd, 
	A.DAM_PCS	as damPcs, 
	A.DAM_WT as damWt,
	A.SEQ_NO as seqNo,
	decode(UPPER(A.DAM_TYPE),'MAJOR','Y','N') as damIndMajor,
    decode(UPPER(A.DAM_TYPE),'MINOR','Y','N') as damIndMinor,
	(case when (select  count(1) from awb_inventory aa where aa.lsp_no=A.LSP_NO) > 1 then 'Shpm:1+'
	 else (select to_char(l.REF_WT) from lsp_inventory l where l.lsp_no=A.lsp_no) end)  as lspRefWt,
	 case when (select  count(1) from awb_inventory aa where aa.uld_key=A.uld_key) > 1 then 'Shpm:1+' 
  	else (select to_char(u.REF_WT) from uld_inventory u where u.uld_key=A.uld_key) end as uldRefWt,
  	(select to_char(l.REF_WT) from lsp_inventory l where l.lsp_no=A.lsp_no)  as lspRefWt1,
	(select to_char(u.REF_WT) from uld_inventory u where u.uld_key=A.uld_key) as uldRefWt1,
	decode(U.tare_weight,null,M.tare_wt,U.tare_weight) tareWt,
	A.SRF_NO as srfNo, 
	A.TRM_NO as trmNo,
	A.CDIF_NO as cdifNo,
	A.STRG_RMK as strgRmk,
	A.FLT_TYPE as fltType,	 
	decode(AWB.awb_type, 'I', pkg_common.get_flt_ata(a.flt_key, a.flt_date, 'A'), pkg_common.get_flt_eta(a.flt_key, a.flt_date, 'D')) as ata,
  	case when AWB.awb_type =  'E' then awb.car_yn
  	else (select car_created from imp_car_shp s 
  				where s.awb_no = a.awb_no and s.awb_date = a.awb_date 
  				and NVL(a.flt_key,'*') = s.flt_key
  				and NVL(a.flt_date,'13JAN2000') = s.flt_date) end carCreatedYn,
	nvl((Select DECODE(E.PPK_IND,'Y','Y',DECODE(E.MIX_PPK_IND,'Y','Y','N')) from ULD_INVENTORY e 
				where  e.ULD_KEY = a.ULD_KEY), 'N') ppkInd,
	decode((select CIR_PROC_USER from imp_car_shp shp WHERE A.FLT_KEY = shp.FLT_KEY AND A.FLT_DATE = shp.FLT_DATE
								  AND A.AWB_NO = shp.AWB_NO AND A.AWB_DATE = shp.AWB_DATE) ,null,'N','Y') maintainCir,
	A.RTN_NO rtnNo,
	DECODE(U.HANDLING_MODE,'NBK','Y','PPK','Y','N') nbkYN,
	NVL(A.DLV_YN,'N') as dlvInd
	From  AWB_INVENTORY A
  	JOIN AWB awb ON awb.AWB_NO = A.AWB_NO AND awb.awb_date = A.awb_date 
  	LEFT JOIN ULD_INVENTORY U ON A.ULD_KEY = U.ULD_KEY  
  	LEFT JOIN MAST_CSD M ON A.LSP_NO = M.CODE  	
	WHERE A.AWB_NO = UPPER(#awbNo#) AND
	A.AWB_DATE = #awbDate# 
	</select>


<update id="updateimpawbstrgdtl" parameterClass="cargo.cms.imprt.bo.AWBStorDtlBO">
 UPDATE IMP_AWB_STRG_DTL  
 
 SET 
   ULD_TYPE = #uldType#,	
   ULD_NO = #uldNo#, 
   ULD_CARR = #uldCarr#,
   ULD_KEY = #uldKey#,
   WH_DEST = #whDest#,
   LOC_CODE = #locCode#, 
   LSP_NO = #lspNo#, 
   DAM_IND = #damInd#,
<!--   RMK = #rmk#, -->
   LM_USER_ID =  #userID#, 
   LM_DATE   =  sysdate

 WHERE TR_NO = #trNo# AND
 	   DOC_LINE_NO = #docLineNo#

</update>			
	
<delete id="deleteimpawbstrgdtl" parameterClass="cargo.cms.imprt.bo.AWBStorDtlBO">
	DELETE IMP_AWB_STRG_DTL  
	WHERE TR_NO = #trNo# AND
			DOC_LINE_NO = #docLineNo#
</delete>

<update id="updateimpcarshprestore" parameterClass="cargo.cms.imprt.bo.CarShpBO">
	UPDATE IMP_CAR_SHP
	SET     LM_USER_ID =  #userID#, 
			LM_DATE   =  sysdate
	WHERE  AWB_NO	  =   #awbNo#  AND
		   AWB_DATE	  =	  TO_DATE(#awbDate#,'DDMONYY') AND
		   FLT_KEY = UPPER(#fltKey#) AND
		   FLT_DATE = TO_DATE(#fltDate#,'DDMONYY')
		
</update>	  

<select id="getseqforrestoreawbstorage" parameterClass="java.lang.String" resultClass="java.lang.String">	
	SELECT AWB_RELOC_SEQ.nextval as nextVal from dual
</select>	
	
	<!-- Changed for QR :: RANJITH -->
<!--<select id="getpremanifestawbbyawbno" parameterClass="java.lang.String" resultClass="java.lang.String">	
	SELECT count(1) as count from EXP_PMANIFEST_AWB where AWB_NO = #awbNo#
</select>	
	
-->
<insert id="insertawbrelochd" parameterClass="cargo.cms.imprt.bo.AWBStorDtlBO">
insert into AWB_RELOC_HD
  (TR_NO, CR_USER_ID, CR_DATE, LM_USER_ID, 
    LM_DATE,AWB_NO, AWB_DATE, RELOC_TYPE)
values (#trNo#, #userID#, sysdate, #userID#,
	   sysdate, #awbNo#, #awbDate#, #relocType#)
</insert>

<insert id="insertawbrelociss" parameterClass="cargo.cms.imprt.bo.AWBStorDtlBO">
insert into AWB_RELOC_ISS
  (TR_NO, DOC_LINE_NO,
   LOC_CODE, LOCN_PCS, LOCN_WT, 
   LSP_NO, ULD_KEY, 
	<!--PPK_IND, -->
   FLT_NO, FLT_DATE, FLT_TYPE, 
   FLT_KEY, SRF_NO, TRM_NO, 
   CDIF_NO, CR_USER_ID, CR_DATE, 
   LM_USER_ID, LM_DATE,DAM_IND
 <!--  BULK_WT, BUP_WT-->
	) 
values 
   (#trNo#, #docLineNo#,
    #locCode#, #locnPcs#, #locnWt#,
	#lspNo#, #uldKey#, 
	<!--NVL(#pkgInd#,'B'),-->
	#fltNo#, #fltDate#, #fltType#,
	#fltKey#, #srfNo#, #trmNo#,
	#cdifNo#, #userID#, SYSDATE,
	#userID#, SYSDATE, NVL(#damInd#,'N')
	<!--NVL(#bulkWt#,0), NVL(#bupWt#,0)-->
	)			
</insert>	
	
<insert id="insertawbrelocrec" parameterClass="cargo.cms.imprt.bo.AWBStorDtlBO">
insert into AWB_RELOC_RECV
  (TR_NO, DOC_LINE_NO, 
   LOC_CODE, LOCN_PCS, LOCN_WT, 
   LSP_NO, ULD_KEY, 
	<!--PPK_IND, -->
   FLT_NO, FLT_DATE, FLT_TYPE, 
   FLT_KEY, SRF_NO, TRM_NO, 
   CDIF_NO, CR_USER_ID, CR_DATE, 
   LM_USER_ID, LM_DATE, DAM_IND
 <!--  BULK_WT, BUP_WT, RMK-->
	) 
values 
   (#trNo#, #docLineNo#,
    #locCode#, #locnPcs#, #locnWt#,
	#lspNo#, #uldKey#, 
	<!--NVL(#pkgInd#,'B'),-->
	#fltNo#, #fltDate#, #fltType#,
	#fltKey#, #srfNo#, #trmNo#,
	#cdifNo#, #userID#, SYSDATE,
	#userID#, SYSDATE, NVL(#damInd#,'N')
	<!--NVL(#bulkWt#,0), NVL(#bupWt#,0), #strgRmk#-->
	)			
</insert>		

<select id="getHouseDtl" parameterClass="java.lang.String" resultClass="cargo.cms.imprt.bo.AWBStorDtlBO">	
select hawb_no hawbNo,strg_pcs hawbPc,strg_wt hawbWt from hawb_inventory where seq_no = #seqNo#
</select>	

<select id="getRelocateTagOldULDDtl" parameterClass="java.lang.String" resultClass="cargo.cms.imprt.bo.AWBStorDtlBO">	
SELECT ULD_KEY AS oldUldKey,LSP_NO AS oldLspNo,LOC_CODE AS locCode FROM AWB_INVENTORY WHERE seq_no=#seqNo#
</select>	


<update id="sqlUpdateHawbData" parameterClass="cargo.cms.imprt.bo.AWBStorDtlBO">
update hawb_inventory 
set STRG_PCS = NVL(STRG_PCS,0)+NVL(#hawbPc#,0),
	STRG_WT = NVL(STRG_WT,0)+NVL(#hawbWt#,0)
where SEQ_NO = #seqNo# 	AND HAWB_NO = #hawbNo#
</update>

<delete id="sqlDeleteHawbData" parameterClass="cargo.cms.imprt.bo.AWBStorDtlBO">
delete from hawb_inventory where SEQ_NO = #seqNo# 
</delete>
<insert id="sqlInsertHawbData" parameterClass="cargo.cms.imprt.bo.AWBStorDtlBO">
	insert into hawb_inventory
	(SEQ_NO,
	HAWB_NO,
	STRG_PCS,
	STRG_WT,
	CR_USER_ID,
	CR_DATE,
	LM_USER_ID,
	LM_DATE)
	values(#seqNo#,
	#hawbNo#,
	#hawbPc#,
	#hawbWt#,
	'ADMIN1',
	sysdate,
	'ADMIN1',
	sysdate)
</insert>
<select id="queryawbstrgdtlbyawbnohht"  parameterClass="cargo.cms.imprt.bo.CarShpBO" 
	 resultClass="cargo.cms.imprt.bo.AWBStorDtlBO">
SELECT 
   A.CARR_CODE as carrCode, 
   to_char(A.FLT_DATE,'DDMONYY') as fltDate, 
   A.FLT_KEY as fltKey, 
   A.AWB_NO as awbNo, 
   to_char(A.AWB_DATE,'DDMONYY') as awbDate, 
   A.ULD_KEY as uldKey,
   (select CONTR_CODE from ULD_INVENTORY u where u.ULD_KEY = A.ULD_KEY) as contourCode,
   A.LOC_CODE as locCode, 
   A.LOCN_PCS as locnPcs,
   A.LOCN_WT as locnWt, 
   A.LSP_NO as lspNo, 
   A.DAM_IND as damInd,
   A.SRF_NO as srfNo, 
   A.TRM_NO as trmNo,
   A.CDIF_NO as cdifNo,
   A.STRG_RMK as strgRmk,
   awb.AWB_TYPE as awbType,
   A.FLT_TYPE as fltType,
   A.SEQ_NO as seqNo,
   nvl((Select DECODE(E.PPK_IND,'Y','Y',DECODE(E.MIX_PPK_IND,'Y','Y','N')) from ULD_INVENTORY e where  e.ULD_KEY = a.ULD_KEY), 'N') ppkInd,
   NVL(A.ULD_KEY, NVL(TO_CHAR(A.LSP_NO), RTRIM(A.LOC_CODE, '/'))) uldKeyHht	 ,
   NVL(A.DLV_YN,'N') as dlvInd		
   From  AWB_INVENTORY A 
   JOIN AWB awb ON awb.AWB_NO = A.AWB_NO 
   AND awb.awb_date = A.awb_date
 WHERE 
	<dynamic>
		<isNotEmpty property="awbNo">
			A.AWB_NO = UPPER(#awbNo#) AND
	        A.AWB_DATE = #awbDate#
			<isNotEmpty property="uldKey">
				AND
			</isNotEmpty>
			<isNotEmpty property="lspNo">
				AND
			 </isNotEmpty>		
		</isNotEmpty>	
		<isNotEmpty property="uldKey">
			A.ULD_KEY = #uldKey#
	     </isNotEmpty>	
		<isNotEmpty property="lspNo">
			A.LSP_NO = #lspNo#
	     </isNotEmpty>	
	</dynamic>
</select>

<select id="sqlgetawbclosedYN"  parameterClass="java.util.HashMap" 
	 resultClass="java.lang.Integer">
	 select count(1) from AWB where AWB_NO=#awbNo# and AWB_DATE=#awbDate# and AWB_CLOSED_YN is not null and AWB_CLOSED_YN='Y'
</select>



<select id="sqlgetTareWt"  parameterClass="java.util.HashMap" 
	 resultClass="java.lang.String">	 
	 <isEqual property="key" compareValue="uld">
	select  TARE_WEIGHT tareWt from mast_uld_type where CODE=substr(#value#,0,3)
	 </isEqual>
	 
	 <isEqual property="key" compareValue="lsp">
	select  TARE_WT tareWt from mast_csd where CODE=#value# 
	 </isEqual>  
</select>

<select id="sqlgetUldTareWt"  parameterClass="java.util.HashMap" 
	 resultClass="java.lang.String">	 
	SELECT TARE_WEIGHT as tareWeight
			 FROM ULD_TYPE_CARR_TARE_WT
			  where ULD_TYPE=UPPER(#uldType#) and ULD_CARR=UPPER(#uldCarr#) 
		 and UPPER(#uldNo#) between ULD_NO_FROM and ULD_NO_TO
</select>



<select id="sqlGetHsePcWt"  parameterClass="java.util.HashMap" 
	 resultClass="java.lang.String">
	 select HAWB_PCS||'-'||HAWB_WT from MAST_HAWB 
	 where AWB_NO=#awb# and AWB_DATE=#awbDate# AND HAWB_NO=#hawb# and ROWNUM = 1
</select>

 <select id="isValidHawbtoRestore" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
  				 select count(1)  from  hawb_inventory
                WHERE  HAWB_NO=#hawb#
                <iterate prepend="AND" property="arrList" open="(" close=")" conjunction="OR" >
                                SEQ_NO = #arrList[]#
                </iterate> 
</select>

<select id="sqlGetPcSum"  parameterClass="java.lang.String" 
	 resultClass="java.lang.Integer">
	 select NVL(sum(STRG_PCS),0) from HAWB_INVENTORY where Seq_no = #seqNo#
</select>

<select id="sqlGetWtSum"  parameterClass="java.lang.String" 
	 resultClass="java.lang.String">
	 select NVL(sum(STRG_WT),0) from HAWB_INVENTORY where Seq_no = #seqNo#
</select>


<select id="sqlgetLSPShpments"  parameterClass="java.lang.String" 
	 resultClass="java.lang.Integer">
	select count(1) from awb_inventory where LSP_NO = #lspNo# 
</select>


<select id="checkULDPPKMixRestoreAwbStrg" parameterClass="java.lang.String" resultClass="java.lang.Integer">
	select count(1) from ULD_INVENTORY 
	where ULD_KEY = #PARAM# 
	and (MIX_PPK_IND = 'Y' or PPK_IND = 'Y')
	and REBUILD_YN = 'N' 
	and TOPUP_YN = 'N' 	
</select>
	
	<select id="sqlChkAwbInvNegPcWt" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		<![CDATA[
			SELECT COUNT(1) FROM AWB_INVENTORY WHERE AWB_NO=#awbNo# AND AWB_DATE=TO_DATE(#awbDate#,'DDMONYY') AND (LOCN_PCS < 0 OR LOCN_WT < 0)
		]]>
	</select>
		<select id="checkcorrectlocinULDInInventory" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		<![CDATA[
			select count(1) from uld_inventory where uld_key=#uldKey# and loc_code=#loc#
		]]>
	</select>
<!--  Restore AWB storage :: Ranjith :: ENDS -->

<!-- Function for identifying Transfer Group::Ranjith::Starts -->
<!-- Changed for QR :: RANJITH -->
<!--<select id="sqlGetTransferGroupForUld" parameterClass="java.util.HashMap" resultClass="cargo.cms.imprt.bo.MaintainTowOrderBO">
		SELECT IUL.ULD_KEY uldKey ,
		  HO.AIR_SIDE airSide,
		  HOAREA.HO_AREA hoArea ,
		  IUL.TRANSFER_TYPE transferType,
		  IUL.TRANSIT_IND transitInd,
		  (SELECT COUNT(1)  
          FROM IMP_CAR_AWB A
          JOIN IMP_CAR_SHP S ON A.AWB_NO = S.AWB_NO AND A.AWB_DATE = S.AWB_DATE
          JOIN EDI_FFM_SHP FS ON FS.AWB_NO = S.AWB_NO AND FS.FLT_KEY = S.FLT_KEY AND FS.FLT_DATE = S.FLT_DATE
          JOIN EDI_FFM_ULD FU ON FU.TR_NO = FS.TR_NO AND FU.DOC_LINE_NO = FS.UDOC_LINE_NO
          JOIN EDI_FFM_MSG FM ON FM.TR_NO = FU.TR_NO AND FM.FFM_STATUS = 'P'
          WHERE FU.ULD_KEY = IUL.ULD_KEY AND FU.FLT_KEY = IUL.FLT_KEY AND FU.FLT_DATE = IUL.FLT_DATE
          AND EXISTS (SELECT NULL FROM MAST_SPL_HAND_CODE CD WHERE CD.ECT_HANDLR IS NOT NULL 
            AND CODE IN (A.SPL_CODE1, A.SPL_CODE2, A.SPL_CODE3, A.SPL_CODE4, A.SPL_CODE5, A.SPL_CODE6, A.SPL_CODE7, A.SPL_CODE8, A.SPL_CODE9))) ect,
      (SELECT COUNT(1)  
          FROM IMP_CAR_AWB A
          JOIN IMP_CAR_SHP S ON A.AWB_NO = S.AWB_NO AND A.AWB_DATE = S.AWB_DATE
          JOIN EDI_FFM_SHP FS ON FS.AWB_NO = S.AWB_NO AND FS.FLT_KEY = S.FLT_KEY AND FS.FLT_DATE = S.FLT_DATE
          JOIN EDI_FFM_ULD FU ON FU.TR_NO = FS.TR_NO AND FU.DOC_LINE_NO = FS.UDOC_LINE_NO
          JOIN EDI_FFM_MSG FM ON FM.TR_NO = FU.TR_NO AND FM.FFM_STATUS = 'P'
          WHERE FU.ULD_KEY = IUL.ULD_KEY AND FU.FLT_KEY = IUL.FLT_KEY AND FU.FLT_DATE = IUL.FLT_DATE
          AND EXISTS (SELECT NULL FROM MAST_SPL_HAND_CODE CD WHERE SSR = 'Y' 
            AND CODE IN (A.SPL_CODE1, A.SPL_CODE2, A.SPL_CODE3, A.SPL_CODE4, A.SPL_CODE5, A.SPL_CODE6, A.SPL_CODE7, A.SPL_CODE8, A.SPL_CODE9))) ssr,      
      (SELECT COUNT(1)  
          FROM IMP_CAR_AWB A
          JOIN IMP_CAR_SHP S ON A.AWB_NO = S.AWB_NO AND A.AWB_DATE = S.AWB_DATE
          JOIN EDI_FFM_SHP FS ON FS.AWB_NO = S.AWB_NO AND FS.FLT_KEY = S.FLT_KEY AND FS.FLT_DATE = S.FLT_DATE
          JOIN EDI_FFM_ULD FU ON FU.TR_NO = FS.TR_NO AND FU.DOC_LINE_NO = FS.UDOC_LINE_NO
          JOIN EDI_FFM_MSG FM ON FM.TR_NO = FU.TR_NO AND FM.FFM_STATUS = 'P'
          WHERE FU.ULD_KEY = IUL.ULD_KEY AND FU.FLT_KEY = IUL.FLT_KEY AND FU.FLT_DATE = IUL.FLT_DATE
          AND EXISTS (SELECT NULL FROM CUST_AIRL_SPL_CODE CD WHERE CD.CARR_CODE = FLT.CARR_CODE AND SPL_TYPE = 'SPL_VAL' 
            AND SPL_CODE IN (A.SPL_CODE1, A.SPL_CODE2, A.SPL_CODE3, A.SPL_CODE4, A.SPL_CODE5, A.SPL_CODE6, A.SPL_CODE7, A.SPL_CODE8, A.SPL_CODE9))) val,      
      (SELECT COUNT(1)  
          FROM IMP_CAR_AWB A
          JOIN IMP_CAR_SHP S ON A.AWB_NO = S.AWB_NO AND A.AWB_DATE = S.AWB_DATE
          JOIN EDI_FFM_SHP FS ON FS.AWB_NO = S.AWB_NO AND FS.FLT_KEY = S.FLT_KEY AND FS.FLT_DATE = S.FLT_DATE
          JOIN EDI_FFM_ULD FU ON FU.TR_NO = FS.TR_NO AND FU.DOC_LINE_NO = FS.UDOC_LINE_NO
          JOIN EDI_FFM_MSG FM ON FM.TR_NO = FU.TR_NO AND FM.FFM_STATUS = 'P'
          WHERE FU.ULD_KEY = IUL.ULD_KEY AND FU.FLT_KEY = IUL.FLT_KEY AND FU.FLT_DATE = IUL.FLT_DATE
          AND EXISTS (SELECT NULL FROM CUST_AIRL_SPL_CODE CD WHERE CD.CARR_CODE = FLT.CARR_CODE AND SPL_TYPE = 'SPL_ODD_SIZ' 
            AND SPL_CODE IN (A.SPL_CODE1, A.SPL_CODE2, A.SPL_CODE3, A.SPL_CODE4, A.SPL_CODE5, A.SPL_CODE6, A.SPL_CODE7, A.SPL_CODE8, A.SPL_CODE9))) odd,      
		  CNTG_FLT_KEY CNTGFLTKEY,
		  CNTG_FLT_DATE CNTGFLTDATE
		FROM IMP_ULD_LIST IUL
		  JOIN FLT_OPR FLT
		  ON IUL.FLT_KEY   = FLT.FLT_KEY AND IUL.FLT_DATE = FLT.SCH_DATE AND FLT.FLT_TYPE = 'A'
		LEFT OUTER JOIN MAST_WH_AREA AREA
		ON AREA.WH_AREA = NVL(IUL.SYSTEM_HDLY_AREA, IUL.MANUAL_HDLY_AREA)
		LEFT OUTER JOIN
		  (SELECT AHDR.FLT_KEY,
		    AHDR.FLT_DATE ,
		    ADTL.HO_AREA ,
		    ADTL.OPS_AREA
		  FROM IMP_HOAREA_HD AHDR,
		    IMP_HOAREA_DTL ADTL
		  WHERE AHDR.TR_NO = ADTL.TR_NO
		  ) HOAREA
		ON IUL.FLT_KEY   = HOAREA.FLT_KEY
		AND IUL.FLT_DATE = HOAREA.FLT_DATE
		  AND AREA.WH_OPS_AREA = HOAREA.OPS_AREA
		LEFT OUTER JOIN MAST_WH_AREA HO
		ON HO.WH_AREA = HOAREA.HO_AREA
		  LEFT OUTER JOIN DDT_MSG MSG
		  ON IUL.FLT_KEY   = MSG.FLT_KEY
		AND IUL.FLT_DATE = MSG.FLT_DATE
		LEFT OUTER JOIN DDT_ULD ULD
		ON IUL.ULD_KEY = ULD.ULD_KEY
		  AND MSG.TR_NO = ULD.TR_NO
		WHERE IUL.FLT_KEY = #fltKey# AND IUL.FLT_DATE = TO_DATE(#fltDate#, 'DDMONYY')
		AND IUL.ULD_KEY = #uldKey# 
	</select>-->
<!-- Changed for QR :: RANJITH -->
<!--<select id="sqlGetTransferGroupForAwb" parameterClass="java.util.HashMap" resultClass="cargo.cms.imprt.bo.MaintainTowOrderBO">
		SELECT '' uldKey,
		  ffm.awb_no awbNo,
		  '' hoArea,
		  shpdtl.TRF_TYPE transferType,
		  'N' transitInd,
		    (select count(1) from mast_spl_hand_code cd where ect_handlr is not null and code in (cawb.SPL_CODE1,cawb.SPL_CODE2,cawb.SPL_CODE3,cawb.SPL_CODE4,cawb.SPL_CODE5,cawb.SPL_CODE6,cawb.SPL_CODE7,cawb.SPL_CODE8,cawb.SPL_CODE9)) ect,
		    (select count(1) from mast_spl_hand_code cd where ssr = 'Y' and code in (cawb.SPL_CODE1,cawb.SPL_CODE2,cawb.SPL_CODE3,cawb.SPL_CODE4,cawb.SPL_CODE5,cawb.SPL_CODE6,cawb.SPL_CODE7,cawb.SPL_CODE8,cawb.SPL_CODE9)) ssr,
		  (select count(1) from cust_airl_spl_code cd where cd.carr_code = ffm.carr_code and spl_type = 'SPL_VAL' and spl_code in (cawb.SPL_CODE1,cawb.SPL_CODE2,cawb.SPL_CODE3,cawb.SPL_CODE4,cawb.SPL_CODE5,cawb.SPL_CODE6,cawb.SPL_CODE7,cawb.SPL_CODE8,cawb.SPL_CODE9)) val,
		  (select count(1) from cust_airl_spl_code cd where cd.carr_code = ffm.carr_code and spl_type = 'SPL_ODD_SIZ' and spl_code in (cawb.SPL_CODE1,cawb.SPL_CODE2,cawb.SPL_CODE3,cawb.SPL_CODE4,cawb.SPL_CODE5,cawb.SPL_CODE6,cawb.SPL_CODE7,cawb.SPL_CODE8,cawb.SPL_CODE9)) odd,
		  shpdtl.CNTG_FLT_KEY cntgFltKey,
		    shpdtl.CNTG_FLT_DATE cntgFltDate
		   FROM
		  (SELECT shp.awb_no,
		    msg.flt_key      ,
		    msg.flt_date, msg.carr_code
		     FROM edi_ffm_msg msg,
		    edi_ffm_shp shp      ,
		    edi_ffm_uld uld
		    WHERE msg.tr_no = shp.tr_no
		 	AND msg.tr_no     = uld.tr_no
		    AND uld.doc_line_no = shp.udoc_line_no
		    AND msg.ffm_status = 'P'
		  	AND uld.uld_key  IS NULL
		  ) ffm    
		  LEFT OUTER JOIN ddt_msg msg
		  on ffm.flt_key   = msg.flt_key
		AND ffm.flt_date = msg.flt_date
		LEFT OUTER JOIN ddt_shp shp
		ON shp.awb_no = ffm.awb_no 
		  and shp.tr_no = msg.tr_no
		  left join DDT_SHP_TRF_DTL shpdtl
		  on shpdtl.tr_no = shp.tr_no and shpdtl.sdoc_line_no = shp.doc_line_no
		  left join imp_car_shp cshp on ffm.flt_key = cshp.flt_key and ffm.flt_date = cshp.flt_date and cshp.awb_no = ffm.awb_no
		  left join imp_car_awb cawb on cshp.awb_no = cawb.awb_no and cshp.awb_date = cawb.awb_date
		WHERE
		ffm.flt_key = #fltKey#
		AND ffm.flt_date = TO_DATE(#fltDate#, 'DDMONYY')
		AND ffm.awb_no awbNo = #awbNo#
	</select>-->
	
	<!-- Changed for QR :: RANJITH -->
<!--<select id="sqlGetTranferTypeForTransferGroup" parameterClass="java.util.HashMap" resultClass="java.lang.String">
select TRF_TYPE||'-'||DOC_LINE_NO from DDT_ULD where uld_key = #uldKey# and tr_no = (select tr_no from DDT_MSG where flt_key =#fltKey# and  flt_date =#fltDate#)
</select>-->

<!-- Changed for QR :: RANJITH -->
<!--<select id="sqlGetShcListForTransferGroup" parameterClass="java.lang.String" resultClass="cargo.cms.imprt.bo.MaintainTowOrderBO">
select a.spl_code1 splCode1,
a.spl_code2 splCode2,
a.spl_code3 splCode3,
a.spl_code4 splCode4,
a.spl_code5 splCode5,
a.spl_code6 splCode6,
a.spl_code7 splCode7,
a.spl_code8 splCode8,
a.spl_code9 splCode9
from imp_car_awb a where exists 
(select awb_no from ddt_shp where udoc_line_no=#docLine# and awb_no= a.awb_no and awb_date= a.awb_date)
</select>-->

<!-- Changed for QR :: RANJITH -->
<!--<select id="sqlGetValShcTypeForTransferGroup" parameterClass="cargo.cms.imprt.bo.MaintainTowOrderBO" resultClass="java.lang.Integer">
select count(1) from CUST_AIRL_SPL_CODE
where spl_type='SPL_VAL'
and (spl_code = #splCode1# or
spl_code = #splCode2# or
spl_code = #splCode3# or
spl_code = #splCode4# or
spl_code = #splCode5# or
spl_code = #splCode6# or
spl_code = #splCode7# or
spl_code = #splCode8# or
spl_code = #splCode9#
)
</select>-->

<!-- Changed for QR :: RANJITH -->
<!--<select id="sqlGetOddShcTypeForTransferGroup" parameterClass="cargo.cms.imprt.bo.MaintainTowOrderBO" resultClass="java.lang.Integer">
select count(1) from CUST_AIRL_SPL_CODE
where spl_type='SPL_ODD'
and (spl_code = #splCode1# or
spl_code = #splCode2# or
spl_code = #splCode3# or
spl_code = #splCode4# or
spl_code = #splCode5# or
spl_code = #splCode6# or
spl_code = #splCode7# or
spl_code = #splCode8# or
spl_code = #splCode9#
)
</select>-->

<!-- Changed for QR :: RANJITH -->
<!-- <select id="sqlGetTranferGroup" parameterClass="java.lang.String" resultClass="java.lang.String">
select RULE_VALUE from CMSRULES where RULE_CODE=#ruleCode# 
</select> -->

<!-- Changed for QR :: RANJITH -->
<!--<select id="sqlGetPriorityForTransferGroup" parameterClass="java.lang.String" resultClass="java.lang.String">
select RULE_VALUE from CMSRULES where RULE_CODE=#ruleCode# 
</select>-->

<!-- Changed for QR :: RANJITH -->
<!--<select id="sqlGetValPriorityForTransferGroup" parameterClass="cargo.cms.imprt.bo.MaintainTowOrderBO" resultClass="java.lang.Integer">
select max(priority) from mast_spl_hand_code
where code in (select spl_code from CUST_AIRL_SPL_CODE
where spl_type='SPL_VAL'
and (spl_code = #splCode1# or
spl_code = #splCode2# or
spl_code = #splCode3# or
spl_code = #splCode4# or
spl_code = #splCode5# or
spl_code = #splCode6# or
spl_code = #splCode7# or
spl_code = #splCode8# or
spl_code = #splCode9#
))
</select>-->

<!-- Changed for QR :: RANJITH -->
<!--<select id="sqlGetOddPriorityForTransferGroup" parameterClass="cargo.cms.imprt.bo.MaintainTowOrderBO" resultClass="java.lang.Integer">
select max(priority) from mast_spl_hand_code
where code in (select spl_code from CUST_AIRL_SPL_CODE
where spl_type='SPL_ODD'
and (spl_code = #splCode1# or
spl_code = #splCode2# or
spl_code = #splCode3# or
spl_code = #splCode4# or
spl_code = #splCode5# or
spl_code = #splCode6# or
spl_code = #splCode7# or
spl_code = #splCode8# or
spl_code = #splCode9#
))
</select>-->

<!-- Changed for QR :: RANJITH -->
<!--<select id="sqlGetHOAreaForTransferGroup" parameterClass="java.util.HashMap" resultClass="cargo.cms.imprt.bo.MaintainTowOrderBO">
select HO_AREA mhsHoArea from IMP_HOAREA_DTL where TR_NO = (select MAX(TO_NUMBER(TR_NO)) from IMP_HOAREA_HD where FLT_KEY=#fltKey# and to_char(FLT_DATE,'DDMONYY') = #fltDate#)
</select>-->

<!-- Changed for QR :: RANJITH -->
<!--<select id="sqlcheckAirSideForTransferGroup" parameterClass="java.lang.String" resultClass="java.lang.Integer">
select count(1) from MAST_WH_AREA where WH_AREA = #area# and AIR_SIDE is not null and AIR_SIDE = 'Y'
</select>-->

<!-- Changed for QR :: RANJITH -->
<!--<select id="sqlGetUdocLineNoForTransferGroup" parameterClass="java.util.HashMap" resultClass="java.lang.String">
select efd.DOC_LINE_NO from EDI_FFM_ULD efd
join  EDI_FFM_MSG efm
on efd.tr_no = efm.tr_no
where efd.FLT_KEY = #fltKey#  and efd.FLT_DATE = #fltDate# and efd.ULD_KEY = #uldKey#
and nvl(efm.ffm_status,'XXX') = 'P'
</select>-->

<!-- Changed for QR :: RANJITH -->
<!--<select id="sqlcheckDirectTowForTransferGroup" parameterClass="cargo.cms.imprt.bo.MaintainTowOrderBO" resultClass="java.lang.Integer">
select count(1) from MAST_SPL_HAND_CODE
where ECT_HANDLR is null
and (code = #splCode1# or
code = #splCode2# or
code = #splCode3# or
code = #splCode4# or
code = #splCode5# or
code = #splCode6# or
code = #splCode7# or
code = #splCode8# or
code = #splCode9#
)</select>-->

<!-- Changed for QR :: RANJITH -->
<!--<select id="sqlcheckSSRForTransferGroup" parameterClass="cargo.cms.imprt.bo.MaintainTowOrderBO" resultClass="java.lang.Integer">
select count(1) from MAST_SPL_HAND_CODE
where ssr is not null and ssr='Y'
and (code = #splCode1# or
code = #splCode2# or
code = #splCode3# or
code = #splCode4# or
code = #splCode5# or
code = #splCode6# or
code = #splCode7# or
code = #splCode8# or
code = #splCode9#
)</select>-->

<!-- Changed for QR :: RANJITH -->
<!--<select id="sqlGetAwbTrTypeTransferGroup" parameterClass="java.util.HashMap" resultClass="java.lang.String">
select TRF_TYPE||'-'|| doc_line_no from ddt_shp_trf_dtl 
where SDOC_LINE_NO = (
select doc_line_no from ddt_shp where udoc_line_no in (
select doc_line_no from ddt_uld where TR_NO =
(select tr_no from DDT_MSG where flt_key =#fltKey# and  to_char(flt_date,'DDMONYY') =#fltDate#)) and AWB_NO = #awbNo# )
</select>-->

<!-- Changed for QR :: RANJITH -->
<!--<select id="sqlGetSdocLineNoForTransferGroup" parameterClass="java.util.HashMap" resultClass="java.lang.String">
select DOC_LINE_NO from EDI_FFM_SHP where FLT_KEY = #fltKey# and FLT_DATE = #fltDate# and AWB_NO = #awbNo#
</select>-->

<!-- Function for identifying Transfer Group::Ranjith::Ends -->

	<!-- Finalize Truck Manifest :: Anup :: Starts -->
	<select id="find_agt_coll_sch_time" parameterClass="java.lang.String" resultClass="cargo.cms.imprt.bo.TruckManifestBO">
		SELECT tr_no truckTrNo,
			DAY_FRQ as dayFrq, TIME_FROM as timeFrom, TIME_TO as timeTo, TO_CHAR(EFF_FROM, 'DDMONYY') as effFrom, 
			TO_CHAR(EFF_TO, 'DDMONYY') as effTo, TO_CHAR(SYSDATE, 'DDMONYY HH24MI') as currentDt 
		FROM 
			CUST_AGENT_SCH_COLL_TIME 
		WHERE 
			CUST_NO=#agentCode# AND EFF_TO >= SYSDATE and purpose='CRG'
		ORDER BY 
			TIME_FROM
	</select>
	<select id="find_agentCode_by_iataCode" parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT 
			CODE 
		FROM 
			CUST_COMPANY 
		WHERE 
			CO_IATA_CODE=#iataCode# AND AGENT_YN='Y'
	</select>
	<select id="find_iataCode_by_agtCode" parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT 
			CO_IATA_CODE 
		FROM 
			CUST_COMPANY 
		WHERE 
			CODE=#agentCode# AND AGENT_YN='Y'
	</select>
	
	<!-- Changed for QR :: RANJITH -->
	<!--<select id="find_agt_credit_bal"  parameterClass="java.lang.String"  resultClass="java.lang.String">	
	<![CDATA[
		SELECT 
			NVL(CR_BAL, 0) creditBal
		FROM 
			CUST_AGENT_CREDIT
		WHERE 
			CR_EFF_DATE_FROM <= trunc(SYSDATE) AND CR_EFF_DATE_TO >= trunc(SYSDATE)
			AND CUST_NO = #apptdAgtCode# AND ROWNUM = 1	
	]]>
	</select>
	-->
	
	<!-- Changed for QR :: RANJITH -->
	<!--<select id="find_truckdock_by_agtCode" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT 
			B.TRUCK_DOCK 
		FROM 
			CUST_AGENT_SCH_COLL_TIME A, CUST_AGENT_SCH_COLL_TRUCK_DOCK B 
		WHERE 
			B.TR_NO=A.TR_NO AND A.CUST_NO=#agtCode# AND DAY_FRQ LIKE '%'||#dayOfWk#||'%' AND TIME_FROM=#timeFrm# AND TIME_TO=#timeTo#
	</select>
	-->
	
	<!-- Changed for QR :: RANJITH -->
	<!--<select id="find_truck_shp_dtls" parameterClass="cargo.cms.imprt.bo.TruckManifestBO" resultClass="cargo.cms.imprt.bo.TruckManifestBO">
		SELECT 
			TO_CHAR(B.AWB_DATE, 'DDMONYY') as awbDate, B.AWB_NO as awbNo, B.FLT_KEY as fltNo, TO_CHAR(B.FLT_DATE, 'DDMONYY') as fltDate, 
			TO_CHAR(B.CR_DATE, 'DDMONYY') as crDate, B.TRUCK_MANF_NO as truckManifestNo, NVL(C.MANIFEST_PCS, 0) as manPcs, NVL(C.MANIFEST_WT, 0) as manWt, 
			D.DOC_CHK_COMP as docChkComp, D.DOC_CHK_REQ as docChkReq, E.CC_CODE as ccCode, D.CONTENT as cont, 
			(SELECT SUM(LOCN_PCS) FROM AWB_INVENTORY WHERE AWB_NO=B.AWB_NO AND AWB_DATE=B.AWB_DATE AND FLT_KEY=B.FLT_KEY AND FLT_DATE=B.FLT_DATE) as locnPcs, 
      		(SELECT SUM(LOCN_WT) FROM AWB_INVENTORY WHERE AWB_NO=B.AWB_NO AND AWB_DATE=B.AWB_DATE AND FLT_KEY=B.FLT_KEY AND FLT_DATE=B.FLT_DATE) as locnWt, 
			PKG_COMMON.GET_FLT_ATA(C.FLT_KEY,C.FLT_DATE,'A') AS ata, C.CARR_CODE as carrCode, SUBSTR(TRIM(B.AWB_NO),1,3)||'-'||SUBSTR(TRIM(B.AWB_NO),4) as awbNoDisplay 
		FROM 
			TRUCK_MANIFEST A, TRUCK_MANIFEST_DTL B, IMP_CAR_SHP C LEFT JOIN V_CST_IMP_CC_CODE_AWB E ON E.FLT_KEY=C.FLT_KEY AND E.FLT_DATE=C.FLT_DATE 
			AND E.AWB_NO=C.AWB_NO, IMP_CAR_AWB D, FLT_OPR F 
		WHERE 
			F.FLT_KEY=B.FLT_KEY AND F.SCH_DATE=B.FLT_DATE AND F.FLT_TYPE='A' AND D.AWB_NO=B.AWB_NO AND D.AWB_DATE=B.AWB_DATE AND 
			C.AWB_NO=B.AWB_NO AND C.AWB_DATE=B.AWB_DATE AND C.FLT_KEY=B.FLT_KEY AND C.FLT_DATE=B.FLT_DATE AND 
			B.TRUCK_MANF_NO=A.TRUCK_MANF_NO AND A.FINAL_TRUCK_MANF_IND='N' AND A.AGENT_CODE=#agentCode#
			AND A.FINAL_TRUCK_MANF_NO IS NULL AND B.AWB_NO NOT IN (SELECT AWB_NO FROM IMP_BOOKING_DTL WHERE 
			AWB_DATE=B.AWB_DATE AND FLT_KEY=B.FLT_KEY AND FLT_DATE=B.FLT_DATE)
	</select>
	-->
	<select id="find_shc_by_priority" parameterClass="map" resultClass="java.lang.String">
 		SELECT 
 			CODE 
 		FROM 
 			IMP_CAR_AWB A, MAST_SPL_HAND_CODE B 
		WHERE 
			(B.CODE=A.SPL_CODE1 OR B.CODE=A.SPL_CODE2 OR B.CODE=A.SPL_CODE3 OR B.CODE=A.SPL_CODE4 OR B.CODE=A.SPL_CODE5 OR B.CODE=A.SPL_CODE6 OR 
			B.CODE=A.SPL_CODE7 OR B.CODE=A.SPL_CODE8 OR B.CODE=A.SPL_CODE9) AND A.AWB_NO=#awbNo# AND A.AWB_DATE=TO_DATE(#awbDate#, 'DDMONYY') 
		ORDER BY 
			PRIORITY
 	</select>
 	<!-- Changed for QR :: RANJITH -->
	<!--<select id="find_awb_move_order_status" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT 
			STATUS 
		FROM 
			RTRV_MOVE_ORDER 
		WHERE 
			AWB_NO=#awbNo# AND AWB_DATE=#awbDate#
	</select>
	-->
	<select id="fetchAuthPersonForAjax" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	 	SELECT AUTH_REP_NAME AS authRepName from CUST_AGENT_AUTH_REP where UPPER(AUTH_REP_NAME) like 
	 	UPPER(#keySearchStr# ||'%') and ROWNUM &lt;= #maxRecFetch# and BLACK_LISTED='N' ORDER BY AUTH_REP_NAME
	</select>
	<select id="find_valid_authPerson_for_agt" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT 
			COUNT(1) 
		FROM 
			CUST_AGENT_AUTH_REP 
		WHERE 
			CUST_NO=#custNo# AND AUTH_REP_NAME=#agtRepName# AND AUTH_REP_ID=#authRepId#
	</select>
	<update id="upd_sch_coll_notvalid" parameterClass="java.util.HashMap">
		UPDATE 
			IMP_CAR_AWB 
		SET
			VAL_FOR_SCH_COLL = 'N' 
		WHERE 
			AWB_NO = #awbNo# AND AWB_DATE = #awbDate#
	</update>
	<select id="find_all_truck_manfst" parameterClass="java.lang.String" resultClass="cargo.cms.imprt.bo.TruckManifestBO">
		SELECT 
			TRUCK_MANF_NO as truckManifestNo, AGENT_CODE as agentCode, TIME_SLOT_TR_NO as timeSlotTrNo, TO_CHAR(SCH_COLL_DATE, 'DDMONYY') as timeSlot, 
			FINAL_TRUCK_MANF_IND as finalTrkMnfstInd, FINAL_TRUCK_MANF_NO as finalTrkMnfstNo, AUTH_REP_NAME as authPerson, AUTH_REP_ID as authRepId, 
			TRUCK1 as truck1, TRUCK2 as truck2, TRUCK3 as truck3, TRUCK4 as truck4, TRUCK5 as truck5, CPCT_ID as cpctId, SCH_COLL_FROM as schCollFrom, 
			SCH_COLL_TO as schCollTo, DOC_LINE_NO as docLineNo, TRUCK_DOCK truckDock
		FROM 
			TRUCK_MANIFEST 
		WHERE 
			TRUCK_MANF_NO=#truckMnfstNo# AND FINAL_TRUCK_MANF_IND='N'
	</select>
	<select id="find_all_truck_manfst_dtls" parameterClass="cargo.cms.imprt.bo.TruckManifestBO" resultClass="cargo.cms.imprt.bo.TruckManifestBO">
		SELECT 
			TRUCK_MANF_NO as truckManifestNo, DOC_LINE_NO as docLineNo, AWB_NO as awbNo, TO_CHAR(AWB_DATE, 'DDMONYY') as awbDate, FLT_KEY as fltNo, 
			TO_CHAR(FLT_DATE, 'DDMONYY') as fltDate, FLT_TYPE as fltType 
		FROM 
			TRUCK_MANIFEST_DTL 
		WHERE 
			TRUCK_MANF_NO=#truckManifestNo# and doc_line_no = #docLineNo# 
	</select>
	<insert id="insert_truck_manifest" parameterClass="cargo.cms.imprt.bo.TruckManifestBO">
		INSERT INTO 
			TRUCK_MANIFEST 
			(TRUCK_MANF_NO, AGENT_CODE, TIME_SLOT_TR_NO, SCH_COLL_DATE, FINAL_TRUCK_MANF_IND, AUTH_REP_NAME, 
			AUTH_REP_ID, TRUCK1, TRUCK2, TRUCK3, TRUCK4, TRUCK5, CPCT_ID, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE, DOC_LINE_NO, 
			SCH_COLL_FROM, SCH_COLL_TO,TRUCK_DOCK) 
		VALUES 
			(#finalTrkMnfstNo#, #agentCode#, #timeSlotTrNo#, TO_DATE(#timeSlot#, 'DDMONYY'), #finalTrkMnfstInd#, 
			#authPerson#, #authRepId#, #truck1#, #truck2#, #truck3#, #truck4#, #truck5#, #cpctId#, #crUserid#, SYSDATE, #crUserid#, 
			SYSDATE, TRK_MANF_SEQ.nextval, #schCollFrom#, #schCollTo#,#truckDock#)
	</insert>
	<insert id="insert_truck_manifest_dtls" parameterClass="cargo.cms.imprt.bo.TruckManifestBO">
		INSERT INTO 
			TRUCK_MANIFEST_DTL 
			(TRUCK_MANF_NO, DOC_LINE_NO, AWB_NO, AWB_DATE, FLT_KEY, FLT_DATE, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE, FLT_TYPE) 
		VALUES 
			(#finalTrkMnfstNo#, #docLineNo#, #awbNo#, TO_DATE(#awbDate#, 'DDMONYY'), #fltNo#, TO_DATE(#fltDate#, 'DDMONYY'), #crUserid#, 
			SYSDATE, #crUserid#, SYSDATE, #fltType#)
	</insert>
	
	<insert id="insert_truck_manifest_InventoryInfo" parameterClass="cargo.cms.imprt.bo.TruckManifestBO">
		INSERT INTO	TRUCK_MANIFEST_INVENTORY_INFO 
		(TRUCK_MANF_NO,DOC_LINE_NO,DTL_DOC_LINE_NO,AWB_NO,AWB_DATE,LOC_CODE,LSP_NO,ULD_KEY,PCS,WT,FLT_KEY,FLT_DATE,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,TRUCK_DOCK,LOCN_TYPE) 
		VALUES 
		(#finalTrkMnfstNo#,#docLineNo#,#dtlDocLineNo#,#awbNo#,#awbDate#,#location#,#lspNo#,#uldKey#,#locnPcs#,#locnWt#,#fltNo#,#fltDate#,#crUserid#,SYSDATE,#crUserid#,SYSDATE,#truckDock#,#locnType#)
	</insert>

	<insert id="select_insert_truck_manifest_InventoryInfo" parameterClass="cargo.cms.imprt.bo.TruckManifestBO">
		INSERT INTO	TRUCK_MANIFEST_INVENTORY_INFO 
				(TRUCK_MANF_NO ,DOC_LINE_NO,DTL_DOC_LINE_NO,AWB_NO,AWB_DATE,LOC_CODE,LSP_NO,ULD_KEY,PCS,WT,FLT_KEY,FLT_DATE,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,TRUCK_DOCK,LOCN_TYPE) 
			(select #finalTrkMnfstNo#,#docLineNo#,DTL_DOC_LINE_NO,AWB_NO,AWB_DATE,LOC_CODE,LSP_NO,ULD_KEY,PCS,WT,FLT_KEY,FLT_DATE,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,TRUCK_DOCK,LOCN_TYPE
	    from TRUCK_MANIFEST_INVENTORY_INFO 
	    where truck_manf_no = #truckManifestNo# and DOC_LINE_NO=#oldDocLineNo#)
		
	</insert>
	<select id="generate_truck_mnfst_no" resultClass="java.lang.String">
		SELECT LTRIM(TO_CHAR(TRK_MANF_SEQ.NEXTVAL, '000000')) AS truckMnfstNo FROM DUAL
	</select>
	<update id="update_old_truck_manifest" parameterClass="cargo.cms.imprt.bo.TruckManifestBO">
		UPDATE 
			TRUCK_MANIFEST 
		SET
			FINAL_TRUCK_MANF_NO = #finalTrkMnfstNo# 
		WHERE
			TRUCK_MANF_NO = #truckManifestNo#
	</update>
	
	<!-- Changed for QR :: RANJITH -->
	<select id="find_truck_overlapping" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		SELECT 
			COUNT(1) 
		FROM 
			TRUCK_MANIFEST 
		WHERE 
			TO_DATE((to_char(SCH_COLL_DATE,'DDMONYY') || ' ' || TO_CHAR(NVL(SCH_COLL_FROM,0),'0000')), 'DDMONYY HH24MI') BETWEEN 
			TO_DATE(#timePeriodFrom#, 'DDMONYY HH24MI') AND TO_DATE(#timePeriodTo#, 'DDMONYY HH24MI') 
			AND (TRUCK1=#truckNo# OR TRUCK2=#truckNo# OR TRUCK3=#truckNo# OR TRUCK4=#truckNo# OR TRUCK5=#truckNo#)
	</select>
	
	<!-- Changed for QR :: RANJITH -->
	
	<!--<select id="find_agent_os_charges" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT
			   NVL(SUM(a.osCharge), 0) as totalOSPayment
		FROM (SELECT CA.AGENT_CUST_NO, count(1) cnt , CARR_CODE, APPNTD_AGENT, sum(gt.osCharge) osCharge
			FROM IMP_CAR_SHP CS      
			JOIN (select AWB_NO, AWB_DATE, FLT_DATE, FLT_KEY, count(1) cnt from AWB_INVENTORY 
				GROUP BY AWB_NO, AWB_DATE, FLT_DATE, FLT_KEY) AI 
			   		   ON AI.AWB_DATE = CS.AWB_DATE AND AI.AWB_NO = CS.AWB_NO
               AND AI.FLT_DATE = CS.FLT_DATE AND AI.FLT_KEY = CS.FLT_KEY               
			JOIN IMP_CAR_AWB CA ON CA.AWB_NO = CS.AWB_NO AND CA.AWB_DATE = CS.AWB_DATE
			left join (select AWB_NO, AWB_DATE, sum(AAT_OS + AIRL_OS) osCharge from GT_OS_CHARGES group by AWB_NO, AWB_DATE) GT 
				 ON GT.AWB_NO = CS.AWB_NO AND GT.AWB_DATE = CS.AWB_DATE         
			WHERE CS.CARR_CODE = NVL('', CS.CARR_CODE)
			GROUP BY CA.AGENT_CUST_NO, CARR_CODE, APPNTD_AGENT) A  
		LEFT JOIN 	CUST_COMPANY CC ON CC.CODE = A.AGENT_CUST_NO 
		WHERE NVL(CC.CODE_DESC, A.APPNTD_AGENT) = #agtName# 
		AND NVL(CC.CO_IATA_CODE, '*') = NVL(#iataCode#, NVL(CC.CO_IATA_CODE, '*'))
	</select>
	-->
	
	<!-- Changed for QR :: RANJITH -->
	
	<!--<select id="find_os_cash_Credit" parameterClass="java.util.HashMap" resultClass="cargo.cms.imprt.bo.FullAWBInfoBO">
		SELECT     
		  NVL(CC.CODE_DESC, CA.APPNTD_AGENT) as codeDesc,
		  CA.AGENT_CUST_NO as code,
          0 as osCredit,
          0 as osCash,
          CA.CATALOG as catalog,
          nvl(GT.AAT_OS,0) AS aatOSch,
          nvl(GT.AIRL_OS,0) AS  airlOSch
          FROM IMP_CAR_SHP CS
            JOIN (select AWB_NO, AWB_DATE, FLT_KEY, FLT_DATE, count(1) cnt, SUM(LOCN_PCS) LOCN_PCS, SUM(LOCN_WT) LOCN_WT
                   from AWB_INVENTORY 
                   GROUP BY AWB_NO, AWB_DATE, FLT_KEY, FLT_DATE) AI 
                           ON AI.AWB_DATE = CS.AWB_DATE AND AI.AWB_NO = CS.AWB_NO AND AI.FLT_DATE = CS.FLT_DATE AND AI.FLT_KEY = CS.FLT_KEY
            JOIN IMP_CAR_AWB CA ON CA.AWB_NO = CS.AWB_NO AND CA.AWB_DATE = CS.AWB_DATE
            LEFT JOIN CUST_COMPANY CC ON CC.CODE = CA.AGENT_CUST_NO
           join FLT_OPR f on f.FLT_KEY  = CS.FLT_KEY  AND f.SCH_DATE =  CS.FLT_DATE  and f.flt_type='A' 
            LEFT JOIN GT_OS_CHARGES GT ON GT.AWB_NO = CS.AWB_NO AND GT.AWB_DATE = CS.AWB_DATE   
           WHERE NVL(CC.CODE_DESC, CA.APPNTD_AGENT) = #agtName#
          AND CS.AWB_NO=#awbNo# AND CS.AWB_DATE=TO_DATE(#awbDate#, 'DDMONYY') 
          AND FLT_KEY=#fltNo# AND CS.FLT_DATE=TO_DATE(#fltDate#, 'DDMONYY')
	</select>
	-->
	<select id="findValidAgent" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		SELECT 
			COUNT(1) 
		FROM 
			CUST_COMPANY 
		WHERE 
			AGENT_YN='Y' AND ACTIVE='Y' AND BLACKLISTED='N' AND CODE_DESC=#agtName#
	</select>
	<select id="findHKIDByRepName" parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT AUTH_REP_ID FROM CUST_AGENT_AUTH_REP WHERE AUTH_REP_NAME=#authRepName#
	</select>
	<select id="checkTruckSrfErr" parameterClass="cargo.cms.imprt.bo.TruckManifestBO" resultClass="java.lang.Integer">
		select count(1) from truck_manifest_dtl where awb_no=#awbNo# and awb_date=to_date(#awbDate#,'DDMONYY') and err_rmk is not null and truck_manf_no = #truckManfNo#
	</select>
	<select id="findAgtCodeByAgtNameTrkMnfst" parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT CODE FROM CUST_COMPANY WHERE CODE_DESC = #agtName#
	</select>
	<select id="findAgtNameByAgtCodeTrkMnfst" parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT CODE_DESC FROM CUST_COMPANY WHERE CODE = #agtCode#
	</select>
	
	<!-- Changed for QR :: RANJITH -->
	<select id="findTruckDocksForAgent" parameterClass="java.lang.String" resultClass="java.lang.String">
	<![CDATA[
		SELECT 
			STRAGG(STRINGDELIM(TRUCK_DOCK, ', ')) 
		FROM 
			CUST_AGENT_SCH_COLL_TIME A, CUST_AGENT_SCH_COLL_TRUCK_DOCK B 
		WHERE 
			B.TR_NO=A.TR_NO AND A.CUST_NO=#agtCode# AND EFF_TO >= SYSDATE AND EFF_FROM <=SYSDATE and purpose='CRG' 
		]]>
	</select>
	
	<select id="findTruckDocksForAgent_With_TRNO" parameterClass="java.util.HashMap" resultClass="java.lang.String">
	<![CDATA[
			SELECT STRAGG(STRINGDELIM(TRUCK_DOCK,',')) AS truckDock FROM CUST_AGENT_SCH_COLL_TRUCK_DOCK
		]]>
		 where tr_no in  
		<iterate open="(" close=")" conjunction="," property="arrTruckTrNoList">
		     #arrTruckTrNoList[]#   
		 </iterate>
	</select>
	<select id="findAwbLstInTruckManifest" parameterClass="cargo.cms.imprt.bo.TruckManifestBO" resultClass="cargo.cms.imprt.bo.TruckManifestBO">
		SELECT 
  			A.TRUCK_MANF_NO as truckManifestNo, B.DOC_LINE_NO as docLineNo, 
  			TO_CHAR(B.CR_DATE, 'DDMONYY HH24:MI') as crDate, B.AWB_NO as awbNo, TO_CHAR(B.AWB_DATE, 'DDMONYY') as awbDate, C.CC_CODE as ccCode, 
  			SUBSTR(TRIM(B.AWB_NO),1,3)||'-'||SUBSTR(TRIM(B.AWB_NO),4) as awbNoDisplay,B.FLT_KEY as fltNo, TO_CHAR(B.FLT_DATE, 'DDMONYY') as fltDate 
		FROM 
  			TRUCK_MANIFEST A, TRUCK_MANIFEST_DTL B LEFT JOIN V_CST_IMP_CC_CODE_AWB C ON C.FLT_KEY=B.FLT_KEY AND C.FLT_DATE=B.FLT_DATE AND C.AWB_NO=B.AWB_NO 
		WHERE 
  			B.TRUCK_MANF_NO=A.TRUCK_MANF_NO AND A.FINAL_TRUCK_MANF_IND='N' AND A.FINAL_TRUCK_MANF_NO IS NULL 
  			and not exists (select d.AWB_NO from IMP_BOOKING_DTL d, IMP_BOOKING h where h.booking_no = d.booking_no 
          		and d.awb_no = B.AWB_NO and d.awb_date = B.AWB_DATE and d.FLT_KEY = B.FLT_KEY AND d.FLT_DATE = B.FLT_DATE
          		and (h.srf_issued = 'Y' or to_date(to_char(h.bkg_slot_date,'DDMONYY')||to_char(h.bkg_slot_to,'0000'), 'DDMONYYHH24MI') > sysdate)) 
 			AND  to_date(to_char(A.SCH_COLL_DATE,'DDMONYY')||' '||LPAD(A.SCH_COLL_TO, 4, 0),'DDMONYY HH24MI') > sysdate
  			<isNotEmpty property="agent">
				AND A.AGENT_CODE=(SELECT CODE FROM CUST_COMPANY WHERE CODE_DESC=#agent#) 
			</isNotEmpty>
			<isNotEmpty property="agentCode">
				AND A.AGENT_CODE=#agentCode# 
			</isNotEmpty>
		<!-- <isNotEmpty property="schCollDate">
				<isNotEmpty property="schCollFrmHrs">
					<isNotEmpty property="schCollFrmMin">
						<isNotEmpty property="schCollToHrs">
							<isNotEmpty property="schCollToMin">
				AND (A.SCH_COLL_DATE||A.SCH_COLL_FROM||A.SCH_COLL_TO) BETWEEN (#schCollDate#||#schCollFrmHrs#||#schCollFrmMin#) AND (#schCollDate#||#schCollToHrs#||#schCollToMin#) 
							</isNotEmpty>
						</isNotEmpty>
					</isNotEmpty>
				</isNotEmpty>
			</isNotEmpty>
			<isNotEmpty property="trkMnfstFromDate">
				<isNotEmpty property="trkMnfstFromHrs">
					<isNotEmpty property="trkMnfstFromMin">
						<isNotEmpty property="trkMnfstToDate">
							<isNotEmpty property="trkMnfstToHrs">
								<isNotEmpty property="trkMnfstToMin">
				AND TO_DATE(A.CR_DATE, 'DDMONYY HH24MI') BETWEEN (#trkMnfstFromDate#||' '||#trkMnfstFromHrs#||#trkMnfstFromMin#) AND (#trkMnfstToDate#||' '||#trkMnfstToHrs#||#trkMnfstToMin#)
								</isNotEmpty>
							</isNotEmpty>
						</isNotEmpty>
					</isNotEmpty>
				</isNotEmpty>
			</isNotEmpty>
			<isNotEmpty property="truckManifestNo">
				AND A.TRUCK_MANF_NO=#truckManifestNo# 
			</isNotEmpty>
			<isNotEmpty property="awbNo">
				AND B.AWB_NO=#awbNo# 
			</isNotEmpty> -->
	</select>
	<select id="findAwbInvDtlsFrTrkMnfst" parameterClass="cargo.cms.imprt.bo.TruckManifestBO" resultClass="cargo.cms.imprt.bo.TruckManifestBO">
		SELECT truck_manf_no truckManifestNo, doc_line_no docLineNo, DTL_DOC_LINE_NO dtlDocLineNo,
			LOC_CODE as location, NVL(LSP_NO, ULD_KEY) as lspUldNo, LSP_NO as lspNo, ULD_KEY as uldKey,PCS as locnPcs, WT as locnWt, 
			FLT_KEY as fltNo, TO_CHAR(FLT_DATE, 'DDMONYY') as fltDate , TRUCK_DOCK truckDock, LOCN_TYPE locnType
		FROM 
			TRUCK_MANIFEST_INVENTORY_INFO 
		WHERE truck_manf_no = #truckManifestNo# and doc_line_no = #docLineNo# 
	</select>
	<select id="findAliasNameByAgtCode" parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT ALIAS_NAME FROM CUST_AGENT_ALIAS WHERE CUST_NO=#agtCode#  AND ROWNUM=1
	</select>
	<select id="enquireFinalizeTruckManifest" parameterClass="cargo.cms.imprt.bo.TruckManifestBO" resultClass="cargo.cms.imprt.bo.TruckManifestBO">		
		SELECT 
			A.TRUCK_MANF_NO as truckManifestNo, B.CODE_DESC as agent, B.CODE as agentCode, (TO_CHAR(A.SCH_COLL_DATE, 'DDMONYY') || ' ' || 
			SUBSTR(LPAD(A.SCH_COLL_FROM, 4, 0), 1, 2) || ':' || SUBSTR(LPAD(A.SCH_COLL_FROM, 4, 0), 3, 4) || '-' || SUBSTR(LPAD(A.SCH_COLL_TO, 4, 0), 1, 2) 
			|| ':' || SUBSTR(LPAD(A.SCH_COLL_TO, 4, 0), 3, 4)) as timeSlot, TO_CHAR(A.CR_DATE, 'DDMONYY HH24:MI') as crDate,
			A.TRUCK_DOCK truckDock 
		FROM 
			TRUCK_MANIFEST A, CUST_COMPANY B 
		WHERE 
			B.CODE=A.AGENT_CODE AND A.FINAL_TRUCK_MANF_IND='Y' 		
			and exists (select 'Y' from TRUCK_MANIFEST h
					left join TRUCK_MANIFEST_DTL dtl on dtl.TRUCK_MANF_NO = h.TRUCK_MANF_NO
					left join TRUCK_MANIFEST_INVENTORY_INFO inv on dtl.TRUCK_MANF_NO = inv.TRUCK_MANF_NO and  dtl.doc_line_no = inv.doc_line_no                  
					where    h.TRUCK_MANF_NO = A.TRUCK_MANF_NO 
             <isNotEmpty property="location">
				AND inv.LOCN_TYPE = #location#
			</isNotEmpty>)
			<isNotEmpty property="agent">
				AND B.CODE_DESC=#agent# 
			</isNotEmpty>
			<isNotEmpty property="agentCode">
				AND A.AGENT_CODE=#agentCode# 
			</isNotEmpty>
			<isNotEmpty property="schCollDate">
				<isNotEmpty property="schCollFrmHrs">
					<isNotEmpty property="schCollFrmMin">
						<isNotEmpty property="schCollToHrs">
							<isNotEmpty property="schCollToMin">
				and (to_date(to_char(A.SCH_COLL_DATE,'DDMONYY') ||' ' || to_char(A.SCH_COLL_FROM, '0000'), 'DDMONYY HH24MI')
          				between to_date(#schCollDate#  ||' ' || #schCollFrmHrs#||#schCollFrmMin#, 'DDMONYY HH24MI') 
          						and to_date(#schCollDate# ||' ' || #schCollToHrs#||#schCollToMin#, 'DDMONYY HH24MI')
     				OR      
    				to_date(to_char(A.SCH_COLL_DATE,'DDMONYY') ||' ' || to_char(A.SCH_COLL_TO, '0000'), 'DDMONYY HH24MI')
          				between to_date(#schCollDate# ||' ' || #schCollFrmHrs#||#schCollFrmMin#, 'DDMONYY HH24MI') 
          						and to_date(#schCollDate# ||' ' || #schCollToHrs#||#schCollToMin#, 'DDMONYY HH24MI'))

 
							</isNotEmpty>
						</isNotEmpty>
					</isNotEmpty>
				</isNotEmpty>
			</isNotEmpty>
			<isNotEmpty property="trkMnfstFromDate">
				<isNotEmpty property="trkMnfstFromHrs">
					<isNotEmpty property="trkMnfstFromMin">
						<isNotEmpty property="trkMnfstToDate">
							<isNotEmpty property="trkMnfstToHrs">
								<isNotEmpty property="trkMnfstToMin">
				and A.CR_DATE between 
							to_date(#trkMnfstFromDate#||' '||#trkMnfstFromHrs#||#trkMnfstFromMin#, 'DDMONYY HH24MI') 
							and to_date(#trkMnfstToDate#||' '||#trkMnfstToHrs#||#trkMnfstToMin#, 'DDMONYY HH24MI')

								</isNotEmpty>
							</isNotEmpty>
						</isNotEmpty>
					</isNotEmpty>
				</isNotEmpty>
			</isNotEmpty>
			<isNotEmpty property="truckManifestNo">
				AND A.TRUCK_MANF_NO=#truckManifestNo# 
			</isNotEmpty>
			<isNotEmpty property="awbNo">
				AND A.TRUCK_MANF_NO IN (SELECT TRUCK_MANF_NO FROM TRUCK_MANIFEST_DTL WHERE AWB_NO=#awbNo#) 
			</isNotEmpty>
	</select>
	<select id="fetchFinalizedTrkMnfstDtls" parameterClass="java.lang.String" resultClass="cargo.cms.imprt.bo.TruckManifestBO">
		SELECT 
  			A.TRUCK_MANF_NO as truckManifestNo, B.doc_line_no docLineNo, TO_CHAR(B.CR_DATE, 'DDMONYY HH24:MI') as crDate, B.AWB_NO as awbNo, TO_CHAR(B.AWB_DATE, 'DDMONYY') as awbDate, C.CC_CODE as ccCode, 
  			SUBSTR(TRIM(B.AWB_NO),1,3)||'-'||SUBSTR(TRIM(B.AWB_NO),4) as awbNoDisplay
		FROM 
  			TRUCK_MANIFEST A, TRUCK_MANIFEST_DTL B 
  			LEFT JOIN V_CST_IMP_CC_CODE_AWB C ON C.FLT_KEY=B.FLT_KEY AND C.FLT_DATE=B.FLT_DATE AND C.AWB_NO=B.AWB_NO 
		WHERE 
  			B.TRUCK_MANF_NO=A.TRUCK_MANF_NO  AND A.TRUCK_MANF_NO=#fnlTrkMnfstNo#
	</select>
	<select id="fetchWorksheetAgtLst" parameterClass="cargo.cms.imprt.bo.TruckManifestBO" resultClass="cargo.cms.imprt.bo.TruckManifestBO">
		SELECT 
			B.CODE_DESC as agent, B.CODE as agentCode, (TO_CHAR(A.SCH_COLL_DATE, 'DDMONYY') || ' ' || 
			SUBSTR(LPAD(A.SCH_COLL_FROM, 4, 0), 1, 2) || ':' || SUBSTR(LPAD(A.SCH_COLL_FROM, 4, 0), 3, 4) || '-' || SUBSTR(LPAD(A.SCH_COLL_TO, 4, 0), 1, 2) 
			|| ':' || SUBSTR(LPAD(A.SCH_COLL_TO, 4, 0), 3, 4)) as timeSlot, A.TRUCK_MANF_NO as truckManifestNo ,
			(TO_CHAR(A.SCH_COLL_DATE, 'DDMONYY') || ' ' || 
			SUBSTR(LPAD(A.SCH_COLL_FROM, 4, 0), 1, 2) || ':' || SUBSTR(LPAD(A.SCH_COLL_FROM, 4, 0), 3, 4)) as timeSlotFrom,
                        (TO_CHAR(A.SCH_COLL_DATE, 'DDMONYY') || ' ' || 
			SUBSTR(LPAD(A.SCH_COLL_TO, 4, 0), 1, 2) || ':' || SUBSTR(LPAD(A.SCH_COLL_TO, 4, 0), 3, 4)) as timeSlotTo,
			TRUCK_DOCK truckDock
		FROM 
			TRUCK_MANIFEST A, CUST_COMPANY B 
		WHERE 
			B.CODE=A.AGENT_CODE AND A.FINAL_TRUCK_MANF_IND='N' AND A.FINAL_TRUCK_MANF_NO IS NULL
			and exists (select dtl.TRUCK_MANF_NO from TRUCK_MANIFEST_DTL dtl, TRUCK_MANIFEST_INVENTORY_INFO inv 
                              where  dtl.TRUCK_MANF_NO = inv.TRUCK_MANF_NO and  dtl.doc_line_no = inv.doc_line_no and dtl.TRUCK_MANF_NO = A.TRUCK_MANF_NO 
             <isNotEmpty property="location">
				AND LOCN_TYPE = #location#
			</isNotEmpty>) 
			<isNotEmpty property="agent">
				AND B.CODE_DESC=#agent# 
			</isNotEmpty>
			<isNotEmpty property="agentCode">
				AND A.AGENT_CODE=#agentCode# 
			</isNotEmpty>
			<isNotEmpty property="schCollDate">
				<isNotEmpty property="schCollFrmHrs">
					<isNotEmpty property="schCollFrmMin">
						<isNotEmpty property="schCollToHrs">
							<isNotEmpty property="schCollToMin">
				and (to_date(to_char(A.SCH_COLL_DATE,'DDMONYY') ||' ' || to_char(A.SCH_COLL_FROM, '0000'), 'DDMONYY HH24MI')
          				between to_date(#schCollDate#  ||' ' || #schCollFrmHrs#||#schCollFrmMin#, 'DDMONYY HH24MI') 
          						and to_date(#schCollDate# ||' ' || #schCollToHrs#||#schCollToMin#, 'DDMONYY HH24MI')
     				OR      
    				to_date(to_char(A.SCH_COLL_DATE,'DDMONYY') ||' ' || to_char(A.SCH_COLL_TO, '0000'), 'DDMONYY HH24MI')
          				between to_date(#schCollDate# ||' ' || #schCollFrmHrs#||#schCollFrmMin#, 'DDMONYY HH24MI') 
          						and to_date(#schCollDate# ||' ' || #schCollToHrs#||#schCollToMin#, 'DDMONYY HH24MI')) 
							</isNotEmpty>
						</isNotEmpty>
					</isNotEmpty>
				</isNotEmpty>
			</isNotEmpty>
			<isNotEmpty property="trkMnfstFromDate">
				<isNotEmpty property="trkMnfstFromHrs">
					<isNotEmpty property="trkMnfstFromMin">
						<isNotEmpty property="trkMnfstToDate">
							<isNotEmpty property="trkMnfstToHrs">
								<isNotEmpty property="trkMnfstToMin">
				and A.CR_DATE between 
							to_date(#trkMnfstFromDate#||' '||#trkMnfstFromHrs#||#trkMnfstFromMin#, 'DDMONYY HH24MI') 
							and to_date(#trkMnfstToDate#||' '||#trkMnfstToHrs#||#trkMnfstToMin#, 'DDMONYY HH24MI')
								</isNotEmpty>
							</isNotEmpty>
						</isNotEmpty>
					</isNotEmpty>
				</isNotEmpty>
			</isNotEmpty>
			<isNotEmpty property="truckManifestNo">
				AND A.TRUCK_MANF_NO=#truckManifestNo# 
			</isNotEmpty>
			<isNotEmpty property="awbNo">
				AND A.TRUCK_MANF_NO IN (SELECT TRUCK_MANF_NO FROM TRUCK_MANIFEST_DTL WHERE AWB_NO=#awbNo#) 
			</isNotEmpty>
			AND  to_date(to_char(A.SCH_COLL_DATE,'DDMONYY')||' '||LPAD(A.SCH_COLL_TO, 4, 0),'DDMONYY HH24MI') > sysdate
	</select>
	<select id="fetchWorksheetAwbLst" parameterClass="cargo.cms.imprt.bo.TruckManifestBO" resultClass="cargo.cms.imprt.bo.TruckManifestBO">
		SELECT 
			A.ROWID rowNo, A.TRUCK_MANF_NO as truckManifestNo, A.AWB_NO as awbNo, TO_CHAR(A.AWB_DATE, 'DDMONYY') as awbDate, C.CC_CODE as ccCode, A.RETRIEVED as retrieved, 
			TO_CHAR(A.CR_DATE, 'DDMONYY HH24:MI') as crDate, SUBSTR(TRIM(A.AWB_NO),1,3)||'-'||SUBSTR(TRIM(A.AWB_NO),4) as awbNoDisplay,
			 A.doc_line_no docLineNo 
		FROM 
			TRUCK_MANIFEST_DTL A
			LEFT JOIN V_CST_IMP_CC_CODE_AWB C ON C.FLT_KEY=A.FLT_KEY AND C.FLT_DATE=A.FLT_DATE AND C.AWB_NO=A.AWB_NO 
		WHERE 
			A.TRUCK_MANF_NO=#truckManifestNo#
			and exists (select inv.TRUCK_MANF_NO from TRUCK_MANIFEST_INVENTORY_INFO inv 
	                         where  A.TRUCK_MANF_NO = inv.TRUCK_MANF_NO and  A.doc_line_no = inv.doc_line_no 
				             <isNotEmpty property="location">
								AND inv.LOCN_TYPE = #location#
							</isNotEmpty>)
	</select>
	<select id="fetchWorksheetAwbDtlLst" parameterClass="cargo.cms.imprt.bo.TruckManifestBO" resultClass="cargo.cms.imprt.bo.TruckManifestBO">
		SELECT 
  			A.TRUCK_MANF_NO as truckManifestNo, A.doc_line_no docLineNo , A.dtl_doc_line_no dtlDocLineNo , A.LOC_CODE as orgLocation, nvl(l.loc_code,u.loc_code) as location, NVL(A.LSP_NO, A.ULD_KEY) as lspUldNo, A.PCS as locnPcs, A.WT as locnWt, 
  			A.FLT_KEY as fltNo, TO_CHAR(A.FLT_DATE, 'DDMONYY') as fltDate , A.TRUCK_DOCK shcTD
		FROM 
  			TRUCK_MANIFEST_INVENTORY_INFO  A
  			left join lsp_inventory l on  l.lsp_no = a.lsp_no
  			left join uld_inventory u on  u.uld_key = a.uld_key  
		WHERE 
  			A.TRUCK_MANF_NO=#truckManifestNo# 
  			AND A.doc_line_no = #docLineNo# 
			<isNotEmpty property="location">
				AND A.LOCN_TYPE = #location#
			</isNotEmpty>
	</select>
	<update id="updateRetrievedIndInTrkMnfstDtls" parameterClass="java.util.HashMap">
		UPDATE 
			TRUCK_MANIFEST_DTL 
		SET 
			RETRIEVED='Y' 
		WHERE 
			TRUCK_MANF_NO=#truckManifestNo# 
			and doc_line_no = #docLineNo# AND AWB_NO=#awbNo# AND AWB_DATE=TO_DATE(#awbDate#, 'DDMONYY') AND FLT_KEY=#fltNo# 
			AND FLT_DATE=TO_DATE(#fltDate#, 'DDMONYY')
	</update>
	<!-- Finalize Truck Manifest :: Anup :: End -->
		<!-- Added by Cliff Close/Unclose Import Consignment Starts -->
 <select id="imp_closeunclose_getAWB"  parameterClass="map"  
		resultClass="cargo.cms.imprt.bo.FullAWBInfoBO">
		SELECT
			M.ACCS_HANDLER as accsHandler, 
			M.APPNTD_AGENT as appntdAgent,
			M.CSGNE_NAME as cnsCustNo,
			M.AWB_CLOSE_RMK as closeRmk, 
			A.AWB_CLOSED_YN as closed, 
			TO_CHAR(A.AWB_DATE, 'DDMONYY') as awbDate,
			TO_CHAR(A.AWB_DATE, 'DDMONYY') as awbDateDisplay,
			M.AWB_DEST as dest, 
			A.AWB_NO as awbNo, 
			M.AWB_ORIGIN as orig, 
			M.AWB_PCS as pcs, 
			M.AWB_RMK as rmk, 
			TRIM(TO_CHAR(M.AWB_WT, '9999990D9')) as wt, 
			M.CATALOG as catalog, 
			(SELECT 
			      (CASE WHEN decode(b.catalog,'EG','C','ES','C','IG','C','TG','C','TA','C','EU','M','TM','M','EO','Q','IO','Q','C') = 'C' THEN 
			      (CASE WHEN (SELECT COUNT(1) FROM CUST_AIRL_SPL_CODE SPLCODE WHERE SPLCODE.SPL_TYPE='SPL_COURIER_SHC' AND SPLCODE.CARR_CODE = B.CARR_CODE AND (SPLCODE.SPL_CODE = b.SPL_CODE1 OR SPLCODE.SPL_CODE = b.SPL_CODE2 OR SPLCODE.SPL_CODE = b.SPL_CODE3 OR SPLCODE.SPL_CODE = b.SPL_CODE4 OR SPLCODE.SPL_CODE = b.SPL_CODE5 OR SPLCODE.SPL_CODE = b.SPL_CODE6 OR SPLCODE.SPL_CODE = b.SPL_CODE7 OR SPLCODE.SPL_CODE = b.SPL_CODE8 OR SPLCODE.SPL_CODE = b.SPL_CODE9)) > 0
			      THEN 'Q' ELSE decode(b.catalog,'EG','C','ES','C','IG','C','TG','C','TA','C','EU','M','TM','M','EO','Q','IO','Q','C') END)
			               ELSE decode(b.catalog,'EG','C','ES','C','IG','C','TG','C','TA','C','EU','M','TM','M','EO','Q','IO','Q','C') END) as cargoType	  
			FROM AWB  B WHERE  B.AWB_NO=A.AWB_NO AND B.AWB_DATE=A.AWB_DATE) as cargoType, 
			M.CONTENT as cont, 
 			M.ECT_HANDLER as ectHandler, 
			M.REL_IND as relInd, 
			M.SPL_CODE1 as splCode1, 
			M.SPL_CODE2 as splCode2,
			M.SPL_CODE3 as splCode3, 
			M.SPL_CODE4 as splCode4,
			M.SPL_CODE5 as splCode5, 
			M.SPL_CODE6 as splCode6,
			M.SPL_CODE7 as splCode7, 
			M.SPL_CODE8 as splCode8,
			AAT_OS + AIRL_OS as osCharges,
			SHPR_NAME AS shipper,
			M.BANK_ENDOS as bankEndos
		FROM AWB A 
		LEFT JOIN IMP_CAR_AWB M ON M.AWB_NO = A.AWB_NO AND M.AWB_DATE = A.AWB_DATE 
		LEFT JOIN GT_OS_CHARGES GT ON GT.AWB_NO = A.AWB_NO AND GT.AWB_DATE = A.AWB_DATE
		WHERE A.AWB_NO = #awbNo# AND TO_CHAR(A.AWB_DATE, 'DDMONYY') like #awbDate#
		ORDER BY M.AWB_CLOSED ASC
   	</select>
	
	<select id="imp_getCloseUnCloseAWB"  parameterClass="map"  
		resultClass="cargo.cms.imprt.bo.FullAWBInfoBO">
		SELECT AWB_CLOSED_YN as closed, 
			TO_CHAR(AWB_DATE, 'DDMONYY') as awbDate FROM AWB WHERE AWB_NO = #awbNo#
	</select>
   	
   	 <select id="checkTracRec"  parameterClass="java.lang.String"  
		resultClass="java.lang.String">
		  select 
				case when (select COUNT(1) 
                           from trc_flt a, trc_awb b where a.awb_date= b.awb_date and a.awb_no=
                            b.awb_no and a.awb_no = #awbNo# and  
                             (upper(a.DCRPNCY_STS) not in ('CLOSE','VOID')  or  a.DCRPNCY_STS is null  )) > 0
				then 'Y'
				else 
				case when (select COUNT(1) value2 from
                              trc_loc a, trc_awb b where a.awb_date= b.awb_date and a.awb_no=
                              b.awb_no and a.awb_no = #awbNo# and
                              (upper(a.DCRPNCY_STS) not in ('CLOSE','VOID')  or  a.DCRPNCY_STS is null  )) > 0
				then 'Y'
				else 'N'
				end
				end AS ind from dual
   	</select>
   		
   		<!-- Changed for QR :: RANJITH -->
	<select id="imp_closeunclose_getManifestList"  parameterClass="map"  
		resultClass="cargo.cms.imprt.bo.ManifestBO">
		SELECT 
			TO_CHAR(B.FLT_DATE, 'DDMONYY') as fltDate,
			TO_CHAR(B.FLT_DATE, 'DDMONYY') as fltDateDisplay,
			C.TR_NO as trNo,
			B.FLT_KEY as fltKey, 
			PKG_COMMON.get_flt_ata(c.FLT_KEY, c.SCH_DATE, 'A') as ata,
			B.LDG_POINT as ldgPt, 
			B.MANIFEST_PCS as manfPcs, 
			TRIM(TO_CHAR(B.MANIFEST_WT, '9999990D9')) as manfWt, 
			B.RECD_PCS as locnPcs, 
			TRIM(TO_CHAR(B.RECD_WT, '9999990D9')) as locnWt, 
			DECODE(B.CIR_PROC_DATE,NULL,'N','Y') as cir,
			DECODE(B.DAM_PROC_DATE,NULL,'N','Y') as dam, 
			DECODE(B.DIR_PROC_DATE,NULL,'N','Y') as dir,  
			B.ECAN_SEND as sendECan,
			HD.TRM_NO as trmNo,
			(SELECT V.CC_CODE FROM V_CST_IMP_CC_CODE_AWB V
			WHERE V.FLT_KEY = B.FLT_KEY AND V.FLT_DATE = B.FLT_DATE AND V.AWB_NO = B.AWB_NO 
				  AND NVL(V.HAWB_NO, '000000000000000000') =  '000000000000000000' AND ROWNUM = 1) as cc,
			TO_CHAR(pkg_Calculate.GET_FREE_DAYS(c.SCH_DATE, c.FLT_KEY,B.AWB_NO,B.AWB_DATE), 'DDMONYY') as freeStrgDue,
			HD.RECD_CARR as recvCarr
		FROM IMP_CAR_SHP B 
		JOIN FLT_OPR C ON B.FLT_DATE = C.SCH_DATE AND B.FLT_KEY	 = C.FLT_KEY 
		LEFT JOIN (select * from (SELECT dt.awb_no, dt.awb_date, dt.flt_key, dt.flt_date, HD.TRM_NO TRM_NO,
			dense_rank() over (partition by dt.awb_no, dt.awb_date, dt.flt_key, dt.flt_date order by dt.cr_date) 	rank
			FROM IMP_TRM_HD HD JOIN IMP_TRM_DTL DT ON HD.TRM_NO = DT.TRM_NO
			WHERE HD.VOID_DATE IS NULL) where rank = 1) T 
			ON T.AWB_NO = B.AWB_NO AND TO_CHAR(T.AWB_DATE, 'DDMONYY') = B.AWB_DATE
				AND T.FLT_KEY = B.FLT_KEY AND T.FLT_DATE = B.FLT_DATE
		LEFT JOIN IMP_TRM_HD HD ON HD.TRM_NO = T.TRM_NO
		WHERE C.FLT_TYPE = 'A'	AND
			  B.AWB_NO = 	#awbNo#	AND
			  TO_CHAR(B.AWB_DATE, 'DDMONYY') = #awbDate#
   	</select>
   	
	<select id="imp_closeunclose_getSRFList"  parameterClass="map"  
		resultClass="cargo.cms.imprt.bo.ImpConsSRFBO">
		SELECT
			A.SRF_NO as srfNo, 
			A.SRF_PCS as pcs, 
			TRIM(TO_CHAR(A.SRF_WT, '9999990D9')) as wt, 
			A.STATUS as status, 
			B.CDIF_NO as cdifNo,
			TRIM(TO_CHAR(B.CDIF_UTL_WT, '9999990D9')) as ulWt, 
			B.CDIF_UTL_PCS as ulPcs, 
			TRIM(TO_CHAR(B.CDIF_PS_WT, '9999990D9')) as psWt, 
			B.CDIF_PS_PCS as psPcs, 
			TRIM(TO_CHAR(B.CDIF_DT_WT, '9999990D9')) as dtWt, 
			B.CDIF_DT_PCS as dtPcs
		FROM IMP_SRF A 
		LEFT JOIN IMP_CDIF C  ON A.SRF_NO = C.SRF_NO
		LEFT JOIN IMP_CDIF_HAWB B ON B.CDIF_NO = C.CDIF_NO
		WHERE
			A.AWB_NO = #awbNo# AND
			TO_CHAR(A.AWB_DATE, 'DDMONYY') = #awbDate#
   	</select>
   	
	<update id="imp_closeunclose_updateClose" parameterClass="cargo.cms.imprt.bo.FullAWBInfoBO">
		UPDATE IMP_CAR_AWB
		SET
			AWB_CLOSED = 'Y',
			AWB_CLOSE_DATE = sysdate,
			AWB_CLOSE_RMK = #closeRmk#,
			AWB_CLOSE_USER = #closeUser#, 
			LM_USER_ID = #lmUserId#,
			LM_DATE = sysdate
		WHERE
			AWB_NO = #awbNo# AND
			TO_CHAR(AWB_DATE, 'DDMONYY') = #awbDate#
	</update>

	<update id="imp_closeunclose_updateUnclose" parameterClass="cargo.cms.imprt.bo.FullAWBInfoBO">
		UPDATE IMP_CAR_AWB
		SET
			AWB_CLOSED = 'N',
			AWB_CLOSE_DATE = NULL,
			AWB_CLOSE_RMK = #closeRmk#,
			AWB_CLOSE_USER = NULL, 
			LM_USER_ID = #lmUserId#,
			LM_DATE = sysdate
		WHERE
			AWB_NO = #awbNo# AND
			TO_CHAR(AWB_DATE, 'DDMONYY') = #awbDate#
	</update>
	
	
	<update id="imp_closeunclose_updateCloseInAWB" parameterClass="cargo.cms.imprt.bo.FullAWBInfoBO">
		UPDATE AWB
		SET
			AWB_CLOSED_YN = 'Y',TR_TYPE ='CUAWB', AWB_RMK = #closeRmk#, LM_USER_ID = #lmUserId#,LM_DATE = sysdate
		WHERE
			AWB_NO = #awbNo# AND
			TO_CHAR(AWB_DATE, 'DDMONYY') = #awbDate#
	</update>
	
	<update id="imp_closeunclose_updateUncloseInAWB" parameterClass="cargo.cms.imprt.bo.FullAWBInfoBO">
		UPDATE AWB
		SET
			AWB_CLOSED_YN = 'N',TR_TYPE ='CUAWB', AWB_RMK = #closeRmk#, LM_USER_ID = #lmUserId#,LM_DATE = sysdate
		WHERE
			AWB_NO = #awbNo# AND
			TO_CHAR(AWB_DATE, 'DDMONYY') = #awbDate#
	</update>
	
	
	<select id="chechStatusInAwbInventory" parameterClass="cargo.cms.imprt.bo.FullAWBInfoBO" resultClass="java.lang.Integer" >
		SELECT 
		      COUNT(1)
		  FROM
		      AWB_INVENTORY 
		 WHERE 
		      AWB_NO = #awbNo# AND
		      AWB_DATE = #awbDate#  and LOCN_PCS > 0 
   </select>
	
	
<parameterMap id="hmap" class="map" >
	<parameter property="AWBNO" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
	<parameter property="AWBDATE" jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
</parameterMap>
<procedure id="getOSCharges" parameterMap="hmap" >
	{ call PRC_OS_CH(?,?) }
</procedure>	
<!-- Added by Cliff Close/Unclose Import Consignment Ends -->
<!--  LSP PREFIX VALIDATION QUERY :: RANJITH :: STARTS -->
<select id="validLspPrefix"  parameterClass="java.lang.String" resultClass="java.lang.Integer">
	select count(1) from mast_code_dtl dtl
	join mast_code_hd  hd on
	dtl.GROUP_CODE = hd.GROUP_CODE
	and dtl.CODE_TYPE = hd.CODE
	where dtl.code_type= 'CSD_PRFX'
	and dtl.Code=#lspPrfx#
</select>

<!--  LSP PREFIX VALIDATION QUERY :: RANJITH :: ENDS -->
<!-- Changed for QR :: RANJITH -->
	<!-- Import Customs Clearance Checklist :: Anup :: Begins -->
	<select id="findCustomsConstrainedShpmntLst" parameterClass="cargo.cms.imprt.bo.ImprtClrnceCustChkListBO" 
		resultClass="cargo.cms.imprt.bo.ImprtClrnceCustChkListBO">
		SELECT 
		 E.AWB_NO as awbNo,
      	SUBSTR(TRIM(E.AWB_NO),1,3)||'-'||SUBSTR(TRIM(E.AWB_NO),4) awbNoDisplay, 
      	E.FLT_KEY as fltNo, 
		TO_CHAR(E.FLT_DATE, 'DDMONYY') as arrDate, 
      	D.APPNTD_AGENT as agtName, 
		E.MANIFEST_PCS as manfPcs, 
      	E.MANIFEST_WT as manfWt, 
      	D.DOC_CHK_REQ as docReqYN, 
      	'N' as docRecvYN, 
      	G.CC_CODE as ccCode, 
		SUBSTR(TRIM(TO_CHAR(C.SCH_TIME,'0000')),0,2)|| ':'||  SUBSTR(TRIM(TO_CHAR(C.SCH_TIME,'0000')),3,4) as schTimeFm, 
		D.ALLOW_PACCO as paccoYN, 
      	'' as trNo, 
      	'' as status, 
      	TO_CHAR(E.AWB_DATE, 'DDMONYY') as awbDate, 
		'' as message, 
      	H.CC_CATEGORY as ccCategory, 
      	(SELECT SUM(LOCN_PCS) FROM AWB_INVENTORY WHERE AWB_NO=E.AWB_NO AND AWB_DATE=E.AWB_DATE AND FLT_KEY=E.FLT_KEY AND FLT_DATE=E.FLT_DATE) AS invPcs, 
      	(SELECT SUM(LOCN_WT) FROM AWB_INVENTORY WHERE AWB_NO=E.AWB_NO AND AWB_DATE=E.AWB_DATE AND FLT_KEY=E.FLT_KEY AND FLT_DATE=E.FLT_DATE) AS invWt,
      	S.SRF_NO AS srfNo ,
        S.STATUS AS srfStatus,
        TO_CHAR(S.SRF_DATE,'DDMONYY') AS srfDate
		FROM 
			IMP_CAR_SHP E JOIN FLT_OPR C ON E.FLT_KEY=C.FLT_KEY AND E.FLT_DATE=C.SCH_DATE AND C.FLT_TYPE='A'
			JOIN IMP_CAR_AWB D ON  D.AWB_NO = E.AWB_NO AND D.AWB_DATE = E.AWB_DATE
			JOIN AWB F ON E.AWB_NO = F.AWB_NO AND E.AWB_DATE = F.AWB_DATE
			LEFT JOIN (SELECT SUM(LOCN_PCS) LOCN_PCS, AWB_NO,FLT_KEY,AWB_DATE,FLT_DATE FROM AWB_INVENTORY AW_INGROUP GROUP BY AWB_NO, FLT_KEY, 
      			AWB_DATE, FLT_DATE) AWB_INV ON AWB_INV.AWB_NO=E.AWB_NO AND  AWB_INV.AWB_DATE=E.AWB_DATE AND AWB_INV.FLT_KEY=E.FLT_KEY AND  AWB_INV.FLT_DATE=E.FLT_DATE
			LEFT JOIN V_CST_IMP_CC_CODE G ON  G.AWB_NO=E.AWB_NO AND G.FLT_KEY=E.FLT_KEY AND G.FLT_DATE=E.FLT_DATE AND NVL(G.HAWB_NO, '000000000000000000') =  '000000000000000000'
			LEFT JOIN MAST_CONSTRAINT_CODE H ON G.CC_CODE=H.CODE
      		LEFT JOIN (SELECT SRF.SRF_NO,SRF.STATUS,SRF.SRF_DATE,SFLT.FLT_KEY,SFLT.FLT_DATE,SRF.AWB_NO,SRF.AWB_DATE FROM IMP_SRF SRF,IMP_SRF_FLT SFLT WHERE  
		      SRF.SRF_NO=SFLT.SRF_NO AND SRF.STATUS='ISSUED' AND SRF.SRF_EXPY_DATE>=SYSDATE) S ON
		      S.FLT_KEY=E.FLT_KEY AND S.FLT_DATE=E.FLT_DATE AND S.AWB_NO = E.AWB_NO AND S.AWB_DATE = E.AWB_DATE
	  WHERE NVL(AWB_CLOSED_YN,'N') = 'N' AND NVL(d.ALLOW_PACCO,'N') = 'Y'  AND NOT(E.RECD_PCS>0 AND NVL(AWB_INV.LOCN_PCS,0)=0)
			<isNotEmpty prepend="AND" property="carrCode">
				<isNotEmpty property="fltNo">
					E.FLT_KEY=#carrCode# || #fltNo#
				</isNotEmpty>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="arrDate">
				E.FLT_DATE=TO_DATE(#arrDate#, 'DDMONYY')
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="awbPrefix">
				<isNotEmpty property="awbSuffix">
					E.AWB_NO=#awbPrefix# || #awbSuffix#
				</isNotEmpty>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="ccStrtWith">
				G.CC_CODE LIKE #ccStrtWith# || '%'
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="ccFlag">
				G.CC_CODE IN (#cc1#, #cc2#, #cc3#, #cc4#, #cc5#)
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="ataFromHrs">
				<isNotEmpty property="ataFromMins">
					<isNotEmpty property="ataToHrs">
						<isNotEmpty property="ataToMins">
							C.SCH_TIME BETWEEN #ataFromHrs# || #ataFromMins# AND #ataToHrs# || #ataToMins#
						</isNotEmpty>
					</isNotEmpty>
				</isNotEmpty>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="agentCode">
				D.AGENT_CUST_NO=#agentCode#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="status">
				 exists (select 1 from IMP_CUST_CLR_LIST IMP_CLR WHERE IMP_CLR.AWB_NO=E.AWB_NO AND IMP_CLR.AWB_DATE=E.AWB_DATE AND 
				 IMP_CLR.FLT_KEY=E.FLT_KEY AND IMP_CLR.FLT_DATE=E.FLT_DATE AND IMP_CLR.HAWB_NO = G.HAWB_NO AND CCCL_STATUS=#status#)
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="srfStatus">
				<isEqual property = "srfStatus" compareValue="Y">
					S.SRF_NO is NOT NULL
				</isEqual>
				<isEqual property = "srfStatus" compareValue="N">
					S.SRF_NO is NULL
				</isEqual> 
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="ccCategory">
				G.CC_CODE IN (SELECT CODE FROM MAST_CONSTRAINT_CODE WHERE CC_CATEGORY=#ccCategory#)
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="consType">
				<isEqual property = "consType" compareValue="SCH COLLECTION">
					D.VAL_FOR_SCH_COLL='Y'
					AND not exists (SELECT 1 FROM IMP_BOOKING A, IMP_BOOKING_DTL B 
								WHERE 
								A.BOOKING_NO=B.BOOKING_NO AND B.AWB_NO=E.AWB_NO AND B.AWB_DATE=TO_DATE(TO_CHAR(E.AWB_DATE, 'DDMONYY'), 'DDMONYY') 
								AND B.FLT_KEY=E.FLT_KEY AND B.FLT_DATE=TO_DATE(TO_CHAR(E.FLT_DATE, 'DDMONYY'), 'DDMONYY') AND TO_DATE((TO_CHAR(A.BKG_SLOT_DATE, 'DDMONYY') 
								|| ' ' || TO_CHAR(A.BKG_SLOT_TO, '0000')), 'DDMONYY HH24MI') > SYSDATE) 
				</isEqual>
				<isEqual property = "consType" compareValue="BOOKING">
					 exists (SELECT 1 FROM IMP_BOOKING A, IMP_BOOKING_DTL B 
								WHERE 
								A.BOOKING_NO=B.BOOKING_NO AND B.AWB_NO=E.AWB_NO AND B.AWB_DATE=TO_DATE(TO_CHAR(E.AWB_DATE, 'DDMONYY'), 'DDMONYY') 
								AND B.FLT_KEY=E.FLT_KEY AND B.FLT_DATE=TO_DATE(TO_CHAR(E.FLT_DATE, 'DDMONYY'), 'DDMONYY') AND TO_DATE((TO_CHAR(A.BKG_SLOT_DATE, 'DDMONYY') 
								|| ' ' || TO_CHAR(A.BKG_SLOT_TO, '0000')), 'DDMONYY HH24MI') > SYSDATE)
				</isEqual>
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="constrained">
				NVL(H.CONSTRAINT,'N') = #constrained#
			</isNotEmpty>
			ORDER BY  E.AWB_NO,D.APPNTD_AGENT
	</select>	
	<select id="findCustomsConstrainedShpmntHawbLst" parameterClass="cargo.cms.imprt.bo.ImprtClrnceCustChkListBO" 
		resultClass="cargo.cms.imprt.bo.ImprtClrnceCustChkListBO">
		SELECT 
		DISTINCT E.AWB_NO as awbNo,
      	SUBSTR(TRIM(E.AWB_NO),1,3)||'-'||SUBSTR(TRIM(E.AWB_NO),4) awbNoDisplay, 
      	E.FLT_KEY as fltNo, 
		TO_CHAR(E.FLT_DATE, 'DDMONYY') as arrDate, 
      	NVL(FH.HAWB_NO, '000000000000000000') as hawbNo, 
      	D.APPNTD_AGENT as agtName, 
		FH.HAWB_PCS as manfPcs, 
      	FH.HAWB_NET_WT as manfWt, 
      	D.DOC_CHK_REQ as docReqYN, 
      	F.DOC_RCV as docRecvYN, 
     	G.CC_CODE as ccCode, 
		D.ALLOW_PACCO as paccoYN, 
      	F.TR_NO as trNo, 
      	F.cccl_status as status,
      	TO_CHAR(E.AWB_DATE, 'DDMONYY') as awbDate, 
		'' as message,
      	H.CC_CATEGORY as ccCategory,
      	(select awb_image_name from awb_image where awb_no=E.AWB_NO and TO_CHAR(awb_date, 'DDMONYY')=TO_CHAR(E.AWB_DATE, 'DDMONYY') and rownum=1) transactionId  
      	FROM 
        IMP_CAR_SHP E 
  		JOIN IMP_CAR_AWB D ON  D.AWB_NO = E.AWB_NO AND D.AWB_DATE = E.AWB_DATE
        LEFT JOIN V_CST_IMP_CC_CODE G ON  G.AWB_NO=E.AWB_NO AND G.FLT_KEY=E.FLT_KEY AND G.FLT_DATE=E.FLT_DATE 
        LEFT JOIN (SELECT FHAWB.HAWB_PCS,FHAWB.HAWB_NET_WT,FHL.AWB_NO,FHL.AWB_DATE,FHAWB.HAWB_NO 
        FROM EDI_FHL FHL,EDI_FHL_HAWB FHAWB WHERE FHL.TR_NO=FHAWB.TR_NO) FH ON FH.HAWB_NO = G.HAWB_NO AND FH.AWB_NO = E.AWB_NO AND FH.AWB_DATE = E.AWB_DATE
        LEFT JOIN MAST_CONSTRAINT_CODE H ON G.CC_CODE=H.CODE
        LEFT JOIN IMP_CUST_CLR_LIST F ON F.AWB_NO=E.AWB_NO AND F.AWB_DATE=E.AWB_DATE AND F.FLT_KEY=E.FLT_KEY AND F.FLT_DATE=E.FLT_DATE AND F.HAWB_NO = G.HAWB_NO
		WHERE E.FLT_KEY=#fltNo# AND E.FLT_DATE=TO_DATE(#arrDate#, 'DDMONYY') AND E.AWB_NO=#awbNo# AND E.AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY')
	</select>
                        
                        
	<select id="findDocListByCC" parameterClass="java.util.HashMap" resultClass="cargo.cms.imprt.bo.ImprtClrnceCustChkListBO">
		SELECT 
			DOC_NAME as docName, 'N' as selDocNotAv 
		FROM 
			MAST_CC_DOC_LIST 
		WHERE 
			CC=#ccCode# AND DOC_NAME NOT IN (SELECT DOC_NAME as docName FROM IMP_CCCL_DOC_LIST where TR_NO=#trNo#)
		UNION 
		SELECT 
  			DOC_NAME as actionName, NOT_AVAILABLE as selDocNotAv 
		FROM 
  			IMP_CCCL_DOC_LIST 
  		WHERE 
    		TR_NO=#trNo#
	</select>
	<select id="findActionListByCC" parameterClass="java.util.HashMap" resultClass="cargo.cms.imprt.bo.ImprtClrnceCustChkListBO">
		SELECT 
			ACTION_NAME as actionName 
		FROM 
			MAST_CC_ACTION_LIST 
		WHERE 
			CC=#ccCode#
		UNION
		SELECT 
  			ACTION_NAME as actionName 
		FROM 
  			IMP_CCCL_ACTION_LIST 
  		WHERE 
    		TR_NO=#trNo#
	</select>
	<insert id="insertCCCLDocLst" parameterClass="cargo.cms.imprt.bo.ImprtClrnceCustChkListBO">
		INSERT INTO
			IMP_CCCL_DOC_LIST 
			(TR_NO, DOC_NAME, NOT_AVAILABLE, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE)
		VALUES 
			(#trNo#, #docName#, #selDocNotAv#, #crUserid#, SYSDATE, #crUserid#, SYSDATE)
	</insert>
	<insert id="updateCCCLDocLst" parameterClass="cargo.cms.imprt.bo.ImprtClrnceCustChkListBO">
		UPDATE IMP_CCCL_DOC_LIST SET NOT_AVAILABLE=#selDocNotAv#, LM_USER_ID=#crUserid#, LM_DATE=SYSDATE WHERE TR_NO=#trNo# AND DOC_NAME=#docName#
	</insert>
	<delete id="deleteCCCLDoc" parameterClass="cargo.cms.imprt.bo.ImprtClrnceCustChkListBO">
		DELETE FROM IMP_CCCL_DOC_LIST WHERE TR_NO=#trNo# AND DOC_NAME=#docName#
	</delete>
	<insert id="insertCCCLActionLst" parameterClass="cargo.cms.imprt.bo.ImprtClrnceCustChkListBO">
		INSERT INTO
			IMP_CCCL_ACTION_LIST 
			(TR_NO, ACTION_NAME, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE)
		VALUES 
			(#trNo#, #actionName#, #crUserid#, SYSDATE, #crUserid#, SYSDATE)
	</insert>
	<delete id="deleteCCCLAction" parameterClass="cargo.cms.imprt.bo.ImprtClrnceCustChkListBO">
		DELETE FROM IMP_CCCL_ACTION_LIST WHERE TR_NO=#trNo# AND ACTION_NAME=#actionName#
	</delete>
	<select id="findCustClrLstNextVal" parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT 
			CUST_CLR_LST_SEQ.NEXTVAL 
		FROM 
			DUAL
	</select>
	<select id="findDataExistInCustClrLst" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		SELECT 
			COUNT(1) 
		FROM 
			IMP_CUST_CLR_LIST 
		WHERE 
			TR_NO=#trNo#
	</select>
	<update id="updateCustClrLstByTrNo" parameterClass="cargo.cms.imprt.bo.ImprtClrnceCustChkListBO">
		UPDATE 
			IMP_CUST_CLR_LIST 
		SET 
			CCCL_STATUS=#status#, CCCL_UPDATE_BY=#crUserid#, CCCL_UPDATE_DATE=SYSDATE, CCCL_MSG=#message# ,DOC_REQ = #docReqYN#, 
			<isEqual property="docReqYN" compareValue="Y">
				DOC_RCV='N' 
			</isEqual>
			<isNotEqual property="docReqYN" compareValue="Y">
				DOC_RCV=#docRecvYN# 
			</isNotEqual>
		WHERE 
			TR_NO=#trNo#
	</update>
	<insert id="insertCustClrLst" parameterClass="cargo.cms.imprt.bo.ImprtClrnceCustChkListBO">
		INSERT INTO 
			IMP_CUST_CLR_LIST
			(TR_NO, AWB_NO, AWB_DATE, FLT_KEY, FLT_DATE, HAWB_NO, CC, CCCL_STATUS, CCCL_UPDATE_BY, CCCL_UPDATE_DATE, 
			CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE,  FLT_TYPE, DOC_RCV, DOC_REQ, CCCL_MSG) 
		VALUES
			(#trNo#, #awbNo#, #awbDate#, #fltNo#, TO_DATE(#arrDate#, 'DDMONYY'), #hawbNo#, #ccCode#, #status#, #crUserid#, SYSDATE, 
			#crUserid#, SYSDATE, #crUserid#, SYSDATE, 'I', #docRecvYN#, #docReqYN#, #message#)
	</insert>
	<select id="findAwbInBooking" parameterClass="cargo.cms.imprt.bo.ImprtClrnceCustChkListBO" resultClass="java.lang.String">
		SELECT 
			TO_CHAR(A.BKG_SLOT_DATE, 'DDMONYY') || ' ' || SUBSTR(TRIM(TO_CHAR(A.BKG_SLOT_FROM,'0000')),0,2) || ':' ||  
			SUBSTR(TRIM(TO_CHAR(A.BKG_SLOT_FROM,'0000')),3,4) || '-' || SUBSTR(TRIM(TO_CHAR(A.BKG_SLOT_TO,'0000')),0,2) || ':' 
			|| SUBSTR(TRIM(TO_CHAR(A.BKG_SLOT_TO,'0000')),3,4) AS schTime 
		FROM 
			IMP_BOOKING A, IMP_BOOKING_DTL B 
		WHERE 
			A.BOOKING_NO=B.BOOKING_NO AND B.AWB_NO=#awbNo# AND B.AWB_DATE=TO_DATE(#awbDate#, 'DDMONYY') 
			AND B.FLT_KEY=#fltNo# AND B.FLT_DATE=TO_DATE(#arrDate#, 'DDMONYY') AND TO_DATE((TO_CHAR(A.BKG_SLOT_DATE, 'DDMONYY') 
			|| ' ' || TO_CHAR(A.BKG_SLOT_TO, '0000')), 'DDMONYY HH24MI') > SYSDATE
	</select>
	<select id="findAwbInSchColl" parameterClass="cargo.cms.imprt.bo.ImprtClrnceCustChkListBO" resultClass="java.lang.String">
		SELECT 
			TO_CHAR(A.SCH_COLL_DATE, 'DDMONYY') || ' ' || SUBSTR(TRIM(TO_CHAR(A.SCH_COLL_FROM,'0000')),0,2) || ':' || 
			SUBSTR(TRIM(TO_CHAR(A.SCH_COLL_FROM,'0000')),3,4) || '-' || SUBSTR(TRIM(TO_CHAR(A.SCH_COLL_TO,'0000')),0,2) 
			|| ':' || SUBSTR(TRIM(TO_CHAR(A.SCH_COLL_TO,'0000')),3,4) as schTime 
		FROM 
			TRUCK_MANIFEST A, TRUCK_MANIFEST_DTL B 
	    WHERE 		
        B.TRUCK_MANF_NO=A.TRUCK_MANF_NO AND (A.FINAL_TRUCK_MANF_IND='Y' OR(A.FINAL_TRUCK_MANF_IND='N' AND A.final_truck_manf_no is null AND 
        to_date(TO_CHAR(A.SCH_COLL_DATE, 'DDMONYY') || ' ' || SUBSTR(TRIM(TO_CHAR(A.SCH_COLL_TO,'0000')),0,2)	
        || ':' || SUBSTR(TRIM(TO_CHAR(A.SCH_COLL_TO,'0000')),3,4),'DDMONYY HH24:MI') > sysdate))
        AND B.AWB_NO=#awbNo# AND B.AWB_DATE=TO_DATE(#awbDate#, 'DDMONYY') 
			AND B.FLT_KEY=#fltNo# AND B.FLT_DATE=TO_DATE(#arrDate#, 'DDMONYY')	 and rownum=1
			
			
			
	</select>
	<select id="findAwbInShipment" parameterClass="cargo.cms.imprt.bo.ImprtClrnceCustChkListBO" resultClass="java.lang.String">
		SELECT 
			LTRIM(CNTG_FLT_CARR || CNTG_FLT_NO || '/' || TO_CHAR(CNTG_FLT_DATE, 'DDMONYY'), '/') || ' ' || LTRIM(SUBSTR(TRIM(TO_CHAR(CNTG_FLT_TIME,'0000')),0,2) 
			|| ':'|| SUBSTR(TRIM(TO_CHAR(CNTG_FLT_TIME,'0000')),3,4), ':') AS schTime 
		FROM 
			IMP_CAR_SHP 
		WHERE 
			AWB_NO=#awbNo# AND AWB_DATE=TO_DATE(#awbDate#, 'DDMONYY') AND FLT_KEY=#fltNo# AND FLT_DATE=TO_DATE(#arrDate#, 'DDMONYY')
	</select>
	<select id="findLatestCCCodeFromView" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT 
			CC_CODE 
		FROM 
			V_CST_IMP_CC_CODE 
		WHERE 
			FLT_KEY=#fltNo# AND FLT_DATE=TO_DATE(#fltDate#, 'DDMONYY') AND AWB_NO=#awbNo# AND HAWB_NO=#hawbNo#
	</select>
	<insert id="insertAWBImage" parameterClass="java.util.HashMap">
		INSERT INTO 
			AWB_IMAGE 
			(SEQ_NO, AWB_IMAGE_NAME, AWB_NO, AWB_DATE, HAWB_NO) 
		VALUES 
			(AWB_IMAGE_SEQ.NEXTVAL, #trnsId#, #awbNo#, TO_DATE(#awbDate#, 'DDMONYY'),  #hawbNo#)
	</insert>
	<select id="findAgentRemark" parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT 
			AGENT_RMK 
		FROM 
			IMP_CUST_CLR_LIST 
		WHERE 
			TR_NO=#trNo#
	</select>
	<select id="findDocExistsInMaster" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		SELECT 
			COUNT(1) 
		FROM 
			MAST_CC_DOC_LIST 
		WHERE 
			DOC_NAME=#docName# AND CC=#ccCode#
	</select>
	<select id="findActionExistsInMaster" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		SELECT 
			COUNT(1) 
		FROM 
			MAST_CC_ACTION_LIST 
		WHERE 
			ACTION_NAME=#actName# AND CC=#ccCode#
	</select>
	<select id="findDocExistsInCCCL" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		SELECT 
			COUNT(1) 
		FROM 
			IMP_CCCL_DOC_LIST 
		WHERE 
			TR_NO=#trNo# AND DOC_NAME=#docName#
	</select>
	<select id="findActionExistsInCCCL" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		SELECT 
			COUNT(1) 
		FROM 
			IMP_CCCL_ACTION_LIST 
		WHERE 
			TR_NO=#trNo# AND ACTION_NAME=#actName#
	</select>
	<select id="findCustomsPassedConstraint" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		SELECT 
			COUNT(1) 
		FROM 
			MAST_CONSTRAINT_CODE 
		WHERE 
			CODE=#ccCode# AND CONSTRAINT='Y'
	</select>
	<select id="findDocNotAvailable" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM IMP_CCCL_DOC_LIST WHERE TR_NO=#trNo# AND NOT_AVAILABLE='Y'
	</select>
	
	 <select id="findCdifAptAgtName" parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT AUTH_REP_NAME FROM imp_srf where srf_no = #srfNo# 
	</select>
	
	<select id="findAgtCodeByAgtName" parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT CODE FROM CUST_COMPANY WHERE CODE_DESC = #agtName# and rownum = 1
	</select>
		
	<!-- Import Customs Clearance Checklist :: Anup :: Ends -->
	
	<!-- Changed for QR :: RANJITH -->
	<!-- Custom Physical Clearance Action List :: Anup :: Begins -->
	<select id="findPhyClrnceLst" parameterClass="cargo.cms.imprt.bo.CustPhyClrActLstBO" resultClass="cargo.cms.imprt.bo.CustPhyClrActLstBO">
	SELECT * FROM 
		( SELECT 
  			A.AWB_NO as awbNo,
        SUBSTR(TRIM(a.AWB_NO),1,3)||'-'||SUBSTR(TRIM(a.AWB_NO),4) as AWBNODISPLAY, 
        TO_CHAR(A.AWB_DATE, 'DDMONYY') as awbDate, 
  			a.FLT_KEY as FLTNO, 
        TO_CHAR(a.FLT_DATE, 'DDMONYY') as ARRDATE, 
        V.HAWB_NO as HAWBNO,
        FH.MANIFEST_DESC HAWBCONTENT, 
        E.APPNTD_AGENT as AGTNAME, 
        NVL(FH.HAWB_PCS,a.MANIFEST_PCS) as MANFPCS, 
  			NVL(FH.HAWB_NET_WT,a.MANIFEST_WT) as MANFWT, 
        F.DOC_REQ as DOCREQYN, 
        F.DOC_RCV as DOCRECVYN, 
        D.CC_CATEGORY as ccCategory, 
        V.CC_CODE as CCCODE, 
  			E.ALLOW_PACCO as PACCOYN, 
        F.RTRV_JO as RTRVJOYN, 
        F.PHY_ACTION_STATUS as STATUS, 
        (a.FLT_KEY || '/' || TO_CHAR(a.FLT_DATE, 'DDMONYY')) as FLTNODTDISPLAY, 
        NVL(decode(V.HAWB_NO,'000000000000000000',(select SUM(LOCN_PCS) from AWB_INVENTORY where AWB_NO=a.AWB_NO and AWB_DATE=a.AWB_DATE and FLT_KEY=a.FLT_KEY and FLT_DATE=a.FLT_DATE),
        (select sum(STRG_PCS) from HAWB_INVENTORY WHERE HAWB_NO = V.HAWB_NO and
        SEQ_NO IN (select SEQ_NO from AWB_INVENTORY where AWB_NO=a.AWB_NO and AWB_DATE=a.AWB_DATE and FLT_KEY=a.FLT_KEY and FLT_DATE=a.FLT_DATE ))),0)
        as INVPCS, 
        NVL(decode(V.HAWB_NO,'000000000000000000',(select SUM(LOCN_WT) from AWB_INVENTORY where AWB_NO=a.AWB_NO and AWB_DATE=a.AWB_DATE and FLT_KEY=a.FLT_KEY and FLT_DATE=a.FLT_DATE),
        (select sum(STRG_WT) from HAWB_INVENTORY WHERE HAWB_NO = V.HAWB_NO and
        SEQ_NO IN (select SEQ_NO from AWB_INVENTORY where AWB_NO=a.AWB_NO and AWB_DATE=a.AWB_DATE and FLT_KEY=a.FLT_KEY and FLT_DATE=a.FLT_DATE ))),0)
        as INVWT, 
        (SELECT B1.TRUCK_DOCK FROM IMP_TRUCK_SRF A1, TRUCK_TRIP B1 WHERE B1.TRIP_ID=A1.TRIP_ID AND 
        A1.SRF_NO=(SELECT SRF.SRF_NO FROM IMP_SRF SRF,IMP_SRF_FLT SFLT WHERE SRF.AWB_NO=A.AWB_NO AND SRF.AWB_DATE=A.AWB_DATE AND SRF.SRF_NO=SFLT.SRF_NO
        AND SFLT.FLT_KEY=A.FLT_KEY AND SFLT.FLT_DATE=A.FLT_DATE AND SRF.STATUS='ISSUED' AND SRF.SRF_EXPY_DATE>=SYSDATE)) AS truckDock ,
        (case when D.CC_CATEGORY IN ('Phy', 'Phy + Doc') and D.IMM_CHK_IND = 'Y' then 'CI' else
         	 case when V.CC_CODE ='TB' then 'TB' else
         	 case when J.AWB_NO IS NOT NULL then 'BKG' else
         	 case when (E.ALLOW_PACCO='Y' AND D.constraint='Y') then 'PACCO' else 
           case when D.constraint='Y' then 'OTHERS' end end end end end) condColumn
		FROM 
  			IMP_CAR_SHP A
        JOIN AWB AWB ON AWB.AWB_NO=A.AWB_NO AND AWB.AWB_DATE=A.AWB_DATE 
        JOIN IMP_CAR_AWB E ON E.AWB_NO=A.AWB_NO AND E.AWB_DATE=A.AWB_DATE 
        JOIN FLT_OPR C ON C.FLT_KEY=A.FLT_KEY AND C.SCH_DATE=A.FLT_DATE AND C.FLT_TYPE='A'
        LEFT JOIN (SELECT SUM(LOCN_PCS) LOCN_PCS, AWB_NO,FLT_KEY,AWB_DATE,FLT_DATE FROM AWB_INVENTORY AW_INGROUP GROUP BY AWB_NO, FLT_KEY, 
      			AWB_DATE, FLT_DATE) AWB_INV ON AWB_INV.AWB_NO=A.AWB_NO AND  AWB_INV.AWB_DATE=A.AWB_DATE AND AWB_INV.FLT_KEY=A.FLT_KEY AND  AWB_INV.FLT_DATE=A.FLT_DATE
        LEFT JOIN V_CST_IMP_CC_CODE V ON V.AWB_NO = A.AWB_NO AND V.FLT_KEY=A.FLT_KEY AND V.FLT_DATE=A.FLT_DATE
        LEFT JOIN (SELECT FHAWB.HAWB_PCS,FHAWB.HAWB_NET_WT,FHL.AWB_NO,FHL.AWB_DATE,FHAWB.HAWB_NO,FHAWB.MANIFEST_DESC
        			FROM EDI_FHL FHL,EDI_FHL_HAWB FHAWB WHERE FHL.TR_NO=FHAWB.TR_NO) FH ON FH.HAWB_NO = V.HAWB_NO AND FH.AWB_NO = A.AWB_NO AND FH.AWB_DATE = A.AWB_DATE
        LEFT JOIN MAST_CONSTRAINT_CODE D ON D.CODE=V.CC_CODE  
        LEFT JOIN IMP_CUST_CLR_LIST F ON F.AWB_NO=A.AWB_NO AND F.AWB_DATE=A.AWB_DATE AND F.FLT_KEY=A.FLT_KEY AND F.FLT_DATE=A.FLT_DATE AND F.HAWB_NO = V.HAWB_NO
        LEFT JOIN (SELECT B2.AWB_NO, B2.AWB_DATE, B2.FLT_KEY, B2.FLT_DATE FROM IMP_BOOKING A2, IMP_BOOKING_DTL B2 
            WHERE A2.BOOKING_NO=B2.BOOKING_NO AND TO_DATE((TO_CHAR(A2.BKG_SLOT_DATE, 'DDMONYY') 
				  || ' ' || TO_CHAR(A2.BKG_SLOT_TO, '0000')), 'DDMONYY HH24MI') > SYSDATE) J 
            	  ON A.AWB_NO=J.AWB_NO AND A.AWB_DATE=J.AWB_DATE AND J.FLT_KEY=A.FLT_KEY AND J.FLT_DATE=A.FLT_DATE
        	where AWB.AWB_CLOSED_YN='N'   and not(a.RECD_PCS>0 and NVL(AWB_INV.LOCN_PCS,0)=0)
  			<isNotEmpty property="carrCode">
  				<isNotEmpty prepend="AND" property="fltNo">
  				A.FLT_KEY=#carrCode# || #fltNo#
  				</isNotEmpty>
  			</isNotEmpty>
  			<isNotEmpty prepend="AND" property="searchAgtName">
  				E.APPNTD_AGENT=#searchAgtName# 
  			</isNotEmpty>
  			<isNotEmpty prepend="AND" property="searchAgtCode">
  				E.AGENT_CUST_NO=#searchAgtCode# 
  			</isNotEmpty>
  			<isNotEmpty prepend="AND" property="arrDate">
  				A.FLT_DATE=TO_DATE(#arrDate#, 'DDMONYY')
  			</isNotEmpty>
  			<isNotEmpty property="awbPrefix">
  				<isNotEmpty prepend="AND" property="awbSuffix">
  				A.AWB_NO=#awbPrefix# || #awbSuffix#
  				</isNotEmpty>
  			</isNotEmpty>
  			<isNotEmpty prepend="AND" property="ataFromHr">
				<isNotEmpty property="ataFromMin">
					<isNotEmpty property="ataToHr">
						<isNotEmpty property="ataToMin">
							C.SCH_TIME BETWEEN #ataFromHr# || #ataFromMin# AND #ataToHr# || #ataToMin#
						</isNotEmpty>
					</isNotEmpty>
				</isNotEmpty>
			</isNotEmpty>
			) WHERE condColumn IS NOT NULL 
			<isNotEmpty prepend="AND" property="srvcType">
					condColumn = #srvcType#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="status">
					upper(status) = upper(#status#)
			</isNotEmpty>
  			<dynamic prepend="ORDER BY ">
  			<isNotEmpty property="sortOrder.sortField">
            	$sortOrder.sortField$
           	</isNotEmpty>
           	<isEmpty property="sortOrder.sortField">
            	awbNo 
           	</isEmpty>
           	</dynamic>
	</select>
	
	<!-- Changed for QR :: RANJITH -->
	<select id="findPhyClrnceLstCOUNT" parameterClass="cargo.cms.imprt.bo.CustPhyClrActLstBO" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM (
		SELECT 
  			 (case when D.CC_CATEGORY IN ('Phy', 'Phy + Doc') and D.IMM_CHK_IND = 'Y' then 'CI' else
         	 case when V.CC_CODE ='TB' then 'TB' else
         	 case when J.AWB_NO IS NOT NULL then 'BKG' else
         	 case when (E.ALLOW_PACCO='Y' AND D.constraint='Y') then 'PACCO' else 
           case when D.constraint='Y' then 'OTHERS' end end end end end) condColumn
		FROM 
  			IMP_CAR_SHP A
        JOIN AWB AWB ON AWB.AWB_NO=A.AWB_NO AND AWB.AWB_DATE=A.AWB_DATE 
        JOIN IMP_CAR_AWB E ON E.AWB_NO=A.AWB_NO AND E.AWB_DATE=A.AWB_DATE 
        JOIN FLT_OPR C ON C.FLT_KEY=A.FLT_KEY AND C.SCH_DATE=A.FLT_DATE AND C.FLT_TYPE='A'
        LEFT JOIN (SELECT SUM(LOCN_PCS) LOCN_PCS, AWB_NO,FLT_KEY,AWB_DATE,FLT_DATE FROM AWB_INVENTORY AW_INGROUP GROUP BY AWB_NO, FLT_KEY, 
      			AWB_DATE, FLT_DATE) AWB_INV ON AWB_INV.AWB_NO=A.AWB_NO AND  AWB_INV.AWB_DATE=A.AWB_DATE AND AWB_INV.FLT_KEY=A.FLT_KEY AND  AWB_INV.FLT_DATE=A.FLT_DATE
        LEFT JOIN V_CST_IMP_CC_CODE V ON V.AWB_NO = A.AWB_NO AND V.FLT_KEY=A.FLT_KEY AND V.FLT_DATE=A.FLT_DATE
        LEFT JOIN MAST_CONSTRAINT_CODE D ON D.CODE=V.CC_CODE  
        LEFT JOIN (SELECT FHAWB.HAWB_PCS,FHAWB.HAWB_NET_WT,FHL.AWB_NO,FHL.AWB_DATE,FHAWB.HAWB_NO 
        FROM EDI_FHL FHL,EDI_FHL_HAWB FHAWB WHERE FHL.TR_NO=FHAWB.TR_NO) FH ON FH.HAWB_NO = V.HAWB_NO AND FH.AWB_NO = A.AWB_NO AND FH.AWB_DATE = A.AWB_DATE
        LEFT JOIN IMP_CUST_CLR_LIST F ON F.AWB_NO=A.AWB_NO AND F.AWB_DATE=A.AWB_DATE AND F.FLT_KEY=A.FLT_KEY AND F.FLT_DATE=A.FLT_DATE AND F.HAWB_NO = V.HAWB_NO
        LEFT JOIN (SELECT B2.AWB_NO, B2.AWB_DATE, B2.FLT_KEY, B2.FLT_DATE FROM IMP_BOOKING A2, IMP_BOOKING_DTL B2 
            WHERE A2.BOOKING_NO=B2.BOOKING_NO AND TO_DATE((TO_CHAR(A2.BKG_SLOT_DATE, 'DDMONYY') 
				  || ' ' || TO_CHAR(A2.BKG_SLOT_TO, '0000')), 'DDMONYY HH24MI') > SYSDATE) J 
            ON A.AWB_NO=J.AWB_NO AND A.AWB_DATE=J.AWB_DATE AND J.FLT_KEY=A.FLT_KEY AND J.FLT_DATE=A.FLT_DATE
        WHERE AWB.AWB_CLOSED_YN='N'  AND NOT(A.RECD_PCS>0 AND NVL(AWB_INV.LOCN_PCS,0)=0)
  			<isNotEmpty property="carrCode">
  				<isNotEmpty prepend="AND" property="fltNo">
  				A.FLT_KEY=#carrCode# || #fltNo#
  				</isNotEmpty>
  			</isNotEmpty>
  			<isNotEmpty prepend="AND" property="arrDate">
  				A.FLT_DATE=TO_DATE(#arrDate#, 'DDMONYY')
  			</isNotEmpty>
  			<isNotEmpty property="awbPrefix">
  				<isNotEmpty prepend="AND" property="awbSuffix">
  				A.AWB_NO=#awbPrefix# || #awbSuffix#
  				</isNotEmpty>
  			</isNotEmpty>
  			<isNotEmpty prepend="AND" property="ataFromHr">
				<isNotEmpty property="ataFromMin">
					<isNotEmpty property="ataToHr">
						<isNotEmpty property="ataToMin">
							C.SCH_TIME BETWEEN #ataFromHr# || #ataFromMin# AND #ataToHr# || #ataToMin#
						</isNotEmpty>
					</isNotEmpty>
				</isNotEmpty>
			</isNotEmpty>
		) WHERE condColumn IS NOT NULL
	</select>
	<select id="findLocationForAWB" parameterClass="cargo.cms.imprt.bo.CustPhyClrActLstBO" resultClass="cargo.cms.imprt.bo.CustPhyClrActLstBO">
		SELECT 
			LOC_CODE as locCode, LSP_NO as lspNo, ULD_KEY as uldKey 
		FROM 
			AWB_INVENTORY A 
		WHERE 
			A.AWB_NO=#awbNo# AND A.AWB_DATE=TO_DATE(#awbDate#, 'DDMONYY') AND A.FLT_KEY=#fltNo# AND 
			A.FLT_DATE=TO_DATE(#arrDate#, 'DDMONYY')
	</select>
	<select id="findWHTypeByLocationExists" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		SELECT 
			COUNT(1) 
		FROM 
			MAST_WH_LOC A, MAST_WH_GROUP B 
		WHERE 
			B.WH_GROUP=A.WH_GROUP AND B.WH_TYPE=#whType# AND A.CODE=#locCode#
	</select>
	<select id="findCPCLEventID" parameterClass="java.lang.String" resultClass="cargo.cms.imprt.bo.CustPhyClrActLstBO">
		SELECT 
			B.EVENT_ID as eventID, A.TR_NO as refNo 
		FROM 
			REGISTER_TR_NO A, REGISTER_TR_NO_EVENTS B 
		WHERE 
			B.TR_TYPE=A.TR_TYPE AND A.TR_TYPE=#trType#
	</select>
	<insert id="insertCPCLRtrvMoveOrder" parameterClass="cargo.cms.imprt.bo.CustPhyClrActLstBO">
		INSERT INTO 
			RTRV_MOVE_ORDER (FUNC,AWB_NO,CURR_LOCN,LSP,ULD,PC,WT,TARGET,STATUS,CR_USER_ID,
			CR_DATE,LM_USER_ID,LM_DATE,TYPE,INV_TYPE,AWB_DATE, REF_NO) 
		VALUES 
			(#eventID#, #awbNo#, #locCode#, #lspNo#, #uldKey#, #invPcs#, #invWt#, #target#, #status#, 
			#crUserid#, SYSDATE, #crUserid#, SYSDATE, #orderType#, #invType#, TO_DATE(#awbDate#, 'DDMONYY'), #refNo#)
	</insert>
	<select id="findCPCLRtrvJobOrderExists" parameterClass="cargo.cms.imprt.bo.CustPhyClrActLstBO" resultClass="java.lang.Integer">
		SELECT 
			COUNT(1) 
		FROM 
			RTRV_MOVE_ORDER 
		WHERE 
			AWB_NO=#awbNo# AND CURR_LOCN=#locCode# AND AWB_DATE=TO_DATE(#awbDate#, 'DDMONYY')
	</select>
	<!-- Changed for QR :: RANJITH -->
	<!--<update id="updateCPCLRtrvJO" parameterClass="cargo.cms.imprt.bo.CustPhyClrActLstBO">
		UPDATE 
			RTRV_MOVE_ORDER
		SET 
			STATUS='CANCELLED', TARGET=#target# 
		WHERE
			AWB_NO=#awbNo# AND CURR_LOCN=#locCode# AND AWB_DATE=TO_DATE(#awbDate#, 'DDMONYY')
	</update>
	-->
	<update id="updateCPCLJOStatusInCustClr" parameterClass="cargo.cms.imprt.bo.CustPhyClrActLstBO">
		UPDATE 
			IMP_CUST_CLR_LIST
		SET 
			RTRV_JO='Y',
			PHY_ACTION_STATUS='Started'
		WHERE
			AWB_NO=#awbNo# AND AWB_DATE=TO_DATE(#awbDate#, 'DDMONYY') AND FLT_KEY=#fltNo# AND 
			FLT_DATE=TO_DATE(#arrDate#, 'DDMONYY') AND HAWB_NO=#hawbNo#
	</update>
	<update id="updateCPCLCustClrLst" parameterClass="cargo.cms.imprt.bo.CustPhyClrActLstBO">
		UPDATE 
			IMP_CUST_CLR_LIST
		SET 
			PHY_ACTION_STATUS=#status#, PHY_ACTION_UPDATE_BY=#crUserid#, PHY_ACTION_UPDATE_DATE=SYSDATE 
		WHERE
			AWB_NO=#awbNo# AND AWB_DATE=TO_DATE(#awbDate#, 'DDMONYY') AND FLT_KEY=#fltNo# AND 
			FLT_DATE=TO_DATE(#arrDate#, 'DDMONYY') AND HAWB_NO=#hawbNo#
	</update>
	<insert id="insertCustClrLstforPhy" parameterClass="cargo.cms.imprt.bo.CustPhyClrActLstBO">
		INSERT INTO 
			IMP_CUST_CLR_LIST
			(TR_NO, AWB_NO, AWB_DATE, FLT_KEY, FLT_DATE, HAWB_NO, CC, PHY_ACTION_STATUS, PHY_ACTION_UPDATE_BY, PHY_ACTION_UPDATE_DATE, 
			CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE,  FLT_TYPE) 
		VALUES
			(#trNo#, #awbNo#, #awbDate#, #fltNo#, TO_DATE(#arrDate#, 'DDMONYY'), #hawbNo#, #ccCode#, #status#, #crUserid#, SYSDATE, 
			#crUserid#, SYSDATE, #crUserid#, SYSDATE, 'I')
	</insert>
		<select id="checkClrncLock" parameterClass="cargo.cms.imprt.bo.CustPhyClrActLstBO" resultClass="java.lang.Integer">
		select   (select count(1) from lsp_inventory where lsp_no in (select LSP_NO from awb_inventory  where awb_no = #awbNo# and awb_date = to_date(#awbDate#,'DDMONYY')) and nvL(lock_rqs,'N') = 'Y')+
     (select count(1) from uld_inventory where uld_key in (select uld_key  from awb_inventory  where awb_no = #awbNo# and awb_date = to_date(#awbDate#,'DDMONYY')) and nvL(lock_rqs,'N') = 'Y')  as count from dual
		
	</select>
	
	<!-- Custom Physical Clearance Action List :: Anup :: Ends -->

	<!-- Inbound Shipment Action List :: Mayank :: Starts -->

	
	<select id="imp_shpmt_action_lst" parameterClass="cargo.cms.external.bo.InbdShpActionListSearchBO" resultClass="cargo.cms.external.bo.InbdShpActionLstShpmntBO">
		<![CDATA[
		select a.* from (
	 			select (case when carAwb.agent_cust_no = #loginCustNo#  then 'AGT' else 
				   case when shp.TRUCKER_CUST_NO =  #loginCustNo#  then 'TRK'  end end ) listType,
				   SUBSTR(shp.AWB_NO,1,3)  awbNoPfx , SUBSTR(shp.AWB_NO,4)  awbNoSfx , 	
				SUBSTR(shp.AWB_NO,1,3)||'-'||SUBSTR(shp.AWB_NO,4) as awbNoDisp ,  shp.awb_no awbNo, to_char(shp.awb_date,'DDMONYY') awbDate ,
				shp.flt_Key fltKey, to_char(shp.flt_date,'DDMONYY') fltDate, sta, eta, ata,
				 (case when carAwb.awb_pcs <> shp.MANIFEST_PCS then 'Y'  else 'N' end ) partShpInd,
        		(case when shp.MANIFEST_PCS <> deliveryPcs then 'Y'  else  'N' end) partRlsInd,
				decode(fltTimes.WHSE_COMPL_DATE,null,'N','Y') bdcompl,
				 decode(fltTimes.WHSE_COMPL_DATE , null, TO_CHAR(TO_DATE(FUN_GET_EST_COLL_TIME(shp.flt_Key,shp.flt_date,'A','BOOKING_EST_COLL_TIME',shp.AWB_NO,shp.awb_date), 'DDMONYY HH24:MI'),'DDMONYY HH24:MI'), 'Available' ) estCollTimeShow, 
        		decode(fltTimes.WHSE_COMPL_DATE , null, TO_CHAR(TO_DATE(FUN_GET_EST_COLL_TIME(shp.flt_Key,shp.flt_date,'A','BOOKING_EST_COLL_TIME',shp.AWB_NO,shp.awb_date), 'DDMONYY HH24:MI'),'HH24:MI'), TO_CHAR(sysdate,'HH24:MI') ) estCollTimeHide,
				TO_CHAR(TO_DATE(FUN_GET_EST_COLL_TIME(shp.flt_Key,shp.flt_date,'A','BOOKING_EST_COLL_TIME',shp.AWB_NO,shp.awb_date), 'DDMONYY HH24:MI'), 'DDMONYY HH24:MI') estCollTime,
				TO_DATE(FUN_GET_EST_COLL_TIME(shp.flt_Key,shp.flt_date,'A','BOOKING_EST_COLL_TIME',shp.AWB_NO,shp.awb_date), 'DDMONYY HH24:MI') estCollDateTime,
				shp.Manifest_pcs pcs, shp.Manifest_wt wt, nvl(awbInv.invPcs,0) invPcs, nvl(awbInv.invWt,0) invWt,
				(select code_desc from cust_company where code = carAwb.agent_cust_no) agtName, carAwb.agent_cust_no agtCode, 
				carAwb.CSGNE_NAME csgnName, carAwb.CNS_CUST_NO csgnCode, 
				shp.DLV_MODE_RQS dlvModeRqs, shp.IMX_RQS imxRqs, carAwb.DOC_CHK_REQ docChkReq, DOC_CHK_COMP docChkCompl,
				case when ( select COUNT(1) from IMP_CUST_CLR_LIST t1, IMP_CCCL_DOC_LIST t2 
					where t2.NOT_AVAILABLE = 'Y' and t1.tr_no = t2.tr_no and t1.awb_no = shp.awb_no and  t1.awb_date = shp.awb_date 
					and t1.flt_key = shp.flt_key and t1.flt_DATE = shp.flt_date) > 0 then 'Y' else 'N' end   reqDocs,  
				shp.NOA_IND noaInd, carAwb.VAL_FOR_SCH_COLL validforSchColl, 
				decode(trkMnf.truck_manf_no,null, 'N', 'Y') schColl, 
				(SELECT V.CC_CODE FROM V_CST_IMP_CC_CODE_AWB V
					WHERE V.FLT_KEY = shp.FLT_KEY AND V.FLT_DATE = shp.FLT_DATE AND V.AWB_NO = shp.AWB_NO 
				  AND NVL(V.HAWB_NO, '000000000000000000') =  '000000000000000000' AND ROWNUM = 1)  ccode, 
				(SELECT nvl((SELECT BOOKING_ALLOW_IND FROM MAST_CONSTRAINT_CODE WHERE CODE = V.CC_CODE),'Y') bkgAllwYN FROM V_CST_IMP_CC_CODE_AWB V
					where V.FLT_KEY = SHP.FLT_KEY and V.FLT_DATE = SHP.FLT_DATE and V.AWB_NO = SHP.AWB_NO 
				  AND NVL(V.HAWB_NO, '000000000000000000') =  '000000000000000000' AND ROWNUM = 1)  bkgAllwYN,
				nvl(carAwb.SPL_CODE1,'') ||' '|| nvl(carAwb.SPL_CODE2,'') ||' '|| nvl(carAwb.SPL_CODE3,'') ||' '|| nvl(carAwb.SPL_CODE4,'') 
				||' '|| nvl(carAwb.SPL_CODE5,'') ||' '|| nvl(carAwb.SPL_CODE6,'') ||' '|| nvl(carAwb.SPL_CODE7,'') ||' '|| nvl(carAwb.SPL_CODE8,'') 
				||' '|| nvl(carAwb.SPL_CODE9,'') shc,   
				 decode(shp.TRUCKER_CUST_NO, #loginCustNo#, DECODE(booking.BOOKING_NO,NULL, 'No Booking', 'Booked'), 
				DECODE(shp.TRUCKER_CUST_NO, NULL, decode(booking.BOOKING_NO,NULL, 'No Booking', 'Booked'),'Assigned'))  status, 
				booking.BOOKING_NO bookingNo,  
				decode(shp.TRUCKER_CUST_NO, #loginCustNo#, DECODE(BOOKING.BOOKING_NO,null, '1', '2'), 
				DECODE(shp.TRUCKER_CUST_NO, NULL, decode(booking.BOOKING_NO,NULL, '1', '2'),'3'))  sortStatus,  
				TO_CHAR(shp.LM_DATE, 'DDMONYY HH24:MI:SSSSS') as lmDate,carAwb.CONSOLE_IND consol,
		        (select BKG_YN from mast_spl_hand_code where code in (carAwb.SPL_CODE1, carAwb.SPL_CODE2, carAwb.SPL_CODE3, carAwb.SPL_CODE4,carAwb.SPL_CODE5, carAwb.SPL_CODE6, carAwb.SPL_CODE7, carAwb.SPL_CODE8,carAwb.SPL_CODE9) AND ROWNUM = 1 ) bkgAllow,
		        (select count(1) from cust_airl_spl_code where carr_code = AWB.carr_code and spl_type = 'SPL_VAL' and spl_code in (carAwb.SPL_CODE1, carAwb.SPL_CODE2, carAwb.SPL_CODE3, carAwb.SPL_CODE4,carAwb.SPL_CODE5, carAwb.SPL_CODE6, carAwb.SPL_CODE7, carAwb.SPL_CODE8,carAwb.SPL_CODE9) AND ROWNUM = 1) valCnt,
		        (select count(1) from cust_airl_spl_code where carr_code = AWB.carr_code and spl_type = 'SPL_ODD' and spl_code in (carAwb.SPL_CODE1, carAwb.SPL_CODE2, carAwb.SPL_CODE3, carAwb.SPL_CODE4,carAwb.SPL_CODE5, carAwb.SPL_CODE6, carAwb.SPL_CODE7, carAwb.SPL_CODE8,carAwb.SPL_CODE9) AND ROWNUM = 1) oddCnt,
		         comp.NO_OF_BOOKING_PERDAY noBkgPerDay,
            		(select code_desc from cust_company where code = shp.TRUCKER_CUST_NO) truckerName ,
            		shp.TRUCKER_CUST_NO asgnTruckerCode ,   
            	(select code_desc  from sec_user where code = shp.TRUCKER_ASSIGN_BY ) asgnLoginId,
                (select HKID from SEC_USER USR  where  code = shp.TRUCKER_ASSIGN_BY) asgTruckerHkid,
                (select HKID from SEC_USER USR  where CODE = #loginId#) loginHkid,
                shp.Carr_code carrCode
			from IMP_CAR_SHP shp       
			join IMP_CAR_AWB carAwb on shp.awb_no = carAwb.awb_no and  shp.awb_date = carAwb.awb_date                  
			join AWB on shp.awb_no = AWB.awb_no and  shp.awb_date = AWB.awb_date and AWB.awb_type = 'I'                
			left join (select sum(locn_pcs) invPcs, sum(locn_wt) invWt, awb_no, awb_date, flt_key, flt_date from AWB_INVENTORY 
			  group by awb_no, awb_date, flt_key, flt_date) awbInv 
			  on shp.awb_no = awbInv.awb_no and  shp.awb_date = awbInv.awb_date and awbInv.flt_Key = shp.flt_Key 
			  and  awbInv.flt_Date = shp.flt_date 
		left join (select max(to_number(bkg.BOOKING_NO)) BOOKING_NO,  bkgDtl.awb_no, bkgDtl.awb_date ,  
          bkgDtl.flt_key, bkgDtl.flt_date 
          from IMP_BOOKING bkg, IMP_BOOKING_DTL bkgDtl 
          where bkg.BOOKING_NO = bkgDtl.BOOKING_NO
          and  to_date( to_char(BKG_SLOT_DATE,'DDMONYY') ||' '||to_char(NVL(BKG_SLOT_FROM,0),'0000') , 'DDMONYY HH24MI') 	> sysdate
          and bkg.status <> 'CANCEL'
          group by bkgDtl.awb_no, bkgDtl.awb_date, bkgDtl.flt_key, bkgDtl.flt_date ) booking 
          on shp.awb_no = booking.awb_no and  shp.awb_date = booking.awb_date 
          and booking.flt_key = shp.flt_key and booking.flt_date = shp.flt_date
			join (select  fltEvt.BRKDN_COMPL_YN, fltEvt.WHSE_COMPL_DATE , flt.FLT_TYPE, flt.sch_date, flt.flt_Key, 
          flt.CARR_CODE, flt.ACFT_TYPE, flt.SCH_TIME estCollTimesta, flt.ACT_TIME estCollTimeata,
          SUBSTR(TRIM(TO_CHAR(NVL(flt.SCH_TIME,0),'0000')),0,2)|| ':'||  SUBSTR(TRIM(TO_CHAR(NVL(flt.SCH_TIME,0),'0000')),3,4) AS sta, 
          PKG_COMMON.get_flt_eta(flt.FLT_KEY,FLT.SCH_DATE,'A') AS eta,    
    	  PKG_COMMON.get_flt_ata(flt.FLT_KEY,FLT.SCH_DATE,'A') AS ata 
          from flt_opr flt, flt_opr_events fltEvt
          where flt.flt_Key = fltEvt.flt_Key and  flt.sch_Date = fltEvt.sch_date and  flt.flt_type = fltEvt.flt_type) fltTimes  
          on  shp.flt_Key = fltTimes.flt_Key and  shp.flt_Date = fltTimes.sch_date and fltTimes.flt_type = 'A'
		 
	left join  (select trkDtl.truck_manf_no truck_manf_no, trkDtl.awb_no, trkDtl.awb_date, trkDtl.flt_key, trkDtl.flt_date, SCH_COLL_FROM, 
          decode(FINAL_TRUCK_MANF_NO, 'N', 'Y') trk_manf_flz
          from TRUCK_MANIFEST trk,  TRUCK_MANIFEST_DTL trkDtl 
          where trk.TRUCK_MANF_NO = trkDtl.TRUCK_MANF_NO 
          and to_date( to_char(SCH_COLL_DATE,'DDMONYY') ||' '||to_char(NVL(SCH_COLL_FROM,0),'0000') , 'DDMONYY HH24MI') > sysdate) trkMnf
          on shp.awb_no = trkMnf.awb_no and  shp.awb_date = trkMnf.awb_date and shp.flt_key = trkMnf.flt_key and shp.flt_DATE = trkMnf.flt_date
      left join (SELECT sf.awb_no, sf.awb_date, sf.flt_key, sf.flt_date, sum(sf.DLV_PCS) deliveryPcs,
                  sum(case when s.STATUS in ('ISSUED') then 1 else 0 end) srfYN
                FROM IMP_SRF s
                join imp_srf_flt sf on s.srf_no = sf.srf_no 
                WHERE ((SRF_EXPY_DATE > sysdate and s.STATUS = 'ISSUED') or s.STATUS = 'POSTED' 
                      or s.SRF_NO in (select SRF_NO from IMP_CDIF where VOID_USER is null ))
                group by  sf.awb_no, sf.awb_date, sf.flt_key, sf.flt_date) srf
          on shp.awb_no = srf.awb_no and  shp.awb_date = srf.awb_date and srf.flt_Key = shp.flt_Key 
          and  srf.flt_Date = shp.flt_date 
			join cust_company comp on  (agent_yn = 'Y' or trucker_yn = 'Y')  and comp.code = #loginCustNo#
      left join CUST_UNDERTAKING cusUnd ON cusUnd.carr_code = awb.CARR_CODE and cusUnd.AGENT_CODE  = carAwb.agent_cust_no
       										and cusUnd.EFF_FROM < SYSDATE AND NVL(cusUnd.EFF_TO, SYSDATE) >= SYSDATE
			Where 
			shp.Carr_code = nvl(#carrCode#,shp.Carr_code ) and shp.awb_no = nvl(#awbNo#,shp.awb_no) 
			and shp.flt_date between #fltDateFrom# and #fltDateTo#  
			and ((carAwb.agent_cust_no = #loginCustNo#  ) or (shp.TRUCKER_CUST_NO =  #loginCustNo# ))
			and nvl(trkMnf.trk_manf_flz, 'N') = 'N' and nvl(srf.srfYN,0) = 0 and (shp.recd_pcs = 0 or (shp.recd_pcs > 0 and awbInv.invPcs > 0))) a
			order by sortStatus,  bdcompl desc , estCollDateTime desc, fltKey, fltDate, awbNoDisp
		]]>
	</select>
	

	<select id="imp_shpmt_action_mawb_cdp" parameterClass="java.lang.String" resultClass="cargo.cms.external.bo.InbdShpActionLstShpmntBO">
		select 
				SUBSTR(shp.AWB_NO,1,3)  awbNoPfx , SUBSTR(shp.AWB_NO,4)  awbNoSfx , 	
				SUBSTR(shp.AWB_NO,1,3)||'-'||SUBSTR(shp.AWB_NO,4) as awbNoDisp ,  shp.awb_no awbNo, to_char(shp.awb_date,'DDMONYY') awbDate ,
				shp.flt_Key fltKey, to_char(shp.flt_date,'DDMONYY HH24:MI') fltDate,to_char(shp.flt_date,'DDMONYY') schFltDate, 
				(select CDIF_NO from awb_inventory where CDIF_NO is not null and awb_no = shp.awb_no  and awb_date = shp.awb_date and flt_key = shp.flt_key and flt_date = shp.flt_date and rownum = 1)as cdifNo,
				 sta, eta, ata,  
				shp.Manifest_pcs pcs, shp.Manifest_wt wt, nvl(awbInv.invPcs,0) invPcs, nvl(awbInv.invWt,0) invWt, 
				(select code_desc from cust_company where code = carAwb.agent_cust_no) agtName, carAwb.agent_cust_no agtCode, 
				TO_CHAR(TO_DATE(FUN_GET_EST_COLL_TIME(shp.flt_Key,shp.flt_date,'A','BOOKING_EST_COLL_TIME',shp.AWB_NO,shp.awb_date), 'DDMONYY HH24:MI'), 'DDMONYY HH24:MI') estCollTime,
				carAwb.CSGNE_NAME csgnName, carAwb.CNS_CUST_NO csgnCode, 
				shp.DLV_MODE_RQS dlvModeRqs, shp.IMX_RQS imxRqs, carAwb.DOC_CHK_REQ docChkReq, DOC_CHK_COMP docChkCompl,				 
				(SELECT V.CC_CODE FROM V_CST_IMP_CC_CODE_AWB V
					WHERE V.FLT_KEY = shp.FLT_KEY AND V.FLT_DATE = shp.FLT_DATE AND V.AWB_NO = shp.AWB_NO 
				  AND NVL(V.HAWB_NO, '000000000000000000') =  '000000000000000000' AND ROWNUM = 1)  ccode,  
				nvl(carAwb.SPL_CODE1,'') ||' '|| nvl(carAwb.SPL_CODE2,'') ||' '|| nvl(carAwb.SPL_CODE3,'') ||' '|| nvl(carAwb.SPL_CODE4,'') 
				||' '|| nvl(carAwb.SPL_CODE5,'') ||' '|| nvl(carAwb.SPL_CODE6,'') ||' '|| nvl(carAwb.SPL_CODE7,'') ||' '|| nvl(carAwb.SPL_CODE8,'') 
				||' '|| nvl(carAwb.SPL_CODE9,'') shc,  
				TO_CHAR(shp.LM_DATE, 'DDMONYY HH24:MI:SSSSS') as lmDate,carAwb.CONSOLE_IND consol,
		        (select BKG_YN from mast_spl_hand_code where code in (carAwb.SPL_CODE1, carAwb.SPL_CODE2, carAwb.SPL_CODE3, carAwb.SPL_CODE4,carAwb.SPL_CODE5, carAwb.SPL_CODE6, carAwb.SPL_CODE7, carAwb.SPL_CODE8,carAwb.SPL_CODE9) AND ROWNUM = 1 ) bkgAllow,
		        (select count(1) from cust_airl_spl_code where carr_code = AWB.carr_code and spl_type = 'SPL_VAL' and spl_code in (carAwb.SPL_CODE1, carAwb.SPL_CODE2, carAwb.SPL_CODE3, carAwb.SPL_CODE4,carAwb.SPL_CODE5, carAwb.SPL_CODE6, carAwb.SPL_CODE7, carAwb.SPL_CODE8,carAwb.SPL_CODE9) AND ROWNUM = 1) valCnt,
		        (select count(1) from cust_airl_spl_code where carr_code = AWB.carr_code and spl_type = 'SPL_ODD' and spl_code in (carAwb.SPL_CODE1, carAwb.SPL_CODE2, carAwb.SPL_CODE3, carAwb.SPL_CODE4,carAwb.SPL_CODE5, carAwb.SPL_CODE6, carAwb.SPL_CODE7, carAwb.SPL_CODE8,carAwb.SPL_CODE9) AND ROWNUM = 1) oddCnt,
		         comp.NO_OF_BOOKING_PERDAY noBkgPerDay,
            		(select code_desc from cust_company where code = shp.TRUCKER_CUST_NO) truckerName ,
            		shp.TRUCKER_CUST_NO asgnTruckerCode ,    
                shp.Carr_code carrCode,
                carAwb.Content as content,
                carAwb.awb_wt as awbWt,
                carAwb.awb_pcs as awbPcs,
                nvl(trkMnf.trk_manf_flz, 'N') as flightManf, 			  			 
			 	nvl(shp.car_created,'N') as carCreated,
			 	(Select decode(count(*), 0,'N','Y') FROM  CUST_COMPANY  WHERE CODE = carAwb.AGENT_CUST_NO and NVL(allow_esrf_aa,'N') = 'Y') as agentEsrfCnt,
			 	(SELECT decode(count(*), 0,'N','Y') FROM mast_carrier where code = AWB.carr_code and NVL(ALLOW_ESRF,'N') = 'Y') as carrEsrfCnt
			from IMP_CAR_SHP shp       
			join IMP_CAR_AWB carAwb on shp.awb_no = carAwb.awb_no and  shp.awb_date = carAwb.awb_date                  
			join AWB on shp.awb_no = AWB.awb_no and  shp.awb_date = AWB.awb_date and AWB.awb_type = 'I'                
      		join GT_SHIPMENT_QUERY_AWB qryList ON qryList.awb_no = AWB.awb_no   and qryList.awb_date =  AWB.awb_date
			left join (select sum(locn_pcs) invPcs, sum(locn_wt) invWt, awb_no, awb_date, flt_key, flt_date from AWB_INVENTORY 
    			group by awb_no, awb_date, flt_key, flt_date) awbInv on shp.awb_no = awbInv.awb_no and  shp.awb_date = awbInv.awb_date and awbInv.flt_Key = shp.flt_Key and  awbInv.flt_Date = shp.flt_date  
			join (select  fltEvt.BRKDN_COMPL_YN, fltEvt.WHSE_COMPL_DATE , flt.FLT_TYPE, flt.sch_date, flt.flt_Key, 
          		flt.CARR_CODE, flt.ACFT_TYPE, flt.SCH_TIME estCollTimesta, flt.ACT_TIME estCollTimeata,
          		SUBSTR(TRIM(TO_CHAR(NVL(flt.SCH_TIME,0),'0000')),0,2)|| ':'||  SUBSTR(TRIM(TO_CHAR(NVL(flt.SCH_TIME,0),'0000')),3,4) AS sta,PKG_COMMON.get_flt_eta(flt.FLT_KEY,FLT.SCH_DATE,'A') AS eta,    
    	  		PKG_COMMON.get_flt_ata(flt.FLT_KEY,FLT.SCH_DATE,'A') AS ata 
          		from flt_opr flt, flt_opr_events fltEvt where flt.flt_Key = fltEvt.flt_Key and  flt.sch_Date = fltEvt.sch_date and  flt.flt_type = fltEvt.flt_type) fltTimes  
          		on  shp.flt_Key = fltTimes.flt_Key and  shp.flt_Date = fltTimes.sch_date and fltTimes.flt_type = 'A'
          	 left join  (select trkDtl.truck_manf_no truck_manf_no, trkDtl.awb_no, trkDtl.awb_date, trkDtl.flt_key, trkDtl.flt_date, 
		 	 	SCH_COLL_FROM, decode(FINAL_TRUCK_MANF_NO, 'N', 'Y') trk_manf_flz from TRUCK_MANIFEST trk,  TRUCK_MANIFEST_DTL trkDtl 
         	 	where trk.TRUCK_MANF_NO = trkDtl.TRUCK_MANF_NO  and to_date( to_char(SCH_COLL_DATE,'DDMONYY') ||' '||to_char(NVL(SCH_COLL_FROM,0),'0000') , 'DDMONYY HH24MI') > sysdate) trkMnf
          		on shp.awb_no = trkMnf.awb_no and  shp.awb_date = trkMnf.awb_date and shp.flt_key = trkMnf.flt_key and shp.flt_DATE = trkMnf.flt_date
			join cust_company comp on  (agent_yn = 'Y' or trucker_yn = 'Y')  and comp.code = carAwb.AGENT_CUST_NO
	</select>
	
	<insert id="insertMAWBQueryAWBList" parameterClass="cargo.cms.external.bo.InbdShpActionListSearchBO">
	      insert into GT_SHIPMENT_QUERY_AWB (AWB_NO,AWB_DATE) values (#awbNo#,#awbDate#) 
	</insert>
	
	
	<select id="imp_shpmt_action_lst_cdp" parameterClass="cargo.cms.external.bo.InbdShpActionListSearchBO" resultClass="cargo.cms.external.bo.InbdShpActionLstShpmntBO">
		<![CDATA[
		select a.* from (
	 			select (case when carAwb.agent_cust_no = #loginCustNo#  then 'AGT' else 
				   case when shp.TRUCKER_CUST_NO =  #loginCustNo#  then 'TRK'  end end ) listType,
				   SUBSTR(shp.AWB_NO,1,3)  awbNoPfx , SUBSTR(shp.AWB_NO,4)  awbNoSfx , 	
				SUBSTR(shp.AWB_NO,1,3)||'-'||SUBSTR(shp.AWB_NO,4) as awbNoDisp ,  shp.awb_no awbNo, to_char(shp.awb_date,'DDMONYY') awbDate ,
				shp.flt_Key fltKey, to_char(shp.flt_date,'DDMONYY HH24:MI') fltDate,to_char(shp.flt_date,'DDMONYY') schFltDate, 
				(select CDIF_NO from awb_inventory where CDIF_NO is not null and awb_no = shp.awb_no  and awb_date = shp.awb_date and flt_key = shp.flt_key and flt_date = shp.flt_date and rownum = 1)as cdifNo,
				 sta, eta, ata,
				 (case when carAwb.awb_pcs <> shp.MANIFEST_PCS then 'Y'  else 'N' end ) partShpInd,
        		(case when shp.MANIFEST_PCS <> deliveryPcs then 'Y'  else  'N' end) partRlsInd,
				decode(fltTimes.WHSE_COMPL_DATE,null,'N','Y') bdcompl,
				 decode(fltTimes.WHSE_COMPL_DATE , null, TO_CHAR(TO_DATE(FUN_GET_EST_COLL_TIME(shp.flt_Key,shp.flt_date,'A','BOOKING_EST_COLL_TIME',shp.AWB_NO,shp.awb_date), 'DDMONYY HH24:MI'),'DDMONYY HH24:MI'), 'Available' ) estCollTimeShow, 
        		decode(fltTimes.WHSE_COMPL_DATE , null, TO_CHAR(TO_DATE(FUN_GET_EST_COLL_TIME(shp.flt_Key,shp.flt_date,'A','BOOKING_EST_COLL_TIME',shp.AWB_NO,shp.awb_date), 'DDMONYY HH24:MI'),'HH24:MI'), TO_CHAR(sysdate,'HH24:MI') ) estCollTimeHide,
				TO_CHAR(TO_DATE(FUN_GET_EST_COLL_TIME(shp.flt_Key,shp.flt_date,'A','BOOKING_EST_COLL_TIME',shp.AWB_NO,shp.awb_date), 'DDMONYY HH24:MI'), 'DDMONYY HH24:MI') estCollTime,
				TO_DATE(FUN_GET_EST_COLL_TIME(shp.flt_Key,shp.flt_date,'A','BOOKING_EST_COLL_TIME',shp.AWB_NO,shp.awb_date), 'DDMONYY HH24:MI') estCollDateTime,
				shp.Manifest_pcs pcs, shp.Manifest_wt wt, nvl(awbInv.invPcs,0) invPcs, nvl(awbInv.invWt,0) invWt,
				(select code_desc from cust_company where code = carAwb.agent_cust_no) agtName, carAwb.agent_cust_no agtCode, 
				carAwb.CSGNE_NAME csgnName, carAwb.CNS_CUST_NO csgnCode, 
				shp.DLV_MODE_RQS dlvModeRqs, shp.IMX_RQS imxRqs, carAwb.DOC_CHK_REQ docChkReq, DOC_CHK_COMP docChkCompl,
				case when ( select COUNT(1) from IMP_CUST_CLR_LIST t1, IMP_CCCL_DOC_LIST t2 
					where t2.NOT_AVAILABLE = 'Y' and t1.tr_no = t2.tr_no and t1.awb_no = shp.awb_no and  t1.awb_date = shp.awb_date 
					and t1.flt_key = shp.flt_key and t1.flt_DATE = shp.flt_date) > 0 then 'Y' else 'N' end   reqDocs,  
				shp.NOA_IND noaInd, carAwb.VAL_FOR_SCH_COLL validforSchColl, 
				decode(trkMnf.truck_manf_no,null, 'N', 'Y') schColl, 
				(SELECT V.CC_CODE FROM V_CST_IMP_CC_CODE_AWB V
					WHERE V.FLT_KEY = shp.FLT_KEY AND V.FLT_DATE = shp.FLT_DATE AND V.AWB_NO = shp.AWB_NO 
				  AND NVL(V.HAWB_NO, '000000000000000000') =  '000000000000000000' AND ROWNUM = 1)  ccode, 
				(SELECT nvl((SELECT BOOKING_ALLOW_IND FROM MAST_CONSTRAINT_CODE WHERE CODE = V.CC_CODE),'Y') bkgAllwYN FROM V_CST_IMP_CC_CODE_AWB V
					where V.FLT_KEY = SHP.FLT_KEY and V.FLT_DATE = SHP.FLT_DATE and V.AWB_NO = SHP.AWB_NO 
				  AND NVL(V.HAWB_NO, '000000000000000000') =  '000000000000000000' AND ROWNUM = 1)  bkgAllwYN,
				nvl(carAwb.SPL_CODE1,'') ||' '|| nvl(carAwb.SPL_CODE2,'') ||' '|| nvl(carAwb.SPL_CODE3,'') ||' '|| nvl(carAwb.SPL_CODE4,'') 
				||' '|| nvl(carAwb.SPL_CODE5,'') ||' '|| nvl(carAwb.SPL_CODE6,'') ||' '|| nvl(carAwb.SPL_CODE7,'') ||' '|| nvl(carAwb.SPL_CODE8,'') 
				||' '|| nvl(carAwb.SPL_CODE9,'') shc,   
				 decode(shp.TRUCKER_CUST_NO, #loginCustNo#, DECODE(booking.BOOKING_NO,NULL, 'No Booking', 'Booked'), 
				DECODE(shp.TRUCKER_CUST_NO, NULL, decode(booking.BOOKING_NO,NULL, 'No Booking', 'Booked'),'Assigned'))  status, 
				booking.BOOKING_NO bookingNo,  
				decode(shp.TRUCKER_CUST_NO, #loginCustNo#, DECODE(BOOKING.BOOKING_NO,null, '1', '2'), 
				DECODE(shp.TRUCKER_CUST_NO, NULL, decode(booking.BOOKING_NO,NULL, '1', '2'),'3'))  sortStatus,  
				TO_CHAR(shp.LM_DATE, 'DDMONYY HH24:MI:SSSSS') as lmDate,carAwb.CONSOLE_IND consol,
		        (select BKG_YN from mast_spl_hand_code where code in (carAwb.SPL_CODE1, carAwb.SPL_CODE2, carAwb.SPL_CODE3, carAwb.SPL_CODE4,carAwb.SPL_CODE5, carAwb.SPL_CODE6, carAwb.SPL_CODE7, carAwb.SPL_CODE8,carAwb.SPL_CODE9) AND ROWNUM = 1 ) bkgAllow,
		        (select count(1) from cust_airl_spl_code where carr_code = AWB.carr_code and spl_type = 'SPL_VAL' and spl_code in (carAwb.SPL_CODE1, carAwb.SPL_CODE2, carAwb.SPL_CODE3, carAwb.SPL_CODE4,carAwb.SPL_CODE5, carAwb.SPL_CODE6, carAwb.SPL_CODE7, carAwb.SPL_CODE8,carAwb.SPL_CODE9) AND ROWNUM = 1) valCnt,
		        (select count(1) from cust_airl_spl_code where carr_code = AWB.carr_code and spl_type = 'SPL_ODD' and spl_code in (carAwb.SPL_CODE1, carAwb.SPL_CODE2, carAwb.SPL_CODE3, carAwb.SPL_CODE4,carAwb.SPL_CODE5, carAwb.SPL_CODE6, carAwb.SPL_CODE7, carAwb.SPL_CODE8,carAwb.SPL_CODE9) AND ROWNUM = 1) oddCnt,
		         comp.NO_OF_BOOKING_PERDAY noBkgPerDay,
            		(select code_desc from cust_company where code = shp.TRUCKER_CUST_NO) truckerName ,
            		shp.TRUCKER_CUST_NO asgnTruckerCode ,   
            	(select code_desc  from sec_user where code = shp.TRUCKER_ASSIGN_BY ) asgnLoginId,
                (select HKID from SEC_USER USR  where  code = shp.TRUCKER_ASSIGN_BY) asgTruckerHkid,
                (select HKID from SEC_USER USR  where CODE = #loginId#) loginHkid,
                shp.Carr_code carrCode,
                carAwb.Content as content,
                carAwb.awb_wt as awbWt,
                carAwb.awb_pcs as awbPcs
			from IMP_CAR_SHP shp       
			join IMP_CAR_AWB carAwb on shp.awb_no = carAwb.awb_no and  shp.awb_date = carAwb.awb_date                  
			join AWB on shp.awb_no = AWB.awb_no and  shp.awb_date = AWB.awb_date and AWB.awb_type = 'I'                
			left join (select sum(locn_pcs) invPcs, sum(locn_wt) invWt, awb_no, awb_date, flt_key, flt_date from AWB_INVENTORY 
			  group by awb_no, awb_date, flt_key, flt_date) awbInv 
			  on shp.awb_no = awbInv.awb_no and  shp.awb_date = awbInv.awb_date and awbInv.flt_Key = shp.flt_Key 
			  and  awbInv.flt_Date = shp.flt_date 
		left join (select max(to_number(bkg.BOOKING_NO)) BOOKING_NO,  bkgDtl.awb_no, bkgDtl.awb_date ,  
          bkgDtl.flt_key, bkgDtl.flt_date 
          from IMP_BOOKING bkg, IMP_BOOKING_DTL bkgDtl 
          where bkg.BOOKING_NO = bkgDtl.BOOKING_NO
          and  to_date( to_char(BKG_SLOT_DATE,'DDMONYY') ||' '||to_char(NVL(BKG_SLOT_FROM,0),'0000') , 'DDMONYY HH24MI') 	> sysdate
          and bkg.status <> 'CANCEL'
          group by bkgDtl.awb_no, bkgDtl.awb_date, bkgDtl.flt_key, bkgDtl.flt_date ) booking 
          on shp.awb_no = booking.awb_no and  shp.awb_date = booking.awb_date 
          and booking.flt_key = shp.flt_key and booking.flt_date = shp.flt_date
			join (select  fltEvt.BRKDN_COMPL_YN, fltEvt.WHSE_COMPL_DATE , flt.FLT_TYPE, flt.sch_date, flt.flt_Key, 
          flt.CARR_CODE, flt.ACFT_TYPE, flt.SCH_TIME estCollTimesta, flt.ACT_TIME estCollTimeata,
          SUBSTR(TRIM(TO_CHAR(NVL(flt.SCH_TIME,0),'0000')),0,2)|| ':'||  SUBSTR(TRIM(TO_CHAR(NVL(flt.SCH_TIME,0),'0000')),3,4) AS sta, 
          PKG_COMMON.get_flt_eta(flt.FLT_KEY,FLT.SCH_DATE,'A') AS eta,    
    	  PKG_COMMON.get_flt_ata(flt.FLT_KEY,FLT.SCH_DATE,'A') AS ata 
          from flt_opr flt, flt_opr_events fltEvt
          where flt.flt_Key = fltEvt.flt_Key and  flt.sch_Date = fltEvt.sch_date and  flt.flt_type = fltEvt.flt_type) fltTimes  
          on  shp.flt_Key = fltTimes.flt_Key and  shp.flt_Date = fltTimes.sch_date and fltTimes.flt_type = 'A'
		 
		  left join  (select trkDtl.truck_manf_no truck_manf_no, trkDtl.awb_no, trkDtl.awb_date, trkDtl.flt_key, trkDtl.flt_date, 
		 	 SCH_COLL_FROM, decode(FINAL_TRUCK_MANF_NO, 'N', 'Y') trk_manf_flz from TRUCK_MANIFEST trk,  TRUCK_MANIFEST_DTL trkDtl 
         	 where trk.TRUCK_MANF_NO = trkDtl.TRUCK_MANF_NO  and to_date( to_char(SCH_COLL_DATE,'DDMONYY') ||' '||to_char(NVL(SCH_COLL_FROM,0),'0000') , 'DDMONYY HH24MI') > sysdate) trkMnf
          on shp.awb_no = trkMnf.awb_no and  shp.awb_date = trkMnf.awb_date and shp.flt_key = trkMnf.flt_key and shp.flt_DATE = trkMnf.flt_date
     	 
          
     	 
     	 ]]>
     	 
     	 <isNotEmpty property="awbNo">
     	  left join (SELECT sf.awb_no, sf.awb_date, sf.ORIG_FLT_KEY as flt_Key, sf.ORIG_FLT_DATE as flt_date, sum(sf.DLV_PCS) deliveryPcs, 
     	  		sum(case when s.STATUS in ('ISSUED') then 1 else 0 end) srfYN FROM IMP_SRF s
                join imp_srf_flt sf on s.srf_no = sf.srf_no 
                  WHERE ( (STATUS  = 'ISSUED' AND sysdate &lt; srf_expy_date)  
                      OR EXISTS (SELECT NULL FROM imp_srf_awb_inventory WHERE srf_no = s.srf_no AND s.status = 'ISSUED' AND dlv_pcs &gt; 0) ) 
             group by  sf.awb_no, sf.awb_date, sf.ORIG_FLT_KEY, sf.ORIG_FLT_DATE) srf on shp.awb_no = srf.awb_no and  shp.awb_date = srf.awb_date             
             and srf.flt_Key = shp.flt_Key and srf.flt_Date = shp.flt_date
     	 </isNotEmpty>
           
     	 <isEmpty property="awbNo">
     	 	left join (SELECT sf.awb_no, sf.awb_date, sum(sf.DLV_PCS) deliveryPcs, sum(case when s.STATUS in ('ISSUED') then 1 else 0 end) srfYN FROM IMP_SRF s
                join imp_srf_flt sf on s.srf_no = sf.srf_no 
                  WHERE ( (STATUS  = 'ISSUED' AND sysdate &lt; srf_expy_date)  
                      OR EXISTS (SELECT NULL FROM imp_srf_awb_inventory WHERE srf_no = s.srf_no AND s.status = 'ISSUED' AND dlv_pcs &gt; 0) ) 
             group by  sf.awb_no, sf.awb_date ) srf on shp.awb_no = srf.awb_no and  shp.awb_date = srf.awb_date  
     	 </isEmpty> 
             
           
           <![CDATA[
			join cust_company comp on  (agent_yn = 'Y' or trucker_yn = 'Y')  and comp.code = #loginCustNo#     		
     		left join CUST_UNDERTAKING cusUnd ON cusUnd.carr_code = awb.CARR_CODE and cusUnd.AGENT_CODE  = carAwb.agent_cust_no
       										and cusUnd.EFF_FROM < SYSDATE AND NVL(cusUnd.EFF_TO, SYSDATE) >= SYSDATE
			Where 
			 nvl(trkMnf.trk_manf_flz, 'N') = 'N' 			  			 
			 AND nvl(shp.car_created,'N') = 'Y'
		     AND Exists (SELECT null FROM  MAST_CARRIER where CODE = AWB.carr_code and nvl(allow_esrf,'N') = 'Y' )
		     AND Exists (SELECT null FROM  cust_company where code_desc = carAwb.appntd_agent and nvl(allow_esrf_aa,'N') = 'Y' and rownum = 1 )
		     
		 and ( 
		     		exists (
			               SELECT null FROM V_CREDIT_FECILITY_DTL where cust_no = #loginCustNo# AND NVL(CR_TYPE,'GEN') not like 'E%' and (NVL(CR_BAL,0) > 0 or NVL(VIRTUAL_ACC,'N') = 'Y')
			                    AND instr( nvl(UPPER(CARR_CODE),nvl(UPPER(AWB.carr_code),'*')), nvl(UPPER(AWB.carr_code),'**') ) > 0 
			                     AND (TO_DATE(TO_CHAR(CR_EFF_DATE_FROM,'DDMONYY'),'DDMONYY') <= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') 
                				 AND TO_DATE(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') >= TO_DATE(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') )
                				 AND nvl(upper(Status),'**') <> 'VOID' AND ROWNUM = 1
			               )  OR exists (
				                SELECT null 
				                 FROM BILL_BUNDLE_PAYMENT_DTL dtl, BILL_BUNDLE_PAYMENT_HD hd WHERE hd.BUNDLE_REF_NO = dtl.BUNDLE_REF_NO  
				                 AND shp.awb_no = dtl.awb_no and  shp.awb_date = dtl.awb_date and trunc(SYSDATE) = trunc(HD.VALIDITY_DATE) AND  (nvl(COMMITTED_AMT,0) - nvl(USED_AMT,0) ) > 0
				                 AND hd.status = 'COMMITTED'
				         )
		      )
         
		]]>
			
			<isNotEmpty property="carrCode">
			 and shp.Carr_code = nvl(#carrCode#,shp.Carr_code )
			</isNotEmpty>
			
			<isEmpty property="awbNo">
			  and (shp.recd_pcs = 0 or (shp.recd_pcs &gt; 0 and awbInv.invPcs &gt; 0))
			  and nvl(srf.srfYN,0) = 0
			</isEmpty>
			
			<isNotEmpty property="awbNo">
			 and shp.awb_no = nvl(#awbNo#,shp.awb_no)  AND shp.AWB_DATE = to_date(nvl(#awbDate#,shp.AWB_DATE),'DDMONYY')  
			</isNotEmpty>
			
			 <isNotEmpty property="loginCustNo">
			  and ((carAwb.agent_cust_no = #loginCustNo#  ) or (shp.TRUCKER_CUST_NO =  #loginCustNo# ))
			 </isNotEmpty>		 
          
            <isNotEmpty property="fltDateFrom">
			<isNotEmpty property="fltDateTo">
			and shp.flt_date between #fltDateFrom# and #fltDateTo#	
			</isNotEmpty>
			</isNotEmpty>
			) a
	      order by sortStatus,  bdcompl desc , estCollDateTime desc, fltKey, fltDate, awbNoDisp
	</select>


	<select id="frtchAgetCodeCDP" parameterClass="cargo.cms.external.bo.InbdShpActionListSearchBO" resultClass="java.lang.String">
	 	select Agent_Cust_No from IMP_CAR_AWB where  Awb_No = #awbNo#  AND AWB_DATE = to_date(#awbDate#,'DDMONYY')  
	</select>
		
	<select id="checkForAWBShipQuery" parameterClass="cargo.cms.external.bo.InbdShpActionListSearchBO" resultClass="java.lang.Integer">
	 	select count(1) from AWB where  Awb_No = #awbNo#  AND AWB_DATE = to_date(#awbDate#,'DDMONYY')  
	</select>
	
	<select id="fetchHouseWaybillListCDP" parameterClass="cargo.cms.extsvc.bo.HouseWaybillHAWBBO" resultClass="cargo.cms.extsvc.bo.HouseWaybillHAWBBO">
	SELECT Hawb_No as houseWaybillNumber ,Manifest_Desc as goodsDescription  FROM edi_fhl_hawb where tr_no in (SELECT tr_no FROM edi_fhl where awb_no = #awbNo# and awb_date = to_date(#awbDate#,'DDMONYY'))
	</select>
	
	<select id="houseWaybillTotalCountCDP" parameterClass="cargo.cms.external.bo.InbdShpActionLstShpmntBO" resultClass="java.lang.Integer">
	SELECT COUNT(1)  FROM edi_fhl_hawb where tr_no in (SELECT tr_no FROM edi_fhl where awb_no = #awbNo# and awb_date = to_date(#awbDate#,'DDMONYY'))
	</select>
	
	 <select id="getsrfCounts" parameterClass="cargo.cms.external.bo.InbdShpActionLstShpmntBO" resultClass="java.lang.String">
	 <![CDATA[
			SELECT DECODE(ESRF_YN,'Y','eSRF','PaperSRF') as srfIssued FROM IMP_SRF t 
			join imp_srf_flt f ON f.SRF_NO = t.SRF_NO AND f.awb_no = t.awb_no and f.awb_date = t.awb_date 
			WHERE t.AWB_NO = #awbNo# AND t.AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY')	
			AND ORIG_FLT_KEY = #fltKey# AND ORIG_FLT_DATE = TO_DATE(#schFltDate#, 'DDMONYY')
			AND ( (STATUS  = 'ISSUED' AND sysdate < srf_expy_date) 
			 OR EXISTS (SELECT NULL FROM imp_srf_awb_inventory WHERE srf_no = t.srf_no AND t.status = 'ISSUED' AND dlv_pcs >0) ) 
    		order by srf_date desc
	 	]]>
	</select>  
	
	 <select id="getsrfCountsAWB" parameterClass="cargo.cms.external.bo.InbdShpActionLstShpmntBO" resultClass="java.lang.String">
	   <![CDATA[
			SELECT DECODE(ESRF_YN,'Y','eSRF','PaperSRF') as srfIssued FROM IMP_SRF t 
			join imp_srf_flt f ON f.SRF_NO = t.SRF_NO AND f.awb_no = t.awb_no and f.awb_date = t.awb_date 
			WHERE t.AWB_NO = #awbNo# AND t.AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY') AND FLT_KEY = #cdifNo# 
			AND ( (STATUS  = 'ISSUED' AND sysdate < srf_expy_date) 
			 OR EXISTS (SELECT NULL FROM imp_srf_awb_inventory WHERE srf_no = t.srf_no AND t.status = 'ISSUED' AND dlv_pcs >0) ) 
    		order by srf_date desc
	 	]]>
	</select> 	
	
	<select id="getsrfCountPOSTED" parameterClass="cargo.cms.external.bo.InbdShpActionLstShpmntBO" resultClass="java.lang.String">
	 <![CDATA[
			SELECT DECODE(ESRF_YN,'Y','eSRF','PaperSRF') as srfIssued FROM IMP_SRF t 
			join imp_srf_flt f ON f.SRF_NO = t.SRF_NO AND f.awb_no = t.awb_no and f.awb_date = t.awb_date 
			WHERE t.AWB_NO = #awbNo# AND t.AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY') 
			AND ORIG_FLT_KEY = #fltKey# AND ORIG_FLT_DATE = TO_DATE(#schFltDate#, 'DDMONYY')
		  	AND STATUS  = 'POSTED' order by srf_date desc
	 	]]>
	</select> 
	
	<select id="getsrfCountPOSTEDAWB" parameterClass="cargo.cms.external.bo.InbdShpActionLstShpmntBO" resultClass="java.lang.String">
	 <![CDATA[
			SELECT DECODE(ESRF_YN,'Y','eSRF','PaperSRF') as srfIssued FROM IMP_SRF t 
			join imp_srf_flt f ON f.SRF_NO = t.SRF_NO AND f.awb_no = t.awb_no and f.awb_date = t.awb_date 
			WHERE t.AWB_NO = #awbNo# AND t.AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY')  
		  	AND STATUS  = 'POSTED' order by srf_date desc
	 	]]>
	</select> 
	
	
	<select id="getsrfIssuedForSHP" parameterClass="cargo.cms.external.bo.InbdShpActionLstShpmntBO" resultClass="java.lang.String">
	 <![CDATA[
			SELECT DECODE(ESRF_YN,'Y','eSRF','PaperSRF') as srfIssued FROM IMP_SRF t 
			join imp_srf_flt f ON f.SRF_NO = t.SRF_NO AND f.awb_no = t.awb_no and f.awb_date = t.awb_date 
			WHERE t.AWB_NO = #awbNo# AND t.AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY')
			AND (  STATUS  = 'POSTED' OR (STATUS  = 'ISSUED' AND sysdate < srf_expy_date)  
			 		OR EXISTS (SELECT NULL FROM imp_srf_awb_inventory WHERE srf_no = t.srf_no AND t.status = 'ISSUED' AND dlv_pcs >0) ) 			  
			AND ORIG_FLT_KEY = #fltKey# AND ORIG_FLT_DATE = TO_DATE(#schFltDate#, 'DDMONYY')
		  	order by srf_date desc
	 	]]>
	</select> 
	
	<select id="getsrfIssuedForAWB" parameterClass="cargo.cms.external.bo.InbdShpActionLstShpmntBO" resultClass="java.lang.String">
	 <![CDATA[
			SELECT DECODE(ESRF_YN,'Y','eSRF','PaperSRF') as srfIssued FROM IMP_SRF t 
			join imp_srf_flt f ON f.SRF_NO = t.SRF_NO AND f.awb_no = t.awb_no and f.awb_date = t.awb_date 
			WHERE t.AWB_NO = #awbNo# AND t.AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY') 
			AND ( STATUS  = 'POSTED' OR (STATUS  = 'ISSUED' AND sysdate < srf_expy_date) 
			 OR EXISTS (SELECT NULL FROM imp_srf_awb_inventory WHERE srf_no = t.srf_no AND t.status = 'ISSUED' AND dlv_pcs >0) )  
		  	order by srf_date desc
	 	]]>
	</select> 
	
	

	<select id="esrfEligibilityCDP" parameterClass="cargo.cms.external.bo.InbdShpActionLstShpmntBO" resultClass="java.lang.String">
	      SELECT FUN_GET_ESRF_STATUS(#awbNo#,#awbDate#) as esrfEligibleStatus from DUAL
	</select>
	

	<insert id="createHKIDHashMapping" parameterClass="cargo.cms.extsvc.bo.CDPImportIncomingBO">
	      insert into MAST_ESRF_HKID_HASH (TR_NO,HKID,HASH_HKID,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE) values 
	      (MAST_ESRF_HKID_HASH_SEQ.NEXTVAL,#nationalID#,#nationalIdHash#,#createdUserId#,sysdate,#createdUserId#,sysdate)
	</insert>
	
	<delete id="deleteHKIDHashMapping" parameterClass="cargo.cms.extsvc.bo.CDPImportIncomingBO">
	      delete from MAST_ESRF_HKID_HASH where HASH_HKID=#nationalIdHash#
	</delete>

	
	<select id="isExithKIDHashMapping" parameterClass="cargo.cms.extsvc.bo.CDPImportIncomingBO" resultClass="java.lang.Integer">
	SELECT COUNT(1)  FROM MAST_ESRF_HKID_HASH where HASH_HKID=#nationalIdHash#
	</select>

	<select id="fetchHKID" parameterClass="cargo.cms.extsvc.bo.CDPImportIncomingBO" resultClass="java.lang.String">
	      SELECT HKID from MAST_ESRF_HKID_HASH where Hash_Hkid=#nationalIdHash#
	</select>

       	<select id="validateAPIAuthorized" parameterClass="cargo.cms.extsvc.bo.CDPImportIncomingBO" resultClass="java.lang.Integer">
	   SELECT COUNT(1) FROM CUST_AGENT_AUTH_REP WHERE cust_no = #agentCode# and auth_rep_id = #nationalID#  and auth_rep_name  = #fullName#
	  <!--  SELECT COUNT(1) FROM
		  (SELECT auth_rep_name, TRIM(SUBSTR(auth_rep_name,0,DECODE(instr(auth_rep_name,' '),0,LENGTH(auth_rep_name),instr(auth_rep_name,' ')))) AS firstName
		      FROM CUST_AGENT_AUTH_REP WHERE cust_no = #agentCode# and auth_rep_id = #nationalID#  )
						WHERE 1 = 1 
						AND ( auth_rep_name  = #fullName#
		        			OR  DECODE( (SUBSTR(auth_rep_name,LENGTH(firstName) + 2,LENGTH(auth_rep_name))),null,firstName, 
		        				(SUBSTR(auth_rep_name,LENGTH(firstName) + 2,LENGTH(auth_rep_name))) || ' ' || firstName) = #fullName#) -->
	</select> 
	
	<select id="checkEsrfPostStatus" parameterClass="cargo.cms.extsvc.bo.CDPImportIncomingBO" resultClass="java.lang.Integer">
	SELECT count(1) FROM imp_srf where srf_no = #esrfNo# and post_date is not null
	</select> 
	


	<select id="getBookingAgtCreditBalList" parameterClass="cargo.cms.external.bo.InbdShpActionLstShpmntBO" resultClass="cargo.cms.external.bo.InbdShpActionLstShpmntBO">
	 <![CDATA[
		SELECT crdLvl creditLvl, NVL(SUM(CR_BAL), 0) creditBalance, NVL(SUM(AGTTAB.WITHHELD_BKG_AMT), 0) amtAgnstBkg, 
			(NVL(sum(CR_BAL), 0) - to_number(NVL(sum(agtTab.WITHHELD_BKG_AMT), 0))) netCreditBalanceAvlb
  				FROM V_CREDIT_FECILITY agtTab
			WHERE NVL(AGTTAB.STATUS,'*') <> 'VOID' 
        			AND CR_EFF_DATE_FROM <= TRUNC(SYSDATE) AND NVL(CR_EFF_DATE_TO, TRUNC(SYSDATE)) >= TRUNC(SYSDATE)  
   			and agtTab.CUST_NO = #agtCode#
			AND  (instr( nvl(UPPER(CARR_CODE),'**'), nvl(UPPER(#carrCode#),'**') ) > 0 
           		OR (CARR_CODE IS NULL AND UPPER(CR_TYPE) = 'GEN')
           		or ( CARR_CODE is null and nvl(UPPER(CR_TYPE),'**') in ('IO','IG')))
      			and crdLvl in ('AGENT_LVL','DM_LVL','CPCT_LVL','CPCT_LVL_GEN') 
      			group by crdLvl	   	
   	]]>
   	</select>

	<select id="getBookingAirlCreditBalList" parameterClass="cargo.cms.external.bo.InbdShpActionLstShpmntBO" resultClass="cargo.cms.external.bo.InbdShpActionLstShpmntBO">
	<![CDATA[
		SELECT crdLvl creditLvl, NVL(SUM(CR_BAL), 0) creditBalance, NVL(SUM(AGTTAB.WITHHELD_BKG_AMT), 0) amtAgnstBkg, 
			(NVL(sum(CR_BAL), 0) - to_number(NVL(sum(agtTab.WITHHELD_BKG_AMT), 0))) netCreditBalanceAvlb
  				FROM V_CREDIT_FECILITY agtTab
			WHERE NVL(AGTTAB.STATUS,'*') <> 'VOID' 
        			AND CR_EFF_DATE_FROM <= TRUNC(SYSDATE) AND NVL(CR_EFF_DATE_TO, TRUNC(SYSDATE)) >= TRUNC(SYSDATE)  
   			and agtTab.CUST_NO = #agtCode#
			AND  (instr( nvl(UPPER(CARR_CODE),'**'), nvl(UPPER(#carrCode#),'**') ) > 0 
           		OR (CARR_CODE IS NULL AND UPPER(CR_TYPE) = 'GEN')
           		or ( CARR_CODE is null and nvl(UPPER(CR_TYPE),'**') in ('IO','IG')))
      			 AND CRDLVL IN ('AGENT_LVL','DM_LVL','VIRTUAL_LVL_GEN','VIRTUAL_LVL','AIRL_LVL_GEN','AIRL_LVL')
      			group by crdLvl	    
		]]>
	</select>
	
	<select id="getAirlAmtAgnstBkg" parameterClass="cargo.cms.external.bo.InbdShpActionLstShpmntBO" resultClass="java.lang.String">
	 <![CDATA[
	     select sum(bkgDtl.AIRL_CHRG) airlChrgs
				from IMP_BOOKING bkg
	      		join IMP_BOOKING_DTL bkgDtl on bkg.BOOKING_NO = bkgDtl.BOOKING_NO      
	     		join IMP_CAR_SHP shp  on shp.awb_no = bkgDtl.awb_no and  shp.awb_date = bkgDtl.awb_date 
	     								and shp.flt_Key = bkgDtl.flt_Key and  shp.flt_Date = bkgDtl.flt_date  
	     Where  status = 'ISSUED'  and ((bkg.agent_id = #agtCode#  ) or (bkg.TRUCKER_id =  #agtCode# )) 
	     and shp.carr_code = #carrCode#
	     and  TO_DATE(to_char(BKG_SLOT_DATE,'DDMONYY') ||' '||to_char(to_date(TRIM(TO_CHAR(NVL(BKG_SLOT_FROM,0),'0000')),'HH24MI'),'HH24MI'), 'DDMONYY HH24MI') > sysdate
   	]]>
   	</select>
        
	<select id="getAgtAmtAgnstBkg" parameterClass="java.lang.String" resultClass="java.lang.String">
	 <![CDATA[
     	select sum(bkgDtl.CPCT_CHRG) agtChrgs
		from IMP_BOOKING bkg
		join IMP_BOOKING_DTL bkgDtl on bkg.BOOKING_NO = bkgDtl.BOOKING_NO      
		Where  status = 'ISSUED' 
			and TO_DATE(to_char(BKG_SLOT_DATE,'DDMONYY') ||' '||to_char(to_date(TRIM(TO_CHAR(NVL(BKG_SLOT_FROM,0),'0000')),'HH24MI'),'HH24MI'), 'DDMONYY HH24MI') > sysdate
			and ((bkg.agent_id = #loginCustNo#  ) or (bkg.TRUCKER_id =  #loginCustNo# ))
   	]]>
   	</select>
   	

	 <update id="upd_booking_airl_withheld_amount" parameterClass="map">
		update CUST_AGENT_AIRL_CREDIT
		set WITHHELD_BKG_AMT = #whldAmt#
		where CUST_NO = #agtCode# and CARR_CODE = #carrCode# AND nvl(upper(Status),'**') &lt;&gt; 'VOID'
	</update>
	
	 <update id="upd_booking_agt_withheld_amount" parameterClass="map">
		update CUST_AGENT_CREDIT
		set WITHHELD_BKG_AMT = #whldAmt#
		where CUST_NO = #agtCode#  and nvl(upper(Status),'**') &lt;&gt; 'VOID'
	</update>

	
	<select id="fetchBookingShowTC" parameterClass="map" resultClass="java.lang.String">
		<![CDATA[
			select TC_IND from MAINTAIN_TC WHERE FUNCTION_CODE = #functionName#
		]]>
	</select>
	
	<select id="fetch_prc_os_chrgs" parameterClass="map" resultClass="java.lang.String">
		<![CDATA[
		select sum(AAT_OS + AIRL_OS) osCharge from GT_OS_CHARGES 
		where		AWB_NO = #awbNo# AND AWB_DATE = to_date(#awbDate#,'DDMONYY')
				group by AWB_NO, AWB_DATE
		]]>
	</select>
	
	<select id="getAssignTruckerCode" parameterClass="java.lang.String" resultClass="java.lang.String">
	 	select code from cust_company where  code_desc = #asgnTruckerName# and TRUCKER_YN = 'Y'     
	</select>
	
	<update id="assignShipmentmentToTruker" parameterClass="cargo.cms.external.bo.InbdShpActionLstShpmntBO">
		update IMP_CAR_SHP 
				set 
				TRUCKER_CUST_NO =  #asgnTruckerCode# ,                     
				TRUCKER_ASSIGN_TIME = sysdate , 
				TRUCKER_ASSIGN_BY = #loginId# ,
				LM_USER_ID = #loginId#,
				LM_DATE  = sysdate 
				where 
				AWB_NO = #awbNo# and awb_date = TO_DATE(#awbDate#, 'DDMONYY') 
				and flt_key = #fltKey# and flt_date = TO_DATE(#fltDate#, 'DDMONYY')				
	</update>
	
	<update id="deleteAssignmentToTruker" parameterClass="cargo.cms.external.bo.InbdShpActionLstShpmntBO">
		update IMP_CAR_SHP 
				set 
				TRUCKER_CUST_NO =  null ,                     
				TRUCKER_ASSIGN_TIME = null , 
				TRUCKER_ASSIGN_BY = null ,
				LM_USER_ID = #loginId#,
				LM_DATE  = sysdate 
				where 
				AWB_NO = #awbNo# and awb_date = TO_DATE(#awbDate#, 'DDMONYY') 
				and flt_key = #fltKey# and flt_date = TO_DATE(#fltDate#, 'DDMONYY')				
	</update>
	
	<!-- and LM_DATE = TO_DATE(#lmDate#, 'DDMONYY HH24:MI:SSSSS')  -->
	<update id="updateDLVMode" parameterClass="cargo.cms.external.bo.InbdShpActionLstShpmntBO">
		update IMP_CAR_SHP 
				set 
				DLV_MODE_RQS  = #dlvModeRqs# ,        
				IMX_RQS = #imxRqs# ,	
				IMX_RQS_DATE = sysdate,		
				LM_USER_ID = #loginId# , 
				LM_DATE  = sysdate 
				where 
				AWB_NO = #awbNo# and awb_date = TO_DATE(#awbDate#, 'DDMONYY') 
				and flt_key = #fltKey# and flt_date = TO_DATE(#fltDate#, 'DDMONYY')					
	</update>
	
		<select id="getDateList" parameterClass="java.lang.String" resultClass="cargo.cms.afw.bo.MasterBO">
		<![CDATA[			
			SELECT CODE codeId ,
			  CODE codeDesc
			FROM
			  ( 
			      SELECT TO_CHAR(FROMDATE + COUNTER, 'DDMONYY') AS CODE
			      FROM (
			        SELECT TO_DATE(TO_CHAR(SYSDATE, 'DDMONYY'), 'DDMONYY') FROMDATE, 
			        TO_DATE(TO_CHAR(SYSDATE, 'DDMONYY'), 'DDMONYY') + 
			          (NVL((SELECT RULE_VALUE FROM CMSRULES WHERE RULE_CODE = 'BOOKING_TIME_SLOT_DAYS'), 3) - 1) TODATE 
			        FROM DUAL			   
			      ) DTINPUT, XMLTABLE('for $$counter in 0 to xs:int(D) return $$counter'
			      PASSING XMLELEMENT(D, ROUND(TODATE - FROMDATE))
			      COLUMNS COUNTER INTEGER PATH '.')
			  )
			ORDER BY 1
	     ]]>
	</select>        
	
	 <select id="getBookingInitTime" parameterClass="java.lang.String" resultClass="cargo.cms.external.bo.InbdShpActionLstBookingBO">
		<![CDATA[	
			select 
			to_char(trunc(sysdate+2/24+1/96, 'hh') + floor(to_char(sysdate+2/24+1/96, 'mi')/15)*15/1440 ,'DDMONYY HH24:MI') timeSlotDateTime,
			to_char(trunc(sysdate+2/24+1/96, 'hh') + floor(to_char(sysdate+2/24+1/96, 'mi')/15)*15/1440 ,'DDMONYY') timeSlotDate, 
			to_char(trunc(sysdate+2/24+1/96, 'hh') + floor(to_char(sysdate+2/24+1/96, 'mi')/15)*15/1440 ,'HH24:MI') startTimeSlot,
			to_char(trunc(sysdate+2/24+1/48, 'hh') + floor(to_char(sysdate+2/24+1/48, 'mi')/15)*15/1440 ,'HH24:MI') endTimeSlot
			from dual     
	 	]]>
	</select>     
	
	<select id="getTimeSlots" parameterClass="java.lang.String" resultClass="cargo.cms.external.bo.InbdShpActionListTimeSlotBO">
	<![CDATA[	
			select           
				to_char(to_date(#passDate#,'DDMONYY HH24:MI') + 1/96,'HH24:MI') ||' - '||           
				to_char(to_date(#passDate#,'DDMONYY HH24:MI') + 1/48,'HH24:MI') showTimeLabel,    
				to_char(trunc(to_date(#passDate#,'DDMONYY HH24:MI')+1/96, 'hh') + 
				floor(to_char(to_date(#passDate#,'DDMONYY HH24:MI')+1/96, 'mi')/15)*15/1440 ,'DDMONYY HH24:MI') fullDateTime,       
				to_char(trunc(to_date(#passDate#,'DDMONYY HH24:MI')+1/96, 'hh') + 
				floor(to_char(to_date(#passDate#,'DDMONYY HH24:MI')+1/96, 'mi')/15)*15/1440 ,'DDMONYY') showDate,           
				to_char(to_date(#passDate#,'DDMONYY HH24:MI') + 1/96,'HH24:MI') startTime,     
				to_char(to_date(#passDate#,'DDMONYY HH24:MI') + 1/48,'HH24:MI') endTime    
			from dual
		]]>
	</select>   
	
	<select id="inbdshpGetHandlingMode" parameterClass="cargo.cms.external.bo.InbdShpActionLstShpmntBO" resultClass="java.lang.String">
		<![CDATA[	
			select HANDLING_MODE from AWB_INVENTORY AWBINV, ULD_INVENTORY ULDINV , ULD_GROUP_TYPE ULDGRPTYPE , MAST_ULD_GROUP ULDGRP
			where AWBINV.ULD_KEY = ULDINV.ULD_KEY and ULDINV.ULD_TYPE = ULDGRPTYPE.ULD_TYPE 
			and ULDGRPTYPE.ULD_GROUP = ULDGRP.ULD_GROUP and ULDGRP.PLT_CNT_SIZE = '20 ft' 
			and awb_no = #awbNo# and awb_Date = to_date(#awbDate#,'DDMONYY')
		]]>
	</select>   
	
	<select id="inbdshpGetHkid" parameterClass="cargo.cms.external.bo.InbdShpActionListSearchBO" resultClass="java.lang.String">
	<![CDATA[	
		select hkid from sec_user where cust_no = #loginCustNo# and code = #loginId# and rownum = 1
		]]>
	</select>   
	
	 <insert id="insertBooking" parameterClass="cargo.cms.external.bo.InbdShpActionLstBookingBO">
		Insert into IMP_BOOKING (BOOKING_NO,BOOKING_DATE,COLL_PERSON_NAME,COLL_PERSON_ID,TRUCK1,TRUCK2,TRUCK3,TRUCK4,TRUCK5,
		TRUCK6,PHONE_NO,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,BKG_SLOT_DATE,BKG_SLOT_FROM,BKG_SLOT_TO,HK_ID,STATUS,COLLECT_ULD,TRUCKER_ID,AGENT_ID,
		PURPOSE, DOCK_PURPOSE, EXP_DURATION, POOL_ID, DEL_ZONE) 
		values ( #bookingNo#,sysdate,#collByName#,#collByCode#,#truckNoOne#,#truckNoTwo#,#truckNoThree#,#truckNoFour#,#truckNoFive#,
		#truckNoSix#,#phoneNo#,#loginId#,sysdate,#loginId#,sysdate,#timeSlotDate#,#startTime#,#endTime#,#collByHkid#,'ISSUED',#collectedUld#,#truckerId#,#agentId#,
		#bkgPurpose#, #dockPurpose#, #expDuration#, #poolId#, #deliveryZone#)
	</insert> 
	<insert id="insertBookingDtl" parameterClass="cargo.cms.external.bo.InbdShpActionLstShpmntBO">
		Insert into IMP_BOOKING_DTL (BOOKING_NO,DOC_LINE_NO,AWB_NO,AWB_DATE,FLT_KEY,FLT_DATE,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,CHARGES,AUTH_REP_NAME,AUTH_REP_ID,AIRL_CHRG,CPCT_CHRG) 
		values (#bookingNo#,#bookingDoclineNo#,#awbNo#,#awbDate#,#fltKey#,#fltDate#,#loginId#,sysdate,#loginId#,sysdate,#chrgs#,#asgnTruckerCode#,#asgnLoginId#,#airlChrgs#,#agtChrgs#)
	</insert>
	
	<!--   and FLT_KEY = #fltKey# and FLT_DATE= #fltDate# -->
	
	<parameterMap id="chrgsSrfMap" class="map" >
       <parameter property="awbNo" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="awbDate" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	</parameterMap>

	<procedure id="get_prc_enq_charges" parameterMap="chrgsSrfMap" >
		{  call PRC_ENQ_CHARGES(?,?) }
	</procedure>
	
	<select id="ChargesListForBooking" parameterClass="cargo.cms.external.bo.InbdShpActionListChrgsBO" resultClass="cargo.cms.external.bo.InbdShpActionListChrgsBO">
	<![CDATA[	
		select ITM_CODE chrgItemCode, ITM_DESC chrgItem, AMT amount 
		from  GT_SRF_CHARGES where 
		AWB_NO = #awbNo# and 
		AWB_DATE = #awbDate# 
		]]>
	</select> 
	
	<select id="getFreeStrgDateTime" parameterClass="map" resultClass="java.lang.String">
	<![CDATA[	
		select TO_CHAR(pkg_Calculate.GET_FREE_DAYS(#fltDate#, #fltKey#,#awbNo#,to_date(#awbDate#,'DDMONYY')), 'DDMONYY') as freeStrgDate from  dual 
		]]>
	</select> 
	
	
	
	<select id="fetchTruckerForAjax" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	 	select code_desc as truckerName from CUST_COMPANY where ACTIVE = 'Y' AND BLACKLISTED='N' AND TRUCKER_YN='Y' AND UPPER(code_desc) like UPPER(#keySearchStr# ||'%') and ROWNUM &lt;= #maxRecFetch# ORDER BY code_desc     
	</select>
	
	<select id="checkValidTrucker" parameterClass="java.lang.String" resultClass="java.lang.String">
	 	select COUNT(1) from cust_company where  code_desc = #asgnTruckerName# and TRUCKER_YN = 'Y'     
	</select>
	
	<select id="checkValidAuthRepTrucker" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
	 	select COUNT(1) from  CUST_AGENT_AUTH_REP where  UPPER(AUTH_REP_NAME)=  #asgnTruckerName# AND CUST_NO = #loginCustNo#
	 	and exists (select null from cust_company where  code = #loginCustNo# and TRUCKER_YN = 'Y')  
	</select>

	<select id="checkValidAuthRepTruckerBlackListed" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
	 	select COUNT(1) from  CUST_AGENT_AUTH_REP where  UPPER(AUTH_REP_NAME)=  #asgnTruckerName# AND CUST_NO = #loginCustNo# and BLACK_LISTED = 'Y'
	</select>
	
	<select id="checkBkgPerDay" parameterClass="java.util.Map" resultClass="java.lang.Integer">
	<![CDATA[
		SELECT NVL(
		  (SELECT TO_NUMBER(NVL(NO_OF_BOOKING_PERDAY,0)) FROM CUST_COMPANY WHERE CODE = #CUST_NO#) -
		  (SELECT COUNT(1) FROM IMP_BOOKING WHERE AGENT_ID = #CUST_NO# AND TO_CHAR(BOOKING_DATE,'DDMONYY') = #BKG_DATE# AND STATUS <> 'CANCEL')
		  , 0) NOOFDAYS
		FROM DUAL
  	 ]]>
	</select>
	
	<select id="validateBookingTimeSlot" parameterClass="map" resultClass="java.lang.Double">
    <![CDATA[
     		SELECT TO_CHAR(TO_DATE(#timeSlotDate# ||' ' ||#startTime#,'DDMONYY HH24MI') - sysdate) DAYDIFF FROM DUAL  
      ]]>      
	</select>
	
	<select id="validateBookingTruckNo" parameterClass="map" resultClass="java.lang.Integer">
	 	<![CDATA[
	 		SELECT COUNT(BOOKING_NO)
	 		FROM (	 	
				SELECT BOOKING_NO
				FROM IMP_BOOKING BKG
				WHERE
				TO_DATE(TO_CHAR(BKG_SLOT_DATE, 'DDMONYY') || ' ' || TRIM(TO_CHAR(NVL(BKG_SLOT_FROM, 0), '0000')), 'DDMONYY HH24MI')
				BETWEEN
				TO_DATE(#timeSlotDate# || ' ' || #startTime#, 'DDMONYY HH24MI') - ((SELECT RULE_VALUE FROM CMSRULES WHERE RULE_CODE = 'BOOKING_SLOT_HOURS') / 24)
				AND
				(TO_DATE(#timeSlotDate# || ' ' || #endTime#, 'DDMONYY HH24MI') + ((SELECT RULE_VALUE FROM CMSRULES WHERE RULE_CODE = 'BOOKING_SLOT_HOURS') / 24)) - (1/24/60)
				AND #truckNo# IN(TRUCK1, TRUCK2, TRUCK3, TRUCK4, TRUCK5, TRUCK6) AND STATUS = 'ISSUED'
		]]>
	     	<isNotEmpty property="bkgNo">
	        	<![CDATA[ AND BOOKING_NO <> #bkgNo# ]]>
	        </isNotEmpty> 		
		<![CDATA[
				UNION
				SELECT BOOKING_NO
				FROM EXP_BOOKING BKG
				WHERE
				TO_DATE(TO_CHAR(BOOKING_DATE, 'DDMONYY') || ' ' || TRIM(TO_CHAR(NVL(TIME_SLOT_FROM, 0), '0000')), 'DDMONYY HH24MI')
				BETWEEN
				TO_DATE(#timeSlotDate# || ' ' || #startTime#, 'DDMONYY HH24MI') - ((SELECT RULE_VALUE FROM CMSRULES WHERE RULE_CODE = 'BOOKING_SLOT_HOURS') / 24)
				AND
				(TO_DATE(#timeSlotDate# || ' ' || #endTime#, 'DDMONYY HH24MI') + ((SELECT RULE_VALUE FROM CMSRULES WHERE RULE_CODE = 'BOOKING_SLOT_HOURS') / 24)) - (1/24/60)
				AND #truckNo# IN(TRUCK)
			)					
	    ]]> 
	</select>  
	
	<select id="check_dates"  parameterClass="map" resultClass="java.lang.String" >
		SELECT TO_CHAR(TO_DATE(#endDate#,'DDMONYY') - TO_DATE(#startDate#,'DD-MON-YY')) DAYDIFF FROM DUAL
	</select>
		<select id="check_date_Times"  parameterClass="map"  resultClass="java.lang.String">
	<![CDATA[		
		SELECT TO_CHAR(TO_DATE(#endDateTime#,'DDMONYY HH24MI') - TO_DATE(#startDateTime#,'DDMONYY HH24MI')) DAYDIFF FROM DUAL
		]]>
   	</select>
   	
   	<select id="getImageDocListValues"  parameterClass="map" resultClass="cargo.cms.afw.bo.BoardMsgBO" >
		SELECT IMG_NAME AS doc FROM FW_IMAGE_STORE WHERE IMG_SESSION_ID=#IMG_SESSION_ID#
	</select>
	<!-- Inbound Shipment Action List :: Mayank :: Starts -->
	
	
	<select id="imp_awbstrgdtl_getNextTrNo" parameterClass="map" resultClass="java.lang.Integer">	   	
	   	 SELECT IMP_AWB_STRG_DTL_SEQ.NEXTVAL from DUAL
   	</select>
   	
   	 <select id="imp_awbinv_getSeqNo"  parameterClass="map" resultClass="java.lang.String">
		SELECT seq_no FROM awb_inventory
          WHERE flt_key = #fltKey#
		      AND flt_date = TO_DATE(#fltDate#,'DDMONYY')
		      AND awb_no = #awbNo#
		      AND awb_date = TO_DATE(#awbDate#,'DDMONYY')
		      AND NVL(LOC_CODE,'*') = NVL(#locCode#,'*')
			    AND NVL(LSP_NO,'*')   = NVL(#lspNo#,'*')
			    AND NVL(ULD_KEY,'*')  = NVL(#uldKey#,'*')			    
			    AND FLT_TYPE  = #fltType#		  
			    AND SRF_NO IS NULL 
			    AND TRM_NO IS NULL 
			    AND CDIF_NO IS NULL	         
    </select>  
    
    <insert id="imp_awbstrgdtl_insawbinv" parameterClass="map">
    INSERT INTO AWB_INVENTORY
    (AWB_NO, AWB_DATE, 
    CARR_CODE, CATALOG, CC_CODE, SRF_NO, TRM_NO, CDIF_NO,
     SCH_COLL_DATE, LSP_NO, 
     LOC_CODE, LOCN_PCS, LOCN_WT,
     RTRV_DATE, RTRV_USER_ID, STRG_DATE, DAM_IND,
     PPK_IND, BULK_WT, BUP_WT, CR_USER_ID, CR_DATE,
     LM_USER_ID, LM_DATE, FLT_NO, FLT_DATE, FLT_TYPE, FLT_KEY, ULD_KEY, SEQ_NO,REF_LSP_TR_TYPE,
     REF_TR_NO,REF_TR_TYPE,REF_TR_DATE,REF_DOC_LINE_NO,REF_LOC_FROM,REF_TR_EVENT,REF_MOV_FROM,
     REF_AWB_EVENT
    )
    VALUES
    (#awbNo#,NVL(#awbDate#,to_char(SYSDATE,'DDMONYY')), 
     #carrCode#,NULL, NULL,NULL, NULL, NULL,
     NULL,#lspNo#, 
     #locCode#, NVL(#strgPcs#,0), NVL(#strgWt#,0),
     SYSDATE, #userID#, SYSDATE, NVL(#damInd#,'N'),
     'B', NVL(#strgWt#,0), NVL(#strgWt#,0), #userID#, SYSDATE,
     #userID#, SYSDATE,NULL, TO_DATE(#fltDate#,'DDMONYY'), #fltType#, #fltKey#,  #uldKey#, #seqNo#,#trType#,
     #trNo#,#trType#,SYSDATE,#docLineNo#,#locCode#,#refTrEvent#,#locCode#,
     #event#
    )
    </insert>
    
    <update id="imp_awbstrgdtl_updawbinv" parameterClass="map">
    UPDATE AWB_INVENTORY
    SET LOCN_PCS   = LOCN_PCS + NVL(#strgPcs#,0),
        LOCN_WT    = LOCN_WT + NVL(#strgWt#,0),
        DAM_IND    = DECODE(DAM_IND,'Y','Y',NVL(#damInd#,'N')),
        BULK_WT    = BULK_WT + NVL(#strgWt#,0),
        BUP_WT     = BUP_WT +  NVL(#strgWt#,0),
        STRG_DATE  = SYSDATE,
        STRG_RMK   = #rmk#,
        LM_USER_ID = #userID#,
        LM_DATE    = SYSDATE,
		REF_LSP_TR_TYPE  = #trType#,
		REF_LSP_TR_EVENT = #refTrEvent#,
        REF_TR_NO      = #trNo#,
        REF_TR_TYPE    = #trType#,
        REF_TR_DATE    =  SYSDATE,
        REF_DOC_LINE_NO  = #docLineNo#,
        REF_LOC_FROM     = #locCode#,
        REF_TR_EVENT     = #refTrEvent#,
        REF_RMK          = #rmk#,
        REF_MOV_FROM     = #locCode#
		WHERE SEQ_NO = #seqNo#
	</update>
	
	 <update id="imp_awbstrgdtl_updcarshp" parameterClass="map">
	UPDATE IMP_CAR_SHP
    SET RECD_PCS   = RECD_PCS + NVL(#strgPcs#,0),
        RECD_WT    = RECD_WT + NVL(#strgWt#,0),
		DAM_PCS	   = DECODE(#damInd#, 'Y', DAM_PCS + #strgPcs#, DAM_PCS) ,
		DAM_WT	   = DECODE(#damInd#, 'Y', DAM_WT + #strgWt#, DAM_WT) ,
        LM_USER_ID = #userID#,
        LM_DATE    = SYSDATE
    WHERE AWB_NO   = #awbNo# AND
	     AWB_DATE  = TO_DATE(#awbDate#,'DDMONYY') AND
	     FLT_DATE  = TO_DATE(#fltDate#,'DDMONYY') AND
	     FLT_KEY   = #fltKey#
    </update>
    
   	<!-- Changed for QR :: RANJITH -->
   	<!--<select id="imp_awbinv_getCountForPPK"  parameterClass="map" resultClass="java.lang.Integer">
    SELECT COUNT(1) 
		FROM AWB_INVENTORY I
		LEFT JOIN IMP_CAR_AWB A ON A.AWB_NO = I.AWB_NO AND A.AWB_DATE = I.AWB_DATE 
		WHERE NVL(A.PPK_TYPE, 'B') IN ('M', 'P') AND I.ULD_KEY = #uldKey#
		AND ROWNUM = 1
	</select>
	-->
	<update id="imp_awbstrgdtl_upduldinv" parameterClass="map">
		UPDATE ULD_INVENTORY
		SET EMPTY_FLG = 'N',
		<!--  Commented BY Ranjith  :: UAT internal Issue :: 
		PPK_IND	  = DECODE(PPK_IND, 'Y', 'Y', NVL(#ppkType#, 'N')), -->
	    LM_USER_ID  = #userID#,
	    LM_DATE     = SYSDATE,
	    REF_TR_NO      = #trNo#,
	    REF_TR_TYPE    = #trType#,
	    REF_TR_DATE    = SYSDATE,
	    REF_IN_CARR    = #carrCode#,
	    REF_OUT_CARR   = #carrCode#,
	    REF_DOC_LINE_NO  = #docLineNo#,
	    REF_LOC_FROM     = #locCode#,
	    REF_TR_EVENT     = #refTrEvent#,
	    REF_RMK          = #rmk#,
	    REF_MOV_FROM     = #locCode#
	WHERE ULD_KEY = #uldKey#
	</update>
	
	<insert id="imp_awbstrgdtl_insawbevents" parameterClass="map">
	INSERT INTO AWB_EVENTS
		(AWB_NO,AWB_DATE,EVENT_ID,
		EVENT_DESC,
		FLT_KEY,FLT_DATE,FLT_TYPE,TR_NO,ULD_KEY, PCS, WT,
		CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE
		)
	VALUES
		(#awbNo#, TO_DATE(#awbDate#,'DDMONYY'), #event#,
		(SELECT EVENT_DESC FROM MAST_AWB_EVENTS WHERE EVENT_ID = #event#),
		#fltKey#, TO_DATE(#fltDate#,'DDMONYY'), #fltType#, #awbNo#,NULL, #strgPcs#, #strgWt#,
		#userID#,SYSDATE,#userID#, SYSDATE
		)
	</insert>
	
	<insert id="imp_awbstrgdtl_insfltmov" parameterClass="map">
	 INSERT INTO FLT_MOV
		  (ULD_TYPE, ULD_NO, ULD_CARR, ULD_KEY, FLT_TYPE,
		   CARR_CODE, FLT_NO, FLT_DATE, FLT_KEY, 
		   LOC_CODE, STRG_D, STRG_MM, SURP_IND, COND_C,
		   EIC_I, EMPTY_I, CONTR_C, RMK, TR_NO, DOC_LINE_NO,
		   TR_TYPE, CR_USER_ID, CR_DATE,
		   LM_USER_ID, LM_DATE, SEQ_NO, TR_STATUS, EVENT_ID
		  )
		  VALUES
		  (#uldType#, #uldNo#, #uldCarr#, #uldKey#, #fltType#,
		   #carrCode#, #fltNo#, TO_DATE(#fltDate#,'DDMONYY'), #fltKey#, 
		   #locCode#,SYSDATE,  NULL,'N','',
		   'N','N',NULL, #fltMovRmk#,#trNo#, #docLineNo#,
		   #trType#, #userID#, SYSDATE,
		   #userID#, SYSDATE,FLT_MOV_SEQ.NEXTVAL, 'A',#refTrEvent#
		   )
	</insert>	
	
	<select id="checkAWBExists" parameterClass="cargo.cms.imprt.bo.CarShpBO" resultClass="java.lang.Integer">
		select Count(1) from AWB where AWB_DATE= TO_DATE(#awbDate#,'DDMONYY') AND  AWB_NO = #awbNo#
	</select>
	
	<select id="checkAWBExistsHHT" parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO" resultClass="java.lang.Integer">
		select Count(1) from AWB where AWB_DATE= TO_DATE(#awbDate#,'DDMONYY') AND  AWB_NO = #awbNo#
	</select>
	<select id="getFlightDtls" parameterClass="cargo.cms.imprt.bo.ShpPndDelivBO" resultClass="cargo.cms.imprt.bo.TrackingBO">
		select orig_flt_key fltKey, to_char(orig_flt_date,'DDMONYY') fltDate from imp_srf_flt where awb_no=#awbNo# and awb_date=to_date(#awbDate#,'DDMONYY') and rownum=1	
	</select>
	<select id="imp_checkAwbLocked"  parameterClass="map" resultClass="java.lang.Integer">
		<![CDATA[
		select count(1) from IMP_CAR_AWB 
		where AWB_NO = #AWBNO# and AWB_DATE = #AWBDATE# and lock_ind = 'Y' and rownum = 1
		]]>
	</select>
	<select id="findShpmntAlwdForRetrieve" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		SELECT 
			COUNT(1) 
		FROM 
			MAST_CONSTRAINT_CODE 
		WHERE 
			CODE=#PARAM# AND CONSTRAINT='Y'
	</select>
	<update id="updateEndrSRF" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
		update imp_srf set PRINT_ENDORSED_BY=#endrName#,PRINT_ENDORSED_DATE=sysdate, LM_DATE=sysdate,SRF_RMK = DECODE(SRF_RMK,null,'Delivery Attend By Supervisor.',SRF_RMK ||' '|| 'Delivery Attend By Supervisor.') where srf_no=#srfNo#
	</update>
	<select id="getSRFPrintInd" parameterClass="java.lang.String" resultClass="java.lang.String">
		select print_ind from imp_srf where srf_no=#PARAM#
	</select>
		<select id="srfOutSatndingCharges" parameterClass="java.lang.String" resultClass="java.lang.String">
		select 'Y' from bill_charge_dtl where srf_no=#PARAM# and status = 'PENDING' and net_amt > 0 and rownum = 1
	</select>
	<select id="fetchHouseRecordForReissueSrf"  parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO"  resultClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
		SELECT HAWB_NO hawbNo,
		SEQ_NO seqNo,
		sum(STRG_PCS) hawbPcs, 
		sum(STRG_WT) hawbWt,
		#crUserId# crUserId,
		#srfNo# srfNo
		FROM
		HAWB_INVENTORY WHERE 
		SEQ_NO in 
		(SELECT SEQ_NO FROM AWB_INVENTORY 
		WHERE AWB_NO = #awbNo# AND 
		AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') AND 
		SRF_NO = #oldSrfNo# ) 
		group BY HAWB_NO,SEQ_NO
	</select>
	<select id="getTruckTripIdandAsgnComplInd" parameterClass="map" resultClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
	select  trip_id tripId, ASSIGN_COMPL srfAsgnTrkComplYN FROM truck_trip WHERE truck_no = #truckNo# AND CLOSED = 'N' 
    </select>	 
	<insert id="insertSRFTruck" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO" >
		 INSERT INTO IMP_TRUCK_SRF (
    	 TRIP_ID,SRF_NO,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE)
    	 values (#tripId#,
   		 #srfNo#,
  		 #crUserId#,
    	 sysdate,
    	 #crUserId#,
    	 sysdate)
	</insert>
	
	<!-- Changed for QR :: RANJITH -->
	<!-- Added for Departed Cargo Summary Start -->
	<select id="shipment_tracking_getDepartedCargoList"	parameterClass="cargo.cms.imprt.bo.DepartedSearchBO"
			 resultClass="cargo.cms.imprt.bo.DepartedDataBO">		
		select  t2.carr_code as carrCode, 
			t1.awb_no as awbNo, 
			t2.dest as dest, 
			NVL(t2.pcs,0) || '/' || TRIM(TO_CHAR(NVL(t2.wt,0), '99999999D99')) as awbPcsWt,
			NVL(t1.pman_pcs,0) || '/' || TRIM(TO_CHAR(NVL(t1.pman_wt,0), '99999999D99')) as departedPcsWt,
			decode(t6.ACT_DATE,null,decode(t6.EST_DATE,null,
	      	(to_char(t6.SCH_DATE, 'DDMONYY ') || (SUBSTR(TRIM(TO_CHAR(t6.SCH_TIME, '0000')),0,2)|| ':'||  SUBSTR(TRIM(TO_CHAR(t6.SCH_TIME, '0000')),3,4))),
	      	(to_char(t6.EST_DATE, 'DDMONYY ') || (SUBSTR(TRIM(TO_CHAR(t6.EST_TIME, '0000')),0,2)|| ':'||  SUBSTR(TRIM(TO_CHAR(t6.EST_TIME, '0000')),3,4)))),
	      	(to_char(t6.ACT_DATE, 'DDMONYY ') || (SUBSTR(TRIM(TO_CHAR(t6.ACT_TIME, '0000')),0,2)|| ':'||  SUBSTR(TRIM(TO_CHAR(t6.ACT_TIME, '0000')),3,4))))
	      	as fltDate,
			t1.flt_key as fltKey
		from   exp_pmanifest_awb t1, exp_car t2, flt_opr_events t5 , flt_opr t6
		where  t1.awb_no = t2.awb_no
		and    t1.awb_date = t2.awb_date
		and    t1.flt_key = t5.flt_key
		and    t1.flt_date = t5.sch_date
		and    t5.flt_type = 'D'
		and    t5.ctm_out_date is not null
		and    t1.flt_key = t6.flt_key
		and    t1.flt_date = t6.sch_date
		and    t5.flt_type = t6.flt_type	
		and    t2.carr_code = nvl(#carrCode#, t2.carr_code)
		and    t1.flt_date between #dateFrom# and #dateTo#
		<isNotEmpty property="loginCarrier">
			and	t2.carr_code = #loginCarrier#
		</isNotEmpty>	
		<isEmpty property="loginCarrier">
			and (t2.agent_name = #agentCompanyName#
			or t2.shpr_name = #agentCompanyName# )
		</isEmpty>	
		order by t1.flt_date
	</select>

	<select id="shipment_tracking_getDepartedCargoCountList"	parameterClass="cargo.cms.imprt.bo.DepartedSearchBO"
    	 resultClass="cargo.cms.imprt.bo.DepartedDataBO">
		select t2.carr_code as carrCode, count(distinct t1.awb_no) as awbCount, 
		sum(t1.pman_pcs) as departedPcs, 
		TRIM(TO_CHAR(NVL(sum(t1.pman_wt),0), '99999999D99')) as departedWt
		from   exp_pmanifest_awb t1, exp_car t2, flt_opr_events t5
	    where  t1.awb_no = t2.awb_no
		and    t1.awb_date = t2.awb_date
		and    t1.flt_key = t5.flt_key
		and    t1.flt_date = t5.sch_date
		and    t5.flt_type = 'D'
		and    t5.ctm_out_date is not null
		and    t2.carr_code = nvl(#carrCode#, t2.carr_code)
		and    t1.flt_date between #dateFrom# and #dateTo#
		<isNotEmpty property="loginCarrier">
			and	t2.carr_code = #loginCarrier#
		</isNotEmpty>	
		<isEmpty property="loginCarrier">
			and (t2.agent_name = #agentCompanyName#
			or t2.shpr_name = #agentCompanyName# )
		</isEmpty>	
		group by t2.carr_code
	</select> 

	<select id="shipment_tracking_checkValidDateRange"	parameterClass="cargo.cms.imprt.bo.DepartedSearchBO"
			 resultClass="java.lang.String">
		<![CDATA[
		select '1' as chk
		from dual
		where
			 to_date(#dateFrom#, 'DDMONYY') <= to_date(#dateTo#, 'DDMONYY')
			 and to_date(#dateTo#, 'DDMONYY') <= sysdate
			 and to_date(#dateTo#, 'DDMONYY')-to_date(#dateFrom#, 'DDMONYY')<=7
		]]>
	</select>
	<select id="shipment_tracking_getDateRange"	parameterClass="java.lang.String"
			 resultClass="cargo.cms.imprt.bo.DepartedSearchBO">
		select to_char(sysdate, 'DDMONYY') as dateTo, 
		to_char(sysdate-7, 'DDMONYY') as dateFrom
		from dual
	</select>
	<select id="aatHandlerCarriers"  parameterClass="java.lang.Object" resultClass="cargo.cms.imprt.bo.CarrierBO">
		SELECT CODE AS carrCode, CODE_DESC AS carrName FROM MAST_CARRIER ORDER BY CODE
	</select>
    <select id="validateCarrierCode" parameterClass="map" resultClass="java.lang.Integer">
	    SELECT COUNT(CODE) FROM MAST_CARRIER WHERE OWNED_CARR = 'Y' AND CODE=#carrierCode#
	</select>
	<!-- Added for Departed Cargo Summary Start -->
	<select id="validatePmanExists"  parameterClass="cargo.cms.imprt.bo.MaintainCARBO"  resultClass="java.lang.Integer">
		select COUNT(1) from EXP_PMANIFEST_AWB where flt_key=#fltKey# and FLT_DATE=TO_DATE(#fltDate#,'DDMONYY') 
		AND awb_no = #awbNo# AND awb_date = TO_DATE(#awbDate#,'DDMONYY')
	</select>
	
	<select id="receivedPCCNT"  parameterClass="cargo.cms.imprt.bo.MaintainCARBO"  resultClass="java.lang.Integer">
	  SELECT (select count(1) as A from imp_car_shp  where awb_no = #awbNo# AND awb_date = TO_DATE(#awbDate#,'DDMONYY') and nvl(recd_pcs,0) > 0 ) +	(select count(1) as A from v_ddt_dtl where 
	  awb_no = #awbNo# AND awb_date = TO_DATE(#awbDate#,'DDMONYY') and shp_trf_type is not null) as count from DUAL
	</select>
	<!-- ###################### ADDED BY Mayank ON 11-06-07 FOR CT  STARTS ########################### -->

	
	<select id="imp_ctrm_get_awb_details" parameterClass="cargo.cms.imprt.bo.TrmBO" resultClass="cargo.cms.imprt.bo.AWBLockBO">
		SELECT AWB_NO AS awbNumber,
		   TO_CHAR(AWB_DATE,'DDMONYY') AS awbDate,
		   AWB_CLOSED_YN AS lockedYN
		FROM AWB WHERE AWB_NO = #awbNo#	and AWB_CLOSED_YN = 'N'
	</select>
	
	<select id="getCountForOwnedCarrier" parameterClass="cargo.cms.imprt.bo.TrmBO" resultClass="java.lang.Integer">
		 select count(1) from awb_owner O where awb_no = #awbNo# AND AWB_DATE = #awbDate# and PCS > 0 
								and exists (select null from mast_carrier mastCarr where code = carr_code and owned_carr = 'Y')
	</select>
	
	<select id="get_checkEITTSubmissionCount" parameterClass="cargo.cms.imprt.bo.TrmBO" resultClass="java.lang.Integer">
		<![CDATA[
		  select count(1) from cst_itt_dtl where awb_no = #awbNo# AND AWB_DATE = to_date(#awbDate#,'DDMONYY') and ct_no in 
			( select trm_no from imp_trm_hd where awb_no = #awbNo# AND AWB_DATE = to_date(#awbDate#,'DDMONYY') and status <> 'VOID' ) 
		]]>
	</select>
	
	<select id="get_checkEITTSubmApproveStatus" parameterClass="cargo.cms.imprt.bo.TrmBO" resultClass="java.lang.Integer">
		 <![CDATA[
			 select count(1) from cst_itt_hd where (itt_req_no,itt_req_date) in (select itt_req_no,itt_req_date from cst_itt_dtl where awb_no = #awbNo# AND AWB_DATE = to_date(#awbDate#,'DDMONYY') and ct_no in 
				( select trm_no from imp_trm_hd where awb_no = #awbNo# AND AWB_DATE = to_date(#awbDate#,'DDMONYY') and status <> 'VOID' ) ) 
	  			and itt_auth_code is not null
  		]]>
	</select>

	<select id="imp_ctrm_get_trm_by_awb" parameterClass="cargo.cms.imprt.bo.TrmBO" resultClass="cargo.cms.imprt.bo.TrmBO" >
		select 
		(SELECT CASE WHEN t.CATALOG = 'TM' THEN decode(count(*), 0,'N','Y') ELSE '' END FROM IMP_TM_TRANSFORM_HD WHERE TRF_FROM_AWB_NO = t.AWBNO AND TRF_FROM_AWB_DATE = t.AWBDATE AND function_name = 'CREATE_CT') AS transformYN,
		(SELECT DECODE(COUNT(1), 0, 'N', 'Y') FROM MAST_CARRIER where code = t.CARRCODE and NVL(MAIL_AS_CARGO,'X') = 'Y') as transCarrMailAsCargo,
		t.*
		from (SELECT 
		          awb.HOUSE_FLG as houseFlag, TO_CHAR (A.AWB_DATE,'DDMONYY') AS awbDate,   
		          A.AWB_NO AS awbNo,
		          SUBSTR(TRIM(A.AWB_NO),1,3)||'-'||SUBSTR(TRIM(A.AWB_NO),4) awbNoDisp,
		          awb.CARR_CODE  carrCode,
		          case  when a.pcs &gt; NVL(T.PCS, 0)  then TO_CHAR (A.FLT_DATE,'DDMONYY') else '' end AS flightDate,    
		          case  when a.pcs &gt; NVL(T.PCS, 0)  then A.FLT_KEY else '' end AS flightKey,
		          case  when a.pcs &gt; NVL(T.PCS, 0)  then a.pcs else 0 end  pcs, 
		          case  when a.WT &gt; NVL(T.WT, 0) then a.wt else 0 end  wt, 
		          NVL(T.PCS, 0) transferPcs,
		          NVL(T.WT, 0) transferWt,
		          B.AWB_ORIGIN AS awbOrign ,
		          B.AWB_DEST AS awbDestination ,
		          B.CATALOG AS catalog ,
		            B.CONTENT content,
		            (SELECT V.CC_CODE FROM V_CST_IMP_CC_CODE V WHERE V.AWB_NO = A.AWB_NO     AND NVL(V.HAWB_NO, '000000000000000000') =  '000000000000000000' AND ROWNUM = 1) ccCode,
		            (SELECT  CODE_DESC AS codeDesc FROM MAST_CODE_DTL WHERE CODE_TYPE = 'TRANSHIPMENT_MODE' and code = 'T' ) transferTypeDesc,
		             A.car_Created as carCreated
		          FROM 
		          (select AWB_NO, AWB_DATE, FLT_KEY, FLT_DATE,car_Created,       
		          case  when CIR_PROC_USER is null then MANIFEST_PCS ELSE RECD_PCS end pcs,
		                  case  when CIR_PROC_USER is null then MANIFEST_WT ELSE RECD_WT end wt
		          from  IMP_CAR_SHP ) A
		          join IMP_CAR_AWB B on A.AWB_DATE = B.AWB_DATE AND A.AWB_NO = B.AWB_NO 
		          join AWB on A.AWB_DATE = AWB.AWB_DATE AND A.AWB_NO = AWB.AWB_NO          
		          left JOIN     (SELECT inv.AWB_DATE, inv.AWB_NO, inv.FLT_KEY, inv.FLT_DATE, 
		                      SUM(inv.LOCN_PCS) LOCN_PCS,     SUM(inv.LOCN_WT) LOCN_WT   
		                      FROM AWB_INVENTORY inv   
		                      JOIN AWB awb ON awb.AWB_NO = inv.AWB_NO         AND awb.awb_date = inv.awb_date        AND awb.awb_type = 'T'
		                      WHERE inv.TRM_NO IS NULL AND inv.FLT_TYPE = 'I'    GROUP BY inv.AWB_DATE, inv.AWB_NO, inv.FLT_KEY, inv.FLT_DATE) I  
		                      ON B.AWB_DATE = I.AWB_DATE AND B.AWB_NO = I.AWB_NO AND A.FLT_KEY = I.FLT_KEY AND A.FLT_DATE = I.FLT_DATE 
		             LEFT JOIN  (select td.AWB_DATE, td.AWB_NO, td.FLT_KEY, td.FLT_DATE, SUM(td.PCS) PCS, SUM(td.WT) WT 
		                      from IMP_TRM_HD th join IMP_TRM_DTL td on th.TRM_NO = td.TRM_NO 
		                      where STATUS != 'VOID' 
		                      GROUP BY td.AWB_DATE, td.AWB_NO, td.FLT_KEY, td.FLT_DATE) T 
		                      ON A.AWB_DATE = T.AWB_DATE AND A.AWB_NO = T.AWB_NO  AND A.FLT_KEY = T.FLT_KEY AND A.FLT_DATE = T.FLT_DATE     
		                      
		                      WHERE 1 = 1  AND awb.awb_type = 'T' 
				<isEmpty property="awbNo">	
					<isNotEmpty property="flightDateFrom">
						<isNotEmpty property="flightDateTo">
							and A.FLT_Date between to_date(#flightDateFrom#) and to_date(#flightDateTo#)
						</isNotEmpty>
					</isNotEmpty>
					<isNotEmpty property="transferCarrier">
							and awb.CARR_CODE = #transferCarrier#
					</isNotEmpty>
				</isEmpty>
				<isNotEmpty property="awbNo">
					and	TO_CHAR(A.AWB_DATE,'DDMONYY') = TO_DATE(#awbDate#,'DDMONYY') AND A.AWB_NO  =  #awbNo# 
				</isNotEmpty>
				<isNotEmpty property="loginCarrier">
					and (awb.CARR_CODE in (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE  GRP_CARR_CODE	= #loginCarrier#) OR 	awb.CARR_CODE = #loginCarrier#)
				</isNotEmpty>
			
		union all
		    SELECT 
		          awb.HOUSE_FLG as houseFlag, TO_CHAR (A.AWB_DATE,'DDMONYY') AS awbDate,   
		          A.AWB_NO AS awbNo,
		          SUBSTR(TRIM(A.AWB_NO),1,3)||'-'||SUBSTR(TRIM(A.AWB_NO),4) awbNoDisp,
		          O.CARR_CODE  carrCode,
		          '' flightDate,    
		          '' flightKey,
		          case when AWB.carr_code = O.carr_code then nvl(O.PCS,0) - (a.pcs - NVL(T.PCS, 0))
		                when AWB.carr_code &lt;&gt; O.carr_code then nvl(O.PCS,0) else 0 end  pcs, 
		          case  when AWB.carr_code = O.carr_code  then nvl(O.WT,0) - (a.wt - NVL(T.WT, 0))
		                when AWB.carr_code &lt;&gt; O.carr_code then nvl(O.WT ,0) else 0 end  wt, 
		          0 transferPcs,
		          0 transferWt,
		          awb.ORIG AS awbOrign ,
		          awb.DEST AS awbDestination ,
		          awb.CATALOG AS catalog ,
		            awb.CONTENT content,
		            (SELECT V.CC_CODE FROM V_CST_IMP_CC_CODE V WHERE V.AWB_NO = A.AWB_NO     AND NVL(V.HAWB_NO, '000000000000000000') =  '000000000000000000' AND ROWNUM = 1) ccCode,
		            (SELECT  CODE_DESC AS codeDesc FROM MAST_CODE_DTL WHERE CODE_TYPE = 'TRANSHIPMENT_MODE' and code = 'T' ) transferTypeDesc,
		             '' as carCreated
		      FROM AWB_OWNER O 
		          join (select AWB_NO, AWB_DATE,       
		              sum(case  when CIR_PROC_USER is null then MANIFEST_PCS ELSE RECD_PCS end) pcs,
		              sum(case  when CIR_PROC_USER is null then MANIFEST_WT ELSE RECD_WT end) wt
		              from  IMP_CAR_SHP 
		              group by awb_no, awb_date) A on A.AWB_NO = O.AWB_NO AND A.AWB_DATE = O.AWB_DATE 
		          join AWB on A.AWB_DATE = AWB.AWB_DATE AND A.AWB_NO = AWB.AWB_NO          
		          join mast_carrier mastCarr on mastCarr.code = O.CARR_CODE AND owned_carr = 'Y' 
		          left JOIN     (SELECT inv.AWB_DATE, inv.AWB_NO, 
		                      SUM(inv.LOCN_PCS) LOCN_PCS,     SUM(inv.LOCN_WT) LOCN_WT   
		                      FROM AWB_INVENTORY inv   
		                      JOIN AWB awb ON awb.AWB_NO = inv.AWB_NO         AND awb.awb_date = inv.awb_date        AND awb.awb_type = 'T'
		                      WHERE inv.TRM_NO IS NULL AND inv.FLT_TYPE = 'I'    GROUP BY inv.AWB_DATE, inv.AWB_NO) I  
		                      ON a.AWB_DATE = I.AWB_DATE AND a.AWB_NO = I.AWB_NO 
		           LEFT JOIN  (select td.AWB_DATE, td.AWB_NO, SUM(td.PCS) PCS, SUM(td.WT) WT 
		                      from IMP_TRM_HD th join IMP_TRM_DTL td on th.TRM_NO = td.TRM_NO 
		                      where STATUS = 'POSTED' and flt_key is not null
		                      GROUP BY td.AWB_DATE, td.AWB_NO) T 
		                      ON  A.AWB_NO = T.AWB_NO and A.AWB_DATE = T.AWB_DATE                          
		           WHERE O.PCS &gt; 0  AND awb.awb_type = 'T' 		  						  
				
					<isNotEmpty property="transferCarrier">
							and O.CARR_CODE = #transferCarrier#
					</isNotEmpty>
					
					<isNotEmpty property="loginCarrier">
						and (O.CARR_CODE in (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE  GRP_CARR_CODE	= #loginCarrier#) OR 	O.CARR_CODE = #loginCarrier#)
					</isNotEmpty>
					
				<isEmpty property="awbNo">	
					<isNotEmpty property="flightDateFrom">
						<isNotEmpty property="flightDateTo">	
							and exists (select null from  IMP_CAR_SHP where FLT_Date between to_date(#flightDateFrom#) and to_date(#flightDateTo#) and AWB_NO = O.AWB_NO AND AWB_DATE = O.AWB_DATE) 
						</isNotEmpty>
					</isNotEmpty>			
				</isEmpty>
				<isNotEmpty property="awbNo">
						and	TO_CHAR(A.AWB_DATE,'DDMONYY') = TO_DATE(#awbDate#,'DDMONYY') AND A.AWB_NO  =  #awbNo# 
				</isNotEmpty>		
		    ) t
    where t.pcs &gt; 0 and t.pcs - t.transferpcs &gt; 0   
			order by awbNo
	</select>

	<!--  if user choose transfer type = Local Transfer (E) and enter RCL No, RCL Date Range, AWB NO , carrier -->
<select id="exp_ctrm_get_trm_by_rcl_awb_E" parameterClass="cargo.cms.imprt.bo.TrmBO" resultClass="cargo.cms.imprt.bo.TrmBO" >
	<![CDATA[
	select a.* from 
        (
			SELECT		
      		TO_CHAR (A.AWB_DATE,'DDMONYY') AS awbDate,   
			A.AWB_NO AS awbNo,	
            SUBSTR(TRIM(A.AWB_NO),1,3)||'-'||SUBSTR(TRIM(A.AWB_NO),4) awbNoDisp,
            '' AS uldKey,
  			O.CARR_CODE  carrCode,
  			nvl(O.PCS,0) locationPcs,
			nvl(O.WT,0)  locationWt, 
 			case  when AWB.carr_code <> O.carr_code then O.PCS                 
           		when AWB.carr_code = O.carr_code then AWB.PCS end pcs,            
           	case  when AWB.carr_code <> O.carr_code then O.WT  
           		when AWB.carr_code = O.carr_code then AWB.WT end wt,    
            decode(AWB.CARR_CODE ,O.CARR_CODE,NVL(T.PCS, 0),'')  transferPcs,
	        decode(AWB.CARR_CODE ,O.CARR_CODE,NVL(T.WT, 0),'')  transferWt,
			A.ORIGIN AS awbOrign ,
			A.DEST AS awbDestination ,
			A.CATALOG AS catalog  ,
            A.CONTENT content ,
            (SELECT V.CC_CODE FROM V_CST_EXP_CC_CODE V
              	WHERE V.AWB_NO = A.AWB_NO 
				AND NVL(V.HAWB_NO, '000000000000000000') =  '000000000000000000' AND ROWNUM = 1) ccCode,
            (SELECT  CODE_DESC AS codeDesc FROM MAST_CODE_DTL WHERE CODE_TYPE = 'TRANSHIPMENT_MODE' and code = #transferType# ) transferTypeDesc,
           decode(AWB.CARR_CODE ,O.CARR_CODE, (select rcl_no || case when c > 1 then '(+)' else '' end
     			from (select max(rcl_no) rcl_no, count(1) c, awb_no, awb_Date from exp_RCL_HD where status = 'S' group by awb_no, awb_Date)   where awb_no = a.awb_no  and awb_Date = a.awb_Date),'') rclNo	,
               AWB.car_YN carCreated
		FROM EXP_CAR A
			 join AWB on A.AWB_NO = AWB.AWB_NO AND A.AWB_DATE = AWB.AWB_DATE 
			 join AWB_OWNER O on A.AWB_NO = O.AWB_NO AND A.AWB_DATE = O.AWB_DATE  and O.PCS > 0
			 join mast_carrier mastCarr on mastCarr.code = O.CARR_CODE AND owned_carr = 'Y' 

             LEFT JOIN  (select td.AWB_DATE, td.AWB_NO, SUM(td.PCS) PCS, SUM(td.WT) WT  ,th.TRANSF_CARR TRNSF_CARR
             from IMP_TRM_HD th join IMP_TRM_DTL td on th.TRM_NO = td.TRM_NO 
             where STATUS <> 'VOID'
             GROUP BY td.AWB_DATE, td.AWB_NO ,th.TRANSF_CARR) T  ON A.AWB_DATE = T.AWB_DATE AND A.AWB_NO = T.AWB_NO   	AND O.CARR_CODE = T.TRNSF_CARR 
             WHERE O.PCS > 0 
	]]>
		<isNotEmpty property="awbNo">
			 AND A.AWB_NO  = #awbNo#  AND  TO_CHAR(A.AWB_DATE,'DDMONYY') = #awbDate#
		</isNotEmpty>
		<isEmpty property="awbNo">
		  <isNotEmpty property="transferCarrier">
		    and O.CARR_CODE = #transferCarrier#
		  </isNotEmpty>
		  <isNotEmpty property="loginCarrier">
				and O.CARR_CODE in (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE  GRP_CARR_CODE	= #loginCarrier#)
		</isNotEmpty>
	      <isNotEmpty property="rclNo">
	       AND ((a.awb_no, a.awb_date) in 
	       				(select rcl.awb_no, rcl.awb_date from exp_uld_awb eu 
								join exp_rcl_hd rcl on eu.rcl_no = rcl.rcl_no 
	    							where eu.rcl_no = #rclNo# and eu.ppk_type != 'M'
	    				union all
	    				select awb_no, awb_date from exp_rcl_hd where rcl_no = lower(#rclNo#) and ppk_type = 'B'))
	      </isNotEmpty>
	      <isEmpty property="expDateChkInd">
		      <isNotEmpty property="rclDateFrom">
		       	<isNotEmpty property="rclDateTo">
		       	 AND ((a.awb_no, a.awb_date) in 
		       	 			(select rcl.awb_no, rcl.awb_date from exp_uld_awb eu join exp_rcl_hd rcl on eu.rcl_no = rcl.rcl_no
		       	 											where trunc(eu.rcl_date) between #rclDateFrom# and #rclDateTo# and eu.ppk_type != 'M'
		       	 			union all
		       	 			select awb_no, awb_date from exp_rcl_hd where trunc(rcl_date) between #rclDateFrom# and #rclDateTo#  and ppk_type = 'B'))
		      	</isNotEmpty>
		      </isNotEmpty>
		  </isEmpty> 
   		</isEmpty>   
   union all
   
   select   '' awbDate,   
			'' awbNo,	
            '' awbNoDisp,
            r.uld_key AS uldKey,
            r.carr_code  carrCode,
			r.rcl_pcs pcs,
			r.rcl_wt  wt, 
            r.rcl_pcs locationPcs,
			r.rcl_wt  locationWt,
            nvl((select pcs from IMP_TRM_HD th  where th.status = 'ISSUED' and th.uld_key = r.uld_key and rownum = 1),0) transferPcs,
            nvl((select wt  from IMP_TRM_HD th  where th.status = 'ISSUED' and th.uld_key = r.uld_key and rownum = 1),0)  transferWt,
			'' AS awbOrign ,
			'' AS awbDestination ,
			'' AS catalog  ,
            '' content ,
            '' ccCode,
           (SELECT  CODE_DESC AS codeDesc FROM MAST_CODE_DTL WHERE CODE_TYPE = 'TRANSHIPMENT_MODE' and code = #transferType# ) transferTypeDesc,
            r.rcl_no rclNo,
            null carCreated
		FROM EXP_rcl_hd r
		WHERE r.void_date is null and (r.ppk_type = 'M' and exists (select null from awb_inventory where uld_key = r.uld_key and flt_key is null) and #awbNo# is null) 
	   <isNotEmpty property="transferCarrier">
	     and r.CARR_CODE = #transferCarrier#
	   </isNotEmpty>
	     <isNotEmpty property="loginCarrier">
				and r.CARR_CODE in (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE  GRP_CARR_CODE	= #loginCarrier#) 
		</isNotEmpty>
	   <isNotEmpty property="rclNo">
	      AND exists (select 1 from exp_uld_awb where rcl_no = lower(#rclNo#) and uld_key = r.uld_key and ppk_type = 'M')
	   </isNotEmpty>
	   <isEmpty property="expDateChkInd">
		   <isNotEmpty property="rclDateFrom">
			   	<isNotEmpty property="rclDateTo">
			      AND exists (select 1 from exp_uld_awb eu join exp_rcl_hd rcl on eu.rcl_no = rcl.rcl_no     
			             where trunc(eu.rcl_date) between #rclDateFrom# and #rclDateTo# and  eu.uld_key = r.uld_key and  eu.ppk_type = 'M')
			   	</isNotEmpty>
	   		</isNotEmpty>
	   	</isEmpty>
   )a order by awbNo   
 </select>

	
	<select id="imp_ctrm_get_trm_by_uld" parameterClass="cargo.cms.imprt.bo.TrmBO" resultClass="cargo.cms.imprt.bo.TrmBO" >
		SELECT 	TO_CHAR (A.AWB_DATE,'DDMONYY') AS awbDate,   
				SUBSTR(TRIM(A.AWB_NO),1,3)||'-'||SUBSTR(TRIM(A.AWB_NO),4) awbNoDisp,
                A.AWB_NO AS awbNo,	
                A.CARR_CODE  carrCode,
                TO_CHAR (A.FLT_DATE,'DDMONYY') AS flightDate,
                A.FLT_KEY AS flightKey, 
				A.LOCN_PCS AS locationPcs, 
                A.LOCN_WT AS locationWt, 
                A.LOCN_PCS AS transferPcs, 
                A.LOCN_WT AS transferWt, 
				B.Orig AS awbOrign ,
				B.DEST AS awbDestination ,
				A.CATALOG AS catalog  ,
                uldInv.LOC_CODE AS warehouseLocation, 
                uldInv.LOC_CODE AS warehouseDestination,
                uldInv.Handling_mode AS hndlgMode,
                 nvl(uldInv.PPK_IND,'N') AS ppkInd,
                 nvl(uldInv.MIX_PPK_IND,'N') AS mixPpkInd,
                (SELECT  CODE_DESC AS codeDesc FROM MAST_CODE_DTL WHERE CODE_TYPE = 'TRANSHIPMENT_MODE' and code = #transferType# ) transferTypeDesc,
                #transferType# transferType,
                case when  #transferType# = 'T' then
                 (select nvl(car_created,'N') from IMP_CAR_SHP shp where A.AWB_DATE = shp.AWB_DATE AND A.AWB_NO = shp.AWB_NO and A.flt_key = shp.flt_key AND A.flt_Date = shp.flt_Date)
                 else 
                 B.car_YN  end as carCreated
          FROM AWB_INVENTORY A
              	JOIN AWB B ON A.AWB_DATE = B.AWB_DATE AND A.AWB_NO = B.AWB_NO              	
              	join uld_inventory uldInv on uldInv.ULD_KEY = A.ULD_KEY              	
		WHERE	A.ULD_KEY  = #uldKey#
		<isNotEmpty property="loginCarrier">
				and uldInv.OWNER_ID in (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE  GRP_CARR_CODE	= #loginCarrier#) 
		</isNotEmpty>
	</select>
	
	<select id="check_car_created_type_t" parameterClass="cargo.cms.imprt.bo.TrmBO" resultClass="java.lang.String" >
		select nvl(car_created,'N') from IMP_CAR_SHP where AWB_DATE = #awbDate# AND AWB_NO = #awbNo# and flt_key = #flightKey# AND flt_Date = #flightDate#
	</select>
	
	<select id="check_car_created_type_e" parameterClass="cargo.cms.imprt.bo.TrmBO" resultClass="java.lang.String" >
		select nvl(car_YN,'N') from AWB where AWB_DATE = #awbDate# AND AWB_NO = #awbNo#
	</select>
	
	<select id="validate_CT_Transfer_Carr_To_RecvCarr" parameterClass="cargo.cms.imprt.bo.TrmBO" resultClass="java.lang.Integer" >
		select count(1) from awb where awb_no = #awbNo# and awb_date = #awbDate# and awb_type = 'T' and carr_code = #recevCarrier# 
	</select>
	
	<select id="count_CT_Transfer_Carr" parameterClass="cargo.cms.imprt.bo.TrmBO" resultClass="java.lang.Integer" >
		select count(1) from awb where awb_no = #awbNo# and awb_date = #awbDate# and awb_type = 'T' and carr_code != #transferCarrier#  
	</select>
	
	<select id="get_SUM_Pman_PCS_WT" parameterClass="cargo.cms.imprt.bo.TrmBO" resultClass="cargo.cms.imprt.bo.TrmBO" >      
	select nvl(sum(bulk_pcs),0) pmanPcs , nvl(sum(bulk_wt),0) pmanWt from EXP_PMANIFEST_AWB where awb_no = #awbNo# and awb_date = #awbDate#
	        and  FUN_GET_PARENT_CARR (#transferCarrier#) = FUN_GET_PARENT_CARR ((select carr_code from flt_opr where flt_key = EXP_PMANIFEST_AWB.flt_key and sch_date = EXP_PMANIFEST_AWB.flt_date and flt_type = 'D'))
	</select>
	
	<select id="get_SUM_OWNER_PCS_WT" parameterClass="cargo.cms.imprt.bo.TrmBO" resultClass="cargo.cms.imprt.bo.TrmBO" >     
	select nvl(sum(pcs),0) ownerPcs , nvl(sum(wt),0) ownerWt from awb_owner where awb_no = #awbNo# and awb_date = #awbDate#
	          and  FUN_GET_PARENT_CARR (#transferCarrier#) = FUN_GET_PARENT_CARR (carr_code)
	</select>
	
	<select id="get_SUM_OLD_OWNER_PCS_WT" parameterClass="cargo.cms.imprt.bo.TrmBO" resultClass="cargo.cms.imprt.bo.TrmBO" >     
	select nvl(sum(pcs),0) ownerPcs , nvl(sum(wt),0) ownerWt from awb_owner where awb_no = #awbNo# and awb_date = #awbDate#
	          and  CARR_CODE=#transferCarrier#
	</select>
	<insert id="imp_ctrm_trm_hd" parameterClass="cargo.cms.imprt.bo.TrmBO" >
	INSERT INTO IMP_TRM_HD (
			TRM_NO, 
			TRM_TYPE, 
			TRM_DATE, 
			TRANSF_CARR, 
			RECD_CARR,
			RECD_CARR_HANDR, 
			ULD_KEY, 
			ULD_RMK, 
			ULD_WH_DEST, 
			ULD_LOCN, 
			CR_USER_ID, 
			CR_DATE, 
			LM_USER_ID,
			LM_DATE,
			STATUS,
			AWB_NO, 
			AWB_DATE,
			PCS, 
			WT, 			
			RMK,
			SOURCE,
			TRM_REF_NO,
			TR_TYPE) 
		VALUES (#trmNo#,
			nvl(#trmType#,'I'),
			TO_DATE(#trmDate#,'DDMONYY HH24:MI'),
			#transferCarrier#,
			#recevCarrier#,
			#recevCarrierHandler#,
			#uldKey#,
			#uldRemark#,
			#warehouseDestination#,
			#warehouseLocation#,
			#lmUser#,
			SYSDATE,
			#lmUser#,
			SYSDATE,
			'ISSUED',
			#awbNo#,
			TO_DATE(#awbDate#,'DDMONYY'),
			#sumTransferPcs#,
			#sumTransferWt#,			
			#remark#,
			#source#,
			#trmRefNo#,
			'CCT')
	</insert>

	
	<insert id="imp_ctrm_trm_dtl" parameterClass="cargo.cms.imprt.bo.TrmBO" >
		INSERT INTO IMP_TRM_DTL (
			TRM_NO, 
			TRM_TYPE, 
			DOC_LINE_NO, 
			AWB_NO, 
			AWB_DATE,
			PCS, 
			WT, 
			FLT_KEY, 
			FLT_DATE, 
			FLT_TYPE, 
			RMK, 
			CATALOG, 
			DEST, 
			CR_USER_ID, 
			CR_DATE, 
			LM_USER_ID, 
			LM_DATE) 
		VALUES (#trmNo#,
			nvl(#trmType#,'I'),
			#doclineNo#,
			#awbNo#,
			TO_DATE(#awbDate#,'DDMONYY'),
			#transferPcs#,
			#transferWt#,
			#flightKey#,
			TO_DATE(#flightDate#,'DDMONYY'),
			'I',
			#remark#,
			#catalog#,
			#awbDestination#,
			#lmUser#,
			SYSDATE,
			#lmUser#,
			SYSDATE)
	</insert>
	
	<select id="imp_ctrm_get_count_awb_owner" parameterClass="cargo.cms.imprt.bo.TrmBO"  resultClass="java.lang.Integer" >
	 select count(1) from  AWB_OWNER
	  where AWB_NO = #awbNo# and AWB_DATE = #awbDate# and carr_code = #carrCode#
	</select>
	
	<select id="get_ctrm_handled_by_cpct" parameterClass="java.lang.String" resultClass="java.lang.String" >
	    select HANDLED_BY_TERMINAL from MAST_CARRIER where code = #carrCode# 
	</select>

	<select id="get_ctrm_handled_by_terminal" parameterClass="java.lang.String" resultClass="java.lang.String" >
	    select count(1) from MAST_CARRIER where OWNED_CARR = 'Y' and code = #carrCode# 
	</select>
	
	<update id="imp_ctrm_awb_owner_upd" parameterClass="cargo.cms.imprt.bo.TrmBO" >
		update AWB_OWNER set PCS = PCS + #transferPcs# , wt = wt + #transferWt#,  LM_USER_ID = #lmUser# , LM_DATE = sysdate
		where AWB_NO = #awbNo# and AWB_DATE = #awbDate# and carr_code = #carrCode#
	</update>
	
	<update id="uld_inv_owner_upd" parameterClass="cargo.cms.imprt.bo.TrmBO" >
		update ULD_INVENTORY set OWNER_ID = #carrCode# ,  LM_USER_ID = #lmUser# , LM_DATE = sysdate
		where ULD_KEY = #uldKey#
	</update>
	
	<update id="imp_ctrm_awb_owner_trfCarr_upd" parameterClass="cargo.cms.imprt.bo.TrmBO" >
		update AWB_OWNER set PCS = PCS - #transferPcs# , wt = wt - #transferWt#,  LM_USER_ID = #lmUser# , LM_DATE = sysdate
		where AWB_NO = #awbNo# and AWB_DATE = #awbDate# and carr_code = #transferCarrier#
	</update>
	
	<insert id="imp_ctrm_awb_owner_ins" parameterClass="cargo.cms.imprt.bo.TrmBO" >
		Insert into AWB_OWNER (AWB_NO,AWB_DATE,CARR_CODE,PCS,WT,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE) 
		values (#awbNo#,#awbDate#,#carrCode#,#transferPcs#,#transferWt#,#lmUser#,sysdate,#lmUser#,sysdate)
	</insert>
	
	<update id="update_trm_header_status_post" parameterClass="cargo.cms.imprt.bo.TrmBO">
		UPDATE IMP_TRM_HD 
		SET STATUS ='POSTED',
		POST_DATE = SYSDATE,
		POST_USER = #lmUser#,
		LM_DATE = sysdate,
		LM_USER_ID =  #lmUser#,
		TR_TYPE='PCT'
		WHERE TRM_NO = #trmNo#
	</update>
	
	<update id="sqlUpdateAwbCloseForPostCT" parameterClass="map">
		<![CDATA[
		update awb set awb_closed_yn='Y',LM_DATE = sysdate,LM_USER_ID =  'SYSTEM'
		where (awb_no, awb_date) in (
		select a.awb_no, a.awb_date 
			from awb a
			left join (select d.awb_no, d.awb_date, sum(d.pcs) pcs, sum(d.wt) wt from imp_trm_hd h
			    join imp_trm_dtl d on h.trm_no = d.trm_no
			    where h.status = 'POSTED' and h.recd_carr_handr != 'CPCT'
			    group by d.awb_no, d.awb_date) t on t.awb_no = a.awb_no and t.awb_date = a.awb_date
			left join (select cs.awb_no, cs.awb_date, 
			          sum(case when nvl(recd_pcs,0) + nvl(tt_if_pcs, 0) != nvl(sup_pcs, 0)  then 1 else 0 end) disc_cnt 
			      from (select awb_no, awb_date, flt_key, flt_date, manifest_pcs, recd_pcs, (manifest_pcs + case when CIR_PROC_USER is null then 0 else
			                case when CIR_PCS_TYPE = 'SL' then -1 * CIR_PCS else CIR_PCS end end) sup_pcs
			           from imp_car_shp) cs
			       left join (select awb_no, awb_date, flt_key, flt_date, sum(shp_trf_pc) tt_if_pcs
			          from v_ddt_dtl where (trf_type = 'IF' or shp_trf_type = 'TT') group by awb_no, awb_date, flt_key, flt_date) d 
			            on d.awb_no = cs.awb_no and d.awb_date = cs.awb_date and d.flt_key = cs.flt_key and d.flt_date = cs.flt_date 
			      group by cs.awb_no, cs.awb_date
			       ) s on s.awb_no = a.awb_no and s.awb_date = a.awb_date
			left join (select awb_no, awb_date, sum(locn_pcs) locn_pcs from  awb_inventory group by awb_no, awb_date) i
			    on i.awb_no = a.awb_no and i.awb_date = a.awb_date       
			left join (select awb_no, awb_date, sum(pman_pcs) pman_pcs, sum(unassigned_bulk_pcs) unassigned_bulk_pcs 
			        from  exp_pmanifest_awb group by awb_no, awb_date) p
			    on p.awb_no = a.awb_no and p.awb_date = a.awb_date       
			where a.pman_pcs + nvl(t.pcs, 0) >= a.pcs   
			and nvl(p.unassigned_bulk_pcs, 0) = 0 and nvl(i.locn_pcs, 0) = 0
			and ((a.awb_type = 'E' and a.car_yn = 'Y') or (a.awb_type = 'T' and nvl(s.disc_cnt, 0) = 0 ))
			and a.awb_closed_yn='N'
			and a.awb_no = #awbNo# and a.awb_date = #awbDate#)
		]]>
	</update>
	
	<select id="get_trmdetail_for_uld"  parameterClass="cargo.cms.imprt.bo.TrmUldBO" resultClass="cargo.cms.imprt.bo.TrmUldBO">
		SELECT OWNER_ID  AS ownerId, ULD_FLOW AS flightType FROM ULD_INVENTORY WHERE ULD_KEY =#uldKey#
	</select>

	<select id="get_owner_id_for_carrier"  parameterClass="map" resultClass="java.lang.String">
		SELECT OWNED_CARR FROM MAST_CARRIER WHERE CODE=#recv_Carr#
	</select>

	<select id="check_trm_created"  parameterClass="map" resultClass="java.lang.String">	
		SELECT NVL(count(1),0) FROM IMP_TRM_HD 
		WHERE (STATUS = 'ISSUED' OR STATUS = 'RETRIEVED') AND ULD_KEY = #uldKey#
	</select>
		
	<select id="get_uld_recv_carr_trm_created"  parameterClass="map" resultClass="java.lang.String">	
		SELECT RECD_CARR FROM IMP_TRM_HD WHERE STATUS != 'VOID' AND ULD_KEY = #uldKey# and rownum = 1
	</select>
	
	<select id="get_awb_recv_carr_trm_created"  parameterClass="map" resultClass="java.lang.String">	
		SELECT A.RECD_CARR FROM IMP_TRM_HD A
				WHERE A.STATUS != 'VOID' AND (A.AWB_NO = #awbNo#  or exists (select null from IMP_TRM_DTL B where A.TRM_NO = B.TRM_NO and B.AWB_NO = #awbNo# )) and rownum = 1      
	</select>          	
		
	<select id="check_storage_for_awb"  parameterClass="map" resultClass="java.lang.String">	
		SELECT NVL(count(1),0) FROM AWB_INVENTORY inv
		JOIN AWB awb ON awb.AWB_NO = inv.AWB_NO 
		AND awb.awb_date = inv.awb_date	
		WHERE inv.AWB_NO=#awb_no# 
	</select>

	<select id="checkTransferGroupCarrier"  parameterClass="map" resultClass="java.lang.Integer">	
			select count(1) from dual where 
						(select  FUN_GET_PARENT_CARR (#trfCarr#) from dual) =
							(select  FUN_GET_PARENT_CARR (#recvCarr#) from dual)
	</select>

	<!-- Added for fix 12566. Sanket 23SEP14-->
    <select id="fetchHawbCount"  parameterClass="map" resultClass="cargo.cms.imprt.bo.TrmBO">	
			select  count(1) as hawbCount, min (hawb_no) as hawbNo  
            from edi_fhl t1
            join edi_fhl_HAWB t2 on t1.tr_no = t2.tr_no
            where awb_no = #AWB_NO# group by awb_no
	</select>

	<select id="get_catalog_for_awb"  parameterClass="map" resultClass="java.lang.String">	
		SELECT CATALOG FROM IMP_CAR_AWB
		WHERE AWB_NO=#awb_no# 
		AND AWB_CLOSED='N' AND ROWNUM=1
	</select>

	<!-- Changed for QR :: RANJITH -->
	<select id="check_destination_for_awb"  parameterClass="map" resultClass="java.lang.String">	
		SELECT NVL(count(1),0) FROM AWB WHERE DEST='HKG' AND AWB_NO=#awb_no# and AWB_TYPE = 'T' and nvl(awb_closed_yn,'N') = 'N'
	</select>

	<select id="check_awb_type_for_CT"  parameterClass="map" resultClass="java.lang.String">	
			SELECT NVL(count(1),0) FROM AWB WHERE AWB_NO=#awb_no# and AWB_TYPE = 'E' and nvl(awb_closed_yn,'N') = 'N'
	</select>
	
	<select id="check_constraint_for_awb"  parameterClass="map" resultClass="java.lang.String">	
		SELECT NVL(COUNT(1),0)
		FROM IMP_CAR_AWB A 
		JOIN IMP_CAR_SHP S ON A.AWB_NO = S.AWB_NO AND A.AWB_DATE = S.AWB_DATE
		LEFT JOIN V_CST_IMP_CC_CODE_AWB_ALL V ON V.FLT_KEY = S.FLT_KEY AND V.FLT_DATE = S.FLT_DATE AND V.AWB_NO = S.AWB_NO 
			AND NVL(V.HAWB_NO, '000000000000000000') =  '000000000000000000'
		WHERE S.AWB_NO = #awb_no# AND V.CC_CODE IS NULL AND A.CATALOG NOT IN ('TM')
		and exists (select null from cst_csgnm c
		where c.FLT_KEY = S.FLT_KEY AND c.FLT_DATE = S.FLT_DATE AND c.AWB_NO = S.AWB_NO)
	</select>

	 <select id="getListforCTHO" parameterClass="cargo.cms.imprt.bo.TrmBO" resultClass="cargo.cms.imprt.bo.TrmBO" >
          select TRM_NO trmNo, to_char(TRM_DATE,'DDMONYY') trmDate, TRM_TYPE trmType, TRANSF_CARR transferCarrier, 
          ULD_KEY uldKey, AWB_NO awbNo, SUBSTR(AWB_NO,1,3)||'-'||SUBSTR(AWB_NO,4) as awbNoDisp , to_char(AWB_DATE,'DDMONYY') awbDate, 
          <!-- nvl(PCS,0) transferPcs, nvl(WT,0) transferWt,-->
          (select nvl(sum(PCS),0) from imp_trm_dtl a where a.trm_no =IMP_trm_hd.trm_no) as transferPcs,
          (select nvl(sum(WT),0) from imp_trm_dtl a where a.trm_no =IMP_trm_hd.trm_no) as transferWt, 
		  (select CODE_DESC from MAST_CODE_DTL where CODE_TYPE = 'RECD_CARR_HANDLER' and CODE = RECD_CARR_HANDR  )  recevCarrierHandlerShow,
		  RECD_CARR_HANDR recevCarrierHandler, RECD_CARR recevCarrier, 
          REJECT_REASON rejectReson, decode(REJECT_IND,null,'N',REJECT_IND) rejectResonInd  
          from IMP_trm_hd 
          where IMP_trm_hd.HO_NO is null  and IMP_trm_hd.status = 'ISSUED' 
	          <isNotEmpty property="recevCarrierHandler">
	            and  RECD_CARR_HANDR =  #recevCarrierHandler# 
	          </isNotEmpty>
	           <isNotEmpty property="recevCarrier">
	            and  RECD_CARR = #recevCarrier#   
	          </isNotEmpty>
	          <isNotEmpty property="crDateFrom">
	          <isNotEmpty property="crDateFromHH">
	          <isNotEmpty property="crDateFromMI">
	           <isNotEmpty property="crDateTo">
	          <isNotEmpty property="crDateToHH">
	          <isNotEmpty property="crDateToMI">
	          and cr_date between to_date(#crDateFrom# ||' '||#crDateFromHH#||#crDateFromMI#,'DDMONYY HH24MI')  and to_date(#crDateTo# ||' '||#crDateToHH#||#crDateToMI#,'DDMONYY HH24MI')
	          </isNotEmpty>
	          </isNotEmpty>
	          </isNotEmpty>
	          </isNotEmpty>
	          </isNotEmpty>
	          </isNotEmpty>
	  </select>
	  
	<insert id="imp_ct_ho_form_ins" parameterClass="cargo.cms.imprt.bo.TrmBO" >
	    Insert into CT_HO (HO_NO,RECD_CARR_HANDR,EST_PICK_DATE_TIME,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE) values
	    (#hoNo#,#recevCarrierHandler#,to_date(#estPickDateTime#,'DDMONYY HH24MI'),#lmUser#,sysdate,#lmUser#,sysdate)
	</insert>
	
	<update id="imp_ct_ho_form_upd" parameterClass="cargo.cms.imprt.bo.TrmBO">
		UPDATE IMP_TRM_HD 
		SET HO_NO =#hoNo#,
			REJECT_IND = 'N',
			REJECT_REASON = NULL,
			TR_TYPE = #trtype#		
		WHERE TRM_NO = #trmNo#
	</update>
	
	<select id="checkHOexitsForCT" parameterClass="cargo.cms.imprt.bo.TrmBO" resultClass="java.lang.Integer" >
			select COUNT(1) from IMP_trm_hd  where  HO_NO is not null and TRM_NO = #trmNo# and TRM_DATE = to_date(#trmDate#,'DDMONYY') 
	</select>
	
	<delete id="delete_CT_HO" parameterClass="cargo.cms.imprt.bo.TrmBO" >
	    delete from CT_HO where HO_NO = #hoNo#
	</delete>
	
	<update id="delete_ct_for_ho_form" parameterClass="cargo.cms.imprt.bo.TrmBO">
		UPDATE IMP_TRM_HD 
		SET HO_NO = null,
		status = 'ISSUED',
		retrv_date = null,
		retrv_user = null,
		lm_user_id = #lmUser#,
		lm_date = sysdate
		WHERE  HO_NO =#hoNo#
	</update>
	
	<select id="checkHOCT_POSTED" parameterClass="cargo.cms.imprt.bo.TrmBO" resultClass="java.lang.Integer" >
			select COUNT(1) from IMP_trm_hd  where   HO_NO = #hoNo# and status = 'POSTED'
	</select>
	
	<select id="checkHOCT_RETRIEVED" parameterClass="cargo.cms.imprt.bo.TrmBO" resultClass="java.lang.Integer" >
			select COUNT(1) from IMP_trm_hd  where   HO_NO = #hoNo# and status = 'RETRIEVED'
	</select>
	
	<select id="getRecvCarrHandler" parameterClass="java.lang.String" resultClass="java.lang.String" >
			select CODE_DESC from MAST_CODE_DTL where CODE_TYPE = 'RECD_CARR_HANDLER' and CODE = #recevCarrierHandler#
	</select>
	
	<select id="get_amend_trm_list_trmno" parameterClass="cargo.cms.imprt.bo.TrmBO" resultClass="cargo.cms.imprt.bo.TrmBO" >
		SELECT  ULD_KEY AS uldKey,
			AWB_NO AS awbNo,
			AWB_DATE AS awbDate,			  
			SUBSTR(TRIM(AWB_NO),1,3)||'-'||SUBSTR(TRIM(AWB_NO),4) awbNoDisp,
			TRM_NO AS trmNo, 
			TO_CHAR(TRM_DATE,'DDMONYY HH24:MI') AS trmDate, 
			'' AS trmHour,
			'' AS trmMin,  
			TRANSF_CARR AS transferCarrier, 
			RECD_CARR AS recevCarrier, 
			RECD_CARR_HANDR AS recevCarrierHandler, 
			DECODE(ULD_KEY,NULL,'N','Y') AS uldExists,
			DECODE(RETRV_DATE,NULL,'N','Y') AS retrvInd ,
			SOURCE source
		FROM IMP_TRM_HD
		WHERE  Status  = 'ISSUED' AND  TRM_NO = #trmNo#
		<isNotEmpty property="loginCarrier">
			and TRANSF_CARR = #loginCarrier#
		</isNotEmpty>
		Order by TRM_NO
	</select>
	
	<!--  Changed for QR -->
	<select id="get_amend_trm_list_awb" parameterClass="cargo.cms.imprt.bo.TrmBO" resultClass="cargo.cms.imprt.bo.TrmBO" >
		SELECT  
			A.ULD_KEY AS uldKey,
			A.AWB_NO AS awbNo,
			A.AWB_DATE AS awbDate,			  
			SUBSTR(TRIM(A.AWB_NO),1,3)||'-'||SUBSTR(TRIM(A.AWB_NO),4) awbNoDisp,
			A.TRM_NO AS trmNo, 
			TO_CHAR(A.TRM_DATE,'DDMONYY HH24:MI') AS trmDate,			
			A.AWB_NO AS awbNo,
			A.AWB_DATE AS awbDate,			  
			SUBSTR(TRIM(A.AWB_NO),1,3)||'-'||SUBSTR(TRIM(A.AWB_NO),4) awbNoDisp, 
			'' AS trmHour,
			'' AS trmMin,  
			A.TRANSF_CARR AS transferCarrier, 
			A.RECD_CARR AS recevCarrier, 
			A.RECD_CARR_HANDR AS recevCarrierHandler, 
			DECODE(A.ULD_KEY,NULL,'N','Y') AS uldExists,
			DECODE(A.RETRV_DATE,NULL,'N','Y') AS retrvInd ,
			A.SOURCE source
		FROM IMP_TRM_HD A , IMP_TRM_DTL B
		WHERE B.TRM_NO = A.TRM_NO AND A.Status  = 'ISSUED' AND B.AWB_NO = #awbNo# 
		and B.AWB_DATE = (select max(AWB_DATE) from awb where awb_no = B.AWB_NO )
		<isNotEmpty property="loginCarrier">
			AND A.TRANSF_CARR = #loginCarrier#
		</isNotEmpty>
		Order by A.TRM_NO
	</select>
	
	<select id="get_amend_trm_list_trmdate" parameterClass="cargo.cms.imprt.bo.TrmBO" resultClass="cargo.cms.imprt.bo.TrmBO" >
		SELECT  
			ULD_KEY AS uldKey,
			AWB_NO AS awbNo,
			AWB_DATE AS awbDate,			  
			SUBSTR(TRIM(AWB_NO),1,3)||'-'||SUBSTR(TRIM(AWB_NO),4) awbNoDisp,
			TRM_NO AS trmNo, 
			TO_CHAR(TRM_DATE,'DDMONYY HH24:MI') AS trmDate, 
			'' AS trmHour,
			'' AS trmMin,  
			TRANSF_CARR AS transferCarrier, 
			RECD_CARR AS recevCarrier, 
			RECD_CARR_HANDR AS recevCarrierHandler, 
			DECODE(ULD_KEY,NULL,'N','Y') AS uldExists,
			DECODE(RETRV_DATE,NULL,'N','Y') AS retrvInd ,
			SOURCE source
		FROM IMP_TRM_HD 
		WHERE Status  = 'ISSUED' AND TO_CHAR(TRM_DATE,'DDMONYY') = TO_DATE(#trmDate#,'DDMONYY') 
		<dynamic>
			<isNotEmpty prepend="AND" property="transferCarrier">
				 TRANSF_CARR = #transferCarrier# 
			</isNotEmpty>
			<isNotEmpty property="loginCarrier">
				AND TRANSF_CARR = #loginCarrier#
			</isNotEmpty>
		</dynamic>
		Order by TRM_NO
	</select>

	<select id="get_amend_trm_list_uld" parameterClass="cargo.cms.imprt.bo.TrmBO" resultClass="cargo.cms.imprt.bo.TrmBO" >
		SELECT  
			ULD_KEY AS uldKey,
			AWB_NO AS awbNo,
			AWB_DATE AS awbDate,			  
			SUBSTR(TRIM(AWB_NO),1,3)||'-'||SUBSTR(TRIM(AWB_NO),4) awbNoDisp,
			TRM_NO AS trmNo, 
			TO_CHAR(TRM_DATE,'DDMONYY HH24:MI') AS trmDate, 
			'' AS trmHour,
			'' AS trmMin,  
			TRANSF_CARR AS transferCarrier, 
			RECD_CARR AS recevCarrier, 
			RECD_CARR_HANDR AS recevCarrierHandler, 
			DECODE(ULD_KEY,NULL,'N','Y') AS uldExists,
			DECODE(RETRV_DATE,NULL,'N','Y') AS retrvInd ,
			SOURCE source
		FROM IMP_TRM_HD
		WHERE  Status  = 'ISSUED' AND ULD_KEY = #uldKey#
		<isNotEmpty property="loginCarrier">
			and TRANSF_CARR = #loginCarrier#
		</isNotEmpty>
		Order by TRM_NO
	</select>
	
	<select id="get_unpost_trm_list" parameterClass="cargo.cms.imprt.bo.TrmBO" resultClass="cargo.cms.imprt.bo.TrmBO" >
		SELECT  
			A.ULD_KEY AS uldKey,
			A.AWB_NO AS awbNo,
			A.AWB_DATE AS awbDate,			  
			SUBSTR(TRIM(A.AWB_NO),1,3)||'-'||SUBSTR(TRIM(A.AWB_NO),4) awbNoDisp,
			A.TRM_NO AS trmNo, 
			TO_CHAR(A.TRM_DATE,'DDMONYY HH24:MI') AS trmDate, 
			'' AS trmHour,
			'' AS trmMin,  
			A.TRANSF_CARR AS transferCarrier, 
			A.RECD_CARR AS recevCarrier, 
			A.RECD_CARR_HANDR AS recevCarrierHandler, 
			DECODE(A.ULD_KEY,NULL,'N','Y') AS uldExists,
			DECODE(A.RETRV_DATE,NULL,'N','Y') AS retrvInd ,
			A.SOURCE source
		FROM IMP_TRM_HD A		
	    <isNotEmpty property="awbNo">
		JOIN IMP_TRM_DTL B
	      ON B.TRM_NO = A.TRM_NO and B.AWB_NO = #awbNo# 
	      and B.AWB_DATE = (select max(AWB_DATE) from awb where awb_no = B.AWB_NO )
		</isNotEmpty>
		WHERE  A.Status  = 'POSTED' and A.RECD_CARR_HANDR !='CPCT'
    	<isNotEmpty property="uldKey">
			AND A.ULD_KEY = #uldKey#
		</isNotEmpty>
		<isNotEmpty property="trmNo">
			AND  A.TRM_NO = #trmNo#
		</isNotEmpty>
	<isNotEmpty property="trmDateFrom">
      <isNotEmpty property="trmDateTo">
		AND TO_CHAR(A.TRM_DATE,'DDMONYY') BETWEEN TO_DATE(#trmDateFrom#,'DDMONYY') 
        AND TO_DATE(#trmDateTo#,'DDMONYY') 
	</isNotEmpty>
    </isNotEmpty>   
		Order by A.TRM_NO
	</select>
	
	<update id="imp_unpost_awb_owner_recvCarr_upd" parameterClass="cargo.cms.imprt.bo.TrmBO" >
		update AWB_OWNER set PCS = PCS - #transferPcs# , wt = wt - #transferWt#,  LM_USER_ID = #lmUser# , LM_DATE = sysdate
		where AWB_NO = #awbNo# and AWB_DATE = #awbDate# and carr_code = #recevCarrier#
	</update>
	
	<select id="amend_trm_validation_data" parameterClass="cargo.cms.imprt.bo.TrmBO" resultClass="cargo.cms.imprt.bo.TrmBO" >
		SELECT POST_USER AS postUser,
			VOID_USER AS voidUser,
			RETRV_USER AS retriveUser
		FROM IMP_TRM_HD WHERE TRM_NO=#trmNo#
	</select>
	
	<select id="get_trm_header" parameterClass="cargo.cms.imprt.bo.TrmBO" resultClass="cargo.cms.imprt.bo.TrmBO">
		SELECT 
			ULD_KEY AS uldKey,
			AWB_NO AS awbNo,
			AWB_DATE AS awbDate,			  
			SUBSTR(TRIM(AWB_NO),1,3)||'-'||SUBSTR(TRIM(AWB_NO),4) awbNoDisp,
			TRM_NO AS trmNo,
		   TO_CHAR(TRM_DATE,'DDMONYY HH24:MI') AS trmDate ,
		   TRANSF_CARR AS transferCarrier,
		   RECD_CARR AS recevCarrier,
		   RECD_CARR_HANDR AS recevCarrierHandler,
		   ULD_KEY AS uldKey,
		   ULD_WH_DEST AS warehouseDestination,
		   ULD_LOCN AS warehouseLocation,
		   ULD_RMK AS uldRemark,
		   STATUS AS status,
		   TO_CHAR(POST_DATE,'DDMONYY HH24:MI') AS postDate, 
		   '' AS postHour, 
		   '' AS postMin,  
		   TO_CHAR(VOID_DATE,'DDMONYY HH24:MI') AS voidDate ,
		   DECODE(RETRV_DATE,NULL,'N','Y') AS retrvInd,
		   DECODE(POST_DATE,NULL,'N','Y') postIndicator ,
			TRM_TYPE trmType,
			TRM_REF_NO trmRefNo,
			SOURCE source,
			REJECT_REASON rejectReson
		FROM IMP_TRM_HD WHERE TRM_NO = #trmNo#
	</select>

	<update id="void_trm_detail" parameterClass="cargo.cms.imprt.bo.TrmBO">
		UPDATE IMP_TRM_HD SET
			VOID_DATE  = SYSDATE,
			VOID_USER  = #lmUser#,
			LM_USER_ID = #lmUser#,
			LM_DATE    = SYSDATE,
			STATUS     = 'VOID',
			TR_TYPE='VCT'
		WHERE TRM_NO = #trmNo#
	</update>
	
	<update id="void_trm_detail_posted" parameterClass="cargo.cms.imprt.bo.TrmBO">
		UPDATE IMP_TRM_HD SET
			VOID_DATE  = SYSDATE,
			VOID_USER  = #lmUser#,
			LM_USER_ID = #lmUser#,
			LM_DATE    = SYSDATE,
			STATUS     = 'VOID',
			POST_DATE = null,
			POST_USER = null,
			TR_TYPE='VCT'
		WHERE TRM_NO = #trmNo#
	</update>
	
	<select id="get_trm_detail" parameterClass="cargo.cms.imprt.bo.TrmBO" resultClass="cargo.cms.imprt.bo.TrmBO">
	
		<![CDATA[
				  SELECT TRM_NO AS trmNo,
				   DOC_LINE_NO AS doclineNo,
				   SUBSTR(TRIM(A.AWB_NO),1,3)||'-'||SUBSTR(TRIM(A.AWB_NO),4) awbNoDisp,
				   A.AWB_NO AS awbNo,
				   to_char(A.AWB_Date,'DDMONYY') AS awbDate,
				   CATALOG AS catalog,
				   DEST AS awbDestination,
				   FLT_KEY AS flightKey,
				   TO_CHAR(FLT_DATE,'DDMONYY') AS flightDate,
				   PCS AS transferPcs,
				   WT AS transferWt,
				   RMK AS remark,
				   NVL(B.LOCN_PCS,0) AS locationPcs,
				   NVL(B.LOCN_WT,0)  AS locationWt
				   FROM IMP_TRM_DTL A 
				   left join  ( SELECT  AWB_NO, AWB_DATE, SUM(LOCN_PCS) LOCN_PCS, SUM(LOCN_WT) LOCN_WT 
				   			  FROM AWB_INVENTORY GROUP  BY AWB_NO, AWB_DATE) B	   
				   on A.AWB_NO = B.AWB_NO AND  A.AWB_DATE = TO_DATE(B.AWB_DATE) 
			     WHERE TRM_NO =  #trmNo#	   
	   ]]>
	</select>
	
	<select id="validate_trm_catalog" parameterClass="map" resultClass="java.lang.String" >
			SELECT nvl(count(1),0) FROM IMP_TRM_DTL WHERE TRM_NO=#trmNo# AND CATALOG='TA' 
	</select>
	
	<select id="get_trm_status" parameterClass="cargo.cms.imprt.bo.TrmBO" resultClass="java.lang.String">
		select STATUS from IMP_TRM_HD WHERE TRM_NO = #trmNo#
	</select>
	
	<select id="validate_void_trm_hoNo" parameterClass="map" resultClass="java.lang.Integer" >
			select count(1) from IMP_TRM_HD where HO_NO is null and status = 'ISSUED' and TRM_NO = #trmNo# 
	</select>
	
	<update id="post_trm_detail" parameterClass="cargo.cms.imprt.bo.TrmBO">
		UPDATE IMP_TRM_HD SET
			POST_DATE  = TO_DATE(#postDate#,'DDMONYYHH24MI'),
			POST_USER  = #lmUser#,
			LM_USER_ID = #lmUser#,
			LM_DATE    = SYSDATE,
			STATUS     = 'POSTED',
			TR_TYPE='PCT'
		WHERE TRM_NO = #trmNo#
	</update>
	
	<parameterMap id="postTrmMap" class="map" >
		<parameter property="TRMNO" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="ULDKEY" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="USERID" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	</parameterMap>

	<procedure id="post_trm_package" parameterMap="postTrmMap" >
		{  call PKG_TRM.PRC_TRM(?,?,?) }
	</procedure>
	
	<update id="unpost_trm_detail" parameterClass="cargo.cms.imprt.bo.TrmBO">
		UPDATE IMP_TRM_HD SET
			POST_DATE  = null,
			POST_USER  = null,
			LM_USER_ID = #lmUser#,
			LM_DATE    = SYSDATE,
			STATUS     = 'RETRIEVED'
		WHERE TRM_NO = #trmNo#
	</update>
	
	<update id="unpost_trm_detail_ta" parameterClass="cargo.cms.imprt.bo.TrmBO">
		UPDATE IMP_TRM_HD SET
			POST_DATE  = null,
			POST_USER  = null,
			LM_USER_ID = #lmUser#,
			LM_DATE    = SYSDATE,
			STATUS     = 'ISSUED',
			TR_TYPE='ACT'
		WHERE TRM_NO = #trmNo#
	</update>
	
	<update id="update_trm_header" parameterClass="cargo.cms.imprt.bo.TrmBO">
		UPDATE IMP_TRM_HD 
		SET ULD_RMK =#uldRemark#
		WHERE TRM_NO = #trmNo#
	</update>
	
	<update id="update_trm_detail" parameterClass="cargo.cms.imprt.bo.TrmBO">
		UPDATE IMP_TRM_DTL
			SET PCS = #newTransferPcs#,
			WT = #newTransferWt#,
			RMK = #remark#
		 WHERE TRM_NO = #trmNo# AND
			DOC_LINE_NO =#doclineNo#
	</update>
	
	<update id="retrive_trm_header" parameterClass="cargo.cms.imprt.bo.TrmBO">
		UPDATE IMP_TRM_HD SET
			STATUS = 'RETRIEVED',
			RETRV_DATE = SYSDATE,
			RETRV_USER = #lmUser#,
			LM_DATE = SYSDATE,
			LM_USER_ID = #lmUser#,
			TR_TYPE='ACT'
		WHERE TRM_NO = #trmNo#
	</update>
	
	<update id="unretrive_trm_header" parameterClass="cargo.cms.imprt.bo.TrmBO">
		UPDATE IMP_TRM_HD SET
			STATUS = 'ISSUED',
			RETRV_DATE = null,
			RETRV_USER = null,
			LM_DATE = SYSDATE,
			LM_USER_ID = #lmUser#,
			TR_TYPE='ACT'
		WHERE TRM_NO = #trmNo#
	</update>
	
	<select id="get_awb_relocation_details" parameterClass="cargo.cms.imprt.bo.TrmBO" 			resultClass="cargo.cms.imprt.bo.TrmAwbRelocationBO">
	SELECT LOC_CODE AS whDestination, 
	   LOC_CODE AS whLocation, 
	   LOCN_PCS AS locPieces, 
	   LOCN_WT AS locWeight, 
	   LSP_NO AS lspNo, 
	   ULD_KEY AS uldKey, 
	   DAM_IND AS damageInd, 
	   PPK_IND AS ppkInd
	FROM AWB_INVENTORY 
	WHERE TRM_NO IS NULL AND 
	  AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')  AND 
	  AWB_NO = #awbNo# AND 
	  FLT_KEY = #flightKey# AND 
	  FLT_DATE = TO_DATE(#flightDate#,'DDMONYY') 
</select>
	
	<delete id="delete_trm_header" parameterClass="cargo.cms.imprt.bo.TrmBO">
		DELETE IMP_TRM_HD 
		WHERE TRM_NO = #trmNo#
	</delete>
	
	<delete id="delete_trm_detail" parameterClass="cargo.cms.imprt.bo.TrmBO">
		DELETE IMP_TRM_DTL 
		WHERE TRM_NO = #trmNo# AND
		DOC_LINE_NO =#doclineNo#
	</delete>
	
	<select id="get_trm_detail_count"  parameterClass="map" resultClass="java.lang.String">
		SELECT NVL(count(1),0) FROM IMP_TRM_DTL WHERE TRM_NO = #trmNo#
	</select>
	
	<insert id="insert_awb_reloc_hd" parameterClass="cargo.cms.imprt.bo.TrmAwbRelocationBO" >
	INSERT INTO AWB_RELOC_HD (   
		TR_NO, 
		CR_USER_ID, 
		CR_DATE,   
		LM_USER_ID, 
		LM_DATE, 
		AWB_NO,   
		AWB_DATE, 		 
		RELOC_TYPE)
	VALUES(#trNo#,
		#lmUser#,
		SYSDATE,
		#lmUser#,
		SYSDATE,
		#awbNo#,
		TO_DATE(#awbDate#,'DDMONYY'),		
		'T')
</insert>

<insert id="insert_awb_reloc_iss" parameterClass="cargo.cms.imprt.bo.TrmAwbRelocationBO" >
	INSERT INTO AWB_RELOC_ISS (   
		TR_NO, 
		DOC_LINE_NO, 
		WH_DEST,    
		LOC_CODE,  
		LOCN_PCS, 
		LOCN_WT,    
		LSP_NO,    
		ULD_KEY,   
		PPK_IND,  	
		FLT_DATE,  
		FLT_TYPE,  
		FLT_KEY,   
		CR_USER_ID, 
		CR_DATE,    
		LM_USER_ID, 
		LM_DATE, 
		DAM_IND,    
		BULK_WT, 
		BUP_WT) 			
	VALUES
		(#trNo#,
		#doclineNo#,
		#whDestination#,
		#whLocation#,
		#transferPieces#,
		#transferWeight#,
		#lspNo#,
		#uldKey#,
		#ppkInd#,
		TO_DATE(#fltDate#,'DDMONYY'),
		'I',
		#fltKey#,
		#lmUser#,
		SYSDATE,
		#lmUser#,
		SYSDATE,
		#damageInd#,
		'0',
		'0')
 </insert>

 <insert id="insert_awb_reloc_recv" parameterClass="cargo.cms.imprt.bo.TrmAwbRelocationBO" >
	INSERT INTO AWB_RELOC_RECV (   
		TR_NO, 
		DOC_LINE_NO, 
		WH_DEST,    
		LOC_CODE, 
		LOCN_PCS, 
		LOCN_WT,    
		LSP_NO, 
		ULD_KEY,
		PPK_IND,    
		FLT_DATE,
		FLT_TYPE,  
		FLT_KEY, 
		TRM_NO,
		CR_USER_ID, 
		CR_DATE,   
		LM_USER_ID, 
		LM_DATE, 
		DAM_IND,   
		BULK_WT, 
		BUP_WT )
	VALUES
		(#trNo#,
		#doclineNo#,
		#whDestination#,
		#whLocation#,
		#transferPieces#,
		#transferWeight#,
		#lspNo#,
		#uldKey#,
		#ppkInd#,
		TO_DATE(#fltDate#,'DDMONYY'),
		'I',
		#fltKey#,
		#trmNo#,
		#lmUser#,
		SYSDATE,
		#lmUser#,
		SYSDATE,
		#damageInd#,
		'0',
		'0'
		)
 </insert>
 
	<update id="update_trm_awb_inventory" parameterClass="cargo.cms.imprt.bo.TrmBO">
		update awb_inventory set trm_no = #trmNo# where uld_key = #uldKey# 
	</update>
			
			
	<select id="fetchTrmValues" parameterClass="java.lang.String" resultClass="cargo.cms.imprt.bo.TrackingBO">			
		<![CDATA[
			SELECT a.TRM_NO trmNo, c.TRM_DATE  , a.AWB_NO awbNo,To_Char(a.AWB_DATE,'DDMONYY')  awbDate,
			a.FLT_KEY fltKey, To_Char(a.FLT_DATE,'DDMONYY') fltDate , b.PCS qtyTotPcs , c.RECD_CARR recdCarr ,  TRANSF_CARR transferCarr
			FROM IMP_TRM_DTL a , AWB b  , IMP_TRM_HD c			 	
			where a.TRM_NO = c.TRM_NO and a.AWB_NO = b.AWB_NO and  a.AWB_DATE = b.AWB_DATE and b.awb_type ='I'
			AND a.TRM_No =#trmNo#
			Order BY c.TRM_DATE DESC
		]]>
	</select>
	
	
	<!-- ##################### ENQUIRE CT BY MAYANK Starts ############################# -->
<!--  Changed for QR -->
	<select id="get_enquire_trm_list_awb" parameterClass="cargo.cms.imprt.bo.TrmBO" resultClass="cargo.cms.imprt.bo.TrmBO" >
		select L.* from (
			SELECT  
			A.ULD_KEY AS uldKey,
			A.AWB_NO AS awbNo,
			to_char(A.AWB_DATE,'DDMONYY') AS awbDate,			  
			SUBSTR(TRIM(A.AWB_NO),1,3)||'-'||SUBSTR(TRIM(A.AWB_NO),4) awbNoDisp,
			A.TRM_NO AS trmNo, 
			TO_CHAR(A.TRM_DATE,'DDMONYY HH24:MI') AS trmDate, 
			'' AS trmHour,
			'' AS trmMin,  
			A.TRANSF_CARR AS transferCarrier, 
			A.RECD_CARR AS recevCarrier, 
			A.RECD_CARR_HANDR AS recevCarrierHandler, 
			DECODE(A.ULD_KEY,NULL,'N','Y') AS uldExists,
			A.STATUS AS status,
			TO_CHAR(A.POST_DATE,'DDMONYY HH24:MI') AS postDate, 
			'' AS postTrmHour,
			'' AS postTrmMin,  
			TO_CHAR(A.VOID_DATE,'DDMONYY HH24:MI') AS voidDate ,
			DECODE(A.RETRV_DATE,NULL,'N','Y') AS retrvInd ,
			A.Source source,
			to_char(A.LAST_PRNT_DATE,'DDMONYY HH24:MI') lastPrntDate,
			    case when A.ULD_KEY is not null then      
	        case when (
	          SELECT nvl(COUNT(DISTINCT hawb_no), 0) FROM edi_fhl hd, edi_fhl_hawb dtl WHERE hd.tr_no = dtl.tr_no AND (hd.awb_no,hd.awb_date) in 
	          (select AWB_NO,AWB_DATE from IMP_TRM_HD where TRM_NO = A.TRM_NO) ) > 0 then 'Y' else 'N' end
	        when  A.ULD_KEY is null then 
	        case when (SELECT nvl(COUNT(DISTINCT hawb_no), 0) FROM edi_fhl hd, edi_fhl_hawb dtl WHERE hd.tr_no = dtl.tr_no AND hd.awb_no = a.awb_no AND hd.awb_date = a.awb_date) > 0
	           then 'Y' else 'N' end
	        end as  consolInd,      
	        case when A.ULD_KEY is not null then      
	        case when 
	           (SELECT nvl(COUNT(DISTINCT awb_no), 0) FROM CST_DC_DTL dc WHERE  (dc.awb_no,dc.awb_date) in 
	                    (select AWB_NO,AWB_DATE from IMP_TRM_HD where TRM_NO = A.TRM_NO) ) > 0 then 'Y' else 'N' end
	        when  A.ULD_KEY is null then 
	        case when (SELECT nvl(COUNT(DISTINCT awb_no), 0) FROM CST_DC_DTL dc WHERE  dc.awb_no = a.awb_no AND dc.awb_date = a.awb_date) > 0
	           then 'Y' else 'N' end
	        end as  dcInd,
	      A.pcs as ctPcs,
	      A.wt as ctWt,
	      itt.ITT_AUTH_CODE as authCode,
	      itt.ITT_REQ_NO as eiitNumber,
	      to_char(itt.ITT_REQ_DATE,'DDMONYY') as eiitDate,
	      itt.ITT_REQ_CODE as ittReqCode,
	      itt.TR_NO as trNumber,
	      itt.DOC_LINE_NO as docLineNo,
	      DECODE(fun_check_man_itt( itt.itt_req_no, itt.itt_req_date, null, 'ITT', 'Y'),'A','Accepted','R','Rejected','P','In progress','W','Pending','R','Rejected','E','Error') eStatus,
	      DECODE(fun_check_man_itt( itt.itt_req_no, itt.itt_req_date, null, 'ITT', 'Y'),'A','Accepted','P','In progress','W','Pending',null) checkSubmFlg,
        
        (SELECT ack_rec_type FROM cst_ack, cst_itt_hd  where cst_itt_hd.accs_ind = 'N' and cst_itt_hd.itt_req_code = cst_ack.itt_req_code
                      and cst_ack.itt_req_code = itt.itt_req_code and cst_itt_hd.itt_req_no = itt.itt_req_no  
                      and cst_itt_hd.itt_req_date = itt.itt_req_date and cst_ack.ack_rec_type = 'ITL' and rownum = 1) as itlStatus,
        (SELECT ack_rec_type FROM cst_ack, cst_itt_hd  where cst_itt_hd.accs_ind = 'N' and cst_itt_hd.itt_req_code = cst_ack.itt_req_code
                      and cst_ack.itt_req_code = itt.itt_req_code and cst_itt_hd.itt_req_no = itt.itt_req_no  
                      and cst_itt_hd.itt_req_date = itt.itt_req_date and cst_ack.ack_rec_type = 'ITN' and rownum = 1) as itnStatus,
        (SELECT ack_rec_type FROM cst_ack, cst_itt_hd  where cst_itt_hd.accs_ind = 'N' and cst_itt_hd.itt_req_code = cst_ack.itt_req_code
                      and cst_ack.itt_req_code = itt.itt_req_code and cst_itt_hd.itt_req_no = itt.itt_req_no  
                      and cst_itt_hd.itt_req_date = itt.itt_req_date and cst_ack.ack_rec_type = 'ITD' and rownum = 1) as itdStatus,
        (SELECT ack_rec_type FROM cst_ack, cst_itt_hd  where cst_itt_hd.accs_ind = 'N' and cst_itt_hd.itt_req_code = cst_ack.itt_req_code
                      and cst_ack.itt_req_code = itt.itt_req_code and cst_itt_hd.itt_req_no = itt.itt_req_no  
                      and cst_itt_hd.itt_req_date = itt.itt_req_date and cst_ack.ack_rec_type = 'ITC' and rownum = 1) as itcStatus, 
        (SELECT ack_rec_type FROM cst_ack, cst_itt_hd  where cst_itt_hd.accs_ind = 'N' and cst_itt_hd.itt_req_code = cst_ack.itt_req_code
                      and cst_ack.itt_req_code = itt.itt_req_code and cst_itt_hd.itt_req_no = itt.itt_req_no  
                      and cst_itt_hd.itt_req_date = itt.itt_req_date and cst_ack.ack_rec_type = 'ITA' and rownum = 1) as itaStatus, 
        
	      case when A.ULD_KEY is null then 
	      (SELECT trim(V.ref_no) FROM V_CST_IMP_CC_CODE V WHERE V.FLT_KEY = B.FLT_KEY AND V.FLT_DATE = B.FLT_DATE AND V.AWB_NO = B.AWB_NO
	              AND NVL(V.HAWB_NO, '000000000000000000') = '000000000000000000' AND ROWNUM = 1) end 
	      AS ittCtmRefNo,
	      case when A.ULD_KEY is null then 
	      (SELECT trim(V.CC_CODE) FROM V_CST_IMP_CC_CODE V
	            WHERE V.FLT_KEY = B.FLT_KEY AND V.FLT_DATE = B.FLT_DATE AND V.AWB_NO = A.AWB_NO
	            AND NVL(V.HAWB_NO, '000000000000000000') = '000000000000000000' AND ROWNUM = 1) 
	      end AS ccCode,
	      awb.catalog  as catalog,        
      	  awb.carr_code  as carrCode,
      	  awb.dest as destination,
      	  B.FLT_KEY as fltKey,
      	  TO_CHAR(B.FLT_DATE,'DDMONYY') AS fltDate ,
      	  B.FLT_TYPE as fltType,
      	  case when awb.AWB_TYPE = 'E' then 'Y'
      	  	   when (A.status ='VOID' OR A.status = 'POSTED') then 'Y' else 'N'end as ctStatus,
      	  awb.orig as origin,
      	  awb.content as content,
      	  shp.MANIFEST_PCS manPcs,
		  shp.MANIFEST_WT manWt  
		FROM IMP_TRM_HD A 
		join AWB awb on awb.awb_no = a.awb_no AND awb.awb_date = a.awb_date
		left join IMP_TRM_DTL B on B.TRM_NO = A.TRM_NO and B.awb_no = a.awb_no AND B.awb_date = a.awb_date  
   		left JOIN cst_itt_dtl itt  ON B.AWB_DATE = itt.AWB_DATE AND B.AWB_NO = itt.AWB_NO AND B.FLT_KEY = itt.FLT_KEY AND B.FLT_DATE = itt.FLT_DATE and  B.TRM_NO = itt.CT_NO	
   		left JOIN imp_car_shp shp  ON B.AWB_DATE = shp.AWB_DATE AND B.AWB_NO = shp.AWB_NO AND B.FLT_KEY = shp.FLT_KEY AND B.FLT_DATE = shp.FLT_DATE 
		WHERE 
		(A.AWB_NO = #awbNo# and A.AWB_DATE = (select max(AWB_DATE) from awb where awb_no = A.AWB_NO )) 
			or exists (select null from IMP_TRM_DTL B where A.TRM_NO = B.TRM_NO and B.AWB_NO = #awbNo# and 
											B.AWB_DATE = (select max(AWB_DATE) from awb where awb_no = B.AWB_NO))
		<dynamic>								
			<isNotEmpty prepend="AND" property="transferCarrier">
				TRANSF_CARR = #transferCarrier#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="recevCarrier">
				RECD_CARR = #recevCarrier#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="status">
				STATUS = #status#
			</isNotEmpty>			
			<isNotEmpty prepend="AND" property="recevCarrierHandler">
				RECD_CARR_HANDR = #recevCarrierHandler#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="loginCarrier">
				TRANSF_CARR = #loginCarrier# 
			</isNotEmpty>
		</dynamic>
		) L where 1=1
		<dynamic>
		  <isNotEmpty property="eiitStatus">
		    <isEqual property="eiitStatus" prepend="AND" compareValue="Accepted">		
				L.eStatus = #eiitStatus# and L.itaStatus is null and L.itcStatus is null
					and L.itlStatus is null and L.itdStatus is null and L.itnStatus is null 
			</isEqual>
			<isEqual property="eiitStatus" prepend="AND" compareValue="Rejected">		
				L.eStatus = #eiitStatus#
			</isEqual>
			<isEqual property="eiitStatus" prepend="AND" compareValue="In progress">		
				L.eStatus = #eiitStatus#
			</isEqual>
			<isEqual property="eiitStatus" prepend="AND" compareValue="Pending">		
				L.eStatus = #eiitStatus#
			</isEqual>
			<isEqual property="eiitStatus" prepend="AND" compareValue="Approved">		
				L.itaStatus is not null
			</isEqual>			
			<isEqual property="eiitStatus" prepend="AND" compareValue="Canceled">		
				L.itcStatus is not null
			</isEqual>
			<isEqual property="eiitStatus" prepend="AND" compareValue="Time Out">		
				L.itlStatus is not null and L.itcStatus is null
			</isEqual>
			<isEqual property="eiitStatus" prepend="AND" compareValue="Disapproved">		
				L.itdStatus is not null
			</isEqual>
			<isEqual property="eiitStatus" prepend="AND" compareValue="Denied">		
				L.itnStatus is not null
			</isEqual>
		 </isNotEmpty>	
		</dynamic>
		Order by  L.trmNo
	</select>
	<select id="getTRMAWBListForULD" parameterClass="cargo.cms.imprt.bo.TrmBO" resultClass="cargo.cms.imprt.bo.TrmBO" >	
		SELECT 
		  A.awb_no as awbNo,
		  to_char(A.awb_date,'DDMONYY') as awbDate,
		  A.pcs                                  AS ctPcs,
		  A.wt                                        AS ctWt,
		  itt.ITT_AUTH_CODE                           AS authCode,
		  itt.ITT_REQ_CODE                            AS ittReqCode,
		  itt.DOC_LINE_NO                             AS docLineNo,  
		 (SELECT trim(V.ref_no)
		      FROM V_CST_IMP_CC_CODE V
		      WHERE V.FLT_KEY                          = A.FLT_KEY
		      AND V.FLT_DATE                           = A.FLT_DATE
		      AND V.AWB_NO                             = A.AWB_NO
		      AND NVL(V.HAWB_NO, '000000000000000000') = '000000000000000000'
		      AND ROWNUM                               = 1
		  ) AS ittCtmRefNo,
		  
		  (SELECT trim(V.CC_CODE)
		      FROM V_CST_IMP_CC_CODE V
		      WHERE V.FLT_KEY                          = A.FLT_KEY
		      AND V.FLT_DATE                           = A.FLT_DATE
		      AND V.AWB_NO                             = A.AWB_NO
		      AND NVL(V.HAWB_NO, '000000000000000000') = '000000000000000000'
		      AND ROWNUM                               = 1
		   ) AS ccCode,
		  awb.catalog                 AS catalog,
		  awb.carr_code               AS carrCode,
		  awb.dest                    AS destination,
		  awb.orig                    AS origin,
		  A.FLT_KEY                   AS fltKey,
		  TO_CHAR(A.flt_date,'DDMONYY') AS fltDate ,
		  A.FLT_TYPE                  AS fltType,
      		awb.content             as content
		FROM IMP_TRM_DTL A
		JOIN AWB awb ON awb.awb_no    = a.awb_no AND awb.awb_date = a.awb_date
		LEFT JOIN CST_ITT_DTL itt ON itt.CT_NO = A.TRM_NO AND itt.awb_no   = a.awb_no AND itt.awb_date = a.awb_date 
		where A.trm_no = #trmNo#
	</select>

	<select id="get_enquire_trm_list_trmdate" parameterClass="cargo.cms.imprt.bo.TrmBO" resultClass="cargo.cms.imprt.bo.TrmBO" >
		select L.* from (SELECT  
			A.ULD_KEY AS uldKey,
			A.AWB_NO AS awbNo,
			to_char(A.AWB_DATE,'DDMONYY') as awbDate,
			SUBSTR(TRIM(A.AWB_NO),1,3)||'-'||SUBSTR(TRIM(A.AWB_NO),4) awbNoDisp,
			A.TRM_NO AS trmNo, 
			TO_CHAR(TRM_DATE,'DDMONYY HH24:MI') AS trmDate, 
			'' AS trmHour,
			'' AS trmMin,  
			TRANSF_CARR AS transferCarrier, 
			RECD_CARR AS recevCarrier, 
			RECD_CARR_HANDR AS recevCarrierHandler, 
			DECODE(A.ULD_KEY,NULL,'N','Y') AS uldExists,
			STATUS AS status,
			TO_CHAR(POST_DATE,'DDMONYY HH24:MI') AS postDate, 
			'' AS postTrmHour,
			'' AS postTrmMin,  
			TO_CHAR(VOID_DATE,'DDMONYY HH24:MI') AS voidDate ,
			DECODE(RETRV_DATE,NULL,'N','Y') AS retrvInd,
			A.Source source,
			to_char(A.LAST_PRNT_DATE,'DDMONYY HH24:MI') lastPrntDate,
			 case when A.ULD_KEY is not null then      
	        case when (
	          SELECT nvl(COUNT(DISTINCT hawb_no), 0) FROM edi_fhl hd, edi_fhl_hawb dtl WHERE hd.tr_no = dtl.tr_no AND (hd.awb_no,hd.awb_date) in 
	          (select AWB_NO,AWB_DATE from IMP_TRM_HD where TRM_NO = A.TRM_NO) ) > 0 then 'Y' else 'N' end
	        when  A.ULD_KEY is null then 
	        case when (SELECT nvl(COUNT(DISTINCT hawb_no), 0) FROM edi_fhl hd, edi_fhl_hawb dtl WHERE hd.tr_no = dtl.tr_no AND hd.awb_no = a.awb_no AND hd.awb_date = a.awb_date) > 0
	           then 'Y' else 'N' end
	        end as  consolInd,      
	        case when A.ULD_KEY is not null then      
	        case when 
	           (SELECT nvl(COUNT(DISTINCT awb_no), 0) FROM CST_DC_DTL dc WHERE  (dc.awb_no,dc.awb_date) in 
	                    (select AWB_NO,AWB_DATE from IMP_TRM_HD where TRM_NO = A.TRM_NO) ) > 0 then 'Y' else 'N' end
	      when  A.ULD_KEY is null then 
	       case when (SELECT nvl(COUNT(DISTINCT awb_no), 0) FROM CST_DC_DTL dc WHERE  dc.awb_no = a.awb_no AND dc.awb_date = a.awb_date) > 0
	           then 'Y' else 'N' end
	      end as  dcInd,
	      A.pcs as ctPcs,
	      A.wt as ctWt,
	      (SELECT itt_Auth_code FROM cst_itt_hd where cst_itt_hd.itt_req_no = itt.itt_req_no  and cst_itt_hd.itt_req_date = itt.itt_req_date and rownum = 1) as authCode,
	      itt.ITT_REQ_NO as eiitNumber,
	      to_char(itt.ITT_REQ_DATE,'DDMONYY') as eiitDate,
	      (SELECT itt_req_code FROM cst_itt_hd where cst_itt_hd.itt_req_no = itt.itt_req_no  and cst_itt_hd.itt_req_date = itt.itt_req_date and rownum = 1) as ittReqCode,
	      (SELECT TR_NO FROM cst_itt_hd where cst_itt_hd.itt_req_no = itt.itt_req_no  and cst_itt_hd.itt_req_date = itt.itt_req_date and rownum = 1) as trNumber,	     
	      DECODE(fun_check_man_itt( itt.itt_req_no, itt.itt_req_date, null, 'ITT', 'Y'),'A','Accepted','R','Rejected','P','In progress','W','Pending','E','Error') eStatus,
	      DECODE(fun_check_man_itt( itt.itt_req_no, itt.itt_req_date, null, 'ITT', 'Y'),'A','Accepted','P','In progress','W','Pending',null) checkSubmFlg,	      
		    (SELECT ack_rec_type FROM cst_ack, cst_itt_hd  where cst_itt_hd.accs_ind = 'N' and cst_itt_hd.itt_req_code = cst_ack.itt_req_code
	                      and cst_ack.itt_req_code = itt.itt_req_code and cst_itt_hd.itt_req_no = itt.itt_req_no  
	                      and cst_itt_hd.itt_req_date = itt.itt_req_date and cst_ack.ack_rec_type = 'ITL' and rownum = 1) as itlStatus,
	        (SELECT ack_rec_type FROM cst_ack, cst_itt_hd  where cst_itt_hd.accs_ind = 'N' and cst_itt_hd.itt_req_code = cst_ack.itt_req_code
	                      and cst_ack.itt_req_code = itt.itt_req_code and cst_itt_hd.itt_req_no = itt.itt_req_no  
	                      and cst_itt_hd.itt_req_date = itt.itt_req_date and cst_ack.ack_rec_type = 'ITN' and rownum = 1) as itnStatus,
	        (SELECT ack_rec_type FROM cst_ack, cst_itt_hd  where cst_itt_hd.accs_ind = 'N' and cst_itt_hd.itt_req_code = cst_ack.itt_req_code
	                      and cst_ack.itt_req_code = itt.itt_req_code and cst_itt_hd.itt_req_no = itt.itt_req_no  
	                      and cst_itt_hd.itt_req_date = itt.itt_req_date and cst_ack.ack_rec_type = 'ITD' and rownum = 1) as itdStatus,
	        (SELECT ack_rec_type FROM cst_ack, cst_itt_hd  where cst_itt_hd.accs_ind = 'N' and cst_itt_hd.itt_req_code = cst_ack.itt_req_code
	                      and cst_ack.itt_req_code = itt.itt_req_code and cst_itt_hd.itt_req_no = itt.itt_req_no  
	                      and cst_itt_hd.itt_req_date = itt.itt_req_date and cst_ack.ack_rec_type = 'ITC' and rownum = 1) as itcStatus, 
	        (SELECT ack_rec_type FROM cst_ack, cst_itt_hd  where cst_itt_hd.accs_ind = 'N' and cst_itt_hd.itt_req_code = cst_ack.itt_req_code
	                      and cst_ack.itt_req_code = itt.itt_req_code and cst_itt_hd.itt_req_no = itt.itt_req_no  
	                      and cst_itt_hd.itt_req_date = itt.itt_req_date and cst_ack.ack_rec_type = 'ITA' and rownum = 1) as itaStatus,                                
	      case when A.ULD_KEY is null then 
	      (SELECT trim(V.ref_no) FROM V_CST_IMP_CC_CODE V WHERE V.FLT_KEY = B.FLT_KEY AND V.FLT_DATE = B.FLT_DATE AND V.AWB_NO = B.AWB_NO
	              AND NVL(V.HAWB_NO, '000000000000000000') = '000000000000000000' AND ROWNUM = 1) end 
	      AS ittCtmRefNo,
	      case when A.ULD_KEY is null then 
	      (SELECT trim(V.CC_CODE) FROM V_CST_IMP_CC_CODE V
	            WHERE V.FLT_KEY = B.FLT_KEY AND V.FLT_DATE = B.FLT_DATE AND V.AWB_NO = A.AWB_NO
	            AND NVL(V.HAWB_NO, '000000000000000000') = '000000000000000000' AND ROWNUM = 1) 
	      end AS ccCode,
	      awb.catalog  as catalog,        
      	  awb.carr_code  as carrCode,
      	  awb.dest as destination,
      	  awb.orig as origin,
      	  awb.content as content,
      	  B.FLT_KEY as fltKey,
      	  TO_CHAR(B.FLT_DATE,'DDMONYY') AS fltDate ,
      	  B.FLT_TYPE as fltType,
      	  case when awb.AWB_TYPE = 'E' then 'Y'
      	  	   when (A.status ='VOID' OR A.status = 'POSTED') then 'Y' else 'N'end as ctStatus,
      	  shp.MANIFEST_PCS manPcs,
 		  shp.MANIFEST_WT manWt 
		FROM IMP_TRM_HD A
		left join AWB awb on awb.awb_no = a.awb_no AND awb.awb_date = a.awb_date
		left join IMP_TRM_DTL B on B.TRM_NO = A.TRM_NO and B.awb_no = a.awb_no AND B.awb_date = a.awb_date  
		left JOIN cst_itt_dtl itt  ON B.AWB_DATE = itt.AWB_DATE AND B.AWB_NO = itt.AWB_NO AND B.FLT_KEY = itt.FLT_KEY AND B.FLT_DATE = itt.FLT_DATE  and  B.TRM_NO = itt.CT_NO	
		left JOIN imp_car_shp shp  ON B.AWB_DATE = shp.AWB_DATE AND B.AWB_NO = shp.AWB_NO AND B.FLT_KEY = shp.FLT_KEY AND B.FLT_DATE = shp.FLT_DATE 
		WHERE   1=1 
		<dynamic>		
		    <isNotEmpty prepend="AND" property="trmDate">
		    	A.TRM_DATE BETWEEN TO_DATE(#trmDate#, 'DDMONYY') AND TO_DATE (#trmDateTo#, 'DDMONYY') + 1
		    </isNotEmpty>			
			<isNotEmpty prepend="AND" property="transferCarrier">
				 TRANSF_CARR = #transferCarrier# 
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="recevCarrier">
				 RECD_CARR = #recevCarrier# 
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="status">
				 STATUS = #status# 
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="recevCarrierHandler">
				 RECD_CARR_HANDR = #recevCarrierHandler# 
			</isNotEmpty>			
			<isNotEmpty prepend="AND" property="loginCarrier">
				 TRANSF_CARR = #loginCarrier# 
			</isNotEmpty>					
		</dynamic>
		) L where 1=1
		<dynamic>		                                 
		 <isNotEmpty property="eiitStatus">
		    <isEqual property="eiitStatus" prepend="AND" compareValue="Accepted">		
				L.eStatus = #eiitStatus# and L.itaStatus is null and L.itcStatus is null
					and L.itlStatus is null and L.itdStatus is null and L.itnStatus is null 
			</isEqual>
			<isEqual property="eiitStatus" prepend="AND" compareValue="Rejected">		
				L.eStatus = #eiitStatus#
			</isEqual>
			<isEqual property="eiitStatus" prepend="AND" compareValue="In progress">		
				L.eStatus = #eiitStatus#
			</isEqual>
			<isEqual property="eiitStatus" prepend="AND" compareValue="Pending">		
				L.eStatus = #eiitStatus#
			</isEqual>
			<isEqual property="eiitStatus" prepend="AND" compareValue="Approved">		
				L.itaStatus is not null
			</isEqual>			
			<isEqual property="eiitStatus" prepend="AND" compareValue="Canceled">		
				L.itcStatus is not null
			</isEqual>
			<isEqual property="eiitStatus" prepend="AND" compareValue="Time Out">		
				L.itlStatus is not null and L.itcStatus is null
			</isEqual>
			<isEqual property="eiitStatus" prepend="AND" compareValue="Disapproved">		
				L.itdStatus is not null
			</isEqual>
			<isEqual property="eiitStatus" prepend="AND" compareValue="Denied">		
				L.itnStatus is not null
			</isEqual>
		</isNotEmpty>				
	  </dynamic>
		Order by  L.trmNo
	</select>

	<select id="get_enquire_trm_list_uld" parameterClass="cargo.cms.imprt.bo.TrmBO" resultClass="cargo.cms.imprt.bo.TrmBO" >
		select L.* from ( 
			SELECT  
			A.ULD_KEY AS uldKey,
			A.AWB_NO AS awbNo,
			to_char(A.AWB_DATE,'DDMONYY') AS awbDate,			  
			SUBSTR(TRIM(A.AWB_NO),1,3)||'-'||SUBSTR(TRIM(A.AWB_NO),4) awbNoDisp,
			A.TRM_NO AS trmNo, 
			TO_CHAR(TRM_DATE,'DDMONYY HH24:MI') AS trmDate, 
			'' AS trmHour,
			'' AS trmMin,  
			TRANSF_CARR AS transferCarrier, 
			RECD_CARR AS recevCarrier, 
			RECD_CARR_HANDR AS recevCarrierHandler, 
			DECODE(A.ULD_KEY,NULL,'N','Y') AS uldExists,
			STATUS AS status,
		    TO_CHAR(POST_DATE,'DDMONYY HH24:MI') AS postDate, 
			'' AS postTrmHour,
			'' AS postTrmMin,  
		    TO_CHAR(VOID_DATE,'DDMONYY HH24:MI') AS voidDate ,
		    DECODE(RETRV_DATE,NULL,'N','Y') AS retrvInd ,
			A.Source source,
			to_char(A.LAST_PRNT_DATE,'DDMONYY HH24:MI') lastPrntDate,
			case when A.ULD_KEY is not null then      
	        case when (
	          SELECT nvl(COUNT(DISTINCT hawb_no), 0) FROM edi_fhl hd, edi_fhl_hawb dtl WHERE hd.tr_no = dtl.tr_no AND (hd.awb_no,hd.awb_date) in 
	          (select AWB_NO,AWB_DATE from IMP_TRM_HD where TRM_NO = A.TRM_NO) ) > 0 then 'Y' else 'N' end
	        when  A.ULD_KEY is null then 
	        case when (SELECT nvl(COUNT(DISTINCT hawb_no), 0) FROM edi_fhl hd, edi_fhl_hawb dtl WHERE hd.tr_no = dtl.tr_no AND hd.awb_no = a.awb_no AND hd.awb_date = a.awb_date) > 0
	           then 'Y' else 'N' end
	        end as  consolInd,      
	        case when A.ULD_KEY is not null then      
	        case when 
	           (SELECT nvl(COUNT(DISTINCT awb_no), 0) FROM CST_DC_DTL dc WHERE  (dc.awb_no,dc.awb_date) in 
	                    (select AWB_NO,AWB_DATE from IMP_TRM_HD where TRM_NO = A.TRM_NO) ) > 0 then 'Y' else 'N' end
	        when  A.ULD_KEY is null then 
	        case when (SELECT nvl(COUNT(DISTINCT awb_no), 0) FROM CST_DC_DTL dc WHERE  dc.awb_no = a.awb_no AND dc.awb_date = a.awb_date) > 0
	           then 'Y' else 'N' end
	        end as  dcInd,
	      A.pcs as ctPcs,
	      A.wt as ctWt,
	      itt.ITT_AUTH_CODE as authCode,
	      itt.ITT_REQ_NO as eiitNumber,
	      to_char(itt.ITT_REQ_DATE,'DDMONYY') as eiitDate,
	      itt.ITT_REQ_CODE as ittReqCode,
	      itt.TR_NO as trNumber,
	      itt.DOC_LINE_NO as docLineNo,
	      DECODE(fun_check_man_itt( itt.itt_req_no, itt.itt_req_date, null, 'ITT', 'Y'),'A','Accepted','R','Rejected','P','In progress','W','Pending','R','Rejected','E','Error') eStatus,
	      DECODE(fun_check_man_itt( itt.itt_req_no, itt.itt_req_date, null, 'ITT', 'Y'),'A','Accepted','P','In progress','W','Pending',null) checkSubmFlg,
        (SELECT ack_rec_type FROM cst_ack, cst_itt_hd  where cst_itt_hd.accs_ind = 'N' and cst_itt_hd.itt_req_code = cst_ack.itt_req_code
                      and cst_ack.itt_req_code = itt.itt_req_code and cst_itt_hd.itt_req_no = itt.itt_req_no  
                      and cst_itt_hd.itt_req_date = itt.itt_req_date and cst_ack.ack_rec_type = 'ITL' and rownum = 1) as itlStatus,
        (SELECT ack_rec_type FROM cst_ack, cst_itt_hd  where cst_itt_hd.accs_ind = 'N' and cst_itt_hd.itt_req_code = cst_ack.itt_req_code
                      and cst_ack.itt_req_code = itt.itt_req_code and cst_itt_hd.itt_req_no = itt.itt_req_no  
                      and cst_itt_hd.itt_req_date = itt.itt_req_date and cst_ack.ack_rec_type = 'ITN' and rownum = 1) as itnStatus,
        (SELECT ack_rec_type FROM cst_ack, cst_itt_hd  where cst_itt_hd.accs_ind = 'N' and cst_itt_hd.itt_req_code = cst_ack.itt_req_code
                      and cst_ack.itt_req_code = itt.itt_req_code and cst_itt_hd.itt_req_no = itt.itt_req_no  
                      and cst_itt_hd.itt_req_date = itt.itt_req_date and cst_ack.ack_rec_type = 'ITD' and rownum = 1) as itdStatus,
        (SELECT ack_rec_type FROM cst_ack, cst_itt_hd  where cst_itt_hd.accs_ind = 'N' and cst_itt_hd.itt_req_code = cst_ack.itt_req_code
                      and cst_ack.itt_req_code = itt.itt_req_code and cst_itt_hd.itt_req_no = itt.itt_req_no  
                      and cst_itt_hd.itt_req_date = itt.itt_req_date and cst_ack.ack_rec_type = 'ITC' and rownum = 1) as itcStatus, 
        (SELECT ack_rec_type FROM cst_ack, cst_itt_hd  where cst_itt_hd.accs_ind = 'N' and cst_itt_hd.itt_req_code = cst_ack.itt_req_code
                      and cst_ack.itt_req_code = itt.itt_req_code and cst_itt_hd.itt_req_no = itt.itt_req_no  
                      and cst_itt_hd.itt_req_date = itt.itt_req_date and cst_ack.ack_rec_type = 'ITA' and rownum = 1) as itaStatus, 
	      case when A.ULD_KEY is null then 
	      (SELECT trim(V.ref_no) FROM V_CST_IMP_CC_CODE V WHERE V.FLT_KEY = B.FLT_KEY AND V.FLT_DATE = B.FLT_DATE AND V.AWB_NO = B.AWB_NO
	              AND NVL(V.HAWB_NO, '000000000000000000') = '000000000000000000' AND ROWNUM = 1) end 
	      AS ittCtmRefNo,
	      case when A.ULD_KEY is null then 
	      (SELECT trim(V.CC_CODE) FROM V_CST_IMP_CC_CODE V
	            WHERE V.FLT_KEY = B.FLT_KEY AND V.FLT_DATE = B.FLT_DATE AND V.AWB_NO = A.AWB_NO
	            AND NVL(V.HAWB_NO, '000000000000000000') = '000000000000000000' AND ROWNUM = 1) 
	      end AS ccCode,
	      awb.catalog  as catalog,        
      	  awb.carr_code  as carrCode,
      	  awb.dest as destination,
      	  B.FLT_KEY as fltKey,
      	  TO_CHAR(B.FLT_DATE,'DDMONYY') AS fltDate ,
      	  B.FLT_TYPE as fltType,
      	  case when awb.AWB_TYPE = 'E' then 'Y'
      	  	   when (A.status ='VOID' OR A.status = 'POSTED') then 'Y' else 'N'end as ctStatus,
         awb.orig as origin,
      	 awb.content as content ,
      	  shp.MANIFEST_PCS manPcs,
 		  shp.MANIFEST_WT manWt 
		FROM IMP_TRM_HD A
		 left join AWB awb on awb.awb_no = a.awb_no AND awb.awb_date = a.awb_date
		 left join IMP_TRM_DTL B on B.TRM_NO = A.TRM_NO and B.awb_no = a.awb_no AND B.awb_date = a.awb_date  
		 left JOIN cst_itt_dtl itt  ON B.AWB_DATE = itt.AWB_DATE AND B.AWB_NO = itt.AWB_NO AND B.FLT_KEY = itt.FLT_KEY AND B.FLT_DATE = itt.FLT_DATE  and  B.TRM_NO = itt.CT_NO	
		 left JOIN imp_car_shp shp  ON B.AWB_DATE = shp.AWB_DATE AND B.AWB_NO = shp.AWB_NO AND B.FLT_KEY = shp.FLT_KEY AND B.FLT_DATE = shp.FLT_DATE 
		WHERE A.ULD_KEY = #uldKey#
		<dynamic>
			<isNotEmpty prepend="AND" property="transferCarrier">
				TRANSF_CARR = #transferCarrier#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="recevCarrier">
				RECD_CARR = #recevCarrier#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="status">
				STATUS = #status#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="recevCarrierHandler">
				RECD_CARR_HANDR = #recevCarrierHandler#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="loginCarrier">
				 TRANSF_CARR = #loginCarrier# 
			</isNotEmpty>
		</dynamic>
		 ) L where 1=1
    	<dynamic>
		 <isNotEmpty property="eiitStatus">
		    <isEqual property="eiitStatus" prepend="AND" compareValue="Accepted">		
				L.eStatus = #eiitStatus# and L.itaStatus is null and L.itcStatus is null
					and L.itlStatus is null and L.itdStatus is null and L.itnStatus is null 
			</isEqual>
			<isEqual property="eiitStatus" prepend="AND" compareValue="Rejected">		
				L.eStatus = #eiitStatus#
			</isEqual>
			<isEqual property="eiitStatus" prepend="AND" compareValue="In progress">		
				L.eStatus = #eiitStatus#
			</isEqual>
			<isEqual property="eiitStatus" prepend="AND" compareValue="Pending">		
				L.eStatus = #eiitStatus#
			</isEqual>
			<isEqual property="eiitStatus" prepend="AND" compareValue="Approved">		
				L.itaStatus is not null
			</isEqual>			
			<isEqual property="eiitStatus" prepend="AND" compareValue="Canceled">		
				L.itcStatus is not null
			</isEqual>
			<isEqual property="eiitStatus" prepend="AND" compareValue="Time Out">		
				L.itlStatus is not null and L.itcStatus is null
			</isEqual>
			<isEqual property="eiitStatus" prepend="AND" compareValue="Disapproved">		
				L.itdStatus is not null
			</isEqual>
			<isEqual property="eiitStatus" prepend="AND" compareValue="Denied">		
				L.itnStatus is not null
			</isEqual>
		 </isNotEmpty>
		</dynamic>
		Order by  L.trmNo
	</select>

	<select id="get_enquire_trm_list_trmno" parameterClass="cargo.cms.imprt.bo.TrmBO" resultClass="cargo.cms.imprt.bo.TrmBO" >
		select L.* from (
     	SELECT
		A.ULD_KEY AS uldKey,
		A.RMK remark,
		A.TRM_NO AS trmNo,
	    a.AWB_NO AS awbNo,
		to_char(A.AWB_DATE,'DDMONYY') AS awbDate,
		a.PCS as pcs,
		a.WT as wt,
		SUBSTR(TRIM(a.AWB_NO),1,3)||'-'||SUBSTR(TRIM(a.AWB_NO),4) awbNoDisp,
		TO_CHAR(A.TRM_DATE,'DDMONYY HH24:MI') AS trmDate,
		'' AS trmHour,
		'' AS trmMin,
		A.TRANSF_CARR AS transferCarrier,
		A.RECD_CARR AS recevCarrier,
		A.RECD_CARR_HANDR AS recevCarrierHandler,
		DECODE(A.ULD_KEY,NULL,'N','Y') AS uldExists,
		A.STATUS AS status,
		TO_CHAR(A.POST_DATE,'DDMONYY HH24:MI') AS postDate,
		'' AS postTrmHour,
		'' AS postTrmMin,
		TO_CHAR(A.VOID_DATE,'DDMONYY HH24:MI') AS voidDate ,
		DECODE(A.RETRV_DATE,NULL,'N','Y') AS retrvInd ,
		A.Source source,
		to_char(A.LAST_PRNT_DATE,'DDMONYY HH24:MI') lastPrntDate,
	   (select orig||'/'||dest from awb  where awb_no=a.awb_no	and awb_date=a.awb_Date) dest,
	   (select content from awb where awb_no  = a.awb_no and awb_date = a.awb_date) remark1,
       case when A.ULD_KEY is not null then      
	        case when (
	          SELECT nvl(COUNT(DISTINCT hawb_no), 0) FROM edi_fhl hd, edi_fhl_hawb dtl WHERE hd.tr_no = dtl.tr_no AND (hd.awb_no,hd.awb_date) in 
	          (select AWB_NO,AWB_DATE from IMP_TRM_HD where TRM_NO = A.TRM_NO) ) > 0 then 'Y' else 'N' end
	        when  A.ULD_KEY is null then 
	        case when (SELECT nvl(COUNT(DISTINCT hawb_no), 0) FROM edi_fhl hd, edi_fhl_hawb dtl WHERE hd.tr_no = dtl.tr_no AND hd.awb_no = a.awb_no AND hd.awb_date = a.awb_date) > 0
	           then 'Y' else 'N' end
	        end as  consolInd,      
	        case when A.ULD_KEY is not null then      
	        case when 
	           (SELECT nvl(COUNT(DISTINCT awb_no), 0) FROM CST_DC_DTL dc WHERE  (dc.awb_no,dc.awb_date) in 
	                    (select AWB_NO,AWB_DATE from IMP_TRM_HD where TRM_NO = A.TRM_NO) ) > 0 then 'Y' else 'N' end
	        when  A.ULD_KEY is null then 
	        case when (SELECT nvl(COUNT(DISTINCT awb_no), 0) FROM CST_DC_DTL dc WHERE  dc.awb_no = a.awb_no AND dc.awb_date = a.awb_date) > 0
	           then 'Y' else 'N' end
	        end as  dcInd,
	      A.pcs as ctPcs,
	      A.wt as ctWt,
	      itt.ITT_AUTH_CODE as authCode,
	      itt.ITT_REQ_NO as eiitNumber,
	      to_char(itt.ITT_REQ_DATE,'DDMONYY') as eiitDate,
	      itt.ITT_REQ_CODE as ittReqCode,
	      itt.TR_NO as trNumber,
	      itt.DOC_LINE_NO as docLineNo,
	      DECODE(fun_check_man_itt( itt.itt_req_no, itt.itt_req_date, null, 'ITT', 'Y'),'A','Accepted','R','Rejected','P','In progress','W','Pending','R','Rejected','E','Error') eStatus,
	      DECODE(fun_check_man_itt( itt.itt_req_no, itt.itt_req_date, null, 'ITT', 'Y'),'A','Accepted','P','In progress','W','Pending',null) checkSubmFlg,
        (SELECT ack_rec_type FROM cst_ack, cst_itt_hd  where cst_itt_hd.accs_ind = 'N' and cst_itt_hd.itt_req_code = cst_ack.itt_req_code
                      and cst_ack.itt_req_code = itt.itt_req_code and cst_itt_hd.itt_req_no = itt.itt_req_no  
                      and cst_itt_hd.itt_req_date = itt.itt_req_date and cst_ack.ack_rec_type = 'ITL' and rownum = 1) as itlStatus,
        (SELECT ack_rec_type FROM cst_ack, cst_itt_hd  where cst_itt_hd.accs_ind = 'N' and cst_itt_hd.itt_req_code = cst_ack.itt_req_code
                      and cst_ack.itt_req_code = itt.itt_req_code and cst_itt_hd.itt_req_no = itt.itt_req_no  
                      and cst_itt_hd.itt_req_date = itt.itt_req_date and cst_ack.ack_rec_type = 'ITN' and rownum = 1) as itnStatus,
        (SELECT ack_rec_type FROM cst_ack, cst_itt_hd  where cst_itt_hd.accs_ind = 'N' and cst_itt_hd.itt_req_code = cst_ack.itt_req_code
                      and cst_ack.itt_req_code = itt.itt_req_code and cst_itt_hd.itt_req_no = itt.itt_req_no  
                      and cst_itt_hd.itt_req_date = itt.itt_req_date and cst_ack.ack_rec_type = 'ITD' and rownum = 1) as itdStatus,
        (SELECT ack_rec_type FROM cst_ack, cst_itt_hd  where cst_itt_hd.accs_ind = 'N' and cst_itt_hd.itt_req_code = cst_ack.itt_req_code
                      and cst_ack.itt_req_code = itt.itt_req_code and cst_itt_hd.itt_req_no = itt.itt_req_no  
                      and cst_itt_hd.itt_req_date = itt.itt_req_date and cst_ack.ack_rec_type = 'ITC' and rownum = 1) as itcStatus, 
        (SELECT ack_rec_type FROM cst_ack, cst_itt_hd  where cst_itt_hd.accs_ind = 'N' and cst_itt_hd.itt_req_code = cst_ack.itt_req_code
                      and cst_ack.itt_req_code = itt.itt_req_code and cst_itt_hd.itt_req_no = itt.itt_req_no  
                      and cst_itt_hd.itt_req_date = itt.itt_req_date and cst_ack.ack_rec_type = 'ITA' and rownum = 1) as itaStatus, 
	      case when A.ULD_KEY is null then 
	      (SELECT trim(V.ref_no) FROM V_CST_IMP_CC_CODE V WHERE V.FLT_KEY = B.FLT_KEY AND V.FLT_DATE = B.FLT_DATE AND V.AWB_NO = B.AWB_NO
	              AND NVL(V.HAWB_NO, '000000000000000000') = '000000000000000000' AND ROWNUM = 1) end 
	      AS ittCtmRefNo,
	      case when A.ULD_KEY is null then 
	      (SELECT trim(V.CC_CODE) FROM V_CST_IMP_CC_CODE V
	            WHERE V.FLT_KEY = B.FLT_KEY AND V.FLT_DATE = B.FLT_DATE AND V.AWB_NO = A.AWB_NO
	            AND NVL(V.HAWB_NO, '000000000000000000') = '000000000000000000' AND ROWNUM = 1) 
	      end AS ccCode,
	      awb.catalog  as catalog,        
      	  awb.carr_code  as carrCode,
      	  awb.dest as destination,
      	  B.FLT_KEY as fltKey,
      	  TO_CHAR(B.FLT_DATE,'DDMONYY') AS fltDate ,
      	  B.FLT_TYPE as fltType,
      	  case when awb.AWB_TYPE = 'E' then 'Y'
      	  	   when (A.status ='VOID' OR A.status = 'POSTED') then 'Y' else 'N'end as ctStatus,
          awb.orig as origin,
      	 awb.content as content ,
      	 shp.MANIFEST_PCS manPcs,
 		 shp.MANIFEST_WT manWt 
	FROM IMP_TRM_HD A
  	left join IMP_TRM_DTL B on B.TRM_NO = A.TRM_NO and B.awb_no = a.awb_no AND B.awb_date = a.awb_date  
  	left join AWB awb on awb.awb_no = A.awb_no AND awb.awb_date = A.awb_date
	left JOIN cst_itt_dtl itt  ON B.AWB_DATE = itt.AWB_DATE AND B.AWB_NO = itt.AWB_NO AND B.FLT_KEY = itt.FLT_KEY AND B.FLT_DATE = itt.FLT_DATE  and  B.TRM_NO = itt.CT_NO	
	left JOIN imp_car_shp shp  ON B.AWB_DATE = shp.AWB_DATE AND B.AWB_NO = shp.AWB_NO AND B.FLT_KEY = shp.FLT_KEY AND B.FLT_DATE = shp.FLT_DATE 
	WHERE A.TRM_NO = #trmNo#
  <dynamic>
		  <isNotEmpty prepend="AND" property="transferCarrier">
				TRANSF_CARR = #transferCarrier#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="recevCarrier">
				RECD_CARR = #recevCarrier#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="status">
				STATUS = #status#
			</isNotEmpty>		
			<isNotEmpty prepend="AND" property="recevCarrierHandler">
				RECD_CARR_HANDR = #recevCarrierHandler#
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="loginCarrier">
				 A.TRANSF_CARR = #loginCarrier# 
			</isNotEmpty>	
		</dynamic>
    	) L where 1=1
   		<dynamic>
			<isNotEmpty property="eiitStatus">
		    <isEqual property="eiitStatus" prepend="AND" compareValue="Accepted">		
				L.eStatus = #eiitStatus# and L.itaStatus is null and L.itcStatus is null
					and L.itlStatus is null and L.itdStatus is null and L.itnStatus is null 
			</isEqual>
			<isEqual property="eiitStatus" prepend="AND" compareValue="Rejected">		
				L.eStatus = #eiitStatus#
			</isEqual>
			<isEqual property="eiitStatus" prepend="AND" compareValue="In progress">		
				L.eStatus = #eiitStatus#
			</isEqual>
			<isEqual property="eiitStatus" prepend="AND" compareValue="Pending">		
				L.eStatus = #eiitStatus#
			</isEqual>
			<isEqual property="eiitStatus" prepend="AND" compareValue="Approved">		
				L.itaStatus is not null
			</isEqual>			
			<isEqual property="eiitStatus" prepend="AND" compareValue="Canceled">		
				L.itcStatus is not null
			</isEqual>
			<isEqual property="eiitStatus" prepend="AND" compareValue="Time Out">		
				L.itlStatus is not null and L.itcStatus is null
			</isEqual>
			<isEqual property="eiitStatus" prepend="AND" compareValue="Disapproved">		
				L.itdStatus is not null
			</isEqual>
			<isEqual property="eiitStatus" prepend="AND" compareValue="Denied">		
				L.itnStatus is not null
			</isEqual>
		 </isNotEmpty>	
		</dynamic>
		Order by  L.trmNo
	</select>

<select id="get_trm_detail_enquiry" parameterClass="cargo.cms.imprt.bo.TrmBO" 			resultClass="cargo.cms.imprt.bo.TrmBO">
	SELECT TRM_NO AS trmNo,
	   DOC_LINE_NO AS doclineNo,
	   AWB_NO AS awbNo,
	   SUBSTR(TRIM(AWB_NO),1,3)||'-'||SUBSTR(TRIM(AWB_NO),4) awbNoDisp,
	   to_char(AWB_Date,'DDMONYY') AS awbDate,
	   CATALOG AS catalog,
	   DEST AS awbDestination,
	   FLT_KEY AS flightKey,
	   TO_CHAR(FLT_DATE,'DDMONYY') AS flightDate,
	   PCS AS transferPcs,
	   WT AS transferWt,
	   RMK AS remark,
	   NVL(PCS,0) AS locationPcs,
	   NVL(WT,0)  AS locationWt
	   FROM IMP_TRM_DTL
	   WHERE TRM_NO =  #trmNo#
	   </select>
<!-- ##################### ENQUIRE CT BY MAYANK END ############################# -->

  <select id="getCTHOListforCrossTerminal" parameterClass="cargo.cms.imprt.bo.TrmBO" resultClass="cargo.cms.imprt.bo.TrmBO" >
  select HO_NO hoNo, RECD_CARR_HANDR recevCarrierHandler,
		to_char(EST_PICK_DATE_TIME,'DDMONYY HH24:MI') estPickDateTime , 
    	nvl(RTRV_IND,'N') rtrvInd, IMG_SESSION_ID transactionId,
    	(select CODE_DESC from MAST_CODE_DTL where CODE_TYPE =
		'RECD_CARR_HANDLER' and CODE = RECD_CARR_HANDR  )  recevCarrierHandlerShow
    	from CT_HO t
    	where  t.close_yn = 'N'
          <isNotEmpty property="recevCarrierHandler">
            and  t.RECD_CARR_HANDR = #recevCarrierHandler#   
          </isNotEmpty>
          <isNotEmpty property="hoNo">
            and t.HO_NO = #hoNo# 
          </isNotEmpty>
           <isNotEmpty property="uldKey">
            and exists (select 1 from imp_trm_hd where ULD_KEY = #uldKey# and ho_no = t.ho_no)     
          </isNotEmpty>        
					 order by ho_no     
  </select>
  
  <select id="getCTInfoListforCrossTerminal" parameterClass="cargo.cms.imprt.bo.TrmBO" resultClass="cargo.cms.imprt.bo.TrmBO" >
      select 
	  tab1.TRM_NO trmNo,
	  to_char(tab1.TRM_DATE,'DDMONYY') trmDate, 
	  tab1.TRM_TYPE trmType, 
	  tab1.TRANSF_CARR transferCarrier, 
      tab1.RECD_CARR recevCarrier, 
      tab1.trm_type transferType,
      tab1.ULD_KEY uldKey,
      tab2.AWB_NO awbNo, SUBSTR(tab2.AWB_NO,1,3)||'-'||SUBSTR(tab2.AWB_NO,4) as awbNoDisp , 
      to_char(tab2.AWB_DATE,'DDMONYY') awbDate, 
      nvl(tab2.PCS,0) transferPcs, 
      TO_CHAR(NVL(tab2.WT,0),'999999999.99') transferWt,
      tab1.RECD_CARR_HANDR recevCarrierHandler, 
      decode(tab1.RETRV_DATE,null,'N','Y') rtrvInd  ,
      flt_Key flightKey, to_char(flt_date,'DDMONYY') flightDate, 
      flt_type flightType,
      NVL(AWB.house_flg,'N') houseFlag
      FROM IMP_TRM_HD TAB1, IMP_TRM_DTL TAB2, AWB  
      where tab1.TRM_NO = tab2.TRM_NO AND tab2.AWB_NO = AWB.awb_no AND tab2.awb_date = AWB.awb_date and tab1.HO_NO = #hoNo# and tab1.status = 'ISSUED'
 </select>

  <select id="getCTInfoListforCrossTerminal_rtv_Y" parameterClass="cargo.cms.imprt.bo.TrmBO" resultClass="cargo.cms.imprt.bo.TrmBO" >
      select tab1.TRM_NO trmNo, to_char(tab1.TRM_DATE,'DDMONYY') trmDate, tab1.TRM_TYPE trmType, tab1.TRANSF_CARR transferCarrier, 
      tab1.RECD_CARR recevCarrier, tab1.trm_type transferType,
      tab1.ULD_KEY uldKey, tab1.AWB_NO awbNo, SUBSTR(tab1.AWB_NO,1,3)||'-'||SUBSTR(tab1.AWB_NO,4) as awbNoDisp , to_char(tab1.AWB_DATE,'DDMONYY') awbDate, 
      (SELECT SUM(NVL(TAB2.PCS,0)) FROM IMP_trm_dtl TAB2 WHERE tab2.TRM_NO = tab1.TRM_NO) transferPcs,
      (select sum(NVL(tab2.WT,'999999999.99')) from IMP_trm_dtl tab2 where tab2.TRM_NO = tab1.trm_no) transferWt, 
      tab1.RECD_CARR_HANDR recevCarrierHandler, decode(tab1.RETRV_DATE,null,'N','Y') rtrvInd 
      from IMP_trm_hd tab1  
      where tab1.HO_NO = #hoNo#
 </select>
 
 	<select id="getHdCTInfoListforDeleteCrossTerminal"
		parameterClass="cargo.cms.imprt.bo.TrmBO" resultClass="cargo.cms.imprt.bo.TrmBO">
		select tab1.TRM_NO trmNo, to_char(tab1.TRM_DATE,'DDMONYY') trmDate,
		tab1.TRM_TYPE trmType, tab1.TRANSF_CARR transferCarrier,
		tab1.RECD_CARR recevCarrier, tab1.trm_type transferType,
		tab1.ULD_KEY uldKey, tab1.AWB_NO awbNo,
		SUBSTR(tab1.AWB_NO,1,3)||'-'||SUBSTR(tab1.AWB_NO,4) as awbNoDisp ,
		to_char(tab1.AWB_DATE,'DDMONYY') awbDate,
		nvl(tab1.PCS,0) transferPcs, nvl(tab1.WT,0) transferWt, tab1.RECD_CARR_HANDR
		recevCarrierHandler, decode(tab1.RETRV_DATE,null,'N','Y') rtrvInd
		from IMP_trm_hd tab1
		where tab1.HO_NO = #hoNo# and tab1.status = 'RETRIEVED'  
 </select>

<select id="getDtlCTInfoListforDeleteCrossTerminal"
	parameterClass="cargo.cms.imprt.bo.TrmBO" resultClass="cargo.cms.imprt.bo.TrmBO">
	select tab1.TRM_NO trmNo, to_char(tab1.TRM_DATE,'DDMONYY') trmDate,
	tab1.TRM_TYPE trmType, tab1.TRANSF_CARR transferCarrier,
	tab1.RECD_CARR recevCarrier, tab1.trm_type transferType,
	tab1.ULD_KEY uldKey, tab2.AWB_NO awbNo,
	SUBSTR(tab2.AWB_NO,1,3)||'-'||SUBSTR(tab2.AWB_NO,4) as awbNoDisp ,
	to_char(tab2.AWB_DATE,'DDMONYY') awbDate,
	nvl(tab2.PCS,0) transferPcs, nvl(tab2.WT,0) transferWt, tab1.RECD_CARR_HANDR
	recevCarrierHandler, decode(tab1.RETRV_DATE,null,'N','Y') rtrvInd ,
	flt_Key flightKey, to_char(flt_date,'DDMONYY') flightDate, flt_type
	flightType
	from IMP_trm_hd tab1, IMP_trm_DTL tab2
	where tab1.TRM_NO = tab2.TRM_NO and tab1.TRM_NO = #trmNo# and tab1.status =
	'RETRIEVED'
	<isNotEmpty property="uldKey">
		and tab1.ULD_KEY = #uldKey#   
      </isNotEmpty>
	<isNotEmpty property="awbNo">
		<isNotEmpty property="awbDate">
			and tab2.AWB_NO = #awbNo# and tab2.AWB_date = #awbDate# 
      		</isNotEmpty>
	</isNotEmpty>
</select>

 
  <select id="getAccetTransferCargoCTInfoListforCrossTerminal" parameterClass="cargo.cms.imprt.bo.TrmBO" resultClass="cargo.cms.imprt.bo.TrmBO" >
      select tab1.TRM_NO trmNo, to_char(tab1.TRM_DATE,'DDMONYY') trmDate, tab1.TRM_TYPE trmType, tab1.TRANSF_CARR transferCarrier, 
      tab1.RECD_CARR recevCarrier, tab1.trm_type transferType,
      tab1.ULD_KEY uldKey, tab2.AWB_NO awbNo, SUBSTR(tab2.AWB_NO,1,3)||'-'||SUBSTR(tab2.AWB_NO,4) as awbNoDisp , to_char(tab2.AWB_DATE,'DDMONYY') awbDate, 
      nvl(tab2.PCS,0) transferPcs, nvl(tab2.WT,0) transferWt, tab1.RECD_CARR_HANDR recevCarrierHandler, decode(tab1.RETRV_DATE,null,'N','Y') rtrvInd  ,
      flt_Key flightKey, to_char(flt_date,'DDMONYY') flightDate, flt_type flightType
      from IMP_trm_hd tab1, IMP_trm_DTL tab2  
      where tab1.TRM_NO = tab2.TRM_NO and tab1.HO_NO = #hoNo# and tab1.status = 'RETRIEVED'  
 </select>
 
 <select id="getUldKeyArrayforHO" parameterClass="java.lang.String" resultClass="java.lang.String">
		select STRAGG(STRINGDELIM(T.uldKey, ',')) uldKeyArray from (select distinct uld_key uldKey from awb_inventory where trm_no in ( select distinct trm_no from IMP_TRM_HD where HO_NO =#hoNo# ))T
</select>

 <update id="sqlQueryUpdateHandOverPrintInd" parameterClass="java.lang.String">
 	update ct_ho
 	set prnt_ind = 'Y'
 	where ho_no = #hoNo#
</update>

<update id="UpdateHandOverPrint_ENDORSED" parameterClass="cargo.cms.imprt.bo.TrmBO">
	update CT_HO set PRINT_ENDORSED_BY = #endorseUser#, PRINT_ENDORSED_DATE = sysdate where ho_no = #hoNo#
</update>

<select id="getPrintCountForHO" parameterClass="java.lang.String" resultClass="java.lang.Integer">
 	select count(1) from ct_ho where NVL(prnt_ind,'N') = 'Y' and ho_no = #hoNo#
</select>

<select id="checkSplTransferHOLocn" parameterClass="map" resultClass="java.lang.Integer" >
	   select  count(1) 	
	  	from awb_inventory where  
	  			AWB_NO = #awbNo# and AWB_DATE = to_date(#awbDate#,'DDMONYY') and  trm_no = #trmNo#
                                and loc_code not in (select code from mast_code_dtl where code_type = 'HO_LOCN_TRANSFER')
	</select>

	<select id="getAWBInvInfoListforCrossTerminal" parameterClass="cargo.cms.imprt.bo.TrmBO" resultClass="cargo.cms.imprt.bo.TrmAwbRelocationBO" >
    select 
      'Y' sel,
      TRM_NO trmNo, 
      AWB_NO awbNo, 
      SUBSTR(AWB_NO,1,3)||'-'||SUBSTR(AWB_NO,4) as awbNoDisp , 
      to_char(AWB_DATE,'DDMONYY') awbDate, 
      loc_code warehouseLocation, 
      lsp_no lspNo, 
      ULD_KEY uldKey, 
      locn_pcs locPieces, 
      TO_CHAR(NVL(locn_wt,0),'999999999.99') locWeight ,
      locn_pcs transferPieces, 
      TO_CHAR(NVL(locn_wt,0),'999999999.99') transferWeight ,
      locn_pcs oldLocPieces,
      TO_CHAR(NVL(locn_wt,0),'999999999.99') oldLocWeight ,
      SEQ_NO seqNo, 
      CARR_CODE carrCode,  
      #rtrvInd# selFlag, 
      flt_key fltKey, 
      to_char(flt_date,'DDMONYY') fltDate,
      flt_Type fltType
    from awb_inventory 
    where AWB_NO = #awbNo# and AWB_DATE = to_date(#awbDate#,'DDMONYY')  
    AND TRM_NO IS NULL and RTN_NO IS NULL AND NOT (flt_key is not null and flt_key = 'E')
    <isNotEmpty property="flightKey">
            and  nvl(flt_key,'*') = nvl(#flightKey#,'*')
     </isNotEmpty>
     <isNotEmpty property="flightDate">
            and  nvl(flt_date,'01DEC99') = nvl(#flightDate#,'01DEC99')
     </isNotEmpty>
    <isNotEmpty property="uldKey">
            and  ULD_KEY = #uldKey#
     </isNotEmpty>
     <isNotEmpty property="lspNo">
            and  lsp_no = #lspNo#
     </isNotEmpty>
  </select>    

  <select id="getTRMAWBInv_CrossHO" parameterClass="map" resultClass="cargo.cms.imprt.bo.TrmBO" >
	   select 	awb_no awbNo, TO_CHAR(awb_date,'DDMONYY') awbDate, carr_code carrCode, loc_code warehouseLocation, 
	  				locn_pcs locationPcs, locn_wt locationWt, uld_key uldKey, lsp_no lspNo,  ppk_ind ppkInd, seq_no seqNo,
				flt_Key flightKey, flt_date flightDate, flt_type flightType
	  	from awb_inventory where  
	  			AWB_NO = #awbNo# and AWB_DATE = to_date(#awbDate#,'DDMONYY') and  trm_no = #trmNo#
	</select>
	 
	 <select id="getAWBInv_COUNT_CrossHO" parameterClass="map" resultClass="java.lang.String" >
		select seq_no seqNo
		from awb_inventory where  
		AWB_NO = #awbNo# and AWB_DATE = to_date(#awbDate#,'DDMONYY')
		and loc_code = #warehouseLocation# and NVL(uld_key,'*') = NVL(#uldKey#,'*') 
		and NVL(flt_Key,'*') = NVL(#flightKey#,'*') and NVL(flt_date,'31AUG2000') = nvl(#flightDate#,'31AUG2000') 
		and  NVL(lsp_no,'*') = NVL(#lspNo#,'*') and trm_no is null
 	</select>
  
  
  <update id="upd_awbInvtory_CrossHO" parameterClass="map">
		UPDATE awb_inventory SET
				locn_pcs = locn_pcs + #locationPcs#,
				locn_wt = locn_wt + #locationWt#,
				lm_user_id = #lmUser#,
				lm_date = sysdate
		WHERE seq_no = #seqNo#
</update>

<insert id="ins_awbInvtory_CrossHO" parameterClass="map">
insert into awb_inventory(awb_no, awb_date,flt_key ,flt_date,flt_type, carr_code, loc_code, locn_pcs, locn_wt, lsp_no, strg_date, ppk_ind,
				 cr_user_id, cr_date, lm_user_id, lm_date,seq_no,trm_no)
values (#awbNo#, TO_DATE(#awbDate#,'DDMONYY'), #flightKey#,#flightDate#,#flightType#,#recevCarrier#, #warehouseLocation#, NVL(#locationPcs#,0), NVL(#locationWt#,0), 
	         #lspNo#,sysdate, 'B', #lmUser#, sysdate, #lmUser#, sysdate,AWB_INV_SEQ.NEXTVAL,#trmNo# )  
</insert>
  
<insert id="ins_awbInvtory_UnpostCT" parameterClass="map">
insert into awb_inventory(awb_no, awb_date,flt_key ,flt_date,flt_type, carr_code, loc_code, locn_pcs, locn_wt, lsp_no,uld_key, strg_date, ppk_ind,
				 cr_user_id, cr_date, lm_user_id, lm_date,seq_no)
values (#awbNo#, TO_DATE(#awbDate#,'DDMONYY'), #flightKey#,#flightDate#,#flightType#,#recevCarrier#, #warehouseLocation#, NVL(#locationPcs#,0), NVL(#locationWt#,0), 
	         #lspNo#,#uldKey#,sysdate, 'B', #lmUser#, sysdate, #lmUser#, sysdate,#seqNo# )  
</insert>
  
  <select id="getAWBInvInfoDataCrossTerminal_BeforeInsertUpdate" parameterClass="cargo.cms.imprt.bo.TrmAwbRelocationBO" resultClass="cargo.cms.imprt.bo.TrmAwbRelocationBO" >
    select seq_no oldSeqNo
    from awb_inventory where  trm_no = #trmNo# and ULD_KEY = nvl(#uldKey#,uld_key) and lsp_no = nvl(#lspNo#,lsp_no) and AWB_NO = #awbNo# and AWB_DATE = to_date(#awbDate#,'DDMONYY')
  </select>   
  
   <update id="upd_trm_awbInvtory_forexist_Record" parameterClass="cargo.cms.imprt.bo.TrmAwbRelocationBO">
		UPDATE awb_inventory SET
			PCS = #transferPieces#,
			WT = #transferWeight#,
			lm_user_id = #lmUser#,
			lm_date = sysdate
		WHERE SEQ_NO = #oldSeqNo#
	</update>
	
	 <update id="upd_trm_awbInvtory" parameterClass="cargo.cms.imprt.bo.TrmAwbRelocationBO">
		UPDATE awb_inventory SET
			PCS = #transferPieces#,
			WT = #transferWeight#,
			lm_user_id = #lmUser#,
			lm_date = sysdate
		WHERE SEQ_NO = #seqNo#
	</update>
	
	<update id="upd_trm_awbInvtory_rem_pc" parameterClass="cargo.cms.imprt.bo.TrmAwbRelocationBO">
		UPDATE awb_inventory SET
			locn_pcs = locn_pcs- #transferPieces#,
			locn_wt =locn_wt - #transferWeight#,
			lm_user_id = #lmUser#,
			lm_date = sysdate
		WHERE SEQ_NO = #seqNo#
	</update>
  
  <delete id="delete_trm_awbInvtory" parameterClass="cargo.cms.imprt.bo.TrmAwbRelocationBO">
		 delete from awb_inventory where awb_no = #awbNo# and awb_date = #awbDate# and TRM_NO = #trmNo#
  </delete>
  
  <delete id="delete_trm_Invtory" parameterClass="cargo.cms.imprt.bo.TrmBO">
		 delete from awb_inventory where awb_no = #awbNo# and awb_date = #awbDate# and TRM_NO = #trmNo#
  </delete>
  
    <update id="UPADTE_ULD_Invetory_Empty_For_Trm" parameterClass="java.lang.String">
		 update uld_inventory set EMPTY_FLG = 'Y',REF_TR_TYPE='CT',REF_TR_EVENT='POCT',TR_TYPE='POCT', HANDLING_MODE = '' where uld_key = #uldKey# 
  </update>
  
   <update id="UPADTE_ULD_Invetory_Empty_For_Trm_AWB" parameterClass="cargo.cms.imprt.bo.TrmBO">
		 update uld_inventory t set EMPTY_FLG = 'Y',REF_TR_TYPE='CT',REF_TR_EVENT='POCT',TR_TYPE='POCT', HANDLING_MODE = ''
					where uld_key in (select uld_key from awb_inventory where awb_no = #awbNo# and awb_date = #awbDate# and TRM_NO = #trmNo#) 
					and not exists (select null from awb_inventory where uld_key = t.uld_key and
					nvl(TRM_NO,'*') != #trmNo#)
  </update>
	
	<select id="getAWBInv_COUNT_CrossTerminal" parameterClass="cargo.cms.imprt.bo.TrmAwbRelocationBO" resultClass="java.lang.String" >
  	 SELECT SEQ_NO seqNo
		 FROM AWB_INVENTORY
	     WHERE AWB_NO = #awbNo#
	     AND AWB_DATE = #awbDate#
	     AND NVL(FLT_KEY,'*')  = NVL(#fltKey#,'*')
	     AND  NVL(FLT_DATE,SYSDATE) = NVL(decode(#fltDate#,'',SYSDATE,#fltDate#),SYSDATE)
	     AND NVL(LOC_CODE,'*') = NVL(#warehouseLocation#,'*')
	     AND NVL(LSP_NO,0)   = NVL(#lspNo#,0)
	     AND NVL(ULD_KEY,'*')  = NVL(#uldKey#,'*')
	     AND NVL(TRM_NO,'*')  = NVL(#trmNo#,'*')
  </select>  
	
	 <insert id="ins_trm_header_awbInvtory" parameterClass="cargo.cms.imprt.bo.TrmAwbRelocationBO">
		insert into awb_inventory(awb_no, awb_date,flt_key ,flt_date,flt_type, carr_code, loc_code, locn_pcs, locn_wt, 
		uld_key, lsp_no, strg_date, ppk_ind, cr_user_id, cr_date, lm_user_id, lm_date,seq_no,trm_no)
	        values (#awbNo#, TO_DATE(#awbDate#,'DDMONYY'), #fltKey#,#fltDate#,decode(#fltKey#,null,null,#fltType#),#carrCode#, #warehouseLocation#, 
	        	NVL(#transferPieces#,0), NVL(#transferWeight#,0), 
	        #uldKey#, #lspNo#,sysdate, 'B', #lmUser#, sysdate, #lmUser#, sysdate,#newSeqNo#,#trmNo# )  
	</insert>
	
	<select  id="get_trm_awbinv_seq_no" parameterClass="cargo.cms.imprt.bo.TrmAwbRelocationBO" resultClass="java.lang.String">
    	 SELECT SEQ_NO seqNo
		 FROM AWB_INVENTORY
	     WHERE AWB_NO = #awbNo#
	     AND AWB_DATE = #awbDate#
	     AND NVL(FLT_KEY,'*')  = NVL(#fltKey#,'*')
	     AND  NVL(FLT_DATE,SYSDATE) = NVL(decode(#fltDate#,'',SYSDATE,#fltDate#),SYSDATE)
	     AND NVL(LOC_CODE,'*') = NVL(#warehouseLocation#,'*')
	     AND NVL(LSP_NO,0)   = NVL(#lspNo#,0)
	     AND NVL(ULD_KEY,'*')  = NVL(#uldKey#,'*')
	     AND NVL(TRM_NO,'*')  = NVL(#trmNo#,'*')
	</select>
	
	<update id="upd_trm_header_awbInvtory" parameterClass="cargo.cms.imprt.bo.TrmAwbRelocationBO">
		UPDATE awb_inventory SET
			locn_pcs = NVL(locn_pcs,0)+NVL(#transferPieces#,0),
			locn_wt = NVL(locn_wt,0) +NVL(#transferWeight#,0),
			lm_user_id = #lmUser#,
			lm_date = sysdate
		WHERE SEQ_NO = #seqNo#
	</update>
	
	<select  id="getTrmAwbInvLocationPcWt" parameterClass="java.lang.String" resultClass="java.lang.String">
    	 SELECT NVL(LOCN_PCS,0)||'/'||NVL(LOCN_WT,0) 
		 FROM AWB_INVENTORY
	     WHERE SEQ_NO = #seqNo#
	</select>
	
	<delete id="deleteTrmAwbInv" parameterClass="java.lang.String">
		DELETE FROM awb_inventory WHERE SEQ_NO = #seqNo#
	</delete>
	
	<update id="updateTrmAwbInv" parameterClass="java.lang.String">
		UPDATE AWB_INVENTORY 
		SET TRM_NO = NULL
		WHERE SEQ_NO = #seqNo#
	</update>
	
	
	<update id="retrive_ind_ctho" parameterClass="cargo.cms.imprt.bo.TrmBO">
		update ct_ho set 
			RTRV_IND = 'Y',
			LM_DATE = SYSDATE,
			LM_USER_ID = #lmUser#
		where HO_NO = #hoNo#
	</update>
	
	<update id="revert_hoNo_From_trmHd" parameterClass="cargo.cms.imprt.bo.TrmBO">
		update IMP_TRM_HD set 
			 RETRV_DATE = null,
			 RETRV_USER = null,
			 HO_NO = null,
			 STATUS = 'ISSUED',
			 REJECT_REASON = #remark#,
			 REJECT_IND = 'Y',
			LM_DATE = SYSDATE,
			LM_USER_ID = #lmUser#
		where trm_NO = #trmNo#
	</update>
	
		<update id="close_ind_ctho" parameterClass="cargo.cms.imprt.bo.TrmBO">
		update ct_ho set 
			CLOSE_YN = 'Y',
			LM_DATE = SYSDATE,
			LM_USER_ID = #lmUser#
		where HO_NO = #hoNo#
	</update>

<!-- ###################### ADDED BY Mayank ON 04-07-2011 FOR Trasnsfer Control Checklist  Starts Here ########################### -->

<select id="fetchIndBoundTsnstCntrlFltList" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstBO" resultClass="cargo.cms.imprt.bo.TsnstCntrlChklstBO" >
<![CDATA[
select DDT.tr_No ddtTrNo, FLTOPR.FLT_KEY fltKey, 
 decode(FLTOPR.FLT_KEY,null,'',PKG_COMMON.get_flt_carr(FLTOPR.FLT_KEY)) fltCarr, REPLACE(FLTOPR.FLT_KEY, PKG_COMMON.get_flt_carr(FLTOPR.FLT_KEY), '') fltNo,
TO_CHAR(FLTOPR.SCH_DATE,'DDMONYY') fltDate ,  NVL(pkg_common.get_flt_eta(FLTOPR.FLT_KEY,FLTOPR.SCH_DATE,'A','DD') ,pkg_common.get_flt_ata(FLTOPR.FLT_KEY,FLTOPR.SCH_DATE,'A','DD')) eta, FLTOPR.flt_type fltType,
          NVL(DDTULD.ULDTT,0) uldTt,  NVL(DDTULD.ULDIF,0) uldIf,  NVL(DDTULD.ULDQT,0) uldQt ,NVL(DDTULD.ULDLD,0) uldLd ,
          NVL(DDTSHP.SHPTT,0) shpTt,  NVL(DDTSHP.SHPIF,0) shpIf,  NVL(DDTSHP.SHPQT,0) shpQt,
           FUN_GET_ALLOTMENTS_EXP(FLTOPR.FLT_KEY,  to_char(FLTOPR.SCH_DATE,'DDMONYY'), '','ETA_CHANGED_MIN') as etaChengedMin,
            nvl(DDT.msg_yn,'N') ddtInd, nvl(DDT.FInal_VER_IND,'N') finalVerInd,  decode(FLT.DDT_FINALISE_DATE,null,'N','Y')  finalizedInd, 
           DDT.LM_USER_ID lmUserId, to_char(DDT.LM_DATE,'DDMONYY HH24:MI')  lmDateTime , nvl(DDT.NIL_DDT,'N') ddtNilInd     
from FLT_OPR  FLTOPR
join FLT_OPR_EVENTS FLT on FLT.FLT_KEY = FLTOPR.FLT_KEY and FLT.SCH_DATE = FLTOPR.SCH_DATE and FLT.FLT_TYPE = FLTOPR.FLT_TYPE
left join (select FLT_KEY, FLT_DATE, NVL(SUM(uldTT),'0') ULDTT,  NVL(SUM(uldIF),'0') ULDIF,  NVL(SUM(uldQT),'0') ULDQT,NVL(SUM(uldLd),'0') ULDLD 
          	from
            (select FLT_KEY, FLT_DATE, ULD_KEY,
              case when SUM(DECODE(TRF_TYPE, 'TT',1,0)) = 0 then 0 else 1 end uldTt, 
              case when SUM(DECODE(TRF_TYPE, 'IF',1,0)) = 0 then 0 else 1 end uldIf, 
              case when SUM(DECODE(TRF_TYPE, 'QT',1,0)) = 0 then 0 else 1 end uldQt,
              case when SUM(DECODE(TRF_TYPE, 'LD',1,0)) = 0 then 0 else 1 end uldLd    
              from V_UNFIN_DDT_DTL 
              where CNTG_FLT_KEY is not null
                  group by FLT_KEY, FLT_DATE, ULD_KEY
                  ) ULDDDT 
                  where ULDDDT.FLT_DATE = #fltDate#
              group by FLT_KEY, FLT_DATE) DDTULD on FLT.FLT_KEY = DDTULD.FLT_KEY and FLT.SCH_DATE = DDTULD.FLT_DATE 
			left join (select FLT_KEY, FLT_DATE, NVL(SUM(SHPTT),'0') SHPTT,  NVL(SUM(SHPIF),'0') SHPIF,  NVL(SUM(SHPQT),'0') SHPQT 
          	from
            (select FLT_KEY, FLT_DATE, AWB_NO, AWB_DATE,
              case when SUM(DECODE(SHP_TRF_TYPE, 'TT',1,0)) = 0 then 0 else 1 end shpTt, 
              case when SUM(DECODE(SHP_TRF_TYPE, 'IF',1,0)) = 0 then 0 else 1 end shpIf, 
              case when SUM(DECODE(SHP_TRF_TYPE, 'QT',1,0)) = 0 then 0 else 1 end shpQt    
              from V_UNFIN_DDT_DTL 
              where CNTG_FLT_KEY is null
                  group by FLT_KEY, FLT_DATE, AWB_NO, AWB_DATE
                  ) SHPDDT 
                  where SHPDDT.FLT_DATE = #fltDate#
              group by FLT_KEY, FLT_DATE) DDTSHP on FLT.FLT_KEY = DDTSHP.FLT_KEY and FLT.SCH_DATE = DDTSHP.FLT_DATE             
left join (select DDT_MSG.MSG_YN, DDT_MSG.FLT_KEY, DDT_MSG.FLT_DATE, DDT_MSG.DDT_STATUS, DDT_MSG.final_ver_ind, NIL_DDT,
			to_CHAR(DDT_MSG.BASELINE_ETA,'DDMONYY HH24MI') AS  BASELINE_ETA , DDT_MSG.LM_USER_ID , DDT_MSG.LM_DATE  ,  DDT_MSG.tr_no            
            from  DDT_MSG  where FLT_DATE = #fltDate# ) DDT on DDT.FLT_KEY = FLTOPR.FLT_KEY and DDT.FLT_DATE = FLTOPR.sch_DATE  and DDT.DDT_STATUS='P' 
where (exists (select null from V_UNFIN_DDT_DTL where FLT_KEY = FLT.FLT_KEY and FLT_DATE = FLT.SCH_DATE)
    OR exists (select null from EDI_FFM_MSG where FFM_STATUS = 'P' and FLT_KEY = FLT.FLT_KEY and FLT_DATE = FLT.SCH_DATE))
AND FLTOPR.flt_type ='A'
AND FLTOPR.sch_date = #fltDate# and 
 FLTOPR.SCH_TIME between #fromEta# and #toEta#
]]>
<isNotEmpty property="loginCarrier">
<![CDATA[    
   AND (FLTOPR.CARR_CODE = #loginCarrier#
   OR FLTOPR.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE= #loginCarrier#))
]]>
</isNotEmpty>
<isEqual property="recWtransitChk" compareValue="Y">
	and (uldTt&gt;0 OR uldIf&gt;0 OR uldQt&gt;0 OR shpTt&gt;0 OR shpIf&gt;0 OR shpQt&gt;0) 
</isEqual>
<isNotEmpty property="srchFltKey" >
	and FLTOPR.flt_Key = #srchFltKey# 
</isNotEmpty>
order by FLTOPR.SCH_DATE, FLTOPR.SCH_TIME
</select>

<select id="fetchOutBoundTsnstCntrlFltList" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstBO" resultClass="cargo.cms.imprt.bo.TsnstCntrlChklstBO" >
<![CDATA[
select FLTOPR.FLT_KEY fltkey , 
		decode(FLTOPR.FLT_KEY,null,'',PKG_COMMON.get_flt_carr(FLTOPR.FLT_KEY)) fltCarr, REPLACE(FLTOPR.FLT_KEY, PKG_COMMON.get_flt_carr(FLTOPR.FLT_KEY), '') fltNo,
		TO_CHAR(FLTOPR.SCH_DATE,'DDMONYY') fltDate      ,  pkg_common.get_flt_final_ata_eta_sta(FLTOPR.FLT_KEY,FLTOPR.SCH_DATE,'D','DD') eta, FLTOPR.flt_type fltType,
		NVL(DDTULD.ULDTT,0) uldTt,  NVL(DDTULD.ULDIF,0) uldIf,  NVL(DDTULD.ULDQT,0) uldQt ,NVL(DDTULD.uldLD,0) uldLd ,
        NVL(DDTSHP.SHPTT,0) shpTt,  NVL(DDTSHP.SHPIF,0) shpIf,  NVL(DDTSHP.SHPQT,0) shpQt,
        FUN_GET_ALLOTMENTS(FLTOPR.FLT_KEY,  to_char(FLTOPR.SCH_DATE,'DDMONYY'),'ETD_CHANGED_MIN') etaChengedMin,
        to_number(NVL(DDTULD.ULDTT,0)) +  to_number(NVL(DDTULD.ULDIF,0)) ttlIfTt
from FLT_OPR FLTOPR

join FLT_OPR_EVENTS FLT on FLT.FLT_KEY = FLTOPR.FLT_KEY and FLT.SCH_DATE = FLTOPR.SCH_DATE and FLT.flt_type = FLTOPR.flt_type

left join (select SHP_CNTG_FLT_KEY, SHP_CNTG_FLT_DATE, NVL(SUM(SHPTT),'0') SHPTT,  NVL(SUM(SHPIF),'0') SHPIF,  NVL(SUM(SHPQT),'0') SHPQT 
          from
            (select SHP_CNTG_FLT_KEY, SHP_CNTG_FLT_DATE, AWB_NO, AWB_DATE,
              case when SUM(DECODE(SHP_TRF_TYPE, 'TT',1,0)) = 0 then 0 else 1 end shpTt, 
              case when SUM(DECODE(SHP_TRF_TYPE, 'IF',1,0)) = 0 then 0 else 1 end shpIf, 
              case when SUM(DECODE(SHP_TRF_TYPE, 'QT',1,0)) = 0 then 0 else 1 end shpQt    
              from V_UNFIN_DDT_DTL 
              where CNTG_FLT_KEY is null
                  group by SHP_CNTG_FLT_KEY, SHP_CNTG_FLT_DATE, AWB_NO, AWB_DATE
                  ) SHPDDT group by SHP_CNTG_FLT_KEY, SHP_CNTG_FLT_DATE) DDTSHP 
      on FLT.FLT_KEY = DDTSHP.SHP_CNTG_FLT_KEY and FLT.SCH_DATE = DDTSHP.SHP_CNTG_FLT_DATE    

left join (select CNTG_FLT_KEY, CNTG_FLT_DATE, NVL(SUM(uldTT),'0') ULDTT,  NVL(SUM(uldIF),'0') ULDIF,  NVL(SUM(uldQT),'0') ULDQT ,  NVL(SUM(uldLd),'0') ULDLD
          	from
            (select CNTG_FLT_KEY, CNTG_FLT_DATE, ULD_KEY,
              case when SUM(DECODE(TRF_TYPE, 'TT',1,0)) = 0 then 0 else 1 end uldTt, 
              case when SUM(DECODE(TRF_TYPE, 'IF',1,0)) = 0 then 0 else 1 end uldIf, 
              case when SUM(DECODE(TRF_TYPE, 'QT',1,0)) = 0 then 0 else 1 end uldQt,
              case when SUM(DECODE(TRF_TYPE, 'LD',1,0)) = 0 then 0 else 1 end uldLd    
              from V_UNFIN_DDT_DTL 
              where CNTG_FLT_KEY is not null
                  group by CNTG_FLT_KEY, CNTG_FLT_DATE, ULD_KEY
                  ) ULDDDT 
                  where ULDDDT.CNTG_FLT_DATE = #fltDate#
              group by CNTG_FLT_KEY, CNTG_FLT_DATE) DDTULD 
  on FLT.FLT_KEY = DDTULD.CNTG_FLT_KEY and FLT.SCH_DATE = DDTULD.CNTG_FLT_DATE 
where  exists (select null from V_UNFIN_DDT_DTL where SHP_CNTG_FLT_KEY = FLT.FLT_KEY and SHP_CNTG_FLT_DATE = FLT.SCH_DATE)
AND FLTOPR.FLT_TYPE ='D'
and  FLTOPR.SCH_DATE = #fltDate# and 
FLTOPR.SCH_TIME between #fromEta# and #toEta#
]]>
<isNotEmpty property="loginCarrier">
<![CDATA[    
    AND (FLTOPR.CARR_CODE = #loginCarrier#
    OR FLTOPR.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE= #loginCarrier#))
]]>
</isNotEmpty>
<isNotEmpty property="srchFltKey" >
	and FLTOPR.flt_Key = #srchFltKey# 
</isNotEmpty>
order by FLTOPR.SCH_DATE, FLTOPR.SCH_TIME

</select>

<select id="fetch_Tarmac_Allotment" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstBO"  resultClass="java.lang.String">   	
<![CDATA[ 
	select (decode(sum(allot.qty_Q7 ), null, '',0,'', sum(allot.qty_Q7) ||'Q7')
               || decode(sum(allot.qty_Q6 ), null, '',0,'',','||  sum(allot.qty_Q6 ) ||'Q6')
               || decode(sum(allot.qty_X8 ), null, '',0,'', ','|| sum(allot.qty_X8 ) ||'X8')
               || decode( sum(allot.QTY_PEB ), null, '',0,'', ','|| sum(allot.QTY_PEB ) ||'PEB')
               || decode(sum(allot.QTY_H2 ), null, '',0,'', ','|| sum(allot.QTY_H2 ) ||'H2')
               || decode(sum(allot.QTY_A2 ), null, '',0,'', ','|| sum(allot.QTY_A2 ) ||'A2')
               || decode(sum(allot.QTY_LDC ), null, '',0,'', ','|| sum(allot.QTY_LDC ) ||'LDC')
               || decode(sum(allot.QTY_ZA ), null, '',0,'', ','|| sum(allot.QTY_ZA ) ||'ZA' )
               ||  decode( sum(allot.QTY_ZB ), null, '',0,'', ','|| sum(allot.QTY_ZB ) ||'ZB' )
               ||  decode( sum(allot.QTY_ZC ), null, '',0,'', ','|| sum(allot.QTY_ZC ) ||'ZC' )
               ||  decode( sum(allot.QTY_PGA ), null, '',0,'', ','|| sum(allot.QTY_PGA ) ||'PGA' )
               ||  decode( sum(allot.QTY_H3 ), null, '',0,'', ','|| sum(allot.QTY_H3 ) ||'H3' )
               ||  decode( sum(allot.QTY_BULK ), null, '',0,'', ','|| sum(allot.QTY_BULK ) ||'BULK' )
               ||  decode( sum(allot.QTY_ALF ), null, '',0,'', ','|| sum(allot.QTY_ALF ) ||'ALF' )
               ||  decode( sum(allot.QTY_PLA ), null, '',0,'', ','|| sum(allot.QTY_PLA ) ||'PLA' )
               ||  decode( sum(allot.QTY_Q7D ), null, '',0,'', ','|| sum(allot.QTY_Q7D ) ||'Q7D' )
               ||  decode( sum(allot.QTY_W2 ), null, '',0,'', ','|| sum(allot.QTY_W2 ) ||'W2' )
               ||  decode( sum(allot.QTY_PAG ), null, '',0,'', ','|| sum(allot.QTY_PAG ) ||'PAG' )
               ||  decode( count(allot.QTY_H5 ), 0, '', ','||'H5' )) as ttlTarmacAllot     
               from edi_elp_allot allot ,  edi_elp_port port, edi_elp_msg msg
                where port.doc_line_no= allot.port_doc_line_no  and msg.TR_NO=port.tr_no  and allot.tr_no= msg.tr_no and allot.CGO_TYPE in('Tarmac')           
                and msg.flt_key=#fltKey# and msg.flt_date=TO_DATE(#fltDate#, 'DDMONYY') 
                and port.port in  (select off_point from flt_opr_seg fltSeg where  fltSeg.flt_key = #fltKey# and fltSeg.sch_date = #fltDate#
                							  and  fltSeg.brd_point='HKG'  and fltSeg.flt_type = 'D'  )
                and msg.tr_no in(
                SELECT b.trNO FROM (SELECT rownum r, a.trNo  FROM (select elpmsg.tr_no as trNo from  edi_elp_msg elpmsg  
                						where elpmsg.flt_key=#fltKey# and elpmsg.flt_date=TO_DATE(#fltDate#, 'DDMONYY')  and 
                elpmsg.VER_NO= (select * from (select max(elpmsg.VER_NO) as versionNo from flt_opr opr 
                                                    LEFT OUTER JOIN edi_elp_msg elpmsg  ON elpmsg.flt_key=opr.flt_key and 
                                                    	to_char(elpmsg.flt_date, 'DDMONYY')=to_char(opr.sch_date, 'DDMONYY')   
                                                        where opr.flt_key=#fltKey# and opr.sch_date=TO_DATE(#fltDate#, 'DDMONYY') 
                                                        and opr.flt_type = 'D' and trf_ind = 'Y'  order by elpmsg.VER_NO))  )a
                WHERE rownum <=1) b WHERE r=1)
                   ]]>
   	</select>
   	

<select id="fetchIndBoundTsnstCntrlAWBList" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstBO" resultClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
<![CDATA[ 
	WITH  MAIN_TAB AS (SELECT ffmshp.awb_no awb_no,
    ffmshp.awb_Date awb_Date,
    ffmshp.ORG ORG,
    ffmshp.DEST DEST,
    NVL(ffmshp.MAN_PCS,0) PCS,
    NVL(ffmshp.MAN_WT,0) WT,
    ffmMSG.flt_key flt_key ,
    ffmMSG.flt_Date flt_Date,
    ffmULD.ULD_KEY ULD_KEY,
    ffmMSG.TR_No tr_NO ,
    ffmMSG.BRD_POINT brdPoint
  FROM EDI_FFM_MSG ffmMSG
  LEFT JOIN EDI_FFM_ULD ffmULD
  ON ffmMSG.TR_NO = ffmULD.TR_NO
  LEFT JOIN edi_ffm_shp ffmshp
  ON ffmMSG.TR_NO         = ffmshp.TR_NO
  AND ffmULD.Doc_line_no  = ffmshp.uDoc_line_no
  WHERE ffmMSG.FFM_STATUS = 'P'
  AND ffmshp.dest        != 'HKG' and ffmMSG.flt_key      = #fltKey# AND ffmMSG.flt_Date         = #fltDate#
  UNION
  SELECT resdshp.awb_no awb_no,
    resdshp.awb_Date awb_Date,
    resdshp.ORIG ORG,
    resdshp.DEST DEST,
    COUNT(NVL(resdULD.CONTAINER_NO,'BULK')) PCS,
    SUM(NVL(resdULD.TAG_WT,0)) WT,
    resdMSG.flt_key flt_key ,
    resdMSG.flt_Date flt_Date,
    NVL(resdULD.CONTAINER_NO,'BULK') ULD_KEY,
    '' tr_NO,
    resdMSG.DEPT_PORT brdPoint
  FROM EDI_RESDIT_HD resdMSG
  LEFT JOIN EDI_RESDIT_AWB_DTL resdshp
  ON resdshp.TR_NO = resdMSG.TR_NO
  LEFT JOIN EDI_RESDIT_TAG_DTL resdULD
  ON resdULD.TR_AWB_NO = resdshp.TR_AWB_NO
  WHERE 1              = 1 and resdMSG.flt_key      = #fltKey# AND resdMSG.flt_Date         = #fltDate#
  GROUP BY resdshp.awb_no,
    resdshp.awb_Date,
    resdshp.ORIG,
    resdshp.DEST,
    resdMSG.flt_key,
    resdMSG.flt_Date,
    NVL(resdULD.CONTAINER_NO,'BULK') ,
    resdMSG.DEPT_PORT),
	RESDIT_DATA AS
	  (SELECT COUNT(1) resdCount ,
	    COUNT(NVL(resdULD.CONTAINER_NO,'BULK')) PCS,
	    SUM(NVL(resdULD.TAG_WT,0)) WT,
	    resdMSG.flt_key,
	    resdMSG.flt_Date,
	    NVL(resdULD.CONTAINER_NO,'BULK') CONTAINER_NO
	  FROM EDI_RESDIT_HD resdMSG
	  LEFT JOIN EDI_RESDIT_AWB_DTL resdshp
	  ON resdshp.TR_NO = resdMSG.TR_NO
	  LEFT JOIN EDI_RESDIT_TAG_DTL resdULD
	  ON resdULD.TR_AWB_NO = resdshp.TR_AWB_NO   
	  where resdMSG.flt_key      = #fltKey# AND resdMSG.flt_Date         = #fltDate#
	  GROUP BY resdMSG.flt_key,
	    resdMSG.flt_Date,
	    resdULD.CONTAINER_NO
	  ),
	FFM_DATA AS (SELECT COUNT(1) ffmCount ,
	    NVL(SUM(ffmshp.MAN_PCS),0) PCS,
	    NVL(SUM(ffmshp.MAN_WT),0) WT,
	    ffmMSG.flt_key,
	    ffmMSG.flt_Date,
	    ffmULD.ULD_KEY
	  FROM EDI_FFM_MSG ffmMSG,
	    EDI_FFM_ULD ffmULD ,
	    edi_ffm_shp ffmshp
	  WHERE ffmMSG.FFM_STATUS = 'P' AND ffmMSG.flt_key      = #fltKey# AND ffmMSG.flt_Date         = #fltDate#
	  AND ffmMSG.TR_NO        = ffmULD.TR_NO
	  AND ffmMSG.TR_NO        = ffmshp.TR_NO
	  AND ffmULD.Doc_line_no  = ffmshp.uDoc_line_no
	  GROUP BY ffmMSG.flt_key,
	    ffmMSG.flt_Date,
	    ffmULD.ULD_KEY
	  ),
	DDT_INFO AS (SELECT ddtView.awb_no awb_no,
	    TO_CHAR(ddtView.awb_DATE,'DDMONYY') awb_DATE,
	    ddtView.flt_key flt_key ,
	    TO_CHAR(ddtView.flt_Date,'DDMONYY') flt_Date,
	    ddtView.TR_NO TR_NO,
	    ddtView.sdoc_line_no Sdoc_line_no,
	    ddtView.uDOC_LINE_NO UDOC_LINE_NO,
	    ddtView.DOC_LINE_NO DOC_LINE_NO,
	    ddtView.ULD_KEY ULD_KEY ,
	    ddtView.CNTG_FLT_KEY CNTG_FLT_KEY,
	    TO_CHAR(ddtView.CNTG_FLT_DATE,'DDMONYY') CNTG_FLT_DATE,
	    ddtView.TRF_TYPE TRF_TYPE,
	    ddtView.BRK_BULK BRK_BULK,
	    TO_CHAR(ddtView.BASELINE_ETA,'DDMONYY') BASELINE_ETA,
	    NVL( (TO_CHAR(TO_DATE(TO_CHAR(ddtView.BASELINE_ETA,'DDMONYY HH24MI'),'DDMONYY HH24MI') - TO_DATE(TO_CHAR(FLT.SCH_DATE,'DDMONYY')
	    || ' '
	    || TO_CHAR(NVL(FLT.EST_TIME, FLT.SCH_TIME),'0000') ,'DDMONYY HH24MI'))) * 24 , 0 ) AS etaChangedHrs,
	    ddtView.Acton_code_1 Acton_code_1,
	    ddtView.Acton_code_2 Acton_code_2,
	    ddtView.UNLDG_PT ,
	    ddtView.SHP_UNLDG_PT,
	    ddtView.SHP_TRF_PC ,
	    ddtView.SHP_TRF_WT,
	    ddtView.ULD_BRD_POINT,
	    ddtView.SHP_CNTG_FLT_KEY SHP_CNTG_FLT_KEY,
	    TO_CHAR(ddtView.SHP_CNTG_FLT_DATE,'DDMONYY') SHP_CNTG_FLT_DATE,
	    ddtView.SHP_TRF_TYPE SHP_TRF_TYPE,
	    ddtView.SHP_BRK_BULK SHP_BRK_BULK ,
	    ddtView.MANUAL_IND MANUAL_IND,
	    ddtView.SHP_TYPE
	  FROM V_UNFIN_DDT_DTL ddtView
	  JOIN FLT_OPR FLT
	  ON FLT.FLT_KEY          = ddtView.FLT_KEY
	  AND FLT.SCH_DATE        = ddtView.FLT_DATE
	  AND FLT.FLT_type            = 'A' and  FLT.flt_key      = #fltKey# AND FLT.sch_Date         = #fltDate#
	  )
	select nvl(ffm.awb_no,ddt.awb_no) awbNo,
	SUBSTR(TRIM(nvl(ffm.awb_no,ddt.awb_no)),1,3)||'-'||SUBSTR(TRIM(nvl(ffm.awb_no,ddt.awb_no)),4) awbNoDisp,
	TO_CHAR(nvl(ffm.awb_Date,ddt.awb_Date),'DDMONYY') awbDate, 
	(select decode(count(1),0,'N','Y') from awb where awb_no=ffm.awb_no and awb_date=ffm.awb_date and awb_closed_yn='Y') as awbClosedyn,
	nvl(nvl(ffm.ULD_KEY,ddt.ULD_KEY),'BULK')  uldKey,
	nvl(nvl(ffm.ULD_KEY,ddt.ULD_KEY),'BULK')  uldKeyShow,
	nvl(nvl(ffm.ULD_KEY,ddt.ULD_KEY),'BULK') ||'-'|| nvl(ffm.awb_no,ddt.awb_no)  uldKeyAwbNo,
	decode(ffm.tr_No,null,'N','Y') ffmInd,
	(SELECT decode(count(1),0,'N','Y') FROM EDI_CARDIT_HD WHERE AWB_NO = ffm.awb_no AND awb_date = ffm.awb_Date ) carditInd,
  	(select decode(count(1),0,'N','Y') from edi_resdit_hd hd join edi_resdit_awb_dtl dtl on hd.tr_no=dtl.tr_no join edi_resdit_tag_dtl tags on dtl.tr_awb_no=tags.tr_awb_no
    	  where hd.flt_key= ffm.flt_key and hd.flt_date= ffm.flt_date and dtl.AWB_NO = ffm.awb_no AND dtl.awb_date = ffm.awb_Date and nvl(tags.container_no,'BULK')= nvl(ffm.ULD_KEY,'BULK')) resditInd,
	decode(ddt.tr_No,null,'N','Y') ddtInd,
	nvl(ffm.brdPoint,ddt.ULD_BRD_POINT) ldgPt, 
	nvl(awb.ORIG,nvl(ddt.ULD_BRD_POINT,(SELECT ORIG FROM FLT_OPR WHERE FLT_KEY = nvl(ffm.flt_key,ddt.flt_key) AND SCH_DATE = nvl(ffm.flt_Date,ddt.flt_Date) AND FLT_TYPE = 'A'))) org, 
	nvl(awb.DEST,ddt.UNLDG_PT) dest, 
	nvl(awb.DEST,ddt.SHP_UNLDG_PT) shpDest, 
	nvl(awb.ORIG,nvl(ddt.ULD_BRD_POINT,(SELECT ORIG FROM FLT_OPR WHERE FLT_KEY = nvl(ffm.flt_key,ddt.flt_key) AND SCH_DATE = nvl(ffm.flt_Date,ddt.flt_Date) AND FLT_TYPE = 'A'))) shpldgPt, 
	awb.catalog catalog,
	case when ffm.tr_No is null and ((SELECT decode(count(1),0,'N','Y') FROM EDI_CARDIT_HD WHERE AWB_NO = ffm.awb_no AND awb_date = ffm.awb_Date) = 'Y' ) then nvl(ffm.PCS,0) 
      when (SUBSTR(ddt.awb_no,4,1) = 'M') then NVL(ddt.SHP_TRF_PC,0) else nvl(ffm.PCS,0) end pcs,
	case when ffm.tr_No is null and ((SELECT decode(count(1),0,'N','Y') FROM EDI_CARDIT_HD WHERE AWB_NO = ffm.awb_no AND awb_date = ffm.awb_Date) = 'Y' ) then nvl(ffm.WT,0)  
      when (SUBSTR(ddt.awb_no,4,1) = 'M') then NVL(ddt.SHP_TRF_WT,0) else nvl(ffm.WT,0) end wt, 
	case when ffm.tr_No is null and SUBSTR(ddt.awb_no,4,1) = 'M' then 'Y' else 'N' end disablePcWt,
	NVL(AWB.PCS,NVL(ddt.SHP_TRF_PC,0) ) awbPcs,NVL(AWB.WT,NVL(ddt.SHP_TRF_WT,0) ) awbWt,
	(select CC_CODE from V_CST_IMP_CC_CODE_AWB V where V.AWB_NO = nvl(ffm.awb_no,ddt.awb_no) AND V.FLT_KEY = #fltKey# AND V.FLT_DATE = #fltDate# 
  		AND NVL(V.HAWB_NO, '000000000000000000') = '000000000000000000' and rownum = 1) AS showCC,
	(SELECT V.CC_CODE FROM V_CST_IMP_CC_CODE_AWB V
				WHERE nvl(V.FLT_KEY,'*') = NVL(nvl(ffm.flt_key,ddt.flt_key),'*') AND nvl( V.FLT_DATE,'31AUG2000') = NVL(nvl(ffm.flt_date,ddt.flt_date),'31AUG2000')
				AND V.AWB_NO =  nvl(ffm.awb_no,ddt.awb_no)  AND NVL(V.HAWB_NO, '000000000000000000') =  '000000000000000000' AND ROWNUM = 1)  AS ccode,  
	(SELECT STRAGG(STRINGDELIM(SHC, ',')) 
	    	FROM (SELECT DISTINCT SHC, ULD_KEY, FLT_KEY,FLT_DATE, AWB_NO, AWB_DATE,PRIORITY FROM V_IMP_FLT_ULD_SHC ORDER BY PRIORITY DESC
	      	) WHERE AWB_NO = NVL(ffm.awb_No,ddt.awb_No) AND AWB_DATE = NVL(ffm.awb_date,ddt.awb_date)
	      	AND FLT_KEY = nvl(ffm.flt_key,ddt.flt_key) AND FLT_DATE = nvl(ffm.flt_Date,ddt.flt_Date)
	      	and nvl(ULD_KEY,'BULK') = nvl(nvl(ffm.ULD_KEY,ddt.ULD_KEY),'BULK')
                )   AS splCode,
	(case when ( nvl((select sum(shp_trf_pc) from v_ddt_dtl 
                    where AWB_NO = nvl(ffm.awb_no,ddt.awb_no) and AWB_DATE = nvl(ffm.awb_Date,to_date(ddt.awb_Date,'DDMONYY'))
                        and (SHP_TRF_TYPE = 'QT' OR (SHP_TRF_TYPE = 'IF' and CNTG_FLT_KEY is null))),0) 
                        != nvl((select sum(PMAN_PCS) from EXP_PMANIFEST_AWB where  AWB_NO = nvl(ffm.awb_no,ddt.awb_no) 
                        					and AWB_DATE = nvl(ffm.awb_Date,to_date(ddt.awb_Date,'DDMONYY'))),0))  
              then 'Y' else 'N' end) as manPman,
    DECODE(ddt.MANUAL_IND,'Y','Y','') as manUpdate,
	nvl(ffm.flt_key,ddt.flt_key) fltKey , 
	TO_CHAR(nvl(ffm.flt_Date,ddt.flt_Date),'DDMONYY')  fltDate,
	ddt.TR_NO ddtTrNo, 
	ddt.SDOC_LINE_NO ddtSdocLineNo, 
	ddt.UDOC_LINE_NO ddtUdocLineNo, 
	ddt.DOC_LINE_NO ddtDocLineNo,
	decode(ddt.CNTG_FLT_KEY,null,'',PKG_COMMON.get_flt_carr(ddt.CNTG_FLT_KEY)) cntgFltCarr, 
	REPLACE(ddt.CNTG_FLT_KEY, PKG_COMMON.get_flt_carr(ddt.CNTG_FLT_KEY), '') cntgFltNo,
	ddt.CNTG_FLT_KEY cntgFltKey, ddt.CNTG_FLT_DATE cntgFltDate,
	ddt.UNLDG_PT uldUnldgPt,ddt.TRF_TYPE trfType,ddt.BRK_BULK brkBulk,
	decode(ddt.CNTG_FLT_KEY,null,'',PKG_COMMON.get_flt_carr(ddt.CNTG_FLT_KEY)) oldCntgFltCarr, 
	REPLACE(ddt.CNTG_FLT_KEY, PKG_COMMON.get_flt_carr(ddt.CNTG_FLT_KEY), '') oldCntgFltNo,
	ddt.CNTG_FLT_KEY oldCntgFltKey, ddt.CNTG_FLT_DATE oldCntgFltDate,  
	ddt.UNLDG_PT oldUldUnldgPt,ddt.TRF_TYPE oldTrfType,ddt.BRK_BULK oldBrkBulk,
	decode(ddt.SHP_CNTG_FLT_KEY,null,'',PKG_COMMON.get_flt_carr(ddt.SHP_CNTG_FLT_KEY)) shpCntgFltCarr, 
	REPLACE(ddt.SHP_CNTG_FLT_KEY, PKG_COMMON.get_flt_carr(ddt.SHP_CNTG_FLT_KEY), '') shpCntgFltNo,
	ddt.SHP_CNTG_FLT_KEY shpCntgFltKey, ddt.SHP_CNTG_FLT_DATE shpCntgFltDate,
	ddt.SHP_UNLDG_PT shpUnldgPt,ddt.SHP_TRF_TYPE shpTrfType,ddt.SHP_BRK_BULK shpBrkBulk,
	ddt.SHP_TRF_PC trfPcs, ddt.SHP_TRF_WT trfWt,
	decode(ddt.SHP_CNTG_FLT_KEY,null,'',PKG_COMMON.get_flt_carr(ddt.SHP_CNTG_FLT_KEY)) oldShpCntgFltCarr, 
	REPLACE(ddt.SHP_CNTG_FLT_KEY, PKG_COMMON.get_flt_carr(ddt.SHP_CNTG_FLT_KEY), '') oldShpCntgFltNo,
	ddt.SHP_CNTG_FLT_KEY oldShpCntgFltKey, ddt.SHP_CNTG_FLT_DATE oldShpCntgFltDate,
	ddt.SHP_UNLDG_PT oldShpUnldgPt, ddt.SHP_TRF_TYPE oldShpTrfType,ddt.SHP_BRK_BULK oldShpBrkBulk,
	ddt.SHP_TRF_PC oldTrfPcs, ddt.SHP_TRF_WT oldTrfWt,
	ddt.UNLDG_PT unldgPt,
	FUN_GET_FLT_TDIFF_TRFYPE(ddt.CNTG_FLT_KEY, ddt.CNTG_FLT_DATE,#fltKey#,#fltDate#,'TIME_DIFF' ) timeDiifferance,
	FUN_GET_FLT_TDIFF_TRFYPE(ddt.CNTG_FLT_KEY, ddt.CNTG_FLT_DATE,#fltKey#,#fltDate#,'TR_TYPE' ) proposeTrfType,
	FUN_GET_FLT_TDIFF_TRFYPE(ddt.SHP_CNTG_FLT_KEY, ddt.SHP_CNTG_FLT_DATE,#fltKey#,#fltDate#,'TIME_DIFF' ) shpTimeDiifferance,
	FUN_GET_FLT_TDIFF_TRFYPE(ddt.SHP_CNTG_FLT_KEY, ddt.SHP_CNTG_FLT_DATE,#fltKey#,#fltDate#,'TR_TYPE' ) shpProposeTrfType,
	(select eic_UNLDG_PT from ULD_INVENTORY where ULD_KEY = ffm.ULD_KEY) unldgPt,
	'' etaChangedHrs, 
	case when (select count(1) from imp_uld_list where FLT_KEY = ffm.flt_key and ffm.flt_Date = FLT_DATE
          and ULD_KEY = ffm.ULD_KEY and HANDLING_MODE in ('NBK','PPK')) > 0 then 'Y' 
          else '' end as noBreak, 
	ddt.Acton_code_1 actionOne, ddt.Acton_code_2 actionTwo , 'Y' spiltChkNotReqd,
	DECODE((select count(1) from awb where awb_no = nvl(ffm.awb_no,ddt.awb_no) and awb_date=nvl(ffm.awb_date,ddt.awb_date) and rownum=1),0,(select rmk from awb_rmk where awb_no=nvl(ffm.awb_no,ddt.awb_no) and rownum=1),(select AIRLN_RMK from imp_car_awb where awb_no = nvl(ffm.awb_no,ddt.awb_no) and awb_date=nvl(ffm.awb_date,ddt.awb_date)  and rownum=1)) AS awbAirlRmk,  
	DECODE((select count(1) from imp_car_awb where awb_no = nvl(ffm.awb_no,ddt.awb_no) and awb_date=nvl(ffm.awb_date,ddt.awb_date)  and rownum=1),0,(select awb_rmk from awb where awb_no=nvl(ffm.awb_no,ddt.awb_no) and awb_date=nvl(ffm.awb_date,ddt.awb_date)  and rownum=1),(select WH_RMK from imp_car_awb where awb_no = nvl(ffm.awb_no,ddt.awb_no) and awb_date=nvl(ffm.awb_date,ddt.awb_date)  and rownum=1)) AS awbWhRmk,
	d.AIRL_RMK uldAirlRmk, d.WH_RMK uldWhRmk,
	DECODE(shp.RECD_PCS,'0','',shp.RECD_PCS) ||DECODE(shp.RECD_PCS,'0','','/')||DECODE(shp.RECD_WT,null,'',DECODE(trim(TO_CHAR(NVL(shp.RECD_WT,0),'99999990.0')),'0.0','',trim(TO_CHAR(NVL(shp.RECD_WT,0),'99999990.0')))) AS bdPcWt,
	DECODE(shp.DAM_PCS,'0','',shp.DAM_PCS) ||DECODE(shp.DAM_PCS,'0','','/')|| DECODE(shp.DAM_WT,null,'',DECODE(trim(TO_CHAR(NVL(shp.DAM_WT,0),'99999990.0')),'0.0','',trim(TO_CHAR(NVL(shp.DAM_WT,0),'99999990.0')))) AS damPcWt,
	ffmCntTab.ffmCount ffmCount,
	(select Wt  from edi_cpm_DTL where   nvl(ULD_KEY,'BULK') = nvl(nvl(ffm.ULD_KEY,ddt.ULD_KEY),'BULK')
               and flt_key = NVL(ffm.flt_key,ddt.flt_key) and flt_date = NVL(ffm.flt_Date,ddt.flt_Date) and rownum = 1 )   grossWt,
	(select CNTR  from edi_cpm_DTL where   nvl(ULD_KEY,'BULK') = nvl(nvl(ffm.ULD_KEY,ddt.ULD_KEY),'BULK')
               and flt_key = NVL(ffm.flt_key,ddt.flt_key) and flt_date = NVL(ffm.flt_Date,ddt.flt_Date) and rownum = 1 )   contrCode ,
	nvl(ffmCntTab.PCS,NVL(resdCntTab.PCS,0)) manfPcs,  nvl(ffmCntTab.wt,NVL(resdCntTab.wt,0)) manfWt ,     
    D.HANDLING_MODE oldHandlMode,
    (CASE WHEN (SELECT COUNT(1) FROM AWB AWB, CUST_AIRL_SPL_CODE SPLCODE WHERE SPLCODE.SPL_TYPE='SPL_COURIER_SHC' AND SPLCODE.CARR_CODE = AWB.CARR_CODE AND AWB.awb_no = nvl(ffm.awb_no,ddt.awb_no) and AWB.awb_date = nvl(ffm.awb_date,ddt.awb_date) AND (SPLCODE.SPL_CODE = AWB.SPL_CODE1 OR SPLCODE.SPL_CODE = AWB.SPL_CODE2 OR SPLCODE.SPL_CODE = AWB.SPL_CODE3 OR SPLCODE.SPL_CODE = AWB.SPL_CODE4 OR SPLCODE.SPL_CODE = AWB.SPL_CODE5 OR SPLCODE.SPL_CODE = AWB.SPL_CODE6 OR SPLCODE.SPL_CODE = AWB.SPL_CODE7 OR SPLCODE.SPL_CODE = AWB.SPL_CODE8 OR SPLCODE.SPL_CODE = AWB.SPL_CODE9)) > 0 THEN 'Q' ELSE ddt.SHP_TYPE END) shpType                  
from ( select * from MAIN_TAB ) ffm
     
FULL OUTER JOIN ( select * from DDT_INFO)  ddt ON ddt.flt_key    = ffm.flt_key
AND ddt.flt_Date          = ffm.flt_Date
AND NVL(ddt.ULD_KEY, '*') = NVL(DECODE(ffm.ULD_KEY,'BULK','*',ffm.ULD_KEY), '*')
AND NVL(DDT.AWB_NO, '*')  = NVL(FFM.AWB_NO, '*')

LEFT JOIN ( select * from FFM_DATA) ffmCntTab
ON NVL(ffmCntTab.ULD_KEY,'BULK') = NVL(NVL(ffm.ULD_KEY,ddt.ULD_KEY),'BULK')
AND ((ffm.flt_key               IS NOT NULL
AND ffmCntTab.flt_key            =ffm.flt_key
AND ffmCntTab.flt_date           =ffm.flt_date)
OR (ffm.flt_key                 IS NULL
AND ffmCntTab.flt_key            =ddt.flt_key
AND ffmCntTab.flt_date           =ddt.flt_date))

left join ( select * from RESDIT_DATA) resdCntTab ON NVL(resdCntTab.CONTAINER_NO,'BULK') = NVL(NVL(ffm.ULD_KEY,ddt.ULD_KEY),'BULK')
AND ((ffm.flt_key IS NOT NULL
AND resdCntTab.flt_key =ffm.flt_key
AND resdCntTab.flt_date =ffm.flt_date)
OR (ffm.flt_key IS NULL
AND resdCntTab.flt_key =ddt.flt_key
AND resdCntTab.flt_date =ddt.flt_date))                     

left join awb on 
        (ffm.awb_no is not null and awb.awb_no=ffm.awb_no and awb.awb_date=ffm.awb_date) 
        or (ffm.awb_no is null and awb.awb_no=ddt.awb_no and awb.awb_date=ddt.awb_date)
left join IMP_CAR_SHP shp on 
        (ffm.awb_no is not null and shp.awb_no=ffm.awb_no and shp.awb_date=ffm.awb_date and shp.flt_key=ffm.flt_key and shp.flt_Date=ffm.flt_Date) 
        or (ffm.awb_no is null and shp.awb_no=ddt.awb_no and shp.awb_date=ddt.awb_date and shp.flt_key=ddt.flt_key and shp.flt_Date=ddt.flt_Date)
left join IMP_ULD_LIST D
	     ON nvl(D.ULD_KEY,'BULK') = nvl(nvl(ffm.ULD_KEY,ddt.ULD_KEY),'BULK')  
	      and ((ffm.flt_key is not null and d.flt_key=ffm.flt_key and d.flt_date=ffm.flt_date) 
           or (ffm.flt_key is null and d.flt_key=ddt.flt_key and d.flt_date=ddt.flt_date))        
  where ((ffm.flt_key = #fltKey# and ffm.flt_Date = #fltDate# ) 
  		OR (ddt.flt_key = #fltKey# and ddt.flt_Date = #fltDate# ))
   ORDER BY  NVL(ffm.ULD_KEY,ddt.ULD_KEY),nvl(ffm.awb_no,ddt.awb_no) ,nvl(ffm.awb_Date,ddt.awb_Date)
   ]]>
</select>

<!--  and rownum = 1  and ddt.awb_no = #awbNo# and ddt.awb_DATE = #awbDate# 
and decode(ddt.tr_No,null,ddt.tr_No,ffm.tr_No) is not null -->
<select id="fetchIndBoundTsnstCntrlAWBList_Dtl" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstBO" resultClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
<![CDATA[ 
select nvl(ffm.awb_no,ddt.awb_no) awbNo,
SUBSTR(TRIM(nvl(ffm.awb_no,ddt.awb_no)),1,3)||'-'||SUBSTR(TRIM(nvl(ffm.awb_no,ddt.awb_no)),4) awbNoDisp,
TO_CHAR(nvl(ffm.awb_Date,ddt.awb_Date),'DDMONYY') awbDate, 
(select decode(count(1),0,'N','Y') from awb where awb_no=ffm.awb_no and awb_date=ffm.awb_date and awb_closed_yn='Y') as awbClosedyn,
nvl(nvl(ffm.ULD_KEY,ddt.ULD_KEY),'BULK')  uldKey,
nvl(nvl(ffm.ULD_KEY,ddt.ULD_KEY),'BULK')  uldKeyShow,
nvl(nvl(ffm.ULD_KEY,ddt.ULD_KEY),'BULK') ||'-'|| nvl(ffm.awb_no,ddt.awb_no)  uldKeyAwbNo,
decode(ffm.tr_No,null,'N','Y') ffmInd,
decode(ddt.tr_No,null,'N','Y') ddtInd,
nvl(awb.ORIG,nvl(ddt.ULD_BRD_POINT,(SELECT ORIG FROM FLT_OPR WHERE FLT_KEY = nvl(ffm.flt_key,ddt.flt_key) AND SCH_DATE = nvl(ffm.flt_Date,ddt.flt_Date) AND FLT_TYPE = 'A'))) ldgPt, 
nvl(awb.ORIG,nvl(ddt.ULD_BRD_POINT,(SELECT ORIG FROM FLT_OPR WHERE FLT_KEY = nvl(ffm.flt_key,ddt.flt_key) AND SCH_DATE = nvl(ffm.flt_Date,ddt.flt_Date) AND FLT_TYPE = 'A'))) org, 
nvl(awb.DEST,ddt.SHP_UNLDG_PT) dest, 
awb.catalog catalog,
case when ffm.tr_No is null and SUBSTR(ddt.awb_no,4,1) = 'M' then NVL(ddt.SHP_TRF_PC,0) 
	else nvl(ffm.PCS,0) end pcs,
case when ffm.tr_No is null and SUBSTR(ddt.awb_no,4,1) = 'M' then NVL(ddt.SHP_TRF_WT,0)
	else nvl(ffm.WT,0) end wt, 
case when ffm.tr_No is null and SUBSTR(ddt.awb_no,4,1) = 'M' then 'Y' else 'N' end disablePcWt,
NVL(AWB.PCS,NVL(ddt.SHP_TRF_PC,0) ) awbPcs,NVL(AWB.WT,NVL(ddt.SHP_TRF_WT,0) ) awbWt,
(case when ( nvl((select sum(shp_trf_pc) from v_ddt_dtl 
                    where AWB_NO = nvl(ffm.awb_no,ddt.awb_no) and AWB_DATE = nvl(ffm.awb_Date,to_date(ddt.awb_Date,'DDMONYY'))
                        and (SHP_TRF_TYPE = 'QT' OR (SHP_TRF_TYPE = 'IF' and CNTG_FLT_KEY is null))),0) 
                        != nvl((select sum(PMAN_PCS) from EXP_PMANIFEST_AWB where  AWB_NO = nvl(ffm.awb_no,ddt.awb_no) 
                        					and AWB_DATE = nvl(ffm.awb_Date,to_date(ddt.awb_Date,'DDMONYY'))),0))  
              then 'Y' else 'N' end) as manPman,
 nvl(ffm.flt_key,ddt.flt_key) fltKey , TO_CHAR(nvl(ffm.flt_Date,ddt.flt_Date),'DDMONYY')  fltDate,
  ddt.TR_NO ddtTrNo, ddt.SDOC_LINE_NO ddtSdocLineNo, ddt.UDOC_LINE_NO ddtUdocLineNo, ddt.DOC_LINE_NO ddtDocLineNo,
   (SELECT V.CC_CODE FROM V_CST_IMP_CC_CODE_AWB V
				WHERE nvl(V.FLT_KEY,'*') = NVL(nvl(ffm.flt_key,ddt.flt_key),'*') AND nvl( V.FLT_DATE,'31AUG2000') = NVL(nvl(ffm.flt_date,ddt.flt_date),'31AUG2000')
				AND V.AWB_NO =  nvl(ffm.awb_no,ddt.awb_no)  AND NVL(V.HAWB_NO, '000000000000000000') =  '000000000000000000' AND ROWNUM = 1)  AS ccode,
(SELECT STRAGG(STRINGDELIM(SHC, ',')) 
	    	FROM (SELECT DISTINCT SHC, ULD_KEY, FLT_KEY,FLT_DATE, AWB_NO, AWB_DATE,PRIORITY FROM V_IMP_FLT_ULD_SHC ORDER BY PRIORITY DESC
	      	) WHERE AWB_NO = NVL(ffm.awb_No,ddt.awb_No) AND AWB_DATE = NVL(ffm.awb_date,ddt.awb_date)
	      	AND FLT_KEY = nvl(ffm.flt_key,ddt.flt_key) AND FLT_DATE = nvl(ffm.flt_Date,ddt.flt_Date)
	      	and nvl(ULD_KEY,'BULK') = nvl(nvl(ffm.ULD_KEY,ddt.ULD_KEY),'BULK')
                ) shc,  
					
(SELECT STRAGG(STRINGDELIM(SHC, ',')) 
	    	FROM (SELECT DISTINCT SHC, ULD_KEY, FLT_KEY,FLT_DATE, AWB_NO, AWB_DATE,PRIORITY FROM V_IMP_FLT_ULD_SHC ORDER BY PRIORITY DESC
	      	) WHERE AWB_NO = NVL(ffm.awb_No,ddt.awb_No) AND AWB_DATE = NVL(ffm.awb_date,ddt.awb_date)
	      	AND FLT_KEY = nvl(ffm.flt_key,ddt.flt_key) AND FLT_DATE = nvl(ffm.flt_Date,ddt.flt_Date)
	      	and nvl(ULD_KEY,'BULK') = nvl(nvl(ffm.ULD_KEY,ddt.ULD_KEY),'BULK')
                ) splCode,							
 ddt.SHP_CNTG_FLT_KEY cntgFltKey, ddt.SHP_CNTG_FLT_DATE cntgFltDate,
	ddt.SHP_CNTG_FLT_KEY oldCntgFltKey, ddt.SHP_CNTG_FLT_DATE oldCntgFltDate,
  decode(ddt.SHP_CNTG_FLT_KEY,null,'',PKG_COMMON.get_flt_carr(ddt.SHP_CNTG_FLT_KEY)) cntgFltCarr, REPLACE(ddt.SHP_CNTG_FLT_KEY, PKG_COMMON.get_flt_carr(ddt.SHP_CNTG_FLT_KEY), '') cntgFltNo,
  decode(ddt.SHP_CNTG_FLT_KEY,null,'',PKG_COMMON.get_flt_carr(ddt.SHP_CNTG_FLT_KEY)) oldCntgFltCarr, REPLACE(ddt.SHP_CNTG_FLT_KEY, PKG_COMMON.get_flt_carr(ddt.SHP_CNTG_FLT_KEY), '') oldCntgFltNo,
 ddt.SHP_TRF_TYPE trfType, ddt.SHP_BRK_BULK brkBulk, ddt.SHP_UNLDG_PT shpUnldgPt, 
  ddt.SHP_TRF_TYPE oldTrfType, ddt.SHP_BRK_BULK oldBrkBulk, ddt.SHP_UNLDG_PT oldShpUnldgPt, 
  ddt.SHP_TRF_PC trfPcs, ddt.SHP_TRF_WT trfWt,
	ddt.SHP_TRF_PC oldTrfPcs, ddt.SHP_TRF_WT oldTrfWt,
  (select eic_UNLDG_PT from ULD_INVENTORY where ULD_KEY = ffm.ULD_KEY) unldgPt,
      case when (select count(1) from imp_uld_list where FLT_KEY = ffm.flt_key and ffm.flt_Date = FLT_DATE
              and ULD_KEY = ffm.ULD_KEY and HANDLING_MODE in ('NBK','PPK')) > 0 then 'Y' 
               else '' end as noBreak, 
              ddt.Acton_code_1 actionOne, ddt.Acton_code_2 actionTwo , 'Y' spiltChkNotReqd,
FUN_GET_FLT_TDIFF_TRFYPE(ddt.SHP_CNTG_FLT_KEY, ddt.SHP_CNTG_FLT_DATE,#fltKey#,#fltDate#,'TIME_DIFF' ) timeDiifferance,
FUN_GET_FLT_TDIFF_TRFYPE(ddt.SHP_CNTG_FLT_KEY, ddt.SHP_CNTG_FLT_DATE,#fltKey#,#fltDate#,'TR_TYPE' ) proposeTrfType,
DECODE((select count(1) from awb where awb_no = nvl(ffm.awb_no,ddt.awb_no) and awb_date=nvl(ffm.awb_date,ddt.awb_date) and rownum=1),0,(select rmk from awb_rmk where awb_no=nvl(ffm.awb_no,ddt.awb_no) and rownum=1),(select AIRLN_RMK from imp_car_awb where awb_no = nvl(ffm.awb_no,ddt.awb_no) and awb_date=nvl(ffm.awb_date,ddt.awb_date)  and rownum=1)) AS awbAirlRmk,  
DECODE((select count(1) from imp_car_awb where awb_no = nvl(ffm.awb_no,ddt.awb_no) and awb_date=nvl(ffm.awb_date,ddt.awb_date)  and rownum=1),0,(select awb_rmk from awb where awb_no=nvl(ffm.awb_no,ddt.awb_no) and awb_date=nvl(ffm.awb_date,ddt.awb_date)  and rownum=1),(select WH_RMK from imp_car_awb where awb_no = nvl(ffm.awb_no,ddt.awb_no) and awb_date=nvl(ffm.awb_date,ddt.awb_date)  and rownum=1)) AS awbWhRmk,
d.AIRL_RMK uldAirlRmk, d.WH_RMK uldWhRmk,
DECODE(shp.RECD_PCS,'0','',shp.RECD_PCS) ||DECODE(shp.RECD_PCS,'0','','/')||DECODE(shp.RECD_WT,null,'',DECODE(trim(TO_CHAR(NVL(shp.RECD_WT,0),'99999990.0')),'0.0','',trim(TO_CHAR(NVL(shp.RECD_WT,0),'99999990.0')))) AS bdPcWt,
DECODE(shp.DAM_PCS,'0','',shp.DAM_PCS) ||DECODE(shp.DAM_PCS,'0','','/')|| DECODE(shp.DAM_WT,null,'',DECODE(trim(TO_CHAR(NVL(shp.DAM_WT,0),'99999990.0')),'0.0','',trim(TO_CHAR(NVL(shp.DAM_WT,0),'99999990.0')))) AS damPcWt,
ffmCntTab.ffmCount ffmCount,
(select Wt  from edi_cpm_DTL where   nvl(ULD_KEY,'BULK') = nvl(nvl(ffm.ULD_KEY,ddt.ULD_KEY),'BULK')
               and flt_key = NVL(ffm.flt_key,ddt.flt_key) and flt_date = NVL(ffm.flt_Date,ddt.flt_Date) and rownum = 1 )   grossWt,
(select CNTR  from edi_cpm_DTL where   nvl(ULD_KEY,'BULK') = nvl(nvl(ffm.ULD_KEY,ddt.ULD_KEY),'BULK')
               and flt_key = NVL(ffm.flt_key,ddt.flt_key) and flt_date = NVL(ffm.flt_Date,ddt.flt_Date) and rownum = 1 )   contrCode ,
                nvl(ffmCntTab.PCS,0) manfPcs,  nvl(ffmCntTab.wt,0) manfWt      
from
(select  
ffmshp.awb_no awb_no, ffmshp.awb_Date awb_Date, ffmshp.ORG ORG, ffmshp.DEST DEST, nvl(ffmshp.MAN_PCS,0) PCS,
nvl(ffmshp.MAN_WT,0) WT, ffmMSG.flt_key flt_key , ffmMSG.flt_Date flt_Date, ffmULD.ULD_KEY ULD_KEY, ffmMSG.TR_No tr_NO 
    from EDI_FFM_MSG ffmMSG, EDI_FFM_ULD ffmULD , edi_ffm_shp ffmshp 
    where ffmMSG.FFM_STATUS = 'P' and ffmshp.dest != 'HKG' 
    and ffmMSG.TR_NO = ffmULD.TR_NO and ffmMSG.TR_NO = ffmshp.TR_NO and ffmULD.Doc_line_no = ffmshp.uDoc_line_no 
    ) ffm 
FULL OUTER join  (select ddtView.awb_no awb_no, to_char(ddtView.awb_DATE,'DDMONYY') awb_DATE, ddtView.flt_key flt_key , 
                      to_char(ddtView.flt_Date,'DDMONYY') flt_Date, 
                	ddtView.TR_NO TR_NO, ddtView.sdoc_line_no Sdoc_line_no, ddtView.uDOC_LINE_NO UDOC_LINE_NO, ddtView.DOC_LINE_NO DOC_LINE_NO,
                	ddtView.ULD_KEY ULD_KEY , ddtView.SHP_CNTG_FLT_KEY SHP_CNTG_FLT_KEY, to_char(ddtView.SHP_CNTG_FLT_DATE,'DDMONYY') SHP_CNTG_FLT_DATE, 
                  	ddtView.SHP_TRF_TYPE SHP_TRF_TYPE,  ddtView.SHP_BRK_BULK SHP_BRK_BULK, to_char(ddtView.BASELINE_ETA,'DDMONYY') BASELINE_ETA,
                  	NVL( (TO_CHAR(TO_DATE(to_char(ddtView.BASELINE_ETA,'DDMONYY HH24MI'),'DDMONYY HH24MI') - 
                   			TO_DATE(TO_CHAR(FLT.SCH_DATE,'DDMONYY')|| ' ' || 
                   			TO_CHAR(NVL(FLT.EST_TIME,  FLT.SCH_TIME),'0000') ,'DDMONYY HH24MI')))  * 24  , 0 ) as etaChangedHrs,
                    ddtView.Acton_code_1 Acton_code_1, ddtView.Acton_code_2 Acton_code_2, ddtView.UNLDG_PT , ddtView.SHP_UNLDG_PT,
                    ddtView.SHP_TRF_PC , ddtView.SHP_TRF_WT, ddtView.ULD_BRD_POINT
                  from V_UNFIN_DDT_DTL ddtView
              		join FLT_OPR FLT on FLT.FLT_KEY = ddtView.FLT_KEY and FLT.SCH_DATE = ddtView.FLT_DATE and FLT_type = 'A') ddt 
  				on ddt.flt_key = ffm.flt_key and  ddt.flt_Date =  ffm.flt_Date and nvl(ddt.ULD_KEY, '*') =  nvl(ffm.ULD_KEY, '*') AND DDT.AWB_NO = FFM.AWB_NO
left join (select  COUNT(1) ffmCount , nvl(sum(ffmshp.MAN_PCS),0) PCS, nvl(sum(ffmshp.MAN_WT),0) WT, ffmMSG.flt_key, ffmMSG.flt_Date, ffmULD.ULD_KEY
         from EDI_FFM_MSG ffmMSG, EDI_FFM_ULD ffmULD , edi_ffm_shp ffmshp 
            where ffmMSG.FFM_STATUS = 'P'
            and ffmMSG.TR_NO = ffmULD.TR_NO and ffmMSG.TR_NO = ffmshp.TR_NO and ffmULD.Doc_line_no = ffmshp.uDoc_line_no 
            group by ffmMSG.flt_key, ffmMSG.flt_Date, ffmULD.ULD_KEY ) ffmCntTab 
            on  nvl(ffmCntTab.ULD_KEY,'BULK') = nvl(nvl(ffm.ULD_KEY,ddt.ULD_KEY),'BULK')
                   and ((ffm.flt_key is not null and ffmCntTab.flt_key=ffm.flt_key and ffmCntTab.flt_date=ffm.flt_date) 
                    or (ffm.flt_key is null and ffmCntTab.flt_key=ddt.flt_key and ffmCntTab.flt_date=ddt.flt_date))    				
  left join awb on 
        (ffm.awb_no is not null and awb.awb_no=ffm.awb_no and awb.awb_date=ffm.awb_date) 
        or (ffm.awb_no is null and awb.awb_no=ddt.awb_no and awb.awb_date=ddt.awb_date)
  left join IMP_CAR_SHP shp on 
        (ffm.awb_no is not null and shp.awb_no=ffm.awb_no and shp.awb_date=ffm.awb_date and shp.flt_key=ffm.flt_key and shp.flt_Date=ffm.flt_Date) 
        or (ffm.awb_no is null and shp.awb_no=ddt.awb_no and shp.awb_date=ddt.awb_date and shp.flt_key=ddt.flt_key and shp.flt_Date=ddt.flt_Date)
 left join IMP_ULD_LIST D
	     ON nvl(D.ULD_KEY,'BULK') = nvl(nvl(ffm.ULD_KEY,ddt.ULD_KEY),'BULK')  
	      and ((ffm.flt_key is not null and d.flt_key=ffm.flt_key and d.flt_date=ffm.flt_date) 
           or (ffm.flt_key is null and d.flt_key=ddt.flt_key and d.flt_date=ddt.flt_date)) 
  where ((ffm.flt_key = #fltKey# and ffm.flt_Date = #fltDate# ) 
  		OR (ddt.flt_key = #fltKey# and ddt.flt_Date = #fltDate# ))
  		and nvl(nvl(ffm.ULD_KEY,ddt.ULD_KEY),'BULK') = #uldKey#  and NVL(ffm.awb_No,ddt.awb_No) is not null
   ]]>
   <isNotEmpty property="trfType">
		and ddt.SHP_TRF_TYPE = nvl(#trfType#,ddt.SHP_TRF_TYPE)
	</isNotEmpty>
   ORDER BY  nvl(ffm.awb_no,ddt.awb_no) ,nvl(ffm.awb_Date,ddt.awb_Date)
</select>

<select id="fetchLdgPointForTsnstCtrlList" parameterClass="map" resultClass="java.lang.String" >
<![CDATA[ 
	select ldgPt from 
	(select BRD_POINT ldgPt from ddt_msg where flt_key = #fltKey# and flt_date = #fltDate# and ddt_status='P'
	union 
	select BRD_POINT ldgPt from edi_ffm_msg where flt_key = #fltKey# and flt_date = #fltDate# and ddt_status='P') a where rownum = 1
     ]]>
</select>
   	
   	
<select id="checkCatalog_For_TransitControlChecklist"  parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO"  resultClass="java.lang.Integer">
	select count(1) from awb where catalog = 'TM' and  awb_no = #awbNo# and awb_date = #awbDate#
</select>


<select id="getSHCForAWB_TM"  parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO"  resultClass="java.lang.String">
	select decode(awb.spl_code1, null, '', awb.spl_code1 )
               || decode(awb.spl_code2, null, '',','||  awb.spl_code2 )
               || decode(awb.spl_code3, null, '', ','|| awb.spl_code3 )
               || decode(awb.spl_code4, null, '', ','|| awb.spl_code4 )
               || decode(awb.spl_code5, null, '', ','|| awb.spl_code5 )
               || decode(awb.spl_code6, null, '', ','|| awb.spl_code6 )
               || decode(awb.spl_code7, null, '', ','|| awb.spl_code7 )
               || decode(awb.spl_code8, null, '', ','|| awb.spl_code8 )
               || decode(awb.spl_code9, null, '', ','|| awb.spl_code9) 
               as shc from awb where catalog = 'TM' and  awb_no = #awbNo# and awb_date = #awbDate#
</select>


<!--
nvl((select BLDUP_INSTR from EXP_PMAN_TARMAC_AWB where FLT_KEY = ddt.SHP_CNTG_FLT_KEY  and FLT_DATE = ddt.SHP_CNTG_FLT_DATE 
                and AWB_NO = NVL(FFM.AWB_NO,DDT.AWB_NO) and AWB_DATE = NVL(FFM.AWB_DATE,TO_DATE(DDT.AWB_DATE,'DDMONYY'))
                and unldg_pt = ddt.SHP_UNLDG_PT),
    (select BLDUP_INSTR from EXP_PMANIFEST_AWB where FLT_KEY = ddt.SHP_CNTG_FLT_KEY  and FLT_DATE = ddt.SHP_CNTG_FLT_DATE 
                and AWB_NO = NVL(FFM.AWB_NO,DDT.AWB_NO) and AWB_DATE = NVL(FFM.AWB_DATE,TO_DATE(DDT.AWB_DATE,'DDMONYY'))
                and unldg_pt = ddt.SHP_UNLDG_PT)))
-->

<select id="fetchIndBoundTsnstCntrlAWB_CNTG_FLT_List" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" resultClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
<![CDATA[ 
select a.* from (
select nvl(ffm.awb_no,ddt.awb_no) awbNo,
SUBSTR(TRIM(nvl(ffm.awb_no,ddt.awb_no)),1,3)||'-'||SUBSTR(TRIM(nvl(ffm.awb_no,ddt.awb_no)),4) awbNoDisp,
TO_CHAR(nvl(ffm.awb_Date,ddt.awb_Date),'DDMONYY') awbDate, 
nvl(nvl(ffm.ULD_KEY,ddt.ULD_KEY),'BULK')  uldKey,
nvl(nvl(ffm.ULD_KEY,ddt.ULD_KEY),'BULK')  uldKeyShow,
nvl(nvl(ffm.ULD_KEY,ddt.ULD_KEY),'BULK') ||'-'|| nvl(ffm.awb_no,ddt.awb_no)  uldKeyAwbNo,
decode(ffm.tr_No,null,'N','Y') ffmInd,
decode(ddt.tr_No,null,'N','Y') ddtInd,
nvl(awb.ORIG,'') org, awb.DEST dest, 
awb.catalog catalog,
case when ffm.tr_No is null and awb.catalog = 'TM' then NVL(AWB.PCS,0)
	else nvl(ffm.PCS,0) end pcs,
case when ffm.tr_No is null and awb.catalog = 'TM' then NVL(AWB.WT,0)
	else nvl(ffm.WT,0) end wt, 
case when ffm.tr_No is null and awb.catalog = 'TM' then 'Y' else 'N' end disablePcWt,
NVL(AWB.PCS,0) awbPcs,NVL(AWB.WT,0) awbWt,
(case when ( nvl((select sum(shp_trf_pc) from v_ddt_dtl 
                    where AWB_NO = nvl(ffm.awb_no,ddt.awb_no) and AWB_DATE = nvl(ffm.awb_Date,to_date(ddt.awb_Date,'DDMONYY'))
                        and (SHP_TRF_TYPE = 'QT' OR (SHP_TRF_TYPE = 'IF' and CNTG_FLT_KEY is null))),0) 
                        != nvl((select sum(PMAN_PCS) from EXP_PMANIFEST_AWB where  AWB_NO = nvl(ffm.awb_no,ddt.awb_no) 
                        					and AWB_DATE = nvl(ffm.awb_Date,to_date(ddt.awb_Date,'DDMONYY'))),0))  
              then 'Y' else 'N' end) as manPman,
nvl(ffm.flt_key,ddt.flt_key) fltKey , TO_CHAR(nvl(ffm.flt_Date,ddt.flt_Date),'DDMONYY')  fltDate,
ddt.TR_NO ddtTrNo, ddt.SDOC_LINE_NO ddtSdocLineNo, ddt.UDOC_LINE_NO ddtUdocLineNo, ddt.DOC_LINE_NO ddtDocLineNo,
 ddt.SHP_CNTG_FLT_KEY cntgFltKey, ddt.SHP_CNTG_FLT_DATE cntgFltDate,
	ddt.SHP_CNTG_FLT_KEY oldCntgFltKey, ddt.SHP_CNTG_FLT_DATE oldCntgFltDate,
  decode(ddt.SHP_CNTG_FLT_KEY,null,'',PKG_COMMON.get_flt_carr(ddt.SHP_CNTG_FLT_KEY)) cntgFltCarr, REPLACE(ddt.SHP_CNTG_FLT_KEY, PKG_COMMON.get_flt_carr(ddt.SHP_CNTG_FLT_KEY), '') cntgFltNo,
  decode(ddt.SHP_CNTG_FLT_KEY,null,'',PKG_COMMON.get_flt_carr(ddt.SHP_CNTG_FLT_KEY)) oldCntgFltCarr, REPLACE(ddt.SHP_CNTG_FLT_KEY, PKG_COMMON.get_flt_carr(ddt.SHP_CNTG_FLT_KEY), '') oldCntgFltNo,
 ddt.SHP_TRF_TYPE trfType, ddt.SHP_BRK_BULK brkBulk, ddt.SHP_UNLDG_PT shpUnldgPt, 
  ddt.SHP_TRF_TYPE oldTrfType, ddt.SHP_BRK_BULK oldBrkBulk, ddt.SHP_UNLDG_PT oldShpUnldgPt, 
  ddt.SHP_TRF_PC trfPcs, ddt.SHP_TRF_WT trfWt,
	ddt.SHP_TRF_PC oldTrfPcs, ddt.SHP_TRF_WT oldTrfWt, 
  (select eic_UNLDG_PT from ULD_INVENTORY where ULD_KEY = ffm.ULD_KEY) unldgPt,
  '' as proposeTrfType, '' etaChangedHrs, 
      case when (select count(1) from imp_uld_list where FLT_KEY = ffm.flt_key and ffm.flt_Date = FLT_DATE
              and ULD_KEY = ffm.ULD_KEY and HANDLING_MODE in ('NBK','PPK')) > 0 then 'Y' 
               else '' end as noBreak, 
              ddt.Acton_code_1 actionOne, ddt.Acton_code_2 actionTwo , 'Y' spiltChkNotReqd,
                 (select bulkPcs ||'/'||  bulkWt from 
               	  (select FLT_KEY, FLT_DATE, AWB_NO, AWB_DATE, sum(bulkPcs) bulkPcs,  sum(bulkWt) bulkWt from 
                   (select FLT_KEY, FLT_DATE, AWB_NO, AWB_DATE, NVL(SUM(MIX_PCS)+SUM(PPK_PCS)+SUM(ASSIGNED_BULK_PCS),0) bulkPcs, NVL(SUM(MIX_WT)+SUM(PPK_WT)+SUM(ASSIGNED_BULK_WT),0) bulkWt
                      from EXP_PMANIFEST_AWB 
                            where MIX_PCS <> 0 OR PPK_PCS <> 0 OR ASSIGNED_BULK_PCS <> 0 OR  MIX_WT <> 0 OR PPK_WT <> 0 OR ASSIGNED_BULK_WT <> 0
                            group by FLT_KEY, FLT_DATE, AWB_NO, AWB_DATE
                    union
                    select FLT_KEY, FLT_DATE, AWB_NO, AWB_DATE,  NVL(SUM(BULK_PCS)+SUM(PPK_PCS),0) bulkPcs,  NVL(SUM(BULK_WT)+SUM(PPK_WT),0) bulkWt
                      from EXP_PMAN_TARMAC_AWB 
                            where BULK_PCS <> 0 OR PPK_PCS <> 0 OR  BULK_WT <> 0 OR PPK_WT <> 0 
                              group by FLT_KEY, FLT_DATE, AWB_NO, AWB_DATE
                  ) a  group by FLT_KEY, FLT_DATE, AWB_NO, AWB_DATE ) buPcWt
                where FLT_KEY = ddt.SHP_CNTG_FLT_KEY  and FLT_DATE = ddt.SHP_CNTG_FLT_DATE 
                and AWB_NO = NVL(FFM.AWB_NO,DDT.AWB_NO) and AWB_DATE = NVL(FFM.AWB_DATE,TO_DATE(DDT.AWB_DATE,'DDMONYY'))
                ) buPcWt,
PKG_COMMON.get_flt_eta(ddt.SHP_CNTG_FLT_KEY, ddt.SHP_CNTG_FLT_DATE, 'D', 'DD')  as etd, 
                        PKG_COMMON.get_flt_sta(ddt.SHP_CNTG_FLT_KEY, ddt.SHP_CNTG_FLT_DATE, 'D', 'DD')  as std,
FUN_GET_FLT_TDIFF_TRFYPE(ddt.SHP_CNTG_FLT_KEY,ddt.SHP_CNTG_FLT_DATE,nvl(ffm.flt_key,ddt.flt_key),nvl(ffm.flt_date,ddt.flt_date),'TIME_DIFF' ) timeDiifferance,
ddt.qt_bu qtBu,
(select bu_inst from EXP_BU_JO hd, EXP_BU_JO_DTL dtl 
		where hd.jo_no = dtl.jo_no and hd.flt_key =  ddt.shp_cntg_flt_key and hd.flt_date = ddt.shp_cntg_flt_date 
		and dtl.awb_NO = NVL(ffm.awb_No,ddt.awb_No) and dtl.awb_Date = NVL(ffm.awb_Date,ddt.awb_Date) and rownum = 1 ) as buildInstr, 
	ffmCntTab.ffmCount ffmCount,
(select Wt  from edi_cpm_DTL where   nvl(ULD_KEY,'BULK') = nvl(nvl(ffm.ULD_KEY,ddt.ULD_KEY),'BULK')
               and flt_key = NVL(ffm.flt_key,ddt.flt_key) and flt_date = NVL(ffm.flt_Date,ddt.flt_Date) and rownum = 1 )   grossWt,
(select CNTR  from edi_cpm_DTL where   nvl(ULD_KEY,'BULK') = nvl(nvl(ffm.ULD_KEY,ddt.ULD_KEY),'BULK')
               and flt_key = NVL(ffm.flt_key,ddt.flt_key) and flt_date = NVL(ffm.flt_Date,ddt.flt_Date) and rownum = 1 )   contrCode ,
               nvl(ffmCntTab.PCS,0) manfPcs,  nvl(ffmCntTab.wt,0) manfWt      
from
(select  
ffmshp.awb_no awb_no, ffmshp.awb_Date awb_Date, ffmshp.ORG ORG, ffmshp.DEST DEST, nvl(ffmshp.MAN_PCS,0) PCS,
nvl(ffmshp.MAN_WT,0) WT, ffmMSG.flt_key flt_key , ffmMSG.flt_Date flt_Date, ffmULD.ULD_KEY ULD_KEY, ffmMSG.TR_No tr_NO 
    from EDI_FFM_MSG ffmMSG, EDI_FFM_ULD ffmULD , edi_ffm_shp ffmshp 
    where ffmMSG.FFM_STATUS = 'P' and ffmshp.dest != 'HKG' 
    and ffmMSG.TR_NO = ffmULD.TR_NO and ffmMSG.TR_NO = ffmshp.TR_NO and ffmULD.Doc_line_no = ffmshp.uDoc_line_no 
    ) ffm 
FULL OUTER join  (select ddtView.awb_no awb_no, to_char(ddtView.awb_DATE,'DDMONYY') awb_DATE, ddtView.flt_key flt_key , 
                      to_char(ddtView.flt_Date,'DDMONYY') flt_Date, 
                	ddtView.TR_NO TR_NO, ddtView.sdoc_line_no Sdoc_line_no, ddtView.uDOC_LINE_NO UDOC_LINE_NO, ddtView.DOC_LINE_NO DOC_LINE_NO,
                	ddtView.ULD_KEY ULD_KEY , ddtView.SHP_CNTG_FLT_KEY SHP_CNTG_FLT_KEY, to_char(ddtView.SHP_CNTG_FLT_DATE,'DDMONYY') SHP_CNTG_FLT_DATE, 
                  	ddtView.SHP_TRF_TYPE SHP_TRF_TYPE,  ddtView.SHP_BRK_BULK SHP_BRK_BULK, to_char(ddtView.BASELINE_ETA,'DDMONYY') BASELINE_ETA,
                  	NVL( (TO_CHAR(TO_DATE(to_char(ddtView.BASELINE_ETA,'DDMONYY HH24MI'),'DDMONYY HH24MI') - 
                   			TO_DATE(TO_CHAR(FLT.SCH_DATE,'DDMONYY')|| ' ' || 
                   			TO_CHAR(NVL(FLT.EST_TIME,  FLT.SCH_TIME),'0000') ,'DDMONYY HH24MI')))  * 24  , 0 ) as etaChangedHrs,
                    ddtView.Acton_code_1 Acton_code_1, ddtView.Acton_code_2 Acton_code_2, ddtView.UNLDG_PT , ddtView.SHP_UNLDG_PT,
                    ddtView.SHP_TRF_PC , ddtView.SHP_TRF_WT, ddtView.qt_BU
                  from V_UNFIN_DDT_DTL ddtView
              		join FLT_OPR FLT on FLT.FLT_KEY = ddtView.FLT_KEY and FLT.SCH_DATE = ddtView.FLT_DATE and FLT_type = 'A') ddt 
  				on ddt.flt_key = ffm.flt_key and  ddt.flt_Date =  ffm.flt_Date and nvl(ddt.ULD_KEY, '*') =  nvl(ffm.ULD_KEY, '*') AND DDT.AWB_NO = FFM.AWB_NO
left join (select  COUNT(1) ffmCount ,  nvl(sum(ffmshp.MAN_PCS),0) PCS, nvl(sum(ffmshp.MAN_WT),0) WT, ffmMSG.flt_key, ffmMSG.flt_Date, ffmULD.ULD_KEY
         from EDI_FFM_MSG ffmMSG, EDI_FFM_ULD ffmULD , edi_ffm_shp ffmshp 
            where ffmMSG.FFM_STATUS = 'P'
            and ffmMSG.TR_NO = ffmULD.TR_NO and ffmMSG.TR_NO = ffmshp.TR_NO and ffmULD.Doc_line_no = ffmshp.uDoc_line_no 
            group by ffmMSG.flt_key, ffmMSG.flt_Date, ffmULD.ULD_KEY ) ffmCntTab 
            on  nvl(ffmCntTab.ULD_KEY,'BULK') = nvl(nvl(ffm.ULD_KEY,ddt.ULD_KEY),'BULK')
                  and ffmCntTab.flt_key = NVL(ffm.flt_key,ddt.flt_key) and ffmCntTab.flt_date = NVL(ffm.flt_Date,ddt.flt_Date)    				
 left join awb on awb.awb_NO = NVL(ffm.awb_No,ddt.awb_No) and awb.awb_Date = NVL(ffm.awb_Date,ddt.awb_Date)
  where ((ffm.flt_key = #fltKey# and ffm.flt_Date = #fltDate# ) 
  		OR (ddt.flt_key = #fltKey# and ddt.flt_Date = #fltDate# ))
  		and nvl(nvl(ffm.ULD_KEY,ddt.ULD_KEY),'BULK') = #uldKey#  
  		and nvl(ffm.awb_no,ddt.awb_no) = #awbNo# and nvl(ffm.awb_Date,ddt.awb_Date) = #awbDate#

   ]]>
   ) a where 1=1 
    	<isNotEmpty property="expFltKey">
       	 	<isNotEmpty property="expFltDate">
       	  		and cntgFltKey = #expFltKey# and cntgFltDate = #expFltDate#
    	  	</isNotEmpty>
     	 </isNotEmpty>
   ORDER BY  timeDiifferance,  awbNo , awbDate
</select>

<select id="fetchOutBoundTsnstCntrlAWBList" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstBO" resultClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
<![CDATA[ 
select
nvl(ddt.ULD_KEY,'BULK')  uldKeyShow,
nvl(ddt.ULD_KEY,'BULK')  uldKey, nvl(ddt.ULD_KEY,'BULK') ||'-'|| ddt.awb_no  uldKeyAwbNo, 
ddt.awb_no awbNo, SUBSTR(TRIM(ddt.awb_no),1,3)||'-'||SUBSTR(TRIM(ddt.awb_no),4) awbNoDisp,  to_char(ddt.awb_Date,'DDMONYY') awbDate, 
nvl(awb.ORIG,'') org, awb.DEST dest, ddt.UNLDG_PT unldgPt,ddt.UNLDG_PT  uldUnldgPt, ddt.SHP_UNLDG_PT shpUnldgPt, 
ddt.UNLDG_PT oldUldUnldgPt, ddt.SHP_UNLDG_PT oldShpUnldgPt, 
ddt.flt_key fltKey , to_char(ddt.flt_Date,'DDMONYY')  fltDate,
nvl(ddt.SHP_TRF_PC,0) pcs,nvl(ddt.SHP_TRF_WT,0) wt,
FUN_GET_FLT_TDIFF_TRFYPE(ddt.SHP_CNTG_FLT_KEY,ddt.SHP_CNTG_FLT_DATE,ddt.flt_key, ddt.flt_Date,'TIME_DIFF' ) timeDiifferance,
FUN_GET_FLT_TDIFF_TRFYPE(ddt.SHP_CNTG_FLT_KEY,ddt.SHP_CNTG_FLT_DATE,ddt.flt_key, ddt.flt_Date,'TR_TYPE' ) proposeTrfType,
 decode(ddt.CNTG_FLT_KEY,null,'Y') awbNoRecInd,
  (select CC_CODE from V_CST_IMP_CC_CODE_AWB V where V.AWB_NO = ddt.awb_no AND V.FLT_KEY = ddt.flt_key AND V.FLT_DATE = ddt.flt_Date
		   AND NVL(V.HAWB_NO, '000000000000000000') = '000000000000000000' and rownum = 1) AS showCC,
(SELECT STRAGG(STRINGDELIM(SHC, ',')) 
	    	FROM (SELECT DISTINCT SHC, ULD_KEY, FLT_KEY,FLT_DATE, AWB_NO, AWB_DATE,PRIORITY FROM V_IMP_FLT_ULD_SHC ORDER BY PRIORITY DESC
	      	) WHERE AWB_NO = ddt.awb_No AND AWB_DATE = ddt.awb_date
	      	AND FLT_KEY = ddt.flt_key AND FLT_DATE = ddt.flt_Date
	      	and nvl(ULD_KEY,'BULK') = nvl(ddt.ULD_KEY,'BULK') 
                ) splCode,			   
   ddt.TR_NO ddtTrNo, ddt.SDOC_LINE_NO ddtSdocLineNo, ddt.UDOC_LINE_NO ddtUdocLineNo, ddt.DOC_LINE_NO ddtDocLineNo,
   nvl(ddt.CNTG_FLT_KEY,ddt.SHP_CNTG_FLT_KEY) cntgFltKey, to_char(nvl(ddt.CNTG_FLT_Date,ddt.SHP_CNTG_FLT_Date),'DDMONYY') cntgFltDate,  
   nvl(ddt.CNTG_FLT_KEY,ddt.SHP_CNTG_FLT_KEY) oldCntgFltKey, to_char(nvl(ddt.CNTG_FLT_Date,ddt.SHP_CNTG_FLT_Date),'DDMONYY') oldCntgFltDate,  
   decode(nvl(ddt.CNTG_FLT_KEY,ddt.SHP_CNTG_FLT_KEY),null,'',PKG_COMMON.get_flt_carr(nvl(ddt.CNTG_FLT_KEY,ddt.SHP_CNTG_FLT_KEY))) cntgFltCarr, 
   REPLACE(nvl(ddt.CNTG_FLT_KEY,ddt.SHP_CNTG_FLT_KEY), PKG_COMMON.get_flt_carr(nvl(ddt.CNTG_FLT_KEY,ddt.SHP_CNTG_FLT_KEY)), '') cntgFltNo,
   decode(nvl(ddt.CNTG_FLT_KEY,ddt.SHP_CNTG_FLT_KEY),null,'',PKG_COMMON.get_flt_carr(nvl(ddt.CNTG_FLT_KEY,ddt.SHP_CNTG_FLT_KEY))) oldCntgFltCarr, 
   REPLACE(nvl(ddt.CNTG_FLT_KEY,ddt.SHP_CNTG_FLT_KEY), PKG_COMMON.get_flt_carr(nvl(ddt.CNTG_FLT_KEY,ddt.SHP_CNTG_FLT_KEY)), '') oldCntgFltNo,
   decode(ddt.CNTG_FLT_KEY,null,ddt.SHP_TRF_TYPE, ddt.TRF_TYPE) trfType, decode(ddt.CNTG_FLT_KEY,null,ddt.SHP_TRF_TYPE, ddt.TRF_TYPE) oldTrfType,
   ddt.BRK_BULK brkBulk,ddt.BRK_BULK oldBrkBulk,
   ddt.SHP_TRF_PC trfPcs, ddt.SHP_TRF_WT trfWt, ddt.SHP_TRF_PC oldTrfPcs, ddt.SHP_TRF_WT oldTrfWt,
    (select decode(DDT_FINALISE_DATE,null,'N','Y') from FLT_OPR_EVENTS 
    where FLT_KEY = ddt.flt_key and SCH_DATE = ddt.FLT_DATE and flt_Type ='A')  finalizedInd,TO_CHAR(NVL(FLT.EST_TIME,FLT.SCH_TIME),'0000') eta,ffmCntTab.ffmCount ffmCount,
(select nvl(Wt,0)  from edi_cpm_DTL where   nvl(ULD_KEY,'BULK') = nvl(ddt.ULD_KEY,'BULK')
               and flt_key = ddt.flt_key and flt_date = ddt.flt_Date and rownum = 1 )   grossWt,
(select CNTR  from edi_cpm_DTL where   nvl(ULD_KEY,'BULK') = nvl(ddt.ULD_KEY,'BULK')
               and flt_key = ddt.flt_key and flt_date = ddt.flt_Date and rownum = 1 )   contrCode  ,
                nvl(ffmCntTab.PCS,0) manfPcs,  nvl(ffmCntTab.wt,0) manfWt, 
 (CASE WHEN (SELECT COUNT(1) FROM AWB AWB, CUST_AIRL_SPL_CODE SPLCODE WHERE SPLCODE.SPL_TYPE='SPL_COURIER_SHC' AND SPLCODE.CARR_CODE = AWB.CARR_CODE AND AWB.awb_no = ddt.awb_no and AWB.awb_date = ddt.awb_date AND (SPLCODE.SPL_CODE = AWB.SPL_CODE1 OR SPLCODE.SPL_CODE = AWB.SPL_CODE2 OR SPLCODE.SPL_CODE = AWB.SPL_CODE3 OR SPLCODE.SPL_CODE = AWB.SPL_CODE4 OR SPLCODE.SPL_CODE = AWB.SPL_CODE5 OR SPLCODE.SPL_CODE = AWB.SPL_CODE6 OR SPLCODE.SPL_CODE = AWB.SPL_CODE7 OR SPLCODE.SPL_CODE = AWB.SPL_CODE8 OR SPLCODE.SPL_CODE = AWB.SPL_CODE9)) > 0 THEN 'Q' ELSE ddt.SHP_TYPE END) shpType                              
from
V_UNFIN_DDT_DTL ddt
join FLT_OPR FLT on ddt.SHP_CNTG_FLT_KEY = FLT.FLT_KEY and FLT.SCH_DATE = ddt.SHP_CNTG_FLT_DATE and FLT.FLT_TYPE ='D'
join FLT_OPR_EVENTS FLTEVENTS on FLT.FLT_KEY = FLTEVENTS.FLT_KEY and FLT.SCH_DATE = FLTEVENTS.SCH_DATE and FLT.FLT_TYPE =FLTEVENTS.FLT_TYPE 
left join (select  COUNT(1) ffmCount , nvl(sum(ffmshp.MAN_PCS),0) PCS, nvl(sum(ffmshp.MAN_WT),0) WT, ffmMSG.flt_key, ffmMSG.flt_Date, ffmULD.ULD_KEY
         from EDI_FFM_MSG ffmMSG, EDI_FFM_ULD ffmULD , edi_ffm_shp ffmshp 
            where ffmMSG.FFM_STATUS = 'P'
            and ffmMSG.TR_NO = ffmULD.TR_NO and ffmMSG.TR_NO = ffmshp.TR_NO and ffmULD.Doc_line_no = ffmshp.uDoc_line_no 
            group by ffmMSG.flt_key, ffmMSG.flt_Date, ffmULD.ULD_KEY ) ffmCntTab 
            on  nvl(ffmCntTab.ULD_KEY,'BULK') = nvl(ddt.ULD_KEY,'BULK')
                  and ffmCntTab.flt_key = ddt.flt_key and ffmCntTab.flt_date = ddt.flt_Date    
left join awb on awb.awb_NO = ddt.awb_No and awb.awb_Date = ddt.awb_Date

where ddt.SHP_CNTG_FLT_KEY = #fltKey# and ddt.SHP_CNTG_FLT_DATE = #fltDate# 
ORDER BY  ddt.awb_no
   ]]>
</select>


<select id="fetchOutBoundTsnstCntrlAWBList_Dtl" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstBO" resultClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
<![CDATA[ 
select
nvl(ddt.ULD_KEY,'BULK')  uldKeyShow,
nvl(ddt.ULD_KEY,'BULK')  uldKey, nvl(ddt.ULD_KEY,'BULK') ||'-'|| ddt.awb_no  uldKeyAwbNo, 
ddt.awb_no awbNo, SUBSTR(TRIM(ddt.awb_no),1,3)||'-'||SUBSTR(TRIM(ddt.awb_no),4) awbNoDisp,  to_char(ddt.awb_Date,'DDMONYY') awbDate, 
nvl(awb.ORIG,'') org, awb.DEST dest, ddt.UNLDG_PT unldgPt,ddt.UNLDG_PT  uldUnldgPt, ddt.SHP_UNLDG_PT shpUnldgPt, 
ddt.UNLDG_PT oldUldUnldgPt, ddt.SHP_UNLDG_PT oldShpUnldgPt, 
ddt.flt_key fltKey , to_char(ddt.flt_Date,'DDMONYY')  fltDate,
nvl(ddt.SHP_TRF_PC,0) pcs,nvl(ddt.SHP_TRF_WT,0) wt,
FUN_GET_ALLOTMENTS_EXP(ddt.flt_key,  to_char(ddt.flt_Date,'DDMONYY'), '','ETA_CHANGED_MIN') as etdChangedHrs,
FUN_GET_ALLOTMENTS_EXP(ddt.flt_key,  to_char(ddt.flt_Date,'DDMONYY'), '', 'TIME_DIFFERENCE') as timeDiifferance,
 '' as proposeTrfType,   ddt.TRF_TYPE trfType, 
   ddt.TR_NO ddtTrNo, ddt.SDOC_LINE_NO ddtSdocLineNo, ddt.UDOC_LINE_NO ddtUdocLineNo, ddt.DOC_LINE_NO ddtDocLineNo,
   ddt.SHP_CNTG_FLT_KEY cntgFltKey, to_char(ddt.SHP_CNTG_FLT_DATE,'DDMONYY') cntgFltDate,  
   ddt.SHP_CNTG_FLT_KEY oldCntgFltKey, to_char(ddt.SHP_CNTG_FLT_DATE,'DDMONYY') oldCntgFltDate,  
   decode(ddt.SHP_CNTG_FLT_KEY,null,'',PKG_COMMON.get_flt_carr(ddt.SHP_CNTG_FLT_KEY)) cntgFltCarr, REPLACE(ddt.SHP_CNTG_FLT_KEY, PKG_COMMON.get_flt_carr(ddt.SHP_CNTG_FLT_KEY), '') cntgFltNo,
   decode(ddt.SHP_CNTG_FLT_KEY,null,'',PKG_COMMON.get_flt_carr(ddt.SHP_CNTG_FLT_KEY)) oldCntgFltCarr, REPLACE(ddt.SHP_CNTG_FLT_KEY, PKG_COMMON.get_flt_carr(ddt.SHP_CNTG_FLT_KEY), '') oldCntgFltNo,
   ddt.SHP_TRF_TYPE trfType, ddt.SHP_TRF_TYPE oldTrfType,   ddt.BRK_BULK brkBulk,ddt.BRK_BULK oldBrkBulk,
   NVL(ddt.SHP_TRF_PC,0) trfPcs, NVL(ddt.SHP_TRF_WT,0) trfWt, ddt.SHP_TRF_PC oldTrfPcs, ddt.SHP_TRF_WT oldTrfWt,
    (select decode(DDT_FINALISE_DATE,null,'N','Y') from FLT_OPR_EVENTS where FLT_KEY = ddt.flt_key and SCH_DATE = ddt.FLT_DATE and FLT_TYPE ='D')  finalizedInd,TO_CHAR(NVL(FLT.EST_TIME,FLT.SCH_TIME),'0000') eta,
(select CC_CODE from V_CST_IMP_CC_CODE_AWB V where V.AWB_NO = ddt.awb_no AND V.FLT_KEY = ddt.flt_key AND V.FLT_DATE = ddt.flt_Date
		   AND NVL(V.HAWB_NO, '000000000000000000') = '000000000000000000' and rownum = 1) AS showCC,
(SELECT STRAGG(STRINGDELIM(SHC, ',')) 
	    	FROM (SELECT DISTINCT SHC, ULD_KEY, FLT_KEY,FLT_DATE, AWB_NO, AWB_DATE,PRIORITY FROM V_IMP_FLT_ULD_SHC ORDER BY PRIORITY DESC
	      	) WHERE AWB_NO = ddt.awb_No AND AWB_DATE = ddt.awb_date
	      	AND FLT_KEY = ddt.flt_key AND FLT_DATE = ddt.flt_Date
	      	and nvl(ULD_KEY,'BULK') = nvl(ddt.ULD_KEY,'BULK') 
                ) splCode, ffmCntTab.ffmCount ffmCount,
(select nvl(Wt,0)  from edi_cpm_DTL where   nvl(ULD_KEY,'BULK') = nvl(ddt.ULD_KEY,'BULK')
               and flt_key = ddt.flt_key and flt_date = ddt.flt_Date 
               and ver_no = (select max(ver_no)  from edi_cpm_DTL where   nvl(ULD_KEY,'BULK') = nvl(ddt.ULD_KEY,'BULK')
                                            and flt_key = ddt.flt_key and flt_date = ddt.flt_Date ) and rownum = 1 )   grossWt,
(select CNTR  from edi_cpm_DTL where   nvl(ULD_KEY,'BULK') = nvl(ddt.ULD_KEY,'BULK')
               and flt_key = ddt.flt_key and flt_date = ddt.flt_Date 
               and ver_no = (select max(ver_no)  from edi_cpm_DTL where   nvl(ULD_KEY,'BULK') = nvl(ddt.ULD_KEY,'BULK')
                                            and flt_key = ddt.flt_key and flt_date = ddt.flt_Date ) and rownum = 1 )   contrCode  ,
                nvl(ffmCntTab.PCS,0) manfPcs,  nvl(ffmCntTab.wt,0) manfWt,
                
                (CASE WHEN (SELECT COUNT(1) FROM AWB AWB, CUST_AIRL_SPL_CODE SPLCODE WHERE SPLCODE.SPL_TYPE='SPL_COURIER_SHC' AND SPLCODE.CARR_CODE = AWB.CARR_CODE 
                AND AWB.awb_no = ddt.awb_no and AWB.awb_date = ddt.awb_Date AND (SPLCODE.SPL_CODE = AWB.SPL_CODE1 OR SPLCODE.SPL_CODE = AWB.SPL_CODE2 OR SPLCODE.SPL_CODE = AWB.SPL_CODE3 OR SPLCODE.SPL_CODE = AWB.SPL_CODE4 OR SPLCODE.SPL_CODE = AWB.SPL_CODE5 OR SPLCODE.SPL_CODE = AWB.SPL_CODE6 OR SPLCODE.SPL_CODE = AWB.SPL_CODE7 OR SPLCODE.SPL_CODE = AWB.SPL_CODE8 OR SPLCODE.SPL_CODE = AWB.SPL_CODE9)) > 0 THEN 'Q' ELSE ddt.SHP_TYPE END) shpType                  
from
V_UNFIN_DDT_DTL ddt
join FLT_OPR FLT on ddt.SHP_CNTG_FLT_KEY = FLT.FLT_KEY and FLT.SCH_DATE = ddt.SHP_CNTG_FLT_DATE and FLT.FLT_TYPE ='D'
join FLT_OPR_EVENTS FLTEVENTS on FLT.FLT_KEY = FLTEVENTS.FLT_KEY and FLT.SCH_DATE = FLTEVENTS.SCH_DATE and FLT.FLT_TYPE =FLTEVENTS.FLT_TYPE 
left join (select  COUNT(1) ffmCount , nvl(sum(ffmshp.MAN_PCS),0) PCS, nvl(sum(ffmshp.MAN_WT),0) WT, ffmMSG.flt_key, ffmMSG.flt_Date, ffmULD.ULD_KEY
         from EDI_FFM_MSG ffmMSG, EDI_FFM_ULD ffmULD , edi_ffm_shp ffmshp 
            where ffmMSG.FFM_STATUS = 'P'
            and ffmMSG.TR_NO = ffmULD.TR_NO and ffmMSG.TR_NO = ffmshp.TR_NO and ffmULD.Doc_line_no = ffmshp.uDoc_line_no 
            group by ffmMSG.flt_key, ffmMSG.flt_Date, ffmULD.ULD_KEY ) ffmCntTab 
            on  nvl(ffmCntTab.ULD_KEY,'BULK') = nvl(ddt.ULD_KEY,'BULK')
                  and ffmCntTab.flt_key = ddt.flt_key and ffmCntTab.flt_date = ddt.flt_Date   
left join awb on awb.awb_NO = ddt.awb_No and awb.awb_Date = ddt.awb_Date   

where ddt.SHP_CNTG_FLT_KEY = #cntgFltKey# and ddt.SHP_CNTG_FLT_DATE = #cntgFltDate# 
and ddt.FLT_KEY = #fltKey# and ddt.FLT_DATE = #fltDate# 
and nvl(ddt.ULD_KEY,'BULK') = #uldKey#  
ORDER BY  ddt.ULD_KEY
   ]]>
</select>



	<select id="unldgPt_cntg_flt_validate"  parameterClass="map"  resultClass="java.lang.Integer">
		SELECT count(1)
		FROM   FLT_OPR T1, FLT_OPR_LEG T2 
		WHERE T1.FLT_KEY = T2.FLT_KEY AND  T1.SCH_DATE = T2.SCH_DATE  
		AND T1.FLT_TYPE = T2.FLT_TYPE AND  T1.FLT_TYPE = 'D' 
		AND T1.FLT_KEY=#fltKey#  AND  T1.SCH_DATE =TO_DATE(#flightDate#,'DDMONYY')
		and T2.OFF_POINT = #unldgPt#
	</select>
	
	
	<select id="cntg_flt_validate"  parameterClass="map"  resultClass="java.lang.Integer">
		SELECT NVL(count(1),0) FROM FLT_OPR WHERE 
		<isEmpty property="fltKey">
			CARR_CODE = #carrierCode# AND FLT_NO = #flightNo# 
		</isEmpty>
		<isNotEmpty property="fltKey">
			FLT_KEY = #fltKey# 
		</isNotEmpty>
			AND SCH_DATE= TO_DATE( #flightDate#, 'DDMONYY') AND FLT_TYPE='D'
   	</select>

	<select id="check_DDT_flt_opr_events_Count" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" resultClass="java.lang.Integer" >
	<![CDATA[
	   select count(1) from flt_opr_events where FLT_KEY = #fltKey# and SCH_DATE = #fltDate# and WHSE_COMPL_DATE is null 
	]]>
	</select>
	<select id="getFinalizeIndicator" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstBO" resultClass="java.lang.String" >
	   select decode(DDT_FINALISE_DATE,null,'N','Y') as finalizedInd from flt_opr_events where FLT_KEY = #fltKey# and SCH_DATE = #fltDate# and flt_type = 'A' 
	</select>
	
	<update id="update_DDT_SHP_flt_opr_events" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstBO" >
			update flt_opr_events set 		    
			  DDT_FINALISE_DATE = sysdate,
			  DDT_FINALISE_USER_ID = #lmUserId#,
		      LM_USER_ID = #lmUserId#,
		      LM_DATE = sysdate,
		      TR_TYPE = #trtype# 
		      where FLT_KEY = #fltKey# and sch_date = #fltDate# and flt_type = 'A'
	</update>
	
	<update id="update_DDT_MSG_FINALISE" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstBO" >
			update ddt_msg set 		  
		      LM_USER_ID = #lmUserId#,
		      LM_DATE = sysdate 
		      where FLT_KEY = #fltKey# and FLT_date = #fltDate# and ddt_status='P' 
	</update>
	
	<update id="update_DDT_MSG_VERSION_ADD" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstBO" >
			update ddt_msg set 		
			  FINALIZED_VERSION_NO = FINALIZED_VERSION_NO + 1,  
		      LM_USER_ID = #lmUserId#,
		      LM_DATE = sysdate 
		      where FLT_KEY = #fltKey# and FLT_date = #fltDate# and ddt_status='P' 
	</update>
	
	<select id="check_DDT_ULD_INVENTORY_Count" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" resultClass="java.lang.Integer" >
	<![CDATA[
	   select count(1) from ULD_INVENTORY where ULD_KEY = #uldKey# and CFM_STATUS != 'CHECKOUT'
	]]>
	</select>


	<update id="removeNBKForTTIFONULDINV" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
			update ULD_INVENTORY set 
		      HANDLING_MODE = '',		      
		      LM_USER_ID = #lmUserId#,
		      LM_DATE = sysdate 
		      where ULD_KEY = #uldKey#  AND HANDLING_MODE = 'NBK' AND TRANSIT_TYPE IN ('TT','IF')
	</update>
	
	<update id="removeNBKForTTIFONIMPULDLIST" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
			update IMP_ULD_LIST set 
		      HANDLING_MODE = '',		      
		      LM_USER_ID = #lmUserId#,
		      LM_DATE = sysdate 
		      where ULD_KEY = #uldKey#  AND  FLT_KEY = #fltKey# and FLT_date = to_date(#fltDate#,'DDMONYY') AND HANDLING_MODE = 'NBK' 
	</update>

	<update id="update_DDT_ULD_INVENTORY" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
			update ULD_INVENTORY set 
		      CFM_STATUS = 'CHECKOUT',
		      X_RAY_RES=null,X_RAY_REQ=null,			 
		      LM_USER_ID = #lmUserId#,
		      LM_DATE = sysdate 
		      where ULD_KEY = #uldKey# 
	</update>
	
	<select id="check_ULD_exist_for_DDT" parameterClass="java.lang.String" resultClass="java.lang.Integer" >
<![CDATA[
    select count(1)  from uld_inventory where ULD_KEY = #uldKey#
]]>
</select>

<select id="check_ULD_exist_for_DDT_Locn_Is_Null" parameterClass="java.lang.String" resultClass="java.lang.Integer" >
<![CDATA[
    select count(1)  from uld_inventory where ULD_KEY = #uldKey# and loc_code is null
]]>
</select>

<insert id="insert_ULD_for_DDT_QT" parameterClass="map" >
        INSERT INTO ULD_INVENTORY
        (ULD_KEY,ULD_TYPE, ULD_NO,ULD_CARR,
                OWNER_ID, STRG_DATE,LM_USER_ID, LM_DATE,TRANSIT_FLG,TRANSIT_TYPE,IMP_FLT_KEY,IMP_FLT_DATE)
       VALUES(#uldKey#, #uldType#,#uldNo#,  #uldCarr#,
                   #ownerId#, sysdate,#userId#, sysdate,'Y',#trfType#, #fltKey#, #fltDate#)
</insert> 

<insert id="insert_ULD_for_DDT" parameterClass="map" >
	    INSERT INTO ULD_INVENTORY
	    (ULD_KEY,ULD_TYPE, ULD_NO,ULD_CARR, CARR_CODE,FLT_NO, FLT_TYPE, FLT_DATE, FLT_KEY, 
	    		OWNER_ID, STRG_DATE,LM_USER_ID, LM_DATE,TRANSIT_FLG,TRANSIT_TYPE,loc_code,owned_inv,CFM_STATUS,Agent_inv,IMP_FLT_KEY,IMP_FLT_DATE)
	   VALUES(#uldKey#, #uldType#,#uldNo#,  #uldCarr#,#carrCode#, #fltNo#,#fltType#, to_date(#cntgFltDate#,'DDMONYY') ,#cntgFltKey#, 
			   	#ownerId#, sysdate,#userId#, sysdate,'Y',#trfType#,null,'N','CHECKOUT','N',#fltKey#, #fltDate#) 
</insert>
	
	<!-- After Insert into EXP_FLT_ULD -->
<update id="UPDATE_After_Insert_EXP_FLT_ULD" parameterClass="java.util.HashMap" >
	update uld_inventory 
  	set 
  	TRANSIT_FLG = 'Y' ,
  	
  	<isEqual property="trfType" compareValue="TT">
       	 HANDLING_MODE = '',
    </isEqual>
    
    <isEqual property="trfType" compareValue="IF">
       	 HANDLING_MODE = '',
    </isEqual>
       	
	TRANSIT_TYPE = #trfType#,
	flt_key = #cntgFltKey#,
    flt_date = #cntgFltDate#,
    flt_type  ='E',
    loc_code = null,
    owned_inv = 'N',
    CFM_STATUS = 'CHECKOUT',
    Agent_inv = 'N',
    IMP_FLT_KEY = #fltKey#,
    IMP_FLT_DATE = #fltDate#,
    EIC_FLG = 'N',
	EIC_TYPE = null,
	EIC_UNLDG_PT = null,
	BASE_PAL_FLG = 'N',
	BASE_PLT = null,
	TR_TYPE = 'DUMMY'
    where ULD_KEY = #uldKey#
</update>

 <update id="UPDATE_uld_inventory_If_Locn_Is_Not_Null" parameterClass="java.util.HashMap" >
	update uld_inventory 
  	set 
  	TRANSIT_FLG = 'Y' ,
	TRANSIT_TYPE = #trfType#,
	flt_key = #cntgFltKey#,
    flt_date = #cntgFltDate#,
    flt_type  ='E',    
    Agent_inv = 'N',
    IMP_FLT_KEY = #fltKey#,
    IMP_FLT_DATE = #fltDate#
    where ULD_KEY = #uldKey#
</update>

<!-- After delete into EXP_FLT_ULD -->	
<update id="UPDATE_EXP_FLT_ULD_REMOVED" parameterClass="java.util.HashMap" >
	update uld_inventory 
	  set flt_key = null,
	    flt_date = null
	    where ULD_KEY = #uldKey#
	   	and flt_key = #oldCntgFltKey#
   		and flt_date = #oldCntgFltDate#
</update>

<!--  Changed for QR -->
	<select id="getTransferCntrlProShcList" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" resultClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO">
		select off_point unldgPt, leg_ord legOrd, prohibit_shc1 prShc1, prohibit_shc2 prShc2, prohibit_shc3 prShc3
		from flt_opr_leg 
		where flt_type = 'D' and flt_key=#cntgFltKey# and sch_date = #cntgFltDate#
		order by leg_ord
	</select>

<select id="get_DDT_MSG_FLT_TR_NO" parameterClass="java.util.HashMap" resultClass="java.lang.String" >
<![CDATA[
    select TR_NO  from DDT_MSG where FLT_KEY = #fltKey# and FLT_DATE = #fltDate# and DDT_STATUS = 'P'
]]>
</select>

<select id="get_DDT_MSG_FLT_TR_DOC_LINE_NO" parameterClass="java.util.HashMap" resultClass="java.util.HashMap" >
<![CDATA[
    select ddtMSG.TR_NO TR_NO,to_char(ddtULD.DOC_LINE_NO) DOC_LINE_NO from DDT_MSG ddtMSG, DDT_ULD ddtULD where ddtMSG.FLT_KEY = #fltKey# and ddtMSG.FLT_DATE = #fltDate# and ddtMSG.DDT_STATUS = 'P' AND ddtMSG.tr_no=ddtuld.tr_no and NVL(ddtULD.uld_key,'*')=NVL(#uldKey#,'*')
]]>
</select>

<select id="get_DDT_MSG_FLT_TR_NO_FOR_S" parameterClass="java.util.HashMap" resultClass="java.lang.String" >
<![CDATA[
    select TR_NO  from DDT_MSG where FLT_KEY = #fltKey# and FLT_DATE = #fltDate#  and brd_point=#brdPt# and ddt_status='P' 
]]>
</select>

<select id="get_DDT_MSG_lm_date" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstBO" resultClass="java.lang.String" >
<![CDATA[
    select to_char(lm_date,'DDMONYY HH24MISS')  from DDT_MSG where FLT_KEY = #fltKey# and FLT_DATE = #fltDate# and DDT_STATUS = 'P' and rownum=1 
]]>
</select>

<select id="get_FFM_MSG_Count" parameterClass="java.util.HashMap" resultClass="java.lang.Integer" >
<![CDATA[
    select count(1)  from EDI_FFM_MSG where FLT_KEY = #fltKey# and FLT_DATE = #fltDate#and FFM_STATUS = 'P'
]]>
</select>

<select id="get_DDT_MSG_Count" parameterClass="java.util.HashMap" resultClass="java.lang.Integer" >
<![CDATA[
    select count(1) from DDT_MSG where TR_NO = #ddtTrNo# 
]]>
</select>

<insert id="insert_DDT_MSG" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
Insert into DDT_MSG (TR_NO,FLT_KEY,FLT_DATE,MSG_VER,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,BASELINE_ETA,DDT_STATUS,FINAL_VER_IND,TR_TYPE,BRD_POINT,SI_TYPE) 
values (#ddtTrNo#,#fltKey#,#fltDate#,#msgVer#,#lmUserId#,sysdate,#lmUserId#,sysdate, to_date( #baselineEta# , 'DDMONYY HH24:MI' ) ,nvl(#ddtStatus#,'P'),nvl(#finalVerInd#,'N'),#trtype#,#boardPnt#,'S')
</insert>

<update id="update_DDT_MSG" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
update DDT_MSG set 
      MSG_VER = nvl(#msgVer#,MSG_VER) , 
      BASELINE_ETA = to_date( #baselineEta# , 'DDMONYY HH24:MI' ), 
      DDT_STATUS = nvl(#ddtStatus#,DDT_STATUS),
      FINAL_VER_IND =  nvl(#finalVerInd#,FINAL_VER_IND),
      LM_USER_ID = #lmUserId#,
      LM_DATE = sysdate ,
      TR_TYPE = #trtype#
      where TR_NO = #ddtTrNo#       
</update>

<update id="update_DDT_MSG_LM_DATE" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstBO" >
			update ddt_msg set 		  
		      LM_USER_ID = #lmUserId#,
		      LM_DATE = sysdate 
		      where FLT_KEY = #fltKey# and FLT_date = #fltDate# 
		      and to_char(lm_date,'DDMONYY HH24MISS')  = #lastModifiedDateTime# and ddt_status='P'
	</update>

<delete id="delete_DDT_MSG" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
	delete from DDT_MSG where TR_NO = #ddtTrNo# and SI_TYPE!='I'
</delete>  

<select id="get_DDT_ULD_Count" parameterClass="java.util.HashMap" resultClass="java.lang.Integer" >
<![CDATA[
    select count(1) from DDT_ULD where TR_NO = #ddtTrNo# and DOC_LINE_NO = #ddtUdocLineNo#
]]>
</select>

<select id="check_DDT_ULD_Count" parameterClass="java.util.HashMap" resultClass="java.lang.Integer" >
<![CDATA[
    select count(1) from DDT_ULD where TR_NO = #ddtTrNo# 
]]>
</select>

<delete id="delete_DDT_ULD_ALL" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
	delete from DDT_ULD where TR_NO = #ddtTrNo# 
</delete>  

<select id="get_DDT_ULD_TR_NO_DOCLINENO" parameterClass="java.util.HashMap" resultClass="java.lang.String" >
<![CDATA[
       select nvl(maxUDoclineNo,0) from (select max(to_number(DOC_LINE_NO)) maxUDoclineNo from DDT_ULD where TR_NO = #ddtTrNo#) 
]]>
</select>

<select id="get_DDT_ULD_FLT_TR_NO_DOCLINENO" parameterClass="java.util.HashMap" resultClass="java.lang.String" >
<![CDATA[
    select DOC_LINE_NO  from DDT_ULD where TR_NO = #ddtTrNo# and nvl(BRD_POINT,nvl(#brdPt#,'XX')) = nvl(#brdPt#,'XX') and nvl(ULD_KEY,'XX') = nvl(#uldKey#,'XX')
]]>
</select>

<select id="check_DDT_ULD_LDG_PT" parameterClass="java.util.HashMap" resultClass="java.lang.Integer" >
<![CDATA[
    select count(1)  from DDT_ULD where TR_NO = #ddtTrNo# and BRD_POINT = #brdPt# and nvl(ULD_KEY,'XX') = nvl(#uldKey#,'XX')
]]>
</select>

<insert id="insert_DDT_ULD" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
Insert into DDT_ULD (TR_NO,DOC_LINE_NO,ULD_KEY,CNTG_FLT_KEY,CNTG_FLT_DATE,UNLDG_PT,TRF_TYPE,BRK_BULK,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,TR_TYPE,BRD_POINT,FINALIZE) 
values (#ddtTrNo#,#ddtUdocLineNo#,#uldKey#,#cntgFltKey#,#cntgFltDate#,#uldUnldgPt#,#trfType#,#brkBulk#,#lmUserId#,sysdate,#lmUserId#,sysdate,#trtype#,#brdPt#,#finalizedInd#)
</insert>

<update id="update_DDT_ULD" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
update DDT_ULD set 
      CNTG_FLT_KEY = #cntgFltKey# , 
      CNTG_FLT_DATE = #cntgFltDate#, 
      UNLDG_PT = #uldUnldgPt#,
      TRF_TYPE = #trfType#,
      BRK_BULK =  #brkBulk#,
      FINALIZE =  #finalizedInd#,
      LM_USER_ID = #lmUserId#,
      LM_DATE = sysdate ,
      TR_TYPE = #trtype#
      where TR_NO = #ddtTrNo# and DOC_LINE_NO = #ddtUdocLineNo#
</update>

<select id="getManualDeleteCountDDTOLDVersion_TCC" parameterClass="java.util.HashMap" resultClass="java.lang.String">
	select count(*) from ddt_shp_del where  NVL(uld_key,'XXX')  = NVL(#ULD_KEY#,'XXX') AND  AWB_NO = #AWB_NO# AND AWB_DATE = to_date(#AWB_DATE#,'DDMONYY')
	and flt_key = #FLT_KEY# AND flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
</select>


<delete id="delete_DDT_ULD" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
	delete from DDT_ULD where TR_NO = #ddtTrNo# and DOC_LINE_NO = #ddtUdocLineNo#
</delete>  

<select id="get_DDT_SHP_Count" parameterClass="java.util.HashMap" resultClass="java.lang.Integer" >
<![CDATA[
    select count(1) from DDT_SHP where TR_NO = #ddtTrNo# and DOC_LINE_NO = #ddtSdocLineNo# and UDOC_LINE_NO = #ddtUdocLineNo#
]]>
</select>

<select id="check_DDT_SHP_Count_delete" parameterClass="java.util.HashMap" resultClass="java.lang.Integer" >
<![CDATA[
    select count(1) from DDT_SHP where TR_NO = #ddtTrNo# and UDOC_LINE_NO = #ddtUdocLineNo#
]]>
</select>

<select id="get_DDT_ULD_SHP_trNo" parameterClass="java.util.HashMap" resultClass="java.lang.String" >
<![CDATA[
    select TR_NO from DDT_ULD where nvl(ULD_KEY,'XX') = nvl(#uldKey#,'XX')
]]>
</select>

<select id="get_DDT_ULD_UDoclineNo" parameterClass="java.util.HashMap" resultClass="java.lang.String" >
<![CDATA[
	select DOC_LINE_NO from DDT_ULD where TR_NO = #ddtTrNo# and nvl(ULD_KEY,'XX') = nvl(#uldKey#,'XX')
]]>
</select>

<select id="getULDTowOrderNo" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" resultClass="java.lang.String" >
<![CDATA[                 
    select hd.to_no param from TOW_ORDER_IN hd
    join TOW_ORDER_IN_DTL dtl on hd.to_no = dtl.to_no 
    where hd.flt_key = #fltKey# and hd.flt_date = #fltDate# and dtl.ULD_KEY =  #uldKey# and ACK_DATE is null
    and (nvl(dtl.HO_AREA,'*') != nvl(#hoArea#,'*') OR nvl(dtl.trns_grp,'*') != nvl(#transGrp#,'*')
          OR nvl(dtl.TRF_TYPE,'*') != nvl(#trfType#,'*') OR nvl(dtl.CNTG_FLT_KEY,'*') != nvl(#cntgFltKey#,'*')
            OR nvl( dtl.CNTG_FLT_DATE,'31AUG2000') = NVL(#cntgFltDate#,'31AUG2000')) 
      ]]>
</select>

<select id="getAWBTowOrderNo" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" resultClass="java.lang.String" >
<![CDATA[                 
    select hd.to_no param from TOW_ORDER_IN hd
    join TOW_ORDER_IN_DTL dtl on hd.to_no = dtl.to_no 
    where hd.flt_key = #fltKey# and hd.flt_date = #fltDate# 
    and dtl.AWB_NO =  #awbNo#  and ACK_DATE is null
    and (nvl(dtl.HO_AREA,'*') != nvl(#hoArea#,'*') OR nvl(dtl.trns_grp,'*') != nvl(#transGrp#,'*')
          OR nvl(dtl.TRF_TYPE,'*') != nvl(#trfType#,'*') OR nvl(dtl.CNTG_FLT_KEY,'*') != nvl(#cntgFltKey#,'*')
             OR nvl( dtl.CNTG_FLT_DATE,'31AUG2000') = NVL(#cntgFltDate#,'31AUG2000')) and rownum = 1
]]>
</select>

<update id="updateULDTowOrderDtl" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
    update TOW_ORDER_IN_DTL set 
    HO_AREA = #hoArea# , 
    trns_grp = #transGrp#,
    TRF_TYPE = #trfType# , 
    CNTG_FLT_KEY = #cntgFltKey# , 
    CNTG_FLT_DATE = #cntgFltDate#
    where to_no = #toNo# and ULD_KEY = #uldKey#
</update>

<update id="updateAWBTowOrderDtl" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
    update TOW_ORDER_IN_DTL set 
    HO_AREA = #hoArea# , 
    trns_grp = #transGrp#,
    TRF_TYPE = #trfType# , 
    CNTG_FLT_KEY = #cntgFltKey# , 
    CNTG_FLT_DATE = #cntgFltDate#
    where to_no = #toNo# and AWB_NO = #awbNo# 
</update>

<select id="TCC_fetchTowOrderDetails" parameterClass="java.lang.String" resultClass="cargo.cms.imprt.bo.InBoundULDListBO" >
        select to_no as toNo, ver_no as verNo, FLT_KEY as flightKey, to_char(flt_date,'DDMONYY') as arrDate from tow_order_in where to_no = #toNo# 
</select>

<select id="TCC_getShcForEmbargo" parameterClass="java.lang.String" resultClass="cargo.cms.imprt.bo.InBoundULDListBO" >
        SELECT STRAGG(STRINGDELIM(SHC, ',')) 
	    	FROM (SELECT DISTINCT SHC, ULD_KEY, FLT_KEY,FLT_DATE, AWB_NO, AWB_DATE,PRIORITY FROM V_IMP_FLT_ULD_SHC ORDER BY PRIORITY DESC
	      	) WHERE AWB_NO = #awbNo# AND AWB_DATE = #awbDate#
	      	AND FLT_KEY = #fltKey# AND FLT_DATE = #fltDate#
	      	and nvl(ULD_KEY,'BULK') = nvl(#uldKey#,'BULK') 
</select>

<update id="TCC_updateTowOrderVersion" parameterClass="cargo.cms.imprt.bo.InBoundULDListBO" >
    update tow_order_in set 
    ver_no = #verNo# ,
    LM_USER_ID =  #userID#, 
	LM_DATE  = SYSDATE
    where to_no = #toNo# 
</update>

<select id="get_DDT_SHP_Max_SDoclineNo" parameterClass="java.util.HashMap" resultClass="java.lang.String" >
<![CDATA[
    select nvl(maxSDoclineNo,0) from (select max(to_number(DOC_LINE_NO)) maxSDoclineNo from DDT_SHP where TR_NO = #ddtTrNo#) 
]]>
</select>

<select id="get_DDT_SHP_SDoclineNo" parameterClass="java.util.HashMap" resultClass="java.lang.String" >
<![CDATA[
    select DOC_LINE_NO from DDT_SHP where TR_NO = #ddtTrNo# and UDOC_LINE_NO = #ddtUdocLineNo# and awb_no = #awbNo# and AWB_DATE = #awbDate#
]]>
</select>

  <insert id="insert_DDT_SHP" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
		Insert into DDT_SHP (TR_NO,DOC_LINE_NO,UDOC_LINE_NO,AWB_NO,AWB_DATE,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,MANUAL_IND) 
		values (#ddtTrNo#,#ddtSdocLineNo#,#ddtUdocLineNo#,#awbNo#,#awbDate#,#lmUserId#,sysdate,#lmUserId#,sysdate,'Y')
  </insert>

<update id="update_DDT_SHP" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
update DDT_SHP set      
      LM_USER_ID = #lmUserId#,
      LM_DATE = sysdate 
      where TR_NO = #ddtTrNo# and DOC_LINE_NO = #ddtSdocLineNo# and UDOC_LINE_NO = #ddtUdocLineNo#
</update>

<delete id="delete_DDT_SHP" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
	delete from DDT_SHP where TR_NO = #ddtTrNo# and DOC_LINE_NO = #ddtSdocLineNo# and UDOC_LINE_NO = #ddtUdocLineNo#
</delete>  

<delete id="delete_DDT_SHP_ALL" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
	delete from DDT_SHP where TR_NO = #ddtTrNo# and DOC_LINE_NO = #ddtSdocLineNo# 
</delete>  

<select id="get_DDT_SHP_TRF_DTL_Count" parameterClass="java.util.HashMap" resultClass="java.lang.Integer" >
<![CDATA[
   select count(1) from DDT_SHP_TRF_DTL where TR_NO = #ddtTrNo# and DOC_LINE_NO = #ddtDocLineNo# and SDOC_LINE_NO = #ddtSdocLineNo#
]]>
</select>

<select id="check_DDT_SHP_TRF_DTL_Count_delete" parameterClass="java.util.HashMap" resultClass="java.lang.Integer" >
<![CDATA[
   select count(1) from DDT_SHP_TRF_DTL where TR_NO = #ddtTrNo# and SDOC_LINE_NO = #ddtSdocLineNo#
]]>
</select>

<select id="get_DDT_SHP_TRF_DTL_maxDocLineNo" parameterClass="java.util.HashMap" resultClass="java.lang.String" >
<![CDATA[
	select nvl(maxDoclineNo,0) from (select nvl(max(DOC_LINE_NO),'0') maxDoclineNo  from DDT_SHP_TRF_DTL where TR_NO = #ddtTrNo#)
]]>
</select>

<select id="get_DDT_SHP_TRF_DTL_docLineNo" parameterClass="java.util.HashMap" resultClass="java.lang.String" >
<![CDATA[
   select DOC_LINE_NO from DDT_SHP_TRF_DTL where TR_NO = #ddtTrNo# and SDOC_LINE_NO = #ddtSdocLineNo# 
											  	and CNTG_FLT_KEY = #cntgFltKey# and CNTG_FLT_DATE = #cntgFltDate#
											  	and TRF_PC = #trfPcs# and TRF_WT = #trfWt# and TRF_TYPE = #trfType#
]]>
</select>

<select id="get_Dummy_H_Container_value" parameterClass="java.lang.String" resultClass="java.lang.String" >
<![CDATA[
	select rule_value from cmsrules where rule_code = 'Dummy_H_Container'
]]>
</select>
<select id="etd_DDT_SHP_TRF_DTL" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" resultClass="java.lang.String" >
	select  to_char(T.eta,'DDMONYY HH24:MI') from  (select B.flt_key flt_key , B.sch_date flt_date,decode(est_time,null,to_date((to_char(B.SCH_DATE,'DDMONYY')||to_char(B.SCH_TIME,'0000')),'DDMONYYHH24mi') , to_date((to_char(B.EST_DATE,'DDMONYY')||to_char(B.EST_TIME,'0000')),'DDMONYYHH24mi')) eta  from flt_opr B)T
	where FLT_KEY = #cntgFltKey# and FLT_DATE = to_date(#cntgFltDate#,'DDMONYY')  and rownum=1 
</select>

<select id="eta_DDT_MSG" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" resultClass="java.lang.String" >
	select  to_char(T.eta,'DDMONYY HH24:MI') from  
	(select B.flt_key flt_key , B.sch_date flt_date,decode(est_time,null,to_date((to_char(B.SCH_DATE,'DDMONYY')||to_char(B.SCH_TIME,'0000')),'DDMONYYHH24mi') ,
		 to_date((to_char(B.EST_DATE,'DDMONYY')||to_char(B.EST_TIME,'0000')),'DDMONYYHH24mi')) eta  from flt_opr B where B.flt_type = 'A')T
	where FLT_KEY = #fltKey# and FLT_DATE = to_date(#fltDate#,'DDMONYY')  and rownum=1 
</select>

<select id="getHKGLegBoardingPnt" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" resultClass="java.lang.String" >
	select BRD_POINT from FLT_OPR_LEG where TR_NO IN (select TR_NO from FLT_OPR where FLT_KEY = #fltKey# and SCH_DATE = to_date(#fltDate#,'DDMONYY') AND FLT_TYPE = 'A') AND OFF_POINT = 'HKG' AND ROWNUM = 1 
</select>


<insert id="insert_DDT_SHP_TRF_DTL" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
	Insert into DDT_SHP_TRF_DTL 
	(TR_NO,
	DOC_LINE_NO,
	SDOC_LINE_NO,
	CNTG_FLT_KEY,
	CNTG_FLT_DATE,
	UNLDG_PT,
	TRF_TYPE,
	BRK_BULK,
	TRF_PC,
	TRF_WT,
	QT_BU,
	CR_USER_ID,
	CR_DATE,
	LM_USER_ID,
	LM_DATE,
	BASELINE_ETD,
	ACTON_CODE_2,
	ACTON_CODE_1,
	ACTUAL_PCS,
	ACTUAL_WT
	) 
	values (#ddtTrNo#,
	#ddtDocLineNo#,
	#ddtSdocLineNo#,
	#cntgFltKey#,
	#cntgFltDate#,
	#shpUnldgPt#,
	#trfType#,
	#brkBulk#,
	#trfPcs#,
	#trfWt#,
	#qtBu#,
	#lmUserId#,
	sysdate,
	#lmUserId#,
	sysdate,
	to_date(#baselineEtd#,'DDMONYY HH24:MI'),
	#actionOne#,
	#actionTwo#,
	#trfPcs#,
	#trfWt#
	)
</insert>

<delete id="delete_DDT_AWB_INFO" parameterClass="java.util.HashMap" >
 	DELETE FROM ddt_shp_del where  NVL(uld_key,'XXX')  = NVL(#ULD_KEY#,'XXX') AND  AWB_NO = #AWB_NO# AND AWB_DATE = to_date(#AWB_DATE#,'DDMONYY')
	and flt_key = #FLT_KEY# AND flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
</delete>


<insert id="insert_DDT_SHP_TRF_DEL_DTL" parameterClass="java.util.HashMap" >
	Insert into ddt_shp_del 
	(TR_NO,ULD_KEY,AWB_NO,AWB_DATE,FLT_KEY,FLT_DATE,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE) 
	values (#TR_NO#,#ULD_KEY#,#AWB_NO#,to_date(#AWB_DATE#,'DDMONYY'),#FLT_KEY#,to_date(#FLT_DATE#,'DDMONYY'),#LM_USER#,SYSDATE,#LM_USER#,SYSDATE)
</insert>

<update id="update_DDT_SHP_MANUAL_IND" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
	update DDT_SHP set MANUAL_IND = NVL(#manualIndAWB#,MANUAL_IND) where TR_NO = #ddtTrNo# and DOC_LINE_NO = #ddtSdocLineNo# and UDOC_LINE_NO = #ddtUdocLineNo#
</update>

<update id="updateManualHandeledInd" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstBO" >
	update flt_opr_events set MANUAL_HANDLED_TCC = 'Y' , LM_USER_ID = 'SYSUSER', LM_DATE = SYSDATE where flt_key = #fltKey# and sch_date = #fltDate# and FLT_TYPE = 'A'
</update>

<update id="update_DDT_SHP_TRF_DTL" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
	update DDT_SHP_TRF_DTL set 
      CNTG_FLT_KEY = #cntgFltKey# , 
      CNTG_FLT_DATE = #cntgFltDate#, 
      UNLDG_PT = #unldgPt#, 
      TRF_TYPE = #trfType#,
      TRF_PC = #trfPcs#,
      TRF_WT = #trfWt#,
      ACTUAL_PCS = #trfPcs#,
      ACTUAL_WT = #trfWt#,
      BRK_BULK =  #brkBulk#,
      QT_BU =  #qtBu#,
      BASELINE_ETD = TO_DATE(#baselineEtd#,'DDMONYY HH24:MI'),
      LM_USER_ID = #lmUserId#,
      LM_DATE = sysdate 
      where TR_NO = #ddtTrNo# and DOC_LINE_NO = #ddtDocLineNo# and SDOC_LINE_NO = #ddtSdocLineNo#
</update>

<delete id="delete_DDT_SHP_TRF_DTL" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
	delete from DDT_SHP_TRF_DTL where TR_NO = #ddtTrNo# and DOC_LINE_NO = #ddtDocLineNo# and SDOC_LINE_NO = #ddtSdocLineNo#
</delete>  


<select id="get_EXP_PMAN_TARMAC_AWB_Count" parameterClass="java.util.HashMap" resultClass="java.lang.Integer" >
<![CDATA[
    select count(1) from  EXP_PMAN_TARMAC_AWB  where AWB_NO = #awbNo# and AWB_DATE = #awbDate#  and FLT_KEY = #fltKey# and FLT_DATE = #fltDate# and UNLDG_PT = #unldgPt#
]]>
</select>

<select id="get_EXP_PMAN_TARMAC_AWB_Offload_Count" parameterClass="java.util.HashMap" resultClass="java.lang.Integer" >
<![CDATA[
    select count(1) from  EXP_PMAN_TARMAC_AWB  where bulk_pcs > 0 AND AWB_NO = #awbNo# and AWB_DATE = #awbDate#  and FLT_KEY = #fltKey# and FLT_DATE = #fltDate# and UNLDG_PT = #unldgPt#
]]>
</select>

<select id="get_EXP_PMAN_AWB_unassign_pcs" parameterClass="java.util.HashMap" resultClass="java.lang.String" >
<![CDATA[
    select unassigned_bulk_pcs from  EXP_PMANIFEST_AWB  where AWB_NO = #awbNo# and AWB_DATE = #awbDate#  and FLT_KEY = #fltKey# and FLT_DATE = #fltDate# and UNLDG_PT = #unldgPt#
]]>
</select>

<select id="get_AWB_Count" parameterClass="java.util.HashMap" resultClass="java.lang.Integer" >
<![CDATA[
    select count(1) from awb where awb_no = #awbNo# and awb_Date = #awbDate#
]]>
</select>

<insert id="insert_AWB" parameterClass="java.util.HashMap" >
Insert into awb (AWB_NO,AWB_DATE,AWB_TYPE,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,TR_TYPE)
values (#awbNo#,#awbDate#, #awbType#, #lmUserId#,sysdate,#lmUserId#,sysdate,#trType#)
</insert>

<select id="get_EXP_CAR_Count" parameterClass="java.util.HashMap" resultClass="java.lang.Integer" >
<![CDATA[
    select count(1) from exp_car where awb_no = #awbNo# and awb_Date = #awbDate#
]]>
</select>
<select id="get_EXP_CAR_PI_Count" parameterClass="java.util.HashMap" resultClass="java.lang.Integer" >
<![CDATA[
    select count(1) from awb where awb_no = #awbNo# and awb_Date = #awbDate# and nvl(car_yn,'N')='Y'
]]>
</select>
<insert id="insert_EXP_CAR" parameterClass="java.util.HashMap" >
	Insert into EXP_CAR(AWB_NO,AWB_DATE, ACCEPT_MODE, AWB_PRFX,	CARR_CODE, CATALOG,	CONTENT, HANDLER_CODE,ORIGIN, DEST,	CR_USER_ID, CR_DATE, LM_USER_ID,LM_DATE)
		values (#awbNo#,#awbDate#, #ACCEPT_MODE#, #AWB_PRFX#,#CARR_CODE#,#CATALOG#, #CONTENT#, #HANDLER_CODE#	,#org# ,#dest# ,#lmUserId#,sysdate,#lmUserId#,sysdate)
</insert>

<insert id="insert_EXP_PMAN_TARMAC_AWB" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
Insert into EXP_PMAN_TARMAC_AWB (FLT_KEY,FLT_DATE,UNLDG_PT,AWB_NO,AWB_DATE,BLDUP_INSTR,MAN_RMK,BULK_PCS,BULK_WT,PPK_PCS,PPK_WT,ASSIGNED_BULK_PCS,ASSIGNED_BULK_WT,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,GROUP_NO,TR_TYPE,ENDORSED_DATE,ENDORSED_BY) 
values (#cntgFltKey# ,#cntgFltDate# ,#shpUnldgPt#,#awbNo#,#awbDate#,  null , null ,'0' ,'0',#trfPcs#, #trfWt#, '0' ,'0',#lmUserId#,sysdate,#lmUserId#,sysdate,#groupNo#,#trtype#,DECODE(#endorseUser#,'','',SYSDATE),#endorseUser#)
</insert>

<update id="update_EXP_PMAN_TARMAC_AWB" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
update EXP_PMAN_TARMAC_AWB set       
      PPK_PCS = PPK_PCS + #trfPcs#,
      PPK_WT = PPK_WT + #trfWt#,      
      LM_USER_ID = #lmUserId#,
      LM_DATE = sysdate , TR_TYPE = #trtype#,ENDORSED_DATE=DECODE(#endorseUser#,'','',SYSDATE),ENDORSED_BY=#endorseUser#
      where AWB_NO = #awbNo# and AWB_DATE = #awbDate# 
      and FLT_KEY = #cntgFltKey# and FLT_DATE = #cntgFltDate# and UNLDG_PT = #shpUnldgPt#
</update>   

<update id="update_EXP_PMAN_TARMAC_AWB_OLD" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
update EXP_PMAN_TARMAC_AWB set        
      PPK_PCS = PPK_PCS - #oldTrfPcs#,
      PPK_WT = PPK_WT - #oldTrfWt#,
      LM_USER_ID = #lmUserId#,
      LM_DATE = sysdate , TR_TYPE = #trtype# ,ENDORSED_DATE=DECODE(#endorseUser#,'','',SYSDATE),ENDORSED_BY=#endorseUser#
      where AWB_NO = #awbNo# and AWB_DATE = #awbDate# 
       and FLT_KEY = #oldCntgFltKey# and FLT_DATE = #oldCntgFltDate# and UNLDG_PT = #oldShpUnldgPt#
</update>      

<insert id="insert_EXP_PMAN_TARMAC_AWB_HCONTAINER" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
Insert into EXP_PMAN_TARMAC_AWB (FLT_KEY,FLT_DATE,UNLDG_PT,AWB_NO,AWB_DATE,BLDUP_INSTR,MAN_RMK,BULK_PCS,BULK_WT,PPK_PCS,PPK_WT,ASSIGNED_BULK_PCS,ASSIGNED_BULK_WT,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,GROUP_NO,TR_TYPE,ENDORSED_DATE,ENDORSED_BY) 
values (#cntgFltKey# ,#cntgFltDate# ,#shpUnldgPt#,#awbNo#,#awbDate#,  null , null ,#trfPcs#, #trfWt#, '0' ,'0',#trfPcs# ,#trfWt#,#lmUserId#,sysdate,#lmUserId#,sysdate,#groupNo#,#trtype#,DECODE(#endorseUser#,'','',SYSDATE),#endorseUser#)
</insert>

<update id="update_EXP_PMAN_TARMAC_AWB_HCONTAINER" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
update EXP_PMAN_TARMAC_AWB set       
      BULK_PCS = BULK_PCS + #trfPcs#,
      BULK_WT = BULK_WT + #trfWt#,
      ASSIGNED_BULK_PCS = ASSIGNED_BULK_PCS + #trfPcs#,
	ASSIGNED_BULK_WT = ASSIGNED_BULK_WT + #trfWt#,
      LM_USER_ID = #lmUserId#,
      LM_DATE = sysdate , TR_TYPE = #trtype# ,ENDORSED_DATE=DECODE(#endorseUser#,'','',SYSDATE),ENDORSED_BY=#endorseUser#
      where AWB_NO = #awbNo# and AWB_DATE = #awbDate# 
      and FLT_KEY = #cntgFltKey# and FLT_DATE = #cntgFltDate# and UNLDG_PT = #shpUnldgPt#
</update>   

<update id="update_EXP_PMAN_TARMAC_AWB_OLD_HCONTAINER" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
update EXP_PMAN_TARMAC_AWB set        
      BULK_PCS = BULK_PCS - #oldTrfPcs#,
      BULK_WT = BULK_WT - #oldTrfWt#,
      ASSIGNED_BULK_PCS = ASSIGNED_BULK_PCS - #oldTrfPcs#,
	ASSIGNED_BULK_WT = ASSIGNED_BULK_WT - #oldTrfWt#,
      LM_USER_ID = #lmUserId#,
      LM_DATE = sysdate , TR_TYPE = #trtype# ,ENDORSED_DATE=DECODE(#endorseUser#,'','',SYSDATE),ENDORSED_BY=#endorseUser#
      where AWB_NO = #awbNo# and AWB_DATE = #awbDate# 
       and FLT_KEY = #oldCntgFltKey# and FLT_DATE = #oldCntgFltDate# and UNLDG_PT = #oldShpUnldgPt#
</update>      

<select id="get_EXP_PMAN_TARMAC_ULD_Count" parameterClass="java.util.HashMap" resultClass="java.lang.Integer" >
<![CDATA[
    select count(1) from  EXP_PMAN_TARMAC_ULD  where ULD_BT_NO = #uldKey# and flt_key = #fltKey# and flt_Date = #fltDate# 
]]>
</select>

<select id="get_EXP_FLT_ULD_Count" parameterClass="java.util.HashMap" resultClass="java.lang.Integer" >
<![CDATA[
    select count(1) from  EXP_FLT_ULD  where ULD_KEY = #uldKey# and flt_key = #cntgFltKey# and flt_Date = #cntgFltDate# and flt_type = #fltType#
]]>
</select>

<select id="get_EXP_PMAN_TARMAC_ULD_Count_update" parameterClass="java.util.HashMap" resultClass="java.lang.Integer" >
<![CDATA[
    select count(1) from  EXP_PMAN_TARMAC_ULD  where ULD_BT_NO = #uldKey# and FLT_KEY = #fltKey# and FLT_DATE = #fltDate# and UNLDG_PT = #unldgPt#
]]>
</select>

<insert id="insert_EXP_PMAN_TARMAC_ULD" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
		Insert into EXP_PMAN_TARMAC_ULD
		(FLT_KEY,FLT_DATE,UNLDG_PT,ULD_BT_NO,BLDUP_INSTR,MAN_RMK,TARE_WT,GROSS_WT,CONTR_CODE,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE)
		values ( #cntgFltKey# , #cntgFltDate# , #unldgPt#, #uldKey#, null ,
		null ,  '0' , '0' , null ,#lmUserId#,sysdate,#lmUserId#,sysdate)
</insert>

<insert id="insert_EXP_PMAN_TARMAC_HCONTAINER" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
		Insert into EXP_PMAN_TARMAC_ULD
		(FLT_KEY,FLT_DATE,UNLDG_PT,ULD_BT_NO,BLDUP_INSTR,MAN_RMK,TARE_WT,GROSS_WT,CONTR_CODE,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE)
		values ( #cntgFltKey# , #cntgFltDate# , #unldgPt#, #hcontainer#, null
		, null , '0' , '0' , null
		,#lmUserId#,sysdate,#lmUserId#,sysdate)
</insert>

<update id="update_EXP_PMAN_TARMAC_ULD" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
	update EXP_PMAN_TARMAC_ULD set 
	TARE_WT = NVL(#tareWt#,0),
	NET_WT = NVL(NET_WT,0)+NVL(#trfWt#,0),
	GROSS_WT = NVL(NET_WT,0)+NVL(#tareWt#,0)+NVL(#trfWt#,0),
	LM_USER_ID = #lmUserId#,
	LM_DATE = sysdate 
	where ULD_BT_NO = #uldKey# and FLT_KEY = #cntgFltKey# and FLT_DATE = #cntgFltDate# and UNLDG_PT = #uldUnldgPt#
</update>   

<update id="update_EXP_PMAN_TARMAC_HCONTAINER" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
	update EXP_PMAN_TARMAC_ULD set	
	TARE_WT = NVL(#tareWt#,0),
	NET_WT = NVL(NET_WT,0)+NVL(#trfWt#,0),
	GROSS_WT = NVL(NET_WT,0)+NVL(#tareWt#,0)+NVL(#trfWt#,0),
	LM_USER_ID = #lmUserId#,
	LM_DATE = sysdate 
	where ULD_BT_NO = #hcontainer# and  FLT_KEY = #cntgFltKey# and FLT_DATE = #cntgFltDate# and UNLDG_PT = #uldUnldgPt#
</update>   

<select id="getWeightDetails" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" resultClass="java.util.HashMap" >
    select to_char(MAN_WT) MAN_WT ,#cntgFltKey# FLT_KEY,#cntgFltDate# FLT_DATE,#uldKey#  ULD_KEY  
    FROM EXP_FLT_ULD where flt_key=#cntgFltKey# and flt_date=#cntgFltDate# and uld_key = #uldKey#
</select>

<select id="getCPMDetails" parameterClass="java.util.HashMap" resultClass="java.util.HashMap" >
select to_char(Wt) GROSS_WEIGHT,#fltKey# FLT_KEY,#fltDate# FLT_DATE,#uldKey#  ULD_KEY, CNTR CONTR_CODE  
FROM edi_cpm_DTL 
where flt_key=#fltKey# and flt_date=#fltDate# and uld_key = #uldKey# 
		and ver_no = (select max(ver_no)  from edi_cpm_DTL where   ULD_KEY = #uldKey#  and flt_key = #fltKey# and flt_date = #fltDate#)
		and rownum = 1
</select>

<select id="getCPMWeightDetails" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" resultClass="java.util.HashMap" >
    select to_char(Wt) GROSS_WEIGHT,#fltKey# FLT_KEY,#fltDate# FLT_DATE,#uldKey#  ULD_KEY, CNTR CONTR_CODE  
FROM edi_cpm_DTL where flt_key=#fltKey# and flt_date=#fltDate# and uld_key = #uldKey# and rownum = 1
</select>

<update id="update_EXP_FLT_ULD_SET_WT" parameterClass="java.util.HashMap" >
<![CDATA[
	update EXP_FLT_ULD set
     	TARE_WT = NVL(#TARE_WT#,0),
     	GROSS_WT = NVL(#GROSS_WEIGHT#,0),
     	CONTR_CODE = NVL(#CONTR_CODE#,CONTR_CODE),
      	LM_USER_ID = #lmUserId#,
      	LM_DATE = sysdate ,
      	UNLDG_PT = #UNLDG_PT#
      	where ULD_KEY = #ULD_KEY# and FLT_KEY = #FLT_KEY# and FLT_DATE = #FLT_DATE#
]]>
		<isNotEmpty property="OLD_UNLDG_PT">
		and UNLDG_PT = #OLD_UNLDG_PT#
		</isNotEmpty>
</update> 

<update id="sqlUpdateTareWtExpTarmacUld" parameterClass="java.util.HashMap" >
	update EXP_PMAN_TARMAC_ULD set 
	TARE_WT = NVL(#TARE_WT#,0),
	GROSS_WT = NVL(#GROSS_WEIGHT#, 0),
	CONTR_CODE = NVL(#CONTR_CODE#,CONTR_CODE),
	LM_USER_ID = #lmUserId#,
	LM_DATE = sysdate ,
	UNLDG_PT = #UNLDG_PT#
	where ULD_BT_NO = #ULD_KEY# and FLT_KEY = #FLT_KEY# and FLT_DATE = #FLT_DATE# 
	<isNotEmpty property="OLD_UNLDG_PT">
		and UNLDG_PT = #OLD_UNLDG_PT#
	</isNotEmpty>
</update>  

<update id="sqlUpdateTareWtUldInventoryTarmac" parameterClass="java.util.HashMap" >
<![CDATA[
	update ULD_INVENTORY set 
	TRANSIT_FLG = decode(#TRF_TYPE#,null,'N','Y'),
	TRANSIT_TYPE = #TRF_TYPE#,
	empty_flg = decode(#TRF_TYPE#,'TT','N','IF','N',empty_flg),
	TARE_WEIGHT = NVL(#TARE_WT#,0),
	GROSS_WEIGHT = NVL(#GROSS_WEIGHT#,0),
	CONTR_CODE = #CONTR_CODE#,
	FIRST_WT =  #GROSS_WEIGHT#,
	SECOND_WT =  NVL(#SECOND_WEIGHT#,0),
	THIRD_WT = NULL,
	REF_WT=NULL,
	FINAL_WEIGHT = #FINAL_WT_IND#,
	LM_USER_ID = #lmUserId#,
	LM_DATE = sysdate,
	TR_TYPE = 'DUMMY',
	X_RAY_RES =null,
	X_RAY_REQ =null,
	ppk_ind = 'N',
	mix_PPK_ind = 'N',
	MAN_WT_IND  = 'N',
	man_wt_ind2 = 'N',
	man_wt_ind3 = 'N',
	BASE_PLT=NULL,		
	EIC_FLG='N', 		
	EIC_TYPE=NULL  	
	where  ULD_KEY = #ULD_KEY# 
	]]> 
</update> 
<update id="sqlRemoveBasePltAsc_TCCL" parameterClass="java.util.HashMap" >		
		UPDATE ULD_INVENTORY SET 		
		BASE_PLT=NULL,		
		EIC_FLG='N', 		
		EIC_TYPE=NULL
		WHERE BASE_PLT = #ULD_KEY# 	
</update> 

<update id="UPDATE_uld_inventory_set_trfType_TT_IF" parameterClass="java.util.HashMap" >
	update uld_inventory 
  	set 
  	TRANSIT_FLG = decode(#trfType#,null,'N','Y'),
	TRANSIT_TYPE = #trfType#,
	empty_flg = decode(#trfType#,'TT','N','IF','N',empty_flg)
    where ULD_KEY = #uldKey#
</update>

<update id="UPDATE_uld_inventory_set_trfType" parameterClass="java.util.HashMap" >
	update uld_inventory D
                set
                flt_key = (case when (select count(1) from imp_ramp_chk_dtl A where A.uld_key=D.ULD_KEY and A.flt_key=#imprtFlt# AND A.FLT_DATE=#imprtFltDate# AND A.chkin_yn = 'Y' and A.brkdn_compl_yn = 'N') > 0 then IMP_FLT_KEY else (case when #trfType# is not null then flt_key else null end) end),
                flt_date = (case when (select count(1) from imp_ramp_chk_dtl A where A.uld_key=D.ULD_KEY and A.flt_key=#imprtFlt# AND A.FLT_DATE=#imprtFltDate# AND A.chkin_yn = 'Y' and A.brkdn_compl_yn = 'N') > 0 then IMP_FLT_DATE ELSE (case when #trfType# is not null then flt_date else NULL end) end),
                empty_flg = decode(#trfType#,'QT','N',empty_flg),
                flt_type = (case when (select count(1) from imp_ramp_chk_dtl A where A.uld_key=D.ULD_KEY and A.flt_key=#imprtFlt# AND A.FLT_DATE=#imprtFltDate# AND A.chkin_yn = 'Y' and A.brkdn_compl_yn = 'N') > 0 then 'I' else (case when #trfType# is not null then FLT_TYPE else null end) end),
                TRANSIT_FLG = decode(#trfType#,null,'N','Y'),
                TRANSIT_TYPE = #trfType#,
                GROSS_WEIGHT = 0,
                CONTR_CODE = null,
                FIRST_WT = null,
                SECOND_WT =  null,
                FINAL_WEIGHT = 'N',
                READY_WH = 'N',
                TR_TYPE = 'TCFIN',
                BASE_PLT=NULL,
                EIC_FLG='N',
                EIC_TYPE=NULL
    where D.ULD_KEY = #uldKey#
</update>


<select id="get_EXP_PMAN_TARMAC_ULD_AWB_Count_For_delete" parameterClass="java.util.HashMap" resultClass="java.lang.Integer" >
<![CDATA[
    select count(1) from  EXP_PMAN_TARMAC_ULD_AWB 
      where ULD_BT_NO = #uldKey#  
      and FLT_KEY = #oldCntgFltKey# and FLT_DATE = #oldCntgFltDate# and UNLDG_PT = #oldUldUnldgPt#
]]>
</select>

<insert id="insert_EXP_FLT_ULD" parameterClass="java.util.HashMap" >
	Insert into EXP_FLT_ULD (FLT_KEY,FLT_DATE,ULD_KEY,FLT_TYPE,UNLDG_PT,SOURCE,bb_ind,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE) 
	values ( #cntgFltKey# , #cntgFltDate# , #uldKey# ,'E', #unldgPt#, 'DDT' ,#brkBulk#, #lmUserId#,sysdate,#lmUserId#,sysdate)
</insert>

<select id="get_EXP_PMAN_TARMAC_ULD_AWB_Count" parameterClass="java.util.HashMap" resultClass="java.lang.Integer" >
<![CDATA[
    select count(1) from  EXP_PMAN_TARMAC_ULD_AWB 
      where AWB_NO = #awbNo# and AWB_DATE = #awbDate# and ULD_BT_NO = #uldKey#  
      and FLT_KEY = #cntgFltKey# and FLT_DATE = #cntgFltDate# and UNLDG_PT = #unldgPt#
]]>
</select>

<insert id="insert_EXP_PMAN_TARMAC_ULD_AWB" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
	Insert into EXP_PMAN_TARMAC_ULD_AWB (FLT_KEY,FLT_DATE,UNLDG_PT,ULD_BT_NO,AWB_NO,AWB_DATE,ASSIGNED_PCS,ASSIGNED_WT,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE) 
	values (#cntgFltKey# , #cntgFltDate# , #unldgPt#, #uldKey#,#awbNo#,#awbDate#,  #trfPcs# , #trfWt# ,#lmUserId#,sysdate,#lmUserId#,sysdate)
</insert>

<insert id="insert_EXP_PMAN_TARMAC_ULD_AWB_HAWB" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
	Insert into EXP_PMAN_TAR_ULD_AWB_HAWB (TR_NO,HAWB_NO,PC,WT,FLT_KEY,FLT_DATE,ULD_BT_NO,AWB_NO,AWB_DATE,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE) 
	values (EXP_PMAN_TAR_ULD_AWB_HAWB_SEQ.nextval,#tagNo#,#tagPcs#,#tagWt#,#cntgFltKey#,#cntgFltDate#,#uldKey#,#awbNo#,#awbDate#,#lmUserId#,sysdate,#lmUserId#,sysdate)
</insert>

<update id="updatePmanPcWtToAWB" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
			update AWB set
			PMAN_BULK_PCS = 0,
	        PMAN_BULK_WT = 0,
			PMAN_PCS= 0,
			PMAN_WT= 0, 
			LM_USER_ID = #lmUserId#, LM_DATE = sysdate where AWB_NO = #awbNo# and AWB_DATE = #awbDate#
</update> 

<update id="update_AWB_HOUSE_FLAG" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
		update AWB set HOUSE_FLG = 'Y',LM_USER_ID = #lmUserId#, LM_DATE = sysdate where AWB_NO = #awbNo# and AWB_DATE = #awbDate#
</update> 

<insert id="insert_EXP_PMAN_TARMAC_HCONTAINER_AWB" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
	Insert into EXP_PMAN_TARMAC_ULD_AWB (FLT_KEY,FLT_DATE,UNLDG_PT,ULD_BT_NO,AWB_NO,AWB_DATE,ASSIGNED_PCS,ASSIGNED_WT,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE) 
	values (#cntgFltKey# , #cntgFltDate# , #unldgPt#, #hcontainer#,#awbNo#,#awbDate#,  #trfPcs# , #trfWt# ,#lmUserId#,sysdate,#lmUserId#,sysdate)
</insert>

<update id="update_EXP_PMAN_TARMAC_HCONTAINER_AWB" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
<![CDATA[
update EXP_PMAN_TARMAC_ULD_AWB set 
     	ASSIGNED_PCS = ASSIGNED_PCS + #trfPcs#,
     	ASSIGNED_WT = ASSIGNED_WT + #trfWt#,
      	LM_USER_ID = #lmUserId#,
      	LM_DATE = sysdate 
      	where AWB_NO = #awbNo# and AWB_DATE = #awbDate# and ULD_BT_NO = #hcontainer# 
       			and FLT_KEY = #cntgFltKey# and FLT_DATE = #cntgFltDate# and UNLDG_PT = #shpUnldgPt#
]]>
</update>   


<update id="update_EXP_FLT_ULD" parameterClass="java.util.HashMap" >
<![CDATA[
	update EXP_FLT_ULD set 
		bb_ind = nvl(#brkBulk#,bb_ind),
     	MAN_PCS = NVL(MAN_PCS,0) + NVL(#trfPcs#,0),
     	MAN_WT = NVL(MAN_WT,0) + NVL(#trfWt#,0),
     	NET_WT = NVL(MAN_WT,0) + NVL(#trfWt#,0),
      	LM_USER_ID = #lmUserId#,
      	LM_DATE = sysdate 
      	where ULD_KEY = #uldKey# and FLT_KEY = #cntgFltKey# and FLT_DATE = #cntgFltDate# and UNLDG_PT = #uldUnldgPt#
]]>
</update>  

<update id="update_EXP_FLT_ULD_OLD" parameterClass="java.util.HashMap" >
<![CDATA[
	update EXP_FLT_ULD set 
     	MAN_PCS = NVL(MAN_PCS,0) - NVL(#trfPcs#,0),
     	MAN_WT = NVL(MAN_WT,0) - NVL(#trfWt#,0),
     	NET_WT = NVL(MAN_WT,0) - NVL(#trfWt#,0),     	
      	LM_USER_ID = #lmUserId#,
      	LM_DATE = sysdate 
      	where ULD_KEY = #uldKey# and FLT_KEY = #cntgFltKey# and FLT_DATE = #cntgFltDate# and UNLDG_PT = #uldUnldgPt#
]]>
</update> 

  
<update id="update_EXP_PMAN_TARMAC_HCONTAINER_AWB_OLD" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
<![CDATA[
update EXP_PMAN_TARMAC_ULD_AWB set 
     	ASSIGNED_PCS = ASSIGNED_PCS - #oldTrfPcs#,
     	ASSIGNED_WT = ASSIGNED_WT - #oldTrfWt#,
      	LM_USER_ID = #lmUserId#,
      	LM_DATE = sysdate 
      	where AWB_NO = #awbNo# and AWB_DATE = #awbDate# and ULD_BT_NO = #hcontainer# 
       			and FLT_KEY = #oldCntgFltKey# and FLT_DATE = #oldCntgFltDate# and UNLDG_PT = #oldShpUnldgPt#
]]>
</update> 

<update id="update_EXP_PMAN_TARMAC_ULD_AWB" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
<![CDATA[
update EXP_PMAN_TARMAC_ULD_AWB set 
     	ASSIGNED_PCS = ASSIGNED_PCS + #trfPcs#,
     	ASSIGNED_WT = ASSIGNED_WT + #trfWt#,
      	LM_USER_ID = #lmUserId#,
      	LM_DATE = sysdate 
      	where AWB_NO = #awbNo# and AWB_DATE = #awbDate# and ULD_BT_NO = #uldKey# 
       			and FLT_KEY = #cntgFltKey# and FLT_DATE = #cntgFltDate# and UNLDG_PT = #shpUnldgPt#
]]>
</update>   
   
<update id="update_EXP_PMAN_TARMAC_ULD_AWB_OLD" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
<![CDATA[
update EXP_PMAN_TARMAC_ULD_AWB set 
     	ASSIGNED_PCS = ASSIGNED_PCS - #oldTrfPcs#,
     	ASSIGNED_WT = ASSIGNED_WT - #oldTrfWt#,
      	LM_USER_ID = #lmUserId#,
      	LM_DATE = sysdate 
      	where AWB_NO = #awbNo# and AWB_DATE = #awbDate# and ULD_BT_NO = #uldKey# 
       			and FLT_KEY = #oldCntgFltKey# and FLT_DATE = #oldCntgFltDate# and UNLDG_PT = #oldShpUnldgPt#
]]>
</update>   
      
<select id="get_EXP_PMAN_TARMAC_ULD_AWB_OLD_Count" parameterClass="java.util.HashMap" resultClass="java.lang.Integer" >
<![CDATA[
    select count(1) from  EXP_PMAN_TARMAC_ULD_AWB 
      where AWB_NO = #awbNo# and AWB_DATE = #awbDate# and ULD_BT_NO = #uldKey#  
     		 and FLT_KEY = #oldCntgFltKey# and FLT_DATE = #oldCntgFltDate# and UNLDG_PT = #oldUnldgPt# and ASSIGNED_PCS = 0
]]>
</select>

<delete id="delete_EXP_PMAN_TARMAC_ULD_AWB_FOR_OLD" parameterClass="java.util.HashMap" >
	delete from  EXP_PMAN_TARMAC_ULD_AWB where AWB_NO = #awbNo# and AWB_DATE = #awbDate# and ULD_BT_NO = #uldKey#
					and FLT_KEY = #oldCntgFltKey# and FLT_DATE = #oldCntgFltDate# and UNLDG_PT = #oldUnldgPt# and ASSIGNED_PCS = 0
</delete>  


<delete id="delete_EXP_PMAN_TARMAC_ULD_AWB_HAWB_FOR_OLD" parameterClass="java.util.HashMap" >
	delete from  EXP_PMAN_TAR_ULD_AWB_HAWB where AWB_NO = #awbNo# and AWB_DATE = #awbDate# and ULD_BT_NO = #uldKey#
					and FLT_KEY = #oldCntgFltKey# and FLT_DATE = #oldCntgFltDate#
</delete> 

	
<update id="UPDATEEXPPMANTARMACULDFOR_OLD" parameterClass="java.util.HashMap">
update  EXP_PMAN_TARMAC_ULD t set lm_user_id = #userID# where ULD_BT_NO = #uldKey#  and FLT_KEY = #oldCntgFltKey# and FLT_DATE = #oldCntgFltDate# 
		and UNLDG_PT = #oldUnldgPt#
		and  not exists (select null from exp_pman_tarmac_uld_awb where flt_key = t.flt_key 
							and flt_date = t.flt_date and uld_bt_no = t.uld_bt_no  )
</update>

<delete id="delete_EXP_PMAN_TARMAC_ULD_FOR_OLD" parameterClass="java.util.HashMap" >
	delete from  EXP_PMAN_TARMAC_ULD t where ULD_BT_NO = #uldKey#  and FLT_KEY = #oldCntgFltKey# and FLT_DATE = #oldCntgFltDate# 
		and UNLDG_PT = #oldUnldgPt#
		and  not exists (select null from exp_pman_tarmac_uld_awb where flt_key = t.flt_key 
							and flt_date = t.flt_date and uld_bt_no = t.uld_bt_no  )
</delete>   

<delete id="delete_EXP_FLT_ULD_FOR_OLD" parameterClass="java.util.HashMap" >
	delete from  EXP_FLT_ULD t where ULD_KEY = #uldKey#  and FLT_KEY = #oldCntgFltKey# and FLT_DATE = #oldCntgFltDate# 
			and UNLDG_PT = #oldUnldgPt# 
			and	Source = 'DDT' and not exists (select null from exp_pman_tarmac_uld where flt_key = t.flt_key and flt_date = t.flt_date and uld_bt_no = t.uld_key  )
</delete>   

<select id="get_EXP_PMAN_TARMAC_AWB_OLD_Count" parameterClass="java.util.HashMap" resultClass="java.lang.Integer" >
<![CDATA[
    select count(1) from  EXP_PMAN_TARMAC_AWB  where AWB_NO = #awbNo# and AWB_DATE = #awbDate#  
    			and FLT_KEY = #oldCntgFltKey# and FLT_DATE = #oldCntgFltDate# and UNLDG_PT = #oldUnldgPt# and BULK_PCS = 0 and PPK_PCS = 0
]]>
</select>

<delete id="delete_EXP_PMAN_TARMAC_AWB_FOR_OLD" parameterClass="java.util.HashMap" >
	delete from  EXP_PMAN_TARMAC_AWB t where AWB_NO = #awbNo# and AWB_DATE = #awbDate#  
   		and FLT_KEY = #oldCntgFltKey# and FLT_DATE = #oldCntgFltDate# and UNLDG_PT = #oldUnldgPt# and BULK_PCS = 0 and PPK_PCS = 0
   		and not exists (select null from exp_pman_tarmac_uld_awb where flt_key = t.flt_key and flt_date = t.flt_date and awb_no = t.awb_no and UNLDG_PT=t.UNLDG_PT)
</delete>  

<delete id="delete_EXP_PMAN_TARMAC_AWB_HAWB_FOR_OLD" parameterClass="java.util.HashMap" >
	delete from  EXP_PMAN_TAR_ULD_AWB_HAWB t where AWB_NO = #awbNo# and AWB_DATE = #awbDate#  
   		and FLT_KEY = #oldCntgFltKey# and FLT_DATE = #oldCntgFltDate#
   		and not exists (select null from exp_pman_tarmac_uld_awb where flt_key = t.flt_key and flt_date = t.flt_date and awb_no = t.awb_no and awb_date = t.AWB_DATE)
</delete> 

<select id="get_EXP_PMANIFEST_AWB_OLD_Count" parameterClass="java.util.HashMap" resultClass="java.lang.Integer" >
<![CDATA[
    select count(1) from  EXP_PMANIFEST_AWB  where AWB_NO = #awbNo# and AWB_DATE = #awbDate# 
    			and FLT_KEY = #oldCntgFltKey# and FLT_DATE = #oldCntgFltDate# and UNLDG_PT = #oldUnldgPt#  and bulk_pcs = 0
]]>	
</select>

<delete id="delete_EXP_PMANIFEST_AWB_OLD" parameterClass="java.util.HashMap" >
	delete from  EXP_PMANIFEST_AWB where AWB_NO = #awbNo# and AWB_DATE = #awbDate#  
    			and FLT_KEY = #oldCntgFltKey# and FLT_DATE = #oldCntgFltDate# and UNLDG_PT = #oldUnldgPt# and bulk_pcs = 0
</delete> 

<select id="get_AWB_OLD_Count" parameterClass="java.util.HashMap" resultClass="java.lang.Integer" >
<![CDATA[
    select count(1) from  AWB  where AWB_NO = #awbNo# and AWB_DATE = #awbDate# and pcs = 0 and rcl_pcs = 0 and pman_pcs = 0
]]>	
</select> 

<delete id="delete_AWB_OLD" parameterClass="java.util.HashMap" >
<![CDATA[
    delete from AWB  where AWB_NO = #awbNo# and AWB_DATE = #awbDate# and pcs = 0 and rcl_pcs = 0 and pman_pcs = 0
]]>	
</delete> 

<select id="get_EXP_PMAN_AWB_Count" parameterClass="java.util.HashMap" resultClass="java.lang.Integer" >
<![CDATA[
    select count(1) from  EXP_PMANIFEST_AWB  where AWB_NO = #awbNo# and AWB_DATE = #awbDate#   
    			and FLT_KEY = #cntgFltKey# and FLT_DATE = #cntgFltDate# and UNLDG_PT = #unldgPt#
]]>
</select>

<select id="get_COUNT_EXP_PMAN_AWB_UNASSINNED_PC" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" resultClass="java.lang.Integer" >
	select count(1) from exp_pmanifest_awb
	    where AWB_NO = #awbNo# and AWB_DATE = #awbDate#   
	      and FLT_KEY = #oldCntgFltKey# and FLT_DATE = #oldCntgFltDate# and UNLDG_PT = #oldShpUnldgPt#
	<isEqual property="trtypeEvt" compareValue="DELETE" >
		and #oldTrfPcs# > unassigned_bulk_pcs
	</isEqual>
	<isEqual property="trtypeEvt" compareValue="UPDATE" >
	    and #oldTrfPcs#-#trfPcs# > unassigned_bulk_pcs
	</isEqual>
</select>

<insert id="insert_EXP_PMAN_AWB" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
Insert into EXP_PMANIFEST_AWB 
(FLT_KEY,FLT_DATE,UNLDG_PT,AWB_NO,AWB_DATE,BLDUP_INSTR,MAN_RMK,BULK_PCS,BULK_WT,PPK_PCS,PPK_WT,ASSIGNED_BULK_PCS,ASSIGNED_BULK_WT,FLT_TYPE,SHP_TYPE,UNASSIGNED_BULK_PCS,UNASSIGNED_BULK_WT,PMAN_PCS,PMAN_WT,MIX_PCS,MIX_WT,DOC_ACCPT_IND,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,TR_TYPE) 
values (#cntgFltKey# ,#cntgFltDate# ,#shpUnldgPt#,#awbNo#,#awbDate#,  null , null ,#trfPcs#,#trfWt#, '0' ,'0', '0', '0','E','TRM',#unAsgnbulk_Pc#,#unAsgnbulk_Wt#,#pmanPcs#,#pmanWt#,'0','0','N',#lmUserId#,sysdate,#lmUserId#,sysdate,#trtype#)
</insert>

<update id="update_EXP_PMAN_AWB" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
<![CDATA[
	update EXP_PMANIFEST_AWB set 
			BULK_PCS =  BULK_PCS + #trfPcs#,
			BULK_WT =  BULK_WT + #trfWt#,
			UNASSIGNED_BULK_PCS = UNASSIGNED_BULK_PCS  + #trfPcs#,
			UNASSIGNED_BULK_WT = UNASSIGNED_BULK_WT + #trfWt#,
			PMAN_PCS = PMAN_PCS + #trfPcs#,
			PMAN_WT	= PMAN_WT + #trfWt#,
			LM_USER_ID = #lmUserId#,
			LM_DATE = sysdate , TR_TYPE = #trtype#
			where AWB_NO = #awbNo# and AWB_DATE = #awbDate#  and FLT_KEY = #cntgFltKey# 
	      		and FLT_DATE = #cntgFltDate# and UNLDG_PT = #shpUnldgPt#
 ]]>     
</update>   

<update id="update_EXP_PMAN_AWB_OLD" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
<![CDATA[
	update EXP_PMANIFEST_AWB set 
	       BULK_PCS =  BULK_PCS - #oldTrfPcs#,
	       BULK_WT =  BULK_WT - #oldTrfWt#,
	       UNASSIGNED_BULK_PCS =  UNASSIGNED_BULK_PCS - #oldTrfPcs#,
			UNASSIGNED_BULK_WT = UNASSIGNED_BULK_WT - #oldTrfWt#,
			PMAN_PCS =  PMAN_PCS - #oldTrfPcs#,
			PMAN_WT	= PMAN_WT - #oldTrfWt#,
	      LM_USER_ID = #lmUserId#,
	      LM_DATE = sysdate , TR_TYPE = #trtype#
	      where AWB_NO = #awbNo# and AWB_DATE = #awbDate#  
	      			and FLT_KEY = #oldCntgFltKey# and FLT_DATE = #oldCntgFltDate# and UNLDG_PT = #oldShpUnldgPt#
 ]]>     
</update>    
    
<!--  Changed for QR 
<delete id="delete_EXP_PMAN_AWB" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
	delete from  EXP_PMANIFEST_AWB where AWB_NO = #awbNo# and AWB_DATE = #awbDate#       
</delete>   -->

<!--  Changed for QR
<delete id="delete_EXP_PMAN_AWB_FOR_OLD" parameterClass="java.util.HashMap" >
	delete from  EXP_PMANIFEST_AWB where AWB_NO = #awbNo# and AWB_DATE = #awbDate#       
</delete>   -->

<select id="get_FLT_OPR_EVENTS_DLS_MANF_IND" parameterClass="java.util.HashMap" resultClass="java.util.HashMap" >
<![CDATA[ 
    select DLS_IND , FINAL_MANF_IND from FLT_OPR_EVENTS   where flt_key = #fltKey# and sch_date = #fltDate# and flt_type = 'D' 
]]>
</select>
<!--  to be remove added after atul disscussion  imp ramp check dtl for import flight -->
<select id="get_ULD_INVENTORY_CFM_STATUS" parameterClass="java.util.HashMap" resultClass="java.lang.Integer" >
<![CDATA[ 
    select count(1) from imp_ramp_chk_dtl where uld_key = #uldKey# and flt_key = #fltKey# and flt_Date = #fltDate# 
    			and CHKIN_YN = 'Y' and  cfm_status = 'CONFIRMED'
]]>
</select>
<!--  to be remove added after atul disscussion for import flight -->
<select id="get_ULD_INVENTORY_BREAKDOWN_START" parameterClass="java.util.HashMap" resultClass="java.lang.Integer" >	
 
	select count(1) from imp_ramp_chk_dtl where uld_key=#uldKey# and flt_key = #fltKey# and flt_Date = #fltDate# 
				and (BRKDN_START_DATE is not null or BRKDN_COMPL_DATE is not null)
</select>

<select id="get_ULD_BREAKDOWN_CNT" parameterClass="java.util.HashMap" resultClass="java.lang.Integer" >	 
	select count(1) from imp_awb_strg_dtl where CHKIN_ULD_KEY = #uldKey# and flt_key = #fltKey# and flt_Date = #fltDate# 
</select>

	<insert id="insert_AWB_table" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO">		 
		INSERT INTO AWB (
			AWB_NO,AWB_DATE,AWB_TYPE,PPK_TYPE,CARR_CODE,CAR_YN,MANIFEST_YN,BLDUP_COMPL_YN,AWB_CLOSED_YN,LOCKED_YN,MISSING_YN,MANIFEST_PCS,MANIFEST_WT,
			RTN_PCS,RTN_WT,CC_CODE,ORIG,DEST,PCS,WT,
			RCL_PCS,RCL_WT,RCL_PPK_PCS,RCL_PPK_WT,RCL_MIX_PCS,RCL_MIX_WT,RCL_BULK_PCS,RCL_BULK_WT,PMAN_PCS,PMAN_WT,NON_PMAN_PCS,NON_PMAN_WT,PMAN_BULK_PCS,
			PMAN_BULK_WT,PMAN_MIX_PCS,PMAN_MIX_WT,PMAN_PPK_PCS,PMAN_PPK_WT,BLDUP_BULK_PCS,BLDUP_BULK_WT,AGENT_CODE,SHPR_CODE,
			CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,OFFLOAD_BULK_PCS,OFFLOAD_BULK_WT,OFFLOAD_PPK_PCS,OFFLOAD_PPK_WT,AWB_RMK,CATALOG,SPL_CODE1,CONTENT)
		VALUES(
		 #awbNo#,#awbDate#,'T','P',#fltCarr#,'Y','N','N','N','N','N',0,0,0,0,NULL,#ldgPt#,#unldgPt#,NVL(#trfPcs#,0),NVL(#trfWt#,0),
		 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,
		 #lmUserId#,SYSDATE,#lmUserId#,SYSDATE,0,0,0,0,NULL,'TM','SPX','UNK')
	</insert> 
	
	<update id="update_AWB_table" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO">		
		update AWB set AWB_TYPE = 'T' , PPK_TYPE = 'P', CARR_CODE = #fltCarr#, ORIG = #ldgPt#, DEST = #unldgPt#,
				PCS = PCS + nvl(#trfPcs#,0) , WT = WT + #trfWt#, 
				CATALOG = 'TM', LM_USER_ID = #lmUserId#, LM_DATE = SYSDATE
		where AWB_NO = #awbNo# and AWB_DATE = #awbDate#
	</update> 

	<insert id="insert_ImpCarAwb_table" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO">
		<![CDATA[
			INSERT INTO IMP_CAR_AWB (AWB_NO,AWB_DATE,AWB_PRFX,AWB_DEST,AWB_ORIGIN,AWB_PCS,AWB_WT,			
				LM_USER_ID ,LM_DATE,TR_STATUS,CR_USER_ID, CR_DATE, PPK_TYPE,
				BUP_PCS,BUP_WT,CATALOG,SPL_CODE1,CONTENT			
				) 
			VALUES(#awbNo#,#awbDate#,#awbPfx#,#unldgPt#,#ldgPt#, 
				nvl(#trfPcs#,0),nvl(#trfWt#,0),
				#lmUserId#,SYSDATE,'A',#lmUserId#,SYSDATE,'P',
				nvl(#trfPcs#,0),nvl(#trfWt#,0),'TM','SPX','UNK')  
		]]>
	</insert>

	<update id="update_ImpCarAwb_table" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO">
		<![CDATA[
			update IMP_CAR_AWB set 
				AWB_DEST = #ldgPt#, AWB_ORIGIN = #unldgPt#, 
				AWB_PCS = AWB_PCS + nvl(#trfPcs#,0), AWB_WT = AWB_WT + nvl(#trfWt#,0), 
				LM_USER_ID = #lmUserId#, LM_DATE = sysdate
				PPK_TYPE = 'P', BUP_PCS = nvl(#trfPcs#,0) ,BUP_WT = nvl(#trfWt#,0) ,CATALOG	= 'TM'		
		]]>
	</update>

	<select id="get_ImpCarAwb_Count" parameterClass="java.util.HashMap" resultClass="java.lang.Integer" >
	<![CDATA[
	    select count(1) from IMP_CAR_AWB where awb_no = #awbNo# and awb_Date = #awbDate#
	]]>
	</select>
	
	<select id="get_ImpCarShp_Count" parameterClass="java.util.HashMap" resultClass="java.lang.Integer" >
	<![CDATA[
	    select count(1) from IMP_CAR_SHP where awb_no = #awbNo# and awb_Date = #awbDate# and flt_key = #fltKey# and flt_Date = #fltDate#
	]]>
	</select>

	<insert id="insert_ImpCarShp_table" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO">
		<![CDATA[
			INSERT INTO IMP_CAR_SHP (FLT_TYPE,AWB_NO, AWB_DATE, AWB_PRFX, CARR_CODE, FLT_DATE, FLT_KEY, 
			MANIFEST_PCS, MANIFEST_WT,BULK_PCS ,BULK_WT,	LDG_POINT ,CNTG_FLT_CARR,CNTG_FLT_NO,CNTG_FLT_DATE,
				CNTG_FLT_DEST,LM_USER_ID ,LM_DATE,TR_STATUS,CR_USER_ID, CR_DATE, PPK_TYPE,CAR_CREATED)
			VALUES( 'I',#awbNo# ,#awbDate#,#awbPfx#, #fltCarr#,#fltDate#,#fltKey#,
			nvl(#trfPcs#,0),nvl(#trfWt#,0) ,nvl(#trfPcs#,0), nvl(#trfWt#,0), 
			#ldgPt#,SUBSTR(#cntgFltKey#, 1, 2),SUBSTR(#cntgFltKey#, 3, 5),
			#cntgFltDate#,#unldgPt#,
			#lmUserId#,SYSDATE,'A',#lmUserId#,SYSDATE,'P','Y')		
		]]>
	 </insert>
	 
	 <update id="update_ImpCarShp_table" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO">
		<![CDATA[
			update IMP_CAR_SHP 
				set CARR_CODE = #fltCarr#, 
				MANIFEST_PCS = MANIFEST_PCS + nvl(#trfPcs#,0), MANIFEST_WT = MANIFEST_WT + nvl(#trfWt#,0), BUP_PCS = BUP_PCS + nvl(#trfPcs#,0) , BUP_WT = BUP_WT + nvl(#trfWt#,0),	
				LDG_POINT = #ldgPt#, PPK_TYPE = 'P' , CAR_CREATED = 'Y', LM_USER_ID = #lmUserId# , LM_DATE = sysdate
			where awb_no = #awbNo# and awb_Date = #awbDate# and flt_key = #fltKey# and flt_Date = #fltDate#
		]]>
 	</update>
	
	<insert id="insert_ExpCar_table" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
		Insert into EXP_CAR(AWB_NO,AWB_DATE, ACCEPT_MODE, AWB_PRFX,	CARR_CODE, CATALOG,	CONTENT, HANDLER_CODE,ORIGIN, DEST,	
		PCS, WT,
		CR_USER_ID, CR_DATE, LM_USER_ID,LM_DATE,SPL_CODE1)
			values (#awbNo#,#awbDate#, 'TRN', #awbPfx#,NVL(#cntgFltCarr#,#fltCarr#),'TM', 'UNK', 'CPCT' ,#ldgPt#,#unldgPt#,
			 nvl(#trfPcs#,0) , nvl(#trfWt#,0),
			#lmUserId#,sysdate,#lmUserId#,sysdate,'SPX')
	</insert>
	
	<update id="update_ExpCar_table" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
		update EXP_CAR set CATALOG = 'TM', ORIGIN  = #ldgPt#, DEST  = #unldgPt#, PCS = PCS + nvl(#trfPcs#,0) , WT = WT + nvl(#trfWt#,0), 	
						  	LM_USER_ID = #lmUserId#, LM_DATE = sysdate
		 where awb_no = #awbNo# and awb_Date = #awbDate#
	</update>
	

<!-- ###################### ADDED BY Mayank ON 04-07-2011 FOR Trasnsfer Control Checklist  Ends Here ########################### -->
<!-- ###################### ADDED BY Mayank ON 01-08-2011 FOR Transit ULDs ShipmentsList Starts Here ########################### -->
<select id="fetchTrnstULDIndBoundTransitList" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstBO" resultClass="cargo.cms.imprt.bo.TsnstCntrlChklstBO" >
select flt.flt_key fltKey, to_char(flt.sch_date,'DDMONYY') fltDate, 
pkg_common.get_flt_final_ata_eta_sta(flt.flt_key,flt.sch_date,'A','DD') eta, 
NVL(flt.EST_DATE,flt.sch_date),
(select code_desc from mast_code_dtl where code_type = 'CGO_ACFT_TYPE' and  code = flt.cgo_acft_type) cgoAcfType, 
FUN_GET_ALLOTMENTS(flt.flt_key,  to_char(flt.sch_date,'DDMONYY'), 'ALL_ULD') inbdUld,
FUN_GET_ALLOTMENTS(flt.flt_key,  to_char(flt.sch_date,'DDMONYY'), 'QT_ULD') qtUld,
FUN_GET_ALLOTMENTS(flt.flt_key,  to_char(flt.sch_date,'DDMONYY'), 'QT_CHK_IN') qtChkIn,
FUN_GET_ALLOTMENTS(flt.flt_key,  to_char(flt.sch_date,'DDMONYY'), 'QT_BD') qtBd,
FUN_GET_ALLOTMENTS(flt.flt_key,  to_char(flt.sch_date,'DDMONYY'), 'BULK_CHK_IN_QT_AREA') qtBulkChkInQtArea,
FUN_GET_ALLOTMENTS(flt.flt_key,  to_char(flt.sch_date,'DDMONYY'), 'QT_SHP_IMP') qtShpImp, 
FUN_GET_ALLOTMENTS(flt.flt_key,  to_char(flt.sch_date,'DDMONYY'), 'EST_BD_BU_IMP') estBdBuImp, 
FUN_GET_ALLOTMENTS(flt.flt_key,  to_char(flt.sch_date,'DDMONYY'), 'LST_BD_BU_IMP') lstBdBuImp, 
(SELECT WH_AREA FROM MAST_WH_AREA WHERE MODULE_YN = 'Y' and WH_AREA = flt.flt_module1) fltModule, flt.flt_module1 fltModuleCode,
 decode(FLTEVENTS.DDT_FINALISE_DATE,null,'N','Y')  finalizedInd
from flt_opr flt
join FLT_OPR_EVENTS FLTEVENTS on FLT.FLT_KEY = FLTEVENTS.FLT_KEY and FLT.SCH_DATE = FLTEVENTS.SCH_DATE and FLTEVENTS.flt_type ='A'
join (select FLT_KEY , FLT_DATE from  V_UNFIN_DDT_DTL 
        where DDT_STATUS = 'P' 
		<isNotEmpty property="fltKey" >
		and FLT_KEY = #fltKey#
		</isNotEmpty>
		<isNotEmpty property="fltDate" >	 
		and  FLT_DATE = #fltDate#
		</isNotEmpty>
		<isNotEmpty property="cntgFltKey" >
		  and SHP_CNTG_FLT_KEY = #cntgFltKey#
		</isNotEmpty>
		<isNotEmpty property="cntgFltKey" >
			<isNotEmpty property="cntgFltDate" >	 
			  and  SHP_CNTG_FLT_DATE = #cntgFltDate#
			</isNotEmpty>
		</isNotEmpty>		 	
      union
      select   ffmMSG.flt_key flt_key , ffmMSG.FLT_DATE FLT_DATE
      from EDI_FFM_MSG ffmMSG, EDI_FFM_ULD ffmULD , edi_ffm_shp ffmshp 
      where ffmMSG.FFM_STATUS = 'P' and ffmMSG.TR_NO = ffmULD.TR_NO and ffmMSG.TR_NO = ffmshp.TR_NO and ffmULD.Doc_line_no = ffmshp.uDoc_line_no 
      and FFMSHP.DEST != 'HKG'        
		<isNotEmpty property="fltKey" >
		and FFMMSG.FLT_KEY = #fltKey# 
		</isNotEmpty>
		<isNotEmpty property="fltDate" >	 
		and  FFMMSG.FLT_DATE = #fltDate#
		</isNotEmpty>
		<isNotEmpty property="cntgFltKey" >
		 and ffmULD.CNTG_FLT_Carr1||ffmULD.CNTG_FLT_No1 = #cntgFltKey#
		</isNotEmpty>		 
		<isNotEmpty property="cntgFltKey" >
			<isNotEmpty property="cntgFltDate" >	 
			 and  ffmULD.CNTG_FLT_DATE1 = #cntgFltDate#
			</isNotEmpty>
		</isNotEmpty>       
       ) FFMDDT on FFMDDT.FLT_KEY = flt.FLT_KEY and FFMDDT.FLT_DATE = flt.SCH_DATE        
where flt.flt_type ='A'
<isNotEmpty property="fltKey" >
and flt.FLT_KEY = #fltKey#  
</isNotEmpty>
<isNotEmpty property="fltDate" >	 
and flt.SCH_DATE = #fltDate#
</isNotEmpty>
<isNotEmpty property="cgoAcftType" >	 
and flt.CGO_ACFT_TYPE = #cgoAcftType# 
</isNotEmpty>
<isNotEmpty property="fltModule" >	 
and flt.flt_module1 = #fltModule# 
</isNotEmpty>
<isNotEmpty property="fromEta" >
<isNotEmpty property="toEta" >	 
and NVL(NVL(flt.EST_TIME, flt.ACT_TIME),  flt.SCH_TIME) between #fromEta# and #toEta#
</isNotEmpty>
</isNotEmpty>
<isEqual property="qtBu" compareValue="Y" >	 
  	and exists (select null from V_UNFIN_DDT_DTL where DDT_STATUS = 'P' and FLT_KEY = flt.FLT_KEY and  FLT_DATE = flt.SCH_DATE  and QT_BU = 'Y')
</isEqual>	
<isEmpty property="cntgFltCarr" >
	<isEmpty property="fltCarr" >
		 <isNotEmpty property="loginCarrier">
				AND ( flt.carr_code = #loginCarrier#   OR  flt.carr_code IN (SELECT CARR_CODE FROM MAST_CARR_GRP  WHERE GRP_CARR_CODE = #loginCarrier#))              
		 </isNotEmpty>		 
	</isEmpty>		 
</isEmpty>
 ORDER BY 4,3  
</select>

<select id="fetchIndBoundTransitList" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstBO" resultClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
<![CDATA[ 
select a.* from (
select nvl(ffm.awb_no,ddt.awb_no) awbNo,
SUBSTR(TRIM(nvl(ffm.awb_no,ddt.awb_no)),1,3)||'-'||SUBSTR(TRIM(nvl(ffm.awb_no,ddt.awb_no)),4) awbNoDisp,
TO_CHAR(nvl(ffm.awb_Date,ddt.awb_Date),'DDMONYY') awbDate, 
nvl(nvl(ffm.ULD_KEY,ddt.ULD_KEY),'BULK')  uldKey,
NVL(NVL(FFM.ULD_KEY,DDT.ULD_KEY),'BULK') ||'-'|| NVL(FFM.AWB_NO,DDT.AWB_NO)  uldKeyAwbNo,
ULDFFM.PCS ttlUldPcs,
ULDFFM.WT ttlUldWt,
case when NVL(FFM.ULD_KEY,DDT.ULD_KEY) is not null then  (select LOC_CODE from ULD_INVENTORY where ULD_KEY = NVL(FFM.ULD_KEY,DDT.ULD_KEY))
             else null end as locn,
(select WH_RMK from IMP_ULD_LIST where FLT_KEY = NVL(FFM.FLT_KEY,DDT.FLT_KEY)  and FLT_DATE = NVL(FFM.FLT_DATE,DDT.FLT_DATE) 
              and ULD_KEY = NVL(FFM.ULD_KEY,DDT.ULD_KEY) ) as uldWhRmk,   
(select AIRL_RMK from IMP_ULD_LIST where FLT_KEY = NVL(FFM.FLT_KEY,DDT.FLT_KEY)  and FLT_DATE = NVL(FFM.FLT_DATE,DDT.FLT_DATE) 
              and ULD_KEY = NVL(FFM.ULD_KEY,DDT.ULD_KEY)) as uldAirlRmk,     
(SELECT STRAGG(STRINGDELIM(SHC, ',')) 
	    	FROM (SELECT DISTINCT SHC, ULD_KEY, FLT_KEY,FLT_DATE, AWB_NO, AWB_DATE,PRIORITY FROM V_IMP_FLT_ULD_SHC ORDER BY PRIORITY DESC
	      	) WHERE AWB_NO = NVL(ffm.awb_No,ddt.awb_No) AND AWB_DATE = NVL(ffm.awb_date,ddt.awb_date)
	      	AND FLT_KEY = nvl(ffm.flt_key,ddt.flt_key) AND FLT_DATE = nvl(ffm.flt_Date,ddt.flt_Date)
	      	and nvl(ULD_KEY,'BULK') = nvl(nvl(ffm.ULD_KEY,ddt.ULD_KEY),'BULK')
                )  shc,
decode(ffm.tr_No,null,'N','Y') ffmInd, DECODE(DDT.TR_NO,null,'N','Y') ddtInd,
NVL(AWB.ORIG,'') org, AWB.DEST dest, NVL(AWB.PCS,0) awbPcs,NVL(AWB.WT,0) awbWt, NVL(FFM.PCS,0) PCS,NVL(FFM.WT,0) WT,ffm.shmpt_code shpmCode,
(SELECT SUM(RECD_PCS)||'/'|| SUM(RECD_WT) FROM  IMP_CAR_SHP CAR
        WHERE  CAR.AWB_NO = DDT.AWB_NO AND CAR.AWB_DATE = TO_DATE(DDT.AWB_DATE,'DDMONYY')
         and car.flt_key = ffm.flt_key and  car.flt_Date =  ffm.flt_Date ) as bdPcWt, 

(SELECT SUM(DAM_PCS)||'/'|| SUM(DAM_WT) FROM  IMP_CAR_SHP car
        WHERE  CAR.AWB_NO = DDT.AWB_NO AND CAR.AWB_DATE = TO_DATE(DDT.AWB_DATE,'DDMONYY')
          and car.flt_key = ffm.flt_key and  car.flt_Date =  ffm.flt_Date ) AS damPcWt,      
(case when ( nvl((select sum(shp_trf_pc) from v_ddt_dtl 
                    where AWB_NO = nvl(ffm.awb_no,ddt.awb_no) and AWB_DATE = nvl(ffm.awb_Date,to_date(ddt.awb_Date,'DDMONYY'))
                        and (SHP_TRF_TYPE = 'QT' OR (SHP_TRF_TYPE = 'IF' and CNTG_FLT_KEY is null))),0) 
                        != nvl((select sum(PMAN_PCS) from EXP_PMANIFEST_AWB where  AWB_NO = nvl(ffm.awb_no,ddt.awb_no) 
                        					and AWB_DATE = nvl(ffm.awb_Date,to_date(ddt.awb_Date,'DDMONYY'))),0))  
              then 'Y' else 'N' end) as manPman,
  DECODE(ddt.MANUAL_IND,'Y','Y','') as manUpdate,
 nvl(ffm.flt_key,ddt.flt_key) fltKey , TO_CHAR(nvl(ffm.flt_Date,ddt.flt_Date),'DDMONYY')  fltDate,
  ddt.TR_NO ddtTrNo, ddt.SDOC_LINE_NO ddtSdocLineNo, ddt.UDOC_LINE_NO ddtUdocLineNo, ddt.DOC_LINE_NO ddtDocLineNo,
  ddt.CNTG_FLT_KEY cntgFltKey, ddt.CNTG_FLT_DATE cntgFltDate,
  decode(ddt.CNTG_FLT_KEY,null,'',PKG_COMMON.get_flt_carr(ddt.CNTG_FLT_KEY)) cntgFltCarr,
  REPLACE(ddt.CNTG_FLT_KEY, PKG_COMMON.get_flt_carr(ddt.CNTG_FLT_KEY), '') cntgFltNo,
  decode(ddt.CNTG_FLT_KEY,null,'',PKG_COMMON.get_flt_carr(ddt.CNTG_FLT_KEY)) oldCntgFltCarr, 
  REPLACE(ddt.CNTG_FLT_KEY, PKG_COMMON.get_flt_carr(ddt.CNTG_FLT_KEY), '') oldCntgFltNo,
 (select decode(FLTOPR.EST_TIME ,null,SUBSTR(TRIM(TO_CHAR(lpad(FLTOPR.SCH_TIME,4,0))),0,2)|| ':'|| SUBSTR(TRIM(TO_CHAR(lpad(FLTOPR.SCH_TIME,4,0))),3,4),SUBSTR(TRIM(TO_CHAR(lpad(FLTOPR.EST_TIME,4,0))),0,2)|| ':'|| SUBSTR(TRIM(TO_CHAR(lpad(FLTOPR.EST_TIME,4,0))),3,4)) 
   as etd from FLT_OPR FLTOPR WHERE FLTOPR.FLT_KEY = ddt.CNTG_FLT_KEY and FLTOPR.SCH_DATE = ddt.CNTG_FLT_DATE  and FLTOPR.flt_type ='D')as etd,
   FUN_GET_FLT_TDIFF_TRFYPE(ddt.CNTG_FLT_KEY, ddt.CNTG_FLT_DATE,#fltKey#,#fltDate#,'TIME_DIFF' ) timeDiifferance,
   FUN_GET_FLT_TDIFF_TRFYPE_HH_MI(ddt.CNTG_FLT_KEY, ddt.CNTG_FLT_DATE,#fltKey#,#fltDate#,'TIME_DIFF' ) timeDiifferanceHhMi,
  ddt.CNTG_FLT_KEY oldCntgFltKey, 
ddt.CNTG_FLT_DATE oldCntgFltDate,  
ddt.TRF_TYPE trfType, ddt.TRF_TYPE oldTrfType,   ddt.BRK_BULK brkBulk,ddt.BRK_BULK oldBrkBulk,
ddt.UNLDG_PT  uldUnldgPt, ddt.UNLDG_PT  oldUldUnldgPt, 
ddt.SHP_UNLDG_PT shpUnldgPt, ddt.SHP_UNLDG_PT oldShpUnldgPt, 
  (select eic_UNLDG_PT from ULD_INVENTORY where ULD_KEY = ffm.ULD_KEY) unldgPt,
       case when (select count(1) from imp_uld_list where FLT_KEY = ffm.flt_key and ffm.flt_Date = FLT_DATE
              and ULD_KEY = ffm.ULD_KEY and HANDLING_MODE in ('NBK','PPK')) > 0 then 'Y' 
               else null end as noBreak, 
              DDT.ACTON_CODE_1 actionOne, DDT.ACTON_CODE_2 actionTwo , 'Y' splitChkNotReqd,
               ddt.SHP_TRF_PC trfPcs, ddt.SHP_TRF_WT trfWt,
               
             (select bulkPcs ||'/'||  bulkWt from 
               	  (select FLT_KEY, FLT_DATE, AWB_NO, AWB_DATE, sum(bulkPcs) bulkPcs,  sum(bulkWt) bulkWt from 
                   (select FLT_KEY, FLT_DATE, AWB_NO, AWB_DATE, NVL(SUM(MIX_PCS)+SUM(PPK_PCS)+SUM(ASSIGNED_BULK_PCS),0) bulkPcs, NVL(SUM(MIX_WT)+SUM(PPK_WT)+SUM(ASSIGNED_BULK_WT),0) bulkWt
                      from EXP_PMANIFEST_AWB 
                            where MIX_PCS <> 0 OR PPK_PCS <> 0 OR ASSIGNED_BULK_PCS <> 0 OR  MIX_WT <> 0 OR PPK_WT <> 0 OR ASSIGNED_BULK_WT <> 0
                            group by FLT_KEY, FLT_DATE, AWB_NO, AWB_DATE
                    union
                    select FLT_KEY, FLT_DATE, AWB_NO, AWB_DATE,  NVL(SUM(BULK_PCS)+SUM(PPK_PCS),0) bulkPcs,  NVL(SUM(BULK_WT)+SUM(PPK_WT),0) bulkWt
                      from EXP_PMAN_TARMAC_AWB 
                            where BULK_PCS <> 0 OR PPK_PCS <> 0 OR  BULK_WT <> 0 OR PPK_WT <> 0 
                              group by FLT_KEY, FLT_DATE, AWB_NO, AWB_DATE
                  ) a  group by FLT_KEY, FLT_DATE, AWB_NO, AWB_DATE ) buPcWt
                where FLT_KEY = ddt.SHP_CNTG_FLT_KEY  and FLT_DATE = ddt.SHP_CNTG_FLT_DATE 
                and AWB_NO = NVL(FFM.AWB_NO,DDT.AWB_NO) and AWB_DATE = NVL(FFM.AWB_DATE,TO_DATE(DDT.AWB_DATE,'DDMONYY'))
                ) BUPCWT,
                ddt.qt_bu qtBu,
        (select bu_inst from EXP_BU_JO hd, EXP_BU_JO_DTL dtl 
		where hd.jo_no = dtl.jo_no and hd.flt_key =  ddt.shp_cntg_flt_key and hd.flt_date = ddt.shp_cntg_flt_date 
		and dtl.awb_NO = NVL(ffm.awb_No,ddt.awb_No) and dtl.awb_Date = NVL(ffm.awb_Date,ddt.awb_Date) and rownum = 1 ) as buildInstr,
DECODE((select count(1) from awb where awb_no = nvl(ffm.awb_no,ddt.awb_no) and awb_date=nvl(ffm.awb_date,ddt.awb_date) and rownum=1),0,(select rmk from awb_rmk where awb_no=nvl(ffm.awb_no,ddt.awb_no) and awb_date=nvl(ffm.awb_date,ddt.awb_date)  and rownum=1),(select AIRLN_RMK from awb where awb_no = nvl(ffm.awb_no,ddt.awb_no) and awb_date=nvl(ffm.awb_date,ddt.awb_date)  and rownum=1)) AS awbAirlRmk,  
DECODE((select count(1) from imp_car_awb where awb_no = nvl(ffm.awb_no,ddt.awb_no) and awb_date=nvl(ffm.awb_date,ddt.awb_date)  and rownum=1),0,(select awb_rmk from awb where awb_no=nvl(ffm.awb_no,ddt.awb_no) and awb_date=nvl(ffm.awb_date,ddt.awb_date)  and rownum=1),(select WH_RMK from imp_car_awb where awb_no = nvl(ffm.awb_no,ddt.awb_no) and awb_date=nvl(ffm.awb_date,ddt.awb_date)  and rownum=1)) AS awbWhRmk,
case when (SELECT t1.cc_code FROM V_CST_IMP_CC_CODE_AWB t1,mast_constraint_code t2 WHERE t1.cc_code = t2.code AND awb_no = ffm.awb_no AND NVL(hawb_no, '000000000000000000') = '000000000000000000' and rownum = 1) is null
then (select CONST_CODE from CST_RECV WHERE AWB_NO =  ffm.awb_no and LM_DATE = (SELECT MAX(LM_DATE) FROM CST_RECV WHERE AWB_NO= ffm.awb_no) AND rownum=1)
else (SELECT t1.cc_code FROM V_CST_IMP_CC_CODE_AWB t1,mast_constraint_code t2 WHERE t1.cc_code = t2.code AND awb_no =  ffm.awb_no AND NVL(hawb_no, '000000000000000000') = '000000000000000000' and rownum = 1) end as ccode
from

(select  
ffmshp.awb_no awb_no, ffmshp.awb_Date awb_Date, ffmshp.ORG ORG, ffmshp.DEST DEST, nvl(ffmshp.MAN_PCS,0) PCS,
nvl(ffmshp.MAN_WT,0) WT, ffmMSG.flt_key flt_key , ffmMSG.flt_Date flt_Date, ffmULD.ULD_KEY ULD_KEY, ffmMSG.TR_No tr_NO ,shmpt_code shmpt_code
    from EDI_FFM_MSG ffmMSG, EDI_FFM_ULD ffmULD , edi_ffm_shp ffmshp 
    where ffmMSG.FFM_STATUS = 'P'  
    and ffmMSG.TR_NO = ffmULD.TR_NO and ffmMSG.TR_NO = ffmshp.TR_NO and ffmULD.Doc_line_no = ffmshp.uDoc_line_no 
    ) ffm 
]]> 
FULL OUTER join  (select ddtView.awb_no awb_no, to_char(ddtView.awb_DATE,'DDMONYY') awb_DATE, ddtView.flt_key flt_key , 
                      to_char(ddtView.flt_Date,'DDMONYY') flt_Date, 
                	ddtView.TR_NO TR_NO, ddtView.sdoc_line_no Sdoc_line_no, ddtView.uDOC_LINE_NO UDOC_LINE_NO, ddtView.DOC_LINE_NO DOC_LINE_NO,
                	ddtView.ULD_KEY ULD_KEY , ddtView.SHP_CNTG_FLT_KEY CNTG_FLT_KEY, to_char(ddtView.SHP_CNTG_FLT_DATE,'DDMONYY') CNTG_FLT_DATE, 
                	ddtView.SHP_CNTG_FLT_KEY SHP_CNTG_FLT_KEY, to_char(ddtView.SHP_CNTG_FLT_DATE,'DDMONYY') SHP_CNTG_FLT_DATE,ddtView.qt_BU,
                  	ddtView.SHP_TRF_TYPE TRF_TYPE,  ddtView.BRK_BULK BRK_BULK, to_char(ddtView.BASELINE_ETA,'DDMONYY') BASELINE_ETA,
                  	NVL( (TO_CHAR(TO_DATE(to_char(ddtView.BASELINE_ETA,'DDMONYY HH24MI'),'DDMONYY HH24MI') - 
                   			TO_DATE(TO_CHAR(FLT.SCH_DATE,'DDMONYY')|| ' ' || 
                   			TO_CHAR(NVL(FLT.EST_TIME,  FLT.SCH_TIME),'0000') ,'DDMONYY HH24MI')))  * 24  , 0 ) as etaChangedHrs,
                        NVL( (TO_CHAR(TO_DATE(to_char(ddtView.BASELINE_ETA,'DDMONYY HH24MI'),'DDMONYY HH24MI') - 
                   			TO_DATE(TO_CHAR(FLT.SCH_DATE,'DDMONYY')|| ' ' || 
                   			TO_CHAR(NVL(FLT.EST_TIME,  FLT.SCH_TIME),'0000') ,'DDMONYY HH24MI')))  * 24 * 60 , 0 ) as etaChangedMin,
                    ddtView.Acton_code_1 Acton_code_1, ddtView.Acton_code_2 Acton_code_2, ddtView.UNLDG_PT , ddtView.SHP_UNLDG_PT,
                    ddtView.SHP_TRF_PC , ddtView.SHP_TRF_WT , ddtView.MANUAL_IND MANUAL_IND
                  from V_UNFIN_DDT_DTL ddtView
              		join FLT_OPR FLT on FLT.FLT_KEY = ddtView.FLT_KEY and FLT.SCH_DATE = ddtView.FLT_DATE and FLT_type = 'A' 
              		where 
              		(uld_key is not null or (uld_key is null and SHP_TRF_TYPE = 'QT'))
              		 and ddtView.SHP_CNTG_FLT_KEY = nvl(#expFltKey#,ddtView.SHP_CNTG_FLT_KEY) and nvl( ddtView.SHP_CNTG_FLT_DATE,'31AUG2000') = NVL(#expFltDate#,nvl( ddtView.SHP_CNTG_FLT_DATE,'31AUG2000'))) ddt 
  				on ddt.flt_key = ffm.flt_key and  ddt.flt_Date =  ffm.flt_Date and nvl(ddt.ULD_KEY, '*') =  nvl(ffm.ULD_KEY, '*') AND DDT.AWB_NO = FFM.AWB_NO
 left join AWB on AWB.AWB_NO = NVL(FFM.AWB_NO,DDT.AWB_NO) and AWB.AWB_DATE = NVL(FFM.AWB_DATE,DDT.AWB_DATE)
 left join (select BU_INST, AIRL_RMK, WH_RMK, EXP_BU_JO.FLT_KEY, EXP_BU_JO.FLT_DATE, EXP_BU_JO_DTL.AWB_NO ,EXP_BU_JO_DTL.AWB_DATE 
            from      EXP_BU_JO ,  EXP_BU_JO_DTL where EXP_BU_JO.JO_NO =  EXP_BU_JO_DTL.JO_NO ) JO 
            ON JO.FLT_KEY = DDT.CNTG_FLT_KEY  and JO.FLT_DATE = DDT.CNTG_FLT_DATE
              and JO.AWB_NO = NVL(FFM.AWB_NO,DDT.AWB_NO)  and JO.AWB_DATE = nvl(ffm.awb_Date,to_date(ddt.awb_Date,'DDMONYY'))
 left join (select sum(NVL(ffmshp.MAN_PCS,0)) PCS,sum(nvl(ffmshp.MAN_WT,0)) WT, ffmMSG.flt_key flt_key , ffmMSG.flt_Date flt_Date, ffmULD.ULD_KEY ULD_KEY
 		    from EDI_FFM_MSG ffmMSG, EDI_FFM_ULD ffmULD , edi_ffm_shp ffmshp 
    		where ffmMSG.FFM_STATUS = 'P' 
    		and ffmMSG.TR_NO = ffmULD.TR_NO and ffmMSG.TR_NO = ffmshp.TR_NO and ffmULD.Doc_line_no = ffmshp.uDoc_line_no group by ffmMSG.flt_key, ffmMSG.flt_Date, ffmULD.ULD_KEY)  uldFfm 
    		on ffm.FLT_KEY = uldFfm.FLT_KEY and ffm.FLT_DATE = uldFfm.FLT_DATE and ffm.ULD_KEY = uldFFm.ULD_KEY             
  where ((ffm.flt_key = #fltKey# and ffm.flt_Date = #fltDate# ) 
  OR (ddt.flt_key = #fltKey# and ddt.flt_Date = #fltDate# ))
    and exists (select null from V_UNFIN_DDT_DTL where SHP_TRF_TYPE = 'QT' and flt_key = ffm.flt_key and flt_date = ffm.flt_date and nvl(ULD_KEY, '*') =  nvl(ffm.ULD_KEY, '*') 
                and (uld_key is not null or (uld_key is null and SHP_TRF_TYPE = 'QT' and awb_no = ffm.awb_no)))
      ) a       where 1 = 1 
       <isNotEmpty property="bulkIndYN">
	       <isEqual property="bulkIndYN" compareValue="N">
	       		and uldKey &lt;&gt; 'BULK'
	       			<isNotEmpty property="expFltKey">
					 	<isNotEmpty property="expFltDate">
					  			and  cntgFltKey = #expFltKey# and cntgFltDate = #expFltDate#
						</isNotEmpty>
					</isNotEmpty>
	       	</isEqual>
	       <isEqual property="bulkIndYN" compareValue="Y">
	       		and uldKey = 'BULK'
	       	</isEqual>
       	</isNotEmpty>
   order by  to_number(nvl(timeDiifferanceHhMi,0)) , uldKey
</select>

<!--  and rownum = 1  and ddt.awb_no = #awbNo# and ddt.awb_DATE = #awbDate# 
and decode(ddt.tr_No,null,ddt.tr_No,ffm.tr_No) is not null -->
<select id="fetchIndBoundULDAWBList_Dtl" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstBO" resultClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
<![CDATA[ 
select a.* from ( 
select nvl(ffm.awb_no,ddt.awb_no) awbNo,
SUBSTR(TRIM(nvl(ffm.awb_no,ddt.awb_no)),1,3)||'-'||SUBSTR(TRIM(nvl(ffm.awb_no,ddt.awb_no)),4) awbNoDisp,
TO_CHAR(nvl(ffm.awb_Date,ddt.awb_Date),'DDMONYY') awbDate, 
nvl(nvl(ffm.ULD_KEY,ddt.ULD_KEY),'BULK')  uldKey,
nvl(nvl(ffm.ULD_KEY,ddt.ULD_KEY),'BULK')  uldKeyShow,
nvl(nvl(ffm.ULD_KEY,ddt.ULD_KEY),'BULK') ||'-'|| nvl(ffm.awb_no,ddt.awb_no)  uldKeyAwbNo,
decode(ffm.tr_No,null,'N','Y') ffmInd,
decode(ddt.tr_No,null,'N','Y') ddtInd,
nvl(awb.ORIG,'') org, awb.DEST dest, nvl(ffm.PCS,0) pcs,nvl(ffm.WT,0) wt, ffm.shmpt_code shpmCode, NVL(AWB.PCS,0) awbPcs,NVL(AWB.WT,0) awbWt,
(case when ( nvl((select sum(shp_trf_pc) from v_ddt_dtl 
                    where AWB_NO = nvl(ffm.awb_no,ddt.awb_no) and AWB_DATE = nvl(ffm.awb_Date,to_date(ddt.awb_Date,'DDMONYY'))
                        and (SHP_TRF_TYPE = 'QT' OR (SHP_TRF_TYPE = 'IF' and CNTG_FLT_KEY is null))),0) 
                        != nvl((select sum(PMAN_PCS) from EXP_PMANIFEST_AWB where  AWB_NO = nvl(ffm.awb_no,ddt.awb_no) 
                        					and AWB_DATE = nvl(ffm.awb_Date,to_date(ddt.awb_Date,'DDMONYY'))),0))  
              then 'Y' else 'N' end) as manPman,
 nvl(ffm.flt_key,ddt.flt_key) fltKey , TO_CHAR(nvl(ffm.flt_Date,ddt.flt_Date),'DDMONYY')  fltDate,
  ddt.TR_NO ddtTrNo, ddt.SDOC_LINE_NO ddtSdocLineNo, ddt.UDOC_LINE_NO ddtUdocLineNo, ddt.DOC_LINE_NO ddtDocLineNo,
  case when (SELECT t1.cc_code FROM V_CST_IMP_CC_CODE_AWB t1,mast_constraint_code t2 WHERE t1.cc_code = t2.code AND awb_no = ffm.awb_no AND NVL(hawb_no, '000000000000000000') = '000000000000000000' and rownum = 1) is null
then (select CONST_CODE from CST_RECV WHERE AWB_NO =  ffm.awb_no and LM_DATE = (SELECT MAX(LM_DATE) FROM CST_RECV WHERE AWB_NO= ffm.awb_no) AND rownum=1)
else (SELECT t1.cc_code FROM V_CST_IMP_CC_CODE_AWB t1,mast_constraint_code t2 WHERE t1.cc_code = t2.code AND awb_no =  ffm.awb_no AND NVL(hawb_no, '000000000000000000') = '000000000000000000' and rownum = 1) end as ccode,
(SELECT STRAGG(STRINGDELIM(SHC, ',')) 
	    	FROM (SELECT DISTINCT SHC, ULD_KEY, FLT_KEY,FLT_DATE, AWB_NO, AWB_DATE,PRIORITY FROM V_IMP_FLT_ULD_SHC ORDER BY PRIORITY DESC
	      	) WHERE AWB_NO = NVL(ffm.awb_No,ddt.awb_No) AND AWB_DATE = NVL(ffm.awb_date,ddt.awb_date)
	      	AND FLT_KEY = nvl(ffm.flt_key,ddt.flt_key) AND FLT_DATE = nvl(ffm.flt_Date,ddt.flt_Date)
	      	and nvl(ULD_KEY,'BULK') = nvl(nvl(ffm.ULD_KEY,ddt.ULD_KEY),'BULK')
                )  shc,			
 ddt.SHP_CNTG_FLT_KEY cntgFltKey, ddt.SHP_CNTG_FLT_DATE cntgFltDate,
	ddt.SHP_CNTG_FLT_KEY oldCntgFltKey, ddt.SHP_CNTG_FLT_DATE oldCntgFltDate,
  decode(ddt.SHP_CNTG_FLT_KEY,null,'',PKG_COMMON.get_flt_carr(ddt.SHP_CNTG_FLT_KEY)) cntgFltCarr, REPLACE(ddt.SHP_CNTG_FLT_KEY, PKG_COMMON.get_flt_carr(ddt.SHP_CNTG_FLT_KEY), '') cntgFltNo,
  decode(ddt.SHP_CNTG_FLT_KEY,null,'',PKG_COMMON.get_flt_carr(ddt.SHP_CNTG_FLT_KEY)) oldCntgFltCarr, REPLACE(ddt.SHP_CNTG_FLT_KEY, PKG_COMMON.get_flt_carr(ddt.SHP_CNTG_FLT_KEY), '') oldCntgFltNo,
 ddt.SHP_TRF_TYPE trfType, ddt.SHP_BRK_BULK brkBulk, ddt.SHP_UNLDG_PT shpUnldgPt, 
  ddt.SHP_TRF_TYPE oldTrfType, ddt.SHP_BRK_BULK oldBrkBulk, ddt.SHP_UNLDG_PT oldShpUnldgPt, 
  ddt.SHP_TRF_PC trfPcs, ddt.SHP_TRF_WT trfWt,
	ddt.SHP_TRF_PC oldTrfPcs, ddt.SHP_TRF_WT oldTrfWt,
  (select eic_UNLDG_PT from ULD_INVENTORY where ULD_KEY = ffm.ULD_KEY) unldgPt,
      case when (select count(1) from imp_uld_list where FLT_KEY = ffm.flt_key and ffm.flt_Date = FLT_DATE
              and ULD_KEY = ffm.ULD_KEY and HANDLING_MODE in ('NBK','PPK')) > 0 then 'Y' 
               else '' end as noBreak, 
              ddt.Acton_code_1 actionOne, ddt.Acton_code_2 actionTwo , 'Y' spiltChkNotReqd,
FUN_GET_FLT_TDIFF_TRFYPE(ddt.SHP_CNTG_FLT_KEY, ddt.SHP_CNTG_FLT_DATE,#fltKey#,#fltDate#,'TIME_DIFF' ) timeDiifferance,
FUN_GET_FLT_TDIFF_TRFYPE(ddt.SHP_CNTG_FLT_KEY, ddt.SHP_CNTG_FLT_DATE,#fltKey#,#fltDate#,'TR_TYPE' ) proposeTrfType,
DECODE((select count(1) from awb where awb_no = nvl(ffm.awb_no,ddt.awb_no) and awb_date=nvl(ffm.awb_date,ddt.awb_date) and rownum=1),0,(select rmk from awb_rmk where awb_no=nvl(ffm.awb_no,ddt.awb_no) and awb_date=nvl(ffm.awb_date,ddt.awb_date)  and rownum=1),(select AIRLN_RMK from awb where awb_no = nvl(ffm.awb_no,ddt.awb_no) and awb_date=nvl(ffm.awb_date,ddt.awb_date)  and rownum=1)) AS awbAirlRmk,  
DECODE((select count(1) from imp_car_awb where awb_no = nvl(ffm.awb_no,ddt.awb_no) and awb_date=nvl(ffm.awb_date,ddt.awb_date)  and rownum=1),0,(select awb_rmk from awb where awb_no=nvl(ffm.awb_no,ddt.awb_no) and awb_date=nvl(ffm.awb_date,ddt.awb_date)  and rownum=1),(select WH_RMK from imp_car_awb where awb_no = nvl(ffm.awb_no,ddt.awb_no) and awb_date=nvl(ffm.awb_date,ddt.awb_date)  and rownum=1)) AS awbWhRmk,
d.AIRL_RMK uldAirlRmk, d.WH_RMK uldWhRmk,
DECODE(shp.RECD_PCS,'0','',shp.RECD_PCS) ||DECODE(shp.RECD_PCS,'0','','/')||DECODE(shp.RECD_WT,null,'',DECODE(trim(TO_CHAR(NVL(shp.RECD_WT,0),'99999990.0')),'0.0','',trim(TO_CHAR(NVL(shp.RECD_WT,0),'99999990.0')))) AS bdPcWt,
DECODE(shp.DAM_PCS,'0','',shp.DAM_PCS) ||DECODE(shp.DAM_PCS,'0','','/')|| DECODE(shp.DAM_WT,null,'',DECODE(trim(TO_CHAR(NVL(shp.DAM_WT,0),'99999990.0')),'0.0','',trim(TO_CHAR(NVL(shp.DAM_WT,0),'99999990.0')))) AS damPcWt     
from
(select  
ffmshp.awb_no awb_no, ffmshp.awb_Date awb_Date, ffmshp.ORG ORG, ffmshp.DEST DEST, nvl(ffmshp.MAN_PCS,0) PCS,
nvl(ffmshp.MAN_WT,0) WT, shmpt_code shmpt_code, ffmMSG.flt_key flt_key , ffmMSG.flt_Date flt_Date, ffmULD.ULD_KEY ULD_KEY, ffmMSG.TR_No tr_NO 
    from EDI_FFM_MSG ffmMSG, EDI_FFM_ULD ffmULD , edi_ffm_shp ffmshp 
    where ffmMSG.FFM_STATUS = 'P' 
    and ffmMSG.TR_NO = ffmULD.TR_NO and ffmMSG.TR_NO = ffmshp.TR_NO and ffmULD.Doc_line_no = ffmshp.uDoc_line_no 
    ) ffm 
FULL OUTER join  (select ddtView.awb_no awb_no, to_char(ddtView.awb_DATE,'DDMONYY') awb_DATE, ddtView.flt_key flt_key , 
                      to_char(ddtView.flt_Date,'DDMONYY') flt_Date, 
                	ddtView.TR_NO TR_NO, ddtView.sdoc_line_no Sdoc_line_no, ddtView.uDOC_LINE_NO UDOC_LINE_NO, ddtView.DOC_LINE_NO DOC_LINE_NO,
                	ddtView.ULD_KEY ULD_KEY , ddtView.SHP_CNTG_FLT_KEY SHP_CNTG_FLT_KEY, to_char(ddtView.SHP_CNTG_FLT_DATE,'DDMONYY') SHP_CNTG_FLT_DATE, 
                  	ddtView.SHP_TRF_TYPE SHP_TRF_TYPE,  ddtView.SHP_BRK_BULK SHP_BRK_BULK, to_char(ddtView.BASELINE_ETA,'DDMONYY') BASELINE_ETA,
                  	NVL( (TO_CHAR(TO_DATE(to_char(ddtView.BASELINE_ETA,'DDMONYY HH24MI'),'DDMONYY HH24MI') - 
                   			TO_DATE(TO_CHAR(FLT.SCH_DATE,'DDMONYY')|| ' ' || 
                   			TO_CHAR(NVL(FLT.EST_TIME,  FLT.SCH_TIME),'0000') ,'DDMONYY HH24MI')))  * 24  , 0 ) as etaChangedHrs,
                    ddtView.Acton_code_1 Acton_code_1, ddtView.Acton_code_2 Acton_code_2, ddtView.UNLDG_PT , ddtView.SHP_UNLDG_PT,
                    ddtView.SHP_TRF_PC , ddtView.SHP_TRF_WT
                  from V_UNFIN_DDT_DTL ddtView
              		join FLT_OPR FLT on FLT.FLT_KEY = ddtView.FLT_KEY and FLT.SCH_DATE = ddtView.FLT_DATE and FLT_type = 'A') ddt 
  				on ddt.flt_key = ffm.flt_key and  ddt.flt_Date =  ffm.flt_Date and nvl(ddt.ULD_KEY, '*') =  nvl(ffm.ULD_KEY, '*') AND DDT.AWB_NO = FFM.AWB_NO
 left join awb on awb.awb_NO = NVL(ffm.awb_No,ddt.awb_No) and awb.awb_Date = NVL(ffm.awb_Date,ddt.awb_Date)
 left join IMP_CAR_SHP shp on shp.awb_NO = NVL(ffm.awb_No,ddt.awb_No) and shp.awb_Date = NVL(ffm.awb_Date,ddt.awb_Date) and shp.flt_key = NVL(ffm.flt_key,ddt.flt_key) and shp.flt_Date = NVL(ffm.flt_Date,ddt.flt_Date)
 left join IMP_ULD_LIST D
     ON nvl(D.ULD_KEY,'BULK') = nvl(nvl(ffm.ULD_KEY,ddt.ULD_KEY),'BULK')  and d.flt_key = NVL(ffm.flt_key,ddt.flt_key) and d.flt_date = NVL(ffm.flt_Date,ddt.flt_Date) 
  where ((ffm.flt_key = #fltKey# and ffm.flt_Date = #fltDate# ) 
  		OR (ddt.flt_key = #fltKey# and ddt.flt_Date = #fltDate# ))
  		and nvl(nvl(ffm.ULD_KEY,ddt.ULD_KEY),'BULK') = #uldKey#  
   ]]>
   <isNotEmpty property="trfType">
		and ddt.SHP_TRF_TYPE = nvl(#trfType#,ddt.SHP_TRF_TYPE)
	</isNotEmpty>
   ) a ORDER BY  timeDiifferance, awbNo , awbDate
</select>

<select id="fetchIndBoundTransitFltList" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstBO" resultClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
<![CDATA[ 
select 
   ddt.CNTG_FLT_KEY cntgFltKey, ddt.CNTG_FLT_DATE cntgFltDate  
from
(select  
FFMSHP.AWB_NO AWB_NO, FFMSHP.AWB_DATE AWB_DATE, FFMSHP.ORG ORG, FFMSHP.DEST DEST, NVL(FFMSHP.MAN_PCS,0) PCS,
NVL(FFMSHP.MAN_WT,0) WT, FFMMSG.FLT_KEY FLT_KEY , FFMMSG.FLT_DATE FLT_DATE, FFMULD.ULD_KEY ULD_KEY, FFMMSG.TR_NO TR_NO,

ffmULD.CNTG_FLT_CARR1 ||ffmULD.CNTG_FLT_NO1 CNTG_FLT_KEY,ffmULD.CNTG_FLT_DATE1 CNTG_FLT_DATE
    from EDI_FFM_MSG ffmMSG, EDI_FFM_ULD ffmULD , edi_ffm_shp ffmshp 
    where FFMMSG.FFM_STATUS = 'P' and FFMSHP.DEST != 'HKG' 
    and ffmMSG.TR_NO = ffmULD.TR_NO and ffmMSG.TR_NO = ffmshp.TR_NO and ffmULD.Doc_line_no = ffmshp.uDoc_line_no 
    ) ffm 
join  (select ddtView.awb_no awb_no, to_char(ddtView.awb_DATE,'DDMONYY') awb_DATE, ddtView.flt_key flt_key , 
                      to_char(ddtView.flt_Date,'DDMONYY') flt_Date, 
                	ddtView.TR_NO TR_NO, ddtView.sdoc_line_no Sdoc_line_no, ddtView.uDOC_LINE_NO UDOC_LINE_NO, ddtView.DOC_LINE_NO DOC_LINE_NO,
                	ddtView.ULD_KEY ULD_KEY , ddtView.SHP_CNTG_FLT_KEY CNTG_FLT_KEY, to_char(ddtView.SHP_CNTG_FLT_DATE,'DDMONYY') CNTG_FLT_DATE, 
                  	ddtView.TRF_TYPE TRF_TYPE,  ddtView.BRK_BULK BRK_BULK, to_char(ddtView.BASELINE_ETA,'DDMONYY') BASELINE_ETA,
                  	NVL( (TO_CHAR(TO_DATE(to_char(ddtView.BASELINE_ETA,'DDMONYY HH24MI'),'DDMONYY HH24MI') - 
                   			TO_DATE(TO_CHAR(FLT.SCH_DATE,'DDMONYY')|| ' ' || 
                   			TO_CHAR(NVL(FLT.EST_TIME,  FLT.SCH_TIME),'0000') ,'DDMONYY HH24MI')))  * 24  , 0 ) as etaChangedHrs,
                        NVL( (TO_CHAR(TO_DATE(to_char(ddtView.BASELINE_ETA,'DDMONYY HH24MI'),'DDMONYY HH24MI') - 
                   			TO_DATE(TO_CHAR(FLT.SCH_DATE,'DDMONYY')|| ' ' || 
                   			TO_CHAR(NVL(FLT.EST_TIME,  FLT.SCH_TIME),'0000') ,'DDMONYY HH24MI')))  * 24 * 60 , 0 ) as etaChangedMin,
                    ddtView.Acton_code_1 Acton_code_1, ddtView.Acton_code_2 Acton_code_2, ddtView.UNLDG_PT , ddtView.SHP_UNLDG_PT,
                    ddtView.SHP_TRF_PC , ddtView.SHP_TRF_WT
                  from V_UNFIN_DDT_DTL ddtView
              		join FLT_OPR FLT on FLT.FLT_KEY = ddtView.FLT_KEY and FLT.SCH_DATE = ddtView.FLT_DATE and FLT_type = 'A') ddt 
  				on DDT.FLT_KEY = FFM.FLT_KEY and  DDT.FLT_DATE =  FFM.FLT_DATE and nvl(DDT.ULD_KEY, '*') =  nvl(FFM.ULD_KEY, '*') and DDT.AWB_NO = FFM.AWB_NO
 where 
   ((ffm.flt_key = #fltKey# and ffm.flt_Date = #fltDate# ) 
 		OR (ddt.flt_key = #fltKey# and ddt.flt_Date = #fltDate# ))
   		 
  ]]>
  	<isNotEmpty property="expFltKey">
	 	<isNotEmpty property="expFltDate">
	  			and  ddt.CNTG_FLT_KEY = #expFltKey# and ddt.CNTG_FLT_DATE = #expFltDate#
		</isNotEmpty>
	</isNotEmpty>
 		
 		group by ddt.CNTG_FLT_KEY , ddt.CNTG_FLT_DATE  
</select>


<select id="fetchIndBoundTransitBulkList" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstBO" resultClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
<![CDATA[ 
select distinct FLT_KEY, FLT_DATE, ULD_KEY uldKey, LOC_CODE locn
		from IMP_RAMP_CHK_DTL r
		join mast_wh_loc l on l.code = r.loc_code
		join mast_wh_group g on l.wh_group = g.wh_group and g.wh_type = 'QT'
		join mast_uld_type t on t.code = r.uld_type and (t.h_cont_ind = 'Y' or t.bt_ind = 'Y')
where r.flt_key = #fltKey# and r.flt_Date = #fltDate#  and NVL(r.chkin_yn,'N')='Y'
 ]]>
</select>


<select id="fetchIndBoundTransitAwbInvtryList" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" resultClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
<![CDATA[ 
	select A.LOC_CODE locn, 
	A.LSP_NO lspNo, 
	A.ULD_KEY uldKey,
	A.LOCN_PCS locnPcs, 
	A.LOCN_WT locnWt, 
	A.WH_DAM_IND whDamInd , 
	case when A.LSP_NO is not null then (select L.TARGET from LSP_INVENTORY L where L.LSP_NO = A.LSP_NO)  
	else case when A.ULD_KEY is not null then (select U.TARGET from ULD_INVENTORY U where U.ULD_KEY = A.ULD_KEY)
	else '' end end  as  target
	from awb_inventory A where awb_no = #awbNo# and awb_date = #awbDate# and flt_key = #fltKey# and flt_Date = #fltDate#
 ]]>
</select>

<select id="getTimeAllotList" parameterClass="java.lang.String" resultClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO">
	<![CDATA[	
		select           
			to_char(trunc(to_date(#passDate#,'DDMONYY HH24:MI')+1/96, 'hh') + 
			floor(to_char(to_date(#passDate#,'DDMONYY HH24:MI')+1/96, 'mi')/15)*15/1440 ,'DDMONYY HH24:MI') ||' - '||           
			to_char(trunc(to_date(#passDate#,'DDMONYY HH24:MI')+1/48, 'hh') + 
			floor(to_char(to_date(#passDate#,'DDMONYY HH24:MI')+1/48, 'mi')/15)*15/1440 ,'DDMONYY HH24:MI') showTimeLabel,                        
			to_char(trunc(to_date(#passDate#,'DDMONYY HH24:MI')+1/96, 'hh') + 
			floor(to_char(to_date(#passDate#,'DDMONYY HH24:MI')+1/96, 'mi')/15)*15/1440 ,'DDMONYY HH24:MI') fullDateTime, 
			to_char(trunc(to_date(#passDate#,'DDMONYY HH24:MI')+1/96, 'hh') + 
			floor(to_char(to_date(#passDate#,'DDMONYY HH24:MI')+1/96, 'mi')/15)*15/1440 ,'DDMONYY HH24:MI') startDateTime,    
			to_char(trunc(to_date(#passDate#,'DDMONYY HH24:MI')+1/48, 'hh') + 
			floor(to_char(to_date(#passDate#,'DDMONYY HH24:MI')+1/48, 'mi')/15)*15/1440 ,'DDMONYY HH24:MI') endDateTime,    
		    to_char(trunc(to_date(#passDate#,'DDMONYY HH24:MI')+1/96, 'hh') + 
			floor(to_char(to_date(#passDate#,'DDMONYY HH24:MI')+1/96, 'mi')/15)*15/1440 ,'DDMONYY') showDate,           
			substr(to_char(trunc(to_date(#passDate#,'DDMONYY HH24:MI')+1/96, 'hh') + 
			floor(to_char(to_date(#passDate#,'DDMONYY HH24:MI')+1/96, 'mi')/15)*15/1440 ,'DDMONYY HH24:MI'),9) startTime,     
            substr(to_char(trunc(to_date(#passDate#,'DDMONYY HH24:MI')+1/48, 'hh') + 
			floor(to_char(to_date(#passDate#,'DDMONYY HH24:MI')+1/48, 'mi')/15)*15/1440 ,'DDMONYY HH24:MI'),9) endTime    
		from dual
	]]>
</select>   

<select id="getQTAreaWrkstnsList" parameterClass="java.lang.String" resultClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO">
	<![CDATA[		
		select code wrkstn, code_desc wrkstnDesc from MAST_code_dtl where code_type = 'QT_AREA'	
	]]>
	
	
</select>

<select id="getQtAllot_List" parameterClass="map" resultClass="java.lang.String">
	select	FUN_GET_ALLOTMENTS_EXP(#fltKey#, #fltDate#, #unldgPnt#, #valueParam#) allt from dual
</select>

<select id="getExstQtAllot_List" parameterClass="map" resultClass="cargo.cms.imprt.bo.TsnstCntrlChklstBO">
	select 
		   TR_NO qtAllotTrNo,		
		   FLT_KEY fltKey,
		   FLT_DATE fltDate,
		   UNLDG_PT unldgPt,
		   ALLOT_TYPE allotType,
		   QTY allotQty,
		   to_char(TIME_FROM,'DDMONYY') dateFrom,
		   to_char(TIME_FROM,'HH24') fromHh,
		   to_char(TIME_FROM,'MI') fromMi,
		   to_char(TIME_TO,'DDMONYY') dateTo,
		   to_char(TIME_TO,'HH24') toHh,
		   to_char(TIME_TO,'MI') toMi,
		   WORKSTATION wrkStns,
		   FLT_TYPE fltType
		   FROM QT_ALLOT WHERE FLT_KEY = #fltKey# AND FLT_DATE = #fltDate# AND UNLDG_PT = #unldgPnt# AND FLT_TYPE='D'
</select>
<select id="checkPmanCountforAutoPman" parameterClass="map" resultClass="java.lang.Integer">
<![CDATA[
SELECT COUNT(*) FROM EXP_PMANIFEST_AWB WHERE FLT_KEY=#fltKey# AND FLT_DATE=#fltDate# AND AWB_NO=#awbNo# AND AWB_DATE=#awbDate# AND UNLDG_PT=#unldgPt# AND ASSIGNED_BULK_PCS=0
	]]>
</select>

<select id="checkWrkstnsAllotment" parameterClass="map" resultClass="java.lang.Integer">
	<![CDATA[
			select count(1) from QT_Allot where flt_key = #fltKey# and flt_date = #fltDate# and unldg_pt = #unldgPt#
			and time_from = to_date(#fullDateTime#,'DDMONYY HH24:MI') and workstation = #wrkstn#
	]]>
</select>

<select id="validateWrkstnTimeAllotList" parameterClass="map" resultClass="java.lang.Integer">
 <![CDATA[
      select count(1) from QT_Allot where
     				workstation = #wrkstn#	and 
      	(time_from between TO_DATE(#dateFrom# ||' ' ||#fromHh#||#fromMi#,'DDMONYY HH24MI') and TO_DATE(#dateTo# ||' ' ||#toHh#||#toMi#,'DDMONYY HH24MI') 
       	OR
      	time_to between TO_DATE(#dateFrom# ||' ' ||#fromHh#||#fromMi#,'DDMONYY HH24MI') and TO_DATE(#dateTo# ||' ' ||#toHh#||#toMi#,'DDMONYY HH24MI') )   
]]>
</select>

<!-- and flt_key = #fltKey# and flt_date = #fltDate# and unldg_pt = #unldgPt# -->
<select id="checkWrkstnTimeAllot" parameterClass="map" resultClass="java.lang.Integer">
 <![CDATA[
      select count(1) from QT_Allot where workstation = #wrkstn#	
       				and time_from <= TO_DATE(#startDateTime#,'DDMONYY HH24MI') and time_to >= TO_DATE(#endDateTime#,'DDMONYY HH24MI')
]]>
</select>  



<select id="validateWrkstn" parameterClass="java.lang.String" resultClass="java.lang.Integer">
	<![CDATA[		
		select count(1)
		from MAST_WH_LOC loc, MAST_WH_Group grp 
		where loc.wh_group = grp.wh_group and grp.wh_type = 'QT' and code = #wrkstn#
	]]>
</select>

<update id="update_DDT_SHP_TRF_DTL_ULD" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
	update DDT_SHP_TRF_DTL set 
      QT_BU =  #qtBuInd#,      
      LM_USER_ID = #lmUserId#,
      LM_DATE = sysdate 
      where TR_NO = #ddtTrNo# and DOC_LINE_NO = #ddtDocLineNo# and SDOC_LINE_NO = #ddtSdocLineNo#
</update>

<!-- Export Start -->

<select id="fetchTrnstULDOutBoundFltList" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstBO" resultClass="cargo.cms.imprt.bo.TsnstCntrlChklstBO" >
select flt.flt_key fltKey, to_char(flt.sch_date,'DDMONYY') fltDate, flt.carr_code fltCarr, flt.flt_No fltNo,
FFMDDT.cntgFltKey cntgFltKey, to_char(FFMDDT.cntgFltDate,'DDMONYY')  cntgFltDate,
pkg_common.get_flt_final_ata_eta_sta(flt.flt_key,flt.sch_date,'D','DD') etd,
NVL(flt.EST_DATE,flt.sch_date), 
(select code_desc from mast_code_dtl where code_type = 'CGO_ACFT_TYPE' and  code = flt.cgo_acft_type) cgoAcfType, flt.cgo_acft_type cgoAcfTypeCode,
FUN_GET_ALLOTMENTS_EXP(flt.flt_key,to_char(flt.sch_date,'DDMONYY'),'', 'EST_BD_BU_EXP') estBdBuExp, 
FUN_GET_ALLOTMENTS_EXP(flt.flt_key,to_char(flt.sch_date,'DDMONYY'),'', 'LST_BD_BU_EXP') lstBdBuExp, 
(SELECT WH_AREA_DESC FROM MAST_WH_AREA WHERE MODULE_YN = 'Y' and WH_AREA = flt.flt_module1) fltModule, flt.flt_module1 fltModuleCode 
from flt_opr flt
join FLT_OPR_EVENTS FLTEVENTS on FLT.FLT_KEY = FLTEVENTS.FLT_KEY and FLT.SCH_DATE = FLTEVENTS.SCH_DATE and flt.tr_No = FLTEVENTS.tr_No
join (select SHP_CNTG_FLT_KEY cntgFltKey, SHP_CNTG_FLT_DATE cntgFltDate from  V_UNFIN_DDT_DTL 
        where DDT_STATUS = 'P'	
		<isNotEmpty property="expFltKey" >
		  	and SHP_CNTG_FLT_KEY = #expFltKey#
		</isNotEmpty>
		<isNotEmpty property="expFltDate" >	 
		  	and  SHP_CNTG_FLT_DATE = #expFltDate# 
		</isNotEmpty>				
		group by SHP_CNTG_FLT_KEY , SHP_CNTG_FLT_DATE 
       ) FFMDDT on FFMDDT.cntgFltKey = flt.FLT_KEY and FFMDDT.cntgFltDate = flt.SCH_DATE       
join (select SHP_CNTG_FLT_KEY cntgFltKey, SHP_CNTG_FLT_DATE cntgFltDate from  V_UNFIN_DDT_DTL 
        where DDT_STATUS = 'P' 
		<isNotEmpty property="impFltKey" >
		and FLT_KEY = #impFltKey#
		</isNotEmpty>
		<isNotEmpty property="impFltKey" >
			<isNotEmpty property="impFltDate" >	 
			and  FLT_DATE = #impFltDate#
			</isNotEmpty>
		</isNotEmpty>		
		group by  SHP_CNTG_FLT_KEY , SHP_CNTG_FLT_DATE 	 
       ) DDTIMP on DDTIMP.cntgFltKey = flt.FLT_KEY and DDTIMP.cntgFltDate = flt.SCH_DATE          
where exists (select null from v_unfin_ddt_dtl where SHP_CNTG_FLT_KEY = FLT.FLT_KEY and SHP_CNTG_FLT_DATE = FLT.SCH_DATE)
and flt.flt_type ='D'
<isNotEmpty property="cgoAcftType" >	 
and flt.CGO_ACFT_TYPE = #cgoAcftType# 
</isNotEmpty>
<isNotEmpty property="fltModule" >	 
and flt.flt_module1 = #fltModule# 
</isNotEmpty>
<isNotEmpty property="fromEta" >
<isNotEmpty property="toEta" >	 
and NVL(NVL(flt.EST_TIME, flt.ACT_TIME),  flt.SCH_TIME) between #fromEta# and #toEta#
</isNotEmpty>
</isNotEmpty>
 <isEqual property="qtBu" compareValue="Y" >	 
  	and exists (select null from V_UNFIN_DDT_DTL vddt where vddt.DDT_STATUS = 'P' and vddt.SHP_CNTG_FLT_KEY = flt.FLT_KEY and  vddt.SHP_CNTG_FLT_DATE = flt.SCH_DATE  and vddt.QT_BU = 'Y')
</isEqual>
	<isEmpty property="cntgFltCarr" >
	 	<isEmpty property="fltCarr" >
		  <isNotEmpty property="loginCarrier">
			AND ( flt.carr_code = #loginCarrier#   OR  flt.carr_code IN (SELECT CARR_CODE FROM MAST_CARR_GRP  WHERE GRP_CARR_CODE = #loginCarrier#))                
		  </isNotEmpty>		 
	 	</isEmpty>		 
	 </isEmpty>
 ORDER BY 8,7 
</select>

<select id="fetchTrnstULDOutBoundFltList_unldgList" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstBO" resultClass="cargo.cms.imprt.bo.TsnstCntrlChklstBO" >
select flt.flt_key fltKey, to_char(flt.sch_date,'DDMONYY') fltDate, flt.carr_code fltCarr, flt.flt_No fltNo, fltLeg.OFF_POINT unldgPt, 
FFMDDT.cntgFltKey cntgFltKey, to_char(FFMDDT.cntgFltDate,'DDMONYY')  cntgFltDate,
to_char(nvl(nvl(flt.act_time, flt.est_time), flt.sch_time),'0000') etd,
(select code_desc from mast_code_dtl where code_type = 'CGO_ACFT_TYPE' and  code = flt.cgo_acft_type) cgoAcfType, flt.cgo_acft_type cgoAcfTypeCode,
FUN_GET_ALLOTMENTS_EXP(flt.flt_key,   to_char(flt.sch_date,'DDMONYY'),fltLeg.OFF_POINT, 'EST_BD_BU_EXP') estBdBuExp, 
FUN_GET_ALLOTMENTS_EXP(flt.flt_key,   to_char(flt.sch_date,'DDMONYY'),fltLeg.OFF_POINT, 'LST_BD_BU_EXP') lstBdBuExp, 
(SELECT WH_AREA_DESC FROM MAST_WH_AREA WHERE MODULE_YN = 'Y' and WH_AREA = flt.flt_module1) fltModule, flt.flt_module1 fltModuleCode, 
FUN_GET_ALLOTMENTS_EXP(flt.flt_key,  to_char(flt.sch_date,'DDMONYY'), fltLeg.OFF_POINT, 'ALLT_EXP') allt,
FUN_GET_ALLOTMENTS_EXP(flt.flt_key,  to_char(flt.sch_date,'DDMONYY'), fltLeg.OFF_POINT, 'QT_SHP_EXP') qtShpExp, 
FUN_GET_ALLOTMENTS_EXP(flt.flt_key,  to_char(flt.sch_date,'DDMONYY'), fltLeg.OFF_POINT, 'QT_SHP_COMPL_EXP') qtShpComplExp,
FUN_GET_ALLOTMENTS_EXP(flt.flt_key,  to_char(flt.sch_date,'DDMONYY'), fltLeg.OFF_POINT, 'QT_SHP_BU_EXP') qtShpBuExp,
FUN_GET_ALLOTMENTS_EXP(flt.flt_key,  to_char(flt.sch_date,'DDMONYY'), fltLeg.OFF_POINT, 'QT_ALLT_EXP') qtAllotExp
from flt_opr flt
join FLT_OPR_EVENTS FLTEVENTS on FLT.FLT_KEY = FLTEVENTS.FLT_KEY and FLT.SCH_DATE = FLTEVENTS.SCH_DATE and flt.tr_No = FLTEVENTS.tr_No
join flt_opr_leg fltLeg on fltLeg.flt_type ='D' and FLT.FLT_KEY = fltLeg.FLT_KEY and FLT.SCH_DATE = fltLeg.SCH_DATE
join (select SHP_CNTG_FLT_KEY cntgFltKey, SHP_CNTG_FLT_DATE cntgFltDate, SHP_UNLDG_PT unldgPt from  V_UNFIN_DDT_DTL 
        where DDT_STATUS = 'P'
		<isNotEmpty property="cntgFltKey" >
		  	and SHP_CNTG_FLT_KEY = #cntgFltKey#
		</isNotEmpty>
		<isNotEmpty property="cntgFltDate" >	 
		  	and  SHP_CNTG_FLT_DATE = #cntgFltDate# 
		</isNotEmpty>
		group by SHP_CNTG_FLT_KEY , SHP_CNTG_FLT_DATE , SHP_UNLDG_PT
		       
       ) FFMDDT on FFMDDT.cntgFltKey = fltLeg.FLT_KEY and FFMDDT.cntgFltDate = fltLeg.SCH_DATE   and  FFMDDT.unldgPt = fltLeg.OFF_POINT
where exists (select null from V_UNFIN_DDT_DTL where SHP_CNTG_FLT_KEY = FLT.FLT_KEY and SHP_CNTG_FLT_DATE = FLT.SCH_DATE)
and flt.flt_type ='D' and fltLeg.OFF_POINT != 'HKG'
<isNotEmpty property="searchUnldgPt" >	 
  	and  fltLeg.OFF_POINT = #searchUnldgPt#  	
</isNotEmpty>
<isEmpty property="cntgFltCarr" >
	<isEmpty property="fltCarr" >
		 <isNotEmpty property="loginCarrier">
				AND ( flt.carr_code = #loginCarrier#   OR  flt.carr_code IN (SELECT CARR_CODE FROM MAST_CARR_GRP  WHERE GRP_CARR_CODE = #loginCarrier#))              
		 </isNotEmpty>		 
	</isEmpty>		 
</isEmpty>
</select>

<select id="fetchOutBoundTransitUldShpList" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstBO" resultClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
<![CDATA[ 
select
nvl(ddt.ULD_KEY,'BULK')  uldKey, nvl(ddt.ULD_KEY,'BULK') ||'-'|| ddt.awb_no  uldKeyAwbNo, 
ddt.awb_no awbNo, SUBSTR(TRIM(ddt.awb_no),1,3)||'-'||SUBSTR(TRIM(ddt.awb_no),4) awbNoDisp,  to_char(ddt.awb_Date,'DDMONYY') awbDate, 
nvl(awb.ORIG,'') org, awb.DEST dest, ddt.UNLDG_PT unldgPt,ddt.UNLDG_PT uldUnldgPt, ddt.SHP_UNLDG_PT shpUnldgPt, 
ddt.UNLDG_PT oldUldUnldgPt, ddt.SHP_UNLDG_PT oldShpUnldgPt, 
ddt.flt_key fltKey , to_char(ddt.flt_Date,'DDMONYY')  fltDate,
PKG_COMMON.get_flt_eta(ddt.flt_key, ddt.flt_Date, 'A', 'DD') eta,
NVL(AWB.PCS,0) awbPcs,NVL(AWB.WT,0) awbWt, 
NVL(FFM.PCS,0) ffmPcs,NVL(FFM.WT,0) ffmWt, FFM.shmpt_code shpmCode,
ddt.qt_bu as qtBuInd,
(select NVL(SUM(MIX_PCS)+SUM(PPK_PCS)+SUM(ASSIGNED_BULK_PCS),0)||'/'|| NVL(SUM(MIX_WT)+SUM(PPK_WT)+SUM(ASSIGNED_BULK_WT),0) 
        from EXP_PMANIFEST_AWB 
        where FLT_KEY = ddt.SHP_CNTG_FLT_KEY  and FLT_DATE = ddt.SHP_CNTG_FLT_Date
        and AWB_NO = DDT.AWB_NO and AWB_DATE = DDT.AWB_DATE) buPcWt,
        
(select NVL(SUM(PMAN_PCS),0)||'/'|| NVL(SUM(PMAN_WT),0)  from EXP_PMANIFEST_AWB 
        where FLT_KEY = DDT.SHP_CNTG_FLT_KEY  and FLT_DATE = DDT.SHP_CNTG_FLT_DATE
        and AWB_NO = DDT.AWB_NO and AWB_DATE = DDT.AWB_DATE) pmanPcWt,       
        
(select sum(SHP.RECD_PCS)||'/'|| sum(SHP.RECD_WT) from  IMP_CAR_SHP SHP
          where SHP.AWB_NO = DDT.AWB_NO and SHP.AWB_DATE = DDT.AWB_DATE
          and  SHP.FLT_KEY = DDT.FLT_KEY and SHP.FLT_DATE = DDT.FLT_DATE group by SHP.AWB_NO,SHP.AWB_DATE,SHP.FLT_KEY,SHP.FLT_DATE) as bdPcWt, 
(select loc_code from  ULD_INVENTORY uldInv where ddt.uld_key = uldInv.uld_key and rownum = 1) locn, 
NVL(JODTL.PC,0) joPcs, NVL(JODTL.WT,0) joWt,          
NVL(ddt.SHP_TRF_PC,0) trfPcs, NVL(ddt.SHP_TRF_WT,0) trfWt,
nvl(ddt.LOADED_PCS,0) pcs,nvl(ddt.LOADED_WT,0) wt, ddt.SHP_TRF_PC trfPcs , ddt.SHP_TRF_WT  trfWt, ddt.BRK_BULK brkBulk,
round(ddtEtd.etdChangedHrs) etdChangedHrs, 
       round(ddtEtd.etdChangedMin) etdChangedMin,
       round(ddtEtd.etdChangedHrs)  || 'h'|| (round(ddtEtd.etdChangedMin) - (ROUND(ddtEtd.etdChangedHrs) * 60)) ||'m' etdChangedHrsMin,
   ddt.TRF_TYPE trfType, 
   ddt.TR_NO ddtTrNo, ddt.SDOC_LINE_NO ddtSdocLineNo, ddt.UDOC_LINE_NO ddtUdocLineNo, ddt.DOC_LINE_NO ddtDocLineNo,
   ddt.SHP_CNTG_FLT_KEY cntgFltKey, to_char(ddt.SHP_CNTG_FLT_DATE,'DDMONYY') cntgFltDate,  
   ddt.SHP_CNTG_FLT_KEY oldCntgFltKey, to_char(ddt.SHP_CNTG_FLT_DATE,'DDMONYY') oldCntgFltDate,  
   decode(ddt.SHP_CNTG_FLT_KEY,null,'',PKG_COMMON.get_flt_carr(ddt.SHP_CNTG_FLT_KEY)) cntgFltCarr, REPLACE(ddt.SHP_CNTG_FLT_KEY, PKG_COMMON.get_flt_carr(ddt.SHP_CNTG_FLT_KEY), '') cntgFltNo,
   decode(ddt.SHP_CNTG_FLT_KEY,null,'',PKG_COMMON.get_flt_carr(ddt.SHP_CNTG_FLT_KEY)) oldCntgFltCarr, REPLACE(ddt.SHP_CNTG_FLT_KEY, PKG_COMMON.get_flt_carr(ddt.SHP_CNTG_FLT_KEY), '') oldCntgFltNo,
   ddt.TRF_TYPE trfType, ddt.TRF_TYPE oldTrfType,   ddt.BRK_BULK brkBulk,ddt.BRK_BULK oldBrkBulk,   
(SELECT STRAGG(STRINGDELIM(SHC, ',')) 
	    	FROM (SELECT DISTINCT SHC, ULD_KEY, FLT_KEY,FLT_DATE, AWB_NO, AWB_DATE,PRIORITY FROM V_IMP_FLT_ULD_SHC ORDER BY PRIORITY DESC
	      	) WHERE AWB_NO = ddt.awb_No AND AWB_DATE = ddt.awb_date
	      	AND FLT_KEY = ddt.flt_key AND FLT_DATE = ddt.flt_Date
	      	and nvl(ULD_KEY,'BULK') = nvl(ddt.ULD_KEY,'BULK')
                )  shc,
        (SELECT V.CC_CODE FROM V_CST_CC_CODE_AWB V
                WHERE V.AWB_NO = ddt.awb_no
          AND NVL(V.HAWB_NO, '000000000000000000') =  '000000000000000000' AND ROWNUM = 1)  ccode,
           JO.BU_INST buildInstr, ddt.QT_BU qtBu,
FUN_GET_FLT_TDIFF_TRFYPE(ddt.shp_CNTG_FLT_KEY, ddt.shp_CNTG_FLT_DATE,ddt.FLT_KEY, ddt.FLT_DATE,'TIME_DIFF' ) timeDiifferance,
FUN_GET_FLT_TDIFF_TRFYPE(ddt.shp_CNTG_FLT_KEY, ddt.shp_CNTG_FLT_DATE,ddt.FLT_KEY, ddt.FLT_DATE,'TR_TYPE' ) proposeTrfType    
from V_UNFIN_DDT_DTL ddt
join (select V_UNFIN_DDT_DTL.SHP_CNTG_FLT_KEY , V_UNFIN_DDT_DTL.SHP_CNTG_FLT_DATE,  V_UNFIN_DDT_DTL.TR_NO , V_UNFIN_DDT_DTL.SDOC_LINE_NO , V_UNFIN_DDT_DTL.UDOC_LINE_NO , V_UNFIN_DDT_DTL.DOC_LINE_NO ,
          NVL( (TO_CHAR(TO_DATE(TO_CHAR(V_UNFIN_DDT_DTL.BASELINE_ETD,'DDMONYY HH24MI'),'DDMONYY HH24MI') - 
                      TO_DATE(TO_CHAR(FLT_OPR.SCH_DATE,'DDMONYY')|| ' ' || 
                      TO_CHAR(NVL(FLT_OPR.EST_TIME,  FLT_OPR.SCH_TIME),'0000') ,'DDMONYY HH24MI')))  * 24  , 0 ) as etdChangedHrs,
		NVL( (TO_CHAR(TO_DATE(TO_CHAR(V_UNFIN_DDT_DTL.BASELINE_ETD,'DDMONYY HH24MI'),'DDMONYY HH24MI') - 
                      TO_DATE(TO_CHAR(FLT_OPR.SCH_DATE,'DDMONYY')|| ' ' || 
                      TO_CHAR(NVL(FLT_OPR.EST_TIME,  FLT_OPR.SCH_TIME),'0000') ,'DDMONYY HH24MI')))  * 24 * 60 , 0 ) as etdChangedMin
      from V_UNFIN_DDT_DTL  , FLT_OPR  where V_UNFIN_DDT_DTL.SHP_TRF_TYPE = 'QT' and V_UNFIN_DDT_DTL.SHP_CNTG_FLT_KEY = FLT_OPR.FLT_KEY and FLT_OPR.SCH_DATE = V_UNFIN_DDT_DTL.SHP_CNTG_FLT_DATE and FLT_OPR.FLT_TYPE ='D') ddtEtd
      on ddt.SHP_CNTG_FLT_KEY = ddtEtd.SHP_CNTG_FLT_KEY and ddt.SHP_CNTG_FLT_DATE = ddtEtd.SHP_CNTG_FLT_DATE 
          and  ddtEtd.TR_NO = ddt.TR_NO and ddtEtd.SDOC_LINE_NO = ddt.SDOC_LINE_NO
          and ddtEtd.UDOC_LINE_NO = ddt.UDOC_LINE_NO and ddtEtd.DOC_LINE_NO = ddt.DOC_LINE_NO
join FLT_OPR FLT on ddt.SHP_CNTG_FLT_KEY = FLT.FLT_KEY and FLT.SCH_DATE = ddt.SHP_CNTG_FLT_DATE and FLT.FLT_TYPE ='D'
left join awb on awb.awb_NO = ddt.awb_No and awb.awb_Date = ddt.awb_Date
LEFT JOIN   (SELECT SUM(JO_DTL.AWB_JO_PC) PC ,SUM(JO_DTL.AWB_JO_WT) WT,JO_HD.FLT_KEY FLT_KEY, JO_HD.FLT_DATE FLT_DATE ,JO_DTL.AWB_NO AWB_NO ,JO_DTL.AWB_DATE AWB_DATE 
FROM EXP_BU_JO JO_HD 
JOIN EXP_BU_JO_DTL JO_DTL 
ON JO_HD.JO_NO = JO_DTL.JO_NO
WHERE CONFIRMED_YN='Y' 
group by JO_HD.FLT_KEY, JO_HD.FLT_DATE, JO_DTL.AWB_NO, JO_DTL.AWB_DATE) JODTL
ON JODTL.FLT_KEY = DDT.SHP_CNTG_FLT_KEY  AND JODTL.FLT_DATE = DDT.SHP_CNTG_FLT_DATE
AND JODTL.AWB_NO = DDT.AWB_NO  AND JODTL.AWB_DATE =  DDT.AWB_DATE
left join (select ffmshp.awb_no awb_no, ffmshp.awb_Date awb_Date, sum(nvl(ffmshp.MAN_PCS,0)) PCS, MIN(shmpt_code) shmpt_code,
    SUM(nvl(ffmshp.MAN_WT,0)) WT, ffmMSG.flt_key flt_key , ffmMSG.flt_Date flt_Date,ffmULD.ULD_KEY
    from EDI_FFM_MSG ffmMSG, EDI_FFM_ULD ffmULD , edi_ffm_shp ffmshp 
    where ffmMSG.FFM_STATUS = 'P' and ffmshp.dest != 'HKG' 
    and ffmMSG.TR_NO = ffmULD.TR_NO and ffmMSG.TR_NO = ffmshp.TR_NO and ffmULD.Doc_line_no = ffmshp.uDoc_line_no group by ffmshp.awb_no, ffmshp.awb_Date, ffmMSG.flt_key, ffmMSG.flt_Date,ffmULD.ULD_KEY 
    ) ffm on ddt.FLT_KEY = ffm.flt_key and ffm.flt_DATE = ddt.FLT_DATE and ffm.awb_NO = ddt.awb_No and ffm.awb_Date = ddt.awb_Date and ffm.ULD_KEY=ddt.uld_key
left join (select BU_INST, AIRL_RMK, WH_RMK, EXP_BU_JO.FLT_KEY, EXP_BU_JO.FLT_DATE, EXP_BU_JO_DTL.AWB_NO ,EXP_BU_JO_DTL.AWB_DATE 
            from      EXP_BU_JO ,  EXP_BU_JO_DTL where EXP_BU_JO.JO_NO =  EXP_BU_JO_DTL.JO_NO ) JO 
            ON JO.FLT_KEY = ddt.SHP_CNTG_FLT_KEY  and JO.FLT_DATE = ddt.SHP_CNTG_FLT_DATE
              and JO.AWB_NO =DDT.AWB_NO  and JO.AWB_DATE = ddt.awb_Date
where ddt.SHP_CNTG_FLT_KEY = #expFltKey# and ddt.SHP_CNTG_FLT_DATE = #expFltDate#  
and ddt.SHP_TRF_TYPE = 'QT' 
  ]]>
  <isNotEmpty property="unldgPt" >	 
	  	and ddt.SHP_UNLDG_PT = #unldgPt#
	</isNotEmpty>
	 <isNotEmpty property="impFltKey" >	 
	  	<isNotEmpty property="impFltDate" >	 
	  		and ddt.flt_key = #impFltKey# and ddt.flt_Date = #impFltDate#  
	  	</isNotEmpty>
	</isNotEmpty>
	ORDER BY  ddt.ULD_KEY
</select>

<select id="fetchOutBoundTransitUldShpListFltList" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstBO" resultClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
<![CDATA[ 
select
ddt.flt_key fltKey , to_char(ddt.flt_Date,'DDMONYY')  fltDate
from V_UNFIN_DDT_DTL ddt
join (select V_UNFIN_DDT_DTL.SHP_CNTG_FLT_KEY , V_UNFIN_DDT_DTL.SHP_CNTG_FLT_DATE,  V_UNFIN_DDT_DTL.TR_NO , V_UNFIN_DDT_DTL.SDOC_LINE_NO , V_UNFIN_DDT_DTL.UDOC_LINE_NO , V_UNFIN_DDT_DTL.DOC_LINE_NO ,
          NVL( (TO_CHAR(TO_DATE(TO_CHAR(V_UNFIN_DDT_DTL.BASELINE_ETD,'DDMONYY HH24MI'),'DDMONYY HH24MI') - 
                      TO_DATE(TO_CHAR(FLT_OPR.SCH_DATE,'DDMONYY')|| ' ' || 
                      TO_CHAR(NVL(FLT_OPR.EST_TIME,  FLT_OPR.SCH_TIME),'0000') ,'DDMONYY HH24MI')))  * 24  , 0 ) as etdChangedHrs,
		NVL( (TO_CHAR(TO_DATE(TO_CHAR(V_UNFIN_DDT_DTL.BASELINE_ETD,'DDMONYY HH24MI'),'DDMONYY HH24MI') - 
                      TO_DATE(TO_CHAR(FLT_OPR.SCH_DATE,'DDMONYY')|| ' ' || 
                      TO_CHAR(NVL(FLT_OPR.EST_TIME,  FLT_OPR.SCH_TIME),'0000') ,'DDMONYY HH24MI')))  * 24 * 60 , 0 ) as etdChangedMin
      from V_UNFIN_DDT_DTL  , FLT_OPR  where V_UNFIN_DDT_DTL.SHP_TRF_TYPE = 'QT' and V_UNFIN_DDT_DTL.SHP_CNTG_FLT_KEY = FLT_OPR.FLT_KEY and FLT_OPR.SCH_DATE = V_UNFIN_DDT_DTL.SHP_CNTG_FLT_DATE and FLT_OPR.FLT_TYPE ='D') ddtEtd
      on ddt.SHP_CNTG_FLT_KEY = ddtEtd.SHP_CNTG_FLT_KEY and ddt.SHP_CNTG_FLT_DATE = ddtEtd.SHP_CNTG_FLT_DATE 
          and  ddtEtd.TR_NO = ddt.TR_NO and ddtEtd.SDOC_LINE_NO = ddt.SDOC_LINE_NO
          and ddtEtd.UDOC_LINE_NO = ddt.UDOC_LINE_NO and ddtEtd.DOC_LINE_NO = ddt.DOC_LINE_NO
join FLT_OPR FLT on ddt.SHP_CNTG_FLT_KEY = FLT.FLT_KEY and FLT.SCH_DATE = ddt.SHP_CNTG_FLT_DATE and FLT.FLT_TYPE ='D'
left join (select nvl(sum(shp_trf_Pc),0) qt_trf_Pcs  , nvl(sum(shp_trf_Wt),0) qt_trf_Wt  ,V_UNFIN_DDT_DTL.SHP_CNTG_FLT_KEY ,  V_UNFIN_DDT_DTL.SHP_CNTG_FLT_DATE,  V_UNFIN_DDT_DTL.TR_NO ,
          V_UNFIN_DDT_DTL.SDOC_LINE_NO , V_UNFIN_DDT_DTL.UDOC_LINE_NO , V_UNFIN_DDT_DTL.DOC_LINE_NO 
      from V_UNFIN_DDT_DTL  , FLT_OPR  where V_UNFIN_DDT_DTL.SHP_TRF_TYPE = 'QT' and V_UNFIN_DDT_DTL.SHP_CNTG_FLT_KEY = FLT_OPR.FLT_KEY and FLT_OPR.SCH_DATE = V_UNFIN_DDT_DTL.SHP_CNTG_FLT_DATE and FLT_OPR.FLT_TYPE ='D'
      group by V_UNFIN_DDT_DTL.SHP_CNTG_FLT_KEY,  V_UNFIN_DDT_DTL.SHP_CNTG_FLT_DATE,  V_UNFIN_DDT_DTL.TR_NO, V_UNFIN_DDT_DTL.SDOC_LINE_NO, V_UNFIN_DDT_DTL.UDOC_LINE_NO, V_UNFIN_DDT_DTL.DOC_LINE_NO 
      ) ddtQt
      on ddt.SHP_CNTG_FLT_KEY = ddtQt.SHP_CNTG_FLT_KEY and ddt.SHP_CNTG_FLT_DATE = ddtQt.SHP_CNTG_FLT_DATE 
          and  ddtQt.TR_NO = ddt.TR_NO and ddtQt.SDOC_LINE_NO = ddt.SDOC_LINE_NO
          and ddtQt.UDOC_LINE_NO = ddt.UDOC_LINE_NO and ddtQt.DOC_LINE_NO = ddt.DOC_LINE_NO
left join awb on awb.awb_NO = ddt.awb_No and awb.awb_Date = ddt.awb_Date
left join (select ffmshp.awb_no awb_no, ffmshp.awb_Date awb_Date, ffmshp.ORG ORG, ffmshp.DEST DEST, nvl(ffmshp.MAN_PCS,0) PCS,
    nvl(ffmshp.MAN_WT,0) WT, ffmMSG.flt_key flt_key , ffmMSG.flt_Date flt_Date, ffmULD.ULD_KEY ULD_KEY, ffmMSG.TR_No tr_NO 
    from EDI_FFM_MSG ffmMSG, EDI_FFM_ULD ffmULD , edi_ffm_shp ffmshp 
    where ffmMSG.FFM_STATUS = 'P' and ffmshp.dest != 'HKG' 
    and ffmMSG.TR_NO = ffmULD.TR_NO and ffmMSG.TR_NO = ffmshp.TR_NO and ffmULD.Doc_line_no = ffmshp.uDoc_line_no 
    ) ffm on ddt.SHP_CNTG_FLT_KEY = ffm.flt_key and ffm.flt_DATE = ddt.SHP_CNTG_FLT_DATE and ffm.awb_NO = ddt.awb_No and ffm.awb_Date = ddt.awb_Date
left join (select BU_INST, AIRL_RMK, WH_RMK, EXP_BU_JO.FLT_KEY, EXP_BU_JO.FLT_DATE, EXP_BU_JO_DTL.AWB_NO ,EXP_BU_JO_DTL.AWB_DATE 
            from      EXP_BU_JO ,  EXP_BU_JO_DTL where EXP_BU_JO.JO_NO =  EXP_BU_JO_DTL.JO_NO ) JO 
            ON JO.FLT_KEY = DDT.SHP_CNTG_FLT_KEY  and JO.FLT_DATE = DDT.SHP_CNTG_FLT_DATE
              and JO.AWB_NO =DDT.AWB_NO  and JO.AWB_DATE = ddt.awb_Date
where ddt.SHP_CNTG_FLT_KEY = #expFltKey# and ddt.SHP_CNTG_FLT_DATE = #expFltDate#  
and ddt.SHP_TRF_TYPE = 'QT' 
  ]]>
   <isNotEmpty property="unldgPt" >	 
	  	and ddt.SHP_UNLDG_PT = #unldgPt#
	</isNotEmpty>
	 <isNotEmpty property="impFltKey" >	 
	  	<isNotEmpty property="impFltDate" >	 
	  		and ddt.flt_key = #impFltKey# and ddt.flt_Date = #impFltDate#  
	  	</isNotEmpty>
	</isNotEmpty>
group By ddt.flt_key , ddt.flt_Date
</select>

<insert id="insert_QT_ALLOT" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstBO" >
	Insert into QT_ALLOT (TR_NO,FLT_KEY,FLT_DATE,UNLDG_PT,ALLOT_TYPE,QTY,TIME_FROM,TIME_TO,WORKSTATION,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,FLT_TYPE) 
	values (QT_ALLOT_SEQ.NEXTVAL,#fltKey#,#fltDate#,#unldgPt#,#allotType#,#allotQty#,to_date(#dateTimeFrom#, 'DDMONYY HH24:MI'),to_date(#dateTimeTo#, 'DDMONYY HH24:MI'),#wrkStns#,#lmUser#,sysdate,#lmUser#,sysdate,#fltType#)
</insert>


<update id="update_QT_ALLOT" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstBO" >
	Update QT_ALLOT 
	set 
	FLT_KEY = #fltKey#,
	FLT_DATE = #fltDate#,
	UNLDG_PT = #unldgPt#,
	ALLOT_TYPE = #allotType#,
	QTY = #allotQty#,
	TIME_FROM = to_date(#dateTimeFrom#, 'DDMONYY HH24:MI'),
	TIME_TO = to_date(#dateTimeTo#, 'DDMONYY HH24:MI'),
	WORKSTATION = #wrkStns#,
	LM_USER_ID = #lmUser#,
	LM_DATE = sysdate,
	FLT_TYPE = #fltType#
	WHERE TR_NO = #qtAllotTrNo#
</update>


<select id="getAndCheckWrkstnTimeAllot" parameterClass="map" resultClass="cargo.cms.imprt.bo.TsnstCntrlChklstBO">
 <![CDATA[
      select flt_key fltKey, flt_date fltDate, unldg_pt unldgPt, TO_char(time_from,'DDMONYY HH24MI') fromTime ,  TO_char(time_to,'DDMONYY HH24MI') toTime from QT_Allot where workstation = #wrkstn#	
       				and ((time_from >= TO_DATE(#startDateTime#,'DDMONYY HH24MI') and time_to <= TO_DATE(#endDateTime#,'DDMONYY HH24MI'))
		                or (time_from <= TO_DATE(#startDateTime#,'DDMONYY HH24MI') and time_to >= TO_DATE(#endDateTime#,'DDMONYY HH24MI'))
		                OR (time_from between TO_DATE(#startDateTime#,'DDMONYY HH24MI') + 1/1440 and TO_DATE(#endDateTime#,'DDMONYY HH24MI') -  1/1440)
		                OR (time_to between TO_DATE(#startDateTime#,'DDMONYY HH24MI') + 1/1440 and TO_DATE(#endDateTime#,'DDMONYY HH24MI') - 1/1440))
       				and rownum = 1
]]>
</select>  


<delete id="delete_QT_ALLOT" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstBO" >
	DELETE FROM  QT_ALLOT 	WHERE TR_NO = #qtAllotTrNo#
</delete>

<delete id="delete_QT_ALLOT_FOR_FLT" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstBO" >
	DELETE FROM QT_ALLOT where FLT_KEY = #fltKey# and  FLT_DATE = #fltDate# and UNLDG_PT = #unldgPt#
</delete>
<!-- ###################### ADDED BY Mayank ON 01-08-2011 FOR Transit ULDs ShipmentsList End Here ########################### -->
<!-- ###################### ADDED BY Mayank ON 03-08-2011 FOR Tarmac Offload and Breakdown Update Start Here ########################### -->
<!--  and exists (select null from V_UNFIN_DDT_DTL where cntg_flt_key = u.FLT_KEY and cntg_flt_date = u.FLT_DATE and awb_No  = ua.awb_No and awb_Date  = ua.awb_Date  and nvl(shp_trf_type,'XX') in ('TT','IF')) -->
<select id="getTarmacOffldUldList" parameterClass="cargo.cms.imprt.bo.TarmacOffloadBO" resultClass="cargo.cms.imprt.bo.TarmacOffloadBO" >
<![CDATA[ 
 select  decode(u.ULD_BT_NO,null,'BULK',u.ULD_BT_NO) ||'_' || ua.AWB_NO uldKeyAwbNo , 'ULD' shpType , 
	u.FLT_KEY fltKey, to_char(u.FLT_DATE,'DDMONYY') fltDate , 
	decode(u.ULD_BT_NO,null,'BULK',u.ULD_BT_NO) hiddenUldKey,
	decode(u.ULD_BT_NO,null,'BULK',u.ULD_BT_NO) uldKey, ua.AWB_NO awbNo, SUBSTR(TRIM(ua.AWB_NO),1,3)||'-'||SUBSTR(TRIM(ua.AWB_NO),4) awbNoDisp, to_char(ua.AWB_DATE,'DDMONYY') awbDate, 
	ua.ASSIGNED_PCS loadedPc, ua.ASSIGNED_WT loadedWt, ua.OFFLOAD_PCS ofldPcs, ua.OFFLOAD_WT ofldWt, nvl(u.AIRSIDE_BRKDWN_IND,'N') airSideBrkDwnInd, 
	case when abs(ua.ASSIGNED_PCS - ua.OFFLOAD_PCS) != nvl(UPLIFTED_PCS,0) then 'Y' else 'N'  end as discYn, u.trf_type trfType,
	case when nvl(u.AIRSIDE_BRKDWN_IND,'N') = 'N' then 0 else 
	case when abs(ua.ASSIGNED_PCS - ua.OFFLOAD_PCS) > 0 then abs(ua.ASSIGNED_PCS - ua.OFFLOAD_PCS) else 0  end end as upliftedPc,  
	case when nvl(u.AIRSIDE_BRKDWN_IND,'N') = 'N' then 0 else 
	case when abs(ua.ASSIGNED_WT - ua.OFFLOAD_WT) > 0 then abs(ua.ASSIGNED_WT - ua.OFFLOAD_WT) else 0 end end as upliftedWt, 
	case when nvl(u.AIRSIDE_BRKDWN_IND,'N') = 'N' then 0 else 
	case when abs(ua.ASSIGNED_PCS - ua.OFFLOAD_PCS) > 0 then abs(ua.ASSIGNED_PCS - ua.OFFLOAD_PCS) else 0  end end as upliftedPcBox,  
	case when nvl(u.AIRSIDE_BRKDWN_IND,'N') = 'N' then 0 else 
	case when abs(ua.ASSIGNED_WT - ua.OFFLOAD_WT) > 0 then abs(ua.ASSIGNED_WT - ua.OFFLOAD_WT) else 0 end end as upliftedWtBox, 
	case when abs(ua.ASSIGNED_PCS - ua.OFFLOAD_PCS) <> 0 then 'N' else 'Y'  end as upliftedShowInd,
	ua.BD_UPDATED_IND bdUpdInd   
	from EXP_OFFLOAD_ULD u 
	join EXP_OFFLOAD_ULD_AWB ua on u.FLT_KEY = ua.FLT_KEY and u.FLT_DATE = ua.FLT_DATE and u.ULD_BT_NO = ua.ULD_BT_NO
	where ua.confirmed_yn = 'Y' and u.flt_key = #fltKey# and u.flt_date = #fltDate# and u.ULD_BT_NO = nvl(#uldKey#,u.ULD_BT_NO)  
		and exists (select null from V_DDT_DTL where shp_cntg_flt_key = u.FLT_KEY and shp_cntg_flt_date = u.FLT_DATE and awb_No  = ua.awb_No
		and awb_Date  = ua.awb_Date  and nvl(shp_trf_type,'XX') in ('TT','IF'))
  ]]>
</select>

<select id="check_TarmacOffld_new_checkin_uld" parameterClass="cargo.cms.imprt.bo.TarmacOffloadBO" resultClass="java.lang.Integer" >
<![CDATA[ 
	select count(1) from exp_pmanifest_uld where flt_key = #fltKey# and flt_date = #fltDate# and ULD_BT_NO = #uldKey# and nvl(new_checkin_uld,'N') = 'Y'
  ]]>
</select>

<select id="check_TarmacOffld_H_CONT_IND_BT_IND" parameterClass="java.lang.String" resultClass="java.lang.Integer" >
<![CDATA[ 
	select count(1) from MAST_ULD_TYPE where code = (select uld_type from uld_inventory where uld_key = #uldKey#) and ( H_CONT_IND = 'Y' or BT_IND = 'Y' )
  ]]>
</select>

<select id="check_TarmacOffld_brk_bulk" parameterClass="cargo.cms.imprt.bo.TarmacOffloadBO" resultClass="java.lang.Integer" >
<![CDATA[ 
 	select count(1) from exp_flt_uld  where flt_key = #fltKey# and flt_date = #fltDate# and ULD_key = #uldKey# and nvl(bb_ind,'N') = 'Y'
  ]]>
</select>

<select id="getTarmacOffldBrkdwnList" parameterClass="cargo.cms.imprt.bo.TarmacOffloadBO" resultClass="cargo.cms.imprt.bo.TarmacOffloadDtlBO" >
<![CDATA[ 

select  flt_key fltKey, to_char(FLT_DATE,'DDMONYY') fltDate , awb_no awbNo,  to_char(AWB_DATE,'DDMONYY') awbDate, 
			shp_trf_type trfType, sum(shp_trf_pc) loadedPc, sum(shp_trf_wt) loadedWt
       from V_DDT_DTL
           where  nvl(shp_trf_type,'XX') in ('TT','IF')
            and shp_cntg_flt_key = #fltKey# and shp_cntg_flt_date = #fltDate# and awb_No  = #awbNo# and awb_Date  = #awbDate# 
            group by flt_key, FLT_DATE, awb_no,AWB_DATE, shp_trf_type
  ]]>
</select>

<select id="getTarmacOffldBrkdwnULDAndTrfType" parameterClass="cargo.cms.imprt.bo.TarmacOffloadBO" resultClass="cargo.cms.imprt.bo.TarmacOffloadDtlBO" >
<![CDATA[ 
select  uld_key uldKey, trf_type uldTrfType
       from V_DDT_DTL
           where  nvl(shp_trf_type,'XX') in ('TT','IF')
            and shp_cntg_flt_key = #fltKey# and shp_cntg_flt_date = #fltDate# and awb_No  = #awbNo# and awb_Date  = #awbDate# and rownum =1
  ]]>
</select>

<select id="getTarmacOffldBrkdwnList_DTL" parameterClass="cargo.cms.imprt.bo.TarmacOffloadDtlBO" resultClass="cargo.cms.imprt.bo.TarmacOffloadDtlBO" >
<![CDATA[ 
select flt_key fltKey, to_char(FLT_DATE,'DDMONYY') fltDate , awb_no awbNo,  to_char(AWB_DATE,'DDMONYY') awbDate, 
			cntg_flt_key cntgFltKey, to_char(cntg_flt_date,'DDMONYY') cntgFltDate, 
			shp_trf_type trfType, ULD_KEY uldKey, tr_no ddtTrNo, udoc_line_no udocLineNo, sdoc_line_no sdocLineNo, doc_line_no docLineNo 
       from V_DDT_DTL
           where  nvl(shp_trf_type,'XX') in ('TT','IF')
            and shp_cntg_flt_key = #cntgFltKey# and shp_cntg_flt_date = #cntgFltDate# and awb_No  = #awbNo# and awb_Date  = #awbDate# 
            and flt_key = #fltKey# and flt_date = #fltDate# and rownum = 1
  ]]>
</select>


<update id="saveTarmacOffldBrkdnData"  parameterClass="cargo.cms.imprt.bo.TarmacOffloadDtlBO" >
update DDT_SHP_TRF_DTL 
    set  ACTUAL_PCS = ACTUAL_PCS + #actualPcs#, 
        ACTUAL_WT = ACTUAL_WT + #actualWt#,
        LM_USER_ID = #lmUser#,
        LM_DATE = sysdate
        where tr_no = #ddtTrNo# 
            and sdoc_line_no = #sdocLineNo#
            and doc_line_no = #docLineNo# 
</update> 

<update id="saveTarmacOffldBrkdnData_set_actPc_as_Zero"  parameterClass="cargo.cms.imprt.bo.TarmacOffloadDtlBO" >
<![CDATA[ 

  update DDT_SHP_TRF_DTL t 
	set ACTUAL_PCS = 0,
 		ACTUAL_WT = 0,
        LM_USER_ID = #lmUser#,
        LM_DATE = sysdate
             where tr_no =#ddtTrNo# 
             and exists (select null from v_ddt_dtl v where shp_cntg_flt_key = #cntgFltKey# and shp_cntg_flt_date = #cntgFltDate# and awb_No  =  #awbNo# and awb_Date  = #awbDate#
              and shp_trf_type = #trfType# and t.tr_no = v.tr_no and t.sdoc_line_no = v.sdoc_line_no and t.doc_line_no= v.doc_line_no)
             and sdoc_line_no <> #sdocLineNo# and doc_line_no <> #docLineNo#
             
  ]]>             
</update>     

<update id="saveTarmacOffldUldData"  parameterClass="cargo.cms.imprt.bo.TarmacOffloadDtlBO" >

  update EXP_OFFLOAD_ULD_AWB 
    set UPLIFTED_PCS = #upliftedPc#, 
        UPLIFTED_WT = #upliftedWt#,
        LM_USER_ID = #lmUser#,
        LM_DATE = sysdate
        where FLT_KEY = #fltKey# 
            and FLT_DATE= #fltDate#
            and ULD_BT_NO= #uldKey# 
            and AWB_NO= #awbNo#
            and AWB_DATE = #awbDate#

	
</update> 

<update id="saveTarmacOffldComplData"  parameterClass="cargo.cms.imprt.bo.TarmacOffloadBO" >
  update FLT_OPR_EVENTS 
    set OFLD_CFM_USER_ID = #lmUser#, 
        OFLD_CFM_DATE = sysdate,
        LM_USER_ID = #lmUser#,
        LM_DATE = sysdate
        where FLT_KEY = #fltKey# 
            and SCH_DATE= #fltDate#
            and flt_type = 'D'
</update>  

<update id="updateOffldULDAWB_BD_UPDATED_IND"  parameterClass="cargo.cms.imprt.bo.TarmacOffloadBO" >
 update EXP_OFFLOAD_ULD_AWB set 
 	BD_UPDATED_IND = 'Y' ,
   	LM_USER_ID = #lmUser#,
   	LM_DATE = sysdate
  where FLT_KEY = #fltKey# and FLT_DATE = #fltDate# and ULD_BT_NO = #hiddenUldKey#
  and AWB_NO = #awbNo# and AWB_DATE = #awbDate#
</update>  
<!-- ###################### ADDED BY Mayank ON 03-08-2011 FOR Tarmac Offload and Breakdown Update End Here ########################### -->


	<!-- ###################### ADDED BY Mayank ON 11-06-2011 FOR CT  ENDS ########################### -->
	
	<select id="getTheLockCount" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		 select count(1) 
         	from awb 
         	where FINALLOCK_IND = 'Y'
         	and (awb_no,awb_date) in (select awb_no,awb_date from awb_inventory 
            where 1 = 1  
            <isNotEmpty prepend="AND" property="ULD_NO">
               ULD_key = #ULD_NO#
            </isNotEmpty>					
            <isNotEmpty prepend="AND" property="LSP_NO">
               lsp_no = #LSP_NO#
            </isNotEmpty>					
            <isEmpty property="ULD_NO"> 
            	<isEmpty property="LSP_NO">
            		and awb_no = #AWB_NO#
            	</isEmpty>
            </isEmpty>
           )
	</select>
	 <update id="sqlUpdateShcLockUld"  parameterClass="map" >
   	 	UPDATE ULD_INVENTORY 
   	 	SET LOCK_RQS = #LOCKRQS#
   	 	WHERE 1 = 1
   	 	<isEmpty prepend="AND" property="ULD_NO">
   	 		ULD_KEY in (select uld_key from awb_inventory where awb_no=#AWB_NO# and awb_date= TO_DATE(#AWB_DATE#,'DDMONYY'))
   	 	</isEmpty>     	 	
   	 	<isNotEmpty prepend="AND" property="ULD_NO">
   	 		ULD_KEY = #ULD_NO#
   	 	</isNotEmpty>
   	 </update> 
   	 <update id="sqlUpdateShcLockCsd"  parameterClass="map" >
   	 	UPDATE LSP_INVENTORY 
   	 	SET LOCK_RQS = #LOCKRQS#
   	 	WHERE 1 = 1
   	 	<isEmpty prepend="AND" property="LSP_NO">
   	 		LSP_NO in (select lsp_no from awb_inventory where awb_no=#AWB_NO# and awb_date= TO_DATE(#AWB_DATE#,'DDMONYY'))
   	 	</isEmpty>
   	 	<isNotEmpty prepend="AND" property="LSP_NO">
   	 		LSP_NO = #LSP_NO#
   	 	</isNotEmpty>
     </update> 
      <update id="sqlUpdateShcLockOldUld"  parameterClass="map" >
   	 	UPDATE ULD_INVENTORY 
   	 	SET LOCK_RQS = #LOCKRQS#
   	 	WHERE ULD_KEY = #OLD_ULD#
   	 </update> 
   	 <update id="sqlUpdateShcLockOldCsd"  parameterClass="map" >
   	 	UPDATE LSP_INVENTORY 
   	 	SET LOCK_RQS = #LOCKRQS#
   	 	WHERE LSP_NO = #OLD_LSP#
     </update> 
     <!--  For Move/job order common logic -->
     <update id="sqlUpdateAndGetMoveOrderStatus" parameterClass="java.util.HashMap" >
		<![CDATA[
		UPDATE rtrv_move_order
		SET status='CANCELLED',
		lm_date = sysdate,
		lm_user_id=#CR_USER_ID#
		where 
		 (status IS NULL OR(status <> 'E' AND status <>'CANCELLED' AND status <>'COMPLETED'))
		]]>
		 <isNotEmpty property="LSP_NO">
		AND LSP = UPPER(#LSP_NO#)
		 </isNotEmpty>
		 <isNotEmpty property="ULD_KEY">
		AND ULD = UPPER(#ULD_KEY#)
		 </isNotEmpty>
	</update>
	
	<select id="sqlMoveJobAwbinfo" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT AWB_NO AWB_NO ,to_char(AWB_DATE,'DDMONYY') AWB_DATE ,SUM(LOCN_PCS) LOCN_PCS ,SUM(LOCN_WT) LOCN_WT FROM AWB_INVENTORY 
		where 'XX' = 'XX' 
		<isNotEmpty property="AWB_NO">
		AND AWB_NO = UPPER(#AWB_NO#)
		</isNotEmpty>
		<isNotEmpty property="AWB_DATE">
		AND AWB_DATE = TO_DATE(#AWB_DATE#,'DDMONYY')
		 </isNotEmpty>
		<isNotEmpty property="LSP_NO">
		AND LSP_NO = UPPER(#LSP_NO#) AND ROWNUM = 1
		 </isNotEmpty>
		 <isNotEmpty property="ULD_KEY">
		AND ULD_KEY = UPPER(#ULD_KEY#) AND ROWNUM = 1
		 </isNotEmpty>
 		 group by AWB_NO, AWB_DATE
	</select>
	
	<select id="sqlMoveJobHawbinfo" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		SELECT AWB_NO AWB_NO ,to_char(AWB_DATE,'DDMONYY') AWB_DATE ,SUM(LOCN_PCS) LOCN_PCS ,SUM(LOCN_WT) LOCN_WT FROM ASV_INVENTORY 
		where 'XX' = 'XX' 
		<isNotEmpty property="HAWB_NO">
		AND HAWB_NO = UPPER(#HAWB_NO#)
		</isNotEmpty>
		<isNotEmpty property="AGENT_ID">
		AND AGENT_CODE = UPPER(#AGENT_ID#)
		</isNotEmpty>
		<isNotEmpty property="AWB_NO">
		AND AWB_NO = UPPER(#AWB_NO#)
		</isNotEmpty>
		<isNotEmpty property="AWB_DATE">
		AND AWB_DATE = TO_DATE(#AWB_DATE#,'DDMONYY')
		 </isNotEmpty>
		<isNotEmpty property="LSP_NO">
		AND LSP_NO = UPPER(#LSP_NO#) AND ROWNUM = 1
		 </isNotEmpty>
		 <isNotEmpty property="ULD_KEY">
		AND ULD_KEY = UPPER(#ULD_KEY#) AND ROWNUM = 1
		 </isNotEmpty>
 		 group by AWB_NO, AWB_DATE
	</select>
	
	<insert id="sqlCreateMoveJobOrder" parameterClass="java.util.HashMap">
	Insert into RTRV_MOVE_ORDER 
		(FUNC,
		REF_NO,
		AWB_NO,
		AWB_DATE,
		CURR_LOCN,
		LSP,
		ULD,
		PC,
		WT,
		TARGET,
		STATUS,
		CR_USER_ID,
		CR_DATE,
		LM_USER_ID,
		LM_DATE,
		TYPE,
		INV_TYPE,
		PRIORITY,
		ACTIVITY,
		HAWB_NO,
		AGENT_ID,
		TRUCK_FLT_NO,
		TRUCK_FLT_DATE,
		OB_FLT_KEY,
	    OB_FLT_DATE,
	    TR_TYPE
		) 
		values 
		(#FUNC# ,
		#REF_NO# ,
		#AWB_NO#,
		to_date(#AWB_DATE#,'DDMONYY'),
		#CURR_LOC#,
		#LSP_NO# ,
		#ULD_KEY# ,
    	#PC#,
    	#WT#,
    	#TARGET# ,
    	#STATUS# ,
    	#CR_USER_ID# ,
    	SYSDATE,
    	#CR_USER_ID# ,
    	SYSDATE,
    	#TYPE#,
    	#INV_TYPE#,
    	NVL(#PRIORITY#,'N'),
    	NVL(#ACTIVITY#,'N'),
    	#HAWB_NO#,
    	#AGENT_ID#,
		#TRUCK_FLT_NO#,
		#TRUCK_FLT_DATE#,
		#OB_FLT_KEY#,
	    #OB_FLT_DATE#,
	    #TR_TYPE#
    	)
	</insert>
	
	 <update id="sqlUpdateLspUldTarget" parameterClass="java.util.HashMap" >
		 <isNotEmpty property="LSP_NO">
		 UPDATE LSP_INVENTORY 
		 SET TARGET = #TARGET#,
		 RTRV_DATE = sysdate
		 WHERE
		 LSP_NO = UPPER(#LSP_NO#)
		 </isNotEmpty>
		 <isNotEmpty property="ULD_KEY">
		 UPDATE ULD_INVENTORY 
		 SET TARGET = #TARGET#
		 WHERE
		 ULD_KEY = UPPER(#ULD_KEY#) 
		 </isNotEmpty>
	</update>
	
	 <select id="sqlWareHouseType" parameterClass="java.lang.String" resultClass="java.lang.Integer">
	 	select count(1) from MAST_WH_LOC t1, mast_wh_group t2
		where t1.wh_group = t2.WH_GROUP 
   		and t2.wh_type = 'FG'
    	and t1.code=#locCode#
	 </select>
	
     <!--  For Move/job order common logic -->
	<!--  Changed for QR
	<select id="getRecvCarrHandlerForTrmNo" parameterClass="java.lang.String"
		resultClass="java.lang.String">
		SELECT CODE_DESC CTO
		FROM MAST_CODE_DTL
		WHERE CODE_TYPE = 'RECD_CARR_HANDLER'
		AND CODE =
		(SELECT MAX(RECD_CARR_HANDR) FROM IMP_TRM_HD WHERE TRM_NO = #PARAM#
		)
	</select> -->
	
     <!--  Transit Mail Tag :: Ranjith-->
     
     <select id="imp_xom_getTransitMailTagListTm"  parameterClass="map"  
		resultClass="cargo.cms.imprt.bo.ImpXomBO">
			SELECT 
		 	XPS.CATALOG as catalog,
		 	XPS.FLT_TYPE as fltType,
		 	XPS.FLT_KEY as fltKey,
		 	to_char(XPS.FLT_DATE,'DDMONYY') as fltDate,
			PKG_COMMON.get_flt_ata(XPS.FLT_KEY,XPS.FLT_DATE, 'A')  ata,
			(SELECT A.CARR_CODE FROM FLT_OPR A WHERE A.FLT_KEY = XPS.FLT_KEY AND A.SCH_DATE = XPS.FLT_DATE AND A.FLT_TYPE = 'A' ) carrCode,
			XPS.AWB_NO as awbNo, 
			TO_CHAR(XPS.AWB_DATE,'DDMONYY') as awbDate, 
			XPS.TAG_NO as tagNo, 
			XPS.LSP_NO as lspNo, 
			XPS.ACT_PCS as pcs, 
			XPS.ACT_PCS as oldPcs, 
			XPS.ACT_WT as wt,
			XPS.ACT_WT as oldWt,
			XPS.ORIG as orig, 
			XPS.DEST as dest, 
			XPS.DEST as oldDest, 
			XPS.LOCN as locCode, 
			XPS.LOCN as locn, 
			XPS.BD_ULD_KEY bdULDKey,
			XPS.ULD_KEY uldKey, 
			XPS.DAM_IND as damInd, 
			XPS.RMK as rmk, 
			XPS.CR_USER_ID as crUserId, 
			XPS.CR_DATE as crDate, 
			XPS.LM_USER_ID as lmUserId,
			XPS.LM_DATE as lmDate,
			XPS.SEQ_NO xpsSeqNo 
		 FROM IMP_XPS_OBC_MAIL XPS
		 WHERE  
			XPS.FLT_KEY = #fltKey# AND
			XPS.FLT_TYPE = 'I' AND
			XPS.CATALOG = 'TM' AND
			XPS.FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') 
		ORDER BY
			XPS.TAG_NO
	</select>
	
	
	<select id="sqlGetFlightInfo" parameterClass="cargo.cms.imprt.bo.ImpXomBO"  resultClass="cargo.cms.imprt.bo.ImpXomBO">
		select NVL(flt_key,IMP_FLT_KEY) fltKey,
			to_char(NVL(flt_date,IMP_FLT_DATE),'DDMONYY') fltDate,
			NVL(CARR_CODE,IMP_FLT_CARR)  As carrCode,
			uld_carr as uldCarr
			from uld_inventory 
			where uld_key = #bdULDKey#
			and loc_code = #locCode#
	</select>
	
	<select id="checkCountForTag"  parameterClass="map"  
		resultClass="java.lang.Integer">
		SELECT count(1) FROM IMP_XPS_OBC_MAIL
		WHERE  
			FLT_KEY = #fltKey# AND
			FLT_TYPE = 'I' AND			
			FLT_DATE = TO_DATE(#schDate#,'DDMONYY') AND
			
			TAG_NO = #tagNo# 
	</select>

<select id="imp_xom_chkdeleteTranitMailTag"  parameterClass="map"  
		resultClass="java.lang.Integer">
		 SELECT count(1)
		 FROM IMP_XPS_OBC_MAIL
		 WHERE FLT_KEY = #fltKey# AND
			FLT_TYPE = 'I' AND
			FLT_DATE = TO_DATE(#schDate#,'DDMONYY') AND
			CATALOG = 'TM' AND
			TAG_NO = #tagNo# and 
			AWB_NO is not NULL
	</select>
	
	<!-- QUERIES FOR INSERT MAIL TAG OPERATION  -->
	<insert id="imp_xom_insertTransitMailTag" parameterClass="cargo.cms.imprt.bo.ImpXomBO" >
		INSERT INTO IMP_XPS_OBC_MAIL (
		   CATALOG, FLT_TYPE, FLT_KEY, 
		   FLT_DATE, BD_ULD_KEY, AWB_NO,AWB_DATE,
		   TAG_NO, LSP_NO, 
		   ORIG, DEST, TARE_WT,
		   ACT_PCS, ACT_WT,             
		   LOCN, ULD_KEY, 
		   DAM_IND, RMK, CR_USER_ID, 
		   CR_DATE, LM_USER_ID, LM_DATE
		) 
		VALUES ( 
			'TM', 'I', UPPER(#fltKey#),
		    TO_DATE(#fltDate#,'DDMONYY'), #bdULDKey#, UPPER(#awbNo#),to_date(#awbDate#,'DDMONYY'),
		    UPPER(#tagNo#), UPPER(#lspNo#),
		    UPPER(#orig#), UPPER(#dest#),#tareWt#,
		    #pcs#,#wt#,
		    UPPER(#locCode#), UPPER(#uldKey#),
		    #damInd#, UPPER(#rmk#), #userID#,
		    sysdate, #userID#, sysdate 
		)
	</insert>
	
	<select id="sqlGetTransitAwbNo"  parameterClass="cargo.cms.imprt.bo.ImpXomBO"  
		resultClass="cargo.cms.imprt.bo.ImpXomBO">
		 select 
     	 SHP.AWB_NO awbNo,
     	 to_char(SHP.AWB_DATE,'DDMONYY') awbDate
     	 from imp_car_shp SHP join IMP_CAR_AWB CAR
      	on SHP.AWB_NO = CAR.AWB_NO
     	 and SHP.AWB_DATE = CAR.AWB_DATE
     	 where CAR.CATALOG = 'TM'
      	and SHP.FLT_KEY = #fltKey#
      	and to_char(SHP.FLT_DATE,'DDMONYY') = #fltDate#
      	and CAR.AWB_DEST = #dest#
      	and rownum=1
	</select>
	
	
	<insert id="sqlInsertAwbStrlDtl" parameterClass="cargo.cms.imprt.bo.ImpXomBO" >
	Insert into IMP_AWB_STRG_DTL 
	(TR_NO,
DOC_LINE_NO,
CARR_CODE,
FLT_DATE,
FLT_KEY,
AWB_PFX,
AWB_NO,
AWB_DATE,
AWB_DEST,
ULD_KEY,
LOC_CODE,
STRG_PCS,
STRG_WT,
LSP_NO,
DAM_IND,
CR_USER_ID,
CR_DATE,
LM_USER_ID,
LM_DATE,
TAG_NO,
FLT_TYPE,
TR_STATUS,
TR_TYPE,
CHKIN_ULD_KEY,
CATALOG)  
values
(IMP_AWB_STRG_DTL_SEQ.NEXTVAL,
  '1',
  #carrCode#,
  to_date(#fltDate#,'DDMONYY'),
  #fltKey#,
  substr(#awbNo#,0,3),
  #awbNo#,
  to_date(#awbDate#,'DDMONYY'),
  #dest#,
  #uldKey#,
  #locCode#,
  #pcs#,
  #wt#,
  #lspNo#,
  #damInd#,
  #userID#,
  sysdate,
  #userID#,
  sysdate,
  #tagNo#,
  'I',
  'A',
  'TM',
  #bdULDKey#,
  #catalog#)
	</insert>
	
	
	
	<select id="sqlGetSeqNoForTransitMailTag" parameterClass="cargo.cms.imprt.bo.ImpXomBO" resultClass="java.lang.String" >
	 SELECT SEQ_NO seqNo
	 FROM AWB_INVENTORY
     WHERE AWB_NO = #awbNo#
     AND AWB_DATE = #awbDate#
     AND NVL(FLT_KEY,'*')  = NVL(#fltKey#,'*')
     AND NVL(FLT_DATE,SYSDATE) = NVL(#fltDate#,SYSDATE)
     AND NVL(LOC_CODE,'*') = NVL(#locCode#,'*')
     AND NVL(LSP_NO,0)   = NVL(#lspNo#,0)
     AND NVL(ULD_KEY,'*')  = NVL(#uldKey#,'*')
   </select>
	
	
	<update id="updatePcsWtForTrTag" parameterClass="cargo.cms.imprt.bo.ImpXomBO">
	UPDATE AWB_INVENTORY
		SET LOCN_PCS   = (LOCN_PCS + #pcs#),
		    LOCN_WT    = (LOCN_WT  + #wt#),
		    LM_USER_ID = #userID#,
		    LM_DATE    = sysdate
	     WHERE SEQ_NO = #seqNo#
    </update>  
    
    
    
    <insert id="insertPcsWtForTrTag" parameterClass="cargo.cms.imprt.bo.ImpXomBO">
	INSERT INTO AWB_INVENTORY
	 (AWB_NO, AWB_DATE,CARR_CODE, LSP_NO,LOC_CODE,
	 LOCN_PCS, LOCN_WT, DAM_IND,CR_USER_ID, CR_DATE,
	 LM_USER_ID, LM_DATE,FLT_DATE, FLT_KEY,FLT_TYPE, ULD_KEY, SEQ_NO,STRG_DATE,CATALOG)
	 VALUES
	 (#awbNo#,TO_DATE(#awbDate#,'DDMONYY'),#carrCode#,#lspNo#,#locCode#,
	 #pcs#,#wt#,#damInd#,#userID#, sysdate,
	 #userID#, sysdate,TO_DATE(#fltDate#,'DDMONYY'),#fltKey#,'I',#uldKey#,AWB_INV_SEQ.NEXTVAL,SYSDATE,'TM')
	</insert>
	<!-- INSERT OPERATION ENDED -->
	
	<update id="imp_xom_updateTransitMailTag1" parameterClass="cargo.cms.imprt.bo.ImpXomBO">
		UPDATE IMP_XPS_OBC_MAIL SET 			
			ORIG = #orig#,
			DEST = #dest#, 
			ACT_PCS = #pcs#, 
			ACT_WT  = #wt#,          
            LOCN = #locCode#,
			TARE_WT = #tareWt#,
			LSP_NO = #lspNo#,
			ULD_KEY = #uldKey#,
			DAM_IND = #damInd#,
			LM_USER_ID  = #userID#,	    
			LM_DATE = sysdate 
		 WHERE
			FLT_KEY = #fltKey# AND
			FLT_TYPE = 'I' AND
			TO_CHAR(FLT_DATE,'DDMONYY') = #fltDate# AND
			CATALOG = 'TM' AND
			TAG_NO = #tagNo#
	</update>
	
    <update id="sqlUpdateAwbStrlDtl" parameterClass="cargo.cms.imprt.bo.ImpXomBO">
		UPDATE IMP_XPS_OBC_MAIL SET 			
			ORIG = #orig#,
			DEST = #dest#, 
			ACT_PCS = #pcs#, 
			ACT_WT  = #wt#,          
            LOCN = #locCode#,
			TARE_WT = #tareWt#,
			DAM_IND = #damInd#,
			LM_USER_ID  = #userID#,	    
			LM_DATE = sysdate 
		 WHERE
			FLT_KEY = #fltKey# AND
			FLT_TYPE = 'I' AND
			TO_CHAR(FLT_DATE,'DDMONYY') = #fltDate# AND
			CATALOG = 'TM' AND
			TAG_NO = #tagNo#
	</update>
	
	
	
	<select id="isValidTagNumber" parameterClass="map" resultClass="java.lang.Integer" >
	 <![CDATA[
		 SELECT count(1)
		 FROM IMP_XPS_OBC_MAIL
	     WHERE flt_key = #fltKey#
	     AND flt_date = to_date(#fltDate#,'DDMONYY')
	     AND BD_ULD_KEY = #bdULDKey#
	     AND TAG_NO =#tagNo#
	     AND DEST=#dest#
	     AND SEQ_NO  <> #seq#
     ]]>
     and seq_no != #xpsSeqNo#
   </select>  
   
   
   <select id="isExistingTagNumber" parameterClass="map" resultClass="java.lang.Integer" >
   <![CDATA[
	 SELECT count(1)
	 FROM IMP_XPS_OBC_MAIL
     WHERE flt_key = #fltKey#
     AND flt_date = to_date(#fltDate#,'DDMONYY')
     AND BD_ULD_KEY <> #bdULDKey#
     AND TAG_NO =#tagNo#
     AND DEST=#dest#
     ]]>
   </select>
   
   
   <select id="checkTagExistance" parameterClass="cargo.cms.imprt.bo.ImpXomBO" resultClass="java.lang.Integer" >
   <![CDATA[
	 SELECT count(1)
	 FROM IMP_XPS_OBC_MAIL
     WHERE flt_key = #fltKey#
     AND flt_date = to_date(#fltDate#,'DDMONYY')
     AND TAG_NO = #tagNo#     
     ]]>
   </select>
   
    <select id="checkTMTagExistance" parameterClass="cargo.cms.imprt.bo.ImpXomBO" resultClass="java.lang.Integer" >
   <![CDATA[
	 SELECT count(1)
	 FROM IMP_XPS_OBC_MAIL
     WHERE flt_key = #fltKey#
     AND flt_date = to_date(#fltDate#,'DDMONYY')
     AND TAG_NO = #tagNo#  
     AND CATALOG = 'TM'
     AND BD_ULD_KEY = #bdULDKey#
     AND DEST=#dest#
     ]]>
   </select>
   
    <select id="checkIOTagExistance" parameterClass="cargo.cms.imprt.bo.ImpXomBO" resultClass="java.lang.Integer" >
   <![CDATA[
	 SELECT count(1)
	 FROM IMP_XPS_OBC_MAIL
     WHERE flt_key = #fltKey#
     AND flt_date = to_date(#fltDate#,'DDMONYY')
     AND TAG_NO = #tagNo#
     AND CATALOG = 'IO'
     ]]>
   </select>
   
    <update id="sqlUpdatePcWtTransitMailTag" parameterClass="cargo.cms.imprt.bo.ImpXomBO">
		UPDATE IMP_XPS_OBC_MAIL SET 			
			ACT_PCS = ACT_PCS+#pcs#, 
			ACT_WT  = ACT_WT+#wt#,          
			DAM_IND = #damInd#,
			LM_USER_ID  = #userID#,	    
			LM_DATE = sysdate 
		 WHERE
			FLT_KEY = #fltKey# AND
			FLT_TYPE = 'I' AND
			TO_CHAR(FLT_DATE,'DDMONYY') = #fltDate# AND
			CATALOG = 'TM' AND
			TAG_NO = #tagNo#
	</update>	
	
	<select id="checkULDCheckedinInFlt" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
			SELECT COUNT(1)
			FROM IMP_RAMP_CHK_DTL
			WHERE CHKIN_YN = 'Y' AND TO_CHAR (FLT_DATE, 'DDMONYY') = #fltDate# AND FLT_KEY = #fltKey#
			AND ULD_KEY = #uldKey#
	</select>   
	
	<select id="checkULDTransferTypeForTTIF" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		select COUNT(1) from V_DDT_DTL 
		where FLT_KEY=#fltKey# 
		AND TO_CHAR (FLT_DATE, 'DDMONYY') = #fltDate# 
		AND ULD_KEY=#uldKey# 
		AND TRF_TYPE IN ('TT','IF') 		
	</select>
	<!--  Transit Mail Tag  :: Ranjith  -->	
	
	
	
	
	<!-- Transit Mail Tag :: Desktop :: Ranjith :: Starts  -->
	
	 <select id="sqlQueryTransitMailTagDesktop"  parameterClass="cargo.cms.imprt.bo.ImpXomBO"  
		resultClass="cargo.cms.imprt.bo.ImpXomBO">
		 SELECT 
		 	XPS.CATALOG as catalog,
		 	XPS.FLT_TYPE as fltType,
		 	XPS.FLT_KEY as fltKey,
		 	to_char(XPS.FLT_DATE,'DDMONYY') as fltDate,
			PKG_COMMON.get_flt_ata(XPS.FLT_KEY,XPS.FLT_DATE, 'A')  ata,
			(SELECT A.CARR_CODE FROM FLT_OPR A WHERE A.FLT_KEY = XPS.FLT_KEY AND A.SCH_DATE = XPS.FLT_DATE AND A.FLT_TYPE = 'A' ) carrCode,
			XPS.AWB_NO as awbNo, 
			TO_CHAR(XPS.AWB_DATE,'DDMONYY') as awbDate, 
			XPS.TAG_NO as tagNo, 
			XPS.LSP_NO as lspNo, 
			XPS.ACT_PCS as pcs, 
			XPS.ACT_PCS as oldPcs, 
			TRIM(TO_CHAR(XPS.ACT_WT,'999999990D9')) as wt,
			TRIM(TO_CHAR(XPS.ACT_WT,'999999990D9')) as oldWt,
			XPS.ORIG as orig, 
			XPS.DEST as dest, 
			XPS.DEST as oldDest, 
			XPS.LOCN as locCode, 
			XPS.BD_ULD_KEY bdULDKey,
			XPS.ULD_KEY uldKey, 
			XPS.DAM_IND as damInd, 
			XPS.RMK as rmk, 
			XPS.CR_USER_ID as crUserId, 
			XPS.CR_DATE as crDate, 
			XPS.LM_USER_ID as lmUserId,
			XPS.LM_DATE as lmDate, 
			XPS.SEQ_NO xpsSeqNo
		 FROM IMP_XPS_OBC_MAIL XPS
		 WHERE  
			XPS.FLT_KEY = #fltKey# AND
			XPS.FLT_TYPE = 'I' AND
			XPS.CATALOG = 'TM' AND
			XPS.FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
			<!-- NVL(XPS.MBLE_FLG,'N')='N' -->
			 ( (SCAN_TAG_NO IS NULL AND AWB_NO IS NULL) OR (SCAN_TAG_NO IS NULL AND AWB_NO IS NOT NULL AND AWB_NO like '%M%') ) 
			<isNotEmpty property="bdULDKey">
			AND XPS.BD_ULD_KEY = #bdULDKey#
			</isNotEmpty> 
		ORDER BY
			XPS.TAG_NO
	</select>
	
		
	<select id="TransitMailTagResditSearch"  parameterClass="cargo.cms.imprt.bo.ImpXomBO" resultClass="cargo.cms.imprt.bo.ImpXomBO">
	  SELECT CRD.AWB_NO                       AS awbNo,
	  SUBSTR(CRD.AWB_NO,1,3)||'-'||SUBSTR(CRD.AWB_NO,4) as awbNoDisp, 
	  TO_CHAR(CRD.AWB_DATE,'DDMONYY')         AS awbDate,
	  TAG.TAG_NO                              AS tagNo,
	  '1'                                     AS pcs,
	  TRIM(TO_CHAR(TAG.TAG_WT,'999999990D9')) AS wt,
	  NVL(AWB.ORIG,CRD.ORIG)                                AS orig,
	  NVL(AWB.DEST,CRD.DEST)                                AS dest
		FROM EDI_RESDIT_AWB_DTL AWB
		JOIN EDI_RESDIT_TAG_DTL TAG ON AWB.TR_AWB_NO = TAG.TR_AWB_NO
		LEFT JOIN (SELECT DTL.TAG_NO,HD.AWB_NO,HD.AWB_DATE,HD.ORIG,HD.DEST FROM EDI_CARDIT_HD HD , EDI_CARDIT_TAG_DTL DTL WHERE HD.TR_NO = DTL.TR_NO ) CRD ON  CRD.TAG_NO = TAG.TAG_NO AND CRD.AWB_NO = AWB.AWB_NO AND CRD.AWB_DATE = AWB.AWB_DATE	
		WHERE AWB.TR_NO  IN ( SELECT TR_NO FROM EDI_RESDIT_HD WHERE FLT_KEY = #fltKey# AND FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') )		
		AND TAG.TAG_NO not in (SELECT TAG_NO FROM IMP_XPS_OBC_MAIL WHERE FLT_KEY = #fltKey# AND FLT_DATE = TO_DATE(#fltDate#,'DDMONYY'))		
	</select>
	
   <select id="checkTagExistsInBD" parameterClass="java.lang.String" resultClass="java.lang.String" >
		SELECT count(1) FROM IMP_XPS_OBC_MAIL where TAG_NO = #tagNo#
   </select>
	
   <select id="checkTagExistsInCardit" parameterClass="java.lang.String" resultClass="java.lang.String" >		
		select awb_no from AWB where (awb_no,awb_date) in 
		(select awb_no,awb_date from EDI_CARDIT_HD where tr_no = (SELECT tr_no FROM EDI_CARDIT_TAG_DTL where TAG_NO = #tagNo#)) and AWB_CLOSED_YN = 'N' AND rownum = 1
   </select>   
	
   <select id="checkTagExistsInCARDITDSK" parameterClass="java.lang.String" resultClass="java.util.HashMap" >
		SELECT 
		  HD.AWB_NO                      AS awbNo,
		  TO_CHAR(HD.AWB_DATE,'DDMONYY') AS awbDate		  
		FROM EDI_CARDIT_HD HD 
		join EDI_CARDIT_TAG_DTL DTL ON  HD.TR_NO = DTL.TR_NO
		    left join AWB B ON HD.awb_no = B.awb_No and HD.awb_date = B.awb_Date 
		WHERE DTL.TAG_NO = #tagNo# AND NVL(B.AWB_CLOSED_YN,'N') = 'N'

	</select>
	
<select id="sqlQueryTransitMailScanTagDesktop"  parameterClass="cargo.cms.imprt.bo.ImpXomBO"  
		resultClass="cargo.cms.imprt.bo.ImpXomBO">
		 SELECT 
		 	XPS.CATALOG as catalog,
		 	XPS.FLT_TYPE as fltType,
		 	XPS.FLT_KEY as fltKey,
		 	to_char(XPS.FLT_DATE,'DDMONYY') as fltDate,
			PKG_COMMON.get_flt_ata(XPS.FLT_KEY,XPS.FLT_DATE, 'A')  ata,
			(SELECT A.CARR_CODE FROM FLT_OPR A WHERE A.FLT_KEY = XPS.FLT_KEY AND A.SCH_DATE = XPS.FLT_DATE AND A.FLT_TYPE = 'A' ) carrCode,
			XPS.AWB_NO as awbNo, 
			TO_CHAR(XPS.AWB_DATE,'DDMONYY') as awbDate, 
			XPS.TAG_NO as tagNo, 
			XPS.LSP_NO as lspNo, 
			XPS.ACT_PCS as pcs, 
			XPS.ACT_PCS as oldPcs, 
			TRIM(TO_CHAR(XPS.ACT_WT,'999999990D9')) as wt,
			TRIM(TO_CHAR(XPS.ACT_WT,'999999990D9')) as oldWt,	
			XPS.ORIG as orig, 
			XPS.DEST as dest, 
			XPS.DEST as oldDest, 
			XPS.LOCN as locCode, 
			XPS.BD_ULD_KEY bdULDKey,
			XPS.ULD_KEY uldKey, 
			XPS.DAM_IND as damInd, 
			XPS.RMK as rmk, 
			XPS.CR_USER_ID as crUserId, 
			XPS.CR_DATE as crDate, 
			XPS.LM_USER_ID as lmUserId,
			XPS.LM_DATE as lmDate, 
			XPS.SEQ_NO xpsSeqNo
		 FROM IMP_XPS_OBC_MAIL XPS
		 WHERE  
			XPS.FLT_KEY = #fltKey# AND
			XPS.FLT_TYPE = 'I' AND
			XPS.CATALOG = 'TM' AND
			XPS.FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
			<!-- NVL(XPS.MBLE_FLG,'N')='Y' -->
			SCAN_TAG_NO IS NOT NULL AND ((AWB_NO IS NOT NULL AND AWB_NO like '%M%') OR AWB_NO IS NULL)
			<isNotEmpty property="bdULDKey">
			AND XPS.BD_ULD_KEY = #bdULDKey#
			</isNotEmpty> 
		ORDER BY XPS.TAG_NO
	</select>
	
	<select id="TransitMailPAWBTagDesktopSearch"  parameterClass="cargo.cms.imprt.bo.ImpXomBO"  
		resultClass="cargo.cms.imprt.bo.ImpXomBO">
		 SELECT 
		 	XPS.CATALOG as catalog,
		 	XPS.FLT_TYPE as fltType,
		 	XPS.FLT_KEY as fltKey,
		 	to_char(XPS.FLT_DATE,'DDMONYY') as fltDate,
			PKG_COMMON.get_flt_ata(XPS.FLT_KEY,XPS.FLT_DATE, 'A')  ata,
			(SELECT A.CARR_CODE FROM FLT_OPR A WHERE A.FLT_KEY = XPS.FLT_KEY AND A.SCH_DATE = XPS.FLT_DATE AND A.FLT_TYPE = 'A' ) carrCode,
			XPS.AWB_NO as awbNo, 
			TO_CHAR(XPS.AWB_DATE,'DDMONYY') as awbDate, 
			XPS.TAG_NO as tagNo, 
			XPS.LSP_NO as lspNo, 
			XPS.ACT_PCS as pcs, 
			XPS.ACT_PCS as oldPcs, 
			TRIM(TO_CHAR(XPS.ACT_WT,'999999990D9')) as wt,
			TRIM(TO_CHAR(XPS.ACT_WT,'999999990D9')) as oldWt,	
			XPS.ORIG as orig, 
			XPS.DEST as dest, 
			XPS.DEST as oldDest, 
			XPS.LOCN as locCode, 
			XPS.BD_ULD_KEY bdULDKey,
			XPS.ULD_KEY uldKey, 
			XPS.DAM_IND as damInd, 
			XPS.RMK as rmk, 
			XPS.CR_USER_ID as crUserId, 
			XPS.CR_DATE as crDate, 
			XPS.LM_USER_ID as lmUserId,
			XPS.LM_DATE as lmDate, 
			XPS.SEQ_NO xpsSeqNo
		 FROM IMP_XPS_OBC_MAIL XPS
		 WHERE  
			XPS.FLT_KEY = #fltKey# AND
			XPS.FLT_TYPE = 'I' AND
			XPS.CATALOG = 'TM' AND
			XPS.FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
			<!-- NVL(XPS.MBLE_FLG,'N')='Y' -->
			AWB_NO IS NOT NULL AND AWB_NO not like '%M%'
			<isNotEmpty property="bdULDKey">
			AND XPS.BD_ULD_KEY = #bdULDKey#
			</isNotEmpty> 
		ORDER BY XPS.TAG_NO
	</select>
	
	<select id="sqlQueryTransitMailSummary"  parameterClass="cargo.cms.imprt.bo.ImpXomBO"  
		resultClass="cargo.cms.imprt.bo.ImpXomBO">
		SELECT 
    fltKey,fltDate,awbNo,awbNoDisp,awbDate,tagNo,manulaPc,manualWt,scannedPc,scannedWt,b.dest as awbDest,b.pcs as awbPc,TRIM(TO_CHAR(b.wt,'99999999999999999.9')) as awbWt
    FROM(
	select 
		fltKey,fltDate,awbNo,awbNoDisp,awbDate,tagNo,
		decode(sum(manualPc),null,'',sum(manualPc)) AS manulaPc,
    TRIM(TO_CHAR(sum(manualWt),'99999999999999999.9')) AS manualWt,
   	decode(sum(scannedPc),null,'',sum(scannedPc)) AS scannedPc,
    TRIM(TO_CHAR(sum(scannedWt),'99999999999999999.9')) AS scannedWt
    from(
		  SELECT 
		 	XPS.FLT_TYPE as fltType,
		 	XPS.FLT_KEY as fltKey,
		 	to_char(XPS.FLT_DATE,'DDMONYY') as fltDate,
			SUBSTR(XPS.AWB_NO,1,3)||'-'||SUBSTR(XPS.AWB_NO,4) as awbNo, 
      XPS.AWB_NO as awbNoDisp, 
			TO_CHAR(XPS.AWB_DATE,'DDMONYY') as awbDate, 
			XPS.TAG_NO as tagNo,
			(select a.ACT_PCS from IMP_XPS_OBC_MAIL a where a.seq_no =XPS.seq_no and NVL(XPS.MBLE_FLG,'N')='N'
		      ) as manualPc,
	      	(select a.ACT_WT from IMP_XPS_OBC_MAIL a where a.seq_no =XPS.seq_no and NVL(XPS.MBLE_FLG,'N')='N'
			      ) as manualWt,
	      	(select a.ACT_PCS from IMP_XPS_OBC_MAIL a where a.seq_no =XPS.seq_no and NVL(XPS.MBLE_FLG,'N')='Y'
			      ) as scannedPc,
	      	(select a.ACT_WT from IMP_XPS_OBC_MAIL a where a.seq_no =XPS.seq_no and NVL(XPS.MBLE_FLG,'N')='Y'
			      ) as scannedWt
		 FROM IMP_XPS_OBC_MAIL XPS
		 WHERE  
			XPS.FLT_KEY = #fltKey# AND
			XPS.FLT_TYPE = 'I' AND
			XPS.CATALOG = 'TM' AND
			XPS.FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
			XPS.AWB_NO is not null
		ORDER BY
			XPS.AWB_NO
		)where 1=1
		group by fltKey,fltDate,awbNo,awbNoDisp,awbDate,tagNo
		order by awbNo) A, AWB B WHERE B.AWB_NO = A.awbNoDisp AND B.AWB_DATE = A.awbDate
	</select>
	 <update id="sqlReducePcWtTransitMailTagDesktop" parameterClass="cargo.cms.imprt.bo.ImpXomBO">
		UPDATE IMP_XPS_OBC_MAIL SET 			
			ACT_PCS = NVL(ACT_PCS,0) - NVL(#pcs#,0), 
			ACT_WT  = NVL(ACT_WT,0) - NVL(#wt#,0),       
			LM_USER_ID  = #userID#,	    
			LM_DATE = sysdate 
		 WHERE
			FLT_KEY = #fltKey# AND
			FLT_TYPE = 'I' AND
			TO_CHAR(FLT_DATE,'DDMONYY') = #fltDate# AND
			CATALOG = 'TM' AND
			TAG_NO = #tagNo# AND
			BD_ULD_KEY = #bdULDKey#
			AND DEST = #dest# 
	</update>
	
	
	 <delete id="sqlDeleteTransitMailTagDesktop" parameterClass="cargo.cms.imprt.bo.ImpXomBO">
		DELETE FROM IMP_XPS_OBC_MAIL
		WHERE
			SEQ_NO=#xpsSeqNo# 
	</delete>
	
	 <update id="sqlUpdateTransitMailTagDesktop" parameterClass="cargo.cms.imprt.bo.ImpXomBO">
			UPDATE IMP_XPS_OBC_MAIL SET 			
			ORIG = #orig#,
			DEST = #dest#, 
			ACT_PCS = #pcs#, 
			ACT_WT  = #wt#,          
            LOCN = #locCode#,
			TARE_WT = #tareWt#,
			DAM_IND = #damInd#,
			LM_USER_ID  = #userID#,	    
			LM_DATE = sysdate,
			LSP_NO = #lspNo#,
			ULD_KEY = #uldKey# ,
			RMK = UPPER(#rmk#) 
		 WHERE
			SEQ_NO=#xpsSeqNo#
	</update>
	
	
	<select id="sqlGetTMFligtAta"  parameterClass="cargo.cms.imprt.bo.ImpXomBO"  
		resultClass="cargo.cms.imprt.bo.ImpXomBO">
		 SELECT 
		 	FLT_TYPE as fltType,
		 	FLT_KEY as fltKey,
		 	to_char(SCH_DATE,'DDMONYY') as fltDate,
			PKG_COMMON.get_flt_ata(FLT_KEY,SCH_DATE, 'A')  ata,
			CARR_CODE carrCode,
			(SELECT DECODE(COUNT(1), 0, 'N', 'Y') as mailAsCargo FROM MAST_CARRIER where code = CARR_CODE and NVL(MAIL_AS_CARGO,'X') = 'Y') as mailAsCargo
			FROM FLT_OPR
		 WHERE  
			FLT_KEY = #fltKey# AND
			FLT_TYPE = 'A' AND
			SCH_DATE = TO_DATE(#fltDate#,'DDMONYY') 
		</select>
		
		
	<update id="reducePcsWtForTrTag" parameterClass="cargo.cms.imprt.bo.ImpXomBO">
	UPDATE AWB_INVENTORY
		SET LOCN_PCS   = (LOCN_PCS - #pcs#),
		    LOCN_WT    = (LOCN_WT  - #wt#),
		    LM_USER_ID = #userID#,
		    LM_DATE    = sysdate
	     WHERE SEQ_NO = #seqNo#
    </update>  
    
    <update id="reducePcsWtForTrTagOnUpdate" parameterClass="cargo.cms.imprt.bo.ImpXomBO">
	UPDATE AWB_INVENTORY
		SET LOCN_PCS   = ((LOCN_PCS -  #oldPcs#) + #pcs#),
		    LOCN_WT    = ((LOCN_WT  - #oldWt#) + #wt#),
		    LM_USER_ID = #userID#,
		    LM_DATE    = sysdate,
	     WHERE SEQ_NO = #seqNo#
    </update>
    
    <!-- Changed for QR :: RANJITH -->
    <!--  
     <delete id="sqlDeleteAwbStrgTagRecord" parameterClass="cargo.cms.imprt.bo.ImpXomBO">
		DELETE FROM IMP_AWB_STRG_DTL
		WHERE
			FLT_KEY = #fltKey# AND
			FLT_TYPE = 'I' AND
			TO_CHAR(FLT_DATE,'DDMONYY') = #fltDate# AND
			TAG_NO = #tagNo# AND
			chkin_uld_key = #bdULDKey#
	</delete>
	-->
	<select id="sglGetInvoiceNoSeq" parameterClass="java.lang.String" resultClass="java.lang.String">
		select to_char(invoice_no_seq.nextVal,'00000000') from dual
	</select>
	
	<select id="sqlGetPcAndWtForTransitMailTag"  parameterClass="java.lang.String" resultClass="java.lang.String" >
		 SELECT 
		 	NVL(LOCN_PCS,0) || '/' || NVL(LOCN_WT,0) pcWt
		 	FROM AWB_INVENTORY
		 WHERE  
			SEQ_NO = #seqNo#
		</select>
	
	<delete id="sqlDeleteInventoryForTransitMailTag"  parameterClass="java.lang.String">
		 DELETE FROM AWB_INVENTORY WHERE SEQ_NO = #seqNo#
		</delete>
	
	<!-- Changed for QR :: RANJITH -->	
	<update id="sqlUpdateRecvPcWtForTag" parameterClass="cargo.cms.imprt.bo.ImpXomBO">	
		UPDATE IMP_CAR_SHP 
			SET 
			RECD_PCS =  NVL(RECD_PCS,0)+NVL(#pcs#,0),
			RECD_WT =  NVL(RECD_WT,0)+NVL(#wt#,0),
			LM_DATE =   SYSDATE, 
			LM_USER_ID = #userID#
		WHERE 	
		AWB_NO = UPPER(#awbNo#) AND 
		AWB_DATE = to_date(#awbDate#,'DDMONYY') AND
		FLT_KEY = UPPER(#fltKey#) AND 
		FLT_DATE = TO_DATE(#fltDate#,'DDMONYY')
	</update>	
		
	<!-- Changed for QR :: RANJITH -->
	<update id="sqlReduceRecvPcWtForTag" parameterClass="cargo.cms.imprt.bo.ImpXomBO">	
		UPDATE IMP_CAR_SHP 
			SET 
			RECD_PCS =  NVL(RECD_PCS,0)-NVL(#pcs#,0),
			RECD_WT =  NVL(RECD_WT,0)-NVL(#wt#,0),
			LM_DATE =   SYSDATE, 
			LM_USER_ID = #userID#
		WHERE 	
		AWB_NO = UPPER(#awbNo#) AND 
		AWB_DATE = to_date(#awbDate#,'DDMONYY') AND
		FLT_KEY = UPPER(#fltKey#) AND 
		FLT_DATE = TO_DATE(#fltDate#,'DDMONYY')
	</update>		
		
	<select id="sqlQueyGetUldInvCount" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		select count(1) from uld_inventory where uld_key = #uldKey# and (OWNED_INV='Y' or loc_code is not null)
	</select>
	
	<select id="sqlQueyGetLspInvCount" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		select count(1) from lsp_inventory where lsp_no = #lspNo#
	</select>	
		
	<insert id="sqlMailInsertLspInv" parameterClass="cargo.cms.imprt.bo.ImpXomBO">
	 	 insert into LSP_INVENTORY
	 	 (LSP_NO,EMPTY_FLG,LOC_CODE,LM_DATE,LM_USER_ID,CR_DATE,CR_USER_ID,STRG_DATE,LSP_TYPE,REF_TR_TYPE,REF_TR_EVENT)
	 	 values(#lspNo#,'Y',#locCode#,sysdate,#userID#,sysdate,#userID#,sysdate,substr(#lspNo#,0,1),'TM','MAILTAG')
	 </insert>
	 

	
	<!-- Transit Mail Tag :: Desktop :: Ranjith :: Ends  -->
     
    <!-- Update TM Tag for Maintain/Delete CAR :: Start-->
    
    <!-- Changed for QR :: RANJITH -->
    <!--
    <select id="sqlfetchXPSDataforCAR"  parameterClass="cargo.cms.imprt.bo.MaintainCARBO" resultClass="cargo.cms.imprt.bo.MaintainCARBO" >
    	select LSP_NO lspNo, act_pcs locnPcs, act_wt locnWt, dest awbDestination, dam_ind damInd, ULD_KEY uldNo, locn locnCode from IMP_XPS_OBC_MAIL where flt_key = #fltKey# and flt_date=TO_DATE(#fltDate#,'DDMONYY') 
		and dest=#awbDestination# and catalog='TM' and awb_no is null
	</select>
     
     -->
     <select id="sqlGetSeqNoForTransitMailTagforCAR" parameterClass="cargo.cms.imprt.bo.MaintainCARBO" resultClass="java.lang.String" >
	 SELECT SEQ_NO seqNo
	 FROM AWB_INVENTORY
     WHERE AWB_NO = #awbNo#
     AND AWB_DATE = #awbDate#
     AND NVL(FLT_KEY,'*')  = NVL(#fltKey#,'*')
     AND NVL(FLT_DATE,SYSDATE) = NVL(#fltDate#,SYSDATE)
     AND NVL(LOC_CODE,'*') = NVL(#locnCode#,'*')
     AND NVL(LSP_NO,0)   = NVL(#lspNo#,0)
     AND NVL(ULD_KEY,'*')  = NVL(#uldNo#,'*')
   </select>
	
	
	<update id="updatePcsWtForTrTaginCAR" parameterClass="cargo.cms.imprt.bo.MaintainCARBO">
	UPDATE AWB_INVENTORY
		SET LOCN_PCS   = (LOCN_PCS + #locnPcs#),
		    LOCN_WT    = (LOCN_WT  + #locnWt#),
		    LM_USER_ID = #lmUserId#,
		    LM_DATE    = sysdate
	     WHERE SEQ_NO = #seqNo#
    </update>  
    
    
    
    <insert id="insertPcsWtForTrTagforCAR" parameterClass="cargo.cms.imprt.bo.MaintainCARBO">
	INSERT INTO AWB_INVENTORY
	 (AWB_NO, AWB_DATE,CARR_CODE, LSP_NO,LOC_CODE,
	 LOCN_PCS, LOCN_WT, DAM_IND,CR_USER_ID, CR_DATE,
	 LM_USER_ID, LM_DATE,FLT_DATE, FLT_KEY,FLT_TYPE, ULD_KEY, SEQ_NO,STRG_DATE,CATALOG)
	 VALUES
	 (#awbNo#,TO_DATE(#awbDate#,'DDMONYY'),#carrCode#,#lspNo#,#locnCode#,
	 #locnPcs#,#locnWt#,#damInd#,#lmUserId#, sysdate,
	 #lmUserId#, sysdate,TO_DATE(#fltDate#,'DDMONYY'),#fltKey#,'I',#uldNo#,AWB_INV_SEQ.NEXTVAL,SYSDATE,'TM')
	</insert>
	
	<!-- Changed for QR :: RANJITH -->
	<!--<update id="updatePcsWtForTMTaginCAR" parameterClass="cargo.cms.imprt.bo.MaintainCARBO">	
		UPDATE IMP_CAR_SHP 
			SET 
			RECD_PCS =NVL(#locnPcs#,0),
			RECD_WT =  NVL(#locnWt#,0),
			LM_DATE =   SYSDATE, 
			LM_USER_ID = #lmUserId#
		WHERE 	
		UPPER(AWB_NO) = UPPER(#awbNo#) 
		AND AWB_DATE = to_date(#awbDate#,'DDMONYY')
		UPPER(FLT_KEY) = UPPER(#fltKey#) AND 
		FLT_DATE = TO_DATE(#fltDate#,'DDMONYY')
	</update>
     -->
     
     <!-- Update TM Tag for Maintain/Delete CAR :::End-->
<!--     Added by Shilpa for Flight Information starts-->
<select id="ext_fetch_flightInfo" parameterClass="cargo.cms.external.bo.ExtFlightBO" resultClass="cargo.cms.external.bo.ExtFlightBO" >
		SELECT      TO_CHAR(OPR.TR_NO) TXNNO, 
                  OPR.CARR_CODE FLIGHTCARR, 
                  OPR.FLT_NO FLIGHTNO, 
                  TO_CHAR(OPR.SCH_DATE,'DDMONYY') SCHDATE, 
                  TO_CHAR(OPR.EST_DATE,'DDMONYY') ESTDATE,
                  TO_CHAR(OPR.ACT_DATE,'DDMONYY') ACTDATE,
                  rtrim(SUBSTR(TRIM(TO_CHAR(OPR.SCH_TIME,'0000')),0,2)|| ':'||  SUBSTR(TRIM(TO_CHAR(OPR.SCH_TIME,'0000')),3,4), ':') HRANDMINSCH,
                  rtrim(SUBSTR(TRIM(TO_CHAR(OPR.EST_TIME,'0000')),0,2)|| ':'||  SUBSTR(TRIM(TO_CHAR(OPR.EST_TIME,'0000')),3,4), ':') HRANDMINEST,
                  rtrim(SUBSTR(TRIM(TO_CHAR(OPR.ACT_TIME,'0000')),0,2)|| ':'||  SUBSTR(TRIM(TO_CHAR(OPR.ACT_TIME,'0000')),3,4), ':') HRANDMINACT,
                  (SELECT CODE_DESC FROM MAST_CODE_DTL WHERE CODE =OPR.STATUS AND CODE_TYPE='FLT_STATUS') ARRDEPSTATUS,
                  OPR.ACFT_PRK_BAY GATE, FLT_KEY  FLIGHTKEY, ORIG AS ORIGINATION, DEST AS DESTINATION,
                  FLT_TYPE as flightType,
                  FLT_NO as flightNo,
                  ACFT_TYPE AS airCraftType,
                  (select STRAGG(STRINGDELIM(t22.off_point, '/')) 
                  from     flt_opr t11, flt_opr_leg t22
                  where    t11.tr_no = t22.tr_no
                  and      t11.flt_key = OPR.FLT_KEY
                  and      t11.sch_date =  TO_CHAR(OPR.SCH_DATE,'DDMONYY')
                  and      t11.flt_type = 'D')
                  as portOfCall
                 FROM FLT_OPR OPR WHERE
			FLT_TYPE = #flightType# AND
		    SCH_DATE  BETWEEN TO_DATE(#schDate#, 'ddMONyy') AND TO_DATE(#schDateTo#, 'ddMONyy')
    <dynamic prepend="AND">
			<isNotEmpty property="fltKey">
				 OPR.flt_key = #fltKey#
			</isNotEmpty>
		</dynamic>
		<dynamic prepend="AND">
			<isNotEmpty property="origination">
				 OPR.DEST = #origination#
			</isNotEmpty>
		</dynamic>
		<dynamic prepend="AND">
			<isNotEmpty property="flightCarr">
				 OPR.CARR_CODE = #flightCarr#
			</isNotEmpty>
		</dynamic>
		ORDER	BY SCHDATE ASC,NVL(to_date(estDate||HRANDMINEST,'DDMONYYHH24:MI'),to_date(SCHDATE||HRANDMINSCH,'DDMONYYHH24:MI')) ASC
	</select>
	<select id="ext_fetch_flightInfo1" parameterClass="cargo.cms.external.bo.ExtFlightBO" resultClass="cargo.cms.external.bo.ExtFlightBO" >
		SELECT      TO_CHAR(OPR.TR_NO) TXNNO, 
                  OPR.CARR_CODE FLIGHTCARR, 
                  OPR.FLT_NO FLIGHTNO, 
                  TO_CHAR(OPR.SCH_DATE,'DDMONYY') SCHDATE, 
                  TO_CHAR(OPR.EST_DATE,'DDMONYY') ESTDATE,
                  TO_CHAR(OPR.ACT_DATE,'DDMONYY') ACTDATE,
                  rtrim(SUBSTR(TRIM(TO_CHAR(OPR.SCH_TIME,'0000')),0,2)|| ':'||  SUBSTR(TRIM(TO_CHAR(OPR.SCH_TIME,'0000')),3,4), ':') HRANDMINSCH,
                  rtrim(SUBSTR(TRIM(TO_CHAR(OPR.EST_TIME,'0000')),0,2)|| ':'||  SUBSTR(TRIM(TO_CHAR(OPR.EST_TIME,'0000')),3,4), ':') HRANDMINEST,
                  rtrim(SUBSTR(TRIM(TO_CHAR(OPR.ACT_TIME,'0000')),0,2)|| ':'||  SUBSTR(TRIM(TO_CHAR(OPR.ACT_TIME,'0000')),3,4), ':') HRANDMINACT,
                  (SELECT CODE_DESC FROM MAST_CODE_DTL WHERE CODE =OPR.STATUS AND CODE_TYPE='FLT_STATUS') ARRDEPSTATUS,
                  OPR.ACFT_PRK_BAY GATE, FLT_KEY  FLIGHTKEY, ORIG AS ORIGINATION, DEST AS DESTINATION,
                  FLT_TYPE as flightType,
                  FLT_NO as flightNo,
                  ACFT_TYPE AS airCraftType,
                  (select STRAGG(STRINGDELIM(t22.off_point, '/')) 
                  from     flt_opr t11, flt_opr_leg t22
                  where    t11.tr_no = t22.tr_no
                  and      t11.flt_key = OPR.FLT_KEY
                  and      t11.sch_date =  TO_CHAR(OPR.SCH_DATE,'DDMONYY')
                  and      t11.flt_type = 'A')
                  as portOfCall
                 FROM FLT_OPR OPR WHERE
			FLT_TYPE = #flightType# AND
		    SCH_DATE  BETWEEN TO_DATE(#schDate#, 'ddMONyy') AND TO_DATE(#schDateTo#, 'ddMONyy')
		
    <dynamic prepend="AND">
			<isNotEmpty property="fltKey">
				 OPR.flt_key = #fltKey#
			</isNotEmpty>
		</dynamic>
		<dynamic prepend="AND">
			<isNotEmpty property="origination">
				 OPR.ORIG = #origination#
			</isNotEmpty>
		</dynamic>
		<dynamic prepend="AND">
			<isNotEmpty property="flightCarr">
				 OPR.CARR_CODE = #flightCarr#
			</isNotEmpty>
		</dynamic>
		ORDER	BY SCHDATE ASC,NVL(to_date(estDate||HRANDMINEST,'DDMONYYHH24:MI'),to_date(SCHDATE||HRANDMINSCH,'DDMONYYHH24:MI')) ASC
	</select>
	<!--<select id="getFlightPortOfCall1" parameterClass="map" resultClass="java.lang.String">
		select PKG_PMAN.FLT_PORTS(#flightNumber#, #flightDate#) as portOfCall from dual
	</select>
	
--><!--     Added by Shilpa for Flight Information starts-->	



<!--  Cross Terminal Transfer Bug Fixing  :: Ranjith -->
	<select  id="get_trm_awbinv_Record" parameterClass="cargo.cms.imprt.bo.TrmBO" resultClass="java.lang.String">
    	 SELECT SEQ_NO seqNo
		 FROM AWB_INVENTORY
	     WHERE AWB_NO = #awbNo#
	     AND AWB_DATE = #awbDate#
	     AND NVL(LOC_CODE,'*') = NVL(#warehouseLocation#,'*')
	     AND NVL(LSP_NO,0)   = NVL(#lspNo#,0)
	     AND NVL(ULD_KEY,'*')  = NVL(#uldKey#,'*')
	     AND TRM_NO is null
	</select>
	
		<update id="upd_trm_reject_awbInvtory" parameterClass="map">
		UPDATE awb_inventory SET
			locn_pcs = NVL(locn_pcs,0)+NVL(#locn_pcs#,0),
			locn_wt = NVL(locn_wt,0) +NVL(#locn_wt#,0),
			lm_user_id = #lmUser#,
			lm_date = sysdate
		WHERE SEQ_NO = #seqNo#
	</update>
<!--  Cross Terminal Transfer Bug Fixing  :: Ranjith -->

<!-- Create Transit Mail CAR :: Santosh D :: Start-->
	<select  id="get_transitmailtag_list" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO" resultClass="cargo.cms.imprt.bo.TransitMailCarBO">
		SELECT
		 	mail.CATALOG as catalog,
		 	mail.TAG_NO as tagNo, 
		 	mail.ACT_PCS as actPcs, 
			mail.ACT_WT as actWt,
			mail.EST_PCS as estPcs,
			mail.EST_WT as estWt,			
		 	mail.FLT_TYPE as fltType,
		 	#carrCode# as carrCode,
		 	#fltNo# as fltNo,
		 	mail.FLT_KEY as fltKey,
		 	#fltDate# as fltDate,
		 	PKG_COMMON.get_flt_ata(#fltKey#, TO_DATE(#fltDate#,'DDMONYY'), 'A', 'DD') as ata,			
			mail.ORIG as orig, 
			mail.DEST as dest, 
			mail.LOCN as locn, 
			mail.LSP_NO as lspNo,
			mail.ULD_KEY uldKey, 
			mail.BD_ULD_KEY as bduldno,			
			mail.DAM_IND as damInd, 
			mail.RMK as rmk, 		
			mail.LM_USER_ID as lmUserId,
			mail.LM_DATE as lmDate,
			DECODE(evnt.WHSE_COMPL_DATE,NULL,'N','Y') fltBDCompl,
			mail.seq_no as mailSeq,
			(SELECT DECODE(COUNT(1), 0, 'N', 'Y') as mailAsCargo FROM MAST_CARRIER where code = flt.CARR_CODE and NVL(MAIL_AS_CARGO,'X') = 'Y') as mailAsCargo 
		 FROM 
			IMP_XPS_OBC_MAIL mail
			JOIN FLT_OPR flt ON
			flt.FLT_KEY = mail.FLT_KEY AND 
			flt.SCH_DATE = mail.FLT_DATE AND 
			flt.FLT_TYPE = 'A'		 
			JOIN FLT_OPR_EVENTS evnt ON 				
			evnt.FLT_KEY = flt.FLT_KEY AND 
			evnt.SCH_DATE = flt.SCH_DATE AND 
			evnt.FLT_TYPE = 'A'		
		WHERE
			mail.FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
			mail.FLT_KEY = #fltKey# AND
			mail.FLT_TYPE = 'I' AND
			mail.CATALOG = 'TM' AND
			mail.AWB_NO IS NULL AND
			mail.AWB_DATE IS NULL
		ORDER BY
			tagNo asc
	</select>
	
		<update id="upd_transitmailtag" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO">
		UPDATE IMP_XPS_OBC_MAIL SET
			AWB_NO = #awbNo#,
			AWB_DATE = #awbDate#,
			LM_USER_ID = #crUserId#,
			LM_DATE = SYSDATE
		WHERE
			SEQ_NO = #mailSeq#
			<!-- AND TO_CHAR(LM_DATE , 'DDMONYY HH24:MI:SS')=#lmDate#-->			
	</update>

	
	
	
	<update id="updateTransitMailTransformAWB" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO">
		UPDATE IMP_XPS_OBC_MAIL SET
			AWB_NO = #awbNo#,
			AWB_DATE = #awbDate#,
			LM_USER_ID = #crUserId#,
			LM_DATE = SYSDATE
		WHERE
			FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
			FLT_KEY = #fltKey# AND
			FLT_TYPE = 'I' AND			
			TAG_NO = #tagNo# AND
			<isNotEmpty property="bduldno" >
			BD_ULD_KEY = #bduldno# AND 
			</isNotEmpty>
			DEST = #dest# 
			AND AWB_NO = #trfAwbNo# AND AWB_DATE = to_date(#trfAwbDate#)
			<!-- AND TO_CHAR(LM_DATE , 'DDMONYY HH24:MI:SS')=#lmDate#-->			
	</update>
	
	
<update id="updateTransitMailTransformAWBCT" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO">
		UPDATE IMP_XPS_OBC_MAIL SET
			AWB_NO = #awbNo#,
			AWB_DATE = #awbDate#,
			FLT_DATE = TO_DATE(#fltDate#,'DDMONYY'),
			FLT_KEY = #fltKey#,
			FLT_TYPE = 'I',		
			LM_USER_ID = #crUserId#,
			LM_DATE = SYSDATE
		WHERE
			SEQ_NO = #mailSeq#			
	</update>
	
	
	<update id="upd_transitmailtag_Mobile" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO">
		UPDATE IMP_XPS_OBC_MAIL SET
			AWB_NO = #awbNo#,
			AWB_DATE = #awbDate#,
			LM_USER_ID = #crUserId#,
			LM_DATE = SYSDATE
		WHERE
			FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
			FLT_KEY = #fltKey# AND
			FLT_TYPE = 'I' AND			
			TAG_NO = #tagNo# AND
			BD_ULD_KEY = #bduldno# AND DEST = #dest# 
			and MBLE_FLG = 'Y' AND MBLE_CAR_IND = 'Y'
			<!-- AND TO_CHAR(LM_DATE , 'DDMONYY HH24:MI:SS')=#lmDate#-->			
	</update>

    <!-- Changed for QR :: RANJITH -->	 
    <select id="checkCarCreatedForTransitMailTag" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO" resultClass="java.lang.Integer">
		select count(1)   
     	FROM 
			IMP_XPS_OBC_MAIL mail
		WHERE
			mail.FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
			mail.FLT_KEY = #fltKey# AND
			mail.FLT_TYPE = 'I' AND
			mail.CATALOG = 'TM' AND
			mail.AWB_NO IS NOT NULL AND
			mail.AWB_DATE IS NOT NULL AND
			mail.TAG_NO = #tagNo# AND
      		mail.DEST = #dest# 
	</select>
	
	
	<select id="checkCarCreatedForTMAsCargoWAWB" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO" resultClass="java.lang.Integer">
		select count(1)   
     	FROM 
			IMP_XPS_OBC_MAIL mail
		WHERE
			mail.FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
			mail.FLT_KEY = #fltKey# AND
			mail.FLT_TYPE = 'I' AND
			mail.CATALOG = 'TM' AND
			mail.AWB_NO = #awbNo# AND
			mail.AWB_DATE = to_date(#awbDate#,'DDMONYY') AND
			mail.TAG_NO = #tagNo#      		
	</select>
	
	<select id="chkFHLCreatedForAWB" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO" resultClass="java.lang.String">
		select TR_NO as tr_number FROM EDI_FHL WHERE AWB_NO = #awbNo# AND AWB_DATE = to_date(#awbDate#,'DDMONYY') 
	</select>
	
	<select id="chkFhlHAWBCreated" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO" resultClass="java.lang.String">
		select DOC_LINE_NO as docLine FROM edi_fhl_hawb WHERE TR_NO = #trNumber# AND HAWB_NO = #tagNo# 
	</select>
	
	<insert id="insEDI_FHL" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO">
		Insert into EDI_FHL (TR_NO,MSG_VER,SI_TYPE,COPY_NO,AWB_NO,AWB_DATE,AWB_ORG,AWB_DEST,AWB_PCS,AWB_WT,AWB_WT_CODE,PART_SHMPT_YN,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,LM_VER) values 
		(#trNumber#,'0','S','1',#awbNo#,#awbDate#,#orig#,#dest#,#pcs#,#wt#,'K','N',#crUserId#,SYSDATE,#crUserId#,SYSDATE,'1')
	</insert>	

	<insert id="insEDI_FHL_HAWB" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO">
		Insert into edi_fhl_hawb (TR_NO,DOC_LINE_NO,HAWB_NO,HAWB_ORG,HAWB_DEST,HAWB_PCS,HAWB_NET_WT,HAWB_WT_CODE,MANIFEST_DESC,ACCS_I,SOURCE,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,LM_VER) values 
		(#trNumber#,EDI_FHL_HAWB_SEQ.nextval,#tagNo#,#orig#,#dest#,#pcs#,#wt#,'K','TAG','A','TAG',#crUserId#,SYSDATE,#crUserId#,SYSDATE,1)
	</insert>	
	
	<update id="updEDI_FHL" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO">
		UPDATE edi_fhl
		    SET awb_pcs = awb_pcs +  #pcs#,
		           awb_wt = awb_wt + #wt# , 
		           lm_user_id = #crUserId#,
		           lm_date = SYSDATE
		    WHERE tr_no = #trNumber#
    </update>
	
	<update id="updEDI_FHL_HAWB" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO">
		UPDATE edi_fhl_hawb
		    SET HAWB_PCS = HAWB_PCS +  #pcs#,
		           HAWB_NET_WT = HAWB_NET_WT + #wt# , 
		           lm_user_id = #crUserId#,
		           lm_date = SYSDATE
		    WHERE tr_no = #trNumber# and DOC_LINE_NO = #docLine#
    </update>
	    
	<select id="chkMastHAWBCnt" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO" resultClass="java.lang.String">
		select count(1) as hawbCnt FROM MAST_HAWB WHERE HAWB_NO = #tagNo# AND AWB_NO = #awbNo# AND AWB_DATE = to_date(#awbDate#,'DDMONYY') 
	</select>
	
	<insert id="insMastHAWB" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO">
		Insert into MAST_HAWB (AWB_NO,AWB_DATE,HAWB_NO,HAWB_ORG,HAWB_DES,HAWB_PCS,HAWB_WT) values 
			(#awbNo#,#awbDate#,#tagNo#,#orig#,#dest#,#pcs#,#wt#)
	</insert>	
	
	<update id="updMastHAWB" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO">
		UPDATE MAST_HAWB
		    SET HAWB_PCS = HAWB_PCS +  #pcs#,
		           HAWB_WT = HAWB_WT + #wt# 
		    WHERE HAWB_NO = #tagNo# AND AWB_NO = #awbNo# AND AWB_DATE = to_date(#awbDate#,'DDMONYY') 
    </update>
	
	
	<select id="chkHAWBStorageDtls" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO" resultClass="java.lang.String">
		select count(1) as hawbStrgCnt FROM IMP_HAWB_STRG_DTL WHERE HAWB_NO = #tagNo# AND AWB_NO = #awbNo# AND AWB_DATE = to_date(#awbDate#,'DDMONYY') AND FLT_KEY = #fltKey# AND
			FLT_DATE = TO_DATE(#fltDate#,'DDMONYY')
	</select>
	
	<insert id="insHAWBStorageDtlDummy" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO">
		INSERT INTO IMP_HAWB_STRG_DTL(FLT_DATE, CARR_CODE, AWB_PFX,FLT_KEY, AWB_NO, AWB_DATE,FLT_TYPE,HAWB_NO, HAWB_PCS, HAWB_WT,SEC_CHECK, HAWB_BRKDN_PCS, HAWB_BRKDN_WT,
			TR_TYPE, TR_STATUS,CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE)
		VALUES (to_date(#fltDate#,'DDMONYY'), #carrCode#, #awbPrefix#,#fltKey#, #awbNo#, to_date(#awbDate#, 'DDMONYY'),'I',#tagNo#, NVL(#pcs#,0), NVL(#wt#,0),#sc#, NVL(#pcs#,0), NVL(#wt#,0),
			 'HA', 'A',#crUserId#, SYSDATE, #crUserId#, SYSDATE) 
	</insert>	
	
	<insert id="insHAWBStorageDtl" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO">
		INSERT INTO IMP_HAWB_STRG_DTL(FLT_DATE, CARR_CODE, AWB_PFX,FLT_KEY, AWB_NO, AWB_DATE,FLT_TYPE,HAWB_NO, SEC_CHECK, HAWB_BRKDN_PCS, HAWB_BRKDN_WT,
			TR_TYPE, TR_STATUS,CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE)
		VALUES (to_date(#fltDate#,'DDMONYY'), #carrCode#, #awbPrefix#,#fltKey#, #awbNo#, to_date(#awbDate#, 'DDMONYY'),'I',#tagNo#, #sc#, NVL(#pcs#,0), NVL(#wt#,0),
			 'HA', 'A',#crUserId#, SYSDATE, #crUserId#, SYSDATE) 
	</insert>
	
	
	<insert id="insertTransformAWBDtls" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO">
		INSERT INTO IMP_TM_TRANSFORM_HD(TR_NO,TRF_FROM_AWB_NO, TRF_FROM_AWB_DATE,TRF_TO_AWB_NO,TRF_TO_AWB_DATE,TR_TYPE,CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE,FUNCTION_NAME)
		VALUES (#trfTrNum#,#trfAwbNo#,to_date(#trfAwbDate#, 'DDMONYY'),#awbNo#, to_date(#awbDate#, 'DDMONYY'),'TRFP',#crUserId#, SYSDATE, #crUserId#, SYSDATE,#fromFunction#) 
	</insert>
			
	<insert id="insertTransformTagDtls" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO">
		INSERT INTO IMP_TM_TRANSFORM_DTL(TR_NO,DOC_LINE_NO,TAG_NO, TAG_WT,CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE)
			VALUES (#trfTrNum#,(SELECT NVL(MAX(DOC_LINE_NO), 0) FROM IMP_TM_TRANSFORM_DTL WHERE TR_NO = #trfTrNum#)+1,#tagNo#,#wt#,#crUserId#, SYSDATE, #crUserId#, SYSDATE) 
	</insert>
	
	<select id="checkTransformationForCT" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO" resultClass="java.lang.Integer">
		select COUNT(1) from IMP_TM_TRANSFORM_HD  where TRF_FROM_AWB_NO = #awbNo# and TRF_FROM_AWB_DATE = to_date(#awbDate#, 'DDMONYY') and TRF_TO_AWB_NO = #trfAwbNo# and TRF_TO_AWB_DATE = to_date(#trfAwbDate#, 'DDMONYY')
	</select>
	
	<update id="updHAWBStorageDtl" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO">
		UPDATE IMP_HAWB_STRG_DTL
		    SET    HAWB_BRKDN_PCS = HAWB_BRKDN_PCS +  #pcs#,
		           HAWB_BRKDN_WT = HAWB_BRKDN_WT + #wt#,
		           lm_user_id = #crUserId#,
		           lm_date = SYSDATE
		    WHERE HAWB_NO = #tagNo# AND AWB_NO = #awbNo# AND AWB_DATE = to_date(#awbDate#,'DDMONYY')  AND
		    FLT_KEY = #fltKey# AND
			FLT_DATE = TO_DATE(#fltDate#,'DDMONYY')
    </update>
    
    
    <update id="updHAWBStorageDtlDummy" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO">
		UPDATE IMP_HAWB_STRG_DTL
		    SET    
		    HAWB_PCS = HAWB_PCS +  #pcs#,
		    HAWB_WT = HAWB_WT + #wt#, 
		    HAWB_BRKDN_PCS = HAWB_BRKDN_PCS +  #pcs#,
		    HAWB_BRKDN_WT = HAWB_BRKDN_WT + #wt#,
		    lm_user_id = #crUserId#,
		    lm_date = SYSDATE
		    WHERE HAWB_NO = #tagNo# AND AWB_NO = #awbNo# AND AWB_DATE = to_date(#awbDate#,'DDMONYY')  AND
		    FLT_KEY = #fltKey# AND
			FLT_DATE = TO_DATE(#fltDate#,'DDMONYY')
    </update>
    
    
    <select id="chkHAWBInventoryExists" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO" resultClass="java.lang.String">
		select count(1) as hawbInvCnt FROM HAWB_INVENTORY WHERE HAWB_NO = #seqNo# AND HAWB_NO = #tagNo# 
	</select>
	
    <insert id="insHAWBInventory" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO">
		Insert into HAWB_INVENTORY (SEQ_NO,HAWB_NO,STRG_PCS,STRG_WT,CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE) values 
			(#seqNo#,#tagNo#,#pcs#,#wt#,#crUserId#,SYSDATE,#crUserId#,SYSDATE)
	</insert>	
	
	<update id="updHAWBInventory" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO">
		UPDATE HAWB_INVENTORY
		    SET STRG_PCS = STRG_PCS +  #pcs#,
		           STRG_WT = STRG_WT + #wt# , 
		           lm_user_id = #crUserId#,
		           lm_date = SYSDATE
		    WHERE SEQ_NO = #seqNo# AND HAWB_NO = #tagNo# 
    </update>
    
    
    <insert id="imp_insertTransitMailTag" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO" >
		INSERT INTO IMP_XPS_OBC_MAIL (
		   CATALOG, FLT_TYPE, FLT_KEY, FLT_DATE, BD_ULD_KEY, AWB_NO,AWB_DATE,TAG_NO, LSP_NO,  ORIG, DEST, ACT_PCS, ACT_WT, LOCN, ULD_KEY, CR_USER_ID,CR_DATE, LM_USER_ID, LM_DATE,MBLE_FLG, MBLE_CAR_IND) 
		VALUES (#catalog#, 'I', UPPER(#fltKey#), TO_DATE(#fltDate#,'DDMONYY'), #bduldno#, UPPER(#awbNo#),to_date(#awbDate#,'DDMONYY'),	UPPER(#tagNo#), UPPER(#lspNo#),	UPPER(#orig#), UPPER(#dest#),
		#actPcs#,#actWt#, UPPER(#locCode#), UPPER(#uldKey#), #crUserId#, sysdate, #crUserId#, sysdate,#mobileApp#,#mobileApp#)
	</insert>
	
	<insert id="sqlInsertAwbStrlDtlTag" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO" >
		Insert into IMP_AWB_STRG_DTL 
		(TR_NO,DOC_LINE_NO,CARR_CODE,FLT_DATE,FLT_KEY,AWB_PFX,AWB_NO,AWB_DATE,AWB_DEST,ULD_KEY,LOC_CODE,STRG_PCS,STRG_WT,LSP_NO,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,TAG_NO,FLT_TYPE,TR_STATUS,
		TR_TYPE,CHKIN_ULD_KEY,CATALOG) values
		(IMP_AWB_STRG_DTL_SEQ.NEXTVAL, '1',  #carrCode#,  to_date(#fltDate#,'DDMONYY'),  #fltKey#,  substr(#awbNo#,0,3),  #awbNo#,  to_date(#awbDate#,'DDMONYY'),   #dest#,  #uldKey#,  #locCode#,  #actPcs#,  #actWt#,  #lspNo#,
		  #crUserId#,  sysdate,  #crUserId#,  sysdate,  #tagNo#,  'I',  'A',  'TM',  #bduldno#,  #catalog#)
	</insert>
	
    
	<select id="checkCarCreatedForTMAsCargoWOAWB" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO" resultClass="java.lang.Integer">
		select count(1)   
     	FROM 
			IMP_XPS_OBC_MAIL mail
		WHERE
			mail.FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
			mail.FLT_KEY = #fltKey# AND
			mail.FLT_TYPE = 'I' AND
			mail.CATALOG = 'TM' AND
			mail.AWB_NO IS NOT NULL AND
			mail.AWB_DATE IS NOT NULL AND mail.DEST = #dest# 
			AND AWB_NO like '%M%'
			AND (CASE WHEN LENGTH(mail.TAG_NO) = 29 THEN SUBSTR(mail.TAG_NO,17,4) ELSE mail.TAG_NO END) = (CASE WHEN LENGTH(mail.TAG_NO) = 29 THEN SUBSTR(#tagNo#,17,4) ELSE #tagNo# END)
	</select>
	
	
	    <select id="checkAWBCreatedForTransitMailTag" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM IMP_CAR_AWB WHERE AWB_NO=#awbNo# AND AWB_DATE=#awbDate#
		</select>
	
	<!-- Changed for QR :: RANJITH -->	 
	<select id="getCarDetailsForTransitMailTag" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO" resultClass="cargo.cms.imprt.bo.TransitMailCarBO">
		select 
		mail.AWB_NO as awbNo,
		TO_CHAR(mail.AWB_DATE,'DDMONYY') as awbDate,
		shp.AWB_PRFX as awbPrefix
     	FROM 
			IMP_XPS_OBC_MAIL mail
			JOIN IMP_CAR_SHP shp ON
			shp.AWB_NO = mail.AWB_NO AND
			shp.AWB_DATE = mail.AWB_DATE AND
			shp.FLT_DATE = mail.FLT_DATE AND
			shp.FLT_KEY = mail.FLT_KEY 
		WHERE
			mail.FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
			mail.FLT_KEY = #fltKey# AND
			mail.FLT_TYPE = 'I' AND
			mail.CATALOG = 'TM' AND
			mail.AWB_NO IS NOT NULL AND
			mail.AWB_DATE IS NOT NULL AND
			mail.TAG_NO = #tagNo#  AND
      		mail.DEST = #dest# 
			AND rownum = 1
	</select>   
	
	<select id="getCarDetailsForTransitMailTagWOAWB" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO" resultClass="cargo.cms.imprt.bo.TransitMailCarBO">
		select 
		mail.AWB_NO as awbNo,
		TO_CHAR(mail.AWB_DATE,'DDMONYY') as awbDate,
		shp.AWB_PRFX as awbPrefix
     	FROM 
			IMP_XPS_OBC_MAIL mail
			JOIN IMP_CAR_SHP shp ON
			shp.AWB_NO = mail.AWB_NO AND
			shp.AWB_DATE = mail.AWB_DATE AND
			shp.FLT_DATE = mail.FLT_DATE AND
			shp.FLT_KEY = mail.FLT_KEY 
		WHERE
			mail.FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
			mail.FLT_KEY =  #fltKey# AND
			mail.FLT_TYPE = 'I' AND
			mail.CATALOG = 'TM' AND
			mail.AWB_NO IS NOT NULL AND
			mail.AWB_DATE IS NOT NULL AND mail.DEST = #dest#  AND
			(CASE WHEN LENGTH(mail.TAG_NO) = 29 THEN SUBSTR(mail.TAG_NO,17,4) ELSE mail.TAG_NO END) = (CASE WHEN LENGTH(mail.TAG_NO) = 29 THEN SUBSTR(#tagNo#,17,4) ELSE #tagNo# END) AND mail.AWB_NO like '%M%'
			AND rownum = 1
	</select>  
	
	<select id="getCarDetailsForTransitMailTagWAWB" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO" resultClass="cargo.cms.imprt.bo.TransitMailCarBO">
		select 
		mail.AWB_NO as awbNo,
		TO_CHAR(mail.AWB_DATE,'DDMONYY') as awbDate,
		SUBSTR(mail.AWB_NO,1,3) as awbPrefix
     	FROM 
			IMP_XPS_OBC_MAIL mail			
		WHERE
			mail.FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
			mail.FLT_KEY =  #fltKey# AND
			mail.FLT_TYPE = 'I' AND
			mail.CATALOG = 'TM' AND
			mail.AWB_NO = #awbNo# AND
			mail.AWB_DATE = to_date(#awbDate#,'DDMONYY') AND
			mail.TAG_NO = #tagNo#
			AND rownum = 1
	</select>   
	 
	
	<insert id="ins_awbstrldtl_transitmailcar" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO" >
	Insert into IMP_AWB_STRG_DTL 
		(TR_NO,
		DOC_LINE_NO,
		CARR_CODE,
		FLT_DATE,
		FLT_KEY,
		AWB_PFX,
		AWB_NO,
		AWB_DATE,
		AWB_DEST,
		ULD_KEY,
		LOC_CODE,
		STRG_PCS,
		STRG_WT,
		LSP_NO,
		DAM_IND,
		CR_USER_ID,
		CR_DATE,
		LM_USER_ID,
		LM_DATE,
		TAG_NO,
		FLT_TYPE,
		TR_STATUS,
		TR_TYPE,
		CHKIN_ULD_KEY)  
	values
	  (IMP_AWB_STRG_DTL_SEQ.NEXTVAL,
	  '1',
	  #carrCode#,
	  to_date(#fltDate#,'DDMONYY'),
	  #fltKey#,
	  substr(#awbNo#,0,3),
	  #awbNo#,
	  to_date(#awbDate#,'DDMONYY'),
	  #dest#,
	  #uldKey#,
	  #locn#,
	  #pcs#,
	  #wt#,
	  #lspNo#,
	  #damInd#,
	  #crUserId#,
	  sysdate,
	  #crUserId#,
	  sysdate,
	  #tagNo#,
	  'I',
	  'A',
	  'TM',
	  #bduldno#)
	</insert>
	
	<!-- Changed for QR :: RANJITH -->
	<!--<update id="upd_awbstrldtl_transitmailcar" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO">
	UPDATE IMP_AWB_STRG_DTL
		SET AWB_PFX = substr(#awbNo#,0,3),
			AWB_NO = #awbNo#,	 
			AWB_DATE= to_date(#awbDate#,'DDMONYY'),
			AWB_DEST=#dest#,
		    LM_USER_ID = #crUserId#,
		    LM_DATE    = sysdate
	     WHERE FLT_DATE = to_date(#fltDate#,'DDMONYY')
			   and FLT_KEY = #fltKey#
		       and TAG_NO =#tagNo#
		       and CHKIN_ULD_KEY =#bduldno# 
    </update>
	
	-->
	
	<select id="getTMCatalogForCAR" parameterClass="cargo.cms.imprt.bo.MaintainCARBO" resultClass="java.lang.String">
		select catalog from imp_car_awb where  AWB_NO = #awbNo#  AND
		TO_CHAR(AWB_DATE,'DDMONYY') = TO_DATE(#awbDate#) 
	</select>	
	
	<select id="getDocCompStatus" parameterClass="cargo.cms.imprt.bo.MaintainCARBO" resultClass="java.lang.String">
		select decode(COUNT(1),1,'Y','N') from flt_opr a, flt_opr_events b where b.tr_no=a.tr_no and a.flt_key=#fltKey# and a.sch_date=#fltDate# and a.flt_type='A'
		AND B.DOC_COMPL_YN = 'Y' AND B.DOC_COMPL_DATE IS NOT NULL AND B.DOC_COMPL_TIME IS NOT NULL
	</select>	
	
	<!-- Changed for QR :: RANJITH -->
	<select id="checkCarCreatedForOtehrFlt" parameterClass="cargo.cms.imprt.bo.MaintainCARBO" resultClass="java.lang.Integer">
		select count(1) from imp_car_shp where  AWB_NO = #awbNo#  AND
		TO_CHAR(AWB_DATE,'DDMONYY') = TO_DATE(#awbDate#) AND
		(flt_key !=#fltKey# AND	TO_CHAR(flt_date,'DDMONYY') != TO_DATE(#fltDate#))		
	</select>
	
<!-- Create Transit Mail CAR :: Santosh D :: End-->
	<select id="checkShcsforLock" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		select count(1) as cnt from mast_spl_hand_code where lock_yn='Y' and code in 
		<iterate property="SHCLIST" open="(" close=")" conjunction=",">
                       #SHCLIST[]#  
        </iterate>    
	</select>
	<update id="sqlUpdateAWBSHCLock" parameterClass="java.util.HashMap">
		UPDATE AWB SET 
				FINALLOCK_IND = #FNLLOCKRQS#,
				shclock_ind = #LOCKRQS#
				WHERE  AWB_NO   = #AWB_NO#
				AND AWB_DATE  = TO_DATE(#AWB_DATE#,'DDMONYY')
	</update>
	<select id="getFinaliseLockIndforCC"  parameterClass="map" resultClass="java.lang.Integer">
		SELECT count(1)	
		FROM awb 	
		WHERE AWB_NO = UPPER(#AWB_NO#) AND
		  AWB_DATE = TO_DATE(#AWB_DATE#,'DDMONYY') and (nvl(SHCLOCK_IND,'N') = 'Y' OR nvl(MLOCK_IND,'N') = 'Y' OR nvl(DCLOCK_IND,'N') = 'Y')
	</select>	
	<update id="sqlUpdateAWBCCLock" parameterClass="java.util.HashMap">
		UPDATE AWB SET 
				FINALLOCK_IND = #FNLLOCKRQS#,
				cclock_ind = #LOCKRQS#
				WHERE  AWB_NO   = #AWB_NO#
				AND AWB_DATE  = TO_DATE(#AWB_DATE#,'DDMONYY')
	</update>
	<select id="getFinaliseLockIndforDC"  parameterClass="map" resultClass="java.lang.Integer">
		SELECT count(1)	
		FROM awb 	
		WHERE AWB_NO = UPPER(#AWB_NO#) AND
		  AWB_DATE = TO_DATE(#AWB_DATE#,'DDMONYY') and (nvl(CCLOCK_IND,'N') = 'Y' OR nvl(MLOCK_IND,'N') = 'Y' OR nvl(SHCLOCK_IND,'N') = 'Y')
	</select>	
	<update id="sqlUpdateAWBDCLock" parameterClass="java.util.HashMap">
		UPDATE AWB SET 
				FINALLOCK_IND = #FNLLOCKRQS#,
				dclock_ind = #LOCKRQS#
				WHERE  AWB_NO   = #AWB_NO#
				AND AWB_DATE  = TO_DATE(#AWB_DATE#,'DDMONYY')
	</update>
	
	
	<select id="getFinaliseLockIndforCCWoPurpose"  parameterClass="map" resultClass="java.lang.Integer">
		SELECT count(1)	
		FROM awb 	
		WHERE AWB_NO = UPPER(#AWB_NO#) AND
		  AWB_DATE = TO_DATE(#AWB_DATE#,'DDMONYY')  and nvl(DCLOCK_IND,'N') = 'Y'
	</select>	
	
	<select id="getFinaliseLockIndforDCWoPurpose"  parameterClass="map" resultClass="java.lang.Integer">
		SELECT count(1)	
		FROM awb 	
		WHERE AWB_NO = UPPER(#AWB_NO#) AND
		  AWB_DATE = TO_DATE(#AWB_DATE#,'DDMONYY')  and nvl(DCLOCK_IND,'N') = 'Y'
	</select>
	
	
	
	
	<select id="checkawbexistsinimpcarawbfordummy"  parameterClass="cargo.cms.imprt.bo.MaintainCARBO" 
		 resultClass="java.lang.Integer">
		SELECT count(1)
		FROM IMP_CAR_AWB 
		WHERE AWB_NO = UPPER(#awbNo#) AND AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
	</select>
	<select id="checkValidForSchCollSRF"   parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO"  resultClass="java.lang.Integer">
		select count(1) from CUST_AGENT_SCH_COLL_TIME where cust_no=#apptdAgtCode# and EFF_TO > TO_CHAR(SYSDATE,'DDMONYY') and purpose='CRG'
	</select>
	<update id="update_srf_awb_dtls_post" parameterClass="java.util.HashMap">	
		UPDATE 
			IMP_SRF_AWB_INVENTORY 
		SET 
			DLV_PCS = NVL(LOCN_PCS, 0), DLV_WT = NVL(LOCN_WT, 0), 
			DLV_DATE= decode(DLV_DATE,null,SYSDATE, DLV_DATE) , DLV_IND='Y', DLV_BY=#userID#, LM_USER_ID=#userID#, 
			LM_DATE=SYSDATE,TR_TYPE='POSRF' 
		WHERE 
			SRF_NO=#srfNo#
	</update>
	<update id="update_imp_srf_hawb_dtls_post" parameterClass="java.util.HashMap">
		UPDATE IMP_SRF_AWB_INVENTORY_DTL  SET DLV_PCS=NVL(LOCN_HAWB_PCS, 0), DLV_WT=NVL(LOCN_HAWB_WT, 0), LM_USER_ID=#userID#, LM_DATE=SYSDATE    
		WHERE SRF_NO=#srfNo#  
	</update>
	<select id="getSRFAwbInvDtls"   resultClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO"  parameterClass="java.util.HashMap">
		SELECT SUM(LOCN_PCS) dlvPcs,SUM(LOCN_WT) dlvWt,AWB_NO awbNo,TO_CHAR(AWB_DATE,'DDMONYY') awbDate,FLT_KEY fltKey,TO_CHAR(FLT_DATE,'DDMONYY') fltDate FROM AWB_INVENTORY 
		WHERE SRF_NO=#srfNo# group by AWB_NO, AWB_DATE, FLT_KEY, FLT_DATE
	</select>
	<update id="update_imp_srf_flt_dtls_post" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
		UPDATE IMP_SRF_FLT SET DLV_PCS = NVL(DLV_PCS, 0) +  NVL(#dlvPcs#, 0) , DLV_WT = NVL(DLV_WT, 0) + NVL(#dlvWt#, 0) , LM_USER_ID=#lmUserId#, LM_DATE=SYSDATE    
		WHERE  SRF_NO=#srfNo# AND  ORIG_FLT_KEY=#fltKey# AND ORIG_FLT_DATE=TO_DATE(#fltDate#,'DDMONYY')
	</update>
	
	<update id="update_imp_srf_flt_dtls_post_fail" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
		UPDATE IMP_SRF_FLT SET 		
		DLV_PCS = NVL(DLV_PCS, 0) +  NVL(#dlvPcs#, 0) , DLV_WT=NVL(DLV_WT, 0) + NVL(#dlvWt#, 0) , LM_USER_ID=#lmUserId#, LM_DATE=SYSDATE    
		WHERE  SRF_NO=#srfNo# AND  length(flt_key) > 7
	</update>
	<select id="getSrfIssuedCount"   resultClass="java.lang.Integer"  parameterClass="java.util.HashMap">
		select count(1) from IMP_SRF s, IMP_SRF_FLT sf 
 	    where s.AWB_NO=#awbNo# AND sf.FLT_KEY=#fltKey# AND sf.FLT_DATE=TO_DATE(#fltDate#,'DDMONYY') AND s.srf_no = sf.srf_no 
 	  	and ((SRF_EXPY_DATE > sysdate and s.STATUS ='ISSUED') or s.STATUS ='POSTED' 
	  	or s.SRF_NO in (select SRF_NO from IMP_CDIF where VOID_USER is null ))
	 </select>	 
	 <insert id="sqlxmlinsertimage" parameterClass="cargo.cms.imprt.bo.ImageXMLParserBO">
		Insert into NO_BAR_CODE_IMAGE
 		(SCANNER_ID,IMAGE_REF_ID,DOC_NO,RECV_DATE_TIME,IMAGE,SEQ_NO) values(#scannerId#,#imageFileName#,#docNumber#,sysdate,#image#,SRF_SEQ.nextval)
	</insert>
	<select id="checkNoBarCodeImageExists" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM NO_BAR_CODE_IMAGE WHERE DOC_NO = #docNo#
	</select>
	<select id="sqlxmlselectimage" parameterClass="cargo.cms.imprt.bo.ImageXMLParserBO" resultClass="cargo.cms.imprt.bo.ImageXMLParserBO">
		 SELECT Image image, TO_CHAR(RECV_DATE_TIME,'DDMONYY') recDateTime,seq_no sequenceId, IMAGE_REF_ID AS imageFileName 
		 FROM NO_BAR_CODE_IMAGE where IMG_TRANSACTION_ID  IS NULL AND SCANNER_ID = #scannerId# order by RECV_DATE_TIME desc
	</select>
	<select id="sqlFetchImageBySequenceId" parameterClass="java.lang.String" resultClass="cargo.cms.imprt.bo.ImageXMLParserBO">
		 SELECT IMAGE AS image, TO_CHAR(RECV_DATE_TIME,'DDMONYY') AS recDateTime,SEQ_NO AS sequenceId 
		 FROM NO_BAR_CODE_IMAGE where IMG_TRANSACTION_ID  IS NULL AND SEQ_NO = #sequenceId#
	</select>
	<select id="sqlScannerList" parameterClass="java.lang.Object" resultClass="cargo.cms.afw.bo.MasterBO">
		SELECT DISTINCT SCANNER_ID AS codeId, UPPER(SCANNER_ID) AS codeDesc FROM NO_BAR_CODE_IMAGE ORDER BY SCANNER_ID ASC
	</select>
	<select id="sqlSrfTranId" parameterClass="cargo.cms.imprt.bo.ImageXMLParserBO" resultClass="java.lang.String">
		SELECT IMG_TRANS_ID FROM IMP_SRF where srf_no = #srfNo#
	</select>
	<select id="sqlCheckSrfVoid" parameterClass="cargo.cms.imprt.bo.ImageXMLParserBO" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM IMP_SRF WHERE SRF_NO = #srfNo# AND VOID_DATE IS NOT NULL AND VOID_USER IS NOT NULL
	</select>
	<delete id="sqlUpdatexmlTranIdimage" parameterClass="cargo.cms.imprt.bo.ImageXMLParserBO">
		DELETE FROM NO_BAR_CODE_IMAGE WHERE SCANNER_ID = #scannerId# AND SEQ_NO = #sequenceId#
	</delete>
	<delete id="sqlDeleteNoBarCodeImageByImageName" parameterClass="cargo.cms.imprt.bo.ImageXMLParserBO">
		DELETE FROM NO_BAR_CODE_IMAGE WHERE IMAGE_REF_ID = #imageFileName#
	</delete>
	<delete id="sqlDeleteNoBarCodeImages" parameterClass="java.lang.String">
		DELETE FROM NO_BAR_CODE_IMAGE WHERE EXISTS(
                                          SELECT FW_IMAGE_STORE.IMG_NAME                                          
                                          FROM FW_IMAGE_STORE,IMP_SRF WHERE 
                                          FW_IMAGE_STORE.IMG_SESSION_ID = IMP_SRF.IMG_TRANS_ID
                                          AND FW_IMAGE_STORE.IMG_NAME = NO_BAR_CODE_IMAGE.IMAGE_REF_ID)
	</delete>
	<update id="sqlupdateimpsrf" parameterClass="cargo.cms.imprt.bo.ImageXMLParserBO">
		  update IMP_SRF SET IMG_TRANS_ID = #transactionId#,tr_type='Dummy' where SRF_NO = #srfNo#
	</update>
	<insert id="insertFWImageData" parameterClass="java.util.HashMap">
		INSERT INTO FW_IMAGE_STORE(IMG_ID,IMG_SIZE,IMG_NAME,IMG_SESSION_ID, IMG_PATH, IMG_UPLOAD_DATE,VIDEO_YN,UPLOAD_STAT) 
		VALUES(FW_IMAGE_SEQ.NEXTVAL,#pImageSize#,#pImageName#,#pRequestTransactionId#,#pImagePath#, CURRENT_TIMESTAMP,'I','P')
	</insert>
	<delete id="sqlxmldeleteimage" parameterClass="cargo.cms.imprt.bo.ImageXMLParserBO" >
		DELETE
			FROM NO_BAR_CODE_IMAGE  
			WHERE	SEQ_NO	 = #sequenceId#			
	</delete>
	<select id="sqlxmlsrfnovalid" parameterClass="cargo.cms.imprt.bo.ImageXMLParserBO" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM IMP_SRF  where srf_no = #srfNo#	
	</select>
	<update id="updateEXPCARForExportRMKINB" parameterClass="cargo.cms.imprt.bo.InBoundULDListBO">	
		UPDATE EXP_CAR
		SET   airl_rmk = #awbAirlRmk#, 
			  wh_rmk = #awbWhRmk#,
			  LM_USER_ID = #userID#, 
			  LM_DATE = sysdate,
			  SPL_CODE1     = #shc1#, 
			  SPL_CODE2     = #shc2#, 
			  SPL_CODE3     = #shc3#,  
			  SPL_CODE4     = #shc4#,  
			  SPL_CODE5     = #shc5#,  
			  SPL_CODE6     = #shc6#,  
			  SPL_CODE7     = #shc7#,  
			  SPL_CODE8     = #shc8#, 
			  SPL_CODE9     = #shc9#  			 
		WHERE AWB_NO = UPPER(#awbNo#)
		      AND  AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY')		      
	</update>	
	
	<select id="sqlquerycheckULDTypeDefinedinULDProfile"  parameterClass="cargo.cms.imprt.bo.ULDCheckInBO"  resultClass="java.lang.String">
		SELECT NVL(count(1), 0) as count
			 FROM ULD_GROUP_TYPE
			  WHERE ULD_TYPE=#uldType#
   	</select>
   	
   	<select id="get_exitchkpost_purpose" parameterClass="java.lang.String"	resultClass="java.lang.String">
	 	select purpose from truck_trip where truck_no=#PARAM# and closed='N'
	 </select>

	<select id="getHdlgModeDetails"  parameterClass="cargo.cms.imprt.bo.ULDCheckInBO"  resultClass="java.lang.Integer">
		SELECT count(1) FROM V_IMP_FLT_ULD_SHC 
		WHERE ULD_KEY = #uldKey# AND FLT_KEY = #flightKey# AND FLT_DATE = TO_DATE(#flightDate#,'DDMONYY') AND SHC='BUP'
	</select>
	
	<select id="getUldFlowChkIn"  parameterClass="cargo.cms.imprt.bo.ULDCheckInBO"  resultClass="java.lang.Integer">
		select count(1) from edi_ffm_msg msg, edi_ffm_shp a,edi_ffm_uld b
    			where a.tr_no=msg.tr_no and a.dest!='HKG' and a.tr_no=b.tr_no and a.udoc_line_no= b.doc_line_no and ffm_status = 'P'
				and b.flt_key =#flightKey# and b.flt_date=TO_DATE(#flightDate#,'DDMONYY') and b.uld_key=#uldKey#
    </select>
     
	<insert id="insertLSPInventoryInCDIF" parameterClass="map">
	 	 insert into LSP_INVENTORY
	 	 ( LSP_NO ,EMPTY_FLG,REF_TR_TYPE,LOC_CODE,REF_TR_NO,REF_TR_EVENT,REF_TR_DATE,REF_DOC_LINE_NO,
	 	 REF_MOV_FROM,REF_LOC_FROM,REF_RMK,TARGET,STRG_DATE,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,LSP_TYPE)
	 	 values(#LSP_NO#,'N',#TR_TYPE#,#LOC_CODE#,#TR_NO#,#TR_EVENT_ID#,SYSDATE,#DOC_LINE_NO#,
	 	 #LOC_CODE#,#LOC_CODE#,'','',SYSDATE,#USER_ID#,SYSDATE,#USER_ID#,SYSDATE,substr(#LSP_NO#,0,1))
	 </insert>
	<procedure id="imp_srf_nls_trt">
		{call alter_nls_territory()}
	</procedure>
	<select id="checkCarShpExists" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		select count(1) from IMP_CAR_SHP where AWB_NO = #awbNo# and AWB_DATE=TO_DATE(#awbDate#,'DDMONYY') AND flt_key=#fltKey# AND flt_date=TO_DATE(#fltDate#,'DDMONYY')
	</select>
	<select id="checkCarAwbExists" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		select count(1) from IMP_CAR_AWB where AWB_NO = #awbNo# and AWB_DATE=TO_DATE(#awbDate#,'DDMONYY')
	</select>
	<select id="checkAwbExistsforOBC" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		select count(1) from AWB where AWB_NO = #awbNo# and AWB_DATE=TO_DATE(#awbDate#,'DDMONYY')
	</select>
	<update id="update_awb_deletecar" parameterClass="cargo.cms.imprt.bo.MaintainCARBO">
	   UPDATE AWB SET
		LM_DATE = SYSDATE,
		MANIFEST_PCS = MANIFEST_PCS-#manifestPcs#, 
		MANIFEST_WT = MANIFEST_WT-#manifestWt# ,
		<isEqual property="updAwbPcWt" compareValue="Y">
		PCS = PCS-#manifestPcs#, 
		WT = WT-#manifestWt# ,
	    </isEqual>
		LM_USER_ID = #lmUserId#
		WHERE
		AWB_NO = #awbNo#  AND
		AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
 	</update>
	
	<update id="updateDlvReturnSRF" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
		UPDATE IMP_SRF_FLT SET DLV_PCS = NVL(#dlvPcs#, 0) , DLV_WT = NVL(#dlvWt#, 0), LM_USER_ID=#lmUserId#, LM_DATE=SYSDATE    
		WHERE  SRF_NO=#srfNo#
	</update>
	
 	<update id="update_car_awb_deletecar" parameterClass="cargo.cms.imprt.bo.MaintainCARBO">
		UPDATE IMP_CAR_AWB SET
		LM_DATE = SYSDATE,
		AWB_PCS = AWB_PCS-#manifestPcs#, 
		AWB_WT = AWB_WT-#manifestWt# ,
		BULK_PCS =  BULK_PCS-#manifestPcs#,
		BULK_WT = BULK_WT-#manifestWt#,
		LM_USER_ID = #lmUserId#
		WHERE
		AWB_NO = #awbNo#  AND
		AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
	</update>
	<delete id="delete_CAR_physical_Awb" parameterClass="cargo.cms.imprt.bo.MaintainCARBO" >
		<![CDATA[
		 DELETE	FROM AWB WHERE AWB_NO = #awbNo# AND AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')  			
		]]>
	</delete>
	<select id="validatePmanExistsforDelCar"  parameterClass="cargo.cms.imprt.bo.MaintainCARBO"  resultClass="java.lang.Integer">
		select COUNT(1) from EXP_PMANIFEST_AWB where awb_no = #awbNo# AND awb_date = TO_DATE(#awbDate#,'DDMONYY')
	</select>
	<select id="validatePmanTarExistsforDelCar"  parameterClass="cargo.cms.imprt.bo.MaintainCARBO"  resultClass="java.lang.Integer">
		select COUNT(1) from exp_pman_tarmac_awb where awb_no = #awbNo# AND awb_date = TO_DATE(#awbDate#,'DDMONYY')
	</select>
	<select id="validateFWBExistsforDelCar" parameterClass="cargo.cms.imprt.bo.MaintainCARBO" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM EDI_FWB WHERE AWB_NO=#awbNo# AND AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
	</select>
	<select id="sqlgetcounttoppalletexists"  parameterClass="java.lang.String"  resultClass="java.lang.Integer">
			SELECT COUNT(1) FROM ULD_INVENTORY WHERE BASE_PLT =(SELECT BASE_PLT FROM ULD_INVENTORY WHERE ULD_KEY = #PARAM#)	
   	</select>
   	<update id="sqlUpdateBasePalletAmdStrg" parameterClass="cargo.cms.uld.bo.ULDEICBO">
		UPDATE ULD_INVENTORY 
		SET 
		   LM_USER_ID = #userId#, 
		   LM_DATE = SYSDATE,
		   REF_TR_NO = #uldKey#,
		   REF_DOC_LINE_NO = '1',
		   REF_TR_TYPE = 'AU',
		   REF_TR_DATE = SYSDATE, 
		   REF_OUT_CARR = #uldCarr#, 
		   TR_TYPE = #trtype#,
		   EIC_FLG=nvl(#eicFLG#,'N')
		WHERE uld_key =(SELECT BASE_PLT FROM ULD_INVENTORY WHERE ULD_KEY= #uldKey#)
	</update>
    <select id="find_srf_uld_lsp_lst" parameterClass="cargo.cms.imprt.bo.PostSRFSearchBO" resultClass="cargo.cms.imprt.bo.PostSRFSearchBO">
   		select LSP_NO lspNo,ULD_KEY uldKey from awb_inventory where srf_no=#srfNo#
   </select>
   	<update id="updateLocCodeULDInvTag" parameterClass="map">
		UPDATE ULD_INVENTORY SET 
		LOC_CODE = #locCode#, 
		TR_TYPE = #trtype#,
		REF_TR_TYPE = #refTrType#,
		REF_TR_EVENT = #refTrEvent#,
		LM_USER_ID = #userId#, 
	   	LM_DATE = SYSDATE
		where ULD_KEY = #uldKey#
	</update>
	
	<update id="updateLocCodeLSPInvTag" parameterClass="map">
		UPDATE LSP_INVENTORY SET 
		LOC_CODE = #locCode#,
		REF_TR_TYPE = #refTrType#,
		REF_TR_EVENT = #refTrEvent#,
		LM_USER_ID = #userId#, 
	   	LM_DATE = SYSDATE
		where LSP_NO = #lspNo#
	</update>
	<update id="update_IMP_ULD_LIST_TCCL" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO">
		UPDATE IMP_ULD_LIST SET HANDLING_MODE = #handlMode# WHERE FLT_KEY = #fltKey# AND FLT_DATE = TO_DATE(#fltDate#, 'DDMONYY') AND ULD_KEY = #uldKey#
	</update>
	<select id="getAWB_BUP_PCWT_TCCL" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
        	select BUP_PCS, BUP_WT, CAR_CREATED from IMP_CAR_SHP where AWB_NO =#AWB_NO#  and AWB_DATE=#AWB_DATE# and FLT_KEY=#FLT_KEY# and FLT_DATE=#FLT_DATE#
    </select>
    <update id="upd_blkpcwt_imp_shp_tccl" parameterClass="java.util.HashMap">
		UPDATE IMP_CAR_SHP SET
			LM_USER_ID =  #USER_ID#, 
			LM_DATE  = SYSDATE 
			<isEqual property="awbType" compareValue="T">
		   		<isEqual property="carCreated" compareValue="Y">
		   			,PPK_TYPE = case when (manifest_pcs-#totalBlkPcs#) = 0 then 'B' else case when #totalBlkPcs#=0 then 'P' else 'M' end end,
		   			bulk_pcs = #totalBlkPcs#,
		   			bulk_wt = #totalBlkWt#,
		   			bup_pcs = manifest_pcs - #totalBlkPcs#,
		   			bup_wt = manifest_wt - #totalBlkWt# 
			   	</isEqual>	
		   	</isEqual>
		WHERE AWB_NO  = #AWB_NO# 
			AND AWB_DATE  = TO_DATE(#AWB_DATE#,'DDMONYY') 
			AND FLT_DATE  = TO_DATE(#FLT_DATE#,'DDMONYY')
			AND FLT_KEY  = #FLT_KEY#
	</update>
	<update id="upd_blkpcwt_imp_awb_tccl" parameterClass="java.util.HashMap">
		UPDATE IMP_CAR_AWB SET
			LM_USER_ID =  #USER_ID#,
			LM_DATE  = SYSDATE
			<isEqual property="awbType" compareValue="T">
			   	<isEqual property="carCreated" compareValue="Y">
			   		,PPK_TYPE = case when (awb_pcs-#totalBlkPcs#) = 0 then 'B' else case when #totalBlkPcs#=0 then 'P' else 'M' end end,
		   			bulk_pcs = #totalBlkPcs#,
		   			bulk_wt = #totalBlkWt#,
		   			bup_pcs = awb_pcs-#totalBlkPcs#,
		   			bup_wt = awb_Wt-#totalBlkWt# 
				</isEqual>
		   	</isEqual>
		WHERE  AWB_DATE = TO_DATE(#AWB_DATE#,'DDMONYY') AND     
			AWB_NO   = #AWB_NO#
	</update>
	<select id="check_record_imp_uld_list_ffm" parameterClass="cargo.cms.imprt.bo.InBoundULDListBO" resultClass="java.lang.Integer">
		  select count(1) from V_FFM_DTL  
		  where FLT_KEY = #flightKey# and FLT_DATE = TO_DATE(#arrDate#,'DDMONYY') and ULD_KEY = #uldKey#
	</select>	
	<select id="sqlgetLocCodeforEmptyULD"  parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT LOC_CODE FROM ULD_INVENTORY WHERE ULD_KEY = #PARAM# and LOC_CODE IS NOT NULL AND EMPTY_FLG='Y'
	</select>
	<select id="sqlgetLocCodeforEmptyLSP"  parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT LOC_CODE FROM LSP_INVENTORY WHERE LSP_NO = #lspNo# and LOC_CODE IS NOT NULL AND EMPTY_FLG='Y'
	</select>
	
	<!-- HHT RestoreAwbStorage :: Bug Fix :: Ranjith-->
	<select id="getAwbStoragePcWt"  parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT LOCN_PCS||'/'||LOCN_WT FROM AWB_INVENTORY WHERE SEQ_NO = #seqNo# 
	</select>
	<!--  HHT RestoreAwbStorage :: Bug Fix :: Ranjith-->
	 <update id="imp_awbstrgdtl_updcarawb" parameterClass="map">
	 	UPDATE IMP_CAR_AWb 
		SET 
			WH_RMK = #rmk#,  
			LM_USER_ID = #userID#,
			LM_DATE = SYSDATE
		WHERE 	
				AWB_NO = UPPER(#awbNo#) AND
				AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') 
	</update>
	
	<select id="fsuBrkdnPcsEqualToManifestPcs"  parameterClass="cargo.cms.imprt.bo.CarShpBO" resultClass="java.lang.Integer">
		select count(1) from IMP_CAR_SHP WHERE ( NVL(MANIFEST_PCS,0) = NVL(RECD_PCS,0) AND NVL(MANIFEST_WT,0) = NVL(RECD_WT,0) ) AND AWB_NO = #awbNo# AND AWB_DATE = to_date(#awbDate#,'DDMONYY') 
		AND FLT_KEY = #fltKey# AND FLT_DATE = to_date(#fltDate#,'DDMONYY')
	</select>
	
	<select id="fsuBrkdnPcsEqualToManifestPcsHht"  parameterClass="cargo.cms.imprt.bo.HHTCreateAwbBO" resultClass="java.lang.Integer">
		select count(1) from IMP_CAR_SHP WHERE ( NVL(MANIFEST_PCS,0) = NVL(RECD_PCS,0) AND NVL(MANIFEST_WT,0) = NVL(RECD_WT,0) ) AND AWB_NO = #awbNo# AND AWB_DATE = to_date(#awbDate#,'DDMONYY') 
		AND FLT_KEY = #flightKey# AND FLT_DATE = to_date(#flightDate#,'DDMONYY')
	</select>
	
	
	<select id="sqlFetchFWImageAlreadyExists" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM FW_IMAGE_STORE WHERE IMG_SESSION_ID = #pRequestTransactionId# AND IMG_NAME = #pImageName#		
	</select>
	
	<delete id="deleteFromGTTable" parameterClass="java.lang.String">
	DELETE FROM GT_SRF_CHARGES
	</delete>
	<select id="getUldLSPdetailsforDelCar"  parameterClass="cargo.cms.imprt.bo.MaintainCARBO"  resultClass="cargo.cms.imprt.bo.MaintainCARBO">
	   select uld_key uldNo, lsp_no lspNo from awb_inventory WHERE AWB_NO = #awbNo#  AND  AWB_DATE  =  TO_DATE(#awbDate#,'DDMONYY') AND FLT_KEY = #fltKey# AND FLT_DATE = TO_DATE(#fltDate#,'DDMONYY')
	 </select>
	
	 <select id="checkULDAssignedtoExportFlt"  parameterClass="java.lang.String"  resultClass="java.lang.Integer">
	   SELECT COUNT(1) FROM ULD_INVENTORY WHERE ULD_KEY = #uldNo# AND FLT_KEY IS NOT NULL AND FLT_DATE IS NOT NULL AND FLT_TYPE = 'E'
	 </select>
	 
	 <select id="getPcWtFromCARSHP" parameterClass="java.util.HashMap" resultClass="java.util.HashMap" >
		<![CDATA[
 			select awb_no AWB_NO,to_char(awb_date,'DDMONYY') AWB_DATE ,flt_key FLT_KEY,to_char(flt_date,'DDMONYY') FLT_DATE,recd_pcs RECD_PC,recd_wt RECD_WT,manifest_pcs MAN_PC,manifest_wt MAN_WT,lm_user_id LM_USER_ID 
 			from imp_car_shp 
 			where AWB_NO   = #awbNo# AND
       		AWB_DATE  = TO_DATE(#awbDate#,'DDMONYY') AND
       		FLT_DATE  = TO_DATE(#fltDate#,'DDMONYY') AND
       		FLT_KEY   = #fltKey#
		]]>
	</select>
	
<!-- ###################### ADDED BY Yugandhar ON 27-11-2012 FOR IF ULDs ShipmentsList Starts Here ########################### -->
<select id="fetchIFULDInBoundFltList" parameterClass="cargo.cms.imprt.bo.IFULDShipmentListBO" resultClass="cargo.cms.imprt.bo.IFULDShipmentListBO" >
		select flt.flt_key fltKey, to_char(flt.sch_date,'DDMONYY') fltDate, 
		pkg_common.get_flt_final_ata_eta_sta(flt.flt_key,flt.sch_date,'A','DD') etaAta, 
		(select code_desc from mast_code_dtl where code_type = 'CGO_ACFT_TYPE' and  code = flt.cgo_acft_type) cgoAcftType,
		FUN_GET_ALLOTMENTS(flt.flt_key,  to_char(flt.sch_date,'DDMONYY'), 'ALL_ULD') inbdUld,
		FUN_GET_ALLOTMENTS(flt.flt_key,  to_char(flt.sch_date,'DDMONYY'), 'IF_ULD') ifUld,
		FUN_GET_ALLOTMENTS(flt.flt_key,  to_char(flt.sch_date,'DDMONYY'), 'IF_CHK_IN') ifchkin,
		FUN_GET_ALLOTMENTS(flt.flt_key,  to_char(flt.sch_date,'DDMONYY'), 'IF_BD') ifBD,
		FUN_GET_ALLOTMENTS(flt.flt_key,  to_char(flt.sch_date,'DDMONYY'), 'IF_SHP_IMP') ifShpImp, 
		FUN_GET_ALLOTMENTS(flt.flt_key,  to_char(flt.sch_date,'DDMONYY'), 'IF_EST_BD_BU_IMP') estBdBuImp, 
		FUN_GET_ALLOTMENTS(flt.flt_key,  to_char(flt.sch_date,'DDMONYY'), 'IF_LST_BD_BU_IMP') lstBdBuImp, 
		(SELECT WH_AREA FROM MAST_WH_AREA WHERE MODULE_YN = 'Y' and WH_AREA = flt.flt_module1) fltModule, flt.flt_module1 fltModuleCode,
		decode(FLTEVENTS.DDT_FINALISE_DATE,null,'N','Y')  finalizedInd
		from flt_opr flt
		join FLT_OPR_EVENTS FLTEVENTS on FLT.FLT_KEY = FLTEVENTS.FLT_KEY and FLT.SCH_DATE = FLTEVENTS.SCH_DATE and FLTEVENTS.flt_type ='A'
		join (select FLT_KEY , FLT_DATE from  V_UNFIN_DDT_DTL 
		       where DDT_STATUS = 'P' 
				<isNotEmpty property="fltKey" >
				and FLT_KEY = #fltKey#
				</isNotEmpty>
				<isNotEmpty property="fltDate" >	 
				and  FLT_DATE = #fltDate#
				</isNotEmpty>
				<isNotEmpty property="cntgFltKey" >
				  and SHP_CNTG_FLT_KEY = #cntgFltKey#
				</isNotEmpty>
				<isNotEmpty property="cntgFltKey" >
					<isNotEmpty property="cntgFltDate" >	 
					  and  SHP_CNTG_FLT_DATE = #cntgFltDate#
					</isNotEmpty>
				</isNotEmpty>
				
		      union
		      select   ffmMSG.flt_key flt_key , ffmMSG.FLT_DATE FLT_DATE
		      from EDI_FFM_MSG ffmMSG, EDI_FFM_ULD ffmULD , edi_ffm_shp ffmshp 
		      where ffmMSG.FFM_STATUS = 'P' and ffmMSG.TR_NO = ffmULD.TR_NO and ffmMSG.TR_NO = ffmshp.TR_NO and ffmULD.Doc_line_no = ffmshp.uDoc_line_no 
		      and FFMSHP.DEST != 'HKG'        
				<isNotEmpty property="fltKey" >
				and FFMMSG.FLT_KEY = #fltKey# 
				</isNotEmpty>
				<isNotEmpty property="fltDate" >	 
				and  FFMMSG.FLT_DATE = #fltDate#
				</isNotEmpty>
				<isNotEmpty property="cntgFltKey" >
				 and ffmULD.CNTG_FLT_Carr1||ffmULD.CNTG_FLT_No1 = #cntgFltKey#
				</isNotEmpty>
				<isNotEmpty property="cntgFltKey" >
					<isNotEmpty property="cntgFltDate" >	 
					 and  ffmULD.CNTG_FLT_DATE1 = #cntgFltDate#
					</isNotEmpty>
				</isNotEmpty>
          ) FFMDDT on FFMDDT.FLT_KEY = flt.FLT_KEY and FFMDDT.FLT_DATE = flt.SCH_DATE        
		where flt.flt_type ='A'
		<isNotEmpty property="fltKey" >
		and flt.FLT_KEY = #fltKey#  
		</isNotEmpty>
		<isNotEmpty property="fltDate" >	 
		and flt.SCH_DATE = #fltDate#
		</isNotEmpty>
		<isNotEmpty property="cgoAcftType" >	 
		and flt.CGO_ACFT_TYPE = #cgoAcftType# 
		</isNotEmpty>
		<isNotEmpty property="fltModule" >	 
		and flt.flt_module1 = #fltModule# 
		</isNotEmpty>
		<isNotEmpty property="fromEta" >
		<isNotEmpty property="toEta" >	 
		and NVL(NVL(flt.EST_TIME, flt.ACT_TIME),  flt.SCH_TIME) between #fromEta# and #toEta#
		</isNotEmpty>
		</isNotEmpty>
		<isEmpty property="fltCarr">
				<isNotEmpty property="loginCarrier">
				   AND ( flt.carr_code = #loginCarrier#
                        OR  flt.carr_code IN (SELECT CARR_CODE FROM MAST_CARR_GRP 
                        WHERE GRP_CARR_CODE  = #loginCarrier#))             
            	</isNotEmpty>
            </isEmpty>	
</select>
<select id="fetchIFULDOutBoundFltList" parameterClass="cargo.cms.imprt.bo.IFULDShipmentListBO" resultClass="cargo.cms.imprt.bo.IFULDShipmentListBO" >
		select flt.flt_key fltKey, to_char(flt.sch_date,'DDMONYY') fltDate, flt.carr_code fltCarr, flt.flt_No fltNo,
		FFMDDT.cntgFltKey cntgFltKey, to_char(FFMDDT.cntgFltDate,'DDMONYY')  cntgFltDate,
		pkg_common.get_flt_final_ata_eta_sta(flt.flt_key,flt.sch_date,'D','DD') etd,
		(select code_desc from mast_code_dtl where code_type = 'CGO_ACFT_TYPE' and  code = flt.cgo_acft_type) cgoAcftType, flt.cgo_acft_type cgoAcfTypeCode,
		FUN_GET_ALLOTMENTS_EXP(flt.flt_key,to_char(flt.sch_date,'DDMONYY'),'', 'IF_EST_BD_BU_EXP') estBdBuExp, 
		FUN_GET_ALLOTMENTS_EXP(flt.flt_key,to_char(flt.sch_date,'DDMONYY'),'', 'IF_LST_BD_BU_EXP') lstBdBuExp, 
		(SELECT WH_AREA_DESC FROM MAST_WH_AREA WHERE MODULE_YN = 'Y' and WH_AREA = flt.flt_module1) fltModule, flt.flt_module1 fltModuleCode 
		from flt_opr flt
		join FLT_OPR_EVENTS FLTEVENTS on FLT.FLT_KEY = FLTEVENTS.FLT_KEY and FLT.SCH_DATE = FLTEVENTS.SCH_DATE and flt.tr_No = FLTEVENTS.tr_No
		join (select SHP_CNTG_FLT_KEY cntgFltKey, SHP_CNTG_FLT_DATE cntgFltDate from  V_UNFIN_DDT_DTL 
		        where DDT_STATUS = 'P'	
				<isNotEmpty property="expFltKey" >
				  	and SHP_CNTG_FLT_KEY = #expFltKey#
				</isNotEmpty>
				<isNotEmpty property="expFltDate" >	 
				  	and  SHP_CNTG_FLT_DATE = #expFltDate# 
				</isNotEmpty>				
				group by SHP_CNTG_FLT_KEY , SHP_CNTG_FLT_DATE 
		       ) FFMDDT on FFMDDT.cntgFltKey = flt.FLT_KEY and FFMDDT.cntgFltDate = flt.SCH_DATE       
		join (select SHP_CNTG_FLT_KEY cntgFltKey, SHP_CNTG_FLT_DATE cntgFltDate from  V_UNFIN_DDT_DTL 
		        where DDT_STATUS = 'P' 
				<isNotEmpty property="impFltKey" >
				and FLT_KEY = #impFltKey#
				</isNotEmpty>
				<isNotEmpty property="impFltKey" >
					<isNotEmpty property="impFltDate" >	 
					and  FLT_DATE = #impFltDate#
					</isNotEmpty>
				</isNotEmpty>		
				group by  SHP_CNTG_FLT_KEY , SHP_CNTG_FLT_DATE 	 
       ) DDTIMP on DDTIMP.cntgFltKey = flt.FLT_KEY and DDTIMP.cntgFltDate = flt.SCH_DATE          
		where exists (select null from v_unfin_ddt_dtl where SHP_CNTG_FLT_KEY = FLT.FLT_KEY and SHP_CNTG_FLT_DATE = FLT.SCH_DATE)
		and flt.flt_type ='D'
		<isNotEmpty property="cgoAcftType" >	 
		and flt.CGO_ACFT_TYPE = #cgoAcftType# 
		</isNotEmpty>
		<isNotEmpty property="fltModule" >	 
		and flt.flt_module1 = #fltModule# 
		</isNotEmpty>
		<isNotEmpty property="fromEta" >
		<isNotEmpty property="toEta" >	 
		and NVL(NVL(flt.EST_TIME, flt.ACT_TIME),  flt.SCH_TIME) between #fromEta# and #toEta#
		</isNotEmpty>
		</isNotEmpty>
		<isEmpty property="fltCarr">
				<isNotEmpty property="loginCarrier">
				   AND ( flt.carr_code = #loginCarrier#
                        OR  flt.carr_code IN (SELECT CARR_CODE FROM MAST_CARR_GRP 
                        WHERE GRP_CARR_CODE  = #loginCarrier#))             
            	</isNotEmpty>
            </isEmpty>
</select>
<select id="fetchIFULDOutBoundFltList_unldgList" parameterClass="cargo.cms.imprt.bo.IFULDShipmentListBO" resultClass="cargo.cms.imprt.bo.IFULDShipmentListBO" >
		select flt.flt_key fltKey, to_char(flt.sch_date,'DDMONYY') fltDate, flt.carr_code fltCarr, flt.flt_No fltNo, fltLeg.OFF_POINT unldgPt, 
		FFMDDT.cntgFltKey cntgFltKey, to_char(FFMDDT.cntgFltDate,'DDMONYY')  cntgFltDate,
		to_char(nvl(nvl(flt.act_time, flt.est_time), flt.sch_time),'0000') etd,
		(select code_desc from mast_code_dtl where code_type = 'CGO_ACFT_TYPE' and  code = flt.cgo_acft_type) cgoAcfType, flt.cgo_acft_type cgoAcfTypeCode,
		FUN_GET_ALLOTMENTS_EXP(flt.flt_key,   to_char(flt.sch_date,'DDMONYY'),fltLeg.OFF_POINT, 'EST_BD_BU_EXP') estBdBuExp, 
		FUN_GET_ALLOTMENTS_EXP(flt.flt_key,   to_char(flt.sch_date,'DDMONYY'),fltLeg.OFF_POINT, 'LST_BD_BU_EXP') lstBdBuExp, 
		(SELECT WH_AREA_DESC FROM MAST_WH_AREA WHERE MODULE_YN = 'Y' and WH_AREA = flt.flt_module1) fltModule, flt.flt_module1 fltModuleCode, 
		FUN_GET_ALLOTMENTS_EXP(flt.flt_key,  to_char(flt.sch_date,'DDMONYY'), fltLeg.OFF_POINT, 'ALLT_EXP') allt,
		FUN_GET_ALLOTMENTS_EXP(flt.flt_key,  to_char(flt.sch_date,'DDMONYY'), fltLeg.OFF_POINT, 'IF_SHP_EXP') ifShpExp, 
		FUN_GET_ALLOTMENTS_EXP(flt.flt_key,  to_char(flt.sch_date,'DDMONYY'), fltLeg.OFF_POINT, 'IF_SHP_COMPL_EXP') ifShpComplExp,
		FUN_GET_ALLOTMENTS_EXP(flt.flt_key,  to_char(flt.sch_date,'DDMONYY'), fltLeg.OFF_POINT, 'IF_SHP_BU_EXP') ifShpBuExp
		from flt_opr flt
		join FLT_OPR_EVENTS FLTEVENTS on FLT.FLT_KEY = FLTEVENTS.FLT_KEY and FLT.SCH_DATE = FLTEVENTS.SCH_DATE and flt.tr_No = FLTEVENTS.tr_No
		join flt_opr_leg fltLeg on fltLeg.flt_type ='D' and FLT.FLT_KEY = fltLeg.FLT_KEY and FLT.SCH_DATE = fltLeg.SCH_DATE
		join (select SHP_CNTG_FLT_KEY cntgFltKey, SHP_CNTG_FLT_DATE cntgFltDate, SHP_UNLDG_PT unldgPt from  V_UNFIN_DDT_DTL 
		        where DDT_STATUS = 'P'
				<isNotEmpty property="cntgFltKey" >
				  	and SHP_CNTG_FLT_KEY = #cntgFltKey#
				</isNotEmpty>
				<isNotEmpty property="cntgFltDate" >	 
				  	and  SHP_CNTG_FLT_DATE = #cntgFltDate# 
				</isNotEmpty>
				group by SHP_CNTG_FLT_KEY , SHP_CNTG_FLT_DATE , SHP_UNLDG_PT
				       
		       ) FFMDDT on FFMDDT.cntgFltKey = fltLeg.FLT_KEY and FFMDDT.cntgFltDate = fltLeg.SCH_DATE   and  FFMDDT.unldgPt = fltLeg.OFF_POINT
		where exists (select null from V_UNFIN_DDT_DTL where SHP_CNTG_FLT_KEY = FLT.FLT_KEY and SHP_CNTG_FLT_DATE = FLT.SCH_DATE)
		and flt.flt_type ='D' and fltLeg.OFF_POINT != 'HKG'
		
		<isNotEmpty property="searchUnldgPt" >	 
		  	and  fltLeg.OFF_POINT = #searchUnldgPt# 
		</isNotEmpty>
</select>

<select id="fetchIFULDIndBoundShpList" parameterClass="cargo.cms.imprt.bo.IFULDShipmentListBO" resultClass="cargo.cms.imprt.bo.IFULDShipmentListInOutAWBBO" >
		<![CDATA[ 
		select a.* from (
		select ddt.awb_no awbNo,
		SUBSTR(TRIM(ddt.awb_no),1,3)||'-'||SUBSTR(TRIM(ddt.awb_no),4) awbNoDisp,
		ddt.awb_Date awbDate, 
		nvl(ddt.ULD_KEY,'BULK')  uldKey,
		NVL(DDT.ULD_KEY,'BULK') ||'-'|| DDT.AWB_NO  uldKeyAwbNo,
		ULDFFM.PCS ttlUldPcs,
		ULDFFM.WT ttlUldWt,
		case when DDT.ULD_KEY is not null then (select LOC_CODE from ULD_INVENTORY where ULD_KEY = DDT.ULD_KEY) else null end as locn,
    	case when (select count(1) from imp_uld_list where FLT_KEY = ffm.flt_key and ffm.flt_Date = FLT_DATE
            and ULD_KEY = ffm.ULD_KEY and HANDLING_MODE in ('NBK','PPK')) > 0 then 'Y' 
             else null end as noBreak, 
		(select WH_RMK from IMP_ULD_LIST where FLT_KEY = DDT.FLT_KEY  and FLT_DATE =DDT.FLT_DATE and ULD_KEY = DDT.ULD_KEY) as uldWhRmk,   
		(select AIRL_RMK from IMP_ULD_LIST where FLT_KEY = DDT.FLT_KEY  and FLT_DATE = DDT.FLT_DATE and ULD_KEY = DDT.ULD_KEY) as uldAirlRmk,     
		(SELECT STRAGG(STRINGDELIM(SHC, ',')) 
			    	FROM (SELECT DISTINCT SHC, ULD_KEY, FLT_KEY,FLT_DATE, AWB_NO, AWB_DATE,PRIORITY FROM V_IMP_FLT_ULD_SHC ORDER BY PRIORITY DESC
			      	) WHERE AWB_NO = NVL(ffm.awb_No,ddt.awb_No) AND AWB_DATE = NVL(ffm.awb_date,ddt.awb_date)
			      	AND FLT_KEY = nvl(ffm.flt_key,ddt.flt_key) AND FLT_DATE = nvl(ffm.flt_Date,ddt.flt_Date)
			      	and nvl(ULD_KEY,'BULK') = nvl(nvl(ffm.ULD_KEY,ddt.ULD_KEY),'BULK')
		                )  shc,
		NVL(AWB.ORIG,'') org, AWB.DEST dest, NVL(AWB.PCS,0) awbPcs,NVL(AWB.WT,0) awbWt, NVL(FFM.PCS,0) PCS,NVL(FFM.WT,0) WT,ffm.shmpt_code shpmCode,
		(select sum(STRG_PCS)||'/'|| sum(STRG_WT) from  IMP_AWB_STRG_DTL 
        where  AWB_NO = DDT.AWB_NO and AWB_DATE = TO_DATE(DDT.AWB_DATE,'DDMONYY')
          and  chkin_ULD_KEY = DDT.ULD_KEY group by AWB_NO,AWB_DATE,chkin_uld_key ) as bdPcWt, 
		(select sum(DAM_PC_DECL)||'/'|| sum(DAM_WT_DECL) from  IMP_AWB_STRG_DTL 
        where  AWB_NO = DDT.AWB_NO and AWB_DATE = TO_DATE(DDT.AWB_DATE,'DDMONYY')
          and chkin_uld_key = ddt.ULD_KEY group by AWB_NO,AWB_DATE,chkin_uld_key ) as damPcWt,   
    	(SELECT V.CC_CODE FROM V_CST_IMP_CC_CODE_AWB V
        WHERE V.FLT_KEY =  DDT.FLT_KEY AND V.FLT_DATE = DDT.FLT_DATE  AND V.AWB_NO = ddt.awb_no
        AND NVL(V.HAWB_NO, '000000000000000000') =  '000000000000000000' AND ROWNUM = 1)  ccode,    
		ddt.flt_key fltKey , ddt.flt_Date  fltDate,
    	DECODE((select count(1) from awb where awb_no = ddt.awb_no and awb_date=ddt.awb_date and rownum=1),0,(select rmk from awb_rmk where awb_no=ddt.awb_no and awb_date=ddt.awb_date  and rownum=1),(select AIRLN_RMK from awb where awb_no = ddt.awb_no and awb_date=ddt.awb_date  and rownum=1)) AS awbAirlRmk,  
		DECODE((select count(1) from imp_car_awb where awb_no =ddt.awb_no and awb_date=ddt.awb_date  and rownum=1),0,(select awb_rmk from awb where awb_no=ddt.awb_no and awb_date=ddt.awb_date  and rownum=1),(select WH_RMK from imp_car_awb where awb_no = ddt.awb_no and awb_date=ddt.awb_date and rownum=1)) AS awbWhRmk,
	    ddt.CNTG_FLT_KEY cntgFltKey, ddt.SHP_CNTG_FLT_DATE cntgFltDate,
		decode(ddt.SHP_CNTG_FLT_KEY,null,'',PKG_COMMON.get_flt_carr(ddt.SHP_CNTG_FLT_KEY)) cntgFltCarr,
		REPLACE(ddt.SHP_CNTG_FLT_KEY, PKG_COMMON.get_flt_carr(ddt.SHP_CNTG_FLT_KEY), '') cntgFltNo,
		(select decode(FLTOPR.EST_TIME ,null,SUBSTR(TRIM(TO_CHAR(lpad(FLTOPR.SCH_TIME,4,0))),0,2)|| ':'|| SUBSTR(TRIM(TO_CHAR(lpad(FLTOPR.SCH_TIME,4,0))),3,4),SUBSTR(TRIM(TO_CHAR(lpad(FLTOPR.EST_TIME,4,0))),0,2)|| ':'|| SUBSTR(TRIM(TO_CHAR(lpad(FLTOPR.EST_TIME,4,0))),3,4)) 
		   as etd from FLT_OPR FLTOPR WHERE FLTOPR.FLT_KEY = ddt.SHP_CNTG_FLT_KEY and FLTOPR.SCH_DATE = ddt.SHP_CNTG_FLT_DATE  and FLTOPR.flt_type ='D')as etd,
		FUN_GET_FLT_TDIFF_TRFYPE(ddt.SHP_CNTG_FLT_KEY, ddt.SHP_CNTG_FLT_DATE,#fltKey#,#fltDate#,'TIME_DIFF' ) timeDiifferance,
		FUN_GET_FLT_TDIFF_TRFYPE_HH_MI(ddt.SHP_CNTG_FLT_KEY, ddt.SHP_CNTG_FLT_DATE,#fltKey#,#fltDate#,'TIME_DIFF' ) timeDiifferanceHhMi,
      	ddt.SHP_TRF_TYPE trfType, ddt.BRK_BULK brkBulk,
		ddt.UNLDG_PT  uldUnldgPt,
		ddt.SHP_UNLDG_PT shpUnldgPt,
    	ddt.SHP_TRF_PC trfPcs, ddt.SHP_TRF_WT trfWt,
    	(select bulkPcs ||'/'||  bulkWt from 
             	  (select FLT_KEY, FLT_DATE, AWB_NO, AWB_DATE, sum(bulkPcs) bulkPcs,  sum(bulkWt) bulkWt from 
                 (select FLT_KEY, FLT_DATE, AWB_NO, AWB_DATE, NVL(SUM(MIX_PCS)+SUM(PPK_PCS)+SUM(ASSIGNED_BULK_PCS),0) bulkPcs, NVL(SUM(MIX_WT)+SUM(PPK_WT)+SUM(ASSIGNED_BULK_WT),0) bulkWt
                    from EXP_PMANIFEST_AWB 
                          where MIX_PCS <> 0 OR PPK_PCS <> 0 OR ASSIGNED_BULK_PCS <> 0 OR  MIX_WT <> 0 OR PPK_WT <> 0 OR ASSIGNED_BULK_WT <> 0
                          group by FLT_KEY, FLT_DATE, AWB_NO, AWB_DATE
                  union
                  select FLT_KEY, FLT_DATE, AWB_NO, AWB_DATE,  NVL(SUM(BULK_PCS)+SUM(PPK_PCS),0) bulkPcs,  NVL(SUM(BULK_WT)+SUM(PPK_WT),0) bulkWt
                    from EXP_PMAN_TARMAC_AWB 
                          where BULK_PCS <> 0 OR PPK_PCS <> 0 OR  BULK_WT <> 0 OR PPK_WT <> 0 
                            group by FLT_KEY, FLT_DATE, AWB_NO, AWB_DATE
                ) a  group by FLT_KEY, FLT_DATE, AWB_NO, AWB_DATE ) buPcWt
              where FLT_KEY = ddt.SHP_CNTG_FLT_KEY  and FLT_DATE = ddt.SHP_CNTG_FLT_DATE 
              and AWB_NO = NVL(FFM.AWB_NO,DDT.AWB_NO) and AWB_DATE = NVL(FFM.AWB_DATE,TO_DATE(DDT.AWB_DATE,'DDMONYY'))
              ) buPcWt,
    	JO.BU_INST buildInstr
  	from
		(select  
		ffmshp.awb_no awb_no, ffmshp.awb_Date awb_Date, ffmshp.ORG ORG, ffmshp.DEST DEST, nvl(ffmshp.MAN_PCS,0) PCS,
		nvl(ffmshp.MAN_WT,0) WT, ffmMSG.flt_key flt_key , ffmMSG.flt_Date flt_Date, ffmULD.ULD_KEY ULD_KEY, ffmMSG.TR_No tr_NO,shmpt_code shmpt_code 
		    from EDI_FFM_MSG ffmMSG, EDI_FFM_ULD ffmULD , edi_ffm_shp ffmshp 
		    where ffmMSG.FFM_STATUS = 'P' and ffmshp.dest != 'HKG' 
		    and ffmMSG.TR_NO = ffmULD.TR_NO and ffmMSG.TR_NO = ffmshp.TR_NO and ffmULD.Doc_line_no = ffmshp.uDoc_line_no 
		    ) ffm 
		]]> 
		FULL OUTER join  (select ddtView.awb_no awb_no, to_char(ddtView.awb_DATE,'DDMONYY') awb_DATE, ddtView.flt_key flt_key , 
	               to_char(ddtView.flt_Date,'DDMONYY') flt_Date, 
	         	ddtView.TR_NO TR_NO, ddtView.sdoc_line_no Sdoc_line_no, ddtView.uDOC_LINE_NO UDOC_LINE_NO, ddtView.DOC_LINE_NO DOC_LINE_NO,
	         	ddtView.ULD_KEY ULD_KEY , ddtView.SHP_CNTG_FLT_KEY CNTG_FLT_KEY, to_char(ddtView.SHP_CNTG_FLT_DATE,'DDMONYY') CNTG_FLT_DATE,
	             ddtView.SHP_CNTG_FLT_KEY SHP_CNTG_FLT_KEY, to_char(ddtView.SHP_CNTG_FLT_DATE,'DDMONYY') SHP_CNTG_FLT_DATE, 
	             ddtView.SHP_TRF_TYPE SHP_TRF_TYPE,  ddtView.SHP_BRK_BULK SHP_BRK_BULK,
	           	ddtView.SHP_TRF_TYPE TRF_TYPE,  ddtView.BRK_BULK BRK_BULK, to_char(ddtView.BASELINE_ETA,'DDMONYY') BASELINE_ETA,
	           	NVL( (TO_CHAR(TO_DATE(to_char(ddtView.BASELINE_ETA,'DDMONYY HH24MI'),'DDMONYY HH24MI') - 
	            			TO_DATE(TO_CHAR(FLT.SCH_DATE,'DDMONYY')|| ' ' || 
	            			TO_CHAR(NVL(FLT.EST_TIME,  FLT.SCH_TIME),'0000') ,'DDMONYY HH24MI')))  * 24  , 0 ) as etaChangedHrs,
	                 NVL( (TO_CHAR(TO_DATE(to_char(ddtView.BASELINE_ETA,'DDMONYY HH24MI'),'DDMONYY HH24MI') - 
	            			TO_DATE(TO_CHAR(FLT.SCH_DATE,'DDMONYY')|| ' ' || 
	            			TO_CHAR(NVL(FLT.EST_TIME,  FLT.SCH_TIME),'0000') ,'DDMONYY HH24MI')))  * 24 * 60 , 0 ) as etaChangedMin,
	             ddtView.Acton_code_1 Acton_code_1, ddtView.Acton_code_2 Acton_code_2, ddtView.UNLDG_PT , ddtView.SHP_UNLDG_PT,
	             ddtView.SHP_TRF_PC , ddtView.SHP_TRF_WT
	           from V_UNFIN_DDT_DTL ddtView
	       		join FLT_OPR FLT on FLT.FLT_KEY = ddtView.FLT_KEY and FLT.SCH_DATE = ddtView.FLT_DATE and FLT_type = 'A' 
	       		where 
	     		(uld_key is not null or (uld_key is null and SHP_TRF_TYPE = 'IF'))
	     		 and ddtView.SHP_CNTG_FLT_KEY = nvl(#expFltKey#,ddtView.SHP_CNTG_FLT_KEY) and nvl( ddtView.SHP_CNTG_FLT_DATE,'31AUG2000') = NVL(#expFltDate#,nvl( ddtView.SHP_CNTG_FLT_DATE,'31AUG2000'))) ddt 
 		on ddt.flt_key = ffm.flt_key and  ddt.flt_Date =  ffm.flt_Date and nvl(ddt.ULD_KEY, '*') =  nvl(ffm.ULD_KEY, '*') AND DDT.AWB_NO = FFM.AWB_NO
		 left join AWB on AWB.AWB_NO = NVL(FFM.AWB_NO,DDT.AWB_NO) and AWB.AWB_DATE = NVL(FFM.AWB_DATE,DDT.AWB_DATE)
		 left join (select BU_INST, AIRL_RMK, WH_RMK, EXP_BU_JO.FLT_KEY, EXP_BU_JO.FLT_DATE, EXP_BU_JO_DTL.AWB_NO ,EXP_BU_JO_DTL.AWB_DATE 
		            from      EXP_BU_JO ,  EXP_BU_JO_DTL where EXP_BU_JO.JO_NO =  EXP_BU_JO_DTL.JO_NO ) JO 
		            ON JO.FLT_KEY = DDT.CNTG_FLT_KEY  and JO.FLT_DATE = DDT.CNTG_FLT_DATE
		              and JO.AWB_NO = NVL(FFM.AWB_NO,DDT.AWB_NO)  and JO.AWB_DATE = nvl(ffm.awb_Date,to_date(ddt.awb_Date,'DDMONYY'))
		 left join (select sum(NVL(ffmshp.MAN_PCS,0)) PCS,sum(nvl(ffmshp.MAN_WT,0)) WT, ffmMSG.flt_key flt_key , ffmMSG.flt_Date flt_Date, ffmULD.ULD_KEY ULD_KEY
		 		    from EDI_FFM_MSG ffmMSG, EDI_FFM_ULD ffmULD , edi_ffm_shp ffmshp 
		    		where ffmMSG.FFM_STATUS = 'P' and ffmshp.dest != 'HKG' 
		    		and ffmMSG.TR_NO = ffmULD.TR_NO and ffmMSG.TR_NO = ffmshp.TR_NO and ffmULD.Doc_line_no = ffmshp.uDoc_line_no group by ffmMSG.flt_key, ffmMSG.flt_Date, ffmULD.ULD_KEY)  uldFfm 
		    		on ffm.FLT_KEY = uldFfm.FLT_KEY and ffm.FLT_DATE = uldFfm.FLT_DATE and ffm.ULD_KEY = uldFFm.ULD_KEY             
		  where ((ffm.flt_key = #fltKey# and ffm.flt_Date = #fltDate# ) 
		  OR (ddt.flt_key = #fltKey# and ddt.flt_Date = #fltDate# ))
		    and exists (select null from V_UNFIN_DDT_DTL where SHP_TRF_TYPE = 'IF' and flt_key = ffm.flt_key and flt_date = ffm.flt_date and nvl(ULD_KEY, '*') =  nvl(ffm.ULD_KEY, '*') 
		                and (uld_key is not null or (uld_key is null and SHP_TRF_TYPE = 'IF' and awb_no = ffm.awb_no)))
		      ) a       where 1 = 1 
       <isNotEmpty property="bulkIndYN">
	       <isEqual property="bulkIndYN" compareValue="N">
	       		and uldKey &lt;&gt; 'BULK'
	       			<isNotEmpty property="expFltKey">
					 	<isNotEmpty property="expFltDate">
					  			and  cntgFltKey = #expFltKey# and cntgFltDate = #expFltDate#
						</isNotEmpty>
					</isNotEmpty>
	       	</isEqual>
	       <isEqual property="bulkIndYN" compareValue="Y">
	       		and uldKey = 'BULK'
	       	</isEqual>
       	</isNotEmpty>
   order by  to_number(nvl(timeDiifferanceHhMi,0)) , uldKey, awbno
</select>

<select id="fetchIFULDIndBoundULDAWBList_Dtl" parameterClass="cargo.cms.imprt.bo.IFULDShipmentListBO" resultClass="cargo.cms.imprt.bo.IFULDShipmentListInOutAWBBO" >
		<![CDATA[ 
		select a.* from ( 
		select nvl(ffm.awb_no,ddt.awb_no) awbNo,
		SUBSTR(TRIM(nvl(ffm.awb_no,ddt.awb_no)),1,3)||'-'||SUBSTR(TRIM(nvl(ffm.awb_no,ddt.awb_no)),4) awbNoDisp,
		TO_CHAR(nvl(ffm.awb_Date,ddt.awb_Date),'DDMONYY') awbDate, 
		nvl(nvl(ffm.ULD_KEY,ddt.ULD_KEY),'BULK')  uldKey,
		nvl(nvl(ffm.ULD_KEY,ddt.ULD_KEY),'BULK')  uldKeyShow,
		nvl(nvl(ffm.ULD_KEY,ddt.ULD_KEY),'BULK') ||'-'|| nvl(ffm.awb_no,ddt.awb_no)  uldKeyAwbNo,
		decode(ffm.tr_No,null,'N','Y') ffmInd,
		decode(ddt.tr_No,null,'N','Y') ddtInd,
		nvl(awb.ORIG,'') org, awb.DEST dest, nvl(ffm.PCS,0) pcs,nvl(ffm.WT,0) wt, ffm.shmpt_code shpmCode, NVL(AWB.PCS,0) awbPcs,NVL(AWB.WT,0) awbWt,
		(case when ( nvl((select sum(shp_trf_pc) from v_ddt_dtl 
		                    where AWB_NO = nvl(ffm.awb_no,ddt.awb_no) and AWB_DATE = nvl(ffm.awb_Date,to_date(ddt.awb_Date,'DDMONYY'))
		                        and (SHP_TRF_TYPE = 'IF' OR (SHP_TRF_TYPE = 'IF' and CNTG_FLT_KEY is null))),0) 
		                        != nvl((select sum(PMAN_PCS) from EXP_PMANIFEST_AWB where  AWB_NO = nvl(ffm.awb_no,ddt.awb_no) 
		                        					and AWB_DATE = nvl(ffm.awb_Date,to_date(ddt.awb_Date,'DDMONYY'))),0))  
		              then 'Y' else 'N' end) as manPman,
		 nvl(ffm.flt_key,ddt.flt_key) fltKey , TO_CHAR(nvl(ffm.flt_Date,ddt.flt_Date),'DDMONYY')  fltDate,
		  ddt.TR_NO ddtTrNo, ddt.SDOC_LINE_NO ddtSdocLineNo, ddt.UDOC_LINE_NO ddtUdocLineNo, ddt.DOC_LINE_NO ddtDocLineNo,
		   (SELECT V.CC_CODE FROM V_CST_IMP_CC_CODE_AWB V
						WHERE nvl(V.FLT_KEY,'*') = NVL(nvl(ffm.flt_key,ddt.flt_key),'*') AND nvl( V.FLT_DATE,'31AUG2000') = NVL(nvl(ffm.flt_date,ddt.flt_date),'31AUG2000')
						AND V.AWB_NO =  nvl(ffm.awb_no,ddt.awb_no)  AND NVL(V.HAWB_NO, '000000000000000000') =  '000000000000000000' AND ROWNUM = 1)  AS ccode,
		(SELECT STRAGG(STRINGDELIM(SHC, ',')) 
			    	FROM (SELECT DISTINCT SHC, ULD_KEY, FLT_KEY,FLT_DATE, AWB_NO, AWB_DATE,PRIORITY FROM V_IMP_FLT_ULD_SHC ORDER BY PRIORITY DESC
			      	) WHERE AWB_NO = NVL(ffm.awb_No,ddt.awb_No) AND AWB_DATE = NVL(ffm.awb_date,ddt.awb_date)
			      	AND FLT_KEY = nvl(ffm.flt_key,ddt.flt_key) AND FLT_DATE = nvl(ffm.flt_Date,ddt.flt_Date)
			      	and nvl(ULD_KEY,'BULK') = nvl(nvl(ffm.ULD_KEY,ddt.ULD_KEY),'BULK')
		                )  shc,			
		 ddt.SHP_CNTG_FLT_KEY cntgFltKey, ddt.SHP_CNTG_FLT_DATE cntgFltDate,
			ddt.SHP_CNTG_FLT_KEY oldCntgFltKey, ddt.SHP_CNTG_FLT_DATE oldCntgFltDate,
		  decode(ddt.SHP_CNTG_FLT_KEY,null,'',PKG_COMMON.get_flt_carr(ddt.SHP_CNTG_FLT_KEY)) cntgFltCarr, REPLACE(ddt.SHP_CNTG_FLT_KEY, PKG_COMMON.get_flt_carr(ddt.SHP_CNTG_FLT_KEY), '') cntgFltNo,
		  decode(ddt.SHP_CNTG_FLT_KEY,null,'',PKG_COMMON.get_flt_carr(ddt.SHP_CNTG_FLT_KEY)) oldCntgFltCarr, REPLACE(ddt.SHP_CNTG_FLT_KEY, PKG_COMMON.get_flt_carr(ddt.SHP_CNTG_FLT_KEY), '') oldCntgFltNo,
		 ddt.SHP_TRF_TYPE trfType, ddt.SHP_BRK_BULK brkBulk, ddt.SHP_UNLDG_PT shpUnldgPt, 
		  ddt.SHP_TRF_TYPE oldTrfType, ddt.SHP_BRK_BULK oldBrkBulk, ddt.SHP_UNLDG_PT oldShpUnldgPt, 
		  ddt.SHP_TRF_PC trfPcs, ddt.SHP_TRF_WT trfWt,
			ddt.SHP_TRF_PC oldTrfPcs, ddt.SHP_TRF_WT oldTrfWt,
		  (select eic_UNLDG_PT from ULD_INVENTORY where ULD_KEY = ffm.ULD_KEY) unldgPt,
		      case when (select count(1) from imp_uld_list where FLT_KEY = ffm.flt_key and ffm.flt_Date = FLT_DATE
		              and ULD_KEY = ffm.ULD_KEY and HANDLING_MODE in ('NBK','PPK')) > 0 then 'Y' 
		               else '' end as noBreak, 
		              ddt.Acton_code_1 actionOne, ddt.Acton_code_2 actionTwo , 'Y' spiltChkNotReqd,
		FUN_GET_FLT_TDIFF_TRFYPE(ddt.SHP_CNTG_FLT_KEY, ddt.SHP_CNTG_FLT_DATE,#fltKey#,#fltDate#,'TIME_DIFF' ) timeDiifferance,
		FUN_GET_FLT_TDIFF_TRFYPE(ddt.SHP_CNTG_FLT_KEY, ddt.SHP_CNTG_FLT_DATE,#fltKey#,#fltDate#,'TR_TYPE' ) proposeTrfType,
		DECODE((select count(1) from awb where awb_no = nvl(ffm.awb_no,ddt.awb_no) and awb_date=nvl(ffm.awb_date,ddt.awb_date) and rownum=1),0,(select rmk from awb_rmk where awb_no=nvl(ffm.awb_no,ddt.awb_no) and awb_date=nvl(ffm.awb_date,ddt.awb_date)  and rownum=1),(select AIRLN_RMK from awb where awb_no = nvl(ffm.awb_no,ddt.awb_no) and awb_date=nvl(ffm.awb_date,ddt.awb_date)  and rownum=1)) AS awbAirlRmk,  
		DECODE((select count(1) from imp_car_awb where awb_no = nvl(ffm.awb_no,ddt.awb_no) and awb_date=nvl(ffm.awb_date,ddt.awb_date)  and rownum=1),0,(select awb_rmk from awb where awb_no=nvl(ffm.awb_no,ddt.awb_no) and awb_date=nvl(ffm.awb_date,ddt.awb_date)  and rownum=1),(select WH_RMK from imp_car_awb where awb_no = nvl(ffm.awb_no,ddt.awb_no) and awb_date=nvl(ffm.awb_date,ddt.awb_date)  and rownum=1)) AS awbWhRmk,
		d.AIRL_RMK uldAirlRmk, d.WH_RMK uldWhRmk,
		DECODE(shp.RECD_PCS,'0','',shp.RECD_PCS) ||DECODE(shp.RECD_PCS,'0','','/')||DECODE(shp.RECD_WT,null,'',DECODE(trim(TO_CHAR(NVL(shp.RECD_WT,0),'99999990.0')),'0.0','',trim(TO_CHAR(NVL(shp.RECD_WT,0),'99999990.0')))) AS bdPcWt,
		DECODE(shp.DAM_PCS,'0','',shp.DAM_PCS) ||DECODE(shp.DAM_PCS,'0','','/')|| DECODE(shp.DAM_WT,null,'',DECODE(trim(TO_CHAR(NVL(shp.DAM_WT,0),'99999990.0')),'0.0','',trim(TO_CHAR(NVL(shp.DAM_WT,0),'99999990.0')))) AS damPcWt     
		from
		(select  
		ffmshp.awb_no awb_no, ffmshp.awb_Date awb_Date, ffmshp.ORG ORG, ffmshp.DEST DEST, nvl(ffmshp.MAN_PCS,0) PCS,
		nvl(ffmshp.MAN_WT,0) WT, shmpt_code shmpt_code, ffmMSG.flt_key flt_key , ffmMSG.flt_Date flt_Date, ffmULD.ULD_KEY ULD_KEY, ffmMSG.TR_No tr_NO 
		    from EDI_FFM_MSG ffmMSG, EDI_FFM_ULD ffmULD , edi_ffm_shp ffmshp 
		    where ffmMSG.FFM_STATUS = 'P' 
		    and ffmMSG.TR_NO = ffmULD.TR_NO and ffmMSG.TR_NO = ffmshp.TR_NO and ffmULD.Doc_line_no = ffmshp.uDoc_line_no 
		    ) ffm 
		FULL OUTER join  (select ddtView.awb_no awb_no, to_char(ddtView.awb_DATE,'DDMONYY') awb_DATE, ddtView.flt_key flt_key , 
		                      to_char(ddtView.flt_Date,'DDMONYY') flt_Date, 
		                	ddtView.TR_NO TR_NO, ddtView.sdoc_line_no Sdoc_line_no, ddtView.uDOC_LINE_NO UDOC_LINE_NO, ddtView.DOC_LINE_NO DOC_LINE_NO,
		                	ddtView.ULD_KEY ULD_KEY , ddtView.SHP_CNTG_FLT_KEY SHP_CNTG_FLT_KEY, to_char(ddtView.SHP_CNTG_FLT_DATE,'DDMONYY') SHP_CNTG_FLT_DATE, 
		                  	ddtView.SHP_TRF_TYPE SHP_TRF_TYPE,  ddtView.SHP_BRK_BULK SHP_BRK_BULK, to_char(ddtView.BASELINE_ETA,'DDMONYY') BASELINE_ETA,
		                  	NVL( (TO_CHAR(TO_DATE(to_char(ddtView.BASELINE_ETA,'DDMONYY HH24MI'),'DDMONYY HH24MI') - 
		                   			TO_DATE(TO_CHAR(FLT.SCH_DATE,'DDMONYY')|| ' ' || 
		                   			TO_CHAR(NVL(FLT.EST_TIME,  FLT.SCH_TIME),'0000') ,'DDMONYY HH24MI')))  * 24  , 0 ) as etaChangedHrs,
		                    ddtView.Acton_code_1 Acton_code_1, ddtView.Acton_code_2 Acton_code_2, ddtView.UNLDG_PT , ddtView.SHP_UNLDG_PT,
		                    ddtView.SHP_TRF_PC , ddtView.SHP_TRF_WT
		                  from V_UNFIN_DDT_DTL ddtView
		              		join FLT_OPR FLT on FLT.FLT_KEY = ddtView.FLT_KEY and FLT.SCH_DATE = ddtView.FLT_DATE and FLT_type = 'A') ddt 
		  				on ddt.flt_key = ffm.flt_key and  ddt.flt_Date =  ffm.flt_Date and nvl(ddt.ULD_KEY, '*') =  nvl(ffm.ULD_KEY, '*') AND DDT.AWB_NO = FFM.AWB_NO
		 left join awb on awb.awb_NO = NVL(ffm.awb_No,ddt.awb_No) and awb.awb_Date = NVL(ffm.awb_Date,ddt.awb_Date)
		 left join IMP_CAR_SHP shp on shp.awb_NO = NVL(ffm.awb_No,ddt.awb_No) and shp.awb_Date = NVL(ffm.awb_Date,ddt.awb_Date) and shp.flt_key = NVL(ffm.flt_key,ddt.flt_key) and shp.flt_Date = NVL(ffm.flt_Date,ddt.flt_Date)
		 left join IMP_ULD_LIST D
		     ON nvl(D.ULD_KEY,'BULK') = nvl(nvl(ffm.ULD_KEY,ddt.ULD_KEY),'BULK')  and d.flt_key = NVL(ffm.flt_key,ddt.flt_key) and d.flt_date = NVL(ffm.flt_Date,ddt.flt_Date) 
		  where ((ffm.flt_key = #fltKey# and ffm.flt_Date = #fltDate# ) 
		  		OR (ddt.flt_key = #fltKey# and ddt.flt_Date = #fltDate# ))
		  		and nvl(nvl(ffm.ULD_KEY,ddt.ULD_KEY),'BULK') = #uldKey#  
		   ]]>
		   <isNotEmpty property="trfType">
				and ddt.SHP_TRF_TYPE = nvl(#trfType#,ddt.SHP_TRF_TYPE)
			</isNotEmpty>
		   ) a ORDER BY  timeDiifferance, awbNo , awbDate
</select>

<select id="fetchIFULDIndBoundTsnstCntrlAWB_CNTG_FLT_List" parameterClass="cargo.cms.imprt.bo.IFULDShipmentListInOutAWBBO" resultClass="cargo.cms.imprt.bo.IFULDShipmentListInOutAWBBO" >
		<![CDATA[ 
		select a.* from (
		select nvl(ffm.awb_no,ddt.awb_no) awbNo,
		SUBSTR(TRIM(nvl(ffm.awb_no,ddt.awb_no)),1,3)||'-'||SUBSTR(TRIM(nvl(ffm.awb_no,ddt.awb_no)),4) awbNoDisp,
		TO_CHAR(nvl(ffm.awb_Date,ddt.awb_Date),'DDMONYY') awbDate, 
		nvl(nvl(ffm.ULD_KEY,ddt.ULD_KEY),'BULK')  uldKey,
		nvl(nvl(ffm.ULD_KEY,ddt.ULD_KEY),'BULK')  uldKeyShow,
		nvl(nvl(ffm.ULD_KEY,ddt.ULD_KEY),'BULK') ||'-'|| nvl(ffm.awb_no,ddt.awb_no)  uldKeyAwbNo,
		decode(ffm.tr_No,null,'N','Y') ffmInd,
		decode(ddt.tr_No,null,'N','Y') ddtInd,
		nvl(awb.ORIG,'') org, awb.DEST dest, 
		awb.catalog catalog,
		case when ffm.tr_No is null and awb.catalog = 'TM' then NVL(AWB.PCS,0)
			else nvl(ffm.PCS,0) end pcs,
		case when ffm.tr_No is null and awb.catalog = 'TM' then NVL(AWB.WT,0)
			else nvl(ffm.WT,0) end wt, 
		case when ffm.tr_No is null and awb.catalog = 'TM' then 'Y' else 'N' end disablePcWt,
		NVL(AWB.PCS,0) awbPcs,NVL(AWB.WT,0) awbWt,
		(case when ( nvl((select sum(shp_trf_pc) from v_ddt_dtl 
		                    where AWB_NO = nvl(ffm.awb_no,ddt.awb_no) and AWB_DATE = nvl(ffm.awb_Date,to_date(ddt.awb_Date,'DDMONYY'))
		                        and (SHP_TRF_TYPE = 'IF' OR (SHP_TRF_TYPE = 'IF' and CNTG_FLT_KEY is null))),0) 
		                        != nvl((select sum(PMAN_PCS) from EXP_PMANIFEST_AWB where  AWB_NO = nvl(ffm.awb_no,ddt.awb_no) 
		                        					and AWB_DATE = nvl(ffm.awb_Date,to_date(ddt.awb_Date,'DDMONYY'))),0))  
		              then 'Y' else 'N' end) as manPman,
		nvl(ffm.flt_key,ddt.flt_key) fltKey , TO_CHAR(nvl(ffm.flt_Date,ddt.flt_Date),'DDMONYY')  fltDate,
		ddt.TR_NO ddtTrNo, ddt.SDOC_LINE_NO ddtSdocLineNo, ddt.UDOC_LINE_NO ddtUdocLineNo, ddt.DOC_LINE_NO ddtDocLineNo,
		 ddt.SHP_CNTG_FLT_KEY cntgFltKey, ddt.SHP_CNTG_FLT_DATE cntgFltDate,
			ddt.SHP_CNTG_FLT_KEY oldCntgFltKey, ddt.SHP_CNTG_FLT_DATE oldCntgFltDate,
		  decode(ddt.SHP_CNTG_FLT_KEY,null,'',PKG_COMMON.get_flt_carr(ddt.SHP_CNTG_FLT_KEY)) cntgFltCarr, REPLACE(ddt.SHP_CNTG_FLT_KEY, PKG_COMMON.get_flt_carr(ddt.SHP_CNTG_FLT_KEY), '') cntgFltNo,
		  decode(ddt.SHP_CNTG_FLT_KEY,null,'',PKG_COMMON.get_flt_carr(ddt.SHP_CNTG_FLT_KEY)) oldCntgFltCarr, REPLACE(ddt.SHP_CNTG_FLT_KEY, PKG_COMMON.get_flt_carr(ddt.SHP_CNTG_FLT_KEY), '') oldCntgFltNo,
		 ddt.SHP_TRF_TYPE trfType, ddt.SHP_BRK_BULK brkBulk, ddt.SHP_UNLDG_PT shpUnldgPt, 
		  ddt.SHP_TRF_TYPE oldTrfType, ddt.SHP_BRK_BULK oldBrkBulk, ddt.SHP_UNLDG_PT oldShpUnldgPt, 
		  ddt.SHP_TRF_PC trfPcs, ddt.SHP_TRF_WT trfWt,
			ddt.SHP_TRF_PC oldTrfPcs, ddt.SHP_TRF_WT oldTrfWt, 
		  (select eic_UNLDG_PT from ULD_INVENTORY where ULD_KEY = ffm.ULD_KEY) unldgPt,
		  '' as proposeTrfType, '' etaChangedHrs, 
		      case when (select count(1) from imp_uld_list where FLT_KEY = ffm.flt_key and ffm.flt_Date = FLT_DATE
		              and ULD_KEY = ffm.ULD_KEY and HANDLING_MODE in ('NBK','PPK')) > 0 then 'Y' 
		               else '' end as noBreak, 
		              ddt.Acton_code_1 actionOne, ddt.Acton_code_2 actionTwo , 'Y' spiltChkNotReqd,
		                 (select bulkPcs ||'/'||  bulkWt from 
		               	  (select FLT_KEY, FLT_DATE, AWB_NO, AWB_DATE, sum(bulkPcs) bulkPcs,  sum(bulkWt) bulkWt from 
		                   (select FLT_KEY, FLT_DATE, AWB_NO, AWB_DATE, NVL(SUM(MIX_PCS)+SUM(PPK_PCS)+SUM(ASSIGNED_BULK_PCS),0) bulkPcs, NVL(SUM(MIX_WT)+SUM(PPK_WT)+SUM(ASSIGNED_BULK_WT),0) bulkWt
		                      from EXP_PMANIFEST_AWB 
		                            where MIX_PCS <> 0 OR PPK_PCS <> 0 OR ASSIGNED_BULK_PCS <> 0 OR  MIX_WT <> 0 OR PPK_WT <> 0 OR ASSIGNED_BULK_WT <> 0
		                            group by FLT_KEY, FLT_DATE, AWB_NO, AWB_DATE
		                    union
		                    select FLT_KEY, FLT_DATE, AWB_NO, AWB_DATE,  NVL(SUM(BULK_PCS)+SUM(PPK_PCS),0) bulkPcs,  NVL(SUM(BULK_WT)+SUM(PPK_WT),0) bulkWt
		                      from EXP_PMAN_TARMAC_AWB 
		                            where BULK_PCS <> 0 OR PPK_PCS <> 0 OR  BULK_WT <> 0 OR PPK_WT <> 0 
		                              group by FLT_KEY, FLT_DATE, AWB_NO, AWB_DATE
		                  ) a  group by FLT_KEY, FLT_DATE, AWB_NO, AWB_DATE ) buPcWt
		                where FLT_KEY = ddt.SHP_CNTG_FLT_KEY  and FLT_DATE = ddt.SHP_CNTG_FLT_DATE 
		                and AWB_NO = NVL(FFM.AWB_NO,DDT.AWB_NO) and AWB_DATE = NVL(FFM.AWB_DATE,TO_DATE(DDT.AWB_DATE,'DDMONYY'))
		                ) buPcWt,
		PKG_COMMON.get_flt_eta(ddt.SHP_CNTG_FLT_KEY, ddt.SHP_CNTG_FLT_DATE, 'D', 'DD')  as etd, 
		                        PKG_COMMON.get_flt_sta(ddt.SHP_CNTG_FLT_KEY, ddt.SHP_CNTG_FLT_DATE, 'D', 'DD')  as std,
		FUN_GET_FLT_TDIFF_TRFYPE(ddt.SHP_CNTG_FLT_KEY,ddt.SHP_CNTG_FLT_DATE,nvl(ffm.flt_key,ddt.flt_key),nvl(ffm.flt_date,ddt.flt_date),'TIME_DIFF' ) timeDiifferance,
		ddt.qt_bu qtBu,
		(select bu_inst from EXP_BU_JO hd, EXP_BU_JO_DTL dtl 
				where hd.jo_no = dtl.jo_no and hd.flt_key =  ddt.shp_cntg_flt_key and hd.flt_date = ddt.shp_cntg_flt_date 
				and dtl.awb_NO = NVL(ffm.awb_No,ddt.awb_No) and dtl.awb_Date = NVL(ffm.awb_Date,ddt.awb_Date) and rownum = 1 ) as buildInstr, 
			ffmCntTab.ffmCount ffmCount,
		(select Wt  from edi_cpm_DTL where   nvl(ULD_KEY,'BULK') = nvl(nvl(ffm.ULD_KEY,ddt.ULD_KEY),'BULK')
		               and flt_key = NVL(ffm.flt_key,ddt.flt_key) and flt_date = NVL(ffm.flt_Date,ddt.flt_Date) and rownum = 1 )   grossWt,
		(select CNTR  from edi_cpm_DTL where   nvl(ULD_KEY,'BULK') = nvl(nvl(ffm.ULD_KEY,ddt.ULD_KEY),'BULK')
		               and flt_key = NVL(ffm.flt_key,ddt.flt_key) and flt_date = NVL(ffm.flt_Date,ddt.flt_Date) and rownum = 1 )   contrCode ,
		               nvl(ffmCntTab.PCS,0) manfPcs,  nvl(ffmCntTab.wt,0) manfWt      
		from
		(select  
		ffmshp.awb_no awb_no, ffmshp.awb_Date awb_Date, ffmshp.ORG ORG, ffmshp.DEST DEST, nvl(ffmshp.MAN_PCS,0) PCS,
		nvl(ffmshp.MAN_WT,0) WT, ffmMSG.flt_key flt_key , ffmMSG.flt_Date flt_Date, ffmULD.ULD_KEY ULD_KEY, ffmMSG.TR_No tr_NO 
		    from EDI_FFM_MSG ffmMSG, EDI_FFM_ULD ffmULD , edi_ffm_shp ffmshp 
		    where ffmMSG.FFM_STATUS = 'P' and ffmshp.dest != 'HKG' 
		    and ffmMSG.TR_NO = ffmULD.TR_NO and ffmMSG.TR_NO = ffmshp.TR_NO and ffmULD.Doc_line_no = ffmshp.uDoc_line_no 
		    ) ffm 
		FULL OUTER join  (select ddtView.awb_no awb_no, to_char(ddtView.awb_DATE,'DDMONYY') awb_DATE, ddtView.flt_key flt_key , 
		                      to_char(ddtView.flt_Date,'DDMONYY') flt_Date, 
		                	ddtView.TR_NO TR_NO, ddtView.sdoc_line_no Sdoc_line_no, ddtView.uDOC_LINE_NO UDOC_LINE_NO, ddtView.DOC_LINE_NO DOC_LINE_NO,
		                	ddtView.ULD_KEY ULD_KEY , ddtView.SHP_CNTG_FLT_KEY SHP_CNTG_FLT_KEY, to_char(ddtView.SHP_CNTG_FLT_DATE,'DDMONYY') SHP_CNTG_FLT_DATE, 
		                  	ddtView.SHP_TRF_TYPE SHP_TRF_TYPE,  ddtView.SHP_BRK_BULK SHP_BRK_BULK, to_char(ddtView.BASELINE_ETA,'DDMONYY') BASELINE_ETA,
		                  	NVL( (TO_CHAR(TO_DATE(to_char(ddtView.BASELINE_ETA,'DDMONYY HH24MI'),'DDMONYY HH24MI') - 
		                   			TO_DATE(TO_CHAR(FLT.SCH_DATE,'DDMONYY')|| ' ' || 
		                   			TO_CHAR(NVL(FLT.EST_TIME,  FLT.SCH_TIME),'0000') ,'DDMONYY HH24MI')))  * 24  , 0 ) as etaChangedHrs,
		                    ddtView.Acton_code_1 Acton_code_1, ddtView.Acton_code_2 Acton_code_2, ddtView.UNLDG_PT , ddtView.SHP_UNLDG_PT,
		                    ddtView.SHP_TRF_PC , ddtView.SHP_TRF_WT, ddtView.qt_BU
		                  from V_UNFIN_DDT_DTL ddtView
		              		join FLT_OPR FLT on FLT.FLT_KEY = ddtView.FLT_KEY and FLT.SCH_DATE = ddtView.FLT_DATE and FLT_type = 'A') ddt 
		  				on ddt.flt_key = ffm.flt_key and  ddt.flt_Date =  ffm.flt_Date and nvl(ddt.ULD_KEY, '*') =  nvl(ffm.ULD_KEY, '*') AND DDT.AWB_NO = FFM.AWB_NO
		left join (select  COUNT(1) ffmCount ,  nvl(sum(ffmshp.MAN_PCS),0) PCS, nvl(sum(ffmshp.MAN_WT),0) WT, ffmMSG.flt_key, ffmMSG.flt_Date, ffmULD.ULD_KEY
		         from EDI_FFM_MSG ffmMSG, EDI_FFM_ULD ffmULD , edi_ffm_shp ffmshp 
		            where ffmMSG.FFM_STATUS = 'P'
		            and ffmMSG.TR_NO = ffmULD.TR_NO and ffmMSG.TR_NO = ffmshp.TR_NO and ffmULD.Doc_line_no = ffmshp.uDoc_line_no 
		            group by ffmMSG.flt_key, ffmMSG.flt_Date, ffmULD.ULD_KEY ) ffmCntTab 
		            on  nvl(ffmCntTab.ULD_KEY,'BULK') = nvl(nvl(ffm.ULD_KEY,ddt.ULD_KEY),'BULK')
		                  and ffmCntTab.flt_key = NVL(ffm.flt_key,ddt.flt_key) and ffmCntTab.flt_date = NVL(ffm.flt_Date,ddt.flt_Date)    				
		 left join awb on awb.awb_NO = NVL(ffm.awb_No,ddt.awb_No) and awb.awb_Date = NVL(ffm.awb_Date,ddt.awb_Date)
		  where ((ffm.flt_key = #fltKey# and ffm.flt_Date = #fltDate# ) 
		  		OR (ddt.flt_key = #fltKey# and ddt.flt_Date = #fltDate# ))
		  		and nvl(nvl(ffm.ULD_KEY,ddt.ULD_KEY),'BULK') = #uldKey#  
		  		and nvl(ffm.awb_no,ddt.awb_no) = #awbNo# and nvl(ffm.awb_Date,ddt.awb_Date) = #awbDate#
		
		   ]]>
		   ) a where 1=1 
		    	<isNotEmpty property="expFltKey">
		       	 	<isNotEmpty property="expFltDate">
		       	  		and cntgFltKey = #expFltKey# and cntgFltDate = #expFltDate#
		    	  	</isNotEmpty>
		     	 </isNotEmpty>
		   ORDER BY  timeDiifferance,  awbNo , awbDate
</select>

<select id="fetchIFULDIndBoundTransitFltList" parameterClass="cargo.cms.imprt.bo.IFULDShipmentListBO" resultClass="cargo.cms.imprt.bo.IFULDShipmentListInOutAWBBO" >
		<![CDATA[ 
		select 
		   ddt.CNTG_FLT_KEY cntgFltKey, ddt.CNTG_FLT_DATE cntgFltDate  
		from
		(select  
		FFMSHP.AWB_NO AWB_NO, FFMSHP.AWB_DATE AWB_DATE, FFMSHP.ORG ORG, FFMSHP.DEST DEST, NVL(FFMSHP.MAN_PCS,0) PCS,
		NVL(FFMSHP.MAN_WT,0) WT, FFMMSG.FLT_KEY FLT_KEY , FFMMSG.FLT_DATE FLT_DATE, FFMULD.ULD_KEY ULD_KEY, FFMMSG.TR_NO TR_NO,
		
		ffmULD.CNTG_FLT_CARR1 ||ffmULD.CNTG_FLT_NO1 CNTG_FLT_KEY,ffmULD.CNTG_FLT_DATE1 CNTG_FLT_DATE
		    from EDI_FFM_MSG ffmMSG, EDI_FFM_ULD ffmULD , edi_ffm_shp ffmshp 
		    where FFMMSG.FFM_STATUS = 'P' and FFMSHP.DEST != 'HKG' 
		    and ffmMSG.TR_NO = ffmULD.TR_NO and ffmMSG.TR_NO = ffmshp.TR_NO and ffmULD.Doc_line_no = ffmshp.uDoc_line_no 
		    ) ffm 
		join  (select ddtView.awb_no awb_no, to_char(ddtView.awb_DATE,'DDMONYY') awb_DATE, ddtView.flt_key flt_key , 
		                      to_char(ddtView.flt_Date,'DDMONYY') flt_Date, 
		                	ddtView.TR_NO TR_NO, ddtView.sdoc_line_no Sdoc_line_no, ddtView.uDOC_LINE_NO UDOC_LINE_NO, ddtView.DOC_LINE_NO DOC_LINE_NO,
		                	ddtView.ULD_KEY ULD_KEY , ddtView.SHP_CNTG_FLT_KEY CNTG_FLT_KEY, to_char(ddtView.SHP_CNTG_FLT_DATE,'DDMONYY') CNTG_FLT_DATE, 
		                  	ddtView.TRF_TYPE TRF_TYPE,  ddtView.BRK_BULK BRK_BULK, to_char(ddtView.BASELINE_ETA,'DDMONYY') BASELINE_ETA,
		                  	NVL( (TO_CHAR(TO_DATE(to_char(ddtView.BASELINE_ETA,'DDMONYY HH24MI'),'DDMONYY HH24MI') - 
		                   			TO_DATE(TO_CHAR(FLT.SCH_DATE,'DDMONYY')|| ' ' || 
		                   			TO_CHAR(NVL(FLT.EST_TIME,  FLT.SCH_TIME),'0000') ,'DDMONYY HH24MI')))  * 24  , 0 ) as etaChangedHrs,
		                        NVL( (TO_CHAR(TO_DATE(to_char(ddtView.BASELINE_ETA,'DDMONYY HH24MI'),'DDMONYY HH24MI') - 
		                   			TO_DATE(TO_CHAR(FLT.SCH_DATE,'DDMONYY')|| ' ' || 
		                   			TO_CHAR(NVL(FLT.EST_TIME,  FLT.SCH_TIME),'0000') ,'DDMONYY HH24MI')))  * 24 * 60 , 0 ) as etaChangedMin,
		                    ddtView.Acton_code_1 Acton_code_1, ddtView.Acton_code_2 Acton_code_2, ddtView.UNLDG_PT , ddtView.SHP_UNLDG_PT,
		                    ddtView.SHP_TRF_PC , ddtView.SHP_TRF_WT
		                  from V_UNFIN_DDT_DTL ddtView
		              		join FLT_OPR FLT on FLT.FLT_KEY = ddtView.FLT_KEY and FLT.SCH_DATE = ddtView.FLT_DATE and FLT_type = 'A') ddt 
		  				on DDT.FLT_KEY = FFM.FLT_KEY and  DDT.FLT_DATE =  FFM.FLT_DATE and nvl(DDT.ULD_KEY, '*') =  nvl(FFM.ULD_KEY, '*') and DDT.AWB_NO = FFM.AWB_NO
		 where 
		   ((ffm.flt_key = #fltKey# and ffm.flt_Date = #fltDate# ) 
		 		OR (ddt.flt_key = #fltKey# and ddt.flt_Date = #fltDate# ))
		   		 
		  ]]>
		  	<isNotEmpty property="expFltKey">
			 	<isNotEmpty property="expFltDate">
			  			and  ddt.CNTG_FLT_KEY = #expFltKey# and ddt.CNTG_FLT_DATE = #expFltDate#
				</isNotEmpty>
			</isNotEmpty>
		 		
		 		group by ddt.CNTG_FLT_KEY , ddt.CNTG_FLT_DATE  
</select>

<select id="fetchIFULDIndBoundTransitBulkList" parameterClass="cargo.cms.imprt.bo.IFULDShipmentListBO" resultClass="cargo.cms.imprt.bo.IFULDShipmentListInOutAWBBO" >
		<![CDATA[ 
		select distinct FLT_KEY, FLT_DATE, ULD_KEY uldKey, LOC_CODE locn
				from IMP_RAMP_CHK_DTL r
				join mast_wh_loc l on l.code = r.loc_code
				join mast_wh_group g on l.wh_group = g.wh_group and g.wh_type = 'IF'
				join mast_uld_type t on t.code = r.uld_type and (t.h_cont_ind = 'Y' or t.bt_ind = 'Y')
		where r.flt_key = #fltKey# and r.flt_Date = #fltDate#  and NVL(r.chkin_yn,'N')='Y'
		 ]]>
</select>

<select id="fetchOutBoundIFUldShpList" parameterClass="cargo.cms.imprt.bo.IFULDShipmentListBO" resultClass="cargo.cms.imprt.bo.IFULDShipmentListInOutAWBBO" >
		<![CDATA[ 
		select
		nvl(ddt.ULD_KEY,'BULK')  uldKey, nvl(ddt.ULD_KEY,'BULK') ||'-'|| ddt.awb_no  uldKeyAwbNo, 
		ddt.awb_no awbNo, SUBSTR(TRIM(ddt.awb_no),1,3)||'-'||SUBSTR(TRIM(ddt.awb_no),4) awbNoDisp,  to_char(ddt.awb_Date,'DDMONYY') awbDate, 
		nvl(awb.ORIG,'') org, awb.DEST dest, ddt.UNLDG_PT unldgPt,ddt.UNLDG_PT uldUnldgPt, ddt.SHP_UNLDG_PT shpUnldgPt, 
		ddt.UNLDG_PT oldUldUnldgPt, ddt.SHP_UNLDG_PT oldShpUnldgPt, 
		ddt.flt_key fltKey , to_char(ddt.flt_Date,'DDMONYY')  fltDate,
		PKG_COMMON.get_flt_eta(ddt.flt_key, ddt.flt_Date, 'A', 'DD') eta,
		NVL(AWB.PCS,0) awbPcs,NVL(AWB.WT,0) awbWt, 
		NVL(FFM.PCS,0) ffmPcs,NVL(FFM.WT,0) ffmWt, FFM.shmpt_code shpmCode,
		ddt.qt_bu as qtBuInd,
	  
	   (select nvl(sum(bup_pc),'0') ||'/'|| nvl(sum(bup_wt),'0') buPcWt
	    FROM ( select flt_key, flt_date, awb_no, awb_date,
	    sum( nvl(PPK_PCS,0)+nvl(MIX_PCS,0)+nvl(ASSIGNED_BULK_PCS,0)) bup_pc,
	    sum( nvl(PPK_WT,0)+nvl(MIX_WT,0)+nvl(ASSIGNED_BULK_WT,0) )bup_wt 
	   from exp_pmanifest_awb 
	   GROUP BY flt_key, flt_date, awb_no, awb_date
	   UNION 
	   select flt_key flt_key, flt_date flt_date, awb_no awb_no,awb_date awb_date,
	   sum(nvl(bulk_pcs,0)+nvl(ppk_pcs,0)) bup_pc,
	   sum(nvl(bulk_wt,0)+nvl(ppk_wt,0)) bup_wt 
	   from EXP_PMAN_TARMAC_AWB
	   group by flt_key,awb_no,awb_date,flt_date) where FLT_KEY = ddt.SHP_CNTG_FLT_KEY
	    AND FLT_DATE  = ddt.SHP_CNTG_FLT_Date
	    AND AWB_NO    = DDT.AWB_NO
	    AND AWB_DATE  = DDT.AWB_DATE) as buPcWt,
	   
	   (select nvl(sum(manf_pc),'0') ||'/'|| nvl(sum(manf_wt),'0') as pmanPcWt
	    FROM ( select flt_key, flt_date, awb_no, awb_date,sum(nvl(pman_pcs,0)) manf_pc, sum(nvl(pman_wt,0)) manf_wt
	   from exp_pmanifest_awb 
	   GROUP BY flt_key, flt_date, awb_no, awb_date
	   UNION 
	   select flt_key flt_key, flt_date flt_date, awb_no awb_no,awb_date awb_date, sum(nvl(bulk_pcs,0)+nvl(ppk_pcs,0)) manf_pc, sum(nvl(bulk_wt,0)+nvl(ppk_wt,0)) manf_wt
	   from EXP_PMAN_TARMAC_AWB
	   group by flt_key,awb_no,awb_date,flt_date) 
	    WHERE FLT_KEY = ddt.SHP_CNTG_FLT_KEY
	    AND FLT_DATE  = ddt.SHP_CNTG_FLT_Date
	    AND AWB_NO    = DDT.AWB_NO
	    AND AWB_DATE  = DDT.AWB_DATE
	   ) as pmanPcWt,
          
		        
		(select sum(SHP.RECD_PCS)||'/'|| sum(SHP.RECD_WT) from  IMP_CAR_SHP SHP
		          where SHP.AWB_NO = DDT.AWB_NO and SHP.AWB_DATE = DDT.AWB_DATE
		          and  SHP.FLT_KEY = DDT.FLT_KEY and SHP.FLT_DATE = DDT.FLT_DATE group by SHP.AWB_NO,SHP.AWB_DATE,SHP.FLT_KEY,SHP.FLT_DATE) as bdPcWt, 
		(select loc_code from  ULD_INVENTORY uldInv where ddt.uld_key = uldInv.uld_key and rownum = 1) locn, 
		NVL(JODTL.PC,0) joPcs, NVL(JODTL.WT,0) joWt,          
		NVL(ddt.SHP_TRF_PC,0) trfPcs, NVL(ddt.SHP_TRF_WT,0) trfWt,
		nvl(ddt.LOADED_PCS,0) pcs,nvl(ddt.LOADED_WT,0) wt, ddt.SHP_TRF_PC trfPcs , ddt.SHP_TRF_WT  trfWt, ddt.BRK_BULK brkBulk,
		round(ddtEtd.etdChangedHrs) etdChangedHrs, 
		       round(ddtEtd.etdChangedMin) etdChangedMin,
		       round(ddtEtd.etdChangedHrs)  || 'h'|| (round(ddtEtd.etdChangedMin) - (ROUND(ddtEtd.etdChangedHrs) * 60)) ||'m' etdChangedHrsMin,
		   ddt.TRF_TYPE trfType, 
		   ddt.TR_NO ddtTrNo, ddt.SDOC_LINE_NO ddtSdocLineNo, ddt.UDOC_LINE_NO ddtUdocLineNo, ddt.DOC_LINE_NO ddtDocLineNo,
		   ddt.SHP_CNTG_FLT_KEY cntgFltKey, to_char(ddt.SHP_CNTG_FLT_DATE,'DDMONYY') cntgFltDate,  
		   ddt.SHP_CNTG_FLT_KEY oldCntgFltKey, to_char(ddt.SHP_CNTG_FLT_DATE,'DDMONYY') oldCntgFltDate,  
		   decode(ddt.SHP_CNTG_FLT_KEY,null,'',PKG_COMMON.get_flt_carr(ddt.SHP_CNTG_FLT_KEY)) cntgFltCarr, REPLACE(ddt.SHP_CNTG_FLT_KEY, PKG_COMMON.get_flt_carr(ddt.SHP_CNTG_FLT_KEY), '') cntgFltNo,
		   decode(ddt.SHP_CNTG_FLT_KEY,null,'',PKG_COMMON.get_flt_carr(ddt.SHP_CNTG_FLT_KEY)) oldCntgFltCarr, REPLACE(ddt.SHP_CNTG_FLT_KEY, PKG_COMMON.get_flt_carr(ddt.SHP_CNTG_FLT_KEY), '') oldCntgFltNo,
		   ddt.TRF_TYPE trfType, ddt.TRF_TYPE oldTrfType,   ddt.BRK_BULK brkBulk,ddt.BRK_BULK oldBrkBulk,   
		(SELECT STRAGG(STRINGDELIM(SHC, ',')) 
			    	FROM (SELECT DISTINCT SHC, ULD_KEY, FLT_KEY,FLT_DATE, AWB_NO, AWB_DATE,PRIORITY FROM V_IMP_FLT_ULD_SHC ORDER BY PRIORITY DESC
			      	) WHERE AWB_NO = ddt.awb_No AND AWB_DATE = ddt.awb_date
			      	AND FLT_KEY = ddt.flt_key AND FLT_DATE = ddt.flt_Date
			      	and nvl(ULD_KEY,'BULK') = nvl(ddt.ULD_KEY,'BULK')
		                )  shc,
		        (SELECT V.CC_CODE FROM V_CST_CC_CODE_AWB V
		                WHERE V.AWB_NO = ddt.awb_no
		          AND NVL(V.HAWB_NO, '000000000000000000') =  '000000000000000000' AND ROWNUM = 1)  ccode,
		           JO.BU_INST buildInstr, ddt.QT_BU qtBu,
		FUN_GET_FLT_TDIFF_TRFYPE(ddt.shp_CNTG_FLT_KEY, ddt.shp_CNTG_FLT_DATE,ddt.FLT_KEY, ddt.FLT_DATE,'TIME_DIFF' ) timeDiifferance,
		FUN_GET_FLT_TDIFF_TRFYPE(ddt.shp_CNTG_FLT_KEY, ddt.shp_CNTG_FLT_DATE,ddt.FLT_KEY, ddt.FLT_DATE,'TR_TYPE' ) proposeTrfType    
		from V_UNFIN_DDT_DTL ddt
		join (select V_UNFIN_DDT_DTL.SHP_CNTG_FLT_KEY , V_UNFIN_DDT_DTL.SHP_CNTG_FLT_DATE,  V_UNFIN_DDT_DTL.TR_NO , V_UNFIN_DDT_DTL.SDOC_LINE_NO , V_UNFIN_DDT_DTL.UDOC_LINE_NO , V_UNFIN_DDT_DTL.DOC_LINE_NO ,
		          NVL( (TO_CHAR(TO_DATE(TO_CHAR(V_UNFIN_DDT_DTL.BASELINE_ETD,'DDMONYY HH24MI'),'DDMONYY HH24MI') - 
		                      TO_DATE(TO_CHAR(FLT_OPR.SCH_DATE,'DDMONYY')|| ' ' || 
		                      TO_CHAR(NVL(FLT_OPR.EST_TIME,  FLT_OPR.SCH_TIME),'0000') ,'DDMONYY HH24MI')))  * 24  , 0 ) as etdChangedHrs,
				NVL( (TO_CHAR(TO_DATE(TO_CHAR(V_UNFIN_DDT_DTL.BASELINE_ETD,'DDMONYY HH24MI'),'DDMONYY HH24MI') - 
		                      TO_DATE(TO_CHAR(FLT_OPR.SCH_DATE,'DDMONYY')|| ' ' || 
		                      TO_CHAR(NVL(FLT_OPR.EST_TIME,  FLT_OPR.SCH_TIME),'0000') ,'DDMONYY HH24MI')))  * 24 * 60 , 0 ) as etdChangedMin
		      from V_UNFIN_DDT_DTL  , FLT_OPR  where V_UNFIN_DDT_DTL.SHP_TRF_TYPE = 'IF' and V_UNFIN_DDT_DTL.SHP_CNTG_FLT_KEY = FLT_OPR.FLT_KEY and FLT_OPR.SCH_DATE = V_UNFIN_DDT_DTL.SHP_CNTG_FLT_DATE and FLT_OPR.FLT_TYPE ='D') ddtEtd
		      on ddt.SHP_CNTG_FLT_KEY = ddtEtd.SHP_CNTG_FLT_KEY and ddt.SHP_CNTG_FLT_DATE = ddtEtd.SHP_CNTG_FLT_DATE 
		          and  ddtEtd.TR_NO = ddt.TR_NO and ddtEtd.SDOC_LINE_NO = ddt.SDOC_LINE_NO
		          and ddtEtd.UDOC_LINE_NO = ddt.UDOC_LINE_NO and ddtEtd.DOC_LINE_NO = ddt.DOC_LINE_NO
		join FLT_OPR FLT on ddt.SHP_CNTG_FLT_KEY = FLT.FLT_KEY and FLT.SCH_DATE = ddt.SHP_CNTG_FLT_DATE and FLT.FLT_TYPE ='D'
		left join awb on awb.awb_NO = ddt.awb_No and awb.awb_Date = ddt.awb_Date
		LEFT JOIN   (SELECT SUM(JO_DTL.AWB_JO_PC) PC ,SUM(JO_DTL.AWB_JO_WT) WT,JO_HD.FLT_KEY FLT_KEY, JO_HD.FLT_DATE FLT_DATE ,JO_DTL.AWB_NO AWB_NO ,JO_DTL.AWB_DATE AWB_DATE 
		FROM EXP_BU_JO JO_HD 
		JOIN EXP_BU_JO_DTL JO_DTL 
		ON JO_HD.JO_NO = JO_DTL.JO_NO
		WHERE CONFIRMED_YN='Y' 
		group by JO_HD.FLT_KEY, JO_HD.FLT_DATE, JO_DTL.AWB_NO, JO_DTL.AWB_DATE) JODTL
		ON JODTL.FLT_KEY = DDT.SHP_CNTG_FLT_KEY  AND JODTL.FLT_DATE = DDT.SHP_CNTG_FLT_DATE
		AND JODTL.AWB_NO = DDT.AWB_NO  AND JODTL.AWB_DATE =  DDT.AWB_DATE
		left join (select ffmshp.awb_no awb_no, ffmshp.awb_Date awb_Date, sum(nvl(ffmshp.MAN_PCS,0)) PCS, MIN(shmpt_code) shmpt_code,
		    SUM(nvl(ffmshp.MAN_WT,0)) WT, ffmMSG.flt_key flt_key , ffmMSG.flt_Date flt_Date
		    from EDI_FFM_MSG ffmMSG, EDI_FFM_ULD ffmULD , edi_ffm_shp ffmshp 
		    where ffmMSG.FFM_STATUS = 'P' and ffmshp.dest != 'HKG' 
		    and ffmMSG.TR_NO = ffmULD.TR_NO and ffmMSG.TR_NO = ffmshp.TR_NO and ffmULD.Doc_line_no = ffmshp.uDoc_line_no group by ffmshp.awb_no, ffmshp.awb_Date, ffmMSG.flt_key, ffmMSG.flt_Date 
		    ) ffm on ddt.FLT_KEY = ffm.flt_key and ffm.flt_DATE = ddt.FLT_DATE and ffm.awb_NO = ddt.awb_No and ffm.awb_Date = ddt.awb_Date
		left join (select BU_INST, AIRL_RMK, WH_RMK, EXP_BU_JO.FLT_KEY, EXP_BU_JO.FLT_DATE, EXP_BU_JO_DTL.AWB_NO ,EXP_BU_JO_DTL.AWB_DATE 
		            from      EXP_BU_JO ,  EXP_BU_JO_DTL where EXP_BU_JO.JO_NO =  EXP_BU_JO_DTL.JO_NO ) JO 
		            ON JO.FLT_KEY = ddt.SHP_CNTG_FLT_KEY  and JO.FLT_DATE = ddt.SHP_CNTG_FLT_DATE
		              and JO.AWB_NO =DDT.AWB_NO  and JO.AWB_DATE = ddt.awb_Date
		where ddt.SHP_CNTG_FLT_KEY = #expFltKey# and ddt.SHP_CNTG_FLT_DATE = #expFltDate#  
		and ddt.SHP_TRF_TYPE = 'IF' 
		  ]]>
		  <isNotEmpty property="unldgPt" >	 
			  	and ddt.SHP_UNLDG_PT = #unldgPt#
			</isNotEmpty>
			 <isNotEmpty property="impFltKey" >	 
			  	<isNotEmpty property="impFltDate" >	 
			  		and ddt.flt_key = #impFltKey# and ddt.flt_Date = #impFltDate#  
			  	</isNotEmpty>
			</isNotEmpty>
			ORDER BY  ddt.ULD_KEY
</select>

<select id="fetchOutBoundIFUldShpListFltList" parameterClass="cargo.cms.imprt.bo.IFULDShipmentListBO" resultClass="cargo.cms.imprt.bo.IFULDShipmentListInOutAWBBO" >
		<![CDATA[ 
		select
		ddt.flt_key fltKey , to_char(ddt.flt_Date,'DDMONYY')  fltDate
		from V_UNFIN_DDT_DTL ddt
		join (select V_UNFIN_DDT_DTL.SHP_CNTG_FLT_KEY , V_UNFIN_DDT_DTL.SHP_CNTG_FLT_DATE,  V_UNFIN_DDT_DTL.TR_NO , V_UNFIN_DDT_DTL.SDOC_LINE_NO , V_UNFIN_DDT_DTL.UDOC_LINE_NO , V_UNFIN_DDT_DTL.DOC_LINE_NO ,
		          NVL( (TO_CHAR(TO_DATE(TO_CHAR(V_UNFIN_DDT_DTL.BASELINE_ETD,'DDMONYY HH24MI'),'DDMONYY HH24MI') - 
		                      TO_DATE(TO_CHAR(FLT_OPR.SCH_DATE,'DDMONYY')|| ' ' || 
		                      TO_CHAR(NVL(FLT_OPR.EST_TIME,  FLT_OPR.SCH_TIME),'0000') ,'DDMONYY HH24MI')))  * 24  , 0 ) as etdChangedHrs,
				NVL( (TO_CHAR(TO_DATE(TO_CHAR(V_UNFIN_DDT_DTL.BASELINE_ETD,'DDMONYY HH24MI'),'DDMONYY HH24MI') - 
		                      TO_DATE(TO_CHAR(FLT_OPR.SCH_DATE,'DDMONYY')|| ' ' || 
		                      TO_CHAR(NVL(FLT_OPR.EST_TIME,  FLT_OPR.SCH_TIME),'0000') ,'DDMONYY HH24MI')))  * 24 * 60 , 0 ) as etdChangedMin
		      from V_UNFIN_DDT_DTL  , FLT_OPR  where V_UNFIN_DDT_DTL.SHP_TRF_TYPE = 'IF' and V_UNFIN_DDT_DTL.SHP_CNTG_FLT_KEY = FLT_OPR.FLT_KEY and FLT_OPR.SCH_DATE = V_UNFIN_DDT_DTL.SHP_CNTG_FLT_DATE and FLT_OPR.FLT_TYPE ='D') ddtEtd
		      on ddt.SHP_CNTG_FLT_KEY = ddtEtd.SHP_CNTG_FLT_KEY and ddt.SHP_CNTG_FLT_DATE = ddtEtd.SHP_CNTG_FLT_DATE 
		          and  ddtEtd.TR_NO = ddt.TR_NO and ddtEtd.SDOC_LINE_NO = ddt.SDOC_LINE_NO
		          and ddtEtd.UDOC_LINE_NO = ddt.UDOC_LINE_NO and ddtEtd.DOC_LINE_NO = ddt.DOC_LINE_NO
		join FLT_OPR FLT on ddt.SHP_CNTG_FLT_KEY = FLT.FLT_KEY and FLT.SCH_DATE = ddt.SHP_CNTG_FLT_DATE and FLT.FLT_TYPE ='D'
		left join (select nvl(sum(shp_trf_Pc),0) qt_trf_Pcs  , nvl(sum(shp_trf_Wt),0) qt_trf_Wt  ,V_UNFIN_DDT_DTL.SHP_CNTG_FLT_KEY ,  V_UNFIN_DDT_DTL.SHP_CNTG_FLT_DATE,  V_UNFIN_DDT_DTL.TR_NO ,
		          V_UNFIN_DDT_DTL.SDOC_LINE_NO , V_UNFIN_DDT_DTL.UDOC_LINE_NO , V_UNFIN_DDT_DTL.DOC_LINE_NO 
		      from V_UNFIN_DDT_DTL  , FLT_OPR  where V_UNFIN_DDT_DTL.SHP_TRF_TYPE = 'IF' and V_UNFIN_DDT_DTL.SHP_CNTG_FLT_KEY = FLT_OPR.FLT_KEY and FLT_OPR.SCH_DATE = V_UNFIN_DDT_DTL.SHP_CNTG_FLT_DATE and FLT_OPR.FLT_TYPE ='D'
		      group by V_UNFIN_DDT_DTL.SHP_CNTG_FLT_KEY,  V_UNFIN_DDT_DTL.SHP_CNTG_FLT_DATE,  V_UNFIN_DDT_DTL.TR_NO, V_UNFIN_DDT_DTL.SDOC_LINE_NO, V_UNFIN_DDT_DTL.UDOC_LINE_NO, V_UNFIN_DDT_DTL.DOC_LINE_NO 
		      ) ddtQt
		      on ddt.SHP_CNTG_FLT_KEY = ddtQt.SHP_CNTG_FLT_KEY and ddt.SHP_CNTG_FLT_DATE = ddtQt.SHP_CNTG_FLT_DATE 
		          and  ddtQt.TR_NO = ddt.TR_NO and ddtQt.SDOC_LINE_NO = ddt.SDOC_LINE_NO
		          and ddtQt.UDOC_LINE_NO = ddt.UDOC_LINE_NO and ddtQt.DOC_LINE_NO = ddt.DOC_LINE_NO
		left join awb on awb.awb_NO = ddt.awb_No and awb.awb_Date = ddt.awb_Date
		left join (select ffmshp.awb_no awb_no, ffmshp.awb_Date awb_Date, ffmshp.ORG ORG, ffmshp.DEST DEST, nvl(ffmshp.MAN_PCS,0) PCS,
		    nvl(ffmshp.MAN_WT,0) WT, ffmMSG.flt_key flt_key , ffmMSG.flt_Date flt_Date, ffmULD.ULD_KEY ULD_KEY, ffmMSG.TR_No tr_NO 
		    from EDI_FFM_MSG ffmMSG, EDI_FFM_ULD ffmULD , edi_ffm_shp ffmshp 
		    where ffmMSG.FFM_STATUS = 'P' and ffmshp.dest != 'HKG' 
		    and ffmMSG.TR_NO = ffmULD.TR_NO and ffmMSG.TR_NO = ffmshp.TR_NO and ffmULD.Doc_line_no = ffmshp.uDoc_line_no 
		    ) ffm on ddt.SHP_CNTG_FLT_KEY = ffm.flt_key and ffm.flt_DATE = ddt.SHP_CNTG_FLT_DATE and ffm.awb_NO = ddt.awb_No and ffm.awb_Date = ddt.awb_Date
		left join (select BU_INST, AIRL_RMK, WH_RMK, EXP_BU_JO.FLT_KEY, EXP_BU_JO.FLT_DATE, EXP_BU_JO_DTL.AWB_NO ,EXP_BU_JO_DTL.AWB_DATE 
		            from      EXP_BU_JO ,  EXP_BU_JO_DTL where EXP_BU_JO.JO_NO =  EXP_BU_JO_DTL.JO_NO ) JO 
		            ON JO.FLT_KEY = DDT.SHP_CNTG_FLT_KEY  and JO.FLT_DATE = DDT.SHP_CNTG_FLT_DATE
		              and JO.AWB_NO =DDT.AWB_NO  and JO.AWB_DATE = ddt.awb_Date
		where ddt.SHP_CNTG_FLT_KEY = #expFltKey# and ddt.SHP_CNTG_FLT_DATE = #expFltDate#  
		and ddt.SHP_TRF_TYPE = 'IF' 
		  ]]>
		   <isNotEmpty property="unldgPt" >	 
			  	and ddt.SHP_UNLDG_PT = #unldgPt#
			</isNotEmpty>
			 <isNotEmpty property="impFltKey" >	 
			  	<isNotEmpty property="impFltDate" >	 
			  		and ddt.flt_key = #impFltKey# and ddt.flt_Date = #impFltDate#  
			  	</isNotEmpty>
			</isNotEmpty>
		group By ddt.flt_key , ddt.flt_Date
</select>
<select id="fetchIndBoundIFAwbInvtryList" parameterClass="cargo.cms.imprt.bo.IFULDShipmentListInOutAWBBO" resultClass="cargo.cms.imprt.bo.IFULDShipmentListInOutAWBBO" >
	<![CDATA[ 
		select A.LOC_CODE locn, 
		A.LSP_NO lspNo, 
		A.ULD_KEY uldKey,
		A.LOCN_PCS locnPcs, 
		A.LOCN_WT locnWt, 
		A.WH_DAM_IND whDamInd , 
		case when A.LSP_NO is not null then (select L.TARGET from LSP_INVENTORY L where L.LSP_NO = A.LSP_NO)  
		else case when A.ULD_KEY is not null then (select U.TARGET from ULD_INVENTORY U where U.ULD_KEY = A.ULD_KEY)
		else '' end end  as  target
		from awb_inventory A where awb_no = #awbNo# and awb_date = #awbDate# and flt_key = #fltKey# and flt_Date = #fltDate#
	 ]]>
</select>

<select id="sqlAwbCountafterBD"  parameterClass="java.lang.String" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM AWB WHERE AWB_NO=#PARAM# AND AWB_CLOSED_YN='N'
</select>
<update id="updateimpcarshprestorereset" parameterClass="cargo.cms.imprt.bo.CarShpBO">
	UPDATE IMP_CAR_SHP 
	SET     LM_USER_ID =  #userID#, 
			LM_DATE   =  sysdate
	WHERE  AWB_NO	  =   #awbNo#  AND
		   AWB_DATE	  =	  TO_DATE(#awbDate#,'DDMONYY') 
</update>	
<select id="chkBldpExistsCnt"  parameterClass="cargo.cms.imprt.bo.AWBStorDtlBO" resultClass="java.lang.Integer">
	SELECT COUNT(1) FROM EXP_PMANIFEST_ULD_AWB WHERE AWB_NO=#awbNo# AND AWB_DATE=TO_DATE(#awbDate#,'DDMONYY') 
</select>

<select id="getULDPPKNBKRecord_Count" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		select COUNT(1) from uld_inventory where uld_key = #PARAM# and handling_mode in ('PPK','NBK') and (transit_type is null or transit_type not in ('IF'))
</select>

<select id="getULDPPKNBKRecordImpUldDDT_Count" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
	SELECT 
		COUNT(1) 
	FROM IMP_ULD_LIST A
	LEFT JOIN V_DDT_DTL B on B.FLT_KEY=A.FLT_KEY AND B.FLT_DATE=A.FLT_DATE AND B.ULD_KEY=A.ULD_KEY 
	WHERE 
		A.ULD_KEY=#uldKey# AND A.FLT_KEY=#fltKey# AND A.FLT_DATE=#fltDate# AND A.HANDLING_MODE IN ('PPK','NBK') AND (B.TRF_TYPE IS NULL OR B.TRF_TYPE NOT IN ('IF'))
</select>


<select id="getULDPPKNBKRecordImpUldDDT_CountTM" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
	SELECT COUNT(1) FROM IMP_ULD_LIST A WHERE A.ULD_KEY= #uldKey# AND A.FLT_KEY= #fltKey# AND A.FLT_DATE= #fltDate# AND A.HANDLING_MODE = 'NBK'
	AND EXISTS (select null from IMP_RAMP_INB_CHK_DTL  WHERE ULD_KEY= #uldKey# AND FLT_KEY= #fltKey# 
	AND FLT_DATE= #fltDate# AND (NVL(RESDIT_IND,'N') = 'Y' or (CPM_IND='Y' and LOAD_TYPE='M') ))
</select>

<select id="getULDPPKNBKRecordImpUldDDT_CountTM2" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
	SELECT COUNT(1) FROM IMP_ULD_LIST A WHERE A.ULD_KEY= #uldKey# AND A.FLT_KEY= #fltKey# AND A.FLT_DATE= #fltDate# 
	AND EXISTS (select null from IMP_RAMP_INB_CHK_DTL  WHERE ULD_KEY= #uldKey# AND FLT_KEY= #fltKey# 
	AND FLT_DATE= #fltDate# AND (NVL(RESDIT_IND,'N') = 'Y' or (CPM_IND='Y' and LOAD_TYPE='M') ))
</select>

<select id="getMailASCargo_CountTM" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
	SELECT COUNT(1) FROM MAST_CARRIER where code = substr(#fltKey#,0,2) and NVL(MAIL_AS_CARGO,'X') = 'Y' 
</select>

<select id="getCountULDAlreaadyCheckin" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
	select count(1) from imp_ramp_chk_dtl where uld_key=#uldKey# and flt_key=#fltKey# and flt_date=#fltDate# and chkin_yn='Y'
</select>

<select id="getAWBListFromFFM_view" parameterClass="cargo.cms.imprt.bo.ULDCheckInBO" resultClass="cargo.cms.imprt.bo.AWBStorDtlBO">
		select awb_no as awbNo,to_char(awb_date,'DDMONYY') as awbDate,(select decode(count(1),0,'N','Y') from awb where awb_no=v_ffm_dtl.awb_no and awb_date=v_ffm_dtl.awb_date and awb_closed_yn='Y') as awbClosedyn,   man_pcs as strgPcs, man_wt as strgWt 
			from v_ffm_dtl where flt_key=#flightKey# and flt_date=#flightDate# and uld_key=#uldKey#
</select>


<select id="fiwMessageChecking" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
	 WITH FFMINFO  AS (    
	    SELECT flt_key,flt_date,AWB_NO,AWB_DATE, sum(strgPcs) as strgPcs,sum(strgWt) as strgWt  from (
	      SELECT flt_key,flt_date,AWB_NO,AWB_DATE,man_pcs as strgPcs, man_wt as strgWt  FROM V_FFM_DTL  
	      where flt_key= #FLT_KEY# and flt_date= to_date(#FLT_DATE#,'DDMONYY') and awb_no = #AWB_NO# AND awb_date = to_date(#AWB_DATE#,'DDMONYY')
	      AND uld_key is not null and EXISTS (select null from IMP_RAMP_CHK_DTL where FLT_KEY = V_FFM_DTL.flt_key and flt_date = V_FFM_DTL.flt_date and uld_key = V_FFM_DTL.uld_key )
      		UNION ALL	      
	      SELECT flt_key,flt_date,AWB_NO,AWB_DATE,strg_pcs as strgPcs, strg_wt as strgWt  FROM IMP_AWB_STRG_DTL a
	       LEFT JOIN MAST_ULD_TYPE M1 ON SUBSTR(a.CHKIN_ULD_KEY,0,3) = M1.CODE
	      where flt_key= #FLT_KEY# and flt_date= to_date(#FLT_DATE#,'DDMONYY') and awb_no = #AWB_NO# AND awb_date = to_date(#AWB_DATE#,'DDMONYY')
	      AND (NVL(DUMMY_H_CONT_IND,'N') = 'Y' OR NVL(H_CONT_IND,'N') = 'Y' OR NVL(BT_IND,'N') = 'Y')
	    ) GROUP by flt_key,flt_date,AWB_NO,AWB_DATE
	  ),
	  MANFINFO AS(
	      SELECT flt_key,flt_date,AWB_NO,AWB_DATE,MANIFEST_PCS as manfPcs, MANIFEST_WT as manfWt FROM imp_car_shp  WHERE 
	      flt_key= #FLT_KEY# and flt_date= to_date(#FLT_DATE#,'DDMONYY') and awb_no = #AWB_NO# AND awb_date = to_date(#AWB_DATE#,'DDMONYY')
	  ) 
	  select COUNT(1) as result from FFMINFO a , MANFINFO b where a.strgPcs = b.manfPcs and a.strgWt = b.manfWt
</select>

<select id="getAWBListFromRESDIT" parameterClass="java.util.HashMap" resultClass="cargo.cms.imprt.bo.AWBStorDtlBO">
		SELECT A.AWB_NO as awbNo,to_char(A.AWB_DATE,'DDMONYY') as awbDate,B.TR_AWB_NO AS trNo,B.TAG_NO AS tagNo ,B.TAG_WT AS wt,
		D.ORIG as orig,
		D.DEST as dest
        FROM EDI_RESDIT_AWB_DTL A
        JOIN EDI_RESDIT_TAG_DTL B ON A.TR_AWB_NO = B.TR_AWB_NO
        JOIN EDI_RESDIT_HD C ON  C.TR_NO = A.TR_NO
        JOIN (SELECT DTL.TAG_NO,HD.AWB_NO,HD.AWB_DATE,HD.ORIG,HD.DEST FROM EDI_CARDIT_HD HD , EDI_CARDIT_TAG_DTL DTL WHERE HD.TR_NO = DTL.TR_NO) D ON  D.TAG_NO = B.TAG_NO AND D.AWB_NO = A.AWB_NO AND D.AWB_DATE = A.AWB_DATE	
        WHERE C.FLT_KEY= #fltKey# AND C.FLT_DATE= TO_DATE(#fltDate#,'DDMONYY') AND B.CONTAINER_NO = #uldKey#
</select>

<select id="getAnotherImportFlightDtl_CheckIn"  parameterClass="cargo.cms.imprt.bo.ULDCheckInBO"  resultClass="cargo.cms.imprt.bo.ULDCheckInBO">			  
		select ui.flt_key flightKey,to_char(ui.flt_date,'DDMONYY') flightDate
		from ULD_INVENTORY ui
		join FLT_OPR_EVENTS foe on foe.flt_key = ui.flt_key and foe.sch_date = ui.flt_date and foe.flt_type = 'D' 
		where not (nvl(ui.imp_flt_key,'*') = #flightKey# and nvl(ui.imp_flt_date,'01JAN70') = #flightDate#) and ui.flt_type='E' and ui.uld_key=#uldKey#
		and foe.ctm_out_date is null
</select>
<select id="getFltClrforCAR" parameterClass="cargo.cms.imprt.bo.MaintainCARBO" resultClass="java.lang.String" >	
	select DECODE(COUNT(1),0,'N','Y') as flightClear 
	FROM CST_ACK WHERE FLT_KEY = #fltKey# AND FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND ACK_REC_TYPE = 'CLR' AND FLT_TYPE = 'I'
</select>

<select id="checkAWBhaveNegitivePcsWt" parameterClass="map" resultClass="java.lang.Integer" >	
	select count(*) from imp_car_shp where awb_no=#awbNo# and awb_date=#awbDate# and (recd_pcs &lt; 0 or recd_wt &lt; 0)
</select>

<select id="getMinStrgCharge" parameterClass="java.lang.String" resultClass="java.lang.String" >	
	select trim(to_char(min_chrg,'99999D99')) from bill_itm_master where itm_code=#PARAM#
</select>
 <select id="selectSRFBkgSRFInd" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO" resultClass="java.lang.String">
 	select booking_no from imp_booking_dtl a,imp_srf b where booking_no in (
 	select booking_no from imp_booking_dtl where srf_no=#srfNo#) and a.srf_no=b.srf_no and b.status!='VOID' and rownum=1
 </select>
 <update id="updateSRFBkgSRFInd" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
 	update imp_booking set srf_issued='N',LM_USER_ID=#userId#,lm_date=sysdate where booking_no=#bookingNo# 
 </update>

<select id="chkUldExistsInInventoryForIF_TCCL" parameterClass="map" resultClass="java.lang.Integer" >
<![CDATA[
    select COUNT(1) 
    	from  uld_inventory u
		left join exp_pmanifest_uld p on p.flt_key=u.flt_key and p.flt_date=u.flt_date and p.uld_bt_no=u.uld_key
		left join exp_pman_tarmac_uld t on t.flt_key=u.flt_key and t.flt_date=u.flt_date and t.uld_bt_no=u.uld_key
		where  u.uld_key = #uldKey#  
		and u.owned_inv = 'Y' 
		and ( not(u.imp_flt_key = #fltKey# and imp_flt_date =#fltDate#)
		      or p.flt_key is not null
		      or (t.flt_key is not null and  #firstFinalizedInd# = 'Y')
		      or (u.flt_type = 'E' and not(u.flt_key = #cntFltKey# and u.flt_date = #cntFltDate# ))
		      )
]]>
</select>

<update id="resetDDTFinalVer_DDT_MSG" parameterClass="map">
 	UPDATE DDT_MSG SET FINAL_VER_IND='N', LM_USER_ID=#lmUserId#, LM_DATE = SYSDATE WHERE  FLT_KEY = #fltKey# AND FLT_DATE = #fltDate# AND DDT_STATUS = 'P'
</update>


<update id="resetResetFinalize_TCC" parameterClass="map">
 	update flt_opr_events set ddt_finalise_date = '' , ddt_finalise_user_id = '', MANUAL_HANDLED_TCC = 'Y' , LM_USER_ID = #lmUserId#, LM_DATE = SYSDATE where flt_key = #fltKey# and sch_date = #fltDate# and FLT_TYPE = 'A'
</update>

<select id="getCurrentDDT_Trno" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		select m.TR_NO as trNo from ddt_msg m where m.flt_key = #FLT_KEY# and m.flt_date = TO_DATE(#FLT_DATE#,'DDMONYY') AND m.ddt_status='P'
</select>


<update id="update_DDT_MSG_AWB_MAN_IND" parameterClass="map">
 	UPDATE ddt_shp SET MANUAL_IND='', LM_USER_ID=#LM_USER_ID#, LM_DATE = SYSDATE WHERE  TR_NO = #TR_NO#
</update>

<delete id="delete_DDT_MSG_DEL_INFO" parameterClass="java.util.HashMap" >
 	DELETE FROM ddt_shp_del where flt_key = #FLT_KEY# and flt_date = TO_DATE(#FLT_DATE#,'DDMONYY')
</delete>

<select id="validateContourcode_TCCL" parameterClass="java.lang.String"  resultClass="java.lang.Integer">
 	select count(1) from MAST_CONTR_IND where CODE = #PARAM#
</select>

<select id="getCount_IMP_RAMP_CHK_DTL_TCCL" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" resultClass="java.lang.Integer" >
<![CDATA[
    select count(1) from  IMP_RAMP_CHK_DTL  where flt_key = #fltKey# and flt_Date = #fltDate# and uld_key=#uldKey# and chkin_yn='Y'
]]>
</select>
<select id="getCount_EXP_CHKOUT_HD_TCCL" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" resultClass="java.lang.Integer" >
<![CDATA[
    select count(1) from  EXP_CHKOUT_HD  where flt_key = #cntgFltKey# and flt_Date = #cntgFltDate# 
]]>
</select>
<select id="getCount_EXP_CHKOUT_DTL_TCCL" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" resultClass="java.lang.Integer" >
<![CDATA[
    select count(1) from  EXP_CHKOUT_DTL  where ULD_KEY = #uldKey# and flt_key = #cntgFltKey# and flt_Date = #cntgFltDate# 
]]>
</select>
<insert id="insert_EXP_CHKOUT_HD_TCCL" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
	Insert into EXP_CHKOUT_HD (FLT_KEY,FLT_DATE,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,FLT_TYPE)
	values (#cntgFltKey#,#cntgFltDate#,#lmUserId#,sysdate,#lmUserId#,sysdate,'E')
</insert>
	
<insert id="insert_EXP_CHKOUT_DTL_TCCL" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
	Insert into EXP_CHKOUT_DTL (FLT_KEY,FLT_DATE,ULD_KEY,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE) 
	values (#cntgFltKey#,#cntgFltDate#,#uldKey#,#lmUserId#,sysdate,#lmUserId#,sysdate)
</insert>
<select id="getCount_EXP_CHKOUT_DTL_TCCL_OLD_VALIDATE" parameterClass="java.util.HashMap" resultClass="java.lang.Integer" >
<![CDATA[
    select count(1) from  EXP_CHKOUT_DTL  where flt_key = #oldCntgFltKey# and flt_date = #oldCntgFltDate# and uld_key = #uldKey# and chkout_date is not null
]]>
</select>
<delete id="delete_EXP_CHKOUT_HD_OLD_TCCL" parameterClass="java.util.HashMap" >
	delete from EXP_CHKOUT_DTL where flt_key = #oldCntgFltKey# and flt_date = #oldCntgFltDate# and uld_key = #uldKey# and chkout_date is null
</delete>
<select id="getCount_EXP_CHKOUT_DTL_TCCL_OLD" parameterClass="java.util.HashMap" resultClass="java.lang.Integer" >
<![CDATA[
    select count(1) from  EXP_CHKOUT_DTL  where flt_key = #oldCntgFltKey# and flt_Date = #oldCntgFltDate# 
]]>
</select>
<delete id="delete_EXP_CHKOUT_DTL_OLD_TCCL" parameterClass="java.util.HashMap" >
	delete from EXP_CHKOUT_HD where flt_key = #oldCntgFltKey# and flt_date = #oldCntgFltDate#
</delete>
<select id="validateCCCode_TCCL" parameterClass="java.util.HashMap" resultClass="java.lang.String" >
      SELECT DECODE(#PROCESS#,'PREMAN',restrict_preman, 'BUILDUP_COMP_ULD', RESTRICT_BUILDUP_COMP_ULD) as v_restrict
	   FROM mast_constraint_code
	   WHERE code = #CC_CODE#
</select>

<select id="getEnquireTransListInternal" parameterClass="cargo.cms.imprt.bo.EnqTranshipmentBO" resultClass="cargo.cms.imprt.bo.EnqTranshipmentBO">
<![CDATA[
SELECT car.awb_no awbNo,
  SUBSTR(car.awb_no,'0','3') AS awbPfx,
  SUBSTR(car.awb_no,'4')     AS awbSfx,
  car.flt_key fltKey,
  TO_CHAR(car.flt_date,'DDMONYY') fltDate,
  PKG_COMMON.get_flt_sta(car.FLT_KEY, car.FLT_DATE, 'A') AS sta,
  PKG_COMMON.get_flt_eta(car.FLT_KEY, car.FLT_DATE, 'A') AS eta,
  awb.orig origin,
  awb.dest dest,
  DECODE(awb.spl_code1, NULL, '', awb.spl_code1 )
  || DECODE(awb.spl_code2, NULL, '',','
  || awb.spl_code2 )
  || DECODE(awb.spl_code3, NULL, '', ','
  || awb.spl_code3 )
  || DECODE(awb.spl_code4, NULL, '', ','
  || awb.spl_code4 )
  || DECODE(awb.spl_code5, NULL, '', ','
  || awb.spl_code5 )
  || DECODE(awb.spl_code6, NULL, '', ','
  || awb.spl_code6 )
  || DECODE(awb.spl_code7, NULL, '', ','
  || awb.spl_code7 )
  || DECODE(awb.spl_code8, NULL, '', ','
  || awb.spl_code8 )
  || DECODE(awb.spl_code9, NULL, '', ','
  || awb.spl_code9)AS shc,
  car.manifest_pcs manPcs,
  car.manifest_wt manWt,
  car.recd_pcs invPcs,
  car.recd_wt invWt ,
  pman.pmanPcs pmanPcs,
  pman.pmanWt pmanWt ,
  DECODE(
  (SELECT COUNT(1) FROM IMP_TRM_HD WHERE AWB_NO=car.awb_no
  AND AWB_DATE                                 =TO_CHAR(car.awb_date, 'DDMONYY')
  ),0, (DECODE(
  (SELECT COUNT(1) FROM TRF_ACCEPT_HD WHERE AWB_NO=car.awb_no
  AND AWB_DATE                                 =TO_CHAR(car.awb_date, 'DDMONYY')
  AND STATUS != 'V'
  ),0, (DECODE(
  (SELECT COUNT(1) FROM TRF_ACCEPT_HD,
    TRF_ACCEPT_BRKDN WHERE TRF_ACCEPT_BRKDN.TRF_NO=TRF_ACCEPT_HD.TRF_NO
  AND TRF_ACCEPT_BRKDN.AWB_NO                  =car.awb_no
  AND TRF_ACCEPT_BRKDN.AWB_DATE                =TO_CHAR(car.awb_date, 'DDMONYY')
  AND TRF_ACCEPT_HD.STATUS != 'V'
  ),0,NULL,
  (SELECT SUM(pcs)
  FROM TRF_ACCEPT_HD,
    TRF_ACCEPT_BRKDN
  WHERE TRF_ACCEPT_BRKDN.TRF_NO=TRF_ACCEPT_HD.TRF_NO
  AND TRF_ACCEPT_BRKDN.AWB_NO  =car.awb_no
  AND TRF_ACCEPT_BRKDN.AWB_DATE=TO_CHAR(car.awb_date, 'DDMONYY')
  AND TRF_ACCEPT_HD.STATUS != 'V'
  ))),
  (SELECT SUM(RCL_PCS)
  FROM TRF_ACCEPT_HD
  WHERE AWB_NO=car.awb_no
  AND AWB_DATE=TO_CHAR(car.awb_date, 'DDMONYY')
  AND STATUS != 'V'
  ))),
  (SELECT SUM(dtl.pcs)
  FROM IMP_TRM_DTL dtl,
    IMP_TRM_HD hd
  WHERE dtl.trm_no=hd.trm_no
  AND dtl.flt_key =car.flt_key
  AND dtl.flt_date=car.flt_date
  AND dtl.awb_no  =car.awb_no
  AND dtl.awb_date=car.awb_date
  AND hd.status   ='POSTED'
  )) AS ctPcs,
  DECODE(
  (SELECT COUNT(1) FROM IMP_TRM_HD WHERE AWB_NO=car.awb_no
  AND AWB_DATE                                 =TO_CHAR(car.awb_date, 'DDMONYY')
  ),0, (DECODE(
  (SELECT COUNT(1) FROM TRF_ACCEPT_HD WHERE AWB_NO=car.awb_no
  AND AWB_DATE                                 =TO_CHAR(car.awb_date, 'DDMONYY')
  AND STATUS != 'V'
  ),0, (DECODE(
  (SELECT COUNT(1) FROM TRF_ACCEPT_HD,
    TRF_ACCEPT_BRKDN WHERE TRF_ACCEPT_BRKDN.TRF_NO=TRF_ACCEPT_HD.TRF_NO
  AND TRF_ACCEPT_BRKDN.AWB_NO                  =car.awb_no
  AND TRF_ACCEPT_BRKDN.AWB_DATE                =TO_CHAR(car.awb_date, 'DDMONYY')
  AND TRF_ACCEPT_HD.STATUS != 'V'
  ),0,NULL,
  (SELECT SUM(wt)
  FROM TRF_ACCEPT_HD,
    TRF_ACCEPT_BRKDN
  WHERE TRF_ACCEPT_BRKDN.TRF_NO=TRF_ACCEPT_HD.TRF_NO
  AND TRF_ACCEPT_BRKDN.AWB_NO  =car.awb_no
  AND TRF_ACCEPT_BRKDN.AWB_DATE=TO_CHAR(car.awb_date, 'DDMONYY')
  AND TRF_ACCEPT_HD.STATUS != 'V'
  ))),
  (SELECT SUM(RCL_WT)
  FROM TRF_ACCEPT_HD
  WHERE AWB_NO=car.awb_no
  AND AWB_DATE=TO_CHAR(car.awb_date, 'DDMONYY')
  AND STATUS != 'V'
  ))),
  (SELECT SUM(dtl.wt)
  FROM IMP_TRM_DTL dtl,
    IMP_TRM_HD hd
  WHERE dtl.trm_no=hd.trm_no
  AND dtl.flt_key =car.flt_key
  AND dtl.flt_date=car.flt_date
  AND dtl.awb_no  =car.awb_no
  AND dtl.awb_date=car.awb_date
  AND hd.status   ='POSTED'
  )) AS ctWt,
  trk.trkPcs truckManfPcs,
  trk.trkWt truckManfWt
FROM awb awb,
  imp_car_shp car
LEFT OUTER JOIN
  (SELECT awb_no,
    awb_date,
    SUM(pman_pcs) pmanPcs,
    SUM(pman_wt) pmanWt
  FROM EXP_PMANIFEST_AWB
  GROUP BY awb_no,
    awb_date
  ) pman
ON car.awb_no   = pman.awb_no
AND car.awb_date=pman.awb_date
LEFT OUTER JOIN
  (SELECT awb_no,
    awb_date,
    imp_flt_key,
    imp_flt_date,
    SUM(trk_manf_pcs) trkPcs,
    SUM(trk_manf_wt) trkWt
  FROM ITM_TRK_MANF_SHP
  GROUP BY awb_no,
    awb_date,
    imp_flt_key,
    imp_flt_date
  )trk
ON car.awb_no   = trk.awb_no
AND car.awb_date=trk.awb_date
AND car.flt_key = trk.imp_flt_key
AND car.flt_date=trk.imp_flt_date
WHERE car.awb_no=awb.awb_no
AND car.awb_date=awb.awb_date
AND awb.awb_type='T'
]]>
  			<isNotEmpty property="fltKey">
  				and car.flt_key=#fltKey#
  			</isNotEmpty>
			<isNotEmpty property="fltDate">
			  	and car.flt_date=#fltDate#
			</isNotEmpty>
 			<isNotEmpty property="awbNo" >	 
			  	and car.awb_no = #awbNo#
			</isNotEmpty>
			 <isNotEmpty property="origin" >	 
			  	and awb.orig = #origin#
			</isNotEmpty>
			 <isNotEmpty property="dest" >	 
			  	and awb.dest = #dest#
			</isNotEmpty>
			 <isNotEmpty property="splCode1" >	 
			  	and #splCode1# in  (awb.SPL_CODE1, awb.SPL_CODE2, awb.SPL_CODE3, awb.SPL_CODE4, awb.SPL_CODE5, awb.SPL_CODE6, awb.SPL_CODE7, awb.SPL_CODE8, awb.SPL_CODE9)
			</isNotEmpty>
			 <isNotEmpty property="splCode2" >	 
			  	and #splCode2# in  (awb.SPL_CODE1, awb.SPL_CODE2, awb.SPL_CODE3, awb.SPL_CODE4, awb.SPL_CODE5, awb.SPL_CODE6, awb.SPL_CODE7, awb.SPL_CODE8, awb.SPL_CODE9)
			</isNotEmpty>
			 <isNotEmpty property="splCode3" >	 
			  	and #splCode3# in  (awb.SPL_CODE1, awb.SPL_CODE2, awb.SPL_CODE3, awb.SPL_CODE4, awb.SPL_CODE5, awb.SPL_CODE6, awb.SPL_CODE7, awb.SPL_CODE8, awb.SPL_CODE9)
			</isNotEmpty>
			 <isNotEmpty property="fltDateFrom" >	 
			  <isNotEmpty property="fltDateTo" >	 
			  	and car.flt_date between TO_DATE(#fltDateFrom#,'DDMONYY')  
    			AND TO_DATE(#fltDateTo#,'DDMONYY') 
			</isNotEmpty>
			<isEmpty property="carrCode">
				<isNotEmpty property="loginCarrier">
				   AND ( car.carr_code = #loginCarrier#
                        OR  car.carr_code IN (SELECT CARR_CODE FROM MAST_CARR_GRP 
                        WHERE GRP_CARR_CODE  = #loginCarrier#))             
            	</isNotEmpty>
            </isEmpty>
			</isNotEmpty> order by fltDate asc,sta asc,awbNo asc
</select>
<select id="getEnquireTransListExternal" parameterClass="cargo.cms.imprt.bo.EnqTranshipmentBO" resultClass="cargo.cms.imprt.bo.EnqTranshipmentBO">
select car.awb_no awbNo,SUBSTR(car.awb_no,'0','3') AS awbPfx,SUBSTR(car.awb_no,'4') AS awbSfx, car.flt_key fltKey, to_char(car.flt_date,'DDMONYY') fltDate,PKG_COMMON.get_flt_sta(car.FLT_KEY, car.FLT_DATE, 'A') as sta,PKG_COMMON.get_flt_eta(car.FLT_KEY, car.FLT_DATE, 'A') as eta,
awb.orig origin,awb.dest dest, ica.shpr_name as shipper,
              car.manifest_pcs manPcs, car.manifest_wt manWt, car.recd_pcs invPcs, car.recd_wt invWt,                       
                          	(SELECT V.CC_CODE FROM V_CST_IMP_CC_CODE_AWB V
			WHERE v.flt_key = car.flt_key and v.flt_date = car.flt_date AND V.AWB_NO = car.AWB_NO 
			 AND NVL(V.HAWB_NO, '000000000000000000') =  '000000000000000000' AND ROWNUM = 1) ccCode,
			 nvl(awb.CNSL_IND,'N') consolInd,ica.CSGNE_NAME AS consignee
from 
awb awb, imp_car_awb ica ,imp_car_shp car   
where car.awb_no=awb.awb_no and car.awb_date=awb.awb_date and car.awb_no=ICA.awb_no and car.awb_date=ICA.awb_date
  and awb.awb_type='T' and
  		(awb.spl_code1 = (SELECT RULE_VALUE  FROM CMSRULES WHERE RULE_CODE = 'ENQ_TRNS_SHC') OR awb.spl_code2 =  (SELECT RULE_VALUE  FROM CMSRULES WHERE RULE_CODE = 'ENQ_TRNS_SHC') 
  		OR awb.spl_code3 =  (SELECT RULE_VALUE  FROM CMSRULES WHERE RULE_CODE = 'ENQ_TRNS_SHC') OR 
			awb.spl_code4 =  (SELECT RULE_VALUE  FROM CMSRULES WHERE RULE_CODE = 'ENQ_TRNS_SHC') OR awb.spl_code5 =  'RFS' OR awb.spl_code6 = (SELECT RULE_VALUE  FROM CMSRULES WHERE RULE_CODE = 'ENQ_TRNS_SHC') OR 
			awb.spl_code7 =  (SELECT RULE_VALUE  FROM CMSRULES WHERE RULE_CODE = 'ENQ_TRNS_SHC') OR awb.spl_code8 =  (SELECT RULE_VALUE  FROM CMSRULES WHERE RULE_CODE = 'ENQ_TRNS_SHC') 
			OR awb.spl_code9 =  (SELECT RULE_VALUE  FROM CMSRULES WHERE RULE_CODE = 'ENQ_TRNS_SHC'))
  			<isNotEmpty property="fltKey" >	 
			  <isNotEmpty property="fltDate" >	 
			  	and car.flt_key=#fltKey# and car.flt_date=#fltDate#
			</isNotEmpty>
			</isNotEmpty>
 			<isNotEmpty property="awbNo" >	 
			  	and car.awb_no = #awbNo#
			</isNotEmpty>
			 <isNotEmpty property="origin" >	 
			  	and awb.orig = #origin#
			</isNotEmpty>
			 <isNotEmpty property="dest" >	 
			  	and awb.dest = #dest#
			</isNotEmpty>			 
			 <isNotEmpty property="fltDateFrom" >	 
			  <isNotEmpty property="fltDateTo" >	 
			  	and car.flt_date between TO_DATE(#fltDateFrom#,'DDMONYY')  
    			AND TO_DATE(#fltDateTo#,'DDMONYY') 
			</isNotEmpty>
			</isNotEmpty>
			 <isNotEmpty property="consignee" >	 
			  	and ica.CSGNE_NAME = #consignee#
			</isNotEmpty>
</select>

<select id="isInventoryUpdatebyAnotheruser" parameterClass="cargo.cms.imprt.bo.CapSRFDlvByLocDtlsBO" 
		resultClass="java.lang.Integer">
		select count(*) from awb_inventory 
		where
		AWB_NO=#awbNo# AND AWB_DATE=TO_DATE(#awbDate#, 'DDMONYY') AND 
		nvl(flt_key,'*') = nvl(#fltNo#,'*') and nvl(flt_Date,'01JAN00') = nvl(to_date(#fltDate#,'DDMONYY'),'01JAN00')
		AND SRF_NO=#srfNo# AND LOC_CODE=#locCode# and locn_pcs=#locPc# and locn_wt=#locWt#
		<isNotEmpty prepend="AND" property="lspNo">
		  	LSP_NO=#lspNo#
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="uldNo">
			ULD_KEY=#uldNo#
		</isNotEmpty>
</select>
<select id="isAWBhasConfiguredSHCs_count" parameterClass="map" resultClass="java.lang.String">
		select count(*) from AWB a, mast_code_dtl mcd
			where a.awb_no=#awbNo# and a.awb_date=#awbDate#
			and mcd.code in (a.spl_code1,a.spl_code2,a.spl_code3,a.spl_code4,a.spl_code5,a.spl_code6,a.spl_code7,a.spl_code8,a.spl_code9)
			and mcd.code_type='ECT_HANDLER_SHC'
</select>

<select id="srfExistForRestore"  parameterClass="cargo.cms.imprt.bo.AWBStorDtlBO"  resultClass="java.lang.Integer">
	 <![CDATA[	 
	 		SELECT COUNT(1)
				FROM IMP_SRF T
				WHERE AWB_NO = #awbNo#
				AND AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY')
				AND ( STATUS  ='ISSUED'  
				AND sysdate  < srf_expy_date
				OR EXISTS (SELECT NULL FROM imp_srf_awb_inventory WHERE srf_no = t.srf_no AND t.status = 'ISSUED' AND dlv_pcs  > 0) 
				OR STATUS  ='POSTED'
      			OR SRF_NO in (select SRF_NO from IMP_CDIF where VOID_USER is null )
			)
		]]>
	</select>



	<select id="isAuthRepOfAgent"  parameterClass="map"  resultClass="java.lang.Integer">
	   select count(1) from cust_agent_auth_rep where cust_no = #CUST_NO# and auth_rep_id = NVL((select hkid from sec_user where code = #USER_ID# and cust_no = #CUST_NO#),'XXXX')
	</select>
	
	<select id="AuthRepNameOfAgentBooking"  parameterClass="map"  resultClass="java.util.HashMap">
	   select AUTH_REP_NAME ,AUTH_REP_ID  from cust_agent_auth_rep where cust_no = #CUST_NO# and auth_rep_id = NVL((select hkid from sec_user where code = #USER_ID# and cust_no = #CUST_NO#),'XXXX')
	</select>
	<!-- Tow Order Check-in - Flight Details -->
	<select id="sqlGetTowInRecordFltDtl" parameterClass="java.lang.String"
		resultClass="cargo.cms.imprt.bo.TowOrderTerminalInBO">
		<![CDATA[
			SELECT
			MAX(FLT_KEY) fltKey, TO_CHAR(MAX(FLT_DATE), 'DDMONYY') fltDate
			FROM TOW_ORDER_IN
			WHERE TO_NO = #PARAM#	
		]]>
	</select>
	<select id="checkeHandoverRHOstatus" parameterClass="java.util.Map"
		resultClass="java.lang.String">
		<![CDATA[			
		SELECT NVL(INB_FLT,'N') FROM MAST_EHANDOVER_RHO HANDOVER WHERE NVL(HANDOVER.INB_FLT,'N')='Y' AND HANDOVER.RHO IN (
		SELECT (SELECT CODE_DESC FROM CUST_COMPANY WHERE CODE=OPR.RHO_ID) FROM FLT_OPR OPR WHERE OPR.RHO_ID IS NOT NULL
		AND OPR.FLT_TYPE = 'A' AND OPR.FLT_KEY = #FLT_KEY# AND OPR.SCH_DATE = TO_DATE(#FLT_DATE#, 'DDMONYY'))			
		]]>
	</select>
	<!-- Tow Order In Record - Verify Flight Data -->
	<select id="sqlGetIsTowInRecordValidFlight" parameterClass="java.util.Map"
		resultClass="java.lang.String">
		<![CDATA[
			SELECT
			DECODE(COUNT(1), 0, 'N', 'Y') isValidFlight
			FROM FLT_OPR
			WHERE FLT_TYPE = 'A' AND FLT_KEY = #FLT_KEY# AND SCH_DATE = TO_DATE(#FLT_DATE#, 'DDMONYY')			
		]]>
	</select>
	<!-- Tow Order In Record - Verify Arrived Flight Data -->
	<select id="sqlGetIsTowInRecordValidArrivedFlight"
		parameterClass="java.util.Map" resultClass="java.lang.String">
		<![CDATA[
			SELECT
			DECODE(COUNT(1), 0, 'N', 'Y') isArrivedFlight
			FROM FLT_OPR
			WHERE FLT_TYPE = 'A' AND ACT_TIME IS NOT NULL AND
			FLT_KEY = #FLT_KEY# AND SCH_DATE = TO_DATE(#FLT_DATE#, 'DDMONYY')	
		]]>
	</select>
	<!-- Tow Order In Record - Verify Check-in Completion -->
	<select id="sqlGetIsTowInRecordRampComplete" parameterClass="java.util.Map"
		resultClass="java.lang.String">
		<![CDATA[
			SELECT
			DECODE(COUNT(1), 0, 'N', 'Y') completed
			FROM FLT_OPR_EVENTS
			WHERE FLT_TYPE = 'A' AND
			FLT_KEY = #FLT_KEY# AND SCH_DATE = TO_DATE(#FLT_DATE#, 'DDMONYY') AND RAMP_COMPL_YN = 'Y'
		]]>
	</select>
	<!-- Tow Order In Record - Verify Record Already Exist Or Not -->
	<select id="sqlGetIsTowInRecordExist" parameterClass="java.util.Map"
		resultClass="java.lang.String">
		<![CDATA[
			SELECT
			DECODE(COUNT(1), 0, 'N', 'Y') isExist
			FROM TOW_ORDER_IN_RECORD
			WHERE FLT_KEY = #FLT_KEY# AND FLT_DATE = TO_DATE(#FLT_DATE#, 'DDMONYY') AND 
			TOW_IN_TIME = TO_DATE(#TOW_IN_TIME#, 'DDMONYY HH24:MI:SS')
		]]>
	</select>
	<!-- Tow Order In Record - Actual Flight Arrival Time (Short Value) -->
	<select id="sqlGetTowInRecordATA" parameterClass="java.util.Map"
		resultClass="java.lang.String">
		<![CDATA[
			SELECT
			PKG_COMMON.GET_FLT_ATA(#FLT_KEY#, TO_DATE(#FLT_DATE#, 'DDMONYY'), 'A', 'DD')
			FROM DUAL		
		]]>
	</select>
	<!-- Tow Order In Record Records for Flight/Date -->
	<select id="sqlGetTowInRecords" parameterClass="java.util.Map"
		resultClass="cargo.cms.imprt.bo.TowOrderTerminalInBO">
		<![CDATA[
			SELECT
			TOR.FLT_KEY fltKey, TO_CHAR(TOR.FLT_DATE, 'DDMONYY') fltDate,
			TO_CHAR(TOR.TOW_IN_TIME, 'DDMONYY') terminalInDate, TO_CHAR(TOR.TOW_IN_TIME, 'HH24:MI:SS') terminalInTime,
			TOR.TYPE_P uldTypeP, TOR.TYPE_A uldTypeA, TOR.TYPE_B uldTypeB, TOR.TYPE_W uldTypeW, TOR.TYPE_U uldTypeU, 
			TOR.TYPE_20FT uldType20ft,
			'N' newFlag, TO_CHAR(TOR.LM_DATE, 'DDMONYY HH24:MI:SS') lmMultiUserTime
			FROM TOW_ORDER_IN_RECORD TOR
            JOIN FLT_OPR FO ON FO.FLT_KEY = TOR.FLT_KEY AND FO.SCH_DATE = TOR.FLT_DATE AND FO.FLT_TYPE='A'
			WHERE TOR.FLT_KEY = #FLT_KEY# AND TOR.FLT_DATE = TO_DATE(#FLT_DATE#, 'DDMONYY')
                  ]]>
                  <isNotEmpty prepend="AND" property="loginCarrier">
                  <![CDATA[                
                                    (FO.CARR_CODE = #loginCarrier#
                                    OR FO.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE= #loginCarrier#))
                  ]]>
                  </isNotEmpty>
                  <isEmpty property="loginCarrier">
                  <isNotEmpty prepend="AND" property="loginCustCode">
                   <![CDATA[                 
                                    FO.RHO_ID = #loginCustCode#
                  ]]>
                  </isNotEmpty>
                  </isEmpty>
            <![CDATA[      
			ORDER BY TOR.TOW_IN_TIME DESC
		]]>
	</select>
 		<select id="sqlGetTowInRecordsSummary" parameterClass="java.util.Map"
		resultClass="cargo.cms.imprt.bo.TowOrderTerminalInBO">
		<![CDATA[
            SELECT
			TOR.FLT_KEY fltKey, TO_CHAR(TOR.FLT_DATE, 'DDMONYY') fltDate,
			SUM(NVL(TOR.TYPE_P, 0)) uldTypeP, SUM(NVL(TOR.TYPE_A, 0)) uldTypeA, 
      		SUM(NVL(TOR.TYPE_B, 0)) uldTypeB, SUM(NVL(TOR.TYPE_W, 0)) uldTypeW, 
      		SUM(NVL(TOR.TYPE_U, 0)) uldTypeU, SUM(NVL(TOR.TYPE_20FT, 0)) uldType20ft
			FROM TOW_ORDER_IN_RECORD TOR
            JOIN FLT_OPR FO ON FO.FLT_KEY = TOR.FLT_KEY AND FO.SCH_DATE = TOR.FLT_DATE AND FO.flt_type='A'
			WHERE TOR.FLT_KEY = #FLT_KEY# AND TOR.FLT_DATE = TO_DATE(#FLT_DATE#, 'DDMONYY')
			]]>
			<isNotEmpty prepend="AND" property="loginCarrier">
                  <![CDATA[  
                      (FO.CARR_CODE = #loginCarrier#
                       OR FO.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE= #loginCarrier#))
                  ]]>
            </isNotEmpty>
             <isEmpty property="loginCarrier">
               <isNotEmpty prepend="AND" property="loginCustCode">
                 <![CDATA[
                      FO.RHO_ID = #loginCustCode#
                  ]]>   
                </isNotEmpty>
             </isEmpty>
            <![CDATA[      
            GROUP BY TOR.FLT_KEY, TOR.FLT_DATE
		]]>
	</select>	
	<!-- Tow Order In Record Data for Modification -->
	<select id="sqlGetTowInRecord" parameterClass="java.util.Map"
		resultClass="cargo.cms.imprt.bo.TowOrderTerminalInBO">
		<![CDATA[
			SELECT
			FLT_KEY fltKey, TO_CHAR(FLT_DATE, 'DDMONYY') fltDate,
			TO_CHAR(TOW_IN_TIME, 'DDMONYY') terminalInDate, TO_CHAR(TOW_IN_TIME, 'HH24:MI:SS') terminalInTime,
			TYPE_P uldTypeP, TYPE_A uldTypeA, TYPE_B uldTypeB, TYPE_W uldTypeW, TYPE_U uldTypeU, 
			TYPE_20FT uldType20ft,
			'N' newFlag, TO_CHAR(LM_DATE, 'DDMONYY HH24:MI:SS') lmMultiUserTime
			FROM TOW_ORDER_IN_RECORD
			WHERE FLT_KEY = #FLT_KEY# AND FLT_DATE = TO_DATE(#FLT_DATE#, 'DDMONYY') AND 
			TOW_IN_TIME = TO_DATE(#TOW_IN_TIME#, 'DDMONYY HH24:MI:SS')			
		]]>
	</select>
	<!-- Tow Order In Record Data - Create -->
	<insert id="sqlInsertTowInRecord" parameterClass="cargo.cms.imprt.bo.TowOrderTerminalInBO">
		<![CDATA[
			INSERT INTO TOW_ORDER_IN_RECORD
			  (
			    FLT_KEY, FLT_DATE, TOW_IN_TIME,
			    TYPE_P, TYPE_A, TYPE_B, TYPE_W, TYPE_U, TYPE_20FT,
			    CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE
			  )
			  VALUES
			  (
			    #fltKey#, TO_DATE(#fltDate#, 'DDMONYY'), 
			    TO_DATE(#terminalInDate# || ' ' || #terminalInTime#, 'DDMONYY HH24:MI:SS'),
			    #uldTypeP#, #uldTypeA#, #uldTypeB#, #uldTypeW#, #uldTypeU#, #uldType20ft#,
			    #userID#, SYSDATE, #userID#, SYSDATE
			  )
		]]>
	</insert>
	<!-- Tow Order In Record Data - Modify -->
	<update id="sqlUpdateTowInRecord" parameterClass="cargo.cms.imprt.bo.TowOrderTerminalInBO">
		<![CDATA[
			UPDATE TOW_ORDER_IN_RECORD
			SET TYPE_P = #uldTypeP#, TYPE_A = #uldTypeA#, TYPE_B = #uldTypeB#, TYPE_W = #uldTypeW#, TYPE_U = #uldTypeU#, 
			TYPE_20FT = #uldType20ft#,
			LM_DATE = SYSDATE, LM_USER_ID = #userID# 
			WHERE FLT_KEY = #fltKey# AND FLT_DATE = TO_DATE(#fltDate#, 'DDMONYY') AND 
			TOW_IN_TIME = TO_DATE(#terminalInDate# || ' ' || #terminalInTime#, 'DDMONYY HH24:MI:SS')
		]]>
	</update>
	<!-- Tow Order In Record Data - Delete -->
	<delete id="sqlDeleteTowInRecord" parameterClass="java.util.Map">
		<![CDATA[
			DELETE FROM TOW_ORDER_IN_RECORD 
			WHERE FLT_KEY = #FLT_KEY# AND FLT_DATE = TO_DATE(#FLT_DATE#, 'DDMONYY') AND 
			TOW_IN_TIME = TO_DATE(#TOW_IN_TIME#, 'DDMONYY HH24:MI:SS')	
		]]>
	</delete>				
	<!-- -->
	<!-- Tow Order In Record - Actual Flight Arrival Time -->
	<select id="sqlGetTowInRecordATAFull" parameterClass="java.util.Map"
		resultClass="java.lang.String">
		<![CDATA[
			SELECT
			TO_CHAR(NVL(ACT_DATE, SCH_DATE), 'DDMONYY') || ' ' 
			  || SUBSTR(TRIM(TO_CHAR(ACT_TIME, '0000')), 0, 2) 
			  || NVL2(ACT_TIME, ':', '') 
			  || SUBSTR(TRIM(TO_CHAR(ACT_TIME, '0000')), 3, 4) ATA
			FROM FLT_OPR
			WHERE FLT_TYPE = 'A' AND ACT_TIME IS NOT NULL AND 
			FLT_KEY = #FLT_KEY# AND SCH_DATE = TO_DATE(#FLT_DATE#, 'DDMONYY')	
		]]>
	</select>	
	<!-- Tow Order In Record Records for Flight/Date -->
	
	<select id="chkOffloadExistsCnt"  parameterClass="cargo.cms.imprt.bo.AWBStorDtlBO" resultClass="java.lang.Integer">		
		select count(1) from exp_offload_uld_awb where awb_no = #awbNo# and awb_date = to_date(#awbDate#,'DDMONYY') and confirmed_yn   ='Y' 
	</select>
	<select id="unPostedSRFexistsforReIssue" parameterClass="map" resultClass="java.lang.Integer">
 <![CDATA[
	   SELECT count(1) FROM IMP_SRF T
	   WHERE AWB_NO = #AWBNO# AND AWB_DATE =  TO_DATE(#AWBDATE#, 'DDMONYY') 
	   AND
	   (STATUS ='ISSUED' and sysdate < srf_expy_date
	   OR
	   EXISTS (SELECT NULL FROM imp_srf_awb_inventory where srf_no = t.srf_no and t.status = 'ISSUED' and dlv_pcs > 0))
	   and SRF_NO != #SRFNO# 
 	]]>
</select>
    
	<select id="get_awbno_forflight_tag"  parameterClass="cargo.cms.imprt.bo.ImpXomBO" resultClass="java.lang.Integer">
		select count(1)  from IMP_XPS_OBC_MAIL WHERE  
			FLT_KEY = #fltKey# AND
			FLT_TYPE = 'I' AND
			TO_CHAR(FLT_DATE,'DDMONYY') = #fltDate# AND
			CATALOG = 'TM' AND
			TAG_NO = #tagNo# AND SEQ_NO=#xpsSeqNo# AND AWB_NO IS NOT NULL			
   	</select>  
    <select id="getSeqNoTMTag" parameterClass="cargo.cms.imprt.bo.ImpXomBO" resultClass="java.lang.Integer" >
	   <![CDATA[
		 SELECT SEQ_NO
		 FROM IMP_XPS_OBC_MAIL
	     WHERE flt_key = #fltKey#
	     AND flt_date = to_date(#fltDate#,'DDMONYY')
	     AND TAG_NO = #tagNo#  
	     AND CATALOG = 'TM'
	     AND BD_ULD_KEY = #bdULDKey#
	     AND DEST=#dest#
	     ]]>
   </select>
    <update id="sqlUpdateTransitMailTagDesktopAdd" parameterClass="cargo.cms.imprt.bo.ImpXomBO">
			UPDATE IMP_XPS_OBC_MAIL SET 			
			ORIG = #orig#,
			DEST = #dest#, 
			ACT_PCS = ACT_PCS + #pcs#, 
			ACT_WT  = ACT_WT + #wt#,          
            LOCN = #locCode#,
			TARE_WT = #tareWt#,
			DAM_IND = #damInd#,
			LM_USER_ID  = #userID#,	    
			LM_DATE = sysdate,
			LSP_NO = #lspNo#,
			ULD_KEY = #uldKey# ,
			RMK = UPPER(#rmk#) 
		 WHERE
			SEQ_NO=#xpsSeqNo#
	</update>	
	
	<select id="getVoidSRFControlList" parameterClass="cargo.cms.imprt.bo.VoidSrfControlBO" resultClass="cargo.cms.imprt.bo.VoidSrfControlBO">    
    	 	SELECT
			  BV.SRF_NO AS srfNum,
			  BV.AWB_NO AS awbNum,
			  substr(BV.AWB_NO,0,3) AS awbPriffix,
			  substr(BV.AWB_NO,4,11) AS awbSuffix,
			  to_char(BV.AWB_DATE,'DDMONYY') AS awbDate,
			  BV.AWB_WGT AS awbWgt,
			  BV.VOID_USER AS voidUserName,			  
			  to_char(BV.VOID_DATE,'DDMONYY HH24:MI') AS voidTime,
			  BV.INV_NO AS invoiceNum,
			  BV.AGENT_CODE AS custCode,
			  BV.AGENT_NAME       AS agentName,
			  BV.FIN_CODE AS finCode,
			  BV.ITM_CODE AS itemCode,
			  BV.ITM_DESC AS itemDesc,
			  BV.ITM_CHARGE AS itemCharge,
			  BV.REV_IND AS revInd,   
			  BV.STD_IND AS stdCharge,
			  BV.CHRG_QTY AS chargeQuantity   ,
			  BV.TTL_CRD_BAL AS credit,
			  BV.CRD_BAL_BEF_VOID AS custCreditBefVoid,
			  BV.CRD_BAL_AFT_VOID AS custCreditAftVoid 
			FROM
			  bill_void_srf_chrg_dtls BV
			  join AWB AWB on BV.AWB_NO = AWB.AWB_NO and BV.AWB_DATE = AWB.AWB_DATE
			  where BV.CR_DATE BETWEEN TO_DATE(#startDate#,'DDMONYY') AND TO_DATE(#endDate#,'DDMONYY') + 1
			  <isNotEmpty property="loginCarrier">
              AND (AWB.CARR_CODE = #loginCarrier#
              OR AWB.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE= #loginCarrier#))
              </isNotEmpty>
			  <isNotEmpty prepend="AND" property="srfNumber">
			       BV.SRF_NO = #srfNumber#		      
		 	  </isNotEmpty>
		 	  <isNotEmpty prepend="AND" property="awbNumber">
			       BV.AWB_NO = #awbNumber#		      
		 	  </isNotEmpty>
		 	  <isNotEmpty prepend="AND" property="customerName">
			       BV.AGENT_NAME = #customerName#		      
		 	  </isNotEmpty>	   
		 	  order by BV.VOID_DATE,BV.AWB_NO,BV.ITM_CODE
    </select>
	
	<select id="getUldCPMWeight"  parameterClass="cargo.cms.imprt.bo.ULDCheckInBO"  resultClass="java.lang.String">		
		 select wt from edi_cpm_dtl where flt_key = #flightKey# and flt_date  = to_date(#flightDate#,'DDMONYY') and uld_key = #uldKey#
   	</select>
	<select id="checkUrfisCreatedorNot" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		SELECT count(1) FROM ULD_ISS_HD where srf_no=#srfNo#
	</select>
	<select id="fsuBrkdnPcsEqualToManifestPcsFB"  parameterClass="cargo.cms.imprt.bo.DBDCFltBO" resultClass="java.lang.Integer">  
	   SELECT count(1)    
		  FROM imp_car_shp carshp
		  LEFT JOIN imp_car_awb cawb on cawb.awb_no = carshp.awb_no and cawb.awb_date = carshp.awb_date
		  LEFT JOIN (select nvl(sum(actual_pcs),0) tt_pcs ,  nvl(sum (actual_Wt),0) tt_wt, flt_key, flt_date, awb_NO , awb_date
										from v_ddt_dtl  where (shp_trf_type = 'TT'  or  trf_type = 'IF') GROUP BY flt_key, flt_date, awb_NO, awb_date) ddt
		             			ON carshp.AWB_NO = ddt.AWB_NO AND carshp.AWB_DATE = ddt.AWB_DATE AND carshp.FLT_KEY = ddt.FLT_KEY AND carshp.FLT_DATE = ddt.FLT_DATE
		     WHERE ( ( NVL(carshp.MANIFEST_PCS,0) = NVL(carshp.recd_pcs + nvl(ddt.tt_pcs,0),0) 
		               AND NVL(carshp.MANIFEST_WT,0) = NVL(carshp.recd_wt + nvl(ddt.tt_wt,0),0) ) OR cawb.bypass_rel = 'Y' )
		        AND carshp.awb_no = #awbNo#
		        AND carshp.awb_date = to_date(#awbDate#,'DDMONYY')
		        AND carshp.flt_key  = #fltKey#
		        And carshp.flt_date = to_date(#fltDate#,'DDMONYY')	   
	</select>
	<select id="checkFlightRHOAndLoginRHO" parameterClass="map" resultClass="java.lang.Integer">
		select count(1) from flt_opr where flt_key = #FLT_KEY# and sch_date = TO_DATE(#FLT_DATE#,'DDMONYY') and flt_type = #FLT_TYPE# and RHO_ID = #RHO_ID#
	</select>
	<update id="update_close_ind_awb" parameterClass="java.util.HashMap">
		UPDATE 
			AWB 
		SET 
			AWB_CLOSED_YN = 'N', LM_DATE = SYSDATE, 
			LM_USER_ID = #lmUser#
		WHERE
			AWB_NO = #awbNo# AND AWB_DATE = #awbDate#
	</update>
	
	<select id="chkRHOIsHAS"  parameterClass="cargo.cms.imprt.bo.UldAllotBO" resultClass="java.lang.Integer">
	select count(1) from flt_opr where flt_key = #flightCarr# and sch_date = #arrDate# and rho_id = (select code from cust_company where code_desc = 'HAS')					
	</select>	
	
	
	<!-- EIIT Submission-->
	
	<delete id="deleteITTHeader" parameterClass="map">
		delete from cst_itt_hd where tr_no = #trNo#
	</delete>
	
	<delete id="deleteITTDetail" parameterClass="map">
		delete from cst_itt_dtl where tr_no = #trNo#
	</delete>
	
	<insert id="insertEIITHeader" parameterClass="map" >
     Insert into cst_itt_hd
     (TR_NO,ITT_REQ_NO,ITT_REQ_DATE,ITT_AUTH_CODE,ORIG_CARGO_HANDLER,DEST_CARGO_HANDLER,DC_IND,CONSOL,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE)
         values
     (#trNumber#,#ittReqNum#,to_char(SYSDATE,'DDMONYY'),#ittAuthCode#,#origCargoHandler#,#destCargoHandler#,#dcInd#,#console#,#crUserID#,SYSDATE,#crUserID#,SYSDATE)
	</insert>
				
	<insert id="insertEITTDetail" parameterClass="cargo.cms.imprt.bo.TrmBO">
	      Insert into cst_itt_dtl
	     (TR_NO,DOC_LINE_NO,ITT_REQ_NO,ITT_REQ_DATE,AWB_NO,AWB_DATE,HAWB_NO,CARR_CODE,FLT_NO,FLT_KEY,FLT_DATE,
	         ITT_CTM_REF_NO,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,Pcs,Wt,CC_CODE,ORIG,DEST,CATALOG,DC_YN,CT_NO,TR_TYPE,CONTENT,ITT_TYPE)
	         values
	     (#trNumber#,#docLineNo#,#eiitNumber#,to_char(SYSDATE,'DDMONYY'),#awbNo#,#awbDate#,'000000000000000000',#carrCode#,substr(#fltKey#,3),#fltKey#,#fltDate#,
			#ittCtmRefNo#,#userID#,SYSDATE,#userID#,SYSDATE,#manPcs#,#manWt#,#ccCode#,#origin#,#destination#,#catalog#,#dcInd#,#trmNo#,'CEITT',#content#,'ITT')
	</insert>
	
	<insert id="sqlITTSubmSubmitTempSaveHeader" parameterClass="cargo.cms.imprt.bo.TrmBO">
	      Insert into cst_subm_temp
	     (VER_NO,CTRL_DATE,REC_TYPE,SUBM_DATE,SEND_STATUS,LM_USER_ID,LM_DATE,LM_VER)
	         values
	     (#eiitNumber#,to_char(SYSDATE,'DDMONYY'),'ITT',SYSDATE,'P',#userID#,SYSDATE,'1')        
	</insert>
	
	<insert id="sqlITTSubmSubmitTempSaveDetails" parameterClass="cargo.cms.imprt.bo.TrmBO">
	         Insert into cst_submit_temp
	         (FLT_KEY,FLT_DATE,VER_NO,CST_TYPE,AWB_NO,HAWB_NO,CTRL_DATE)
	          values
	         (#fltKey#,#fltDate#,#eiitNumber#,'ITT',#awbNo#,'000000000000000000',to_char(SYSDATE,'DDMONYY'))
	</insert>
	
	<select id="getEITTSubmDetails" parameterClass="cargo.cms.imprt.bo.TrmBO" resultClass="cargo.cms.imprt.bo.TrmBO" >
		select awb_no as awbNumber,pcs as awbPc,wt as awbWt,
			(select to_char(max(subm_date),'DDMONYY HH24:MI') from cst_subm where ver_no = ITT_REQ_NO and ctrl_date = ITT_REQ_DATE and rec_type = 'ITT') as submDate,
			DECODE(fun_check_man_itt(itt_req_no, itt_req_date, NULL, 'ITT', 'Y'),'A','Accepted','P','In progress') as eittStatus,
			cr_user_id as submEITT,
			(SELECT ERR_MSG AS errMsgDesc FROM CST_SUBM
		WHERE((TO_char(ctrl_date, 'DDMONYY') =  cst_itt_dtl.itt_req_date AND ver_no = cst_itt_dtl.itt_req_no) and itt_req_code = cst_itt_dtl.itt_req_code)  	
			and REC_TYPE = 'ITT' and rownum = 1 ) as details
			from cst_itt_dtl
			where ITT_REQ_NO = #eiitNumber# and
			TRUNC(ITT_REQ_DATE) = to_date(#eiitDate#,'DDMONYY')
	</select>
	
	<select id="enquireEITTSubmStatusList" parameterClass="cargo.cms.imprt.bo.TrmBO" resultClass="cargo.cms.imprt.bo.TrmBO" >
		SELECT *
			FROM
			  (SELECT 
			    CASE     
			      WHEN A.REC_TYPE='ITF'      THEN 6      
			      WHEN A.REC_TYPE='ITC'      THEN 7      
			      WHEN A.REC_TYPE='ITT'      THEN 8 
			    END orderNo,
			    A.REC_TYPE                               AS type, 
			    TO_CHAR(A.SUBM_DATE,'DD MON YY HH24:mi') AS submDate,
			    TO_CHAR(B.ACK_DATE,'DD MON YY HH24:mi')  AS ackDate,
			    CASE WHEN SEND_STATUS in ('E','R') then 'Y'  
			     	 WHEN (select count(1) from cst_recv where req_uid = B.uq_id and error_msg is not null and msg_type =  A.REC_TYPE )  > 0  THEN 'Y' ELSE '' END AS errMessage,
			    DECODE(A.SEND_STATUS,'A','Accepted','R','Rejected','P','In progress','W','Pending','R','Rejected','E','Error') as status, 
			    B.uq_id reqUid
			  FROM CST_SUBM A
			  JOIN CST_ACK B
			  ON ((A.VER_NO          = B.VER_NO  AND A.ctrl_DATE        = B.ctrl_DATE)  OR A.ITT_REQ_CODE      = B.ITT_REQ_CODE)  AND A.REC_TYPE         =B.ACK_REC_TYPE
			  AND ((B.VER_NO         = #eiitNumber#
			  AND B.ctrl_DATE        = to_date(#eiitDate#,'DDMONYY'))
			  OR B.ITT_REQ_CODE      = #ittReqCode#)			  
			  WHERE (A.rec_type     IN ('ITT','ITF','ITC')  OR B.ACK_rec_type NOT IN ('ITT','ITF','ITC','ITQ','ITN','ITL','ITD','ITA'))
			  AND ((A.VER_NO         = #eiitNumber#
			  AND A.ctrl_DATE        = to_date(#eiitDate#,'DDMONYY'))
			  OR A.ITT_REQ_CODE      = #ittReqCode#)
			  UNION ALL
			  SELECT DECODE(C.ACK_REC_TYPE,'ITA',1,'ITD',2,'ITN',3,'ITQ',4,'ITL',5) orderNo,
			    C.ACK_REC_TYPE                           AS type,      
			    ''                                       AS submDate,
			    TO_CHAR(C.ACK_DATE,'DD MON YY HH24:mi')  AS ackDate,
			    ''                                       AS errMessage,
			    ''                                       AS status,  
			    uq_id reqUid
			  FROM CST_ACK C
			  WHERE C.ACK_REC_TYPE IN('ITQ','ITN','ITL','ITD','ITA')
			  AND ((C.VER_NO        = #eiitNumber#
			  AND C.ctrl_DATE       = to_date(#eiitDate#,'DDMONYY'))
			  OR C.ITT_REQ_CODE     = #ittReqCode#)
			  )
			ORDER BY TO_DATE(ackDate,'DD MON YY HH24:mi') DESC, orderNo	
	</select>
	
	<!-- eITT Submission Status -->
    
    <select id="getEITTSubmissionStatusList" parameterClass="cargo.cms.customs.bo.EnquireEIITBO" resultClass="cargo.cms.customs.bo.EnquireEIITBO" >    
    	SELECT ver_no                  AS eiitReqNum,
		  TO_CHAR(ctrl_date,'DDMONYY') AS eiitReqDate,
		  TRIM(CST_SUBM.itt_req_code)  AS reqCode,
		  CST_SUBM.itt_auth_code       AS authCode,
		  DEST_CARGO_HANDLER as destinationCTO,
		  TO_CHAR(subm_date,'DDMONYY HH24:MI') as submDate,
		  DECODE(SEND_STATUS,'A','Accepted','R','Rejected','P','In progress','W','Pending','Rejected')  AS eiitStatus,		 
		  (SELECT ack_rec_type FROM cst_ack, cst_itt_hd  where cst_itt_hd.accs_ind = 'N' and cst_itt_hd.itt_req_code = cst_ack.itt_req_code
		                      and cst_ack.itt_req_code = itt.itt_req_code and cst_itt_hd.itt_req_no = itt.itt_req_no  
		                      and cst_itt_hd.itt_req_date = itt.itt_req_date and cst_ack.ack_rec_type = 'ITL' and rownum = 1) as itlStatus,
		   (SELECT ack_rec_type FROM cst_ack, cst_itt_hd  where cst_itt_hd.accs_ind = 'N' and cst_itt_hd.itt_req_code = cst_ack.itt_req_code
		                      and cst_ack.itt_req_code = itt.itt_req_code and cst_itt_hd.itt_req_no = itt.itt_req_no  
		                      and cst_itt_hd.itt_req_date = itt.itt_req_date and cst_ack.ack_rec_type = 'ITN' and rownum = 1) as itnStatus,
		   (SELECT ack_rec_type FROM cst_ack, cst_itt_hd  where cst_itt_hd.accs_ind = 'N' and cst_itt_hd.itt_req_code = cst_ack.itt_req_code
		                      and cst_ack.itt_req_code = itt.itt_req_code and cst_itt_hd.itt_req_no = itt.itt_req_no  
		                      and cst_itt_hd.itt_req_date = itt.itt_req_date and cst_ack.ack_rec_type = 'ITD' and rownum = 1) as itdStatus,
		   DECODE(fun_check_man_itt( itt.itt_req_no, itt.itt_req_date, itt.itt_req_Code, 'ITC', 'N'),'A','Cancel Accepted','P','Cancel In progress','W','Cancel Pending',null) as itcStatus, 
		   (SELECT ack_rec_type FROM cst_ack, cst_itt_hd  where cst_itt_hd.accs_ind = 'N' and cst_itt_hd.itt_req_code = cst_ack.itt_req_code
		                      and cst_ack.itt_req_code = itt.itt_req_code and cst_itt_hd.itt_req_no = itt.itt_req_no  
		                      and cst_itt_hd.itt_req_date = itt.itt_req_date and cst_ack.ack_rec_type = 'ITA' and rownum = 1) as itaStatus, 
		    rec_type msgType,
		    ORIG_CARGO_HANDLER originCTO,  
		    DC_IND containDC,
		    ITT_CONFIRM_DENY_IND confirmDenyInd,
		    case when CONFIRM_USER_ID is not null then 'Y' else '' end as confirmInd,
		    case when DENY_USER_ID is not null then 'N' else '' end as denyInd,
		    itt.tr_no trNumber
		FROM CST_SUBM
		JOIN cst_itt_hd itt ON ((itt.ITT_REQ_NO  = ver_no AND itt.ITT_REQ_DATE = ctrl_date) OR itt.itt_req_code  = CST_SUBM.itt_req_code)
		WHERE rec_type IN ('ITT') 		
		<dynamic>
		    <isNotEmpty prepend="AND" property="ctNumber">
		    	   itt.ITT_REQ_NO IN (SELECT ITT_REQ_NO FROM CST_ITT_DTL WHERE CT_NO = #ctNumber#) 
		    </isNotEmpty>			
			<isNotEmpty prepend="AND" property="awbNumber">
				   itt.ITT_REQ_NO IN (SELECT ITT_REQ_NO FROM CST_ITT_DTL WHERE AWB_NO = #awbNumber#) 
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="uldKey">
				   itt.ITT_REQ_NO IN (SELECT ITT_REQ_NO FROM CST_ITT_DTL WHERE ULD_KEY = #uldKey#) 
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="eiitReqDate">
				   TRUNC(itt.ITT_REQ_DATE) = to_date(#eiitReqDate#,'DDMONYY') 
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="eiitReqNum">
				    itt.ITT_REQ_NO = #eiitReqNum# 
			</isNotEmpty>		
			<isNotEmpty prepend="AND" property="destinationCTO">
				    itt.DEST_CARGO_HANDLER   = #destinationCTO# 
			</isNotEmpty>	
			<isNotEmpty prepend="AND" property="submDate">
				    to_char(CST_SUBM.subm_date,'DDMONYY')   = #submDate# 
			</isNotEmpty>	
		</dynamic>		
	</select>
	
	<select id="getAWBListForcancelRequest" parameterClass="cargo.cms.customs.bo.EnquireEIITBO" resultClass="cargo.cms.customs.bo.EnquireEIITBO" >
		  SELECT ITT_REQ_NO as eiitReqNum,to_char(ITT_REQ_DATE,'DDMONYY') as eiitReqDate, to_char(flt_date,'DDMONYY') as fltDate, flt_key as fltKey,
		   ITT_REQ_CODE as reqCode, awb_no as awbNumber
		   FROM CST_ITT_DTL
		   WHERE ITT_REQ_NO = #eiitReqNum# and TRUNC(ITT_REQ_DATE) = to_date(#eiitReqDate#,'DDMONYY') 
	</select>	
	
	<insert id="sqlITCSubmCancelRequest" parameterClass="cargo.cms.customs.bo.EnquireEIITBO">
	      Insert into cst_subm_temp
	     (VER_NO,CTRL_DATE,REC_TYPE,SUBM_DATE,SEND_STATUS,LM_USER_ID,LM_DATE,LM_VER,ITT_REQ_CODE)
	         values
	     (#eiitReqNum#,#eiitReqDate#,'ITC',SYSDATE,'P',#userID#,SYSDATE,'1',#reqCode#)        
	</insert>
	
	<insert id="sqlSubmitITCSubmitRequest" parameterClass="cargo.cms.customs.bo.EnquireEIITBO">
	         Insert into cst_submit_temp
	         (FLT_KEY,FLT_DATE,VER_NO,CST_TYPE,AWB_NO,HAWB_NO,CTRL_DATE,ITT_REQ_CODE)
	          values
	         (#fltKey#,#fltDate#,#eiitReqNum#,'ITC',#awbNumber#,'000000000000000000',#eiitReqDate#,#reqCode#)
	</insert>
	
	<select id="getEITTSubmissionDtlsList" parameterClass="cargo.cms.customs.bo.EnquireEIITBO" resultClass="cargo.cms.customs.bo.EnquireEIITBO" >
		SELECT awb_no                 AS awbNumber,
		  '000000000000000000'        AS hawb,
		  flt_key                     AS fltKey,
		  TO_CHAR(flt_date,'DDMONYY') AS fltDate,
		  (SELECT trim(V.ref_no)
		    FROM V_CST_IMP_CC_CODE V
		    WHERE V.FLT_KEY                          = dtl.FLT_KEY
		    AND V.FLT_DATE                           = dtl.FLT_DATE
		    AND V.AWB_NO                             = dtl.AWB_NO
		    AND NVL(V.HAWB_NO, '000000000000000000') = '000000000000000000'
		    AND ROWNUM                               = 1
		  )     AS CERefNum,
		  (SELECT trim(V.cc_Code)
		    FROM V_CST_CC_CODE_AWB V
		    WHERE V.AWB_NO                             = dtl.AWB_NO
		    AND NVL(V.HAWB_NO, '000000000000000000') = '000000000000000000'
		    AND ROWNUM                               = 1
		  )     AS ccCode,  
		  CT_NO AS ctNumber
		FROM cst_itt_dtl dtl 
		where ( (ITT_REQ_NO = #eiitReqNum# and TRUNC(ITT_REQ_DATE) = to_date(#eiitReqDate#,'DDMONYY')) 	or ITT_REQ_CODE = #reqCode#)
	</select>
	
	<select id="getEITTErrorMsgDtls" parameterClass="cargo.cms.customs.bo.EnquireEIITBO" resultClass="cargo.cms.customs.bo.EnquireEIITBO" >
		SELECT ''                 AS awbNumber,
			  ''        AS hawb,
			  flt_key                     AS fltKey,
			  TO_CHAR(flt_date,'DDMONYY') AS fltDate,
			  ERR_MSG                   AS errMessage
			FROM CST_subm
			WHERE REC_type                        IN ('ITT','ITF','ITC','ITQ','ITN','ITL','ITD','ITA')
			AND ( (TO_CHAR(ctrl_date, 'DDMONYY') = #eiitReqDate# AND ver_no = #eiitReqNum#) OR itt_req_code = #reqCode# )
			AND REC_type = #type#
	</select>
	
	<select id="getEITTErrorMsgDtlsList" parameterClass="cargo.cms.customs.bo.EnquireEIITBO" resultClass="cargo.cms.customs.bo.EnquireEIITBO" >
		SELECT awb_no                 AS awbNumber,
			  '000000000000000000'        AS hawb,
			  flt_key                     AS fltKey,
			  TO_CHAR(flt_date,'DDMONYY') AS fltDate,
			  ERROR_MSG                   AS errMessage
			FROM CST_RECV
			WHERE REC_TYPE                       = 'M'
			AND MSG_type                        IN ('ITT','ITF','ITC','ITQ','ITN','ITL','ITD','ITA')
			AND ( (TO_CHAR(ctrl_date, 'DDMONYY') = #eiitReqDate# AND ver_no = #eiitReqNum#) OR itt_req_code = #reqCode# )
			AND MSG_TYPE = #type# and error_msg is not null
	</select>
	
	<select id="getEITTSubmStatusList" parameterClass="cargo.cms.customs.bo.EnquireEIITBO" resultClass="cargo.cms.customs.bo.EnquireEIITBO" >
		SELECT *
			FROM
			  (SELECT 
			    CASE     
			      WHEN A.REC_TYPE='ITF'      THEN 6      
			      WHEN A.REC_TYPE='ITC'      THEN 7      
			      WHEN A.REC_TYPE='ITT'      THEN 8 
			    END orderNo,
			    A.REC_TYPE                               AS type, 
			    TO_CHAR(A.SUBM_DATE,'DD MON YY HH24:mi') AS submDate,
			    TO_CHAR(B.ACK_DATE,'DD MON YY HH24:mi')  AS ackDate,
			    CASE WHEN SEND_STATUS in ('E','R') then 'Y'  
			     	 WHEN (select count(1) from cst_recv where req_uid = B.uq_id and error_msg is not null and msg_type =  A.REC_TYPE )  > 0  THEN 'Y' ELSE '' END AS errMessage,
			    DECODE(A.SEND_STATUS,'A','Accepted','R','Rejected','P','In progress','W','Pending','R','Rejected','E','Error') as status, 
			    B.uq_id reqUid
			  FROM CST_SUBM A
			  left JOIN (select uq_id,ACK_DATE,ACK_REC_TYPE, VER_NO, ctrl_DATE, ITT_REQ_CODE from CST_ACK 
        where ((VER_NO         = #eiitReqNum#
			  AND ctrl_DATE        = to_date(#eiitReqDate#,'DDMONYY'))
			  OR  ITT_REQ_CODE     = #reqCode#)) B on ((A.VER_NO = B.VER_NO  AND A.ctrl_DATE = B.ctrl_DATE)  OR A.ITT_REQ_CODE = B.ITT_REQ_CODE)  AND A.REC_TYPE = B.ACK_REC_TYPE
			  WHERE (A.rec_type     IN ('ITT','ITF','ITC')  OR B.ACK_rec_type NOT IN ('ITT','ITF','ITC','ITQ','ITN','ITL','ITD','ITA'))
			  AND ((A.VER_NO         = #eiitReqNum#
			  AND A.ctrl_DATE        = to_date(#eiitReqDate#,'DDMONYY'))
			  OR A.ITT_REQ_CODE      = #reqCode#)
			  UNION ALL
			  SELECT DECODE(C.ACK_REC_TYPE,'ITA',1,'ITD',2,'ITN',3,'ITQ',4,'ITL',5) orderNo,
			    C.ACK_REC_TYPE                           AS type,      
			    ''                                       AS submDate,
			    TO_CHAR(C.ACK_DATE,'DD MON YY HH24:mi')  AS ackDate,
			    ''                                       AS errMessage,
			    ''                                       AS status,  
			    uq_id reqUid
			  FROM CST_ACK C
			  WHERE C.ACK_REC_TYPE IN('ITQ','ITN','ITL','ITD','ITA')
			  AND ((C.VER_NO        = #eiitReqNum#
			  AND C.ctrl_DATE       = to_date(#eiitReqDate#,'DDMONYY'))
			  OR C.ITT_REQ_CODE     = #reqCode#)
			  )
			ORDER BY TO_DATE(ackDate,'DD MON YY HH24:mi') DESC, orderNo	
	</select>
	
	<!-- eITT Request -->
	
	 <select id="getEITTRequestList" parameterClass="cargo.cms.customs.bo.EnquireEIITBO" resultClass="cargo.cms.customs.bo.EnquireEIITBO" >
			SELECT 
			  ORIG_CARGO_HANDLER as originCTO,		  
			  ITT_REQ_CODE as reqCode,
			  ITT_AUTH_CODE as authCode,
			  DC_IND as containDC,
			  TR_NO as trNumber,			  
	      	  to_char(cr_date,'DDMONYY HH24:MI') as recvDate,
	 		  DECODE(fun_check_man_itt(null, null, ITT_REQ_CODE, 'ITF', 'Y'),'A','Accepted','R','Rejected','P','In progress','W','Pending','R','Rejected','E','Error') as eiitStatus,
	 		  ITT_CONFIRM_DENY_IND as confirmDenyInd,
	 		  (select count(1) from  CST_ITT_DTL where ITT_REQ_CODE =   hd.ITT_REQ_CODE) as cnrCount,
	 		  (SELECT ack_rec_type FROM cst_ack, cst_itt_hd  where cst_itt_hd.accs_ind = 'Y' and cst_itt_hd.itt_req_code = cst_ack.itt_req_code
		                      and cst_ack.itt_req_code = hd.itt_req_code and cst_ack.ack_rec_type = 'ITL' and rownum = 1) as itlStatus,
        	  (SELECT ack_rec_type FROM cst_ack, cst_itt_hd  where cst_itt_hd.accs_ind = 'Y' and cst_itt_hd.itt_req_code = cst_ack.itt_req_code
		                      and cst_ack.itt_req_code = hd.itt_req_code and cst_ack.ack_rec_type = 'ITC' and rownum = 1) as itcStatus,
		       (SELECT ack_rec_type FROM cst_ack, cst_itt_hd  where cst_itt_hd.accs_ind = 'Y' and cst_itt_hd.itt_req_code = cst_ack.itt_req_code
		                      and cst_ack.itt_req_code = hd.itt_req_code and cst_ack.ack_rec_type = 'ITD' and rownum = 1) as itdStatus 
			FROM CST_ITT_HD hd 
			WHERE DEST_CARGO_HANDLER = 'CPA'  and accs_ind = 'Y' and (ITT_REQ_NO is null and  ITT_REQ_DATE is null)
	   	    <dynamic>
			    <isNotEmpty prepend="AND" property="reqCode">
			    	    ITT_REQ_CODE = #reqCode# 
			    </isNotEmpty>		    		
				<isNotEmpty prepend="AND" property="originCTO">
					 ORIG_CARGO_HANDLER = #originCTO#   
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="awbNumber">
					  ITT_REQ_CODE IN (SELECT ITT_REQ_CODE FROM CST_ITT_DTL WHERE AWB_NO = #awbNumber#) 
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="recvDate">
					TRUNC(cr_date) = to_date(#recvDate#,'DDMONYY')				 
				</isNotEmpty>
	        </dynamic>
	</select>	
	
	<update id="updateConfirmInd" parameterClass="cargo.cms.customs.bo.EnquireEIITBO" >
		update cst_itt_hd set ITT_CONFIRM_DENY_IND = 'Y',
		CONFIRM_USER_ID = #userID#,
		CONFIRM_DATE = SYSDATE,
		DENY_USER_ID = null,
		DENY_DATE = null
		where itt_req_code = #reqCode# and tr_no = #trNumber#
	</update>
	
	<update id="updateDenyIndicator" parameterClass="cargo.cms.customs.bo.EnquireEIITBO" >
		update cst_itt_hd set ITT_CONFIRM_DENY_IND = 'N',
		DENY_USER_ID = #userID#,
		DENY_DATE = SYSDATE,
		CONFIRM_USER_ID = null,
		CONFIRM_DATE = null
		where itt_req_code = #reqCode# and tr_no = #trNumber#
	</update>
	
	
	<select id="getAWBListForConfirmDenyRequest" parameterClass="cargo.cms.customs.bo.EnquireEIITBO" resultClass="cargo.cms.customs.bo.EnquireEIITBO" >
		  SELECT ITT_REQ_NO as eiitReqNum,to_char(ITT_REQ_DATE,'DDMONYY') as eiitReqDate, to_char(flt_date,'DDMONYY') as fltDate, flt_key as fltKey,
		   ITT_REQ_CODE as reqCode, awb_no as awbNumber
		   FROM CST_ITT_DTL
		   WHERE itt_req_code = #reqCode# and tr_no = #trNumber#
	</select>	
	
	<insert id="InsertCstSubmForconfirmDeny" parameterClass="cargo.cms.customs.bo.EnquireEIITBO">
	Insert into cst_subm_temp
	(REC_TYPE,SUBM_DATE,SEND_STATUS,LM_USER_ID,LM_DATE,LM_VER,ITT_REQ_CODE)
		values
	('ITF',SYSDATE,'P',#userID#,SYSDATE,'1',#reqCode#)
	</insert>
	
	<insert id="InsertCstSubmitForconfirmDeny" parameterClass="cargo.cms.customs.bo.EnquireEIITBO">
	     Insert into cst_submit_temp
	     (FLT_KEY,FLT_DATE,CST_TYPE,AWB_NO,HAWB_NO,ITT_REQ_CODE)
	      values
	      (#fltKey#,#fltDate#,'ITF',#awbNumber#,'000000000000000000',#reqCode#)
	</insert>
	
	<select id="getEIITSeqNumber" resultClass="java.lang.String">	
   	 	select CST_ITT_HD_SEQ.NEXTVAL from dual
   	</select>
	
	<parameterMap id="hmIITGenerateNumberMap" class="map" >
        <parameter property="NUMBER" jdbcType="VARCHAR"    javaType="java.lang.String"    mode="OUT"/>
        <parameter property="TYPE" jdbcType="VARCHAR"    javaType="java.lang.String"    mode="IN"/>
    </parameterMap>

    <procedure id="generateIITnumber" parameterMap="hmIITGenerateNumberMap" >
        {? = call FUN_GET_TR_NO(?)}
    </procedure>
	
	<select id="checkImpFlightLevel1Acess" parameterClass="map" resultClass="java.lang.String" >
    <![CDATA[
    SELECT
	  (CASE
	    WHEN (SELECT  TRUNC(TO_DATE(TO_CHAR(sysdate,'DDMONYY HH24MI'),'DDMONYY HH24MI')) - TRUNC(TO_DATE((SELECT TO_CHAR(ACT_DATE,'DDMONYY')||' '||trim(to_char(ACT_TIME,'0000')) FROM FLT_OPR WHERE FLT_KEY=#fltKey# AND SCH_DATE=#fltDate# AND FLT_TYPE='A' AND ACT_DATE IS NOT NULL),'DDMONYY HH24MI'))+1 
	      FROM DUAL) > (SELECT RULE_VALUE FROM CMSRULES where rule_code='CLOSE_UNCLOSE_IMP_FLIGHT_LEVEL1')
	    THEN 'Y'
	    ELSE 'N'
	  END) DAYDIFF
	FROM dual
	]]>
	</select>
	<select id="checkImpFlightLevel2Acess" parameterClass="map" resultClass="java.lang.String" >
	<![CDATA[
	  SELECT
	  (CASE
	    WHEN (SELECT  TRUNC(TO_DATE(TO_CHAR(sysdate,'DDMONYY HH24MI'),'DDMONYY HH24MI')) - TRUNC(TO_DATE((SELECT TO_CHAR(ACT_DATE,'DDMONYY')||' '||trim(to_char(ACT_TIME,'0000')) FROM FLT_OPR WHERE FLT_KEY=#fltKey# AND SCH_DATE=#fltDate# AND FLT_TYPE='A' AND ACT_DATE IS NOT NULL),'DDMONYY HH24MI'))+1 
	      FROM DUAL) > (SELECT RULE_VALUE FROM CMSRULES where rule_code='CLOSE_UNCLOSE_IMP_FLIGHT_LEVEL2')
	    THEN 'Y'
	    ELSE 'N'
	  END) DAYDIFF
	FROM dual
	]]>
	</select>
	<select id="agentdropDownList"  parameterClass="cargo.cms.imprt.bo.CommonSearchBO"  resultClass="cargo.cms.imprt.bo.CommonSearchBO">
	SELECT CODE CODEID ,
	CODE_DESC CODEDESC
	FROM CUST_COMPANY
	WHERE AGENT_YN = 'Y'
	AND ACTIVE     = 'Y'
	AND CODE_DESC IN (PKG_COMMON.GET_AGENT_NAME(#carrCode#,#awbNo#,#awbDate#,(SELECT code_desc FROM cust_company  WHERE code=#codeId#)))
	</select>



	
	<select id="imp_UnPostSRF_getDataConsigneeExp"  parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO"  
 resultClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO"> 
			   SELECT A.AWB_NO awbNo,
				B.CONSTRAINED_ON_POST ccOnPostYN,
  			IMG_TRANS_ID transactionId,
			  SUBSTR(A.AWB_NO,1,3)  awbNoPrefix , 
			  SUBSTR(A.AWB_NO,4)  awbNoSuffix , 
         SUBSTR(A.AWB_NO,1,3)||'-'||SUBSTR(A.AWB_NO,4) as awbNoDisp ,
		   TO_CHAR(A.AWB_DATE, 'DDMONYY') awbDate,
		   B.CARR_CODE carrCode,
		   B.SRF_NO srfNo,
			   B.SRF_NO  srfNoPrefix ,  
			   B.SRF_NO as srfNoDisp ,
			   A.CATALOG catalog,
			   (SELECT 
			      (CASE WHEN decode(b.catalog,'EG','C','ES','C','IG','C','TG','C','TA','C','EU','M','TM','M','EO','Q','IO','Q','C') = 'C' THEN 
			      (CASE WHEN (SELECT COUNT(1) FROM CUST_AIRL_SPL_CODE SPLCODE WHERE SPLCODE.SPL_TYPE='SPL_COURIER_SHC' AND SPLCODE.CARR_CODE = B.CARR_CODE AND (SPLCODE.SPL_CODE = b.SPL_CODE1 OR SPLCODE.SPL_CODE = b.SPL_CODE2 OR SPLCODE.SPL_CODE = b.SPL_CODE3 OR SPLCODE.SPL_CODE = b.SPL_CODE4 OR SPLCODE.SPL_CODE = b.SPL_CODE5 OR SPLCODE.SPL_CODE = b.SPL_CODE6 OR SPLCODE.SPL_CODE = b.SPL_CODE7 OR SPLCODE.SPL_CODE = b.SPL_CODE8 OR SPLCODE.SPL_CODE = b.SPL_CODE9)) > 0
			      THEN 'Q' ELSE decode(b.catalog,'EG','C','ES','C','IG','C','TG','C','TA','C','EU','M','TM','M','EO','Q','IO','Q','C') END)
			               ELSE decode(b.catalog,'EG','C','ES','C','IG','C','TG','C','TA','C','EU','M','TM','M','EO','Q','IO','Q','C') END) as cargoType	  
			    FROM AWB  B WHERE  B.AWB_NO=A.AWB_NO AND B.AWB_DATE=A.AWB_DATE) as cargoType,			   
			   A.PCS awbPc, 
			   A.WT awbWt,
			   'E' srfType,
			   A.CONTENT contents,
		   A.SPL_CODE1 splCode1, 
			   A.SPL_CODE2 splCode2, 
			   A.SPL_CODE3 splCode3, 
		   A.SPL_CODE4 splCode4, 
			   A.SPL_CODE5 splCode5, 
			   A.SPL_CODE6 splCode6, 
			   A.SPL_CODE7 splCode7, 
			   A.SPL_CODE8 splCode8,
			   A.SPL_CODE9 splCode9,
			   C.CSGNE_NAME consignee, 
			   A.AGENT_NAME apptdAgt,
		   case when B.STATUS = 'VOID' then 'N' else
			case when (SELECT COUNT(1) FROM BILL_CHARGE_DTL WHERE upper(status)='PENDING' and srf_no=B.SRF_NO)>0 then 'Y' else 'N' end end as chrgStatus,
			   (SELECT CO_IATA_CODE FROM CUST_COMPANY WHERE CODE = A.AGENT_CODE) iataCode,
			   '' bankEndorsmentYN, 
			   '' bank,
			   A.AWB_RMK awbRemarks,
			   TO_CHAR(B.SRF_EXPY_DATE,'DDMONYY HH24:MI') srfExpiryDate, 
			   B.REPEAT_YN repeatYN, 
			   B.TRUCK_CO truckerCo, 	
			   B.AUTH_REP_NAME authName, 					
			   B.AUTH_REP_ID authID, 					
			   B.TRUCK_NO truckNo,
			   B.COLL_HKID hkId, 
			   B.COLL_NAME collectedBy,
			   B.COLL_CENTER collCenter,
			   (SELECT SUM(DLV_PCS) FROM imp_srf_awb_inventory where srf_no=#srfNo#) delvPcToDate,
			   To_Char(OFF_ARR_DATE,'DDMONYY HH24:MI')	cargoArrDate,
			   To_Char(B.SRF_PRNT_DATE,'DDMONYY HH24:MI') srfPrintDate,
			   (select to_char(min(DLV_DATE),'DDMONYY HH24:MI') from imp_srf_awb_inventory where SRF_NO =  #srfNo#  group by srf_no) firstCargoArrDate, 
			 	   case when (select count(1) from imp_srf_awb_inventory where   decode((NVL(dlv_pcs, 0)+NVL(cdif_pc, 0)),LOCN_PCS,'Y','N') = 'N' and srf_no=#srfNo# ) &gt; 0 then '' else (select to_char(max(DLV_DATE),'DDMONYY HH24:MI') from imp_srf_awb_inventory where DLV_DATE is not null and srf_no = #srfNo#   group by srf_no )end deliComplDate,  
			   decode((To_Char(POST_DATE,'DDMONYY')||' '|| SUBSTR(TRIM(TO_CHAR(NVL(POST_TIME,0),'0000')),0,2)|| ':'|| SUBSTR(TRIM(TO_CHAR(NVL(POST_TIME,0),'0000')),3,4)),' 00:00','',(To_Char(POST_DATE,'DDMONYY')||' '|| SUBSTR(TRIM(TO_CHAR(NVL(POST_TIME,0),'0000')),0,2)|| ':'|| SUBSTR(TRIM(TO_CHAR(NVL(POST_TIME,0),'0000')),3,4))) postDate,
			   B.CR_USER_ID crUserID,
 			   pkg_common.get_srf_cc(b.srf_no) as strCC,
			   B.TD_NO truckDockNo,
			   SRF_RMK srfRmk,
			   B.AGENT_ID apptdAgtCode,
			   B.CHARGE_STATUS chargeStatus,B.COLL_CENTER collCenter ,
			   NVL((SELECT sum(CR_BAL) 
					   FROM CUST_AGENT_AIRL_CREDIT
					   WHERE CR_EFF_DATE_FROM &lt;= trunc(SYSDATE) AND CR_EFF_DATE_TO &gt;= trunc(SYSDATE) 
					   AND instr( nvl(UPPER(CARR_CODE),'*'), nvl(UPPER(B.CARR_CODE),'**') ) &gt; 0
					   AND UPPER(CR_TYPE) = UPPER(DECODE(A.CATALOG, 'IG', 'Import_GEN', DECODE(A.CATALOG, 'IO', 'Import_OBC', '*')))
					   AND CUST_NO = A.AGENT_CODE AND nvl(upper(Status),'**') &lt;&gt; 'VOID'), 0)  airlCrdAvail,
	    	   NVL((SELECT sum(CR_BAL) 
					   FROM CUST_AGENT_CREDIT
					   WHERE CR_EFF_DATE_FROM &lt;= trunc(SYSDATE) AND NVL(CR_EFF_DATE_TO, trunc(SYSDATE)) &gt;= trunc(SYSDATE) 
					   and nvl(upper(Status),'**') &lt;&gt; 'VOID' AND instr( nvl(UPPER(CARR_CODE),'*'), nvl(UPPER(B.CARR_CODE),'**') ) &gt; 0 
					   AND CUST_NO = A.AGENT_CODE AND upper(CR_TYPE) = 'IMPORT_GEN'), 0)  aatCrdAvail,
			   NVL((SELECT 'Y' C
					   FROM CUST_UNDERTAKING 
					   WHERE EFF_FROM &lt; SYSDATE AND NVL(EFF_TO, SYSDATE) &gt;= SYSDATE AND ROWNUM = 1
					   AND CARR_CODE = B.CARR_CODE AND AGENT_CODE = A.AGENT_CODE ), 'N') undertakingYN 
			   FROM IMP_SRF B 
			    JOIN AWB A ON B.AWB_NO = A.AWB_NO AND B.AWB_DATE = A.AWB_DATE
          LEFT JOIN EXP_CAR C ON B.AWB_NO = C.AWB_NO AND C.AWB_DATE = B.AWB_DATE
			   WHERE   B.SRF_NO =#srfNo# 
	</select>
	
	<select id="imp_UnPostSRF_getDataConsignee"  parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO"  
 						resultClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO"> 
			SELECT A.AWB_NO awbNo,
				B.CONSTRAINED_ON_POST ccOnPostYN,
				IMG_TRANS_ID transactionId,
			   SUBSTR(A.AWB_NO,1,3)  awbNoPrefix , 
			   SUBSTR(A.AWB_NO,4)  awbNoSuffix , 
			   SUBSTR(A.AWB_NO,1,3)||'-'||SUBSTR(A.AWB_NO,4) as awbNoDisp ,
			   TO_CHAR(A.AWB_DATE, 'DDMONYY') awbDate,
			   B.CARR_CODE carrCode,
			   B.SRF_NO srfNo,
			   B.SRF_NO  srfNoPrefix ,  
			   B.SRF_NO as srfNoDisp ,
			   CATALOG catalog,
			   (SELECT 
			      (CASE WHEN decode(b.catalog,'EG','C','ES','C','IG','C','TG','C','TA','C','EU','M','TM','M','EO','Q','IO','Q','C') = 'C' THEN 
			      (CASE WHEN (SELECT COUNT(1) FROM CUST_AIRL_SPL_CODE SPLCODE WHERE SPLCODE.SPL_TYPE='SPL_COURIER_SHC' AND SPLCODE.CARR_CODE = B.CARR_CODE AND (SPLCODE.SPL_CODE = b.SPL_CODE1 OR SPLCODE.SPL_CODE = b.SPL_CODE2 OR SPLCODE.SPL_CODE = b.SPL_CODE3 OR SPLCODE.SPL_CODE = b.SPL_CODE4 OR SPLCODE.SPL_CODE = b.SPL_CODE5 OR SPLCODE.SPL_CODE = b.SPL_CODE6 OR SPLCODE.SPL_CODE = b.SPL_CODE7 OR SPLCODE.SPL_CODE = b.SPL_CODE8 OR SPLCODE.SPL_CODE = b.SPL_CODE9)) > 0
			      THEN 'Q' ELSE decode(b.catalog,'EG','C','ES','C','IG','C','TG','C','TA','C','EU','M','TM','M','EO','Q','IO','Q','C') END)
			               ELSE decode(b.catalog,'EG','C','ES','C','IG','C','TG','C','TA','C','EU','M','TM','M','EO','Q','IO','Q','C') END) as cargoType	  
				FROM AWB  B WHERE  B.AWB_NO=A.AWB_NO AND B.AWB_DATE=A.AWB_DATE) as cargoType,
			   A.AWB_PCS awbPc, 
			   A.AWB_WT awbWt, 
			   A.CONTENT contents,
			   A.SPL_CODE1 splCode1, 
			   A.SPL_CODE2 splCode2, 
			   A.SPL_CODE3 splCode3, 
			   A.SPL_CODE4 splCode4, 
			   A.SPL_CODE5 splCode5, 
			   A.SPL_CODE6 splCode6, 
			   A.SPL_CODE7 splCode7, 
			   A.SPL_CODE8 splCode8,
			   A.SPL_CODE9 splCode9,
			   CSGNE_NAME consignee, 
			   APPNTD_AGENT apptdAgt,  
			   case when B.STATUS = 'VOID' then 'N' else
			   case when (SELECT COUNT(1) FROM BILL_CHARGE_DTL WHERE upper(status)='PENDING' and srf_no=B.SRF_NO)>0 then 'Y' else 'N' end end as chrgStatus,
			   (SELECT CO_IATA_CODE FROM CUST_COMPANY WHERE CODE = A.AGENT_CUST_NO) iataCode,
			   A.BANK_ENDOS bankEndorsmentYN, 
			   A.BANK_TYPE bank,  
			   A.AIRLN_RMK awbRemarks, 			  
			   TO_CHAR(B.SRF_EXPY_DATE,'DDMONYY HH24:MI') srfExpiryDate,
			   TO_CHAR(B.VERIFIED_TIME,'DDMONYY HH24:MI') verTime, 
			   B.REPEAT_YN repeatYN, 
			   B.TRUCK_CO truckerCo, 	
			   B.AUTH_REP_NAME authName, 					
			   B.AUTH_REP_ID authID, (
			   	SELECT MAX(TRUCK_NO) 
			   	FROM TRUCK_TRIP TRIP
  				JOIN IMP_TRUCK_SRF SRFTRIP
 				ON TRIP.TRIP_ID = SRFTRIP.TRIP_ID
  				WHERE SRFTRIP.SRF_NO = B.SRF_NO
  			   ) truckNo,
			   B.COLL_HKID hkId, 
			   B.COLL_NAME collectedBy,
			   B.COLL_CENTER collCenter,
			   (SELECT SUM(DLV_PCS) FROM imp_srf_awb_inventory where srf_no=#srfNo#) delvPcToDate,
			   To_Char(OFF_ARR_DATE,'DDMONYY HH24:MI')	cargoArrDate,
			   To_Char(B.SRF_PRNT_DATE,'DDMONYY HH24:MI') srfPrintDate,
			   (select to_char(min(DLV_DATE),'DDMONYY HH24:MI') from imp_srf_awb_inventory where SRF_NO =  #srfNo#  group by srf_no) firstCargoArrDate, 
			   case when (select count(1) from imp_srf_awb_inventory where   decode((NVL(dlv_pcs, 0)+NVL(cdif_pc, 0)),LOCN_PCS,'Y','N') = 'N' and srf_no=#srfNo# ) > 0 then '' else (select to_char(max(DLV_DATE),'DDMONYY HH24:MI') from imp_srf_awb_inventory where DLV_DATE is not null and srf_no = #srfNo#   group by srf_no )end deliComplDate,  
			   decode((To_Char(POST_DATE,'DDMONYY')||' '|| SUBSTR(TRIM(TO_CHAR(NVL(POST_TIME,0),'0000')),0,2)|| ':'|| SUBSTR(TRIM(TO_CHAR(NVL(POST_TIME,0),'0000')),3,4)),' 00:00','',(To_Char(POST_DATE,'DDMONYY')||' '|| SUBSTR(TRIM(TO_CHAR(NVL(POST_TIME,0),'0000')),0,2)|| ':'|| SUBSTR(TRIM(TO_CHAR(NVL(POST_TIME,0),'0000')),3,4))) postDate,
			   B.CR_USER_ID crUserID,
			   B.AWB_CC_CODE as strCC,
			   B.TD_NO truckDockNo,
			   SRF_RMK srfRmk,
			   B.AGENT_ID apptdAgtCode,
			   B.CHARGE_STATUS chargeStatus,B.COLL_CENTER collCenter ,
			   NVL((SELECT CR_BAL 
					   FROM CUST_AGENT_AIRL_CREDIT
					   WHERE CR_EFF_DATE_FROM &lt;= trunc(SYSDATE) AND CR_EFF_DATE_TO &gt;= trunc(SYSDATE) 
						AND nvl(upper(Status),'**') &lt;&gt; 'VOID' AND instr( nvl(UPPER(CARR_CODE),'*'), nvl(UPPER(B.CARR_CODE),'**') ) &gt; 0 
					   AND UPPER(CR_TYPE) = UPPER(DECODE(A.CATALOG, 'IG', 'Import_GEN', DECODE(A.CATALOG, 'IO', 'Import_OBC', '*')))
					   	AND CUST_NO = A.AGENT_CUST_NO AND ROWNUM = 1), 0)  airlCrdAvail,
	    	   NVL((SELECT CR_BAL 
					   FROM CUST_AGENT_CREDIT
					   WHERE CR_EFF_DATE_FROM &lt;= trunc(SYSDATE) AND NVL(CR_EFF_DATE_TO, trunc(SYSDATE)) &gt;= trunc(SYSDATE) 
						and nvl(upper(Status),'**') &lt;&gt; 'VOID' AND instr( nvl(UPPER(CARR_CODE),'*'), nvl(UPPER(B.CARR_CODE),'**') ) &gt; 0 
					   AND CUST_NO = A.AGENT_CUST_NO AND upper(CR_TYPE) = 'IMPORT_GEN'), 0)  aatCrdAvail,
			   NVL((SELECT 'Y' C
					   FROM CUST_UNDERTAKING 
					   WHERE EFF_FROM &lt; SYSDATE AND NVL(EFF_TO, SYSDATE) &gt;= SYSDATE AND ROWNUM = 1
					   AND CARR_CODE = B.CARR_CODE AND AGENT_CODE = A.AGENT_CUST_NO AND A.CONSOLE_IND = 'Y'), 'N') undertakingYN 
			   FROM IMP_SRF B , IMP_CAR_AWB A
			   WHERE  
			   B.AWB_NO = A.AWB_NO AND
			   B.AWB_DATE = A.AWB_DATE AND
			   B.SRF_NO = #srfNo#
	</select>
	
	<select id="imp_UnPostSRF_getDataShipmentInfo"  parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO"  resultClass="cargo.cms.imprt.bo.ShpPndDelivBO">
			SELECT 
			a.SRF_NO srfNo, 
			a.FLT_KEY flightNoKey, 
			case when length(a.FLT_KEY)>8  then 'N' else 'Y' end as fltKey, 
			to_Char(a.FLT_DATE,'DDMONYY') flightDate, 
			a.carr_code carrCode, 
			b.ACT_TIME AS ata, 
			PKG_COMMON.get_flt_ata(B.FLT_KEY, B.SCH_DATE, 'A')  as ataTime,	
			INV_PCS invPc, 
			INV_WT invWt, 
			DLV_PCS dlvPcs,
			DLV_Wt dlvWt,
			MANIFEST_PCS manfPc, 
			MANIFEST_WT manfWt,
			CIR_TYPE cirType, 
			CIR_PCS cirPc, 
			CIR_WT cirWt, 
			CC_CODE strCC, 
			DC_IND strDC, 
			STRG_CHRG strChrg,
			a.RMK remarks
			FROM IMP_SRF_FLT a 
			LEFT JOIN FLT_OPR b ON a.FLT_DATE = b.SCH_DATE AND a.FLT_KEY = b.FLT_KEY and b.flt_type = 'A'
			WHERE SRF_NO = #srfNo# 
	</select>
	
	<update id="imp_unpostSRF" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
		UPDATE IMP_SRF SET 
		POST_USER = null , 
		POST_DATE = null , 		
		post_time = null,
		LM_USER_ID = #lmUserId# ,
		STATUS = 'ISSUED', 
		LM_DATE = SYSDATE,
		TR_TYPE = #trtype#  
		WHERE SRF_NO = #srfNo#
	</update>	
	
	<delete id="delete_imp_srf_awb_inventory_unpostSRF_for_cdifNo" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
		delete from imp_srf_awb_inventory where srf_no = #srfNo# and cdif_no is null
	</delete>
	
	<select  id="get_unpostSrf_awbinv_seq_no" parameterClass="cargo.cms.imprt.bo.ShpPndDelivBO" resultClass="java.lang.String">
    	 SELECT SEQ_NO seqNo
		 FROM AWB_INVENTORY
	     WHERE AWB_NO = #awbNo#
	     AND AWB_DATE = #awbDate#
	     AND NVL(FLT_KEY,'*')  = NVL(#flightKey#,'*')
	     AND  NVL(FLT_DATE,SYSDATE) = NVL(decode(#flightDate#,'',SYSDATE,#flightDate#),SYSDATE)
	     AND NVL(LOC_CODE,'*') = NVL(#warehouseLocation#,'*')
	     AND NVL(LSP_NO,0)   = NVL(#lspNo#,0)
	     AND NVL(ULD_KEY,'*')  = NVL(#uldKey#,'*')
		 AND srf_no = #srfNo# and cdif_no is null
	</select>
		
	<select  id="get_unpostSrf_awbinv_pc_milestone" parameterClass="java.lang.String" resultClass="cargo.cms.imprt.bo.ShpPndDelivBO">
    	 SELECT LOCN_PCS as locationPcs,to_char(nvl(LOCN_WT,0),'999999990.99') as locationWt FROM AWB_INVENTORY WHERE SEQ_NO=#PARAM#
	</select>
		
	<update id="upd_unpost_srf_header_awbInvtory" parameterClass="cargo.cms.imprt.bo.ShpPndDelivBO">
		UPDATE awb_inventory SET
			locn_pcs = NVL(locn_pcs,0)+NVL(#locationPcs#,0),
			locn_wt = NVL(locn_wt,0) +NVL(#locationWt#,0),
			lm_user_id = #lmUserId#,
			lm_date = sysdate
		WHERE SEQ_NO = #seqNo#
	</update>

	<insert id="ins_unpost_srf_awbInvtory" parameterClass="cargo.cms.imprt.bo.ShpPndDelivBO">
		insert into awb_inventory(awb_no, awb_date,flt_key ,flt_date,flt_type, carr_code, loc_code, locn_pcs, locn_wt, 
		uld_key, lsp_no, strg_date, ppk_ind, cr_user_id, cr_date, lm_user_id, lm_date,seq_no,srf_no , rtn_no , cdif_no)
	        values (#awbNo#, TO_DATE(#awbDate#,'DDMONYY'), #flightKey#,#flightDate#,'I',#carrCode#, #warehouseLocation#, NVL(#locationPcs#,0), NVL(#locationWt#,0), 
	        #uldKey#, #lspNo#,sysdate, 'B', #lmUserId#, sysdate, #lmUserId#, sysdate,#seqNo#,#srfNo#, 
          (select rtn_no from exp_rtn_hd where awb_no = #awbNo# and awb_date = TO_DATE(#awbDate#,'DDMONYY') and srf_no = #srfNo# and rownum = 1) ,
          (SELECT flt_key FROM IMP_SRF_FLT WHERE awb_no = #awbNo# and awb_date = TO_DATE(#awbDate#,'DDMONYY') and srf_no = #srfNo# AND  length(flt_key) &gt; 8) )            
	</insert>
	
	<insert id="ins_unpostsrf_imp_srf_awbInvtory" parameterClass="cargo.cms.imprt.bo.ShpPndDelivBO" >		
		INSERT INTO IMP_SRF_AWB_INVENTORY (
		AWB_NO,AWB_DATE,CARR_CODE,CR_DATE,CR_USER_ID,
		FLT_DATE,FLT_KEY,LOCN_PCS,LOCN_WT,LOC_CODE,SEQ_NO,SRF_NO,ULD_KEY,LSP_NO,REF_CDIF_NO) 
		VALUES (#awbNo#,TO_DATE(#awbDate#,'DDMONYY'),#carrCode#,SYSDATE,#lmUserId#,
   		#flightDate#,#flightKey#,NVL(#locationPcs#,0), NVL(#locationWt#,0),#warehouseLocation#,#seqNo#,#srfNo#,#uldKey#,#lspNo#,
   		(SELECT flt_key FROM IMP_SRF_FLT WHERE awb_no = #awbNo# and awb_date = TO_DATE(#awbDate#,'DDMONYY') and srf_no = #srfNo# AND length(flt_key) &gt; 8))   		
	</insert>
	
	<update id="update_imp_srf_flt_unpostSRF" parameterClass="cargo.cms.imprt.bo.ShpPndDelivBO">
		update imp_srf_flt set 
		dlv_pcs = null, 
		dlv_wt = null 		
		where srf_no = #srfNo# and AWB_NO  = #awbNo# and  AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
		and FLT_KEY = #flightNoKey# and FLT_DATE = #flightDate#
	</update>			
	
	<update id="update_imp_srf_awb_inventory_unpostSRF_for_cdifNo" parameterClass="java.util.HashMap">
		update imp_srf_awb_inventory set dlv_pcs = null, dlv_wt = null , dlv_rmk = null,
		DLV_BY = null, DLV_DATE = null, DLV_IND = null where srf_no = #srfNo# and cdif_no is not null
	</update>
	
	<update id="update_awb_un_closed_unpostSRF" parameterClass="java.util.HashMap">
		UPDATE 
			IMP_CAR_AWB 
		SET 
			AWB_CLOSED = 'N', AWB_CLOSE_DATE = SYSDATE, 
			AWB_CLOSE_USER = #userid#,LM_DATE = sysdate,LM_USER_ID = 'SYSTEM'
		WHERE
			AWB_NO = #awbNo# AND AWB_DATE = #awbDate#
	</update>
	
	<update id="update_awb_unclose_ind_unpostSRF" parameterClass="java.util.HashMap">
		UPDATE 
			AWB 
		SET 
			AWB_CLOSED_YN = 'N', LM_DATE = SYSDATE, 
			LM_USER_ID = #userid#
		WHERE
			AWB_NO = #awbNo# AND AWB_DATE = #awbDate#
	</update>
	
	<update id="updateEmptyInUldInv_unpost_srf" parameterClass="java.lang.String">
		UPDATE ULD_INVENTORY SET EMPTY_FLG='N' WHERE ULD_KEY=#uldKey# 
	</update>
	<update id="updateEmptyInLspInv_unpost_srf" parameterClass="java.lang.String">
		UPDATE LSP_INVENTORY SET EMPTY_FLG='N' WHERE LSP_NO=#lspNo#
	</update>
	<select id="validateGlsAmendCollBookingNo"  parameterClass="java.lang.String" resultClass="java.lang.Integer" >
   	SELECT COUNT(1) FROM IMP_BOOKING_DTL A, IMP_BOOKING B WHERE B.BOOKING_NO = A.BOOKING_NO AND a.booking_no=#PARAM# and status='ISSUED'
   	</select>
		<select id="validateGlsAmendCollAWB"  parameterClass="map" resultClass="java.lang.Integer" >
   	select COUNT(1)
			from IMP_CAR_SHP shp       
			join IMP_CAR_AWB carAwb on shp.awb_no = carAwb.awb_no and  shp.awb_date = carAwb.awb_date                  
			join AWB on shp.awb_no = AWB.awb_no and  shp.awb_date = AWB.awb_date and AWB.awb_type = 'I'              
		where shp.awb_no=#awbNo# and shp.awb_date=#awbDate# and shp.flt_key=#fltKey# and shp.flt_date=#fltDate#
   	</select>
	
	<!-- Online Transfer Summary Starts Here -->
	
	<select id="fetchIndBound_online_transfer_summary_FltList" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstBO" resultClass="cargo.cms.imprt.bo.TsnstCntrlChklstBO" >
	<![CDATA[
	select DDT.tr_No ddtTrNo, FLTOPR.FLT_KEY fltKey, 
	 decode(FLTOPR.FLT_KEY,null,'',PKG_COMMON.get_flt_carr(FLTOPR.FLT_KEY)) fltCarr, REPLACE(FLTOPR.FLT_KEY, PKG_COMMON.get_flt_carr(FLTOPR.FLT_KEY), '') fltNo,
	TO_CHAR(FLTOPR.SCH_DATE,'DDMONYY') fltDate ,  pkg_common.get_flt_eta(FLTOPR.FLT_KEY,FLTOPR.SCH_DATE,'A') eta ,pkg_common.get_flt_ata(FLTOPR.FLT_KEY,FLTOPR.SCH_DATE,'A') ata, FLTOPR.flt_type fltType,
	          NVL(DDTULD.ULDTT,0) uldTt, NVL(DDTSHP.SHPTT,0) shpTt,  
	           FUN_GET_ALLOTMENTS_EXP(FLTOPR.FLT_KEY,  to_char(FLTOPR.SCH_DATE,'DDMONYY'), '','ETA_CHANGED_MIN') as etaChengedMin,
	            nvl(DDT.msg_yn,'N') ddtInd, nvl(DDT.FInal_VER_IND,'N') finalVerInd,  decode(FLT.DDT_FINALISE_DATE,null,'N','Y')  finalizedInd, 
	           DDT.LM_USER_ID lmUserId, to_char(DDT.LM_DATE,'DDMONYY HH24:MI')  lmDateTime , nvl(DDT.NIL_DDT,'N') ddtNilInd,  
	           FLTOPR.ACFT_PRK_BAY acftPrkBay, 
 			(select FINALIZED_VERSION_NO from ddt_msg where flt_key = FLTOPR.FLT_KEY and flt_date = FLTOPR.SCH_DATE and rownum =1) transitCtrlVer     
	from FLT_OPR  FLTOPR
	join FLT_OPR_EVENTS FLT on FLT.FLT_KEY = FLTOPR.FLT_KEY and FLT.SCH_DATE = FLTOPR.SCH_DATE and FLT.FLT_TYPE = FLTOPR.FLT_TYPE
	left join (select FLT_KEY, FLT_DATE, NVL(SUM(uldTT),'0') ULDTT  
	          	from
	            (select FLT_KEY, FLT_DATE, ULD_KEY,
	              case when SUM(DECODE(TRF_TYPE, 'TT',1,0)) = 0 then 0 else 1 end uldTt  
	              from V_UNFIN_DDT_DTL 
	              where CNTG_FLT_KEY is not null
	                  group by FLT_KEY, FLT_DATE, ULD_KEY
	                  ) ULDDDT 
	                  where ULDDDT.FLT_DATE = #fltDate#
	              group by FLT_KEY, FLT_DATE) DDTULD on FLTOPR.FLT_KEY = DDTULD.FLT_KEY and FLTOPR.SCH_DATE = DDTULD.FLT_DATE 
				left join (select FLT_KEY, FLT_DATE, NVL(SUM(SHPTT),'0') SHPTT
	          	from
	            (select FLT_KEY, FLT_DATE, AWB_NO, AWB_DATE,
	              case when SUM(DECODE(SHP_TRF_TYPE, 'TT',1,0)) = 0 then 0 else 1 end shpTt   
	              from V_UNFIN_DDT_DTL 
	              where CNTG_FLT_KEY is null
	                  group by FLT_KEY, FLT_DATE, AWB_NO, AWB_DATE
	                  ) SHPDDT 
	                  where SHPDDT.FLT_DATE = #fltDate#
	              group by FLT_KEY, FLT_DATE) DDTSHP on FLTOPR.FLT_KEY = DDTSHP.FLT_KEY and FLTOPR.SCH_DATE = DDTSHP.FLT_DATE             
	left join (select DDT_MSG.MSG_YN, DDT_MSG.FLT_KEY, DDT_MSG.FLT_DATE, DDT_MSG.DDT_STATUS, DDT_MSG.final_ver_ind, NIL_DDT,
				to_CHAR(DDT_MSG.BASELINE_ETA,'DDMONYY HH24MI') AS  BASELINE_ETA , DDT_MSG.LM_USER_ID , DDT_MSG.LM_DATE  ,  DDT_MSG.tr_no            
	            from  DDT_MSG  where FLT_DATE = #fltDate# 
              ) DDT on DDT.FLT_KEY = FLTOPR.FLT_KEY and DDT.FLT_DATE = FLTOPR.sch_DATE  and DDT.DDT_STATUS='P' 
	where (exists (select null from V_UNFIN_DDT_DTL where FLT_KEY = FLTOPR.FLT_KEY and FLT_DATE = FLTOPR.SCH_DATE)
    		OR exists (select null from EDI_FFM_MSG where FFM_STATUS = 'P' and FLT_KEY = FLTOPR.FLT_KEY and FLT_DATE = FLTOPR.SCH_DATE))
	AND FLTOPR.flt_type ='A' AND FLTOPR.sch_date = #fltDate# and FLTOPR.SCH_TIME between #fromEta# and #toEta#	
	]]>
	<isNotEmpty property="loginCarrier">
	<![CDATA[    
	   AND (FLTOPR.CARR_CODE = #loginCarrier#
	   OR FLTOPR.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE= #loginCarrier#))
	]]>
	</isNotEmpty>
	<isEqual property="recWtransitChk" compareValue="Y">
		and (uldTt&gt;0 OR shpTt&gt;0) 
	</isEqual>
	<isNotEmpty property="srchFltKey" >
		and FLTOPR.flt_Key = #srchFltKey# 
	</isNotEmpty>
	<isNotEmpty property="cgoAcftType" >
		and FLTOPR.cgo_acft_type = #cgoAcftType# 
	</isNotEmpty>
   <isNotEmpty property="arcftRegionNo" >
		and FLTOPR.acft_reg_no = #arcftRegionNo# 
	</isNotEmpty>  
	order by FLTOPR.SCH_DATE, FLTOPR.SCH_TIME
	</select>
	
	<select id="fetchOutBound_online_transfer_summary_fltList" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstBO" resultClass="cargo.cms.imprt.bo.TsnstCntrlChklstBO" >
	<![CDATA[
	select FLTOPR.FLT_KEY fltkey , 
			decode(FLTOPR.FLT_KEY,null,'',PKG_COMMON.get_flt_carr(FLTOPR.FLT_KEY)) fltCarr, REPLACE(FLTOPR.FLT_KEY, PKG_COMMON.get_flt_carr(FLTOPR.FLT_KEY), '') fltNo,
			TO_CHAR(FLTOPR.SCH_DATE,'DDMONYY') fltDate      ,  
			pkg_common.get_flt_sta(FLTOPR.FLT_KEY,FLTOPR.SCH_DATE,'D') std,
  			pkg_common.get_flt_eta(FLTOPR.FLT_KEY,FLTOPR.SCH_DATE,'D') etd,
  			pkg_common.get_flt_ata(FLTOPR.FLT_KEY,FLTOPR.SCH_DATE,'D') atd,
		    FLTOPR.flt_type fltType,
			NVL(DDTULD.ULDTT,0) uldTt,  NVL(DDTSHP.SHPTT,0) shpTt, 
	        FUN_GET_ALLOTMENTS(FLTOPR.FLT_KEY,  to_char(FLTOPR.SCH_DATE,'DDMONYY'),'ETD_CHANGED_MIN') etaChengedMin,
	        to_number(NVL(DDTULD.ULDTT,0)) ttlIfTt,  FLTOPR.ACFT_PRK_BAY acftPrkBay, 
	        decode(FLT.DDT_FINALISE_DATE,null,'N','Y')  finalizedInd, 
 			(select FINALIZED_VERSION_NO from ddt_msg where flt_key = FLTOPR.FLT_KEY and flt_date = FLTOPR.SCH_DATE and rownum =1) transitCtrlVer
	from FLT_OPR FLTOPR
	join FLT_OPR_EVENTS FLT on FLT.FLT_KEY = FLTOPR.FLT_KEY and FLT.SCH_DATE = FLTOPR.SCH_DATE and FLT.FLT_TYPE = FLTOPR.FLT_TYPE
	left join (select SHP_CNTG_FLT_KEY, SHP_CNTG_FLT_DATE, NVL(SUM(SHPTT),'0') SHPTT
	          from
	            (select SHP_CNTG_FLT_KEY, SHP_CNTG_FLT_DATE, AWB_NO, AWB_DATE,
	              case when SUM(DECODE(SHP_TRF_TYPE, 'TT',1,0)) = 0 then 0 else 1 end shpTt   
	              from V_UNFIN_DDT_DTL 
	              where CNTG_FLT_KEY is null
	                  group by SHP_CNTG_FLT_KEY, SHP_CNTG_FLT_DATE, AWB_NO, AWB_DATE
	                  ) SHPDDT group by SHP_CNTG_FLT_KEY, SHP_CNTG_FLT_DATE) DDTSHP 
	      on FLTOPR.FLT_KEY = DDTSHP.SHP_CNTG_FLT_KEY and FLTOPR.SCH_DATE = DDTSHP.SHP_CNTG_FLT_DATE    
	left join (select CNTG_FLT_KEY, CNTG_FLT_DATE, NVL(SUM(uldTT),'0') ULDTT
	          	from
	            (select CNTG_FLT_KEY, CNTG_FLT_DATE, ULD_KEY,
	              case when SUM(DECODE(TRF_TYPE, 'TT',1,0)) = 0 then 0 else 1 end uldTt   
	              from V_UNFIN_DDT_DTL 
	              where CNTG_FLT_KEY is not null
	                  group by CNTG_FLT_KEY, CNTG_FLT_DATE, ULD_KEY
	                  ) ULDDDT 
	                  where ULDDDT.CNTG_FLT_DATE = #fltDate#
	              group by CNTG_FLT_KEY, CNTG_FLT_DATE) DDTULD 
	  on FLTOPR.FLT_KEY = DDTULD.CNTG_FLT_KEY and FLTOPR.SCH_DATE = DDTULD.CNTG_FLT_DATE 
	where  exists (select null from V_UNFIN_DDT_DTL where SHP_CNTG_FLT_KEY = FLTOPR.FLT_KEY and SHP_CNTG_FLT_DATE = FLTOPR.SCH_DATE)
	and  FLTOPR.FLT_TYPE ='D' and  FLTOPR.SCH_DATE = #fltDate# and FLTOPR.SCH_TIME between #fromEta# and #toEta# 	
	]]>
	<isNotEmpty property="loginCarrier">
	<![CDATA[    
	    AND (FLTOPR.CARR_CODE = #loginCarrier#
	    OR FLTOPR.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE= #loginCarrier#))
	]]>
	</isNotEmpty>
	<isEqual property="recWtransitChk" compareValue="Y">
		and (uldTt&gt;0 OR shpTt&gt;0) 
	</isEqual>
	<isNotEmpty property="srchFltKey" >
		and FLTOPR.flt_Key = #srchFltKey# 
	</isNotEmpty>
	<isNotEmpty property="cgoAcftType" >
		and FLTOPR.cgo_acft_type = #cgoAcftType# 
	</isNotEmpty>
   <isNotEmpty property="arcftRegionNo" >
		and FLTOPR.acft_reg_no = #arcftRegionNo# 
	</isNotEmpty>  
	order by FLTOPR.SCH_DATE, FLTOPR.SCH_TIME
	
	</select>
	
	<select id="fetchInboundOnlineTrnsfrSmryUldAwbList" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstBO" resultClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
	<![CDATA[ 
		select ddt.awb_no awbNo,
		SUBSTR(TRIM(ddt.awb_no),1,3)||'-'||SUBSTR(TRIM(ddt.awb_no),4) awbNoDisp,
		ddt.awb_Date awbDate, 
		nvl(ddt.ULD_KEY,'BULK')  uldKey,
		decode(ddt.CNTG_FLT_KEY,null,'BULK',ddt.ULD_KEY,null,'BULK',ddt.ULD_KEY) uldKeyShow,
		nvl(ddt.ULD_KEY,'BULK') ||'-'|| ddt.awb_no  uldKeyAwbNo,
		nvl(awb.ORIG,(SELECT ORIG FROM FLT_OPR WHERE FLT_KEY = ddt.flt_key AND SCH_DATE = ddt.flt_Date AND FLT_TYPE = 'A')) org, 
		nvl(awb.DEST,ddt.UNLDG_PT) dest, 
		nvl(awb.DEST,ddt.SHP_UNLDG_PT) shpDest, 
		nvl(awb.ORIG,(SELECT ORIG FROM FLT_OPR WHERE FLT_KEY = ddt.flt_key AND SCH_DATE = ddt.flt_Date AND FLT_TYPE = 'A')) shpldgPt, 
		case when ddt.CNTG_FLT_KEY is null then awb.catalog 
			 when (select count(1) from awb where catalog = 'TM' 
							and exists (select null from v_ddt_dtl where tr_no = ddt.TR_NO and udoc_line_no = ddt.UDOC_LINE_NO 
                                       and uld_key = ddt.ULD_KEY and awb_no = awb.awb_no and  awb_date = awb.awb_date )) > 0 then 'TM' 
              else awb.catalog end  catalog,
		NVL(AWB.PCS,NVL(ddt.SHP_TRF_PC,0)) awbPcs, NVL(AWB.WT,NVL(ddt.SHP_TRF_WT,0)) awbWt,
		ddt.flt_key fltKey , 
		ddt.flt_Date  fltDate,
		ddt.TR_NO ddtTrNo, 
		ddt.SDOC_LINE_NO ddtSdocLineNo, 
		ddt.UDOC_LINE_NO ddtUdocLineNo, 
		ddt.DOC_LINE_NO ddtDocLineNo,
		decode(ddt.CNTG_FLT_KEY,null,'',PKG_COMMON.get_flt_carr(ddt.CNTG_FLT_KEY)) cntgFltCarr, 
		REPLACE(ddt.CNTG_FLT_KEY, PKG_COMMON.get_flt_carr(ddt.CNTG_FLT_KEY), '') cntgFltNo,
		ddt.CNTG_FLT_KEY cntgFltKey, ddt.CNTG_FLT_DATE cntgFltDate,
		ddt.UNLDG_PT uldUnldgPt,ddt.TRF_TYPE trfType,ddt.BRK_BULK brkBulk,
		decode(ddt.SHP_CNTG_FLT_KEY,null,'',PKG_COMMON.get_flt_carr(ddt.SHP_CNTG_FLT_KEY)) shpCntgFltCarr, 
		REPLACE(ddt.SHP_CNTG_FLT_KEY, PKG_COMMON.get_flt_carr(ddt.SHP_CNTG_FLT_KEY), '') shpCntgFltNo,
		ddt.SHP_CNTG_FLT_KEY shpCntgFltKey, ddt.SHP_CNTG_FLT_DATE shpCntgFltDate,
		ddt.SHP_UNLDG_PT shpUnldgPt,ddt.SHP_TRF_TYPE shpTrfType,ddt.SHP_BRK_BULK shpBrkBulk,
		ddt.SHP_TRF_PC trfPcs, ddt.SHP_TRF_WT trfWt,
		(select  sum(shp_trf_pc)
		   from v_ddt_dtl 
		   where tr_no = ddt.TR_NO and udoc_line_no = ddt.UDOC_LINE_NO 
		   and uld_key = ddt.ULD_KEY  group by tr_no,udoc_line_no, flt_key, flt_date , uld_key) uldTrfPc,
		(select sum(shp_trf_wt)  
		   from v_ddt_dtl 
		   where tr_no = ddt.TR_NO and udoc_line_no = ddt.UDOC_LINE_NO 
		   and uld_key = ddt.ULD_KEY  group by tr_no,udoc_line_no, flt_key, flt_date , uld_key) uldTrfWt,		
		ddt.UNLDG_PT unldgPt,
		pkg_common.get_flt_sta(ddt.SHP_CNTG_FLT_KEY, ddt.SHP_CNTG_FLT_DATE,'D') shpStd,
        pkg_common.get_flt_eta(ddt.SHP_CNTG_FLT_KEY, ddt.SHP_CNTG_FLT_DATE,'D') shpEtd,
        pkg_common.get_flt_sta(ddt.CNTG_FLT_KEY, ddt.CNTG_FLT_DATE,'D') uldStd,
        pkg_common.get_flt_eta(ddt.CNTG_FLT_KEY, ddt.CNTG_FLT_DATE,'D') uldEtd,
		FUN_GET_FLT_TDIFF_TRFYPE(ddt.CNTG_FLT_KEY, ddt.CNTG_FLT_DATE,#fltKey#,#fltDate#,'TIME_DIFF' ) timeDiifferance,
		FUN_GET_FLT_TDIFF_TRFYPE(ddt.CNTG_FLT_KEY, ddt.CNTG_FLT_DATE,#fltKey#,#fltDate#,'TR_TYPE' ) proposeTrfType,
		FUN_GET_FLT_TDIFF_TRFYPE(ddt.SHP_CNTG_FLT_KEY, ddt.SHP_CNTG_FLT_DATE,#fltKey#,#fltDate#,'TIME_DIFF' ) shpTimeDiifferance,
		FUN_GET_FLT_TDIFF_TRFYPE(ddt.SHP_CNTG_FLT_KEY, ddt.SHP_CNTG_FLT_DATE,#fltKey#,#fltDate#,'TR_TYPE' ) shpProposeTrfType	

  from (select ddtView.awb_no awb_no, to_char(ddtView.awb_DATE,'DDMONYY') awb_DATE, ddtView.flt_key flt_key , 
	                      to_char(ddtView.flt_Date,'DDMONYY') flt_Date, 
	                	ddtView.TR_NO TR_NO, ddtView.sdoc_line_no Sdoc_line_no, ddtView.uDOC_LINE_NO UDOC_LINE_NO, ddtView.DOC_LINE_NO DOC_LINE_NO,
	                	ddtView.ULD_KEY ULD_KEY , ddtView.CNTG_FLT_KEY CNTG_FLT_KEY, to_char(ddtView.CNTG_FLT_DATE,'DDMONYY') CNTG_FLT_DATE, 
	                  	ddtView.TRF_TYPE TRF_TYPE,  ddtView.BRK_BULK BRK_BULK, to_char(ddtView.BASELINE_ETA,'DDMONYY') BASELINE_ETA,
	                  	NVL( (TO_CHAR(TO_DATE(to_char(ddtView.BASELINE_ETA,'DDMONYY HH24MI'),'DDMONYY HH24MI') - 
	                   			TO_DATE(TO_CHAR(FLT.SCH_DATE,'DDMONYY')|| ' ' || 
	                   			TO_CHAR(NVL(FLT.EST_TIME,  FLT.SCH_TIME),'0000') ,'DDMONYY HH24MI')))  * 24  , 0 ) as etaChangedHrs,
	                    ddtView.Acton_code_1 Acton_code_1, ddtView.Acton_code_2 Acton_code_2, ddtView.UNLDG_PT , ddtView.SHP_UNLDG_PT,
	                    ddtView.SHP_TRF_PC , ddtView.SHP_TRF_WT, 
	                    ddtView.SHP_CNTG_FLT_KEY SHP_CNTG_FLT_KEY, to_char(ddtView.SHP_CNTG_FLT_DATE,'DDMONYY') SHP_CNTG_FLT_DATE,
	                    ddtView.SHP_TRF_TYPE SHP_TRF_TYPE,ddtView.SHP_BRK_BULK SHP_BRK_BULK
	                  from V_DDT_DTL ddtView
	              		join FLT_OPR FLT on FLT.FLT_KEY = ddtView.FLT_KEY and FLT.SCH_DATE = ddtView.FLT_DATE and FLT_type = 'A') ddt 
  join FLT_OPR FLT on FLT.FLT_KEY = ddt.FLT_KEY and FLT.SCH_DATE = ddt.FLT_DATE and FLT_type = 'A'
	left join awb on 
	         awb.awb_no=ddt.awb_no and awb.awb_date=ddt.awb_date
	  where  ddt.flt_key = #fltKey# and ddt.flt_Date = #fltDate# 	
    and (ddt.TRF_TYPE = 'TT' or ddt.SHP_TRF_TYPE = 'TT')
	   ORDER BY  ddt.ULD_KEY, ddt.awb_no, ddt.awb_Date
	   ]]>
	</select>
	
	<select id="fetchOutBoundOnlineTrnsfrSmryUldAwbList" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstBO" resultClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
	<![CDATA[ 
	select
	decode(ddt.CNTG_FLT_KEY,null,'BULK',ddt.ULD_KEY,null,'BULK',ddt.ULD_KEY) uldKeyShow,
	nvl(ddt.ULD_KEY,'BULK')  uldKey, nvl(ddt.ULD_KEY,'BULK') ||'-'|| ddt.awb_no  uldKeyAwbNo, 
	ddt.awb_no awbNo, SUBSTR(TRIM(ddt.awb_no),1,3)||'-'||SUBSTR(TRIM(ddt.awb_no),4) awbNoDisp,  to_char(ddt.awb_Date,'DDMONYY') awbDate, 
	nvl(awb.ORIG,'') org, awb.DEST dest, ddt.UNLDG_PT unldgPt,ddt.UNLDG_PT  uldUnldgPt, ddt.SHP_UNLDG_PT shpUnldgPt, 
  case when ddt.CNTG_FLT_KEY is null then awb.catalog 
			 when (select count(1) from awb where catalog = 'TM' 
							and exists (select null from v_ddt_dtl where tr_no = ddt.TR_NO and udoc_line_no = ddt.UDOC_LINE_NO 
                                       and uld_key = ddt.ULD_KEY and awb_no = awb.awb_no and  awb_date = awb.awb_date )) > 0 then 'TM' 
              else awb.catalog end  catalog,
	ddt.flt_key fltKey , to_char(ddt.flt_Date,'DDMONYY')  fltDate,
	pkg_common.get_flt_sta(ddt.flt_key, ddt.flt_Date,'A') shpStd,
    pkg_common.get_flt_eta(ddt.flt_key, ddt.flt_Date,'A') shpEtd,
	nvl(ddt.SHP_TRF_PC,0) pcs,nvl(ddt.SHP_TRF_WT,0) wt,
	FUN_GET_FLT_TDIFF_TRFYPE(ddt.SHP_CNTG_FLT_KEY,ddt.SHP_CNTG_FLT_DATE,ddt.flt_key, ddt.flt_Date,'TIME_DIFF' ) timeDiifferance,
	FUN_GET_FLT_TDIFF_TRFYPE(ddt.SHP_CNTG_FLT_KEY,ddt.SHP_CNTG_FLT_DATE,ddt.flt_key, ddt.flt_Date,'TR_TYPE' ) proposeTrfType,
	decode(ddt.CNTG_FLT_KEY,null,'Y') awbNoRecInd,	  
   	ddt.TR_NO ddtTrNo, ddt.SDOC_LINE_NO ddtSdocLineNo, ddt.UDOC_LINE_NO ddtUdocLineNo, ddt.DOC_LINE_NO ddtDocLineNo,
   	nvl(ddt.CNTG_FLT_KEY,ddt.SHP_CNTG_FLT_KEY) cntgFltKey, to_char(nvl(ddt.CNTG_FLT_Date,ddt.SHP_CNTG_FLT_Date),'DDMONYY') cntgFltDate,  
   	REPLACE(nvl(ddt.CNTG_FLT_KEY,ddt.SHP_CNTG_FLT_KEY), PKG_COMMON.get_flt_carr(nvl(ddt.CNTG_FLT_KEY,ddt.SHP_CNTG_FLT_KEY)), '') cntgFltNo,
   	decode(ddt.CNTG_FLT_KEY,null,ddt.SHP_TRF_TYPE, ddt.TRF_TYPE) trfType,
   	ddt.BRK_BULK brkBulk, ddt.SHP_TRF_PC trfPcs, ddt.SHP_TRF_WT trfWt, 
   	(select  sum(shp_trf_pc) from v_ddt_dtl 
		   where tr_no = ddt.TR_NO and udoc_line_no = ddt.UDOC_LINE_NO and uld_key = ddt.ULD_KEY  group by tr_no,udoc_line_no, flt_key, flt_date , uld_key) uldTrfPc,
	(select sum(shp_trf_wt) from v_ddt_dtl 
		   where tr_no = ddt.TR_NO and udoc_line_no = ddt.UDOC_LINE_NO and uld_key = ddt.ULD_KEY  group by tr_no,udoc_line_no, flt_key, flt_date , uld_key) uldTrfWt,	
    (select decode(DDT_FINALISE_DATE,null,'N','Y') from FLT_OPR_EVENTS where FLT_KEY = ddt.flt_key and SCH_DATE = ddt.FLT_DATE and flt_Type ='A')  finalizedInd,
    TO_CHAR(NVL(FLT.EST_TIME,FLT.SCH_TIME),'0000') eta              
	from V_DDT_DTL ddt
	join FLT_OPR FLT on ddt.SHP_CNTG_FLT_KEY = FLT.FLT_KEY and FLT.SCH_DATE = ddt.SHP_CNTG_FLT_DATE and FLT.FLT_TYPE ='D'
	join FLT_OPR_EVENTS FLTEVENTS on FLT.FLT_KEY = FLTEVENTS.FLT_KEY and FLT.SCH_DATE = FLTEVENTS.SCH_DATE and FLT.FLT_TYPE =FLTEVENTS.FLT_TYPE 
	left join awb on awb.awb_NO = ddt.awb_No and awb.awb_Date = ddt.awb_Date	
	where ddt.SHP_CNTG_FLT_KEY = #fltKey# and ddt.SHP_CNTG_FLT_DATE = #fltDate# 
  and (ddt.TRF_TYPE = 'TT' or ddt.SHP_TRF_TYPE = 'TT')
	ORDER BY  ddt.awb_no
	   ]]>
	</select>

		<select id="fetchTCCFinalizePendingList" parameterClass="java.lang.String" resultClass="cargo.cms.imprt.bo.TsnstCntrlChklstBO" >
	<![CDATA[ 
			SELECT opr.flt_key as fltKey, 
				to_char(opr.sch_date,'DDMONYY') as fltDate
				FROM flt_opr opr, flt_opr_events events , mast_carrier mast
				WHERE opr.flt_key = events.flt_key
				AND opr.sch_date  =events.sch_date
				AND opr.flt_type  = 'A' and opr.carr_code = mast.CODE
				AND opr.flt_type  = events.flt_type
				AND events.DDT_FINALISE_DATE IS NULL AND NVL(events.MANUAL_HANDLED_TCC,'N') = 'N'
				AND to_date (TO_CHAR(DECODE(opr.EST_DATE,NULL,opr.SCH_DATE,opr.EST_DATE), 'DDMONYY') || lpad(DECODE(opr.EST_DATE,NULL,opr.SCH_TIME,opr.EST_TIME),4, 0),'DDMONYYHH24MI') - (SELECT TO_NUMBER(rule_value)  FROM CMSRULES  WHERE RULE_CODE='AUTO_TCC_FINALIZE')/(24*60) < SYSDATE
				AND NVL(FUN_GET_FFM_FOR_TCC(opr.flt_key,to_char(opr.sch_date,'DDMONYY')),'F') = 'T'
        		and nvl(TCC_FINALIZE_YN,'N') = 'Y'
        		AND not exists (SELECT null  FROM MAST_CARRIER where CODE = opr.carr_code and nvl(VESSEL_FLT_YN,'N') = 'Y')
	   ]]>
	</select>

<parameterMap id="closeImpAWBMap" class="map" >	
	<parameter property="USERID" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>	
</parameterMap>

<procedure id="imp_AWB_CLOSE" parameterMap="closeImpAWBMap" >
	{call PKG_CLOSE_AWB.CLOSE_AWB_IMPORT(?)}
</procedure>


<parameterMap id="closeEXPAWBMap" class="map" >	
	<parameter property="USERID" jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>	
</parameterMap>

<procedure id="exp_AWB_CLOSE" parameterMap="closeEXPAWBMap" >
	{call PKG_CLOSE_AWB.CLOSE_AWB_EXPORT(?)}
</procedure>

	<select id="checkOffloadExists"  parameterClass="map"  resultClass="java.lang.Integer">
	<![CDATA[
		SELECT COUNT(1) FROM EXP_OFFLOAD_ULD_AWB WHERE AWB_NO=#awbNo# AND AWB_DATE=#awbDate# AND CONFIRMED_YN='Y' AND ROWNUM=1
		]]>
   	</select>   	

	<select id="getAccsHandlerFromCAR"  parameterClass="java.util.HashMap" resultClass="java.lang.String">
		select DECODE(ACCS_HANDLER,'','CPCT',ACCS_HANDLER) from imp_car_awb where awb_no=#AWB_NO# and awb_date = to_date(#AWB_DATE#,'DDMONYY')			
	</select>
	
	<select id="chkEPHSHCCount"  parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM AWB WHERE (spl_code1 = 'EPH' OR spl_code2     = 'EPH' OR spl_code3     = 'EPH' OR spl_code4     = 'EPH' OR spl_code5     = 'EPH'
			OR spl_code6     = 'EPH' OR spl_code7     = 'EPH' OR spl_code8     = 'EPH' OR spl_code9     = 'EPH') AND awb_no=#AWB_NO# and awb_date = to_date(#AWB_DATE#,'DDMONYY')				
	</select>
	
	<select id="check_outstanding_charge_for_EPH" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM BILL_CHARGE_DTL WHERE  upper(status)='PENDING' and srf_no= #srfNo#
	</select>
	
	<update id="update_epd_srfFLT" parameterClass="java.lang.String">
		UPDATE IMP_SRF_FLT SET DLV_PCS = NVL(INV_PCS, 0),   DLV_WT    = NVL(INV_WT, 0) WHERE SRF_NO= #srfNo#
	</update>
	
	<update id="update_epd_awbinv" parameterClass="java.lang.String">
		UPDATE AWB_INVENTORY SET DLV_YN = 'Y' WHERE SRF_NO= #srfNo#
	</update>
	
	<update id="update_epd_srfawbInv" parameterClass="java.lang.String">
		UPDATE IMP_SRF_AWB_INVENTORY SET DLV_PCS = NVL(LOCN_PCS, 0) , DLV_WT = NVL(LOCN_WT, 0), DLV_DATE  =SYSDATE,   DLV_IND   ='Y' WHERE SRF_NO = #srfNo#
	</update>
	
	<select id="find_srf_lstEPH" parameterClass="cargo.cms.imprt.bo.PostSRFSearchBO" 
 		resultClass="cargo.cms.imprt.bo.SRFBO">
		SELECT 
 			A.SRF_NO as srfNo, A.SRF_PCS as pcs, A.SRF_WT as wt, 'Y' as selSRF,
 			A.AWB_NO as awbNo, A.COLL_NAME as collBy, 
 			TO_CHAR(A.AWB_DATE, 'DDMONYY') as awbDate, 
 			A.CARR_CODE as carrCode, A.SRF_PCS as, A.CR_DATE as crDate, 
      		A.DOC_LINE_NO as docLineNo, SUBSTR(A.AWB_NO,1,3)||'-'||SUBSTR(A.AWB_NO,4) as awbNoDisp,
      		decode((select sum(NVL(dlv_pcs, 0))+sum(NVL(cdif_pc, 0)) from IMP_SRF_AWB_INVENTORY where SRF_NO = A.SRF_NO),A.SRF_PCS,'Y','N') dlvComp
		FROM 
			IMP_SRF A
		WHERE A.SRF_NO = #srfNo#
 	</select>
 	
 	<select id="validateEPDPcWt"  parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM IMP_CAR_SHP C
		JOIN AWB A ON A.AWB_NO= C.AWB_NO AND A.AWB_DATE = C.AWB_DATE
		WHERE C.AWB_NO= #AWB_NO# AND C.AWB_DATE = to_date(#AWB_DATE#,'DDMONYY')	and C.FLT_KEY = #FLT_KEY# AND C.FLT_DATE =to_date(#FLT_DATE#,'DDMONYY')
		AND (NVL(A.PCS,0) =  NVL(C.MANIFEST_PCS,0) AND NVL(A.WT,0) =  NVL(C.MANIFEST_WT,0))
	</select>
	
	<select id="validateNegativePcWtAWB"  parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
	 <![CDATA[
		SELECT COUNT(1) FROM IMP_CAR_AWB C
		JOIN AWB A ON A.AWB_NO= C.AWB_NO AND A.AWB_DATE = C.AWB_DATE
		WHERE C.AWB_NO= #AWB_NO# AND C.AWB_DATE = to_date(#AWB_DATE#,'DDMONYY')	AND ( NVL(bulk_pcs,0) < 0 OR NVL(bulk_wt,0) < 0 OR NVL(bup_pcs,0) < 0 OR NVL(bup_wt,0) < 0 )
	 ]]>
	</select>
	
	<select id="validateNegativePcWtSHP"  parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
	  <![CDATA[
			SELECT COUNT(1) FROM IMP_CAR_SHP C
			JOIN AWB A ON A.AWB_NO= C.AWB_NO AND A.AWB_DATE = C.AWB_DATE 
			WHERE C.AWB_NO= #AWB_NO# AND C.AWB_DATE = to_date(#AWB_DATE#,'DDMONYY')	AND C.FLT_KEY = #FLT_KEY# AND C.FLT_DATE =to_date(#FLT_DATE#,'DDMONYY')
	    AND ( NVL(bulk_pcs,0) < 0 OR NVL(bulk_wt,0) < 0 OR NVL(bup_pcs,0) < 0 OR NVL(bup_wt,0) < 0 )
	   ]]>
	</select>

	<select id="validateHandlingModeforNBK"  parameterClass="java.util.HashMap" resultClass="java.lang.String">
		select chkin_yn from IMP_RAMP_CHK_DTL where flt_key=#fltKey# AND FLT_DATE=#fltDate# AND ULD_KEY = #uldKey#
	</select>
 	<select id="check_accept_transfer_transhipment" parameterClass="map" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM IMP_CAR_AWB WHERE AWB_NO=#AWB_NO# AND AWB_DATE=#AWB_DATE#
	</select>
 	<select id="check_accept_transfer_shp_transhipment" parameterClass="map" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM IMP_CAR_SHP WHERE AWB_NO=#AWB_NO# AND AWB_DATE=#AWB_DATE# AND FLT_KEY=#FLT_KEY# AND FLT_DATE=#FLT_DATE#
	</select>
	<select id="check_accept_transfer_owner_transhipment" parameterClass="map" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM AWB_OWNER WHERE AWB_NO=#AWB_NO# AND AWB_DATE=#AWB_DATE# AND CARR_CODE=#CARR_CODE#
	</select>
 	
	<select id="check_accept_transfer_AWBRecordExists" parameterClass="map" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM AWB WHERE AWB_NO=#AWB_NO# AND AWB_DATE=#AWB_DATE#
	</select>
	
	
	<select id="check_accept_flight_transfer_transhipment" parameterClass="map" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM FLT_OPR WHERE FLT_KEY=#FLT_KEY# AND SCH_DATE=#FLT_DATE# AND FLT_TYPE = 'A'
	</select>
	
	<select id="checkFWBIscreateornot" parameterClass="map" resultClass="java.util.HashMap">
		SELECT PCS AS FWB_PCS,WGT AS FWB_WT FROM EDI_FWB WHERE AWB_NO=#AWB_NO# AND AWB_DATE=#AWB_DATE#
		UNION
		SELECT PCS AS FWB_PCS,WT AS FWB_WT FROM EXP_CAR WHERE AWB_NO=#AWB_NO# AND AWB_DATE=#AWB_DATE# AND NOT EXISTS (SELECT NULL FROM EDI_FWB WHERE AWB_NO=#AWB_NO# AND AWB_DATE=#AWB_DATE#)
	</select>
	<select id="getAWBContentFromAWB_trans" parameterClass="map" resultClass="java.lang.String" >
	SELECT CONTENT FROM AWB WHERE AWB_NO=#AWB_NO# AND AWB_DATE=#AWB_DATE# AND AWB_CLOSED_YN = 'N' AND ROWNUM=1 
	</select>

	<select id="sqlGetinvPcsForaccept_transfer_transhipment" parameterClass="map" resultClass="java.lang.String" >
	SELECT LOCN_PCS FROM AWB_INVENTORY WHERE SEQ_NO = #seqNo#
	</select>
	
	<select id="sqlGetSeqNoForaccept_transfer_transhipment" parameterClass="map" resultClass="java.lang.String" >
	 SELECT SEQ_NO seqNo
	 FROM AWB_INVENTORY
     WHERE AWB_NO = #AWB_NO#
     AND AWB_DATE = #AWB_DATE#
     AND NVL(FLT_KEY,'*')  = NVL(#FLT_KEY#,'*')
     AND NVL(FLT_DATE,SYSDATE) = NVL(#FLT_DATE#,SYSDATE)
     AND NVL(LOC_CODE,'*') = NVL(#LOC_CODE#,'*')
     AND NVL(LSP_NO,0)   = NVL(#LSP_NO#,0)
     AND NVL(ULD_KEY,'*')  = NVL(#ULD_KEY#,'*')
   </select>
   <update id="updatePcsWtForaccept_transfer_transhipment" parameterClass="map">
	UPDATE AWB_INVENTORY
		SET LOCN_PCS   = (LOCN_PCS + #LOC_PCS#),
		    LOCN_WT    = (LOCN_WT  + #LOC_WT#),
		    LM_USER_ID = #USER#,
		    LM_DATE    = sysdate
	     WHERE SEQ_NO = #seqNo#
    </update>

     <update id="decPcsWtForaccept_transfer_transhipment" parameterClass="map">
	UPDATE AWB_INVENTORY
		SET LOCN_PCS   = (LOCN_PCS - #LOC_PCS#),
		    LOCN_WT    = (LOCN_WT  - #LOC_WT#),
		    LM_USER_ID = #USER#,
		    LM_DATE    = sysdate
	     WHERE SEQ_NO = #seqNo#
    </update>
    <delete id="delete_inv_accept_transfer_transhipment" parameterClass="map">
		delete from AWB_INVENTORY where  SEQ_NO = #seqNo# and  LOCN_PCS = 0                
	</delete>
	
    <insert id="ins_awbinv_accept_transfer_transhipment" parameterClass="map">
	INSERT INTO AWB_INVENTORY
	 (AWB_NO, AWB_DATE,CARR_CODE, LSP_NO,LOC_CODE,
	 LOCN_PCS, LOCN_WT, DAM_IND,CR_USER_ID, CR_DATE,
	 LM_USER_ID, LM_DATE,FLT_DATE, FLT_KEY,FLT_TYPE, ULD_KEY, SEQ_NO,STRG_DATE,CATALOG)
	 VALUES
	 (#AWB_NO#,TO_DATE(#AWB_DATE#,'DDMONYY'),#CARR_CODE#,#LSP_NO#,#LOC_CODE#,
	 #LOC_PCS#,#LOC_WT#,'N',#USER#, sysdate,
	 #USER#, sysdate,TO_DATE(#FLT_DATE#,'DDMONYY'),#FLT_KEY#,'I',#ULD_KEY#,AWB_INV_SEQ.NEXTVAL,SYSDATE,#CATALOG#)
	</insert>
	<insert id="ins_impcarawb_accept_transfer_transhipment" parameterClass="map">
	INSERT INTO IMP_CAR_AWB (AWB_NO,AWB_DATE,AWB_PRFX,PPK_TYPE, AWB_DEST,AWB_ORIGIN,
		AWB_PCS,AWB_WT,BULK_PCS, BULK_WT,BUP_PCS,BUP_WT,CONTENT,CATALOG,
		SPL_CODE1,SPL_CODE2,SPL_CODE3,SPL_CODE4,SPL_CODE5,SPL_CODE6,
		SPL_CODE7,SPL_CODE8,SPL_CODE9,CNS_CUST_NO,CSGNE_NAME,
		APPNTD_AGENT,AGENT_CUST_NO, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE,TR_STATUS,CONSOLE_IND,
		CSGNE_ADDR1, CSGNE_ADDR2, CSGNE_ADDR3, CSGNE_ADDR4, CSGNE_ADDR5,CSGNE_PLACE,CSGNE_CTRY_CODE, CSGNE_PIN_CODE,
		AGENT_ADDR1, AGENT_ADDR2, AGENT_ADDR3, AGENT_ADDR4, AGENT_ADDR5,AGENT_PLACE, AGENT_CTRY_CODE,AGENT_PIN_CODE,ECT_HANDLER,TR_TYPE) 
	VALUES(#AWB_NO#,TO_DATE(#AWB_DATE#,'DDMONYY'), #AWB_PFX#,NVL(#PPK_TYPE#, 'B'), #DEST#,#ORIG#, 
		DECODE(#FWB_IND#,'Y',nvl(#FWB_PCS#,'0'),nvl(#AWB_PC#,'0')),DECODE(#FWB_IND#,'Y',nvl(#FWB_WT#,'0'),nvl(#AWB_WT#,'0')),DECODE(#PPK_TYPE#,'B',NVL(#AWB_PC#,0),'0'),DECODE(#PPK_TYPE#,'B',NVL(#AWB_WT#,0),'0'),DECODE(#PPK_TYPE#,'M',NVL(#AWB_PC#,0),'0'),DECODE(#PPK_TYPE#,'M',NVL(#AWB_WT#,0),'0'),#CONTENT#,#CATALOG#,
		#SPLCODE1#,#SPLCODE2#,#SPLCODE3#,#SPLCODE4#,#SPLCODE5#,#SPLCODE6#,  
		#SPLCODE7#,#SPLCODE8#,#SPLCODE9#,#CONS_CODE#,#CONS_NAME#,#AGENT_CODE#,#AGENT_NAME#,
		#USER#,SYSDATE,#USER#,SYSDATE,'A',
		decode((select 1 from mast_code_dtl where code = #CONTENT# and code_type='CONSOLIDATION'),'1','Y','N'),
		#CNSGN_ADDR1#,#CNSGN_ADDR2#,#CNSGN_ADDR3#,#CNSGN_ADDR4#,#CNSGN_ADDR5#,#CNSGN_PLACE#,#CNSGN_CTRY_CODE#,#CNSGN_PIN_CODE#,
		#APP_ADDR1#,#APP_ADDR2#,#APP_ADDR3#,#APP_ADDR4#,#APP_ADDR5#,#APP_PLACE#,#APP_CTRY_CODE#,#APP_PIN_CODE#,#ECT_HDLR#,'DUMMY') 
 	</insert> 
        <insert id="ins_awb_accept_transfer_transhipment" parameterClass="map">
		<![CDATA[
		INSERT INTO AWB (AWB_TYPE,AWB_NO,AWB_DATE,
			CATALOG,SPL_CODE1,SPL_CODE2,SPL_CODE3,  
			SPL_CODE4,SPL_CODE5,SPL_CODE6,SPL_CODE7,SPL_CODE8,SPL_CODE9,
			AWB_RMK,LM_USER_ID ,LM_DATE,CR_USER_ID, CR_DATE, PPK_TYPE,CARR_CODE,CAR_YN,ORIG,DEST,AGENT_CODE,SHPR_CODE,AGENT_NAME,SHIPPER_NAME,PCS,WT,
			NON_PMAN_PCS,NON_PMAN_WT,TR_TYPE,ACCEPT_MODE) 
		VALUES(#AWB_TYPE#,#AWB_NO#,TO_DATE(#AWB_DATE#,'DDMONYY'), 
			#CATALOG#,#SPLCODE1#,
			#SPLCODE2#,#SPLCODE3#,#SPLCODE4#,#SPLCODE5#,#SPLCODE6#,#SPLCODE7#,#SPLCODE8#,#SPLCODE9#,
			#RMK#,#USER#,SYSDATE,#USER#,SYSDATE,#PPK_TYPE#,#CARR_CODE#,#CAR_IND#,#ORIG#,#DEST#,#AGENT_CODE#,#CONS_CODE#,
			#AGENT_NAME#,#shprName#,nvl(#AWB_PC#,0),nvl(#AWB_WT#,0),
			DECODE(#AWB_TYPE#,'T',NVL(#AWB_PC#,0),0),DECODE(#AWB_TYPE#,'T',NVL(#AWB_WT#,0),0),'DUMMY','TIT')  
		]]>
	</insert>
 	<insert id="ins_impcarshp_accept_transfer_transhipment" parameterClass="map">
	INSERT INTO IMP_CAR_SHP (FLT_TYPE,AWB_NO, AWB_DATE, AWB_PRFX, CARR_CODE, FLT_DATE, FLT_KEY, BULK_PCS, BULK_WT,BUP_PCS,BUP_WT,
		MANIFEST_PCS, MANIFEST_WT, PPK_TYPE, LM_USER_ID ,LM_DATE,TR_STATUS,CR_USER_ID, CR_DATE,LDG_POINT,DOC_DISC,CAR_CREATED,RECD_PCS,RECD_WT,TR_TYPE)
	VALUES( 'I',#AWB_NO# ,TO_DATE(#AWB_DATE#,'DDMONYY'),#AWB_PFX#,#CARR_CODE#,TO_DATE(#FLT_DATE#,'DDMONYY'),#FLT_KEY#, 
	DECODE(#PPK_TYPE#,'B',NVL(#MANF_PCS#,0),'0'),	DECODE(#PPK_TYPE#,'B',NVL(#MANF_WT#,0),'0'),	DECODE(#PPK_TYPE#,'M',NVL(#MANF_PCS#,0),'0'),	DECODE(#PPK_TYPE#,'M',NVL(#MANF_WT#,0),'0'),	NVL(#MANF_PCS#,0), NVL(#MANF_WT#,0), #PPK_TYPE#, #USER#,SYSDATE,'A',#USER#,SYSDATE,#ORIG#,#DEST#,'Y',NVL(#MANF_PCS#,0), NVL(#MANF_WT#,0),'DUMMY')	
 	</insert>
 	<insert id="ins_expcar_accept_transfer_transhipment" parameterClass="map">
		<![CDATA[
			INSERT INTO EXP_CAR (AWB_NO,AWB_DATE,AWB_PRFX,ORIGIN,DEST,PCS,WT,
				CONTENT,CATALOG,SPL_CODE1,SPL_CODE2,SPL_CODE3,  
				SPL_CODE4,SPL_CODE5,SPL_CODE6,SPL_CODE7,SPL_CODE8,SPL_CODE9,
				CSGNE_NAME, AGENT_CODE,	HANDLER_CODE,AIRL_RMK,
				LM_USER_ID ,LM_DATE,CR_USER_ID, CR_DATE,
				CSGNE_ADDR, CSGNE_ADDR2, CSGNE_ADDR3, CSGNE_ADDR4, CSGNE_PLACE, CSGNE_CTRY_CODE, CSGNE_PIN_CODE,
				SHPR_ADDR,SHPR_ADDR2,SHPR_ADDR3,SHPR_ADDR4,SHPR_NAME,SHPR_PLACE,SHPR_CTRY_CODE,SHPR_PIN_CODE,LOCK_IND,
	      		CARR_CODE,ACCEPT_MODE) 
	      VALUES(#AWB_NO#,TO_DATE(#AWB_DATE#,'DDMONYY'),#AWB_PFX#,#ORIG#,#DEST#, 
				nvl(#AWB_PC#,0),nvl(#AWB_WT#,0),#CONTENT#,#CATALOG#,#SPLCODE1#,
				#SPLCODE2#,#SPLCODE3#,#SPLCODE4#,#SPLCODE5#,#SPLCODE6#,#SPLCODE7#,#SPLCODE8#,#SPLCODE9#,
				#CONS_NAME#, #AGENT_CODE#,
				#ECT_HDLR#,'',#USER#,SYSDATE,#USER#,SYSDATE,
				#CNSGN_ADDR1#,#CNSGN_ADDR2#,#CNSGN_ADDR3#,#CNSGN_ADDR4#,#CNSGN_PLACE#,#CNSGN_CTRY_CODE#,#CNSGN_PIN_CODE#,
				#CNSGN_ADDR1#,#CNSGN_ADDR2#,	
				#CNSGN_ADDR3#,#CNSGN_ADDR4#,#CONS_NAME#,#CNSGN_PLACE#,#CNSGN_CTRY_CODE#,#CNSGN_PIN_CODE#,
				'N',#CARR_CODE#,#ACCEPT_MODE#) 
		]]>
	</insert>
	<insert id="ins_awbowner_accept_transfer_transhipment" parameterClass="map">
		Insert into AWB_OWNER (AWB_NO,AWB_DATE,CARR_CODE,PCS,WT,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,BU_PCS,OFFLOAD_PCS) 
		values (#AWB_NO#,to_date(#AWB_DATE#,'DDMONYY'),#CARR_CODE#,#AWB_PC#,#AWB_WT#,#USER#,sysdate,#USER#,sysdate,null,null)
	</insert>	
	<update id="upd_impcarawb_accept_transfer_transhipment" parameterClass="map">
		UPDATE IMP_CAR_AWB SET CATALOG = 'TG',
			AWB_PCS   = (AWB_PCS + DECODE(#FWB_IND#,'Y','0',nvl(#AWB_PC#,'0'))),
		    AWB_WT    = (AWB_WT  + DECODE(#FWB_IND#,'Y','0',nvl(#AWB_WT#,'0'))),
		    BULK_PCS = (BULK_PCS + DECODE(#PPK_TYPE#,'B',NVL(#AWB_PC#,0),'0')),
		    BULK_WT = (BULK_WT + DECODE(#PPK_TYPE#,'B',NVL(#AWB_WT#,0),'0')),
		    BUP_PCS = (BUP_PCS + DECODE(#PPK_TYPE#,'M',NVL(#AWB_PC#,0),'0')),
		    BUP_WT = (BUP_WT + DECODE(#PPK_TYPE#,'M',NVL(#AWB_WT#,0),'0')),
		    LM_USER_ID = #USER#,
		    LM_DATE    = sysdate
		WHERE
			AWB_NO = #AWB_NO# AND
			AWB_DATE = TO_DATE(#AWB_DATE#,'DDMONYY')						
	</update> 
	<update id="upd_awb_accept_transfer_transhipment" parameterClass="map">
		UPDATE AWB SET	AWB_TYPE = 'T',CATALOG = 'TG',
		    PCS = (PCS + DECODE(#FWB_IND#,'Y','0',nvl(#AWB_PC#,'0'))),
		    WT = (WT + DECODE(#FWB_IND#,'Y','0',nvl(#AWB_WT#,'0'))),
		    NON_PMAN_PCS = (NON_PMAN_PCS + DECODE(#FWB_IND#,'Y','0',nvl(#AWB_PC#,'0'))),
		    NON_PMAN_WT = (NON_PMAN_WT + DECODE(#FWB_IND#,'Y','0',nvl(#AWB_WT#,'0'))),
		    LM_USER_ID = #USER#,
		    LM_DATE    = sysdate,
		    ACCEPT_MODE = 'TIT'
		WHERE
			AWB_NO = #AWB_NO# AND
			AWB_DATE = TO_DATE(#AWB_DATE#,'DDMONYY')						
	</update> 
  <update id="upd_impcarshp_accept_transfer_transhipment" parameterClass="map">
		UPDATE IMP_CAR_SHP SET
			BULK_PCS = (BULK_PCS + DECODE(#PPK_TYPE#,'B',NVL(#AWB_PC#,0),'0')),
		    BULK_WT = (BULK_WT + DECODE(#PPK_TYPE#,'B',NVL(#AWB_WT#,0),'0')),
		    BUP_PCS = (BUP_PCS + DECODE(#PPK_TYPE#,'M',NVL(#AWB_PC#,0),'0')),
		    BUP_WT = (BUP_WT + DECODE(#PPK_TYPE#,'M',NVL(#AWB_WT#,0),'0')),
		    MANIFEST_PCS = (MANIFEST_PCS + NVL(#AWB_PC#,0)),
		    MANIFEST_WT = (MANIFEST_WT + NVL(#AWB_WT#,0)),
		    RECD_PCS = (RECD_PCS + NVL(#AWB_PC#,0)),
		    RECD_WT = (RECD_WT + NVL(#AWB_WT#,0)),
		    LM_USER_ID = #USER#,
		    LM_DATE    = sysdate
		WHERE
			AWB_NO = #AWB_NO# AND
			AWB_DATE = TO_DATE(#AWB_DATE#,'DDMONYY')	AND
			FLT_DATE = TO_DATE(#FLT_DATE#,'DDMONYY') AND
			FLT_KEY = #FLT_KEY# AND
			FLT_TYPE = 'I'				
	</update> 
 	<update id="upd_expcar_accept_transfer_transhipment" parameterClass="map">
		UPDATE EXP_CAR SET CATALOG = 'TG',
			PCS   = (PCS + #AWB_PC#),
		    WT    = (WT  + #AWB_WT#),
		    LM_USER_ID = #USER#,
		    LM_DATE    = sysdate
		WHERE
			AWB_NO = #AWB_NO# AND
			AWB_DATE = TO_DATE(#AWB_DATE#,'DDMONYY')				
	</update>
    <update id="upd_awbowner_accept_transfer_transhipment" parameterClass="map">
		UPDATE AWB_OWNER SET
			PCS   = (PCS + #AWB_PC#),
		    WT    = (WT  + #AWB_WT#),
		    LM_USER_ID = #USER#,
		    LM_DATE    = sysdate
		WHERE
			AWB_NO = #AWB_NO# AND
			AWB_DATE = TO_DATE(#AWB_DATE#,'DDMONYY') AND	
			CARR_CODE = #CARR_CODE#				
	</update>
	<select id="generateTRFNumber" parameterClass="java.lang.String" resultClass="java.lang.String">
 	SELECT TO_CHAR(RCL_NO_SEQ.NEXTVAL, '00000000') FROM DUAL
	</select>
	
		<insert id="INSERT_TRF_HD_ACCEPT_TRANSHIPMENT" parameterClass="java.util.HashMap">					  
		INSERT INTO TRF_ACCEPT_HD (TRF_NO, TRF_DATE, PPK_TYPE,AWB_NO,AWB_PFX,AWB_DATE,AWB_DEST,RCL_PCS, RCL_WT, RCL_FBL, CARR_CODE, ULD_TYPE, ULD_NO, ULD_CARR, ULD_KEY,FLT_KEY,FLT_DATE,FLT_TYPE, HCARRY_IND, SPL_CODE1, SPL_CODE2, SPL_CODE3,SPL_CODE4, SPL_CODE5, SPL_CODE6, SPL_CODE7, SPL_CODE8, SPL_CODE9, REF_TRM_NO, TRANS_CARR_CODE, ACCPT_MODE, STATUS, TR_TYPE, TR_STATUS, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE,DUM_FLT_KEY,DUM_FLT_DATE,TR_TYPE_EVT,TARMAC_YN) VALUES
					(#TRF_NO#, SYSDATE, #PPK_TYPE#,#AWB_NO#,#AWB_PFX#,#AWB_DATE#,#DEST#, #AWB_PC#, #AWB_WT#, 'N', #CARR_CODE#, #ULD_TYPE#,#ULD_NO#,#ULD_CARR#,#ULD_KEY#,#IMP_FLT_KEY# ,#IMP_FLT_DATE# ,'I' ,'N',#SPLCODE1#,#SPLCODE2#,#SPLCODE3#,#SPLCODE4#,#SPLCODE5#,#SPLCODE6#,#SPLCODE7#,#SPLCODE8#,#SPLCODE9#,#TRF_NO#, #TRANF_CARR#, #ACCEPT_MODE#, 'S', 'AC', 'N', #USER#, SYSDATE, #USER#, SYSDATE,#FLT_KEY#,#FLT_DATE#,'ACAWB',#TARMAC_YN#)
	</insert>			      
	<insert id="INSERT_TRF_DTL_ACCEPT_TRANSHIPMENT" parameterClass="java.util.HashMap">	
		INSERT INTO TRF_ACCEPT_DTL ( TRF_NO, DOC_LINE_NO, PPK_TYPE, ULD_TYPE, ULD_NO, ULD_CARR
				, ULD_KEY, LOC_CODE, LSP_NO, PCS, NET_WT, GROSS_WT, TARE_WT, CONTR_CODE
				, TR_TYPE, TR_STATUS, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE )
				VALUES (#TRF_NO#, TRF_DOCLINE_SEQ.NEXTVAL, #PPK_TYPE#, #ULD_TYPE#,#ULD_NO#,#ULD_CARR#,#ULD_KEY#,
        #LOC_CODE#,#LSP_NO#, NVL(#LOC_PCS#,0), NVL(#LOC_WT#,0), NVL(#GROSS_WT#,0), nvl(#TARE_WT#, 0), (SELECT MAX(a.CONTR_CODE) FROM ULD_TYPE_CONTR a WHERE ULD_TYPE=SUBSTR(#ULD_KEY#,0,3) and rownum=1 GROUP BY a.ULD_TYPE)
				, 'AC', 'T', #USER#,  SYSDATE, #USER#, SYSDATE)
	</insert>	
	<insert id="INSERT_TRF_BRKDN_ACCEPT_TRANSHIPMENT" parameterClass="java.util.HashMap">		
		INSERT INTO TRF_ACCEPT_BRKDN( TRF_NO, AWB_NO, AWB_DATE, ULD_KEY, PCS, WEIGHT, DEST, CONTENT, TR_TYPE, TR_STATUS, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE, TRM_IND,TR_TYPE_EVT)
							VALUES (
							#TRF_NO#, #AWB_NO#,  TO_DATE(#AWB_DATE#,'DDMONYY'), #ULD_KEY#, NVL(#RCL_AWB_PCS#,0), NVL(#RCL_AWB_WT#,0), 
              #DEST#,  #CONTENT#, 'AC', 'T', #USER#, SYSDATE, #USER#, SYSDATE, 'Y','ACMIX')
	</insert>
	<insert id="INSERT_TRF_DMN_ACCEPT_TRANSHIPMENT" parameterClass="java.util.HashMap">
                INSERT INTO TRF_ACCEPT_DMN(TRF_NO, DOC_LINE_NO, LENGTH, WIDTH, HEIGHT, PCS,
                        TR_TYPE, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE)
                                values (#TRF_NO#, TRF_DMN_DOCLINE_SEQ.NEXTVAL, #LENGTH#, #WIDTH#, #HEIGHT#, #PCS#,
                                        'AC', #USER#, SYSDATE, #USER#, SYSDATE)
    </insert>
    <select id = "getTranshipmentListTransferCargo" parameterClass="java.lang.String"  resultClass="cargo.cms.export.bo.ListTransferCargoBO">
	select ppk_type as v_ppk_type, 
	       awb_no as v_awb_no, 
	       to_char(awb_date, 'DDMONYY') as v_awb_date,
	       accpt_mode as v_accpt_mode, 
	       uld_key as v_uld_key, 
	       ref_trf_no as v_ref_trf_no
           from   trf_accept_hd
           where  trf_no = #rclNoMap#
	</select>
	<select id = "getTranshipmentAwbNoStatusListTrns" parameterClass="java.lang.String"  resultClass="java.lang.String">
	 select substr(t1.awb_no, 1, 3)||'-'||substr(t1.awb_no, 4)
	            as   v_awb_no
	            from   exp_car t1, TRF_ACCEPT_BRKDN t2
	            where  t1.awb_no = t2.awb_no
	            and    t1.awb_date = t2.awb_date
                and    t2.TRF_NO = #rclNoMap#
	            and    rownum = 1
	            
	</select>
	<update id="upd_void_impcarawb_accept_transfer_transhipment" parameterClass="map">
		UPDATE IMP_CAR_AWB SET
			AWB_PCS   = (AWB_PCS - DECODE(#FWB_IND#,'Y','0',nvl(#AWB_PC#,'0'))),
		    AWB_WT    = (AWB_WT  - DECODE(#FWB_IND#,'Y','0',nvl(#AWB_WT#,'0'))),
		    BULK_PCS = (BULK_PCS - DECODE(#PPK_TYPE#,'B',NVL(#AWB_PC#,0),'0')),
		    BULK_WT = (BULK_WT - DECODE(#PPK_TYPE#,'B',NVL(#AWB_WT#,0),'0')),
		    BUP_PCS = (BUP_PCS - DECODE(#PPK_TYPE#,'M',NVL(#AWB_PC#,0),'0')),
		    BUP_WT = (BUP_WT - DECODE(#PPK_TYPE#,'M',NVL(#AWB_WT#,0),'0')),
		    LM_USER_ID = #USER#,
		    LM_DATE    = sysdate
		WHERE
			AWB_NO = #AWB_NO# AND
			AWB_DATE = TO_DATE(#AWB_DATE#,'DDMONYY')						
	</update>
	<delete id="delete_void_impcarawb_accept_transfer_transhipment" parameterClass="map">
		delete from IMP_CAR_AWB where  awb_no   = #AWB_NO# and awb_date = TO_DATE(#AWB_DATE#,'DDMONYY') and  BULK_PCS = 0 and BUP_PCS = 0               
	</delete>
	
	<update id="upd_void_awb_accept_transfer_transhipment" parameterClass="map">
		UPDATE AWB SET	
		    PCS = (PCS - DECODE(#FWB_IND#,'Y','0',nvl(#AWB_PC#,'0'))),
		    WT = (WT - DECODE(#FWB_IND#,'Y','0',nvl(#AWB_WT#,'0'))),
		    NON_PMAN_PCS = (NON_PMAN_PCS - DECODE(#FWB_IND#,'Y','0',nvl(#AWB_PC#,'0'))),
		    NON_PMAN_WT = (NON_PMAN_WT - DECODE(#FWB_IND#,'Y','0',nvl(#AWB_WT#,'0'))),
		    LM_USER_ID = #USER#,
		    LM_DATE    = sysdate
		WHERE
			AWB_NO = #AWB_NO# AND
			AWB_DATE = TO_DATE(#AWB_DATE#,'DDMONYY')						
	</update> 
 	<delete id="del_void_awb_accept_transfer_transhipment" parameterClass="map">
		delete from AWB where  awb_no   = #AWB_NO# and awb_date = TO_DATE(#AWB_DATE#,'DDMONYY') and  PCS = 0 and WT = 0               
	</delete>
	<update id="upd_void_impcarshp_accept_transfer_transhipment" parameterClass="map">
		UPDATE IMP_CAR_SHP SET
			BULK_PCS = (BULK_PCS - DECODE(#PPK_TYPE#,'B',NVL(#AWB_PC#,0),'0')),
		    BULK_WT = (BULK_WT - DECODE(#PPK_TYPE#,'B',NVL(#AWB_WT#,0),'0')),
		    BUP_PCS = (BUP_PCS - DECODE(#PPK_TYPE#,'M',NVL(#AWB_PC#,0),'0')),
		    BUP_WT = (BUP_WT - DECODE(#PPK_TYPE#,'M',NVL(#AWB_WT#,0),'0')),
		    MANIFEST_PCS = (MANIFEST_PCS - NVL(#AWB_PC#,0)),
		    MANIFEST_WT = (MANIFEST_WT - NVL(#AWB_WT#,0)),
		    RECD_PCS = (RECD_PCS - NVL(#AWB_PC#,0)),
		    RECD_WT = (RECD_WT - NVL(#AWB_WT#,0)),
		    LM_USER_ID = #USER#,
		    LM_DATE    = sysdate
		WHERE
			AWB_NO = #AWB_NO# AND
			AWB_DATE = TO_DATE(#AWB_DATE#,'DDMONYY')	AND
			FLT_DATE = TO_DATE(#FLT_DATE#,'DDMONYY') AND
			FLT_KEY = #FLT_KEY# AND
			FLT_TYPE = 'I'				
	</update> 
 	<delete id="del_void_impcarshp_accept_transfer_transhipment" parameterClass="map">
		delete from IMP_CAR_SHP where  AWB_NO = #AWB_NO# AND AWB_DATE = TO_DATE(#AWB_DATE#,'DDMONYY')	AND	FLT_DATE = TO_DATE(#FLT_DATE#,'DDMONYY') AND FLT_KEY = #FLT_KEY# AND FLT_TYPE = 'I' and MANIFEST_PCS = 0 and BULK_PCS = 0 and BUP_PCS = 0		               
	</delete>
	<update id="upd_void_expcar_accept_transfer_transhipment" parameterClass="map">
		UPDATE EXP_CAR SET
			PCS   = (PCS - #AWB_PC#),
		    WT    = (WT  - #AWB_WT#),
		    LM_USER_ID = #USER#,
		    LM_DATE    = sysdate
		WHERE
			AWB_NO = #AWB_NO# AND
			AWB_DATE = TO_DATE(#AWB_DATE#,'DDMONYY')				
	</update>
    <delete id="del_void_expcar_accept_transfer_transhipment" parameterClass="map">
		delete from EXP_CAR where  AWB_NO = #AWB_NO# AND AWB_DATE = TO_DATE(#AWB_DATE#,'DDMONYY')	AND	PCS = 0		               
	</delete>
	<update id="upd_void_awbowner_accept_transfer_transhipment" parameterClass="map">
		UPDATE AWB_OWNER SET
			PCS   = (PCS - #AWB_PC#),
		    WT    = (WT  - #AWB_WT#),
		    LM_USER_ID = #USER#,
		    LM_DATE    = sysdate
		WHERE
			AWB_NO = #AWB_NO# AND
			AWB_DATE = TO_DATE(#AWB_DATE#,'DDMONYY') AND	
			CARR_CODE = #CARR_CODE#				
	</update>
	<select id="getOldCarrCountForAccepTransfer" parameterClass="map" resultClass="java.lang.Integer">
	<![CDATA[
	SELECT COUNT(cnt) FROM (
	SELECT COUNT(1) AS cnt FROM TRF_ACCEPT_HD WHERE AWB_NO = #AWB_NO# AND AWB_DATE=#AWB_DATE# AND CARR_CODE != #CARR_CODE# AND STATUS != 'V'
	UNION ALL
	SELECT COUNT(1) AS cnt FROM TRF_ACCEPT_HD A, trf_accept_brkdn B WHERE B.TRF_NO = A.TRF_NO AND B.AWB_NO=#AWB_NO# AND B.AWB_DATE=#AWB_DATE# AND A.STATUS != 'V' AND A.CARR_CODE != #CARR_CODE#) C where C.cnt > 0
	]]>
	</select>
	<select id="getOldAWBDestination" parameterClass="map" resultClass="java.lang.String">
	select DEST from awb where awb_no=#AWB_NO# and awb_date=#AWB_DATE#
	</select>
	
	 <delete id="del_void_awbowner_accept_transfer_transhipment" parameterClass="map">
		delete from AWB_OWNER where  AWB_NO = #AWB_NO# AND AWB_DATE = TO_DATE(#AWB_DATE#,'DDMONYY')	AND CARR_CODE = #CARR_CODE# AND	PCS = 0		               
	</delete>
	<select id="getTransAwbList" parameterClass="java.lang.String" resultClass="cargo.cms.export.bo.ListTransferCargoBO">
		SELECT AWB_NO AS awbNo, TO_CHAR(AWB_DATE,'DDMONYY') as awbDate,PCS as pc,WEIGHT as wt FROM TRF_ACCEPT_BRKDN WHERE TRF_NO = #rclNo#
	</select>
	<select id="getTransBulkAwbList" parameterClass="java.lang.String" resultClass="cargo.cms.export.bo.ListTransferCargoBO">
		SELECT AWB_NO AS awbNo, TO_CHAR(AWB_DATE,'DDMONYY') as awbDate,RCL_PCS as pc,RCL_WT as wt FROM TRF_ACCEPT_HD WHERE TRF_NO = #rclNo#
	</select>
	<select id="getTransBulkAwbLocnList" parameterClass="java.lang.String" resultClass="cargo.cms.export.bo.ListTransferCargoBO">
		select b.uld_key as uldNo,loc_code as locn,b.lsp_no as lspNo,b.pcs as locnPcs,TRIM(TO_CHAR(NVL(b.net_wt,0), '9999999.99')) locnWt from trf_accept_hd a,trf_accept_dtl b where b.trf_no = a.trf_no and a.trf_no=#rclNo#
	</select>
	<select id="getExpBulkAwbLocnList" parameterClass="java.lang.String" resultClass="cargo.cms.export.bo.ListTransferCargoBO">
		select b.uld_key as uldNo,loc_code as locn,b.lsp_no as lspNo,b.pcs as locnPcs,TRIM(TO_CHAR(NVL(b.net_wt,0), '9999999.99')) locnWt from exp_rcl_hd a,exp_rcl_dtl b where b.rcl_no = a.rcl_no and a.rcl_no=#rclNo#
	</select>
	<select id="getExpMixMileAwbList" parameterClass="java.lang.String" resultClass="cargo.cms.export.bo.ListTransferCargoBO">
		SELECT BRKDN.AWB_NO as awbNo,TO_CHAR(BRKDN.AWB_DATE,'DDMONYY') as awbDate,BRKDN.PCS as locnPcs,TRIM(TO_CHAR(NVL(BRKDN.WEIGHT,0), '9999999.99')) locnWt,HD.ULD_KEY as uldNo,(SELECT LOC_CODE FROM ULD_INVENTORY WHERE ULD_KEY=HD.ULD_KEY AND ROWNUM=1) locn FROM EXP_RCL_HD HD,EXP_RCL_BRKDN BRKDN WHERE BRKDN.RCL_NO = HD.RCL_NO AND HD.RCL_NO=#rclNo#
	</select>
	<select id="getExpBulkMileAwbList" parameterClass="java.lang.String" resultClass="cargo.cms.export.bo.ListTransferCargoBO">
		SELECT HD.AWB_NO as awbNo,TO_CHAR(HD.AWB_DATE,'DDMONYY') as awbDate FROM EXP_RCL_HD HD WHERE HD.RCL_NO=#rclNo#
	</select>
	
	<select id = "getTransFltDetails" parameterClass="java.lang.String"  resultClass="cargo.cms.export.bo.ListTransferCargoBO">
	SELECT CARR_CODE AS carr,trans_carr_code transCarr,TO_CHAR(NVL(DUM_FLT_DATE,TRF_DATE),'DDMONYY') AS flt_date,dum_flt_key as flt_key FROM TRF_ACCEPT_HD WHERE TRF_NO = #rclNoMap#
	</select>
	<update id="upd_void_trfhd_accept_transfer_transhipment" parameterClass="map">
		UPDATE TRF_ACCEPT_HD SET STATUS = 'V',VOID_USER_ID = #voidUser#, VOID_DATE = SYSDATE WHERE TRF_NO = #rclNo#			
	</update>
	<update id="upd_void_trfhd_accept_vcl_transhipment" parameterClass="map">
		update val_vcl_hd set void_user_id=#voidUser#,void_date = sysdate where vcl_no = (select vcl_no from trf_accept_hd where trf_no = #rclNo# and rownum = 1)			
	</update>
	<select id="fetchTransAcceptlInventoryList" parameterClass="cargo.cms.export.buildup.bo.AwbInfoBO" resultClass="cargo.cms.export.buildup.bo.AwbInfoBO">
		select * from (		
			SELECT A.lsp_no lspNo,
				  A.uld_key uldKey,
				  A.locn_pcs locnPcs,
				  A.locn_wt locnWt,
				  A.SEQ_NO seqNo,
				  1 orderNo
				FROM awb_inventory A WHERE
				A.awb_no = #awbNo#
				AND A.AWB_DATE = #awbDate#
				AND (a.flt_key in (select rule_value from cmsrules where rule_code like 'DUMMY_FLT_AAT') 
		        OR a.flt_key in (select rule_value from cmsrules where rule_code like 'DUMMY_FLT_HACTL'))
		    UNION
	        SELECT A.lsp_no lspNo,
					  A.uld_key uldKey,
					  A.locn_pcs locnPcs,
					  A.locn_wt locnWt,
					  A.SEQ_NO seqNo,
					  2 orderNo
					FROM awb_inventory A WHERE
					A.awb_no = #awbNo#
					AND A.AWB_DATE = #awbDate#
					AND a.flt_key not in (select rule_value from cmsrules where rule_code like 'DUMMY_FLT_AAT') 
		            AND a.flt_key not in (select rule_value from cmsrules where rule_code like 'DUMMY_FLT_HACTL')
			       ) 
				ORDER BY orderNo,locnPcs,locnWt ASC
	</select>
	<select id="findhandlrForCarr" parameterClass="java.lang.String" resultClass="java.lang.String">
	select HANDLED_BY_TERMINAL from MAST_CARRIER where code = #PARAM#
	</select>
	<select id="getAATDummyFlight" parameterClass="java.lang.String" resultClass="java.lang.String">
	select rule_value from cmsrules where rule_code='DUMMY_FLT_AAT'
	</select>
	<select id="getHACTLDummyFlight" parameterClass="java.lang.String" resultClass="java.lang.String">
	select rule_value from cmsrules where rule_code='DUMMY_FLT_HACTL'
	</select>
	
	<insert id="InsertUldInventoryForTransAcceptTransferCargo"  parameterClass="map">
		INSERT INTO ULD_INVENTORY(ULD_KEY,OWNER_ID,STRG_DATE,LM_DATE,LM_USER_ID,SOURCE_CODE,TARE_WEIGHT,GROSS_WEIGHT,ULD_NO,ULD_TYPE,ULD_CARR,LOC_CODE,OWNED_INV,HANDLING_MODE,EMPTY_FLG,MIX_PPK_IND,TRANSIT_FLG,TR_TYPE,ENTRY_TIME,cfm_status,contr_code) 
			values(#ULD_KEY#,#OWN_CARR#,sysdate,sysdate,#USER#,'ATC',NVL(#TARE_WT#,0),NVL(#GROSS_WT#,0),#ULD_NO#,#ULD_TYPE#,#ULD_CARR#,#LOC_CODE#,'Y',#HDLG_MODE#,'N','N','Y','ATULD',SYSDATE,'CONFIRMED',#CONTR_CODE#) 
	</insert>
	<select id="select_uld_inv_trfhd_accepttranshipment" parameterClass="map" resultClass="java.lang.Integer">
	select count(1) from ULD_INVENTORY where ULD_KEY = #ULD_KEY#
	</select>
	<select id="select_uld_from_trfhd_accepttranshipment" parameterClass="java.lang.String" resultClass="java.lang.String">
	SELECT ULD_KEY FROM TRF_ACCEPT_HD WHERE TRF_NO=#PARAM# AND ROWNUM =1
	</select>
		<update id="upd_uld_inv_trfhd_accepttranshipment" parameterClass="map">
		UPDATE ULD_INVENTORY
			SET 
			  OWNER_ID           = #OWN_CARR#,
			  STRG_DATE            = sysdate,
			  LM_DATE              = sysdate,
			  LM_USER_ID           = #USER#,
			  SOURCE_CODE          = 'ATC',
			  TARE_WEIGHT          = NVL(#TARE_WT#,0),
			  GROSS_WEIGHT         = NVL(#GROSS_WT#,0),
			  ULD_NO               = #ULD_NO#,
			  ULD_TYPE             = #ULD_TYPE#,
			  ULD_CARR             = #ULD_CARR#,
			  LOC_CODE             = #LOC_CODE#,
			  OWNED_INV            = 'Y',
			  HANDLING_MODE        = #HDLG_MODE#,
			  EMPTY_FLG            = 'N',
			  MIX_PPK_IND          ='N',
			  TRANSIT_FLG          ='Y' ,
			  CFM_STATUS           ='CONFIRMED',
			  GEN_RMK              = NULL,
			  DAM_IND              = 'N',			  
			  DAM_RMK              = NULL,
			  EIC_FLG              = 'N',
			  AGENT_INV            = 'N',
			  REF_TR_NO            = #ULD_KEY#,
			  REF_TR_TYPE          = 'IR',
			  REF_TR_DATE          = SYSDATE,
			  REF_TR_EVENT         = 'ATC',
			  BASE_PLT             = NULL,
			  EIC_UNLDG_PT         = NULL,
			  EIC_TYPE             = NULL,
			  BASE_PAL_FLG         = 'N',
			  ASV_INV              = 'N',
			  FLT_NO               = NULL,
			  FLT_TYPE             = NULL,
			  FLT_DATE             = NULL,
			  FLT_KEY              = NULL,
			  RESV_FLG             = 'N',
			  RESV_DATE            ='',
			  RESV_RMK             ='',
			  RMV_RMK              ='',
			  IMP_FLT_CARR         ='',
			  IMP_FLT_DATE         ='',
			  IMP_FLT_KEY          ='',
			  IMP_FLT_NO           ='',
			  PPK_IND              ='N',
			  MAN_WT_IND           = 'N',
			  man_wt_ind2          = 'N',
			  man_wt_ind3          = 'N',
			  PARENT_OWNER         = #ULD_CARR#,
			  FIRST_WT             = NVL(#GROSS_WT#,0),
			  SECOND_WT            ='',
			  THIRD_WT             ='',
			  REF_WT               ='',
			  ULDENTRY_MSG_RCVD_YN = 'N',
			  TARGET               = '',
			  ULD_FLOW             = '',
        	  FINAL_WEIGHT         = 'N',
        	  TR_TYPE              = 'ATULD',
        	  contr_code           = #CONTR_CODE#
			WHERE uld_key          = #ULD_KEY#			
	</update>
	<update id="upd_void_uld_inv_trfhd_accepttranshipment" parameterClass="map">
		UPDATE ULD_INVENTORY SET STRG_DATE = sysdate,LM_DATE = sysdate, SOURCE_CODE = '', TARE_WEIGHT = '0', GROSS_WEIGHT = '0',LOC_CODE = '',OWNED_INV = 'N',HANDLING_MODE = '', EMPTY_FLG = 'Y',MIX_PPK_IND = 'N',TRANSIT_FLG = 'N' WHERE uld_key = (SELECT ULD_KEY FROM TRF_ACCEPT_HD WHERE TRF_NO=#rclNo# AND ROWNUM =1)			
	</update>
	
	<select id="trans_rcl_by_uld"  parameterClass="cargo.cms.export.bo.RCLSearchBO" resultClass="cargo.cms.export.bo.IssueRCLHeaderBO">
		<![CDATA[
		SELECT PPK_TYPE                                                        AS pkgType,
			   TRF_NO                                                          AS rclNum,
			   ULD_KEY                                                         AS awbNum,
			   AWB_DEST                                                        AS destination,
			   AWB_CONTENT                                                     AS awbContent,
			   RCL_PCS                                                         AS rclPcs,
			   RCL_WT                                                          AS rclWt,
			   TRF_DATE                                                        AS rclIssueDate,
			   DECODE(UPPER(STATUS), 'V', 'Y','N')                             AS voidInd,
			   pkg_exp_val.get_rcl_car_ind(awb_no, awb_date, TRF_NO, ppk_type) AS carInd,
			   RTN_IND                                                         AS cargoRetInd
			FROM TRF_ACCEPT_HD
			WHERE ULD_KEY=#uldNum#
			ORDER BY TRF_DATE DESC
		]]>
   	</select>
	<select id="trans_rcl_by_awb"  parameterClass="cargo.cms.export.bo.RCLSearchBO" resultClass="cargo.cms.export.bo.IssueRCLHeaderBO">
		<![CDATA[
			SELECT PPK_TYPE AS pkgType,
				   TRF_NO        AS rclNum,
				   SUBSTR(awb_no,1,3)
				   ||'-'
				   ||SUBSTR(awb_no,4)                                              AS awbNum,
				   AWB_DEST                                                        AS destination,
				   AWB_CONTENT                                                     AS awbContent,
				   RCL_PCS                                                         AS rclPcs,
				   RCL_WT                                                          AS rclWt,
				   TRF_DATE                                                        AS rclIssueDate,
				   DECODE(UPPER(STATUS), 'V', 'Y','N')                             AS voidInd,
				   pkg_exp_val.get_rcl_car_ind(awb_no, awb_date, TRF_NO, ppk_type) AS carInd,
				   RTN_IND                                                         AS cargoRetInd
				 FROM TRF_ACCEPT_HD
				 WHERE AWB_NO=#awbNum#
				 AND AWB_DATE=TO_DATE(#awbDate#,'DDMONYY')
				 ORDER BY TRF_DATE DESC
			]]>
   		</select>
	<select id="trans_rcl_by_rcl_no"  parameterClass="cargo.cms.export.bo.RCLSearchBO" resultClass="cargo.cms.export.bo.IssueRCLHeaderBO">
		<![CDATA[
			SELECT 
				A.TRF_NO as rclNum, 
				decode(A.ppk_type,'B',A.awb_no,'P',A.awb_no,'M',A.uld_key) AS awbNum,
				decode(A.ppk_type,'B',CONCAT(CONCAT(SUBSTR(A.awb_no,0,3),'-'),SUBSTR(A.awb_no,4)),
				'P',CONCAT(CONCAT(SUBSTR(A.awb_no,0,3),'-'),SUBSTR(A.awb_no,4))
				,'M',A.uld_key) as awbNumDisplay,TO_CHAR(A.TRF_DATE,'DDMONYY HH24:MI') as rclIssueDate,
				to_char(A.VOID_DATE,'DDMONYY HH24:MI') AS voidDate,A.PPK_TYPE as pkgType, A.RCL_PCS as rclPcs, 
				A.RCL_WT as rclWt,A.RTN_PCS as rtnPcs, A.RTN_WT as rtnWt, B.code_desc as agentName, B.CO_IATA_CODE as iataCode, '' as preRCLNum, 
				A.FLT_NO as flightNum, TO_CHAR(A.FLT_DATE,'DDMONYY') as flightDate, A.CARR_CODE as carrCode, A.AWB_DEST as awbDest, A.TRUCK_NO as truckNum, 
				A.AWB_CONTENT as awbContent, A.SEC_CHECK as secCheck, A.THICK_IND as thickInd, A.RMK as remarks, decode(UPPER(A.STATUS), 'V', 'Y','N') as voidInd,
				pkg_exp_val.get_rcl_car_ind(A.awb_no, A.awb_date, A.TRF_NO, A.ppk_type) as carInd, A.RTN_IND as cargoRetInd, 
				A.SPL_CODE1 splCode1,A.SPL_CODE2 splCode2,A.SPL_CODE3 splCode3,A.SPL_CODE4 splCode4,A.SPL_CODE5 splCode5,A.SPL_CODE6 splCode6,A.SPL_CODE7 splCode7,A.SPL_CODE8 splCode8,A.SPL_CODE9 splCode9,
				(A.SPL_CODE1 || ' ' ||  A.SPL_CODE2 || ' ' ||  A.SPL_CODE3 || ' ' ||  A.SPL_CODE4 || ' ' ||  A.SPL_CODE5 || ' ' ||  A.SPL_CODE6 || ' ' ||  A.SPL_CODE7 || ' ' ||  A.SPL_CODE8 || ' ' ||  A.SPL_CODE9) AS splCodes, 
				DUT_COMMODITY as dutCommodity, A.QCP_IND as qcpInd, A.LM_USER_ID as lmUserID, ASIDE_ACCEPT as airsideAccept, A.VOID_RMK as voidRemark ,
				(select sum(LOCN_PCS) from awb_inventory where awb_no=A.awb_no and awb_date=A.awb_date) AS invPcs,
				(select sum(LOCN_WT) from awb_inventory where awb_no=A.awb_no and awb_date=A.awb_date)  AS invWt,A.CUST_NO AS agntCode,A.REJECT_IND AS reject,A.DLV_BY AS dlvBy,A.DLV_BY_HKID AS HKID,A.RMK AS remarks,
				A.ENDORSED_BY AS endorsedBy,A.REJECT_REASON AS rejectReason, A.uld_key as uldNum,A.TR_TYPE as trType,A.TR_STATUS as trStatus,A.FLT_KEY as flightKey,
				A.ACCPT_MODE as accptMode, A.SEC_RMK as secRemarks, A.STATUS as status ,				
				(select flt_key as impFltKey from cdt_inb_flt_dtls  where RCL_NO = A.TRF_NO and rownum = 1) as impFlightKey, 
				(select to_char(flt_date,'DDMONYY') as impFltDate from cdt_inb_flt_dtls  where RCL_NO = A.TRF_NO and rownum = 1) as impFlightDate  
			FROM TRF_ACCEPT_HD A, cust_company B
      		WHERE B.CODE(+)=A.CUST_NO AND (A.TRF_NO = #rclNum# or  A.VCL_NO =#rclNum# )
			]]>
   		</select>
   		<select id="trans_rcl_by_date"  parameterClass="cargo.cms.export.bo.RCLSearchBO" resultClass="cargo.cms.export.bo.IssueRCLHeaderBO">
		<![CDATA[
			SELECT PPK_TYPE AS pkgType,
				  TRF_NO        AS rclNum,
				  SUBSTR(awb_no,1,3)
				  ||'-'
				  ||SUBSTR(awb_no,4)                                              AS awbNum,
				  AWB_DEST                                                        AS destination,
				  AWB_CONTENT                                                     AS awbContent,
				  RCL_PCS                                                         AS rclPcs,
				  RCL_WT                                                          AS rclWt,
				  TRF_DATE                                                        AS rclIssueDate,
				  DECODE(UPPER(STATUS), 'V', 'Y','N')                             AS voidInd,
				  pkg_exp_val.get_rcl_car_ind(awb_no, awb_date, TRF_NO, ppk_type) AS carInd,
				  RTN_IND                                                         AS cargoRetInd
				FROM TRF_ACCEPT_HD
				WHERE PPK_TYPE                                                                              IN ('B', 'P')
				AND TRF_DATE BETWEEN TO_DATE(#issueDateFr#, 'ddMONyy') AND TO_DATE(#issueDateTo#, 'ddMONyy') + 1
				UNION
				SELECT PPK_TYPE                       AS pkgType,
				  TRF_NO                              AS rclNum,
				  ULD_KEY                             AS awbNum ,
				  AWB_DEST                            AS destination,
				  AWB_CONTENT                         AS awbContent,
				  RCL_PCS                             AS rclPcs,
				  RCL_WT                              AS rclWt,
				  TRF_DATE                            AS rclIssueDate,
				  DECODE(UPPER(STATUS), 'V', 'Y','N') AS voidInd,
				  CAR_IND                             AS carInd,
				  RTN_IND                             AS cargoRetInd
				FROM TRF_ACCEPT_HD
				WHERE PPK_TYPE ='M'
				AND TRF_DATE BETWEEN TO_DATE(#issueDateFr#, 'ddMONyy') AND TO_DATE(#issueDateTo#, 'ddMONyy') +1		
		   ]]>
   		</select>
   		<select id="trans_rcl_by_all"  parameterClass="cargo.cms.export.bo.RCLSearchBO" resultClass="cargo.cms.export.bo.IssueRCLHeaderBO">
		<![CDATA[
		SELECT PPK_TYPE AS pkgType,
			  TRF_NO        AS rclNum,
			  SUBSTR(awb_no,1,3)
			  ||'-'
			  ||SUBSTR(awb_no,4)                                              AS awbNum,
			  AWB_DEST                                                        AS destination,
			  AWB_CONTENT                                                     AS awbContent,
			  RCL_PCS                                                         AS rclPcs,
			  RCL_WT                                                          AS rclWt,
			  TRF_DATE                                                        AS rclIssueDate,
			  DECODE(UPPER(STATUS), 'V', 'Y','N')                             AS voidInd,
			  pkg_exp_val.get_rcl_car_ind(awb_no, awb_date, TRF_NO, ppk_type) AS carInd,
			  RTN_IND                                                         AS cargoRetInd
			FROM TRF_ACCEPT_HD
			WHERE PPK_TYPE                                                                              IN ('B', 'P')
			AND TRF_DATE BETWEEN TO_DATE(#issueDateFr#, 'ddMONyy') AND TO_DATE(#issueDateTo#, 'ddMONyy') + 1
			AND ULD_TYPE  = #uldType#
			AND CARR_CODE = #carrCode#
			AND STATUS    =#status#
			UNION
			SELECT PPK_TYPE                       AS pkgType,
			  TRF_NO                              AS rclNum,
			  ULD_KEY                             AS awbNum ,
			  AWB_DEST                            AS destination,
			  AWB_CONTENT                         AS awbContent,
			  RCL_PCS                             AS rclPcs,
			  RCL_WT                              AS rclWt,
			  TRF_DATE                            AS rclIssueDate,
			  DECODE(UPPER(STATUS), 'V', 'Y','N') AS voidInd,
			  CAR_IND                             AS carInd,
			  RTN_IND                             AS cargoRetInd
			FROM TRF_ACCEPT_HD
			WHERE PPK_TYPE ='M'
			AND TRF_DATE BETWEEN TO_DATE(#issueDateFr#, 'ddMONyy') AND TO_DATE(#issueDateTo#, 'ddMONyy') + 1
			AND ULD_TYPE  = #uldType#
			AND CARR_CODE = #carrCode#
			AND STATUS    =#status#
	]]>
   </select>
  <select id="trans_rcl_by_date_status"  parameterClass="cargo.cms.export.bo.RCLSearchBO" resultClass="cargo.cms.export.bo.IssueRCLHeaderBO">
		<![CDATA[
			SELECT PPK_TYPE AS pkgType,
				  TRF_NO        AS rclNum,
				  SUBSTR(awb_no,1,3)
				  ||'-'
				  ||SUBSTR(awb_no,4)                                              AS awbNum,
				  AWB_DEST                                                        AS destination,
				  AWB_CONTENT                                                     AS awbContent,
				  RCL_PCS                                                         AS rclPcs,
				  RCL_WT                                                          AS rclWt,
				  TRF_DATE                                                        AS rclIssueDate,
				  DECODE(UPPER(STATUS), 'V', 'Y','N')                             AS voidInd,
				  pkg_exp_val.get_rcl_car_ind(awb_no, awb_date, TRF_NO, ppk_type) AS carInd,
				  RTN_IND                                                         AS cargoRetInd
				FROM TRF_ACCEPT_HD
				WHERE PPK_TYPE                                                                              IN ('B', 'P')
				AND TRF_DATE BETWEEN TO_DATE(#issueDateFr#, 'ddMONyy') AND TO_DATE(#issueDateTo#, 'ddMONyy') + 1
				AND STATUS=#status#
				UNION
				SELECT PPK_TYPE                       AS pkgType,
				  TRF_NO                              AS rclNum,
				  ULD_KEY                             AS awbNum ,
				  AWB_DEST                            AS destination,
				  AWB_CONTENT                         AS awbContent,
				  RCL_PCS                             AS rclPcs,
				  RCL_WT                              AS rclWt,
				  TRF_DATE                            AS rclIssueDate,
				  DECODE(UPPER(STATUS), 'V', 'Y','N') AS voidInd,
				  CAR_IND                             AS carInd,
				  RTN_IND                             AS cargoRetInd
				FROM TRF_ACCEPT_HD
				WHERE PPK_TYPE ='M'
				AND TRF_DATE BETWEEN TO_DATE(#issueDateFr#, 'ddMONyy') AND TO_DATE(#issueDateTo#, 'ddMONyy') + 1
				AND STATUS=#status#
		]]>
   		</select>
   		<select id="trans_rcl_by_date_carr"  parameterClass="cargo.cms.export.bo.RCLSearchBO" resultClass="cargo.cms.export.bo.IssueRCLHeaderBO">
		<![CDATA[
		SELECT PPK_TYPE AS pkgType,
			  TRF_NO        AS rclNum,
			  SUBSTR(awb_no,1,3)
			  ||'-'
			  ||SUBSTR(awb_no,4)                                              AS awbNum,
			  AWB_DEST                                                        AS destination,
			  AWB_CONTENT                                                     AS awbContent,
			  RCL_PCS                                                         AS rclPcs,
			  RCL_WT                                                          AS rclWt,
			  TRF_DATE                                                        AS rclIssueDate,
			  DECODE(UPPER(STATUS), 'V', 'Y','N')                             AS voidInd,
			  pkg_exp_val.get_rcl_car_ind(awb_no, awb_date, TRF_NO, ppk_type) AS carInd,
			  RTN_IND                                                         AS cargoRetInd
			FROM TRF_ACCEPT_HD
			WHERE PPK_TYPE                                                                              IN ('B', 'P')
			AND TRF_DATE BETWEEN TO_DATE(#issueDateFr#, 'ddMONyy') AND TO_DATE(#issueDateTo#, 'ddMONyy') + 1
			AND CARR_CODE = #carrCode#
			UNION
			SELECT PPK_TYPE                       AS pkgType,
			  TRF_NO                              AS rclNum,
			  ULD_KEY                             AS awbNum ,
			  AWB_DEST                            AS destination,
			  AWB_CONTENT                         AS awbContent,
			  RCL_PCS                             AS rclPcs,
			  RCL_WT                              AS rclWt,
			  TRF_DATE                            AS rclIssueDate,
			  DECODE(UPPER(STATUS), 'V', 'Y','N') AS voidInd,
			  CAR_IND                             AS carInd,
			  RTN_IND                             AS cargoRetInd
			FROM TRF_ACCEPT_HD
			WHERE PPK_TYPE ='M'
			AND TRF_DATE BETWEEN TO_DATE(#issueDateFr#, 'ddMONyy') AND TO_DATE(#issueDateTo#, 'ddMONyy') + 1
			AND CARR_CODE = #carrCode#
		]]>
   		</select>
   		<select id="trans_rcl_by_date_status_type"  parameterClass="cargo.cms.export.bo.RCLSearchBO" resultClass="cargo.cms.export.bo.IssueRCLHeaderBO">
		<![CDATA[
			SELECT PPK_TYPE AS pkgType,
				  TRF_NO        AS rclNum,
				  SUBSTR(awb_no,1,3)
				  ||'-'
				  ||SUBSTR(awb_no,4)                                              AS awbNum,
				  AWB_DEST                                                        AS destination,
				  AWB_CONTENT                                                     AS awbContent,
				  RCL_PCS                                                         AS rclPcs,
				  RCL_WT                                                          AS rclWt,
				  TRF_DATE                                                        AS rclIssueDate,
				  DECODE(UPPER(STATUS), 'V', 'Y','N')                             AS voidInd,
				  pkg_exp_val.get_rcl_car_ind(awb_no, awb_date, TRF_NO, ppk_type) AS carInd,
				  RTN_IND                                                         AS cargoRetInd
				FROM TRF_ACCEPT_HD
				WHERE PPK_TYPE                                                                              IN ('B', 'P')
				AND TRF_DATE BETWEEN TO_DATE(#issueDateFr#, 'ddMONyy') AND TO_DATE(#issueDateTo#, 'ddMONyy') + 1
				AND ULD_TYPE = #uldType#
				AND STATUS   =#status#
				UNION
				SELECT PPK_TYPE                       AS pkgType,
				  TRF_NO                              AS rclNum,
				  ULD_KEY                             AS awbNum ,
				  AWB_DEST                            AS destination,
				  AWB_CONTENT                         AS awbContent,
				  RCL_PCS                             AS rclPcs,
				  RCL_WT                              AS rclWt,
				  TRF_DATE                            AS rclIssueDate,
				  DECODE(UPPER(STATUS), 'V', 'Y','N') AS voidInd,
				  CAR_IND                             AS carInd,
				  RTN_IND                             AS cargoRetInd
				FROM TRF_ACCEPT_HD
				WHERE PPK_TYPE ='M'
				AND TRF_DATE BETWEEN TO_DATE(#issueDateFr#, 'ddMONyy') AND TO_DATE(#issueDateTo#, 'ddMONyy') + 1
				AND ULD_TYPE = #uldType#
				AND STATUS   =#status#
			]]>
</select>
<select id="trans_rcl_by_date_carr_type"  parameterClass="cargo.cms.export.bo.RCLSearchBO" resultClass="cargo.cms.export.bo.IssueRCLHeaderBO">
		<![CDATA[
		SELECT PPK_TYPE AS pkgType,
			  TRF_NO        AS rclNum,
			  SUBSTR(awb_no,1,3)
			  ||'-'
			  ||SUBSTR(awb_no,4)                                              AS awbNum,
			  AWB_DEST                                                        AS destination,
			  AWB_CONTENT                                                     AS awbContent,
			  RCL_PCS                                                         AS rclPcs,
			  RCL_WT                                                          AS rclWt,
			  TRF_DATE                                                        AS rclIssueDate,
			  DECODE(UPPER(STATUS), 'V', 'Y','N')                             AS voidInd,
			  pkg_exp_val.get_rcl_car_ind(awb_no, awb_date, TRF_NO, ppk_type) AS carInd,
			  RTN_IND                                                         AS cargoRetInd
			FROM TRF_ACCEPT_HD
			WHERE PPK_TYPE                                                                              IN ('B', 'P')
			AND TRF_DATE BETWEEN TO_DATE(#issueDateFr#, 'ddMONyy') AND TO_DATE(#issueDateTo#, 'ddMONyy') + 1
			AND ULD_TYPE  = #uldType#
			AND CARR_CODE = #carrCode#
			UNION
			SELECT PPK_TYPE                       AS pkgType,
			  TRF_NO                              AS rclNum,
			  ULD_KEY                             AS awbNum ,
			  AWB_DEST                            AS destination,
			  AWB_CONTENT                         AS awbContent,
			  RCL_PCS                             AS rclPcs,
			  RCL_WT                              AS rclWt,
			  TRF_DATE                            AS rclIssueDate,
			  DECODE(UPPER(STATUS), 'V', 'Y','N') AS voidInd,
			  CAR_IND                             AS carInd,
			  RTN_IND                             AS cargoRetInd
			FROM TRF_ACCEPT_HD
			WHERE PPK_TYPE ='M'
			AND TRF_DATE BETWEEN TO_DATE(#issueDateFr#, 'ddMONyy') AND TO_DATE(#issueDateTo#, 'ddMONyy') + 1
			AND ULD_TYPE  = #uldType#
			AND CARR_CODE = #carrCode#
		]]>
   		</select> 
   		<select id="trans_rcl_by_date_type"  parameterClass="cargo.cms.export.bo.RCLSearchBO" resultClass="cargo.cms.export.bo.IssueRCLHeaderBO">
	<![CDATA[
		SELECT PPK_TYPE AS pkgType,
			  TRF_NO        AS rclNum,
			  SUBSTR(awb_no,1,3)
			  ||'-'
			  ||SUBSTR(awb_no,4)                                              AS awbNum,
			  AWB_DEST                                                        AS destination,
			  AWB_CONTENT                                                     AS awbContent,
			  RCL_PCS                                                         AS rclPcs,
			  RCL_WT                                                          AS rclWt,
			  TRF_DATE                                                        AS rclIssueDate,
			  DECODE(UPPER(STATUS), 'V', 'Y','N')                             AS voidInd,
			  pkg_exp_val.get_rcl_car_ind(awb_no, awb_date, TRF_NO, ppk_type) AS carInd,
			  RTN_IND                                                         AS cargoRetInd
			FROM TRF_ACCEPT_HD
			WHERE PPK_TYPE                                                                              IN ('B', 'P')
			AND TRF_DATE BETWEEN TO_DATE(#issueDateFr#, 'ddMONyy') AND TO_DATE(#issueDateTo#, 'ddMONyy') + 1
			AND ULD_TYPE = #uldType#
			UNION
			SELECT PPK_TYPE                       AS pkgType,
			  TRF_NO                              AS rclNum,
			  ULD_KEY                             AS awbNum ,
			  AWB_DEST                            AS destination,
			  AWB_CONTENT                         AS awbContent,
			  RCL_PCS                             AS rclPcs,
			  RCL_WT                              AS rclWt,
			  TRF_DATE                            AS rclIssueDate,
			  DECODE(UPPER(STATUS), 'V', 'Y','N') AS voidInd,
			  CAR_IND                             AS carInd,
			  RTN_IND                             AS cargoRetInd
			FROM TRF_ACCEPT_HD
			WHERE PPK_TYPE ='M'
			AND TRF_DATE BETWEEN TO_DATE(#issueDateFr#, 'ddMONyy') AND TO_DATE(#issueDateTo#, 'ddMONyy') + 1
			AND ULD_TYPE = #uldType#
					]]>
   	</select>
   	<select id="trans_void_by_rcl_no"  parameterClass="cargo.cms.export.bo.RCLSearchBO" resultClass="cargo.cms.export.bo.IssueRCLHeaderBO">
	<![CDATA[
		SELECT A.TRF_NO                                                                                                                                                   AS rclNum,
			  A.ENDORSED_BY                                                                                                                                                   AS endrosementBY ,
			  A.REJECT_IND                                                                                                                                                    AS rejectInd ,
			  A.REJECT_REASON                                                                                                                                                 AS rejReason,
			  CONCAT(CONCAT(SUBSTR(DECODE(A.ppk_type,'B',A.awb_no,'P',A.awb_no,'M',A.uld_key),0,3),'-'),SUBSTR(DECODE(A.ppk_type,'B',A.awb_no,'P',A.awb_no,'M',A.uld_key),4)) AS awbNumDisplay,
			  DECODE(A.ppk_type,'B',A.awb_no,'P',A.awb_no,'M',A.uld_key)                                                                                                      AS awbNum,
			  TO_CHAR(A.TRF_DATE,'DDMONYY HH24:MI')                                                                                                                           AS rclIssueDate,
			  A.PPK_TYPE                                                                                                                                                      AS pkgType,
			  A.RCL_PCS                                                                                                                                                       AS rclPcs,
			  A.RCL_WT rclWt,
			  A.RTN_PCS                                                               AS rtnPcs,
			  A.RTN_WT                                                                AS rtnWt,
			  B.code_desc                                                             AS agentName,
			  B.CODE                                                                  AS iataCode,
			  ''                                                              AS preRCLNum,
			  A.FLT_KEY                                                               AS flightNum,
			  TO_CHAR(A.FLT_DATE,'DDMONYY')                                           AS flightDate,
			  A.CARR_CODE                                                             AS carrCode,
			  A.AWB_DEST                                                              AS destination,
			  A.TRUCK_NO                                                              AS truckNum,
			  A.AWB_CONTENT                                                           AS awbContent,
			  A.SEC_CHECK                                                             AS secCheck,
			  A.THICK_IND                                                             AS thickInd,
			  A.RMK                                                                   AS remarks,
			  DECODE(UPPER(A.STATUS), 'V', 'Y','N')                                   AS voidInd,
			  pkg_exp_val.get_rcl_car_ind(A.awb_no, A.awb_date, A.TRF_NO, A.ppk_type) AS carInd,
			  A.RTN_IND                                                               AS cargoRetInd,
			  (A.SPL_CODE1
			  || ' '
			  || A.SPL_CODE2
			  || ' '
			  || A.SPL_CODE3
			  || ' '
			  || A.SPL_CODE4
			  || ' '
			  || A.SPL_CODE5
			  || ' '
			  || A.SPL_CODE6
			  || ' '
			  || A.SPL_CODE7
			  || ' '
			  || A.SPL_CODE8) AS splCode1,
			  A.STATUS        AS status
			FROM TRF_ACCEPT_HD A,
			  cust_company B
			WHERE B.CODE(+) = A.cust_no
			AND (A.TRF_NO   = #rclNum#
			OR A.TRF_NO     ='$rclNum$m')
			AND A.STATUS!   ='V'
		]]>
   	</select>
   <select id="trans_rcl_by_carrier_code"  parameterClass="cargo.cms.export.bo.RCLSearchBO" resultClass="cargo.cms.export.bo.IssueRCLHeaderBO">
	<![CDATA[
		SELECT PPK_TYPE                                                   AS pkgType,
			  TRF_NO                                                          AS rclNum,
			  ULD_KEY                                                         AS awbNum,
			  AWB_DEST                                                        AS destination,
			  AWB_CONTENT                                                     AS awbContent,
			  RCL_PCS                                                         AS rclPcs,
			  RCL_WT                                                          AS rclWt,
			  TRF_DATE                                                        AS rclIssueDate,
			  DECODE(UPPER(STATUS), 'V', 'Y','N')                             AS voidInd,
			  pkg_exp_val.get_rcl_car_ind(awb_no, awb_date, TRF_NO, ppk_type) AS carInd,
			  RTN_IND                                                         AS cargoRetInd
			FROM TRF_ACCEPT_HD
			WHERE CARR_CODE = upper(#carrCode#)
			ORDER BY TRF_DATE DESC
		]]>
   	</select>
   	<select id="qtransissuercllocation" parameterClass="cargo.cms.export.bo.RCLSearchBO" resultClass="cargo.cms.export.bo.IssueRCLBulkLocBO">   	
   	SELECT A.TRF_NO                    AS rclNum,
		  A.DOC_LINE_NO                    AS docLineNum,
		  TO_CHAR(A.GROSS_WT,999999999.9)  AS grossWt,
		  A.PCS                            AS locationPcs,
		  TO_CHAR(A.NET_WT,999999999.9)    AS netWeight,
		  TO_CHAR(A.FSCALE_WT,999999999.9) AS flrScaleWt,
		  TO_CHAR(A.TARE_WT,999999999.9)   AS tareWt,
		  A.LOC_CODE                       AS locationCode,
		  A.LSP_NO                         AS lspNum,
		  A.BT_NO                          AS btNum,
		  A.ULD_KEY                        AS uldNum,
		  A.CONTR_CODE                     AS contourCode,
		  (A.NET_WT + A.TARE_WT)           AS grossWt ,
		  A.MAN_WT_YN                      AS manWtYN,
		  (SELECT DECODE(COUNT(1),0,'N','Y')
		  FROM uld_inventory
		  WHERE owned_inv = 'Y'
		  AND uld_key     = A.uld_key
		  ) AS inULDInv,
		  A.OHG ohg
		FROM TRF_ACCEPT_DTL A,
		  TRF_ACCEPT_HD B
		WHERE A.TRF_NO=B.TRF_NO
		AND A.TRF_NO  =#rclNum# 
		<isNotEmpty property="packageType">
		AND A.PPK_TYPE=#packageType# 
		</isNotEmpty>
   	</select>
   	<select id="qtransbulkdimension" parameterClass="cargo.cms.export.bo.RCLSearchBO" resultClass="cargo.cms.export.bo.IssueRCLBulkDim">
		SELECT A.TRF_NO AS rclNum,
			  A.DOC_LINE_NO AS docLineNum,
			  A.LENGTH      AS LENGTH,
			  A.WIDTH       AS width,
			  A.HEIGHT      AS height,
			  A.PCS         AS pieces,
			  A.REMARKS     AS remarks
			FROM TRF_ACCEPT_DMN A,
			  TRF_ACCEPT_HD B
			WHERE A.TRF_NO=#rclNum#
			AND B.TRF_NO  =A.TRF_NO 
	</select>
	   	<select id="qtransbulkhawbdetails" parameterClass="cargo.cms.export.bo.RCLSearchBO" resultClass="cargo.cms.export.bo.IssueRCLBulkDim">
	SELECT distinct hawb.hawb_no hawbNo,
  mail.orig hawbOrg,
  mail.dest hawbDest,
  hawb.pc avlPcs,
  TRIM(TO_CHAR(NVL(hawb.wt,0), '9999999.9')) avlWt
FROM trf_accept_hd hd,
  trf_accept_hawb hawb,
  imp_xps_obc_mail mail
WHERE hawb.trf_no = hd.trf_no
AND mail.tag_no   = hawb.hawb_no
AND mail.awb_no   =hd.awb_no
AND mail.awb_date = hd.awb_date
AND hd.trf_no     =#rclNum#
	</select>
	<select id="Trans_Bulk_Inventory"  parameterClass="cargo.cms.export.bo.IssueRCLHeaderBO" resultClass="cargo.cms.export.bo.VoidRCLBO">
		<![CDATA[
		SELECT t.awb_no awbNo,
			  t.awb_date awbDate,
			  SUM(locn_pcs) strgPcs,
			  SUM(locn_wt) strgWt
			FROM awb_inventory t
			JOIN TRF_ACCEPT_HD r
			ON r.awb_no    = t.awb_no
			AND r.awb_date = t.awb_date
			WHERE TRF_NO   = #rclNum#
			GROUP BY t.awb_no,
			  t.awb_date
		 ]]>
	</select>
	<select id="Trans_Void_RCL_Blank_List"  parameterClass="cargo.cms.export.bo.IssueRCLHeaderBO" resultClass="cargo.cms.export.bo.VoidRCLBO">
		<![CDATA[
		 SELECT t.seq_no seqNo,
			  t.loc_code locCode,
			  t.uld_key uldKey,
			  t.lsp_no lspNo,
			  t.LOCN_PCS locnPcs,
			  t.locn_wt locnWt ,
			  'N' disableVoidPcWt
			FROM awb_inventory t
			JOIN TRF_ACCEPT_HD r
			ON r.awb_no    = t.awb_no
			AND r.awb_date = t.awb_date
			WHERE TRF_NO   = #rclNum#
		 ]]>
	</select>
	<select id="Trans_Void_RCL_List"  parameterClass="cargo.cms.export.bo.IssueRCLHeaderBO" resultClass="cargo.cms.export.bo.VoidRCLBO">
		<![CDATA[	 
		 SELECT t.seq_no seqNo,
				  t.loc_code locCode,
				  t.uld_key uldKey,
				  t.lsp_no lspNo,
				  t.LOCN_PCS locnPcs,
				  t.locn_wt locnWt ,
				  t.LOCN_PCS voidPcs,
				  t.locn_wt voidWt ,
				  'Y' disableVoidPcWt
				FROM awb_inventory t
				JOIN TRF_ACCEPT_HD r
				ON r.awb_no    = t.awb_no
				AND r.awb_date = t.awb_date
				WHERE TRF_NO   = #rclNum#
		 ]]>
	</select>
	<select id="trans_rcl_break_down"  parameterClass="cargo.cms.export.bo.RCLSearchBO" resultClass="cargo.cms.export.bo.IssueRCLBulkDim">
	<![CDATA[
		SELECT SUBSTR(awb_no,1,3)
			  ||'-'
			  ||SUBSTR(awb_no,4)                   AS awbNumDisp,
			  awb_no                               AS awbNum,
			  DEST                                 AS destination,
			  PCS                                  AS pieces,
			  ltrim(TO_CHAR(WEIGHT,99999999999.9)) AS netWeight,
			  (SPL_CODE1
			  || ' '
			  || SPL_CODE2
			  || ' '
			  || SPL_CODE3
			  || ' '
			  || SPL_CODE4
			  || ' '
			  || SPL_CODE5
			  || ' '
			  || SPL_CODE6
			  || ' '
			  || SPL_CODE7
			  || ' '
			  || SPL_CODE8)      AS splCode,
			  CONTENT            AS awbContent,
			  NVL(SEC_CHECK,'N') AS secChk
			FROM TRF_ACCEPT_BRKDN
			WHERE TRF_NO = #rclNum#
		]]>
   	</select>
   	<select id="getTransInvPcWtEnqRCL" parameterClass="java.lang.String" resultClass="cargo.cms.export.bo.IssueRCLHeaderBO">
   		SELECT SUM(pc) AS invPcs,
			  SUM(wt)      AS invWt
			FROM
			  (SELECT SUM(LOCN_PCS) AS pc,
			    SUM(LOCN_WT)        AS wt,
			    hd.awb_no
			  FROM TRF_ACCEPT_HD hd
			  LEFT OUTER JOIN awb_inventory ivt
			  ON ivt.awb_no   =hd.awb_no
			  AND ivt.awb_date=hd.awb_date
			  WHERE hd.TRF_NO =#param#
			  GROUP BY hd.awb_no
			  ) 
   		</select>
   		<select id="getTransInvPcWtEnqRCLMix" parameterClass="java.lang.String" resultClass="cargo.cms.export.bo.IssueRCLHeaderBO">
   		SELECT SUM(pc) AS invPcs,
			  SUM(wt)      AS invWt
			FROM
			  (SELECT SUM(LOCN_PCS) AS pc,
			    SUM(LOCN_WT)        AS wt,
			    brk.awb_no
			  FROM TRF_ACCEPT_HD hd
			  JOIN TRF_ACCEPT_BRKDN brk
			  ON hd.TRF_NO=brk.TRF_NO
			  LEFT OUTER JOIN awb_inventory ivt
			  ON ivt.awb_no   =brk.awb_no
			  AND ivt.awb_date=brk.awb_date
			  WHERE hd.TRF_NO =#param#
			  GROUP BY brk.awb_no
			  ) 
   		</select>
   		
   		
	<select id="getPendingListToAutoSendRCF"  parameterClass="java.lang.String"  resultClass="cargo.cms.imprt.bo.CarShpBO">
		SELECT shp.flt_key                AS fltKey ,
			  TO_CHAR(shp.flt_date,'DDMONYY') AS fltDate,
			  shp.awb_no                      AS awbNo ,
			  TO_CHAR(shp.awb_date,'DDMONYY') AS awbDate,
			  NVL(shp.recd_pcs,0)             AS recdPcsToUpdate,
			  opr.CGO_ACFT_TYPE               AS aircraftType
			FROM imp_car_shp shp
			JOIN flt_opr opr ON opr.flt_key = shp.flt_key AND opr.sch_date = shp.flt_date AND opr.flt_type = 'A'
			WHERE NVL(pending_rcf,'N') = 'Y' AND opr.act_date IS NOT NULL	
	</select>	
	
		<select id="checkPassengerConfigurationToSendRCF"  parameterClass="cargo.cms.imprt.bo.CarShpBO" resultClass="java.lang.Integer">
		SELECT count(1) FROM flt_opr where flt_key = #fltKey# and sch_date = to_date(#fltDate#,'DDMONYY') and flt_type = 'A' and 
			SYSDATE  > to_date ( to_char(act_date, 'DDMONYY') ||' '|| lpad(ACT_TIME,4, 0),'DDMONYY HH24MI' ) + ( (SELECT TO_NUMBER(rule_value)	FROM CMSRULES WHERE RULE_CODE='Y_MINS_PAX_RCF') / (24 * 60) )
	</select>
	
	<select id="checkFrighterConfigurationToSendRCF"  parameterClass="cargo.cms.imprt.bo.CarShpBO" resultClass="java.lang.Integer">
		SELECT count(1) FROM flt_opr where flt_key = #fltKey# and sch_date = to_date(#fltDate#,'DDMONYY') and flt_type = 'A' and 
			SYSDATE  > to_date ( to_char(act_date, 'DDMONYY') ||' '|| lpad(ACT_TIME,4, 0),'DDMONYY HH24MI' ) + ( (SELECT TO_NUMBER(rule_value)	FROM CMSRULES WHERE RULE_CODE='Y_MINS_FRE_RCF') / (24 * 60) )	
	</select>
	
	<select id="checkCombiConfigurationToSendRCF"  parameterClass="cargo.cms.imprt.bo.CarShpBO" resultClass="java.lang.Integer">
		SELECT count(1) FROM flt_opr where flt_key = #fltKey# and sch_date = to_date(#fltDate#,'DDMONYY') and flt_type = 'A' 
			and SYSDATE > to_date ( to_char(act_date, 'DDMONYY') ||' '|| lpad(ACT_TIME,4, 0),'DDMONYY HH24MI' )
	</select>
	
	<update id="resetPendingRCFIndicator" parameterClass="cargo.cms.imprt.bo.CarShpBO">
	  UPDATE IMP_CAR_SHP
		  SET pending_rcf = 'N',
		    LM_USER_ID    = 'SYSTEM',
		    LM_DATE       = sysdate
		  WHERE AWB_NO    = #awbNo#
		  AND AWB_DATE    = TO_DATE(#awbDate#,'DDMONYY')
		  AND FLT_KEY     = UPPER(#fltKey#)
		  AND FLT_DATE    = TO_DATE(#fltDate#,'DDMONYY')
	</update>
	
	<update id="resetPendingRCFIndicatorAfterRCF" parameterClass="map">	
	  UPDATE IMP_CAR_SHP
		  SET pending_rcf = 'N',
		    LM_USER_ID    = 'SYSTEM',
		    LM_DATE       = sysdate
		  WHERE AWB_NO    = #AWB_NO#
		  AND AWB_DATE    = TO_DATE(#AWB_DATE#,'DDMONYY')
		  AND FLT_KEY     = UPPER(#FLT_KEY#)
		  AND FLT_DATE    = TO_DATE(#FLT_DATE#,'DDMONYY')
		  AND pending_rcf = 'Y'
	</update>	
	
	<update id="setPendingRCFIndicator" parameterClass="cargo.cms.imprt.bo.CarShpBO">
	  UPDATE IMP_CAR_SHP
		  SET pending_rcf = 'Y',
		    LM_USER_ID    = 'SYSTEM',
		    LM_DATE       = sysdate
		  WHERE AWB_NO    = #awbNo#
		  AND AWB_DATE    = TO_DATE(#awbDate#,'DDMONYY')
		  AND FLT_KEY     = UPPER(#fltKey#)
		  AND FLT_DATE    = TO_DATE(#fltDate#,'DDMONYY')
	</update>
	
	<select id="getFlightAircraftType"  parameterClass="cargo.cms.imprt.bo.CarShpBO" resultClass="java.lang.String">
		SELECT CGO_ACFT_TYPE as aircraftType FROM flt_opr where flt_key = #fltKey# and sch_date = to_date(#fltDate#,'DDMONYY') and flt_type = 'A'
	</select>
	
	<select id="getChkConfigBasedRCFIND" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		select count(1) from mast_carrier where code = #carrCode# and NVL(RCF_CONFIG,'N') = 'Y'
	</select>
	
	
	<select id="checkPassengerConfigToSendRCFOnBrk"  parameterClass="cargo.cms.imprt.bo.CarShpBO" resultClass="java.lang.Integer">
		SELECT count(1) FROM flt_opr where flt_key = #fltKey# and sch_date = to_date(#fltDate#,'DDMONYY') and flt_type = 'A' and act_date is not null and 
			SYSDATE  > to_date ( to_char(act_date, 'DDMONYY') ||' '|| lpad(ACT_TIME,4, 0),'DDMONYY HH24MI' ) + ( (SELECT TO_NUMBER(rule_value)	FROM CMSRULES WHERE RULE_CODE='X_MINS_PAX_RCF') / (24 * 60) )
	</select>
	
	<select id="checkFrighterConfigToSendRCFOnBrk"  parameterClass="cargo.cms.imprt.bo.CarShpBO" resultClass="java.lang.Integer">
		SELECT count(1) FROM flt_opr where flt_key = #fltKey# and sch_date = to_date(#fltDate#,'DDMONYY') and flt_type = 'A' and act_date is not null and 
			SYSDATE  > to_date ( to_char(act_date, 'DDMONYY') ||' '|| lpad(ACT_TIME,4, 0),'DDMONYY HH24MI' ) + ( (SELECT TO_NUMBER(rule_value)	FROM CMSRULES WHERE RULE_CODE='X_MINS_FRE_RCF') / (24 * 60) )		
	</select>
	
	<select id="checkCombiConfigToSendRCFOnBrk"  parameterClass="cargo.cms.imprt.bo.CarShpBO" resultClass="java.lang.Integer">
		SELECT count(1) FROM flt_opr where flt_key = #fltKey# and sch_date = to_date(#fltDate#,'DDMONYY') and flt_type = 'A' and act_date is not null and 
			SYSDATE > to_date ( to_char(act_date, 'DDMONYY') ||' '|| lpad(ACT_TIME,4, 0),'DDMONYY HH24MI' )
	</select>

	<select id="validateULDCheckedOUTFromFlt"  parameterClass="map" resultClass="java.lang.String">	
			select count(1) from exp_chkout_dtl where flt_key = #FLT_KEY# and flt_date = TO_DATE(#FLT_DATE#,'DDMONYY') and uld_key = #ULD_BT_NO# and chkout_date is not null
	</select>

	<select id="fetchXTShipmentList"  parameterClass="cargo.cms.imprt.bo.XTShipmentBO" resultClass="cargo.cms.imprt.bo.XTShipmentBO">
		select A.*, 
		<![CDATA[
		case WHEN  to_number(A.remTimeInMins) > 0 then 
	      LPAD(TRUNC(A.remTimeInMins/60),2,0) || ':' || RPAD((A.remTimeInMins - TRUNC(A.remTimeInMins/60)*60),2,0)
	      else '0' end as remTime
	    ]]>  
	    from (
		<![CDATA[	
			SELECT xt.imp_flt_key AS impFltKey,
			  TO_CHAR(iopr.SCH_DATE,'DDMONYY') impFltDate,
			  TO_CHAR(iopr.EST_DATE,'DDMONYY') impEstDate,			  
			  CASE WHEN iopr.ACT_DATE IS NOT NULL    THEN 'Y'    ELSE 'N'  END AS ataIndicator,
			  DECODE( PKG_COMMON.GET_FLT_ATA(iopr.FLT_KEY,iopr.SCH_DATE, 'A', 'DD'),NULL, NVL(PKG_COMMON.GET_FLT_ETA(iopr.FLT_KEY,iopr.SCH_DATE, 'A', 'DD'),PKG_COMMON.GET_FLT_STA(iopr.FLT_KEY,iopr.SCH_DATE, 'A', 'DD')), PKG_COMMON.GET_FLT_ATA(iopr.FLT_KEY,iopr.SCH_DATE, 'A', 'DD')) AS etaAta,
			  ( to_date( (TO_CHAR( DECODE(eopr.EST_DATE,NULL,eopr.SCH_DATE,eopr.EST_DATE), 'DDMONYY' )  || LPAD(DECODE(eopr.EST_DATE,NULL,eopr.SCH_TIME,eopr.EST_TIME),4, 0)), 'DDMONYYHH24MI' )
			    -  to_date( (TO_CHAR( DECODE(iopr.EST_DATE,NULL,iopr.SCH_DATE,iopr.EST_DATE), 'DDMONYY' )  || LPAD(DECODE(iopr.EST_DATE,NULL,iopr.SCH_TIME,iopr.EST_TIME),4, 0)), 'DDMONYYHH24MI' ) ) * 24 * 60 * 60 / 3600 AS xtType,
			    
			  case when chk.CHKIN_YN = 'Y' THEN 
			    ( ( to_date( (TO_CHAR( DECODE(eopr.EST_DATE,NULL,eopr.SCH_DATE,eopr.EST_DATE), 'DDMONYY' )  || LPAD(DECODE(eopr.EST_DATE,NULL,eopr.SCH_TIME,eopr.EST_TIME),4, 0)), 'DDMONYYHH24MI' ) - ( ( (NVL( (SELECT TIME_MINS FROM MAST_ACFT_TYPE_CONFIG WHERE ACFT_TYPE = eopr.CGO_ACFT_TYPE), 0) ) /60 )/ 24) 
         				- to_date(to_char(SYSDATE,'DDMONYY HH24MI'),'DDMONYYHH24MI') ) * 24 * 60 )
			  else 0 end as remTimeInMins,   
			   
			  CASE WHEN NVL(shp.manifest_pcs,0) > 0  THEN ROUND( (shp.recd_pcs/shp.manifest_pcs) * 100 ,2)     || '%'    ELSE '0'      || '%'  END AS bdPercentage,
			  xt.awb_no   AS awbNumber,
			  TO_CHAR(xt.awb_date,'DDMONYY') AS awbDate,	
			  SUBSTR(xt.awb_no,1,3) ||'-' ||SUBSTR(xt.awb_no,4) AS awbNumDisp,
			  DECODE(awb.spl_code1, NULL, '', awb.spl_code1 || DECODE(awb.spl_code2, NULL, '', ','))
                    || DECODE(awb.spl_code2, NULL, '', awb.spl_code2 || DECODE(awb.spl_code3, NULL, '', ','))
                    || DECODE(awb.spl_code3, NULL, '', awb.spl_code3 || DECODE(awb.spl_code4, NULL, '', ','))
                    || DECODE(awb.spl_code4, NULL, '', awb.spl_code4 || DECODE(awb.spl_code5, NULL, '', ','))
                    || DECODE(awb.spl_code5, NULL, '', awb.spl_code5 || DECODE(awb.spl_code6, NULL, '', ','))
                    || DECODE(awb.spl_code6, NULL, '', awb.spl_code6 || DECODE(awb.spl_code7, NULL, '', ','))
                    || DECODE(awb.spl_code7, NULL, '', awb.spl_code7 || DECODE(awb.spl_code8, NULL, '', ','))
                    || DECODE(awb.spl_code8, NULL, '', awb.spl_code8 || DECODE(awb.spl_code9, NULL, '', ','))
                    || DECODE(awb.spl_code9, NULL, '', awb.spl_code9) splCode,	
       (CASE WHEN decode(awb.catalog,'EG','C','ES','C','IG','C','TG','C','TA','C','EU','M','TM','M','EO','Q','IO','Q','C') = 'C' THEN 
       (CASE WHEN (SELECT COUNT(1) FROM CUST_AIRL_SPL_CODE SPLCODE WHERE SPLCODE.SPL_TYPE='SPL_COURIER_SHC' AND SPLCODE.CARR_CODE = AWB.CARR_CODE AND (SPLCODE.SPL_CODE = awb.SPL_CODE1 OR SPLCODE.SPL_CODE = awb.SPL_CODE2 OR SPLCODE.SPL_CODE = awb.SPL_CODE3 OR SPLCODE.SPL_CODE = awb.SPL_CODE4 
       OR SPLCODE.SPL_CODE = awb.SPL_CODE5 OR SPLCODE.SPL_CODE = awb.SPL_CODE6 OR SPLCODE.SPL_CODE = awb.SPL_CODE7 OR SPLCODE.SPL_CODE = awb.SPL_CODE8 OR SPLCODE.SPL_CODE = awb.SPL_CODE9)) > 0
       THEN 'Q' ELSE decode(awb.catalog,'EG','C','ES','C','IG','C','TG','C','TA','C','EU','M','TM','M','EO','Q','IO','Q','C') END) ELSE decode(awb.catalog,'EG','C','ES','C','IG','C','TG','C','TA','C','EU','M','TM','M','EO','Q','IO','Q','C') END) as cargoType,
			  xt.uld_key  AS uldKey,
			  
			   CASE WHEN (xt.uld_key IS NOT NULL AND xt.uld_key = 'BULK') THEN (SELECT shp_trf_type FROM v_ddt_dtl where awb_no = xt.awb_no AND awb_date = xt.awb_date and shp_trf_type is not null and rownum = 1) 
                WHEN xt.uld_key IS NOT NULL THEN (SELECT TRANSIT_TYPE FROM uld_inventory WHERE uld_key = xt.uld_key)  
                ELSE ''  END as transitType,
			  
			  awb.pcs                                AS shpPcs,
			  awb.wt                                 AS shpWt,
			  TO_CHAR(chk.CHKIN_DATE,'HH24:MI')      AS checkinTime,
			  TO_CHAR(chk.TIME_OF_ARRIVAL,'HH24:MI') AS timeOfArrival,
			  CASE
			    WHEN chk.BRKDN_COMPL_DATE IS NOT NULL
			    THEN 'C'
			    WHEN (chk.BRKDN_COMPL_DATE IS NULL
			    AND chk.BRKDN_START_DATE   IS NOT NULL)
			    THEN 'S'
			    ELSE ''
			  END                                     AS brkDownStatus,
			  TO_CHAR(chk.BRKDN_COMPL_DATE,'HH24:MI') AS bdComplTime,
			  NVL(strgDtl.uld_key,strgDtl.lsp_no) AS lspULD,			  
		      case when strgDtl.uld_key is not null then (select loc_code from uld_inventory  where uld_key = strgDtl.uld_key)
		           when strgDtl.lsp_no is not null then (select loc_code from lsp_inventory  where lsp_no = strgDtl.lsp_no)
		      END as currLoc,        
			    strgDtl.TARGET AS target,
			    strgDtl.TARGET_ID AS targetID,
		        strgDtl.ULD_KEY AS strgULD,
		        strgDtl.LSP_NO AS strgLSP,
			  xt.exp_flt_key AS expFltKey,
			  TO_CHAR(xt.exp_flt_date,'DDMONYY') AS expFltDate,
			  DECODE( PKG_COMMON.GET_FLT_ATA(eopr.FLT_KEY,eopr.SCH_DATE, 'D', 'DD'),NULL, NVL(PKG_COMMON.GET_FLT_ETA(eopr.FLT_KEY,eopr.SCH_DATE, 'D', 'DD'),
			        PKG_COMMON.GET_FLT_STA(eopr.FLT_KEY,eopr.SCH_DATE, 'D', 'DD')), PKG_COMMON.GET_FLT_ATA(eopr.FLT_KEY,eopr.SCH_DATE, 'D', 'DD')) AS etdAta,
			  eopr.FLT_MODULE1 AS expModule,
			  xt.REMARKS AS xtRmks
			FROM xt_imp_car_shp_dtl xt
			JOIN AWB awb ON awb.awb_no    = xt.awb_no AND awb.awb_date = xt.awb_date
			LEFT JOIN imp_awb_strg_dtl strgDtl ON strgDtl.awb_no = xt.awb_no AND strgDtl.awb_date = xt.awb_date AND strgDtl.flt_key = xt.imp_flt_key 
				AND strgDtl.flt_date = xt.imp_flt_date AND NVL(CHKIN_ULD_KEY,'BULK') = xt.uld_key
			JOIN imp_car_shp shp ON shp.flt_key = xt.imp_flt_key AND shp.flt_date = xt.imp_flt_date AND shp.awb_no   = xt.awb_no AND shp.awb_date = xt.awb_date
			LEFT JOIN flt_opr iopr ON iopr.flt_key   = xt.imp_flt_key AND iopr.sch_date = xt.imp_flt_date AND iopr.flt_type = 'A'
			LEFT JOIN flt_opr eopr ON eopr.flt_key   = xt.exp_flt_key AND eopr.sch_date = xt.exp_flt_DATE AND eopr.flt_type = 'D'
			LEFT JOIN imp_ramp_chk_dtl chk ON chk.flt_key         = xt.imp_flt_key AND chk.flt_date       = xt.imp_flt_date AND chk.uld_key = xt.uld_key
			WHERE 1 =1 
			AND to_date( (TO_CHAR( DECODE(iopr.EST_DATE,NULL,iopr.SCH_DATE,iopr.EST_DATE), 'DDMONYY' )  || LPAD(DECODE(iopr.EST_DATE,NULL,iopr.SCH_TIME,iopr.EST_TIME),4, 0)), 'DDMONYYHH24MI' )
      			BETWEEN to_date( #fromEtaSta# , 'DDMONYYHH24MI' ) AND  to_date( #toEtaSta# , 'DDMONYYHH24MI' ) 			
			]]> 			
			<isNotEmpty property="fltModule">
				AND iopr.FLT_MODULE1 = #fltModule#
			</isNotEmpty>			
			<isNotEmpty property="cargoArcftType">
				AND	iopr.cgo_acft_type = #cargoArcftType#
			</isNotEmpty>			
			<isNotEmpty property="impFltKey">
				AND	iopr.flt_key = #impFltKey#
			</isNotEmpty>	
			<isNotEmpty property="fltKey">
				AND	eopr.flt_key = #fltKey#
			</isNotEmpty>
			<isNotEmpty property="fltDate">
				 AND NVL(eopr.EST_DATE,eopr.SCH_DATE) = to_date(#fltDate#,'DDMONYY')
			</isNotEmpty>
			<isEqual compareValue="Y" property="bdOutstanding">
			  <![CDATA[
				AND NVL(shp.manifest_pcs,0) - NVL(shp.recd_pcs,0) > 0
			   ]]>
			</isEqual>
			<isEqual compareValue="Y" property="dlvOutstanding">
				AND not exists (select null from RTRV_MOVE_ORDER where mhcs_msg_id = strgDtl.TARGET_ID and status = 'COMPLETED' AND  AWB_NO = strgDtl.awb_no)
			</isEqual>) A
	</select>	
	
	<select id="findUldInInventoryAndLinkedToFlight"  parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM ULD_INVENTORY WHERE IMP_FLT_KEY = #FLT_KEY# AND IMP_FLT_DATE  = TO_DATE(#FLT_DATE#,'DDMONYY') AND ULD_KEY = #ULD_KEY#
	</select>
	
	
	<select id="validateULDTransferType"  parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM v_ddt_dtl
			WHERE FLT_KEY = #FLT_KEY# AND FLT_DATE  = TO_DATE(#FLT_DATE#,'DDMONYY') AND ULD_KEY = #ULD_KEY# AND  (trf_type IN ('TT','IF') OR shp_trf_type IN ('TT','IF'))
	</select>
	
<select id="getDGNotocShcs_notoc" parameterClass="cargo.cms.export.buildup.bo.AwbInfoBO" resultClass="cargo.cms.export.buildup.bo.AwbInfoBO">
	SELECT #awbNo# AS awbNo,A.SPL_CODE AS splCode
	FROM CUST_AIRL_SPL_CODE A,
  	AWB B
	WHERE 
  	((A.CARR_CODE  = B.carr_code) OR (B.agent_code is not null and A.CUST_NO = B.AGENT_CODE))
	AND A.spl_type     ='SPL_DANG'
	AND B.AWB_NO       = #awbNo#
	AND B.AWB_DATE  = #awbDate#
  UNION ALL 
  SELECT  #awbNo# AS awbNo,decode(S.spl_code1, null, '', S.spl_code1 || decode(S.spl_code2, null, '', ','))
		|| decode(S.spl_code2, null, '', S.spl_code2 || decode(S.spl_code3, null, '', ','))
		|| decode(S.spl_code3, null, '', S.spl_code3 || decode(S.spl_code4, null, '', ','))
		|| decode(S.spl_code4, null, '', S.spl_code4 || decode(S.spl_code5, null, '', ','))
		|| decode(S.spl_code5, null, '', S.spl_code5 || decode(S.spl_code6, null, '', ','))
		|| decode(S.spl_code6, null, '', S.spl_code6 || decode(S.spl_code7, null, '', ','))
		|| decode(S.spl_code7, null, '', S.spl_code7 || decode(S.spl_code8, null, '', ','))
		  || decode(S.spl_code8, null, '', S.spl_code8 || decode(S.spl_code9, null, '', ','))
		|| decode(S.spl_code9, null, '', S.spl_code9) AS splCode 
			FROM CUST_AIRL_COMB_SPL_CODE S,AWB P
        WHERE ((S.CARR_CODE  =P.carr_code) OR (p.agent_code is not null and S.CUST_NO = P.AGENT_CODE))
        AND S.spl_type     ='SPL_DANG'
        AND P.AWB_NO       = #awbNo#
        AND P.AWB_DATE  = #awbDate#
	</select>
	<select id="getPmanFltList_notoc" parameterClass="cargo.cms.export.buildup.bo.AwbInfoBO" resultClass="cargo.cms.export.buildup.bo.AwbInfoBO">
	SELECT FLT_KEY AS fltKey, TO_CHAR(FLT_DATE,'DDMONYY') fltDate FROM EXP_PMANIFEST_AWB WHERE AWB_NO=#awbNo# AND AWB_DATE=#awbDate#
	</select>
	<select id="getPmanTarmacFltList_notoc" parameterClass="cargo.cms.export.buildup.bo.AwbInfoBO" resultClass="cargo.cms.export.buildup.bo.AwbInfoBO">
	SELECT FLT_KEY AS fltKey, TO_CHAR(FLT_DATE,'DDMONYY') fltDate FROM EXP_PMAN_TARMAC_AWB WHERE AWB_NO=#awbNo# AND AWB_DATE=#awbDate#
	</select>
	
	<select id="getSpecialLoadShcs_notoc" parameterClass="cargo.cms.export.buildup.bo.AwbInfoBO" resultClass="cargo.cms.export.buildup.bo.AwbInfoBO">
	SELECT #awbNo# AS awbNo,A.SPL_CODE AS splCode
	FROM CUST_AIRL_SPL_CODE A,
  	AWB B
	WHERE 
  ((A.CARR_CODE  = B.carr_code) OR (B.agent_code is not null and A.CUST_NO = B.AGENT_CODE))
	AND A.spl_type     ='SPL_NOTOC'
	AND B.AWB_NO       = #awbNo#
	AND B.AWB_DATE  = #awbDate#
  UNION ALL 
  SELECT  #awbNo# AS awbNo,decode(S.spl_code1, null, '', S.spl_code1 || decode(S.spl_code2, null, '', ','))
		|| decode(S.spl_code2, null, '', S.spl_code2 || decode(S.spl_code3, null, '', ','))
		|| decode(S.spl_code3, null, '', S.spl_code3 || decode(S.spl_code4, null, '', ','))
		|| decode(S.spl_code4, null, '', S.spl_code4 || decode(S.spl_code5, null, '', ','))
		|| decode(S.spl_code5, null, '', S.spl_code5 || decode(S.spl_code6, null, '', ','))
		|| decode(S.spl_code6, null, '', S.spl_code6 || decode(S.spl_code7, null, '', ','))
		|| decode(S.spl_code7, null, '', S.spl_code7 || decode(S.spl_code8, null, '', ','))
		  || decode(S.spl_code8, null, '', S.spl_code8 || decode(S.spl_code9, null, '', ','))
		|| decode(S.spl_code9, null, '', S.spl_code9) AS splCode 
			FROM CUST_AIRL_COMB_SPL_CODE S,AWB P
        WHERE ((S.CARR_CODE  =P.carr_code) OR (p.agent_code is not null and S.CUST_NO = P.AGENT_CODE))
        AND S.spl_type     ='SPL_NOTOC'
        AND P.AWB_NO       = #awbNo#
        AND P.AWB_DATE  = #awbDate#
	</select>
	<select id="getawbShcs_notoc" parameterClass="cargo.cms.export.buildup.bo.AwbInfoBO" resultClass="java.lang.String">
	select decode(AW.spl_code1, null, '', AW.spl_code1 || decode(AW.spl_code2, null, '', '/'))
		|| decode(AW.spl_code2, null, '', AW.spl_code2 || decode(AW.spl_code3, null, '', '/'))
		|| decode(AW.spl_code3, null, '', AW.spl_code3 || decode(AW.spl_code4, null, '', '/'))
		|| decode(AW.spl_code4, null, '', AW.spl_code4 || decode(AW.spl_code5, null, '', '/'))
		|| decode(AW.spl_code5, null, '', AW.spl_code5 || decode(AW.spl_code6, null, '', '/'))
		|| decode(AW.spl_code6, null, '', AW.spl_code6 || decode(AW.spl_code7, null, '', '/'))
		|| decode(AW.spl_code7, null, '', AW.spl_code7 || decode(AW.spl_code8, null, '', '/'))
		  || decode(AW.spl_code8, null, '', AW.spl_code8 || decode(AW.spl_code9, null, '', '/'))
		|| decode(AW.spl_code9, null, '', AW.spl_code9) splCode
		FROM AWB AW WHERE AW.AWB_NO=#awbNo# AND AW.AWB_DATE=#awbDate#
	</select>
	<select id="fetchNotocIndfromAWB" parameterClass="cargo.cms.export.buildup.bo.AwbInfoBO" resultClass="java.lang.String">
	SELECT NVL(NOTOC_IND,'N') FROM AWB WHERE AWB_NO = #awbNo# AND AWB_DATE=#awbDate#
	</select>
	<update id="updateNotocIndInAWB" parameterClass="cargo.cms.export.buildup.bo.AwbInfoBO" >
	UPDATE AWB SET NOTOC_IND = #dgInd# WHERE AWB_NO = #awbNo# AND AWB_DATE=#awbDate#
	</update>
	<select id="fetchNotocIndfromExpPmanAWB" parameterClass="cargo.cms.export.buildup.bo.AwbInfoBO" resultClass="java.lang.String">
	SELECT NVL(NOTOC_IND,'N') FROM EXP_PMANIFEST_AWB WHERE AWB_NO = #awbNo# AND AWB_DATE=#awbDate# AND FLT_KEY=#fltKey# AND FLT_DATE=#fltDate#
	</select>
	<select id="fetchNotocIndfromBupAWB" parameterClass="cargo.cms.export.buildup.bo.AwbInfoBO" resultClass="java.lang.String">
	SELECT NVL(NOTOC_IND,'N') FROM EXP_PMANIFEST_ULD_AWB WHERE AWB_NO = #awbNo# AND AWB_DATE=#awbDate# AND FLT_KEY=#fltKey# AND FLT_DATE=#fltDate# AND ULD_BT_NO=#uldKey#
	</select>
	<select id="fetchNotocIndfromTarmacExpPmanAWB" parameterClass="cargo.cms.export.buildup.bo.AwbInfoBO" resultClass="java.lang.String">
	SELECT NVL(NOTOC_IND,'N') FROM EXP_PMAN_TARMAC_AWB WHERE AWB_NO = #awbNo# AND AWB_DATE=#awbDate# AND FLT_KEY=#fltKey# AND FLT_DATE=#fltDate#
	</select>
	<update id="updateNotocIndInExpPmanAWB" parameterClass="cargo.cms.export.buildup.bo.AwbInfoBO" >
	UPDATE EXP_PMANIFEST_AWB SET NOTOC_IND = #dgInd# WHERE AWB_NO = #awbNo# AND AWB_DATE=#awbDate# AND FLT_KEY=#fltKey# AND FLT_DATE=#fltDate#
	</update>
	<update id="updateNotocIndInBUPExpPmanAWB" parameterClass="cargo.cms.export.buildup.bo.AwbInfoBO" >
	UPDATE EXP_PMANIFEST_AWB SET NOTOC_IND = #bupInd# WHERE AWB_NO = #awbNo# AND AWB_DATE=#awbDate# AND FLT_KEY=#fltKey# AND FLT_DATE=#fltDate#
	</update>
	<update id="updateNotocIndInBUP" parameterClass="cargo.cms.export.buildup.bo.AwbInfoBO" >
	UPDATE EXP_PMANIFEST_ULD_AWB SET NOTOC_IND = #bupInd# WHERE AWB_NO = #awbNo# AND AWB_DATE=#awbDate# AND FLT_KEY=#fltKey# AND FLT_DATE=#fltDate# AND ULD_BT_NO=#uldKey#
	</update>
	
	<update id="updateNotocIndInBUP1" parameterClass="cargo.cms.export.buildup.bo.AwbInfoBO" >
	UPDATE EXP_PMANIFEST_ULD_AWB SET NOTOC_IND = #dgInd#,TR_TYPE='' WHERE AWB_NO = #awbNo# AND AWB_DATE=#awbDate# AND FLT_KEY=#fltKey# AND FLT_DATE=#fltDate#
	</update>
	
	<update id="updateNotocIndInTarmacExpPmanAWB" parameterClass="cargo.cms.export.buildup.bo.AwbInfoBO" >
	UPDATE EXP_PMAN_TARMAC_AWB SET NOTOC_IND = #dgInd# WHERE AWB_NO = #awbNo# AND AWB_DATE=#awbDate# AND FLT_KEY=#fltKey# AND FLT_DATE=#fltDate#
	</update>
	<select id="fetchNotocBuildupSHC" parameterClass="cargo.cms.export.buildup.bo.AwbInfoBO" resultClass="cargo.cms.export.buildup.bo.AwbInfoBO">
	SELECT 
	SHC    AS shcOne,
			  SHC2        AS shcTwo,
			  SHC3        AS shcThree,
			  SHC4        AS shcFour,
			  SHC5        AS shcFive,
			  SHC6        AS shcSix,
			  SHC7        AS shcSeven,
			  SHC8        AS shcEight,
			  SHC9        AS shcNine
	FROM EXP_PMANIFEST_ULD_AWB A,  EXP_PMANIFEST_ULD_AWB_SHC B WHERE B.TR_NO = A.TR_NO AND A.AWB_NO = #awbNo# AND A.AWB_DATE=#awbDate# AND A.FLT_KEY=#fltKey# AND A.FLT_DATE=#fltDate# AND A.ULD_BT_NO=#uldKey#
	</select>
	<select id="fetchNotocCountinpam" parameterClass="cargo.cms.export.buildup.bo.AwbInfoBO" resultClass="java.lang.Integer">
	SELECT SUM(CNT) FROM (
	SELECT COUNT(1) AS CNT FROM EXP_PMANIFEST_AWB WHERE NOTOC_IND IS NOT NULL AND NOTOC_IND = 'Y' AND FLT_KEY=#fltKey# AND FLT_DATE=#fltDate#
	UNION ALL
	SELECT COUNT(1) AS CNT FROM EXP_PMAN_TARMAC_AWB WHERE NOTOC_IND IS NOT NULL AND NOTOC_IND = 'Y' AND FLT_KEY=#fltKey# AND FLT_DATE=#fltDate#)
	</select>
	<select id="fetchNotocCountinBUP" parameterClass="cargo.cms.export.buildup.bo.AwbInfoBO" resultClass="java.lang.Integer">
	SELECT COUNT(1) AS CNT FROM EXP_PMANIFEST_ULD_AWB WHERE NOTOC_IND IS NOT NULL AND NOTOC_IND = 'Y' AND AWB_NO = #awbNo# AND AWB_DATE=#awbDate# AND FLT_KEY=#fltKey# AND FLT_DATE=#fltDate#
	</select>
	<select id="fetchNotocIndfromFltOprEnt" parameterClass="cargo.cms.export.buildup.bo.AwbInfoBO" resultClass="java.lang.String">
	SELECT NVL(NOTOC_IND,'N') FROM FLT_OPR_EVENTS WHERE FLT_KEY=#fltKey# AND SCH_DATE=#fltDate# AND FLT_TYPE='D'
	</select>
	<select id="fetchAcknowledgeIndfromFltOprEnt" parameterClass="cargo.cms.export.buildup.bo.AwbInfoBO" resultClass="java.lang.String">
	SELECT NVL(NOTOC_ACK_IND,'N') FROM FLT_OPR_EVENTS WHERE FLT_KEY=#fltKey# AND SCH_DATE=#fltDate# AND FLT_TYPE='D'
	</select>
	<update id="updateNotocIndInFltOprEnt" parameterClass="cargo.cms.export.buildup.bo.AwbInfoBO" >
	UPDATE FLT_OPR_EVENTS SET NOTOC_IND = #notocInd#,TR_TYPE='NCYN' WHERE FLT_KEY=#fltKey# AND SCH_DATE=#fltDate# AND FLT_TYPE='D' 
	</update>
	<update id="updateAcknowledgeIndInFltOprEnt" parameterClass="cargo.cms.export.buildup.bo.AwbInfoBO" >
	UPDATE FLT_OPR_EVENTS SET NOTOC_ACK_IND = 'N',NOTOC_ACK_USER='SYSUSER',NOTOC_ACK_DATE=SYSDATE,TR_TYPE='ACYN' WHERE FLT_KEY=#fltKey# AND SCH_DATE=#fltDate# AND FLT_TYPE='D' 
	</update>	
	<select id="getInbFltDetailsForAWB"  parameterClass="cargo.cms.imprt.bo.AWBStorDtlBO" resultClass="cargo.cms.imprt.bo.AWBStorDtlBO">
		SELECT ICS.flt_key                AS fltKey ,
			  TO_CHAR(ICS.flt_date,'DDMONYY') AS fltDate,
			  ICS.RECD_PCS        AS recPcs,
			  ICS.RECD_WT         AS recWt,
			  NVL(ai.locPcs,0) AS invPcs,
			  NVL(ai.locWt,0)  AS invWt
			FROM imp_car_shp ics
			LEFT JOIN (select awb_no, awb_date , flt_type , flt_key , flt_date , SUM(Locn_pcs) as locPcs ,  SUM(Locn_wt) as locWt from awb_inventory group by awb_no,awb_date,flt_type,flt_key,flt_date) ai
			ON ics.awb_no    = ai.awb_no AND ics.awb_date = ai.awb_date AND ai.flt_type  = 'I' and ai.flt_key  = ics.flt_key and ai.flt_date  = ics.flt_date
			WHERE ics.awb_no = #awbNo#
			AND ics.awb_date = TO_DATE(#awbDate#,'DDMONYY')
	</select>
	<select id="getAWBInventoryCount" parameterClass="cargo.cms.imprt.bo.AWBStorDtlBO" resultClass="java.lang.Integer">
		select count(1) from awb_inventory where awb_no = #awbNo# and awb_date = to_date(#awbDate#,'DDMONYY')
	</select>
	<update id="updateAWBInventoryWithINBFlt" parameterClass="map" >
		update awb_inventory set flt_date = to_date(#fltDate#,'DDMONYY'), flt_key = #fltKey#, flt_type = 'I' where seq_no = #seqNumber#
	</update>	
	<select id="getExistingAWBInvForFlight" parameterClass="cargo.cms.imprt.bo.AWBStorDtlBO" resultClass="java.lang.String" >  	
		SELECT SEQ_NO seqNo FROM AWB_INVENTORY
	    WHERE AWB_NO = #awbNo# AND AWB_DATE = #awbDate#
	    AND NVL(FLT_KEY,'*')  = NVL(#fltKey#,'*')
	    AND NVL(FLT_TYPE,'*')  = NVL(#fltType#,'*')
		AND NVL(FLT_DATE,SYSDATE) = NVL(decode(#fltDate#,'',SYSDATE,#fltDate#),SYSDATE)
	    AND NVL(LOC_CODE,'*') = NVL(#locCode#,'*')
	    AND NVL(LSP_NO,0)   = NVL(#lspNo#,0)
	    AND NVL(ULD_KEY,'*')  = NVL(#uldKey#,'*')
	    AND NVL(SRF_NO,'*')  = NVL(#srfNo#,'*')
	    AND NVL(TRM_NO,'*')  = NVL(#trmNo#,'*')
	    AND NVL(CDIF_NO,'*') = NVL(#cdifNo#,'*')
	    AND NVL(RTN_NO,'*') = NVL(#rtnNo#,'*')    
  </select>  
  <update id="incress_awbInvtory" parameterClass="cargo.cms.imprt.bo.AWBStorDtlBO">
		UPDATE awb_inventory SET
			locn_pcs = NVL(locn_pcs,0) + NVL(#newLocPcs#,0),
			locn_wt = NVL(locn_wt,0) + NVL(#newLocWt#,0),
			lm_user_id = #lmUserId#,
			lm_date = sysdate
		WHERE SEQ_NO = #seqExists#
	</update>	
	
	<update id="reduce_awbInvtory" parameterClass="cargo.cms.imprt.bo.AWBStorDtlBO">
		UPDATE awb_inventory SET
			locn_pcs = NVL(locn_pcs,0)  - NVL(#newLocPcs#,0),
			locn_wt = NVL(locn_wt,0) - NVL(#newLocWt#,0),
			lm_user_id = #lmUserId#,
			lm_date = sysdate
		WHERE SEQ_NO = #seqNo#
	</update>
	
	<delete id="deleteAwbInvOnLocZero" parameterClass="cargo.cms.imprt.bo.AWBStorDtlBO">
		DELETE FROM awb_inventory WHERE SEQ_NO = #seqNo# and locn_pcs = 0
	</delete>
	<insert id="insertAwbInventoryWithFlight" parameterClass="cargo.cms.imprt.bo.AWBStorDtlBO">
		INSERT INTO AWB_INVENTORY
		 (AWB_NO, AWB_DATE,CARR_CODE, LSP_NO,LOC_CODE,
		 LOCN_PCS, LOCN_WT, DAM_IND, PPK_IND, STRG_DATE,CR_USER_ID, CR_DATE,
		 SRF_NO, CDIF_NO, TRM_NO,
		 LM_USER_ID, LM_DATE,  FLT_DATE, FLT_KEY,FLT_TYPE, ULD_KEY, SEQ_NO,
		 REF_LSP_TR_TYPE,REF_LSP_TR_EVENT,REF_TR_NO,REF_TR_TYPE,REF_TR_DATE,
		 REF_DOC_LINE_NO,REF_LOC_FROM,REF_TR_EVENT,REF_RMK,REF_MOV_FROM,WH_DAM_IND,DAM_TYPE,DAM_PCS,DAM_WT,RTN_NO,REF_AWB_EVENT)
		 VALUES
		 (#awbNo#,#awbDate#,#carrCode#,#lspNo#,#locCode#,
		 #newLocPcs#,#newLocWt#,#damInd#, #ppkInd#,sysdate, #lmUserId#, sysdate,
		 #srfNo#, #cdifNo#, #trmNo#,#lmUserId#, sysdate,#fltDate#,#fltKey#,#fltType#,#uldKey#,AWB_INV_SEQ.NEXTVAL,
		 '','',#trNo#,#trType#,sysdate,#docLineNo#,#locCode#,#relocType#,#rmk#,#locCode#,#whDamInd#,#damType#,#damPcs#,#damWt#,#rtnNo#,#trtypeEvt#)
	</insert>
	<!-- Uplift Priority -->
	<select id="sqlGetAWBListForULDPriority" parameterClass="java.lang.String"
		resultClass="cargo.cms.common.admin.bo.SHCUpliftPriority">
		<![CDATA[
	    	SELECT
	    	AWB_NO awbNo, TO_CHAR(AWB_DATE, 'DDMONYY') awbDate
	    	FROM AWB_INVENTORY
	    	WHEE ULD_KEY = #PARAM#
		]]>
	</select>
		<update id="sqlUpdateAWBUpliftPriority" parameterClass="java.util.Map">
		<![CDATA[
	    	UPDATE AWB
	    	SET
    		UPLIFT_PRIORITY = #PRIORITY#, LM_USER_ID = #USER_ID#, LM_DATE = SYSDATE
			WHERE AWB_NO = #AWB_NO# AND AWB_DATE = TO_DATE(#AWB_DATE#, 'DDMONYY') AND NVL(UPLIFT_PRIO_MANUAL_YN, 'N') = 'N'
			AND AWB_TYPE IN ('E', 'T')
		]]>
	</update>
        <select id="getAWBFinalUpliftPriority" parameterClass="java.util.Map" resultClass="java.lang.String">
		<![CDATA[
	    	select FUN_GET_AWB_UPLIFT_PRIORITY(#AWB_NO#,TO_DATE(#AWB_DATE#, 'DDMONYY')) from DUAL
		]]>
	</select>
	<update id="updateAWBFinalUpliftPriority" parameterClass="java.util.Map">
		<![CDATA[
	    	UPDATE AWB
	    	SET
    		AWB_UPLIFT_PRIORITY = #PRIORITY#, TR_TYPE = 'AWBUPL', LM_USER_ID = #USER_ID#, LM_DATE = SYSDATE
			WHERE AWB_NO = #AWB_NO# AND AWB_DATE = TO_DATE(#AWB_DATE#, 'DDMONYY') AND NVL(UPLIFT_PRIO_MANUAL_YN, 'N') = 'N'
			AND AWB_TYPE IN ('E', 'T')
		]]>
	</update>

	<select id="getloadTypeEmptyData" parameterClass="java.lang.String" resultClass="java.lang.String">
	<![CDATA[
	SELECT case when COUNT(1) >0 then 'N' else 'Y' end AS emptyInd
		     FROM EDI_FFM_MSG MSG, EDI_FFM_SHP SHP, EDI_FFM_ULD ULD, ULD_INVENTORY U
		    WHERE 
		    MSG.TR_NO = SHP.TR_NO AND MSG.TR_NO = ULD.TR_NO AND ULD.DOC_LINE_NO = SHP.UDOC_LINE_NO
		    AND MSG.FFM_STATUS = 'P' AND ULD.ULD_KEY IS NOT NULL
        AND MSG.FLT_KEY=U.FLT_KEY AND MSG.FLT_DATE = U.FLT_DATE AND U.ULD_KEY = ULD.ULD_KEY AND 
        U.ULD_KEY=#uldKey#
        ]]>
	</select>

<select id="getULDStatEmptyData" parameterClass="java.lang.String" resultClass="java.lang.String">
	select (select code_desc from mast_code_dtl where code_type = 'ULD_STATE' and code = FUN_GET_ULD_STATE(#uldKey#)) from dual
	</select>

    <update id="sqlUpdateLoadType_TM" parameterClass="cargo.cms.uld.bo.MHCSCheckinBO">
			UPDATE ULD_INVENTORY SET LOAD_TYPE=#loadType#,empty_flg=#emptyInd#,LM_DATE=SYSDATE,LM_USER_ID=#userID#,TR_TYPE='MHCN',GEN_RMK = #uldRemark# WHERE ULD_KEY=#uldKey#
	</update>

<select id="getLoadTypeDesc" parameterClass="cargo.cms.uld.bo.MHCSCheckinBO" resultClass="java.lang.String">
	SELECT CODE_DESC FROM MAST_CODE_DTL WHERE CODE_TYPE='LOAD_TYPE' AND code=#loadType# AND GROUP_CODE='38' AND ROWNUM=1
	</select>

	<update id="sqlUpdateLoadType" parameterClass="cargo.cms.uld.bo.MHCSCheckinBO">
			UPDATE ULD_INVENTORY SET LOAD_TYPE=#loadType#,empty_flg=#emptyInd#,LM_DATE=SYSDATE,LM_USER_ID=#userID#,TR_TYPE='MHCN',GEN_RMK = #uldRemark#, TARGET = #target# WHERE ULD_KEY=#uldKey#
	</update>

<select id="getEligibleULDListForTimeOUT"  parameterClass="java.lang.String"  resultClass="cargo.cms.imprt.bo.CarShpBO">
		<![CDATA[
			SELECT inv.uld_key uldKey, rtv.mhcs_msg_id AS mhcsId
			FROM uld_inventory inv
			JOIN
			  (SELECT WH_GROUP AS code FROM mast_wh_group WHERE NVL(preannouncement_ind,'N') = 'Y'
			    UNION
			   SELECT WH_AREA AS code FROM mast_wh_area WHERE NVL(preannouncement_ind,'N') = 'Y'
			    UNION
			    SELECT CODE AS code  FROM mast_wh_loc  WHERE NVL(preannouncement_ind,'N') = 'Y'
			  ) loc ON loc.code = inv.TARGET
			JOIN
			  (SELECT ULD, MAX(mhcs_msg_id) AS mhcs_msg_id  FROM rtrv_move_order
			    WHERE (status   IS NULL  OR ( status     <>'CANCELLED'  AND status      <> 'COMPLETED'  AND status      <> 'TIMEOUT'
			          AND status      <> 'FCOMPLETED') )  AND mhcs_msg_id IS NOT NULL  GROUP BY ULD  ) rtv ON rtv.ULD = inv.ULD_KEY
			WHERE inv.TARGET IS NOT NULL
			AND (TARGET_DATE + (SELECT TO_NUMBER(rule_value) FROM CMSRULES WHERE RULE_CODE ='AUTO_TIME_OUT_JO' )/1440 ) < SYSDATE
			AND NVL(ULDENTRY_MSG_RCVD_YN,'N') = 'N'	
		 ]]>
	</select>	

       <update id="resetTargetOnULDInventory" parameterClass="cargo.cms.imprt.bo.CarShpBO">
			UPDATE ULD_INVENTORY SET TARGET = '' , LM_DATE = SYSDATE, LM_USER_ID = 'SYSTEM' WHERE ULD_KEY = #uldKey#
	</update>
	
	<update id="updateJOBOrderToTimeOUT" parameterClass="cargo.cms.imprt.bo.CarShpBO">
		<![CDATA[
			UPDATE rtrv_move_order SET status='TIMEOUT', LM_USER_ID = 'SYSTEM', LM_DATE = SYSDATE WHERE ULD = #uldKey#
				AND ( status IS NULL OR (status <>'CANCELLED' AND status <> 'COMPLETED' AND status <> 'TIMEOUT') ) 
		 ]]>
				<isNotEmpty property="mhcsId">
	  				AND mhcs_msg_id = #mhcsId#                                    
				</isNotEmpty>
	</update>

	<select id="getBULKXTShipment"  parameterClass="java.util.HashMap" resultClass="cargo.cms.imprt.bo.AWBStorDtlBO">
		select exp_flt_key as obFltKey, to_char(exp_flt_date,'DDMONYY') as obFltDate,imp_flt_key as impFltKey, to_char(imp_flt_date,'DDMONYY') as impFltDate,
		awb_no as awbNumber,to_char(awb_date,'DDMONYY') as awbDate, NVL(#CHK_IN_ULD#,'BULK') as uldKey
		from xt_imp_car_shp_dtl shp where awb_no = #AWB_NO# and awb_date = #AWB_DATE# and imp_flt_key = #IMP_FLT_KEY# and imp_flt_date = #IMP_FLT_DATE#
		AND NOT EXISTS ( select null from xt_imp_car_shp_dtl where IMP_FLT_KEY  = shp.imp_flt_key AND IMP_FLT_DATE = shp.imp_flt_date and awb_no = shp.awb_no AND awb_date = shp.awb_date and ULD_KEY = NVL(#CHK_IN_ULD#,'BULK') )
		AND rownum = 1
	</select>	
		
	<insert id="insertXTShipment" parameterClass="cargo.cms.imprt.bo.AWBStorDtlBO">
		Insert into xt_imp_car_shp_dtl (IMP_FLT_KEY,IMP_FLT_DATE,EXP_FLT_KEY,EXP_FLT_DATE,AWB_NO,AWB_DATE,ULD_KEY,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,SEQ_NO,TR_TYPE) 
		values (#impFltKey#,#impFltDate#,#obFltKey#,#obFltDate#,#awbNumber#,#awbDate#,#uldKey#,#crUserId#,SYSDATE,#crUserId#,SYSDATE,xt_imp_car_shp_seq.nextval,'XTSHP')
	</insert>

	<select id="imp_IssueSRF_checkForOrgDest"  parameterClass="map"  resultClass="java.lang.Integer">
	<![CDATA[
		SELECT COUNT(1)
        FROM imp_car_awb c
        JOIN awb b
        ON c.AWB_NO        =b.AWB_NO
        AND c.AWB_DATE     =b.AWB_DATE
        AND ((c.awb_origin IS NULL or b.orig IS NULL)  
        or (c.awb_dest IS NULL or b.dest IS NULL))where c.AWB_NO = #AWBNO# and c.AWB_DATE = #AWBDATE# 
	]]>
	</select>
	<select id="fetchShipmentDeliveryTimeForULD"  parameterClass="cargo.cms.imprt.bo.XTShipmentBO" resultClass="java.lang.String">
		select TO_CHAR(LM_DATE,'HH24:MI') from RTRV_MOVE_ORDER where mhcs_msg_id = #targetID# and ULD = #strgULD# and status = 'COMPLETED' AND AWB_NO = #awbNumber#
	</select>
	
	<select id="fetchShipmentDeliveryTimeForLSP"  parameterClass="cargo.cms.imprt.bo.XTShipmentBO" resultClass="java.lang.String">
		select TO_CHAR(LM_DATE,'HH24:MI') from RTRV_MOVE_ORDER where mhcs_msg_id = #targetID# and LSP = #strgLSP# and status = 'COMPLETED' AND AWB_NO = #awbNumber# 
	</select>
	<select id="checkTotalInvWithBrkCnt" parameterClass="cargo.cms.imprt.bo.AWBStorDtlBO" resultClass="java.lang.Integer" >  
		<![CDATA[	
			select case when (recPcs = invPcs ) AND (recWt = invWt) then 1 else 0 end as result from (
			SELECT  SUM(ICS.RECD_PCS) AS recPcs, SUM(ICS.RECD_WT) AS recWt,
						  (SELECT SUM(LOCN_PCS)FROM awb_inventory WHERE awb_no = ics.awb_no AND awb_date = ics.awb_date) AS invPcs,
						  (SELECT SUM(LOCN_WT)FROM awb_inventory WHERE awb_no = ics.awb_no AND awb_date = ics.awb_date)  AS invWt
						FROM imp_car_shp ics WHERE ics.awb_no = #awbNo# AND ics.awb_date = TO_DATE(#awbDate#,'DDMONYY') 
			      group by ics.awb_no,ics.awb_date )
		]]>
	</select>

	<select id="checkConfigLoadType" parameterClass="cargo.cms.uld.bo.MHCSCheckinBO" resultClass="java.lang.String">
	  <![CDATA[
	SELECT COUNT(1)	FROM ULD_INVENTORY A
	WHERE A.ULD_KEY=#uldKey# 
	AND instr(nvl(UPPER((SELECT RULE_VALUE FROM CMSRULES WHERE RULE_CODE='DEF_LOAD_TYPE_UAF')),'*'), nvl(UPPER(#loadType#),'**')) > 0
	  	]]>
	</select>
	<select id="getShipmentToTriggerNFD"  parameterClass="java.lang.String"  resultClass="cargo.cms.imprt.bo.CarShpBO"> 
		SELECT shp.awb_no                    AS awbNo,
		  TO_CHAR(shp.awb_date,'DDMONYY')    AS awbDate,  
		  flt_key                        AS fltKey,
		  TO_CHAR(flt_date,'DDMONYY')    AS fltDate
		FROM IMP_CAR_SHP shp,
		AWB B
		WHERE B.AWB_NO  = shp.AWB_NO AND B.AWB_DATE  = shp.AWB_DATE AND B.AWB_TYPE !='T'
		AND RCF_SENT_DATE IS NOT NULL 
		AND NFD_SENT_DATE IS NULL 
		AND (SELECT COUNT(1) FROM mast_carrier WHERE code = (SELECT pkg_fsu.get_carr_code(shp.awb_no,shp.awb_date) FROM dual) AND NVL(AUTO_TRIGGER_NFD,'N') = 'Y') > 0
		AND SYSDATE > (RCF_SENT_DATE + ((SELECT NVL(NFD_OFFSET_MINS,0)  FROM mast_carrier  WHERE code = (SELECT pkg_fsu.get_carr_code(shp.awb_no,shp.awb_date) FROM dual ) ) / (24 * 60)))
	</select>	
	<select id="checkNFDConfiguration" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
 	  select count(1) from mast_carrier where code = (select pkg_fsu.get_carr_code(#AWB_NO#,#AWB_DATE#) from dual) AND NVL(AUTO_TRIGGER_NFD,'N') = 'N'
 	</select>
	<select id="getConfirmOffloadFSUList" parameterClass="cargo.cms.imprt.bo.TarmacOffloadBO" resultClass="cargo.cms.imprt.bo.TarmacOffloadBO">
	SELECT
                              FLT_KEY AS fltKey,
                              TO_CHAR(FLT_DATE,'DDMONYY') AS fltDate,
                              AWB_NO AS awbNo,
                              TO_CHAR(AWB_DATE,'DDMONYY') AS awbDate,
                              (CASE WHEN OFFLOAD_PCS > ASSIGNED_PCS THEN ASSIGNED_PCS
                              ELSE OFFLOAD_PCS
                              END) AS loadedPc
                              FROM EXP_OFFLOAD_ULD_AWB WHERE FLT_KEY=#fltKey# AND FLT_DATE=#fltDate# AND CONFIRMED_YN='Y'
	</select>
	
	
	<insert id="awbEventFORNOA" parameterClass="java.util.HashMap">
		INSERT INTO HIS_AWB_EVNT 
			(AWB_NO, AWB_DATE, COD_TRA_SEQ_NUM, COD_HIS_TYP, COD_FUNC, MODULE, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE)
		VALUES 
			(#awbNo#, TO_DATE(#awbDate#, 'DDMONYY'), #traSeqNo#, 'E', 'NND', 'W', #userId#, SYSDATE, #userId#, SYSDATE)
	</insert>
	
	<insert id="awbEventFORFORNOADTLS" parameterClass="java.util.HashMap">
		INSERT INTO HIS_AWB_EVNT_DTL 
			(AWB_NO, AWB_DATE, COD_TRA_SEQ_NUM, COD_SEQ_NUM, COD_ACT, COD_HIS_SEQ_NUM, DES_HIS_DTS,COD_HWB_NUM, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE)
		VALUES 
			(#awbNo#, TO_DATE(#awbDate#, 'DDMONYY'), #traSeqNo#, SQ_IMP_CAR_SHP_HIS.NEXTVAL, 'A', '961', #desHisDtls#,#transactionNUM#, #userId#, SYSDATE, #userId#, SYSDATE)
	</insert>
	
        <select id="checkTMAWBExists" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM AWB WHERE AWB_NO=#awbNo# AND AWB_DATE=#awbDate#
	 </select>

	

	  <!-- Charges for Special Cargo & General Cargo -->
	<select id="sqlGetNeedStorageChargeWarningForIssueSRF" parameterClass="java.util.Map" resultClass="java.lang.String">
		<![CDATA[			
			WITH SHC_SPECIAL_CARGO AS (
			  SELECT item_code AS SPECIAL FROM MAST_STRG_CHARGES_CONFIG WHERE SEQ_NUM = (SELECT PKG_CALCULATE.FUN_GET_CARGO_TYPE_SC(#AWB_NO#,TO_DATE(#AWB_DATE#, 'DDMONYY')) FROM DUAL)
			),
			STORAGE_CHARGE_PAID AS (
				SELECT SUM(NVL(CHRG_AMT, 0) + NVL(ADJ_AMT, 0)) CHRG_AMT, ITM_CODE
				FROM BILL_CHARGE_DTL BILL
				WHERE STATUS = 'PAID'
				AND AWB_NO = #AWB_NO# AND AWB_DATE = TO_DATE(#AWB_DATE#, 'DDMONYY')
				AND ITM_CODE like 'SCIM%'
				GROUP BY ITM_CODE
			)
			SELECT
          	CASE
			      WHEN (SELECT CHRG_AMT FROM STORAGE_CHARGE_PAID WHERE ITM_CODE != SPECIAL ) > 0 THEN 'Y'
			      ELSE 'N'
			END
      		WARNING_REQUIRED
			FROM SHC_SPECIAL_CARGO WHERE 1 = 1
		]]>
	</select>
	
	<select id="getctAWBListforMileStone" parameterClass="cargo.cms.imprt.bo.TrmBO" resultClass="cargo.cms.imprt.bo.TrmBO">
			SELECT T1.awb_no awbNo, TO_CHAR(T1.AWB_DATE,'DDMONYY') awbDate, T1.LSP_NO AS lspNo,
                     T1.ULD_KEY as uldKey, T1.locn_pcs transferPcs, DECODE(T1.locn_wt,'0','',TRIM(to_char(locn_wt,9999999999.9))) transferWt,T1.LOC_CODE AS warehouseLocation
            from   awb_inventory t1, awb t2
            where  t1.awb_no = t2.awb_no
            and    TRUNC(t1.awb_date) = TRUNC(t2.awb_date)    
            and    t1.awb_no=#awbNo#
            and t1.awb_date=#awbDate#
            and t1.trm_no=#trmNo#
	</select>
	<select id="isInternalUser"  parameterClass="map"  resultClass="java.lang.Integer">
	   select count(1) from sec_user where user_type='I' and code=#USER_ID#
	</select>
	
	
	<select id="fetchDanglingDataExists" parameterClass="java.lang.String" resultClass="cargo.cms.imprt.bo.FlightBO">
		SELECT A.awb_no as awbNo, TO_CHAR(A.awb_date,'DDMONYY') as awbDate , awbType as awbType FROM 
		(
		  SELECT awb_no,awb_date ,  CASE    WHEN org = 'HKG'    THEN 'E'    ELSE 'T'  END awbType FROM EDI_FBL a, EDI_FBL_SHP f
			WHERE a.TR_NO = f.TR_NO  AND a.FBL_STATUS='P'
			AND f.awb_no IS NOT NULL AND ( sysdate - f.cr_date > (SELECT RULE_VALUE FROM CMSRULES WHERE RULE_CODE = 'HOUSEKEEP_AWB') )
			AND NOT EXISTS (SELECT NULL FROM awb WHERE awb_no = f.awb_no AND awb_date = f.awb_date)
			AND NOT EXISTS (SELECT NULL FROM ARCHIVE_LOG_MON WHERE awb_no = f.awb_no AND awb_date = f.awb_date)
		  UNION
		  SELECT awb_no,awb_date , 'E' awbType FROM awb_pouch f  WHERE ( sysdate - cr_date > (SELECT RULE_VALUE FROM CMSRULES WHERE RULE_CODE = 'HOUSEKEEP_AWB' ) )
		  AND NOT EXISTS (SELECT NULL FROM awb WHERE awb_no = f.awb_no AND awb_date = f.awb_date) 
		  AND NOT EXISTS (SELECT NULL FROM ARCHIVE_LOG_MON WHERE awb_no = f.awb_no AND awb_date = f.awb_date)
		  UNION
		  SELECT awb_no,awb_date , CASE WHEN awb_org = 'HKG' then 'E' WHEN awb_dest = 'HKG' THEN 'I' ELSE 'T' END awbType FROM edi_fhl f WHERE ( sysdate - cr_date > (SELECT RULE_VALUE FROM CMSRULES WHERE RULE_CODE = 'HOUSEKEEP_AWB' ) )
		  AND NOT EXISTS (SELECT NULL FROM awb WHERE awb_no = f.awb_no AND awb_date = f.awb_date) 
		  AND NOT EXISTS (SELECT NULL FROM ARCHIVE_LOG_MON WHERE awb_no = f.awb_no AND awb_date = f.awb_date)
		  UNION
		  SELECT awb_no,awb_date, 'E' awbType FROM exp_pre_rcl_brkdn f WHERE ( sysdate - cr_date > (SELECT RULE_VALUE FROM CMSRULES WHERE RULE_CODE = 'HOUSEKEEP_AWB' ) )
		  AND NOT EXISTS (SELECT NULL FROM awb WHERE awb_no = f.awb_no AND awb_date = f.awb_date) 
		  AND NOT EXISTS (SELECT NULL FROM ARCHIVE_LOG_MON WHERE awb_no = f.awb_no AND awb_date = f.awb_date)
		  UNION
		  SELECT awb_no,awb_date , 'E' awbType FROM exp_pre_rcl_hd f where awb_no is not null AND ( sysdate - cr_date > (SELECT RULE_VALUE FROM CMSRULES WHERE RULE_CODE = 'HOUSEKEEP_AWB' ) ) 
		  AND NOT EXISTS (SELECT NULL FROM awb WHERE awb_no = f.awb_no AND awb_date = f.awb_date) 
		  AND NOT EXISTS (SELECT NULL FROM ARCHIVE_LOG_MON WHERE awb_no = f.awb_no AND awb_date = f.awb_date)
		  UNION
		  SELECT awb_no,awb_date , flt_type as awbType from cst_recv f where awb_no is not null AND ( sysdate - recv_date > (SELECT RULE_VALUE FROM CMSRULES WHERE RULE_CODE = 'HOUSEKEEP_AWB' ) )
      	  AND NOT EXISTS (SELECT NULL FROM awb WHERE awb_no = f.awb_no AND awb_date = f.awb_date) 
		  AND NOT EXISTS (SELECT NULL FROM ARCHIVE_LOG_MON WHERE awb_no = f.awb_no AND awb_date = f.awb_date)
		  UNION
	      SELECT f.awb_no, f.awb_date, CASE WHEN f.org = 'HKG' THEN 'E' WHEN f.dest = 'HKG' THEN 'I' ELSE 'T' END awbType FROM edi_ffm_msg m join edi_ffm_shp f on m.tr_no = f.tr_no
	  	  WHERE (m.ffm_status = 'P' OR m.ffm_status = 'CONT') AND f.awb_no IS NOT NULL AND ( sysdate - f.cr_date > (SELECT RULE_VALUE FROM CMSRULES WHERE RULE_CODE = 'HOUSEKEEP_AWB') )
	  	  AND NOT EXISTS (SELECT NULL FROM awb WHERE awb_no = f.awb_no AND awb_date = f.awb_date)
	  	  AND NOT EXISTS (SELECT NULL FROM ARCHIVE_LOG_MON WHERE awb_no = f.awb_no AND awb_date = f.awb_date)
		) A
	</select>
	
	<select id="checkDanglingAWBExists"  parameterClass="cargo.cms.imprt.bo.FlightBO"  resultClass="java.lang.Integer">
	   select count(1) from AWB where awb_no = #awbNo# and awb_date = to_date(#awbDate#,'DDMONYY')
	</select>
	
	<select id="checkCcCodeAWBExists"  parameterClass="cargo.cms.imprt.bo.FlightBO"  resultClass="java.lang.Integer">
	   select count(1) from CST_RECV where awb_no = #awbNo# and awb_date = to_date(#awbDate#,'DDMONYY')
	</select>
	
	<insert id="insertDanglingAWBRecord" parameterClass="cargo.cms.imprt.bo.FlightBO">
		INSERT INTO AWB (AWB_TYPE,AWB_NO,AWB_DATE,awb_closed_yn,LM_USER_ID ,LM_DATE,CR_USER_ID, CR_DATE) 
			VALUES(#awbType#,#awbNo#,TO_DATE(#awbDate#,'DDMONYY'),'Y',#username#,SYSDATE,#username#,SYSDATE)
	</insert>
	<select id = "sqlgetshpbulkwtforCIR"  parameterClass="cargo.cms.imprt.bo.CarShpBO" resultClass="cargo.cms.imprt.bo.CarShpBO">
		select BULK_WT as bulkWt,BUP_WT as bupWt from IMP_CAR_SHP where awb_no=#awbNo# and awb_date=to_date(#awbDate#,'DDMONYY') and FLT_KEY = #fltKey# and FLT_DATE = to_date(#fltDate#,'DDMONYY')
	</select>

<select id="getSequenceMonitoringList" parameterClass="java.lang.String" resultClass="cargo.cms.imprt.bo.FlightBO">
	  <![CDATA[
	  SELECT A.SEQUENCE_NAME as sequenceName FROM (
		SELECT SEQUENCE_NAME FROM user_sequences WHERE sequence_name = 'RCL_NO_SEQ' AND (LAST_NUMBER/lpad(max_value, 8, 0)) * 100 > (SELECT TO_NUMBER(NVL(rule_value,0))  FROM CMSRULES  WHERE RULE_CODE='ALRT_SEQ_MAX_LIMIT')
		UNION
		SELECT SEQUENCE_NAME FROM user_sequences WHERE sequence_name = 'ERCL_NO_SEQ' AND (LAST_NUMBER/lpad(max_value, 8, 0)) * 100 > (SELECT TO_NUMBER(NVL(rule_value,0))  FROM CMSRULES  WHERE RULE_CODE='ALRT_SEQ_MAX_LIMIT')
		UNION
		SELECT SEQUENCE_NAME FROM user_sequences WHERE sequence_name = 'TOW_ORDER_IN_SEQ' AND (LAST_NUMBER/lpad(max_value, 8, 0)) * 100 > (SELECT TO_NUMBER(NVL(rule_value,0))  FROM CMSRULES  WHERE RULE_CODE='ALRT_SEQ_MAX_LIMIT')
		UNION
		SELECT SEQUENCE_NAME FROM user_sequences WHERE sequence_name = 'TOW_ORDER_OUT_SEQ' AND (LAST_NUMBER/lpad(max_value, 8, 0)) * 100 > (SELECT TO_NUMBER(NVL(rule_value,0))  FROM CMSRULES  WHERE RULE_CODE='ALRT_SEQ_MAX_LIMIT')
		UNION
		SELECT SEQUENCE_NAME FROM user_sequences WHERE sequence_name = 'EXP_RAMP_HOFORM_SEQ' AND (LAST_NUMBER/lpad(max_value, 8, 0)) * 100 > (SELECT TO_NUMBER(NVL(rule_value,0))  FROM CMSRULES  WHERE RULE_CODE='ALRT_SEQ_MAX_LIMIT')
		UNION
		SELECT SEQUENCE_NAME FROM user_sequences WHERE sequence_name = 'EXP_SID_SEQ' AND (LAST_NUMBER/lpad(max_value, 5, 0)) * 100 > (SELECT TO_NUMBER(NVL(rule_value,0))  FROM CMSRULES  WHERE RULE_CODE='ALRT_SEQ_MAX_LIMIT')
		UNION
		SELECT SEQUENCE_NAME FROM user_sequences WHERE sequence_name = 'INVOICE_NO_SEQ' AND (LAST_NUMBER/lpad(max_value, 8, 0)) * 100 > (SELECT TO_NUMBER(NVL(rule_value,0))  FROM CMSRULES  WHERE RULE_CODE='ALRT_SEQ_MAX_LIMIT')
		UNION
		SELECT SEQUENCE_NAME FROM user_sequences WHERE sequence_name = 'ADJUSTMENT_NO_SEQ' AND (LAST_NUMBER/lpad(max_value, 6, 0)) * 100 > (SELECT TO_NUMBER(NVL(rule_value,0))  FROM CMSRULES  WHERE RULE_CODE='ALRT_SEQ_MAX_LIMIT')
		UNION
		SELECT SEQUENCE_NAME FROM user_sequences WHERE sequence_name = 'URF_SEQ' AND (LAST_NUMBER/lpad(max_value, 8, 0)) * 100 > (SELECT TO_NUMBER(NVL(rule_value,0))  FROM CMSRULES  WHERE RULE_CODE='ALRT_SEQ_MAX_LIMIT')
		UNION
		SELECT SEQUENCE_NAME FROM user_sequences WHERE sequence_name = 'LUC_NO_SEQ' AND (LAST_NUMBER/lpad(max_value, 5, 0)) * 100 > (SELECT TO_NUMBER(NVL(rule_value,0))  FROM CMSRULES  WHERE RULE_CODE='ALRT_SEQ_MAX_LIMIT')
		UNION
		SELECT SEQUENCE_NAME FROM user_sequences WHERE sequence_name = 'CT_NO_SEQ' AND (LAST_NUMBER/lpad(max_value, 6, 0)) * 100 > (SELECT TO_NUMBER(NVL(rule_value,0))  FROM CMSRULES  WHERE RULE_CODE='ALRT_SEQ_MAX_LIMIT')
		UNION
		SELECT SEQUENCE_NAME FROM user_sequences WHERE sequence_name = 'VCL_NO_SEQ' AND (LAST_NUMBER/lpad(max_value, 8, 0)) * 100 > (SELECT TO_NUMBER(NVL(rule_value,0))  FROM CMSRULES  WHERE RULE_CODE='ALRT_SEQ_MAX_LIMIT')
		) A
	  ]]>
	</select>
	<update id="sqlCloseTrcFltDtlsLocJob" parameterClass="cargo.cms.imprt.bo.FlightBO">
	<![CDATA[
	UPDATE TRC_LOC TRCLOC SET TRCLOC.DCRPNCY_STS='Close',TRCLOC.lm_user_id='SYSTEM',TRCLOC.LM_DATE=SYSDATE  WHERE (TRCLOC.AWB_NO,TO_CHAR(TRCLOC.AWB_DATE,'DDMONYY'),TRCLOC.DCRPNCY_TYP) IN (
    select a.awb_no,TO_CHAR(A.AWB_DATE,'DDMONYY'),a.DCRPNCY_TYP
		from trc_flt a, trc_awb b where a.awb_date= b.awb_date and a.awb_no=b.awb_no 
    and (upper(a.DCRPNCY_STS) not in ('CLOSE','VOID')  or  a.DCRPNCY_STS is null)
    and a.cr_date < (sysdate - (SELECT RULE_VALUE FROM CMSRULES WHERE RULE_CODE='AUTO_CLOSE_TRACING_RCRD'))
    AND NOT EXISTS (SELECT NULL FROM AWB_INVENTORY INV WHERE INV.AWB_NO = A.AWB_NO AND INV.AWB_DATE = A.AWB_DATE))
    ]]>
	</update>
	
	<update id="sqlCloseTrcFltDtlsJob" parameterClass="cargo.cms.imprt.bo.FlightBO">
	<![CDATA[
	UPDATE TRC_FLT TRCFLT SET TRCFLT.DCRPNCY_STS='Close',TRCFLT.remarks=substr((REMARKS||' '||'Automatically Closed by System'),0,65),TRCFLT.lm_user_id='SYSTEM',TRCFLT.LM_DATE=SYSDATE WHERE (TRCFLT.AWB_NO,TO_CHAR(TRCFLT.AWB_DATE,'DDMONYY'),TRCFLT.FLT_KEY,TO_CHAR(TRCFLT.FLT_DATE,'DDMONYY'),TRCFLT.DCRPNCY_TYP) IN (    
    select a.awb_no,TO_CHAR(A.AWB_DATE,'DDMONYY'),A.FLT_KEY,TO_CHAR(A.FLT_DATE,'DDMONYY'),a.DCRPNCY_TYP
		from trc_flt a, trc_awb b where a.awb_date= b.awb_date and a.awb_no=b.awb_no 
    and (upper(a.DCRPNCY_STS) not in ('CLOSE','VOID')  or  a.DCRPNCY_STS is null)
    and a.cr_date < (sysdate - (SELECT RULE_VALUE FROM CMSRULES WHERE RULE_CODE='AUTO_CLOSE_TRACING_RCRD'))
    AND NOT EXISTS (SELECT NULL FROM AWB_INVENTORY INV WHERE INV.AWB_NO = A.AWB_NO AND INV.AWB_DATE = A.AWB_DATE))
    ]]>
	</update>
	
	<update id="sqlCloseTrcWoutFltDtlsJob" parameterClass="cargo.cms.imprt.bo.FlightBO">
	<![CDATA[
	UPDATE TRC_LOC TRCLOC SET TRCLOC.DCRPNCY_STS='Close',TRCLOC.remarks=substr((REMARKS||' '||'Automatically Closed by System'),0,65),TRCLOC.lm_user_id='SYSTEM',TRCLOC.LM_DATE=SYSDATE  WHERE (TRCLOC.AWB_NO,TO_CHAR(TRCLOC.AWB_DATE,'DDMONYY'),TRCLOC.DCRPNCY_TYP) IN (
		select a.awb_no as awbNo,TO_CHAR(A.AWB_DATE,'DDMONYY'),a.DCRPNCY_TYP
		from trc_loc a, trc_awb b where a.awb_date= b.awb_date 
		and (upper(a.DCRPNCY_STS) not in ('CLOSE','VOID')  or  a.DCRPNCY_STS is null)
    and a.cr_date < (sysdate - (SELECT RULE_VALUE FROM CMSRULES WHERE RULE_CODE='AUTO_CLOSE_TRACING_RCRD'))
    and a.AWB_NO NOT IN (select c.awb_no from trc_flt c, trc_awb d where c.awb_date= d.awb_date and c.awb_no=d.awb_no and (upper(c.DCRPNCY_STS) not in ('CLOSE','VOID')  or  c.DCRPNCY_STS is null))
    AND NOT EXISTS (SELECT NULL FROM AWB_INVENTORY INV WHERE INV.AWB_NO = A.AWB_NO AND INV.AWB_DATE = A.AWB_DATE))
    ]]>
	</update>
		<select id="sqlgetErrMessage" parameterClass="java.lang.String" resultClass="java.lang.String">
	SELECT ERR_DESC FROM ERR_MSG WHERE ERR_CODE= #PARAM# AND ERR_LCODE = 'en_US' AND ROWNUM=1
	</select>
		<select id="sqlgetjobdetails" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO" resultClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
		<![CDATA[
		SELECT A.JOB_ID AS batchJob1,B.REF_KEY AS refKey,B.SRF_NO AS srfNo,DECODE(b.SRF_NO,'','N',null,'N','Y') AS result,
		B.REMARKS AS errorRemarks FROM BATCH_JOB_HD A,BATCH_JOB_DTL B WHERE B.JOB_ID = A.JOB_ID AND A.JOB_TYPE = #jobType# AND A.JOB_ID = #jobId# ORDER BY b.job_id,b.docline_no ASC
		]]>
	</select>
	<select id="selectUrfUldsforbatchissuesrf"  parameterClass="map"  resultClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
		SELECT uld.uld_key urfUld,
		  awb.flt_key flightNoKey,
		  TO_CHAR(awb.flt_date,'DDMONYY') flightDate, awb.awb_date 
		FROM uld_inventory uld,
		  awb_inventory awb
		WHERE uld.uld_key            =awb.uld_key
		AND awb.awb_no               =#awbNo#
		AND awb.awb_date             =#awbDate#
		AND (awb.FLT_KEY = #fltKey# OR awb.CDIF_NO = #fltKey#) 
		AND awb.FLT_DATE = #fltDate#
		AND (uld.HANDLING_MODE      IS NOT NULL
		AND (upper(uld.HANDLING_MODE)='PPK'))
	</select>
	<select id="sqlgetAWBBatchJobStatus" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		<![CDATA[
		SELECT COUNT(JOB_ID)
		FROM
		  (SELECT DISTINCT A.JOB_ID
		  FROM BATCH_JOB_HD A,
		    BATCH_JOB_DTL B
		  WHERE B.JOB_ID   = A.JOB_ID
		  AND B.awb_no=#PARAM#
		  AND B.COMP_DATE IS NULL
		  )
		]]>
	</select>
	<select id="getTransitCtrlProShcList" parameterClass="java.util.HashMap" resultClass="cargo.cms.imprt.bo.TsnstCntrlChklstBO">
		select off_point unldgpt, leg_ord legOrd, prohibit_shc1 prShc1, prohibit_shc2 prShc2, prohibit_shc3 prShc3
		from flt_opr_leg 
		where  flt_type = 'D' and flt_key=#fltKey# and sch_date=#fltDate#
		order by leg_ord
	</select>


<insert id="sql_batch_hd" parameterClass="java.util.HashMap" >
		INSERT INTO BATCH_JOB_HD (JOB_ID,JOB_TYPE,ACT_USER,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE)
		VALUES ( #JOB_ID#,#JOB_TYPE#,#USER#,#USER#,SYSDATE,#USER#,SYSDATE)
	</insert>
	
	<insert id="sql_insert_batch_dtl" parameterClass="java.util.HashMap" >
		INSERT INTO BATCH_JOB_DTL (JOB_ID,REF_KEY,AWB_NO,AWB_DATE,FLT_KEY,FLT_DATE,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,DOCLINE_NO)
    		VALUES (#JOB_ID#,#REF_KEY#,#AWB_NO#,#AWB_DATE#,#FLT_KEY#,#FLT_DATE#,#USER#,SYSDATE,#USER#,SYSDATE,nvl(#DOCLINE_NUM#,'1'))
	</insert>

	<select id="checkCarConfirmedForAWB" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		select count(1) FROM IMP_CAR_SHP where flt_key =#FLT_KEY# and flt_date =to_date(#FLT_DATE#,'DDMONYY') and awb_no =#AWB_NO# and awb_date =to_date(#AWB_DATE#,'DDMONYY') and CAR_CREATED = 'Y'	
	</select>
	
	<select id="checkFWBReceivedForAWB" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		select count(1) FROM EDI_FWB where awb_no =#AWB_NO# and awb_date =to_date(#AWB_DATE#,'DDMONYY')	
	</select>

	<select id="viewCARCharges"  parameterClass="cargo.cms.imprt.report.bo.EAWBPrintRept_BO" resultClass="cargo.cms.imprt.report.bo.EAWBPrintRept_BO">
	<![CDATA[
	  select 
	    (SELECT decode(nvl(PP_AMT,0),'0','', TRIM(to_char(nvl(PP_AMT,0),'999999999999999999999999999999999990.00'))) FROM IMP_CAR_CHRG_ITM WHERE AWB_NO =A.AWB_NO AND AWB_DATE = A.AWB_DATE and COLL_CHARGE_DESC = 'WCS' AND ROWNUM=1) as valChrgPrepd,
	    (SELECT decode(nvl(PP_AMT,0),'0','', TRIM(to_char(nvl(PP_AMT,0),'999999999999999999999999999999999990.00'))) FROM IMP_CAR_CHRG_ITM WHERE AWB_NO =A.AWB_NO AND AWB_DATE = A.AWB_DATE and COLL_CHARGE_DESC = 'VCS' AND ROWNUM=1) as ppdValVcAmt,
	    (SELECT decode(nvl(PP_AMT,0),'0','', TRIM(to_char(nvl(PP_AMT,0),'999999999999999999999999999999999990.00'))) FROM IMP_CAR_CHRG_ITM WHERE AWB_NO =A.AWB_NO AND AWB_DATE = A.AWB_DATE and COLL_CHARGE_DESC = 'TAX' AND ROWNUM=1) as taxChrgPrepd,
	    (SELECT decode(nvl(PP_AMT,0),'0','', TRIM(to_char(nvl(PP_AMT,0),'999999999999999999999999999999999990.00'))) FROM IMP_CAR_CHRG_ITM WHERE AWB_NO =A.AWB_NO AND AWB_DATE = A.AWB_DATE and COLL_CHARGE_DESC = 'ACS' AND ROWNUM=1) as agentChgPrpd,
	    (SELECT decode(nvl(PP_AMT,0),'0','', TRIM(to_char(nvl(PP_AMT,0),'999999999999999999999999999999999990.00'))) FROM IMP_CAR_CHRG_ITM WHERE AWB_NO =A.AWB_NO AND AWB_DATE = A.AWB_DATE and COLL_CHARGE_DESC = 'CCS' AND ROWNUM=1) as carrChrgPrepd,
	    (SELECT decode(nvl(CC_AMT,0),'0','', TRIM(to_char(nvl(CC_AMT,0),'999999999999999999999999999999999990.00'))) FROM IMP_CAR_CHRG_ITM WHERE AWB_NO =A.AWB_NO AND AWB_DATE = A.AWB_DATE and COLL_CHARGE_DESC = 'WCS' AND ROWNUM=1) as valChrg,
	    (SELECT decode(nvl(CC_AMT,0),'0','', TRIM(to_char(nvl(CC_AMT,0),'999999999999999999999999999999999990.00'))) FROM IMP_CAR_CHRG_ITM WHERE AWB_NO =A.AWB_NO AND AWB_DATE = A.AWB_DATE and COLL_CHARGE_DESC = 'VCS' AND ROWNUM=1) as colValVcAmt,
	    (SELECT decode(nvl(CC_AMT,0),'0','', TRIM(to_char(nvl(CC_AMT,0),'999999999999999999999999999999999990.00'))) FROM IMP_CAR_CHRG_ITM WHERE AWB_NO =A.AWB_NO AND AWB_DATE = A.AWB_DATE and COLL_CHARGE_DESC = 'TAX' AND ROWNUM=1) as taxChrg,
	    (SELECT decode(nvl(CC_AMT,0),'0','', TRIM(to_char(nvl(CC_AMT,0),'999999999999999999999999999999999990.00'))) FROM IMP_CAR_CHRG_ITM WHERE AWB_NO =A.AWB_NO AND AWB_DATE = A.AWB_DATE and COLL_CHARGE_DESC = 'ACS' AND ROWNUM=1) as agentChrg,
	    (SELECT decode(nvl(CC_AMT,0),'0','', TRIM(to_char(nvl(CC_AMT,0),'999999999999999999999999999999999990.00'))) FROM IMP_CAR_CHRG_ITM WHERE AWB_NO =A.AWB_NO AND AWB_DATE = A.AWB_DATE and COLL_CHARGE_DESC = 'CCS' AND ROWNUM=1) as carrChrg
    from imp_car_awb a where awb_no=#awbNo# AND AWB_DATE = #awbDate#
    ]]>
	</select>

	<select id="getReportlicenceDetails"  parameterClass="cargo.cms.imprt.report.bo.EAWBPrintRept_BO" 		resultClass="cargo.cms.imprt.report.bo.EAWBPrintRept_BO">
	<![CDATA[
	SELECT carawb.CC_FEE as ccFee,Decode(carawb.ppk_type,'B','No','Yes') as bupInd,carawb.appntd_agent as appointAgent,
	(SELECT COUNT(*) FROM CUST_UNDERTAKING CU WHERE 
	                               CU.AGENT_CODE = (SELECT AGENT_CODE FROM AWB WHERE AWB_DATE=carawb.awb_date AND AWB_NO=carawb.awb_no) AND 
	                               CU.CARR_CODE = (SELECT CARR_CODE FROM AWB WHERE AWB_DATE=carawb.awb_date AND AWB_NO=carawb.awb_no) AND 
	                               carawb.AWB_DATE BETWEEN CU.EFF_FROM AND CU.EFF_TO) AS licenceUnder,
(CASE WHEN (SELECT COUNT(1) FROM CUST_AGENT_LEVEL_CRD WHERE CUST_NO=carawb.AGENT_CUST_NO AND to_date(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') > = to_date(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') AND NVL(upper(Status),'**')                             <> 'VOID') > 0 THEN 'Y' ELSE
    CASE WHEN (SELECT COUNT(1) FROM CUST_AGENT_AIRL_CREDIT WHERE CUST_NO=carawb.AGENT_CUST_NO AND to_date(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') > = to_date(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') AND NVL(status,'*')                                     <> 'VOID') > 0 THEN 'Y' ELSE
    CASE WHEN (SELECT COUNT(1) FROM CUST_AGENT_VIRTUAL_CREDIT WHERE CUST_NO=carawb.AGENT_CUST_NO AND to_date(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') > = to_date(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') AND NVL(upper(Status),'**')                             <> 'VOID' ) > 0 THEN 'Y' ELSE 'N' END END END) AS creditAgent,
    (SELECT nvl(to_char(sum(amount),'999999,999,999.99'),0) FROM awb_isac_charges WHERE AWB_NO=carawb.awb_no and awb_date=carawb.awb_date) as isacCharge,
    (SELECT exch_rate FROM MAST_CURR_EXRATE E, MAST_CURRENCY C	WHERE		C.CODE= E.CURR_CODE	
    and E.CURR_CODE= NVL(carawb.CURR_CODE,carawb.DECLN_CURR_CODE)    AND E.CARR_CODE= awb.carr_code    AND EFF_DATE >= NVL((select max(i.EFF_DATE) from MAST_CURR_EXRATE i
										  where i.CURR_CODE	= E.CURR_CODE	and NVL(i.CARR_CODE, '**') = NVL(E.CARR_CODE, '**')),sysdate))  AS currencyCode    
FROM IMP_CAR_AWB carawb,AWB awb WHERE awb.awb_no = carawb.awb_no and awb.awb_date=carawb.awb_date and carawb.AWB_NO = #awbNo# AND carawb.AWB_DATE = #awbDate#
]]>
	</select>

<select id="getReportChargesListdata"  parameterClass="cargo.cms.imprt.report.bo.EAWBPrintRept_BO" 		resultClass="cargo.cms.imprt.report.bo.EAWBPrintRept_BO">
		<![CDATA[
		
		select awbNo, awbDate, itemCode, itemCodeSfx, itemDesc, m.REV_IND revInd, qty, unitPrice, 
        CASE WHEN (chamt - nvl(pchrg, 0) - nvl(waiveAmount,0)) < 0 THEN 0 ELSE (chamt - nvl(pchrg, 0) - nvl(waiveAmount,0)) END amt,
        (chamt - nvl(waiveAmount,0)) chrgAmt, minChrgInd, maxChrgInd,
	    a.AGENT_CODE custNo, a.AGENT_NAME custName, m.CASH_IND cashInd, m.STD_IND stdInd, m.UOM uom, m.UPD_DESC updDesc, m.UPD_RATE updRate, 
		m.WAVR_IND waiveCharges
		from 
			 (select G.AWB_NO awbNo, G.AWB_DATE awbDate, G.ITM_CODE itemCode , G.ITM_CODE_SFX itemCodeSfx, 
					  min(G.ITM_DESC) itemDesc, min(G.REV_IND) revInd,sum(G.QTY) qty, max(G.UNIT_PRICE) unitPrice, sum(G.AMT - nvl(pchrg, 0)) chamt, 
					 min(G.MIN_CHRG_IND) minChrgInd, min(G.MAX_CHRG_IND) maxChrgInd
					 from GT_SRF_CHARGES G
					 left join (select C.AWB_NO, C.AWB_DATE, SF.FLT_KEY, SF.FLT_DATE, C.ITM_CODE, C.ITM_CODE_SFX, nvl(sum(nvl(PAID_AMT_CASH,0) + nvl(PAID_AMT_CREDIT,0) + nvl(WAVR_AMT,0)),0) pchrg
							 from BILL_CHARGE_DTL C
							 JOIN IMP_SRF_FLT SF ON SF.SRF_NO = C.SRF_NO
							 where C.Status = 'PAID' AND C.ITM_CODE LIKE 'SC%'
							 group by C.AWB_NO, C.AWB_DATE, SF.FLT_KEY, SF.FLT_DATE, C.ITM_CODE, C.ITM_CODE_SFX) cps 
							 	   on cps.AWB_NO = g.AWB_NO AND cps.AWB_DATE = g.AWB_DATE
								   	  AND cps.FLT_KEY = g.FLT_KEY AND cps.FLT_DATE = g.FLT_DATE
							 	   	  AND cps.ITM_CODE = g.ITM_CODE and NVL(cps.ITM_CODE_SFX, '**') = NVL(g.ITM_CODE_SFX, '**')
					 where G.AWB_NO = #awbNo# and G.AWB_DATE = to_date(#awbDate#, 'DDMONYY')					 
					  and G.RMODE = 'SRF'
					 group by G.AWB_NO, G.AWB_DATE, G.ITM_CODE, G.ITM_CODE_SFX
			  union
			  Select AWB_NO, AWB_DATE, ITM_CODE, ITM_CODE_SFX, 
			  		 ITM_DESC, REV_IND, 1, 0, CHRG_AMT, 
					 'N', 'N'
					  from IMP_CHRG_ITM_REV_AWB 
					  where AWB_NO = #awbNo# and AWB_DATE = to_date(#awbDate#, 'DDMONYY')
					  AND ITM_CODE in ('CCIMPO', 'FCIMFC', 'DBIMPO')
			  ) c
		join IMP_CAR_AWB ica on ica.AWB_NO = c.awbNo AND ica.AWB_DATE = c.awbDate
		join BILL_ITM_MASTER m on m.ITM_CODE = c.itemCode and NVL(m.ITM_CODE_SFX, '**') = NVL(c.itemCodeSfx, '**') and nvl(m.ECT_HANDLER, NVL(ica.ECT_HANDLER, 'CPCT')) = NVL(ica.ECT_HANDLER, 'CPCT')
		join AWB a on a.AWB_NO = c.awbNo and a.AWB_DATE = c.awbDate and a.AWB_TYPE = 'I' 
		left join IMP_CHRG_ITM_REV_AWB ic on ic.AWB_NO = c.awbNo AND  ic.AWB_DATE = c.awbDate AND ic.ITM_CODE = c.itemCode and NVL(ic.ITM_CODE_SFX, '**') = NVL(c.itemCodeSfx, '**')
		left join (select AWB_NO, AWB_DATE, ITM_CODE, ITM_CODE_SFX, sum(NET_AMT+WAVR_AMT) pchrg  from BILL_CHARGE_DTL where Status = 'PAID' AND ITM_CODE NOT LIKE 'SC%' group by AWB_NO, AWB_DATE, ITM_CODE, ITM_CODE_SFX) cp on cp.AWB_NO = c.awbNo AND  cp.AWB_DATE = c.awbDate AND cp.ITM_CODE = c.itemCode and NVL(cp.ITM_CODE_SFX, '**') = NVL(c.itemCodeSfx, '**')
		left join (SELECT AWB_NO,AWB_DATE,ITM_CODE,ITM_CODE_SFX,SUM(WAVR_AMT) waiveAmount FROM  BILL_WAIVE_CHARGE  WHERE NVL(CHARGE_CREATED,'N') = 'N' group by AWB_NO, AWB_DATE,ITM_CODE,ITM_CODE_SFX) W_CHARGE  on W_CHARGE.AWB_NO = c.awbNo and W_CHARGE.AWB_DATE = c.awbDate and W_CHARGE.ITM_CODE = c.itemCode and NVL(W_CHARGE.ITM_CODE_SFX, '**') = NVL(c.itemCodeSfx, '**')
		where NVL(ic.PAYMENT_MODE, 'Revenue') not in ('No value')  
		]]>
	</select>
	<select id="fetchEctHandlerDetails"  parameterClass="cargo.cms.imprt.report.bo.EAWBPrintRept_BO" resultClass="cargo.cms.imprt.report.bo.EAWBPrintRept_BO">
	select bank_endos as bankEndos,bank_type as bankType,spl_code1 as splCode1,spl_code2 as splCode2,spl_code3 as splCode3,spl_code4 as splCode4,spl_code5 as splCode5,spl_code6 as splCode6,spl_code7 as splCode7,spl_code8 as splCode8,spl_code9 as splCode9,ect_handler as ectHandler from imp_car_awb where AWB_NO = #awbNo# AND AWB_DATE = #awbDate#
	</select>
	<select id="viewNTAWBReptA"  parameterClass="cargo.cms.imprt.report.bo.EAWBPrintRept_BO" resultClass="cargo.cms.imprt.report.bo.EAWBPrintRept_BO">
		SELECT
		EDI_FWB.tr_no as trNo,
		EDI_FWB.ORG as orginAa,
		EDI_FWB.RTG_APT_CODE as depAportName,
		EDI_FWB.RTG_DES_CARR as carrAgent,
		(select code_desc from mast_city where code = EDI_FWB.DES) as		finalAirportName,
		(select code_desc from cust_company where carr_code = (select carr_code from		mast_awb_prefix where code=SUBSTR(SUBSTR(EDI_FWB.AWB_NO,1,3),1,3)		and rownum=1)) as compName,
		to_char(edi_fwb.isu_awb_iss_date,'DDMONYY') as execnDate,
		decode(nvl(EDI_FWB.PPD_TOTAL_WT_AMT,0),'0','',to_char(nvl(EDI_FWB.PPD_TOTAL_WT_AMT,0),'9999990.00')) as ttlWtChrgPpd,
		SUBSTR(EDI_FWB.AWB_NO,1,3) ||'   '|| EDI_FWB.ORG||'   '||SUBSTR(EDI_FWB.AWB_NO,4) as	awbNoSfx,
		SUBSTR(EDI_FWB.AWB_NO,1,3)||'-'||SUBSTR(EDI_FWB.AWB_NO,4) AS awbNo,
		to_char(EDI_FWB.AWB_DATE,'DDMONYY') as awbDate,
		EDI_FWB.ORG as ediFwbOrig,
    EDI_FWB.DES as dest,
		EDI_FWB.SHPR_ACC_NO as shprAccNo,
		EDI_FWB.SHPR_NAME as shprName,
		EDI_FWB.SHPR_ADDR as shprAddr1,	
		EDI_FWB.SHIP_DESC_C as shipDescC,
		EDI_FWB.PCS as pcs,
		EDI_FWB.WGT_UNIT as wgtUnit,
		EDI_FWB.WGT as wgt,
		EDI_FWB.FLT_CARR1||EDI_FWB.FLT_NUM1 ||'/'||EDI_FWB.FLT_DATE1 as finalFltCarr1,
		EDI_FWB.FLT_NUM1 as finalFltNo1,
		EDI_FWB.FLT_KEY1 fltKey1,
		EDI_FWB.FLT_DATE1 as finalFltDt1,
		EDI_FWB.FLT_CARR2||EDI_FWB.FLT_NUM2 ||'/'||EDI_FWB.FLT_DATE2 as finalFltCarr2,
		EDI_FWB.FLT_NUM2 as finalFltNo2,
		EDI_FWB.FLT_KEY2 fltKey2,
		EDI_FWB.FLT_DATE2 as finalFltDt2,
		EDI_FWB.RTG_APT_CODE as rtgAptCode,
		EDI_FWB.RTG_DES_CARR as rtgDesCarr,	
		EDI_FWB.RTG_ONWARD_CODE1 as rtgOnwardCode1,
		EDI_FWB.RTG_ONWARD_CARR1 as rtgOnwardCarr1,
		EDI_FWB.RTG_ONWARD_CODE2 as rtgOnwardCode2,
		EDI_FWB.RTG_ONWARD_CARR2 as rtgOnwardCarr2,
		EDI_FWB.SHPR_PLACE as shprCity,
		(select code_desc from mast_country mcntr where mcntr.code = EDI_FWB.SHPR_CTRY_CODE) as shpCountry,
EDI_FWB.SHPR_STATE_PROVINCE as shprState,
		 EDI_FWB.SHPR_PIN_CODE as shpPostal,
		decode(EDI_FWB.SHPR_CONT_ID,null,
		(SELECT STRAGG(STRINGDELIM(EDI_FWB_CONTACT.cont_name,'/')) FROM
		EDI_FWB_CONTACT WHERE EDI_FWB_CONTACT.tr_no=EDI_FWB.tr_no and cont_id =
		'TE' and cont_type = 'SHP' ),
		EDI_FWB.SHPR_CONT_ID) as shpTelNo,
		decode(EDI_FWB.SHPR_CONT_ID,null,
		(SELECT STRAGG(STRINGDELIM(EDI_FWB_CONTACT.cont_name,'/')) FROM
		EDI_FWB_CONTACT WHERE EDI_FWB_CONTACT.tr_no=EDI_FWB.tr_no and cont_id =
		'FX' and cont_type = 'SHP' ),
		EDI_FWB.SHPR_CONT_ID) as shpFax,
		decode(EDI_FWB.SHPR_CONT_ID,null,
		(SELECT STRAGG(STRINGDELIM(EDI_FWB_CONTACT.cont_name,'/')) FROM
		EDI_FWB_CONTACT WHERE EDI_FWB_CONTACT.tr_no=EDI_FWB.tr_no and cont_id =
		'TL' and cont_type = 'SHP' ),
		EDI_FWB.SHPR_CONT_ID) as shpTelexNO,
	
		decode(EDI_FWB.SHPR_CONT_ID,null,
		(SELECT STRAGG(STRINGDELIM(EDI_FWB_CONTACT.cont_name,'/')) FROM
		EDI_FWB_CONTACT WHERE EDI_FWB_CONTACT.tr_no=EDI_FWB.tr_no and cont_id =
		'TE' and cont_type = 'CNE' ),
		EDI_FWB.SHPR_CONT_ID) as csgnTelNo,
	
		decode(EDI_FWB.SHPR_CONT_ID,null,
		(SELECT STRAGG(STRINGDELIM(EDI_FWB_CONTACT.cont_name,'/')) FROM
		EDI_FWB_CONTACT WHERE EDI_FWB_CONTACT.tr_no=EDI_FWB.tr_no and cont_id =
		'FX' and cont_type = 'CNE' ),
		EDI_FWB.SHPR_CONT_ID) as csgnFax,
	
		decode(EDI_FWB.SHPR_CONT_ID,null,
		(SELECT STRAGG(STRINGDELIM(EDI_FWB_CONTACT.cont_name,'/')) FROM
		EDI_FWB_CONTACT WHERE EDI_FWB_CONTACT.tr_no=EDI_FWB.tr_no and cont_id =
		'TL' and cont_type = 'CNE' ),
		EDI_FWB.SHPR_CONT_ID) as csgnTelexNO,
	
		EDI_FWB.SHPR_CONT_NO as shpFax,
		EDI_FWB.CSGNE_ACC_NO as csgnAccNo,
		EDI_FWB.CSGNE_NAME as csgnName,
		EDI_FWB.CSGNE_ADDR as csgnAddr1,
		EDI_FWB.CSGNE_PLACE as csgnCity,
		(select code_desc from mast_country mcntr where mcntr.code = EDI_FWB.CSGNE_CTRY_CODE) as csgnCountry,
    EDI_FWB.CSGNE_STATE_PROVINCE as csgnState,
		EDI_FWB.CSGNE_PIN_CODE as csgnPostal,
		EDI_FWB.CSGNE_CONT_ID as csgnContact,
		EDI_FWB.CSGNE_CONT_NO as csgnContact,
		EDI_FWB.AGENT_ACC_NO as agentAccNo,
		decode(EDI_FWB.AGENT_IATA_CODE,'0',' ',EDI_FWB.AGENT_IATA_CODE) as agentIata,
		decode(EDI_FWB.AGENT_IATA_ADDR,'0',' ',EDI_FWB.AGENT_IATA_ADDR) as
		agentIataAddr,
		EDI_FWB.AGENT_PART_ID as agentPartId,
		EDI_FWB.AGENT_NAME as agentName,
		 EDI_FWB.AGENT_PLACE as agentCity,
		EDI_FWB.AGENT_SPL_SERV1 as hndlgInfo1,
		EDI_FWB.AGENT_SPL_SERV2 hndlgInfo2,
		EDI_FWB.AGENT_SPL_SERV3 hndlgInfo3,
		EDI_FWB.AGENT_SPL_SERV3 agentSplServ3,
		EDI_FWB.NOTIFY_NAME notifyName,
		EDI_FWB.NOTIFY_ADDR notifyAddr,
		EDI_FWB.NOTIFY_ADDR2 notifyAddr2,
		EDI_FWB.NOTIFY_PLACE notifyPlace,
		EDI_FWB.NOTIFY_CTRY_CODE notifyCtryCode,
		EDI_FWB.NOTIFY_STATE_PROVINCE notifyStateProvince,
		EDI_FWB.NOTIFY_PIN_CODE notifyPinCode,
		EDI_FWB.NOTIFY_CONT_ID notifyContId,
		EDI_FWB.NOTIFY_CONT_NO notifyContNo,
		(SELECT  NVL(STRAGG(STRINGDELIM(cont_id  ||  ' ' ||  cont_name, ' ')),'')   FROM   EDI_FWB_CONTACT WHERE tr_no= EDI_FWB.tr_no AND edi_fwb_contact.cont_type = 'NFY') as notifyContInfo, 
		EDI_FWB.CVD_ISO_CURR_CODE as currCode,
		EDI_FWB.CVD_CHG_CODE as declChrgCode,
		decode(CVD_CHG_CODE,'','',decode(PPD_TOTAL_WT_AMT,'',decode(PPD_VALUE_VC_AMT,0,'','','','P'),0,decode(PPD_VALUE_VC_AMT,0,'','','','P'),'P'))
		pcsWtPP,
		decode(CVD_CHG_CODE,'','',decode(COL_TOTAL_WT_AMT,'',decode(COL_VALUE_VC_AMT,0,'','','','C'),0,decode(COL_VALUE_VC_AMT,0,'','','','C'),'C'))
		pcsWtColl,
		decode(CVD_CHG_CODE,'','',decode(PPD_TOTAL_OA_AMT,'',decode(PPD_TOTAL_OC_AMT,0,'','','','P'),0,decode(PPD_TOTAL_OC_AMT,0,'','','','P'),'P'))
		pcsOtherPP,
		decode(CVD_CHG_CODE,'','',decode(COL_TOTAL_OA_AMT,'',decode(COL_TOTAL_OC_AMT,0,'','','','C'),0,decode(COL_TOTAL_OC_AMT,0,'','','','C'),'C'))
		pcsOtherColl,
		EDI_FWB.CVD_ISO_CURR_CODE AS cvdIsoCurrCode,
		EDI_FWB.CVD_CHG_CODE AS cvdChgCode,
		EDI_FWB.CVD_CHG_DECL_WGT AS cvdChgDeclWgt,
		EDI_FWB.CVD_CHG_DECL_OTH AS cvdChgDeclOth,
		decode(EDI_FWB.CVD_CHG_CARR_VAL,'0',' ',EDI_FWB.CVD_CHG_CARR_VAL) AS cvdChgCarrVal,
		EDI_FWB.CVD_CHG_CARR_IND AS cvdChgCarrInd,
		decode(EDI_FWB.CVD_CHG_CUST_VAL,'0',' ',EDI_FWB.CVD_CHG_CUST_VAL) AS cvdChgCustVal,
		EDI_FWB.CVD_CHG_CUST_IND AS cvdChgCustInd,
		decode(EDI_FWB.CVD_CHG_INSUR_VAL,'0',' ',EDI_FWB.CVD_CHG_INSUR_VAL) AS cvdChgInsurVal,
		EDI_FWB.CVD_CHG_INSUR_IND AS cvdChgInsurInd,
		(case when nvl(EDI_FWB.CVD_CHG_CARR_VAL,0)>0 then
		trim(EDI_FWB.CVD_CHG_CARR_VAL) else 'NVD' end) as declValCarr,
		(case when nvl(EDI_FWB.CVD_CHG_CUST_VAL,0)>0 then
		trim(EDI_FWB.CVD_CHG_CUST_VAL) else 'NCV' end)as declValCustoms,
		(case when nvl(EDI_FWB.CVD_CHG_INSUR_VAL,0)>0 then
		trim(EDI_FWB.CVD_CHG_INSUR_VAL) else 'XXX' end) as insuranceAmt,
		decode(nvl(EDI_FWB.PPD_TOTAL_WT_AMT,0),'0','',TRIM(to_char(nvl(EDI_FWB.PPD_TOTAL_WT_AMT,0),'999999999999999999999999999999999990.00')))
		as valChrgPrepd,
		decode(nvl(EDI_FWB.PPD_VALUE_VC_AMT,0),'0','',TRIM(to_char(nvl(EDI_FWB.PPD_VALUE_VC_AMT,0),'999999999999999999999999999999999990.00')))
		as ppdValVcAmt,
		decode(nvl(EDI_FWB.PPD_TAXES_TX_AMT,0),'0','',TRIM(to_char(nvl(EDI_FWB.PPD_TAXES_TX_AMT,0),'999999999999999999999999999999999990.00')))
		as taxChrgPrepd,
		decode(nvl(EDI_FWB.PPD_TOTAL_OA_AMT,0),'0','',TRIM(to_char(nvl(EDI_FWB.PPD_TOTAL_OA_AMT,0),'999999999999999999999999999999999990.00')))
		as agentChgPrpd,
		decode(nvl(EDI_FWB.PPD_TOTAL_OC_AMT,0),'0','',TRIM(to_char(nvl(EDI_FWB.PPD_TOTAL_OC_AMT,0),'999999999999999999999999999999999990.00')))
		as carrChrgPrepd,
		decode(nvl(EDI_FWB.PPD_SUMMY_CT_AMT,0),'0','',TRIM(to_char(nvl(EDI_FWB.PPD_SUMMY_CT_AMT,0),'999999999999999999999999999999999990.00')))
		as totWtChrgPrepd,
		decode(nvl(EDI_FWB.COL_TOTAL_WT_AMT,0),'0','',TRIM(to_char(nvl(EDI_FWB.COL_TOTAL_WT_AMT,0),'999999999999999999999999999999999990.00')))
		as valChrg,
		decode(nvl(EDI_FWB.COL_VALUE_VC_AMT,0),'0','',TRIM(to_char(nvl(EDI_FWB.COL_VALUE_VC_AMT,0),'999999999999999999999999999999999990.00')))
		as colValVcAmt,
		decode(nvl(EDI_FWB.COL_TAXES_TX_AMT,0),'0','',TRIM(to_char(nvl(EDI_FWB.COL_TAXES_TX_AMT,0),'999999999999999999999999999999999990.00')))
		as taxChrg,
		decode(nvl(EDI_FWB.COL_TOTAL_OA_AMT,0),'0','',TRIM(to_char(nvl(EDI_FWB.COL_TOTAL_OA_AMT,0),'999999999999999999999999999999999990.00')))
		as agentChrg,
		decode(nvl(EDI_FWB.COL_TOTAL_OC_AMT,0),'0','',TRIM(to_char(nvl(EDI_FWB.COL_TOTAL_OC_AMT,0),'999999999999999999999999999999999990.00')))
		as carrChrg,
		decode(nvl(EDI_FWB.COL_SUMMY_CT_AMT,0),'0','',TRIM(to_char(nvl(EDI_FWB.COL_SUMMY_CT_AMT,0),'999999999999999999999999999999999990.00')))
		as totCollChrgPrepaid,
		EDI_FWB.CER_SIGNATURE as shpSign,
		to_char(EDI_FWB.ISU_AWB_ISS_DATE,'DDMONYY') as sdate,
		EDI_FWB.ISU_AWB_ISS_PLACE as place,
		EDI_FWB.ISU_SIGNATURE as carrSign,
		EDI_FWB.OSI_SERVICE_INFO1 osiServiceInfo1,
		EDI_FWB.OSI_SERVICE_INFO2 osiServiceInfo2 ,
		EDI_FWB.OSI_SERVICE_INFO3 osiServiceInfo3,
		EDI_FWB.CDC_ISO_CURR_CODE cdcIsoCurrCode,
		EDI_FWB.CDC_CURR_RATE cdeCurrRate,
		EDI_FWB.CDC_CC_INDES_AMT cdeCcIndesAmt,
		EDI_FWB.CDC_CC_ATDES_AMT cdeCcAtdesAmt,
		EDI_FWB.CDC_TOTAL_CHG_AMT cdeTotalChgAmt,
		EDI_FWB.COR_CUST_ORI_CODE corCustOriCode,
		 pkg_common.get_fwb_splcodes(EDI_FWB.TR_NO)  splCodes
		FROM EDI_FWB
		where EDI_FWB.TR_NO = (select max(a.tr_no) from edi_fwb a where a.awb_no = #awbNo#)
	</select>
	<select id="viewEAWBReptA"  parameterClass="cargo.cms.imprt.report.bo.EAWBPrintRept_BO" resultClass="cargo.cms.imprt.report.bo.EAWBPrintRept_BO">
		SELECT
		EDI_FWB.tr_no as trNo,
		IMP_CAR_AWB.EXCH_RATE as exchRate,
		IMP_CAR_AWB.AWB_ORIGIN as orginAa,
		EDI_FWB.RTG_APT_CODE as depAportName,
		EDI_FWB.RTG_DES_CARR as carrAgent,
		(select code_desc from mast_city where code = IMP_CAR_AWB.AWB_DEST) as
		finalAirportName,
		(select code_desc from cust_company where carr_code = (select carr_code from
		mast_awb_prefix where code=SUBSTR(SUBSTR(IMP_CAR_AWB.AWB_NO,1,3),1,3)
		and rownum=1)) as compName,
		to_char(edi_fwb.isu_awb_iss_date,'DDMONYY') as execnDate,
		decode(nvl(EDI_FWB.PPD_TOTAL_WT_AMT,0),'0','',to_char(nvl(EDI_FWB.PPD_TOTAL_WT_AMT,0),'9999990.00'))
		as ttlWtChrgPpd,
		SUBSTR(IMP_CAR_AWB.AWB_NO,1,3) ||' '|| IMP_CAR_AWB.AWB_ORIGIN||' '||SUBSTR(IMP_CAR_AWB.AWB_NO,4) as	awbNoSfx,
		SUBSTR(IMP_CAR_AWB.AWB_NO,1,3)||'-'||SUBSTR(IMP_CAR_AWB.AWB_NO,4) AS awbNo,
		to_char(IMP_CAR_AWB.AWB_DATE,'DDMONYY') as awbDate,
		IMP_CAR_AWB.AWB_ORIGIN as ediFwbOrig,
		IMP_CAR_AWB.AWB_DEST as dest,
		EDI_FWB.SHPR_ACC_NO as shprAccNo,
		IMP_CAR_AWB.SHPR_NAME as shprName,
		IMP_CAR_AWB.SHPR_ADD1 as shprAddr1,
		EDI_FWB.CSGNE_ACC_NO as csgnAccNo,
		IMP_CAR_AWB.CSGNE_NAME as csgnName,
		IMP_CAR_AWB.CSGNE_ADDR1 as csgnAddr1,
		IMP_CAR_AWB.CONTENT as shipDescC,
		IMP_CAR_AWB.AWB_PCS as pcs,
		EDI_FWB.WGT_UNIT as wgtUnit,
		IMP_CAR_AWB.AWB_WT as wgt,
		EDI_FWB.FLT_CARR1||EDI_FWB.FLT_NUM1 ||'/'||EDI_FWB.FLT_DATE1 as finalFltCarr1,
		EDI_FWB.FLT_NUM1 as finalFltNo1,
		EDI_FWB.FLT_KEY1 fltKey1,
		EDI_FWB.FLT_DATE1 as finalFltDt1,
		EDI_FWB.FLT_CARR2||EDI_FWB.FLT_NUM2 ||'/'||EDI_FWB.FLT_DATE2 as finalFltCarr2,
		EDI_FWB.FLT_NUM2 as finalFltNo2,
		EDI_FWB.FLT_KEY2 fltKey2,
		EDI_FWB.FLT_DATE2 as finalFltDt2,
		EDI_FWB.RTG_APT_CODE as rtgAptCode,
		EDI_FWB.RTG_DES_CARR as rtgDesCarr,	
		EDI_FWB.RTG_ONWARD_CODE1 as rtgOnwardCode1,
		EDI_FWB.RTG_ONWARD_CARR1 as rtgOnwardCarr1,
		EDI_FWB.RTG_ONWARD_CODE2 as rtgOnwardCode2,
		EDI_FWB.RTG_ONWARD_CARR2 as rtgOnwardCarr2,
		IMP_CAR_AWB.SHPR_PLACE as shprCity,
		(select code_desc from mast_country mcntr where mcntr.code =
		IMP_CAR_AWB.SHPR_CTRY_CODE) as shpCountry,
		IMP_CAR_AWB.SHPR_STATE_PROVINCE as shprState,
		IMP_CAR_AWB.SHPR_PIN_CODE as shpPostal,
		decode(EDI_FWB.SHPR_CONT_ID,null,
		(SELECT STRAGG(STRINGDELIM(EDI_FWB_CONTACT.cont_name,'/')) FROM
		EDI_FWB_CONTACT WHERE EDI_FWB_CONTACT.tr_no=EDI_FWB.tr_no and cont_id =
		'TE' and cont_type = 'SHP' ),
		EDI_FWB.SHPR_CONT_ID) as shpTelNo,
		decode(EDI_FWB.SHPR_CONT_ID,null,
		(SELECT STRAGG(STRINGDELIM(EDI_FWB_CONTACT.cont_name,'/')) FROM
		EDI_FWB_CONTACT WHERE EDI_FWB_CONTACT.tr_no=EDI_FWB.tr_no and cont_id =
		'FX' and cont_type = 'SHP' ),
		EDI_FWB.SHPR_CONT_ID) as shpFax,
		decode(EDI_FWB.SHPR_CONT_ID,null,
		(SELECT STRAGG(STRINGDELIM(EDI_FWB_CONTACT.cont_name,'/')) FROM
		EDI_FWB_CONTACT WHERE EDI_FWB_CONTACT.tr_no=EDI_FWB.tr_no and cont_id =
		'TL' and cont_type = 'SHP' ),
		EDI_FWB.SHPR_CONT_ID) as shpTelexNO,
	
		decode(EDI_FWB.SHPR_CONT_ID,null,
		(SELECT STRAGG(STRINGDELIM(EDI_FWB_CONTACT.cont_name,'/')) FROM
		EDI_FWB_CONTACT WHERE EDI_FWB_CONTACT.tr_no=EDI_FWB.tr_no and cont_id =
		'TE' and cont_type = 'CNE' ),
		EDI_FWB.SHPR_CONT_ID) as csgnTelNo,
	
		decode(EDI_FWB.SHPR_CONT_ID,null,
		(SELECT STRAGG(STRINGDELIM(EDI_FWB_CONTACT.cont_name,'/')) FROM
		EDI_FWB_CONTACT WHERE EDI_FWB_CONTACT.tr_no=EDI_FWB.tr_no and cont_id =
		'FX' and cont_type = 'CNE' ),
		EDI_FWB.SHPR_CONT_ID) as csgnFax,
	
		decode(EDI_FWB.SHPR_CONT_ID,null,
		(SELECT STRAGG(STRINGDELIM(EDI_FWB_CONTACT.cont_name,'/')) FROM
		EDI_FWB_CONTACT WHERE EDI_FWB_CONTACT.tr_no=EDI_FWB.tr_no and cont_id =
		'TL' and cont_type = 'CNE' ),
		EDI_FWB.SHPR_CONT_ID) as csgnTelexNO,
	
		EDI_FWB.SHPR_CONT_NO as shpFax,
		EDI_FWB.CSGNE_ACC_NO as csgnAccNo,
		EDI_FWB.CSGNE_NAME as csgnName,
		IMP_CAR_AWB.CSGNE_ADDR as csgnAddr1,
		IMP_CAR_AWB.CSGNE_PLACE as csgnCity,
		(select code_desc from mast_country mcntr where mcntr.code =
		IMP_CAR_AWB.CSGNE_CTRY_CODE) as csgnCountry,
		IMP_CAR_AWB.CSGNE_STATE_PROVINCE as csgnState,
		IMP_CAR_AWB.CSGNE_PIN_CODE as csgnPostal,
		EDI_FWB.CSGNE_CONT_ID as csgnContact,
		EDI_FWB.CSGNE_CONT_NO as csgnContact,
		EDI_FWB.AGENT_ACC_NO as agentAccNo,
		decode(EDI_FWB.AGENT_IATA_CODE,'0',' ',EDI_FWB.AGENT_IATA_CODE) as agentIata,
		decode(EDI_FWB.AGENT_IATA_ADDR,'0',' ',EDI_FWB.AGENT_IATA_ADDR) as
		agentIataAddr,
		EDI_FWB.AGENT_PART_ID as agentPartId,
		EDI_FWB.AGENT_NAME as agentName,
		EDI_FWB.AGENT_PLACE as agentCity,
		EDI_FWB.AGENT_SPL_SERV1 as hndlgInfo1,
		EDI_FWB.AGENT_SPL_SERV2 hndlgInfo2,
		EDI_FWB.AGENT_SPL_SERV3 hndlgInfo3,
		EDI_FWB.AGENT_SPL_SERV3 agentSplServ3,
		EDI_FWB.NOTIFY_NAME notifyName,
		EDI_FWB.NOTIFY_ADDR notifyAddr,
		EDI_FWB.NOTIFY_ADDR2 notifyAddr2,
		EDI_FWB.NOTIFY_PLACE notifyPlace,
		EDI_FWB.NOTIFY_CTRY_CODE notifyCtryCode,
		EDI_FWB.NOTIFY_STATE_PROVINCE notifyStateProvince,
		EDI_FWB.NOTIFY_PIN_CODE notifyPinCode,		
		(SELECT  NVL(STRAGG(STRINGDELIM(cont_id  ||  ' ' ||  cont_name, ' ')),'')  FROM   EDI_FWB_CONTACT WHERE tr_no= EDI_FWB.tr_no AND edi_fwb_contact.cont_type = 'NFY')  as notifyContInfo, 
		EDI_FWB.NOTIFY_CONT_ID notifyContId,
		EDI_FWB.NOTIFY_CONT_NO notifyContNo,
		EDI_FWB.CVD_ISO_CURR_CODE as currCode,
		EDI_FWB.CVD_CHG_CODE as declChrgCode,
		decode(CVD_CHG_CODE,'','',decode(PPD_TOTAL_WT_AMT,'',decode(PPD_VALUE_VC_AMT,0,'','','','P'),0,decode(PPD_VALUE_VC_AMT,0,'','','','P'),'P'))
		pcsWtPP,
		decode(CVD_CHG_CODE,'','',decode(COL_TOTAL_WT_AMT,'',decode(COL_VALUE_VC_AMT,0,'','','','C'),0,decode(COL_VALUE_VC_AMT,0,'','','','C'),'C'))
		pcsWtColl,
		decode(CVD_CHG_CODE,'','',decode(PPD_TOTAL_OA_AMT,'',decode(PPD_TOTAL_OC_AMT,0,'','','','P'),0,decode(PPD_TOTAL_OC_AMT,0,'','','','P'),'P'))
		pcsOtherPP,
		decode(CVD_CHG_CODE,'','',decode(COL_TOTAL_OA_AMT,'',decode(COL_TOTAL_OC_AMT,0,'','','','C'),0,decode(COL_TOTAL_OC_AMT,0,'','','','C'),'C'))
		pcsOtherColl,
		EDI_FWB.CVD_ISO_CURR_CODE AS cvdIsoCurrCode,
		EDI_FWB.CVD_CHG_CODE AS cvdChgCode,
		EDI_FWB.CVD_CHG_DECL_WGT AS cvdChgDeclWgt,
		EDI_FWB.CVD_CHG_DECL_OTH AS cvdChgDeclOth,
		decode(EDI_FWB.CVD_CHG_CARR_VAL,'0',' ',EDI_FWB.CVD_CHG_CARR_VAL) AS cvdChgCarrVal,
		EDI_FWB.CVD_CHG_CARR_IND AS cvdChgCarrInd,
		decode(EDI_FWB.CVD_CHG_CUST_VAL,'0',' ',EDI_FWB.CVD_CHG_CUST_VAL) AS cvdChgCustVal,
		EDI_FWB.CVD_CHG_CUST_IND AS cvdChgCustInd,
		decode(EDI_FWB.CVD_CHG_INSUR_VAL,'0',' ',EDI_FWB.CVD_CHG_INSUR_VAL) AS cvdChgInsurVal,
		EDI_FWB.CVD_CHG_INSUR_IND AS cvdChgInsurInd,
		(case when nvl(EDI_FWB.CVD_CHG_CARR_VAL,0)>0 then
		trim(EDI_FWB.CVD_CHG_CARR_VAL) else 'NVD' end) as declValCarr,
		(case when nvl(EDI_FWB.CVD_CHG_CUST_VAL,0)>0 then
		trim(EDI_FWB.CVD_CHG_CUST_VAL) else 'NCV' end)as declValCustoms,
		(case when nvl(EDI_FWB.CVD_CHG_INSUR_VAL,0)>0 then
		trim(EDI_FWB.CVD_CHG_INSUR_VAL) else 'XXX' end) as insuranceAmt,
		decode(nvl(EDI_FWB.PPD_TOTAL_WT_AMT,0),'0','',TRIM(to_char(nvl(EDI_FWB.PPD_TOTAL_WT_AMT,0),'999999999999999999999999999999999990.00')))
		as valChrgPrepd,
		decode(nvl(EDI_FWB.PPD_VALUE_VC_AMT,0),'0','',TRIM(to_char(nvl(EDI_FWB.PPD_VALUE_VC_AMT,0),'999999999999999999999999999999999990.00')))
		as ppdValVcAmt,
		decode(nvl(EDI_FWB.PPD_TAXES_TX_AMT,0),'0','',TRIM(to_char(nvl(EDI_FWB.PPD_TAXES_TX_AMT,0),'999999999999999999999999999999999990.00')))
		as taxChrgPrepd,
		decode(nvl(EDI_FWB.PPD_TOTAL_OA_AMT,0),'0','',TRIM(to_char(nvl(EDI_FWB.PPD_TOTAL_OA_AMT,0),'999999999999999999999999999999999990.00')))
		as agentChgPrpd,
		decode(nvl(EDI_FWB.PPD_TOTAL_OC_AMT,0),'0','',TRIM(to_char(nvl(EDI_FWB.PPD_TOTAL_OC_AMT,0),'999999999999999999999999999999999990.00')))
		as carrChrgPrepd,
		decode(nvl(EDI_FWB.PPD_SUMMY_CT_AMT,0),'0','',TRIM(to_char(nvl(EDI_FWB.PPD_SUMMY_CT_AMT,0),'999999999999999999999999999999999990.00')))
		as totWtChrgPrepd,
		decode(nvl(EDI_FWB.COL_TOTAL_WT_AMT,0),'0','',TRIM(to_char(nvl(EDI_FWB.COL_TOTAL_WT_AMT,0),'999999999999999999999999999999999990.00')))
		as valChrg,
		decode(nvl(EDI_FWB.COL_VALUE_VC_AMT,0),'0','',TRIM(to_char(nvl(EDI_FWB.COL_VALUE_VC_AMT,0),'999999999999999999999999999999999990.00')))
		as colValVcAmt,
		decode(nvl(EDI_FWB.COL_TAXES_TX_AMT,0),'0','',TRIM(to_char(nvl(EDI_FWB.COL_TAXES_TX_AMT,0),'999999999999999999999999999999999990.00')))
		as taxChrg,
		decode(nvl(EDI_FWB.COL_TOTAL_OA_AMT,0),'0','',TRIM(to_char(nvl(EDI_FWB.COL_TOTAL_OA_AMT,0),'999999999999999999999999999999999990.00')))
		as agentChrg,
		decode(nvl(EDI_FWB.COL_TOTAL_OC_AMT,0),'0','',TRIM(to_char(nvl(EDI_FWB.COL_TOTAL_OC_AMT,0),'999999999999999999999999999999999990.00')))
		as carrChrg,
		decode(nvl(EDI_FWB.COL_SUMMY_CT_AMT,0),'0','',TRIM(to_char(nvl(EDI_FWB.COL_SUMMY_CT_AMT,0),'999999999999999999999999999999999990.00')))
		as totCollChrgPrepaid,
		EDI_FWB.CER_SIGNATURE as shpSign,
		to_char(EDI_FWB.ISU_AWB_ISS_DATE,'DDMONYY') as sdate,
		EDI_FWB.ISU_AWB_ISS_PLACE as place,
		EDI_FWB.ISU_SIGNATURE as carrSign,
		EDI_FWB.OSI_SERVICE_INFO1 osiServiceInfo1,
		EDI_FWB.OSI_SERVICE_INFO2 osiServiceInfo2 ,
		EDI_FWB.OSI_SERVICE_INFO3 osiServiceInfo3,
		EDI_FWB.CDC_ISO_CURR_CODE cdcIsoCurrCode,
		EDI_FWB.CDC_CURR_RATE cdeCurrRate,
		EDI_FWB.CDC_CC_INDES_AMT cdeCcIndesAmt,
		EDI_FWB.CDC_CC_ATDES_AMT cdeCcAtdesAmt,
		EDI_FWB.CDC_TOTAL_CHG_AMT cdeTotalChgAmt,
		EDI_FWB.COR_CUST_ORI_CODE corCustOriCode,
		pkg_common.get_awb_splcodes(IMP_CAR_AWB.awb_no,IMP_CAR_AWB.awb_date) splCodes
		FROM IMP_CAR_AWB
		LEFT JOIN (select * from edi_fwb a where TR_NO = (select max(to_number(a.tr_no)) from edi_fwb a where a.awb_no = #awbNo# and a.AWB_DATE = to_date(#awbDate#,'DDMONYY'))) 
			EDI_FWB ON EDI_FWB.awb_no = IMP_CAR_AWB.awb_no AND EDI_FWB.awb_date = IMP_CAR_AWB.awb_date
		where IMP_CAR_AWB.AWB_NO = #awbNo# AND IMP_CAR_AWB.AWB_DATE = #awbDate#
	</select>
	
			<select id="viewEAWBReptB"  parameterClass="cargo.cms.imprt.report.bo.EAWBPrintRept_BO" resultClass="cargo.cms.imprt.report.bo.EAWBPrintRept_BO">
		<![CDATA[	
		SELECT * FROM (SELECT 
		 DECODE(EDI_FWB_CHR_RATE.RATE_PCS,'','','0','',EDI_FWB_CHR_RATE.RATE_PCS) as rcpPcs,
    	 trim(to_char(EDI_FWB_CHR_RATE.RATE_GWT,'9999990.0')) as grossWt, 
		 DECODE(EDI_FWB_CHR_RATE.RATE_GWT,'','',EDI_FWB_CHR_RATE.RATE_GWT_CODE) as wgtType,
		 EDI_FWB_CHR_RATE.RATE_CL_CODE as rateClass,
		 EDI_FWB_CHR_RATE.RATE_COMM_N as itemNo,
     	 trim(to_char(EDI_FWB_CHR_RATE.RATE_CHRGBLE_WT,'9999990.0')) as chrgWt,
		 trim(to_char(EDI_FWB_CHR_RATE.RATE_CHRG_RATE,'9999990.00')) as chrgDiscount,
     	trim(to_char(EDI_FWB_CHR_RATE.RATE_CHRG_A,'999999999999999999999.99')) as totchrg,
     	substr(EDI_FWB_CHR_RATE.RATE_GOODS_NATR,0,20) as goodsDesc,substr(EDI_FWB_CHR_RATE.RATE_GOODS_NATR,21,20) as goodsDesc1,substr(EDI_FWB_CHR_RATE.RATE_GOODS_NATR,41,20) as goodsDesc2
     	FROM EDI_FWB,EDI_FWB_CHR_RATE 
		WHERE EDI_FWB_CHR_RATE.TR_NO=EDI_FWB.TR_NO
    	AND EDI_FWB.TR_NO = ( select max(to_number(a.tr_no)) from edi_fwb a where a.awb_no = #awbNo# and a.AWB_DATE = to_date(#awbDate#,'DDMONYY') )
    	order by edi_fwb_chr_rate.doc_line_no) T
    	WHERE (T.rcpPcs IS NOT NULL OR T.grossWt IS NOT NULL OR T.itemNo IS NOT NULL OR T.chrgWt IS NOT NULL OR T.chrgDiscount IS NOT NULL
    	OR T.totchrg IS NOT NULL OR T.goodsDesc IS NOT NULL)
		]]>
	</select>
	
	<select id="viewEAWBReptE"  parameterClass="cargo.cms.imprt.report.bo.EAWBPrintRept_BO" resultClass="cargo.cms.imprt.report.bo.EAWBPrintRept_BO">
		SELECT LENGTH as length,widht as width,HEIGHT as height,PCS as pieces,rtd_awb_vol_amt as volume,rtd_awb_vol_CODE as volCode FROM edi_fwb_dmn WHERE TR_NO=#trNo#
	</select>

	<select id="viewEAWBReptExtendE"  parameterClass="cargo.cms.imprt.report.bo.EAWBPrintRept_BO" resultClass="cargo.cms.imprt.report.bo.EAWBPrintRept_BO">
		SELECT LENGTH as length,widht as width,HEIGHT as height,rtd_awb_dim_unit as dimUnit,PCS as pieces,
		rtd_awb_vol_amt as volume,rtd_awb_vol_CODE as volCode,rtd_slac as slacInfo, RTD_HARM_COMM_C harmComm FROM edi_fwb_dmn WHERE TR_NO=#trNo#
	</select>
	<select id="viewEAWBMSID170CAWBPrint"  parameterClass="cargo.cms.imprt.report.bo.EAWBPrintRept_BO" resultClass="cargo.cms.imprt.report.bo.EAWBPrintRept_BO">
		SELECT 
			DECODE(b.OTH_CHRG_C1||b.OTH_ENTLEMT_C1,null,'',b.OTH_CHRG_C1||' '||b.OTH_ENTLEMT_C1||' :'||trim(to_char(nvl(b.OTH_CHRG1,0),'9999999999990.00'))) ||' ' ||
			DECODE(b.OTH_CHRG_C2||b.OTH_ENTLEMT_C2,null,'',b.OTH_CHRG_C2||' '||b.OTH_ENTLEMT_C2||' :'||trim(to_char(nvl(b.OTH_CHRG2,0),'9999999999990.00'))) ||' ' ||
			DECODE(b.OTH_CHRG_C3||b.OTH_ENTLEMT_C3,null,'',b.OTH_CHRG_C3||' '||b.OTH_ENTLEMT_C3||' :'||trim(to_char(nvl(b.OTH_CHRG3,0),'9999999999990.00'))) as othPcI1
		FROM  EDI_FWB c,EDI_FWB_OTH_CHARGES b
		WHERE c.TR_NO=b.TR_NO
		AND c.TR_NO = (select max(to_number(a.tr_no)) from edi_fwb a where a.awb_no = #awbNo# and a.AWB_DATE = to_date(#awbDate#,'DDMONYY'))
	</select>

	<select id="viewEAWBMSID170C"  parameterClass="cargo.cms.imprt.report.bo.EAWBPrintRept_BO" resultClass="cargo.cms.imprt.report.bo.EAWBPrintRept_BO">
		SELECT 
			DECODE(b.OTH_CHRG_C1||b.OTH_ENTLEMT_C1,null,'',b.OTH_PC_I1 ||' '|| b.OTH_CHRG_C1||' '||b.OTH_ENTLEMT_C1||' :'||trim(to_char(nvl(b.OTH_CHRG1,0),'9999990.00'))) ||' ' ||
			DECODE(b.OTH_CHRG_C2||b.OTH_ENTLEMT_C2,null,'',b.OTH_PC_I2 ||' '|| b.OTH_CHRG_C2||' '||b.OTH_ENTLEMT_C2||' :'||trim(to_char(nvl(b.OTH_CHRG2,0),'9999990.00'))) ||' ' ||
			DECODE(b.OTH_CHRG_C3||b.OTH_ENTLEMT_C3,null,'',b.OTH_PC_I3 ||' '|| b.OTH_CHRG_C3||' '||b.OTH_ENTLEMT_C3||' :'||trim(to_char(nvl(b.OTH_CHRG3,0),'9999990.00'))) as othPcI1
		FROM  EDI_FWB c,EDI_FWB_OTH_CHARGES b
		WHERE c.TR_NO=b.TR_NO
		AND c.TR_NO = (select max(to_number(a.tr_no)) from edi_fwb a where a.awb_no = #awbNo# and a.AWB_DATE = to_date(#awbDate#,'DDMONYY'))
	</select>
	
	<select id="viewEAWBMSID170D"  parameterClass="cargo.cms.imprt.report.bo.EAWBPrintRept_BO" resultClass="cargo.cms.imprt.report.bo.EAWBPrintRept_BO">	
		SELECT 
		 EDI_FWB_ACCT_INFO.ACC_INFO_IND accInfoInd,
		 EDI_FWB_ACCT_INFO.ACC_INFO as accInformation
		 FROM  EDI_FWB,EDI_FWB_ACCT_INFO 
		 WHERE 
		 EDI_FWB_ACCT_INFO.TR_NO = EDI_FWB.TR_NO
		 AND EDI_FWB.TR_NO = (select max(to_number(a.tr_no)) from edi_fwb a where a.awb_no = #awbNo# and a.AWB_DATE = to_date(#awbDate#,'DDMONYY'))
	</select>
		
	<select id="viewEAWBMSID170F"  parameterClass="cargo.cms.imprt.report.bo.EAWBPrintRept_BO" resultClass="cargo.cms.imprt.report.bo.EAWBPrintRept_BO">
	     select
			 sum(R.RATE_PCS)as totPcs,
			 to_char(nvl(sum(R.RATE_GWT),0),'99999990.0') as totWgt,
			 to_char(nvl(sum(R.RATE_CHRG_A),0),'999999999990.00') as totChrgs
		  FROM EDI_FWB,EDI_FWB_CHR_RATE R 
		 WHERE R.TR_NO=EDI_FWB.TR_NO
		 AND EDI_FWB.TR_NO = (select max(to_number(a.tr_no)) from edi_fwb a where a.awb_no = #awbNo# and a.AWB_DATE = to_date(#awbDate#,'DDMONYY'))
	</select>
	
	<select id="getTnAgentList" parameterClass="cargo.cms.imprt.bo.TnNotificationBO" resultClass="cargo.cms.imprt.bo.TnNotificationBO">
		<![CDATA[
			select sum(countShp) as noOfShipment,agentName,agentCode from ( 		
		SELECT  count(a.awb_no) as countShp,b.appntd_agent agentName,C.code agentCode 
				FROM IMP_CAR_SHP A
        join IMP_CAR_AWB B on A.AWB_NO          = B.AWB_NO AND A.AWB_DATE          = B.AWB_DATE
        JOIN AWB AWB ON AWB.AWB_NO = A.AWB_NO AND AWB.AWB_DATE = A.AWB_DATE AND AWB.AWB_TYPE='I'
        LEFT join cust_company C on UPPER(C.CODE_DESC) IN UPPER(b.appntd_agent)
        join FLT_OPR FLT on FLT.FLT_KEY = A.FLT_KEY 	AND FLT.SCH_DATE = A.FLT_DATE AND FLT.FLT_TYPE='A'
				WHERE 
				NVL(a.recd_pcs,0)  > 0
				AND NVL(a.recd_wt,0)   > 0
        		AND NVL(FLT.ACT_DATE,FLT.SCH_DATE) between TO_DATE(#fltDateFrom#,'DDMONYY') and TO_DATE(#fltDateTo#,'DDMONYY')
        		AND EXISTS (SELECT NULL FROM AWB_INVENTORY INV WHERE INV.AWB_NO = A.AWB_NO AND INV.AWB_DATE=A.AWB_DATE AND INV.FLT_KEY=A.FLT_KEY AND INV.FLT_DATE=A.FLT_DATE AND A.FLT_TYPE='I' AND INV.LOCN_PCS > 0)
             	AND NOT EXISTS (SELECT NULL FROM IMP_SRF T1,IMP_SRF_FLT T2 WHERE  T2.SRF_NO = T1.SRF_NO AND T1.AWB_NO = A.AWB_NO AND T1.AWB_DATE=A.AWB_DATE AND T2.FLT_KEY=A.FLT_KEY AND T2.FLT_DATE = A.FLT_DATE 
            	AND ((T1.STATUS  ='ISSUED' AND sysdate  < T1.srf_expy_date)
                  OR EXISTS (SELECT NULL FROM imp_srf_awb_inventory WHERE srf_no = T1.SRF_NO AND T1.STATUS = 'ISSUED' AND dlv_pcs  > 0) 
                  OR T1.SRF_NO in (select SRF_NO from IMP_CDIF where VOID_USER is null )))
				]]>
				<isNotEmpty property="priority">
				AND NVL(c.priority,'NORMAL')= #priority#
				</isNotEmpty>
				<isNotEmpty property="dayBefore">
				<![CDATA[
				 AND (FLT.ACT_DATE is not null OR FLT.SCH_DATE IS NOT NULL) and (TO_CHAR(TO_DATE(sysdate,'DD-MON-YY') - TO_DATE(NVL(FLT.ACT_DATE,FLT.SCH_DATE),'DD-MON-YY')) <= #dayBefore#)
				]]>
				</isNotEmpty>
				<isNotEmpty property="carrier">
					 AND UPPER(A.carr_code) = UPPER(#carrier#)
				</isNotEmpty>
				<isNotEmpty property="agentName">
					 AND UPPER(b.appntd_agent) =  UPPER(#agentName#)
				</isNotEmpty>
				<isNotEmpty property="agentCode">
					 AND C.code = #agentCode#
				</isNotEmpty>
				<isNotEmpty property="status">
				AND #status# IN  NVL((SELECT CUSTINTE.STATUS FROM ((SELECT STATUS FROM CUST_INTERACTION WHERE AWB_NO = B.AWB_NO AND AWB_DATE=B.AWB_DATE ORDER BY CR_DATE DESC)) CUSTINTE WHERE ROWNUM=1),'1 New')
				</isNotEmpty>
				
				<isEqual property="isanytick" compareValue="Y" prepend="AND" >
				 	( 1=2
				</isEqual>
				<isEqual property="isDg" compareValue="Y">
				OR (B.SPL_CODE1 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_DANG' 
							  AND CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE2 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_DANG' 
								  AND CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE3 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_DANG' 
								  AND CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE4 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_DANG' 
								  AND CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE5 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_DANG' 
								  AND CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE6 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_DANG' 
								  AND CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE7 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_DANG' 
								  AND CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE8 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_DANG' 
								  AND CARR_CODE=A.CARR_CODE)
				or B.SPL_CODE9 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_DANG' 
								  AND CARR_CODE=A.CARR_CODE) 
				)
				</isEqual>
				<isEqual property="isSpecialCargo" compareValue="Y">
				OR (B.SPL_CODE1 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_SPL_CARGO' 
							  AND CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE2 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_SPL_CARGO' 
								  AND CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE3 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_SPL_CARGO' 
								  AND CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE4 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_SPL_CARGO' 
								  AND CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE5 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_SPL_CARGO' 
								  AND CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE6 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_SPL_CARGO' 
								  AND CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE7 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_SPL_CARGO' 
								  AND CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE8 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_SPL_CARGO' 
								  AND CARR_CODE=A.CARR_CODE)
				or B.SPL_CODE9 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_SPL_CARGO' 
								  AND CARR_CODE=A.CARR_CODE)
				)
				</isEqual>
				<isEqual property="isVal" compareValue="Y">
				OR (B.SPL_CODE1 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_VAL' 
							  AND CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE2 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_VAL' 
								  AND CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE3 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_VAL' 
								  AND CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE4 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_VAL' 
								  AND CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE5 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_VAL' 
								  AND CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE6 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_VAL' 
								  AND CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE7 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_VAL' 
								  AND CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE8 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_VAL' 
								  AND CARR_CODE=A.CARR_CODE)
				or B.SPL_CODE9 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_VAL' 
								  AND CARR_CODE=A.CARR_CODE) 
				)
				</isEqual>
				<isEqual property="isOthers" compareValue="Y">
				 OR (B.SPL_CODE1 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_OTHERS' 
							 and  CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE2 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_OTHERS' 
								 and  CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE3 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_OTHERS' 
								 and  CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE4 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_OTHERS' 
								 and  CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE5 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_OTHERS' 
								 and  CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE6 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_OTHERS' 
								 and  CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE7 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_OTHERS' 
								 and  CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE8 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_OTHERS' 
								 and  CARR_CODE=A.CARR_CODE)
				or B.SPL_CODE9 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_OTHERS' 
								 and  CARR_CODE=A.CARR_CODE) 
				)
				</isEqual>
				<isEqual property="isanytick" compareValue="Y" >
				)
				</isEqual>
				group by a.awb_no,a.awb_date,b.appntd_agent,C.code) group by agentName,agentCode
		</select>
		
		<select id="getTnEmailFaxDetails" parameterClass="java.lang.String" resultClass="cargo.cms.imprt.bo.TnNotificationBO">
		select CUST_NO AS customerNo,EMAIL1 AS email1,EMAIL2 AS email2,EMAIL3 AS email3,EMAIL4 AS email4,EMAIL5 AS email5,FAX1 AS fax1,FAX2 AS fax2,FAX3 AS fax3,FAX4 AS fax4,FAX5 AS fax5 from cust_contact WHERE CUST_NO IN (SELECT CODE FROM CUST_COMPANY WHERE CODE_DESC = #PARAM#) AND CONTACT_TYPE = 'ECA' AND ROWNUM=1
		</select>
		
		<select id="getTnShpListForInv" parameterClass="cargo.cms.imprt.bo.TnNotificationBO" resultClass="cargo.cms.imprt.bo.TnNotificationBO">
		<![CDATA[
				SELECT * FROM (
				 SELECT  NVL((SELECT A.STATUS FROM ((SELECT STATUS FROM CUST_INTERACTION WHERE AWB_NO = B.AWB_NO AND AWB_DATE=B.AWB_DATE ORDER BY CR_DATE DESC)) A WHERE ROWNUM=1),'1 New') AS status,
				  a.flt_key AS printfltKey,
				  TO_CHAR(a.flt_date,'DDMONYY') AS printfltDate,
				  a.awb_no awbNo,
				  to_char(a.awb_date, 'DDMONYY') awbDate,
				  SUBSTR(a.awb_no,0,3)||'-'||SUBSTR(a.awb_no,4) awbNoDisplay,
				  a.recd_pcs||'/'||a.recd_wt pcsWts,
				  a.manifest_pcs||'/'||a.manifest_wt manPcsWts,
				  NVL(
				  (SELECT cc_code
				  FROM V_CST_IMP_CC_CODE_ALL WHERE flt_key=a.flt_key
				  AND flt_date =a.flt_date AND awb_no=a.awb_no AND awb_date=a.awb_date
				  AND rownum=1
				  ),'N/A') ccCode,
				  nvl(b.csgne_name,(select csgne_name from edi_fwb where awb_no=a.awb_no and awb_date=a.awb_date AND tr_no = ( SELECT MAX(tr_no) FROM EDI_FWB WHERE AWB_NO = A.AWB_NO AND AWB_DATE = A.AWB_DATE))) consignee,
				  nvl(b.appntd_agent,(select agent_name from edi_fwb where awb_no=a.awb_no and awb_date=a.awb_date AND tr_no = ( SELECT MAX(tr_no) FROM EDI_FWB WHERE AWB_NO = A.AWB_NO AND AWB_DATE = A.AWB_DATE))) appointedAgent,
				  b.appntd_agent agentName,
				  C.code agentCode,
				  NVL(decode((SELECT COUNT(*) FROM CUST_UNDERTAKING CU WHERE 
	                               CU.AGENT_CODE = (SELECT AGENT_CODE FROM AWB WHERE AWB_DATE=a.awb_date AND AWB_NO=a.awb_no) AND 
	                               CU.CARR_CODE = (SELECT CARR_CODE FROM AWB WHERE AWB_DATE=a.awb_date AND AWB_NO=a.awb_no) AND 
	                               a.AWB_DATE BETWEEN CU.EFF_FROM AND CU.EFF_TO),0,'N','Y'),'N') licenseUnder,
				  (SELECT COUNT(hawb_no) FROM edi_fhl_hawb WHERE tr_no IN (SELECT tr_no FROM edi_fhl WHERE awb_no=a.awb_no AND awb_date=a.awb_date)) fhlInd,
				  TO_CHAR(a.flt_date,'DD/MM/YYYY')||' '|| NVL(PKG_COMMON.get_flt_ata(a.flt_key, a.flt_date, 'A', 'DD'),pkg_common.get_flt_sta(a.flt_key, a.flt_date,'A')) fltDateTime,
				  (DECODE(NVL(FLT.ACT_DATE,FLT.SCH_DATE),'','',NULL,'',TO_CHAR(TO_DATE(sysdate,'DD-MON-YY') - TO_DATE(NVL(FLT.ACT_DATE,FLT.SCH_DATE),'DD-MON-YY')))) dayBefore,
				   NVL(B.CHRG_MODE,NVL((SELECT (CASE WHEN col_total_wt_amt IS NOT NULL AND col_total_wt_amt > 0 THEN 'C' ELSE CASE WHEN ppd_total_wt_amt IS NOT NULL AND ppd_total_wt_amt > 0 THEN 'P' ELSE 'N/A' END END) FROM EDI_FWB WHERE AWB_NO =A.AWB_NO AND AWB_DATE=A.AWB_DATE AND ROWNUM=1),'N/A')) chargMode,
				  '0' totalCharg,
				  (SELECT  decode(count(1),0,'N/A','Y') FROM edi_fwb_contact where tr_no in (SELECT MAX(tr_no) FROM edi_fwb WHERE awb_no=a.awb_no AND awb_date=a.awb_date) and cont_type='CNE' and cont_id='TE') telFWBInd,
				  (SELECT  NVL(STRAGG(STRINGDELIM(cont_name, ',')),'N/A') FROM edi_fwb_contact where tr_no in (select MAX(tr_no) from edi_fwb where awb_no=a.awb_no and awb_date=a.awb_date) and cont_type='CNE' and cont_id='TE') telFWB,
				  decode((select count(1) from cust_contact_dtl where cust_no=c.code and contact_type='ECA'),0,'N/A','Y') telWOS,
				  (SELECT  decode(count(1),0,'N/A','Y') FROM edi_fwb_contact where tr_no in (SELECT MAX(tr_no) FROM edi_fwb WHERE awb_no=a.awb_no AND awb_date=a.awb_date) and cont_type='CNE' and cont_id='FX') faxFWBInd,
				  (SELECT  NVL(STRAGG(STRINGDELIM(cont_name, ',')),'N/A') FROM edi_fwb_contact where tr_no in (select MAX(tr_no) from edi_fwb where awb_no=a.awb_no and awb_date=a.awb_date) and cont_type='CNE' and cont_id='FX') faxFWB,
				  decode((select count(1) from cust_contact where cust_no=c.code and contact_type='ECA' AND (fax1 is not null or fax2 is not null or fax3 is not null or fax4 is not null or fax5 is not null)),0,'N/A','Y') faxWOS,
				  NVL(A.CAR_CREATED,'N') as carInd,
				  decode((select count(1) from edi_fwb where awb_no=a.awb_no and awb_date=a.awb_date),0,'N','Y') fwbInd,
				  A.carr_code awbCarrier
				FROM IMP_CAR_SHP A
        join IMP_CAR_AWB B on A.AWB_NO          = B.AWB_NO AND A.AWB_DATE          = B.AWB_DATE
        JOIN AWB AWB ON AWB.AWB_NO = A.AWB_NO AND AWB.AWB_DATE = A.AWB_DATE AND AWB.AWB_TYPE='I'
        LEFT join cust_company C on UPPER(C.CODE_DESC) IN UPPER(b.appntd_agent)
        join FLT_OPR FLT on FLT.FLT_KEY = A.FLT_KEY 	AND FLT.SCH_DATE = A.FLT_DATE AND FLT.FLT_TYPE='A'
				WHERE 
				NVL(a.recd_pcs,0)  > 0
				AND NVL(a.recd_wt,0)   > 0
        		AND NVL(FLT.ACT_DATE,FLT.SCH_DATE) between TO_DATE(#fltDateFrom#,'DDMONYY') and TO_DATE(#fltDateTo#,'DDMONYY')
        		AND EXISTS (SELECT NULL FROM AWB_INVENTORY INV WHERE INV.AWB_NO = A.AWB_NO AND INV.AWB_DATE=A.AWB_DATE AND INV.FLT_KEY=A.FLT_KEY AND INV.FLT_DATE=A.FLT_DATE AND A.FLT_TYPE='I' AND INV.LOCN_PCS > 0)
           		AND NOT EXISTS (SELECT NULL FROM IMP_SRF T1,IMP_SRF_FLT T2 WHERE  T2.SRF_NO = T1.SRF_NO AND T1.AWB_NO = A.AWB_NO AND T1.AWB_DATE=A.AWB_DATE AND T2.FLT_KEY=A.FLT_KEY AND T2.FLT_DATE = A.FLT_DATE 
            	AND ((T1.STATUS  ='ISSUED' AND sysdate  < T1.srf_expy_date)
                  OR EXISTS (SELECT NULL FROM imp_srf_awb_inventory WHERE srf_no = T1.SRF_NO AND T1.STATUS = 'ISSUED' AND dlv_pcs  > 0) 
                  OR T1.SRF_NO in (select SRF_NO from IMP_CDIF where VOID_USER is null )))
				]]>
				<isNotEmpty property="priority">
				AND NVL(c.priority,'NORMAL')= #priority#
				</isNotEmpty>
				<isNotEmpty property="dayBefore">
				<![CDATA[
				 AND (FLT.ACT_DATE is not null OR FLT.SCH_DATE IS NOT NULL) and (TO_CHAR(TO_DATE(sysdate,'DD-MON-YY') - TO_DATE(NVL(FLT.ACT_DATE,FLT.SCH_DATE),'DD-MON-YY')) <= #dayBefore#)
				]]>
				</isNotEmpty>
				<isNotEmpty property="carrier">
					 AND UPPER(A.carr_code) = UPPER(#carrier#)
				</isNotEmpty>
				<isNotEmpty property="agentName">
					 AND UPPER(b.appntd_agent) =  UPPER(#agentName#)
				</isNotEmpty>
				<isNotEmpty property="agentCode">
					 AND C.code = #agentCode#
				</isNotEmpty>
				<isNotEmpty property="status">
				AND #status# IN  NVL((SELECT CUSTINTE.STATUS FROM ((SELECT STATUS FROM CUST_INTERACTION WHERE AWB_NO = B.AWB_NO AND AWB_DATE=B.AWB_DATE ORDER BY CR_DATE DESC)) CUSTINTE WHERE ROWNUM=1),'1 New')
				</isNotEmpty>
				
				<isEqual property="isanytick" compareValue="Y" prepend="AND" >
				 	(  1=2
				</isEqual>
				<isEqual property="isDg" compareValue="Y">
				OR (B.SPL_CODE1 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_DANG' 
							  AND CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE2 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_DANG' 
								  AND CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE3 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_DANG' 
								  AND CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE4 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_DANG' 
								  AND CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE5 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_DANG' 
								  AND CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE6 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_DANG' 
								  AND CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE7 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_DANG' 
								  AND CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE8 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_DANG' 
								  AND CARR_CODE=A.CARR_CODE)
				or B.SPL_CODE9 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_DANG' 
								  AND CARR_CODE=A.CARR_CODE) 
				)
				</isEqual>
				<isEqual property="isSpecialCargo" compareValue="Y">
				OR (B.SPL_CODE1 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_SPL_CARGO' 
							  AND CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE2 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_SPL_CARGO' 
								  AND CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE3 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_SPL_CARGO' 
								  AND CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE4 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_SPL_CARGO' 
								  AND CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE5 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_SPL_CARGO' 
								  AND CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE6 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_SPL_CARGO' 
								  AND CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE7 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_SPL_CARGO' 
								  AND CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE8 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_SPL_CARGO' 
								  AND CARR_CODE=A.CARR_CODE)
				or B.SPL_CODE9 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_SPL_CARGO' 
								  AND CARR_CODE=A.CARR_CODE)
				)
				</isEqual>
				<isEqual property="isVal" compareValue="Y">
				OR (B.SPL_CODE1 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_VAL' 
							  AND CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE2 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_VAL' 
								  AND CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE3 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_VAL' 
								  AND CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE4 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_VAL' 
								  AND CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE5 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_VAL' 
								  AND CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE6 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_VAL' 
								  AND CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE7 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_VAL' 
								  AND CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE8 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_VAL' 
								  AND CARR_CODE=A.CARR_CODE)
				or B.SPL_CODE9 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_VAL' 
								  AND CARR_CODE=A.CARR_CODE) 
				)
				</isEqual>
				<isEqual property="isOthers" compareValue="Y">
				 OR (B.SPL_CODE1 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_OTHERS' 
							 and  CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE2 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_OTHERS' 
								 and  CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE3 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_OTHERS' 
								 and  CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE4 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_OTHERS' 
								 and  CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE5 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_OTHERS' 
								 and  CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE6 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_OTHERS' 
								 and  CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE7 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_OTHERS' 
								 and  CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE8 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_OTHERS' 
								 and  CARR_CODE=A.CARR_CODE)
				or B.SPL_CODE9 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_OTHERS' 
								 and  CARR_CODE=A.CARR_CODE) 
				)
				</isEqual>
				<isEqual property="isanytick" compareValue="Y" >
				)
				</isEqual>
				)order by appointedAgent, status, awbNo
		</select>
		
			<select id="getTnShpListForFfm" parameterClass="cargo.cms.imprt.bo.TnNotificationBO" resultClass="cargo.cms.imprt.bo.TnNotificationBO">
				 SELECT * FROM (
				  SELECT  NVL((SELECT A.STATUS FROM ((SELECT STATUS FROM CUST_INTERACTION WHERE AWB_NO = B.AWB_NO AND AWB_DATE=B.AWB_DATE ORDER BY CR_DATE DESC)) A WHERE ROWNUM=1),'1 New') AS status,
				  a.awb_no awbNo,
				  to_char(a.awb_date, 'DDMONYY') awbDate,
				  SUBSTR(a.awb_no,0,3)||'-'||SUBSTR(a.awb_no,4) awbNoDisplay,
				   a.flt_key AS printfltKey,
				  TO_CHAR(a.flt_date,'DDMONYY') AS printfltDate,
				  a.recd_pcs||'/'||a.recd_wt pcsWts,
				  a.manifest_pcs||'/'||a.manifest_wt manPcsWts,
				  NVL(
				  (SELECT cc_code
				  FROM V_CST_IMP_CC_CODE_ALL WHERE flt_key=a.flt_key
				  AND flt_date =a.flt_date AND awb_no=a.awb_no AND awb_date=a.awb_date
				  AND rownum=1
				  ),'N/A') ccCode,
				  nvl(b.csgne_name,(select csgne_name from edi_fwb where awb_no=a.awb_no and awb_date=a.awb_date AND tr_no = ( SELECT MAX(tr_no) FROM EDI_FWB WHERE AWB_NO = A.AWB_NO AND AWB_DATE = A.AWB_DATE))) consignee,
				  nvl(b.appntd_agent,(select agent_name from edi_fwb where awb_no=a.awb_no and awb_date=a.awb_date AND tr_no = ( SELECT MAX(tr_no) FROM EDI_FWB WHERE AWB_NO = A.AWB_NO AND AWB_DATE = A.AWB_DATE))) appointedAgent,
				  b.appntd_agent agentName,
				  C.code agentCode,
				  NVL(decode((SELECT COUNT(*) FROM CUST_UNDERTAKING CU WHERE 
	                               CU.AGENT_CODE = (SELECT AGENT_CODE FROM AWB WHERE AWB_DATE=a.awb_date AND AWB_NO=a.awb_no) AND 
	                               CU.CARR_CODE = (SELECT CARR_CODE FROM AWB WHERE AWB_DATE=a.awb_date AND AWB_NO=a.awb_no) AND 
	                               a.AWB_DATE BETWEEN CU.EFF_FROM AND CU.EFF_TO),0,'N','Y'),'N') licenseUnder,
				  (SELECT COUNT(hawb_no) FROM edi_fhl_hawb WHERE tr_no IN (SELECT tr_no FROM edi_fhl WHERE awb_no=a.awb_no AND awb_date=a.awb_date AND tr_no = ( SELECT MAX(tr_no) FROM EDI_FWB WHERE AWB_NO = A.AWB_NO AND AWB_DATE = A.AWB_DATE))) fhlInd,
				  TO_CHAR(a.flt_date,'DD/MM/YYYY')||' '|| NVL(PKG_COMMON.get_flt_ata(a.flt_key, a.flt_date, 'A', 'DD'),pkg_common.get_flt_sta(a.flt_key, a.flt_date,'A')) fltDateTime,
				  'N/A' dayBefore,
				   NVL(B.CHRG_MODE,NVL((SELECT (CASE WHEN col_total_wt_amt IS NOT NULL AND col_total_wt_amt > 0 THEN 'C' ELSE CASE WHEN ppd_total_wt_amt IS NOT NULL AND ppd_total_wt_amt > 0 THEN 'P' ELSE 'N/A' END END) FROM EDI_FWB WHERE AWB_NO =A.AWB_NO AND AWB_DATE=A.AWB_DATE AND tr_no = ( SELECT MAX(tr_no) FROM EDI_FWB WHERE AWB_NO = A.AWB_NO AND AWB_DATE = A.AWB_DATE)),'N/A')) chargMode,
				  '0' totalCharg,
				  (SELECT  decode(count(1),0,'N/A','Y') FROM edi_fwb_contact where tr_no in (SELECT MAX(tr_no) FROM edi_fwb WHERE awb_no=a.awb_no AND awb_date=a.awb_date) and cont_type='CNE' and cont_id='TE') telFWBInd,
				  (SELECT  NVL(STRAGG(STRINGDELIM(cont_name, ',')),'N/A') FROM edi_fwb_contact where tr_no in (select MAX(tr_no) from edi_fwb where awb_no=a.awb_no and awb_date=a.awb_date) and cont_type='CNE' and cont_id='TE') telFWB,
				  decode((select count(1) from cust_contact_dtl where cust_no=c.code and contact_type='ECA'),0,'N/A','Y') telWOS,
				  (SELECT  decode(count(1),0,'N/A','Y') FROM edi_fwb_contact where tr_no in (SELECT MAX(tr_no) FROM edi_fwb WHERE awb_no=a.awb_no AND awb_date=a.awb_date) and cont_type='CNE' and cont_id='FX') faxFWBInd,
				  (SELECT  NVL(STRAGG(STRINGDELIM(cont_name, ',')),'N/A') FROM edi_fwb_contact where tr_no in (select MAX(tr_no) from edi_fwb where awb_no=a.awb_no and awb_date=a.awb_date) and cont_type='CNE' and cont_id='FX') faxFWB,
				  decode((select count(1) from cust_contact where cust_no=c.code and contact_type='ECA' AND (fax1 is not null or fax2 is not null or fax3 is not null or fax4 is not null or fax5 is not null)),0,'N/A','Y') faxWOS,
				  NVL(A.CAR_CREATED,'N') as carInd,
				  decode((select count(1) from edi_fwb where awb_no=a.awb_no and awb_date=a.awb_date),0,'N','Y') fwbInd,
				  A.carr_code awbCarrier
				FROM IMP_CAR_SHP A
        JOIN IMP_CAR_AWB B ON B.AWB_NO = A.AWB_NO AND B.AWB_DATE = A.AWB_DATE
        JOIN AWB AWB ON AWB.AWB_NO = A.AWB_NO AND AWB.AWB_DATE = A.AWB_DATE AND AWB.AWB_TYPE='I'
        LEFT JOIN cust_company C ON UPPER(C.CODE_DESC) IN UPPER(b.appntd_agent)
        join FLT_OPR FLT on FLT.FLT_KEY = A.FLT_KEY 	AND FLT.SCH_DATE = A.FLT_DATE AND FLT.FLT_TYPE='A'        
				WHERE NVL(a.recd_pcs,0)   = 0
				AND NVL(a.recd_wt,0)    = 0
			    and exists (SELECT NULL FROM edi_ffm_msg msg,edi_ffm_shp shp where  msg.ffm_status = 'P'  and msg.flt_key=a.flt_key and msg.flt_date=a.flt_date
                and shp.tr_no= msg.tr_no  AND shp.awb_no=a.awb_no and shp.awb_date = a.awb_date)
		        AND NVL(a.cir_wt_type,'SP') &lt;&gt; 'SL'
				AND NVL(FLT.ACT_DATE,FLT.SCH_DATE) between TO_DATE(#ffmFltDateFrom#,'DDMONYY') and TO_DATE(#ffmFltDateTo#,'DDMONYY')
		        AND ((B.SPL_CODE1 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_DANG' 
							 and  CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE2 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_DANG' 
								 and  CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE3 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_DANG' 
								 and  CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE4 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_DANG' 
								 and  CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE5 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_DANG' 
								 and  CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE6 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_DANG' 
								 and  CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE7 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_DANG' 
								 and  CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE8 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_DANG' 
								 and  CARR_CODE=A.CARR_CODE)
				or B.SPL_CODE9 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_DANG' 
								 and  CARR_CODE=A.CARR_CODE) 
				)
				OR (B.SPL_CODE1 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_SPL_CARGO' 
							 and  CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE2 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_SPL_CARGO' 
								 and  CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE3 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_SPL_CARGO' 
								 and  CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE4 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_SPL_CARGO' 
								 and  CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE5 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_SPL_CARGO' 
								 and  CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE6 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_SPL_CARGO' 
								 and  CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE7 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_SPL_CARGO' 
								 and  CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE8 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_SPL_CARGO' 
								 and  CARR_CODE=A.CARR_CODE)
				or B.SPL_CODE9 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_SPL_CARGO' 
								 and  CARR_CODE=A.CARR_CODE) 
   		        )
				OR (B.SPL_CODE1 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_VAL' 
							 and CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE2 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_VAL' 
								 and  CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE3 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_VAL' 
								 and  CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE4 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_VAL' 
								 and  CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE5 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_VAL' 
								 and  CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE6 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_VAL' 
								 and  CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE7 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_VAL' 
								 and  CARR_CODE=A.CARR_CODE) 
				or B.SPL_CODE8 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_VAL' 
								 and  CARR_CODE=A.CARR_CODE)
				or B.SPL_CODE9 in (Select SPL_CODE from CUST_AIRL_SPL_CODE where SPL_TYPE = 'SPL_VAL' 
								 and  CARR_CODE=A.CARR_CODE) 
				))
				<isNotEmpty property="ffmCarrier">
					 AND UPPER(A.carr_code) = UPPER(#ffmCarrier#)
				</isNotEmpty>
				<isNotEmpty property="ffmAgentName">
					 AND UPPER(b.appntd_agent) =  UPPER(#ffmAgentName#)
				</isNotEmpty>
				<isNotEmpty property="ffmAgentCode">
					 AND C.code = #ffmAgentCode#
				</isNotEmpty>
				<isNotEmpty property="ffmStatus">
				AND #ffmStatus# IN  NVL((SELECT CUSTINTE.STATUS FROM ((SELECT STATUS FROM CUST_INTERACTION WHERE AWB_NO = B.AWB_NO AND AWB_DATE=B.AWB_DATE ORDER BY CR_DATE DESC)) CUSTINTE WHERE ROWNUM=1),'1 New')
				</isNotEmpty>
				) order by appointedAgent, status, awbNo
		</select>
		
		<select id="getTnShpListStyle" parameterClass="cargo.cms.imprt.bo.TnNotificationBO" resultClass="cargo.cms.imprt.bo.TnNotificationBO">
				select code as status,code_desc_spl as statusColour from mast_code_dtl where group_code=38 and code_type='STATUS' and code_desc_spl is not null
		</select>
		
	<select id="getEAWBRemarks" parameterClass="java.lang.String" resultClass="java.util.HashMap">
				Select remark as RMK From INTL_CHK_RESULT where Function_Code = 'EAWB' and Awb_No = #awbNumber#
		</select>
	
		<select id="flightCloseCount"  parameterClass="map"  resultClass="java.lang.String">
			SELECT  COUNT(1)
			FROM   FLT_OPR_EVENTS 
			WHERE  FLT_KEY	= #FLTKEY# 
				   AND SCH_DATE	= TO_DATE(#FLTDATE#,'DDMONYY') 
				   AND FLT_TYPE = 'A'
				   AND FLT_CLS_DATE IS NOT NULL
		 </select>
		 
		 <select id="isCustExist"  parameterClass="cargo.cms.imprt.bo.TnNotificationBO"  resultClass="java.lang.String">
			SELECT decode(count(1),0,'N','Y') FROM CUST_COMPANY WHERE CODE_DESC = #agentName#
		 </select>


	<!-- Transform AWB Start-->
	<select  id="get_awb_tag_list" parameterClass="cargo.cms.imprt.bo.TransformAWBBO" resultClass="cargo.cms.imprt.bo.TransformAWBBO">
		SELECT DISTINCT
			TO_CHAR(mail.AWB_DATE,'DDMONYY') oldAwbDate,
			mail.CATALOG catalog,
		 	mail.TAG_NO tagNo, 
		 	mail.ACT_PCS actPcs, 
			mail.ACT_WT actWt,
			mail.EST_PCS estPcs,
			mail.EST_WT estWt,			
		 	mail.FLT_TYPE fltType,
		 	mail.FLT_KEY fltKey,	
		 	TO_CHAR(mail.FLT_DATE,'DDMONYY') fltDate,
			mail.ORIG orig, 
			mail.DEST dest, 
			inventory.loc_code locn, 
			inventory.LSP_NO lspNo,
			inventory.ULD_KEY uldKey, 
			mail.BD_ULD_KEY bduldno,			
			mail.DAM_IND damInd, 
			mail.RMK rmk, 		
			mail.LM_USER_ID lmUserId,
			mail.LM_DATE lmDate,
			mail.seq_no mailSeq,
			inventory.LOC_CODE invLocn, 
			inventory.ULD_KEY invUldKey,
			inventory.LSP_NO invLspNo,
			inventory.SEQ_NO invSeq 
		 FROM 
			IMP_XPS_OBC_MAIL mail
			LEFT OUTER JOIN IMP_HAWB_STRG_DTL st ON st.AWB_NO = mail.AWB_NO AND st.AWB_DATE = mail.AWB_DATE AND st.HAWB_NO = mail.TAG_NO AND st.HAWB_BRKDN_PCS > 0
			INNER JOIN AWB_INVENTORY inventory ON inventory.AWB_NO = mail.AWB_NO AND inventory.AWB_DATE = mail.AWB_DATE
			INNER JOIN HAWB_INVENTORY hinventory ON inventory.SEQ_NO = hinventory.SEQ_NO AND hinventory.HAWB_NO = mail.TAG_NO
		WHERE
			mail.AWB_NO = #oldAwbNo# AND mail.AWB_DATE=to_date(PKG_COMMON.GET_AWB_DATE(mail.AWB_NO,''),'DDMONYY')
		ORDER BY
			tagNo asc
	</select>
	
	<select  id="check_awb" parameterClass="cargo.cms.imprt.bo.TransformAWBBO" resultClass="cargo.cms.imprt.bo.TransformAWBBO">
		SELECT COUNT(AWB_NO) awbNo FROM AWB WHERE AWB_NO = #awbNo# AND AWB_CLOSED_YN = 'N'
	</select>
	
	<select  id="check_old_awb_pman" parameterClass="cargo.cms.imprt.bo.TransformAWBBO" resultClass="cargo.cms.imprt.bo.TransformAWBBO">
		SELECT COUNT(AWB_NO) oldAwbNo FROM
		(
			SELECT epa.AWB_NO FROM EXP_PMANIFEST_AWB epa WHERE epa.AWB_NO=#oldAwbNo# AND epa.AWB_DATE=to_date(#oldAwbDate#,'DDMONYY')
			UNION
			SELECT ept.AWB_NO FROM EXP_PMAN_TARMAC_AWB ept WHERE ept.AWB_NO=#oldAwbNo# AND ept.AWB_DATE=to_date(#oldAwbDate#,'DDMONYY')
		)
	</select>
	
	<select  id="check_old_awb_offload" parameterClass="cargo.cms.imprt.bo.TransformAWBBO" resultClass="cargo.cms.imprt.bo.TransformAWBBO">
		SELECT COUNT(AWB_NO) oldAwbNo FROM EXP_OFFLOAD_ULD_AWB WHERE CONFIRMED_YN = 'Y' AND AWB_NO=#oldAwbNo# AND AWB_DATE=to_date(#oldAwbDate#,'DDMONYY')
	</select>
	
	<select  id="check_old_awb_partialct" parameterClass="cargo.cms.imprt.bo.TransformAWBBO" resultClass="cargo.cms.imprt.bo.TransformAWBBO">
		SELECT COUNT(itd.AWB_NO) oldAwbNo FROM IMP_TRM_DTL itd
		INNER JOIN IMP_TRM_HD ith ON ith.TRM_NO = itd.TRM_NO
		WHERE itd.AWB_NO = #oldAwbNo# AND itd.AWB_DATE = to_date(#oldAwbDate#,'DDMONYY') AND ith.VOID_DATE IS NULL
	</select>
	
	<select  id="check_resdit_tag_old_awb" parameterClass="cargo.cms.imprt.bo.TransformAWBBO" resultClass="cargo.cms.imprt.bo.TransformAWBBO">
		SELECT COUNT(ertd.TAG_NO) tagNo FROM EDI_RESDIT_TAG_DTL ertd
        INNER JOIN EDI_RESDIT_AWB_DTL erad ON ertd.TR_AWB_NO = erad.TR_AWB_NO
        WHERE ertd.TAG_NO = #tagNo# AND erad.AWB_NO = #oldAwbNo# AND erad.AWB_DATE = to_date(#oldAwbDate#,'DDMONYY')
	</select>
	
	<select  id="check_cardit_new_awb" parameterClass="cargo.cms.imprt.bo.TransformAWBBO" resultClass="cargo.cms.imprt.bo.TransformAWBBO">
		SELECT COUNT(ech.AWB_NO) awbNo FROM EDI_CARDIT_HD ech WHERE ech.AWB_NO = #awbNo# AND ech.AWB_DATE = to_date(#awbDate#,'DDMONYY')
	</select>
	
	<select  id="check_tag_in_cardit" parameterClass="cargo.cms.imprt.bo.TransformAWBBO" resultClass="cargo.cms.imprt.bo.TransformAWBBO">
		SELECT COUNT(ectd.TAG_NO) tagNo FROM EDI_CARDIT_TAG_DTL ectd
        INNER JOIN EDI_CARDIT_HD ech ON ech.TR_NO = ectd.TR_NO AND
        (ech.AWB_NO = #oldAwbNo# AND ech.AWB_DATE = to_date(#oldAwbDate#,'DDMONYY')) 
        OR (ech.AWB_NO = #awbNo# AND ech.AWB_DATE = to_date(#awbDate#,'DDMONYY')) 
		WHERE ectd.TAG_NO=#tagNo#
	</select>
	
	<select  id="get_new_awb_tag_orig_dest" parameterClass="cargo.cms.imprt.bo.TransformAWBBO" resultClass="cargo.cms.imprt.bo.TransformAWBBO">
		 SELECT ORIG||'-'||DEST||'-'||TO_CHAR(AWB_DATE,'DDMONYY') awbOrigin from AWB WHERE AWB_NO=#awbNo# AND AWB_CLOSED_YN='N'
	</select>
	
	<update id="update_tag_to_new_awb_cardit" parameterClass="cargo.cms.imprt.bo.TransformAWBBO">
		UPDATE
        EDI_CARDIT_TAG_DTL
        SET 
        TR_NO=(SELECT edi.TR_NO FROM EDI_CARDIT_HD edi WHERE edi.AWB_NO = #awbNo# AND edi.AWB_DATE = to_date(#awbDate#,'DDMONYY')), LM_USER_ID = #lmUserId#, LM_DATE = SYSDATE
        WHERE TR_NO=(SELECT edi.TR_NO FROM EDI_CARDIT_HD edi WHERE edi.AWB_NO = #oldAwbNo# AND edi.AWB_DATE = to_date(#oldAwbDate#,'DDMONYY')) AND TAG_NO = #tagNo#
	</update>
	
	<insert id="insert_tag_to_new_awb_cardit" parameterClass="cargo.cms.imprt.bo.TransformAWBBO">
		Insert INTO EDI_CARDIT_TAG_DTL (TR_NO,DOC_LINE_NO,TAG_NO,TAG_WT,CR_USER_ID,
		CR_DATE,LM_USER_ID,LM_DATE) VALUES ((SELECT edi.TR_NO FROM EDI_CARDIT_HD edi WHERE edi.AWB_NO = #awbNo# AND AWB_DATE = to_date(#awbDate#,'DDMONYY')),EDI_CARDIT_DOC_HD_SEQ.NEXTVAL,
		#tagNo#, #actWt#,
		#lmUserId#, SYSDATE, #lmUserId#, SYSDATE)
	</insert>
	
	<update id="close_awb" parameterClass="cargo.cms.imprt.bo.TransformAWBBO">
		UPDATE AWB 
		SET AWB_CLOSED_YN = 'Y',LM_DATE  = SYSDATE,LM_USER_ID = #lmUserId#
        WHERE AWB_NO=#oldAwbNo# AND AWB_DATE = to_date(#oldAwbDate#,'DDMONYY') AND PCS = 0 AND WT = 0
	</update>
	
	<update id="close_pawb" parameterClass="cargo.cms.imprt.bo.TransformAWBBO">
		UPDATE AWB 
		SET AWB_CLOSED_YN = 'Y',LM_DATE  = SYSDATE,LM_USER_ID = #lmUserId#
        WHERE AWB_NO=#oldAwbNo# AND AWB_DATE = to_date(#oldAwbDate#,'DDMONYY') 
        AND not Exists (select null from IMP_XPS_OBC_MAIL where AWB_NO=#oldAwbNo# AND AWB_DATE = to_date(#oldAwbDate#,'DDMONYY') )
	</update>
	
	<delete id="delete_old_awb_cardit" parameterClass="cargo.cms.imprt.bo.TransformAWBBO">
		DELETE FROM (SELECT * FROM EDI_CARDIT_TAG_DTL ect
  		INNER JOIN EDI_CARDIT_HD ech ON ech.TR_NO = ect.TR_NO
 		WHERE ech.AWB_NO = #oldAwbNo# AND ech.AWB_DATE = to_date(#oldAwbDate#,'DDMONYY') AND ect.TAG_NO = #tagNo#)
	</delete>
	
	<select id = "getAWBDetailsforAcceptTransferCargo" parameterClass="java.lang.String"  resultClass="cargo.cms.imprt.bo.TransformAWBBO">
	select distinct * from(
SELECT HD.AWB_NO oldAwbNo,
  TO_CHAR(HD.AWB_DATE,'DDMONYY') oldAwbDate,
  HD.DUM_FLT_KEY fltKey,
  TO_CHAR(HD.DUM_FLT_DATE,'DDMONYY') fltDate,
  INV.SEQ_NO invSeq,
  hawb.HAWB_NO tagNo,
  inv.locn_pcs actPcs,
  TRIM(TO_CHAR(NVL(INV.locn_wt,0), '9999999.9')) actWt,
  INV.uld_key invUldKey,
  INV.lsp_no invLspNo
FROM TRF_ACCEPT_HD HD
JOIN TRF_ACCEPT_HAWB HAWB
ON HAWB.TRF_NO = HD.TRF_NO
JOIN AWB_INVENTORY INV
ON INV.AWB_NO    = HD.AWB_NO
AND INV.AWB_DATE = HD.AWB_DATE
LEFT JOIN HAWB_INVENTORY HAWBINV
ON HAWBINV.SEQ_NO = INV.SEQ_NO
WHERE HD.TRF_NO   = #PARAM# and HAWBINV.HAWB_NO is null
union all
SELECT HD.AWB_NO oldAwbNo,TO_CHAR(HD.AWB_DATE,'DDMONYY') oldAwbDate,HD.DUM_FLT_KEY fltKey,TO_CHAR(HD.DUM_FLT_DATE,'DDMONYY') fltDate,
INV.SEQ_NO invSeq,HAWBINV.HAWB_NO tagNo,hawbinv.strg_pcs actPcs,TRIM(TO_CHAR(NVL(hawbinv.strg_wt,0), '9999999.9')) actWt,
INV.uld_key invUldKey,INV.lsp_no invLspNo FROM TRF_ACCEPT_HD HD,TRF_ACCEPT_HAWB HAWB,AWB_INVENTORY INV,HAWB_INVENTORY HAWBINV 
	WHERE HAWB.TRF_NO = HD.TRF_NO
	AND INV.AWB_NO = HD.AWB_NO
	AND INV.AWB_DATE = HD.AWB_DATE
	AND HAWBINV.SEQ_NO = INV.SEQ_NO
	AND HAWBINV.HAWB_NO = HAWB.HAWB_NO
	AND HD.TRF_NO=#PARAM# and HAWBINV.HAWB_NO is not null)
	</select>
	
	<update id="update_hawb_inventory_accepttranscargo" parameterClass="cargo.cms.imprt.bo.TransformAWBBO">
	UPDATE HAWB_INVENTORY HAWB SET HAWB.STRG_PCS=HAWB.STRG_PCS - #actPcs#,HAWB.STRG_WT=HAWB.STRG_WT-#actWt# where SEQ_NO=#invSeq# and HAWB_NO=#tagNo# 
	</update>
	<delete id="delete_hawb_inventory_accepttranscargo" parameterClass="cargo.cms.imprt.bo.TransformAWBBO">
	<![CDATA[
		DELETE FROM 
		(
		  SELECT * FROM HAWB_INVENTORY hi
		  INNER JOIN AWB_INVENTORY ai ON ai.SEQ_NO = hi.SEQ_NO
		  WHERE hi.SEQ_NO = #invSeq# AND hi.HAWB_NO = #tagNo# and hi.STRG_PCS <=0
		)
		]]>
	</delete>
	<update id="updateHawbStrgDummyAcceptTransfercargo" parameterClass="cargo.cms.imprt.bo.TransformAWBBO">
		UPDATE IMP_HAWB_STRG_DTL
		SET HAWB_BRKDN_PCS = HAWB_BRKDN_PCS - #actPcs#,HAWB_BRKDN_WT = HAWB_BRKDN_WT - #actWt#,
		HAWB_PCS = HAWB_PCS - #actPcs#,HAWB_WT = HAWB_WT - #actWt#
		WHERE AWB_NO = #oldAwbNo# AND AWB_DATE = to_date(#oldAwbDate#,'DDMONYY') AND HAWB_NO = #tagNo# and flt_key=#fltKey# and flt_date=#fltDate# and flt_type='I'
	</update>
	<update id="updatePawbHawbStrgDummyAcceptTransfercargo" parameterClass="cargo.cms.imprt.bo.TransformAWBBO">
		UPDATE IMP_HAWB_STRG_DTL
		SET HAWB_BRKDN_PCS = HAWB_BRKDN_PCS - #actPcs#,HAWB_BRKDN_WT = HAWB_BRKDN_WT - #actWt#
		WHERE AWB_NO = #oldAwbNo# AND AWB_DATE = to_date(#oldAwbDate#,'DDMONYY') AND HAWB_NO = #tagNo# and flt_key=#fltKey# and flt_date=#fltDate# and flt_type='I'
	</update>
	<delete id="deleteteHawbStrgDummyAcceptTransfercargo" parameterClass="cargo.cms.imprt.bo.TransformAWBBO">
	<![CDATA[
		delete from IMP_HAWB_STRG_DTL where awb_no=#oldAwbNo# and awb_date=to_date(#oldAwbDate#,'DDMONYY') and flt_key=#fltKey# and flt_date=#fltDate# and flt_type='I' and hawb_no=#tagNo# and (hawb_pcs is null or hawb_pcs <=0)
		]]>
	</delete>
	<update id="update_accept_car_shpDummmy" parameterClass="cargo.cms.imprt.bo.TransformAWBBO">
		UPDATE IMP_CAR_SHP
		SET RECD_PCS = RECD_PCS - #actPcs#, RECD_WT = RECD_WT - #actWt#,
		MANIFEST_PCS = (MANIFEST_PCS - #actPcs#),
		MANIFEST_WT = (MANIFEST_WT - #actWt#),
		BULK_PCS   = (BULK_PCS - NVL(#actPcs#,0)),
		BULK_WT    = (BULK_WT  - NVL(#actWt#,0))
		WHERE AWB_NO = #oldAwbNo# AND AWB_DATE = TO_DATE(#oldAwbDate#,'DDMONYY')
		AND FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
		FLT_KEY = #fltKey# AND
		FLT_TYPE = 'I'	
	</update>
	<update id="update_pawb_accept_car_shpDummmy" parameterClass="cargo.cms.imprt.bo.TransformAWBBO">
		UPDATE IMP_CAR_SHP
		SET RECD_PCS = RECD_PCS - #actPcs#, RECD_WT = RECD_WT - #actWt#
		WHERE AWB_NO = #oldAwbNo# AND AWB_DATE = TO_DATE(#oldAwbDate#,'DDMONYY')
		AND FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
		FLT_KEY = #fltKey# AND
		FLT_TYPE = 'I'	
	</update>
	
	<update id="update_accept_edi_fhl_hawb" parameterClass="cargo.cms.imprt.bo.TransformAWBBO">
	UPDATE edi_fhl_hawb SET hawb_pcs=hawb_pcs-#actPcs#,hawb_net_wt=hawb_net_wt-#actWt# WHERE tr_no in (SELECT TR_NO FROM EDI_FHL FHL WHERE FHL.AWB_NO=#oldAwbNo# AND FHL.AWB_DATE=TO_DATE(#oldAwbDate#,'DDMONYY')) and hawb_no=#tagNo#
	</update>
	<delete id="delete_accept_edi_fhl_hawb" parameterClass="cargo.cms.imprt.bo.TransformAWBBO">
	<![CDATA[
		DELETE FROM edi_fhl_hawb WHERE tr_no in (SELECT TR_NO FROM EDI_FHL FHL WHERE FHL.AWB_NO=#oldAwbNo# AND FHL.AWB_DATE=TO_DATE(#oldAwbDate#,'DDMONYY')) and hawb_no=#tagNo# AND (hawb_pcs IS NULL OR hawb_pcs <=0)
		]]>
	</delete>
	<delete id="delete_accept_edi_fhl" parameterClass="cargo.cms.imprt.bo.TransformAWBBO">
	<![CDATA[
		DELETE FROM EDI_FHL WHERE TR_NO IN (SELECT TR_NO FROM EDI_FHL FHL WHERE FHL.AWB_NO=#oldAwbNo# AND FHL.AWB_DATE=TO_DATE(#oldAwbDate#,'DDMONYY') AND NOT EXISTS (SELECT NULL FROM EDI_FHL_HAWB HAWB WHERE HAWB.TR_NO=FHL.TR_NO))
		]]>
	</delete>
	<update id="update_accept_mast_hawb" parameterClass="cargo.cms.imprt.bo.TransformAWBBO">
	UPDATE MAST_HAWB HAWB SET HAWB.HAWB_PCS=HAWB.HAWB_PCS-#actPcs#,HAWB.HAWB_WT=HAWB.HAWB_WT-#actWt# WHERE AWB_NO=#oldAwbNo# AND AWB_DATE=TO_DATE(#oldAwbDate#,'DDMONYY') AND HAWB_NO=#tagNo#
	</update>
	<delete id="delete_accept_mast_hawb" parameterClass="cargo.cms.imprt.bo.TransformAWBBO">
	<![CDATA[
		DELETE FROM MAST_HAWB WHERE AWB_NO=#oldAwbNo# AND AWB_DATE=TO_DATE(#oldAwbDate#,'DDMONYY') AND HAWB_NO=#tagNo# AND (HAWB_PCS IS NULL OR HAWB_PCS <=0)
		]]>
	</delete>
	<delete id="deleteImpXpsOBCMail" parameterClass="cargo.cms.imprt.bo.TransformAWBBO">
	<![CDATA[
		DELETE FROM IMP_XPS_OBC_MAIL WHERE TAG_NO=#tagNo# and AWB_NO=#oldAwbNo# AND AWB_DATE=TO_DATE(#oldAwbDate#,'DDMONYY') and flt_key=#fltKey# and flt_date=TO_DATE(#fltDate#,'DDMONYY')
		]]>
	</delete>
	<update id="update_accept_impstrgdtl" parameterClass="cargo.cms.imprt.bo.TransformAWBBO">
	update IMP_AWB_STRG_DTL set strg_pcs=strg_pcs-#actPcs#,strg_wt=strg_wt-#actWt# where awb_no=#oldAwbNo# and awb_date=TO_DATE(#oldAwbDate#,'DDMONYY') and flt_key=#fltKey# and flt_date=TO_DATE(#fltDate#,'DDMONYY') and flt_type='I' and (uld_key=#uldKey# or lsp_no=#lspNo# or (uld_key is null and lsp_no is null and loc_code=#locn#))
	</update>
	<delete id="delete_accept_impstrgdtl" parameterClass="cargo.cms.imprt.bo.TransformAWBBO">
	<![CDATA[
		delete from IMP_AWB_STRG_DTL where awb_no=#oldAwbNo# and awb_date=TO_DATE(#oldAwbDate#,'DDMONYY') and flt_key=#fltKey# and flt_date=TO_DATE(#fltDate#,'DDMONYY') and flt_type='I' and (uld_key=#uldKey# or lsp_no=#lspNo# or (uld_key is null and lsp_no is null and loc_code=#locn#) and (strg_pcs is null or strg_pcs <=0)
		]]>
	</delete>
	
	<select id="getTransferrecordCount" parameterClass="cargo.cms.imprt.bo.TransformAWBBO" resultClass="java.lang.Integer">
		<![CDATA[
		SELECT COUNT(1) FROM TRF_ACCEPT_HD WHERE AWB_NO =#oldAwbNo# AND AWB_DATE=TO_DATE(#oldAwbDate#,'DDMONYY') AND STATUS != 'V'
		]]>
	</select>
		
	<select id="checkvoidacceptcargoForTM" parameterClass="cargo.cms.imprt.bo.TransformAWBBO" resultClass="java.lang.Integer">
		SELECT COUNT(1) FROM AWB WHERE AWB_NO =#oldAwbNo# AND AWB_DATE=TO_DATE(#oldAwbDate#,'DDMONYY') AND CATALOG = 'TM'
	</select>	
	
	<select id="checkpremanrecordforvoidacceptcargo" parameterClass="cargo.cms.imprt.bo.TransformAWBBO" resultClass="java.lang.Integer">
		<![CDATA[
		select COUNT(1) from (
    	select count(1) cnt from exp_pmanifest_awb where awb_no=#oldAwbNo# and awb_date=TO_DATE(#oldAwbDate#,'DDMONYY')
    	union all
    	select count(1) cnt from exp_pman_tarmac_awb where awb_no=#oldAwbNo# and awb_date=TO_DATE(#oldAwbDate#,'DDMONYY')) pman where pman.cnt>0
		]]>
	</select>
	<select id="checkoffloadrecordforvoidacceptcargo" parameterClass="cargo.cms.imprt.bo.TransformAWBBO" resultClass="java.lang.Integer">
		<![CDATA[
		select count(1) cnt from exp_offload_uld_awb where awb_no=#oldAwbNo# and awb_date=TO_DATE(#oldAwbDate#,'DDMONYY') AND confirmed_yn='Y'
		]]>
	</select>
	<select id="getvoidacceptuldCount" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		<![CDATA[
		SELECT COUNT(1) FROM AWB_INVENTORY WHERE locn_pcs > 0 AND (ULD_KEY=#PARAM# OR LSP_NO=#PARAM#)
		]]>
	</select>
	<update id="updatevoiduldemptyflag" parameterClass="java.lang.String">
	UPDATE ULD_INVENTORY SET EMPTY_FLG = 'Y' WHERE ULD_KEY=#PARAM#
	</update>
	<update id="updatevoidCSDemptyflag" parameterClass="java.lang.String">
	UPDATE LSP_INVENTORY SET EMPTY_FLG = 'Y' WHERE lsp_no=#PARAM#
	</update>
	
		<delete id="delete_accept_impcarshp" parameterClass="cargo.cms.imprt.bo.TransformAWBBO">
	<![CDATA[
		delete from IMP_CAR_SHP where awb_no=#oldAwbNo# and awb_date=TO_DATE(#oldAwbDate#,'DDMONYY') and flt_key=#fltKey# and flt_date=TO_DATE(#fltDate#,'DDMONYY') and flt_type='I'
		]]>
	</delete>
	<delete id="delete_accept_AWBOWNER" parameterClass="cargo.cms.imprt.bo.TransformAWBBO">
	<![CDATA[
		DELETE from AWB_OWNER	WHERE AWB_NO = #oldAwbNo# AND AWB_DATE  = TO_DATE(#oldAwbDate#,'DDMONYY')
		]]>
	</delete>
	<delete id="delete_accept_IMPCARAWB" parameterClass="cargo.cms.imprt.bo.TransformAWBBO">
	<![CDATA[
		DELETE FROM IMP_CAR_AWB	WHERE AWB_NO = #oldAwbNo# AND AWB_DATE  = TO_DATE(#oldAwbDate#,'DDMONYY')
		]]>
	</delete>
	<delete id="delete_accept_EXPCAR" parameterClass="cargo.cms.imprt.bo.TransformAWBBO">
	<![CDATA[
		DELETE from EXP_CAR	WHERE AWB_NO = #oldAwbNo# AND AWB_DATE  = TO_DATE(#oldAwbDate#,'DDMONYY')
		]]>
	</delete>
	<delete id="delete_accept_awb" parameterClass="cargo.cms.imprt.bo.TransformAWBBO">
	<![CDATA[
		DELETE from AWB	WHERE AWB_NO = #oldAwbNo# AND AWB_DATE  = TO_DATE(#oldAwbDate#,'DDMONYY')
		]]>
	</delete>
	<delete id="delete_accept_IMPCARCHRGITM" parameterClass="cargo.cms.imprt.bo.TransformAWBBO">
	<![CDATA[
		DELETE from IMP_CAR_CHRG_ITM WHERE AWB_NO = #oldAwbNo# AND AWB_DATE  = TO_DATE(#oldAwbDate#,'DDMONYY')
		]]>
	</delete>
	
	<delete id="delete_hawb_inventory" parameterClass="cargo.cms.imprt.bo.TransformAWBBO">
		DELETE FROM 
		(
		  SELECT * FROM HAWB_INVENTORY hi
		  INNER JOIN AWB_INVENTORY ai ON ai.SEQ_NO = hi.SEQ_NO
		  WHERE hi.SEQ_NO = #invSeq# AND hi.HAWB_NO = #tagNo# 
		)
	</delete>
	
	<update id="update_awb_inventory" parameterClass="cargo.cms.imprt.bo.TransformAWBBO">
		UPDATE AWB_INVENTORY ai
		SET ai.LOCN_PCS = ai.LOCN_PCS - #actPcs#,ai.LOCN_WT = ai.LOCN_WT - #actWt#
		WHERE ai.SEQ_NO = #invSeq# 
	</update>
	
	<delete id="delete_awb_inventory" parameterClass="cargo.cms.imprt.bo.TransformAWBBO">
		DELETE FROM AWB_INVENTORY
		WHERE AWB_NO = #oldAwbNo# AND AWB_DATE = to_date(#oldAwbDate#,'DDMONYY') AND LOCN_PCS = 0 AND LOCN_WT = 0
	</delete>
	
	<update id="update_hawb_strg" parameterClass="cargo.cms.imprt.bo.TransformAWBBO">
		UPDATE IMP_HAWB_STRG_DTL
		SET HAWB_BRKDN_PCS = HAWB_BRKDN_PCS - #actPcs#,HAWB_BRKDN_WT = HAWB_BRKDN_WT - #actWt#
		WHERE AWB_NO = #oldAwbNo# AND AWB_DATE = to_date(#oldAwbDate#,'DDMONYY') AND HAWB_NO = #tagNo#
	</update>
	
	
	<update id="updateHawbStrgDummy" parameterClass="cargo.cms.imprt.bo.TransformAWBBO">
		UPDATE IMP_HAWB_STRG_DTL
		SET HAWB_BRKDN_PCS = HAWB_BRKDN_PCS - #actPcs#,HAWB_BRKDN_WT = HAWB_BRKDN_WT - #actWt#,
		HAWB_PCS = HAWB_PCS - #actPcs#,HAWB_WT = HAWB_WT - #actWt#
		WHERE AWB_NO = #oldAwbNo# AND AWB_DATE = to_date(#oldAwbDate#,'DDMONYY') AND HAWB_NO = #tagNo#
	</update>
	
       <update id="update_car_awb" parameterClass="cargo.cms.imprt.bo.TransformAWBBO">
		UPDATE IMP_CAR_AWB
		SET AWB_PCS = AWB_PCS - #actPcs#, AWB_WT = AWB_WT - #actWt# , BULK_PCS = BULK_PCS - #actPcs# , BULK_WT  = BULK_WT  - #actWt#
		WHERE AWB_NO = #oldAwbNo# AND AWB_DATE = TO_DATE(#oldAwbDate#,'DDMONYY')
	</update>
	
	
	
	<update id="update_car_shpDummmy" parameterClass="cargo.cms.imprt.bo.TransformAWBBO">
		UPDATE IMP_CAR_SHP
		SET RECD_PCS = RECD_PCS - #actPcs#, RECD_WT = RECD_WT - #actWt#	
		WHERE AWB_NO = #oldAwbNo# AND AWB_DATE = TO_DATE(#oldAwbDate#,'DDMONYY')
		AND FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
		FLT_KEY = #fltKey# AND
		FLT_TYPE = 'I'	
	</update>
	
	<update id="updateCarShpDummyWOMNF" parameterClass="cargo.cms.imprt.bo.TransformAWBBO">
		UPDATE IMP_CAR_SHP
		SET MANIFEST_PCS = (MANIFEST_PCS - #actPcs#),MANIFEST_WT = (MANIFEST_WT - #actWt#)	
		WHERE AWB_NO = #oldAwbNo# AND AWB_DATE = TO_DATE(#oldAwbDate#,'DDMONYY')
		AND FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
		FLT_KEY = #fltKey# AND
		FLT_TYPE = 'I'	AND EXISTS (select null from AWB where AWB_NO = #oldAwbNo# AND AWB_DATE = TO_DATE(#oldAwbDate#,'DDMONYY') AND 
		'N' = (SELECT DECODE(COUNT(1), 0, 'N', 'Y') as mailAsCargo FROM MAST_CARRIER where code = CARR_CODE and NVL(MAIL_AS_CARGO,'X') = 'Y') )
	</update>
	
        <update id="update_car_shp" parameterClass="cargo.cms.imprt.bo.TransformAWBBO">
		UPDATE IMP_CAR_SHP
		SET RECD_PCS = RECD_PCS - #actPcs#, RECD_WT = RECD_WT - #actWt#
		WHERE AWB_NO = #oldAwbNo# AND AWB_DATE = TO_DATE(#oldAwbDate#,'DDMONYY')
		AND FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
		FLT_KEY = #fltKey# AND
		FLT_TYPE = 'I'	
	</update>
	
	<update id="update_exp_car" parameterClass="cargo.cms.imprt.bo.TransformAWBBO">
		UPDATE EXP_CAR
		SET PCS = PCS - #actPcs#,WT = WT - #actWt#
		WHERE AWB_NO = #oldAwbNo# AND AWB_DATE = TO_DATE(#oldAwbDate#,'DDMONYY')
	</update>
	
	<update id="update_awb_owner" parameterClass="cargo.cms.imprt.bo.TransformAWBBO">
		UPDATE AWB_OWNER
		SET PCS = PCS - #actPcs#,WT = WT - #actWt#
		WHERE AWB_NO = #oldAwbNo# AND AWB_DATE = TO_DATE(#oldAwbDate#,'DDMONYY')
	</update>
	
	<update id="update_awb" parameterClass="cargo.cms.imprt.bo.TransformAWBBO">
		UPDATE AWB
		SET PCS = PCS - #actPcs#, WT = WT - #actWt#
		WHERE AWB_NO = #oldAwbNo# AND AWB_DATE = TO_DATE(#oldAwbDate#,'DDMONYY')
	</update>
	
	<update id="update_edi_fhl" parameterClass="cargo.cms.imprt.bo.TransformAWBBO">
		UPDATE EDI_FHL 
      	SET AWB_PCS = AWB_PCS - #actPcs#, AWB_WT = AWB_WT - #actWt#
		WHERE AWB_NO = #oldAwbNo# AND AWB_DATE = TO_DATE(#oldAwbDate#,'DDMONYY')
	</update>
	
	<delete id="delete_edi_fhl" parameterClass="cargo.cms.imprt.bo.TransformAWBBO">
		DELETE FROM EDI_FHL
		WHERE AWB_NO = #oldAwbNo# AND AWB_DATE = TO_DATE(#oldAwbDate#,'DDMONYY') AND AWB_PCS = 0 AND AWB_WT = 0
	</delete>
	
	<delete id="delete_edi_fhl_hawb" parameterClass="cargo.cms.imprt.bo.TransformAWBBO">
		DELETE FROM EDI_FHL_HAWB
		WHERE TR_NO = (SELECT TR_NO FROM EDI_FHL WHERE AWB_NO = #oldAwbNo# AND AWB_DATE = TO_DATE(#oldAwbDate#,'DDMONYY'))
	</delete>
	
	<delete id="mast_hawb" parameterClass="cargo.cms.imprt.bo.TransformAWBBO">
	  DELETE FROM MAST_HAWB
	  WHERE AWB_NO = #oldAwbNo# AND AWB_DATE = TO_DATE(#oldAwbDate#,'DDMONYY') AND HAWB_NO = #tagNo#
	</delete>
	
<select id = "getAwbCarrierCode" parameterClass="cargo.cms.imprt.bo.TransformAWBBO"  resultClass="java.lang.String">
		SELECT CARR_CODE FROM AWB WHERE AWB_NO = #oldAwbNo# AND AWB_DATE = TO_DATE(#oldAwbDate#,'DDMONYY')
	</select>
	
	 <select id="check_flt_opr_closed" parameterClass="cargo.cms.imprt.bo.TransformAWBBO" resultClass="cargo.cms.imprt.bo.TransformAWBBO">
		SELECT FLT_KEY||'/'||TO_CHAR(SCH_DATE,'DDMONYY') fltKey FROM FLT_OPR_EVENTS WHERE FLT_KEY = #fltKey# AND SCH_DATE = #fltDate#
		AND (SELECT NVL(MAIL_AS_CARGO,'X') FROM MAST_CARRIER where code = FLT_OPR_EVENTS.carr_code) = 'Y'
		AND flt_type = 'A' and flt_key not like 'XA%' and flt_cls_yn = 'Y' AND ROWNUM = 1

	</select>
	
	<select id="check_old_awb_cir_created" parameterClass="cargo.cms.imprt.bo.TransformAWBBO" resultClass="java.lang.Integer">
		SELECT count(1) FROM imp_car_shp where AWB_NO = #oldAwbNo# and awb_date = #oldAwbDate# and CIR_PROC_USER is not null
		
	</select>
	
	<select id="check_new_awb_cir_created" parameterClass="cargo.cms.imprt.bo.TransformAWBBO" resultClass="java.lang.Integer">
		SELECT count(1) FROM imp_car_shp where AWB_NO = #awbNo# and awb_date = #awbDate# and CIR_PROC_USER is not null
		
	</select>
	
	 <!-- Transform AWB End-->
		 
	<select id="chkFHLCreatedForAWBDummy" parameterClass="cargo.cms.imprt.bo.MaintainCARBO" resultClass="java.lang.String">
			select TR_NO as tr_number FROM EDI_FHL WHERE AWB_NO = #awbNo# AND AWB_DATE = to_date(#awbDate#,'DDMONYY') 
	</select>
			
	<delete id="deleteFHLHAWBCreatedForDummy" parameterClass="java.lang.String">
			delete edi_fhl_hawb WHERE  TR_NO	  =   #fhlTrNumber# 
	</delete>
	
	<delete id="deleteFHLCreatedForDummy" parameterClass="java.lang.String">
			delete edi_fhl WHERE  TR_NO	  =   #fhlTrNumber# 
	</delete>
	
	<delete id="deleteFHLMASTCreatedForDummy" parameterClass="cargo.cms.imprt.bo.MaintainCARBO">
			delete MAST_HAWB WHERE AWB_NO = #awbNo# AND AWB_DATE = to_date(#awbDate#,'DDMONYY') 
	</delete>
	
	<delete id="deleteHAWB_StorageDtl" parameterClass="cargo.cms.imprt.bo.MaintainCARBO">
			delete IMP_HAWB_STRG_DTL WHERE  AWB_NO = #awbNo# AND AWB_DATE = to_date(#awbDate#,'DDMONYY') 
	</delete>
	
	<update id="updateHAWB_StorageDtl" parameterClass="cargo.cms.imprt.bo.MaintainCARBO">
	  UPDATE IMP_HAWB_STRG_DTL SET
		    HAWB_BRKDN_PCS = '0', 
			HAWB_BRKDN_WT = '0',
		    LM_USER_ID	= #lmUserId#  ,
			LM_DATE		= SYSDATE
			WHERE	AWB_DATE = #awbDate#  AND
			AWB_NO	 = #awbNo#  AND
			FLT_KEY	 = #fltKey#  AND
			FLT_DATE = TO_DATE(#fltDate#,'DDMONYY')
	</update>
	
	
	<update id="upd_transitmailtag_MTMT" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO">
		UPDATE IMP_XPS_OBC_MAIL SET
			AWB_NO = #awbNo#,
			AWB_DATE = #awbDate#,
			LM_USER_ID = #crUserId#,
			LM_DATE = SYSDATE
		WHERE
			FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
			FLT_KEY = #fltKey# AND
			FLT_TYPE = 'I' AND			
			TAG_NO = #tagNo# AND
			BD_ULD_KEY = #bduldno# AND DEST = #dest#
	</update>
	
	<update id="upd_transitmailtag_ACCEPT_TRANSFER" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO">
		UPDATE IMP_XPS_OBC_MAIL SET
			AWB_NO = #awbNo#,
			AWB_DATE = #awbDate#,
			LM_USER_ID = #crUserId#,
			LM_DATE = SYSDATE
		WHERE
			FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
			FLT_KEY = #fltKey# AND
			FLT_TYPE = 'I' AND			
			TAG_NO = #tagNo# AND
			BD_ULD_KEY IS NULL AND DEST = #dest#
	</update>
	
	<insert id="ins_impcarawb_transitmailcar" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO">
	INSERT INTO IMP_CAR_AWB (AWB_NO,AWB_DATE,AWB_PRFX,PPK_TYPE, AWB_DEST,AWB_ORIGIN,
		AWB_PCS,AWB_WT,BULK_PCS, BULK_WT,CONTENT,CATALOG,
		SPL_CODE1,SPL_CODE2,SPL_CODE3,SPL_CODE4,SPL_CODE5,SPL_CODE6,
		SPL_CODE7,SPL_CODE8,SPL_CODE9,CNS_CUST_NO,CSGNE_NAME,
		APPNTD_AGENT,AGENT_CUST_NO,AIRLN_RMK,CC_FEE, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE,TR_STATUS,CONSOLE_IND,
		CSGNE_ADDR1, CSGNE_ADDR2, CSGNE_ADDR3, CSGNE_ADDR4, CSGNE_ADDR5,CSGNE_PLACE,CSGNE_CTRY_CODE, CSGNE_PIN_CODE,
		AGENT_ADDR1, AGENT_ADDR2, AGENT_ADDR3, AGENT_ADDR4, AGENT_ADDR5,AGENT_PLACE, AGENT_CTRY_CODE,AGENT_PIN_CODE,ECT_HANDLER,TR_TYPE,HOUSE_FLG,LOCK_IND) 
	VALUES(#awbNo#,TO_DATE(#awbDate#,'DDMONYY'), #awbPrefix#,NVL(#ppkType#, 'B'), #dest#,#orig#, 
		nvl(#awbPcs#,0),nvl(#awbWt#,0),nvl(#awbPcs#,0),nvl(#awbWt#,0),#content#,#catalog#,
		#splCode1#,#splCode2#,#splCode3#,#splCode4#,#splCode5#,#splCode6#,  
		#splCode7#,#splCode8#,#splCode9#,#consigneeCode#,#consigneeName#,#appointedAgent#,#appointedAgentCode#,
		#rmk#,#ccFee#,#crUserId#,SYSDATE,#crUserId#,SYSDATE,'A','Y',
		#consAddrOne#,#consAddrTwo#,#consAddrThree#,#consAddrFour#,#consAddrFive#,#consCity#,#consCountry#,#consPin#,
		#apptdAgtAddrOne#,#apptdAgtAddrTwo#,#apptdAgtAddrThree#,#apptdAgtAddrFour#,#apptdAgtAddrFive#,#appCity#,#appCountry#,#appPin#,#ectHandler#,#trtype#,#houseFlg#,#locked#) 
 	</insert> 
 
 
 <insert id="ins_impcarawb_transitmailcarAWB" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO">
	INSERT INTO IMP_CAR_AWB (AWB_NO,AWB_DATE,AWB_PRFX,PPK_TYPE, AWB_DEST,AWB_ORIGIN,
		AWB_PCS,AWB_WT,BULK_PCS, BULK_WT,CONTENT,CATALOG,
		SPL_CODE1,SPL_CODE2,SPL_CODE3,SPL_CODE4,SPL_CODE5,SPL_CODE6,
		SPL_CODE7,SPL_CODE8,SPL_CODE9,CNS_CUST_NO,CSGNE_NAME,
		APPNTD_AGENT,AGENT_CUST_NO,AIRLN_RMK,CC_FEE, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE,TR_STATUS,CONSOLE_IND,
		CSGNE_ADDR1, CSGNE_ADDR2, CSGNE_ADDR3, CSGNE_ADDR4, CSGNE_ADDR5,CSGNE_PLACE,CSGNE_CTRY_CODE, CSGNE_PIN_CODE,
		AGENT_ADDR1, AGENT_ADDR2, AGENT_ADDR3, AGENT_ADDR4, AGENT_ADDR5,AGENT_PLACE, AGENT_CTRY_CODE,AGENT_PIN_CODE,ECT_HANDLER,TR_TYPE,HOUSE_FLG,LOCK_IND) 
	VALUES(#awbNo#,TO_DATE(#awbDate#,'DDMONYY'), #awbPrefix#,NVL(#ppkType#, 'B'), #dest#,#orig#, 
		(select nvl(pcs,0) from AWB where awb_no = #awbNo# AND AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')),
		(select nvl(wt,0) from AWB where awb_no = #awbNo# AND AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')),
		(select nvl(pcs,0) from AWB where awb_no = #awbNo# AND AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')),
		(select nvl(wt,0) from AWB where awb_no = #awbNo# AND AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')),
		#content#,#catalog#,
		#splCode1#,#splCode2#,#splCode3#,#splCode4#,#splCode5#,#splCode6#,  
		#splCode7#,#splCode8#,#splCode9#,#consigneeCode#,#consigneeName#,#appointedAgent#,#appointedAgentCode#,
		#rmk#,#ccFee#,#crUserId#,SYSDATE,#crUserId#,SYSDATE,'A','Y',
		#consAddrOne#,#consAddrTwo#,#consAddrThree#,#consAddrFour#,#consAddrFive#,#consCity#,#consCountry#,#consPin#,
		#apptdAgtAddrOne#,#apptdAgtAddrTwo#,#apptdAgtAddrThree#,#apptdAgtAddrFour#,#apptdAgtAddrFive#,#appCity#,#appCountry#,#appPin#,#ectHandler#,#trtype#,#houseFlg#,#locked#) 
 	</insert> 
 	
 	<update id="upd_impcarawb_transitmailcar" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO">
		UPDATE IMP_CAR_AWB SET
			AWB_PCS   = (AWB_PCS + nvl(#awbPcs#,0)),
		    AWB_WT    = (AWB_WT  + nvl(#awbWt#,0)),
		    BULK_PCS = (BULK_PCS + nvl(#awbPcs#,0)),
		    BULK_WT = (BULK_WT + nvl(#awbWt#,0)),
		    HOUSE_FLG = #houseFlg#,	
		    LOCK_IND = #locked#,	   
		    LM_USER_ID = #crUserId#,
		    SPL_CODE1  = #splCode1#,
	        SPL_CODE2  = #splCode2#,
	        SPL_CODE3  = #splCode3#,
	        SPL_CODE4  = #splCode4#,
	        SPL_CODE5  = #splCode5#,
	        SPL_CODE6  = #splCode6#,
	        SPL_CODE7  = #splCode7#,
	        SPL_CODE8  = #splCode8#,
	        SPL_CODE9  = #splCode9#,
	        CONSOLE_IND = 'Y',
		    LM_DATE    = sysdate
		WHERE
			AWB_NO = #awbNo# AND
			AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')						
	</update> 
 
 
 <update id="upd_impcarawb_transitmailcarPAWB" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO">
		UPDATE IMP_CAR_AWB SET			
		    HOUSE_FLG = #houseFlg#,	
		    CONSOLE_IND = 'Y',
		    LOCK_IND = #locked#,	   
		    LM_USER_ID = #crUserId#,
		    SPL_CODE1  = #splCode1#,
	        SPL_CODE2  = #splCode2#,
	        SPL_CODE3  = #splCode3#,
	        SPL_CODE4  = #splCode4#,
	        SPL_CODE5  = #splCode5#,
	        SPL_CODE6  = #splCode6#,
	        SPL_CODE7  = #splCode7#,
	        SPL_CODE8  = #splCode8#,
	        SPL_CODE9  = #splCode9#,
		    LM_DATE    = sysdate
		WHERE
			AWB_NO = #awbNo# AND
			AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')						
	</update> 
	
 	<insert id="ins_awb_transitmailcar" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO">
		<![CDATA[
		INSERT INTO AWB (AWB_TYPE,AWB_NO,AWB_DATE,BLDUP_BULK_PCS,BLDUP_BULK_WT,
			CONTENT,CATALOG,SPL_CODE1,SPL_CODE2,SPL_CODE3,  
			SPL_CODE4,SPL_CODE5,SPL_CODE6,SPL_CODE7,SPL_CODE8,SPL_CODE9,
			AWB_RMK,LM_USER_ID ,LM_DATE,CR_USER_ID, CR_DATE, PPK_TYPE,CARR_CODE,CAR_YN,ORIG,DEST,AGENT_CODE,SHPR_CODE,AGENT_NAME,SHIPPER_NAME,FINALLOCK_IND,PCS,WT,
			NON_PMAN_PCS,NON_PMAN_WT,TR_TYPE,HOUSE_FLG,EXP_AWB_LOCK) 
		VALUES(#awbType#,#awbNo#,TO_DATE(#awbDate#,'DDMONYY'), 
			nvl(#awbPcs#,0),nvl(#awbWt#,0),#content#,#catalog#,#splCode1#,
			#splCode2#,#splCode3#,#splCode4#,#splCode5#,#splCode6#,#splCode7#,#splCode8#,#splCode9#,
			#rmk#,#crUserId#,SYSDATE,#crUserId#,SYSDATE,#ppkType#,#carrCode#,#carCreated#,#orig#,#dest#,#appointedAgentCode#,#consigneeCode#,
			#appointedAgent#,#shprName#,#finaliseLockInd#,nvl(#awbPcs#,0),nvl(#awbWt#,0),
			DECODE(#awbType#,'T',NVL(#awbPcs#,0),0),DECODE(#awbType#,'T',NVL(#awbWt#,0),0),#trtype#,#houseFlg#,#locked#) 
		]]>
	</insert>
	
	<update id="upd_awb_transitmailcar" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO">
		UPDATE AWB SET			
			BLDUP_BULK_PCS   = (BLDUP_BULK_PCS + nvl(#awbPcs#,0)),
		    BLDUP_BULK_WT    = (BLDUP_BULK_WT  + nvl(#awbWt#,0)),
		    PCS = (PCS + nvl(#awbPcs#,0)),
		    WT = (WT + nvl(#awbWt#,0)),
		    NON_PMAN_PCS = (NON_PMAN_PCS + DECODE(#awbType#,'T',NVL(#awbPcs#,0),0)),
		    NON_PMAN_WT = (NON_PMAN_WT + DECODE(#awbType#,'T',NVL(#awbWt#,0),0)),
		    HOUSE_FLG = #houseFlg#,	
		    EXP_AWB_LOCK = #locked#,
		    SPL_CODE1  = #splCode1#,
	        SPL_CODE2  = #splCode2#,
	        SPL_CODE3  = #splCode3#,
	        SPL_CODE4  = #splCode4#,
	        SPL_CODE5  = #splCode5#,
	        SPL_CODE6  = #splCode6#,
	        SPL_CODE7  = #splCode7#,
	        SPL_CODE8  = #splCode8#,
	        SPL_CODE9  = #splCode9#,
		    LM_USER_ID = #crUserId#,
		    LM_DATE    = sysdate
		WHERE
			AWB_NO = #awbNo# AND
			AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')						
	</update> 
 
	
 	<update id="upd_awb_transitmailcar_ForPAWB" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO">
		UPDATE AWB SET
		    HOUSE_FLG = #houseFlg#,
		    SPL_CODE1  = #splCode1#,
	        SPL_CODE2  = #splCode2#,
	        SPL_CODE3  = #splCode3#,
	        SPL_CODE4  = #splCode4#,
	        SPL_CODE5  = #splCode5#,
	        SPL_CODE6  = #splCode6#,
	        SPL_CODE7  = #splCode7#,
	        SPL_CODE8  = #splCode8#,
	        SPL_CODE9  = #splCode9#,
		    LM_USER_ID = #crUserId#,
		    LM_DATE    = sysdate
		WHERE
			AWB_NO = #awbNo# AND
			AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')						
	</update> 
	
	<insert id="ins_impcarshp_transitmailcarDummyMailAsCargo" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO">
	INSERT INTO IMP_CAR_SHP (FLT_TYPE,AWB_NO, AWB_DATE, AWB_PRFX, CARR_CODE, FLT_DATE, FLT_KEY, BULK_PCS, BULK_WT,
		MANIFEST_PCS, MANIFEST_WT, PPK_TYPE, LM_USER_ID ,LM_DATE,TR_STATUS,CR_USER_ID, CR_DATE,LDG_POINT,DOC_DISC,CAR_CREATED,DIR_RMK,RECD_PCS,RECD_WT,TR_TYPE)
	VALUES( 'I',#awbNo# ,TO_DATE(#awbDate#,'DDMONYY'),#awbPrefix#,#carrCode#,TO_DATE(#fltDate#,'DDMONYY'),#fltKey#, NVL(#mnfstPcs#,0), NVL(#mnfstWt#,0), 
		0, 0, 'B', #crUserId#,SYSDATE,'A',#crUserId#,SYSDATE,#orig#,#docDisc#,#carCreated#,#dirRemark#,NVL(#mnfstPcs#,0), NVL(#mnfstWt#,0),#trtype#)	
 	</insert> 	
	
	<insert id="ins_impcarshp_transitmailcarDummy" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO">
	INSERT INTO IMP_CAR_SHP (FLT_TYPE,AWB_NO, AWB_DATE, AWB_PRFX, CARR_CODE, FLT_DATE, FLT_KEY, BULK_PCS, BULK_WT,
		MANIFEST_PCS, MANIFEST_WT, PPK_TYPE, LM_USER_ID ,LM_DATE,TR_STATUS,CR_USER_ID, CR_DATE,LDG_POINT,DOC_DISC,CAR_CREATED,DIR_RMK,RECD_PCS,RECD_WT,TR_TYPE)
	VALUES( 'I',#awbNo# ,TO_DATE(#awbDate#,'DDMONYY'),#awbPrefix#,#carrCode#,TO_DATE(#fltDate#,'DDMONYY'),#fltKey#, NVL(#mnfstPcs#,0), NVL(#mnfstWt#,0), 
		NVL(#mnfstPcs#,0), NVL(#mnfstWt#,0), 'B', #crUserId#,SYSDATE,'A',#crUserId#,SYSDATE,#orig#,#docDisc#,#carCreated#,#dirRemark#,NVL(#mnfstPcs#,0), NVL(#mnfstWt#,0),#trtype#)	
 	</insert> 	
 	
 	<insert id="ins_impcarshp_transitmailcar" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO">
	INSERT INTO IMP_CAR_SHP (FLT_TYPE,AWB_NO, AWB_DATE, AWB_PRFX, CARR_CODE, FLT_DATE, FLT_KEY, PPK_TYPE, LM_USER_ID ,LM_DATE,TR_STATUS,CR_USER_ID, CR_DATE,LDG_POINT,DOC_DISC,CAR_CREATED,DIR_RMK,RECD_PCS,RECD_WT,TR_TYPE)
	VALUES( 'I',#awbNo# ,TO_DATE(#awbDate#,'DDMONYY'),#awbPrefix#,#carrCode#,TO_DATE(#fltDate#,'DDMONYY'),#fltKey#, 'B', #crUserId#,SYSDATE,'A',#crUserId#,SYSDATE,#orig#,#docDisc#,#carCreated#,#dirRemark#,NVL(#mnfstPcs#,0), NVL(#mnfstWt#,0),#trtype#)	
 	</insert>
 	
 	<insert id="ins_impcarshp_transitmailcar_CT" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO">
	INSERT INTO IMP_CAR_SHP (FLT_TYPE,AWB_NO, AWB_DATE, AWB_PRFX, CARR_CODE, FLT_DATE, FLT_KEY, PPK_TYPE, LM_USER_ID ,LM_DATE,TR_STATUS,CR_USER_ID, CR_DATE,LDG_POINT,DOC_DISC,CAR_CREATED,DIR_RMK,TR_TYPE)
	VALUES( 'I',#awbNo# ,TO_DATE(#awbDate#,'DDMONYY'),#awbPrefix#,#carrCode#,TO_DATE(#fltDate#,'DDMONYY'),#fltKey#, 'B', #crUserId#,SYSDATE,'A',#crUserId#,SYSDATE,#orig#,#docDisc#,#carCreated#,#dirRemark#,#trtype#)	
 	</insert>
 	
 	
 	<update id="upd_impcarshp_transitmailcar_DummyMailAsCargo" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO">
		UPDATE IMP_CAR_SHP SET
			BULK_PCS   = (BULK_PCS + NVL(#mnfstPcs#,0)),
		    BULK_WT    = (BULK_WT  + NVL(#mnfstWt#,0)),		  
		    RECD_PCS = (RECD_PCS + NVL(#mnfstPcs#,0)),
		    RECD_WT = (RECD_WT + NVL(#mnfstWt#,0)),
		    CAR_CREATED = 'Y',
		    LM_USER_ID = #crUserId#,
		    LM_DATE    = sysdate
		WHERE
			AWB_NO = #awbNo# AND
			AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')	AND
			FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
			FLT_KEY = #fltKey# AND
			FLT_TYPE = 'I'				
	</update>
	
 	<update id="upd_impcarshp_transitmailcar_Dummy" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO">
		UPDATE IMP_CAR_SHP SET
			BULK_PCS   = (BULK_PCS + NVL(#mnfstPcs#,0)),
		    BULK_WT    = (BULK_WT  + NVL(#mnfstWt#,0)),
		    MANIFEST_PCS = (MANIFEST_PCS + NVL(#mnfstPcs#,0)),
		    MANIFEST_WT = (MANIFEST_WT + NVL(#mnfstWt#,0)),
		    RECD_PCS = (RECD_PCS + NVL(#mnfstPcs#,0)),
		    RECD_WT = (RECD_WT + NVL(#mnfstWt#,0)),
		    CAR_CREATED = 'Y',
		    LM_USER_ID = #crUserId#,
		    LM_DATE    = sysdate
		WHERE
			AWB_NO = #awbNo# AND
			AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')	AND
			FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
			FLT_KEY = #fltKey# AND
			FLT_TYPE = 'I'				
	</update> 
 	
 	
 	<update id="upd_impcarshp_transitmailcar" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO">
		UPDATE IMP_CAR_SHP SET			
		    RECD_PCS = (RECD_PCS + NVL(#mnfstPcs#,0)),
		    RECD_WT = (RECD_WT + NVL(#mnfstWt#,0)),
		     CAR_CREATED = 'Y',
		    LM_USER_ID = #crUserId#,
		    LM_DATE    = sysdate
		WHERE
			AWB_NO = #awbNo# AND
			AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')	AND
			FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
			FLT_KEY = #fltKey# AND
			FLT_TYPE = 'I'				
	</update> 
	
	<update id="upd_impcarshp_transitmailcar_CT" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO">
		UPDATE IMP_CAR_SHP SET			
		    RECD_PCS = 0,
		    RECD_WT = 0,
		     CAR_CREATED = 'Y',
		    LM_USER_ID = #crUserId#,
		    LM_DATE    = sysdate
		WHERE
			AWB_NO = #awbNo# AND
			AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')	AND
			FLT_DATE = TO_DATE(#fltDate#,'DDMONYY') AND
			FLT_KEY = #fltKey# AND
			FLT_TYPE = 'I'				
	</update> 
	
 	<insert id="ins_gtcms_transitmailcar" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO">
	INSERT INTO GT_CMS
	 		(COLUMN_1, COLUMN_2, COLUMN_3, COLUMN_4, COLUMN_5, COLUMN_6)
	 VALUES
	 	   (#awbNo#, #awbDate#, #fltKey#, #fltDate#, '', #carCreated#)
	</insert>	
	
	<insert id="ins_awbevents_transitmailcar" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO">
		<![CDATA[
			INSERT INTO AWB_EVENTS 
			  (AWB_NO, AWB_DATE, EVENT_ID, EVENT_DESC, FLT_KEY, FLT_DATE,
			  FLT_TYPE, TR_NO, ULD_KEY, PCS, WT, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE ) 
			VALUES  
			  (#awbNo#,  TO_DATE(#awbDate#,'DDMONYY') ,'ADIUCAR', 'Amend Dummy IU CAR', #fltKey#,  TO_DATE(#fltDate#,'DDMONYY'), 
			  'I', AWB_event_SEQ.nextval
			, NULL, nvl(#awbPcs#,0), nvl(#awbWt#,0), #crUserId#,  sysdate, #crUserId#,  sysdate)
		]]>
	</insert>
	
	<insert id="ins_expcar_transitmailcar" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO">
		<![CDATA[
			INSERT INTO EXP_CAR (AWB_NO,AWB_DATE,AWB_PRFX,ORIGIN,DEST,PCS,WT,
				CONTENT,CATALOG,SPL_CODE1,SPL_CODE2,SPL_CODE3,  
				SPL_CODE4,SPL_CODE5,SPL_CODE6,SPL_CODE7,SPL_CODE8,SPL_CODE9,
				CSGNE_NAME, AGENT_CODE,	HANDLER_CODE,AIRL_RMK,
				LM_USER_ID ,LM_DATE,CR_USER_ID, CR_DATE,
				CSGNE_ADDR, CSGNE_ADDR2, CSGNE_ADDR3, CSGNE_ADDR4, CSGNE_PLACE, CSGNE_CTRY_CODE, CSGNE_PIN_CODE,
				SHPR_ADDR,SHPR_ADDR2,SHPR_ADDR3,SHPR_ADDR4,SHPR_NAME,SHPR_PLACE,SHPR_CTRY_CODE,SHPR_PIN_CODE,LOCK_IND,
	      		CARR_CODE,ACCEPT_MODE) 
	      VALUES(#awbNo#,TO_DATE(#awbDate#,'DDMONYY'),#awbPrefix#,#orig#,#dest#, 
				nvl(#awbPcs#,0),nvl(#awbWt#,0),#content#,#catalog#,#splCode1#,
				#splCode2#,#splCode3#,#splCode4#,#splCode5#,#splCode6#,#splCode7#,#splCode8#,#splCode9#,
				#consigneeName#, #appointedAgentCode#,
				#ectHandler#,#rmk#,#crUserId#,SYSDATE,#crUserId#,SYSDATE,
				#consAddrOne#,#consAddrTwo#,#consAddrThree#,#consAddrFour#,#consCity#,#consCountry#,#consPin#,
				#shprAddrOne#,#shprAddrTwo#,	
				#shprAddrThree#,#shprAddrFour#,#shprName#,#shprCity#,#shprCountry#,#shprPin#,
				#locked#,#carrCode#,'TRN') 
		]]>
	</insert>	
	
	<update id="upd_expcar_transitmailcar" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO">
		UPDATE EXP_CAR SET
			PCS   = (PCS + #awbPcs#),
		    WT    = (WT  + #awbWt#),
		    SPL_CODE1  = #splCode1#,
	        SPL_CODE2  = #splCode2#,
	        SPL_CODE3  = #splCode3#,
	        SPL_CODE4  = #splCode4#,
	        SPL_CODE5  = #splCode5#,
	        SPL_CODE6  = #splCode6#,
	        SPL_CODE7  = #splCode7#,
	        SPL_CODE8  = #splCode8#,
	        SPL_CODE9  = #splCode9#,
		    LM_USER_ID = #crUserId#,
		    LOCK_IND = #locked#,
		    LM_DATE    = sysdate
		WHERE
			AWB_NO = #awbNo# AND
			AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')				
	</update> 	
	
	
	<insert id="ins_awbowner_transitmailcar" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO">
		Insert into AWB_OWNER (AWB_NO,AWB_DATE,CARR_CODE,PCS,WT,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,BU_PCS,OFFLOAD_PCS) 
		values (#awbNo#,to_date(#awbDate#,'DDMONYY'),#carrCode#,#awbPcs#,#awbWt#,#crUserId#,sysdate,#crUserId#,sysdate,null,null)
	</insert>	
	
	<insert id="ins_awbowner_transitmailcar_CT" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO">
		Insert into AWB_OWNER (AWB_NO,AWB_DATE,CARR_CODE,PCS,WT,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,BU_PCS,OFFLOAD_PCS) 
		values (#awbNo#,to_date(#awbDate#,'DDMONYY'),#ctRecvCarr#,#awbPcs#,#awbWt#,#crUserId#,sysdate,#crUserId#,sysdate,null,null)
	</insert>
	
	<update id="upd_awbowner_transitmailcar" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO">
		UPDATE AWB_OWNER SET
			PCS   = (PCS + #awbPcs#),
		    WT    = (WT  + #awbWt#),
		    LM_USER_ID = #crUserId#,
		    LM_DATE    = sysdate
		WHERE
			AWB_NO = #awbNo# AND
			AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') AND	
			CARR_CODE = #carrCode#				
	</update> 		 
	 
	<update id="upd_awbowner_transitmailcar_CT" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO">
		UPDATE AWB_OWNER SET
			PCS   = (PCS + #awbPcs#),
		    WT    = (WT  + #awbWt#),
		    LM_USER_ID = #crUserId#,
		    LM_DATE    = sysdate
		WHERE
			AWB_NO = #awbNo# AND
			AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') AND	
			CARR_CODE = #ctRecvCarr#				
	</update> 		
	
	<insert id="ins_awbinv_transitmailcar" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO">
	INSERT INTO AWB_INVENTORY
	 (AWB_NO, AWB_DATE,CARR_CODE, LSP_NO,LOC_CODE,
	 LOCN_PCS, LOCN_WT, DAM_IND,CR_USER_ID, CR_DATE,
	 LM_USER_ID, LM_DATE,FLT_DATE, FLT_KEY,FLT_TYPE, ULD_KEY, SEQ_NO,STRG_DATE,CATALOG,REF_AWB_EVENT)
	 VALUES
	 (#awbNo#,TO_DATE(#awbDate#,'DDMONYY'),#carrCode#,#lspNo#,#locn#,
	 #actPcs#,#actWt#,#damInd#,#crUserId#, sysdate,
	 #crUserId#, sysdate,TO_DATE(#fltDate#,'DDMONYY'),#fltKey#,'I',#uldKey#,AWB_INV_SEQ.NEXTVAL,SYSDATE,'TM',#mbleTrType#)
	</insert>
	
	<select id="getSeqNoForTransitMailTagforCAR" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO" resultClass="java.lang.String" >
	 SELECT SEQ_NO seqNo
	 FROM AWB_INVENTORY
     WHERE AWB_NO = #awbNo#
     AND AWB_DATE = #awbDate#
     AND NVL(FLT_KEY,'*')  = NVL(#fltKey#,'*')
     AND NVL(FLT_DATE,SYSDATE) = NVL(#fltDate#,SYSDATE)     
     AND NVL(LOC_CODE,'*') = NVL(#locn#,'*')
     AND NVL(LSP_NO,0)   = NVL(#lspNo#,0)
     AND NVL(ULD_KEY,'*')  = NVL(#uldKey#,'*')
   </select>
   
  <update id="updatePcsWtForTransitMailTagforCAR" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO">
	UPDATE AWB_INVENTORY
		SET LOCN_PCS   = (LOCN_PCS + #actPcs#),
		    LOCN_WT    = (LOCN_WT  + #actWt#),
		    REF_AWB_EVENT = nvl(#mbleTrType#,REF_AWB_EVENT),
		    LM_USER_ID = #crUserId#,
		    LM_DATE    = sysdate
	     WHERE SEQ_NO = #seqNo#
    </update>
    
    
    <select id="isCarAwbExists" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO" resultClass="java.lang.Integer">
		select count(1) FROM IMP_CAR_AWB WHERE AWB_NO = #awbNo# AND AWB_DATE = to_date(#awbDate#,'DDMONYY')
	</select>
	
	<select id="isExpCarExists" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO" resultClass="java.lang.Integer">
		select count(1) FROM EXP_CAR WHERE AWB_NO = #awbNo# AND AWB_DATE = to_date(#awbDate#,'DDMONYY')
	</select>
	
	<select id="chkHAWBInventoryDtls" parameterClass="cargo.cms.imprt.bo.TransitMailCarBO" resultClass="java.lang.String">
		select count(1) as hawbStrgCnt FROM HAWB_INVENTORY WHERE HAWB_NO = #tagNo# AND SEQ_NO = #seqNo#
	</select>
	
	<select id="get_shipment_mailCargo_list" parameterClass="cargo.cms.imprt.bo.InBoundULDListBO" resultClass="cargo.cms.imprt.bo.InBoundULDListBO" >
		SELECT 
		  NVL(d.content,e.content) AS content,
		  e.spl_code1 AS shc1,
		  e.spl_code2 shc2,
		  e.spl_code3 AS shc3,
		  e.spl_code4 shc4,
		  e.spl_code5 shc5,
		  e.spl_code6 shc6,
		  e.spl_code7 shc7,
		  e.spl_code8 shc8,
		  e.spl_code9 shc9,
		  E.spl_code1 oldShc1,
		  E.spl_code2 oldShc2,
		  E.spl_code3 oldShc3,
		  E.spl_code4 oldShc4,
		  E.spl_code5 oldShc5,
		  E.spl_code6 oldShc6,
		  E.spl_code7 oldShc7,
		  E.spl_code8 oldShc8,
		  E.spl_code9 oldShc9,
		  DECODE(
		  (SELECT COUNT(1) FROM CUST_AIRL_SPL_CODE WHERE spl_type='SPL_VAL' AND spl_code =E.SPL_CODE1),0,'N','Y') AS shcVal1,
		  DECODE((SELECT COUNT(1) FROM CUST_AIRL_SPL_CODE WHERE spl_type='SPL_VAL'  AND spl_code =E.SPL_CODE2),0,'N','Y') AS shcVal2,
		  DECODE((SELECT COUNT(1) FROM CUST_AIRL_SPL_CODE WHERE spl_type='SPL_VAL'  AND spl_code =E.SPL_CODE3),0,'N','Y') AS shcVal3,
		  DECODE((SELECT COUNT(1) FROM CUST_AIRL_SPL_CODE WHERE spl_type='SPL_VAL'  AND spl_code =E.SPL_CODE4),0,'N','Y') AS shcVal4,
		  DECODE((SELECT COUNT(1) FROM CUST_AIRL_SPL_CODE WHERE spl_type='SPL_VAL'  AND spl_code =E.SPL_CODE5),0,'N','Y') AS shcVal5,
		  DECODE((SELECT COUNT(1) FROM CUST_AIRL_SPL_CODE WHERE spl_type='SPL_VAL' AND spl_code =E.SPL_CODE6),0,'N','Y') AS shcVal6,
		  DECODE((SELECT COUNT(1) FROM CUST_AIRL_SPL_CODE WHERE spl_type='SPL_VAL' AND spl_code =E.SPL_CODE7),0,'N','Y') AS shcVal7,
		  DECODE((SELECT COUNT(1) FROM CUST_AIRL_SPL_CODE WHERE spl_type='SPL_VAL' AND spl_code =E.SPL_CODE8),0,'N','Y') AS shcVal8,
		  DECODE((SELECT COUNT(1) FROM CUST_AIRL_SPL_CODE WHERE spl_type='SPL_VAL' AND spl_code =E.SPL_CODE9),0,'N','Y') AS shcVal9, 
		  D.AWB_DEST DEST,
		  D.CC_CODE CCCODE,
		  D.CONTENT,
		  D.AWB_RMK RMK,
		  D.AIRLN_RMK AWBAIRLRMK,
		  'N' CAR,
		  'N' Qt_bu,
		  'N' IMXRQS,
		  NULL DLVRQS,
		  'N' MSG_FLG,
		  NULL SHC,
		  'M'                           AS loadType, 
		  E.AWB_TYPE                    AS awbType,
		  F.car_created                 AS carCreated,
		  'M'                           AS loadType,
		  'M'                           AS oldloadType,
		  R.* FROM (SELECT 
		  B.AWB_NO     AS awbNo,
		  rtrim(SUBSTR(B.AWB_NO,1,3)  ||'-'  ||SUBSTR(B.AWB_NO,4), '-')     AS awbNoDisp,
		  TO_CHAR(B.AWB_DATE, 'DDMONYY') AS awbDate,
		  B.AWB_NO,
		  B.AWB_DATE,
		  C.tagPcs  AS awbPcs,
		  C.tagWt        AS awbWt,
		  C.CONTAINER_NO AS uldKey,
		  A.FLT_KEY                     AS flightKey,
		  TO_CHAR(A.FLT_DATE,'DDMONYY') AS arrDate
		FROM EDI_RESDIT_HD A
		JOIN EDI_RESDIT_AWB_DTL B ON B.TR_NO = A.TR_NO
		JOIN (SELECT TR_AWB_NO,CONTAINER_NO,SUM(tag_wt)   AS tagWt,COUNT(tag_no) AS tagPcs FROM EDI_RESDIT_TAG_DTL GROUP BY TR_AWB_NO,CONTAINER_NO) C ON C.TR_AWB_NO = B.TR_AWB_NO 
		WHERE A.flt_key =  #flightKey# AND A.flt_date  = TO_DATE(#arrDate#, 'DDMONYY')
		) R ,
		  IMP_CAR_AWB D,
		  AWB E,
		  imp_car_shp F
		WHERE 
		D.AWB_NO = R.AWB_NO
		AND D.AWB_DATE = R.AWB_DATE
		AND E.AWB_NO   = R.AWB_NO
		AND E.AWB_DATE =R.AWB_DATE
		AND F.AWB_NO = R.AWB_NO
		AND F.AWB_DATE = R.AWB_DATE
		AND F.FLT_KEY =  #flightKey#
		AND F.FLT_DATE = TO_DATE(#arrDate#, 'DDMONYY')
	</select>	
	<select id="getTagList" parameterClass="cargo.cms.imprt.bo.InBoundULDListBO" resultClass="cargo.cms.imprt.bo.InBoundULDListBO">
	SELECT distinct C.TAG_NO AS tagNo, C.TAG_WT AS tagWt

	FROM EDI_RESDIT_HD A,
	EDI_RESDIT_AWB_DTL B,
	EDI_RESDIT_TAG_DTL C,
	IMP_CAR_AWB D

	WHERE A.TR_NO = B.TR_NO
	AND B.TR_AWB_NO = C.TR_AWB_NO
	AND B.AWB_NO = D.AWB_NO
	AND TO_CHAR(B.AWB_DATE, 'DDMONYY') = TO_CHAR(D.AWB_DATE, 'DDMONYY')
	
	<isNotEmpty property="uldKey">
		AND C.CONTAINER_NO =#uldKey#
	</isNotEmpty>
	<isEmpty property="uldKey">
		AND C.CONTAINER_NO is null
	</isEmpty>
	AND A.FLT_KEY = #flightKey#
	AND TO_CHAR(A.FLT_DATE,'DDMONYY') = #arrDate#
	AND B.AWB_NO = #awbNo#
  	AND TO_CHAR(B.AWB_DATE,'DDMONYY') = #awbDate#
</select>
<select id="getUldCountByNestingId"  parameterClass="map"  resultClass="java.lang.Integer" >
		SELECT COUNT(A.NESTING_ID) AS COUNT FROM EDI_RESDIT_TAG_DTL A JOIN EDI_RESDIT_AWB_DTL B ON B.TR_AWB_NO=A.TR_AWB_NO
    	JOIN EDI_RESDIT_HD C ON C.TR_NO=B.TR_NO
    	WHERE A.CONTAINER_NO=#uldKey# AND C.FLT_KEY=#fltKey# AND C.FLT_DATE=TO_DATE(#fltDate#,'DDMONYY')
   	</select>

	<select id="getAWBContentForTransitControlCheckList"  parameterClass="map"  resultClass="java.lang.String" >
		select content from awb where awb_no=#awbNo# and awb_date=#awbDate#
	</select>
<!-- <update id="upd_imp_awb_resdit_sphcode" parameterClass="cargo.cms.imprt.bo.InBoundULDListBO">
		UPDATE AWB SET
			LM_USER_ID =  #userID#,
			AWB_RMK = DECODE(#awbRmk#,'NULL',null,NVL(#awbRmk#,AWB_RMK)),
			AIRLN_RMK = DECODE(#awbAirlRmk#,'NULL',null,NVL(#awbAirlRmk#,AIRLN_RMK)),
			LM_DATE  = SYSDATE
			
					,SPL_CODE1     = #shc1#, 
					SPL_CODE2     = #shc2#, 
					SPL_CODE3     = #shc3#,  
					SPL_CODE4     = #shc4#,  
					SPL_CODE5     = #shc5#,  
					SPL_CODE6     = #shc6#,  
					SPL_CODE7     = #shc7#,  
					SPL_CODE8     = #shc8#, 
					SPL_CODE9     = #shc9# 
				
	WHERE  AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') AND     
			AWB_NO   = #awbNo#
	</update>
	<update id="upd_imp_resdit_sphcode" parameterClass="cargo.cms.imprt.bo.InBoundULDListBO">
		UPDATE IMP_CAR_AWB SET
			LM_USER_ID =  #userID#,
			AWB_RMK = DECODE(#awbRmk#,'NULL',null,NVL(#awbRmk#,AWB_RMK)),
			WH_RMK = DECODE(#awbWhRmk#,'NULL',null,NVL(#awbWhRmk#,WH_RMK)),
			AIRLN_RMK = DECODE(#awbAirlRmk#,'NULL',null,NVL(#awbAirlRmk#,AIRLN_RMK)),
			LM_DATE  = SYSDATE
			
					,SPL_CODE1     = #shc1#, 
					SPL_CODE2     = #shc2#, 
					SPL_CODE3     = #shc3#,  
					SPL_CODE4     = #shc4#,  
					SPL_CODE5     = #shc5#,  
					SPL_CODE6     = #shc6#,  
					SPL_CODE7     = #shc7#,  
					SPL_CODE8     = #shc8#, 
					SPL_CODE9     = #shc9# 
				
	WHERE  AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') AND     
			AWB_NO   = #awbNo#
	</update> -->

<select id="fetchAWBTagListCardit" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" resultClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
			SELECT B.TAG_NO tagNo,
			  B.TAG_WT tagWt ,
			  '1' AS tagPcs,
			  #cntgFltKey# as cntgFltKey,
			  #cntgFltDate# as cntgFltDate,
			  #uldKey# as uldKey,
			  #awbNo# as awbNo,
			  #awbDate# as awbDate,
			  #lmUserId# as lmUserId
			FROM EDI_CARDIT_HD A
			JOIN EDI_CARDIT_TAG_DTL B
			ON A.TR_NO     = B.TR_NO
			WHERE A.AWB_NO = #awbNo#
			AND A.AWB_DATE = to_date(#awbDate#,'DDMONYY')
	</select>
	
	<select id="fetchAWBTagListResdit" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" resultClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
			SELECT B.TAG_NO tagNo, B.TAG_WT tagWt , '1' as tagPcs,
			  #cntgFltKey# as cntgFltKey,
			  #cntgFltDate# as cntgFltDate,
			  #uldKey# as uldKey,
			  #awbNo# as awbNo,
			  #awbDate# as awbDate,
			  #lmUserId# as lmUserId			 
			  FROM EDI_RESDIT_AWB_DTL A 
			  JOIN EDI_RESDIT_TAG_DTL B ON A.TR_AWB_NO = B.TR_AWB_NO 
			  JOIN EDI_RESDIT_HD C ON C.TR_NO = A.TR_NO
			  WHERE C.flt_key =  #fltKey# AND C.flt_date = TO_DATE(#fltDate#, 'DDMONYY')  AND B.CONTAINER_NO = #uldKey# AND A.AWB_NO = #awbNo# AND A.AWB_DATE = to_date(#awbDate#,'DDMONYY')
	</select>
	
	<select id="fetchAWBTagListResditBULK" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" resultClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" >
			SELECT B.TAG_NO tagNo, B.TAG_WT tagWt , '1' as tagPcs,
			  #cntgFltKey# as cntgFltKey,
			  #cntgFltDate# as cntgFltDate,
			  #uldKey# as uldKey,
			  #awbNo# as awbNo,
			  #awbDate# as awbDate,
			  #lmUserId# as lmUserId			 
			  FROM EDI_RESDIT_AWB_DTL A 
			  JOIN EDI_RESDIT_TAG_DTL B ON A.TR_AWB_NO = B.TR_AWB_NO 
			  JOIN EDI_RESDIT_HD C ON C.TR_NO = A.TR_NO
			  WHERE C.flt_key =  #fltKey# AND C.flt_date = TO_DATE(#fltDate#, 'DDMONYY')  AND B.CONTAINER_NO IS NULL AND A.AWB_NO = #awbNo# AND A.AWB_DATE = to_date(#awbDate#,'DDMONYY')
	</select>

	
	
	<select id="checkCarditPcWt" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" resultClass="java.lang.Integer" >
			SELECT count(1) as carditCnt
			FROM EDI_CARDIT_HD A WHERE A.AWB_NO = #awbNo# AND A.AWB_DATE = to_date(#awbDate#,'DDMONYY') AND A.TOT_NO_RECEPTACLE = #trfPcs# AND A.TOT_WT_RECEPTACLE = #trfWt#
	</select>
	
	<select id="checkResditPcWtUld"  parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO"   resultClass="java.lang.Integer">			
		  SELECT count(1) as resditCnt FROM EDI_RESDIT_AWB_DTL A 
		  JOIN (SELECT TR_AWB_NO, CONTAINER_NO, sum(tag_wt) as tagWt,COUNT(tag_no) as tagPcs FROM EDI_RESDIT_TAG_DTL group by  TR_AWB_NO, CONTAINER_NO) B ON A.TR_AWB_NO = B.TR_AWB_NO 
		  JOIN EDI_RESDIT_HD C ON C.TR_NO = A.TR_NO
		  WHERE C.flt_key = #fltKey# AND C.flt_date = TO_DATE(#fltDate#, 'DDMONYY') AND B.CONTAINER_NO = #uldKey# AND awb_no = #awbNo# and awb_date = to_date(#awbDate#,'DDMONYY')
      	  AND B.tagPcs = #trfPcs# AND  B.tagWt = #trfWt#
	</select>
	
	<select id="checkResditPcWtBulk"  parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO"   resultClass="java.lang.Integer">
		  SELECT count(1) as resditCnt FROM EDI_RESDIT_AWB_DTL A 
		  JOIN (SELECT TR_AWB_NO, CONTAINER_NO, sum(tag_wt) as tagWt,COUNT(tag_no) as tagPcs FROM EDI_RESDIT_TAG_DTL where CONTAINER_NO IS NULL group by  TR_AWB_NO, CONTAINER_NO) B ON A.TR_AWB_NO = B.TR_AWB_NO  
		  JOIN EDI_RESDIT_HD C ON C.TR_NO = A.TR_NO		   
	      	WHERE C.flt_key = #fltKey# AND C.flt_date = TO_DATE(#fltDate#, 'DDMONYY') AND awb_no = #awbNo# and awb_date = to_date(#awbDate#,'DDMONYY')
	      	AND B.tagPcs = #trfPcs# AND  B.tagWt = #trfWt#
	</select>
	
	<select id="checkPmanCreatedBySystem" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO" resultClass="java.lang.Integer" >
			SELECT count(1) as pmanCnt
			FROM EXP_PMANIFEST_AWB WHERE AWB_NO = #awbNo# AND AWB_DATE = to_date(#awbDate#,'DDMONYY') AND NVL(MANUAL_IND,'N') = 'N' AND CR_USER_ID = 'SYSTEM'  AND flt_key = #cntgFltKey# AND flt_date = TO_DATE(#cntgFltDate#, 'DDMONYY')
	</select>
	
	<delete id="deletePmanCreatedBySystem" parameterClass="cargo.cms.imprt.bo.TsnstCntrlChklstInOutAWBBO">
			delete EXP_PMANIFEST_AWB  WHERE  AWB_NO  =  #awbNo#  AND AWB_DATE =	TO_DATE(#awbDate#,'DDMONYY')  AND flt_key = #cntgFltKey# AND flt_date = TO_DATE(#cntgFltDate#, 'DDMONYY')
	</delete>

	<select id="getAwbHouseFlgInfo" parameterClass="cargo.cms.imprt.bo.CarShpBO" resultClass="java.lang.String">
		SELECT HOUSE_FLG AS houseFlg FROM IMP_CAR_AWB WHERE AWB_NO = #awbNo# AND AWB_DATE = to_date(#awbDate#,'DDMONYY') AND ROWNUM=1
	</select>
	 
	<select id="imp_ctrm_get_trm_tags_by_awb" parameterClass="cargo.cms.imprt.bo.TrmBO" resultClass="cargo.cms.imprt.bo.TrmBO" >
		SELECT hinv.HAWB_NO hawbNo, hinv.STRG_PCS hawbPc, hinv.STRG_WT hawbWt FROM HAWB_INVENTORY hinv
		WHERE hinv.SEQ_NO IN (SELECT inv.SEQ_NO FROM AWB_INVENTORY inv WHERE inv.AWB_NO = #awbNo# AND inv.AWB_DATE = #awbDate#
		)
	</select>
	
	<select id="get_carrier_mail_as_cargo"  parameterClass="map"  resultClass="java.lang.String">
		SELECT DECODE(COUNT(1), 0, 'N', 'Y') as mailAsCargo FROM MAST_CARRIER where CODE = #CARRIERCODE# and NVL(MAIL_AS_CARGO,'X') = 'Y'
	 </select>
	 
	 <insert id="imp_ctrm_trm_hawb" parameterClass="cargo.cms.imprt.bo.TrmBO" >
		INSERT
		INTO IMP_TRM_AWB_HAWB
		  (
		    TRM_NO,
		    DOC_LINE_NO,
		    HAWB_NO,
		    AWB_NO,
		    AWB_DATE,
		    PC,
		    WT,
		    CR_USER_ID,
		    CR_DATE,
		    LM_USER_ID,
		    LM_DATE
		  )
		  VALUES
		  (
		    #trmNo#,
		    #doclineNo#,
		    #hawbNo#,
		    #awbNo#,
		    TO_DATE(#awbDate#,'DDMONYY'),
		    #hawbPc#,
		    #hawbWt#,
		    #lmUser#,
		    SYSDATE,
		    #lmUser#,
		    SYSDATE
		  )
	</insert>
	
	<update id="imp_ctrm_hawb_owner_upd" parameterClass="cargo.cms.imprt.bo.TrmBO" >
		UPDATE AWB_OWNER_HAWB set PCS = PCS + #hawbPc# , WT = WT + #hawbWt#,  LM_USER_ID = #lmUser# , LM_DATE = sysdate
		WHERE HAWB_NO = #hawbNo# AND AWB_NO = #awbNo# AND AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') and carr_code=#carrCode#
	</update>
	
	<insert id="imp_ctrm_hawb_owner_ins" parameterClass="cargo.cms.imprt.bo.TrmBO" >
		INSERT INTO AWB_OWNER_HAWB (SEQ_NO,HAWB_NO,AWB_NO,AWB_DATE,CARR_CODE,PCS,WT,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE) 
       	VALUES (#hawbSeqNo#,#hawbNo#,#awbNo#,#awbDate#,#carrCode#,#hawbPc#,#hawbWt#,#lmUser#,sysdate,#lmUser#,sysdate)   
	</insert>
	
	<update id="imp_ctrm_hawb_owner_trfCarr_upd" parameterClass="cargo.cms.imprt.bo.TrmBO" >
		UPDATE AWB_OWNER_HAWB set PCS = PCS - #hawbPc# , WT = WT - #hawbWt#,  LM_USER_ID = #lmUser# , LM_DATE = sysdate
        WHERE HAWB_NO = #hawbNo# AND AWB_NO = #awbNo# AND AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
	</update>
	
	<update id="imp_ctrm_recv_hawb_hse_flg_upd" parameterClass="cargo.cms.imprt.bo.TrmBO" >
		UPDATE AWB SET HOUSE_FLG = #houseFlag# WHERE AWB_NO = #awbNo# AND AWB_DATE = #awbDate#
	</update>
	
	<select id="imp_ctrm_get_awb_date" parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT PKG_COMMON.GET_AWB_DATE(#awbNo#,'') FROM DUAL
	</select>
	
	<select id="imp_ctrm_get_awb_tags" parameterClass="cargo.cms.imprt.bo.TrmBO" resultClass="cargo.cms.imprt.bo.TrmBO">
		SELECT ct.TAG_NO hawbNo, ct.TAG_WT hawbWt, 1 hawbPc  FROM EDI_CARDIT_TAG_DTL ct
      	INNER JOIN EDI_CARDIT_HD ch ON ch.TR_NO = ct.TR_NO 
      	WHERE ch.AWB_NO = #awbNoSearch# AND ch.AWB_DATE = TO_DATE(PKG_COMMON.GET_AWB_DATE(ch.AWB_NO,''),'DDMONYY')

	</select>
	
	<select id="imp_ctrm_get_awb_inv" parameterClass="cargo.cms.imprt.bo.TrmBO" resultClass="cargo.cms.imprt.bo.TrmBO">
		SELECT inv.LOC_CODE invLoc,inv.LOCN_PCS invLocPc,inv.LOCN_WT invLocWt,inv.SEQ_NO invSeqNo,
		PKG_COMMON.GET_AWB_DATE(#awbNoSearch#,'') pawbDate,#awbNoSearch# pawbNo FROM AWB_INVENTORY inv
		WHERE inv.AWB_NO = #awbNo# AND inv.AWB_DATE = #awbDate#

	</select>
	
	<!-- <select id="checkULDWithHouse" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		SELECT count(*) FROM awb_inventory uawb, AWB awb 
		WHERE uawb.awb_no = awb.awb_no AND uawb.awb_DATE = awb.awb_DATE and NVL(awb.house_flg,'N') = 'Y' and
		uawb.uld_key = #uldKey#

	</select> -->
	
	 
	 <!-- <delete id="imp_ctrm_hawb_inv_delete" parameterClass="cargo.cms.imprt.bo.TrmBO">
			DELETE FROM HAWB_INVENTORY WHERE SEQ_NO = 
			(SELECT SEQ_NO FROM AWB_INVENTORY WHERE AWB_NO = #awbNo# AND AWB_DATE = #awbDate#)
	</delete> -->
        <select id="getTagListForUnpostCT" parameterClass="cargo.cms.imprt.bo.TrmBO" resultClass="cargo.cms.imprt.bo.TrmBO">
		SELECT TRM_NO AS trmNo, DOC_LINE_NO AS doclineNo, a.hawb_no  AS hawbNo, PC  AS hawbPc, WT  AS hawbWt
		FROM imp_trm_awb_hawb A WHERE TRM_NO = #trmNo#
	</select>
	<select id="getLocationTagList" parameterClass="cargo.cms.imprt.bo.TrmBO" resultClass="cargo.cms.imprt.bo.TrmBO">
		SELECT HAWB_NO AS hawbNo, STRG_PCS  AS hawbPc, STRG_WT  AS hawbWt
		FROM hawb_inventory  WHERE SEQ_NO = #seqNo#
	</select>
	
	<insert id="ins_trm_detail_hawbInvtory" parameterClass="cargo.cms.imprt.bo.TrmBO">
	    Insert into HAWB_INVENTORY (SEQ_NO,HAWB_NO,STRG_PCS,STRG_WT,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE) 
		values (#seqNo#,#hawbNo#,#locationPcs#,#locationWt#,#lmUser#,sysdate,#lmUser#,sysdate)     	
	</insert>
	
	<update id="upd_trm_hawbInvtory_rem_pc" parameterClass="cargo.cms.imprt.bo.TrmBO">
		UPDATE HAWB_INVENTORY SET
			STRG_PCS = STRG_PCS- #locationPcs#,
			STRG_WT =STRG_WT - #locationWt#,
			lm_user_id = #lmUser#,
			lm_date = sysdate
		WHERE SEQ_NO = #seqNo# AND HAWB_NO = #hawbNo#
	</update>
	
	<select  id="getTrmHawbInvLocationPcWt" parameterClass="cargo.cms.imprt.bo.TrmBO" resultClass="java.lang.String">
    	 SELECT NVL(STRG_PCS,0)||'/'||NVL(STRG_WT,0) 
		 FROM HAWB_INVENTORY
	     WHERE SEQ_NO = #seqNo# AND HAWB_NO = #hawbNo#
	</select>
	
	<delete id="deleteTrmHawbInv" parameterClass="cargo.cms.imprt.bo.TrmBO">
		DELETE FROM hawb_inventory WHERE SEQ_NO = #seqNo# AND HAWB_NO = #hawbNo#
	</delete>
	
	<delete  id="del_trm_hawb_Invtory" parameterClass="cargo.cms.imprt.bo.TrmBO">
		 DELETE FROM hawb_inventory where seq_no in (select seq_no from awb_inventory where awb_no = #awbNo# and awb_date = #awbDate# and TRM_NO = #trmNo#)
  	</delete>
  	
  	<select  id="isAWBHouseFlag" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
    	 SELECT count(*) FROM AWB awb WHERE awb.awb_no=#AWB_NO# AND awb.awb_DATE=to_date(#AWB_DATE#,'DDMONYY') and NVL(awb.house_flg,'N') = 'Y' 
	</select>
	
	<insert id="ins_hawbInvtory_UnpostCT" parameterClass="map">
		Insert into HAWB_INVENTORY (SEQ_NO,HAWB_NO,STRG_PCS,STRG_WT,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE)
		values (#seqNo#,#hawbNo#,#locationPcs#,#locationWt#,#lmUser#,sysdate,#lmUser#,sysdate)  
	</insert>	
	
	<update id="imp_unpost_hawb_owner_recvCarr_upd" parameterClass="cargo.cms.imprt.bo.TrmBO" >
		UPDATE AWB_OWNER_HAWB set PCS = PCS - #hawbPc# , WT = WT - #hawbWt#,  LM_USER_ID = #lmUser# , LM_DATE = sysdate
        WHERE HAWB_NO = #hawbNo# AND AWB_NO = #awbNo# AND AWB_DATE = TO_DATE(#awbDate#,'DDMONYY') AND carr_code = #recevCarrier#
	</update>
	
	<select id="getAccetTransferCargoCTInfoListforCrossTerminalHawb" parameterClass="cargo.cms.imprt.bo.TrmBO" resultClass="cargo.cms.imprt.bo.TrmBO" >
      select 'Y' sel,tab3.trm_no,tab3.hawb_no hawbNo,tab3.pc hawbPc,tab3.wt hawbWt from IMP_trm_hd tab1, IMP_trm_DTL tab2, imp_trm_awb_hawb tab3
      where tab1.TRM_NO = tab2.TRM_NO and tab2.TRM_NO = tab3.TRM_NO and tab3.TRM_NO=#trmNo# and tab1.status = 'RETRIEVED'  
 	</select> 
 	
 	<update id="imp_ctrm_scan_tag_upd" parameterClass="cargo.cms.imprt.bo.TrmBO" >
		UPDATE IMP_XPS_OBC_MAIL SET TAG_NO = NVL(SCAN_TAG_NO, TAG_NO), LM_DATE = SYSDATE, LM_USER_ID = #lmUser#
		WHERE AWB_NO = #awbNo# AND AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
	</update>
	
	<delete id="delete_hawb_strg" parameterClass="cargo.cms.imprt.bo.TransformAWBBO">
		DELETE IMP_HAWB_STRG_DTL
		WHERE AWB_NO = #oldAwbNo# AND AWB_DATE = to_date(#oldAwbDate#,'DDMONYY')
	</delete>
	
	<delete id="delHAWBStorageDtlDummy" parameterClass="cargo.cms.imprt.bo.TrmBO">
	  DELETE FROM IMP_HAWB_STRG_DTL
	  WHERE AWB_NO = #awbNo# AND AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
	</delete>
	
	<delete id="delete_edi_fhl_for_scan_tag" parameterClass="cargo.cms.imprt.bo.TrmBO">
		DELETE FROM EDI_FHL
		WHERE AWB_NO = #awbNo# AND AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
	</delete>
	
	<delete id="delete_edi_fhl_hawb_for_scan_tag" parameterClass="cargo.cms.imprt.bo.TrmBO">
		DELETE FROM EDI_FHL_HAWB
		WHERE TR_NO = (SELECT TR_NO FROM EDI_FHL WHERE AWB_NO = #awbNo# AND AWB_DATE = TO_DATE(#awbDate#,'DDMONYY'))
	</delete>
	
	<delete id="mast_hawb_for_scan_tag" parameterClass="cargo.cms.imprt.bo.TrmBO">
	  DELETE FROM MAST_HAWB
	  WHERE AWB_NO = #awbNo# AND AWB_DATE = TO_DATE(#awbDate#,'DDMONYY')
	</delete>
<select id="validateTransitMail" parameterClass="map" resultClass="java.lang.String" >
   		SELECT CATALOG FROM AWB WHERE AWB_NO=#awbNo# AND AWB_DATE=TO_DATE(#awbDate#,'DDMONYY')
	</select>
	
	<select id="sqlamenddeleteawbdetailstrc" parameterClass="cargo.cms.imprt.bo.PreManifestSearchBO"  resultClass="cargo.cms.imprt.bo.PrePackCargoBO">
		SELECT rownum as recordID,V.AWB_NO as awbno, 
		CONCAT(CONCAT(SUBSTR(V.AWB_NO,0,3),'-'),SUBSTR(V.AWB_NO,4)) as awbnoDispaly, 
		to_char(V.AWB_DATE,'DDMONYY') as awbdate, 
		V.FLT_KEY as fltNo, to_char(V.FLT_DATE,'DDMONYY') as fltDate, 
		V.PMAN_PCS as preManfPc, V.PMAN_WT as preManfWt
		FROM   V_EXP_PMAN_AWB_FLT V
			<isNotEmpty property="loginCarrier">
				join flt_opr t1
				on t1.flt_key = v.flt_key
				and t1.sch_date = v.flt_date
				and t1.flt_type = 'D'
			</isNotEmpty>
		WHERE  AWB_NO = #awb1#
		AND AWB_DATE = to_char((SELECT AWB_DATE FROM AWB WHERE AWB_NO =#awb1# AND (AWB_TYPE='E' OR AWB_TYPE='T') AND AWB_CLOSED_YN='N'),'DDMONYY')
		AND PMAN_PCS > 0
		<isNotEmpty property="loginCarrier">
	       	AND   (t1.CARR_CODE = #loginCarrier#
					OR t1.CARR_CODE IN (SELECT CARR_CODE FROM MAST_CARR_GRP WHERE GRP_CARR_CODE = #loginCarrier#))
		</isNotEmpty>
	</select>
	<select id="sqlamenddeleteawbheadertrc" parameterClass="cargo.cms.imprt.bo.PrePackCargoBO"  resultClass="cargo.cms.imprt.bo.PreManifestAWBBO">
			SELECT A.CATALOG catalog,EPA.AWB_NO as awbNo, 
			CONCAT(CONCAT(SUBSTR(EPA.AWB_NO,0,3),'-'),SUBSTR(EPA.AWB_NO,4)) as awbNoDisplay, 
			to_char(EPA.AWB_DATE,'DDMONYY') as awbDate, 
			EPA.DEST as dest, EPA.AWB_PCS as awbPCs, EPA.AWB_WT as awbWt, 
			EPA.NON_PMAN_PCS as totalNonPreManfPc, EPA.NON_PMAN_WT as totalNonPreManfWt, 
       		FLT_KEY as fltNo, to_char(FLT_DATE,'DDMONYY') as fltDate, 
       		to_char(EPA.EST_DATE,'DDMONYY') as fltEstDate,
       		PKG_COMMON.get_flt_eta(EPA.FLT_KEY, EPA.FLT_DATE, 'D', 'DD') as fltEstTime, 
       		EPA.FLT_PORTS as fltPort,EPA.CARR_CODE as fltpfx,EPA.FLT_NO as fltsfx, EPA.car_yn carCreated
			FROM   V_EXP_PMAN_AWB EPA JOIN AWB A ON A.AWB_NO=EPA.AWB_NO AND A.AWB_DATE=EPA.AWB_DATE
			WHERE  EPA.AWB_NO =#awbno#
				AND EPA.AWB_DATE =to_date(#awbdate#,'DDMONYY')
				AND EPA.FLT_KEY =#fltNo# 
				AND EPA.FLT_DATE =to_date(#fltDate#,'DDMONYY')
	</select>
	<select id="sqlamenddeletebulkppkheadertrc" parameterClass="cargo.cms.imprt.bo.PrePackCargoBO"  resultClass="cargo.cms.imprt.bo.PreManifestAWBBO">
			SELECT PMAN_PCS AS premanfbulkpc,
		    NON_PMAN_PCS AS nonpremanfbulkpc,
		    PMAN_WT AS premanfbulkwt,
		    NON_PMAN_WT AS nonpremanfbulkwt,
        	PMAN_PCS AS premanfppkpc,
        	NON_PMAN_PCS  AS nonpremanfppkpc,
        	PMAN_WT AS premanfppkwt,
        	NON_PMAN_WT AS nonpremanfppkwt 
			FROM  AWB 
			WHERE  
		    AWB_NO =#awbno#
		    AND AWB_DATE =to_date(#awbdate#,'DDMONYY')
	</select>	
	<select id="sqlamenddeletebulkdetailstrc" parameterClass="cargo.cms.imprt.bo.PrePackCargoBO"  resultClass="cargo.cms.imprt.bo.BulkCargoBO">
				SELECT ROWNUM, UNLDG_PT as bulk_UnldgPT,
						UNLDG_PT as bulk_UnldgPT_DB, 
						GROUP_NO as bulk_Grp_No, 
						(p.PMAN_PCS) as bulk_Pc, 
						(p.PMAN_WT) as bulk_Wt,
						UNASSIGNED_BULK_PCS as unAsgnbulk_Pc, 
						UNASSIGNED_BULK_WT as unAsgnbulk_Wt,  
						p.PMAN_PCS as manfBulkPc, 
						p.PMAN_WT as manfBbulkWt,	
						(NON_PMAN_PCS) as nonPman_Pc, 
						(NON_PMAN_WT) as nonPman_Wt,  
						MAN_RMK as bulk_ManfRem, 
						BLDUP_INSTR as bulk_BuldpInstr ,
						(ASSIGNED_BULK_PCS) as assigned_bulk_pcs,
						(ASSIGNED_BULK_WT) as assigned_bulk_wt,
						p.AWB_NO as awbNo,
						to_char(p.AWB_DATE,'DDMONYY') as awbDate ,
						FLT_KEY as fltNo,
						to_char(FLT_DATE,'DDMONYY') as fltDate,
						CAR_YN carCreated ,
						p.bulk_pcs oldBulkPcs,
						p.bulk_wt oldBulkWt,
						(NVL(p.ppk_pcs,0)+NVL(p.mix_pcs,0)) oldBupPcs,
						(NVL(p.ppk_wt,0)+NVL(p.mix_wt,0)) oldBupWt,
						( decode(a.spl_code1, null, '', a.spl_code1 || decode(a.spl_code2, null, '', '/'))
		               		|| decode(a.spl_code2, null, '', a.spl_code2 || decode(a.spl_code3, null, '', '/'))
		               		|| decode(a.spl_code3, null, '', a.spl_code3 || decode(a.spl_code4, null, '', '/'))
		              		|| decode(a.spl_code4, null, '', a.spl_code4 || decode(a.spl_code5, null, '', '/'))
		               		|| decode(a.spl_code5, null, '', a.spl_code5 || decode(a.spl_code6, null, '', '/'))
		              		|| decode(a.spl_code6, null, '', a.spl_code6 || decode(a.spl_code7, null, '', '/'))
		               		|| decode(a.spl_code7, null, '', a.spl_code7 || decode(a.spl_code8, null, '', '/'))
		               		|| decode(a.spl_code8, null, '', a.spl_code8)) splCode
			FROM   EXP_PMANIFEST_AWB p
			join awb a on a.awb_no = p.awb_no and a.awb_date = p.awb_date
			WHERE  p.AWB_NO = #awbno#
			AND   to_char(p.AWB_DATE,'DDMONYY') =to_date(#awbdate#,'DDMONYY')
			AND    FLT_KEY = #fltNo#
			AND    FLT_DATE =to_date(#fltDate#,'DDMONYY')
		
	</select>	
	
	<delete id="sqldeleteawbbulkdetailstrc" parameterClass="cargo.cms.imprt.bo.BulkCargoBO" >
		DELETE FROM EXP_PMANIFEST_AWB 
			WHERE
			  AWB_NO =#awbNo#
			  AND AWB_DATE = #awbDate#
			  AND FLT_KEY = #fltNo#
			  AND FLT_DATE = #fltDate#
			  AND UNLDG_PT = #bulk_UnldgPT_DB#
	</delete>
	
	<update id="sqlupdatelmuserinexppmantrc" parameterClass="cargo.cms.imprt.bo.BulkCargoBO" >
			UPDATE EXP_PMANIFEST_AWB SET LM_USER_ID = #userID# 
			WHERE
			  AWB_NO =#awbNo#
			  AND AWB_DATE = #awbDate#
			  AND FLT_KEY = #fltNo#
			  AND FLT_DATE = #fltDate#
			  AND UNLDG_PT = #bulk_UnldgPT_DB#
	</update>
	
	<select id="sqlamenddelete_flt_leg_details1trc" parameterClass="map"  resultClass="cargo.cms.imprt.bo.BulkCargoBO">
		select leg_status as portClosed,a.OFF_POINT as bulk_UnldgPT from flt_opr_leg a ,flt_opr b
			 where
				 a.tr_no = b.tr_no
				 and a.flt_key= b.flt_key
				 and a.sch_date = b.sch_date
				 and a.flt_key=#fltkey#
				 and a.flt_type = 'D'
				 and to_char(a.sch_date,'DDMONYY') =to_date(#schdate#,'DDMONYY')
				 
	</select>
	
	<select id="imp_uld_checkin_ttsl"  parameterClass="cargo.cms.imprt.bo.ULDCheckInBO"  resultClass="cargo.cms.imprt.bo.ULDCheckInBO">
	 SELECT *
			   FROM
			  (SELECT dtl.CARR_CODE                                    AS carrierCode ,
				( case when
				(SELECT count(1) 
				FROM imp_ramp_dolly_hd a,
				imp_ramp_dolly_dtl b
				WHERE b.uld_key= dtl.ULD_KEY and 
				a.ho_no is not null  
				AND a.dolly_id =b.dolly_id
				AND a.FLT_KEY=b.FLT_KEY
        		AND a.FLT_DATE=b.FLT_DATE
				AND a.flt_key  = dtl.FLT_KEY 
				AND a.flt_date =dtl.FLT_DATE
				)>0 then 'Y' else 'N' end ) as handoverInd,
        (CASE WHEN (SELECT COUNT(1) FROM IMP_RAMP_TI_HD hd WHERE hd.FLT_KEY=dtl.FLT_KEY  AND hd.FLT_DATE=dtl.FLT_DATE AND DOLLY_ID=#tripNumber#) > 0 THEN 'Y' ELSE 'N' END) AS actualTransfer,
			    dtl.TR_NO                                              AS trNo        ,
			    dtl.DOC_LINE_NO                                        AS docLineNo   ,
			    dtl.FLT_NO                                             AS flightNo    ,
			    dtl.FLT_KEY                                            AS flightKey   ,
			    TO_CHAR(dtl.FLT_DATE,'DDMONYY')                        AS flightDate  ,
			    dtl.ULD_KEY                                            AS uldKey      ,			    
			    dtl.LOC_CODE                                           AS locCode,
			    dtl.DAM_IND											   AS damInd      ,
			    dtl.EMPTY_IND                                          AS empty       ,
			    dtl.EIC_IND                                            AS eic         ,
			    dtl.HT                                           	   AS ht          ,
			    dtl.CONTR                                            AS contour     ,
			    dtl.RMK                                                AS remark      ,
			    dtl.RHO_STAFF 										   AS rhoStaffId,
			    TO_CHAR(dtl.LM_DATE , 'DDMONYY HH24:MI:SS') 		   AS lastModDate,
			    (select MAX(ULD_IMAGE_NAME) from ULD_IMAGE where ULD_KEY=dtl.ULD_KEY) AS transactionId,
			    'Y'													   AS updateRecord,
			    inb.FFM_IND                                            AS ffmInd      ,
			    inb.CPM_IND                                            AS cpmInd      ,	
			    PKG_IMP.fun_get_ho_area(dtl.FLT_KEY,dtl.FLT_DATE,dtl.ULD_KEY) as plannedHoAreaFFMCPM,			  				    	    
			    (select TRF_TYPE from v_ddt_DTL where FLT_KEY = dtl.FLT_KEY and FLT_DATE = dtl.FLT_DATE and ULD_KEY = dtl.ULD_KEY and rowNum = 1) AS transferType,
			    PKG_COMMON.get_flt_ata(dtl.FLT_KEY, dtl.FLT_DATE, 'A','DD') AS ata         ,
			    (SELECT CODE_DESC FROM MAST_CODE_DTL WHERE  CODE  = f.WTHR_COND AND CODE_TYPE='WTH_CONDN') AS weatherCondition,			   	 
				m.h_cont_ind as hcontainer,				 
			    DECODE(flt.RAMP_COMPL_YN,'Y','Y','N')  AS rampCompleteStatus,				    
			    NVL(dtl.CHKIN_YN,'N') AS actualCheckIn           ,
			    (CASE WHEN (nvl(DOLLYDTL.reject_ind,'N') = 'Y' OR DOLLYDTL.RTN_USER IS NOT NULL) THEN 'N' ELSE 'Y' END ) AS checkInStatus,
			    dtl.SURPLUS_IND AS surPlusInd,
				uld.HANDLING_MODE									   AS handlingMode,
				uld.TRANSIT_IND 									   AS transitInd,	
			  NULL                             AS defContr, 
				CASE WHEN (m.h_cont_ind='Y') THEN '1'
		        ELSE CASE  WHEN  dtl.EMPTY_IND='N'  THEN '2'
		        ELSE CASE  WHEN  dtl.EIC_IND='Y'  THEN '3'
		        ELSE CASE  WHEN  dtl.EMPTY_IND='Y'  THEN '4'
		        END END END END as displayOrder,
		        nvl(DOLLYDTL.reject_ind,'N') as rejectInd,
                DOLLYDTL.reject_rmk as rejectRmk
			   	FROM IMP_RAMP_CHK_DTL dtl
			    join FLT_OPR f on f.FLT_TYPE  = 'A' and f.FLT_KEY = dtl.FLT_KEY and TO_CHAR(f.SCH_DATE,'DDMONYY') = TO_CHAR(dtl.FLT_DATE,'DDMONYY')
          JOIN IMP_RAMP_DOLLY_HD DOLLYHD ON DOLLYHD.FLT_KEY = f.FLT_KEY AND DOLLYHD.FLT_DATE = f.SCH_DATE
          JOIN IMP_RAMP_DOLLY_DTL DOLLYDTL ON DOLLYDTL.DOLLY_ID = DOLLYHD.DOLLY_ID AND DOLLYDTL.FLT_KEY = DOLLYHD.FLT_KEY AND DOLLYDTL.FLT_DATE = DOLLYHD.FLT_DATE AND DOLLYDTL.ULD_KEY = dtl.ULD_KEY
          left join MAST_ULD_TYPE m  on m.code = dtl.uld_type
				left join flt_opr_events flt on TO_CHAR(flt.SCH_DATE,'DDMONYY') = TO_CHAR(dtl.FLT_DATE,'DDMONYY') and flt.RAMP_COMPL_YN = 'Y' and flt.FLT_TYPE = 'A' AND flt.CARR_CODE = dtl.CARR_CODE AND flt.FLT_NO = dtl.FLT_NO
        		LEFT JOIN IMP_RAMP_INB_CHK_DTL inb on inb.FLT_KEY = dtl.FLT_KEY AND TO_CHAR(inb.FLT_DATE,'DDMONYY') = TO_CHAR(dtl.FLT_DATE,'DDMONYY') AND inb.ULD_KEY = dtl.ULD_KEY
				LEFT JOIN IMP_ULD_LIST uld on uld.FLT_KEY=dtl.FLT_KEY AND TO_CHAR(uld.FLT_DATE,'DDMONYY') = TO_CHAR(dtl.FLT_DATE,'DDMONYY') AND uld.ULD_KEY=dtl.ULD_KEY
				
        	    WHERE				  
			   	dtl.FLT_NO    = #flightNo#
			  	AND dtl.CARR_CODE = upper(#carrierCode#)
			  	AND TO_CHAR(dtl.FLT_DATE,'DDMONYY') = #flightDate#		
          AND DOLLYHD.DOLLY_ID=#tripNumber#

			UNION ALL
			   
			    SELECT 
          dtl.CARR_CODE                                    AS carrierCode ,
          ( case when
				(SELECT count(1) 
				FROM imp_ramp_dolly_hd a,
				imp_ramp_dolly_dtl b
				WHERE b.uld_key= dtl.ULD_KEY and 
				a.ho_no is not null  
				AND a.dolly_id =b.dolly_id
				AND a.flt_key  = dtl.FLT_KEY 
				AND a.flt_date =dtl.FLT_DATE
				)>0 then 'Y' else 'N' end ) as handoverInd,
        (CASE WHEN (SELECT COUNT(1) FROM IMP_RAMP_TI_HD hd WHERE hd.FLT_KEY=dtl.FLT_KEY  AND hd.FLT_DATE=dtl.FLT_DATE AND DOLLY_ID=#tripNumber#) > 0 THEN 'Y' ELSE 'N' END) AS actualTransfer,
			    dtl.TR_NO                                              AS trNo        ,
			    dtl.DOC_LINE_NO                                        AS docLineNo   ,
			    dtl.FLT_NO                                             AS flightNo    ,
			    dtl.FLT_KEY                                            AS flightKey   ,
			    TO_CHAR(dtl.FLT_DATE,'DDMONYY')                        AS flightDate  ,
			    dtl.ULD_KEY                                            AS uldKey      ,			    
			    ''			                                           AS locCode     ,
			    DOLLYDTL.DAM_IND											   AS damInd      ,
			    chk.EMPTY_IND                                          AS empty       ,
			    chk.EIC_IND                                            AS eic         ,
			    chk.HT                                           	   AS ht          ,
         		case when (uld.handling_mode in('NBK','PPK') 
         			and (select count(1) from v_ddt_dtl v join awb a on a.awb_no=v.awb_no and a.awb_date=v.awb_date where v.flt_key=dtl.flt_key 
         					and v.flt_date=dtl.flt_date and v.uld_key=dtl.uld_key and a.awb_type='T')>0) 
         		then  NVL(edi.cntr,chk.CONTR)  else chk.CONTR end AS contour,			   
			    dtl.RMK                                                AS remark      ,
			    chk.RHO_STAFF 										   AS rhoStaffId,
			    TO_CHAR(dtl.LM_DATE , 'DDMONYY HH24:MI:SS') 		       AS lastModDate,
			    (select MAX(ULD_IMAGE_NAME) from ULD_IMAGE where ULD_KEY=dtl.ULD_KEY) AS transactionId,
			    'Y'													   AS updateRecord,
			    dtl.FFM_IND                                            AS ffmInd      ,
			    dtl.CPM_IND                                            AS cpmInd      ,	
			    PKG_IMP.fun_get_ho_area(dtl.FLT_KEY,dtl.FLT_DATE,dtl.ULD_KEY) as plannedHoAreaFFMCPM,		    						
			    (select TRF_TYPE from v_ddt_DTL where FLT_KEY = dtl.FLT_KEY and FLT_DATE = dtl.FLT_DATE and ULD_KEY = dtl.ULD_KEY and rowNum = 1) AS transferType,				
			    PKG_COMMON.get_flt_ata(dtl.FLT_KEY, dtl.FLT_DATE, 'A', 'DD') AS ata,
			    (SELECT CODE_DESC FROM MAST_CODE_DTL WHERE  CODE  = f.WTHR_COND AND CODE_TYPE='WTH_CONDN') AS weatherCondition,				   	 
				m.h_cont_ind 											as hcontainer,				 
			    DECODE(flt.RAMP_COMPL_YN,'Y','Y','N')  					AS rampCompleteStatus,		
			    NVL(chk.CHKIN_YN,'N') 									AS actualCheckIn,
			    (CASE WHEN (nvl(DOLLYDTL.reject_ind,'N') = 'Y' OR DOLLYDTL.RTN_USER IS NOT NULL) THEN 'N' ELSE 'Y' END ) AS checkInStatus,
			    chk.SURPLUS_IND          								AS surPlusInd,
				uld.HANDLING_MODE									    AS handlingMode,
				uld.TRANSIT_IND 									    AS transitInd,				
				edi.CNTR                                                AS defContr,	
				CASE WHEN (m.h_cont_ind='Y') THEN '1'
	            ELSE CASE  WHEN  chk.EMPTY_IND='N'  THEN '2'
	            ELSE CASE  WHEN  chk.EIC_IND='Y'  THEN '3'
	            ELSE CASE  WHEN  chk.EMPTY_IND='Y'  THEN '4'
	            END END END END as displayOrder,
              nvl(DOLLYDTL.reject_ind,'N') as rejectInd,
              DOLLYDTL.reject_rmk as rejectRmk
			    FROM IMP_RAMP_INB_CHK_DTL dtl
			    join FLT_OPR f on f.FLT_TYPE  = 'A' and f.FLT_KEY = dtl.FLT_KEY and TO_CHAR(f.SCH_DATE,'DDMONYY') = TO_CHAR(dtl.FLT_DATE,'DDMONYY')
          JOIN IMP_RAMP_DOLLY_HD DOLLYHD ON DOLLYHD.FLT_KEY = F.FLT_KEY AND DOLLYHD.FLT_DATE = F.SCH_DATE
          JOIN IMP_RAMP_DOLLY_DTL DOLLYDTL ON DOLLYDTL.DOLLY_ID = DOLLYHD.DOLLY_ID AND DOLLYDTL.FLT_KEY = DOLLYHD.FLT_KEY AND DOLLYDTL.FLT_DATE = DOLLYHD.FLT_DATE AND DOLLYDTL.ULD_KEY = dtl.ULD_KEY
 
				left join MAST_ULD_TYPE m  on m.code = dtl.uld_type
				left join flt_opr_events flt on TO_CHAR(flt.SCH_DATE,'DDMONYY') = TO_CHAR(dtl.FLT_DATE,'DDMONYY') and flt.RAMP_COMPL_YN = 'Y' and flt.FLT_TYPE = 'A' AND flt.CARR_CODE = dtl.CARR_CODE AND flt.FLT_NO = dtl.FLT_NO
				LEFT JOIN IMP_RAMP_CHK_DTL chk on chk.FLT_KEY = dtl.FLT_KEY AND TO_CHAR(chk.FLT_DATE,'DDMONYY') = TO_CHAR(dtl.FLT_DATE,'DDMONYY') AND chk.ULD_KEY = dtl.ULD_KEY
				LEFT JOIN IMP_ULD_LIST uld on uld.FLT_KEY=dtl.FLT_KEY AND TO_CHAR(uld.FLT_DATE,'DDMONYY') = TO_CHAR(dtl.FLT_DATE,'DDMONYY') AND uld.ULD_KEY=dtl.ULD_KEY
				LEFT JOIN EDI_CPM_DTL edi on edi.FLT_KEY=dtl.FLT_KEY AND TO_CHAR(edi.FLT_DATE,'DDMONYY') = TO_CHAR(dtl.FLT_DATE,'DDMONYY') AND edi.ULD_KEY=dtl.ULD_KEY 				   
			    WHERE 		  
			    dtl.ULD_KEY NOT IN
			    (SELECT ULD_KEY
			     FROM IMP_RAMP_CHK_DTL
			     WHERE TR_NO = dtl.TR_NO
			     AND CHKIN_YN  = 'Y'
			    )
			    AND dtl.FLT_NO    = #flightNo#
			    AND dtl.CARR_CODE = upper(#carrierCode#)
			    AND TO_CHAR(dtl.FLT_DATE,'DDMONYY')  = #flightDate#	
			     AND DOLLYHD.DOLLY_ID=#tripNumber#
			         UNION ALL
   SELECT F.CARR_CODE AS carrierCode ,
    (
    CASE
      WHEN (SELECT COUNT(1)
        FROM imp_ramp_dolly_hd a,
          imp_ramp_dolly_dtl b
        WHERE b.uld_key= B.ULD_KEY
        AND a.ho_no   IS NOT NULL
        AND a.dolly_id =b.dolly_id
        AND a.flt_key  = B.FLT_KEY
        AND a.flt_date =B.FLT_DATE )>0
      THEN 'Y'
      ELSE 'N'
    END )                                       AS handoverInd,
    (CASE WHEN (SELECT COUNT(1) FROM IMP_RAMP_TI_HD hd WHERE hd.FLT_KEY=f.FLT_KEY  AND hd.FLT_DATE=f.SCH_DATE AND DOLLY_ID=#tripNumber#) > 0 THEN 'Y' ELSE 'N' END) AS actualTransfer,
    (select tr_no from IMP_RAMP_CHK_HD HD where HD.FLT_KEY = b.flt_key and HD.flt_date = b.flt_date and rownum=1)                                    AS trNo ,
    dtl.DOC_LINE_NO                           AS docLineNo ,
    F.FLT_NO                                  AS flightNo ,
    F.FLT_KEY                                 AS flightKey ,
    TO_CHAR(F.SCH_DATE,'DDMONYY')             AS flightDate ,
    b.ULD_KEY                                 AS uldKey ,
    INV.LOC_CODE                                AS locCode,
    B.DAM_IND                                 AS damInd ,
    B.EMPTY_IND                               AS empty ,
    B.EIC_IND                                 AS eic ,
    dtl.HT                                      AS ht ,
    dtl.CONTR                                   AS contour ,
    dtl.RMK                                     AS remark ,
    dtl.RHO_STAFF                               AS rhoStaffId,
    TO_CHAR(B.LM_DATE , 'DDMONYY HH24:MI:SS') AS lastModDate,
    (SELECT MAX(ULD_IMAGE_NAME)
    FROM ULD_IMAGE
    WHERE ULD_KEY=B.ULD_KEY
    )                                                             AS transactionId,
    'Y'                                                           AS updateRecord,
    inb.FFM_IND                                                   AS ffmInd ,
    inb.CPM_IND                                                   AS cpmInd ,
    PKG_IMP.fun_get_ho_area(B.FLT_KEY,B.FLT_DATE,B.ULD_KEY) AS plannedHoAreaFFMCPM,
    (SELECT TRF_TYPE
    FROM v_ddt_DTL
    WHERE FLT_KEY = F.FLT_KEY
    AND FLT_DATE  = B.FLT_DATE
    AND ULD_KEY   = B.ULD_KEY
    AND rowNum    = 1
    )                                                           AS transferType,
    PKG_COMMON.get_flt_ata(B.FLT_KEY, B.FLT_DATE, 'A','DD') AS ata ,
    (SELECT CODE_DESC
    FROM MAST_CODE_DTL
    WHERE CODE   = f.WTHR_COND
    AND CODE_TYPE='WTH_CONDN'
    )                                     AS weatherCondition,
    null                         AS hcontainer,
    DECODE(flt.RAMP_COMPL_YN,'Y','Y','N') AS rampCompleteStatus,
    'N'                AS actualCheckIn ,
    (CASE WHEN (nvl(B.reject_ind,'N') = 'Y' OR B.RTN_USER IS NOT NULL) THEN 'N' ELSE 'Y' END ) AS checkInStatus,
    'N'                      AS surPlusInd,
    uld.HANDLING_MODE                     AS handlingMode,
    uld.TRANSIT_IND                       AS transitInd,
    NULL                                  AS defContr,
    null AS displayOrder,
    nvl(b.reject_ind,'N') as rejectInd,
    b.reject_rmk as rejectRmk       
     FROM imp_ramp_dolly_hd a
  LEFT JOIN imp_ramp_dolly_dtl b
  ON b.flt_key  =a.flt_key
  AND b.flt_date=a.flt_date
  AND b.dolly_id=a.dolly_id
  LEFT JOIN ULD_INVENTORY INV
  ON INV.ULD_KEY=B.ULD_KEY
  LEFT JOIN IMP_RAMP_CHK_DTL dtl
  ON dtl.flt_key= b.flt_key
  and dtl.FLT_DATE=b.flt_date
  and dtl.uld_key=b.uld_key
   AND dtl.CHKIN_YN='N'
   left JOIN FLT_OPR f
  ON f.FLT_TYPE                     = 'A'
  AND f.FLT_KEY                     = a.FLT_KEY
  AND TO_CHAR(f.SCH_DATE,'DDMONYY') = TO_CHAR(a.FLT_DATE,'DDMONYY')
  LEFT JOIN flt_opr_events flt
  ON TO_CHAR(flt.SCH_DATE,'DDMONYY') = TO_CHAR(b.FLT_DATE,'DDMONYY')
  AND flt.RAMP_COMPL_YN              = 'Y'
  AND flt.FLT_TYPE                   = 'A'
  AND flt.flt_key                  = a.flt_key
  LEFT JOIN IMP_RAMP_INB_CHK_DTL inb
  ON inb.FLT_KEY                      = b.FLT_KEY
  AND TO_CHAR(inb.FLT_DATE,'DDMONYY') = TO_CHAR(b.FLT_DATE,'DDMONYY')
  AND inb.ULD_KEY                     = b.ULD_KEY
  LEFT JOIN IMP_ULD_LIST uld
  ON uld.FLT_KEY                      =b.FLT_KEY
  AND TO_CHAR(uld.FLT_DATE,'DDMONYY') = TO_CHAR(b.FLT_DATE,'DDMONYY')
  AND uld.ULD_KEY                     =b.ULD_KEY
  WHERE a.FLT_key                   = #carrierCode#||#flightNo# 
  AND TO_CHAR(a.FLT_DATE,'DDMONYY') = #flightDate#
  AND  A.DOLLY_ID=#tripNumber#
  AND NOT EXISTS(SELECT 1 FROM IMP_RAMP_CHK_DTL WHERE ULD_KEY=B.ULD_KEY
  AND FLT_KEY=B.FLT_KEY
  AND FLT_DATE=B.FLT_DATE)
  AND NOT EXISTS
    (SELECT 1
    FROM IMP_RAMP_INB_CHK_DTL
    WHERE ULD_KEY=B.ULD_KEY
    AND FLT_KEY  =B.FLT_KEY
    AND FLT_DATE =B.FLT_DATE
    ) 			     
			  )	          
      order by displayOrder,uldKey 
</select>


<select id="searchtowingTripSummaryList" parameterClass="cargo.cms.imprt.bo.TTSummaryListBO"  resultClass="cargo.cms.imprt.bo.TTSummaryListBO">
SELECT list.*, (CASE WHEN status = 'Handover' then '1'
                else case when status = 'Towing' then '2' else '3' end end
                ) orderstat FROM (
	SELECT DOLLYHD.DOLLY_ID tripNumber,
  SUBSTR(DOLLYHD.DOLLY_ID,(INSTR(DOLLYHD.DOLLY_ID, '_', -1)+1),2) tripNumberDis,
  DOLLYHD.FLT_KEY                     AS flightNo,
  TO_CHAR(DOLLYHD.FLT_DATE,'DDMONYY') AS flightDate,
  '' shc,
  (CASE WHEN (SELECT TO_CHAR(MIN(CHKIN_DATE),'DDMONYY HH24:MI')
  FROM IMP_RAMP_CHK_HD RAMPHD,
    IMP_RAMP_CHK_DTL RAMPDTL
  WHERE RAMPDTL.TR_NO  = RAMPHD.TR_NO
  AND RAMPDTL.FLT_KEY  = RAMPHD.FLT_KEY
  AND RAMPDTL.FLT_DATE = RAMPHD.FLT_DATE
  AND RAMPHD.FLT_KEY   = DOLLYHD.FLT_KEY
  AND RAMPHD.FLT_DATE  = DOLLYHD.FLT_DATE
  AND RAMPDTL.ULD_KEY IN (SELECT ULD_KEY FROM IMP_RAMP_DOLLY_DTL DDTL WHERE DDTL.DOLLY_ID = DOLLYHD.DOLLY_ID
  )) IS NOT NULL THEN 'Completed' ELSE DOLLYHD.STATUS END)  AS status,
  (CASE WHEN (SELECT TO_CHAR(MIN(CHKIN_DATE),'DDMONYY HH24:MI')
  FROM IMP_RAMP_CHK_HD RAMPHD,
    IMP_RAMP_CHK_DTL RAMPDTL
  WHERE RAMPDTL.TR_NO  = RAMPHD.TR_NO
  AND RAMPDTL.FLT_KEY  = RAMPHD.FLT_KEY
  AND RAMPDTL.FLT_DATE = RAMPHD.FLT_DATE
  AND RAMPHD.FLT_KEY   = DOLLYHD.FLT_KEY
  AND RAMPHD.FLT_DATE  = DOLLYHD.FLT_DATE
  AND RAMPDTL.ULD_KEY IN (SELECT ULD_KEY FROM IMP_RAMP_DOLLY_DTL DDTL WHERE DDTL.DOLLY_ID = DOLLYHD.DOLLY_ID
  )) IS NOT NULL THEN 'Completed' ELSE 
  CASE WHEN #locale# = 'en' then DOLLYHD.STATUS else  (SELECT CODE_DESC FROM MAST_CODE_DTL WHERE CODE_TYPE='TOWING_CHN_STATUS' AND CODE=DOLLYHD.STATUS) END
  END)  AS mbleStatus,
  TO_CHAR(DOLLYHD.IHOTC_ACTION_TIME,'DDMONYY HH24:MI') AS handoverTime,
(SELECT TO_CHAR(MIN(CHKIN_DATE),'DDMONYY HH24:MI')
  FROM IMP_RAMP_CHK_HD RAMPHD,
    IMP_RAMP_CHK_DTL RAMPDTL
  WHERE RAMPDTL.TR_NO  = RAMPHD.TR_NO
  AND RAMPDTL.FLT_KEY  = RAMPHD.FLT_KEY
  AND RAMPDTL.FLT_DATE = RAMPHD.FLT_DATE
  AND RAMPHD.FLT_KEY   = DOLLYHD.FLT_KEY
  AND RAMPHD.FLT_DATE  = DOLLYHD.FLT_DATE
  AND RAMPDTL.ULD_KEY IN (SELECT ULD_KEY FROM IMP_RAMP_DOLLY_DTL DDTL WHERE DDTL.DOLLY_ID = DOLLYHD.DOLLY_ID
  )
  ) AS checkinTime,
  (CASE
    WHEN (SELECT COUNT(1)
      FROM IMP_RAMP_DOLLY_DTL DTL
      WHERE DTL.FLT_KEY      = DOLLYHD.FLT_KEY
      AND DTL.FLT_DATE       = DOLLYHD.FLT_DATE
      AND DTL.DOLLY_ID       = DOLLYHD.DOLLY_ID
      AND DTL.COOL_DOLLY_ID IS NOT NULL) >0
    THEN 'Y'
    ELSE 'N'
  END) AS coolDollyInd,
   OPR.CARR_CODE AS carrCode,
 OPR.FLT_NO as fltNo,
  (CASE WHEN (SELECT TO_CHAR(MIN(CHKIN_DATE),'DDMONYY HH24:MI')
  FROM IMP_RAMP_CHK_HD RAMPHD,
    IMP_RAMP_CHK_DTL RAMPDTL
  WHERE RAMPDTL.TR_NO  = RAMPHD.TR_NO
  AND RAMPDTL.FLT_KEY  = RAMPHD.FLT_KEY
  AND RAMPDTL.FLT_DATE = RAMPHD.FLT_DATE
  AND RAMPHD.FLT_KEY   = DOLLYHD.FLT_KEY
  AND RAMPHD.FLT_DATE  = DOLLYHD.FLT_DATE
  AND RAMPDTL.ULD_KEY IN (SELECT ULD_KEY FROM IMP_RAMP_DOLLY_DTL DDTL WHERE DDTL.DOLLY_ID = DOLLYHD.DOLLY_ID
  )) IS NOT NULL THEN 'N' ELSE
  CASE WHEN (SELECT COUNT(1) FROM IMP_RAMP_DOLLY_DTL DTL WHERE DTL.DOLLY_ID=DOLLYHD.DOLLY_ID AND NVL(REJECT_IND,'N') = 'Y') > 0 THEN 'R'
  ELSE CASE WHEN (
  (ROUND((SYSDATE-DOLLYHD.CR_DATE)*24*60) > TO_NUMBER((SELECT RULE_VALUE FROM CMSRULES WHERE RULE_CODE='TT_OFF_SET_TIME_HOVER_COMP'))) AND 
  ((SELECT COUNT(1) FROM IMP_RAMP_CHK_DTL DTL WHERE NVL(DTL.CHKIN_YN,'N')='N' AND DTL.FLT_KEY=DOLLYHD.FLT_KEY AND DTL.FLT_DATE=DOLLYHD.FLT_DATE 
    AND DTL.ULD_KEY IN (SELECT ULD_KEY FROM IMP_RAMP_DOLLY_DTL DOLLYDTL WHERE DOLLYDTL.DOLLY_ID = DOLLYHD.DOLLY_ID))>0)
    )
  THEN 'Y'
  ELSE CASE WHEN ((ROUND((SYSDATE-DOLLYHD.CR_DATE)*24*60) > TO_NUMBER((SELECT RULE_VALUE FROM CMSRULES WHERE RULE_CODE='TT_OFF_SET_TIME_HOVER')) AND DOLLYHD.HOVER_DATE IS NULL))  THEN 'Y' ELSE 'N' END END
  END END
 ) AS indicator
FROM IMP_RAMP_DOLLY_HD DOLLYHD, FLT_OPR OPR
WHERE 1=1
AND dollyhd.task_assign_uid IS NOT NULL
AND OPR.FLT_KEY = DOLLYHD.FLT_KEY AND OPR.SCH_DATE = DOLLYHD.FLT_DATE
AND OPR.FLT_TYPE='A'
<isEqual property="fromFunction" compareValue="Mobile">
<![CDATA[
AND (SELECT COUNT(1) FROM IMP_RAMP_DOLLY_DTL DTTL WHERE DTTL.DOLLY_ID = DOLLYHD.DOLLY_ID AND NVL(REJECT_IND,'N')='N' AND RTN_LOCN IS NULL AND RTN_DATE IS NULL) > 0
]]> 
</isEqual>
<isNotEmpty property="searchFlt">
         and DOLLYHD.FLT_KEY=#searchFlt#
</isNotEmpty>
 <isNotEmpty property="flightDate">
         and DOLLYHD.FLT_DATE=#flightDate#
</isNotEmpty> 
<isNotEmpty property="status">
<isNotEqual property="status" compareValue="Completed">
         and DOLLYHD.STATUS=#status#
AND OPR.FLT_KEY = DOLLYHD.FLT_KEY AND OPR.SCH_DATE = DOLLYHD.FLT_DATE
		AND (SELECT TO_CHAR(MIN(CHKIN_DATE),'DDMONYY HH24:MI')
  FROM IMP_RAMP_CHK_HD RAMPHD,
    IMP_RAMP_CHK_DTL RAMPDTL
  WHERE RAMPDTL.TR_NO  = RAMPHD.TR_NO
  AND RAMPDTL.FLT_KEY  = RAMPHD.FLT_KEY
  AND RAMPDTL.FLT_DATE = RAMPHD.FLT_DATE
  AND RAMPHD.FLT_KEY   = DOLLYHD.FLT_KEY
  AND RAMPHD.FLT_DATE  = DOLLYHD.FLT_DATE
  AND RAMPDTL.ULD_KEY IN (SELECT ULD_KEY FROM IMP_RAMP_DOLLY_DTL DDTL WHERE DDTL.DOLLY_ID = DOLLYHD.DOLLY_ID
  )) IS NULL
</isNotEqual>
<isEqual property="status" compareValue="Completed">
		AND (SELECT TO_CHAR(MIN(CHKIN_DATE),'DDMONYY HH24:MI')
  FROM IMP_RAMP_CHK_HD RAMPHD,
    IMP_RAMP_CHK_DTL RAMPDTL
  WHERE RAMPDTL.TR_NO  = RAMPHD.TR_NO
  AND RAMPDTL.FLT_KEY  = RAMPHD.FLT_KEY
  AND RAMPDTL.FLT_DATE = RAMPHD.FLT_DATE
  AND RAMPHD.FLT_KEY   = DOLLYHD.FLT_KEY
  AND RAMPHD.FLT_DATE  = DOLLYHD.FLT_DATE
  AND RAMPDTL.ULD_KEY IN (SELECT ULD_KEY FROM IMP_RAMP_DOLLY_DTL DDTL WHERE DDTL.DOLLY_ID = DOLLYHD.DOLLY_ID
  )) IS NOT NULL
</isEqual>
</isNotEmpty>
<isNotEmpty property="uldKey">
        <isNotEmpty property="uldDate">
        AND DOLLYHD.DOLLY_ID IN (
SELECT DOHD.DOLLY_ID FROM IMP_RAMP_DOLLY_HD DOHD, IMP_RAMP_DOLLY_DTL DODTL WHERE
DODTL.FLT_KEY = DOHD.FLT_KEY AND DODTL.FLT_DATE = DOHD.FLT_DATE AND DODTL.DOLLY_ID = DOHD.DOLLY_ID
AND DODTL.ULD_KEY = #uldKey# AND TO_CHAR(DOHD.CR_DATE,'DDMONYY') = #uldDate#
)     
      </isNotEmpty>
</isNotEmpty>
<isNotEmpty property="ttCrtDateFrom">  
<isNotEmpty property="ttCrtDateFromTime">
<isNotEmpty property="ttCrtDateFromMin">
<isNotEmpty property="ttCrtDateTo">  
<isNotEmpty property="ttCrtDateToTime">
<isNotEmpty property="ttCrtDateToMin">
AND DOLLYHD.CR_DATE BETWEEN TO_DATE(#ttCrtDateFrom#||#ttCrtDateFromTime#||#ttCrtDateFromMin#,'DDMONYYHH24MI')
				  AND TO_DATE(#ttCrtDateTo#||#ttCrtDateToTime#||#ttCrtDateToMin#,'DDMONYYHH24MI')
 </isNotEmpty> 
</isNotEmpty>  
 </isNotEmpty>
 </isNotEmpty> 
</isNotEmpty>  
 </isNotEmpty>
 ) list where 1=1 
<isNotEmpty property="ttCrtDateFrom">
<isEqual property="fromFunction" compareValue="Mobile">
<![CDATA[ 
	and nvl(list.status,'XXXXXXX') != 'Completed'
]]>    
</isEqual>
</isNotEmpty>
order by orderstat asc
 
</select> 

<select id="chKImportFlightDetl_Desktop" parameterClass="java.lang.String" resultClass="cargo.cms.imprt.bo.TTSummaryListBO" >
SELECT FLT_KEY as fltKey,TO_CHAR(FLT_DATE,'DDMONYY') fltDate FROM IMP_RAMP_DOLLY_HD WHERE DOLLY_ID=#PARAM#
</select>
<update id="deleterampdollydtl_desktop"  parameterClass="java.util.HashMap">
DELETE FROM IMP_RAMP_DOLLY_DTL WHERE FLT_KEY=#fltKey# AND FLT_DATE=#fltDate# AND DOLLY_ID=#dollyId# AND ULD_KEY = #uldKey#
</update>
<select id="getCountFromDollyDTL_desktop" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
SELECT COUNT(1) FROM IMP_RAMP_DOLLY_DTL WHERE FLT_KEY=#fltKey# AND FLT_DATE=#fltDate# AND DOLLY_ID=#dollyId#
</select>
<update id="deleterampdollyhd_desktop"  parameterClass="java.util.HashMap">
DELETE FROM IMP_RAMP_DOLLY_HD WHERE FLT_KEY=#fltKey# AND FLT_DATE=#fltDate# AND DOLLY_ID=#dollyId#
</update>
<update id="updaertrampDUMMYdollyuldinv_desktop"  parameterClass="java.util.HashMap">
UPDATE uld_inventory SET tr_type='DUMMY' where uld_key = #uldKey#
</update>
<update id="updateTIStatus_desktop"  parameterClass="java.util.HashMap">
UPDATE IMP_RAMP_DOLLY_HD SET STATUS=#hostatus#,LM_USER_ID=#userID#,LM_DATE=SYSDATE WHERE DOLLY_ID=#tripNumber#
</update>

<update id="updaertrampdollyuldinv_desktop"  parameterClass="java.util.HashMap">
UPDATE uld_inventory SET ULD_UNLOAD = #uldUnload#,DAM_IND=#damInd#,H_OVER='N',lm_user_id=#userID#,lm_date=sysdate,tr_type='UIU' where uld_key = #uldKey#
</update>
<select id="checkInImportFlight_Desktop" parameterClass="java.util.HashMap" resultClass="java.lang.Integer" >
    SELECT COUNT(1) FROM imp_ramp_chk_dtl WHERE FLT_KEY = #fltKey# AND FLT_DATE = #fltDate# AND CHKIN_YN = 'Y' AND ULD_KEY = #uldKey#
</select>

<select id="tt_uld_list" parameterClass="cargo.cms.imprt.bo.TTSummaryListBO"  resultClass="cargo.cms.imprt.bo.TTSummaryListBO">
	  SELECT   (CASE WHEN (SELECT TO_CHAR(MIN(CHKIN_DATE),'DDMONYY HH24:MI')
  FROM IMP_RAMP_CHK_HD RAMPHD,
    IMP_RAMP_CHK_DTL RAMPDTL
  WHERE RAMPDTL.TR_NO  = RAMPHD.TR_NO
  AND RAMPDTL.FLT_KEY  = RAMPHD.FLT_KEY
  AND RAMPDTL.FLT_DATE = RAMPHD.FLT_DATE
  AND RAMPHD.FLT_KEY   = DOLLYHD.FLT_KEY
  AND RAMPHD.FLT_DATE  = DOLLYHD.FLT_DATE
  AND RAMPDTL.ULD_KEY IN (SELECT ULD_KEY FROM IMP_RAMP_DOLLY_DTL DDTL WHERE DDTL.DOLLY_ID = DOLLYHD.DOLLY_ID
  )) IS NOT NULL THEN 'Completed' ELSE DOLLYHD.STATUS END)  AS status,DOLLYDTL.ULD_KEY AS uld,DOLLYDTL.REJECT_IND AS rejectIND,DOLLYDTL.REJECT_RMK AS rejectRemarka,
(SELECT TO_CHAR(CHKIN_DATE,'DDMONYY HH24:MI') FROM IMP_RAMP_CHK_HD RAMPHD, IMP_RAMP_CHK_DTL RAMPDTL
   WHERE RAMPDTL.TR_NO = RAMPHD.TR_NO 
   AND RAMPDTL.FLT_KEY = RAMPHD.FLT_KEY
   AND RAMPDTL.FLT_DATE = RAMPHD.FLT_DATE
   AND RAMPHD.FLT_KEY = DOLLYHD.FLT_KEY
   AND RAMPHD.FLT_DATE = DOLLYHD.FLT_DATE
   AND RAMPDTL.ULD_KEY = DOLLYDTL.ULD_KEY) AS checkinTime,
   DECODE(DOLLYDTL.RTN_LOCN,'','N','Y') AS returnIND,
   DOLLYDTL.RTN_LOCN AS returnLocation,
   DOLLYDTL.RETURN_RSN AS returnReason,
   DOLLYDTL.Cool_Dolly_Id AS coolDollyId
FROM IMP_RAMP_DOLLY_HD DOLLYHD, IMP_RAMP_DOLLY_DTL DOLLYDTL WHERE DOLLYDTL.FLT_KEY = DOLLYHD.FLT_KEY AND DOLLYDTL.FLT_DATE = DOLLYHD.FLT_DATE AND DOLLYDTL.DOLLY_ID = DOLLYHD.DOLLY_ID
AND DOLLYHD.DOLLY_ID=#tripNumber#
</select>

<update id="returnULDLocation" parameterClass="map">
		update IMP_RAMP_DOLLY_DTL
		set RTN_LOCN = #returnLocation#,
			RTN_USER = #modifiedUserId#,
			RETURN_RSN = #returnReason#,
			RTN_DATE = sysdate
		where 1=1
		<isNotEmpty property="tripNumber">
		AND DOLLY_ID = #tripNumber# 
		</isNotEmpty>
		<isNotEmpty property="fltKey">
		AND flt_key = #fltKey# 
		</isNotEmpty>
		<isNotEmpty property="fltDate">
		AND FLT_DATE = #fltDate# 
		</isNotEmpty>
		AND ULD_KEY = #uld#
	</update>
	
	<update id="updateReject" parameterClass="map">
	UPDATE IMP_RAMP_DOLLY_DTL SET REJECT_IND='Y',REJECT_RMK=NVL(#rejectRemarka#,REJECT_RMK),
	REJECT_DATE=SYSDATE,dam_ind=nvl(#damInd#,'N') where DOLLY_ID = #tripNumber# AND ULD_KEY = #uld#
	</update>
	
	<update id="deleteReturn" parameterClass="map">
		update IMP_RAMP_DOLLY_DTL
		set RTN_LOCN = '',
			RTN_USER = '',
			RTN_DATE = '',
			return_rsn = ''
		where 1=1 
		<isNotEmpty property="tripNumber">
		AND DOLLY_ID = #tripNumber# 
		</isNotEmpty>
		<isNotEmpty property="fltKey">
		AND flt_key = #fltKey# 
		</isNotEmpty>
		<isNotEmpty property="fltDate">
		AND FLT_DATE = #fltDate# 
		</isNotEmpty> 
		AND ULD_KEY = #uld#
	</update>
	
	<update id="deleteReject" parameterClass="map">
		update IMP_RAMP_DOLLY_DTL
		set REJECT_IND = 'N',
			REJECT_RMK = '',
			REJECT_DATE = ''
		where 1=1
		<isNotEmpty property="tripNumber">
		AND DOLLY_ID = #tripNumber# 
		</isNotEmpty>
		<isNotEmpty property="fltKey">
		AND flt_key = #fltKey# 
		</isNotEmpty>
		<isNotEmpty property="fltDate">
		AND FLT_DATE = #fltDate# 
		</isNotEmpty> 
		AND ULD_KEY = #uld#
	</update>

<select id="tiSummeryLists" parameterClass="cargo.cms.imprt.bo.TISummaryListBO"  resultClass="cargo.cms.imprt.bo.TISummaryListBO">
<![CDATA[
 SELECT TIHD.TI_NO   AS tiNumber ,
  TIHD.FLT_KEY  AS flightNo ,
  TO_CHAR(TIHD.FLT_DATE,'DDMONYY') AS flightDate,  
  TO_CHAR(TIHD.TI_START_TIME,'DDMONYY HH24:MI') AS tiTransferStartTime,
  TO_CHAR(TIHD.TI_COMPL_TIME,'DDMONYY HH24:MI') AS tiTransferCompleteTime,   
   TIHD.PRINT_IND AS printeIND,
   TIHD.STATUS AS status,	  	
   PKG_COMMON.get_flt_ata(TIHD.FLT_KEY, TIHD.FLT_DATE, 'A','DD') AS ata,
   PKG_COMMON.get_flt_sta(TIHD.FLT_KEY, TIHD.FLT_DATE, 'A') as sta,
   (CASE WHEN TIHD.STATUS = 'Issued' THEN '1' ELSE CASE WHEN TIHD.STATUS='Started' THEN '2' ELSE '3' END END) orderStatus,	  	
  TIHD.TI_HDLG_USER AS tiHandlingUser,
   (SELECT ULD_KEY FROM IMP_RAMP_TI_DTL WHERE TI_NO=TIHD.TI_NO AND SEQ_NO=(SELECT MIN(TO_NUMBER(NVL(SEQ_NO,'1'))) FROM IMP_RAMP_TI_DTL WHERE TI_NO=TIHD.TI_NO)) AS uldKey,
   '' AS SHC,
      (SELECT TO_CHAR(MIN(CHKIN_DATE),'DDMONYY HH24:MI')
  FROM IMP_RAMP_CHK_HD RAMPHD,
    IMP_RAMP_CHK_DTL RAMPDTL
  WHERE RAMPDTL.TR_NO  = RAMPHD.TR_NO
  AND RAMPDTL.FLT_KEY  = RAMPHD.FLT_KEY
  AND RAMPDTL.FLT_DATE = RAMPHD.FLT_DATE
  AND RAMPHD.FLT_KEY   = TIHD.FLT_KEY
  AND RAMPHD.FLT_DATE  = TIHD.FLT_DATE
  and RAMPDTL.uld_key in (SELECT ULD_KEY FROM IMP_RAMP_DOLLY_DTL DDTL WHERE DDTL.DOLLY_ID=TIHD.DOLLY_ID)
  ) AS checkinTime,
  (CASE WHEN STATUS = 'Completed' THEN 'N' ELSE CASE WHEN TI_START_TIME > (CR_DATE + ((SELECT NVL(RULE_VALUE, 1) FROM CMSRULES WHERE RULE_CODE = 'TI_OFF_SET_TIME_PICKUP'))/24/60)  THEN 'Y' ELSE 'N' END END) AS tiPickupColor,
  (CASE WHEN STATUS = 'Completed' THEN 'N' ELSE CASE WHEN TI_COMPL_TIME > (CR_DATE + ((SELECT NVL(RULE_VALUE, 1) FROM CMSRULES WHERE RULE_CODE = 'TI_OFF_SET_TIME_COMPLETE'))/24/60) THEN 'Y' ELSE 'N' END END) AS tiCompleteColor,
  (CASE WHEN ( SELECT COUNT(1) FROM MAST_SPL_HAND_CODE SPL WHERE SPL.PRIORTY_INBD_TRNSFR = 'Y' AND 
        SPL.CODE IN (SELECT VSHC.SHC FROM IMP_RAMP_TI_DTL TIDTL,V_IMP_FLT_ULD_SHC VSHC
        WHERE VSHC.FLT_KEY = TIDTL.FLT_KEY
        AND VSHC.FLT_DATE = TIDTL.FLT_DATE
        AND VSHC.ULD_KEY = TIDTL.ULD_KEY
        AND TIDTL.TI_NO = TIHD.TI_NO))              > 0
    THEN 'Y'
    ELSE 'N'
  END) AS shcPriorColor,
  (
  CASE WHEN STATUS = 'Completed' THEN 'N' ELSE
  CASE WHEN TI_START_TIME > (CR_DATE + ((SELECT NVL(RULE_VALUE, 1) FROM CMSRULES WHERE RULE_CODE = 'TI_OFF_SET_TIME_PICKUP'))/24/60) THEN 'Y' ELSE 
  CASE WHEN TI_COMPL_TIME > (CR_DATE + ((SELECT NVL(RULE_VALUE, 1) FROM CMSRULES WHERE RULE_CODE = 'TI_OFF_SET_TIME_COMPLETE'))/24/60) THEN 'O' ELSE 
  CASE WHEN (SELECT COUNT(1) FROM MAST_SPL_HAND_CODE SPL WHERE SPL.PRIORTY_INBD_TRNSFR = 'Y' AND SPL.CODE IN (SELECT VSHC.SHC FROM IMP_RAMP_TI_DTL TIDTL,V_IMP_FLT_ULD_SHC VSHC WHERE VSHC.FLT_KEY = TIDTL.FLT_KEY  AND VSHC.FLT_DATE = TIDTL.FLT_DATE  AND VSHC.ULD_KEY = TIDTL.ULD_KEY  AND TIDTL.TI_NO = TIHD.TI_NO)) > 0 THEN 'P' ELSE 'N' END  END  END END) AS indicator,
  (SELECT TO_CHAR(DOLLYHD.IHOTC_ACTION_TIME,'DDMONYY HH24:MI') FROM IMP_RAMP_DOLLY_HD DOLLYHD WHERE DOLLYHD.DOLLY_ID=tihd.dolly_id) AS handoverTime
  FROM IMP_RAMP_TI_HD TIHD WHERE 1=1
  ]]>
 <isNotEmpty property="searchFlt">
         and TIHD.FLT_KEY=#searchFlt#
</isNotEmpty>
 <isNotEmpty property="flightDate">
         and TIHD.FLT_DATE=#flightDate#
</isNotEmpty> 
<isNotEmpty property="status">
         and TIHD.STATUS=#status#
</isNotEmpty>
  <isNotEmpty property="ttCrtDateFrom">  
   <isNotEmpty property="ttCrtDateFromTime">
     <isNotEmpty property="ttCrtDateFromMin">
       <isNotEmpty property="ttCrtDateTo">  
         <isNotEmpty property="ttCrtDateToTime">
           <isNotEmpty property="ttCrtDateToMin">
AND TIHD.CR_DATE BETWEEN TO_DATE(#ttCrtDateFrom#||#ttCrtDateFromTime#||#ttCrtDateFromMin#,'DDMONYYHH24MI')
				  AND TO_DATE(#ttCrtDateTo#||#ttCrtDateToTime#||#ttCrtDateToMin#,'DDMONYYHH24MI')
          </isNotEmpty> 
        </isNotEmpty>  
       </isNotEmpty>
      </isNotEmpty> 
     </isNotEmpty>  
    </isNotEmpty>
    <isNotEmpty property="fromFunction">
    <isEqual property="fromFunction" compareValue="Mobile">
    AND TIHD.STATUS != 'Completed' 
    </isEqual>
    </isNotEmpty>
    order by orderStatus
 </select> 

<select id="gettiSummeryDetails" parameterClass="cargo.cms.imprt.bo.TISummaryListBO"  resultClass="cargo.cms.imprt.bo.TISummaryListBO">
SELECT TIHd.FLT_KEY as flightNo,
TO_CHAR(TIHd.FLT_DATE,'DDMONYY') AS flightDate,  
 (CASE WHEN (select load_type from edi_cpm_dtl cpmdtl where cpmdtl.flt_key=TIHd.flt_key and cpmdtl.flt_date=TIHd.flt_date and cpmdtl.uld_key=TIDEL.ULD_KEY and rownum=1) IS NOT NULL THEN
 TIDEL.ULD_KEY||'/'||(select load_type from edi_cpm_dtl cpmdtl where cpmdtl.flt_key=TIHd.flt_key and cpmdtl.flt_date=TIHd.flt_date and cpmdtl.uld_key=TIDEL.ULD_KEY and rownum=1) ELSE TIDEL.ULD_KEY END) AS uldKey,
  (CASE WHEN B.DAM_IND IS NOT NULL THEN  NVL(B.DAM_IND,'N') ELSE NVL(TIDEL.DAM_IND,'N') END)   AS damInd,
  (CASE WHEN B.EMPTY_IND IS NOT NULL THEN  NVL(B.EMPTY_IND,'N') ELSE NVL(TIDEL.EMPTY_IND,'N') END) AS emptyInd ,
  (CASE WHEN B.EIC_IND IS NOT NULL THEN  NVL(B.EIC_IND,'N') ELSE NVL(TIDEL.EIC_IND,'N') END)  AS eicInd,
  (select load_type from edi_cpm_dtl cpmdtl where cpmdtl.flt_key=TIHd.flt_key and cpmdtl.flt_date=TIHd.flt_date and cpmdtl.uld_key=TIDEL.ULD_KEY and rownum=1) as cpmType,    
  (SELECT cool_dolly_id FROM IMP_RAMP_DOLLY_DTL DOLDTL WHERE DOLDTL.DOLLY_ID=TIHD.DOLLY_ID AND DOLDTL.ULD_KEY=TIDEL.ULD_KEY) AS tripNumber,
  (SELECT HO_AREA FROM TOW_ORDER_IN INHD, TOW_ORDER_IN_DTL INDTL WHERE INHD.TO_NO = INDTL.TO_NO AND INHD.FLT_KEY=TIHD.FLT_KEY AND INHD.FLT_DATE=TIHD.FLT_DATE AND INDTL.ULD_KEY=TIDEL.ULD_KEY) AS hoZone,
  TIHD.TI_START_TIME AS tiTransferStartTime,
  TIHD.TI_COMPL_TIME AS tiTransferCompleteTime,
  DECODE(f.ACT_TIME,NULL,'',SUBSTR(TRIM(TO_CHAR(f.ACT_TIME,'0000')),0,2)|| ':' || SUBSTR(TRIM(TO_CHAR(f.ACT_TIME,'0000')),3,4)) as ata,
 DECODE(f.EST_TIME,NULL,'',SUBSTR(TRIM(TO_CHAR(f.EST_TIME,'0000')),0,2)|| ':'||  SUBSTR(TRIM(TO_CHAR(f.EST_TIME,'0000')),3,4)) as eta,
 DECODE(f.SCH_TIME,NULL,'',SUBSTR(TRIM(TO_CHAR(f.SCH_TIME,'0000')),0,2) || ':' || SUBSTR(TRIM(TO_CHAR(f.SCH_TIME,'0000')),3,4)) as sta,
 <![CDATA[
 (CASE WHEN ( SELECT COUNT(1) FROM MAST_SPL_HAND_CODE SPL WHERE SPL.PRIORTY_INBD_TRNSFR = 'Y' AND 
        SPL.CODE IN (SELECT VSHC.SHC FROM V_IMP_FLT_ULD_SHC VSHC
        WHERE VSHC.FLT_KEY = TIDEL.FLT_KEY
        AND VSHC.FLT_DATE = TIDEL.FLT_DATE
        AND VSHC.ULD_KEY = TIDEL.ULD_KEY
        ))              > 0
    THEN 'Y'
    ELSE 'N'
  END) as priority
  ]]>
FROM IMP_RAMP_TI_HD TIHd
join IMP_RAMP_TI_DTL TIDEL ON TIDEL.TI_NO=TIHD.TI_NO
join flt_opr f ON f.flt_key =  TIHD.FLT_KEY AND f.sch_date =  TIHD.FLT_DATE
LEFT JOIN IMP_RAMP_CHK_DTL B ON B.FLT_KEY=TIHD.FLT_KEY AND B.ULD_KEY=TIDEL.ULD_KEY AND B.FLT_DATE=TIHD.FLT_DATE 
WHERE TIDEL.TI_NO=#tiNumber#
ORDER BY TIDEL.SEQ_NO,
  TIDEL.ULD_KEY
</select>



<update id="updatetiPickUp" parameterClass="map">
	UPDATE IMP_RAMP_TI_HD SET TI_START_TIME=SYSDATE, 
	TI_HDLG_USER=#tiHandlingUser#,STATUS=#status#  where TI_NO = #tiNumber#
</update>

<update id="tiComplete" parameterClass="map">
	UPDATE IMP_RAMP_TI_HD SET TI_COMPL_TIME=SYSDATE,STATUS='Completed' where TI_NO = #tiNumber#	
</update>

<update id="updatetprintind" parameterClass="map">
	UPDATE IMP_RAMP_TI_HD SET PRINT_IND='Y' WHERE TI_NO = #tiNumber#	
</update>


<select id="get_Ti_Num_Imp_Ramp_Ti_HD"  parameterClass="cargo.cms.imprt.bo.ULDCheckInBO"  resultClass="java.lang.String">
		select TI_NO from Imp_Ramp_Ti_hd where Flt_Key = #flightKey# and Flt_Date = #flightDate# and DOLLY_ID=#tripNumber# 
</select>


 <insert id="Insert_Imp_Ramp_Ti_HD" parameterClass="cargo.cms.imprt.bo.ULDCheckInBO">
		INSERT INTO Imp_Ramp_Ti_hd (TI_NO,FLT_KEY,FLT_DATE,STATUS,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,DOLLY_ID) 		
		VALUES (imp_ramp_ti_hd_SEQ.NEXTVAL,#flightKey#,#flightDate#,'Issued',#crUser#,SYSDATE,#lmUser#,SYSDATE,#tripNumber#)
</insert>


 <select id="check_Imp_Ramp_Ti_DTL"  parameterClass="cargo.cms.imprt.bo.ULDCheckInBO"  resultClass="java.lang.Integer">
		select count(1) from Imp_Ramp_Ti_Dtl where Flt_Key = #flightKey# and Flt_Date = #flightDate#  and Uld_Key=#uldKey#
</select>


<insert id="Insert_Imp_Ramp_Ti_DTL" parameterClass="cargo.cms.imprt.bo.ULDCheckInBO">
		INSERT INTO Imp_Ramp_Ti_Dtl (TI_NO,FLT_KEY,FLT_DATE, ULD_KEY,SEQ_NO,DAM_IND,EMPTY_IND,EIC_IND, CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE,COOL_DOLLY_ID,HO_ZONE) 		
		VALUES (#tiNum#,#flightKey#,#flightDate#,#uldKey#,#tiSeqNum#,#damInd#,#eic#,#empty#,#crUser#,SYSDATE,#crUser#,SYSDATE,'','')
 </insert> 
 
  <select id="checkisExitCheckin"  parameterClass="cargo.cms.imprt.bo.ULDCheckInBO"  resultClass="java.lang.Integer">
		select count(1) from Imp_Ramp_Ti_hd where Flt_Key = #flightKey# and Flt_Date = #flightDate# and DOLLY_ID=#tripNumber# 
</select> 



<select id="get_seq_nub_Imp_Ramp_Dolly_Dtl"  parameterClass="cargo.cms.imprt.bo.ULDCheckInBO"  resultClass="java.lang.String">
		select Seq_No from Imp_Ramp_Dolly_Dtl where Uld_Key = #uldKey# and Dolly_Id=#tripNumber# 
</select>



<select id="getSHCTTSummaryList"  parameterClass="cargo.cms.imprt.bo.TTSummaryListBO"  resultClass="java.lang.String">
<![CDATA[		
  SELECT STRAGG(STRINGDELIM(SHC, ','))
  FROM (
  (SELECT DISTINCT SHC,
    PRIORITY
  FROM V_IMP_FLT_ULD_SHC
  WHERE (ULD_KEY,FLT_KEY,FLT_DATE) IN
    (SELECT ULD_KEY,FLT_KEY,FLT_DATE
    FROM IMP_RAMP_DOLLY_DTL DTL
    WHERE DTL.dolly_id = #tripNumber#
    )
  ORDER BY PRIORITY DESC
  )) A
  WHERE ROWNUM <= 3
  ]]>
</select>
 <select id="getHawbList" parameterClass="cargo.cms.imprt.bo.MaintainCARBO" resultClass="cargo.cms.imprt.bo.MaintainCARBO">
	SELECT
	awb_no as awbNo,
	awb_date as awbDate
	FROM IMP_CAR_AWB

</select>


<select id="getHawbPopupList" parameterClass="cargo.cms.imprt.bo.MaintainCARBO" resultClass="cargo.cms.imprt.bo.MaintainCARBO">

	SELECT 
		hawb_no as hawbNo,
		content as content,
		status as eligibilityStatus
	FROM
		IMP_HAWB_ESRF_EL_STATUS
	where
		awb_no = #awbNo# and
		awb_date = to_date(#awbDate#,'DDMONYY')
		<isEqual property="amber" compareValue="Y" prepend="AND">
			<isNotEqual  property="grey" compareValue="Y">
			 status='AMBER'
			 </isNotEqual>
		</isEqual>
		<isEqual property="grey" compareValue="Y" prepend="AND">
			 <isNotEqual  property="amber" compareValue="Y">
			 status='GREY'
			 </isNotEqual>
		</isEqual>
		<isNotEqual  property="amber" compareValue="Y">
			<isNotEqual  property="grey" compareValue="Y" prepend="AND">
				(status='AMBER' OR status='GREY')
			</isNotEqual>
		</isNotEqual>

		<isEqual property="amber" compareValue="Y"> 
			 <isEqual property="grey" compareValue="Y" prepend="AND">
				 (status='AMBER' OR status='GREY')
			 </isEqual>
		</isEqual>	
		ORDER BY status desc		
</select> 

<insert id="insertEsrfEligibleConfig" parameterClass="cargo.cms.imprt.bo.MaintainCARBO">
		INSERT INTO MAST_ESRF_ELIGIBLE_CONFIG (SEQ_NO,CONFIG_TYPE,DESCRIPTION,CR_USER_ID,CR_DATE,LM_USER_ID,LM_DATE) VALUES (ESRF_ELIGIBLE_CONFIG_PK_SEQ.NEXTVAL,'C',#content#,#lmUserId#,sysdate,#lmUserId#,sysdate)
	</insert>

	<select id="checkEsrfEligibleConfig" parameterClass="cargo.cms.imprt.bo.MaintainCARBO" resultClass="java.lang.Integer">
		select count(1) from MAST_ESRF_ELIGIBLE_CONFIG WHERE CONFIG_TYPE = 'C' AND DESCRIPTION = #content#
	</select>

	<select id="getESRFDocPopUpHeaderList" parameterClass="cargo.cms.imprt.bo.EnquiresrfDocBO" resultClass="cargo.cms.imprt.bo.EnquiresrfDocBO">
		select 
		substr(AWB_NO,0,3)||'-'||substr(AWB_NO,4) as awbNoDisp,
		CSGNE_NAME as consignee,
		APPNTD_AGENT as agentName,
		AWB_PCS as awbPieces,
		AWB_WT as awbWeight,
		CONTENT as content,
		(select CASE when status = 'REJECTED' then reject_reason else '' end from imp_esrf_document where awb_no = IMP_CAR_AWB.awb_no and awb_date = IMP_CAR_AWB.awb_date) as rejectReason,
		(select case when (DISCLAIMER is null or DISCLAIMER = 'N' or DISCLAIMER = 'false') then 'N' else 'Y' end  from imp_esrf_document where awb_no = IMP_CAR_AWB.awb_no and awb_date = IMP_CAR_AWB.awb_date) as disclaimer, 
		(decode(spl_code1, null, '', spl_code1 || decode(spl_code2, null, '', ','))|| decode(spl_code2, null, '', spl_code2 || decode(spl_code3, null, '', ','))|| decode(spl_code3, null, '', spl_code3 || decode(spl_code4, null, '', ',')) || decode(spl_code4, null, '', spl_code4 || decode(spl_code5, null, '', ','))|| decode(spl_code5, null, '', spl_code5 || decode(spl_code6, null, '', ','))|| decode(spl_code6, null, '', spl_code6 || decode(spl_code7, null, '', ','))|| decode(spl_code7, null, '', spl_code7 || decode(spl_code8, null, '', ','))|| decode(spl_code8, null, '', spl_code8)) shc
		from IMP_CAR_AWB
		WHERE 
		 	AWB_NO = #awbNoDisp# AND AWB_DATE = to_date(#awbDate#,'DDMONYY')
	</select>

<select id="validateESRFIssued"  parameterClass="cargo.cms.imprt.bo.EnquiresrfDocBO"  resultClass="java.lang.Integer">
	  <![CDATA[
		SELECT COUNT(1) FROM IMP_SRF T WHERE AWB_NO = #awbNo# AND AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY')
				AND (STATUS  ='ISSUED' AND sysdate  < srf_expy_date 
              OR EXISTS (SELECT NULL FROM imp_srf_awb_inventory WHERE srf_no = t.srf_no AND t.status = 'ISSUED' AND dlv_pcs  > 0) )
          ]]> 
	</select>

<update id="reject_esrf_doc" parameterClass="cargo.cms.imprt.bo.EnquiresrfDocBO">
			UPDATE IMP_ESRF_DOCUMENT SET
			STATUS = 'REJECTED',
			REJECT_REASON = #rejectReason#,
			TR_TYPE = #trType#,
			LM_DATE = SYSDATE,
			LM_USER_ID = #lmUserId#
			WHERE 
			TR_NO = #trNo#
</update>


<update id="updateAWBESRFStatus" parameterClass="cargo.cms.imprt.bo.EnquiresrfDocBO">
	UPDATE IMP_CAR_AWB set eligibility_status = 'GREEN', LM_USER_ID = 'SYSTEM', LM_DATE = SYSDATE 
	 WHERE AWB_NO = #awbNo# AND AWB_DATE = TO_DATE(#awbDate#, 'DDMONYY')  
</update>	

<update id="approve_esrf_doc" parameterClass="cargo.cms.imprt.bo.EnquiresrfDocBO">
			UPDATE IMP_ESRF_DOCUMENT SET
			STATUS = 'APPROVED',
			TR_TYPE = #trType#,
			LM_DATE = SYSDATE,
			LM_USER_ID = #lmUserId#
			WHERE 
			TR_NO = #trNo#
</update>

<select id="get_esrf_eligibility" parameterClass="cargo.cms.imprt.bo.EnquiresrfDocBO" resultClass="java.lang.String" >	
	SELECT FUN_GET_ESRF_STATUS(#awbNo#,#awbDate#)  as eligibilityStatus from DUAL 
</select>



<select id="getESRFDocPopUpHawbList" parameterClass="cargo.cms.imprt.bo.EnquiresrfDocBO" resultClass="cargo.cms.imprt.bo.EnquiresrfDocBO">

SELECT TR_NO as trNo, hawb_no as hawb,manifest_desc as content,
decode(spl_code1, null, '', spl_code1 || decode(spl_code2, null, '', '/'))
               		|| decode(spl_code2, null, '', spl_code2 || decode(spl_code3, null, '', '/'))
               		|| decode(spl_code3, null, '', spl_code3 || decode(spl_code4, null, '', '/'))
              		|| decode(spl_code4, null, '', spl_code4 || decode(spl_code5, null, '', '/'))
               		|| decode(spl_code5, null, '', spl_code5 || decode(spl_code6, null, '', '/'))
              		|| decode(spl_code6, null, '', spl_code6 || decode(spl_code7, null, '', '/'))
               		|| decode(spl_code7, null, '', spl_code7 || decode(spl_code8, null, '', '/'))
                    || decode(spl_code8, null, '', spl_code8 || decode(spl_code9, null, '', '/'))
               		|| decode(spl_code9, null, '', spl_code9) splCode
FROM edi_fhl_hawb
WHERE 
	tr_no 
IN
(SELECT 
	tr_no 
 FROM 
 	edi_fhl 
 WHERE 
 	 	AWB_NO = #awbNoDisp# AND AWB_DATE = to_date(#awbDate#,'DDMONYY')
 )
</select>



<select id="getESRFDocList" parameterClass="cargo.cms.imprt.bo.EnquiresrfDocBO" resultClass="cargo.cms.imprt.bo.EnquiresrfDocBO">
	SELECT 
			TR_NO as trNo,
			substr(AWB_NO,0,3)||'-'||substr(AWB_NO,4) as awbNoDisp,
			to_char(AWB_DATE,'DDMONYY') awbDate,
			AGENT_NAME as agentName,
			TO_CHAR(DOC_SUBMIT_DATE, 'DDMONYY HH24:MI')docSubmitDate,
			STATUS as status,
			REJECT_REASON as rejectReason,
			(case when (DISCLAIMER is null or DISCLAIMER = 'N' or DISCLAIMER = 'false') then 'N' else 'Y' end ) as disclaimer,
			IMG_TRANS_ID as transactionId
			FROM IMP_ESRF_DOCUMENT
			where ( nvl(STATUS,'X') = 'APPROVED'  OR  nvl(STATUS,'X') = 'REJECTED'  OR FUN_GET_ESRF_STATUS(AWB_NO,AWB_DATE) = 'AMBER' )
				<isNotEmpty property="agentName">
				          AND AGENT_NAME = #agentName#
				</isNotEmpty> 
				<isNotEmpty property="status">
				          AND STATUS= #status#
				</isNotEmpty> 
				<isNotEmpty property="awbNoDisp">
				          AND AWB_NO= #awbNoDisp#
				</isNotEmpty> 
				<isNotEmpty property="docSubmitFromDt">
				<isNotEmpty property="docSubmitFromHour">
				<isNotEmpty property="docSubmitFromMin">
				<isNotEmpty property="docSubmitToDt">
				<isNotEmpty property="docSubmitToHour">
				<isNotEmpty property="docSubmitToMin">
				       AND DOC_SUBMIT_DATE BETWEEN TO_DATE(#docSubmitFromDt#||#docSubmitFromHour#||#docSubmitFromMin#,'DDMONYYHH24MI')
								  AND TO_DATE(#docSubmitToDt#||#docSubmitToHour#||#docSubmitToMin#,'DDMONYYHH24MI')
				 </isNotEmpty> 
				 </isNotEmpty>  
				 </isNotEmpty>
				 </isNotEmpty> 
				 </isNotEmpty>  
				 </isNotEmpty>
</select>

<select id="getSHCTISummaryList"  parameterClass="cargo.cms.imprt.bo.TISummaryListBO"  resultClass="java.lang.String">
<![CDATA[

SELECT STRAGG(STRINGDELIM(SHC, ','))
FROM (
  (SELECT DISTINCT SHC,
    PRIORITY
  FROM V_IMP_FLT_ULD_SHC
  WHERE (ULD_KEY,FLT_KEY,FLT_DATE) IN
    (SELECT ULD_KEY,FLT_KEY,FLT_DATE FROM IMP_RAMP_TI_DTL DTL WHERE DTL.TI_NO = #tiNumber#
    )
  ORDER BY PRIORITY DESC
  )) A
WHERE ROWNUM <= 3

]]>
</select>


<select id="isExitChkinULD"  parameterClass="map" resultClass="java.lang.Integer">
		select count(1) from Imp_Ramp_Chk_Dtl where Flt_Key = #fltKey# and Flt_Date = #fltDate#  and Uld_Key=#uld# and Chkin_Yn='Y'
</select>

<select id="getTripID"  parameterClass="java.lang.String"  resultClass="java.lang.String">
		 SELECT MAX(TRIP.TRIP_ID) FROM TRUCK_TRIP TRIP WHERE TRIP.CLOSED = 'N' AND TRIP.TRUCK_NO = UPPER(#TRUCK_NO#)
</select>

<select id="truckSRFCount"  parameterClass="java.lang.String"  resultClass="java.lang.Integer">
	 select count(1) FROM IMP_TRUCK_SRF WHERE TRIP_ID = #TRIP_ID# AND ASSG_COMP = 'Y'
</select>

<update id="truckTripQueueInd" parameterClass="cargo.cms.tcs.bo.TCSBookingBO">
		update TRUCK_TRIP set TRUCK_QUEUE_IND = 'Y' where TRUCK_NO = UPPER(#truckNo#) and TRIP_ID = #tripId#
		
</update>

<select id="isExitDeleteReject" parameterClass="cargo.cms.imprt.bo.TTSummaryListBO"  resultClass="java.lang.Integer">
   SELECT count(1) FROM imp_ramp_dolly_dtl WHERE DOLLY_ID=#tripNumber# and uld_key=#uld# and nvl(reject_ind,'N')='Y'
</select>

<select id="isExitReturns" parameterClass="cargo.cms.imprt.bo.TTSummaryListBO"  resultClass="java.lang.Integer">
   SELECT count(1) FROM imp_ramp_dolly_dtl WHERE DOLLY_ID=#tripNumber# and uld_key=#uld# and nvl(reject_ind,'N')='Y'
</select>
	

<select id="checkAgents" parameterClass="java.lang.String" resultClass="java.lang.Integer">
        select count(1) as agtCnt  from cust_company where code = #agentCode#  and nvl(agent_yn,'N') = 'Y' 
</select>
	
<select id="checkAgentAllowEsrf" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		SELECT count(1) FROM  cust_company where code = #agentCode# and nvl(allow_esrf_aa,'N') = 'Y'
</select>

<select id="checkCarrierAllowEsrf" parameterClass="cargo.cms.external.bo.InbdShpActionListSearchBO" resultClass="java.lang.Integer">
	Select count(1)  FROM  AWB  WHERE awb_no = #awbNo# and awb_date = to_date(#awbDate#,'DDMONYY') 
	AND exists (SELECT null FROM mast_carrier where code = carr_code and NVL(ALLOW_ESRF,'N') = 'Y')	 
</select>


<select id="getCustomClearanceResult" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO"  resultClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
  select Srf_No as srfNo,Cdif_No as cdifSrfNo, Clr_Completed as clrCompleted ,Clr_Department as clrDepartment,Clr_Result as clrResult, 
  Clr_Inspector AS inspID from IMP_SRF_REGULATOR_CLR_DTL where Srf_No=#srfNoDisp#
</select>
 
<select id="getHoldInd" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO" resultClass="java.lang.String">
		select HOLD_SRF_IND as holdSrf from IMP_SRF where Srf_No=#srfNoDisp#	
</select>
 
<update id="updateHoldSRF" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
		update imp_srf set HOLD_SRF_IND='Y', HOLD_SRF_DATE=sysdate, LM_USER_ID = NVL(#userID#,'SYSTEM'), LM_DATE = SYSDATE where Srf_No=#srfNoDisp#	
</update>

<update id="updateUnHoldSRF" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
		update imp_srf set HOLD_SRF_IND='N',HOLD_SRF_DATE=null, UNLOCK_SRF_DATE=sysdate , LM_USER_ID = NVL(#userID#,'SYSTEM'), LM_DATE = SYSDATE  where Srf_No=#srfNoDisp#	
</update>

<update id="cargoReleaseOK" parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
		update imp_srf set CARGO_RELEASE_STS='OK', cargo_release=sysdate, LM_USER_ID = NVL(#userId#,'SYSTEM'), LM_DATE = SYSDATE where Srf_No=#srfNoDisp#	
</update>


<select id="getImageTransIdESRF" parameterClass="java.lang.String"  resultClass="java.lang.String">
      SELECT img_trans_id FROM imp_srf where Srf_No=#srfNO#
</select>
	
<select id="checkForCdifExists" parameterClass="java.lang.String"  resultClass="java.lang.String">
	SELECT cdif_no FROM IMP_cdif where srf_no = #srfNO# and void_date is  null and rownum = 1
</select>


<select id="getCdifCreatedUser" parameterClass="java.lang.String"  resultClass="java.lang.String">
	SELECT cr_user_id FROM IMP_cdif where cdif_no = #cdifNo#  and rownum = 1
</select>


<update id="updatetransactionIdSRF" parameterClass="map">
		update imp_srf set img_trans_id=#transactionID# where Srf_No=#srfno#
</update>

<select id="getImageLocation"  parameterClass="java.lang.String"  resultClass="cargo.cms.extsvc.bo.CDPImportIncomingBO">
	     select Img_Name AS imageName,Img_Path AS imagePath,Img_Session_Id AS imageTraID, Mask_Img_Fun AS maskFun from FW_IMAGE_STORE where IMG_SESSION_ID=#imagetraID#
	     and   Mask_Img_Fun is null order by img_upload_date desc
	</select>
	
	
	
	<insert id="insertFWImageStore_Mobile_srf" parameterClass="map">
		<![CDATA[
						INSERT INTO FW_IMAGE_STORE(
			IMG_ID,	
			IMG_SIZE, IMG_NAME, IMG_SESSION_ID, IMG_PATH, 
			IMG_UPLOAD_DATE,VIDEO_YN,UPLOAD_STAT,TAG,MASK_IMG_FUN
			)
			VALUES(
			FW_IMAGE_SEQ.NEXTVAL, 
			#fileSize#, #fileName#, #imgtransactionID#, #folderPath#, 
			CURRENT_TIMESTAMP,#videoYN#,#uploadSta#,#tag#,#maskImgFun#
			)
		]]>
	</insert>
	
	
	<select id="getIssueSRFQueueListAAHK"  parameterClass="java.lang.String"  resultClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">		
		 SELECT 
			  agent_name as agentName,
			  tr_no as trNo,
			  agent_code as agentId,
			  AWB_NO as awbNo, 
			  SUBSTR(TRIM(AWB_NO),1,3)||'-'||SUBSTR(TRIM(AWB_NO),4) as awbNoDisp,
			  TO_CHAR(awb_date,'DDMONYY') as awbDate,
			  hkid as hkId,
			  auth_rep_name as authName,
			  request_id as esrfPaymentID,
			  agent_hkid as nationalID,
  			  agent_full_name as agentFullName,
  			  HKID_HASH as nationalIdHash
			FROM imp_payment_process_queue
			WHERE status   = 'P'
			AND comp_date IS NULL  AND (sysdate - 10/1400) &gt; CR_DATE  ORDER BY CR_DATE ASC
	</select>

	<select id="getIssueSRFTxnListAAHK"  parameterClass="java.lang.String"  resultClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">		
		 SELECT 
			  agent_name as agentName,
			  tr_no as trNo,
			  agent_code as agentId,
			  AWB_NO as awbNo, 
			  SUBSTR(TRIM(AWB_NO),1,3)||'-'||SUBSTR(TRIM(AWB_NO),4) as awbNoDisp,
			  TO_CHAR(awb_date,'DDMONYY') as awbDate,
			  hkid as hkId,
			  auth_rep_name as authName,
			  request_id as esrfPaymentID,
			  agent_hkid as nationalID,
  			  agent_full_name as agentFullName,
  			  HKID_HASH as nationalIdHash
			FROM imp_payment_process_queue
			WHERE status   = 'P'
			AND comp_date IS NULL AND TXN_NO = #txnNo# ORDER BY CR_DATE ASC
	</select>
	
<select id="getIssueSRFListAAHK"  parameterClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO"  resultClass="cargo.cms.imprt.bo.IssueConsSrfInfoBO">
	 	<![CDATA[
			SELECT * FROM (
					SELECT list.*,
					(CASE  
                		   WHEN (list.recd_pcs != NVL((list.pcs + CASE WHEN list.CIR_PROC_USER IS NULL THEN 0 ELSE CASE WHEN list.cirPcsType = 'SL' THEN -1 * list.cirPc ELSE list.cirPc END END),'0')) THEN 'IMPRT_167' 
					       WHEN (TO_CHAR(list.recd_wt,'99999990D9') != TO_CHAR(NVL((TO_NUMBER(NVL(list.wt,0)) + CASE WHEN list.CIR_PROC_USER IS NULL THEN 0 ELSE CASE WHEN list.cirWtType = 'SL' THEN -1 * TO_NUMBER(NVL(list.cirWt,0)) ELSE TO_NUMBER(NVL(list.cirWt,0)) END END),0),'99999990D9')) THEN 'IMPRT_167' 
					       WHEN list.strCC IS NULL THEN 'IMPRT_170'  
                 		   WHEN (SELECT COUNT(1) FROM MAST_CONSTRAINT_CODE A WHERE CODE = list.strCC AND IMP_SRF_ISS_YN = 'N') > 0 THEN 'IMPRT_172' 
		                   WHEN (list.pcs != list.recd_pcs or list.wt != list.recd_wt) AND (
			                    Select count(1)
			                      from CST_SUBM s
			                      join cst_bd_disc c on s.Flt_KEY = c.Flt_KEY and s.FLT_DATE = c.FLT_DATE and 
			                          s.Flt_Type = c.Flt_Type and s.ver_no = c.ver_no 
			                      where s.Flt_KEY =  list.flightkey and S.FLT_DATE = list.flt_DATE and 
			                          s.Flt_Type = 'I' and s.REC_TYPE = 'BDS' and nvl(s.BD_COMPLETE, 'N') = 'N' and s.send_status = 'A' and c.AWB_NO = list.awbno and
			                          c.brkdn_code in ('LP', 'LC', 'SP', 'SC') ) = 0 THEN 'IMPRT_168'  ELSE 'N' END) disableInd
					FROM (
					 					  
					  SELECT 'Normal' as srfType,awb.AGENT_CUST_NO,shp.carr_code,shp.awb_no awbNo,
					  SUBSTR(shp.AWB_NO,1,3)
					  ||'-'
					  ||SUBSTR(shp.AWB_NO,4) AS awbNoDisp ,
					  TO_CHAR(shp.awb_date,'DDMONYY') awbDate,
					  a.awb_type awbType,
					  shp.flt_key flightKey,
					  shp.recd_pcs as recd_pcs,
					  TRIM(TO_CHAR(shp.recd_wt,'99999990D9')) as recd_wt,
					  shp.manifest_pcs pcs,
					  TRIM(TO_CHAR(shp.manifest_wt, '99999990D9')) wt,
					  awb.doc_chk_comp docChkCompl,
					  awb.doc_chk_req docChkReqd,
					  shp.flt_date,
					  awb.SPL_CODE1 AS splCode1,
					  awb.SPL_CODE2 AS splCode2,
					  awb.SPL_CODE3 AS splCode3,
					  awb.SPL_CODE4 AS splCode4,
					  awb.SPL_CODE5 AS splCode5,
					  awb.SPL_CODE6 AS splCode6,
					  awb.SPL_CODE7 AS splCode7,
					  awb.SPL_CODE8 AS splCode8,
					  awb.SPL_CODE9 AS splCode9,
					  awb.CONTENT   AS contents ,
					  awb.lock_ind lockInd,
					    (SELECT cc_code
					    FROM
					  (SELECT t1.cc_code
					  FROM V_CST_IMP_CC_CODE_AWB t1
					  WHERE awb_no                             = SHP.AWB_NO
					  AND FLT_KEY=SHP.FLT_KEY
					  AND TO_CHAR(FLT_DATE,'DDMONYY')=SHP.FLT_DATE
					  AND NVL(hawb_no, '000000000000000000') = '000000000000000000'
					  AND t1.flt_key NOT LIKE 'NB%'
					  ) WHERE rownum = 1)  AS strCC,
					  TO_CHAR(shp.FLT_DATE,'DDMONYY') AS flightDate,
					  awb.APPNTD_AGENT                AS agentName,
					  (SELECT SUM(inv.locn_pcs)
					  FROM awb_inventory inv
					  WHERE inv.awb_no = shp.awb_no
					  AND inv.awb_date = shp.awb_date
					  AND inv.flt_key  = shp.flt_key
					  AND inv.flt_date = shp.flt_date
					  ) AS invenPc,
					  (SELECT TRIM(TO_CHAR(SUM(inv.locn_wt), '99999990D9'))
					  FROM awb_inventory inv
					  WHERE inv.awb_no = shp.awb_no
					  AND inv.awb_date = shp.awb_date
					  AND inv.flt_key  = shp.flt_key
					  AND inv.flt_date = shp.flt_date
					  )             AS invenWt,
					  awb.CHRG_MODE AS chargeMode,
					   (
					  CASE
					    WHEN (SELECT COUNT(*)
					      FROM CUST_UNDERTAKING CU
					      WHERE CU.AGENT_CODE =
					        (SELECT AGENT_CODE FROM AWB WHERE AWB_DATE=shp.awb_date AND AWB_NO=shp.awb_no
					        )
					      AND CU.CARR_CODE =
					        (SELECT CARR_CODE FROM AWB WHERE AWB_DATE=shp.awb_date AND AWB_NO=shp.awb_no
					        )
					      AND awb.AWB_DATE BETWEEN CU.EFF_FROM AND CU.EFF_TO) > 0
					    THEN 'Y'
					    ELSE 'N'
					  END)                                     AS licUnder,
					  shp.CIR_PROC_USER as CIR_PROC_USER,
					  shp.cir_pcs_type                          AS cirPcsType,
					  shp.cir_wt_type                          AS cirWtType,
					  shp.cir_wt_type                          AS cirType,
					  shp.cir_pcs                              AS cirPc,
					  TRIM(TO_CHAR(shp.cir_wt, '99999990D9')) AS cirWt,
					  (CASE WHEN (SELECT COUNT(*) FROM CUST_AIRL_SPL_CODE WHERE SPL_CODE=awb.SPL_CODE1 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=awb.SPL_CODE2 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=awb.SPL_CODE3 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=awb.SPL_CODE4 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=awb.SPL_CODE5 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=awb.SPL_CODE6 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=awb.SPL_CODE7 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=awb.SPL_CODE8 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=awb.SPL_CODE9 AND SPL_TYPE='SPL_VAL') > 0 THEN 'Y' ELSE 'N' END)  AS valInd,
					  (CASE WHEN (SELECT COUNT(1) FROM CUST_AGENT_LEVEL_CRD WHERE CUST_NO=awb.AGENT_CUST_NO AND to_date(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') > = to_date(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') AND NVL(upper(Status),'**')                             <> 'VOID') > 0 THEN 'Y' ELSE
					    CASE WHEN (SELECT COUNT(1) FROM CUST_AGENT_AIRL_CREDIT WHERE CUST_NO=awb.AGENT_CUST_NO AND to_date(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') > = to_date(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') AND NVL(status,'*')                                     <> 'VOID') > 0 THEN 'Y' ELSE
					    CASE WHEN (SELECT COUNT(1) FROM CUST_AGENT_VIRTUAL_CREDIT WHERE CUST_NO=awb.AGENT_CUST_NO AND to_date(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') > = to_date(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') AND NVL(upper(Status),'**')                             <> 'VOID' ) > 0 THEN 'Y' ELSE 'N' END END END)                                      AS creditAgent,
					  (SELECT COUNT(b.hawb_no)
					  FROM EDI_FHL A,
					    EDI_FHL_HAWB B
					  WHERE AWB_NO = shp.awb_no
					  AND awb_date = shp.awb_date
					  AND A.TR_NO  =B.TR_NO
					  ) AS fhlCount,
					  (
					  CASE
					    WHEN (SELECT sum(coun) from (
					        SELECT decode(count(1),0,0,1) coun
					        FROM IMP_CHRG_ITM_REV_AWB
					        WHERE AWB_NO = shp.awb_no
					        AND AWB_DATE = shp.awb_date
					        AND ITM_CODE = 'TCPREP'
					        UNION
					        SELECT decode(count(1),0,0,2) coun
					        FROM IMP_CHRG_ITM_REV_AWB
					        WHERE AWB_NO = shp.awb_no
					        AND AWB_DATE = shp.awb_date
					        AND ITM_CODE = 'TCBULK')) > 2
					    THEN 'MIX'
					    ELSE
					      CASE
					        WHEN (SELECT COUNT(1)
					          FROM IMP_CHRG_ITM_REV_AWB
					          WHERE AWB_NO =shp.awb_no
					          AND AWB_DATE =shp.awb_date
					          AND ITM_CODE ='TCPREP') > 0
					        THEN 'PPK'
					        ELSE
					          CASE
					            WHEN (SELECT COUNT(1)
					              FROM IMP_CHRG_ITM_REV_AWB
					              WHERE AWB_NO =shp.awb_no
					              AND AWB_DATE =shp.awb_date
					              AND ITM_CODE = 'TCBULK') > 0
					            THEN 'Bulk'
					            ELSE ''
					          END
					      END
					  END) AS tcType
					FROM imp_car_shp shp,
					  imp_car_awb awb,
					  awb a
					WHERE shp.awb_no   = awb.awb_no
					AND shp.awb_date   = awb.awb_date
					AND shp.awb_no     = a.awb_no
					AND shp.awb_date   = a.awb_date
					AND a.awb_closed_yn='N'
					AND EXISTS
					  (SELECT NULL
					    FROM awb_inventory av
					    WHERE av.awb_no = shp.awb_no
					    AND av.awb_date = shp.awb_date
					    and av.flt_key = shp.flt_key
					    and av.flt_date = shp.flt_date
					    and av.cdif_no is null
					    AND av.locn_pcs > 0
					  )
					AND (shp.awb_no,shp.awb_date,shp.flt_key,shp.flt_date) NOT IN (
					SELECT AWB_NO,TO_CHAR(AWB_DATE,'DDMONYY'),FLT_KEY,TO_CHAR(FLT_DATE,'DDMONYY') FROM BATCH_JOB_HD JOBHD, batch_job_dtl JOBDTL WHERE JOBDTL.JOB_ID = JOBHD.JOB_ID AND JOBHD.JOB_TYPE='SRF' AND jobdtl.comp_date IS NULL
					UNION ALL
					SELECT IMPSRF.AWB_NO,TO_CHAR(IMPSRF.AWB_DATE,'DDMONYY'),IMPSRFFLT.FLT_KEY,TO_CHAR(IMPSRFFLT.FLT_DATE,'DDMONYY') FROM IMP_SRF IMPSRF,IMP_SRF_FLT IMPSRFFLT WHERE IMPSRF.AWB_NO =shp.awb_no AND IMPSRF.AWB_DATE = shp.awb_date 
					AND IMPSRFFLT.FLT_KEY=shp.flt_key AND IMPSRFFLT.FLT_DATE = shp.flt_date AND IMPSRFFLT.SRF_NO = IMPSRF.SRF_NO AND SYSDATE < IMPSRF.SRF_EXPY_DATE AND IMPSRF.STATUS = 'ISSUED'
					)
					AND a.awb_type='I'
					AND a.AWB_CLOSED_YN='N' 
					AND shp.CAR_CREATED = 'Y'
					UNION ALL
					SELECT 'CDIF' AS srfType,car.AGENT_CUST_NO,'' carr_code,a.awb_no awbNo,
					  SUBSTR(a.AWB_NO,1,3)
					  ||'-'
					  ||SUBSTR(a.AWB_NO,4) AS awbNoDisp,
					  TO_CHAR(a.awb_date,'DDMONYY') awbDate,
					  a.awb_type awbType,
					  C.CDIF_NO flightKey,
					  0 as recd_pcs,
					  TRIM(TO_CHAR('0','99999990D9')) as recd_wt,
					  0 pcs,
					  TRIM(TO_CHAR(0, '99999990D9')) wt,
					  'N/A' docChkCompl,
					  'N/A' docChkReqd,
					  C.CDIF_DATE AS flt_date,
					    a.SPL_CODE1 AS splCode1,
					  a.SPL_CODE2 AS splCode2,
					  a.SPL_CODE3 AS splCode3,
					  a.SPL_CODE4 AS splCode4,
					  a.SPL_CODE5 AS splCode5,
					  a.SPL_CODE6 AS splCode6,
					  a.SPL_CODE7 AS splCode7,
					  a.SPL_CODE8 AS splCode8,
					  a.SPL_CODE9 AS splCode9,
					  a.CONTENT   AS contents ,
					  CAR.lock_ind lockInd,
					 (SELECT cc_code
					    FROM
					  (SELECT t1.cc_code
					  FROM V_CST_IMP_CC_CODE_AWB t1
					  WHERE awb_no                             = A.AWB_NO
					  AND NVL(hawb_no, '000000000000000000') = '000000000000000000'
					  AND t1.flt_key NOT LIKE 'NB%'
					  ) WHERE rownum = 1)                           AS strCC,
					  TO_CHAR(C.CDIF_DATE,'DDMONYY') AS flightDate,
					  CAR.APPNTD_AGENT               AS agentName,
					  CH.PCS                         AS invenPc,
					  TRIM(TO_CHAR(CH.WT, '99999990D9'))                          AS invenWt,
					  'N/A'                          AS chargeMode,
					    (
					  CASE
					    WHEN (SELECT COUNT(*)
					      FROM CUST_UNDERTAKING CU
					      WHERE CU.AGENT_CODE =
					        (SELECT AGENT_CODE FROM AWB WHERE AWB_DATE=a.awb_date AND AWB_NO=a.awb_no
					        )
					      AND CU.CARR_CODE =
					        (SELECT CARR_CODE FROM AWB WHERE AWB_DATE=a.awb_date AND AWB_NO=a.awb_no
					        )
					      AND a.AWB_DATE BETWEEN CU.EFF_FROM AND CU.EFF_TO) > 0
					    THEN 'Y'
					    ELSE 'N'
					  END)  AS licUnder,
					  '' as CIR_PROC_USER,
					  'N/A'                          AS cirPcsType,
					  'N/A'                          AS cirWtType,
					  'N/A' AS cirType,
					  0 AS cirPc,
					  TRIM(TO_CHAR('0','99999990D9')) AS cirWt,
					  (CASE WHEN (SELECT COUNT(*) FROM CUST_AIRL_SPL_CODE WHERE SPL_CODE=car.SPL_CODE1 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=car.SPL_CODE2 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=car.SPL_CODE3 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=car.SPL_CODE4 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=car.SPL_CODE5 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=car.SPL_CODE6 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=car.SPL_CODE7 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=car.SPL_CODE8 AND SPL_TYPE='SPL_VAL' OR SPL_CODE=car.SPL_CODE9 AND SPL_TYPE='SPL_VAL') > 0 THEN 'Y' ELSE 'N' END)                             AS valInd,
					  (CASE WHEN (SELECT COUNT(1) FROM CUST_AGENT_LEVEL_CRD WHERE CUST_NO=CAR.AGENT_CUST_NO AND to_date(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') > = to_date(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') AND NVL(upper(Status),'**')                             <> 'VOID') > 0 THEN 'Y' ELSE
					    CASE WHEN (SELECT COUNT(1) FROM CUST_AGENT_AIRL_CREDIT WHERE CUST_NO=CAR.AGENT_CUST_NO AND to_date(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') > = to_date(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') AND NVL(status,'*')                                     <> 'VOID') > 0 THEN 'Y' ELSE
					    CASE WHEN (SELECT COUNT(1) FROM CUST_AGENT_VIRTUAL_CREDIT WHERE CUST_NO=CAR.AGENT_CUST_NO AND to_date(TO_CHAR(CR_EFF_DATE_TO,'DDMONYY'),'DDMONYY') > = to_date(TO_CHAR(SYSDATE,'DDMONYY'),'DDMONYY') AND NVL(upper(Status),'**')                             <> 'VOID' ) > 0 THEN 'Y' ELSE 'N' END END END)                                      AS creditAgent,
					  (SELECT COUNT(HAWB.hawb_no)
					    FROM EDI_FHL HD,
					      EDI_FHL_HAWB HAWB
					    WHERE HD.AWB_NO = a.awb_no
					    AND HD.awb_date = a.awb_date
					    AND HAWB.TR_NO  =HD.TR_NO
					  )     AS fhlCount,
					  'N/A' AS tcType 
					FROM IMP_CDIF C
					JOIN AWB a
					ON c.awb_no         = a.awb_no
					AND c.awb_date      = a.awb_date
					AND a.awb_closed_yn = 'N'
					AND a.awb_type      ='I'
					JOIN IMP_CAR_AWB CAR
					ON CAR.awb_no    = a.awb_no
					AND CAR.awb_date = a.awb_date
					JOIN
					  (SELECT CDIF_NO,
					    SUM(NVL(CDIF_UTL_PCS, 0) + NVL(CDIF_PS_PCS, 0) + NVL(CDIF_DT_PCS, 0)+ NVL(CDIF_FOLLOW_ON_PCS, 0)) PCS,
					    SUM(NVL(CDIF_UTL_WT, 0)  + NVL(CDIF_PS_WT, 0) + NVL(CDIF_DT_WT, 0) + NVL(CDIF_FOLLOW_ON_WT, 0)) WT
					  FROM IMP_CDIF_HAWB
					  GROUP BY CDIF_NO
					  ) CH
					ON CH.CDIF_NO = C.CDIF_NO
					LEFT JOIN
					  (SELECT CDIF_NO,
					    MAX(SEQ_NO) SEQ_NO
					  FROM AWB_INVENTORY
					  WHERE CDIF_NO IS NOT NULL
					  GROUP BY CDIF_NO
					  ) AM
					ON AM.CDIF_NO = C.CDIF_NO
					LEFT JOIN AWB_INVENTORY AI
					ON AI.SEQ_NO = AM.SEQ_NO
					WHERE C.VOID_USER IS NULL 
					AND (A.awb_no,A.awb_date,c.CDIF_NO,TRUNC(c.CDIF_DATE)) NOT IN (
					SELECT AWB_NO,TO_CHAR(AWB_DATE,'DDMONYY'),FLT_KEY,TO_CHAR(FLT_DATE,'DDMONYY') FROM BATCH_JOB_HD JOBHD, batch_job_dtl JOBDTL WHERE JOBDTL.JOB_ID = JOBHD.JOB_ID AND JOBHD.JOB_TYPE='SRF' AND jobdtl.comp_date IS NULL
					UNION ALL
					SELECT IMPSRF.AWB_NO,TO_CHAR(IMPSRF.AWB_DATE,'DDMONYY'),IMPSRFFLT.FLT_KEY,TO_CHAR(IMPSRFFLT.FLT_DATE,'DDMONYY') FROM IMP_SRF IMPSRF,IMP_SRF_FLT IMPSRFFLT WHERE IMPSRF.AWB_NO =A.awb_no AND IMPSRF.AWB_DATE = A.awb_date 
					AND IMPSRFFLT.FLT_KEY=c.CDIF_NO AND IMPSRFFLT.FLT_DATE = TRUNC(c.CDIF_DATE) AND IMPSRFFLT.SRF_NO = IMPSRF.SRF_NO AND SYSDATE < IMPSRF.SRF_EXPY_DATE AND IMPSRF.STATUS = 'ISSUED')
					AND EXISTS
					    (SELECT NULL
					    FROM awb_inventory av
					    WHERE av.awb_no = a.awb_no
					    AND av.awb_date = a.awb_date
					    and av.cdif_no = c.cdif_no
					    and av.cdif_no is not null
					    AND av.locn_pcs > 0)
				) list WHERE 1=1  ]]>
  				AND list.awbNo  = #awbNo#	
  		) A  order by A.awbNo,A.flt_date,A.flightKey
	</select>

	
	<select id="checkSRFHold"  parameterClass="java.lang.String" resultClass="java.lang.Integer">
		select count(1) from imp_srf where  Srf_No=#selectedSRFNo# and Hold_Srf_Ind='Y'				
	</select>
	
	
	<select id="checkCargoRelese"  parameterClass="java.lang.String" resultClass="java.lang.Integer">
		select count(1) from imp_srf where Srf_No=#srfNoDisp# and CARGO_RELEASE_STS is not null and cargo_release is not null				
	</select>
	
	<select id="getAWBDetailsSRF"  parameterClass="java.lang.String" resultClass="cargo.cms.imprt.bo.SRFBO">
		select Awb_No as awbNo, to_char(Awb_Date,'DDMONYY') as awbDate from imp_srf where Srf_No=#esrfNo#				
	</select>
	
	<select id="checkEsrfCargoReleaseStatus"  parameterClass="java.lang.String" resultClass="java.lang.String">
		select DECODE(COUNT(1),0,'N','Y')  from imp_srf where srf_No=#srfNumber# and cargo_release is not null and cargo_release_sts = 'OK'			
	</select>
	
	<select id="srfRegulatorDTL"  parameterClass="cargo.cms.imprt.report.bo.ImpShipmentReleaseReptBO" resultClass="cargo.cms.imprt.report.bo.ImpShipmentReleaseReptBO">
		select distinct Clr_Department AS clrepartment, Clr_Inspector as clrInspector, Clr_Result as clrResult from IMP_SRF_REGULATOR_CLR_DTL 
		 where Srf_No=#sc_srfNo# and Cdif_No is null	and Clr_Result is not null
		 <!-- AND  not exists (select null from IMP_SRF_REGULATOR_CLR_DTL where Srf_No=#sc_srfNo# and Cdif_No is not null) -->			
	</select>
	
	<select id="cdifRegulatorDTL"  parameterClass="java.lang.String" resultClass="cargo.cms.imprt.report.bo.MaintainCDIF556_ReptBO">
		select distinct Clr_Department AS clrepartment, Clr_Inspector as clrInspector , Clr_Result as clrResult 
		from IMP_SRF_REGULATOR_CLR_DTL where cdif_no = #cdifNo# and Clr_Result is not null
		<!--  where srf_no = (SELECT srf_no FROM IMP_CDIF where cdif_no = #cdifNo#)
							AND not exists ( select null from IMP_SRF_REGULATOR_CLR_DTL where Cdif_No= #cdifNo# )
			UNION 
		select Clr_Department AS clrepartment, Clr_Inspector as clrInspector from IMP_SRF_REGULATOR_CLR_DTL where Cdif_No= #cdifNo#		 -->	
	</select>
	
	<select id="sqlSendUpdatedAgentForCarrInd"  parameterClass="java.lang.String"  resultClass="java.lang.String">
		      SELECT nvl(SEND_AGENT_GLS,'N') FROM MAST_CARRIER where CODE = #carrCode#
	 </select>
	
	
	 	
	<select id="checkESRFPost"  parameterClass="java.lang.String" resultClass="java.lang.Integer">
		select count(1) from imp_srf where Srf_No=#srfNoDisp# and Post_Date is not null and Post_User is not null				
	</select>
<select id="imp_checkedInOtherFlight_desktop"  parameterClass="java.util.HashMap"  resultClass="java.lang.Integer">
	<![CDATA[
	 	SELECT COUNT(1)
   		FROM uld_inventory
  		WHERE uld_key      = #uldKey#
  		AND LOC_CODE IS NOT NULL   
		AND CFM_STATUS NOT  IN ('RELEASED','RESERVED')
		AND NOT (flt_key     = #fltKey#
		AND FLT_DATE         = #fltDate#)
		AND flt_type = 'I' and flt_key is not null	
	]]>
	</select>
	<select id="getDupRecFromDollyDTL_Desktop" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
	<![CDATA[
	SELECT COUNT(1) FROM IMP_RAMP_DOLLY_DTL WHERE FLT_KEY=#fltKey# AND FLT_DATE=#fltDate# AND ULD_KEY=#uldKey# and dolly_id != #dollyId#
	]]>
	</select>
	<select id="getSeqNumberFromDollyDTL_Desktop" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
	<![CDATA[
	SELECT MAX(TO_NUMBER(SEQ_NO))+1 FROM IMP_RAMP_DOLLY_DTL WHERE FLT_KEY=#fltKey# AND FLT_DATE=#fltDate# and dolly_id = #dollyId#
	]]>
	</select>
	<insert id="insertrampdollydtl_Desktop" parameterClass="java.util.HashMap" >
	INSERT INTO IMP_RAMP_DOLLY_DTL (DOLLY_ID,FLT_KEY, FLT_DATE,ULD_KEY,SEQ_NO,DAM_IND,EMPTY_IND,EIC_IND,CR_USER_ID , CR_DATE, LM_USER_ID, LM_DATE,COOL_DOLLY_ID,IHOLA_DROP_LOCN,IHOTC_DROP_LOCN) 
	VALUES (#dollyId#,#fltKey#,#fltDate#,#uldKey#,#seqNo#,#damInd#,nvl(#emptyInd#,'N'),nvl(#eicInd#,'N'),#userID#,SYSDATE,#userID#,SYSDATE,#coolDollyId#,#iholaDropLocn#,#ihotcDropLocn#)
	</insert>
	<select id="getCountFromULDInv_Desktop" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
	SELECT COUNT(1) FROM uld_inventory WHERE uld_key = #uldKey#
	</select>
	<insert id="insertrampdollyuldinv_Desktop" parameterClass="java.util.HashMap" >
	INSERT INTO ULD_INVENTORY(ULD_KEY,OWNER_ID,STRG_DATE,LM_DATE,LM_USER_ID,SOURCE_CODE,TARE_WEIGHT,GROSS_WEIGHT,ULD_NO,ULD_TYPE,ULD_CARR,LOC_CODE,OWNED_INV,HANDLING_MODE,EMPTY_FLG,MIX_PPK_IND,TRANSIT_FLG,ULD_UNLOAD,DAM_IND,tr_type) 
			values(#uldKey#,#uldCarr#,sysdate,sysdate,#userID#,'',0,0,#uldNo#,#uldType#,#uldCarr#,'','N','','N','N','N','Y',#damInd#,'UIU')
	</insert>
	
	<update id="updateEsrfEawbPrintInd" parameterClass="cargo.cms.imprt.report.bo.EAWBPrintRept_BO">
		update IMP_CAR_SHP set EAWB_PRINT_YN = 'Y' where awb_no = #awbNo# and awb_date = #awbDate# and flt_key= #fltKey# and flt_date = #fltDate#
	</update>
	
	
	<select id="getCarrierEsrfConfig" parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT NVL(ALLOW_ESRF,'N') FROM mast_carrier where code = #carrierCode# 
	</select>
	
 	<select id="getAgentEsrfConfig" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT DECODE(COUNT(1),0,'N','Y') FROM  
		( SELECT null FROM imp_car_awb WHERE awb_no = #AWB_NO# AND awb_date = #AWB_DATE# AND EXISTS ( SELECT NULL FROM cust_company WHERE code = imp_car_awb.agent_cust_no AND NVL(ALLOW_ESRF_AA,'N') = 'Y')
		  UNION 
		  SELECT null FROM edi_fhl WHERE awb_no = #AWB_NO#  AND awb_date = #AWB_DATE#  AND EXISTS ( SELECT NULL FROM cust_company WHERE code = edi_fhl.FHL_OWNER AND NVL(ALLOW_ESRF_AA,'N') = 'Y') 
		)
 	</select> 
 	
 	<select id="getEligiblityStatusLicenceUndertaking" parameterClass="java.util.HashMap" resultClass="java.lang.String">
 			SELECT DECODE(COUNT(1), 0, '', 'GREEN') as eligibilityStatus FROM CUST_UNDERTAKING CU WHERE 
            CU.AGENT_CODE = (SELECT AGENT_CODE FROM AWB WHERE AWB_NO= #AWB_NO# AND AWB_DATE= #AWB_DATE#) AND 
            CU.CARR_CODE = #CARR# AND  #AWB_DATE# BETWEEN CU.EFF_FROM AND CU.EFF_TO
    </select>

	<select id="getAmberEligibilityStatus" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		WITH HAWB_LST AS ( select MANIFEST_DESC as CONT from edi_fhl_hawb where hawb_no = #HAWB_NO# AND tr_no = (SELECT tr_no FROM edi_fhl WHERE AWB_NO = #AWB_NO# AND AWB_DATE = #AWB_DATE# ) )
		SELECT DECODE(COUNT(1), 0, '', 'AMBER') as eligibilityStatus FROM HAWB_LST WHERE 1 =1 AND CONT is not null and EXISTS (SELECT NULL FROM MAST_ESRF_ELIGIBLE_CONFIG WHERE CONFIG_TYPE = 'C' AND description = CONT )
	</select>
	
	<select id="getGreyEligibilityStatus" parameterClass="java.util.HashMap" resultClass="java.lang.String">
				WITH HAWB_LST AS ( select MANIFEST_DESC as CONT from edi_fhl_hawb where hawb_no = #HAWB_NO# AND tr_no = (SELECT tr_no FROM edi_fhl WHERE AWB_NO = #AWB_NO# AND  AWB_DATE = #AWB_DATE# ) )
                    SELECT DECODE(COUNT(1), 0, '', 'GREY') as eligibilityStatus FROM HAWB_LST WHERE 1 =1 AND CONT  is not null 
                    and  EXISTS (
                      SELECT null  FROM MAST_ESRF_ELIGIBLE_CONFIG where CONFIG_TYPE = 'C' and description like ('%' || CONT  || '%') 
                        UNION
                      SELECT null  FROM MAST_ESRF_ELIGIBLE_CONFIG where CONFIG_TYPE = 'C' and CONT like ('%' || description  || '%') 
                    ) 
	</select>
           
    <select id="getRedEligibilityStatus" parameterClass="java.util.HashMap" resultClass="java.lang.String">
    	SELECT DECODE(COUNT(1), 0, '', 'RED') as eligibilityStatus FROM edi_fhl_hawb awb where hawb_no = #HAWB_NO# 
    	    AND tr_no = (SELECT tr_no FROM edi_fhl WHERE AWB_NO = #AWB_NO# AND AWB_DATE = #AWB_DATE# )
    		and exists (SELECT null  FROM MAST_ESRF_ELIGIBLE_CONFIG where CONFIG_TYPE = 'S' and description in (awb.Spl_Code1,awb.Spl_Code2,awb.Spl_Code3,awb.Spl_Code4,awb.Spl_Code5,awb.Spl_Code6,awb.Spl_Code7,awb.Spl_Code8,awb.Spl_Code9))
    </select>   
             
    <select id="checkEsrfHawbELStatusExists" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		SELECT COUNT(*) FROM IMP_HAWB_ESRF_EL_STATUS where AWB_NO = #AWB_NO# AND AWB_DATE = #AWB_DATE# AND hawb_no = #HAWB_NO# 
	</select>         
        
    <select id="getHawbCont" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		 select MANIFEST_DESC as CONT from edi_fhl_hawb where hawb_no = #HAWB_NO# AND tr_no = (SELECT tr_no FROM edi_fhl WHERE AWB_NO = #AWB_NO# AND AWB_DATE = #AWB_DATE# ) 
	</select> 
	
	<update id="insertEsrfHawbELStatus" parameterClass="java.util.HashMap">
			 INSERT INTO  IMP_HAWB_ESRF_EL_STATUS (TR_NO, AWB_NO, AWB_DATE, HAWB_NO, STATUS, CONTENT, CR_USER_ID, CR_DATE, LM_USER_ID, LM_DATE) 
				VALUES ( IMP_HAWB_ESRF_EL_STS_SEQ.nextval, #AWB_NO#,#AWB_DATE#,#HAWB_NO#, #EL_STATUS#, #CONT# , NVL(#USER#,'SYSTEM'), SYSDATE,NVL(#USER#,'SYSTEM'), SYSDATE)
	</update> 
	
	<insert id="updateEsrfHawbELStatus" parameterClass="java.util.HashMap">
		 UPDATE IMP_HAWB_ESRF_EL_STATUS SET STATUS = #EL_STATUS# , CONTENT = #CONT# , LM_USER_ID = NVL(#USER#,'SYSTEM') , LM_DATE = SYSDATE WHERE AWB_NO = #AWB_NO# AND AWB_DATE = #AWB_DATE# AND hawb_no = #HAWB_NO# 
	</insert>
	
	<select id="getSrfDet"  parameterClass="java.lang.String" resultClass="cargo.cms.imprt.bo.SRFImportIncomingBO" >
	 <![CDATA[
		select ESRF_YN  as esrfyn,
		HOLD_SRF_IND as holdSrf 
		from
		 	imp_srf
		where SRF_NO = #esrfNo#		
		]]>
   </select>
   
   <select id="getCollectionRe" parameterClass="cargo.cms.imprt.bo.SRFImportIncomingBO" resultClass="java.lang.Integer" >
		select count(1) from IMP_SRF  where SRF_NO = #esrfNo# AND CARGO_COLLECTED is null	
  </select>
	
    <select id="getAWBTypeForESRF" parameterClass="java.util.HashMap" resultClass="java.lang.String">
    	SELECT DECODE(hawb_dest,'HKG', 'I', '') FROM edi_fhl_hawb where hawb_no = #HAWB_NO#  AND tr_no = (SELECT tr_no FROM edi_fhl WHERE AWB_NO = #AWB_NO# AND AWB_DATE = #AWB_DATE# )
    </select> 
    
    <select id="chkPrepaymentRecordExists" parameterClass="java.util.HashMap"  resultClass="java.lang.String">
		SELECT TR_NO as trNum FROM BILL_PRE_PAYMENT_DTL where AWB_NO = #awbNo# 
				and awb_date = #awbDate# and SRF_NO is null and rownum =1
	</select>
	
	<select id="chkBundleRecordExists" parameterClass="java.util.HashMap"  resultClass="java.lang.String">
		SELECT dtl.BUNDLE_REF_NO FROM BILL_BUNDLE_PAYMENT_DTL dtl, BILL_BUNDLE_PAYMENT_HD hd WHERE hd.BUNDLE_REF_NO = dtl.BUNDLE_REF_NO  
                 AND AWB_NO = #awbNo# and awb_date = TO_DATE(#awbDate#,'DDMONYY') and trunc(SYSDATE) = trunc(HD.VALIDITY_DATE) AND rownum =1
	</select>
	
	<insert id="updatePrePaymentInfo" parameterClass="java.util.HashMap">
		 UPDATE BILL_PRE_PAYMENT_DTL SET SRF_NO = #srfNo# ,  LM_USER_ID = NVL(#userId#,'SYSTEM') , LM_DATE = SYSDATE 
		 WHERE TR_NO = #trNo#  
	</insert>
	
	<select id="checkPrePayDueDate" parameterClass="java.lang.String"  resultClass="java.lang.Integer">
		SELECT count(1) FROM BILL_PRE_PAYMENT_DTL where  TR_NO = #prePayTrNo# and trunc(SYSDATE) &gt; DUE_DATE
	</select>
	
	<select id="checkChargesWithPrePayAmt" parameterClass="java.util.HashMap"  resultClass="java.lang.Integer">
		SELECT count(1) FROM BILL_PRE_PAYMENT_DTL where  TR_NO = #prePayTrNo#  and  TOTAL_AMT &lt; nvl(#totalCharges#,0)
	</select>
		<select id="getCourierConfigSplCode" parameterClass="java.util.HashMap"  resultClass="java.lang.String">
		SELECT STRAGG(STRINGDELIM(SPL_CODE, ',')) FROM(
		SELECT DISTINCT SPL_CODE FROM CUST_AIRL_SPL_CODE SPLCODE, AWB AWB 
		WHERE SPLCODE.SPL_TYPE='SPL_COURIER_SHC'
		AND SPLCODE.CARR_CODE = AWB.CARR_CODE
		AND AWB.AWB_NO = #awbNo#
		AND AWB.AWB_DATE = #awbDate#)
	</select>
</sqlMap>